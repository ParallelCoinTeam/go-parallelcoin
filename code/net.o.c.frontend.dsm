;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2018-06-10 00:19:48
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .text
; function: instance_of_cnetcleanup at 0x0 -- 0x3
0x0:        83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x3 -- 0x8
0x3:        65 8b 15 14 00                                     |e....           |
; function: function_8 at 0x8 -- 0x9
; data inside code section at 0x9 -- 0x10
0x9:        00 89 54 24 1c 31 d2                               |..T$.1.         |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv at 0x10 -- 0x11
; data inside code section at 0x11 -- 0x18
0x11:       c0 74 08 89 04 24 e8                               |.t...$.         |
; dynamically linked function: _ZdlPv at 0x18 -- 0x19
; data inside code section at 0x19 -- 0x20
0x19:       ff ff ff 8b 44 24 1c                               |....D$.         |
; function: ~clone_impl at 0x20 -- 0x21
; data inside code section at 0x21 -- 0x31
0x21:       33 05 14 00 00 00 75 04  83 c4 2c c3 8d 76 00 e8   |3.....u...,..v..|
; dynamically linked function: __stack_chk_fail at 0x31 -- 0x32
; data inside code section at 0x32 -- 0x34
0x32:       ff ff                                              |..              |
; function: ~pthread_mutex_scoped_lock at 0x34 -- 0x35
; data inside code section at 0x35 -- 0x40
0x35:       90 8d 76 00 8d bc 27 00  00 00 00                  |..v...'....     |
; function: _Vector_base at 0x40 -- 0x41
; data inside code section at 0x41 -- 0x84
0x41:       ec 2c 89 5c 24 24 89 c3  65 a1 14 00 00 00 89 44   |.,.\$$..e......D|
0x51:       24 1c 31 c0 85 d2 89 74  24 28 c7 03 00 00 00 00   |$.1....t$(......|
0x61:       c7 43 04 00 00 00 00 c7  43 08 00 00 00 00 74 3f   |.C......C.....t?|
0x71:       81 fa ff ff ff 3f 77 42  8d 34 95 00 00 00 00 89   |.....?wB.4......|
0x81:       34 24 e8                                           |4$.             |
; dynamically linked function: _Znwj at 0x84 -- 0x85
; data inside code section at 0x85 -- 0x88
0x85:       ff ff ff                                           |...             |
; function: function_88 at 0x88 -- 0x89
; data inside code section at 0x89 -- 0x9c
0x89:       c6 89 03 89 43 04 8b 44  24 1c 65 33 05 14 00 00   |....C..D$.e3....|
0x99:       00 89 73                                           |..s             |
; function: _ZN5boost5mutex6unlockEv at 0x9c -- 0xa3
0x9c:       08 75 17                           	or byte ptr [ebp + 0x17], dh
0x9f:       8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
; data inside code section at 0xa3 -- 0xa8
0xa3:       8b 74 24 28 83                                     |.t$(.           |
; function: function_a8 at 0xa8 -- 0xb6
0xa8:       c4 2c c3                           	les ebp, ptr [ebx + eax*8]
0xab:       90                                 	nop 
0xac:       8d 74 26 00                        	lea esi, [esi]
0xb0:       31 f6                              	xor esi, esi
0xb2:       31 c0                              	xor eax, eax
0xb4:       eb d2                              	jmp 0x88 <function_88>
; data inside code section at 0xb6 -- 0xb7
0xb6:       e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb7 -- 0xb8
; data inside code section at 0xb8 -- 0xc0
0xb8:       ff ff ff e8 fc ff ff ff                            |........        |
; function: _ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_destroy_nodesEPPS3_S7_ at 0xc0 -- 0xe8
0xc0:       56                                 	push esi
0xc1:       89 d6                              	mov esi, edx
0xc3:       53                                 	push ebx
0xc4:       89 c3                              	mov ebx, eax
0xc6:       83 ec 24                           	sub esp, 0x24
0xc9:       65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xcf:       89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xd3:       31 c0                              	xor eax, eax
0xd5:       39 da                              	cmp edx, ebx
0xd7:       76 18                              	jbe 0xf1 <function_f1>
0xd9:       8d b4 26 00 00 00 00               	lea esi, [esi]
0xe0:       8b 03                              	mov eax, dword ptr [ebx]
0xe2:       83 c3 04                           	add ebx, 4
0xe5:       89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xe8 -- 0xe9
0xe8:       e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xe9 -- 0xea
; data inside code section at 0xea -- 0xf1
0xea:       ff ff ff 39 f3 72 ef                               |...9.r.         |
; function: function_f1 at 0xf1 -- 0x104
0xf1:       8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf5:       65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xfc:       75 06                              	jne 0x104 <_ZN5boost18condition_variable10notify_oneEv>
0xfe:       83 c4 24                           	add esp, 0x24
0x101:      5b                                 	pop ebx
0x102:      5e                                 	pop esi
0x103:      c3                                 	ret 
; function: _ZN5boost18condition_variable10notify_oneEv at 0x104 -- 0x105
; dynamically linked function: __stack_chk_fail at 0x105 -- 0x106
; data inside code section at 0x106 -- 0x110
0x106:      ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_> at 0x110 -- 0x113
0x110:      83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x113 -- 0x13f
0x113:      65 a1 14 00 00 00 89 44  24 1c 31 c0 c7 44 24 0c   |e......D$.1..D$.|
0x123:      e0 9e 02 00 c7 44 24 08  b6 00 00 00 c7 44 24 04   |.....D$......D$.|
0x133:      fc d5 00 00 c7 04 24 8d  9f 00 00 e8               |......$.....    |
; dynamically linked function: __assert_fail at 0x13f -- 0x140
; data inside code section at 0x140 -- 0x150
0x140:      ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0x150 -- 0x17e
0x150:      83 ec 2c                           	sub esp, 0x2c
0x153:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x159:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15d:      31 c0                              	xor eax, eax
0x15f:      c7 44 24 0c 20 a3 02 00            	mov dword ptr [esp + 0xc], 0x2a320 ; "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::copy_into, VoidPtrCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void]"
0x167:      c7 44 24 08 b6 00 00 00            	mov dword ptr [esp + 8], 0xb6
0x16f:      c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x177:      c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x17e -- 0x17f
0x17e:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x17f -- 0x180
; data inside code section at 0x180 -- 0x190
0x180:      ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_> at 0x190 -- 0x19f
0x190:      83 ec 2c                           	sub esp, 0x2c
0x193:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x199:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x19d:      31 c0                              	xor eax, eax
; data inside code section at 0x19f -- 0x1a0
0x19f:      c7                                                 |.               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv at 0x1a0 -- 0x1be
0x1a0:      44                                 	inc esp
0x1a1:      24 0c                              	and al, 0xc
0x1a3:      00 b1 02 00 c7 44                  	add byte ptr [ecx + 0x44c70002], dh
0x1a9:      24 08                              	and al, 8
0x1ab:      b6 00                              	mov dh, 0
0x1ad:      00 00                              	add byte ptr [eax], al
0x1af:      c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x1b7:      c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x1be -- 0x1bf
0x1be:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1bf -- 0x1c0
; data inside code section at 0x1c0 -- 0x1d0
0x1c0:      ff ff ff 8d b6 00 00 00  00 8d bc 27 00 00 00 00   |...........'....|
; function: visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_> at 0x1d0 -- 0x1d3
0x1d0:      83 ec 2c                           	sub esp, 0x2c
; data inside code section at 0x1d3 -- 0x1d4
0x1d3:      65                                                 |e               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEptEv at 0x1d4 -- 0x1fe
0x1d4:      a1 14 00 00 00                     	mov eax, dword ptr [0x14]
0x1d9:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1dd:      31 c0                              	xor eax, eax
0x1df:      c7 44 24 0c a0 8e 02 00            	mov dword ptr [esp + 0xc], 0x28ea0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VoidPtrCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool]"
0x1e7:      c7 44 24 08 b6 00 00 00            	mov dword ptr [esp + 8], 0xb6
0x1ef:      c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x1f7:      c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x1fe -- 0x1ff
0x1fe:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1ff -- 0x200
; data inside code section at 0x200 -- 0x208
0x200:      ff ff ff 8d b6 00 00 00                            |........        |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv at 0x208 -- 0x210
0x208:      00 8d bc 27 00 00                  	add byte ptr [ebp + 0x27bc], cl
0x20e:      00 00                              	add byte ptr [eax], al
; function: __uninitialized_move_a<CAddress*, CAddress*, std::allocator<CAddress> > at 0x210 -- 0x23b
0x210:      55                                 	push ebp
0x211:      57                                 	push edi
0x212:      56                                 	push esi
0x213:      53                                 	push ebx
0x214:      89 c3                              	mov ebx, eax
0x216:      83 ec 1c                           	sub esp, 0x1c
0x219:      89 c8                              	mov eax, ecx
0x21b:      65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x222:      89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x226:      31 c9                              	xor ecx, ecx
0x228:      39 da                              	cmp edx, ebx
0x22a:      74 61                              	je 0x28d
0x22c:      89 de                              	mov esi, ebx
0x22e:      89 c7                              	mov edi, eax
0x230:      85 ff                              	test edi, edi
0x232:      74 3a                              	je 0x26e
0x234:      8b 0e                              	mov ecx, dword ptr [esi]
0x236:      89 0f                              	mov dword ptr [edi], ecx
0x238:      8b 4e 04                           	mov ecx, dword ptr [esi + 4]
; data inside code section at 0x23b -- 0x23c
0x23b:      89                                                 |.               |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEptEv at 0x23c -- 0x26d
0x23c:      4f                                 	dec edi
0x23d:      04 8b                              	add al, 0x8b
0x23f:      4e                                 	dec esi
0x240:      08 89 4f 08 8b 4e                  	or byte ptr [ecx + 0x4e8b084f], cl
0x246:      0c 89                              	or al, 0x89
0x248:      4f                                 	dec edi
0x249:      0c 8b                              	or al, 0x8b
0x24b:      4e                                 	dec esi
0x24c:      10 89 4f 10 8b 4e                  	adc byte ptr [ecx + 0x4e8b104f], cl
0x252:      14 89                              	adc al, 0x89
0x254:      4f                                 	dec edi
0x255:      14 8b                              	adc al, 0x8b
0x257:      4e                                 	dec esi
0x258:      18 89 4f 18 8b 4e                  	sbb byte ptr [ecx + 0x4e8b184f], cl
0x25e:      1c 89                              	sbb al, 0x89
0x260:      4f                                 	dec edi
0x261:      1c 8b                              	sbb al, 0x8b
0x263:      6e                                 	outsb dx, byte ptr [esi]
0x264:      20 89 6f 20 8b 6e                  	and byte ptr [ecx + 0x6e8b206f], cl
0x26a:      24 89                              	and al, 0x89
0x26c:      6f                                 	outsd dx, dword ptr [esi]
; data inside code section at 0x26d -- 0x270
0x26d:      24 83 c6                                           |$..             |
; function: _ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv at 0x270 -- 0x2a2
0x270:      28 83 c7 28 39 d6                  	sub byte ptr [ebx - 0x29c6d739], al
0x276:      75 b8                              	jne 0x230
0x278:      83 c3 28                           	add ebx, 0x28
0x27b:      29 de                              	sub esi, ebx
0x27d:      c1 ee 03                           	shr esi, 3
0x280:      69 f6 cd cc cc 0c                  	imul esi, esi, 0xccccccd
0x286:      8d 14 b6                           	lea edx, [esi + esi*4]
0x289:      8d 44 d0 28                        	lea eax, [eax + edx*8 + 0x28]
0x28d:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x291:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x298:      75 08                              	jne 0x2a2 <_ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv+0x31>
0x29a:      83 c4 1c                           	add esp, 0x1c
0x29d:      5b                                 	pop ebx
0x29e:      5e                                 	pop esi
0x29f:      5f                                 	pop edi
0x2a0:      5d                                 	pop ebp
0x2a1:      c3                                 	ret 
; data inside code section at 0x2a2 -- 0x2a3
0x2a2:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2a3 -- 0x2a4
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSB_EEEEENS1_5mutexEEEEptEv at 0x2a4 -- 0x2a5
; data inside code section at 0x2a5 -- 0x2b0
0x2a5:      ff ff 89 f6 8d bc 27 00  00 00 00                  |......'....     |
; function: __uninitialized_copy_a<__gnu_cxx::__normal_iterator<const std::basic_string<char>*, std::vector<std::basic_string<char> > >, std::basic_string<char>*, std::basic_string<char> > at 0x2b0 -- 0x2d8
0x2b0:      55                                 	push ebp
0x2b1:      89 cd                              	mov ebp, ecx
0x2b3:      57                                 	push edi
0x2b4:      89 d7                              	mov edi, edx
0x2b6:      56                                 	push esi
0x2b7:      53                                 	push ebx
0x2b8:      83 ec 2c                           	sub esp, 0x2c
0x2bb:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2c2:      89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x2c6:      31 d2                              	xor edx, edx
0x2c8:      39 f8                              	cmp eax, edi
0x2ca:      74 35                              	je 0x301 <function_301>
0x2cc:      89 c6                              	mov esi, eax
0x2ce:      89 cb                              	mov ebx, ecx
0x2d0:      85 db                              	test ebx, ebx
0x2d2:      74 0c                              	je 0x2e0 <function_2e0>
0x2d4:      89 74 24 04                        	mov dword ptr [esp + 4], esi
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSB_bEEEEENS1_5mutexEEEEptEv at 0x2d8 -- 0x2db
0x2d8:      89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2db -- 0x2dc
0x2db:      e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x2dc -- 0x2dd
; data inside code section at 0x2dd -- 0x2e0
0x2dd:      ff ff ff                                           |...             |
; function: function_2e0 at 0x2e0 -- 0x301
0x2e0:      83 c6 04                           	add esi, 4
0x2e3:      83 c3 04                           	add ebx, 4
0x2e6:      39 f7                              	cmp edi, esi
0x2e8:      75 e6                              	jne 0x2d0
0x2ea:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2ee:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2f5:      89 d8                              	mov eax, ebx
0x2f7:      75 0c                              	jne 0x305 <function_305>
0x2f9:      83 c4 2c                           	add esp, 0x2c
0x2fc:      5b                                 	pop ebx
0x2fd:      5e                                 	pop esi
0x2fe:      5f                                 	pop edi
0x2ff:      5d                                 	pop ebp
0x300:      c3                                 	ret 
; function: function_301 at 0x301 -- 0x305
0x301:      89 cb                              	mov ebx, ecx
0x303:      eb e5                              	jmp 0x2ea
; function: function_305 at 0x305 -- 0x306
; dynamically linked function: __stack_chk_fail at 0x306 -- 0x307
; data inside code section at 0x307 -- 0x30c
0x307:      ff ff ff 89 04                                     |.....           |
; function: _ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_state17connection_bodiesEv at 0x30c -- 0x30e
0x30c:      24 e8                              	and al, 0xe8
; dynamically linked function: __cxa_begin_catch at 0x30e -- 0x30f
; data inside code section at 0x30f -- 0x313
0x30f:      ff ff ff 39                                        |...9            |
; function: function_313 at 0x313 -- 0x315
0x313:      eb 74                              	jmp 0x389
; data inside code section at 0x315 -- 0x31d
0x315:      0f 89 2c 24 83 c5 04 e8                            |..,$....        |
; dynamically linked function: _ZNSsD1Ev at 0x31d -- 0x31e
; data inside code section at 0x31e -- 0x322
0x31e:      ff ff ff 39                                        |...9            |
; function: function_322 at 0x322 -- 0x324
0x322:      eb 75                              	jmp 0x399
; data inside code section at 0x324 -- 0x326
0x324:      f1 e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0x326 -- 0x327
; data inside code section at 0x327 -- 0x32b
0x327:      ff ff ff 89                                        |....            |
; function: function_32b at 0x32b -- 0x32c
0x32b:      c3                                 	ret 
; data inside code section at 0x32c -- 0x32d
0x32c:      e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x32d -- 0x32e
; data inside code section at 0x32e -- 0x335
0x32e:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x335 -- 0x336
; data inside code section at 0x336 -- 0x340
0x336:      ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: __uninitialized_move_a<CInv*, CInv*, std::allocator<CInv> > at 0x340 -- 0x374
0x340:      55                                 	push ebp
0x341:      57                                 	push edi
0x342:      56                                 	push esi
0x343:      53                                 	push ebx
0x344:      89 c3                              	mov ebx, eax
0x346:      83 ec 1c                           	sub esp, 0x1c
0x349:      89 c8                              	mov eax, ecx
0x34b:      65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x352:      89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x356:      31 c9                              	xor ecx, ecx
0x358:      39 da                              	cmp edx, ebx
0x35a:      74 5b                              	je 0x3b7
0x35c:      89 de                              	mov esi, ebx
0x35e:      89 c7                              	mov edi, eax
0x360:      85 ff                              	test edi, edi
0x362:      74 34                              	je 0x398
0x364:      8b 0e                              	mov ecx, dword ptr [esi]
0x366:      89 0f                              	mov dword ptr [edi], ecx
0x368:      8b 4e 04                           	mov ecx, dword ptr [esi + 4]
0x36b:      89 4f 04                           	mov dword ptr [edi + 4], ecx
0x36e:      8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x371:      89 4f 08                           	mov dword ptr [edi + 8], ecx
; function: _ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE16invocation_state17connection_bodiesEv at 0x374 -- 0x398
0x374:      8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0x377:      89 4f 0c                           	mov dword ptr [edi + 0xc], ecx
0x37a:      8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0x37d:      89 4f 10                           	mov dword ptr [edi + 0x10], ecx
0x380:      8b 4e 14                           	mov ecx, dword ptr [esi + 0x14]
0x383:      89 4f 14                           	mov dword ptr [edi + 0x14], ecx
0x386:      8b 4e 18                           	mov ecx, dword ptr [esi + 0x18]
0x389:      89 4f 18                           	mov dword ptr [edi + 0x18], ecx
0x38c:      8b 6e 1c                           	mov ebp, dword ptr [esi + 0x1c]
0x38f:      89 6f 1c                           	mov dword ptr [edi + 0x1c], ebp
0x392:      8b 6e 20                           	mov ebp, dword ptr [esi + 0x20]
0x395:      89 6f 20                           	mov dword ptr [edi + 0x20], ebp
; data inside code section at 0x398 -- 0x3a3
0x398:      83 c6 24 83 c7 24 39 d6  75 be 83                  |..$..$9.u..     |
; function: function_3a3 at 0x3a3 -- 0x3a4
0x3a3:      c3                                 	ret 
; data inside code section at 0x3a4 -- 0x3a8
0x3a4:      24 29 de c1                                        |$)..            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv at 0x3a8 -- 0x3cc
0x3a8:      ee                                 	out dx, al
0x3a9:      02 69 f6                           	add ch, byte ptr [ecx - 0xa]
0x3ac:      39 8e e3 38 8d 14                  	cmp dword ptr [esi + 0x148d38e3], ecx
; data inside code section at 0x3b2 -- 0x3b7
0x3b2:      f6 8d 44 90 24                                     |..D.$           |
0x3b7:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x3bb:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3c2:      75 08                              	jne 0x3cc <_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv+0x23>
0x3c4:      83 c4 1c                           	add esp, 0x1c
0x3c7:      5b                                 	pop ebx
0x3c8:      5e                                 	pop esi
0x3c9:      5f                                 	pop edi
0x3ca:      5d                                 	pop ebp
0x3cb:      c3                                 	ret 
; data inside code section at 0x3cc -- 0x3cd
0x3cc:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3cd -- 0x3ce
; data inside code section at 0x3ce -- 0x3dc
0x3ce:      ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27         |......&......'  |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEptEv at 0x3dc -- 0x3e0
0x3dc:      00 00                              	add byte ptr [eax], al
0x3de:      00 00                              	add byte ptr [eax], al
; function: _ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_ at 0x3e0 -- 0x452
0x3e0:      53                                 	push ebx
0x3e1:      89 c1                              	mov ecx, eax
0x3e3:      83 ec 28                           	sub esp, 0x28
0x3e6:      8b 19                              	mov ebx, dword ptr [ecx]
0x3e8:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3ee:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x3f2:      31 c0                              	xor eax, eax
0x3f4:      3b 1a                              	cmp ebx, dword ptr [edx]
0x3f6:      74 18                              	je 0x410 <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x30>
0x3f8:      0f 9c c0                           	setl al
0x3fb:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x3ff:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x406:      75 26                              	jne 0x42e <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x4e>
0x408:      83 c4 28                           	add esp, 0x28
0x40b:      5b                                 	pop ebx
0x40c:      c3                                 	ret 
; data inside code section at 0x40d -- 0x410
0x40d:      8d 76 00                                           |.v.             |
0x410:      31 c0                              	xor eax, eax
0x412:      83 fb 01                           	cmp ebx, 1
0x415:      75 e4                              	jne 0x3fb <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x1b>
0x417:      80 7a 04 00                        	cmp byte ptr [edx + 4], 0
0x41b:      74 16                              	je 0x433 <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x53>
0x41d:      80 79 04 00                        	cmp byte ptr [ecx + 4], 0
0x421:      74 10                              	je 0x433 <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x53>
0x423:      8b 42 08                           	mov eax, dword ptr [edx + 8]
0x426:      39 41 08                           	cmp dword ptr [ecx + 8], eax
0x429:      0f 9c c0                           	setl al
0x42c:      eb cd                              	jmp 0x3fb <_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_+0x1b>
0x42e:      e8 fc ff ff ff                     	call 0x42f
0x433:      c7 44 24 0c 60 94 02 00            	mov dword ptr [esp + 0xc], 0x29460 ; "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x43b:      c7 44 24 08 76 02 00 00            	mov dword ptr [esp + 8], 0x276
0x443:      c7 44 24 04 68 d6 00 00            	mov dword ptr [esp + 4], 0xd668 ; "/usr/include/boost/optional/optional.hpp"
0x44b:      c7 04 24 b7 9f 00 00               	mov dword ptr [esp], 0x9fb7 ; "this->is_initialized()"
; data inside code section at 0x452 -- 0x453
0x452:      e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x453 -- 0x454
; data inside code section at 0x454 -- 0x460
0x454:      ff ff ff 89 f6 8d bc 27  00 00 00 00               |.......'....    |
; function: _Z14GetNodeSignalsv at 0x460 -- 0x478
0x460:      83 ec 1c                           	sub esp, 0x1c
0x463:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x469:      89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x46d:      31 c0                              	xor eax, eax
0x46f:      b8 48 a2 00 00                     	mov eax, 0xa248
0x474:      8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
; function: _ZN11CDataStream5writeEPKci at 0x478 -- 0x485
0x478:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x47f:      75 04                              	jne 0x485 <_ZN11CDataStream5writeEPKci+0xc>
0x481:      83 c4 1c                           	add esp, 0x1c
0x484:      c3                                 	ret 
; data inside code section at 0x485 -- 0x486
0x485:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x486 -- 0x487
; data inside code section at 0x487 -- 0x490
0x487:      ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _Z13GetListenPortv at 0x490 -- 0x4a9
0x490:      83 ec 2c                           	sub esp, 0x2c
0x493:      89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x497:      8d 5c 24 14                        	lea ebx, [esp + 0x14]
0x49b:      89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x49f:      89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x4a3:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x4a9 -- 0x4ac
0x4a9:      89 44 24                                           |.D$             |
; function: auto_buffer at 0x4ac -- 0x4ae
0x4ac:      1c 31                              	sbb al, 0x31
; data inside code section at 0x4ae -- 0x4b0
0x4ae:      c0 e8                                              |..              |
; dynamically linked function: vfLimited at 0x4b0 -- 0x4b1
; data inside code section at 0x4b1 -- 0x4d0
0x4b1:      ff ff ff 8b 70 34 8d 44  24 1b 89 44 24 08 c7 44   |....p4.D$..D$..D|
0x4c1:      24 04 fa 9f 00 00 89 1c  24 89 f7 c1 ff 1f e8      |$.......$...... |
; dynamically linked function: semOutbound at 0x4d0 -- 0x4d1
; data inside code section at 0x4d1 -- 0x4e0
0x4d1:      ff ff ff 89 74 24 04 89  7c 24 08 89 1c 24 e8      |....t$..|$...$. |
; dynamically linked function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE at 0x4e0 -- 0x4e1
; data inside code section at 0x4e1 -- 0x4ea
0x4e1:      ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x4ea -- 0x4eb
; data inside code section at 0x4eb -- 0x4ed
0x4eb:      ff ff                                              |..              |
; function: function_4ed at 0x4ed -- 0x50d
0x4ed:      ff 89 f0 8b 54 24                  	dec dword ptr [ecx + 0x24548bf0]
0x4f3:      1c 65                              	sbb al, 0x65
0x4f5:      33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x4fb:      75 10                              	jne 0x50d <function_4ed+0x1f>
0x4fd:      8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x501:      8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x505:      8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x509:      83 c4 2c                           	add esp, 0x2c
0x50c:      c3                                 	ret 
; data inside code section at 0x50d -- 0x50e
0x50d:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x50e -- 0x50f
; data inside code section at 0x50f -- 0x514
0x50f:      ff ff ff 89 c6                                     |.....           |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv at 0x514 -- 0x517
0x514:      89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x517 -- 0x518
0x517:      e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x518 -- 0x519
; data inside code section at 0x519 -- 0x520
0x519:      ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x520 -- 0x521
; data inside code section at 0x521 -- 0x530
0x521:      ff ff ff 8d b6 00 00 00  00 8d bf 00 00 00 00      |............... |
; function: _ZN5CNode7CleanupEv at 0x530 -- 0x543
0x530:      83 ec 1c                           	sub esp, 0x1c
0x533:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x539:      89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x53d:      31 c0                              	xor eax, eax
0x53f:      8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
; data inside code section at 0x543 -- 0x548
0x543:      65 33 05 14 00                                     |e3...           |
; function: ~auto_buffer at 0x548 -- 0x550
0x548:      00 00                              	add byte ptr [eax], al
0x54a:      75 04                              	jne 0x550 <~auto_buffer+0x7>
0x54c:      83 c4 1c                           	add esp, 0x1c
0x54f:      c3                                 	ret 
; data inside code section at 0x550 -- 0x551
0x550:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x551 -- 0x552
; data inside code section at 0x552 -- 0x560
0x552:      ff ff ff 90 8d 76 00 8d  bc 27 00 00 00 00         |.....v...'....  |
; function: _ZN5CNode9copyStatsER10CNodeStats at 0x560 -- 0x57b
0x560:      56                                 	push esi
0x561:      53                                 	push ebx
0x562:      83 ec 24                           	sub esp, 0x24
0x565:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x569:      8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x56d:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x573:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x577:      31 c0                              	xor eax, eax
0x579:      8b 03                              	mov eax, dword ptr [ebx]
; data inside code section at 0x57b -- 0x57c
0x57b:      8b                                                 |.               |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_ at 0x57c -- 0x5ad
0x57c:      53                                 	push ebx
0x57d:      04 89                              	add al, 0x89
0x57f:      06                                 	push es
0x580:      8b 83 64 01 00 00                  	mov eax, dword ptr [ebx + 0x164]
0x586:      89 56 04                           	mov dword ptr [esi + 4], edx
0x589:      8b 93 68 01 00 00                  	mov edx, dword ptr [ebx + 0x168]
0x58f:      89 46 08                           	mov dword ptr [esi + 8], eax
0x592:      8b 83 6c 01 00 00                  	mov eax, dword ptr [ebx + 0x16c]
0x598:      89 56 0c                           	mov dword ptr [esi + 0xc], edx
0x59b:      8b 93 70 01 00 00                  	mov edx, dword ptr [ebx + 0x170]
0x5a1:      89 46 10                           	mov dword ptr [esi + 0x10], eax
0x5a4:      8b 83 7c 01 00 00                  	mov eax, dword ptr [ebx + 0x17c]
0x5aa:      89 56 14                           	mov dword ptr [esi + 0x14], edx
; data inside code section at 0x5ad -- 0x5af
0x5ad:      8b 93                                              |..              |
; function: _ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE at 0x5af -- 0x5c9
0x5af:      80 01 00                           	add byte ptr [ecx], 0
0x5b2:      00 89 46 18 8d 83                  	add byte ptr [ecx - 0x7c72e7ba], cl
0x5b8:      ac                                 	lodsb al, byte ptr [esi]
0x5b9:      01 00                              	add dword ptr [eax], eax
0x5bb:      00 89 56 1c 89 44                  	add byte ptr [ecx + 0x44891c56], cl
0x5c1:      24 04                              	and al, 4
0x5c3:      8d 46 20                           	lea eax, [esi + 0x20]
0x5c6:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x5c9 -- 0x5ca
0x5c9:      e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x5ca -- 0x5cb
; data inside code section at 0x5cb -- 0x5e8
0x5cb:      ff ff ff 8b 83 c4 01 00  00 89 46 24 8d 83 c8 01   |..........F$....|
0x5db:      00 00 89 44 24 04 8d 46  28 89 04 24 e8            |...D$..F(..$.   |
; dynamically linked function: _ZNSs6assignERKSs at 0x5e8 -- 0x5e9
; data inside code section at 0x5e9 -- 0x637
0x5e9:      ff ff ff 0f b6 83 ce 01  00 00 8b 53 34 3b 1d 14   |...........S4;..|
0x5f9:      a3 00 00 88 46 2c 8b 83  80 02 00 00 89 46 30 8b   |....F,.......F0.|
0x609:      83 38 02 00 00 89 46 34  8b 43 30 89 56 3c 8b 93   |.8....F4.C0.V<..|
0x619:      5c 01 00 00 89 46 38 8b  83 58 01 00 00 0f 94 46   |\....F8..X.....F|
0x629:      48 89 56 44 89 46 40 8b  44 24 1c 65 33 05         |H.VD.F@.D$.e3.  |
; function: _ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE at 0x637 -- 0x643
0x637:      14 00                              	adc al, 0
0x639:      00 00                              	add byte ptr [eax], al
0x63b:      75 06                              	jne 0x643 <_ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE+0xb>
0x63d:      83 c4 24                           	add esp, 0x24
0x640:      5b                                 	pop ebx
0x641:      5e                                 	pop esi
0x642:      c3                                 	ret 
; data inside code section at 0x643 -- 0x644
0x643:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x644 -- 0x645
; data inside code section at 0x645 -- 0x650
0x645:      ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _ZN11CNetMessage8readDataEPKcj at 0x650 -- 0x68d
0x650:      56                                 	push esi
0x651:      53                                 	push ebx
0x652:      83 ec 24                           	sub esp, 0x24
0x655:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x659:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x65f:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x663:      31 c0                              	xor eax, eax
0x665:      8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x669:      8b 53 58                           	mov edx, dword ptr [ebx + 0x58]
0x66c:      8b 43 30                           	mov eax, dword ptr [ebx + 0x30]
0x66f:      29 d0                              	sub eax, edx
0x671:      39 c6                              	cmp esi, eax
0x673:      0f 47 f0                           	cmova esi, eax
0x676:      8b 43 48                           	mov eax, dword ptr [ebx + 0x48]
0x679:      01 d0                              	add eax, edx
0x67b:      8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x67f:      03 43 3c                           	add eax, dword ptr [ebx + 0x3c]
0x682:      89 74 24 08                        	mov dword ptr [esp + 8], esi
0x686:      89 54 24 04                        	mov dword ptr [esp + 4], edx
0x68a:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x68d -- 0x68e
0x68d:      e8                                                 |.               |
; dynamically linked function: memcpy at 0x68e -- 0x68f
; data inside code section at 0x68f -- 0x691
0x68f:      ff ff                                              |..              |
; function: function_691 at 0x691 -- 0x6aa
0x691:      ff 89 f0 01 73 58                  	dec dword ptr [ecx + 0x587301f0]
0x697:      8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x69b:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x6a2:      75 06                              	jne 0x6aa <function_691+0x18>
0x6a4:      83 c4 24                           	add esp, 0x24
0x6a7:      5b                                 	pop ebx
0x6a8:      5e                                 	pop esi
0x6a9:      c3                                 	ret 
; data inside code section at 0x6aa -- 0x6ab
0x6aa:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x6ab -- 0x6ac
; data inside code section at 0x6ac -- 0x6b0
0x6ac:      ff ff ff 90                                        |....            |
; function: MapPort at 0x6b0 -- 0x6bf
0x6b0:      83 ec 2c                           	sub esp, 0x2c
0x6b3:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6b9:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x6bd:      31 c0                              	xor eax, eax
; function: _ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE at 0x6bf -- 0x6e2
0x6bf:      a1 2c a3 00 00                     	mov eax, dword ptr [0xa32c]
0x6c4:      80 7c 24 30 00                     	cmp byte ptr [esp + 0x30], 0
0x6c9:      89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x6cd:      89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x6d1:      89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x6d5:      0f 84 25 01 00 00                  	je 0x800 <function_800>
0x6db:      85 c0                              	test eax, eax
0x6dd:      74 2f                              	je 0x70e <function_70e>
0x6df:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x6e2 -- 0x6e3
0x6e2:      e8                                                 |.               |
; dynamically linked function: _ZN5boost6thread9interruptEv at 0x6e3 -- 0x6e4
; data inside code section at 0x6e4 -- 0x6e6
0x6e4:      ff ff                                              |..              |
; function: function_6e6 at 0x6e6 -- 0x6ec
0x6e6:      ff a1 2c a3 00 00                  	jmp dword ptr [ecx + 0xa32c]
; data inside code section at 0x6ec -- 0x6f0
0x6ec:      89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZN5boost6thread4joinEv at 0x6f0 -- 0x6f1
; data inside code section at 0x6f1 -- 0x702
0x6f1:      ff ff ff 8b 1d 2c a3 00  00 85 db 74 10 89 1c 24   |.....,.....t...$|
0x701:      e8                                                 |.               |
; dynamically linked function: _ZN5boost6threadD1Ev at 0x702 -- 0x703
; data inside code section at 0x703 -- 0x70a
0x703:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x70a -- 0x70b
; data inside code section at 0x70b -- 0x70e
0x70b:      ff ff ff                                           |...             |
; function: function_70e at 0x70e -- 0x715
0x70e:      c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
; data inside code section at 0x715 -- 0x716
0x715:      e8                                                 |.               |
; dynamically linked function: _Znwj at 0x716 -- 0x717
; data inside code section at 0x717 -- 0x724
0x717:      ff ff ff c7 04 24 10 01  00 00 89 c7 e8            |.....$.......   |
; dynamically linked function: _Znwj at 0x724 -- 0x725
; data inside code section at 0x725 -- 0x729
0x725:      ff ff ff 89                                        |....            |
; function: function_729 at 0x729 -- 0x72a
0x729:      c3                                 	ret 
; data inside code section at 0x72a -- 0x767
0x72a:      89 04 24 e8 1e 0e 01 00  c7 03 90 14 03 00 c7 83   |..$.............|
0x73a:      04 01 00 00 60 d3 00 00  c7 83 08 01 00 00 00 a0   |....`...........|
0x74a:      00 00 c7 83 0c 01 00 00  60 30 00 00 89 1f c7 47   |........`0.....G|
0x75a:      04 00 00 00 00 c7 04 24  10 00 00 00 e8            |.......$.....   |
; dynamically linked function: _Znwj at 0x767 -- 0x768
; data inside code section at 0x768 -- 0x7c6
0x768:      ff ff ff c7 40 04 01 00  00 00 89 c6 c7 40 08 01   |....@........@..|
0x778:      00 00 00 c7 00 a8 14 03  00 89 58 0c 89 47 04 8b   |..........X..G..|
0x788:      43 08 85 c0 74 07 8b 40  04 85 c0 75 40 8b 43 08   |C...t..@...u@.C.|
0x798:      89 74 24 18 89 5c 24 14  f0 ff 46 04 39 c6 89 5b   |.t$..\$...F.9..[|
0x7a8:      04 74 1e 85 f6 74 04 f0  ff 46 08 85 c0 74 0f ba   |.t...t...F...t..|
0x7b8:      ff ff ff ff f0 0f c1 50  08 83 fa 01 74 7a         |.......P....tz  |
; function: function_7c6 at 0x7c6 -- 0x7c7
; data inside code section at 0x7c7 -- 0x7d9
0x7c7:      73 08 8d 44 24 18 89 04  24 e8 6b fd 00 00 89 3c   |s..D$...$.k....<|
0x7d7:      24 e8                                              |$.              |
; dynamically linked function: _ZN5boost6thread12start_threadEv at 0x7d9 -- 0x7da
; data inside code section at 0x7da -- 0x7e3
0x7da:      ff ff ff 89 3d 2c a3 00  00                        |....=,...       |
; function: function_7e3 at 0x7e3 -- 0x800
0x7e3:      8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x7e7:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x7ee:      75 5d                              	jne 0x84d <function_84d>
0x7f0:      8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x7f4:      8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x7f8:      8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x7fc:      83 c4 2c                           	add esp, 0x2c
0x7ff:      c3                                 	ret 
; function: function_800 at 0x800 -- 0x807
0x800:      85 c0                              	test eax, eax
0x802:      74 df                              	je 0x7e3 <function_7e3>
0x804:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x807 -- 0x808
0x807:      e8                                                 |.               |
; dynamically linked function: _ZN5boost6thread9interruptEv at 0x808 -- 0x809
; data inside code section at 0x809 -- 0x80b
0x809:      ff ff                                              |..              |
; function: function_80b at 0x80b -- 0x811
0x80b:      ff a1 2c a3 00 00                  	jmp dword ptr [ecx + 0xa32c]
; data inside code section at 0x811 -- 0x815
0x811:      89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZN5boost6thread4joinEv at 0x815 -- 0x816
; data inside code section at 0x816 -- 0x827
0x816:      ff ff ff 8b 1d 2c a3 00  00 85 db 74 10 89 1c 24   |.....,.....t...$|
0x826:      e8                                                 |.               |
; dynamically linked function: _ZN5boost6threadD1Ev at 0x827 -- 0x828
; data inside code section at 0x828 -- 0x82f
0x828:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x82f -- 0x830
; data inside code section at 0x830 -- 0x832
0x830:      ff ff                                              |..              |
; function: function_832 at 0x832 -- 0x83f
0x832:      ff c7                              	inc edi
0x834:      05 2c a3 00 00                     	add eax, 0xa32c
0x839:      00 00                              	add byte ptr [eax], al
0x83b:      00 00                              	add byte ptr [eax], al
0x83d:      eb a4                              	jmp 0x7e3 <function_7e3>
; data inside code section at 0x83f -- 0x840
0x83f:      90                                                 |.               |
; function: function_840 at 0x840 -- 0x84d
0x840:      8b 10                              	mov edx, dword ptr [eax]
0x842:      89 04 24                           	mov dword ptr [esp], eax
0x845:      ff 52 0c                           	call dword ptr [edx + 0xc]
0x848:      e9 79 ff ff ff                     	jmp 0x7c6 <function_7c6>
; function: function_84d at 0x84d -- 0x850
0x84d:      8d 76 00                           	lea esi, [esi]
; data inside code section at 0x850 -- 0x851
0x850:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x851 -- 0x852
; data inside code section at 0x852 -- 0x856
0x852:      ff ff ff 89                                        |....            |
; function: function_856 at 0x856 -- 0x857
0x856:      c3                                 	ret 
; function: function_857 at 0x857 -- 0x858
; data inside code section at 0x858 -- 0x862
0x858:      47 04 89 04 24 e8 de fc  00 00                     |G...$.....      |
; function: function_862 at 0x862 -- 0x863
; data inside code section at 0x863 -- 0x866
0x863:      3c 24 e8                                           |<$.             |
; dynamically linked function: _ZdlPv at 0x866 -- 0x867
; data inside code section at 0x867 -- 0x86e
0x867:      ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x86e -- 0x86f
; data inside code section at 0x86f -- 0x871
0x86f:      ff ff                                              |..              |
; function: function_871 at 0x871 -- 0x881
0x871:      ff 89 c3 8d 47 04                  	dec dword ptr [ecx + 0x4478dc3]
0x877:      89 04 24                           	mov dword ptr [esp], eax
0x87a:      e8 c1 fc 00 00                     	call 0x10540 <_ZN5boost6detail12shared_countD1Ev>
0x87f:      eb e1                              	jmp 0x862 <function_862>
; data inside code section at 0x881 -- 0x889
0x881:      89 c6 89 1c 24 89 f3 e8                            |....$...        |
; dynamically linked function: _ZdlPv at 0x889 -- 0x88a
; data inside code section at 0x88a -- 0x88d
0x88a:      ff ff ff                                           |...             |
; function: function_88d at 0x88d -- 0x88f
0x88d:      eb d3                              	jmp 0x862 <function_862>
; function: function_88f at 0x88f -- 0x893
0x88f:      89 c3                              	mov ebx, eax
0x891:      eb cf                              	jmp 0x862 <function_862>
; data inside code section at 0x893 -- 0x897
0x893:      89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x897 -- 0x898
; data inside code section at 0x898 -- 0x89a
0x898:      ff ff                                              |..              |
; function: function_89a at 0x89a -- 0x8b8
0x89a:      ff 8b 03 89 1c 24                  	dec dword ptr [ebx + 0x241c8903]
0x8a0:      ff 50 04                           	call dword ptr [eax + 4]
0x8a3:      e8 fc ff ff ff                     	call 0x8a4
0x8a8:      89 c3                              	mov ebx, eax
0x8aa:      8d 44 24 18                        	lea eax, [esp + 0x18]
0x8ae:      89 04 24                           	mov dword ptr [esp], eax
0x8b1:      e8 8a fc 00 00                     	call 0x10540 <_ZN5boost6detail12shared_countD1Ev>
0x8b6:      eb 9f                              	jmp 0x857 <function_857>
; data inside code section at 0x8b8 -- 0x8b9
0x8b8:      89                                                 |.               |
; function: function_8b9 at 0x8b9 -- 0x8ba
0x8b9:      c3                                 	ret 
; data inside code section at 0x8ba -- 0x8bb
0x8ba:      e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x8bb -- 0x8bc
; data inside code section at 0x8bc -- 0x8c0
0x8bc:      ff ff ff 90                                        |....            |
; function: function_8c0 at 0x8c0 -- 0x8c2
0x8c0:      eb a0                              	jmp 0x862 <function_862>
; data inside code section at 0x8c2 -- 0x8d0
0x8c2:      8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: _Z8FindNodeRK8CService at 0x8d0 -- 0x985
0x8d0:      83 ec 6c                           	sub esp, 0x6c
0x8d3:      8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x8d7:      89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x8db:      8d 6c 24 30                        	lea ebp, [esp + 0x30]
0x8df:      89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x8e3:      89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x8e7:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x8ee:      89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x8f2:      31 d2                              	xor edx, edx
0x8f4:      89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x8f8:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x8fc:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x904:      c7 44 24 10 b9 01 00 00            	mov dword ptr [esp + 0x10], 0x1b9
0x90c:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x914:      c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x91c:      c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x924:      89 2c 24                           	mov dword ptr [esp], ebp
0x927:      e8 34 23 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x92c:      8b 1d 74 a1 00 00                  	mov ebx, dword ptr [0xa174] ; "rg"
0x932:      8b 3d 78 a1 00 00                  	mov edi, dword ptr [0xa178] ; "4.208.43.192"
0x938:      39 fb                              	cmp ebx, edi
0x93a:      74 59                              	je 0x995 <function_995>
0x93c:      8d 74 26 00                        	lea esi, [esi]
0x940:      8b 33                              	mov esi, dword ptr [ebx]
0x942:      8d 54 24 3a                        	lea edx, [esp + 0x3a]
0x946:      8b 86 84 01 00 00                  	mov eax, dword ptr [esi + 0x184]
0x94c:      89 44 24 3a                        	mov dword ptr [esp + 0x3a], eax
0x950:      8b 86 88 01 00 00                  	mov eax, dword ptr [esi + 0x188]
0x956:      89 44 24 3e                        	mov dword ptr [esp + 0x3e], eax
0x95a:      8b 86 8c 01 00 00                  	mov eax, dword ptr [esi + 0x18c]
0x960:      89 44 24 42                        	mov dword ptr [esp + 0x42], eax
0x964:      8b 86 90 01 00 00                  	mov eax, dword ptr [esi + 0x190]
0x96a:      89 44 24 46                        	mov dword ptr [esp + 0x46], eax
0x96e:      0f b7 86 94 01 00 00               	movzx eax, word ptr [esi + 0x194]
0x975:      89 14 24                           	mov dword ptr [esp], edx
0x978:      66 89 44 24 4a                     	mov word ptr [esp + 0x4a], ax
0x97d:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x981:      89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x985 -- 0x986
0x985:      e8                                                 |.               |
; dynamically linked function: _ZeqRK8CServiceS1_ at 0x986 -- 0x987
; data inside code section at 0x987 -- 0x98b
0x987:      ff ff ff 84                                        |....            |
; function: function_98b at 0x98b -- 0x990
0x98b:      c0 75 09 83                        	sal byte ptr [ebp + 9], 0x83
0x98f:      c3                                 	ret 
; data inside code section at 0x990 -- 0x995
0x990:      04 39 df 75 ab                                     |.9.u.           |
; function: function_995 at 0x995 -- 0x9c2
0x995:      31 f6                              	xor esi, esi
0x997:      89 2c 24                           	mov dword ptr [esp], ebp
0x99a:      e8 41 1f 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x99f:      89 f0                              	mov eax, esi
0x9a1:      8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x9a5:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x9ac:      75 14                              	jne 0x9c2 <function_995+0x2c>
0x9ae:      8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x9b2:      8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x9b6:      8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x9ba:      8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x9be:      83 c4 6c                           	add esp, 0x6c
0x9c1:      c3                                 	ret 
; data inside code section at 0x9c2 -- 0x9c3
0x9c2:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x9c3 -- 0x9c4
; data inside code section at 0x9c4 -- 0x9c8
0x9c4:      ff ff ff 89                                        |....            |
; function: function_9c8 at 0x9c8 -- 0x9c9
0x9c8:      c3                                 	ret 
; data inside code section at 0x9c9 -- 0x9e0
0x9c9:      89 2c 24 e8 0f 1f 01 00  89 1c 24 e8 fc ff ff ff   |.,$.......$.....|
0x9d9:      8d b4 26 00 00 00 00                               |..&....         |
; function: _Z8FindNodeSs at 0x9e0 -- 0xab7
0x9e0:      83 ec 5c                           	sub esp, 0x5c
0x9e3:      8d 54 24 34                        	lea edx, [esp + 0x34]
0x9e7:      89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x9eb:      89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x9ef:      89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x9f3:      31 ff                              	xor edi, edi
0x9f5:      89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x9f9:      8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x9fd:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa03:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xa07:      31 c0                              	xor eax, eax
0xa09:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xa11:      c7 44 24 10 b0 01 00 00            	mov dword ptr [esp + 0x10], 0x1b0
0xa19:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xa21:      c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0xa29:      c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0xa31:      89 14 24                           	mov dword ptr [esp], edx
0xa34:      e8 27 22 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xa39:      8b 1d 74 a1 00 00                  	mov ebx, dword ptr [0xa174] ; "rg"
0xa3f:      8b 35 78 a1 00 00                  	mov esi, dword ptr [0xa178] ; "4.208.43.192"
0xa45:      39 f3                              	cmp ebx, esi
0xa47:      74 29                              	je 0xa72 <_Z8FindNodeSs+0x92>
0xa49:      8b 6d 00                           	mov ebp, dword ptr [ebp]
0xa4c:      8b 55 f4                           	mov edx, dword ptr [ebp - 0xc]
0xa4f:      89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xa53:      90                                 	nop 
0xa54:      8d 74 26 00                        	lea esi, [esi]
0xa58:      8b 3b                              	mov edi, dword ptr [ebx]
0xa5a:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa5e:      8b 87 ac 01 00 00                  	mov eax, dword ptr [edi + 0x1ac]
0xa64:      39 50 f4                           	cmp dword ptr [eax - 0xc], edx
0xa67:      74 3f                              	je 0xaa8 <_Z8FindNodeSs+0xc8>
0xa69:      83 c3 04                           	add ebx, 4
0xa6c:      39 de                              	cmp esi, ebx
0xa6e:      75 e8                              	jne 0xa58 <_Z8FindNodeSs+0x78>
0xa70:      31 ff                              	xor edi, edi
0xa72:      8d 44 24 34                        	lea eax, [esp + 0x34]
0xa76:      89 04 24                           	mov dword ptr [esp], eax
0xa79:      e8 62 1e 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xa7e:      89 f8                              	mov eax, edi
0xa80:      8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xa84:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa8b:      75 3c                              	jne 0xac9 <function_ac9>
0xa8d:      8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0xa91:      8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xa95:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xa99:      8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0xa9d:      83 c4 5c                           	add esp, 0x5c
0xaa0:      c3                                 	ret 
; data inside code section at 0xaa1 -- 0xaa8
0xaa1:      8d b4 26 00 00 00 00                               |..&....         |
0xaa8:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xaac:      89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0xab0:      89 04 24                           	mov dword ptr [esp], eax
0xab3:      89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0xab7 -- 0xab8
0xab7:      e8                                                 |.               |
; dynamically linked function: memcmp at 0xab8 -- 0xab9
; data inside code section at 0xab9 -- 0xabb
0xab9:      ff ff                                              |..              |
; function: function_abb at 0xabb -- 0xac2
0xabb:      ff 85 c0 74 b2 83                  	inc dword ptr [ebp - 0x7c4d8b40]
0xac1:      c3                                 	ret 
; function: function_ac2 at 0xac2 -- 0xac9
0xac2:      04 39                              	add al, 0x39
0xac4:      de 75 91                           	fidiv word ptr [ebp - 0x6f]
0xac7:      eb a7                              	jmp 0xa70
; function: function_ac9 at 0xac9 -- 0xaca
; dynamically linked function: __stack_chk_fail at 0xaca -- 0xacb
; data inside code section at 0xacb -- 0xacd
0xacb:      ff ff                                              |..              |
; function: function_acd at 0xacd -- 0xad0
0xacd:      ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _Z8FindNodeRK8CNetAddr at 0xad0 -- 0xb79
0xad0:      83 ec 6c                           	sub esp, 0x6c
0xad3:      8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0xad7:      89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0xadb:      8d 6c 24 34                        	lea ebp, [esp + 0x34]
0xadf:      89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0xae3:      89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0xae7:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xaee:      89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0xaf2:      31 d2                              	xor edx, edx
0xaf4:      89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0xaf8:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xafc:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xb04:      c7 44 24 10 a7 01 00 00            	mov dword ptr [esp + 0x10], 0x1a7
0xb0c:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xb14:      c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0xb1c:      c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0xb24:      89 2c 24                           	mov dword ptr [esp], ebp
0xb27:      e8 34 21 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xb2c:      8b 1d 74 a1 00 00                  	mov ebx, dword ptr [0xa174] ; "rg"
0xb32:      8b 3d 78 a1 00 00                  	mov edi, dword ptr [0xa178] ; "4.208.43.192"
0xb38:      39 fb                              	cmp ebx, edi
0xb3a:      74 4d                              	je 0xb89 <function_b89>
0xb3c:      8d 74 26 00                        	lea esi, [esi]
0xb40:      8b 33                              	mov esi, dword ptr [ebx]
0xb42:      8d 54 24 3c                        	lea edx, [esp + 0x3c]
0xb46:      8b 86 84 01 00 00                  	mov eax, dword ptr [esi + 0x184]
0xb4c:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xb50:      8b 86 88 01 00 00                  	mov eax, dword ptr [esi + 0x188]
0xb56:      89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0xb5a:      8b 86 8c 01 00 00                  	mov eax, dword ptr [esi + 0x18c]
0xb60:      89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0xb64:      8b 86 90 01 00 00                  	mov eax, dword ptr [esi + 0x190]
0xb6a:      89 14 24                           	mov dword ptr [esp], edx
0xb6d:      89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0xb71:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xb75:      89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0xb79 -- 0xb7a
0xb79:      e8                                                 |.               |
; dynamically linked function: _ZeqRK8CNetAddrS1_ at 0xb7a -- 0xb7b
; data inside code section at 0xb7b -- 0xb7f
0xb7b:      ff ff ff 84                                        |....            |
; function: function_b7f at 0xb7f -- 0xb84
0xb7f:      c0 75 09 83                        	sal byte ptr [ebp + 9], 0x83
0xb83:      c3                                 	ret 
; data inside code section at 0xb84 -- 0xb89
0xb84:      04 39 df 75 b7                                     |.9.u.           |
; function: function_b89 at 0xb89 -- 0xbc8
0xb89:      31 f6                              	xor esi, esi
0xb8b:      89 2c 24                           	mov dword ptr [esp], ebp
0xb8e:      e8 4d 1d 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xb93:      89 f0                              	mov eax, esi
0xb95:      8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0xb99:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xba0:      75 14                              	jne 0xbb6 <function_b89+0x2d>
0xba2:      8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0xba6:      8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0xbaa:      8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0xbae:      8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0xbb2:      83 c4 6c                           	add esp, 0x6c
0xbb5:      c3                                 	ret 
0xbb6:      e8 fc ff ff ff                     	call 0xbb7
0xbbb:      89 c3                              	mov ebx, eax
0xbbd:      89 2c 24                           	mov dword ptr [esp], ebp
0xbc0:      e8 1b 1d 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xbc5:      89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xbc8 -- 0xbc9
0xbc8:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xbc9 -- 0xbca
; data inside code section at 0xbca -- 0xbd0
0xbca:      ff ff ff 8d 76 00                                  |....v.          |
; function: _Z25AddressCurrentlyConnectedRK8CService at 0xbd0 -- 0xbe9
0xbd0:      56                                 	push esi
0xbd1:      53                                 	push ebx
0xbd2:      83 ec 44                           	sub esp, 0x44
0xbd5:      8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xbd9:      8d 5c 24 34                        	lea ebx, [esp + 0x34]
0xbdd:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xbe3:      89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xbe7:      31 c0                              	xor eax, eax
; data inside code section at 0xbe9 -- 0xbea
0xbe9:      e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0xbea -- 0xbeb
; data inside code section at 0xbeb -- 0xc42
0xbeb:      ff ff ff c7 44 24 14 00  00 00 00 c7 44 24 10 ef   |....D$......D$..|
0xbfb:      01 00 00 c7 44 24 0c 39  a0 00 00 c7 44 24 08 43   |....D$.9....D$.C|
0xc0b:      a0 00 00 c7 44 24 04 80  a1 00 00 89 44 24 2c 89   |....D$......D$,.|
0xc1b:      54 24 28 89 1c 24 e8 3a  20 01 00 8b 44 24 2c 8b   |T$(..$.: ...D$,.|
0xc2b:      54 24 28 89 74 24 04 c7  04 24 80 a1 00 00 89 44   |T$(.t$...$.....D|
0xc3b:      24 08 89 54 24 0c e8                               |$..T$..         |
; dynamically linked function: _ZN8CAddrMan10Connected_ERK8CServicex at 0xc42 -- 0xc43
; data inside code section at 0xc43 -- 0xc45
0xc43:      ff ff                                              |..              |
; function: function_c45 at 0xc45 -- 0xc61
0xc45:      ff 89 1c 24 e8 92                  	dec dword ptr [ecx - 0x6d17dbe4]
0xc4b:      1c 01                              	sbb al, 1
0xc4d:      00 8b 44 24 3c 65                  	add byte ptr [ebx + 0x653c2444], cl
0xc53:      33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xc59:      75 06                              	jne 0xc61 <function_c45+0x1b>
0xc5b:      83 c4 44                           	add esp, 0x44
0xc5e:      5b                                 	pop ebx
0xc5f:      5e                                 	pop esi
0xc60:      c3                                 	ret 
; data inside code section at 0xc61 -- 0xc62
0xc61:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xc62 -- 0xc63
; data inside code section at 0xc63 -- 0xc74
0xc63:      ff ff ff 89 c6 89 1c 24  e8 70 1c 01 00 89 34 24   |.......$.p....4$|
0xc73:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xc74 -- 0xc75
; data inside code section at 0xc75 -- 0xc80
0xc75:      ff ff ff 90 8d b4 26 00  00 00 00                  |......&....     |
; function: _Z11IsReachableRK8CNetAddr at 0xc80 -- 0xccc
0xc80:      56                                 	push esi
0xc81:      53                                 	push ebx
0xc82:      83 ec 34                           	sub esp, 0x34
0xc85:      8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xc89:      8d 5c 24 24                        	lea ebx, [esp + 0x24]
0xc8d:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xc93:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xc97:      31 c0                              	xor eax, eax
0xc99:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xca1:      c7 44 24 10 1e 01 00 00            	mov dword ptr [esp + 0x10], 0x11e
0xca9:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xcb1:      c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0xcb9:      c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0xcc1:      89 1c 24                           	mov dword ptr [esp], ebx
0xcc4:      e8 97 1f 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xcc9:      89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xccc -- 0xccd
0xccc:      e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10GetNetworkEv at 0xccd -- 0xcce
; data inside code section at 0xcce -- 0xcd0
0xcce:      ff ff                                              |..              |
; function: function_cd0 at 0xcd0 -- 0xd03
0xcd0:      ff 31                              	push dword ptr [ecx]
0xcd2:      f6 80 b8 0c a3 00 00               	test byte ptr [eax + 0xa30cb8], 0
0xcd9:      00 74 0a 0f                        	add byte ptr [edx + ecx + 0xf], dh
0xcdd:      b6 b0                              	mov dh, 0xb0
0xcdf:      10 a3 00 00 83 f6                  	adc byte ptr [ebx - 0x97d0000], ah
0xce5:      01 89 1c 24 e8 f2                  	add dword ptr [ecx - 0xd17dbe4], ecx
0xceb:      1b 01                              	sbb eax, dword ptr [ecx]
0xced:      00 89 f0 8b 54 24                  	add byte ptr [ecx + 0x24548bf0], cl
0xcf3:      2c 65                              	sub al, 0x65
0xcf5:      33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xcfb:      75 06                              	jne 0xd03 <function_cd0+0x32>
0xcfd:      83 c4 34                           	add esp, 0x34
0xd00:      5b                                 	pop ebx
0xd01:      5e                                 	pop esi
0xd02:      c3                                 	ret 
; data inside code section at 0xd03 -- 0xd04
0xd03:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd04 -- 0xd05
; data inside code section at 0xd05 -- 0xd16
0xd05:      ff ff ff 89 c6 89 1c 24  e8 ce 1b 01 00 89 34 24   |.......$......4$|
0xd15:      e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0xd16 -- 0xd17
; data inside code section at 0xd17 -- 0xd20
0xd17:      ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _Z9IsLimited7Network at 0xd20 -- 0xd99
0xd20:      83 ec 3c                           	sub esp, 0x3c
0xd23:      89 74 24 38                        	mov dword ptr [esp + 0x38], esi
0xd27:      8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xd2b:      89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0xd2f:      8d 5c 24 24                        	lea ebx, [esp + 0x24]
0xd33:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd39:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xd3d:      31 c0                              	xor eax, eax
0xd3f:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xd47:      c7 44 24 10 fc 00 00 00            	mov dword ptr [esp + 0x10], 0xfc
0xd4f:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xd57:      c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0xd5f:      c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0xd67:      89 1c 24                           	mov dword ptr [esp], ebx
0xd6a:      e8 f1 1e 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xd6f:      0f b6 b6 10 a3 00 00               	movzx esi, byte ptr [esi + 0xa310]
0xd76:      89 1c 24                           	mov dword ptr [esp], ebx
0xd79:      e8 62 1b 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xd7e:      8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xd82:      65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd89:      89 f0                              	mov eax, esi
0xd8b:      75 0c                              	jne 0xd99 <_Z9IsLimited7Network+0x78>
0xd8d:      8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0xd91:      8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0xd95:      83 c4 3c                           	add esp, 0x3c
0xd98:      c3                                 	ret 
; data inside code section at 0xd99 -- 0xd9a
0xd99:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd9a -- 0xd9b
; data inside code section at 0xd9b -- 0xd9d
0xd9b:      ff ff                                              |..              |
; function: function_d9d at 0xd9d -- 0xda0
0xd9d:      ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _Z9IsLimitedRK8CNetAddr at 0xda0 -- 0xdb6
0xda0:      83 ec 2c                           	sub esp, 0x2c
0xda3:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xda9:      89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xdad:      31 c0                              	xor eax, eax
0xdaf:      8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xdb3:      89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xdb6 -- 0xdb7
0xdb6:      e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10GetNetworkEv at 0xdb7 -- 0xdb8
; data inside code section at 0xdb8 -- 0xdba
0xdb8:      ff ff                                              |..              |
; function: function_dba at 0xdba -- 0xdd4
0xdba:      ff 8b 54 24 1c 65                  	dec dword ptr [ebx + 0x651c2454]
0xdc0:      33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0xdc6:      75 0c                              	jne 0xdd4 <function_dba+0x15>
0xdc8:      89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xdcc:      83 c4 2c                           	add esp, 0x2c
0xdcf:      e9 4c ff ff ff                     	jmp 0xd20 <_Z9IsLimited7Network>
; data inside code section at 0xdd4 -- 0xdd5
0xdd4:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xdd5 -- 0xdd6
; data inside code section at 0xdd6 -- 0xde0
0xdd6:      ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: _Z10SetLimited7Networkb at 0xde0 -- 0xe68
0xde0:      83 ec 3c                           	sub esp, 0x3c
0xde3:      89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xde7:      8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0xdeb:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xdf1:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xdf5:      31 c0                              	xor eax, eax
0xdf7:      89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0xdfb:      8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0xdff:      89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0xe03:      85 db                              	test ebx, ebx
0xe05:      74 44                              	je 0xe4b <_Z10SetLimited7Networkb+0x6b>
0xe07:      8d 7c 24 24                        	lea edi, [esp + 0x24]
0xe0b:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xe13:      c7 44 24 10 f6 00 00 00            	mov dword ptr [esp + 0x10], 0xf6
0xe1b:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xe23:      c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0xe2b:      c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0xe33:      89 3c 24                           	mov dword ptr [esp], edi
0xe36:      e8 25 1e 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xe3b:      89 f0                              	mov eax, esi
0xe3d:      88 83 10 a3 00 00                  	mov byte ptr [ebx + 0xa310], al
0xe43:      89 3c 24                           	mov dword ptr [esp], edi
0xe46:      e8 95 1a 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xe4b:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xe4f:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe56:      75 10                              	jne 0xe68 <_Z10SetLimited7Networkb+0x87>
0xe58:      8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe5c:      8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0xe60:      8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0xe64:      83 c4 3c                           	add esp, 0x3c
0xe67:      c3                                 	ret 
; data inside code section at 0xe68 -- 0xe69
0xe68:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe69 -- 0xe6a
; data inside code section at 0xe6a -- 0xe70
0xe6a:      ff ff ff 8d 76 00                                  |....v.          |
; function: _Z12SetReachable7Networkb at 0xe70 -- 0xf15
0xe70:      83 ec 4c                           	sub esp, 0x4c
0xe73:      89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0xe77:      8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0xe7b:      89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0xe7f:      8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0xe83:      89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0xe87:      8d 5c 24 24                        	lea ebx, [esp + 0x24]
0xe8b:      65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe91:      89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0xe95:      31 c0                              	xor eax, eax
0xe97:      89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0xe9b:      c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0xea3:      c7 44 24 10 c8 00 00 00            	mov dword ptr [esp + 0x10], 0xc8
0xeab:      c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0xeb3:      c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0xebb:      c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0xec3:      89 1c 24                           	mov dword ptr [esp], ebx
0xec6:      e8 95 1d 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0xecb:      89 f8                              	mov eax, edi
0xecd:      83 fe 02                           	cmp esi, 2
0xed0:      88 86 0c a3 00 00                  	mov byte ptr [esi + 0xa30c], al
0xed6:      74 30                              	je 0xf08 <_Z12SetReachable7Networkb+0x98>
0xed8:      89 1c 24                           	mov dword ptr [esp], ebx
0xedb:      e8 00 1a 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0xee0:      8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0xee4:      65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xeeb:      75 28                              	jne 0xf15 <_Z12SetReachable7Networkb+0xa3>
0xeed:      8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0xef1:      8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0xef5:      8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0xef9:      8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0xefd:      83 c4 4c                           	add esp, 0x4c
0xf00:      c3                                 	ret 
; data inside code section at 0xf01 -- 0xf08
0xf01:      8d b4 26 00 00 00 00                               |..&....         |
0xf08:      84 c0                              	test al, al
0xf0a:      74 cc                              	je 0xed8 <_Z12SetReachable7Networkb+0x68>
0xf0c:      c6 05 0d a3 00 00 01               	mov byte ptr [0xa30d], 1 ; "abled\n"
0xf13:      eb c3                              	jmp 0xed8 <_Z12SetReachable7Networkb+0x68>
; data inside code section at 0xf15 -- 0xf16
0xf15:      e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf16 -- 0xf17
; data inside code section at 0xf17 -- 0xf20
0xf17:      ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _Z8GetLocalR8CServicePK8CNetAddr at 0xf20 -- 0xf3e
0xf20:      55                                 	push ebp
0xf21:      57                                 	push edi
0xf22:      31 ff                              	xor edi, edi
0xf24:      56                                 	push esi
0xf25:      53                                 	push ebx
0xf26:      83 ec 5c                           	sub esp, 0x5c
0xf29:      8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0xf2d:      65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xf34:      89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0xf38:      31 d2                              	xor edx, edx
0xf3a:      8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
; data inside code section at 0xf3e -- 0xf40
0xf3e:      80 3d                                              |.=              |
; dynamically linked function: fNoListen at 0xf40 -- 0xf66
; data inside code section at 0xf66 -- 0xfbd
0xf66:      66 90 8d 44 24 30 c7 44  24 14 00 00 00 00 c7 44   |f..D$0.D$......D|
0xf76:      24 10 63 00 00 00 c7 44  24 0c 27 a0 00 00 c7 44   |$.c....D$.'....D|
0xf86:      24 08 46 a0 00 00 c7 44  24 04 a0 a2 00 00 89 04   |$.F....D$.......|
0xf96:      24 e8 c4 1c 01 00 8b 1d  00 a3 00 00 81 fb f8 a2   |$...............|
0xfa6:      00 00 0f 84 aa 00 00 00  c7 44 24 24 ff ff ff ff   |.........D$$....|
0xfb6:      c7 44 24 28 ff ff ff                               |.D$(...         |
; function: function_fbd at 0xfbd -- 0xfc0
0xfbd:      ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_fc0 at 0xfc0 -- 0xfc1
; data inside code section at 0xfc1 -- 0xfd6
0xfc1:      53 20 8d 7b 10 8b 44 24  2c 89 3c 24 89 54 24 20   |S .{..D$,.<$.T$ |
0xfd1:      89 44 24 04 e8                                     |.D$..           |
; dynamically linked function: _ZNK8CNetAddr19GetReachabilityFromEPKS_ at 0xfd6 -- 0xfd7
; data inside code section at 0xfd7 -- 0x1006
0xfd7:      ff ff ff 3b 44 24 24 89  c5 7f 10 8b 54 24 28 39   |...;D$$.....T$(9|
0xfe7:      54 24 20 7e 4e 39 44 24  24 75 48 0f b7 43 24 89   |T$ ~N9D$$uH..C$.|
0xff7:      7c 24 04 89 44 24 08 8d  44 24 3a 89 04 24 e8      ||$..D$..D$:..$. |
; dynamically linked function: _ZN8CServiceC1ERK8CNetAddrt at 0x1006 -- 0x1007
; data inside code section at 0x1007 -- 0x103e
0x1007:     ff ff ff 8b 44 24 3a 8b  54 24 20 89 6c 24 24 89   |....D$:.T$ .l$$.|
0x1017:     06 8b 44 24 3e 89 54 24  28 89 46 04 8b 44 24 42   |..D$>.T$(.F..D$B|
0x1027:     89 46 08 8b 44 24 46 89  46 0c 0f b7 44 24 4a 66   |.F..D$F.F...D$Jf|
0x1037:     89 46 10 89 1c 24 e8                               |.F...$.         |
; dynamically linked function: _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base at 0x103e -- 0x103f
; data inside code section at 0x103f -- 0x1042
0x103f:     ff ff ff                                           |...             |
; function: function_1042 at 0x1042 -- 0x1069
0x1042:     3d f8 a2 00 00                     	cmp eax, 0xa2f8 ; "sseed"
0x1047:     89 c3                              	mov ebx, eax
0x1049:     0f 85 71 ff ff ff                  	jne 0xfc0 <function_fc0>
0x104f:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1053:     f7 d7                              	not edi
0x1055:     c1 ef 1f                           	shr edi, 0x1f
0x1058:     8d 44 24 30                        	lea eax, [esp + 0x30]
0x105c:     89 04 24                           	mov dword ptr [esp], eax
0x105f:     e8 7c 18 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x1064:     e9 e2 fe ff ff                     	jmp 0xf4b
; function: function_1069 at 0x1069 -- 0x106a
; dynamically linked function: __stack_chk_fail at 0x106a -- 0x106b
; data inside code section at 0x106b -- 0x106f
0x106b:     ff ff ff 89                                        |....            |
; function: function_106f at 0x106f -- 0x1070
0x106f:     c3                                 	ret 
; data inside code section at 0x1070 -- 0x1090
0x1070:     8d 44 24 30 89 04 24 e8  64 18 01 00 89 1c 24 e8   |.D$0..$.d.....$.|
0x1080:     fc ff ff ff 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _Z15GetLocalAddressPK8CNetAddr at 0x1090 -- 0x1115
0x1090:     57                                 	push edi
0x1091:     56                                 	push esi
0x1092:     53                                 	push ebx
0x1093:     83 ec 70                           	sub esp, 0x70
0x1096:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x109c:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x10a0:     31 c0                              	xor eax, eax
0x10a2:     8d 44 24 48                        	lea eax, [esp + 0x48]
0x10a6:     8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x10ad:     8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0x10b4:     8d 74 24 5a                        	lea esi, [esp + 0x5a]
0x10b8:     89 04 24                           	mov dword ptr [esp], eax
0x10bb:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x10c3:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x10cb:     c7 44 24 04 56 a0 00 00            	mov dword ptr [esp + 4], 0xa056 ; "0.0.0.0"
0x10d3:     e8 fc ff ff ff                     	call 0x10d4
0x10d8:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x10dc:     c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x10e4:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x10ec:     89 1c 24                           	mov dword ptr [esp], ebx
0x10ef:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10f3:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x10f7:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x10fb:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x10ff:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1103:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1107:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x110b:     0f b7 44 24 58                     	movzx eax, word ptr [esp + 0x58]
0x1110:     66 89 44 24 14                     	mov word ptr [esp + 0x14], ax
; data inside code section at 0x1115 -- 0x1116
0x1115:     e8                                                 |.               |
; dynamically linked function: _ZN8CAddressC1E8CServicey at 0x1116 -- 0x1117
; data inside code section at 0x1117 -- 0x111e
0x1117:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZN8CServiceC1Ev at 0x111e -- 0x111f
; data inside code section at 0x111f -- 0x11c5
0x111f:     ff ff ff 89 7c 24 04 89  34 24 e8 f2 fd ff ff 84   |....|$..4$......|
0x112f:     c0 0f 84 96 00 00 00 8b  44 24 5a c7 44 24 18 01   |........D$Z.D$..|
0x113f:     00 00 00 c7 44 24 1c 00  00 00 00 89 44 24 04 8b   |....D$......D$..|
0x114f:     44 24 5e 89 44 24 08 8b  44 24 62 89 44 24 0c 8b   |D$^.D$..D$b.D$..|
0x115f:     44 24 66 89 44 24 10 0f  b7 44 24 6a 66 89 44 24   |D$f.D$...D$jf.D$|
0x116f:     14 8d 44 24 20 89 04 24  e8 fc ff ff ff 8b 44 24   |..D$ ..$......D$|
0x117f:     20 8b 15 3c 9e 00 00 89  03 8b 44 24 24 89 53 18   | ..<......D$$.S.|
0x118f:     89 43 04 8b 44 24 28 89  43 08 8b 44 24 2c 89 43   |.C..D$(.C..D$,.C|
0x119f:     0c 8b 44 24 30 89 43 10  8b 44 24 3c 89 43 1c 8b   |..D$0.C..D$<.C..|
0x11af:     44 24 40 89 43 20 8b 44  24 44 89 43 24 a1 38 9e   |D$@.C .D$D.C$.8.|
0x11bf:     00 00 89 43 14 e8                                  |...C..          |
; dynamically linked function: _Z15GetAdjustedTimev at 0x11c5 -- 0x11c6
; data inside code section at 0x11c6 -- 0x11c8
0x11c6:     ff ff                                              |..              |
; function: function_11c8 at 0x11c8 -- 0x11e4
0x11c8:     ff 89 43 1c 8b 54                  	dec dword ptr [ecx + 0x548b1c43]
0x11ce:     24 6c                              	and al, 0x6c
0x11d0:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x11d7:     89 d8                              	mov eax, ebx
0x11d9:     75 09                              	jne 0x11e4 <function_11c8+0x19>
0x11db:     83 c4 70                           	add esp, 0x70
0x11de:     5b                                 	pop ebx
0x11df:     5e                                 	pop esi
0x11e0:     5f                                 	pop edi
0x11e1:     c2 04 00                           	ret 4
; data inside code section at 0x11e4 -- 0x11e5
0x11e4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11e5 -- 0x11e6
; data inside code section at 0x11e6 -- 0x11f0
0x11e6:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: _Z7IsLocalRK8CService at 0x11f0 -- 0x1285
0x11f0:     55                                 	push ebp
0x11f1:     57                                 	push edi
0x11f2:     56                                 	push esi
0x11f3:     53                                 	push ebx
0x11f4:     83 ec 3c                           	sub esp, 0x3c
0x11f7:     8d 6c 24 24                        	lea ebp, [esp + 0x24]
0x11fb:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x11ff:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1205:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1209:     31 c0                              	xor eax, eax
0x120b:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1213:     c7 44 24 10 17 01 00 00            	mov dword ptr [esp + 0x10], 0x117
0x121b:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x1223:     c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0x122b:     c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0x1233:     89 2c 24                           	mov dword ptr [esp], ebp
0x1236:     e8 25 1a 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x123b:     8b 1d fc a2 00 00                  	mov ebx, dword ptr [0xa2fc]
0x1241:     85 db                              	test ebx, ebx
0x1243:     74 6b                              	je 0x12b0 <function_12b0>
0x1245:     bf f8 a2 00 00                     	mov edi, 0xa2f8 ; "sseed"
0x124a:     eb 0d                              	jmp 0x1259 <_Z7IsLocalRK8CService+0x69>
; data inside code section at 0x124c -- 0x1250
0x124c:     8d 74 26 00                                        |.t&.            |
0x1250:     89 df                              	mov edi, ebx
0x1252:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x1255:     85 db                              	test ebx, ebx
0x1257:     74 1a                              	je 0x1273 <_Z7IsLocalRK8CService+0x83>
0x1259:     8d 43 10                           	lea eax, [ebx + 0x10]
0x125c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1260:     89 04 24                           	mov dword ptr [esp], eax
0x1263:     e8 fc ff ff ff                     	call 0x1264
0x1268:     84 c0                              	test al, al
0x126a:     74 e4                              	je 0x1250 <_Z7IsLocalRK8CService+0x60>
0x126c:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x126f:     85 db                              	test ebx, ebx
0x1271:     75 e6                              	jne 0x1259 <_Z7IsLocalRK8CService+0x69>
0x1273:     81 ff f8 a2 00 00                  	cmp edi, 0xa2f8 ; "sseed"
0x1279:     74 35                              	je 0x12b0 <function_12b0>
0x127b:     83 c7 10                           	add edi, 0x10
0x127e:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1282:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1285 -- 0x1286
0x1285:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1286 -- 0x1287
; data inside code section at 0x1287 -- 0x128b
0x1287:     ff ff ff 84                                        |....            |
; function: function_128b at 0x128b -- 0x128f
0x128b:     c0 0f 94                           	ror byte ptr [edi], 0x94
0x128e:     c3                                 	ret 
; function: function_128f at 0x128f -- 0x12ae
0x128f:     89 2c 24                           	mov dword ptr [esp], ebp
0x1292:     e8 49 16 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x1297:     89 d8                              	mov eax, ebx
0x1299:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x129d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12a4:     75 0e                              	jne 0x12b4 <function_12b4>
0x12a6:     83 c4 3c                           	add esp, 0x3c
0x12a9:     5b                                 	pop ebx
0x12aa:     5e                                 	pop esi
0x12ab:     5f                                 	pop edi
0x12ac:     5d                                 	pop ebp
0x12ad:     c3                                 	ret 
; data inside code section at 0x12ae -- 0x12b0
0x12ae:     66 90                                              |f.              |
; function: function_12b0 at 0x12b0 -- 0x12b4
0x12b0:     31 db                              	xor ebx, ebx
0x12b2:     eb db                              	jmp 0x128f <function_128f>
; function: function_12b4 at 0x12b4 -- 0x12b5
; dynamically linked function: __stack_chk_fail at 0x12b5 -- 0x12b6
; data inside code section at 0x12b6 -- 0x12ba
0x12b6:     ff ff ff 89                                        |....            |
; function: function_12ba at 0x12ba -- 0x12bb
0x12ba:     c3                                 	ret 
; data inside code section at 0x12bb -- 0x12c7
0x12bb:     89 2c 24 e8 1d 16 01 00  89 1c 24 e8               |.,$.......$.    |
; dynamically linked function: _Unwind_Resume at 0x12c7 -- 0x12c8
; data inside code section at 0x12c8 -- 0x12d0
0x12c8:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: _ZN5CNode8IsBannedE8CNetAddr at 0x12d0 -- 0x1385
0x12d0:     55                                 	push ebp
0x12d1:     57                                 	push edi
0x12d2:     56                                 	push esi
0x12d3:     53                                 	push ebx
0x12d4:     83 ec 4c                           	sub esp, 0x4c
0x12d7:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x12db:     8d 6c 24 34                        	lea ebp, [esp + 0x34]
0x12df:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x12e7:     c7 44 24 10 2f 02 00 00            	mov dword ptr [esp + 0x10], 0x22f
0x12ef:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x12f7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x12fb:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x12ff:     c7 44 24 08 5e a0 00 00            	mov dword ptr [esp + 8], 0xa05e ; "cs_setBanned"
0x1307:     c7 44 24 04 80 9e 00 00            	mov dword ptr [esp + 4], 0x9e80 ; "resource_error"
0x130f:     89 2c 24                           	mov dword ptr [esp], ebp
0x1312:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1316:     8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x131a:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x131e:     8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x1322:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1326:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x132c:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1330:     31 c0                              	xor eax, eax
0x1332:     e8 29 19 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1337:     8b 1d dc 9e 00 00                  	mov ebx, dword ptr [0x9edc] ; "ex_lock(m)"
0x133d:     85 db                              	test ebx, ebx
0x133f:     74 4d                              	je 0x138e <function_138e>
0x1341:     bf d8 9e 00 00                     	mov edi, 0x9ed8 ; "_mutex_lock(m)"
0x1346:     8d 74 24 20                        	lea esi, [esp + 0x20]
0x134a:     eb 0d                              	jmp 0x1359 <_ZN5CNode8IsBannedE8CNetAddr+0x89>
; data inside code section at 0x134c -- 0x1350
0x134c:     8d 74 26 00                                        |.t&.            |
0x1350:     89 df                              	mov edi, ebx
0x1352:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x1355:     85 db                              	test ebx, ebx
0x1357:     74 1a                              	je 0x1373 <_ZN5CNode8IsBannedE8CNetAddr+0xa3>
0x1359:     8d 43 10                           	lea eax, [ebx + 0x10]
0x135c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1360:     89 04 24                           	mov dword ptr [esp], eax
0x1363:     e8 fc ff ff ff                     	call 0x1364
0x1368:     84 c0                              	test al, al
0x136a:     74 e4                              	je 0x1350 <_ZN5CNode8IsBannedE8CNetAddr+0x80>
0x136c:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x136f:     85 db                              	test ebx, ebx
0x1371:     75 e6                              	jne 0x1359 <_ZN5CNode8IsBannedE8CNetAddr+0x89>
0x1373:     81 ff d8 9e 00 00                  	cmp edi, 0x9ed8 ; "_mutex_lock(m)"
0x1379:     74 13                              	je 0x138e <function_138e>
0x137b:     8d 47 10                           	lea eax, [edi + 0x10]
0x137e:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1382:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1385 -- 0x1386
0x1385:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1386 -- 0x1387
; data inside code section at 0x1387 -- 0x138e
0x1387:     ff ff ff 84 c0 74 22                               |.....t"         |
; function: function_138e at 0x138e -- 0x13af
0x138e:     31 db                              	xor ebx, ebx
0x1390:     89 2c 24                           	mov dword ptr [esp], ebp
0x1393:     e8 48 15 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x1398:     89 d8                              	mov eax, ebx
0x139a:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x139e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13a5:     75 25                              	jne 0x13cc <function_13cc>
0x13a7:     83 c4 4c                           	add esp, 0x4c
0x13aa:     5b                                 	pop ebx
0x13ab:     5e                                 	pop esi
0x13ac:     5f                                 	pop edi
0x13ad:     5d                                 	pop ebp
0x13ae:     c3                                 	ret 
; data inside code section at 0x13af -- 0x13b7
0x13af:     90 8b 77 20 8b 5f 24 e8                            |..w ._$.        |
; dynamically linked function: _Z7GetTimev at 0x13b7 -- 0x13b8
; data inside code section at 0x13b8 -- 0x13bb
0x13b8:     ff ff ff                                           |...             |
; function: function_13bb at 0x13bb -- 0x13cc
0x13bb:     39 d3                              	cmp ebx, edx
0x13bd:     7f 06                              	jg 0x13c5 <function_13bb+0xa>
0x13bf:     7c cd                              	jl 0x138e <function_138e>
0x13c1:     39 c6                              	cmp esi, eax
0x13c3:     76 c9                              	jbe 0x138e <function_138e>
0x13c5:     bb 01 00 00 00                     	mov ebx, 1
0x13ca:     eb c4                              	jmp 0x1390
; function: function_13cc at 0x13cc -- 0x13cd
; dynamically linked function: __stack_chk_fail at 0x13cd -- 0x13ce
; data inside code section at 0x13ce -- 0x13d2
0x13ce:     ff ff ff 89                                        |....            |
; function: function_13d2 at 0x13d2 -- 0x13d3
0x13d2:     c3                                 	ret 
; data inside code section at 0x13d3 -- 0x13df
0x13d3:     89 2c 24 e8 05 15 01 00  89 1c 24 e8               |.,$.......$.    |
; dynamically linked function: _Unwind_Resume at 0x13df -- 0x13e0
; data inside code section at 0x13e0 -- 0x13f0
0x13e0:     ff ff ff 90 8d b6 00 00  00 00 8d bf 00 00 00 00   |................|
; function: _ZN11CNetMessage10readHeaderEPKcj at 0x13f0 -- 0x142e
0x13f0:     55                                 	push ebp
0x13f1:     57                                 	push edi
0x13f2:     56                                 	push esi
0x13f3:     53                                 	push ebx
0x13f4:     83 ec 4c                           	sub esp, 0x4c
0x13f7:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x13fb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1401:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1405:     31 c0                              	xor eax, eax
0x1407:     8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x140b:     8b 53 38                           	mov edx, dword ptr [ebx + 0x38]
0x140e:     b0 18                              	mov al, 0x18
0x1410:     29 d0                              	sub eax, edx
0x1412:     39 c6                              	cmp esi, eax
0x1414:     0f 47 f0                           	cmova esi, eax
0x1417:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x141a:     01 d0                              	add eax, edx
0x141c:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x1420:     03 43 04                           	add eax, dword ptr [ebx + 4]
0x1423:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x1427:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x142b:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x142e -- 0x142f
0x142e:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x142f -- 0x1430
; data inside code section at 0x1430 -- 0x1432
0x1430:     ff ff                                              |..              |
; function: function_1432 at 0x1432 -- 0x14c0
0x1432:     ff 8b 43 38 01 f0                  	dec dword ptr [ebx - 0xffec7bd]
0x1438:     83 f8 17                           	cmp eax, 0x17
0x143b:     89 43 38                           	mov dword ptr [ebx + 0x38], eax
0x143e:     77 20                              	ja 0x1460 <function_1432+0x2e>
0x1440:     89 f0                              	mov eax, esi
0x1442:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1446:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x144d:     0f 85 c7 02 00 00                  	jne 0x171a <function_171a>
0x1453:     83 c4 4c                           	add esp, 0x4c
0x1456:     5b                                 	pop ebx
0x1457:     5e                                 	pop esi
0x1458:     5f                                 	pop edi
0x1459:     5d                                 	pop ebp
0x145a:     c3                                 	ret 
; data inside code section at 0x145b -- 0x1460
0x145b:     90 8d 74 26 00                                     |..t&.           |
0x1460:     8d 53 24                           	lea edx, [ebx + 0x24]
0x1463:     8d 7b 20                           	lea edi, [ebx + 0x20]
0x1466:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x146a:     29 fa                              	sub edx, edi
0x146c:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1470:     0f 88 a9 02 00 00                  	js 0x171f <function_171f>
0x1476:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x147a:     8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x147d:     8b 6b 08                           	mov ebp, dword ptr [ebx + 8]
0x1480:     89 c1                              	mov ecx, eax
0x1482:     01 d1                              	add ecx, edx
0x1484:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1488:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x148b:     29 cd                              	sub ebp, ecx
0x148d:     39 6c 24 1c                        	cmp dword ptr [esp + 0x1c], ebp
0x1491:     0f 82 d1 01 00 00                  	jb 0x1668 <function_1668>
0x1497:     76 39                              	jbe 0x14d2 <function_14d2>
0x1499:     0f b7 53 14                        	movzx edx, word ptr [ebx + 0x14]
0x149d:     0f b7 4b 16                        	movzx ecx, word ptr [ebx + 0x16]
0x14a1:     83 ca 04                           	or edx, 4
0x14a4:     66 85 ca                           	test dx, cx
0x14a7:     66 89 53 14                        	mov word ptr [ebx + 0x14], dx
0x14ab:     0f 85 92 02 00 00                  	jne 0x1743 <function_1743>
0x14b1:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14b5:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x14bd:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x14c0 -- 0x14c1
0x14c0:     e8                                                 |.               |
; dynamically linked function: memset at 0x14c1 -- 0x14c2
; data inside code section at 0x14c2 -- 0x14d2
0x14c2:     ff ff ff 8b 4b 04 8b 43  08 8b 53 10 29 c8 29 d0   |....K..C..S.).).|
; function: function_14d2 at 0x14d2 -- 0x154e
0x14d2:     01 ca                              	add edx, ecx
0x14d4:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14d8:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x14dc:     89 3c 24                           	mov dword ptr [esp], edi
0x14df:     e8 fc ff ff ff                     	call 0x14e0
0x14e4:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x14e7:     c7 43 10 00 00 00 00               	mov dword ptr [ebx + 0x10], 0
0x14ee:     89 43 08                           	mov dword ptr [ebx + 8], eax
0x14f1:     8d 4b 30                           	lea ecx, [ebx + 0x30]
0x14f4:     89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x14f8:     2b 4c 24 18                        	sub ecx, dword ptr [esp + 0x18]
0x14fc:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1500:     0f 88 19 02 00 00                  	js 0x171f <function_171f>
0x1506:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x150a:     8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x150d:     8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x1510:     8b 6b 08                           	mov ebp, dword ptr [ebx + 8]
0x1513:     89 c7                              	mov edi, eax
0x1515:     01 d7                              	add edi, edx
0x1517:     29 cd                              	sub ebp, ecx
0x1519:     39 ef                              	cmp edi, ebp
0x151b:     0f 82 6f 01 00 00                  	jb 0x1690 <function_1690>
0x1521:     76 3d                              	jbe 0x1560 <function_1560>
0x1523:     0f b7 53 14                        	movzx edx, word ptr [ebx + 0x14]
0x1527:     0f b7 4b 16                        	movzx ecx, word ptr [ebx + 0x16]
0x152b:     83 ca 04                           	or edx, 4
0x152e:     66 85 ca                           	test dx, cx
0x1531:     66 89 53 14                        	mov word ptr [ebx + 0x14], dx
0x1535:     0f 85 c5 02 00 00                  	jne 0x1800 <function_1800>
0x153b:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x153f:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1543:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x154b:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x154e -- 0x154f
0x154e:     e8                                                 |.               |
; dynamically linked function: memset at 0x154f -- 0x1550
; data inside code section at 0x1550 -- 0x1560
0x1550:     ff ff ff 8b 4b 04 8b 43  08 8b 53 10 29 c8 29 d0   |....K..C..S.).).|
; function: function_1560 at 0x1560 -- 0x1571
0x1560:     01 ca                              	add edx, ecx
0x1562:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1566:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x156a:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x156e:     89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x1571 -- 0x1572
0x1571:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x1572 -- 0x1573
; data inside code section at 0x1573 -- 0x1583
0x1573:     ff ff ff 8b 43 04 c7 43  10 00 00 00 00 89 43 08   |....C..C......C.|
; function: function_1583 at 0x1583 -- 0x1584
; data inside code section at 0x1584 -- 0x15b2
0x1584:     b7 43 14 0f b7 53 16 83  c8 04 66 85 d0 66 89 43   |.C...S....f..f.C|
0x1594:     14 0f 85 bb 02 00 00 8b  4c 24 14 c7 01 00 00 00   |........L$......|
0x15a4:     00 8b 53 04 8b 43 08 8b  7b 10 29 d0 29 f8         |..S..C..{.).).  |
; function: function_15b2 at 0x15b2 -- 0x15b3
; data inside code section at 0x15b3 -- 0x15d8
0x15b3:     d7 8b 54 24 14 89 44 24  08 89 7c 24 04 89 14 24   |..T$..D$..|$...$|
0x15c3:     e8 fc ff ff ff 8b 43 04  8d 53 34 c7 43 10 00 00   |......C..S4.C...|
0x15d3:     00 00 89 43 08                                     |...C.           |
; function: function_15d8 at 0x15d8 -- 0x15d9
; data inside code section at 0x15d9 -- 0x1603
0x15d9:     b7 43 14 0f b7 4b 16 83  c8 04 66 85 c8 66 89 43   |.C...K....f..f.C|
0x15e9:     14 0f 85 ba 01 00 00 c7  02 00 00 00 00 8b 7b 04   |..............{.|
0x15f9:     8b 4b 08 8b 43 10 29 f9  29 c1                     |.K..C.).).      |
; function: function_1603 at 0x1603 -- 0x1604
; data inside code section at 0x1604 -- 0x1611
0x1604:     f8 89 4c 24 08 89 44 24  04 89 14 24 e8            |..L$..D$...$.   |
; dynamically linked function: memcpy at 0x1611 -- 0x1612
; data inside code section at 0x1612 -- 0x1614
0x1612:     ff ff                                              |..              |
; function: function_1614 at 0x1614 -- 0x1663
0x1614:     ff 8b 43 04 c7 43                  	dec dword ptr [ebx + 0x43c70443]
0x161a:     10 00                              	adc byte ptr [eax], al
0x161c:     00 00                              	add byte ptr [eax], al
0x161e:     00 89 43 08 8b 53                  	add byte ptr [ecx + 0x538b0843], cl
0x1624:     30 b8 ff ff ff ff                  	xor byte ptr [eax - 1], bh
0x162a:     81 fa 00 00 00 02                  	cmp edx, 0x2000000
0x1630:     0f 87 0c fe ff ff                  	ja 0x1442
0x1636:     8b 4b 40                           	mov ecx, dword ptr [ebx + 0x40]
0x1639:     8b 43 3c                           	mov eax, dword ptr [ebx + 0x3c]
0x163c:     03 53 48                           	add edx, dword ptr [ebx + 0x48]
0x163f:     c6 03 01                           	mov byte ptr [ebx], 1
0x1642:     89 cf                              	mov edi, ecx
0x1644:     29 c7                              	sub edi, eax
0x1646:     39 fa                              	cmp edx, edi
0x1648:     c6 44 24 3b 00                     	mov byte ptr [esp + 0x3b], 0
0x164d:     0f 87 a5 00 00 00                  	ja 0x16f8 <function_16f8>
0x1653:     0f 83 e7 fd ff ff                  	jae 0x1440
0x1659:     01 c2                              	add edx, eax
0x165b:     89 53 40                           	mov dword ptr [ebx + 0x40], edx
0x165e:     e9 dd fd ff ff                     	jmp 0x1440
; data inside code section at 0x1663 -- 0x1668
0x1663:     90 8d 74 26 00                                     |..t&.           |
; function: function_1668 at 0x1668 -- 0x1679
0x1668:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x166c:     01 ca                              	add edx, ecx
0x166e:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1672:     89 3c 24                           	mov dword ptr [esp], edi
0x1675:     89 44 24 08                        	mov dword ptr [esp + 8], eax
; data inside code section at 0x1679 -- 0x167a
0x1679:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x167a -- 0x167b
; data inside code section at 0x167b -- 0x167e
0x167b:     ff ff ff                                           |...             |
; function: function_167e at 0x167e -- 0x168a
0x167e:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1682:     89 53 10                           	mov dword ptr [ebx + 0x10], edx
0x1685:     e9 67 fe ff ff                     	jmp 0x14f1
; data inside code section at 0x168a -- 0x1690
0x168a:     8d b6 00 00 00 00                                  |......          |
; function: function_1690 at 0x1690 -- 0x16a5
0x1690:     01 ca                              	add edx, ecx
0x1692:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1696:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x169a:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x169e:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x16a2:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x16a5 -- 0x16a6
0x16a5:     e8                                                 |.               |
; dynamically linked function: memcpy at 0x16a6 -- 0x16a7
; data inside code section at 0x16a7 -- 0x16a9
0x16a7:     ff ff                                              |..              |
; function: function_16a9 at 0x16a9 -- 0x16c5
0x16a9:     ff 8b 53 04 8d 47                  	dec dword ptr [ebx + 0x478d0453]
0x16af:     04 8b                              	add al, 0x8b
0x16b1:     6b 08 89                           	imul ecx, dword ptr [eax], -0x77
0x16b4:     7b 10                              	jnp 0x16c6 <function_16a9+0x19>
0x16b6:     89 d1                              	mov ecx, edx
0x16b8:     29 d5                              	sub ebp, edx
0x16ba:     39 e8                              	cmp eax, ebp
0x16bc:     0f 83 ff 01 00 00                  	jae 0x18c1 <function_18c1>
0x16c2:     8b 14 3a                           	mov edx, dword ptr [edx + edi]
; data inside code section at 0x16c5 -- 0x16c7
0x16c5:     83 c7                                              |..              |
; function: function_16c7 at 0x16c7 -- 0x16f3
0x16c7:     08 89 43 10 89 53                  	or byte ptr [ecx + 0x53891043], cl
0x16cd:     30 8d 53 34 89 7c                  	xor byte ptr [ebp + 0x7c893453], cl
0x16d3:     24 18                              	and al, 0x18
0x16d5:     89 cf                              	mov edi, ecx
0x16d7:     3b 6c 24 18                        	cmp ebp, dword ptr [esp + 0x18]
0x16db:     0f 86 f2 01 00 00                  	jbe 0x18d3 <function_18d3>
0x16e1:     8b 04 01                           	mov eax, dword ptr [ecx + eax]
0x16e4:     89 43 34                           	mov dword ptr [ebx + 0x34], eax
0x16e7:     8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x16eb:     89 4b 10                           	mov dword ptr [ebx + 0x10], ecx
0x16ee:     e9 2f ff ff ff                     	jmp 0x1622
; data inside code section at 0x16f3 -- 0x16f8
0x16f3:     90 8d 74 26 00                                     |..t&.           |
; function: function_16f8 at 0x16f8 -- 0x171a
0x16f8:     8d 44 24 3b                        	lea eax, [esp + 0x3b]
0x16fc:     29 fa                              	sub edx, edi
0x16fe:     83 c3 3c                           	add ebx, 0x3c
0x1701:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1705:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1709:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x170d:     89 1c 24                           	mov dword ptr [esp], ebx
0x1710:     e8 3b 20 01 00                     	call 0x13750 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc>
0x1715:     e9 26 fd ff ff                     	jmp 0x1440
; function: function_171a at 0x171a -- 0x171b
; dynamically linked function: __stack_chk_fail at 0x171b -- 0x171c
; data inside code section at 0x171c -- 0x171f
0x171c:     ff ff ff                                           |...             |
; function: function_171f at 0x171f -- 0x173e
0x171f:     c7 44 24 0c e0 7a 02 00            	mov dword ptr [esp + 0xc], 0x27ae0 ; "CDataStream& CDataStream::read(char*, int)"
0x1727:     c7 44 24 08 f0 03 00 00            	mov dword ptr [esp + 8], 0x3f0
0x172f:     c7 44 24 04 76 9f 00 00            	mov dword ptr [esp + 4], 0x9f76 ; "serialize.h"
0x1737:     c7 04 24 82 9f 00 00               	mov dword ptr [esp], 0x9f82 ; "nSize >= 0"
; data inside code section at 0x173e -- 0x173f
0x173e:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x173f -- 0x1740
; data inside code section at 0x1740 -- 0x1743
0x1740:     ff ff ff                                           |...             |
; function: function_1743 at 0x1743 -- 0x174e
0x1743:     c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
0x174a:     8d 5c 24 24                        	lea ebx, [esp + 0x24]
; data inside code section at 0x174e -- 0x174f
0x174e:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x174f -- 0x1750
; data inside code section at 0x1750 -- 0x1769
0x1750:     ff ff ff c7 44 24 04 78  d7 00 00 89 1c 24 89 c6   |....D$.x.....$..|
0x1760:     8d 44 24 37 89 44 24 08  e8                        |.D$7.D$..       |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1769 -- 0x176a
; data inside code section at 0x176a -- 0x1775
0x176a:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x1775 -- 0x1776
; data inside code section at 0x1776 -- 0x177d
0x1776:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x177d -- 0x177e
; data inside code section at 0x177e -- 0x1785
0x177e:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x1785 -- 0x1789
; data inside code section at 0x1789 -- 0x178d
0x1789:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x178d -- 0x1794
; data inside code section at 0x1794 -- 0x1795
0x1794:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x1795 -- 0x1796
; data inside code section at 0x1796 -- 0x1799
0x1796:     ff ff ff                                           |...             |
; function: function_1799 at 0x1799 -- 0x179a
; function: function_179a at 0x179a -- 0x17a1
0x179a:     ea 01 89 04 24 0f 84               	ljmp 0x840f:0x24048901 <function_24048901> ; "D$\b"
; data inside code section at 0x17a1 -- 0x17a6
0x17a1:     40 01 00 00 e8                                     |@....           |
; dynamically linked function: _Unwind_Resume at 0x17a6 -- 0x17a7
; data inside code section at 0x17a7 -- 0x17b6
0x17a7:     ff ff ff c7 04 24 08 00  00 00 8d 5c 24 30 e8      |.....$.....\$0. |
; dynamically linked function: __cxa_allocate_exception at 0x17b6 -- 0x17b7
; data inside code section at 0x17b7 -- 0x17d0
0x17b7:     ff ff ff c7 44 24 04 78  d7 00 00 89 1c 24 89 c6   |....D$.x.....$..|
0x17c7:     8d 44 24 3a 89 44 24 08  e8                        |.D$:.D$..       |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x17d0 -- 0x17d1
; data inside code section at 0x17d1 -- 0x17dc
0x17d1:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x17dc -- 0x17dd
; data inside code section at 0x17dd -- 0x17e4
0x17dd:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x17e4 -- 0x17e5
; data inside code section at 0x17e5 -- 0x17ec
0x17e5:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x17ec -- 0x17f0
; data inside code section at 0x17f0 -- 0x17f4
0x17f0:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x17f4 -- 0x17fb
; data inside code section at 0x17fb -- 0x17fc
0x17fb:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x17fc -- 0x17fd
; data inside code section at 0x17fd -- 0x1800
0x17fd:     ff ff ff                                           |...             |
; function: function_1800 at 0x1800 -- 0x180b
0x1800:     c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
0x1807:     8d 5c 24 28                        	lea ebx, [esp + 0x28]
; data inside code section at 0x180b -- 0x180c
0x180b:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x180c -- 0x180d
; data inside code section at 0x180d -- 0x1832
0x180d:     ff ff ff c7 44 24 04 78  d7 00 00 89 1c 24 89 c6   |....D$.x.....$..|
0x181d:     8d 44 24 38 89 44 24 08  e8 fc ff ff ff 89 5c 24   |.D$8.D$.......\$|
0x182d:     04 89 34 24 e8                                     |..4$.           |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x1832 -- 0x1833
; data inside code section at 0x1833 -- 0x183a
0x1833:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x183a -- 0x183b
; data inside code section at 0x183b -- 0x1842
0x183b:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x1842 -- 0x1846
; data inside code section at 0x1846 -- 0x184a
0x1846:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x184a -- 0x1851
; data inside code section at 0x1851 -- 0x1852
0x1851:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x1852 -- 0x1853
; data inside code section at 0x1853 -- 0x1862
0x1853:     ff ff ff c7 04 24 08 00  00 00 8d 5c 24 2c e8      |.....$.....\$,. |
; dynamically linked function: __cxa_allocate_exception at 0x1862 -- 0x1863
; data inside code section at 0x1863 -- 0x187c
0x1863:     ff ff ff c7 44 24 04 78  d7 00 00 89 1c 24 89 c6   |....D$.x.....$..|
0x1873:     8d 44 24 39 89 44 24 08  e8                        |.D$9.D$..       |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x187c -- 0x187d
; data inside code section at 0x187d -- 0x1888
0x187d:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt8ios_base7failureC1ERKSs at 0x1888 -- 0x1889
; data inside code section at 0x1889 -- 0x1890
0x1889:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1890 -- 0x1891
; data inside code section at 0x1891 -- 0x1898
0x1891:     ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: _ZNSt8ios_base7failureD1Ev at 0x1898 -- 0x189c
; data inside code section at 0x189c -- 0x18a0
0x189c:     c7 44 24 04                                        |.D$.            |
; dynamically linked function: _ZTINSt8ios_base7failureE at 0x18a0 -- 0x18a7
; data inside code section at 0x18a7 -- 0x18a8
0x18a7:     e8                                                 |.               |
; dynamically linked function: __cxa_throw at 0x18a8 -- 0x18a9
; data inside code section at 0x18a9 -- 0x18ac
0x18a9:     ff ff ff                                           |...             |
; function: function_18ac at 0x18ac -- 0x18ad
; function: function_18ad at 0x18ad -- 0x18ae
0x18ad:     c3                                 	ret 
; data inside code section at 0x18ae -- 0x18b4
0x18ae:     89 d7 89 34 24 e8                                  |...4$.          |
; dynamically linked function: __cxa_free_exception at 0x18b4 -- 0x18b5
; data inside code section at 0x18b5 -- 0x18b8
0x18b5:     ff ff ff                                           |...             |
; function: function_18b8 at 0x18b8 -- 0x18c1
0x18b8:     89 d8                              	mov eax, ebx
0x18ba:     89 fa                              	mov edx, edi
0x18bc:     e9 d8 fe ff ff                     	jmp 0x1799 <function_1799>
; function: function_18c1 at 0x18c1 -- 0x18d1
0x18c1:     b8 04 00 00 00                     	mov eax, 4
0x18c6:     0f 86 e6 fc ff ff                  	jbe 0x15b2 <function_15b2>
0x18cc:     e9 b2 fc ff ff                     	jmp 0x1583 <function_1583>
; function: function_18d1 at 0x18d1 -- 0x18d3
0x18d1:     eb d9                              	jmp 0x18ac <function_18ac>
; function: function_18d3 at 0x18d3 -- 0x18e5
0x18d3:     b9 04 00 00 00                     	mov ecx, 4
0x18d8:     0f 83 25 fd ff ff                  	jae 0x1603 <function_1603>
0x18de:     66 90                              	nop 
0x18e0:     e9 f3 fc ff ff                     	jmp 0x15d8 <function_15d8>
; data inside code section at 0x18e5 -- 0x18e6
0x18e5:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x18e6 -- 0x18e7
; data inside code section at 0x18e7 -- 0x18f1
0x18e7:     ff ff ff 8d b6 00 00 00  00 e8                     |..........      |
; dynamically linked function: __cxa_end_catch at 0x18f1 -- 0x18f2
; data inside code section at 0x18f2 -- 0x18f5
0x18f2:     ff ff ff                                           |...             |
; function: function_18f5 at 0x18f5 -- 0x18fd
0x18f5:     83 c8 ff                           	or eax, 0xffffffff
0x18f8:     e9 45 fb ff ff                     	jmp 0x1442
; data inside code section at 0x18fd -- 0x1900
0x18fd:     8d 76 00                                           |.v.             |
; function: function_1900 at 0x1900 -- 0x1902
0x1900:     eb aa                              	jmp 0x18ac <function_18ac>
; function: function_1902 at 0x1902 -- 0x1904
0x1902:     eb a8                              	jmp 0x18ac <function_18ac>
; data inside code section at 0x1904 -- 0x1910
0x1904:     8d b6 00 00 00 00 8d bf  00 00 00 00               |............    |
; function: AdvertizeLocal at 0x1910 -- 0x19d8
0x1910:     55                                 	push ebp
0x1911:     57                                 	push edi
0x1912:     56                                 	push esi
0x1913:     53                                 	push ebx
0x1914:     81 ec 9c 00 00 00                  	sub esp, 0x9c
0x191a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1920:     89 84 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], eax
0x1927:     31 c0                              	xor eax, eax
0x1929:     8d 44 24 38                        	lea eax, [esp + 0x38]
0x192d:     89 04 24                           	mov dword ptr [esp], eax
0x1930:     8d 7c 24 40                        	lea edi, [esp + 0x40]
0x1934:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x193c:     c7 44 24 10 b7 00 00 00            	mov dword ptr [esp + 0x10], 0xb7
0x1944:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x194c:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x1954:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x195c:     e8 ff 12 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1961:     a1 78 a1 00 00                     	mov eax, dword ptr [0xa178] ; "4.208.43.192"
0x1966:     8b 2d 74 a1 00 00                  	mov ebp, dword ptr [0xa174] ; "rg"
0x196c:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1970:     39 c5                              	cmp ebp, eax
0x1972:     74 1d                              	je 0x1991 <AdvertizeLocal+0x81>
0x1974:     8d 74 26 00                        	lea esi, [esi]
0x1978:     8b 75 00                           	mov esi, dword ptr [ebp]
0x197b:     80 be d0 01 00 00 00               	cmp byte ptr [esi + 0x1d0], 0
0x1982:     75 3c                              	jne 0x19c0 <AdvertizeLocal+0xb0>
0x1984:     8d 74 26 00                        	lea esi, [esi]
0x1988:     83 c5 04                           	add ebp, 4
0x198b:     39 6c 24 28                        	cmp dword ptr [esp + 0x28], ebp
0x198f:     75 e7                              	jne 0x1978 <AdvertizeLocal+0x68>
0x1991:     8d 44 24 38                        	lea eax, [esp + 0x38]
0x1995:     89 04 24                           	mov dword ptr [esp], eax
0x1998:     e8 43 0f 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x199d:     8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x19a4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x19ab:     0f 85 de 01 00 00                  	jne 0x1b8f <function_1b8f>
0x19b1:     81 c4 9c 00 00 00                  	add esp, 0x9c
0x19b7:     5b                                 	pop ebx
0x19b8:     5e                                 	pop esi
0x19b9:     5f                                 	pop edi
0x19ba:     5d                                 	pop ebp
0x19bb:     c3                                 	ret 
; data inside code section at 0x19bc -- 0x19c0
0x19bc:     8d 74 26 00                                        |.t&.            |
0x19c0:     8d 86 84 01 00 00                  	lea eax, [esi + 0x184]
0x19c6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19ca:     89 3c 24                           	mov dword ptr [esp], edi
0x19cd:     e8 be f6 ff ff                     	call 0x1090 <_Z15GetLocalAddressPK8CNetAddr>
0x19d2:     83 ec 04                           	sub esp, 4
0x19d5:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x19d8 -- 0x19d9
0x19d8:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x19d9 -- 0x19da
; data inside code section at 0x19da -- 0x1a58
0x19da:     ff ff ff 84 c0 74 a7 8b  86 b0 01 00 00 89 44 24   |.....t........D$|
0x19ea:     7a 8b 86 b4 01 00 00 89  44 24 7e 8b 86 b8 01 00   |z.......D$~.....|
0x19fa:     00 89 84 24 82 00 00 00  8b 86 bc 01 00 00 89 84   |...$............|
0x1a0a:     24 86 00 00 00 0f b7 86  c0 01 00 00 66 89 84 24   |$...........f..$|
0x1a1a:     8a 00 00 00 8b 44 24 40  89 44 24 68 8b 44 24 44   |.....D$@.D$h.D$D|
0x1a2a:     89 44 24 6c 8b 44 24 48  89 44 24 70 8b 44 24 4c   |.D$l.D$H.D$p.D$L|
0x1a3a:     89 44 24 74 0f b7 44 24  50 66 89 44 24 78 8d 44   |.D$t..D$Pf.D$x.D|
0x1a4a:     24 7a 89 44 24 04 8d 44  24 68 89 04 24 e8         |$z.D$..D$h..$.  |
; dynamically linked function: _ZneRK8CServiceS1_ at 0x1a58 -- 0x1a59
; data inside code section at 0x1a59 -- 0x1a68
0x1a59:     ff ff ff 84 c0 0f 84 24  ff ff ff 89 3c 24 e8      |.......$....<$. |
; dynamically linked function: _ZNK8CNetAddr7IsValidEv at 0x1a68 -- 0x1a69
; data inside code section at 0x1a69 -- 0x1a6b
0x1a69:     ff ff                                              |..              |
; function: function_1a6b at 0x1a6b -- 0x1a8e
0x1a6b:     ff 84 c0 0f 84 ca 00               	inc dword ptr [eax + eax*8 + 0xca840f]
0x1a72:     00 00                              	add byte ptr [eax], al
0x1a74:     8b 9e 9c 02 00 00                  	mov ebx, dword ptr [esi + 0x29c]
0x1a7a:     85 db                              	test ebx, ebx
0x1a7c:     74 54                              	je 0x1ad2 <function_1ad2>
0x1a7e:     8d 86 98 02 00 00                  	lea eax, [esi + 0x298]
0x1a84:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1a88:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1a8c:     eb 0d                              	jmp 0x1a9b <function_1a9b>
; data inside code section at 0x1a8e -- 0x1a90
0x1a8e:     66 90                                              |f.              |
; function: function_1a90 at 0x1a90 -- 0x1a9b
0x1a90:     89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1a94:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x1a97:     85 db                              	test ebx, ebx
0x1a99:     74 1a                              	je 0x1ab5
; function: function_1a9b at 0x1a9b -- 0x1aa5
0x1a9b:     8d 43 10                           	lea eax, [ebx + 0x10]
0x1a9e:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1aa2:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1aa5 -- 0x1aa6
0x1aa5:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CServiceS1_ at 0x1aa6 -- 0x1aa7
; data inside code section at 0x1aa7 -- 0x1ab5
0x1aa7:     ff ff ff 84 c0 74 e2 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_1ab5 at 0x1ab5 -- 0x1ab6
; data inside code section at 0x1ab6 -- 0x1aca
0x1ab6:     44 24 24 39 44 24 2c 74  13 83 c0 10 89 44 24 04   |D$$9D$,t.....D$.|
0x1ac6:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZltRK8CServiceS1_ at 0x1aca -- 0x1acb
; data inside code section at 0x1acb -- 0x1ad2
0x1acb:     ff ff ff 84 c0 74 6c                               |.....tl         |
; function: function_1ad2 at 0x1ad2 -- 0x1b8f
0x1ad2:     8b 86 8c 02 00 00                  	mov eax, dword ptr [esi + 0x28c]
0x1ad8:     3b 86 90 02 00 00                  	cmp eax, dword ptr [esi + 0x290]
0x1ade:     0f 84 93 00 00 00                  	je 0x1b77 <function_1ad2+0xa5>
0x1ae4:     31 d2                              	xor edx, edx
0x1ae6:     85 c0                              	test eax, eax
0x1ae8:     74 4b                              	je 0x1b35 <function_1ad2+0x63>
0x1aea:     8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1aee:     89 10                              	mov dword ptr [eax], edx
0x1af0:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x1af4:     89 50 04                           	mov dword ptr [eax + 4], edx
0x1af7:     8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x1afb:     89 50 08                           	mov dword ptr [eax + 8], edx
0x1afe:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x1b02:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1b05:     8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x1b09:     89 50 10                           	mov dword ptr [eax + 0x10], edx
0x1b0c:     8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x1b10:     89 50 14                           	mov dword ptr [eax + 0x14], edx
0x1b13:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x1b17:     89 50 18                           	mov dword ptr [eax + 0x18], edx
0x1b1a:     8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x1b1e:     89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1b21:     8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x1b25:     89 50 20                           	mov dword ptr [eax + 0x20], edx
0x1b28:     8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x1b2c:     89 50 24                           	mov dword ptr [eax + 0x24], edx
0x1b2f:     8b 96 8c 02 00 00                  	mov edx, dword ptr [esi + 0x28c]
0x1b35:     83 c2 28                           	add edx, 0x28
0x1b38:     89 96 8c 02 00 00                  	mov dword ptr [esi + 0x28c], edx
0x1b3e:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1b42:     89 86 b0 01 00 00                  	mov dword ptr [esi + 0x1b0], eax
0x1b48:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x1b4c:     89 86 b4 01 00 00                  	mov dword ptr [esi + 0x1b4], eax
0x1b52:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x1b56:     89 86 b8 01 00 00                  	mov dword ptr [esi + 0x1b8], eax
0x1b5c:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x1b60:     89 86 bc 01 00 00                  	mov dword ptr [esi + 0x1bc], eax
0x1b66:     0f b7 44 24 50                     	movzx eax, word ptr [esp + 0x50]
0x1b6b:     66 89 86 c0 01 00 00               	mov word ptr [esi + 0x1c0], ax
0x1b72:     e9 11 fe ff ff                     	jmp 0x1988
0x1b77:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1b7b:     8d 86 88 02 00 00                  	lea eax, [esi + 0x288]
0x1b81:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1b85:     89 04 24                           	mov dword ptr [esp], eax
0x1b88:     e8 13 24 01 00                     	call 0x13fa0 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x1b8d:     eb af                              	jmp 0x1b3e <function_1ad2+0x6c>
; function: function_1b8f at 0x1b8f -- 0x1b90
; dynamically linked function: __stack_chk_fail at 0x1b90 -- 0x1b91
; data inside code section at 0x1b91 -- 0x1b95
0x1b91:     ff ff ff 89                                        |....            |
; function: function_1b95 at 0x1b95 -- 0x1b96
0x1b95:     c3                                 	ret 
; data inside code section at 0x1b96 -- 0x1ba6
0x1b96:     8d 44 24 38 89 04 24 e8  3e 0d 01 00 89 1c 24 e8   |.D$8..$.>.....$.|
; dynamically linked function: _Unwind_Resume at 0x1ba6 -- 0x1ba7
; data inside code section at 0x1ba7 -- 0x1bb0
0x1ba7:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: _ZN5CNode21CloseSocketDisconnectEv at 0x1bb0 -- 0x1bf4
0x1bb0:     83 ec 7c                           	sub esp, 0x7c
0x1bb3:     89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x1bb7:     8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x1bbe:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bc4:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1bc8:     31 c0                              	xor eax, eax
0x1bca:     89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0x1bce:     89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x1bd2:     83 7b 08 ff                        	cmp dword ptr [ebx + 8], -1
0x1bd6:     89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x1bda:     c6 83 d1 01 00 00 01               	mov byte ptr [ebx + 0x1d1], 1
0x1be1:     74 29                              	je 0x1c0c <function_1c0c>
0x1be3:     8b 83 ac 01 00 00                  	mov eax, dword ptr [ebx + 0x1ac]
0x1be9:     c7 04 24 9a a0 00 00               	mov dword ptr [esp], 0xa09a ; "disconnecting node %s\n"
0x1bf0:     89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1bf4 -- 0x1bf5
0x1bf4:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1bf5 -- 0x1bf6
; data inside code section at 0x1bf6 -- 0x1c05
0x1bf6:     ff ff ff 8b 43 08 83 f8  ff 0f 85 7b 01 00 00      |....C......{... |
; function: function_1c05 at 0x1c05 -- 0x1c06
; data inside code section at 0x1c06 -- 0x1c0c
0x1c06:     43 08 ff ff ff ff                                  |C.....          |
; function: function_1c0c at 0x1c0c -- 0x1d30
0x1c0c:     8d 83 04 01 00 00                  	lea eax, [ebx + 0x104]
0x1c12:     8d 74 24 54                        	lea esi, [esp + 0x54]
0x1c16:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x1c1e:     c7 44 24 10 05 02 00 00            	mov dword ptr [esp + 0x10], 0x205
0x1c26:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x1c2e:     c7 44 24 08 b1 a0 00 00            	mov dword ptr [esp + 8], 0xa0b1 ; "cs_vRecvMsg"
0x1c36:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1c3a:     89 34 24                           	mov dword ptr [esp], esi
0x1c3d:     e8 1e 10 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x1c42:     80 7c 24 58 00                     	cmp byte ptr [esp + 0x58], 0
0x1c47:     75 3f                              	jne 0x1c88 <function_1c0c+0x7c>
0x1c49:     3b 1d 14 a3 00 00                  	cmp ebx, dword ptr [0xa314] ; "dnsseed"
0x1c4f:     0f 84 18 01 00 00                  	je 0x1d6d <function_1d6d>
0x1c55:     89 34 24                           	mov dword ptr [esp], esi
0x1c58:     e8 83 0c 01 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x1c5d:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x1c61:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1c68:     0f 85 26 01 00 00                  	jne 0x1d94 <function_1d94>
0x1c6e:     8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x1c72:     8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x1c76:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x1c7a:     8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x1c7e:     83 c4 7c                           	add esp, 0x7c
0x1c81:     c3                                 	ret 
; data inside code section at 0x1c82 -- 0x1c88
0x1c82:     8d b6 00 00 00 00                                  |......          |
0x1c88:     8b 83 e8 00 00 00                  	mov eax, dword ptr [ebx + 0xe8]
0x1c8e:     8b ab e4 00 00 00                  	mov ebp, dword ptr [ebx + 0xe4]
0x1c94:     8b bb f0 00 00 00                  	mov edi, dword ptr [ebx + 0xf0]
0x1c9a:     8b 93 f8 00 00 00                  	mov edx, dword ptr [ebx + 0xf8]
0x1ca0:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1ca4:     8b 83 ec 00 00 00                  	mov eax, dword ptr [ebx + 0xec]
0x1caa:     8b 8b fc 00 00 00                  	mov ecx, dword ptr [ebx + 0xfc]
0x1cb0:     89 6c 24 34                        	mov dword ptr [esp + 0x34], ebp
0x1cb4:     89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x1cb8:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1cbc:     8b 83 f4 00 00 00                  	mov eax, dword ptr [ebx + 0xf4]
0x1cc2:     89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x1cc6:     89 7c 24 40                        	mov dword ptr [esp + 0x40], edi
0x1cca:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1cce:     8b 83 00 01 00 00                  	mov eax, dword ptr [ebx + 0x100]
0x1cd4:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x1cd8:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1cdc:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1ce0:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1ce4:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1ce8:     8d 44 24 44                        	lea eax, [esp + 0x44]
0x1cec:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1cf0:     8d 44 24 34                        	lea eax, [esp + 0x34]
0x1cf4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1cf8:     8d 83 dc 00 00 00                  	lea eax, [ebx + 0xdc]
0x1cfe:     89 04 24                           	mov dword ptr [esp], eax
0x1d01:     e8 aa 3a 01 00                     	call 0x157b0 <_ZNSt5dequeI11CNetMessageSaIS0_EE19_M_destroy_data_auxESt15_Deque_iteratorIS0_RS0_PS0_ES6_>
0x1d06:     8b 83 00 01 00 00                  	mov eax, dword ptr [ebx + 0x100]
0x1d0c:     8d 50 04                           	lea edx, [eax + 4]
0x1d0f:     8d 47 04                           	lea eax, [edi + 4]
0x1d12:     39 c2                              	cmp edx, eax
0x1d14:     76 2b                              	jbe 0x1d41 <function_1d41>
0x1d16:     89 7c 24 20                        	mov dword ptr [esp + 0x20], edi
0x1d1a:     89 d7                              	mov edi, edx
0x1d1c:     89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x1d20:     89 c3                              	mov ebx, eax
0x1d22:     8d b6 00 00 00 00                  	lea esi, [esi]
0x1d28:     8b 03                              	mov eax, dword ptr [ebx]
0x1d2a:     83 c3 04                           	add ebx, 4
0x1d2d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1d30 -- 0x1d31
0x1d30:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1d31 -- 0x1d32
; data inside code section at 0x1d32 -- 0x1d41
0x1d32:     ff ff ff 39 df 77 ef 8b  7c 24 20 8b 5c 24 2c      |...9.w..|$ .\$, |
; function: function_1d41 at 0x1d41 -- 0x1d6d
0x1d41:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x1d45:     3b 1d 14 a3 00 00                  	cmp ebx, dword ptr [0xa314] ; "dnsseed"
0x1d4b:     89 ab f4 00 00 00                  	mov dword ptr [ebx + 0xf4], ebp
0x1d51:     89 bb 00 01 00 00                  	mov dword ptr [ebx + 0x100], edi
0x1d57:     89 83 f8 00 00 00                  	mov dword ptr [ebx + 0xf8], eax
0x1d5d:     8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1d61:     89 83 fc 00 00 00                  	mov dword ptr [ebx + 0xfc], eax
0x1d67:     0f 85 e8 fe ff ff                  	jne 0x1c55
; function: function_1d6d at 0x1d6d -- 0x1d7c
0x1d6d:     c7 05 14 a3 00 00 00 00 00 00      	mov dword ptr [0xa314], 0 ; "dnsseed"
0x1d77:     e9 d9 fe ff ff                     	jmp 0x1c55
; data inside code section at 0x1d7c -- 0x1d80
0x1d7c:     8d 74 26 00                                        |.t&.            |
; function: function_1d80 at 0x1d80 -- 0x1d94
0x1d80:     89 04 24                           	mov dword ptr [esp], eax
0x1d83:     e8 fc ff ff ff                     	call 0x1d84
0x1d88:     c7 43 08 ff ff ff ff               	mov dword ptr [ebx + 8], 0xffffffff
0x1d8f:     e9 71 fe ff ff                     	jmp 0x1c05 <function_1c05>
; function: function_1d94 at 0x1d94 -- 0x1d95
; dynamically linked function: __stack_chk_fail at 0x1d95 -- 0x1d96
; data inside code section at 0x1d96 -- 0x1d9a
0x1d96:     ff ff ff 89                                        |....            |
; function: function_1d9a at 0x1d9a -- 0x1d9b
0x1d9a:     c3                                 	ret 
; data inside code section at 0x1d9b -- 0x1da7
0x1d9b:     89 34 24 e8 3d 0b 01 00  89 1c 24 e8               |.4$.=.....$.    |
; dynamically linked function: _Unwind_Resume at 0x1da7 -- 0x1da8
; data inside code section at 0x1da8 -- 0x1db0
0x1da8:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: _ZN5CNode11ClearBannedEv at 0x1db0 -- 0x1e0d
0x1db0:     83 ec 2c                           	sub esp, 0x2c
0x1db3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1db9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1dbd:     31 c0                              	xor eax, eax
0x1dbf:     a1 dc 9e 00 00                     	mov eax, dword ptr [0x9edc] ; "ex_lock(m)"
0x1dc4:     c7 04 24 d4 9e 00 00               	mov dword ptr [esp], 0x9ed4 ; "read_mutex_lock(m)"
0x1dcb:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1dcf:     e8 2c 52 01 00                     	call 0x17000 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E>
0x1dd4:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1dd8:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ddf:     c7 05 e0 9e 00 00 d8 9e 00 00      	mov dword ptr [0x9ee0], 0x9ed8 ; "ock(m)"
0x1de9:     c7 05 dc 9e 00 00 00 00 00 00      	mov dword ptr [0x9edc], 0 ; "ex_lock(m)"
0x1df3:     c7 05 e4 9e 00 00 d8 9e 00 00      	mov dword ptr [0x9ee4], 0x9ed8 ; "m)"
0x1dfd:     c7 05 e8 9e 00 00 00 00 00 00      	mov dword ptr [0x9ee8], 0 ; "pthread_mutex_unlock(m)"
0x1e07:     75 04                              	jne 0x1e0d <_ZN5CNode11ClearBannedEv+0x5c>
0x1e09:     83 c4 2c                           	add esp, 0x2c
0x1e0c:     c3                                 	ret 
; data inside code section at 0x1e0d -- 0x1e0e
0x1e0d:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e0e -- 0x1e0f
; data inside code section at 0x1e0f -- 0x1e20
0x1e0f:     ff ff ff 8d b4 26 00 00  00 00 8d bc 27 00 00 00   |.....&......'...|
0x1e1f:     00                                                 |.               |
; function: _Z14SocketSendDataP5CNode at 0x1e20 -- 0x1e8a
0x1e20:     55                                 	push ebp
0x1e21:     57                                 	push edi
0x1e22:     56                                 	push esi
0x1e23:     53                                 	push ebx
0x1e24:     83 ec 6c                           	sub esp, 0x6c
0x1e27:     8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x1e2e:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e34:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1e38:     31 c0                              	xor eax, eax
0x1e3a:     8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x1e3d:     8b 73 40                           	mov esi, dword ptr [ebx + 0x40]
0x1e40:     8b 6b 48                           	mov ebp, dword ptr [ebx + 0x48]
0x1e43:     8b 53 2c                           	mov edx, dword ptr [ebx + 0x2c]
0x1e46:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e4a:     8b 43 4c                           	mov eax, dword ptr [ebx + 0x4c]
0x1e4d:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1e51:     8d b4 26 00 00 00 00               	lea esi, [esi]
0x1e58:     39 73 50                           	cmp dword ptr [ebx + 0x50], esi
0x1e5b:     0f 84 a7 00 00 00                  	je 0x1f08 <function_1f08>
0x1e61:     8b 0e                              	mov ecx, dword ptr [esi]
0x1e63:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1e66:     29 c8                              	sub eax, ecx
0x1e68:     39 d0                              	cmp eax, edx
0x1e6a:     0f 86 84 01 00 00                  	jbe 0x1ff4 <function_1ff4>
0x1e70:     29 d0                              	sub eax, edx
0x1e72:     01 ca                              	add edx, ecx
0x1e74:     c7 44 24 0c 40 40 00 00            	mov dword ptr [esp + 0xc], 0x4040
0x1e7c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1e80:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1e84:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x1e87:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1e8a -- 0x1e8b
0x1e8a:     e8                                                 |.               |
; dynamically linked function: send at 0x1e8b -- 0x1e8c
; data inside code section at 0x1e8c -- 0x1e9b
0x1e8c:     ff ff ff 83 f8 00 89 c7  0f 8e a6 00 00 00 e8      |............... |
; dynamically linked function: _Z7GetTimev at 0x1e9b -- 0x1e9c
; data inside code section at 0x1e9c -- 0x1f08
0x1e9c:     ff ff ff 89 93 68 01 00  00 89 fa c1 fa 1f 89 83   |.....h..........|
0x1eac:     64 01 00 00 8b 46 04 01  7b 30 11 53 34 03 7b 2c   |d....F..{0.S4.{,|
0x1ebc:     2b 06 89 7b 2c 39 c7 0f  85 af 00 00 00 83 c6 0c   |+..{,9..........|
0x1ecc:     31 d2 29 7b 28 39 f5 c7  43 2c 00 00 00 00 0f 85   |1.){(9..C,......|
0x1edc:     78 ff ff ff 8b 44 24 18  31 d2 83 44 24 18 04 8b   |x....D$.1..D$...|
0x1eec:     40 04 89 c5 89 c6 81 c5  f8 01 00 00 39 73 50 89   |@...........9sP.|
0x1efc:     44 24 1c 0f 85 5c ff ff  ff 8d 76 00               |D$...\....v.    |
; function: function_1f08 at 0x1f08 -- 0x1f36
0x1f08:     85 d2                              	test edx, edx
0x1f0a:     0f 85 0d 01 00 00                  	jne 0x201d <function_201d>
0x1f10:     8b 43 28                           	mov eax, dword ptr [ebx + 0x28]
0x1f13:     85 c0                              	test eax, eax
0x1f15:     74 66                              	je 0x1f7d <function_1f7d>
0x1f17:     c7 44 24 0c 0b 7b 02 00            	mov dword ptr [esp + 0xc], 0x27b0b ; "void SocketSendData(CNode*)"
0x1f1f:     c7 44 24 08 de 02 00 00            	mov dword ptr [esp + 8], 0x2de
0x1f27:     c7 44 24 04 27 a0 00 00            	mov dword ptr [esp + 4], 0xa027 ; "net.cpp"
0x1f2f:     c7 04 24 eb a0 00 00               	mov dword ptr [esp], 0xa0eb ; "pnode->nSendSize == 0"
; data inside code section at 0x1f36 -- 0x1f37
0x1f36:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1f37 -- 0x1f38
; data inside code section at 0x1f38 -- 0x1f43
0x1f38:     ff ff ff 90 8d 74 26 00  74 36 e8                  |.....t&.t6.     |
; dynamically linked function: __errno_location at 0x1f43 -- 0x1f44
; data inside code section at 0x1f44 -- 0x1f69
0x1f44:     ff ff ff 8b 00 83 f8 5a  74 2a 83 f8 0b 74 25 83   |.......Zt*...t%.|
0x1f54:     f8 73 74 20 83 f8 04 74  1b 89 44 24 04 c7 04 24   |.st ...t..D$...$|
0x1f64:     bd a0 00 00 e8                                     |.....           |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1f69 -- 0x1f6a
; data inside code section at 0x1f6a -- 0x1f7d
0x1f6a:     ff ff ff 89 1c 24 e8 3b  fc ff ff 8d 76 00 39 73   |.....$.;....v.9s|
0x1f7a:     50 74 6f                                           |Pto             |
; function: function_1f7d at 0x1f7d -- 0x1fec
0x1f7d:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1f81:     8d 54 24 4c                        	lea edx, [esp + 0x4c]
0x1f85:     89 74 24 4c                        	mov dword ptr [esp + 0x4c], esi
0x1f89:     89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0x1f8d:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x1f91:     8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1f95:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1f99:     8b 43 40                           	mov eax, dword ptr [ebx + 0x40]
0x1f9c:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1fa0:     8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x1fa3:     89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x1fa7:     8b 43 48                           	mov eax, dword ptr [ebx + 0x48]
0x1faa:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1fae:     8b 43 4c                           	mov eax, dword ptr [ebx + 0x4c]
0x1fb1:     83 c3 38                           	add ebx, 0x38
0x1fb4:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1fb8:     8d 54 24 3c                        	lea edx, [esp + 0x3c]
0x1fbc:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1fc0:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1fc4:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1fc8:     8d 44 24 20                        	lea eax, [esp + 0x20]
0x1fcc:     89 04 24                           	mov dword ptr [esp], eax
0x1fcf:     e8 9c 56 01 00                     	call 0x17670 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_>
0x1fd4:     83 ec 04                           	sub esp, 4
0x1fd7:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x1fdb:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fe2:     75 34                              	jne 0x2018 <function_2018>
0x1fe4:     83 c4 6c                           	add esp, 0x6c
0x1fe7:     5b                                 	pop ebx
0x1fe8:     5e                                 	pop esi
0x1fe9:     5f                                 	pop edi
0x1fea:     5d                                 	pop ebp
0x1feb:     c3                                 	ret 
; function: function_1fec at 0x1fec -- 0x1ff4
0x1fec:     8b 53 2c                           	mov edx, dword ptr [ebx + 0x2c]
0x1fef:     e9 14 ff ff ff                     	jmp 0x1f08 <function_1f08>
; function: function_1ff4 at 0x1ff4 -- 0x2018
0x1ff4:     c7 44 24 0c 0b 7b 02 00            	mov dword ptr [esp + 0xc], 0x27b0b ; "void SocketSendData(CNode*)"
0x1ffc:     c7 44 24 08 bf 02 00 00            	mov dword ptr [esp + 8], 0x2bf
0x2004:     c7 44 24 04 27 a0 00 00            	mov dword ptr [esp + 4], 0xa027 ; "net.cpp"
0x200c:     c7 04 24 d0 d7 00 00               	mov dword ptr [esp], 0xd7d0 ; "data.size() > pnode->nSendOffset"
0x2013:     e8 fc ff ff ff                     	call 0x2014
; function: function_2018 at 0x2018 -- 0x2019
; dynamically linked function: __stack_chk_fail at 0x2019 -- 0x201a
; data inside code section at 0x201a -- 0x201d
0x201a:     ff ff ff                                           |...             |
; function: function_201d at 0x201d -- 0x203c
0x201d:     c7 44 24 0c 0b 7b 02 00            	mov dword ptr [esp + 0xc], 0x27b0b ; "void SocketSendData(CNode*)"
0x2025:     c7 44 24 08 dd 02 00 00            	mov dword ptr [esp + 8], 0x2dd
0x202d:     c7 44 24 04 27 a0 00 00            	mov dword ptr [esp + 4], 0xa027 ; "net.cpp"
0x2035:     c7 04 24 d3 a0 00 00               	mov dword ptr [esp], 0xa0d3 ; "pnode->nSendOffset == 0"
; data inside code section at 0x203c -- 0x203d
0x203c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x203d -- 0x203e
; data inside code section at 0x203e -- 0x2041
0x203e:     ff ff ff                                           |...             |
; function: function_2041 at 0x2041 -- 0x2043
0x2041:     eb 0d                              	jmp 0x2050 <_Z8RecvLinejRSs>
; data inside code section at 0x2043 -- 0x2050
0x2043:     90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _Z8RecvLinejRSs at 0x2050 -- 0x2082
0x2050:     55                                 	push ebp
0x2051:     57                                 	push edi
0x2052:     56                                 	push esi
0x2053:     53                                 	push ebx
0x2054:     83 ec 3c                           	sub esp, 0x3c
0x2057:     8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x205b:     8d 7c 24 2b                        	lea edi, [esp + 0x2b]
0x205f:     8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x2063:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2069:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x206d:     31 c0                              	xor eax, eax
0x206f:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x2077:     c7 44 24 04 11 a1 00 00            	mov dword ptr [esp + 4], 0xa111
0x207f:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2082 -- 0x2083
0x2082:     e8                                                 |.               |
; dynamically linked function: _ZNSs6assignEPKcj at 0x2083 -- 0x2084
; data inside code section at 0x2084 -- 0x2088
0x2084:     ff ff ff 90                                        |....            |
; function: function_2088 at 0x2088 -- 0x20ea
0x2088:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x2090:     c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x2098:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x209c:     89 2c 24                           	mov dword ptr [esp], ebp
0x209f:     e8 fc ff ff ff                     	call 0x20a0
0x20a4:     85 c0                              	test eax, eax
0x20a6:     89 c3                              	mov ebx, eax
0x20a8:     7e 76                              	jle 0x2120 <function_2120>
0x20aa:     0f b6 5c 24 2b                     	movzx ebx, byte ptr [esp + 0x2b]
0x20af:     80 fb 0a                           	cmp bl, 0xa
0x20b2:     74 d4                              	je 0x2088 <function_2088>
0x20b4:     80 fb 0d                           	cmp bl, 0xd
0x20b7:     74 45                              	je 0x20fe
0x20b9:     8b 06                              	mov eax, dword ptr [esi]
0x20bb:     8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x20be:     8d 4a 01                           	lea ecx, [edx + 1]
0x20c1:     3b 48 f8                           	cmp ecx, dword ptr [eax - 8]
0x20c4:     77 06                              	ja 0x20cc <function_2088+0x44>
0x20c6:     83 78 fc 00                        	cmp dword ptr [eax - 4], 0
0x20ca:     7e 19                              	jle 0x20e5 <function_2088+0x5d>
0x20cc:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x20d0:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x20d4:     89 34 24                           	mov dword ptr [esp], esi
0x20d7:     e8 fc ff ff ff                     	call 0x20d8
0x20dc:     8b 06                              	mov eax, dword ptr [esi]
0x20de:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x20e2:     8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x20e5:     88 1c 10                           	mov byte ptr [eax + edx], bl
0x20e8:     8b 06                              	mov eax, dword ptr [esi]
; data inside code section at 0x20ea -- 0x20eb
0x20ea:     3d                                                 |=               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x20eb -- 0x211c
; data inside code section at 0x211c -- 0x2120
0x211c:     8d 74 26 00                                        |.t&.            |
; function: function_2120 at 0x2120 -- 0x2121
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x2121 -- 0x2122
; data inside code section at 0x2122 -- 0x212a
0x2122:     ff ff ff 85 db 74 1f e8                            |.....t..        |
; dynamically linked function: __errno_location at 0x212a -- 0x212b
; data inside code section at 0x212b -- 0x215b
0x212b:     ff ff ff 8b 00 83 f8 5a  0f 84 4f ff ff ff 83 f8   |.......Z..O.....|
0x213b:     04 74 3a 83 f8 0b 74 35  83 f8 73 74 30 8b 16 b8   |.t:...t5..st0...|
0x214b:     01 00 00 00 8b 52 f4 85  d2 75 ad 85 db 74 37 e8   |.....R...u...t7.|
; dynamically linked function: __errno_location at 0x215b -- 0x215c
; data inside code section at 0x215c -- 0x216d
0x215c:     ff ff ff 8b 00 c7 04 24  21 a1 00 00 89 44 24 04   |.......$!....D$.|
0x216c:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x216d -- 0x216e
; data inside code section at 0x216e -- 0x2170
0x216e:     ff ff                                              |..              |
; function: function_2170 at 0x2170 -- 0x2191
0x2170:     ff 31                              	push dword ptr [ecx]
0x2172:     c0 eb 8e                           	shr bl, 0x8e
0x2175:     8d 76 00                           	lea esi, [esi]
0x2178:     c7 04 24 0a 00 00 00               	mov dword ptr [esp], 0xa
0x217f:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2187:     e8 e4 6e 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x218c:     e9 f7 fe ff ff                     	jmp 0x2088 <function_2088>
; data inside code section at 0x2191 -- 0x2199
0x2191:     c7 04 24 12 a1 00 00 e8                            |..$.....        |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2199 -- 0x219a
; data inside code section at 0x219a -- 0x219d
0x219a:     ff ff ff                                           |...             |
; function: function_219d at 0x219d -- 0x21a4
0x219d:     31 c0                              	xor eax, eax
0x219f:     e9 5f ff ff ff                     	jmp 0x2103
; function: function_21a4 at 0x21a4 -- 0x21b9
0x21a4:     c7 40 fc 00 00 00 00               	mov dword ptr [eax - 4], 0
0x21ab:     89 48 f4                           	mov dword ptr [eax - 0xc], ecx
0x21ae:     c6 04 08 00                        	mov byte ptr [eax + ecx], 0
0x21b2:     8b 06                              	mov eax, dword ptr [esi]
0x21b4:     e9 3c ff ff ff                     	jmp 0x20f5
; function: function_21b9 at 0x21b9 -- 0x21ba
; dynamically linked function: __stack_chk_fail at 0x21ba -- 0x21bb
; data inside code section at 0x21bb -- 0x21bd
0x21bb:     ff ff                                              |..              |
; function: function_21bd at 0x21bd -- 0x21c0
0x21bd:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _Z16GetMyExternalIP2RK8CServicePKcS3_R8CNetAddr at 0x21c0 -- 0x21d3
0x21c0:     55                                 	push ebp
0x21c1:     57                                 	push edi
0x21c2:     56                                 	push esi
0x21c3:     53                                 	push ebx
0x21c4:     83 ec 5c                           	sub esp, 0x5c
0x21c7:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21cd:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x21d1:     31 c0                              	xor eax, eax
; data inside code section at 0x21d3 -- 0x21d4
0x21d3:     a1                                                 |.               |
; dynamically linked function: nConnectTimeout at 0x21d4 -- 0x222c
; data inside code section at 0x222c -- 0x222d
0x222c:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x222d -- 0x222e
; data inside code section at 0x222e -- 0x2231
0x222e:     ff ff ff                                           |...             |
; function: function_2231 at 0x2231 -- 0x224c
0x2231:     8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x2235:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x223c:     89 f8                              	mov eax, edi
0x223e:     0f 85 33 03 00 00                  	jne 0x2577 <function_2577>
0x2244:     83 c4 5c                           	add esp, 0x5c
0x2247:     5b                                 	pop ebx
0x2248:     5e                                 	pop esi
0x2249:     5f                                 	pop edi
0x224a:     5d                                 	pop ebp
0x224b:     c3                                 	ret 
; data inside code section at 0x224c -- 0x2250
0x224c:     8d 74 26 00                                        |.t&.            |
; function: function_2250 at 0x2250 -- 0x22f0
0x2250:     89 3c 24                           	mov dword ptr [esp], edi
0x2253:     8d 74 24 24                        	lea esi, [esp + 0x24]
0x2257:     e8 fc ff ff ff                     	call 0x2258
0x225c:     c7 44 24 0c 00 40 00 00            	mov dword ptr [esp + 0xc], 0x4000
0x2264:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x2268:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x226c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2270:     89 04 24                           	mov dword ptr [esp], eax
0x2273:     e8 fc ff ff ff                     	call 0x2274
0x2278:     c7 44 24 24 0c 00 00 00            	mov dword ptr [esp + 0x24], 0xc
0x2280:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2284:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x2288:     89 04 24                           	mov dword ptr [esp], eax
0x228b:     e8 c0 fd ff ff                     	call 0x2050 <_Z8RecvLinejRSs>
0x2290:     84 c0                              	test al, al
0x2292:     0f 84 8d 02 00 00                  	je 0x2525 <function_2525>
0x2298:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x229c:     8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x229f:     85 d2                              	test edx, edx
0x22a1:     75 dd                              	jne 0x2280 <function_2250+0x30>
0x22a3:     90                                 	nop 
0x22a4:     8d 74 26 00                        	lea esi, [esi]
0x22a8:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x22ac:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x22b0:     89 04 24                           	mov dword ptr [esp], eax
0x22b3:     e8 98 fd ff ff                     	call 0x2050 <_Z8RecvLinejRSs>
0x22b8:     84 c0                              	test al, al
0x22ba:     0f 84 81 02 00 00                  	je 0x2541 <function_2541>
0x22c0:     85 db                              	test ebx, ebx
0x22c2:     0f 84 8e 00 00 00                  	je 0x2356 <function_2356>
0x22c8:     89 1c 24                           	mov dword ptr [esp], ebx
0x22cb:     e8 fc ff ff ff                     	call 0x22cc
0x22d0:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x22d8:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x22dc:     89 34 24                           	mov dword ptr [esp], esi
0x22df:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22e3:     e8 fc ff ff ff                     	call 0x22e4
0x22e8:     83 f8 ff                           	cmp eax, -1
0x22eb:     74 bb                              	je 0x22a8 <function_2250+0x58>
0x22ed:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x22f0 -- 0x22f1
0x22f0:     e8                                                 |.               |
; dynamically linked function: strlen at 0x22f1 -- 0x22f2
; data inside code section at 0x22f2 -- 0x2309
0x22f2:     ff ff ff c7 44 24 08 00  00 00 00 89 5c 24 04 89   |....D$......\$..|
0x2302:     34 24 89 44 24 0c e8                               |4$.D$..         |
; dynamically linked function: _ZNKSs4findEPKcjj at 0x2309 -- 0x230a
; data inside code section at 0x230a -- 0x2313
0x230a:     ff ff ff 89 1c 24 89 c7  e8                        |.....$...       |
; dynamically linked function: strlen at 0x2313 -- 0x2314
; data inside code section at 0x2314 -- 0x233e
0x2314:     ff ff ff 01 c7 8b 44 24  24 3b 78 f4 0f 87 74 02   |......D$$;x...t.|
0x2324:     00 00 8d 5c 24 28 c7 44  24 0c ff ff ff ff 89 7c   |...\$(.D$......||
0x2334:     24 08 89 74 24 04 89 1c  24 e8                     |$..t$...$.      |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x233e -- 0x233f
; data inside code section at 0x233f -- 0x234a
0x233f:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSs6assignERKSs at 0x234a -- 0x234b
; data inside code section at 0x234b -- 0x2352
0x234b:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2352 -- 0x2353
; data inside code section at 0x2353 -- 0x2356
0x2353:     ff ff ff                                           |...             |
; function: function_2356 at 0x2356 -- 0x237e
0x2356:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x235a:     83 f8 ff                           	cmp eax, -1
0x235d:     0f 85 ad 01 00 00                  	jne 0x2510 <function_2510>
0x2363:     c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x236b:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x2373:     c7 44 24 04 47 a1 00 00            	mov dword ptr [esp + 4], 0xa147
0x237b:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x237e -- 0x237f
0x237e:     e8                                                 |.               |
; dynamically linked function: _ZNKSs4findEPKcjj at 0x237f -- 0x2380
; data inside code section at 0x2380 -- 0x23e8
0x2380:     ff ff ff 83 f8 ff 74 50  c7 44 24 0c 01 00 00 00   |......tP.D$.....|
0x2390:     c7 44 24 08 00 00 00 00  c7 44 24 04 47 a1 00 00   |.D$......D$.G...|
0x23a0:     89 34 24 e8 fc ff ff ff  8d 5c 24 2c 89 44 24 0c   |.4$......\$,.D$.|
0x23b0:     c7 44 24 08 00 00 00 00  89 74 24 04 89 1c 24 e8   |.D$......t$...$.|
0x23c0:     fc ff ff ff 89 5c 24 04  89 34 24 e8 fc ff ff ff   |.....\$..4$.....|
0x23d0:     89 1c 24 e8 fc ff ff ff  8b 5c 24 24 c7 44 24 04   |..$......\$$.D$.|
0x23e0:     49 a1 00 00 89 1c 24 e8                            |I.....$.        |
; dynamically linked function: strspn at 0x23e8 -- 0x23e9
; data inside code section at 0x23e9 -- 0x240d
0x23e9:     ff ff ff 3b 43 f4 0f 87  b5 01 00 00 8d 5c 24 30   |...;C........\$0|
0x23f9:     c7 44 24 0c ff ff ff ff  89 44 24 08 89 74 24 04   |.D$......D$..t$.|
0x2409:     89 1c 24 e8                                        |..$.            |
; dynamically linked function: _ZNSsC1ERKSsjj at 0x240d -- 0x240e
; data inside code section at 0x240e -- 0x2419
0x240e:     ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSs6assignERKSs at 0x2419 -- 0x241a
; data inside code section at 0x241a -- 0x2421
0x241a:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2421 -- 0x2422
; data inside code section at 0x2422 -- 0x2428
0x2422:     ff ff ff 8d 76 00                                  |....v.          |
; function: function_2428 at 0x2428 -- 0x2429
; data inside code section at 0x2429 -- 0x244f
0x2429:     7c 24 24 8b 5f f4 85 db  75 75 8d 5c 24 3a c7 44   ||$$._...uu.\$:.D|
0x2439:     24 0c 01 00 00 00 c7 44  24 08 00 00 00 00 89 74   |$......D$......t|
0x2449:     24 04 89 1c 24 e8                                  |$...$.          |
; dynamically linked function: _ZN8CServiceC1ERKSsib at 0x244f -- 0x2450
; data inside code section at 0x2450 -- 0x245f
0x2450:     ff ff ff 8d 7c 24 34 89  5c 24 04 89 3c 24 e8      |....|$4.\$..<$. |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x245f -- 0x2460
; data inside code section at 0x2460 -- 0x247e
0x2460:     ff ff ff 83 ec 04 8b 44  24 34 c7 04 24 90 d8 00   |.......D$4..$...|
0x2470:     00 89 44 24 08 8b 44 24  24 89 44 24 04 e8         |..D$..D$$.D$..  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x247e -- 0x247f
; data inside code section at 0x247f -- 0x2486
0x247f:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2486 -- 0x2487
; data inside code section at 0x2487 -- 0x248e
0x2487:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNK8CNetAddr7IsValidEv at 0x248e -- 0x248f
; data inside code section at 0x248f -- 0x2498
0x248f:     ff ff ff 84 c0 75 59 31  ff                        |.....uY1.       |
; function: function_2498 at 0x2498 -- 0x24a5
0x2498:     89 34 24                           	mov dword ptr [esp], esi
0x249b:     e8 fc ff ff ff                     	call 0x249c
0x24a0:     e9 8c fd ff ff                     	jmp 0x2231 <function_2231>
; data inside code section at 0x24a5 -- 0x24b3
0x24a5:     8d 76 00 8b 47 fc 85 c0  78 0c 89 34 24 e8         |.v..G...x..4$.  |
; dynamically linked function: _ZNSs12_M_leak_hardEv at 0x24b3 -- 0x24b4
; data inside code section at 0x24b4 -- 0x24c4
0x24b4:     ff ff ff 8b 7c 24 24 0f  be 44 1f ff 89 04 24 e8   |....|$$..D....$.|
; dynamically linked function: isspace at 0x24c4 -- 0x24c5
; data inside code section at 0x24c5 -- 0x24e6
0x24c5:     ff ff ff 85 c0 0f 84 63  ff ff ff c7 44 24 08 00   |.......c....D$..|
0x24d5:     00 00 00 8b 47 f4 89 34  24 83 e8 01 89 44 24 04   |....G..4$....D$.|
0x24e5:     e8                                                 |.               |
; dynamically linked function: _ZNSs6resizeEjc at 0x24e6 -- 0x24e7
; data inside code section at 0x24e7 -- 0x24ea
0x24e7:     ff ff ff                                           |...             |
; function: function_24ea at 0x24ea -- 0x24ef
0x24ea:     e9 39 ff ff ff                     	jmp 0x2428 <function_2428>
; data inside code section at 0x24ef -- 0x24f3
0x24ef:     89 1c 24 e8                                        |..$.            |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x24f3 -- 0x24f4
; data inside code section at 0x24f4 -- 0x2503
0x24f4:     ff ff ff 84 c0 74 9b 89  5c 24 04 89 2c 24 e8      |.....t..\$..,$. |
; dynamically linked function: _ZN8CNetAddr5SetIPERKS_ at 0x2503 -- 0x2504
; data inside code section at 0x2504 -- 0x2507
0x2504:     ff ff ff                                           |...             |
; function: function_2507 at 0x2507 -- 0x250e
0x2507:     bf 01 00 00 00                     	mov edi, 1
0x250c:     eb 8a                              	jmp 0x2498 <function_2498>
; data inside code section at 0x250e -- 0x2510
0x250e:     66 90                                              |f.              |
; function: function_2510 at 0x2510 -- 0x2525
0x2510:     89 04 24                           	mov dword ptr [esp], eax
0x2513:     e8 fc ff ff ff                     	call 0x2514
0x2518:     c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x2520:     e9 3e fe ff ff                     	jmp 0x2363
; function: function_2525 at 0x2525 -- 0x2535
0x2525:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2529:     83 f8 ff                           	cmp eax, -1
0x252c:     75 37                              	jne 0x2565 <function_2565>
0x252e:     c7 04 24 b4 d8 00 00               	mov dword ptr [esp], 0xd8b4 ; "GetMyExternalIP() : connection closed"
; data inside code section at 0x2535 -- 0x2536
0x2535:     e8                                                 |.               |
; dynamically linked function: _Z5errorPKcz at 0x2536 -- 0x2537
; data inside code section at 0x2537 -- 0x253a
0x2537:     ff ff ff                                           |...             |
; function: function_253a at 0x253a -- 0x2541
0x253a:     89 c7                              	mov edi, eax
0x253c:     e9 57 ff ff ff                     	jmp 0x2498 <function_2498>
; function: function_2541 at 0x2541 -- 0x2565
0x2541:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2545:     31 ff                              	xor edi, edi
0x2547:     83 f8 ff                           	cmp eax, -1
0x254a:     0f 84 48 ff ff ff                  	je 0x2498 <function_2498>
0x2550:     89 04 24                           	mov dword ptr [esp], eax
0x2553:     e8 fc ff ff ff                     	call 0x2554
0x2558:     c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x2560:     e9 33 ff ff ff                     	jmp 0x2498 <function_2498>
; function: function_2565 at 0x2565 -- 0x2568
0x2565:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2568 -- 0x2569
0x2568:     e8                                                 |.               |
; dynamically linked function: close at 0x2569 -- 0x256a
; data inside code section at 0x256a -- 0x256d
0x256a:     ff ff ff                                           |...             |
; function: function_256d at 0x256d -- 0x2577
0x256d:     c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x2575:     eb b7                              	jmp 0x252e
; function: function_2577 at 0x2577 -- 0x258b
0x2577:     e8 fc ff ff ff                     	call 0x2578
0x257c:     89 c7                              	mov edi, eax
0x257e:     89 1c 24                           	mov dword ptr [esp], ebx
0x2581:     89 fb                              	mov ebx, edi
0x2583:     e8 fc ff ff ff                     	call 0x2584
0x2588:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x258b -- 0x258c
0x258b:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x258c -- 0x258d
; data inside code section at 0x258d -- 0x2590
0x258d:     ff ff ff                                           |...             |
; function: function_2590 at 0x2590 -- 0x259a
0x2590:     89 1c 24                           	mov dword ptr [esp], ebx
0x2593:     e8 fc ff ff ff                     	call 0x2594
0x2598:     eb e2                              	jmp 0x257c
; data inside code section at 0x259a -- 0x25a2
0x259a:     c7 04 24 32 a1 00 00 e8                            |..$2....        |
; dynamically linked function: _ZSt20__throw_out_of_rangePKc at 0x25a2 -- 0x25a3
; data inside code section at 0x25a3 -- 0x25a6
0x25a3:     ff ff ff                                           |...             |
; function: function_25a6 at 0x25a6 -- 0x25aa
0x25a6:     89 c3                              	mov ebx, eax
0x25a8:     eb de                              	jmp 0x2588
; data inside code section at 0x25aa -- 0x25b2
0x25aa:     c7 04 24 32 a1 00 00 e8                            |..$2....        |
; dynamically linked function: _ZSt20__throw_out_of_rangePKc at 0x25b2 -- 0x25b3
; data inside code section at 0x25b3 -- 0x25b6
0x25b3:     ff ff ff                                           |...             |
; function: function_25b6 at 0x25b6 -- 0x25b8
0x25b6:     eb c4                              	jmp 0x257c
; data inside code section at 0x25b8 -- 0x25b9
0x25b8:     89                                                 |.               |
; function: function_25b9 at 0x25b9 -- 0x25ba
0x25b9:     c3                                 	ret 
; data inside code section at 0x25ba -- 0x25be
0x25ba:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x25be -- 0x25bf
; data inside code section at 0x25bf -- 0x25c2
0x25bf:     ff ff ff                                           |...             |
; function: function_25c2 at 0x25c2 -- 0x25c4
0x25c2:     eb c4                              	jmp 0x2588
; data inside code section at 0x25c4 -- 0x25ca
0x25c4:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZNSsD1Ev at 0x25ca -- 0x25cb
; data inside code section at 0x25cb -- 0x25d2
0x25cb:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x25d2 -- 0x25d3
; data inside code section at 0x25d3 -- 0x25e0
0x25d3:     ff ff ff 8d 76 00 8d bc  27 00 00 00 00            |....v...'....   |
; function: _Z15GetMyExternalIPR8CNetAddr at 0x25e0 -- 0x2635
0x25e0:     55                                 	push ebp
0x25e1:     57                                 	push edi
0x25e2:     56                                 	push esi
0x25e3:     31 f6                              	xor esi, esi
0x25e5:     53                                 	push ebx
0x25e6:     83 ec 7c                           	sub esp, 0x7c
0x25e9:     8d 7c 24 24                        	lea edi, [esp + 0x24]
0x25ed:     8b ac 24 90 00 00 00               	mov ebp, dword ptr [esp + 0x90]
0x25f4:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x25fa:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x25fe:     31 c0                              	xor eax, eax
0x2600:     89 3c 24                           	mov dword ptr [esp], edi
0x2603:     e8 fc ff ff ff                     	call 0x2604
0x2608:     bb 01 00 00 00                     	mov ebx, 1
0x260d:     83 fb 01                           	cmp ebx, 1
0x2610:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x2618:     c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x2620:     0f 84 a2 00 00 00                  	je 0x26c8 <function_26c8>
0x2626:     8d 54 24 5a                        	lea edx, [esp + 0x5a]
0x262a:     89 14 24                           	mov dword ptr [esp], edx
0x262d:     c7 44 24 04 77 a1 00 00            	mov dword ptr [esp + 4], 0xa177 ; "74.208.43.192"
; data inside code section at 0x2635 -- 0x2636
0x2635:     e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1EPKcib at 0x2636 -- 0x2637
; data inside code section at 0x2637 -- 0x2674
0x2637:     ff ff ff 8b 44 24 5a 31  d2 83 fe 01 b9 5c d9 00   |....D$Z1.....\..|
0x2647:     00 89 44 24 24 8b 44 24  5e 89 44 24 28 8b 44 24   |..D$$.D$^.D$(.D$|
0x2657:     62 89 44 24 2c 8b 44 24  66 89 44 24 30 0f b7 44   |b.D$,.D$f.D$0..D|
0x2667:     24 6a 66 89 44 24 34 0f  84 1c 01 00 00            |$jf.D$4......   |
; function: function_2674 at 0x2674 -- 0x26c3
0x2674:     89 6c 24 0c                        	mov dword ptr [esp + 0xc], ebp
0x2678:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x267c:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x2680:     89 3c 24                           	mov dword ptr [esp], edi
0x2683:     e8 38 fb ff ff                     	call 0x21c0 <_Z16GetMyExternalIP2RK8CServicePKcS3_R8CNetAddr>
0x2688:     84 c0                              	test al, al
0x268a:     0f 85 20 01 00 00                  	jne 0x27b0 <function_27b0>
0x2690:     83 c3 01                           	add ebx, 1
0x2693:     83 fb 03                           	cmp ebx, 3
0x2696:     0f 85 71 ff ff ff                  	jne 0x260d
0x269c:     83 c6 01                           	add esi, 1
0x269f:     83 fe 02                           	cmp esi, 2
0x26a2:     0f 85 60 ff ff ff                  	jne 0x2608
0x26a8:     31 c0                              	xor eax, eax
0x26aa:     8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x26ae:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x26b5:     0f 85 ff 00 00 00                  	jne 0x27ba <function_27ba>
0x26bb:     83 c4 7c                           	add esp, 0x7c
0x26be:     5b                                 	pop ebx
0x26bf:     5e                                 	pop esi
0x26c0:     5f                                 	pop edi
0x26c1:     5d                                 	pop ebp
0x26c2:     c3                                 	ret 
; data inside code section at 0x26c3 -- 0x26c8
0x26c3:     90 8d 74 26 00                                     |..t&.           |
; function: function_26c8 at 0x26c8 -- 0x2740
0x26c8:     8d 44 24 36                        	lea eax, [esp + 0x36]
0x26cc:     89 04 24                           	mov dword ptr [esp], eax
0x26cf:     c7 44 24 04 57 a1 00 00            	mov dword ptr [esp + 4], 0xa157 ; "91.198.22.70"
0x26d7:     e8 fc ff ff ff                     	call 0x26d8
0x26dc:     8b 44 24 36                        	mov eax, dword ptr [esp + 0x36]
0x26e0:     83 fe 01                           	cmp esi, 1
0x26e3:     ba 4e a1 00 00                     	mov edx, 0xa14e ; "Address:"
0x26e8:     b9 dc d8 00 00                     	mov ecx, 0xd8dc ; "GET / HTTP/1.1\r\nHost: checkip.dyndns.org\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\r\nConnection: close\r\n\r\n"
0x26ed:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x26f1:     8b 44 24 3a                        	mov eax, dword ptr [esp + 0x3a]
0x26f5:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x26f9:     8b 44 24 3e                        	mov eax, dword ptr [esp + 0x3e]
0x26fd:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2701:     8b 44 24 42                        	mov eax, dword ptr [esp + 0x42]
0x2705:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x2709:     0f b7 44 24 46                     	movzx eax, word ptr [esp + 0x46]
0x270e:     66 89 44 24 34                     	mov word ptr [esp + 0x34], ax
0x2713:     0f 85 5b ff ff ff                  	jne 0x2674 <function_2674>
0x2719:     c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x2721:     c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x2729:     c7 44 24 04 64 a1 00 00            	mov dword ptr [esp + 4], 0xa164 ; "checkip.dyndns.org"
0x2731:     8d 44 24 48                        	lea eax, [esp + 0x48]
0x2735:     89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x2739:     89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x273d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2740 -- 0x2741
0x2740:     e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1EPKcib at 0x2741 -- 0x2742
; data inside code section at 0x2742 -- 0x274d
0x2742:     ff ff ff 8d 44 24 48 89  04 24 e8                  |....D$H..$.     |
; dynamically linked function: _ZNK8CNetAddr7IsValidEv at 0x274d -- 0x274e
; data inside code section at 0x274e -- 0x2750
0x274e:     ff ff                                              |..              |
; function: function_2750 at 0x2750 -- 0x2790
0x2750:     ff 8b 54 24 18 8b                  	dec dword ptr [ebx - 0x74e7dbac]
0x2756:     4c                                 	dec esp
0x2757:     24 1c                              	and al, 0x1c
0x2759:     84 c0                              	test al, al
0x275b:     0f 84 13 ff ff ff                  	je 0x2674 <function_2674>
0x2761:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x2765:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x2769:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x276d:     89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x2771:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x2775:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2779:     8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x277d:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x2781:     0f b7 44 24 58                     	movzx eax, word ptr [esp + 0x58]
0x2786:     66 89 44 24 34                     	mov word ptr [esp + 0x34], ax
0x278b:     e9 e4 fe ff ff                     	jmp 0x2674 <function_2674>
; function: function_2790 at 0x2790 -- 0x27aa
0x2790:     c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x2798:     c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x27a0:     c7 44 24 04 85 a1 00 00            	mov dword ptr [esp + 4], 0xa185 ; "www.showmyip.com"
0x27a8:     eb 87                              	jmp 0x2731
; data inside code section at 0x27aa -- 0x27b0
0x27aa:     8d b6 00 00 00 00                                  |......          |
; function: function_27b0 at 0x27b0 -- 0x27ba
0x27b0:     b8 01 00 00 00                     	mov eax, 1
0x27b5:     e9 f0 fe ff ff                     	jmp 0x26aa
; function: function_27ba at 0x27ba -- 0x27bb
; dynamically linked function: __stack_chk_fail at 0x27bb -- 0x27bc
; data inside code section at 0x27bc -- 0x27c0
0x27bc:     ff ff ff 90                                        |....            |
; function: _Z13DumpAddressesv at 0x27c0 -- 0x27eb
0x27c0:     83 ec 2c                           	sub esp, 0x2c
0x27c3:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x27c7:     8d 5c 24 18                        	lea ebx, [esp + 0x18]
0x27cb:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x27cf:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x27d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x27d9:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x27dd:     31 c0                              	xor eax, eax
0x27df:     e8 9c 6a 01 00                     	call 0x19280 <_Z13GetTimeMillisv>
0x27e4:     89 1c 24                           	mov dword ptr [esp], ebx
0x27e7:     89 c6                              	mov esi, eax
0x27e9:     89 d7                              	mov edi, edx
; data inside code section at 0x27eb -- 0x27ec
0x27eb:     e8                                                 |.               |
; dynamically linked function: _ZN7CAddrDBC1Ev at 0x27ec -- 0x27ed
; data inside code section at 0x27ed -- 0x27fc
0x27ed:     ff ff ff c7 44 24 04 80  a1 00 00 89 1c 24 e8      |....D$.......$. |
; dynamically linked function: _ZN7CAddrDB5WriteERK8CAddrMan at 0x27fc -- 0x27fd
; data inside code section at 0x27fd -- 0x282b
0x27fd:     ff ff ff e8 7b 6a 01 00  29 f0 89 44 24 08 a1 18   |....{j..)..D$...|
0x280d:     a2 00 00 19 fa 2b 05 14  a2 00 00 89 54 24 0c c7   |.....+......T$..|
0x281d:     04 24 e4 d9 00 00 c1 f8  02 89 44 24 04 e8         |.$........D$..  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x282b -- 0x282c
; data inside code section at 0x282c -- 0x2833
0x282c:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2833 -- 0x2834
; data inside code section at 0x2834 -- 0x2836
0x2834:     ff ff                                              |..              |
; function: function_2836 at 0x2836 -- 0x2854
0x2836:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x283c:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x2842:     75 10                              	jne 0x2854 <function_2836+0x1d>
0x2844:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x2848:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x284c:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x2850:     83 c4 2c                           	add esp, 0x2c
0x2853:     c3                                 	ret 
; data inside code section at 0x2854 -- 0x2855
0x2854:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x2855 -- 0x2856
; data inside code section at 0x2856 -- 0x285f
0x2856:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x285f -- 0x2860
; data inside code section at 0x2860 -- 0x2867
0x2860:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2867 -- 0x2868
; data inside code section at 0x2868 -- 0x2870
0x2868:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: _Z8StopNodev at 0x2870 -- 0x2889
0x2870:     57                                 	push edi
0x2871:     56                                 	push esi
0x2872:     53                                 	push ebx
0x2873:     83 ec 20                           	sub esp, 0x20
0x2876:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x287c:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2880:     31 c0                              	xor eax, eax
0x2882:     c7 04 24 96 a1 00 00               	mov dword ptr [esp], 0xa196 ; "StopNode()\n"
; data inside code section at 0x2889 -- 0x288a
0x2889:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x288a -- 0x288b
; data inside code section at 0x288b -- 0x288d
0x288b:     ff ff                                              |..              |
; function: function_288d at 0x288d -- 0x28ab
0x288d:     ff c7                              	inc edi
0x288f:     04 24                              	add al, 0x24
0x2891:     00 00                              	add byte ptr [eax], al
0x2893:     00 00                              	add byte ptr [eax], al
0x2895:     e8 16 de ff ff                     	call 0x6b0 <MapPort>
0x289a:     8b 1d 30 a3 00 00                  	mov ebx, dword ptr [0xa330] ; "ncon"
0x28a0:     85 db                              	test ebx, ebx
0x28a2:     74 65                              	je 0x2909 <function_2909>
0x28a4:     be 08 00 00 00                     	mov esi, 8
0x28a9:     eb 0b                              	jmp 0x28b6 <function_28b6>
; data inside code section at 0x28ab -- 0x28b0
0x28ab:     90 8d 74 26 00                                     |..t&.           |
; function: function_28b0 at 0x28b0 -- 0x28b6
0x28b0:     8b 1d 30 a3 00 00                  	mov ebx, dword ptr [0xa330] ; "ncon"
; function: function_28b6 at 0x28b6 -- 0x28bc
0x28b6:     8d 7b 48                           	lea edi, [ebx + 0x48]
0x28b9:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x28bc -- 0x28bd
0x28bc:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x28bd -- 0x28be
; data inside code section at 0x28be -- 0x28cd
0x28be:     ff ff ff 85 c0 75 76 83  43 60 01 89 3c 24 e8      |.....uv.C`..<$. |
; dynamically linked function: pthread_mutex_unlock at 0x28cd -- 0x28ce
; data inside code section at 0x28ce -- 0x28dd
0x28ce:     ff ff ff 85 c0 0f 85 99  00 00 00 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_lock at 0x28dd -- 0x28de
; data inside code section at 0x28de -- 0x2909
0x28de:     ff ff ff 85 c0 0f 85 84  00 00 00 8d 43 18 89 04   |............C...|
0x28ee:     24 e8 fc ff ff ff 85 c0  75 70 89 1c 24 e8 fc ff   |$.......up..$...|
0x28fe:     ff ff 85 c0 75 78 83 ee  01 75 a7                  |....ux...u.     |
; function: function_2909 at 0x2909 -- 0x293b
0x2909:     c7 04 24 32 00 00 00               	mov dword ptr [esp], 0x32
0x2910:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2918:     e8 53 67 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x291d:     e8 9e fe ff ff                     	call 0x27c0 <_Z13DumpAddressesv>
0x2922:     b8 01 00 00 00                     	mov eax, 1
0x2927:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x292b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2932:     75 43                              	jne 0x2977 <function_2977>
0x2934:     83 c4 20                           	add esp, 0x20
0x2937:     5b                                 	pop ebx
0x2938:     5e                                 	pop esi
0x2939:     5f                                 	pop edi
0x293a:     c3                                 	ret 
; data inside code section at 0x293b -- 0x2961
0x293b:     8d 5c 24 14 89 44 24 18  c7 44 24 14 20 78 02 00   |.\$..D$..D$. x..|
0x294b:     89 1c 24 e8 3d f0 00 00  89 c6 89 1c 24 e8 f3 c0   |..$.=.......$...|
0x295b:     00 00 89 34 24 e8                                  |...4$.          |
; dynamically linked function: _Unwind_Resume at 0x2961 -- 0x2962
; data inside code section at 0x2962 -- 0x2977
0x2962:     ff ff ff 8d 76 00 e8 09  b8 00 00 e8 00 b7 00 00   |....v...........|
0x2972:     e8 97 b7 00 00                                     |.....           |
; function: function_2977 at 0x2977 -- 0x2990
0x2977:     e8 fc ff ff ff                     	call 0x2978
0x297c:     8d 74 26 00                        	lea esi, [esi]
0x2980:     e8 21 b7 00 00                     	call 0xe0a6 <_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26>
0x2985:     8d 74 26 00                        	lea esi, [esi]
0x2989:     8d bc 27 00 00 00 00               	lea edi, [edi]
; function: _Z10AddOneShotSs at 0x2990 -- 0x29f6
0x2990:     56                                 	push esi
0x2991:     53                                 	push ebx
0x2992:     83 ec 34                           	sub esp, 0x34
0x2995:     8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x2999:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x299d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x29a3:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x29a7:     31 c0                              	xor eax, eax
0x29a9:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x29b1:     c7 44 24 10 51 00 00 00            	mov dword ptr [esp + 0x10], 0x51
0x29b9:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x29c1:     c7 44 24 08 a2 a1 00 00            	mov dword ptr [esp + 8], 0xa1a2 ; "cs_vOneShots"
0x29c9:     c7 44 24 04 e0 9f 00 00            	mov dword ptr [esp + 4], 0x9fe0 ; "oost::function"
0x29d1:     89 1c 24                           	mov dword ptr [esp], ebx
0x29d4:     e8 87 02 01 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x29d9:     8b 15 80 a2 00 00                  	mov edx, dword ptr [0xa280] ; "(%d bytes)\n"
0x29df:     a1 78 a2 00 00                     	mov eax, dword ptr [0xa278] ; "gestest"
0x29e4:     83 ea 04                           	sub edx, 4
0x29e7:     39 d0                              	cmp eax, edx
0x29e9:     74 45                              	je 0x2a30 <function_2a30>
0x29eb:     85 c0                              	test eax, eax
0x29ed:     74 39                              	je 0x2a28 <function_2a28>
0x29ef:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x29f3:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x29f6 -- 0x29f7
0x29f6:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x29f7 -- 0x29f8
; data inside code section at 0x29f8 -- 0x29fa
0x29f8:     ff ff                                              |..              |
; function: function_29fa at 0x29fa -- 0x2a00
0x29fa:     ff a1 78 a2 00 00                  	jmp dword ptr [ecx + 0xa278]
; function: function_2a00 at 0x2a00 -- 0x2a23
0x2a00:     83 c0 04                           	add eax, 4
0x2a03:     a3 78 a2 00 00                     	mov dword ptr [0xa278], eax ; "gestest"
0x2a08:     89 1c 24                           	mov dword ptr [esp], ebx
0x2a0b:     e8 d0 fe 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x2a10:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x2a14:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x2a1b:     75 25                              	jne 0x2a42 <function_2a42>
0x2a1d:     83 c4 34                           	add esp, 0x34
0x2a20:     5b                                 	pop ebx
0x2a21:     5e                                 	pop esi
0x2a22:     c3                                 	ret 
; data inside code section at 0x2a23 -- 0x2a28
0x2a23:     90 8d 74 26 00                                     |..t&.           |
; function: function_2a28 at 0x2a28 -- 0x2a2c
0x2a28:     31 c0                              	xor eax, eax
0x2a2a:     eb d4                              	jmp 0x2a00 <function_2a00>
; data inside code section at 0x2a2c -- 0x2a30
0x2a2c:     8d 74 26 00                                        |.t&.            |
; function: function_2a30 at 0x2a30 -- 0x2a42
0x2a30:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x2a34:     c7 04 24 60 a2 00 00               	mov dword ptr [esp], 0xa260
0x2a3b:     e8 60 78 01 00                     	call 0x1a2a0 <_ZNSt5dequeISsSaISsEE16_M_push_back_auxERKSs>
0x2a40:     eb c6                              	jmp 0x2a08
; function: function_2a42 at 0x2a42 -- 0x2a54
0x2a42:     e8 fc ff ff ff                     	call 0x2a43
0x2a47:     89 c6                              	mov esi, eax
0x2a49:     89 1c 24                           	mov dword ptr [esp], ebx
0x2a4c:     e8 8f fe 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x2a51:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x2a54 -- 0x2a55
0x2a54:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x2a55 -- 0x2a56
; data inside code section at 0x2a56 -- 0x2a60
0x2a56:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: _Z20ThreadDNSAddressSeedv at 0x2a60 -- 0x2a79
0x2a60:     55                                 	push ebp
0x2a61:     57                                 	push edi
0x2a62:     56                                 	push esi
0x2a63:     53                                 	push ebx
0x2a64:     81 ec bc 00 00 00                  	sub esp, 0xbc
0x2a6a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2a70:     89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x2a77:     31 c0                              	xor eax, eax
; data inside code section at 0x2a79 -- 0x2a7a
0x2a79:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x2a7a -- 0x2a7b
; data inside code section at 0x2a7b -- 0x2a86
0x2a7b:     ff ff ff c7 04 24 10 da  00 00 89                  |.....$.....     |
; function: function_2a86 at 0x2a86 -- 0x2a87
0x2a86:     c3                                 	ret 
; data inside code section at 0x2a87 -- 0x2aa5
0x2a87:     e8 fc ff ff ff 8b 43 6c  8b 5b 70 39 d8 89 5c 24   |......Cl.[p9..\$|
0x2a97:     2c 0f 84 ad 03 00 00 89  44 24 28 31 ff e8         |,.......D$(1..  |
; dynamically linked function: _Z13HaveNameProxyv at 0x2aa5 -- 0x2aa6
; data inside code section at 0x2aa6 -- 0x2ad4
0x2aa6:     ff ff ff 84 c0 74 6b 8b  44 24 28 8d 5c 24 58 89   |.....tk.D$(.\$X.|
0x2ab6:     1c 24 83 c0 04 89 44 24  04 e8 fc ff ff ff 89 1c   |.$....D$........|
0x2ac6:     24 e8 c4 fe ff ff 89 1c  24 e8 fc ff ff ff         |$.......$.....  |
; function: function_2ad4 at 0x2ad4 -- 0x2ad5
; data inside code section at 0x2ad5 -- 0x2ae3
0x2ad5:     44 24 28 08 8b 44 24 28  39 44 24 2c 75 c1         |D$(..D$(9D$,u.  |
; function: function_2ae3 at 0x2ae3 -- 0x2ae4
; data inside code section at 0x2ae4 -- 0x2aef
0x2ae4:     7c 24 04 c7 04 24 78 da  00 00 e8                  ||$...$x....     |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2aef -- 0x2af0
; data inside code section at 0x2af0 -- 0x2af2
0x2af0:     ff ff                                              |..              |
; function: function_2af2 at 0x2af2 -- 0x2b12
0x2af2:     ff 8b 94 24 ac 00                  	dec dword ptr [ebx + 0xac2494]
0x2af8:     00 00                              	add byte ptr [eax], al
0x2afa:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2b01:     0f 85 4b 03 00 00                  	jne 0x2e52 <function_2e52>
0x2b07:     81 c4 bc 00 00 00                  	add esp, 0xbc
0x2b0d:     5b                                 	pop ebx
0x2b0e:     5e                                 	pop esi
0x2b0f:     5f                                 	pop edi
0x2b10:     5d                                 	pop ebp
0x2b11:     c3                                 	ret 
; data inside code section at 0x2b12 -- 0x2b6b
0x2b12:     8d b6 00 00 00 00 8d 54  24 38 89 54 24 04 8b 54   |.......T$8.T$..T|
0x2b22:     24 28 c7 44 24 0c 01 00  00 00 c7 44 24 08 00 00   |$(.D$......D$...|
0x2b32:     00 00 c7 44 24 38 00 00  00 00 8b 42 04 c7 44 24   |...D$8.....B..D$|
0x2b42:     3c 00 00 00 00 c7 44 24  40 00 00 00 00 c7 44 24   |<.....D$@.....D$|
0x2b52:     44 00 00 00 00 c7 44 24  48 00 00 00 00 c7 44 24   |D.....D$H.....D$|
0x2b62:     4c 00 00 00 00 89 04 24  e8                        |L......$.       |
; dynamically linked function: _Z10LookupHostPKcRSt6vectorI8CNetAddrSaIS2_EEjb at 0x2b6b -- 0x2b6c
; data inside code section at 0x2b6c -- 0x2b82
0x2b6c:     ff ff ff 84 c0 0f 84 25  01 00 00 8b 44 24 3c 8d   |.......%....D$<.|
0x2b7c:     6c 24 60 8b 5c 24                                  |l$`.\$          |
; function: function_2b82 at 0x2b82 -- 0x2b89
0x2b82:     38 89 44 24 24 39                  	cmp byte ptr [ecx + 0x39242444], cl
0x2b88:     c3                                 	ret 
; data inside code section at 0x2b89 -- 0x2b91
0x2b89:     0f 84 0d 01 00 00 90 e8                            |........        |
; dynamically linked function: _Z6Paramsv at 0x2b91 -- 0x2b92
; data inside code section at 0x2b92 -- 0x2bfd
0x2b92:     ff ff ff 0f b7 40 34 8d  94 24 8a 00 00 00 89 5c   |.....@4..$.....\|
0x2ba2:     24 04 89 14 24 89 44 24  08 e8 fc ff ff ff 8b 84   |$...$.D$........|
0x2bb2:     24 8a 00 00 00 c7 44 24  18 01 00 00 00 c7 44 24   |$.....D$......D$|
0x2bc2:     1c 00 00 00 00 89 2c 24  89 44 24 04 8b 84 24 8e   |......,$.D$...$.|
0x2bd2:     00 00 00 89 44 24 08 8b  84 24 92 00 00 00 89 44   |....D$...$.....D|
0x2be2:     24 0c 8b 84 24 96 00 00  00 89 44 24 10 0f b7 84   |$...$.....D$....|
0x2bf2:     24 9a 00 00 00 66 89 44  24 14 e8                  |$....f.D$..     |
; dynamically linked function: _ZN8CAddressC1E8CServicey at 0x2bfd -- 0x2bfe
; data inside code section at 0x2bfe -- 0x2c02
0x2bfe:     ff ff ff e8                                        |....            |
; dynamically linked function: _Z7GetTimev at 0x2c02 -- 0x2c03
; data inside code section at 0x2c03 -- 0x2c8c
0x2c03:     ff ff ff 89 c6 c7 04 24  00 46 05 00 c7 44 24 04   |.......$.F...D$.|
0x2c13:     00 00 00 00 e8 fc ff ff  ff 81 ee 80 f4 03 00 29   |...............)|
0x2c23:     c6 8b 44 24 48 3b 44 24  4c 89 74 24 7c 0f 84 3a   |..D$H;D$L.t$|..:|
0x2c33:     01 00 00 85 c0 74 4b 8b  54 24 60 89 10 8b 54 24   |.....tK.T$`...T$|
0x2c43:     64 89 50 04 8b 54 24 68  89 50 08 8b 54 24 6c 89   |d.P..T$h.P..T$l.|
0x2c53:     50 0c 8b 54 24 70 89 50  10 8b 54 24 74 89 50 14   |P..T$p.P..T$t.P.|
0x2c63:     8b 54 24 78 89 50 18 8b  54 24 7c 89 50 1c 8b 94   |.T$x.P..T$|.P...|
0x2c73:     24 80 00 00 00 89 50 20  8b 94 24 84 00 00 00 89   |$.....P ..$.....|
0x2c83:     50 24 83 c0 28 89 44 24  48                        |P$..(.D$H       |
; function: function_2c8c at 0x2c8c -- 0x2c8d
; data inside code section at 0x2c8d -- 0x2c90
0x2c8d:     c7 01 83                                           |...             |
; function: function_2c90 at 0x2c90 -- 0x2c91
0x2c90:     c3                                 	ret 
; data inside code section at 0x2c91 -- 0x2cb7
0x2c91:     10 39 5c 24 24 0f 85 f4  fe ff ff 8b 44 24 28 8d   |.9\$$.......D$(.|
0x2ca1:     94 24 9c 00 00 00 c7 44  24 08 01 00 00 00 89 14   |.$.....D$.......|
0x2cb1:     24 89 44 24 04 e8                                  |$.D$..          |
; dynamically linked function: _ZN8CNetAddrC1ERKSsb at 0x2cb7 -- 0x2cb8
; data inside code section at 0x2cb8 -- 0x2d27
0x2cb8:     ff ff ff 8d 6c 24 50 c7  44 24 14 00 00 00 00 c7   |....l$P.D$......|
0x2cc8:     44 24 10 af 01 00 00 c7  44 24 0c 39 a0 00 00 c7   |D$......D$.9....|
0x2cd8:     44 24 08 43 a0 00 00 c7  44 24 04 80 a1 00 00 89   |D$.C....D$......|
0x2ce8:     2c 24 e8 71 ff 00 00 8b  5c 24 44 39 5c 24 48 0f   |,$.q....\$D9\$H.|
0x2cf8:     84 e7 00 00 00 31 f6 90  8d 84 24 9c 00 00 00 c7   |.....1....$.....|
0x2d08:     44 24 0c 00 00 00 00 c7  44 24 10 00 00 00 00 89   |D$......D$......|
0x2d18:     44 24 08 89 5c 24 04 c7  04 24 80 a1 00 00 e8      |D$..\$...$..... |
; dynamically linked function: _ZN8CAddrMan4Add_ERK8CAddressRK8CNetAddrx at 0x2d27 -- 0x2d28
; data inside code section at 0x2d28 -- 0x2d2f
0x2d28:     ff ff ff 0f b6 c0 83                               |.......         |
; function: function_2d2f at 0x2d2f -- 0x2d30
0x2d2f:     c3                                 	ret 
; data inside code section at 0x2d30 -- 0x2d45
0x2d30:     28 01 c6 3b 5c 24 48 75  c7 89 2c 24 e8 9f fb 00   |(..;\$Hu..,$....|
0x2d40:     00 85 f6 75 44                                     |...uD           |
; function: function_2d45 at 0x2d45 -- 0x2d46
; data inside code section at 0x2d46 -- 0x2d51
0x2d46:     44 24 44 85 c0 74 08 89  04 24 e8                  |D$D..t...$.     |
; dynamically linked function: _ZdlPv at 0x2d51 -- 0x2d52
; data inside code section at 0x2d52 -- 0x2d65
0x2d52:     ff ff ff 8b 44 24 38 85  c0 0f 84 73 fd ff ff 89   |....D$8....s....|
0x2d62:     04 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x2d65 -- 0x2d66
; data inside code section at 0x2d66 -- 0x2d69
0x2d66:     ff ff ff                                           |...             |
; function: function_2d69 at 0x2d69 -- 0x2d6e
0x2d69:     e9 66 fd ff ff                     	jmp 0x2ad4 <function_2ad4>
; data inside code section at 0x2d6e -- 0x2d70
0x2d6e:     66 90                                              |f.              |
; function: function_2d70 at 0x2d70 -- 0x2d89
0x2d70:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2d74:     8d 44 24 44                        	lea eax, [esp + 0x44]
0x2d78:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x2d7c:     89 04 24                           	mov dword ptr [esp], eax
0x2d7f:     e8 1c 12 01 00                     	call 0x13fa0 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x2d84:     e9 03 ff ff ff                     	jmp 0x2c8c <function_2c8c>
; data inside code section at 0x2d89 -- 0x2dd3
0x2d89:     8b 15 20 a2 00 00 8d 5c  24 5c 8d 84 24 9c 00 00   |.. ....\$\..$...|
0x2d99:     00 8b 2d 30 a2 00 00 89  44 24 04 89 1c 24 89 54   |..-0....D$...$.T|
0x2da9:     24 24 e8 fc ff ff ff 83  ec 04 8b 54 24 24 8b 44   |$$.........T$$.D|
0x2db9:     24 5c 89 6c 24 10 89 74  24 04 89 54 24 0c 89 44   |$\.l$..t$..T$..D|
0x2dc9:     24 08 c7 04 24 48 da 00  00 e8                     |$...$H....      |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x2dd3 -- 0x2dd4
; data inside code section at 0x2dd4 -- 0x2ddb
0x2dd4:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x2ddb -- 0x2ddc
; data inside code section at 0x2ddc -- 0x2ddf
0x2ddc:     ff ff ff                                           |...             |
; function: function_2ddf at 0x2ddf -- 0x2de4
0x2ddf:     e9 61 ff ff ff                     	jmp 0x2d45 <function_2d45>
; function: function_2de4 at 0x2de4 -- 0x2df5
0x2de4:     89 2c 24                           	mov dword ptr [esp], ebp
0x2de7:     e8 f4 fa 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x2dec:     8d 74 26 00                        	lea esi, [esi]
0x2df0:     e9 50 ff ff ff                     	jmp 0x2d45 <function_2d45>
; data inside code section at 0x2df5 -- 0x2df6
0x2df5:     89                                                 |.               |
; function: function_2df6 at 0x2df6 -- 0x2df7
0x2df6:     c3                                 	ret 
; data inside code section at 0x2df7 -- 0x2dff
0x2df7:     89 2c 24 e8 e1 fa 00 00                            |.,$.....        |
; function: function_2dff at 0x2dff -- 0x2e00
; data inside code section at 0x2e00 -- 0x2e0b
0x2e00:     44 24 44 85 c0 74 08 89  04 24 e8                  |D$D..t...$.     |
; dynamically linked function: _ZdlPv at 0x2e0b -- 0x2e0c
; data inside code section at 0x2e0c -- 0x2e1b
0x2e0c:     ff ff ff 8b 44 24 38 85  c0 74 08 89 04 24 e8      |....D$8..t...$. |
; dynamically linked function: _ZdlPv at 0x2e1b -- 0x2e1c
; data inside code section at 0x2e1c -- 0x2e23
0x2e1c:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x2e23 -- 0x2e24
; data inside code section at 0x2e24 -- 0x2e2f
0x2e24:     ff ff ff 89 c6 89 1c 24  89 f3 e8                  |.......$...     |
; dynamically linked function: _ZNSsD1Ev at 0x2e2f -- 0x2e30
; data inside code section at 0x2e30 -- 0x2e33
0x2e30:     ff ff ff                                           |...             |
; function: function_2e33 at 0x2e33 -- 0x2e35
0x2e33:     eb ca                              	jmp 0x2dff <function_2dff>
; function: function_2e35 at 0x2e35 -- 0x2e39
0x2e35:     89 c3                              	mov ebx, eax
0x2e37:     eb c6                              	jmp 0x2dff <function_2dff>
; data inside code section at 0x2e39 -- 0x2e3f
0x2e39:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZNSsD1Ev at 0x2e3f -- 0x2e40
; data inside code section at 0x2e40 -- 0x2e47
0x2e40:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x2e47 -- 0x2e48
; data inside code section at 0x2e48 -- 0x2e4b
0x2e48:     ff ff ff                                           |...             |
; function: function_2e4b at 0x2e4b -- 0x2e52
0x2e4b:     31 ff                              	xor edi, edi
0x2e4d:     e9 91 fc ff ff                     	jmp 0x2ae3 <function_2ae3>
; function: function_2e52 at 0x2e52 -- 0x2e53
; dynamically linked function: __stack_chk_fail at 0x2e53 -- 0x2e54
; data inside code section at 0x2e54 -- 0x2e60
0x2e54:     ff ff ff 89 f6 8d bc 27  00 00 00 00               |.......'....    |
; function: _Z8AddLocalRK8CServicei at 0x2e60 -- 0x2e8a
0x2e60:     83 ec 5c                           	sub esp, 0x5c
0x2e63:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x2e67:     8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x2e6b:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x2e6f:     8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x2e73:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2e79:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2e7d:     31 c0                              	xor eax, eax
0x2e7f:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x2e83:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x2e87:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2e8a -- 0x2e8b
0x2e8a:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x2e8b -- 0x2e8c
; data inside code section at 0x2e8c -- 0x2eb2
0x2e8c:     ff ff ff 84 c0 0f 84 f1  00 00 00 80 3d 40 9e 00   |............=@..|
0x2e9c:     00 00 75 09 83 fe 04 0f  8e df 00 00 00 89 1c 24   |..u............$|
0x2eac:     e8 ef de ff ff 89                                  |......          |
; function: function_2eb2 at 0x2eb2 -- 0x2eb5
0x2eb2:     c2 31 c0                           	ret 0xc031
; data inside code section at 0x2eb5 -- 0x2ec9
0x2eb5:     84 d2 0f 85 cd 00 00 00  8d 7c 24 38 89 5c 24 04   |.........|$8.\$.|
0x2ec5:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x2ec9 -- 0x2eca
; data inside code section at 0x2eca -- 0x2ecc
0x2eca:     ff ff                                              |..              |
; function: function_2ecc at 0x2ecc -- 0x2fb9
0x2ecc:     ff 83 ec 04 8b 44                  	inc dword ptr [ebx + 0x448b04ec]
0x2ed2:     24 38                              	and al, 0x38
0x2ed4:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x2ed8:     c7 04 24 af a1 00 00               	mov dword ptr [esp], 0xa1af ; "AddLocal(%s,%i)\n"
0x2edf:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2ee3:     e8 fc ff ff ff                     	call 0x2ee4
0x2ee8:     8d 6c 24 30                        	lea ebp, [esp + 0x30]
0x2eec:     89 3c 24                           	mov dword ptr [esp], edi
0x2eef:     e8 fc ff ff ff                     	call 0x2ef0
0x2ef4:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x2efc:     c7 44 24 10 dd 00 00 00            	mov dword ptr [esp + 0x10], 0xdd
0x2f04:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x2f0c:     c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0x2f14:     c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0x2f1c:     89 2c 24                           	mov dword ptr [esp], ebp
0x2f1f:     e8 3c fd 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x2f24:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x2f28:     c7 04 24 f4 a2 00 00               	mov dword ptr [esp], 0xa2f4
0x2f2f:     e8 4c fe 00 00                     	call 0x12d80 <_ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_>
0x2f34:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2f38:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x2f3c:     c7 04 24 f4 a2 00 00               	mov dword ptr [esp], 0xa2f4
0x2f43:     e8 48 78 01 00                     	call 0x1a790 <_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_>
0x2f48:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2f4c:     89 c7                              	mov edi, eax
0x2f4e:     31 c0                              	xor eax, eax
0x2f50:     85 d2                              	test edx, edx
0x2f52:     74 5e                              	je 0x2fb2 <function_2ecc+0xe6>
0x2f54:     3b 37                              	cmp esi, dword ptr [edi]
0x2f56:     7d 58                              	jge 0x2fb0 <function_2ecc+0xe4>
0x2f58:     89 1c 24                           	mov dword ptr [esp], ebx
0x2f5b:     e8 fc ff ff ff                     	call 0x2f5c
0x2f60:     c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x2f68:     89 04 24                           	mov dword ptr [esp], eax
0x2f6b:     e8 00 df ff ff                     	call 0xe70 <_Z12SetReachable7Networkb>
0x2f70:     89 2c 24                           	mov dword ptr [esp], ebp
0x2f73:     e8 68 f9 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x2f78:     e8 93 e9 ff ff                     	call 0x1910 <AdvertizeLocal>
0x2f7d:     b8 01 00 00 00                     	mov eax, 1
0x2f82:     eb 06                              	jmp 0x2f8a <function_2ecc+0xbe>
; data inside code section at 0x2f84 -- 0x2f88
0x2f84:     8d 74 26 00                                        |.t&.            |
0x2f88:     31 c0                              	xor eax, eax
0x2f8a:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2f8e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2f95:     75 2f                              	jne 0x2fc6 <function_2fc6>
0x2f97:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2f9b:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x2f9f:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x2fa3:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x2fa7:     83 c4 5c                           	add esp, 0x5c
0x2faa:     c3                                 	ret 
; data inside code section at 0x2fab -- 0x2fb0
0x2fab:     90 8d 74 26 00                                     |..t&.           |
0x2fb0:     b0 01                              	mov al, 1
0x2fb2:     01 c6                              	add esi, eax
0x2fb4:     89 37                              	mov dword ptr [edi], esi
0x2fb6:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2fb9 -- 0x2fba
0x2fb9:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService7GetPortEv at 0x2fba -- 0x2fbb
; data inside code section at 0x2fbb -- 0x2fbd
0x2fbb:     ff ff                                              |..              |
; function: function_2fbd at 0x2fbd -- 0x2fc6
0x2fbd:     ff 0f                              	dec dword ptr [edi]
0x2fbf:     b7 c0                              	mov bh, 0xc0
0x2fc1:     89 47 04                           	mov dword ptr [edi + 4], eax
0x2fc4:     eb 92                              	jmp 0x2f58
; function: function_2fc6 at 0x2fc6 -- 0x2fc7
; dynamically linked function: __stack_chk_fail at 0x2fc7 -- 0x2fc8
; data inside code section at 0x2fc8 -- 0x2fcc
0x2fc8:     ff ff ff 89                                        |....            |
; function: function_2fcc at 0x2fcc -- 0x2fcd
0x2fcc:     c3                                 	ret 
; data inside code section at 0x2fcd -- 0x2fd9
0x2fcd:     89 2c 24 e8 0b f9 00 00  89 1c 24 e8               |.,$.......$.    |
; dynamically linked function: _Unwind_Resume at 0x2fd9 -- 0x2fda
; data inside code section at 0x2fda -- 0x2fde
0x2fda:     ff ff ff 89                                        |....            |
; function: function_2fde at 0x2fde -- 0x2fdf
0x2fde:     c3                                 	ret 
; data inside code section at 0x2fdf -- 0x2fe3
0x2fdf:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSsD1Ev at 0x2fe3 -- 0x2fe4
; data inside code section at 0x2fe4 -- 0x2feb
0x2fe4:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x2feb -- 0x2fec
; data inside code section at 0x2fec -- 0x2ff0
0x2fec:     ff ff ff 90                                        |....            |
; function: _Z8AddLocalRK8CNetAddri at 0x2ff0 -- 0x3026
0x2ff0:     83 ec 3c                           	sub esp, 0x3c
0x2ff3:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x2ff7:     8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x2ffb:     89 74 24 38                        	mov dword ptr [esp + 0x38], esi
0x2fff:     8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x3003:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3009:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x300d:     31 c0                              	xor eax, eax
0x300f:     e8 7c d4 ff ff                     	call 0x490 <_Z13GetListenPortv>
0x3014:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3018:     8d 74 24 1a                        	lea esi, [esp + 0x1a]
0x301c:     89 34 24                           	mov dword ptr [esp], esi
0x301f:     0f b7 c0                           	movzx eax, ax
0x3022:     89 44 24 08                        	mov dword ptr [esp + 8], eax
; data inside code section at 0x3026 -- 0x3027
0x3026:     e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1ERK8CNetAddrt at 0x3027 -- 0x3028
; data inside code section at 0x3028 -- 0x302a
0x3028:     ff ff                                              |..              |
; function: function_302a at 0x302a -- 0x3050
0x302a:     ff 89 5c 24 04 89                  	dec dword ptr [ecx - 0x76fbdba4]
0x3030:     34 24                              	xor al, 0x24
0x3032:     e8 29 fe ff ff                     	call 0x2e60 <_Z8AddLocalRK8CServicei>
0x3037:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x303b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3042:     75 0c                              	jne 0x3050 <function_302a+0x25>
0x3044:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x3048:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x304c:     83 c4 3c                           	add esp, 0x3c
0x304f:     c3                                 	ret 
; data inside code section at 0x3050 -- 0x3051
0x3050:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3051 -- 0x3052
; data inside code section at 0x3052 -- 0x3060
0x3052:     ff ff ff 8d 74 26 00 8d  bc 27 00 00 00 00         |....t&...'....  |
; function: _Z13ThreadMapPortv at 0x3060 -- 0x309c
0x3060:     55                                 	push ebp
0x3061:     57                                 	push edi
0x3062:     56                                 	push esi
0x3063:     53                                 	push ebx
0x3064:     81 ec 6c 0c 00 00                  	sub esp, 0xc6c
0x306a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3070:     89 84 24 5c 0c 00 00               	mov dword ptr [esp + 0xc5c], eax
0x3077:     31 c0                              	xor eax, eax
0x3079:     e8 12 d4 ff ff                     	call 0x490 <_Z13GetListenPortv>
0x307e:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x3086:     c7 44 24 04 c0 a1 00 00            	mov dword ptr [esp + 4], 0xa1c0 ; "%u"
0x308e:     0f b7 c0                           	movzx eax, ax
0x3091:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x3095:     8d 44 24 50                        	lea eax, [esp + 0x50]
0x3099:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x309c -- 0x309d
0x309c:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x309d -- 0x309e
; data inside code section at 0x309e -- 0x30dc
0x309e:     ff ff ff 83 ec 04 8d 44  24 54 c7 44 24 54 00 00   |.......D$T.D$T..|
0x30ae:     00 00 89 44 24 14 c7 44  24 10 00 00 00 00 c7 44   |...D$..D$......D|
0x30be:     24 0c 00 00 00 00 c7 44  24 08 00 00 00 00 c7 44   |$......D$......D|
0x30ce:     24 04 00 00 00 00 c7 04  24 d0 07 00 00 e8         |$.......$.....  |
; dynamically linked function: upnpDiscover at 0x30dc -- 0x30dd
; data inside code section at 0x30dd -- 0x310f
0x30dd:     ff ff ff 89 44 24 3c 8d  44 24 60 89 44 24 08 8d   |....D$<.D$`.D$..|
0x30ed:     44 24 40 89 44 24 04 8b  44 24 3c 8d b4 24 f4 0b   |D$@.D$..D$<..$..|
0x30fd:     00 00 c7 44 24 10 40 00  00 00 89 74 24 0c 89 04   |...D$.@....t$...|
0x310d:     24 e8                                              |$.              |
; dynamically linked function: UPNP_GetValidIGD at 0x310f -- 0x3110
; data inside code section at 0x3110 -- 0x3117
0x3110:     ff ff ff 83 f8 01 89                               |.......         |
; function: function_3117 at 0x3117 -- 0x3118
0x3117:     c3                                 	ret 
; data inside code section at 0x3118 -- 0x3145
0x3118:     0f 85 7a 01 00 00 80 3d  40 9e 00 00 00 74 73 8b   |..z....=@....ts.|
0x3128:     44 24 40 8d 9c 24 34 0c  00 00 8d bc 24 64 05 00   |D$@..$4.....$d..|
0x3138:     00 89 5c 24 08 89 7c 24  04 89 04 24 e8            |..\$..|$...$.   |
; dynamically linked function: UPNP_GetExternalIPAddress at 0x3145 -- 0x3146
; data inside code section at 0x3146 -- 0x3148
0x3146:     ff ff                                              |..              |
; function: function_3148 at 0x3148 -- 0x3167
0x3148:     ff 85 c0 0f 85 d3                  	inc dword ptr [ebp - 0x2c7af040]
0x314e:     01 00                              	add dword ptr [eax], eax
0x3150:     00 80 bc 24 34 0c                  	add byte ptr [eax + 0xc3424bc], al
0x3156:     00 00                              	add byte ptr [eax], al
0x3158:     00 0f                              	add byte ptr [edi], cl
0x315a:     84 da                              	test dl, bl
0x315c:     01 00                              	add dword ptr [eax], eax
0x315e:     00 89 5c 24 04 c7                  	add byte ptr [ecx - 0x38fbdba4], cl
0x3164:     04 24                              	add al, 0x24
0x3166:     c3                                 	ret 
; data inside code section at 0x3167 -- 0x316b
0x3167:     a1 00 00 e8                                        |....            |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x316b -- 0x316c
; data inside code section at 0x316c -- 0x3186
0x316c:     ff ff ff 89 5c 24 04 8d  9c 24 e4 0b 00 00 c7 44   |....\$...$.....D|
0x317c:     24 08 00 00 00 00 89 1c  24 e8                     |$.......$.      |
; dynamically linked function: _ZN8CNetAddrC1EPKcb at 0x3186 -- 0x3187
; data inside code section at 0x3187 -- 0x319a
0x3187:     ff ff ff c7 44 24 04 03  00 00 00 89 1c 24 e8 56   |....D$.......$.V|
0x3197:     fe ff ff                                           |...             |
; function: function_319a at 0x319a -- 0x319b
; data inside code section at 0x319b -- 0x31a2
0x319b:     5c 24 5c 89 1c 24 e8                               |\$\..$.         |
; dynamically linked function: _Z17FormatFullVersionv at 0x31a2 -- 0x31a3
; data inside code section at 0x31a3 -- 0x31b5
0x31a3:     ff ff ff 83 ec 04 8b 44  24 5c 8d 6c 24 58 c7 44   |.......D$\.l$X.D|
0x31b3:     24 58                                              |$X              |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x31b5 -- 0x31c6
; data inside code section at 0x31c6 -- 0x31c7
0x31c6:     e8                                                 |.               |
; dynamically linked function: _ZNSs7reserveEj at 0x31c7 -- 0x31c8
; data inside code section at 0x31c8 -- 0x31df
0x31c8:     ff ff ff c7 44 24 08 0d  00 00 00 c7 44 24 04 e1   |....D$......D$..|
0x31d8:     a1 00 00 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSs6appendEPKcj at 0x31df -- 0x31e0
; data inside code section at 0x31e0 -- 0x31fa
0x31e0:     ff ff ff 89 5c 24 04 89  2c 24 e8 fc ff ff ff 89   |....\$..,$......|
0x31f0:     1c 24 8d bc 24 64 05 00  00 e8                     |.$..$d....      |
; dynamically linked function: _ZNSsD1Ev at 0x31fa -- 0x31fb
; data inside code section at 0x31fb -- 0x31fe
0x31fb:     ff ff ff                                           |...             |
; function: function_31fe at 0x31fe -- 0x3200
0x31fe:     eb 40                              	jmp 0x3240 <function_3240>
; data inside code section at 0x3200 -- 0x3204
0x3200:     89 04 24 e8                                        |..$.            |
; dynamically linked function: strupnperror at 0x3204 -- 0x3205
; data inside code section at 0x3205 -- 0x322c
0x3205:     ff ff ff 8b 54 24 50 89  44 24 14 89 5c 24 10 89   |....T$P.D$..\$..|
0x3215:     74 24 0c 89 54 24 08 89  54 24 04 c7 04 24 ec da   |t$..T$..T$...$..|
0x3225:     00 00 e8 fc ff ff ff                               |.......         |
; function: function_322c at 0x322c -- 0x322d
; data inside code section at 0x322d -- 0x3240
0x322d:     04 24 80 4f 12 00 c7 44  24 04 00 00 00 00 e8 30   |.$.O...D$......0|
0x323d:     5e 01 00                                           |^..             |
; function: function_3240 at 0x3240 -- 0x327b
0x3240:     8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x3244:     8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x3248:     c7 44 24 20 ef a1 00 00            	mov dword ptr [esp + 0x20], 0xa1ef
0x3250:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x3258:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x325c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3260:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x3264:     c7 44 24 18 f1 a1 00 00            	mov dword ptr [esp + 0x18], 0xa1f1 ; "TCP"
0x326c:     89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x3270:     89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x3274:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x3278:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x327b -- 0x327c
0x327b:     e8                                                 |.               |
; dynamically linked function: UPNP_AddPortMapping at 0x327c -- 0x327d
; data inside code section at 0x327d -- 0x3283
0x327d:     ff ff ff 85 c0 89                                  |......          |
; function: function_3283 at 0x3283 -- 0x3284
0x3283:     c3                                 	ret 
; data inside code section at 0x3284 -- 0x3292
0x3284:     0f 85 76 ff ff ff c7 04  24 24 db 00 00 e8         |..v.....$$....  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x3292 -- 0x3293
; data inside code section at 0x3293 -- 0x3296
0x3293:     ff ff ff                                           |...             |
; function: function_3296 at 0x3296 -- 0x3298
0x3296:     eb 94                              	jmp 0x322c <function_322c>
; data inside code section at 0x3298 -- 0x32bc
0x3298:     c7 04 24 f5 a1 00 00 e8  fc ff ff ff 8b 44 24 3c   |..$..........D$<|
0x32a8:     89 04 24 e8 fc ff ff ff  85 db 74 0c 8d 44 24 40   |..$.......t..D$@|
0x32b8:     89 04 24 e8                                        |..$.            |
; dynamically linked function: FreeUPNPUrls at 0x32bc -- 0x32bd
; data inside code section at 0x32bd -- 0x32bf
0x32bd:     ff ff                                              |..              |
; function: function_32bf at 0x32bf -- 0x32e7
0x32bf:     ff 8d 44 24 50 89                  	dec dword ptr [ebp - 0x76afdbbc]
0x32c5:     04 24                              	add al, 0x24
0x32c7:     e8 fc ff ff ff                     	call 0x32c8
0x32cc:     8b 84 24 5c 0c 00 00               	mov eax, dword ptr [esp + 0xc5c]
0x32d3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x32da:     75 6e                              	jne 0x334a <function_334a>
0x32dc:     81 c4 6c 0c 00 00                  	add esp, 0xc6c
0x32e2:     5b                                 	pop ebx
0x32e3:     5e                                 	pop esi
0x32e4:     5f                                 	pop edi
0x32e5:     5d                                 	pop ebp
0x32e6:     c3                                 	ret 
; data inside code section at 0x32e7 -- 0x32e8
0x32e7:     89                                                 |.               |
; function: function_32e8 at 0x32e8 -- 0x32e9
0x32e8:     c3                                 	ret 
; function: function_32e9 at 0x32e9 -- 0x32ea
; data inside code section at 0x32ea -- 0x32f1
0x32ea:     44 24 50 89 04 24 e8                               |D$P..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x32f1 -- 0x32f2
; data inside code section at 0x32f2 -- 0x32f9
0x32f2:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x32f9 -- 0x32fa
; data inside code section at 0x32fa -- 0x32fc
0x32fa:     ff ff                                              |..              |
; function: function_32fc at 0x32fc -- 0x330e
0x32fc:     ff 83 fa 01 89 c3                  	inc dword ptr [ebx - 0x3c76fe06]
0x3302:     74 4b                              	je 0x334f
0x3304:     89 2c 24                           	mov dword ptr [esp], ebp
0x3307:     e8 fc ff ff ff                     	call 0x3308
0x330c:     eb db                              	jmp 0x32e9 <function_32e9>
; data inside code section at 0x330e -- 0x331e
0x330e:     89 c6 89 2c 24 e8 fc ff  ff ff 89 1c 24 89 f3 e8   |...,$.......$...|
; dynamically linked function: _ZNSsD1Ev at 0x331e -- 0x331f
; data inside code section at 0x331f -- 0x3322
0x331f:     ff ff ff                                           |...             |
; function: function_3322 at 0x3322 -- 0x3324
0x3322:     eb c5                              	jmp 0x32e9 <function_32e9>
; function: function_3324 at 0x3324 -- 0x3339
0x3324:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3328:     c7 04 24 9c da 00 00               	mov dword ptr [esp], 0xda9c ; "UPnP: GetExternalIPAddress() returned %d\n"
0x332f:     e8 fc ff ff ff                     	call 0x3330
0x3334:     e9 61 fe ff ff                     	jmp 0x319a <function_319a>
; data inside code section at 0x3339 -- 0x3341
0x3339:     c7 04 24 c8 da 00 00 e8                            |..$.....        |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x3341 -- 0x3342
; data inside code section at 0x3342 -- 0x3345
0x3342:     ff ff ff                                           |...             |
; function: function_3345 at 0x3345 -- 0x334a
0x3345:     e9 50 fe ff ff                     	jmp 0x319a <function_319a>
; function: function_334a at 0x334a -- 0x3352
0x334a:     e8 fc ff ff ff                     	call 0x334b
0x334f:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x3352 -- 0x3353
0x3352:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x3353 -- 0x3354
; data inside code section at 0x3354 -- 0x337b
0x3354:     ff ff ff 8b 44 24 50 c7  44 24 10 00 00 00 00 c7   |....D$P.D$......|
0x3364:     44 24 0c f1 a1 00 00 89  7c 24 04 89 44 24 08 8b   |D$......|$..D$..|
0x3374:     44 24 40 89 04 24 e8                               |D$@..$.         |
; dynamically linked function: UPNP_DeletePortMapping at 0x337b -- 0x337c
; data inside code section at 0x337c -- 0x338b
0x337c:     ff ff ff 89 44 24 04 c7  04 24 44 db 00 00 e8      |....D$...$D.... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x338b -- 0x338c
; data inside code section at 0x338c -- 0x3397
0x338c:     ff ff ff 8b 44 24 3c 89  04 24 e8                  |....D$<..$.     |
; dynamically linked function: freeUPNPDevlist at 0x3397 -- 0x3398
; data inside code section at 0x3398 -- 0x33a3
0x3398:     ff ff ff 8d 44 24 40 89  04 24 e8                  |....D$@..$.     |
; dynamically linked function: FreeUPNPUrls at 0x33a3 -- 0x33a4
; data inside code section at 0x33a4 -- 0x33ad
0x33a4:     ff ff ff e8 fc ff ff ff  89                        |.........       |
; function: function_33ad at 0x33ad -- 0x33ae
0x33ad:     c3                                 	ret 
; data inside code section at 0x33ae -- 0x33af
0x33ae:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x33af -- 0x33b0
; data inside code section at 0x33b0 -- 0x33b3
0x33b0:     ff ff ff                                           |...             |
; function: function_33b3 at 0x33b3 -- 0x33b8
0x33b3:     e9 4c ff ff ff                     	jmp 0x3304 <function_3304>
; data inside code section at 0x33b8 -- 0x33c0
0x33b8:     90 8d b4 26 00 00 00 00                            |...&....        |
; function: _Z21ThreadGetMyExternalIPv at 0x33c0 -- 0x33de
0x33c0:     83 ec 3c                           	sub esp, 0x3c
0x33c3:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x33c7:     8d 5c 24 1c                        	lea ebx, [esp + 0x1c]
0x33cb:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x33d1:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x33d5:     31 c0                              	xor eax, eax
0x33d7:     89 74 24 38                        	mov dword ptr [esp + 0x38], esi
0x33db:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x33de -- 0x33df
0x33de:     e8                                                 |.               |
; dynamically linked function: _ZN8CNetAddrC1Ev at 0x33df -- 0x33e0
; data inside code section at 0x33e0 -- 0x33e3
0x33e0:     ff ff ff                                           |...             |
; function: function_33e3 at 0x33e3 -- 0x3413
0x33e3:     89 1c 24                           	mov dword ptr [esp], ebx
0x33e6:     e8 f5 f1 ff ff                     	call 0x25e0 <_Z15GetMyExternalIPR8CNetAddr>
0x33eb:     84 c0                              	test al, al
0x33ed:     75 19                              	jne 0x3408 <function_33e3+0x25>
0x33ef:     8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x33f3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x33fa:     75 4d                              	jne 0x3449 <function_3449>
0x33fc:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x3400:     8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x3404:     83 c4 3c                           	add esp, 0x3c
0x3407:     c3                                 	ret 
0x3408:     8d 74 24 18                        	lea esi, [esp + 0x18]
0x340c:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x3410:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x3413 -- 0x3414
0x3413:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10ToStringIPEv at 0x3414 -- 0x3415
; data inside code section at 0x3415 -- 0x342b
0x3415:     ff ff ff 83 ec 04 8b 44  24 18 c7 04 24 6c db 00   |.......D$...$l..|
0x3425:     00 89 44 24 04 e8                                  |..D$..          |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x342b -- 0x342c
; data inside code section at 0x342c -- 0x3433
0x342c:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x3433 -- 0x3434
; data inside code section at 0x3434 -- 0x3436
0x3434:     ff ff                                              |..              |
; function: function_3436 at 0x3436 -- 0x3449
0x3436:     ff c7                              	inc edi
0x3438:     44                                 	inc esp
0x3439:     24 04                              	and al, 4
0x343b:     04 00                              	add al, 0
0x343d:     00 00                              	add byte ptr [eax], al
0x343f:     89 1c 24                           	mov dword ptr [esp], ebx
0x3442:     e8 a9 fb ff ff                     	call 0x2ff0 <_Z8AddLocalRK8CNetAddri>
0x3447:     eb a6                              	jmp 0x33ef
; function: function_3449 at 0x3449 -- 0x344a
; dynamically linked function: __stack_chk_fail at 0x344a -- 0x344b
; data inside code section at 0x344b -- 0x344f
0x344b:     ff ff ff 89                                        |....            |
; function: function_344f at 0x344f -- 0x3450
0x344f:     c3                                 	ret 
; data inside code section at 0x3450 -- 0x3460
0x3450:     89 34 24 e8 fc ff ff ff  89 1c 24 e8 fc ff ff ff   |.4$.......$.....|
; function: _Z9SeenLocalRK8CService at 0x3460 -- 0x3501
0x3460:     55                                 	push ebp
0x3461:     57                                 	push edi
0x3462:     56                                 	push esi
0x3463:     53                                 	push ebx
0x3464:     83 ec 6c                           	sub esp, 0x6c
0x3467:     8d 6c 24 3c                        	lea ebp, [esp + 0x3c]
0x346b:     8b b4 24 80 00 00 00               	mov esi, dword ptr [esp + 0x80]
0x3472:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3478:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x347c:     31 c0                              	xor eax, eax
0x347e:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x3486:     c7 44 24 10 09 01 00 00            	mov dword ptr [esp + 0x10], 0x109
0x348e:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x3496:     c7 44 24 08 46 a0 00 00            	mov dword ptr [esp + 8], 0xa046 ; "cs_mapLocalHost"
0x349e:     c7 44 24 04 a0 a2 00 00            	mov dword ptr [esp + 4], 0xa2a0 ; "ersion"
0x34a6:     89 2c 24                           	mov dword ptr [esp], ebp
0x34a9:     e8 b2 f7 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x34ae:     8b 1d fc a2 00 00                  	mov ebx, dword ptr [0xa2fc]
0x34b4:     85 db                              	test ebx, ebx
0x34b6:     0f 84 0c 01 00 00                  	je 0x35c8 <function_35c8>
0x34bc:     bf f8 a2 00 00                     	mov edi, 0xa2f8 ; "sseed"
0x34c1:     eb 0e                              	jmp 0x34d1 <_Z9SeenLocalRK8CService+0x71>
; data inside code section at 0x34c3 -- 0x34c8
0x34c3:     90 8d 74 26 00                                     |..t&.           |
0x34c8:     89 df                              	mov edi, ebx
0x34ca:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x34cd:     85 db                              	test ebx, ebx
0x34cf:     74 1a                              	je 0x34eb <_Z9SeenLocalRK8CService+0x8b>
0x34d1:     8d 43 10                           	lea eax, [ebx + 0x10]
0x34d4:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x34d8:     89 04 24                           	mov dword ptr [esp], eax
0x34db:     e8 fc ff ff ff                     	call 0x34dc
0x34e0:     84 c0                              	test al, al
0x34e2:     74 e4                              	je 0x34c8 <_Z9SeenLocalRK8CService+0x68>
0x34e4:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x34e7:     85 db                              	test ebx, ebx
0x34e9:     75 e6                              	jne 0x34d1 <_Z9SeenLocalRK8CService+0x71>
0x34eb:     81 ff f8 a2 00 00                  	cmp edi, 0xa2f8 ; "sseed"
0x34f1:     0f 84 d1 00 00 00                  	je 0x35c8 <function_35c8>
0x34f7:     83 c7 10                           	add edi, 0x10
0x34fa:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x34fe:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x3501 -- 0x3502
0x3501:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x3502 -- 0x3503
; data inside code section at 0x3503 -- 0x3505
0x3503:     ff ff                                              |..              |
; function: function_3505 at 0x3505 -- 0x3555
0x3505:     ff 84 c0 0f 85 ba 00               	inc dword ptr [eax + eax*8 + 0xba850f]
0x350c:     00 00                              	add byte ptr [eax], al
0x350e:     8b 1d fc a2 00 00                  	mov ebx, dword ptr [0xa2fc]
0x3514:     bf f8 a2 00 00                     	mov edi, 0xa2f8 ; "sseed"
0x3519:     85 db                              	test ebx, ebx
0x351b:     75 0c                              	jne 0x3529 <function_3505+0x24>
0x351d:     eb 3f                              	jmp 0x355e <function_355e>
; data inside code section at 0x351f -- 0x3520
0x351f:     90                                                 |.               |
0x3520:     89 df                              	mov edi, ebx
0x3522:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x3525:     85 db                              	test ebx, ebx
0x3527:     74 1a                              	je 0x3543 <function_3505+0x3e>
0x3529:     8d 43 10                           	lea eax, [ebx + 0x10]
0x352c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x3530:     89 04 24                           	mov dword ptr [esp], eax
0x3533:     e8 fc ff ff ff                     	call 0x3534
0x3538:     84 c0                              	test al, al
0x353a:     74 e4                              	je 0x3520 <function_3505+0x1b>
0x353c:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x353f:     85 db                              	test ebx, ebx
0x3541:     75 e6                              	jne 0x3529 <function_3505+0x24>
0x3543:     81 ff f8 a2 00 00                  	cmp edi, 0xa2f8 ; "sseed"
0x3549:     74 13                              	je 0x355e <function_355e>
0x354b:     8d 47 10                           	lea eax, [edi + 0x10]
0x354e:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3552:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x3555 -- 0x3556
0x3555:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x3556 -- 0x3557
; data inside code section at 0x3557 -- 0x355e
0x3557:     ff ff ff 84 c0 74 52                               |.....tR         |
; function: function_355e at 0x355e -- 0x35c8
0x355e:     8b 06                              	mov eax, dword ptr [esi]
0x3560:     8d 54 24 44                        	lea edx, [esp + 0x44]
0x3564:     c7 44 24 54 00 00 00 00            	mov dword ptr [esp + 0x54], 0
0x356c:     c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0x3574:     89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x3578:     8b 46 04                           	mov eax, dword ptr [esi + 4]
0x357b:     89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x357f:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0x3582:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x3586:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x3589:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x358d:     89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x3591:     c7 44 24 04 f4 a2 00 00            	mov dword ptr [esp + 4], 0xa2f4
0x3599:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x359d:     8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x35a1:     89 04 24                           	mov dword ptr [esp], eax
0x35a4:     e8 d7 6f 01 00                     	call 0x1a580 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_>
0x35a9:     83 ec 04                           	sub esp, 4
0x35ac:     8b 7c 24 2c                        	mov edi, dword ptr [esp + 0x2c]
0x35b0:     83 47 20 01                        	add dword ptr [edi + 0x20], 1
0x35b4:     89 2c 24                           	mov dword ptr [esp], ebp
0x35b7:     e8 24 f3 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x35bc:     e8 4f e3 ff ff                     	call 0x1910 <AdvertizeLocal>
0x35c1:     b8 01 00 00 00                     	mov eax, 1
0x35c6:     eb 0a                              	jmp 0x35d2
; function: function_35c8 at 0x35c8 -- 0x35f9
0x35c8:     89 2c 24                           	mov dword ptr [esp], ebp
0x35cb:     e8 10 f3 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x35d0:     31 c0                              	xor eax, eax
0x35d2:     8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x35d6:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x35dd:     75 08                              	jne 0x35e7 <function_35c8+0x1f>
0x35df:     83 c4 6c                           	add esp, 0x6c
0x35e2:     5b                                 	pop ebx
0x35e3:     5e                                 	pop esi
0x35e4:     5f                                 	pop edi
0x35e5:     5d                                 	pop ebp
0x35e6:     c3                                 	ret 
0x35e7:     e8 fc ff ff ff                     	call 0x35e8
0x35ec:     89 c3                              	mov ebx, eax
0x35ee:     89 2c 24                           	mov dword ptr [esp], ebp
0x35f1:     e8 ea f2 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x35f6:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x35f9 -- 0x35fa
0x35f9:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x35fa -- 0x35fb
; data inside code section at 0x35fb -- 0x35fd
0x35fb:     ff ff                                              |..              |
; function: function_35fd at 0x35fd -- 0x3600
0x35fd:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: _ZN5CNode11MisbehavingEi at 0x3600 -- 0x363b
0x3600:     83 ec 7c                           	sub esp, 0x7c
0x3603:     89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x3607:     8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x360e:     8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x3615:     89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x3619:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x3620:     89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x3624:     31 d2                              	xor edx, edx
0x3626:     8d ab 84 01 00 00                  	lea ebp, [ebx + 0x184]
0x362c:     89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0x3630:     89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x3634:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x3638:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x363b -- 0x363c
0x363b:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr7IsLocalEv at 0x363c -- 0x363d
; data inside code section at 0x363d -- 0x36a7
0x363d:     ff ff ff 84 c0 0f 85 10  02 00 00 8b 7c 24 38 8d   |............|$8.|
0x364d:     44 24 5a 03 bb 38 02 00  00 8d 74 24 48 89 bb 38   |D$Z..8....t$H..8|
0x365d:     02 00 00 89 44 24 08 c7  44 24 04 0f a2 00 00 89   |....D$..D$......|
0x366d:     34 24 e8 fc ff ff ff c7  44 24 04 64 00 00 00 c7   |4$......D$.d....|
0x367d:     44 24 08 00 00 00 00 89  34 24 e8 fc ff ff ff 89   |D$......4$......|
0x368d:     54 24 30 89 44 24 3c 89  34 24 e8 fc ff ff ff 89   |T$0.D$<.4$......|
0x369d:     fa c1 fa 1f 3b 54 24 30  7d 71                     |....;T$0}q      |
; function: function_36a7 at 0x36a7 -- 0x36a8
; data inside code section at 0x36a8 -- 0x36bf
0x36a8:     b3 38 02 00 00 8d 5c 24  54 89 6c 24 04 89 1c 24   |.8....\$T.l$...$|
0x36b8:     89 f7 2b 7c 24 38 e8                               |..+|$8.         |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x36bf -- 0x36c0
; data inside code section at 0x36c0 -- 0x36de
0x36c0:     ff ff ff 83 ec 04 8b 44  24 54 89 74 24 0c 89 7c   |.......D$T.t$..||
0x36d0:     24 08 c7 04 24 22 a2 00  00 89 44 24 04 e8         |$...$"....D$..  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x36de -- 0x36df
; data inside code section at 0x36df -- 0x36e6
0x36df:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x36e6 -- 0x36e7
; data inside code section at 0x36e7 -- 0x36e9
0x36e7:     ff ff                                              |..              |
; function: function_36e9 at 0x36e9 -- 0x3711
0x36e9:     ff 31                              	push dword ptr [ecx]
0x36eb:     c0 8b 54 24 5c 65 33               	ror byte ptr [ebx + 0x655c2454], 0x33
0x36f2:     15 14 00 00 00                     	adc eax, 0x14
0x36f7:     0f 85 92 01 00 00                  	jne 0x388f <function_388f>
0x36fd:     8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x3701:     8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x3705:     8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x3709:     8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x370d:     83 c4 7c                           	add esp, 0x7c
0x3710:     c3                                 	ret 
; data inside code section at 0x3711 -- 0x371e
0x3711:     8d b4 26 00 00 00 00 0f  8e 62 01 00 00            |..&......b...   |
; function: function_371e at 0x371e -- 0x371f
; dynamically linked function: _Z7GetTimev at 0x371f -- 0x3720
; data inside code section at 0x3720 -- 0x3743
0x3720:     ff ff ff c7 44 24 04 19  a2 00 00 89 44 24 30 8d   |....D$......D$0.|
0x3730:     44 24 5b 89 54 24 34 8d  54 24 4c 89 44 24 08 89   |D$[.T$4.T$L.D$..|
0x3740:     14 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x3743 -- 0x3744
; data inside code section at 0x3744 -- 0x375f
0x3744:     ff ff ff 8d 44 24 4c c7  44 24 04 80 51 01 00 c7   |....D$L.D$..Q...|
0x3754:     44 24 08 00 00 00 00 89  04 24 e8                  |D$.......$.     |
; dynamically linked function: _Z6GetArgRKSsx at 0x375f -- 0x3760
; data inside code section at 0x3760 -- 0x376f
0x3760:     ff ff ff 89 d7 89 c6 8d  54 24 4c 89 14 24 e8      |........T$L..$. |
; dynamically linked function: _ZNSsD1Ev at 0x376f -- 0x3770
; data inside code section at 0x3770 -- 0x3772
0x3770:     ff ff                                              |..              |
; function: function_3772 at 0x3772 -- 0x3781
0x3772:     ff 8b 83 38 02 00                  	dec dword ptr [ebx + 0x23883]
0x3778:     00 89 6c 24 04 89                  	add byte ptr [ecx - 0x76fbdb94], cl
0x377e:     c2 2b 54                           	ret 0x542b
; data inside code section at 0x3781 -- 0x3793
0x3781:     24 38 89 44 24 2c 89 54  24 38 8d 54 24 50 89 14   |$8.D$,.T$8.T$P..|
0x3791:     24 e8                                              |$.              |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x3793 -- 0x3794
; data inside code section at 0x3794 -- 0x37ba
0x3794:     ff ff ff 83 ec 04 8b 44  24 2c c7 04 24 c0 db 00   |.......D$,..$...|
0x37a4:     00 89 44 24 0c 8b 44 24  38 89 44 24 08 8b 44 24   |..D$..D$8.D$..D$|
0x37b4:     50 89 44 24 04 e8                                  |P.D$..          |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x37ba -- 0x37bb
; data inside code section at 0x37bb -- 0x37c6
0x37bb:     ff ff ff 8d 54 24 50 89  14 24 e8                  |....T$P..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x37c6 -- 0x37c7
; data inside code section at 0x37c7 -- 0x37c9
0x37c7:     ff ff                                              |..              |
; function: function_37c9 at 0x37c9 -- 0x3854
0x37c9:     ff 8d 44 24 40 c7                  	dec dword ptr [ebp - 0x38bfdbbc]
0x37cf:     44                                 	inc esp
0x37d0:     24 14                              	and al, 0x14
0x37d2:     00 00                              	add byte ptr [eax], al
0x37d4:     00 00                              	add byte ptr [eax], al
0x37d6:     c7 44 24 10 49 02 00 00            	mov dword ptr [esp + 0x10], 0x249
0x37de:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x37e6:     c7 44 24 08 5e a0 00 00            	mov dword ptr [esp + 8], 0xa05e ; "cs_setBanned"
0x37ee:     c7 44 24 04 80 9e 00 00            	mov dword ptr [esp + 4], 0x9e80 ; "resource_error"
0x37f6:     89 04 24                           	mov dword ptr [esp], eax
0x37f9:     e8 62 f4 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x37fe:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3802:     c7 04 24 d4 9e 00 00               	mov dword ptr [esp], 0x9ed4 ; "read_mutex_lock(m)"
0x3809:     e8 62 74 01 00                     	call 0x1ac70 <_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_>
0x380e:     03 74 24 30                        	add esi, dword ptr [esp + 0x30]
0x3812:     13 7c 24 34                        	adc edi, dword ptr [esp + 0x34]
0x3816:     3b 78 04                           	cmp edi, dword ptr [eax + 4]
0x3819:     7c 1b                              	jl 0x3836 <function_37c9+0x6d>
0x381b:     7f 04                              	jg 0x3821 <function_37c9+0x58>
0x381d:     3b 30                              	cmp esi, dword ptr [eax]
0x381f:     76 15                              	jbe 0x3836 <function_37c9+0x6d>
0x3821:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3825:     c7 04 24 d4 9e 00 00               	mov dword ptr [esp], 0x9ed4 ; "read_mutex_lock(m)"
0x382c:     e8 3f 74 01 00                     	call 0x1ac70 <_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_>
0x3831:     89 30                              	mov dword ptr [eax], esi
0x3833:     89 78 04                           	mov dword ptr [eax + 4], edi
0x3836:     8d 54 24 40                        	lea edx, [esp + 0x40]
0x383a:     89 14 24                           	mov dword ptr [esp], edx
0x383d:     e8 9e f0 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x3842:     89 1c 24                           	mov dword ptr [esp], ebx
0x3845:     e8 66 e3 ff ff                     	call 0x1bb0 <_ZN5CNode21CloseSocketDisconnectEv>
0x384a:     b8 01 00 00 00                     	mov eax, 1
0x384f:     e9 98 fe ff ff                     	jmp 0x36ec
; data inside code section at 0x3854 -- 0x3872
0x3854:     8d 74 26 00 8b 44 24 38  89 44 24 08 8b 83 ac 01   |.t&..D$8.D$.....|
0x3864:     00 00 c7 04 24 8c db 00  00 89 44 24 04 e8         |....$.....D$..  |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x3872 -- 0x3873
; data inside code section at 0x3873 -- 0x3876
0x3873:     ff ff ff                                           |...             |
; function: function_3876 at 0x3876 -- 0x387d
0x3876:     31 c0                              	xor eax, eax
0x3878:     e9 6f fe ff ff                     	jmp 0x36ec
; data inside code section at 0x387d -- 0x3880
0x387d:     8d 76 00                                           |.v.             |
; function: function_3880 at 0x3880 -- 0x388f
0x3880:     3b 7c 24 3c                        	cmp edi, dword ptr [esp + 0x3c]
0x3884:     0f 82 1d fe ff ff                  	jb 0x36a7 <function_36a7>
0x388a:     e9 8f fe ff ff                     	jmp 0x371e <function_371e>
; function: function_388f at 0x388f -- 0x3890
0x388f:     90                                 	nop 
; data inside code section at 0x3890 -- 0x3891
0x3890:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x3891 -- 0x3892
; data inside code section at 0x3892 -- 0x3896
0x3892:     ff ff ff 89                                        |....            |
; function: function_3896 at 0x3896 -- 0x3897
0x3896:     c3                                 	ret 
; data inside code section at 0x3897 -- 0x389b
0x3897:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x389b -- 0x389c
; data inside code section at 0x389c -- 0x38a3
0x389c:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x38a3 -- 0x38a4
; data inside code section at 0x38a4 -- 0x38a8
0x38a4:     ff ff ff 89                                        |....            |
; function: function_38a8 at 0x38a8 -- 0x38a9
0x38a8:     c3                                 	ret 
; data inside code section at 0x38a9 -- 0x38b9
0x38a9:     8d 44 24 40 89 04 24 e8  2b f0 00 00 89 1c 24 e8   |.D$@..$.+.....$.|
; dynamically linked function: _Unwind_Resume at 0x38b9 -- 0x38ba
; data inside code section at 0x38ba -- 0x38be
0x38ba:     ff ff ff 89                                        |....            |
; function: function_38be at 0x38be -- 0x38bf
0x38be:     c3                                 	ret 
; data inside code section at 0x38bf -- 0x38c7
0x38bf:     8d 44 24 4c 89 04 24 e8                            |.D$L..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x38c7 -- 0x38c8
; data inside code section at 0x38c8 -- 0x38cf
0x38c8:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x38cf -- 0x38d0
; data inside code section at 0x38d0 -- 0x38d4
0x38d0:     ff ff ff 89                                        |....            |
; function: function_38d4 at 0x38d4 -- 0x38d5
0x38d4:     c3                                 	ret 
; data inside code section at 0x38d5 -- 0x38dd
0x38d5:     8d 54 24 50 89 14 24 e8                            |.T$P..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x38dd -- 0x38de
; data inside code section at 0x38de -- 0x38e5
0x38de:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x38e5 -- 0x38e6
; data inside code section at 0x38e6 -- 0x38ef
0x38e6:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x38ef -- 0x38f0
; data inside code section at 0x38f0 -- 0x38f7
0x38f0:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x38f7 -- 0x38f8
; data inside code section at 0x38f8 -- 0x3900
0x38f8:     ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: _ZN5CNode15ReceiveMsgBytesEPKcj at 0x3900 -- 0x39c9
0x3900:     55                                 	push ebp
0x3901:     57                                 	push edi
0x3902:     56                                 	push esi
0x3903:     53                                 	push ebx
0x3904:     81 ec 9c 00 00 00                  	sub esp, 0x9c
0x390a:     8b ac 24 b4 00 00 00               	mov ebp, dword ptr [esp + 0xb4]
0x3911:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3917:     89 84 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], eax
0x391e:     31 c0                              	xor eax, eax
0x3920:     8b b4 24 b0 00 00 00               	mov esi, dword ptr [esp + 0xb0]
0x3927:     89 6c 24 18                        	mov dword ptr [esp + 0x18], ebp
0x392b:     8b ac 24 b8 00 00 00               	mov ebp, dword ptr [esp + 0xb8]
0x3932:     85 ed                              	test ebp, ebp
0x3934:     89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x3938:     0f 84 51 03 00 00                  	je 0x3c8f <function_3c8f>
0x393e:     8d 7c 24 30                        	lea edi, [esp + 0x30]
0x3942:     8d b6 00 00 00 00                  	lea esi, [esi]
0x3948:     8b 86 f4 00 00 00                  	mov eax, dword ptr [esi + 0xf4]
0x394e:     3b 86 e4 00 00 00                  	cmp eax, dword ptr [esi + 0xe4]
0x3954:     74 2c                              	je 0x3982 <_ZN5CNode15ReceiveMsgBytesEPKcj+0x82>
0x3956:     8b 96 f8 00 00 00                  	mov edx, dword ptr [esi + 0xf8]
0x395c:     89 c1                              	mov ecx, eax
0x395e:     8b 9e 00 01 00 00                  	mov ebx, dword ptr [esi + 0x100]
0x3964:     39 d0                              	cmp eax, edx
0x3966:     0f 84 6c 03 00 00                  	je 0x3cd8 <function_3cd8>
0x396c:     80 79 a4 00                        	cmp byte ptr [ecx - 0x5c], 0
0x3970:     0f 84 e2 02 00 00                  	je 0x3c58 <function_3c58>
0x3976:     8b 69 fc                           	mov ebp, dword ptr [ecx - 4]
0x3979:     39 69 d4                           	cmp dword ptr [ecx - 0x2c], ebp
0x397c:     0f 85 d6 02 00 00                  	jne 0x3c58 <function_3c58>
0x3982:     8b 9e 60 01 00 00                  	mov ebx, dword ptr [esi + 0x160]
0x3988:     8d 44 24 50                        	lea eax, [esp + 0x50]
0x398c:     c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x3994:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x399c:     c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x39a4:     c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x39ac:     c7 44 24 48 01 00 00 00            	mov dword ptr [esp + 0x48], 1
0x39b4:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x39b8:     66 c7 44 24 44 00 00               	mov word ptr [esp + 0x44], 0
0x39bf:     66 c7 44 24 46 05 00               	mov word ptr [esp + 0x46], 5
0x39c6:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x39c9 -- 0x39ca
0x39c9:     e8                                                 |.               |
; dynamically linked function: _ZN14CMessageHeaderC1Ev at 0x39ca -- 0x39cb
; data inside code section at 0x39cb -- 0x39e0
0x39cb:     ff ff ff 8b 4f 08 8b 44  24 40 8b 57 04 89 9c 24   |....O..D$@.W...$|
0x39db:     84 00 00 00 89                                     |.....           |
; function: function_39e0 at 0x39e0 -- 0x39e1
0x39e0:     cb                                 	retf 
; data inside code section at 0x39e1 -- 0x3a34
0x39e1:     83 c0 18 29 d3 39 d8 c7  44 24 6c 00 00 00 00 c7   |...).9..D$l.....|
0x39f1:     44 24 70 00 00 00 00 c7  44 24 74 00 00 00 00 c7   |D$p.....D$t.....|
0x3a01:     44 24 78 00 00 00 00 c7  84 24 80 00 00 00 01 00   |D$x......$......|
0x3a11:     00 00 66 c7 44 24 7c 00  00 66 c7 44 24 7e 05 00   |..f.D$|..f.D$~..|
0x3a21:     c6 44 24 2f 00 0f 87 bc  02 00 00 73 06 01 d0 89   |.D$/.......s....|
0x3a31:     44 24 38                                           |D$8             |
; function: function_3a34 at 0x3a34 -- 0x3a35
; data inside code section at 0x3a35 -- 0x3a51
0x3a35:     86 fc 00 00 00 8b 9e f4  00 00 00 c6 44 24 30 00   |............D$0.|
0x3a45:     c7 44 24 68 00 00 00 00  83 e8 5c 39               |.D$h......\9    |
; function: function_3a51 at 0x3a51 -- 0x3a52
0x3a51:     c3                                 	ret 
; data inside code section at 0x3a52 -- 0x3a95
0x3a52:     c7 84 24 88 00 00 00 00  00 00 00 0f 84 bd 02 00   |..$.............|
0x3a62:     00 85 db 0f 84 a5 02 00  00 8b 6f 08 2b 6f 04 c6   |..........o.+o..|
0x3a72:     03 00 c7 43 04 00 00 00  00 85 ed c7 43 08 00 00   |...C........C...|
0x3a82:     00 00 c7 43 0c 00 00 00  00 0f 84 bf 02 00 00 89   |...C............|
0x3a92:     2c 24 e8                                           |,$.             |
; dynamically linked function: _Znwj at 0x3a95 -- 0x3a96
; data inside code section at 0x3a96 -- 0x3a9d
0x3a96:     ff ff ff 89 44 24 14                               |....D$.         |
; function: function_3a9d at 0x3a9d -- 0x3a9e
; data inside code section at 0x3a9e -- 0x3aca
0x3a9e:     44 24 14 01 c5 89 43 04  8b 57 04 89 43 08 89 6b   |D$....C..W..C..k|
0x3aae:     0c 8b 6f 08 89 54 24 1c  39 d5 74 21 89 d0 8b 54   |..o..T$.9.t!...T|
0x3abe:     24 14 85 d2 74 05 0f b6  08 88 0a 83               |$...t.......    |
; function: function_3aca at 0x3aca -- 0x3ad0
0x3aca:     c0 01 83                           	rol byte ptr [ecx], 0x83
0x3acd:     c2 01 39                           	ret 0x3901
; data inside code section at 0x3ad0 -- 0x3b61
0x3ad0:     e8 75 ed 2b 44 24 1c 01  44 24 14 8b 44 24 14 89   |.u.+D$..D$..D$..|
0x3ae0:     43 08 8b 44 24 40 89 43  10 0f b7 44 24 44 66 89   |C..D$@.C...D$Df.|
0x3af0:     43 14 0f b7 44 24 46 66  89 43 16 8b 44 24 48 89   |C...D$Ff.C..D$H.|
0x3b00:     43 18 8b 44 24 4c 89 43  1c 8b 44 24 50 89 43 20   |C..D$L.C..D$P.C |
0x3b10:     8b 44 24 54 89 43 24 8b  44 24 58 89 43 28 8b 44   |.D$T.C$.D$X.C(.D|
0x3b20:     24 5c 89 43 2c 8b 44 24  60 89 43 30 8b 44 24 64   |$\.C,.D$`.C0.D$d|
0x3b30:     c7 43 44 00 00 00 00 89  43 34 8b 6f 40 2b 6f 3c   |.CD.....C4.o@+o<|
0x3b40:     8b 44 24 68 c7 43 3c 00  00 00 00 85 ed c7 43 40   |.D$h.C<.......C@|
0x3b50:     00 00 00 00 89 43 38 0f  84 e3 01 00 00 89 2c 24   |.....C8.......,$|
0x3b60:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3b61 -- 0x3b62
; data inside code section at 0x3b62 -- 0x3b69
0x3b62:     ff ff ff 89 44 24 1c                               |....D$.         |
; function: function_3b69 at 0x3b69 -- 0x3b6a
; data inside code section at 0x3b6a -- 0x3b9a
0x3b6a:     44 24 1c 01 c5 89 43 3c  8b 57 3c 89 43 40 89 6b   |D$....C<.W<.C@.k|
0x3b7a:     44 8b 6f 40 89 54 24 14  39 d5 74 2c 89 d0 8b 54   |D.o@.T$.9.t,...T|
0x3b8a:     24 1c 8d 74 26 00 85 d2  74 05 0f b6 08 88 0a 83   |$..t&...t.......|
; function: function_3b9a at 0x3b9a -- 0x3ba0
0x3b9a:     c0 01 83                           	rol byte ptr [ecx], 0x83
0x3b9d:     c2 01 39                           	ret 0x3901
; data inside code section at 0x3ba0 -- 0x3bf6
0x3ba0:     e8 75 ed 8b 6f 3c 2b 44  24 14 01 44 24 1c 89 6c   |.u..o<+D$..D$..l|
0x3bb0:     24 14 8b 44 24 1c 89 43  40 8b 44 24 78 89 43 48   |$..D$..C@.D$x.CH|
0x3bc0:     0f b7 44 24 7c 66 89 43  4c 0f b7 44 24 7e 66 89   |..D$|f.CL..D$~f.|
0x3bd0:     43 4e 8b 84 24 80 00 00  00 89 43 50 8b 84 24 84   |CN..$.....CP..$.|
0x3be0:     00 00 00 89 43 54 8b 84  24 88 00 00 00 89 43 58   |....CT..$.....CX|
0x3bf0:     8b 86 f4 00 00 00                                  |......          |
; function: function_3bf6 at 0x3bf6 -- 0x3bf7
; data inside code section at 0x3bf7 -- 0x3bff
0x3bf7:     c0 5c 89 86 f4 00 00 00                            |.\......        |
; function: function_3bff at 0x3bff -- 0x3c00
; data inside code section at 0x3c00 -- 0x3c1a
0x3c00:     54 24 14 8b 47 44 85 d2  74 1c 8b 6c 24 14 2b 44   |T$..GD..t..l$.+D|
0x3c10:     24 14 89 2c 24 89 44 24  04 e8                     |$..,$.D$..      |
; dynamically linked function: OPENSSL_cleanse at 0x3c1a -- 0x3c1b
; data inside code section at 0x3c1b -- 0x3c22
0x3c1b:     ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZdlPv at 0x3c22 -- 0x3c23
; data inside code section at 0x3c23 -- 0x3c3a
0x3c23:     ff ff ff 8b 5f 04 8b 47  0c 85 db 74 16 29 d8 89   |...._..G...t.)..|
0x3c33:     44 24 04 89 1c 24 e8                               |D$...$.         |
; dynamically linked function: OPENSSL_cleanse at 0x3c3a -- 0x3c3b
; data inside code section at 0x3c3b -- 0x3c42
0x3c3b:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x3c42 -- 0x3c43
; data inside code section at 0x3c43 -- 0x3c58
0x3c43:     ff ff ff 8b 86 f4 00 00  00 8b 96 f8 00 00 00 8b   |................|
0x3c53:     9e 00 01 00 00                                     |.....           |
; function: function_3c58 at 0x3c58 -- 0x3c8f
0x3c58:     39 d0                              	cmp eax, edx
0x3c5a:     74 6c                              	je 0x3cc8 <function_3cc8>
0x3c5c:     8b 6c 24 10                        	mov ebp, dword ptr [esp + 0x10]
0x3c60:     8d 50 a4                           	lea edx, [eax - 0x5c]
0x3c63:     80 78 a4 00                        	cmp byte ptr [eax - 0x5c], 0
0x3c67:     89 14 24                           	mov dword ptr [esp], edx
0x3c6a:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x3c6e:     8b 6c 24 18                        	mov ebp, dword ptr [esp + 0x18]
0x3c72:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x3c76:     75 40                              	jne 0x3cb8 <function_3cb8>
0x3c78:     e8 73 d7 ff ff                     	call 0x13f0 <_ZN11CNetMessage10readHeaderEPKcj>
0x3c7d:     85 c0                              	test eax, eax
0x3c7f:     78 40                              	js 0x3cc1 <function_3cc1>
0x3c81:     01 44 24 18                        	add dword ptr [esp + 0x18], eax
0x3c85:     29 44 24 10                        	sub dword ptr [esp + 0x10], eax
0x3c89:     0f 85 b9 fc ff ff                  	jne 0x3948
; function: function_3c8f at 0x3c8f -- 0x3cb3
0x3c8f:     b8 01 00 00 00                     	mov eax, 1
0x3c94:     8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0x3c9b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x3ca2:     0f 85 14 01 00 00                  	jne 0x3dbc <function_3dbc>
0x3ca8:     81 c4 9c 00 00 00                  	add esp, 0x9c
0x3cae:     5b                                 	pop ebx
0x3caf:     5e                                 	pop esi
0x3cb0:     5f                                 	pop edi
0x3cb1:     5d                                 	pop ebp
0x3cb2:     c3                                 	ret 
; data inside code section at 0x3cb3 -- 0x3cb8
0x3cb3:     90 8d 74 26 00                                     |..t&.           |
; function: function_3cb8 at 0x3cb8 -- 0x3cc1
0x3cb8:     e8 93 c9 ff ff                     	call 0x650 <_ZN11CNetMessage8readDataEPKcj>
0x3cbd:     85 c0                              	test eax, eax
0x3cbf:     79 c0                              	jns 0x3c81
; function: function_3cc1 at 0x3cc1 -- 0x3cc5
0x3cc1:     31 c0                              	xor eax, eax
0x3cc3:     eb cf                              	jmp 0x3c94
; data inside code section at 0x3cc5 -- 0x3cc8
0x3cc5:     8d 76 00                                           |.v.             |
; function: function_3cc8 at 0x3cc8 -- 0x3cd2
0x3cc8:     8b 43 fc                           	mov eax, dword ptr [ebx - 4]
0x3ccb:     05 cc 01 00 00                     	add eax, 0x1cc
0x3cd0:     eb 8a                              	jmp 0x3c5c
; data inside code section at 0x3cd2 -- 0x3cd8
0x3cd2:     8d b6 00 00 00 00                                  |......          |
; function: function_3cd8 at 0x3cd8 -- 0x3ce6
0x3cd8:     8b 4b fc                           	mov ecx, dword ptr [ebx - 4]
0x3cdb:     81 c1 cc 01 00 00                  	add ecx, 0x1cc
0x3ce1:     e9 86 fc ff ff                     	jmp 0x396c
; data inside code section at 0x3ce6 -- 0x3ce8
0x3ce6:     66 90                                              |f.              |
; function: function_3ce8 at 0x3ce8 -- 0x3d0b
0x3ce8:     29 d8                              	sub eax, ebx
0x3cea:     8d 54 24 2f                        	lea edx, [esp + 0x2f]
0x3cee:     8d 5c 24 34                        	lea ebx, [esp + 0x34]
0x3cf2:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x3cf6:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3cfa:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x3cfe:     89 1c 24                           	mov dword ptr [esp], ebx
0x3d01:     e8 4a fa 00 00                     	call 0x13750 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc>
0x3d06:     e9 29 fd ff ff                     	jmp 0x3a34 <function_3a34>
; data inside code section at 0x3d0b -- 0x3d10
0x3d0b:     90 8d 74 26 00                                     |..t&.           |
; function: function_3d10 at 0x3d10 -- 0x3d1e
0x3d10:     8b 6f 3c                           	mov ebp, dword ptr [edi + 0x3c]
0x3d13:     31 c0                              	xor eax, eax
0x3d15:     89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x3d19:     e9 d8 fe ff ff                     	jmp 0x3bf6 <function_3bf6>
; data inside code section at 0x3d1e -- 0x3d20
0x3d1e:     66 90                                              |f.              |
; function: function_3d20 at 0x3d20 -- 0x3d3e
0x3d20:     8d 86 dc 00 00 00                  	lea eax, [esi + 0xdc]
0x3d26:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x3d2a:     89 04 24                           	mov dword ptr [esp], eax
0x3d2d:     e8 be 71 01 00                     	call 0x1aef0 <_ZNSt5dequeI11CNetMessageSaIS0_EE16_M_push_back_auxERKS0_>
0x3d32:     8b 6f 3c                           	mov ebp, dword ptr [edi + 0x3c]
0x3d35:     89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x3d39:     e9 c1 fe ff ff                     	jmp 0x3bff <function_3bff>
; data inside code section at 0x3d3e -- 0x3d40
0x3d3e:     66 90                                              |f.              |
; function: function_3d40 at 0x3d40 -- 0x3d4d
0x3d40:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x3d48:     e9 1c fe ff ff                     	jmp 0x3b69 <function_3b69>
; data inside code section at 0x3d4d -- 0x3d50
0x3d4d:     8d 76 00                                           |.v.             |
; function: function_3d50 at 0x3d50 -- 0x3d5d
0x3d50:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x3d58:     e9 40 fd ff ff                     	jmp 0x3a9d <function_3a9d>
; data inside code section at 0x3d5d -- 0x3d5e
0x3d5d:     89                                                 |.               |
; function: function_3d5e at 0x3d5e -- 0x3d5f
0x3d5e:     c3                                 	ret 
; data inside code section at 0x3d5f -- 0x3d6f
0x3d5f:     8d 44 24 34 89 04 24 e8  55 e8 00 00 89 1c 24 e8   |.D$4..$.U.....$.|
; dynamically linked function: _Unwind_Resume at 0x3d6f -- 0x3d70
; data inside code section at 0x3d70 -- 0x3d74
0x3d70:     ff ff ff 83                                        |....            |
; function: function_3d74 at 0x3d74 -- 0x3d75
0x3d74:     c3                                 	ret 
; data inside code section at 0x3d75 -- 0x3d82
0x3d75:     04 89 c6 89 1c 24 89 f3  e8 3e e8 00 00            |.....$...>...   |
; function: function_3d82 at 0x3d82 -- 0x3d83
; data inside code section at 0x3d83 -- 0x3d8e
0x3d83:     3c 24 e8 a6 e8 00 00 89  1c 24 e8                  |<$.......$.     |
; dynamically linked function: _Unwind_Resume at 0x3d8e -- 0x3d8f
; data inside code section at 0x3d8f -- 0x3d92
0x3d8f:     ff ff ff                                           |...             |
; function: function_3d92 at 0x3d92 -- 0x3d96
0x3d92:     89 c3                              	mov ebx, eax
0x3d94:     eb ec                              	jmp 0x3d82 <function_3d82>
; data inside code section at 0x3d96 -- 0x3d9c
0x3d96:     89 c6 8d 5c 24 34                                  |...\$4          |
; function: function_3d9c at 0x3d9c -- 0x3d9d
; data inside code section at 0x3d9d -- 0x3da8
0x3d9d:     1c 24 e8 1c e8 00 00 89  34 24 e8                  |.$......4$.     |
; dynamically linked function: _Unwind_Resume at 0x3da8 -- 0x3da9
; data inside code section at 0x3da9 -- 0x3dab
0x3da9:     ff ff                                              |..              |
; function: function_3dab at 0x3dab -- 0x3dbc
0x3dab:     ff 89 c6 8d 44 24                  	dec dword ptr [ecx + 0x24448dc6]
0x3db1:     6c                                 	insb byte ptr es:[edi], dx
0x3db2:     89 04 24                           	mov dword ptr [esp], eax
0x3db5:     e8 06 e8 00 00                     	call 0x125c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x3dba:     eb e0                              	jmp 0x3d9c <function_3d9c>
; function: function_3dbc at 0x3dbc -- 0x3dbd
; dynamically linked function: __stack_chk_fail at 0x3dbd -- 0x3dbe
; data inside code section at 0x3dbe -- 0x3dc1
0x3dbe:     ff ff ff                                           |...             |
; function: function_3dc1 at 0x3dc1 -- 0x3dc3
0x3dc1:     eb 0d                              	jmp 0x3dd0 <_Z16RelayTransactionRK12CTransactionRK7uint256RK11CDataStream>
; data inside code section at 0x3dc3 -- 0x3dd0
0x3dc3:     90 90 90 90 90 90 90 90  90 90 90 90 90            |.............   |
; function: _Z16RelayTransactionRK12CTransactionRK7uint256RK11CDataStream at 0x3dd0 -- 0x3e20
0x3dd0:     55                                 	push ebp
0x3dd1:     57                                 	push edi
0x3dd2:     56                                 	push esi
0x3dd3:     53                                 	push ebx
0x3dd4:     81 ec 8c 01 00 00                  	sub esp, 0x18c
0x3dda:     8b 9c 24 a0 01 00 00               	mov ebx, dword ptr [esp + 0x1a0]
0x3de1:     8d b4 24 34 01 00 00               	lea esi, [esp + 0x134]
0x3de8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x3dee:     89 84 24 7c 01 00 00               	mov dword ptr [esp + 0x17c], eax
0x3df5:     31 c0                              	xor eax, eax
0x3df7:     c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x3dff:     89 34 24                           	mov dword ptr [esp], esi
0x3e02:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x3e06:     8b 9c 24 a4 01 00 00               	mov ebx, dword ptr [esp + 0x1a4]
0x3e0d:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x3e11:     8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x3e15:     8b 9c 24 a8 01 00 00               	mov ebx, dword ptr [esp + 0x1a8]
0x3e1c:     89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x3e20 -- 0x3e21
0x3e20:     e8                                                 |.               |
; dynamically linked function: _ZN4CInvC1EiRK7uint256 at 0x3e21 -- 0x3e22
; data inside code section at 0x3e22 -- 0x3e24
0x3e22:     ff ff                                              |..              |
; function: function_3e24 at 0x3e24 -- 0x3e60
0x3e24:     ff 8d 44 24 70 89                  	dec dword ptr [ebp - 0x768fdbbc]
0x3e2a:     04 24                              	add al, 0x24
0x3e2c:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x3e34:     c7 44 24 10 13 07 00 00            	mov dword ptr [esp + 0x10], 0x713
0x3e3c:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x3e44:     c7 44 24 08 3e a2 00 00            	mov dword ptr [esp + 8], 0xa23e ; "cs_mapRelay"
0x3e4c:     c7 44 24 04 80 a0 00 00            	mov dword ptr [esp + 4], 0xa080
0x3e54:     e8 07 ee 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x3e59:     a1 e8 a0 00 00                     	mov eax, dword ptr [0xa0e8] ; " 0"
0x3e5e:     eb 63                              	jmp 0x3ec3 <function_3ec3>
; function: function_3e60 at 0x3e60 -- 0x3ec3
0x3e60:     7c 04                              	jl 0x3e66 <function_3e60+0x6>
0x3e62:     39 c5                              	cmp ebp, eax
0x3e64:     73 73                              	jae 0x3ed9 <function_3ed9>
0x3e66:     a1 e8 a0 00 00                     	mov eax, dword ptr [0xa0e8] ; " 0"
0x3e6b:     8d 54 24 48                        	lea edx, [esp + 0x48]
0x3e6f:     c7 44 24 04 08 a1 00 00            	mov dword ptr [esp + 4], 0xa108 ; "ad stop\n"
0x3e77:     89 14 24                           	mov dword ptr [esp], edx
0x3e7a:     83 c0 08                           	add eax, 8
0x3e7d:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3e81:     e8 9a 45 01 00                     	call 0x18420 <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11equal_rangeERS2_>
0x3e86:     83 ec 04                           	sub esp, 4
0x3e89:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x3e8d:     c7 04 24 08 a1 00 00               	mov dword ptr [esp], 0xa108 ; "ad stop\n"
0x3e94:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x3e98:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x3e9c:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x3ea0:     e8 cb 7b 01 00                     	call 0x1ba70 <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_>
0x3ea5:     8b 15 f0 a0 00 00                  	mov edx, dword ptr [0xa0f0] ; "->nSendSize == 0"
0x3eab:     a1 e8 a0 00 00                     	mov eax, dword ptr [0xa0e8] ; " 0"
0x3eb0:     83 ea 2c                           	sub edx, 0x2c
0x3eb3:     39 d0                              	cmp eax, edx
0x3eb5:     0f 84 77 09 00 00                  	je 0x4832 <function_4832>
0x3ebb:     83 c0 2c                           	add eax, 0x2c
0x3ebe:     a3 e8 a0 00 00                     	mov dword ptr [0xa0e8], eax ; " 0"
; function: function_3ec3 at 0x3ec3 -- 0x3ed0
0x3ec3:     39 05 f8 a0 00 00                  	cmp dword ptr [0xa0f8], eax ; "ize == 0"
0x3ec9:     74 0e                              	je 0x3ed9 <function_3ed9>
0x3ecb:     8b 28                              	mov ebp, dword ptr [eax]
0x3ecd:     8b 78 04                           	mov edi, dword ptr [eax + 4]
; data inside code section at 0x3ed0 -- 0x3ed1
0x3ed0:     e8                                                 |.               |
; dynamically linked function: _Z7GetTimev at 0x3ed1 -- 0x3ed2
; data inside code section at 0x3ed2 -- 0x3ed9
0x3ed2:     ff ff ff 39 d7 7e 87                               |...9.~.         |
; function: function_3ed9 at 0x3ed9 -- 0x3f03
0x3ed9:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x3edc:     8b 13                              	mov edx, dword ptr [ebx]
0x3ede:     c7 44 24 54 00 00 00 00            	mov dword ptr [esp + 0x54], 0
0x3ee6:     c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
0x3eee:     89 c7                              	mov edi, eax
0x3ef0:     29 d7                              	sub edi, edx
0x3ef2:     c7 44 24 5c 00 00 00 00            	mov dword ptr [esp + 0x5c], 0
0x3efa:     0f 84 13 09 00 00                  	je 0x4813 <function_4813>
0x3f00:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x3f03 -- 0x3f04
0x3f03:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x3f04 -- 0x3f05
; data inside code section at 0x3f05 -- 0x3f0f
0x3f05:     ff ff ff 89 c1 8b 13 8b  43 04                     |........C.      |
; function: function_3f0f at 0x3f0f -- 0x4096
0x3f0f:     01 cf                              	add edi, ecx
0x3f11:     31 ed                              	xor ebp, ebp
0x3f13:     39 d0                              	cmp eax, edx
0x3f15:     89 7c 24 5c                        	mov dword ptr [esp + 0x5c], edi
0x3f19:     89 cf                              	mov edi, ecx
0x3f1b:     89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0x3f1f:     89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x3f23:     74 2c                              	je 0x3f51 <function_3f0f+0x42>
0x3f25:     89 d7                              	mov edi, edx
0x3f27:     89 cd                              	mov ebp, ecx
0x3f29:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x3f2d:     85 ed                              	test ebp, ebp
0x3f2f:     74 06                              	je 0x3f37 <function_3f0f+0x28>
0x3f31:     0f b6 17                           	movzx edx, byte ptr [edi]
0x3f34:     88 55 00                           	mov byte ptr [ebp], dl
0x3f37:     83 c7 01                           	add edi, 1
0x3f3a:     83 c5 01                           	add ebp, 1
0x3f3d:     39 c7                              	cmp edi, eax
0x3f3f:     75 ec                              	jne 0x3f2d <function_3f0f+0x1e>
0x3f41:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x3f45:     29 d7                              	sub edi, edx
0x3f47:     01 cf                              	add edi, ecx
0x3f49:     8b 4c 24 54                        	mov ecx, dword ptr [esp + 0x54]
0x3f4d:     89 fd                              	mov ebp, edi
0x3f4f:     29 cd                              	sub ebp, ecx
0x3f51:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x3f54:     85 ed                              	test ebp, ebp
0x3f56:     8b 94 24 38 01 00 00               	mov edx, dword ptr [esp + 0x138]
0x3f5d:     89 7c 24 58                        	mov dword ptr [esp + 0x58], edi
0x3f61:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x3f65:     0f b7 43 10                        	movzx eax, word ptr [ebx + 0x10]
0x3f69:     89 94 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], edx
0x3f70:     89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0x3f77:     8b 94 24 40 01 00 00               	mov edx, dword ptr [esp + 0x140]
0x3f7e:     66 89 44 24 64                     	mov word ptr [esp + 0x64], ax
0x3f83:     0f b7 43 12                        	movzx eax, word ptr [ebx + 0x12]
0x3f87:     66 89 44 24 66                     	mov word ptr [esp + 0x66], ax
0x3f8c:     8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x3f8f:     89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x3f93:     8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x3f96:     8b 9c 24 34 01 00 00               	mov ebx, dword ptr [esp + 0x134]
0x3f9d:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x3fa1:     8b 84 24 40 01 00 00               	mov eax, dword ptr [esp + 0x140]
0x3fa8:     89 9c 24 58 01 00 00               	mov dword ptr [esp + 0x158], ebx
0x3faf:     8b 9c 24 3c 01 00 00               	mov ebx, dword ptr [esp + 0x13c]
0x3fb6:     89 84 24 64 01 00 00               	mov dword ptr [esp + 0x164], eax
0x3fbd:     8b 84 24 44 01 00 00               	mov eax, dword ptr [esp + 0x144]
0x3fc4:     89 9c 24 60 01 00 00               	mov dword ptr [esp + 0x160], ebx
0x3fcb:     89 9c 24 90 00 00 00               	mov dword ptr [esp + 0x90], ebx
0x3fd2:     89 84 24 68 01 00 00               	mov dword ptr [esp + 0x168], eax
0x3fd9:     8b 84 24 48 01 00 00               	mov eax, dword ptr [esp + 0x148]
0x3fe0:     89 84 24 6c 01 00 00               	mov dword ptr [esp + 0x16c], eax
0x3fe7:     8b 84 24 4c 01 00 00               	mov eax, dword ptr [esp + 0x14c]
0x3fee:     89 84 24 70 01 00 00               	mov dword ptr [esp + 0x170], eax
0x3ff5:     8b 84 24 50 01 00 00               	mov eax, dword ptr [esp + 0x150]
0x3ffc:     89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x4003:     8b 84 24 54 01 00 00               	mov eax, dword ptr [esp + 0x154]
0x400a:     89 84 24 78 01 00 00               	mov dword ptr [esp + 0x178], eax
0x4011:     8b 84 24 34 01 00 00               	mov eax, dword ptr [esp + 0x134]
0x4018:     89 84 24 88 00 00 00               	mov dword ptr [esp + 0x88], eax
0x401f:     89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0x4026:     8b 9c 24 44 01 00 00               	mov ebx, dword ptr [esp + 0x144]
0x402d:     8b 84 24 48 01 00 00               	mov eax, dword ptr [esp + 0x148]
0x4034:     8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x403b:     c7 84 24 ac 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xac], 0
0x4046:     89 9c 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebx
0x404d:     8b 9c 24 50 01 00 00               	mov ebx, dword ptr [esp + 0x150]
0x4054:     89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x405b:     8b 84 24 54 01 00 00               	mov eax, dword ptr [esp + 0x154]
0x4062:     89 94 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], edx
0x4069:     c7 84 24 b0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb0], 0
0x4074:     89 9c 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], ebx
0x407b:     89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x4082:     c7 84 24 b4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb4], 0
0x408d:     0f 84 df 07 00 00                  	je 0x4872 <function_4872>
0x4093:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x4096 -- 0x4097
0x4096:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x4097 -- 0x4098
; data inside code section at 0x4098 -- 0x409a
0x4098:     ff ff                                              |..              |
; function: function_409a at 0x409a -- 0x40a3
0x409a:     ff 8b 7c 24 58 89                  	dec dword ptr [ebx - 0x76a7db84]
0x40a0:     c2 8b 4c                           	ret 0x4c8b
; data inside code section at 0x40a3 -- 0x40a5
0x40a3:     24 54                                              |$T              |
; function: function_40a5 at 0x40a5 -- 0x41d8
0x40a5:     01 d5                              	add ebp, edx
0x40a7:     31 db                              	xor ebx, ebx
0x40a9:     39 cf                              	cmp edi, ecx
0x40ab:     89 ac 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ebp
0x40b2:     89 d5                              	mov ebp, edx
0x40b4:     89 94 24 ac 00 00 00               	mov dword ptr [esp + 0xac], edx
0x40bb:     89 94 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], edx
0x40c2:     74 28                              	je 0x40ec <function_40a5+0x47>
0x40c4:     89 c8                              	mov eax, ecx
0x40c6:     89 d3                              	mov ebx, edx
0x40c8:     85 db                              	test ebx, ebx
0x40ca:     74 05                              	je 0x40d1 <function_40a5+0x2c>
0x40cc:     0f b6 10                           	movzx edx, byte ptr [eax]
0x40cf:     88 13                              	mov byte ptr [ebx], dl
0x40d1:     83 c0 01                           	add eax, 1
0x40d4:     83 c3 01                           	add ebx, 1
0x40d7:     39 f8                              	cmp eax, edi
0x40d9:     75 ed                              	jne 0x40c8 <function_40a5+0x23>
0x40db:     89 ea                              	mov edx, ebp
0x40dd:     8b ac 24 ac 00 00 00               	mov ebp, dword ptr [esp + 0xac]
0x40e4:     29 c8                              	sub eax, ecx
0x40e6:     01 c2                              	add edx, eax
0x40e8:     89 d3                              	mov ebx, edx
0x40ea:     29 eb                              	sub ebx, ebp
0x40ec:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x40f0:     85 db                              	test ebx, ebx
0x40f2:     89 94 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], edx
0x40f9:     c7 84 24 ec 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xec], 0
0x4104:     c7 84 24 f0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf0], 0
0x410f:     89 84 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], eax
0x4116:     0f b7 44 24 64                     	movzx eax, word ptr [esp + 0x64]
0x411b:     c7 84 24 f4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xf4], 0
0x4126:     66 89 84 24 bc 00 00 00            	mov word ptr [esp + 0xbc], ax
0x412e:     0f b7 44 24 66                     	movzx eax, word ptr [esp + 0x66]
0x4133:     66 89 84 24 be 00 00 00            	mov word ptr [esp + 0xbe], ax
0x413b:     8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x413f:     89 84 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], eax
0x4146:     8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x414a:     89 84 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], eax
0x4151:     8b 84 24 88 00 00 00               	mov eax, dword ptr [esp + 0x88]
0x4158:     89 84 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], eax
0x415f:     8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x4166:     89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x416d:     8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0x4174:     89 84 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], eax
0x417b:     8b 84 24 94 00 00 00               	mov eax, dword ptr [esp + 0x94]
0x4182:     89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x4189:     8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x4190:     89 84 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], eax
0x4197:     8b 84 24 9c 00 00 00               	mov eax, dword ptr [esp + 0x9c]
0x419e:     89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0x41a5:     8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x41ac:     89 84 24 e0 00 00 00               	mov dword ptr [esp + 0xe0], eax
0x41b3:     8b 84 24 a4 00 00 00               	mov eax, dword ptr [esp + 0xa4]
0x41ba:     89 84 24 e4 00 00 00               	mov dword ptr [esp + 0xe4], eax
0x41c1:     8b 84 24 a8 00 00 00               	mov eax, dword ptr [esp + 0xa8]
0x41c8:     89 84 24 e8 00 00 00               	mov dword ptr [esp + 0xe8], eax
0x41cf:     0f 84 96 06 00 00                  	je 0x486b <function_486b>
0x41d5:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x41d8 -- 0x41d9
0x41d8:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x41d9 -- 0x41da
; data inside code section at 0x41da -- 0x41eb
0x41da:     ff ff ff 8b 94 24 b0 00  00 00 8b ac 24 ac 00 00   |.....$......$...|
0x41ea:     00                                                 |.               |
; function: function_41eb at 0x41eb -- 0x42b3
0x41eb:     01 c3                              	add ebx, eax
0x41ed:     39 ea                              	cmp edx, ebp
0x41ef:     89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x41f6:     89 84 24 f0 00 00 00               	mov dword ptr [esp + 0xf0], eax
0x41fd:     89 9c 24 f4 00 00 00               	mov dword ptr [esp + 0xf4], ebx
0x4204:     74 1f                              	je 0x4225 <function_41eb+0x3a>
0x4206:     89 e9                              	mov ecx, ebp
0x4208:     89 c3                              	mov ebx, eax
0x420a:     89 c7                              	mov edi, eax
0x420c:     85 db                              	test ebx, ebx
0x420e:     74 05                              	je 0x4215 <function_41eb+0x2a>
0x4210:     0f b6 01                           	movzx eax, byte ptr [ecx]
0x4213:     88 03                              	mov byte ptr [ebx], al
0x4215:     83 c1 01                           	add ecx, 1
0x4218:     83 c3 01                           	add ebx, 1
0x421b:     39 d1                              	cmp ecx, edx
0x421d:     75 ed                              	jne 0x420c <function_41eb+0x21>
0x421f:     89 f8                              	mov eax, edi
0x4221:     29 e9                              	sub ecx, ebp
0x4223:     01 c8                              	add eax, ecx
0x4225:     89 84 24 f0 00 00 00               	mov dword ptr [esp + 0xf0], eax
0x422c:     8b 84 24 b8 00 00 00               	mov eax, dword ptr [esp + 0xb8]
0x4233:     8d 94 24 c8 00 00 00               	lea edx, [esp + 0xc8]
0x423a:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x423e:     c7 44 24 04 08 a1 00 00            	mov dword ptr [esp + 4], 0xa108 ; "ad stop\n"
0x4246:     89 84 24 f8 00 00 00               	mov dword ptr [esp + 0xf8], eax
0x424d:     0f b7 84 24 bc 00 00 00            	movzx eax, word ptr [esp + 0xbc]
0x4255:     66 89 84 24 fc 00 00 00            	mov word ptr [esp + 0xfc], ax
0x425d:     0f b7 84 24 be 00 00 00            	movzx eax, word ptr [esp + 0xbe]
0x4265:     66 89 84 24 fe 00 00 00            	mov word ptr [esp + 0xfe], ax
0x426d:     8b 84 24 c0 00 00 00               	mov eax, dword ptr [esp + 0xc0]
0x4274:     89 84 24 00 01 00 00               	mov dword ptr [esp + 0x100], eax
0x427b:     8b 84 24 c4 00 00 00               	mov eax, dword ptr [esp + 0xc4]
0x4282:     89 84 24 04 01 00 00               	mov dword ptr [esp + 0x104], eax
0x4289:     8d 44 24 40                        	lea eax, [esp + 0x40]
0x428d:     89 04 24                           	mov dword ptr [esp], eax
0x4290:     e8 6b 44 01 00                     	call 0x18700 <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_>
0x4295:     83 ec 04                           	sub esp, 4
0x4298:     8b 9c 24 ec 00 00 00               	mov ebx, dword ptr [esp + 0xec]
0x429f:     8b 84 24 f4 00 00 00               	mov eax, dword ptr [esp + 0xf4]
0x42a6:     85 db                              	test ebx, ebx
0x42a8:     74 16                              	je 0x42c0 <function_42c0>
0x42aa:     29 d8                              	sub eax, ebx
0x42ac:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x42b0:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x42b3 -- 0x42b4
0x42b3:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x42b4 -- 0x42b5
; data inside code section at 0x42b5 -- 0x42bc
0x42b5:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x42bc -- 0x42bd
; data inside code section at 0x42bd -- 0x42c0
0x42bd:     ff ff ff                                           |...             |
; function: function_42c0 at 0x42c0 -- 0x42db
0x42c0:     8b 9c 24 ac 00 00 00               	mov ebx, dword ptr [esp + 0xac]
0x42c7:     8b 84 24 b4 00 00 00               	mov eax, dword ptr [esp + 0xb4]
0x42ce:     85 db                              	test ebx, ebx
0x42d0:     74 16                              	je 0x42e8 <function_42e8>
0x42d2:     29 d8                              	sub eax, ebx
0x42d4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x42d8:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x42db -- 0x42dc
0x42db:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x42dc -- 0x42dd
; data inside code section at 0x42dd -- 0x42e4
0x42dd:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x42e4 -- 0x42e5
; data inside code section at 0x42e5 -- 0x42e8
0x42e5:     ff ff ff                                           |...             |
; function: function_42e8 at 0x42e8 -- 0x42fd
0x42e8:     8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x42ec:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x42f0:     85 db                              	test ebx, ebx
0x42f2:     74 16                              	je 0x430a <function_430a>
0x42f4:     29 d8                              	sub eax, ebx
0x42f6:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x42fa:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x42fd -- 0x42fe
0x42fd:     e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x42fe -- 0x42ff
; data inside code section at 0x42ff -- 0x4306
0x42ff:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x4306 -- 0x4307
; data inside code section at 0x4307 -- 0x430a
0x4307:     ff ff ff                                           |...             |
; function: function_430a at 0x430a -- 0x430b
; dynamically linked function: _Z7GetTimev at 0x430b -- 0x430c
; data inside code section at 0x430c -- 0x430e
0x430c:     ff ff                                              |..              |
; function: function_430e at 0x430e -- 0x4599
0x430e:     ff 8b 9c 24 38 01                  	dec dword ptr [ebx + 0x138249c]
0x4314:     00 00                              	add byte ptr [eax], al
0x4316:     05 84 03 00 00                     	add eax, 0x384
0x431b:     83 d2 00                           	adc edx, 0
0x431e:     8b 8c 24 34 01 00 00               	mov ecx, dword ptr [esp + 0x134]
0x4325:     89 84 24 08 01 00 00               	mov dword ptr [esp + 0x108], eax
0x432c:     8b 84 24 38 01 00 00               	mov eax, dword ptr [esp + 0x138]
0x4333:     89 94 24 0c 01 00 00               	mov dword ptr [esp + 0x10c], edx
0x433a:     8b 94 24 44 01 00 00               	mov edx, dword ptr [esp + 0x144]
0x4341:     89 9c 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], ebx
0x4348:     8b 9c 24 44 01 00 00               	mov ebx, dword ptr [esp + 0x144]
0x434f:     8b bc 24 3c 01 00 00               	mov edi, dword ptr [esp + 0x13c]
0x4356:     8b ac 24 40 01 00 00               	mov ebp, dword ptr [esp + 0x140]
0x435d:     89 84 24 14 01 00 00               	mov dword ptr [esp + 0x114], eax
0x4364:     8b 84 24 4c 01 00 00               	mov eax, dword ptr [esp + 0x14c]
0x436b:     89 9c 24 68 01 00 00               	mov dword ptr [esp + 0x168], ebx
0x4372:     8b 9c 24 48 01 00 00               	mov ebx, dword ptr [esp + 0x148]
0x4379:     89 94 24 20 01 00 00               	mov dword ptr [esp + 0x120], edx
0x4380:     8b 94 24 50 01 00 00               	mov edx, dword ptr [esp + 0x150]
0x4387:     89 8c 24 58 01 00 00               	mov dword ptr [esp + 0x158], ecx
0x438e:     89 84 24 28 01 00 00               	mov dword ptr [esp + 0x128], eax
0x4395:     89 9c 24 6c 01 00 00               	mov dword ptr [esp + 0x16c], ebx
0x439c:     8b 9c 24 4c 01 00 00               	mov ebx, dword ptr [esp + 0x14c]
0x43a3:     89 94 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], edx
0x43aa:     89 bc 24 60 01 00 00               	mov dword ptr [esp + 0x160], edi
0x43b1:     89 ac 24 64 01 00 00               	mov dword ptr [esp + 0x164], ebp
0x43b8:     89 9c 24 70 01 00 00               	mov dword ptr [esp + 0x170], ebx
0x43bf:     8b 9c 24 50 01 00 00               	mov ebx, dword ptr [esp + 0x150]
0x43c6:     89 8c 24 10 01 00 00               	mov dword ptr [esp + 0x110], ecx
0x43cd:     89 bc 24 18 01 00 00               	mov dword ptr [esp + 0x118], edi
0x43d4:     89 ac 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], ebp
0x43db:     89 9c 24 74 01 00 00               	mov dword ptr [esp + 0x174], ebx
0x43e2:     8b 9c 24 54 01 00 00               	mov ebx, dword ptr [esp + 0x154]
0x43e9:     89 9c 24 78 01 00 00               	mov dword ptr [esp + 0x178], ebx
0x43f0:     8b 9c 24 48 01 00 00               	mov ebx, dword ptr [esp + 0x148]
0x43f7:     89 9c 24 24 01 00 00               	mov dword ptr [esp + 0x124], ebx
0x43fe:     8b 9c 24 54 01 00 00               	mov ebx, dword ptr [esp + 0x154]
0x4405:     89 9c 24 30 01 00 00               	mov dword ptr [esp + 0x130], ebx
0x440c:     8b 15 00 a1 00 00                  	mov edx, dword ptr [0xa100]
0x4412:     a1 f8 a0 00 00                     	mov eax, dword ptr [0xa0f8] ; "ize == 0"
0x4417:     83 ea 2c                           	sub edx, 0x2c
0x441a:     39 d0                              	cmp eax, edx
0x441c:     0f 84 b3 04 00 00                  	je 0x48d5 <function_48d5>
0x4422:     85 c0                              	test eax, eax
0x4424:     74 6d                              	je 0x4493 <function_430e+0x185>
0x4426:     8b 94 24 08 01 00 00               	mov edx, dword ptr [esp + 0x108]
0x442d:     89 10                              	mov dword ptr [eax], edx
0x442f:     8b 94 24 0c 01 00 00               	mov edx, dword ptr [esp + 0x10c]
0x4436:     89 50 04                           	mov dword ptr [eax + 4], edx
0x4439:     8b 94 24 10 01 00 00               	mov edx, dword ptr [esp + 0x110]
0x4440:     89 50 08                           	mov dword ptr [eax + 8], edx
0x4443:     8b 94 24 14 01 00 00               	mov edx, dword ptr [esp + 0x114]
0x444a:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x444d:     8b 94 24 18 01 00 00               	mov edx, dword ptr [esp + 0x118]
0x4454:     89 50 10                           	mov dword ptr [eax + 0x10], edx
0x4457:     8b 94 24 1c 01 00 00               	mov edx, dword ptr [esp + 0x11c]
0x445e:     89 50 14                           	mov dword ptr [eax + 0x14], edx
0x4461:     8b 94 24 20 01 00 00               	mov edx, dword ptr [esp + 0x120]
0x4468:     89 50 18                           	mov dword ptr [eax + 0x18], edx
0x446b:     8b 94 24 24 01 00 00               	mov edx, dword ptr [esp + 0x124]
0x4472:     89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x4475:     8b 94 24 28 01 00 00               	mov edx, dword ptr [esp + 0x128]
0x447c:     89 50 20                           	mov dword ptr [eax + 0x20], edx
0x447f:     8b 94 24 2c 01 00 00               	mov edx, dword ptr [esp + 0x12c]
0x4486:     89 50 24                           	mov dword ptr [eax + 0x24], edx
0x4489:     8b 94 24 30 01 00 00               	mov edx, dword ptr [esp + 0x130]
0x4490:     89 50 28                           	mov dword ptr [eax + 0x28], edx
0x4493:     83 c0 2c                           	add eax, 0x2c
0x4496:     a3 f8 a0 00 00                     	mov dword ptr [0xa0f8], eax ; "ize == 0"
0x449b:     8d 44 24 70                        	lea eax, [esp + 0x70]
0x449f:     89 04 24                           	mov dword ptr [esp], eax
0x44a2:     e8 39 e4 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x44a7:     8d 54 24 78                        	lea edx, [esp + 0x78]
0x44ab:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x44b3:     c7 44 24 10 1f 07 00 00            	mov dword ptr [esp + 0x10], 0x71f
0x44bb:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x44c3:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x44cb:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x44d3:     89 14 24                           	mov dword ptr [esp], edx
0x44d6:     e8 85 e7 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x44db:     8b 1d 78 a1 00 00                  	mov ebx, dword ptr [0xa178] ; "4.208.43.192"
0x44e1:     a1 74 a1 00 00                     	mov eax, dword ptr [0xa174] ; "rg"
0x44e6:     89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x44ea:     39 d8                              	cmp eax, ebx
0x44ec:     74 29                              	je 0x4517 <function_430e+0x209>
0x44ee:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x44f2:     8d b6 00 00 00 00                  	lea esi, [esi]
0x44f8:     8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x44fc:     8b 3b                              	mov edi, dword ptr [ebx]
0x44fe:     80 bf d2 01 00 00 00               	cmp byte ptr [edi + 0x1d2], 0
0x4505:     75 3b                              	jne 0x4542 <function_430e+0x234>
0x4507:     90                                 	nop 
0x4508:     83 44 24 38 04                     	add dword ptr [esp + 0x38], 4
0x450d:     8b 5c 24 38                        	mov ebx, dword ptr [esp + 0x38]
0x4511:     39 5c 24 3c                        	cmp dword ptr [esp + 0x3c], ebx
0x4515:     75 e1                              	jne 0x44f8 <function_430e+0x1ea>
0x4517:     8d 54 24 78                        	lea edx, [esp + 0x78]
0x451b:     89 14 24                           	mov dword ptr [esp], edx
0x451e:     e8 bd e3 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x4523:     8b 9c 24 7c 01 00 00               	mov ebx, dword ptr [esp + 0x17c]
0x452a:     65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x4531:     0f 85 93 03 00 00                  	jne 0x48ca <function_48ca>
0x4537:     81 c4 8c 01 00 00                  	add esp, 0x18c
0x453d:     5b                                 	pop ebx
0x453e:     5e                                 	pop esi
0x453f:     5f                                 	pop edi
0x4540:     5d                                 	pop ebp
0x4541:     c3                                 	ret 
0x4542:     8d 87 dc 01 00 00                  	lea eax, [edi + 0x1dc]
0x4548:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x454c:     8d 44 24 70                        	lea eax, [esp + 0x70]
0x4550:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x4558:     c7 44 24 10 24 07 00 00            	mov dword ptr [esp + 0x10], 0x724
0x4560:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x4568:     c7 44 24 08 4a a2 00 00            	mov dword ptr [esp + 8], 0xa24a ; "pnode->cs_filter"
0x4570:     89 04 24                           	mov dword ptr [esp], eax
0x4573:     e8 e8 e6 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x4578:     8b 87 30 02 00 00                  	mov eax, dword ptr [edi + 0x230]
0x457e:     85 c0                              	test eax, eax
0x4580:     0f 84 52 01 00 00                  	je 0x46d8 <function_46d8>
0x4586:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x458a:     89 04 24                           	mov dword ptr [esp], eax
0x458d:     89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x4591:     8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x4595:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
; data inside code section at 0x4599 -- 0x459a
0x4599:     e8                                                 |.               |
; dynamically linked function: _ZN12CBloomFilter19IsRelevantAndUpdateERK12CTransactionRK7uint256 at 0x459a -- 0x459b
; data inside code section at 0x459b -- 0x45a2
0x459b:     ff ff ff 84 c0 75 16                               |.....u.         |
; function: function_45a2 at 0x45a2 -- 0x45b3
0x45a2:     8d 54 24 70                        	lea edx, [esp + 0x70]
0x45a6:     89 14 24                           	mov dword ptr [esp], edx
0x45a9:     e8 32 e3 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x45ae:     e9 55 ff ff ff                     	jmp 0x4508
; data inside code section at 0x45b3 -- 0x45b8
0x45b3:     90 8d 74 26 00                                     |..t&.           |
; function: function_45b8 at 0x45b8 -- 0x4643
0x45b8:     8d 87 18 03 00 00                  	lea eax, [edi + 0x318]
0x45be:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x45c2:     8d 84 24 80 00 00 00               	lea eax, [esp + 0x80]
0x45c9:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x45d1:     c7 44 24 10 67 01 00 00            	mov dword ptr [esp + 0x10], 0x167
0x45d9:     c7 44 24 0c 5b a2 00 00            	mov dword ptr [esp + 0xc], 0xa25b ; "net.h"
0x45e1:     c7 44 24 08 61 a2 00 00            	mov dword ptr [esp + 8], 0xa261 ; "cs_inventory"
0x45e9:     89 04 24                           	mov dword ptr [esp], eax
0x45ec:     e8 6f e6 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x45f1:     8b 9f d0 02 00 00                  	mov ebx, dword ptr [edi + 0x2d0]
0x45f7:     85 db                              	test ebx, ebx
0x45f9:     74 51                              	je 0x464c <function_464c>
0x45fb:     8d 97 cc 02 00 00                  	lea edx, [edi + 0x2cc]
0x4601:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x4605:     89 d5                              	mov ebp, edx
0x4607:     eb 10                              	jmp 0x4619 <function_45b8+0x61>
; data inside code section at 0x4609 -- 0x4610
0x4609:     8d b4 26 00 00 00 00                               |..&....         |
0x4610:     89 dd                              	mov ebp, ebx
0x4612:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x4615:     85 db                              	test ebx, ebx
0x4617:     74 1a                              	je 0x4633 <function_45b8+0x7b>
0x4619:     8d 43 10                           	lea eax, [ebx + 0x10]
0x461c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x4620:     89 04 24                           	mov dword ptr [esp], eax
0x4623:     e8 fc ff ff ff                     	call 0x4624
0x4628:     84 c0                              	test al, al
0x462a:     74 e4                              	je 0x4610 <function_45b8+0x58>
0x462c:     8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x462f:     85 db                              	test ebx, ebx
0x4631:     75 e6                              	jne 0x4619 <function_45b8+0x61>
0x4633:     39 6c 24 2c                        	cmp dword ptr [esp + 0x2c], ebp
0x4637:     74 13                              	je 0x464c <function_464c>
0x4639:     83 c5 10                           	add ebp, 0x10
0x463c:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x4640:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4643 -- 0x4644
0x4643:     e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x4644 -- 0x4645
; data inside code section at 0x4645 -- 0x464c
0x4645:     ff ff ff 84 c0 74 78                               |.....tx         |
; function: function_464c at 0x464c -- 0x46d8
0x464c:     8b 87 10 03 00 00                  	mov eax, dword ptr [edi + 0x310]
0x4652:     3b 87 14 03 00 00                  	cmp eax, dword ptr [edi + 0x314]
0x4658:     0f 84 9a 01 00 00                  	je 0x47f8 <function_47f8>
0x465e:     85 c0                              	test eax, eax
0x4660:     74 59                              	je 0x46bb <function_464c+0x6f>
0x4662:     8b 94 24 34 01 00 00               	mov edx, dword ptr [esp + 0x134]
0x4669:     89 10                              	mov dword ptr [eax], edx
0x466b:     8b 94 24 38 01 00 00               	mov edx, dword ptr [esp + 0x138]
0x4672:     89 50 04                           	mov dword ptr [eax + 4], edx
0x4675:     8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
0x467c:     89 50 08                           	mov dword ptr [eax + 8], edx
0x467f:     8b 94 24 40 01 00 00               	mov edx, dword ptr [esp + 0x140]
0x4686:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x4689:     8b 94 24 44 01 00 00               	mov edx, dword ptr [esp + 0x144]
0x4690:     89 50 10                           	mov dword ptr [eax + 0x10], edx
0x4693:     8b 94 24 48 01 00 00               	mov edx, dword ptr [esp + 0x148]
0x469a:     89 50 14                           	mov dword ptr [eax + 0x14], edx
0x469d:     8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x46a4:     89 50 18                           	mov dword ptr [eax + 0x18], edx
0x46a7:     8b 94 24 50 01 00 00               	mov edx, dword ptr [esp + 0x150]
0x46ae:     89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x46b1:     8b 94 24 54 01 00 00               	mov edx, dword ptr [esp + 0x154]
0x46b8:     89 50 20                           	mov dword ptr [eax + 0x20], edx
0x46bb:     83 c0 24                           	add eax, 0x24
0x46be:     89 87 10 03 00 00                  	mov dword ptr [edi + 0x310], eax
0x46c4:     8d 9c 24 80 00 00 00               	lea ebx, [esp + 0x80]
0x46cb:     89 1c 24                           	mov dword ptr [esp], ebx
0x46ce:     e8 0d e2 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x46d3:     e9 ca fe ff ff                     	jmp 0x45a2 <function_45a2>
; function: function_46d8 at 0x46d8 -- 0x4729
0x46d8:     8d 87 18 03 00 00                  	lea eax, [edi + 0x318]
0x46de:     8d 94 24 80 00 00 00               	lea edx, [esp + 0x80]
0x46e5:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x46ed:     c7 44 24 10 67 01 00 00            	mov dword ptr [esp + 0x10], 0x167
0x46f5:     c7 44 24 0c 5b a2 00 00            	mov dword ptr [esp + 0xc], 0xa25b ; "net.h"
0x46fd:     c7 44 24 08 61 a2 00 00            	mov dword ptr [esp + 8], 0xa261 ; "cs_inventory"
0x4705:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4709:     89 14 24                           	mov dword ptr [esp], edx
0x470c:     e8 4f e5 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x4711:     8b 9f d0 02 00 00                  	mov ebx, dword ptr [edi + 0x2d0]
0x4717:     85 db                              	test ebx, ebx
0x4719:     74 51                              	je 0x476c <function_476c>
0x471b:     8d 87 cc 02 00 00                  	lea eax, [edi + 0x2cc]
0x4721:     89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x4725:     89 c5                              	mov ebp, eax
0x4727:     eb 10                              	jmp 0x4739 <function_4739>
; data inside code section at 0x4729 -- 0x4730
0x4729:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_4730 at 0x4730 -- 0x4739
0x4730:     89 dd                              	mov ebp, ebx
0x4732:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x4735:     85 db                              	test ebx, ebx
0x4737:     74 1a                              	je 0x4753
; function: function_4739 at 0x4739 -- 0x4743
0x4739:     8d 43 10                           	lea eax, [ebx + 0x10]
0x473c:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x4740:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x4743 -- 0x4744
0x4743:     e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x4744 -- 0x4745
; data inside code section at 0x4745 -- 0x4753
0x4745:     ff ff ff 84 c0 74 e4 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_4753 at 0x4753 -- 0x4754
; data inside code section at 0x4754 -- 0x4764
0x4754:     6c 24 2c 74 13 83 c5 10  89 6c 24 04 89 34 24 e8   |l$,t.....l$..4$.|
; dynamically linked function: _ZltRK4CInvS1_ at 0x4764 -- 0x4765
; data inside code section at 0x4765 -- 0x476c
0x4765:     ff ff ff 84 c0 74 78                               |.....tx         |
; function: function_476c at 0x476c -- 0x47f8
0x476c:     8b 87 10 03 00 00                  	mov eax, dword ptr [edi + 0x310]
0x4772:     3b 87 14 03 00 00                  	cmp eax, dword ptr [edi + 0x314]
0x4778:     0f 84 9c 00 00 00                  	je 0x481a <function_481a>
0x477e:     85 c0                              	test eax, eax
0x4780:     74 59                              	je 0x47db <function_476c+0x6f>
0x4782:     8b 94 24 34 01 00 00               	mov edx, dword ptr [esp + 0x134]
0x4789:     89 10                              	mov dword ptr [eax], edx
0x478b:     8b 94 24 38 01 00 00               	mov edx, dword ptr [esp + 0x138]
0x4792:     89 50 04                           	mov dword ptr [eax + 4], edx
0x4795:     8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
0x479c:     89 50 08                           	mov dword ptr [eax + 8], edx
0x479f:     8b 94 24 40 01 00 00               	mov edx, dword ptr [esp + 0x140]
0x47a6:     89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x47a9:     8b 94 24 44 01 00 00               	mov edx, dword ptr [esp + 0x144]
0x47b0:     89 50 10                           	mov dword ptr [eax + 0x10], edx
0x47b3:     8b 94 24 48 01 00 00               	mov edx, dword ptr [esp + 0x148]
0x47ba:     89 50 14                           	mov dword ptr [eax + 0x14], edx
0x47bd:     8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x47c4:     89 50 18                           	mov dword ptr [eax + 0x18], edx
0x47c7:     8b 94 24 50 01 00 00               	mov edx, dword ptr [esp + 0x150]
0x47ce:     89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x47d1:     8b 94 24 54 01 00 00               	mov edx, dword ptr [esp + 0x154]
0x47d8:     89 50 20                           	mov dword ptr [eax + 0x20], edx
0x47db:     83 c0 24                           	add eax, 0x24
0x47de:     89 87 10 03 00 00                  	mov dword ptr [edi + 0x310], eax
0x47e4:     8d 94 24 80 00 00 00               	lea edx, [esp + 0x80]
0x47eb:     89 14 24                           	mov dword ptr [esp], edx
0x47ee:     e8 ed e0 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x47f3:     e9 aa fd ff ff                     	jmp 0x45a2 <function_45a2>
; function: function_47f8 at 0x47f8 -- 0x4813
0x47f8:     81 c7 0c 03 00 00                  	add edi, 0x30c
0x47fe:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x4802:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4806:     89 3c 24                           	mov dword ptr [esp], edi
0x4809:     e8 42 fa 00 00                     	call 0x14250 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x480e:     e9 b1 fe ff ff                     	jmp 0x46c4
; function: function_4813 at 0x4813 -- 0x481a
0x4813:     31 c9                              	xor ecx, ecx
0x4815:     e9 f5 f6 ff ff                     	jmp 0x3f0f <function_3f0f>
; function: function_481a at 0x481a -- 0x4832
0x481a:     81 c7 0c 03 00 00                  	add edi, 0x30c
0x4820:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x4824:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x4828:     89 3c 24                           	mov dword ptr [esp], edi
0x482b:     e8 20 fa 00 00                     	call 0x14250 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_>
0x4830:     eb b2                              	jmp 0x47e4
; function: function_4832 at 0x4832 -- 0x483a
0x4832:     a1 ec a0 00 00                     	mov eax, dword ptr [0xa0ec] ; "node->nSendSize == 0"
0x4837:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x483a -- 0x483b
0x483a:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x483b -- 0x483c
; data inside code section at 0x483c -- 0x483e
0x483c:     ff ff                                              |..              |
; function: function_483e at 0x483e -- 0x4844
0x483e:     ff a1 f4 a0 00 00                  	jmp dword ptr [ecx + 0xa0f4]
; function: function_4844 at 0x4844 -- 0x486b
0x4844:     8d 50 04                           	lea edx, [eax + 4]
0x4847:     89 15 f4 a0 00 00                  	mov dword ptr [0xa0f4], edx ; "endSize == 0"
0x484d:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0x4850:     8d 90 e4 01 00 00                  	lea edx, [eax + 0x1e4]
0x4856:     a3 ec a0 00 00                     	mov dword ptr [0xa0ec], eax ; "node->nSendSize == 0"
0x485b:     89 15 f0 a0 00 00                  	mov dword ptr [0xa0f0], edx ; "->nSendSize == 0"
0x4861:     a3 e8 a0 00 00                     	mov dword ptr [0xa0e8], eax ; " 0"
0x4866:     e9 58 f6 ff ff                     	jmp 0x3ec3 <function_3ec3>
; function: function_486b at 0x486b -- 0x4872
0x486b:     31 c0                              	xor eax, eax
0x486d:     e9 79 f9 ff ff                     	jmp 0x41eb <function_41eb>
; function: function_4872 at 0x4872 -- 0x4879
0x4872:     31 d2                              	xor edx, edx
0x4874:     e9 2c f8 ff ff                     	jmp 0x40a5 <function_40a5>
; data inside code section at 0x4879 -- 0x487a
0x4879:     89                                                 |.               |
; function: function_487a at 0x487a -- 0x487b
0x487a:     c3                                 	ret 
; function: function_487b at 0x487b -- 0x487c
; data inside code section at 0x487c -- 0x488b
0x487c:     44 24 70 89 04 24 e8 59  e0 00 00 89 1c 24 e8      |D$p..$.Y.....$. |
; dynamically linked function: _Unwind_Resume at 0x488b -- 0x488c
; data inside code section at 0x488c -- 0x488f
0x488c:     ff ff ff                                           |...             |
; function: function_488f at 0x488f -- 0x4890
; function: function_4890 at 0x4890 -- 0x4891
0x4890:     c3                                 	ret 
; data inside code section at 0x4891 -- 0x48a0
0x4891:     8d 84 24 80 00 00 00 89  04 24 e8 40 e0 00 00      |..$......$.@... |
; function: function_48a0 at 0x48a0 -- 0x48a1
; data inside code section at 0x48a1 -- 0x48ac
0x48a1:     54 24 70 89 14 24 e8 34  e0 00 00                  |T$p..$.4...     |
; function: function_48ac at 0x48ac -- 0x48ad
; data inside code section at 0x48ad -- 0x48bc
0x48ad:     44 24 78 89 04 24 e8 28  e0 00 00 89 1c 24 e8      |D$x..$.(.....$. |
; dynamically linked function: _Unwind_Resume at 0x48bc -- 0x48bd
; data inside code section at 0x48bd -- 0x48c0
0x48bd:     ff ff ff                                           |...             |
; function: function_48c0 at 0x48c0 -- 0x48c2
0x48c0:     eb cd                              	jmp 0x488f <function_488f>
; function: function_48c2 at 0x48c2 -- 0x48c6
0x48c2:     89 c3                              	mov ebx, eax
0x48c4:     eb da                              	jmp 0x48a0 <function_48a0>
; function: function_48c6 at 0x48c6 -- 0x48ca
0x48c6:     89 c3                              	mov ebx, eax
0x48c8:     eb e2                              	jmp 0x48ac <function_48ac>
; function: function_48ca at 0x48ca -- 0x48d0
0x48ca:     8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x48d0 -- 0x48d1
0x48d0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x48d1 -- 0x48d2
; data inside code section at 0x48d2 -- 0x48d5
0x48d2:     ff ff ff                                           |...             |
; function: function_48d5 at 0x48d5 -- 0x48f1
0x48d5:     8d 84 24 08 01 00 00               	lea eax, [esp + 0x108]
0x48dc:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x48e0:     c7 04 24 e0 a0 00 00               	mov dword ptr [esp], 0xa0e0 ; "ffset == 0"
0x48e7:     e8 14 74 01 00                     	call 0x1bd00 <_ZNSt5dequeISt4pairIx4CInvESaIS2_EE16_M_push_back_auxERKS2_>
0x48ec:     e9 aa fb ff ff                     	jmp 0x449b
; function: function_48f1 at 0x48f1 -- 0x4922
0x48f1:     89 c3                              	mov ebx, eax
0x48f3:     8d 84 24 ec 00 00 00               	lea eax, [esp + 0xec]
0x48fa:     89 04 24                           	mov dword ptr [esp], eax
0x48fd:     e8 be dc 00 00                     	call 0x125c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x4902:     8d 84 24 ac 00 00 00               	lea eax, [esp + 0xac]
0x4909:     89 04 24                           	mov dword ptr [esp], eax
0x490c:     e8 af dc 00 00                     	call 0x125c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x4911:     8d 44 24 54                        	lea eax, [esp + 0x54]
0x4915:     89 04 24                           	mov dword ptr [esp], eax
0x4918:     e8 a3 dc 00 00                     	call 0x125c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x491d:     e9 59 ff ff ff                     	jmp 0x487b <function_487b>
; function: function_4922 at 0x4922 -- 0x4926
0x4922:     89 c3                              	mov ebx, eax
0x4924:     eb dc                              	jmp 0x4902
; function: function_4926 at 0x4926 -- 0x492a
0x4926:     89 c3                              	mov ebx, eax
0x4928:     eb e7                              	jmp 0x4911
; data inside code section at 0x492a -- 0x4930
0x492a:     8d b6 00 00 00 00                                  |......          |
; function: _Z16RelayTransactionRK12CTransactionRK7uint256 at 0x4930 -- 0x49a4
0x4930:     83 ec 5c                           	sub esp, 0x5c
0x4933:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x4937:     89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x493b:     8d 5c 24 20                        	lea ebx, [esp + 0x20]
0x493f:     89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x4943:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x4947:     89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x494b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x494f:     89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x4953:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4959:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x495d:     31 c0                              	xor eax, eax
0x495f:     c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x4967:     c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x496f:     c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x4977:     c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x497f:     c7 44 24 34 01 00 00 00            	mov dword ptr [esp + 0x34], 1
0x4987:     c7 44 24 38 80 38 01 00            	mov dword ptr [esp + 0x38], 0x13880
0x498f:     66 c7 44 24 30 00 00               	mov word ptr [esp + 0x30], 0
0x4996:     66 c7 44 24 32 05 00               	mov word ptr [esp + 0x32], 5
0x499d:     c7 04 24 10 27 00 00               	mov dword ptr [esp], 0x2710
; data inside code section at 0x49a4 -- 0x49a5
0x49a4:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x49a5 -- 0x49a6
; data inside code section at 0x49a6 -- 0x49c5
0x49a6:     ff ff ff 8b 74 24 20 89  c5 8b 44 24 28 85 f6 74   |....t$ ...D$(..t|
0x49b6:     1a 29 f0 89 44 24 04 8d  5c 24 20 89 34 24 e8      |.)..D$..\$ .4$. |
; dynamically linked function: OPENSSL_cleanse at 0x49c5 -- 0x49c6
; data inside code section at 0x49c6 -- 0x49cd
0x49c6:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x49cd -- 0x49ce
; data inside code section at 0x49ce -- 0x4a2d
0x49ce:     ff ff ff 8b 44 24 38 8d  5c 24 20 89 6c 24 20 89   |....D$8.\$ .l$ .|
0x49de:     6c 24 24 81 c5 10 27 00  00 89 6c 24 28 89 44 24   |l$$...'...l$(.D$|
0x49ee:     0c 8b 44 24 34 89 5c 24  04 89 3c 24 89 44 24 08   |..D$4.\$..<$.D$.|
0x49fe:     e8 ad 4a 01 00 8b 44 24  1c 89 5c 24 08 89 3c 24   |..J...D$..\$..<$|
0x4a0e:     89 44 24 04 e8 b9 f3 ff  ff 8b 5c 24 20 8b 44 24   |.D$.......\$ .D$|
0x4a1e:     28 85 db 74 16 29 d8 89  44 24 04 89 1c 24 e8      |(..t.)..D$...$. |
; dynamically linked function: OPENSSL_cleanse at 0x4a2d -- 0x4a2e
; data inside code section at 0x4a2e -- 0x4a35
0x4a2e:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x4a35 -- 0x4a36
; data inside code section at 0x4a36 -- 0x4a38
0x4a36:     ff ff                                              |..              |
; function: function_4a38 at 0x4a38 -- 0x4a6c
0x4a38:     ff 8b 44 24 3c 65                  	dec dword ptr [ebx + 0x653c2444]
0x4a3e:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x4a44:     75 14                              	jne 0x4a5a <function_4a38+0x22>
0x4a46:     8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x4a4a:     8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x4a4e:     8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x4a52:     8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x4a56:     83 c4 5c                           	add esp, 0x5c
0x4a59:     c3                                 	ret 
0x4a5a:     e8 fc ff ff ff                     	call 0x4a5b
0x4a5f:     89 c6                              	mov esi, eax
0x4a61:     89 1c 24                           	mov dword ptr [esp], ebx
0x4a64:     e8 57 db 00 00                     	call 0x125c0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev>
0x4a69:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4a6c -- 0x4a6d
0x4a6c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x4a6d -- 0x4a6e
; data inside code section at 0x4a6e -- 0x4a80
0x4a6e:     ff ff ff 90 8d b4 26 00  00 00 00 8d bc 27 00 00   |......&......'..|
0x4a7e:     00 00                                              |..              |
; function: _ZN5CNode11PushVersionEv at 0x4a80 -- 0x4aad
0x4a80:     55                                 	push ebp
0x4a81:     57                                 	push edi
0x4a82:     56                                 	push esi
0x4a83:     53                                 	push ebx
0x4a84:     81 ec ec 00 00 00                  	sub esp, 0xec
0x4a8a:     8b 9c 24 00 01 00 00               	mov ebx, dword ptr [esp + 0x100]
0x4a91:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x4a97:     89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0x4a9e:     31 c0                              	xor eax, eax
0x4aa0:     80 bb ce 01 00 00 00               	cmp byte ptr [ebx + 0x1ce], 0
0x4aa7:     0f 84 3b 06 00 00                  	je 0x50e8 <function_50e8>
; data inside code section at 0x4aad -- 0x4aae
0x4aad:     e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0x4aae -- 0x4aaf
; data inside code section at 0x4aaf -- 0x4ac0
0x4aaf:     ff ff ff 89 c6 89 d7 8d  ab 84 01 00 00 89 2c 24   |..............,$|
0x4abf:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x4ac0 -- 0x4ac1
; data inside code section at 0x4ac1 -- 0x4acc
0x4ac1:     ff ff ff 84 c0 74 10 89  2c 24 e8                  |.....t..,$.     |
; dynamically linked function: _Z7IsProxyRK8CNetAddr at 0x4acc -- 0x4acd
; data inside code section at 0x4acd -- 0x4adb
0x4acd:     ff ff ff 84 c0 0f 84 c9  06 00 00 8d 84 24         |.............$  |
; function: function_4adb at 0x4adb -- 0x4ade
0x4adb:     ca 00 00                           	retf 0
; data inside code section at 0x4ade -- 0x4afb
0x4ade:     00 89 04 24 c7 44 24 0c  00 00 00 00 c7 44 24 08   |...$.D$......D$.|
0x4aee:     00 00 00 00 c7 44 24 04  56 a0 00 00 e8            |.....D$.V....   |
; dynamically linked function: _ZN8CServiceC1EPKcib at 0x4afb -- 0x4afc
; data inside code section at 0x4afc -- 0x4b02
0x4afc:     ff ff ff 8b 84 24                                  |.....$          |
; function: function_4b02 at 0x4b02 -- 0x4b05
0x4b02:     ca 00 00                           	retf 0
; data inside code section at 0x4b05 -- 0x4b54
0x4b05:     00 c7 44 24 18 01 00 00  00 c7 44 24 1c 00 00 00   |..D$......D$....|
0x4b15:     00 89 44 24 04 8b 84 24  ce 00 00 00 89 44 24 08   |..D$...$.....D$.|
0x4b25:     8b 84 24 d2 00 00 00 89  44 24 0c 8b 84 24 d6 00   |..$.....D$...$..|
0x4b35:     00 00 89 44 24 10 0f b7  84 24 da 00 00 00 66 89   |...D$....$....f.|
0x4b45:     44 24 14 8d 44 24 60 89  44 24 28 89 04 24 e8      |D$..D$`.D$(..$. |
; dynamically linked function: _ZN8CAddressC1E8CServicey at 0x4b54 -- 0x4b55
; data inside code section at 0x4b55 -- 0x4b58
0x4b55:     ff ff ff                                           |...             |
; function: function_4b58 at 0x4b58 -- 0x4b59
; data inside code section at 0x4b59 -- 0x4b7e
0x4b59:     94 24 88 00 00 00 89 14  24 89 6c 24 04 e8 25 c5   |.$......$.l$..%.|
0x4b69:     ff ff 83 ec 04 c7 44 24  04 08 00 00 00 c7 04 24   |......D$.......$|
0x4b79:     40 a2 00 00 e8                                     |@....           |
; dynamically linked function: RAND_bytes at 0x4b7e -- 0x4b7f
; data inside code section at 0x4b7f -- 0x4b8e
0x4b7f:     ff ff ff 8d 44 24 50 89  6c 24 04 89 04 24 e8      |....D$P.l$...$. |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x4b8e -- 0x4b8f
; data inside code section at 0x4b8f -- 0x4bad
0x4b8f:     ff ff ff 83 ec 04 8b 54  24 50 8d 6c 24 4c 8b 44   |.......T$P.l$L.D|
0x4b9f:     24 28 89 2c 24 89 54 24  20 89 44 24 04 e8         |$(.,$.T$ .D$..  |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x4bad -- 0x4bae
; data inside code section at 0x4bae -- 0x4bcf
0x4bae:     ff ff ff 83 ec 04 8b 54  24 4c 8d 84 24 88 00 00   |.......T$L..$...|
0x4bbe:     00 89 44 24 04 89 54 24  2c 8d 54 24 48 89 14 24   |..D$..T$,.T$H..$|
0x4bce:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x4bcf -- 0x4bd0
; data inside code section at 0x4bd0 -- 0x4bfe
0x4bd0:     ff ff ff 83 ec 04 8b 44  24 20 8b 54 24 2c c7 44   |.......D$ .T$,.D|
0x4be0:     24 04 80 38 01 00 c7 04  24 84 dc 00 00 89 44 24   |$..8....$.....D$|
0x4bf0:     14 8b 44 24 48 89 54 24  10 89 44 24 0c a1         |..D$H.T$..D$..  |
; dynamically linked function: nBestHeight at 0x4bfe -- 0x4c06
; data inside code section at 0x4c06 -- 0x4c07
0x4c06:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x4c07 -- 0x4c08
; data inside code section at 0x4c08 -- 0x4c1b
0x4c08:     ff ff ff 8d 44 24 48 89  04 24 e8 fc ff ff ff 89   |....D$H..$......|
0x4c18:     2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x4c1b -- 0x4c1c
; data inside code section at 0x4c1c -- 0x4c27
0x4c1c:     ff ff ff 8d 54 24 50 89  14 24 e8                  |....T$P..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x4c27 -- 0x4c28
; data inside code section at 0x4c28 -- 0x4c5b
0x4c28:     ff ff ff 8d 44 24 34 8d  54 24 54 c7 44 24 34 00   |....D$4.T$T.D$4.|
0x4c38:     00 00 00 c7 44 24 38 00  00 00 00 c7 44 24 3c 00   |....D$8.....D$<.|
0x4c48:     00 00 00 89 44 24 0c c7  44 24 08 60 90 0f 00 c7   |....D$..D$.`....|
0x4c58:     44 24 04                                           |D$.             |
; dynamically linked function: CLIENT_NAME at 0x4c5b -- 0x4c62
; data inside code section at 0x4c62 -- 0x4c63
0x4c62:     e8                                                 |.               |
; dynamically linked function: _Z16FormatSubVersionRKSsiRKSt6vectorISsSaISsEE at 0x4c63 -- 0x4c64
; data inside code section at 0x4c64 -- 0x4c71
0x4c64:     ff ff ff 83 ec 04 8d 6b  60 89 2c 24 e8            |.......k`.,$.   |
; dynamically linked function: pthread_mutex_lock at 0x4c71 -- 0x4c72
; data inside code section at 0x4c72 -- 0x4c89
0x4c72:     ff ff ff 85 c0 0f 85 d4  06 00 00 31 c0 80 bb a8   |...........1....|
0x4c82:     00 00 00 00 74 18 e8                               |....t..         |
; dynamically linked function: pthread_self at 0x4c89 -- 0x4c8a
; data inside code section at 0x4c8a -- 0x4c8c
0x4c8a:     ff ff                                              |..              |
; function: function_4c8c at 0x4c8c -- 0x4caf
0x4c8c:     ff 89 c2 b8 01 00                  	dec dword ptr [ecx + 0x1b8c2]
0x4c92:     00 00                              	add byte ptr [eax], al
0x4c94:     3b 93 ac 00 00 00                  	cmp edx, dword ptr [ebx + 0xac]
0x4c9a:     0f 84 f5 05 00 00                  	je 0x5295 <function_5295>
0x4ca0:     8d 55 18                           	lea edx, [ebp + 0x18]
0x4ca3:     89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0x4ca7:     89 d6                              	mov esi, edx
0x4ca9:     89 7c 24 24                        	mov dword ptr [esp + 0x24], edi
0x4cad:     eb 1c                              	jmp 0x4ccb <function_4ccb>
; data inside code section at 0x4caf -- 0x4cb0
0x4caf:     90                                                 |.               |
; function: function_4cb0 at 0x4cb0 -- 0x4cb7
0x4cb0:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x4cb4:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x4cb7 -- 0x4cb8
0x4cb7:     e8                                                 |.               |
; dynamically linked function: pthread_cond_wait at 0x4cb8 -- 0x4cb9
; data inside code section at 0x4cb9 -- 0x4ccb
0x4cb9:     ff ff ff 85 c0 0f 85 f4  05 00 00 0f b6 83 a8 00   |................|
0x4cc9:     00 00                                              |..              |
; function: function_4ccb at 0x4ccb -- 0x4ce5
0x4ccb:     84 c0                              	test al, al
0x4ccd:     75 e1                              	jne 0x4cb0 <function_4cb0>
0x4ccf:     83 83 b0 00 00 00 01               	add dword ptr [ebx + 0xb0], 1
0x4cd6:     8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0x4cda:     c6 83 a8 00 00 00 01               	mov byte ptr [ebx + 0xa8], 1
0x4ce1:     8b 7c 24 24                        	mov edi, dword ptr [esp + 0x24]
; data inside code section at 0x4ce5 -- 0x4ce6
0x4ce5:     e8                                                 |.               |
; dynamically linked function: pthread_self at 0x4ce6 -- 0x4ce7
; data inside code section at 0x4ce7 -- 0x4cf4
0x4ce7:     ff ff ff 89 83 ac 00 00  00 89 2c 24 e8            |..........,$.   |
; dynamically linked function: pthread_mutex_unlock at 0x4cf4 -- 0x4cf5
; data inside code section at 0x4cf5 -- 0x4d2a
0x4cf5:     ff ff ff 85 c0 0f 85 ac  05 00 00 8b 43 10 2b 43   |............C.+C|
0x4d05:     0c 3b 43 18 0f 85 f2 05  00 00 8d 84 24 b0 00 00   |.;C.........$...|
0x4d15:     00 c7 44 24 08 00 00 00  00 c7 44 24 04 9f a2 00   |..D$......D$....|
0x4d25:     00 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZN14CMessageHeaderC1EPKcj at 0x4d2a -- 0x4d2b
; data inside code section at 0x4d2b -- 0x4de5
0x4d2b:     ff ff ff 8b 43 10 8d 94  24 b4 00 00 00 8d 6b 0c   |....C...$.....k.|
0x4d3b:     89 54 24 0c 8d 94 24 b0  00 00 00 c6 44 24 10 00   |.T$...$.....D$..|
0x4d4b:     89 54 24 08 89 44 24 04  89 2c 24 e8 e5 fe 00 00   |.T$..D$..,$.....|
0x4d5b:     8b 53 10 8d 84 24 c0 00  00 00 89 44 24 0c 8d 84   |.S...$.....D$...|
0x4d6b:     24 b4 00 00 00 c6 44 24  10 00 89 44 24 08 89 54   |$.....D$...D$..T|
0x4d7b:     24 04 89 2c 24 e8 bb fe  00 00 8b 84 24 c0 00 00   |$..,$.......$...|
0x4d8b:     00 8d 54 24 5c 89 44 24  58 8b 43 10 89 54 24 0c   |..T$\.D$X.C..T$.|
0x4d9b:     8d 54 24 58 c6 44 24 10  00 89 54 24 08 89 44 24   |.T$X.D$...T$..D$|
0x4dab:     04 89 2c 24 e8 8c fe 00  00 8b 84 24 c4 00 00 00   |..,$.......$....|
0x4dbb:     8d 54 24 5c 89 44 24 58  8b 43 10 89 54 24 0c 8d   |.T$\.D$X.C..T$..|
0x4dcb:     54 24 58 c6 44 24 10 00  89 54 24 08 89 44 24 04   |T$X.D$...T$..D$.|
0x4ddb:     89 2c 24 e8 5d fe 00 00  80 3d                     |.,$.]....=      |
; dynamically linked function: fDebug at 0x4de5 -- 0x5034
; data inside code section at 0x5034 -- 0x5035
0x5034:     a1                                                 |.               |
; dynamically linked function: nBestHeight at 0x5035 -- 0x5095
; data inside code section at 0x5095 -- 0x5096
0x5095:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x5096 -- 0x5097
; data inside code section at 0x5097 -- 0x50a5
0x5097:     ff ff ff 8b 74 24 38 8b  5c 24 34 39 de 74         |....t$8.\$49.t  |
; function: function_50a5 at 0x50a5 -- 0x50ad
0x50a5:     15 66 90 89 1c                     	adc eax, 0x1c899066
0x50aa:     24 83                              	and al, 0x83
0x50ac:     c3                                 	ret 
; data inside code section at 0x50ad -- 0x50af
0x50ad:     04 e8                                              |..              |
; dynamically linked function: _ZNSsD1Ev at 0x50af -- 0x50b0
; data inside code section at 0x50b0 -- 0x50c3
0x50b0:     ff ff ff 39 de 75 f1 8b  5c 24 34 85 db 74 08 89   |...9.u..\$4..t..|
0x50c0:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x50c3 -- 0x50c4
; data inside code section at 0x50c4 -- 0x50c6
0x50c4:     ff ff                                              |..              |
; function: function_50c6 at 0x50c6 -- 0x50e6
0x50c6:     ff 8b 94 24 dc 00                  	dec dword ptr [ebx + 0xdc2494]
0x50cc:     00 00                              	add byte ptr [eax], al
0x50ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x50d5:     0f 85 71 02 00 00                  	jne 0x534c <function_534c>
0x50db:     81 c4 ec 00 00 00                  	add esp, 0xec
0x50e1:     5b                                 	pop ebx
0x50e2:     5e                                 	pop esi
0x50e3:     5f                                 	pop edi
0x50e4:     5d                                 	pop ebp
0x50e5:     c3                                 	ret 
; data inside code section at 0x50e6 -- 0x50e8
0x50e6:     66 90                                              |f.              |
; function: function_50e8 at 0x50e8 -- 0x50e9
; dynamically linked function: _Z7GetTimev at 0x50e9 -- 0x50ea
; data inside code section at 0x50ea -- 0x50ec
0x50ea:     ff ff                                              |..              |
; function: function_50ec at 0x50ec -- 0x50f8
0x50ec:     ff 89 c6 89 d7 e9                  	dec dword ptr [ecx - 0x1628763a]
0x50f2:     c0 f9 ff                           	sar cl, 0xff
0x50f5:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_50f8 at 0x50f8 -- 0x5121
0x50f8:     0f 8c 86 02 00 00                  	jl 0x5384 <function_5384>
0x50fe:     8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x5101:     01 c2                              	add edx, eax
0x5103:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x5108:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x510c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x5110:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x5114:     89 2c 24                           	mov dword ptr [esp], ebp
0x5117:     e8 24 fb 00 00                     	call 0x14c40 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x511c:     e9 13 ff ff ff                     	jmp 0x5034
; data inside code section at 0x5121 -- 0x5128
0x5121:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_5128 at 0x5128 -- 0x5164
0x5128:     a8 04                              	test al, 4
0x512a:     0f 85 0d fe ff ff                  	jne 0x4f3d
0x5130:     8b 84 24 a4 00 00 00               	mov eax, dword ptr [esp + 0xa4]
0x5137:     8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x513b:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x513f:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x5142:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5146:     8d 54 24 58                        	lea edx, [esp + 0x58]
0x514a:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x514f:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x5153:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5157:     89 2c 24                           	mov dword ptr [esp], ebp
0x515a:     e8 e1 fa 00 00                     	call 0x14c40 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x515f:     e9 d9 fd ff ff                     	jmp 0x4f3d
; data inside code section at 0x5164 -- 0x5168
0x5164:     8d 74 26 00                                        |.t&.            |
; function: function_5168 at 0x5168 -- 0x51a1
0x5168:     a8 04                              	test al, 4
0x516a:     0f 85 29 fd ff ff                  	jne 0x4e99
0x5170:     8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x5174:     8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x5178:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x517c:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x517f:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5183:     8d 54 24 58                        	lea edx, [esp + 0x58]
0x5187:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x518c:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x5190:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5194:     89 2c 24                           	mov dword ptr [esp], ebp
0x5197:     e8 a4 fa 00 00                     	call 0x14c40 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x519c:     e9 f8 fc ff ff                     	jmp 0x4e99
; function: function_51a1 at 0x51a1 -- 0x5218
0x51a1:     8b 83 84 01 00 00                  	mov eax, dword ptr [ebx + 0x184]
0x51a7:     8d 54 24 60                        	lea edx, [esp + 0x60]
0x51ab:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x51af:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x51b3:     8b 83 88 01 00 00                  	mov eax, dword ptr [ebx + 0x188]
0x51b9:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x51bd:     8b 83 8c 01 00 00                  	mov eax, dword ptr [ebx + 0x18c]
0x51c3:     89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x51c7:     8b 83 90 01 00 00                  	mov eax, dword ptr [ebx + 0x190]
0x51cd:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x51d1:     8b 83 94 01 00 00                  	mov eax, dword ptr [ebx + 0x194]
0x51d7:     89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x51db:     8b 83 98 01 00 00                  	mov eax, dword ptr [ebx + 0x198]
0x51e1:     89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x51e5:     8b 83 9c 01 00 00                  	mov eax, dword ptr [ebx + 0x19c]
0x51eb:     89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x51ef:     8b 83 a0 01 00 00                  	mov eax, dword ptr [ebx + 0x1a0]
0x51f5:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x51f9:     8b 83 a4 01 00 00                  	mov eax, dword ptr [ebx + 0x1a4]
0x51ff:     89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x5206:     8b 83 a8 01 00 00                  	mov eax, dword ptr [ebx + 0x1a8]
0x520c:     89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0x5213:     e9 40 f9 ff ff                     	jmp 0x4b58 <function_4b58>
; data inside code section at 0x5218 -- 0x5228
0x5218:     c7 44 24 04 9f a2 00 00  c7 04 24 a7 a2 00 00 e8   |.D$.......$.....|
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5228 -- 0x5229
; data inside code section at 0x5229 -- 0x522c
0x5229:     ff ff ff                                           |...             |
; function: function_522c at 0x522c -- 0x5231
0x522c:     e9 bf fb ff ff                     	jmp 0x4df0
; data inside code section at 0x5231 -- 0x5238
0x5231:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_5238 at 0x5238 -- 0x5265
0x5238:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x523b:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x523f:     8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x5243:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5247:     8d 54 24 58                        	lea edx, [esp + 0x58]
0x524b:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x5250:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x5254:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5258:     89 2c 24                           	mov dword ptr [esp], ebp
0x525b:     e8 e0 f9 00 00                     	call 0x14c40 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x5260:     e9 cb fe ff ff                     	jmp 0x5130 <function_5130>
; data inside code section at 0x5265 -- 0x5268
0x5265:     8d 76 00                                           |.v.             |
; function: function_5268 at 0x5268 -- 0x5295
0x5268:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x526b:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x526f:     8d 54 24 5c                        	lea edx, [esp + 0x5c]
0x5273:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x5277:     8d 54 24 58                        	lea edx, [esp + 0x58]
0x527b:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x5280:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x5284:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5288:     89 2c 24                           	mov dword ptr [esp], ebp
0x528b:     e8 b0 f9 00 00                     	call 0x14c40 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag>
0x5290:     e9 db fe ff ff                     	jmp 0x5170 <function_5170>
; function: function_5295 at 0x5295 -- 0x529f
0x5295:     83 83 b0 00 00 00 01               	add dword ptr [ebx + 0xb0], 1
0x529c:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x529f -- 0x52a0
0x529f:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x52a0 -- 0x52a1
; data inside code section at 0x52a1 -- 0x52d8
0x52a1:     ff ff ff 85 c0 0f 84 54  fa ff ff e8 f5 8d 00 00   |.......T........|
0x52b1:     8d b4 26 00 00 00 00 c7  44 24 0c e0 78 02 00 c7   |..&.....D$..x...|
0x52c1:     44 24 08 85 00 00 00 c7  44 24 04 98 d5 00 00 c7   |D$......D$......|
0x52d1:     04 24 0a a0 00 00 e8                               |.$.....         |
; dynamically linked function: __assert_fail at 0x52d8 -- 0x52d9
; data inside code section at 0x52d9 -- 0x52e2
0x52d9:     ff ff ff 89 c6 89 2c 24  e8                        |......,$.       |
; dynamically linked function: pthread_mutex_unlock at 0x52e2 -- 0x52e3
; data inside code section at 0x52e3 -- 0x52e9
0x52e3:     ff ff ff 85 c0 75                                  |.....u          |
; function: function_52e9 at 0x52e9 -- 0x52ec
0x52e9:     c2 89 f0                           	ret 0xf089
; function: function_52ec at 0x52ec -- 0x52ed
; data inside code section at 0x52ed -- 0x52f0
0x52ed:     04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x52f0 -- 0x52f1
; data inside code section at 0x52f1 -- 0x52fd
0x52f1:     ff ff ff 89 1c 24 e8 94  b7 00 00 e8               |.....$......    |
; dynamically linked function: __cxa_rethrow at 0x52fd -- 0x52fe
; data inside code section at 0x52fe -- 0x5321
0x52fe:     ff ff ff c7 44 24 0c 40  7a 02 00 c7 44 24 08 90   |....D$.@z...D$..|
0x530e:     01 00 00 c7 44 24 04 5b  a2 00 00 c7 04 24 8c a2   |....D$.[.....$..|
0x531e:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x5321 -- 0x5322
; data inside code section at 0x5322 -- 0x5326
0x5322:     ff ff ff 89                                        |....            |
; function: function_5326 at 0x5326 -- 0x5327
0x5326:     c3                                 	ret 
; data inside code section at 0x5327 -- 0x5328
0x5327:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x5328 -- 0x5329
; data inside code section at 0x5329 -- 0x5334
0x5329:     ff ff ff 8d 44 24 54 89  04 24 e8                  |....D$T..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x5334 -- 0x5335
; data inside code section at 0x5335 -- 0x5338
0x5335:     ff ff ff                                           |...             |
; function: function_5338 at 0x5338 -- 0x5339
; data inside code section at 0x5339 -- 0x534c
0x5339:     44 24 34 89 04 24 e8 ec  98 00 00 89 1c 24 e8 fc   |D$4..$.......$..|
0x5349:     ff ff ff                                           |...             |
; function: function_534c at 0x534c -- 0x534d
; dynamically linked function: __stack_chk_fail at 0x534d -- 0x534e
; data inside code section at 0x534e -- 0x5351
0x534e:     ff ff ff                                           |...             |
; function: function_5351 at 0x5351 -- 0x535a
0x5351:     e8 1c 8d 00 00                     	call 0xe072 <_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25>
0x5356:     89 c3                              	mov ebx, eax
0x5358:     eb de                              	jmp 0x5338 <function_5338>
; data inside code section at 0x535a -- 0x535b
0x535a:     89                                                 |.               |
; function: function_535b at 0x535b -- 0x535c
0x535b:     c3                                 	ret 
; data inside code section at 0x535c -- 0x5364
0x535c:     8d 44 24 48 89 04 24 e8                            |.D$H..$.        |
; dynamically linked function: _ZNSsD1Ev at 0x5364 -- 0x5365
; data inside code section at 0x5365 -- 0x5368
0x5365:     ff ff ff                                           |...             |
; function: function_5368 at 0x5368 -- 0x5369
; data inside code section at 0x5369 -- 0x536c
0x5369:     2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsD1Ev at 0x536c -- 0x536d
; data inside code section at 0x536d -- 0x5370
0x536d:     ff ff ff                                           |...             |
; function: function_5370 at 0x5370 -- 0x5384
0x5370:     8d 54 24 50                        	lea edx, [esp + 0x50]
0x5374:     89 14 24                           	mov dword ptr [esp], edx
0x5377:     e8 fc ff ff ff                     	call 0x5378
0x537c:     89 1c 24                           	mov dword ptr [esp], ebx
0x537f:     e8 fc ff ff ff                     	call 0x5380
; function: function_5384 at 0x5384 -- 0x538d
0x5384:     e8 61 91 00 00                     	call 0xe4ea <_ZN11CDataStream5writeEPKci.part.1144>
0x5389:     89 c3                              	mov ebx, eax
0x538b:     eb e3                              	jmp 0x5370 <function_5370>
; data inside code section at 0x538d -- 0x5390
0x538d:     8d 76 00                                           |.v.             |
; function: function_5390 at 0x5390 -- 0x5395
0x5390:     e9 57 ff ff ff                     	jmp 0x52ec <function_52ec>
; function: function_5395 at 0x5395 -- 0x5399
0x5395:     89 c3                              	mov ebx, eax
0x5397:     eb cf                              	jmp 0x5368 <function_5368>
; data inside code section at 0x5399 -- 0x53a0
0x5399:     8d b4 26 00 00 00 00                               |..&....         |
; function: _Z9StartNodeRN5boost12thread_groupE at 0x53a0 -- 0x541b
0x53a0:     55                                 	push ebp
0x53a1:     57                                 	push edi
0x53a2:     56                                 	push esi
0x53a3:     53                                 	push ebx
0x53a4:     81 ec 3c 01 00 00                  	sub esp, 0x13c
0x53aa:     8b 35 30 a3 00 00                  	mov esi, dword ptr [0xa330] ; "ncon"
0x53b0:     8b 84 24 50 01 00 00               	mov eax, dword ptr [esp + 0x150]
0x53b7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x53be:     89 94 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], edx
0x53c5:     31 d2                              	xor edx, edx
0x53c7:     85 f6                              	test esi, esi
0x53c9:     89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x53cd:     0f 84 dd 04 00 00                  	je 0x58b0 <function_58b0>
0x53d3:     8b 1d 38 a3 00 00                  	mov ebx, dword ptr [0xa338] ; "hand"
0x53d9:     85 db                              	test ebx, ebx
0x53db:     0f 84 4f 05 00 00                  	je 0x5930 <function_5930>
0x53e1:     80 3d 40 9e 00 00 00               	cmp byte ptr [0x9e40], 0
0x53e8:     0f 85 2a 03 00 00                  	jne 0x5718 <function_5718>
0x53ee:     8d 84 24 de 00 00 00               	lea eax, [esp + 0xde]
0x53f5:     8d 9c 24 c4 00 00 00               	lea ebx, [esp + 0xc4]
0x53fc:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x5400:     c7 44 24 04 f5 a2 00 00            	mov dword ptr [esp + 4], 0xa2f5 ; "-dnsseed"
0x5408:     89 1c 24                           	mov dword ptr [esp], ebx
0x540b:     e8 fc ff ff ff                     	call 0x540c
0x5410:     c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x5418:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x541b -- 0x541c
0x541b:     e8                                                 |.               |
; dynamically linked function: _Z10GetBoolArgRKSsb at 0x541c -- 0x541d
; data inside code section at 0x541d -- 0x5426
0x541d:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x5426 -- 0x5427
; data inside code section at 0x5427 -- 0x5470
0x5427:     ff ff ff 89 f0 84 c0 0f  84 cc 02 00 00 8b 54 24   |..............T$|
0x5437:     4c c7 44 24 54 60 d3 00  00 c7 44 24 58 14 a3 00   |L.D$T`....D$X...|
0x5447:     00 c7 44 24 5c 60 2a 00  00 c7 44 24 04 60 d3 00   |..D$\`*...D$.`..|
0x5457:     00 c7 44 24 08 14 a3 00  00 c7 44 24 0c 60 2a 00   |..D$......D$.`*.|
0x5467:     00 89 14 24 e8 90 de 00  00                        |...$.....       |
; function: function_5470 at 0x5470 -- 0x5471
; data inside code section at 0x5471 -- 0x548e
0x5471:     84 24 df 00 00 00 8d 9c  24 c8 00 00 00 89 44 24   |.$......$.....D$|
0x5481:     08 c7 44 24 04 1c a3 00  00 89 1c 24 e8            |..D$.......$.   |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x548e -- 0x548f
; data inside code section at 0x548f -- 0x549e
0x548f:     ff ff ff c7 44 24 04 00  00 00 00 89 1c 24 e8      |....D$.......$. |
; dynamically linked function: _Z10GetBoolArgRKSsb at 0x549e -- 0x549f
; data inside code section at 0x549f -- 0x54b8
0x549f:     ff ff ff 0f b6 c0 89 04  24 e8 03 b2 ff ff 89 1c   |........$.......|
0x54af:     24 8d ac 24 cc 00 00 00  e8                        |$..$.....       |
; dynamically linked function: _ZNSsD1Ev at 0x54b8 -- 0x54b9
; data inside code section at 0x54b9 -- 0x55d3
0x54b9:     ff ff ff 8b 4c 24 4c c7  44 24 60 60 d3 00 00 c7   |....L$L.D$``....|
0x54c9:     44 24 64 22 a3 00 00 c7  44 24 68 40 86 00 00 89   |D$d"....D$h@....|
0x54d9:     0c 24 c7 44 24 04 60 d3  00 00 c7 44 24 08 22 a3   |.$.D$.`....D$.".|
0x54e9:     00 00 c7 44 24 0c 40 86  00 00 e8 08 de 00 00 8b   |...D$.@.........|
0x54f9:     44 24 4c c7 44 24 6c 60  d3 00 00 c7 44 24 70 26   |D$L.D$l`....D$p&|
0x5509:     a3 00 00 c7 44 24 74 80  76 00 00 c7 44 24 04 60   |....D$t.v...D$.`|
0x5519:     d3 00 00 c7 44 24 08 26  a3 00 00 c7 44 24 0c 80   |....D$.&....D$..|
0x5529:     76 00 00 89 04 24 e8 cc  dd 00 00 8b 54 24 4c c7   |v....$......T$L.|
0x5539:     44 24 78 60 d3 00 00 c7  44 24 7c 2d a3 00 00 c7   |D$x`....D$|-....|
0x5549:     84 24 80 00 00 00 60 68  00 00 89 14 24 c7 44 24   |.$....`h....$.D$|
0x5559:     04 60 d3 00 00 c7 44 24  08 2d a3 00 00 c7 44 24   |.`....D$.-....D$|
0x5569:     0c 60 68 00 00 e8 8d dd  00 00 8b 4c 24 4c c7 84   |.`h........L$L..|
0x5579:     24 84 00 00 00 60 d3 00  00 c7 84 24 88 00 00 00   |$....`.....$....|
0x5589:     35 a3 00 00 c7 84 24 8c  00 00 00 f0 99 00 00 89   |5.....$.........|
0x5599:     0c 24 c7 44 24 04 60 d3  00 00 c7 44 24 08 35 a3   |.$.D$.`....D$.5.|
0x55a9:     00 00 c7 44 24 0c f0 99  00 00 e8 48 dd 00 00 8b   |...D$......H....|
0x55b9:     44 24 4c 89 2c 24 83 c0  08 89 44 24 04 e8 f5 ce   |D$L.,$....D$....|
0x55c9:     00 00 c7 04 24 08 00 00  00 e8                     |....$.....      |
; dynamically linked function: _Znwj at 0x55d3 -- 0x55d4
; data inside code section at 0x55d4 -- 0x55e1
0x55d4:     ff ff ff 89 c7 c7 04 24  14 01 00 00 e8            |.......$.....   |
; dynamically linked function: _Znwj at 0x55e1 -- 0x55e2
; data inside code section at 0x55e2 -- 0x55e6
0x55e2:     ff ff ff 89                                        |....            |
; function: function_55e6 at 0x55e6 -- 0x55e7
0x55e6:     c3                                 	ret 
; data inside code section at 0x55e7 -- 0x562e
0x55e7:     89 04 24 e8 61 bf 00 00  c7 03 88 15 03 00 c7 83   |..$.a...........|
0x55f7:     04 01 00 00 40 91 01 00  c7 83 08 01 00 00 3d a3   |....@.........=.|
0x5607:     00 00 c7 83 0c 01 00 00  c0 27 00 00 c7 83 10 01   |.........'......|
0x5617:     00 00 a0 bb 0d 00 89 1f  c7 47 04 00 00 00 00 c7   |.........G......|
0x5627:     04 24 10 00 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x562e -- 0x562f
; data inside code section at 0x562f -- 0x5697
0x562f:     ff ff ff c7 40 04 01 00  00 00 89 c6 c7 40 08 01   |....@........@..|
0x563f:     00 00 00 c7 00 a0 15 03  00 89 58 0c 89 47 04 8b   |..........X..G..|
0x564f:     43 08 85 c0 74 07 8b 40  04 85 c0 75 4d 8b 43 08   |C...t..@...uM.C.|
0x565f:     89 b4 24 bc 00 00 00 89  9c 24 b8 00 00 00 f0 ff   |..$......$......|
0x566f:     46 04 39 c6 89 5b 04 74  22 85 f6 74 04 f0 ff 46   |F.9..[.t"..t...F|
0x567f:     08 85 c0 74 13 ba ff ff  ff ff f0 0f c1 50 08 83   |...t.........P..|
0x568f:     fa 01 0f 84 c0 04 00 00                            |........        |
; function: function_5697 at 0x5697 -- 0x5698
; data inside code section at 0x5698 -- 0x56ad
0x5698:     73 08 8d 84 24 bc 00 00  00 89 04 24 e8 97 ae 00   |s...$......$....|
0x56a8:     00 89 3c 24 e8                                     |..<$.           |
; dynamically linked function: _ZN5boost6thread12start_threadEv at 0x56ad -- 0x56ae
; data inside code section at 0x56ae -- 0x56b9
0x56ae:     ff ff ff c7 04 24 0c 00  00 00 e8                  |.....$.....     |
; dynamically linked function: _Znwj at 0x56b9 -- 0x56ba
; data inside code section at 0x56ba -- 0x56d1
0x56ba:     ff ff ff 83 f8 f8 74 03  89 78 08 8b 54 24 4c 89   |......t..x..T$L.|
0x56ca:     04 24 89 54 24 04 e8                               |.$.T$..         |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x56d1 -- 0x56d2
; data inside code section at 0x56d2 -- 0x56d4
0x56d2:     ff ff                                              |..              |
; function: function_56d4 at 0x56d4 -- 0x56fc
0x56d4:     ff 89 2c 24 e8 03                  	dec dword ptr [ecx + 0x3e8242c]
0x56da:     c6 00 00                           	mov byte ptr [eax], 0
0x56dd:     8b 8c 24 2c 01 00 00               	mov ecx, dword ptr [esp + 0x12c]
0x56e4:     65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x56eb:     0f 85 d6 06 00 00                  	jne 0x5dc7 <function_5dc7>
0x56f1:     81 c4 3c 01 00 00                  	add esp, 0x13c
0x56f7:     5b                                 	pop ebx
0x56f8:     5e                                 	pop esi
0x56f9:     5f                                 	pop edi
0x56fa:     5d                                 	pop ebp
0x56fb:     c3                                 	ret 
; data inside code section at 0x56fc -- 0x5700
0x56fc:     8d 74 26 00                                        |.t&.            |
; function: function_5700 at 0x5700 -- 0x5711
0x5700:     c7 04 24 fe a2 00 00               	mov dword ptr [esp], 0xa2fe ; "DNS seeding disabled\n"
0x5707:     e8 fc ff ff ff                     	call 0x5708
0x570c:     e9 5f fd ff ff                     	jmp 0x5470 <function_5470>
; data inside code section at 0x5711 -- 0x5718
0x5711:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_5718 at 0x5718 -- 0x5722
0x5718:     8d 84 24 d0 00 00 00               	lea eax, [esp + 0xd0]
0x571f:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x5722 -- 0x5723
0x5722:     e8                                                 |.               |
; dynamically linked function: getifaddrs at 0x5723 -- 0x5724
; data inside code section at 0x5724 -- 0x5798
0x5724:     ff ff ff 85 c0 0f 85 7e  00 00 00 8b 9c 24 d0 00   |.......~.....$..|
0x5734:     00 00 85 db 0f 84 a7 04  00 00 8d ac 24 1c 01 00   |............$...|
0x5744:     00 8d 76 00 8b 43 0c 85  c0 74 49 f6 43 08 01 74   |..v..C...tI.C..t|
0x5754:     43 8b 4b 04 bf cd a2 00  00 89 4c 24 48 8b 74 24   |C.K.......L$H.t$|
0x5764:     48 b9 03 00 00 00 f3 a6  74 2a 8b 74 24 48 bf d0   |H.......t*.t$H..|
0x5774:     a2 00 00 b9 04 00 00 00  f3 a6 74 18 0f b7 10 66   |..........t....f|
0x5784:     83 fa 02 0f 84 f3 02 00  00 66 83 fa 0a 0f 84 51   |.........f.....Q|
0x5794:     03 00 00 90                                        |....            |
; function: function_5798 at 0x5798 -- 0x5799
; data inside code section at 0x5799 -- 0x57a5
0x5799:     1b 85 db 75 aa 8b 84 24  d0 00 00 00               |...u...$....    |
; function: function_57a5 at 0x57a5 -- 0x57a6
; data inside code section at 0x57a6 -- 0x57a9
0x57a6:     04 24 e8                                           |.$.             |
; dynamically linked function: freeifaddrs at 0x57a9 -- 0x57aa
; data inside code section at 0x57aa -- 0x57c9
0x57aa:     ff ff ff c7 04 24 01 00  00 00 e8 67 b5 ff ff 84   |.....$.....g....|
0x57ba:     c0 0f 85 2d fc ff ff c7  04 24 10 01 00 00 e8      |...-.....$..... |
; dynamically linked function: _Znwj at 0x57c9 -- 0x57ca
; data inside code section at 0x57ca -- 0x57ce
0x57ca:     ff ff ff 89                                        |....            |
; function: function_57ce at 0x57ce -- 0x57cf
0x57ce:     c3                                 	ret 
; data inside code section at 0x57cf -- 0x5815
0x57cf:     89 04 24 e8 79 bd 00 00  c7 03 90 14 03 00 c7 83   |..$.y...........|
0x57df:     04 01 00 00 60 d3 00 00  c7 83 08 01 00 00 ee a2   |....`...........|
0x57ef:     00 00 c7 83 0c 01 00 00  c0 33 00 00 89 9c 24 a8   |.........3....$.|
0x57ff:     00 00 00 c7 84 24 ac 00  00 00 00 00 00 00 c7 04   |.....$..........|
0x580f:     24 10 00 00 00 e8                                  |$.....          |
; dynamically linked function: _Znwj at 0x5815 -- 0x5816
; data inside code section at 0x5816 -- 0x5882
0x5816:     ff ff ff c7 40 04 01 00  00 00 89 c6 c7 00 a8 14   |....@...........|
0x5826:     03 00 c7 40 08 01 00 00  00 89 58 0c 89 84 24 ac   |...@......X...$.|
0x5836:     00 00 00 8b 43 08 85 c0  74 07 8b 40 04 85 c0 75   |....C...t..@...u|
0x5846:     4d 8b 43 08 89 b4 24 b4  00 00 00 89 9c 24 b0 00   |M.C...$......$..|
0x5856:     00 00 f0 ff 46 04 39 c6  89 5b 04 74 22 85 f6 74   |....F.9..[.t"..t|
0x5866:     04 f0 ff 46 08 85 c0 74  13 ba ff ff ff ff f0 0f   |...F...t........|
0x5876:     c1 50 08 83 fa 01 0f 84  56 03 00 00               |.P......V...    |
; function: function_5882 at 0x5882 -- 0x5883
; data inside code section at 0x5883 -- 0x589f
0x5883:     73 08 8d 84 24 b4 00 00  00 89 04 24 e8 ac ac 00   |s...$......$....|
0x5893:     00 8d 9c 24 a8 00 00 00  89 1c 24 e8               |...$......$.    |
; dynamically linked function: _ZN5boost6thread12start_threadEv at 0x589f -- 0x58a0
; data inside code section at 0x58a0 -- 0x58a3
0x58a0:     ff ff ff                                           |...             |
; function: function_58a3 at 0x58a3 -- 0x58b0
0x58a3:     89 1c 24                           	mov dword ptr [esp], ebx
0x58a6:     e8 fc ff ff ff                     	call 0x58a7
0x58ab:     e9 3e fb ff ff                     	jmp 0x53ee
; function: function_58b0 at 0x58b0 -- 0x58c8
0x58b0:     8b 35 30 9e 00 00                  	mov esi, dword ptr [0x9e30]
0x58b6:     b8 08 00 00 00                     	mov eax, 8
0x58bb:     c7 04 24 64 00 00 00               	mov dword ptr [esp], 0x64
0x58c2:     83 fe 08                           	cmp esi, 8
0x58c5:     0f 4d f0                           	cmovge esi, eax
; data inside code section at 0x58c8 -- 0x58c9
0x58c8:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x58c9 -- 0x58ca
; data inside code section at 0x58ca -- 0x58d6
0x58ca:     ff ff ff c7 44 24 04 00  00 00 00 89               |....D$......    |
; function: function_58d6 at 0x58d6 -- 0x58d7
0x58d6:     c3                                 	ret 
; data inside code section at 0x58d7 -- 0x58db
0x58d7:     89 04 24 e8                                        |..$.            |
; dynamically linked function: pthread_mutex_init at 0x58db -- 0x58dc
; data inside code section at 0x58dc -- 0x58f6
0x58dc:     ff ff ff 85 c0 0f 85 32  04 00 00 8d 43 18 c7 44   |.......2....C..D|
0x58ec:     24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x58f6 -- 0x58f7
; data inside code section at 0x58f7 -- 0x5911
0x58f7:     ff ff ff 85 c0 0f 85 63  02 00 00 8d 43 48 c7 44   |.......c....CH.D|
0x5907:     24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_mutex_init at 0x5911 -- 0x5912
; data inside code section at 0x5912 -- 0x5915
0x5912:     ff ff ff                                           |...             |
; function: function_5915 at 0x5915 -- 0x592b
0x5915:     85 c0                              	test eax, eax
0x5917:     0f 85 d7 03 00 00                  	jne 0x5cf4 <function_5cf4>
0x591d:     89 73 60                           	mov dword ptr [ebx + 0x60], esi
0x5920:     89 1d 30 a3 00 00                  	mov dword ptr [0xa330], ebx ; "ncon"
0x5926:     e9 a8 fa ff ff                     	jmp 0x53d3
; data inside code section at 0x592b -- 0x5930
0x592b:     90 8d 74 26 00                                     |..t&.           |
; function: function_5930 at 0x5930 -- 0x5965
0x5930:     8d 84 24 0a 01 00 00               	lea eax, [esp + 0x10a]
0x5937:     8b 35 38 9e 00 00                  	mov esi, dword ptr [0x9e38]
0x593d:     8b 3d 3c 9e 00 00                  	mov edi, dword ptr [0x9e3c]
0x5943:     8d 9c 24 c0 00 00 00               	lea ebx, [esp + 0xc0]
0x594a:     89 04 24                           	mov dword ptr [esp], eax
0x594d:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x5955:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x595d:     c7 44 24 04 c3 a2 00 00            	mov dword ptr [esp + 4], 0xa2c3 ; "127.0.0.1"
; data inside code section at 0x5965 -- 0x5966
0x5965:     e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1EPKcib at 0x5966 -- 0x5967
; data inside code section at 0x5967 -- 0x59b6
0x5967:     ff ff ff 8b 84 24 0a 01  00 00 89 74 24 18 89 7c   |.....$.....t$..||
0x5977:     24 1c 89 44 24 04 8b 84  24 0e 01 00 00 89 44 24   |$..D$...$.....D$|
0x5987:     08 8b 84 24 12 01 00 00  89 44 24 0c 8b 84 24 16   |...$.....D$...$.|
0x5997:     01 00 00 89 44 24 10 0f  b7 84 24 1a 01 00 00 66   |....D$....$....f|
0x59a7:     89 44 24 14 8d 84 24 e0  00 00 00 89 04 24 e8      |.D$...$......$. |
; dynamically linked function: _ZN8CAddressC1E8CServicey at 0x59b6 -- 0x59b7
; data inside code section at 0x59b7 -- 0x59d1
0x59b7:     ff ff ff 8d 84 24 dd 00  00 00 89 44 24 08 c7 44   |.....$.....D$..D|
0x59c7:     24 04 11 a1 00 00 89 1c  24 e8                     |$.......$.      |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x59d1 -- 0x59d2
; data inside code section at 0x59d2 -- 0x59dd
0x59d2:     ff ff ff c7 04 24 84 03  00 00 e8                  |.....$.....     |
; dynamically linked function: _Znwj at 0x59dd -- 0x59de
; data inside code section at 0x59de -- 0x5a77
0x59de:     ff ff ff 89 c6 8b 84 24  e0 00 00 00 c7 44 24 34   |.......$.....D$4|
0x59ee:     00 00 00 00 89 5c 24 30  c7 44 24 04 ff ff ff ff   |.....\$0.D$.....|
0x59fe:     89 44 24 08 8b 84 24 e4  00 00 00 89 34 24 89 44   |.D$...$.....4$.D|
0x5a0e:     24 0c 8b 84 24 e8 00 00  00 89 44 24 10 8b 84 24   |$...$.....D$...$|
0x5a1e:     ec 00 00 00 89 44 24 14  8b 84 24 f0 00 00 00 89   |.....D$...$.....|
0x5a2e:     44 24 18 8b 84 24 f4 00  00 00 89 44 24 1c 8b 84   |D$...$.....D$...|
0x5a3e:     24 f8 00 00 00 89 44 24  20 8b 84 24 fc 00 00 00   |$.....D$ ..$....|
0x5a4e:     89 44 24 24 8b 84 24 00  01 00 00 89 44 24 28 8b   |.D$$..$.....D$(.|
0x5a5e:     84 24 04 01 00 00 89 44  24 2c e8 83 79 01 00 89   |.$.....D$,..y...|
0x5a6e:     35 38 a3 00 00 89 1c 24  e8                        |58.....$.       |
; dynamically linked function: _ZNSsD1Ev at 0x5a77 -- 0x5a78
; data inside code section at 0x5a78 -- 0x5a7b
0x5a78:     ff ff ff                                           |...             |
; function: function_5a7b at 0x5a7b -- 0x5a80
0x5a7b:     e9 61 f9 ff ff                     	jmp 0x53e1
; data inside code section at 0x5a80 -- 0x5a8b
0x5a80:     83 c0 04 89 44 24 04 89  2c 24 e8                  |....D$..,$.     |
; dynamically linked function: _ZN8CNetAddrC1ERK7in_addr at 0x5a8b -- 0x5a8c
; data inside code section at 0x5a8c -- 0x5ab6
0x5a8c:     ff ff ff c7 44 24 04 01  00 00 00 89 2c 24 e8 51   |....D$......,$.Q|
0x5a9c:     d5 ff ff 84 c0 0f 84 f1  fc ff ff 8d b4 24 d8 00   |.............$..|
0x5aac:     00 00 89 6c 24 04 89 34  24 e8                     |...l$..4$.      |
; dynamically linked function: _ZNK8CNetAddr8ToStringEv at 0x5ab6 -- 0x5ab7
; data inside code section at 0x5ab7 -- 0x5ad7
0x5ab7:     ff ff ff 83 ec 04 8b 84  24 d8 00 00 00 89 44 24   |........$.....D$|
0x5ac7:     08 8b 43 04 c7 04 24 d4  a2 00 00 89 44 24 04 e8   |..C...$.....D$..|
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5ad7 -- 0x5ad8
; data inside code section at 0x5ad8 -- 0x5adf
0x5ad8:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x5adf -- 0x5ae0
; data inside code section at 0x5ae0 -- 0x5ae3
0x5ae0:     ff ff ff                                           |...             |
; function: function_5ae3 at 0x5ae3 -- 0x5ae8
0x5ae3:     e9 b0 fc ff ff                     	jmp 0x5798 <function_5798>
; data inside code section at 0x5ae8 -- 0x5af3
0x5ae8:     83 c0 08 89 44 24 04 89  2c 24 e8                  |....D$..,$.     |
; dynamically linked function: _ZN8CNetAddrC1ERK8in6_addr at 0x5af3 -- 0x5af4
; data inside code section at 0x5af4 -- 0x5b01
0x5af4:     ff ff ff c7 44 24 04 01  00 00 00 89 2c            |....D$......,   |
; function: function_5b01 at 0x5b01 -- 0x5b08
0x5b01:     24 e8                              	and al, 0xe8
0x5b03:     e9 d4 ff ff 84                     	jmp 0x85005adc <function_85005adc>
; data inside code section at 0x5b08 -- 0x5b1e
0x5b08:     c0 0f 84 89 fc ff ff 8d  84 24 d4 00 00 00 89 04   |.........$......|
0x5b18:     24 89 6c 24 04 e8                                  |$.l$..          |
; dynamically linked function: _ZNK8CNetAddr8ToStringEv at 0x5b1e -- 0x5b1f
; data inside code section at 0x5b1f -- 0x5b3f
0x5b1f:     ff ff ff 83 ec 04 8b 84  24 d4 00 00 00 89 44 24   |........$.....D$|
0x5b2f:     08 8b 43 04 c7 04 24 e1  a2 00 00 89 44 24 04 e8   |..C...$.....D$..|
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5b3f -- 0x5b40
; data inside code section at 0x5b40 -- 0x5b4e
0x5b40:     ff ff ff 8d 94 24 d4 00  00 00 89 14 24 e8         |.....$......$.  |
; dynamically linked function: _ZNSsD1Ev at 0x5b4e -- 0x5b4f
; data inside code section at 0x5b4f -- 0x5b52
0x5b4f:     ff ff ff                                           |...             |
; function: function_5b52 at 0x5b52 -- 0x5b57
0x5b52:     e9 41 fc ff ff                     	jmp 0x5798 <function_5798>
; function: function_5b57 at 0x5b57 -- 0x5b65
0x5b57:     8b 10                              	mov edx, dword ptr [eax]
0x5b59:     89 04 24                           	mov dword ptr [esp], eax
0x5b5c:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x5b5f:     90                                 	nop 
0x5b60:     e9 32 fb ff ff                     	jmp 0x5697 <function_5697>
; data inside code section at 0x5b65 -- 0x5b69
0x5b65:     89 1c 24 e8                                        |..$.            |
; dynamically linked function: pthread_mutex_destroy at 0x5b69 -- 0x5b6a
; data inside code section at 0x5b6a -- 0x5b92
0x5b6a:     ff ff ff 85 c0 90 74 24  c7 44 24 0c 20 b8 02 00   |......t$.D$. ...|
0x5b7a:     c7 44 24 08 28 00 00 00  c7 44 24 04 f4 d4 00 00   |.D$.(....D$.....|
0x5b8a:     c7 04 24 34 d5 00 00 e8                            |..$4....        |
; dynamically linked function: __assert_fail at 0x5b92 -- 0x5b93
; data inside code section at 0x5b93 -- 0x5bbb
0x5b93:     ff ff ff 8d b4 24 90 00  00 00 c7 84 24 94 00 00   |.....$......$...|
0x5ba3:     00 00 00 00 00 c7 84 24  90 00 00 00 48 12 03 00   |.......$....H...|
0x5bb3:     89 34 24 e8 b5 b7 00 00                            |.4$.....        |
; function: function_5bbb at 0x5bbb -- 0x5bbc
; data inside code section at 0x5bbc -- 0x5bc7
0x5bbc:     c7 89 34 24 89 fe e8 f9  8d 00 00                  |..4$.......     |
; function: function_5bc7 at 0x5bc7 -- 0x5bca
0x5bc7:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x5bca -- 0x5bcb
0x5bca:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x5bcb -- 0x5bcc
; data inside code section at 0x5bcc -- 0x5bd3
0x5bcc:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5bd3 -- 0x5bd4
; data inside code section at 0x5bd4 -- 0x5bd8
0x5bd4:     ff ff ff 90                                        |....            |
; function: function_5bd8 at 0x5bd8 -- 0x5be5
0x5bd8:     8b 10                              	mov edx, dword ptr [eax]
0x5bda:     89 04 24                           	mov dword ptr [esp], eax
0x5bdd:     ff 52 0c                           	call dword ptr [edx + 0xc]
0x5be0:     e9 9d fc ff ff                     	jmp 0x5882 <function_5882>
; function: function_5be5 at 0x5be5 -- 0x5bec
0x5be5:     31 c0                              	xor eax, eax
0x5be7:     e9 b9 fb ff ff                     	jmp 0x57a5 <function_57a5>
; data inside code section at 0x5bec -- 0x5bed
0x5bec:     89                                                 |.               |
; function: function_5bed at 0x5bed -- 0x5bee
0x5bed:     c3                                 	ret 
; data inside code section at 0x5bee -- 0x5c08
0x5bee:     8d 84 24 bc 00 00 00 89  04 24 e8 43 a9 00 00 8d   |..$......$.C....|
0x5bfe:     47 04 89 04 24 e8 38 a9  00 00                     |G...$.8...      |
; function: function_5c08 at 0x5c08 -- 0x5c09
; data inside code section at 0x5c09 -- 0x5c0c
0x5c09:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZdlPv at 0x5c0c -- 0x5c0d
; data inside code section at 0x5c0d -- 0x5c10
0x5c0d:     ff ff ff                                           |...             |
; function: function_5c10 at 0x5c10 -- 0x5c11
; data inside code section at 0x5c11 -- 0x5c1c
0x5c11:     2c 24 e8 c8 c0 00 00 89  1c 24 e8                  |,$.......$.     |
; dynamically linked function: _Unwind_Resume at 0x5c1c -- 0x5c1d
; data inside code section at 0x5c1d -- 0x5c21
0x5c1d:     ff ff ff 89                                        |....            |
; function: function_5c21 at 0x5c21 -- 0x5c22
0x5c21:     c3                                 	ret 
; data inside code section at 0x5c22 -- 0x5c26
0x5c22:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x5c26 -- 0x5c27
; data inside code section at 0x5c27 -- 0x5c2e
0x5c27:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x5c2e -- 0x5c2f
; data inside code section at 0x5c2f -- 0x5c31
0x5c2f:     ff ff                                              |..              |
; function: function_5c31 at 0x5c31 -- 0x5c38
0x5c31:     ff 89 c3 eb c7 89                  	dec dword ptr [ecx - 0x7638143d]
0x5c37:     c3                                 	ret 
; function: function_5c38 at 0x5c38 -- 0x5c45
0x5c38:     8d 47 04                           	lea eax, [edi + 4]
0x5c3b:     89 04 24                           	mov dword ptr [esp], eax
0x5c3e:     e8 fd a8 00 00                     	call 0x10540 <_ZN5boost6detail12shared_countD1Ev>
0x5c43:     eb c3                              	jmp 0x5c08 <function_5c08>
; data inside code section at 0x5c45 -- 0x5c46
0x5c45:     89                                                 |.               |
; function: function_5c46 at 0x5c46 -- 0x5c47
0x5c46:     c3                                 	ret 
; data inside code section at 0x5c47 -- 0x5c4b
0x5c47:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZN5boost6threadD1Ev at 0x5c4b -- 0x5c4c
; data inside code section at 0x5c4c -- 0x5c50
0x5c4c:     ff ff ff 90                                        |....            |
; function: function_5c50 at 0x5c50 -- 0x5c52
0x5c50:     eb b6                              	jmp 0x5c08 <function_5c08>
; data inside code section at 0x5c52 -- 0x5c53
0x5c52:     89                                                 |.               |
; function: function_5c53 at 0x5c53 -- 0x5c54
0x5c53:     c3                                 	ret 
; data inside code section at 0x5c54 -- 0x5c76
0x5c54:     8d 84 24 b4 00 00 00 89  04 24 e8 dd a8 00 00 8d   |..$......$......|
0x5c64:     84 24 ac 00 00 00 89 04  24 e8 ce a8 00 00 89 1c   |.$......$.......|
0x5c74:     24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x5c76 -- 0x5c77
; data inside code section at 0x5c77 -- 0x5c7b
0x5c77:     ff ff ff 89                                        |....            |
; function: function_5c7b at 0x5c7b -- 0x5c7c
0x5c7b:     c3                                 	ret 
; data inside code section at 0x5c7c -- 0x5c87
0x5c7c:     8d 8c 24 d4 00 00 00 89  0c 24 e8                  |..$......$.     |
; dynamically linked function: _ZNSsD1Ev at 0x5c87 -- 0x5c88
; data inside code section at 0x5c88 -- 0x5c8f
0x5c88:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x5c8f -- 0x5c90
; data inside code section at 0x5c90 -- 0x5c97
0x5c90:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x5c97 -- 0x5c98
; data inside code section at 0x5c98 -- 0x5ca4
0x5c98:     ff ff ff 8b 03 89 1c 24  ff 50 04 e8               |.......$.P..    |
; dynamically linked function: __cxa_rethrow at 0x5ca4 -- 0x5ca5
; data inside code section at 0x5ca5 -- 0x5ca9
0x5ca5:     ff ff ff 89                                        |....            |
; function: function_5ca9 at 0x5ca9 -- 0x5caa
0x5ca9:     c3                                 	ret 
; data inside code section at 0x5caa -- 0x5cbd
0x5caa:     8d 84 24 ac 00 00 00 89  04 24 e8 87 a8 00 00 89   |..$......$......|
0x5cba:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x5cbd -- 0x5cbe
; data inside code section at 0x5cbe -- 0x5cc0
0x5cbe:     ff ff                                              |..              |
; function: function_5cc0 at 0x5cc0 -- 0x5cc7
0x5cc0:     ff 89 c3 eb 9e 89                  	dec dword ptr [ecx - 0x7661143d]
0x5cc6:     c3                                 	ret 
; data inside code section at 0x5cc7 -- 0x5cc8
0x5cc7:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x5cc8 -- 0x5cc9
; data inside code section at 0x5cc9 -- 0x5cd0
0x5cc9:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x5cd0 -- 0x5cd1
; data inside code section at 0x5cd1 -- 0x5cdc
0x5cd1:     ff ff ff 89 c7 89 34 24  89 fe e8                  |......4$...     |
; dynamically linked function: _ZdlPv at 0x5cdc -- 0x5cdd
; data inside code section at 0x5cdd -- 0x5ce0
0x5cdd:     ff ff ff                                           |...             |
; function: function_5ce0 at 0x5ce0 -- 0x5ce1
; data inside code section at 0x5ce1 -- 0x5ce4
0x5ce1:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsD1Ev at 0x5ce4 -- 0x5ce5
; data inside code section at 0x5ce5 -- 0x5cec
0x5ce5:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5cec -- 0x5ced
; data inside code section at 0x5ced -- 0x5cf0
0x5ced:     ff ff ff                                           |...             |
; function: function_5cf0 at 0x5cf0 -- 0x5cf4
0x5cf0:     89 c6                              	mov esi, eax
0x5cf2:     eb ec                              	jmp 0x5ce0 <function_5ce0>
; function: function_5cf4 at 0x5cf4 -- 0x5d57
0x5cf4:     8d b4 24 a0 00 00 00               	lea esi, [esp + 0xa0]
0x5cfb:     c7 84 24 a4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa4], 0
0x5d06:     c7 84 24 a0 00 00 00 48 12 03 00   	mov dword ptr [esp + 0xa0], 0x31248
0x5d11:     89 34 24                           	mov dword ptr [esp], esi
0x5d14:     e8 57 b6 00 00                     	call 0x11370 <_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_>
0x5d19:     8d b4 24 98 00 00 00               	lea esi, [esp + 0x98]
0x5d20:     c7 84 24 9c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x9c], 0
0x5d2b:     c7 84 24 98 00 00 00 48 12 03 00   	mov dword ptr [esp + 0x98], 0x31248
0x5d36:     89 34 24                           	mov dword ptr [esp], esi
0x5d39:     e8 32 b6 00 00                     	call 0x11370 <_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_>
0x5d3e:     89 c7                              	mov edi, eax
0x5d40:     89 34 24                           	mov dword ptr [esp], esi
0x5d43:     89 fe                              	mov esi, edi
0x5d45:     e8 76 8c 00 00                     	call 0xe9c0 <_ZN5boost21thread_resource_errorD1Ev>
0x5d4a:     89 1c 24                           	mov dword ptr [esp], ebx
0x5d4d:     e8 3e ac 00 00                     	call 0x10990 <_ZN5boost18condition_variableD1Ev>
0x5d52:     e9 70 fe ff ff                     	jmp 0x5bc7 <function_5bc7>
; function: function_5d57 at 0x5d57 -- 0x5d5c
0x5d57:     e9 5f fe ff ff                     	jmp 0x5bbb <function_5bbb>
; data inside code section at 0x5d5c -- 0x5d62
0x5d5c:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZdlPv at 0x5d62 -- 0x5d63
; data inside code section at 0x5d63 -- 0x5d6a
0x5d63:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5d6a -- 0x5d6b
; data inside code section at 0x5d6b -- 0x5d6e
0x5d6b:     ff ff ff                                           |...             |
; function: function_5d6e at 0x5d6e -- 0x5d75
0x5d6e:     89 c3                              	mov ebx, eax
0x5d70:     e9 9b fe ff ff                     	jmp 0x5c10 <function_5c10>
; function: function_5d75 at 0x5d75 -- 0x5d7c
0x5d75:     89 c3                              	mov ebx, eax
0x5d77:     e9 8c fe ff ff                     	jmp 0x5c08 <function_5c08>
; data inside code section at 0x5d7c -- 0x5d84
0x5d7c:     89 c6 89 1c 24 89 f3 e8                            |....$...        |
; dynamically linked function: _ZdlPv at 0x5d84 -- 0x5d85
; data inside code section at 0x5d85 -- 0x5d88
0x5d85:     ff ff ff                                           |...             |
; function: function_5d88 at 0x5d88 -- 0x5d8d
0x5d88:     e9 7b fe ff ff                     	jmp 0x5c08 <function_5c08>
; data inside code section at 0x5d8d -- 0x5d91
0x5d8d:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x5d91 -- 0x5d92
; data inside code section at 0x5d92 -- 0x5d9e
0x5d92:     ff ff ff 8b 03 89 1c 24  ff 50 04 e8               |.......$.P..    |
; dynamically linked function: __cxa_rethrow at 0x5d9e -- 0x5d9f
; data inside code section at 0x5d9f -- 0x5da2
0x5d9f:     ff ff ff                                           |...             |
; function: function_5da2 at 0x5da2 -- 0x5da7
0x5da2:     e9 49 ff ff ff                     	jmp 0x5cf0 <function_5cf0>
; data inside code section at 0x5da7 -- 0x5da8
0x5da7:     89                                                 |.               |
; function: function_5da8 at 0x5da8 -- 0x5da9
0x5da8:     c3                                 	ret 
; data inside code section at 0x5da9 -- 0x5daa
0x5da9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x5daa -- 0x5dab
; data inside code section at 0x5dab -- 0x5dad
0x5dab:     ff ff                                              |..              |
; function: function_5dad at 0x5dad -- 0x5db0
0x5dad:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_5db0 at 0x5db0 -- 0x5db5
0x5db0:     e9 53 fe ff ff                     	jmp 0x5c08 <function_5c08>
; data inside code section at 0x5db5 -- 0x5dbb
0x5db5:     89 c6 89 1c 24 e8                                  |....$.          |
; dynamically linked function: _ZNSsD1Ev at 0x5dbb -- 0x5dbc
; data inside code section at 0x5dbc -- 0x5dc3
0x5dbc:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x5dc3 -- 0x5dc4
; data inside code section at 0x5dc4 -- 0x5dc7
0x5dc4:     ff ff ff                                           |...             |
; function: function_5dc7 at 0x5dc7 -- 0x5dc8
; dynamically linked function: __stack_chk_fail at 0x5dc8 -- 0x5dc9
; data inside code section at 0x5dc9 -- 0x5dd0
0x5dc9:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: _Z11ConnectNode8CAddressPKc at 0x5dd0 -- 0x5e7a
0x5dd0:     57                                 	push edi
0x5dd1:     56                                 	push esi
0x5dd2:     53                                 	push ebx
0x5dd3:     81 ec c0 00 00 00                  	sub esp, 0xc0
0x5dd9:     8b 84 24 d0 00 00 00               	mov eax, dword ptr [esp + 0xd0]
0x5de0:     8b 9c 24 f8 00 00 00               	mov ebx, dword ptr [esp + 0xf8]
0x5de7:     89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x5deb:     8b 84 24 d4 00 00 00               	mov eax, dword ptr [esp + 0xd4]
0x5df2:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x5df6:     8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x5dfd:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x5e01:     8b 84 24 dc 00 00 00               	mov eax, dword ptr [esp + 0xdc]
0x5e08:     89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x5e0c:     8b 84 24 e0 00 00 00               	mov eax, dword ptr [esp + 0xe0]
0x5e13:     89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x5e17:     8b 84 24 e4 00 00 00               	mov eax, dword ptr [esp + 0xe4]
0x5e1e:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x5e22:     8b 84 24 e8 00 00 00               	mov eax, dword ptr [esp + 0xe8]
0x5e29:     89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x5e2d:     8b 84 24 ec 00 00 00               	mov eax, dword ptr [esp + 0xec]
0x5e34:     89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x5e38:     8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0x5e3f:     89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x5e43:     8b 84 24 f4 00 00 00               	mov eax, dword ptr [esp + 0xf4]
0x5e4a:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x5e4e:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x5e54:     89 84 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], eax
0x5e5b:     31 c0                              	xor eax, eax
0x5e5d:     85 db                              	test ebx, ebx
0x5e5f:     0f 84 33 03 00 00                  	je 0x6198 <function_6198>
0x5e65:     89 d8                              	mov eax, ebx
0x5e67:     31 f6                              	xor esi, esi
0x5e69:     d9 ee                              	fldz 
0x5e6b:     dd 5c 24 08                        	fstp qword ptr [esp + 8]
0x5e6f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x5e73:     c7 04 24 cc dc 00 00               	mov dword ptr [esp], 0xdccc ; "trying connection %s lastseen=%.1fhrs\n"
; data inside code section at 0x5e7a -- 0x5e7b
0x5e7a:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5e7b -- 0x5e7c
; data inside code section at 0x5e7c -- 0x5e93
0x5e7c:     ff ff ff 89 f2 84 d2 0f  85 67 02 00 00 85 db 0f   |.........g......|
0x5e8c:     84 76 02 00 00 8b 35                               |.v....5         |
; dynamically linked function: nConnectTimeout at 0x5e93 -- 0x5e9b
; data inside code section at 0x5e9b -- 0x5e9c
0x5e9b:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x5e9c -- 0x5e9d
; data inside code section at 0x5e9d -- 0x5ebe
0x5e9d:     ff ff ff 89 74 24 10 8b  40 34 89 5c 24 08 89 3c   |....t$..@4.\$..<|
0x5ead:     24 89 44 24 0c 8d 84 24  98 00 00 00 89 44 24 04   |$.D$...$.....D$.|
0x5ebd:     e8                                                 |.               |
; dynamically linked function: _Z19ConnectSocketByNameR8CServiceRjPKcii at 0x5ebe -- 0x5ebf
; data inside code section at 0x5ebf -- 0x5ecb
0x5ebf:     ff ff ff 84 c0 0f 84 66  02 00 00 e8               |.......f....    |
; dynamically linked function: _Z15GetAdjustedTimev at 0x5ecb -- 0x5ecc
; data inside code section at 0x5ecc -- 0x5f2a
0x5ecc:     ff ff ff 8d b4 24 8c 00  00 00 c7 44 24 14 00 00   |.....$.....D$...|
0x5edc:     00 00 c7 44 24 10 c9 01  00 00 c7 44 24 0c 39 a0   |...D$......D$.9.|
0x5eec:     00 00 c7 44 24 08 43 a0  00 00 c7 44 24 04 80 a1   |...D$.C....D$...|
0x5efc:     00 00 89 44 24 4c 89 54  24 48 89 34 24 e8 52 cd   |...D$L.T$H.4$.R.|
0x5f0c:     00 00 8b 44 24 4c 8b 54  24 48 89 7c 24 04 c7 04   |...D$L.T$H.|$...|
0x5f1c:     24 80 a1 00 00 89 44 24  08 89 54 24 0c e8         |$.....D$..T$..  |
; dynamically linked function: _ZN8CAddrMan8Attempt_ERK8CServicex at 0x5f2a -- 0x5f2b
; data inside code section at 0x5f2b -- 0x5f4e
0x5f2b:     ff ff ff 89 34 24 e8 aa  c9 00 00 85 db 0f 84 12   |....4$..........|
0x5f3b:     02 00 00 89 d8 31 ff 89  44 24 04 c7 04 24 46 a3   |.....1..D$...$F.|
0x5f4b:     00 00 e8                                           |...             |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x5f4e -- 0x5f4f
; data inside code section at 0x5f4f -- 0x5f5c
0x5f4f:     ff ff ff 89 fa 84 d2 0f  85 dc 01 00 00            |.............   |
; function: function_5f5c at 0x5f5c -- 0x5f5d
; data inside code section at 0x5f5d -- 0x5f77
0x5f5d:     84 24 98 00 00 00 c7 44  24 08 00 08 00 00 c7 44   |.$.....D$......D|
0x5f6d:     24 04 04 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: fcntl at 0x5f77 -- 0x5f78
; data inside code section at 0x5f78 -- 0x5f84
0x5f78:     ff ff ff 83 f8 ff 0f 84  f4 01 00 00               |............    |
; function: function_5f84 at 0x5f84 -- 0x5f85
; data inside code section at 0x5f85 -- 0x5fa8
0x5f85:     db b8 11 a1 00 00 0f 44  d8 89 5c 24 04 8d 84 24   |.......D..\$...$|
0x5f95:     a9 00 00 00 8d 9c 24 a4  00 00 00 89 44 24 08 89   |......$.....D$..|
0x5fa5:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x5fa8 -- 0x5fa9
; data inside code section at 0x5fa9 -- 0x5fb4
0x5fa9:     ff ff ff c7 04 24 84 03  00 00 e8                  |.....$.....     |
; dynamically linked function: _Znwj at 0x5fb4 -- 0x5fb5
; data inside code section at 0x5fb5 -- 0x6034
0x5fb5:     ff ff ff 89 c7 8b 44 24  58 c7 44 24 34 00 00 00   |......D$X.D$4...|
0x5fc5:     00 89 5c 24 30 89 3c 24  89 44 24 08 8b 44 24 5c   |..\$0.<$.D$..D$\|
0x5fd5:     89 44 24 0c 8b 44 24 60  89 44 24 10 8b 44 24 64   |.D$..D$`.D$..D$d|
0x5fe5:     89 44 24 14 8b 44 24 68  89 44 24 18 8b 44 24 6c   |.D$..D$h.D$..D$l|
0x5ff5:     89 44 24 1c 8b 44 24 70  89 44 24 20 8b 44 24 74   |.D$..D$p.D$ .D$t|
0x6005:     89 44 24 24 8b 44 24 78  89 44 24 28 8b 44 24 7c   |.D$$.D$x.D$(.D$||
0x6015:     89 44 24 2c 8b 84 24 98  00 00 00 89 44 24 04 e8   |.D$,..$.....D$..|
0x6025:     c7 73 01 00 89 bc 24 a0  00 00 00 89 1c 24 e8      |.s....$......$. |
; dynamically linked function: _ZNSsD1Ev at 0x6034 -- 0x6035
; data inside code section at 0x6035 -- 0x6049
0x6035:     ff ff ff 8b 84 24 a0 00  00 00 83 80 34 02 00 00   |.....$......4...|
0x6045:     01 c7 44 24                                        |..D$            |
; function: function_6049 at 0x6049 -- 0x6079
0x6049:     14 00                              	adc al, 0
0x604b:     00 00                              	add byte ptr [eax], al
0x604d:     00 c7                              	add bh, al
0x604f:     44                                 	inc esp
0x6050:     24 10                              	and al, 0x10
0x6052:     ed                                 	in eax, dx
0x6053:     01 00                              	add dword ptr [eax], eax
0x6055:     00 c7                              	add bh, al
0x6057:     44                                 	inc esp
0x6058:     24 0c                              	and al, 0xc
0x605a:     27                                 	daa 
0x605b:     a0 00 00 c7 44                     	mov al, byte ptr [0x44c70000]
0x6060:     24 08                              	and al, 8
0x6062:     2f                                 	das 
0x6063:     a0 00 00 c7 44                     	mov al, byte ptr [0x44c70000]
0x6068:     24 04                              	and al, 4
0x606a:     20 a1 00 00 89 34                  	and byte ptr [ecx + 0x34890000], ah
0x6070:     24 e8                              	and al, 0xe8
0x6072:     ea cb 00 00 a1 78 a1               	ljmp 0xa178:0xa10000cb <function_a10000cb> ; "4.208.43.192"
; data inside code section at 0x6079 -- 0x609d
0x6079:     00 00 3b 05 7c a1 00 00  0f 84 d9 01 00 00 31 d2   |..;.|.........1.|
0x6089:     85 c0 74 0f 8b 94 24 a0  00 00 00 89 10 8b 15 78   |..t...$........x|
0x6099:     a1 00 00 83                                        |....            |
; function: function_609d at 0x609d -- 0x60a0
0x609d:     c2 04 89                           	ret 0x8904
; data inside code section at 0x60a0 -- 0x60a5
0x60a0:     15 78 a1 00 00                                     |.x...           |
; function: function_60a5 at 0x60a5 -- 0x60a6
; data inside code section at 0x60a6 -- 0x60b5
0x60a6:     34 24 e8 33 c8 00 00 8b  9c 24 a0 00 00 00 e8      |4$.3.....$..... |
; dynamically linked function: _Z7GetTimev at 0x60b5 -- 0x60b6
; data inside code section at 0x60b6 -- 0x60cc
0x60b6:     ff ff ff 89 83 7c 01 00  00 8b 84 24 a0 00 00 00   |.....|.....$....|
0x60c6:     89 93 80 01 00 00                                  |......          |
; function: function_60cc at 0x60cc -- 0x60ea
0x60cc:     8b 94 24 bc 00 00 00               	mov edx, dword ptr [esp + 0xbc]
0x60d3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x60da:     0f 85 a0 01 00 00                  	jne 0x6280 <function_6280>
0x60e0:     81 c4 c0 00 00 00                  	add esp, 0xc0
0x60e6:     5b                                 	pop ebx
0x60e7:     5e                                 	pop esi
0x60e8:     5f                                 	pop edi
0x60e9:     c3                                 	ret 
; data inside code section at 0x60ea -- 0x60fb
0x60ea:     8d b6 00 00 00 00 8d 84  24 94 00 00 00 89 04 24   |........$......$|
0x60fa:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x60fb -- 0x60fc
; data inside code section at 0x60fc -- 0x6108
0x60fc:     ff ff ff 85 db 0f 85 8a  fd ff ff a1               |............    |
; dynamically linked function: nConnectTimeout at 0x6108 -- 0x6122
; data inside code section at 0x6122 -- 0x6123
0x6122:     e8                                                 |.               |
; dynamically linked function: _Z13ConnectSocketRK8CServiceRji at 0x6123 -- 0x6124
; data inside code section at 0x6124 -- 0x6130
0x6124:     ff ff ff 84 c0 0f 85 9b  fd ff ff 90               |............    |
; function: function_6130 at 0x6130 -- 0x6134
0x6130:     31 c0                              	xor eax, eax
0x6132:     eb 98                              	jmp 0x60cc <function_60cc>
; data inside code section at 0x6134 -- 0x6143
0x6134:     8d 74 26 00 8d 84 24 9c  00 00 00 89 04 24 e8      |.t&...$......$. |
; dynamically linked function: _ZNSsD1Ev at 0x6143 -- 0x6144
; data inside code section at 0x6144 -- 0x6147
0x6144:     ff ff ff                                           |...             |
; function: function_6147 at 0x6147 -- 0x614c
0x6147:     e9 10 fe ff ff                     	jmp 0x5f5c <function_5f5c>
; data inside code section at 0x614c -- 0x6164
0x614c:     8d 74 26 00 8d 84 24 9c  00 00 00 89 7c 24 04 bf   |.t&...$.....|$..|
0x615c:     01 00 00 00 89 04 24 e8                            |......$.        |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x6164 -- 0x6165
; data inside code section at 0x6165 -- 0x6167
0x6165:     ff ff                                              |..              |
; function: function_6167 at 0x6167 -- 0x6174
0x6167:     ff 83 ec 04 8b 84                  	inc dword ptr [ebx - 0x7b74fb14]
0x616d:     24 9c                              	and al, 0x9c
0x616f:     00 00                              	add byte ptr [eax], al
0x6171:     00 e9                              	add cl, ch
0x6173:     cb                                 	retf 
; data inside code section at 0x6174 -- 0x6179
0x6174:     fd ff ff 90 e8                                     |.....           |
; dynamically linked function: __errno_location at 0x6179 -- 0x617a
; data inside code section at 0x617a -- 0x618b
0x617a:     ff ff ff 8b 00 c7 04 24  f4 dc 00 00 89 44 24 04   |.......$.....D$.|
0x618a:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x618b -- 0x618c
; data inside code section at 0x618c -- 0x618f
0x618c:     ff ff ff                                           |...             |
; function: function_618f at 0x618f -- 0x6194
0x618f:     e9 f0 fd ff ff                     	jmp 0x5f84 <function_5f84>
; data inside code section at 0x6194 -- 0x6198
0x6194:     8d 74 26 00                                        |.t&.            |
; function: function_6198 at 0x6198 -- 0x6200
0x6198:     8d 74 24 58                        	lea esi, [esp + 0x58]
0x619c:     89 34 24                           	mov dword ptr [esp], esi
0x619f:     e8 4c b0 ff ff                     	call 0x11f0 <_Z7IsLocalRK8CService>
0x61a4:     84 c0                              	test al, al
0x61a6:     75 88                              	jne 0x6130 <function_6130>
0x61a8:     8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x61ac:     89 84 24 aa 00 00 00               	mov dword ptr [esp + 0xaa], eax
0x61b3:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x61b7:     89 84 24 ae 00 00 00               	mov dword ptr [esp + 0xae], eax
0x61be:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x61c2:     89 84 24 b2 00 00 00               	mov dword ptr [esp + 0xb2], eax
0x61c9:     8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x61cd:     89 84 24 b6 00 00 00               	mov dword ptr [esp + 0xb6], eax
0x61d4:     0f b7 44 24 68                     	movzx eax, word ptr [esp + 0x68]
0x61d9:     66 89 84 24 ba 00 00 00            	mov word ptr [esp + 0xba], ax
0x61e1:     8d 84 24 aa 00 00 00               	lea eax, [esp + 0xaa]
0x61e8:     89 04 24                           	mov dword ptr [esp], eax
0x61eb:     e8 e0 a6 ff ff                     	call 0x8d0 <_Z8FindNodeRK8CService>
0x61f0:     85 c0                              	test eax, eax
0x61f2:     74 0c                              	je 0x6200 <function_6198+0x63>
0x61f4:     83 80 34 02 00 00 01               	add dword ptr [eax + 0x234], 1
0x61fb:     e9 cc fe ff ff                     	jmp 0x60cc <function_60cc>
; data inside code section at 0x6200 -- 0x6201
0x6200:     e8                                                 |.               |
; dynamically linked function: _Z15GetAdjustedTimev at 0x6201 -- 0x6202
; data inside code section at 0x6202 -- 0x6224
0x6202:     ff ff ff 8d 8c 24 94 00  00 00 8b 7c 24 74 89 74   |.....$.....|$t.t|
0x6212:     24 04 89 0c 24 89 fe 31  ff 89 44 24 4c 89 54 24   |$...$..1..D$L.T$|
0x6222:     48 e8                                              |H.              |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x6224 -- 0x6225
; data inside code section at 0x6225 -- 0x6227
0x6225:     ff ff                                              |..              |
; function: function_6227 at 0x6227 -- 0x625a
0x6227:     ff 83 ec 04 8b 44                  	inc dword ptr [ebx + 0x448b04ec]
0x622d:     24 4c                              	and al, 0x4c
0x622f:     8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x6233:     29 f0                              	sub eax, esi
0x6235:     be 01 00 00 00                     	mov esi, 1
0x623a:     19 fa                              	sbb edx, edi
0x623c:     89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x6240:     8b 84 24 94 00 00 00               	mov eax, dword ptr [esp + 0x94]
0x6247:     89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x624b:     df 6c 24 50                        	fild qword ptr [esp + 0x50]
0x624f:     d8 35 10 31 03 00                  	fdiv dword ptr [0x33110]
0x6255:     e9 11 fc ff ff                     	jmp 0x5e6b
; data inside code section at 0x625a -- 0x6260
0x625a:     8d b6 00 00 00 00                                  |......          |
; function: function_6260 at 0x6260 -- 0x6280
0x6260:     8d 94 24 a0 00 00 00               	lea edx, [esp + 0xa0]
0x6267:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x626b:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x626f:     c7 04 24 74 a1 00 00               	mov dword ptr [esp], 0xa174 ; "rg"
0x6276:     e8 55 e3 00 00                     	call 0x145d0 <_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_>
0x627b:     e9 25 fe ff ff                     	jmp 0x60a5 <function_60a5>
; function: function_6280 at 0x6280 -- 0x6281
; dynamically linked function: __stack_chk_fail at 0x6281 -- 0x6282
; data inside code section at 0x6282 -- 0x628b
0x6282:     ff ff ff 89 c6 89 3c 24  e8                        |......<$.       |
; dynamically linked function: _ZdlPv at 0x628b -- 0x628c
; data inside code section at 0x628c -- 0x628f
0x628c:     ff ff ff                                           |...             |
; function: function_628f at 0x628f -- 0x6290
; data inside code section at 0x6290 -- 0x6293
0x6290:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsD1Ev at 0x6293 -- 0x6294
; data inside code section at 0x6294 -- 0x629b
0x6294:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x629b -- 0x629c
; data inside code section at 0x629c -- 0x629f
0x629c:     ff ff ff                                           |...             |
; function: function_629f at 0x629f -- 0x62a0
; function: function_62a0 at 0x62a0 -- 0x62a1
0x62a0:     c3                                 	ret 
; data inside code section at 0x62a1 -- 0x62a9
0x62a1:     89 34 24 e8 37 c6 00 00                            |.4$.7...        |
; function: function_62a9 at 0x62a9 -- 0x62aa
; data inside code section at 0x62aa -- 0x62ad
0x62aa:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x62ad -- 0x62ae
; data inside code section at 0x62ae -- 0x62b1
0x62ae:     ff ff ff                                           |...             |
; function: function_62b1 at 0x62b1 -- 0x62b3
0x62b1:     eb ec                              	jmp 0x629f <function_629f>
; function: function_62b3 at 0x62b3 -- 0x62b7
0x62b3:     89 c6                              	mov esi, eax
0x62b5:     eb d8                              	jmp 0x628f <function_628f>
; data inside code section at 0x62b7 -- 0x62b8
0x62b7:     89                                                 |.               |
; function: function_62b8 at 0x62b8 -- 0x62b9
0x62b8:     c3                                 	ret 
; data inside code section at 0x62b9 -- 0x62cd
0x62b9:     89 f8 84 c0 8d 76 00 74  e7 8d 84 24 9c 00 00 00   |.....v.t...$....|
0x62c9:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZNSsD1Ev at 0x62cd -- 0x62ce
; data inside code section at 0x62ce -- 0x62d1
0x62ce:     ff ff ff                                           |...             |
; function: function_62d1 at 0x62d1 -- 0x62d3
0x62d1:     eb d6                              	jmp 0x62a9 <function_62a9>
; data inside code section at 0x62d3 -- 0x62d4
0x62d3:     89                                                 |.               |
; function: function_62d4 at 0x62d4 -- 0x62d5
0x62d4:     c3                                 	ret 
; data inside code section at 0x62d5 -- 0x62e6
0x62d5:     89 f0 84 c0 74 ce 8d 84  24 94 00 00 00 89 04 24   |....t...$......$|
0x62e5:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x62e6 -- 0x62e7
; data inside code section at 0x62e7 -- 0x62ea
0x62e7:     ff ff ff                                           |...             |
; function: function_62ea at 0x62ea -- 0x62ec
0x62ea:     eb bd                              	jmp 0x62a9 <function_62a9>
; data inside code section at 0x62ec -- 0x62f0
0x62ec:     8d 74 26 00                                        |.t&.            |
; function: _Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb at 0x62f0 -- 0x6340
0x62f0:     81 ec 9c 00 00 00                  	sub esp, 0x9c
0x62f6:     89 bc 24 94 00 00 00               	mov dword ptr [esp + 0x94], edi
0x62fd:     0f b6 84 24 ac 00 00 00            	movzx eax, byte ptr [esp + 0xac]
0x6305:     8b bc 24 a8 00 00 00               	mov edi, dword ptr [esp + 0xa8]
0x630c:     89 9c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ebx
0x6313:     8b 9c 24 a0 00 00 00               	mov ebx, dword ptr [esp + 0xa0]
0x631a:     89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0x6321:     8b ac 24 a4 00 00 00               	mov ebp, dword ptr [esp + 0xa4]
0x6328:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x632f:     89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x6333:     31 d2                              	xor edx, edx
0x6335:     89 b4 24 90 00 00 00               	mov dword ptr [esp + 0x90], esi
0x633c:     88 44 24 3f                        	mov byte ptr [esp + 0x3f], al
; data inside code section at 0x6340 -- 0x6341
0x6340:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x6341 -- 0x6342
; data inside code section at 0x6342 -- 0x635d
0x6342:     ff ff ff 85 ff 74 77 8d  44 24 5b 8d 74 24 54 89   |.....tw.D$[.t$T.|
0x6352:     44 24 08 89 7c 24 04 89  34 24 e8                  |D$..|$..4$.     |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x635d -- 0x635e
; data inside code section at 0x635e -- 0x6374
0x635e:     ff ff ff 89 34 24 e8 77  a6 ff ff 85 c0 0f 95 44   |....4$.w.......D|
0x636e:     24 3e 89 34 24 e8                                  |$>.4$.          |
; dynamically linked function: _ZNSsD1Ev at 0x6374 -- 0x6375
; data inside code section at 0x6375 -- 0x6377
0x6375:     ff ff                                              |..              |
; function: function_6377 at 0x6377 -- 0x63bb
0x6377:     ff 31                              	push dword ptr [ecx]
0x6379:     d2 80 7c 24 3e 00                  	rol byte ptr [eax + 0x3e247c], cl
0x637f:     0f 84 13 01 00 00                  	je 0x6498 <function_6498>
0x6385:     89 d0                              	mov eax, edx
0x6387:     8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x638b:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x6392:     0f 85 cf 01 00 00                  	jne 0x6567 <function_6567>
0x6398:     8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
0x639f:     8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x63a6:     8b bc 24 94 00 00 00               	mov edi, dword ptr [esp + 0x94]
0x63ad:     8b ac 24 98 00 00 00               	mov ebp, dword ptr [esp + 0x98]
0x63b4:     81 c4 9c 00 00 00                  	add esp, 0x9c
0x63ba:     c3                                 	ret 
; data inside code section at 0x63bb -- 0x6442
0x63bb:     90 8d 74 26 00 89 1c 24  e8 28 ae ff ff 84 c0 0f   |..t&...$.(......|
0x63cb:     85 90 01 00 00 8b 03 89  44 24 5c 8b 43 04 89 44   |........D$\.C..D|
0x63db:     24 60 8b 43 08 89 44 24  64 8b 43 0c 89 44 24 68   |$`.C..D$d.C..D$h|
0x63eb:     8d 44 24 5c 89 04 24 e8  d9 a6 ff ff 85 c0 0f 85   |.D$\..$.........|
0x63fb:     61 01 00 00 8b 0b 8b 53  04 8b 43 08 8b 73 0c 89   |a......S..C..s..|
0x640b:     4c 24 6c 89 54 24 70 89  44 24 74 89 74 24 78 89   |L$l.T$p.D$t.t$x.|
0x641b:     0c 24 89 54 24 04 89 44  24 08 89 74 24 0c e8 a2   |.$.T$..D$..t$...|
0x642b:     ae ff ff 84 c0 0f 85 2a  01 00 00 8d 44 24 4c 89   |.......*....D$L.|
0x643b:     5c 24 04 89 04 24 e8                               |\$...$.         |
; dynamically linked function: _ZNK8CService14ToStringIPPortEv at 0x6442 -- 0x6443
; data inside code section at 0x6443 -- 0x645f
0x6443:     ff ff ff 50 8d 44 24 5a  89 44 24 08 8b 44 24 4c   |...P.D$Z.D$..D$L|
0x6453:     8d 74 24 50 89 34 24 89  44 24 04 e8               |.t$P.4$.D$..    |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x645f -- 0x6460
; data inside code section at 0x6460 -- 0x6476
0x6460:     ff ff ff 89 34 24 e8 75  a5 ff ff 85 c0 0f 95 44   |....4$.u.......D|
0x6470:     24 3e 89 34 24 e8                                  |$>.4$.          |
; dynamically linked function: _ZNSsD1Ev at 0x6476 -- 0x6477
; data inside code section at 0x6477 -- 0x6482
0x6477:     ff ff ff 8d 54 24 4c 89  14 24 e8                  |....T$L..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x6482 -- 0x6483
; data inside code section at 0x6483 -- 0x6498
0x6483:     ff ff ff 80 7c 24 3e 00  0f 85 cf 00 00 00 8d b4   |....|$>.........|
0x6493:     26 00 00 00 00                                     |&....           |
; function: function_6498 at 0x6498 -- 0x64e7
0x6498:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x649c:     8b 03                              	mov eax, dword ptr [ebx]
0x649e:     89 04 24                           	mov dword ptr [esp], eax
0x64a1:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x64a4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x64a8:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x64ab:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x64af:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x64b2:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x64b6:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x64b9:     89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x64bd:     8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x64c0:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x64c4:     8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x64c7:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x64cb:     8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x64ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x64d2:     8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0x64d5:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x64d9:     8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0x64dc:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x64e0:     e8 eb f8 ff ff                     	call 0x5dd0 <_Z11ConnectNode8CAddressPKc>
0x64e5:     89 c3                              	mov ebx, eax
; data inside code section at 0x64e7 -- 0x64e8
0x64e7:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x64e8 -- 0x64e9
; data inside code section at 0x64e9 -- 0x64ec
0x64e9:     ff ff ff                                           |...             |
; function: function_64ec at 0x64ec -- 0x655f
0x64ec:     31 d2                              	xor edx, edx
0x64ee:     85 db                              	test ebx, ebx
0x64f0:     0f 84 8f fe ff ff                  	je 0x6385
0x64f6:     85 ed                              	test ebp, ebp
0x64f8:     74 27                              	je 0x6521 <function_64ec+0x35>
0x64fa:     80 bb d8 01 00 00 00               	cmp byte ptr [ebx + 0x1d8], 0
0x6501:     75 45                              	jne 0x6548 <function_64ec+0x5c>
0x6503:     8b 45 00                           	mov eax, dword ptr [ebp]
0x6506:     89 83 d4 01 00 00                  	mov dword ptr [ebx + 0x1d4], eax
0x650c:     0f b6 45 04                        	movzx eax, byte ptr [ebp + 4]
0x6510:     c7 45 00 00 00 00 00               	mov dword ptr [ebp], 0
0x6517:     88 83 d8 01 00 00                  	mov byte ptr [ebx + 0x1d8], al
0x651d:     c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x6521:     80 7c 24 3f 00                     	cmp byte ptr [esp + 0x3f], 0
0x6526:     ba 01 00 00 00                     	mov edx, 1
0x652b:     c6 83 cf 01 00 00 01               	mov byte ptr [ebx + 0x1cf], 1
0x6532:     0f 84 4d fe ff ff                  	je 0x6385
0x6538:     c6 83 cc 01 00 00 01               	mov byte ptr [ebx + 0x1cc], 1
0x653f:     e9 41 fe ff ff                     	jmp 0x6385
; data inside code section at 0x6544 -- 0x6548
0x6544:     8d 74 26 00                                        |.t&.            |
0x6548:     8b 83 d4 01 00 00                  	mov eax, dword ptr [ebx + 0x1d4]
0x654e:     89 04 24                           	mov dword ptr [esp], eax
0x6551:     e8 3a b6 00 00                     	call 0x11b90 <_ZN10CSemaphore4postEv>
0x6556:     c6 83 d8 01 00 00 00               	mov byte ptr [ebx + 0x1d8], 0
0x655d:     eb a4                              	jmp 0x6503 <function_64ec+0x17>
; data inside code section at 0x655f -- 0x6560
0x655f:     90                                                 |.               |
; function: function_6560 at 0x6560 -- 0x6567
0x6560:     31 d2                              	xor edx, edx
0x6562:     e9 1e fe ff ff                     	jmp 0x6385
; function: function_6567 at 0x6567 -- 0x6568
; dynamically linked function: __stack_chk_fail at 0x6568 -- 0x6569
; data inside code section at 0x6569 -- 0x6574
0x6569:     ff ff ff 89 44 24 38 89  34 24 e8                  |....D$8.4$.     |
; dynamically linked function: _ZNSsD1Ev at 0x6574 -- 0x6575
; data inside code section at 0x6575 -- 0x657c
0x6575:     ff ff ff 8b 44 24 38                               |....D$8         |
; function: function_657c at 0x657c -- 0x657d
; data inside code section at 0x657d -- 0x6588
0x657d:     54 24 4c 89 44 24 38 89  14 24 e8                  |T$L.D$8..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x6588 -- 0x6589
; data inside code section at 0x6589 -- 0x6590
0x6589:     ff ff ff 8b 44 24 38                               |....D$8         |
; function: function_6590 at 0x6590 -- 0x6591
; data inside code section at 0x6591 -- 0x6594
0x6591:     04 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x6594 -- 0x6595
; data inside code section at 0x6595 -- 0x6598
0x6595:     ff ff ff                                           |...             |
; function: function_6598 at 0x6598 -- 0x659a
0x6598:     eb e2                              	jmp 0x657c <function_657c>
; function: function_659a at 0x659a -- 0x659c
0x659a:     eb f4                              	jmp 0x6590 <function_6590>
; data inside code section at 0x659c -- 0x65a0
0x659c:     8d 74 26 00                                        |.t&.            |
; function: function_65a0 at 0x65a0 -- 0x65a2
0x65a0:     eb ee                              	jmp 0x6590 <function_6590>
; function: function_65a2 at 0x65a2 -- 0x65a4
0x65a2:     eb ec                              	jmp 0x6590 <function_6590>
; function: function_65a4 at 0x65a4 -- 0x65a6
0x65a4:     eb ea                              	jmp 0x6590 <function_6590>
; data inside code section at 0x65a6 -- 0x65a7
0x65a6:     89                                                 |.               |
; function: function_65a7 at 0x65a7 -- 0x65a8
0x65a7:     c3                                 	ret 
; data inside code section at 0x65a8 -- 0x65b1
0x65a8:     89 34 24 90 8d 74 26 00  e8                        |.4$..t&..       |
; dynamically linked function: _ZNSsD1Ev at 0x65b1 -- 0x65b2
; data inside code section at 0x65b2 -- 0x65b9
0x65b2:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x65b9 -- 0x65ba
; data inside code section at 0x65ba -- 0x65c0
0x65ba:     ff ff ff 8d 76 00                                  |....v.          |
; function: ProcessOneShot at 0x65c0 -- 0x65f6
0x65c0:     81 ec 9c 00 00 00                  	sub esp, 0x9c
0x65c6:     89 b4 24 90 00 00 00               	mov dword ptr [esp + 0x90], esi
0x65cd:     8d 74 24 34                        	lea esi, [esp + 0x34]
0x65d1:     89 9c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ebx
0x65d8:     8d 5c 24 4c                        	lea ebx, [esp + 0x4c]
0x65dc:     89 bc 24 94 00 00 00               	mov dword ptr [esp + 0x94], edi
0x65e3:     89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0x65ea:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x65f0:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x65f4:     31 c0                              	xor eax, eax
; data inside code section at 0x65f6 -- 0x65fa
0x65f6:     c7 44 24 4c                                        |.D$L            |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x65fa -- 0x664a
; data inside code section at 0x664a -- 0x664b
0x664a:     e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x664b -- 0x664c
; data inside code section at 0x664c -- 0x6656
0x664c:     ff ff ff 8b 15 70 a2 00  00 a1                     |.....p....      |
; function: function_6656 at 0x6656 -- 0x6662
0x6656:     68 a2 00 00 83                     	push 0x830000a2
0x665b:     ea 04 39 d0 89 04 24               	ljmp 0x2404:0x89d03904 <function_89d03904>
; data inside code section at 0x6662 -- 0x6669
0x6662:     0f 84 08 01 00 00 e8                               |.......         |
; dynamically linked function: _ZNSsD1Ev at 0x6669 -- 0x666a
; data inside code section at 0x666a -- 0x6674
0x666a:     ff ff ff 83 05 68 a2 00  00 04                     |.....h....      |
; function: function_6674 at 0x6674 -- 0x6675
; data inside code section at 0x6675 -- 0x667c
0x6675:     34 24 8d 74 24 54 e8                               |4$.t$T.         |
; function: function_667c at 0x667c -- 0x6680
0x667c:     60                                 	pushal 
0x667d:     c2 00 00                           	ret 0
; data inside code section at 0x6680 -- 0x6684
0x6680:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZN8CAddressC1Ev at 0x6684 -- 0x6685
; data inside code section at 0x6685 -- 0x669e
0x6685:     ff ff ff 8b 3d 30 a3 00  00 c6 44 24 40 00 8d 6f   |....=0....D$@..o|
0x6695:     48 89 7c 24 3c 89 2c 24  e8                        |H.|$<.,$.       |
; dynamically linked function: pthread_mutex_lock at 0x669e -- 0x669f
; data inside code section at 0x669f -- 0x66c6
0x669f:     ff ff ff 85 c0 0f 85 4c  01 00 00 8b 47 60 31 d2   |.......L....G`1.|
0x66af:     85 c0 7e 0b 83 e8 01 ba  01 00 00 00 89 47 60 88   |..~..........G`.|
0x66bf:     54 24 2c 89 2c 24 e8                               |T$,.,$.         |
; dynamically linked function: pthread_mutex_unlock at 0x66c6 -- 0x66c7
; data inside code section at 0x66c7 -- 0x66c9
0x66c7:     ff ff                                              |..              |
; function: function_66c9 at 0x66c9 -- 0x6733
0x66c9:     ff 0f                              	dec dword ptr [edi]
0x66cb:     b6 54                              	mov dh, 0x54
0x66cd:     24 2c                              	and al, 0x2c
0x66cf:     85 c0                              	test eax, eax
0x66d1:     0f 85 53 01 00 00                  	jne 0x682a <function_682a>
0x66d7:     84 d2                              	test dl, dl
0x66d9:     74 4d                              	je 0x6728 <function_66c9+0x5f>
0x66db:     c6 44 24 40 01                     	mov byte ptr [esp + 0x40], 1
0x66e0:     8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x66e4:     8d 7c 24 3c                        	lea edi, [esp + 0x3c]
0x66e8:     c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x66f0:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x66f4:     89 34 24                           	mov dword ptr [esp], esi
0x66f7:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x66fb:     e8 f0 fb ff ff                     	call 0x62f0 <_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb>
0x6700:     84 c0                              	test al, al
0x6702:     0f 84 a8 00 00 00                  	je 0x67b0 <function_67b0>
0x6708:     0f b6 44 24 40                     	movzx eax, byte ptr [esp + 0x40]
0x670d:     84 c0                              	test al, al
0x670f:     74 1f                              	je 0x6730 <function_66c9+0x67>
0x6711:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x6715:     89 04 24                           	mov dword ptr [esp], eax
0x6718:     e8 73 b4 00 00                     	call 0x11b90 <_ZN10CSemaphore4postEv>
0x671d:     c6 44 24 40 00                     	mov byte ptr [esp + 0x40], 0
0x6722:     eb 0c                              	jmp 0x6730 <function_66c9+0x67>
; data inside code section at 0x6724 -- 0x6728
0x6724:     8d 74 26 00                                        |.t&.            |
0x6728:     80 7c 24 40 00                     	cmp byte ptr [esp + 0x40], 0
0x672d:     75 b1                              	jne 0x66e0 <function_66c9+0x17>
0x672f:     90                                 	nop 
0x6730:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x6733 -- 0x6734
0x6733:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x6734 -- 0x6735
; data inside code section at 0x6735 -- 0x6737
0x6735:     ff ff                                              |..              |
; function: function_6737 at 0x6737 -- 0x676c
0x6737:     ff 8b 44 24 7c 65                  	dec dword ptr [ebx + 0x657c2444]
0x673d:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x6743:     0f 85 a8 00 00 00                  	jne 0x67f1 <function_67f1>
0x6749:     8b 9c 24 8c 00 00 00               	mov ebx, dword ptr [esp + 0x8c]
0x6750:     8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x6757:     8b bc 24 94 00 00 00               	mov edi, dword ptr [esp + 0x94]
0x675e:     8b ac 24 98 00 00 00               	mov ebp, dword ptr [esp + 0x98]
0x6765:     81 c4 9c 00 00 00                  	add esp, 0x9c
0x676b:     c3                                 	ret 
; data inside code section at 0x676c -- 0x6771
0x676c:     8d 74 26 00 e8                                     |.t&..           |
; dynamically linked function: _ZNSsD1Ev at 0x6771 -- 0x6772
; data inside code section at 0x6772 -- 0x6774
0x6772:     ff ff                                              |..              |
; function: function_6774 at 0x6774 -- 0x677a
0x6774:     ff a1 6c a2 00 00                  	jmp dword ptr [ecx + 0xa26c]
; data inside code section at 0x677a -- 0x677e
0x677a:     89 04 24 e8                                        |..$.            |
; dynamically linked function: _ZdlPv at 0x677e -- 0x677f
; data inside code section at 0x677f -- 0x6781
0x677f:     ff ff                                              |..              |
; function: function_6781 at 0x6781 -- 0x6787
0x6781:     ff a1 74 a2 00 00                  	jmp dword ptr [ecx + 0xa274]
; function: function_6787 at 0x6787 -- 0x67ae
0x6787:     8d 50 04                           	lea edx, [eax + 4]
0x678a:     89 15 74 a2 00 00                  	mov dword ptr [0xa274], edx ; "essagestest"
0x6790:     8b 40 04                           	mov eax, dword ptr [eax + 4]
0x6793:     8d 90 00 02 00 00                  	lea edx, [eax + 0x200]
0x6799:     a3 6c a2 00 00                     	mov dword ptr [0xa26c], eax
0x679e:     89 15 70 a2 00 00                  	mov dword ptr [0xa270], edx ; "ropmessagestest"
0x67a4:     a3 68 a2 00 00                     	mov dword ptr [0xa268], eax ; "ntory"
0x67a9:     e9 c6 fe ff ff                     	jmp 0x6674 <function_6674>
; data inside code section at 0x67ae -- 0x67b0
0x67ae:     66 90                                              |f.              |
; function: function_67b0 at 0x67b0 -- 0x67bb
0x67b0:     8d 74 24 50                        	lea esi, [esp + 0x50]
0x67b4:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x67b8:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x67bb -- 0x67bc
0x67bb:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x67bc -- 0x67bd
; data inside code section at 0x67bd -- 0x67cc
0x67bd:     ff ff ff 89 34 24 e8 c8  c1 ff ff 89 34 24 e8      |....4$......4$. |
; dynamically linked function: _ZNSsD1Ev at 0x67cc -- 0x67cd
; data inside code section at 0x67cd -- 0x67d0
0x67cd:     ff ff ff                                           |...             |
; function: function_67d0 at 0x67d0 -- 0x67d5
0x67d0:     e9 33 ff ff ff                     	jmp 0x6708
; data inside code section at 0x67d5 -- 0x67d8
0x67d5:     8d 76 00                                           |.v.             |
; function: function_67d8 at 0x67d8 -- 0x67e7
0x67d8:     89 34 24                           	mov dword ptr [esp], esi
0x67db:     e8 00 c1 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x67e0:     8d 44 24 4c                        	lea eax, [esp + 0x4c]
0x67e4:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x67e7 -- 0x67e8
0x67e7:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x67e8 -- 0x67e9
; data inside code section at 0x67e9 -- 0x67ec
0x67e9:     ff ff ff                                           |...             |
; function: function_67ec at 0x67ec -- 0x67f1
0x67ec:     e9 47 ff ff ff                     	jmp 0x6738
; function: function_67f1 at 0x67f1 -- 0x67f2
; dynamically linked function: __stack_chk_fail at 0x67f2 -- 0x67f3
; data inside code section at 0x67f3 -- 0x681a
0x67f3:     ff ff ff 8d 74 24 44 89  44 24 48 c7 44 24 44 20   |....t$D.D$H.D$D |
0x6803:     78 02 00 89 34 24 e8 82  b1 00 00 89 c7 89 34 24   |x...4$........4$|
0x6813:     89 fe e8 36 82 00 00                               |...6...         |
; function: function_681a at 0x681a -- 0x681d
0x681a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x681d -- 0x681e
0x681d:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x681e -- 0x681f
; data inside code section at 0x681f -- 0x6826
0x681f:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x6826 -- 0x6827
; data inside code section at 0x6827 -- 0x682a
0x6827:     ff ff ff                                           |...             |
; function: function_682a at 0x682a -- 0x6833
0x682a:     e8 df 78 00 00                     	call 0xe10e <_ZN5boost5mutex6unlockEv.part.28>
0x682f:     89 c6                              	mov esi, eax
0x6831:     eb e7                              	jmp 0x681a <function_681a>
; function: function_6833 at 0x6833 -- 0x6841
0x6833:     89 c7                              	mov edi, eax
0x6835:     89 34 24                           	mov dword ptr [esp], esi
0x6838:     89 fe                              	mov esi, edi
0x683a:     e8 a1 c0 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x683f:     eb d9                              	jmp 0x681a <function_681a>
; data inside code section at 0x6841 -- 0x6849
0x6841:     89 c5 89 34 24 89 ee e8                            |...4$...        |
; dynamically linked function: _ZNSsD1Ev at 0x6849 -- 0x684a
; data inside code section at 0x684a -- 0x684c
0x684a:     ff ff                                              |..              |
; function: function_684c at 0x684c -- 0x6857
0x684c:     ff 89 3c 24 e8 fb                  	dec dword ptr [ecx - 0x417dbc4]
0x6852:     b3 00                              	mov bl, 0
0x6854:     00 eb                              	add bl, ch
0x6856:     c3                                 	ret 
; function: function_6857 at 0x6857 -- 0x685b
0x6857:     89 c6                              	mov esi, eax
0x6859:     eb f2                              	jmp 0x684d
; data inside code section at 0x685b -- 0x6860
0x685b:     90 8d 74 26 00                                     |..t&.           |
; function: _Z21ThreadOpenConnectionsv at 0x6860 -- 0x6896
0x6860:     55                                 	push ebp
0x6861:     57                                 	push edi
0x6862:     56                                 	push esi
0x6863:     53                                 	push ebx
0x6864:     81 ec 9c 01 00 00                  	sub esp, 0x19c
0x686a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x6870:     89 84 24 8c 01 00 00               	mov dword ptr [esp + 0x18c], eax
0x6877:     31 c0                              	xor eax, eax
0x6879:     8d b4 24 14 01 00 00               	lea esi, [esp + 0x114]
0x6880:     8d 84 24 29 01 00 00               	lea eax, [esp + 0x129]
0x6887:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x688b:     c7 44 24 04 54 a3 00 00            	mov dword ptr [esp + 4], 0xa354 ; "-connect"
0x6893:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x6896 -- 0x6897
0x6896:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x6897 -- 0x6898
; data inside code section at 0x6898 -- 0x689d
0x6898:     ff ff ff 8b 1d                                     |.....           |
; dynamically linked function: mapArgs at 0x689d -- 0x68a1
; data inside code section at 0x68a1 -- 0x68a2
0x68a1:     bf                                                 |.               |
; dynamically linked function: mapArgs at 0x68a2 -- 0x68ce
; data inside code section at 0x68ce -- 0x68cf
0x68ce:     e8                                                 |.               |
; dynamically linked function: memcmp at 0x68cf -- 0x68d0
; data inside code section at 0x68d0 -- 0x68d2
0x68d0:     ff ff                                              |..              |
; function: function_68d2 at 0x68d2 -- 0x68d4
0x68d2:     ff 2b                              	ljmp [ebx]
; function: function_68d4 at 0x68d4 -- 0x68e9
0x68d4:     6c                                 	insb byte ptr es:[edi], dx
0x68d5:     24 34                              	and al, 0x34
0x68d7:     85 c0                              	test eax, eax
0x68d9:     0f 44 c5                           	cmove eax, ebp
0x68dc:     85 c0                              	test eax, eax
0x68de:     78 13                              	js 0x68f3 <function_68f3>
0x68e0:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x68e3:     89 df                              	mov edi, ebx
0x68e5:     89 c3                              	mov ebx, eax
0x68e7:     eb bd                              	jmp 0x68a6
; data inside code section at 0x68e9 -- 0x68eb
0x68e9:     89 c7                                              |..              |
; function: function_68eb at 0x68eb -- 0x68ec
; data inside code section at 0x68ec -- 0x68ef
0x68ec:     3c 24 e8                                           |<$.             |
; dynamically linked function: _Unwind_Resume at 0x68ef -- 0x68f0
; data inside code section at 0x68f0 -- 0x68f3
0x68f0:     ff ff ff                                           |...             |
; function: function_68f3 at 0x68f3 -- 0x68fa
0x68f3:     8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x68f6:     89 fb                              	mov ebx, edi
0x68f8:     eb e9                              	jmp 0x68e3
; function: function_68fa at 0x68fa -- 0x68fb
; data inside code section at 0x68fb -- 0x68fc
0x68fb:     ff                                                 |.               |
; dynamically linked function: mapArgs at 0x68fc -- 0x692a
; data inside code section at 0x692a -- 0x692b
0x692a:     e8                                                 |.               |
; dynamically linked function: memcmp at 0x692b -- 0x692c
; data inside code section at 0x692c -- 0x693e
0x692c:     ff ff ff 85 c0 0f 44 c5  31 ff 85 c0 0f 89 98 07   |......D.1.......|
0x693c:     00 00                                              |..              |
; function: function_693e at 0x693e -- 0x6941
0x693e:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x6941 -- 0x6942
0x6941:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x6942 -- 0x6943
; data inside code section at 0x6943 -- 0x6960
0x6943:     ff ff ff 89 fa 84 d2 0f  84 dc 03 00 00 c7 44 24   |..............D$|
0x6953:     38 00 00 00 00 c7 44 24  3c 00 00 00 00            |8.....D$<....   |
; function: function_6960 at 0x6960 -- 0x6961
; data inside code section at 0x6961 -- 0x6983
0x6961:     5b fc ff ff 8d bc 24 1c  01 00 00 8d 8c 24 2b 01   |[.....$......$+.|
0x6971:     00 00 89 4c 24 08 c7 44  24 04 54 a3 00 00 89 3c   |...L$..D$.T....<|
0x6981:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x6983 -- 0x6984
; data inside code section at 0x6984 -- 0x6989
0x6984:     ff ff ff 8b 1d                                     |.....           |
; dynamically linked function: mapMultiArgs at 0x6989 -- 0x699c
; data inside code section at 0x699c -- 0x69a0
0x699c:     c7 44 24 34                                        |.D$4            |
; dynamically linked function: mapMultiArgs at 0x69a0 -- 0x69a9
; function: function_69a9 at 0x69a9 -- 0x69b4
0x69a9:     89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x69ad:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x69b0:     85 db                              	test ebx, ebx
0x69b2:     74 2f                              	je 0x69e3
; function: function_69b4 at 0x69b4 -- 0x69ce
0x69b4:     8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x69b7:     8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x69ba:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x69be:     89 04 24                           	mov dword ptr [esp], eax
0x69c1:     39 f5                              	cmp ebp, esi
0x69c3:     89 f2                              	mov edx, esi
0x69c5:     0f 46 d5                           	cmovbe edx, ebp
0x69c8:     29 ee                              	sub esi, ebp
0x69ca:     89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x69ce -- 0x69cf
0x69ce:     e8                                                 |.               |
; dynamically linked function: memcmp at 0x69cf -- 0x69d0
; data inside code section at 0x69d0 -- 0x69e3
0x69d0:     ff ff ff 85 c0 0f 44 c6  85 c0 79 cd 8b 5b 0c 85   |......D...y..[..|
0x69e0:     db 75 d1                                           |.u.             |
; function: function_69e3 at 0x69e3 -- 0x69e4
; data inside code section at 0x69e4 -- 0x69e7
0x69e4:     7c 24 34                                           ||$4             |
; dynamically linked function: mapMultiArgs at 0x69e7 -- 0x6a0b
; data inside code section at 0x6a0b -- 0x6a0c
0x6a0b:     e8                                                 |.               |
; dynamically linked function: memcmp at 0x6a0c -- 0x6a0d
; data inside code section at 0x6a0d -- 0x6a1d
0x6a0d:     ff ff ff 85 c0 0f 44 c5  85 c0 0f 89 93 01 00 00   |......D.........|
; function: function_6a1d at 0x6a1d -- 0x6a53
0x6a1d:     8d 8c 24 1c 01 00 00               	lea ecx, [esp + 0x11c]
0x6a24:     8d bc 24 b8 00 00 00               	lea edi, [esp + 0xb8]
0x6a2b:     c7 84 24 e0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe0], 0
0x6a36:     c7 84 24 e4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe4], 0
0x6a41:     c7 84 24 e8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xe8], 0
0x6a4c:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x6a50:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x6a53 -- 0x6a54
0x6a53:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x6a54 -- 0x6a55
; data inside code section at 0x6a55 -- 0x6a5d
0x6a55:     ff ff ff 8b 84 24 e4 00                            |.....$..        |
; function: function_6a5d at 0x6a5d -- 0x6a5e
; data inside code section at 0x6a5e -- 0x6ab5
0x6a5e:     00 8d bc 24 e0 00 00 00  8b b4 24 e0 00 00 00 c7   |...$......$.....|
0x6a6e:     84 24 bc 00 00 00 00 00  00 00 c7 84 24 c0 00 00   |.$..........$...|
0x6a7e:     00 00 00 00 00 89 44 24  40 29 f0 c1 f8 02 85 c0   |......D$@)......|
0x6a8e:     c7 84 24 c4 00 00 00 00  00 00 00 0f 84 f5 01 00   |..$.............|
0x6a9e:     00 3d ff ff ff 3f 0f 87  23 02 00 00 8d 1c 85 00   |.=...?..#.......|
0x6aae:     00 00 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Znwj at 0x6ab5 -- 0x6ab6
; data inside code section at 0x6ab6 -- 0x6ac4
0x6ab6:     ff ff ff 8b 57 04 89 c5  8b 37 89 54 24 40         |....W....7.T$@  |
; function: function_6ac4 at 0x6ac4 -- 0x6ac5
; function: function_6ac5 at 0x6ac5 -- 0x6ac7
0x6ac5:     eb 3b                              	jmp 0x6b02 <function_6b02>
; data inside code section at 0x6ac7 -- 0x6ad2
0x6ac7:     74 24 40 89 9c 24 c4 00  00 00 89                  |t$@..$.....     |
; function: function_6ad2 at 0x6ad2 -- 0x6ad4
0x6ad2:     eb 89                              	jmp 0x6a5d <function_6a5d>
; data inside code section at 0x6ad4 -- 0x6aef
0x6ad4:     ac 24 bc 00 00 00 89 ac  24 c0 00 00 00 74 1c 85   |.$......$....t..|
0x6ae4:     db 74 0c 89 74 24 04 89  1c 24 e8                  |.t..t$...$.     |
; dynamically linked function: _ZNSsC1ERKSs at 0x6aef -- 0x6af0
; data inside code section at 0x6af0 -- 0x6af4
0x6af0:     ff ff ff 83                                        |....            |
; function: function_6af4 at 0x6af4 -- 0x6af5
0x6af4:     c3                                 	ret 
; data inside code section at 0x6af5 -- 0x6b02
0x6af5:     04 83 c6 04 39 74 24 40  75 e4 8b 44 24            |....9t$@u..D$   |
; function: function_6b02 at 0x6b02 -- 0x6b56
0x6b02:     34 8d                              	xor al, 0x8d
0x6b04:     8c 24 b8                           	mov word ptr [eax + edi*4], fs
0x6b07:     00 00                              	add byte ptr [eax], al
0x6b09:     00 8d 94 24 9c 00                  	add byte ptr [ebp + 0x9c2494], cl
0x6b0f:     00 00                              	add byte ptr [eax], al
0x6b11:     89 9c 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], ebx
0x6b18:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x6b1c:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x6b20:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x6b28:     89 14 24                           	mov dword ptr [esp], edx
0x6b2b:     e8 d0 49 01 00                     	call 0x1b500 <_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_>
0x6b30:     83 ec 04                           	sub esp, 4
0x6b33:     8b b4 24 c0 00 00 00               	mov esi, dword ptr [esp + 0xc0]
0x6b3a:     8b 9c 24 bc 00 00 00               	mov ebx, dword ptr [esp + 0xbc]
0x6b41:     8b 8c 24 9c 00 00 00               	mov ecx, dword ptr [esp + 0x9c]
0x6b48:     39 de                              	cmp esi, ebx
0x6b4a:     89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x6b4e:     74 0f                              	je 0x6b5f <function_6b5f>
0x6b50:     89 1c 24                           	mov dword ptr [esp], ebx
0x6b53:     83 c3 04                           	add ebx, 4
; data inside code section at 0x6b56 -- 0x6b57
0x6b56:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x6b57 -- 0x6b58
; data inside code section at 0x6b58 -- 0x6b5f
0x6b58:     ff ff ff 39 de 75 f1                               |...9.u.         |
; function: function_6b5f at 0x6b5f -- 0x6b6d
0x6b5f:     8b 84 24 bc 00 00 00               	mov eax, dword ptr [esp + 0xbc]
0x6b66:     85 c0                              	test eax, eax
0x6b68:     74 08                              	je 0x6b72 <function_6b72>
0x6b6a:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x6b6d -- 0x6b6e
0x6b6d:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x6b6e -- 0x6b6f
; data inside code section at 0x6b6f -- 0x6b72
0x6b6f:     ff ff ff                                           |...             |
; function: function_6b72 at 0x6b72 -- 0x6b7c
0x6b72:     8d 94 24 b8 00 00 00               	lea edx, [esp + 0xb8]
0x6b79:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x6b7c -- 0x6b7d
0x6b7c:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x6b7d -- 0x6b7e
; data inside code section at 0x6b7e -- 0x6b95
0x6b7e:     ff ff ff 8b b4 24 e4 00  00 00 8b 9c 24 e0 00 00   |.....$......$...|
0x6b8e:     00 39 de 74 0f 89 1c                               |.9.t...         |
; function: function_6b95 at 0x6b95 -- 0x6b98
0x6b95:     24 83                              	and al, 0x83
0x6b97:     c3                                 	ret 
; data inside code section at 0x6b98 -- 0x6b9a
0x6b98:     04 e8                                              |..              |
; dynamically linked function: _ZNSsD1Ev at 0x6b9a -- 0x6b9b
; data inside code section at 0x6b9b -- 0x6bac
0x6b9b:     ff ff ff 39 de 75 f1 8b  07 85 c0 74 08 89 04 24   |...9.u.....t...$|
0x6bab:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x6bac -- 0x6bad
; data inside code section at 0x6bad -- 0x6bbb
0x6bad:     ff ff ff 8d 8c 24 1c 01  00 00 89 0c 24 e8         |.....$......$.  |
; dynamically linked function: _ZNSsD1Ev at 0x6bbb -- 0x6bbc
; data inside code section at 0x6bbc -- 0x6be8
0x6bbc:     ff ff ff 8b 7c 24 34 8b  5f 14 8b 7f 18 39 fb 89   |....|$4._....9..|
0x6bcc:     7c 24 40 0f 84 9c 00 00  00 8d bc 24 2c 01 00 00   ||$@........$,...|
0x6bdc:     89 7c 24 34 8d ac 24 20  01 00 00 90               |.|$4..$ ....    |
; function: function_6be8 at 0x6be8 -- 0x6be9
; data inside code section at 0x6be9 -- 0x6bf0
0x6be9:     5c 24 04 89 2c 24 e8                               |\$..,$.         |
; dynamically linked function: _ZNSsC1ERKSs at 0x6bf0 -- 0x6bf1
; data inside code section at 0x6bf1 -- 0x6bfc
0x6bf1:     ff ff ff 8b 7c 24 34 89  3c 24 e8                  |....|$4.<$.     |
; dynamically linked function: _ZN8CAddressC1Ev at 0x6bfc -- 0x6bfd
; data inside code section at 0x6bfd -- 0x6c5e
0x6bfd:     ff ff ff 8b 84 24 20 01  00 00 8b 7c 24 34 c7 44   |.....$ ....|$4.D|
0x6c0d:     24 0c 00 00 00 00 c7 44  24 04 00 00 00 00 89 44   |$......D$......D|
0x6c1d:     24 08 89 3c 24 e8 c9 f6  ff ff 31 f6 31 ff 39 7c   |$..<$.....1.1.9||
0x6c2d:     24 3c 7c 2b 7f 06 39 74  24 38 76 23 c7 04 24 f4   |$<|+..9t$8v#..$.|
0x6c3d:     01 00 00 c7 44 24 04 00  00 00 00 e8 23 24 01 00   |....D$......#$..|
0x6c4d:     83 c6 01 89 f0 83 d7 00  83 f0 0a 09 f8 75 cf 89   |.............u..|
0x6c5d:     2c                                                 |,               |
; function: function_6c5e at 0x6c5e -- 0x6c61
0x6c5e:     24 83                              	and al, 0x83
0x6c60:     c3                                 	ret 
; data inside code section at 0x6c61 -- 0x6c63
0x6c61:     04 e8                                              |..              |
; dynamically linked function: _ZNSsD1Ev at 0x6c63 -- 0x6c64
; data inside code section at 0x6c64 -- 0x6c67
0x6c64:     ff ff ff                                           |...             |
; function: function_6c67 at 0x6c67 -- 0x6c94
0x6c67:     39 5c 24 40                        	cmp dword ptr [esp + 0x40], ebx
0x6c6b:     0f 85 77 ff ff ff                  	jne 0x6be8 <function_6be8>
0x6c71:     c7 04 24 f4 01 00 00               	mov dword ptr [esp], 0x1f4
0x6c78:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x6c80:     e8 eb 23 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x6c85:     83 44 24 38 01                     	add dword ptr [esp + 0x38], 1
0x6c8a:     83 54 24 3c 00                     	adc dword ptr [esp + 0x3c], 0
0x6c8f:     e9 cc fc ff ff                     	jmp 0x6960 <function_6960>
; function: function_6c94 at 0x6c94 -- 0x6c9d
0x6c94:     31 db                              	xor ebx, ebx
0x6c96:     31 ed                              	xor ebp, ebp
0x6c98:     e9 27 fe ff ff                     	jmp 0x6ac4 <function_6ac4>
; data inside code section at 0x6c9d -- 0x6c9e
0x6c9d:     89                                                 |.               |
; function: function_6c9e at 0x6c9e -- 0x6c9f
0x6c9e:     c3                                 	ret 
; function: function_6c9f at 0x6c9f -- 0x6ca0
; data inside code section at 0x6ca0 -- 0x6caa
0x6ca0:     84 24 b8 00 00 00 89 04  24 e8                     |.$......$.      |
; dynamically linked function: _ZNSsD1Ev at 0x6caa -- 0x6cab
; data inside code section at 0x6cab -- 0x6cae
0x6cab:     ff ff ff                                           |...             |
; function: function_6cae at 0x6cae -- 0x6caf
; data inside code section at 0x6caf -- 0x6cc1
0x6caf:     3c 24 e8 7a 7f 00 00 8d  94 24 1c 01 00 00 89 14   |<$.z.....$......|
0x6cbf:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsD1Ev at 0x6cc1 -- 0x6cc2
; data inside code section at 0x6cc2 -- 0x6cc9
0x6cc2:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x6cc9 -- 0x6cca
; data inside code section at 0x6cca -- 0x6cce
0x6cca:     ff ff ff e8                                        |....            |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x6cce -- 0x6ccf
; data inside code section at 0x6ccf -- 0x6cd3
0x6ccf:     ff ff ff 89                                        |....            |
; function: function_6cd3 at 0x6cd3 -- 0x6cd4
0x6cd3:     c3                                 	ret 
; data inside code section at 0x6cd4 -- 0x6cd8
0x6cd4:     89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZNSsD1Ev at 0x6cd8 -- 0x6cd9
; data inside code section at 0x6cd9 -- 0x6ce0
0x6cd9:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x6ce0 -- 0x6ce1
; data inside code section at 0x6ce1 -- 0x6ce3
0x6ce1:     ff ff                                              |..              |
; function: function_6ce3 at 0x6ce3 -- 0x6cef
0x6ce3:     ff 89 c3 8d bc 24                  	dec dword ptr [ecx + 0x24bc8dc3]
0x6ce9:     e0 00                              	loopne 0x6ceb <function_6ce3+0x8>
0x6ceb:     00 00                              	add byte ptr [eax], al
0x6ced:     eb bf                              	jmp 0x6cae <function_6cae>
; function: function_6cef at 0x6cef -- 0x6d02
0x6cef:     89 c3                              	mov ebx, eax
0x6cf1:     8d 84 24 bc 00 00 00               	lea eax, [esp + 0xbc]
0x6cf8:     89 04 24                           	mov dword ptr [esp], eax
0x6cfb:     e8 30 7f 00 00                     	call 0xec30 <_ZNSt6vectorISsSaISsEED1Ev>
0x6d00:     eb 9d                              	jmp 0x6c9f <function_6c9f>
; data inside code section at 0x6d02 -- 0x6d06
0x6d02:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x6d06 -- 0x6d07
; data inside code section at 0x6d07 -- 0x6d0a
0x6d07:     ff ff ff                                           |...             |
; function: function_6d0a at 0x6d0a -- 0x6d0b
; data inside code section at 0x6d0b -- 0x6d19
0x6d0b:     dd 0f 84 82 07 00 00 89  2c 24 83 c5 04 e8         |........,$....  |
; dynamically linked function: _ZNSsD1Ev at 0x6d19 -- 0x6d1a
; data inside code section at 0x6d1a -- 0x6d1d
0x6d1a:     ff ff ff                                           |...             |
; function: function_6d1d at 0x6d1d -- 0x6d1f
0x6d1d:     eb eb                              	jmp 0x6d0a <function_6d0a>
; function: function_6d1f at 0x6d1f -- 0x6d20
; data inside code section at 0x6d20 -- 0x6d23
0x6d20:     44 24 34                                           |D$4             |
; dynamically linked function: mapMultiArgs at 0x6d23 -- 0x6d2c
; data inside code section at 0x6d2c -- 0x6d2d
0x6d2c:     e8                                                 |.               |
; dynamically linked function: _Z7GetTimev at 0x6d2d -- 0x6d2e
; data inside code section at 0x6d2e -- 0x6d39
0x6d2e:     ff ff ff 89 44 24 48 89  54 24 4c                  |....D$H.T$L     |
; function: function_6d39 at 0x6d39 -- 0x6d3a
; data inside code section at 0x6d3a -- 0x6d7d
0x6d3a:     82 f8 ff ff c7 04 24 f4  01 00 00 c7 44 24 04 00   |......$.....D$..|
0x6d4a:     00 00 00 e8 1e 23 01 00  8b 1d 30 a3 00 00 c6 84   |.....#....0.....|
0x6d5a:     24 f0 00 00 00 00 c6 84  24 00 01 00 00 00 8d 43   |$.......$......C|
0x6d6a:     48 89 9c 24 ec 00 00 00  89 84 24 fc 00 00 00 89   |H..$......$.....|
0x6d7a:     04 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_lock at 0x6d7d -- 0x6d7e
; data inside code section at 0x6d7e -- 0x6d80
0x6d7e:     ff ff                                              |..              |
; function: function_6d80 at 0x6d80 -- 0x6dce
0x6d80:     ff 85 c0 0f 85 e3                  	inc dword ptr [ebp - 0x1c7af040]
0x6d86:     06                                 	push es
0x6d87:     00 00                              	add byte ptr [eax], al
0x6d89:     c6 84 24 00 01 00 00 01            	mov byte ptr [esp + 0x100], 1
0x6d91:     eb 18                              	jmp 0x6dab <function_6d80+0x2b>
; data inside code section at 0x6d93 -- 0x6d98
0x6d93:     90 8d 74 26 00                                     |..t&.           |
0x6d98:     8d 84 24 fc 00 00 00               	lea eax, [esp + 0xfc]
0x6d9f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x6da3:     89 1c 24                           	mov dword ptr [esp], ebx
0x6da6:     e8 95 b3 00 00                     	call 0x12140 <_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE>
0x6dab:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x6dae:     85 c0                              	test eax, eax
0x6db0:     7e e6                              	jle 0x6d98 <function_6d80+0x18>
0x6db2:     83 e8 01                           	sub eax, 1
0x6db5:     80 bc 24 00 01 00 00 00            	cmp byte ptr [esp + 0x100], 0
0x6dbd:     89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x6dc0:     0f 85 59 06 00 00                  	jne 0x741f <function_741f>
0x6dc6:     c6 84 24 f0 00 00 00 01            	mov byte ptr [esp + 0xf0], 1
; data inside code section at 0x6dce -- 0x6dcf
0x6dce:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x6dcf -- 0x6dd0
; data inside code section at 0x6dd0 -- 0x6dd2
0x6dd0:     ff ff                                              |..              |
; function: function_6dd2 at 0x6dd2 -- 0x6dd8
0x6dd2:     ff a1 18 a2 00 00                  	jmp dword ptr [ecx + 0xa218]
; data inside code section at 0x6dd8 -- 0x6de9
0x6dd8:     2b 05 14 a2 00 00 c1 f8  02 85 c0 0f 84 e5 06 00   |+...............|
0x6de8:     00                                                 |.               |
; function: function_6de9 at 0x6de9 -- 0x6dea
; data inside code section at 0x6dea -- 0x6df8
0x6dea:     bc 24 2c 01 00 00 89 7c  24 34 89 3c 24 e8         |.$,....|$4.<$.  |
; dynamically linked function: _ZN8CAddressC1Ev at 0x6df8 -- 0x6df9
; data inside code section at 0x6df9 -- 0x6ebc
0x6df9:     ff ff ff 8d bc 24 a4 00  00 00 8d ac 24 f4 00 00   |.....$......$...|
0x6e09:     00 8d 84 24 a0 00 00 00  c7 84 24 a4 00 00 00 00   |...$......$.....|
0x6e19:     00 00 00 8d 9c 24 ec 00  00 00 c7 84 24 a8 00 00   |.....$......$...|
0x6e29:     00 00 00 00 00 c7 84 24  b4 00 00 00 00 00 00 00   |.......$........|
0x6e39:     89 7c 24 2c 89 bc 24 ac  00 00 00 89 bc 24 b0 00   |.|$,..$......$..|
0x6e49:     00 00 c7 44 24 14 00 00  00 00 c7 44 24 10 14 05   |...D$......D$...|
0x6e59:     00 00 c7 44 24 0c 27 a0  00 00 c7 44 24 08 2f a0   |...D$.'....D$./.|
0x6e69:     00 00 c7 44 24 04 20 a1  00 00 89 2c 24 89 44 24   |...D$. ....,$.D$|
0x6e79:     40 e8 e1 bd 00 00 8b 1d  74 a1 00 00 8b 3d 78 a1   |@.......t....=x.|
0x6e89:     00 00 c7 44 24 38 00 00  00 00 39 fb 0f 84 c1 05   |...D$8....9.....|
0x6e99:     00 00 8d 94 24 a0 00 00  00 89 54 24 40 8d b4 24   |....$.....T$@..$|
0x6ea9:     c8 00 00 00 8b 03 80 b8  ce 01 00 00 00 0f 84 9c   |................|
0x6eb9:     02 00 00                                           |...             |
; function: function_6ebc at 0x6ebc -- 0x6ebd
; function: function_6ebd at 0x6ebd -- 0x6ebe
0x6ebd:     c3                                 	ret 
; data inside code section at 0x6ebe -- 0x6ec2
0x6ebe:     04 39 df 75                                        |.9.u            |
; function: function_6ec2 at 0x6ec2 -- 0x6ec9
0x6ec2:     ea 89 2c 24 8d 9c 24               	ljmp 0x249c:0x8d242c89 <function_8d242c89>
; data inside code section at 0x6ec9 -- 0x6ed3
0x6ec9:     ec 00 00 00 e8 0e ba 00  00 e8                     |..........      |
; dynamically linked function: _Z15GetAdjustedTimev at 0x6ed3 -- 0x6ed4
; data inside code section at 0x6ed4 -- 0x6f07
0x6ed4:     ff ff ff 83 7c 24 38 08  89 c6 b8 08 00 00 00 89   |....|$8.........|
0x6ee4:     d7 0f 4e 44 24 38 c7 44  24 38 00 00 00 00 8d 44   |..ND$8.D$8.....D|
0x6ef4:     80 05 01 c0 89 44 24 54  8d 84 24 54 01 00 00 89   |.....D$T..$T....|
0x6f04:     44 24 30                                           |D$0             |
; function: function_6f07 at 0x6f07 -- 0x6f08
; data inside code section at 0x6f08 -- 0x6f19
0x6f08:     94 24 54 01 00 00 89 14  24 8d 9c 24 ec 00 00 00   |.$T.....$..$....|
0x6f18:     e8                                                 |.               |
; dynamically linked function: _ZN8CAddressC1Ev at 0x6f19 -- 0x6f1a
; data inside code section at 0x6f1a -- 0x6f6c
0x6f1a:     ff ff ff c7 44 24 14 00  00 00 00 8d 9c 24 ec 00   |....D$.......$..|
0x6f2a:     00 00 c7 44 24 10 d6 01  00 00 c7 44 24 0c 39 a0   |...D$......D$.9.|
0x6f3a:     00 00 c7 44 24 08 43 a0  00 00 c7 44 24 04 80 a1   |...D$.C....D$...|
0x6f4a:     00 00 89 2c 24 e8 0c bd  00 00 8b 4c 24 54 8d 44   |...,$......L$T.D|
0x6f5a:     24 60 c7 44 24 04 80 a1  00 00 89 04 24 89 4c 24   |$`.D$.......$.L$|
0x6f6a:     08 e8                                              |..              |
; dynamically linked function: _ZN8CAddrMan7Select_Ei at 0x6f6c -- 0x6f6d
; data inside code section at 0x6f6d -- 0x6feb
0x6f6d:     ff ff ff 83 ec 04 8b 44  24 60 8d 9c 24 ec 00 00   |.......D$`..$...|
0x6f7d:     00 89 2c 24 89 84 24 54  01 00 00 8b 44 24 64 89   |..,$..$T....D$d.|
0x6f8d:     84 24 58 01 00 00 8b 44  24 68 89 84 24 5c 01 00   |.$X....D$h..$\..|
0x6f9d:     00 8b 44 24 6c 89 84 24  60 01 00 00 8b 44 24 70   |..D$l..$`....D$p|
0x6fad:     89 84 24 64 01 00 00 8b  44 24 74 89 84 24 68 01   |..$d....D$t..$h.|
0x6fbd:     00 00 8b 44 24 78 89 84  24 6c 01 00 00 8b 44 24   |...D$x..$l....D$|
0x6fcd:     7c 89 84 24 70 01 00 00  8b 84 24 80 00 00 00 89   ||..$p.....$.....|
0x6fdd:     84 24 74 01 00 00 8b 84  24 84 00 00 00 89         |.$t.....$.....  |
; function: function_6feb at 0x6feb -- 0x6ff9
0x6feb:     84 24 78                           	test byte ptr [eax + edi*2], ah
0x6fee:     01 00                              	add dword ptr [eax], eax
0x6ff0:     00 e8                              	add al, ch
0x6ff2:     ea b8 00 00 8d 94 24               	ljmp 0x2494:0x8d0000b8 <function_8d0000b8>
; data inside code section at 0x6ff9 -- 0x7001
0x6ff9:     54 01 00 00 89 14 24 e8                            |T.....$.        |
; dynamically linked function: _ZNK8CNetAddr7IsValidEv at 0x7001 -- 0x7002
; data inside code section at 0x7002 -- 0x700d
0x7002:     ff ff ff 84 c0 0f 85 95  01 00 00                  |...........     |
; function: function_700d at 0x700d -- 0x700e
; data inside code section at 0x700e -- 0x701c
0x700e:     7c 24 34 8d 9c 24 ec 00  00 00 89 3c 24 e8         ||$4..$.....<$.  |
; dynamically linked function: _ZNK8CNetAddr7IsValidEv at 0x701c -- 0x701d
; data inside code section at 0x701d -- 0x7076
0x701d:     ff ff ff 84 c0 74 23 8d  9c 24 ec 00 00 00 c7 44   |.....t#..$.....D|
0x702d:     24 0c 00 00 00 00 c7 44  24 08 00 00 00 00 89 5c   |$......D$......\|
0x703d:     24 04 89 3c 24 e8 a9 f2  ff ff 8b 54 24 40 8b 42   |$..<$......T$@.B|
0x704d:     08 89 14 24 89 44 24 04  e8 06 d8 00 00 80 bc 24   |...$.D$........$|
0x705d:     f0 00 00 00 00 0f 84 d1  fc ff ff 8b 9c 24 ec 00   |.............$..|
0x706d:     00 00 8d 73 48 89 34 24  e8                        |...sH.4$.       |
; dynamically linked function: pthread_mutex_lock at 0x7076 -- 0x7077
; data inside code section at 0x7077 -- 0x708a
0x7077:     ff ff ff 85 c0 0f 85 b9  03 00 00 83 43 60 01 89   |............C`..|
0x7087:     34 24 e8                                           |4$.             |
; dynamically linked function: pthread_mutex_unlock at 0x708a -- 0x708b
; data inside code section at 0x708b -- 0x709a
0x708b:     ff ff ff 85 c0 0f 85 a0  03 00 00 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_lock at 0x709a -- 0x709b
; data inside code section at 0x709b -- 0x70ad
0x709b:     ff ff ff 85 c0 0f 85 74  03 00 00 8d 43 18 89 04   |.......t....C...|
0x70ab:     24 e8                                              |$.              |
; dynamically linked function: pthread_cond_signal at 0x70ad -- 0x70ae
; data inside code section at 0x70ae -- 0x70bd
0x70ae:     ff ff ff 85 c0 0f 85 5c  03 00 00 89 1c 24 e8      |.......\.....$. |
; dynamically linked function: pthread_mutex_unlock at 0x70bd -- 0x70be
; data inside code section at 0x70be -- 0x70c0
0x70be:     ff ff                                              |..              |
; function: function_70c0 at 0x70c0 -- 0x70d6
0x70c0:     ff 85 c0 0f 85 44                  	inc dword ptr [ebp + 0x44850fc0]
0x70c6:     03 00                              	add eax, dword ptr [eax]
0x70c8:     00 c6                              	add dh, al
0x70ca:     84 24 f0                           	test byte ptr [eax + esi*8], ah
0x70cd:     00 00                              	add byte ptr [eax], al
0x70cf:     00 00                              	add byte ptr [eax], al
0x70d1:     e9 63 fc ff ff                     	jmp 0x6d39 <function_6d39>
; data inside code section at 0x70d6 -- 0x70f4
0x70d6:     8d 84 24 2a 01 00 00 8d  9c 24 18 01 00 00 89 44   |..$*.....$.....D|
0x70e6:     24 08 c7 44 24 04 54 a3  00 00 89 1c 24 e8         |$..D$.T.....$.  |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x70f4 -- 0x70f5
; data inside code section at 0x70f5 -- 0x711b
0x70f5:     ff ff ff 89 5c 24 04 c7  04 24 00 00 00 00 e8 f8   |....\$...$......|
0x7105:     46 01 00 8b 50 04 2b 10  89 1c 24 c1 fa 02 85 d2   |F...P.+...$.....|
0x7115:     0f 95 c0 89 c7 e8                                  |......          |
; dynamically linked function: _ZNSsD1Ev at 0x711b -- 0x711c
; data inside code section at 0x711c -- 0x711f
0x711c:     ff ff ff                                           |...             |
; function: function_711f at 0x711f -- 0x7124
0x711f:     e9 1a f8 ff ff                     	jmp 0x693e <function_693e>
; data inside code section at 0x7124 -- 0x7125
0x7124:     89                                                 |.               |
; function: function_7125 at 0x7125 -- 0x7126
0x7125:     c3                                 	ret 
; data inside code section at 0x7126 -- 0x7139
0x7126:     8d 94 24 fc 00 00 00 89  14 24 e8 5b ab 00 00 89   |..$......$.[....|
0x7136:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x7139 -- 0x713a
; data inside code section at 0x713a -- 0x7143
0x713a:     ff ff ff 89 c7 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x7143 -- 0x7144
; data inside code section at 0x7144 -- 0x7147
0x7144:     ff ff ff                                           |...             |
; function: function_7147 at 0x7147 -- 0x7148
; data inside code section at 0x7148 -- 0x714b
0x7148:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x714b -- 0x714c
; data inside code section at 0x714c -- 0x714f
0x714c:     ff ff ff                                           |...             |
; function: function_714f at 0x714f -- 0x7154
0x714f:     e9 97 f7 ff ff                     	jmp 0x68eb <function_68eb>
; function: function_7154 at 0x7154 -- 0x7158
0x7154:     89 c7                              	mov edi, eax
0x7156:     eb ef                              	jmp 0x7147 <function_7147>
; data inside code section at 0x7158 -- 0x7165
0x7158:     05 84 01 00 00 89 44 24  04 89 34 24 e8            |......D$..4$.   |
; dynamically linked function: _ZNK8CNetAddr8GetGroupEv at 0x7165 -- 0x7166
; data inside code section at 0x7166 -- 0x7194
0x7166:     ff ff ff 83 ec 04 8b 4c  24 40 8d 84 24 90 00 00   |.......L$@..$...|
0x7176:     00 89 74 24 08 89 04 24  89 4c 24 04 e8 19 0f 01   |..t$...$.L$.....|
0x7186:     00 8b 06 83 ec 04 85 c0  74 08 89 04 24 e8         |........t...$.  |
; dynamically linked function: _ZdlPv at 0x7194 -- 0x7195
; data inside code section at 0x7195 -- 0x7197
0x7195:     ff ff                                              |..              |
; function: function_7197 at 0x7197 -- 0x71a2
0x7197:     ff 83 44 24 38 01                  	inc dword ptr [ebx + 0x1382444]
0x719d:     e9 1a fd ff ff                     	jmp 0x6ebc <function_6ebc>
; data inside code section at 0x71a2 -- 0x71bf
0x71a2:     8d 8c 24 54 01 00 00 8d  84 24 d4 00 00 00 89 4c   |..$T.....$.....L|
0x71b2:     24 04 8d 9c 24 ec 00 00  00 89 04 24 e8            |$...$......$.   |
; dynamically linked function: _ZNK8CNetAddr8GetGroupEv at 0x71bf -- 0x71c0
; data inside code section at 0x71c0 -- 0x71c2
0x71c0:     ff ff                                              |..              |
; function: function_71c2 at 0x71c2 -- 0x7200
0x71c2:     ff 83 ec 04 8b 54                  	inc dword ptr [ebx + 0x548b04ec]
0x71c8:     24 40                              	and al, 0x40
0x71ca:     8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0x71cd:     85 db                              	test ebx, ebx
0x71cf:     0f 84 d0 00 00 00                  	je 0x72a5 <function_72a5>
0x71d5:     8b 8c 24 d4 00 00 00               	mov ecx, dword ptr [esp + 0xd4]
0x71dc:     8b 94 24 d8 00 00 00               	mov edx, dword ptr [esp + 0xd8]
0x71e3:     89 74 24 58                        	mov dword ptr [esp + 0x58], esi
0x71e7:     89 7c 24 5c                        	mov dword ptr [esp + 0x5c], edi
0x71eb:     89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0x71ef:     29 ca                              	sub edx, ecx
0x71f1:     8d 8c 24 a4 00 00 00               	lea ecx, [esp + 0xa4]
0x71f8:     89 d6                              	mov esi, edx
0x71fa:     89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x71fe:     eb 0b                              	jmp 0x720b <function_720b>
; function: function_7200 at 0x7200 -- 0x720b
0x7200:     89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x7204:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x7207:     85 db                              	test ebx, ebx
0x7209:     74 3f                              	je 0x724a
; function: function_720b at 0x720b -- 0x7229
0x720b:     8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x720e:     89 f0                              	mov eax, esi
0x7210:     8b 7b 14                           	mov edi, dword ptr [ebx + 0x14]
0x7213:     8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x7217:     89 14 24                           	mov dword ptr [esp], edx
0x721a:     29 d7                              	sub edi, edx
0x721c:     39 f7                              	cmp edi, esi
0x721e:     0f 46 c7                           	cmovbe eax, edi
0x7221:     89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x7225:     89 44 24 08                        	mov dword ptr [esp + 8], eax
; data inside code section at 0x7229 -- 0x722a
0x7229:     e8                                                 |.               |
; dynamically linked function: memcmp at 0x722a -- 0x722b
; data inside code section at 0x722b -- 0x7231
0x722b:     ff ff ff 39 f7 0f                                  |...9..          |
; function: function_7231 at 0x7231 -- 0x7235
0x7231:     92                                 	xchg eax, edx
0x7232:     c2 89 c1                           	ret 0xc189
; data inside code section at 0x7235 -- 0x7236
0x7235:     c1                                                 |.               |
; function: function_7236 at 0x7236 -- 0x723b
0x7236:     e9 1f 85 c0 89                     	jmp 0x89c0f75a <function_89c0f75a>
; data inside code section at 0x723b -- 0x724a
0x723b:     d0 0f 45 c1 84 c0 74 bd  8b 5b 0c 85 db 75 c1      |..E...t..[...u. |
; function: function_724a at 0x724a -- 0x724b
; data inside code section at 0x724b -- 0x726d
0x724b:     44 24 2c 89 f2 39 44 24  44 8b 74 24 58 8b 7c 24   |D$,..9D$D.t$X.|$|
0x725b:     5c 74 47 8b 44 24 44 8b  48 10 8b 58 14 89 d0 89   |\tG.D$D.H..X....|
0x726b:     54 24                                              |T$              |
; function: function_726d at 0x726d -- 0x7274
0x726d:     28 89 4c 24 04 29                  	sub byte ptr [ecx + 0x2904244c], cl
0x7273:     cb                                 	retf 
; data inside code section at 0x7274 -- 0x7279
0x7274:     8b 4c 24 50 39                                     |.L$P9           |
; function: function_7279 at 0x7279 -- 0x727d
0x7279:     d3 0f                              	ror dword ptr [edi], cl
0x727b:     46                                 	inc esi
0x727c:     c3                                 	ret 
; data inside code section at 0x727d -- 0x7285
0x727d:     89 44 24 08 89 0c 24 e8                            |.D$...$.        |
; dynamically linked function: memcmp at 0x7285 -- 0x7286
; data inside code section at 0x7286 -- 0x7288
0x7286:     ff ff                                              |..              |
; function: function_7288 at 0x7288 -- 0x72a5
0x7288:     ff 8b 54 24 28 85                  	dec dword ptr [ebx - 0x7ad7dbac]
0x728e:     c0 0f 85                           	ror byte ptr [edi], 0x85
0x7291:     70 01                              	jo 0x7294
; data inside code section at 0x7293 -- 0x7294
0x7293:     00                                                 |.               |
0x7294:     00 39                              	add byte ptr [ecx], bh
0x7296:     d3 0f                              	ror dword ptr [edi], cl
0x7298:     97                                 	xchg eax, edi
0x7299:     c0 84 c0 75 07 bb 01 00            	rol byte ptr [eax + eax*8 + 0x1bb0775], 0
0x72a1:     00 00                              	add byte ptr [eax], al
0x72a3:     eb 14                              	jmp 0x72b9
; function: function_72a5 at 0x72a5 -- 0x72c7
0x72a5:     8d 84 24 54 01 00 00               	lea eax, [esp + 0x154]
0x72ac:     89 04 24                           	mov dword ptr [esp], eax
0x72af:     e8 3c 9f ff ff                     	call 0x11f0 <_Z7IsLocalRK8CService>
0x72b4:     84 c0                              	test al, al
0x72b6:     0f 95 c3                           	setne bl
0x72b9:     8b 84 24 d4 00 00 00               	mov eax, dword ptr [esp + 0xd4]
0x72c0:     85 c0                              	test eax, eax
0x72c2:     74 08                              	je 0x72cc <function_72cc>
0x72c4:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x72c7 -- 0x72c8
0x72c7:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x72c8 -- 0x72c9
; data inside code section at 0x72c9 -- 0x72cc
0x72c9:     ff ff ff                                           |...             |
; function: function_72cc at 0x72cc -- 0x7337
0x72cc:     84 db                              	test bl, bl
0x72ce:     0f 85 39 fd ff ff                  	jne 0x700d <function_700d>
0x72d4:     83 44 24 38 01                     	add dword ptr [esp + 0x38], 1
0x72d9:     83 7c 24 38 65                     	cmp dword ptr [esp + 0x38], 0x65
0x72de:     0f 84 29 fd ff ff                  	je 0x700d <function_700d>
0x72e4:     8d 84 24 54 01 00 00               	lea eax, [esp + 0x154]
0x72eb:     89 04 24                           	mov dword ptr [esp], eax
0x72ee:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
0x72f5:     e8 a6 9a ff ff                     	call 0xda0 <_Z9IsLimitedRK8CNetAddr>
0x72fa:     84 c0                              	test al, al
0x72fc:     0f 85 05 fc ff ff                  	jne 0x6f07 <function_6f07>
0x7302:     83 7c 24 38 1d                     	cmp dword ptr [esp + 0x38], 0x1d
0x7307:     7f 1d                              	jg 0x7326 <function_72cc+0x5a>
0x7309:     89 f0                              	mov eax, esi
0x730b:     89 fa                              	mov edx, edi
0x730d:     2b 84 24 74 01 00 00               	sub eax, dword ptr [esp + 0x174]
0x7314:     1b 94 24 78 01 00 00               	sbb edx, dword ptr [esp + 0x178]
0x731b:     83 fa 00                           	cmp edx, 0
0x731e:     0f 8c e3 fb ff ff                  	jl 0x6f07 <function_6f07>
0x7324:     7e 52                              	jle 0x7378 <function_7378>
0x7326:     8d 94 24 54 01 00 00               	lea edx, [esp + 0x154]
0x732d:     89 14 24                           	mov dword ptr [esp], edx
0x7330:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
; data inside code section at 0x7337 -- 0x7338
0x7337:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService7GetPortEv at 0x7338 -- 0x7339
; data inside code section at 0x7339 -- 0x733b
0x7339:     ff ff                                              |..              |
; function: function_733b at 0x733b -- 0x733e
0x733b:     ff 66 89                           	jmp dword ptr [esi - 0x77]
; data inside code section at 0x733e -- 0x7349
0x733e:     44 24 44 8d 9c 24 ec 00  00 00 e8                  |D$D..$.....     |
; dynamically linked function: _Z6Paramsv at 0x7349 -- 0x734a
; data inside code section at 0x734a -- 0x734c
0x734a:     ff ff                                              |..              |
; function: function_734c at 0x734c -- 0x7378
0x734c:     ff 89 c2 0f b7 44                  	dec dword ptr [ecx + 0x44b70fc2]
0x7352:     24 44                              	and al, 0x44
0x7354:     3b 42 34                           	cmp eax, dword ptr [edx + 0x34]
0x7357:     74 0b                              	je 0x7364 <function_734c+0x18>
0x7359:     83 7c 24 38 31                     	cmp dword ptr [esp + 0x38], 0x31
0x735e:     0f 8e a3 fb ff ff                  	jle 0x6f07 <function_6f07>
0x7364:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x7368:     b9 0a 00 00 00                     	mov ecx, 0xa
0x736d:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x7371:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x7373:     e9 95 fc ff ff                     	jmp 0x700d <function_700d>
; function: function_7378 at 0x7378 -- 0x7385
0x7378:     3d 57 02 00 00                     	cmp eax, 0x257
0x737d:     0f 86 84 fb ff ff                  	jbe 0x6f07 <function_6f07>
0x7383:     eb a1                              	jmp 0x7326
; data inside code section at 0x7385 -- 0x7396
0x7385:     8b 94 24 d4 00 00 00 89  c6 85 d2 74 08 89 14 24   |..$........t...$|
0x7395:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x7396 -- 0x7397
; data inside code section at 0x7397 -- 0x73a1
0x7397:     ff ff ff 8d 9c 24 ec 00  00 00                     |.....$....      |
; function: function_73a1 at 0x73a1 -- 0x73a2
; data inside code section at 0x73a2 -- 0x73b8
0x73a2:     84 24 a8 00 00 00 8b 4c  24 40 89 44 24 04 89 0c   |.$.....L$@.D$...|
0x73b2:     24 e8 a8 d4 00 00                                  |$.....          |
; function: function_73b8 at 0x73b8 -- 0x73b9
; data inside code section at 0x73b9 -- 0x73c4
0x73b9:     1c 24 e8 90 a8 00 00 89  34 24 e8                  |.$......4$.     |
; dynamically linked function: _Unwind_Resume at 0x73c4 -- 0x73c5
; data inside code section at 0x73c5 -- 0x73d9
0x73c5:     ff ff ff 8b 94 24 c8 00  00 00 89 c6 85 d2 74 08   |.....$........t.|
0x73d5:     89 14 24 e8                                        |..$.            |
; dynamically linked function: _ZdlPv at 0x73d9 -- 0x73da
; data inside code section at 0x73da -- 0x73dd
0x73da:     ff ff ff                                           |...             |
; function: function_73dd at 0x73dd -- 0x73ee
0x73dd:     89 2c 24                           	mov dword ptr [esp], ebp
0x73e0:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
0x73e7:     e8 f4 b4 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x73ec:     eb b3                              	jmp 0x73a1 <function_73a1>
; function: function_73ee at 0x73ee -- 0x7401
0x73ee:     89 c6                              	mov esi, eax
0x73f0:     89 2c 24                           	mov dword ptr [esp], ebp
0x73f3:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
0x73fa:     e8 e1 b4 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x73ff:     eb a0                              	jmp 0x73a1 <function_73a1>
; function: function_7401 at 0x7401 -- 0x7405
0x7401:     89 c6                              	mov esi, eax
0x7403:     eb d8                              	jmp 0x73dd <function_73dd>
; function: function_7405 at 0x7405 -- 0x740d
0x7405:     c1 e8 1f                           	shr eax, 0x1f
0x7408:     e9 8d fe ff ff                     	jmp 0x729a
; data inside code section at 0x740d -- 0x741f
0x740d:     8d 76 00 e8 91 6c 00 00  e8 5c 6d 00 00 e8 53 6c   |.v...l...\m...Sl|
0x741d:     00 00                                              |..              |
; function: function_741f at 0x741f -- 0x7429
0x741f:     8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x7426:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7429 -- 0x742a
0x7429:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x742a -- 0x742b
; data inside code section at 0x742b -- 0x742e
0x742b:     ff ff ff                                           |...             |
; function: function_742e at 0x742e -- 0x746c
0x742e:     85 c0                              	test eax, eax
0x7430:     0f 84 90 f9 ff ff                  	je 0x6dc6
0x7436:     e8 d3 6c 00 00                     	call 0xe10e <_ZN5boost5mutex6unlockEv.part.28>
0x743b:     8d 9c 24 0c 01 00 00               	lea ebx, [esp + 0x10c]
0x7442:     89 84 24 10 01 00 00               	mov dword ptr [esp + 0x110], eax
0x7449:     c7 84 24 0c 01 00 00 20 78 02 00   	mov dword ptr [esp + 0x10c], 0x27820
0x7454:     89 1c 24                           	mov dword ptr [esp], ebx
0x7457:     e8 34 a5 00 00                     	call 0x11990 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x745c:     8d bc 24 a0 00 00 00               	lea edi, [esp + 0xa0]
0x7463:     89 7c 24 40                        	mov dword ptr [esp + 0x40], edi
0x7467:     e9 57 fa ff ff                     	jmp 0x6ec3
; data inside code section at 0x746c -- 0x748d
0x746c:     8d 9c 24 04 01 00 00 89  84 24 08 01 00 00 c7 84   |..$......$......|
0x747c:     24 04 01 00 00 20 78 02  00 89 1c 24 e8 03 a5 00   |$.... x....$....|
0x748c:     00                                                 |.               |
; function: function_748d at 0x748d -- 0x7494
0x748d:     31 ff                              	xor edi, edi
0x748f:     e9 aa f4 ff ff                     	jmp 0x693e <function_693e>
; data inside code section at 0x7494 -- 0x7495
0x7494:     e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x7495 -- 0x7496
; data inside code section at 0x7496 -- 0x7499
0x7496:     ff ff ff                                           |...             |
; function: function_7499 at 0x7499 -- 0x749a
; data inside code section at 0x749a -- 0x74a7
0x749a:     c6 89 1c 24 e8 ad 75 00  00 89 34 24 e8            |...$..u...4$.   |
; dynamically linked function: _Unwind_Resume at 0x74a7 -- 0x74a8
; data inside code section at 0x74a8 -- 0x74ac
0x74a8:     ff ff ff 89                                        |....            |
; function: function_74ac at 0x74ac -- 0x74ad
0x74ac:     c3                                 	ret 
; data inside code section at 0x74ad -- 0x74ae
0x74ad:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x74ae -- 0x74af
; data inside code section at 0x74af -- 0x74c5
0x74af:     ff ff ff 8b 94 24 bc 00  00 00 85 d2 0f 84 de f7   |.....$..........|
0x74bf:     ff ff 89 14 24 e8                                  |....$.          |
; dynamically linked function: _ZdlPv at 0x74c5 -- 0x74c6
; data inside code section at 0x74c6 -- 0x74c9
0x74c6:     ff ff ff                                           |...             |
; function: function_74c9 at 0x74c9 -- 0x74ce
0x74c9:     e9 d1 f7 ff ff                     	jmp 0x6c9f <function_6c9f>
; data inside code section at 0x74ce -- 0x74d1
0x74ce:     66 90 e8                                           |f..             |
; dynamically linked function: _Z7GetTimev at 0x74d1 -- 0x74d2
; data inside code section at 0x74d2 -- 0x74d4
0x74d2:     ff ff                                              |..              |
; function: function_74d4 at 0x74d4 -- 0x74d6
0x74d4:     ff 2b                              	ljmp [ebx]
; data inside code section at 0x74d6 -- 0x74e8
0x74d6:     44 24 48 1b 54 24 4c 83  fa 00 0f 8c 03 f9 ff ff   |D$H.T$L.........|
0x74e6:     0f 8e                                              |..              |
; function: function_74e8 at 0x74e8 -- 0x74ed
0x74e8:     e9 00 00 00 80                     	jmp 0x800074ed <function_800074ed>
; data inside code section at 0x74ed -- 0x7501
0x74ed:     3d 34 a3 00 00 00 0f 85  f0 f8 ff ff c7 04 24 34   |=4............$4|
0x74fd:     dd 00 00 e8                                        |....            |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x7501 -- 0x7502
; data inside code section at 0x7502 -- 0x750f
0x7502:     ff ff ff 8d 8c 24 7c 01  00 00 c7 44 24            |.....$|....D$   |
; function: function_750f at 0x750f -- 0x7519
0x750f:     08 00                              	or byte ptr [eax], al
0x7511:     00 00                              	add byte ptr [eax], al
0x7513:     00 c7                              	add bh, al
0x7515:     44                                 	inc esp
0x7516:     24 04                              	and al, 4
0x7518:     c3                                 	ret 
; data inside code section at 0x7519 -- 0x7520
0x7519:     a2 00 00 89 0c 24 e8                               |.....$.         |
; dynamically linked function: _ZN8CNetAddrC1EPKcb at 0x7520 -- 0x7521
; data inside code section at 0x7521 -- 0x7525
0x7521:     ff ff ff e8                                        |....            |
; dynamically linked function: _Z6Paramsv at 0x7525 -- 0x7526
; data inside code section at 0x7526 -- 0x7577
0x7526:     ff ff ff 8b 10 89 04 24  ff 52 0c 8d ac 24 f4 00   |.......$.R...$..|
0x7536:     00 00 89 c7 c7 44 24 14  00 00 00 00 c7 44 24 10   |.....D$......D$.|
0x7546:     af 01 00 00 c7 44 24 0c  39 a0 00 00 c7 44 24 08   |.....D$.9....D$.|
0x7556:     43 a0 00 00 c7 44 24 04  80 a1 00 00 89 2c 24 e8   |C....D$......,$.|
0x7566:     f6 b6 00 00 8b 1f 39 5f  04 0f 84 90 00 00 00 31   |......9_.......1|
0x7576:     f6                                                 |.               |
; function: function_7577 at 0x7577 -- 0x7578
; data inside code section at 0x7578 -- 0x759e
0x7578:     84 24 7c 01 00 00 c7 44  24 0c 00 00 00 00 c7 44   |.$|....D$......D|
0x7588:     24 10 00 00 00 00 89 44  24 08 89 5c 24 04 c7 04   |$......D$..\$...|
0x7598:     24 80 a1 00 00 e8                                  |$.....          |
; dynamically linked function: _ZN8CAddrMan4Add_ERK8CAddressRK8CNetAddrx at 0x759e -- 0x759f
; data inside code section at 0x759f -- 0x75a1
0x759f:     ff ff                                              |..              |
; function: function_75a1 at 0x75a1 -- 0x7633
0x75a1:     ff 0f                              	dec dword ptr [edi]
0x75a3:     b6 c0                              	mov dh, 0xc0
0x75a5:     83 c3 28                           	add ebx, 0x28
0x75a8:     01 c6                              	add esi, eax
0x75aa:     3b 5f 04                           	cmp ebx, dword ptr [edi + 4]
0x75ad:     75 c8                              	jne 0x7577 <function_7577>
0x75af:     89 2c 24                           	mov dword ptr [esp], ebp
0x75b2:     e8 29 b3 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x75b7:     85 f6                              	test esi, esi
0x75b9:     75 57                              	jne 0x7612 <function_75a1+0x71>
0x75bb:     c6 05 34 a3 00 00 01               	mov byte ptr [0xa334], 1
0x75c2:     e9 22 f8 ff ff                     	jmp 0x6de9 <function_6de9>
0x75c7:     89 c6                              	mov esi, eax
0x75c9:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
0x75d0:     e9 e3 fd ff ff                     	jmp 0x73b8 <function_73b8>
0x75d5:     83 f8 3c                           	cmp eax, 0x3c
0x75d8:     0f 86 0b f8 ff ff                  	jbe 0x6de9 <function_6de9>
0x75de:     e9 09 ff ff ff                     	jmp 0x74ec
0x75e3:     89 c6                              	mov esi, eax
0x75e5:     89 2c 24                           	mov dword ptr [esp], ebp
0x75e8:     8d 9c 24 ec 00 00 00               	lea ebx, [esp + 0xec]
0x75ef:     e8 ec b2 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x75f4:     e9 bf fd ff ff                     	jmp 0x73b8 <function_73b8>
0x75f9:     89 c6                              	mov esi, eax
0x75fb:     e9 a1 fd ff ff                     	jmp 0x73a1 <function_73a1>
0x7600:     e9 94 fe ff ff                     	jmp 0x7499 <function_7499>
0x7605:     89 2c 24                           	mov dword ptr [esp], ebp
0x7608:     e8 d3 b2 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x760d:     8d 76 00                           	lea esi, [esi]
0x7610:     eb a9                              	jmp 0x75bb <function_75a1+0x1a>
0x7612:     8d 9c 24 24 01 00 00               	lea ebx, [esp + 0x124]
0x7619:     8b 3d 30 a2 00 00                  	mov edi, dword ptr [0xa230] ; "s (%d -> %d)\n"
0x761f:     8d 94 24 7c 01 00 00               	lea edx, [esp + 0x17c]
0x7626:     8b 2d 20 a2 00 00                  	mov ebp, dword ptr [0xa220]
0x762c:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x7630:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x7633 -- 0x7634
0x7633:     e8                                                 |.               |
; dynamically linked function: _ZNK8CNetAddr8ToStringEv at 0x7634 -- 0x7635
; data inside code section at 0x7635 -- 0x7658
0x7635:     ff ff ff 50 8b 84 24 24  01 00 00 89 7c 24 10 89   |...P..$$....|$..|
0x7645:     6c 24 0c 89 44 24 08 89  74 24 04 c7 04 24 48 da   |l$..D$..t$...$H.|
0x7655:     00 00 e8                                           |...             |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x7658 -- 0x7659
; data inside code section at 0x7659 -- 0x7660
0x7659:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x7660 -- 0x7661
; data inside code section at 0x7661 -- 0x7664
0x7661:     ff ff ff                                           |...             |
; function: function_7664 at 0x7664 -- 0x7669
0x7664:     e9 52 ff ff ff                     	jmp 0x75bb
; data inside code section at 0x7669 -- 0x7676
0x7669:     89 1c 24 89 c6 8d 9c 24  ec 00 00 00 e8            |..$....$.....   |
; dynamically linked function: _ZNSsD1Ev at 0x7676 -- 0x7677
; data inside code section at 0x7677 -- 0x767a
0x7677:     ff ff ff                                           |...             |
; function: function_767a at 0x767a -- 0x767f
0x767a:     e9 39 fd ff ff                     	jmp 0x73b8 <function_73b8>
; data inside code section at 0x767f -- 0x7680
0x767f:     90                                                 |.               |
; function: _Z26ThreadOpenAddedConnectionsv at 0x7680 -- 0x76ea
0x7680:     55                                 	push ebp
0x7681:     57                                 	push edi
0x7682:     56                                 	push esi
0x7683:     53                                 	push ebx
0x7684:     81 ec 2c 01 00 00                  	sub esp, 0x12c
0x768a:     8d 6c 24 60                        	lea ebp, [esp + 0x60]
0x768e:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x7694:     89 84 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], eax
0x769b:     31 c0                              	xor eax, eax
0x769d:     8d 9c 24 a8 00 00 00               	lea ebx, [esp + 0xa8]
0x76a4:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x76ac:     c7 44 24 10 47 05 00 00            	mov dword ptr [esp + 0x10], 0x547
0x76b4:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x76bc:     c7 44 24 08 5d a3 00 00            	mov dword ptr [esp + 8], 0xa35d ; "cs_vAddedNodes"
0x76c4:     c7 44 24 04 00 9f 00 00            	mov dword ptr [esp + 4], 0x9f00 ; "!pthread_mutex_destroy(&m)"
0x76cc:     89 2c 24                           	mov dword ptr [esp], ebp
0x76cf:     e8 8c b5 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x76d4:     8d 84 24 b7 00 00 00               	lea eax, [esp + 0xb7]
0x76db:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x76df:     c7 44 24 04 6c a3 00 00            	mov dword ptr [esp + 4], 0xa36c ; "-addnode"
0x76e7:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x76ea -- 0x76eb
0x76ea:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x76eb -- 0x76ec
; data inside code section at 0x76ec -- 0x7713
0x76ec:     ff ff ff 89 5c 24 04 c7  04 24 00 00 00 00 e8 01   |....\$...$......|
0x76fc:     41 01 00 89 44 24 04 c7  04 24 54 9f 00 00 e8 e1   |A...D$...$T.....|
0x770c:     b8 00 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x7713 -- 0x7714
; data inside code section at 0x7714 -- 0x7720
0x7714:     ff ff ff 89 2c 24 e8 c1  b1 00 00 e8               |....,$......    |
; dynamically linked function: _Z13HaveNameProxyv at 0x7720 -- 0x7721
; data inside code section at 0x7721 -- 0x773b
0x7721:     ff ff ff 84 c0 0f 84 af  02 00 00 8d 54 24 68 89   |............T$h.|
0x7731:     54 24 34 8d b4 24 80 00  00 00                     |T$4..$....      |
; function: function_773b at 0x773b -- 0x773c
; data inside code section at 0x773c -- 0x774d
0x773c:     44 24 34 8d 94 24 ac 00  00 00 c7 84 24 ac 00 00   |D$4..$......$...|
0x774c:     00                                                 |.               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x774d -- 0x775c
; data inside code section at 0x775c -- 0x775d
0x775c:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x775d -- 0x775e
; data inside code section at 0x775e -- 0x7795
0x775e:     ff ff ff c7 44 24 14 00  00 00 00 c7 44 24 10 4f   |....D$......D$.O|
0x776e:     05 00 00 c7 44 24 0c 27  a0 00 00 c7 44 24 08 5d   |....D$.'....D$.]|
0x777e:     a3 00 00 c7 44 24 04 00  9f 00 00 89 2c 24 e8 cf   |....D$......,$..|
0x778e:     b4 00 00 a1 58 9f 00                               |....X..         |
; function: function_7795 at 0x7795 -- 0x77a2
0x7795:     00 8b 1d 54 9f 00                  	add byte ptr [ebx + 0x9f541d], cl
0x779b:     00 89 44 24 30 39                  	add byte ptr [ecx + 0x39302444], cl
0x77a1:     c3                                 	ret 
; data inside code section at 0x77a2 -- 0x77ac
0x77a2:     74 38 c7 04 24 0c 00 00  00 e8                     |t8..$.....      |
; dynamically linked function: _Znwj at 0x77ac -- 0x77ad
; data inside code section at 0x77ad -- 0x77bf
0x77ad:     ff ff ff 89 c7 83 c0 08  74 0c 89 5c 24 04 89 04   |........t..\$...|
0x77bd:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsC1ERKSs at 0x77bf -- 0x77c0
; data inside code section at 0x77c0 -- 0x77c2
0x77c0:     ff ff                                              |..              |
; function: function_77c2 at 0x77c2 -- 0x77c9
0x77c2:     ff 8b 54 24 34 83                  	dec dword ptr [ebx - 0x7ccbdbac]
0x77c8:     c3                                 	ret 
; data inside code section at 0x77c9 -- 0x77d2
0x77c9:     04 89 3c 24 89 54 24 04  e8                        |..<$.T$..       |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x77d2 -- 0x77d3
; data inside code section at 0x77d3 -- 0x77ea
0x77d3:     ff ff ff 39 5c 24 30 75  c8 89 2c 24 e8 fc b0 00   |...9\$0u..,$....|
0x77e3:     00 8b 54 24 34 8b 3a                               |..T$4.:         |
; function: function_77ea at 0x77ea -- 0x77eb
; data inside code section at 0x77eb -- 0x77f0
0x77eb:     7c 24 34 0f 84                                     ||$4..           |
; function: function_77f0 at 0x77f0 -- 0x77f3
0x77f0:     c2 01 00                           	ret 1
; data inside code section at 0x77f3 -- 0x77ff
0x77f3:     00 8d 84 24 b8 00 00 00  89 04 24 e8               |...$......$.    |
; dynamically linked function: _ZN8CAddressC1Ev at 0x77ff -- 0x7800
; data inside code section at 0x7800 -- 0x7828
0x7800:     ff ff ff 8b 1d 30 a3 00  00 c6 44 24 74 00 c6 84   |.....0....D$t...|
0x7810:     24 84 00 00 00 00 8d 43  48 89 5c 24 70 89 84 24   |$......CH.\$p..$|
0x7820:     80 00 00 00 89 04 24 e8                            |......$.        |
; dynamically linked function: pthread_mutex_lock at 0x7828 -- 0x7829
; data inside code section at 0x7829 -- 0x782b
0x7829:     ff ff                                              |..              |
; function: function_782b at 0x782b -- 0x78be
0x782b:     ff 85 c0 0f 85 1d                  	inc dword ptr [ebp + 0x1d850fc0]
0x7831:     01 00                              	add dword ptr [eax], eax
0x7833:     00 c6                              	add dh, al
0x7835:     84 24 84                           	test byte ptr [esp + eax*4], ah
0x7838:     00 00                              	add byte ptr [eax], al
0x783a:     00 01                              	add byte ptr [ecx], al
0x783c:     eb 0e                              	jmp 0x784c <function_782b+0x21>
; data inside code section at 0x783e -- 0x7840
0x783e:     66 90                                              |f.              |
0x7840:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x7844:     89 1c 24                           	mov dword ptr [esp], ebx
0x7847:     e8 f4 a8 00 00                     	call 0x12140 <_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE>
0x784c:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x784f:     85 c0                              	test eax, eax
0x7851:     7e ed                              	jle 0x7840 <function_782b+0x15>
0x7853:     83 e8 01                           	sub eax, 1
0x7856:     80 7e 04 00                        	cmp byte ptr [esi + 4], 0
0x785a:     89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x785d:     0f 85 b2 00 00 00                  	jne 0x7915 <function_7915>
0x7863:     c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x786b:     8b 47 08                           	mov eax, dword ptr [edi + 8]
0x786e:     8d 5c 24 70                        	lea ebx, [esp + 0x70]
0x7872:     8d 94 24 b8 00 00 00               	lea edx, [esp + 0xb8]
0x7879:     c6 44 24 74 01                     	mov byte ptr [esp + 0x74], 1
0x787e:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x7882:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x7886:     89 14 24                           	mov dword ptr [esp], edx
0x7889:     e8 62 ea ff ff                     	call 0x62f0 <_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb>
0x788e:     c7 04 24 f4 01 00 00               	mov dword ptr [esp], 0x1f4
0x7895:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x789d:     e8 ce 17 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x78a2:     80 7c 24 74 00                     	cmp byte ptr [esp + 0x74], 0
0x78a7:     75 07                              	jne 0x78b0 <function_782b+0x85>
0x78a9:     8b 3f                              	mov edi, dword ptr [edi]
0x78ab:     e9 3a ff ff ff                     	jmp 0x77ea <function_77ea>
0x78b0:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x78b4:     8d 53 48                           	lea edx, [ebx + 0x48]
0x78b7:     89 14 24                           	mov dword ptr [esp], edx
0x78ba:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
; data inside code section at 0x78be -- 0x78bf
0x78be:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x78bf -- 0x78c0
; data inside code section at 0x78c0 -- 0x78d7
0x78c0:     ff ff ff 8b 54 24 28 85  c0 0f 85 c6 00 00 00 83   |....T$(.........|
0x78d0:     43 60 01 89 14 24 e8                               |C`...$.         |
; dynamically linked function: pthread_mutex_unlock at 0x78d7 -- 0x78d8
; data inside code section at 0x78d8 -- 0x78e3
0x78d8:     ff ff ff 85 c0 75 4d 89  1c 24 e8                  |.....uM..$.     |
; dynamically linked function: pthread_mutex_lock at 0x78e3 -- 0x78e4
; data inside code section at 0x78e4 -- 0x78f6
0x78e4:     ff ff ff 85 c0 0f 85 9b  00 00 00 8d 43 18 89 04   |............C...|
0x78f4:     24 e8                                              |$.              |
; dynamically linked function: pthread_cond_signal at 0x78f6 -- 0x78f7
; data inside code section at 0x78f7 -- 0x7906
0x78f7:     ff ff ff 85 c0 0f 85 83  00 00 00 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_unlock at 0x7906 -- 0x7907
; data inside code section at 0x7907 -- 0x790a
0x7907:     ff ff ff                                           |...             |
; function: function_790a at 0x790a -- 0x7915
0x790a:     85 c0                              	test eax, eax
0x790c:     75 64                              	jne 0x7972 <function_7972>
0x790e:     c6 44 24 74 00                     	mov byte ptr [esp + 0x74], 0
0x7913:     eb 94                              	jmp 0x78a9
; function: function_7915 at 0x7915 -- 0x791f
0x7915:     8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x791c:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x791f -- 0x7920
0x791f:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x7920 -- 0x7921
; data inside code section at 0x7921 -- 0x792c
0x7921:     ff ff ff 85 c0 0f 84 37  ff ff ff                  |.......7...     |
; function: function_792c at 0x792c -- 0x792d
; data inside code section at 0x792d -- 0x793d
0x792d:     dd 67 00 00 89 c6 89 1c  24 89 f3 e8 13 a3 00 00   |.g......$.......|
; function: function_793d at 0x793d -- 0x794c
0x793d:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x7941:     89 04 24                           	mov dword ptr [esp], eax
0x7944:     e8 f7 b8 00 00                     	call 0x13240 <_ZNSt10_List_baseISsSaISsEED1Ev>
0x7949:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x794c -- 0x794d
0x794c:     e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x794d -- 0x794e
; data inside code section at 0x794e -- 0x7972
0x794e:     ff ff ff 8d 9c 24 88 00  00 00 89 84 24 8c 00 00   |.....$......$...|
0x795e:     00 c7 84 24 88 00 00 00  20 78 02 00 89 1c 24 e8   |...$.... x....$.|
0x796e:     1e a0 00 00                                        |....            |
; function: function_7972 at 0x7972 -- 0x7985
0x7972:     e8 2f 67 00 00                     	call 0xe0a6 <_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26>
0x7977:     89 c6                              	mov esi, eax
0x7979:     89 1c 24                           	mov dword ptr [esp], ebx
0x797c:     89 f3                              	mov ebx, esi
0x797e:     e8 cd 70 00 00                     	call 0xea50 <_ZN5boost10lock_errorD1Ev>
0x7983:     eb b8                              	jmp 0x793d <function_793d>
; function: function_7985 at 0x7985 -- 0x79db
0x7985:     e8 ec 67 00 00                     	call 0xe176 <_ZN5boost18condition_variable10notify_oneEv.part.32>
0x798a:     8d b6 00 00 00 00                  	lea esi, [esi]
0x7990:     e8 dd 66 00 00                     	call 0xe072 <_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25>
0x7995:     8d 9c 24 90 00 00 00               	lea ebx, [esp + 0x90]
0x799c:     89 84 24 94 00 00 00               	mov dword ptr [esp + 0x94], eax
0x79a3:     c7 84 24 90 00 00 00 20 78 02 00   	mov dword ptr [esp + 0x90], 0x27820
0x79ae:     89 1c 24                           	mov dword ptr [esp], ebx
0x79b1:     e8 da 9f 00 00                     	call 0x11990 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x79b6:     c7 04 24 c0 d4 01 00               	mov dword ptr [esp], 0x1d4c0
0x79bd:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x79c5:     e8 a6 16 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x79ca:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x79ce:     89 04 24                           	mov dword ptr [esp], eax
0x79d1:     e8 6a b8 00 00                     	call 0x13240 <_ZNSt10_List_baseISsSaISsEED1Ev>
0x79d6:     e9 60 fd ff ff                     	jmp 0x773b <function_773b>
; data inside code section at 0x79db -- 0x79f3
0x79db:     8d 54 24 68 8d 44 24 78  c7 44 24 40 00 00 00 00   |.T$h.D$x.D$@....|
0x79eb:     89 54 24 34 89 44 24 2c                            |.T$4.D$,        |
; function: function_79f3 at 0x79f3 -- 0x79f4
; data inside code section at 0x79f4 -- 0x7a05
0x79f4:     54 24 34 8d 84 24 b0 00  00 00 c7 84 24 b0 00 00   |T$4..$......$...|
0x7a04:     00                                                 |.               |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x7a05 -- 0x7a14
; data inside code section at 0x7a14 -- 0x7a15
0x7a14:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x7a15 -- 0x7a16
; data inside code section at 0x7a16 -- 0x7a18
0x7a16:     ff ff                                              |..              |
; function: function_7a18 at 0x7a18 -- 0x7a57
0x7a18:     ff c7                              	inc edi
0x7a1a:     44                                 	inc esp
0x7a1b:     24 14                              	and al, 0x14
0x7a1d:     00 00                              	add byte ptr [eax], al
0x7a1f:     00 00                              	add byte ptr [eax], al
0x7a21:     c7 44 24 10 61 05 00 00            	mov dword ptr [esp + 0x10], 0x561
0x7a29:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x7a31:     c7 44 24 08 5d a3 00 00            	mov dword ptr [esp + 8], 0xa35d ; "cs_vAddedNodes"
0x7a39:     c7 44 24 04 00 9f 00 00            	mov dword ptr [esp + 4], 0x9f00 ; "!pthread_mutex_destroy(&m)"
0x7a41:     89 2c 24                           	mov dword ptr [esp], ebp
0x7a44:     e8 17 b2 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x7a49:     8b 3d 58 9f 00 00                  	mov edi, dword ptr [0x9f58] ; "d_cond_destroy(&cond)"
0x7a4f:     8b 1d 54 9f 00 00                  	mov ebx, dword ptr [0x9f54] ; "hread_cond_destroy(&cond)"
0x7a55:     eb 33                              	jmp 0x7a8a <function_7a8a>
; data inside code section at 0x7a57 -- 0x7a58
0x7a57:     90                                                 |.               |
; function: function_7a58 at 0x7a58 -- 0x7a5f
0x7a58:     c7 04 24 0c 00 00 00               	mov dword ptr [esp], 0xc
; data inside code section at 0x7a5f -- 0x7a60
0x7a5f:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x7a60 -- 0x7a61
; data inside code section at 0x7a61 -- 0x7a73
0x7a61:     ff ff ff 89 c6 83 c0 08  74 0c 89 5c 24 04 89 04   |........t..\$...|
0x7a71:     24 e8                                              |$.              |
; dynamically linked function: _ZNSsC1ERKSs at 0x7a73 -- 0x7a74
; data inside code section at 0x7a74 -- 0x7a76
0x7a74:     ff ff                                              |..              |
; function: function_7a76 at 0x7a76 -- 0x7a7d
0x7a76:     ff 8b 54 24 34 83                  	dec dword ptr [ebx - 0x7ccbdbac]
0x7a7c:     c3                                 	ret 
; data inside code section at 0x7a7d -- 0x7a86
0x7a7d:     04 89 34 24 89 54 24 04  e8                        |..4$.T$..       |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x7a86 -- 0x7a87
; data inside code section at 0x7a87 -- 0x7a8a
0x7a87:     ff ff ff                                           |...             |
; function: function_7a8a at 0x7a8a -- 0x7ac6
0x7a8a:     39 df                              	cmp edi, ebx
0x7a8c:     75 ca                              	jne 0x7a58 <function_7a58>
0x7a8e:     89 2c 24                           	mov dword ptr [esp], ebp
0x7a91:     8d 74 24 48                        	lea esi, [esp + 0x48]
0x7a95:     e8 46 ae 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x7a9a:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x7a9e:     8d 44 24 78                        	lea eax, [esp + 0x78]
0x7aa2:     89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x7aa6:     89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x7aaa:     8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x7aae:     8b 12                              	mov edx, dword ptr [edx]
0x7ab0:     39 c2                              	cmp edx, eax
0x7ab2:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x7ab6:     0f 84 e8 01 00 00                  	je 0x7ca4 <function_7ca4>
0x7abc:     8d 84 24 0a 01 00 00               	lea eax, [esp + 0x10a]
0x7ac3:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7ac6 -- 0x7ac7
0x7ac6:     e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1Ev at 0x7ac7 -- 0x7ac8
; data inside code section at 0x7ac8 -- 0x7ad6
0x7ac8:     ff ff ff c7 44 24 54 00  00 00 00 0f b6 1d         |....D$T.......  |
; dynamically linked function: fNameLookup at 0x7ad6 -- 0x7aea
; data inside code section at 0x7aea -- 0x7aeb
0x7aea:     e8                                                 |.               |
; dynamically linked function: _Z6Paramsv at 0x7aeb -- 0x7aec
; data inside code section at 0x7aec -- 0x7b18
0x7aec:     ff ff ff 0f b6 db 8b 54  24 30 c7 44 24 10 00 00   |.......T$0.D$...|
0x7afc:     00 00 89 5c 24 0c 8b 40  34 89 44 24 08 8d 44 24   |...\$..@4.D$..D$|
0x7b0c:     54 89 44 24 04 8b 42 08  89 04 24 e8               |T.D$..B...$.    |
; dynamically linked function: _Z6LookupPKcRSt6vectorI8CServiceSaIS2_EEibj at 0x7b18 -- 0x7b19
; data inside code section at 0x7b19 -- 0x7b2c
0x7b19:     ff ff ff 84 c0 0f 84 5a  01 00 00 c7 04 24 14 00   |.......Z.....$..|
0x7b29:     00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x7b2c -- 0x7b2d
; data inside code section at 0x7b2d -- 0x7b52
0x7b2d:     ff ff ff 83 f8 f8 89 c7  0f 84 d0 00 00 00 8b 5c   |...............\|
0x7b3d:     24 58 8b 44 24 54 c7 47  08 00 00 00 00 c7 47 0c   |$X.D$T.G......G.|
0x7b4d:     00 00 00 00 89                                     |.....           |
; function: function_7b52 at 0x7b52 -- 0x7b57
0x7b52:     da 29                              	fisubr dword ptr [ecx]
0x7b54:     c2 d1 fa                           	ret 0xfad1
; data inside code section at 0x7b57 -- 0x7b5a
0x7b57:     89 44 24                                           |.D$             |
; function: function_7b5a at 0x7b5a -- 0x7b5f
0x7b5a:     3c 69                              	cmp al, 0x69
0x7b5c:     c2 39 8e                           	ret 0x8e39
; data inside code section at 0x7b5f -- 0x7b85
0x7b5f:     e3 38 c7 47 10 00 00 00  00 85 c0 0f 84 e0 02 00   |.8.G............|
0x7b6f:     00 3d 8e e3 38 0e 0f 87  87 04 00 00 01 d2 89 54   |.=..8..........T|
0x7b7f:     24 44 89 14 24 e8                                  |$D..$.          |
; dynamically linked function: _Znwj at 0x7b85 -- 0x7b86
; data inside code section at 0x7b86 -- 0x7b99
0x7b86:     ff ff ff 8b 54 24 54 8b  5c 24 58 89 44 24 38 89   |....T$T.\$X.D$8.|
0x7b96:     54 24 3c                                           |T$<             |
; function: function_7b99 at 0x7b99 -- 0x7b9a
; data inside code section at 0x7b9a -- 0x7bdb
0x7b9a:     44 24 38 89 47 08 89 47  0c 03 44 24 44 3b 5c 24   |D$8.G..G..D$D;\$|
0x7baa:     3c 89 47 10 74 54 8b 44  24 3c 8b 54 24 38 85 d2   |<.G.tT.D$<.T$8..|
0x7bba:     74 1e 8b 08 89 0a 8b 48  04 89 4a 04 8b 48 08 89   |t......H..J..H..|
0x7bca:     4a 08 8b 48 0c 89 4a 0c  0f b7 48 10 66 89 4a 10   |J..H..J...H.f.J.|
0x7bda:     83                                                 |.               |
; function: function_7bdb at 0x7bdb -- 0x7be1
0x7bdb:     c0 12 83                           	rcl byte ptr [edx], 0x83
0x7bde:     c2 12 39                           	ret 0x3912
; data inside code section at 0x7be1 -- 0x7be7
0x7be1:     d8 75 d4 8b 54 24                                  |.u..T$          |
; function: function_7be7 at 0x7be7 -- 0x7bec
0x7be7:     3c 83                              	cmp al, 0x83
0x7be9:     c2 12 29                           	ret 0x2912
; data inside code section at 0x7bec -- 0x7c17
0x7bec:     d0 8b 54 24 38 d1 e8 69  c0 39 8e e3 38 8d 04 c0   |..T$8..i.9..8...|
0x7bfc:     8d 54 42 12 89 54 24 38  8b 44 24 38 89 47 0c 8d   |.TB..T$8.D$8.G..|
0x7c0c:     54 24 78 89 54 24 04 89  3c 24 e8                  |T$x.T$..<$.     |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x7c17 -- 0x7c18
; data inside code section at 0x7c18 -- 0x7c6d
0x7c18:     ff ff ff c7 44 24 14 00  00 00 00 c7 44 24 10 6e   |....D$......D$.n|
0x7c28:     05 00 00 c7 44 24 0c 27  a0 00 00 c7 44 24 08 75   |....D$.'....D$.u|
0x7c38:     a3 00 00 c7 44 24 04 60  9f 00 00 89 2c 24 e8 15   |....D$.`....,$..|
0x7c48:     b0 00 00 8b 5c 24 54 8b  7c 24 58 39 fb 74 1f 90   |....\$T.|$X9.t..|
0x7c58:     89 5c 24 08 c7 44 24 04  b4 9f 00 00 89 34 24 e8   |.\$..D$......4$.|
0x7c68:     c4 06 01 00 83                                     |.....           |
; function: function_7c6d at 0x7c6d -- 0x7c6e
0x7c6d:     c3                                 	ret 
; data inside code section at 0x7c6e -- 0x7c8a
0x7c6e:     12 83 ec 04 39 df 75 e2  89 2c 24 e8 62 ac 00 00   |....9.u..,$.b...|
0x7c7e:     8b 44 24 54 85 c0 74 08  89 04 24 e8               |.D$T..t...$.    |
; dynamically linked function: _ZdlPv at 0x7c8a -- 0x7c8b
; data inside code section at 0x7c8b -- 0x7ca4
0x7c8b:     ff ff ff 8b 44 24 30 8b  54 24 34 8b 00 39 d0 89   |....D$0.T$4..9..|
0x7c9b:     44 24 30 0f 85 18 fe ff  ff                        |D$0......       |
; function: function_7ca4 at 0x7ca4 -- 0x7d49
0x7ca4:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x7cac:     c7 44 24 10 77 05 00 00            	mov dword ptr [esp + 0x10], 0x577
0x7cb4:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x7cbc:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x7cc4:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x7ccc:     89 2c 24                           	mov dword ptr [esp], ebp
0x7ccf:     e8 8c af 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x7cd4:     8b 15 78 a1 00 00                  	mov edx, dword ptr [0xa178] ; "4.208.43.192"
0x7cda:     a1 74 a1 00 00                     	mov eax, dword ptr [0xa174] ; "rg"
0x7cdf:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x7ce3:     89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x7ce7:     eb 15                              	jmp 0x7cfe <function_7ca4+0x5a>
0x7ce9:     8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
0x7ced:     3b 7c 24 2c                        	cmp edi, dword ptr [esp + 0x2c]
0x7cf1:     8b 00                              	mov eax, dword ptr [eax]
0x7cf3:     0f 85 b9 01 00 00                  	jne 0x7eb2 <function_7eb2>
0x7cf9:     83 44 24 38 04                     	add dword ptr [esp + 0x38], 4
0x7cfe:     8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x7d02:     39 44 24 3c                        	cmp dword ptr [esp + 0x3c], eax
0x7d06:     75 e1                              	jne 0x7ce9 <function_7ca4+0x45>
0x7d08:     89 2c 24                           	mov dword ptr [esp], ebp
0x7d0b:     8d b4 24 80 00 00 00               	lea esi, [esp + 0x80]
0x7d12:     e8 c9 ab 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x7d17:     8b 7c 24 78                        	mov edi, dword ptr [esp + 0x78]
0x7d1b:     3b 7c 24 2c                        	cmp edi, dword ptr [esp + 0x2c]
0x7d1f:     0f 84 15 03 00 00                  	je 0x803a <function_803a>
0x7d25:     8b 1d 30 a3 00 00                  	mov ebx, dword ptr [0xa330] ; "ncon"
0x7d2b:     c6 44 24 74 00                     	mov byte ptr [esp + 0x74], 0
0x7d30:     c6 84 24 84 00 00 00 00            	mov byte ptr [esp + 0x84], 0
0x7d38:     8d 43 48                           	lea eax, [ebx + 0x48]
0x7d3b:     89 5c 24 70                        	mov dword ptr [esp + 0x70], ebx
0x7d3f:     89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x7d46:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7d49 -- 0x7d4a
0x7d49:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x7d4a -- 0x7d4b
; data inside code section at 0x7d4b -- 0x7d4d
0x7d4b:     ff ff                                              |..              |
; function: function_7d4d at 0x7d4d -- 0x7dee
0x7d4d:     ff 85 c0 0f 85 86                  	inc dword ptr [ebp - 0x797af040]
0x7d53:     02 00                              	add al, byte ptr [eax]
0x7d55:     00 c6                              	add dh, al
0x7d57:     84 24 84                           	test byte ptr [esp + eax*4], ah
0x7d5a:     00 00                              	add byte ptr [eax], al
0x7d5c:     00 01                              	add byte ptr [ecx], al
0x7d5e:     eb 0c                              	jmp 0x7d6c <function_7d4d+0x1f>
0x7d60:     89 74 24 04                        	mov dword ptr [esp + 4], esi
0x7d64:     89 1c 24                           	mov dword ptr [esp], ebx
0x7d67:     e8 d4 a3 00 00                     	call 0x12140 <_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE>
0x7d6c:     8b 43 60                           	mov eax, dword ptr [ebx + 0x60]
0x7d6f:     85 c0                              	test eax, eax
0x7d71:     7e ed                              	jle 0x7d60 <function_7d4d+0x13>
0x7d73:     83 e8 01                           	sub eax, 1
0x7d76:     80 7e 04 00                        	cmp byte ptr [esi + 4], 0
0x7d7a:     89 43 60                           	mov dword ptr [ebx + 0x60], eax
0x7d7d:     0f 85 0b 02 00 00                  	jne 0x7f8e <function_7f8e>
0x7d83:     8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x7d86:     c7 44 24 18 01 00 00 00            	mov dword ptr [esp + 0x18], 1
0x7d8e:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x7d92:     c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x7d9a:     8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x7d9d:     c6 44 24 74 01                     	mov byte ptr [esp + 0x74], 1
0x7da2:     29 da                              	sub edx, ebx
0x7da4:     d1 fa                              	sar edx, 1
0x7da6:     69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x7dac:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x7db0:     31 d2                              	xor edx, edx
0x7db2:     f7 74 24 30                        	div dword ptr [esp + 0x30]
0x7db6:     8d 04 d2                           	lea eax, [edx + edx*8]
0x7db9:     8d 04 43                           	lea eax, [ebx + eax*2]
0x7dbc:     8b 10                              	mov edx, dword ptr [eax]
0x7dbe:     8d 5c 24 70                        	lea ebx, [esp + 0x70]
0x7dc2:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x7dc6:     8b 50 04                           	mov edx, dword ptr [eax + 4]
0x7dc9:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x7dcd:     8b 50 08                           	mov edx, dword ptr [eax + 8]
0x7dd0:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x7dd4:     8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x7dd7:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x7ddb:     0f b7 40 10                        	movzx eax, word ptr [eax + 0x10]
0x7ddf:     66 89 44 24 14                     	mov word ptr [esp + 0x14], ax
0x7de4:     8d 84 24 e0 00 00 00               	lea eax, [esp + 0xe0]
0x7deb:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7dee -- 0x7def
0x7dee:     e8                                                 |.               |
; dynamically linked function: _ZN8CAddressC1E8CServicey at 0x7def -- 0x7df0
; data inside code section at 0x7df0 -- 0x7df2
0x7df0:     ff ff                                              |..              |
; function: function_7df2 at 0x7df2 -- 0x7e40
0x7df2:     ff 8d 5c 24 70 8d                  	dec dword ptr [ebp - 0x728fdba4]
0x7df8:     94                                 	xchg eax, esp
0x7df9:     24 e0                              	and al, 0xe0
0x7dfb:     00 00                              	add byte ptr [eax], al
0x7dfd:     00 c7                              	add bh, al
0x7dff:     44                                 	inc esp
0x7e00:     24 0c                              	and al, 0xc
0x7e02:     00 00                              	add byte ptr [eax], al
0x7e04:     00 00                              	add byte ptr [eax], al
0x7e06:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x7e0e:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x7e12:     89 14 24                           	mov dword ptr [esp], edx
0x7e15:     e8 d6 e4 ff ff                     	call 0x62f0 <_Z21OpenNetworkConnectionRK8CAddressP15CSemaphoreGrantPKcb>
0x7e1a:     c7 04 24 f4 01 00 00               	mov dword ptr [esp], 0x1f4
0x7e21:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x7e29:     e8 42 12 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x7e2e:     80 7c 24 74 00                     	cmp byte ptr [esp + 0x74], 0
0x7e33:     0f 85 e9 00 00 00                  	jne 0x7f22 <function_7f22>
0x7e39:     8b 3f                              	mov edi, dword ptr [edi]
0x7e3b:     e9 db fe ff ff                     	jmp 0x7d1b
; function: function_7e40 at 0x7e40 -- 0x7e4f
0x7e40:     89 c3                              	mov ebx, eax
0x7e42:     89 2c 24                           	mov dword ptr [esp], ebp
0x7e45:     e8 96 aa 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x7e4a:     e9 ee fa ff ff                     	jmp 0x793d <function_793d>
; data inside code section at 0x7e4f -- 0x7e50
0x7e4f:     90                                                 |.               |
; function: function_7e50 at 0x7e50 -- 0x7e65
0x7e50:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x7e58:     c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x7e60:     e9 34 fd ff ff                     	jmp 0x7b99 <function_7b99>
; data inside code section at 0x7e65 -- 0x7e69
0x7e65:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x7e69 -- 0x7e6a
; data inside code section at 0x7e6a -- 0x7e71
0x7e6a:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZdlPv at 0x7e71 -- 0x7e72
; data inside code section at 0x7e72 -- 0x7e76
0x7e72:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x7e76 -- 0x7e77
; data inside code section at 0x7e77 -- 0x7e7b
0x7e77:     ff ff ff 89                                        |....            |
; function: function_7e7b at 0x7e7b -- 0x7e7c
0x7e7b:     c3                                 	ret 
; data inside code section at 0x7e7c -- 0x7e84
0x7e7c:     89 2c 24 e8 5c aa 00 00                            |.,$.\...        |
; function: function_7e84 at 0x7e84 -- 0x7e85
; data inside code section at 0x7e85 -- 0x7e90
0x7e85:     44 24 54 85 c0 74 08 89  04 24 e8                  |D$T..t...$.     |
; dynamically linked function: _ZdlPv at 0x7e90 -- 0x7e91
; data inside code section at 0x7e91 -- 0x7e93
0x7e91:     ff ff                                              |..              |
; function: function_7e93 at 0x7e93 -- 0x7ea5
0x7e93:     ff 8d 54 24 78 89                  	dec dword ptr [ebp - 0x7687dbac]
0x7e99:     14 24                              	adc al, 0x24
0x7e9b:     e8 00 b4 00 00                     	call 0x132a0 <_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev>
0x7ea0:     e9 98 fa ff ff                     	jmp 0x793d <function_793d>
; data inside code section at 0x7ea5 -- 0x7ea6
0x7ea5:     89                                                 |.               |
; function: function_7ea6 at 0x7ea6 -- 0x7ea7
0x7ea6:     c3                                 	ret 
; data inside code section at 0x7ea7 -- 0x7ea8
0x7ea7:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x7ea8 -- 0x7ea9
; data inside code section at 0x7ea9 -- 0x7eb0
0x7ea9:     ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_7eb0 at 0x7eb0 -- 0x7eb2
0x7eb0:     eb d2                              	jmp 0x7e84 <function_7e84>
; function: function_7eb2 at 0x7eb2 -- 0x7ecf
0x7eb2:     8d b0 84 01 00 00                  	lea esi, [eax + 0x184]
0x7eb8:     8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x7ebb:     8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x7ebe:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x7ec2:     39 d3                              	cmp ebx, edx
0x7ec4:     74 1b                              	je 0x7ee1 <function_7ee1>
0x7ec6:     66 90                              	nop 
0x7ec8:     89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x7ecc:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x7ecf -- 0x7ed0
0x7ecf:     e8                                                 |.               |
; dynamically linked function: _ZeqRK8CServiceS1_ at 0x7ed0 -- 0x7ed1
; data inside code section at 0x7ed1 -- 0x7ed5
0x7ed1:     ff ff ff 84                                        |....            |
; function: function_7ed5 at 0x7ed5 -- 0x7eda
0x7ed5:     c0 75 18 83                        	sal byte ptr [ebp + 0x18], 0x83
0x7ed9:     c3                                 	ret 
; data inside code section at 0x7eda -- 0x7ee1
0x7eda:     12 39 5c 24 30 75 e7                               |.9\$0u.         |
; function: function_7ee1 at 0x7ee1 -- 0x7eef
0x7ee1:     8b 3f                              	mov edi, dword ptr [edi]
0x7ee3:     3b 7c 24 2c                        	cmp edi, dword ptr [esp + 0x2c]
0x7ee7:     0f 84 0c fe ff ff                  	je 0x7cf9
0x7eed:     eb c9                              	jmp 0x7eb8
; data inside code section at 0x7eef -- 0x7ef6
0x7eef:     90 8b 1f 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSt8__detail15_List_node_base9_M_unhookEv at 0x7ef6 -- 0x7ef7
; data inside code section at 0x7ef7 -- 0x7f05
0x7ef7:     ff ff ff 8b 47 08 85 c0  74 08 89 04 24 e8         |....G...t...$.  |
; dynamically linked function: _ZdlPv at 0x7f05 -- 0x7f06
; data inside code section at 0x7f06 -- 0x7f0d
0x7f06:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZdlPv at 0x7f0d -- 0x7f0e
; data inside code section at 0x7f0e -- 0x7f10
0x7f0e:     ff ff                                              |..              |
; function: function_7f10 at 0x7f10 -- 0x7f22
0x7f10:     ff 8b 7b 04 8b 3f                  	dec dword ptr [ebx + 0x3f8b047b]
0x7f16:     3b 7c 24 2c                        	cmp edi, dword ptr [esp + 0x2c]
0x7f1a:     0f 84 d9 fd ff ff                  	je 0x7cf9
0x7f20:     eb 96                              	jmp 0x7eb8
; function: function_7f22 at 0x7f22 -- 0x7f30
0x7f22:     8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x7f26:     8d 53 48                           	lea edx, [ebx + 0x48]
0x7f29:     89 14 24                           	mov dword ptr [esp], edx
0x7f2c:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
; data inside code section at 0x7f30 -- 0x7f31
0x7f30:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x7f31 -- 0x7f32
; data inside code section at 0x7f32 -- 0x7f45
0x7f32:     ff ff ff 8b 54 24 28 85  c0 75 7e 83 43 60 01 89   |....T$(..u~.C`..|
0x7f42:     14 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_unlock at 0x7f45 -- 0x7f46
; data inside code section at 0x7f46 -- 0x7f55
0x7f46:     ff ff ff 85 c0 0f 85 db  f9 ff ff 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_lock at 0x7f55 -- 0x7f56
; data inside code section at 0x7f56 -- 0x7f68
0x7f56:     ff ff ff 85 c0 0f 85 29  fa ff ff 8d 43 18 89 04   |.......)....C...|
0x7f66:     24 e8                                              |$.              |
; dynamically linked function: pthread_cond_signal at 0x7f68 -- 0x7f69
; data inside code section at 0x7f69 -- 0x7f78
0x7f69:     ff ff ff 85 c0 0f 85 11  fa ff ff 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_unlock at 0x7f78 -- 0x7f79
; data inside code section at 0x7f79 -- 0x7f7c
0x7f79:     ff ff ff                                           |...             |
; function: function_7f7c at 0x7f7c -- 0x7f8e
0x7f7c:     85 c0                              	test eax, eax
0x7f7e:     0f 85 ee f9 ff ff                  	jne 0x7972 <function_7972>
0x7f84:     c6 44 24 74 00                     	mov byte ptr [esp + 0x74], 0
0x7f89:     e9 ab fe ff ff                     	jmp 0x7e39
; function: function_7f8e at 0x7f8e -- 0x7f98
0x7f8e:     8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x7f95:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x7f98 -- 0x7f99
0x7f98:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x7f99 -- 0x7f9a
; data inside code section at 0x7f9a -- 0x7f9d
0x7f9a:     ff ff ff                                           |...             |
; function: function_7f9d at 0x7f9d -- 0x7faa
0x7f9d:     85 c0                              	test eax, eax
0x7f9f:     0f 84 de fd ff ff                  	je 0x7d83
0x7fa5:     e9 82 f9 ff ff                     	jmp 0x792c <function_792c>
; function: function_7faa at 0x7faa -- 0x7fbb
0x7faa:     89 c6                              	mov esi, eax
0x7fac:     89 1c 24                           	mov dword ptr [esp], ebx
0x7faf:     89 f3                              	mov ebx, esi
0x7fb1:     e8 9a 9c 00 00                     	call 0x11c50 <_ZN15CSemaphoreGrantD1Ev>
0x7fb6:     e9 d9 fe ff ff                     	jmp 0x7e94
; function: function_7fbb at 0x7fbb -- 0x8002
0x7fbb:     8d 9c 24 a0 00 00 00               	lea ebx, [esp + 0xa0]
0x7fc2:     89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x7fc9:     c7 84 24 a0 00 00 00 20 78 02 00   	mov dword ptr [esp + 0xa0], 0x27820
0x7fd4:     89 1c 24                           	mov dword ptr [esp], ebx
0x7fd7:     e8 b4 99 00 00                     	call 0x11990 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x7fdc:     8d 9c 24 98 00 00 00               	lea ebx, [esp + 0x98]
0x7fe3:     89 84 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], eax
0x7fea:     c7 84 24 98 00 00 00 20 78 02 00   	mov dword ptr [esp + 0x98], 0x27820
0x7ff5:     89 1c 24                           	mov dword ptr [esp], ebx
0x7ff8:     e8 93 99 00 00                     	call 0x11990 <_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_>
0x7ffd:     e9 3e fe ff ff                     	jmp 0x7e40 <function_7e40>
; data inside code section at 0x8002 -- 0x8003
0x8002:     e8                                                 |.               |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x8003 -- 0x8004
; data inside code section at 0x8004 -- 0x8007
0x8004:     ff ff ff                                           |...             |
; function: function_8007 at 0x8007 -- 0x800e
0x8007:     89 c3                              	mov ebx, eax
0x8009:     e9 2f f9 ff ff                     	jmp 0x793d <function_793d>
; function: function_800e at 0x800e -- 0x8015
0x800e:     89 c3                              	mov ebx, eax
0x8010:     e9 6f fe ff ff                     	jmp 0x7e84 <function_7e84>
; function: function_8015 at 0x8015 -- 0x801c
0x8015:     89 c3                              	mov ebx, eax
0x8017:     e9 78 fe ff ff                     	jmp 0x7e94
; function: function_801c at 0x801c -- 0x802b
0x801c:     89 c3                              	mov ebx, eax
0x801e:     89 2c 24                           	mov dword ptr [esp], ebp
0x8021:     e8 ba a8 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8026:     e9 69 fe ff ff                     	jmp 0x7e94
; function: function_802b at 0x802b -- 0x803a
0x802b:     89 c3                              	mov ebx, eax
0x802d:     89 34 24                           	mov dword ptr [esp], esi
0x8030:     e8 5b 9c 00 00                     	call 0x11c90 <_ZN5boost11unique_lockINS_5mutexEED1Ev>
0x8035:     e9 5a fe ff ff                     	jmp 0x7e94
; function: function_803a at 0x803a -- 0x8070
0x803a:     c7 04 24 c0 d4 01 00               	mov dword ptr [esp], 0x1d4c0
0x8041:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x8049:     e8 22 10 01 00                     	call 0x19070 <_Z10MilliSleepx>
0x804e:     8d 44 24 78                        	lea eax, [esp + 0x78]
0x8052:     89 04 24                           	mov dword ptr [esp], eax
0x8055:     e8 46 b2 00 00                     	call 0x132a0 <_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev>
0x805a:     8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x805e:     89 14 24                           	mov dword ptr [esp], edx
0x8061:     e8 da b1 00 00                     	call 0x13240 <_ZNSt10_List_baseISsSaISsEED1Ev>
0x8066:     83 44 24 40 01                     	add dword ptr [esp + 0x40], 1
0x806b:     e9 83 f9 ff ff                     	jmp 0x79f3 <function_79f3>
; function: function_8070 at 0x8070 -- 0x8081
0x8070:     89 c6                              	mov esi, eax
0x8072:     89 1c 24                           	mov dword ptr [esp], ebx
0x8075:     89 f3                              	mov ebx, esi
0x8077:     e8 d4 69 00 00                     	call 0xea50 <_ZN5boost10lock_errorD1Ev>
0x807c:     e9 13 fe ff ff                     	jmp 0x7e94
; data inside code section at 0x8081 -- 0x8082
0x8081:     89                                                 |.               |
; function: function_8082 at 0x8082 -- 0x8083
0x8082:     c3                                 	ret 
; function: function_8083 at 0x8083 -- 0x8084
; data inside code section at 0x8084 -- 0x808f
0x8084:     2c 24 e8 55 a8 00 00 89  1c 24 e8                  |,$.U.....$.     |
; dynamically linked function: _Unwind_Resume at 0x808f -- 0x8090
; data inside code section at 0x8090 -- 0x8097
0x8090:     ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x8097 -- 0x8098
; data inside code section at 0x8098 -- 0x809f
0x8098:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZdlPv at 0x809f -- 0x80a0
; data inside code section at 0x80a0 -- 0x80a4
0x80a0:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x80a4 -- 0x80a5
; data inside code section at 0x80a5 -- 0x80b0
0x80a5:     ff ff ff 89 c6 89 1c 24  89 f3 e8                  |.......$...     |
; dynamically linked function: _ZNSsD1Ev at 0x80b0 -- 0x80b1
; data inside code section at 0x80b1 -- 0x80b4
0x80b1:     ff ff ff                                           |...             |
; function: function_80b4 at 0x80b4 -- 0x80b6
0x80b4:     eb cd                              	jmp 0x8083 <function_8083>
; data inside code section at 0x80b6 -- 0x80ba
0x80b6:     89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x80ba -- 0x80bb
; data inside code section at 0x80bb -- 0x80c2
0x80bb:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x80c2 -- 0x80c3
; data inside code section at 0x80c3 -- 0x80c7
0x80c3:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x80c7 -- 0x80c8
; data inside code section at 0x80c8 -- 0x80cc
0x80c8:     ff ff ff 89                                        |....            |
; function: function_80cc at 0x80cc -- 0x80cd
0x80cc:     c3                                 	ret 
; data inside code section at 0x80cd -- 0x80ce
0x80cd:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x80ce -- 0x80cf
; data inside code section at 0x80cf -- 0x80d2
0x80cf:     ff ff ff                                           |...             |
; function: function_80d2 at 0x80d2 -- 0x80d7
0x80d2:     e9 6b fd ff ff                     	jmp 0x7e42
; data inside code section at 0x80d7 -- 0x80d8
0x80d7:     89                                                 |.               |
; function: function_80d8 at 0x80d8 -- 0x80d9
0x80d8:     c3                                 	ret 
; data inside code section at 0x80d9 -- 0x80da
0x80d9:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x80da -- 0x80db
; data inside code section at 0x80db -- 0x80dd
0x80db:     ff ff                                              |..              |
; function: function_80dd at 0x80dd -- 0x80e0
0x80dd:     ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_80e0 at 0x80e0 -- 0x80e5
0x80e0:     e9 5d fd ff ff                     	jmp 0x7e42
; function: function_80e5 at 0x80e5 -- 0x80f5
0x80e5:     89 c3                              	mov ebx, eax
0x80e7:     89 34 24                           	mov dword ptr [esp], esi
0x80ea:     e8 a1 9b 00 00                     	call 0x11c90 <_ZN5boost11unique_lockINS_5mutexEED1Ev>
0x80ef:     90                                 	nop 
0x80f0:     e9 48 f8 ff ff                     	jmp 0x793d <function_793d>
; function: function_80f5 at 0x80f5 -- 0x80fa
0x80f5:     e9 7d f8 ff ff                     	jmp 0x7977
; data inside code section at 0x80fa -- 0x8100
0x80fa:     8d b6 00 00 00 00                                  |......          |
; function: function_8100 at 0x8100 -- 0x8105
0x8100:     e9 02 ff ff ff                     	jmp 0x8007 <function_8007>
; data inside code section at 0x8105 -- 0x8110
0x8105:     8d 74 26 00 8d bc 27 00  00 00 00                  |.t&...'....     |
; function: function_8110 at 0x8110 -- 0x8115
0x8110:     e9 5b ff ff ff                     	jmp 0x8070 <function_8070>
; data inside code section at 0x8115 -- 0x8120
0x8115:     8d 74 26 00 8d bc 27 00  00 00 00                  |.t&...'....     |
; function: _Z14BindListenPortRK8CServiceRSs at 0x8120 -- 0x815e
0x8120:     55                                 	push ebp
0x8121:     57                                 	push edi
0x8122:     56                                 	push esi
0x8123:     53                                 	push ebx
0x8124:     81 ec fc 00 00 00                  	sub esp, 0xfc
0x812a:     8b 9c 24 14 01 00 00               	mov ebx, dword ptr [esp + 0x114]
0x8131:     8d 7c 24 6c                        	lea edi, [esp + 0x6c]
0x8135:     8b b4 24 10 01 00 00               	mov esi, dword ptr [esp + 0x110]
0x813c:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8142:     89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x8149:     31 c0                              	xor eax, eax
0x814b:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x8153:     c7 44 24 04 11 a1 00 00            	mov dword ptr [esp + 4], 0xa111
0x815b:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x815e -- 0x815f
0x815e:     e8                                                 |.               |
; dynamically linked function: _ZNSs6assignEPKcj at 0x815f -- 0x8160
; data inside code section at 0x8160 -- 0x8183
0x8160:     ff ff ff 8d 44 24 34 c7  44 24 30 01 00 00 00 c7   |....D$4.D$0.....|
0x8170:     44 24 34 80 00 00 00 89  44 24 08 89 7c 24 04 89   |D$4.....D$..|$..|
0x8180:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNK8CService11GetSockAddrEP8sockaddrPj at 0x8183 -- 0x8184
; data inside code section at 0x8184 -- 0x819b
0x8184:     ff ff ff 84 c0 0f 85 91  00 00 00 8d 7c 24 38 89   |............|$8.|
0x8194:     74 24 04 89 3c 24 e8                               |t$..<$.         |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x819b -- 0x819c
; data inside code section at 0x819c -- 0x81c2
0x819c:     ff ff ff 83 ec 04 8b 44  24 38 8d 74 24 3c c7 44   |.......D$8.t$<.D|
0x81ac:     24 08 00 00 00 00 c7 44  24 04 28 de 00 00 89 34   |$......D$.(....4|
0x81bc:     24 89 44 24 0c e8                                  |$.D$..          |
; dynamically linked function: _Z14real_strprintfPKciz at 0x81c2 -- 0x81c3
; data inside code section at 0x81c3 -- 0x81d1
0x81c3:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x81d1 -- 0x81d2
; data inside code section at 0x81d2 -- 0x81d9
0x81d2:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x81d9 -- 0x81da
; data inside code section at 0x81da -- 0x81e0
0x81da:     ff ff ff 89 3c 24                                  |....<$          |
; function: function_81e0 at 0x81e0 -- 0x81e1
; dynamically linked function: _ZNSsD1Ev at 0x81e1 -- 0x81e2
; data inside code section at 0x81e2 -- 0x81e5
0x81e2:     ff ff ff                                           |...             |
; function: function_81e5 at 0x81e5 -- 0x81e6
; data inside code section at 0x81e6 -- 0x81f5
0x81e6:     03 31 db c7 04 24 32 a4  00 00 89 44 24 04 e8      |.1...$2....D$.. |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x81f5 -- 0x81f6
; data inside code section at 0x81f6 -- 0x81f8
0x81f6:     ff ff                                              |..              |
; function: function_81f8 at 0x81f8 -- 0x821a
0x81f8:     ff 8b 94 24 ec 00                  	dec dword ptr [ebx + 0xec2494]
0x81fe:     00 00                              	add byte ptr [eax], al
0x8200:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x8207:     89 d8                              	mov eax, ebx
0x8209:     0f 85 99 03 00 00                  	jne 0x85a8 <function_85a8>
0x820f:     81 c4 fc 00 00 00                  	add esp, 0xfc
0x8215:     5b                                 	pop ebx
0x8216:     5e                                 	pop esi
0x8217:     5f                                 	pop edi
0x8218:     5d                                 	pop ebp
0x8219:     c3                                 	ret 
; data inside code section at 0x821a -- 0x8239
0x821a:     8d b6 00 00 00 00 0f b7  44 24 6c c7 44 24 08 06   |........D$l.D$..|
0x822a:     00 00 00 c7 44 24 04 01  00 00 00 89 04 24 e8      |....D$.......$. |
; dynamically linked function: socket at 0x8239 -- 0x823a
; data inside code section at 0x823a -- 0x826e
0x823a:     ff ff ff 83 f8 ff 89 44  24 40 0f 84 26 01 00 00   |.......D$@..&...|
0x824a:     8d 6c 24 30 c7 44 24 10  04 00 00 00 89 6c 24 0c   |.l$0.D$......l$.|
0x825a:     c7 44 24 08 02 00 00 00  c7 44 24 04 01 00 00 00   |.D$......D$.....|
0x826a:     89 04 24 e8                                        |..$.            |
; dynamically linked function: setsockopt at 0x826e -- 0x826f
; data inside code section at 0x826f -- 0x828a
0x826f:     ff ff ff 8b 44 24 40 c7  44 24 08 00 08 00 00 c7   |....D$@.D$......|
0x827f:     44 24 04 04 00 00 00 89  04 24 e8                  |D$.......$.     |
; dynamically linked function: fcntl at 0x828a -- 0x828b
; data inside code section at 0x828b -- 0x829b
0x828b:     ff ff ff 83 f8 ff 0f 84  f9 01 00 00 89 34 24 e8   |.............4$.|
; dynamically linked function: _ZNK8CNetAddr6IsIPv6Ev at 0x829b -- 0x829c
; data inside code section at 0x829c -- 0x82a7
0x829c:     ff ff ff 84 c0 0f 85 b9  01 00 00                  |...........     |
; function: function_82a7 at 0x82a7 -- 0x82a8
; data inside code section at 0x82a8 -- 0x82bb
0x82a8:     44 24 34 89 7c 24 04 89  44 24 08 8b 44 24 40 89   |D$4.|$..D$..D$@.|
0x82b8:     04 24 e8                                           |.$.             |
; dynamically linked function: bind at 0x82bb -- 0x82bc
; data inside code section at 0x82bc -- 0x82d4
0x82bc:     ff ff ff 83 f8 ff 0f 84  e8 00 00 00 8d 7c 24 64   |.............|$d|
0x82cc:     89 74 24 04 89 3c 24 e8                            |.t$..<$.        |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x82d4 -- 0x82d5
; data inside code section at 0x82d5 -- 0x82eb
0x82d5:     ff ff ff 83 ec 04 8b 44  24 64 c7 04 24 36 a4 00   |.......D$d..$6..|
0x82e5:     00 89 44 24 04 e8                                  |..D$..          |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x82eb -- 0x82ec
; data inside code section at 0x82ec -- 0x82f3
0x82ec:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x82f3 -- 0x82f4
; data inside code section at 0x82f4 -- 0x8307
0x82f4:     ff ff ff 8b 44 24 40 c7  44 24 04 80 00 00 00 89   |....D$@.D$......|
0x8304:     04 24 e8                                           |.$.             |
; dynamically linked function: listen at 0x8307 -- 0x8308
; data inside code section at 0x8308 -- 0x8337
0x8308:     ff ff ff 83 f8 ff 0f 84  3a 02 00 00 a1 24 a3 00   |........:....$..|
0x8318:     00 3b 05 28 a3 00 00 0f  84 66 02 00 00 85 c0 74   |.;.(.....f.....t|
0x8328:     06 8b 54 24 40 89 10 83  c0 04 a3 24 a3 00 00      |..T$@......$... |
; function: function_8337 at 0x8337 -- 0x8338
; data inside code section at 0x8338 -- 0x8340
0x8338:     34 24 bb 01 00 00 00 e8                            |4$......        |
; dynamically linked function: _ZNK8CNetAddr10IsRoutableEv at 0x8340 -- 0x8341
; data inside code section at 0x8341 -- 0x8344
0x8341:     ff ff ff                                           |...             |
; function: function_8344 at 0x8344 -- 0x836e
0x8344:     84 c0                              	test al, al
0x8346:     0f 84 ad fe ff ff                  	je 0x81f9
0x834c:     80 3d 40 9e 00 00 00               	cmp byte ptr [0x9e40], 0
0x8353:     0f 84 a0 fe ff ff                  	je 0x81f9
0x8359:     c7 44 24 04 02 00 00 00            	mov dword ptr [esp + 4], 2
0x8361:     89 34 24                           	mov dword ptr [esp], esi
0x8364:     e8 f7 aa ff ff                     	call 0x2e60 <_Z8AddLocalRK8CServicei>
0x8369:     e9 8b fe ff ff                     	jmp 0x81f9
; data inside code section at 0x836e -- 0x8371
0x836e:     66 90 e8                                           |f..             |
; dynamically linked function: __errno_location at 0x8371 -- 0x8372
; data inside code section at 0x8372 -- 0x8393
0x8372:     ff ff ff 8d 74 24 44 8b  00 c7 44 24 08 00 00 00   |....t$D...D$....|
0x8382:     00 c7 44 24 04 58 de 00  00 89 34 24 89 44 24 0c   |..D$.X....4$.D$.|
0x8392:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x8393 -- 0x8394
; data inside code section at 0x8394 -- 0x83a2
0x8394:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x83a2 -- 0x83a3
; data inside code section at 0x83a3 -- 0x83a6
0x83a3:     ff ff ff                                           |...             |
; function: function_83a6 at 0x83a6 -- 0x83ae
0x83a6:     89 34 24                           	mov dword ptr [esp], esi
0x83a9:     e9 32 fe ff ff                     	jmp 0x81e0 <function_81e0>
; data inside code section at 0x83ae -- 0x83b1
0x83ae:     66 90 e8                                           |f..             |
; dynamically linked function: __errno_location at 0x83b1 -- 0x83b2
; data inside code section at 0x83b2 -- 0x83c4
0x83b2:     ff ff ff 8b 28 83 fd 62  0f 84 10 01 00 00 89 2c   |....(..b.......,|
0x83c2:     24 e8                                              |$.              |
; dynamically linked function: strerror at 0x83c4 -- 0x83c5
; data inside code section at 0x83c5 -- 0x83d8
0x83c5:     ff ff ff 8d 54 24 5c 89  74 24 04 89 14 24 89 44   |....T$\.t$...$.D|
0x83d5:     24 28 e8                                           |$(.             |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x83d8 -- 0x83d9
; data inside code section at 0x83d9 -- 0x8426
0x83d9:     ff ff ff 83 ec 04 8b 44  24 5c 8d 7c 24 58 c7 44   |.......D$\.|$X.D|
0x83e9:     24 04 4c df 00 00 89 3c  24 89 44 24 2c e8 55 cc   |$.L....<$.D$,.U.|
0x83f9:     01 00 83 ec 04 8b 44 24  28 8d 74 24 60 8b 54 24   |......D$(.t$`.T$|
0x8409:     2c 89 6c 24 10 c7                                  |,.l$..          |
0x840f:     44 24 08 00                                        |D$..            |   "D$\b"
0x8413:     00 00 00 89 44 24 14 89  54 24 0c 89 7c 24 04 89   |....D$..T$..|$..|
0x8423:     34 24 e8                                           |4$.             |
; dynamically linked function: _Z14real_strprintfRKSsiz at 0x8426 -- 0x8427
; data inside code section at 0x8427 -- 0x8435
0x8427:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x8435 -- 0x8436
; data inside code section at 0x8436 -- 0x843d
0x8436:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x843d -- 0x843e
; data inside code section at 0x843e -- 0x8445
0x843e:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x8445 -- 0x8446
; data inside code section at 0x8446 -- 0x8451
0x8446:     ff ff ff 8d 44 24 5c 89  04 24 e8                  |....D$\..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x8451 -- 0x8452
; data inside code section at 0x8452 -- 0x8455
0x8452:     ff ff ff                                           |...             |
; function: function_8455 at 0x8455 -- 0x845a
0x8455:     e9 8b fd ff ff                     	jmp 0x81e5 <function_81e5>
; data inside code section at 0x845a -- 0x8484
0x845a:     8d b6 00 00 00 00 8b 44  24 40 c7 44 24 10 04 00   |.......D$@.D$...|
0x846a:     00 00 89 6c 24 0c c7 44  24 08 1a 00 00 00 c7 44   |...l$..D$......D|
0x847a:     24 04 29 00 00 00 89 04  24 e8                     |$.).....$.      |
; dynamically linked function: setsockopt at 0x8484 -- 0x8485
; data inside code section at 0x8485 -- 0x8488
0x8485:     ff ff ff                                           |...             |
; function: function_8488 at 0x8488 -- 0x848d
0x8488:     e9 1a fe ff ff                     	jmp 0x82a7 <function_82a7>
; data inside code section at 0x848d -- 0x8491
0x848d:     8d 76 00 e8                                        |.v..            |
; dynamically linked function: __errno_location at 0x8491 -- 0x8492
; data inside code section at 0x8492 -- 0x84b3
0x8492:     ff ff ff 8d 74 24 48 8b  00 c7 44 24 08 00 00 00   |....t$H...D$....|
0x84a2:     00 c7 44 24 04 a8 de 00  00 89 34 24 89 44 24 0c   |..D$......4$.D$.|
0x84b2:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x84b3 -- 0x84b4
; data inside code section at 0x84b4 -- 0x84c2
0x84b4:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x84c2 -- 0x84c3
; data inside code section at 0x84c3 -- 0x84c6
0x84c3:     ff ff ff                                           |...             |
; function: function_84c6 at 0x84c6 -- 0x84cb
0x84c6:     e9 db fe ff ff                     	jmp 0x83a6 <function_83a6>
; data inside code section at 0x84cb -- 0x84dc
0x84cb:     90 8d 74 26 00 8d 6c 24  50 89 74 24 04 89 2c 24   |..t&..l$P.t$..,$|
0x84db:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x84dc -- 0x84dd
; data inside code section at 0x84dd -- 0x84f9
0x84dd:     ff ff ff 83 ec 04 8b 54  24 50 8d 7c 24 4c c7 44   |.......T$P.|$L.D|
0x84ed:     24 04 f8 de 00 00 89 3c  24 89 54 24               |$......<$.T$    |
; function: function_84f9 at 0x84f9 -- 0x84fd
0x84f9:     28 e8                              	sub al, ch
0x84fb:     51                                 	push ecx
0x84fc:     cb                                 	retf 
; data inside code section at 0x84fd -- 0x851e
0x84fd:     01 00 83 ec 04 8b 44 24  28 8d 74 24 54 c7 44 24   |......D$(.t$T.D$|
0x850d:     08 00 00 00 00 89 7c 24  04 89 34 24 89 44 24 0c   |......|$..4$.D$.|
0x851d:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfRKSsiz at 0x851e -- 0x851f
; data inside code section at 0x851f -- 0x852d
0x851f:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x852d -- 0x852e
; data inside code section at 0x852e -- 0x8535
0x852e:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x8535 -- 0x8536
; data inside code section at 0x8536 -- 0x853d
0x8536:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x853d -- 0x853e
; data inside code section at 0x853e -- 0x8545
0x853e:     ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x8545 -- 0x8546
; data inside code section at 0x8546 -- 0x8549
0x8546:     ff ff ff                                           |...             |
; function: function_8549 at 0x8549 -- 0x854e
0x8549:     e9 97 fc ff ff                     	jmp 0x81e5 <function_81e5>
; data inside code section at 0x854e -- 0x8551
0x854e:     66 90 e8                                           |f..             |
; dynamically linked function: __errno_location at 0x8551 -- 0x8552
; data inside code section at 0x8552 -- 0x8573
0x8552:     ff ff ff 8d 74 24 68 8b  00 c7 44 24 08 00 00 00   |....t$h...D$....|
0x8562:     00 c7 44 24 04 90 df 00  00 89 34 24 89 44 24 0c   |..D$......4$.D$.|
0x8572:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x8573 -- 0x8574
; data inside code section at 0x8574 -- 0x8582
0x8574:     ff ff ff 83 ec 04 89 74  24 04 89 1c 24 e8         |.......t$...$.  |
; dynamically linked function: _ZNSs6assignERKSs at 0x8582 -- 0x8583
; data inside code section at 0x8583 -- 0x8586
0x8583:     ff ff ff                                           |...             |
; function: function_8586 at 0x8586 -- 0x858b
0x8586:     e9 1b fe ff ff                     	jmp 0x83a6 <function_83a6>
; function: function_858b at 0x858b -- 0x85a8
0x858b:     8d 54 24 40                        	lea edx, [esp + 0x40]
0x858f:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x8593:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x8597:     c7 04 24 20 a3 00 00               	mov dword ptr [esp], 0xa320
0x859e:     e8 ed c4 00 00                     	call 0x14a90 <_ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj>
0x85a3:     e9 8f fd ff ff                     	jmp 0x8337 <function_8337>
; function: function_85a8 at 0x85a8 -- 0x85a9
; dynamically linked function: __stack_chk_fail at 0x85a9 -- 0x85aa
; data inside code section at 0x85aa -- 0x85ae
0x85aa:     ff ff ff 89                                        |....            |
; function: function_85ae at 0x85ae -- 0x85af
0x85ae:     c3                                 	ret 
; data inside code section at 0x85af -- 0x85b3
0x85af:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x85b3 -- 0x85b4
; data inside code section at 0x85b4 -- 0x85bb
0x85b4:     ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x85bb -- 0x85bc
; data inside code section at 0x85bc -- 0x85c7
0x85bc:     ff ff ff 8d 44 24 5c 89  04 24 e8                  |....D$\..$.     |
; dynamically linked function: _ZNSsD1Ev at 0x85c7 -- 0x85c8
; data inside code section at 0x85c8 -- 0x85cf
0x85c8:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x85cf -- 0x85d0
; data inside code section at 0x85d0 -- 0x85d2
0x85d0:     ff ff                                              |..              |
; function: function_85d2 at 0x85d2 -- 0x85d9
0x85d2:     ff 89 c3 eb e0 89                  	dec dword ptr [ecx - 0x761f143d]
0x85d8:     c3                                 	ret 
; function: function_85d9 at 0x85d9 -- 0x85da
; data inside code section at 0x85da -- 0x85dd
0x85da:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x85dd -- 0x85de
; data inside code section at 0x85de -- 0x85e5
0x85de:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x85e5 -- 0x85e6
; data inside code section at 0x85e6 -- 0x85e9
0x85e6:     ff ff ff                                           |...             |
; function: function_85e9 at 0x85e9 -- 0x85ea
; function: function_85ea at 0x85ea -- 0x85eb
0x85ea:     c3                                 	ret 
; data inside code section at 0x85eb -- 0x85ef
0x85eb:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x85ef -- 0x85f0
; data inside code section at 0x85f0 -- 0x85f7
0x85f0:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x85f7 -- 0x85f8
; data inside code section at 0x85f8 -- 0x85fa
0x85f8:     ff ff                                              |..              |
; function: function_85fa at 0x85fa -- 0x8602
0x85fa:     ff 89 c3 eb c0 90                  	dec dword ptr [ecx - 0x6f3f143d]
0x8600:     eb e7                              	jmp 0x85e9 <function_85e9>
; data inside code section at 0x8602 -- 0x8603
0x8602:     89                                                 |.               |
; function: function_8603 at 0x8603 -- 0x8604
0x8603:     c3                                 	ret 
; data inside code section at 0x8604 -- 0x8608
0x8604:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x8608 -- 0x8609
; data inside code section at 0x8609 -- 0x860c
0x8609:     ff ff ff                                           |...             |
; function: function_860c at 0x860c -- 0x860e
0x860c:     eb cb                              	jmp 0x85d9 <function_85d9>
; data inside code section at 0x860e -- 0x8610
0x860e:     66 90                                              |f.              |
; function: function_8610 at 0x8610 -- 0x8612
0x8610:     eb c5                              	jmp 0x85d7
; data inside code section at 0x8612 -- 0x8613
0x8612:     89                                                 |.               |
; function: function_8613 at 0x8613 -- 0x8614
0x8613:     c3                                 	ret 
; function: function_8614 at 0x8614 -- 0x8615
; data inside code section at 0x8615 -- 0x8618
0x8615:     3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x8618 -- 0x8619
; data inside code section at 0x8619 -- 0x8620
0x8619:     ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZNSsD1Ev at 0x8620 -- 0x8621
; data inside code section at 0x8621 -- 0x8628
0x8621:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x8628 -- 0x8629
; data inside code section at 0x8629 -- 0x862b
0x8629:     ff ff                                              |..              |
; function: function_862b at 0x862b -- 0x8632
0x862b:     ff 89 c3 eb ec 89                  	dec dword ptr [ecx - 0x7613143d]
0x8631:     c3                                 	ret 
; data inside code section at 0x8632 -- 0x8636
0x8632:     89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x8636 -- 0x8637
; data inside code section at 0x8637 -- 0x863a
0x8637:     ff ff ff                                           |...             |
; function: function_863a at 0x863a -- 0x863c
0x863a:     eb d8                              	jmp 0x8614 <function_8614>
; function: function_863c at 0x863c -- 0x863e
0x863c:     eb ab                              	jmp 0x85e9 <function_85e9>
; data inside code section at 0x863e -- 0x8640
0x863e:     66 90                                              |f.              |
; function: _Z19ThreadSocketHandlerv at 0x8640 -- 0x86cf
0x8640:     55                                 	push ebp
0x8641:     57                                 	push edi
0x8642:     56                                 	push esi
0x8643:     53                                 	push ebx
0x8644:     81 ec 2c 03 01 00                  	sub esp, 0x1032c
0x864a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x8650:     89 84 24 1c 03 01 00               	mov dword ptr [esp + 0x1031c], eax
0x8657:     31 c0                              	xor eax, eax
0x8659:     8d 94 24 c8 00 00 00               	lea edx, [esp + 0xc8]
0x8660:     c7 44 24 64 00 00 00 00            	mov dword ptr [esp + 0x64], 0
0x8668:     89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x866c:     8d 8c 24 90 00 00 00               	lea ecx, [esp + 0x90]
0x8673:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x867b:     c7 44 24 10 ee 02 00 00            	mov dword ptr [esp + 0x10], 0x2ee
0x8683:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x868b:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x8693:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x869b:     89 0c 24                           	mov dword ptr [esp], ecx
0x869e:     e8 bd a5 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x86a3:     8b 1d 78 a1 00 00                  	mov ebx, dword ptr [0xa178] ; "4.208.43.192"
0x86a9:     8b 15 74 a1 00 00                  	mov edx, dword ptr [0xa174] ; "rg"
0x86af:     89 d8                              	mov eax, ebx
0x86b1:     29 d0                              	sub eax, edx
0x86b3:     c1 f8 02                           	sar eax, 2
0x86b6:     85 c0                              	test eax, eax
0x86b8:     0f 84 1c 04 00 00                  	je 0x8ada <function_8ada>
0x86be:     3d ff ff ff 3f                     	cmp eax, 0x3fffffff
0x86c3:     0f 87 ec 05 00 00                  	ja 0x8cb5 <function_8cb5>
0x86c9:     c1 e0 02                           	shl eax, 2
0x86cc:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x86cf -- 0x86d0
0x86cf:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x86d0 -- 0x86d1
; data inside code section at 0x86d1 -- 0x86e2
0x86d1:     ff ff ff 8b 15 74 a1 00  00 89 c6 8b 1d 78 a1 00   |.....t.......x..|
0x86e1:     00                                                 |.               |
; function: function_86e2 at 0x86e2 -- 0x86fd
0x86e2:     29 d3                              	sub ebx, edx
0x86e4:     c1 fb 02                           	sar ebx, 2
0x86e7:     85 db                              	test ebx, ebx
0x86e9:     74 17                              	je 0x8702 <function_8702>
0x86eb:     8d 04 9d 00 00 00 00               	lea eax, [ebx*4]
0x86f2:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x86f6:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x86fa:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x86fd -- 0x86fe
0x86fd:     e8                                                 |.               |
; dynamically linked function: memmove at 0x86fe -- 0x86ff
; data inside code section at 0x86ff -- 0x8702
0x86ff:     ff ff ff                                           |...             |
; function: function_8702 at 0x8702 -- 0x87a6
0x8702:     8d 1c 9e                           	lea ebx, [esi + ebx*4]
0x8705:     39 de                              	cmp esi, ebx
0x8707:     89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x870b:     0f 84 92 01 00 00                  	je 0x88a3 <function_88a3>
0x8711:     89 f3                              	mov ebx, esi
0x8713:     8b 03                              	mov eax, dword ptr [ebx]
0x8715:     80 b8 d1 01 00 00 00               	cmp byte ptr [eax + 0x1d1], 0
0x871c:     89 84 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], eax
0x8723:     0f 84 0f 02 00 00                  	je 0x8938 <function_8938>
0x8729:     8d 84 24 c8 00 00 00               	lea eax, [esp + 0xc8]
0x8730:     8b 2d 78 a1 00 00                  	mov ebp, dword ptr [0xa178] ; "4.208.43.192"
0x8736:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x873a:     a1 74 a1 00 00                     	mov eax, dword ptr [0xa174] ; "rg"
0x873f:     8d 54 24 7c                        	lea edx, [esp + 0x7c]
0x8743:     c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x8748:     89 14 24                           	mov dword ptr [esp], edx
0x874b:     89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x874f:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x8753:     e8 98 f6 00 00                     	call 0x17df0 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag>
0x8758:     50                                 	push eax
0x8759:     8b 7c 24 7c                        	mov edi, dword ptr [esp + 0x7c]
0x875d:     39 fd                              	cmp ebp, edi
0x875f:     74 5c                              	je 0x87bd <function_87bd>
0x8761:     8d 47 04                           	lea eax, [edi + 4]
0x8764:     39 c5                              	cmp ebp, eax
0x8766:     74 17                              	je 0x877f <function_8702+0x7d>
0x8768:     8b 10                              	mov edx, dword ptr [eax]
0x876a:     3b 94 24 c8 00 00 00               	cmp edx, dword ptr [esp + 0xc8]
0x8771:     74 05                              	je 0x8778 <function_8702+0x76>
0x8773:     89 17                              	mov dword ptr [edi], edx
0x8775:     83 c7 04                           	add edi, 4
0x8778:     83 c0 04                           	add eax, 4
0x877b:     39 c5                              	cmp ebp, eax
0x877d:     75 e9                              	jne 0x8768 <function_8702+0x66>
0x877f:     39 fd                              	cmp ebp, edi
0x8781:     74 3a                              	je 0x87bd <function_87bd>
0x8783:     8b 15 78 a1 00 00                  	mov edx, dword ptr [0xa178] ; "4.208.43.192"
0x8789:     31 c0                              	xor eax, eax
0x878b:     39 d5                              	cmp ebp, edx
0x878d:     74 26                              	je 0x87b5 <function_87b5>
0x878f:     29 ea                              	sub edx, ebp
0x8791:     c1 fa 02                           	sar edx, 2
0x8794:     85 d2                              	test edx, edx
0x8796:     74 1d                              	je 0x87b5 <function_87b5>
0x8798:     c1 e2 02                           	shl edx, 2
0x879b:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0x879f:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x87a3:     89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x87a6 -- 0x87a7
0x87a6:     e8                                                 |.               |
; dynamically linked function: memmove at 0x87a7 -- 0x87a8
; data inside code section at 0x87a8 -- 0x87aa
0x87a8:     ff ff                                              |..              |
; function: function_87aa at 0x87aa -- 0x87b0
0x87aa:     ff a1 78 a1 00 00                  	jmp dword ptr [ecx + 0xa178]
; data inside code section at 0x87b0 -- 0x87b5
0x87b0:     29 e8 c1 f8 02                                     |)....           |
; function: function_87b5 at 0x87b5 -- 0x87bd
0x87b5:     8d 04 87                           	lea eax, [edi + eax*4]
0x87b8:     a3 78 a1 00 00                     	mov dword ptr [0xa178], eax ; "4.208.43.192"
; function: function_87bd at 0x87bd -- 0x87dd
0x87bd:     8b bc 24 c8 00 00 00               	mov edi, dword ptr [esp + 0xc8]
0x87c4:     80 bf d8 01 00 00 00               	cmp byte ptr [edi + 0x1d8], 0
0x87cb:     74 76                              	je 0x8843 <function_8843>
0x87cd:     8b af d4 01 00 00                  	mov ebp, dword ptr [edi + 0x1d4]
0x87d3:     8d 55 48                           	lea edx, [ebp + 0x48]
0x87d6:     89 14 24                           	mov dword ptr [esp], edx
0x87d9:     89 54 24 50                        	mov dword ptr [esp + 0x50], edx
; data inside code section at 0x87dd -- 0x87de
0x87dd:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x87de -- 0x87df
; data inside code section at 0x87df -- 0x87f6
0x87df:     ff ff ff 8b 54 24 50 85  c0 0f 85 d4 04 00 00 83   |....T$P.........|
0x87ef:     45 60 01 89 14 24 e8                               |E`...$.         |
; dynamically linked function: pthread_mutex_unlock at 0x87f6 -- 0x87f7
; data inside code section at 0x87f7 -- 0x8806
0x87f7:     ff ff ff 85 c0 0f 85 ad  04 00 00 89 2c 24 e8      |............,$. |
; dynamically linked function: pthread_mutex_lock at 0x8806 -- 0x8807
; data inside code section at 0x8807 -- 0x8819
0x8807:     ff ff ff 85 c0 0f 85 98  04 00 00 8d 45 18 89 04   |............E...|
0x8817:     24 e8                                              |$.              |
; dynamically linked function: pthread_cond_signal at 0x8819 -- 0x881a
; data inside code section at 0x881a -- 0x8829
0x881a:     ff ff ff 85 c0 0f 85 80  04 00 00 89 2c 24 e8      |............,$. |
; dynamically linked function: pthread_mutex_unlock at 0x8829 -- 0x882a
; data inside code section at 0x882a -- 0x8843
0x882a:     ff ff ff 85 c0 0f 85 6b  04 00 00 c6 87 d8 01 00   |.......k........|
0x883a:     00 00 8b bc 24 c8 00 00  00                        |....$....       |
; function: function_8843 at 0x8843 -- 0x8872
0x8843:     89 3c 24                           	mov dword ptr [esp], edi
0x8846:     e8 65 93 ff ff                     	call 0x1bb0 <_ZN5CNode21CloseSocketDisconnectEv>
0x884b:     8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0x8852:     80 b8 cf 01 00 00 00               	cmp byte ptr [eax + 0x1cf], 0
0x8859:     75 09                              	jne 0x8864 <function_8843+0x21>
0x885b:     80 b8 ce 01 00 00 00               	cmp byte ptr [eax + 0x1ce], 0
0x8862:     74 07                              	je 0x886b <function_8843+0x28>
0x8864:     83 a8 34 02 00 00 01               	sub dword ptr [eax + 0x234], 1
0x886b:     c7 04 24 0c 00 00 00               	mov dword ptr [esp], 0xc
; data inside code section at 0x8872 -- 0x8873
0x8872:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x8873 -- 0x8874
; data inside code section at 0x8874 -- 0x8892
0x8874:     ff ff ff 83 f8 f8 74 0a  8b 94 24 c8 00 00 00 89   |......t...$.....|
0x8884:     50 08 c7 44 24 04 18 a3  00 00 89 04 24 e8         |P..D$.......$.  |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x8892 -- 0x8893
; data inside code section at 0x8893 -- 0x8896
0x8893:     ff ff ff                                           |...             |
; function: function_8896 at 0x8896 -- 0x88a3
0x8896:     83 c3 04                           	add ebx, 4
0x8899:     39 5c 24 5c                        	cmp dword ptr [esp + 0x5c], ebx
0x889d:     0f 85 70 fe ff ff                  	jne 0x8713
; function: function_88a3 at 0x88a3 -- 0x88cf
0x88a3:     8b 1d 18 a3 00 00                  	mov ebx, dword ptr [0xa318] ; "eed"
0x88a9:     8d bc 24 98 00 00 00               	lea edi, [esp + 0x98]
0x88b0:     89 bc 24 98 00 00 00               	mov dword ptr [esp + 0x98], edi
0x88b7:     89 bc 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], edi
0x88be:     81 fb 18 a3 00 00                  	cmp ebx, 0xa318 ; "eed"
0x88c4:     74 2f                              	je 0x88f5 <function_88f5>
0x88c6:     66 90                              	nop 
0x88c8:     c7 04 24 0c 00 00 00               	mov dword ptr [esp], 0xc
; data inside code section at 0x88cf -- 0x88d0
0x88cf:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0x88d0 -- 0x88d1
; data inside code section at 0x88d1 -- 0x88e7
0x88d1:     ff ff ff 83 f8 f8 74 06  8b 53 08 89 50 08 89 7c   |......t..S..P..||
0x88e1:     24 04 89 04 24 e8                                  |$...$.          |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x88e7 -- 0x88e8
; data inside code section at 0x88e8 -- 0x88f5
0x88e8:     ff ff ff 8b 1b 81 fb 18  a3 00 00 75 d3            |...........u.   |
; function: function_88f5 at 0x88f5 -- 0x8931
0x88f5:     8b 0f                              	mov ecx, dword ptr [edi]
0x88f7:     8d 9c 24 a0 00 00 00               	lea ebx, [esp + 0xa0]
0x88fe:     89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x8902:     39 7c 24 5c                        	cmp dword ptr [esp + 0x5c], edi
0x8906:     0f 84 d5 01 00 00                  	je 0x8ae1 <function_8ae1>
0x890c:     8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x8910:     8b 69 08                           	mov ebp, dword ptr [ecx + 8]
0x8913:     89 ac 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ebp
0x891a:     83 bd 34 02 00 00 00               	cmp dword ptr [ebp + 0x234], 0
0x8921:     7c 55                              	jl 0x8978 <function_8978>
0x8923:     74 77                              	je 0x899c <function_899c>
0x8925:     8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x8929:     8b 12                              	mov edx, dword ptr [edx]
0x892b:     89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x892f:     eb d1                              	jmp 0x8902 <function_88f5+0xd>
; data inside code section at 0x8931 -- 0x8938
0x8931:     8d b4 26 00 00 00 00                               |..&....         |
; function: function_8938 at 0x8938 -- 0x8978
0x8938:     83 b8 34 02 00 00 00               	cmp dword ptr [eax + 0x234], 0
0x893f:     7c 37                              	jl 0x8978 <function_8978>
0x8941:     0f 85 4f ff ff ff                  	jne 0x8896 <function_8896>
0x8947:     8b b8 e4 00 00 00                  	mov edi, dword ptr [eax + 0xe4]
0x894d:     39 b8 f4 00 00 00                  	cmp dword ptr [eax + 0xf4], edi
0x8953:     0f 85 3d ff ff ff                  	jne 0x8896 <function_8896>
0x8959:     8b 50 28                           	mov edx, dword ptr [eax + 0x28]
0x895c:     85 d2                              	test edx, edx
0x895e:     0f 85 32 ff ff ff                  	jne 0x8896 <function_8896>
0x8964:     8b 50 10                           	mov edx, dword ptr [eax + 0x10]
0x8967:     2b 50 0c                           	sub edx, dword ptr [eax + 0xc]
0x896a:     3b 50 18                           	cmp edx, dword ptr [eax + 0x18]
0x896d:     0f 85 23 ff ff ff                  	jne 0x8896 <function_8896>
0x8973:     e9 b1 fd ff ff                     	jmp 0x8729
; function: function_8978 at 0x8978 -- 0x8997
0x8978:     c7 44 24 0c 27 7b 02 00            	mov dword ptr [esp + 0xc], 0x27b27 ; "int CNode::GetRefCount()"
0x8980:     c7 44 24 08 28 01 00 00            	mov dword ptr [esp + 8], 0x128
0x8988:     c7 44 24 04 5b a2 00 00            	mov dword ptr [esp + 4], 0xa25b ; "net.h"
0x8990:     c7 04 24 43 a4 00 00               	mov dword ptr [esp], 0xa443 ; "nRefCount >= 0"
; data inside code section at 0x8997 -- 0x8998
0x8997:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8998 -- 0x8999
; data inside code section at 0x8999 -- 0x899c
0x8999:     ff ff ff                                           |...             |
; function: function_899c at 0x899c -- 0x8ada
0x899c:     8d 45 60                           	lea eax, [ebp + 0x60]
0x899f:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x89a7:     c7 44 24 10 10 03 00 00            	mov dword ptr [esp + 0x10], 0x310
0x89af:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x89b7:     c7 44 24 08 52 a4 00 00            	mov dword ptr [esp + 8], 0xa452 ; "pnode->cs_vSend"
0x89bf:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x89c3:     89 1c 24                           	mov dword ptr [esp], ebx
0x89c6:     e8 95 a2 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x89cb:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x89cf:     0f 84 f8 00 00 00                  	je 0x8acd <function_899c+0x131>
0x89d5:     8d 85 04 01 00 00                  	lea eax, [ebp + 0x104]
0x89db:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x89df:     8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x89e6:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x89ee:     c7 44 24 10 13 03 00 00            	mov dword ptr [esp + 0x10], 0x313
0x89f6:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x89fe:     c7 44 24 08 62 a4 00 00            	mov dword ptr [esp + 8], 0xa462 ; "pnode->cs_vRecvMsg"
0x8a06:     89 04 24                           	mov dword ptr [esp], eax
0x8a09:     e8 52 a2 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x8a0e:     80 bc 24 ac 00 00 00 00            	cmp byte ptr [esp + 0xac], 0
0x8a16:     0f 84 a2 00 00 00                  	je 0x8abe <function_899c+0x122>
0x8a1c:     8d 94 24 b0 00 00 00               	lea edx, [esp + 0xb0]
0x8a23:     81 c5 18 03 00 00                  	add ebp, 0x318
0x8a29:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x8a31:     c7 44 24 10 16 03 00 00            	mov dword ptr [esp + 0x10], 0x316
0x8a39:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x8a41:     c7 44 24 08 75 a4 00 00            	mov dword ptr [esp + 8], 0xa475 ; "pnode->cs_inventory"
0x8a49:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x8a4d:     89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x8a51:     89 14 24                           	mov dword ptr [esp], edx
0x8a54:     e8 07 a2 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x8a59:     8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x8a5d:     0f b6 ac 24 b4 00 00 00            	movzx ebp, byte ptr [esp + 0xb4]
0x8a65:     89 0c 24                           	mov dword ptr [esp], ecx
0x8a68:     e8 73 9e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8a6d:     8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x8a74:     89 04 24                           	mov dword ptr [esp], eax
0x8a77:     e8 64 9e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8a7c:     89 1c 24                           	mov dword ptr [esp], ebx
0x8a7f:     e8 5c 9e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8a84:     89 ea                              	mov edx, ebp
0x8a86:     84 d2                              	test dl, dl
0x8a88:     0f 84 97 fe ff ff                  	je 0x8925
0x8a8e:     8b 2d 18 a3 00 00                  	mov ebp, dword ptr [0xa318] ; "eed"
0x8a94:     ba 18 a3 00 00                     	mov edx, 0xa318 ; "eed"
0x8a99:     89 f1                              	mov ecx, esi
0x8a9b:     81 fd 18 a3 00 00                  	cmp ebp, 0xa318 ; "eed"
0x8aa1:     0f 84 46 01 00 00                  	je 0x8bed <function_8bed>
0x8aa7:     8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0x8aae:     39 45 08                           	cmp dword ptr [ebp + 8], eax
0x8ab1:     8b 75 00                           	mov esi, dword ptr [ebp]
0x8ab4:     0f 84 03 01 00 00                  	je 0x8bbd <function_8bbd>
0x8aba:     89 f5                              	mov ebp, esi
0x8abc:     eb dd                              	jmp 0x8a9b <function_899c+0xff>
0x8abe:     8d 8c 24 a8 00 00 00               	lea ecx, [esp + 0xa8]
0x8ac5:     89 0c 24                           	mov dword ptr [esp], ecx
0x8ac8:     e8 13 9e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8acd:     89 1c 24                           	mov dword ptr [esp], ebx
0x8ad0:     e8 0b 9e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8ad5:     e9 4b fe ff ff                     	jmp 0x8925
; function: function_8ada at 0x8ada -- 0x8ae1
0x8ada:     31 f6                              	xor esi, esi
0x8adc:     e9 01 fc ff ff                     	jmp 0x86e2 <function_86e2>
; function: function_8ae1 at 0x8ae1 -- 0x8b18
0x8ae1:     8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0x8ae5:     89 3c 24                           	mov dword ptr [esp], edi
0x8ae8:     e8 03 29 00 00                     	call 0xb3f0 <_ZNSt4listIP5CNodeSaIS1_EED1Ev>
0x8aed:     89 f0                              	mov eax, esi
0x8aef:     e8 0c 75 ff ff                     	call 0
0x8af4:     8d 84 24 90 00 00 00               	lea eax, [esp + 0x90]
0x8afb:     89 04 24                           	mov dword ptr [esp], eax
0x8afe:     e8 dd 9d 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8b03:     8b 1d 78 a1 00 00                  	mov ebx, dword ptr [0xa178] ; "4.208.43.192"
0x8b09:     2b 1d 74 a1 00 00                  	sub ebx, dword ptr [0xa174] ; "rg"
0x8b0f:     c1 fb 02                           	sar ebx, 2
0x8b12:     39 5c 24 64                        	cmp dword ptr [esp + 0x64], ebx
0x8b16:     74 1d                              	je 0x8b35
; data inside code section at 0x8b18 -- 0x8b19
0x8b18:     a1                                                 |.               |
; dynamically linked function: uiInterface at 0x8b19 -- 0x8b9e
; data inside code section at 0x8b9e -- 0x8b9f
0x8b9e:     e8                                                 |.               |
; dynamically linked function: __fdelt_chk at 0x8b9f -- 0x8ba0
; data inside code section at 0x8ba0 -- 0x8ba3
0x8ba0:     ff ff ff                                           |...             |
; function: function_8ba3 at 0x8ba3 -- 0x8bbd
0x8ba3:     ba 01 00 00 00                     	mov edx, 1
0x8ba8:     89 f1                              	mov ecx, esi
0x8baa:     d3 e2                              	shl edx, cl
0x8bac:     09 94 84 e4 00 00 00               	or dword ptr [esp + eax*4 + 0xe4], edx
0x8bb3:     39 f5                              	cmp ebp, esi
0x8bb5:     0f 42 ee                           	cmovb ebp, esi
0x8bb8:     83 c3 04                           	add ebx, 4
0x8bbb:     eb cd                              	jmp 0x8b8a
; function: function_8bbd at 0x8bbd -- 0x8bd1
0x8bbd:     8d 45 08                           	lea eax, [ebp + 8]
0x8bc0:     39 44 24 58                        	cmp dword ptr [esp + 0x58], eax
0x8bc4:     74 6d                              	je 0x8c33 <function_8c33>
0x8bc6:     89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x8bca:     89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0x8bce:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x8bd1 -- 0x8bd2
0x8bd1:     e8                                                 |.               |
; dynamically linked function: _ZNSt8__detail15_List_node_base9_M_unhookEv at 0x8bd2 -- 0x8bd3
; data inside code section at 0x8bd3 -- 0x8bdc
0x8bd3:     ff ff ff 89 2c 24 89 f5  e8                        |....,$...       |
; dynamically linked function: _ZdlPv at 0x8bdc -- 0x8bdd
; data inside code section at 0x8bdd -- 0x8bdf
0x8bdd:     ff ff                                              |..              |
; function: function_8bdf at 0x8bdf -- 0x8bed
0x8bdf:     ff 8b 54 24 50 8b                  	dec dword ptr [ebx - 0x74afdbac]
0x8be5:     4c                                 	dec esp
0x8be6:     24 54                              	and al, 0x54
0x8be8:     e9 ae fe ff ff                     	jmp 0x8a9b
; function: function_8bed at 0x8bed -- 0x8bfe
0x8bed:     81 fa 18 a3 00 00                  	cmp edx, 0xa318 ; "eed"
0x8bf3:     89 ce                              	mov esi, ecx
0x8bf5:     74 18                              	je 0x8c0f <function_8c0f>
0x8bf7:     89 14 24                           	mov dword ptr [esp], edx
0x8bfa:     89 54 24 50                        	mov dword ptr [esp + 0x50], edx
; data inside code section at 0x8bfe -- 0x8bff
0x8bfe:     e8                                                 |.               |
; dynamically linked function: _ZNSt8__detail15_List_node_base9_M_unhookEv at 0x8bff -- 0x8c00
; data inside code section at 0x8c00 -- 0x8c0b
0x8c00:     ff ff ff 8b 54 24 50 89  14 24 e8                  |....T$P..$.     |
; dynamically linked function: _ZdlPv at 0x8c0b -- 0x8c0c
; data inside code section at 0x8c0c -- 0x8c0f
0x8c0c:     ff ff ff                                           |...             |
; function: function_8c0f at 0x8c0f -- 0x8c29
0x8c0f:     8b ac 24 c8 00 00 00               	mov ebp, dword ptr [esp + 0xc8]
0x8c16:     85 ed                              	test ebp, ebp
0x8c18:     0f 84 07 fd ff ff                  	je 0x8925
0x8c1e:     89 2c 24                           	mov dword ptr [esp], ebp
0x8c21:     e8 7a ce 00 00                     	call 0x15aa0 <_ZN5CNodeD1Ev>
0x8c26:     89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x8c29 -- 0x8c2a
0x8c29:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x8c2a -- 0x8c2b
; data inside code section at 0x8c2b -- 0x8c2e
0x8c2b:     ff ff ff                                           |...             |
; function: function_8c2e at 0x8c2e -- 0x8c33
0x8c2e:     e9 f2 fc ff ff                     	jmp 0x8925
; function: function_8c33 at 0x8c33 -- 0x8c3c
0x8c33:     89 ea                              	mov edx, ebp
0x8c35:     89 f5                              	mov ebp, esi
0x8c37:     e9 5f fe ff ff                     	jmp 0x8a9b
; data inside code section at 0x8c3c -- 0x8c4f
0x8c3c:     89 c5 8d 84 24 a8 00 00  00 89 04 24 e8 93 9c 00   |....$......$....|
0x8c4c:     00 89 1c                                           |...             |
; function: function_8c4f at 0x8c4f -- 0x8c53
0x8c4f:     24 89                              	and al, 0x89
0x8c51:     eb e8                              	jmp 0x8c3b
; data inside code section at 0x8c53 -- 0x8c57
0x8c53:     89 9c 00 00                                        |....            |
; function: function_8c57 at 0x8c57 -- 0x8c58
; data inside code section at 0x8c58 -- 0x8c5f
0x8c58:     3c 24 e8 91 27 00 00                               |<$..'..         |
; function: function_8c5f at 0x8c5f -- 0x8c60
; data inside code section at 0x8c60 -- 0x8c66
0x8c60:     f0 e8 9a 73 ff ff                                  |...s..          |
; function: function_8c66 at 0x8c66 -- 0x8c67
; data inside code section at 0x8c67 -- 0x8c79
0x8c67:     94 24 90 00 00 00 89 14  24 e8 6b 9c 00 00 89 1c   |.$......$.k.....|
0x8c77:     24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x8c79 -- 0x8c7a
; data inside code section at 0x8c7a -- 0x8c7c
0x8c7a:     ff ff                                              |..              |
; function: function_8c7c at 0x8c7c -- 0x8c83
0x8c7c:     ff 89 c5 eb cc 89                  	dec dword ptr [ecx - 0x7633143b]
0x8c82:     c3                                 	ret 
; function: function_8c83 at 0x8c83 -- 0x8c85
0x8c83:     eb d2                              	jmp 0x8c57 <function_8c57>
; data inside code section at 0x8c85 -- 0x8c8d
0x8c85:     8b 94 24 98 00 00 00 89                            |..$.....        |
; function: function_8c8d at 0x8c8d -- 0x8c8e
0x8c8d:     c3                                 	ret 
; function: function_8c8e at 0x8c8e -- 0x8c8f
; data inside code section at 0x8c8f -- 0x8c98
0x8c8f:     fa 74 cd 8b 2a 89 14 24  e8                        |.t..*..$.       |
; dynamically linked function: _ZdlPv at 0x8c98 -- 0x8c99
; data inside code section at 0x8c99 -- 0x8c9c
0x8c99:     ff ff ff                                           |...             |
; function: function_8c9c at 0x8c9c -- 0x8ca0
0x8c9c:     89 ea                              	mov edx, ebp
0x8c9e:     eb ee                              	jmp 0x8c8e <function_8c8e>
; data inside code section at 0x8ca0 -- 0x8ca9
0x8ca0:     e8 01 54 00 00 e8 cc 54  00                        |..T....T.       |
; function: function_8ca9 at 0x8ca9 -- 0x8cac
0x8ca9:     00 e8                              	add al, ch
0x8cab:     c3                                 	ret 
; data inside code section at 0x8cac -- 0x8cb5
0x8cac:     53 00 00 90 e8 59 54 00  00                        |S....YT..       |
; function: function_8cb5 at 0x8cb5 -- 0x8cb6
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x8cb6 -- 0x8cb7
; data inside code section at 0x8cb7 -- 0x8cb9
0x8cb7:     ff ff                                              |..              |
; function: function_8cb9 at 0x8cb9 -- 0x8cc0
0x8cb9:     ff 89 c3 eb a1 89                  	dec dword ptr [ecx - 0x765e143d]
0x8cbf:     c3                                 	ret 
; function: function_8cc0 at 0x8cc0 -- 0x8cc2
0x8cc0:     eb a4                              	jmp 0x8c66 <function_8c66>
; data inside code section at 0x8cc2 -- 0x8d03
0x8cc2:     8d 9c 24 c0 00 00 00 89  84 24 c4 00 00 00 c7 84   |..$......$......|
0x8cd2:     24 c0 00 00 00 20 78 02  00 89 1c 24 e8 ad 8c 00   |$.... x....$....|
0x8ce2:     00 c7 44 24 0c 40 7b 02  00 c7 44 24 08 9c 01 00   |..D$.@{...D$....|
0x8cf2:     00 c7 44 24 04 d0 d5 00  00 c7 04 24 6e 9f 00 00   |..D$.......$n...|
0x8d02:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x8d03 -- 0x8d04
; data inside code section at 0x8d04 -- 0x8d06
0x8d04:     ff ff                                              |..              |
; function: function_8d06 at 0x8d06 -- 0x8d18
0x8d06:     ff 89 c7 89 1c 24                  	dec dword ptr [ecx + 0x241c89c7]
0x8d0c:     89 fb                              	mov ebx, edi
0x8d0e:     e8 3d 5d 00 00                     	call 0xea50 <_ZN5boost10lock_errorD1Ev>
0x8d13:     e9 47 ff ff ff                     	jmp 0x8c5f <function_8c5f>
; function: function_8d18 at 0x8d18 -- 0x8d70
0x8d18:     8d 84 24 b0 00 00 00               	lea eax, [esp + 0xb0]
0x8d1f:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x8d27:     8d b4 24 a8 00 00 00               	lea esi, [esp + 0xa8]
0x8d2e:     c7 44 24 10 41 03 00 00            	mov dword ptr [esp + 0x10], 0x341
0x8d36:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x8d3e:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x8d46:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x8d4e:     89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x8d52:     89 04 24                           	mov dword ptr [esp], eax
0x8d55:     e8 06 9f 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x8d5a:     8b 15 78 a1 00 00                  	mov edx, dword ptr [0xa178] ; "4.208.43.192"
0x8d60:     8b 0d 74 a1 00 00                  	mov ecx, dword ptr [0xa174] ; "rg"
0x8d66:     89 54 24 78                        	mov dword ptr [esp + 0x78], edx
0x8d6a:     89 4c 24 74                        	mov dword ptr [esp + 0x74], ecx
0x8d6e:     eb 3f                              	jmp 0x8daf <function_8daf>
; data inside code section at 0x8d70 -- 0x8d83
0x8d70:     8b 43 40 39 43 50 0f 84  9f 00 00 00 8b 43 08 89   |.C@9CP.......C..|
0x8d80:     04 24 e8                                           |.$.             |
; dynamically linked function: __fdelt_chk at 0x8d83 -- 0x8d84
; data inside code section at 0x8d84 -- 0x8da0
0x8d84:     ff ff ff 8b 4b 08 ba 01  00 00 00 d3 e2 09 94 84   |....K...........|
0x8d94:     64 01 00 00 89 34 24 e8  40 9b 00 00               |d....4$.@...    |
; function: function_8da0 at 0x8da0 -- 0x8da1
; data inside code section at 0x8da1 -- 0x8daa
0x8da1:     fd 0f 42 ef bf 01 00 00  00                        |..B......       |
; function: function_8daa at 0x8daa -- 0x8daf
0x8daa:     83 44 24 74 04                     	add dword ptr [esp + 0x74], 4
; function: function_8daf at 0x8daf -- 0x8dca
0x8daf:     8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x8db3:     39 44 24 78                        	cmp dword ptr [esp + 0x78], eax
0x8db7:     0f 84 bf 01 00 00                  	je 0x8f7c <function_8f7c>
0x8dbd:     8b 18                              	mov ebx, dword ptr [eax]
0x8dbf:     8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x8dc2:     83 f8 ff                           	cmp eax, -1
0x8dc5:     74 e3                              	je 0x8daa <function_8daa>
0x8dc7:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8dca -- 0x8dcb
0x8dca:     e8                                                 |.               |
; dynamically linked function: __fdelt_chk at 0x8dcb -- 0x8dcc
; data inside code section at 0x8dcc -- 0x8e54
0x8dcc:     ff ff ff 8b 7b 08 ba 01  00 00 00 89 f9 d3 e2 09   |....{...........|
0x8ddc:     94 84 e4 01 00 00 8d 43  60 c7 44 24 14 01 00 00   |.......C`.D$....|
0x8dec:     00 c7 44 24 10 5a 03 00  00 c7 44 24 0c 27 a0 00   |..D$.Z....D$.'..|
0x8dfc:     00 c7 44 24 08 52 a4 00  00 89 44 24 04 89 34 24   |..D$.R....D$..4$|
0x8e0c:     e8 4f 9e 00 00 80 7e 04  00 0f 85 55 ff ff ff 89   |.O....~....U....|
0x8e1c:     34 24 e8 bd 9a 00 00 8d  83 04 01 00 00 c7 44 24   |4$............D$|
0x8e2c:     14 01 00 00 00 c7 44 24  10 61 03 00 00 c7 44 24   |......D$.a....D$|
0x8e3c:     0c 27 a0 00 00 c7 44 24  08 62 a4 00 00 89 44 24   |.'....D$.b....D$|
0x8e4c:     04 89 34 24 e8 0b 9e 00                            |..4$....        |
; function: function_8e54 at 0x8e54 -- 0x8e6b
0x8e54:     00 80 7e 04 00 74                  	add byte ptr [eax + 0x7400047e], al
0x8e5a:     31 8b 93 f4 00 00                  	xor dword ptr [ebx + 0xf493], ecx
0x8e60:     00 8b 83 e4 00 00                  	add byte ptr [ebx + 0xe483], cl
0x8e66:     00 39                              	add byte ptr [ecx], bh
0x8e68:     c2 74 05                           	ret 0x574
; data inside code section at 0x8e6b -- 0x8e70
0x8e6b:     80 38 00 75 29                                     |.8.u)           |
; function: function_8e70 at 0x8e70 -- 0x8e71
; data inside code section at 0x8e71 -- 0x8e77
0x8e71:     43 08 89 04 24 e8                                  |C...$.          |
; dynamically linked function: __fdelt_chk at 0x8e77 -- 0x8e78
; data inside code section at 0x8e78 -- 0x8e7a
0x8e78:     ff ff                                              |..              |
; function: function_8e7a at 0x8e7a -- 0x8e99
0x8e7a:     ff 8b 4b 08 ba 01                  	dec dword ptr [ebx + 0x1ba084b]
0x8e80:     00 00                              	add byte ptr [eax], al
0x8e82:     00 d3                              	add bl, dl
0x8e84:     e2 09                              	loop 0x8e8f <function_8e7a+0x15>
0x8e86:     94                                 	xchg eax, esp
0x8e87:     84 e4                              	test ah, ah
0x8e89:     00 00                              	add byte ptr [eax], al
; data inside code section at 0x8e8b -- 0x8e8c
0x8e8b:     00                                                 |.               |
0x8e8c:     89 34 24                           	mov dword ptr [esp], esi
0x8e8f:     e8 4c 9a 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8e94:     e9 07 ff ff ff                     	jmp 0x8da0 <function_8da0>
; function: function_8e99 at 0x8e99 -- 0x8f2c
0x8e99:     8b 48 58                           	mov ecx, dword ptr [eax + 0x58]
0x8e9c:     39 48 30                           	cmp dword ptr [eax + 0x30], ecx
0x8e9f:     75 cf                              	jne 0x8e70 <function_8e70>
0x8ea1:     8b 8b ec 00 00 00                  	mov ecx, dword ptr [ebx + 0xec]
0x8ea7:     89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x8eab:     c7 44 24 5c 00 00 00 00            	mov dword ptr [esp + 0x5c], 0
0x8eb3:     89 7c 24 70                        	mov dword ptr [esp + 0x70], edi
0x8eb7:     89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x8ebb:     8b 8b f0 00 00 00                  	mov ecx, dword ptr [ebx + 0xf0]
0x8ec1:     89 d3                              	mov ebx, edx
0x8ec3:     31 d2                              	xor edx, edx
0x8ec5:     89 4c 24 60                        	mov dword ptr [esp + 0x60], ecx
0x8ec9:     8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x8ecd:     eb 05                              	jmp 0x8ed4 <function_8e99+0x3b>
; data inside code section at 0x8ecf -- 0x8ed0
0x8ecf:     90                                                 |.               |
0x8ed0:     39 c3                              	cmp ebx, eax
0x8ed2:     74 2f                              	je 0x8f03 <function_8e99+0x6a>
0x8ed4:     bf 18 00 00 00                     	mov edi, 0x18
0x8ed9:     2b 78 48                           	sub edi, dword ptr [eax + 0x48]
0x8edc:     01 d7                              	add edi, edx
0x8ede:     8b 50 40                           	mov edx, dword ptr [eax + 0x40]
0x8ee1:     2b 50 3c                           	sub edx, dword ptr [eax + 0x3c]
0x8ee4:     83 c0 5c                           	add eax, 0x5c
0x8ee7:     01 fa                              	add edx, edi
0x8ee9:     39 c8                              	cmp eax, ecx
0x8eeb:     75 e3                              	jne 0x8ed0 <function_8e99+0x37>
0x8eed:     8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x8ef1:     8b 47 04                           	mov eax, dword ptr [edi + 4]
0x8ef4:     83 c7 04                           	add edi, 4
0x8ef7:     89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0x8efb:     8d 88 cc 01 00 00                  	lea ecx, [eax + 0x1cc]
0x8f01:     eb cd                              	jmp 0x8ed0 <function_8e99+0x37>
0x8f03:     89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x8f07:     8d 84 24 e3 00 00 00               	lea eax, [esp + 0xe3]
0x8f0e:     8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x8f12:     8d 94 24 dc 00 00 00               	lea edx, [esp + 0xdc]
0x8f19:     8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0x8f1d:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0x8f21:     c7 44 24 04 89 a4 00 00            	mov dword ptr [esp + 4], 0xa489 ; "-maxreceivebuffer"
0x8f29:     89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x8f2c -- 0x8f2d
0x8f2c:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x8f2d -- 0x8f2e
; data inside code section at 0x8f2e -- 0x8f4c
0x8f2e:     ff ff ff 8d 8c 24 dc 00  00 00 c7 44 24 04 88 13   |.....$.....D$...|
0x8f3e:     00 00 c7 44 24 08 00 00  00 00 89 0c 24 e8         |...D$.......$.  |
; dynamically linked function: _Z6GetArgRKSsx at 0x8f4c -- 0x8f4d
; data inside code section at 0x8f4d -- 0x8f4f
0x8f4d:     ff ff                                              |..              |
; function: function_8f4f at 0x8f4f -- 0x8f52
0x8f4f:     ff 69 c0                           	ljmp [ecx - 0x40]
; data inside code section at 0x8f52 -- 0x8f65
0x8f52:     e8 03 00 00 89 44 24 60  8d 84 24 dc 00 00 00 89   |.....D$`..$.....|
0x8f62:     04 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsD1Ev at 0x8f65 -- 0x8f66
; data inside code section at 0x8f66 -- 0x8f68
0x8f66:     ff ff                                              |..              |
; function: function_8f68 at 0x8f68 -- 0x8f7c
0x8f68:     ff 8b 54 24 60 39                  	dec dword ptr [ebx + 0x39602454]
0x8f6e:     54                                 	push esp
0x8f6f:     24 5c                              	and al, 0x5c
0x8f71:     0f 86 f9 fe ff ff                  	jbe 0x8e70 <function_8e70>
0x8f77:     e9 10 ff ff ff                     	jmp 0x8e8c
; function: function_8f7c at 0x8f7c -- 0x8fc3
0x8f7c:     8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x8f80:     89 14 24                           	mov dword ptr [esp], edx
0x8f83:     e8 58 99 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x8f88:     89 f9                              	mov ecx, edi
0x8f8a:     31 c0                              	xor eax, eax
0x8f8c:     8d 55 01                           	lea edx, [ebp + 1]
0x8f8f:     84 c9                              	test cl, cl
0x8f91:     0f 45 c2                           	cmovne eax, edx
0x8f94:     8d 94 24 b8 00 00 00               	lea edx, [esp + 0xb8]
0x8f9b:     89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x8f9f:     8d 94 24 e4 01 00 00               	lea edx, [esp + 0x1e4]
0x8fa6:     8d 8c 24 64 01 00 00               	lea ecx, [esp + 0x164]
0x8fad:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x8fb1:     8d 94 24 e4 00 00 00               	lea edx, [esp + 0xe4]
0x8fb8:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x8fbc:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0x8fc0:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x8fc3 -- 0x8fc4
0x8fc3:     e8                                                 |.               |
; dynamically linked function: select at 0x8fc4 -- 0x8fc5
; data inside code section at 0x8fc5 -- 0x8fc9
0x8fc5:     ff ff ff 89                                        |....            |
; function: function_8fc9 at 0x8fc9 -- 0x8fca
0x8fc9:     c3                                 	ret 
; data inside code section at 0x8fca -- 0x8fcb
0x8fca:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x8fcb -- 0x8fcc
; data inside code section at 0x8fcc -- 0x8fce
0x8fcc:     ff ff                                              |..              |
; function: function_8fce at 0x8fce -- 0x900a
0x8fce:     ff 83 c3 01 0f 84                  	inc dword ptr [ebx - 0x7bf0fe3d]
0x8fd4:     0a 09                              	or cl, byte ptr [ecx]
0x8fd6:     00 00                              	add byte ptr [eax], al
0x8fd8:     a1 24 a3 00 00                     	mov eax, dword ptr [0xa324]
0x8fdd:     8b 15 20 a3 00 00                  	mov edx, dword ptr [0xa320]
0x8fe3:     89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x8fe7:     89 54 24 60                        	mov dword ptr [esp + 0x60], edx
0x8feb:     eb 05                              	jmp 0x8ff2 <function_8fce+0x24>
0x8fed:     83 44 24 60 04                     	add dword ptr [esp + 0x60], 4
0x8ff2:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x8ff6:     39 44 24 6c                        	cmp dword ptr [esp + 0x6c], eax
0x8ffa:     0f 84 41 02 00 00                  	je 0x9241 <function_9241>
0x9000:     8b 18                              	mov ebx, dword ptr [eax]
0x9002:     83 fb ff                           	cmp ebx, -1
0x9005:     74 e6                              	je 0x8fed <function_8fce+0x1f>
0x9007:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x900a -- 0x900b
0x900a:     e8                                                 |.               |
; dynamically linked function: __fdelt_chk at 0x900b -- 0x900c
; data inside code section at 0x900c -- 0x904a
0x900c:     ff ff ff 89 d9 8b 84 84  e4 00 00 00 d3 f8 a8 01   |................|
0x901c:     74 cf 8d 84 24 64 02 00  00 8d bc 24 cc 00 00 00   |t...$d.....$....|
0x902c:     c7 84 24 cc 00 00 00 80  00 00 00 8d ac 24 e4 02   |..$..........$..|
0x903c:     00 00 89 7c 24 08 89 44  24 04 89 1c 24 e8         |...|$..D$...$.  |
; dynamically linked function: accept at 0x904a -- 0x904b
; data inside code section at 0x904b -- 0x9056
0x904b:     ff ff ff 89 2c 24 89 44  24 5c e8                  |....,$.D$\.     |
; dynamically linked function: _ZN8CAddressC1Ev at 0x9056 -- 0x9057
; data inside code section at 0x9057 -- 0x9070
0x9057:     ff ff ff 83 7c 24 5c ff  74 1b 8d 94 24 64 02 00   |....|$\.t...$d..|
0x9067:     00 89 54 24 04 89 2c 24  e8                        |..T$..,$.       |
; dynamically linked function: _ZN8CService11SetSockAddrEPK8sockaddr at 0x9070 -- 0x9071
; data inside code section at 0x9071 -- 0x9073
0x9071:     ff ff                                              |..              |
; function: function_9073 at 0x9073 -- 0x914d
0x9073:     ff 84 c0 0f 84 81 03               	inc dword ptr [eax + eax*8 + 0x381840f]
0x907a:     00 00                              	add byte ptr [eax], al
0x907c:     8d 8c 24 a8 00 00 00               	lea ecx, [esp + 0xa8]
0x9083:     31 db                              	xor ebx, ebx
0x9085:     89 0c 24                           	mov dword ptr [esp], ecx
0x9088:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9090:     c7 44 24 10 92 03 00 00            	mov dword ptr [esp + 0x10], 0x392
0x9098:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x90a0:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x90a8:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x90b0:     e8 ab 9b 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x90b5:     a1 74 a1 00 00                     	mov eax, dword ptr [0xa174] ; "rg"
0x90ba:     8b 0d 78 a1 00 00                  	mov ecx, dword ptr [0xa178] ; "4.208.43.192"
0x90c0:     39 c8                              	cmp eax, ecx
0x90c2:     74 17                              	je 0x90db <function_9073+0x68>
0x90c4:     8d 74 26 00                        	lea esi, [esi]
0x90c8:     8b 10                              	mov edx, dword ptr [eax]
0x90ca:     80 ba ce 01 00 00 01               	cmp byte ptr [edx + 0x1ce], 1
0x90d1:     83 db ff                           	sbb ebx, -1
0x90d4:     83 c0 04                           	add eax, 4
0x90d7:     39 c1                              	cmp ecx, eax
0x90d9:     75 ed                              	jne 0x90c8 <function_9073+0x55>
0x90db:     8d bc 24 a8 00 00 00               	lea edi, [esp + 0xa8]
0x90e2:     89 3c 24                           	mov dword ptr [esp], edi
0x90e5:     e8 f6 97 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x90ea:     83 7c 24 5c ff                     	cmp dword ptr [esp + 0x5c], -1
0x90ef:     0f 84 27 01 00 00                  	je 0x921c <function_921c>
0x90f5:     a1 30 9e 00 00                     	mov eax, dword ptr [0x9e30]
0x90fa:     83 e8 08                           	sub eax, 8
0x90fd:     39 d8                              	cmp eax, ebx
0x90ff:     0f 8f a9 00 00 00                  	jg 0x91ae <function_91ae>
0x9105:     8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x910c:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9114:     c7 44 24 10 a1 03 00 00            	mov dword ptr [esp + 0x10], 0x3a1
0x911c:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x9124:     c7 44 24 08 75 a3 00 00            	mov dword ptr [esp + 8], 0xa375 ; "cs_setservAddNodeAddresses"
0x912c:     c7 44 24 04 60 9f 00 00            	mov dword ptr [esp + 4], 0x9f60 ; "estroy(&cond)"
0x9134:     89 04 24                           	mov dword ptr [esp], eax
0x9137:     e8 24 9b 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x913c:     8b 1d bc 9f 00 00                  	mov ebx, dword ptr [0x9fbc] ; ">is_initialized()"
0x9142:     85 db                              	test ebx, ebx
0x9144:     74 48                              	je 0x918e <function_918e>
0x9146:     be b8 9f 00 00                     	mov esi, 0x9fb8 ; "his->is_initialized()"
0x914b:     eb 0c                              	jmp 0x9159 <function_9159>
; data inside code section at 0x914d -- 0x9150
0x914d:     8d 76 00                                           |.v.             |
; function: function_9150 at 0x9150 -- 0x9159
0x9150:     89 de                              	mov esi, ebx
0x9152:     8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x9155:     85 db                              	test ebx, ebx
0x9157:     74 1a                              	je 0x9173
; function: function_9159 at 0x9159 -- 0x9163
0x9159:     8d 43 10                           	lea eax, [ebx + 0x10]
0x915c:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x9160:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x9163 -- 0x9164
0x9163:     e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x9164 -- 0x9165
; data inside code section at 0x9165 -- 0x9173
0x9165:     ff ff ff 84 c0 74 e4 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_9173 at 0x9173 -- 0x9174
; data inside code section at 0x9174 -- 0x9186
0x9174:     fe b8 9f 00 00 74 13 83  c6 10 89 74 24 04 89 2c   |.....t.....t$..,|
0x9184:     24 e8                                              |$.              |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x9186 -- 0x9187
; data inside code section at 0x9187 -- 0x918e
0x9187:     ff ff ff 84 c0 74 0c                               |.....t.         |
; function: function_918e at 0x918e -- 0x9195
0x918e:     8b 44 24 5c                        	mov eax, dword ptr [esp + 0x5c]
0x9192:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x9195 -- 0x9196
0x9195:     e8                                                 |.               |
; dynamically linked function: close at 0x9196 -- 0x9197
; data inside code section at 0x9197 -- 0x9199
0x9197:     ff ff                                              |..              |
; function: function_9199 at 0x9199 -- 0x91ae
0x9199:     ff 8d 94 24 a8 00                  	dec dword ptr [ebp + 0xa82494]
0x919f:     00 00                              	add byte ptr [eax], al
0x91a1:     89 14 24                           	mov dword ptr [esp], edx
0x91a4:     e8 37 97 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x91a9:     e9 3f fe ff ff                     	jmp 0x8fed
; function: function_91ae at 0x91ae -- 0x91e6
0x91ae:     8d bc 24 0c 03 00 00               	lea edi, [esp + 0x30c]
0x91b5:     b9 04 00 00 00                     	mov ecx, 4
0x91ba:     89 ee                              	mov esi, ebp
0x91bc:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x91be:     8d b4 24 0c 03 00 00               	lea esi, [esp + 0x30c]
0x91c5:     89 e7                              	mov edi, esp
0x91c7:     b1 04                              	mov cl, 4
0x91c9:     f3 a5                              	rep movsd dword ptr es:[edi], dword ptr [esi]
0x91cb:     e8 00 81 ff ff                     	call 0x12d0 <_ZN5CNode8IsBannedE8CNetAddr>
0x91d0:     84 c0                              	test al, al
0x91d2:     0f 84 fc 00 00 00                  	je 0x92d4 <function_92d4>
0x91d8:     8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x91df:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x91e3:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x91e6 -- 0x91e7
0x91e6:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x91e7 -- 0x91e8
; data inside code section at 0x91e8 -- 0x91ff
0x91e8:     ff ff ff 50 8b 84 24 d0  00 00 00 c7 04 24 1c e0   |...P..$......$..|
0x91f8:     00 00 89 44 24 04 e8                               |...D$..         |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x91ff -- 0x9200
; data inside code section at 0x9200 -- 0x9207
0x9200:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x9207 -- 0x9208
; data inside code section at 0x9208 -- 0x9213
0x9208:     ff ff ff 8b 44 24 5c 89  04 24 e8                  |....D$\..$.     |
; dynamically linked function: close at 0x9213 -- 0x9214
; data inside code section at 0x9214 -- 0x9217
0x9214:     ff ff ff                                           |...             |
; function: function_9217 at 0x9217 -- 0x921c
0x9217:     e9 d1 fd ff ff                     	jmp 0x8fed
; function: function_921c at 0x921c -- 0x921d
; dynamically linked function: __errno_location at 0x921d -- 0x921e
; data inside code section at 0x921e -- 0x9238
0x921e:     ff ff ff 8b 00 83 f8 0b  0f 84 c1 fd ff ff 89 44   |...............D|
0x922e:     24 04 c7 04 24 fc df 00  00 e8                     |$...$.....      |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9238 -- 0x9239
; data inside code section at 0x9239 -- 0x923c
0x9239:     ff ff ff                                           |...             |
; function: function_923c at 0x923c -- 0x9241
0x923c:     e9 ac fd ff ff                     	jmp 0x8fed
; function: function_9241 at 0x9241 -- 0x92d4
0x9241:     8d 94 24 a8 00 00 00               	lea edx, [esp + 0xa8]
0x9248:     c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0x9253:     c7 84 24 88 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x88], 0
0x925e:     c7 84 24 8c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x8c], 0
0x9269:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9271:     c7 44 24 10 bd 03 00 00            	mov dword ptr [esp + 0x10], 0x3bd
0x9279:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x9281:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x9289:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x9291:     89 14 24                           	mov dword ptr [esp], edx
0x9294:     e8 c7 99 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x9299:     8d 94 24 84 00 00 00               	lea edx, [esp + 0x84]
0x92a0:     c7 44 24 04 74 a1 00 00            	mov dword ptr [esp + 4], 0xa174 ; "rg"
0x92a8:     89 14 24                           	mov dword ptr [esp], edx
0x92ab:     e8 60 9b 00 00                     	call 0x12e10 <_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_>
0x92b0:     8b 8c 24 88 00 00 00               	mov ecx, dword ptr [esp + 0x88]
0x92b7:     8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x92be:     39 c1                              	cmp ecx, eax
0x92c0:     0f 84 48 01 00 00                  	je 0x940e <function_940e>
0x92c6:     8b 10                              	mov edx, dword ptr [eax]
0x92c8:     83 c0 04                           	add eax, 4
0x92cb:     83 82 34 02 00 00 01               	add dword ptr [edx + 0x234], 1
0x92d2:     eb ea                              	jmp 0x92be <function_9241+0x7d>
; function: function_92d4 at 0x92d4 -- 0x92e2
0x92d4:     8d 9c 24 d4 00 00 00               	lea ebx, [esp + 0xd4]
0x92db:     89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x92df:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x92e2 -- 0x92e3
0x92e2:     e8                                                 |.               |
; dynamically linked function: _ZNK8CService8ToStringEv at 0x92e3 -- 0x92e4
; data inside code section at 0x92e4 -- 0x92fb
0x92e4:     ff ff ff 50 8b 84 24 d4  00 00 00 c7 04 24 b3 a4   |...P..$......$..|
0x92f4:     00 00 89 44 24 04 e8                               |...D$..         |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x92fb -- 0x92fc
; data inside code section at 0x92fc -- 0x930a
0x92fc:     ff ff ff 89 1c 24 8d 9c  24 d8 00 00 00 e8         |.....$..$.....  |
; dynamically linked function: _ZNSsD1Ev at 0x930a -- 0x930b
; data inside code section at 0x930b -- 0x9325
0x930b:     ff ff ff 8d 84 24 e2 00  00 00 89 44 24 08 c7 44   |.....$.....D$..D|
0x931b:     24 04 11 a1 00 00 89 1c  24 e8                     |$.......$.      |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x9325 -- 0x9326
; data inside code section at 0x9326 -- 0x9331
0x9326:     ff ff ff c7 04 24 84 03  00 00 e8                  |.....$.....     |
; dynamically linked function: _Znwj at 0x9331 -- 0x9332
; data inside code section at 0x9332 -- 0x9375
0x9332:     ff ff ff 89 44 24 68 8d  7c 24 08 b9 0a 00 00 00   |....D$h.|$......|
0x9342:     c7 44 24 34 01 00 00 00  89 ee 89 5c 24 30 f3 a5   |.D$4.......\$0..|
0x9352:     8b 44 24 5c 89 44 24 04  8b 44 24 68 89 04 24 e8   |.D$\.D$..D$h..$.|
0x9362:     8a 40 01 00 8b 44 24 68  89 1c 24 89 84 24 c8 00   |.@...D$h..$..$..|
0x9372:     00 00 e8                                           |...             |
; dynamically linked function: _ZNSsD1Ev at 0x9375 -- 0x9376
; data inside code section at 0x9376 -- 0x9378
0x9376:     ff ff                                              |..              |
; function: function_9378 at 0x9378 -- 0x93fd
0x9378:     ff 8b 84 24 c8 00                  	dec dword ptr [ebx + 0xc82484]
0x937e:     00 00                              	add byte ptr [eax], al
0x9380:     8d 94 24 a8 00 00 00               	lea edx, [esp + 0xa8]
0x9387:     83 80 34 02 00 00 01               	add dword ptr [eax + 0x234], 1
0x938e:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9396:     c7 44 24 10 b1 03 00 00            	mov dword ptr [esp + 0x10], 0x3b1
0x939e:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x93a6:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x93ae:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x93b6:     89 14 24                           	mov dword ptr [esp], edx
0x93b9:     e8 a2 98 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x93be:     a1 78 a1 00 00                     	mov eax, dword ptr [0xa178] ; "4.208.43.192"
0x93c3:     3b 05 7c a1 00 00                  	cmp eax, dword ptr [0xa17c] ; "8.43.192"
0x93c9:     0f 84 bc 04 00 00                  	je 0x988b <function_988b>
0x93cf:     85 c0                              	test eax, eax
0x93d1:     74 0e                              	je 0x93e1 <function_9378+0x69>
0x93d3:     8b 94 24 c8 00 00 00               	mov edx, dword ptr [esp + 0xc8]
0x93da:     89 10                              	mov dword ptr [eax], edx
0x93dc:     a1 78 a1 00 00                     	mov eax, dword ptr [0xa178] ; "4.208.43.192"
0x93e1:     83 c0 04                           	add eax, 4
0x93e4:     a3 78 a1 00 00                     	mov dword ptr [0xa178], eax ; "4.208.43.192"
0x93e9:     8d bc 24 a8 00 00 00               	lea edi, [esp + 0xa8]
0x93f0:     89 3c 24                           	mov dword ptr [esp], edi
0x93f3:     e8 e8 94 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x93f8:     e9 f0 fb ff ff                     	jmp 0x8fed
; data inside code section at 0x93fd -- 0x9405
0x93fd:     c7 04 24 dc df 00 00 e8                            |..$.....        |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9405 -- 0x9406
; data inside code section at 0x9406 -- 0x9409
0x9406:     ff ff ff                                           |...             |
; function: function_9409 at 0x9409 -- 0x940e
0x9409:     e9 6e fc ff ff                     	jmp 0x907c
; function: function_940e at 0x940e -- 0x943f
0x940e:     8d 8c 24 a8 00 00 00               	lea ecx, [esp + 0xa8]
0x9415:     89 0c 24                           	mov dword ptr [esp], ecx
0x9418:     8d ac 24 1c 03 00 00               	lea ebp, [esp + 0x31c]
0x941f:     e8 bc 94 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9424:     8b bc 24 88 00 00 00               	mov edi, dword ptr [esp + 0x88]
0x942b:     89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0x942f:     8b bc 24 84 00 00 00               	mov edi, dword ptr [esp + 0x84]
0x9436:     89 7c 24 5c                        	mov dword ptr [esp + 0x5c], edi
0x943a:     e9 69 01 00 00                     	jmp 0x95a8 <function_95a8>
; data inside code section at 0x943f -- 0x9440
0x943f:     90                                                 |.               |
; function: function_9440 at 0x9440 -- 0x9441
; data inside code section at 0x9441 -- 0x949e
0x9441:     83 04 01 00 00 8d 8c 24  a8 00 00 00 c7 44 24 14   |.......$.....D$.|
0x9451:     01 00 00 00 c7 44 24 10  cd 03 00 00 c7 44 24 0c   |.....D$......D$.|
0x9461:     27 a0 00 00 c7 44 24 08  62 a4 00 00 89 44 24 04   |'....D$.b....D$.|
0x9471:     89 0c 24 e8 e7 97 00 00  80 bc 24 ac 00 00 00 00   |..$.......$.....|
0x9481:     74 68 c7 44 24 0c 40 00  00 00 c7 44 24 08 00 00   |th.D$.@....D$...|
0x9491:     01 00 89 6c 24 04 8b 43  08 89 04 24 e8            |...l$..C...$.   |
; dynamically linked function: recv at 0x949e -- 0x949f
; data inside code section at 0x949f -- 0x94ca
0x949f:     ff ff ff 83 f8 00 89 c6  0f 8e 40 02 00 00 89 44   |..........@....D|
0x94af:     24 08 89 6c 24 04 89 1c  24 e8 43 a4 ff ff 84 c0   |$..l$...$.C.....|
0x94bf:     75 08 89 1c 24 e8 e7 86  ff ff e8                  |u...$......     |
; dynamically linked function: _Z7GetTimev at 0x94ca -- 0x94cb
; data inside code section at 0x94cb -- 0x94eb
0x94cb:     ff ff ff 89 f7 c1 ff 1f  01 b3 58 01 00 00 11 bb   |..........X.....|
0x94db:     5c 01 00 00 89 83 6c 01  00 00 89 93 70 01 00 00   |\.....l.....p...|
; function: function_94eb at 0x94eb -- 0x94ec
; data inside code section at 0x94ec -- 0x94fd
0x94ec:     bc 24 a8 00 00 00 89 3c  24 e8 e6 93 00 00 8b 4b   |.$.....<$......K|
0x94fc:     08                                                 |.               |
; function: function_94fd at 0x94fd -- 0x94fe
; data inside code section at 0x94fe -- 0x952e
0x94fe:     f9 ff 0f 84 9d 00 00 00  89 0c 24 e8 fc ff ff ff   |..........$.....|
0x950e:     8b 84 84 64 01 00 00 8b  4b 08 d3 f8 a8 01 0f 85   |...d....K.......|
0x951e:     e6 00 00 00 8b 4b 40 39  4b 50 0f 84 3d 01 00 00   |.....K@9KP..=...|
; function: function_952e at 0x952e -- 0x952f
; dynamically linked function: _Z7GetTimev at 0x952f -- 0x9530
; data inside code section at 0x9530 -- 0x9532
0x9530:     ff ff                                              |..              |
; function: function_9532 at 0x9532 -- 0x9534
0x9532:     ff 2b                              	ljmp [ebx]
; data inside code section at 0x9534 -- 0x954a
0x9534:     83 7c 01 00 00 1b 93 80  01 00 00 83 fa 00 7c 5f   |.|............|_|
0x9544:     0f 8e 37 01 00 00                                  |..7...          |
; function: function_954a at 0x954a -- 0x954b
; data inside code section at 0x954b -- 0x9576
0x954b:     83 70 01 00 00 8b 93 6c  01 00 00 89 c7 09 d7 0f   |.p.....l........|
0x955b:     84 2f 01 00 00 8b 8b 68  01 00 00 0b 8b 64 01 00   |./.....h.....d..|
0x956b:     00 0f 85 2e 01 00 00 31  f6 31 ff                  |.......1.1.     |
; function: function_9576 at 0x9576 -- 0x9577
; data inside code section at 0x9577 -- 0x957e
0x9577:     f1 09 f9 0f 95 c1 09                               |.......         |
; function: function_957e at 0x957e -- 0x9581
0x957e:     c2 0f 95                           	ret 0x950f
; data inside code section at 0x9581 -- 0x9598
0x9581:     c0 0f b6 c9 0f b6 c0 89  4c 24 08 89 44 24 04 c7   |........L$..D$..|
0x9591:     04 24 44 e0 00 00 e8                               |.$D....         |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9598 -- 0x9599
; data inside code section at 0x9599 -- 0x959c
0x9599:     ff ff ff                                           |...             |
; function: function_959c at 0x959c -- 0x959d
; data inside code section at 0x959d -- 0x95a3
0x959d:     83 d1 01 00 00 01                                  |......          |
; function: function_95a3 at 0x95a3 -- 0x95a4
; data inside code section at 0x95a4 -- 0x95a8
0x95a4:     44 24 5c 04                                        |D$\.            |
; function: function_95a8 at 0x95a8 -- 0x95b8
0x95a8:     8b 7c 24 5c                        	mov edi, dword ptr [esp + 0x5c]
0x95ac:     39 7c 24 60                        	cmp dword ptr [esp + 0x60], edi
0x95b0:     0f 84 e0 01 00 00                  	je 0x9796 <function_9796>
0x95b6:     8b 1f                              	mov ebx, dword ptr [edi]
; data inside code section at 0x95b8 -- 0x95b9
0x95b8:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x95b9 -- 0x95ba
; data inside code section at 0x95ba -- 0x95c9
0x95ba:     ff ff ff 8b 43 08 83 f8  ff 74 de 89 04 24 e8      |....C....t...$. |
; dynamically linked function: __fdelt_chk at 0x95c9 -- 0x95ca
; data inside code section at 0x95ca -- 0x95e5
0x95ca:     ff ff ff 8b 4b 08 8b 84  84 e4 00 00 00 d3 f8 a8   |....K...........|
0x95da:     01 0f 85 5f fe ff ff 89  0c 24 e8                  |..._.....$.     |
; dynamically linked function: __fdelt_chk at 0x95e5 -- 0x95e6
; data inside code section at 0x95e6 -- 0x95e8
0x95e6:     ff ff                                              |..              |
; function: function_95e8 at 0x95e8 -- 0x9602
0x95e8:     ff 8b 4b 08 8b 84                  	dec dword ptr [ebx - 0x7b74f7b5]
0x95ee:     84 e4                              	test ah, ah
0x95f0:     01 00                              	add dword ptr [eax], eax
0x95f2:     00 d3                              	add bl, dl
0x95f4:     f8                                 	clc 
0x95f5:     a8 01                              	test al, 1
0x95f7:     0f 84 00 ff ff ff                  	je 0x94fd <function_94fd>
0x95fd:     e9 3e fe ff ff                     	jmp 0x9440 <function_9440>
; data inside code section at 0x9602 -- 0x9667
0x9602:     8d b6 00 00 00 00 8d 43  60 89 44 24 04 8d 84 24   |.......C`.D$...$|
0x9612:     a8 00 00 00 c7 44 24 14  01 00 00 00 c7 44 24 10   |.....D$......D$.|
0x9622:     f8 03 00 00 c7 44 24 0c  27 a0 00 00 c7 44 24 08   |.....D$.'....D$.|
0x9632:     52 a4 00 00 89 04 24 e8  22 96 00 00 80 bc 24 ac   |R.....$.".....$.|
0x9642:     00 00 00 00 74 08 89 1c  24 e8 d0 87 ff ff 8d 94   |....t...$.......|
0x9652:     24 a8 00 00 00 89 14 24  e8 81 92 00 00 8b 4b 40   |$......$......K@|
0x9662:     39 4b 50 0f 85                                     |9KP..           |
; function: function_9667 at 0x9667 -- 0x9668
0x9667:     c3                                 	ret 
; data inside code section at 0x9668 -- 0x966c
0x9668:     fe ff ff e8                                        |....            |
; dynamically linked function: _Z7GetTimev at 0x966c -- 0x966d
; data inside code section at 0x966d -- 0x9670
0x966d:     ff ff ff                                           |...             |
; function: function_9670 at 0x9670 -- 0x9681
0x9670:     89 83 74 01 00 00                  	mov dword ptr [ebx + 0x174], eax
0x9676:     89 93 78 01 00 00                  	mov dword ptr [ebx + 0x178], edx
0x967c:     e9 ad fe ff ff                     	jmp 0x952e <function_952e>
; function: function_9681 at 0x9681 -- 0x968f
0x9681:     83 f8 3c                           	cmp eax, 0x3c
0x9684:     0f 86 19 ff ff ff                  	jbe 0x95a3 <function_95a3>
0x968a:     e9 bb fe ff ff                     	jmp 0x954a <function_954a>
; function: function_968f at 0x968f -- 0x96a0
0x968f:     8b b3 64 01 00 00                  	mov esi, dword ptr [ebx + 0x164]
0x9695:     8b bb 68 01 00 00                  	mov edi, dword ptr [ebx + 0x168]
0x969b:     e9 d6 fe ff ff                     	jmp 0x9576 <function_9576>
; data inside code section at 0x96a0 -- 0x96a1
0x96a0:     e8                                                 |.               |
; dynamically linked function: _Z7GetTimev at 0x96a1 -- 0x96a2
; data inside code section at 0x96a2 -- 0x96a4
0x96a2:     ff ff                                              |..              |
; function: function_96a4 at 0x96a4 -- 0x96a6
0x96a4:     ff 2b                              	ljmp [ebx]
; data inside code section at 0x96a6 -- 0x96c1
0x96a6:     83 64 01 00 00 1b 93 68  01 00 00 83 fa 00 0f 8c   |.d.....h........|
0x96b6:     98 00 00 00 0f 8e 87 00  00 00 e8                  |...........     |
; dynamically linked function: _Z7GetTimev at 0x96c1 -- 0x96c2
; data inside code section at 0x96c2 -- 0x96c4
0x96c2:     ff ff                                              |..              |
; function: function_96c4 at 0x96c4 -- 0x96c6
0x96c4:     ff 2b                              	ljmp [ebx]
; data inside code section at 0x96c6 -- 0x96dc
0x96c6:     83 74 01 00 00 1b 93 78  01 00 00 83 fa 00 7c 7c   |.t.....x......|||
0x96d6:     0f 8e 21 01 00 00                                  |..!...          |
; function: function_96dc at 0x96dc -- 0x96dd
; data inside code section at 0x96dd -- 0x96e4
0x96dd:     04 24 e1 a4 00 00 e8                               |.$.....         |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x96e4 -- 0x96e5
; data inside code section at 0x96e5 -- 0x96e8
0x96e5:     ff ff ff                                           |...             |
; function: function_96e8 at 0x96e8 -- 0x96ed
0x96e8:     e9 af fe ff ff                     	jmp 0x959c <function_959c>
; data inside code section at 0x96ed -- 0x96f4
0x96ed:     0f 84 8c 00 00 00 e8                               |.......         |
; dynamically linked function: __errno_location at 0x96f4 -- 0x96f5
; data inside code section at 0x96f5 -- 0x9717
0x96f5:     ff ff ff 8b 00 83 f8 5a  8d 76 00 0f 84 e5 fd ff   |.......Z.v......|
0x9705:     ff 83 f8 0b 0f 84 dc fd  ff ff 83 f8 73 0f 84 d3   |............s...|
0x9715:     fd ff                                              |..              |
; function: function_9717 at 0x9717 -- 0x9720
0x9717:     ff 83 f8 04 0f 84                  	inc dword ptr [ebx - 0x7bf0fb08]
0x971d:     ca fd ff                           	retf -3
; data inside code section at 0x9720 -- 0x9729
0x9720:     ff 80 bb d1 01 00 00 00  75                        |........u       |
; function: function_9729 at 0x9729 -- 0x9732
0x9729:     10 89 44 24 04 c7                  	adc byte ptr [ecx - 0x38fbdbbc], cl
0x972f:     04 24                              	add al, 0x24
0x9731:     cb                                 	retf 
; data inside code section at 0x9732 -- 0x9736
0x9732:     a4 00 00 e8                                        |....            |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9736 -- 0x9737
; data inside code section at 0x9737 -- 0x973a
0x9737:     ff ff ff                                           |...             |
; function: function_973a at 0x973a -- 0x9747
0x973a:     89 1c 24                           	mov dword ptr [esp], ebx
0x973d:     e8 6e 84 ff ff                     	call 0x1bb0 <_ZN5CNode21CloseSocketDisconnectEv>
0x9742:     e9 a4 fd ff ff                     	jmp 0x94eb <function_94eb>
; data inside code section at 0x9747 -- 0x9752
0x9747:     3d 18 15 00 00 0f 87 6e  ff ff ff                  |=......n...     |
; function: function_9752 at 0x9752 -- 0x9753
; dynamically linked function: _Z7GetTimev at 0x9753 -- 0x9754
; data inside code section at 0x9754 -- 0x9756
0x9754:     ff ff                                              |..              |
; function: function_9756 at 0x9756 -- 0x9758
0x9756:     ff 2b                              	ljmp [ebx]
; data inside code section at 0x9758 -- 0x976e
0x9758:     83 6c 01 00 00 1b 93 70  01 00 00 83 fa 00 0f 8c   |.l.....p........|
0x9768:     37 fe ff ff 7e 7f                                  |7...~.          |
; function: function_976e at 0x976e -- 0x976f
; data inside code section at 0x976f -- 0x9776
0x976f:     04 24 f5 a4 00 00 e8                               |.$.....         |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9776 -- 0x9777
; data inside code section at 0x9777 -- 0x977a
0x9777:     ff ff ff                                           |...             |
; function: function_977a at 0x977a -- 0x977f
0x977a:     e9 1d fe ff ff                     	jmp 0x959c <function_959c>
; data inside code section at 0x977f -- 0x9790
0x977f:     80 bb d1 01 00 00 00 75  b2 c7 04 24 12 a1 00 00   |.......u...$....|
0x978f:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x9790 -- 0x9791
; data inside code section at 0x9791 -- 0x9794
0x9791:     ff ff ff                                           |...             |
; function: function_9794 at 0x9794 -- 0x9796
0x9794:     eb a4                              	jmp 0x973a <function_973a>
; function: function_9796 at 0x9796 -- 0x9841
0x9796:     8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x979d:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x97a5:     c7 44 24 10 16 04 00 00            	mov dword ptr [esp + 0x10], 0x416
0x97ad:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x97b5:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x97bd:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x97c5:     89 04 24                           	mov dword ptr [esp], eax
0x97c8:     e8 93 94 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x97cd:     8b 8c 24 88 00 00 00               	mov ecx, dword ptr [esp + 0x88]
0x97d4:     8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x97db:     39 c1                              	cmp ecx, eax
0x97dd:     74 2e                              	je 0x980d <function_9796+0x77>
0x97df:     8b 10                              	mov edx, dword ptr [eax]
0x97e1:     83 c0 04                           	add eax, 4
0x97e4:     83 aa 34 02 00 00 01               	sub dword ptr [edx + 0x234], 1
0x97eb:     eb ee                              	jmp 0x97db <function_9796+0x45>
0x97ed:     3d 18 15 00 00                     	cmp eax, 0x1518
0x97f2:     0f 86 ab fd ff ff                  	jbe 0x95a3 <function_95a3>
0x97f8:     e9 71 ff ff ff                     	jmp 0x976e <function_976e>
0x97fd:     3d 18 15 00 00                     	cmp eax, 0x1518
0x9802:     0f 86 4a ff ff ff                  	jbe 0x9752 <function_9752>
0x9808:     e9 cf fe ff ff                     	jmp 0x96dc <function_96dc>
0x980d:     8d 94 24 a8 00 00 00               	lea edx, [esp + 0xa8]
0x9814:     89 14 24                           	mov dword ptr [esp], edx
0x9817:     e8 c4 90 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x981c:     c7 04 24 0a 00 00 00               	mov dword ptr [esp], 0xa
0x9823:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x982b:     e8 40 f8 00 00                     	call 0x19070 <_Z10MilliSleepx>
0x9830:     8b 84 24 84 00 00 00               	mov eax, dword ptr [esp + 0x84]
0x9837:     e8 c4 67 ff ff                     	call 0 <instance_of_cnetcleanup>
0x983c:     e9 2b ee ff ff                     	jmp 0x866c
; function: function_9841 at 0x9841 -- 0x9842
; data inside code section at 0x9842 -- 0x9843
0x9842:     c6                                                 |.               |
; function: function_9843 at 0x9843 -- 0x9844
; data inside code section at 0x9844 -- 0x9847
0x9844:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZNSsD1Ev at 0x9847 -- 0x9848
; data inside code section at 0x9848 -- 0x984f
0x9848:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x984f -- 0x9850
; data inside code section at 0x9850 -- 0x9854
0x9850:     ff ff ff 89                                        |....            |
; function: function_9854 at 0x9854 -- 0x9855
0x9854:     c3                                 	ret 
; data inside code section at 0x9855 -- 0x9864
0x9855:     8d 84 24 a8 00 00 00 89  04 24 e8 7c 90 00 00      |..$......$.|... |
; function: function_9864 at 0x9864 -- 0x9865
; data inside code section at 0x9865 -- 0x9874
0x9865:     84 24 84 00 00 00 e8 90  67 ff ff 89 1c 24 e8      |.$......g....$. |
; dynamically linked function: _Unwind_Resume at 0x9874 -- 0x9875
; data inside code section at 0x9875 -- 0x9877
0x9875:     ff ff                                              |..              |
; function: function_9877 at 0x9877 -- 0x988b
0x9877:     ff 8d bc 24 a8 00                  	dec dword ptr [ebp + 0xa824bc]
0x987d:     00 00                              	add byte ptr [eax], al
0x987f:     89 c3                              	mov ebx, eax
0x9881:     89 3c 24                           	mov dword ptr [esp], edi
0x9884:     e8 57 90 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9889:     eb d9                              	jmp 0x9864 <function_9864>
; function: function_988b at 0x988b -- 0x98ab
0x988b:     8d 8c 24 c8 00 00 00               	lea ecx, [esp + 0xc8]
0x9892:     89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x9896:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x989a:     c7 04 24 74 a1 00 00               	mov dword ptr [esp], 0xa174 ; "rg"
0x98a1:     e8 2a ad 00 00                     	call 0x145d0 <_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_>
0x98a6:     e9 3e fb ff ff                     	jmp 0x93e9
; data inside code section at 0x98ab -- 0x98ac
0x98ab:     89                                                 |.               |
; function: function_98ac at 0x98ac -- 0x98ad
0x98ac:     c3                                 	ret 
; data inside code section at 0x98ad -- 0x98c0
0x98ad:     8d 84 24 a8 00 00 00 89  04 24 e8 24 90 00 00 89   |..$......$.$....|
0x98bd:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x98c0 -- 0x98c1
; data inside code section at 0x98c1 -- 0x98c5
0x98c1:     ff ff ff 89                                        |....            |
; function: function_98c5 at 0x98c5 -- 0x98c6
0x98c5:     c3                                 	ret 
; data inside code section at 0x98c6 -- 0x98d9
0x98c6:     8d 94 24 a8 00 00 00 89  14 24 e8 0b 90 00 00 89   |..$......$......|
0x98d6:     1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x98d9 -- 0x98da
; data inside code section at 0x98da -- 0x98dd
0x98da:     ff ff ff                                           |...             |
; function: function_98dd at 0x98dd -- 0x98e2
0x98dd:     e9 5f ff ff ff                     	jmp 0x9841 <function_9841>
; function: function_98e2 at 0x98e2 -- 0x9934
0x98e2:     89 f9                              	mov ecx, edi
0x98e4:     84 c9                              	test cl, cl
0x98e6:     0f 85 be 00 00 00                  	jne 0x99aa <function_99aa>
0x98ec:     ba 20 00 00 00                     	mov edx, 0x20
0x98f1:     31 c0                              	xor eax, eax
0x98f3:     89 d1                              	mov ecx, edx
0x98f5:     8d bc 24 64 01 00 00               	lea edi, [esp + 0x164]
0x98fc:     fc                                 	cld 
0x98fd:     f3 ab                              	rep stosd dword ptr es:[edi], eax
0x98ff:     89 d1                              	mov ecx, edx
0x9901:     8d bc 24 e4 01 00 00               	lea edi, [esp + 0x1e4]
0x9908:     fc                                 	cld 
0x9909:     f3 ab                              	rep stosd dword ptr es:[edi], eax
0x990b:     8b 84 24 bc 00 00 00               	mov eax, dword ptr [esp + 0xbc]
0x9912:     b9 e8 03 00 00                     	mov ecx, 0x3e8
0x9917:     89 c2                              	mov edx, eax
0x9919:     c1 fa 1f                           	sar edx, 0x1f
0x991c:     f7 f9                              	idiv ecx
0x991e:     89 c7                              	mov edi, eax
0x9920:     c1 ff 1f                           	sar edi, 0x1f
0x9923:     89 04 24                           	mov dword ptr [esp], eax
0x9926:     89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x992a:     e8 41 f7 00 00                     	call 0x19070 <_Z10MilliSleepx>
0x992f:     e9 a4 f6 ff ff                     	jmp 0x8fd8
; data inside code section at 0x9934 -- 0x993e
0x9934:     89 c6 8b 44 24 68 89 04  24 e8                     |...D$h..$.      |
; dynamically linked function: _ZdlPv at 0x993e -- 0x993f
; data inside code section at 0x993f -- 0x9942
0x993f:     ff ff ff                                           |...             |
; function: function_9942 at 0x9942 -- 0x9947
0x9942:     e9 fc fe ff ff                     	jmp 0x9843 <function_9843>
; data inside code section at 0x9947 -- 0x9948
0x9947:     89                                                 |.               |
; function: function_9948 at 0x9948 -- 0x9949
0x9948:     c3                                 	ret 
; function: function_9949 at 0x9949 -- 0x994a
; data inside code section at 0x994a -- 0x9951
0x994a:     34 24 e8 8f 8f 00 00                               |4$.....         |
; function: function_9951 at 0x9951 -- 0x9952
; data inside code section at 0x9952 -- 0x9961
0x9952:     7c 24 68 89 3c 24 e8 83  8f 00 00 89 1c 24 e8      ||$h.<$.......$. |
; dynamically linked function: _Unwind_Resume at 0x9961 -- 0x9962
; data inside code section at 0x9962 -- 0x9964
0x9962:     ff ff                                              |..              |
; function: function_9964 at 0x9964 -- 0x996b
0x9964:     ff 89 c3 eb e8 89                  	dec dword ptr [ecx - 0x7617143d]
0x996a:     c3                                 	ret 
; function: function_996b at 0x996b -- 0x9975
0x996b:     89 34 24                           	mov dword ptr [esp], esi
0x996e:     e8 6d 8f 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9973:     eb dc                              	jmp 0x9951 <function_9951>
; data inside code section at 0x9975 -- 0x997d
0x9975:     8d 8c 24 dc 00 00 00 89                            |..$.....        |
; function: function_997d at 0x997d -- 0x997e
0x997d:     c3                                 	ret 
; data inside code section at 0x997e -- 0x9982
0x997e:     89 0c 24 e8                                        |..$.            |
; dynamically linked function: _ZNSsD1Ev at 0x9982 -- 0x9983
; data inside code section at 0x9983 -- 0x9986
0x9983:     ff ff ff                                           |...             |
; function: function_9986 at 0x9986 -- 0x9988
0x9986:     eb c1                              	jmp 0x9949 <function_9949>
; function: function_9988 at 0x9988 -- 0x999e
0x9988:     8d 8c 24 a8 00 00 00               	lea ecx, [esp + 0xa8]
0x998f:     89 c3                              	mov ebx, eax
0x9991:     89 0c 24                           	mov dword ptr [esp], ecx
0x9994:     e8 47 8f 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9999:     e9 c6 fe ff ff                     	jmp 0x9864 <function_9864>
; function: function_999e at 0x999e -- 0x99a5
0x999e:     89 c3                              	mov ebx, eax
0x99a0:     e9 bf fe ff ff                     	jmp 0x9864 <function_9864>
; function: function_99a5 at 0x99a5 -- 0x99aa
0x99a5:     e9 97 fe ff ff                     	jmp 0x9841 <function_9841>
; function: function_99aa at 0x99aa -- 0x99b0
0x99aa:     8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x99b0 -- 0x99b1
0x99b0:     e8                                                 |.               |
; dynamically linked function: __errno_location at 0x99b1 -- 0x99b2
; data inside code section at 0x99b2 -- 0x99ca
0x99b2:     ff ff ff 31 db be 01 00  00 00 8b 00 c7 04 24 9b   |...1..........$.|
0x99c2:     a4 00 00 89 44 24 04 e8                            |....D$..        |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x99ca -- 0x99cb
; data inside code section at 0x99cb -- 0x99d2
0x99cb:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __fdelt_chk at 0x99d2 -- 0x99d3
; data inside code section at 0x99d3 -- 0x99d5
0x99d3:     ff ff                                              |..              |
; function: function_99d5 at 0x99d5 -- 0x99dc
0x99d5:     ff 89 d9 89 f2 83                  	dec dword ptr [ecx - 0x7c0d7627]
0x99db:     c3                                 	ret 
; function: function_99dc at 0x99dc -- 0x99ec
0x99dc:     01 d3                              	add ebx, edx
0x99de:     e2 09                              	loop 0x99e9 <function_99dc+0xd>
0x99e0:     94                                 	xchg eax, esp
0x99e1:     84 e4                              	test ah, ah
0x99e3:     00 00                              	add byte ptr [eax], al
0x99e5:     00 39                              	add byte ptr [ecx], bh
; data inside code section at 0x99e7 -- 0x99e9
0x99e7:     dd 73                                              |.s              |
0x99e9:     e4 e9                              	in al, 0xe9
0x99eb:     fd                                 	std 
; data inside code section at 0x99ec -- 0x99f0
0x99ec:     fe ff ff 90                                        |....            |
; function: _Z20ThreadMessageHandlerv at 0x99f0 -- 0x9a22
0x99f0:     55                                 	push ebp
0x99f1:     57                                 	push edi
0x99f2:     56                                 	push esi
0x99f3:     53                                 	push ebx
0x99f4:     83 ec 6c                           	sub esp, 0x6c
0x99f7:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x99fd:     89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x9a01:     31 c0                              	xor eax, eax
0x9a03:     8d 5c 24 50                        	lea ebx, [esp + 0x50]
0x9a07:     c7 44 24 08 02 00 00 00            	mov dword ptr [esp + 8], 2
0x9a0f:     8d 6c 24 5a                        	lea ebp, [esp + 0x5a]
0x9a13:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x9a1b:     c7 04 24 00 00 00 00               	mov dword ptr [esp], 0
; data inside code section at 0x9a22 -- 0x9a23
0x9a22:     e8                                                 |.               |
; dynamically linked function: setpriority at 0x9a23 -- 0x9a24
; data inside code section at 0x9a24 -- 0x9a27
0x9a24:     ff ff ff                                           |...             |
; function: function_9a27 at 0x9a27 -- 0x9acc
0x9a27:     c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x9a2f:     c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x9a37:     c7 44 24 4c 00 00 00 00            	mov dword ptr [esp + 0x4c], 0
0x9a3f:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9a47:     c7 44 24 10 d3 05 00 00            	mov dword ptr [esp + 0x10], 0x5d3
0x9a4f:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x9a57:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x9a5f:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x9a67:     89 1c 24                           	mov dword ptr [esp], ebx
0x9a6a:     e8 f1 91 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x9a6f:     8d 54 24 44                        	lea edx, [esp + 0x44]
0x9a73:     c7 44 24 04 74 a1 00 00            	mov dword ptr [esp + 4], 0xa174 ; "rg"
0x9a7b:     89 14 24                           	mov dword ptr [esp], edx
0x9a7e:     e8 8d 93 00 00                     	call 0x12e10 <_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_>
0x9a83:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x9a87:     8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x9a8b:     39 c8                              	cmp eax, ecx
0x9a8d:     0f 84 87 02 00 00                  	je 0x9d1a <function_9d1a>
0x9a93:     8b 3d 14 a3 00 00                  	mov edi, dword ptr [0xa314] ; "dnsseed"
0x9a99:     31 f6                              	xor esi, esi
0x9a9b:     90                                 	nop 
0x9a9c:     8d 74 26 00                        	lea esi, [esi]
0x9aa0:     8b 10                              	mov edx, dword ptr [eax]
0x9aa2:     83 82 34 02 00 00 01               	add dword ptr [edx + 0x234], 1
0x9aa9:     39 fa                              	cmp edx, edi
0x9aab:     ba 01 00 00 00                     	mov edx, 1
0x9ab0:     0f 44 f2                           	cmove esi, edx
0x9ab3:     83 c0 04                           	add eax, 4
0x9ab6:     39 c1                              	cmp ecx, eax
0x9ab8:     75 e6                              	jne 0x9aa0 <function_9a27+0x79>
0x9aba:     89 1c 24                           	mov dword ptr [esp], ebx
0x9abd:     e8 1e 8e 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9ac2:     89 f0                              	mov eax, esi
0x9ac4:     84 c0                              	test al, al
0x9ac6:     0f 84 56 02 00 00                  	je 0x9d22
; function: function_9acc at 0x9acc -- 0x9aec
0x9acc:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x9ad0:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x9ad4:     39 d0                              	cmp eax, edx
0x9ad6:     0f 84 31 02 00 00                  	je 0x9d0d <function_9d0d>
0x9adc:     29 d0                              	sub eax, edx
0x9ade:     c1 f8 02                           	sar eax, 2
0x9ae1:     89 04 24                           	mov dword ptr [esp], eax
0x9ae4:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
; data inside code section at 0x9aec -- 0x9aed
0x9aec:     e8                                                 |.               |
; dynamically linked function: _Z7GetRandy at 0x9aed -- 0x9aee
; data inside code section at 0x9aee -- 0x9afc
0x9aee:     ff ff ff 8b 54 24 44 8b  04 82 89 44 24 28         |....T$D....D$(  |
; function: function_9afc at 0x9afc -- 0x9bad
0x9afc:     8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x9b00:     39 fa                              	cmp edx, edi
0x9b02:     89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x9b06:     0f 84 34 01 00 00                  	je 0x9c40 <function_9c40>
0x9b0c:     89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x9b10:     8d 7c 24 58                        	lea edi, [esp + 0x58]
0x9b14:     eb 1a                              	jmp 0x9b30 <function_9afc+0x34>
0x9b16:     83 44 24 30 04                     	add dword ptr [esp + 0x30], 4
0x9b1b:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x9b1f:     39 74 24 34                        	cmp dword ptr [esp + 0x34], esi
0x9b23:     0f 84 17 01 00 00                  	je 0x9c40 <function_9c40>
0x9b29:     8d b4 26 00 00 00 00               	lea esi, [esi]
0x9b30:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x9b34:     8b 30                              	mov esi, dword ptr [eax]
0x9b36:     80 be d1 01 00 00 00               	cmp byte ptr [esi + 0x1d1], 0
0x9b3d:     75 d7                              	jne 0x9b16 <function_9afc+0x1a>
0x9b3f:     8d 86 04 01 00 00                  	lea eax, [esi + 0x104]
0x9b45:     c7 44 24 14 01 00 00 00            	mov dword ptr [esp + 0x14], 1
0x9b4d:     c7 44 24 10 ea 05 00 00            	mov dword ptr [esp + 0x10], 0x5ea
0x9b55:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x9b5d:     c7 44 24 08 62 a4 00 00            	mov dword ptr [esp + 8], 0xa462 ; "pnode->cs_vRecvMsg"
0x9b65:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9b69:     89 1c 24                           	mov dword ptr [esp], ebx
0x9b6c:     e8 ef 90 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x9b71:     80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x9b75:     74 2e                              	je 0x9ba5 <function_9afc+0xa9>
0x9b77:     a1 4c a2 00 00                     	mov eax, dword ptr [0xa24c] ; "ode->cs_filter"
0x9b7c:     85 c0                              	test eax, eax
0x9b7e:     0f 84 41 01 00 00                  	je 0x9cc5 <function_9cc5>
0x9b84:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0x9b88:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0x9b8c:     89 3c 24                           	mov dword ptr [esp], edi
0x9b8f:     e8 fc bd 01 00                     	call 0x25990 <_ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEclES4_>
0x9b94:     83 ec 04                           	sub esp, 4
0x9b97:     80 3f 00                           	cmp byte ptr [edi], 0
0x9b9a:     0f 84 18 01 00 00                  	je 0x9cb8 <function_9cb8>
0x9ba0:     c6 44 24 58 00                     	mov byte ptr [esp + 0x58], 0
0x9ba5:     89 1c 24                           	mov dword ptr [esp], ebx
0x9ba8:     e8 33 8d 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
; data inside code section at 0x9bad -- 0x9bae
0x9bad:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x9bae -- 0x9baf
; data inside code section at 0x9baf -- 0x9bfb
0x9baf:     ff ff ff 8d 46 60 c7 44  24 14 01 00 00 00 c7 44   |....F`.D$......D|
0x9bbf:     24 10 f3 05 00 00 c7 44  24 0c 27 a0 00 00 c7 44   |$......D$.'....D|
0x9bcf:     24 08 52 a4 00 00 89 44  24 04 89 1c 24 e8 7f 90   |$.R....D$...$...|
0x9bdf:     00 00 80 7b 04 00 74 39  a1 58 a2 00 00 85 c0 0f   |...{..t9.X......|
0x9bef:     84 f5 00 00 00 31 d2 3b  74 24 28 89               |.....1.;t$(.    |
; function: function_9bfb at 0x9bfb -- 0x9c28
0x9bfb:     74 24                              	je 0x9c21 <function_9bfb+0x26>
0x9bfd:     08 89 44 24 04 0f                  	or byte ptr [ecx + 0xf042444], cl
0x9c03:     94                                 	xchg eax, esp
0x9c04:     c2 89 54                           	ret 0x5489
; data inside code section at 0x9c07 -- 0x9c21
0x9c07:     24 0c 89 2c 24 e8 6f c6  01 00 83 ec 04 80 7c 24   |$..,$.o.......|$|
0x9c17:     5a 00 74 05 c6 44 24 5a  00 89                     |Z.t..D$Z..      |
0x9c21:     1c 24                              	sbb al, 0x24
0x9c23:     e8 b8 8c 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
; data inside code section at 0x9c28 -- 0x9c29
0x9c28:     e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x9c29 -- 0x9c2a
; data inside code section at 0x9c2a -- 0x9c40
0x9c2a:     ff ff ff 83 44 24 30 04  8b 74 24 30 39 74 24 34   |....D$0..t$09t$4|
0x9c3a:     0f 85 f0 fe ff ff                                  |......          |
; function: function_9c40 at 0x9c40 -- 0x9cb6
0x9c40:     c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x9c48:     c7 44 24 10 fb 05 00 00            	mov dword ptr [esp + 0x10], 0x5fb
0x9c50:     c7 44 24 0c 27 a0 00 00            	mov dword ptr [esp + 0xc], 0xa027 ; "net.cpp"
0x9c58:     c7 44 24 08 2f a0 00 00            	mov dword ptr [esp + 8], 0xa02f ; "cs_vNodes"
0x9c60:     c7 44 24 04 20 a1 00 00            	mov dword ptr [esp + 4], 0xa120
0x9c68:     89 1c 24                           	mov dword ptr [esp], ebx
0x9c6b:     e8 f0 8f 00 00                     	call 0x12c60 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib>
0x9c70:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x9c74:     8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x9c78:     39 c8                              	cmp eax, ecx
0x9c7a:     74 10                              	je 0x9c8c <function_9c40+0x4c>
0x9c7c:     8b 10                              	mov edx, dword ptr [eax]
0x9c7e:     83 c0 04                           	add eax, 4
0x9c81:     83 aa 34 02 00 00 01               	sub dword ptr [edx + 0x234], 1
0x9c88:     39 c1                              	cmp ecx, eax
0x9c8a:     75 f0                              	jne 0x9c7c <function_9c40+0x3c>
0x9c8c:     89 1c 24                           	mov dword ptr [esp], ebx
0x9c8f:     e8 4c 8c 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9c94:     c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
0x9c9b:     c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x9ca3:     e8 c8 f3 00 00                     	call 0x19070 <_Z10MilliSleepx>
0x9ca8:     8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x9cac:     e8 4f 63 ff ff                     	call 0
0x9cb1:     e9 71 fd ff ff                     	jmp 0x9a27 <function_9a27>
; data inside code section at 0x9cb6 -- 0x9cb8
0x9cb6:     66 90                                              |f.              |
; function: function_9cb8 at 0x9cb8 -- 0x9cc5
0x9cb8:     89 34 24                           	mov dword ptr [esp], esi
0x9cbb:     e8 f0 7e ff ff                     	call 0x1bb0 <_ZN5CNode21CloseSocketDisconnectEv>
0x9cc0:     e9 e0 fe ff ff                     	jmp 0x9ba5
; function: function_9cc5 at 0x9cc5 -- 0x9ce4
0x9cc5:     c7 44 24 0c c0 b9 02 00            	mov dword ptr [esp + 0xc], 0x2b9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>&]"
0x9ccd:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x9cd5:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x9cdd:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x9ce4 -- 0x9ce5
0x9ce4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x9ce5 -- 0x9ce6
; data inside code section at 0x9ce6 -- 0x9d09
0x9ce6:     ff ff ff c7 44 24 0c 20  bc 02 00 c7 44 24 08 9c   |....D$. ....D$..|
0x9cf6:     01 00 00 c7 44 24 04 d0  d5 00 00 c7 04 24 6e 9f   |....D$.......$n.|
0x9d06:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x9d09 -- 0x9d0a
; data inside code section at 0x9d0a -- 0x9d0d
0x9d0a:     ff ff ff                                           |...             |
; function: function_9d0d at 0x9d0d -- 0x9d1a
0x9d0d:     c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x9d15:     e9 e2 fd ff ff                     	jmp 0x9afc <function_9afc>
; function: function_9d1a at 0x9d1a -- 0x9d22
0x9d1a:     89 1c 24                           	mov dword ptr [esp], ebx
0x9d1d:     e8 be 8b 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
; function: function_9d22 at 0x9d22 -- 0x9d23
; data inside code section at 0x9d23 -- 0x9d2b
0x9d23:     54 24 44 8b 4c 24 48 39                            |T$D.L$H9        |
; function: function_9d2b at 0x9d2b -- 0x9d2e
0x9d2b:     ca 74 df                           	retf -0x208c
; data inside code section at 0x9d2e -- 0x9d30
0x9d2e:     8b 3d                                              |.=              |
; dynamically linked function: nBestHeight at 0x9d30 -- 0x9df8
; data inside code section at 0x9df8 -- 0x9df9
0x9df8:     89                                                 |.               |
; function: function_9df9 at 0x9df9 -- 0x9dfa
0x9df9:     c3                                 	ret 
; function: function_9dfa at 0x9dfa -- 0x9dfb
; data inside code section at 0x9dfb -- 0x9e07
0x9dfb:     44 24 44 e8 fd 61 ff ff  89 1c 24 e8               |D$D..a....$.    |
; dynamically linked function: _Unwind_Resume at 0x9e07 -- 0x9e08
; data inside code section at 0x9e08 -- 0x9e0a
0x9e08:     ff ff                                              |..              |
; function: function_9e0a at 0x9e0a -- 0x9e19
0x9e0a:     ff 89 c6 89 1c 24                  	dec dword ptr [ecx + 0x241c89c6]
0x9e10:     89 f3                              	mov ebx, esi
0x9e12:     e8 c9 8a 00 00                     	call 0x128e0 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev>
0x9e17:     eb e1                              	jmp 0x9dfa <function_9dfa>
; function: function_9e19 at 0x9e19 -- 0x9e1b
0x9e19:     eb f0                              	jmp 0x9e0b
; data inside code section at 0x9e1b -- 0x9e20
0x9e1b:     90 8d 74 26 00                                     |..t&.           |
; function: function_9e20 at 0x9e20 -- 0x9e22
0x9e20:     eb e9                              	jmp 0x9e0b
; function: function_9e22 at 0x9e22 -- 0x9e2f
0x9e22:     8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x9e26:     8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x9e2a:     e9 ad fc ff ff                     	jmp 0x9adc
; section: .text._ZNK5boost10lock_error4whatEv
; function: _ZNK5boost10lock_error4whatEv at 0xa510 -- 0xa535
0xa510:     83 ec 1c                           	sub esp, 0x1c
0xa513:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa519:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa51d:     31 c0                              	xor eax, eax
0xa51f:     b8 60 9e 00 00                     	mov eax, 0x9e60 ; "boost::lock_error"
0xa524:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa528:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa52f:     75 04                              	jne 0xa535 <_ZNK5boost10lock_error4whatEv+0x24>
0xa531:     83 c4 1c                           	add esp, 0x1c
0xa534:     c3                                 	ret 
; data inside code section at 0xa535 -- 0xa536
0xa535:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa536 -- 0xa537
; data inside code section at 0xa537 -- 0xa53a
0xa537:     ff ff ff                                           |...             |
; section: .text._ZNK5boost21thread_resource_error4whatEv
; function: _ZNK5boost21thread_resource_error4whatEv at 0xa540 -- 0xa565
0xa540:     83 ec 1c                           	sub esp, 0x1c
0xa543:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa549:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa54d:     31 c0                              	xor eax, eax
0xa54f:     b8 72 9e 00 00                     	mov eax, 0x9e72 ; "boost::thread_resource_error"
0xa554:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa558:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa55f:     75 04                              	jne 0xa565 <_ZNK5boost21thread_resource_error4whatEv+0x24>
0xa561:     83 c4 1c                           	add esp, 0x1c
0xa564:     c3                                 	ret 
; data inside code section at 0xa565 -- 0xa566
0xa565:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa566 -- 0xa567
; data inside code section at 0xa567 -- 0xa56a
0xa567:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD2Ev
; function: _ZN5boost16exception_detail10clone_baseD1Ev at 0xa570 -- 0xa59a
0xa570:     83 ec 1c                           	sub esp, 0x1c
0xa573:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa579:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa57d:     31 c0                              	xor eax, eax
0xa57f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa583:     c7 00 50 0e 03 00                  	mov dword ptr [eax], 0x30e50
0xa589:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa58d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa594:     75 04                              	jne 0xa59a <_ZN5boost16exception_detail10clone_baseD1Ev+0x29>
0xa596:     83 c4 1c                           	add esp, 0x1c
0xa599:     c3                                 	ret 
; data inside code section at 0xa59a -- 0xa59b
0xa59a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa59b -- 0xa59c
; data inside code section at 0xa59c -- 0xa59f
0xa59c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD2Ev
; function: _ZN5boost6detail15sp_counted_baseD1Ev at 0xa5a0 -- 0xa5ca
0xa5a0:     83 ec 1c                           	sub esp, 0x1c
0xa5a3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa5a9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa5ad:     31 c0                              	xor eax, eax
0xa5af:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa5b3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa5b9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa5bd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa5c4:     75 04                              	jne 0xa5ca <_ZN5boost6detail15sp_counted_baseD1Ev+0x29>
0xa5c6:     83 c4 1c                           	add esp, 0x1c
0xa5c9:     c3                                 	ret 
; data inside code section at 0xa5ca -- 0xa5cb
0xa5ca:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa5cb -- 0xa5cc
; data inside code section at 0xa5cc -- 0xa5cf
0xa5cc:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_base7destroyEv
; function: _ZN5boost6detail15sp_counted_base7destroyEv at 0xa5d0 -- 0xa620
0xa5d0:     83 ec 1c                           	sub esp, 0x1c
0xa5d3:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa5d7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xa5de:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xa5e2:     31 d2                              	xor edx, edx
0xa5e4:     85 c0                              	test eax, eax
0xa5e6:     74 20                              	je 0xa608 <_ZN5boost6detail15sp_counted_base7destroyEv+0x38>
0xa5e8:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa5ec:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa5f3:     75 24                              	jne 0xa619 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0xa5f5:     8b 10                              	mov edx, dword ptr [eax]
0xa5f7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xa5fb:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xa5fe:     83 c4 1c                           	add esp, 0x1c
0xa601:     ff e0                              	jmp eax
; data inside code section at 0xa603 -- 0xa608
0xa603:     90 8d 74 26 00                                     |..t&.           |
0xa608:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa60c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa613:     75 04                              	jne 0xa619 <_ZN5boost6detail15sp_counted_base7destroyEv+0x49>
0xa615:     83 c4 1c                           	add esp, 0x1c
0xa618:     c3                                 	ret 
0xa619:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xa620 -- 0xa621
0xa620:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa621 -- 0xa622
; data inside code section at 0xa622 -- 0xa625
0xa622:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD2Ev
; function: _ZN5boost6system14error_categoryD1Ev at 0xa630 -- 0xa65a
0xa630:     83 ec 1c                           	sub esp, 0x1c
0xa633:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa639:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa63d:     31 c0                              	xor eax, eax
0xa63f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa643:     c7 00 c8 77 02 00                  	mov dword ptr [eax], 0x277c8
0xa649:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa64d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa654:     75 04                              	jne 0xa65a <_ZN5boost6system14error_categoryD1Ev+0x29>
0xa656:     83 c4 1c                           	add esp, 0x1c
0xa659:     c3                                 	ret 
; data inside code section at 0xa65a -- 0xa65b
0xa65a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa65b -- 0xa65c
; data inside code section at 0xa65c -- 0xa65f
0xa65c:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category23default_error_conditionEi
; function: _ZNK5boost6system14error_category23default_error_conditionEi at 0xa660 -- 0xa694
0xa660:     83 ec 1c                           	sub esp, 0x1c
0xa663:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa667:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xa66e:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xa672:     31 d2                              	xor edx, edx
0xa674:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xa678:     89 10                              	mov dword ptr [eax], edx
0xa67a:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xa67e:     89 50 04                           	mov dword ptr [eax + 4], edx
0xa681:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa685:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa68c:     75 06                              	jne 0xa694 <_ZNK5boost6system14error_category23default_error_conditionEi+0x31>
0xa68e:     83 c4 1c                           	add esp, 0x1c
0xa691:     c2 04 00                           	ret 4
; data inside code section at 0xa694 -- 0xa695
0xa694:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa695 -- 0xa696
; data inside code section at 0xa696 -- 0xa699
0xa696:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE
; function: _ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE at 0xa6a0 -- 0xa6ff
0xa6a0:     56                                 	push esi
0xa6a1:     53                                 	push ebx
0xa6a2:     83 ec 34                           	sub esp, 0x34
0xa6a5:     8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0xa6a9:     8d 4c 24 18                        	lea ecx, [esp + 0x18]
0xa6ad:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xa6b4:     89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0xa6b8:     31 d2                              	xor edx, edx
0xa6ba:     8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0xa6be:     8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0xa6c2:     8b 10                              	mov edx, dword ptr [eax]
0xa6c4:     89 44 24 04                        	mov dword ptr [esp + 4], eax
0xa6c8:     89 0c 24                           	mov dword ptr [esp], ecx
0xa6cb:     89 74 24 08                        	mov dword ptr [esp + 8], esi
0xa6cf:     ff 52 10                           	call dword ptr [edx + 0x10]
0xa6d2:     31 c0                              	xor eax, eax
0xa6d4:     83 ec 04                           	sub esp, 4
0xa6d7:     8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0xa6db:     39 4b 04                           	cmp dword ptr [ebx + 4], ecx
0xa6de:     8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0xa6e2:     74 14                              	je 0xa6f8 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x58>
0xa6e4:     8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0xa6e8:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa6ef:     75 0e                              	jne 0xa6ff <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x5d>
0xa6f1:     83 c4 34                           	add esp, 0x34
0xa6f4:     5b                                 	pop ebx
0xa6f5:     5e                                 	pop esi
0xa6f6:     c3                                 	ret 
; data inside code section at 0xa6f7 -- 0xa6f8
0xa6f7:     90                                                 |.               |
0xa6f8:     39 13                              	cmp dword ptr [ebx], edx
0xa6fa:     0f 94 c0                           	sete al
0xa6fd:     eb e5                              	jmp 0xa6e4 <_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE+0x44>
; data inside code section at 0xa6ff -- 0xa700
0xa6ff:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa700 -- 0xa701
; data inside code section at 0xa701 -- 0xa704
0xa701:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi
; function: _ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi at 0xa710 -- 0xa74f
0xa710:     53                                 	push ebx
0xa711:     83 ec 18                           	sub esp, 0x18
0xa714:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xa718:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xa71c:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa722:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa726:     31 c0                              	xor eax, eax
0xa728:     8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0xa72c:     39 5a 04                           	cmp dword ptr [edx + 4], ebx
0xa72f:     74 17                              	je 0xa748 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x38>
0xa731:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa735:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa73c:     75 11                              	jne 0xa74f <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x3d>
0xa73e:     83 c4 18                           	add esp, 0x18
0xa741:     5b                                 	pop ebx
0xa742:     c3                                 	ret 
; data inside code section at 0xa743 -- 0xa748
0xa743:     90 8d 74 26 00                                     |..t&.           |
0xa748:     39 0a                              	cmp dword ptr [edx], ecx
0xa74a:     0f 94 c0                           	sete al
0xa74d:     eb e2                              	jmp 0xa731 <_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi+0x21>
; data inside code section at 0xa74f -- 0xa750
0xa74f:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa750 -- 0xa751
; data inside code section at 0xa751 -- 0xa754
0xa751:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals211signal_baseD2Ev
; function: _ZN5boost8signals211signal_baseD1Ev at 0xa760 -- 0xa78a
0xa760:     83 ec 1c                           	sub esp, 0x1c
0xa763:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa769:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa76d:     31 c0                              	xor eax, eax
0xa76f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa773:     c7 00 f0 15 03 00                  	mov dword ptr [eax], 0x315f0
0xa779:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa77d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa784:     75 04                              	jne 0xa78a <_ZN5boost8signals211signal_baseD1Ev+0x29>
0xa786:     83 c4 1c                           	add esp, 0x1c
0xa789:     c3                                 	ret 
; data inside code section at 0xa78a -- 0xa78b
0xa78a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa78b -- 0xa78c
; data inside code section at 0xa78c -- 0xa78f
0xa78c:     ff ff ff                                           |...             |
; section: .text._ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv
; function: _ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv at 0xa790 -- 0xa7b7
0xa790:     83 ec 1c                           	sub esp, 0x1c
0xa793:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa799:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa79d:     31 c0                              	xor eax, eax
0xa79f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa7a3:     0f b6 00                           	movzx eax, byte ptr [eax]
0xa7a6:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xa7aa:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xa7b1:     75 04                              	jne 0xa7b7 <_ZNK5boost15optional_detail13optional_baseISsE14is_initializedEv+0x26>
0xa7b3:     83 c4 1c                           	add esp, 0x1c
0xa7b6:     c3                                 	ret 
; data inside code section at 0xa7b7 -- 0xa7b8
0xa7b7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa7b8 -- 0xa7b9
; data inside code section at 0xa7b9 -- 0xa7bc
0xa7b9:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED1Ev at 0xa7c0 -- 0xa7ea
0xa7c0:     83 ec 1c                           	sub esp, 0x1c
0xa7c3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa7c9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa7cd:     31 c0                              	xor eax, eax
0xa7cf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa7d3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa7d9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa7dd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa7e4:     75 04                              	jne 0xa7ea <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0xa7e6:     83 c4 1c                           	add esp, 0x1c
0xa7e9:     c3                                 	ret 
; data inside code section at 0xa7ea -- 0xa7eb
0xa7ea:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa7eb -- 0xa7ec
; data inside code section at 0xa7ec -- 0xa7ef
0xa7ec:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED1Ev at 0xa7f0 -- 0xa81a
0xa7f0:     83 ec 1c                           	sub esp, 0x1c
0xa7f3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa7f9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa7fd:     31 c0                              	xor eax, eax
0xa7ff:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa803:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa809:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa80d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa814:     75 04                              	jne 0xa81a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0xa816:     83 c4 1c                           	add esp, 0x1c
0xa819:     c3                                 	ret 
; data inside code section at 0xa81a -- 0xa81b
0xa81a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa81b -- 0xa81c
; data inside code section at 0xa81c -- 0xa81f
0xa81c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev at 0xa820 -- 0xa84a
0xa820:     83 ec 1c                           	sub esp, 0x1c
0xa823:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa829:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa82d:     31 c0                              	xor eax, eax
0xa82f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa833:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa839:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa83d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa844:     75 04                              	jne 0xa84a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0xa846:     83 c4 1c                           	add esp, 0x1c
0xa849:     c3                                 	ret 
; data inside code section at 0xa84a -- 0xa84b
0xa84a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa84b -- 0xa84c
; data inside code section at 0xa84c -- 0xa84f
0xa84c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev at 0xa850 -- 0xa87a
0xa850:     83 ec 1c                           	sub esp, 0x1c
0xa853:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa859:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa85d:     31 c0                              	xor eax, eax
0xa85f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa863:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa869:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa86d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa874:     75 04                              	jne 0xa87a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0xa876:     83 c4 1c                           	add esp, 0x1c
0xa879:     c3                                 	ret 
; data inside code section at 0xa87a -- 0xa87b
0xa87a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa87b -- 0xa87c
; data inside code section at 0xa87c -- 0xa87f
0xa87c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED1Ev at 0xa880 -- 0xa8aa
0xa880:     83 ec 1c                           	sub esp, 0x1c
0xa883:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa889:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa88d:     31 c0                              	xor eax, eax
0xa88f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa893:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa899:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa89d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa8a4:     75 04                              	jne 0xa8aa <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0xa8a6:     83 c4 1c                           	add esp, 0x1c
0xa8a9:     c3                                 	ret 
; data inside code section at 0xa8aa -- 0xa8ab
0xa8aa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa8ab -- 0xa8ac
; data inside code section at 0xa8ac -- 0xa8af
0xa8ac:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED1Ev at 0xa8b0 -- 0xa8df
0xa8b0:     83 ec 1c                           	sub esp, 0x1c
0xa8b3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa8b9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa8bd:     31 c0                              	xor eax, eax
0xa8bf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa8c3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa8c9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa8cd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa8d4:     75 04                              	jne 0xa8da <_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED1Ev+0x2a>
0xa8d6:     83 c4 1c                           	add esp, 0x1c
0xa8d9:     c3                                 	ret 
0xa8da:     e8 fc ff ff ff                     	call 0xa8db
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED1Ev at 0xa8e0 -- 0xa90a
0xa8e0:     83 ec 1c                           	sub esp, 0x1c
0xa8e3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa8e9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa8ed:     31 c0                              	xor eax, eax
0xa8ef:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa8f3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa8f9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa8fd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa904:     75 04                              	jne 0xa90a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED1Ev+0x29>
0xa906:     83 c4 1c                           	add esp, 0x1c
0xa909:     c3                                 	ret 
; data inside code section at 0xa90a -- 0xa90b
0xa90a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa90b -- 0xa90c
; data inside code section at 0xa90c -- 0xa90f
0xa90c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED1Ev at 0xa910 -- 0xa93a
0xa910:     83 ec 1c                           	sub esp, 0x1c
0xa913:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa919:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa91d:     31 c0                              	xor eax, eax
0xa91f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa923:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa929:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa92d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa934:     75 04                              	jne 0xa93a <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED1Ev+0x29>
0xa936:     83 c4 1c                           	add esp, 0x1c
0xa939:     c3                                 	ret 
; data inside code section at 0xa93a -- 0xa93b
0xa93a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa93b -- 0xa93c
; data inside code section at 0xa93c -- 0xa93f
0xa93c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED1Ev at 0xa940 -- 0xa96a
0xa940:     83 ec 1c                           	sub esp, 0x1c
0xa943:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa949:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa94d:     31 c0                              	xor eax, eax
0xa94f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa953:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa959:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa95d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa964:     75 04                              	jne 0xa96a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0xa966:     83 c4 1c                           	add esp, 0x1c
0xa969:     c3                                 	ret 
; data inside code section at 0xa96a -- 0xa96b
0xa96a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa96b -- 0xa96c
; data inside code section at 0xa96c -- 0xa96f
0xa96c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev at 0xa970 -- 0xa99a
0xa970:     83 ec 1c                           	sub esp, 0x1c
0xa973:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa979:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa97d:     31 c0                              	xor eax, eax
0xa97f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa983:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa989:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa98d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa994:     75 04                              	jne 0xa99a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED1Ev+0x29>
0xa996:     83 c4 1c                           	add esp, 0x1c
0xa999:     c3                                 	ret 
; data inside code section at 0xa99a -- 0xa99b
0xa99a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa99b -- 0xa99c
; data inside code section at 0xa99c -- 0xa99f
0xa99c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED1Ev at 0xa9a0 -- 0xa9ca
0xa9a0:     83 ec 1c                           	sub esp, 0x1c
0xa9a3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa9a9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa9ad:     31 c0                              	xor eax, eax
0xa9af:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa9b3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa9b9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa9bd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa9c4:     75 04                              	jne 0xa9ca <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED1Ev+0x29>
0xa9c6:     83 c4 1c                           	add esp, 0x1c
0xa9c9:     c3                                 	ret 
; data inside code section at 0xa9ca -- 0xa9cb
0xa9ca:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa9cb -- 0xa9cc
; data inside code section at 0xa9cc -- 0xa9cf
0xa9cc:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED1Ev at 0xa9d0 -- 0xa9fa
0xa9d0:     83 ec 1c                           	sub esp, 0x1c
0xa9d3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xa9d9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xa9dd:     31 c0                              	xor eax, eax
0xa9df:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xa9e3:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xa9e9:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xa9ed:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xa9f4:     75 04                              	jne 0xa9fa <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED1Ev+0x29>
0xa9f6:     83 c4 1c                           	add esp, 0x1c
0xa9f9:     c3                                 	ret 
; data inside code section at 0xa9fa -- 0xa9fb
0xa9fa:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xa9fb -- 0xa9fc
; data inside code section at 0xa9fc -- 0xa9ff
0xa9fc:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev at 0xaa00 -- 0xaa2a
0xaa00:     83 ec 1c                           	sub esp, 0x1c
0xaa03:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaa09:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaa0d:     31 c0                              	xor eax, eax
0xaa0f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaa13:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xaa19:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xaa1d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xaa24:     75 04                              	jne 0xaa2a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED1Ev+0x29>
0xaa26:     83 c4 1c                           	add esp, 0x1c
0xaa29:     c3                                 	ret 
; data inside code section at 0xaa2a -- 0xaa2b
0xaa2a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaa2b -- 0xaa2c
; data inside code section at 0xaa2c -- 0xaa2f
0xaa2c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED2Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev at 0xaa30 -- 0xaa5a
0xaa30:     83 ec 1c                           	sub esp, 0x1c
0xaa33:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaa39:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaa3d:     31 c0                              	xor eax, eax
0xaa3f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaa43:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xaa49:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xaa4d:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xaa54:     75 04                              	jne 0xaa5a <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev+0x29>
0xaa56:     83 c4 1c                           	add esp, 0x1c
0xaa59:     c3                                 	ret 
; data inside code section at 0xaa5a -- 0xaa5b
0xaa5a:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaa5b -- 0xaa5c
; data inside code section at 0xaa5c -- 0xaa5f
0xaa5c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0xaa60 -- 0xaa80
0xaa60:     83 ec 1c                           	sub esp, 0x1c
0xaa63:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaa69:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaa6d:     31 c0                              	xor eax, eax
0xaa6f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaa73:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaa7a:     75 04                              	jne 0xaa80 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x1f>
0xaa7c:     83 c4 1c                           	add esp, 0x1c
0xaa7f:     c3                                 	ret 
; data inside code section at 0xaa80 -- 0xaa81
0xaa80:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaa81 -- 0xaa82
; data inside code section at 0xaa82 -- 0xaa85
0xaa82:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0xaa90 -- 0xaab0
0xaa90:     83 ec 1c                           	sub esp, 0x1c
0xaa93:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaa99:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaa9d:     31 c0                              	xor eax, eax
0xaa9f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaaa3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaaaa:     75 04                              	jne 0xaab0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xaaac:     83 c4 1c                           	add esp, 0x1c
0xaaaf:     c3                                 	ret 
; data inside code section at 0xaab0 -- 0xaab1
0xaab0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaab1 -- 0xaab2
; data inside code section at 0xaab2 -- 0xaab5
0xaab2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0xaac0 -- 0xaae0
0xaac0:     83 ec 1c                           	sub esp, 0x1c
0xaac3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaac9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaacd:     31 c0                              	xor eax, eax
0xaacf:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaad3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaada:     75 04                              	jne 0xaae0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x1f>
0xaadc:     83 c4 1c                           	add esp, 0x1c
0xaadf:     c3                                 	ret 
; data inside code section at 0xaae0 -- 0xaae1
0xaae0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaae1 -- 0xaae2
; data inside code section at 0xaae2 -- 0xaae5
0xaae2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0xaaf0 -- 0xab10
0xaaf0:     83 ec 1c                           	sub esp, 0x1c
0xaaf3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaaf9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaafd:     31 c0                              	xor eax, eax
0xaaff:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xab03:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xab0a:     75 04                              	jne 0xab10 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xab0c:     83 c4 1c                           	add esp, 0x1c
0xab0f:     c3                                 	ret 
; data inside code section at 0xab10 -- 0xab11
0xab10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xab11 -- 0xab12
; data inside code section at 0xab12 -- 0xab15
0xab12:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0xab20 -- 0xab40
0xab20:     83 ec 1c                           	sub esp, 0x1c
0xab23:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xab29:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xab2d:     31 c0                              	xor eax, eax
0xab2f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xab33:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xab3a:     75 04                              	jne 0xab40 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xab3c:     83 c4 1c                           	add esp, 0x1c
0xab3f:     c3                                 	ret 
; data inside code section at 0xab40 -- 0xab41
0xab40:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xab41 -- 0xab42
; data inside code section at 0xab42 -- 0xab45
0xab42:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE11get_deleterERKSt9type_info at 0xab50 -- 0xab70
0xab50:     83 ec 1c                           	sub esp, 0x1c
0xab53:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xab59:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xab5d:     31 c0                              	xor eax, eax
0xab5f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xab63:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xab6a:     75 04                              	jne 0xab70 <_ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE11get_deleterERKSt9type_info+0x1f>
0xab6c:     83 c4 1c                           	add esp, 0x1c
0xab6f:     c3                                 	ret 
; data inside code section at 0xab70 -- 0xab71
0xab70:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xab71 -- 0xab72
; data inside code section at 0xab72 -- 0xab75
0xab72:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info at 0xab80 -- 0xaba0
0xab80:     83 ec 1c                           	sub esp, 0x1c
0xab83:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xab89:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xab8d:     31 c0                              	xor eax, eax
0xab8f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xab93:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xab9a:     75 04                              	jne 0xaba0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xab9c:     83 c4 1c                           	add esp, 0x1c
0xab9f:     c3                                 	ret 
; data inside code section at 0xaba0 -- 0xaba1
0xaba0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaba1 -- 0xaba2
; data inside code section at 0xaba2 -- 0xaba5
0xaba2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv at 0xabb0 -- 0xac00
0xabb0:     83 ec 1c                           	sub esp, 0x1c
0xabb3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xabb9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xabbd:     31 c0                              	xor eax, eax
0xabbf:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xabc3:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xabc6:     85 c0                              	test eax, eax
0xabc8:     74 1e                              	je 0xabe8 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv+0x38>
0xabca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xabce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xabd5:     75 22                              	jne 0xabf9 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv+0x49>
0xabd7:     8b 10                              	mov edx, dword ptr [eax]
0xabd9:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xabdd:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xabe0:     83 c4 1c                           	add esp, 0x1c
0xabe3:     ff e0                              	jmp eax
; data inside code section at 0xabe5 -- 0xabe8
0xabe5:     8d 76 00                                           |.v.             |
0xabe8:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xabec:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xabf3:     75 04                              	jne 0xabf9 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE7disposeEv+0x49>
0xabf5:     83 c4 1c                           	add esp, 0x1c
0xabf8:     c3                                 	ret 
0xabf9:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xac00 -- 0xac01
0xac00:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xac01 -- 0xac02
; data inside code section at 0xac02 -- 0xac05
0xac02:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE11get_deleterERKSt9type_info at 0xac10 -- 0xac30
0xac10:     83 ec 1c                           	sub esp, 0x1c
0xac13:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xac19:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xac1d:     31 c0                              	xor eax, eax
0xac1f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xac23:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xac2a:     75 04                              	jne 0xac30 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xac2c:     83 c4 1c                           	add esp, 0x1c
0xac2f:     c3                                 	ret 
; data inside code section at 0xac30 -- 0xac31
0xac30:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xac31 -- 0xac32
; data inside code section at 0xac32 -- 0xac35
0xac32:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0xac40 -- 0xac65
0xac40:     83 ec 1c                           	sub esp, 0x1c
0xac43:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xac49:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xac4d:     31 c0                              	xor eax, eax
0xac4f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xac53:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xac5a:     75 04                              	jne 0xac60 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x20>
0xac5c:     83 c4 1c                           	add esp, 0x1c
0xac5f:     c3                                 	ret 
0xac60:     e8 fc ff ff ff                     	call 0xac61
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info at 0xac70 -- 0xac90
0xac70:     83 ec 1c                           	sub esp, 0x1c
0xac73:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xac79:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xac7d:     31 c0                              	xor eax, eax
0xac7f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xac83:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xac8a:     75 04                              	jne 0xac90 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info+0x1f>
0xac8c:     83 c4 1c                           	add esp, 0x1c
0xac8f:     c3                                 	ret 
; data inside code section at 0xac90 -- 0xac91
0xac90:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xac91 -- 0xac92
; data inside code section at 0xac92 -- 0xac95
0xac92:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEE3runEv
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEE3runEv at 0xaca0 -- 0xacf1
0xaca0:     83 ec 2c                           	sub esp, 0x2c
0xaca3:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xaca7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xacae:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xacb2:     31 d2                              	xor edx, edx
0xacb4:     8b 90 10 01 00 00                  	mov edx, dword ptr [eax + 0x110]
0xacba:     89 d1                              	mov ecx, edx
0xacbc:     c1 f9 1f                           	sar ecx, 0x1f
0xacbf:     89 54 24 08                        	mov dword ptr [esp + 8], edx
0xacc3:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xacc7:     8b 90 0c 01 00 00                  	mov edx, dword ptr [eax + 0x10c]
0xaccd:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xacd1:     8b 90 08 01 00 00                  	mov edx, dword ptr [eax + 0x108]
0xacd7:     89 14 24                           	mov dword ptr [esp], edx
0xacda:     ff 90 04 01 00 00                  	call dword ptr [eax + 0x104]
0xace0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xace4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xaceb:     75 04                              	jne 0xacf1 <_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEE3runEv+0x50>
0xaced:     83 c4 2c                           	add esp, 0x2c
0xacf0:     c3                                 	ret 
; data inside code section at 0xacf1 -- 0xacf2
0xacf1:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xacf2 -- 0xacf3
; data inside code section at 0xacf3 -- 0xacf6
0xacf3:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv at 0xad00 -- 0xad50
0xad00:     83 ec 1c                           	sub esp, 0x1c
0xad03:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xad09:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xad0d:     31 c0                              	xor eax, eax
0xad0f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xad13:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xad16:     85 c0                              	test eax, eax
0xad18:     74 1e                              	je 0xad38 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv+0x38>
0xad1a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xad1e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xad25:     75 22                              	jne 0xad49 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv+0x49>
0xad27:     8b 10                              	mov edx, dword ptr [eax]
0xad29:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xad2d:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xad30:     83 c4 1c                           	add esp, 0x1c
0xad33:     ff e0                              	jmp eax
; data inside code section at 0xad35 -- 0xad38
0xad35:     8d 76 00                                           |.v.             |
0xad38:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xad3c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xad43:     75 04                              	jne 0xad49 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE7disposeEv+0x49>
0xad45:     83 c4 1c                           	add esp, 0x1c
0xad48:     c3                                 	ret 
0xad49:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xad50 -- 0xad51
0xad50:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xad51 -- 0xad52
; data inside code section at 0xad52 -- 0xad55
0xad52:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE11get_deleterERKSt9type_info at 0xad60 -- 0xad80
0xad60:     83 ec 1c                           	sub esp, 0x1c
0xad63:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xad69:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xad6d:     31 c0                              	xor eax, eax
0xad6f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xad73:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xad7a:     75 04                              	jne 0xad80 <_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEE11get_deleterERKSt9type_info+0x1f>
0xad7c:     83 c4 1c                           	add esp, 0x1c
0xad7f:     c3                                 	ret 
; data inside code section at 0xad80 -- 0xad81
0xad80:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xad81 -- 0xad82
; data inside code section at 0xad82 -- 0xad85
0xad82:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE11get_deleterERKSt9type_info at 0xad90 -- 0xadb0
0xad90:     83 ec 1c                           	sub esp, 0x1c
0xad93:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xad99:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xad9d:     31 c0                              	xor eax, eax
0xad9f:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xada3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xadaa:     75 04                              	jne 0xadb0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE11get_deleterERKSt9type_info+0x1f>
0xadac:     83 c4 1c                           	add esp, 0x1c
0xadaf:     c3                                 	ret 
; data inside code section at 0xadb0 -- 0xadb1
0xadb0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xadb1 -- 0xadb2
; data inside code section at 0xadb2 -- 0xadb5
0xadb2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info at 0xadc0 -- 0xade0
0xadc0:     83 ec 1c                           	sub esp, 0x1c
0xadc3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xadc9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xadcd:     31 c0                              	xor eax, eax
0xadcf:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xadd3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xadda:     75 04                              	jne 0xade0 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE11get_deleterERKSt9type_info+0x1f>
0xaddc:     83 c4 1c                           	add esp, 0x1c
0xaddf:     c3                                 	ret 
; data inside code section at 0xade0 -- 0xade1
0xade0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xade1 -- 0xade2
; data inside code section at 0xade2 -- 0xade5
0xade2:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEE3runEv
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEE3runEv at 0xadf0 -- 0xae30
0xadf0:     83 ec 2c                           	sub esp, 0x2c
0xadf3:     8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0xadf7:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xadfe:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xae02:     31 d2                              	xor edx, edx
0xae04:     8b 90 0c 01 00 00                  	mov edx, dword ptr [eax + 0x10c]
0xae0a:     89 54 24 04                        	mov dword ptr [esp + 4], edx
0xae0e:     8b 90 08 01 00 00                  	mov edx, dword ptr [eax + 0x108]
0xae14:     89 14 24                           	mov dword ptr [esp], edx
0xae17:     ff 90 04 01 00 00                  	call dword ptr [eax + 0x104]
0xae1d:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xae21:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xae28:     75 04                              	jne 0xae2e <_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEE3runEv+0x3e>
0xae2a:     83 c4 2c                           	add esp, 0x2c
0xae2d:     c3                                 	ret 
0xae2e:     66 90                              	nop 
; data inside code section at 0xae30 -- 0xae31
0xae30:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xae31 -- 0xae32
; data inside code section at 0xae32 -- 0xae35
0xae32:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv at 0xae40 -- 0xae90
0xae40:     83 ec 1c                           	sub esp, 0x1c
0xae43:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xae49:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xae4d:     31 c0                              	xor eax, eax
0xae4f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xae53:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xae56:     85 c0                              	test eax, eax
0xae58:     74 1e                              	je 0xae78 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x38>
0xae5a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xae5e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xae65:     75 22                              	jne 0xae89 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0xae67:     8b 10                              	mov edx, dword ptr [eax]
0xae69:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xae6d:     8b 42 04                           	mov eax, dword ptr [edx + 4]
0xae70:     83 c4 1c                           	add esp, 0x1c
0xae73:     ff e0                              	jmp eax
; data inside code section at 0xae75 -- 0xae78
0xae75:     8d 76 00                                           |.v.             |
0xae78:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xae7c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xae83:     75 04                              	jne 0xae89 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv+0x49>
0xae85:     83 c4 1c                           	add esp, 0x1c
0xae88:     c3                                 	ret 
0xae89:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xae90 -- 0xae91
0xae90:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xae91 -- 0xae92
; data inside code section at 0xae92 -- 0xae95
0xae92:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info at 0xaea0 -- 0xaec0
0xaea0:     83 ec 1c                           	sub esp, 0x1c
0xaea3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xaea9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xaead:     31 c0                              	xor eax, eax
0xaeaf:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaeb3:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaeba:     75 04                              	jne 0xaec0 <_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info+0x1f>
0xaebc:     83 c4 1c                           	add esp, 0x1c
0xaebf:     c3                                 	ret 
; data inside code section at 0xaec0 -- 0xaec1
0xaec0:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaec1 -- 0xaec2
; data inside code section at 0xaec2 -- 0xaec5
0xaec2:     ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv
; function: _ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv at 0xaed0 -- 0xaf10
0xaed0:     83 ec 1c                           	sub esp, 0x1c
0xaed3:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xaed7:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xaede:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xaee2:     31 c9                              	xor ecx, ecx
0xaee4:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaee8:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0xaeeb:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0xaeee:     89 08                              	mov dword ptr [eax], ecx
0xaef0:     85 d2                              	test edx, edx
0xaef2:     89 50 04                           	mov dword ptr [eax + 4], edx
0xaef5:     74 04                              	je 0xaefb <_ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv+0x2b>
0xaef7:     f0 ff 42 04                        	lock inc dword ptr [edx + 4]
0xaefb:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaeff:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaf06:     75 06                              	jne 0xaf0e <_ZNK5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEE10lock_pimplEv+0x3e>
0xaf08:     83 c4 1c                           	add esp, 0x1c
0xaf0b:     c2 04 00                           	ret 4
0xaf0e:     66 90                              	nop 
; data inside code section at 0xaf10 -- 0xaf11
0xaf10:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaf11 -- 0xaf12
; data inside code section at 0xaf12 -- 0xaf15
0xaf12:     ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv
; function: _ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv at 0xaf20 -- 0xaf60
0xaf20:     83 ec 1c                           	sub esp, 0x1c
0xaf23:     8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0xaf27:     65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0xaf2e:     89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0xaf32:     31 c9                              	xor ecx, ecx
0xaf34:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaf38:     8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0xaf3b:     8b 52 08                           	mov edx, dword ptr [edx + 8]
0xaf3e:     89 08                              	mov dword ptr [eax], ecx
0xaf40:     85 d2                              	test edx, edx
0xaf42:     89 50 04                           	mov dword ptr [eax + 4], edx
0xaf45:     74 04                              	je 0xaf4b <_ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv+0x2b>
0xaf47:     f0 ff 42 04                        	lock inc dword ptr [edx + 4]
0xaf4b:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaf4f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaf56:     75 06                              	jne 0xaf5e <_ZNK5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEE10lock_pimplEv+0x3e>
0xaf58:     83 c4 1c                           	add esp, 0x1c
0xaf5b:     c2 04 00                           	ret 4
0xaf5e:     66 90                              	nop 
; data inside code section at 0xaf60 -- 0xaf61
0xaf60:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xaf61 -- 0xaf62
; data inside code section at 0xaf62 -- 0xaf65
0xaf62:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev at 0xaf70 -- 0xaf9e
0xaf70:     83 ec 1c                           	sub esp, 0x1c
0xaf73:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xaf7a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xaf7e:     31 d2                              	xor edx, edx
0xaf80:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xaf84:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xaf8a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xaf8e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xaf95:     75 0c                              	jne 0xafa3 <function_afa3>
0xaf97:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xaf9b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xaf9e -- 0xaf9f
0xaf9e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xaf9f -- 0xafa0
; data inside code section at 0xafa0 -- 0xafa3
0xafa0:     ff ff ff                                           |...             |
; function: function_afa3 at 0xafa3 -- 0xafa4
; dynamically linked function: __stack_chk_fail at 0xafa4 -- 0xafa5
; data inside code section at 0xafa5 -- 0xafa8
0xafa5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEED0Ev at 0xafb0 -- 0xafde
0xafb0:     83 ec 1c                           	sub esp, 0x1c
0xafb3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xafba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xafbe:     31 d2                              	xor edx, edx
0xafc0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xafc4:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xafca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xafce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xafd5:     75 0c                              	jne 0xafe3 <function_afe3>
0xafd7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xafdb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xafde -- 0xafdf
0xafde:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xafdf -- 0xafe0
; data inside code section at 0xafe0 -- 0xafe3
0xafe0:     ff ff ff                                           |...             |
; function: function_afe3 at 0xafe3 -- 0xafe4
; dynamically linked function: __stack_chk_fail at 0xafe4 -- 0xafe5
; data inside code section at 0xafe5 -- 0xafe8
0xafe5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEED0Ev at 0xaff0 -- 0xb01e
0xaff0:     83 ec 1c                           	sub esp, 0x1c
0xaff3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xaffa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xaffe:     31 d2                              	xor edx, edx
0xb000:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb004:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb00a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb00e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb015:     75 0c                              	jne 0xb023 <function_b023>
0xb017:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb01b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb01e -- 0xb01f
0xb01e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb01f -- 0xb020
; data inside code section at 0xb020 -- 0xb023
0xb020:     ff ff ff                                           |...             |
; function: function_b023 at 0xb023 -- 0xb024
; dynamically linked function: __stack_chk_fail at 0xb024 -- 0xb025
; data inside code section at 0xb025 -- 0xb028
0xb025:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEED0Ev at 0xb030 -- 0xb05e
0xb030:     83 ec 1c                           	sub esp, 0x1c
0xb033:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb03a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb03e:     31 d2                              	xor edx, edx
0xb040:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb044:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb04a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb04e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb055:     75 0c                              	jne 0xb063 <function_b063>
0xb057:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb05b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb05e -- 0xb05f
0xb05e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb05f -- 0xb060
; data inside code section at 0xb060 -- 0xb063
0xb060:     ff ff ff                                           |...             |
; function: function_b063 at 0xb063 -- 0xb064
; dynamically linked function: __stack_chk_fail at 0xb064 -- 0xb065
; data inside code section at 0xb065 -- 0xb068
0xb065:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev at 0xb070 -- 0xb09e
0xb070:     83 ec 1c                           	sub esp, 0x1c
0xb073:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb07a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb07e:     31 d2                              	xor edx, edx
0xb080:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb084:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb08a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb08e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb095:     75 0c                              	jne 0xb0a3 <function_b0a3>
0xb097:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb09b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb09e -- 0xb09f
0xb09e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb09f -- 0xb0a0
; data inside code section at 0xb0a0 -- 0xb0a3
0xb0a0:     ff ff ff                                           |...             |
; function: function_b0a3 at 0xb0a3 -- 0xb0a4
; dynamically linked function: __stack_chk_fail at 0xb0a4 -- 0xb0a5
; data inside code section at 0xb0a5 -- 0xb0a8
0xb0a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEED0Ev at 0xb0b0 -- 0xb0de
0xb0b0:     83 ec 1c                           	sub esp, 0x1c
0xb0b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb0ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb0be:     31 d2                              	xor edx, edx
0xb0c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb0c4:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb0ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb0ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb0d5:     75 0c                              	jne 0xb0e3 <function_b0e3>
0xb0d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb0db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb0de -- 0xb0df
0xb0de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb0df -- 0xb0e0
; data inside code section at 0xb0e0 -- 0xb0e3
0xb0e0:     ff ff ff                                           |...             |
; function: function_b0e3 at 0xb0e3 -- 0xb0e4
; dynamically linked function: __stack_chk_fail at 0xb0e4 -- 0xb0e5
; data inside code section at 0xb0e5 -- 0xb0e8
0xb0e5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEED0Ev at 0xb0f0 -- 0xb11e
0xb0f0:     83 ec 1c                           	sub esp, 0x1c
0xb0f3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb0fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb0fe:     31 d2                              	xor edx, edx
0xb100:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb104:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb10a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb10e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb115:     75 0c                              	jne 0xb123 <function_b123>
0xb117:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb11b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb11e -- 0xb11f
0xb11e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb11f -- 0xb120
; data inside code section at 0xb120 -- 0xb123
0xb120:     ff ff ff                                           |...             |
; function: function_b123 at 0xb123 -- 0xb124
; dynamically linked function: __stack_chk_fail at 0xb124 -- 0xb125
; data inside code section at 0xb125 -- 0xb128
0xb125:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEED0Ev at 0xb130 -- 0xb15e
0xb130:     83 ec 1c                           	sub esp, 0x1c
0xb133:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb13a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb13e:     31 d2                              	xor edx, edx
0xb140:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb144:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb14a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb14e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb155:     75 0c                              	jne 0xb163 <function_b163>
0xb157:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb15b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb15e -- 0xb15f
0xb15e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb15f -- 0xb160
; data inside code section at 0xb160 -- 0xb163
0xb160:     ff ff ff                                           |...             |
; function: function_b163 at 0xb163 -- 0xb164
; dynamically linked function: __stack_chk_fail at 0xb164 -- 0xb165
; data inside code section at 0xb165 -- 0xb168
0xb165:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEED0Ev at 0xb170 -- 0xb19e
0xb170:     83 ec 1c                           	sub esp, 0x1c
0xb173:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb17a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb17e:     31 d2                              	xor edx, edx
0xb180:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb184:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb18a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb18e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb195:     75 0c                              	jne 0xb1a3 <function_b1a3>
0xb197:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb19b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb19e -- 0xb19f
0xb19e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb19f -- 0xb1a0
; data inside code section at 0xb1a0 -- 0xb1a3
0xb1a0:     ff ff ff                                           |...             |
; function: function_b1a3 at 0xb1a3 -- 0xb1a4
; dynamically linked function: __stack_chk_fail at 0xb1a4 -- 0xb1a5
; data inside code section at 0xb1a5 -- 0xb1a8
0xb1a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEED0Ev at 0xb1b0 -- 0xb1de
0xb1b0:     83 ec 1c                           	sub esp, 0x1c
0xb1b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb1ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb1be:     31 d2                              	xor edx, edx
0xb1c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb1c4:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb1ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb1ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb1d5:     75 0c                              	jne 0xb1e3 <function_b1e3>
0xb1d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb1db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb1de -- 0xb1df
0xb1de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb1df -- 0xb1e0
; data inside code section at 0xb1e0 -- 0xb1e3
0xb1e0:     ff ff ff                                           |...             |
; function: function_b1e3 at 0xb1e3 -- 0xb1e4
; dynamically linked function: __stack_chk_fail at 0xb1e4 -- 0xb1e5
; data inside code section at 0xb1e5 -- 0xb1e8
0xb1e5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEED0Ev at 0xb1f0 -- 0xb21e
0xb1f0:     83 ec 1c                           	sub esp, 0x1c
0xb1f3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb1fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb1fe:     31 d2                              	xor edx, edx
0xb200:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb204:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb20a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb20e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb215:     75 0c                              	jne 0xb223 <function_b223>
0xb217:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb21b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb21e -- 0xb21f
0xb21e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb21f -- 0xb220
; data inside code section at 0xb220 -- 0xb223
0xb220:     ff ff ff                                           |...             |
; function: function_b223 at 0xb223 -- 0xb224
; dynamically linked function: __stack_chk_fail at 0xb224 -- 0xb225
; data inside code section at 0xb225 -- 0xb228
0xb225:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEED0Ev at 0xb230 -- 0xb25e
0xb230:     83 ec 1c                           	sub esp, 0x1c
0xb233:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb23a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb23e:     31 d2                              	xor edx, edx
0xb240:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb244:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb24a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb24e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb255:     75 0c                              	jne 0xb263 <function_b263>
0xb257:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb25b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb25e -- 0xb25f
0xb25e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb25f -- 0xb260
; data inside code section at 0xb260 -- 0xb263
0xb260:     ff ff ff                                           |...             |
; function: function_b263 at 0xb263 -- 0xb264
; dynamically linked function: __stack_chk_fail at 0xb264 -- 0xb265
; data inside code section at 0xb265 -- 0xb268
0xb265:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev at 0xb270 -- 0xb2a3
0xb270:     83 ec 1c                           	sub esp, 0x1c
0xb273:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb27a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb27e:     31 d2                              	xor edx, edx
0xb280:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb284:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb28a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb28e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb295:     75 0c                              	jne 0xb2a3 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEED0Ev+0x2e>
0xb297:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb29b:     83 c4 1c                           	add esp, 0x1c
0xb29e:     e9 fc ff ff ff                     	jmp 0xb29f
; data inside code section at 0xb2a3 -- 0xb2a4
0xb2a3:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb2a4 -- 0xb2a5
; data inside code section at 0xb2a5 -- 0xb2a8
0xb2a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED0Ev
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEED0Ev at 0xb2b0 -- 0xb2de
0xb2b0:     83 ec 1c                           	sub esp, 0x1c
0xb2b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb2ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb2be:     31 d2                              	xor edx, edx
0xb2c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb2c4:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb2ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb2ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb2d5:     75 0c                              	jne 0xb2e3 <function_b2e3>
0xb2d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb2db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb2de -- 0xb2df
0xb2de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb2df -- 0xb2e0
; data inside code section at 0xb2e0 -- 0xb2e3
0xb2e0:     ff ff ff                                           |...             |
; function: function_b2e3 at 0xb2e3 -- 0xb2e4
; dynamically linked function: __stack_chk_fail at 0xb2e4 -- 0xb2e5
; data inside code section at 0xb2e5 -- 0xb2e8
0xb2e5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail15sp_counted_baseD0Ev
; function: _ZN5boost6detail15sp_counted_baseD0Ev at 0xb2f0 -- 0xb31e
0xb2f0:     83 ec 1c                           	sub esp, 0x1c
0xb2f3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb2fa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb2fe:     31 d2                              	xor edx, edx
0xb300:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb304:     c7 00 28 14 03 00                  	mov dword ptr [eax], 0x31428
0xb30a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb30e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb315:     75 0c                              	jne 0xb323 <function_b323>
0xb317:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb31b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb31e -- 0xb31f
0xb31e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb31f -- 0xb320
; data inside code section at 0xb320 -- 0xb323
0xb320:     ff ff ff                                           |...             |
; function: function_b323 at 0xb323 -- 0xb324
; dynamically linked function: __stack_chk_fail at 0xb324 -- 0xb325
; data inside code section at 0xb325 -- 0xb328
0xb325:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_baseD0Ev
; function: _ZN5boost16exception_detail10clone_baseD0Ev at 0xb330 -- 0xb35e
0xb330:     83 ec 1c                           	sub esp, 0x1c
0xb333:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb33a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb33e:     31 d2                              	xor edx, edx
0xb340:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb344:     c7 00 50 0e 03 00                  	mov dword ptr [eax], 0x30e50
0xb34a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb34e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb355:     75 0c                              	jne 0xb363 <function_b363>
0xb357:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb35b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb35e -- 0xb35f
0xb35e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb35f -- 0xb360
; data inside code section at 0xb360 -- 0xb363
0xb360:     ff ff ff                                           |...             |
; function: function_b363 at 0xb363 -- 0xb364
; dynamically linked function: __stack_chk_fail at 0xb364 -- 0xb365
; data inside code section at 0xb365 -- 0xb368
0xb365:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system14error_categoryD0Ev
; function: _ZN5boost6system14error_categoryD0Ev at 0xb370 -- 0xb39e
0xb370:     83 ec 1c                           	sub esp, 0x1c
0xb373:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb37a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb37e:     31 d2                              	xor edx, edx
0xb380:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb384:     c7 00 c8 77 02 00                  	mov dword ptr [eax], 0x277c8
0xb38a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb38e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb395:     75 0c                              	jne 0xb3a3 <function_b3a3>
0xb397:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb39b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb39e -- 0xb39f
0xb39e:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb39f -- 0xb3a0
; data inside code section at 0xb3a0 -- 0xb3a3
0xb3a0:     ff ff ff                                           |...             |
; function: function_b3a3 at 0xb3a3 -- 0xb3a4
; dynamically linked function: __stack_chk_fail at 0xb3a4 -- 0xb3a5
; data inside code section at 0xb3a5 -- 0xb3a8
0xb3a5:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals211signal_baseD0Ev
; function: _ZN5boost8signals211signal_baseD0Ev at 0xb3b0 -- 0xb3de
0xb3b0:     83 ec 1c                           	sub esp, 0x1c
0xb3b3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb3ba:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb3be:     31 d2                              	xor edx, edx
0xb3c0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb3c4:     c7 00 f0 15 03 00                  	mov dword ptr [eax], 0x315f0
0xb3ca:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb3ce:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb3d5:     75 0c                              	jne 0xb3e3 <function_b3e3>
0xb3d7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb3db:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb3de -- 0xb3df
0xb3de:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb3df -- 0xb3e0
; data inside code section at 0xb3e0 -- 0xb3e3
0xb3e0:     ff ff ff                                           |...             |
; function: function_b3e3 at 0xb3e3 -- 0xb3e4
; dynamically linked function: __stack_chk_fail at 0xb3e4 -- 0xb3e5
; data inside code section at 0xb3e5 -- 0xb3e8
0xb3e5:     ff ff ff                                           |...             |
; section: .text._ZNSt4listIP5CNodeSaIS1_EED2Ev
; function: _ZNSt4listIP5CNodeSaIS1_EED1Ev at 0xb3f0 -- 0xb417
0xb3f0:     56                                 	push esi
0xb3f1:     53                                 	push ebx
0xb3f2:     83 ec 24                           	sub esp, 0x24
0xb3f5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xb3f9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb3ff:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb403:     31 c0                              	xor eax, eax
0xb405:     8b 06                              	mov eax, dword ptr [esi]
0xb407:     39 f0                              	cmp eax, esi
0xb409:     75 07                              	jne 0xb412 <_ZNSt4listIP5CNodeSaIS1_EED1Ev+0x22>
0xb40b:     eb 13                              	jmp 0xb420 <function_b420>
; data inside code section at 0xb40d -- 0xb410
0xb40d:     8d 76 00                                           |.v.             |
0xb410:     89 d8                              	mov eax, ebx
0xb412:     8b 18                              	mov ebx, dword ptr [eax]
0xb414:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb417 -- 0xb418
0xb417:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb418 -- 0xb419
; data inside code section at 0xb419 -- 0xb420
0xb419:     ff ff ff 39 f3 75 f0                               |...9.u.         |
; function: function_b420 at 0xb420 -- 0xb433
0xb420:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb424:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb42b:     75 06                              	jne 0xb433 <function_b420+0x12>
0xb42d:     83 c4 24                           	add esp, 0x24
0xb430:     5b                                 	pop ebx
0xb431:     5e                                 	pop esi
0xb432:     c3                                 	ret 
; data inside code section at 0xb433 -- 0xb434
0xb433:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb434 -- 0xb435
; data inside code section at 0xb435 -- 0xb438
0xb435:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIjSaIjEED2Ev
; function: _ZNSt6vectorIjSaIjEED1Ev at 0xb440 -- 0xb46d
0xb440:     83 ec 1c                           	sub esp, 0x1c
0xb443:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb449:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xb44d:     31 c0                              	xor eax, eax
0xb44f:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb453:     8b 00                              	mov eax, dword ptr [eax]
0xb455:     85 c0                              	test eax, eax
0xb457:     74 1f                              	je 0xb478 <function_b478>
0xb459:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb45d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb464:     75 23                              	jne 0xb489 <function_b489>
0xb466:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb46a:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb46d -- 0xb46e
0xb46d:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb46e -- 0xb46f
; data inside code section at 0xb46f -- 0xb478
0xb46f:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_b478 at 0xb478 -- 0xb489
0xb478:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xb47c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb483:     75 04                              	jne 0xb489 <function_b489>
0xb485:     83 c4 1c                           	add esp, 0x1c
0xb488:     c3                                 	ret 
; function: function_b489 at 0xb489 -- 0xb490
0xb489:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xb490 -- 0xb491
0xb490:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xb491 -- 0xb492
; data inside code section at 0xb492 -- 0xb495
0xb492:     ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j at 0xb4a0 -- 0xb4e9
0xb4a0:     83 ec 1c                           	sub esp, 0x1c
0xb4a3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb4aa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb4ae:     31 d2                              	xor edx, edx
0xb4b0:     8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0xb4b4:     83 7c 24 28 0a                     	cmp dword ptr [esp + 0x28], 0xa
0xb4b9:     77 15                              	ja 0xb4d0 <_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j+0x30>
0xb4bb:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xb4bf:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb4c6:     75 26                              	jne 0xb4ee <function_b4ee>
0xb4c8:     83 c4 1c                           	add esp, 0x1c
0xb4cb:     c3                                 	ret 
; data inside code section at 0xb4cc -- 0xb4d0
0xb4cc:     8d 74 26 00                                        |.t&.            |
0xb4d0:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb4d4:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb4db:     90                                 	nop 
0xb4dc:     8d 74 26 00                        	lea esi, [esi]
0xb4e0:     75 0c                              	jne 0xb4ee <function_b4ee>
0xb4e2:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb4e6:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb4e9 -- 0xb4ea
0xb4e9:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb4ea -- 0xb4eb
; data inside code section at 0xb4eb -- 0xb4ee
0xb4eb:     ff ff ff                                           |...             |
; function: function_b4ee at 0xb4ee -- 0xb4ef
; dynamically linked function: __stack_chk_fail at 0xb4ef -- 0xb4f0
; data inside code section at 0xb4f0 -- 0xb4f3
0xb4f0:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEE7disposeEv at 0xb500 -- 0xb52b
0xb500:     83 ec 1c                           	sub esp, 0x1c
0xb503:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb50a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb50e:     31 d2                              	xor edx, edx
0xb510:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb514:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb518:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb51f:     75 0f                              	jne 0xb530 <function_b530>
0xb521:     8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0xb524:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb528:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb52b -- 0xb52c
0xb52b:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb52c -- 0xb52d
; data inside code section at 0xb52d -- 0xb530
0xb52d:     ff ff ff                                           |...             |
; function: function_b530 at 0xb530 -- 0xb531
; dynamically linked function: __stack_chk_fail at 0xb531 -- 0xb532
; data inside code section at 0xb532 -- 0xb535
0xb532:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt4pairIx4CInvESaIS2_EED2Ev
; function: _ZNSt5dequeISt4pairIx4CInvESaIS2_EED1Ev at 0xb540 -- 0xb578
0xb540:     57                                 	push edi
0xb541:     56                                 	push esi
0xb542:     53                                 	push ebx
0xb543:     83 ec 20                           	sub esp, 0x20
0xb546:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xb54a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb550:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb554:     31 c0                              	xor eax, eax
0xb556:     8b 07                              	mov eax, dword ptr [edi]
0xb558:     85 c0                              	test eax, eax
0xb55a:     74 44                              	je 0xb5a0 <function_b5a0>
0xb55c:     8b 77 24                           	mov esi, dword ptr [edi + 0x24]
0xb55f:     8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0xb562:     83 c6 04                           	add esi, 4
0xb565:     39 de                              	cmp esi, ebx
0xb567:     76 1a                              	jbe 0xb583 <function_b583>
0xb569:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xb570:     8b 03                              	mov eax, dword ptr [ebx]
0xb572:     83 c3 04                           	add ebx, 4
0xb575:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb578 -- 0xb579
0xb578:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb579 -- 0xb57a
; data inside code section at 0xb57a -- 0xb583
0xb57a:     ff ff ff 39 de 77 ef 8b  07                        |...9.w...       |
; function: function_b583 at 0xb583 -- 0xb59a
0xb583:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xb587:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb58e:     75 24                              	jne 0xb5b4 <function_b5b4>
0xb590:     89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0xb594:     83 c4 20                           	add esp, 0x20
0xb597:     5b                                 	pop ebx
0xb598:     5e                                 	pop esi
0xb599:     5f                                 	pop edi
; data inside code section at 0xb59a -- 0xb59b
0xb59a:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xb59b -- 0xb59c
; data inside code section at 0xb59c -- 0xb5a0
0xb59c:     ff ff ff 90                                        |....            |
; function: function_b5a0 at 0xb5a0 -- 0xb5b4
0xb5a0:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xb5a4:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xb5ab:     75 07                              	jne 0xb5b4 <function_b5b4>
0xb5ad:     83 c4 20                           	add esp, 0x20
0xb5b0:     5b                                 	pop ebx
0xb5b1:     5e                                 	pop esi
0xb5b2:     5f                                 	pop edi
0xb5b3:     c3                                 	ret 
; function: function_b5b4 at 0xb5b4 -- 0xb5b5
; dynamically linked function: __stack_chk_fail at 0xb5b5 -- 0xb5b6
; data inside code section at 0xb5b6 -- 0xb5b9
0xb5b6:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD2Ev
; function: _ZN5boost17bad_function_callD1Ev at 0xb5c0 -- 0xb5ee
0xb5c0:     83 ec 1c                           	sub esp, 0x1c
0xb5c3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb5ca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb5ce:     31 d2                              	xor edx, edx
0xb5d0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb5d4:     c7 00 38 13 03 00                  	mov dword ptr [eax], 0x31338
0xb5da:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb5de:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb5e5:     75 0c                              	jne 0xb5f3 <function_b5f3>
0xb5e7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb5eb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb5ee -- 0xb5ef
0xb5ee:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xb5ef -- 0xb5f0
; data inside code section at 0xb5f0 -- 0xb5f3
0xb5f0:     ff ff ff                                           |...             |
; function: function_b5f3 at 0xb5f3 -- 0xb5f4
; dynamically linked function: __stack_chk_fail at 0xb5f4 -- 0xb5f5
; data inside code section at 0xb5f5 -- 0xb5f8
0xb5f5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD2Ev
; function: _ZN5boost6system12system_errorD1Ev at 0xb600 -- 0xb620
0xb600:     53                                 	push ebx
0xb601:     83 ec 28                           	sub esp, 0x28
0xb604:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xb608:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb60e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb612:     31 c0                              	xor eax, eax
0xb614:     c7 03 f0 77 02 00                  	mov dword ptr [ebx], 0x277f0
0xb61a:     8d 43 10                           	lea eax, [ebx + 0x10]
0xb61d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xb620 -- 0xb621
0xb620:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xb621 -- 0xb622
; data inside code section at 0xb622 -- 0xb63b
0xb622:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xb632:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xb63b -- 0xb63c
; data inside code section at 0xb63c -- 0xb640
0xb63c:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xb640 -- 0xb641
; data inside code section at 0xb641 -- 0xb644
0xb641:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD2Ev
; function: _ZN5boost16thread_exceptionD1Ev at 0xb650 -- 0xb67e
0xb650:     83 ec 1c                           	sub esp, 0x1c
0xb653:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xb65a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xb65e:     31 d2                              	xor edx, edx
0xb660:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xb664:     c7 00 08 78 02 00                  	mov dword ptr [eax], 0x27808
0xb66a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xb66e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xb675:     75 0c                              	jne 0xb683 <function_b683>
0xb677:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xb67b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xb67e -- 0xb67f
0xb67e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xb67f -- 0xb680
; data inside code section at 0xb680 -- 0xb683
0xb680:     ff ff ff                                           |...             |
; function: function_b683 at 0xb683 -- 0xb684
; dynamically linked function: __stack_chk_fail at 0xb684 -- 0xb685
; data inside code section at 0xb685 -- 0xb688
0xb685:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0xb690 -- 0xb697
0xb690:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0xb695:     eb 09                              	jmp 0xb6a0 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv>
; data inside code section at 0xb697 -- 0xb6a0
0xb697:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv at 0xb6a0 -- 0xb6bc
0xb6a0:     56                                 	push esi
0xb6a1:     53                                 	push ebx
0xb6a2:     83 ec 24                           	sub esp, 0x24
0xb6a5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xb6a9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xb6af:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xb6b3:     31 c0                              	xor eax, eax
0xb6b5:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0xb6bc -- 0xb6bd
0xb6bc:     e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0xb6bd -- 0xb6be
; data inside code section at 0xb6be -- 0xb6c2
0xb6be:     ff ff ff 89                                        |....            |
; function: function_b6c2 at 0xb6c2 -- 0xb6c3
0xb6c2:     c3                                 	ret 
; data inside code section at 0xb6c3 -- 0xb715
0xb6c3:     c7 00 18 0e 03 00 8b 46  04 85 c0 89 43 04 74 08   |.......F....C.t.|
0xb6d3:     8b 10 89 04 24 ff 52 0c  8b 46 08 c7 03 e8 16 03   |....$.R..F......|
0xb6e3:     00 89 43 08 8b 46 0c 89  43 0c 8b 46 10 c7 43 14   |..C..F..C..F..C.|
0xb6f3:     00 17 03 00 c7 43 18 14  17 03 00 89 43 10 c7 44   |.....C......C..D|
0xb703:     24 08 90 fb 00 00 c7 44  24 04 60 17 03 00 89 1c   |$......D$.`.....|
0xb713:     24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0xb715 -- 0xb716
; data inside code section at 0xb716 -- 0xb71f
0xb716:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0xb71f -- 0xb720
; data inside code section at 0xb720 -- 0xb727
0xb720:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xb727 -- 0xb728
; data inside code section at 0xb728 -- 0xb72b
0xb728:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian16bad_day_of_monthD2Ev
; function: _ZN5boost9gregorian16bad_day_of_monthD1Ev at 0xd220 -- 0xd253
0xd220:     83 ec 1c                           	sub esp, 0x1c
0xd223:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd22a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd22e:     31 d2                              	xor edx, edx
0xd230:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd234:     c7 00 a8 0f 03 00                  	mov dword ptr [eax], 0x30fa8
0xd23a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xd23e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd245:     75 0c                              	jne 0xd253 <_ZN5boost9gregorian16bad_day_of_monthD1Ev+0x2e>
0xd247:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd24b:     83 c4 1c                           	add esp, 0x1c
0xd24e:     e9 fc ff ff ff                     	jmp 0xd24f
; data inside code section at 0xd253 -- 0xd254
0xd253:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xd254 -- 0xd255
; data inside code section at 0xd255 -- 0xd258
0xd255:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian8bad_yearD2Ev
; function: _ZN5boost9gregorian8bad_yearD1Ev at 0xd260 -- 0xd28e
0xd260:     83 ec 1c                           	sub esp, 0x1c
0xd263:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd26a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd26e:     31 d2                              	xor edx, edx
0xd270:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd274:     c7 00 68 11 03 00                  	mov dword ptr [eax], 0x31168
0xd27a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xd27e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd285:     75 0c                              	jne 0xd293 <function_d293>
0xd287:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd28b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xd28e -- 0xd28f
0xd28e:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xd28f -- 0xd290
; data inside code section at 0xd290 -- 0xd293
0xd290:     ff ff ff                                           |...             |
; function: function_d293 at 0xd293 -- 0xd294
; dynamically linked function: __stack_chk_fail at 0xd294 -- 0xd295
; data inside code section at 0xd295 -- 0xd298
0xd295:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian9bad_monthD2Ev
; function: _ZN5boost9gregorian9bad_monthD1Ev at 0xd2a0 -- 0xd2ce
0xd2a0:     83 ec 1c                           	sub esp, 0x1c
0xd2a3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd2aa:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd2ae:     31 d2                              	xor edx, edx
0xd2b0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd2b4:     c7 00 88 10 03 00                  	mov dword ptr [eax], 0x31088
0xd2ba:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xd2be:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd2c5:     75 0c                              	jne 0xd2d3 <function_d2d3>
0xd2c7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd2cb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xd2ce -- 0xd2cf
0xd2ce:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xd2cf -- 0xd2d0
; data inside code section at 0xd2d0 -- 0xd2d3
0xd2d0:     ff ff ff                                           |...             |
; function: function_d2d3 at 0xd2d3 -- 0xd2d4
; dynamically linked function: __stack_chk_fail at 0xd2d4 -- 0xd2d5
; data inside code section at 0xd2d5 -- 0xd2d8
0xd2d5:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED2Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED1Ev at 0xd2e0 -- 0xd30e
0xd2e0:     83 ec 1c                           	sub esp, 0x1c
0xd2e3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd2ea:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd2ee:     31 d2                              	xor edx, edx
0xd2f0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd2f4:     c7 00 88 15 03 00                  	mov dword ptr [eax], 0x31588
0xd2fa:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xd2fe:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd305:     75 0c                              	jne 0xd313 <function_d313>
0xd307:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd30b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xd30e -- 0xd30f
0xd30e:     e9                                                 |.               |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0xd30f -- 0xd310
; data inside code section at 0xd310 -- 0xd313
0xd310:     ff ff ff                                           |...             |
; function: function_d313 at 0xd313 -- 0xd314
; dynamically linked function: __stack_chk_fail at 0xd314 -- 0xd315
; data inside code section at 0xd315 -- 0xd318
0xd315:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED2Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED1Ev at 0xd320 -- 0xd34e
0xd320:     83 ec 1c                           	sub esp, 0x1c
0xd323:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xd32a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xd32e:     31 d2                              	xor edx, edx
0xd330:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xd334:     c7 00 90 14 03 00                  	mov dword ptr [eax], 0x31490
0xd33a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xd33e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xd345:     75 0c                              	jne 0xd353 <function_d353>
0xd347:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xd34b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xd34e -- 0xd34f
0xd34e:     e9                                                 |.               |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0xd34f -- 0xd350
; data inside code section at 0xd350 -- 0xd353
0xd350:     ff ff ff                                           |...             |
; function: function_d353 at 0xd353 -- 0xd354
; dynamically linked function: __stack_chk_fail at 0xd354 -- 0xd355
; data inside code section at 0xd355 -- 0xd358
0xd355:     ff ff ff                                           |...             |
; section: .text._Z11TraceThreadIPFvvEEvPKcT_
; function: _Z11TraceThreadIPFvvEEvPKcT_ at 0xd360 -- 0xd39e
0xd360:     83 ec 2c                           	sub esp, 0x2c
0xd363:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0xd367:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xd36b:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0xd36f:     8d 74 24 18                        	lea esi, [esp + 0x18]
0xd373:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0xd377:     8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0xd37b:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xd381:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xd385:     31 c0                              	xor eax, eax
0xd387:     89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0xd38b:     c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0xd393:     c7 44 24 04 8f 9e 00 00            	mov dword ptr [esp + 4], 0x9e8f ; "bitcoin-%s"
0xd39b:     89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0xd39e -- 0xd39f
0xd39e:     e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0xd39f -- 0xd3a0
; data inside code section at 0xd3a0 -- 0xd3ae
0xd3a0:     ff ff ff 83 ec 04 8b 44  24 18 89 04 24 e8         |.......D$...$.  |
; dynamically linked function: _Z12RenameThreadPKc at 0xd3ae -- 0xd3af
; data inside code section at 0xd3af -- 0xd3be
0xd3af:     ff ff ff 89 5c 24 04 c7  04 24 9a 9e 00 00 e8      |....\$...$..... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xd3be -- 0xd3bf
; data inside code section at 0xd3bf -- 0xd3d0
0xd3bf:     ff ff ff ff d7 89 5c 24  04 c7 04 24 ab 9e 00 00   |......\$...$....|
0xd3cf:     e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xd3d0 -- 0xd3d1
; data inside code section at 0xd3d1 -- 0xd3d4
0xd3d1:     ff ff ff                                           |...             |
; function: function_d3d4 at 0xd3d4 -- 0xd3d5
; data inside code section at 0xd3d5 -- 0xd3d8
0xd3d5:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0xd3d8 -- 0xd3d9
; data inside code section at 0xd3d9 -- 0xd3db
0xd3d9:     ff ff                                              |..              |
; function: function_d3db at 0xd3db -- 0xd40b
0xd3db:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0xd3e1:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xd3e7:     75 10                              	jne 0xd3f9 <function_d3db+0x1e>
0xd3e9:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xd3ed:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0xd3f1:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0xd3f5:     83 c4 2c                           	add esp, 0x2c
0xd3f8:     c3                                 	ret 
0xd3f9:     e8 fc ff ff ff                     	call 0xd3fa
0xd3fe:     83 fa 01                           	cmp edx, 1
0xd401:     74 5d                              	je 0xd460 <function_d460>
0xd403:     83 fa 02                           	cmp edx, 2
0xd406:     74 3a                              	je 0xd442 <function_d442>
0xd408:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd40b -- 0xd40c
0xd40b:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0xd40c -- 0xd40d
; data inside code section at 0xd40d -- 0xd41c
0xd40d:     ff ff ff 89 5c 24 04 c7  04 24 00 00 00 00 e8      |....\$...$..... |
; dynamically linked function: _Z14PrintExceptionPSt9exceptionPKc at 0xd41c -- 0xd41d
; data inside code section at 0xd41d -- 0xd421
0xd41d:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_end_catch at 0xd421 -- 0xd422
; data inside code section at 0xd422 -- 0xd425
0xd422:     ff ff ff                                           |...             |
; function: function_d425 at 0xd425 -- 0xd427
0xd425:     eb ad                              	jmp 0xd3d4 <function_d3d4>
; data inside code section at 0xd427 -- 0xd428
0xd427:     89                                                 |.               |
; function: function_d428 at 0xd428 -- 0xd429
0xd428:     c3                                 	ret 
; function: function_d429 at 0xd429 -- 0xd42a
; data inside code section at 0xd42a -- 0xd42d
0xd42a:     34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0xd42d -- 0xd42e
; data inside code section at 0xd42e -- 0xd435
0xd42e:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0xd435 -- 0xd436
; data inside code section at 0xd436 -- 0xd43a
0xd436:     ff ff ff 89                                        |....            |
; function: function_d43a at 0xd43a -- 0xd43b
0xd43a:     c3                                 	ret 
; data inside code section at 0xd43b -- 0xd43c
0xd43b:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xd43c -- 0xd43d
; data inside code section at 0xd43d -- 0xd440
0xd43d:     ff ff ff                                           |...             |
; function: function_d440 at 0xd440 -- 0xd442
0xd440:     eb e7                              	jmp 0xd429 <function_d429>
; function: function_d442 at 0xd442 -- 0xd445
0xd442:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd445 -- 0xd446
0xd445:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0xd446 -- 0xd447
; data inside code section at 0xd447 -- 0xd452
0xd447:     ff ff ff 89 5c 24 04 89  04 24 e8                  |....\$...$.     |
; dynamically linked function: _Z14PrintExceptionPSt9exceptionPKc at 0xd452 -- 0xd453
; data inside code section at 0xd453 -- 0xd456
0xd453:     ff ff ff                                           |...             |
; function: function_d456 at 0xd456 -- 0xd460
0xd456:     e8 fc ff ff ff                     	call 0xd457
0xd45b:     e9 74 ff ff ff                     	jmp 0xd3d4 <function_d3d4>
; function: function_d460 at 0xd460 -- 0xd463
0xd460:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xd463 -- 0xd464
0xd463:     e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0xd464 -- 0xd465
; data inside code section at 0xd465 -- 0xd474
0xd465:     ff ff ff 89 5c 24 04 c7  04 24 bb 9e 00 00 e8      |....\$...$..... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0xd474 -- 0xd475
; data inside code section at 0xd475 -- 0xd479
0xd475:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0xd479 -- 0xd47a
; data inside code section at 0xd47a -- 0xd47d
0xd47a:     ff ff ff                                           |...             |
; function: function_d47d at 0xd47d -- 0xd47e
; function: function_d47e at 0xd47e -- 0xd47f
0xd47e:     c3                                 	ret 
; data inside code section at 0xd47f -- 0xd480
0xd47f:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xd480 -- 0xd481
; data inside code section at 0xd481 -- 0xd484
0xd481:     ff ff ff                                           |...             |
; function: function_d484 at 0xd484 -- 0xd486
0xd484:     eb a3                              	jmp 0xd429 <function_d429>
; function: function_d486 at 0xd486 -- 0xd488
0xd486:     eb f5                              	jmp 0xd47d <function_d47d>
; section: .text.unlikely
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.25 at 0xe072 -- 0xe0a0
0xe072:     83 ec 2c                           	sub esp, 0x2c
0xe075:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe07b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe07f:     31 c0                              	xor eax, eax
0xe081:     c7 44 24 0c 80 78 02 00            	mov dword ptr [esp + 0xc], 0x27880 ; "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0xe089:     c7 44 24 08 1a 00 00 00            	mov dword ptr [esp + 8], 0x1a
0xe091:     c7 44 24 04 88 d4 00 00            	mov dword ptr [esp + 4], 0xd488 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0xe099:     c7 04 24 d0 9e 00 00               	mov dword ptr [esp], 0x9ed0 ; "!pthread_mutex_lock(m)"
; data inside code section at 0xe0a0 -- 0xe0a1
0xe0a0:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe0a1 -- 0xe0a2
; data inside code section at 0xe0a2 -- 0xe0a6
0xe0a2:     ff ff ff 90                                        |....            |
; function: _ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.26 at 0xe0a6 -- 0xe0d4
0xe0a6:     83 ec 2c                           	sub esp, 0x2c
0xe0a9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe0af:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe0b3:     31 c0                              	xor eax, eax
0xe0b5:     c7 44 24 0c 40 78 02 00            	mov dword ptr [esp + 0xc], 0x27840 ; "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0xe0bd:     c7 44 24 08 1e 00 00 00            	mov dword ptr [esp + 8], 0x1e
0xe0c5:     c7 44 24 04 88 d4 00 00            	mov dword ptr [esp + 4], 0xd488 ; "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0xe0cd:     c7 04 24 e7 9e 00 00               	mov dword ptr [esp], 0x9ee7 ; "!pthread_mutex_unlock(m)"
; data inside code section at 0xe0d4 -- 0xe0d5
0xe0d4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe0d5 -- 0xe0d6
; data inside code section at 0xe0d6 -- 0xe0da
0xe0d6:     ff ff ff 90                                        |....            |
; function: _ZN5boost5mutexD2Ev.part.27 at 0xe0da -- 0xe108
0xe0da:     83 ec 2c                           	sub esp, 0x2c
0xe0dd:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe0e3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe0e7:     31 c0                              	xor eax, eax
0xe0e9:     c7 44 24 0c 91 b8 02 00            	mov dword ptr [esp + 0xc], 0x2b891 ; "boost::mutex::~mutex()"
0xe0f1:     c7 44 24 08 2f 00 00 00            	mov dword ptr [esp + 8], 0x2f
0xe0f9:     c7 44 24 04 c8 d4 00 00            	mov dword ptr [esp + 4], 0xd4c8 ; "/usr/include/boost/thread/pthread/mutex.hpp"
0xe101:     c7 04 24 00 9f 00 00               	mov dword ptr [esp], 0x9f00 ; "!pthread_mutex_destroy(&m)"
; data inside code section at 0xe108 -- 0xe109
0xe108:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe109 -- 0xe10a
; data inside code section at 0xe10a -- 0xe10e
0xe10a:     ff ff ff 90                                        |....            |
; function: _ZN5boost5mutex6unlockEv.part.28 at 0xe10e -- 0xe13c
0xe10e:     83 ec 2c                           	sub esp, 0x2c
0xe111:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe117:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe11b:     31 c0                              	xor eax, eax
0xe11d:     c7 44 24 0c 8a 79 02 00            	mov dword ptr [esp + 0xc], 0x2798a ; "void boost::mutex::unlock()"
0xe125:     c7 44 24 08 3d 00 00 00            	mov dword ptr [esp + 8], 0x3d
0xe12d:     c7 44 24 04 c8 d4 00 00            	mov dword ptr [esp + 4], 0xd4c8 ; "/usr/include/boost/thread/pthread/mutex.hpp"
0xe135:     c7 04 24 1b 9f 00 00               	mov dword ptr [esp], 0x9f1b ; "!pthread_mutex_unlock(&m)"
; data inside code section at 0xe13c -- 0xe13d
0xe13c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe13d -- 0xe13e
; data inside code section at 0xe13e -- 0xe142
0xe13e:     ff ff ff 90                                        |....            |
; function: _ZN5boost18condition_variableD2Ev.part.29 at 0xe142 -- 0xe170
0xe142:     83 ec 2c                           	sub esp, 0x2c
0xe145:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe14b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe14f:     31 c0                              	xor eax, eax
0xe151:     c7 44 24 0c 60 b8 02 00            	mov dword ptr [esp + 0xc], 0x2b860 ; "boost::condition_variable::~condition_variable()"
0xe159:     c7 44 24 08 2e 00 00 00            	mov dword ptr [esp + 8], 0x2e
0xe161:     c7 44 24 04 f4 d4 00 00            	mov dword ptr [esp + 4], 0xd4f4 ; "/usr/include/boost/thread/pthread/condition_variable_fwd.hpp"
0xe169:     c7 04 24 34 d5 00 00               	mov dword ptr [esp], 0xd534 ; "!pthread_mutex_destroy(&internal_mutex)"
; data inside code section at 0xe170 -- 0xe171
0xe170:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe171 -- 0xe172
; data inside code section at 0xe172 -- 0xe176
0xe172:     ff ff ff 90                                        |....            |
; function: _ZN5boost18condition_variable10notify_oneEv.part.32 at 0xe176 -- 0xe1a4
0xe176:     83 ec 2c                           	sub esp, 0x2c
0xe179:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe17f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe183:     31 c0                              	xor eax, eax
0xe185:     c7 44 24 0c c0 79 02 00            	mov dword ptr [esp + 0xc], 0x279c0 ; "void boost::condition_variable::notify_one()"
0xe18d:     c7 44 24 08 4d 00 00 00            	mov dword ptr [esp + 8], 0x4d
0xe195:     c7 44 24 04 5c d5 00 00            	mov dword ptr [esp + 4], 0xd55c ; "/usr/include/boost/thread/pthread/condition_variable.hpp"
0xe19d:     c7 04 24 35 9f 00 00               	mov dword ptr [esp], 0x9f35 ; "!pthread_cond_signal(&cond)"
; data inside code section at 0xe1a4 -- 0xe1a5
0xe1a4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe1a5 -- 0xe1a6
; data inside code section at 0xe1a6 -- 0xe1aa
0xe1a6:     ff ff ff 90                                        |....            |
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev.part.33 at 0xe1aa -- 0xe1d8
0xe1aa:     83 ec 2c                           	sub esp, 0x2c
0xe1ad:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe1b3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe1b7:     31 c0                              	xor eax, eax
0xe1b9:     c7 44 24 0c 00 7a 02 00            	mov dword ptr [esp + 0xc], 0x27a00 ; "boost::recursive_mutex::~recursive_mutex()"
0xe1c1:     c7 44 24 08 5c 00 00 00            	mov dword ptr [esp + 8], 0x5c
0xe1c9:     c7 44 24 04 98 d5 00 00            	mov dword ptr [esp + 4], 0xd598 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0xe1d1:     c7 04 24 00 9f 00 00               	mov dword ptr [esp], 0x9f00 ; "!pthread_mutex_destroy(&m)"
; data inside code section at 0xe1d8 -- 0xe1d9
0xe1d8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe1d9 -- 0xe1da
; data inside code section at 0xe1da -- 0xe1de
0xe1da:     ff ff ff 90                                        |....            |
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv.part.106 at 0xe1de -- 0xe20c
0xe1de:     83 ec 2c                           	sub esp, 0x2c
0xe1e1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe1e7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe1eb:     31 c0                              	xor eax, eax
0xe1ed:     c7 44 24 0c 20 79 02 00            	mov dword ptr [esp + 0xc], 0x27920 ; "void boost::recursive_mutex::unlock()"
0xe1f5:     c7 44 24 08 93 00 00 00            	mov dword ptr [esp + 8], 0x93
0xe1fd:     c7 44 24 04 98 d5 00 00            	mov dword ptr [esp + 4], 0xd598 ; "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0xe205:     c7 04 24 35 9f 00 00               	mov dword ptr [esp], 0x9f35 ; "!pthread_cond_signal(&cond)"
; data inside code section at 0xe20c -- 0xe20d
0xe20c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe20d -- 0xe20e
; data inside code section at 0xe20e -- 0xe212
0xe20e:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.414.part.415 at 0xe212 -- 0xe240
0xe212:     83 ec 2c                           	sub esp, 0x2c
0xe215:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe21b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe21f:     31 c0                              	xor eax, eax
0xe221:     c7 44 24 0c 00 f5 02 00            	mov dword ptr [esp + 0xc], 0x2f500 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>::invocation_state]"
0xe229:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe231:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe239:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe240 -- 0xe241
0xe240:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe241 -- 0xe242
; data inside code section at 0xe242 -- 0xe246
0xe242:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEptEv.isra.455.part.456 at 0xe246 -- 0xe274
0xe246:     83 ec 2c                           	sub esp, 0x2c
0xe249:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe24f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe253:     31 c0                              	xor eax, eax
0xe255:     c7 44 24 0c 60 80 02 00            	mov dword ptr [esp + 0xc], 0x28060 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<void, int, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(int)>, boost::function<void(const boost::signals2::connection&, int)>, boost::signals2::mutex>::invocation_state]"
0xe25d:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe265:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe26d:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe274 -- 0xe275
0xe274:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe275 -- 0xe276
; data inside code section at 0xe276 -- 0xe27a
0xe276:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEptEv.isra.522.part.523 at 0xe27a -- 0xe2a8
0xe27a:     83 ec 2c                           	sub esp, 0x2c
0xe27d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe283:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe287:     31 c0                              	xor eax, eax
0xe289:     c7 44 24 0c 60 c1 02 00            	mov dword ptr [esp + 0xc], 0x2c160 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::invocation_state]"
0xe291:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe299:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe2a1:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe2a8 -- 0xe2a9
0xe2a8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe2a9 -- 0xe2aa
; data inside code section at 0xe2aa -- 0xe2ae
0xe2aa:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEptEv.isra.525.part.526 at 0xe2ae -- 0xe2dc
0xe2ae:     83 ec 2c                           	sub esp, 0x2c
0xe2b1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe2b7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe2bb:     31 c0                              	xor eax, eax
0xe2bd:     c7 44 24 0c 40 d8 02 00            	mov dword ptr [esp + 0xc], 0x2d840 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>::invocation_state]"
0xe2c5:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe2cd:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe2d5:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe2dc -- 0xe2dd
0xe2dc:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe2dd -- 0xe2de
; data inside code section at 0xe2de -- 0xe2e2
0xe2de:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.682 at 0xe2e2 -- 0xe310
0xe2e2:     83 ec 2c                           	sub esp, 0x2c
0xe2e5:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe2eb:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe2ef:     31 c0                              	xor eax, eax
0xe2f1:     c7 44 24 0c a0 f6 02 00            	mov dword ptr [esp + 0xc], 0x2f6a0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >&]"
0xe2f9:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe301:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe309:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe310 -- 0xe311
0xe310:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe311 -- 0xe312
; data inside code section at 0xe312 -- 0xe316
0xe312:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSB_EEEEENS1_5mutexEEEEptEv.isra.715.part.716 at 0xe316 -- 0xe344
0xe316:     83 ec 2c                           	sub esp, 0x2c
0xe319:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe31f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe323:     31 c0                              	xor eax, eax
0xe325:     c7 44 24 0c c0 cb 02 00            	mov dword ptr [esp + 0xc], 0x2cbc0 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>]"
0xe32d:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe335:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe33d:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe344 -- 0xe345
0xe344:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe345 -- 0xe346
; data inside code section at 0xe346 -- 0xe34a
0xe346:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSB_bEEEEENS1_5mutexEEEEptEv.isra.717.part.718 at 0xe34a -- 0xe378
0xe34a:     83 ec 2c                           	sub esp, 0x2c
0xe34d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe353:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe357:     31 c0                              	xor eax, eax
0xe359:     c7 44 24 0c 20 e3 02 00            	mov dword ptr [esp + 0xc], 0x2e320 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>]"
0xe361:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe369:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe371:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe378 -- 0xe379
0xe378:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe379 -- 0xe37a
; data inside code section at 0xe37a -- 0xe37e
0xe37a:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.745 at 0xe37e -- 0xe3ac
0xe37e:     83 ec 2c                           	sub esp, 0x2c
0xe381:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe387:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe38b:     31 c0                              	xor eax, eax
0xe38d:     c7 44 24 0c a0 81 02 00            	mov dword ptr [esp + 0xc], 0x281a0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >&]"
0xe395:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe39d:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe3a5:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe3ac -- 0xe3ad
0xe3ac:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe3ad -- 0xe3ae
; data inside code section at 0xe3ae -- 0xe3b2
0xe3ae:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.793 at 0xe3b2 -- 0xe3e0
0xe3b2:     83 ec 2c                           	sub esp, 0x2c
0xe3b5:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe3bb:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe3bf:     31 c0                              	xor eax, eax
0xe3c1:     c7 44 24 0c a0 c2 02 00            	mov dword ptr [esp + 0xc], 0x2c2a0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >&]"
0xe3c9:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe3d1:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe3d9:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe3e0 -- 0xe3e1
0xe3e0:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe3e1 -- 0xe3e2
; data inside code section at 0xe3e2 -- 0xe3e6
0xe3e2:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.797 at 0xe3e6 -- 0xe414
0xe3e6:     83 ec 2c                           	sub esp, 0x2c
0xe3e9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe3ef:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe3f3:     31 c0                              	xor eax, eax
0xe3f5:     c7 44 24 0c a0 d9 02 00            	mov dword ptr [esp + 0xc], 0x2d9a0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >&]"
0xe3fd:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe405:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe40d:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe414 -- 0xe415
0xe414:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe415 -- 0xe416
; data inside code section at 0xe416 -- 0xe41a
0xe416:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEptEv.isra.981.part.982 at 0xe41a -- 0xe448
0xe41a:     83 ec 2c                           	sub esp, 0x2c
0xe41d:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe423:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe427:     31 c0                              	xor eax, eax
0xe429:     c7 44 24 0c 00 01 03 00            	mov dword ptr [esp + 0xc], 0x30100 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>]"
0xe431:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe439:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe441:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe448 -- 0xe449
0xe448:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe449 -- 0xe44a
; data inside code section at 0xe44a -- 0xe44e
0xe44a:     ff ff ff 90                                        |....            |
; function: _ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEptEv.isra.1050.part.1051 at 0xe44e -- 0xe47c
0xe44e:     83 ec 2c                           	sub esp, 0x2c
0xe451:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe457:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe45b:     31 c0                              	xor eax, eax
0xe45d:     c7 44 24 0c a0 8a 02 00            	mov dword ptr [esp + 0xc], 0x28aa0 ; "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>]"
0xe465:     c7 44 24 08 a2 01 00 00            	mov dword ptr [esp + 8], 0x1a2
0xe46d:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe475:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe47c -- 0xe47d
0xe47c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe47d -- 0xe47e
; data inside code section at 0xe47e -- 0xe482
0xe47e:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED2Ev.part.1104 at 0xe482 -- 0xe4b0
0xe482:     83 ec 2c                           	sub esp, 0x2c
0xe485:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe48b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe48f:     31 c0                              	xor eax, eax
0xe491:     c7 44 24 0c c0 b9 02 00            	mov dword ptr [esp + 0xc], 0x2b9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>&]"
0xe499:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe4a1:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe4a9:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe4b0 -- 0xe4b1
0xe4b0:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe4b1 -- 0xe4b2
; data inside code section at 0xe4b2 -- 0xe4b6
0xe4b2:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED2Ev.part.1109 at 0xe4b6 -- 0xe4e4
0xe4b6:     83 ec 2c                           	sub esp, 0x2c
0xe4b9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe4bf:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe4c3:     31 c0                              	xor eax, eax
0xe4c5:     c7 44 24 0c 20 bc 02 00            	mov dword ptr [esp + 0xc], 0x2bc20 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>&]"
0xe4cd:     c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0xe4d5:     c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xe4dd:     c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0xe4e4 -- 0xe4e5
0xe4e4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe4e5 -- 0xe4e6
; data inside code section at 0xe4e6 -- 0xe4ea
0xe4e6:     ff ff ff 90                                        |....            |
; function: _ZN11CDataStream5writeEPKci.part.1144 at 0xe4ea -- 0xe518
0xe4ea:     83 ec 2c                           	sub esp, 0x2c
0xe4ed:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe4f3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe4f7:     31 c0                              	xor eax, eax
0xe4f9:     c7 44 24 0c 80 7a 02 00            	mov dword ptr [esp + 0xc], 0x27a80 ; "CDataStream& CDataStream::write(const char*, int)"
0xe501:     c7 44 24 08 1b 04 00 00            	mov dword ptr [esp + 8], 0x41b
0xe509:     c7 44 24 04 76 9f 00 00            	mov dword ptr [esp + 4], 0x9f76 ; "serialize.h"
0xe511:     c7 04 24 82 9f 00 00               	mov dword ptr [esp], 0x9f82 ; "nSize >= 0"
; data inside code section at 0xe518 -- 0xe519
0xe518:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe519 -- 0xe51a
; data inside code section at 0xe51a -- 0xe51e
0xe51a:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EEC2Ev.part.1391 at 0xe51e -- 0xe54c
0xe51e:     83 ec 2c                           	sub esp, 0x2c
0xe521:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe527:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe52b:     31 c0                              	xor eax, eax
0xe52d:     c7 44 24 0c 00 95 02 00            	mov dword ptr [esp + 0xc], 0x29500 ; "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0xe535:     c7 44 24 08 db 01 00 00            	mov dword ptr [esp + 8], 0x1db
0xe53d:     c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xe545:     c7 04 24 93 9f 00 00               	mov dword ptr [esp], 0x9f93 ; "is_valid()"
; data inside code section at 0xe54c -- 0xe54d
0xe54c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe54d -- 0xe54e
; data inside code section at 0xe54e -- 0xe552
0xe54e:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE.isra.1555.part.1556 at 0xe552 -- 0xe580
0xe552:     83 ec 2c                           	sub esp, 0x2c
0xe555:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe55b:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe55f:     31 c0                              	xor eax, eax
0xe561:     c7 44 24 0c c0 96 02 00            	mov dword ptr [esp + 0xc], 0x296c0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0xe569:     c7 44 24 08 fe 00 00 00            	mov dword ptr [esp + 8], 0xfe
0xe571:     c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xe579:     c7 04 24 9e 9f 00 00               	mov dword ptr [esp], 0x9f9e ; "n > 0"
; data inside code section at 0xe580 -- 0xe581
0xe580:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe581 -- 0xe582
; data inside code section at 0xe582 -- 0xe586
0xe582:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE5clearEv.part.1557 at 0xe586 -- 0xe5b4
0xe586:     83 ec 2c                           	sub esp, 0x2c
0xe589:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe58f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe593:     31 c0                              	xor eax, eax
0xe595:     c7 44 24 0c a0 99 02 00            	mov dword ptr [esp + 0xc], 0x299a0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::pop_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0xe59d:     c7 44 24 08 8a 03 00 00            	mov dword ptr [esp + 8], 0x38a
0xe5a5:     c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xe5ad:     c7 04 24 a4 9f 00 00               	mov dword ptr [esp], 0x9fa4 ; "n <= size_"
; data inside code section at 0xe5b4 -- 0xe5b5
0xe5b4:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe5b5 -- 0xe5b6
; data inside code section at 0xe5b6 -- 0xe5ba
0xe5b6:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.1559 at 0xe5ba -- 0xe5e8
0xe5ba:     83 ec 2c                           	sub esp, 0x2c
0xe5bd:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe5c3:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe5c7:     31 c0                              	xor eax, eax
0xe5c9:     c7 44 24 0c 20 ad 02 00            	mov dword ptr [esp + 0xc], 0x2ad20 ; "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0xe5d1:     c7 44 24 08 59 02 00 00            	mov dword ptr [esp + 8], 0x259
0xe5d9:     c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xe5e1:     c7 04 24 93 9f 00 00               	mov dword ptr [esp], 0x9f93 ; "is_valid()"
; data inside code section at 0xe5e8 -- 0xe5e9
0xe5e8:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe5e9 -- 0xe5ea
; data inside code section at 0xe5ea -- 0xe5ee
0xe5ea:     ff ff ff 90                                        |....            |
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.1603 at 0xe5ee -- 0xe61c
0xe5ee:     83 ec 2c                           	sub esp, 0x2c
0xe5f1:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe5f7:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe5fb:     31 c0                              	xor eax, eax
0xe5fd:     c7 44 24 0c c0 a4 02 00            	mov dword ptr [esp + 0xc], 0x2a4c0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0xe605:     c7 44 24 08 fb 02 00 00            	mov dword ptr [esp + 8], 0x2fb
0xe60d:     c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xe615:     c7 04 24 af 9f 00 00               	mov dword ptr [esp], 0x9faf ; "!full()"
; data inside code section at 0xe61c -- 0xe61d
0xe61c:     e8                                                 |.               |
; dynamically linked function: __assert_fail at 0xe61d -- 0xe61e
; data inside code section at 0xe61e -- 0xe621
0xe61e:     ff ff ff                                           |...             |
; function: _ZN5boost2CV23simple_exception_policyItLt1ELt31ENS_9gregorian16bad_day_of_monthEE8on_errorEttNS0_14violation_enumE.isra.542 at 0xe621 -- 0xe648
0xe621:     53                                 	push ebx
0xe622:     83 ec 48                           	sub esp, 0x48
0xe625:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe62b:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xe62f:     31 c0                              	xor eax, eax
0xe631:     8d 5c 24 34                        	lea ebx, [esp + 0x34]
0xe635:     8d 44 24 3b                        	lea eax, [esp + 0x3b]
0xe639:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xe63d:     c7 44 24 04 c0 d6 00 00            	mov dword ptr [esp + 4], 0xd6c0 ; "Day of month value is out of range 1..31"
0xe645:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe648 -- 0xe649
0xe648:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xe649 -- 0xe64a
; data inside code section at 0xe64a -- 0xe659
0xe64a:     ff ff ff 8d 44 24 2c 89  5c 24 04 89 04 24 e8      |....D$,.\$...$. |
; dynamically linked function: _ZNSt12out_of_rangeC2ERKSs at 0xe659 -- 0xe65a
; data inside code section at 0xe65a -- 0xe665
0xe65a:     ff ff ff 89 1c 24 8d 5c  24 2c e8                  |.....$.\$,.     |
; dynamically linked function: _ZNSsD1Ev at 0xe665 -- 0xe666
; data inside code section at 0xe666 -- 0xe681
0xe666:     ff ff ff c7 44 24 2c a8  0f 03 00 89 1c 24 e8 59   |....D$,......$.Y|
0xe676:     0b 01 00 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xe681 -- 0xe682
; data inside code section at 0xe682 -- 0xe68d
0xe682:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0xe68d -- 0xe68e
; data inside code section at 0xe68e -- 0xe697
0xe68e:     ff ff ff 89 44 24 1c 89  1c                        |....D$...       |
; function: function_e697 at 0xe697 -- 0xe69b
0xe697:     24 e8                              	and al, 0xe8
0xe699:     f5                                 	cmc 
0xe69a:     cb                                 	retf 
; data inside code section at 0xe69b -- 0xe6a5
0xe69b:     00 00 8b 44 24 1c 89 04  24 e8                     |...D$...$.      |
; dynamically linked function: _Unwind_Resume at 0xe6a5 -- 0xe6a6
; data inside code section at 0xe6a6 -- 0xe6a9
0xe6a6:     ff ff ff                                           |...             |
; function: _ZN5boost2CV23simple_exception_policyItLt1400ELt10000ENS_9gregorian8bad_yearEE8on_errorEttNS0_14violation_enumE.isra.1123 at 0xe6a9 -- 0xe6d0
0xe6a9:     53                                 	push ebx
0xe6aa:     83 ec 48                           	sub esp, 0x48
0xe6ad:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe6b3:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xe6b7:     31 c0                              	xor eax, eax
0xe6b9:     8d 5c 24 34                        	lea ebx, [esp + 0x34]
0xe6bd:     8d 44 24 3b                        	lea eax, [esp + 0x3b]
0xe6c1:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xe6c5:     c7 44 24 04 f4 d7 00 00            	mov dword ptr [esp + 4], 0xd7f4 ; "Year is out of valid range: 1400..10000"
0xe6cd:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe6d0 -- 0xe6d1
0xe6d0:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xe6d1 -- 0xe6d2
; data inside code section at 0xe6d2 -- 0xe6e1
0xe6d2:     ff ff ff 8d 44 24 2c 89  5c 24 04 89 04 24 e8      |....D$,.\$...$. |
; dynamically linked function: _ZNSt12out_of_rangeC2ERKSs at 0xe6e1 -- 0xe6e2
; data inside code section at 0xe6e2 -- 0xe6ed
0xe6e2:     ff ff ff 89 1c 24 8d 5c  24 2c e8                  |.....$.\$,.     |
; dynamically linked function: _ZNSsD1Ev at 0xe6ed -- 0xe6ee
; data inside code section at 0xe6ee -- 0xe709
0xe6ee:     ff ff ff c7 44 24 2c 68  11 03 00 89 1c 24 e8 91   |....D$,h.....$..|
0xe6fe:     82 01 00 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xe709 -- 0xe70a
; data inside code section at 0xe70a -- 0xe715
0xe70a:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0xe715 -- 0xe716
; data inside code section at 0xe716 -- 0xe71f
0xe716:     ff ff ff 89 44 24 1c 89  1c                        |....D$...       |
; function: function_e71f at 0xe71f -- 0xe723
0xe71f:     24 e8                              	and al, 0xe8
0xe721:     ad                                 	lodsd eax, dword ptr [esi]
0xe722:     cb                                 	retf 
; data inside code section at 0xe723 -- 0xe72d
0xe723:     00 00 8b 44 24 1c 89 04  24 e8                     |...D$...$.      |
; dynamically linked function: _Unwind_Resume at 0xe72d -- 0xe72e
; data inside code section at 0xe72e -- 0xe731
0xe72e:     ff ff ff                                           |...             |
; function: _ZN5boost2CV23simple_exception_policyItLt1ELt12ENS_9gregorian9bad_monthEE8on_errorEttNS0_14violation_enumE.isra.1124 at 0xe731 -- 0xe758
0xe731:     53                                 	push ebx
0xe732:     83 ec 48                           	sub esp, 0x48
0xe735:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe73b:     89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0xe73f:     31 c0                              	xor eax, eax
0xe741:     8d 5c 24 34                        	lea ebx, [esp + 0x34]
0xe745:     8d 44 24 3b                        	lea eax, [esp + 0x3b]
0xe749:     89 44 24 08                        	mov dword ptr [esp + 8], eax
0xe74d:     c7 44 24 04 1c d8 00 00            	mov dword ptr [esp + 4], 0xd81c ; "Month number is out of range 1..12"
0xe755:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe758 -- 0xe759
0xe758:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0xe759 -- 0xe75a
; data inside code section at 0xe75a -- 0xe769
0xe75a:     ff ff ff 8d 44 24 2c 89  5c 24 04 89 04 24 e8      |....D$,.\$...$. |
; dynamically linked function: _ZNSt12out_of_rangeC2ERKSs at 0xe769 -- 0xe76a
; data inside code section at 0xe76a -- 0xe775
0xe76a:     ff ff ff 89 1c 24 8d 5c  24 2c e8                  |.....$.\$,.     |
; dynamically linked function: _ZNSsD1Ev at 0xe775 -- 0xe776
; data inside code section at 0xe776 -- 0xe791
0xe776:     ff ff ff c7 44 24 2c 88  10 03 00 89 1c 24 e8 39   |....D$,......$.9|
0xe786:     84 01 00 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSsD1Ev at 0xe791 -- 0xe792
; data inside code section at 0xe792 -- 0xe79d
0xe792:     ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0xe79d -- 0xe79e
; data inside code section at 0xe79e -- 0xe7a7
0xe79e:     ff ff ff 89 44 24 1c 89  1c                        |....D$...       |
; function: function_e7a7 at 0xe7a7 -- 0xe7ab
0xe7a7:     24 e8                              	and al, 0xe8
0xe7a9:     65 cb                              	retf 
; data inside code section at 0xe7ab -- 0xe7b5
0xe7ab:     00 00 8b 44 24 1c 89 04  24 e8                     |...D$...$.      |
; dynamically linked function: _Unwind_Resume at 0xe7b5 -- 0xe7b6
; data inside code section at 0xe7b6 -- 0xe7b9
0xe7b6:     ff ff ff                                           |...             |
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEED2Ev
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev at 0xe7c0 -- 0xe7d7
0xe7c0:     53                                 	push ebx
0xe7c1:     83 ec 28                           	sub esp, 0x28
0xe7c4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe7c8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe7ce:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe7d2:     31 c0                              	xor eax, eax
0xe7d4:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe7d7 -- 0xe7d8
0xe7d7:     e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0xe7d8 -- 0xe7d9
; data inside code section at 0xe7d9 -- 0xe7db
0xe7d9:     ff ff                                              |..              |
; function: function_e7db at 0xe7db -- 0xe7e2
0xe7db:     ff 85 c0 75 21 83                  	inc dword ptr [ebp - 0x7cde8a40]
0xe7e1:     c3                                 	ret 
; data inside code section at 0xe7e2 -- 0xe7e7
0xe7e2:     18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0xe7e7 -- 0xe7e8
; data inside code section at 0xe7e8 -- 0xe7ea
0xe7e8:     ff ff                                              |..              |
; function: function_e7ea at 0xe7ea -- 0xe801
0xe7ea:     ff 85 c0 75 1c 8b                  	inc dword ptr [ebp - 0x74e38a40]
0xe7f0:     44                                 	inc esp
0xe7f1:     24 1c                              	and al, 0x1c
0xe7f3:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xe7fa:     75 0a                              	jne 0xe806 <function_e7ea+0x16>
0xe7fc:     83 c4 28                           	add esp, 0x28
0xe7ff:     5b                                 	pop ebx
0xe800:     c3                                 	ret 
; function: function_e801 at 0xe801 -- 0xe806
0xe801:     e8 64 e1 00 00                     	call 0x1c96a <function_1c96a>
; data inside code section at 0xe806 -- 0xe807
0xe806:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xe807 -- 0xe808
; data inside code section at 0xe808 -- 0xe82b
0xe808:     ff ff ff c7 44 24 0c 00  7a 02 00 c7 44 24 08 5e   |....D$..z...D$.^|
0xe818:     00 00 00 c7 44 24 04 98  d5 00 00 c7 04 24 51 9f   |....D$.......$Q.|
0xe828:     00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0xe82b -- 0xe82c
; data inside code section at 0xe82c -- 0xe82f
0xe82c:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED0Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEED0Ev at 0xe830 -- 0xe84d
0xe830:     53                                 	push ebx
0xe831:     83 ec 28                           	sub esp, 0x28
0xe834:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe838:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe83e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe842:     31 c0                              	xor eax, eax
0xe844:     c7 03 90 14 03 00                  	mov dword ptr [ebx], 0x31490
0xe84a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe84d -- 0xe84e
0xe84d:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0xe84e -- 0xe84f
; data inside code section at 0xe84f -- 0xe868
0xe84f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xe85f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xe868 -- 0xe869
; data inside code section at 0xe869 -- 0xe86d
0xe869:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xe86d -- 0xe86e
; data inside code section at 0xe86e -- 0xe871
0xe86e:     ff ff ff                                           |...             |
; section: .text._ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED0Ev
; function: _ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEED0Ev at 0xe880 -- 0xe89d
0xe880:     53                                 	push ebx
0xe881:     83 ec 28                           	sub esp, 0x28
0xe884:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe888:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe88e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe892:     31 c0                              	xor eax, eax
0xe894:     c7 03 88 15 03 00                  	mov dword ptr [ebx], 0x31588
0xe89a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe89d -- 0xe89e
0xe89d:     e8                                                 |.               |
; dynamically linked function: _ZN5boost6detail16thread_data_baseD2Ev at 0xe89e -- 0xe89f
; data inside code section at 0xe89f -- 0xe8b8
0xe89f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xe8af:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xe8b8 -- 0xe8b9
; data inside code section at 0xe8b9 -- 0xe8bd
0xe8b9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xe8bd -- 0xe8be
; data inside code section at 0xe8be -- 0xe8c1
0xe8be:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian8bad_yearD0Ev
; function: _ZN5boost9gregorian8bad_yearD0Ev at 0xe8d0 -- 0xe8ed
0xe8d0:     53                                 	push ebx
0xe8d1:     83 ec 28                           	sub esp, 0x28
0xe8d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe8d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe8de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe8e2:     31 c0                              	xor eax, eax
0xe8e4:     c7 03 68 11 03 00                  	mov dword ptr [ebx], 0x31168
0xe8ea:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe8ed -- 0xe8ee
0xe8ed:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xe8ee -- 0xe8ef
; data inside code section at 0xe8ef -- 0xe908
0xe8ef:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xe8ff:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xe908 -- 0xe909
; data inside code section at 0xe909 -- 0xe90d
0xe909:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xe90d -- 0xe90e
; data inside code section at 0xe90e -- 0xe911
0xe90e:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian9bad_monthD0Ev
; function: _ZN5boost9gregorian9bad_monthD0Ev at 0xe920 -- 0xe93d
0xe920:     53                                 	push ebx
0xe921:     83 ec 28                           	sub esp, 0x28
0xe924:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe928:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe92e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe932:     31 c0                              	xor eax, eax
0xe934:     c7 03 88 10 03 00                  	mov dword ptr [ebx], 0x31088
0xe93a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe93d -- 0xe93e
0xe93d:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xe93e -- 0xe93f
; data inside code section at 0xe93f -- 0xe958
0xe93f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xe94f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xe958 -- 0xe959
; data inside code section at 0xe959 -- 0xe95d
0xe959:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xe95d -- 0xe95e
; data inside code section at 0xe95e -- 0xe961
0xe95e:     ff ff ff                                           |...             |
; section: .text._ZN5boost9gregorian16bad_day_of_monthD0Ev
; function: _ZN5boost9gregorian16bad_day_of_monthD0Ev at 0xe970 -- 0xe98d
0xe970:     53                                 	push ebx
0xe971:     83 ec 28                           	sub esp, 0x28
0xe974:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xe978:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xe97e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xe982:     31 c0                              	xor eax, eax
0xe984:     c7 03 a8 0f 03 00                  	mov dword ptr [ebx], 0x30fa8
0xe98a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xe98d -- 0xe98e
0xe98d:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xe98e -- 0xe98f
; data inside code section at 0xe98f -- 0xe9a8
0xe98f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xe99f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xe9a8 -- 0xe9a9
; data inside code section at 0xe9a9 -- 0xe9ad
0xe9a9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xe9ad -- 0xe9ae
; data inside code section at 0xe9ae -- 0xe9b1
0xe9ae:     ff ff ff                                           |...             |
; section: .text._ZN5boost21thread_resource_errorD2Ev
; function: _ZN5boost21thread_resource_errorD1Ev at 0xe9c0 -- 0xe9ee
0xe9c0:     83 ec 1c                           	sub esp, 0x1c
0xe9c3:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xe9ca:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xe9ce:     31 d2                              	xor edx, edx
0xe9d0:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xe9d4:     c7 00 08 78 02 00                  	mov dword ptr [eax], 0x27808
0xe9da:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xe9de:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xe9e5:     75 0c                              	jne 0xe9f3 <function_e9f3>
0xe9e7:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xe9eb:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xe9ee -- 0xe9ef
0xe9ee:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xe9ef -- 0xe9f0
; data inside code section at 0xe9f0 -- 0xe9f3
0xe9f0:     ff ff ff                                           |...             |
; function: function_e9f3 at 0xe9f3 -- 0xe9f4
; dynamically linked function: __stack_chk_fail at 0xe9f4 -- 0xe9f5
; data inside code section at 0xe9f5 -- 0xe9f8
0xe9f5:     ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callD0Ev
; function: _ZN5boost17bad_function_callD0Ev at 0xea00 -- 0xea1d
0xea00:     53                                 	push ebx
0xea01:     83 ec 28                           	sub esp, 0x28
0xea04:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xea08:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xea0e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xea12:     31 c0                              	xor eax, eax
0xea14:     c7 03 38 13 03 00                  	mov dword ptr [ebx], 0x31338
0xea1a:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xea1d -- 0xea1e
0xea1d:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xea1e -- 0xea1f
; data inside code section at 0xea1f -- 0xea38
0xea1f:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xea2f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xea38 -- 0xea39
; data inside code section at 0xea39 -- 0xea3d
0xea39:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xea3d -- 0xea3e
; data inside code section at 0xea3e -- 0xea41
0xea3e:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD2Ev
; function: _ZN5boost10lock_errorD1Ev at 0xea50 -- 0xea7e
0xea50:     83 ec 1c                           	sub esp, 0x1c
0xea53:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xea5a:     89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0xea5e:     31 d2                              	xor edx, edx
0xea60:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xea64:     c7 00 08 78 02 00                  	mov dword ptr [eax], 0x27808
0xea6a:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xea6e:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xea75:     75 0c                              	jne 0xea83 <function_ea83>
0xea77:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xea7b:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xea7e -- 0xea7f
0xea7e:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xea7f -- 0xea80
; data inside code section at 0xea80 -- 0xea83
0xea80:     ff ff ff                                           |...             |
; function: function_ea83 at 0xea83 -- 0xea84
; dynamically linked function: __stack_chk_fail at 0xea84 -- 0xea85
; data inside code section at 0xea85 -- 0xea88
0xea85:     ff ff ff                                           |...             |
; section: .text._ZN5boost16thread_exceptionD0Ev
; function: _ZN5boost16thread_exceptionD0Ev at 0xea90 -- 0xeaad
0xea90:     53                                 	push ebx
0xea91:     83 ec 28                           	sub esp, 0x28
0xea94:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xea98:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xea9e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xeaa2:     31 c0                              	xor eax, eax
0xeaa4:     c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0xeaaa:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xeaad -- 0xeaae
0xeaad:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xeaae -- 0xeaaf
; data inside code section at 0xeaaf -- 0xeac8
0xeaaf:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xeabf:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xeac8 -- 0xeac9
; data inside code section at 0xeac9 -- 0xeacd
0xeac9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xeacd -- 0xeace
; data inside code section at 0xeace -- 0xead1
0xeace:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIP5CNodeSaIS1_EED2Ev
; function: _ZNSt6vectorIP5CNodeSaIS1_EED1Ev at 0xeae0 -- 0xeb0d
0xeae0:     83 ec 1c                           	sub esp, 0x1c
0xeae3:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xeae9:     89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0xeaed:     31 c0                              	xor eax, eax
0xeaef:     8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0xeaf3:     8b 00                              	mov eax, dword ptr [eax]
0xeaf5:     85 c0                              	test eax, eax
0xeaf7:     74 1f                              	je 0xeb18 <function_eb18>
0xeaf9:     8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0xeafd:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xeb04:     75 23                              	jne 0xeb29 <function_eb29>
0xeb06:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xeb0a:     83 c4 1c                           	add esp, 0x1c
; data inside code section at 0xeb0d -- 0xeb0e
0xeb0d:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xeb0e -- 0xeb0f
; data inside code section at 0xeb0f -- 0xeb18
0xeb0f:     ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_eb18 at 0xeb18 -- 0xeb29
0xeb18:     8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0xeb1c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xeb23:     75 04                              	jne 0xeb29 <function_eb29>
0xeb25:     83 c4 1c                           	add esp, 0x1c
0xeb28:     c3                                 	ret 
; function: function_eb29 at 0xeb29 -- 0xeb30
0xeb29:     8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0xeb30 -- 0xeb31
0xeb30:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeb31 -- 0xeb32
; data inside code section at 0xeb32 -- 0xeb35
0xeb32:     ff ff ff                                           |...             |
; section: .text._ZN5boost6system12system_errorD0Ev
; function: _ZN5boost6system12system_errorD0Ev at 0xeb40 -- 0xeb60
0xeb40:     53                                 	push ebx
0xeb41:     83 ec 28                           	sub esp, 0x28
0xeb44:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xeb48:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xeb4e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xeb52:     31 c0                              	xor eax, eax
0xeb54:     c7 03 f0 77 02 00                  	mov dword ptr [ebx], 0x277f0
0xeb5a:     8d 43 10                           	lea eax, [ebx + 0x10]
0xeb5d:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xeb60 -- 0xeb61
0xeb60:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xeb61 -- 0xeb62
; data inside code section at 0xeb62 -- 0xeb69
0xeb62:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xeb69 -- 0xeb6a
; data inside code section at 0xeb6a -- 0xeb83
0xeb6a:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xeb7a:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xeb83 -- 0xeb84
; data inside code section at 0xeb84 -- 0xeb88
0xeb84:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xeb88 -- 0xeb89
; data inside code section at 0xeb89 -- 0xeb8c
0xeb89:     ff ff ff                                           |...             |
; section: .text._ZN5boost21thread_resource_errorD0Ev
; function: _ZN5boost21thread_resource_errorD0Ev at 0xeb90 -- 0xebad
0xeb90:     53                                 	push ebx
0xeb91:     83 ec 28                           	sub esp, 0x28
0xeb94:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xeb98:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xeb9e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xeba2:     31 c0                              	xor eax, eax
0xeba4:     c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0xebaa:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xebad -- 0xebae
0xebad:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xebae -- 0xebaf
; data inside code section at 0xebaf -- 0xebc8
0xebaf:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xebbf:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xebc8 -- 0xebc9
; data inside code section at 0xebc9 -- 0xebcd
0xebc9:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xebcd -- 0xebce
; data inside code section at 0xebce -- 0xebd1
0xebce:     ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_errorD0Ev
; function: _ZN5boost10lock_errorD0Ev at 0xebe0 -- 0xebfd
0xebe0:     53                                 	push ebx
0xebe1:     83 ec 28                           	sub esp, 0x28
0xebe4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xebe8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xebee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xebf2:     31 c0                              	xor eax, eax
0xebf4:     c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0xebfa:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xebfd -- 0xebfe
0xebfd:     e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xebfe -- 0xebff
; data inside code section at 0xebff -- 0xec18
0xebff:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xec0f:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xec18 -- 0xec19
; data inside code section at 0xec19 -- 0xec1d
0xec19:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xec1d -- 0xec1e
; data inside code section at 0xec1e -- 0xec21
0xec1e:     ff ff ff                                           |...             |
; section: .text._ZNSt6vectorISsSaISsEED2Ev
; function: _ZNSt6vectorISsSaISsEED1Ev at 0xec30 -- 0xec56
0xec30:     57                                 	push edi
0xec31:     56                                 	push esi
0xec32:     53                                 	push ebx
0xec33:     83 ec 20                           	sub esp, 0x20
0xec36:     8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0xec3a:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xec40:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xec44:     31 c0                              	xor eax, eax
0xec46:     8b 77 04                           	mov esi, dword ptr [edi + 4]
0xec49:     8b 1f                              	mov ebx, dword ptr [edi]
0xec4b:     39 de                              	cmp esi, ebx
0xec4d:     74 12                              	je 0xec61 <function_ec61>
0xec4f:     90                                 	nop 
0xec50:     89 1c 24                           	mov dword ptr [esp], ebx
0xec53:     83 c3 04                           	add ebx, 4
; data inside code section at 0xec56 -- 0xec57
0xec56:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xec57 -- 0xec58
; data inside code section at 0xec58 -- 0xec61
0xec58:     ff ff ff 39 de 75 f1 8b  1f                        |...9.u...       |
; function: function_ec61 at 0xec61 -- 0xec7c
0xec61:     85 db                              	test ebx, ebx
0xec63:     74 23                              	je 0xec88 <function_ec88>
0xec65:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xec69:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xec70:     75 2a                              	jne 0xec9c <function_ec9c>
0xec72:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xec76:     83 c4 20                           	add esp, 0x20
0xec79:     5b                                 	pop ebx
0xec7a:     5e                                 	pop esi
0xec7b:     5f                                 	pop edi
; data inside code section at 0xec7c -- 0xec7d
0xec7c:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xec7d -- 0xec7e
; data inside code section at 0xec7e -- 0xec88
0xec7e:     ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_ec88 at 0xec88 -- 0xec9c
0xec88:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xec8c:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xec93:     75 07                              	jne 0xec9c <function_ec9c>
0xec95:     83 c4 20                           	add esp, 0x20
0xec98:     5b                                 	pop ebx
0xec99:     5e                                 	pop esi
0xec9a:     5f                                 	pop edi
0xec9b:     c3                                 	ret 
; function: function_ec9c at 0xec9c -- 0xec9d
; dynamically linked function: __stack_chk_fail at 0xec9d -- 0xec9e
; data inside code section at 0xec9e -- 0xeca1
0xec9e:     ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISsSaISsEED2Ev
; function: _ZNSt5dequeISsSaISsEED1Ev at 0xecb0 -- 0xed26
0xecb0:     55                                 	push ebp
0xecb1:     57                                 	push edi
0xecb2:     56                                 	push esi
0xecb3:     53                                 	push ebx
0xecb4:     83 ec 4c                           	sub esp, 0x4c
0xecb7:     8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0xecbb:     65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0xecc2:     89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0xecc6:     31 d2                              	xor edx, edx
0xecc8:     89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0xeccc:     8b 40 18                           	mov eax, dword ptr [eax + 0x18]
0xeccf:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xecd3:     89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0xecd7:     8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0xecdb:     8b 52 1c                           	mov edx, dword ptr [edx + 0x1c]
0xecde:     8b 40 24                           	mov eax, dword ptr [eax + 0x24]
0xece1:     89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0xece5:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xece9:     89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0xeced:     8b 6a 08                           	mov ebp, dword ptr [edx + 8]
0xecf0:     8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0xecf3:     8b 52 14                           	mov edx, dword ptr [edx + 0x14]
0xecf6:     89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0xecfa:     89 d7                              	mov edi, edx
0xecfc:     83 c7 04                           	add edi, 4
0xecff:     39 7c 24 18                        	cmp dword ptr [esp + 0x18], edi
0xed03:     89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0xed07:     76 31                              	jbe 0xed3a <function_ed3a>
0xed09:     89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0xed0d:     8b 6c 24 18                        	mov ebp, dword ptr [esp + 0x18]
0xed11:     8d b4 26 00 00 00 00               	lea esi, [esi]
0xed18:     8b 1f                              	mov ebx, dword ptr [edi]
0xed1a:     8d b3 00 02 00 00                  	lea esi, [ebx + 0x200]
0xed20:     89 1c 24                           	mov dword ptr [esp], ebx
0xed23:     83 c3 04                           	add ebx, 4
; data inside code section at 0xed26 -- 0xed27
0xed26:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xed27 -- 0xed28
; data inside code section at 0xed28 -- 0xed3a
0xed28:     ff ff ff 39 f3 75 f1 83  c7 04 39 fd 77 e2 8b 6c   |...9.u....9.w..l|
0xed38:     24 2c                                              |$,              |
; function: function_ed3a at 0xed3a -- 0xed5e
0xed3a:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xed3e:     39 44 24 18                        	cmp dword ptr [esp + 0x18], eax
0xed42:     0f 84 8c 00 00 00                  	je 0xedd4 <function_edd4>
0xed48:     3b 6c 24 24                        	cmp ebp, dword ptr [esp + 0x24]
0xed4c:     74 19                              	je 0xed67 <function_ed67>
0xed4e:     8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0xed52:     8d b6 00 00 00 00                  	lea esi, [esi]
0xed58:     89 2c 24                           	mov dword ptr [esp], ebp
0xed5b:     83 c5 04                           	add ebp, 4
; data inside code section at 0xed5e -- 0xed5f
0xed5e:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xed5f -- 0xed60
; data inside code section at 0xed60 -- 0xed64
0xed60:     ff ff ff 39                                        |...9            |
; function: function_ed64 at 0xed64 -- 0xed66
0xed64:     eb 75                              	jmp 0xeddb
; data inside code section at 0xed66 -- 0xed67
0xed66:     f1                                                 |.               |
; function: function_ed67 at 0xed67 -- 0xed7e
0xed67:     8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0xed6b:     39 54 24 20                        	cmp dword ptr [esp + 0x20], edx
0xed6f:     74 16                              	je 0xed87 <function_ed87>
0xed71:     8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0xed75:     89 d3                              	mov ebx, edx
0xed77:     90                                 	nop 
0xed78:     89 1c 24                           	mov dword ptr [esp], ebx
0xed7b:     83 c3 04                           	add ebx, 4
; data inside code section at 0xed7e -- 0xed7f
0xed7e:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xed7f -- 0xed80
; data inside code section at 0xed80 -- 0xed87
0xed80:     ff ff ff 39 de 75 f1                               |...9.u.         |
; function: function_ed87 at 0xed87 -- 0xeda8
0xed87:     8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0xed8b:     8b 02                              	mov eax, dword ptr [edx]
0xed8d:     85 c0                              	test eax, eax
0xed8f:     74 68                              	je 0xedf9 <function_edf9>
0xed91:     8b 72 24                           	mov esi, dword ptr [edx + 0x24]
0xed94:     8b 5a 14                           	mov ebx, dword ptr [edx + 0x14]
0xed97:     83 c6 04                           	add esi, 4
0xed9a:     39 de                              	cmp esi, ebx
0xed9c:     76 19                              	jbe 0xedb7 <function_edb7>
0xed9e:     66 90                              	nop 
0xeda0:     8b 03                              	mov eax, dword ptr [ebx]
0xeda2:     83 c3 04                           	add ebx, 4
0xeda5:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xeda8 -- 0xeda9
0xeda8:     e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0xeda9 -- 0xedaa
; data inside code section at 0xedaa -- 0xedb7
0xedaa:     ff ff ff 39 de 77 ef 8b  54 24 14 8b 02            |...9.w..T$...   |
; function: function_edb7 at 0xedb7 -- 0xedcf
0xedb7:     8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0xedbb:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xedc2:     75 4a                              	jne 0xee0e <function_ee0e>
0xedc4:     89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0xedc8:     83 c4 4c                           	add esp, 0x4c
0xedcb:     5b                                 	pop ebx
0xedcc:     5e                                 	pop esi
0xedcd:     5f                                 	pop edi
0xedce:     5d                                 	pop ebp
; data inside code section at 0xedcf -- 0xedd0
0xedcf:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xedd0 -- 0xedd1
; data inside code section at 0xedd1 -- 0xedd4
0xedd1:     ff ff ff                                           |...             |
; function: function_edd4 at 0xedd4 -- 0xede6
0xedd4:     39 6c 24 20                        	cmp dword ptr [esp + 0x20], ebp
0xedd8:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xeddc:     74 a9                              	je 0xed87 <function_ed87>
0xedde:     66 90                              	nop 
0xede0:     89 2c 24                           	mov dword ptr [esp], ebp
0xede3:     83 c5 04                           	add ebp, 4
; data inside code section at 0xede6 -- 0xede7
0xede6:     e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0xede7 -- 0xede8
; data inside code section at 0xede8 -- 0xedec
0xede8:     ff ff ff 39                                        |...9            |
; function: function_edec at 0xedec -- 0xedee
0xedec:     eb 75                              	jmp 0xee63 <function_ee63>
; data inside code section at 0xedee -- 0xedf9
0xedee:     f1 8b 54 24 14 8b 02 85  c0 75 98                  |..T$.....u.     |
; function: function_edf9 at 0xedf9 -- 0xee0e
0xedf9:     8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0xedfd:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xee04:     75 08                              	jne 0xee0e <function_ee0e>
0xee06:     83 c4 4c                           	add esp, 0x4c
0xee09:     5b                                 	pop ebx
0xee0a:     5e                                 	pop esi
0xee0b:     5f                                 	pop edi
0xee0c:     5d                                 	pop ebp
0xee0d:     c3                                 	ret 
; function: function_ee0e at 0xee0e -- 0xee0f
; dynamically linked function: __stack_chk_fail at 0xee0f -- 0xee10
; data inside code section at 0xee10 -- 0xee13
0xee10:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv
; function: _ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0xee20 -- 0xee27
0xee20:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0xee25:     eb 09                              	jmp 0xee30 <_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv>
; data inside code section at 0xee27 -- 0xee30
0xee27:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv at 0xee30 -- 0xee4c
0xee30:     56                                 	push esi
0xee31:     53                                 	push ebx
0xee32:     83 ec 24                           	sub esp, 0x24
0xee35:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xee39:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xee3f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xee43:     31 c0                              	xor eax, eax
0xee45:     c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0xee4c -- 0xee4d
0xee4c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xee4d -- 0xee4e
; data inside code section at 0xee4e -- 0xee52
0xee4e:     ff ff ff 89                                        |....            |
; function: function_ee52 at 0xee52 -- 0xee53
0xee52:     c3                                 	ret 
; data inside code section at 0xee53 -- 0xee63
0xee53:     c7 00 18 0e 03 00 8b 46  04 85 c0 89 43 04 74 08   |.......F....C.t.|
; function: function_ee63 at 0xee63 -- 0xeea7
0xee63:     8b 10                              	mov edx, dword ptr [eax]
0xee65:     89 04 24                           	mov dword ptr [esp], eax
0xee68:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xee6b:     8b 46 08                           	mov eax, dword ptr [esi + 8]
0xee6e:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xee72:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xee79:     c7 03 e8 16 03 00                  	mov dword ptr [ebx], 0x316e8
0xee7f:     89 43 08                           	mov dword ptr [ebx + 8], eax
0xee82:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xee85:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xee88:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xee8b:     c7 43 14 00 17 03 00               	mov dword ptr [ebx + 0x14], 0x31700
0xee92:     c7 43 18 14 17 03 00               	mov dword ptr [ebx + 0x18], 0x31714
0xee99:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xee9c:     8d 43 18                           	lea eax, [ebx + 0x18]
0xee9f:     75 06                              	jne 0xeea7 <function_ee63+0x43>
0xeea1:     83 c4 24                           	add esp, 0x24
0xeea4:     5b                                 	pop ebx
0xeea5:     5e                                 	pop esi
0xeea6:     c3                                 	ret 
; data inside code section at 0xeea7 -- 0xeea8
0xeea7:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xeea8 -- 0xeea9
; data inside code section at 0xeea9 -- 0xeeb2
0xeea9:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0xeeb2 -- 0xeeb3
; data inside code section at 0xeeb3 -- 0xeeba
0xeeb3:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xeeba -- 0xeebb
; data inside code section at 0xeebb -- 0xeebe
0xeebb:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0xeec0 -- 0xeec7
0xeec0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xeec5:     eb 09                              	jmp 0xeed0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv>
; data inside code section at 0xeec7 -- 0xeed0
0xeec7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv at 0xeed0 -- 0xeeec
0xeed0:     56                                 	push esi
0xeed1:     53                                 	push ebx
0xeed2:     83 ec 24                           	sub esp, 0x24
0xeed5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xeed9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xeedf:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xeee3:     31 c0                              	xor eax, eax
0xeee5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xeeec -- 0xeeed
0xeeec:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xeeed -- 0xeeee
; data inside code section at 0xeeee -- 0xeef0
0xeeee:     ff ff                                              |..              |
; function: function_eef0 at 0xeef0 -- 0xef54
0xeef0:     ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0xeef6:     c7 03 20 78 02 00                  	mov dword ptr [ebx], 0x27820
0xeefc:     c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0xef03:     89 43 04                           	mov dword ptr [ebx + 4], eax
0xef06:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xef09:     85 c0                              	test eax, eax
0xef0b:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xef0e:     74 08                              	je 0xef18 <function_eef0+0x28>
0xef10:     8b 10                              	mov edx, dword ptr [eax]
0xef12:     89 04 24                           	mov dword ptr [esp], eax
0xef15:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xef18:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xef1b:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xef1f:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xef26:     c7 43 08 84 0e 03 00               	mov dword ptr [ebx + 8], 0x30e84
0xef2d:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xef30:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xef33:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xef36:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xef39:     c7 03 68 0e 03 00                  	mov dword ptr [ebx], 0x30e68
0xef3f:     c7 43 1c 94 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e94
0xef46:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xef49:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xef4c:     75 06                              	jne 0xef54 <function_eef0+0x63>
0xef4e:     83 c4 24                           	add esp, 0x24
0xef51:     5b                                 	pop ebx
0xef52:     5e                                 	pop esi
0xef53:     c3                                 	ret 
; data inside code section at 0xef54 -- 0xef55
0xef54:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xef55 -- 0xef56
; data inside code section at 0xef56 -- 0xef5d
0xef56:     ff ff ff 89 c6 89 1c                               |.......         |
; function: function_ef5d at 0xef5d -- 0xef65
0xef5d:     24 e8                              	and al, 0xe8
0xef5f:     ad                                 	lodsd eax, dword ptr [esi]
0xef60:     e9 00 00 89 1c                     	jmp 0x1c89ef65 <function_1c89ef65>
; data inside code section at 0xef65 -- 0xef67
0xef65:     24 e8                                              |$.              |
; dynamically linked function: _ZdlPv at 0xef67 -- 0xef68
; data inside code section at 0xef68 -- 0xef6f
0xef68:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xef6f -- 0xef70
; data inside code section at 0xef70 -- 0xef73
0xef70:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0xef80 -- 0xef87
0xef80:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xef85:     eb 09                              	jmp 0xef90 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv>
; data inside code section at 0xef87 -- 0xef90
0xef87:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv at 0xef90 -- 0xefac
0xef90:     56                                 	push esi
0xef91:     53                                 	push ebx
0xef92:     83 ec 24                           	sub esp, 0x24
0xef95:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xef99:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xef9f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xefa3:     31 c0                              	xor eax, eax
0xefa5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xefac -- 0xefad
0xefac:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xefad -- 0xefae
; data inside code section at 0xefae -- 0xefb0
0xefae:     ff ff                                              |..              |
; function: function_efb0 at 0xefb0 -- 0xf014
0xefb0:     ff 89 c3 8b 46 04                  	dec dword ptr [ecx + 0x4468bc3]
0xefb6:     c7 03 48 12 03 00                  	mov dword ptr [ebx], 0x31248
0xefbc:     c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0xefc3:     89 43 04                           	mov dword ptr [ebx + 4], eax
0xefc6:     8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0xefc9:     85 c0                              	test eax, eax
0xefcb:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xefce:     74 08                              	je 0xefd8 <function_efb0+0x28>
0xefd0:     8b 10                              	mov edx, dword ptr [eax]
0xefd2:     89 04 24                           	mov dword ptr [esp], eax
0xefd5:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xefd8:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xefdb:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xefdf:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xefe6:     c7 43 08 c4 12 03 00               	mov dword ptr [ebx + 8], 0x312c4
0xefed:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xeff0:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xeff3:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xeff6:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xeff9:     c7 03 a8 12 03 00                  	mov dword ptr [ebx], 0x312a8
0xefff:     c7 43 1c d4 12 03 00               	mov dword ptr [ebx + 0x1c], 0x312d4
0xf006:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf009:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf00c:     75 06                              	jne 0xf014 <function_efb0+0x63>
0xf00e:     83 c4 24                           	add esp, 0x24
0xf011:     5b                                 	pop ebx
0xf012:     5e                                 	pop esi
0xf013:     c3                                 	ret 
; data inside code section at 0xf014 -- 0xf015
0xf014:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf015 -- 0xf016
; data inside code section at 0xf016 -- 0xf020
0xf016:     ff ff ff 89 c6 89 1c 24  e8 1d                     |.......$..      |
; function: function_f020 at 0xf020 -- 0xf025
0xf020:     e9 00 00 89 1c                     	jmp 0x1c89f025 <function_1c89f025>
; data inside code section at 0xf025 -- 0xf027
0xf025:     24 e8                                              |$.              |
; dynamically linked function: _ZdlPv at 0xf027 -- 0xf028
; data inside code section at 0xf028 -- 0xf02f
0xf028:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf02f -- 0xf030
; data inside code section at 0xf030 -- 0xf033
0xf030:     ff ff ff                                           |...             |
; section: .text._ZNK5boost6system12system_error4whatEv
; function: _ZNK5boost6system12system_error4whatEv at 0xf040 -- 0xf096
0xf040:     83 ec 2c                           	sub esp, 0x2c
0xf043:     89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0xf047:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf04b:     89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0xf04f:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf055:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf059:     31 c0                              	xor eax, eax
0xf05b:     89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0xf05f:     8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0xf062:     8b 53 f4                           	mov edx, dword ptr [ebx - 0xc]
0xf065:     85 d2                              	test edx, edx
0xf067:     74 27                              	je 0xf090 <_ZNK5boost6system12system_error4whatEv+0x50>
0xf069:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf06d:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf074:     89 d8                              	mov eax, ebx
0xf076:     0f 85 96 00 00 00                  	jne 0xf112 <function_f112>
0xf07c:     8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0xf080:     8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0xf084:     8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0xf088:     83 c4 2c                           	add esp, 0x2c
0xf08b:     c3                                 	ret 
; data inside code section at 0xf08c -- 0xf090
0xf08c:     8d 74 26 00                                        |.t&.            |
0xf090:     89 34 24                           	mov dword ptr [esp], esi
0xf093:     8d 7e 10                           	lea edi, [esi + 0x10]
; data inside code section at 0xf096 -- 0xf097
0xf096:     e8                                                 |.               |
; dynamically linked function: _ZNKSt13runtime_error4whatEv at 0xf097 -- 0xf098
; data inside code section at 0xf098 -- 0xf09d
0xf098:     ff ff ff 89 04                                     |.....           |
; function: function_f09d at 0xf09d -- 0xf0a0
0xf09d:     24 89                              	and al, 0x89
0xf09f:     c3                                 	ret 
; data inside code section at 0xf0a0 -- 0xf0a1
0xf0a0:     e8                                                 |.               |
; dynamically linked function: strlen at 0xf0a1 -- 0xf0a2
; data inside code section at 0xf0a2 -- 0xf0b1
0xf0a2:     ff ff ff 89 5c 24 04 89  3c 24 89 44 24 08 e8      |....\$..<$.D$.. |
; dynamically linked function: _ZNSs6assignEPKcj at 0xf0b1 -- 0xf0b2
; data inside code section at 0xf0b2 -- 0xf0bf
0xf0b2:     ff ff ff 8b 46 10 8b 40  f4 85 c0 75 39            |....F..@...u9   |
; function: function_f0bf at 0xf0bf -- 0xf0c0
; data inside code section at 0xf0c0 -- 0xf0e4
0xf0c0:     46 0c 8d 5c 24 18 8b 4e  08 8b 10 89 4c 24 08 89   |F..\$..N....L$..|
0xf0d0:     44 24 04 89 1c 24 ff 52  0c 83 ec 04 89 5c 24 04   |D$...$.R.....\$.|
0xf0e0:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendERKSs at 0xf0e4 -- 0xf0e5
; data inside code section at 0xf0e5 -- 0xf0ec
0xf0e5:     ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0xf0ec -- 0xf0ed
; data inside code section at 0xf0ed -- 0xf0f0
0xf0ed:     ff ff ff                                           |...             |
; function: function_f0f0 at 0xf0f0 -- 0xf0f8
0xf0f0:     8b 5e 10                           	mov ebx, dword ptr [esi + 0x10]
0xf0f3:     e9 71 ff ff ff                     	jmp 0xf069
; data inside code section at 0xf0f8 -- 0xf10c
0xf0f8:     c7 44 24 08 02 00 00 00  c7 44 24 04 ce 9f 00 00   |.D$......D$.....|
0xf108:     89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZNSs6appendEPKcj at 0xf10c -- 0xf10d
; data inside code section at 0xf10d -- 0xf110
0xf10d:     ff ff ff                                           |...             |
; function: function_f110 at 0xf110 -- 0xf112
0xf110:     eb ad                              	jmp 0xf0bf <function_f0bf>
; function: function_f112 at 0xf112 -- 0xf113
; dynamically linked function: __stack_chk_fail at 0xf113 -- 0xf114
; data inside code section at 0xf114 -- 0xf11d
0xf114:     ff ff ff 89 c7 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0xf11d -- 0xf11e
; data inside code section at 0xf11e -- 0xf123
0xf11e:     ff ff ff 89 f8                                     |.....           |
; function: function_f123 at 0xf123 -- 0xf124
; data inside code section at 0xf124 -- 0xf127
0xf124:     04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0xf127 -- 0xf128
; data inside code section at 0xf128 -- 0xf134
0xf128:     ff ff ff 89 34 24 e8 fc  ff ff ff 89               |....4$......    |
; function: function_f134 at 0xf134 -- 0xf135
0xf134:     c3                                 	ret 
; data inside code section at 0xf135 -- 0xf136
0xf135:     e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0xf136 -- 0xf137
; data inside code section at 0xf137 -- 0xf13a
0xf137:     ff ff ff                                           |...             |
; function: function_f13a at 0xf13a -- 0xf13f
0xf13a:     e9 2a ff ff ff                     	jmp 0xf069
; data inside code section at 0xf13f -- 0xf140
0xf13f:     90                                                 |.               |
; function: function_f140 at 0xf140 -- 0xf142
0xf140:     eb e1                              	jmp 0xf123 <function_f123>
; data inside code section at 0xf142 -- 0xf143
0xf142:     83                                                 |.               |
; function: function_f143 at 0xf143 -- 0xf146
0xf143:     c2 01 89                           	ret 0x8901
; data inside code section at 0xf146 -- 0xf14b
0xf146:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0xf14b -- 0xf14c
; data inside code section at 0xf14c -- 0xf150
0xf14c:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0xf150 -- 0xf151
; data inside code section at 0xf151 -- 0xf154
0xf151:     ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv at 0xf160 -- 0xf167
0xf160:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xf165:     eb 09                              	jmp 0xf170 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv>
; data inside code section at 0xf167 -- 0xf170
0xf167:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE5cloneEv at 0xf170 -- 0xf18c
0xf170:     56                                 	push esi
0xf171:     53                                 	push ebx
0xf172:     83 ec 24                           	sub esp, 0x24
0xf175:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf179:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf17f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf183:     31 c0                              	xor eax, eax
0xf185:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf18c -- 0xf18d
0xf18c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf18d -- 0xf18e
; data inside code section at 0xf18e -- 0xf193
0xf18e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt13runtime_error at 0xf193 -- 0xf1a6
; data inside code section at 0xf1a6 -- 0xf1a7
0xf1a6:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xf1a7 -- 0xf1a8
; data inside code section at 0xf1a8 -- 0xf1aa
0xf1a8:     ff ff                                              |..              |
; function: function_f1aa at 0xf1aa -- 0xf200
0xf1aa:     ff 8b 46 0c c7 43                  	dec dword ptr [ebx + 0x43c70c46]
0xf1b0:     08 18                              	or byte ptr [eax], bl
0xf1b2:     0e                                 	push cs
0xf1b3:     03 00                              	add eax, dword ptr [eax]
0xf1b5:     85 c0                              	test eax, eax
0xf1b7:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xf1ba:     74 08                              	je 0xf1c4 <function_f1aa+0x1a>
0xf1bc:     8b 10                              	mov edx, dword ptr [eax]
0xf1be:     89 04 24                           	mov dword ptr [esp], eax
0xf1c1:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xf1c4:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xf1c7:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf1cb:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf1d2:     c7 43 08 44 0f 03 00               	mov dword ptr [ebx + 8], 0x30f44
0xf1d9:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xf1dc:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xf1df:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xf1e2:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf1e5:     c7 03 28 0f 03 00                  	mov dword ptr [ebx], 0x30f28
0xf1eb:     c7 43 1c 54 0f 03 00               	mov dword ptr [ebx + 0x1c], 0x30f54
0xf1f2:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf1f5:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf1f8:     75 06                              	jne 0xf200 <function_f1aa+0x55>
0xf1fa:     83 c4 24                           	add esp, 0x24
0xf1fd:     5b                                 	pop ebx
0xf1fe:     5e                                 	pop esi
0xf1ff:     c3                                 	ret 
; data inside code section at 0xf200 -- 0xf201
0xf200:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf201 -- 0xf202
; data inside code section at 0xf202 -- 0xf20b
0xf202:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xf20b -- 0xf20c
; data inside code section at 0xf20c -- 0xf20f
0xf20c:     ff ff ff                                           |...             |
; function: function_f20f at 0xf20f -- 0xf210
; data inside code section at 0xf210 -- 0xf213
0xf210:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xf213 -- 0xf214
; data inside code section at 0xf214 -- 0xf21b
0xf214:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf21b -- 0xf21c
; data inside code section at 0xf21c -- 0xf225
0xf21c:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf225 -- 0xf226
; data inside code section at 0xf226 -- 0xf229
0xf226:     ff ff ff                                           |...             |
; function: function_f229 at 0xf229 -- 0xf22b
0xf229:     eb e4                              	jmp 0xf20f <function_f20f>
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0xf230 -- 0xf237
0xf230:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xf235:     eb 09                              	jmp 0xf240 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv>
; data inside code section at 0xf237 -- 0xf240
0xf237:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv at 0xf240 -- 0xf25c
0xf240:     56                                 	push esi
0xf241:     53                                 	push ebx
0xf242:     83 ec 24                           	sub esp, 0x24
0xf245:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf249:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf24f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf253:     31 c0                              	xor eax, eax
0xf255:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf25c -- 0xf25d
0xf25c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf25d -- 0xf25e
; data inside code section at 0xf25e -- 0xf263
0xf25e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt13runtime_error at 0xf263 -- 0xf276
; data inside code section at 0xf276 -- 0xf277
0xf276:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xf277 -- 0xf278
; data inside code section at 0xf278 -- 0xf27a
0xf278:     ff ff                                              |..              |
; function: function_f27a at 0xf27a -- 0xf2d6
0xf27a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0xf280:     38 13                              	cmp byte ptr [ebx], dl
0xf282:     03 00                              	add eax, dword ptr [eax]
0xf284:     c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0xf28b:     85 c0                              	test eax, eax
0xf28d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xf290:     74 08                              	je 0xf29a <function_f27a+0x20>
0xf292:     8b 10                              	mov edx, dword ptr [eax]
0xf294:     89 04 24                           	mov dword ptr [esp], eax
0xf297:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xf29a:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xf29d:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf2a1:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf2a8:     c7 43 08 c4 13 03 00               	mov dword ptr [ebx + 8], 0x313c4
0xf2af:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xf2b2:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xf2b5:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xf2b8:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf2bb:     c7 03 a8 13 03 00                  	mov dword ptr [ebx], 0x313a8
0xf2c1:     c7 43 1c d4 13 03 00               	mov dword ptr [ebx + 0x1c], 0x313d4
0xf2c8:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf2cb:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf2ce:     75 06                              	jne 0xf2d6 <function_f27a+0x5b>
0xf2d0:     83 c4 24                           	add esp, 0x24
0xf2d3:     5b                                 	pop ebx
0xf2d4:     5e                                 	pop esi
0xf2d5:     c3                                 	ret 
; data inside code section at 0xf2d6 -- 0xf2d7
0xf2d6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf2d7 -- 0xf2d8
; data inside code section at 0xf2d8 -- 0xf2e5
0xf2d8:     ff ff ff 89 c6 89 1c 24  e8 0b b5 00 00            |.......$.....   |
; function: function_f2e5 at 0xf2e5 -- 0xf2e6
; data inside code section at 0xf2e6 -- 0xf2e9
0xf2e6:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xf2e9 -- 0xf2ea
; data inside code section at 0xf2ea -- 0xf2f1
0xf2ea:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf2f1 -- 0xf2f2
; data inside code section at 0xf2f2 -- 0xf2fb
0xf2f2:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf2fb -- 0xf2fc
; data inside code section at 0xf2fc -- 0xf2ff
0xf2fc:     ff ff ff                                           |...             |
; function: function_f2ff at 0xf2ff -- 0xf301
0xf2ff:     eb e4                              	jmp 0xf2e5 <function_f2e5>
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv at 0xf310 -- 0xf317
0xf310:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xf315:     eb 09                              	jmp 0xf320 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv>
; data inside code section at 0xf317 -- 0xf320
0xf317:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE5cloneEv at 0xf320 -- 0xf33c
0xf320:     56                                 	push esi
0xf321:     53                                 	push ebx
0xf322:     83 ec 24                           	sub esp, 0x24
0xf325:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf329:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf32f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf333:     31 c0                              	xor eax, eax
0xf335:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf33c -- 0xf33d
0xf33c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf33d -- 0xf33e
; data inside code section at 0xf33e -- 0xf343
0xf33e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt11logic_error at 0xf343 -- 0xf356
; data inside code section at 0xf356 -- 0xf357
0xf356:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xf357 -- 0xf358
; data inside code section at 0xf358 -- 0xf35a
0xf358:     ff ff                                              |..              |
; function: function_f35a at 0xf35a -- 0xf3b6
0xf35a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0xf360:     88 10                              	mov byte ptr [eax], dl
0xf362:     03 00                              	add eax, dword ptr [eax]
0xf364:     c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0xf36b:     85 c0                              	test eax, eax
0xf36d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xf370:     74 08                              	je 0xf37a <function_f35a+0x20>
0xf372:     8b 10                              	mov edx, dword ptr [eax]
0xf374:     89 04 24                           	mov dword ptr [esp], eax
0xf377:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xf37a:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xf37d:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf381:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf388:     c7 43 08 04 11 03 00               	mov dword ptr [ebx + 8], 0x31104
0xf38f:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xf392:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xf395:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xf398:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf39b:     c7 03 e8 10 03 00                  	mov dword ptr [ebx], 0x310e8
0xf3a1:     c7 43 1c 14 11 03 00               	mov dword ptr [ebx + 0x1c], 0x31114
0xf3a8:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf3ab:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf3ae:     75 06                              	jne 0xf3b6 <function_f35a+0x5b>
0xf3b0:     83 c4 24                           	add esp, 0x24
0xf3b3:     5b                                 	pop ebx
0xf3b4:     5e                                 	pop esi
0xf3b5:     c3                                 	ret 
; data inside code section at 0xf3b6 -- 0xf3b7
0xf3b6:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf3b7 -- 0xf3b8
; data inside code section at 0xf3b8 -- 0xf3bf
0xf3b8:     ff ff ff 89 c6 89 1c                               |.......         |
; function: function_f3bf at 0xf3bf -- 0xf3c3
0xf3bf:     24 e8                              	and al, 0xe8
0xf3c1:     eb d1                              	jmp 0xf394
; data inside code section at 0xf3c3 -- 0xf3c5
0xf3c3:     00 00                                              |..              |
; function: function_f3c5 at 0xf3c5 -- 0xf3c6
; data inside code section at 0xf3c6 -- 0xf3c9
0xf3c6:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xf3c9 -- 0xf3ca
; data inside code section at 0xf3ca -- 0xf3d1
0xf3ca:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf3d1 -- 0xf3d2
; data inside code section at 0xf3d2 -- 0xf3db
0xf3d2:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf3db -- 0xf3dc
; data inside code section at 0xf3dc -- 0xf3df
0xf3dc:     ff ff ff                                           |...             |
; function: function_f3df at 0xf3df -- 0xf3e1
0xf3df:     eb e4                              	jmp 0xf3c5 <function_f3c5>
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv at 0xf3f0 -- 0xf3f7
0xf3f0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xf3f5:     eb 09                              	jmp 0xf400 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv>
; data inside code section at 0xf3f7 -- 0xf400
0xf3f7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE5cloneEv at 0xf400 -- 0xf41c
0xf400:     56                                 	push esi
0xf401:     53                                 	push ebx
0xf402:     83 ec 24                           	sub esp, 0x24
0xf405:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf409:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf40f:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf413:     31 c0                              	xor eax, eax
0xf415:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf41c -- 0xf41d
0xf41c:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf41d -- 0xf41e
; data inside code section at 0xf41e -- 0xf423
0xf41e:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt11logic_error at 0xf423 -- 0xf436
; data inside code section at 0xf436 -- 0xf437
0xf436:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xf437 -- 0xf438
; data inside code section at 0xf438 -- 0xf43a
0xf438:     ff ff                                              |..              |
; function: function_f43a at 0xf43a -- 0xf496
0xf43a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0xf440:     a8 0f                              	test al, 0xf
0xf442:     03 00                              	add eax, dword ptr [eax]
0xf444:     c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0xf44b:     85 c0                              	test eax, eax
0xf44d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xf450:     74 08                              	je 0xf45a <function_f43a+0x20>
0xf452:     8b 10                              	mov edx, dword ptr [eax]
0xf454:     89 04 24                           	mov dword ptr [esp], eax
0xf457:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xf45a:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xf45d:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf461:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf468:     c7 43 08 24 10 03 00               	mov dword ptr [ebx + 8], 0x31024
0xf46f:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xf472:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xf475:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xf478:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf47b:     c7 03 08 10 03 00                  	mov dword ptr [ebx], 0x31008
0xf481:     c7 43 1c 34 10 03 00               	mov dword ptr [ebx + 0x1c], 0x31034
0xf488:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf48b:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf48e:     75 06                              	jne 0xf496 <function_f43a+0x5b>
0xf490:     83 c4 24                           	add esp, 0x24
0xf493:     5b                                 	pop ebx
0xf494:     5e                                 	pop esi
0xf495:     c3                                 	ret 
; data inside code section at 0xf496 -- 0xf497
0xf496:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf497 -- 0xf498
; data inside code section at 0xf498 -- 0xf4a5
0xf498:     ff ff ff 89 c6 89 1c 24  e8 6b d1 00 00            |.......$.k...   |
; function: function_f4a5 at 0xf4a5 -- 0xf4a6
; data inside code section at 0xf4a6 -- 0xf4a9
0xf4a6:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xf4a9 -- 0xf4aa
; data inside code section at 0xf4aa -- 0xf4b1
0xf4aa:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf4b1 -- 0xf4b2
; data inside code section at 0xf4b2 -- 0xf4bb
0xf4b2:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf4bb -- 0xf4bc
; data inside code section at 0xf4bc -- 0xf4bf
0xf4bc:     ff ff ff                                           |...             |
; function: function_f4bf at 0xf4bf -- 0xf4c1
0xf4bf:     eb e4                              	jmp 0xf4a5 <function_f4a5>
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv at 0xf4d0 -- 0xf4d7
0xf4d0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xf4d5:     eb 09                              	jmp 0xf4e0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv>
; data inside code section at 0xf4d7 -- 0xf4e0
0xf4d7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE5cloneEv at 0xf4e0 -- 0xf4fc
0xf4e0:     56                                 	push esi
0xf4e1:     53                                 	push ebx
0xf4e2:     83 ec 24                           	sub esp, 0x24
0xf4e5:     8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0xf4e9:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf4ef:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf4f3:     31 c0                              	xor eax, eax
0xf4f5:     c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0xf4fc -- 0xf4fd
0xf4fc:     e8                                                 |.               |
; dynamically linked function: _Znwj at 0xf4fd -- 0xf4fe
; data inside code section at 0xf4fe -- 0xf503
0xf4fe:     ff ff ff c7 00                                     |.....           |
; dynamically linked function: _ZTVSt11logic_error at 0xf503 -- 0xf516
; data inside code section at 0xf516 -- 0xf517
0xf516:     e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0xf517 -- 0xf518
; data inside code section at 0xf518 -- 0xf51a
0xf518:     ff ff                                              |..              |
; function: function_f51a at 0xf51a -- 0xf576
0xf51a:     ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0xf520:     68 11 03 00 c7                     	push 0xc7000311
0xf525:     43                                 	inc ebx
0xf526:     08 18                              	or byte ptr [eax], bl
0xf528:     0e                                 	push cs
0xf529:     03 00                              	add eax, dword ptr [eax]
0xf52b:     85 c0                              	test eax, eax
0xf52d:     89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0xf530:     74 08                              	je 0xf53a <function_f51a+0x20>
0xf532:     8b 10                              	mov edx, dword ptr [eax]
0xf534:     89 04 24                           	mov dword ptr [esp], eax
0xf537:     ff 52 0c                           	call dword ptr [edx + 0xc]
0xf53a:     8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0xf53d:     8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0xf541:     65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0xf548:     c7 43 08 e4 11 03 00               	mov dword ptr [ebx + 8], 0x311e4
0xf54f:     89 43 10                           	mov dword ptr [ebx + 0x10], eax
0xf552:     8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0xf555:     89 43 14                           	mov dword ptr [ebx + 0x14], eax
0xf558:     8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0xf55b:     c7 03 c8 11 03 00                  	mov dword ptr [ebx], 0x311c8
0xf561:     c7 43 1c f4 11 03 00               	mov dword ptr [ebx + 0x1c], 0x311f4
0xf568:     89 43 18                           	mov dword ptr [ebx + 0x18], eax
0xf56b:     8d 43 1c                           	lea eax, [ebx + 0x1c]
0xf56e:     75 06                              	jne 0xf576 <function_f51a+0x5b>
0xf570:     83 c4 24                           	add esp, 0x24
0xf573:     5b                                 	pop ebx
0xf574:     5e                                 	pop esi
0xf575:     c3                                 	ret 
; data inside code section at 0xf576 -- 0xf577
0xf576:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf577 -- 0xf578
; data inside code section at 0xf578 -- 0xf585
0xf578:     ff ff ff 89 c6 89 1c 24  e8 ab d1 00 00            |.......$.....   |
; function: function_f585 at 0xf585 -- 0xf586
; data inside code section at 0xf586 -- 0xf589
0xf586:     1c 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0xf589 -- 0xf58a
; data inside code section at 0xf58a -- 0xf591
0xf58a:     ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0xf591 -- 0xf592
; data inside code section at 0xf592 -- 0xf59b
0xf592:     ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf59b -- 0xf59c
; data inside code section at 0xf59c -- 0xf59f
0xf59c:     ff ff ff                                           |...             |
; function: function_f59f at 0xf59f -- 0xf5a1
0xf59f:     eb e4                              	jmp 0xf585 <function_f585>
; section: .text._ZN5boost9exceptionD2Ev
; function: _ZN5boost9exceptionD1Ev at 0xf5b0 -- 0xf601
0xf5b0:     53                                 	push ebx
0xf5b1:     83 ec 28                           	sub esp, 0x28
0xf5b4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf5b8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf5be:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf5c2:     31 c0                              	xor eax, eax
0xf5c4:     8b 43 04                           	mov eax, dword ptr [ebx + 4]
0xf5c7:     c7 03 18 0e 03 00                  	mov dword ptr [ebx], 0x30e18
0xf5cd:     85 c0                              	test eax, eax
0xf5cf:     74 0c                              	je 0xf5dd <_ZN5boost9exceptionD1Ev+0x2d>
0xf5d1:     8b 10                              	mov edx, dword ptr [eax]
0xf5d3:     89 04 24                           	mov dword ptr [esp], eax
0xf5d6:     ff 52 10                           	call dword ptr [edx + 0x10]
0xf5d9:     84 c0                              	test al, al
0xf5db:     75 1b                              	jne 0xf5f8 <_ZN5boost9exceptionD1Ev+0x48>
0xf5dd:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf5e1:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf5e8:     75 17                              	jne 0xf601 <_ZN5boost9exceptionD1Ev+0x4f>
0xf5ea:     83 c4 28                           	add esp, 0x28
0xf5ed:     5b                                 	pop ebx
0xf5ee:     66 90                              	nop 
0xf5f0:     c3                                 	ret 
; data inside code section at 0xf5f1 -- 0xf5f8
0xf5f1:     8d b4 26 00 00 00 00                               |..&....         |
0xf5f8:     c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0xf5ff:     eb dc                              	jmp 0xf5dd <_ZN5boost9exceptionD1Ev+0x2d>
; data inside code section at 0xf601 -- 0xf602
0xf601:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf602 -- 0xf603
; data inside code section at 0xf603 -- 0xf607
0xf603:     ff ff ff 83                                        |....            |
; function: function_f607 at 0xf607 -- 0xf60a
0xf607:     c2 01 89                           	ret 0x8901
; data inside code section at 0xf60a -- 0xf60f
0xf60a:     04 24 74 05 e8                                     |.$t..           |
; dynamically linked function: _Unwind_Resume at 0xf60f -- 0xf610
; data inside code section at 0xf610 -- 0xf614
0xf610:     ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_call_unexpected at 0xf614 -- 0xf615
; data inside code section at 0xf615 -- 0xf618
0xf615:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D1Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D1Ev at 0xf620 -- 0xf62a
0xf620:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0xf625:     e9 26 f6 00 00                     	jmp 0x1ec50 <function_1ec50>
; section: .text._ZN5boost16exception_detail10bad_alloc_D2Ev
; function: _ZN5boost16exception_detail10bad_alloc_D1Ev at 0xf630 -- 0xf657
0xf630:     53                                 	push ebx
0xf631:     83 ec 28                           	sub esp, 0x28
0xf634:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf638:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf63e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf642:     31 c0                              	xor eax, eax
0xf644:     c7 03 a8 16 03 00                  	mov dword ptr [ebx], 0x316a8
0xf64a:     8d 43 14                           	lea eax, [ebx + 0x14]
0xf64d:     c7 43 14 b8 16 03 00               	mov dword ptr [ebx + 0x14], 0x316b8
0xf654:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xf657 -- 0xf658
0xf657:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0xf658 -- 0xf659
; data inside code section at 0xf659 -- 0xf65b
0xf659:     ff ff                                              |..              |
; function: function_f65b at 0xf65b -- 0xf676
0xf65b:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0xf661:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xf667:     75 0d                              	jne 0xf676 <function_f65b+0x16>
0xf669:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf66d:     83 c4 28                           	add esp, 0x28
0xf670:     5b                                 	pop ebx
0xf671:     e9 6a f5 00 00                     	jmp 0x1ebe0
; data inside code section at 0xf676 -- 0xf677
0xf676:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xf677 -- 0xf678
; data inside code section at 0xf678 -- 0xf67b
0xf678:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0xf680 -- 0xf68a
0xf680:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf685:     e9 86 f6 00 00                     	jmp 0x1ed10 <function_1ed10>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev at 0xf690 -- 0xf6d7
0xf690:     53                                 	push ebx
0xf691:     83 ec 28                           	sub esp, 0x28
0xf694:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf698:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf69e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf6a2:     31 c0                              	xor eax, eax
0xf6a4:     c7 03 68 12 03 00                  	mov dword ptr [ebx], 0x31268
0xf6aa:     8d 43 08                           	lea eax, [ebx + 8]
0xf6ad:     c7 43 08 7c 12 03 00               	mov dword ptr [ebx + 8], 0x3127c
0xf6b4:     89 04 24                           	mov dword ptr [esp], eax
0xf6b7:     e8 84 f5 00 00                     	call 0x1ec40 <function_1ec40>
0xf6bc:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf6c0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf6c7:     c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0xf6cd:     75 0d                              	jne 0xf6dc <function_f6dc>
0xf6cf:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf6d3:     83 c4 28                           	add esp, 0x28
0xf6d6:     5b                                 	pop ebx
; data inside code section at 0xf6d7 -- 0xf6d8
0xf6d7:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf6d8 -- 0xf6d9
; data inside code section at 0xf6d9 -- 0xf6dc
0xf6d9:     ff ff ff                                           |...             |
; function: function_f6dc at 0xf6dc -- 0xf6dd
; dynamically linked function: __stack_chk_fail at 0xf6dd -- 0xf6de
; data inside code section at 0xf6de -- 0xf6e1
0xf6de:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0xf6f0 -- 0xf6fa
0xf6f0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf6f5:     e9 f6 f6 00 00                     	jmp 0x1edf0
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev at 0xf700 -- 0xf747
0xf700:     53                                 	push ebx
0xf701:     83 ec 28                           	sub esp, 0x28
0xf704:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf708:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf70e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf712:     31 c0                              	xor eax, eax
0xf714:     c7 03 28 0e 03 00                  	mov dword ptr [ebx], 0x30e28
0xf71a:     8d 43 08                           	lea eax, [ebx + 8]
0xf71d:     c7 43 08 3c 0e 03 00               	mov dword ptr [ebx + 8], 0x30e3c
0xf724:     89 04 24                           	mov dword ptr [esp], eax
0xf727:     e8 84 f5 00 00                     	call 0x1ecb0 <function_1ecb0>
0xf72c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf730:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf737:     c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0xf73d:     75 0d                              	jne 0xf74c <function_f74c>
0xf73f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf743:     83 c4 28                           	add esp, 0x28
0xf746:     5b                                 	pop ebx
; data inside code section at 0xf747 -- 0xf748
0xf747:     e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0xf748 -- 0xf749
; data inside code section at 0xf749 -- 0xf74c
0xf749:     ff ff ff                                           |...             |
; function: function_f74c at 0xf74c -- 0xf74d
; dynamically linked function: __stack_chk_fail at 0xf74d -- 0xf74e
; data inside code section at 0xf74e -- 0xf751
0xf74e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev at 0xf760 -- 0xf76a
0xf760:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf765:     e9 66 f7 00 00                     	jmp 0x1eed0
; section: .text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED1Ev at 0xf770 -- 0xf7b1
0xf770:     53                                 	push ebx
0xf771:     83 ec 28                           	sub esp, 0x28
0xf774:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf778:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf77e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf782:     31 c0                              	xor eax, eax
0xf784:     c7 03 e8 0e 03 00                  	mov dword ptr [ebx], 0x30ee8
0xf78a:     8d 43 08                           	lea eax, [ebx + 8]
0xf78d:     c7 43 08 fc 0e 03 00               	mov dword ptr [ebx + 8], 0x30efc
0xf794:     89 04 24                           	mov dword ptr [esp], eax
0xf797:     e8 84 f5 00 00                     	call 0x1ed20
0xf79c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf7a0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf7a7:     75 0d                              	jne 0xf7b6 <function_f7b6>
0xf7a9:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf7ad:     83 c4 28                           	add esp, 0x28
0xf7b0:     5b                                 	pop ebx
; data inside code section at 0xf7b1 -- 0xf7b2
0xf7b1:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xf7b2 -- 0xf7b3
; data inside code section at 0xf7b3 -- 0xf7b6
0xf7b3:     ff ff ff                                           |...             |
; function: function_f7b6 at 0xf7b6 -- 0xf7b7
; dynamically linked function: __stack_chk_fail at 0xf7b7 -- 0xf7b8
; data inside code section at 0xf7b8 -- 0xf7bb
0xf7b8:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev at 0xf7c0 -- 0xf7ca
0xf7c0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf7c5:     e9 c6 f7 00 00                     	jmp 0x1ef90
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED1Ev at 0xf7d0 -- 0xf817
0xf7d0:     53                                 	push ebx
0xf7d1:     83 ec 28                           	sub esp, 0x28
0xf7d4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf7d8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf7de:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf7e2:     31 c0                              	xor eax, eax
0xf7e4:     c7 03 c8 0f 03 00                  	mov dword ptr [ebx], 0x30fc8
0xf7ea:     8d 43 08                           	lea eax, [ebx + 8]
0xf7ed:     c7 43 08 dc 0f 03 00               	mov dword ptr [ebx + 8], 0x30fdc
0xf7f4:     89 04 24                           	mov dword ptr [esp], eax
0xf7f7:     e8 84 f5 00 00                     	call 0x1ed80 <function_1ed80>
0xf7fc:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf800:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf807:     c7 03 a8 0f 03 00                  	mov dword ptr [ebx], 0x30fa8
0xf80d:     75 0d                              	jne 0xf81c <function_f81c>
0xf80f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf813:     83 c4 28                           	add esp, 0x28
0xf816:     5b                                 	pop ebx
; data inside code section at 0xf817 -- 0xf818
0xf817:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xf818 -- 0xf819
; data inside code section at 0xf819 -- 0xf81c
0xf819:     ff ff ff                                           |...             |
; function: function_f81c at 0xf81c -- 0xf81d
; dynamically linked function: __stack_chk_fail at 0xf81d -- 0xf81e
; data inside code section at 0xf81e -- 0xf821
0xf81e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0xf830 -- 0xf83a
0xf830:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf835:     e9 36 f8 00 00                     	jmp 0x1f070 <function_1f070>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev at 0xf840 -- 0xf887
0xf840:     53                                 	push ebx
0xf841:     83 ec 28                           	sub esp, 0x28
0xf844:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf848:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf84e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf852:     31 c0                              	xor eax, eax
0xf854:     c7 03 68 13 03 00                  	mov dword ptr [ebx], 0x31368
0xf85a:     8d 43 08                           	lea eax, [ebx + 8]
0xf85d:     c7 43 08 7c 13 03 00               	mov dword ptr [ebx + 8], 0x3137c
0xf864:     89 04 24                           	mov dword ptr [esp], eax
0xf867:     e8 84 f5 00 00                     	call 0x1edf0
0xf86c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf870:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf877:     c7 03 38 13 03 00                  	mov dword ptr [ebx], 0x31338
0xf87d:     75 0d                              	jne 0xf88c <function_f88c>
0xf87f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf883:     83 c4 28                           	add esp, 0x28
0xf886:     5b                                 	pop ebx
; data inside code section at 0xf887 -- 0xf888
0xf887:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xf888 -- 0xf889
; data inside code section at 0xf889 -- 0xf88c
0xf889:     ff ff ff                                           |...             |
; function: function_f88c at 0xf88c -- 0xf88d
; dynamically linked function: __stack_chk_fail at 0xf88d -- 0xf88e
; data inside code section at 0xf88e -- 0xf891
0xf88e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev at 0xf8a0 -- 0xf8aa
0xf8a0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf8a5:     e9 a6 f8 00 00                     	jmp 0x1f150
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED1Ev at 0xf8b0 -- 0xf8f7
0xf8b0:     53                                 	push ebx
0xf8b1:     83 ec 28                           	sub esp, 0x28
0xf8b4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf8b8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf8be:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf8c2:     31 c0                              	xor eax, eax
0xf8c4:     c7 03 88 11 03 00                  	mov dword ptr [ebx], 0x31188
0xf8ca:     8d 43 08                           	lea eax, [ebx + 8]
0xf8cd:     c7 43 08 9c 11 03 00               	mov dword ptr [ebx + 8], 0x3119c
0xf8d4:     89 04 24                           	mov dword ptr [esp], eax
0xf8d7:     e8 84 f5 00 00                     	call 0x1ee60 <function_1ee60>
0xf8dc:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf8e0:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf8e7:     c7 03 68 11 03 00                  	mov dword ptr [ebx], 0x31168
0xf8ed:     75 0d                              	jne 0xf8fc <function_f8fc>
0xf8ef:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf8f3:     83 c4 28                           	add esp, 0x28
0xf8f6:     5b                                 	pop ebx
; data inside code section at 0xf8f7 -- 0xf8f8
0xf8f7:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xf8f8 -- 0xf8f9
; data inside code section at 0xf8f9 -- 0xf8fc
0xf8f9:     ff ff ff                                           |...             |
; function: function_f8fc at 0xf8fc -- 0xf8fd
; dynamically linked function: __stack_chk_fail at 0xf8fd -- 0xf8fe
; data inside code section at 0xf8fe -- 0xf901
0xf8fe:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev at 0xf910 -- 0xf91a
0xf910:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xf915:     e9 16 f9 00 00                     	jmp 0x1f230 <function_1f230>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED2Ev
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED1Ev at 0xf920 -- 0xf967
0xf920:     53                                 	push ebx
0xf921:     83 ec 28                           	sub esp, 0x28
0xf924:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf928:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf92e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf932:     31 c0                              	xor eax, eax
0xf934:     c7 03 a8 10 03 00                  	mov dword ptr [ebx], 0x310a8
0xf93a:     8d 43 08                           	lea eax, [ebx + 8]
0xf93d:     c7 43 08 bc 10 03 00               	mov dword ptr [ebx + 8], 0x310bc
0xf944:     89 04 24                           	mov dword ptr [esp], eax
0xf947:     e8 84 f5 00 00                     	call 0x1eed0
0xf94c:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xf950:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xf957:     c7 03 88 10 03 00                  	mov dword ptr [ebx], 0x31088
0xf95d:     75 0d                              	jne 0xf96c <function_f96c>
0xf95f:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xf963:     83 c4 28                           	add esp, 0x28
0xf966:     5b                                 	pop ebx
; data inside code section at 0xf967 -- 0xf968
0xf967:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xf968 -- 0xf969
; data inside code section at 0xf969 -- 0xf96c
0xf969:     ff ff ff                                           |...             |
; function: function_f96c at 0xf96c -- 0xf96d
; dynamically linked function: __stack_chk_fail at 0xf96d -- 0xf96e
; data inside code section at 0xf96e -- 0xf971
0xf96e:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xf980 -- 0xf987
0xf980:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0xf985:     eb 19                              	jmp 0xf9a0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0xf987 -- 0xf990
0xf987:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xf990 -- 0xf997
0xf990:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0xf995:     eb 09                              	jmp 0xf9a0 <_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev>
; data inside code section at 0xf997 -- 0xf9a0
0xf997:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev at 0xf9a0 -- 0xf9ce
0xf9a0:     53                                 	push ebx
0xf9a1:     83 ec 28                           	sub esp, 0x28
0xf9a4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xf9a8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xf9ae:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xf9b2:     31 c0                              	xor eax, eax
0xf9b4:     c7 43 18 50 0e 03 00               	mov dword ptr [ebx + 0x18], 0x30e50
0xf9bb:     8d 43 14                           	lea eax, [ebx + 0x14]
0xf9be:     c7 03 a8 16 03 00                  	mov dword ptr [ebx], 0x316a8
0xf9c4:     c7 43 14 b8 16 03 00               	mov dword ptr [ebx + 0x14], 0x316b8
0xf9cb:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xf9ce -- 0xf9cf
0xf9ce:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0xf9cf -- 0xf9d0
; data inside code section at 0xf9d0 -- 0xf9f1
0xf9d0:     ff ff ff 89 1c 24 e8 55  f5 00 00 8b 44 24 1c 65   |.....$.U....D$.e|
0xf9e0:     33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0xf9f0:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xf9f1 -- 0xf9f2
; data inside code section at 0xf9f2 -- 0xf9f6
0xf9f2:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xf9f6 -- 0xf9f7
; data inside code section at 0xf9f7 -- 0xf9fa
0xf9f7:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev at 0xfa00 -- 0xfa07
0xfa00:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfa05:     eb 19                              	jmp 0xfa20 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev>
; data inside code section at 0xfa07 -- 0xfa10
0xfa07:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev at 0xfa10 -- 0xfa17
0xfa10:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfa15:     eb 09                              	jmp 0xfa20 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev>
; data inside code section at 0xfa17 -- 0xfa20
0xfa17:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED0Ev at 0xfa20 -- 0xfa56
0xfa20:     53                                 	push ebx
0xfa21:     83 ec 28                           	sub esp, 0x28
0xfa24:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfa28:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfa2e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfa32:     31 c0                              	xor eax, eax
0xfa34:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfa3b:     8d 43 08                           	lea eax, [ebx + 8]
0xfa3e:     c7 03 e8 0e 03 00                  	mov dword ptr [ebx], 0x30ee8
0xfa44:     c7 43 08 fc 0e 03 00               	mov dword ptr [ebx + 8], 0x30efc
0xfa4b:     89 04 24                           	mov dword ptr [esp], eax
0xfa4e:     e8 5d f5 00 00                     	call 0x1efb0 <function_1efb0>
0xfa53:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfa56 -- 0xfa57
0xfa56:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xfa57 -- 0xfa58
; data inside code section at 0xfa58 -- 0xfa71
0xfa58:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xfa68:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xfa71 -- 0xfa72
; data inside code section at 0xfa72 -- 0xfa76
0xfa72:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xfa76 -- 0xfa77
; data inside code section at 0xfa77 -- 0xfa7a
0xfa77:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev at 0xfa80 -- 0xfa87
0xfa80:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfa85:     eb 09                              	jmp 0xfa90 <_ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev>
; data inside code section at 0xfa87 -- 0xfa90
0xfa87:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorISt13runtime_errorED0Ev at 0xfa90 -- 0xfabf
0xfa90:     53                                 	push ebx
0xfa91:     83 ec 28                           	sub esp, 0x28
0xfa94:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfa98:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfa9e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfaa2:     31 c0                              	xor eax, eax
0xfaa4:     c7 03 e8 0e 03 00                  	mov dword ptr [ebx], 0x30ee8
0xfaaa:     8d 43 08                           	lea eax, [ebx + 8]
0xfaad:     c7 43 08 fc 0e 03 00               	mov dword ptr [ebx + 8], 0x30efc
0xfab4:     89 04 24                           	mov dword ptr [esp], eax
0xfab7:     e8 74 f5 00 00                     	call 0x1f030 <function_1f030>
0xfabc:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfabf -- 0xfac0
0xfabf:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xfac0 -- 0xfac1
; data inside code section at 0xfac1 -- 0xfada
0xfac1:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xfad1:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xfada -- 0xfadb
; data inside code section at 0xfadb -- 0xfadf
0xfadb:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xfadf -- 0xfae0
; data inside code section at 0xfae0 -- 0xfae3
0xfae0:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev at 0xfaf0 -- 0xfafa
0xfaf0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfaf5:     e9 06 fb 00 00                     	jmp 0x1f600 <function_1f600>
; data inside code section at 0xfafa -- 0xfb00
0xfafa:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev at 0xfb00 -- 0xfb0a
0xfb00:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfb05:     e9 f6 fa 00 00                     	jmp 0x1f600 <function_1f600>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEED1Ev at 0xfb10 -- 0xfb58
0xfb10:     53                                 	push ebx
0xfb11:     83 ec 28                           	sub esp, 0x28
0xfb14:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfb18:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfb1e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfb22:     31 c0                              	xor eax, eax
0xfb24:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfb2b:     8d 43 08                           	lea eax, [ebx + 8]
0xfb2e:     c7 03 e8 0e 03 00                  	mov dword ptr [ebx], 0x30ee8
0xfb34:     c7 43 08 fc 0e 03 00               	mov dword ptr [ebx + 8], 0x30efc
0xfb3b:     89 04 24                           	mov dword ptr [esp], eax
0xfb3e:     e8 7d f5 00 00                     	call 0x1f0c0 <function_1f0c0>
0xfb43:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xfb47:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xfb4e:     75 0d                              	jne 0xfb5d <function_fb5d>
0xfb50:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xfb54:     83 c4 28                           	add esp, 0x28
0xfb57:     5b                                 	pop ebx
; data inside code section at 0xfb58 -- 0xfb59
0xfb58:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xfb59 -- 0xfb5a
; data inside code section at 0xfb5a -- 0xfb5d
0xfb5a:     ff ff ff                                           |...             |
; function: function_fb5d at 0xfb5d -- 0xfb5e
; dynamically linked function: __stack_chk_fail at 0xfb5e -- 0xfb5f
; data inside code section at 0xfb5f -- 0xfb62
0xfb5f:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev
; function: _ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xfb70 -- 0xfb7a
0xfb70:     83 6c 24 04 18                     	sub dword ptr [esp + 4], 0x18
0xfb75:     e9 86 fb 00 00                     	jmp 0x1f700 <function_1f700>
; data inside code section at 0xfb7a -- 0xfb80
0xfb7a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xfb80 -- 0xfb8a
0xfb80:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0xfb85:     e9 76 fb 00 00                     	jmp 0x1f700 <function_1f700>
; section: .text._ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev at 0xfb90 -- 0xfbbe
0xfb90:     53                                 	push ebx
0xfb91:     83 ec 28                           	sub esp, 0x28
0xfb94:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfb98:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfb9e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfba2:     31 c0                              	xor eax, eax
0xfba4:     c7 43 18 50 0e 03 00               	mov dword ptr [ebx + 0x18], 0x30e50
0xfbab:     8d 43 14                           	lea eax, [ebx + 0x14]
0xfbae:     c7 03 a8 16 03 00                  	mov dword ptr [ebx], 0x316a8
0xfbb4:     c7 43 14 b8 16 03 00               	mov dword ptr [ebx + 0x14], 0x316b8
0xfbbb:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xfbbe -- 0xfbbf
0xfbbe:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0xfbbf -- 0xfbc0
; data inside code section at 0xfbc0 -- 0xfbc2
0xfbc0:     ff ff                                              |..              |
; function: function_fbc2 at 0xfbc2 -- 0xfbdd
0xfbc2:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0xfbc8:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xfbce:     75 0d                              	jne 0xfbdd <function_fbc2+0x16>
0xfbd0:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xfbd4:     83 c4 28                           	add esp, 0x28
0xfbd7:     5b                                 	pop ebx
0xfbd8:     e9 63 f5 00 00                     	jmp 0x1f140
; data inside code section at 0xfbdd -- 0xfbde
0xfbdd:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfbde -- 0xfbdf
; data inside code section at 0xfbdf -- 0xfbe2
0xfbdf:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10bad_alloc_D0Ev
; function: _ZThn20_N5boost16exception_detail10bad_alloc_D0Ev at 0xfbf0 -- 0xfbf7
0xfbf0:     83 6c 24 04 14                     	sub dword ptr [esp + 4], 0x14
0xfbf5:     eb 09                              	jmp 0xfc00 <_ZN5boost16exception_detail10bad_alloc_D0Ev>
; data inside code section at 0xfbf7 -- 0xfc00
0xfbf7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10bad_alloc_D0Ev at 0xfc00 -- 0xfc27
0xfc00:     53                                 	push ebx
0xfc01:     83 ec 28                           	sub esp, 0x28
0xfc04:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfc08:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfc0e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfc12:     31 c0                              	xor eax, eax
0xfc14:     c7 03 a8 16 03 00                  	mov dword ptr [ebx], 0x316a8
0xfc1a:     8d 43 14                           	lea eax, [ebx + 0x14]
0xfc1d:     c7 43 14 b8 16 03 00               	mov dword ptr [ebx + 0x14], 0x316b8
0xfc24:     89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0xfc27 -- 0xfc28
0xfc27:     e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0xfc28 -- 0xfc29
; data inside code section at 0xfc29 -- 0xfc4a
0xfc29:     ff ff ff 89 1c 24 e8 6c  f5 00 00 8b 44 24 1c 65   |.....$.l....D$.e|
0xfc39:     33 05 14 00 00 00 75 0d  89 5c 24 30 83 c4 28 5b   |3.....u..\$0..([|
0xfc49:     e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0xfc4a -- 0xfc4b
; data inside code section at 0xfc4b -- 0xfc4f
0xfc4b:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xfc4f -- 0xfc50
; data inside code section at 0xfc50 -- 0xfc53
0xfc50:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev at 0xfc60 -- 0xfc67
0xfc60:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfc65:     eb 19                              	jmp 0xfc80 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev>
; data inside code section at 0xfc67 -- 0xfc70
0xfc67:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev at 0xfc70 -- 0xfc77
0xfc70:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfc75:     eb 09                              	jmp 0xfc80 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev>
; data inside code section at 0xfc77 -- 0xfc80
0xfc77:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED0Ev at 0xfc80 -- 0xfcbc
0xfc80:     53                                 	push ebx
0xfc81:     83 ec 28                           	sub esp, 0x28
0xfc84:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfc88:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfc8e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfc92:     31 c0                              	xor eax, eax
0xfc94:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfc9b:     8d 43 08                           	lea eax, [ebx + 8]
0xfc9e:     c7 03 88 11 03 00                  	mov dword ptr [ebx], 0x31188
0xfca4:     c7 43 08 9c 11 03 00               	mov dword ptr [ebx + 8], 0x3119c
0xfcab:     89 04 24                           	mov dword ptr [esp], eax
0xfcae:     e8 5d f5 00 00                     	call 0x1f210 <function_1f210>
0xfcb3:     c7 03 68 11 03 00                  	mov dword ptr [ebx], 0x31168
0xfcb9:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfcbc -- 0xfcbd
0xfcbc:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xfcbd -- 0xfcbe
; data inside code section at 0xfcbe -- 0xfcd7
0xfcbe:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xfcce:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xfcd7 -- 0xfcd8
; data inside code section at 0xfcd8 -- 0xfcdc
0xfcd8:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xfcdc -- 0xfcdd
; data inside code section at 0xfcdd -- 0xfce0
0xfcdd:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev at 0xfce0 -- 0xfcea
0xfce0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfce5:     e9 f6 fc 00 00                     	jmp 0x1f9e0 <function_1f9e0>
; data inside code section at 0xfcea -- 0xfcf0
0xfcea:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev at 0xfcf0 -- 0xfcfa
0xfcf0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfcf5:     e9 e6 fc 00 00                     	jmp 0x1f9e0 <function_1f9e0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEED1Ev at 0xfd00 -- 0xfd4e
0xfd00:     53                                 	push ebx
0xfd01:     83 ec 28                           	sub esp, 0x28
0xfd04:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfd08:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfd0e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfd12:     31 c0                              	xor eax, eax
0xfd14:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfd1b:     8d 43 08                           	lea eax, [ebx + 8]
0xfd1e:     c7 03 88 11 03 00                  	mov dword ptr [ebx], 0x31188
0xfd24:     c7 43 08 9c 11 03 00               	mov dword ptr [ebx + 8], 0x3119c
0xfd2b:     89 04 24                           	mov dword ptr [esp], eax
0xfd2e:     e8 7d f5 00 00                     	call 0x1f2b0 <function_1f2b0>
0xfd33:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xfd37:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xfd3e:     c7 03 68 11 03 00                  	mov dword ptr [ebx], 0x31168
0xfd44:     75 0d                              	jne 0xfd53 <function_fd53>
0xfd46:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xfd4a:     83 c4 28                           	add esp, 0x28
0xfd4d:     5b                                 	pop ebx
; data inside code section at 0xfd4e -- 0xfd4f
0xfd4e:     e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xfd4f -- 0xfd50
; data inside code section at 0xfd50 -- 0xfd53
0xfd50:     ff ff ff                                           |...             |
; function: function_fd53 at 0xfd53 -- 0xfd54
; dynamically linked function: __stack_chk_fail at 0xfd54 -- 0xfd55
; data inside code section at 0xfd55 -- 0xfd58
0xfd55:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev at 0xfd60 -- 0xfd67
0xfd60:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfd65:     eb 09                              	jmp 0xfd70 <_ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev>
; data inside code section at 0xfd67 -- 0xfd70
0xfd67:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEED0Ev at 0xfd70 -- 0xfda5
0xfd70:     53                                 	push ebx
0xfd71:     83 ec 28                           	sub esp, 0x28
0xfd74:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfd78:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfd7e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfd82:     31 c0                              	xor eax, eax
0xfd84:     c7 03 88 11 03 00                  	mov dword ptr [ebx], 0x31188
0xfd8a:     8d 43 08                           	lea eax, [ebx + 8]
0xfd8d:     c7 43 08 9c 11 03 00               	mov dword ptr [ebx + 8], 0x3119c
0xfd94:     89 04 24                           	mov dword ptr [esp], eax
0xfd97:     e8 74 f5 00 00                     	call 0x1f310 <function_1f310>
0xfd9c:     c7 03 68 11 03 00                  	mov dword ptr [ebx], 0x31168
0xfda2:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfda5 -- 0xfda6
0xfda5:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xfda6 -- 0xfda7
; data inside code section at 0xfda7 -- 0xfda9
0xfda7:     ff ff                                              |..              |
; function: function_fda9 at 0xfda9 -- 0xfdc4
0xfda9:     ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0xfdaf:     33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0xfdb5:     75 0d                              	jne 0xfdc4 <function_fda9+0x16>
0xfdb7:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xfdbb:     83 c4 28                           	add esp, 0x28
0xfdbe:     5b                                 	pop ebx
0xfdbf:     e9 fc ff ff ff                     	jmp 0xfdc0
; data inside code section at 0xfdc4 -- 0xfdc5
0xfdc4:     e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0xfdc5 -- 0xfdc6
; data inside code section at 0xfdc6 -- 0xfdc9
0xfdc6:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0xfdd0 -- 0xfdd7
0xfdd0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfdd5:     eb 09                              	jmp 0xfde0 <_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev>
; data inside code section at 0xfdd7 -- 0xfde0
0xfdd7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev at 0xfde0 -- 0xfe15
0xfde0:     53                                 	push ebx
0xfde1:     83 ec 28                           	sub esp, 0x28
0xfde4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfde8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfdee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfdf2:     31 c0                              	xor eax, eax
0xfdf4:     c7 03 68 13 03 00                  	mov dword ptr [ebx], 0x31368
0xfdfa:     8d 43 08                           	lea eax, [ebx + 8]
0xfdfd:     c7 43 08 7c 13 03 00               	mov dword ptr [ebx + 8], 0x3137c
0xfe04:     89 04 24                           	mov dword ptr [esp], eax
0xfe07:     e8 74 f5 00 00                     	call 0x1f380 <function_1f380>
0xfe0c:     c7 03 38 13 03 00                  	mov dword ptr [ebx], 0x31338
0xfe12:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xfe15 -- 0xfe16
0xfe15:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xfe16 -- 0xfe17
; data inside code section at 0xfe17 -- 0xfe30
0xfe17:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xfe27:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xfe30 -- 0xfe31
; data inside code section at 0xfe31 -- 0xfe35
0xfe31:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xfe35 -- 0xfe36
; data inside code section at 0xfe36 -- 0xfe39
0xfe36:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0xfe40 -- 0xfe4a
0xfe40:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfe45:     e9 56 fe 00 00                     	jmp 0x1fca0 <function_1fca0>
; data inside code section at 0xfe4a -- 0xfe50
0xfe4a:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0xfe50 -- 0xfe5a
0xfe50:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfe55:     e9 46 fe 00 00                     	jmp 0x1fca0 <function_1fca0>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev at 0xfe60 -- 0xfeae
0xfe60:     53                                 	push ebx
0xfe61:     83 ec 28                           	sub esp, 0x28
0xfe64:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfe68:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfe6e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfe72:     31 c0                              	xor eax, eax
0xfe74:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfe7b:     8d 43 08                           	lea eax, [ebx + 8]
0xfe7e:     c7 03 68 13 03 00                  	mov dword ptr [ebx], 0x31368
0xfe84:     c7 43 08 7c 13 03 00               	mov dword ptr [ebx + 8], 0x3137c
0xfe8b:     89 04 24                           	mov dword ptr [esp], eax
0xfe8e:     e8 7d f5 00 00                     	call 0x1f410 <function_1f410>
0xfe93:     8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0xfe97:     65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0xfe9e:     c7 03 38 13 03 00                  	mov dword ptr [ebx], 0x31338
0xfea4:     75 0d                              	jne 0xfeb3 <function_feb3>
0xfea6:     89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0xfeaa:     83 c4 28                           	add esp, 0x28
0xfead:     5b                                 	pop ebx
; data inside code section at 0xfeae -- 0xfeaf
0xfeae:     e9                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xfeaf -- 0xfeb0
; data inside code section at 0xfeb0 -- 0xfeb3
0xfeb0:     ff ff ff                                           |...             |
; function: function_feb3 at 0xfeb3 -- 0xfeb4
; dynamically linked function: __stack_chk_fail at 0xfeb4 -- 0xfeb5
; data inside code section at 0xfeb5 -- 0xfeb8
0xfeb5:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0xfec0 -- 0xfec7
0xfec0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xfec5:     eb 19                              	jmp 0xfee0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0xfec7 -- 0xfed0
0xfec7:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0xfed0 -- 0xfed7
0xfed0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xfed5:     eb 09                              	jmp 0xfee0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev>
; data inside code section at 0xfed7 -- 0xfee0
0xfed7:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev at 0xfee0 -- 0xff1c
0xfee0:     53                                 	push ebx
0xfee1:     83 ec 28                           	sub esp, 0x28
0xfee4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xfee8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xfeee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfef2:     31 c0                              	xor eax, eax
0xfef4:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfefb:     8d 43 08                           	lea eax, [ebx + 8]
0xfefe:     c7 03 68 13 03 00                  	mov dword ptr [ebx], 0x31368
0xff04:     c7 43 08 7c 13 03 00               	mov dword ptr [ebx + 8], 0x3137c
0xff0b:     89 04 24                           	mov dword ptr [esp], eax
0xff0e:     e8 5d f5 00 00                     	call 0x1f470 <function_1f470>
0xff13:     c7 03 38 13 03 00                  	mov dword ptr [ebx], 0x31338
0xff19:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xff1c -- 0xff1d
0xff1c:     e8                                                 |.               |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0xff1d -- 0xff1e
; data inside code section at 0xff1e -- 0xff37
0xff1e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xff2e:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xff37 -- 0xff38
; data inside code section at 0xff38 -- 0xff3c
0xff38:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xff3c -- 0xff3d
; data inside code section at 0xff3d -- 0xff40
0xff3d:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev at 0xff40 -- 0xff47
0xff40:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xff45:     eb 19                              	jmp 0xff60 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev>
; data inside code section at 0xff47 -- 0xff50
0xff47:     89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev at 0xff50 -- 0xff57
0xff50:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xff55:     eb 09                              	jmp 0xff60 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev>
; data inside code section at 0xff57 -- 0xff60
0xff57:     90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED0Ev at 0xff60 -- 0xff9c
0xff60:     53                                 	push ebx
0xff61:     83 ec 28                           	sub esp, 0x28
0xff64:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xff68:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xff6e:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xff72:     31 c0                              	xor eax, eax
0xff74:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xff7b:     8d 43 08                           	lea eax, [ebx + 8]
0xff7e:     c7 03 c8 0f 03 00                  	mov dword ptr [ebx], 0x30fc8
0xff84:     c7 43 08 dc 0f 03 00               	mov dword ptr [ebx + 8], 0x30fdc
0xff8b:     89 04 24                           	mov dword ptr [esp], eax
0xff8e:     e8 5d f5 00 00                     	call 0x1f4f0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_>
0xff93:     c7 03 a8 0f 03 00                  	mov dword ptr [ebx], 0x30fa8
0xff99:     89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0xff9c -- 0xff9d
0xff9c:     e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0xff9d -- 0xff9e
; data inside code section at 0xff9e -- 0xffb7
0xff9e:     ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0xffae:     89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0xffb7 -- 0xffb8
; data inside code section at 0xffb8 -- 0xffbc
0xffb8:     ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0xffbc -- 0xffbd
; data inside code section at 0xffbd -- 0xffc0
0xffbd:     ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev at 0xffc0 -- 0xffca
0xffc0:     83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0xffc5:     e9 d6 ff 00 00                     	jmp 0x1ffa0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_>
; data inside code section at 0xffca -- 0xffd0
0xffca:     8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev at 0xffd0 -- 0xffda
0xffd0:     83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0xffd5:     e9 c6 ff 00 00                     	jmp 0x1ffa0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEED1Ev at 0xffe0 -- 0x1002e
0xffe0:     53                                 	push ebx
0xffe1:     83 ec 28                           	sub esp, 0x28
0xffe4:     8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0xffe8:     65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0xffee:     89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0xfff2:     31 c0                              	xor eax, eax
0xfff4:     c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0xfffb:     8d 43 08                           	lea eax, [ebx + 8]
0xfffe:     c7 03 c8 0f 03 00                  	mov dword ptr [ebx], 0x30fc8
0x10004:    c7 43 08 dc 0f 03 00               	mov dword ptr [ebx + 8], 0x30fdc
0x1000b:    89 04 24                           	mov dword ptr [esp], eax
0x1000e:    e8 7d f5 00 00                     	call 0x1f590 <function_1f590>
0x10013:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10017:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1001e:    c7 03 a8 0f 03 00                  	mov dword ptr [ebx], 0x30fa8
0x10024:    75 0d                              	jne 0x10033 <function_10033>
0x10026:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1002a:    83 c4 28                           	add esp, 0x28
0x1002d:    5b                                 	pop ebx
; data inside code section at 0x1002e -- 0x1002f
0x1002e:    e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0x1002f -- 0x10030
; data inside code section at 0x10030 -- 0x10033
0x10030:    ff ff ff                                           |...             |
; function: function_10033 at 0x10033 -- 0x10034
; dynamically linked function: __stack_chk_fail at 0x10034 -- 0x10035
; data inside code section at 0x10035 -- 0x10038
0x10035:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev at 0x10040 -- 0x10047
0x10040:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10045:    eb 09                              	jmp 0x10050 <_ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev>
; data inside code section at 0x10047 -- 0x10050
0x10047:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEED0Ev at 0x10050 -- 0x10085
0x10050:    53                                 	push ebx
0x10051:    83 ec 28                           	sub esp, 0x28
0x10054:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10058:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1005e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10062:    31 c0                              	xor eax, eax
0x10064:    c7 03 c8 0f 03 00                  	mov dword ptr [ebx], 0x30fc8
0x1006a:    8d 43 08                           	lea eax, [ebx + 8]
0x1006d:    c7 43 08 dc 0f 03 00               	mov dword ptr [ebx + 8], 0x30fdc
0x10074:    89 04 24                           	mov dword ptr [esp], eax
0x10077:    e8 74 f5 00 00                     	call 0x1f5f0 <function_1f5f0>
0x1007c:    c7 03 a8 0f 03 00                  	mov dword ptr [ebx], 0x30fa8
0x10082:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x10085 -- 0x10086
0x10085:    e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0x10086 -- 0x10087
; data inside code section at 0x10087 -- 0x100a0
0x10087:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x10097:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x100a0 -- 0x100a1
; data inside code section at 0x100a1 -- 0x100a5
0x100a1:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x100a5 -- 0x100a6
; data inside code section at 0x100a6 -- 0x100a9
0x100a6:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev at 0x100b0 -- 0x100b7
0x100b0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x100b5:    eb 09                              	jmp 0x100c0 <_ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev>
; data inside code section at 0x100b7 -- 0x100c0
0x100b7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEED0Ev at 0x100c0 -- 0x100f5
0x100c0:    53                                 	push ebx
0x100c1:    83 ec 28                           	sub esp, 0x28
0x100c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x100c8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x100ce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x100d2:    31 c0                              	xor eax, eax
0x100d4:    c7 03 a8 10 03 00                  	mov dword ptr [ebx], 0x310a8
0x100da:    8d 43 08                           	lea eax, [ebx + 8]
0x100dd:    c7 43 08 bc 10 03 00               	mov dword ptr [ebx + 8], 0x310bc
0x100e4:    89 04 24                           	mov dword ptr [esp], eax
0x100e7:    e8 74 f5 00 00                     	call 0x1f660 <function_1f660>
0x100ec:    c7 03 88 10 03 00                  	mov dword ptr [ebx], 0x31088
0x100f2:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x100f5 -- 0x100f6
0x100f5:    e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0x100f6 -- 0x100f7
; data inside code section at 0x100f7 -- 0x10110
0x100f7:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x10107:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x10110 -- 0x10111
; data inside code section at 0x10111 -- 0x10115
0x10111:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x10115 -- 0x10116
; data inside code section at 0x10116 -- 0x10119
0x10116:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev at 0x10120 -- 0x1012a
0x10120:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10125:    e9 36 01 01 00                     	jmp 0x20260
; data inside code section at 0x1012a -- 0x10130
0x1012a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev at 0x10130 -- 0x1013a
0x10130:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10135:    e9 26 01 01 00                     	jmp 0x20260
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED1Ev at 0x10140 -- 0x1018e
0x10140:    53                                 	push ebx
0x10141:    83 ec 28                           	sub esp, 0x28
0x10144:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10148:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1014e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10152:    31 c0                              	xor eax, eax
0x10154:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x1015b:    8d 43 08                           	lea eax, [ebx + 8]
0x1015e:    c7 03 a8 10 03 00                  	mov dword ptr [ebx], 0x310a8
0x10164:    c7 43 08 bc 10 03 00               	mov dword ptr [ebx + 8], 0x310bc
0x1016b:    89 04 24                           	mov dword ptr [esp], eax
0x1016e:    e8 7d f5 00 00                     	call 0x1f6f0 <function_1f6f0>
0x10173:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10177:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1017e:    c7 03 88 10 03 00                  	mov dword ptr [ebx], 0x31088
0x10184:    75 0d                              	jne 0x10193 <function_10193>
0x10186:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1018a:    83 c4 28                           	add esp, 0x28
0x1018d:    5b                                 	pop ebx
; data inside code section at 0x1018e -- 0x1018f
0x1018e:    e9                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0x1018f -- 0x10190
; data inside code section at 0x10190 -- 0x10193
0x10190:    ff ff ff                                           |...             |
; function: function_10193 at 0x10193 -- 0x10194
; dynamically linked function: __stack_chk_fail at 0x10194 -- 0x10195
; data inside code section at 0x10195 -- 0x10198
0x10195:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev at 0x101a0 -- 0x101a7
0x101a0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x101a5:    eb 19                              	jmp 0x101c0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev>
; data inside code section at 0x101a7 -- 0x101b0
0x101a7:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev at 0x101b0 -- 0x101b7
0x101b0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x101b5:    eb 09                              	jmp 0x101c0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev>
; data inside code section at 0x101b7 -- 0x101c0
0x101b7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEED0Ev at 0x101c0 -- 0x101fc
0x101c0:    53                                 	push ebx
0x101c1:    83 ec 28                           	sub esp, 0x28
0x101c4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x101c8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x101ce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x101d2:    31 c0                              	xor eax, eax
0x101d4:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x101db:    8d 43 08                           	lea eax, [ebx + 8]
0x101de:    c7 03 a8 10 03 00                  	mov dword ptr [ebx], 0x310a8
0x101e4:    c7 43 08 bc 10 03 00               	mov dword ptr [ebx + 8], 0x310bc
0x101eb:    89 04 24                           	mov dword ptr [esp], eax
0x101ee:    e8 5d f5 00 00                     	call 0x1f750
0x101f3:    c7 03 88 10 03 00                  	mov dword ptr [ebx], 0x31088
0x101f9:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x101fc -- 0x101fd
0x101fc:    e8                                                 |.               |
; dynamically linked function: _ZNSt12out_of_rangeD2Ev at 0x101fd -- 0x101fe
; data inside code section at 0x101fe -- 0x10217
0x101fe:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x1020e:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x10217 -- 0x10218
; data inside code section at 0x10218 -- 0x1021c
0x10218:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x1021c -- 0x1021d
; data inside code section at 0x1021d -- 0x10220
0x1021d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x10220 -- 0x1022a
0x10220:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10225:    e9 36 02 01 00                     	jmp 0x20460 <function_20460>
; data inside code section at 0x1022a -- 0x10230
0x1022a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x10230 -- 0x1023a
0x10230:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10235:    e9 26 02 01 00                     	jmp 0x20460 <function_20460>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev at 0x10240 -- 0x1028e
0x10240:    53                                 	push ebx
0x10241:    83 ec 28                           	sub esp, 0x28
0x10244:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10248:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1024e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10252:    31 c0                              	xor eax, eax
0x10254:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x1025b:    8d 43 08                           	lea eax, [ebx + 8]
0x1025e:    c7 03 68 12 03 00                  	mov dword ptr [ebx], 0x31268
0x10264:    c7 43 08 7c 12 03 00               	mov dword ptr [ebx + 8], 0x3127c
0x1026b:    89 04 24                           	mov dword ptr [esp], eax
0x1026e:    e8 7d f5 00 00                     	call 0x1f7f0 <_ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEC1ERKS6_RKS8_>
0x10273:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10277:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1027e:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x10284:    75 0d                              	jne 0x10293 <function_10293>
0x10286:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1028a:    83 c4 28                           	add esp, 0x28
0x1028d:    5b                                 	pop ebx
; data inside code section at 0x1028e -- 0x1028f
0x1028e:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1028f -- 0x10290
; data inside code section at 0x10290 -- 0x10293
0x10290:    ff ff ff                                           |...             |
; function: function_10293 at 0x10293 -- 0x10294
; dynamically linked function: __stack_chk_fail at 0x10294 -- 0x10295
; data inside code section at 0x10295 -- 0x10298
0x10295:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x102a0 -- 0x102a7
0x102a0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x102a5:    eb 09                              	jmp 0x102b0 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev>
; data inside code section at 0x102a7 -- 0x102b0
0x102a7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev at 0x102b0 -- 0x102e5
0x102b0:    53                                 	push ebx
0x102b1:    83 ec 28                           	sub esp, 0x28
0x102b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x102b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x102be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x102c2:    31 c0                              	xor eax, eax
0x102c4:    c7 03 68 12 03 00                  	mov dword ptr [ebx], 0x31268
0x102ca:    8d 43 08                           	lea eax, [ebx + 8]
0x102cd:    c7 43 08 7c 12 03 00               	mov dword ptr [ebx + 8], 0x3127c
0x102d4:    89 04 24                           	mov dword ptr [esp], eax
0x102d7:    e8 74 f5 00 00                     	call 0x1f850 <function_1f850>
0x102dc:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x102e2:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x102e5 -- 0x102e6
0x102e5:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x102e6 -- 0x102e7
; data inside code section at 0x102e7 -- 0x10300
0x102e7:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x102f7:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x10300 -- 0x10301
; data inside code section at 0x10301 -- 0x10305
0x10301:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x10305 -- 0x10306
; data inside code section at 0x10306 -- 0x10309
0x10306:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x10310 -- 0x10317
0x10310:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10315:    eb 19                              	jmp 0x10330 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x10317 -- 0x10320
0x10317:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x10320 -- 0x10327
0x10320:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10325:    eb 09                              	jmp 0x10330 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev>
; data inside code section at 0x10327 -- 0x10330
0x10327:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev at 0x10330 -- 0x1036c
0x10330:    53                                 	push ebx
0x10331:    83 ec 28                           	sub esp, 0x28
0x10334:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10338:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1033e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10342:    31 c0                              	xor eax, eax
0x10344:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x1034b:    8d 43 08                           	lea eax, [ebx + 8]
0x1034e:    c7 03 68 12 03 00                  	mov dword ptr [ebx], 0x31268
0x10354:    c7 43 08 7c 12 03 00               	mov dword ptr [ebx + 8], 0x3127c
0x1035b:    89 04 24                           	mov dword ptr [esp], eax
0x1035e:    e8 5d f5 00 00                     	call 0x1f8c0 <function_1f8c0>
0x10363:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x10369:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1036c -- 0x1036d
0x1036c:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1036d -- 0x1036e
; data inside code section at 0x1036e -- 0x10387
0x1036e:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x1037e:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x10387 -- 0x10388
; data inside code section at 0x10388 -- 0x1038c
0x10388:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x1038c -- 0x1038d
; data inside code section at 0x1038d -- 0x10390
0x1038d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x10390 -- 0x10397
0x10390:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10395:    eb 19                              	jmp 0x103b0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x10397 -- 0x103a0
0x10397:    89 f6 8d bc 27 00 00 00  00                        |....'....       |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x103a0 -- 0x103a7
0x103a0:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x103a5:    eb 09                              	jmp 0x103b0 <_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev>
; data inside code section at 0x103a7 -- 0x103b0
0x103a7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev at 0x103b0 -- 0x103ec
0x103b0:    53                                 	push ebx
0x103b1:    83 ec 28                           	sub esp, 0x28
0x103b4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x103b8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x103be:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x103c2:    31 c0                              	xor eax, eax
0x103c4:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x103cb:    8d 43 08                           	lea eax, [ebx + 8]
0x103ce:    c7 03 28 0e 03 00                  	mov dword ptr [ebx], 0x30e28
0x103d4:    c7 43 08 3c 0e 03 00               	mov dword ptr [ebx + 8], 0x30e3c
0x103db:    89 04 24                           	mov dword ptr [esp], eax
0x103de:    e8 5d f5 00 00                     	call 0x1f940 <function_1f940>
0x103e3:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x103e9:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x103ec -- 0x103ed
0x103ec:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x103ed -- 0x103ee
; data inside code section at 0x103ee -- 0x10407
0x103ee:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x103fe:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x10407 -- 0x10408
; data inside code section at 0x10408 -- 0x1040c
0x10408:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x1040c -- 0x1040d
; data inside code section at 0x1040d -- 0x10410
0x1040d:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev
; function: _ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x10410 -- 0x1041a
0x10410:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10415:    e9 26 04 01 00                     	jmp 0x20840 <__cxa_begin_catch>
; data inside code section at 0x1041a -- 0x10420
0x1041a:    8d b6 00 00 00 00                                  |......          |
; function: _ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x10420 -- 0x1042a
0x10420:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10425:    e9 16 04 01 00                     	jmp 0x20840 <__cxa_begin_catch>
; section: .text._ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED2Ev
; function: _ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev at 0x10430 -- 0x1047e
0x10430:    53                                 	push ebx
0x10431:    83 ec 28                           	sub esp, 0x28
0x10434:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10438:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1043e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10442:    31 c0                              	xor eax, eax
0x10444:    c7 43 1c 50 0e 03 00               	mov dword ptr [ebx + 0x1c], 0x30e50
0x1044b:    8d 43 08                           	lea eax, [ebx + 8]
0x1044e:    c7 03 28 0e 03 00                  	mov dword ptr [ebx], 0x30e28
0x10454:    c7 43 08 3c 0e 03 00               	mov dword ptr [ebx + 8], 0x30e3c
0x1045b:    89 04 24                           	mov dword ptr [esp], eax
0x1045e:    e8 7d f5 00 00                     	call 0x1f9e0 <function_1f9e0>
0x10463:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10467:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1046e:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x10474:    75 0d                              	jne 0x10483 <function_10483>
0x10476:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1047a:    83 c4 28                           	add esp, 0x28
0x1047d:    5b                                 	pop ebx
; data inside code section at 0x1047e -- 0x1047f
0x1047e:    e9                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1047f -- 0x10480
; data inside code section at 0x10480 -- 0x10483
0x10480:    ff ff ff                                           |...             |
; function: function_10483 at 0x10483 -- 0x10484
; dynamically linked function: __stack_chk_fail at 0x10484 -- 0x10485
; data inside code section at 0x10485 -- 0x10488
0x10485:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev
; function: _ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x10490 -- 0x10497
0x10490:    83 6c 24 04 08                     	sub dword ptr [esp + 4], 8
0x10495:    eb 09                              	jmp 0x104a0 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev>
; data inside code section at 0x10497 -- 0x104a0
0x10497:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev at 0x104a0 -- 0x104d5
0x104a0:    53                                 	push ebx
0x104a1:    83 ec 28                           	sub esp, 0x28
0x104a4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x104a8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x104ae:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x104b2:    31 c0                              	xor eax, eax
0x104b4:    c7 03 28 0e 03 00                  	mov dword ptr [ebx], 0x30e28
0x104ba:    8d 43 08                           	lea eax, [ebx + 8]
0x104bd:    c7 43 08 3c 0e 03 00               	mov dword ptr [ebx + 8], 0x30e3c
0x104c4:    89 04 24                           	mov dword ptr [esp], eax
0x104c7:    e8 74 f5 00 00                     	call 0x1fa40 <function_1fa40>
0x104cc:    c7 03 08 78 02 00                  	mov dword ptr [ebx], 0x27808
0x104d2:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x104d5 -- 0x104d6
0x104d5:    e8                                                 |.               |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x104d6 -- 0x104d7
; data inside code section at 0x104d7 -- 0x104f0
0x104d7:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 0d   |....D$.e3.....u.|
0x104e7:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x104f0 -- 0x104f1
; data inside code section at 0x104f1 -- 0x104f5
0x104f1:    ff ff ff e8                                        |....            |
; dynamically linked function: __stack_chk_fail at 0x104f5 -- 0x104f6
; data inside code section at 0x104f6 -- 0x104f9
0x104f6:    ff ff ff                                           |...             |
; section: .text._ZN5boost9exceptionD0Ev
; function: _ZN5boost9exceptionD0Ev at 0x10500 -- 0x10531
0x10500:    53                                 	push ebx
0x10501:    83 ec 28                           	sub esp, 0x28
0x10504:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10508:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1050e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10512:    31 c0                              	xor eax, eax
0x10514:    89 1c 24                           	mov dword ptr [esp], ebx
0x10517:    e8 94 f5 00 00                     	call 0x1fab0 <function_1fab0>
0x1051c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10520:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10527:    75 0d                              	jne 0x10536 <function_10536>
0x10529:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1052d:    83 c4 28                           	add esp, 0x28
0x10530:    5b                                 	pop ebx
; data inside code section at 0x10531 -- 0x10532
0x10531:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10532 -- 0x10533
; data inside code section at 0x10533 -- 0x10536
0x10533:    ff ff ff                                           |...             |
; function: function_10536 at 0x10536 -- 0x10537
; dynamically linked function: __stack_chk_fail at 0x10537 -- 0x10538
; data inside code section at 0x10538 -- 0x1053b
0x10538:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail12shared_countD2Ev
; function: _ZN5boost6detail12shared_countD1Ev at 0x10540 -- 0x105c5
0x10540:    83 ec 2c                           	sub esp, 0x2c
0x10543:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10549:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1054d:    31 c0                              	xor eax, eax
0x1054f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x10553:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x10557:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1055b:    8b 18                              	mov ebx, dword ptr [eax]
0x1055d:    85 db                              	test ebx, ebx
0x1055f:    74 11                              	je 0x10572 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x10561:    be ff ff ff ff                     	mov esi, 0xffffffff
0x10566:    89 f0                              	mov eax, esi
0x10568:    f0 0f c1 43 04                     	lock xadd dword ptr [ebx + 4], eax
0x1056d:    83 f8 01                           	cmp eax, 1
0x10570:    74 1e                              	je 0x10590 <_ZN5boost6detail12shared_countD1Ev+0x50>
0x10572:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10576:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1057d:    75 46                              	jne 0x105c5 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x1057f:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x10583:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x10587:    83 c4 2c                           	add esp, 0x2c
0x1058a:    c3                                 	ret 
; data inside code section at 0x1058b -- 0x10590
0x1058b:    90 8d 74 26 00                                     |..t&.           |
0x10590:    8b 03                              	mov eax, dword ptr [ebx]
0x10592:    89 1c 24                           	mov dword ptr [esp], ebx
0x10595:    ff 50 08                           	call dword ptr [eax + 8]
0x10598:    f0 0f c1 73 08                     	lock xadd dword ptr [ebx + 8], esi
0x1059d:    83 fe 01                           	cmp esi, 1
0x105a0:    75 d0                              	jne 0x10572 <_ZN5boost6detail12shared_countD1Ev+0x32>
0x105a2:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x105a6:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x105ad:    75 16                              	jne 0x105c5 <_ZN5boost6detail12shared_countD1Ev+0x83>
0x105af:    8b 03                              	mov eax, dword ptr [ebx]
0x105b1:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x105b5:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x105b9:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x105bd:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x105c0:    83 c4 2c                           	add esp, 0x2c
0x105c3:    ff e0                              	jmp eax
; data inside code section at 0x105c5 -- 0x105c6
0x105c5:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x105c6 -- 0x105c7
; data inside code section at 0x105c7 -- 0x105ca
0x105c7:    ff ff ff                                           |...             |
; section: .text._ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED2Ev
; function: _ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev at 0x105d0 -- 0x10600
0x105d0:    83 ec 1c                           	sub esp, 0x1c
0x105d3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x105da:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x105de:    31 d2                              	xor edx, edx
0x105e0:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x105e4:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x105e8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x105ef:    75 0f                              	jne 0x10600 <_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev+0x2b>
0x105f1:    83 c0 04                           	add eax, 4
0x105f4:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x105f8:    83 c4 1c                           	add esp, 0x1c
0x105fb:    e9 10 05 01 00                     	jmp 0x20b10
; data inside code section at 0x10600 -- 0x10601
0x10600:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10601 -- 0x10602
; data inside code section at 0x10602 -- 0x10605
0x10602:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEE7disposeEv at 0x10610 -- 0x10631
0x10610:    53                                 	push ebx
0x10611:    83 ec 28                           	sub esp, 0x28
0x10614:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1061a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1061e:    31 c0                              	xor eax, eax
0x10620:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x10624:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x10627:    85 db                              	test ebx, ebx
0x10629:    74 35                              	je 0x10660 <function_10660>
0x1062b:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1062e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10631 -- 0x10632
0x10631:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x10632 -- 0x10633
; data inside code section at 0x10633 -- 0x10657
0x10633:    ff ff ff 8d 43 04 89 04  24 e8 0f 05 01 00 8b 44   |....C...$......D|
0x10643:    24 1c 65 33 05 14 00 00  00 75 24 89 5c 24 30 83   |$.e3.....u$.\$0.|
0x10653:    c4 28 5b e9                                        |.([.            |
; dynamically linked function: _ZdlPv at 0x10657 -- 0x10658
; data inside code section at 0x10658 -- 0x10660
0x10658:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_10660 at 0x10660 -- 0x10672
0x10660:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10664:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1066b:    75 05                              	jne 0x10672 <function_10660+0x11>
0x1066d:    83 c4 28                           	add esp, 0x28
0x10670:    5b                                 	pop ebx
0x10671:    c3                                 	ret 
; data inside code section at 0x10672 -- 0x10673
0x10672:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10673 -- 0x10674
; data inside code section at 0x10674 -- 0x10677
0x10674:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEE7disposeEv at 0x10680 -- 0x106a1
0x10680:    53                                 	push ebx
0x10681:    83 ec 28                           	sub esp, 0x28
0x10684:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1068a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1068e:    31 c0                              	xor eax, eax
0x10690:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x10694:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x10697:    85 db                              	test ebx, ebx
0x10699:    74 35                              	je 0x106d0 <function_106d0>
0x1069b:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1069e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x106a1 -- 0x106a2
0x106a1:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x106a2 -- 0x106a3
; data inside code section at 0x106a3 -- 0x106c7
0x106a3:    ff ff ff 8d 43 04 89 04  24 e8 0f 05 01 00 8b 44   |....C...$......D|
0x106b3:    24 1c 65 33 05 14 00 00  00 75 24 89 5c 24 30 83   |$.e3.....u$.\$0.|
0x106c3:    c4 28 5b e9                                        |.([.            |
; dynamically linked function: _ZdlPv at 0x106c7 -- 0x106c8
; data inside code section at 0x106c8 -- 0x106d0
0x106c8:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_106d0 at 0x106d0 -- 0x106e2
0x106d0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x106d4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x106db:    75 05                              	jne 0x106e2 <function_106d0+0x11>
0x106dd:    83 c4 28                           	add esp, 0x28
0x106e0:    5b                                 	pop ebx
0x106e1:    c3                                 	ret 
; data inside code section at 0x106e2 -- 0x106e3
0x106e2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x106e3 -- 0x106e4
; data inside code section at 0x106e4 -- 0x106e7
0x106e4:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x106f0 -- 0x10736
0x106f0:    53                                 	push ebx
0x106f1:    83 ec 38                           	sub esp, 0x38
0x106f4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x106fa:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x106fe:    31 c0                              	xor eax, eax
0x10700:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x10704:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x10707:    85 db                              	test ebx, ebx
0x10709:    74 35                              	je 0x10740 <function_10740>
0x1070b:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1070e:    89 04 24                           	mov dword ptr [esp], eax
0x10711:    e8 1a 05 01 00                     	call 0x20c30 <function_20c30>
0x10716:    8d 43 04                           	lea eax, [ebx + 4]
0x10719:    89 04 24                           	mov dword ptr [esp], eax
0x1071c:    e8 0f 05 01 00                     	call 0x20c30 <function_20c30>
0x10721:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x10725:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1072c:    75 24                              	jne 0x10752 <function_10752>
0x1072e:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x10732:    83 c4 38                           	add esp, 0x38
0x10735:    5b                                 	pop ebx
; data inside code section at 0x10736 -- 0x10737
0x10736:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10737 -- 0x10738
; data inside code section at 0x10738 -- 0x10740
0x10738:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_10740 at 0x10740 -- 0x10752
0x10740:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x10744:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1074b:    75 05                              	jne 0x10752 <function_10752>
0x1074d:    83 c4 38                           	add esp, 0x38
0x10750:    5b                                 	pop ebx
0x10751:    c3                                 	ret 
; function: function_10752 at 0x10752 -- 0x10753
; dynamically linked function: __stack_chk_fail at 0x10753 -- 0x10754
; data inside code section at 0x10754 -- 0x10758
0x10754:    ff ff ff 83                                        |....            |
; function: function_10758 at 0x10758 -- 0x10759
0x10758:    c3                                 	ret 
; data inside code section at 0x10759 -- 0x10760
0x10759:    04 89 44 24 1c 89 1c                               |..D$...         |
; function: function_10760 at 0x10760 -- 0x10765
0x10760:    24 e8                              	and al, 0xe8
0x10762:    ca 04 01                           	retf 0x104
; data inside code section at 0x10765 -- 0x1076e
0x10765:    00 8b 44 24 1c 89 04 24  e8                        |..D$...$.       |
; dynamically linked function: _Unwind_Resume at 0x1076e -- 0x1076f
; data inside code section at 0x1076f -- 0x10772
0x1076f:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x10780 -- 0x107c6
0x10780:    53                                 	push ebx
0x10781:    83 ec 38                           	sub esp, 0x38
0x10784:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1078a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1078e:    31 c0                              	xor eax, eax
0x10790:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x10794:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x10797:    85 db                              	test ebx, ebx
0x10799:    74 35                              	je 0x107d0 <function_107d0>
0x1079b:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1079e:    89 04 24                           	mov dword ptr [esp], eax
0x107a1:    e8 1a 05 01 00                     	call 0x20cc0 <function_20cc0>
0x107a6:    8d 43 04                           	lea eax, [ebx + 4]
0x107a9:    89 04 24                           	mov dword ptr [esp], eax
0x107ac:    e8 0f 05 01 00                     	call 0x20cc0 <function_20cc0>
0x107b1:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x107b5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x107bc:    75 24                              	jne 0x107e2 <function_107e2>
0x107be:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x107c2:    83 c4 38                           	add esp, 0x38
0x107c5:    5b                                 	pop ebx
; data inside code section at 0x107c6 -- 0x107c7
0x107c6:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x107c7 -- 0x107c8
; data inside code section at 0x107c8 -- 0x107d0
0x107c8:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_107d0 at 0x107d0 -- 0x107e2
0x107d0:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x107d4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x107db:    75 05                              	jne 0x107e2 <function_107e2>
0x107dd:    83 c4 38                           	add esp, 0x38
0x107e0:    5b                                 	pop ebx
0x107e1:    c3                                 	ret 
; function: function_107e2 at 0x107e2 -- 0x107e3
; dynamically linked function: __stack_chk_fail at 0x107e3 -- 0x107e4
; data inside code section at 0x107e4 -- 0x107e8
0x107e4:    ff ff ff 83                                        |....            |
; function: function_107e8 at 0x107e8 -- 0x107e9
0x107e8:    c3                                 	ret 
; data inside code section at 0x107e9 -- 0x107f0
0x107e9:    04 89 44 24 1c 89 1c                               |..D$...         |
; function: function_107f0 at 0x107f0 -- 0x107f5
0x107f0:    24 e8                              	and al, 0xe8
0x107f2:    ca 04 01                           	retf 0x104
; data inside code section at 0x107f5 -- 0x107fe
0x107f5:    00 8b 44 24 1c 89 04 24  e8                        |..D$...$.       |
; dynamically linked function: _Unwind_Resume at 0x107fe -- 0x107ff
; data inside code section at 0x107ff -- 0x10802
0x107ff:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x10810 -- 0x10856
0x10810:    53                                 	push ebx
0x10811:    83 ec 38                           	sub esp, 0x38
0x10814:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1081a:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1081e:    31 c0                              	xor eax, eax
0x10820:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x10824:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x10827:    85 db                              	test ebx, ebx
0x10829:    74 35                              	je 0x10860 <function_10860>
0x1082b:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1082e:    89 04 24                           	mov dword ptr [esp], eax
0x10831:    e8 1a 05 01 00                     	call 0x20d50 <function_20d50>
0x10836:    8d 43 04                           	lea eax, [ebx + 4]
0x10839:    89 04 24                           	mov dword ptr [esp], eax
0x1083c:    e8 0f 05 01 00                     	call 0x20d50 <function_20d50>
0x10841:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x10845:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1084c:    75 24                              	jne 0x10872 <function_10872>
0x1084e:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x10852:    83 c4 38                           	add esp, 0x38
0x10855:    5b                                 	pop ebx
; data inside code section at 0x10856 -- 0x10857
0x10856:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x10857 -- 0x10858
; data inside code section at 0x10858 -- 0x10860
0x10858:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_10860 at 0x10860 -- 0x10872
0x10860:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x10864:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1086b:    75 05                              	jne 0x10872 <function_10872>
0x1086d:    83 c4 38                           	add esp, 0x38
0x10870:    5b                                 	pop ebx
0x10871:    c3                                 	ret 
; function: function_10872 at 0x10872 -- 0x10873
; dynamically linked function: __stack_chk_fail at 0x10873 -- 0x10874
; data inside code section at 0x10874 -- 0x10878
0x10874:    ff ff ff 83                                        |....            |
; function: function_10878 at 0x10878 -- 0x10879
0x10878:    c3                                 	ret 
; data inside code section at 0x10879 -- 0x10880
0x10879:    04 89 44 24 1c 89 1c                               |..D$...         |
; function: function_10880 at 0x10880 -- 0x10885
0x10880:    24 e8                              	and al, 0xe8
0x10882:    ca 04 01                           	retf 0x104
; data inside code section at 0x10885 -- 0x1088e
0x10885:    00 8b 44 24 1c 89 04 24  e8                        |..D$...$.       |
; dynamically linked function: _Unwind_Resume at 0x1088e -- 0x1088f
; data inside code section at 0x1088f -- 0x10892
0x1088f:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEE7disposeEv at 0x108a0 -- 0x108e6
0x108a0:    53                                 	push ebx
0x108a1:    83 ec 38                           	sub esp, 0x38
0x108a4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x108aa:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x108ae:    31 c0                              	xor eax, eax
0x108b0:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x108b4:    8b 58 0c                           	mov ebx, dword ptr [eax + 0xc]
0x108b7:    85 db                              	test ebx, ebx
0x108b9:    74 35                              	je 0x108f0 <function_108f0>
0x108bb:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x108be:    89 04 24                           	mov dword ptr [esp], eax
0x108c1:    e8 1a 05 01 00                     	call 0x20de0 <function_20de0>
0x108c6:    8d 43 04                           	lea eax, [ebx + 4]
0x108c9:    89 04 24                           	mov dword ptr [esp], eax
0x108cc:    e8 0f 05 01 00                     	call 0x20de0 <function_20de0>
0x108d1:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x108d5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x108dc:    75 24                              	jne 0x10902 <function_10902>
0x108de:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x108e2:    83 c4 38                           	add esp, 0x38
0x108e5:    5b                                 	pop ebx
; data inside code section at 0x108e6 -- 0x108e7
0x108e6:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x108e7 -- 0x108e8
; data inside code section at 0x108e8 -- 0x108f0
0x108e8:    ff ff ff 90 8d 74 26 00                            |.....t&.        |
; function: function_108f0 at 0x108f0 -- 0x10902
0x108f0:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x108f4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x108fb:    75 05                              	jne 0x10902 <function_10902>
0x108fd:    83 c4 38                           	add esp, 0x38
0x10900:    5b                                 	pop ebx
0x10901:    c3                                 	ret 
; function: function_10902 at 0x10902 -- 0x10903
; dynamically linked function: __stack_chk_fail at 0x10903 -- 0x10904
; data inside code section at 0x10904 -- 0x10908
0x10904:    ff ff ff 83                                        |....            |
; function: function_10908 at 0x10908 -- 0x10909
0x10908:    c3                                 	ret 
; data inside code section at 0x10909 -- 0x10910
0x10909:    04 89 44 24 1c 89 1c                               |..D$...         |
; function: function_10910 at 0x10910 -- 0x10915
0x10910:    24 e8                              	and al, 0xe8
0x10912:    ca 04 01                           	retf 0x104
; data inside code section at 0x10915 -- 0x1091e
0x10915:    00 8b 44 24 1c 89 04 24  e8                        |..D$...$.       |
; dynamically linked function: _Unwind_Resume at 0x1091e -- 0x1091f
; data inside code section at 0x1091f -- 0x10922
0x1091f:    ff ff ff                                           |...             |
; section: .text._ZN5boost5mutexD2Ev
; function: _ZN5boost5mutexD1Ev at 0x10930 -- 0x10946
0x10930:    83 ec 2c                           	sub esp, 0x2c
0x10933:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10939:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1093d:    31 c0                              	xor eax, eax
0x1093f:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x10943:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10946 -- 0x10947
0x10946:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x10947 -- 0x10948
; data inside code section at 0x10948 -- 0x1094a
0x10948:    ff ff                                              |..              |
; function: function_1094a at 0x1094a -- 0x10961
0x1094a:    ff 85 c0 75 12 8b                  	inc dword ptr [ebp - 0x74ed8a40]
0x10950:    44                                 	inc esp
0x10951:    24 1c                              	and al, 0x1c
0x10953:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1095a:    75 29                              	jne 0x10985 <function_10985>
0x1095c:    83 c4 2c                           	add esp, 0x2c
0x1095f:    90                                 	nop 
0x10960:    c3                                 	ret 
; data inside code section at 0x10961 -- 0x10981
0x10961:    c7 44 24 0c 91 b8 02 00  c7 44 24 08 2f 00 00 00   |.D$......D$./...|
0x10971:    c7 44 24 04 c8 d4 00 00  c7 04 24 00 9f 00 00 e8   |.D$.......$.....|
; dynamically linked function: __assert_fail at 0x10981 -- 0x10982
; data inside code section at 0x10982 -- 0x10985
0x10982:    ff ff ff                                           |...             |
; function: function_10985 at 0x10985 -- 0x10986
; dynamically linked function: __stack_chk_fail at 0x10986 -- 0x10987
; data inside code section at 0x10987 -- 0x1098a
0x10987:    ff ff ff                                           |...             |
; section: .text._ZN5boost18condition_variableD2Ev
; function: _ZN5boost18condition_variableD1Ev at 0x10990 -- 0x109a7
0x10990:    53                                 	push ebx
0x10991:    83 ec 28                           	sub esp, 0x28
0x10994:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10998:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1099e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x109a2:    31 c0                              	xor eax, eax
0x109a4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x109a7 -- 0x109a8
0x109a7:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x109a8 -- 0x109a9
; data inside code section at 0x109a9 -- 0x109ab
0x109a9:    ff ff                                              |..              |
; function: function_109ab at 0x109ab -- 0x109b2
0x109ab:    ff 85 c0 75 21 83                  	inc dword ptr [ebp - 0x7cde8a40]
0x109b1:    c3                                 	ret 
; data inside code section at 0x109b2 -- 0x109b7
0x109b2:    18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x109b7 -- 0x109b8
; data inside code section at 0x109b8 -- 0x109ba
0x109b8:    ff ff                                              |..              |
; function: function_109ba at 0x109ba -- 0x109d1
0x109ba:    ff 85 c0 75 1c 8b                  	inc dword ptr [ebp - 0x74e38a40]
0x109c0:    44                                 	inc esp
0x109c1:    24 1c                              	and al, 0x1c
0x109c3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x109ca:    75 0a                              	jne 0x109d6 <function_109ba+0x16>
0x109cc:    83 c4 28                           	add esp, 0x28
0x109cf:    5b                                 	pop ebx
0x109d0:    c3                                 	ret 
; function: function_109d1 at 0x109d1 -- 0x109d6
0x109d1:    e8 fc e0 00 00                     	call 0x1ead2 <function_1ead2>
; data inside code section at 0x109d6 -- 0x109d7
0x109d6:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x109d7 -- 0x109d8
; data inside code section at 0x109d8 -- 0x109fb
0x109d8:    ff ff ff c7 44 24 0c 60  b8 02 00 c7 44 24 08 2f   |....D$.`....D$./|
0x109e8:    00 00 00 c7 44 24 04 f4  d4 00 00 c7 04 24 51 9f   |....D$.......$Q.|
0x109f8:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x109fb -- 0x109fc
; data inside code section at 0x109fc -- 0x109ff
0x109fc:    ff ff ff                                           |...             |
; section: .text._ZN5boost17bad_function_callC2Ev
; function: _ZN5boost17bad_function_callC1Ev at 0x10a00 -- 0x10a32
0x10a00:    83 ec 2c                           	sub esp, 0x2c
0x10a03:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x10a07:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x10a0b:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x10a0f:    8d 5c 24 14                        	lea ebx, [esp + 0x14]
0x10a13:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10a19:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10a1d:    31 c0                              	xor eax, eax
0x10a1f:    8d 44 24 1b                        	lea eax, [esp + 0x1b]
0x10a23:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x10a27:    c7 44 24 04 d1 9f 00 00            	mov dword ptr [esp + 4], 0x9fd1 ; "call to empty boost::function"
0x10a2f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x10a32 -- 0x10a33
0x10a32:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x10a33 -- 0x10a34
; data inside code section at 0x10a34 -- 0x10a3f
0x10a34:    ff ff ff 89 5c 24 04 89  34 24 e8                  |....\$..4$.     |
; dynamically linked function: _ZNSt13runtime_errorC2ERKSs at 0x10a3f -- 0x10a40
; data inside code section at 0x10a40 -- 0x10a47
0x10a40:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZNSsD1Ev at 0x10a47 -- 0x10a48
; data inside code section at 0x10a48 -- 0x10a4a
0x10a48:    ff ff                                              |..              |
; function: function_10a4a at 0x10a4a -- 0x10a6a
0x10a4a:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x10a50:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x10a56:    c7 06 38 13 03 00                  	mov dword ptr [esi], 0x31338
0x10a5c:    75 0c                              	jne 0x10a6a <function_10a4a+0x1f>
0x10a5e:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x10a62:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x10a66:    83 c4 2c                           	add esp, 0x2c
0x10a69:    c3                                 	ret 
; data inside code section at 0x10a6a -- 0x10a6b
0x10a6a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10a6b -- 0x10a6c
; data inside code section at 0x10a6c -- 0x10a75
0x10a6c:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x10a75 -- 0x10a76
; data inside code section at 0x10a76 -- 0x10a7d
0x10a76:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x10a7d -- 0x10a7e
; data inside code section at 0x10a7e -- 0x10a81
0x10a7e:    ff ff ff                                           |...             |
; section: .text._ZN5CNode12AbortMessageEv
; function: _ZN5CNode12AbortMessageEv at 0x10a90 -- 0x10ab8
0x10a90:    56                                 	push esi
0x10a91:    53                                 	push ebx
0x10a92:    83 ec 24                           	sub esp, 0x24
0x10a95:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10a99:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10a9f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10aa3:    31 c0                              	xor eax, eax
0x10aa5:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10aa8:    8d 73 60                           	lea esi, [ebx + 0x60]
0x10aab:    c7 43 18 00 00 00 00               	mov dword ptr [ebx + 0x18], 0
0x10ab2:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x10ab5:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x10ab8 -- 0x10ab9
0x10ab8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x10ab9 -- 0x10aba
; data inside code section at 0x10aba -- 0x10abc
0x10aba:    ff ff                                              |..              |
; function: function_10abc at 0x10abc -- 0x10ad6
0x10abc:    ff 85 c0 75 7e 8b                  	inc dword ptr [ebp - 0x74818a40]
0x10ac2:    83 b0 00 00 00 83 e8               	xor dword ptr [eax - 0x7d000000], 0xffffffe8
0x10ac9:    01 85 c0 89 83 b0                  	add dword ptr [ebp - 0x4f7c7640], eax
0x10acf:    00 00                              	add byte ptr [eax], al
0x10ad1:    00 74 3c 83                        	add byte ptr [esp + edi - 0x7d], dh
0x10ad5:    c3                                 	ret 
; data inside code section at 0x10ad6 -- 0x10adb
0x10ad6:    78 89 1c 24 e8                                     |x..$.           |
; dynamically linked function: pthread_cond_signal at 0x10adb -- 0x10adc
; data inside code section at 0x10adc -- 0x10ae7
0x10adc:    ff ff ff 85 c0 75 66 89  34 24 e8                  |.....uf.4$.     |
; dynamically linked function: pthread_mutex_unlock at 0x10ae7 -- 0x10ae8
; data inside code section at 0x10ae8 -- 0x10af1
0x10ae8:    ff ff ff 85 c0 75 5f 80  3d                        |.....u_.=       |
; dynamically linked function: fDebug at 0x10af1 -- 0x10b0b
; data inside code section at 0x10b0b -- 0x10b10
0x10b0b:    90 8d 74 26 00                                     |..t&.           |
; function: function_10b10 at 0x10b10 -- 0x10b19
0x10b10:    c6 83 a8 00 00 00 00               	mov byte ptr [ebx + 0xa8], 0
0x10b17:    eb bb                              	jmp 0x10ad4
; data inside code section at 0x10b19 -- 0x10b3b
0x10b19:    8d b4 26 00 00 00 00 8b  44 24 1c 65 33 05 14 00   |..&.....D$.e3...|
0x10b29:    00 00 75 17 c7 44 24 30  ef 9f 00 00 83 c4 24 5b   |..u..D$0......$[|
0x10b39:    5e e9                                              |^.              |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x10b3b -- 0x10b3c
; data inside code section at 0x10b3c -- 0x10b44
0x10b3c:    ff ff ff e8 be df 00 00                            |........        |
; function: function_10b44 at 0x10b44 -- 0x10b45
; dynamically linked function: __stack_chk_fail at 0x10b45 -- 0x10b46
; data inside code section at 0x10b46 -- 0x10b55
0x10b46:    ff ff ff e8 20 e1 00 00  66 90 e8 e1 df 00 00      |.... ...f...... |
; section: .text._ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED2Ev
; function: _ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev at 0x10b60 -- 0x10ba0
0x10b60:    53                                 	push ebx
0x10b61:    83 ec 28                           	sub esp, 0x28
0x10b64:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10b68:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10b6e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10b72:    31 c0                              	xor eax, eax
0x10b74:    8b 03                              	mov eax, dword ptr [ebx]
0x10b76:    85 c0                              	test eax, eax
0x10b78:    74 0c                              	je 0x10b86 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
0x10b7a:    8b 10                              	mov edx, dword ptr [eax]
0x10b7c:    89 04 24                           	mov dword ptr [esp], eax
0x10b7f:    ff 52 10                           	call dword ptr [edx + 0x10]
0x10b82:    84 c0                              	test al, al
0x10b84:    75 12                              	jne 0x10b98 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x38>
0x10b86:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10b8a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10b91:    75 0d                              	jne 0x10ba0 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x3e>
0x10b93:    83 c4 28                           	add esp, 0x28
0x10b96:    5b                                 	pop ebx
0x10b97:    c3                                 	ret 
0x10b98:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x10b9e:    eb e6                              	jmp 0x10b86 <_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev+0x26>
; data inside code section at 0x10ba0 -- 0x10ba1
0x10ba0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10ba1 -- 0x10ba2
; data inside code section at 0x10ba2 -- 0x10ba5
0x10ba2:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_
; function: _ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_ at 0x10bb0 -- 0x10cb4
0x10bb0:    83 ec 3c                           	sub esp, 0x3c
0x10bb3:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x10bb7:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x10bbb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10bc1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10bc5:    31 c0                              	xor eax, eax
0x10bc7:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x10bcb:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x10bcf:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x10bd3:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x10bd6:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x10bda:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x10be2:    85 c0                              	test eax, eax
0x10be4:    0f 84 c6 00 00 00                  	je 0x10cb0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x100>
0x10bea:    8b 10                              	mov edx, dword ptr [eax]
0x10bec:    8d 6c 24 18                        	lea ebp, [esp + 0x18]
0x10bf0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10bf4:    89 2c 24                           	mov dword ptr [esp], ebp
0x10bf7:    ff 52 14                           	call dword ptr [edx + 0x14]
0x10bfa:    83 ec 04                           	sub esp, 4
0x10bfd:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x10c01:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x10c05:    85 c0                              	test eax, eax
0x10c07:    74 08                              	je 0x10c11 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x61>
0x10c09:    8b 10                              	mov edx, dword ptr [eax]
0x10c0b:    89 04 24                           	mov dword ptr [esp], eax
0x10c0e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x10c11:    85 ff                              	test edi, edi
0x10c13:    89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x10c17:    74 08                              	je 0x10c21 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x71>
0x10c19:    8b 07                              	mov eax, dword ptr [edi]
0x10c1b:    89 3c 24                           	mov dword ptr [esp], edi
0x10c1e:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x10c21:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x10c25:    85 c0                              	test eax, eax
0x10c27:    74 0c                              	je 0x10c35 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
0x10c29:    8b 10                              	mov edx, dword ptr [eax]
0x10c2b:    89 04 24                           	mov dword ptr [esp], eax
0x10c2e:    ff 52 10                           	call dword ptr [edx + 0x10]
0x10c31:    84 c0                              	test al, al
0x10c33:    75 6b                              	jne 0x10ca0 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xf0>
0x10c35:    8b 7c 24 14                        	mov edi, dword ptr [esp + 0x14]
0x10c39:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x10c3c:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x10c3f:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x10c42:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x10c45:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x10c48:    89 46 08                           	mov dword ptr [esi + 8], eax
0x10c4b:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x10c4e:    85 c0                              	test eax, eax
0x10c50:    74 08                              	je 0x10c5a <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xaa>
0x10c52:    8b 10                              	mov edx, dword ptr [eax]
0x10c54:    89 04 24                           	mov dword ptr [esp], eax
0x10c57:    ff 52 10                           	call dword ptr [edx + 0x10]
0x10c5a:    85 ff                              	test edi, edi
0x10c5c:    89 7e 04                           	mov dword ptr [esi + 4], edi
0x10c5f:    74 08                              	je 0x10c69 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xb9>
0x10c61:    8b 07                              	mov eax, dword ptr [edi]
0x10c63:    89 3c 24                           	mov dword ptr [esp], edi
0x10c66:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x10c69:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x10c6d:    85 c0                              	test eax, eax
0x10c6f:    74 08                              	je 0x10c79 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0xc9>
0x10c71:    8b 10                              	mov edx, dword ptr [eax]
0x10c73:    89 04 24                           	mov dword ptr [esp], eax
0x10c76:    ff 52 10                           	call dword ptr [edx + 0x10]
0x10c79:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10c7d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10c84:    75 2e                              	jne 0x10cb4 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x102>
0x10c86:    8b 5c 24 2c                        	mov ebx, dword ptr [esp + 0x2c]
0x10c8a:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x10c8e:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x10c92:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x10c96:    83 c4 3c                           	add esp, 0x3c
0x10c99:    c3                                 	ret 
; data inside code section at 0x10c9a -- 0x10ca0
0x10c9a:    8d b6 00 00 00 00                                  |......          |
0x10ca0:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x10ca8:    eb 8b                              	jmp 0x10c35 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x85>
; data inside code section at 0x10caa -- 0x10cb0
0x10caa:    8d b6 00 00 00 00                                  |......          |
0x10cb0:    31 ff                              	xor edi, edi
0x10cb2:    eb 85                              	jmp 0x10c39 <_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_+0x89>
; data inside code section at 0x10cb4 -- 0x10cb5
0x10cb4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10cb5 -- 0x10cb6
; data inside code section at 0x10cb6 -- 0x10cba
0x10cb6:    ff ff ff 89                                        |....            |
; function: function_10cba at 0x10cba -- 0x10cbb
0x10cba:    c3                                 	ret 
; data inside code section at 0x10cbb -- 0x10cc3
0x10cbb:    89 2c 24 e8 4d 0a 01 00                            |.,$.M...        |
; function: function_10cc3 at 0x10cc3 -- 0x10cc4
; data inside code section at 0x10cc4 -- 0x10cd3
0x10cc4:    44 24 14 89 04 24 e8 41  0a 01 00 89 1c 24 e8      |D$...$.A.....$. |
; dynamically linked function: _Unwind_Resume at 0x10cd3 -- 0x10cd4
; data inside code section at 0x10cd4 -- 0x10cd7
0x10cd4:    ff ff ff                                           |...             |
; function: function_10cd7 at 0x10cd7 -- 0x10cdb
0x10cd7:    89 c3                              	mov ebx, eax
0x10cd9:    eb e8                              	jmp 0x10cc3 <function_10cc3>
; section: .text._ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorISt13runtime_errorEC1ERKS3_ at 0x10ce0 -- 0x10cfc
0x10ce0:    56                                 	push esi
0x10ce1:    53                                 	push ebx
0x10ce2:    83 ec 24                           	sub esp, 0x24
0x10ce5:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x10ce9:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x10ced:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10cf3:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10cf7:    31 c0                              	xor eax, eax
0x10cf9:    8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x10cfc -- 0x10cfe
0x10cfc:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt13runtime_error at 0x10cfe -- 0x10d0c
; data inside code section at 0x10d0c -- 0x10d0d
0x10d0c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x10d0d -- 0x10d0e
; data inside code section at 0x10d0e -- 0x10d10
0x10d0e:    ff ff                                              |..              |
; function: function_10d10 at 0x10d10 -- 0x10d5c
0x10d10:    ff 8b 46 0c c7 43                  	dec dword ptr [ebx + 0x43c70c46]
0x10d16:    08 18                              	or byte ptr [eax], bl
0x10d18:    0e                                 	push cs
0x10d19:    03 00                              	add eax, dword ptr [eax]
0x10d1b:    85 c0                              	test eax, eax
0x10d1d:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x10d20:    74 08                              	je 0x10d2a <function_10d10+0x1a>
0x10d22:    8b 10                              	mov edx, dword ptr [eax]
0x10d24:    89 04 24                           	mov dword ptr [esp], eax
0x10d27:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x10d2a:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x10d2d:    c7 43 08 fc 0e 03 00               	mov dword ptr [ebx + 8], 0x30efc
0x10d34:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x10d37:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x10d3a:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x10d3d:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x10d40:    c7 03 e8 0e 03 00                  	mov dword ptr [ebx], 0x30ee8
0x10d46:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x10d49:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10d4d:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x10d54:    75 06                              	jne 0x10d5c <function_10d10+0x4b>
0x10d56:    83 c4 24                           	add esp, 0x24
0x10d59:    5b                                 	pop ebx
0x10d5a:    5e                                 	pop esi
0x10d5b:    c3                                 	ret 
; data inside code section at 0x10d5c -- 0x10d5d
0x10d5c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10d5d -- 0x10d5e
; data inside code section at 0x10d5e -- 0x10d67
0x10d5e:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt13runtime_errorD2Ev at 0x10d67 -- 0x10d68
; data inside code section at 0x10d68 -- 0x10d6f
0x10d68:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x10d6f -- 0x10d70
; data inside code section at 0x10d70 -- 0x10d79
0x10d70:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x10d79 -- 0x10d7a
; data inside code section at 0x10d7a -- 0x10d81
0x10d7a:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x10d81 -- 0x10d82
; data inside code section at 0x10d82 -- 0x10d85
0x10d82:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv at 0x10d90 -- 0x10d97
0x10d90:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x10d95:    eb 09                              	jmp 0x10da0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv>
; data inside code section at 0x10d97 -- 0x10da0
0x10d97:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEE7rethrowEv at 0x10da0 -- 0x10dbc
0x10da0:    56                                 	push esi
0x10da1:    53                                 	push ebx
0x10da2:    83 ec 24                           	sub esp, 0x24
0x10da5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x10da9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10daf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10db3:    31 c0                              	xor eax, eax
0x10db5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x10dbc -- 0x10dbd
0x10dbc:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x10dbd -- 0x10dbe
; data inside code section at 0x10dbe -- 0x10dc0
0x10dbe:    ff ff                                              |..              |
; function: function_10dc0 at 0x10dc0 -- 0x10dc7
0x10dc0:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x10dc6:    c3                                 	ret 
; data inside code section at 0x10dc7 -- 0x10df7
0x10dc7:    89 04 24 e8 a1 0c 01 00  c7 03 28 0f 03 00 c7 43   |..$.......(....C|
0x10dd7:    08 44 0f 03 00 c7 43 1c  54 0f 03 00 c7 44 24 08   |.D....C.T....D$.|
0x10de7:    10 fb 00 00 c7 44 24 04  80 0f 03 00 89 1c 24 e8   |.....D$.......$.|
; dynamically linked function: __cxa_throw at 0x10df7 -- 0x10df8
; data inside code section at 0x10df8 -- 0x10e01
0x10df8:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x10e01 -- 0x10e02
; data inside code section at 0x10e02 -- 0x10e09
0x10e02:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x10e09 -- 0x10e0a
; data inside code section at 0x10e0a -- 0x10e0d
0x10e0a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionISt13runtime_errorEEvRKT_
; function: _ZN5boost15throw_exceptionISt13runtime_errorEEvRKT_ at 0x10e10 -- 0x10e2c
0x10e10:    56                                 	push esi
0x10e11:    53                                 	push ebx
0x10e12:    83 ec 44                           	sub esp, 0x44
0x10e15:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x10e19:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10e1f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x10e23:    31 c0                              	xor eax, eax
0x10e25:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x10e2c -- 0x10e2d
0x10e2c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x10e2d -- 0x10e2e
; data inside code section at 0x10e2e -- 0x10e38
0x10e2e:    ff ff ff 83 c6 04 c7 44  24 20                     |.......D$       |
; dynamically linked function: _ZTVSt13runtime_error at 0x10e38 -- 0x10e49
; data inside code section at 0x10e49 -- 0x10e4a
0x10e49:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x10e4a -- 0x10e4b
; data inside code section at 0x10e4b -- 0x10eb7
0x10e4b:    ff ff ff 8d 74 24 20 c7  44 24 2c 00 00 00 00 c7   |....t$ .D$,.....|
0x10e5b:    44 24 30 00 00 00 00 c7  44 24 34 00 00 00 00 c7   |D$0.....D$4.....|
0x10e6b:    44 24 38 ff ff ff ff c7  44 24 20 e8 0e 03 00 c7   |D$8.....D$ .....|
0x10e7b:    44 24 28 fc 0e 03 00 89  74 24 04 89 1c 24 e8 62   |D$(.....t$...$.b|
0x10e8b:    0c 01 00 8d 44 24 28 c7  03 28 0f 03 00 c7 43 08   |....D$(..(....C.|
0x10e9b:    44 0f 03 00 c7 43 1c 54  0f 03 00 89 44 24 04 8d   |D....C.T....D$..|
0x10eab:    43 08 89 04 24 e8 0b 0b  01 00 89 34               |C...$......4    |
; function: function_10eb7 at 0x10eb7 -- 0x10eba
0x10eb7:    24 e8                              	and al, 0xe8
0x10eb9:    c3                                 	ret 
; data inside code section at 0x10eba -- 0x10ed1
0x10eba:    f6 00 00 c7 44 24 08 10  fb 00 00 c7 44 24 04 80   |....D$......D$..|
0x10eca:    0f 03 00 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_throw at 0x10ed1 -- 0x10ed2
; data inside code section at 0x10ed2 -- 0x10edf
0x10ed2:    ff ff ff 89 c6 8d 44 24  20 89 04 24 e8            |......D$ ..$.   |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x10edf -- 0x10ee0
; data inside code section at 0x10ee0 -- 0x10ee3
0x10ee0:    ff ff ff                                           |...             |
; function: function_10ee3 at 0x10ee3 -- 0x10ee4
; data inside code section at 0x10ee4 -- 0x10ee7
0x10ee4:    1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x10ee7 -- 0x10ee8
; data inside code section at 0x10ee8 -- 0x10eef
0x10ee8:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x10eef -- 0x10ef0
; data inside code section at 0x10ef0 -- 0x10ef2
0x10ef0:    ff ff                                              |..              |
; function: function_10ef2 at 0x10ef2 -- 0x10f1e
0x10ef2:    ff c7                              	inc edi
0x10ef4:    43                                 	inc ebx
0x10ef5:    1c 50                              	sbb al, 0x50
0x10ef7:    0e                                 	push cs
0x10ef8:    03 00                              	add eax, dword ptr [eax]
0x10efa:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10efe:    89 1c 24                           	mov dword ptr [esp], ebx
0x10f01:    e8 7a f6 00 00                     	call 0x20580
0x10f06:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10f0a:    89 34 24                           	mov dword ptr [esp], esi
0x10f0d:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x10f11:    e8 6a f6 00 00                     	call 0x20580
0x10f16:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x10f1a:    89 c6                              	mov esi, eax
0x10f1c:    eb c5                              	jmp 0x10ee3 <function_10ee3>
; function: function_10f1e at 0x10f1e -- 0x10f20
0x10f1e:    eb ea                              	jmp 0x10f0a
; section: .text._ZN5boost9date_time6c_time6gmtimeEPKlP2tm
; function: _ZN5boost9date_time6c_time6gmtimeEPKlP2tm at 0x10f20 -- 0x10f46
0x10f20:    83 ec 4c                           	sub esp, 0x4c
0x10f23:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10f29:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x10f2d:    31 c0                              	xor eax, eax
0x10f2f:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x10f33:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x10f37:    89 74 24 48                        	mov dword ptr [esp + 0x48], esi
0x10f3b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x10f3f:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x10f43:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x10f46 -- 0x10f47
0x10f46:    e8                                                 |.               |
; dynamically linked function: gmtime_r at 0x10f47 -- 0x10f48
; data inside code section at 0x10f48 -- 0x10f4a
0x10f48:    ff ff                                              |..              |
; function: function_10f4a at 0x10f4a -- 0x10f68
0x10f4a:    ff 85 c0 74 1e 8b                  	inc dword ptr [ebp - 0x74e18b40]
0x10f50:    54                                 	push esp
0x10f51:    24 3c                              	and al, 0x3c
0x10f53:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x10f5a:    75 0c                              	jne 0x10f68 <function_10f4a+0x1d>
0x10f5c:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x10f60:    8b 74 24 48                        	mov esi, dword ptr [esp + 0x48]
0x10f64:    83 c4 4c                           	add esp, 0x4c
0x10f67:    c3                                 	ret 
; data inside code section at 0x10f68 -- 0x10f69
0x10f68:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x10f69 -- 0x10f6a
; data inside code section at 0x10f6a -- 0x10f89
0x10f6a:    ff ff ff 8d 44 24 3b 8d  74 24 34 8d 5c 24 2c 89   |....D$;.t$4.\$,.|
0x10f7a:    44 24 08 c7 44 24 04 94  d6 00 00 89 34 24 e8      |D$..D$......4$. |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x10f89 -- 0x10f8a
; data inside code section at 0x10f8a -- 0x10f95
0x10f8a:    ff ff ff 89 74 24 04 89  1c 24 e8                  |....t$...$.     |
; dynamically linked function: _ZNSt13runtime_errorC1ERKSs at 0x10f95 -- 0x10f96
; data inside code section at 0x10f96 -- 0x10fa9
0x10f96:    ff ff ff 89 1c 24 e8 8f  0d 01 00 89 1c 24 89 44   |.....$.......$.D|
0x10fa6:    24 1c e8                                           |$..             |
; dynamically linked function: _ZNSt13runtime_errorD1Ev at 0x10fa9 -- 0x10faa
; data inside code section at 0x10faa -- 0x10fac
0x10faa:    ff ff                                              |..              |
; function: function_10fac at 0x10fac -- 0x10fb3
0x10fac:    ff 8b 44 24 1c 89                  	dec dword ptr [ebx - 0x76e3dbbc]
0x10fb2:    c3                                 	ret 
; function: function_10fb3 at 0x10fb3 -- 0x10fb4
; data inside code section at 0x10fb4 -- 0x10fb7
0x10fb4:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x10fb7 -- 0x10fb8
; data inside code section at 0x10fb8 -- 0x10fbf
0x10fb8:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x10fbf -- 0x10fc0
; data inside code section at 0x10fc0 -- 0x10fc3
0x10fc0:    ff ff ff                                           |...             |
; function: function_10fc3 at 0x10fc3 -- 0x10fc7
0x10fc3:    89 c3                              	mov ebx, eax
0x10fc5:    eb ec                              	jmp 0x10fb3 <function_10fb3>
; section: .text._ZNSt11logic_errorC2ERKS_
; function: _ZNSt11logic_errorC1ERKS_ at 0x10fd0 -- 0x10feb
0x10fd0:    53                                 	push ebx
0x10fd1:    83 ec 38                           	sub esp, 0x38
0x10fd4:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x10fda:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x10fde:    31 c0                              	xor eax, eax
0x10fe0:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x10fe4:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x10fe8:    83 c0 04                           	add eax, 4
; data inside code section at 0x10feb -- 0x10fed
0x10feb:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt11logic_error at 0x10fed -- 0x10ffb
; data inside code section at 0x10ffb -- 0x10ffc
0x10ffb:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x10ffc -- 0x10ffd
; data inside code section at 0x10ffd -- 0x10fff
0x10ffd:    ff ff                                              |..              |
; function: function_10fff at 0x10fff -- 0x11012
0x10fff:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x11005:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1100b:    75 05                              	jne 0x11012 <function_10fff+0x12>
0x1100d:    83 c4 38                           	add esp, 0x38
0x11010:    5b                                 	pop ebx
0x11011:    c3                                 	ret 
; data inside code section at 0x11012 -- 0x11013
0x11012:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11013 -- 0x11014
; data inside code section at 0x11014 -- 0x1101f
0x11014:    ff ff ff 89 44 24 1c 89  1c 24 e8                  |....D$...$.     |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1101f -- 0x11020
; data inside code section at 0x11020 -- 0x1102b
0x11020:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x1102b -- 0x1102c
; data inside code section at 0x1102c -- 0x1102f
0x1102c:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC2ERKS4_
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEC1ERKS4_ at 0x11030 -- 0x1104c
0x11030:    56                                 	push esi
0x11031:    53                                 	push ebx
0x11032:    83 ec 24                           	sub esp, 0x24
0x11035:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x11039:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1103d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11043:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11047:    31 c0                              	xor eax, eax
0x11049:    8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x1104c -- 0x1104e
0x1104c:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt11logic_error at 0x1104e -- 0x1105c
; data inside code section at 0x1105c -- 0x1105d
0x1105c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1105d -- 0x1105e
; data inside code section at 0x1105e -- 0x11060
0x1105e:    ff ff                                              |..              |
; function: function_11060 at 0x11060 -- 0x110b2
0x11060:    ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x11066:    a8 0f                              	test al, 0xf
0x11068:    03 00                              	add eax, dword ptr [eax]
0x1106a:    c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0x11071:    85 c0                              	test eax, eax
0x11073:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x11076:    74 08                              	je 0x11080 <function_11060+0x20>
0x11078:    8b 10                              	mov edx, dword ptr [eax]
0x1107a:    89 04 24                           	mov dword ptr [esp], eax
0x1107d:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x11080:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x11083:    c7 43 08 dc 0f 03 00               	mov dword ptr [ebx + 8], 0x30fdc
0x1108a:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1108d:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x11090:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x11093:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x11096:    c7 03 c8 0f 03 00                  	mov dword ptr [ebx], 0x30fc8
0x1109c:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1109f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x110a3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x110aa:    75 06                              	jne 0x110b2 <function_11060+0x51>
0x110ac:    83 c4 24                           	add esp, 0x24
0x110af:    5b                                 	pop ebx
0x110b0:    5e                                 	pop esi
0x110b1:    c3                                 	ret 
; data inside code section at 0x110b2 -- 0x110b3
0x110b2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x110b3 -- 0x110b4
; data inside code section at 0x110b4 -- 0x110c5
0x110b4:    ff ff ff 89 c6 89 1c 24  e8 8f d1 00 00 89 34 24   |.......$......4$|
0x110c4:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x110c5 -- 0x110c6
; data inside code section at 0x110c6 -- 0x110cf
0x110c6:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x110cf -- 0x110d0
; data inside code section at 0x110d0 -- 0x110d7
0x110d0:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x110d7 -- 0x110d8
; data inside code section at 0x110d8 -- 0x110db
0x110d8:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv at 0x110e0 -- 0x110e7
0x110e0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x110e5:    eb 09                              	jmp 0x110f0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv>
; data inside code section at 0x110e7 -- 0x110f0
0x110e7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEE7rethrowEv at 0x110f0 -- 0x1110c
0x110f0:    56                                 	push esi
0x110f1:    53                                 	push ebx
0x110f2:    83 ec 24                           	sub esp, 0x24
0x110f5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x110f9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x110ff:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11103:    31 c0                              	xor eax, eax
0x11105:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1110c -- 0x1110d
0x1110c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1110d -- 0x1110e
; data inside code section at 0x1110e -- 0x11110
0x1110e:    ff ff                                              |..              |
; function: function_11110 at 0x11110 -- 0x11117
0x11110:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x11116:    c3                                 	ret 
; data inside code section at 0x11117 -- 0x11147
0x11117:    89 04 24 e8 f1 0f 01 00  c7 03 08 10 03 00 c7 43   |..$............C|
0x11127:    08 24 10 03 00 c7 43 1c  34 10 03 00 c7 44 24 08   |.$....C.4....D$.|
0x11137:    e0 ff 00 00 c7 44 24 04  60 10 03 00 89 1c 24 e8   |.....D$.`.....$.|
; dynamically linked function: __cxa_throw at 0x11147 -- 0x11148
; data inside code section at 0x11148 -- 0x11151
0x11148:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x11151 -- 0x11152
; data inside code section at 0x11152 -- 0x11159
0x11152:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x11159 -- 0x1115a
; data inside code section at 0x1115a -- 0x1115d
0x1115a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_9gregorian16bad_day_of_monthEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_9gregorian16bad_day_of_monthEEEvRKT_ at 0x11160 -- 0x1117c
0x11160:    56                                 	push esi
0x11161:    53                                 	push ebx
0x11162:    83 ec 44                           	sub esp, 0x44
0x11165:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x11169:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1116f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x11173:    31 c0                              	xor eax, eax
0x11175:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1117c -- 0x1117d
0x1117c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1117d -- 0x1117e
; data inside code section at 0x1117e -- 0x1118b
0x1117e:    ff ff ff 89 74 24 04 8d  74 24 20 89 34            |....t$..t$ .4   |
; function: function_1118b at 0x1118b -- 0x1118e
0x1118b:    24 89                              	and al, 0x89
0x1118d:    c3                                 	ret 
; data inside code section at 0x1118e -- 0x11212
0x1118e:    e8 9d 0f 01 00 c7 44 24  2c 00 00 00 00 c7 44 24   |......D$,.....D$|
0x1119e:    30 00 00 00 00 c7 44 24  34 00 00 00 00 c7 44 24   |0.....D$4.....D$|
0x111ae:    38 ff ff ff ff c7 44 24  20 c8 0f 03 00 c7 44 24   |8.....D$ .....D$|
0x111be:    28 dc 0f 03 00 89 74 24  04 89 1c 24 e8 c1 0f 01   |(.....t$...$....|
0x111ce:    00 8d 44 24 28 c7 03 08  10 03 00 c7 43 08 24 10   |..D$(.......C.$.|
0x111de:    03 00 c7 43 1c 34 10 03  00 89 44 24 04 8d 43 08   |...C.4....D$..C.|
0x111ee:    89 04 24 e8 1a 0b 01 00  89 34 24 e8 32 f7 00 00   |..$......4$.2...|
0x111fe:    c7 44 24 08 e0 ff 00 00  c7 44 24 04 60 10 03 00   |.D$......D$.`...|
0x1120e:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: __cxa_throw at 0x11212 -- 0x11213
; data inside code section at 0x11213 -- 0x11218
0x11213:    ff ff ff 89 c6                                     |.....           |
; function: function_11218 at 0x11218 -- 0x11219
; data inside code section at 0x11219 -- 0x1121c
0x11219:    1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x1121c -- 0x1121d
; data inside code section at 0x1121d -- 0x11224
0x1121d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x11224 -- 0x11225
; data inside code section at 0x11225 -- 0x11227
0x11225:    ff ff                                              |..              |
; function: function_11227 at 0x11227 -- 0x11253
0x11227:    ff c7                              	inc edi
0x11229:    43                                 	inc ebx
0x1122a:    1c 50                              	sbb al, 0x50
0x1122c:    0e                                 	push cs
0x1122d:    03 00                              	add eax, dword ptr [eax]
0x1122f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11233:    89 1c 24                           	mov dword ptr [esp], ebx
0x11236:    e8 f5 f6 00 00                     	call 0x20930 <function_20930>
0x1123b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1123f:    89 34 24                           	mov dword ptr [esp], esi
0x11242:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11246:    e8 e5 f6 00 00                     	call 0x20930 <function_20930>
0x1124b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1124f:    89 c6                              	mov esi, eax
0x11251:    eb c5                              	jmp 0x11218 <function_11218>
; function: function_11253 at 0x11253 -- 0x11255
0x11253:    eb ea                              	jmp 0x1123f
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_ at 0x11260 -- 0x112d0
0x11260:    56                                 	push esi
0x11261:    53                                 	push ebx
0x11262:    83 ec 24                           	sub esp, 0x24
0x11265:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x11269:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1126d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11273:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11277:    31 c0                              	xor eax, eax
0x11279:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1127c:    c7 03 48 12 03 00                  	mov dword ptr [ebx], 0x31248
0x11282:    c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0x11289:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1128c:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1128f:    85 c0                              	test eax, eax
0x11291:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x11294:    74 08                              	je 0x1129e <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x3e>
0x11296:    8b 10                              	mov edx, dword ptr [eax]
0x11298:    89 04 24                           	mov dword ptr [esp], eax
0x1129b:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1129e:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x112a1:    c7 43 08 7c 12 03 00               	mov dword ptr [ebx + 8], 0x3127c
0x112a8:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x112ab:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x112ae:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x112b1:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x112b4:    c7 03 68 12 03 00                  	mov dword ptr [ebx], 0x31268
0x112ba:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x112bd:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x112c1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x112c8:    75 06                              	jne 0x112d0 <_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_+0x6f>
0x112ca:    83 c4 24                           	add esp, 0x24
0x112cd:    5b                                 	pop ebx
0x112ce:    5e                                 	pop esi
0x112cf:    c3                                 	ret 
; data inside code section at 0x112d0 -- 0x112d1
0x112d0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x112d1 -- 0x112d2
; data inside code section at 0x112d2 -- 0x112d9
0x112d2:    ff ff ff 89 c6 89 1c                               |.......         |
; function: function_112d9 at 0x112d9 -- 0x112e1
0x112d9:    24 e8                              	and al, 0xe8
0x112db:    41                                 	inc ecx
0x112dc:    e9 00 00 89 34                     	jmp 0x348a12e1 <function_348a12e1>
; data inside code section at 0x112e1 -- 0x112e3
0x112e1:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x112e3 -- 0x112e4
; data inside code section at 0x112e4 -- 0x112e7
0x112e4:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x112f0 -- 0x112f7
0x112f0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x112f5:    eb 09                              	jmp 0x11300 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv>
; data inside code section at 0x112f7 -- 0x11300
0x112f7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv at 0x11300 -- 0x1131c
0x11300:    56                                 	push esi
0x11301:    53                                 	push ebx
0x11302:    83 ec 24                           	sub esp, 0x24
0x11305:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x11309:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1130f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11313:    31 c0                              	xor eax, eax
0x11315:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1131c -- 0x1131d
0x1131c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1131d -- 0x1131e
; data inside code section at 0x1131e -- 0x11320
0x1131e:    ff ff                                              |..              |
; function: function_11320 at 0x11320 -- 0x11327
0x11320:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x11326:    c3                                 	ret 
; data inside code section at 0x11327 -- 0x11357
0x11327:    89 04 24 e8 21 12 01 00  c7 03 a8 12 03 00 c7 43   |..$.!..........C|
0x11337:    08 c4 12 03 00 c7 43 1c  d4 12 03 00 c7 44 24 08   |......C......D$.|
0x11347:    40 02 01 00 c7 44 24 04  00 13 03 00 89 1c 24 e8   |@....D$.......$.|
; dynamically linked function: __cxa_throw at 0x11357 -- 0x11358
; data inside code section at 0x11358 -- 0x11361
0x11358:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x11361 -- 0x11362
; data inside code section at 0x11362 -- 0x11369
0x11362:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x11369 -- 0x1136a
; data inside code section at 0x1136a -- 0x1136d
0x1136a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_ at 0x11370 -- 0x1138c
0x11370:    56                                 	push esi
0x11371:    53                                 	push ebx
0x11372:    83 ec 44                           	sub esp, 0x44
0x11375:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x11379:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1137f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x11383:    31 c0                              	xor eax, eax
0x11385:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1138c -- 0x1138d
0x1138c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1138d -- 0x1138e
; data inside code section at 0x1138e -- 0x113b0
0x1138e:    ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x1139e:    00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x113ae:    ff ff                                              |..              |
; function: function_113b0 at 0x113b0 -- 0x113bb
0x113b0:    ff c7                              	inc edi
0x113b2:    44                                 	inc esp
0x113b3:    24 20                              	and al, 0x20
0x113b5:    68 12 03 00 89                     	push 0x89000312
0x113ba:    c3                                 	ret 
; data inside code section at 0x113bb -- 0x1141d
0x113bb:    8b 46 04 8d 74 24 20 c7  44 24 28 7c 12 03 00 89   |.F..t$ .D$(|....|
0x113cb:    74 24 04 89 44 24 24 89  1c 24 e8 f6 11 01 00 8d   |t$..D$$..$......|
0x113db:    44 24 28 c7 03 a8 12 03  00 c7 43 08 c4 12 03 00   |D$(.......C.....|
0x113eb:    c7 43 1c d4 12 03 00 89  44 24 04 8d 43 08 89 04   |.C......D$..C...|
0x113fb:    24 e8 1f 0b 01 00 89 34  24 e8 f7 f5 00 00 c7 44   |$......4$......D|
0x1140b:    24 08 40 02 01 00 c7 44  24 04 00 13 03 00 89 1c   |$.@....D$.......|
0x1141b:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x1141d -- 0x1141e
; data inside code section at 0x1141e -- 0x11421
0x1141e:    ff ff ff                                           |...             |
; function: function_11421 at 0x11421 -- 0x11422
; data inside code section at 0x11422 -- 0x11431
0x11422:    44 24 1c 89 34 24 e8 d3  f5 00 00 89 1c 24 e8      |D$..4$.......$. |
; dynamically linked function: __cxa_free_exception at 0x11431 -- 0x11432
; data inside code section at 0x11432 -- 0x1143d
0x11432:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x1143d -- 0x1143e
; data inside code section at 0x1143e -- 0x11440
0x1143e:    ff ff                                              |..              |
; function: function_11440 at 0x11440 -- 0x1145a
0x11440:    ff c7                              	inc edi
0x11442:    43                                 	inc ebx
0x11443:    1c 50                              	sbb al, 0x50
0x11445:    0e                                 	push cs
0x11446:    03 00                              	add eax, dword ptr [eax]
0x11448:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1144c:    89 1c 24                           	mov dword ptr [esp], ebx
0x1144f:    e8 ac f5 00 00                     	call 0x20a00 <function_20a00>
0x11454:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x11458:    eb c7                              	jmp 0x11421 <function_11421>
; section: .text._ZN5boost15recursive_mutexC2Ev
; function: _ZN5boost15recursive_mutexC1Ev at 0x11460 -- 0x1147f
0x11460:    53                                 	push ebx
0x11461:    83 ec 48                           	sub esp, 0x48
0x11464:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x11468:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1146e:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x11472:    31 c0                              	xor eax, eax
0x11474:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x1147c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1147f -- 0x11480
0x1147f:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x11480 -- 0x11481
; data inside code section at 0x11481 -- 0x1149b
0x11481:    ff ff ff 85 c0 0f 85 a0  00 00 00 8d 43 18 c7 44   |............C..D|
0x11491:    24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x1149b -- 0x1149c
; data inside code section at 0x1149c -- 0x1149e
0x1149c:    ff ff                                              |..              |
; function: function_1149e at 0x1149e -- 0x114c4
0x1149e:    ff 85 c0 75 25 8b                  	inc dword ptr [ebp - 0x74da8a40]
0x114a4:    44                                 	inc esp
0x114a5:    24 3c                              	and al, 0x3c
0x114a7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x114ae:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x114b2:    c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0x114b9:    0f 85 8b 00 00 00                  	jne 0x1154a <function_1154a>
0x114bf:    83 c4 48                           	add esp, 0x48
0x114c2:    5b                                 	pop ebx
0x114c3:    c3                                 	ret 
; data inside code section at 0x114c4 -- 0x114cc
0x114c4:    8d 74 26 00 89 1c 24 e8                            |.t&...$.        |
; dynamically linked function: pthread_mutex_destroy at 0x114cc -- 0x114cd
; data inside code section at 0x114cd -- 0x114f4
0x114cd:    ff ff ff 85 c0 74 24 c7  44 24 0c 60 79 02 00 c7   |.....t$.D$.`y...|
0x114dd:    44 24 08 53 00 00 00 c7  44 24 04 98 d5 00 00 c7   |D$.S....D$......|
0x114ed:    04 24 00 9f 00 00 e8                               |.$.....         |
; dynamically linked function: __assert_fail at 0x114f4 -- 0x114f5
; data inside code section at 0x114f5 -- 0x11514
0x114f5:    ff ff ff 8d 5c 24 34 c7  44 24 38 00 00 00 00 c7   |....\$4.D$8.....|
0x11505:    44 24 34 48 12 03 00 89  1c 24 e8 bc 12 01 00      |D$4H.....$..... |
; function: function_11514 at 0x11514 -- 0x11515
; data inside code section at 0x11515 -- 0x1151d
0x11515:    44 24 1c 89 1c 24 e8 00                            |D$...$..        |
; function: function_1151d at 0x1151d -- 0x11522
0x1151d:    e9 00 00 8b 44                     	jmp 0x448c1522 <function_448c1522>
; data inside code section at 0x11522 -- 0x11528
0x11522:    24 1c 89 04 24 e8                                  |$...$.          |
; dynamically linked function: _Unwind_Resume at 0x11528 -- 0x11529
; data inside code section at 0x11529 -- 0x1152b
0x11529:    ff ff                                              |..              |
; function: function_1152b at 0x1152b -- 0x1154a
0x1152b:    ff 8d 5c 24 2c c7                  	dec dword ptr [ebp - 0x38d3dba4]
0x11531:    44                                 	inc esp
0x11532:    24 30                              	and al, 0x30
0x11534:    00 00                              	add byte ptr [eax], al
0x11536:    00 00                              	add byte ptr [eax], al
0x11538:    c7 44 24 2c 48 12 03 00            	mov dword ptr [esp + 0x2c], 0x31248
0x11540:    89 1c 24                           	mov dword ptr [esp], ebx
0x11543:    e8 88 12 01 00                     	call 0x227d0 <function_227d0>
0x11548:    eb ca                              	jmp 0x11514 <function_11514>
; function: function_1154a at 0x1154a -- 0x1154b
; dynamically linked function: __stack_chk_fail at 0x1154b -- 0x1154c
; data inside code section at 0x1154c -- 0x1154f
0x1154c:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail16thread_data_baseC2Ev
; function: _ZN5boost6detail16thread_data_baseC1Ev at 0x11550 -- 0x1157b
0x11550:    83 ec 7c                           	sub esp, 0x7c
0x11553:    89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x11557:    8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x1155e:    89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x11562:    89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0x11566:    89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x1156a:    8d 7b 18                           	lea edi, [ebx + 0x18]
0x1156d:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x11574:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
; data inside code section at 0x1157b -- 0x1157d
0x1157b:    c7 03                                              |..              |
; dynamically linked function: _ZTVN5boost6detail16thread_data_baseE at 0x1157d -- 0x115a6
; data inside code section at 0x115a6 -- 0x115a7
0x115a6:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x115a7 -- 0x115a8
; data inside code section at 0x115a8 -- 0x115c2
0x115a8:    ff ff ff 85 c0 0f 85 0e  02 00 00 8d 73 30 c7 44   |............s0.D|
0x115b8:    24 04 00 00 00 00 89 34  24 e8                     |$......4$.      |
; dynamically linked function: pthread_mutex_init at 0x115c2 -- 0x115c3
; data inside code section at 0x115c3 -- 0x115dd
0x115c3:    ff ff ff 85 c0 0f 85 20  02 00 00 8d 43 48 c7 44   |....... ....CH.D|
0x115d3:    24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x115dd -- 0x115de
; data inside code section at 0x115de -- 0x115f8
0x115de:    ff ff ff 85 c0 0f 85 1f  01 00 00 8d 6b 78 c7 44   |............kx.D|
0x115ee:    24 04 00 00 00 00 89 2c  24 e8                     |$......,$.      |
; dynamically linked function: pthread_mutex_init at 0x115f8 -- 0x115f9
; data inside code section at 0x115f9 -- 0x1161a
0x115f9:    ff ff ff 85 c0 0f 85 45  02 00 00 8d 93 90 00 00   |.......E........|
0x11609:    00 89 54 24 1c c7 44 24  04 00 00 00 00 89 14 24   |..T$..D$.......$|
0x11619:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x1161a -- 0x1161b
; data inside code section at 0x1161b -- 0x11638
0x1161b:    ff ff ff 85 c0 0f 85 ee  01 00 00 8d 83 a8 00 00   |................|
0x1162b:    00 c7 44 24 04 00 00 00  00 89 04 24 e8            |..D$.......$.   |
; dynamically linked function: pthread_cond_init at 0x11638 -- 0x11639
; data inside code section at 0x11639 -- 0x1163b
0x11639:    ff ff                                              |..              |
; function: function_1163b at 0x1163b -- 0x116d0
0x1163b:    ff 85 c0 0f 85 8c                  	inc dword ptr [ebp - 0x737af040]
0x11641:    00 00                              	add byte ptr [eax], al
0x11643:    00 8d 83 e4 00 00                  	add byte ptr [ebp + 0xe483], cl
0x11649:    00 89 83 ec 00 00                  	add byte ptr [ecx + 0xec83], cl
0x1164f:    00 89 83 f0 00 00                  	add byte ptr [ecx + 0xf083], cl
0x11655:    00 8b 44 24 5c 65                  	add byte ptr [ebx + 0x655c2444], cl
0x1165b:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x11661:    c6 83 d8 00 00 00 00               	mov byte ptr [ebx + 0xd8], 0
0x11668:    c6 83 d9 00 00 00 00               	mov byte ptr [ebx + 0xd9], 0
0x1166f:    c6 83 da 00 00 00 00               	mov byte ptr [ebx + 0xda], 0
0x11676:    c7 83 dc 00 00 00 00 00 00 00      	mov dword ptr [ebx + 0xdc], 0
0x11680:    c7 83 e4 00 00 00 00 00 00 00      	mov dword ptr [ebx + 0xe4], 0
0x1168a:    c7 83 e8 00 00 00 00 00 00 00      	mov dword ptr [ebx + 0xe8], 0
0x11694:    c7 83 f4 00 00 00 00 00 00 00      	mov dword ptr [ebx + 0xf4], 0
0x1169e:    c6 83 f8 00 00 00 01               	mov byte ptr [ebx + 0xf8], 1
0x116a5:    c6 83 f9 00 00 00 00               	mov byte ptr [ebx + 0xf9], 0
0x116ac:    c7 83 00 01 00 00 00 00 00 00      	mov dword ptr [ebx + 0x100], 0
0x116b6:    0f 85 53 01 00 00                  	jne 0x1180f <function_1180f>
0x116bc:    8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x116c0:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x116c4:    8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x116c8:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x116cc:    83 c4 7c                           	add esp, 0x7c
0x116cf:    c3                                 	ret 
; data inside code section at 0x116d0 -- 0x116d8
0x116d0:    8b 54 24 1c 89 14 24 e8                            |.T$...$.        |
; dynamically linked function: pthread_mutex_destroy at 0x116d8 -- 0x116d9
; data inside code section at 0x116d9 -- 0x11700
0x116d9:    ff ff ff 85 c0 74 50 c7  44 24 0c 20 b8 02 00 c7   |.....tP.D$. ....|
0x116e9:    44 24 08 28 00 00 00 c7  44 24 04 f4 d4 00 00 c7   |D$.(....D$......|
0x116f9:    04 24 34 d5 00 00 e8                               |.$4....         |
; dynamically linked function: __assert_fail at 0x11700 -- 0x11701
; data inside code section at 0x11701 -- 0x1170c
0x11701:    ff ff ff 8d 74 26 00 89  34 24 e8                  |....t&..4$.     |
; dynamically linked function: pthread_mutex_destroy at 0x1170c -- 0x1170d
; data inside code section at 0x1170d -- 0x1174c
0x1170d:    ff ff ff 85 c0 75 cc 8d  74 24 34 c7 44 24 38 00   |.....u..t$4.D$8.|
0x1171d:    00 00 00 c7 44 24 34 48  12 03 00 89 34 24 e8 90   |....D$4H....4$..|
0x1172d:    11 01 00 8d 44 24 4c c7  44 24 50 00 00 00 00 c7   |....D$L.D$P.....|
0x1173d:    44 24 4c 48 12 03 00 89  04 24 e8 74 11 01 00      |D$LH.....$.t... |
; function: function_1174c at 0x1174c -- 0x1174d
; data inside code section at 0x1174d -- 0x11758
0x1174d:    c5 89 34 24 89 ee e8 b8  e7 00 00                  |..4$.......     |
; function: function_11758 at 0x11758 -- 0x11759
; data inside code section at 0x11759 -- 0x1175f
0x11759:    3c 24 e8 20 07 01                                  |<$. ..          |
; function: function_1175f at 0x1175f -- 0x11776
0x1175f:    00 8d 43 10 89 04                  	add byte ptr [ebp + 0x4891043], cl
0x11765:    24 e8                              	and al, 0xe8
0x11767:    25 03 01 00 8b                     	and eax, 0x8b000103
0x1176c:    43                                 	inc ebx
0x1176d:    08 85 c0 74 15 83                  	or byte ptr [ebp - 0x7cea8b40], al
0x11773:    ca ff f0                           	retf -0xf01
; data inside code section at 0x11776 -- 0x11777
0x11776:    0f                                                 |.               |
; function: function_11777 at 0x11777 -- 0x11782
0x11777:    c1 50 08 83                        	rcl dword ptr [eax + 8], -0x7d
0x1177b:    ea 01 75 08 8b 10 89               	ljmp 0x8910:0x8b087501 <function_8b087501>
; data inside code section at 0x11782 -- 0x1178b
0x11782:    04 24 ff 52 0c 89 34 24  e8                        |.$.R..4$.       |
; dynamically linked function: _Unwind_Resume at 0x1178b -- 0x1178c
; data inside code section at 0x1178c -- 0x1178e
0x1178c:    ff ff                                              |..              |
; function: function_1178e at 0x1178e -- 0x117c1
0x1178e:    ff 8d 54 24 4c 89                  	dec dword ptr [ebp - 0x76b3dbac]
0x11794:    44                                 	inc esp
0x11795:    24 18                              	and al, 0x18
0x11797:    89 14 24                           	mov dword ptr [esp], edx
0x1179a:    e8 71 e7 00 00                     	call 0x1ff10 <function_1ff10>
0x1179f:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x117a3:    89 2c 24                           	mov dword ptr [esp], ebp
0x117a6:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x117aa:    e8 d1 06 01 00                     	call 0x21e80 <function_21e80>
0x117af:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x117b3:    89 c5                              	mov ebp, eax
0x117b5:    89 34 24                           	mov dword ptr [esp], esi
0x117b8:    89 ee                              	mov esi, ebp
0x117ba:    e8 21 07 01 00                     	call 0x21ee0
0x117bf:    eb 97                              	jmp 0x11758 <function_11758>
; function: function_117c1 at 0x117c1 -- 0x117ee
0x117c1:    8d 74 24 2c                        	lea esi, [esp + 0x2c]
0x117c5:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x117cd:    c7 44 24 2c 48 12 03 00            	mov dword ptr [esp + 0x2c], 0x31248
0x117d5:    89 34 24                           	mov dword ptr [esp], esi
0x117d8:    e8 e3 10 01 00                     	call 0x228c0 <function_228c0>
0x117dd:    89 c7                              	mov edi, eax
0x117df:    89 34 24                           	mov dword ptr [esp], esi
0x117e2:    89 fe                              	mov esi, edi
0x117e4:    e8 27 e7 00 00                     	call 0x1ff10 <function_1ff10>
0x117e9:    e9 72 ff ff ff                     	jmp 0x11760
; function: function_117ee at 0x117ee -- 0x1180f
0x117ee:    8d 74 24 3c                        	lea esi, [esp + 0x3c]
0x117f2:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x117fa:    c7 44 24 3c 48 12 03 00            	mov dword ptr [esp + 0x3c], 0x31248
0x11802:    89 34 24                           	mov dword ptr [esp], esi
0x11805:    e8 b6 10 01 00                     	call 0x228c0 <function_228c0>
0x1180a:    e9 3d ff ff ff                     	jmp 0x1174c <function_1174c>
; function: function_1180f at 0x1180f -- 0x11810
; dynamically linked function: __stack_chk_fail at 0x11810 -- 0x11811
; data inside code section at 0x11811 -- 0x11813
0x11811:    ff ff                                              |..              |
; function: function_11813 at 0x11813 -- 0x11849
0x11813:    ff 8d 44 24 54 c7                  	dec dword ptr [ebp - 0x38abdbbc]
0x11819:    44                                 	inc esp
0x1181a:    24 58                              	and al, 0x58
0x1181c:    00 00                              	add byte ptr [eax], al
0x1181e:    00 00                              	add byte ptr [eax], al
0x11820:    c7 44 24 54 48 12 03 00            	mov dword ptr [esp + 0x54], 0x31248
0x11828:    89 04 24                           	mov dword ptr [esp], eax
0x1182b:    e8 90 10 01 00                     	call 0x228c0 <function_228c0>
0x11830:    8d 54 24 54                        	lea edx, [esp + 0x54]
0x11834:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x11838:    89 14 24                           	mov dword ptr [esp], edx
0x1183b:    e8 d0 e6 00 00                     	call 0x1ff10 <function_1ff10>
0x11840:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x11844:    e9 5a ff ff ff                     	jmp 0x117a3
; function: function_11849 at 0x11849 -- 0x1187c
0x11849:    8d 6c 24 44                        	lea ebp, [esp + 0x44]
0x1184d:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x11855:    c7 44 24 44 48 12 03 00            	mov dword ptr [esp + 0x44], 0x31248
0x1185d:    89 2c 24                           	mov dword ptr [esp], ebp
0x11860:    e8 5b 10 01 00                     	call 0x228c0 <function_228c0>
0x11865:    89 2c 24                           	mov dword ptr [esp], ebp
0x11868:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1186c:    e8 9f e6 00 00                     	call 0x1ff10 <function_1ff10>
0x11871:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x11875:    89 c5                              	mov ebp, eax
0x11877:    e9 39 ff ff ff                     	jmp 0x117b5
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_ at 0x11880 -- 0x118f0
0x11880:    56                                 	push esi
0x11881:    53                                 	push ebx
0x11882:    83 ec 24                           	sub esp, 0x24
0x11885:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x11889:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1188d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11893:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11897:    31 c0                              	xor eax, eax
0x11899:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1189c:    c7 03 20 78 02 00                  	mov dword ptr [ebx], 0x27820
0x118a2:    c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0x118a9:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x118ac:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x118af:    85 c0                              	test eax, eax
0x118b1:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x118b4:    74 08                              	je 0x118be <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x3e>
0x118b6:    8b 10                              	mov edx, dword ptr [eax]
0x118b8:    89 04 24                           	mov dword ptr [esp], eax
0x118bb:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x118be:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x118c1:    c7 43 08 3c 0e 03 00               	mov dword ptr [ebx + 8], 0x30e3c
0x118c8:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x118cb:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x118ce:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x118d1:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x118d4:    c7 03 28 0e 03 00                  	mov dword ptr [ebx], 0x30e28
0x118da:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x118dd:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x118e1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x118e8:    75 06                              	jne 0x118f0 <_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_+0x6f>
0x118ea:    83 c4 24                           	add esp, 0x24
0x118ed:    5b                                 	pop ebx
0x118ee:    5e                                 	pop esi
0x118ef:    c3                                 	ret 
; data inside code section at 0x118f0 -- 0x118f1
0x118f0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x118f1 -- 0x118f2
; data inside code section at 0x118f2 -- 0x118fc
0x118f2:    ff ff ff 89 c6 89 1c 24  e8 d1                     |.......$..      |
; function: function_118fc at 0x118fc -- 0x11901
0x118fc:    e9 00 00 89 34                     	jmp 0x348a1901 <function_348a1901>
; data inside code section at 0x11901 -- 0x11903
0x11901:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x11903 -- 0x11904
; data inside code section at 0x11904 -- 0x11907
0x11904:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x11910 -- 0x11917
0x11910:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x11915:    eb 09                              	jmp 0x11920 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv>
; data inside code section at 0x11917 -- 0x11920
0x11917:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv at 0x11920 -- 0x1193c
0x11920:    56                                 	push esi
0x11921:    53                                 	push ebx
0x11922:    83 ec 24                           	sub esp, 0x24
0x11925:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x11929:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1192f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11933:    31 c0                              	xor eax, eax
0x11935:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1193c -- 0x1193d
0x1193c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1193d -- 0x1193e
; data inside code section at 0x1193e -- 0x11940
0x1193e:    ff ff                                              |..              |
; function: function_11940 at 0x11940 -- 0x11947
0x11940:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x11946:    c3                                 	ret 
; data inside code section at 0x11947 -- 0x11977
0x11947:    89 04 24 e8 41 18 01 00  c7 03 68 0e 03 00 c7 43   |..$.A.....h....C|
0x11957:    08 84 0e 03 00 c7 43 1c  94 0e 03 00 c7 44 24 08   |......C......D$.|
0x11967:    30 04 01 00 c7 44 24 04  c0 0e 03 00 89 1c 24 e8   |0....D$.......$.|
; dynamically linked function: __cxa_throw at 0x11977 -- 0x11978
; data inside code section at 0x11978 -- 0x11981
0x11978:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x11981 -- 0x11982
; data inside code section at 0x11982 -- 0x11989
0x11982:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x11989 -- 0x1198a
; data inside code section at 0x1198a -- 0x1198d
0x1198a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_ at 0x11990 -- 0x119ac
0x11990:    56                                 	push esi
0x11991:    53                                 	push ebx
0x11992:    83 ec 44                           	sub esp, 0x44
0x11995:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x11999:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1199f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x119a3:    31 c0                              	xor eax, eax
0x119a5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x119ac -- 0x119ad
0x119ac:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x119ad -- 0x119ae
; data inside code section at 0x119ae -- 0x119da
0x119ae:    ff ff ff c7 44 24 2c 00  00 00 00 c7 44 24 30 00   |....D$,.....D$0.|
0x119be:    00 00 00 c7 44 24 34 00  00 00 00 c7 44 24 38 ff   |....D$4.....D$8.|
0x119ce:    ff ff ff c7 44 24 20 28  0e 03 00 89               |....D$ (....    |
; function: function_119da at 0x119da -- 0x119db
0x119da:    c3                                 	ret 
; data inside code section at 0x119db -- 0x11a3d
0x119db:    8b 46 04 8d 74 24 20 c7  44 24 28 3c 0e 03 00 89   |.F..t$ .D$(<....|
0x119eb:    74 24 04 89 44 24 24 89  1c 24 e8 16 18 01 00 8d   |t$..D$$..$......|
0x119fb:    44 24 28 c7 03 68 0e 03  00 c7 43 08 84 0e 03 00   |D$(..h....C.....|
0x11a0b:    c7 43 1c 94 0e 03 00 89  44 24 04 8d 43 08 89 04   |.C......D$..C...|
0x11a1b:    24 e8 1f 0b 01 00 89 34  24 e8 67 f6 00 00 c7 44   |$......4$.g....D|
0x11a2b:    24 08 30 04 01 00 c7 44  24 04 c0 0e 03 00 89 1c   |$.0....D$.......|
0x11a3b:    24 e8                                              |$.              |
; dynamically linked function: __cxa_throw at 0x11a3d -- 0x11a3e
; data inside code section at 0x11a3e -- 0x11a41
0x11a3e:    ff ff ff                                           |...             |
; function: function_11a41 at 0x11a41 -- 0x11a42
; data inside code section at 0x11a42 -- 0x11a51
0x11a42:    44 24 1c 89 34 24 e8 43  f6 00 00 89 1c 24 e8      |D$..4$.C.....$. |
; dynamically linked function: __cxa_free_exception at 0x11a51 -- 0x11a52
; data inside code section at 0x11a52 -- 0x11a5d
0x11a52:    ff ff ff 8b 44 24 1c 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _Unwind_Resume at 0x11a5d -- 0x11a5e
; data inside code section at 0x11a5e -- 0x11a60
0x11a5e:    ff ff                                              |..              |
; function: function_11a60 at 0x11a60 -- 0x11a7a
0x11a60:    ff c7                              	inc edi
0x11a62:    43                                 	inc ebx
0x11a63:    1c 50                              	sbb al, 0x50
0x11a65:    0e                                 	push cs
0x11a66:    03 00                              	add eax, dword ptr [eax]
0x11a68:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11a6c:    89 1c 24                           	mov dword ptr [esp], ebx
0x11a6f:    e8 1c f6 00 00                     	call 0x21090 <function_21090>
0x11a74:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x11a78:    eb c7                              	jmp 0x11a41 <function_11a41>
; section: .text._ZN5boost6detail20interruption_checkerD2Ev
; function: _ZN5boost6detail20interruption_checkerD1Ev at 0x11a80 -- 0x11aa7
0x11a80:    83 ec 2c                           	sub esp, 0x2c
0x11a83:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x11a87:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x11a8b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11a91:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11a95:    31 c0                              	xor eax, eax
0x11a97:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x11a9b:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x11a9e:    80 7b 08 00                        	cmp byte ptr [ebx + 8], 0
0x11aa2:    89 04 24                           	mov dword ptr [esp], eax
0x11aa5:    74 61                              	je 0x11b08 <function_11b08>
; data inside code section at 0x11aa7 -- 0x11aa8
0x11aa7:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x11aa8 -- 0x11aa9
; data inside code section at 0x11aa9 -- 0x11abd
0x11aa9:    ff ff ff 85 c0 0f 85 86  00 00 00 8b 33 83 c6 18   |............3...|
0x11ab9:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: pthread_mutex_lock at 0x11abd -- 0x11abe
; data inside code section at 0x11abe -- 0x11ae3
0x11abe:    ff ff ff 85 c0 0f 85 9a  00 00 00 8b 03 c7 80 fc   |................|
0x11ace:    00 00 00 00 00 00 00 c7  80 00 01 00 00 00 00 00   |................|
0x11ade:    00 89 34 24 e8                                     |..4$.           |
; dynamically linked function: pthread_mutex_unlock at 0x11ae3 -- 0x11ae4
; data inside code section at 0x11ae4 -- 0x11ae6
0x11ae4:    ff ff                                              |..              |
; function: function_11ae6 at 0x11ae6 -- 0x11b04
0x11ae6:    ff 85 c0 75 4a 8b                  	inc dword ptr [ebp - 0x74b58a40]
0x11aec:    44                                 	inc esp
0x11aed:    24 1c                              	and al, 0x1c
0x11aef:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x11af6:    75 66                              	jne 0x11b5e <function_11b5e>
0x11af8:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x11afc:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x11b00:    83 c4 2c                           	add esp, 0x2c
0x11b03:    c3                                 	ret 
; data inside code section at 0x11b04 -- 0x11b08
0x11b04:    8d 74 26 00                                        |.t&.            |
; function: function_11b08 at 0x11b08 -- 0x11b09
; dynamically linked function: pthread_mutex_unlock at 0x11b09 -- 0x11b0a
; data inside code section at 0x11b0a -- 0x11b31
0x11b0a:    ff ff ff 85 c0 74 da c7  44 24 0c 80 b9 02 00 c7   |.....t..D$......|
0x11b1a:    44 24 08 7b 00 00 00 c7  44 24 04 ec d6 00 00 c7   |D$.{....D$......|
0x11b2a:    04 24 e7 9e 00 00 e8                               |.$.....         |
; dynamically linked function: __assert_fail at 0x11b31 -- 0x11b32
; data inside code section at 0x11b32 -- 0x11b5a
0x11b32:    ff ff ff e8 54 e0 00 00  c7 44 24 0c 80 b9 02 00   |....T....D$.....|
0x11b42:    c7 44 24 08 74 00 00 00  c7 44 24 04 ec d6 00 00   |.D$.t....D$.....|
0x11b52:    c7 04 24 e7 9e 00 00 e8                            |..$.....        |
; dynamically linked function: __assert_fail at 0x11b5a -- 0x11b5b
; data inside code section at 0x11b5b -- 0x11b5e
0x11b5b:    ff ff ff                                           |...             |
; function: function_11b5e at 0x11b5e -- 0x11b5f
; dynamically linked function: __stack_chk_fail at 0x11b5f -- 0x11b60
; data inside code section at 0x11b60 -- 0x11b7f
0x11b60:    ff ff ff 8d 5c 24 14 89  44 24 18 c7 44 24 14 20   |....\$..D$..D$. |
0x11b70:    78 02 00 89 1c 24 e8 95  18 01 00 89 c6 89 1c      |x....$......... |
; function: function_11b7f at 0x11b7f -- 0x11b87
0x11b7f:    24 e8                              	and al, 0xe8
0x11b81:    4b                                 	dec ebx
0x11b82:    e9 00 00 89 34                     	jmp 0x348a1b87 <function_348a1b87>
; data inside code section at 0x11b87 -- 0x11b89
0x11b87:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x11b89 -- 0x11b8a
; data inside code section at 0x11b8a -- 0x11b8d
0x11b8a:    ff ff ff                                           |...             |
; section: .text._ZN10CSemaphore4postEv
; function: _ZN10CSemaphore4postEv at 0x11b90 -- 0x11bab
0x11b90:    56                                 	push esi
0x11b91:    53                                 	push ebx
0x11b92:    83 ec 24                           	sub esp, 0x24
0x11b95:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x11b99:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11b9f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11ba3:    31 c0                              	xor eax, eax
0x11ba5:    8d 73 48                           	lea esi, [ebx + 0x48]
0x11ba8:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x11bab -- 0x11bac
0x11bab:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x11bac -- 0x11bad
; data inside code section at 0x11bad -- 0x11bbc
0x11bad:    ff ff ff 85 c0 75 4a 83  43 60 01 89 34 24 e8      |.....uJ.C`..4$. |
; dynamically linked function: pthread_mutex_unlock at 0x11bbc -- 0x11bbd
; data inside code section at 0x11bbd -- 0x11bc8
0x11bbd:    ff ff ff 85 c0 75 78 89  1c 24 e8                  |.....ux..$.     |
; dynamically linked function: pthread_mutex_lock at 0x11bc8 -- 0x11bc9
; data inside code section at 0x11bc9 -- 0x11bd7
0x11bc9:    ff ff ff 85 c0 75 62 8d  43 18 89 04 24 e8         |.....ub.C...$.  |
; dynamically linked function: pthread_cond_signal at 0x11bd7 -- 0x11bd8
; data inside code section at 0x11bd8 -- 0x11be3
0x11bd8:    ff ff ff 85 c0 75 4e 89  1c 24 e8                  |.....uN..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x11be3 -- 0x11be4
; data inside code section at 0x11be4 -- 0x11be6
0x11be4:    ff ff                                              |..              |
; function: function_11be6 at 0x11be6 -- 0x11bfe
0x11be6:    ff 85 c0 75 4c 8b                  	inc dword ptr [ebp - 0x74b38a40]
0x11bec:    44                                 	inc esp
0x11bed:    24 1c                              	and al, 0x1c
0x11bef:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x11bf6:    75 30                              	jne 0x11c28 <function_11c28>
0x11bf8:    83 c4 24                           	add esp, 0x24
0x11bfb:    5b                                 	pop ebx
0x11bfc:    5e                                 	pop esi
0x11bfd:    c3                                 	ret 
; data inside code section at 0x11bfe -- 0x11c1d
0x11bfe:    8d 5c 24 14 89 44 24 18  c7 44 24 14 20 78 02 00   |.\$..D$..D$. x..|
0x11c0e:    89 1c 24 e8 0a 19 01 00  89 c6 89 1c 24 e8 c0      |..$.........$.. |
; function: function_11c1d at 0x11c1d -- 0x11c22
0x11c1d:    e9 00 00 89 34                     	jmp 0x348a1c22 <function_348a1c22>
; data inside code section at 0x11c22 -- 0x11c24
0x11c22:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x11c24 -- 0x11c25
; data inside code section at 0x11c25 -- 0x11c28
0x11c25:    ff ff ff                                           |...             |
; function: function_11c28 at 0x11c28 -- 0x11c29
; dynamically linked function: __stack_chk_fail at 0x11c29 -- 0x11c2a
; data inside code section at 0x11c2a -- 0x11c2f
0x11c2a:    ff ff ff e8 d4                                     |.....           |
; function: function_11c2f at 0x11c2f -- 0x11c34
0x11c2f:    e0 00                              	loopne 0x11c31 <function_11c2f+0x2>
0x11c31:    00 e8                              	add al, ch
0x11c33:    cb                                 	retf 
; data inside code section at 0x11c34 -- 0x11c45
0x11c34:    df 00 00 e8 fa df 00 00  8d 74 26 00 e8 59 e0 00   |.........t&..Y..|
0x11c44:    00                                                 |.               |
; section: .text._ZN15CSemaphoreGrantD2Ev
; function: _ZN15CSemaphoreGrantD1Ev at 0x11c50 -- 0x11c8a
0x11c50:    53                                 	push ebx
0x11c51:    83 ec 28                           	sub esp, 0x28
0x11c54:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x11c58:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11c5e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11c62:    31 c0                              	xor eax, eax
0x11c64:    80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x11c68:    74 0e                              	je 0x11c78 <_ZN15CSemaphoreGrantD1Ev+0x28>
0x11c6a:    8b 03                              	mov eax, dword ptr [ebx]
0x11c6c:    89 04 24                           	mov dword ptr [esp], eax
0x11c6f:    e8 6c 1b 01 00                     	call 0x237e0 <function_237e0>
0x11c74:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x11c78:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x11c7c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x11c83:    75 05                              	jne 0x11c8a <_ZN15CSemaphoreGrantD1Ev+0x39>
0x11c85:    83 c4 28                           	add esp, 0x28
0x11c88:    5b                                 	pop ebx
0x11c89:    c3                                 	ret 
; data inside code section at 0x11c8a -- 0x11c8b
0x11c8a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x11c8b -- 0x11c8c
; data inside code section at 0x11c8c -- 0x11c8f
0x11c8c:    ff ff ff                                           |...             |
; section: .text._ZN5boost11unique_lockINS_5mutexEED2Ev
; function: _ZN5boost11unique_lockINS_5mutexEED1Ev at 0x11c90 -- 0x11cc5
0x11c90:    83 ec 2c                           	sub esp, 0x2c
0x11c93:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x11c97:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x11c9e:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x11ca2:    31 d2                              	xor edx, edx
0x11ca4:    80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x11ca8:    75 16                              	jne 0x11cc0 <_ZN5boost11unique_lockINS_5mutexEED1Ev+0x30>
0x11caa:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x11cae:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x11cb5:    75 1c                              	jne 0x11cd3 <function_11cd3>
0x11cb7:    83 c4 2c                           	add esp, 0x2c
0x11cba:    c3                                 	ret 
; data inside code section at 0x11cbb -- 0x11cc0
0x11cbb:    90 8d 74 26 00                                     |..t&.           |
0x11cc0:    8b 00                              	mov eax, dword ptr [eax]
0x11cc2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x11cc5 -- 0x11cc6
0x11cc5:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x11cc6 -- 0x11cc7
; data inside code section at 0x11cc7 -- 0x11cc9
0x11cc7:    ff ff                                              |..              |
; function: function_11cc9 at 0x11cc9 -- 0x11cd0
0x11cc9:    ff 85 c0 74 dc e8                  	inc dword ptr [ebp - 0x17238b40]
0x11ccf:    cb                                 	retf 
; data inside code section at 0x11cd0 -- 0x11cd3
0x11cd0:    e0 00 00                                           |...             |
; function: function_11cd3 at 0x11cd3 -- 0x11cd4
; dynamically linked function: __stack_chk_fail at 0x11cd4 -- 0x11cd5
; data inside code section at 0x11cd5 -- 0x11cd8
0x11cd5:    ff ff ff                                           |...             |
; section: .text._ZN5boost10lock_guardINS_12shared_mutexEED2Ev
; function: _ZN5boost10lock_guardINS_12shared_mutexEED1Ev at 0x11ce0 -- 0x11cfe
0x11ce0:    57                                 	push edi
0x11ce1:    56                                 	push esi
0x11ce2:    53                                 	push ebx
0x11ce3:    83 ec 20                           	sub esp, 0x20
0x11ce6:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11cec:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x11cf0:    31 c0                              	xor eax, eax
0x11cf2:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x11cf6:    8b 18                              	mov ebx, dword ptr [eax]
0x11cf8:    8d 73 08                           	lea esi, [ebx + 8]
0x11cfb:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x11cfe -- 0x11cff
0x11cfe:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x11cff -- 0x11d00
; data inside code section at 0x11d00 -- 0x11d1a
0x11d00:    ff ff ff 85 c0 0f 85 8c  00 00 00 c6 43 04 00 8d   |............C...|
0x11d10:    7b 68 c6 43 06 00 89 3c  24 e8                     |{h.C...<$.      |
; dynamically linked function: pthread_mutex_lock at 0x11d1a -- 0x11d1b
; data inside code section at 0x11d1b -- 0x11d2c
0x11d1b:    ff ff ff 85 c0 75 70 8d  83 80 00 00 00 89 04 24   |.....up........$|
0x11d2b:    e8                                                 |.               |
; dynamically linked function: pthread_cond_signal at 0x11d2c -- 0x11d2d
; data inside code section at 0x11d2d -- 0x11d3c
0x11d2d:    ff ff ff 85 c0 0f 85 b7  00 00 00 89 3c 24 e8      |............<$. |
; dynamically linked function: pthread_mutex_unlock at 0x11d3c -- 0x11d3d
; data inside code section at 0x11d3d -- 0x11d4f
0x11d3d:    ff ff ff 85 c0 0f 85 a2  00 00 00 8d 7b 20 89 3c   |............{ .<|
0x11d4d:    24 e8                                              |$.              |
; dynamically linked function: pthread_mutex_lock at 0x11d4f -- 0x11d50
; data inside code section at 0x11d50 -- 0x11d52
0x11d50:    ff ff                                              |..              |
; function: function_11d52 at 0x11d52 -- 0x11d59
0x11d52:    ff 85 c0 75 3b 83                  	inc dword ptr [ebp - 0x7cc48a40]
0x11d58:    c3                                 	ret 
; data inside code section at 0x11d59 -- 0x11d5e
0x11d59:    38 89 1c 24 e8                                     |8..$.           |
; dynamically linked function: pthread_cond_broadcast at 0x11d5e -- 0x11d5f
; data inside code section at 0x11d5f -- 0x11d6a
0x11d5f:    ff ff ff 85 c0 75 60 89  3c 24 e8                  |.....u`.<$.     |
; dynamically linked function: pthread_mutex_unlock at 0x11d6a -- 0x11d6b
; data inside code section at 0x11d6b -- 0x11d76
0x11d6b:    ff ff ff 85 c0 75 78 89  34 24 e8                  |.....ux.4$.     |
; dynamically linked function: pthread_mutex_unlock at 0x11d76 -- 0x11d77
; data inside code section at 0x11d77 -- 0x11d79
0x11d77:    ff ff                                              |..              |
; function: function_11d79 at 0x11d79 -- 0x11d92
0x11d79:    ff 85 c0 75 76 8b                  	inc dword ptr [ebp - 0x74898a40]
0x11d7f:    44                                 	inc esp
0x11d80:    24 1c                              	and al, 0x1c
0x11d82:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x11d89:    75 36                              	jne 0x11dc1 <function_11dc1>
0x11d8b:    83 c4 20                           	add esp, 0x20
0x11d8e:    5b                                 	pop ebx
0x11d8f:    5e                                 	pop esi
0x11d90:    5f                                 	pop edi
0x11d91:    c3                                 	ret 
; data inside code section at 0x11d92 -- 0x11db6
0x11d92:    e8 bb df 00 00 8d 5c 24  14 89 44 24 18 c7 44 24   |......\$..D$..D$|
0x11da2:    14 20 78 02 00 89 1c 24  e8 c1 18 01 00 89 c6 89   |. x....$........|
0x11db2:    1c 24 e8 77                                        |.$.w            |
; function: function_11db6 at 0x11db6 -- 0x11dbb
0x11db6:    e9 00 00 89 34                     	jmp 0x348a1dbb <function_348a1dbb>
; data inside code section at 0x11dbb -- 0x11dbd
0x11dbb:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x11dbd -- 0x11dbe
; data inside code section at 0x11dbe -- 0x11dc1
0x11dbe:    ff ff ff                                           |...             |
; function: function_11dc1 at 0x11dc1 -- 0x11dc2
; dynamically linked function: __stack_chk_fail at 0x11dc2 -- 0x11dc3
; data inside code section at 0x11dc3 -- 0x11de6
0x11dc3:    ff ff ff c7 44 24 0c 20  0d 03 00 c7 44 24 08 53   |....D$. ....D$.S|
0x11dd3:    00 00 00 c7 44 24 04 5c  d5 00 00 c7 04 24 20 d7   |....D$.\.....$ .|
0x11de3:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x11de6 -- 0x11de7
; data inside code section at 0x11de7 -- 0x11df9
0x11de7:    ff ff ff e8 97 df 00 00  e8 62 e0 00 00 e8 f5 df   |.........b......|
0x11df7:    00 00                                              |..              |
; section: .text._ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv
; function: _ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv at 0x11e00 -- 0x11efa
0x11e00:    83 ec 6c                           	sub esp, 0x6c
0x11e03:    89 74 24 60                        	mov dword ptr [esp + 0x60], esi
0x11e07:    8d 74 24 18                        	lea esi, [esp + 0x18]
0x11e0b:    89 7c 24 64                        	mov dword ptr [esp + 0x64], edi
0x11e0f:    8d 7c 24 34                        	lea edi, [esp + 0x34]
0x11e13:    89 5c 24 5c                        	mov dword ptr [esp + 0x5c], ebx
0x11e17:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x11e1b:    89 6c 24 68                        	mov dword ptr [esp + 0x68], ebp
0x11e1f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x11e25:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x11e29:    31 c0                              	xor eax, eax
0x11e2b:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x11e33:    c7 44 24 3c 00 00 00 00            	mov dword ptr [esp + 0x3c], 0
0x11e3b:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x11e43:    c7 44 24 44 ff ff ff ff            	mov dword ptr [esp + 0x44], 0xffffffff
0x11e4b:    c7 44 24 34 a8 16 03 00            	mov dword ptr [esp + 0x34], 0x316a8
0x11e53:    c7 44 24 48 b8 16 03 00            	mov dword ptr [esp + 0x48], 0x316b8
0x11e5b:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x11e63:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x11e6b:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x11e73:    c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x11e7b:    c7 44 24 18 e8 16 03 00            	mov dword ptr [esp + 0x18], 0x316e8
0x11e83:    c7 44 24 2c 00 17 03 00            	mov dword ptr [esp + 0x2c], 0x31700
0x11e8b:    c7 44 24 30 14 17 03 00            	mov dword ptr [esp + 0x30], 0x31714
0x11e93:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x11e97:    89 34 24                           	mov dword ptr [esp], esi
0x11e9a:    e8 11 0b 01 00                     	call 0x229b0 <function_229b0>
0x11e9f:    80 3d 28 17 03 00 00               	cmp byte ptr [0x31728], 0
0x11ea6:    c7 44 24 20 60 0d 03 00            	mov dword ptr [esp + 0x20], 0x30d60 ; "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x11eae:    c7 44 24 24 40 d7 00 00            	mov dword ptr [esp + 0x24], 0xd740 ; "/usr/include/boost/exception/detail/exception_ptr.hpp"
0x11eb6:    c7 44 24 28 51 00 00 00            	mov dword ptr [esp + 0x28], 0x51
0x11ebe:    0f 84 94 00 00 00                  	je 0x11f58 <function_11f58>
0x11ec4:    a1 28 17 03 00                     	mov eax, dword ptr [0x31728]
0x11ec9:    89 03                              	mov dword ptr [ebx], eax
0x11ecb:    a1 2c 17 03 00                     	mov eax, dword ptr [0x3172c]
0x11ed0:    85 c0                              	test eax, eax
0x11ed2:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x11ed5:    74 04                              	je 0x11edb <_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv+0xdb>
0x11ed7:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x11edb:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x11edf:    89 04 24                           	mov dword ptr [esp], eax
0x11ee2:    c7 44 24 30 50 0e 03 00            	mov dword ptr [esp + 0x30], 0x30e50
0x11eea:    c7 44 24 18 a8 16 03 00            	mov dword ptr [esp + 0x18], 0x316a8
0x11ef2:    c7 44 24 2c b8 16 03 00            	mov dword ptr [esp + 0x2c], 0x316b8
; data inside code section at 0x11efa -- 0x11efb
0x11efa:    e8                                                 |.               |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x11efb -- 0x11efc
; data inside code section at 0x11efc -- 0x11f1f
0x11efc:    ff ff ff 89 34 24 e8 a9  f4 00 00 8d 44 24 48 89   |....4$......D$H.|
0x11f0c:    04 24 c7 44 24 34 a8 16  03 00 c7 44 24 48 b8 16   |.$.D$4.....D$H..|
0x11f1c:    03 00 e8                                           |...             |
; dynamically linked function: _ZNSt9bad_allocD2Ev at 0x11f1f -- 0x11f20
; data inside code section at 0x11f20 -- 0x11f22
0x11f20:    ff ff                                              |..              |
; function: function_11f22 at 0x11f22 -- 0x11f54
0x11f22:    ff 89 3c 24 e8 85                  	dec dword ptr [ecx - 0x7a17dbc4]
0x11f28:    f4                                 	hlt 
0x11f29:    00 00                              	add byte ptr [eax], al
0x11f2b:    89 d8                              	mov eax, ebx
0x11f2d:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x11f31:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x11f38:    0f 85 e6 00 00 00                  	jne 0x12024 <function_12024>
0x11f3e:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x11f42:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x11f46:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x11f4a:    8b 6c 24 68                        	mov ebp, dword ptr [esp + 0x68]
0x11f4e:    83 c4 6c                           	add esp, 0x6c
0x11f51:    c2 04 00                           	ret 4
; data inside code section at 0x11f54 -- 0x11f58
0x11f54:    8d 74 26 00                                        |.t&.            |
; function: function_11f58 at 0x11f58 -- 0x11f5f
0x11f58:    c7 04 24 28 17 03 00               	mov dword ptr [esp], 0x31728
; data inside code section at 0x11f5f -- 0x11f60
0x11f5f:    e8                                                 |.               |
; dynamically linked function: __cxa_guard_acquire at 0x11f60 -- 0x11f61
; data inside code section at 0x11f61 -- 0x11f74
0x11f61:    ff ff ff 85 c0 0f 84 58  ff ff ff c7 04 24 1c 00   |.......X.....$..|
0x11f71:    00 00 e8                                           |...             |
; dynamically linked function: _Znwj at 0x11f74 -- 0x11f75
; data inside code section at 0x11f75 -- 0x11fd7
0x11f75:    ff ff ff 89 c5 c7 00 18  0e 03 00 8b 44 24 1c 85   |............D$..|
0x11f85:    c0 89 45 04 74 08 8b 10  89 04 24 ff 52 0c 8b 44   |..E.t.....$.R..D|
0x11f95:    24 20 c7 45 00 e8 16 03  00 c7 45 14 00 17 03 00   |$ .E......E.....|
0x11fa5:    c7 45 18 14 17 03 00 89  45 08 8b 44 24 24 c7 05   |.E......E..D$$..|
0x11fb5:    2c 17 03 00 00 00 00 00  89 45 0c 8b 44 24 28 89   |,........E..D$(.|
0x11fc5:    45 10 8d 45 18 a3 28 17  03 00 c7 04 24 10 00 00   |E..E..(.....$...|
0x11fd5:    00 e8                                              |..              |
; dynamically linked function: _Znwj at 0x11fd7 -- 0x11fd8
; data inside code section at 0x11fd8 -- 0x11fff
0x11fd8:    ff ff ff c7 40 04 01 00  00 00 c7 00 30 17 03 00   |....@.......0...|
0x11fe8:    89 68 0c c7 40 08 01 00  00 00 a3 2c 17 03 00 c7   |.h..@......,....|
0x11ff8:    04 24 28 17 03 00 e8                               |.$(....         |
; dynamically linked function: __cxa_guard_release at 0x11fff -- 0x12000
; data inside code section at 0x12000 -- 0x12007
0x12000:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x12007 -- 0x1201a
; data inside code section at 0x1201a -- 0x1201b
0x1201a:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x1201b -- 0x1201c
; data inside code section at 0x1201c -- 0x1201f
0x1201c:    ff ff ff                                           |...             |
; function: function_1201f at 0x1201f -- 0x12024
0x1201f:    e9 a0 fe ff ff                     	jmp 0x11ec4
; function: function_12024 at 0x12024 -- 0x12025
; dynamically linked function: __stack_chk_fail at 0x12025 -- 0x12026
; data inside code section at 0x12026 -- 0x12031
0x12026:    ff ff ff 89 04 24 8d 74  26 00 e8                  |.....$.t&..     |
; dynamically linked function: __cxa_begin_catch at 0x12031 -- 0x12032
; data inside code section at 0x12032 -- 0x1203f
0x12032:    ff ff ff 8b 45 00 89 2c  24 ff 50 04 e8            |....E..,$.P..   |
; dynamically linked function: __cxa_rethrow at 0x1203f -- 0x12040
; data inside code section at 0x12040 -- 0x12044
0x12040:    ff ff ff 89                                        |....            |
; function: function_12044 at 0x12044 -- 0x12045
0x12044:    c3                                 	ret 
; data inside code section at 0x12045 -- 0x12049
0x12045:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZdlPv at 0x12049 -- 0x1204a
; data inside code section at 0x1204a -- 0x1204d
0x1204a:    ff ff ff                                           |...             |
; function: function_1204d at 0x1204d -- 0x1204e
; data inside code section at 0x1204e -- 0x12055
0x1204e:    04 24 28 17 03 00 e8                               |.$(....         |
; dynamically linked function: __cxa_guard_abort at 0x12055 -- 0x12056
; data inside code section at 0x12056 -- 0x12061
0x12056:    ff ff ff 89 34 24 e8 2f  f9 00 00                  |....4$./...     |
; function: function_12061 at 0x12061 -- 0x12062
; data inside code section at 0x12062 -- 0x1206d
0x12062:    3c 24 e8 c7 f3 00 00 89  1c 24 e8                  |<$.......$.     |
; dynamically linked function: _Unwind_Resume at 0x1206d -- 0x1206e
; data inside code section at 0x1206e -- 0x12072
0x1206e:    ff ff ff 89                                        |....            |
; function: function_12072 at 0x12072 -- 0x12073
0x12072:    c3                                 	ret 
; data inside code section at 0x12073 -- 0x12074
0x12073:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x12074 -- 0x12075
; data inside code section at 0x12075 -- 0x12078
0x12075:    ff ff ff                                           |...             |
; function: function_12078 at 0x12078 -- 0x1207a
0x12078:    eb d3                              	jmp 0x1204d <function_1204d>
; function: function_1207a at 0x1207a -- 0x12082
0x1207a:    89 c3                              	mov ebx, eax
0x1207c:    8d 74 26 00                        	lea esi, [esi]
0x12080:    eb cb                              	jmp 0x1204d <function_1204d>
; function: function_12082 at 0x12082 -- 0x12096
0x12082:    89 c3                              	mov ebx, eax
0x12084:    c7 44 24 30 50 0e 03 00            	mov dword ptr [esp + 0x30], 0x30e50
0x1208c:    89 34 24                           	mov dword ptr [esp], esi
0x1208f:    e8 9c f3 00 00                     	call 0x21430
0x12094:    eb cb                              	jmp 0x12061 <function_12061>
; section: .text._ZN5boost11unique_lockINS_5mutexEE4lockEv
; function: _ZN5boost11unique_lockINS_5mutexEE4lockEv at 0x120a0 -- 0x120bf
0x120a0:    53                                 	push ebx
0x120a1:    83 ec 48                           	sub esp, 0x48
0x120a4:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x120a8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x120ae:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x120b2:    31 c0                              	xor eax, eax
0x120b4:    80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x120b8:    75 24                              	jne 0x120de <function_120de>
0x120ba:    8b 03                              	mov eax, dword ptr [ebx]
0x120bc:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x120bf -- 0x120c0
0x120bf:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x120c0 -- 0x120c1
; data inside code section at 0x120c1 -- 0x120c3
0x120c1:    ff ff                                              |..              |
; function: function_120c3 at 0x120c3 -- 0x120de
0x120c3:    ff 85 c0 75 4f 8b                  	inc dword ptr [ebp - 0x74b08a40]
0x120c9:    44                                 	inc esp
0x120ca:    24 3c                              	and al, 0x3c
0x120cc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x120d3:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x120d7:    75 39                              	jne 0x12112 <function_12112>
0x120d9:    83 c4 48                           	add esp, 0x48
0x120dc:    5b                                 	pop ebx
0x120dd:    c3                                 	ret 
; function: function_120de at 0x120de -- 0x1210d
0x120de:    8d 5c 24 2c                        	lea ebx, [esp + 0x2c]
0x120e2:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x120ea:    c7 44 24 2c 20 78 02 00            	mov dword ptr [esp + 0x2c], 0x27820
0x120f2:    89 1c 24                           	mov dword ptr [esp], ebx
0x120f5:    e8 36 19 01 00                     	call 0x23a30 <function_23a30>
0x120fa:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x120fe:    89 1c 24                           	mov dword ptr [esp], ebx
0x12101:    e8 ea e9 00 00                     	call 0x20af0
0x12106:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1210a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1210d -- 0x1210e
0x1210d:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1210e -- 0x1210f
; data inside code section at 0x1210f -- 0x12112
0x1210f:    ff ff ff                                           |...             |
; function: function_12112 at 0x12112 -- 0x12113
; dynamically linked function: __stack_chk_fail at 0x12113 -- 0x12114
; data inside code section at 0x12114 -- 0x12116
0x12114:    ff ff                                              |..              |
; function: function_12116 at 0x12116 -- 0x12131
0x12116:    ff 8d 5c 24 34 89                  	dec dword ptr [ebp - 0x76cbdba4]
0x1211c:    44                                 	inc esp
0x1211d:    24 38                              	and al, 0x38
0x1211f:    c7 44 24 34 20 78 02 00            	mov dword ptr [esp + 0x34], 0x27820
0x12127:    89 1c 24                           	mov dword ptr [esp], ebx
0x1212a:    e8 01 19 01 00                     	call 0x23a30 <function_23a30>
0x1212f:    eb c9                              	jmp 0x120fa
; section: .text._ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE
; function: _ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE at 0x12140 -- 0x1215b
0x12140:    55                                 	push ebp
0x12141:    57                                 	push edi
0x12142:    56                                 	push esi
0x12143:    53                                 	push ebx
0x12144:    83 ec 5c                           	sub esp, 0x5c
0x12147:    8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0x1214b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12151:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x12155:    31 c0                              	xor eax, eax
0x12157:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
; data inside code section at 0x1215b -- 0x1215c
0x1215b:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6detail23get_current_thread_dataEv at 0x1215c -- 0x1215d
; data inside code section at 0x1215d -- 0x12185
0x1215d:    ff ff ff 8d 6f 18 89 7c  24 1c 85 c0 89 44 24 18   |....o..|$....D$.|
0x1216d:    74 0d 80 b8 f8 00 00 00  00 0f 85 fc 00 00 00 c6   |t...............|
0x1217d:    44 24 20 00 89 3c 24 e8                            |D$ ..<$.        |
; dynamically linked function: pthread_mutex_lock at 0x12185 -- 0x12186
; data inside code section at 0x12186 -- 0x12191
0x12186:    ff ff ff 85 c0 0f 85 4d  02 00 00                  |.......M...     |
; function: function_12191 at 0x12191 -- 0x12192
; data inside code section at 0x12192 -- 0x121a1
0x12192:    7b 04 00 0f 84 38 01 00  00 8b 03 89 04 24 e8      |{....8.......$. |
; dynamically linked function: pthread_mutex_unlock at 0x121a1 -- 0x121a2
; data inside code section at 0x121a2 -- 0x121b9
0x121a2:    ff ff ff 85 c0 0f 85 bf  00 00 00 c6 43 04 00 89   |............C...|
0x121b2:    7c 24 04 89 2c 24 e8                               ||$..,$.         |
; dynamically linked function: pthread_cond_wait at 0x121b9 -- 0x121ba
; data inside code section at 0x121ba -- 0x121c6
0x121ba:    ff ff ff 85 c0 0f 85 56  01 00 00 e8               |.......V....    |
; dynamically linked function: _ZN5boost11this_thread18interruption_pointEv at 0x121c6 -- 0x121c7
; data inside code section at 0x121c7 -- 0x121d9
0x121c7:    ff ff ff 8b 44 24 1c 80  7c 24 20 00 89 04 24 75   |....D$..|$ ...$u|
0x121d7:    48 e8                                              |H.              |
; dynamically linked function: pthread_mutex_unlock at 0x121d9 -- 0x121da
; data inside code section at 0x121da -- 0x121f5
0x121da:    ff ff ff 85 c0 0f 85 d5  01 00 00 80 7b 04 00 0f   |............{...|
0x121ea:    85 79 01 00 00 8b 03 89  04 24 e8                  |.y.......$.     |
; dynamically linked function: pthread_mutex_lock at 0x121f5 -- 0x121f6
; data inside code section at 0x121f6 -- 0x121f8
0x121f6:    ff ff                                              |..              |
; function: function_121f8 at 0x121f8 -- 0x1221e
0x121f8:    ff 85 c0 0f 85 43                  	inc dword ptr [ebp + 0x43850fc0]
0x121fe:    01 00                              	add dword ptr [eax], eax
0x12200:    00 8b 44 24 4c 65                  	add byte ptr [ebx + 0x654c2444], cl
0x12206:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1220c:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x12210:    0f 85 29 01 00 00                  	jne 0x1233f <function_1233f>
0x12216:    83 c4 5c                           	add esp, 0x5c
0x12219:    5b                                 	pop ebx
0x1221a:    5e                                 	pop esi
0x1221b:    5f                                 	pop edi
0x1221c:    5d                                 	pop ebp
0x1221d:    c3                                 	ret 
; data inside code section at 0x1221e -- 0x12221
0x1221e:    66 90 e8                                           |f..             |
; dynamically linked function: pthread_mutex_unlock at 0x12221 -- 0x12222
; data inside code section at 0x12222 -- 0x12238
0x12222:    ff ff ff 85 c0 0f 85 69  01 00 00 8b 74 24 18 83   |.......i....t$..|
0x12232:    c6 18 89 34 24 e8                                  |...4$.          |
; dynamically linked function: pthread_mutex_lock at 0x12238 -- 0x12239
; data inside code section at 0x12239 -- 0x12260
0x12239:    ff ff ff 85 c0 0f 85 be  01 00 00 8b 44 24 18 c7   |............D$..|
0x12249:    80 fc 00 00 00 00 00 00  00 c7 80 00 01 00 00 00   |................|
0x12259:    00 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: pthread_mutex_unlock at 0x12260 -- 0x12261
; data inside code section at 0x12261 -- 0x1226c
0x12261:    ff ff ff 85 c0 0f 84 79  ff ff ff                  |.......y...     |
; function: function_1226c at 0x1226c -- 0x1226d
; data inside code section at 0x1226d -- 0x12284
0x1226d:    dd df 00 00 8d b4 26 00  00 00 00 8d 70 18 c6 44   |......&.....p..D|
0x1227d:    24 20 01 89 34 24 e8                               |$ ..4$.         |
; dynamically linked function: pthread_mutex_lock at 0x12284 -- 0x12285
; data inside code section at 0x12285 -- 0x122b5
0x12285:    ff ff ff 85 c0 0f 85 9b  01 00 00 8b 44 24 18 80   |............D$..|
0x12295:    b8 f9 00 00 00 00 0f 85  a7 01 00 00 89 b8 fc 00   |................|
0x122a5:    00 00 89 a8 00 01 00 00  8b 44 24 1c 89 04 24 e8   |.........D$...$.|
; dynamically linked function: pthread_mutex_lock at 0x122b5 -- 0x122b6
; data inside code section at 0x122b6 -- 0x122c5
0x122b6:    ff ff ff 85 c0 0f 85 cc  01 00 00 89 34 24 e8      |............4$. |
; dynamically linked function: pthread_mutex_unlock at 0x122c5 -- 0x122c6
; data inside code section at 0x122c6 -- 0x122c9
0x122c6:    ff ff ff                                           |...             |
; function: function_122c9 at 0x122c9 -- 0x122d3
0x122c9:    85 c0                              	test eax, eax
0x122cb:    0f 84 c0 fe ff ff                  	je 0x12191 <function_12191>
0x122d1:    eb 99                              	jmp 0x1226c <function_1226c>
; data inside code section at 0x122d3 -- 0x122fb
0x122d3:    8d 5c 24 24 c7 44 24 28  00 00 00 00 c7 44 24 24   |.\$$.D$(.....D$$|
0x122e3:    20 78 02 00 89 1c 24 e8  e1 17 01 00 89 1c 24 89   | x....$.......$.|
0x122f3:    c6 31 db e8 95 e8 00 00                            |.1......        |
; function: function_122fb at 0x122fb -- 0x122fc
; data inside code section at 0x122fc -- 0x12307
0x122fc:    44 24 18 89 04 24 e8 b9  18 01 00                  |D$...$.....     |
; function: function_12307 at 0x12307 -- 0x12308
; data inside code section at 0x12308 -- 0x12313
0x12308:    db 74 08 89 1c 24 e8 cd  1e 01 00                  |.t...$.....     |
; function: function_12313 at 0x12313 -- 0x12314
; data inside code section at 0x12314 -- 0x12317
0x12314:    34 24 e8                                           |4$.             |
; dynamically linked function: _Unwind_Resume at 0x12317 -- 0x12318
; data inside code section at 0x12318 -- 0x1233b
0x12318:    ff ff ff c7 44 24 0c 20  b9 02 00 c7 44 24 08 36   |....D$. ....D$.6|
0x12328:    00 00 00 c7 44 24 04 5c  d5 00 00 c7 04 24 05 a0   |....D$.\.....$..|
0x12338:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x1233b -- 0x1233c
; data inside code section at 0x1233c -- 0x1233f
0x1233c:    ff ff ff                                           |...             |
; function: function_1233f at 0x1233f -- 0x12340
; dynamically linked function: __stack_chk_fail at 0x12340 -- 0x12341
; data inside code section at 0x12341 -- 0x12343
0x12341:    ff ff                                              |..              |
; function: function_12343 at 0x12343 -- 0x12368
0x12343:    ff 8d 5c 24 44 89                  	dec dword ptr [ebp - 0x76bbdba4]
0x12349:    44                                 	inc esp
0x1234a:    24 48                              	and al, 0x48
0x1234c:    c7 44 24 44 20 78 02 00            	mov dword ptr [esp + 0x44], 0x27820
0x12354:    89 1c 24                           	mov dword ptr [esp], ebx
0x12357:    e8 74 17 01 00                     	call 0x23ad0
0x1235c:    89 c6                              	mov esi, eax
0x1235e:    89 1c 24                           	mov dword ptr [esp], ebx
0x12361:    e8 2a e8 00 00                     	call 0x20b90 <function_20b90>
0x12366:    eb ab                              	jmp 0x12313 <function_12313>
; data inside code section at 0x12368 -- 0x12392
0x12368:    8d 5c 24 3c c7 44 24 40  00 00 00 00 c7 44 24 3c   |.\$<.D$@.....D$<|
0x12378:    20 78 02 00 89 1c 24 e8  4c 17 01 00 89 c6 89 1c   | x....$.L.......|
0x12388:    24 e8 02 e8 00 00 89 34  24 e8                     |$......4$.      |
; dynamically linked function: _Unwind_Resume at 0x12392 -- 0x12393
; data inside code section at 0x12393 -- 0x123b6
0x12393:    ff ff ff c7 44 24 0c 80  b9 02 00 c7 44 24 08 74   |....D$......D$.t|
0x123a3:    00 00 00 c7 44 24 04 ec  d6 00 00 c7 04 24 e7 9e   |....D$.......$..|
0x123b3:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x123b6 -- 0x123b7
; data inside code section at 0x123b7 -- 0x123da
0x123b7:    ff ff ff c7 44 24 0c 80  b9 02 00 c7 44 24 08 7b   |....D$......D$.{|
0x123c7:    00 00 00 c7 44 24 04 ec  d6 00 00 c7 04 24 e7 9e   |....D$.......$..|
0x123d7:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x123da -- 0x123db
; data inside code section at 0x123db -- 0x123fe
0x123db:    ff ff ff c7 44 24 0c c0  b8 02 00 c7 44 24 08 6d   |....D$......D$.m|
0x123eb:    00 00 00 c7 44 24 04 ec  d6 00 00 c7 04 24 d0 9e   |....D$.......$..|
0x123fb:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x123fe -- 0x123ff
; data inside code section at 0x123ff -- 0x12401
0x123ff:    ff ff                                              |..              |
; function: function_12401 at 0x12401 -- 0x1242b
0x12401:    ff 8d 74 24 34 89                  	dec dword ptr [ebp - 0x76cbdb8c]
0x12407:    44                                 	inc esp
0x12408:    24 38                              	and al, 0x38
0x1240a:    c7 44 24 34 20 78 02 00            	mov dword ptr [esp + 0x34], 0x27820
0x12412:    89 34 24                           	mov dword ptr [esp], esi
0x12415:    e8 b6 16 01 00                     	call 0x23ad0
0x1241a:    89 c7                              	mov edi, eax
0x1241c:    89 34 24                           	mov dword ptr [esp], esi
0x1241f:    89 fe                              	mov esi, edi
0x12421:    e8 6a e7 00 00                     	call 0x20b90 <function_20b90>
0x12426:    e9 dc fe ff ff                     	jmp 0x12307 <function_12307>
; function: function_1242b at 0x1242b -- 0x12448
0x1242b:    8d 5c 24 2c                        	lea ebx, [esp + 0x2c]
0x1242f:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x12433:    c7 44 24 2c 20 78 02 00            	mov dword ptr [esp + 0x2c], 0x27820
0x1243b:    89 1c 24                           	mov dword ptr [esp], ebx
0x1243e:    e8 8d 16 01 00                     	call 0x23ad0
0x12443:    e9 14 ff ff ff                     	jmp 0x1235c
; data inside code section at 0x12448 -- 0x12457
0x12448:    c6 80 f9 00 00 00 00 c7  04 24 01 00 00 00 e8      |.........$..... |
; dynamically linked function: __cxa_allocate_exception at 0x12457 -- 0x12458
; data inside code section at 0x12458 -- 0x1246f
0x12458:    ff ff ff c7 44 24 08 00  00 00 00 c7 44 24 04 7c   |....D$......D$.||
0x12468:    14 03 00 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_throw at 0x1246f -- 0x12470
; data inside code section at 0x12470 -- 0x12474
0x12470:    ff ff ff 89                                        |....            |
; function: function_12474 at 0x12474 -- 0x12475
0x12474:    c3                                 	ret 
; data inside code section at 0x12475 -- 0x12479
0x12475:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: pthread_mutex_unlock at 0x12479 -- 0x1247a
; data inside code section at 0x1247a -- 0x12489
0x1247a:    ff ff ff 85 c0 0f 85 e7  fd ff ff 89 1c 24 e8      |.............$. |
; dynamically linked function: _Unwind_Resume at 0x12489 -- 0x1248a
; data inside code section at 0x1248a -- 0x124ad
0x1248a:    ff ff ff c7 44 24 0c c0  b8 02 00 c7 44 24 08 69   |....D$......D$.i|
0x1249a:    00 00 00 c7 44 24 04 ec  d6 00 00 c7 04 24 d0 9e   |....D$.......$..|
0x124aa:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x124ad -- 0x124ae
; data inside code section at 0x124ae -- 0x124b1
0x124ae:    ff ff ff                                           |...             |
; function: function_124b1 at 0x124b1 -- 0x124b8
0x124b1:    89 c6                              	mov esi, eax
0x124b3:    e9 43 fe ff ff                     	jmp 0x122fb <function_122fb>
; function: function_124b8 at 0x124b8 -- 0x124ba
0x124b8:    eb f7                              	jmp 0x124b1 <function_124b1>
; section: .text._ZN5boost10lock_guardINS_12shared_mutexEEC2ERS1_
; function: _ZN5boost10lock_guardINS_12shared_mutexEEC1ERS1_ at 0x124c0 -- 0x124e4
0x124c0:    55                                 	push ebp
0x124c1:    57                                 	push edi
0x124c2:    56                                 	push esi
0x124c3:    53                                 	push ebx
0x124c4:    83 ec 3c                           	sub esp, 0x3c
0x124c7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x124cb:    8d 6c 24 2b                        	lea ebp, [esp + 0x2b]
0x124cf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x124d5:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x124d9:    31 c0                              	xor eax, eax
0x124db:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x124df:    89 18                              	mov dword ptr [eax], ebx
0x124e1:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x124e4 -- 0x124e5
0x124e4:    e8                                                 |.               |
; dynamically linked function: _ZN5boost11this_thread20disable_interruptionC1Ev at 0x124e5 -- 0x124e6
; data inside code section at 0x124e6 -- 0x124f9
0x124e6:    ff ff ff 8d 43 08 89 44  24 18 c6 44 24 1c 00 89   |....C..D$..D$...|
0x124f6:    04 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_lock at 0x124f9 -- 0x124fa
; data inside code section at 0x124fa -- 0x12510
0x124fa:    ff ff ff 85 c0 75 74 c6  44 24 1c 01 8d 74 24 18   |.....ut.D$...t$.|
0x1250a:    8d 7b 68 8d 76 00                                  |.{h.v.          |
; function: function_12510 at 0x12510 -- 0x12511
; data inside code section at 0x12511 -- 0x1252b
0x12511:    0b 85 c9 75 32 80 7b 04  00 75 2c 80 7c 24 1c 00   |...u2.{..u,.|$..|
0x12521:    c6 43 04 01 75 39 89 2c  24 e8                     |.C..u9.,$.      |
; dynamically linked function: _ZN5boost11this_thread20disable_interruptionD1Ev at 0x1252b -- 0x1252c
; data inside code section at 0x1252c -- 0x1252e
0x1252c:    ff ff                                              |..              |
; function: function_1252e at 0x1252e -- 0x12544
0x1252e:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x12534:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1253a:    75 6b                              	jne 0x125a7 <function_125a7>
0x1253c:    83 c4 3c                           	add esp, 0x3c
0x1253f:    5b                                 	pop ebx
0x12540:    5e                                 	pop esi
0x12541:    5f                                 	pop edi
0x12542:    5d                                 	pop ebp
0x12543:    c3                                 	ret 
; data inside code section at 0x12544 -- 0x12548
0x12544:    8d 74 26 00                                        |.t&.            |
; function: function_12548 at 0x12548 -- 0x1255a
0x12548:    c6 43 06 01                        	mov byte ptr [ebx + 6], 1
0x1254c:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x12550:    89 3c 24                           	mov dword ptr [esp], edi
0x12553:    e8 a8 20 01 00                     	call 0x24600 <function_24600>
0x12558:    eb b6                              	jmp 0x12510 <function_12510>
; data inside code section at 0x1255a -- 0x12568
0x1255a:    8d b6 00 00 00 00 8b 44  24 18 89 04 24 e8         |.......D$...$.  |
; dynamically linked function: pthread_mutex_unlock at 0x12568 -- 0x12569
; data inside code section at 0x12569 -- 0x12587
0x12569:    ff ff ff 85 c0 74 b7 e8  59 e0 00 00 8d 5c 24 20   |.....t..Y....\$ |
0x12579:    89 44 24 24 c7 44 24 20  20 78 02 00 89 1c         |.D$$.D$  x....  |
; function: function_12587 at 0x12587 -- 0x1258a
0x12587:    24 e8                              	and al, 0xe8
0x12589:    c3                                 	ret 
; data inside code section at 0x1258a -- 0x1258e
0x1258a:    18 01 00 89                                        |....            |
; function: function_1258e at 0x1258e -- 0x1258f
0x1258e:    c3                                 	ret 
; data inside code section at 0x1258f -- 0x12597
0x1258f:    89 34 24 e8 b9 1b 01 00                            |.4$.....        |
; function: function_12597 at 0x12597 -- 0x12598
; data inside code section at 0x12598 -- 0x1259b
0x12598:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZN5boost11this_thread20disable_interruptionD1Ev at 0x1259b -- 0x1259c
; data inside code section at 0x1259c -- 0x125a3
0x1259c:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x125a3 -- 0x125a4
; data inside code section at 0x125a4 -- 0x125a7
0x125a4:    ff ff ff                                           |...             |
; function: function_125a7 at 0x125a7 -- 0x125a8
; dynamically linked function: __stack_chk_fail at 0x125a8 -- 0x125a9
; data inside code section at 0x125a9 -- 0x125ab
0x125a9:    ff ff                                              |..              |
; function: function_125ab at 0x125ab -- 0x125ba
0x125ab:    ff 89 c6 89 1c 24                  	dec dword ptr [ecx + 0x241c89c6]
0x125b1:    89 f3                              	mov ebx, esi
0x125b3:    e8 58 e9 00 00                     	call 0x20f10 <function_20f10>
0x125b8:    eb dd                              	jmp 0x12597 <function_12597>
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEED2Ev
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev at 0x125c0 -- 0x125e7
0x125c0:    53                                 	push ebx
0x125c1:    83 ec 28                           	sub esp, 0x28
0x125c4:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x125c8:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x125cf:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x125d3:    31 d2                              	xor edx, edx
0x125d5:    8b 18                              	mov ebx, dword ptr [eax]
0x125d7:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x125da:    85 db                              	test ebx, ebx
0x125dc:    74 2a                              	je 0x12608 <function_12608>
0x125de:    29 d8                              	sub eax, ebx
0x125e0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x125e4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x125e7 -- 0x125e8
0x125e7:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x125e8 -- 0x125e9
; data inside code section at 0x125e9 -- 0x12602
0x125e9:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 21   |....D$.e3.....u!|
0x125f9:    89 5c 24 30 83 c4 28 5b  e9                        |.\$0..([.       |
; dynamically linked function: _ZdlPv at 0x12602 -- 0x12603
; data inside code section at 0x12603 -- 0x12605
0x12603:    ff ff                                              |..              |
; function: function_12605 at 0x12605 -- 0x12608
0x12605:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_12608 at 0x12608 -- 0x12620
0x12608:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1260c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12613:    75 05                              	jne 0x1261a <function_12608+0x12>
0x12615:    83 c4 28                           	add esp, 0x28
0x12618:    5b                                 	pop ebx
0x12619:    c3                                 	ret 
0x1261a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x12620 -- 0x12621
0x12620:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12621 -- 0x12622
; data inside code section at 0x12622 -- 0x12625
0x12622:    ff ff ff                                           |...             |
; section: .text._ZN11CNetMessageD2Ev
; function: _ZN11CNetMessageD1Ev at 0x12630 -- 0x12658
0x12630:    56                                 	push esi
0x12631:    53                                 	push ebx
0x12632:    83 ec 24                           	sub esp, 0x24
0x12635:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12639:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1263f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12643:    31 c0                              	xor eax, eax
0x12645:    8b 73 3c                           	mov esi, dword ptr [ebx + 0x3c]
0x12648:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x1264b:    85 f6                              	test esi, esi
0x1264d:    74 16                              	je 0x12665 <function_12665>
0x1264f:    29 f0                              	sub eax, esi
0x12651:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x12655:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12658 -- 0x12659
0x12658:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x12659 -- 0x1265a
; data inside code section at 0x1265a -- 0x12661
0x1265a:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x12661 -- 0x12662
; data inside code section at 0x12662 -- 0x12665
0x12662:    ff ff ff                                           |...             |
; function: function_12665 at 0x12665 -- 0x12678
0x12665:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x12668:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1266b:    85 f6                              	test esi, esi
0x1266d:    74 29                              	je 0x12698 <function_12698>
0x1266f:    29 f0                              	sub eax, esi
0x12671:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x12675:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12678 -- 0x12679
0x12678:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x12679 -- 0x1267a
; data inside code section at 0x1267a -- 0x12694
0x1267a:    ff ff ff 8b 44 24 1c 65  33 05 14 00 00 00 75 21   |....D$.e3.....u!|
0x1268a:    89 74 24 30 83 c4 24 5b  5e e9                     |.t$0..$[^.      |
; dynamically linked function: _ZdlPv at 0x12694 -- 0x12695
; data inside code section at 0x12695 -- 0x12698
0x12695:    ff ff ff                                           |...             |
; function: function_12698 at 0x12698 -- 0x126b0
0x12698:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1269c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x126a3:    75 06                              	jne 0x126ab <function_12698+0x13>
0x126a5:    83 c4 24                           	add esp, 0x24
0x126a8:    5b                                 	pop ebx
0x126a9:    5e                                 	pop esi
0x126aa:    c3                                 	ret 
0x126ab:    90                                 	nop 
0x126ac:    8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0x126b0 -- 0x126b1
0x126b0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x126b1 -- 0x126b2
; data inside code section at 0x126b2 -- 0x126b8
0x126b2:    ff ff ff 89 c6 83                                  |......          |
; function: function_126b8 at 0x126b8 -- 0x126b9
0x126b8:    c3                                 	ret 
; data inside code section at 0x126b9 -- 0x126c6
0x126b9:    04 89 1c 24 e8 2e 25 01  00 89 34 24 e8            |...$..%...4$.   |
; dynamically linked function: _Unwind_Resume at 0x126c6 -- 0x126c7
; data inside code section at 0x126c7 -- 0x126ca
0x126c7:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEC2ERKS2_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_ at 0x126d0 -- 0x1270d
0x126d0:    55                                 	push ebp
0x126d1:    31 ed                              	xor ebp, ebp
0x126d3:    57                                 	push edi
0x126d4:    56                                 	push esi
0x126d5:    53                                 	push ebx
0x126d6:    83 ec 2c                           	sub esp, 0x2c
0x126d9:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x126dd:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x126e1:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x126e7:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x126eb:    31 c0                              	xor eax, eax
0x126ed:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x126f0:    2b 37                              	sub esi, dword ptr [edi]
0x126f2:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x126f8:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x126ff:    85 f6                              	test esi, esi
0x12701:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x12708:    74 0a                              	je 0x12714 <function_12714>
0x1270a:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1270d -- 0x1270e
0x1270d:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1270e -- 0x1270f
; data inside code section at 0x1270f -- 0x12714
0x1270f:    ff ff ff 89 c5                                     |.....           |
; function: function_12714 at 0x12714 -- 0x1275f
0x12714:    01 ee                              	add esi, ebp
0x12716:    89 2b                              	mov dword ptr [ebx], ebp
0x12718:    89 6b 04                           	mov dword ptr [ebx + 4], ebp
0x1271b:    89 73 08                           	mov dword ptr [ebx + 8], esi
0x1271e:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x12721:    8b 3f                              	mov edi, dword ptr [edi]
0x12723:    39 fe                              	cmp esi, edi
0x12725:    74 20                              	je 0x12747 <function_12714+0x33>
0x12727:    89 fa                              	mov edx, edi
0x12729:    89 e9                              	mov ecx, ebp
0x1272b:    90                                 	nop 
0x1272c:    8d 74 26 00                        	lea esi, [esi]
0x12730:    85 c9                              	test ecx, ecx
0x12732:    74 05                              	je 0x12739 <function_12714+0x25>
0x12734:    0f b6 02                           	movzx eax, byte ptr [edx]
0x12737:    88 01                              	mov byte ptr [ecx], al
0x12739:    83 c2 01                           	add edx, 1
0x1273c:    83 c1 01                           	add ecx, 1
0x1273f:    39 f2                              	cmp edx, esi
0x12741:    75 ed                              	jne 0x12730 <function_12714+0x1c>
0x12743:    29 fa                              	sub edx, edi
0x12745:    01 d5                              	add ebp, edx
0x12747:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1274b:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12752:    89 6b 04                           	mov dword ptr [ebx + 4], ebp
0x12755:    75 08                              	jne 0x1275f <function_12714+0x4a>
0x12757:    83 c4 2c                           	add esp, 0x2c
0x1275a:    5b                                 	pop ebx
0x1275b:    5e                                 	pop esi
0x1275c:    5f                                 	pop edi
0x1275d:    5d                                 	pop ebp
0x1275e:    c3                                 	ret 
; data inside code section at 0x1275f -- 0x12760
0x1275f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12760 -- 0x12761
; data inside code section at 0x12761 -- 0x12764
0x12761:    ff ff ff                                           |...             |
; section: .text._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
; function: _ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev at 0x12770 -- 0x127b1
0x12770:    53                                 	push ebx
0x12771:    83 ec 28                           	sub esp, 0x28
0x12774:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x12778:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1277e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12782:    31 c0                              	xor eax, eax
0x12784:    8b 11                              	mov edx, dword ptr [ecx]
0x12786:    89 d0                              	mov eax, edx
0x12788:    c1 f8 1f                           	sar eax, 0x1f
0x1278b:    31 d0                              	xor eax, edx
0x1278d:    83 f8 13                           	cmp eax, 0x13
0x12790:    76 26                              	jbe 0x127b8 <function_127b8>
0x12792:    c7 44 24 0c e0 ae 02 00            	mov dword ptr [esp + 0xc], 0x2aee0 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x1279a:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x127a2:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x127aa:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x127b1 -- 0x127b2
0x127b1:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x127b2 -- 0x127b3
; data inside code section at 0x127b3 -- 0x127b5
0x127b3:    ff ff                                              |..              |
; function: function_127b5 at 0x127b5 -- 0x127b8
0x127b5:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_127b8 at 0x127b8 -- 0x127bf
0x127b8:    ff 24 85 90 28 01 00               	jmp dword ptr [eax*4 + 0x12890]
; data inside code section at 0x127bf -- 0x127c0
0x127bf:    90                                                 |.               |
; function: function_127c0 at 0x127c0 -- 0x127fd
0x127c0:    e8 3b 01 00 00                     	call 0x12900
0x127c5:    8d 76 00                           	lea esi, [esi]
0x127c8:    85 d2                              	test edx, edx
0x127ca:    8d b6 00 00 00 00                  	lea esi, [esi]
0x127d0:    0f 88 92 00 00 00                  	js 0x12868 <function_12868>
0x127d6:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x127d9:    85 c0                              	test eax, eax
0x127db:    74 53                              	je 0x12830 <function_12830>
0x127dd:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x127e1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x127e8:    0f 85 9c 00 00 00                  	jne 0x1288a <function_1288a>
0x127ee:    8b 10                              	mov edx, dword ptr [eax]
0x127f0:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x127f4:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x127f7:    83 c4 28                           	add esp, 0x28
0x127fa:    5b                                 	pop ebx
0x127fb:    ff e0                              	jmp eax
; data inside code section at 0x127fd -- 0x12823
0x127fd:    8d 76 00 85 d2 79 44 8b  59 04 85 db 74 25 8d 43   |.v...yD.Y...t%.C|
0x1280d:    04 89 04 24 e8 9a 04 01  00 8b 44 24 1c 65 33 05   |...$......D$.e3.|
0x1281d:    14 00 00 00 75 67                                  |....ug          |
; function: function_12823 at 0x12823 -- 0x12824
; data inside code section at 0x12824 -- 0x1282c
0x12824:    5c 24 30 83 c4 28 5b e9                            |\$0..([.        |
; dynamically linked function: _ZdlPv at 0x1282c -- 0x1282d
; data inside code section at 0x1282d -- 0x12830
0x1282d:    ff ff ff                                           |...             |
; function: function_12830 at 0x12830 -- 0x12842
0x12830:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x12834:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1283b:    75 4d                              	jne 0x1288a <function_1288a>
0x1283d:    83 c4 28                           	add esp, 0x28
0x12840:    5b                                 	pop ebx
0x12841:    c3                                 	ret 
; data inside code section at 0x12842 -- 0x12848
0x12842:    8d b6 00 00 00 00                                  |......          |
; function: function_12848 at 0x12848 -- 0x12865
0x12848:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1284c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12853:    75 35                              	jne 0x1288a <function_1288a>
0x12855:    83 c1 08                           	add ecx, 8
0x12858:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x1285c:    83 c4 28                           	add esp, 0x28
0x1285f:    5b                                 	pop ebx
0x12860:    e9 4b 04 01 00                     	jmp 0x22cb0
; data inside code section at 0x12865 -- 0x12868
0x12865:    8d 76 00                                           |.v.             |
; function: function_12868 at 0x12868 -- 0x1288a
0x12868:    8b 59 04                           	mov ebx, dword ptr [ecx + 4]
0x1286b:    85 db                              	test ebx, ebx
0x1286d:    74 c1                              	je 0x12830 <function_12830>
0x1286f:    8b 03                              	mov eax, dword ptr [ebx]
0x12871:    85 c0                              	test eax, eax
0x12873:    74 08                              	je 0x1287d <function_12868+0x15>
0x12875:    8b 10                              	mov edx, dword ptr [eax]
0x12877:    89 04 24                           	mov dword ptr [esp], eax
0x1287a:    ff 52 04                           	call dword ptr [edx + 4]
0x1287d:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12881:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12888:    74 99                              	je 0x12823
; function: function_1288a at 0x1288a -- 0x1288b
; dynamically linked function: __stack_chk_fail at 0x1288b -- 0x1288c
; data inside code section at 0x1288c -- 0x1288f
0x1288c:    ff ff ff                                           |...             |
; section: .text._ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED2Ev
; function: _ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev at 0x128e0 -- 0x12915
0x128e0:    53                                 	push ebx
0x128e1:    83 ec 28                           	sub esp, 0x28
0x128e4:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x128e8:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x128ef:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x128f3:    31 d2                              	xor edx, edx
0x128f5:    80 78 04 00                        	cmp byte ptr [eax + 4], 0
0x128f9:    75 15                              	jne 0x12910 <_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEED1Ev+0x30>
0x128fb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x128ff:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12906:    75 4e                              	jne 0x12956 <function_12956>
0x12908:    83 c4 28                           	add esp, 0x28
0x1290b:    5b                                 	pop ebx
0x1290c:    c3                                 	ret 
; data inside code section at 0x1290d -- 0x12910
0x1290d:    8d 76 00                                           |.v.             |
0x12910:    8b 18                              	mov ebx, dword ptr [eax]
0x12912:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x12915 -- 0x12916
0x12915:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x12916 -- 0x12917
; data inside code section at 0x12917 -- 0x1292b
0x12917:    ff ff ff 85 c0 75 3d 8b  43 50 83 e8 01 85 c0 89   |.....u=.CP......|
0x12927:    43 50 74 25                                        |CPt%            |
; function: function_1292b at 0x1292b -- 0x1292c
; data inside code section at 0x1292c -- 0x12932
0x1292c:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x12932 -- 0x12933
; data inside code section at 0x12933 -- 0x1293e
0x12933:    ff ff ff 85 c0 75 26 89  1c 24 e8                  |.....u&..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x1293e -- 0x1293f
; data inside code section at 0x1293f -- 0x12941
0x1293f:    ff ff                                              |..              |
; function: function_12941 at 0x12941 -- 0x12956
0x12941:    ff 85 c0 74 b5 e8                  	inc dword ptr [ebp - 0x174a8b40]
0x12947:    3b e0                              	cmp esp, eax
0x12949:    00 00                              	add byte ptr [eax], al
0x1294b:    90                                 	nop 
0x1294c:    8d 74 26 00                        	lea esi, [esi]
0x12950:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x12954:    eb d5                              	jmp 0x1292b <function_1292b>
; function: function_12956 at 0x12956 -- 0x12957
; dynamically linked function: __stack_chk_fail at 0x12957 -- 0x12958
; data inside code section at 0x12958 -- 0x12965
0x12958:    ff ff ff e8 f2 df 00 00  e8 59 e1 00 00            |.........Y...   |
; section: .text._ZNSt6vectorIiSaIiEED2Ev
; function: _ZNSt6vectorIiSaIiEED1Ev at 0x12970 -- 0x1299d
0x12970:    83 ec 1c                           	sub esp, 0x1c
0x12973:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12979:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1297d:    31 c0                              	xor eax, eax
0x1297f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x12983:    8b 00                              	mov eax, dword ptr [eax]
0x12985:    85 c0                              	test eax, eax
0x12987:    74 1f                              	je 0x129a8 <function_129a8>
0x12989:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x1298d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12994:    75 23                              	jne 0x129b9 <function_129b9>
0x12996:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1299a:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x1299d -- 0x1299e
0x1299d:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1299e -- 0x1299f
; data inside code section at 0x1299f -- 0x129a8
0x1299f:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_129a8 at 0x129a8 -- 0x129b9
0x129a8:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x129ac:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x129b3:    75 04                              	jne 0x129b9 <function_129b9>
0x129b5:    83 c4 1c                           	add esp, 0x1c
0x129b8:    c3                                 	ret 
; function: function_129b9 at 0x129b9 -- 0x129c0
0x129b9:    8d b4 26 00 00 00 00               	lea esi, [esi]
; data inside code section at 0x129c0 -- 0x129c1
0x129c0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x129c1 -- 0x129c2
; data inside code section at 0x129c2 -- 0x129c5
0x129c2:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev
; function: _ZNSt6vectorIS_IiSaIiEESaIS1_EED1Ev at 0x129d0 -- 0x129f9
0x129d0:    57                                 	push edi
0x129d1:    56                                 	push esi
0x129d2:    53                                 	push ebx
0x129d3:    83 ec 20                           	sub esp, 0x20
0x129d6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x129da:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x129e0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x129e4:    31 c0                              	xor eax, eax
0x129e6:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x129e9:    8b 1f                              	mov ebx, dword ptr [edi]
0x129eb:    39 de                              	cmp esi, ebx
0x129ed:    74 18                              	je 0x12a07 <function_12a07>
0x129ef:    90                                 	nop 
0x129f0:    8b 03                              	mov eax, dword ptr [ebx]
0x129f2:    85 c0                              	test eax, eax
0x129f4:    74 08                              	je 0x129fe <function_129fe>
0x129f6:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x129f9 -- 0x129fa
0x129f9:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x129fa -- 0x129fb
; data inside code section at 0x129fb -- 0x129fe
0x129fb:    ff ff ff                                           |...             |
; function: function_129fe at 0x129fe -- 0x12a07
0x129fe:    83 c3 0c                           	add ebx, 0xc
0x12a01:    39 de                              	cmp esi, ebx
0x12a03:    75 eb                              	jne 0x129f0
0x12a05:    8b 1f                              	mov ebx, dword ptr [edi]
; function: function_12a07 at 0x12a07 -- 0x12a22
0x12a07:    85 db                              	test ebx, ebx
0x12a09:    74 1d                              	je 0x12a28 <function_12a28>
0x12a0b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12a0f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12a16:    75 24                              	jne 0x12a3c <function_12a3c>
0x12a18:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x12a1c:    83 c4 20                           	add esp, 0x20
0x12a1f:    5b                                 	pop ebx
0x12a20:    5e                                 	pop esi
0x12a21:    5f                                 	pop edi
; data inside code section at 0x12a22 -- 0x12a23
0x12a22:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x12a23 -- 0x12a24
; data inside code section at 0x12a24 -- 0x12a28
0x12a24:    ff ff ff 90                                        |....            |
; function: function_12a28 at 0x12a28 -- 0x12a3c
0x12a28:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12a2c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12a33:    75 07                              	jne 0x12a3c <function_12a3c>
0x12a35:    83 c4 20                           	add esp, 0x20
0x12a38:    5b                                 	pop ebx
0x12a39:    5e                                 	pop esi
0x12a3a:    5f                                 	pop edi
0x12a3b:    c3                                 	ret 
; function: function_12a3c at 0x12a3c -- 0x12a3d
; dynamically linked function: __stack_chk_fail at 0x12a3d -- 0x12a3e
; data inside code section at 0x12a3e -- 0x12a41
0x12a3e:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeI4CInvSaIS0_EED2Ev
; function: _ZNSt5dequeI4CInvSaIS0_EED1Ev at 0x12a50 -- 0x12a88
0x12a50:    57                                 	push edi
0x12a51:    56                                 	push esi
0x12a52:    53                                 	push ebx
0x12a53:    83 ec 20                           	sub esp, 0x20
0x12a56:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x12a5a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12a60:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12a64:    31 c0                              	xor eax, eax
0x12a66:    8b 07                              	mov eax, dword ptr [edi]
0x12a68:    85 c0                              	test eax, eax
0x12a6a:    74 44                              	je 0x12ab0 <function_12ab0>
0x12a6c:    8b 77 24                           	mov esi, dword ptr [edi + 0x24]
0x12a6f:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x12a72:    83 c6 04                           	add esi, 4
0x12a75:    39 de                              	cmp esi, ebx
0x12a77:    76 1a                              	jbe 0x12a93 <function_12a93>
0x12a79:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x12a80:    8b 03                              	mov eax, dword ptr [ebx]
0x12a82:    83 c3 04                           	add ebx, 4
0x12a85:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12a88 -- 0x12a89
0x12a88:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x12a89 -- 0x12a8a
; data inside code section at 0x12a8a -- 0x12a93
0x12a8a:    ff ff ff 39 de 77 ef 8b  07                        |...9.w...       |
; function: function_12a93 at 0x12a93 -- 0x12aaa
0x12a93:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x12a97:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12a9e:    75 24                              	jne 0x12ac4 <function_12ac4>
0x12aa0:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x12aa4:    83 c4 20                           	add esp, 0x20
0x12aa7:    5b                                 	pop ebx
0x12aa8:    5e                                 	pop esi
0x12aa9:    5f                                 	pop edi
; data inside code section at 0x12aaa -- 0x12aab
0x12aaa:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x12aab -- 0x12aac
; data inside code section at 0x12aac -- 0x12ab0
0x12aac:    ff ff ff 90                                        |....            |
; function: function_12ab0 at 0x12ab0 -- 0x12ac4
0x12ab0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12ab4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12abb:    75 07                              	jne 0x12ac4 <function_12ac4>
0x12abd:    83 c4 20                           	add esp, 0x20
0x12ac0:    5b                                 	pop ebx
0x12ac1:    5e                                 	pop esi
0x12ac2:    5f                                 	pop edi
0x12ac3:    c3                                 	ret 
; function: function_12ac4 at 0x12ac4 -- 0x12ac5
; dynamically linked function: __stack_chk_fail at 0x12ac5 -- 0x12ac6
; data inside code section at 0x12ac6 -- 0x12ac9
0x12ac6:    ff ff ff                                           |...             |
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv at 0x12ad0 -- 0x12ae8
0x12ad0:    56                                 	push esi
0x12ad1:    53                                 	push ebx
0x12ad2:    83 ec 24                           	sub esp, 0x24
0x12ad5:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12ad9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12adf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12ae3:    31 c0                              	xor eax, eax
0x12ae5:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x12ae8 -- 0x12ae9
0x12ae8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x12ae9 -- 0x12aea
; data inside code section at 0x12aea -- 0x12aee
0x12aea:    ff ff ff 85                                        |....            |
; function: function_12aee at 0x12aee -- 0x12af4
0x12aee:    c0 0f 85                           	ror byte ptr [edi], 0x85
0x12af1:    c2 00 00                           	ret 0
; data inside code section at 0x12af4 -- 0x12afe
0x12af4:    00 31 d2 80 7b 48 00 74  0f e8                     |.1..{H.t..      |
; dynamically linked function: pthread_self at 0x12afe -- 0x12aff
; data inside code section at 0x12aff -- 0x12b02
0x12aff:    ff ff ff                                           |...             |
; function: function_12b02 at 0x12b02 -- 0x12b11
0x12b02:    ba 01 00 00 00                     	mov edx, 1
0x12b07:    3b 43 4c                           	cmp eax, dword ptr [ebx + 0x4c]
0x12b0a:    74 55                              	je 0x12b61 <function_12b61>
0x12b0c:    8d 73 18                           	lea esi, [ebx + 0x18]
0x12b0f:    eb 1b                              	jmp 0x12b2c <function_12b2c>
; data inside code section at 0x12b11 -- 0x12b18
0x12b11:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_12b18 at 0x12b18 -- 0x12b1f
0x12b18:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x12b1c:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12b1f -- 0x12b20
0x12b1f:    e8                                                 |.               |
; dynamically linked function: pthread_cond_wait at 0x12b20 -- 0x12b21
; data inside code section at 0x12b21 -- 0x12b2c
0x12b21:    ff ff ff 85 c0 75 50 0f  b6 53 48                  |.....uP..SH     |
; function: function_12b2c at 0x12b2c -- 0x12b38
0x12b2c:    84 d2                              	test dl, dl
0x12b2e:    75 e8                              	jne 0x12b18 <function_12b18>
0x12b30:    83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x12b34:    c6 43 48 01                        	mov byte ptr [ebx + 0x48], 1
; data inside code section at 0x12b38 -- 0x12b39
0x12b38:    e8                                                 |.               |
; dynamically linked function: pthread_self at 0x12b39 -- 0x12b3a
; data inside code section at 0x12b3a -- 0x12b44
0x12b3a:    ff ff ff 89 43 4c 89 1c  24 e8                     |....CL..$.      |
; dynamically linked function: pthread_mutex_unlock at 0x12b44 -- 0x12b45
; data inside code section at 0x12b45 -- 0x12b47
0x12b45:    ff ff                                              |..              |
; function: function_12b47 at 0x12b47 -- 0x12b61
0x12b47:    ff 85 c0 75 25 8b                  	inc dword ptr [ebp - 0x74da8a40]
0x12b4d:    44                                 	inc esp
0x12b4e:    24 1c                              	and al, 0x1c
0x12b50:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12b57:    75 59                              	jne 0x12bb2 <function_12bb2>
0x12b59:    83 c4 24                           	add esp, 0x24
0x12b5c:    5b                                 	pop ebx
0x12b5d:    5e                                 	pop esi
0x12b5e:    66 90                              	nop 
0x12b60:    c3                                 	ret 
; function: function_12b61 at 0x12b61 -- 0x12b68
0x12b61:    83 43 50 01                        	add dword ptr [ebx + 0x50], 1
0x12b65:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x12b68 -- 0x12b69
0x12b68:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x12b69 -- 0x12b6a
; data inside code section at 0x12b6a -- 0x12b98
0x12b6a:    ff ff ff 85 c0 74 db e8  00 e0 00 00 66 90 c7 44   |.....t......f..D|
0x12b7a:    24 0c e0 78 02 00 c7 44  24 08 85 00 00 00 c7 44   |$..x...D$......D|
0x12b8a:    24 04 98 d5 00 00 c7 04  24 0a a0 00 00 e8         |$.......$.....  |
; dynamically linked function: __assert_fail at 0x12b98 -- 0x12b99
; data inside code section at 0x12b99 -- 0x12ba2
0x12b99:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: pthread_mutex_unlock at 0x12ba2 -- 0x12ba3
; data inside code section at 0x12ba3 -- 0x12bae
0x12ba3:    ff ff ff 85 c0 75 c7 89  34 24 e8                  |.....u..4$.     |
; dynamically linked function: _Unwind_Resume at 0x12bae -- 0x12baf
; data inside code section at 0x12baf -- 0x12bb2
0x12baf:    ff ff ff                                           |...             |
; function: function_12bb2 at 0x12bb2 -- 0x12bb3
; dynamically linked function: __stack_chk_fail at 0x12bb3 -- 0x12bb4
; data inside code section at 0x12bb4 -- 0x12bbc
0x12bb4:    ff ff ff e8 86 df 00 00                            |........        |
; section: .text._ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv
; function: _ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv at 0x12bc0 -- 0x12bd7
0x12bc0:    53                                 	push ebx
0x12bc1:    83 ec 28                           	sub esp, 0x28
0x12bc4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12bc8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12bce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12bd2:    31 c0                              	xor eax, eax
0x12bd4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x12bd7 -- 0x12bd8
0x12bd7:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x12bd8 -- 0x12bd9
; data inside code section at 0x12bd9 -- 0x12bed
0x12bd9:    ff ff ff 85 c0 75 46 8b  43 50 83 e8 01 85 c0 89   |.....uF.CP......|
0x12be9:    43 50 74 33                                        |CPt3            |
; function: function_12bed at 0x12bed -- 0x12bee
; data inside code section at 0x12bee -- 0x12bf4
0x12bee:    43 18 89 04 24 e8                                  |C...$.          |
; dynamically linked function: pthread_cond_signal at 0x12bf4 -- 0x12bf5
; data inside code section at 0x12bf5 -- 0x12c00
0x12bf5:    ff ff ff 85 c0 75 34 89  1c 24 e8                  |.....u4..$.     |
; dynamically linked function: pthread_mutex_unlock at 0x12c00 -- 0x12c01
; data inside code section at 0x12c01 -- 0x12c03
0x12c01:    ff ff                                              |..              |
; function: function_12c03 at 0x12c03 -- 0x12c1a
0x12c03:    ff 85 c0 75 4c 8b                  	inc dword ptr [ebp - 0x74b38a40]
0x12c09:    44                                 	inc esp
0x12c0a:    24 1c                              	and al, 0x1c
0x12c0c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12c13:    75 16                              	jne 0x12c2b <function_12c03+0x16>
0x12c15:    83 c4 28                           	add esp, 0x28
0x12c18:    5b                                 	pop ebx
0x12c19:    c3                                 	ret 
; data inside code section at 0x12c1a -- 0x12c20
0x12c1a:    8d b6 00 00 00 00                                  |......          |
; function: function_12c20 at 0x12c20 -- 0x12c26
0x12c20:    c6 43 48 00                        	mov byte ptr [ebx + 0x48], 0
0x12c24:    eb c7                              	jmp 0x12bed <function_12bed>
; function: function_12c26 at 0x12c26 -- 0x12c2b
0x12c26:    e8 07 e0 00 00                     	call 0x20c32 <function_20c32>
; data inside code section at 0x12c2b -- 0x12c2c
0x12c2b:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12c2c -- 0x12c2d
; data inside code section at 0x12c2d -- 0x12c50
0x12c2d:    ff ff ff c7 44 24 0c 20  79 02 00 c7 44 24 08 93   |....D$. y...D$..|
0x12c3d:    00 00 00 c7 44 24 04 98  d5 00 00 c7 04 24 35 9f   |....D$.......$5.|
0x12c4d:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x12c50 -- 0x12c51
; data inside code section at 0x12c51 -- 0x12c59
0x12c51:    ff ff ff e8 0d e0 00 00                            |........        |
; section: .text._ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC2ERS3_PKcS7_ib
; function: _ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib at 0x12c60 -- 0x12c93
0x12c60:    83 ec 2c                           	sub esp, 0x2c
0x12c63:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x12c67:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12c6b:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x12c6f:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x12c73:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12c79:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12c7d:    31 c0                              	xor eax, eax
0x12c7f:    80 7c 24 44 00                     	cmp byte ptr [esp + 0x44], 0
0x12c84:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x12c88:    89 33                              	mov dword ptr [ebx], esi
0x12c8a:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x12c8e:    89 34 24                           	mov dword ptr [esp], esi
0x12c91:    74 25                              	je 0x12cb8 <function_12cb8>
; data inside code section at 0x12c93 -- 0x12c94
0x12c93:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x12c94 -- 0x12c95
; data inside code section at 0x12c95 -- 0x12ca3
0x12c95:    ff ff ff 85 c0 75 6c 80  7e 48 00 74 3e e8         |.....ul.~H.t>.  |
; dynamically linked function: pthread_self at 0x12ca3 -- 0x12ca4
; data inside code section at 0x12ca4 -- 0x12ca7
0x12ca4:    ff ff ff                                           |...             |
; function: function_12ca7 at 0x12ca7 -- 0x12cb2
0x12ca7:    3b 46 4c                           	cmp eax, dword ptr [esi + 0x4c]
0x12caa:    74 39                              	je 0x12ce5 <function_12ce5>
0x12cac:    31 ff                              	xor edi, edi
0x12cae:    66 90                              	nop 
0x12cb0:    eb 43                              	jmp 0x12cf5 <function_12cf5>
; data inside code section at 0x12cb2 -- 0x12cb8
0x12cb2:    8d b6 00 00 00 00                                  |......          |
; function: function_12cb8 at 0x12cb8 -- 0x12cde
0x12cb8:    e8 73 2a 01 00                     	call 0x25730 <function_25730>
0x12cbd:    c6 43 04 01                        	mov byte ptr [ebx + 4], 1
0x12cc1:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12cc5:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12ccc:    75 3f                              	jne 0x12d0d <function_12d0d>
0x12cce:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x12cd2:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x12cd6:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x12cda:    83 c4 2c                           	add esp, 0x2c
0x12cdd:    c3                                 	ret 
; data inside code section at 0x12cde -- 0x12ce1
0x12cde:    66 90 e8                                           |f..             |
; dynamically linked function: pthread_self at 0x12ce1 -- 0x12ce2
; data inside code section at 0x12ce2 -- 0x12ce5
0x12ce2:    ff ff ff                                           |...             |
; function: function_12ce5 at 0x12ce5 -- 0x12cf5
0x12ce5:    83 46 50 01                        	add dword ptr [esi + 0x50], 1
0x12ce9:    bf 01 00 00 00                     	mov edi, 1
0x12cee:    c6 46 48 01                        	mov byte ptr [esi + 0x48], 1
0x12cf2:    89 46 4c                           	mov dword ptr [esi + 0x4c], eax
; function: function_12cf5 at 0x12cf5 -- 0x12cf8
0x12cf5:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12cf8 -- 0x12cf9
0x12cf8:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x12cf9 -- 0x12cfa
; data inside code section at 0x12cfa -- 0x12cfc
0x12cfa:    ff ff                                              |..              |
; function: function_12cfc at 0x12cfc -- 0x12d08
0x12cfc:    ff 85 c0 75 11 89                  	inc dword ptr [ebp - 0x76ee8a40]
0x12d02:    f8                                 	clc 
0x12d03:    88 43 04                           	mov byte ptr [ebx + 4], al
0x12d06:    eb b9                              	jmp 0x12cc1
; data inside code section at 0x12d08 -- 0x12d0d
0x12d08:    e8 c5 df 00 00                                     |.....           |
; function: function_12d0d at 0x12d0d -- 0x12d0e
; dynamically linked function: __stack_chk_fail at 0x12d0e -- 0x12d0f
; data inside code section at 0x12d0f -- 0x12d2d
0x12d0f:    ff ff ff e8 ef df 00 00  80 7b 04 00 89 c6 74 0a   |.........{....t.|
0x12d1f:    8b 03 89 04 24 e8 f7 2a  01 00 89 34 24 e8         |....$..*...4$.  |
; dynamically linked function: _Unwind_Resume at 0x12d2d -- 0x12d2e
; data inside code section at 0x12d2e -- 0x12d31
0x12d2e:    ff ff ff                                           |...             |
; section: .text._ZN5boost8optionalISsED2Ev
; function: _ZN5boost8optionalISsED1Ev at 0x12d40 -- 0x12d5f
0x12d40:    53                                 	push ebx
0x12d41:    83 ec 28                           	sub esp, 0x28
0x12d44:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x12d48:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12d4e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x12d52:    31 c0                              	xor eax, eax
0x12d54:    80 3b 00                           	cmp byte ptr [ebx], 0
0x12d57:    74 0e                              	je 0x12d67 <function_12d67>
0x12d59:    8d 43 04                           	lea eax, [ebx + 4]
0x12d5c:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12d5f -- 0x12d60
0x12d5f:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x12d60 -- 0x12d61
; data inside code section at 0x12d61 -- 0x12d67
0x12d61:    ff ff ff c6 03 00                                  |......          |
; function: function_12d67 at 0x12d67 -- 0x12d79
0x12d67:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12d6b:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x12d72:    75 05                              	jne 0x12d79 <function_12d67+0x11>
0x12d74:    83 c4 28                           	add esp, 0x28
0x12d77:    5b                                 	pop ebx
0x12d78:    c3                                 	ret 
; data inside code section at 0x12d79 -- 0x12d7a
0x12d79:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12d7a -- 0x12d7b
; data inside code section at 0x12d7b -- 0x12d7e
0x12d7b:    ff ff ff                                           |...             |
; section: .text._ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_
; function: _ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_ at 0x12d80 -- 0x12dc3
0x12d80:    55                                 	push ebp
0x12d81:    57                                 	push edi
0x12d82:    56                                 	push esi
0x12d83:    53                                 	push ebx
0x12d84:    83 ec 2c                           	sub esp, 0x2c
0x12d87:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x12d8b:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x12d92:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x12d96:    31 d2                              	xor edx, edx
0x12d98:    8b 74 24 44                        	mov esi, dword ptr [esp + 0x44]
0x12d9c:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x12d9f:    8d 68 04                           	lea ebp, [eax + 4]
0x12da2:    31 c0                              	xor eax, eax
0x12da4:    85 db                              	test ebx, ebx
0x12da6:    74 46                              	je 0x12dee <function_12dee>
0x12da8:    89 ef                              	mov edi, ebp
0x12daa:    eb 0d                              	jmp 0x12db9 <_ZNKSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEE5countERS5_+0x39>
; data inside code section at 0x12dac -- 0x12db0
0x12dac:    8d 74 26 00                                        |.t&.            |
0x12db0:    89 df                              	mov edi, ebx
0x12db2:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x12db5:    85 db                              	test ebx, ebx
0x12db7:    74 1a                              	je 0x12dd3 <function_12dd3>
0x12db9:    8d 43 10                           	lea eax, [ebx + 0x10]
0x12dbc:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x12dc0:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12dc3 -- 0x12dc4
0x12dc3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x12dc4 -- 0x12dc5
; data inside code section at 0x12dc5 -- 0x12dd3
0x12dc5:    ff ff ff 84 c0 74 e4 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_12dd3 at 0x12dd3 -- 0x12de3
0x12dd3:    31 c0                              	xor eax, eax
0x12dd5:    39 fd                              	cmp ebp, edi
0x12dd7:    74 15                              	je 0x12dee <function_12dee>
0x12dd9:    83 c7 10                           	add edi, 0x10
0x12ddc:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x12de0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x12de3 -- 0x12de4
0x12de3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x12de4 -- 0x12de5
; data inside code section at 0x12de5 -- 0x12dee
0x12de5:    ff ff ff 83 f0 01 0f b6  c0                        |.........       |
; function: function_12dee at 0x12dee -- 0x12e03
0x12dee:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x12df2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x12df9:    75 08                              	jne 0x12e03 <function_12dee+0x14>
0x12dfb:    83 c4 2c                           	add esp, 0x2c
0x12dfe:    5b                                 	pop ebx
0x12dff:    5e                                 	pop esi
0x12e00:    5f                                 	pop edi
0x12e01:    5d                                 	pop ebp
0x12e02:    c3                                 	ret 
; data inside code section at 0x12e03 -- 0x12e04
0x12e03:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x12e04 -- 0x12e05
; data inside code section at 0x12e05 -- 0x12e08
0x12e05:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_
; function: _ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_ at 0x12e10 -- 0x12ee0
0x12e10:    83 ec 4c                           	sub esp, 0x4c
0x12e13:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x12e17:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x12e1b:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x12e1f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x12e23:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x12e29:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x12e2d:    31 c0                              	xor eax, eax
0x12e2f:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x12e33:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x12e37:    39 df                              	cmp edi, ebx
0x12e39:    74 3f                              	je 0x12e7a <_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_+0x6a>
0x12e3b:    8b 57 04                           	mov edx, dword ptr [edi + 4]
0x12e3e:    8b 2f                              	mov ebp, dword ptr [edi]
0x12e40:    8b 03                              	mov eax, dword ptr [ebx]
0x12e42:    89 d6                              	mov esi, edx
0x12e44:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x12e48:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x12e4b:    29 ee                              	sub esi, ebp
0x12e4d:    c1 fe 02                           	sar esi, 2
0x12e50:    29 c2                              	sub edx, eax
0x12e52:    c1 fa 02                           	sar edx, 2
0x12e55:    39 d6                              	cmp esi, edx
0x12e57:    0f 87 9b 00 00 00                  	ja 0x12ef8 <function_12ef8>
0x12e5d:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x12e60:    89 ca                              	mov edx, ecx
0x12e62:    29 c2                              	sub edx, eax
0x12e64:    c1 fa 02                           	sar edx, 2
0x12e67:    39 d6                              	cmp esi, edx
0x12e69:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x12e6d:    77 39                              	ja 0x12ea8 <_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_+0x98>
0x12e6f:    85 f6                              	test esi, esi
0x12e71:    0f 85 d9 00 00 00                  	jne 0x12f50 <function_12f50>
0x12e77:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x12e7a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x12e7e:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x12e85:    89 d8                              	mov eax, ebx
0x12e87:    0f 85 52 01 00 00                  	jne 0x12fdf <function_12fdf>
0x12e8d:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x12e91:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x12e95:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x12e99:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x12e9d:    83 c4 4c                           	add esp, 0x4c
0x12ea0:    c3                                 	ret 
; data inside code section at 0x12ea1 -- 0x12ea8
0x12ea1:    8d b4 26 00 00 00 00                               |..&....         |
0x12ea8:    8d 4c 95 00                        	lea ecx, [ebp + edx*4]
0x12eac:    85 d2                              	test edx, edx
0x12eae:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x12eb2:    0f 85 b8 00 00 00                  	jne 0x12f70 <function_12f70>
0x12eb8:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x12ebc:    8d 04 b0                           	lea eax, [eax + esi*4]
0x12ebf:    2b 4c 24 1c                        	sub ecx, dword ptr [esp + 0x1c]
0x12ec3:    c1 f9 02                           	sar ecx, 2
0x12ec6:    85 c9                              	test ecx, ecx
0x12ec8:    74 ad                              	je 0x12e77 <_ZNSt6vectorIP5CNodeSaIS1_EEaSERKS3_+0x67>
0x12eca:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x12ece:    c1 e1 02                           	shl ecx, 2
0x12ed1:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x12ed5:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x12ed9:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x12edd:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x12ee0 -- 0x12ee1
0x12ee0:    e8                                                 |.               |
; dynamically linked function: memmove at 0x12ee1 -- 0x12ee2
; data inside code section at 0x12ee2 -- 0x12ee4
0x12ee2:    ff ff                                              |..              |
; function: function_12ee4 at 0x12ee4 -- 0x12ef3
0x12ee4:    ff 8d 04 b5 00 00                  	dec dword ptr [ebp + 0xb504]
0x12eea:    00 00                              	add byte ptr [eax], al
0x12eec:    03 03                              	add eax, dword ptr [ebx]
0x12eee:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x12ef1:    eb 87                              	jmp 0x12e7a
; data inside code section at 0x12ef3 -- 0x12ef8
0x12ef3:    90 8d 74 26 00                                     |..t&.           |
; function: function_12ef8 at 0x12ef8 -- 0x12f1a
0x12ef8:    85 f6                              	test esi, esi
0x12efa:    0f 84 d0 00 00 00                  	je 0x12fd0 <function_12fd0>
0x12f00:    81 fe ff ff ff 3f                  	cmp esi, 0x3fffffff
0x12f06:    0f 87 d8 00 00 00                  	ja 0x12fe4 <function_12fe4>
0x12f0c:    8d 0c b5 00 00 00 00               	lea ecx, [esi*4]
0x12f13:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x12f17:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x12f1a -- 0x12f1b
0x12f1a:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x12f1b -- 0x12f1c
; data inside code section at 0x12f1c -- 0x12f29
0x12f1c:    ff ff ff 85 f6 89 c7 0f  85 87 00 00 00            |.............   |
; function: function_12f29 at 0x12f29 -- 0x12f32
0x12f29:    8b 03                              	mov eax, dword ptr [ebx]
0x12f2b:    85 c0                              	test eax, eax
0x12f2d:    74 08                              	je 0x12f37 <function_12f37>
0x12f2f:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12f32 -- 0x12f33
0x12f32:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x12f33 -- 0x12f34
; data inside code section at 0x12f34 -- 0x12f37
0x12f34:    ff ff ff                                           |...             |
; function: function_12f37 at 0x12f37 -- 0x12f4a
0x12f37:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x12f3b:    89 3b                              	mov dword ptr [ebx], edi
0x12f3d:    01 f8                              	add eax, edi
0x12f3f:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x12f42:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x12f45:    e9 30 ff ff ff                     	jmp 0x12e7a
; data inside code section at 0x12f4a -- 0x12f50
0x12f4a:    8d b6 00 00 00 00                                  |......          |
; function: function_12f50 at 0x12f50 -- 0x12f5e
0x12f50:    c1 e6 02                           	shl esi, 2
0x12f53:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x12f57:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x12f5b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12f5e -- 0x12f5f
0x12f5e:    e8                                                 |.               |
; dynamically linked function: memmove at 0x12f5f -- 0x12f60
; data inside code section at 0x12f60 -- 0x12f63
0x12f60:    ff ff ff                                           |...             |
; function: function_12f63 at 0x12f63 -- 0x12f6f
0x12f63:    8b 03                              	mov eax, dword ptr [ebx]
0x12f65:    01 f0                              	add eax, esi
0x12f67:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x12f6a:    e9 0b ff ff ff                     	jmp 0x12e7a
; data inside code section at 0x12f6f -- 0x12f70
0x12f6f:    90                                                 |.               |
; function: function_12f70 at 0x12f70 -- 0x12f7e
0x12f70:    c1 e2 02                           	shl edx, 2
0x12f73:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x12f77:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x12f7b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x12f7e -- 0x12f7f
0x12f7e:    e8                                                 |.               |
; dynamically linked function: memmove at 0x12f7f -- 0x12f80
; data inside code section at 0x12f80 -- 0x12f82
0x12f80:    ff ff                                              |..              |
; function: function_12f82 at 0x12f82 -- 0x12fa9
0x12f82:    ff 8b 43 04 8b 0f                  	dec dword ptr [ebx + 0xf8b0443]
0x12f88:    8b 7f 04                           	mov edi, dword ptr [edi + 4]
0x12f8b:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x12f8f:    8b 03                              	mov eax, dword ptr [ebx]
0x12f91:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x12f95:    89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x12f99:    29 c2                              	sub edx, eax
0x12f9b:    83 e2 fc                           	and edx, 0xfffffffc
0x12f9e:    01 ca                              	add edx, ecx
0x12fa0:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x12fa4:    e9 0f ff ff ff                     	jmp 0x12eb8
; data inside code section at 0x12fa9 -- 0x12fc0
0x12fa9:    8d b4 26 00 00 00 00 8b  54 24 18 89 6c 24 04 89   |..&.....T$..l$..|
0x12fb9:    04 24 89 54 24 08 e8                               |.$.T$..         |
; dynamically linked function: memmove at 0x12fc0 -- 0x12fc1
; data inside code section at 0x12fc1 -- 0x12fc4
0x12fc1:    ff ff ff                                           |...             |
; function: function_12fc4 at 0x12fc4 -- 0x12fc9
0x12fc4:    e9 60 ff ff ff                     	jmp 0x12f29 <function_12f29>
; data inside code section at 0x12fc9 -- 0x12fd0
0x12fc9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_12fd0 at 0x12fd0 -- 0x12fdf
0x12fd0:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x12fd8:    31 ff                              	xor edi, edi
0x12fda:    e9 4a ff ff ff                     	jmp 0x12f29 <function_12f29>
; function: function_12fdf at 0x12fdf -- 0x12fe0
; dynamically linked function: __stack_chk_fail at 0x12fe0 -- 0x12fe1
; data inside code section at 0x12fe1 -- 0x12fe4
0x12fe1:    ff ff ff                                           |...             |
; function: function_12fe4 at 0x12fe4 -- 0x12fe5
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x12fe5 -- 0x12fe6
; data inside code section at 0x12fe6 -- 0x12fe9
0x12fe6:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorISsSaISsEEaSERKS1_
; function: _ZNSt6vectorISsSaISsEEaSERKS1_ at 0x12ff0 -- 0x1305d
0x12ff0:    55                                 	push ebp
0x12ff1:    57                                 	push edi
0x12ff2:    56                                 	push esi
0x12ff3:    53                                 	push ebx
0x12ff4:    83 ec 3c                           	sub esp, 0x3c
0x12ff7:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x12ffb:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x12fff:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13005:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x13009:    31 c0                              	xor eax, eax
0x1300b:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1300f:    39 fa                              	cmp edx, edi
0x13011:    0f 84 95 00 00 00                  	je 0x130ac <function_130ac>
0x13017:    8b 1a                              	mov ebx, dword ptr [edx]
0x13019:    8b 52 04                           	mov edx, dword ptr [edx + 4]
0x1301c:    8b 2f                              	mov ebp, dword ptr [edi]
0x1301e:    89 d0                              	mov eax, edx
0x13020:    29 d8                              	sub eax, ebx
0x13022:    c1 f8 02                           	sar eax, 2
0x13025:    89 c6                              	mov esi, eax
0x13027:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x1302b:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x1302e:    29 e8                              	sub eax, ebp
0x13030:    c1 f8 02                           	sar eax, 2
0x13033:    39 c6                              	cmp esi, eax
0x13035:    0f 86 8d 00 00 00                  	jbe 0x130c8 <function_130c8>
0x1303b:    85 f6                              	test esi, esi
0x1303d:    0f 84 7d 01 00 00                  	je 0x131c0 <function_131c0>
0x13043:    81 fe ff ff ff 3f                  	cmp esi, 0x3fffffff
0x13049:    0f 87 a7 01 00 00                  	ja 0x131f6 <function_131f6>
0x1304f:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x13053:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x13057:    c1 e0 02                           	shl eax, 2
0x1305a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1305d -- 0x1305e
0x1305d:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1305e -- 0x1305f
; data inside code section at 0x1305f -- 0x13068
0x1305f:    ff ff ff 8b 54 24 10 89  c6                        |....T$...       |
; function: function_13068 at 0x13068 -- 0x13086
0x13068:    89 f1                              	mov ecx, esi
0x1306a:    89 d8                              	mov eax, ebx
0x1306c:    e8 2f 02 00 00                     	call 0x132a0 <_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev>
0x13071:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x13074:    8b 1f                              	mov ebx, dword ptr [edi]
0x13076:    39 dd                              	cmp ebp, ebx
0x13078:    74 17                              	je 0x13091 <function_13091>
0x1307a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x13080:    89 1c 24                           	mov dword ptr [esp], ebx
0x13083:    83 c3 04                           	add ebx, 4
; data inside code section at 0x13086 -- 0x13087
0x13086:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x13087 -- 0x13088
; data inside code section at 0x13088 -- 0x13091
0x13088:    ff ff ff 39 dd 75 f1 8b  1f                        |...9.u...       |
; function: function_13091 at 0x13091 -- 0x13098
0x13091:    85 db                              	test ebx, ebx
0x13093:    74 08                              	je 0x1309d <function_1309d>
0x13095:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13098 -- 0x13099
0x13098:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13099 -- 0x1309a
; data inside code section at 0x1309a -- 0x1309d
0x1309a:    ff ff ff                                           |...             |
; function: function_1309d at 0x1309d -- 0x130a9
0x1309d:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x130a1:    89 37                              	mov dword ptr [edi], esi
0x130a3:    8d 04 96                           	lea eax, [esi + edx*4]
0x130a6:    89 47 08                           	mov dword ptr [edi + 8], eax
; function: function_130a9 at 0x130a9 -- 0x130ac
0x130a9:    89 47 04                           	mov dword ptr [edi + 4], eax
; function: function_130ac at 0x130ac -- 0x130c7
0x130ac:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x130b0:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x130b7:    89 f8                              	mov eax, edi
0x130b9:    0f 85 15 01 00 00                  	jne 0x131d4 <function_131d4>
0x130bf:    83 c4 3c                           	add esp, 0x3c
0x130c2:    5b                                 	pop ebx
0x130c3:    5e                                 	pop esi
0x130c4:    5f                                 	pop edi
0x130c5:    5d                                 	pop ebp
0x130c6:    c3                                 	ret 
; data inside code section at 0x130c7 -- 0x130c8
0x130c7:    90                                                 |.               |
; function: function_130c8 at 0x130c8 -- 0x130fd
0x130c8:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x130cb:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x130cf:    29 e8                              	sub eax, ebp
0x130d1:    c1 f8 02                           	sar eax, 2
0x130d4:    39 44 24 14                        	cmp dword ptr [esp + 0x14], eax
0x130d8:    77 66                              	ja 0x13140 <function_13140>
0x130da:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x130de:    85 c0                              	test eax, eax
0x130e0:    7e 31                              	jle 0x13113 <function_13113>
0x130e2:    89 7c 24 18                        	mov dword ptr [esp + 0x18], edi
0x130e6:    89 f7                              	mov edi, esi
0x130e8:    89 ee                              	mov esi, ebp
0x130ea:    8d b6 00 00 00 00                  	lea esi, [esi]
0x130f0:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x130f4:    83 c3 04                           	add ebx, 4
0x130f7:    89 34 24                           	mov dword ptr [esp], esi
0x130fa:    83 c6 04                           	add esi, 4
; data inside code section at 0x130fd -- 0x130fe
0x130fd:    e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x130fe -- 0x130ff
; data inside code section at 0x130ff -- 0x13106
0x130ff:    ff ff ff 83 ef 01 75                               |......u         |
; function: function_13106 at 0x13106 -- 0x1310b
0x13106:    e9 8b 54 24 14                     	jmp 0x14258596 <function_14258596>
; data inside code section at 0x1310b -- 0x13113
0x1310b:    8b 7c 24 18 8d 6c 95 00                            |.|$..l..        |
; function: function_13113 at 0x13113 -- 0x13126
0x13113:    39 6c 24 1c                        	cmp dword ptr [esp + 0x1c], ebp
0x13117:    74 16                              	je 0x1312f <function_1312f>
0x13119:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x1311d:    8d 76 00                           	lea esi, [esi]
0x13120:    89 2c 24                           	mov dword ptr [esp], ebp
0x13123:    83 c5 04                           	add ebp, 4
; data inside code section at 0x13126 -- 0x13127
0x13126:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x13127 -- 0x13128
; data inside code section at 0x13128 -- 0x1312c
0x13128:    ff ff ff 39                                        |...9            |
; function: function_1312c at 0x1312c -- 0x1312e
0x1312c:    eb 75                              	jmp 0x131a3
; data inside code section at 0x1312e -- 0x1312f
0x1312e:    f1                                                 |.               |
; function: function_1312f at 0x1312f -- 0x1313d
0x1312f:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x13133:    8b 1f                              	mov ebx, dword ptr [edi]
0x13135:    8d 04 83                           	lea eax, [ebx + eax*4]
0x13138:    e9 6c ff ff ff                     	jmp 0x130a9 <function_130a9>
; data inside code section at 0x1313d -- 0x13140
0x1313d:    8d 76 00                                           |.v.             |
; function: function_13140 at 0x13140 -- 0x1315d
0x13140:    85 c0                              	test eax, eax
0x13142:    8d 34 83                           	lea esi, [ebx + eax*4]
0x13145:    7e 3b                              	jle 0x13182 <function_13182>
0x13147:    89 c6                              	mov esi, eax
0x13149:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x13150:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x13154:    83 c3 04                           	add ebx, 4
0x13157:    89 2c 24                           	mov dword ptr [esp], ebp
0x1315a:    83 c5 04                           	add ebp, 4
; data inside code section at 0x1315d -- 0x1315e
0x1315d:    e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x1315e -- 0x1315f
; data inside code section at 0x1315f -- 0x13166
0x1315f:    ff ff ff 83 ee 01 75                               |......u         |
; function: function_13166 at 0x13166 -- 0x1316b
0x13166:    e9 8b 47 04 8b                     	jmp 0x8b0578f6 <function_8b0578f6>
; data inside code section at 0x1316b -- 0x13182
0x1316b:    2f 89 44 24 1c 8b 44 24  18 8b 74 24 1c 8b 50 04   |/.D$..D$..t$..P.|
0x1317b:    29 ee 83 e6 fc 03 30                               |).....0         |
; function: function_13182 at 0x13182 -- 0x1319b
0x13182:    39 f2                              	cmp edx, esi
0x13184:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x13188:    74 3d                              	je 0x131c7 <function_131c7>
0x1318a:    89 fd                              	mov ebp, edi
0x1318c:    89 d7                              	mov edi, edx
0x1318e:    66 90                              	nop 
0x13190:    85 db                              	test ebx, ebx
0x13192:    74 0c                              	je 0x131a0 <function_131a0>
0x13194:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x13198:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1319b -- 0x1319c
0x1319b:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1319c -- 0x1319d
; data inside code section at 0x1319d -- 0x131a0
0x1319d:    ff ff ff                                           |...             |
; function: function_131a0 at 0x131a0 -- 0x131bb
0x131a0:    83 c6 04                           	add esi, 4
0x131a3:    83 c3 04                           	add ebx, 4
0x131a6:    39 fe                              	cmp esi, edi
0x131a8:    75 e6                              	jne 0x13190
0x131aa:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x131ae:    89 ef                              	mov edi, ebp
0x131b0:    8b 75 00                           	mov esi, dword ptr [ebp]
0x131b3:    8d 04 86                           	lea eax, [esi + eax*4]
0x131b6:    e9 ee fe ff ff                     	jmp 0x130a9 <function_130a9>
; data inside code section at 0x131bb -- 0x131c0
0x131bb:    90 8d 74 26 00                                     |..t&.           |
; function: function_131c0 at 0x131c0 -- 0x131c7
0x131c0:    31 f6                              	xor esi, esi
0x131c2:    e9 a1 fe ff ff                     	jmp 0x13068 <function_13068>
; function: function_131c7 at 0x131c7 -- 0x131d4
0x131c7:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x131cb:    8d 44 95 00                        	lea eax, [ebp + edx*4]
0x131cf:    e9 d5 fe ff ff                     	jmp 0x130a9 <function_130a9>
; function: function_131d4 at 0x131d4 -- 0x131d5
; dynamically linked function: __stack_chk_fail at 0x131d5 -- 0x131d6
; data inside code section at 0x131d6 -- 0x131dd
0x131d6:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x131dd -- 0x131de
; data inside code section at 0x131de -- 0x131e5
0x131de:    ff ff ff 8b 74 24 1c                               |....t$.         |
; function: function_131e5 at 0x131e5 -- 0x131e6
; data inside code section at 0x131e6 -- 0x131f0
0x131e6:    de 74 2d 89 34 24 83 c6  04 e8                     |.t-.4$....      |
; dynamically linked function: _ZNSsD1Ev at 0x131f0 -- 0x131f1
; data inside code section at 0x131f1 -- 0x131f4
0x131f1:    ff ff ff                                           |...             |
; function: function_131f4 at 0x131f4 -- 0x131f6
0x131f4:    eb ef                              	jmp 0x131e5 <function_131e5>
; function: function_131f6 at 0x131f6 -- 0x131f7
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x131f7 -- 0x131f8
; data inside code section at 0x131f8 -- 0x13201
0x131f8:    ff ff ff 89 04 24 66 90  e8                        |.....$f..       |
; dynamically linked function: __cxa_begin_catch at 0x13201 -- 0x13202
; data inside code section at 0x13202 -- 0x1320d
0x13202:    ff ff ff 85 f6 74 08 89  34 24 e8                  |.....t..4$.     |
; dynamically linked function: _ZdlPv at 0x1320d -- 0x1320e
; data inside code section at 0x1320e -- 0x13212
0x1320e:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x13212 -- 0x13213
; data inside code section at 0x13213 -- 0x13217
0x13213:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x13217 -- 0x13218
; data inside code section at 0x13218 -- 0x1321c
0x13218:    ff ff ff 89                                        |....            |
; function: function_1321c at 0x1321c -- 0x1321d
0x1321c:    c3                                 	ret 
; data inside code section at 0x1321d -- 0x1321e
0x1321d:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1321e -- 0x1321f
; data inside code section at 0x1321f -- 0x13226
0x1321f:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x13226 -- 0x13227
; data inside code section at 0x13227 -- 0x1322b
0x13227:    ff ff ff 89                                        |....            |
; function: function_1322b at 0x1322b -- 0x1322c
0x1322b:    c3                                 	ret 
; data inside code section at 0x1322c -- 0x1322d
0x1322c:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1322d -- 0x1322e
; data inside code section at 0x1322e -- 0x13235
0x1322e:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x13235 -- 0x13236
; data inside code section at 0x13236 -- 0x13239
0x13236:    ff ff ff                                           |...             |
; section: .text._ZNSt10_List_baseISsSaISsEED2Ev
; function: _ZNSt10_List_baseISsSaISsEED1Ev at 0x13240 -- 0x1326a
0x13240:    57                                 	push edi
0x13241:    56                                 	push esi
0x13242:    53                                 	push ebx
0x13243:    83 ec 20                           	sub esp, 0x20
0x13246:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1324a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13250:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13254:    31 c0                              	xor eax, eax
0x13256:    8b 1f                              	mov ebx, dword ptr [edi]
0x13258:    39 fb                              	cmp ebx, edi
0x1325a:    75 06                              	jne 0x13262 <_ZNSt10_List_baseISsSaISsEED1Ev+0x22>
0x1325c:    eb 1d                              	jmp 0x1327b <function_1327b>
; data inside code section at 0x1325e -- 0x13260
0x1325e:    66 90                                              |f.              |
0x13260:    89 f3                              	mov ebx, esi
0x13262:    8b 33                              	mov esi, dword ptr [ebx]
0x13264:    8d 43 08                           	lea eax, [ebx + 8]
0x13267:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1326a -- 0x1326b
0x1326a:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1326b -- 0x1326c
; data inside code section at 0x1326c -- 0x13273
0x1326c:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x13273 -- 0x13274
; data inside code section at 0x13274 -- 0x1327b
0x13274:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1327b at 0x1327b -- 0x1328f
0x1327b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1327f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13286:    75 07                              	jne 0x1328f <function_1327b+0x13>
0x13288:    83 c4 20                           	add esp, 0x20
0x1328b:    5b                                 	pop ebx
0x1328c:    5e                                 	pop esi
0x1328d:    5f                                 	pop edi
0x1328e:    c3                                 	ret 
; data inside code section at 0x1328f -- 0x13290
0x1328f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13290 -- 0x13291
; data inside code section at 0x13291 -- 0x13294
0x13291:    ff ff ff                                           |...             |
; section: .text._ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED2Ev
; function: _ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev at 0x132a0 -- 0x132ce
0x132a0:    57                                 	push edi
0x132a1:    56                                 	push esi
0x132a2:    53                                 	push ebx
0x132a3:    83 ec 20                           	sub esp, 0x20
0x132a6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x132aa:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x132b0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x132b4:    31 c0                              	xor eax, eax
0x132b6:    8b 1f                              	mov ebx, dword ptr [edi]
0x132b8:    39 fb                              	cmp ebx, edi
0x132ba:    75 06                              	jne 0x132c2 <_ZNSt10_List_baseISt6vectorI8CServiceSaIS1_EESaIS3_EED1Ev+0x22>
0x132bc:    eb 21                              	jmp 0x132df <function_132df>
; data inside code section at 0x132be -- 0x132c0
0x132be:    66 90                                              |f.              |
0x132c0:    89 f3                              	mov ebx, esi
0x132c2:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x132c5:    8b 33                              	mov esi, dword ptr [ebx]
0x132c7:    85 c0                              	test eax, eax
0x132c9:    74 08                              	je 0x132d3 <function_132d3>
0x132cb:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x132ce -- 0x132cf
0x132ce:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x132cf -- 0x132d0
; data inside code section at 0x132d0 -- 0x132d3
0x132d0:    ff ff ff                                           |...             |
; function: function_132d3 at 0x132d3 -- 0x132d6
0x132d3:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x132d6 -- 0x132d7
0x132d6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x132d7 -- 0x132d8
; data inside code section at 0x132d8 -- 0x132df
0x132d8:    ff ff ff 39 fe 75 e1                               |...9.u.         |
; function: function_132df at 0x132df -- 0x132f3
0x132df:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x132e3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x132ea:    75 07                              	jne 0x132f3 <function_132df+0x13>
0x132ec:    83 c4 20                           	add esp, 0x20
0x132ef:    5b                                 	pop ebx
0x132f0:    5e                                 	pop esi
0x132f1:    5f                                 	pop edi
0x132f2:    c3                                 	ret 
; data inside code section at 0x132f3 -- 0x132f4
0x132f3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x132f4 -- 0x132f5
; data inside code section at 0x132f5 -- 0x132f8
0x132f5:    ff ff ff                                           |...             |
; section: .text._ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEEPNS_6threadET_
; function: _ZN5boost12thread_group13create_threadINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEEPNS_6threadET_ at 0x13300 -- 0x13352
0x13300:    55                                 	push ebp
0x13301:    57                                 	push edi
0x13302:    56                                 	push esi
0x13303:    53                                 	push ebx
0x13304:    83 ec 4c                           	sub esp, 0x4c
0x13307:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x1330b:    8d 6c 24 38                        	lea ebp, [esp + 0x38]
0x1330f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x13316:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1331a:    31 d2                              	xor edx, edx
0x1331c:    89 2c 24                           	mov dword ptr [esp], ebp
0x1331f:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x13323:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x13327:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1332b:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x1332f:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x13333:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x13337:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1333b:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1333f:    83 c0 08                           	add eax, 8
0x13342:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13346:    e8 75 24 01 00                     	call 0x257c0 <function_257c0>
0x1334b:    c7 04 24 08 00 00 00               	mov dword ptr [esp], 8
; data inside code section at 0x13352 -- 0x13353
0x13352:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x13353 -- 0x13354
; data inside code section at 0x13354 -- 0x13375
0x13354:    ff ff ff 89 c7 8b 54 24  2c 8b 44 24 28 8b 74 24   |......T$,.D$(.t$|
0x13364:    24 c7 04 24 10 01 00 00  89 54 24 20 89 44 24 1c   |$..$.....T$ .D$.|
0x13374:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x13375 -- 0x13376
; data inside code section at 0x13376 -- 0x1337a
0x13376:    ff ff ff 89                                        |....            |
; function: function_1337a at 0x1337a -- 0x1337b
0x1337a:    c3                                 	ret 
; data inside code section at 0x1337b -- 0x133b4
0x1337b:    89 04 24 e8 cd 14 01 00  8b 44 24 1c 8b 54 24 20   |..$......D$..T$ |
0x1338b:    c7 03 90 14 03 00 89 b3  04 01 00 00 89 83 08 01   |................|
0x1339b:    00 00 89 93 0c 01 00 00  89 1f c7 47 04 00 00 00   |...........G....|
0x133ab:    00 c7 04 24 10 00 00 00  e8                        |...$.....       |
; dynamically linked function: _Znwj at 0x133b4 -- 0x133b5
; data inside code section at 0x133b5 -- 0x13413
0x133b5:    ff ff ff c7 40 04 01 00  00 00 89 c6 c7 40 08 01   |....@........@..|
0x133c5:    00 00 00 c7 00 a8 14 03  00 89 58 0c 89 47 04 8b   |..........X..G..|
0x133d5:    43 08 85 c0 74 07 8b 40  04 85 c0 75 40 8b 43 08   |C...t..@...u@.C.|
0x133e5:    89 74 24 34 89 5c 24 30  f0 ff 46 04 39 c6 89 5b   |.t$4.\$0..F.9..[|
0x133f5:    04 74 1e 85 f6 74 04 f0  ff 46 08 85 c0 74 0f ba   |.t...t...F...t..|
0x13405:    ff ff ff ff f0 0f c1 50  08 83 fa 01 74 5d         |.......P....t]  |
; function: function_13413 at 0x13413 -- 0x13414
; data inside code section at 0x13414 -- 0x13426
0x13414:    73 08 8d 44 24 34 89 04  24 e8 1e 04 01 00 89 3c   |s..D$4..$......<|
0x13424:    24 e8                                              |$.              |
; dynamically linked function: _ZN5boost6thread12start_threadEv at 0x13426 -- 0x13427
; data inside code section at 0x13427 -- 0x13432
0x13427:    ff ff ff c7 04 24 0c 00  00 00 e8                  |.....$.....     |
; dynamically linked function: _Znwj at 0x13432 -- 0x13433
; data inside code section at 0x13433 -- 0x1344a
0x13433:    ff ff ff 83 f8 f8 74 03  89 78 08 8b 54 24 18 89   |......t..x..T$..|
0x13443:    04 24 89 54 24 04 e8                               |.$.T$..         |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x1344a -- 0x1344b
; data inside code section at 0x1344b -- 0x1344d
0x1344b:    ff ff                                              |..              |
; function: function_1344d at 0x1344d -- 0x1346d
0x1344d:    ff 89 2c 24 e8 8a                  	dec dword ptr [ecx - 0x7517dbd4]
0x13453:    1b 01                              	sbb eax, dword ptr [ecx]
0x13455:    00 89 f8 8b 54 24                  	add byte ptr [ecx + 0x24548bf8], cl
0x1345b:    3c 65                              	cmp al, 0x65
0x1345d:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x13463:    75 15                              	jne 0x1347a <function_1344d+0x1f>
0x13465:    83 c4 4c                           	add esp, 0x4c
0x13468:    5b                                 	pop ebx
0x13469:    5e                                 	pop esi
0x1346a:    5f                                 	pop edi
0x1346b:    5d                                 	pop ebp
0x1346c:    c3                                 	ret 
; data inside code section at 0x1346d -- 0x13470
0x1346d:    8d 76 00                                           |.v.             |
; function: function_13470 at 0x13470 -- 0x1347a
0x13470:    8b 10                              	mov edx, dword ptr [eax]
0x13472:    89 04 24                           	mov dword ptr [esp], eax
0x13475:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x13478:    eb 99                              	jmp 0x13413 <function_13413>
; data inside code section at 0x1347a -- 0x1347b
0x1347a:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1347b -- 0x1347c
; data inside code section at 0x1347c -- 0x13480
0x1347c:    ff ff ff 89                                        |....            |
; function: function_13480 at 0x13480 -- 0x13481
0x13480:    c3                                 	ret 
; data inside code section at 0x13481 -- 0x1348d
0x13481:    8d 44 24 34 89 04 24 e8  b3 03 01 00               |.D$4..$.....    |
; function: function_1348d at 0x1348d -- 0x1348e
; data inside code section at 0x1348e -- 0x13498
0x1348e:    47 04 89 04 24 e8 a8 03  01 00                     |G...$.....      |
; function: function_13498 at 0x13498 -- 0x13499
; data inside code section at 0x13499 -- 0x1349c
0x13499:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZdlPv at 0x1349c -- 0x1349d
; data inside code section at 0x1349d -- 0x134a0
0x1349d:    ff ff ff                                           |...             |
; function: function_134a0 at 0x134a0 -- 0x134a1
; data inside code section at 0x134a1 -- 0x134ac
0x134a1:    2c 24 e8 38 1b 01 00 89  1c 24 e8                  |,$.8.....$.     |
; dynamically linked function: _Unwind_Resume at 0x134ac -- 0x134ad
; data inside code section at 0x134ad -- 0x134b4
0x134ad:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x134b4 -- 0x134b5
; data inside code section at 0x134b5 -- 0x134c1
0x134b5:    ff ff ff 8b 03 89 1c 24  ff 50 04 e8               |.......$.P..    |
; dynamically linked function: __cxa_rethrow at 0x134c1 -- 0x134c2
; data inside code section at 0x134c2 -- 0x134cd
0x134c2:    ff ff ff 89 c6 89 1c 24  89 f3 e8                  |.......$...     |
; dynamically linked function: _ZdlPv at 0x134cd -- 0x134ce
; data inside code section at 0x134ce -- 0x134d1
0x134ce:    ff ff ff                                           |...             |
; function: function_134d1 at 0x134d1 -- 0x134d3
0x134d1:    eb c5                              	jmp 0x13498 <function_13498>
; function: function_134d3 at 0x134d3 -- 0x134d7
0x134d3:    89 c3                              	mov ebx, eax
0x134d5:    eb c1                              	jmp 0x13498 <function_13498>
; data inside code section at 0x134d7 -- 0x134d8
0x134d7:    89                                                 |.               |
; function: function_134d8 at 0x134d8 -- 0x134d9
0x134d8:    c3                                 	ret 
; data inside code section at 0x134d9 -- 0x134e1
0x134d9:    8d b4 26 00 00 00 00 e8                            |..&.....        |
; dynamically linked function: __cxa_end_catch at 0x134e1 -- 0x134e2
; data inside code section at 0x134e2 -- 0x134e5
0x134e2:    ff ff ff                                           |...             |
; function: function_134e5 at 0x134e5 -- 0x134e7
0x134e5:    eb b1                              	jmp 0x13498 <function_13498>
; function: function_134e7 at 0x134e7 -- 0x134eb
0x134e7:    89 c3                              	mov ebx, eax
0x134e9:    eb b5                              	jmp 0x134a0 <function_134a0>
; data inside code section at 0x134eb -- 0x134ec
0x134eb:    89                                                 |.               |
; function: function_134ec at 0x134ec -- 0x134ed
0x134ec:    c3                                 	ret 
; data inside code section at 0x134ed -- 0x134f1
0x134ed:    89 3c 24 e8                                        |.<$.            |
; dynamically linked function: _ZN5boost6threadD1Ev at 0x134f1 -- 0x134f2
; data inside code section at 0x134f2 -- 0x134f5
0x134f2:    ff ff ff                                           |...             |
; function: function_134f5 at 0x134f5 -- 0x134f7
0x134f5:    eb a1                              	jmp 0x13498 <function_13498>
; function: function_134f7 at 0x134f7 -- 0x13506
0x134f7:    89 c3                              	mov ebx, eax
0x134f9:    8d 47 04                           	lea eax, [edi + 4]
0x134fc:    89 04 24                           	mov dword ptr [esp], eax
0x134ff:    e8 3c 03 01 00                     	call 0x23840
0x13504:    eb 92                              	jmp 0x13498 <function_13498>
; function: function_13506 at 0x13506 -- 0x1350a
0x13506:    89 c3                              	mov ebx, eax
0x13508:    eb 83                              	jmp 0x1348d <function_1348d>
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC2ERKS3_
; function: _ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_ at 0x13510 -- 0x1352c
0x13510:    56                                 	push esi
0x13511:    53                                 	push ebx
0x13512:    83 ec 24                           	sub esp, 0x24
0x13515:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x13519:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1351d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13523:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13527:    31 c0                              	xor eax, eax
0x13529:    8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x1352c -- 0x1352e
0x1352c:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt13runtime_error at 0x1352e -- 0x1353c
; data inside code section at 0x1353c -- 0x1353d
0x1353c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1353d -- 0x1353e
; data inside code section at 0x1353e -- 0x13540
0x1353e:    ff ff                                              |..              |
; function: function_13540 at 0x13540 -- 0x13592
0x13540:    ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x13546:    38 13                              	cmp byte ptr [ebx], dl
0x13548:    03 00                              	add eax, dword ptr [eax]
0x1354a:    c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0x13551:    85 c0                              	test eax, eax
0x13553:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x13556:    74 08                              	je 0x13560 <function_13540+0x20>
0x13558:    8b 10                              	mov edx, dword ptr [eax]
0x1355a:    89 04 24                           	mov dword ptr [esp], eax
0x1355d:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x13560:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x13563:    c7 43 08 7c 13 03 00               	mov dword ptr [ebx + 8], 0x3137c
0x1356a:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1356d:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x13570:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x13573:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x13576:    c7 03 68 13 03 00                  	mov dword ptr [ebx], 0x31368
0x1357c:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1357f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13583:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1358a:    75 06                              	jne 0x13592 <function_13540+0x51>
0x1358c:    83 c4 24                           	add esp, 0x24
0x1358f:    5b                                 	pop ebx
0x13590:    5e                                 	pop esi
0x13591:    c3                                 	ret 
; data inside code section at 0x13592 -- 0x13593
0x13592:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13593 -- 0x13594
; data inside code section at 0x13594 -- 0x135a5
0x13594:    ff ff ff 89 c6 89 1c 24  e8 2f b5 00 00 89 34 24   |.......$./....4$|
0x135a4:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x135a5 -- 0x135a6
; data inside code section at 0x135a6 -- 0x135af
0x135a6:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x135af -- 0x135b0
; data inside code section at 0x135b0 -- 0x135b7
0x135b0:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x135b7 -- 0x135b8
; data inside code section at 0x135b8 -- 0x135bb
0x135b8:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0x135c0 -- 0x135c7
0x135c0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x135c5:    eb 09                              	jmp 0x135d0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv>
; data inside code section at 0x135c7 -- 0x135d0
0x135c7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv at 0x135d0 -- 0x135ec
0x135d0:    56                                 	push esi
0x135d1:    53                                 	push ebx
0x135d2:    83 ec 24                           	sub esp, 0x24
0x135d5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x135d9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x135df:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x135e3:    31 c0                              	xor eax, eax
0x135e5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x135ec -- 0x135ed
0x135ec:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x135ed -- 0x135ee
; data inside code section at 0x135ee -- 0x135f0
0x135ee:    ff ff                                              |..              |
; function: function_135f0 at 0x135f0 -- 0x135f7
0x135f0:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x135f6:    c3                                 	ret 
; data inside code section at 0x135f7 -- 0x13627
0x135f7:    89 04 24 e8 d1 34 01 00  c7 03 a8 13 03 00 c7 43   |..$..4.........C|
0x13607:    08 c4 13 03 00 c7 43 1c  d4 13 03 00 c7 44 24 08   |......C......D$.|
0x13617:    60 fe 00 00 c7 44 24 04  00 14 03 00 89 1c 24 e8   |`....D$.......$.|
; dynamically linked function: __cxa_throw at 0x13627 -- 0x13628
; data inside code section at 0x13628 -- 0x13631
0x13628:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x13631 -- 0x13632
; data inside code section at 0x13632 -- 0x13639
0x13632:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x13639 -- 0x1363a
; data inside code section at 0x1363a -- 0x1363d
0x1363a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_ at 0x13640 -- 0x1365c
0x13640:    56                                 	push esi
0x13641:    53                                 	push ebx
0x13642:    83 ec 44                           	sub esp, 0x44
0x13645:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x13649:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1364f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x13653:    31 c0                              	xor eax, eax
0x13655:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1365c -- 0x1365d
0x1365c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1365d -- 0x1365e
; data inside code section at 0x1365e -- 0x13668
0x1365e:    ff ff ff 83 c6 04 c7 44  24 20                     |.......D$       |
; dynamically linked function: _ZTVSt13runtime_error at 0x13668 -- 0x13679
; data inside code section at 0x13679 -- 0x1367a
0x13679:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1367a -- 0x1367b
; data inside code section at 0x1367b -- 0x13701
0x1367b:    ff ff ff 8d 74 24 20 c7  44 24 2c 00 00 00 00 c7   |....t$ .D$,.....|
0x1368b:    44 24 30 00 00 00 00 c7  44 24 34 00 00 00 00 c7   |D$0.....D$4.....|
0x1369b:    44 24 38 ff ff ff ff c7  44 24 20 68 13 03 00 c7   |D$8.....D$ h....|
0x136ab:    44 24 28 7c 13 03 00 89  74 24 04 89 1c 24 e8 92   |D$(|....t$...$..|
0x136bb:    34 01 00 8d 44 24 28 c7  03 a8 13 03 00 c7 43 08   |4...D$(.......C.|
0x136cb:    c4 13 03 00 c7 43 1c d4  13 03 00 89 44 24 04 8d   |.....C......D$..|
0x136db:    43 08 89 04 24 e8 0b 0b  01 00 89 34 24 e8 93 f7   |C...$......4$...|
0x136eb:    00 00 c7 44 24 08 60 fe  00 00 c7 44 24 04 00 14   |...D$.`....D$...|
0x136fb:    03 00 89 1c 24 e8                                  |....$.          |
; dynamically linked function: __cxa_throw at 0x13701 -- 0x13702
; data inside code section at 0x13702 -- 0x1370f
0x13702:    ff ff ff 89 c6 8d 44 24  20 89 04 24 e8            |......D$ ..$.   |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1370f -- 0x13710
; data inside code section at 0x13710 -- 0x13713
0x13710:    ff ff ff                                           |...             |
; function: function_13713 at 0x13713 -- 0x13714
; data inside code section at 0x13714 -- 0x13717
0x13714:    1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x13717 -- 0x13718
; data inside code section at 0x13718 -- 0x1371f
0x13718:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x1371f -- 0x13720
; data inside code section at 0x13720 -- 0x13722
0x13720:    ff ff                                              |..              |
; function: function_13722 at 0x13722 -- 0x1374e
0x13722:    ff c7                              	inc edi
0x13724:    43                                 	inc ebx
0x13725:    1c 50                              	sbb al, 0x50
0x13727:    0e                                 	push cs
0x13728:    03 00                              	add eax, dword ptr [eax]
0x1372a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1372e:    89 1c 24                           	mov dword ptr [esp], ebx
0x13731:    e8 4a f7 00 00                     	call 0x22e80 <function_22e80>
0x13736:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1373a:    89 34 24                           	mov dword ptr [esp], esi
0x1373d:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13741:    e8 3a f7 00 00                     	call 0x22e80 <function_22e80>
0x13746:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1374a:    89 c6                              	mov esi, eax
0x1374c:    eb c5                              	jmp 0x13713 <function_13713>
; function: function_1374e at 0x1374e -- 0x13750
0x1374e:    eb ea                              	jmp 0x1373a
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc at 0x13750 -- 0x1380c
0x13750:    55                                 	push ebp
0x13751:    57                                 	push edi
0x13752:    56                                 	push esi
0x13753:    53                                 	push ebx
0x13754:    83 ec 3c                           	sub esp, 0x3c
0x13757:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1375b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13761:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x13765:    31 c0                              	xor eax, eax
0x13767:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1376b:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1376f:    8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x13773:    85 f6                              	test esi, esi
0x13775:    0f 84 8b 01 00 00                  	je 0x13906 <function_13906>
0x1377b:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x1377e:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x13781:    29 e8                              	sub eax, ebp
0x13783:    39 c6                              	cmp esi, eax
0x13785:    0f 87 8d 00 00 00                  	ja 0x13818 <function_13818>
0x1378b:    89 e9                              	mov ecx, ebp
0x1378d:    0f b6 12                           	movzx edx, byte ptr [edx]
0x13790:    89 e8                              	mov eax, ebp
0x13792:    29 d9                              	sub ecx, ebx
0x13794:    39 ce                              	cmp esi, ecx
0x13796:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x1379a:    0f 83 80 01 00 00                  	jae 0x13920 <function_13920>
0x137a0:    29 f0                              	sub eax, esi
0x137a2:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x137a6:    89 e8                              	mov eax, ebp
0x137a8:    3b 6c 24 14                        	cmp ebp, dword ptr [esp + 0x14]
0x137ac:    74 26                              	je 0x137d4 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc+0x84>
0x137ae:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x137b2:    89 7c 24 18                        	mov dword ptr [esp + 0x18], edi
0x137b6:    89 d7                              	mov edi, edx
0x137b8:    85 c0                              	test eax, eax
0x137ba:    74 05                              	je 0x137c1 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc+0x71>
0x137bc:    0f b6 11                           	movzx edx, byte ptr [ecx]
0x137bf:    88 10                              	mov byte ptr [eax], dl
0x137c1:    83 c1 01                           	add ecx, 1
0x137c4:    83 c0 01                           	add eax, 1
0x137c7:    39 e9                              	cmp ecx, ebp
0x137c9:    75 ed                              	jne 0x137b8 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPcS2_EEjRKc+0x68>
0x137cb:    89 fa                              	mov edx, edi
0x137cd:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x137d1:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x137d4:    01 f0                              	add eax, esi
0x137d6:    89 47 04                           	mov dword ptr [edi + 4], eax
0x137d9:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x137dd:    29 d8                              	sub eax, ebx
0x137df:    0f 85 9b 01 00 00                  	jne 0x13980 <function_13980>
0x137e5:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x137e9:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x137f0:    0f 85 cb 01 00 00                  	jne 0x139c1 <function_139c1>
0x137f6:    89 74 24 58                        	mov dword ptr [esp + 0x58], esi
0x137fa:    0f b6 d2                           	movzx edx, dl
0x137fd:    89 5c 24 50                        	mov dword ptr [esp + 0x50], ebx
0x13801:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x13805:    83 c4 3c                           	add esp, 0x3c
0x13808:    5b                                 	pop ebx
0x13809:    5e                                 	pop esi
0x1380a:    5f                                 	pop edi
0x1380b:    5d                                 	pop ebp
; data inside code section at 0x1380c -- 0x1380d
0x1380c:    e9                                                 |.               |
; dynamically linked function: memset at 0x1380d -- 0x1380e
; data inside code section at 0x1380e -- 0x13818
0x1380e:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_13818 at 0x13818 -- 0x13858
0x13818:    8b 07                              	mov eax, dword ptr [edi]
0x1381a:    29 c5                              	sub ebp, eax
0x1381c:    89 e9                              	mov ecx, ebp
0x1381e:    f7 d1                              	not ecx
0x13820:    39 ce                              	cmp esi, ecx
0x13822:    0f 87 9e 01 00 00                  	ja 0x139c6 <function_139c6>
0x13828:    39 f5                              	cmp ebp, esi
0x1382a:    89 f1                              	mov ecx, esi
0x1382c:    0f 43 cd                           	cmovae ecx, ebp
0x1382f:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x13833:    89 d9                              	mov ecx, ebx
0x13835:    29 c1                              	sub ecx, eax
0x13837:    03 6c 24 14                        	add ebp, dword ptr [esp + 0x14]
0x1383b:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1383f:    c7 44 24 18 ff ff ff ff            	mov dword ptr [esp + 0x18], 0xffffffff
0x13847:    0f 83 53 01 00 00                  	jae 0x139a0 <function_139a0>
0x1384d:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x13851:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x13855:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x13858 -- 0x13859
0x13858:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x13859 -- 0x1385a
; data inside code section at 0x1385a -- 0x13865
0x1385a:    ff ff ff 8b 54 24 10 89  44 24 14                  |....T$..D$.     |
; function: function_13865 at 0x13865 -- 0x138e9
0x13865:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x13869:    89 f1                              	mov ecx, esi
0x1386b:    89 d5                              	mov ebp, edx
0x1386d:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x13871:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x13878:    85 c0                              	test eax, eax
0x1387a:    74 06                              	je 0x13882 <function_13865+0x1d>
0x1387c:    0f b6 55 00                        	movzx edx, byte ptr [ebp]
0x13880:    88 10                              	mov byte ptr [eax], dl
0x13882:    83 c0 01                           	add eax, 1
0x13885:    83 e9 01                           	sub ecx, 1
0x13888:    75 ee                              	jne 0x13878 <function_13865+0x13>
0x1388a:    8b 2f                              	mov ebp, dword ptr [edi]
0x1388c:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x13890:    39 dd                              	cmp ebp, ebx
0x13892:    74 1f                              	je 0x138b3 <function_13865+0x4e>
0x13894:    89 ea                              	mov edx, ebp
0x13896:    66 90                              	nop 
0x13898:    85 c0                              	test eax, eax
0x1389a:    74 05                              	je 0x138a1 <function_13865+0x3c>
0x1389c:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x1389f:    88 08                              	mov byte ptr [eax], cl
0x138a1:    83 c2 01                           	add edx, 1
0x138a4:    83 c0 01                           	add eax, 1
0x138a7:    39 da                              	cmp edx, ebx
0x138a9:    75 ed                              	jne 0x13898 <function_13865+0x33>
0x138ab:    89 d8                              	mov eax, ebx
0x138ad:    29 e8                              	sub eax, ebp
0x138af:    03 44 24 14                        	add eax, dword ptr [esp + 0x14]
0x138b3:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x138b6:    01 c6                              	add esi, eax
0x138b8:    39 dd                              	cmp ebp, ebx
0x138ba:    74 1b                              	je 0x138d7 <function_13865+0x72>
0x138bc:    89 d8                              	mov eax, ebx
0x138be:    89 f2                              	mov edx, esi
0x138c0:    85 d2                              	test edx, edx
0x138c2:    74 05                              	je 0x138c9 <function_13865+0x64>
0x138c4:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x138c7:    88 0a                              	mov byte ptr [edx], cl
0x138c9:    83 c0 01                           	add eax, 1
0x138cc:    83 c2 01                           	add edx, 1
0x138cf:    39 e8                              	cmp eax, ebp
0x138d1:    75 ed                              	jne 0x138c0 <function_13865+0x5b>
0x138d3:    29 d8                              	sub eax, ebx
0x138d5:    01 c6                              	add esi, eax
0x138d7:    8b 1f                              	mov ebx, dword ptr [edi]
0x138d9:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x138dc:    85 db                              	test ebx, ebx
0x138de:    74 16                              	je 0x138f6 <function_138f6>
0x138e0:    29 d8                              	sub eax, ebx
0x138e2:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x138e6:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x138e9 -- 0x138ea
0x138e9:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x138ea -- 0x138eb
; data inside code section at 0x138eb -- 0x138f2
0x138eb:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x138f2 -- 0x138f3
; data inside code section at 0x138f3 -- 0x138f6
0x138f3:    ff ff ff                                           |...             |
; function: function_138f6 at 0x138f6 -- 0x13906
0x138f6:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x138fa:    89 77 04                           	mov dword ptr [edi + 4], esi
0x138fd:    89 07                              	mov dword ptr [edi], eax
0x138ff:    03 44 24 18                        	add eax, dword ptr [esp + 0x18]
0x13903:    89 47 08                           	mov dword ptr [edi + 8], eax
; function: function_13906 at 0x13906 -- 0x1391f
0x13906:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1390a:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x13911:    0f 85 aa 00 00 00                  	jne 0x139c1 <function_139c1>
0x13917:    83 c4 3c                           	add esp, 0x3c
0x1391a:    5b                                 	pop ebx
0x1391b:    5e                                 	pop esi
0x1391c:    5f                                 	pop edi
0x1391d:    5d                                 	pop ebp
0x1391e:    c3                                 	ret 
; data inside code section at 0x1391f -- 0x13920
0x1391f:    90                                                 |.               |
; function: function_13920 at 0x13920 -- 0x1397f
0x13920:    2b 74 24 14                        	sub esi, dword ptr [esp + 0x14]
0x13924:    74 13                              	je 0x13939 <function_13920+0x19>
0x13926:    89 f1                              	mov ecx, esi
0x13928:    85 c0                              	test eax, eax
0x1392a:    74 02                              	je 0x1392e <function_13920+0xe>
0x1392c:    88 10                              	mov byte ptr [eax], dl
0x1392e:    83 c0 01                           	add eax, 1
0x13931:    83 e9 01                           	sub ecx, 1
0x13934:    75 f2                              	jne 0x13928 <function_13920+0x8>
0x13936:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x13939:    01 c6                              	add esi, eax
0x1393b:    39 dd                              	cmp ebp, ebx
0x1393d:    89 77 04                           	mov dword ptr [edi + 4], esi
0x13940:    74 1c                              	je 0x1395e <function_13920+0x3e>
0x13942:    89 d8                              	mov eax, ebx
0x13944:    8d 74 26 00                        	lea esi, [esi]
0x13948:    85 f6                              	test esi, esi
0x1394a:    74 05                              	je 0x13951 <function_13920+0x31>
0x1394c:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x1394f:    88 0e                              	mov byte ptr [esi], cl
0x13951:    83 c0 01                           	add eax, 1
0x13954:    83 c6 01                           	add esi, 1
0x13957:    39 e8                              	cmp eax, ebp
0x13959:    75 ed                              	jne 0x13948 <function_13920+0x28>
0x1395b:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x1395e:    03 74 24 14                        	add esi, dword ptr [esp + 0x14]
0x13962:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x13966:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1396d:    89 77 04                           	mov dword ptr [edi + 4], esi
0x13970:    75 4f                              	jne 0x139c1 <function_139c1>
0x13972:    8b 4c 24 14                        	mov ecx, dword ptr [esp + 0x14]
0x13976:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x1397a:    e9 7b fe ff ff                     	jmp 0x137fa
; data inside code section at 0x1397f -- 0x13980
0x1397f:    90                                                 |.               |
; function: function_13980 at 0x13980 -- 0x13991
0x13980:    29 c5                              	sub ebp, eax
0x13982:    88 54 24 10                        	mov byte ptr [esp + 0x10], dl
0x13986:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1398a:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1398e:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x13991 -- 0x13992
0x13991:    e8                                                 |.               |
; dynamically linked function: memmove at 0x13992 -- 0x13993
; data inside code section at 0x13993 -- 0x13995
0x13993:    ff ff                                              |..              |
; function: function_13995 at 0x13995 -- 0x139a0
0x13995:    ff 0f                              	dec dword ptr [edi]
0x13997:    b6 54                              	mov dh, 0x54
0x13999:    24 10                              	and al, 0x10
0x1399b:    e9 45 fe ff ff                     	jmp 0x137e5
; function: function_139a0 at 0x139a0 -- 0x139c1
0x139a0:    85 ed                              	test ebp, ebp
0x139a2:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x139aa:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x139b2:    0f 84 ad fe ff ff                  	je 0x13865 <function_13865>
0x139b8:    89 6c 24 18                        	mov dword ptr [esp + 0x18], ebp
0x139bc:    e9 8c fe ff ff                     	jmp 0x1384d
; function: function_139c1 at 0x139c1 -- 0x139c2
; dynamically linked function: __stack_chk_fail at 0x139c2 -- 0x139c3
; data inside code section at 0x139c3 -- 0x139c6
0x139c3:    ff ff ff                                           |...             |
; function: function_139c6 at 0x139c6 -- 0x139cd
0x139c6:    c7 04 24 6b a0 00 00               	mov dword ptr [esp], 0xa06b ; "vector::_M_fill_insert"
; data inside code section at 0x139cd -- 0x139ce
0x139cd:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x139ce -- 0x139cf
; data inside code section at 0x139cf -- 0x139d2
0x139cf:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE at 0x139e0 -- 0x13a17
0x139e0:    57                                 	push edi
0x139e1:    56                                 	push esi
0x139e2:    53                                 	push ebx
0x139e3:    83 ec 20                           	sub esp, 0x20
0x139e6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x139ea:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x139f0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x139f4:    31 c0                              	xor eax, eax
0x139f6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x139fa:    85 db                              	test ebx, ebx
0x139fc:    75 04                              	jne 0x13a02 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE+0x22>
0x139fe:    eb 20                              	jmp 0x13a20 <function_13a20>
0x13a00:    89 f3                              	mov ebx, esi
0x13a02:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13a05:    89 3c 24                           	mov dword ptr [esp], edi
0x13a08:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13a0c:    e8 af 39 01 00                     	call 0x273c0 <function_273c0>
0x13a11:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13a14:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13a17 -- 0x13a18
0x13a17:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13a18 -- 0x13a19
; data inside code section at 0x13a19 -- 0x13a20
0x13a19:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13a20 at 0x13a20 -- 0x13a34
0x13a20:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13a24:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13a2b:    75 07                              	jne 0x13a34 <function_13a20+0x13>
0x13a2d:    83 c4 20                           	add esp, 0x20
0x13a30:    5b                                 	pop ebx
0x13a31:    5e                                 	pop esi
0x13a32:    5f                                 	pop edi
0x13a33:    c3                                 	ret 
; data inside code section at 0x13a34 -- 0x13a35
0x13a34:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13a35 -- 0x13a36
; data inside code section at 0x13a36 -- 0x13a39
0x13a36:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorISt3setIiSt4lessIiESaIiEESaIS4_EED2Ev
; function: _ZNSt6vectorISt3setIiSt4lessIiESaIiEESaIS4_EED1Ev at 0x13a40 -- 0x13a93
0x13a40:    57                                 	push edi
0x13a41:    56                                 	push esi
0x13a42:    53                                 	push ebx
0x13a43:    83 ec 20                           	sub esp, 0x20
0x13a46:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13a4a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13a50:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13a54:    31 c0                              	xor eax, eax
0x13a56:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x13a59:    8b 1f                              	mov ebx, dword ptr [edi]
0x13a5b:    39 de                              	cmp esi, ebx
0x13a5d:    74 19                              	je 0x13a78 <_ZNSt6vectorISt3setIiSt4lessIiESaIiEESaIS4_EED1Ev+0x38>
0x13a5f:    90                                 	nop 
0x13a60:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x13a63:    89 1c 24                           	mov dword ptr [esp], ebx
0x13a66:    83 c3 18                           	add ebx, 0x18
0x13a69:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13a6d:    e8 ae 39 01 00                     	call 0x27420
0x13a72:    39 de                              	cmp esi, ebx
0x13a74:    75 ea                              	jne 0x13a60 <_ZNSt6vectorISt3setIiSt4lessIiESaIiEESaIS4_EED1Ev+0x20>
0x13a76:    8b 1f                              	mov ebx, dword ptr [edi]
0x13a78:    85 db                              	test ebx, ebx
0x13a7a:    74 1c                              	je 0x13a98 <function_13a98>
0x13a7c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13a80:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13a87:    75 23                              	jne 0x13aac <function_13aac>
0x13a89:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x13a8d:    83 c4 20                           	add esp, 0x20
0x13a90:    5b                                 	pop ebx
0x13a91:    5e                                 	pop esi
0x13a92:    5f                                 	pop edi
; data inside code section at 0x13a93 -- 0x13a94
0x13a93:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13a94 -- 0x13a95
; data inside code section at 0x13a95 -- 0x13a98
0x13a95:    ff ff ff                                           |...             |
; function: function_13a98 at 0x13a98 -- 0x13aac
0x13a98:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13a9c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13aa3:    75 07                              	jne 0x13aac <function_13aac>
0x13aa5:    83 c4 20                           	add esp, 0x20
0x13aa8:    5b                                 	pop ebx
0x13aa9:    5e                                 	pop esi
0x13aaa:    5f                                 	pop edi
0x13aab:    c3                                 	ret 
; function: function_13aac at 0x13aac -- 0x13aad
; dynamically linked function: __stack_chk_fail at 0x13aad -- 0x13aae
; data inside code section at 0x13aae -- 0x13ab1
0x13aae:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x13ac0 -- 0x13af7
0x13ac0:    57                                 	push edi
0x13ac1:    56                                 	push esi
0x13ac2:    53                                 	push ebx
0x13ac3:    83 ec 20                           	sub esp, 0x20
0x13ac6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13aca:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13ad0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13ad4:    31 c0                              	xor eax, eax
0x13ad6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13ada:    85 db                              	test ebx, ebx
0x13adc:    75 04                              	jne 0x13ae2 <_ZNSt8_Rb_treeIiSt4pairIKi9CAddrInfoESt10_Select1stIS3_ESt4lessIiESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x13ade:    eb 20                              	jmp 0x13b00 <function_13b00>
0x13ae0:    89 f3                              	mov ebx, esi
0x13ae2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13ae5:    89 3c 24                           	mov dword ptr [esp], edi
0x13ae8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13aec:    e8 8f 3a 01 00                     	call 0x27580
0x13af1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13af4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13af7 -- 0x13af8
0x13af7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13af8 -- 0x13af9
; data inside code section at 0x13af9 -- 0x13b00
0x13af9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13b00 at 0x13b00 -- 0x13b14
0x13b00:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13b04:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13b0b:    75 07                              	jne 0x13b14 <function_13b00+0x13>
0x13b0d:    83 c4 20                           	add esp, 0x20
0x13b10:    5b                                 	pop ebx
0x13b11:    5e                                 	pop esi
0x13b12:    5f                                 	pop edi
0x13b13:    c3                                 	ret 
; data inside code section at 0x13b14 -- 0x13b15
0x13b14:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13b15 -- 0x13b16
; data inside code section at 0x13b16 -- 0x13b19
0x13b16:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x13b20 -- 0x13b57
0x13b20:    57                                 	push edi
0x13b21:    56                                 	push esi
0x13b22:    53                                 	push ebx
0x13b23:    83 ec 20                           	sub esp, 0x20
0x13b26:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13b2a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13b30:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13b34:    31 c0                              	xor eax, eax
0x13b36:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13b3a:    85 db                              	test ebx, ebx
0x13b3c:    75 04                              	jne 0x13b42 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_iESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x13b3e:    eb 20                              	jmp 0x13b60 <function_13b60>
0x13b40:    89 f3                              	mov ebx, esi
0x13b42:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13b45:    89 3c 24                           	mov dword ptr [esp], edi
0x13b48:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13b4c:    e8 ef 3a 01 00                     	call 0x27640 <function_27640>
0x13b51:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13b54:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13b57 -- 0x13b58
0x13b57:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13b58 -- 0x13b59
; data inside code section at 0x13b59 -- 0x13b60
0x13b59:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13b60 at 0x13b60 -- 0x13b74
0x13b60:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13b64:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13b6b:    75 07                              	jne 0x13b74 <function_13b60+0x13>
0x13b6d:    83 c4 20                           	add esp, 0x20
0x13b70:    5b                                 	pop ebx
0x13b71:    5e                                 	pop esi
0x13b72:    5f                                 	pop edi
0x13b73:    c3                                 	ret 
; data inside code section at 0x13b74 -- 0x13b75
0x13b74:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13b75 -- 0x13b76
; data inside code section at 0x13b76 -- 0x13b79
0x13b76:    ff ff ff                                           |...             |
; section: .text._ZN8CAddrManD2Ev
; function: _ZN8CAddrManD1Ev at 0x13b80 -- 0x13bcb
0x13b80:    57                                 	push edi
0x13b81:    56                                 	push esi
0x13b82:    53                                 	push ebx
0x13b83:    83 ec 20                           	sub esp, 0x20
0x13b86:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x13b8a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13b90:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13b94:    31 c0                              	xor eax, eax
0x13b96:    8b bb b8 00 00 00                  	mov edi, dword ptr [ebx + 0xb8]
0x13b9c:    8b b3 b4 00 00 00                  	mov esi, dword ptr [ebx + 0xb4]
0x13ba2:    39 f7                              	cmp edi, esi
0x13ba4:    74 1e                              	je 0x13bc4 <_ZN8CAddrManD1Ev+0x44>
0x13ba6:    66 90                              	nop 
0x13ba8:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x13bab:    89 34 24                           	mov dword ptr [esp], esi
0x13bae:    83 c6 18                           	add esi, 0x18
0x13bb1:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13bb5:    e8 a6 39 01 00                     	call 0x27560 <function_27560>
0x13bba:    39 f7                              	cmp edi, esi
0x13bbc:    75 ea                              	jne 0x13ba8 <_ZN8CAddrManD1Ev+0x28>
0x13bbe:    8b b3 b4 00 00 00                  	mov esi, dword ptr [ebx + 0xb4]
0x13bc4:    85 f6                              	test esi, esi
0x13bc6:    74 08                              	je 0x13bd0 <function_13bd0>
0x13bc8:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x13bcb -- 0x13bcc
0x13bcb:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13bcc -- 0x13bcd
; data inside code section at 0x13bcd -- 0x13bd0
0x13bcd:    ff ff ff                                           |...             |
; function: function_13bd0 at 0x13bd0 -- 0x13be9
0x13bd0:    8b bb a8 00 00 00                  	mov edi, dword ptr [ebx + 0xa8]
0x13bd6:    8b b3 a4 00 00 00                  	mov esi, dword ptr [ebx + 0xa4]
0x13bdc:    39 f7                              	cmp edi, esi
0x13bde:    74 1b                              	je 0x13bfb <function_13bfb>
0x13be0:    8b 06                              	mov eax, dword ptr [esi]
0x13be2:    85 c0                              	test eax, eax
0x13be4:    74 08                              	je 0x13bee <function_13bee>
0x13be6:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13be9 -- 0x13bea
0x13be9:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13bea -- 0x13beb
; data inside code section at 0x13beb -- 0x13bee
0x13beb:    ff ff ff                                           |...             |
; function: function_13bee at 0x13bee -- 0x13bfb
0x13bee:    83 c6 0c                           	add esi, 0xc
0x13bf1:    39 f7                              	cmp edi, esi
0x13bf3:    75 eb                              	jne 0x13be0
0x13bf5:    8b b3 a4 00 00 00                  	mov esi, dword ptr [ebx + 0xa4]
; function: function_13bfb at 0x13bfb -- 0x13c02
0x13bfb:    85 f6                              	test esi, esi
0x13bfd:    74 08                              	je 0x13c07 <function_13c07>
0x13bff:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x13c02 -- 0x13c03
0x13c02:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13c03 -- 0x13c04
; data inside code section at 0x13c04 -- 0x13c07
0x13c04:    ff ff ff                                           |...             |
; function: function_13c07 at 0x13c07 -- 0x13c14
0x13c07:    8b 83 94 00 00 00                  	mov eax, dword ptr [ebx + 0x94]
0x13c0d:    85 c0                              	test eax, eax
0x13c0f:    74 08                              	je 0x13c19 <function_13c19>
0x13c11:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13c14 -- 0x13c15
0x13c14:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13c15 -- 0x13c16
; data inside code section at 0x13c16 -- 0x13c19
0x13c16:    ff ff ff                                           |...             |
; function: function_13c19 at 0x13c19 -- 0x13c4a
0x13c19:    8b 83 84 00 00 00                  	mov eax, dword ptr [ebx + 0x84]
0x13c1f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13c23:    8d 43 7c                           	lea eax, [ebx + 0x7c]
0x13c26:    89 04 24                           	mov dword ptr [esp], eax
0x13c29:    e8 72 3a 01 00                     	call 0x276a0 <function_276a0>
0x13c2e:    8b 43 6c                           	mov eax, dword ptr [ebx + 0x6c]
0x13c31:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13c35:    8d 43 64                           	lea eax, [ebx + 0x64]
0x13c38:    89 04 24                           	mov dword ptr [esp], eax
0x13c3b:    e8 00 3a 01 00                     	call 0x27640 <function_27640>
0x13c40:    8b 43 54                           	mov eax, dword ptr [ebx + 0x54]
0x13c43:    85 c0                              	test eax, eax
0x13c45:    74 08                              	je 0x13c4f <function_13c4f>
0x13c47:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13c4a -- 0x13c4b
0x13c4a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13c4b -- 0x13c4c
; data inside code section at 0x13c4c -- 0x13c4f
0x13c4c:    ff ff ff                                           |...             |
; function: function_13c4f at 0x13c4f -- 0x13c52
0x13c4f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13c52 -- 0x13c53
0x13c52:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x13c53 -- 0x13c54
; data inside code section at 0x13c54 -- 0x13c56
0x13c54:    ff ff                                              |..              |
; function: function_13c56 at 0x13c56 -- 0x13c5d
0x13c56:    ff 85 c0 75 23 83                  	inc dword ptr [ebp - 0x7cdc8a40]
0x13c5c:    c3                                 	ret 
; data inside code section at 0x13c5d -- 0x13c62
0x13c5d:    18 89 1c 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x13c62 -- 0x13c63
; data inside code section at 0x13c63 -- 0x13c65
0x13c63:    ff ff                                              |..              |
; function: function_13c65 at 0x13c65 -- 0x13c7e
0x13c65:    ff 85 c0 75 1e 8b                  	inc dword ptr [ebp - 0x74e18a40]
0x13c6b:    44                                 	inc esp
0x13c6c:    24 1c                              	and al, 0x1c
0x13c6e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13c75:    75 0c                              	jne 0x13c83 <function_13c65+0x18>
0x13c77:    83 c4 20                           	add esp, 0x20
0x13c7a:    5b                                 	pop ebx
0x13c7b:    5e                                 	pop esi
0x13c7c:    5f                                 	pop edi
0x13c7d:    c3                                 	ret 
; function: function_13c7e at 0x13c7e -- 0x13c83
0x13c7e:    e8 a7 e0 00 00                     	call 0x21d2a <function_21d2a>
; data inside code section at 0x13c83 -- 0x13c84
0x13c83:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13c84 -- 0x13c85
; data inside code section at 0x13c85 -- 0x13ca8
0x13c85:    ff ff ff c7 44 24 0c 00  7a 02 00 c7 44 24 08 5e   |....D$..z...D$.^|
0x13c95:    00 00 00 c7 44 24 04 98  d5 00 00 c7 04 24 51 9f   |....D$.......$Q.|
0x13ca5:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x13ca8 -- 0x13ca9
; data inside code section at 0x13ca9 -- 0x13cac
0x13ca9:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED2Ev
; function: _ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED1Ev at 0x13cb0 -- 0x13cef
0x13cb0:    53                                 	push ebx
0x13cb1:    83 ec 18                           	sub esp, 0x18
0x13cb4:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x13cb8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13cbe:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x13cc2:    31 c0                              	xor eax, eax
0x13cc4:    8b 03                              	mov eax, dword ptr [ebx]
0x13cc6:    85 c0                              	test eax, eax
0x13cc8:    74 2e                              	je 0x13cf8 <function_13cf8>
0x13cca:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x13ccd:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x13cd0:    83 c2 04                           	add edx, 4
0x13cd3:    e8 98 00 00 00                     	call 0x13d70 <function_13d70>
0x13cd8:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x13cdc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13ce3:    75 25                              	jne 0x13d0a <function_13d0a>
0x13ce5:    8b 03                              	mov eax, dword ptr [ebx]
0x13ce7:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x13ceb:    83 c4 18                           	add esp, 0x18
0x13cee:    5b                                 	pop ebx
; data inside code section at 0x13cef -- 0x13cf0
0x13cef:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13cf0 -- 0x13cf1
; data inside code section at 0x13cf1 -- 0x13cf8
0x13cf1:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_13cf8 at 0x13cf8 -- 0x13d0a
0x13cf8:    8b 44 24 0c                        	mov eax, dword ptr [esp + 0xc]
0x13cfc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13d03:    75 05                              	jne 0x13d0a <function_13d0a>
0x13d05:    83 c4 18                           	add esp, 0x18
0x13d08:    5b                                 	pop ebx
0x13d09:    c3                                 	ret 
; function: function_13d0a at 0x13d0a -- 0x13d10
0x13d0a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x13d10 -- 0x13d11
0x13d10:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13d11 -- 0x13d12
; data inside code section at 0x13d12 -- 0x13d15
0x13d12:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseI11CNetMessageSaIS0_EED2Ev
; function: _ZNSt11_Deque_baseI11CNetMessageSaIS0_EED1Ev at 0x13d20 -- 0x13d58
0x13d20:    57                                 	push edi
0x13d21:    56                                 	push esi
0x13d22:    53                                 	push ebx
0x13d23:    83 ec 20                           	sub esp, 0x20
0x13d26:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13d2a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13d30:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13d34:    31 c0                              	xor eax, eax
0x13d36:    8b 07                              	mov eax, dword ptr [edi]
0x13d38:    85 c0                              	test eax, eax
0x13d3a:    74 44                              	je 0x13d80 <function_13d80>
0x13d3c:    8b 77 24                           	mov esi, dword ptr [edi + 0x24]
0x13d3f:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x13d42:    83 c6 04                           	add esi, 4
0x13d45:    39 de                              	cmp esi, ebx
0x13d47:    76 1a                              	jbe 0x13d63 <function_13d63>
0x13d49:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x13d50:    8b 03                              	mov eax, dword ptr [ebx]
0x13d52:    83 c3 04                           	add ebx, 4
0x13d55:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13d58 -- 0x13d59
0x13d58:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13d59 -- 0x13d5a
; data inside code section at 0x13d5a -- 0x13d63
0x13d5a:    ff ff ff 39 de 77 ef 8b  07                        |...9.w...       |
; function: function_13d63 at 0x13d63 -- 0x13d70
0x13d63:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x13d67:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x13d6e:    75 24                              	jne 0x13d94
; function: function_13d70 at 0x13d70 -- 0x13d7a
0x13d70:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x13d74:    83 c4 20                           	add esp, 0x20
0x13d77:    5b                                 	pop ebx
0x13d78:    5e                                 	pop esi
0x13d79:    5f                                 	pop edi
; data inside code section at 0x13d7a -- 0x13d7b
0x13d7a:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13d7b -- 0x13d7c
; data inside code section at 0x13d7c -- 0x13d80
0x13d7c:    ff ff ff 90                                        |....            |
; function: function_13d80 at 0x13d80 -- 0x13d94
0x13d80:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13d84:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13d8b:    75 07                              	jne 0x13d94 <function_13d94>
0x13d8d:    83 c4 20                           	add esp, 0x20
0x13d90:    5b                                 	pop ebx
0x13d91:    5e                                 	pop esi
0x13d92:    5f                                 	pop edi
0x13d93:    c3                                 	ret 
; function: function_13d94 at 0x13d94 -- 0x13d95
; dynamically linked function: __stack_chk_fail at 0x13d95 -- 0x13d96
; data inside code section at 0x13d96 -- 0x13d99
0x13d96:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CAddressS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
; function: _ZNSt8_Rb_treeI8CAddressS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E at 0x13da0 -- 0x13dd7
0x13da0:    57                                 	push edi
0x13da1:    56                                 	push esi
0x13da2:    53                                 	push ebx
0x13da3:    83 ec 20                           	sub esp, 0x20
0x13da6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13daa:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13db0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13db4:    31 c0                              	xor eax, eax
0x13db6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13dba:    85 db                              	test ebx, ebx
0x13dbc:    75 04                              	jne 0x13dc2 <_ZNSt8_Rb_treeI8CAddressS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x22>
0x13dbe:    eb 20                              	jmp 0x13de0 <function_13de0>
0x13dc0:    89 f3                              	mov ebx, esi
0x13dc2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13dc5:    89 3c 24                           	mov dword ptr [esp], edi
0x13dc8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13dcc:    e8 6f 3d 01 00                     	call 0x27b40 <_ZZNK5boost10shared_ptrINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__>
0x13dd1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13dd4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13dd7 -- 0x13dd8
0x13dd7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13dd8 -- 0x13dd9
; data inside code section at 0x13dd9 -- 0x13de0
0x13dd9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13de0 at 0x13de0 -- 0x13df4
0x13de0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13de4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13deb:    75 07                              	jne 0x13df4 <function_13de0+0x13>
0x13ded:    83 c4 20                           	add esp, 0x20
0x13df0:    5b                                 	pop ebx
0x13df1:    5e                                 	pop esi
0x13df2:    5f                                 	pop edi
0x13df3:    c3                                 	ret 
; data inside code section at 0x13df4 -- 0x13df5
0x13df4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13df5 -- 0x13df6
; data inside code section at 0x13df6 -- 0x13df9
0x13df6:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
; function: _ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E at 0x13e00 -- 0x13e37
0x13e00:    57                                 	push edi
0x13e01:    56                                 	push esi
0x13e02:    53                                 	push ebx
0x13e03:    83 ec 20                           	sub esp, 0x20
0x13e06:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13e0a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13e10:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13e14:    31 c0                              	xor eax, eax
0x13e16:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13e1a:    85 db                              	test ebx, ebx
0x13e1c:    75 04                              	jne 0x13e22 <_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x22>
0x13e1e:    eb 20                              	jmp 0x13e40 <function_13e40>
0x13e20:    89 f3                              	mov ebx, esi
0x13e22:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13e25:    89 3c 24                           	mov dword ptr [esp], edi
0x13e28:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13e2c:    e8 cf 3d 01 00                     	call 0x27c00 <function_27c00>
0x13e31:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13e34:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13e37 -- 0x13e38
0x13e37:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13e38 -- 0x13e39
; data inside code section at 0x13e39 -- 0x13e40
0x13e39:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13e40 at 0x13e40 -- 0x13e54
0x13e40:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13e44:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13e4b:    75 07                              	jne 0x13e54 <function_13e40+0x13>
0x13e4d:    83 c4 20                           	add esp, 0x20
0x13e50:    5b                                 	pop ebx
0x13e51:    5e                                 	pop esi
0x13e52:    5f                                 	pop edi
0x13e53:    c3                                 	ret 
; data inside code section at 0x13e54 -- 0x13e55
0x13e54:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13e55 -- 0x13e56
; data inside code section at 0x13e56 -- 0x13e59
0x13e56:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
; function: _ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E at 0x13e60 -- 0x13e97
0x13e60:    57                                 	push edi
0x13e61:    56                                 	push esi
0x13e62:    53                                 	push ebx
0x13e63:    83 ec 20                           	sub esp, 0x20
0x13e66:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13e6a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13e70:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13e74:    31 c0                              	xor eax, eax
0x13e76:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13e7a:    85 db                              	test ebx, ebx
0x13e7c:    75 04                              	jne 0x13e82 <_ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x22>
0x13e7e:    eb 20                              	jmp 0x13ea0 <function_13ea0>
0x13e80:    89 f3                              	mov ebx, esi
0x13e82:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13e85:    89 3c 24                           	mov dword ptr [esp], edi
0x13e88:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13e8c:    e8 2f 3e 01 00                     	call 0x27cc0 <function_27cc0>
0x13e91:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13e94:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13e97 -- 0x13e98
0x13e97:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13e98 -- 0x13e99
; data inside code section at 0x13e99 -- 0x13ea0
0x13e99:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13ea0 at 0x13ea0 -- 0x13eb4
0x13ea0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13ea4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13eab:    75 07                              	jne 0x13eb4 <function_13ea0+0x13>
0x13ead:    83 c4 20                           	add esp, 0x20
0x13eb0:    5b                                 	pop ebx
0x13eb1:    5e                                 	pop esi
0x13eb2:    5f                                 	pop edi
0x13eb3:    c3                                 	ret 
; data inside code section at 0x13eb4 -- 0x13eb5
0x13eb4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13eb5 -- 0x13eb6
; data inside code section at 0x13eb6 -- 0x13eb9
0x13eb6:    ff ff ff                                           |...             |
; section: .text._ZN6mrusetI4CInvED2Ev
; function: _ZN6mrusetI4CInvED1Ev at 0x13ec0 -- 0x13ef8
0x13ec0:    57                                 	push edi
0x13ec1:    56                                 	push esi
0x13ec2:    53                                 	push ebx
0x13ec3:    83 ec 20                           	sub esp, 0x20
0x13ec6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13eca:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13ed0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13ed4:    31 c0                              	xor eax, eax
0x13ed6:    8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0x13ed9:    85 c0                              	test eax, eax
0x13edb:    74 2f                              	je 0x13f0c <function_13f0c>
0x13edd:    8b 77 3c                           	mov esi, dword ptr [edi + 0x3c]
0x13ee0:    8b 5f 2c                           	mov ebx, dword ptr [edi + 0x2c]
0x13ee3:    83 c6 04                           	add esi, 4
0x13ee6:    39 de                              	cmp esi, ebx
0x13ee8:    76 1a                              	jbe 0x13f04 <function_13f04>
0x13eea:    8d b6 00 00 00 00                  	lea esi, [esi]
0x13ef0:    8b 03                              	mov eax, dword ptr [ebx]
0x13ef2:    83 c3 04                           	add ebx, 4
0x13ef5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13ef8 -- 0x13ef9
0x13ef8:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13ef9 -- 0x13efa
; data inside code section at 0x13efa -- 0x13f04
0x13efa:    ff ff ff 39 de 77 ef 8b  47 18                     |...9.w..G.      |
; function: function_13f04 at 0x13f04 -- 0x13f07
0x13f04:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x13f07 -- 0x13f08
0x13f07:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13f08 -- 0x13f09
; data inside code section at 0x13f09 -- 0x13f0c
0x13f09:    ff ff ff                                           |...             |
; function: function_13f0c at 0x13f0c -- 0x13f2f
0x13f0c:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x13f0f:    89 3c 24                           	mov dword ptr [esp], edi
0x13f12:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13f16:    e8 05 3e 01 00                     	call 0x27d20 <function_27d20>
0x13f1b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13f1f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13f26:    75 07                              	jne 0x13f2f <function_13f0c+0x22>
0x13f28:    83 c4 20                           	add esp, 0x20
0x13f2b:    5b                                 	pop ebx
0x13f2c:    5e                                 	pop esi
0x13f2d:    5f                                 	pop edi
0x13f2e:    c3                                 	ret 
; data inside code section at 0x13f2f -- 0x13f30
0x13f2f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13f30 -- 0x13f31
; data inside code section at 0x13f31 -- 0x13f34
0x13f31:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIxSt4pairIKx4CInvESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeIxSt4pairIKx4CInvESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x13f40 -- 0x13f77
0x13f40:    57                                 	push edi
0x13f41:    56                                 	push esi
0x13f42:    53                                 	push ebx
0x13f43:    83 ec 20                           	sub esp, 0x20
0x13f46:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x13f4a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13f50:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x13f54:    31 c0                              	xor eax, eax
0x13f56:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x13f5a:    85 db                              	test ebx, ebx
0x13f5c:    75 04                              	jne 0x13f62 <_ZNSt8_Rb_treeIxSt4pairIKx4CInvESt10_Select1stIS3_ESt4lessIxESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x13f5e:    eb 20                              	jmp 0x13f80 <function_13f80>
0x13f60:    89 f3                              	mov ebx, esi
0x13f62:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x13f65:    89 3c 24                           	mov dword ptr [esp], edi
0x13f68:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x13f6c:    e8 0f 3f 01 00                     	call 0x27e80 <function_27e80>
0x13f71:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x13f74:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x13f77 -- 0x13f78
0x13f77:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x13f78 -- 0x13f79
; data inside code section at 0x13f79 -- 0x13f80
0x13f79:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_13f80 at 0x13f80 -- 0x13f94
0x13f80:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x13f84:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x13f8b:    75 07                              	jne 0x13f94 <function_13f80+0x13>
0x13f8d:    83 c4 20                           	add esp, 0x20
0x13f90:    5b                                 	pop ebx
0x13f91:    5e                                 	pop esi
0x13f92:    5f                                 	pop edi
0x13f93:    c3                                 	ret 
; data inside code section at 0x13f94 -- 0x13f95
0x13f94:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x13f95 -- 0x13f96
; data inside code section at 0x13f96 -- 0x13f99
0x13f96:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
; function: _ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_ at 0x13fa0 -- 0x14172
0x13fa0:    55                                 	push ebp
0x13fa1:    57                                 	push edi
0x13fa2:    56                                 	push esi
0x13fa3:    53                                 	push ebx
0x13fa4:    83 ec 5c                           	sub esp, 0x5c
0x13fa7:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x13fab:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x13fb1:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x13fb5:    31 c0                              	xor eax, eax
0x13fb7:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x13fbb:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x13fbf:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x13fc2:    3b 46 08                           	cmp eax, dword ptr [esi + 8]
0x13fc5:    0f 84 65 01 00 00                  	je 0x14130 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x190>
0x13fcb:    31 d2                              	xor edx, edx
0x13fcd:    85 c0                              	test eax, eax
0x13fcf:    74 3e                              	je 0x1400f <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x6f>
0x13fd1:    8b 50 d8                           	mov edx, dword ptr [eax - 0x28]
0x13fd4:    89 10                              	mov dword ptr [eax], edx
0x13fd6:    8b 50 dc                           	mov edx, dword ptr [eax - 0x24]
0x13fd9:    89 50 04                           	mov dword ptr [eax + 4], edx
0x13fdc:    8b 50 e0                           	mov edx, dword ptr [eax - 0x20]
0x13fdf:    89 50 08                           	mov dword ptr [eax + 8], edx
0x13fe2:    8b 50 e4                           	mov edx, dword ptr [eax - 0x1c]
0x13fe5:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x13fe8:    8b 50 e8                           	mov edx, dword ptr [eax - 0x18]
0x13feb:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x13fee:    8b 50 ec                           	mov edx, dword ptr [eax - 0x14]
0x13ff1:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x13ff4:    8b 50 f0                           	mov edx, dword ptr [eax - 0x10]
0x13ff7:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x13ffa:    8b 50 f4                           	mov edx, dword ptr [eax - 0xc]
0x13ffd:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x14000:    8b 50 f8                           	mov edx, dword ptr [eax - 8]
0x14003:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x14006:    8b 50 fc                           	mov edx, dword ptr [eax - 4]
0x14009:    89 50 24                           	mov dword ptr [eax + 0x24], edx
0x1400c:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x1400f:    8d 42 28                           	lea eax, [edx + 0x28]
0x14012:    89 46 04                           	mov dword ptr [esi + 4], eax
0x14015:    8b 45 00                           	mov eax, dword ptr [ebp]
0x14018:    8d 4a d8                           	lea ecx, [edx - 0x28]
0x1401b:    89 ce                              	mov esi, ecx
0x1401d:    29 de                              	sub esi, ebx
0x1401f:    c1 fe 03                           	sar esi, 3
0x14022:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x14026:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x14029:    69 f6 cd cc cc cc                  	imul esi, esi, 0xcccccccd
0x1402f:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x14033:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x14036:    85 f6                              	test esi, esi
0x14038:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1403c:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x1403f:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x14043:    8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0x14046:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1404a:    8b 45 14                           	mov eax, dword ptr [ebp + 0x14]
0x1404d:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x14051:    8b 45 18                           	mov eax, dword ptr [ebp + 0x18]
0x14054:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x14058:    8b 45 1c                           	mov eax, dword ptr [ebp + 0x1c]
0x1405b:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x1405f:    8b 45 20                           	mov eax, dword ptr [ebp + 0x20]
0x14062:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x14066:    8b 45 24                           	mov eax, dword ptr [ebp + 0x24]
0x14069:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1406d:    7e 61                              	jle 0x140d0 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x130>
0x1406f:    31 c0                              	xor eax, eax
0x14071:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x14078:    8b 7c 01 d8                        	mov edi, dword ptr [ecx + eax - 0x28]
0x1407c:    89 7c 02 d8                        	mov dword ptr [edx + eax - 0x28], edi
0x14080:    8b 7c 01 dc                        	mov edi, dword ptr [ecx + eax - 0x24]
0x14084:    89 7c 02 dc                        	mov dword ptr [edx + eax - 0x24], edi
0x14088:    8b 7c 01 e0                        	mov edi, dword ptr [ecx + eax - 0x20]
0x1408c:    89 7c 02 e0                        	mov dword ptr [edx + eax - 0x20], edi
0x14090:    8b 7c 01 e4                        	mov edi, dword ptr [ecx + eax - 0x1c]
0x14094:    89 7c 02 e4                        	mov dword ptr [edx + eax - 0x1c], edi
0x14098:    8b 7c 01 e8                        	mov edi, dword ptr [ecx + eax - 0x18]
0x1409c:    89 7c 02 e8                        	mov dword ptr [edx + eax - 0x18], edi
0x140a0:    8b 7c 01 ec                        	mov edi, dword ptr [ecx + eax - 0x14]
0x140a4:    89 7c 02 ec                        	mov dword ptr [edx + eax - 0x14], edi
0x140a8:    8b 7c 01 f0                        	mov edi, dword ptr [ecx + eax - 0x10]
0x140ac:    89 7c 02 f0                        	mov dword ptr [edx + eax - 0x10], edi
0x140b0:    8b 7c 01 f4                        	mov edi, dword ptr [ecx + eax - 0xc]
0x140b4:    89 7c 02 f4                        	mov dword ptr [edx + eax - 0xc], edi
0x140b8:    8b 7c 01 f8                        	mov edi, dword ptr [ecx + eax - 8]
0x140bc:    89 7c 02 f8                        	mov dword ptr [edx + eax - 8], edi
0x140c0:    8b 7c 01 fc                        	mov edi, dword ptr [ecx + eax - 4]
0x140c4:    89 7c 02 fc                        	mov dword ptr [edx + eax - 4], edi
0x140c8:    83 e8 28                           	sub eax, 0x28
0x140cb:    83 ee 01                           	sub esi, 1
0x140ce:    75 a8                              	jne 0x14078 <_ZNSt6vectorI8CAddressSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xd8>
0x140d0:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x140d4:    89 03                              	mov dword ptr [ebx], eax
0x140d6:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x140da:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x140dd:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x140e1:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x140e4:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x140e8:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x140eb:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x140ef:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x140f2:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x140f6:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x140f9:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x140fd:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x14100:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x14104:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x14107:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x1410b:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1410e:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x14112:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x14115:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x14119:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x14120:    0f 85 21 01 00 00                  	jne 0x14247 <function_14247>
0x14126:    83 c4 5c                           	add esp, 0x5c
0x14129:    5b                                 	pop ebx
0x1412a:    5e                                 	pop esi
0x1412b:    5f                                 	pop edi
0x1412c:    5d                                 	pop ebp
0x1412d:    c3                                 	ret 
; data inside code section at 0x1412e -- 0x14130
0x1412e:    66 90                                              |f.              |
0x14130:    8b 16                              	mov edx, dword ptr [esi]
0x14132:    29 d0                              	sub eax, edx
0x14134:    c1 f8 03                           	sar eax, 3
0x14137:    69 c8 cd cc cc cc                  	imul ecx, eax, 0xcccccccd
0x1413d:    85 c9                              	test ecx, ecx
0x1413f:    0f 84 b6 00 00 00                  	je 0x141fb <function_141fb>
0x14145:    8d 04 09                           	lea eax, [ecx + ecx]
0x14148:    39 c1                              	cmp ecx, eax
0x1414a:    0f 86 c7 00 00 00                  	jbe 0x14217 <function_14217>
0x14150:    89 d9                              	mov ecx, ebx
0x14152:    29 d1                              	sub ecx, edx
0x14154:    89 ca                              	mov edx, ecx
0x14156:    c1 fa 03                           	sar edx, 3
0x14159:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x1415f:    c7 44 24 1c f0 ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffff0
0x14167:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1416b:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1416f:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14172 -- 0x14173
0x14172:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x14173 -- 0x14174
; data inside code section at 0x14174 -- 0x1417d
0x14174:    ff ff ff 8b 54 24 18 89  c7                        |....T$...       |
; function: function_1417d at 0x1417d -- 0x141e5
0x1417d:    8d 04 92                           	lea eax, [edx + edx*4]
0x14180:    8d 04 c7                           	lea eax, [edi + eax*8]
0x14183:    85 c0                              	test eax, eax
0x14185:    74 3b                              	je 0x141c2 <function_1417d+0x45>
0x14187:    8b 55 00                           	mov edx, dword ptr [ebp]
0x1418a:    89 10                              	mov dword ptr [eax], edx
0x1418c:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x1418f:    89 50 04                           	mov dword ptr [eax + 4], edx
0x14192:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x14195:    89 50 08                           	mov dword ptr [eax + 8], edx
0x14198:    8b 55 0c                           	mov edx, dword ptr [ebp + 0xc]
0x1419b:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1419e:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x141a1:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x141a4:    8b 55 14                           	mov edx, dword ptr [ebp + 0x14]
0x141a7:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x141aa:    8b 55 18                           	mov edx, dword ptr [ebp + 0x18]
0x141ad:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x141b0:    8b 55 1c                           	mov edx, dword ptr [ebp + 0x1c]
0x141b3:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x141b6:    8b 55 20                           	mov edx, dword ptr [ebp + 0x20]
0x141b9:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x141bc:    8b 55 24                           	mov edx, dword ptr [ebp + 0x24]
0x141bf:    89 50 24                           	mov dword ptr [eax + 0x24], edx
0x141c2:    8b 06                              	mov eax, dword ptr [esi]
0x141c4:    89 da                              	mov edx, ebx
0x141c6:    89 f9                              	mov ecx, edi
0x141c8:    e8 e3 ff ff ff                     	call 0x141b0
0x141cd:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x141d0:    8d 48 28                           	lea ecx, [eax + 0x28]
0x141d3:    89 d8                              	mov eax, ebx
0x141d5:    e8 d6 ff ff ff                     	call 0x141b0
0x141da:    8b 16                              	mov edx, dword ptr [esi]
0x141dc:    85 d2                              	test edx, edx
0x141de:    89 c3                              	mov ebx, eax
0x141e0:    74 08                              	je 0x141ea <function_141ea>
0x141e2:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x141e5 -- 0x141e6
0x141e5:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x141e6 -- 0x141e7
; data inside code section at 0x141e7 -- 0x141ea
0x141e7:    ff ff ff                                           |...             |
; function: function_141ea at 0x141ea -- 0x141fb
0x141ea:    89 3e                              	mov dword ptr [esi], edi
0x141ec:    03 7c 24 1c                        	add edi, dword ptr [esp + 0x1c]
0x141f0:    89 5e 04                           	mov dword ptr [esi + 4], ebx
0x141f3:    89 7e 08                           	mov dword ptr [esi + 8], edi
0x141f6:    e9 1a ff ff ff                     	jmp 0x14115
; function: function_141fb at 0x141fb -- 0x14217
0x141fb:    89 d8                              	mov eax, ebx
0x141fd:    29 d0                              	sub eax, edx
0x141ff:    89 c2                              	mov edx, eax
0x14201:    c1 fa 03                           	sar edx, 3
0x14204:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x1420a:    c7 44 24 1c 28 00 00 00            	mov dword ptr [esp + 0x1c], 0x28
0x14212:    e9 50 ff ff ff                     	jmp 0x14167
; function: function_14217 at 0x14217 -- 0x14247
0x14217:    3d 66 66 66 06                     	cmp eax, 0x6666666
0x1421c:    0f 87 2e ff ff ff                  	ja 0x14150
0x14222:    6b c8 28                           	imul ecx, eax, 0x28
0x14225:    31 ff                              	xor edi, edi
0x14227:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1422b:    89 d9                              	mov ecx, ebx
0x1422d:    29 d1                              	sub ecx, edx
0x1422f:    89 ca                              	mov edx, ecx
0x14231:    c1 fa 03                           	sar edx, 3
0x14234:    69 d2 cd cc cc cc                  	imul edx, edx, 0xcccccccd
0x1423a:    85 c0                              	test eax, eax
0x1423c:    0f 84 3b ff ff ff                  	je 0x1417d <function_1417d>
0x14242:    e9 20 ff ff ff                     	jmp 0x14167
; function: function_14247 at 0x14247 -- 0x14248
; dynamically linked function: __stack_chk_fail at 0x14248 -- 0x14249
; data inside code section at 0x14249 -- 0x1424c
0x14249:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_
; function: _ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_ at 0x14250 -- 0x143f8
0x14250:    55                                 	push ebp
0x14251:    57                                 	push edi
0x14252:    56                                 	push esi
0x14253:    53                                 	push ebx
0x14254:    83 ec 5c                           	sub esp, 0x5c
0x14257:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x1425b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14261:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x14265:    31 c0                              	xor eax, eax
0x14267:    8b 5c 24 74                        	mov ebx, dword ptr [esp + 0x74]
0x1426b:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x1426f:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x14272:    3b 56 08                           	cmp edx, dword ptr [esi + 8]
0x14275:    0f 84 3d 01 00 00                  	je 0x143b8 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x168>
0x1427b:    85 d2                              	test edx, edx
0x1427d:    74 35                              	je 0x142b4 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x64>
0x1427f:    8b 42 dc                           	mov eax, dword ptr [edx - 0x24]
0x14282:    89 02                              	mov dword ptr [edx], eax
0x14284:    8b 42 e0                           	mov eax, dword ptr [edx - 0x20]
0x14287:    89 42 04                           	mov dword ptr [edx + 4], eax
0x1428a:    8b 42 e4                           	mov eax, dword ptr [edx - 0x1c]
0x1428d:    89 42 08                           	mov dword ptr [edx + 8], eax
0x14290:    8b 42 e8                           	mov eax, dword ptr [edx - 0x18]
0x14293:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x14296:    8b 42 ec                           	mov eax, dword ptr [edx - 0x14]
0x14299:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x1429c:    8b 42 f0                           	mov eax, dword ptr [edx - 0x10]
0x1429f:    89 42 14                           	mov dword ptr [edx + 0x14], eax
0x142a2:    8b 42 f4                           	mov eax, dword ptr [edx - 0xc]
0x142a5:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x142a8:    8b 42 f8                           	mov eax, dword ptr [edx - 8]
0x142ab:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x142ae:    8b 42 fc                           	mov eax, dword ptr [edx - 4]
0x142b1:    89 42 20                           	mov dword ptr [edx + 0x20], eax
0x142b4:    8d 42 24                           	lea eax, [edx + 0x24]
0x142b7:    89 46 04                           	mov dword ptr [esi + 4], eax
0x142ba:    8b 45 00                           	mov eax, dword ptr [ebp]
0x142bd:    8d 4a dc                           	lea ecx, [edx - 0x24]
0x142c0:    89 ce                              	mov esi, ecx
0x142c2:    29 de                              	sub esi, ebx
0x142c4:    c1 fe 02                           	sar esi, 2
0x142c7:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x142cb:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x142ce:    69 f6 39 8e e3 38                  	imul esi, esi, 0x38e38e39
0x142d4:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x142d8:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x142db:    85 f6                              	test esi, esi
0x142dd:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x142e1:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x142e4:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x142e8:    8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0x142eb:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x142ef:    8b 45 14                           	mov eax, dword ptr [ebp + 0x14]
0x142f2:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x142f6:    8b 45 18                           	mov eax, dword ptr [ebp + 0x18]
0x142f9:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x142fd:    8b 45 1c                           	mov eax, dword ptr [ebp + 0x1c]
0x14300:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x14304:    8b 45 20                           	mov eax, dword ptr [ebp + 0x20]
0x14307:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1430b:    7e 53                              	jle 0x14360 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0x110>
0x1430d:    31 c0                              	xor eax, eax
0x1430f:    90                                 	nop 
0x14310:    8b 7c 01 dc                        	mov edi, dword ptr [ecx + eax - 0x24]
0x14314:    89 7c 02 dc                        	mov dword ptr [edx + eax - 0x24], edi
0x14318:    8b 7c 01 e0                        	mov edi, dword ptr [ecx + eax - 0x20]
0x1431c:    89 7c 02 e0                        	mov dword ptr [edx + eax - 0x20], edi
0x14320:    8b 7c 01 e4                        	mov edi, dword ptr [ecx + eax - 0x1c]
0x14324:    89 7c 02 e4                        	mov dword ptr [edx + eax - 0x1c], edi
0x14328:    8b 7c 01 e8                        	mov edi, dword ptr [ecx + eax - 0x18]
0x1432c:    89 7c 02 e8                        	mov dword ptr [edx + eax - 0x18], edi
0x14330:    8b 7c 01 ec                        	mov edi, dword ptr [ecx + eax - 0x14]
0x14334:    89 7c 02 ec                        	mov dword ptr [edx + eax - 0x14], edi
0x14338:    8b 7c 01 f0                        	mov edi, dword ptr [ecx + eax - 0x10]
0x1433c:    89 7c 02 f0                        	mov dword ptr [edx + eax - 0x10], edi
0x14340:    8b 7c 01 f4                        	mov edi, dword ptr [ecx + eax - 0xc]
0x14344:    89 7c 02 f4                        	mov dword ptr [edx + eax - 0xc], edi
0x14348:    8b 7c 01 f8                        	mov edi, dword ptr [ecx + eax - 8]
0x1434c:    89 7c 02 f8                        	mov dword ptr [edx + eax - 8], edi
0x14350:    8b 7c 01 fc                        	mov edi, dword ptr [ecx + eax - 4]
0x14354:    89 7c 02 fc                        	mov dword ptr [edx + eax - 4], edi
0x14358:    83 e8 24                           	sub eax, 0x24
0x1435b:    83 ee 01                           	sub esi, 1
0x1435e:    75 b0                              	jne 0x14310 <_ZNSt6vectorI4CInvSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_+0xc0>
0x14360:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x14364:    89 03                              	mov dword ptr [ebx], eax
0x14366:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1436a:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1436d:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x14371:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x14374:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x14378:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1437b:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x1437f:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x14382:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x14386:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x14389:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1438d:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x14390:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x14394:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x14397:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x1439b:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1439e:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x143a2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x143a9:    0f 85 14 01 00 00                  	jne 0x144c3 <function_144c3>
0x143af:    83 c4 5c                           	add esp, 0x5c
0x143b2:    5b                                 	pop ebx
0x143b3:    5e                                 	pop esi
0x143b4:    5f                                 	pop edi
0x143b5:    5d                                 	pop ebp
0x143b6:    c3                                 	ret 
; data inside code section at 0x143b7 -- 0x143b8
0x143b7:    90                                                 |.               |
0x143b8:    8b 0e                              	mov ecx, dword ptr [esi]
0x143ba:    29 ca                              	sub edx, ecx
0x143bc:    c1 fa 02                           	sar edx, 2
0x143bf:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x143c5:    85 d2                              	test edx, edx
0x143c7:    0f 84 ae 00 00 00                  	je 0x1447b <function_1447b>
0x143cd:    8d 04 12                           	lea eax, [edx + edx]
0x143d0:    39 c2                              	cmp edx, eax
0x143d2:    0f 86 bd 00 00 00                  	jbe 0x14495 <function_14495>
0x143d8:    89 da                              	mov edx, ebx
0x143da:    29 ca                              	sub edx, ecx
0x143dc:    c1 fa 02                           	sar edx, 2
0x143df:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x143e5:    c7 44 24 1c fc ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffffc
0x143ed:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x143f1:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x143f5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x143f8 -- 0x143f9
0x143f8:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x143f9 -- 0x143fa
; data inside code section at 0x143fa -- 0x14403
0x143fa:    ff ff ff 8b 54 24 18 89  c7                        |....T$...       |
; function: function_14403 at 0x14403 -- 0x14465
0x14403:    8d 04 d2                           	lea eax, [edx + edx*8]
0x14406:    8d 04 87                           	lea eax, [edi + eax*4]
0x14409:    85 c0                              	test eax, eax
0x1440b:    74 35                              	je 0x14442 <function_14403+0x3f>
0x1440d:    8b 55 00                           	mov edx, dword ptr [ebp]
0x14410:    89 10                              	mov dword ptr [eax], edx
0x14412:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x14415:    89 50 04                           	mov dword ptr [eax + 4], edx
0x14418:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x1441b:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1441e:    8b 55 0c                           	mov edx, dword ptr [ebp + 0xc]
0x14421:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x14424:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x14427:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x1442a:    8b 55 14                           	mov edx, dword ptr [ebp + 0x14]
0x1442d:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x14430:    8b 55 18                           	mov edx, dword ptr [ebp + 0x18]
0x14433:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x14436:    8b 55 1c                           	mov edx, dword ptr [ebp + 0x1c]
0x14439:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1443c:    8b 55 20                           	mov edx, dword ptr [ebp + 0x20]
0x1443f:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x14442:    8b 06                              	mov eax, dword ptr [esi]
0x14444:    89 da                              	mov edx, ebx
0x14446:    89 f9                              	mov ecx, edi
0x14448:    e8 43 01 00 00                     	call 0x14590 <function_14590>
0x1444d:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x14450:    8d 48 24                           	lea ecx, [eax + 0x24]
0x14453:    89 d8                              	mov eax, ebx
0x14455:    e8 36 01 00 00                     	call 0x14590 <function_14590>
0x1445a:    8b 16                              	mov edx, dword ptr [esi]
0x1445c:    85 d2                              	test edx, edx
0x1445e:    89 c3                              	mov ebx, eax
0x14460:    74 08                              	je 0x1446a <function_1446a>
0x14462:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14465 -- 0x14466
0x14465:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14466 -- 0x14467
; data inside code section at 0x14467 -- 0x1446a
0x14467:    ff ff ff                                           |...             |
; function: function_1446a at 0x1446a -- 0x1447b
0x1446a:    89 3e                              	mov dword ptr [esi], edi
0x1446c:    03 7c 24 1c                        	add edi, dword ptr [esp + 0x1c]
0x14470:    89 5e 04                           	mov dword ptr [esi + 4], ebx
0x14473:    89 7e 08                           	mov dword ptr [esi + 8], edi
0x14476:    e9 23 ff ff ff                     	jmp 0x1439e
; function: function_1447b at 0x1447b -- 0x14495
0x1447b:    89 da                              	mov edx, ebx
0x1447d:    29 ca                              	sub edx, ecx
0x1447f:    c1 fa 02                           	sar edx, 2
0x14482:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x14488:    c7 44 24 1c 24 00 00 00            	mov dword ptr [esp + 0x1c], 0x24
0x14490:    e9 58 ff ff ff                     	jmp 0x143ed
; function: function_14495 at 0x14495 -- 0x144c3
0x14495:    3d c7 71 1c 07                     	cmp eax, 0x71c71c7
0x1449a:    0f 87 38 ff ff ff                  	ja 0x143d8
0x144a0:    6b d0 24                           	imul edx, eax, 0x24
0x144a3:    31 ff                              	xor edi, edi
0x144a5:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x144a9:    89 da                              	mov edx, ebx
0x144ab:    29 ca                              	sub edx, ecx
0x144ad:    c1 fa 02                           	sar edx, 2
0x144b0:    69 d2 39 8e e3 38                  	imul edx, edx, 0x38e38e39
0x144b6:    85 c0                              	test eax, eax
0x144b8:    0f 84 45 ff ff ff                  	je 0x14403 <function_14403>
0x144be:    e9 2a ff ff ff                     	jmp 0x143ed
; function: function_144c3 at 0x144c3 -- 0x144c4
; dynamically linked function: __stack_chk_fail at 0x144c4 -- 0x144c5
; data inside code section at 0x144c5 -- 0x144c8
0x144c5:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheISsNS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev at 0x144d0 -- 0x1452d
0x144d0:    83 ec 2c                           	sub esp, 0x2c
0x144d3:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x144d7:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x144db:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x144e1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x144e5:    31 c0                              	xor eax, eax
0x144e7:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x144eb:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x144ef:    8b 86 84 00 00 00                  	mov eax, dword ptr [esi + 0x84]
0x144f5:    85 c0                              	test eax, eax
0x144f7:    74 39                              	je 0x14532 <function_14532>
0x144f9:    8b 96 80 00 00 00                  	mov edx, dword ptr [esi + 0x80]
0x144ff:    83 fa 09                           	cmp edx, 9
0x14502:    0f 86 a1 00 00 00                  	jbe 0x145a9 <function_145a9>
0x14508:    8d 4e 08                           	lea ecx, [esi + 8]
0x1450b:    39 c8                              	cmp eax, ecx
0x1450d:    0f 84 8d 00 00 00                  	je 0x145a0
0x14513:    8b 8e 88 00 00 00                  	mov ecx, dword ptr [esi + 0x88]
0x14519:    39 ca                              	cmp edx, ecx
0x1451b:    0f 82 88 00 00 00                  	jb 0x145a9 <function_145a9>
0x14521:    85 c9                              	test ecx, ecx
0x14523:    75 43                              	jne 0x14568 <function_14568>
0x14525:    83 fa 0a                           	cmp edx, 0xa
0x14528:    76 08                              	jbe 0x14532 <function_14532>
0x1452a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1452d -- 0x1452e
0x1452d:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1452e -- 0x1452f
; data inside code section at 0x1452f -- 0x14532
0x1452f:    ff ff ff                                           |...             |
; function: function_14532 at 0x14532 -- 0x1453d
0x14532:    80 3e 00                           	cmp byte ptr [esi], 0
0x14535:    74 0e                              	je 0x14545 <function_14545>
0x14537:    8d 46 04                           	lea eax, [esi + 4]
0x1453a:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1453d -- 0x1453e
0x1453d:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1453e -- 0x1453f
; data inside code section at 0x1453f -- 0x14545
0x1453f:    ff ff ff c6 06 00                                  |......          |
; function: function_14545 at 0x14545 -- 0x14562
0x14545:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14549:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x14550:    75 5c                              	jne 0x145ae <function_145ae>
0x14552:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x14556:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x1455a:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1455e:    83 c4 2c                           	add esp, 0x2c
0x14561:    c3                                 	ret 
; data inside code section at 0x14562 -- 0x14568
0x14562:    8d b6 00 00 00 00                                  |......          |
; function: function_14568 at 0x14568 -- 0x1458f
0x14568:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x1456c:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x1456f:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x14572:    89 df                              	mov edi, ebx
0x14574:    c1 e1 02                           	shl ecx, 2
0x14577:    29 cf                              	sub edi, ecx
0x14579:    39 fb                              	cmp ebx, edi
0x1457b:    76 a8                              	jbe 0x14525
0x1457d:    8d 76 00                           	lea esi, [esi]
0x14580:    89 1c 24                           	mov dword ptr [esp], ebx
0x14583:    e8 b8 26 01 00                     	call 0x26c40 <function_26c40>
0x14588:    83 eb 0c                           	sub ebx, 0xc
0x1458b:    39 df                              	cmp edi, ebx
0x1458d:    72 f1                              	jb 0x14580
; data inside code section at 0x1458f -- 0x14590
0x1458f:    8b                                                 |.               |
; function: function_14590 at 0x14590 -- 0x145a7
0x14590:    96                                 	xchg eax, esi
0x14591:    80 00 00                           	add byte ptr [eax], 0
0x14594:    00 8b 86 84 00 00                  	add byte ptr [ebx + 0x8486], cl
0x1459a:    00 eb                              	add bl, ch
0x1459c:    88 8d 76 00 83 fa                  	mov byte ptr [ebp - 0x57cff8a], cl
0x145a2:    0a 0f                              	or cl, byte ptr [edi]
0x145a4:    84 6a ff                           	test byte ptr [edx - 1], ch
; data inside code section at 0x145a7 -- 0x145a9
0x145a7:    ff ff                                              |..              |
; function: function_145a9 at 0x145a9 -- 0x145ae
0x145a9:    e8 dc e4 00 00                     	call 0x22a8a
; function: function_145ae at 0x145ae -- 0x145b0
0x145ae:    66 90                              	nop 
; data inside code section at 0x145b0 -- 0x145b1
0x145b0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x145b1 -- 0x145b2
; data inside code section at 0x145b2 -- 0x145b6
0x145b2:    ff ff ff 89                                        |....            |
; function: function_145b6 at 0x145b6 -- 0x145b7
0x145b6:    c3                                 	ret 
; data inside code section at 0x145b7 -- 0x145c3
0x145b7:    89 34 24 e8 51 2c 01 00  89 1c 24 e8               |.4$.Q,....$.    |
; dynamically linked function: _Unwind_Resume at 0x145c3 -- 0x145c4
; data inside code section at 0x145c4 -- 0x145c7
0x145c4:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_
; function: _ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_ at 0x145d0 -- 0x14660
0x145d0:    83 ec 4c                           	sub esp, 0x4c
0x145d3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x145d7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x145db:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x145e1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x145e5:    31 c0                              	xor eax, eax
0x145e7:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x145eb:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x145ef:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x145f3:    8b 7c 24 58                        	mov edi, dword ptr [esp + 0x58]
0x145f7:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x145fa:    3b 43 08                           	cmp eax, dword ptr [ebx + 8]
0x145fd:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x14601:    74 65                              	je 0x14668 <function_14668>
0x14603:    31 d2                              	xor edx, edx
0x14605:    85 c0                              	test eax, eax
0x14607:    74 08                              	je 0x14611 <_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_+0x41>
0x14609:    8b 50 fc                           	mov edx, dword ptr [eax - 4]
0x1460c:    89 10                              	mov dword ptr [eax], edx
0x1460e:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x14611:    8d 42 04                           	lea eax, [edx + 4]
0x14614:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x14617:    8d 42 fc                           	lea eax, [edx - 4]
0x1461a:    8b 1f                              	mov ebx, dword ptr [edi]
0x1461c:    29 f0                              	sub eax, esi
0x1461e:    c1 f8 02                           	sar eax, 2
0x14621:    85 c0                              	test eax, eax
0x14623:    75 2b                              	jne 0x14650 <_ZNSt6vectorIP5CNodeSaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_+0x80>
0x14625:    89 1e                              	mov dword ptr [esi], ebx
0x14627:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1462b:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x14632:    0f 85 0e 01 00 00                  	jne 0x14746 <function_14746>
0x14638:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1463c:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x14640:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x14644:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x14648:    83 c4 4c                           	add esp, 0x4c
0x1464b:    c3                                 	ret 
; data inside code section at 0x1464c -- 0x14650
0x1464c:    8d 74 26 00                                        |.t&.            |
0x14650:    c1 e0 02                           	shl eax, 2
0x14653:    29 c2                              	sub edx, eax
0x14655:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14659:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1465d:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14660 -- 0x14661
0x14660:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14661 -- 0x14662
; data inside code section at 0x14662 -- 0x14665
0x14662:    ff ff ff                                           |...             |
; function: function_14665 at 0x14665 -- 0x14667
0x14665:    eb be                              	jmp 0x14625
; data inside code section at 0x14667 -- 0x14668
0x14667:    90                                                 |.               |
; function: function_14668 at 0x14668 -- 0x1469e
0x14668:    8b 13                              	mov edx, dword ptr [ebx]
0x1466a:    29 d0                              	sub eax, edx
0x1466c:    c1 f8 02                           	sar eax, 2
0x1466f:    85 c0                              	test eax, eax
0x14671:    0f 84 b9 00 00 00                  	je 0x14730 <function_14730>
0x14677:    8d 0c 00                           	lea ecx, [eax + eax]
0x1467a:    39 c8                              	cmp eax, ecx
0x1467c:    0f 86 c9 00 00 00                  	jbe 0x1474b <function_1474b>
0x14682:    89 f0                              	mov eax, esi
0x14684:    29 d0                              	sub eax, edx
0x14686:    89 c2                              	mov edx, eax
0x14688:    c1 fa 02                           	sar edx, 2
0x1468b:    c7 44 24 1c fc ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffffc
0x14693:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14697:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1469b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1469e -- 0x1469f
0x1469e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1469f -- 0x146a0
; data inside code section at 0x146a0 -- 0x146a9
0x146a0:    ff ff ff 8b 54 24 18 89  c5                        |....T$...       |
; function: function_146a9 at 0x146a9 -- 0x146d6
0x146a9:    8d 44 95 00                        	lea eax, [ebp + edx*4]
0x146ad:    85 c0                              	test eax, eax
0x146af:    74 04                              	je 0x146b5 <function_146a9+0xc>
0x146b1:    8b 17                              	mov edx, dword ptr [edi]
0x146b3:    89 10                              	mov dword ptr [eax], edx
0x146b5:    8b 13                              	mov edx, dword ptr [ebx]
0x146b7:    89 f0                              	mov eax, esi
0x146b9:    31 ff                              	xor edi, edi
0x146bb:    29 d0                              	sub eax, edx
0x146bd:    c1 f8 02                           	sar eax, 2
0x146c0:    85 c0                              	test eax, eax
0x146c2:    74 17                              	je 0x146db <function_146db>
0x146c4:    8d 3c 85 00 00 00 00               	lea edi, [eax*4]
0x146cb:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x146cf:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x146d3:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x146d6 -- 0x146d7
0x146d6:    e8                                                 |.               |
; dynamically linked function: memmove at 0x146d7 -- 0x146d8
; data inside code section at 0x146d8 -- 0x146db
0x146d8:    ff ff ff                                           |...             |
; function: function_146db at 0x146db -- 0x14703
0x146db:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x146de:    8d 54 3d 04                        	lea edx, [ebp + edi + 4]
0x146e2:    31 ff                              	xor edi, edi
0x146e4:    29 f0                              	sub eax, esi
0x146e6:    c1 f8 02                           	sar eax, 2
0x146e9:    85 c0                              	test eax, eax
0x146eb:    74 1f                              	je 0x1470c <function_1470c>
0x146ed:    8d 3c 85 00 00 00 00               	lea edi, [eax*4]
0x146f4:    89 14 24                           	mov dword ptr [esp], edx
0x146f7:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x146fb:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x146ff:    89 74 24 04                        	mov dword ptr [esp + 4], esi
; data inside code section at 0x14703 -- 0x14704
0x14703:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14704 -- 0x14705
; data inside code section at 0x14705 -- 0x1470c
0x14705:    ff ff ff 8b 54 24 18                               |....T$.         |
; function: function_1470c at 0x1470c -- 0x14717
0x1470c:    8b 03                              	mov eax, dword ptr [ebx]
0x1470e:    01 d7                              	add edi, edx
0x14710:    85 c0                              	test eax, eax
0x14712:    74 08                              	je 0x1471c <function_1471c>
0x14714:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14717 -- 0x14718
0x14717:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14718 -- 0x14719
; data inside code section at 0x14719 -- 0x1471c
0x14719:    ff ff ff                                           |...             |
; function: function_1471c at 0x1471c -- 0x1472d
0x1471c:    89 2b                              	mov dword ptr [ebx], ebp
0x1471e:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x14722:    89 7b 04                           	mov dword ptr [ebx + 4], edi
0x14725:    89 6b 08                           	mov dword ptr [ebx + 8], ebp
0x14728:    e9 fa fe ff ff                     	jmp 0x14627
; data inside code section at 0x1472d -- 0x14730
0x1472d:    8d 76 00                                           |.v.             |
; function: function_14730 at 0x14730 -- 0x14746
0x14730:    89 f0                              	mov eax, esi
0x14732:    29 d0                              	sub eax, edx
0x14734:    89 c2                              	mov edx, eax
0x14736:    c1 fa 02                           	sar edx, 2
0x14739:    c7 44 24 1c 04 00 00 00            	mov dword ptr [esp + 0x1c], 4
0x14741:    e9 4d ff ff ff                     	jmp 0x14693
; function: function_14746 at 0x14746 -- 0x14747
; dynamically linked function: __stack_chk_fail at 0x14747 -- 0x14748
; data inside code section at 0x14748 -- 0x1474b
0x14748:    ff ff ff                                           |...             |
; function: function_1474b at 0x1474b -- 0x14776
0x1474b:    81 f9 ff ff ff 3f                  	cmp ecx, 0x3fffffff
0x14751:    0f 87 2b ff ff ff                  	ja 0x14682
0x14757:    c1 e0 03                           	shl eax, 3
0x1475a:    31 ed                              	xor ebp, ebp
0x1475c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x14760:    89 f0                              	mov eax, esi
0x14762:    29 d0                              	sub eax, edx
0x14764:    89 c2                              	mov edx, eax
0x14766:    c1 fa 02                           	sar edx, 2
0x14769:    85 c9                              	test ecx, ecx
0x1476b:    0f 84 38 ff ff ff                  	je 0x146a9 <function_146a9>
0x14771:    e9 1d ff ff ff                     	jmp 0x14693
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerEED1Ev at 0x14780 -- 0x147d2
0x14780:    83 ec 2c                           	sub esp, 0x2c
0x14783:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x14787:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1478b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14791:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x14795:    31 c0                              	xor eax, eax
0x14797:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x1479b:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x1479f:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x147a5:    85 c0                              	test eax, eax
0x147a7:    74 2e                              	je 0x147d7 <function_147d7>
0x147a9:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x147ac:    83 fa 09                           	cmp edx, 9
0x147af:    0f 86 8c 00 00 00                  	jbe 0x14841 <function_14841>
0x147b5:    8d 4e 04                           	lea ecx, [esi + 4]
0x147b8:    39 c8                              	cmp eax, ecx
0x147ba:    74 7c                              	je 0x14838 <function_14838>
0x147bc:    8b 8e 84 00 00 00                  	mov ecx, dword ptr [esi + 0x84]
0x147c2:    39 ca                              	cmp edx, ecx
0x147c4:    72 7b                              	jb 0x14841 <function_14841>
0x147c6:    85 c9                              	test ecx, ecx
0x147c8:    75 36                              	jne 0x14800 <function_14800>
0x147ca:    83 fa 0a                           	cmp edx, 0xa
0x147cd:    76 08                              	jbe 0x147d7 <function_147d7>
0x147cf:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x147d2 -- 0x147d3
0x147d2:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x147d3 -- 0x147d4
; data inside code section at 0x147d4 -- 0x147d7
0x147d4:    ff ff ff                                           |...             |
; function: function_147d7 at 0x147d7 -- 0x147fc
0x147d7:    80 3e 00                           	cmp byte ptr [esi], 0
0x147da:    74 03                              	je 0x147df <function_147d7+0x8>
0x147dc:    c6 06 00                           	mov byte ptr [esi], 0
0x147df:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x147e3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x147ea:    75 5a                              	jne 0x14846 <function_14846>
0x147ec:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x147f0:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x147f4:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x147f8:    83 c4 2c                           	add esp, 0x2c
0x147fb:    c3                                 	ret 
; data inside code section at 0x147fc -- 0x14800
0x147fc:    8d 74 26 00                                        |.t&.            |
; function: function_14800 at 0x14800 -- 0x14832
0x14800:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x14804:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x14807:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x1480a:    89 df                              	mov edi, ebx
0x1480c:    c1 e1 02                           	shl ecx, 2
0x1480f:    29 cf                              	sub edi, ecx
0x14811:    39 fb                              	cmp ebx, edi
0x14813:    76 b5                              	jbe 0x147ca
0x14815:    8d 76 00                           	lea esi, [esi]
0x14818:    89 1c 24                           	mov dword ptr [esp], ebx
0x1481b:    e8 d0 26 01 00                     	call 0x26ef0 <function_26ef0>
0x14820:    83 eb 0c                           	sub ebx, 0xc
0x14823:    39 df                              	cmp edi, ebx
0x14825:    72 f1                              	jb 0x14818 <function_14800+0x18>
0x14827:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x1482a:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x14830:    eb 98                              	jmp 0x147ca
; data inside code section at 0x14832 -- 0x14838
0x14832:    8d b6 00 00 00 00                                  |......          |
; function: function_14838 at 0x14838 -- 0x14841
0x14838:    83 fa 0a                           	cmp edx, 0xa
0x1483b:    0f 84 7b ff ff ff                  	je 0x147bc
; function: function_14841 at 0x14841 -- 0x14846
0x14841:    e8 f4 e4 00 00                     	call 0x22d3a <function_22d3a>
; function: function_14846 at 0x14846 -- 0x14847
; dynamically linked function: __stack_chk_fail at 0x14847 -- 0x14848
; data inside code section at 0x14848 -- 0x14859
0x14848:    ff ff ff 80 3e 00 66 90  74 03 c6 06 00 89 04 24   |....>.f.t......$|
0x14858:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x14859 -- 0x1485a
; data inside code section at 0x1485a -- 0x1485d
0x1485a:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E
; function: _ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E at 0x14860 -- 0x1489e
0x14860:    57                                 	push edi
0x14861:    56                                 	push esi
0x14862:    53                                 	push ebx
0x14863:    83 ec 20                           	sub esp, 0x20
0x14866:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1486a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14870:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x14874:    31 c0                              	xor eax, eax
0x14876:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1487a:    85 db                              	test ebx, ebx
0x1487c:    75 04                              	jne 0x14882 <_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x22>
0x1487e:    eb 2f                              	jmp 0x148af <function_148af>
0x14880:    89 f3                              	mov ebx, esi
0x14882:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x14885:    89 3c 24                           	mov dword ptr [esp], edi
0x14888:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1488c:    e8 2f 48 01 00                     	call 0x290c0 <function_290c0>
0x14891:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x14894:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x14897:    85 c0                              	test eax, eax
0x14899:    74 08                              	je 0x148a3 <function_148a3>
0x1489b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1489e -- 0x1489f
0x1489e:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1489f -- 0x148a0
; data inside code section at 0x148a0 -- 0x148a3
0x148a0:    ff ff ff                                           |...             |
; function: function_148a3 at 0x148a3 -- 0x148a6
0x148a3:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x148a6 -- 0x148a7
0x148a6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x148a7 -- 0x148a8
; data inside code section at 0x148a8 -- 0x148af
0x148a8:    ff ff ff 85 f6 75 d1                               |.....u.         |
; function: function_148af at 0x148af -- 0x148c3
0x148af:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x148b3:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x148ba:    75 07                              	jne 0x148c3 <function_148af+0x13>
0x148bc:    83 c4 20                           	add esp, 0x20
0x148bf:    5b                                 	pop ebx
0x148c0:    5e                                 	pop esi
0x148c1:    5f                                 	pop edi
0x148c2:    c3                                 	ret 
; data inside code section at 0x148c3 -- 0x148c4
0x148c3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x148c4 -- 0x148c5
; data inside code section at 0x148c5 -- 0x148c8
0x148c5:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerEED1Ev at 0x148d0 -- 0x14922
0x148d0:    83 ec 2c                           	sub esp, 0x2c
0x148d3:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x148d7:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x148db:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x148e1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x148e5:    31 c0                              	xor eax, eax
0x148e7:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x148eb:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x148ef:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x148f5:    85 c0                              	test eax, eax
0x148f7:    74 2e                              	je 0x14927 <function_14927>
0x148f9:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x148fc:    83 fa 09                           	cmp edx, 9
0x148ff:    0f 86 8c 00 00 00                  	jbe 0x14991 <function_14991>
0x14905:    8d 4e 04                           	lea ecx, [esi + 4]
0x14908:    39 c8                              	cmp eax, ecx
0x1490a:    74 7c                              	je 0x14988 <function_14988>
0x1490c:    8b 8e 84 00 00 00                  	mov ecx, dword ptr [esi + 0x84]
0x14912:    39 ca                              	cmp edx, ecx
0x14914:    72 7b                              	jb 0x14991 <function_14991>
0x14916:    85 c9                              	test ecx, ecx
0x14918:    75 36                              	jne 0x14950 <function_14950>
0x1491a:    83 fa 0a                           	cmp edx, 0xa
0x1491d:    76 08                              	jbe 0x14927 <function_14927>
0x1491f:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14922 -- 0x14923
0x14922:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14923 -- 0x14924
; data inside code section at 0x14924 -- 0x14927
0x14924:    ff ff ff                                           |...             |
; function: function_14927 at 0x14927 -- 0x1494c
0x14927:    80 3e 00                           	cmp byte ptr [esi], 0
0x1492a:    74 03                              	je 0x1492f <function_14927+0x8>
0x1492c:    c6 06 00                           	mov byte ptr [esi], 0
0x1492f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14933:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1493a:    75 5a                              	jne 0x14996 <function_14996>
0x1493c:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x14940:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x14944:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x14948:    83 c4 2c                           	add esp, 0x2c
0x1494b:    c3                                 	ret 
; data inside code section at 0x1494c -- 0x14950
0x1494c:    8d 74 26 00                                        |.t&.            |
; function: function_14950 at 0x14950 -- 0x14982
0x14950:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x14954:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x14957:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x1495a:    89 df                              	mov edi, ebx
0x1495c:    c1 e1 02                           	shl ecx, 2
0x1495f:    29 cf                              	sub edi, ecx
0x14961:    39 fb                              	cmp ebx, edi
0x14963:    76 b5                              	jbe 0x1491a
0x14965:    8d 76 00                           	lea esi, [esi]
0x14968:    89 1c 24                           	mov dword ptr [esp], ebx
0x1496b:    e8 d0 26 01 00                     	call 0x27040 <function_27040>
0x14970:    83 eb 0c                           	sub ebx, 0xc
0x14973:    39 df                              	cmp edi, ebx
0x14975:    72 f1                              	jb 0x14968 <function_14950+0x18>
0x14977:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x1497a:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x14980:    eb 98                              	jmp 0x1491a
; data inside code section at 0x14982 -- 0x14988
0x14982:    8d b6 00 00 00 00                                  |......          |
; function: function_14988 at 0x14988 -- 0x14991
0x14988:    83 fa 0a                           	cmp edx, 0xa
0x1498b:    0f 84 7b ff ff ff                  	je 0x1490c
; function: function_14991 at 0x14991 -- 0x14996
0x14991:    e8 f4 e4 00 00                     	call 0x22e8a <function_22e8a>
; function: function_14996 at 0x14996 -- 0x14997
; dynamically linked function: __stack_chk_fail at 0x14997 -- 0x14998
; data inside code section at 0x14998 -- 0x149a9
0x14998:    ff ff ff 80 3e 00 66 90  74 03 c6 06 00 89 04 24   |....>.f.t......$|
0x149a8:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x149a9 -- 0x149aa
; data inside code section at 0x149aa -- 0x149ad
0x149aa:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerEED2Ev
; function: _ZN5boost8signals26detail24slot_call_iterator_cacheIbNS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerEED1Ev at 0x149b0 -- 0x14a02
0x149b0:    83 ec 2c                           	sub esp, 0x2c
0x149b3:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x149b7:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x149bb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x149c1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x149c5:    31 c0                              	xor eax, eax
0x149c7:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x149cb:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x149cf:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x149d5:    85 c0                              	test eax, eax
0x149d7:    74 2e                              	je 0x14a07 <function_14a07>
0x149d9:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x149dc:    83 fa 09                           	cmp edx, 9
0x149df:    0f 86 8c 00 00 00                  	jbe 0x14a71 <function_14a71>
0x149e5:    8d 4e 04                           	lea ecx, [esi + 4]
0x149e8:    39 c8                              	cmp eax, ecx
0x149ea:    74 7c                              	je 0x14a68 <function_14a68>
0x149ec:    8b 8e 84 00 00 00                  	mov ecx, dword ptr [esi + 0x84]
0x149f2:    39 ca                              	cmp edx, ecx
0x149f4:    72 7b                              	jb 0x14a71 <function_14a71>
0x149f6:    85 c9                              	test ecx, ecx
0x149f8:    75 36                              	jne 0x14a30 <function_14a30>
0x149fa:    83 fa 0a                           	cmp edx, 0xa
0x149fd:    76 08                              	jbe 0x14a07 <function_14a07>
0x149ff:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14a02 -- 0x14a03
0x14a02:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14a03 -- 0x14a04
; data inside code section at 0x14a04 -- 0x14a07
0x14a04:    ff ff ff                                           |...             |
; function: function_14a07 at 0x14a07 -- 0x14a2c
0x14a07:    80 3e 00                           	cmp byte ptr [esi], 0
0x14a0a:    74 03                              	je 0x14a0f <function_14a07+0x8>
0x14a0c:    c6 06 00                           	mov byte ptr [esi], 0
0x14a0f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14a13:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x14a1a:    75 5a                              	jne 0x14a76 <function_14a76>
0x14a1c:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x14a20:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x14a24:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x14a28:    83 c4 2c                           	add esp, 0x2c
0x14a2b:    c3                                 	ret 
; data inside code section at 0x14a2c -- 0x14a30
0x14a2c:    8d 74 26 00                                        |.t&.            |
; function: function_14a30 at 0x14a30 -- 0x14a62
0x14a30:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x14a34:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x14a37:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x14a3a:    89 df                              	mov edi, ebx
0x14a3c:    c1 e1 02                           	shl ecx, 2
0x14a3f:    29 cf                              	sub edi, ecx
0x14a41:    39 fb                              	cmp ebx, edi
0x14a43:    76 b5                              	jbe 0x149fa
0x14a45:    8d 76 00                           	lea esi, [esi]
0x14a48:    89 1c 24                           	mov dword ptr [esp], ebx
0x14a4b:    e8 d0 26 01 00                     	call 0x27120 <function_27120>
0x14a50:    83 eb 0c                           	sub ebx, 0xc
0x14a53:    39 df                              	cmp edi, ebx
0x14a55:    72 f1                              	jb 0x14a48 <function_14a30+0x18>
0x14a57:    8b 56 7c                           	mov edx, dword ptr [esi + 0x7c]
0x14a5a:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x14a60:    eb 98                              	jmp 0x149fa
; data inside code section at 0x14a62 -- 0x14a68
0x14a62:    8d b6 00 00 00 00                                  |......          |
; function: function_14a68 at 0x14a68 -- 0x14a71
0x14a68:    83 fa 0a                           	cmp edx, 0xa
0x14a6b:    0f 84 7b ff ff ff                  	je 0x149ec
; function: function_14a71 at 0x14a71 -- 0x14a76
0x14a71:    e8 f4 e4 00 00                     	call 0x22f6a <function_22f6a>
; function: function_14a76 at 0x14a76 -- 0x14a77
; dynamically linked function: __stack_chk_fail at 0x14a77 -- 0x14a78
; data inside code section at 0x14a78 -- 0x14a89
0x14a78:    ff ff ff 80 3e 00 66 90  74 03 c6 06 00 89 04 24   |....>.f.t......$|
0x14a88:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x14a89 -- 0x14a8a
; data inside code section at 0x14a8a -- 0x14a8d
0x14a8a:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj
; function: _ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj at 0x14a90 -- 0x14b18
0x14a90:    83 ec 4c                           	sub esp, 0x4c
0x14a93:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x14a97:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x14a9b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14aa1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x14aa5:    31 c0                              	xor eax, eax
0x14aa7:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x14aab:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x14aaf:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x14ab3:    8b 7c 24 58                        	mov edi, dword ptr [esp + 0x58]
0x14ab7:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x14aba:    3b 53 08                           	cmp edx, dword ptr [ebx + 8]
0x14abd:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x14ac1:    74 5d                              	je 0x14b20 <function_14b20>
0x14ac3:    85 d2                              	test edx, edx
0x14ac5:    74 05                              	je 0x14acc <_ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj+0x3c>
0x14ac7:    8b 42 fc                           	mov eax, dword ptr [edx - 4]
0x14aca:    89 02                              	mov dword ptr [edx], eax
0x14acc:    8d 42 04                           	lea eax, [edx + 4]
0x14acf:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x14ad2:    8d 42 fc                           	lea eax, [edx - 4]
0x14ad5:    8b 1f                              	mov ebx, dword ptr [edi]
0x14ad7:    29 f0                              	sub eax, esi
0x14ad9:    c1 f8 02                           	sar eax, 2
0x14adc:    85 c0                              	test eax, eax
0x14ade:    75 28                              	jne 0x14b08 <_ZNSt6vectorIjSaIjEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPjS1_EERKj+0x78>
0x14ae0:    89 1e                              	mov dword ptr [esi], ebx
0x14ae2:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x14ae6:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x14aed:    0f 85 19 01 00 00                  	jne 0x14c0c <function_14c0c>
0x14af3:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x14af7:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x14afb:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x14aff:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x14b03:    83 c4 4c                           	add esp, 0x4c
0x14b06:    c3                                 	ret 
; data inside code section at 0x14b07 -- 0x14b08
0x14b07:    90                                                 |.               |
0x14b08:    c1 e0 02                           	shl eax, 2
0x14b0b:    29 c2                              	sub edx, eax
0x14b0d:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14b11:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x14b15:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14b18 -- 0x14b19
0x14b18:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14b19 -- 0x14b1a
; data inside code section at 0x14b1a -- 0x14b1d
0x14b1a:    ff ff ff                                           |...             |
; function: function_14b1d at 0x14b1d -- 0x14b1f
0x14b1d:    eb c1                              	jmp 0x14ae0
; data inside code section at 0x14b1f -- 0x14b20
0x14b1f:    90                                                 |.               |
; function: function_14b20 at 0x14b20 -- 0x14b54
0x14b20:    8b 03                              	mov eax, dword ptr [ebx]
0x14b22:    29 c2                              	sub edx, eax
0x14b24:    c1 fa 02                           	sar edx, 2
0x14b27:    85 d2                              	test edx, edx
0x14b29:    0f 84 81 00 00 00                  	je 0x14bb0 <function_14bb0>
0x14b2f:    8d 0c 12                           	lea ecx, [edx + edx]
0x14b32:    39 ca                              	cmp edx, ecx
0x14b34:    0f 86 d7 00 00 00                  	jbe 0x14c11 <function_14c11>
0x14b3a:    89 f2                              	mov edx, esi
0x14b3c:    29 c2                              	sub edx, eax
0x14b3e:    c1 fa 02                           	sar edx, 2
0x14b41:    c7 44 24 1c fc ff ff ff            	mov dword ptr [esp + 0x1c], 0xfffffffc
0x14b49:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14b4d:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x14b51:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14b54 -- 0x14b55
0x14b54:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x14b55 -- 0x14b56
; data inside code section at 0x14b56 -- 0x14b61
0x14b56:    ff ff ff 8b 54 24 18 89  c5 8b 03                  |....T$.....     |
; function: function_14b61 at 0x14b61 -- 0x14b97
0x14b61:    8d 54 95 00                        	lea edx, [ebp + edx*4]
0x14b65:    85 d2                              	test edx, edx
0x14b67:    74 04                              	je 0x14b6d <function_14b61+0xc>
0x14b69:    8b 0f                              	mov ecx, dword ptr [edi]
0x14b6b:    89 0a                              	mov dword ptr [edx], ecx
0x14b6d:    89 f2                              	mov edx, esi
0x14b6f:    31 ff                              	xor edi, edi
0x14b71:    29 c2                              	sub edx, eax
0x14b73:    c1 fa 02                           	sar edx, 2
0x14b76:    85 d2                              	test edx, edx
0x14b78:    75 4e                              	jne 0x14bc8 <function_14bc8>
0x14b7a:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x14b7d:    8d 54 3d 04                        	lea edx, [ebp + edi + 4]
0x14b81:    31 ff                              	xor edi, edi
0x14b83:    29 f0                              	sub eax, esi
0x14b85:    c1 f8 02                           	sar eax, 2
0x14b88:    85 c0                              	test eax, eax
0x14b8a:    75 5c                              	jne 0x14be8 <function_14be8>
0x14b8c:    8b 03                              	mov eax, dword ptr [ebx]
0x14b8e:    01 d7                              	add edi, edx
0x14b90:    85 c0                              	test eax, eax
0x14b92:    74 08                              	je 0x14b9c <function_14b9c>
0x14b94:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14b97 -- 0x14b98
0x14b97:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x14b98 -- 0x14b99
; data inside code section at 0x14b99 -- 0x14b9c
0x14b99:    ff ff ff                                           |...             |
; function: function_14b9c at 0x14b9c -- 0x14bad
0x14b9c:    89 2b                              	mov dword ptr [ebx], ebp
0x14b9e:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x14ba2:    89 7b 04                           	mov dword ptr [ebx + 4], edi
0x14ba5:    89 6b 08                           	mov dword ptr [ebx + 8], ebp
0x14ba8:    e9 35 ff ff ff                     	jmp 0x14ae2
; data inside code section at 0x14bad -- 0x14bb0
0x14bad:    8d 76 00                                           |.v.             |
; function: function_14bb0 at 0x14bb0 -- 0x14bc1
0x14bb0:    89 f2                              	mov edx, esi
0x14bb2:    29 c2                              	sub edx, eax
0x14bb4:    c1 fa 02                           	sar edx, 2
0x14bb7:    c7 44 24 1c 04 00 00 00            	mov dword ptr [esp + 0x1c], 4
0x14bbf:    eb 88                              	jmp 0x14b49
; data inside code section at 0x14bc1 -- 0x14bc8
0x14bc1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_14bc8 at 0x14bc8 -- 0x14bda
0x14bc8:    8d 3c 95 00 00 00 00               	lea edi, [edx*4]
0x14bcf:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x14bd3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14bd7:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x14bda -- 0x14bdb
0x14bda:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14bdb -- 0x14bdc
; data inside code section at 0x14bdc -- 0x14bdf
0x14bdc:    ff ff ff                                           |...             |
; function: function_14bdf at 0x14bdf -- 0x14be1
0x14bdf:    eb 99                              	jmp 0x14b7a
; data inside code section at 0x14be1 -- 0x14be8
0x14be1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_14be8 at 0x14be8 -- 0x14bfe
0x14be8:    8d 3c 85 00 00 00 00               	lea edi, [eax*4]
0x14bef:    89 14 24                           	mov dword ptr [esp], edx
0x14bf2:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x14bf6:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x14bfa:    89 74 24 04                        	mov dword ptr [esp + 4], esi
; data inside code section at 0x14bfe -- 0x14bff
0x14bfe:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14bff -- 0x14c00
; data inside code section at 0x14c00 -- 0x14c03
0x14c00:    ff ff ff                                           |...             |
; function: function_14c03 at 0x14c03 -- 0x14c0c
0x14c03:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x14c07:    e9 80 ff ff ff                     	jmp 0x14b8c
; function: function_14c0c at 0x14c0c -- 0x14c0d
; dynamically linked function: __stack_chk_fail at 0x14c0d -- 0x14c0e
; data inside code section at 0x14c0e -- 0x14c11
0x14c0e:    ff ff ff                                           |...             |
; function: function_14c11 at 0x14c11 -- 0x14c3a
0x14c11:    81 f9 ff ff ff 3f                  	cmp ecx, 0x3fffffff
0x14c17:    0f 87 1d ff ff ff                  	ja 0x14b3a
0x14c1d:    c1 e2 03                           	shl edx, 3
0x14c20:    31 ed                              	xor ebp, ebp
0x14c22:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x14c26:    89 f2                              	mov edx, esi
0x14c28:    29 c2                              	sub edx, eax
0x14c2a:    c1 fa 02                           	sar edx, 2
0x14c2d:    85 c9                              	test ecx, ecx
0x14c2f:    0f 84 2c ff ff ff                  	je 0x14b61 <function_14b61>
0x14c35:    e9 0f ff ff ff                     	jmp 0x14b49
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag at 0x14c40 -- 0x14db0
0x14c40:    55                                 	push ebp
0x14c41:    57                                 	push edi
0x14c42:    56                                 	push esi
0x14c43:    53                                 	push ebx
0x14c44:    83 ec 3c                           	sub esp, 0x3c
0x14c47:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x14c4b:    8b 5c 24 5c                        	mov ebx, dword ptr [esp + 0x5c]
0x14c4f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14c55:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x14c59:    31 c0                              	xor eax, eax
0x14c5b:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x14c5f:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x14c63:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x14c67:    39 da                              	cmp edx, ebx
0x14c69:    74 65                              	je 0x14cd0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x90>
0x14c6b:    8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0x14c6e:    89 dd                              	mov ebp, ebx
0x14c70:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x14c73:    29 d5                              	sub ebp, edx
0x14c75:    29 c8                              	sub eax, ecx
0x14c77:    39 c5                              	cmp ebp, eax
0x14c79:    0f 87 01 01 00 00                  	ja 0x14d80 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x140>
0x14c7f:    89 ca                              	mov edx, ecx
0x14c81:    29 f2                              	sub edx, esi
0x14c83:    39 d5                              	cmp ebp, edx
0x14c85:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x14c89:    73 65                              	jae 0x14cf0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xb0>
0x14c8b:    89 c8                              	mov eax, ecx
0x14c8d:    29 e8                              	sub eax, ebp
0x14c8f:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x14c93:    89 c8                              	mov eax, ecx
0x14c95:    3b 4c 24 10                        	cmp ecx, dword ptr [esp + 0x10]
0x14c99:    74 1b                              	je 0x14cb6 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x76>
0x14c9b:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x14c9f:    90                                 	nop 
0x14ca0:    85 c0                              	test eax, eax
0x14ca2:    74 05                              	je 0x14ca9 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x69>
0x14ca4:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x14ca7:    88 18                              	mov byte ptr [eax], bl
0x14ca9:    83 c2 01                           	add edx, 1
0x14cac:    83 c0 01                           	add eax, 1
0x14caf:    39 ca                              	cmp edx, ecx
0x14cb1:    75 ed                              	jne 0x14ca0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x60>
0x14cb3:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x14cb6:    01 e8                              	add eax, ebp
0x14cb8:    89 47 04                           	mov dword ptr [edi + 4], eax
0x14cbb:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x14cbf:    29 f0                              	sub eax, esi
0x14cc1:    0f 85 d9 01 00 00                  	jne 0x14ea0 <function_14ea0>
0x14cc7:    85 ed                              	test ebp, ebp
0x14cc9:    0f 85 a1 01 00 00                  	jne 0x14e70 <function_14e70>
0x14ccf:    90                                 	nop 
0x14cd0:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x14cd4:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x14cdb:    0f 85 00 02 00 00                  	jne 0x14ee1 <function_14ee1>
0x14ce1:    83 c4 3c                           	add esp, 0x3c
0x14ce4:    5b                                 	pop ebx
0x14ce5:    5e                                 	pop esi
0x14ce6:    5f                                 	pop edi
0x14ce7:    5d                                 	pop ebp
0x14ce8:    c3                                 	ret 
; data inside code section at 0x14ce9 -- 0x14cf0
0x14ce9:    8d b4 26 00 00 00 00                               |..&....         |
0x14cf0:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x14cf4:    89 c8                              	mov eax, ecx
0x14cf6:    03 54 24 10                        	add edx, dword ptr [esp + 0x10]
0x14cfa:    39 d3                              	cmp ebx, edx
0x14cfc:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x14d00:    74 20                              	je 0x14d22 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xe2>
0x14d02:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x14d06:    66 90                              	nop 
0x14d08:    85 c0                              	test eax, eax
0x14d0a:    74 05                              	je 0x14d11 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xd1>
0x14d0c:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x14d0f:    88 08                              	mov byte ptr [eax], cl
0x14d11:    83 c2 01                           	add edx, 1
0x14d14:    83 c0 01                           	add eax, 1
0x14d17:    39 da                              	cmp edx, ebx
0x14d19:    75 ed                              	jne 0x14d08 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xc8>
0x14d1b:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x14d1f:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x14d22:    2b 6c 24 10                        	sub ebp, dword ptr [esp + 0x10]
0x14d26:    01 c5                              	add ebp, eax
0x14d28:    39 f1                              	cmp ecx, esi
0x14d2a:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x14d2d:    74 20                              	je 0x14d4f <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x10f>
0x14d2f:    89 f0                              	mov eax, esi
0x14d31:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x14d38:    85 ed                              	test ebp, ebp
0x14d3a:    74 06                              	je 0x14d42 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x102>
0x14d3c:    0f b6 10                           	movzx edx, byte ptr [eax]
0x14d3f:    88 55 00                           	mov byte ptr [ebp], dl
0x14d42:    83 c0 01                           	add eax, 1
0x14d45:    83 c5 01                           	add ebp, 1
0x14d48:    39 c8                              	cmp eax, ecx
0x14d4a:    75 ec                              	jne 0x14d38 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0xf8>
0x14d4c:    8b 6f 04                           	mov ebp, dword ptr [edi + 4]
0x14d4f:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x14d53:    03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0x14d57:    2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0x14d5b:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x14d5e:    0f 84 6c ff ff ff                  	je 0x14cd0 <_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag+0x90>
0x14d64:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x14d68:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x14d6f:    0f 85 6c 01 00 00                  	jne 0x14ee1 <function_14ee1>
0x14d75:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x14d79:    e9 03 01 00 00                     	jmp 0x14e81 <function_14e81>
; data inside code section at 0x14d7e -- 0x14d80
0x14d7e:    66 90                                              |f.              |
0x14d80:    8b 07                              	mov eax, dword ptr [edi]
0x14d82:    29 c1                              	sub ecx, eax
0x14d84:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x14d88:    89 c8                              	mov eax, ecx
0x14d8a:    f7 d0                              	not eax
0x14d8c:    39 c5                              	cmp ebp, eax
0x14d8e:    0f 87 52 01 00 00                  	ja 0x14ee6 <function_14ee6>
0x14d94:    39 cd                              	cmp ebp, ecx
0x14d96:    0f 42 e9                           	cmovb ebp, ecx
0x14d99:    01 e9                              	add ecx, ebp
0x14d9b:    c7 44 24 1c ff ff ff ff            	mov dword ptr [esp + 0x1c], 0xffffffff
0x14da3:    0f 83 17 01 00 00                  	jae 0x14ec0 <function_14ec0>
0x14da9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x14dad:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x14db0 -- 0x14db1
0x14db0:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x14db1 -- 0x14db2
; data inside code section at 0x14db2 -- 0x14dbf
0x14db2:    ff ff ff 89 44 24 10 8b  07 89 44 24 18            |....D$....D$.   |
; function: function_14dbf at 0x14dbf -- 0x14e49
0x14dbf:    39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0x14dc3:    8b 6c 24 10                        	mov ebp, dword ptr [esp + 0x10]
0x14dc7:    74 24                              	je 0x14ded <function_14dbf+0x2e>
0x14dc9:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x14dcd:    89 e8                              	mov eax, ebp
0x14dcf:    90                                 	nop 
0x14dd0:    85 c0                              	test eax, eax
0x14dd2:    74 05                              	je 0x14dd9 <function_14dbf+0x1a>
0x14dd4:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x14dd7:    88 08                              	mov byte ptr [eax], cl
0x14dd9:    83 c2 01                           	add edx, 1
0x14ddc:    83 c0 01                           	add eax, 1
0x14ddf:    39 f2                              	cmp edx, esi
0x14de1:    75 ed                              	jne 0x14dd0 <function_14dbf+0x11>
0x14de3:    89 f5                              	mov ebp, esi
0x14de5:    2b 6c 24 18                        	sub ebp, dword ptr [esp + 0x18]
0x14de9:    03 6c 24 10                        	add ebp, dword ptr [esp + 0x10]
0x14ded:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x14df1:    89 ea                              	mov edx, ebp
0x14df3:    90                                 	nop 
0x14df4:    8d 74 26 00                        	lea esi, [esi]
0x14df8:    85 d2                              	test edx, edx
0x14dfa:    74 05                              	je 0x14e01 <function_14dbf+0x42>
0x14dfc:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x14dff:    88 0a                              	mov byte ptr [edx], cl
0x14e01:    83 c0 01                           	add eax, 1
0x14e04:    83 c2 01                           	add edx, 1
0x14e07:    39 d8                              	cmp eax, ebx
0x14e09:    75 ed                              	jne 0x14df8 <function_14dbf+0x39>
0x14e0b:    2b 44 24 14                        	sub eax, dword ptr [esp + 0x14]
0x14e0f:    01 c5                              	add ebp, eax
0x14e11:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x14e14:    39 f0                              	cmp eax, esi
0x14e16:    74 1f                              	je 0x14e37 <function_14dbf+0x78>
0x14e18:    89 f2                              	mov edx, esi
0x14e1a:    89 e9                              	mov ecx, ebp
0x14e1c:    8d 74 26 00                        	lea esi, [esi]
0x14e20:    85 c9                              	test ecx, ecx
0x14e22:    74 05                              	je 0x14e29 <function_14dbf+0x6a>
0x14e24:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x14e27:    88 19                              	mov byte ptr [ecx], bl
0x14e29:    83 c2 01                           	add edx, 1
0x14e2c:    83 c1 01                           	add ecx, 1
0x14e2f:    39 c2                              	cmp edx, eax
0x14e31:    75 ed                              	jne 0x14e20 <function_14dbf+0x61>
0x14e33:    29 f2                              	sub edx, esi
0x14e35:    01 d5                              	add ebp, edx
0x14e37:    8b 1f                              	mov ebx, dword ptr [edi]
0x14e39:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x14e3c:    85 db                              	test ebx, ebx
0x14e3e:    74 16                              	je 0x14e56 <function_14e56>
0x14e40:    29 d8                              	sub eax, ebx
0x14e42:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14e46:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x14e49 -- 0x14e4a
0x14e49:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x14e4a -- 0x14e4b
; data inside code section at 0x14e4b -- 0x14e52
0x14e4b:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x14e52 -- 0x14e53
; data inside code section at 0x14e53 -- 0x14e56
0x14e53:    ff ff ff                                           |...             |
; function: function_14e56 at 0x14e56 -- 0x14e6b
0x14e56:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x14e5a:    89 6f 04                           	mov dword ptr [edi + 4], ebp
0x14e5d:    89 07                              	mov dword ptr [edi], eax
0x14e5f:    03 44 24 1c                        	add eax, dword ptr [esp + 0x1c]
0x14e63:    89 47 08                           	mov dword ptr [edi + 8], eax
0x14e66:    e9 65 fe ff ff                     	jmp 0x14cd0
; data inside code section at 0x14e6b -- 0x14e70
0x14e6b:    90 8d 74 26 00                                     |..t&.           |
; function: function_14e70 at 0x14e70 -- 0x14e81
0x14e70:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x14e74:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x14e7b:    75 64                              	jne 0x14ee1 <function_14ee1>
0x14e7d:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
; function: function_14e81 at 0x14e81 -- 0x14e94
0x14e81:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x14e85:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x14e89:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x14e8d:    83 c4 3c                           	add esp, 0x3c
0x14e90:    5b                                 	pop ebx
0x14e91:    5e                                 	pop esi
0x14e92:    5f                                 	pop edi
0x14e93:    5d                                 	pop ebp
; data inside code section at 0x14e94 -- 0x14e95
0x14e94:    e9                                                 |.               |
; dynamically linked function: memmove at 0x14e95 -- 0x14e96
; data inside code section at 0x14e96 -- 0x14ea0
0x14e96:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_14ea0 at 0x14ea0 -- 0x14ead
0x14ea0:    29 c1                              	sub ecx, eax
0x14ea2:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x14ea6:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x14eaa:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x14ead -- 0x14eae
0x14ead:    e8                                                 |.               |
; dynamically linked function: memmove at 0x14eae -- 0x14eaf
; data inside code section at 0x14eaf -- 0x14eb2
0x14eaf:    ff ff ff                                           |...             |
; function: function_14eb2 at 0x14eb2 -- 0x14ebc
0x14eb2:    85 ed                              	test ebp, ebp
0x14eb4:    0f 84 16 fe ff ff                  	je 0x14cd0
0x14eba:    eb b4                              	jmp 0x14e70 <function_14e70>
; data inside code section at 0x14ebc -- 0x14ec0
0x14ebc:    8d 74 26 00                                        |.t&.            |
; function: function_14ec0 at 0x14ec0 -- 0x14ee1
0x14ec0:    85 c9                              	test ecx, ecx
0x14ec2:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x14eca:    c7 44 24 10 00 00 00 00            	mov dword ptr [esp + 0x10], 0
0x14ed2:    0f 84 e7 fe ff ff                  	je 0x14dbf <function_14dbf>
0x14ed8:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x14edc:    e9 c8 fe ff ff                     	jmp 0x14da9
; function: function_14ee1 at 0x14ee1 -- 0x14ee2
; dynamically linked function: __stack_chk_fail at 0x14ee2 -- 0x14ee3
; data inside code section at 0x14ee3 -- 0x14ee6
0x14ee3:    ff ff ff                                           |...             |
; function: function_14ee6 at 0x14ee6 -- 0x14eed
0x14ee6:    c7 04 24 82 a0 00 00               	mov dword ptr [esp], 0xa082 ; "vector::_M_range_insert"
; data inside code section at 0x14eed -- 0x14eee
0x14eed:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x14eee -- 0x14eef
; data inside code section at 0x14eef -- 0x14ef2
0x14eef:    ff ff ff                                           |...             |
; section: .text._ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_
; function: _ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_ at 0x14f00 -- 0x14f49
0x14f00:    56                                 	push esi
0x14f01:    53                                 	push ebx
0x14f02:    83 ec 24                           	sub esp, 0x24
0x14f05:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x14f09:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x14f0d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14f13:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x14f17:    31 c0                              	xor eax, eax
0x14f19:    39 f3                              	cmp ebx, esi
0x14f1b:    74 19                              	je 0x14f36 <_ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_+0x36>
0x14f1d:    8d 76 00                           	lea esi, [esi]
0x14f20:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x14f23:    89 1c 24                           	mov dword ptr [esp], ebx
0x14f26:    83 c3 18                           	add ebx, 0x18
0x14f29:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x14f2d:    e8 ae 39 01 00                     	call 0x288e0 <function_288e0>
0x14f32:    39 de                              	cmp esi, ebx
0x14f34:    75 ea                              	jne 0x14f20 <_ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_+0x20>
0x14f36:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x14f3a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x14f41:    75 06                              	jne 0x14f49 <_ZSt8_DestroyIPSt3setIiSt4lessIiESaIiEEEvT_S6_+0x48>
0x14f43:    83 c4 24                           	add esp, 0x24
0x14f46:    5b                                 	pop ebx
0x14f47:    5e                                 	pop esi
0x14f48:    c3                                 	ret 
; data inside code section at 0x14f49 -- 0x14f4a
0x14f49:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x14f4a -- 0x14f4b
; data inside code section at 0x14f4b -- 0x14f4e
0x14f4b:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh
; function: _ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh at 0x14f50 -- 0x14ff2
0x14f50:    83 ec 5c                           	sub esp, 0x5c
0x14f53:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x14f57:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x14f5b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x14f61:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x14f65:    31 c0                              	xor eax, eax
0x14f67:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x14f6b:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x14f6f:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x14f73:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x14f77:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x14f7b:    85 db                              	test ebx, ebx
0x14f7d:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x14f81:    0f 84 d5 00 00 00                  	je 0x1505c <function_1505c>
0x14f87:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x14f8a:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x14f8d:    29 e8                              	sub eax, ebp
0x14f8f:    39 c3                              	cmp ebx, eax
0x14f91:    0f 86 f1 00 00 00                  	jbe 0x15088 <function_15088>
0x14f97:    8b 06                              	mov eax, dword ptr [esi]
0x14f99:    29 c5                              	sub ebp, eax
0x14f9b:    89 e9                              	mov ecx, ebp
0x14f9d:    f7 d1                              	not ecx
0x14f9f:    39 cb                              	cmp ebx, ecx
0x14fa1:    0f 87 1f 02 00 00                  	ja 0x151c6 <function_151c6>
0x14fa7:    39 dd                              	cmp ebp, ebx
0x14fa9:    89 d9                              	mov ecx, ebx
0x14fab:    0f 43 cd                           	cmovae ecx, ebp
0x14fae:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x14fb2:    89 f9                              	mov ecx, edi
0x14fb4:    29 c1                              	sub ecx, eax
0x14fb6:    03 6c 24 1c                        	add ebp, dword ptr [esp + 0x1c]
0x14fba:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x14fbe:    c7 44 24 28 ff ff ff ff            	mov dword ptr [esp + 0x28], 0xffffffff
0x14fc6:    0f 82 6c 01 00 00                  	jb 0x15138 <function_15138>
0x14fcc:    85 ed                              	test ebp, ebp
0x14fce:    0f 85 5d 01 00 00                  	jne 0x15131 <function_15131>
0x14fd4:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x14fdc:    31 ed                              	xor ebp, ebp
0x14fde:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x14fe2:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x14fe6:    0f b6 12                           	movzx edx, byte ptr [edx]
0x14fe9:    01 e8                              	add eax, ebp
0x14feb:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x14fef:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x14ff2 -- 0x14ff3
0x14ff2:    e8                                                 |.               |
; dynamically linked function: memset at 0x14ff3 -- 0x14ff4
; data inside code section at 0x14ff4 -- 0x15011
0x14ff4:    ff ff ff 8b 06 89 f9 31  d2 29 c1 74 18 89 4c 24   |.......1.).t..L$|
0x15004:    08 89 44 24 04 89 2c 24  89 4c 24 20 e8            |..D$..,$.L$ .   |
; dynamically linked function: memmove at 0x15011 -- 0x15012
; data inside code section at 0x15012 -- 0x15014
0x15012:    ff ff                                              |..              |
; function: function_15014 at 0x15014 -- 0x15024
0x15014:    ff 8b 54 24 20 8b                  	dec dword ptr [ebx - 0x74dfdbac]
0x1501a:    46                                 	inc esi
0x1501b:    04 01                              	add al, 1
0x1501d:    ea 01 da 31 db 29 f8               	ljmp 0xf829:0xdb31da01 <function_db31da01>
; data inside code section at 0x15024 -- 0x15028
0x15024:    74 1a 89 14                                        |t...            |
; function: function_15028 at 0x15028 -- 0x1502b
0x15028:    24 89                              	and al, 0x89
0x1502a:    c3                                 	ret 
; data inside code section at 0x1502b -- 0x15038
0x1502b:    89 54 24 20 89 44 24 08  89 7c 24 04 e8            |.T$ .D$..|$..   |
; dynamically linked function: memmove at 0x15038 -- 0x15039
; data inside code section at 0x15039 -- 0x1504c
0x15039:    ff ff ff 8b 54 24 20 8b  06 01 d3 85 c0 74 08 89   |....T$ ......t..|
0x15049:    04 24 e8                                           |.$.             |
; dynamically linked function: _ZdlPv at 0x1504c -- 0x1504d
; data inside code section at 0x1504d -- 0x1505c
0x1504d:    ff ff ff 89 2e 03 6c 24  28 89 5e 04 89 6e 08      |......l$(.^..n. |
; function: function_1505c at 0x1505c -- 0x15081
0x1505c:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x15060:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x15067:    0f 85 54 01 00 00                  	jne 0x151c1 <function_151c1>
0x1506d:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x15071:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x15075:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x15079:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1507d:    83 c4 5c                           	add esp, 0x5c
0x15080:    c3                                 	ret 
; data inside code section at 0x15081 -- 0x15088
0x15081:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_15088 at 0x15088 -- 0x150bc
0x15088:    0f b6 0a                           	movzx ecx, byte ptr [edx]
0x1508b:    89 ea                              	mov edx, ebp
0x1508d:    29 fa                              	sub edx, edi
0x1508f:    39 d3                              	cmp ebx, edx
0x15091:    0f 83 c1 00 00 00                  	jae 0x15158 <function_15158>
0x15097:    89 ea                              	mov edx, ebp
0x15099:    89 e8                              	mov eax, ebp
0x1509b:    29 da                              	sub edx, ebx
0x1509d:    29 d0                              	sub eax, edx
0x1509f:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x150a3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x150a7:    74 28                              	je 0x150d1 <function_150d1>
0x150a9:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x150ad:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x150b1:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x150b5:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x150b9:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x150bc -- 0x150bd
0x150bc:    e8                                                 |.               |
; dynamically linked function: memmove at 0x150bd -- 0x150be
; data inside code section at 0x150be -- 0x150d1
0x150be:    ff ff ff 8b 46 04 0f b6  4c 24 24 8b 54 24 20 89   |....F...L$$.T$ .|
0x150ce:    44 24 2c                                           |D$,             |
; function: function_150d1 at 0x150d1 -- 0x150ef
0x150d1:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x150d5:    01 d8                              	add eax, ebx
0x150d7:    29 fa                              	sub edx, edi
0x150d9:    89 46 04                           	mov dword ptr [esi + 4], eax
0x150dc:    74 1b                              	je 0x150f9 <function_150f9>
0x150de:    29 d5                              	sub ebp, edx
0x150e0:    88 4c 24 24                        	mov byte ptr [esp + 0x24], cl
0x150e4:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x150e8:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x150ec:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x150ef -- 0x150f0
0x150ef:    e8                                                 |.               |
; dynamically linked function: memmove at 0x150f0 -- 0x150f1
; data inside code section at 0x150f1 -- 0x150f9
0x150f1:    ff ff ff 0f b6 4c 24 24                            |.....L$$        |
; function: function_150f9 at 0x150f9 -- 0x1512c
0x150f9:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x150fd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x15104:    0f 85 b7 00 00 00                  	jne 0x151c1 <function_151c1>
0x1510a:    0f b6 c9                           	movzx ecx, cl
0x1510d:    89 5c 24 68                        	mov dword ptr [esp + 0x68], ebx
0x15111:    89 4c 24 64                        	mov dword ptr [esp + 0x64], ecx
0x15115:    89 7c 24 60                        	mov dword ptr [esp + 0x60], edi
0x15119:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x1511d:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x15121:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x15125:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x15129:    83 c4 5c                           	add esp, 0x5c
; data inside code section at 0x1512c -- 0x1512d
0x1512c:    e9                                                 |.               |
; dynamically linked function: memset at 0x1512d -- 0x1512e
; data inside code section at 0x1512e -- 0x15131
0x1512e:    ff ff ff                                           |...             |
; function: function_15131 at 0x15131 -- 0x15138
0x15131:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x15135:    8d 76 00                           	lea esi, [esi]
; function: function_15138 at 0x15138 -- 0x15143
0x15138:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x1513c:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x15140:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x15143 -- 0x15144
0x15143:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x15144 -- 0x15145
; data inside code section at 0x15145 -- 0x15148
0x15145:    ff ff ff                                           |...             |
; function: function_15148 at 0x15148 -- 0x15153
0x15148:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1514c:    89 c5                              	mov ebp, eax
0x1514e:    e9 8b fe ff ff                     	jmp 0x14fde
; data inside code section at 0x15153 -- 0x15158
0x15153:    90 8d 74 26 00                                     |..t&.           |
; function: function_15158 at 0x15158 -- 0x15174
0x15158:    29 d3                              	sub ebx, edx
0x1515a:    89 5c 24 28                        	mov dword ptr [esp + 0x28], ebx
0x1515e:    0f b6 d9                           	movzx ebx, cl
0x15161:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x15165:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x15169:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1516d:    89 2c 24                           	mov dword ptr [esp], ebp
0x15170:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x15174 -- 0x15175
0x15174:    e8                                                 |.               |
; dynamically linked function: memset at 0x15175 -- 0x15176
; data inside code section at 0x15176 -- 0x15197
0x15176:    ff ff ff 8b 54 24 20 8b  44 24 28 03 46 04 85 d2   |....T$ .D$(.F...|
0x15186:    89 46 04 74 17 89 54 24  08 89 7c 24 04 89 04 24   |.F.t..T$..|$...$|
0x15196:    e8                                                 |.               |
; dynamically linked function: memmove at 0x15197 -- 0x15198
; data inside code section at 0x15198 -- 0x1519a
0x15198:    ff ff                                              |..              |
; function: function_1519a at 0x1519a -- 0x151c1
0x1519a:    ff 8b 46 04 8b 54                  	dec dword ptr [ebx + 0x548b0446]
0x151a0:    24 20                              	and al, 0x20
0x151a2:    01 d0                              	add eax, edx
0x151a4:    89 46 04                           	mov dword ptr [esi + 4], eax
0x151a7:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x151ab:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x151b2:    75 0d                              	jne 0x151c1 <function_151c1>
0x151b4:    89 54 24 68                        	mov dword ptr [esp + 0x68], edx
0x151b8:    89 5c 24 64                        	mov dword ptr [esp + 0x64], ebx
0x151bc:    e9 54 ff ff ff                     	jmp 0x15115
; function: function_151c1 at 0x151c1 -- 0x151c2
; dynamically linked function: __stack_chk_fail at 0x151c2 -- 0x151c3
; data inside code section at 0x151c3 -- 0x151c6
0x151c3:    ff ff ff                                           |...             |
; function: function_151c6 at 0x151c6 -- 0x151cd
0x151c6:    c7 04 24 6b a0 00 00               	mov dword ptr [esp], 0xa06b ; "vector::_M_fill_insert"
; data inside code section at 0x151cd -- 0x151ce
0x151cd:    e8                                                 |.               |
; dynamically linked function: _ZSt20__throw_length_errorPKc at 0x151ce -- 0x151cf
; data inside code section at 0x151cf -- 0x151d2
0x151cf:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_initialize_mapEj at 0x151e0 -- 0x15229
0x151e0:    55                                 	push ebp
0x151e1:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x151e6:    57                                 	push edi
0x151e7:    56                                 	push esi
0x151e8:    53                                 	push ebx
0x151e9:    83 ec 3c                           	sub esp, 0x3c
0x151ec:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x151f0:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x151f4:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x151f8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x151fe:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x15202:    31 c0                              	xor eax, eax
0x15204:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15208:    d1 e8                              	shr eax, 1
0x1520a:    f7 e2                              	mul edx
0x1520c:    b8 08 00 00 00                     	mov eax, 8
0x15211:    c1 ea 02                           	shr edx, 2
0x15214:    8d 5a 01                           	lea ebx, [edx + 1]
0x15217:    83 c2 03                           	add edx, 3
0x1521a:    83 fa 08                           	cmp edx, 8
0x1521d:    0f 42 d0                           	cmovb edx, eax
0x15220:    89 57 04                           	mov dword ptr [edi + 4], edx
0x15223:    c1 e2 02                           	shl edx, 2
0x15226:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x15229 -- 0x1522a
0x15229:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1522a -- 0x1522b
; data inside code section at 0x1522b -- 0x1522f
0x1522b:    ff ff ff 8b                                        |....            |
; function: function_1522f at 0x1522f -- 0x1523b
0x1522f:    57                                 	push edi
0x15230:    04 29                              	add al, 0x29
0x15232:    da d1                              	fcmovbe st(0), st(1)
0x15234:    ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0x1523b -- 0x15243
0x1523b:    00 39 f5 89 07 73 1b 89                            |.9...s..        |
; function: function_15243 at 0x15243 -- 0x15245
0x15243:    eb 8d                              	jmp 0x151d2 <function_151d2>
; data inside code section at 0x15245 -- 0x15248
0x15245:    74 26 00                                           |t&.             |
; function: function_15248 at 0x15248 -- 0x15249
; data inside code section at 0x15249 -- 0x15250
0x15249:    04 24 f8 01 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x15250 -- 0x15251
; data inside code section at 0x15251 -- 0x15253
0x15251:    ff ff                                              |..              |
; function: function_15253 at 0x15253 -- 0x152be
0x15253:    ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0x15259:    39 de                              	cmp esi, ebx
0x1525b:    77 eb                              	ja 0x15248 <function_15248>
0x1525d:    89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0x15260:    8b 45 00                           	mov eax, dword ptr [ebp]
0x15263:    8d 90 f8 01 00 00                  	lea edx, [eax + 0x1f8]
0x15269:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x1526c:    8d 56 fc                           	lea edx, [esi - 4]
0x1526f:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x15272:    89 57 24                           	mov dword ptr [edi + 0x24], edx
0x15275:    8b 4e fc                           	mov ecx, dword ptr [esi - 4]
0x15278:    89 47 08                           	mov dword ptr [edi + 8], eax
0x1527b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1527f:    8d 91 f8 01 00 00                  	lea edx, [ecx + 0x1f8]
0x15285:    d1 e8                              	shr eax, 1
0x15287:    89 57 20                           	mov dword ptr [edi + 0x20], edx
0x1528a:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x1528f:    f7 e2                              	mul edx
0x15291:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15295:    89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0x15298:    c1 ea 02                           	shr edx, 2
0x1529b:    6b d2 2a                           	imul edx, edx, 0x2a
0x1529e:    29 d0                              	sub eax, edx
0x152a0:    8d 04 40                           	lea eax, [eax + eax*2]
0x152a3:    8d 04 81                           	lea eax, [ecx + eax*4]
0x152a6:    89 47 18                           	mov dword ptr [edi + 0x18], eax
0x152a9:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x152ad:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x152b4:    75 1e                              	jne 0x152d4 <function_152d4>
0x152b6:    83 c4 3c                           	add esp, 0x3c
0x152b9:    5b                                 	pop ebx
0x152ba:    5e                                 	pop esi
0x152bb:    5f                                 	pop edi
0x152bc:    5d                                 	pop ebp
0x152bd:    c3                                 	ret 
; data inside code section at 0x152be -- 0x152c2
0x152be:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x152c2 -- 0x152c3
; data inside code section at 0x152c3 -- 0x152d0
0x152c3:    ff ff ff 89 da 89 e8 e8  d1 ff ff ff e8            |.............   |
; dynamically linked function: __cxa_rethrow at 0x152d0 -- 0x152d1
; data inside code section at 0x152d1 -- 0x152d4
0x152d1:    ff ff ff                                           |...             |
; function: function_152d4 at 0x152d4 -- 0x152d5
; dynamically linked function: __stack_chk_fail at 0x152d5 -- 0x152d6
; data inside code section at 0x152d6 -- 0x152da
0x152d6:    ff ff ff 89                                        |....            |
; function: function_152da at 0x152da -- 0x152db
0x152da:    c3                                 	ret 
; data inside code section at 0x152db -- 0x152dc
0x152db:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x152dc -- 0x152dd
; data inside code section at 0x152dd -- 0x152e4
0x152dd:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x152e4 -- 0x152e5
; data inside code section at 0x152e5 -- 0x152ee
0x152e5:    ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x152ee -- 0x152ef
; data inside code section at 0x152ef -- 0x15300
0x152ef:    ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0x152ff:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x15300 -- 0x15301
; data inside code section at 0x15301 -- 0x15305
0x15301:    ff ff ff 89                                        |....            |
; function: function_15305 at 0x15305 -- 0x15306
0x15305:    c3                                 	ret 
; data inside code section at 0x15306 -- 0x15307
0x15306:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x15307 -- 0x15308
; data inside code section at 0x15308 -- 0x1530f
0x15308:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1530f -- 0x15310
; data inside code section at 0x15310 -- 0x15313
0x15310:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE19_M_destroy_data_auxESt15_Deque_iteratorIS3_RS3_PS3_ES9_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE19_M_destroy_data_auxESt15_Deque_iteratorIS3_RS3_PS3_ES9_ at 0x15320 -- 0x1537a
0x15320:    55                                 	push ebp
0x15321:    57                                 	push edi
0x15322:    56                                 	push esi
0x15323:    53                                 	push ebx
0x15324:    83 ec 3c                           	sub esp, 0x3c
0x15327:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x1532b:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1532f:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x15336:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x1533a:    31 c9                              	xor ecx, ecx
0x1533c:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x15340:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x15344:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x15347:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1534b:    8b 41 0c                           	mov eax, dword ptr [ecx + 0xc]
0x1534e:    8d 6a 04                           	lea ebp, [edx + 4]
0x15351:    39 c5                              	cmp ebp, eax
0x15353:    73 4e                              	jae 0x153a3 <function_153a3>
0x15355:    8d 76 00                           	lea esi, [esi]
0x15358:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x1535b:    8d bb f8 01 00 00                  	lea edi, [ebx + 0x1f8]
0x15361:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x15368:    8b 33                              	mov esi, dword ptr [ebx]
0x1536a:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x1536d:    85 f6                              	test esi, esi
0x1536f:    74 16                              	je 0x15387 <function_15387>
0x15371:    29 f0                              	sub eax, esi
0x15373:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15377:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1537a -- 0x1537b
0x1537a:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1537b -- 0x1537c
; data inside code section at 0x1537c -- 0x15383
0x1537c:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15383 -- 0x15384
; data inside code section at 0x15384 -- 0x15387
0x15384:    ff ff ff                                           |...             |
; function: function_15387 at 0x15387 -- 0x153a3
0x15387:    83 c3 0c                           	add ebx, 0xc
0x1538a:    39 fb                              	cmp ebx, edi
0x1538c:    75 da                              	jne 0x15368
0x1538e:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x15392:    83 c5 04                           	add ebp, 4
0x15395:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x15398:    39 e8                              	cmp eax, ebp
0x1539a:    77 bc                              	ja 0x15358
0x1539c:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x153a0:    8b 51 0c                           	mov edx, dword ptr [ecx + 0xc]
; function: function_153a3 at 0x153a3 -- 0x153ca
0x153a3:    39 d0                              	cmp eax, edx
0x153a5:    0f 84 80 00 00 00                  	je 0x1542b <function_1542b>
0x153ab:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x153af:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x153b2:    8b 18                              	mov ebx, dword ptr [eax]
0x153b4:    39 df                              	cmp edi, ebx
0x153b6:    74 26                              	je 0x153de <function_153de>
0x153b8:    8b 33                              	mov esi, dword ptr [ebx]
0x153ba:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x153bd:    85 f6                              	test esi, esi
0x153bf:    74 16                              	je 0x153d7 <function_153d7>
0x153c1:    29 f0                              	sub eax, esi
0x153c3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x153c7:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x153ca -- 0x153cb
0x153ca:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x153cb -- 0x153cc
; data inside code section at 0x153cc -- 0x153d3
0x153cc:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x153d3 -- 0x153d4
; data inside code section at 0x153d4 -- 0x153d7
0x153d4:    ff ff ff                                           |...             |
; function: function_153d7 at 0x153d7 -- 0x153de
0x153d7:    83 c3 0c                           	add ebx, 0xc
0x153da:    39 df                              	cmp edi, ebx
0x153dc:    75 da                              	jne 0x153b8
; function: function_153de at 0x153de -- 0x15402
0x153de:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x153e2:    8b 3a                              	mov edi, dword ptr [edx]
0x153e4:    8b 5a 04                           	mov ebx, dword ptr [edx + 4]
0x153e7:    39 df                              	cmp edi, ebx
0x153e9:    74 2b                              	je 0x15416 <function_15416>
0x153eb:    90                                 	nop 
0x153ec:    8d 74 26 00                        	lea esi, [esi]
0x153f0:    8b 33                              	mov esi, dword ptr [ebx]
0x153f2:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x153f5:    85 f6                              	test esi, esi
0x153f7:    74 16                              	je 0x1540f <function_1540f>
0x153f9:    29 f0                              	sub eax, esi
0x153fb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x153ff:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x15402 -- 0x15403
0x15402:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x15403 -- 0x15404
; data inside code section at 0x15404 -- 0x1540b
0x15404:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x1540b -- 0x1540c
; data inside code section at 0x1540c -- 0x1540f
0x1540c:    ff ff ff                                           |...             |
; function: function_1540f at 0x1540f -- 0x15416
0x1540f:    83 c3 0c                           	add ebx, 0xc
0x15412:    39 df                              	cmp edi, ebx
0x15414:    75 da                              	jne 0x153f0
; function: function_15416 at 0x15416 -- 0x1542b
0x15416:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1541a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x15421:    75 45                              	jne 0x15468 <function_15468>
0x15423:    83 c4 3c                           	add esp, 0x3c
0x15426:    5b                                 	pop ebx
0x15427:    5e                                 	pop esi
0x15428:    5f                                 	pop edi
0x15429:    5d                                 	pop ebp
0x1542a:    c3                                 	ret 
; function: function_1542b at 0x1542b -- 0x15452
0x1542b:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1542f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15433:    8b 39                              	mov edi, dword ptr [ecx]
0x15435:    8b 18                              	mov ebx, dword ptr [eax]
0x15437:    39 df                              	cmp edi, ebx
0x15439:    74 db                              	je 0x15416 <function_15416>
0x1543b:    90                                 	nop 
0x1543c:    8d 74 26 00                        	lea esi, [esi]
0x15440:    8b 33                              	mov esi, dword ptr [ebx]
0x15442:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x15445:    85 f6                              	test esi, esi
0x15447:    74 16                              	je 0x1545f <function_1545f>
0x15449:    29 f0                              	sub eax, esi
0x1544b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1544f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x15452 -- 0x15453
0x15452:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x15453 -- 0x15454
; data inside code section at 0x15454 -- 0x1545b
0x15454:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x1545b -- 0x1545c
; data inside code section at 0x1545c -- 0x1545f
0x1545c:    ff ff ff                                           |...             |
; function: function_1545f at 0x1545f -- 0x15468
0x1545f:    83 c3 0c                           	add ebx, 0xc
0x15462:    39 df                              	cmp edi, ebx
0x15464:    75 da                              	jne 0x15440
0x15466:    eb ae                              	jmp 0x15416 <function_15416>
; function: function_15468 at 0x15468 -- 0x15469
; dynamically linked function: __stack_chk_fail at 0x15469 -- 0x1546a
; data inside code section at 0x1546a -- 0x1546d
0x1546a:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED2Ev
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED1Ev at 0x15470 -- 0x1550c
0x15470:    83 ec 5c                           	sub esp, 0x5c
0x15473:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x15477:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x1547b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x15481:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x15485:    31 c0                              	xor eax, eax
0x15487:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1548b:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x1548f:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x15492:    8b 6b 18                           	mov ebp, dword ptr [ebx + 0x18]
0x15495:    8b 73 20                           	mov esi, dword ptr [ebx + 0x20]
0x15498:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1549b:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1549f:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x154a2:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x154a5:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x154a9:    8b 7b 1c                           	mov edi, dword ptr [ebx + 0x1c]
0x154ac:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x154b0:    8b 6b 10                           	mov ebp, dword ptr [ebx + 0x10]
0x154b3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x154b7:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x154bb:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x154bf:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x154c3:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x154c7:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x154cb:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x154cf:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x154d3:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x154d7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x154db:    89 1c 24                           	mov dword ptr [esp], ebx
0x154de:    e8 ad 52 01 00                     	call 0x2a790 <function_2a790>
0x154e3:    89 1c 24                           	mov dword ptr [esp], ebx
0x154e6:    e8 35 3c 01 00                     	call 0x29120 <function_29120>
0x154eb:    8b 6c 24 3c                        	mov ebp, dword ptr [esp + 0x3c]
0x154ef:    65 33 2d 14 00 00 00               	xor ebp, dword ptr gs:[0x14]
0x154f6:    75 14                              	jne 0x1550c <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EED1Ev+0x9b>
0x154f8:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x154fc:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x15500:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x15504:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x15508:    83 c4 5c                           	add esp, 0x5c
0x1550b:    c3                                 	ret 
; data inside code section at 0x1550c -- 0x1550d
0x1550c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1550d -- 0x1550e
; data inside code section at 0x1550e -- 0x1551f
0x1550e:    ff ff ff 89 c6 89 1c 24  e8 05 3c 01 00 89 34 24   |.......$..<...4$|
0x1551e:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1551f -- 0x15520
; data inside code section at 0x15520 -- 0x15522
0x15520:    ff ff                                              |..              |
; function: function_15522 at 0x15522 -- 0x15523
; section: .text._ZNSt11_Deque_baseI4CInvSaIS0_EE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseI4CInvSaIS0_EE17_M_initialize_mapEj at 0x15530 -- 0x15579
0x15530:    55                                 	push ebp
0x15531:    ba 93 24 49 92                     	mov edx, 0x92492493
0x15536:    57                                 	push edi
0x15537:    56                                 	push esi
0x15538:    53                                 	push ebx
0x15539:    83 ec 3c                           	sub esp, 0x3c
0x1553c:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x15540:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x15544:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15548:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1554e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x15552:    31 c0                              	xor eax, eax
0x15554:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15558:    d1 e8                              	shr eax, 1
0x1555a:    f7 e2                              	mul edx
0x1555c:    b8 08 00 00 00                     	mov eax, 8
0x15561:    c1 ea 02                           	shr edx, 2
0x15564:    8d 5a 01                           	lea ebx, [edx + 1]
0x15567:    83 c2 03                           	add edx, 3
0x1556a:    83 fa 08                           	cmp edx, 8
0x1556d:    0f 42 d0                           	cmovb edx, eax
0x15570:    89 57 04                           	mov dword ptr [edi + 4], edx
0x15573:    c1 e2 02                           	shl edx, 2
0x15576:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x15579 -- 0x1557a
0x15579:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1557a -- 0x1557b
; data inside code section at 0x1557b -- 0x1557f
0x1557b:    ff ff ff 8b                                        |....            |
; function: function_1557f at 0x1557f -- 0x1558b
0x1557f:    57                                 	push edi
0x15580:    04 29                              	add al, 0x29
0x15582:    da d1                              	fcmovbe st(0), st(1)
0x15584:    ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0x1558b -- 0x15593
0x1558b:    00 39 f5 89 07 73 1b 89                            |.9...s..        |
; function: function_15593 at 0x15593 -- 0x15595
0x15593:    eb 8d                              	jmp 0x15522 <function_15522>
; data inside code section at 0x15595 -- 0x15598
0x15595:    74 26 00                                           |t&.             |
; function: function_15598 at 0x15598 -- 0x15599
; data inside code section at 0x15599 -- 0x155a0
0x15599:    04 24 f8 01 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x155a0 -- 0x155a1
; data inside code section at 0x155a1 -- 0x155a3
0x155a1:    ff ff                                              |..              |
; function: function_155a3 at 0x155a3 -- 0x1560e
0x155a3:    ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0x155a9:    39 de                              	cmp esi, ebx
0x155ab:    77 eb                              	ja 0x15598 <function_15598>
0x155ad:    89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0x155b0:    8b 45 00                           	mov eax, dword ptr [ebp]
0x155b3:    8d 90 f8 01 00 00                  	lea edx, [eax + 0x1f8]
0x155b9:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x155bc:    8d 56 fc                           	lea edx, [esi - 4]
0x155bf:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x155c2:    89 57 24                           	mov dword ptr [edi + 0x24], edx
0x155c5:    8b 4e fc                           	mov ecx, dword ptr [esi - 4]
0x155c8:    89 47 08                           	mov dword ptr [edi + 8], eax
0x155cb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x155cf:    8d 91 f8 01 00 00                  	lea edx, [ecx + 0x1f8]
0x155d5:    d1 e8                              	shr eax, 1
0x155d7:    89 57 20                           	mov dword ptr [edi + 0x20], edx
0x155da:    ba 93 24 49 92                     	mov edx, 0x92492493
0x155df:    f7 e2                              	mul edx
0x155e1:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x155e5:    89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0x155e8:    c1 ea 02                           	shr edx, 2
0x155eb:    6b d2 0e                           	imul edx, edx, 0xe
0x155ee:    29 d0                              	sub eax, edx
0x155f0:    8d 04 c0                           	lea eax, [eax + eax*8]
0x155f3:    8d 04 81                           	lea eax, [ecx + eax*4]
0x155f6:    89 47 18                           	mov dword ptr [edi + 0x18], eax
0x155f9:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x155fd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x15604:    75 2b                              	jne 0x15631 <function_15631>
0x15606:    83 c4 3c                           	add esp, 0x3c
0x15609:    5b                                 	pop ebx
0x1560a:    5e                                 	pop esi
0x1560b:    5f                                 	pop edi
0x1560c:    5d                                 	pop ebp
0x1560d:    c3                                 	ret 
; data inside code section at 0x1560e -- 0x15612
0x1560e:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x15612 -- 0x15613
; data inside code section at 0x15613 -- 0x15624
0x15613:    ff ff ff 39 dd 73 12 8b  45 00 83 c5 04 89 04 24   |...9.s..E......$|
0x15623:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15624 -- 0x15625
; data inside code section at 0x15625 -- 0x15629
0x15625:    ff ff ff 39                                        |...9            |
; function: function_15629 at 0x15629 -- 0x1562b
0x15629:    eb 77                              	jmp 0x156a2
; data inside code section at 0x1562b -- 0x1562d
0x1562b:    ee e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0x1562d -- 0x1562e
; data inside code section at 0x1562e -- 0x15631
0x1562e:    ff ff ff                                           |...             |
; function: function_15631 at 0x15631 -- 0x15632
; dynamically linked function: __stack_chk_fail at 0x15632 -- 0x15633
; data inside code section at 0x15633 -- 0x15637
0x15633:    ff ff ff 89                                        |....            |
; function: function_15637 at 0x15637 -- 0x15638
0x15637:    c3                                 	ret 
; data inside code section at 0x15638 -- 0x15639
0x15638:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x15639 -- 0x1563a
; data inside code section at 0x1563a -- 0x15641
0x1563a:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x15641 -- 0x15642
; data inside code section at 0x15642 -- 0x1564b
0x15642:    ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1564b -- 0x1564c
; data inside code section at 0x1564c -- 0x1565d
0x1564c:    ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0x1565c:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x1565d -- 0x1565e
; data inside code section at 0x1565e -- 0x15660
0x1565e:    ff ff                                              |..              |
; function: function_15660 at 0x15660 -- 0x15661
; data inside code section at 0x15661 -- 0x15662
0x15661:    89                                                 |.               |
; function: function_15662 at 0x15662 -- 0x15663
0x15662:    c3                                 	ret 
; data inside code section at 0x15663 -- 0x15664
0x15663:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x15664 -- 0x15665
; data inside code section at 0x15665 -- 0x1566c
0x15665:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1566c -- 0x1566d
; data inside code section at 0x1566d -- 0x15670
0x1566d:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseI11CNetMessageSaIS0_EE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseI11CNetMessageSaIS0_EE17_M_initialize_mapEj at 0x15670 -- 0x156b4
0x15670:    55                                 	push ebp
0x15671:    57                                 	push edi
0x15672:    56                                 	push esi
0x15673:    53                                 	push ebx
0x15674:    83 ec 3c                           	sub esp, 0x3c
0x15677:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1567b:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x15682:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x15686:    31 d2                              	xor edx, edx
0x15688:    ba cd cc cc cc                     	mov edx, 0xcccccccd
0x1568d:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x15691:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15695:    f7 e2                              	mul edx
0x15697:    b8 08 00 00 00                     	mov eax, 8
0x1569c:    c1 ea 02                           	shr edx, 2
0x1569f:    8d 5a 01                           	lea ebx, [edx + 1]
0x156a2:    83 c2 03                           	add edx, 3
0x156a5:    83 fa 08                           	cmp edx, 8
0x156a8:    0f 42 d0                           	cmovb edx, eax
0x156ab:    89 57 04                           	mov dword ptr [edi + 4], edx
0x156ae:    c1 e2 02                           	shl edx, 2
0x156b1:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x156b4 -- 0x156b5
0x156b4:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x156b5 -- 0x156b6
; data inside code section at 0x156b6 -- 0x156ba
0x156b6:    ff ff ff 8b                                        |....            |
; function: function_156ba at 0x156ba -- 0x156c6
0x156ba:    57                                 	push edi
0x156bb:    04 29                              	add al, 0x29
0x156bd:    da d1                              	fcmovbe st(0), st(1)
0x156bf:    ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0x156c6 -- 0x156ce
0x156c6:    00 39 f5 89 07 73 18 89                            |.9...s..        |
; function: function_156ce at 0x156ce -- 0x156d0
0x156ce:    eb 90                              	jmp 0x15660 <function_15660>
; function: function_156d0 at 0x156d0 -- 0x156d1
; data inside code section at 0x156d1 -- 0x156d8
0x156d1:    04 24 cc 01 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x156d8 -- 0x156d9
; data inside code section at 0x156d9 -- 0x156db
0x156d9:    ff ff                                              |..              |
; function: function_156db at 0x156db -- 0x15743
0x156db:    ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0x156e1:    39 de                              	cmp esi, ebx
0x156e3:    77 eb                              	ja 0x156d0 <function_156d0>
0x156e5:    89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0x156e8:    8b 45 00                           	mov eax, dword ptr [ebp]
0x156eb:    8d 90 cc 01 00 00                  	lea edx, [eax + 0x1cc]
0x156f1:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x156f4:    8d 56 fc                           	lea edx, [esi - 4]
0x156f7:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x156fa:    89 57 24                           	mov dword ptr [edi + 0x24], edx
0x156fd:    8b 4e fc                           	mov ecx, dword ptr [esi - 4]
0x15700:    89 47 08                           	mov dword ptr [edi + 8], eax
0x15703:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15707:    8d 91 cc 01 00 00                  	lea edx, [ecx + 0x1cc]
0x1570d:    89 57 20                           	mov dword ptr [edi + 0x20], edx
0x15710:    ba cd cc cc cc                     	mov edx, 0xcccccccd
0x15715:    f7 e2                              	mul edx
0x15717:    89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0x1571a:    c1 ea 02                           	shr edx, 2
0x1571d:    8d 04 92                           	lea eax, [edx + edx*4]
0x15720:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x15724:    29 c2                              	sub edx, eax
0x15726:    6b c2 5c                           	imul eax, edx, 0x5c
0x15729:    01 c1                              	add ecx, eax
0x1572b:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1572f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x15736:    89 4f 18                           	mov dword ptr [edi + 0x18], ecx
0x15739:    75 2b                              	jne 0x15766 <function_15766>
0x1573b:    83 c4 3c                           	add esp, 0x3c
0x1573e:    5b                                 	pop ebx
0x1573f:    5e                                 	pop esi
0x15740:    5f                                 	pop edi
0x15741:    5d                                 	pop ebp
0x15742:    c3                                 	ret 
; data inside code section at 0x15743 -- 0x15747
0x15743:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x15747 -- 0x15748
; data inside code section at 0x15748 -- 0x15759
0x15748:    ff ff ff 39 dd 73 12 8b  45 00 83 c5 04 89 04 24   |...9.s..E......$|
0x15758:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15759 -- 0x1575a
; data inside code section at 0x1575a -- 0x1575e
0x1575a:    ff ff ff 39                                        |...9            |
; function: function_1575e at 0x1575e -- 0x15760
0x1575e:    eb 77                              	jmp 0x157d7
; data inside code section at 0x15760 -- 0x15762
0x15760:    ee e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0x15762 -- 0x15763
; data inside code section at 0x15763 -- 0x15766
0x15763:    ff ff ff                                           |...             |
; function: function_15766 at 0x15766 -- 0x15767
; dynamically linked function: __stack_chk_fail at 0x15767 -- 0x15768
; data inside code section at 0x15768 -- 0x1576c
0x15768:    ff ff ff 89                                        |....            |
; function: function_1576c at 0x1576c -- 0x1576d
0x1576c:    c3                                 	ret 
; data inside code section at 0x1576d -- 0x1576e
0x1576d:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1576e -- 0x1576f
; data inside code section at 0x1576f -- 0x15776
0x1576f:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x15776 -- 0x15777
; data inside code section at 0x15777 -- 0x15780
0x15777:    ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x15780 -- 0x15781
; data inside code section at 0x15781 -- 0x15792
0x15781:    ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0x15791:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x15792 -- 0x15793
; data inside code section at 0x15793 -- 0x15797
0x15793:    ff ff ff 89                                        |....            |
; function: function_15797 at 0x15797 -- 0x15798
0x15797:    c3                                 	ret 
; data inside code section at 0x15798 -- 0x15799
0x15798:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x15799 -- 0x1579a
; data inside code section at 0x1579a -- 0x157a1
0x1579a:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x157a1 -- 0x157a2
; data inside code section at 0x157a2 -- 0x157a5
0x157a2:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeI11CNetMessageSaIS0_EE19_M_destroy_data_auxESt15_Deque_iteratorIS0_RS0_PS0_ES6_
; function: _ZNSt5dequeI11CNetMessageSaIS0_EE19_M_destroy_data_auxESt15_Deque_iteratorIS0_RS0_PS0_ES6_ at 0x157b0 -- 0x1580b
0x157b0:    55                                 	push ebp
0x157b1:    57                                 	push edi
0x157b2:    56                                 	push esi
0x157b3:    53                                 	push ebx
0x157b4:    83 ec 3c                           	sub esp, 0x3c
0x157b7:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x157bb:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x157bf:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x157c6:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x157ca:    31 c9                              	xor ecx, ecx
0x157cc:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x157d0:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x157d4:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x157d7:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x157db:    8b 41 0c                           	mov eax, dword ptr [ecx + 0xc]
0x157de:    8d 6a 04                           	lea ebp, [edx + 4]
0x157e1:    39 c5                              	cmp ebp, eax
0x157e3:    73 6f                              	jae 0x15854 <function_15854>
0x157e5:    8d 76 00                           	lea esi, [esi]
0x157e8:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x157eb:    8d bb cc 01 00 00                  	lea edi, [ebx + 0x1cc]
0x157f1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x157f8:    8b 73 3c                           	mov esi, dword ptr [ebx + 0x3c]
0x157fb:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x157fe:    85 f6                              	test esi, esi
0x15800:    74 16                              	je 0x15818 <function_15818>
0x15802:    29 f0                              	sub eax, esi
0x15804:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15808:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1580b -- 0x1580c
0x1580b:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1580c -- 0x1580d
; data inside code section at 0x1580d -- 0x15814
0x1580d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15814 -- 0x15815
; data inside code section at 0x15815 -- 0x15818
0x15815:    ff ff ff                                           |...             |
; function: function_15818 at 0x15818 -- 0x1582b
0x15818:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x1581b:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1581e:    85 f6                              	test esi, esi
0x15820:    74 16                              	je 0x15838 <function_15838>
0x15822:    29 f0                              	sub eax, esi
0x15824:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15828:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1582b -- 0x1582c
0x1582b:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1582c -- 0x1582d
; data inside code section at 0x1582d -- 0x15834
0x1582d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15834 -- 0x15835
; data inside code section at 0x15835 -- 0x15838
0x15835:    ff ff ff                                           |...             |
; function: function_15838 at 0x15838 -- 0x15854
0x15838:    83 c3 5c                           	add ebx, 0x5c
0x1583b:    39 fb                              	cmp ebx, edi
0x1583d:    75 b9                              	jne 0x157f8
0x1583f:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x15843:    83 c5 04                           	add ebp, 4
0x15846:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x15849:    39 e8                              	cmp eax, ebp
0x1584b:    77 9b                              	ja 0x157e8
0x1584d:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x15851:    8b 51 0c                           	mov edx, dword ptr [ecx + 0xc]
; function: function_15854 at 0x15854 -- 0x15883
0x15854:    39 d0                              	cmp eax, edx
0x15856:    0f 84 cc 00 00 00                  	je 0x15928 <function_15928>
0x1585c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15860:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x15863:    8b 18                              	mov ebx, dword ptr [eax]
0x15865:    39 df                              	cmp edi, ebx
0x15867:    74 4e                              	je 0x158b7 <function_158b7>
0x15869:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x15870:    8b 73 3c                           	mov esi, dword ptr [ebx + 0x3c]
0x15873:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x15876:    85 f6                              	test esi, esi
0x15878:    74 16                              	je 0x15890 <function_15890>
0x1587a:    29 f0                              	sub eax, esi
0x1587c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15880:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x15883 -- 0x15884
0x15883:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x15884 -- 0x15885
; data inside code section at 0x15885 -- 0x1588c
0x15885:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x1588c -- 0x1588d
; data inside code section at 0x1588d -- 0x15890
0x1588d:    ff ff ff                                           |...             |
; function: function_15890 at 0x15890 -- 0x158a3
0x15890:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x15893:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x15896:    85 f6                              	test esi, esi
0x15898:    74 16                              	je 0x158b0 <function_158b0>
0x1589a:    29 f0                              	sub eax, esi
0x1589c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x158a0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x158a3 -- 0x158a4
0x158a3:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x158a4 -- 0x158a5
; data inside code section at 0x158a5 -- 0x158ac
0x158a5:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x158ac -- 0x158ad
; data inside code section at 0x158ad -- 0x158b0
0x158ad:    ff ff ff                                           |...             |
; function: function_158b0 at 0x158b0 -- 0x158b7
0x158b0:    83 c3 5c                           	add ebx, 0x5c
0x158b3:    39 df                              	cmp edi, ebx
0x158b5:    75 b9                              	jne 0x15870
; function: function_158b7 at 0x158b7 -- 0x158db
0x158b7:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x158bb:    8b 3a                              	mov edi, dword ptr [edx]
0x158bd:    8b 5a 04                           	mov ebx, dword ptr [edx + 4]
0x158c0:    39 df                              	cmp edi, ebx
0x158c2:    74 4b                              	je 0x1590f <function_1590f>
0x158c4:    8d 74 26 00                        	lea esi, [esi]
0x158c8:    8b 73 3c                           	mov esi, dword ptr [ebx + 0x3c]
0x158cb:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x158ce:    85 f6                              	test esi, esi
0x158d0:    74 16                              	je 0x158e8 <function_158e8>
0x158d2:    29 f0                              	sub eax, esi
0x158d4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x158d8:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x158db -- 0x158dc
0x158db:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x158dc -- 0x158dd
; data inside code section at 0x158dd -- 0x158e4
0x158dd:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x158e4 -- 0x158e5
; data inside code section at 0x158e5 -- 0x158e8
0x158e5:    ff ff ff                                           |...             |
; function: function_158e8 at 0x158e8 -- 0x158fb
0x158e8:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x158eb:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x158ee:    85 f6                              	test esi, esi
0x158f0:    74 16                              	je 0x15908 <function_15908>
0x158f2:    29 f0                              	sub eax, esi
0x158f4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x158f8:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x158fb -- 0x158fc
0x158fb:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x158fc -- 0x158fd
; data inside code section at 0x158fd -- 0x15904
0x158fd:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15904 -- 0x15905
; data inside code section at 0x15905 -- 0x15908
0x15905:    ff ff ff                                           |...             |
; function: function_15908 at 0x15908 -- 0x1590f
0x15908:    83 c3 5c                           	add ebx, 0x5c
0x1590b:    39 df                              	cmp edi, ebx
0x1590d:    75 b9                              	jne 0x158c8
; function: function_1590f at 0x1590f -- 0x15928
0x1590f:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x15913:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1591a:    0f 85 8b 00 00 00                  	jne 0x159ab <function_159ab>
0x15920:    83 c4 3c                           	add esp, 0x3c
0x15923:    5b                                 	pop ebx
0x15924:    5e                                 	pop esi
0x15925:    5f                                 	pop edi
0x15926:    5d                                 	pop ebp
0x15927:    c3                                 	ret 
; function: function_15928 at 0x15928 -- 0x1594b
0x15928:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1592c:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x15930:    8b 39                              	mov edi, dword ptr [ecx]
0x15932:    8b 18                              	mov ebx, dword ptr [eax]
0x15934:    39 df                              	cmp edi, ebx
0x15936:    74 d7                              	je 0x1590f <function_1590f>
0x15938:    8b 73 3c                           	mov esi, dword ptr [ebx + 0x3c]
0x1593b:    8b 43 44                           	mov eax, dword ptr [ebx + 0x44]
0x1593e:    85 f6                              	test esi, esi
0x15940:    74 16                              	je 0x15958 <function_15958>
0x15942:    29 f0                              	sub eax, esi
0x15944:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15948:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1594b -- 0x1594c
0x1594b:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1594c -- 0x1594d
; data inside code section at 0x1594d -- 0x15954
0x1594d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15954 -- 0x15955
; data inside code section at 0x15955 -- 0x15958
0x15955:    ff ff ff                                           |...             |
; function: function_15958 at 0x15958 -- 0x1596b
0x15958:    8b 73 04                           	mov esi, dword ptr [ebx + 4]
0x1595b:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1595e:    85 f6                              	test esi, esi
0x15960:    74 16                              	je 0x15978 <function_15978>
0x15962:    29 f0                              	sub eax, esi
0x15964:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15968:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1596b -- 0x1596c
0x1596b:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1596c -- 0x1596d
; data inside code section at 0x1596d -- 0x15974
0x1596d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15974 -- 0x15975
; data inside code section at 0x15975 -- 0x15978
0x15975:    ff ff ff                                           |...             |
; function: function_15978 at 0x15978 -- 0x15981
0x15978:    83 c3 5c                           	add ebx, 0x5c
0x1597b:    39 df                              	cmp edi, ebx
0x1597d:    75 b9                              	jne 0x15938
0x1597f:    eb 8e                              	jmp 0x1590f <function_1590f>
; data inside code section at 0x15981 -- 0x15984
0x15981:    89 c6 83                                           |...             |
; function: function_15984 at 0x15984 -- 0x15985
0x15984:    c3                                 	ret 
; data inside code section at 0x15985 -- 0x15992
0x15985:    04 89 1c 24 e8 e2 23 01  00 89 34 24 e8            |...$..#...4$.   |
; dynamically linked function: _Unwind_Resume at 0x15992 -- 0x15993
; data inside code section at 0x15993 -- 0x15999
0x15993:    ff ff ff 89 c6 83                                  |......          |
; function: function_15999 at 0x15999 -- 0x1599a
0x15999:    c3                                 	ret 
; data inside code section at 0x1599a -- 0x159a7
0x1599a:    04 89 1c 24 e8 cd 23 01  00 89 34 24 e8            |...$..#...4$.   |
; dynamically linked function: _Unwind_Resume at 0x159a7 -- 0x159a8
; data inside code section at 0x159a8 -- 0x159ab
0x159a8:    ff ff ff                                           |...             |
; function: function_159ab at 0x159ab -- 0x159ac
; dynamically linked function: __stack_chk_fail at 0x159ac -- 0x159ad
; data inside code section at 0x159ad -- 0x159b3
0x159ad:    ff ff ff 89 c6 83                                  |......          |
; function: function_159b3 at 0x159b3 -- 0x159b4
0x159b3:    c3                                 	ret 
; data inside code section at 0x159b4 -- 0x159c1
0x159b4:    04 89 1c 24 e8 b3 23 01  00 89 34 24 e8            |...$..#...4$.   |
; dynamically linked function: _Unwind_Resume at 0x159c1 -- 0x159c2
; data inside code section at 0x159c2 -- 0x159c8
0x159c2:    ff ff ff 89 c6 83                                  |......          |
; function: function_159c8 at 0x159c8 -- 0x159c9
0x159c8:    c3                                 	ret 
; data inside code section at 0x159c9 -- 0x159d6
0x159c9:    04 89 1c 24 e8 9e 23 01  00 89 34 24 e8            |...$..#...4$.   |
; dynamically linked function: _Unwind_Resume at 0x159d6 -- 0x159d7
; data inside code section at 0x159d7 -- 0x159da
0x159d7:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeI11CNetMessageSaIS0_EED2Ev
; function: _ZNSt5dequeI11CNetMessageSaIS0_EED1Ev at 0x159e0 -- 0x15a7c
0x159e0:    83 ec 5c                           	sub esp, 0x5c
0x159e3:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x159e7:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x159eb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x159f1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x159f5:    31 c0                              	xor eax, eax
0x159f7:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x159fb:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x159ff:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x15a02:    8b 6b 18                           	mov ebp, dword ptr [ebx + 0x18]
0x15a05:    8b 73 20                           	mov esi, dword ptr [ebx + 0x20]
0x15a08:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x15a0b:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x15a0f:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x15a12:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x15a15:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x15a19:    8b 7b 1c                           	mov edi, dword ptr [ebx + 0x1c]
0x15a1c:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x15a20:    8b 6b 10                           	mov ebp, dword ptr [ebx + 0x10]
0x15a23:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x15a27:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x15a2b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x15a2f:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x15a33:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x15a37:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x15a3b:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x15a3f:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x15a43:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x15a47:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15a4b:    89 1c 24                           	mov dword ptr [esp], ebx
0x15a4e:    e8 3d 57 01 00                     	call 0x2b190 <function_2b190>
0x15a53:    89 1c 24                           	mov dword ptr [esp], ebx
0x15a56:    e8 a5 3c 01 00                     	call 0x29700 <function_29700>
0x15a5b:    8b 6c 24 3c                        	mov ebp, dword ptr [esp + 0x3c]
0x15a5f:    65 33 2d 14 00 00 00               	xor ebp, dword ptr gs:[0x14]
0x15a66:    75 14                              	jne 0x15a7c <_ZNSt5dequeI11CNetMessageSaIS0_EED1Ev+0x9b>
0x15a68:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x15a6c:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x15a70:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x15a74:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x15a78:    83 c4 5c                           	add esp, 0x5c
0x15a7b:    c3                                 	ret 
; data inside code section at 0x15a7c -- 0x15a7d
0x15a7c:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x15a7d -- 0x15a7e
; data inside code section at 0x15a7e -- 0x15a8f
0x15a7e:    ff ff ff 89 c6 89 1c 24  e8 75 3c 01 00 89 34 24   |.......$.u<...4$|
0x15a8e:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x15a8f -- 0x15a90
; data inside code section at 0x15a90 -- 0x15a93
0x15a90:    ff ff ff                                           |...             |
; section: .text._ZN5CNodeD2Ev
; function: _ZN5CNodeD1Ev at 0x15aa0 -- 0x15ac5
0x15aa0:    55                                 	push ebp
0x15aa1:    57                                 	push edi
0x15aa2:    56                                 	push esi
0x15aa3:    53                                 	push ebx
0x15aa4:    83 ec 6c                           	sub esp, 0x6c
0x15aa7:    8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x15aae:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x15ab4:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x15ab8:    31 c0                              	xor eax, eax
0x15aba:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x15abd:    83 f8 ff                           	cmp eax, -1
0x15ac0:    74 0f                              	je 0x15ad1 <function_15ad1>
0x15ac2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x15ac5 -- 0x15ac6
0x15ac5:    e8                                                 |.               |
; dynamically linked function: close at 0x15ac6 -- 0x15ac7
; data inside code section at 0x15ac7 -- 0x15ad1
0x15ac7:    ff ff ff c7 43 08 ff ff  ff ff                     |....C.....      |
; function: function_15ad1 at 0x15ad1 -- 0x15ae4
0x15ad1:    8b b3 30 02 00 00                  	mov esi, dword ptr [ebx + 0x230]
0x15ad7:    85 f6                              	test esi, esi
0x15ad9:    74 16                              	je 0x15af1 <function_15af1>
0x15adb:    8b 06                              	mov eax, dword ptr [esi]
0x15add:    85 c0                              	test eax, eax
0x15adf:    74 08                              	je 0x15ae9 <function_15ae9>
0x15ae1:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x15ae4 -- 0x15ae5
0x15ae4:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15ae5 -- 0x15ae6
; data inside code section at 0x15ae6 -- 0x15ae9
0x15ae6:    ff ff ff                                           |...             |
; function: function_15ae9 at 0x15ae9 -- 0x15aec
0x15ae9:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x15aec -- 0x15aed
0x15aec:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15aed -- 0x15aee
; data inside code section at 0x15aee -- 0x15af1
0x15aee:    ff ff ff                                           |...             |
; function: function_15af1 at 0x15af1 -- 0x15b12
0x15af1:    8b 83 74 03 00 00                  	mov eax, dword ptr [ebx + 0x374]
0x15af7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x15afb:    8d 83 6c 03 00 00                  	lea eax, [ebx + 0x36c]
0x15b01:    89 04 24                           	mov dword ptr [esp], eax
0x15b04:    e8 d7 3e 01 00                     	call 0x299e0 <function_299e0>
0x15b09:    8d 83 18 03 00 00                  	lea eax, [ebx + 0x318]
0x15b0f:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x15b12 -- 0x15b13
0x15b12:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x15b13 -- 0x15b14
; data inside code section at 0x15b14 -- 0x15b29
0x15b14:    ff ff ff 85 c0 0f 85 68  03 00 00 8d 83 30 03 00   |.......h.....0..|
0x15b24:    00 89 04 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x15b29 -- 0x15b2a
; data inside code section at 0x15b2a -- 0x15b43
0x15b2a:    ff ff ff 85 c0 0f 85 2e  03 00 00 8b 83 0c 03 00   |................|
0x15b3a:    00 85 c0 74 08 89 04 24  e8                        |...t...$.       |
; dynamically linked function: _ZdlPv at 0x15b43 -- 0x15b44
; data inside code section at 0x15b44 -- 0x15b71
0x15b44:    ff ff ff 8b 83 e0 02 00  00 85 c0 74 36 8b bb 04   |...........t6...|
0x15b54:    03 00 00 8b b3 f4 02 00  00 83 c7 04 39 f7 76 1b   |............9.v.|
0x15b64:    8d 74 26 00 8b 06 83 c6  04 89 04 24 e8            |.t&........$.   |
; dynamically linked function: _ZdlPv at 0x15b71 -- 0x15b72
; data inside code section at 0x15b72 -- 0x15b83
0x15b72:    ff ff ff 39 f7 77 ef 8b  83 e0 02 00 00 89 04 24   |...9.w.........$|
0x15b82:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15b83 -- 0x15b84
; data inside code section at 0x15b84 -- 0x15b9e
0x15b84:    ff ff ff 8b 83 d0 02 00  00 89 44 24 04 8d 83 c8   |..........D$....|
0x15b94:    02 00 00 89 04 24 e8 61  3d 01                     |.....$.a=.      |
; function: function_15b9e at 0x15b9e -- 0x15bb8
0x15b9e:    00 8b 83 b8 02 00                  	add byte ptr [ebx + 0x2b883], cl
0x15ba4:    00 89 44 24 04 8d                  	add byte ptr [ecx - 0x72fbdbbc], cl
0x15baa:    83 b0 02 00 00 89 04               	xor dword ptr [eax - 0x76fffffe], 4
0x15bb1:    24 e8                              	and al, 0xe8
0x15bb3:    e9 3c 01 00 8b                     	jmp 0x8b015cf4 <function_8b015cf4>
; data inside code section at 0x15bb8 -- 0x15bdd
0x15bb8:    83 9c 02 00 00 89 44 24  04 8d 83 94 02 00 00 89   |......D$........|
0x15bc8:    04 24 e8 71 3c 01 00 8b  83 88 02 00 00 85 c0 74   |.$.q<..........t|
0x15bd8:    08 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x15bdd -- 0x15bde
; data inside code section at 0x15bde -- 0x15beb
0x15bde:    ff ff ff 8d 83 dc 01 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: pthread_mutex_destroy at 0x15beb -- 0x15bec
; data inside code section at 0x15bec -- 0x15c01
0x15bec:    ff ff ff 85 c0 0f 85 90  02 00 00 8d 83 f4 01 00   |................|
0x15bfc:    00 89 04 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x15c01 -- 0x15c02
; data inside code section at 0x15c02 -- 0x15c1a
0x15c02:    ff ff ff 85 c0 0f 85 56  02 00 00 80 bb d8 01 00   |.......V........|
0x15c12:    00 00 0f 85 be 01 00 00                            |........        |
; function: function_15c1a at 0x15c1a -- 0x15c1b
; data inside code section at 0x15c1b -- 0x15c24
0x15c1b:    83 c8 01 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x15c24 -- 0x15c25
; data inside code section at 0x15c25 -- 0x15c32
0x15c25:    ff ff ff 8d 83 ac 01 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0x15c32 -- 0x15c33
; data inside code section at 0x15c33 -- 0x15c40
0x15c33:    ff ff ff 8d 83 04 01 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: pthread_mutex_destroy at 0x15c40 -- 0x15c41
; data inside code section at 0x15c41 -- 0x15c56
0x15c41:    ff ff ff 85 c0 0f 85 3b  02 00 00 8d 83 1c 01 00   |.......;........|
0x15c51:    00 89 04 24 e8                                     |...$.           |
; dynamically linked function: pthread_cond_destroy at 0x15c56 -- 0x15c57
; data inside code section at 0x15c57 -- 0x15d01
0x15c57:    ff ff ff 85 c0 0f 85 01  02 00 00 8b 83 e8 00 00   |................|
0x15c67:    00 8b ab f4 00 00 00 8b  b3 fc 00 00 00 8b bb f8   |................|
0x15c77:    00 00 00 89 44 24 20 8b  83 f0 00 00 00 8b 8b 00   |....D$ .........|
0x15c87:    01 00 00 8b 93 e4 00 00  00 89 6c 24 2c 8b ab ec   |..........l$,...|
0x15c97:    00 00 00 89 44 24 28 8d  44 24 2c 89 74 24 34 8d   |....D$(.D$,.t$4.|
0x15ca7:    b3 dc 00 00 00 89 44 24  08 8d 44 24 1c 89 7c 24   |......D$..D$..|$|
0x15cb7:    30 89 4c 24 38 89 54 24  1c 89 6c 24 24 89 44 24   |0.L$8.T$..l$$.D$|
0x15cc7:    04 89 34 24 e8 80 55 01  00 89 34 24 e8 e8 3a 01   |..4$..U...4$..:.|
0x15cd7:    00 8b 83 b4 00 00 00 85  c0 74 35 8b bb d8 00 00   |.........t5.....|
0x15ce7:    00 8b b3 c8 00 00 00 83  c7 04 39 f7 76 1a 8d 76   |..........9.v..v|
0x15cf7:    00 8b 06 83 c6 04 89 04  24 e8                     |........$.      |
; dynamically linked function: _ZdlPv at 0x15d01 -- 0x15d02
; data inside code section at 0x15d02 -- 0x15d13
0x15d02:    ff ff ff 39 f7 77 ef 8b  83 b4 00 00 00 89 04 24   |...9.w.........$|
0x15d12:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15d13 -- 0x15d14
; data inside code section at 0x15d14 -- 0x15d1e
0x15d14:    ff ff ff 8d 43 60 89 04  24 e8                     |....C`..$.      |
; dynamically linked function: pthread_mutex_destroy at 0x15d1e -- 0x15d1f
; data inside code section at 0x15d1f -- 0x15d31
0x15d1f:    ff ff ff 85 c0 0f 85 5d  01 00 00 8d 43 78 89 04   |.......]....Cx..|
0x15d2f:    24 e8                                              |$.              |
; dynamically linked function: pthread_cond_destroy at 0x15d31 -- 0x15d32
; data inside code section at 0x15d32 -- 0x15dac
0x15d32:    ff ff ff 85 c0 0f 85 26  01 00 00 8b 43 44 8b 6b   |.......&....CD.k|
0x15d42:    50 8b 73 58 8b 7b 54 89  44 24 40 8b 43 4c 8b 4b   |P.sX.{T.D$@.CL.K|
0x15d52:    5c 8b 53 40 89 6c 24 4c  8b 6b 48 89 44 24 48 8d   |\.S@.l$L.kH.D$H.|
0x15d62:    44 24 4c 89 74 24 54 8d  73 38 89 44 24 08 8d 44   |D$L.t$T.s8.D$..D|
0x15d72:    24 3c 89 7c 24 50 89 4c  24 58 89 54 24 3c 89 6c   |$<.|$P.L$X.T$<.l|
0x15d82:    24 44 89 44 24 04 89 34  24 e8 30 50 01 00 89 34   |$D.D$..4$.0P...4|
0x15d92:    24 e8 b8 39 01 00 8b 73  0c 8b 43 14 85 f6 74 16   |$..9...s..C...t.|
0x15da2:    29 f0 89 44 24 04 89 34  24 e8                     |)..D$..4$.      |
; dynamically linked function: OPENSSL_cleanse at 0x15dac -- 0x15dad
; data inside code section at 0x15dad -- 0x15db4
0x15dad:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x15db4 -- 0x15db5
; data inside code section at 0x15db5 -- 0x15db7
0x15db5:    ff ff                                              |..              |
; function: function_15db7 at 0x15db7 -- 0x15dd1
0x15db7:    ff 8b 6c 24 5c 65                  	dec dword ptr [ebx + 0x655c246c]
0x15dbd:    33 2d 14 00 00 00                  	xor ebp, dword ptr [0x14]
0x15dc3:    0f 85 6e 01 00 00                  	jne 0x15f37 <function_15f37>
0x15dc9:    83 c4 6c                           	add esp, 0x6c
0x15dcc:    5b                                 	pop ebx
0x15dcd:    5e                                 	pop esi
0x15dce:    5f                                 	pop edi
0x15dcf:    5d                                 	pop ebp
0x15dd0:    c3                                 	ret 
; data inside code section at 0x15dd1 -- 0x15dd8
0x15dd1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_15dd8 at 0x15dd8 -- 0x15df2
0x15dd8:    8b 83 d4 01 00 00                  	mov eax, dword ptr [ebx + 0x1d4]
0x15dde:    89 04 24                           	mov dword ptr [esp], eax
0x15de1:    e8 4a 18 01 00                     	call 0x27630 <function_27630>
0x15de6:    c6 83 d8 01 00 00 00               	mov byte ptr [ebx + 0x1d8], 0
0x15ded:    e9 28 fe ff ff                     	jmp 0x15c1a <function_15c1a>
; data inside code section at 0x15df2 -- 0x15df4
0x15df2:    89 c6                                              |..              |
; function: function_15df4 at 0x15df4 -- 0x15df5
; data inside code section at 0x15df5 -- 0x15dfe
0x15df5:    83 c8 01 00 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZNSsD1Ev at 0x15dfe -- 0x15dff
; data inside code section at 0x15dff -- 0x15e0c
0x15dff:    ff ff ff 8d 83 ac 01 00  00 89 04 24 e8            |...........$.   |
; dynamically linked function: _ZNSsD1Ev at 0x15e0c -- 0x15e0d
; data inside code section at 0x15e0d -- 0x15e2c
0x15e0d:    ff ff ff 8d 83 04 01 00  00 89 04 24 e8 42 e4 00   |...........$.B..|
0x15e1d:    00 8d 83 dc 00 00 00 89  04 24 e8 54 56 01 00      |.........$.TV.. |
; function: function_15e2c at 0x15e2c -- 0x15e2d
; data inside code section at 0x15e2d -- 0x15e50
0x15e2d:    83 b4 00 00 00 89 04 24  e8 b6 26 01 00 8d 43 60   |.......$..&...C`|
0x15e3d:    89 04 24 e8 1b e4 00 00  8d 43 38 89 04 24 e8 c0   |..$......C8..$..|
0x15e4d:    50 01 00                                           |P..             |
; function: function_15e50 at 0x15e50 -- 0x15e51
; function: function_15e51 at 0x15e51 -- 0x15e52
0x15e51:    c3                                 	ret 
; data inside code section at 0x15e52 -- 0x15e5f
0x15e52:    0c 89 1c 24 e8 05 22 01  00 89 34 24 e8            |...$.."...4$.   |
; dynamically linked function: _Unwind_Resume at 0x15e5f -- 0x15e60
; data inside code section at 0x15e60 -- 0x15e83
0x15e60:    ff ff ff c7 44 24 0c 00  7a 02 00 c7 44 24 08 5e   |....D$..z...D$.^|
0x15e70:    00 00 00 c7 44 24 04 98  d5 00 00 c7 04 24 51 9f   |....D$.......$Q.|
0x15e80:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x15e83 -- 0x15e84
; data inside code section at 0x15e84 -- 0x15ec2
0x15e84:    ff ff ff e8 be dd 00 00  89 c6 8b 83 74 03 00 00   |............t...|
0x15e94:    89 44 24 04 8d 83 6c 03  00 00 89 04 24 e8 3a 3b   |.D$...l.....$.:;|
0x15ea4:    01 00 8d 83 18 03 00 00  89 04 24 e8 ac e3 00 00   |..........$.....|
0x15eb4:    8b 93 0c 03 00 00 85 d2  74 08 89 14 24 e8         |........t...$.  |
; dynamically linked function: _ZdlPv at 0x15ec2 -- 0x15ec3
; data inside code section at 0x15ec3 -- 0x15f12
0x15ec3:    ff ff ff 8d 83 c8 02 00  00 89 04 24 e8 8c 3a 01   |...........$..:.|
0x15ed3:    00 8b 83 b8 02 00 00 89  44 24 04 8d 83 b0 02 00   |........D$......|
0x15ee3:    00 89 04 24 e8 b4 39 01  00 8b 83 9c 02 00 00 89   |...$..9.........|
0x15ef3:    44 24 04 8d 83 94 02 00  00 89 04 24 e8 3c 39 01   |D$.........$.<9.|
0x15f03:    00 8b 93 88 02 00 00 85  d2 74 08 89 14 24 e8      |.........t...$. |
; dynamically linked function: _ZdlPv at 0x15f12 -- 0x15f13
; data inside code section at 0x15f13 -- 0x15f15
0x15f13:    ff ff                                              |..              |
; function: function_15f15 at 0x15f15 -- 0x15f37
0x15f15:    ff 8d 83 dc 01 00                  	dec dword ptr [ebp + 0x1dc83]
0x15f1b:    00 89 04 24 e8 3c                  	add byte ptr [ecx + 0x3ce82404], cl
0x15f21:    e3 00                              	jecxz 0x15f23 <function_15f15+0xe>
0x15f23:    00 8d 83 d4 01 00                  	add byte ptr [ebp + 0x1d483], cl
0x15f29:    00 89 04 24 e8 be                  	add byte ptr [ecx - 0x4117dbfc], cl
0x15f2f:    17                                 	pop ss
0x15f30:    01 00                              	add dword ptr [eax], eax
0x15f32:    e9 bd fe ff ff                     	jmp 0x15df4 <function_15df4>
; function: function_15f37 at 0x15f37 -- 0x15f38
; dynamically linked function: __stack_chk_fail at 0x15f38 -- 0x15f39
; data inside code section at 0x15f39 -- 0x15f3b
0x15f39:    ff ff                                              |..              |
; function: function_15f3b at 0x15f3b -- 0x15f4d
0x15f3b:    ff 89 c7 89 34 24                  	dec dword ptr [ecx + 0x243489c7]
0x15f41:    89 fe                              	mov esi, edi
0x15f43:    e8 08 38 01 00                     	call 0x29750 <function_29750>
0x15f48:    e9 03 ff ff ff                     	jmp 0x15e50 <function_15e50>
; function: function_15f4d at 0x15f4d -- 0x15f5e
0x15f4d:    89 c7                              	mov edi, eax
0x15f4f:    89 34 24                           	mov dword ptr [esp], esi
0x15f52:    89 fe                              	mov esi, edi
0x15f54:    e8 67 38 01 00                     	call 0x297c0 <function_297c0>
0x15f59:    e9 ce fe ff ff                     	jmp 0x15e2c <function_15e2c>
; section: .text._ZN11CNetCleanupD2Ev
; function: _ZN11CNetCleanupD1Ev at 0x15f60 -- 0x15f95
0x15f60:    57                                 	push edi
0x15f61:    56                                 	push esi
0x15f62:    53                                 	push ebx
0x15f63:    83 ec 20                           	sub esp, 0x20
0x15f66:    8b 35 74 a1 00 00                  	mov esi, dword ptr [0xa174] ; "rg"
0x15f6c:    8b 3d 78 a1 00 00                  	mov edi, dword ptr [0xa178] ; "4.208.43.192"
0x15f72:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x15f78:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x15f7c:    31 c0                              	xor eax, eax
0x15f7e:    39 fe                              	cmp esi, edi
0x15f80:    74 26                              	je 0x15fa8 <function_15fa8>
0x15f82:    8d b6 00 00 00 00                  	lea esi, [esi]
0x15f88:    8b 1e                              	mov ebx, dword ptr [esi]
0x15f8a:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x15f8d:    83 f8 ff                           	cmp eax, -1
0x15f90:    74 0f                              	je 0x15fa1 <function_15fa1>
0x15f92:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x15f95 -- 0x15f96
0x15f95:    e8                                                 |.               |
; dynamically linked function: close at 0x15f96 -- 0x15f97
; data inside code section at 0x15f97 -- 0x15fa1
0x15f97:    ff ff ff c7 43 08 ff ff  ff ff                     |....C.....      |
; function: function_15fa1 at 0x15fa1 -- 0x15fa8
0x15fa1:    83 c6 04                           	add esi, 4
0x15fa4:    39 f7                              	cmp edi, esi
0x15fa6:    75 e0                              	jne 0x15f88
; function: function_15fa8 at 0x15fa8 -- 0x15feb
0x15fa8:    8b 1d 20 a3 00 00                  	mov ebx, dword ptr [0xa320]
0x15fae:    8b 35 24 a3 00 00                  	mov esi, dword ptr [0xa324]
0x15fb4:    39 f3                              	cmp ebx, esi
0x15fb6:    74 12                              	je 0x15fca <function_15fa8+0x22>
0x15fb8:    8b 03                              	mov eax, dword ptr [ebx]
0x15fba:    83 f8 ff                           	cmp eax, -1
0x15fbd:    0f 85 3d 01 00 00                  	jne 0x16100 <function_16100>
0x15fc3:    83 c3 04                           	add ebx, 4
0x15fc6:    39 de                              	cmp esi, ebx
0x15fc8:    75 ee                              	jne 0x15fb8 <function_15fa8+0x10>
0x15fca:    8b 35 74 a1 00 00                  	mov esi, dword ptr [0xa174] ; "rg"
0x15fd0:    8b 3d 78 a1 00 00                  	mov edi, dword ptr [0xa178] ; "4.208.43.192"
0x15fd6:    39 fe                              	cmp esi, edi
0x15fd8:    74 1d                              	je 0x15ff7 <function_15ff7>
0x15fda:    8b 1e                              	mov ebx, dword ptr [esi]
0x15fdc:    85 db                              	test ebx, ebx
0x15fde:    74 10                              	je 0x15ff0 <function_15ff0>
0x15fe0:    89 1c 24                           	mov dword ptr [esp], ebx
0x15fe3:    e8 18 5a 01 00                     	call 0x2ba00 <function_2ba00>
0x15fe8:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x15feb -- 0x15fec
0x15feb:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x15fec -- 0x15fed
; data inside code section at 0x15fed -- 0x15ff0
0x15fed:    ff ff ff                                           |...             |
; function: function_15ff0 at 0x15ff0 -- 0x15ff7
0x15ff0:    83 c6 04                           	add esi, 4
0x15ff3:    39 f7                              	cmp edi, esi
0x15ff5:    75 e3                              	jne 0x15fda
; function: function_15ff7 at 0x15ff7 -- 0x1601b
0x15ff7:    8b 35 18 a3 00 00                  	mov esi, dword ptr [0xa318] ; "eed"
0x15ffd:    81 fe 18 a3 00 00                  	cmp esi, 0xa318 ; "eed"
0x16003:    0f 84 27 01 00 00                  	je 0x16130 <function_16130>
0x16009:    8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0x1600c:    85 db                              	test ebx, ebx
0x1600e:    74 10                              	je 0x16020 <function_16020>
0x16010:    89 1c 24                           	mov dword ptr [esp], ebx
0x16013:    e8 e8 59 01 00                     	call 0x2ba00 <function_2ba00>
0x16018:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1601b -- 0x1601c
0x1601b:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1601c -- 0x1601d
; data inside code section at 0x1601d -- 0x16020
0x1601d:    ff ff ff                                           |...             |
; function: function_16020 at 0x16020 -- 0x1604f
0x16020:    8b 36                              	mov esi, dword ptr [esi]
0x16022:    81 fe 18 a3 00 00                  	cmp esi, 0xa318 ; "eed"
0x16028:    75 df                              	jne 0x16009
0x1602a:    8b 06                              	mov eax, dword ptr [esi]
0x1602c:    8b 15 74 a1 00 00                  	mov edx, dword ptr [0xa174] ; "rg"
0x16032:    3d 18 a3 00 00                     	cmp eax, 0xa318 ; "eed"
0x16037:    89 15 78 a1 00 00                  	mov dword ptr [0xa178], edx ; "4.208.43.192"
0x1603d:    75 0b                              	jne 0x1604a <function_16020+0x2a>
0x1603f:    eb 1b                              	jmp 0x1605c <function_1605c>
; data inside code section at 0x16041 -- 0x16048
0x16041:    8d b4 26 00 00 00 00                               |..&....         |
0x16048:    89 d8                              	mov eax, ebx
0x1604a:    8b 18                              	mov ebx, dword ptr [eax]
0x1604c:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1604f -- 0x16050
0x1604f:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16050 -- 0x16051
; data inside code section at 0x16051 -- 0x1605c
0x16051:    ff ff ff 81 fb 18 a3 00  00 75 ec                  |.........u.     |
; function: function_1605c at 0x1605c -- 0x16080
0x1605c:    8b 1d 30 a3 00 00                  	mov ebx, dword ptr [0xa330] ; "ncon"
0x16062:    c7 05 18 a3 00 00 18 a3 00 00      	mov dword ptr [0xa318], 0xa318 ; "eed"
0x1606c:    c7 05 1c a3 00 00 18 a3 00 00      	mov dword ptr [0xa31c], 0xa318 ; "-upnp"
0x16076:    85 db                              	test ebx, ebx
0x16078:    74 3e                              	je 0x160b8 <function_160b8>
0x1607a:    8d 43 48                           	lea eax, [ebx + 0x48]
0x1607d:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x16080 -- 0x16081
0x16080:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x16081 -- 0x16082
; data inside code section at 0x16082 -- 0x16091
0x16082:    ff ff ff 85 c0 0f 85 b2  00 00 00 89 1c 24 e8      |.............$. |
; dynamically linked function: pthread_mutex_destroy at 0x16091 -- 0x16092
; data inside code section at 0x16092 -- 0x160a4
0x16092:    ff ff ff 85 c0 0f 85 d0  00 00 00 8d 43 18 89 04   |............C...|
0x160a2:    24 e8                                              |$.              |
; dynamically linked function: pthread_cond_destroy at 0x160a4 -- 0x160a5
; data inside code section at 0x160a5 -- 0x160b4
0x160a5:    ff ff ff 85 c0 0f 85 99  00 00 00 89 1c 24 e8      |.............$. |
; dynamically linked function: _ZdlPv at 0x160b4 -- 0x160b5
; data inside code section at 0x160b5 -- 0x160b8
0x160b5:    ff ff ff                                           |...             |
; function: function_160b8 at 0x160b8 -- 0x160d7
0x160b8:    8b 1d 38 a3 00 00                  	mov ebx, dword ptr [0xa338] ; "hand"
0x160be:    c7 05 30 a3 00 00 00 00 00 00      	mov dword ptr [0xa330], 0 ; "ncon"
0x160c8:    85 db                              	test ebx, ebx
0x160ca:    74 10                              	je 0x160dc <function_160dc>
0x160cc:    89 1c 24                           	mov dword ptr [esp], ebx
0x160cf:    e8 2c 59 01 00                     	call 0x2ba00 <function_2ba00>
0x160d4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x160d7 -- 0x160d8
0x160d7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x160d8 -- 0x160d9
; data inside code section at 0x160d9 -- 0x160dc
0x160d9:    ff ff ff                                           |...             |
; function: function_160dc at 0x160dc -- 0x160fa
0x160dc:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x160e0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x160e7:    c7 05 38 a3 00 00 00 00 00 00      	mov dword ptr [0xa338], 0 ; "hand"
0x160f1:    75 51                              	jne 0x16144 <function_16144>
0x160f3:    83 c4 20                           	add esp, 0x20
0x160f6:    5b                                 	pop ebx
0x160f7:    5e                                 	pop esi
0x160f8:    5f                                 	pop edi
0x160f9:    c3                                 	ret 
; data inside code section at 0x160fa -- 0x16100
0x160fa:    8d b6 00 00 00 00                                  |......          |
; function: function_16100 at 0x16100 -- 0x16103
0x16100:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x16103 -- 0x16104
0x16103:    e8                                                 |.               |
; dynamically linked function: close at 0x16104 -- 0x16105
; data inside code section at 0x16105 -- 0x16112
0x16105:    ff ff ff 83 f8 ff 0f 85  b2 fe ff ff e8            |.............   |
; dynamically linked function: __errno_location at 0x16112 -- 0x16113
; data inside code section at 0x16113 -- 0x16124
0x16113:    ff ff ff 8b 00 c7 04 24  9c d7 00 00 89 44 24 04   |.......$.....D$.|
0x16123:    e8                                                 |.               |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x16124 -- 0x16125
; data inside code section at 0x16125 -- 0x16128
0x16125:    ff ff ff                                           |...             |
; function: function_16128 at 0x16128 -- 0x1612d
0x16128:    e9 96 fe ff ff                     	jmp 0x15fc3
; data inside code section at 0x1612d -- 0x16130
0x1612d:    8d 76 00                                           |.v.             |
; function: function_16130 at 0x16130 -- 0x1613f
0x16130:    a1 74 a1 00 00                     	mov eax, dword ptr [0xa174] ; "rg"
0x16135:    a3 78 a1 00 00                     	mov dword ptr [0xa178], eax ; "4.208.43.192"
0x1613a:    e9 1d ff ff ff                     	jmp 0x1605c <function_1605c>
; data inside code section at 0x1613f -- 0x16144
0x1613f:    e8 f6 de 00 00                                     |.....           |
; function: function_16144 at 0x16144 -- 0x16145
; dynamically linked function: __stack_chk_fail at 0x16145 -- 0x16146
; data inside code section at 0x16146 -- 0x16169
0x16146:    ff ff ff c7 44 24 0c 60  b8 02 00 c7 44 24 08 2f   |....D$.`....D$./|
0x16156:    00 00 00 c7 44 24 04 f4  d4 00 00 c7 04 24 51 9f   |....D$.......$Q.|
0x16166:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x16169 -- 0x1616a
; data inside code section at 0x1616a -- 0x1618d
0x1616a:    ff ff ff c7 44 24 0c 60  b8 02 00 c7 44 24 08 2e   |....D$.`....D$..|
0x1617a:    00 00 00 c7 44 24 04 f4  d4 00 00 c7 04 24 34 d5   |....D$.......$4.|
0x1618a:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x1618d -- 0x1618e
; data inside code section at 0x1618e -- 0x16191
0x1618e:    ff ff ff                                           |...             |
; section: .text._ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_
; function: _ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_ at 0x161a0 -- 0x1625f
0x161a0:    55                                 	push ebp
0x161a1:    57                                 	push edi
0x161a2:    56                                 	push esi
0x161a3:    53                                 	push ebx
0x161a4:    83 ec 3c                           	sub esp, 0x3c
0x161a7:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x161ab:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x161af:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x161b5:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x161b9:    31 c0                              	xor eax, eax
0x161bb:    39 fd                              	cmp ebp, edi
0x161bd:    74 61                              	je 0x16220 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0x80>
0x161bf:    8b 07                              	mov eax, dword ptr [edi]
0x161c1:    8b 75 04                           	mov esi, dword ptr [ebp + 4]
0x161c4:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x161c7:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x161cb:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x161ce:    2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0x161d2:    89 f2                              	mov edx, esi
0x161d4:    29 da                              	sub edx, ebx
0x161d6:    39 c2                              	cmp edx, eax
0x161d8:    77 7e                              	ja 0x16258 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0xb8>
0x161da:    8b 4f 04                           	mov ecx, dword ptr [edi + 4]
0x161dd:    89 c8                              	mov eax, ecx
0x161df:    2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0x161e3:    39 c2                              	cmp edx, eax
0x161e5:    76 59                              	jbe 0x16240 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0xa0>
0x161e7:    01 d8                              	add eax, ebx
0x161e9:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x161ed:    29 d8                              	sub eax, ebx
0x161ef:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x161f3:    0f 85 bf 00 00 00                  	jne 0x162b8 <function_162b8>
0x161f9:    3b 74 24 10                        	cmp esi, dword ptr [esp + 0x10]
0x161fd:    8b 44 24 10                        	mov eax, dword ptr [esp + 0x10]
0x16201:    0f 84 14 01 00 00                  	je 0x1631b <function_1631b>
0x16207:    90                                 	nop 
0x16208:    85 c9                              	test ecx, ecx
0x1620a:    74 05                              	je 0x16211 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0x71>
0x1620c:    0f b6 18                           	movzx ebx, byte ptr [eax]
0x1620f:    88 19                              	mov byte ptr [ecx], bl
0x16211:    83 c0 01                           	add eax, 1
0x16214:    83 c1 01                           	add ecx, 1
0x16217:    39 f0                              	cmp eax, esi
0x16219:    75 ed                              	jne 0x16208 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0x68>
0x1621b:    03 17                              	add edx, dword ptr [edi]
0x1621d:    89 57 04                           	mov dword ptr [edi + 4], edx
0x16220:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x16224:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1622b:    89 f8                              	mov eax, edi
0x1622d:    0f 85 f1 00 00 00                  	jne 0x16324 <function_16324>
0x16233:    83 c4 3c                           	add esp, 0x3c
0x16236:    5b                                 	pop ebx
0x16237:    5e                                 	pop esi
0x16238:    5f                                 	pop edi
0x16239:    5d                                 	pop ebp
0x1623a:    c3                                 	ret 
; data inside code section at 0x1623b -- 0x16240
0x1623b:    90 8d 74 26 00                                     |..t&.           |
0x16240:    85 d2                              	test edx, edx
0x16242:    0f 85 b0 00 00 00                  	jne 0x162f8 <function_162f8>
0x16248:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1624c:    89 57 04                           	mov dword ptr [edi + 4], edx
0x1624f:    eb cf                              	jmp 0x16220 <_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_+0x80>
; data inside code section at 0x16251 -- 0x16258
0x16251:    8d b4 26 00 00 00 00                               |..&....         |
0x16258:    89 14 24                           	mov dword ptr [esp], edx
0x1625b:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0x1625f -- 0x16260
0x1625f:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x16260 -- 0x16261
; data inside code section at 0x16261 -- 0x1627a
0x16261:    ff ff ff 39 f3 8b 54 24  14 89 c5 74 15 89 c1 85   |...9..T$...t....|
0x16271:    c9 74 05 0f b6 03 88 01  83                        |.t.......       |
; function: function_1627a at 0x1627a -- 0x1627b
0x1627a:    c3                                 	ret 
; data inside code section at 0x1627b -- 0x1629a
0x1627b:    01 83 c1 01 39 f3 75 ed  8b 1f 8b 47 08 85 db 74   |....9.u....G...t|
0x1628b:    1e 29 d8 89 54 24 14 89  44 24 04 89 1c 24 e8      |.)..T$..D$...$. |
; dynamically linked function: OPENSSL_cleanse at 0x1629a -- 0x1629b
; data inside code section at 0x1629b -- 0x162a2
0x1629b:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x162a2 -- 0x162a3
; data inside code section at 0x162a3 -- 0x162a5
0x162a3:    ff ff                                              |..              |
; function: function_162a5 at 0x162a5 -- 0x162b2
0x162a5:    ff 8b 54 24 14 01                  	dec dword ptr [ebx + 0x1142454]
0x162ab:    ea 89 2f 89 57 08 eb               	ljmp 0xeb08:0x57892f89 <function_57892f89>
; data inside code section at 0x162b2 -- 0x162b8
0x162b2:    99 90 8d 74 26 00                                  |...t&.          |
; function: function_162b8 at 0x162b8 -- 0x162cb
0x162b8:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x162bc:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x162c0:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x162c4:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x162c8:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x162cb -- 0x162cc
0x162cb:    e8                                                 |.               |
; dynamically linked function: memmove at 0x162cc -- 0x162cd
; data inside code section at 0x162cd -- 0x162cf
0x162cd:    ff ff                                              |..              |
; function: function_162cf at 0x162cf -- 0x162f6
0x162cf:    ff 8b 07 8b 4f 04                  	dec dword ptr [ebx + 0x44f8b07]
0x162d5:    8b 75 04                           	mov esi, dword ptr [ebp + 4]
0x162d8:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x162dc:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x162e0:    89 c8                              	mov eax, ecx
0x162e2:    2b 44 24 18                        	sub eax, dword ptr [esp + 0x18]
0x162e6:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x162ea:    8b 45 00                           	mov eax, dword ptr [ebp]
0x162ed:    01 44 24 10                        	add dword ptr [esp + 0x10], eax
0x162f1:    e9 03 ff ff ff                     	jmp 0x161f9
; data inside code section at 0x162f6 -- 0x162f8
0x162f6:    66 90                                              |f.              |
; function: function_162f8 at 0x162f8 -- 0x1630b
0x162f8:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x162fc:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x16300:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x16304:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x16308:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1630b -- 0x1630c
0x1630b:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1630c -- 0x1630d
; data inside code section at 0x1630d -- 0x1630f
0x1630d:    ff ff                                              |..              |
; function: function_1630f at 0x1630f -- 0x1631b
0x1630f:    ff 8b 54 24 14 03                  	dec dword ptr [ebx + 0x3142454]
0x16315:    17                                 	pop ss
0x16316:    e9 31 ff ff ff                     	jmp 0x1624c
; function: function_1631b at 0x1631b -- 0x16324
0x1631b:    03 54 24 18                        	add edx, dword ptr [esp + 0x18]
0x1631f:    e9 28 ff ff ff                     	jmp 0x1624c
; function: function_16324 at 0x16324 -- 0x16325
; dynamically linked function: __stack_chk_fail at 0x16325 -- 0x16326
; data inside code section at 0x16326 -- 0x16329
0x16326:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail11unique_lockINS0_5mutexEED2Ev
; function: _ZN5boost8signals26detail11unique_lockINS0_5mutexEED1Ev at 0x16330 -- 0x1635a
0x16330:    83 ec 1c                           	sub esp, 0x1c
0x16333:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1633a:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1633e:    31 d2                              	xor edx, edx
0x16340:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x16344:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x16348:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1634f:    75 0e                              	jne 0x1635f <function_1635f>
0x16351:    8b 00                              	mov eax, dword ptr [eax]
0x16353:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x16357:    83 c4 1c                           	add esp, 0x1c
; data inside code section at 0x1635a -- 0x1635b
0x1635a:    e9                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x1635b -- 0x1635c
; data inside code section at 0x1635c -- 0x1635f
0x1635c:    ff ff ff                                           |...             |
; function: function_1635f at 0x1635f -- 0x16360
; dynamically linked function: __stack_chk_fail at 0x16360 -- 0x16361
; data inside code section at 0x16361 -- 0x16364
0x16361:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E at 0x16370 -- 0x163a7
0x16370:    57                                 	push edi
0x16371:    56                                 	push esi
0x16372:    53                                 	push ebx
0x16373:    83 ec 20                           	sub esp, 0x20
0x16376:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1637a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16380:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16384:    31 c0                              	xor eax, eax
0x16386:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1638a:    85 db                              	test ebx, ebx
0x1638c:    75 04                              	jne 0x16392 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x22>
0x1638e:    eb 20                              	jmp 0x163b0 <function_163b0>
0x16390:    89 f3                              	mov ebx, esi
0x16392:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x16395:    89 3c 24                           	mov dword ptr [esp], edi
0x16398:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1639c:    e8 3f 63 01 00                     	call 0x2c6e0 <function_2c6e0>
0x163a1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x163a4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x163a7 -- 0x163a8
0x163a7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x163a8 -- 0x163a9
; data inside code section at 0x163a9 -- 0x163b0
0x163a9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_163b0 at 0x163b0 -- 0x163c4
0x163b0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x163b4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x163bb:    75 07                              	jne 0x163c4 <function_163b0+0x13>
0x163bd:    83 c4 20                           	add esp, 0x20
0x163c0:    5b                                 	pop ebx
0x163c1:    5e                                 	pop esi
0x163c2:    5f                                 	pop edi
0x163c3:    c3                                 	ret 
; data inside code section at 0x163c4 -- 0x163c5
0x163c4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x163c5 -- 0x163c6
; data inside code section at 0x163c6 -- 0x163c9
0x163c6:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEED2Ev
; function: _ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev at 0x163d0 -- 0x16404
0x163d0:    83 ec 2c                           	sub esp, 0x2c
0x163d3:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x163d7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x163de:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x163e2:    31 d2                              	xor edx, edx
0x163e4:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x163e7:    89 04 24                           	mov dword ptr [esp], eax
0x163ea:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x163ee:    e8 4d 63 01 00                     	call 0x2c740 <function_2c740>
0x163f3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x163f7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x163fe:    75 04                              	jne 0x16404 <_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev+0x33>
0x16400:    83 c4 2c                           	add esp, 0x2c
0x16403:    c3                                 	ret 
; data inside code section at 0x16404 -- 0x16405
0x16404:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16405 -- 0x16406
; data inside code section at 0x16406 -- 0x16409
0x16406:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E at 0x16410 -- 0x1645f
0x16410:    55                                 	push ebp
0x16411:    57                                 	push edi
0x16412:    56                                 	push esi
0x16413:    53                                 	push ebx
0x16414:    83 ec 2c                           	sub esp, 0x2c
0x16417:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x1641b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16421:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16425:    31 c0                              	xor eax, eax
0x16427:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x1642b:    85 db                              	test ebx, ebx
0x1642d:    75 0b                              	jne 0x1643a <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x2a>
0x1642f:    eb 47                              	jmp 0x16478 <function_16478>
; data inside code section at 0x16431 -- 0x16438
0x16431:    8d b4 26 00 00 00 00                               |..&....         |
0x16438:    89 fb                              	mov ebx, edi
0x1643a:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1643d:    89 2c 24                           	mov dword ptr [esp], ebp
0x16440:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x16444:    e8 d7 63 01 00                     	call 0x2c820 <function_2c820>
0x16449:    8b 73 34                           	mov esi, dword ptr [ebx + 0x34]
0x1644c:    8b 7b 08                           	mov edi, dword ptr [ebx + 8]
0x1644f:    8b 43 3c                           	mov eax, dword ptr [ebx + 0x3c]
0x16452:    85 f6                              	test esi, esi
0x16454:    74 16                              	je 0x1646c <function_1646c>
0x16456:    29 f0                              	sub eax, esi
0x16458:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1645c:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1645f -- 0x16460
0x1645f:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x16460 -- 0x16461
; data inside code section at 0x16461 -- 0x16468
0x16461:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x16468 -- 0x16469
; data inside code section at 0x16469 -- 0x1646c
0x16469:    ff ff ff                                           |...             |
; function: function_1646c at 0x1646c -- 0x1646f
0x1646c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1646f -- 0x16470
0x1646f:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16470 -- 0x16471
; data inside code section at 0x16471 -- 0x16478
0x16471:    ff ff ff 85 ff 75 c0                               |.....u.         |
; function: function_16478 at 0x16478 -- 0x1648d
0x16478:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1647c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16483:    75 08                              	jne 0x1648d <function_16478+0x14>
0x16485:    83 c4 2c                           	add esp, 0x2c
0x16488:    5b                                 	pop ebx
0x16489:    5e                                 	pop esi
0x1648a:    5f                                 	pop edi
0x1648b:    5d                                 	pop ebp
0x1648c:    c3                                 	ret 
; data inside code section at 0x1648d -- 0x1648e
0x1648d:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1648e -- 0x1648f
; data inside code section at 0x1648f -- 0x16492
0x1648f:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapI4CInv11CDataStreamSt4lessIS0_ESaISt4pairIKS0_S1_EEED2Ev
; function: _ZNSt3mapI4CInv11CDataStreamSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev at 0x164a0 -- 0x164d4
0x164a0:    83 ec 2c                           	sub esp, 0x2c
0x164a3:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x164a7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x164ae:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x164b2:    31 d2                              	xor edx, edx
0x164b4:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x164b7:    89 04 24                           	mov dword ptr [esp], eax
0x164ba:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x164be:    e8 ed 63 01 00                     	call 0x2c8b0 <function_2c8b0>
0x164c3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x164c7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x164ce:    75 04                              	jne 0x164d4 <_ZNSt3mapI4CInv11CDataStreamSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev+0x33>
0x164d0:    83 c4 2c                           	add esp, 0x2c
0x164d3:    c3                                 	ret 
; data inside code section at 0x164d4 -- 0x164d5
0x164d4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x164d5 -- 0x164d6
; data inside code section at 0x164d6 -- 0x164d9
0x164d6:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseISt4pairIx4CInvESaIS2_EE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseISt4pairIx4CInvESaIS2_EE17_M_initialize_mapEj at 0x164e0 -- 0x16524
0x164e0:    55                                 	push ebp
0x164e1:    57                                 	push edi
0x164e2:    56                                 	push esi
0x164e3:    53                                 	push ebx
0x164e4:    83 ec 3c                           	sub esp, 0x3c
0x164e7:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x164eb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x164f2:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x164f6:    31 d2                              	xor edx, edx
0x164f8:    ba a3 8b 2e ba                     	mov edx, 0xba2e8ba3
0x164fd:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x16501:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16505:    f7 e2                              	mul edx
0x16507:    b8 08 00 00 00                     	mov eax, 8
0x1650c:    c1 ea 03                           	shr edx, 3
0x1650f:    8d 5a 01                           	lea ebx, [edx + 1]
0x16512:    83 c2 03                           	add edx, 3
0x16515:    83 fa 08                           	cmp edx, 8
0x16518:    0f 42 d0                           	cmovb edx, eax
0x1651b:    89 57 04                           	mov dword ptr [edi + 4], edx
0x1651e:    c1 e2 02                           	shl edx, 2
0x16521:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x16524 -- 0x16525
0x16524:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x16525 -- 0x16526
; data inside code section at 0x16526 -- 0x1652a
0x16526:    ff ff ff 8b                                        |....            |
; function: function_1652a at 0x1652a -- 0x16536
0x1652a:    57                                 	push edi
0x1652b:    04 29                              	add al, 0x29
0x1652d:    da d1                              	fcmovbe st(0), st(1)
0x1652f:    ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0x16536 -- 0x1653e
0x16536:    00 39 f5 89 07 73 18 89                            |.9...s..        |
; function: function_1653e at 0x1653e -- 0x16540
0x1653e:    eb 90                              	jmp 0x164d0
; function: function_16540 at 0x16540 -- 0x16541
; data inside code section at 0x16541 -- 0x16548
0x16541:    04 24 e4 01 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x16548 -- 0x16549
; data inside code section at 0x16549 -- 0x1654b
0x16549:    ff ff                                              |..              |
; function: function_1654b at 0x1654b -- 0x165b6
0x1654b:    ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0x16551:    39 de                              	cmp esi, ebx
0x16553:    77 eb                              	ja 0x16540 <function_16540>
0x16555:    89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0x16558:    8b 45 00                           	mov eax, dword ptr [ebp]
0x1655b:    8d 90 e4 01 00 00                  	lea edx, [eax + 0x1e4]
0x16561:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x16564:    8d 56 fc                           	lea edx, [esi - 4]
0x16567:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x1656a:    89 57 24                           	mov dword ptr [edi + 0x24], edx
0x1656d:    8b 4e fc                           	mov ecx, dword ptr [esi - 4]
0x16570:    89 47 08                           	mov dword ptr [edi + 8], eax
0x16573:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16577:    8d 91 e4 01 00 00                  	lea edx, [ecx + 0x1e4]
0x1657d:    89 57 20                           	mov dword ptr [edi + 0x20], edx
0x16580:    ba a3 8b 2e ba                     	mov edx, 0xba2e8ba3
0x16585:    f7 e2                              	mul edx
0x16587:    89 4f 1c                           	mov dword ptr [edi + 0x1c], ecx
0x1658a:    c1 ea 03                           	shr edx, 3
0x1658d:    8d 04 92                           	lea eax, [edx + edx*4]
0x16590:    8d 04 42                           	lea eax, [edx + eax*2]
0x16593:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x16597:    29 c2                              	sub edx, eax
0x16599:    6b c2 2c                           	imul eax, edx, 0x2c
0x1659c:    01 c1                              	add ecx, eax
0x1659e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x165a2:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x165a9:    89 4f 18                           	mov dword ptr [edi + 0x18], ecx
0x165ac:    75 2b                              	jne 0x165d9 <function_165d9>
0x165ae:    83 c4 3c                           	add esp, 0x3c
0x165b1:    5b                                 	pop ebx
0x165b2:    5e                                 	pop esi
0x165b3:    5f                                 	pop edi
0x165b4:    5d                                 	pop ebp
0x165b5:    c3                                 	ret 
; data inside code section at 0x165b6 -- 0x165ba
0x165b6:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x165ba -- 0x165bb
; data inside code section at 0x165bb -- 0x165cc
0x165bb:    ff ff ff 39 dd 73 12 8b  45 00 83 c5 04 89 04 24   |...9.s..E......$|
0x165cb:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x165cc -- 0x165cd
; data inside code section at 0x165cd -- 0x165d1
0x165cd:    ff ff ff 39                                        |...9            |
; function: function_165d1 at 0x165d1 -- 0x165d3
0x165d1:    eb 77                              	jmp 0x1664a
; data inside code section at 0x165d3 -- 0x165d5
0x165d3:    ee e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0x165d5 -- 0x165d6
; data inside code section at 0x165d6 -- 0x165d9
0x165d6:    ff ff ff                                           |...             |
; function: function_165d9 at 0x165d9 -- 0x165da
; dynamically linked function: __stack_chk_fail at 0x165da -- 0x165db
; data inside code section at 0x165db -- 0x165df
0x165db:    ff ff ff 89                                        |....            |
; function: function_165df at 0x165df -- 0x165e0
0x165df:    c3                                 	ret 
; data inside code section at 0x165e0 -- 0x165e1
0x165e0:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x165e1 -- 0x165e2
; data inside code section at 0x165e2 -- 0x165e9
0x165e2:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x165e9 -- 0x165ea
; data inside code section at 0x165ea -- 0x165f3
0x165ea:    ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x165f3 -- 0x165f4
; data inside code section at 0x165f4 -- 0x16605
0x165f4:    ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0x16604:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x16605 -- 0x16606
; data inside code section at 0x16606 -- 0x1660a
0x16606:    ff ff ff 89                                        |....            |
; function: function_1660a at 0x1660a -- 0x1660b
0x1660a:    c3                                 	ret 
; data inside code section at 0x1660b -- 0x1660c
0x1660b:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1660c -- 0x1660d
; data inside code section at 0x1660d -- 0x16614
0x1660d:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x16614 -- 0x16615
; data inside code section at 0x16615 -- 0x16618
0x16615:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x16620 -- 0x16657
0x16620:    57                                 	push edi
0x16621:    56                                 	push esi
0x16622:    53                                 	push ebx
0x16623:    83 ec 20                           	sub esp, 0x20
0x16626:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1662a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16630:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16634:    31 c0                              	xor eax, eax
0x16636:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1663a:    85 db                              	test ebx, ebx
0x1663c:    75 04                              	jne 0x16642 <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x1663e:    eb 20                              	jmp 0x16660 <function_16660>
0x16640:    89 f3                              	mov ebx, esi
0x16642:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x16645:    89 3c 24                           	mov dword ptr [esp], edi
0x16648:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1664c:    e8 ef 65 01 00                     	call 0x2cc40 <function_2cc40>
0x16651:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x16654:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x16657 -- 0x16658
0x16657:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16658 -- 0x16659
; data inside code section at 0x16659 -- 0x16660
0x16659:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_16660 at 0x16660 -- 0x16674
0x16660:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16664:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1666b:    75 07                              	jne 0x16674 <function_16660+0x13>
0x1666d:    83 c4 20                           	add esp, 0x20
0x16670:    5b                                 	pop ebx
0x16671:    5e                                 	pop esi
0x16672:    5f                                 	pop edi
0x16673:    c3                                 	ret 
; data inside code section at 0x16674 -- 0x16675
0x16674:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16675 -- 0x16676
; data inside code section at 0x16676 -- 0x16679
0x16676:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIxSt4pairIKxSt17_Rb_tree_iteratorIS0_IK4CInvxEEESt10_Select1stIS7_ESt4lessIxESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E
; function: _ZNSt8_Rb_treeIxSt4pairIKxSt17_Rb_tree_iteratorIS0_IK4CInvxEEESt10_Select1stIS7_ESt4lessIxESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E at 0x16680 -- 0x166b7
0x16680:    57                                 	push edi
0x16681:    56                                 	push esi
0x16682:    53                                 	push ebx
0x16683:    83 ec 20                           	sub esp, 0x20
0x16686:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1668a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16690:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16694:    31 c0                              	xor eax, eax
0x16696:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1669a:    85 db                              	test ebx, ebx
0x1669c:    75 04                              	jne 0x166a2 <_ZNSt8_Rb_treeIxSt4pairIKxSt17_Rb_tree_iteratorIS0_IK4CInvxEEESt10_Select1stIS7_ESt4lessIxESaIS7_EE8_M_eraseEPSt13_Rb_tree_nodeIS7_E+0x22>
0x1669e:    eb 20                              	jmp 0x166c0 <function_166c0>
0x166a0:    89 f3                              	mov ebx, esi
0x166a2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x166a5:    89 3c 24                           	mov dword ptr [esp], edi
0x166a8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x166ac:    e8 4f 66 01 00                     	call 0x2cd00 <function_2cd00>
0x166b1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x166b4:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x166b7 -- 0x166b8
0x166b7:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x166b8 -- 0x166b9
; data inside code section at 0x166b9 -- 0x166c0
0x166b9:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_166c0 at 0x166c0 -- 0x166d4
0x166c0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x166c4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x166cb:    75 07                              	jne 0x166d4 <function_166c0+0x13>
0x166cd:    83 c4 20                           	add esp, 0x20
0x166d0:    5b                                 	pop ebx
0x166d1:    5e                                 	pop esi
0x166d2:    5f                                 	pop edi
0x166d3:    c3                                 	ret 
; data inside code section at 0x166d4 -- 0x166d5
0x166d4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x166d5 -- 0x166d6
; data inside code section at 0x166d6 -- 0x166d9
0x166d6:    ff ff ff                                           |...             |
; section: .text._ZN10limitedmapI4CInvxED2Ev
; function: _ZN10limitedmapI4CInvxED1Ev at 0x166e0 -- 0x16727
0x166e0:    53                                 	push ebx
0x166e1:    83 ec 28                           	sub esp, 0x28
0x166e4:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x166e8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x166ee:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x166f2:    31 c0                              	xor eax, eax
0x166f4:    8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0x166f7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x166fb:    8d 43 18                           	lea eax, [ebx + 0x18]
0x166fe:    89 04 24                           	mov dword ptr [esp], eax
0x16701:    e8 5a 66 01 00                     	call 0x2cd60 <function_2cd60>
0x16706:    8b 43 08                           	mov eax, dword ptr [ebx + 8]
0x16709:    89 1c 24                           	mov dword ptr [esp], ebx
0x1670c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x16710:    e8 eb 65 01 00                     	call 0x2cd00 <function_2cd00>
0x16715:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16719:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16720:    75 05                              	jne 0x16727 <_ZN10limitedmapI4CInvxED1Ev+0x46>
0x16722:    83 c4 28                           	add esp, 0x28
0x16725:    5b                                 	pop ebx
0x16726:    c3                                 	ret 
; data inside code section at 0x16727 -- 0x16728
0x16727:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16728 -- 0x16729
; data inside code section at 0x16729 -- 0x1672c
0x16729:    ff ff ff                                           |...             |
; section: .text._ZNSt11_Deque_baseISsSaISsEE17_M_initialize_mapEj
; function: _ZNSt11_Deque_baseISsSaISsEE17_M_initialize_mapEj at 0x16730 -- 0x16770
0x16730:    55                                 	push ebp
0x16731:    ba 08 00 00 00                     	mov edx, 8
0x16736:    57                                 	push edi
0x16737:    56                                 	push esi
0x16738:    53                                 	push ebx
0x16739:    83 ec 3c                           	sub esp, 0x3c
0x1673c:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x16740:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x16744:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16748:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1674e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16752:    31 c0                              	xor eax, eax
0x16754:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16758:    c1 e8 07                           	shr eax, 7
0x1675b:    8d 58 01                           	lea ebx, [eax + 1]
0x1675e:    83 c0 03                           	add eax, 3
0x16761:    83 f8 08                           	cmp eax, 8
0x16764:    0f 42 c2                           	cmovb eax, edx
0x16767:    89 47 04                           	mov dword ptr [edi + 4], eax
0x1676a:    c1 e0 02                           	shl eax, 2
0x1676d:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x16770 -- 0x16771
0x16770:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x16771 -- 0x16772
; data inside code section at 0x16772 -- 0x16776
0x16772:    ff ff ff 8b                                        |....            |
; function: function_16776 at 0x16776 -- 0x16782
0x16776:    57                                 	push edi
0x16777:    04 29                              	add al, 0x29
0x16779:    da d1                              	fcmovbe st(0), st(1)
0x1677b:    ea 8d 2c 90 8d 74 9d               	ljmp 0x9d74:0x8d902c8d <function_8d902c8d>
; data inside code section at 0x16782 -- 0x16788
0x16782:    00 39 f5 89 07 73                                  |.9...s          |
; function: function_16788 at 0x16788 -- 0x1678c
0x16788:    1c 89                              	sbb al, 0x89
0x1678a:    eb 90                              	jmp 0x1671c
; data inside code section at 0x1678c -- 0x16790
0x1678c:    8d 74 26 00                                        |.t&.            |
; function: function_16790 at 0x16790 -- 0x16791
; data inside code section at 0x16791 -- 0x16798
0x16791:    04 24 00 02 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x16798 -- 0x16799
; data inside code section at 0x16799 -- 0x1679b
0x16799:    ff ff                                              |..              |
; function: function_1679b at 0x1679b -- 0x167f1
0x1679b:    ff 89 03 83 c3 04                  	dec dword ptr [ecx + 0x4c38303]
0x167a1:    39 de                              	cmp esi, ebx
0x167a3:    77 eb                              	ja 0x16790 <function_16790>
0x167a5:    89 6f 14                           	mov dword ptr [edi + 0x14], ebp
0x167a8:    8b 55 00                           	mov edx, dword ptr [ebp]
0x167ab:    8d 82 00 02 00 00                  	lea eax, [edx + 0x200]
0x167b1:    89 47 10                           	mov dword ptr [edi + 0x10], eax
0x167b4:    8d 46 fc                           	lea eax, [esi - 4]
0x167b7:    89 57 0c                           	mov dword ptr [edi + 0xc], edx
0x167ba:    89 47 24                           	mov dword ptr [edi + 0x24], eax
0x167bd:    8b 46 fc                           	mov eax, dword ptr [esi - 4]
0x167c0:    89 57 08                           	mov dword ptr [edi + 8], edx
0x167c3:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x167c7:    8d 88 00 02 00 00                  	lea ecx, [eax + 0x200]
0x167cd:    83 e2 7f                           	and edx, 0x7f
0x167d0:    89 47 1c                           	mov dword ptr [edi + 0x1c], eax
0x167d3:    8d 04 90                           	lea eax, [eax + edx*4]
0x167d6:    89 47 18                           	mov dword ptr [edi + 0x18], eax
0x167d9:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x167dd:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x167e4:    89 4f 20                           	mov dword ptr [edi + 0x20], ecx
0x167e7:    75 2b                              	jne 0x16814 <function_16814>
0x167e9:    83 c4 3c                           	add esp, 0x3c
0x167ec:    5b                                 	pop ebx
0x167ed:    5e                                 	pop esi
0x167ee:    5f                                 	pop edi
0x167ef:    5d                                 	pop ebp
0x167f0:    c3                                 	ret 
; data inside code section at 0x167f1 -- 0x167f5
0x167f1:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x167f5 -- 0x167f6
; data inside code section at 0x167f6 -- 0x16807
0x167f6:    ff ff ff 39 dd 73 12 8b  45 00 83 c5 04 89 04 24   |...9.s..E......$|
0x16806:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16807 -- 0x16808
; data inside code section at 0x16808 -- 0x1680c
0x16808:    ff ff ff 39                                        |...9            |
; function: function_1680c at 0x1680c -- 0x1680e
0x1680c:    eb 77                              	jmp 0x16885
; data inside code section at 0x1680e -- 0x16810
0x1680e:    ee e8                                              |..              |
; dynamically linked function: __cxa_rethrow at 0x16810 -- 0x16811
; data inside code section at 0x16811 -- 0x16814
0x16811:    ff ff ff                                           |...             |
; function: function_16814 at 0x16814 -- 0x16815
; dynamically linked function: __stack_chk_fail at 0x16815 -- 0x16816
; data inside code section at 0x16816 -- 0x1681a
0x16816:    ff ff ff 89                                        |....            |
; function: function_1681a at 0x1681a -- 0x1681b
0x1681a:    c3                                 	ret 
; data inside code section at 0x1681b -- 0x1681c
0x1681b:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1681c -- 0x1681d
; data inside code section at 0x1681d -- 0x16824
0x1681d:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x16824 -- 0x16825
; data inside code section at 0x16825 -- 0x1682e
0x16825:    ff ff ff 8b 07 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1682e -- 0x1682f
; data inside code section at 0x1682f -- 0x16840
0x1682f:    ff ff ff c7 07 00 00 00  00 c7 47 04 00 00 00 00   |..........G.....|
0x1683f:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x16840 -- 0x16841
; data inside code section at 0x16841 -- 0x16845
0x16841:    ff ff ff 89                                        |....            |
; function: function_16845 at 0x16845 -- 0x16846
0x16845:    c3                                 	ret 
; data inside code section at 0x16846 -- 0x16847
0x16846:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x16847 -- 0x16848
; data inside code section at 0x16848 -- 0x1684f
0x16848:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1684f -- 0x16850
; data inside code section at 0x16850 -- 0x16853
0x16850:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E
; function: _ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E at 0x16860 -- 0x16897
0x16860:    57                                 	push edi
0x16861:    56                                 	push esi
0x16862:    53                                 	push ebx
0x16863:    83 ec 20                           	sub esp, 0x20
0x16866:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1686a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16870:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16874:    31 c0                              	xor eax, eax
0x16876:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1687a:    85 db                              	test ebx, ebx
0x1687c:    75 04                              	jne 0x16882 <_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE8_M_eraseEPSt13_Rb_tree_nodeIS0_E+0x22>
0x1687e:    eb 20                              	jmp 0x168a0 <function_168a0>
0x16880:    89 f3                              	mov ebx, esi
0x16882:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x16885:    89 3c 24                           	mov dword ptr [esp], edi
0x16888:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1688c:    e8 2f 68 01 00                     	call 0x2d0c0 <_ZZN5boost10shared_ptrINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__>
0x16891:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x16894:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x16897 -- 0x16898
0x16897:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16898 -- 0x16899
; data inside code section at 0x16899 -- 0x168a0
0x16899:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_168a0 at 0x168a0 -- 0x168b4
0x168a0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x168a4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x168ab:    75 07                              	jne 0x168b4 <function_168a0+0x13>
0x168ad:    83 c4 20                           	add esp, 0x20
0x168b0:    5b                                 	pop ebx
0x168b1:    5e                                 	pop esi
0x168b2:    5f                                 	pop edi
0x168b3:    c3                                 	ret 
; data inside code section at 0x168b4 -- 0x168b5
0x168b4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x168b5 -- 0x168b6
; data inside code section at 0x168b6 -- 0x168b9
0x168b6:    ff ff ff                                           |...             |
; section: .text._ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EED2Ev
; function: _ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EED1Ev at 0x168c0 -- 0x168f4
0x168c0:    83 ec 2c                           	sub esp, 0x2c
0x168c3:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x168c7:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x168ce:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x168d2:    31 d2                              	xor edx, edx
0x168d4:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x168d7:    89 04 24                           	mov dword ptr [esp], eax
0x168da:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x168de:    e8 3d 68 01 00                     	call 0x2d120 <function_2d120>
0x168e3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x168e7:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x168ee:    75 04                              	jne 0x168f4 <_ZNSt3setI8CNetAddrSt4lessIS0_ESaIS0_EED1Ev+0x33>
0x168f0:    83 c4 2c                           	add esp, 0x2c
0x168f3:    c3                                 	ret 
; data inside code section at 0x168f4 -- 0x168f5
0x168f4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x168f5 -- 0x168f6
; data inside code section at 0x168f6 -- 0x168f9
0x168f6:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv
; function: _ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE20disconnect_all_slotsEv at 0x16900 -- 0x1691b
0x16900:    56                                 	push esi
0x16901:    53                                 	push ebx
0x16902:    83 ec 24                           	sub esp, 0x24
0x16905:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x16909:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1690f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16913:    31 c0                              	xor eax, eax
0x16915:    8d 73 0c                           	lea esi, [ebx + 0xc]
0x16918:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1691b -- 0x1691c
0x1691b:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x1691c -- 0x1691d
; data inside code section at 0x1691d -- 0x16939
0x1691d:    ff ff ff 8b 03 89 44 24  14 8b 43 04 85 c0 89 44   |......D$..C....D|
0x1692d:    24 18 74 04 f0 ff 40 04  89 34 24 e8               |$.t...@..4$.    |
; dynamically linked function: pthread_mutex_unlock at 0x16939 -- 0x1693a
; data inside code section at 0x1693a -- 0x1693c
0x1693a:    ff ff                                              |..              |
; function: function_1693c at 0x1693c -- 0x169b0
0x1693c:    ff 8b 44 24 14 85                  	dec dword ptr [ebx - 0x7aebdbbc]
0x16942:    c0 74 59 8b 00                     	sal byte ptr [ecx + ebx*2 - 0x75], 0
0x16947:    85 c0                              	test eax, eax
0x16949:    74 5f                              	je 0x169aa <function_1693c+0x6e>
0x1694b:    8b 30                              	mov esi, dword ptr [eax]
0x1694d:    eb 2c                              	jmp 0x1697b <function_1693c+0x3f>
; data inside code section at 0x1694f -- 0x16950
0x1694f:    90                                                 |.               |
0x16950:    8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0x16953:    85 db                              	test ebx, ebx
0x16955:    74 4e                              	je 0x169a5 <function_1693c+0x69>
0x16957:    8b 03                              	mov eax, dword ptr [ebx]
0x16959:    89 1c 24                           	mov dword ptr [esp], ebx
0x1695c:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x1695f:    8b 03                              	mov eax, dword ptr [ebx]
0x16961:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x16965:    89 1c 24                           	mov dword ptr [esp], ebx
0x16968:    ff 50 10                           	call dword ptr [eax + 0x10]
0x1696b:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x1696f:    8b 36                              	mov esi, dword ptr [esi]
0x16971:    85 c0                              	test eax, eax
0x16973:    74 29                              	je 0x1699e <function_1693c+0x62>
0x16975:    8b 00                              	mov eax, dword ptr [eax]
0x16977:    85 c0                              	test eax, eax
0x16979:    74 2f                              	je 0x169aa <function_1693c+0x6e>
0x1697b:    39 c6                              	cmp esi, eax
0x1697d:    75 d1                              	jne 0x16950 <function_1693c+0x14>
0x1697f:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x16983:    89 04 24                           	mov dword ptr [esp], eax
0x16986:    e8 b5 04 01 00                     	call 0x26e40
0x1698b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1698f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16996:    75 17                              	jne 0x169af <function_1693c+0x73>
0x16998:    83 c4 24                           	add esp, 0x24
0x1699b:    5b                                 	pop ebx
0x1699c:    5e                                 	pop esi
0x1699d:    c3                                 	ret 
0x1699e:    66 90                              	nop 
0x169a0:    e8 d5 e1 00 00                     	call 0x24b7a <function_24b7a>
0x169a5:    e8 6c e2 00 00                     	call 0x24c16
0x169aa:    e8 03 e3 00 00                     	call 0x24cb2 <function_24cb2>
0x169af:    90                                 	nop 
; data inside code section at 0x169b0 -- 0x169b1
0x169b0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x169b1 -- 0x169b2
; data inside code section at 0x169b2 -- 0x169b6
0x169b2:    ff ff ff 89                                        |....            |
; function: function_169b6 at 0x169b6 -- 0x169b7
0x169b6:    c3                                 	ret 
; data inside code section at 0x169b7 -- 0x169c7
0x169b7:    8d 44 24 18 89 04 24 e8  7d 04 01 00 89 1c 24 e8   |.D$...$.}.....$.|
; dynamically linked function: _Unwind_Resume at 0x169c7 -- 0x169c8
; data inside code section at 0x169c8 -- 0x169cb
0x169c8:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED2Ev
; function: _ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev at 0x169d0 -- 0x16a3b
0x169d0:    53                                 	push ebx
0x169d1:    83 ec 38                           	sub esp, 0x38
0x169d4:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x169d8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x169de:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x169e2:    31 c0                              	xor eax, eax
0x169e4:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x169e7:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
0x169ed:    85 c0                              	test eax, eax
0x169ef:    74 2b                              	je 0x16a1c <_ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0x169f1:    89 04 24                           	mov dword ptr [esp], eax
0x169f4:    e8 d7 68 01 00                     	call 0x2d2d0 <function_2d2d0>
0x169f9:    8d 43 08                           	lea eax, [ebx + 8]
0x169fc:    89 04 24                           	mov dword ptr [esp], eax
0x169ff:    e8 0c 05 01 00                     	call 0x26f10 <function_26f10>
0x16a04:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16a08:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16a0f:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16a15:    75 29                              	jne 0x16a40 <function_16a40>
0x16a17:    83 c4 38                           	add esp, 0x38
0x16a1a:    5b                                 	pop ebx
0x16a1b:    c3                                 	ret 
0x16a1c:    c7 44 24 0c c0 b9 02 00            	mov dword ptr [esp + 0xc], 0x2b9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>&]"
0x16a24:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x16a2c:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x16a34:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x16a3b -- 0x16a3c
0x16a3b:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x16a3c -- 0x16a3d
; data inside code section at 0x16a3d -- 0x16a40
0x16a3d:    ff ff ff                                           |...             |
; function: function_16a40 at 0x16a40 -- 0x16a41
; dynamically linked function: __stack_chk_fail at 0x16a41 -- 0x16a42
; data inside code section at 0x16a42 -- 0x16a45
0x16a42:    ff ff ff                                           |...             |
; function: function_16a45 at 0x16a45 -- 0x16a46
; data inside code section at 0x16a46 -- 0x16a4f
0x16a46:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16a4f -- 0x16a50
; data inside code section at 0x16a50 -- 0x16a52
0x16a50:    ff ff                                              |..              |
; function: function_16a52 at 0x16a52 -- 0x16a68
0x16a52:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16a58:    24 1c                              	and al, 0x1c
0x16a5a:    89 14 24                           	mov dword ptr [esp], edx
0x16a5d:    e8 ae 04 01 00                     	call 0x26f10 <function_26f10>
0x16a62:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16a66:    eb dd                              	jmp 0x16a45 <function_16a45>
; section: .text._ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev
; function: _ZN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev at 0x16a70 -- 0x16abf
0x16a70:    53                                 	push ebx
0x16a71:    83 ec 38                           	sub esp, 0x38
0x16a74:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16a78:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16a7e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16a82:    31 c0                              	xor eax, eax
0x16a84:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16a87:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
0x16a8d:    85 c0                              	test eax, eax
0x16a8f:    74 33                              	je 0x16ac4 <function_16ac4>
0x16a91:    89 04 24                           	mov dword ptr [esp], eax
0x16a94:    e8 d7 68 01 00                     	call 0x2d370 <function_2d370>
0x16a99:    8d 43 08                           	lea eax, [ebx + 8]
0x16a9c:    89 04 24                           	mov dword ptr [esp], eax
0x16a9f:    e8 0c 05 01 00                     	call 0x26fb0 <function_26fb0>
0x16aa4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16aa8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16aaf:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16ab5:    75 12                              	jne 0x16ac9 <function_16ac9>
0x16ab7:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x16abb:    83 c4 38                           	add esp, 0x38
0x16abe:    5b                                 	pop ebx
; data inside code section at 0x16abf -- 0x16ac0
0x16abf:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16ac0 -- 0x16ac1
; data inside code section at 0x16ac1 -- 0x16ac4
0x16ac1:    ff ff ff                                           |...             |
; function: function_16ac4 at 0x16ac4 -- 0x16ac9
0x16ac4:    e8 29 e4 00 00                     	call 0x24ef2 <function_24ef2>
; function: function_16ac9 at 0x16ac9 -- 0x16aca
; dynamically linked function: __stack_chk_fail at 0x16aca -- 0x16acb
; data inside code section at 0x16acb -- 0x16ace
0x16acb:    ff ff ff                                           |...             |
; function: function_16ace at 0x16ace -- 0x16acf
; data inside code section at 0x16acf -- 0x16ad8
0x16acf:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16ad8 -- 0x16ad9
; data inside code section at 0x16ad9 -- 0x16adb
0x16ad9:    ff ff                                              |..              |
; function: function_16adb at 0x16adb -- 0x16af1
0x16adb:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16ae1:    24 1c                              	and al, 0x1c
0x16ae3:    89 14 24                           	mov dword ptr [esp], edx
0x16ae6:    e8 c5 04 01 00                     	call 0x26fb0 <function_26fb0>
0x16aeb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16aef:    eb dd                              	jmp 0x16ace <function_16ace>
; section: .text._ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED2Ev
; function: _ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev at 0x16b00 -- 0x16b51
0x16b00:    53                                 	push ebx
0x16b01:    83 ec 38                           	sub esp, 0x38
0x16b04:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16b08:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16b0e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16b12:    31 c0                              	xor eax, eax
0x16b14:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16b17:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
0x16b1d:    85 c0                              	test eax, eax
0x16b1f:    74 2b                              	je 0x16b4c <_ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0x16b21:    89 04 24                           	mov dword ptr [esp], eax
0x16b24:    e8 d7 68 01 00                     	call 0x2d400 <function_2d400>
0x16b29:    8d 43 08                           	lea eax, [ebx + 8]
0x16b2c:    89 04 24                           	mov dword ptr [esp], eax
0x16b2f:    e8 0c 05 01 00                     	call 0x27040 <function_27040>
0x16b34:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16b38:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16b3f:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16b45:    75 0a                              	jne 0x16b51 <_ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED1Ev+0x4c>
0x16b47:    83 c4 38                           	add esp, 0x38
0x16b4a:    5b                                 	pop ebx
0x16b4b:    c3                                 	ret 
0x16b4c:    e8 31 e4 00 00                     	call 0x24f82 <function_24f82>
; data inside code section at 0x16b51 -- 0x16b52
0x16b51:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16b52 -- 0x16b53
; data inside code section at 0x16b53 -- 0x16b56
0x16b53:    ff ff ff                                           |...             |
; function: function_16b56 at 0x16b56 -- 0x16b57
; data inside code section at 0x16b57 -- 0x16b60
0x16b57:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16b60 -- 0x16b61
; data inside code section at 0x16b61 -- 0x16b63
0x16b61:    ff ff                                              |..              |
; function: function_16b63 at 0x16b63 -- 0x16b79
0x16b63:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16b69:    24 1c                              	and al, 0x1c
0x16b6b:    89 14 24                           	mov dword ptr [esp], edx
0x16b6e:    e8 cd 04 01 00                     	call 0x27040 <function_27040>
0x16b73:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16b77:    eb dd                              	jmp 0x16b56 <function_16b56>
; section: .text._ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev
; function: _ZN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEED0Ev at 0x16b80 -- 0x16bcf
0x16b80:    53                                 	push ebx
0x16b81:    83 ec 38                           	sub esp, 0x38
0x16b84:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16b88:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16b8e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16b92:    31 c0                              	xor eax, eax
0x16b94:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16b97:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
0x16b9d:    85 c0                              	test eax, eax
0x16b9f:    74 33                              	je 0x16bd4 <function_16bd4>
0x16ba1:    89 04 24                           	mov dword ptr [esp], eax
0x16ba4:    e8 d7 68 01 00                     	call 0x2d480 <function_2d480>
0x16ba9:    8d 43 08                           	lea eax, [ebx + 8]
0x16bac:    89 04 24                           	mov dword ptr [esp], eax
0x16baf:    e8 0c 05 01 00                     	call 0x270c0
0x16bb4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16bb8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16bbf:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16bc5:    75 12                              	jne 0x16bd9 <function_16bd9>
0x16bc7:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x16bcb:    83 c4 38                           	add esp, 0x38
0x16bce:    5b                                 	pop ebx
; data inside code section at 0x16bcf -- 0x16bd0
0x16bcf:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16bd0 -- 0x16bd1
; data inside code section at 0x16bd1 -- 0x16bd4
0x16bd1:    ff ff ff                                           |...             |
; function: function_16bd4 at 0x16bd4 -- 0x16bd9
0x16bd4:    e8 29 e4 00 00                     	call 0x25002 <function_25002>
; function: function_16bd9 at 0x16bd9 -- 0x16bda
; dynamically linked function: __stack_chk_fail at 0x16bda -- 0x16bdb
; data inside code section at 0x16bdb -- 0x16bde
0x16bdb:    ff ff ff                                           |...             |
; function: function_16bde at 0x16bde -- 0x16bdf
; data inside code section at 0x16bdf -- 0x16be8
0x16bdf:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16be8 -- 0x16be9
; data inside code section at 0x16be9 -- 0x16beb
0x16be9:    ff ff                                              |..              |
; function: function_16beb at 0x16beb -- 0x16c01
0x16beb:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16bf1:    24 1c                              	and al, 0x1c
0x16bf3:    89 14 24                           	mov dword ptr [esp], edx
0x16bf6:    e8 c5 04 01 00                     	call 0x270c0
0x16bfb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16bff:    eb dd                              	jmp 0x16bde <function_16bde>
; section: .text._ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE20disconnect_all_slotsEv
; function: _ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE20disconnect_all_slotsEv at 0x16c10 -- 0x16c2b
0x16c10:    56                                 	push esi
0x16c11:    53                                 	push ebx
0x16c12:    83 ec 24                           	sub esp, 0x24
0x16c15:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x16c19:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16c1f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x16c23:    31 c0                              	xor eax, eax
0x16c25:    8d 73 0c                           	lea esi, [ebx + 0xc]
0x16c28:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x16c2b -- 0x16c2c
0x16c2b:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x16c2c -- 0x16c2d
; data inside code section at 0x16c2d -- 0x16c49
0x16c2d:    ff ff ff 8b 03 89 44 24  14 8b 43 04 85 c0 89 44   |......D$..C....D|
0x16c3d:    24 18 74 04 f0 ff 40 04  89 34 24 e8               |$.t...@..4$.    |
; dynamically linked function: pthread_mutex_unlock at 0x16c49 -- 0x16c4a
; data inside code section at 0x16c4a -- 0x16c4c
0x16c4a:    ff ff                                              |..              |
; function: function_16c4c at 0x16c4c -- 0x16cc0
0x16c4c:    ff 8b 44 24 14 85                  	dec dword ptr [ebx - 0x7aebdbbc]
0x16c52:    c0 74 59 8b 00                     	sal byte ptr [ecx + ebx*2 - 0x75], 0
0x16c57:    85 c0                              	test eax, eax
0x16c59:    74 5f                              	je 0x16cba <function_16c4c+0x6e>
0x16c5b:    8b 30                              	mov esi, dword ptr [eax]
0x16c5d:    eb 2c                              	jmp 0x16c8b <function_16c4c+0x3f>
; data inside code section at 0x16c5f -- 0x16c60
0x16c5f:    90                                                 |.               |
0x16c60:    8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0x16c63:    85 db                              	test ebx, ebx
0x16c65:    74 4e                              	je 0x16cb5 <function_16c4c+0x69>
0x16c67:    8b 03                              	mov eax, dword ptr [ebx]
0x16c69:    89 1c 24                           	mov dword ptr [esp], ebx
0x16c6c:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x16c6f:    8b 03                              	mov eax, dword ptr [ebx]
0x16c71:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x16c75:    89 1c 24                           	mov dword ptr [esp], ebx
0x16c78:    ff 50 10                           	call dword ptr [eax + 0x10]
0x16c7b:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x16c7f:    8b 36                              	mov esi, dword ptr [esi]
0x16c81:    85 c0                              	test eax, eax
0x16c83:    74 29                              	je 0x16cae <function_16c4c+0x62>
0x16c85:    8b 00                              	mov eax, dword ptr [eax]
0x16c87:    85 c0                              	test eax, eax
0x16c89:    74 2f                              	je 0x16cba <function_16c4c+0x6e>
0x16c8b:    39 c6                              	cmp esi, eax
0x16c8d:    75 d1                              	jne 0x16c60 <function_16c4c+0x14>
0x16c8f:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x16c93:    89 04 24                           	mov dword ptr [esp], eax
0x16c96:    e8 b5 04 01 00                     	call 0x27150 <function_27150>
0x16c9b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16c9f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16ca6:    75 17                              	jne 0x16cbf <function_16c4c+0x73>
0x16ca8:    83 c4 24                           	add esp, 0x24
0x16cab:    5b                                 	pop ebx
0x16cac:    5e                                 	pop esi
0x16cad:    c3                                 	ret 
0x16cae:    66 90                              	nop 
0x16cb0:    e8 09 e2 00 00                     	call 0x24ebe <function_24ebe>
0x16cb5:    e8 a0 e2 00 00                     	call 0x24f5a <function_24f5a>
0x16cba:    e8 37 e3 00 00                     	call 0x24ff6 <function_24ff6>
0x16cbf:    90                                 	nop 
; data inside code section at 0x16cc0 -- 0x16cc1
0x16cc0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16cc1 -- 0x16cc2
; data inside code section at 0x16cc2 -- 0x16cc6
0x16cc2:    ff ff ff 89                                        |....            |
; function: function_16cc6 at 0x16cc6 -- 0x16cc7
0x16cc6:    c3                                 	ret 
; data inside code section at 0x16cc7 -- 0x16cd7
0x16cc7:    8d 44 24 18 89 04 24 e8  7d 04 01 00 89 1c 24 e8   |.D$...$.}.....$.|
; dynamically linked function: _Unwind_Resume at 0x16cd7 -- 0x16cd8
; data inside code section at 0x16cd8 -- 0x16cdb
0x16cd8:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED2Ev
; function: _ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev at 0x16ce0 -- 0x16d4b
0x16ce0:    53                                 	push ebx
0x16ce1:    83 ec 38                           	sub esp, 0x38
0x16ce4:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16ce8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16cee:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16cf2:    31 c0                              	xor eax, eax
0x16cf4:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16cf7:    c7 03 d8 15 03 00                  	mov dword ptr [ebx], 0x315d8
0x16cfd:    85 c0                              	test eax, eax
0x16cff:    74 2b                              	je 0x16d2c <_ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev+0x4c>
0x16d01:    89 04 24                           	mov dword ptr [esp], eax
0x16d04:    e8 e7 6b 01 00                     	call 0x2d8f0 <function_2d8f0>
0x16d09:    8d 43 08                           	lea eax, [ebx + 8]
0x16d0c:    89 04 24                           	mov dword ptr [esp], eax
0x16d0f:    e8 0c 05 01 00                     	call 0x27220 <function_27220>
0x16d14:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16d18:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16d1f:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16d25:    75 29                              	jne 0x16d50 <function_16d50>
0x16d27:    83 c4 38                           	add esp, 0x38
0x16d2a:    5b                                 	pop ebx
0x16d2b:    c3                                 	ret 
0x16d2c:    c7 44 24 0c 20 bc 02 00            	mov dword ptr [esp + 0xc], 0x2bc20 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>&]"
0x16d34:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x16d3c:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x16d44:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x16d4b -- 0x16d4c
0x16d4b:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x16d4c -- 0x16d4d
; data inside code section at 0x16d4d -- 0x16d50
0x16d4d:    ff ff ff                                           |...             |
; function: function_16d50 at 0x16d50 -- 0x16d51
; dynamically linked function: __stack_chk_fail at 0x16d51 -- 0x16d52
; data inside code section at 0x16d52 -- 0x16d55
0x16d52:    ff ff ff                                           |...             |
; function: function_16d55 at 0x16d55 -- 0x16d56
; data inside code section at 0x16d56 -- 0x16d5f
0x16d56:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16d5f -- 0x16d60
; data inside code section at 0x16d60 -- 0x16d62
0x16d60:    ff ff                                              |..              |
; function: function_16d62 at 0x16d62 -- 0x16d78
0x16d62:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16d68:    24 1c                              	and al, 0x1c
0x16d6a:    89 14 24                           	mov dword ptr [esp], edx
0x16d6d:    e8 ae 04 01 00                     	call 0x27220 <function_27220>
0x16d72:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16d76:    eb dd                              	jmp 0x16d55 <function_16d55>
; section: .text._ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED2Ev
; function: _ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev at 0x16d80 -- 0x16dd1
0x16d80:    53                                 	push ebx
0x16d81:    83 ec 38                           	sub esp, 0x38
0x16d84:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16d88:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16d8e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16d92:    31 c0                              	xor eax, eax
0x16d94:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16d97:    c7 03 d8 15 03 00                  	mov dword ptr [ebx], 0x315d8
0x16d9d:    85 c0                              	test eax, eax
0x16d9f:    74 2b                              	je 0x16dcc <_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev+0x4c>
0x16da1:    89 04 24                           	mov dword ptr [esp], eax
0x16da4:    e8 e7 6b 01 00                     	call 0x2d990 <function_2d990>
0x16da9:    8d 43 08                           	lea eax, [ebx + 8]
0x16dac:    89 04 24                           	mov dword ptr [esp], eax
0x16daf:    e8 0c 05 01 00                     	call 0x272c0 <function_272c0>
0x16db4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16db8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16dbf:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16dc5:    75 0a                              	jne 0x16dd1 <_ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED1Ev+0x4c>
0x16dc7:    83 c4 38                           	add esp, 0x38
0x16dca:    5b                                 	pop ebx
0x16dcb:    c3                                 	ret 
0x16dcc:    e8 65 e4 00 00                     	call 0x25236 <function_25236>
; data inside code section at 0x16dd1 -- 0x16dd2
0x16dd1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16dd2 -- 0x16dd3
; data inside code section at 0x16dd3 -- 0x16dd6
0x16dd3:    ff ff ff                                           |...             |
; function: function_16dd6 at 0x16dd6 -- 0x16dd7
; data inside code section at 0x16dd7 -- 0x16de0
0x16dd7:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16de0 -- 0x16de1
; data inside code section at 0x16de1 -- 0x16de3
0x16de1:    ff ff                                              |..              |
; function: function_16de3 at 0x16de3 -- 0x16df9
0x16de3:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16de9:    24 1c                              	and al, 0x1c
0x16deb:    89 14 24                           	mov dword ptr [esp], edx
0x16dee:    e8 cd 04 01 00                     	call 0x272c0 <function_272c0>
0x16df3:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16df7:    eb dd                              	jmp 0x16dd6 <function_16dd6>
; section: .text._ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev
; function: _ZN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev at 0x16e00 -- 0x16e4f
0x16e00:    53                                 	push ebx
0x16e01:    83 ec 38                           	sub esp, 0x38
0x16e04:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16e08:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16e0e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16e12:    31 c0                              	xor eax, eax
0x16e14:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16e17:    c7 03 d8 15 03 00                  	mov dword ptr [ebx], 0x315d8
0x16e1d:    85 c0                              	test eax, eax
0x16e1f:    74 33                              	je 0x16e54 <function_16e54>
0x16e21:    89 04 24                           	mov dword ptr [esp], eax
0x16e24:    e8 e7 6b 01 00                     	call 0x2da10 <function_2da10>
0x16e29:    8d 43 08                           	lea eax, [ebx + 8]
0x16e2c:    89 04 24                           	mov dword ptr [esp], eax
0x16e2f:    e8 0c 05 01 00                     	call 0x27340 <function_27340>
0x16e34:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16e38:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16e3f:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16e45:    75 12                              	jne 0x16e59 <function_16e59>
0x16e47:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x16e4b:    83 c4 38                           	add esp, 0x38
0x16e4e:    5b                                 	pop ebx
; data inside code section at 0x16e4f -- 0x16e50
0x16e4f:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16e50 -- 0x16e51
; data inside code section at 0x16e51 -- 0x16e54
0x16e51:    ff ff ff                                           |...             |
; function: function_16e54 at 0x16e54 -- 0x16e59
0x16e54:    e8 5d e4 00 00                     	call 0x252b6
; function: function_16e59 at 0x16e59 -- 0x16e5a
; dynamically linked function: __stack_chk_fail at 0x16e5a -- 0x16e5b
; data inside code section at 0x16e5b -- 0x16e5e
0x16e5b:    ff ff ff                                           |...             |
; function: function_16e5e at 0x16e5e -- 0x16e5f
; data inside code section at 0x16e5f -- 0x16e68
0x16e5f:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16e68 -- 0x16e69
; data inside code section at 0x16e69 -- 0x16e6b
0x16e69:    ff ff                                              |..              |
; function: function_16e6b at 0x16e6b -- 0x16e81
0x16e6b:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16e71:    24 1c                              	and al, 0x1c
0x16e73:    89 14 24                           	mov dword ptr [esp], edx
0x16e76:    e8 c5 04 01 00                     	call 0x27340 <function_27340>
0x16e7b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16e7f:    eb dd                              	jmp 0x16e5e <function_16e5e>
; section: .text._ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev
; function: _ZN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEED0Ev at 0x16e90 -- 0x16edf
0x16e90:    53                                 	push ebx
0x16e91:    83 ec 38                           	sub esp, 0x38
0x16e94:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16e98:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16e9e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16ea2:    31 c0                              	xor eax, eax
0x16ea4:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16ea7:    c7 03 d8 15 03 00                  	mov dword ptr [ebx], 0x315d8
0x16ead:    85 c0                              	test eax, eax
0x16eaf:    74 33                              	je 0x16ee4 <function_16ee4>
0x16eb1:    89 04 24                           	mov dword ptr [esp], eax
0x16eb4:    e8 e7 6b 01 00                     	call 0x2daa0 <function_2daa0>
0x16eb9:    8d 43 08                           	lea eax, [ebx + 8]
0x16ebc:    89 04 24                           	mov dword ptr [esp], eax
0x16ebf:    e8 0c 05 01 00                     	call 0x273d0 <function_273d0>
0x16ec4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16ec8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16ecf:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16ed5:    75 12                              	jne 0x16ee9 <function_16ee9>
0x16ed7:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x16edb:    83 c4 38                           	add esp, 0x38
0x16ede:    5b                                 	pop ebx
; data inside code section at 0x16edf -- 0x16ee0
0x16edf:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x16ee0 -- 0x16ee1
; data inside code section at 0x16ee1 -- 0x16ee4
0x16ee1:    ff ff ff                                           |...             |
; function: function_16ee4 at 0x16ee4 -- 0x16ee9
0x16ee4:    e8 5d e4 00 00                     	call 0x25346
; function: function_16ee9 at 0x16ee9 -- 0x16eea
; dynamically linked function: __stack_chk_fail at 0x16eea -- 0x16eeb
; data inside code section at 0x16eeb -- 0x16eee
0x16eeb:    ff ff ff                                           |...             |
; function: function_16eee at 0x16eee -- 0x16eef
; data inside code section at 0x16eef -- 0x16ef8
0x16eef:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x16ef8 -- 0x16ef9
; data inside code section at 0x16ef9 -- 0x16efb
0x16ef9:    ff ff                                              |..              |
; function: function_16efb at 0x16efb -- 0x16f11
0x16efb:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16f01:    24 1c                              	and al, 0x1c
0x16f03:    89 14 24                           	mov dword ptr [esp], edx
0x16f06:    e8 c5 04 01 00                     	call 0x273d0 <function_273d0>
0x16f0b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16f0f:    eb dd                              	jmp 0x16eee <function_16eee>
; section: .text._ZN12CNodeSignalsD2Ev
; function: _ZN12CNodeSignalsD1Ev at 0x16f20 -- 0x16f99
0x16f20:    53                                 	push ebx
0x16f21:    83 ec 38                           	sub esp, 0x38
0x16f24:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x16f28:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x16f2e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x16f32:    31 c0                              	xor eax, eax
0x16f34:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x16f37:    c7 43 0c d8 15 03 00               	mov dword ptr [ebx + 0xc], 0x315d8
0x16f3e:    85 c0                              	test eax, eax
0x16f40:    74 52                              	je 0x16f94 <_ZN12CNodeSignalsD1Ev+0x74>
0x16f42:    89 04 24                           	mov dword ptr [esp], eax
0x16f45:    e8 e6 6b 01 00                     	call 0x2db30 <function_2db30>
0x16f4a:    8d 43 14                           	lea eax, [ebx + 0x14]
0x16f4d:    89 04 24                           	mov dword ptr [esp], eax
0x16f50:    e8 0b 05 01 00                     	call 0x27460 <function_27460>
0x16f55:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x16f58:    c7 43 0c f0 15 03 00               	mov dword ptr [ebx + 0xc], 0x315f0
0x16f5f:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
0x16f65:    85 c0                              	test eax, eax
0x16f67:    74 35                              	je 0x16f9e <function_16f9e>
0x16f69:    89 04 24                           	mov dword ptr [esp], eax
0x16f6c:    e8 af 68 01 00                     	call 0x2d820 <function_2d820>
0x16f71:    8d 43 08                           	lea eax, [ebx + 8]
0x16f74:    89 04 24                           	mov dword ptr [esp], eax
0x16f77:    e8 e4 04 01 00                     	call 0x27460 <function_27460>
0x16f7c:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x16f80:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x16f87:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16f8d:    75 0a                              	jne 0x16f99 <_ZN12CNodeSignalsD1Ev+0x74>
0x16f8f:    83 c4 38                           	add esp, 0x38
0x16f92:    5b                                 	pop ebx
0x16f93:    c3                                 	ret 
0x16f94:    e8 3d e4 00 00                     	call 0x253d6
; data inside code section at 0x16f99 -- 0x16f9a
0x16f99:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x16f9a -- 0x16f9b
; data inside code section at 0x16f9b -- 0x16f9e
0x16f9b:    ff ff ff                                           |...             |
; function: function_16f9e at 0x16f9e -- 0x16fae
0x16f9e:    66 90                              	nop 
0x16fa0:    e8 fd e3 00 00                     	call 0x253a2
0x16fa5:    c7 03 f0 15 03 00                  	mov dword ptr [ebx], 0x315f0
0x16fab:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x16fae -- 0x16faf
0x16fae:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x16faf -- 0x16fb0
; data inside code section at 0x16fb0 -- 0x16fb2
0x16fb0:    ff ff                                              |..              |
; function: function_16fb2 at 0x16fb2 -- 0x16fc8
0x16fb2:    ff 8d 53 08 89 44                  	dec dword ptr [ebp + 0x44890853]
0x16fb8:    24 1c                              	and al, 0x1c
0x16fba:    89 14 24                           	mov dword ptr [esp], edx
0x16fbd:    e8 9e 04 01 00                     	call 0x27460 <function_27460>
0x16fc2:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16fc6:    eb dd                              	jmp 0x16fa5
; function: function_16fc8 at 0x16fc8 -- 0x16fc9
; data inside code section at 0x16fc9 -- 0x16fe3
0x16fc9:    43 0c f0 15 03 00 89 44  24 1c 89 1c 24 e8 45 6a   |C......D$...$.Ej|
0x16fd9:    01 00 8b 44 24 1c 89 04  24 e8                     |...D$...$.      |
; dynamically linked function: _Unwind_Resume at 0x16fe3 -- 0x16fe4
; data inside code section at 0x16fe4 -- 0x16fe6
0x16fe4:    ff ff                                              |..              |
; function: function_16fe6 at 0x16fe6 -- 0x16ffc
0x16fe6:    ff 8d 53 14 89 44                  	dec dword ptr [ebp + 0x44891453]
0x16fec:    24 1c                              	and al, 0x1c
0x16fee:    89 14 24                           	mov dword ptr [esp], edx
0x16ff1:    e8 6a 04 01 00                     	call 0x27460 <function_27460>
0x16ff6:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x16ffa:    eb cc                              	jmp 0x16fc8 <function_16fc8>
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E at 0x17000 -- 0x17037
0x17000:    57                                 	push edi
0x17001:    56                                 	push esi
0x17002:    53                                 	push ebx
0x17003:    83 ec 20                           	sub esp, 0x20
0x17006:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1700a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x17010:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x17014:    31 c0                              	xor eax, eax
0x17016:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1701a:    85 db                              	test ebx, ebx
0x1701c:    75 04                              	jne 0x17022 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE8_M_eraseEPSt13_Rb_tree_nodeIS3_E+0x22>
0x1701e:    eb 20                              	jmp 0x17040 <function_17040>
0x17020:    89 f3                              	mov ebx, esi
0x17022:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x17025:    89 3c 24                           	mov dword ptr [esp], edi
0x17028:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1702c:    e8 cf 6f 01 00                     	call 0x2e000 <function_2e000>
0x17031:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x17034:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x17037 -- 0x17038
0x17037:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x17038 -- 0x17039
; data inside code section at 0x17039 -- 0x17040
0x17039:    ff ff ff 85 f6 75 e0                               |.....u.         |
; function: function_17040 at 0x17040 -- 0x17054
0x17040:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x17044:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1704b:    75 07                              	jne 0x17054 <function_17040+0x13>
0x1704d:    83 c4 20                           	add esp, 0x20
0x17050:    5b                                 	pop ebx
0x17051:    5e                                 	pop esi
0x17052:    5f                                 	pop edi
0x17053:    c3                                 	ret 
; data inside code section at 0x17054 -- 0x17055
0x17054:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17055 -- 0x17056
; data inside code section at 0x17056 -- 0x17059
0x17056:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEED2Ev
; function: _ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEED1Ev at 0x17060 -- 0x17094
0x17060:    83 ec 2c                           	sub esp, 0x2c
0x17063:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x17067:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1706e:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x17072:    31 d2                              	xor edx, edx
0x17074:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x17077:    89 04 24                           	mov dword ptr [esp], eax
0x1707a:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1707e:    e8 dd 6f 01 00                     	call 0x2e060 <function_2e060>
0x17083:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x17087:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1708e:    75 04                              	jne 0x17094 <_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEED1Ev+0x33>
0x17090:    83 c4 2c                           	add esp, 0x2c
0x17093:    c3                                 	ret 
; data inside code section at 0x17094 -- 0x17095
0x17094:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17095 -- 0x17096
; data inside code section at 0x17096 -- 0x17099
0x17096:    ff ff ff                                           |...             |
; section: .text._ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_
; function: _ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_ at 0x170a0 -- 0x173a8
0x170a0:    55                                 	push ebp
0x170a1:    57                                 	push edi
0x170a2:    56                                 	push esi
0x170a3:    53                                 	push ebx
0x170a4:    83 ec 7c                           	sub esp, 0x7c
0x170a7:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0x170ae:    8b 8c 24 ac 00 00 00               	mov ecx, dword ptr [esp + 0xac]
0x170b5:    8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0x170bc:    8b ac 24 a4 00 00 00               	mov ebp, dword ptr [esp + 0xa4]
0x170c3:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x170c7:    8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x170ce:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x170d2:    8b 8c 24 b0 00 00 00               	mov ecx, dword ptr [esp + 0xb0]
0x170d9:    89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x170dd:    8b bc 24 a8 00 00 00               	mov edi, dword ptr [esp + 0xa8]
0x170e4:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x170eb:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x170ef:    31 d2                              	xor edx, edx
0x170f1:    8b 9c 24 94 00 00 00               	mov ebx, dword ptr [esp + 0x94]
0x170f8:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x170fc:    8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x17103:    89 ca                              	mov edx, ecx
0x17105:    8b b4 24 b4 00 00 00               	mov esi, dword ptr [esp + 0xb4]
0x1710c:    89 4c 24 4c                        	mov dword ptr [esp + 0x4c], ecx
0x17110:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x17114:    29 c2                              	sub edx, eax
0x17116:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1711a:    89 d0                              	mov eax, edx
0x1711c:    8b 94 24 9c 00 00 00               	mov edx, dword ptr [esp + 0x9c]
0x17123:    c1 f8 02                           	sar eax, 2
0x17126:    83 e8 01                           	sub eax, 1
0x17129:    6b c8 2a                           	imul ecx, eax, 0x2a
0x1712c:    89 e8                              	mov eax, ebp
0x1712e:    29 f8                              	sub eax, edi
0x17130:    29 da                              	sub edx, ebx
0x17132:    c1 f8 02                           	sar eax, 2
0x17135:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x1713b:    c1 fa 02                           	sar edx, 2
0x1713e:    69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0x17144:    89 5c 24 50                        	mov dword ptr [esp + 0x50], ebx
0x17148:    01 c8                              	add eax, ecx
0x1714a:    8b 0e                              	mov ecx, dword ptr [esi]
0x1714c:    89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0x17150:    01 c2                              	add edx, eax
0x17152:    85 d2                              	test edx, edx
0x17154:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x17158:    89 6c 24 2c                        	mov dword ptr [esp + 0x2c], ebp
0x1715c:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x17160:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x17164:    0f 8e 32 02 00 00                  	jle 0x1739c <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2fc>
0x1716a:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x1716d:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x17171:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x17178:    8b 6c 24 2c                        	mov ebp, dword ptr [esp + 0x2c]
0x1717c:    89 cb                              	mov ebx, ecx
0x1717e:    2b 5c 24 20                        	sub ebx, dword ptr [esp + 0x20]
0x17182:    89 ef                              	mov edi, ebp
0x17184:    2b 7c 24 38                        	sub edi, dword ptr [esp + 0x38]
0x17188:    c1 fb 02                           	sar ebx, 2
0x1718b:    69 db ab aa aa aa                  	imul ebx, ebx, 0xaaaaaaab
0x17191:    c1 ff 02                           	sar edi, 2
0x17194:    69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0x1719a:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1719e:    89 f8                              	mov eax, edi
0x171a0:    85 c0                              	test eax, eax
0x171a2:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x171a6:    89 ef                              	mov edi, ebp
0x171a8:    75 14                              	jne 0x171be <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x11e>
0x171aa:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x171ae:    8b 78 fc                           	mov edi, dword ptr [eax - 4]
0x171b1:    b8 2a 00 00 00                     	mov eax, 0x2a
0x171b6:    81 c7 f8 01 00 00                  	add edi, 0x1f8
0x171bc:    89 fd                              	mov ebp, edi
0x171be:    85 db                              	test ebx, ebx
0x171c0:    89 ca                              	mov edx, ecx
0x171c2:    75 0e                              	jne 0x171d2 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x132>
0x171c4:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x171c7:    b3 2a                              	mov bl, 0x2a
0x171c9:    8b 52 fc                           	mov edx, dword ptr [edx - 4]
0x171cc:    81 c2 f8 01 00 00                  	add edx, 0x1f8
0x171d2:    3b 44 24 24                        	cmp eax, dword ptr [esp + 0x24]
0x171d6:    0f 4f 44 24 24                     	cmovg eax, dword ptr [esp + 0x24]
0x171db:    39 d8                              	cmp eax, ebx
0x171dd:    0f 4e d8                           	cmovle ebx, eax
0x171e0:    8d 04 5b                           	lea eax, [ebx + ebx*2]
0x171e3:    c1 e0 02                           	shl eax, 2
0x171e6:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x171ea:    89 f8                              	mov eax, edi
0x171ec:    2b 44 24 1c                        	sub eax, dword ptr [esp + 0x1c]
0x171f0:    29 c5                              	sub ebp, eax
0x171f2:    c1 fd 02                           	sar ebp, 2
0x171f5:    69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0x171fb:    85 ed                              	test ebp, ebp
0x171fd:    7e 48                              	jle 0x17247 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1a7>
0x171ff:    89 74 24 20                        	mov dword ptr [esp + 0x20], esi
0x17203:    89 de                              	mov esi, ebx
0x17205:    89 eb                              	mov ebx, ebp
0x17207:    89 d5                              	mov ebp, edx
0x17209:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x17210:    83 ef 0c                           	sub edi, 0xc
0x17213:    83 ed 0c                           	sub ebp, 0xc
0x17216:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1721a:    89 2c 24                           	mov dword ptr [esp], ebp
0x1721d:    e8 1e 60 01 00                     	call 0x2d240 <function_2d240>
0x17222:    83 eb 01                           	sub ebx, 1
0x17225:    75 e9                              	jne 0x17210 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x170>
0x17227:    89 f3                              	mov ebx, esi
0x17229:    8b 74 24 20                        	mov esi, dword ptr [esp + 0x20]
0x1722d:    8b 0e                              	mov ecx, dword ptr [esi]
0x1722f:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x17232:    89 cf                              	mov edi, ecx
0x17234:    29 d7                              	sub edi, edx
0x17236:    c1 ff 02                           	sar edi, 2
0x17239:    69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0x1723f:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x17243:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x17247:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1724b:    89 dd                              	mov ebp, ebx
0x1724d:    f7 dd                              	neg ebp
0x1724f:    29 df                              	sub edi, ebx
0x17251:    0f 88 31 01 00 00                  	js 0x17388 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2e8>
0x17257:    83 ff 29                           	cmp edi, 0x29
0x1725a:    0f 8f c8 00 00 00                  	jg 0x17328 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x288>
0x17260:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x17264:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x17268:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1726c:    8d 14 82                           	lea edx, [edx + eax*4]
0x1726f:    29 df                              	sub edi, ebx
0x17271:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x17275:    0f 88 f2 00 00 00                  	js 0x1736d <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2cd>
0x1727b:    83 ff 29                           	cmp edi, 0x29
0x1727e:    7f 58                              	jg 0x172d8 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x238>
0x17280:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x17284:    8d 0c 81                           	lea ecx, [ecx + eax*4]
0x17287:    89 0e                              	mov dword ptr [esi], ecx
0x17289:    29 5c 24 24                        	sub dword ptr [esp + 0x24], ebx
0x1728d:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x17291:    85 c0                              	test eax, eax
0x17293:    0f 8f df fe ff ff                  	jg 0x17178 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0xd8>
0x17299:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x1729d:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x172a1:    89 08                              	mov dword ptr [eax], ecx
0x172a3:    89 50 04                           	mov dword ptr [eax + 4], edx
0x172a6:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x172aa:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x172ad:    89 42 08                           	mov dword ptr [edx + 8], eax
0x172b0:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x172b3:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x172b6:    89 d0                              	mov eax, edx
0x172b8:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x172bc:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x172c3:    0f 85 df 00 00 00                  	jne 0x173a8 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x303>
0x172c9:    83 c4 7c                           	add esp, 0x7c
0x172cc:    5b                                 	pop ebx
0x172cd:    5e                                 	pop esi
0x172ce:    5f                                 	pop edi
0x172cf:    5d                                 	pop ebp
0x172d0:    c2 04 00                           	ret 4
; data inside code section at 0x172d3 -- 0x172d8
0x172d3:    90 8d 74 26 00                                     |..t&.           |
0x172d8:    85 ff                              	test edi, edi
0x172da:    0f 8e 8d 00 00 00                  	jle 0x1736d <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2cd>
0x172e0:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x172e5:    f7 ef                              	imul edi
0x172e7:    89 f8                              	mov eax, edi
0x172e9:    c1 f8 1f                           	sar eax, 0x1f
0x172ec:    c1 fa 03                           	sar edx, 3
0x172ef:    29 c2                              	sub edx, eax
0x172f1:    8d 04 95 00 00 00 00               	lea eax, [edx*4]
0x172f8:    03 46 0c                           	add eax, dword ptr [esi + 0xc]
0x172fb:    6b d2 2a                           	imul edx, edx, 0x2a
0x172fe:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x17301:    8b 00                              	mov eax, dword ptr [eax]
0x17303:    29 d7                              	sub edi, edx
0x17305:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x17309:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1730d:    89 46 04                           	mov dword ptr [esi + 4], eax
0x17310:    05 f8 01 00 00                     	add eax, 0x1f8
0x17315:    89 46 08                           	mov dword ptr [esi + 8], eax
0x17318:    8d 04 7f                           	lea eax, [edi + edi*2]
0x1731b:    8d 0c 82                           	lea ecx, [edx + eax*4]
0x1731e:    89 0e                              	mov dword ptr [esi], ecx
0x17320:    e9 64 ff ff ff                     	jmp 0x17289 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1e9>
; data inside code section at 0x17325 -- 0x17328
0x17325:    8d 76 00                                           |.v.             |
0x17328:    85 ff                              	test edi, edi
0x1732a:    7e 5c                              	jle 0x17388 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2e8>
0x1732c:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x17331:    f7 ef                              	imul edi
0x17333:    89 f8                              	mov eax, edi
0x17335:    c1 f8 1f                           	sar eax, 0x1f
0x17338:    c1 fa 03                           	sar edx, 3
0x1733b:    29 c2                              	sub edx, eax
0x1733d:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x17341:    8d 04 90                           	lea eax, [eax + edx*4]
0x17344:    6b d2 2a                           	imul edx, edx, 0x2a
0x17347:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1734b:    8b 00                              	mov eax, dword ptr [eax]
0x1734d:    29 d7                              	sub edi, edx
0x1734f:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x17353:    8d 04 7f                           	lea eax, [edi + edi*2]
0x17356:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x1735a:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1735e:    8d 04 82                           	lea eax, [edx + eax*4]
0x17361:    29 df                              	sub edi, ebx
0x17363:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x17367:    0f 89 0e ff ff ff                  	jns 0x1727b <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1db>
0x1736d:    89 fa                              	mov edx, edi
0x1736f:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x17374:    f7 d2                              	not edx
0x17376:    d1 ea                              	shr edx, 1
0x17378:    f7 e2                              	mul edx
0x1737a:    c1 ea 02                           	shr edx, 2
0x1737d:    f7 d2                              	not edx
0x1737f:    e9 6d ff ff ff                     	jmp 0x172f1 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x251>
; data inside code section at 0x17384 -- 0x17388
0x17384:    8d 74 26 00                                        |.t&.            |
0x17388:    89 fa                              	mov edx, edi
0x1738a:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x1738f:    f7 d2                              	not edx
0x17391:    d1 ea                              	shr edx, 1
0x17393:    f7 e2                              	mul edx
0x17395:    c1 ea 02                           	shr edx, 2
0x17398:    f7 d2                              	not edx
0x1739a:    eb a1                              	jmp 0x1733d <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x29d>
0x1739c:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1739f:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x173a3:    e9 f1 fe ff ff                     	jmp 0x17299 <_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1f9>
; data inside code section at 0x173a8 -- 0x173a9
0x173a8:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x173a9 -- 0x173aa
; data inside code section at 0x173aa -- 0x173ad
0x173aa:    ff ff ff                                           |...             |
; section: .text._ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_
; function: _ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_ at 0x173b0 -- 0x17661
0x173b0:    55                                 	push ebp
0x173b1:    57                                 	push edi
0x173b2:    56                                 	push esi
0x173b3:    53                                 	push ebx
0x173b4:    83 ec 7c                           	sub esp, 0x7c
0x173b7:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
0x173be:    8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0x173c5:    8b 8c 24 a0 00 00 00               	mov ecx, dword ptr [esp + 0xa0]
0x173cc:    8b 9c 24 9c 00 00 00               	mov ebx, dword ptr [esp + 0x9c]
0x173d3:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x173d7:    8b 84 24 a8 00 00 00               	mov eax, dword ptr [esp + 0xa8]
0x173de:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x173e2:    8b ac 24 94 00 00 00               	mov ebp, dword ptr [esp + 0x94]
0x173e9:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x173f0:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x173f4:    31 d2                              	xor edx, edx
0x173f6:    8b 94 24 a4 00 00 00               	mov edx, dword ptr [esp + 0xa4]
0x173fd:    2b 94 24 a8 00 00 00               	sub edx, dword ptr [esp + 0xa8]
0x17404:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x17408:    8b 84 24 ac 00 00 00               	mov eax, dword ptr [esp + 0xac]
0x1740f:    8b bc 24 98 00 00 00               	mov edi, dword ptr [esp + 0x98]
0x17416:    c1 fa 02                           	sar edx, 2
0x17419:    8b b4 24 b4 00 00 00               	mov esi, dword ptr [esp + 0xb4]
0x17420:    69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0x17426:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1742a:    8b 84 24 b0 00 00 00               	mov eax, dword ptr [esp + 0xb0]
0x17431:    89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0x17435:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x17439:    89 5c 24 58                        	mov dword ptr [esp + 0x58], ebx
0x1743d:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x17441:    29 c8                              	sub eax, ecx
0x17443:    c1 f8 02                           	sar eax, 2
0x17446:    83 e8 01                           	sub eax, 1
0x17449:    6b c0 2a                           	imul eax, eax, 0x2a
0x1744c:    89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x17450:    89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0x17454:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x17458:    01 d0                              	add eax, edx
0x1745a:    89 da                              	mov edx, ebx
0x1745c:    29 ea                              	sub edx, ebp
0x1745e:    c1 fa 02                           	sar edx, 2
0x17461:    69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0x17467:    89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x1746b:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x1746f:    01 c2                              	add edx, eax
0x17471:    85 d2                              	test edx, edx
0x17473:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x17477:    0f 8e da 01 00 00                  	jle 0x17657 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2a7>
0x1747d:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x17480:    8b 0e                              	mov ecx, dword ptr [esi]
0x17482:    8d b6 00 00 00 00                  	lea esi, [esi]
0x17488:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1748c:    29 c8                              	sub eax, ecx
0x1748e:    2b 54 24 20                        	sub edx, dword ptr [esp + 0x20]
0x17492:    c1 f8 02                           	sar eax, 2
0x17495:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x17499:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x1749f:    c1 fa 02                           	sar edx, 2
0x174a2:    69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0x174a8:    39 d0                              	cmp eax, edx
0x174aa:    0f 4e d0                           	cmovle edx, eax
0x174ad:    3b 54 24 1c                        	cmp edx, dword ptr [esp + 0x1c]
0x174b1:    0f 4e da                           	cmovle ebx, edx
0x174b4:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x174b8:    8d 04 5b                           	lea eax, [ebx + ebx*2]
0x174bb:    c1 e0 02                           	shl eax, 2
0x174be:    89 c5                              	mov ebp, eax
0x174c0:    c1 fd 02                           	sar ebp, 2
0x174c3:    01 c2                              	add edx, eax
0x174c5:    69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0x174cb:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x174cf:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x174d3:    85 ed                              	test ebp, ebp
0x174d5:    7e 30                              	jle 0x17507 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x157>
0x174d7:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x174db:    89 cf                              	mov edi, ecx
0x174dd:    89 74 24 30                        	mov dword ptr [esp + 0x30], esi
0x174e1:    89 de                              	mov esi, ebx
0x174e3:    29 c8                              	sub eax, ecx
0x174e5:    89 c3                              	mov ebx, eax
0x174e7:    90                                 	nop 
0x174e8:    8d 04 1f                           	lea eax, [edi + ebx]
0x174eb:    89 3c 24                           	mov dword ptr [esp], edi
0x174ee:    83 c7 0c                           	add edi, 0xc
0x174f1:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x174f5:    e8 56 60 01 00                     	call 0x2d550 <function_2d550>
0x174fa:    83 ed 01                           	sub ebp, 1
0x174fd:    75 e9                              	jne 0x174e8 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x138>
0x174ff:    89 f3                              	mov ebx, esi
0x17501:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x17505:    8b 0e                              	mov ecx, dword ptr [esi]
0x17507:    8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0x1750b:    2b 7c 24 28                        	sub edi, dword ptr [esp + 0x28]
0x1750f:    c1 ff 02                           	sar edi, 2
0x17512:    69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0x17518:    01 df                              	add edi, ebx
0x1751a:    0f 88 20 01 00 00                  	js 0x17640 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x290>
0x17520:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x17524:    83 ff 29                           	cmp edi, 0x29
0x17527:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x1752b:    7e 46                              	jle 0x17573 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1c3>
0x1752d:    85 ff                              	test edi, edi
0x1752f:    0f 8e 0b 01 00 00                  	jle 0x17640 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x290>
0x17535:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x1753a:    f7 ef                              	imul edi
0x1753c:    89 f8                              	mov eax, edi
0x1753e:    c1 f8 1f                           	sar eax, 0x1f
0x17541:    c1 fa 03                           	sar edx, 3
0x17544:    29 c2                              	sub edx, eax
0x17546:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1754a:    8d 04 90                           	lea eax, [eax + edx*4]
0x1754d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x17551:    6b d2 2a                           	imul edx, edx, 0x2a
0x17554:    8b 00                              	mov eax, dword ptr [eax]
0x17556:    29 d7                              	sub edi, edx
0x17558:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1755c:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x17560:    05 f8 01 00 00                     	add eax, 0x1f8
0x17565:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x17569:    8d 04 7f                           	lea eax, [edi + edi*2]
0x1756c:    8d 04 82                           	lea eax, [edx + eax*4]
0x1756f:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x17573:    89 cf                              	mov edi, ecx
0x17575:    2b 7e 04                           	sub edi, dword ptr [esi + 4]
0x17578:    c1 ff 02                           	sar edi, 2
0x1757b:    69 ff ab aa aa aa                  	imul edi, edi, 0xaaaaaaab
0x17581:    01 df                              	add edi, ebx
0x17583:    0f 88 9f 00 00 00                  	js 0x17628 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x278>
0x17589:    83 ff 29                           	cmp edi, 0x29
0x1758c:    7f 52                              	jg 0x175e0 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x230>
0x1758e:    03 4c 24 24                        	add ecx, dword ptr [esp + 0x24]
0x17592:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x17595:    89 0e                              	mov dword ptr [esi], ecx
0x17597:    29 5c 24 1c                        	sub dword ptr [esp + 0x1c], ebx
0x1759b:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1759f:    85 d2                              	test edx, edx
0x175a1:    0f 8f e1 fe ff ff                  	jg 0x17488 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0xd8>
0x175a7:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x175ab:    89 0a                              	mov dword ptr [edx], ecx
0x175ad:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x175b1:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x175b4:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x175b7:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x175ba:    89 51 04                           	mov dword ptr [ecx + 4], edx
0x175bd:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x175c1:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x175c8:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x175cb:    89 c8                              	mov eax, ecx
0x175cd:    0f 85 8e 00 00 00                  	jne 0x17661 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x2ac>
0x175d3:    83 c4 7c                           	add esp, 0x7c
0x175d6:    5b                                 	pop ebx
0x175d7:    5e                                 	pop esi
0x175d8:    5f                                 	pop edi
0x175d9:    5d                                 	pop ebp
0x175da:    c2 04 00                           	ret 4
; data inside code section at 0x175dd -- 0x175e0
0x175dd:    8d 76 00                                           |.v.             |
0x175e0:    85 ff                              	test edi, edi
0x175e2:    7e 44                              	jle 0x17628 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x278>
0x175e4:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x175e9:    f7 ef                              	imul edi
0x175eb:    89 f8                              	mov eax, edi
0x175ed:    c1 f8 1f                           	sar eax, 0x1f
0x175f0:    c1 fa 03                           	sar edx, 3
0x175f3:    29 c2                              	sub edx, eax
0x175f5:    8d 04 95 00 00 00 00               	lea eax, [edx*4]
0x175fc:    03 46 0c                           	add eax, dword ptr [esi + 0xc]
0x175ff:    6b d2 2a                           	imul edx, edx, 0x2a
0x17602:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x17605:    8b 08                              	mov ecx, dword ptr [eax]
0x17607:    29 d7                              	sub edi, edx
0x17609:    8d 14 7f                           	lea edx, [edi + edi*2]
0x1760c:    8d 81 f8 01 00 00                  	lea eax, [ecx + 0x1f8]
0x17612:    89 4e 04                           	mov dword ptr [esi + 4], ecx
0x17615:    8d 0c 91                           	lea ecx, [ecx + edx*4]
0x17618:    89 46 08                           	mov dword ptr [esi + 8], eax
0x1761b:    89 0e                              	mov dword ptr [esi], ecx
0x1761d:    e9 75 ff ff ff                     	jmp 0x17597 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1e7>
; data inside code section at 0x17622 -- 0x17628
0x17622:    8d b6 00 00 00 00                                  |......          |
0x17628:    89 fa                              	mov edx, edi
0x1762a:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x1762f:    f7 d2                              	not edx
0x17631:    d1 ea                              	shr edx, 1
0x17633:    f7 e2                              	mul edx
0x17635:    c1 ea 02                           	shr edx, 2
0x17638:    f7 d2                              	not edx
0x1763a:    eb b9                              	jmp 0x175f5 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x245>
; data inside code section at 0x1763c -- 0x17640
0x1763c:    8d 74 26 00                                        |.t&.            |
0x17640:    89 fa                              	mov edx, edi
0x17642:    b8 31 0c c3 30                     	mov eax, 0x30c30c31
0x17647:    f7 d2                              	not edx
0x17649:    d1 ea                              	shr edx, 1
0x1764b:    f7 e2                              	mul edx
0x1764d:    c1 ea 02                           	shr edx, 2
0x17650:    f7 d2                              	not edx
0x17652:    e9 ef fe ff ff                     	jmp 0x17546 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x196>
0x17657:    8b 0e                              	mov ecx, dword ptr [esi]
0x17659:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1765c:    e9 46 ff ff ff                     	jmp 0x175a7 <_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_+0x1f7>
; data inside code section at 0x17661 -- 0x17662
0x17661:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17662 -- 0x17663
; data inside code section at 0x17663 -- 0x17666
0x17663:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_ at 0x17670 -- 0x17de1
0x17670:    55                                 	push ebp
0x17671:    57                                 	push edi
0x17672:    56                                 	push esi
0x17673:    53                                 	push ebx
0x17674:    81 ec 5c 01 00 00                  	sub esp, 0x15c
0x1767a:    8b 84 24 78 01 00 00               	mov eax, dword ptr [esp + 0x178]
0x17681:    8b 94 24 7c 01 00 00               	mov edx, dword ptr [esp + 0x17c]
0x17688:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x1768f:    89 8c 24 4c 01 00 00               	mov dword ptr [esp + 0x14c], ecx
0x17696:    31 c9                              	xor ecx, ecx
0x17698:    8b b4 24 70 01 00 00               	mov esi, dword ptr [esp + 0x170]
0x1769f:    8b 9c 24 74 01 00 00               	mov ebx, dword ptr [esp + 0x174]
0x176a6:    8b 38                              	mov edi, dword ptr [eax]
0x176a8:    8b 2a                              	mov ebp, dword ptr [edx]
0x176aa:    39 ef                              	cmp edi, ebp
0x176ac:    0f 84 d6 06 00 00                  	je 0x17d88 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x718>
0x176b2:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x176b5:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x176b9:    39 cf                              	cmp edi, ecx
0x176bb:    8b 4b 18                           	mov ecx, dword ptr [ebx + 0x18]
0x176be:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x176c2:    0f 84 f0 05 00 00                  	je 0x17cb8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x648>
0x176c8:    8b 4a 0c                           	mov ecx, dword ptr [edx + 0xc]
0x176cb:    89 4c 24 60                        	mov dword ptr [esp + 0x60], ecx
0x176cf:    8b 48 0c                           	mov ecx, dword ptr [eax + 0xc]
0x176d2:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x176d6:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x176d9:    89 4c 24 64                        	mov dword ptr [esp + 0x64], ecx
0x176dd:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x176e0:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x176e3:    89 4c 24 68                        	mov dword ptr [esp + 0x68], ecx
0x176e7:    8b 4c 24 60                        	mov ecx, dword ptr [esp + 0x60]
0x176eb:    2b 4c 24 44                        	sub ecx, dword ptr [esp + 0x44]
0x176ef:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x176f3:    c1 f9 02                           	sar ecx, 2
0x176f6:    83 e9 01                           	sub ecx, 1
0x176f9:    6b c9 2a                           	imul ecx, ecx, 0x2a
0x176fc:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x17700:    89 e9                              	mov ecx, ebp
0x17702:    2b 4c 24 64                        	sub ecx, dword ptr [esp + 0x64]
0x17706:    c1 f9 02                           	sar ecx, 2
0x17709:    69 c9 ab aa aa aa                  	imul ecx, ecx, 0xaaaaaaab
0x1770f:    03 4c 24 38                        	add ecx, dword ptr [esp + 0x38]
0x17713:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x17717:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x1771b:    29 f9                              	sub ecx, edi
0x1771d:    c1 f9 02                           	sar ecx, 2
0x17720:    69 c9 ab aa aa aa                  	imul ecx, ecx, 0xaaaaaaab
0x17726:    03 4c 24 38                        	add ecx, dword ptr [esp + 0x38]
0x1772a:    89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0x1772e:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x17731:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x17735:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x17739:    2b 44 24 40                        	sub eax, dword ptr [esp + 0x40]
0x1773d:    8b 4b 14                           	mov ecx, dword ptr [ebx + 0x14]
0x17740:    c1 f8 02                           	sar eax, 2
0x17743:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x17749:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1774d:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x17751:    2b 4c 24 38                        	sub ecx, dword ptr [esp + 0x38]
0x17755:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x17759:    89 f8                              	mov eax, edi
0x1775b:    2b 44 24 6c                        	sub eax, dword ptr [esp + 0x6c]
0x1775f:    c1 f9 02                           	sar ecx, 2
0x17762:    83 e9 01                           	sub ecx, 1
0x17765:    c1 f8 02                           	sar eax, 2
0x17768:    6b c9 2a                           	imul ecx, ecx, 0x2a
0x1776b:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x17771:    01 c8                              	add eax, ecx
0x17773:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x17776:    03 44 24 5c                        	add eax, dword ptr [esp + 0x5c]
0x1777a:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1777e:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x17781:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x17785:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x17789:    2b 44 24 54                        	sub eax, dword ptr [esp + 0x54]
0x1778d:    c1 f8 02                           	sar eax, 2
0x17790:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x17796:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1779a:    89 c8                              	mov eax, ecx
0x1779c:    2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0x177a0:    c1 f8 02                           	sar eax, 2
0x177a3:    83 e8 01                           	sub eax, 1
0x177a6:    6b c0 2a                           	imul eax, eax, 0x2a
0x177a9:    03 44 24 3c                        	add eax, dword ptr [esp + 0x3c]
0x177ad:    03 44 24 5c                        	add eax, dword ptr [esp + 0x5c]
0x177b1:    2b 44 24 50                        	sub eax, dword ptr [esp + 0x50]
0x177b5:    d1 e8                              	shr eax, 1
0x177b7:    39 44 24 4c                        	cmp dword ptr [esp + 0x4c], eax
0x177bb:    0f 87 37 02 00 00                  	ja 0x179f8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x388>
0x177c1:    3b 7c 24 40                        	cmp edi, dword ptr [esp + 0x40]
0x177c5:    0f 84 e4 00 00 00                  	je 0x178af <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x23f>
0x177cb:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x177ce:    8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x177d1:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x177d5:    89 ac 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], ebp
0x177dc:    89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x177e3:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x177e7:    89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0x177ee:    89 94 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], edx
0x177f5:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x177f9:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x177fd:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x17801:    89 84 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], eax
0x17808:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x1780c:    89 bc 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], edi
0x17813:    89 94 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], edx
0x1781a:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x1781e:    89 7c 24 14                        	mov dword ptr [esp + 0x14], edi
0x17822:    89 84 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], eax
0x17829:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1782d:    89 94 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], edx
0x17834:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x17838:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x1783f:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x17843:    89 94 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], edx
0x1784a:    8d 94 24 9c 00 00 00               	lea edx, [esp + 0x9c]
0x17851:    89 84 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], eax
0x17858:    8d 84 24 cc 00 00 00               	lea eax, [esp + 0xcc]
0x1785f:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x17863:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x17867:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1786b:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x1786f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x17873:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x17877:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1787b:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1787f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17883:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x17887:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x1788b:    89 14 24                           	mov dword ptr [esp], edx
0x1788e:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x17892:    e8 79 6e 01 00                     	call 0x2e710 <function_2e710>
0x17897:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x1789a:    83 ec 04                           	sub esp, 4
0x1789d:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x178a1:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x178a4:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x178a8:    8b 4b 14                           	mov ecx, dword ptr [ebx + 0x14]
0x178ab:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x178af:    8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x178b2:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x178b6:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x178ba:    29 c8                              	sub eax, ecx
0x178bc:    c1 f8 02                           	sar eax, 2
0x178bf:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x178c5:    03 44 24 50                        	add eax, dword ptr [esp + 0x50]
0x178c9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x178cd:    0f 88 d5 04 00 00                  	js 0x17da8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x738>
0x178d3:    83 f8 29                           	cmp eax, 0x29
0x178d6:    0f 8f 4c 03 00 00                  	jg 0x17c28 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x5b8>
0x178dc:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x178e0:    89 cd                              	mov ebp, ecx
0x178e2:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x178e6:    8d 04 52                           	lea eax, [edx + edx*2]
0x178e9:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x178ed:    8d 04 82                           	lea eax, [edx + eax*4]
0x178f0:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x178f4:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x178f8:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x178fc:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17900:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17904:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x17908:    89 ac 24 f0 00 00 00               	mov dword ptr [esp + 0xf0], ebp
0x1790f:    89 84 24 ec 00 00 00               	mov dword ptr [esp + 0xec], eax
0x17916:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1791a:    89 94 24 f4 00 00 00               	mov dword ptr [esp + 0xf4], edx
0x17921:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x17925:    89 bc 24 f8 00 00 00               	mov dword ptr [esp + 0xf8], edi
0x1792c:    89 1c 24                           	mov dword ptr [esp], ebx
0x1792f:    89 84 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], eax
0x17936:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x1793a:    89 94 24 e0 00 00 00               	mov dword ptr [esp + 0xe0], edx
0x17941:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x17945:    89 84 24 e4 00 00 00               	mov dword ptr [esp + 0xe4], eax
0x1794c:    8d 84 24 ec 00 00 00               	lea eax, [esp + 0xec]
0x17953:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x17957:    8d 84 24 dc 00 00 00               	lea eax, [esp + 0xdc]
0x1795e:    89 94 24 e8 00 00 00               	mov dword ptr [esp + 0xe8], edx
0x17965:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17969:    e8 22 50 01 00                     	call 0x2c990 <function_2c990>
0x1796e:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x17971:    89 fa                              	mov edx, edi
0x17973:    e8 b8 fd ff ff                     	call 0x17730 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x14b>
0x17978:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x1797c:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17980:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x17984:    89 6b 0c                           	mov dword ptr [ebx + 0xc], ebp
0x17987:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x1798a:    89 53 10                           	mov dword ptr [ebx + 0x10], edx
0x1798d:    89 7b 14                           	mov dword ptr [ebx + 0x14], edi
0x17990:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17994:    29 c8                              	sub eax, ecx
0x17996:    89 c1                              	mov ecx, eax
0x17998:    c1 f9 02                           	sar ecx, 2
0x1799b:    69 c9 ab aa aa aa                  	imul ecx, ecx, 0xaaaaaaab
0x179a1:    03 4c 24 4c                        	add ecx, dword ptr [esp + 0x4c]
0x179a5:    0f 88 c5 03 00 00                  	js 0x17d70 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x700>
0x179ab:    83 f9 29                           	cmp ecx, 0x29
0x179ae:    0f 8f cc 02 00 00                  	jg 0x17c80 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x610>
0x179b4:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x179b8:    8d 04 49                           	lea eax, [ecx + ecx*2]
0x179bb:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x179bf:    8d 14 81                           	lea edx, [ecx + eax*4]
0x179c2:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x179c6:    89 16                              	mov dword ptr [esi], edx
0x179c8:    89 6e 04                           	mov dword ptr [esi + 4], ebp
0x179cb:    89 46 08                           	mov dword ptr [esi + 8], eax
0x179ce:    89 7e 0c                           	mov dword ptr [esi + 0xc], edi
0x179d1:    8b 94 24 4c 01 00 00               	mov edx, dword ptr [esp + 0x14c]
0x179d8:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x179df:    89 f0                              	mov eax, esi
0x179e1:    0f 85 fa 03 00 00                  	jne 0x17de1 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x76c>
0x179e7:    81 c4 5c 01 00 00                  	add esp, 0x15c
0x179ed:    5b                                 	pop ebx
0x179ee:    5e                                 	pop esi
0x179ef:    5f                                 	pop edi
0x179f0:    5d                                 	pop ebp
0x179f1:    c2 04 00                           	ret 4
; data inside code section at 0x179f4 -- 0x179f8
0x179f4:    8d 74 26 00                                        |.t&.            |
0x179f8:    3b 6c 24 48                        	cmp ebp, dword ptr [esp + 0x48]
0x179fc:    0f 84 f0 00 00 00                  	je 0x17af2 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x482>
0x17a02:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x17a06:    8b 52 08                           	mov edx, dword ptr [edx + 8]
0x17a09:    89 8c 24 18 01 00 00               	mov dword ptr [esp + 0x118], ecx
0x17a10:    89 bc 24 1c 01 00 00               	mov dword ptr [esp + 0x11c], edi
0x17a17:    89 84 24 20 01 00 00               	mov dword ptr [esp + 0x120], eax
0x17a1e:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x17a22:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x17a26:    8b 54 24 68                        	mov edx, dword ptr [esp + 0x68]
0x17a2a:    89 ac 24 fc 00 00 00               	mov dword ptr [esp + 0xfc], ebp
0x17a31:    89 84 24 28 01 00 00               	mov dword ptr [esp + 0x128], eax
0x17a38:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x17a3c:    89 94 24 24 01 00 00               	mov dword ptr [esp + 0x124], edx
0x17a43:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17a47:    89 84 24 10 01 00 00               	mov dword ptr [esp + 0x110], eax
0x17a4e:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x17a52:    89 94 24 0c 01 00 00               	mov dword ptr [esp + 0x10c], edx
0x17a59:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x17a5c:    89 84 24 00 01 00 00               	mov dword ptr [esp + 0x100], eax
0x17a63:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x17a67:    89 94 24 14 01 00 00               	mov dword ptr [esp + 0x114], edx
0x17a6e:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x17a72:    89 84 24 08 01 00 00               	mov dword ptr [esp + 0x108], eax
0x17a79:    8d 84 24 1c 01 00 00               	lea eax, [esp + 0x11c]
0x17a80:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x17a84:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x17a88:    89 94 24 04 01 00 00               	mov dword ptr [esp + 0x104], edx
0x17a8f:    8d 94 24 9c 00 00 00               	lea edx, [esp + 0x9c]
0x17a96:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x17a9a:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x17a9e:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x17aa2:    8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0x17aa5:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x17aa9:    8b 4c 24 64                        	mov ecx, dword ptr [esp + 0x64]
0x17aad:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x17ab1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x17ab5:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x17ab9:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x17abd:    89 14 24                           	mov dword ptr [esp], edx
0x17ac0:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x17ac4:    e8 57 6f 01 00                     	call 0x2ea20 <function_2ea20>
0x17ac9:    8b 4b 18                           	mov ecx, dword ptr [ebx + 0x18]
0x17acc:    83 ec 04                           	sub esp, 4
0x17acf:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x17ad3:    8b 4b 1c                           	mov ecx, dword ptr [ebx + 0x1c]
0x17ad6:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x17ada:    89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0x17ade:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x17ae1:    2b 44 24 54                        	sub eax, dword ptr [esp + 0x54]
0x17ae5:    c1 f8 02                           	sar eax, 2
0x17ae8:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x17aee:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x17af2:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x17af6:    8b 43 20                           	mov eax, dword ptr [ebx + 0x20]
0x17af9:    2b 54 24 50                        	sub edx, dword ptr [esp + 0x50]
0x17afd:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x17b01:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x17b05:    0f 88 bd 02 00 00                  	js 0x17dc8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x758>
0x17b0b:    83 fa 29                           	cmp edx, 0x29
0x17b0e:    7e 48                              	jle 0x17b58 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x4e8>
0x17b10:    8b 7c 24 3c                        	mov edi, dword ptr [esp + 0x3c]
0x17b14:    85 ff                              	test edi, edi
0x17b16:    0f 8e ac 02 00 00                  	jle 0x17dc8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x758>
0x17b1c:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17b20:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17b25:    f7 ea                              	imul edx
0x17b27:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17b2b:    c1 fa 03                           	sar edx, 3
0x17b2e:    c1 f8 1f                           	sar eax, 0x1f
0x17b31:    29 c2                              	sub edx, eax
0x17b33:    8d 3c 91                           	lea edi, [ecx + edx*4]
0x17b36:    8b 2f                              	mov ebp, dword ptr [edi]
0x17b38:    6b d2 2a                           	imul edx, edx, 0x2a
0x17b3b:    8d 85 f8 01 00 00                  	lea eax, [ebp + 0x1f8]
0x17b41:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x17b45:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17b49:    29 d0                              	sub eax, edx
0x17b4b:    8d 04 40                           	lea eax, [eax + eax*2]
0x17b4e:    8d 44 85 00                        	lea eax, [ebp + eax*4]
0x17b52:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x17b56:    eb 22                              	jmp 0x17b7a <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x50a>
0x17b58:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x17b5c:    89 cf                              	mov edi, ecx
0x17b5e:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17b62:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x17b66:    f7 d8                              	neg eax
0x17b68:    8d 04 40                           	lea eax, [eax + eax*2]
0x17b6b:    8d 04 82                           	lea eax, [edx + eax*4]
0x17b6e:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x17b72:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x17b76:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x17b7a:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17b7e:    89 8c 24 48 01 00 00               	mov dword ptr [esp + 0x148], ecx
0x17b85:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x17b89:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x17b8d:    89 ac 24 30 01 00 00               	mov dword ptr [esp + 0x130], ebp
0x17b94:    89 94 24 3c 01 00 00               	mov dword ptr [esp + 0x13c], edx
0x17b9b:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x17b9f:    89 8c 24 2c 01 00 00               	mov dword ptr [esp + 0x12c], ecx
0x17ba6:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x17baa:    89 84 24 40 01 00 00               	mov dword ptr [esp + 0x140], eax
0x17bb1:    8d 84 24 3c 01 00 00               	lea eax, [esp + 0x13c]
0x17bb8:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x17bbc:    8d 84 24 2c 01 00 00               	lea eax, [esp + 0x12c]
0x17bc3:    89 94 24 44 01 00 00               	mov dword ptr [esp + 0x144], edx
0x17bca:    89 8c 24 34 01 00 00               	mov dword ptr [esp + 0x134], ecx
0x17bd1:    89 bc 24 38 01 00 00               	mov dword ptr [esp + 0x138], edi
0x17bd8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17bdc:    89 1c 24                           	mov dword ptr [esp], ebx
0x17bdf:    e8 ac 4d 01 00                     	call 0x2c990 <function_2c990>
0x17be4:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x17be7:    8d 47 04                           	lea eax, [edi + 4]
0x17bea:    83 c2 04                           	add edx, 4
0x17bed:    e8 3e fb ff ff                     	call 0x17730 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x14b>
0x17bf2:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x17bf6:    89 6b 1c                           	mov dword ptr [ebx + 0x1c], ebp
0x17bf9:    8b 6b 0c                           	mov ebp, dword ptr [ebx + 0xc]
0x17bfc:    89 7b 24                           	mov dword ptr [ebx + 0x24], edi
0x17bff:    8b 7b 14                           	mov edi, dword ptr [ebx + 0x14]
0x17c02:    89 4b 18                           	mov dword ptr [ebx + 0x18], ecx
0x17c05:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x17c09:    89 4b 20                           	mov dword ptr [ebx + 0x20], ecx
0x17c0c:    8b 4b 08                           	mov ecx, dword ptr [ebx + 8]
0x17c0f:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x17c13:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x17c16:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x17c1a:    89 e9                              	mov ecx, ebp
0x17c1c:    e9 6f fd ff ff                     	jmp 0x17990 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x320>
; data inside code section at 0x17c21 -- 0x17c28
0x17c21:    8d b4 26 00 00 00 00                               |..&....         |
0x17c28:    8b 6c 24 3c                        	mov ebp, dword ptr [esp + 0x3c]
0x17c2c:    85 ed                              	test ebp, ebp
0x17c2e:    0f 8e 74 01 00 00                  	jle 0x17da8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x738>
0x17c34:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17c38:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17c3d:    f7 ea                              	imul edx
0x17c3f:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17c43:    c1 fa 03                           	sar edx, 3
0x17c46:    c1 f8 1f                           	sar eax, 0x1f
0x17c49:    29 c2                              	sub edx, eax
0x17c4b:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x17c4f:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17c53:    8d 3c 91                           	lea edi, [ecx + edx*4]
0x17c56:    6b d2 2a                           	imul edx, edx, 0x2a
0x17c59:    8b 2f                              	mov ebp, dword ptr [edi]
0x17c5b:    29 d0                              	sub eax, edx
0x17c5d:    8d 04 40                           	lea eax, [eax + eax*2]
0x17c60:    8d 8d f8 01 00 00                  	lea ecx, [ebp + 0x1f8]
0x17c66:    8d 44 85 00                        	lea eax, [ebp + eax*4]
0x17c6a:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x17c6e:    89 e9                              	mov ecx, ebp
0x17c70:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x17c74:    e9 83 fc ff ff                     	jmp 0x178fc <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x28c>
; data inside code section at 0x17c79 -- 0x17c80
0x17c79:    8d b4 26 00 00 00 00                               |..&....         |
0x17c80:    85 c9                              	test ecx, ecx
0x17c82:    0f 8e e8 00 00 00                  	jle 0x17d70 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x700>
0x17c88:    89 c8                              	mov eax, ecx
0x17c8a:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17c8f:    f7 ea                              	imul edx
0x17c91:    89 c8                              	mov eax, ecx
0x17c93:    c1 f8 1f                           	sar eax, 0x1f
0x17c96:    c1 fa 03                           	sar edx, 3
0x17c99:    29 c2                              	sub edx, eax
0x17c9b:    8d 3c 97                           	lea edi, [edi + edx*4]
0x17c9e:    6b d2 2a                           	imul edx, edx, 0x2a
0x17ca1:    8b 2f                              	mov ebp, dword ptr [edi]
0x17ca3:    29 d1                              	sub ecx, edx
0x17ca5:    8d 14 49                           	lea edx, [ecx + ecx*2]
0x17ca8:    8d 85 f8 01 00 00                  	lea eax, [ebp + 0x1f8]
0x17cae:    8d 54 95 00                        	lea edx, [ebp + edx*4]
0x17cb2:    e9 0f fd ff ff                     	jmp 0x179c6 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x356>
; data inside code section at 0x17cb7 -- 0x17cb8
0x17cb7:    90                                                 |.               |
0x17cb8:    39 cd                              	cmp ebp, ecx
0x17cba:    0f 85 08 fa ff ff                  	jne 0x176c8 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x58>
0x17cc0:    8b 4b 0c                           	mov ecx, dword ptr [ebx + 0xc]
0x17cc3:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x17cc6:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x17cc9:    89 ac 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ebp
0x17cd0:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x17cd4:    8b 4b 10                           	mov ecx, dword ptr [ebx + 0x10]
0x17cd7:    89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0x17cde:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x17ce1:    89 84 24 90 00 00 00               	mov dword ptr [esp + 0x90], eax
0x17ce8:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x17cec:    89 7c 24 7c                        	mov dword ptr [esp + 0x7c], edi
0x17cf0:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x17cf4:    8b 4b 14                           	mov ecx, dword ptr [ebx + 0x14]
0x17cf7:    89 94 24 98 00 00 00               	mov dword ptr [esp + 0x98], edx
0x17cfe:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x17d02:    89 84 24 80 00 00 00               	mov dword ptr [esp + 0x80], eax
0x17d09:    8d 84 24 8c 00 00 00               	lea eax, [esp + 0x8c]
0x17d10:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x17d14:    8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x17d18:    89 8c 24 88 00 00 00               	mov dword ptr [esp + 0x88], ecx
0x17d1f:    89 94 24 84 00 00 00               	mov dword ptr [esp + 0x84], edx
0x17d26:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x17d2a:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x17d2e:    89 1c 24                           	mov dword ptr [esp], ebx
0x17d31:    e8 5a 4c 01 00                     	call 0x2c990 <function_2c990>
0x17d36:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x17d3a:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x17d3d:    8d 41 04                           	lea eax, [ecx + 4]
0x17d40:    83 c2 04                           	add edx, 4
0x17d43:    e8 e8 f9 ff ff                     	call 0x17730 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x14b>
0x17d48:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x17d4c:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x17d50:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x17d54:    89 7b 18                           	mov dword ptr [ebx + 0x18], edi
0x17d57:    89 4b 24                           	mov dword ptr [ebx + 0x24], ecx
0x17d5a:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x17d5d:    89 53 20                           	mov dword ptr [ebx + 0x20], edx
0x17d60:    89 3e                              	mov dword ptr [esi], edi
0x17d62:    89 46 04                           	mov dword ptr [esi + 4], eax
0x17d65:    89 56 08                           	mov dword ptr [esi + 8], edx
0x17d68:    89 4e 0c                           	mov dword ptr [esi + 0xc], ecx
0x17d6b:    e9 61 fc ff ff                     	jmp 0x179d1 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x361>
0x17d70:    89 c8                              	mov eax, ecx
0x17d72:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17d77:    f7 d0                              	not eax
0x17d79:    d1 e8                              	shr eax, 1
0x17d7b:    f7 e2                              	mul edx
0x17d7d:    c1 ea 02                           	shr edx, 2
0x17d80:    f7 d2                              	not edx
0x17d82:    e9 14 ff ff ff                     	jmp 0x17c9b <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x62b>
; data inside code section at 0x17d87 -- 0x17d88
0x17d87:    90                                                 |.               |
0x17d88:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x17d8b:    89 3e                              	mov dword ptr [esi], edi
0x17d8d:    89 56 04                           	mov dword ptr [esi + 4], edx
0x17d90:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x17d93:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x17d96:    89 56 08                           	mov dword ptr [esi + 8], edx
0x17d99:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x17d9c:    e9 30 fc ff ff                     	jmp 0x179d1 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x361>
; data inside code section at 0x17da1 -- 0x17da8
0x17da1:    8d b4 26 00 00 00 00                               |..&....         |
0x17da8:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17dac:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17db1:    f7 d0                              	not eax
0x17db3:    d1 e8                              	shr eax, 1
0x17db5:    f7 e2                              	mul edx
0x17db7:    c1 ea 02                           	shr edx, 2
0x17dba:    f7 d2                              	not edx
0x17dbc:    e9 8a fe ff ff                     	jmp 0x17c4b <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x5db>
; data inside code section at 0x17dc1 -- 0x17dc8
0x17dc1:    8d b4 26 00 00 00 00                               |..&....         |
0x17dc8:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x17dcc:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x17dd1:    f7 d0                              	not eax
0x17dd3:    d1 e8                              	shr eax, 1
0x17dd5:    f7 e2                              	mul edx
0x17dd7:    c1 ea 02                           	shr edx, 2
0x17dda:    f7 d2                              	not edx
0x17ddc:    e9 52 fd ff ff                     	jmp 0x17b33 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE5eraseESt15_Deque_iteratorIS3_RS3_PS3_ES9_+0x4c3>
; data inside code section at 0x17de1 -- 0x17de2
0x17de1:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17de2 -- 0x17de3
; data inside code section at 0x17de3 -- 0x17de6
0x17de3:    ff ff ff                                           |...             |
; section: .text._ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag
; function: _ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag at 0x17df0 -- 0x17ef0
0x17df0:    55                                 	push ebp
0x17df1:    57                                 	push edi
0x17df2:    56                                 	push esi
0x17df3:    53                                 	push ebx
0x17df4:    83 ec 2c                           	sub esp, 0x2c
0x17df7:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x17dfb:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x17dff:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x17e03:    8b 6c 24 4c                        	mov ebp, dword ptr [esp + 0x4c]
0x17e07:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x17e0b:    8b 74 24 0c                        	mov esi, dword ptr [esp + 0xc]
0x17e0f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x17e16:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x17e1a:    31 d2                              	xor edx, edx
0x17e1c:    89 f9                              	mov ecx, edi
0x17e1e:    29 fe                              	sub esi, edi
0x17e20:    89 f2                              	mov edx, esi
0x17e22:    c1 fe 04                           	sar esi, 4
0x17e25:    c1 fa 02                           	sar edx, 2
0x17e28:    85 f6                              	test esi, esi
0x17e2a:    7e 61                              	jle 0x17e8d <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0x9d>
0x17e2c:    8b 5d 00                           	mov ebx, dword ptr [ebp]
0x17e2f:    39 1f                              	cmp dword ptr [edi], ebx
0x17e31:    0f 84 99 00 00 00                  	je 0x17ed0 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe0>
0x17e37:    3b 5f 04                           	cmp ebx, dword ptr [edi + 4]
0x17e3a:    0f 84 a5 00 00 00                  	je 0x17ee5 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xf5>
0x17e40:    3b 5f 08                           	cmp ebx, dword ptr [edi + 8]
0x17e43:    0f 84 a1 00 00 00                  	je 0x17eea <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xfa>
0x17e49:    3b 5f 0c                           	cmp ebx, dword ptr [edi + 0xc]
0x17e4c:    75 2c                              	jne 0x17e7a <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0x8a>
0x17e4e:    66 90                              	nop 
0x17e50:    eb 52                              	jmp 0x17ea4 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb4>
; data inside code section at 0x17e52 -- 0x17e58
0x17e52:    8d b6 00 00 00 00                                  |......          |
0x17e58:    39 1a                              	cmp dword ptr [edx], ebx
0x17e5a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x17e60:    74 6e                              	je 0x17ed0 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe0>
0x17e62:    39 5a 04                           	cmp dword ptr [edx + 4], ebx
0x17e65:    8d 79 04                           	lea edi, [ecx + 4]
0x17e68:    74 3e                              	je 0x17ea8 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb8>
0x17e6a:    39 5a 08                           	cmp dword ptr [edx + 8], ebx
0x17e6d:    8d 79 08                           	lea edi, [ecx + 8]
0x17e70:    74 36                              	je 0x17ea8 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb8>
0x17e72:    39 5a 0c                           	cmp dword ptr [edx + 0xc], ebx
0x17e75:    8d 79 0c                           	lea edi, [ecx + 0xc]
0x17e78:    74 2e                              	je 0x17ea8 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb8>
0x17e7a:    8d 51 10                           	lea edx, [ecx + 0x10]
0x17e7d:    83 ee 01                           	sub esi, 1
0x17e80:    89 d1                              	mov ecx, edx
0x17e82:    75 d4                              	jne 0x17e58 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0x68>
0x17e84:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x17e88:    29 ca                              	sub edx, ecx
0x17e8a:    c1 fa 02                           	sar edx, 2
0x17e8d:    83 fa 02                           	cmp edx, 2
0x17e90:    74 2f                              	je 0x17ec1 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xd1>
0x17e92:    83 fa 03                           	cmp edx, 3
0x17e95:    74 42                              	je 0x17ed9 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe9>
0x17e97:    83 fa 01                           	cmp edx, 1
0x17e9a:    74 38                              	je 0x17ed4 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe4>
0x17e9c:    8b 54 24 0c                        	mov edx, dword ptr [esp + 0xc]
0x17ea0:    89 10                              	mov dword ptr [eax], edx
0x17ea2:    eb 06                              	jmp 0x17eaa <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xba>
0x17ea4:    83 c7 0c                           	add edi, 0xc
0x17ea7:    90                                 	nop 
0x17ea8:    89 38                              	mov dword ptr [eax], edi
0x17eaa:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x17eae:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x17eb5:    75 38                              	jne 0x17eef <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xff>
0x17eb7:    83 c4 2c                           	add esp, 0x2c
0x17eba:    5b                                 	pop ebx
0x17ebb:    5e                                 	pop esi
0x17ebc:    5f                                 	pop edi
0x17ebd:    5d                                 	pop ebp
0x17ebe:    c2 04 00                           	ret 4
0x17ec1:    8b 55 00                           	mov edx, dword ptr [ebp]
0x17ec4:    39 11                              	cmp dword ptr [ecx], edx
0x17ec6:    74 08                              	je 0x17ed0 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe0>
0x17ec8:    83 c1 04                           	add ecx, 4
0x17ecb:    3b 11                              	cmp edx, dword ptr [ecx]
0x17ecd:    75 cd                              	jne 0x17e9c <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xac>
0x17ecf:    90                                 	nop 
0x17ed0:    89 08                              	mov dword ptr [eax], ecx
0x17ed2:    eb d6                              	jmp 0x17eaa <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xba>
0x17ed4:    8b 55 00                           	mov edx, dword ptr [ebp]
0x17ed7:    eb f2                              	jmp 0x17ecb <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xdb>
0x17ed9:    8b 55 00                           	mov edx, dword ptr [ebp]
0x17edc:    39 11                              	cmp dword ptr [ecx], edx
0x17ede:    74 f0                              	je 0x17ed0 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xe0>
0x17ee0:    83 c1 04                           	add ecx, 4
0x17ee3:    eb df                              	jmp 0x17ec4 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xd4>
0x17ee5:    83 c7 04                           	add edi, 4
0x17ee8:    eb be                              	jmp 0x17ea8 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb8>
0x17eea:    83 c7 08                           	add edi, 8
0x17eed:    eb b9                              	jmp 0x17ea8 <_ZSt6__findIN9__gnu_cxx17__normal_iteratorIPP5CNodeSt6vectorIS3_SaIS3_EEEES3_ET_S9_S9_RKT0_St26random_access_iterator_tag+0xb8>
0x17eef:    90                                 	nop 
; data inside code section at 0x17ef0 -- 0x17ef1
0x17ef0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x17ef1 -- 0x17ef2
; data inside code section at 0x17ef2 -- 0x17ef5
0x17ef2:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
; function: _ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_ at 0x17f00 -- 0x17f4f
0x17f00:    83 ec 5c                           	sub esp, 0x5c
0x17f03:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x17f07:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x17f0b:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x17f0f:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x17f13:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x17f17:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x17f1b:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x17f1f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x17f25:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x17f29:    31 c0                              	xor eax, eax
0x17f2b:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x17f2f:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x17f33:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x17f37:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x17f3b:    85 c0                              	test eax, eax
0x17f3d:    c6 44 24 20 01                     	mov byte ptr [esp + 0x20], 1
0x17f42:    0f 84 d0 00 00 00                  	je 0x18018 <function_18018>
0x17f48:    c7 04 24 1c 00 00 00               	mov dword ptr [esp], 0x1c
; data inside code section at 0x17f4f -- 0x17f50
0x17f4f:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x17f50 -- 0x17f51
; data inside code section at 0x17f51 -- 0x17f58
0x17f51:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_17f58 at 0x17f58 -- 0x17f59
0x17f58:    c3                                 	ret 
; data inside code section at 0x17f59 -- 0x17f7b
0x17f59:    74 3b 8b 7e 04 31 d2 2b  3e c7 40 10 00 00 00 00   |t;.~.1.+>.@.....|
0x17f69:    c7 40 14 00 00 00 00 85  ff c7 40 18 00 00 00 00   |.@........@.....|
0x17f79:    75 6d                                              |um              |
; function: function_17f7b at 0x17f7b -- 0x17f7c
; data inside code section at 0x17f7c -- 0x17f91
0x17f7c:    d7 89 53 10 89 53 14 89  7b 18 8b 06 8b 4e 04 31   |..S..S..{....N.1|
0x17f8c:    f6 29 c1 75 67                                     |.).ug           |
; function: function_17f91 at 0x17f91 -- 0x17f92
; data inside code section at 0x17f92 -- 0x17fb2
0x17f92:    f2 89 53 14 8d 45 04 8b  54 24 1c 89 44 24 0c 0f   |..S..E..T$..D$..|
0x17fa2:    b6 44 24 20 89 5c 24 04  89 54 24 08 89 04 24 e8   |.D$ .\$..T$...$.|
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x17fb2 -- 0x17fb3
; data inside code section at 0x17fb3 -- 0x17fb5
0x17fb3:    ff ff                                              |..              |
; function: function_17fb5 at 0x17fb5 -- 0x17fe7
0x17fb5:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x17fbb:    45                                 	inc ebp
0x17fbc:    14 01                              	adc al, 1
0x17fbe:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x17fc2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x17fc9:    89 18                              	mov dword ptr [eax], ebx
0x17fcb:    0f 85 99 00 00 00                  	jne 0x1806a <function_1806a>
0x17fd1:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x17fd5:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x17fd9:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x17fdd:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x17fe1:    83 c4 5c                           	add esp, 0x5c
0x17fe4:    c2 04 00                           	ret 4
; data inside code section at 0x17fe7 -- 0x17fec
0x17fe7:    90 89 3c 24 e8                                     |..<$.           |
; dynamically linked function: _Znwj at 0x17fec -- 0x17fed
; data inside code section at 0x17fed -- 0x17ff0
0x17fed:    ff ff ff                                           |...             |
; function: function_17ff0 at 0x17ff0 -- 0x17ff4
0x17ff0:    89 c2                              	mov edx, eax
0x17ff2:    eb 87                              	jmp 0x17f7b <function_17f7b>
; data inside code section at 0x17ff4 -- 0x1800a
0x17ff4:    8d 74 26 00 89 14 24 89  ce 89 54 24 14 89 4c 24   |.t&...$...T$..L$|
0x18004:    08 89 44 24 04 e8                                  |..D$..          |
; dynamically linked function: memmove at 0x1800a -- 0x1800b
; data inside code section at 0x1800b -- 0x1800e
0x1800b:    ff ff ff                                           |...             |
; function: function_1800e at 0x1800e -- 0x18017
0x1800e:    8b 54 24 14                        	mov edx, dword ptr [esp + 0x14]
0x18012:    e9 7a ff ff ff                     	jmp 0x17f91 <function_17f91>
; data inside code section at 0x18017 -- 0x18018
0x18017:    90                                                 |.               |
; function: function_18018 at 0x18018 -- 0x18046
0x18018:    8d 45 04                           	lea eax, [ebp + 4]
0x1801b:    39 c2                              	cmp edx, eax
0x1801d:    0f 84 25 ff ff ff                  	je 0x17f48
0x18023:    89 d0                              	mov eax, edx
0x18025:    8b 0e                              	mov ecx, dword ptr [esi]
0x18027:    8b 52 10                           	mov edx, dword ptr [edx + 0x10]
0x1802a:    8b 78 14                           	mov edi, dword ptr [eax + 0x14]
0x1802d:    8b 5e 04                           	mov ebx, dword ptr [esi + 4]
0x18030:    89 0c 24                           	mov dword ptr [esp], ecx
0x18033:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x18037:    29 d7                              	sub edi, edx
0x18039:    29 cb                              	sub ebx, ecx
0x1803b:    89 f8                              	mov eax, edi
0x1803d:    39 fb                              	cmp ebx, edi
0x1803f:    0f 46 c3                           	cmovbe eax, ebx
0x18042:    89 44 24 08                        	mov dword ptr [esp + 8], eax
; data inside code section at 0x18046 -- 0x18047
0x18046:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x18047 -- 0x18048
; data inside code section at 0x18048 -- 0x1804b
0x18048:    ff ff ff                                           |...             |
; function: function_1804b at 0x1804b -- 0x1806a
0x1804b:    39 fb                              	cmp ebx, edi
0x1804d:    0f 92 44 24 20                     	setb byte ptr [esp + 0x20]
0x18052:    89 c2                              	mov edx, eax
0x18054:    c1 ea 1f                           	shr edx, 0x1f
0x18057:    85 c0                              	test eax, eax
0x18059:    0f b6 44 24 20                     	movzx eax, byte ptr [esp + 0x20]
0x1805e:    0f 45 c2                           	cmovne eax, edx
0x18061:    88 44 24 20                        	mov byte ptr [esp + 0x20], al
0x18065:    e9 de fe ff ff                     	jmp 0x17f48
; function: function_1806a at 0x1806a -- 0x1806b
; dynamically linked function: __stack_chk_fail at 0x1806b -- 0x1806c
; data inside code section at 0x1806c -- 0x18073
0x1806c:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x18073 -- 0x18074
; data inside code section at 0x18074 -- 0x1807b
0x18074:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x1807b -- 0x1807c
; data inside code section at 0x1807c -- 0x18080
0x1807c:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x18080 -- 0x18081
; data inside code section at 0x18081 -- 0x18085
0x18081:    ff ff ff 89                                        |....            |
; function: function_18085 at 0x18085 -- 0x18086
0x18085:    c3                                 	ret 
; data inside code section at 0x18086 -- 0x18087
0x18086:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x18087 -- 0x18088
; data inside code section at 0x18088 -- 0x1808f
0x18088:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1808f -- 0x18090
; data inside code section at 0x18090 -- 0x18093
0x18090:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_
; function: _ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_ at 0x180a0 -- 0x18123
0x180a0:    55                                 	push ebp
0x180a1:    57                                 	push edi
0x180a2:    56                                 	push esi
0x180a3:    53                                 	push ebx
0x180a4:    83 ec 5c                           	sub esp, 0x5c
0x180a7:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x180ab:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x180af:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x180b3:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x180b7:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x180bb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x180c1:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x180c5:    31 c0                              	xor eax, eax
0x180c7:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x180cb:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x180cf:    8b 72 08                           	mov esi, dword ptr [edx + 8]
0x180d2:    85 f6                              	test esi, esi
0x180d4:    0f 84 c4 00 00 00                  	je 0x1819e <function_1819e>
0x180da:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x180de:    8b 12                              	mov edx, dword ptr [edx]
0x180e0:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x180e4:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x180e8:    8b 7a 04                           	mov edi, dword ptr [edx + 4]
0x180eb:    2b 7c 24 2c                        	sub edi, dword ptr [esp + 0x2c]
0x180ef:    eb 10                              	jmp 0x18101 <_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_+0x61>
; data inside code section at 0x180f1 -- 0x180f8
0x180f1:    8d b4 26 00 00 00 00                               |..&....         |
0x180f8:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x180fb:    85 c0                              	test eax, eax
0x180fd:    74 43                              	je 0x18142 <function_18142>
0x180ff:    89 c6                              	mov esi, eax
0x18101:    8b 6e 10                           	mov ebp, dword ptr [esi + 0x10]
0x18104:    89 fa                              	mov edx, edi
0x18106:    8b 5e 14                           	mov ebx, dword ptr [esi + 0x14]
0x18109:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1810d:    29 eb                              	sub ebx, ebp
0x1810f:    39 fb                              	cmp ebx, edi
0x18111:    0f 46 d3                           	cmovbe edx, ebx
0x18114:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x18118:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1811c:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x18120:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x18123 -- 0x18124
0x18123:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x18124 -- 0x18125
; data inside code section at 0x18125 -- 0x1812b
0x18125:    ff ff ff 39 fb 0f                                  |...9..          |
; function: function_1812b at 0x1812b -- 0x18139
0x1812b:    97                                 	xchg eax, edi
0x1812c:    c1 89 c2 c1 ea 1f 85               	ror dword ptr [ecx + 0x1feac1c2], -0x7b
0x18133:    c0 0f 45                           	ror byte ptr [edi], 0x45
0x18136:    ca 84 c9                           	retf -0x367c
; data inside code section at 0x18139 -- 0x18142
0x18139:    75 bd 8b 46 0c 85 c0 75  bd                        |u..F...u.       |
; function: function_18142 at 0x18142 -- 0x1815d
0x18142:    84 c9                              	test cl, cl
0x18144:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x18148:    89 74 24 28                        	mov dword ptr [esp + 0x28], esi
0x1814c:    75 5a                              	jne 0x181a8
0x1814e:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x18152:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x18156:    89 2c 24                           	mov dword ptr [esp], ebp
0x18159:    89 54 24 04                        	mov dword ptr [esp + 4], edx
; data inside code section at 0x1815d -- 0x1815e
0x1815d:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1815e -- 0x1815f
; data inside code section at 0x1815f -- 0x18163
0x1815f:    ff ff ff 39                                        |...9            |
; function: function_18163 at 0x18163 -- 0x18169
0x18163:    df 0f                              	fisttp word ptr [edi]
0x18165:    97                                 	xchg eax, edi
0x18166:    c2 89 c1                           	ret 0xc189
; data inside code section at 0x18169 -- 0x1816a
0x18169:    c1                                                 |.               |
; function: function_1816a at 0x1816a -- 0x1816f
0x1816a:    e9 1f 85 c0 0f                     	jmp 0xfc2068e <function_fc2068e>
; data inside code section at 0x1816f -- 0x1817f
0x1816f:    45 d1 84 d2 75 7b 8b 44  24 30 89 30 c6 40 04 00   |E...u{.D$0.0.@..|
; function: function_1817f at 0x1817f -- 0x1819e
0x1817f:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x18183:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1818a:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1818e:    0f 85 9e 00 00 00                  	jne 0x18232 <function_18232>
0x18194:    83 c4 5c                           	add esp, 0x5c
0x18197:    5b                                 	pop ebx
0x18198:    5e                                 	pop esi
0x18199:    5f                                 	pop edi
0x1819a:    5d                                 	pop ebp
0x1819b:    c2 04 00                           	ret 4
; function: function_1819e at 0x1819e -- 0x181bc
0x1819e:    83 c2 04                           	add edx, 4
0x181a1:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x181a5:    8d 76 00                           	lea esi, [esi]
0x181a8:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x181ac:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x181b0:    3b 42 0c                           	cmp eax, dword ptr [edx + 0xc]
0x181b3:    74 3b                              	je 0x181f0 <function_181f0>
0x181b5:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x181b9:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x181bc -- 0x181bd
0x181bc:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x181bd -- 0x181be
; data inside code section at 0x181be -- 0x181c0
0x181be:    ff ff                                              |..              |
; function: function_181c0 at 0x181c0 -- 0x181ec
0x181c0:    ff 8b 54 24 34 8b                  	dec dword ptr [ebx - 0x74cbdbac]
0x181c6:    12 8b 68 10 89 c6                  	adc cl, byte ptr [ebx - 0x3976ef98]
0x181cc:    8b 58 14                           	mov ebx, dword ptr [eax + 0x14]
0x181cf:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x181d3:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x181d7:    29 eb                              	sub ebx, ebp
0x181d9:    8b 7a 04                           	mov edi, dword ptr [edx + 4]
0x181dc:    2b 7c 24 2c                        	sub edi, dword ptr [esp + 0x2c]
0x181e0:    39 fb                              	cmp ebx, edi
0x181e2:    89 fa                              	mov edx, edi
0x181e4:    0f 46 d3                           	cmovbe edx, ebx
0x181e7:    e9 62 ff ff ff                     	jmp 0x1814e <function_1814e>
; data inside code section at 0x181ec -- 0x181f0
0x181ec:    8d 74 26 00                                        |.t&.            |
; function: function_181f0 at 0x181f0 -- 0x18232
0x181f0:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x181f4:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x181f8:    89 04 24                           	mov dword ptr [esp], eax
0x181fb:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x18203:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x18207:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1820b:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1820f:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x18213:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x18217:    e8 84 7d 01 00                     	call 0x2ffa0 <function_2ffa0>
0x1821c:    83 ec 04                           	sub esp, 4
0x1821f:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x18223:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x18227:    89 02                              	mov dword ptr [edx], eax
0x18229:    c6 42 04 01                        	mov byte ptr [edx + 4], 1
0x1822d:    e9 4d ff ff ff                     	jmp 0x1817f <function_1817f>
; function: function_18232 at 0x18232 -- 0x18233
; dynamically linked function: __stack_chk_fail at 0x18233 -- 0x18234
; data inside code section at 0x18234 -- 0x18237
0x18234:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_
; function: _ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_ at 0x18240 -- 0x1828e
0x18240:    83 ec 4c                           	sub esp, 0x4c
0x18243:    ba 01 00 00 00                     	mov edx, 1
0x18248:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1824e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x18252:    31 c0                              	xor eax, eax
0x18254:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x18258:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1825c:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x18260:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x18264:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x18268:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1826c:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x18270:    85 c0                              	test eax, eax
0x18272:    8d 4e 04                           	lea ecx, [esi + 4]
0x18275:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x18279:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1827d:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x18281:    74 7d                              	je 0x18300 <function_18300>
0x18283:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x18287:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1828e -- 0x1828f
0x1828e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1828f -- 0x18290
; data inside code section at 0x18290 -- 0x182cb
0x18290:    ff ff ff 8b 54 24 18 83  f8 f0 74 17 8b 0b 89 48   |....T$....t....H|
0x182a0:    10 8b 4b 04 89 48 14 8b  4b 08 89 48 18 8b 4b 0c   |..K..H..K..H..K.|
0x182b0:    89 48 1c 8b 4c 24 1c 89  44 24 04 89 14 24 89 44   |.H..L$..D$...$.D|
0x182c0:    24 18 89 4c 24 0c 89 6c  24 08 e8                  |$..L$..l$..     |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x182cb -- 0x182cc
; data inside code section at 0x182cc -- 0x182ce
0x182cc:    ff ff                                              |..              |
; function: function_182ce at 0x182ce -- 0x182fe
0x182ce:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x182d4:    46                                 	inc esi
0x182d5:    14 01                              	adc al, 1
0x182d7:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x182db:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x182e2:    89 07                              	mov dword ptr [edi], eax
0x182e4:    89 f8                              	mov eax, edi
0x182e6:    75 3b                              	jne 0x18323 <function_18323>
0x182e8:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x182ec:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x182f0:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x182f4:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x182f8:    83 c4 4c                           	add esp, 0x4c
0x182fb:    c2 04 00                           	ret 4
; data inside code section at 0x182fe -- 0x18300
0x182fe:    66 90                                              |f.              |
; function: function_18300 at 0x18300 -- 0x18312
0x18300:    39 cd                              	cmp ebp, ecx
0x18302:    0f 84 7b ff ff ff                  	je 0x18283
0x18308:    8d 45 10                           	lea eax, [ebp + 0x10]
0x1830b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1830f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x18312 -- 0x18313
0x18312:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x18313 -- 0x18314
; data inside code section at 0x18314 -- 0x18317
0x18314:    ff ff ff                                           |...             |
; function: function_18317 at 0x18317 -- 0x18323
0x18317:    31 d2                              	xor edx, edx
0x18319:    84 c0                              	test al, al
0x1831b:    0f 95 c2                           	setne dl
0x1831e:    e9 60 ff ff ff                     	jmp 0x18283
; function: function_18323 at 0x18323 -- 0x18324
; dynamically linked function: __stack_chk_fail at 0x18324 -- 0x18325
; data inside code section at 0x18325 -- 0x18328
0x18325:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_
; function: _ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_ at 0x18330 -- 0x18373
0x18330:    55                                 	push ebp
0x18331:    57                                 	push edi
0x18332:    56                                 	push esi
0x18333:    53                                 	push ebx
0x18334:    83 ec 4c                           	sub esp, 0x4c
0x18337:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x1833b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18341:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x18345:    31 c0                              	xor eax, eax
0x18347:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1834b:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x1834f:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x18352:    85 db                              	test ebx, ebx
0x18354:    75 13                              	jne 0x18369 <_ZNSt8_Rb_treeI8CNetAddrS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_+0x39>
0x18356:    e9 ac 00 00 00                     	jmp 0x18407 <function_18407>
; data inside code section at 0x1835b -- 0x18360
0x1835b:    90 8d 74 26 00                                     |..t&.           |
0x18360:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x18363:    85 d2                              	test edx, edx
0x18365:    74 1c                              	je 0x18383 <function_18383>
0x18367:    89 d3                              	mov ebx, edx
0x18369:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1836c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x18370:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x18373 -- 0x18374
0x18373:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x18374 -- 0x18375
; data inside code section at 0x18375 -- 0x18383
0x18375:    ff ff ff 84 c0 75 e4 8b  53 0c 85 d2 75 e4         |.....u..S...u.  |
; function: function_18383 at 0x18383 -- 0x18387
0x18383:    84 c0                              	test al, al
0x18385:    74 49                              	je 0x183d0
; function: function_18387 at 0x18387 -- 0x1838f
0x18387:    3b 5d 0c                           	cmp ebx, dword ptr [ebp + 0xc]
0x1838a:    74 4c                              	je 0x183d8 <function_183d8>
0x1838c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1838f -- 0x18390
0x1838f:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x18390 -- 0x18391
; data inside code section at 0x18391 -- 0x18395
0x18391:    ff ff ff 89                                        |....            |
; function: function_18395 at 0x18395 -- 0x18398
0x18395:    c2 8d 42                           	ret 0x428d
; data inside code section at 0x18398 -- 0x183a5
0x18398:    10 89 54 24 28 89 74 24  04 89 04 24 e8            |..T$(.t$...$.   |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x183a5 -- 0x183a6
; data inside code section at 0x183a6 -- 0x183b7
0x183a6:    ff ff ff 8b 54 24 28 84  c0 75 27 89 17 c6 47 04   |....T$(..u'...G.|
0x183b6:    00                                                 |.               |
; function: function_183b7 at 0x183b7 -- 0x183d0
0x183b7:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x183bb:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x183c2:    89 f8                              	mov eax, edi
0x183c4:    75 49                              	jne 0x1840f <function_1840f>
0x183c6:    83 c4 4c                           	add esp, 0x4c
0x183c9:    5b                                 	pop ebx
0x183ca:    5e                                 	pop esi
0x183cb:    5f                                 	pop edi
0x183cc:    5d                                 	pop ebp
0x183cd:    c2 04 00                           	ret 4
; function: function_183d0 at 0x183d0 -- 0x183d4
0x183d0:    89 da                              	mov edx, ebx
0x183d2:    eb c2                              	jmp 0x18396
; data inside code section at 0x183d4 -- 0x183d8
0x183d4:    8d 74 26 00                                        |.t&.            |
; function: function_183d8 at 0x183d8 -- 0x18407
0x183d8:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x183dc:    89 04 24                           	mov dword ptr [esp], eax
0x183df:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x183e3:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x183e7:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x183ef:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x183f3:    e8 78 81 01 00                     	call 0x30570 <function_30570>
0x183f8:    83 ec 04                           	sub esp, 4
0x183fb:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x183ff:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x18403:    89 07                              	mov dword ptr [edi], eax
0x18405:    eb b0                              	jmp 0x183b7 <function_183b7>
; function: function_18407 at 0x18407 -- 0x1840f
0x18407:    8d 5d 04                           	lea ebx, [ebp + 4]
0x1840a:    e9 78 ff ff ff                     	jmp 0x18387 <function_18387>
; function: function_1840f at 0x1840f -- 0x18410
; dynamically linked function: __stack_chk_fail at 0x18410 -- 0x18411
; data inside code section at 0x18411 -- 0x18414
0x18411:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11equal_rangeERS2_
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11equal_rangeERS2_ at 0x18420 -- 0x1845e
0x18420:    55                                 	push ebp
0x18421:    57                                 	push edi
0x18422:    56                                 	push esi
0x18423:    53                                 	push ebx
0x18424:    83 ec 3c                           	sub esp, 0x3c
0x18427:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1842b:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x18432:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x18436:    31 d2                              	xor edx, edx
0x18438:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1843c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18440:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x18444:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x18447:    83 c0 04                           	add eax, 4
0x1844a:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1844e:    66 90                              	nop 
0x18450:    85 db                              	test ebx, ebx
0x18452:    74 1a                              	je 0x1846e <function_1846e>
0x18454:    8d 7b 10                           	lea edi, [ebx + 0x10]
0x18457:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1845b:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1845e -- 0x1845f
0x1845e:    e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x1845f -- 0x18460
; data inside code section at 0x18460 -- 0x1846e
0x18460:    ff ff ff 84 c0 74 39 8b  5b 0c 85 db 75 e6         |.....t9.[...u.  |
; function: function_1846e at 0x1846e -- 0x1849a
0x1846e:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x18472:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18476:    89 10                              	mov dword ptr [eax], edx
0x18478:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1847b:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1847f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x18486:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1848a:    0f 85 a5 00 00 00                  	jne 0x18535 <function_18535>
0x18490:    83 c4 3c                           	add esp, 0x3c
0x18493:    5b                                 	pop ebx
0x18494:    5e                                 	pop esi
0x18495:    5f                                 	pop edi
0x18496:    5d                                 	pop ebp
0x18497:    c2 04 00                           	ret 4
; data inside code section at 0x1849a -- 0x184a8
0x1849a:    8d b6 00 00 00 00 89 7c  24 04 89 34 24 e8         |.......|$..4$.  |
; dynamically linked function: _ZltRK4CInvS1_ at 0x184a8 -- 0x184a9
; data inside code section at 0x184a9 -- 0x184ab
0x184a9:    ff ff                                              |..              |
; function: function_184ab at 0x184ab -- 0x184b9
0x184ab:    ff 84 c0 74 10 89 5c               	inc dword ptr [eax + eax*8 + 0x5c891074]
0x184b2:    24 18                              	and al, 0x18
0x184b4:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x184b7:    eb 97                              	jmp 0x18450
; data inside code section at 0x184b9 -- 0x184c8
0x184b9:    8d b4 26 00 00 00 00 8b  7b 08 8b 6b 0c 66 90      |..&.....{..k.f. |
; function: function_184c8 at 0x184c8 -- 0x184c9
; data inside code section at 0x184c9 -- 0x184d7
0x184c9:    ed 74 24 8d 45 10 89 44  24 04 89 34 24 e8         |.t$.E..D$..4$.  |
; dynamically linked function: _ZltRK4CInvS1_ at 0x184d7 -- 0x184d8
; data inside code section at 0x184d8 -- 0x184f0
0x184d8:    ff ff ff 84 c0 74 51 89  6c 24 18 8b 6d 08 85 ed   |.....tQ.l$..m...|
0x184e8:    75 e2 8d b6 00 00 00 00                            |u.......        |
; function: function_184f0 at 0x184f0 -- 0x184f1
; data inside code section at 0x184f1 -- 0x184f4
0x184f1:    ff 74 1c                                           |.t.             |
; function: function_184f4 at 0x184f4 -- 0x184f5
; data inside code section at 0x184f5 -- 0x184ff
0x184f5:    47 10 89 74 24 04 89 04  24 e8                     |G..t$...$.      |
; dynamically linked function: _ZltRK4CInvS1_ at 0x184ff -- 0x18500
; data inside code section at 0x18500 -- 0x18502
0x18500:    ff ff                                              |..              |
; function: function_18502 at 0x18502 -- 0x18522
0x18502:    ff 84 c0 75 21 89 fb               	inc dword ptr [eax + eax*8 - 0x476de8b]
0x18509:    8b 7f 08                           	mov edi, dword ptr [edi + 8]
0x1850c:    85 ff                              	test edi, edi
0x1850e:    75 e4                              	jne 0x184f4 <function_184f4>
0x18510:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18514:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x18518:    89 18                              	mov dword ptr [eax], ebx
0x1851a:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1851d:    e9 59 ff ff ff                     	jmp 0x1847b
; data inside code section at 0x18522 -- 0x18528
0x18522:    8d b6 00 00 00 00                                  |......          |
; function: function_18528 at 0x18528 -- 0x1852d
0x18528:    8b 7f 0c                           	mov edi, dword ptr [edi + 0xc]
0x1852b:    eb c3                              	jmp 0x184f0 <function_184f0>
; data inside code section at 0x1852d -- 0x18530
0x1852d:    8d 76 00                                           |.v.             |
; function: function_18530 at 0x18530 -- 0x18535
0x18530:    8b 6d 0c                           	mov ebp, dword ptr [ebp + 0xc]
0x18533:    eb 93                              	jmp 0x184c8 <function_184c8>
; function: function_18535 at 0x18535 -- 0x18536
; dynamically linked function: __stack_chk_fail at 0x18536 -- 0x18537
; data inside code section at 0x18537 -- 0x1853a
0x18537:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_ at 0x18540 -- 0x18588
0x18540:    55                                 	push ebp
0x18541:    57                                 	push edi
0x18542:    56                                 	push esi
0x18543:    53                                 	push ebx
0x18544:    83 ec 4c                           	sub esp, 0x4c
0x18547:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x1854b:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x1854f:    8b 5c 24 70                        	mov ebx, dword ptr [esp + 0x70]
0x18553:    c6 44 24 2f 01                     	mov byte ptr [esp + 0x2f], 1
0x18558:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1855c:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x18560:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x18564:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1856b:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1856f:    31 d2                              	xor edx, edx
0x18571:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x18575:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x18579:    85 c0                              	test eax, eax
0x1857b:    0f 84 1f 01 00 00                  	je 0x186a0 <function_186a0>
0x18581:    c7 04 24 50 00 00 00               	mov dword ptr [esp], 0x50
; data inside code section at 0x18588 -- 0x18589
0x18588:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x18589 -- 0x1858a
; data inside code section at 0x1858a -- 0x185f4
0x1858a:    ff ff ff 83 f8 f0 89 c6  0f 84 be 00 00 00 8b 03   |................|
0x1859a:    8b 7b 28 2b 7b 24 89 46  10 8b 43 04 85 ff 89 46   |.{(+{$.F..C....F|
0x185aa:    14 8b 43 08 89 46 18 8b  43 0c 89 46 1c 8b 43 10   |..C..F..C..F..C.|
0x185ba:    89 46 20 8b 43 14 89 46  24 8b 43 18 89 46 28 8b   |.F .C..F$.C..F(.|
0x185ca:    43 1c 89 46 2c 8b 43 20  c7 46 34 00 00 00 00 c7   |C..F,.C .F4.....|
0x185da:    46 38 00 00 00 00 c7 46  3c 00 00 00 00 89 46 30   |F8.....F<.....F0|
0x185ea:    0f 84 e0 00 00 00 89 3c  24 e8                     |.......<$.      |
; dynamically linked function: _Znwj at 0x185f4 -- 0x185f5
; data inside code section at 0x185f5 -- 0x185fa
0x185f5:    ff ff ff 89 c5                                     |.....           |
; function: function_185fa at 0x185fa -- 0x185fb
; data inside code section at 0x185fb -- 0x18614
0x185fb:    ef 89 6e 34 89 6e 38 89  7e 3c 8b 43 24 8b 7b 28   |..n4.n8.~<.C$.{(|
0x1860b:    89 44 24 20 39 c7 74 1e  89                        |.D$ 9.t..       |
; function: function_18614 at 0x18614 -- 0x18617
0x18614:    c2 89 e9                           	ret 0xe989
; data inside code section at 0x18617 -- 0x18622
0x18617:    90 85 c9 74 05 0f b6 02  88 01 83                  |...t.......     |
; function: function_18622 at 0x18622 -- 0x18625
0x18622:    c2 01 83                           	ret 0x8301
; data inside code section at 0x18625 -- 0x18676
0x18625:    c1 01 39 fa 75 ed 2b 54  24 20 01 d5 8b 43 30 89   |..9.u.+T$ ...C0.|
0x18635:    6e 38 89 46 40 0f b7 43  34 66 89 46 44 0f b7 43   |n8.F@..C4f.FD..C|
0x18645:    36 66 89 46 46 8b 43 38  89 46 48 8b 43 3c 89 46   |6f.FF.C8.FH.C<.F|
0x18655:    4c 8b 44 24 1c 8b 54 24  28 89 74 24 04 83 c0 04   |L.D$..T$(.t$....|
0x18665:    89 44 24 0c 0f b6 44 24  2f 89 54 24 08 89 04 24   |.D$...D$/.T$...$|
0x18675:    e8                                                 |.               |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x18676 -- 0x18677
; data inside code section at 0x18677 -- 0x18679
0x18677:    ff ff                                              |..              |
; function: function_18679 at 0x18679 -- 0x1869f
0x18679:    ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0x1867f:    40                                 	inc eax
0x18680:    14 01                              	adc al, 1
0x18682:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x18686:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1868d:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x18691:    89 30                              	mov dword ptr [eax], esi
0x18693:    75 42                              	jne 0x186d7 <function_186d7>
0x18695:    83 c4 4c                           	add esp, 0x4c
0x18698:    5b                                 	pop ebx
0x18699:    5e                                 	pop esi
0x1869a:    5f                                 	pop edi
0x1869b:    5d                                 	pop ebp
0x1869c:    c2 04 00                           	ret 4
; data inside code section at 0x1869f -- 0x186a0
0x1869f:    90                                                 |.               |
; function: function_186a0 at 0x186a0 -- 0x186bf
0x186a0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x186a4:    83 c0 04                           	add eax, 4
0x186a7:    39 44 24 28                        	cmp dword ptr [esp + 0x28], eax
0x186ab:    0f 84 d0 fe ff ff                  	je 0x18581
0x186b1:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x186b5:    89 1c 24                           	mov dword ptr [esp], ebx
0x186b8:    83 c0 10                           	add eax, 0x10
0x186bb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x186bf -- 0x186c0
0x186bf:    e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x186c0 -- 0x186c1
; data inside code section at 0x186c1 -- 0x186c3
0x186c1:    ff ff                                              |..              |
; function: function_186c3 at 0x186c3 -- 0x186d0
0x186c3:    ff 84 c0 0f 95 44 24               	inc dword ptr [eax + eax*8 + 0x2444950f]
0x186ca:    2f                                 	das 
0x186cb:    e9 b1 fe ff ff                     	jmp 0x18581
; function: function_186d0 at 0x186d0 -- 0x186d7
0x186d0:    31 ed                              	xor ebp, ebp
0x186d2:    e9 23 ff ff ff                     	jmp 0x185fa <function_185fa>
; function: function_186d7 at 0x186d7 -- 0x186d8
; dynamically linked function: __stack_chk_fail at 0x186d8 -- 0x186d9
; data inside code section at 0x186d9 -- 0x186e0
0x186d9:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x186e0 -- 0x186e1
; data inside code section at 0x186e1 -- 0x186e8
0x186e1:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x186e8 -- 0x186e9
; data inside code section at 0x186e9 -- 0x186ed
0x186e9:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x186ed -- 0x186ee
; data inside code section at 0x186ee -- 0x186f2
0x186ee:    ff ff ff 89                                        |....            |
; function: function_186f2 at 0x186f2 -- 0x186f3
0x186f2:    c3                                 	ret 
; data inside code section at 0x186f3 -- 0x186f4
0x186f3:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x186f4 -- 0x186f5
; data inside code section at 0x186f5 -- 0x186fc
0x186f5:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x186fc -- 0x186fd
; data inside code section at 0x186fd -- 0x18700
0x186fd:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_ at 0x18700 -- 0x18743
0x18700:    55                                 	push ebp
0x18701:    57                                 	push edi
0x18702:    56                                 	push esi
0x18703:    53                                 	push ebx
0x18704:    83 ec 4c                           	sub esp, 0x4c
0x18707:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x1870b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18711:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x18715:    31 c0                              	xor eax, eax
0x18717:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1871b:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x1871f:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x18722:    85 db                              	test ebx, ebx
0x18724:    75 13                              	jne 0x18739 <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x39>
0x18726:    e9 ac 00 00 00                     	jmp 0x187d7 <function_187d7>
; data inside code section at 0x1872b -- 0x18730
0x1872b:    90 8d 74 26 00                                     |..t&.           |
0x18730:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x18733:    85 d2                              	test edx, edx
0x18735:    74 1c                              	je 0x18753 <function_18753>
0x18737:    89 d3                              	mov ebx, edx
0x18739:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1873c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x18740:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x18743 -- 0x18744
0x18743:    e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x18744 -- 0x18745
; data inside code section at 0x18745 -- 0x18753
0x18745:    ff ff ff 84 c0 75 e4 8b  53 0c 85 d2 75 e4         |.....u..S...u.  |
; function: function_18753 at 0x18753 -- 0x18757
0x18753:    84 c0                              	test al, al
0x18755:    74 49                              	je 0x187a0
; function: function_18757 at 0x18757 -- 0x1875f
0x18757:    3b 5d 0c                           	cmp ebx, dword ptr [ebp + 0xc]
0x1875a:    74 4c                              	je 0x187a8 <function_187a8>
0x1875c:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1875f -- 0x18760
0x1875f:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x18760 -- 0x18761
; data inside code section at 0x18761 -- 0x18765
0x18761:    ff ff ff 89                                        |....            |
; function: function_18765 at 0x18765 -- 0x18768
0x18765:    c2 8d 42                           	ret 0x428d
; data inside code section at 0x18768 -- 0x18775
0x18768:    10 89 54 24 28 89 74 24  04 89 04 24 e8            |..T$(.t$...$.   |
; dynamically linked function: _ZltRK4CInvS1_ at 0x18775 -- 0x18776
; data inside code section at 0x18776 -- 0x18787
0x18776:    ff ff ff 8b 54 24 28 84  c0 75 27 89 17 c6 47 04   |....T$(..u'...G.|
0x18786:    00                                                 |.               |
; function: function_18787 at 0x18787 -- 0x187a0
0x18787:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1878b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x18792:    89 f8                              	mov eax, edi
0x18794:    75 49                              	jne 0x187df <function_187df>
0x18796:    83 c4 4c                           	add esp, 0x4c
0x18799:    5b                                 	pop ebx
0x1879a:    5e                                 	pop esi
0x1879b:    5f                                 	pop edi
0x1879c:    5d                                 	pop ebp
0x1879d:    c2 04 00                           	ret 4
; function: function_187a0 at 0x187a0 -- 0x187a4
0x187a0:    89 da                              	mov edx, ebx
0x187a2:    eb c2                              	jmp 0x18766
; data inside code section at 0x187a4 -- 0x187a8
0x187a4:    8d 74 26 00                                        |.t&.            |
; function: function_187a8 at 0x187a8 -- 0x187d7
0x187a8:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x187ac:    89 04 24                           	mov dword ptr [esp], eax
0x187af:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x187b3:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x187b7:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x187bf:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x187c3:    e8 78 84 01 00                     	call 0x30c40 <function_30c40>
0x187c8:    83 ec 04                           	sub esp, 4
0x187cb:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x187cf:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x187d3:    89 07                              	mov dword ptr [edi], eax
0x187d5:    eb b0                              	jmp 0x18787 <function_18787>
; function: function_187d7 at 0x187d7 -- 0x187df
0x187d7:    8d 5d 04                           	lea ebx, [ebp + 4]
0x187da:    e9 78 ff ff ff                     	jmp 0x18757 <function_18757>
; function: function_187df at 0x187df -- 0x187e0
; dynamically linked function: __stack_chk_fail at 0x187e0 -- 0x187e1
; data inside code section at 0x187e1 -- 0x187e4
0x187e1:    ff ff ff                                           |...             |
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC2ERKS4_
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEC1ERKS4_ at 0x187f0 -- 0x1880c
0x187f0:    56                                 	push esi
0x187f1:    53                                 	push ebx
0x187f2:    83 ec 24                           	sub esp, 0x24
0x187f5:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x187f9:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x187fd:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18803:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18807:    31 c0                              	xor eax, eax
0x18809:    8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x1880c -- 0x1880e
0x1880c:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt11logic_error at 0x1880e -- 0x1881c
; data inside code section at 0x1881c -- 0x1881d
0x1881c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1881d -- 0x1881e
; data inside code section at 0x1881e -- 0x18820
0x1881e:    ff ff                                              |..              |
; function: function_18820 at 0x18820 -- 0x18872
0x18820:    ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x18826:    68 11 03 00 c7                     	push 0xc7000311
0x1882b:    43                                 	inc ebx
0x1882c:    08 18                              	or byte ptr [eax], bl
0x1882e:    0e                                 	push cs
0x1882f:    03 00                              	add eax, dword ptr [eax]
0x18831:    85 c0                              	test eax, eax
0x18833:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x18836:    74 08                              	je 0x18840 <function_18820+0x20>
0x18838:    8b 10                              	mov edx, dword ptr [eax]
0x1883a:    89 04 24                           	mov dword ptr [esp], eax
0x1883d:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x18840:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x18843:    c7 43 08 9c 11 03 00               	mov dword ptr [ebx + 8], 0x3119c
0x1884a:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1884d:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x18850:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x18853:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x18856:    c7 03 88 11 03 00                  	mov dword ptr [ebx], 0x31188
0x1885c:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1885f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18863:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1886a:    75 06                              	jne 0x18872 <function_18820+0x51>
0x1886c:    83 c4 24                           	add esp, 0x24
0x1886f:    5b                                 	pop ebx
0x18870:    5e                                 	pop esi
0x18871:    c3                                 	ret 
; data inside code section at 0x18872 -- 0x18873
0x18872:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18873 -- 0x18874
; data inside code section at 0x18874 -- 0x18885
0x18874:    ff ff ff 89 c6 89 1c 24  e8 cf d1 00 00 89 34 24   |.......$......4$|
0x18884:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x18885 -- 0x18886
; data inside code section at 0x18886 -- 0x1888f
0x18886:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x1888f -- 0x18890
; data inside code section at 0x18890 -- 0x18897
0x18890:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x18897 -- 0x18898
; data inside code section at 0x18898 -- 0x1889b
0x18898:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv at 0x188a0 -- 0x188a7
0x188a0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x188a5:    eb 09                              	jmp 0x188b0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv>
; data inside code section at 0x188a7 -- 0x188b0
0x188a7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEE7rethrowEv at 0x188b0 -- 0x188cc
0x188b0:    56                                 	push esi
0x188b1:    53                                 	push ebx
0x188b2:    83 ec 24                           	sub esp, 0x24
0x188b5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x188b9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x188bf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x188c3:    31 c0                              	xor eax, eax
0x188c5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x188cc -- 0x188cd
0x188cc:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x188cd -- 0x188ce
; data inside code section at 0x188ce -- 0x188d0
0x188ce:    ff ff                                              |..              |
; function: function_188d0 at 0x188d0 -- 0x188d7
0x188d0:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x188d6:    c3                                 	ret 
; data inside code section at 0x188d7 -- 0x18907
0x188d7:    89 04 24 e8 b1 87 01 00  c7 03 c8 11 03 00 c7 43   |..$............C|
0x188e7:    08 e4 11 03 00 c7 43 1c  f4 11 03 00 c7 44 24 08   |......C......D$.|
0x188f7:    00 fd 00 00 c7 44 24 04  20 12 03 00 89 1c 24 e8   |.....D$. .....$.|
; dynamically linked function: __cxa_throw at 0x18907 -- 0x18908
; data inside code section at 0x18908 -- 0x18911
0x18908:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x18911 -- 0x18912
; data inside code section at 0x18912 -- 0x18919
0x18912:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x18919 -- 0x1891a
; data inside code section at 0x1891a -- 0x1891d
0x1891a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_9gregorian8bad_yearEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_9gregorian8bad_yearEEEvRKT_ at 0x18920 -- 0x1893c
0x18920:    56                                 	push esi
0x18921:    53                                 	push ebx
0x18922:    83 ec 44                           	sub esp, 0x44
0x18925:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x18929:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1892f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x18933:    31 c0                              	xor eax, eax
0x18935:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1893c -- 0x1893d
0x1893c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x1893d -- 0x1893e
; data inside code section at 0x1893e -- 0x1894b
0x1893e:    ff ff ff 89 74 24 04 8d  74 24 20 89 34            |....t$..t$ .4   |
; function: function_1894b at 0x1894b -- 0x1894e
0x1894b:    24 89                              	and al, 0x89
0x1894d:    c3                                 	ret 
; data inside code section at 0x1894e -- 0x189d2
0x1894e:    e8 9d 0f 01 00 c7 44 24  2c 00 00 00 00 c7 44 24   |......D$,.....D$|
0x1895e:    30 00 00 00 00 c7 44 24  34 00 00 00 00 c7 44 24   |0.....D$4.....D$|
0x1896e:    38 ff ff ff ff c7 44 24  20 88 11 03 00 c7 44 24   |8.....D$ .....D$|
0x1897e:    28 9c 11 03 00 89 74 24  04 89 1c 24 e8 81 87 01   |(.....t$...$....|
0x1898e:    00 8d 44 24 28 c7 03 c8  11 03 00 c7 43 08 e4 11   |..D$(.......C...|
0x1899e:    03 00 c7 43 1c f4 11 03  00 89 44 24 04 8d 43 08   |...C......D$..C.|
0x189ae:    89 04 24 e8 1a 0b 01 00  89 34 24 e8 12 f8 00 00   |..$......4$.....|
0x189be:    c7 44 24 08 00 fd 00 00  c7 44 24 04 20 12 03 00   |.D$......D$. ...|
0x189ce:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: __cxa_throw at 0x189d2 -- 0x189d3
; data inside code section at 0x189d3 -- 0x189d8
0x189d3:    ff ff ff 89 c6                                     |.....           |
; function: function_189d8 at 0x189d8 -- 0x189d9
; data inside code section at 0x189d9 -- 0x189dc
0x189d9:    1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x189dc -- 0x189dd
; data inside code section at 0x189dd -- 0x189e4
0x189dd:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x189e4 -- 0x189e5
; data inside code section at 0x189e5 -- 0x189e7
0x189e5:    ff ff                                              |..              |
; function: function_189e7 at 0x189e7 -- 0x18a13
0x189e7:    ff c7                              	inc edi
0x189e9:    43                                 	inc ebx
0x189ea:    1c 50                              	sbb al, 0x50
0x189ec:    0e                                 	push cs
0x189ed:    03 00                              	add eax, dword ptr [eax]
0x189ef:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x189f3:    89 1c 24                           	mov dword ptr [esp], ebx
0x189f6:    e8 d5 f7 00 00                     	call 0x281d0 <function_281d0>
0x189fb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x189ff:    89 34 24                           	mov dword ptr [esp], esi
0x18a02:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18a06:    e8 c5 f7 00 00                     	call 0x281d0 <function_281d0>
0x18a0b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18a0f:    89 c6                              	mov esi, eax
0x18a11:    eb c5                              	jmp 0x189d8 <function_189d8>
; function: function_18a13 at 0x18a13 -- 0x18a15
0x18a13:    eb ea                              	jmp 0x189ff
; section: .text._ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC2ERKS4_
; function: _ZN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEC1ERKS4_ at 0x18a20 -- 0x18a3c
0x18a20:    56                                 	push esi
0x18a21:    53                                 	push ebx
0x18a22:    83 ec 24                           	sub esp, 0x24
0x18a25:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x18a29:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x18a2d:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18a33:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18a37:    31 c0                              	xor eax, eax
0x18a39:    8d 46 04                           	lea eax, [esi + 4]
; data inside code section at 0x18a3c -- 0x18a3e
0x18a3c:    c7 03                                              |..              |
; dynamically linked function: _ZTVSt11logic_error at 0x18a3e -- 0x18a4c
; data inside code section at 0x18a4c -- 0x18a4d
0x18a4c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x18a4d -- 0x18a4e
; data inside code section at 0x18a4e -- 0x18a50
0x18a4e:    ff ff                                              |..              |
; function: function_18a50 at 0x18a50 -- 0x18aa2
0x18a50:    ff 8b 46 0c c7 03                  	dec dword ptr [ebx + 0x3c70c46]
0x18a56:    88 10                              	mov byte ptr [eax], dl
0x18a58:    03 00                              	add eax, dword ptr [eax]
0x18a5a:    c7 43 08 18 0e 03 00               	mov dword ptr [ebx + 8], 0x30e18
0x18a61:    85 c0                              	test eax, eax
0x18a63:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x18a66:    74 08                              	je 0x18a70 <function_18a50+0x20>
0x18a68:    8b 10                              	mov edx, dword ptr [eax]
0x18a6a:    89 04 24                           	mov dword ptr [esp], eax
0x18a6d:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x18a70:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x18a73:    c7 43 08 bc 10 03 00               	mov dword ptr [ebx + 8], 0x310bc
0x18a7a:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x18a7d:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x18a80:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x18a83:    8b 46 18                           	mov eax, dword ptr [esi + 0x18]
0x18a86:    c7 03 a8 10 03 00                  	mov dword ptr [ebx], 0x310a8
0x18a8c:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x18a8f:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18a93:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x18a9a:    75 06                              	jne 0x18aa2 <function_18a50+0x51>
0x18a9c:    83 c4 24                           	add esp, 0x24
0x18a9f:    5b                                 	pop ebx
0x18aa0:    5e                                 	pop esi
0x18aa1:    c3                                 	ret 
; data inside code section at 0x18aa2 -- 0x18aa3
0x18aa2:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x18aa3 -- 0x18aa4
; data inside code section at 0x18aa4 -- 0x18ab5
0x18aa4:    ff ff ff 89 c6 89 1c 24  e8 0f d2 00 00 89 34 24   |.......$......4$|
0x18ab4:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x18ab5 -- 0x18ab6
; data inside code section at 0x18ab6 -- 0x18abf
0x18ab6:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: _ZNSt9exceptionD2Ev at 0x18abf -- 0x18ac0
; data inside code section at 0x18ac0 -- 0x18ac7
0x18ac0:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x18ac7 -- 0x18ac8
; data inside code section at 0x18ac8 -- 0x18acb
0x18ac8:    ff ff ff                                           |...             |
; section: .text._ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv
; function: _ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv at 0x18ad0 -- 0x18ad7
0x18ad0:    83 6c 24 04 1c                     	sub dword ptr [esp + 4], 0x1c
0x18ad5:    eb 09                              	jmp 0x18ae0 <_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv>
; data inside code section at 0x18ad7 -- 0x18ae0
0x18ad7:    90 90 8d b4 26 00 00 00  00                        |....&....       |
; function: _ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEE7rethrowEv at 0x18ae0 -- 0x18afc
0x18ae0:    56                                 	push esi
0x18ae1:    53                                 	push ebx
0x18ae2:    83 ec 24                           	sub esp, 0x24
0x18ae5:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x18ae9:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18aef:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18af3:    31 c0                              	xor eax, eax
0x18af5:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x18afc -- 0x18afd
0x18afc:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x18afd -- 0x18afe
; data inside code section at 0x18afe -- 0x18b00
0x18afe:    ff ff                                              |..              |
; function: function_18b00 at 0x18b00 -- 0x18b07
0x18b00:    ff 89 74 24 04 89                  	dec dword ptr [ecx - 0x76fbdb8c]
0x18b06:    c3                                 	ret 
; data inside code section at 0x18b07 -- 0x18b37
0x18b07:    89 04 24 e8 e1 89 01 00  c7 03 e8 10 03 00 c7 43   |..$............C|
0x18b17:    08 04 11 03 00 c7 43 1c  14 11 03 00 c7 44 24 08   |......C......D$.|
0x18b27:    40 01 01 00 c7 44 24 04  40 11 03 00 89 1c 24 e8   |@....D$.@.....$.|
; dynamically linked function: __cxa_throw at 0x18b37 -- 0x18b38
; data inside code section at 0x18b38 -- 0x18b41
0x18b38:    ff ff ff 89 c6 89 1c 24  e8                        |.......$.       |
; dynamically linked function: __cxa_free_exception at 0x18b41 -- 0x18b42
; data inside code section at 0x18b42 -- 0x18b49
0x18b42:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x18b49 -- 0x18b4a
; data inside code section at 0x18b4a -- 0x18b4d
0x18b4a:    ff ff ff                                           |...             |
; section: .text._ZN5boost15throw_exceptionINS_9gregorian9bad_monthEEEvRKT_
; function: _ZN5boost15throw_exceptionINS_9gregorian9bad_monthEEEvRKT_ at 0x18b50 -- 0x18b6c
0x18b50:    56                                 	push esi
0x18b51:    53                                 	push ebx
0x18b52:    83 ec 44                           	sub esp, 0x44
0x18b55:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x18b59:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x18b5f:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x18b63:    31 c0                              	xor eax, eax
0x18b65:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x18b6c -- 0x18b6d
0x18b6c:    e8                                                 |.               |
; dynamically linked function: __cxa_allocate_exception at 0x18b6d -- 0x18b6e
; data inside code section at 0x18b6e -- 0x18b7b
0x18b6e:    ff ff ff 89 74 24 04 8d  74 24 20 89 34            |....t$..t$ .4   |
; function: function_18b7b at 0x18b7b -- 0x18b7e
0x18b7b:    24 89                              	and al, 0x89
0x18b7d:    c3                                 	ret 
; data inside code section at 0x18b7e -- 0x18c02
0x18b7e:    e8 9d 0f 01 00 c7 44 24  2c 00 00 00 00 c7 44 24   |......D$,.....D$|
0x18b8e:    30 00 00 00 00 c7 44 24  34 00 00 00 00 c7 44 24   |0.....D$4.....D$|
0x18b9e:    38 ff ff ff ff c7 44 24  20 a8 10 03 00 c7 44 24   |8.....D$ .....D$|
0x18bae:    28 bc 10 03 00 89 74 24  04 89 1c 24 e8 b1 89 01   |(.....t$...$....|
0x18bbe:    00 8d 44 24 28 c7 03 e8  10 03 00 c7 43 08 04 11   |..D$(.......C...|
0x18bce:    03 00 c7 43 1c 14 11 03  00 89 44 24 04 8d 43 08   |...C......D$..C.|
0x18bde:    89 04 24 e8 1a 0b 01 00  89 34 24 e8 82 f8 00 00   |..$......4$.....|
0x18bee:    c7 44 24 08 40 01 01 00  c7 44 24 04 40 11 03 00   |.D$.@....D$.@...|
0x18bfe:    89 1c 24 e8                                        |..$.            |
; dynamically linked function: __cxa_throw at 0x18c02 -- 0x18c03
; data inside code section at 0x18c03 -- 0x18c08
0x18c03:    ff ff ff 89 c6                                     |.....           |
; function: function_18c08 at 0x18c08 -- 0x18c09
; data inside code section at 0x18c09 -- 0x18c0c
0x18c09:    1c 24 e8                                           |.$.             |
; dynamically linked function: __cxa_free_exception at 0x18c0c -- 0x18c0d
; data inside code section at 0x18c0d -- 0x18c14
0x18c0d:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Unwind_Resume at 0x18c14 -- 0x18c15
; data inside code section at 0x18c15 -- 0x18c17
0x18c15:    ff ff                                              |..              |
; function: function_18c17 at 0x18c17 -- 0x18c43
0x18c17:    ff c7                              	inc edi
0x18c19:    43                                 	inc ebx
0x18c1a:    1c 50                              	sbb al, 0x50
0x18c1c:    0e                                 	push cs
0x18c1d:    03 00                              	add eax, dword ptr [eax]
0x18c1f:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18c23:    89 1c 24                           	mov dword ptr [esp], ebx
0x18c26:    e8 45 f8 00 00                     	call 0x28470 <function_28470>
0x18c2b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18c2f:    89 34 24                           	mov dword ptr [esp], esi
0x18c32:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x18c36:    e8 35 f8 00 00                     	call 0x28470 <function_28470>
0x18c3b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x18c3f:    89 c6                              	mov esi, eax
0x18c41:    eb c5                              	jmp 0x18c08 <function_18c08>
; function: function_18c43 at 0x18c43 -- 0x18c45
0x18c43:    eb ea                              	jmp 0x18c2f
; section: .text._ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE11create_timeEPFP2tmPKlS6_E
; function: _ZN5boost9date_time14microsec_clockINS_10posix_time5ptimeEE11create_timeEPFP2tmPKlS6_E at 0x18c50 -- 0x18c88
0x18c50:    55                                 	push ebp
0x18c51:    57                                 	push edi
0x18c52:    56                                 	push esi
0x18c53:    53                                 	push ebx
0x18c54:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x18c5a:    8b 84 24 a0 00 00 00               	mov eax, dword ptr [esp + 0xa0]
0x18c61:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x18c68:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x18c6c:    31 d2                              	xor edx, edx
0x18c6e:    8b 9c 24 a4 00 00 00               	mov ebx, dword ptr [esp + 0xa4]
0x18c75:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x18c7d:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x18c81:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x18c85:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x18c88 -- 0x18c89
0x18c88:    e8                                                 |.               |
; dynamically linked function: gettimeofday at 0x18c89 -- 0x18c8a
; data inside code section at 0x18c8a -- 0x18c8c
0x18c8a:    ff ff                                              |..              |
; function: function_18c8c at 0x18c8c -- 0x18f9c
0x18c8c:    ff 8b 44 24 60 8b                  	dec dword ptr [ebx - 0x749fdbbc]
0x18c92:    6c                                 	insb byte ptr es:[edi], dx
0x18c93:    24 64                              	and al, 0x64
0x18c95:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x18c99:    8d 44 24 34                        	lea eax, [esp + 0x34]
0x18c9d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x18ca1:    8d 44 24 70                        	lea eax, [esp + 0x70]
0x18ca5:    89 04 24                           	mov dword ptr [esp], eax
0x18ca8:    ff d3                              	call ebx
0x18caa:    89 c2                              	mov edx, eax
0x18cac:    0f b7 40 0c                        	movzx eax, word ptr [eax + 0xc]
0x18cb0:    0f b7 d8                           	movzx ebx, ax
0x18cb3:    85 db                              	test ebx, ebx
0x18cb5:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x18cb9:    0f 84 92 03 00 00                  	je 0x19051 <function_19051>
0x18cbf:    66 83 f8 1f                        	cmp ax, 0x1f
0x18cc3:    0f 87 88 03 00 00                  	ja 0x19051 <function_19051>
0x18cc9:    0f b7 5a 10                        	movzx ebx, word ptr [edx + 0x10]
0x18ccd:    89 d9                              	mov ecx, ebx
0x18ccf:    83 c1 01                           	add ecx, 1
0x18cd2:    66 89 5c 24 24                     	mov word ptr [esp + 0x24], bx
0x18cd7:    0f b7 d9                           	movzx ebx, cx
0x18cda:    85 db                              	test ebx, ebx
0x18cdc:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x18ce0:    0f 84 7f 03 00 00                  	je 0x19065 <function_19065>
0x18ce6:    66 83 f9 0c                        	cmp cx, 0xc
0x18cea:    0f 87 75 03 00 00                  	ja 0x19065 <function_19065>
0x18cf0:    0f b7 5a 14                        	movzx ebx, word ptr [edx + 0x14]
0x18cf4:    66 89 5c 24 26                     	mov word ptr [esp + 0x26], bx
0x18cf9:    66 81 c3 6c 07                     	add bx, 0x76c
0x18cfe:    0f b7 f3                           	movzx esi, bx
0x18d01:    81 fe 77 05 00 00                  	cmp esi, 0x577
0x18d07:    0f 8e 4e 03 00 00                  	jle 0x1905b <function_1905b>
0x18d0d:    66 81 fb 10 27                     	cmp bx, 0x2710
0x18d12:    0f 87 43 03 00 00                  	ja 0x1905b <function_1905b>
0x18d18:    66 83 f9 0b                        	cmp cx, 0xb
0x18d1c:    0f 86 de 01 00 00                  	jbe 0x18f00 <function_18c8c+0x274>
0x18d22:    8b 4a 04                           	mov ecx, dword ptr [edx + 4]
0x18d25:    89 6c 24 28                        	mov dword ptr [esp + 0x28], ebp
0x18d29:    8b 32                              	mov esi, dword ptr [edx]
0x18d2b:    c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x18d33:    8b 5a 08                           	mov ebx, dword ptr [edx + 8]
0x18d36:    85 c9                              	test ecx, ecx
0x18d38:    78 5e                              	js 0x18d98 <function_18c8c+0x10c>
0x18d3a:    89 d8                              	mov eax, ebx
0x18d3c:    c1 e8 1f                           	shr eax, 0x1f
0x18d3f:    84 c0                              	test al, al
0x18d41:    75 55                              	jne 0x18d98 <function_18c8c+0x10c>
0x18d43:    85 f6                              	test esi, esi
0x18d45:    78 51                              	js 0x18d98 <function_18c8c+0x10c>
0x18d47:    bf 10 0e 00 00                     	mov edi, 0xe10
0x18d4c:    89 d8                              	mov eax, ebx
0x18d4e:    f7 ef                              	imul edi
0x18d50:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x18d54:    b8 3c 00 00 00                     	mov eax, 0x3c
0x18d59:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x18d5d:    f7 e9                              	imul ecx
0x18d5f:    01 44 24 10                        	add dword ptr [esp + 0x10], eax
0x18d63:    b8 40 42 0f 00                     	mov eax, 0xf4240
0x18d68:    11 54 24 14                        	adc dword ptr [esp + 0x14], edx
0x18d6c:    89 f2                              	mov edx, esi
0x18d6e:    c1 fa 1f                           	sar edx, 0x1f
0x18d71:    01 74 24 10                        	add dword ptr [esp + 0x10], esi
0x18d75:    11 54 24 14                        	adc dword ptr [esp + 0x14], edx
0x18d79:    69 7c 24 14 40 42 0f 00            	imul edi, dword ptr [esp + 0x14], 0xf4240
0x18d81:    f7 64 24 10                        	mul dword ptr [esp + 0x10]
0x18d85:    8b 74 24 28                        	mov esi, dword ptr [esp + 0x28]
0x18d89:    01 fa                              	add edx, edi
0x18d8b:    8b 7c 24 2c                        	mov edi, dword ptr [esp + 0x2c]
0x18d8f:    01 c6                              	add esi, eax
0x18d91:    11 d7                              	adc edi, edx
0x18d93:    eb 6c                              	jmp 0x18e01 <function_18c8c+0x175>
; data inside code section at 0x18d95 -- 0x18d98
0x18d95:    8d 76 00                                           |.v.             |
0x18d98:    89 ca                              	mov edx, ecx
0x18d9a:    89 d8                              	mov eax, ebx
0x18d9c:    c1 fa 1f                           	sar edx, 0x1f
0x18d9f:    bf c4 ff ff ff                     	mov edi, 0xffffffc4
0x18da4:    c1 f8 1f                           	sar eax, 0x1f
0x18da7:    31 d1                              	xor ecx, edx
0x18da9:    31 c3                              	xor ebx, eax
0x18dab:    29 d1                              	sub ecx, edx
0x18dad:    29 c3                              	sub ebx, eax
0x18daf:    89 c8                              	mov eax, ecx
0x18db1:    f7 ef                              	imul edi
0x18db3:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x18db7:    b8 f0 f1 ff ff                     	mov eax, 0xfffff1f0
0x18dbc:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x18dc0:    f7 eb                              	imul ebx
0x18dc2:    01 44 24 10                        	add dword ptr [esp + 0x10], eax
0x18dc6:    11 54 24 14                        	adc dword ptr [esp + 0x14], edx
0x18dca:    89 f2                              	mov edx, esi
0x18dcc:    c1 fa 1f                           	sar edx, 0x1f
0x18dcf:    89 d0                              	mov eax, edx
0x18dd1:    31 f0                              	xor eax, esi
0x18dd3:    29 d0                              	sub eax, edx
0x18dd5:    89 c2                              	mov edx, eax
0x18dd7:    c1 fa 1f                           	sar edx, 0x1f
0x18dda:    29 44 24 10                        	sub dword ptr [esp + 0x10], eax
0x18dde:    b8 40 42 0f 00                     	mov eax, 0xf4240
0x18de3:    19 54 24 14                        	sbb dword ptr [esp + 0x14], edx
0x18de7:    69 74 24 14 40 42 0f 00            	imul esi, dword ptr [esp + 0x14], 0xf4240
0x18def:    f7 64 24 10                        	mul dword ptr [esp + 0x10]
0x18df3:    01 f2                              	add edx, esi
0x18df5:    89 c6                              	mov esi, eax
0x18df7:    89 d7                              	mov edi, edx
0x18df9:    2b 74 24 28                        	sub esi, dword ptr [esp + 0x28]
0x18dfd:    1b 7c 24 2c                        	sbb edi, dword ptr [esp + 0x2c]
0x18e01:    b9 0e 00 00 00                     	mov ecx, 0xe
0x18e06:    ba ab aa aa 2a                     	mov edx, 0x2aaaaaab
0x18e0b:    0f b7 5c 24 24                     	movzx ebx, word ptr [esp + 0x24]
0x18e10:    2b 4c 24 20                        	sub ecx, dword ptr [esp + 0x20]
0x18e14:    89 c8                              	mov eax, ecx
0x18e16:    f7 ea                              	imul edx
0x18e18:    c1 f9 1f                           	sar ecx, 0x1f
0x18e1b:    d1 fa                              	sar edx, 1
0x18e1d:    66 29 ca                           	sub dx, cx
0x18e20:    0f b7 4c 24 26                     	movzx ecx, word ptr [esp + 0x26]
0x18e25:    66 81 c1 2c 1a                     	add cx, 0x1a2c
0x18e2a:    66 29 d1                           	sub cx, dx
0x18e2d:    8d 14 52                           	lea edx, [edx + edx*2]
0x18e30:    8d 54 93 fe                        	lea edx, [ebx + edx*4 - 2]
0x18e34:    bb 67 66 66 66                     	mov ebx, 0x66666667
0x18e39:    0f b7 d2                           	movzx edx, dx
0x18e3c:    69 d2 99 00 00 00                  	imul edx, edx, 0x99
0x18e42:    83 c2 02                           	add edx, 2
0x18e45:    89 d0                              	mov eax, edx
0x18e47:    f7 eb                              	imul ebx
0x18e49:    0f b7 c1                           	movzx eax, cx
0x18e4c:    69 c0 6d 01 00 00                  	imul eax, eax, 0x16d
0x18e52:    d1 ea                              	shr edx, 1
0x18e54:    03 54 24 1c                        	add edx, dword ptr [esp + 0x1c]
0x18e58:    01 c2                              	add edx, eax
0x18e5a:    89 c8                              	mov eax, ecx
0x18e5c:    66 c1 e8 02                        	shr ax, 2
0x18e60:    0f b7 c0                           	movzx eax, ax
0x18e63:    66 c1 e9 04                        	shr cx, 4
0x18e67:    01 c2                              	add edx, eax
0x18e69:    0f b7 c9                           	movzx ecx, cx
0x18e6c:    69 c0 7b 14 00 00                  	imul eax, eax, 0x147b
0x18e72:    69 c9 3e 0a 00 00                  	imul ecx, ecx, 0xa3e
0x18e78:    c1 e8 11                           	shr eax, 0x11
0x18e7b:    29 c2                              	sub edx, eax
0x18e7d:    c1 e9 10                           	shr ecx, 0x10
0x18e80:    8d 84 0a d3 82 ff ff               	lea eax, [edx + ecx - 0x7d2d]
0x18e87:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x18e8b:    85 c0                              	test eax, eax
0x18e8d:    c7 02 01 00 00 00                  	mov dword ptr [edx], 1
0x18e93:    c7 42 04 00 00 00 00               	mov dword ptr [edx + 4], 0
0x18e9a:    0f 84 20 01 00 00                  	je 0x18fc0 <function_18fc0>
0x18ea0:    83 f8 ff                           	cmp eax, -1
0x18ea3:    0f 84 17 01 00 00                  	je 0x18fc0 <function_18fc0>
0x18ea9:    83 f8 fe                           	cmp eax, -2
0x18eac:    0f 84 0e 01 00 00                  	je 0x18fc0 <function_18fc0>
0x18eb2:    8d 97 00 00 00 80                  	lea edx, [edi - 0x80000000]
0x18eb8:    09 f2                              	or edx, esi
0x18eba:    0f 84 80 01 00 00                  	je 0x19040 <function_19040>
0x18ec0:    b9 00 60 d7 1d                     	mov ecx, 0x1dd76000
0x18ec5:    6b d8 14                           	imul ebx, eax, 0x14
0x18ec8:    f7 e1                              	mul ecx
0x18eca:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x18ece:    01 da                              	add edx, ebx
0x18ed0:    01 f0                              	add eax, esi
0x18ed2:    11 fa                              	adc edx, edi
0x18ed4:    89 01                              	mov dword ptr [ecx], eax
0x18ed6:    89 51 04                           	mov dword ptr [ecx + 4], edx
0x18ed9:    8b 5c 24 7c                        	mov ebx, dword ptr [esp + 0x7c]
0x18edd:    65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x18ee4:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x18ee8:    0f 85 68 01 00 00                  	jne 0x19056 <function_19056>
0x18eee:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x18ef4:    5b                                 	pop ebx
0x18ef5:    5e                                 	pop esi
0x18ef6:    5f                                 	pop edi
0x18ef7:    5d                                 	pop ebp
0x18ef8:    c2 04 00                           	ret 4
; data inside code section at 0x18efb -- 0x18f00
0x18efb:    90 8d 74 26 00                                     |..t&.           |
0x18f00:    bf 01 00 00 00                     	mov edi, 1
0x18f05:    d3 e7                              	shl edi, cl
0x18f07:    b9 1e 00 00 00                     	mov ecx, 0x1e
0x18f0c:    f7 c7 50 0a 00 00                  	test edi, 0xa50
0x18f12:    75 64                              	jne 0x18f78 <function_18c8c+0x2ec>
0x18f14:    83 e7 04                           	and edi, 4
0x18f17:    0f 84 05 fe ff ff                  	je 0x18d22 <function_18c8c+0x96>
0x18f1d:    83 e6 03                           	and esi, 3
0x18f20:    b1 1c                              	mov cl, 0x1c
0x18f22:    75 54                              	jne 0x18f78 <function_18c8c+0x2ec>
0x18f24:    89 d9                              	mov ecx, ebx
0x18f26:    66 c1 e9 02                        	shr cx, 2
0x18f2a:    0f b7 c9                           	movzx ecx, cx
0x18f2d:    69 c9 7b 14 00 00                  	imul ecx, ecx, 0x147b
0x18f33:    c1 e9 11                           	shr ecx, 0x11
0x18f36:    8d 0c 89                           	lea ecx, [ecx + ecx*4]
0x18f39:    8d 0c 89                           	lea ecx, [ecx + ecx*4]
0x18f3c:    8d 34 8d 00 00 00 00               	lea esi, [ecx*4]
0x18f43:    b9 1d 00 00 00                     	mov ecx, 0x1d
0x18f48:    66 39 f3                           	cmp bx, si
0x18f4b:    75 2b                              	jne 0x18f78 <function_18c8c+0x2ec>
0x18f4d:    89 d9                              	mov ecx, ebx
0x18f4f:    66 c1 e9 04                        	shr cx, 4
0x18f53:    0f b7 c9                           	movzx ecx, cx
0x18f56:    69 c9 3e 0a 00 00                  	imul ecx, ecx, 0xa3e
0x18f5c:    c1 e9 10                           	shr ecx, 0x10
0x18f5f:    8d 0c 89                           	lea ecx, [ecx + ecx*4]
0x18f62:    8d 0c 89                           	lea ecx, [ecx + ecx*4]
0x18f65:    c1 e1 04                           	shl ecx, 4
0x18f68:    66 29 cb                           	sub bx, cx
0x18f6b:    66 83 fb 01                        	cmp bx, 1
0x18f6f:    19 c9                              	sbb ecx, ecx
0x18f71:    f7 d1                              	not ecx
0x18f73:    83 c1 1d                           	add ecx, 0x1d
0x18f76:    66 90                              	nop 
0x18f78:    66 39 c8                           	cmp ax, cx
0x18f7b:    0f 86 a1 fd ff ff                  	jbe 0x18d22 <function_18c8c+0x96>
0x18f81:    8d 44 24 7b                        	lea eax, [esp + 0x7b]
0x18f85:    8d 74 24 74                        	lea esi, [esp + 0x74]
0x18f89:    8d 5c 24 68                        	lea ebx, [esp + 0x68]
0x18f8d:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x18f91:    c7 44 24 04 40 d8 00 00            	mov dword ptr [esp + 4], 0xd840 ; "Day of month is not valid for year"
0x18f99:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x18f9c -- 0x18f9d
0x18f9c:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x18f9d -- 0x18f9e
; data inside code section at 0x18f9e -- 0x18fa9
0x18f9e:    ff ff ff 89 74 24 04 89  1c 24 e8                  |....t$...$.     |
; dynamically linked function: _ZNSt12out_of_rangeC2ERKSs at 0x18fa9 -- 0x18faa
; data inside code section at 0x18faa -- 0x18fc0
0x18faa:    ff ff ff c7 44 24 68 a8  0f 03 00 89 1c 24 e8 f3   |....D$h......$..|
0x18fba:    0d 01 00 8d 76 00                                  |....v.          |
; function: function_18fc0 at 0x18fc0 -- 0x19002
0x18fc0:    8d 97 00 00 00 80                  	lea edx, [edi - 0x80000000]
0x18fc6:    09 f2                              	or edx, esi
0x18fc8:    74 54                              	je 0x1901e <function_1901e>
0x18fca:    85 c0                              	test eax, eax
0x18fcc:    74 22                              	je 0x18ff0 <function_18fc0+0x30>
0x18fce:    83 f8 ff                           	cmp eax, -1
0x18fd1:    74 6d                              	je 0x19040 <function_19040>
0x18fd3:    83 f8 fe                           	cmp eax, -2
0x18fd6:    74 50                              	je 0x19028 <function_19028>
0x18fd8:    31 d2                              	xor edx, edx
0x18fda:    01 c6                              	add esi, eax
0x18fdc:    11 d7                              	adc edi, edx
0x18fde:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x18fe2:    89 30                              	mov dword ptr [eax], esi
0x18fe4:    89 78 04                           	mov dword ptr [eax + 4], edi
0x18fe7:    e9 ed fe ff ff                     	jmp 0x18ed9
; data inside code section at 0x18fec -- 0x18ff0
0x18fec:    8d 74 26 00                                        |.t&.            |
0x18ff0:    83 f8 ff                           	cmp eax, -1
0x18ff3:    74 3f                              	je 0x19034 <function_19034>
0x18ff5:    85 c0                              	test eax, eax
0x18ff7:    75 df                              	jne 0x18fd8 <function_18fc0+0x18>
0x18ff9:    31 f6                              	xor esi, esi
0x18ffb:    bf 00 00 00 80                     	mov edi, 0x80000000
0x19000:    eb dc                              	jmp 0x18fde <function_18fc0+0x1e>
; data inside code section at 0x19002 -- 0x1900e
0x19002:    89 c7 89 1c 24 89 fb e8  62 ce 00 00               |....$...b...    |
; function: function_1900e at 0x1900e -- 0x19011
0x1900e:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x19011 -- 0x19012
0x19011:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x19012 -- 0x19013
; data inside code section at 0x19013 -- 0x1901a
0x19013:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1901a -- 0x1901b
; data inside code section at 0x1901b -- 0x1901e
0x1901b:    ff ff ff                                           |...             |
; function: function_1901e at 0x1901e -- 0x19028
0x1901e:    83 f8 fe                           	cmp eax, -2
0x19021:    75 1d                              	jne 0x19040 <function_19040>
0x19023:    90                                 	nop 
0x19024:    8d 74 26 00                        	lea esi, [esi]
; function: function_19028 at 0x19028 -- 0x19034
0x19028:    be fe ff ff ff                     	mov esi, 0xfffffffe
0x1902d:    bf ff ff ff 7f                     	mov edi, 0x7fffffff
0x19032:    eb aa                              	jmp 0x18fde
; function: function_19034 at 0x19034 -- 0x19040
0x19034:    be ff ff ff ff                     	mov esi, 0xffffffff
0x19039:    bf ff ff ff 7f                     	mov edi, 0x7fffffff
0x1903e:    eb 9e                              	jmp 0x18fde
; function: function_19040 at 0x19040 -- 0x19051
0x19040:    8d 97 00 00 00 80                  	lea edx, [edi - 0x80000000]
0x19046:    09 f2                              	or edx, esi
0x19048:    75 a6                              	jne 0x18ff0
0x1904a:    83 f8 ff                           	cmp eax, -1
0x1904d:    75 8f                              	jne 0x18fde
0x1904f:    eb d7                              	jmp 0x19028 <function_19028>
; function: function_19051 at 0x19051 -- 0x19056
0x19051:    e8 1b e2 00 00                     	call 0x27271 <function_27271>
; function: function_19056 at 0x19056 -- 0x19057
; dynamically linked function: __stack_chk_fail at 0x19057 -- 0x19058
; data inside code section at 0x19058 -- 0x1905b
0x19058:    ff ff ff                                           |...             |
; function: function_1905b at 0x1905b -- 0x19065
0x1905b:    90                                 	nop 
0x1905c:    8d 74 26 00                        	lea esi, [esi]
0x19060:    e8 94 e2 00 00                     	call 0x272f9 <function_272f9>
; function: function_19065 at 0x19065 -- 0x1906e
0x19065:    e8 17 e3 00 00                     	call 0x27381 <function_27381>
0x1906a:    89 c3                              	mov ebx, eax
0x1906c:    eb a0                              	jmp 0x1900e <function_1900e>
; section: .text._Z10MilliSleepx
; function: _Z10MilliSleepx at 0x19070 -- 0x190b5
0x19070:    83 ec 3c                           	sub esp, 0x3c
0x19073:    69 4c 24 44 40 42 0f 00            	imul ecx, dword ptr [esp + 0x44], 0xf4240
0x1907b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19081:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x19085:    31 c0                              	xor eax, eax
0x19087:    b8 40 42 0f 00                     	mov eax, 0xf4240
0x1908c:    f7 64 24 40                        	mul dword ptr [esp + 0x40]
0x19090:    c7 44 24 08 e8 03 00 00            	mov dword ptr [esp + 8], 0x3e8
0x19098:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x190a0:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x190a4:    01 ca                              	add edx, ecx
0x190a6:    89 04 24                           	mov dword ptr [esp], eax
0x190a9:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x190ad:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x190b1:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
; data inside code section at 0x190b5 -- 0x190b6
0x190b5:    e8                                                 |.               |
; dynamically linked function: __divdi3 at 0x190b6 -- 0x190b7
; data inside code section at 0x190b7 -- 0x190e8
0x190b7:    ff ff ff c7 44 24 04 20  0f 01 00 89 c6 89 d7 8d   |....D$. ........|
0x190c7:    44 24 18 89 04 24 e8 ee  8b 01 00 83 ec 04 8b 5c   |D$...$.........\|
0x190d7:    24 1c 8b 4c 24 18 8d 83  00 00 00 80 09 c8 74 1c   |$..L$.........t.|
0x190e7:    89                                                 |.               |
; function: function_190e8 at 0x190e8 -- 0x190e9
; data inside code section at 0x190e9 -- 0x190ea
0x190e9:    89                                                 |.               |
; function: function_190ea at 0x190ea -- 0x190ed
0x190ea:    ca 35 ff                           	retf -0xcb
; data inside code section at 0x190ed -- 0x190ef
0x190ed:    ff ff                                              |..              |
; function: function_190ef at 0x190ef -- 0x190f6
0x190ef:    7f f7                              	jg 0x190e8 <function_190e8>
0x190f1:    d2 09                              	ror byte ptr [ecx], cl
0x190f3:    c2 74 0d                           	ret 0xd74
; data inside code section at 0x190f6 -- 0x190f7
0x190f6:    89                                                 |.               |
; function: function_190f7 at 0x190f7 -- 0x190fa
0x190f7:    ca 83 f2                           	retf -0xd7d
; data inside code section at 0x190fa -- 0x19113
0x190fa:    fe 09 d0 74 04 01 f1 11  fb 8d 44 24 24 89 04 24   |...t......D$$..$|
0x1910a:    89 4c 24 24 89 5c 24 28  e8                        |.L$$.\$(.       |
; dynamically linked function: _ZN5boost11this_thread5sleepERKNS_10posix_time5ptimeE at 0x19113 -- 0x19114
; data inside code section at 0x19114 -- 0x19116
0x19114:    ff ff                                              |..              |
; function: function_19116 at 0x19116 -- 0x19134
0x19116:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x1911c:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x19122:    75 10                              	jne 0x19134 <function_19116+0x1d>
0x19124:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x19128:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x1912c:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x19130:    83 c4 3c                           	add esp, 0x3c
0x19133:    c3                                 	ret 
; data inside code section at 0x19134 -- 0x19135
0x19134:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x19135 -- 0x19136
; data inside code section at 0x19136 -- 0x19139
0x19136:    ff ff ff                                           |...             |
; section: .text._Z11LoopForeverIPFvvEEvPKcT_x
; function: _Z11LoopForeverIPFvvEEvPKcT_x at 0x19140 -- 0x1917e
0x19140:    55                                 	push ebp
0x19141:    57                                 	push edi
0x19142:    56                                 	push esi
0x19143:    53                                 	push ebx
0x19144:    83 ec 2c                           	sub esp, 0x2c
0x19147:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x1914b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19151:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x19155:    31 c0                              	xor eax, eax
0x19157:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x1915b:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x1915f:    89 04 24                           	mov dword ptr [esp], eax
0x19162:    8b 74 24 48                        	mov esi, dword ptr [esp + 0x48]
0x19166:    8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0x1916a:    89 6c 24 0c                        	mov dword ptr [esp + 0xc], ebp
0x1916e:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x19176:    c7 44 24 04 8f 9e 00 00            	mov dword ptr [esp + 4], 0x9e8f ; "bitcoin-%s"
; data inside code section at 0x1917e -- 0x1917f
0x1917e:    e8                                                 |.               |
; dynamically linked function: _Z14real_strprintfPKciz at 0x1917f -- 0x19180
; data inside code section at 0x19180 -- 0x1918e
0x19180:    ff ff ff 83 ec 04 8b 44  24 18 89 04 24 e8         |.......D$...$.  |
; dynamically linked function: _Z12RenameThreadPKc at 0x1918e -- 0x1918f
; data inside code section at 0x1918f -- 0x1919e
0x1918f:    ff ff ff 89 6c 24 04 c7  04 24 9a 9e 00 00 e8      |....l$...$..... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1919e -- 0x1919f
; data inside code section at 0x1919f -- 0x191a1
0x1919f:    ff ff                                              |..              |
; function: function_191a1 at 0x191a1 -- 0x191b8
0x191a1:    ff 8d b6 00 00 00                  	dec dword ptr [ebp + 0xb6]
0x191a7:    00 89 34 24 89 7c                  	add byte ptr [ecx + 0x7c892434], cl
0x191ad:    24 04                              	and al, 4
0x191af:    e8 fc 8f 01 00                     	call 0x321b0 <function_321b0>
0x191b4:    ff d3                              	call ebx
0x191b6:    eb f0                              	jmp 0x191a8
; data inside code section at 0x191b8 -- 0x191b9
0x191b8:    89                                                 |.               |
; function: function_191b9 at 0x191b9 -- 0x191ba
0x191b9:    c3                                 	ret 
; function: function_191ba at 0x191ba -- 0x191bb
; data inside code section at 0x191bb -- 0x191c2
0x191bb:    44 24 18 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _ZNSsD1Ev at 0x191c2 -- 0x191c3
; data inside code section at 0x191c3 -- 0x191ca
0x191c3:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x191ca -- 0x191cb
; data inside code section at 0x191cb -- 0x191dc
0x191cb:    ff ff ff 83 fa 01 74 43  83 fa 02 74 7d 89 04 24   |......tC...t}..$|
0x191db:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x191dc -- 0x191dd
; data inside code section at 0x191dd -- 0x191ec
0x191dd:    ff ff ff 89 6c 24 04 c7  04 24 00 00 00 00 e8      |....l$...$..... |
; dynamically linked function: _Z14PrintExceptionPSt9exceptionPKc at 0x191ec -- 0x191ed
; data inside code section at 0x191ed -- 0x191f1
0x191ed:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_end_catch at 0x191f1 -- 0x191f2
; data inside code section at 0x191f2 -- 0x191f5
0x191f2:    ff ff ff                                           |...             |
; function: function_191f5 at 0x191f5 -- 0x191f6
; data inside code section at 0x191f6 -- 0x191fd
0x191f6:    44 24 18 89 04 24 e8                               |D$...$.         |
; dynamically linked function: _ZNSsD1Ev at 0x191fd -- 0x191fe
; data inside code section at 0x191fe -- 0x19200
0x191fe:    ff ff                                              |..              |
; function: function_19200 at 0x19200 -- 0x19216
0x19200:    ff 8b 44 24 1c 65                  	dec dword ptr [ebx + 0x651c2444]
0x19206:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1920c:    75 25                              	jne 0x19233 <function_19233>
0x1920e:    83 c4 2c                           	add esp, 0x2c
0x19211:    5b                                 	pop ebx
0x19212:    5e                                 	pop esi
0x19213:    5f                                 	pop edi
0x19214:    5d                                 	pop ebp
0x19215:    c3                                 	ret 
; data inside code section at 0x19216 -- 0x1921a
0x19216:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1921a -- 0x1921b
; data inside code section at 0x1921b -- 0x1922a
0x1921b:    ff ff ff 89 6c 24 04 c7  04 24 01 a1 00 00 e8      |....l$...$..... |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1922a -- 0x1922b
; data inside code section at 0x1922b -- 0x1922f
0x1922b:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1922f -- 0x19230
; data inside code section at 0x19230 -- 0x19233
0x19230:    ff ff ff                                           |...             |
; function: function_19233 at 0x19233 -- 0x19234
; dynamically linked function: __stack_chk_fail at 0x19234 -- 0x19235
; data inside code section at 0x19235 -- 0x19238
0x19235:    ff ff ff                                           |...             |
; function: function_19238 at 0x19238 -- 0x19239
; function: function_19239 at 0x19239 -- 0x1923a
0x19239:    c3                                 	ret 
; data inside code section at 0x1923a -- 0x1923b
0x1923a:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1923b -- 0x1923c
; data inside code section at 0x1923c -- 0x19240
0x1923c:    ff ff ff 90                                        |....            |
; function: function_19240 at 0x19240 -- 0x19245
0x19240:    e9 75 ff ff ff                     	jmp 0x191ba <function_191ba>
; data inside code section at 0x19245 -- 0x19246
0x19245:    89                                                 |.               |
; function: function_19246 at 0x19246 -- 0x19247
0x19246:    c3                                 	ret 
; data inside code section at 0x19247 -- 0x19248
0x19247:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x19248 -- 0x19249
; data inside code section at 0x19249 -- 0x19250
0x19249:    ff ff ff 8d 74 26 00                               |....t&.         |
; function: function_19250 at 0x19250 -- 0x19255
0x19250:    e9 65 ff ff ff                     	jmp 0x191ba <function_191ba>
; data inside code section at 0x19255 -- 0x19259
0x19255:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x19259 -- 0x1925a
; data inside code section at 0x1925a -- 0x19265
0x1925a:    ff ff ff 89 6c 24 04 89  04 24 e8                  |....l$...$.     |
; dynamically linked function: _Z14PrintExceptionPSt9exceptionPKc at 0x19265 -- 0x19266
; data inside code section at 0x19266 -- 0x1926a
0x19266:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_end_catch at 0x1926a -- 0x1926b
; data inside code section at 0x1926b -- 0x1926e
0x1926b:    ff ff ff                                           |...             |
; function: function_1926e at 0x1926e -- 0x19270
0x1926e:    eb 85                              	jmp 0x191f5 <function_191f5>
; function: function_19270 at 0x19270 -- 0x19272
0x19270:    eb c6                              	jmp 0x19238 <function_19238>
; section: .text._Z13GetTimeMillisv
; function: _Z13GetTimeMillisv at 0x19280 -- 0x19313
0x19280:    83 ec 3c                           	sub esp, 0x3c
0x19283:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19289:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1928d:    31 c0                              	xor eax, eax
0x1928f:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x19293:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x19297:    bb 64 3b df ff                     	mov ebx, 0xffdf3b64
0x1929c:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x192a0:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x192a4:    89 04 24                           	mov dword ptr [esp], eax
0x192a7:    c7 44 24 04 20 0f 01 00            	mov dword ptr [esp + 4], 0x10f20
0x192af:    e8 1c 8c 01 00                     	call 0x31ed0 <unknown_31ed0>
0x192b4:    b9 09 ac 1c 5a                     	mov ecx, 0x5a1cac09
0x192b9:    83 ec 04                           	sub esp, 4
0x192bc:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x192c0:    8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x192c4:    8d 87 00 00 00 80                  	lea eax, [edi - 0x80000000]
0x192ca:    09 f0                              	or eax, esi
0x192cc:    74 4e                              	je 0x1931c <function_1931c>
0x192ce:    89 f8                              	mov eax, edi
0x192d0:    89 f2                              	mov edx, esi
0x192d2:    35 ff ff ff 7f                     	xor eax, 0x7fffffff
0x192d7:    f7 d2                              	not edx
0x192d9:    09 c2                              	or edx, eax
0x192db:    74 63                              	je 0x19340 <function_19340>
0x192dd:    89 f2                              	mov edx, esi
0x192df:    b9 f7 53 e3 a5                     	mov ecx, 0xa5e353f7
0x192e4:    83 f2 fe                           	xor edx, 0xfffffffe
0x192e7:    bb 9b c4 20 00                     	mov ebx, 0x20c49b
0x192ec:    09 d0                              	or eax, edx
0x192ee:    74 2c                              	je 0x1931c <function_1931c>
0x192f0:    81 c6 00 80 57 7c                  	add esi, 0x7c578000
0x192f6:    81 d7 c2 d9 12 fd                  	adc edi, 0xfd12d9c2
0x192fc:    c7 44 24 08 e8 03 00 00            	mov dword ptr [esp + 8], 0x3e8
0x19304:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x1930c:    89 34 24                           	mov dword ptr [esp], esi
0x1930f:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
; data inside code section at 0x19313 -- 0x19314
0x19313:    e8                                                 |.               |
; dynamically linked function: __divdi3 at 0x19314 -- 0x19315
; data inside code section at 0x19315 -- 0x1931c
0x19315:    ff ff ff 89 c1 89 d3                               |.......         |
; function: function_1931c at 0x1931c -- 0x1933d
0x1931c:    89 c8                              	mov eax, ecx
0x1931e:    89 da                              	mov edx, ebx
0x19320:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x19324:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1932b:    75 1f                              	jne 0x1934c <function_1934c>
0x1932d:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x19331:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x19335:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x19339:    83 c4 3c                           	add esp, 0x3c
0x1933c:    c3                                 	ret 
; data inside code section at 0x1933d -- 0x19340
0x1933d:    8d 76 00                                           |.v.             |
; function: function_19340 at 0x19340 -- 0x1934c
0x19340:    b9 f7 53 e3 a5                     	mov ecx, 0xa5e353f7
0x19345:    bb 9b c4 20 00                     	mov ebx, 0x20c49b
0x1934a:    eb d0                              	jmp 0x1931c <function_1931c>
; function: function_1934c at 0x1934c -- 0x1934d
; dynamically linked function: __stack_chk_fail at 0x1934d -- 0x1934e
; data inside code section at 0x1934e -- 0x19351
0x1934e:    ff ff ff                                           |...             |
; section: .text._Z16WriteCompactSizeI11CDataStreamEvRT_y
; function: _Z16WriteCompactSizeI11CDataStreamEvRT_y at 0x19360 -- 0x194a3
0x19360:    53                                 	push ebx
0x19361:    83 ec 48                           	sub esp, 0x48
0x19364:    8b 54 24 58                        	mov edx, dword ptr [esp + 0x58]
0x19368:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x1936f:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x19373:    31 c9                              	xor ecx, ecx
0x19375:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x19379:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1937d:    83 fa 00                           	cmp edx, 0
0x19380:    76 6e                              	jbe 0x193f0 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x90>
0x19382:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x19386:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19389:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x1938d:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x19391:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x19395:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x19399:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1939d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x193a1:    c6 44 24 3b ff                     	mov byte ptr [esp + 0x3b], 0xff
0x193a6:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x193ab:    89 1c 24                           	mov dword ptr [esp], ebx
0x193ae:    e8 ed 4b 01 00                     	call 0x2dfa0 <function_2dfa0>
0x193b3:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x193b6:    8d 54 24 28                        	lea edx, [esp + 0x28]
0x193ba:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x193bf:    8d 4c 24 30                        	lea ecx, [esp + 0x30]
0x193c3:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x193c7:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x193cb:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x193cf:    89 1c 24                           	mov dword ptr [esp], ebx
0x193d2:    e8 c9 4b 01 00                     	call 0x2dfa0 <function_2dfa0>
0x193d7:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x193db:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x193e2:    0f 85 bb 00 00 00                  	jne 0x194a3 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x13e>
0x193e8:    83 c4 48                           	add esp, 0x48
0x193eb:    5b                                 	pop ebx
0x193ec:    c3                                 	ret 
; data inside code section at 0x193ed -- 0x193f0
0x193ed:    8d 76 00                                           |.v.             |
0x193f0:    3d fc 00 00 00                     	cmp eax, 0xfc
0x193f5:    76 49                              	jbe 0x19440 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0xe0>
0x193f7:    3d ff ff 00 00                     	cmp eax, 0xffff
0x193fc:    76 62                              	jbe 0x19460 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x100>
0x193fe:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x19402:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19405:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x19409:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x1940d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x19411:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19415:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19419:    c6 44 24 3b fe                     	mov byte ptr [esp + 0x3b], 0xfe
0x1941e:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19423:    89 1c 24                           	mov dword ptr [esp], ebx
0x19426:    e8 75 4b 01 00                     	call 0x2dfa0 <function_2dfa0>
0x1942b:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1942e:    8d 54 24 34                        	lea edx, [esp + 0x34]
0x19432:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19437:    8d 4c 24 38                        	lea ecx, [esp + 0x38]
0x1943b:    eb 86                              	jmp 0x193c3 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x1943d -- 0x19440
0x1943d:    8d 76 00                                           |.v.             |
0x19440:    88 44 24 3b                        	mov byte ptr [esp + 0x3b], al
0x19444:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x19448:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1944b:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x1944f:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19454:    e9 6a ff ff ff                     	jmp 0x193c3 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x19459 -- 0x19460
0x19459:    8d b4 26 00 00 00 00                               |..&....         |
0x19460:    66 89 44 24 38                     	mov word ptr [esp + 0x38], ax
0x19465:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19468:    8d 54 24 3b                        	lea edx, [esp + 0x3b]
0x1946c:    8d 4c 24 3c                        	lea ecx, [esp + 0x3c]
0x19470:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x19474:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19478:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1947c:    c6 44 24 3b fd                     	mov byte ptr [esp + 0x3b], 0xfd
0x19481:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19486:    89 1c 24                           	mov dword ptr [esp], ebx
0x19489:    e8 12 4b 01 00                     	call 0x2dfa0 <function_2dfa0>
0x1948e:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19491:    8d 54 24 38                        	lea edx, [esp + 0x38]
0x19495:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x1949a:    8d 4c 24 3a                        	lea ecx, [esp + 0x3a]
0x1949e:    e9 20 ff ff ff                     	jmp 0x193c3 <_Z16WriteCompactSizeI11CDataStreamEvRT_y+0x63>
; data inside code section at 0x194a3 -- 0x194a4
0x194a3:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x194a4 -- 0x194a5
; data inside code section at 0x194a5 -- 0x194a8
0x194a5:    ff ff ff                                           |...             |
; section: .text._ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii
; function: _ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii at 0x194b0 -- 0x196c4
0x194b0:    55                                 	push ebp
0x194b1:    57                                 	push edi
0x194b2:    56                                 	push esi
0x194b3:    53                                 	push ebx
0x194b4:    83 ec 3c                           	sub esp, 0x3c
0x194b7:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x194bb:    8d 54 24 2c                        	lea edx, [esp + 0x2c]
0x194bf:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x194c3:    8d 6c 24 28                        	lea ebp, [esp + 0x28]
0x194c7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x194cd:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x194d1:    31 c0                              	xor eax, eax
0x194d3:    8b 07                              	mov eax, dword ptr [edi]
0x194d5:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x194d9:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x194dc:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x194e0:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x194e5:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x194e9:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x194ed:    89 1c 24                           	mov dword ptr [esp], ebx
0x194f0:    e8 fb 4b 01 00                     	call 0x2e0f0 <function_2e0f0>
0x194f5:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x194f8:    2b 47 04                           	sub eax, dword ptr [edi + 4]
0x194fb:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x19503:    89 1c 24                           	mov dword ptr [esp], ebx
0x19506:    c1 f8 02                           	sar eax, 2
0x19509:    69 c0 c5 4e ec c4                  	imul eax, eax, 0xc4ec4ec5
0x1950f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19513:    e8 f8 92 01 00                     	call 0x32810 <function_32810>
0x19518:    8b 77 04                           	mov esi, dword ptr [edi + 4]
0x1951b:    ba 24 00 00 00                     	mov edx, 0x24
0x19520:    3b 77 08                           	cmp esi, dword ptr [edi + 8]
0x19523:    89 f0                              	mov eax, esi
0x19525:    75 18                              	jne 0x1953f <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x8f>
0x19527:    e9 ae 00 00 00                     	jmp 0x195da <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x12a>
; data inside code section at 0x1952c -- 0x19530
0x1952c:    8d 74 26 00                                        |.t&.            |
0x19530:    83 c6 58                           	add esi, 0x58
0x19533:    89 f2                              	mov edx, esi
0x19535:    29 c2                              	sub edx, eax
0x19537:    0f 88 82 01 00 00                  	js 0x196bf <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x20f>
0x1953d:    89 c6                              	mov esi, eax
0x1953f:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x19542:    01 c2                              	add edx, eax
0x19544:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x19548:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1954c:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19551:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x19555:    89 1c 24                           	mov dword ptr [esp], ebx
0x19558:    e8 93 4b 01 00                     	call 0x2e0f0 <function_2e0f0>
0x1955d:    8b 46 28                           	mov eax, dword ptr [esi + 0x28]
0x19560:    2b 46 24                           	sub eax, dword ptr [esi + 0x24]
0x19563:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1956b:    89 1c 24                           	mov dword ptr [esp], ebx
0x1956e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19572:    e8 99 92 01 00                     	call 0x32810 <function_32810>
0x19577:    8b 56 28                           	mov edx, dword ptr [esi + 0x28]
0x1957a:    8b 46 24                           	mov eax, dword ptr [esi + 0x24]
0x1957d:    39 c2                              	cmp edx, eax
0x1957f:    74 26                              	je 0x195a7 <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0xf7>
0x19581:    29 c2                              	sub edx, eax
0x19583:    0f 88 36 01 00 00                  	js 0x196bf <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x20f>
0x19589:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x1958c:    01 c2                              	add edx, eax
0x1958e:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19593:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x19597:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1959b:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1959f:    89 1c 24                           	mov dword ptr [esp], ebx
0x195a2:    e8 49 4b 01 00                     	call 0x2e0f0 <function_2e0f0>
0x195a7:    8b 46 30                           	mov eax, dword ptr [esi + 0x30]
0x195aa:    8d 54 24 2c                        	lea edx, [esp + 0x2c]
0x195ae:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x195b2:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x195b5:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x195ba:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x195be:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x195c2:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x195c6:    89 1c 24                           	mov dword ptr [esp], ebx
0x195c9:    e8 22 4b 01 00                     	call 0x2e0f0 <function_2e0f0>
0x195ce:    8d 46 34                           	lea eax, [esi + 0x34]
0x195d1:    3b 47 08                           	cmp eax, dword ptr [edi + 8]
0x195d4:    0f 85 56 ff ff ff                  	jne 0x19530 <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x80>
0x195da:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x195dd:    2b 47 10                           	sub eax, dword ptr [edi + 0x10]
0x195e0:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x195e8:    89 1c 24                           	mov dword ptr [esp], ebx
0x195eb:    c1 f8 02                           	sar eax, 2
0x195ee:    69 c0 cd cc cc cc                  	imul eax, eax, 0xcccccccd
0x195f4:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x195f8:    e8 13 92 01 00                     	call 0x32810 <function_32810>
0x195fd:    8b 77 10                           	mov esi, dword ptr [edi + 0x10]
0x19600:    3b 77 14                           	cmp esi, dword ptr [edi + 0x14]
0x19603:    74 7e                              	je 0x19683 <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x1d3>
0x19605:    8d 76 00                           	lea esi, [esi]
0x19608:    8b 06                              	mov eax, dword ptr [esi]
0x1960a:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x1960d:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x19611:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19614:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x19618:    8d 54 24 20                        	lea edx, [esp + 0x20]
0x1961c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19620:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19625:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19629:    89 6c 24 0c                        	mov dword ptr [esp + 0xc], ebp
0x1962d:    89 1c 24                           	mov dword ptr [esp], ebx
0x19630:    e8 bb 4a 01 00                     	call 0x2e0f0 <function_2e0f0>
0x19635:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x19638:    2b 46 08                           	sub eax, dword ptr [esi + 8]
0x1963b:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x19643:    89 1c 24                           	mov dword ptr [esp], ebx
0x19646:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1964a:    e8 c1 91 01 00                     	call 0x32810 <function_32810>
0x1964f:    8b 56 0c                           	mov edx, dword ptr [esi + 0xc]
0x19652:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x19655:    39 c2                              	cmp edx, eax
0x19657:    74 22                              	je 0x1967b <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x1cb>
0x19659:    29 c2                              	sub edx, eax
0x1965b:    78 62                              	js 0x196bf <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x20f>
0x1965d:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x19660:    01 c2                              	add edx, eax
0x19662:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19667:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1966b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1966f:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x19673:    89 1c 24                           	mov dword ptr [esp], ebx
0x19676:    e8 75 4a 01 00                     	call 0x2e0f0 <function_2e0f0>
0x1967b:    83 c6 14                           	add esi, 0x14
0x1967e:    3b 77 14                           	cmp esi, dword ptr [edi + 0x14]
0x19681:    75 85                              	jne 0x19608 <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x158>
0x19683:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x19686:    8d 54 24 2c                        	lea edx, [esp + 0x2c]
0x1968a:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1968e:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x19691:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x19696:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1969a:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1969e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x196a2:    89 1c 24                           	mov dword ptr [esp], ebx
0x196a5:    e8 46 4a 01 00                     	call 0x2e0f0 <function_2e0f0>
0x196aa:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x196ae:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x196b5:    75 0d                              	jne 0x196c4 <_ZNK12CTransaction9SerializeI11CDataStreamEEvRT_ii+0x20f>
0x196b7:    83 c4 3c                           	add esp, 0x3c
0x196ba:    5b                                 	pop ebx
0x196bb:    5e                                 	pop esi
0x196bc:    5f                                 	pop edi
0x196bd:    5d                                 	pop ebp
0x196be:    c3                                 	ret 
0x196bf:    e8 d6 e2 00 00                     	call 0x2799a <function_2799a>
; data inside code section at 0x196c4 -- 0x196c5
0x196c4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x196c5 -- 0x196c6
; data inside code section at 0x196c6 -- 0x196c9
0x196c6:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_
; function: _ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE11equal_rangeERKS0_ at 0x196d0 -- 0x1970e
0x196d0:    55                                 	push ebp
0x196d1:    57                                 	push edi
0x196d2:    56                                 	push esi
0x196d3:    53                                 	push ebx
0x196d4:    83 ec 3c                           	sub esp, 0x3c
0x196d7:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x196db:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x196e2:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x196e6:    31 d2                              	xor edx, edx
0x196e8:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x196ec:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x196f0:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x196f4:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x196f7:    83 c0 04                           	add eax, 4
0x196fa:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x196fe:    66 90                              	nop 
0x19700:    85 db                              	test ebx, ebx
0x19702:    74 1a                              	je 0x1971e <function_1971e>
0x19704:    8d 7b 10                           	lea edi, [ebx + 0x10]
0x19707:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1970b:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1970e -- 0x1970f
0x1970e:    e8                                                 |.               |
; dynamically linked function: _ZltRK4CInvS1_ at 0x1970f -- 0x19710
; data inside code section at 0x19710 -- 0x1971e
0x19710:    ff ff ff 84 c0 74 39 8b  5b 0c 85 db 75 e6         |.....t9.[...u.  |
; function: function_1971e at 0x1971e -- 0x1974a
0x1971e:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x19722:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x19726:    89 10                              	mov dword ptr [eax], edx
0x19728:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1972b:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1972f:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x19736:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1973a:    0f 85 a5 00 00 00                  	jne 0x197e5 <function_197e5>
0x19740:    83 c4 3c                           	add esp, 0x3c
0x19743:    5b                                 	pop ebx
0x19744:    5e                                 	pop esi
0x19745:    5f                                 	pop edi
0x19746:    5d                                 	pop ebp
0x19747:    c2 04 00                           	ret 4
; data inside code section at 0x1974a -- 0x19758
0x1974a:    8d b6 00 00 00 00 89 7c  24 04 89 34 24 e8         |.......|$..4$.  |
; dynamically linked function: _ZltRK4CInvS1_ at 0x19758 -- 0x19759
; data inside code section at 0x19759 -- 0x1975b
0x19759:    ff ff                                              |..              |
; function: function_1975b at 0x1975b -- 0x19769
0x1975b:    ff 84 c0 74 10 89 5c               	inc dword ptr [eax + eax*8 + 0x5c891074]
0x19762:    24 18                              	and al, 0x18
0x19764:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x19767:    eb 97                              	jmp 0x19700
; data inside code section at 0x19769 -- 0x19778
0x19769:    8d b4 26 00 00 00 00 8b  7b 08 8b 6b 0c 66 90      |..&.....{..k.f. |
; function: function_19778 at 0x19778 -- 0x19779
; data inside code section at 0x19779 -- 0x19787
0x19779:    ed 74 24 8d 45 10 89 44  24 04 89 34 24 e8         |.t$.E..D$..4$.  |
; dynamically linked function: _ZltRK4CInvS1_ at 0x19787 -- 0x19788
; data inside code section at 0x19788 -- 0x197a0
0x19788:    ff ff ff 84 c0 74 51 89  6c 24 18 8b 6d 08 85 ed   |.....tQ.l$..m...|
0x19798:    75 e2 8d b6 00 00 00 00                            |u.......        |
; function: function_197a0 at 0x197a0 -- 0x197a1
; data inside code section at 0x197a1 -- 0x197a4
0x197a1:    ff 74 1c                                           |.t.             |
; function: function_197a4 at 0x197a4 -- 0x197a5
; data inside code section at 0x197a5 -- 0x197af
0x197a5:    47 10 89 74 24 04 89 04  24 e8                     |G..t$...$.      |
; dynamically linked function: _ZltRK4CInvS1_ at 0x197af -- 0x197b0
; data inside code section at 0x197b0 -- 0x197b2
0x197b0:    ff ff                                              |..              |
; function: function_197b2 at 0x197b2 -- 0x197d2
0x197b2:    ff 84 c0 75 21 89 fb               	inc dword ptr [eax + eax*8 - 0x476de8b]
0x197b9:    8b 7f 08                           	mov edi, dword ptr [edi + 8]
0x197bc:    85 ff                              	test edi, edi
0x197be:    75 e4                              	jne 0x197a4 <function_197a4>
0x197c0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x197c4:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x197c8:    89 18                              	mov dword ptr [eax], ebx
0x197ca:    89 50 04                           	mov dword ptr [eax + 4], edx
0x197cd:    e9 59 ff ff ff                     	jmp 0x1972b
; data inside code section at 0x197d2 -- 0x197d8
0x197d2:    8d b6 00 00 00 00                                  |......          |
; function: function_197d8 at 0x197d8 -- 0x197dd
0x197d8:    8b 7f 0c                           	mov edi, dword ptr [edi + 0xc]
0x197db:    eb c3                              	jmp 0x197a0 <function_197a0>
; data inside code section at 0x197dd -- 0x197e0
0x197dd:    8d 76 00                                           |.v.             |
; function: function_197e0 at 0x197e0 -- 0x197e5
0x197e0:    8b 6d 0c                           	mov ebp, dword ptr [ebp + 0xc]
0x197e3:    eb 93                              	jmp 0x19778 <function_19778>
; function: function_197e5 at 0x197e5 -- 0x197e6
; dynamically linked function: __stack_chk_fail at 0x197e6 -- 0x197e7
; data inside code section at 0x197e7 -- 0x197ea
0x197e7:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_
; function: _ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_ at 0x197f0 -- 0x1984d
0x197f0:    55                                 	push ebp
0x197f1:    57                                 	push edi
0x197f2:    56                                 	push esi
0x197f3:    53                                 	push ebx
0x197f4:    83 ec 3c                           	sub esp, 0x3c
0x197f7:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x197fb:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x197ff:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19805:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x19809:    31 c0                              	xor eax, eax
0x1980b:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x1980f:    89 04 24                           	mov dword ptr [esp], eax
0x19812:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x19816:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1981a:    e8 a1 96 01 00                     	call 0x32ec0 <function_32ec0>
0x1981f:    8b 57 14                           	mov edx, dword ptr [edi + 0x14]
0x19822:    83 ec 04                           	sub esp, 4
0x19825:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x19829:    39 47 0c                           	cmp dword ptr [edi + 0xc], eax
0x1982c:    8b 6c 24 1c                        	mov ebp, dword ptr [esp + 0x1c]
0x19830:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x19834:    89 c3                              	mov ebx, eax
0x19836:    74 60                              	je 0x19898 <function_19898>
0x19838:    8d 57 04                           	lea edx, [edi + 4]
0x1983b:    39 c5                              	cmp ebp, eax
0x1983d:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x19841:    75 07                              	jne 0x1984a <_ZNSt8_Rb_treeI4CInvS0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE5eraseERKS0_+0x5a>
0x19843:    e9 86 00 00 00                     	jmp 0x198ce <function_198ce>
0x19848:    89 f3                              	mov ebx, esi
0x1984a:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1984d -- 0x1984e
0x1984d:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1984e -- 0x1984f
; data inside code section at 0x1984f -- 0x19860
0x1984f:    ff ff ff 8b 54 24 10 89  1c 24 89 54 24 04 89 c6   |....T$...$.T$...|
0x1985f:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x19860 -- 0x19861
; data inside code section at 0x19861 -- 0x19868
0x19861:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x19868 -- 0x19869
; data inside code section at 0x19869 -- 0x1987d
0x19869:    ff ff ff 8b 47 14 83 e8  01 39 ee 89 47 14 75 cf   |....G....9..G.u.|
0x19879:    29 44 24 14                                        |)D$.            |
; function: function_1987d at 0x1987d -- 0x19896
0x1987d:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x19881:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x19888:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x1988c:    75 4a                              	jne 0x198d8 <function_198d8>
0x1988e:    83 c4 3c                           	add esp, 0x3c
0x19891:    5b                                 	pop ebx
0x19892:    5e                                 	pop esi
0x19893:    5f                                 	pop edi
0x19894:    5d                                 	pop ebp
0x19895:    c3                                 	ret 
; data inside code section at 0x19896 -- 0x19898
0x19896:    66 90                                              |f.              |
; function: function_19898 at 0x19898 -- 0x198ce
0x19898:    8d 57 04                           	lea edx, [edi + 4]
0x1989b:    89 c3                              	mov ebx, eax
0x1989d:    39 ea                              	cmp edx, ebp
0x1989f:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x198a3:    75 93                              	jne 0x19838
0x198a5:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x198a8:    89 3c 24                           	mov dword ptr [esp], edi
0x198ab:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x198af:    e8 9c 3d 01 00                     	call 0x2d650 <function_2d650>
0x198b4:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x198b8:    c7 47 08 00 00 00 00               	mov dword ptr [edi + 8], 0
0x198bf:    c7 47 14 00 00 00 00               	mov dword ptr [edi + 0x14], 0
0x198c6:    89 57 0c                           	mov dword ptr [edi + 0xc], edx
0x198c9:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x198cc:    eb af                              	jmp 0x1987d <function_1987d>
; function: function_198ce at 0x198ce -- 0x198d8
0x198ce:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x198d6:    eb a5                              	jmp 0x1987d <function_1987d>
; function: function_198d8 at 0x198d8 -- 0x198d9
; dynamically linked function: __stack_chk_fail at 0x198d9 -- 0x198da
; data inside code section at 0x198da -- 0x198dd
0x198da:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_ at 0x198e0 -- 0x1992c
0x198e0:    83 ec 5c                           	sub esp, 0x5c
0x198e3:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x198e7:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x198eb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x198f2:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x198f6:    31 d2                              	xor edx, edx
0x198f8:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x198fc:    8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x19900:    85 c9                              	test ecx, ecx
0x19902:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x19906:    8b 7c 24 70                        	mov edi, dword ptr [esp + 0x70]
0x1990a:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1990e:    8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x19912:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x19916:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1991a:    c6 44 24 10 01                     	mov byte ptr [esp + 0x10], 1
0x1991f:    0f 84 83 00 00 00                  	je 0x199a8 <function_199a8>
0x19925:    c7 04 24 18 00 00 00               	mov dword ptr [esp], 0x18
; data inside code section at 0x1992c -- 0x1992d
0x1992c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1992d -- 0x1992e
; data inside code section at 0x1992e -- 0x19932
0x1992e:    ff ff ff 89                                        |....            |
; function: function_19932 at 0x19932 -- 0x19933
0x19932:    c3                                 	ret 
; data inside code section at 0x19933 -- 0x19944
0x19933:    83 c0 10 89 44 24 2c 74  1e 89 7c 24 04 89 04 24   |....D$,t..|$...$|
0x19943:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x19944 -- 0x19945
; data inside code section at 0x19945 -- 0x19956
0x19945:    ff ff ff 83 c7 04 8d 43  14 89 7c 24 04 89 04 24   |.......C..|$...$|
0x19955:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x19956 -- 0x19957
; data inside code section at 0x19957 -- 0x19976
0x19957:    ff ff ff 8d 46 04 8b 4c  24 28 89 44 24 0c 0f b6   |....F..L$(.D$...|
0x19967:    44 24 10 89 5c 24 04 89  4c 24 08 89 04 24 e8      |D$..\$..L$...$. |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x19976 -- 0x19977
; data inside code section at 0x19977 -- 0x19979
0x19977:    ff ff                                              |..              |
; function: function_19979 at 0x19979 -- 0x199a6
0x19979:    ff 89 e8 83 46 14                  	dec dword ptr [ecx + 0x144683e8]
0x1997f:    01 8b 54 24 3c 65                  	add dword ptr [ebx + 0x653c2454], ecx
0x19985:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1998b:    89 5d 00                           	mov dword ptr [ebp], ebx
0x1998e:    75 62                              	jne 0x199f2 <function_199f2>
0x19990:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x19994:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x19998:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1999c:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x199a0:    83 c4 5c                           	add esp, 0x5c
0x199a3:    c2 04 00                           	ret 4
; data inside code section at 0x199a6 -- 0x199a8
0x199a6:    66 90                                              |f.              |
; function: function_199a8 at 0x199a8 -- 0x199d8
0x199a8:    8d 46 04                           	lea eax, [esi + 4]
0x199ab:    39 44 24 28                        	cmp dword ptr [esp + 0x28], eax
0x199af:    0f 84 70 ff ff ff                  	je 0x19925
0x199b5:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x199b9:    8b 07                              	mov eax, dword ptr [edi]
0x199bb:    8b 51 10                           	mov edx, dword ptr [ecx + 0x10]
0x199be:    8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0x199c1:    8b 4a f4                           	mov ecx, dword ptr [edx - 0xc]
0x199c4:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x199c8:    89 04 24                           	mov dword ptr [esp], eax
0x199cb:    39 d9                              	cmp ecx, ebx
0x199cd:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x199d1:    0f 47 cb                           	cmova ecx, ebx
0x199d4:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x199d8 -- 0x199d9
0x199d8:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x199d9 -- 0x199da
; data inside code section at 0x199da -- 0x199dc
0x199da:    ff ff                                              |..              |
; function: function_199dc at 0x199dc -- 0x199de
0x199dc:    ff 2b                              	ljmp [ebx]
; function: function_199de at 0x199de -- 0x199f2
0x199de:    5c                                 	pop esp
0x199df:    24 10                              	and al, 0x10
0x199e1:    85 c0                              	test eax, eax
0x199e3:    0f 44 c3                           	cmove eax, ebx
0x199e6:    c1 e8 1f                           	shr eax, 0x1f
0x199e9:    88 44 24 10                        	mov byte ptr [esp + 0x10], al
0x199ed:    e9 33 ff ff ff                     	jmp 0x19925
; function: function_199f2 at 0x199f2 -- 0x199f3
; dynamically linked function: __stack_chk_fail at 0x199f3 -- 0x199f4
; data inside code section at 0x199f4 -- 0x19a01
0x199f4:    ff ff ff 8b 54 24 2c 89  c6 89 14 24 e8            |....T$,....$.   |
; dynamically linked function: _ZNSsD1Ev at 0x19a01 -- 0x19a02
; data inside code section at 0x19a02 -- 0x19a07
0x19a02:    ff ff ff 89 f0                                     |.....           |
; function: function_19a07 at 0x19a07 -- 0x19a08
; data inside code section at 0x19a08 -- 0x19a0b
0x19a08:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x19a0b -- 0x19a0c
; data inside code section at 0x19a0c -- 0x19a13
0x19a0c:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x19a13 -- 0x19a14
; data inside code section at 0x19a14 -- 0x19a18
0x19a14:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x19a18 -- 0x19a19
; data inside code section at 0x19a19 -- 0x19a1c
0x19a19:    ff ff ff                                           |...             |
; function: function_19a1c at 0x19a1c -- 0x19a1e
0x19a1c:    eb e9                              	jmp 0x19a07 <function_19a07>
; data inside code section at 0x19a1e -- 0x19a1f
0x19a1e:    89                                                 |.               |
; function: function_19a1f at 0x19a1f -- 0x19a20
0x19a1f:    c3                                 	ret 
; data inside code section at 0x19a20 -- 0x19a21
0x19a20:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x19a21 -- 0x19a22
; data inside code section at 0x19a22 -- 0x19a29
0x19a22:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x19a29 -- 0x19a2a
; data inside code section at 0x19a2a -- 0x19a2d
0x19a2a:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_ at 0x19a30 -- 0x19aae
0x19a30:    55                                 	push ebp
0x19a31:    57                                 	push edi
0x19a32:    56                                 	push esi
0x19a33:    53                                 	push ebx
0x19a34:    83 ec 5c                           	sub esp, 0x5c
0x19a37:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x19a3b:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x19a3f:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x19a43:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x19a47:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x19a4b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19a51:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x19a55:    31 c0                              	xor eax, eax
0x19a57:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x19a5b:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x19a5f:    8b 7a 08                           	mov edi, dword ptr [edx + 8]
0x19a62:    85 ff                              	test edi, edi
0x19a64:    0f 84 bb 00 00 00                  	je 0x19b25 <function_19b25>
0x19a6a:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x19a6e:    8b 12                              	mov edx, dword ptr [edx]
0x19a70:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x19a74:    8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0x19a77:    eb 15                              	jmp 0x19a8e <_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_+0x5e>
; data inside code section at 0x19a79 -- 0x19a80
0x19a79:    8d b4 26 00 00 00 00                               |..&....         |
0x19a80:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x19a83:    b9 01 00 00 00                     	mov ecx, 1
0x19a88:    85 c0                              	test eax, eax
0x19a8a:    74 41                              	je 0x19acd <function_19acd>
0x19a8c:    89 c7                              	mov edi, eax
0x19a8e:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x19a91:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x19a95:    8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0x19a98:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x19a9c:    89 04 24                           	mov dword ptr [esp], eax
0x19a9f:    39 de                              	cmp esi, ebx
0x19aa1:    89 da                              	mov edx, ebx
0x19aa3:    0f 46 d6                           	cmovbe edx, esi
0x19aa6:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19aaa:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
; data inside code section at 0x19aae -- 0x19aaf
0x19aae:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19aaf -- 0x19ab0
; data inside code section at 0x19ab0 -- 0x19acd
0x19ab0:    ff ff ff 89 f1 8b 54 24  28 29 d9 85 c0 0f 44 c1   |......T$()....D.|
0x19ac0:    85 c0 78 bc 8b 47 0c 31  c9 85 c0 75 bf            |..x..G.1...u.   |
; function: function_19acd at 0x19acd -- 0x19aea
0x19acd:    84 c9                              	test cl, cl
0x19acf:    89 d0                              	mov eax, edx
0x19ad1:    89 fa                              	mov edx, edi
0x19ad3:    75 5b                              	jne 0x19b30
0x19ad5:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x19ad9:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x19add:    29 f3                              	sub ebx, esi
0x19adf:    89 2c 24                           	mov dword ptr [esp], ebp
0x19ae2:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x19ae6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x19aea -- 0x19aeb
0x19aea:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19aeb -- 0x19aec
; data inside code section at 0x19aec -- 0x19aee
0x19aec:    ff ff                                              |..              |
; function: function_19aee at 0x19aee -- 0x19af8
0x19aee:    ff 8b 54 24 28 85                  	dec dword ptr [ebx - 0x7ad7dbac]
0x19af4:    c0 0f 44                           	ror byte ptr [edi], 0x44
0x19af7:    c3                                 	ret 
; data inside code section at 0x19af8 -- 0x19b06
0x19af8:    85 c0 78 6c 8b 44 24 30  89 10 c6 40 04 00         |..xl.D$0...@..  |
; function: function_19b06 at 0x19b06 -- 0x19b25
0x19b06:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x19b0a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x19b11:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x19b15:    0f 85 8b 00 00 00                  	jne 0x19ba6 <function_19ba6>
0x19b1b:    83 c4 5c                           	add esp, 0x5c
0x19b1e:    5b                                 	pop ebx
0x19b1f:    5e                                 	pop esi
0x19b20:    5f                                 	pop edi
0x19b21:    5d                                 	pop ebp
0x19b22:    c2 04 00                           	ret 4
; function: function_19b25 at 0x19b25 -- 0x19b3c
0x19b25:    89 d7                              	mov edi, edx
0x19b27:    83 c7 04                           	add edi, 4
0x19b2a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x19b30:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x19b34:    3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0x19b37:    74 2f                              	je 0x19b68 <function_19b68>
0x19b39:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x19b3c -- 0x19b3d
0x19b3c:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x19b3d -- 0x19b3e
; data inside code section at 0x19b3e -- 0x19b40
0x19b3e:    ff ff                                              |..              |
; function: function_19b40 at 0x19b40 -- 0x19b62
0x19b40:    ff 89 c2 8b 44 24                  	dec dword ptr [ecx + 0x24448bc2]
0x19b46:    38 8b 6a 10 8b 00                  	cmp byte ptr [ebx + 0x8b106a], cl
0x19b4c:    8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0x19b4f:    8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x19b52:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x19b56:    89 d8                              	mov eax, ebx
0x19b58:    39 de                              	cmp esi, ebx
0x19b5a:    0f 46 c6                           	cmovbe eax, esi
0x19b5d:    e9 73 ff ff ff                     	jmp 0x19ad5 <function_19ad5>
; data inside code section at 0x19b62 -- 0x19b68
0x19b62:    8d b6 00 00 00 00                                  |......          |
; function: function_19b68 at 0x19b68 -- 0x19ba6
0x19b68:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x19b6c:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x19b70:    89 04 24                           	mov dword ptr [esp], eax
0x19b73:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x19b77:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x19b7f:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x19b83:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x19b87:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x19b8b:    e8 80 97 01 00                     	call 0x33310 <unknown_33310>
0x19b90:    83 ec 04                           	sub esp, 4
0x19b93:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x19b97:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x19b9b:    89 02                              	mov dword ptr [edx], eax
0x19b9d:    c6 42 04 01                        	mov byte ptr [edx + 4], 1
0x19ba1:    e9 60 ff ff ff                     	jmp 0x19b06 <function_19b06>
; function: function_19ba6 at 0x19ba6 -- 0x19ba7
; dynamically linked function: __stack_chk_fail at 0x19ba7 -- 0x19ba8
; data inside code section at 0x19ba8 -- 0x19bab
0x19ba8:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_ at 0x19bb0 -- 0x19c34
0x19bb0:    83 ec 7c                           	sub esp, 0x7c
0x19bb3:    89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x19bb7:    8b ac 24 84 00 00 00               	mov ebp, dword ptr [esp + 0x84]
0x19bbe:    89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0x19bc2:    8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0x19bc9:    8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0x19bd0:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x19bd7:    89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x19bdb:    31 c9                              	xor ecx, ecx
0x19bdd:    8d 45 04                           	lea eax, [ebp + 4]
0x19be0:    39 c6                              	cmp esi, eax
0x19be2:    89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x19be6:    8b bc 24 80 00 00 00               	mov edi, dword ptr [esp + 0x80]
0x19bed:    89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x19bf1:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x19bf5:    0f 84 bd 01 00 00                  	je 0x19db8 <function_19db8>
0x19bfb:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x19bff:    8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0x19c02:    8b 12                              	mov edx, dword ptr [edx]
0x19c04:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x19c08:    8b 5a f4                           	mov ebx, dword ptr [edx - 0xc]
0x19c0b:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x19c0f:    8b 51 f4                           	mov edx, dword ptr [ecx - 0xc]
0x19c12:    89 d9                              	mov ecx, ebx
0x19c14:    39 da                              	cmp edx, ebx
0x19c16:    0f 46 ca                           	cmovbe ecx, edx
0x19c19:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x19c1d:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x19c21:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x19c25:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x19c29:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x19c2d:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x19c31:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x19c34 -- 0x19c35
0x19c34:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19c35 -- 0x19c36
; data inside code section at 0x19c36 -- 0x19c5d
0x19c36:    ff ff ff 8b 54 24 34 89  d9 29 d1 85 c0 0f 44 c1   |....T$4..)....D.|
0x19c46:    85 c0 0f 89 aa 00 00 00  8b 45 0c 39 f0 0f 84 25   |.........E.9...%|
0x19c56:    02 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x19c5d -- 0x19c5e
; data inside code section at 0x19c5e -- 0x19c86
0x19c5e:    ff ff ff 89 da 89 44 24  38 8b 40 10 8b 48 f4 89   |......D$8.@..H..|
0x19c6e:    04 24 39 d9 0f 46 d1 89  54 24 08 8b 54 24 3c 89   |.$9..F..T$..T$<.|
0x19c7e:    4c 24 34 89 54 24 04 e8                            |L$4.T$..        |
; dynamically linked function: memcmp at 0x19c86 -- 0x19c87
; data inside code section at 0x19c87 -- 0x19ccb
0x19c87:    ff ff ff 8b 4c 24 34 29  d9 85 c0 0f 44 c1 85 c0   |....L$4)....D...|
0x19c97:    0f 89 5b 01 00 00 8b 44  24 38 8b 50 0c 85 d2 0f   |..[....D$8.P....|
0x19ca7:    84 74 01 00 00 8b 4c 24  40 89 74 24 0c 89 74 24   |.t....L$@.t$..t$|
0x19cb7:    08 89 6c 24 04 89 4c 24  10 89 3c 24 e8 c8 97 01   |..l$..L$..<$....|
0x19cc7:    00 83 ec 04                                        |....            |
; function: function_19ccb at 0x19ccb -- 0x19cf4
0x19ccb:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x19ccf:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x19cd6:    89 f8                              	mov eax, edi
0x19cd8:    0f 85 c4 01 00 00                  	jne 0x19ea2 <function_19ea2>
0x19cde:    8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x19ce2:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x19ce6:    8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x19cea:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x19cee:    83 c4 7c                           	add esp, 0x7c
0x19cf1:    c2 04 00                           	ret 4
; data inside code section at 0x19cf4 -- 0x19d14
0x19cf4:    8d 74 26 00 8b 4c 24 38  89 54 24 34 89 4c 24 08   |.t&..L$8.T$4.L$.|
0x19d04:    8b 4c 24 3c 89 4c 24 04  8b 4c 24 2c 89 0c 24 e8   |.L$<.L$..L$,..$.|
; dynamically linked function: memcmp at 0x19d14 -- 0x19d15
; data inside code section at 0x19d15 -- 0x19d32
0x19d15:    ff ff ff 8b 54 24 34 29  da 85 c0 0f 45 d0 85 d2   |....T$4)....E...|
0x19d25:    0f 89 85 00 00 00 8b 45  10 39 f0 0f 84            |.......E.9...   |
; function: function_19d32 at 0x19d32 -- 0x19d39
0x19d32:    ea 00 00 00 89 34 24               	ljmp 0x2434:0x89000000 <function_89000000>
; data inside code section at 0x19d39 -- 0x19d3a
0x19d39:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x19d3a -- 0x19d3b
; data inside code section at 0x19d3b -- 0x19d63
0x19d3b:    ff ff ff 89 c1 8b 40 10  8b 50 f4 89 44 24 04 89   |......@..P..D$..|
0x19d4b:    4c 24 34 39 da 89 54 24  38 0f 47 d3 89 54 24 08   |L$49..T$8.G..T$.|
0x19d5b:    8b 54 24 3c 89 14 24 e8                            |.T$<..$.        |
; dynamically linked function: memcmp at 0x19d63 -- 0x19d64
; data inside code section at 0x19d64 -- 0x19d66
0x19d64:    ff ff                                              |..              |
; function: function_19d66 at 0x19d66 -- 0x19dab
0x19d66:    ff 8b 4c 24 34 2b                  	dec dword ptr [ebx + 0x2b34244c]
0x19d6c:    5c                                 	pop esp
0x19d6d:    24 38                              	and al, 0x38
0x19d6f:    85 c0                              	test eax, eax
0x19d71:    0f 44 c3                           	cmove eax, ebx
0x19d74:    85 c0                              	test eax, eax
0x19d76:    0f 89 cc 00 00 00                  	jns 0x19e48 <function_19e48>
0x19d7c:    8b 5e 0c                           	mov ebx, dword ptr [esi + 0xc]
0x19d7f:    85 db                              	test ebx, ebx
0x19d81:    0f 84 e9 00 00 00                  	je 0x19e70 <function_19e70>
0x19d87:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x19d8b:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x19d8f:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x19d93:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x19d97:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x19d9b:    89 3c 24                           	mov dword ptr [esp], edi
0x19d9e:    e8 ed 96 01 00                     	call 0x33490 <unknown_33490>
0x19da3:    83 ec 04                           	sub esp, 4
0x19da6:    e9 20 ff ff ff                     	jmp 0x19ccb <function_19ccb>
; data inside code section at 0x19dab -- 0x19db0
0x19dab:    90 8d 74 26 00                                     |..t&.           |
; function: function_19db0 at 0x19db0 -- 0x19db7
0x19db0:    89 37                              	mov dword ptr [edi], esi
0x19db2:    e9 14 ff ff ff                     	jmp 0x19ccb <function_19ccb>
; data inside code section at 0x19db7 -- 0x19db8
0x19db7:    90                                                 |.               |
; function: function_19db8 at 0x19db8 -- 0x19de9
0x19db8:    8b 4d 14                           	mov ecx, dword ptr [ebp + 0x14]
0x19dbb:    85 c9                              	test ecx, ecx
0x19dbd:    74 39                              	je 0x19df8 <function_19df8>
0x19dbf:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x19dc2:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x19dc6:    8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0x19dc9:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x19dcd:    8b 11                              	mov edx, dword ptr [ecx]
0x19dcf:    8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0x19dd2:    8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0x19dd5:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x19dd9:    89 04 24                           	mov dword ptr [esp], eax
0x19ddc:    89 d9                              	mov ecx, ebx
0x19dde:    39 de                              	cmp esi, ebx
0x19de0:    0f 46 ce                           	cmovbe ecx, esi
0x19de3:    29 f3                              	sub ebx, esi
0x19de5:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x19de9 -- 0x19dea
0x19de9:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19dea -- 0x19deb
; data inside code section at 0x19deb -- 0x19def
0x19deb:    ff ff ff 85                                        |....            |
; function: function_19def at 0x19def -- 0x19df3
0x19def:    c0 0f 44                           	ror byte ptr [edi], 0x44
0x19df2:    c3                                 	ret 
; data inside code section at 0x19df3 -- 0x19df8
0x19df3:    85 c0 78 61 90                                     |..xa.           |
; function: function_19df8 at 0x19df8 -- 0x19e1e
0x19df8:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x19dfc:    8d 44 24 48                        	lea eax, [esp + 0x48]
0x19e00:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19e04:    89 04 24                           	mov dword ptr [esp], eax
0x19e07:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x19e0b:    e8 d0 97 01 00                     	call 0x335e0 <unknown_335e0>
0x19e10:    83 ec 04                           	sub esp, 4
0x19e13:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x19e17:    89 07                              	mov dword ptr [edi], eax
0x19e19:    e9 ad fe ff ff                     	jmp 0x19ccb <function_19ccb>
; data inside code section at 0x19e1e -- 0x19e2c
0x19e1e:    66 90 8b 54 24 40 89 44  24 0c 89 54 24 10         |f..T$@.D$..T$.  |
; function: function_19e2c at 0x19e2c -- 0x19e48
0x19e2c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x19e34:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x19e38:    89 3c 24                           	mov dword ptr [esp], edi
0x19e3b:    e8 50 96 01 00                     	call 0x33490 <unknown_33490>
0x19e40:    83 ec 04                           	sub esp, 4
0x19e43:    e9 83 fe ff ff                     	jmp 0x19ccb <function_19ccb>
; function: function_19e48 at 0x19e48 -- 0x19e56
0x19e48:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x19e4c:    8d 44 24 48                        	lea eax, [esp + 0x48]
0x19e50:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x19e54:    eb ae                              	jmp 0x19e04
; data inside code section at 0x19e56 -- 0x19e58
0x19e56:    66 90                                              |f.              |
; function: function_19e58 at 0x19e58 -- 0x19e6a
0x19e58:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x19e5c:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x19e60:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x19e64:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x19e68:    eb c2                              	jmp 0x19e2c <function_19e2c>
; data inside code section at 0x19e6a -- 0x19e70
0x19e6a:    8d b6 00 00 00 00                                  |......          |
; function: function_19e70 at 0x19e70 -- 0x19e7e
0x19e70:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x19e74:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x19e78:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x19e7c:    eb ae                              	jmp 0x19e2c <function_19e2c>
; function: function_19e7e at 0x19e7e -- 0x19ea2
0x19e7e:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x19e82:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x19e86:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x19e8a:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x19e8e:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x19e92:    89 3c 24                           	mov dword ptr [esp], edi
0x19e95:    e8 f6 95 01 00                     	call 0x33490 <unknown_33490>
0x19e9a:    83 ec 04                           	sub esp, 4
0x19e9d:    e9 29 fe ff ff                     	jmp 0x19ccb <function_19ccb>
; function: function_19ea2 at 0x19ea2 -- 0x19ea3
; dynamically linked function: __stack_chk_fail at 0x19ea3 -- 0x19ea4
; data inside code section at 0x19ea4 -- 0x19ea7
0x19ea4:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_
; function: _ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_ at 0x19eb0 -- 0x19f2d
0x19eb0:    55                                 	push ebp
0x19eb1:    57                                 	push edi
0x19eb2:    56                                 	push esi
0x19eb3:    53                                 	push ebx
0x19eb4:    83 ec 4c                           	sub esp, 0x4c
0x19eb7:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x19ebb:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x19ebf:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x19ec3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x19ec9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x19ecd:    31 c0                              	xor eax, eax
0x19ecf:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x19ed3:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x19ed7:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x19edb:    8b 70 08                           	mov esi, dword ptr [eax + 8]
0x19ede:    83 c2 04                           	add edx, 4
0x19ee1:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x19ee5:    85 f6                              	test esi, esi
0x19ee7:    0f 84 0e 01 00 00                  	je 0x19ffb <function_19ffb>
0x19eed:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x19ef1:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x19ef5:    8b 12                              	mov edx, dword ptr [edx]
0x19ef7:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x19efb:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x19eff:    8b 6a f4                           	mov ebp, dword ptr [edx - 0xc]
0x19f02:    89 d3                              	mov ebx, edx
0x19f04:    eb 0d                              	jmp 0x19f13 <_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_+0x63>
; data inside code section at 0x19f06 -- 0x19f08
0x19f06:    66 90                                              |f.              |
0x19f08:    89 74 24 18                        	mov dword ptr [esp + 0x18], esi
0x19f0c:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x19f0f:    85 f6                              	test esi, esi
0x19f11:    74 2f                              	je 0x19f42 <function_19f42>
0x19f13:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x19f16:    89 ea                              	mov edx, ebp
0x19f18:    8b 78 f4                           	mov edi, dword ptr [eax - 0xc]
0x19f1b:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x19f1f:    89 04 24                           	mov dword ptr [esp], eax
0x19f22:    39 ef                              	cmp edi, ebp
0x19f24:    0f 46 d7                           	cmovbe edx, edi
0x19f27:    29 ef                              	sub edi, ebp
0x19f29:    89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x19f2d -- 0x19f2e
0x19f2d:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19f2e -- 0x19f2f
; data inside code section at 0x19f2f -- 0x19f42
0x19f2f:    ff ff ff 85 c0 0f 44 c7  85 c0 79 cd 8b 76 0c 85   |......D...y..v..|
0x19f3f:    f6 75 d1                                           |.u.             |
; function: function_19f42 at 0x19f42 -- 0x19f6a
0x19f42:    8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0x19f46:    39 5c 24 24                        	cmp dword ptr [esp + 0x24], ebx
0x19f4a:    74 2c                              	je 0x19f78 <function_19f78>
0x19f4c:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x19f4f:    89 ea                              	mov edx, ebp
0x19f51:    8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x19f54:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x19f58:    39 ee                              	cmp esi, ebp
0x19f5a:    0f 46 d6                           	cmovbe edx, esi
0x19f5d:    29 f5                              	sub ebp, esi
0x19f5f:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x19f63:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x19f67:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x19f6a -- 0x19f6b
0x19f6a:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x19f6b -- 0x19f6c
; data inside code section at 0x19f6c -- 0x19f78
0x19f6c:    ff ff ff 85 c0 0f 44 c5  85 c0 79 6b               |......D...yk    |
; function: function_19f78 at 0x19f78 -- 0x19f80
0x19f78:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x19f7c:    8d 74 24 30                        	lea esi, [esp + 0x30]
; data inside code section at 0x19f80 -- 0x19f84
0x19f80:    c7 44 24 38                                        |.D$8            |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x19f84 -- 0x19f8f
; data inside code section at 0x19f8f -- 0x19f90
0x19f8f:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x19f90 -- 0x19f91
; data inside code section at 0x19f91 -- 0x19fa4
0x19f91:    ff ff ff 8d 7c 24 38 8d  6c 24 34 89 7c 24 04 89   |....|$8.l$4.|$..|
0x19fa1:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZNSsC1ERKSs at 0x19fa4 -- 0x19fa5
; data inside code section at 0x19fa5 -- 0x19fcf
0x19fa5:    ff ff ff 8b 54 24 1c 8d  44 24 2c 89 74 24 0c 89   |....T$..D$,.t$..|
0x19fb5:    5c 24 08 89 04 24 89 54  24 04 e8 9c 9a 01 00 83   |\$...$.T$.......|
0x19fc5:    ec 04 8b 5c 24 2c 89 2c  24 e8                     |...\$,.,$.      |
; dynamically linked function: _ZNSsD1Ev at 0x19fcf -- 0x19fd0
; data inside code section at 0x19fd0 -- 0x19fd7
0x19fd0:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x19fd7 -- 0x19fd8
; data inside code section at 0x19fd8 -- 0x19fdf
0x19fd8:    ff ff ff 89 3c 24 e8                               |....<$.         |
; dynamically linked function: _ZNSsD1Ev at 0x19fdf -- 0x19fe0
; data inside code section at 0x19fe0 -- 0x19fe2
0x19fe0:    ff ff                                              |..              |
; function: function_19fe2 at 0x19fe2 -- 0x19ffb
0x19fe2:    ff 8b 54 24 3c 65                  	dec dword ptr [ebx + 0x653c2454]
0x19fe8:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x19fee:    8d 43 14                           	lea eax, [ebx + 0x14]
0x19ff1:    75 11                              	jne 0x1a004 <function_1a004>
0x19ff3:    83 c4 4c                           	add esp, 0x4c
0x19ff6:    5b                                 	pop ebx
0x19ff7:    5e                                 	pop esi
0x19ff8:    5f                                 	pop edi
0x19ff9:    5d                                 	pop ebp
0x19ffa:    c3                                 	ret 
; function: function_19ffb at 0x19ffb -- 0x1a004
0x19ffb:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x19fff:    e9 74 ff ff ff                     	jmp 0x19f78 <function_19f78>
; function: function_1a004 at 0x1a004 -- 0x1a005
; dynamically linked function: __stack_chk_fail at 0x1a005 -- 0x1a006
; data inside code section at 0x1a006 -- 0x1a00a
0x1a006:    ff ff ff 89                                        |....            |
; function: function_1a00a at 0x1a00a -- 0x1a00b
0x1a00a:    c3                                 	ret 
; data inside code section at 0x1a00b -- 0x1a00f
0x1a00b:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1a00f -- 0x1a010
; data inside code section at 0x1a010 -- 0x1a013
0x1a010:    ff ff ff                                           |...             |
; function: function_1a013 at 0x1a013 -- 0x1a014
; data inside code section at 0x1a014 -- 0x1a017
0x1a014:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZNSsD1Ev at 0x1a017 -- 0x1a018
; data inside code section at 0x1a018 -- 0x1a01f
0x1a018:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1a01f -- 0x1a020
; data inside code section at 0x1a020 -- 0x1a024
0x1a020:    ff ff ff 89                                        |....            |
; function: function_1a024 at 0x1a024 -- 0x1a025
0x1a024:    c3                                 	ret 
; data inside code section at 0x1a025 -- 0x1a029
0x1a025:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1a029 -- 0x1a02a
; data inside code section at 0x1a02a -- 0x1a031
0x1a02a:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1a031 -- 0x1a032
; data inside code section at 0x1a032 -- 0x1a035
0x1a032:    ff ff ff                                           |...             |
; function: function_1a035 at 0x1a035 -- 0x1a037
0x1a035:    eb dc                              	jmp 0x1a013 <function_1a013>
; function: function_1a037 at 0x1a037 -- 0x1a03f
0x1a037:    89 c3                              	mov ebx, eax
0x1a039:    8d 7c 24 38                        	lea edi, [esp + 0x38]
0x1a03d:    eb d4                              	jmp 0x1a013 <function_1a013>
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbP5CNodeNS0_8functionIFbSC_EEEEENS2_5mutexEEEEESaISJ_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbP5CNodeNS0_8functionIFbSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev at 0x1a040 -- 0x1a072
0x1a040:    57                                 	push edi
0x1a041:    56                                 	push esi
0x1a042:    53                                 	push ebx
0x1a043:    83 ec 20                           	sub esp, 0x20
0x1a046:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1a04a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a050:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1a054:    31 c0                              	xor eax, eax
0x1a056:    8b 1f                              	mov ebx, dword ptr [edi]
0x1a058:    39 fb                              	cmp ebx, edi
0x1a05a:    75 06                              	jne 0x1a062 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IbP5CNodeNS0_8functionIFbSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x22>
0x1a05c:    eb 1d                              	jmp 0x1a07b <function_1a07b>
; data inside code section at 0x1a05e -- 0x1a060
0x1a05e:    66 90                                              |f.              |
0x1a060:    89 f3                              	mov ebx, esi
0x1a062:    8b 33                              	mov esi, dword ptr [ebx]
0x1a064:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1a067:    89 04 24                           	mov dword ptr [esp], eax
0x1a06a:    e8 11 05 01 00                     	call 0x2a580 <function_2a580>
0x1a06f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a072 -- 0x1a073
0x1a072:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1a073 -- 0x1a074
; data inside code section at 0x1a074 -- 0x1a07b
0x1a074:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1a07b at 0x1a07b -- 0x1a08f
0x1a07b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1a07f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1a086:    75 07                              	jne 0x1a08f <function_1a07b+0x13>
0x1a088:    83 c4 20                           	add esp, 0x20
0x1a08b:    5b                                 	pop ebx
0x1a08c:    5e                                 	pop esi
0x1a08d:    5f                                 	pop edi
0x1a08e:    c3                                 	ret 
; data inside code section at 0x1a08f -- 0x1a090
0x1a08f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a090 -- 0x1a091
; data inside code section at 0x1a091 -- 0x1a094
0x1a091:    ff ff ff                                           |...             |
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IbP5CNodebNS0_8functionIFbSC_bEEEEENS2_5mutexEEEEESaISJ_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IbP5CNodebNS0_8functionIFbSC_bEEEEENS2_5mutexEEEEESaISJ_EED1Ev at 0x1a0a0 -- 0x1a0d2
0x1a0a0:    57                                 	push edi
0x1a0a1:    56                                 	push esi
0x1a0a2:    53                                 	push ebx
0x1a0a3:    83 ec 20                           	sub esp, 0x20
0x1a0a6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1a0aa:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a0b0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1a0b4:    31 c0                              	xor eax, eax
0x1a0b6:    8b 1f                              	mov ebx, dword ptr [edi]
0x1a0b8:    39 fb                              	cmp ebx, edi
0x1a0ba:    75 06                              	jne 0x1a0c2 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IbP5CNodebNS0_8functionIFbSC_bEEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x22>
0x1a0bc:    eb 1d                              	jmp 0x1a0db <function_1a0db>
; data inside code section at 0x1a0be -- 0x1a0c0
0x1a0be:    66 90                                              |f.              |
0x1a0c0:    89 f3                              	mov ebx, esi
0x1a0c2:    8b 33                              	mov esi, dword ptr [ebx]
0x1a0c4:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1a0c7:    89 04 24                           	mov dword ptr [esp], eax
0x1a0ca:    e8 11 05 01 00                     	call 0x2a5e0 <function_2a5e0>
0x1a0cf:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a0d2 -- 0x1a0d3
0x1a0d2:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1a0d3 -- 0x1a0d4
; data inside code section at 0x1a0d4 -- 0x1a0db
0x1a0d4:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1a0db at 0x1a0db -- 0x1a0ef
0x1a0db:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1a0df:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1a0e6:    75 07                              	jne 0x1a0ef <function_1a0db+0x13>
0x1a0e8:    83 c4 20                           	add esp, 0x20
0x1a0eb:    5b                                 	pop ebx
0x1a0ec:    5e                                 	pop esi
0x1a0ed:    5f                                 	pop edi
0x1a0ee:    c3                                 	ret 
; data inside code section at 0x1a0ef -- 0x1a0f0
0x1a0ef:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a0f0 -- 0x1a0f1
; data inside code section at 0x1a0f1 -- 0x1a0f4
0x1a0f1:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISsSaISsEE17_M_reallocate_mapEjb
; function: _ZNSt5dequeISsSaISsEE17_M_reallocate_mapEjb at 0x1a100 -- 0x1a196
0x1a100:    83 ec 4c                           	sub esp, 0x4c
0x1a103:    0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0x1a108:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1a10c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1a110:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a116:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1a11a:    31 c0                              	xor eax, eax
0x1a11c:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1a120:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1a124:    88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0x1a128:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1a12b:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1a12e:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1a132:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1a136:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1a139:    89 cf                              	mov edi, ecx
0x1a13b:    29 c7                              	sub edi, eax
0x1a13d:    c1 ff 02                           	sar edi, 2
0x1a140:    83 c7 01                           	add edi, 1
0x1a143:    8d 14 37                           	lea edx, [edi + esi]
0x1a146:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1a14a:    8d 0c 12                           	lea ecx, [edx + edx]
0x1a14d:    39 cd                              	cmp ebp, ecx
0x1a14f:    76 4f                              	jbe 0x1a1a0 <function_1a1a0>
0x1a151:    29 d5                              	sub ebp, edx
0x1a153:    31 d2                              	xor edx, edx
0x1a155:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x1a159:    c1 e6 02                           	shl esi, 2
0x1a15c:    d1 ed                              	shr ebp, 1
0x1a15e:    80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0x1a163:    0f 45 d6                           	cmovne edx, esi
0x1a166:    83 c1 04                           	add ecx, 4
0x1a169:    8d 34 aa                           	lea esi, [edx + ebp*4]
0x1a16c:    29 c1                              	sub ecx, eax
0x1a16e:    03 33                              	add esi, dword ptr [ebx]
0x1a170:    c1 f9 02                           	sar ecx, 2
0x1a173:    39 f0                              	cmp eax, esi
0x1a175:    0f 87 f5 00 00 00                  	ja 0x1a270 <function_1a270>
0x1a17b:    85 c9                              	test ecx, ecx
0x1a17d:    0f 84 a1 00 00 00                  	je 0x1a224 <function_1a224>
0x1a183:    c1 e1 02                           	shl ecx, 2
0x1a186:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a18a:    8d 04 be                           	lea eax, [esi + edi*4]
0x1a18d:    29 c8                              	sub eax, ecx
0x1a18f:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1a193:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1a196 -- 0x1a197
0x1a196:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1a197 -- 0x1a198
; data inside code section at 0x1a198 -- 0x1a19b
0x1a198:    ff ff ff                                           |...             |
; function: function_1a19b at 0x1a19b -- 0x1a1a0
0x1a19b:    e9 84 00 00 00                     	jmp 0x1a224 <function_1a224>
; function: function_1a1a0 at 0x1a1a0 -- 0x1a1c8
0x1a1a0:    39 ee                              	cmp esi, ebp
0x1a1a2:    89 e8                              	mov eax, ebp
0x1a1a4:    0f 43 c6                           	cmovae eax, esi
0x1a1a7:    8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0x1a1ab:    81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0x1a1b1:    0f 87 d2 00 00 00                  	ja 0x1a289 <function_1a289>
0x1a1b7:    8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0x1a1be:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1a1c2:    c1 e6 02                           	shl esi, 2
0x1a1c5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1a1c8 -- 0x1a1c9
0x1a1c8:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1a1c9 -- 0x1a1ca
; data inside code section at 0x1a1ca -- 0x1a20d
0x1a1ca:    ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0x1a1da:    d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0x1a1ea:    24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0x1a1fa:    85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0x1a20a:    34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0x1a20d -- 0x1a20e
; data inside code section at 0x1a20e -- 0x1a217
0x1a20e:    ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1a217 -- 0x1a218
; data inside code section at 0x1a218 -- 0x1a224
0x1a218:    ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_1a224 at 0x1a224 -- 0x1a269
0x1a224:    89 73 14                           	mov dword ptr [ebx + 0x14], esi
0x1a227:    8b 06                              	mov eax, dword ptr [esi]
0x1a229:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1a22c:    05 00 02 00 00                     	add eax, 0x200
0x1a231:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1a234:    8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0x1a238:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1a23b:    8b 00                              	mov eax, dword ptr [eax]
0x1a23d:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1a240:    05 00 02 00 00                     	add eax, 0x200
0x1a245:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1a249:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1a250:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1a253:    75 39                              	jne 0x1a28e <function_1a28e>
0x1a255:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1a259:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1a25d:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1a261:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1a265:    83 c4 4c                           	add esp, 0x4c
0x1a268:    c3                                 	ret 
; data inside code section at 0x1a269 -- 0x1a270
0x1a269:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1a270 at 0x1a270 -- 0x1a282
0x1a270:    85 c9                              	test ecx, ecx
0x1a272:    74 b0                              	je 0x1a224 <function_1a224>
0x1a274:    c1 e1 02                           	shl ecx, 2
0x1a277:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1a27b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a27f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1a282 -- 0x1a283
0x1a282:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1a283 -- 0x1a284
; data inside code section at 0x1a284 -- 0x1a287
0x1a284:    ff ff ff                                           |...             |
; function: function_1a287 at 0x1a287 -- 0x1a289
0x1a287:    eb 9b                              	jmp 0x1a224 <function_1a224>
; function: function_1a289 at 0x1a289 -- 0x1a28a
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1a28a -- 0x1a28b
; data inside code section at 0x1a28b -- 0x1a28e
0x1a28b:    ff ff ff                                           |...             |
; function: function_1a28e at 0x1a28e -- 0x1a290
0x1a28e:    66 90                              	nop 
; data inside code section at 0x1a290 -- 0x1a291
0x1a290:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1a291 -- 0x1a292
; data inside code section at 0x1a292 -- 0x1a295
0x1a292:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISsSaISsEE16_M_push_back_auxERKSs
; function: _ZNSt5dequeISsSaISsEE16_M_push_back_auxERKSs at 0x1a2a0 -- 0x1a2de
0x1a2a0:    83 ec 2c                           	sub esp, 0x2c
0x1a2a3:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x1a2a7:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1a2ab:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x1a2af:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a2b5:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1a2b9:    31 c0                              	xor eax, eax
0x1a2bb:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x1a2bf:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x1a2c3:    8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0x1a2c6:    89 f0                              	mov eax, esi
0x1a2c8:    2b 03                              	sub eax, dword ptr [ebx]
0x1a2ca:    c1 f8 02                           	sar eax, 2
0x1a2cd:    f7 d8                              	neg eax
0x1a2cf:    03 43 04                           	add eax, dword ptr [ebx + 4]
0x1a2d2:    83 f8 01                           	cmp eax, 1
0x1a2d5:    76 61                              	jbe 0x1a338 <function_1a338>
0x1a2d7:    c7 04 24 00 02 00 00               	mov dword ptr [esp], 0x200
; data inside code section at 0x1a2de -- 0x1a2df
0x1a2de:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1a2df -- 0x1a2e0
; data inside code section at 0x1a2e0 -- 0x1a2f5
0x1a2e0:    ff ff ff 89 46 04 8b 43  18 85 c0 74 0c 89 7c 24   |....F..C...t..|$|
0x1a2f0:    04 89 04 24 e8                                     |...$.           |
; dynamically linked function: _ZNSsC1ERKSs at 0x1a2f5 -- 0x1a2f6
; data inside code section at 0x1a2f6 -- 0x1a2f8
0x1a2f6:    ff ff                                              |..              |
; function: function_1a2f8 at 0x1a2f8 -- 0x1a331
0x1a2f8:    ff 8b 43 24 8d 50                  	dec dword ptr [ebx + 0x508d2443]
0x1a2fe:    04 89                              	add al, 0x89
0x1a300:    53                                 	push ebx
0x1a301:    24 8b                              	and al, 0x8b
0x1a303:    40                                 	inc eax
0x1a304:    04 8d                              	add al, 0x8d
0x1a306:    90                                 	nop 
0x1a307:    00 02                              	add byte ptr [edx], al
0x1a309:    00 00                              	add byte ptr [eax], al
0x1a30b:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1a30e:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1a311:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1a315:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1a31c:    89 53 20                           	mov dword ptr [ebx + 0x20], edx
0x1a31f:    75 34                              	jne 0x1a355 <function_1a355>
0x1a321:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x1a325:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x1a329:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1a32d:    83 c4 2c                           	add esp, 0x2c
0x1a330:    c3                                 	ret 
; data inside code section at 0x1a331 -- 0x1a338
0x1a331:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1a338 at 0x1a338 -- 0x1a355
0x1a338:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1a340:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x1a348:    89 1c 24                           	mov dword ptr [esp], ebx
0x1a34b:    e8 50 a0 01 00                     	call 0x343a0 <unknown_343a0>
0x1a350:    8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0x1a353:    eb 82                              	jmp 0x1a2d7
; function: function_1a355 at 0x1a355 -- 0x1a356
; dynamically linked function: __stack_chk_fail at 0x1a356 -- 0x1a357
; data inside code section at 0x1a357 -- 0x1a35e
0x1a357:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1a35e -- 0x1a35f
; data inside code section at 0x1a35f -- 0x1a36c
0x1a35f:    ff ff ff 8b 43 24 8b 40  04 89 04 24 e8            |....C$.@...$.   |
; dynamically linked function: _ZdlPv at 0x1a36c -- 0x1a36d
; data inside code section at 0x1a36d -- 0x1a371
0x1a36d:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1a371 -- 0x1a372
; data inside code section at 0x1a372 -- 0x1a376
0x1a372:    ff ff ff 89                                        |....            |
; function: function_1a376 at 0x1a376 -- 0x1a377
0x1a376:    c3                                 	ret 
; data inside code section at 0x1a377 -- 0x1a378
0x1a377:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1a378 -- 0x1a379
; data inside code section at 0x1a379 -- 0x1a380
0x1a379:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1a380 -- 0x1a381
; data inside code section at 0x1a381 -- 0x1a384
0x1a381:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_ at 0x1a390 -- 0x1a3e2
0x1a390:    83 ec 4c                           	sub esp, 0x4c
0x1a393:    ba 01 00 00 00                     	mov edx, 1
0x1a398:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a39e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1a3a2:    31 c0                              	xor eax, eax
0x1a3a4:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x1a3a8:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1a3ac:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1a3b0:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1a3b4:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x1a3b8:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1a3bc:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1a3c0:    85 c0                              	test eax, eax
0x1a3c2:    8d 4e 04                           	lea ecx, [esi + 4]
0x1a3c5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1a3c9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1a3cd:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1a3d1:    0f 84 89 00 00 00                  	je 0x1a460 <function_1a460>
0x1a3d7:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1a3db:    c7 04 24 28 00 00 00               	mov dword ptr [esp], 0x28
; data inside code section at 0x1a3e2 -- 0x1a3e3
0x1a3e2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1a3e3 -- 0x1a3e4
; data inside code section at 0x1a3e4 -- 0x1a42b
0x1a3e4:    ff ff ff 8b 54 24 18 83  f8 f0 74 23 8b 0b 89 48   |....T$....t#...H|
0x1a3f4:    10 8b 4b 04 89 48 14 8b  4b 08 89 48 18 8b 4b 0c   |..K..H..K..H..K.|
0x1a404:    89 48 1c 8b 4b 10 89 48  20 8b 4b 14 89 48 24 8b   |.H..K..H .K..H$.|
0x1a414:    4c 24 1c 89 44 24 04 89  14 24 89 44 24 18 89 4c   |L$..D$...$.D$..L|
0x1a424:    24 0c 89 6c 24 08 e8                               |$..l$..         |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x1a42b -- 0x1a42c
; data inside code section at 0x1a42c -- 0x1a42e
0x1a42c:    ff ff                                              |..              |
; function: function_1a42e at 0x1a42e -- 0x1a45e
0x1a42e:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x1a434:    46                                 	inc esi
0x1a435:    14 01                              	adc al, 1
0x1a437:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1a43b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1a442:    89 07                              	mov dword ptr [edi], eax
0x1a444:    89 f8                              	mov eax, edi
0x1a446:    75 3b                              	jne 0x1a483 <function_1a483>
0x1a448:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1a44c:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1a450:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1a454:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1a458:    83 c4 4c                           	add esp, 0x4c
0x1a45b:    c2 04 00                           	ret 4
; data inside code section at 0x1a45e -- 0x1a460
0x1a45e:    66 90                                              |f.              |
; function: function_1a460 at 0x1a460 -- 0x1a472
0x1a460:    39 cd                              	cmp ebp, ecx
0x1a462:    0f 84 6f ff ff ff                  	je 0x1a3d7
0x1a468:    8d 45 10                           	lea eax, [ebp + 0x10]
0x1a46b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a46f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a472 -- 0x1a473
0x1a472:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a473 -- 0x1a474
; data inside code section at 0x1a474 -- 0x1a477
0x1a474:    ff ff ff                                           |...             |
; function: function_1a477 at 0x1a477 -- 0x1a483
0x1a477:    31 d2                              	xor edx, edx
0x1a479:    84 c0                              	test al, al
0x1a47b:    0f 95 c2                           	setne dl
0x1a47e:    e9 54 ff ff ff                     	jmp 0x1a3d7
; function: function_1a483 at 0x1a483 -- 0x1a484
; dynamically linked function: __stack_chk_fail at 0x1a484 -- 0x1a485
; data inside code section at 0x1a485 -- 0x1a488
0x1a485:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_ at 0x1a490 -- 0x1a4d3
0x1a490:    55                                 	push ebp
0x1a491:    57                                 	push edi
0x1a492:    56                                 	push esi
0x1a493:    53                                 	push ebx
0x1a494:    83 ec 4c                           	sub esp, 0x4c
0x1a497:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x1a49b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a4a1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1a4a5:    31 c0                              	xor eax, eax
0x1a4a7:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1a4ab:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x1a4af:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x1a4b2:    85 db                              	test ebx, ebx
0x1a4b4:    75 13                              	jne 0x1a4c9 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_+0x39>
0x1a4b6:    e9 ac 00 00 00                     	jmp 0x1a567 <function_1a567>
; data inside code section at 0x1a4bb -- 0x1a4c0
0x1a4bb:    90 8d 74 26 00                                     |..t&.           |
0x1a4c0:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1a4c3:    85 d2                              	test edx, edx
0x1a4c5:    74 1c                              	je 0x1a4e3 <function_1a4e3>
0x1a4c7:    89 d3                              	mov ebx, edx
0x1a4c9:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1a4cc:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a4d0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1a4d3 -- 0x1a4d4
0x1a4d3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a4d4 -- 0x1a4d5
; data inside code section at 0x1a4d5 -- 0x1a4e3
0x1a4d5:    ff ff ff 84 c0 75 e4 8b  53 0c 85 d2 75 e4         |.....u..S...u.  |
; function: function_1a4e3 at 0x1a4e3 -- 0x1a4e7
0x1a4e3:    84 c0                              	test al, al
0x1a4e5:    74 49                              	je 0x1a530
; function: function_1a4e7 at 0x1a4e7 -- 0x1a4ef
0x1a4e7:    3b 5d 0c                           	cmp ebx, dword ptr [ebp + 0xc]
0x1a4ea:    74 4c                              	je 0x1a538 <function_1a538>
0x1a4ec:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a4ef -- 0x1a4f0
0x1a4ef:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x1a4f0 -- 0x1a4f1
; data inside code section at 0x1a4f1 -- 0x1a4f5
0x1a4f1:    ff ff ff 89                                        |....            |
; function: function_1a4f5 at 0x1a4f5 -- 0x1a4f8
0x1a4f5:    c2 8d 42                           	ret 0x428d
; data inside code section at 0x1a4f8 -- 0x1a505
0x1a4f8:    10 89 54 24 28 89 74 24  04 89 04 24 e8            |..T$(.t$...$.   |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a505 -- 0x1a506
; data inside code section at 0x1a506 -- 0x1a517
0x1a506:    ff ff ff 8b 54 24 28 84  c0 75 27 89 17 c6 47 04   |....T$(..u'...G.|
0x1a516:    00                                                 |.               |
; function: function_1a517 at 0x1a517 -- 0x1a530
0x1a517:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1a51b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1a522:    89 f8                              	mov eax, edi
0x1a524:    75 49                              	jne 0x1a56f <function_1a56f>
0x1a526:    83 c4 4c                           	add esp, 0x4c
0x1a529:    5b                                 	pop ebx
0x1a52a:    5e                                 	pop esi
0x1a52b:    5f                                 	pop edi
0x1a52c:    5d                                 	pop ebp
0x1a52d:    c2 04 00                           	ret 4
; function: function_1a530 at 0x1a530 -- 0x1a534
0x1a530:    89 da                              	mov edx, ebx
0x1a532:    eb c2                              	jmp 0x1a4f6
; data inside code section at 0x1a534 -- 0x1a538
0x1a534:    8d 74 26 00                                        |.t&.            |
; function: function_1a538 at 0x1a538 -- 0x1a567
0x1a538:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1a53c:    89 04 24                           	mov dword ptr [esp], eax
0x1a53f:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x1a543:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x1a547:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1a54f:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1a553:    e8 c8 a2 01 00                     	call 0x34820 <unknown_34820>
0x1a558:    83 ec 04                           	sub esp, 4
0x1a55b:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1a55f:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x1a563:    89 07                              	mov dword ptr [edi], eax
0x1a565:    eb b0                              	jmp 0x1a517 <function_1a517>
; function: function_1a567 at 0x1a567 -- 0x1a56f
0x1a567:    8d 5d 04                           	lea ebx, [ebp + 4]
0x1a56a:    e9 78 ff ff ff                     	jmp 0x1a4e7 <function_1a4e7>
; function: function_1a56f at 0x1a56f -- 0x1a570
; dynamically linked function: __stack_chk_fail at 0x1a570 -- 0x1a571
; data inside code section at 0x1a571 -- 0x1a574
0x1a571:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_16LocalServiceInfoESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS4_ERKS4_ at 0x1a580 -- 0x1a5c8
0x1a580:    83 ec 5c                           	sub esp, 0x5c
0x1a583:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1a587:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x1a58b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x1a58f:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x1a593:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a599:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1a59d:    31 c0                              	xor eax, eax
0x1a59f:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x1a5a3:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1a5a7:    8d 47 04                           	lea eax, [edi + 4]
0x1a5aa:    39 c3                              	cmp ebx, eax
0x1a5ac:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1a5b0:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x1a5b4:    0f 84 16 01 00 00                  	je 0x1a6d0 <function_1a6d0>
0x1a5ba:    8d 53 10                           	lea edx, [ebx + 0x10]
0x1a5bd:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1a5c1:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1a5c5:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1a5c8 -- 0x1a5c9
0x1a5c8:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a5c9 -- 0x1a5ca
; data inside code section at 0x1a5ca -- 0x1a5e8
0x1a5ca:    ff ff ff 8b 54 24 24 84  c0 0f 84 87 00 00 00 8b   |....T$$.........|
0x1a5da:    47 0c 39 d8 0f 84 6c 01  00 00 89 1c 24 e8         |G.9...l.....$.  |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x1a5e8 -- 0x1a5e9
; data inside code section at 0x1a5e9 -- 0x1a5eb
0x1a5e9:    ff ff                                              |..              |
; function: function_1a5eb at 0x1a5eb -- 0x1a5f4
0x1a5eb:    ff 89 6c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb94]
0x1a5f1:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x1a5f4 -- 0x1a5fd
0x1a5f4:    10 89 54 24 24 89 04 24  e8                        |..T$$..$.       |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a5fd -- 0x1a5fe
; data inside code section at 0x1a5fe -- 0x1a600
0x1a5fe:    ff ff                                              |..              |
; function: function_1a600 at 0x1a600 -- 0x1a60c
0x1a600:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x1a606:    c0 0f 84                           	ror byte ptr [edi], 0x84
0x1a609:    ca 00 00                           	retf 0
; data inside code section at 0x1a60c -- 0x1a633
0x1a60c:    00 8b 42 0c 89 6c 24 10  85 c0 0f 84 14 01 00 00   |..B..l$.........|
0x1a61c:    89 5c 24 0c 89 5c 24 08  89 7c 24 04 89 34 24 e8   |.\$..\$..|$..4$.|
0x1a62c:    e0 a2 01 00 83 ec 04                               |.......         |
; function: function_1a633 at 0x1a633 -- 0x1a65c
0x1a633:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1a637:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1a63e:    89 f0                              	mov eax, esi
0x1a640:    0f 85 3a 01 00 00                  	jne 0x1a780 <function_1a780>
0x1a646:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x1a64a:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1a64e:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1a652:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1a656:    83 c4 5c                           	add esp, 0x5c
0x1a659:    c2 04 00                           	ret 4
; data inside code section at 0x1a65c -- 0x1a668
0x1a65c:    8d 74 26 00 89 6c 24 04  89 14 24 e8               |.t&..l$...$.    |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a668 -- 0x1a669
; data inside code section at 0x1a669 -- 0x1a683
0x1a669:    ff ff ff 84 c0 0f 84 8c  00 00 00 8b 47 10 39 d8   |............G.9.|
0x1a679:    0f 84 f7 00 00 00 89 1c  24 e8                     |........$.      |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1a683 -- 0x1a684
; data inside code section at 0x1a684 -- 0x1a689
0x1a684:    ff ff ff 89 2c                                     |....,           |
; function: function_1a689 at 0x1a689 -- 0x1a68e
0x1a689:    24 89                              	and al, 0x89
0x1a68b:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x1a68e -- 0x1a698
0x1a68e:    10 89 54 24 24 89 44 24  04 e8                     |..T$$.D$..      |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a698 -- 0x1a699
; data inside code section at 0x1a699 -- 0x1a69b
0x1a699:    ff ff                                              |..              |
; function: function_1a69b at 0x1a69b -- 0x1a6cf
0x1a69b:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x1a6a1:    c0 74 33 8b 43                     	sal byte ptr [ebx + esi - 0x75], 0x43
0x1a6a6:    0c 89                              	or al, 0x89
0x1a6a8:    6c                                 	insb byte ptr es:[edi], dx
0x1a6a9:    24 10                              	and al, 0x10
0x1a6ab:    85 c0                              	test eax, eax
0x1a6ad:    0f 84 bd 00 00 00                  	je 0x1a770 <function_1a770>
0x1a6b3:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1a6b7:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1a6bb:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1a6bf:    89 34 24                           	mov dword ptr [esp], esi
0x1a6c2:    e8 49 a2 01 00                     	call 0x34910 <unknown_34910>
0x1a6c7:    83 ec 04                           	sub esp, 4
0x1a6ca:    e9 64 ff ff ff                     	jmp 0x1a633 <function_1a633>
; data inside code section at 0x1a6cf -- 0x1a6d0
0x1a6cf:    90                                                 |.               |
; function: function_1a6d0 at 0x1a6d0 -- 0x1a715
0x1a6d0:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x1a6d3:    85 c0                              	test eax, eax
0x1a6d5:    75 31                              	jne 0x1a708 <function_1a6d0+0x38>
0x1a6d7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x1a6db:    89 04 24                           	mov dword ptr [esp], eax
0x1a6de:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1a6e2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1a6e6:    e8 25 a3 01 00                     	call 0x34a10 <unknown_34a10>
0x1a6eb:    83 ec 04                           	sub esp, 4
0x1a6ee:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1a6f2:    89 06                              	mov dword ptr [esi], eax
0x1a6f4:    e9 3a ff ff ff                     	jmp 0x1a633 <function_1a633>
; data inside code section at 0x1a6f9 -- 0x1a700
0x1a6f9:    8d b4 26 00 00 00 00                               |..&....         |
0x1a700:    89 1e                              	mov dword ptr [esi], ebx
0x1a702:    e9 2c ff ff ff                     	jmp 0x1a633 <function_1a633>
; data inside code section at 0x1a707 -- 0x1a708
0x1a707:    90                                                 |.               |
0x1a708:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1a70c:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1a70f:    83 c0 10                           	add eax, 0x10
0x1a712:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1a715 -- 0x1a716
0x1a715:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a716 -- 0x1a717
; data inside code section at 0x1a717 -- 0x1a719
0x1a717:    ff ff                                              |..              |
; function: function_1a719 at 0x1a719 -- 0x1a72b
0x1a719:    ff 84 c0 74 b9 89 6c               	inc dword ptr [eax + eax*8 + 0x6c89b974]
0x1a720:    24 10                              	and al, 0x10
0x1a722:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1a725:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1a729:    eb 09                              	jmp 0x1a734 <function_1a734>
; data inside code section at 0x1a72b -- 0x1a734
0x1a72b:    90 8d 74 26 00 89 54 24  0c                        |..t&..T$.       |
; function: function_1a734 at 0x1a734 -- 0x1a750
0x1a734:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1a73c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1a740:    89 34 24                           	mov dword ptr [esp], esi
0x1a743:    e8 c8 a1 01 00                     	call 0x34910 <unknown_34910>
0x1a748:    83 ec 04                           	sub esp, 4
0x1a74b:    e9 e3 fe ff ff                     	jmp 0x1a633 <function_1a633>
; function: function_1a750 at 0x1a750 -- 0x1a770
0x1a750:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x1a754:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1a758:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1a75c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1a760:    89 34 24                           	mov dword ptr [esp], esi
0x1a763:    e8 a8 a1 01 00                     	call 0x34910 <unknown_34910>
0x1a768:    83 ec 04                           	sub esp, 4
0x1a76b:    e9 c3 fe ff ff                     	jmp 0x1a633 <function_1a633>
; function: function_1a770 at 0x1a770 -- 0x1a776
0x1a770:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x1a774:    eb be                              	jmp 0x1a734 <function_1a734>
; function: function_1a776 at 0x1a776 -- 0x1a780
0x1a776:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x1a77a:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1a77e:    eb b4                              	jmp 0x1a734 <function_1a734>
; function: function_1a780 at 0x1a780 -- 0x1a781
; dynamically linked function: __stack_chk_fail at 0x1a781 -- 0x1a782
; data inside code section at 0x1a782 -- 0x1a785
0x1a782:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_
; function: _ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_ at 0x1a790 -- 0x1a7d3
0x1a790:    55                                 	push ebp
0x1a791:    57                                 	push edi
0x1a792:    56                                 	push esi
0x1a793:    53                                 	push ebx
0x1a794:    83 ec 4c                           	sub esp, 0x4c
0x1a797:    8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x1a79b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a7a1:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1a7a5:    31 c0                              	xor eax, eax
0x1a7a7:    8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x1a7ab:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x1a7ae:    8d 55 04                           	lea edx, [ebp + 4]
0x1a7b1:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1a7b5:    85 db                              	test ebx, ebx
0x1a7b7:    74 5b                              	je 0x1a814 <function_1a814>
0x1a7b9:    89 d7                              	mov edi, edx
0x1a7bb:    eb 0c                              	jmp 0x1a7c9 <_ZNSt3mapI8CNetAddr16LocalServiceInfoSt4lessIS0_ESaISt4pairIKS0_S1_EEEixERS5_+0x39>
; data inside code section at 0x1a7bd -- 0x1a7c0
0x1a7bd:    8d 76 00                                           |.v.             |
0x1a7c0:    89 df                              	mov edi, ebx
0x1a7c2:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x1a7c5:    85 db                              	test ebx, ebx
0x1a7c7:    74 1a                              	je 0x1a7e3 <function_1a7e3>
0x1a7c9:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1a7cc:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1a7d0:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1a7d3 -- 0x1a7d4
0x1a7d3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a7d4 -- 0x1a7d5
; data inside code section at 0x1a7d5 -- 0x1a7e3
0x1a7d5:    ff ff ff 84 c0 74 e4 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_1a7e3 at 0x1a7e3 -- 0x1a7f3
0x1a7e3:    39 7c 24 18                        	cmp dword ptr [esp + 0x18], edi
0x1a7e7:    74 2f                              	je 0x1a818
0x1a7e9:    8d 47 10                           	lea eax, [edi + 0x10]
0x1a7ec:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a7f0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1a7f3 -- 0x1a7f4
0x1a7f3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a7f4 -- 0x1a7f5
; data inside code section at 0x1a7f5 -- 0x1a7fc
0x1a7f5:    ff ff ff 84 c0 75 1c                               |.....u.         |
; function: function_1a7fc at 0x1a7fc -- 0x1a814
0x1a7fc:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1a800:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1a807:    8d 47 20                           	lea eax, [edi + 0x20]
0x1a80a:    75 5c                              	jne 0x1a868 <function_1a868>
0x1a80c:    83 c4 4c                           	add esp, 0x4c
0x1a80f:    5b                                 	pop ebx
0x1a810:    5e                                 	pop esi
0x1a811:    5f                                 	pop edi
0x1a812:    5d                                 	pop ebp
0x1a813:    c3                                 	ret 
; function: function_1a814 at 0x1a814 -- 0x1a868
0x1a814:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x1a818:    8b 06                              	mov eax, dword ptr [esi]
0x1a81a:    8d 54 24 24                        	lea edx, [esp + 0x24]
0x1a81e:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1a826:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x1a82e:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1a832:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1a835:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1a839:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1a83c:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1a840:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1a843:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1a847:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1a84b:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1a84f:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1a853:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1a857:    89 04 24                           	mov dword ptr [esp], eax
0x1a85a:    e8 b1 a4 01 00                     	call 0x34d10 <unknown_34d10>
0x1a85f:    83 ec 04                           	sub esp, 4
0x1a862:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1a866:    eb 94                              	jmp 0x1a7fc <function_1a7fc>
; function: function_1a868 at 0x1a868 -- 0x1a869
; dynamically linked function: __stack_chk_fail at 0x1a869 -- 0x1a86a
; data inside code section at 0x1a86a -- 0x1a86d
0x1a86a:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE10_M_insert_EPKSt18_Rb_tree_node_baseSC_RKS3_ at 0x1a870 -- 0x1a8c2
0x1a870:    83 ec 4c                           	sub esp, 0x4c
0x1a873:    ba 01 00 00 00                     	mov edx, 1
0x1a878:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a87e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1a882:    31 c0                              	xor eax, eax
0x1a884:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x1a888:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1a88c:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1a890:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1a894:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x1a898:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1a89c:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1a8a0:    85 c0                              	test eax, eax
0x1a8a2:    8d 4e 04                           	lea ecx, [esi + 4]
0x1a8a5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1a8a9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1a8ad:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1a8b1:    0f 84 89 00 00 00                  	je 0x1a940 <function_1a940>
0x1a8b7:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1a8bb:    c7 04 24 28 00 00 00               	mov dword ptr [esp], 0x28
; data inside code section at 0x1a8c2 -- 0x1a8c3
0x1a8c2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1a8c3 -- 0x1a8c4
; data inside code section at 0x1a8c4 -- 0x1a90b
0x1a8c4:    ff ff ff 8b 54 24 18 83  f8 f0 74 23 8b 0b 89 48   |....T$....t#...H|
0x1a8d4:    10 8b 4b 04 89 48 14 8b  4b 08 89 48 18 8b 4b 0c   |..K..H..K..H..K.|
0x1a8e4:    89 48 1c 8b 4b 10 89 48  20 8b 4b 14 89 48 24 8b   |.H..K..H .K..H$.|
0x1a8f4:    4c 24 1c 89 44 24 04 89  14 24 89 44 24 18 89 4c   |L$..D$...$.D$..L|
0x1a904:    24 0c 89 6c 24 08 e8                               |$..l$..         |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x1a90b -- 0x1a90c
; data inside code section at 0x1a90c -- 0x1a90e
0x1a90c:    ff ff                                              |..              |
; function: function_1a90e at 0x1a90e -- 0x1a93e
0x1a90e:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x1a914:    46                                 	inc esi
0x1a915:    14 01                              	adc al, 1
0x1a917:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1a91b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1a922:    89 07                              	mov dword ptr [edi], eax
0x1a924:    89 f8                              	mov eax, edi
0x1a926:    75 3b                              	jne 0x1a963 <function_1a963>
0x1a928:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1a92c:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1a930:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1a934:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1a938:    83 c4 4c                           	add esp, 0x4c
0x1a93b:    c2 04 00                           	ret 4
; data inside code section at 0x1a93e -- 0x1a940
0x1a93e:    66 90                                              |f.              |
; function: function_1a940 at 0x1a940 -- 0x1a952
0x1a940:    39 cd                              	cmp ebp, ecx
0x1a942:    0f 84 6f ff ff ff                  	je 0x1a8b7
0x1a948:    8d 45 10                           	lea eax, [ebp + 0x10]
0x1a94b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a94f:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a952 -- 0x1a953
0x1a952:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a953 -- 0x1a954
; data inside code section at 0x1a954 -- 0x1a957
0x1a954:    ff ff ff                                           |...             |
; function: function_1a957 at 0x1a957 -- 0x1a963
0x1a957:    31 d2                              	xor edx, edx
0x1a959:    84 c0                              	test al, al
0x1a95b:    0f 95 c2                           	setne dl
0x1a95e:    e9 54 ff ff ff                     	jmp 0x1a8b7
; function: function_1a963 at 0x1a963 -- 0x1a964
; dynamically linked function: __stack_chk_fail at 0x1a964 -- 0x1a965
; data inside code section at 0x1a965 -- 0x1a968
0x1a965:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_ at 0x1a970 -- 0x1a9b3
0x1a970:    55                                 	push ebp
0x1a971:    57                                 	push edi
0x1a972:    56                                 	push esi
0x1a973:    53                                 	push ebx
0x1a974:    83 ec 4c                           	sub esp, 0x4c
0x1a977:    8b 6c 24 64                        	mov ebp, dword ptr [esp + 0x64]
0x1a97b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1a981:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1a985:    31 c0                              	xor eax, eax
0x1a987:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1a98b:    8b 74 24 68                        	mov esi, dword ptr [esp + 0x68]
0x1a98f:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x1a992:    85 db                              	test ebx, ebx
0x1a994:    75 13                              	jne 0x1a9a9 <_ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE16_M_insert_uniqueERKS3_+0x39>
0x1a996:    e9 ac 00 00 00                     	jmp 0x1aa47 <function_1aa47>
; data inside code section at 0x1a99b -- 0x1a9a0
0x1a99b:    90 8d 74 26 00                                     |..t&.           |
0x1a9a0:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1a9a3:    85 d2                              	test edx, edx
0x1a9a5:    74 1c                              	je 0x1a9c3 <function_1a9c3>
0x1a9a7:    89 d3                              	mov ebx, edx
0x1a9a9:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1a9ac:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1a9b0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1a9b3 -- 0x1a9b4
0x1a9b3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a9b4 -- 0x1a9b5
; data inside code section at 0x1a9b5 -- 0x1a9c3
0x1a9b5:    ff ff ff 84 c0 75 e4 8b  53 0c 85 d2 75 e4         |.....u..S...u.  |
; function: function_1a9c3 at 0x1a9c3 -- 0x1a9c7
0x1a9c3:    84 c0                              	test al, al
0x1a9c5:    74 49                              	je 0x1aa10
; function: function_1a9c7 at 0x1a9c7 -- 0x1a9cf
0x1a9c7:    3b 5d 0c                           	cmp ebx, dword ptr [ebp + 0xc]
0x1a9ca:    74 4c                              	je 0x1aa18 <function_1aa18>
0x1a9cc:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1a9cf -- 0x1a9d0
0x1a9cf:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x1a9d0 -- 0x1a9d1
; data inside code section at 0x1a9d1 -- 0x1a9d5
0x1a9d1:    ff ff ff 89                                        |....            |
; function: function_1a9d5 at 0x1a9d5 -- 0x1a9d8
0x1a9d5:    c2 8d 42                           	ret 0x428d
; data inside code section at 0x1a9d8 -- 0x1a9e5
0x1a9d8:    10 89 54 24 28 89 74 24  04 89 04 24 e8            |..T$(.t$...$.   |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1a9e5 -- 0x1a9e6
; data inside code section at 0x1a9e6 -- 0x1a9f7
0x1a9e6:    ff ff ff 8b 54 24 28 84  c0 75 27 89 17 c6 47 04   |....T$(..u'...G.|
0x1a9f6:    00                                                 |.               |
; function: function_1a9f7 at 0x1a9f7 -- 0x1aa10
0x1a9f7:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1a9fb:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1aa02:    89 f8                              	mov eax, edi
0x1aa04:    75 49                              	jne 0x1aa4f <function_1aa4f>
0x1aa06:    83 c4 4c                           	add esp, 0x4c
0x1aa09:    5b                                 	pop ebx
0x1aa0a:    5e                                 	pop esi
0x1aa0b:    5f                                 	pop edi
0x1aa0c:    5d                                 	pop ebp
0x1aa0d:    c2 04 00                           	ret 4
; function: function_1aa10 at 0x1aa10 -- 0x1aa14
0x1aa10:    89 da                              	mov edx, ebx
0x1aa12:    eb c2                              	jmp 0x1a9d6
; data inside code section at 0x1aa14 -- 0x1aa18
0x1aa14:    8d 74 26 00                                        |.t&.            |
; function: function_1aa18 at 0x1aa18 -- 0x1aa47
0x1aa18:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1aa1c:    89 04 24                           	mov dword ptr [esp], eax
0x1aa1f:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x1aa23:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x1aa27:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1aa2f:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1aa33:    e8 a8 a7 01 00                     	call 0x351e0 <unknown_351e0>
0x1aa38:    83 ec 04                           	sub esp, 4
0x1aa3b:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1aa3f:    c6 47 04 01                        	mov byte ptr [edi + 4], 1
0x1aa43:    89 07                              	mov dword ptr [edi], eax
0x1aa45:    eb b0                              	jmp 0x1a9f7 <function_1a9f7>
; function: function_1aa47 at 0x1aa47 -- 0x1aa4f
0x1aa47:    8d 5d 04                           	lea ebx, [ebp + 4]
0x1aa4a:    e9 78 ff ff ff                     	jmp 0x1a9c7 <function_1a9c7>
; function: function_1aa4f at 0x1aa4f -- 0x1aa50
; dynamically linked function: __stack_chk_fail at 0x1aa50 -- 0x1aa51
; data inside code section at 0x1aa51 -- 0x1aa54
0x1aa51:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_
; function: _ZNSt8_Rb_treeI8CNetAddrSt4pairIKS0_xESt10_Select1stIS3_ESt4lessIS0_ESaIS3_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS3_ERKS3_ at 0x1aa60 -- 0x1aaa8
0x1aa60:    83 ec 5c                           	sub esp, 0x5c
0x1aa63:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1aa67:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x1aa6b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x1aa6f:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x1aa73:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1aa79:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1aa7d:    31 c0                              	xor eax, eax
0x1aa7f:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x1aa83:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1aa87:    8d 47 04                           	lea eax, [edi + 4]
0x1aa8a:    39 c3                              	cmp ebx, eax
0x1aa8c:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1aa90:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x1aa94:    0f 84 16 01 00 00                  	je 0x1abb0 <function_1abb0>
0x1aa9a:    8d 53 10                           	lea edx, [ebx + 0x10]
0x1aa9d:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1aaa1:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1aaa5:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1aaa8 -- 0x1aaa9
0x1aaa8:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1aaa9 -- 0x1aaaa
; data inside code section at 0x1aaaa -- 0x1aac8
0x1aaaa:    ff ff ff 8b 54 24 24 84  c0 0f 84 87 00 00 00 8b   |....T$$.........|
0x1aaba:    47 0c 39 d8 0f 84 6c 01  00 00 89 1c 24 e8         |G.9...l.....$.  |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x1aac8 -- 0x1aac9
; data inside code section at 0x1aac9 -- 0x1aacb
0x1aac9:    ff ff                                              |..              |
; function: function_1aacb at 0x1aacb -- 0x1aad4
0x1aacb:    ff 89 6c 24 04 89                  	dec dword ptr [ecx - 0x76fbdb94]
0x1aad1:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x1aad4 -- 0x1aadd
0x1aad4:    10 89 54 24 24 89 04 24  e8                        |..T$$..$.       |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1aadd -- 0x1aade
; data inside code section at 0x1aade -- 0x1aae0
0x1aade:    ff ff                                              |..              |
; function: function_1aae0 at 0x1aae0 -- 0x1aaec
0x1aae0:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x1aae6:    c0 0f 84                           	ror byte ptr [edi], 0x84
0x1aae9:    ca 00 00                           	retf 0
; data inside code section at 0x1aaec -- 0x1ab13
0x1aaec:    00 8b 42 0c 89 6c 24 10  85 c0 0f 84 14 01 00 00   |..B..l$.........|
0x1aafc:    89 5c 24 0c 89 5c 24 08  89 7c 24 04 89 34 24 e8   |.\$..\$..|$..4$.|
0x1ab0c:    c0 a7 01 00 83 ec 04                               |.......         |
; function: function_1ab13 at 0x1ab13 -- 0x1ab3c
0x1ab13:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1ab17:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1ab1e:    89 f0                              	mov eax, esi
0x1ab20:    0f 85 3a 01 00 00                  	jne 0x1ac60 <function_1ac60>
0x1ab26:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x1ab2a:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1ab2e:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1ab32:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1ab36:    83 c4 5c                           	add esp, 0x5c
0x1ab39:    c2 04 00                           	ret 4
; data inside code section at 0x1ab3c -- 0x1ab48
0x1ab3c:    8d 74 26 00 89 6c 24 04  89 14 24 e8               |.t&..l$...$.    |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1ab48 -- 0x1ab49
; data inside code section at 0x1ab49 -- 0x1ab63
0x1ab49:    ff ff ff 84 c0 0f 84 8c  00 00 00 8b 47 10 39 d8   |............G.9.|
0x1ab59:    0f 84 f7 00 00 00 89 1c  24 e8                     |........$.      |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1ab63 -- 0x1ab64
; data inside code section at 0x1ab64 -- 0x1ab69
0x1ab64:    ff ff ff 89 2c                                     |....,           |
; function: function_1ab69 at 0x1ab69 -- 0x1ab6e
0x1ab69:    24 89                              	and al, 0x89
0x1ab6b:    c2 8d 40                           	ret 0x408d
; data inside code section at 0x1ab6e -- 0x1ab78
0x1ab6e:    10 89 54 24 24 89 44 24  04 e8                     |..T$$.D$..      |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1ab78 -- 0x1ab79
; data inside code section at 0x1ab79 -- 0x1ab7b
0x1ab79:    ff ff                                              |..              |
; function: function_1ab7b at 0x1ab7b -- 0x1abaf
0x1ab7b:    ff 8b 54 24 24 84                  	dec dword ptr [ebx - 0x7bdbdbac]
0x1ab81:    c0 74 33 8b 43                     	sal byte ptr [ebx + esi - 0x75], 0x43
0x1ab86:    0c 89                              	or al, 0x89
0x1ab88:    6c                                 	insb byte ptr es:[edi], dx
0x1ab89:    24 10                              	and al, 0x10
0x1ab8b:    85 c0                              	test eax, eax
0x1ab8d:    0f 84 bd 00 00 00                  	je 0x1ac50 <function_1ac50>
0x1ab93:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1ab97:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1ab9b:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1ab9f:    89 34 24                           	mov dword ptr [esp], esi
0x1aba2:    e8 29 a7 01 00                     	call 0x352d0 <unknown_352d0>
0x1aba7:    83 ec 04                           	sub esp, 4
0x1abaa:    e9 64 ff ff ff                     	jmp 0x1ab13 <function_1ab13>
; data inside code section at 0x1abaf -- 0x1abb0
0x1abaf:    90                                                 |.               |
; function: function_1abb0 at 0x1abb0 -- 0x1abf5
0x1abb0:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x1abb3:    85 c0                              	test eax, eax
0x1abb5:    75 31                              	jne 0x1abe8 <function_1abb0+0x38>
0x1abb7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x1abbb:    89 04 24                           	mov dword ptr [esp], eax
0x1abbe:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1abc2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1abc6:    e8 05 a8 01 00                     	call 0x353d0 <unknown_353d0>
0x1abcb:    83 ec 04                           	sub esp, 4
0x1abce:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1abd2:    89 06                              	mov dword ptr [esi], eax
0x1abd4:    e9 3a ff ff ff                     	jmp 0x1ab13 <function_1ab13>
; data inside code section at 0x1abd9 -- 0x1abe0
0x1abd9:    8d b4 26 00 00 00 00                               |..&....         |
0x1abe0:    89 1e                              	mov dword ptr [esi], ebx
0x1abe2:    e9 2c ff ff ff                     	jmp 0x1ab13 <function_1ab13>
; data inside code section at 0x1abe7 -- 0x1abe8
0x1abe7:    90                                                 |.               |
0x1abe8:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1abec:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1abef:    83 c0 10                           	add eax, 0x10
0x1abf2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1abf5 -- 0x1abf6
0x1abf5:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1abf6 -- 0x1abf7
; data inside code section at 0x1abf7 -- 0x1abf9
0x1abf7:    ff ff                                              |..              |
; function: function_1abf9 at 0x1abf9 -- 0x1ac0b
0x1abf9:    ff 84 c0 74 b9 89 6c               	inc dword ptr [eax + eax*8 + 0x6c89b974]
0x1ac00:    24 10                              	and al, 0x10
0x1ac02:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1ac05:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1ac09:    eb 09                              	jmp 0x1ac14 <function_1ac14>
; data inside code section at 0x1ac0b -- 0x1ac14
0x1ac0b:    90 8d 74 26 00 89 54 24  0c                        |..t&..T$.       |
; function: function_1ac14 at 0x1ac14 -- 0x1ac30
0x1ac14:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1ac1c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1ac20:    89 34 24                           	mov dword ptr [esp], esi
0x1ac23:    e8 a8 a6 01 00                     	call 0x352d0 <unknown_352d0>
0x1ac28:    83 ec 04                           	sub esp, 4
0x1ac2b:    e9 e3 fe ff ff                     	jmp 0x1ab13 <function_1ab13>
; function: function_1ac30 at 0x1ac30 -- 0x1ac50
0x1ac30:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x1ac34:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1ac38:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1ac3c:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1ac40:    89 34 24                           	mov dword ptr [esp], esi
0x1ac43:    e8 88 a6 01 00                     	call 0x352d0 <unknown_352d0>
0x1ac48:    83 ec 04                           	sub esp, 4
0x1ac4b:    e9 c3 fe ff ff                     	jmp 0x1ab13 <function_1ab13>
; function: function_1ac50 at 0x1ac50 -- 0x1ac56
0x1ac50:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x1ac54:    eb be                              	jmp 0x1ac14 <function_1ac14>
; function: function_1ac56 at 0x1ac56 -- 0x1ac60
0x1ac56:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x1ac5a:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1ac5e:    eb b4                              	jmp 0x1ac14 <function_1ac14>
; function: function_1ac60 at 0x1ac60 -- 0x1ac61
; dynamically linked function: __stack_chk_fail at 0x1ac61 -- 0x1ac62
; data inside code section at 0x1ac62 -- 0x1ac65
0x1ac62:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_
; function: _ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_ at 0x1ac70 -- 0x1acb3
0x1ac70:    55                                 	push ebp
0x1ac71:    57                                 	push edi
0x1ac72:    56                                 	push esi
0x1ac73:    53                                 	push ebx
0x1ac74:    83 ec 4c                           	sub esp, 0x4c
0x1ac77:    8b 6c 24 60                        	mov ebp, dword ptr [esp + 0x60]
0x1ac7b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ac81:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1ac85:    31 c0                              	xor eax, eax
0x1ac87:    8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x1ac8b:    8b 5d 08                           	mov ebx, dword ptr [ebp + 8]
0x1ac8e:    8d 55 04                           	lea edx, [ebp + 4]
0x1ac91:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1ac95:    85 db                              	test ebx, ebx
0x1ac97:    74 5b                              	je 0x1acf4 <function_1acf4>
0x1ac99:    89 d7                              	mov edi, edx
0x1ac9b:    eb 0c                              	jmp 0x1aca9 <_ZNSt3mapI8CNetAddrxSt4lessIS0_ESaISt4pairIKS0_xEEEixERS4_+0x39>
; data inside code section at 0x1ac9d -- 0x1aca0
0x1ac9d:    8d 76 00                                           |.v.             |
0x1aca0:    89 df                              	mov edi, ebx
0x1aca2:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x1aca5:    85 db                              	test ebx, ebx
0x1aca7:    74 1a                              	je 0x1acc3 <function_1acc3>
0x1aca9:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1acac:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1acb0:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1acb3 -- 0x1acb4
0x1acb3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1acb4 -- 0x1acb5
; data inside code section at 0x1acb5 -- 0x1acc3
0x1acb5:    ff ff ff 84 c0 74 e4 8b  5b 0c 85 db 75 e6         |.....t..[...u.  |
; function: function_1acc3 at 0x1acc3 -- 0x1acd3
0x1acc3:    39 7c 24 18                        	cmp dword ptr [esp + 0x18], edi
0x1acc7:    74 2f                              	je 0x1acf8
0x1acc9:    8d 47 10                           	lea eax, [edi + 0x10]
0x1accc:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1acd0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1acd3 -- 0x1acd4
0x1acd3:    e8                                                 |.               |
; dynamically linked function: _ZltRK8CNetAddrS1_ at 0x1acd4 -- 0x1acd5
; data inside code section at 0x1acd5 -- 0x1acdc
0x1acd5:    ff ff ff 84 c0 75 1c                               |.....u.         |
; function: function_1acdc at 0x1acdc -- 0x1acf4
0x1acdc:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1ace0:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1ace7:    8d 47 20                           	lea eax, [edi + 0x20]
0x1acea:    75 5c                              	jne 0x1ad48 <function_1ad48>
0x1acec:    83 c4 4c                           	add esp, 0x4c
0x1acef:    5b                                 	pop ebx
0x1acf0:    5e                                 	pop esi
0x1acf1:    5f                                 	pop edi
0x1acf2:    5d                                 	pop ebp
0x1acf3:    c3                                 	ret 
; function: function_1acf4 at 0x1acf4 -- 0x1ad48
0x1acf4:    8b 7c 24 18                        	mov edi, dword ptr [esp + 0x18]
0x1acf8:    8b 06                              	mov eax, dword ptr [esi]
0x1acfa:    8d 54 24 24                        	lea edx, [esp + 0x24]
0x1acfe:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1ad06:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x1ad0e:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1ad12:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1ad15:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1ad19:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1ad1c:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1ad20:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1ad23:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x1ad27:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x1ad2b:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1ad2f:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1ad33:    8d 44 24 1c                        	lea eax, [esp + 0x1c]
0x1ad37:    89 04 24                           	mov dword ptr [esp], eax
0x1ad3a:    e8 91 a9 01 00                     	call 0x356d0 <unknown_356d0>
0x1ad3f:    83 ec 04                           	sub esp, 4
0x1ad42:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1ad46:    eb 94                              	jmp 0x1acdc <function_1acdc>
; function: function_1ad48 at 0x1ad48 -- 0x1ad49
; dynamically linked function: __stack_chk_fail at 0x1ad49 -- 0x1ad4a
; data inside code section at 0x1ad4a -- 0x1ad4d
0x1ad4a:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeI11CNetMessageSaIS0_EE17_M_reallocate_mapEjb
; function: _ZNSt5dequeI11CNetMessageSaIS0_EE17_M_reallocate_mapEjb at 0x1ad50 -- 0x1ade6
0x1ad50:    83 ec 4c                           	sub esp, 0x4c
0x1ad53:    0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0x1ad58:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1ad5c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1ad60:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ad66:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1ad6a:    31 c0                              	xor eax, eax
0x1ad6c:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1ad70:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1ad74:    88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0x1ad78:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1ad7b:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1ad7e:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1ad82:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1ad86:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1ad89:    89 cf                              	mov edi, ecx
0x1ad8b:    29 c7                              	sub edi, eax
0x1ad8d:    c1 ff 02                           	sar edi, 2
0x1ad90:    83 c7 01                           	add edi, 1
0x1ad93:    8d 14 37                           	lea edx, [edi + esi]
0x1ad96:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1ad9a:    8d 0c 12                           	lea ecx, [edx + edx]
0x1ad9d:    39 cd                              	cmp ebp, ecx
0x1ad9f:    76 4f                              	jbe 0x1adf0 <function_1adf0>
0x1ada1:    29 d5                              	sub ebp, edx
0x1ada3:    31 d2                              	xor edx, edx
0x1ada5:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x1ada9:    c1 e6 02                           	shl esi, 2
0x1adac:    d1 ed                              	shr ebp, 1
0x1adae:    80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0x1adb3:    0f 45 d6                           	cmovne edx, esi
0x1adb6:    83 c1 04                           	add ecx, 4
0x1adb9:    8d 34 aa                           	lea esi, [edx + ebp*4]
0x1adbc:    29 c1                              	sub ecx, eax
0x1adbe:    03 33                              	add esi, dword ptr [ebx]
0x1adc0:    c1 f9 02                           	sar ecx, 2
0x1adc3:    39 f0                              	cmp eax, esi
0x1adc5:    0f 87 f5 00 00 00                  	ja 0x1aec0 <function_1aec0>
0x1adcb:    85 c9                              	test ecx, ecx
0x1adcd:    0f 84 a1 00 00 00                  	je 0x1ae74 <function_1ae74>
0x1add3:    c1 e1 02                           	shl ecx, 2
0x1add6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1adda:    8d 04 be                           	lea eax, [esi + edi*4]
0x1addd:    29 c8                              	sub eax, ecx
0x1addf:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1ade3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1ade6 -- 0x1ade7
0x1ade6:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1ade7 -- 0x1ade8
; data inside code section at 0x1ade8 -- 0x1adeb
0x1ade8:    ff ff ff                                           |...             |
; function: function_1adeb at 0x1adeb -- 0x1adf0
0x1adeb:    e9 84 00 00 00                     	jmp 0x1ae74 <function_1ae74>
; function: function_1adf0 at 0x1adf0 -- 0x1ae18
0x1adf0:    39 ee                              	cmp esi, ebp
0x1adf2:    89 e8                              	mov eax, ebp
0x1adf4:    0f 43 c6                           	cmovae eax, esi
0x1adf7:    8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0x1adfb:    81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0x1ae01:    0f 87 d2 00 00 00                  	ja 0x1aed9 <function_1aed9>
0x1ae07:    8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0x1ae0e:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1ae12:    c1 e6 02                           	shl esi, 2
0x1ae15:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1ae18 -- 0x1ae19
0x1ae18:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1ae19 -- 0x1ae1a
; data inside code section at 0x1ae1a -- 0x1ae5d
0x1ae1a:    ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0x1ae2a:    d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0x1ae3a:    24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0x1ae4a:    85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0x1ae5a:    34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0x1ae5d -- 0x1ae5e
; data inside code section at 0x1ae5e -- 0x1ae67
0x1ae5e:    ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1ae67 -- 0x1ae68
; data inside code section at 0x1ae68 -- 0x1ae74
0x1ae68:    ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_1ae74 at 0x1ae74 -- 0x1aeb9
0x1ae74:    89 73 14                           	mov dword ptr [ebx + 0x14], esi
0x1ae77:    8b 06                              	mov eax, dword ptr [esi]
0x1ae79:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1ae7c:    05 cc 01 00 00                     	add eax, 0x1cc
0x1ae81:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1ae84:    8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0x1ae88:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1ae8b:    8b 00                              	mov eax, dword ptr [eax]
0x1ae8d:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1ae90:    05 cc 01 00 00                     	add eax, 0x1cc
0x1ae95:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1ae99:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1aea0:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1aea3:    75 39                              	jne 0x1aede <function_1aede>
0x1aea5:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1aea9:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1aead:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1aeb1:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1aeb5:    83 c4 4c                           	add esp, 0x4c
0x1aeb8:    c3                                 	ret 
; data inside code section at 0x1aeb9 -- 0x1aec0
0x1aeb9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1aec0 at 0x1aec0 -- 0x1aed2
0x1aec0:    85 c9                              	test ecx, ecx
0x1aec2:    74 b0                              	je 0x1ae74 <function_1ae74>
0x1aec4:    c1 e1 02                           	shl ecx, 2
0x1aec7:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1aecb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1aecf:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1aed2 -- 0x1aed3
0x1aed2:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1aed3 -- 0x1aed4
; data inside code section at 0x1aed4 -- 0x1aed7
0x1aed4:    ff ff ff                                           |...             |
; function: function_1aed7 at 0x1aed7 -- 0x1aed9
0x1aed7:    eb 9b                              	jmp 0x1ae74 <function_1ae74>
; function: function_1aed9 at 0x1aed9 -- 0x1aeda
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1aeda -- 0x1aedb
; data inside code section at 0x1aedb -- 0x1aede
0x1aedb:    ff ff ff                                           |...             |
; function: function_1aede at 0x1aede -- 0x1aee0
0x1aede:    66 90                              	nop 
; data inside code section at 0x1aee0 -- 0x1aee1
0x1aee0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1aee1 -- 0x1aee2
; data inside code section at 0x1aee2 -- 0x1aee5
0x1aee2:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeI11CNetMessageSaIS0_EE16_M_push_back_auxERKS0_
; function: _ZNSt5dequeI11CNetMessageSaIS0_EE16_M_push_back_auxERKS0_ at 0x1aef0 -- 0x1af33
0x1aef0:    55                                 	push ebp
0x1aef1:    57                                 	push edi
0x1aef2:    56                                 	push esi
0x1aef3:    53                                 	push ebx
0x1aef4:    83 ec 3c                           	sub esp, 0x3c
0x1aef7:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1aefb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1af02:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1af06:    31 d2                              	xor edx, edx
0x1af08:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1af0c:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1af10:    8b 70 24                           	mov esi, dword ptr [eax + 0x24]
0x1af13:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1af17:    89 f0                              	mov eax, esi
0x1af19:    2b 01                              	sub eax, dword ptr [ecx]
0x1af1b:    c1 f8 02                           	sar eax, 2
0x1af1e:    f7 d8                              	neg eax
0x1af20:    03 41 04                           	add eax, dword ptr [ecx + 4]
0x1af23:    83 f8 01                           	cmp eax, 1
0x1af26:    0f 86 bc 01 00 00                  	jbe 0x1b0e8 <function_1b0e8>
0x1af2c:    c7 04 24 cc 01 00 00               	mov dword ptr [esp], 0x1cc
; data inside code section at 0x1af33 -- 0x1af34
0x1af33:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1af34 -- 0x1af35
; data inside code section at 0x1af35 -- 0x1af76
0x1af35:    ff ff ff 8b 54 24 18 89  46 04 8b 72 18 85 f6 0f   |....T$..F..r....|
0x1af45:    84 52 01 00 00 8b 7b 08  0f b6 03 2b 7b 04 c7 46   |.R....{....+{..F|
0x1af55:    04 00 00 00 00 c7 46 08  00 00 00 00 85 ff 88 06   |......F.........|
0x1af65:    c7 46 0c 00 00 00 00 0f  84 66 01 00 00 89 3c 24   |.F.......f....<$|
0x1af75:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1af76 -- 0x1af77
; data inside code section at 0x1af77 -- 0x1af7c
0x1af77:    ff ff ff 89 c5                                     |.....           |
; function: function_1af7c at 0x1af7c -- 0x1af7d
; data inside code section at 0x1af7d -- 0x1af94
0x1af7d:    ef 89 6e 04 89 6e 08 89  7e 0c 8b 4b 04 8b 7b 08   |..n..n..~..K..{.|
0x1af8d:    89 4c 24 1c 39 cf 74                               |.L$.9.t         |
; function: function_1af94 at 0x1af94 -- 0x1af99
0x1af94:    24 89                              	and al, 0x89
0x1af96:    ca 89 e9                           	retf -0x1677
; data inside code section at 0x1af99 -- 0x1afaa
0x1af99:    8d b4 26 00 00 00 00 85  c9 74 05 0f b6 02 88 01   |..&......t......|
0x1afa9:    83                                                 |.               |
; function: function_1afaa at 0x1afaa -- 0x1afad
0x1afaa:    c2 01 83                           	ret 0x8301
; data inside code section at 0x1afad -- 0x1b02f
0x1afad:    c1 01 39 fa 75 ed 2b 54  24 1c 01 d5 8b 43 10 89   |..9.u.+T$....C..|
0x1afbd:    6e 08 89 46 10 0f b7 43  14 66 89 46 14 0f b7 43   |n..F...C.f.F...C|
0x1afcd:    16 66 89 46 16 8b 43 18  89 46 18 8b 43 1c 89 46   |.f.F..C..F..C..F|
0x1afdd:    1c 8b 43 20 89 46 20 8b  43 24 89 46 24 8b 43 28   |..C .F .C$.F$.C(|
0x1afed:    89 46 28 8b 43 2c 89 46  2c 8b 43 30 89 46 30 8b   |.F(.C,.F,.C0.F0.|
0x1affd:    43 34 89 46 34 8b 7b 40  8b 43 38 2b 7b 3c c7 46   |C4.F4.{@.C8+{<.F|
0x1b00d:    3c 00 00 00 00 c7 46 40  00 00 00 00 85 ff 89 46   |<.....F@.......F|
0x1b01d:    38 c7 46 44 00 00 00 00  0f 84 b5 00 00 00 89 3c   |8.FD...........<|
0x1b02d:    24 e8                                              |$.              |
; dynamically linked function: _Znwj at 0x1b02f -- 0x1b030
; data inside code section at 0x1b030 -- 0x1b032
0x1b030:    ff ff                                              |..              |
; function: function_1b032 at 0x1b032 -- 0x1b0d4
0x1b032:    ff 89 c5 01 ef 89                  	dec dword ptr [ecx - 0x7610fe3b]
0x1b038:    6e                                 	outsb dx, byte ptr [esi]
0x1b039:    3c 89                              	cmp al, 0x89
0x1b03b:    6e                                 	outsb dx, byte ptr [esi]
0x1b03c:    40                                 	inc eax
0x1b03d:    89 7e 44                           	mov dword ptr [esi + 0x44], edi
0x1b040:    8b 43 3c                           	mov eax, dword ptr [ebx + 0x3c]
0x1b043:    8b 7b 40                           	mov edi, dword ptr [ebx + 0x40]
0x1b046:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1b04a:    39 c7                              	cmp edi, eax
0x1b04c:    74 23                              	je 0x1b071 <function_1b032+0x3f>
0x1b04e:    89 c2                              	mov edx, eax
0x1b050:    89 e9                              	mov ecx, ebp
0x1b052:    8d b6 00 00 00 00                  	lea esi, [esi]
0x1b058:    85 c9                              	test ecx, ecx
0x1b05a:    74 05                              	je 0x1b061 <function_1b032+0x2f>
0x1b05c:    0f b6 02                           	movzx eax, byte ptr [edx]
0x1b05f:    88 01                              	mov byte ptr [ecx], al
0x1b061:    83 c2 01                           	add edx, 1
0x1b064:    83 c1 01                           	add ecx, 1
0x1b067:    39 fa                              	cmp edx, edi
0x1b069:    75 ed                              	jne 0x1b058 <function_1b032+0x26>
0x1b06b:    2b 54 24 1c                        	sub edx, dword ptr [esp + 0x1c]
0x1b06f:    01 d5                              	add ebp, edx
0x1b071:    8b 43 48                           	mov eax, dword ptr [ebx + 0x48]
0x1b074:    89 6e 40                           	mov dword ptr [esi + 0x40], ebp
0x1b077:    89 46 48                           	mov dword ptr [esi + 0x48], eax
0x1b07a:    0f b7 43 4c                        	movzx eax, word ptr [ebx + 0x4c]
0x1b07e:    66 89 46 4c                        	mov word ptr [esi + 0x4c], ax
0x1b082:    0f b7 43 4e                        	movzx eax, word ptr [ebx + 0x4e]
0x1b086:    66 89 46 4e                        	mov word ptr [esi + 0x4e], ax
0x1b08a:    8b 43 50                           	mov eax, dword ptr [ebx + 0x50]
0x1b08d:    89 46 50                           	mov dword ptr [esi + 0x50], eax
0x1b090:    8b 43 54                           	mov eax, dword ptr [ebx + 0x54]
0x1b093:    89 46 54                           	mov dword ptr [esi + 0x54], eax
0x1b096:    8b 43 58                           	mov eax, dword ptr [ebx + 0x58]
0x1b099:    89 46 58                           	mov dword ptr [esi + 0x58], eax
0x1b09c:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1b0a0:    8b 4c 24 18                        	mov ecx, dword ptr [esp + 0x18]
0x1b0a4:    8b 42 24                           	mov eax, dword ptr [edx + 0x24]
0x1b0a7:    8d 50 04                           	lea edx, [eax + 4]
0x1b0aa:    89 51 24                           	mov dword ptr [ecx + 0x24], edx
0x1b0ad:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x1b0b0:    8d 90 cc 01 00 00                  	lea edx, [eax + 0x1cc]
0x1b0b6:    89 41 1c                           	mov dword ptr [ecx + 0x1c], eax
0x1b0b9:    89 41 18                           	mov dword ptr [ecx + 0x18], eax
0x1b0bc:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1b0c0:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1b0c7:    89 51 20                           	mov dword ptr [ecx + 0x20], edx
0x1b0ca:    75 70                              	jne 0x1b13c <function_1b13c>
0x1b0cc:    83 c4 3c                           	add esp, 0x3c
0x1b0cf:    5b                                 	pop ebx
0x1b0d0:    5e                                 	pop esi
0x1b0d1:    5f                                 	pop edi
0x1b0d2:    5d                                 	pop ebp
0x1b0d3:    c3                                 	ret 
; data inside code section at 0x1b0d4 -- 0x1b0d8
0x1b0d4:    8d 74 26 00                                        |.t&.            |
; function: function_1b0d8 at 0x1b0d8 -- 0x1b0df
0x1b0d8:    31 ed                              	xor ebp, ebp
0x1b0da:    e9 9d fe ff ff                     	jmp 0x1af7c <function_1af7c>
; data inside code section at 0x1b0df -- 0x1b0e0
0x1b0df:    90                                                 |.               |
; function: function_1b0e0 at 0x1b0e0 -- 0x1b0e7
0x1b0e0:    31 ed                              	xor ebp, ebp
0x1b0e2:    e9 4e ff ff ff                     	jmp 0x1b035
; data inside code section at 0x1b0e7 -- 0x1b0e8
0x1b0e7:    90                                                 |.               |
; function: function_1b0e8 at 0x1b0e8 -- 0x1b10c
0x1b0e8:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1b0f0:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x1b0f8:    89 0c 24                           	mov dword ptr [esp], ecx
0x1b0fb:    e8 40 ab 01 00                     	call 0x35c40 <unknown_35c40>
0x1b100:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1b104:    8b 70 24                           	mov esi, dword ptr [eax + 0x24]
0x1b107:    e9 20 fe ff ff                     	jmp 0x1af2c
; data inside code section at 0x1b10c -- 0x1b10d
0x1b10c:    89                                                 |.               |
; function: function_1b10d at 0x1b10d -- 0x1b10e
0x1b10d:    c3                                 	ret 
; data inside code section at 0x1b10e -- 0x1b11b
0x1b10e:    83 c6 04 89 34 24 e8 97  23 01 00 89 d8            |....4$..#....   |
; function: function_1b11b at 0x1b11b -- 0x1b11c
; data inside code section at 0x1b11c -- 0x1b11f
0x1b11c:    04 24 e8                                           |.$.             |
; dynamically linked function: __cxa_begin_catch at 0x1b11f -- 0x1b120
; data inside code section at 0x1b120 -- 0x1b131
0x1b120:    ff ff ff 8b 54 24 18 8b  42 24 8b 40 04 89 04 24   |....T$..B$.@...$|
0x1b130:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1b131 -- 0x1b132
; data inside code section at 0x1b132 -- 0x1b136
0x1b132:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1b136 -- 0x1b137
; data inside code section at 0x1b137 -- 0x1b13a
0x1b137:    ff ff ff                                           |...             |
; function: function_1b13a at 0x1b13a -- 0x1b13c
0x1b13a:    eb df                              	jmp 0x1b11b <function_1b11b>
; function: function_1b13c at 0x1b13c -- 0x1b140
0x1b13c:    8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0x1b140 -- 0x1b141
0x1b140:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1b141 -- 0x1b142
; data inside code section at 0x1b142 -- 0x1b146
0x1b142:    ff ff ff 89                                        |....            |
; function: function_1b146 at 0x1b146 -- 0x1b147
0x1b146:    c3                                 	ret 
; data inside code section at 0x1b147 -- 0x1b148
0x1b147:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1b148 -- 0x1b149
; data inside code section at 0x1b149 -- 0x1b150
0x1b149:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1b150 -- 0x1b151
; data inside code section at 0x1b151 -- 0x1b154
0x1b151:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_ at 0x1b160 -- 0x1b1aa
0x1b160:    55                                 	push ebp
0x1b161:    57                                 	push edi
0x1b162:    56                                 	push esi
0x1b163:    53                                 	push ebx
0x1b164:    83 ec 5c                           	sub esp, 0x5c
0x1b167:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1b16b:    8b 74 24 78                        	mov esi, dword ptr [esp + 0x78]
0x1b16f:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x1b173:    8b 4c 24 7c                        	mov ecx, dword ptr [esp + 0x7c]
0x1b177:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x1b17b:    8b 9c 24 80 00 00 00               	mov ebx, dword ptr [esp + 0x80]
0x1b182:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b188:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1b18c:    31 c0                              	xor eax, eax
0x1b18e:    85 f6                              	test esi, esi
0x1b190:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x1b194:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1b198:    c6 44 24 20 01                     	mov byte ptr [esp + 0x20], 1
0x1b19d:    0f 84 05 01 00 00                  	je 0x1b2a8 <function_1b2a8>
0x1b1a3:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1b1aa -- 0x1b1ab
0x1b1aa:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1b1ab -- 0x1b1ac
; data inside code section at 0x1b1ac -- 0x1b1ae
0x1b1ac:    ff ff                                              |..              |
; function: function_1b1ae at 0x1b1ae -- 0x1b1b7
0x1b1ae:    ff 89 c2 89 c5 83                  	dec dword ptr [ecx - 0x7c3a763e]
0x1b1b4:    c2 10 89                           	ret 0x8910
; data inside code section at 0x1b1b7 -- 0x1b1c8
0x1b1b7:    54 24 3c 0f 84 8d 00 00  00 89 5c 24 04 89 14 24   |T$<.......\$...$|
0x1b1c7:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1b1c8 -- 0x1b1c9
; data inside code section at 0x1b1c9 -- 0x1b205
0x1b1c9:    ff ff ff 8b 73 08 2b 73  04 c7 45 14 00 00 00 00   |....s.+s..E.....|
0x1b1d9:    c7 45 18 00 00 00 00 c1  fe 02 85 f6 c7 45 1c 00   |.E...........E..|
0x1b1e9:    00 00 00 0f 84 a6 00 00  00 81 fe ff ff ff 3f 0f   |..............?.|
0x1b1f9:    87 0f 01 00 00 c1 e6 02  89 34 24 e8               |.........4$.    |
; dynamically linked function: _Znwj at 0x1b205 -- 0x1b206
; data inside code section at 0x1b206 -- 0x1b20d
0x1b206:    ff ff ff 89 44 24 30                               |....D$0         |
; function: function_1b20d at 0x1b20d -- 0x1b20e
; data inside code section at 0x1b20e -- 0x1b22b
0x1b20e:    44 24 30 01 c6 89 45 14  89 45 18 89 75 1c 8b 7b   |D$0...E..E..u..{|
0x1b21e:    08 8b 73 04 39 f7 0f 84  c0 00 00 00 89            |..s.9........   |
; function: function_1b22b at 0x1b22b -- 0x1b22c
0x1b22b:    c3                                 	ret 
; data inside code section at 0x1b22c -- 0x1b23c
0x1b22c:    8d 74 26 00 85 db 74 0c  89 74 24 04 89 1c 24 e8   |.t&...t..t$...$.|
; dynamically linked function: _ZNSsC1ERKSs at 0x1b23c -- 0x1b23d
; data inside code section at 0x1b23d -- 0x1b242
0x1b23d:    ff ff ff 83 c6                                     |.....           |
; function: function_1b242 at 0x1b242 -- 0x1b245
0x1b242:    04 83                              	add al, 0x83
0x1b244:    c3                                 	ret 
; data inside code section at 0x1b245 -- 0x1b24a
0x1b245:    04 39 f7 75 e6                                     |.9.u.           |
; function: function_1b24a at 0x1b24a -- 0x1b24b
; data inside code section at 0x1b24b -- 0x1b26d
0x1b24b:    5d 18 8b 44 24 1c 8b 4c  24 38 89 6c 24 04 83 c0   |]..D$..L$8.l$...|
0x1b25b:    04 89 44 24 0c 0f b6 44  24 20 89 4c 24 08 89 04   |..D$...D$ .L$...|
0x1b26b:    24 e8                                              |$.              |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x1b26d -- 0x1b26e
; data inside code section at 0x1b26e -- 0x1b270
0x1b26e:    ff ff                                              |..              |
; function: function_1b270 at 0x1b270 -- 0x1b296
0x1b270:    ff 8b 44 24 1c 83                  	dec dword ptr [ebx - 0x7ce3dbbc]
0x1b276:    40                                 	inc eax
0x1b277:    14 01                              	adc al, 1
0x1b279:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x1b27d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1b284:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1b288:    89 28                              	mov dword ptr [eax], ebp
0x1b28a:    75 7c                              	jne 0x1b308 <function_1b308>
0x1b28c:    83 c4 5c                           	add esp, 0x5c
0x1b28f:    5b                                 	pop ebx
0x1b290:    5e                                 	pop esi
0x1b291:    5f                                 	pop edi
0x1b292:    5d                                 	pop ebp
0x1b293:    c2 04 00                           	ret 4
; data inside code section at 0x1b296 -- 0x1b298
0x1b296:    66 90                                              |f.              |
; function: function_1b298 at 0x1b298 -- 0x1b2a7
0x1b298:    31 f6                              	xor esi, esi
0x1b29a:    c7 44 24 30 00 00 00 00            	mov dword ptr [esp + 0x30], 0
0x1b2a2:    e9 66 ff ff ff                     	jmp 0x1b20d <function_1b20d>
; data inside code section at 0x1b2a7 -- 0x1b2a8
0x1b2a7:    90                                                 |.               |
; function: function_1b2a8 at 0x1b2a8 -- 0x1b2d4
0x1b2a8:    89 d0                              	mov eax, edx
0x1b2aa:    83 c0 04                           	add eax, 4
0x1b2ad:    39 c1                              	cmp ecx, eax
0x1b2af:    0f 84 ee fe ff ff                  	je 0x1b1a3
0x1b2b5:    8b 51 10                           	mov edx, dword ptr [ecx + 0x10]
0x1b2b8:    8b 03                              	mov eax, dword ptr [ebx]
0x1b2ba:    8b 7a f4                           	mov edi, dword ptr [edx - 0xc]
0x1b2bd:    8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x1b2c0:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1b2c4:    89 04 24                           	mov dword ptr [esp], eax
0x1b2c7:    39 f7                              	cmp edi, esi
0x1b2c9:    89 f1                              	mov ecx, esi
0x1b2cb:    0f 46 cf                           	cmovbe ecx, edi
0x1b2ce:    29 fe                              	sub esi, edi
0x1b2d0:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x1b2d4 -- 0x1b2d5
0x1b2d4:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b2d5 -- 0x1b2d6
; data inside code section at 0x1b2d6 -- 0x1b2d8
0x1b2d6:    ff ff                                              |..              |
; function: function_1b2d8 at 0x1b2d8 -- 0x1b2ea
0x1b2d8:    ff 85 c0 0f 44 c6                  	inc dword ptr [ebp - 0x39bbf040]
0x1b2de:    c1 e8 1f                           	shr eax, 0x1f
0x1b2e1:    88 44 24 20                        	mov byte ptr [esp + 0x20], al
0x1b2e5:    e9 b9 fe ff ff                     	jmp 0x1b1a3
; function: function_1b2ea at 0x1b2ea -- 0x1b2f3
0x1b2ea:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1b2ee:    e9 57 ff ff ff                     	jmp 0x1b24a <function_1b24a>
; data inside code section at 0x1b2f3 -- 0x1b2f7
0x1b2f3:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1b2f7 -- 0x1b2f8
; data inside code section at 0x1b2f8 -- 0x1b2ff
0x1b2f8:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZdlPv at 0x1b2ff -- 0x1b300
; data inside code section at 0x1b300 -- 0x1b304
0x1b300:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1b304 -- 0x1b305
; data inside code section at 0x1b305 -- 0x1b308
0x1b305:    ff ff ff                                           |...             |
; function: function_1b308 at 0x1b308 -- 0x1b309
; dynamically linked function: __stack_chk_fail at 0x1b309 -- 0x1b30a
; data inside code section at 0x1b30a -- 0x1b311
0x1b30a:    ff ff ff 8d 76 00 e8                               |....v..         |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1b311 -- 0x1b312
; data inside code section at 0x1b312 -- 0x1b319
0x1b312:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1b319 -- 0x1b31a
; data inside code section at 0x1b31a -- 0x1b32e
0x1b31a:    ff ff ff 39 5c 24 30 74  13 8b 74 24 30 89 34 24   |...9\$0t..t$0.4$|
0x1b32a:    83 c6 04 e8                                        |....            |
; dynamically linked function: _ZNSsD1Ev at 0x1b32e -- 0x1b32f
; data inside code section at 0x1b32f -- 0x1b337
0x1b32f:    ff ff ff 39 f3 75 f1 e8                            |...9.u..        |
; dynamically linked function: __cxa_rethrow at 0x1b337 -- 0x1b338
; data inside code section at 0x1b338 -- 0x1b33c
0x1b338:    ff ff ff 89                                        |....            |
; function: function_1b33c at 0x1b33c -- 0x1b33d
0x1b33c:    c3                                 	ret 
; function: function_1b33d at 0x1b33d -- 0x1b33e
; data inside code section at 0x1b33e -- 0x1b345
0x1b33e:    54 24 3c 89 14 24 e8                               |T$<..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1b345 -- 0x1b346
; data inside code section at 0x1b346 -- 0x1b348
0x1b346:    ff ff                                              |..              |
; function: function_1b348 at 0x1b348 -- 0x1b34f
0x1b348:    ff 89 d8 eb a6 89                  	dec dword ptr [ecx - 0x76591428]
0x1b34e:    c3                                 	ret 
; data inside code section at 0x1b34f -- 0x1b350
0x1b34f:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1b350 -- 0x1b351
; data inside code section at 0x1b351 -- 0x1b358
0x1b351:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1b358 -- 0x1b359
; data inside code section at 0x1b359 -- 0x1b35d
0x1b359:    ff ff ff 89                                        |....            |
; function: function_1b35d at 0x1b35d -- 0x1b35e
0x1b35d:    c3                                 	ret 
; data inside code section at 0x1b35e -- 0x1b35f
0x1b35e:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1b35f -- 0x1b360
; data inside code section at 0x1b360 -- 0x1b36e
0x1b360:    ff ff ff 8b 55 14 85 d2  74 d3 89 14 24 e8         |....U...t...$.  |
; dynamically linked function: _ZdlPv at 0x1b36e -- 0x1b36f
; data inside code section at 0x1b36f -- 0x1b372
0x1b36f:    ff ff ff                                           |...             |
; function: function_1b372 at 0x1b372 -- 0x1b374
0x1b372:    eb c9                              	jmp 0x1b33d <function_1b33d>
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_ at 0x1b380 -- 0x1b3fe
0x1b380:    55                                 	push ebp
0x1b381:    57                                 	push edi
0x1b382:    56                                 	push esi
0x1b383:    53                                 	push ebx
0x1b384:    83 ec 5c                           	sub esp, 0x5c
0x1b387:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x1b38b:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1b38f:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x1b393:    8b 54 24 78                        	mov edx, dword ptr [esp + 0x78]
0x1b397:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1b39b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b3a1:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1b3a5:    31 c0                              	xor eax, eax
0x1b3a7:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x1b3ab:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1b3af:    8b 7a 08                           	mov edi, dword ptr [edx + 8]
0x1b3b2:    85 ff                              	test edi, edi
0x1b3b4:    0f 84 bb 00 00 00                  	je 0x1b475 <function_1b475>
0x1b3ba:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x1b3be:    8b 12                              	mov edx, dword ptr [edx]
0x1b3c0:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1b3c4:    8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0x1b3c7:    eb 15                              	jmp 0x1b3de <_ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE16_M_insert_uniqueERKS5_+0x5e>
; data inside code section at 0x1b3c9 -- 0x1b3d0
0x1b3c9:    8d b4 26 00 00 00 00                               |..&....         |
0x1b3d0:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x1b3d3:    b9 01 00 00 00                     	mov ecx, 1
0x1b3d8:    85 c0                              	test eax, eax
0x1b3da:    74 41                              	je 0x1b41d <function_1b41d>
0x1b3dc:    89 c7                              	mov edi, eax
0x1b3de:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1b3e1:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1b3e5:    8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0x1b3e8:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1b3ec:    89 04 24                           	mov dword ptr [esp], eax
0x1b3ef:    39 de                              	cmp esi, ebx
0x1b3f1:    89 da                              	mov edx, ebx
0x1b3f3:    0f 46 d6                           	cmovbe edx, esi
0x1b3f6:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1b3fa:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
; data inside code section at 0x1b3fe -- 0x1b3ff
0x1b3fe:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b3ff -- 0x1b400
; data inside code section at 0x1b400 -- 0x1b41d
0x1b400:    ff ff ff 89 f1 8b 54 24  28 29 d9 85 c0 0f 44 c1   |......T$()....D.|
0x1b410:    85 c0 78 bc 8b 47 0c 31  c9 85 c0 75 bf            |..x..G.1...u.   |
; function: function_1b41d at 0x1b41d -- 0x1b43a
0x1b41d:    84 c9                              	test cl, cl
0x1b41f:    89 d0                              	mov eax, edx
0x1b421:    89 fa                              	mov edx, edi
0x1b423:    75 5b                              	jne 0x1b480
0x1b425:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1b429:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1b42d:    29 f3                              	sub ebx, esi
0x1b42f:    89 2c 24                           	mov dword ptr [esp], ebp
0x1b432:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x1b436:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x1b43a -- 0x1b43b
0x1b43a:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b43b -- 0x1b43c
; data inside code section at 0x1b43c -- 0x1b43e
0x1b43c:    ff ff                                              |..              |
; function: function_1b43e at 0x1b43e -- 0x1b448
0x1b43e:    ff 8b 54 24 28 85                  	dec dword ptr [ebx - 0x7ad7dbac]
0x1b444:    c0 0f 44                           	ror byte ptr [edi], 0x44
0x1b447:    c3                                 	ret 
; data inside code section at 0x1b448 -- 0x1b456
0x1b448:    85 c0 78 6c 8b 44 24 30  89 10 c6 40 04 00         |..xl.D$0...@..  |
; function: function_1b456 at 0x1b456 -- 0x1b475
0x1b456:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x1b45a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1b461:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1b465:    0f 85 8b 00 00 00                  	jne 0x1b4f6 <function_1b4f6>
0x1b46b:    83 c4 5c                           	add esp, 0x5c
0x1b46e:    5b                                 	pop ebx
0x1b46f:    5e                                 	pop esi
0x1b470:    5f                                 	pop edi
0x1b471:    5d                                 	pop ebp
0x1b472:    c2 04 00                           	ret 4
; function: function_1b475 at 0x1b475 -- 0x1b48c
0x1b475:    89 d7                              	mov edi, edx
0x1b477:    83 c7 04                           	add edi, 4
0x1b47a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x1b480:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1b484:    3b 7a 0c                           	cmp edi, dword ptr [edx + 0xc]
0x1b487:    74 2f                              	je 0x1b4b8 <function_1b4b8>
0x1b489:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1b48c -- 0x1b48d
0x1b48c:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x1b48d -- 0x1b48e
; data inside code section at 0x1b48e -- 0x1b490
0x1b48e:    ff ff                                              |..              |
; function: function_1b490 at 0x1b490 -- 0x1b4b2
0x1b490:    ff 89 c2 8b 44 24                  	dec dword ptr [ecx + 0x24448bc2]
0x1b496:    38 8b 6a 10 8b 00                  	cmp byte ptr [ebx + 0x8b106a], cl
0x1b49c:    8b 5d f4                           	mov ebx, dword ptr [ebp - 0xc]
0x1b49f:    8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x1b4a2:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1b4a6:    89 d8                              	mov eax, ebx
0x1b4a8:    39 de                              	cmp esi, ebx
0x1b4aa:    0f 46 c6                           	cmovbe eax, esi
0x1b4ad:    e9 73 ff ff ff                     	jmp 0x1b425 <function_1b425>
; data inside code section at 0x1b4b2 -- 0x1b4b8
0x1b4b2:    8d b6 00 00 00 00                                  |......          |
; function: function_1b4b8 at 0x1b4b8 -- 0x1b4f6
0x1b4b8:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x1b4bc:    8d 44 24 3c                        	lea eax, [esp + 0x3c]
0x1b4c0:    89 04 24                           	mov dword ptr [esp], eax
0x1b4c3:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x1b4c7:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1b4cf:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x1b4d3:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1b4d7:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1b4db:    e8 00 b0 01 00                     	call 0x364e0 <unknown_364e0>
0x1b4e0:    83 ec 04                           	sub esp, 4
0x1b4e3:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x1b4e7:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x1b4eb:    89 02                              	mov dword ptr [edx], eax
0x1b4ed:    c6 42 04 01                        	mov byte ptr [edx + 4], 1
0x1b4f1:    e9 60 ff ff ff                     	jmp 0x1b456 <function_1b456>
; function: function_1b4f6 at 0x1b4f6 -- 0x1b4f7
; dynamically linked function: __stack_chk_fail at 0x1b4f7 -- 0x1b4f8
; data inside code section at 0x1b4f8 -- 0x1b4fb
0x1b4f8:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_
; function: _ZNSt8_Rb_treeISsSt4pairIKSsSt6vectorISsSaISsEEESt10_Select1stIS5_ESt4lessISsESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_ at 0x1b500 -- 0x1b584
0x1b500:    83 ec 7c                           	sub esp, 0x7c
0x1b503:    89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x1b507:    8b ac 24 84 00 00 00               	mov ebp, dword ptr [esp + 0x84]
0x1b50e:    89 74 24 70                        	mov dword ptr [esp + 0x70], esi
0x1b512:    8b b4 24 88 00 00 00               	mov esi, dword ptr [esp + 0x88]
0x1b519:    8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0x1b520:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x1b527:    89 4c 24 5c                        	mov dword ptr [esp + 0x5c], ecx
0x1b52b:    31 c9                              	xor ecx, ecx
0x1b52d:    8d 45 04                           	lea eax, [ebp + 4]
0x1b530:    39 c6                              	cmp esi, eax
0x1b532:    89 7c 24 74                        	mov dword ptr [esp + 0x74], edi
0x1b536:    8b bc 24 80 00 00 00               	mov edi, dword ptr [esp + 0x80]
0x1b53d:    89 5c 24 6c                        	mov dword ptr [esp + 0x6c], ebx
0x1b541:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x1b545:    0f 84 bd 01 00 00                  	je 0x1b708 <function_1b708>
0x1b54b:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1b54f:    8b 4e 10                           	mov ecx, dword ptr [esi + 0x10]
0x1b552:    8b 12                              	mov edx, dword ptr [edx]
0x1b554:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x1b558:    8b 5a f4                           	mov ebx, dword ptr [edx - 0xc]
0x1b55b:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1b55f:    8b 51 f4                           	mov edx, dword ptr [ecx - 0xc]
0x1b562:    89 d9                              	mov ecx, ebx
0x1b564:    39 da                              	cmp edx, ebx
0x1b566:    0f 46 ca                           	cmovbe ecx, edx
0x1b569:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1b56d:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1b571:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1b575:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x1b579:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1b57d:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x1b581:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x1b584 -- 0x1b585
0x1b584:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b585 -- 0x1b586
; data inside code section at 0x1b586 -- 0x1b5ad
0x1b586:    ff ff ff 8b 54 24 34 89  d9 29 d1 85 c0 0f 44 c1   |....T$4..)....D.|
0x1b596:    85 c0 0f 89 aa 00 00 00  8b 45 0c 39 f0 0f 84 25   |.........E.9...%|
0x1b5a6:    02 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x1b5ad -- 0x1b5ae
; data inside code section at 0x1b5ae -- 0x1b5d6
0x1b5ae:    ff ff ff 89 da 89 44 24  38 8b 40 10 8b 48 f4 89   |......D$8.@..H..|
0x1b5be:    04 24 39 d9 0f 46 d1 89  54 24 08 8b 54 24 3c 89   |.$9..F..T$..T$<.|
0x1b5ce:    4c 24 34 89 54 24 04 e8                            |L$4.T$..        |
; dynamically linked function: memcmp at 0x1b5d6 -- 0x1b5d7
; data inside code section at 0x1b5d7 -- 0x1b61b
0x1b5d7:    ff ff ff 8b 4c 24 34 29  d9 85 c0 0f 44 c1 85 c0   |....L$4)....D...|
0x1b5e7:    0f 89 5b 01 00 00 8b 44  24 38 8b 50 0c 85 d2 0f   |..[....D$8.P....|
0x1b5f7:    84 74 01 00 00 8b 4c 24  40 89 74 24 0c 89 74 24   |.t....L$@.t$..t$|
0x1b607:    08 89 6c 24 04 89 4c 24  10 89 3c 24 e8 48 b0 01   |..l$..L$..<$.H..|
0x1b617:    00 83 ec 04                                        |....            |
; function: function_1b61b at 0x1b61b -- 0x1b644
0x1b61b:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x1b61f:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1b626:    89 f8                              	mov eax, edi
0x1b628:    0f 85 c4 01 00 00                  	jne 0x1b7f2 <function_1b7f2>
0x1b62e:    8b 5c 24 6c                        	mov ebx, dword ptr [esp + 0x6c]
0x1b632:    8b 74 24 70                        	mov esi, dword ptr [esp + 0x70]
0x1b636:    8b 7c 24 74                        	mov edi, dword ptr [esp + 0x74]
0x1b63a:    8b 6c 24 78                        	mov ebp, dword ptr [esp + 0x78]
0x1b63e:    83 c4 7c                           	add esp, 0x7c
0x1b641:    c2 04 00                           	ret 4
; data inside code section at 0x1b644 -- 0x1b664
0x1b644:    8d 74 26 00 8b 4c 24 38  89 54 24 34 89 4c 24 08   |.t&..L$8.T$4.L$.|
0x1b654:    8b 4c 24 3c 89 4c 24 04  8b 4c 24 2c 89 0c 24 e8   |.L$<.L$..L$,..$.|
; dynamically linked function: memcmp at 0x1b664 -- 0x1b665
; data inside code section at 0x1b665 -- 0x1b682
0x1b665:    ff ff ff 8b 54 24 34 29  da 85 c0 0f 45 d0 85 d2   |....T$4)....E...|
0x1b675:    0f 89 85 00 00 00 8b 45  10 39 f0 0f 84            |.......E.9...   |
; function: function_1b682 at 0x1b682 -- 0x1b689
0x1b682:    ea 00 00 00 89 34 24               	ljmp 0x2434:0x89000000 <function_89000000>
; data inside code section at 0x1b689 -- 0x1b68a
0x1b689:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1b68a -- 0x1b68b
; data inside code section at 0x1b68b -- 0x1b6b3
0x1b68b:    ff ff ff 89 c1 8b 40 10  8b 50 f4 89 44 24 04 89   |......@..P..D$..|
0x1b69b:    4c 24 34 39 da 89 54 24  38 0f 47 d3 89 54 24 08   |L$49..T$8.G..T$.|
0x1b6ab:    8b 54 24 3c 89 14 24 e8                            |.T$<..$.        |
; dynamically linked function: memcmp at 0x1b6b3 -- 0x1b6b4
; data inside code section at 0x1b6b4 -- 0x1b6b6
0x1b6b4:    ff ff                                              |..              |
; function: function_1b6b6 at 0x1b6b6 -- 0x1b6fb
0x1b6b6:    ff 8b 4c 24 34 2b                  	dec dword ptr [ebx + 0x2b34244c]
0x1b6bc:    5c                                 	pop esp
0x1b6bd:    24 38                              	and al, 0x38
0x1b6bf:    85 c0                              	test eax, eax
0x1b6c1:    0f 44 c3                           	cmove eax, ebx
0x1b6c4:    85 c0                              	test eax, eax
0x1b6c6:    0f 89 cc 00 00 00                  	jns 0x1b798 <function_1b798>
0x1b6cc:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1b6cf:    85 c0                              	test eax, eax
0x1b6d1:    0f 84 e9 00 00 00                  	je 0x1b7c0 <function_1b7c0>
0x1b6d7:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1b6db:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x1b6df:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1b6e3:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1b6e7:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x1b6eb:    89 3c 24                           	mov dword ptr [esp], edi
0x1b6ee:    e8 6d af 01 00                     	call 0x36660 <unknown_36660>
0x1b6f3:    83 ec 04                           	sub esp, 4
0x1b6f6:    e9 20 ff ff ff                     	jmp 0x1b61b <function_1b61b>
; data inside code section at 0x1b6fb -- 0x1b700
0x1b6fb:    90 8d 74 26 00                                     |..t&.           |
; function: function_1b700 at 0x1b700 -- 0x1b707
0x1b700:    89 37                              	mov dword ptr [edi], esi
0x1b702:    e9 14 ff ff ff                     	jmp 0x1b61b <function_1b61b>
; data inside code section at 0x1b707 -- 0x1b708
0x1b707:    90                                                 |.               |
; function: function_1b708 at 0x1b708 -- 0x1b739
0x1b708:    8b 4d 14                           	mov ecx, dword ptr [ebp + 0x14]
0x1b70b:    85 c9                              	test ecx, ecx
0x1b70d:    74 39                              	je 0x1b748 <function_1b748>
0x1b70f:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x1b712:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x1b716:    8b 42 10                           	mov eax, dword ptr [edx + 0x10]
0x1b719:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1b71d:    8b 11                              	mov edx, dword ptr [ecx]
0x1b71f:    8b 58 f4                           	mov ebx, dword ptr [eax - 0xc]
0x1b722:    8b 72 f4                           	mov esi, dword ptr [edx - 0xc]
0x1b725:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1b729:    89 04 24                           	mov dword ptr [esp], eax
0x1b72c:    89 d9                              	mov ecx, ebx
0x1b72e:    39 de                              	cmp esi, ebx
0x1b730:    0f 46 ce                           	cmovbe ecx, esi
0x1b733:    29 f3                              	sub ebx, esi
0x1b735:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
; data inside code section at 0x1b739 -- 0x1b73a
0x1b739:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b73a -- 0x1b73b
; data inside code section at 0x1b73b -- 0x1b73f
0x1b73b:    ff ff ff 85                                        |....            |
; function: function_1b73f at 0x1b73f -- 0x1b743
0x1b73f:    c0 0f 44                           	ror byte ptr [edi], 0x44
0x1b742:    c3                                 	ret 
; data inside code section at 0x1b743 -- 0x1b748
0x1b743:    85 c0 78 61 90                                     |..xa.           |
; function: function_1b748 at 0x1b748 -- 0x1b76e
0x1b748:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1b74c:    8d 44 24 48                        	lea eax, [esp + 0x48]
0x1b750:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1b754:    89 04 24                           	mov dword ptr [esp], eax
0x1b757:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1b75b:    e8 20 b1 01 00                     	call 0x36880 <unknown_36880>
0x1b760:    83 ec 04                           	sub esp, 4
0x1b763:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x1b767:    89 07                              	mov dword ptr [edi], eax
0x1b769:    e9 ad fe ff ff                     	jmp 0x1b61b <function_1b61b>
; data inside code section at 0x1b76e -- 0x1b77c
0x1b76e:    66 90 8b 54 24 40 89 44  24 0c 89 54 24 10         |f..T$@.D$..T$.  |
; function: function_1b77c at 0x1b77c -- 0x1b798
0x1b77c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1b784:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1b788:    89 3c 24                           	mov dword ptr [esp], edi
0x1b78b:    e8 d0 ae 01 00                     	call 0x36660 <unknown_36660>
0x1b790:    83 ec 04                           	sub esp, 4
0x1b793:    e9 83 fe ff ff                     	jmp 0x1b61b <function_1b61b>
; function: function_1b798 at 0x1b798 -- 0x1b7a6
0x1b798:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x1b79c:    8d 44 24 48                        	lea eax, [esp + 0x48]
0x1b7a0:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1b7a4:    eb ae                              	jmp 0x1b754
; data inside code section at 0x1b7a6 -- 0x1b7a8
0x1b7a6:    66 90                                              |f.              |
; function: function_1b7a8 at 0x1b7a8 -- 0x1b7ba
0x1b7a8:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1b7ac:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x1b7b0:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x1b7b4:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x1b7b8:    eb c2                              	jmp 0x1b77c <function_1b77c>
; data inside code section at 0x1b7ba -- 0x1b7c0
0x1b7ba:    8d b6 00 00 00 00                                  |......          |
; function: function_1b7c0 at 0x1b7c0 -- 0x1b7ce
0x1b7c0:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x1b7c4:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x1b7c8:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1b7cc:    eb ae                              	jmp 0x1b77c <function_1b77c>
; function: function_1b7ce at 0x1b7ce -- 0x1b7f2
0x1b7ce:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1b7d2:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x1b7d6:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1b7da:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1b7de:    89 54 24 10                        	mov dword ptr [esp + 0x10], edx
0x1b7e2:    89 3c 24                           	mov dword ptr [esp], edi
0x1b7e5:    e8 76 ae 01 00                     	call 0x36660 <unknown_36660>
0x1b7ea:    83 ec 04                           	sub esp, 4
0x1b7ed:    e9 29 fe ff ff                     	jmp 0x1b61b <function_1b61b>
; function: function_1b7f2 at 0x1b7f2 -- 0x1b7f3
; dynamically linked function: __stack_chk_fail at 0x1b7f3 -- 0x1b7f4
; data inside code section at 0x1b7f4 -- 0x1b7f7
0x1b7f4:    ff ff ff                                           |...             |
; section: .text._ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_
; function: _ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_ at 0x1b800 -- 0x1b87d
0x1b800:    55                                 	push ebp
0x1b801:    57                                 	push edi
0x1b802:    56                                 	push esi
0x1b803:    53                                 	push ebx
0x1b804:    83 ec 5c                           	sub esp, 0x5c
0x1b807:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x1b80b:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x1b80f:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x1b813:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1b819:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1b81d:    31 c0                              	xor eax, eax
0x1b81f:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x1b823:    89 54 24 28                        	mov dword ptr [esp + 0x28], edx
0x1b827:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x1b82b:    8b 70 08                           	mov esi, dword ptr [eax + 8]
0x1b82e:    83 c2 04                           	add edx, 4
0x1b831:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x1b835:    85 f6                              	test esi, esi
0x1b837:    0f 84 cc 01 00 00                  	je 0x1ba09 <function_1ba09>
0x1b83d:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1b841:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1b845:    8b 12                              	mov edx, dword ptr [edx]
0x1b847:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x1b84b:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x1b84f:    8b 6a f4                           	mov ebp, dword ptr [edx - 0xc]
0x1b852:    89 d3                              	mov ebx, edx
0x1b854:    eb 0d                              	jmp 0x1b863 <_ZNSt3mapISsSt6vectorISsSaISsEESt4lessISsESaISt4pairIKSsS2_EEEixERS6_+0x63>
; data inside code section at 0x1b856 -- 0x1b858
0x1b856:    66 90                                              |f.              |
0x1b858:    89 74 24 18                        	mov dword ptr [esp + 0x18], esi
0x1b85c:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x1b85f:    85 f6                              	test esi, esi
0x1b861:    74 2f                              	je 0x1b892 <function_1b892>
0x1b863:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x1b866:    8b 78 f4                           	mov edi, dword ptr [eax - 0xc]
0x1b869:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1b86d:    89 04 24                           	mov dword ptr [esp], eax
0x1b870:    39 fd                              	cmp ebp, edi
0x1b872:    89 fa                              	mov edx, edi
0x1b874:    0f 46 d5                           	cmovbe edx, ebp
0x1b877:    29 ef                              	sub edi, ebp
0x1b879:    89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x1b87d -- 0x1b87e
0x1b87d:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b87e -- 0x1b87f
; data inside code section at 0x1b87f -- 0x1b892
0x1b87f:    ff ff ff 85 c0 0f 44 c7  85 c0 79 cd 8b 76 0c 85   |......D...y..v..|
0x1b88f:    f6 75 d1                                           |.u.             |
; function: function_1b892 at 0x1b892 -- 0x1b8ba
0x1b892:    8b 5c 24 18                        	mov ebx, dword ptr [esp + 0x18]
0x1b896:    39 5c 24 24                        	cmp dword ptr [esp + 0x24], ebx
0x1b89a:    74 30                              	je 0x1b8cc <function_1b8cc>
0x1b89c:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x1b89f:    8b 70 f4                           	mov esi, dword ptr [eax - 0xc]
0x1b8a2:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1b8a6:    39 f5                              	cmp ebp, esi
0x1b8a8:    89 f2                              	mov edx, esi
0x1b8aa:    0f 46 d5                           	cmovbe edx, ebp
0x1b8ad:    29 f5                              	sub ebp, esi
0x1b8af:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1b8b3:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1b8b7:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x1b8ba -- 0x1b8bb
0x1b8ba:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1b8bb -- 0x1b8bc
; data inside code section at 0x1b8bc -- 0x1b8cc
0x1b8bc:    ff ff ff 85 c0 0f 44 c5  85 c0 0f 89 1b 01 00 00   |......D.........|
; function: function_1b8cc at 0x1b8cc -- 0x1b8f3
0x1b8cc:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1b8d0:    8d 74 24 30                        	lea esi, [esp + 0x30]
0x1b8d4:    c7 44 24 40 00 00 00 00            	mov dword ptr [esp + 0x40], 0
0x1b8dc:    c7 44 24 44 00 00 00 00            	mov dword ptr [esp + 0x44], 0
0x1b8e4:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x1b8ec:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1b8f0:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1b8f3 -- 0x1b8f4
0x1b8f3:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x1b8f4 -- 0x1b8f5
; data inside code section at 0x1b8f5 -- 0x1b93a
0x1b8f5:    ff ff ff 8b 54 24 44 8b  44 24 40 c7 44 24 34 00   |....T$D.D$@.D$4.|
0x1b905:    00 00 00 c7 44 24 38 00  00 00 00 89 d7 29 c7 c1   |....D$8......)..|
0x1b915:    ff 02 85 ff c7 44 24 3c  00 00 00 00 0f 84 d9 00   |.....D$<........|
0x1b925:    00 00 81 ff ff ff ff 3f  0f 87 e4 00 00 00 c1 e7   |.......?........|
0x1b935:    02 89 3c 24 e8                                     |..<$.           |
; dynamically linked function: _Znwj at 0x1b93a -- 0x1b93b
; data inside code section at 0x1b93b -- 0x1b948
0x1b93b:    ff ff ff 89 c1 8b 54 24  44 8b 44 24 40            |......T$D.D$@   |
; function: function_1b948 at 0x1b948 -- 0x1b949
; data inside code section at 0x1b949 -- 0x1b997
0x1b949:    cf 89 4c 24 34 89 4c 24  38 89 7c 24 3c e8 55 01   |..L$4.L$8.|$<.U.|
0x1b959:    00 00 8b 54 24 20 89 44  24 38 8d 44 24 2c 89 74   |...T$ .D$8.D$,.t|
0x1b969:    24 0c 89 5c 24 08 89 54  24 04 89 04 24 e8 85 b3   |$..\$..T$...$...|
0x1b979:    01 00 83 ec 04 8b 6c 24  38 8b 7c 24 34 8b 5c 24   |......l$8.|$4.\$|
0x1b989:    2c 39 fd 74 15 66 90 89  3c 24 83 c7 04 e8         |,9.t.f..<$....  |
; dynamically linked function: _ZNSsD1Ev at 0x1b997 -- 0x1b998
; data inside code section at 0x1b998 -- 0x1b9ab
0x1b998:    ff ff ff 39 fd 75 f1 8b  7c 24 34 85 ff 74 08 89   |...9.u..|$4..t..|
0x1b9a8:    3c 24 e8                                           |<$.             |
; dynamically linked function: _ZdlPv at 0x1b9ab -- 0x1b9ac
; data inside code section at 0x1b9ac -- 0x1b9b3
0x1b9ac:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1b9b3 -- 0x1b9b4
; data inside code section at 0x1b9b4 -- 0x1b9cf
0x1b9b4:    ff ff ff 8b 7c 24 44 8b  74 24 40 39 f7 74 18 90   |....|$D.t$@9.t..|
0x1b9c4:    8d 74 26 00 89 34 24 83  c6 04 e8                  |.t&..4$....     |
; dynamically linked function: _ZNSsD1Ev at 0x1b9cf -- 0x1b9d0
; data inside code section at 0x1b9d0 -- 0x1b9e3
0x1b9d0:    ff ff ff 39 f7 75 f1 8b  74 24 40 85 f6 74 08 89   |...9.u..t$@..t..|
0x1b9e0:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZdlPv at 0x1b9e3 -- 0x1b9e4
; data inside code section at 0x1b9e4 -- 0x1b9e6
0x1b9e4:    ff ff                                              |..              |
; function: function_1b9e6 at 0x1b9e6 -- 0x1b9ff
0x1b9e6:    ff 8b 54 24 4c 65                  	dec dword ptr [ebx + 0x654c2454]
0x1b9ec:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x1b9f2:    8d 43 14                           	lea eax, [ebx + 0x14]
0x1b9f5:    75 1b                              	jne 0x1ba12 <function_1ba12>
0x1b9f7:    83 c4 5c                           	add esp, 0x5c
0x1b9fa:    5b                                 	pop ebx
0x1b9fb:    5e                                 	pop esi
0x1b9fc:    5f                                 	pop edi
0x1b9fd:    5d                                 	pop ebp
0x1b9fe:    c3                                 	ret 
; data inside code section at 0x1b9ff -- 0x1ba00
0x1b9ff:    90                                                 |.               |
; function: function_1ba00 at 0x1ba00 -- 0x1ba09
0x1ba00:    31 ff                              	xor edi, edi
0x1ba02:    31 c9                              	xor ecx, ecx
0x1ba04:    e9 3f ff ff ff                     	jmp 0x1b948 <function_1b948>
; function: function_1ba09 at 0x1ba09 -- 0x1ba12
0x1ba09:    8b 5c 24 24                        	mov ebx, dword ptr [esp + 0x24]
0x1ba0d:    e9 ba fe ff ff                     	jmp 0x1b8cc <function_1b8cc>
; function: function_1ba12 at 0x1ba12 -- 0x1ba13
; dynamically linked function: __stack_chk_fail at 0x1ba13 -- 0x1ba14
; data inside code section at 0x1ba14 -- 0x1ba18
0x1ba14:    ff ff ff e8                                        |....            |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1ba18 -- 0x1ba19
; data inside code section at 0x1ba19 -- 0x1ba1d
0x1ba19:    ff ff ff 89                                        |....            |
; function: function_1ba1d at 0x1ba1d -- 0x1ba1e
0x1ba1d:    c3                                 	ret 
; function: function_1ba1e at 0x1ba1e -- 0x1ba1f
; data inside code section at 0x1ba1f -- 0x1ba22
0x1ba1f:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZNSsD1Ev at 0x1ba22 -- 0x1ba23
; data inside code section at 0x1ba23 -- 0x1ba26
0x1ba23:    ff ff ff                                           |...             |
; function: function_1ba26 at 0x1ba26 -- 0x1ba27
; data inside code section at 0x1ba27 -- 0x1ba2f
0x1ba27:    44 24 40 89 04 24 e8 fe                            |D$@..$..        |
; function: function_1ba2f at 0x1ba2f -- 0x1ba34
0x1ba2f:    e9 00 00 89 1c                     	jmp 0x1c8aba34 <function_1c8aba34>
; data inside code section at 0x1ba34 -- 0x1ba36
0x1ba34:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x1ba36 -- 0x1ba37
; data inside code section at 0x1ba37 -- 0x1ba39
0x1ba37:    ff ff                                              |..              |
; function: function_1ba39 at 0x1ba39 -- 0x1ba40
0x1ba39:    ff 8b 54 24 34 89                  	dec dword ptr [ebx - 0x76cbdbac]
0x1ba3f:    c3                                 	ret 
; data inside code section at 0x1ba40 -- 0x1ba48
0x1ba40:    85 d2 74 da 89 14 24 e8                            |..t...$.        |
; dynamically linked function: _ZdlPv at 0x1ba48 -- 0x1ba49
; data inside code section at 0x1ba49 -- 0x1ba4c
0x1ba49:    ff ff ff                                           |...             |
; function: function_1ba4c at 0x1ba4c -- 0x1ba4e
0x1ba4c:    eb d0                              	jmp 0x1ba1e <function_1ba1e>
; function: function_1ba4e at 0x1ba4e -- 0x1ba5e
0x1ba4e:    89 c3                              	mov ebx, eax
0x1ba50:    8d 44 24 34                        	lea eax, [esp + 0x34]
0x1ba54:    89 04 24                           	mov dword ptr [esp], eax
0x1ba57:    e8 d4 e9 00 00                     	call 0x2a430 <function_2a430>
0x1ba5c:    eb c0                              	jmp 0x1ba1e <function_1ba1e>
; function: function_1ba5e at 0x1ba5e -- 0x1ba62
0x1ba5e:    89 c3                              	mov ebx, eax
0x1ba60:    eb c4                              	jmp 0x1ba26 <function_1ba26>
; section: .text._ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_
; function: _ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_ at 0x1ba70 -- 0x1baad
0x1ba70:    55                                 	push ebp
0x1ba71:    57                                 	push edi
0x1ba72:    56                                 	push esi
0x1ba73:    53                                 	push ebx
0x1ba74:    83 ec 3c                           	sub esp, 0x3c
0x1ba77:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1ba7b:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1ba7f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1ba86:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1ba8a:    31 d2                              	xor edx, edx
0x1ba8c:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1ba90:    39 47 0c                           	cmp dword ptr [edi + 0xc], eax
0x1ba93:    89 c3                              	mov ebx, eax
0x1ba95:    0f 84 7d 00 00 00                  	je 0x1bb18 <function_1bb18>
0x1ba9b:    8d 57 04                           	lea edx, [edi + 4]
0x1ba9e:    39 c5                              	cmp ebp, eax
0x1baa0:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x1baa4:    75 04                              	jne 0x1baaa <_ZNSt8_Rb_treeI4CInvSt4pairIKS0_11CDataStreamESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS4_ESC_+0x3a>
0x1baa6:    eb 56                              	jmp 0x1bafe <function_1bafe>
0x1baa8:    89 f3                              	mov ebx, esi
0x1baaa:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1baad -- 0x1baae
0x1baad:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1baae -- 0x1baaf
; data inside code section at 0x1baaf -- 0x1bac0
0x1baaf:    ff ff ff 8b 54 24 1c 89  1c 24 89 54 24 04 89 c6   |....T$...$.T$...|
0x1babf:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x1bac0 -- 0x1bac1
; data inside code section at 0x1bac1 -- 0x1bac5
0x1bac1:    ff ff ff 89                                        |....            |
; function: function_1bac5 at 0x1bac5 -- 0x1bac6
0x1bac5:    c3                                 	ret 
; data inside code section at 0x1bac6 -- 0x1bad1
0x1bac6:    8b 40 34 8b 53 3c 85 c0  74 1e 29                  |.@4.S<..t.)     |
; function: function_1bad1 at 0x1bad1 -- 0x1bad4
0x1bad1:    c2 89 04                           	ret 0x489
; data inside code section at 0x1bad4 -- 0x1bade
0x1bad4:    24 89 44 24 18 89 54 24  04 e8                     |$.D$..T$..      |
; dynamically linked function: OPENSSL_cleanse at 0x1bade -- 0x1badf
; data inside code section at 0x1badf -- 0x1baea
0x1badf:    ff ff ff 8b 44 24 18 89  04 24 e8                  |....D$...$.     |
; dynamically linked function: _ZdlPv at 0x1baea -- 0x1baeb
; data inside code section at 0x1baeb -- 0x1baf2
0x1baeb:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x1baf2 -- 0x1baf3
; data inside code section at 0x1baf3 -- 0x1bafe
0x1baf3:    ff ff ff 83 6f 14 01 39  ee 75 aa                  |....o..9.u.     |
; function: function_1bafe at 0x1bafe -- 0x1bb13
0x1bafe:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1bb02:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1bb09:    75 45                              	jne 0x1bb50 <function_1bb50>
0x1bb0b:    83 c4 3c                           	add esp, 0x3c
0x1bb0e:    5b                                 	pop ebx
0x1bb0f:    5e                                 	pop esi
0x1bb10:    5f                                 	pop edi
0x1bb11:    5d                                 	pop ebp
0x1bb12:    c3                                 	ret 
; data inside code section at 0x1bb13 -- 0x1bb18
0x1bb13:    90 8d 74 26 00                                     |..t&.           |
; function: function_1bb18 at 0x1bb18 -- 0x1bb50
0x1bb18:    8d 57 04                           	lea edx, [edi + 4]
0x1bb1b:    39 ea                              	cmp edx, ebp
0x1bb1d:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x1bb21:    0f 85 74 ff ff ff                  	jne 0x1ba9b
0x1bb27:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x1bb2a:    89 3c 24                           	mov dword ptr [esp], edi
0x1bb2d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1bb31:    e8 4a 63 01 00                     	call 0x31e80 <_ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE>
0x1bb36:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1bb3a:    c7 47 08 00 00 00 00               	mov dword ptr [edi + 8], 0
0x1bb41:    c7 47 14 00 00 00 00               	mov dword ptr [edi + 0x14], 0
0x1bb48:    89 57 0c                           	mov dword ptr [edi + 0xc], edx
0x1bb4b:    89 57 10                           	mov dword ptr [edi + 0x10], edx
0x1bb4e:    eb ae                              	jmp 0x1bafe <function_1bafe>
; function: function_1bb50 at 0x1bb50 -- 0x1bb51
; dynamically linked function: __stack_chk_fail at 0x1bb51 -- 0x1bb52
; data inside code section at 0x1bb52 -- 0x1bb55
0x1bb52:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt4pairIx4CInvESaIS2_EE17_M_reallocate_mapEjb
; function: _ZNSt5dequeISt4pairIx4CInvESaIS2_EE17_M_reallocate_mapEjb at 0x1bb60 -- 0x1bbf6
0x1bb60:    83 ec 4c                           	sub esp, 0x4c
0x1bb63:    0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0x1bb68:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1bb6c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1bb70:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bb76:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1bb7a:    31 c0                              	xor eax, eax
0x1bb7c:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1bb80:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1bb84:    88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0x1bb88:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1bb8b:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1bb8e:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1bb92:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1bb96:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1bb99:    89 cf                              	mov edi, ecx
0x1bb9b:    29 c7                              	sub edi, eax
0x1bb9d:    c1 ff 02                           	sar edi, 2
0x1bba0:    83 c7 01                           	add edi, 1
0x1bba3:    8d 14 37                           	lea edx, [edi + esi]
0x1bba6:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1bbaa:    8d 0c 12                           	lea ecx, [edx + edx]
0x1bbad:    39 cd                              	cmp ebp, ecx
0x1bbaf:    76 4f                              	jbe 0x1bc00 <function_1bc00>
0x1bbb1:    29 d5                              	sub ebp, edx
0x1bbb3:    31 d2                              	xor edx, edx
0x1bbb5:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x1bbb9:    c1 e6 02                           	shl esi, 2
0x1bbbc:    d1 ed                              	shr ebp, 1
0x1bbbe:    80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0x1bbc3:    0f 45 d6                           	cmovne edx, esi
0x1bbc6:    83 c1 04                           	add ecx, 4
0x1bbc9:    8d 34 aa                           	lea esi, [edx + ebp*4]
0x1bbcc:    29 c1                              	sub ecx, eax
0x1bbce:    03 33                              	add esi, dword ptr [ebx]
0x1bbd0:    c1 f9 02                           	sar ecx, 2
0x1bbd3:    39 f0                              	cmp eax, esi
0x1bbd5:    0f 87 f5 00 00 00                  	ja 0x1bcd0 <function_1bcd0>
0x1bbdb:    85 c9                              	test ecx, ecx
0x1bbdd:    0f 84 a1 00 00 00                  	je 0x1bc84 <function_1bc84>
0x1bbe3:    c1 e1 02                           	shl ecx, 2
0x1bbe6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1bbea:    8d 04 be                           	lea eax, [esi + edi*4]
0x1bbed:    29 c8                              	sub eax, ecx
0x1bbef:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1bbf3:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1bbf6 -- 0x1bbf7
0x1bbf6:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1bbf7 -- 0x1bbf8
; data inside code section at 0x1bbf8 -- 0x1bbfb
0x1bbf8:    ff ff ff                                           |...             |
; function: function_1bbfb at 0x1bbfb -- 0x1bc00
0x1bbfb:    e9 84 00 00 00                     	jmp 0x1bc84 <function_1bc84>
; function: function_1bc00 at 0x1bc00 -- 0x1bc28
0x1bc00:    39 ee                              	cmp esi, ebp
0x1bc02:    89 e8                              	mov eax, ebp
0x1bc04:    0f 43 c6                           	cmovae eax, esi
0x1bc07:    8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0x1bc0b:    81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0x1bc11:    0f 87 d2 00 00 00                  	ja 0x1bce9 <function_1bce9>
0x1bc17:    8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0x1bc1e:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1bc22:    c1 e6 02                           	shl esi, 2
0x1bc25:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1bc28 -- 0x1bc29
0x1bc28:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1bc29 -- 0x1bc2a
; data inside code section at 0x1bc2a -- 0x1bc6d
0x1bc2a:    ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0x1bc3a:    d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0x1bc4a:    24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0x1bc5a:    85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0x1bc6a:    34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0x1bc6d -- 0x1bc6e
; data inside code section at 0x1bc6e -- 0x1bc77
0x1bc6e:    ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1bc77 -- 0x1bc78
; data inside code section at 0x1bc78 -- 0x1bc84
0x1bc78:    ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_1bc84 at 0x1bc84 -- 0x1bcc9
0x1bc84:    89 73 14                           	mov dword ptr [ebx + 0x14], esi
0x1bc87:    8b 06                              	mov eax, dword ptr [esi]
0x1bc89:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1bc8c:    05 e4 01 00 00                     	add eax, 0x1e4
0x1bc91:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1bc94:    8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0x1bc98:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1bc9b:    8b 00                              	mov eax, dword ptr [eax]
0x1bc9d:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1bca0:    05 e4 01 00 00                     	add eax, 0x1e4
0x1bca5:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1bca9:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1bcb0:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1bcb3:    75 39                              	jne 0x1bcee <function_1bcee>
0x1bcb5:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1bcb9:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1bcbd:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1bcc1:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1bcc5:    83 c4 4c                           	add esp, 0x4c
0x1bcc8:    c3                                 	ret 
; data inside code section at 0x1bcc9 -- 0x1bcd0
0x1bcc9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1bcd0 at 0x1bcd0 -- 0x1bce2
0x1bcd0:    85 c9                              	test ecx, ecx
0x1bcd2:    74 b0                              	je 0x1bc84 <function_1bc84>
0x1bcd4:    c1 e1 02                           	shl ecx, 2
0x1bcd7:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1bcdb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1bcdf:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1bce2 -- 0x1bce3
0x1bce2:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1bce3 -- 0x1bce4
; data inside code section at 0x1bce4 -- 0x1bce7
0x1bce4:    ff ff ff                                           |...             |
; function: function_1bce7 at 0x1bce7 -- 0x1bce9
0x1bce7:    eb 9b                              	jmp 0x1bc84 <function_1bc84>
; function: function_1bce9 at 0x1bce9 -- 0x1bcea
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1bcea -- 0x1bceb
; data inside code section at 0x1bceb -- 0x1bcee
0x1bceb:    ff ff ff                                           |...             |
; function: function_1bcee at 0x1bcee -- 0x1bcf0
0x1bcee:    66 90                              	nop 
; data inside code section at 0x1bcf0 -- 0x1bcf1
0x1bcf0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1bcf1 -- 0x1bcf2
; data inside code section at 0x1bcf2 -- 0x1bcf5
0x1bcf2:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt4pairIx4CInvESaIS2_EE16_M_push_back_auxERKS2_
; function: _ZNSt5dequeISt4pairIx4CInvESaIS2_EE16_M_push_back_auxERKS2_ at 0x1bd00 -- 0x1bd39
0x1bd00:    57                                 	push edi
0x1bd01:    56                                 	push esi
0x1bd02:    53                                 	push ebx
0x1bd03:    83 ec 20                           	sub esp, 0x20
0x1bd06:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x1bd0a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bd10:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1bd14:    31 c0                              	xor eax, eax
0x1bd16:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1bd1a:    8b 7e 24                           	mov edi, dword ptr [esi + 0x24]
0x1bd1d:    89 f8                              	mov eax, edi
0x1bd1f:    2b 06                              	sub eax, dword ptr [esi]
0x1bd21:    c1 f8 02                           	sar eax, 2
0x1bd24:    f7 d8                              	neg eax
0x1bd26:    03 46 04                           	add eax, dword ptr [esi + 4]
0x1bd29:    83 f8 01                           	cmp eax, 1
0x1bd2c:    0f 86 86 00 00 00                  	jbe 0x1bdb8 <function_1bdb8>
0x1bd32:    c7 04 24 e4 01 00 00               	mov dword ptr [esp], 0x1e4
; data inside code section at 0x1bd39 -- 0x1bd3a
0x1bd39:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1bd3a -- 0x1bd3b
; data inside code section at 0x1bd3b -- 0x1bd3d
0x1bd3b:    ff ff                                              |..              |
; function: function_1bd3d at 0x1bd3d -- 0x1bdb7
0x1bd3d:    ff 89 47 04 8b 46                  	dec dword ptr [ecx + 0x468b0447]
0x1bd43:    18 85 c0 74 40 8b                  	sbb byte ptr [ebp - 0x74bf8b40], al
0x1bd49:    13 89 10 8b 53 04                  	adc ecx, dword ptr [ecx + 0x4538b10]
0x1bd4f:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1bd52:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1bd55:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1bd58:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x1bd5b:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1bd5e:    8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x1bd61:    89 50 10                           	mov dword ptr [eax + 0x10], edx
0x1bd64:    8b 53 14                           	mov edx, dword ptr [ebx + 0x14]
0x1bd67:    89 50 14                           	mov dword ptr [eax + 0x14], edx
0x1bd6a:    8b 53 18                           	mov edx, dword ptr [ebx + 0x18]
0x1bd6d:    89 50 18                           	mov dword ptr [eax + 0x18], edx
0x1bd70:    8b 53 1c                           	mov edx, dword ptr [ebx + 0x1c]
0x1bd73:    89 50 1c                           	mov dword ptr [eax + 0x1c], edx
0x1bd76:    8b 53 20                           	mov edx, dword ptr [ebx + 0x20]
0x1bd79:    89 50 20                           	mov dword ptr [eax + 0x20], edx
0x1bd7c:    8b 53 24                           	mov edx, dword ptr [ebx + 0x24]
0x1bd7f:    89 50 24                           	mov dword ptr [eax + 0x24], edx
0x1bd82:    8b 53 28                           	mov edx, dword ptr [ebx + 0x28]
0x1bd85:    89 50 28                           	mov dword ptr [eax + 0x28], edx
0x1bd88:    8b 46 24                           	mov eax, dword ptr [esi + 0x24]
0x1bd8b:    8d 50 04                           	lea edx, [eax + 4]
0x1bd8e:    89 56 24                           	mov dword ptr [esi + 0x24], edx
0x1bd91:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x1bd94:    8d 90 e4 01 00 00                  	lea edx, [eax + 0x1e4]
0x1bd9a:    89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0x1bd9d:    89 46 18                           	mov dword ptr [esi + 0x18], eax
0x1bda0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1bda4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1bdab:    89 56 20                           	mov dword ptr [esi + 0x20], edx
0x1bdae:    75 28                              	jne 0x1bdd8 <function_1bdd8>
0x1bdb0:    83 c4 20                           	add esp, 0x20
0x1bdb3:    5b                                 	pop ebx
0x1bdb4:    5e                                 	pop esi
0x1bdb5:    5f                                 	pop edi
0x1bdb6:    c3                                 	ret 
; data inside code section at 0x1bdb7 -- 0x1bdb8
0x1bdb7:    90                                                 |.               |
; function: function_1bdb8 at 0x1bdb8 -- 0x1bdd8
0x1bdb8:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1bdc0:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x1bdc8:    89 34 24                           	mov dword ptr [esp], esi
0x1bdcb:    e8 90 ba 01 00                     	call 0x37860 <unknown_37860>
0x1bdd0:    8b 7e 24                           	mov edi, dword ptr [esi + 0x24]
0x1bdd3:    e9 5a ff ff ff                     	jmp 0x1bd32
; function: function_1bdd8 at 0x1bdd8 -- 0x1bdd9
; dynamically linked function: __stack_chk_fail at 0x1bdd9 -- 0x1bdda
; data inside code section at 0x1bdda -- 0x1bddd
0x1bdda:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_
; function: _ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_ at 0x1bde0 -- 0x1be21
0x1bde0:    53                                 	push ebx
0x1bde1:    83 ec 28                           	sub esp, 0x28
0x1bde4:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1bde8:    65 8b 1d 14 00 00 00               	mov ebx, dword ptr gs:[0x14]
0x1bdef:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x1bdf3:    31 db                              	xor ebx, ebx
0x1bdf5:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x1bdf9:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x1bdfd:    83 f8 13                           	cmp eax, 0x13
0x1be00:    76 26                              	jbe 0x1be28 <function_1be28>
0x1be02:    c7 44 24 0c 40 8c 02 00            	mov dword ptr [esp + 0xc], 0x28c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0x1be0a:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x1be12:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x1be1a:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x1be21 -- 0x1be22
0x1be21:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1be22 -- 0x1be23
; data inside code section at 0x1be23 -- 0x1be25
0x1be23:    ff ff                                              |..              |
; function: function_1be25 at 0x1be25 -- 0x1be28
0x1be25:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_1be28 at 0x1be28 -- 0x1be2f
0x1be28:    ff 24 85 ec be 01 00               	jmp dword ptr [eax*4 + 0x1beec]
; data inside code section at 0x1be2f -- 0x1be30
0x1be2f:    90                                                 |.               |
; function: function_1be30 at 0x1be30 -- 0x1bec0
0x1be30:    e8 7b 01 00 00                     	call 0x1bfb0 <function_1bfb0>
0x1be35:    8d 76 00                           	lea esi, [esi]
0x1be38:    85 d2                              	test edx, edx
0x1be3a:    8b 01                              	mov eax, dword ptr [ecx]
0x1be3c:    8d 74 26 00                        	lea esi, [esi]
0x1be40:    78 66                              	js 0x1bea8 <function_1be30+0x78>
0x1be42:    85 c0                              	test eax, eax
0x1be44:    74 7f                              	je 0x1bec5 <function_1bec5>
0x1be46:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1be4a:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1be51:    75 68                              	jne 0x1bebb <function_1be30+0x8b>
0x1be53:    8b 10                              	mov edx, dword ptr [eax]
0x1be55:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1be59:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x1be5c:    83 c4 28                           	add esp, 0x28
0x1be5f:    5b                                 	pop ebx
0x1be60:    ff e0                              	jmp eax
; data inside code section at 0x1be62 -- 0x1be68
0x1be62:    8d b6 00 00 00 00                                  |......          |
0x1be68:    85 d2                              	test edx, edx
0x1be6a:    78 2c                              	js 0x1be98 <function_1be30+0x68>
0x1be6c:    8b 51 04                           	mov edx, dword ptr [ecx + 4]
0x1be6f:    b8 01 00 00 00                     	mov eax, 1
0x1be74:    85 d2                              	test edx, edx
0x1be76:    74 08                              	je 0x1be80 <function_1be30+0x50>
0x1be78:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x1be7b:    85 c0                              	test eax, eax
0x1be7d:    0f 94 c0                           	sete al
0x1be80:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1be84:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1be8b:    75 2e                              	jne 0x1bebb <function_1be30+0x8b>
0x1be8d:    83 c4 28                           	add esp, 0x28
0x1be90:    5b                                 	pop ebx
0x1be91:    c3                                 	ret 
; data inside code section at 0x1be92 -- 0x1be98
0x1be92:    8d b6 00 00 00 00                                  |......          |
0x1be98:    8b 01                              	mov eax, dword ptr [ecx]
0x1be9a:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x1be9d:    b8 01 00 00 00                     	mov eax, 1
0x1bea2:    85 d2                              	test edx, edx
0x1bea4:    75 d2                              	jne 0x1be78 <function_1be30+0x48>
0x1bea6:    eb d8                              	jmp 0x1be80 <function_1be30+0x50>
0x1bea8:    8b 00                              	mov eax, dword ptr [eax]
0x1beaa:    85 c0                              	test eax, eax
0x1beac:    74 17                              	je 0x1bec5 <function_1bec5>
0x1beae:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x1beb2:    65 33 1d 14 00 00 00               	xor ebx, dword ptr gs:[0x14]
0x1beb9:    74 98                              	je 0x1be53 <function_1be30+0x23>
0x1bebb:    90                                 	nop 
0x1bebc:    8d 74 26 00                        	lea esi, [esi]
; data inside code section at 0x1bec0 -- 0x1bec1
0x1bec0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1bec1 -- 0x1bec2
; data inside code section at 0x1bec2 -- 0x1bec5
0x1bec2:    ff ff ff                                           |...             |
; function: function_1bec5 at 0x1bec5 -- 0x1bee4
0x1bec5:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x1becd:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x1bed5:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x1bedd:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x1bee4 -- 0x1bee5
0x1bee4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1bee5 -- 0x1bee6
; data inside code section at 0x1bee6 -- 0x1bee9
0x1bee6:    ff ff ff                                           |...             |
; section: .text._ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEjS4_EEvT_T0_RKT1_
; function: _ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEjS4_EEvT_T0_RKT1_ at 0x1bf40 -- 0x1bf71
0x1bf40:    55                                 	push ebp
0x1bf41:    57                                 	push edi
0x1bf42:    56                                 	push esi
0x1bf43:    53                                 	push ebx
0x1bf44:    83 ec 3c                           	sub esp, 0x3c
0x1bf47:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x1bf4b:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1bf4f:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1bf53:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1bf57:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1bf5d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1bf61:    31 c0                              	xor eax, eax
0x1bf63:    85 ff                              	test edi, edi
0x1bf65:    0f 84 a5 00 00 00                  	je 0x1c010 <function_1c010>
0x1bf6b:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x1bf6f:    eb 47                              	jmp 0x1bfb8 <function_1bfb8>
; data inside code section at 0x1bf71 -- 0x1bf8b
0x1bf71:    8d b4 26 00 00 00 00 81  fd ff ff ff 3f 0f 87 a1   |..&.........?...|
0x1bf81:    00 00 00 c1 e5 02 89 2c  24 e8                     |.......,$.      |
; dynamically linked function: _Znwj at 0x1bf8b -- 0x1bf8c
; data inside code section at 0x1bf8c -- 0x1bf91
0x1bf8c:    ff ff ff 89 c2                                     |.....           |
; function: function_1bf91 at 0x1bf91 -- 0x1bfb0
0x1bf91:    01 d5                              	add ebp, edx
0x1bf93:    89 6b 08                           	mov dword ptr [ebx + 8], ebp
0x1bf96:    31 ed                              	xor ebp, ebp
0x1bf98:    89 13                              	mov dword ptr [ebx], edx
0x1bf9a:    89 53 04                           	mov dword ptr [ebx + 4], edx
0x1bf9d:    8b 0e                              	mov ecx, dword ptr [esi]
0x1bf9f:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1bfa2:    29 c8                              	sub eax, ecx
0x1bfa4:    c1 f8 02                           	sar eax, 2
0x1bfa7:    85 c0                              	test eax, eax
0x1bfa9:    75 3d                              	jne 0x1bfe8 <function_1bfe8>
0x1bfab:    01 ea                              	add edx, ebp
0x1bfad:    89 53 04                           	mov dword ptr [ebx + 4], edx
; function: function_1bfb0 at 0x1bfb0 -- 0x1bfb8
0x1bfb0:    83 c3 0c                           	add ebx, 0xc
0x1bfb3:    83 ef 01                           	sub edi, 1
0x1bfb6:    74 58                              	je 0x1c010
; function: function_1bfb8 at 0x1bfb8 -- 0x1bfe2
0x1bfb8:    85 db                              	test ebx, ebx
0x1bfba:    74 f4                              	je 0x1bfb0 <function_1bfb0>
0x1bfbc:    8b 6e 04                           	mov ebp, dword ptr [esi + 4]
0x1bfbf:    2b 2e                              	sub ebp, dword ptr [esi]
0x1bfc1:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x1bfc7:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x1bfce:    c1 fd 02                           	sar ebp, 2
0x1bfd1:    85 ed                              	test ebp, ebp
0x1bfd3:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x1bfda:    75 9c                              	jne 0x1bf78
0x1bfdc:    31 ed                              	xor ebp, ebp
0x1bfde:    31 d2                              	xor edx, edx
0x1bfe0:    eb af                              	jmp 0x1bf91 <function_1bf91>
; data inside code section at 0x1bfe2 -- 0x1bfe8
0x1bfe2:    8d b6 00 00 00 00                                  |......          |
; function: function_1bfe8 at 0x1bfe8 -- 0x1bffe
0x1bfe8:    8d 2c 85 00 00 00 00               	lea ebp, [eax*4]
0x1bfef:    89 14 24                           	mov dword ptr [esp], edx
0x1bff2:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1bff6:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1bffa:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
; data inside code section at 0x1bffe -- 0x1bfff
0x1bffe:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1bfff -- 0x1c000
; data inside code section at 0x1c000 -- 0x1c003
0x1c000:    ff ff ff                                           |...             |
; function: function_1c003 at 0x1c003 -- 0x1c009
0x1c003:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1c007:    eb a2                              	jmp 0x1bfab
; data inside code section at 0x1c009 -- 0x1c010
0x1c009:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1c010 at 0x1c010 -- 0x1c025
0x1c010:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1c014:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1c01b:    75 33                              	jne 0x1c050 <function_1c050>
0x1c01d:    83 c4 3c                           	add esp, 0x3c
0x1c020:    5b                                 	pop ebx
0x1c021:    5e                                 	pop esi
0x1c022:    5f                                 	pop edi
0x1c023:    5d                                 	pop ebp
0x1c024:    c3                                 	ret 
; data inside code section at 0x1c025 -- 0x1c026
0x1c025:    e8                                                 |.               |
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1c026 -- 0x1c027
; data inside code section at 0x1c027 -- 0x1c02e
0x1c027:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1c02e -- 0x1c02f
; data inside code section at 0x1c02f -- 0x1c04c
0x1c02f:    ff ff ff 39 5c 24 1c 74  13 8b 74 24 1c 89 34 24   |...9\$.t..t$..4$|
0x1c03f:    83 c6 0c e8 69 28 01 00  39 de 75 f1 e8            |....i(..9.u..   |
; dynamically linked function: __cxa_rethrow at 0x1c04c -- 0x1c04d
; data inside code section at 0x1c04d -- 0x1c050
0x1c04d:    ff ff ff                                           |...             |
; function: function_1c050 at 0x1c050 -- 0x1c051
; dynamically linked function: __stack_chk_fail at 0x1c051 -- 0x1c052
; data inside code section at 0x1c052 -- 0x1c056
0x1c052:    ff ff ff 89                                        |....            |
; function: function_1c056 at 0x1c056 -- 0x1c057
0x1c056:    c3                                 	ret 
; data inside code section at 0x1c057 -- 0x1c058
0x1c057:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1c058 -- 0x1c059
; data inside code section at 0x1c059 -- 0x1c060
0x1c059:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1c060 -- 0x1c061
; data inside code section at 0x1c061 -- 0x1c064
0x1c061:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb at 0x1c070 -- 0x1c106
0x1c070:    83 ec 4c                           	sub esp, 0x4c
0x1c073:    0f b6 4c 24 58                     	movzx ecx, byte ptr [esp + 0x58]
0x1c078:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1c07c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1c080:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c086:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1c08a:    31 c0                              	xor eax, eax
0x1c08c:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1c090:    8b 74 24 54                        	mov esi, dword ptr [esp + 0x54]
0x1c094:    88 4c 24 1f                        	mov byte ptr [esp + 0x1f], cl
0x1c098:    8b 4b 24                           	mov ecx, dword ptr [ebx + 0x24]
0x1c09b:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1c09e:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1c0a2:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1c0a6:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1c0a9:    89 cf                              	mov edi, ecx
0x1c0ab:    29 c7                              	sub edi, eax
0x1c0ad:    c1 ff 02                           	sar edi, 2
0x1c0b0:    83 c7 01                           	add edi, 1
0x1c0b3:    8d 14 37                           	lea edx, [edi + esi]
0x1c0b6:    89 4c 24 10                        	mov dword ptr [esp + 0x10], ecx
0x1c0ba:    8d 0c 12                           	lea ecx, [edx + edx]
0x1c0bd:    39 cd                              	cmp ebp, ecx
0x1c0bf:    76 4f                              	jbe 0x1c110 <function_1c110>
0x1c0c1:    29 d5                              	sub ebp, edx
0x1c0c3:    31 d2                              	xor edx, edx
0x1c0c5:    8b 4c 24 10                        	mov ecx, dword ptr [esp + 0x10]
0x1c0c9:    c1 e6 02                           	shl esi, 2
0x1c0cc:    d1 ed                              	shr ebp, 1
0x1c0ce:    80 7c 24 1f 00                     	cmp byte ptr [esp + 0x1f], 0
0x1c0d3:    0f 45 d6                           	cmovne edx, esi
0x1c0d6:    83 c1 04                           	add ecx, 4
0x1c0d9:    8d 34 aa                           	lea esi, [edx + ebp*4]
0x1c0dc:    29 c1                              	sub ecx, eax
0x1c0de:    03 33                              	add esi, dword ptr [ebx]
0x1c0e0:    c1 f9 02                           	sar ecx, 2
0x1c0e3:    39 f0                              	cmp eax, esi
0x1c0e5:    0f 87 f5 00 00 00                  	ja 0x1c1e0 <function_1c1e0>
0x1c0eb:    85 c9                              	test ecx, ecx
0x1c0ed:    0f 84 a1 00 00 00                  	je 0x1c194 <function_1c194>
0x1c0f3:    c1 e1 02                           	shl ecx, 2
0x1c0f6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1c0fa:    8d 04 be                           	lea eax, [esi + edi*4]
0x1c0fd:    29 c8                              	sub eax, ecx
0x1c0ff:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1c103:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1c106 -- 0x1c107
0x1c106:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1c107 -- 0x1c108
; data inside code section at 0x1c108 -- 0x1c10b
0x1c108:    ff ff ff                                           |...             |
; function: function_1c10b at 0x1c10b -- 0x1c110
0x1c10b:    e9 84 00 00 00                     	jmp 0x1c194 <function_1c194>
; function: function_1c110 at 0x1c110 -- 0x1c138
0x1c110:    39 ee                              	cmp esi, ebp
0x1c112:    89 e8                              	mov eax, ebp
0x1c114:    0f 43 c6                           	cmovae eax, esi
0x1c117:    8d 6c 05 02                        	lea ebp, [ebp + eax + 2]
0x1c11b:    81 fd ff ff ff 3f                  	cmp ebp, 0x3fffffff
0x1c121:    0f 87 d2 00 00 00                  	ja 0x1c1f9 <function_1c1f9>
0x1c127:    8d 04 ad 00 00 00 00               	lea eax, [ebp*4]
0x1c12e:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1c132:    c1 e6 02                           	shl esi, 2
0x1c135:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1c138 -- 0x1c139
0x1c138:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c139 -- 0x1c13a
; data inside code section at 0x1c13a -- 0x1c17d
0x1c13a:    ff ff ff 8b 54 24 14 89  44 24 18 89 e8 29 d0 31   |....T$..D$...).1|
0x1c14a:    d2 d1 e8 80 7c 24 1f 00  0f 45 d6 8d 34 82 8b 43   |....|$...E..4..C|
0x1c15a:    24 8b 53 14 03 74 24 18  83 c0 04 29 d0 c1 f8 02   |$.S..t$....)....|
0x1c16a:    85 c0 74 13 c1 e0 02 89  44 24 08 89 54 24 04 89   |..t.....D$..T$..|
0x1c17a:    34 24 e8                                           |4$.             |
; dynamically linked function: memmove at 0x1c17d -- 0x1c17e
; data inside code section at 0x1c17e -- 0x1c187
0x1c17e:    ff ff ff 8b 03 89 04 24  e8                        |.......$.       |
; dynamically linked function: _ZdlPv at 0x1c187 -- 0x1c188
; data inside code section at 0x1c188 -- 0x1c194
0x1c188:    ff ff ff 8b 44 24 18 89  6b 04 89 03               |....D$..k...    |
; function: function_1c194 at 0x1c194 -- 0x1c1d9
0x1c194:    89 73 14                           	mov dword ptr [ebx + 0x14], esi
0x1c197:    8b 06                              	mov eax, dword ptr [esi]
0x1c199:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1c19c:    05 f8 01 00 00                     	add eax, 0x1f8
0x1c1a1:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1c1a4:    8d 44 be fc                        	lea eax, [esi + edi*4 - 4]
0x1c1a8:    89 43 24                           	mov dword ptr [ebx + 0x24], eax
0x1c1ab:    8b 00                              	mov eax, dword ptr [eax]
0x1c1ad:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1c1b0:    05 f8 01 00 00                     	add eax, 0x1f8
0x1c1b5:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x1c1b9:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1c1c0:    89 43 20                           	mov dword ptr [ebx + 0x20], eax
0x1c1c3:    75 39                              	jne 0x1c1fe <function_1c1fe>
0x1c1c5:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1c1c9:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1c1cd:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1c1d1:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1c1d5:    83 c4 4c                           	add esp, 0x4c
0x1c1d8:    c3                                 	ret 
; data inside code section at 0x1c1d9 -- 0x1c1e0
0x1c1d9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1c1e0 at 0x1c1e0 -- 0x1c1f2
0x1c1e0:    85 c9                              	test ecx, ecx
0x1c1e2:    74 b0                              	je 0x1c194 <function_1c194>
0x1c1e4:    c1 e1 02                           	shl ecx, 2
0x1c1e7:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1c1eb:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1c1ef:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1c1f2 -- 0x1c1f3
0x1c1f2:    e8                                                 |.               |
; dynamically linked function: memmove at 0x1c1f3 -- 0x1c1f4
; data inside code section at 0x1c1f4 -- 0x1c1f7
0x1c1f4:    ff ff ff                                           |...             |
; function: function_1c1f7 at 0x1c1f7 -- 0x1c1f9
0x1c1f7:    eb 9b                              	jmp 0x1c194 <function_1c194>
; function: function_1c1f9 at 0x1c1f9 -- 0x1c1fa
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x1c1fa -- 0x1c1fb
; data inside code section at 0x1c1fb -- 0x1c1fe
0x1c1fb:    ff ff ff                                           |...             |
; function: function_1c1fe at 0x1c1fe -- 0x1c200
0x1c1fe:    66 90                              	nop 
; data inside code section at 0x1c200 -- 0x1c201
0x1c200:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1c201 -- 0x1c202
; data inside code section at 0x1c202 -- 0x1c205
0x1c202:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_ at 0x1c210 -- 0x1c244
0x1c210:    55                                 	push ebp
0x1c211:    57                                 	push edi
0x1c212:    56                                 	push esi
0x1c213:    53                                 	push ebx
0x1c214:    83 ec 2c                           	sub esp, 0x2c
0x1c217:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1c21b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c221:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1c225:    31 c0                              	xor eax, eax
0x1c227:    8b 6c 24 44                        	mov ebp, dword ptr [esp + 0x44]
0x1c22b:    8b 5e 14                           	mov ebx, dword ptr [esi + 0x14]
0x1c22e:    89 d8                              	mov eax, ebx
0x1c230:    2b 06                              	sub eax, dword ptr [esi]
0x1c232:    c1 f8 02                           	sar eax, 2
0x1c235:    85 c0                              	test eax, eax
0x1c237:    0f 84 cb 00 00 00                  	je 0x1c308 <function_1c308>
0x1c23d:    c7 04 24 f8 01 00 00               	mov dword ptr [esp], 0x1f8
; data inside code section at 0x1c244 -- 0x1c245
0x1c244:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c245 -- 0x1c246
; data inside code section at 0x1c246 -- 0x1c2a1
0x1c246:    ff ff ff 89 43 fc 8b 46  14 8d 50 fc 89 56 14 8b   |....C..F..P..V..|
0x1c256:    58 fc 8d 83 f8 01 00 00  89 46 10 8d 83 ec 01 00   |X........F......|
0x1c266:    00 85 c0 89 5e 0c 89 46  08 74 7c 8b 7d 04 2b 7d   |....^..F.t|.}.+}|
0x1c276:    00 c7 83 ec 01 00 00 00  00 00 00 c7 83 f0 01 00   |................|
0x1c286:    00 00 00 00 00 85 ff c7  83 f4 01 00 00 00 00 00   |................|
0x1c296:    00 0f 84 8b 00 00 00 89  3c 24 e8                  |........<$.     |
; dynamically linked function: _Znwj at 0x1c2a1 -- 0x1c2a2
; data inside code section at 0x1c2a2 -- 0x1c2a4
0x1c2a2:    ff ff                                              |..              |
; function: function_1c2a4 at 0x1c2a4 -- 0x1c302
0x1c2a4:    ff 89 c6 01 f7 89                  	dec dword ptr [ecx - 0x7608fe3a]
0x1c2aa:    b3 ec                              	mov bl, 0xec
0x1c2ac:    01 00                              	add dword ptr [eax], eax
0x1c2ae:    00 89 b3 f0 01 00                  	add byte ptr [ecx + 0x1f0b3], cl
0x1c2b4:    00 89 bb f4 01 00                  	add byte ptr [ecx + 0x1f4bb], cl
0x1c2ba:    00 8b 7d 04 8b 6d                  	add byte ptr [ebx + 0x6d8b047d], cl
0x1c2c0:    00 39                              	add byte ptr [ecx], bh
0x1c2c2:    ef                                 	out dx, eax
0x1c2c3:    74 22                              	je 0x1c2e7 <function_1c2a4+0x43>
0x1c2c5:    89 ea                              	mov edx, ebp
0x1c2c7:    89 f1                              	mov ecx, esi
0x1c2c9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x1c2d0:    85 c9                              	test ecx, ecx
0x1c2d2:    74 05                              	je 0x1c2d9 <function_1c2a4+0x35>
0x1c2d4:    0f b6 02                           	movzx eax, byte ptr [edx]
0x1c2d7:    88 01                              	mov byte ptr [ecx], al
0x1c2d9:    83 c2 01                           	add edx, 1
0x1c2dc:    83 c1 01                           	add ecx, 1
0x1c2df:    39 fa                              	cmp edx, edi
0x1c2e1:    75 ed                              	jne 0x1c2d0 <function_1c2a4+0x2c>
0x1c2e3:    29 ea                              	sub edx, ebp
0x1c2e5:    01 d6                              	add esi, edx
0x1c2e7:    89 b3 f0 01 00 00                  	mov dword ptr [ebx + 0x1f0], esi
0x1c2ed:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1c2f1:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1c2f8:    75 79                              	jne 0x1c373 <function_1c373>
0x1c2fa:    83 c4 2c                           	add esp, 0x2c
0x1c2fd:    5b                                 	pop ebx
0x1c2fe:    5e                                 	pop esi
0x1c2ff:    5f                                 	pop edi
0x1c300:    5d                                 	pop ebp
0x1c301:    c3                                 	ret 
; data inside code section at 0x1c302 -- 0x1c308
0x1c302:    8d b6 00 00 00 00                                  |......          |
; function: function_1c308 at 0x1c308 -- 0x1c328
0x1c308:    c7 44 24 08 01 00 00 00            	mov dword ptr [esp + 8], 1
0x1c310:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x1c318:    89 34 24                           	mov dword ptr [esp], esi
0x1c31b:    e8 60 bf 01 00                     	call 0x38280 <unknown_38280>
0x1c320:    8b 5e 14                           	mov ebx, dword ptr [esi + 0x14]
0x1c323:    e9 15 ff ff ff                     	jmp 0x1c23d
; function: function_1c328 at 0x1c328 -- 0x1c32f
0x1c328:    31 f6                              	xor esi, esi
0x1c32a:    e9 78 ff ff ff                     	jmp 0x1c2a7
; data inside code section at 0x1c32f -- 0x1c333
0x1c32f:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1c333 -- 0x1c334
; data inside code section at 0x1c334 -- 0x1c36a
0x1c334:    ff ff ff 8b 46 08 83 c0  0c 3b 46 10 89 46 08 75   |....F....;F..F.u|
0x1c344:    1b 8b 46 14 8d 50 04 89  56 14 8b 40 04 8d 90 f8   |..F..P..V..@....|
0x1c354:    01 00 00 89 46 0c 89 56  10 89 46 08 8b 46 14 8b   |....F..V..F..F..|
0x1c364:    40 fc 89 04 24 e8                                  |@...$.          |
; dynamically linked function: _ZdlPv at 0x1c36a -- 0x1c36b
; data inside code section at 0x1c36b -- 0x1c36f
0x1c36b:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1c36f -- 0x1c370
; data inside code section at 0x1c370 -- 0x1c373
0x1c370:    ff ff ff                                           |...             |
; function: function_1c373 at 0x1c373 -- 0x1c374
; dynamically linked function: __stack_chk_fail at 0x1c374 -- 0x1c375
; data inside code section at 0x1c375 -- 0x1c379
0x1c375:    ff ff ff 89                                        |....            |
; function: function_1c379 at 0x1c379 -- 0x1c37a
0x1c379:    c3                                 	ret 
; data inside code section at 0x1c37a -- 0x1c37b
0x1c37a:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1c37b -- 0x1c37c
; data inside code section at 0x1c37c -- 0x1c383
0x1c37c:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1c383 -- 0x1c384
; data inside code section at 0x1c384 -- 0x1c387
0x1c384:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_ at 0x1c390 -- 0x1c3ca
0x1c390:    55                                 	push ebp
0x1c391:    57                                 	push edi
0x1c392:    56                                 	push esi
0x1c393:    53                                 	push ebx
0x1c394:    83 ec 3c                           	sub esp, 0x3c
0x1c397:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1c39b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1c3a1:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1c3a5:    31 c0                              	xor eax, eax
0x1c3a7:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x1c3ab:    8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0x1c3ae:    89 f0                              	mov eax, esi
0x1c3b0:    2b 03                              	sub eax, dword ptr [ebx]
0x1c3b2:    c1 f8 02                           	sar eax, 2
0x1c3b5:    f7 d8                              	neg eax
0x1c3b7:    03 43 04                           	add eax, dword ptr [ebx + 4]
0x1c3ba:    83 f8 01                           	cmp eax, 1
0x1c3bd:    0f 86 b5 00 00 00                  	jbe 0x1c478 <function_1c478>
0x1c3c3:    c7 04 24 f8 01 00 00               	mov dword ptr [esp], 0x1f8
; data inside code section at 0x1c3ca -- 0x1c3cb
0x1c3ca:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c3cb -- 0x1c3cc
; data inside code section at 0x1c3cc -- 0x1c3fb
0x1c3cc:    ff ff ff 89 46 04 8b 73  18 85 f6 74 65 8b 7d 04   |....F..s...te.}.|
0x1c3dc:    2b 7d 00 c7 06 00 00 00  00 c7 46 04 00 00 00 00   |+}........F.....|
0x1c3ec:    85 ff c7 46 08 00 00 00  00 74 79 89 3c 24 e8      |...F.....ty.<$. |
; dynamically linked function: _Znwj at 0x1c3fb -- 0x1c3fc
; data inside code section at 0x1c3fc -- 0x1c3ff
0x1c3fc:    ff ff ff                                           |...             |
; function: function_1c3ff at 0x1c3ff -- 0x1c46e
0x1c3ff:    01 c7                              	add edi, eax
0x1c401:    89 06                              	mov dword ptr [esi], eax
0x1c403:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1c406:    89 7e 08                           	mov dword ptr [esi + 8], edi
0x1c409:    8b 7d 04                           	mov edi, dword ptr [ebp + 4]
0x1c40c:    8b 6d 00                           	mov ebp, dword ptr [ebp]
0x1c40f:    39 ef                              	cmp edi, ebp
0x1c411:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x1c415:    74 24                              	je 0x1c43b <function_1c3ff+0x3c>
0x1c417:    89 ea                              	mov edx, ebp
0x1c419:    89 c1                              	mov ecx, eax
0x1c41b:    89 c5                              	mov ebp, eax
0x1c41d:    8d 76 00                           	lea esi, [esi]
0x1c420:    85 c9                              	test ecx, ecx
0x1c422:    74 05                              	je 0x1c429 <function_1c3ff+0x2a>
0x1c424:    0f b6 02                           	movzx eax, byte ptr [edx]
0x1c427:    88 01                              	mov byte ptr [ecx], al
0x1c429:    83 c2 01                           	add edx, 1
0x1c42c:    83 c1 01                           	add ecx, 1
0x1c42f:    39 fa                              	cmp edx, edi
0x1c431:    75 ed                              	jne 0x1c420 <function_1c3ff+0x21>
0x1c433:    2b 54 24 1c                        	sub edx, dword ptr [esp + 0x1c]
0x1c437:    89 e8                              	mov eax, ebp
0x1c439:    01 d0                              	add eax, edx
0x1c43b:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1c43e:    8b 43 24                           	mov eax, dword ptr [ebx + 0x24]
0x1c441:    8d 50 04                           	lea edx, [eax + 4]
0x1c444:    89 53 24                           	mov dword ptr [ebx + 0x24], edx
0x1c447:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x1c44a:    8d 90 f8 01 00 00                  	lea edx, [eax + 0x1f8]
0x1c450:    89 43 1c                           	mov dword ptr [ebx + 0x1c], eax
0x1c453:    89 43 18                           	mov dword ptr [ebx + 0x18], eax
0x1c456:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1c45a:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1c461:    89 53 20                           	mov dword ptr [ebx + 0x20], edx
0x1c464:    75 4d                              	jne 0x1c4b3 <function_1c4b3>
0x1c466:    83 c4 3c                           	add esp, 0x3c
0x1c469:    5b                                 	pop ebx
0x1c46a:    5e                                 	pop esi
0x1c46b:    5f                                 	pop edi
0x1c46c:    5d                                 	pop ebp
0x1c46d:    c3                                 	ret 
; data inside code section at 0x1c46e -- 0x1c470
0x1c46e:    66 90                                              |f.              |
; function: function_1c470 at 0x1c470 -- 0x1c474
0x1c470:    31 c0                              	xor eax, eax
0x1c472:    eb 8b                              	jmp 0x1c3ff <function_1c3ff>
; data inside code section at 0x1c474 -- 0x1c478
0x1c474:    8d 74 26 00                                        |.t&.            |
; function: function_1c478 at 0x1c478 -- 0x1c498
0x1c478:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1c480:    c7 44 24 04 01 00 00 00            	mov dword ptr [esp + 4], 1
0x1c488:    89 1c 24                           	mov dword ptr [esp], ebx
0x1c48b:    e8 70 bf 01 00                     	call 0x38400 <unknown_38400>
0x1c490:    8b 73 24                           	mov esi, dword ptr [ebx + 0x24]
0x1c493:    e9 2b ff ff ff                     	jmp 0x1c3c3
; data inside code section at 0x1c498 -- 0x1c49c
0x1c498:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1c49c -- 0x1c49d
; data inside code section at 0x1c49d -- 0x1c4aa
0x1c49d:    ff ff ff 8b 43 24 8b 40  04 89 04 24 e8            |....C$.@...$.   |
; dynamically linked function: _ZdlPv at 0x1c4aa -- 0x1c4ab
; data inside code section at 0x1c4ab -- 0x1c4af
0x1c4ab:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1c4af -- 0x1c4b0
; data inside code section at 0x1c4b0 -- 0x1c4b3
0x1c4b0:    ff ff ff                                           |...             |
; function: function_1c4b3 at 0x1c4b3 -- 0x1c4b4
; dynamically linked function: __stack_chk_fail at 0x1c4b4 -- 0x1c4b5
; data inside code section at 0x1c4b5 -- 0x1c4b9
0x1c4b5:    ff ff ff 89                                        |....            |
; function: function_1c4b9 at 0x1c4b9 -- 0x1c4ba
0x1c4b9:    c3                                 	ret 
; data inside code section at 0x1c4ba -- 0x1c4bb
0x1c4ba:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1c4bb -- 0x1c4bc
; data inside code section at 0x1c4bc -- 0x1c4c3
0x1c4bc:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1c4c3 -- 0x1c4c4
; data inside code section at 0x1c4c4 -- 0x1c4c7
0x1c4c4:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_ at 0x1c4d0 -- 0x1c543
0x1c4d0:    55                                 	push ebp
0x1c4d1:    57                                 	push edi
0x1c4d2:    56                                 	push esi
0x1c4d3:    53                                 	push ebx
0x1c4d4:    81 ec ec 00 00 00                  	sub esp, 0xec
0x1c4da:    8b 9c 24 0c 01 00 00               	mov ebx, dword ptr [esp + 0x10c]
0x1c4e1:    8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x1c4e8:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1c4ef:    89 94 24 dc 00 00 00               	mov dword ptr [esp + 0xdc], edx
0x1c4f6:    31 d2                              	xor edx, edx
0x1c4f8:    8b bc 24 04 01 00 00               	mov edi, dword ptr [esp + 0x104]
0x1c4ff:    8b b4 24 08 01 00 00               	mov esi, dword ptr [esp + 0x108]
0x1c506:    8b 6b 04                           	mov ebp, dword ptr [ebx + 4]
0x1c509:    8b 0b                              	mov ecx, dword ptr [ebx]
0x1c50b:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1c50f:    31 c0                              	xor eax, eax
0x1c511:    c7 84 24 d0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd0], 0
0x1c51c:    89 ea                              	mov edx, ebp
0x1c51e:    29 ca                              	sub edx, ecx
0x1c520:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x1c524:    c7 84 24 d4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd4], 0
0x1c52f:    c7 84 24 d8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xd8], 0
0x1c53a:    74 19                              	je 0x1c555 <function_1c555>
0x1c53c:    89 14 24                           	mov dword ptr [esp], edx
0x1c53f:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
; data inside code section at 0x1c543 -- 0x1c544
0x1c543:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c544 -- 0x1c545
; data inside code section at 0x1c545 -- 0x1c555
0x1c545:    ff ff ff 8b 6b 04 8b 1b  8b 54 24 30 89 5c 24 34   |....k....T$0.\$4|
; function: function_1c555 at 0x1c555 -- 0x1c67c
0x1c555:    01 c2                              	add edx, eax
0x1c557:    3b 6c 24 34                        	cmp ebp, dword ptr [esp + 0x34]
0x1c55b:    89 84 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], eax
0x1c562:    89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x1c569:    89 94 24 d8 00 00 00               	mov dword ptr [esp + 0xd8], edx
0x1c570:    74 1f                              	je 0x1c591 <function_1c555+0x3c>
0x1c572:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1c576:    89 c1                              	mov ecx, eax
0x1c578:    85 c9                              	test ecx, ecx
0x1c57a:    74 05                              	je 0x1c581 <function_1c555+0x2c>
0x1c57c:    0f b6 1a                           	movzx ebx, byte ptr [edx]
0x1c57f:    88 19                              	mov byte ptr [ecx], bl
0x1c581:    83 c2 01                           	add edx, 1
0x1c584:    83 c1 01                           	add ecx, 1
0x1c587:    39 ea                              	cmp edx, ebp
0x1c589:    75 ed                              	jne 0x1c578 <function_1c555+0x23>
0x1c58b:    2b 54 24 34                        	sub edx, dword ptr [esp + 0x34]
0x1c58f:    01 d0                              	add eax, edx
0x1c591:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x1c594:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1c597:    8b 4e 0c                           	mov ecx, dword ptr [esi + 0xc]
0x1c59a:    89 84 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], eax
0x1c5a1:    8b 06                              	mov eax, dword ptr [esi]
0x1c5a3:    2b 46 04                           	sub eax, dword ptr [esi + 4]
0x1c5a6:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x1c5aa:    8b 6f 08                           	mov ebp, dword ptr [edi + 8]
0x1c5ad:    29 d9                              	sub ecx, ebx
0x1c5af:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x1c5b3:    c1 f9 02                           	sar ecx, 2
0x1c5b6:    83 e9 01                           	sub ecx, 1
0x1c5b9:    c1 f8 02                           	sar eax, 2
0x1c5bc:    6b c9 2a                           	imul ecx, ecx, 0x2a
0x1c5bf:    29 ea                              	sub edx, ebp
0x1c5c1:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x1c5c7:    c1 fa 02                           	sar edx, 2
0x1c5ca:    69 d2 ab aa aa aa                  	imul edx, edx, 0xaaaaaaab
0x1c5d0:    89 6c 24 34                        	mov dword ptr [esp + 0x34], ebp
0x1c5d4:    8b 6f 18                           	mov ebp, dword ptr [edi + 0x18]
0x1c5d7:    01 c8                              	add eax, ecx
0x1c5d9:    8b 4f 24                           	mov ecx, dword ptr [edi + 0x24]
0x1c5dc:    01 d0                              	add eax, edx
0x1c5de:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1c5e2:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1c5e6:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x1c5ea:    8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0x1c5ed:    29 d8                              	sub eax, ebx
0x1c5ef:    c1 f8 02                           	sar eax, 2
0x1c5f2:    83 e8 01                           	sub eax, 1
0x1c5f5:    6b c0 2a                           	imul eax, eax, 0x2a
0x1c5f8:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1c5fc:    89 e8                              	mov eax, ebp
0x1c5fe:    29 c8                              	sub eax, ecx
0x1c600:    c1 f8 02                           	sar eax, 2
0x1c603:    69 c0 ab aa aa aa                  	imul eax, eax, 0xaaaaaaab
0x1c609:    03 44 24 44                        	add eax, dword ptr [esp + 0x44]
0x1c60d:    01 c2                              	add edx, eax
0x1c60f:    d1 ea                              	shr edx, 1
0x1c611:    39 54 24 48                        	cmp dword ptr [esp + 0x48], edx
0x1c615:    0f 82 9d 02 00 00                  	jb 0x1c8b8 <function_1c8b8>
0x1c61b:    39 cd                              	cmp ebp, ecx
0x1c61d:    89 6c 24 40                        	mov dword ptr [esp + 0x40], ebp
0x1c621:    0f 84 31 05 00 00                  	je 0x1cb58 <function_1cb58>
0x1c627:    8b 47 20                           	mov eax, dword ptr [edi + 0x20]
0x1c62a:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1c62e:    83 e8 0c                           	sub eax, 0xc
0x1c631:    39 c5                              	cmp ebp, eax
0x1c633:    0f 84 13 06 00 00                  	je 0x1cc4c <function_1cc4c>
0x1c639:    85 ed                              	test ebp, ebp
0x1c63b:    0f 84 cf 04 00 00                  	je 0x1cb10 <function_1cb10>
0x1c641:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1c645:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1c649:    8b 5b f8                           	mov ebx, dword ptr [ebx - 8]
0x1c64c:    8b 40 f4                           	mov eax, dword ptr [eax - 0xc]
0x1c64f:    c7 45 00 00 00 00 00               	mov dword ptr [ebp], 0
0x1c656:    c7 45 04 00 00 00 00               	mov dword ptr [ebp + 4], 0
0x1c65d:    c7 45 08 00 00 00 00               	mov dword ptr [ebp + 8], 0
0x1c664:    29 c3                              	sub ebx, eax
0x1c666:    85 db                              	test ebx, ebx
0x1c668:    89 5c 24 38                        	mov dword ptr [esp + 0x38], ebx
0x1c66c:    0f 84 8e 04 00 00                  	je 0x1cb00 <function_1cb00>
0x1c672:    89 1c 24                           	mov dword ptr [esp], ebx
0x1c675:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
; data inside code section at 0x1c67c -- 0x1c67d
0x1c67c:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c67d -- 0x1c67e
; data inside code section at 0x1c67e -- 0x1c685
0x1c67e:    ff ff ff 89 44 24 34                               |....D$4         |
; function: function_1c685 at 0x1c685 -- 0x1c881
0x1c685:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1c689:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x1c68d:    89 45 00                           	mov dword ptr [ebp], eax
0x1c690:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x1c693:    03 44 24 38                        	add eax, dword ptr [esp + 0x38]
0x1c697:    89 45 08                           	mov dword ptr [ebp + 8], eax
0x1c69a:    8b 4a f4                           	mov ecx, dword ptr [edx - 0xc]
0x1c69d:    8b 5a f8                           	mov ebx, dword ptr [edx - 8]
0x1c6a0:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1c6a4:    39 cb                              	cmp ebx, ecx
0x1c6a6:    74 23                              	je 0x1c6cb <function_1c685+0x46>
0x1c6a8:    8b 54 24 34                        	mov edx, dword ptr [esp + 0x34]
0x1c6ac:    89 c8                              	mov eax, ecx
0x1c6ae:    66 90                              	nop 
0x1c6b0:    85 d2                              	test edx, edx
0x1c6b2:    74 05                              	je 0x1c6b9 <function_1c685+0x34>
0x1c6b4:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x1c6b7:    88 0a                              	mov byte ptr [edx], cl
0x1c6b9:    83 c0 01                           	add eax, 1
0x1c6bc:    83 c2 01                           	add edx, 1
0x1c6bf:    39 d8                              	cmp eax, ebx
0x1c6c1:    75 ed                              	jne 0x1c6b0 <function_1c685+0x2b>
0x1c6c3:    2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0x1c6c7:    01 44 24 34                        	add dword ptr [esp + 0x34], eax
0x1c6cb:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x1c6cf:    8b 5f 20                           	mov ebx, dword ptr [edi + 0x20]
0x1c6d2:    8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0x1c6d5:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x1c6d8:    8b 6f 24                           	mov ebp, dword ptr [edi + 0x24]
0x1c6db:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x1c6df:    8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x1c6e2:    8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0x1c6e5:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x1c6e9:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1c6ec:    89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x1c6f0:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x1c6f3:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x1c6f7:    83 c0 0c                           	add eax, 0xc
0x1c6fa:    89 47 18                           	mov dword ptr [edi + 0x18], eax
0x1c6fd:    39 c8                              	cmp eax, ecx
0x1c6ff:    0f 84 6b 04 00 00                  	je 0x1cb70 <function_1cb70>
0x1c705:    83 e8 0c                           	sub eax, 0xc
0x1c708:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1c70c:    39 c8                              	cmp eax, ecx
0x1c70e:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x1c712:    0f 84 18 04 00 00                  	je 0x1cb30 <function_1cb30>
0x1c718:    89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0x1c71c:    8b 6c 24 44                        	mov ebp, dword ptr [esp + 0x44]
0x1c720:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1c724:    89 4c 24 50                        	mov dword ptr [esp + 0x50], ecx
0x1c728:    89 6c 24 5c                        	mov dword ptr [esp + 0x5c], ebp
0x1c72c:    83 e8 0c                           	sub eax, 0xc
0x1c72f:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x1c733:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1c737:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1c73a:    29 c5                              	sub ebp, eax
0x1c73c:    c1 fd 02                           	sar ebp, 2
0x1c73f:    69 ed ab aa aa aa                  	imul ebp, ebp, 0xaaaaaaab
0x1c745:    03 6c 24 48                        	add ebp, dword ptr [esp + 0x48]
0x1c749:    0f 88 c9 03 00 00                  	js 0x1cb18 <function_1cb18>
0x1c74f:    83 fd 29                           	cmp ebp, 0x29
0x1c752:    0f 8f 70 03 00 00                  	jg 0x1cac8 <function_1cac8>
0x1c758:    8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x1c75c:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x1c760:    8d 14 7f                           	lea edx, [edi + edi*2]
0x1c763:    8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0x1c767:    8d 54 95 00                        	lea edx, [ebp + edx*4]
0x1c76b:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x1c76f:    89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0x1c772:    89 16                              	mov dword ptr [esi], edx
0x1c774:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1c777:    89 ac 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], ebp
0x1c77e:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1c782:    89 7e 08                           	mov dword ptr [esi + 8], edi
0x1c785:    89 8c 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], ecx
0x1c78c:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x1c790:    89 9c 24 ac 00 00 00               	mov dword ptr [esp + 0xac], ebx
0x1c797:    89 ac 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], ebp
0x1c79e:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1c7a2:    89 94 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], edx
0x1c7a9:    89 8c 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], ecx
0x1c7b0:    8b 4c 24 58                        	mov ecx, dword ptr [esp + 0x58]
0x1c7b4:    89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x1c7bb:    89 ac 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], ebp
0x1c7c2:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x1c7c6:    89 bc 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], edi
0x1c7cd:    89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0x1c7d4:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x1c7d8:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1c7dc:    89 ac 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], ebp
0x1c7e3:    8d ac 24 c0 00 00 00               	lea ebp, [esp + 0xc0]
0x1c7ea:    89 6c 24 24                        	mov dword ptr [esp + 0x24], ebp
0x1c7ee:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1c7f2:    89 8c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ecx
0x1c7f9:    8d 4c 24 60                        	lea ecx, [esp + 0x60]
0x1c7fd:    89 6c 24 14                        	mov dword ptr [esp + 0x14], ebp
0x1c801:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1c805:    89 6c 24 18                        	mov dword ptr [esp + 0x18], ebp
0x1c809:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1c80d:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x1c811:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x1c815:    89 6c 24 20                        	mov dword ptr [esp + 0x20], ebp
0x1c819:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1c81d:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x1c821:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x1c828:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x1c82c:    89 0c 24                           	mov dword ptr [esp], ecx
0x1c82f:    e8 3c 6d 01 00                     	call 0x33570 <unknown_33570>
0x1c834:    83 ec 04                           	sub esp, 4
0x1c837:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x1c83e:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1c842:    8b 06                              	mov eax, dword ptr [esi]
0x1c844:    89 04 24                           	mov dword ptr [esp], eax
0x1c847:    e8 24 5e 01 00                     	call 0x32670 <function_32670>
0x1c84c:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1c850:    8b 06                              	mov eax, dword ptr [esi]
0x1c852:    8b 9c 24 d0 00 00 00               	mov ebx, dword ptr [esp + 0xd0]
0x1c859:    89 02                              	mov dword ptr [edx], eax
0x1c85b:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x1c85e:    85 db                              	test ebx, ebx
0x1c860:    89 42 04                           	mov dword ptr [edx + 4], eax
0x1c863:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x1c866:    89 42 08                           	mov dword ptr [edx + 8], eax
0x1c869:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1c86c:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x1c86f:    8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x1c876:    74 16                              	je 0x1c88e <function_1c88e>
0x1c878:    29 d8                              	sub eax, ebx
0x1c87a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1c87e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1c881 -- 0x1c882
0x1c881:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1c882 -- 0x1c883
; data inside code section at 0x1c883 -- 0x1c88a
0x1c883:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _ZdlPv at 0x1c88a -- 0x1c88b
; data inside code section at 0x1c88b -- 0x1c88e
0x1c88b:    ff ff ff                                           |...             |
; function: function_1c88e at 0x1c88e -- 0x1c8b3
0x1c88e:    8b 8c 24 dc 00 00 00               	mov ecx, dword ptr [esp + 0xdc]
0x1c895:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x1c89c:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x1c8a0:    0f 85 16 04 00 00                  	jne 0x1ccbc <function_1ccbc>
0x1c8a6:    81 c4 ec 00 00 00                  	add esp, 0xec
0x1c8ac:    5b                                 	pop ebx
0x1c8ad:    5e                                 	pop esi
0x1c8ae:    5f                                 	pop edi
0x1c8af:    5d                                 	pop ebp
0x1c8b0:    c2 04 00                           	ret 4
; data inside code section at 0x1c8b3 -- 0x1c8b8
0x1c8b3:    90 8d 74 26 00                                     |..t&.           |
; function: function_1c8b8 at 0x1c8b8 -- 0x1c910
0x1c8b8:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1c8bb:    39 44 24 34                        	cmp dword ptr [esp + 0x34], eax
0x1c8bf:    0f 84 cb 03 00 00                  	je 0x1cc90 <function_1cc90>
0x1c8c5:    83 7c 24 34 0c                     	cmp dword ptr [esp + 0x34], 0xc
0x1c8ca:    0f 84 57 03 00 00                  	je 0x1cc27 <function_1cc27>
0x1c8d0:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1c8d4:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x1c8d8:    8b 1b                              	mov ebx, dword ptr [ebx]
0x1c8da:    c7 45 f4 00 00 00 00               	mov dword ptr [ebp - 0xc], 0
0x1c8e1:    c7 45 f8 00 00 00 00               	mov dword ptr [ebp - 8], 0
0x1c8e8:    c7 45 fc 00 00 00 00               	mov dword ptr [ebp - 4], 0
0x1c8ef:    89 5c 24 38                        	mov dword ptr [esp + 0x38], ebx
0x1c8f3:    8b 5d 04                           	mov ebx, dword ptr [ebp + 4]
0x1c8f6:    89 dd                              	mov ebp, ebx
0x1c8f8:    2b 6c 24 38                        	sub ebp, dword ptr [esp + 0x38]
0x1c8fc:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x1c900:    0f 84 28 03 00 00                  	je 0x1cc2e <function_1cc2e>
0x1c906:    89 2c 24                           	mov dword ptr [esp], ebp
0x1c909:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
; data inside code section at 0x1c910 -- 0x1c911
0x1c910:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1c911 -- 0x1c912
; data inside code section at 0x1c912 -- 0x1c924
0x1c912:    ff ff ff 89 c5 8b 44 24  34 8b 10 8b 58 04 89 54   |......D$4...X..T|
0x1c922:    24 38                                              |$8              |
; function: function_1c924 at 0x1c924 -- 0x1c97b
0x1c924:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x1c928:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x1c92c:    01 e8                              	add eax, ebp
0x1c92e:    3b 5c 24 38                        	cmp ebx, dword ptr [esp + 0x38]
0x1c932:    89 69 f4                           	mov dword ptr [ecx - 0xc], ebp
0x1c935:    89 69 f8                           	mov dword ptr [ecx - 8], ebp
0x1c938:    89 41 fc                           	mov dword ptr [ecx - 4], eax
0x1c93b:    74 24                              	je 0x1c961 <function_1c924+0x3d>
0x1c93d:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x1c941:    89 ea                              	mov edx, ebp
0x1c943:    90                                 	nop 
0x1c944:    8d 74 26 00                        	lea esi, [esi]
0x1c948:    85 d2                              	test edx, edx
0x1c94a:    74 05                              	je 0x1c951 <function_1c924+0x2d>
0x1c94c:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x1c94f:    88 0a                              	mov byte ptr [edx], cl
0x1c951:    83 c0 01                           	add eax, 1
0x1c954:    83 c2 01                           	add edx, 1
0x1c957:    39 d8                              	cmp eax, ebx
0x1c959:    75 ed                              	jne 0x1c948 <function_1c924+0x24>
0x1c95b:    2b 44 24 38                        	sub eax, dword ptr [esp + 0x38]
0x1c95f:    01 c5                              	add ebp, eax
0x1c961:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1c965:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x1c968:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1c96b:    89 6b f8                           	mov dword ptr [ebx - 8], ebp
0x1c96e:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1c971:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x1c974:    83 ea 0c                           	sub edx, 0xc
0x1c977:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
; function: function_1c97b at 0x1c97b -- 0x1cac3
0x1c97b:    89 57 08                           	mov dword ptr [edi + 8], edx
0x1c97e:    8d 6a 0c                           	lea ebp, [edx + 0xc]
0x1c981:    3b 6c 24 4c                        	cmp ebp, dword ptr [esp + 0x4c]
0x1c985:    0f 84 68 02 00 00                  	je 0x1cbf3 <function_1cbf3>
0x1c98b:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x1c98f:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1c993:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x1c997:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x1c99b:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x1c99f:    8d 7d 0c                           	lea edi, [ebp + 0xc]
0x1c9a2:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x1c9a6:    39 cf                              	cmp edi, ecx
0x1c9a8:    0f 84 18 02 00 00                  	je 0x1cbc6 <function_1cbc6>
0x1c9ae:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x1c9b2:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x1c9b6:    89 4c 24 54                        	mov dword ptr [esp + 0x54], ecx
0x1c9ba:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x1c9be:    89 7c 24 58                        	mov dword ptr [esp + 0x58], edi
0x1c9c2:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x1c9c6:    89 d1                              	mov ecx, edx
0x1c9c8:    29 c1                              	sub ecx, eax
0x1c9ca:    c1 f9 02                           	sar ecx, 2
0x1c9cd:    69 c9 ab aa aa aa                  	imul ecx, ecx, 0xaaaaaaab
0x1c9d3:    03 4c 24 48                        	add ecx, dword ptr [esp + 0x48]
0x1c9d7:    0f 88 58 02 00 00                  	js 0x1cc35 <function_1cc35>
0x1c9dd:    83 f9 29                           	cmp ecx, 0x29
0x1c9e0:    0f 8f aa 01 00 00                  	jg 0x1cb90 <function_1cb90>
0x1c9e6:    8b 7c 24 48                        	mov edi, dword ptr [esp + 0x48]
0x1c9ea:    8d 0c 7f                           	lea ecx, [edi + edi*2]
0x1c9ed:    8b 7c 24 4c                        	mov edi, dword ptr [esp + 0x4c]
0x1c9f1:    8d 14 8a                           	lea edx, [edx + ecx*4]
0x1c9f4:    89 16                              	mov dword ptr [esi], edx
0x1c9f6:    83 c2 0c                           	add edx, 0xc
0x1c9f9:    89 d9                              	mov ecx, ebx
0x1c9fb:    39 fa                              	cmp edx, edi
0x1c9fd:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1ca00:    89 7e 08                           	mov dword ptr [esi + 8], edi
0x1ca03:    89 5e 0c                           	mov dword ptr [esi + 0xc], ebx
0x1ca06:    0f 84 08 02 00 00                  	je 0x1cc14 <function_1cc14>
0x1ca0c:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x1ca10:    89 ac 24 90 00 00 00               	mov dword ptr [esp + 0x90], ebp
0x1ca17:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1ca1b:    89 bc 24 88 00 00 00               	mov dword ptr [esp + 0x88], edi
0x1ca22:    89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0x1ca26:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x1ca2a:    89 9c 24 94 00 00 00               	mov dword ptr [esp + 0x94], ebx
0x1ca31:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1ca35:    89 ac 24 98 00 00 00               	mov dword ptr [esp + 0x98], ebp
0x1ca3c:    8b 6c 24 34                        	mov ebp, dword ptr [esp + 0x34]
0x1ca40:    89 8c 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], ecx
0x1ca47:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x1ca4b:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x1ca4f:    89 9c 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], ebx
0x1ca56:    8b 5c 24 44                        	mov ebx, dword ptr [esp + 0x44]
0x1ca5a:    89 6c 24 70                        	mov dword ptr [esp + 0x70], ebp
0x1ca5e:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1ca62:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x1ca66:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1ca6a:    89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0x1ca71:    89 5c 24 74                        	mov dword ptr [esp + 0x74], ebx
0x1ca75:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1ca79:    89 6c 24 78                        	mov dword ptr [esp + 0x78], ebp
0x1ca7d:    8d 6c 24 60                        	lea ebp, [esp + 0x60]
0x1ca81:    89 84 24 84 00 00 00               	mov dword ptr [esp + 0x84], eax
0x1ca88:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
0x1ca8c:    89 5c 24 7c                        	mov dword ptr [esp + 0x7c], ebx
0x1ca90:    8d 9c 24 90 00 00 00               	lea ebx, [esp + 0x90]
0x1ca97:    89 5c 24 24                        	mov dword ptr [esp + 0x24], ebx
0x1ca9b:    8b 5c 24 58                        	mov ebx, dword ptr [esp + 0x58]
0x1ca9f:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x1caa3:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x1caa7:    89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0x1caab:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x1caaf:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x1cab6:    89 2c 24                           	mov dword ptr [esp], ebp
0x1cab9:    e8 c2 6d 01 00                     	call 0x33880 <unknown_33880>
0x1cabe:    e9 71 fd ff ff                     	jmp 0x1c834
; data inside code section at 0x1cac3 -- 0x1cac8
0x1cac3:    90 8d 74 26 00                                     |..t&.           |
; function: function_1cac8 at 0x1cac8 -- 0x1cafb
0x1cac8:    85 ed                              	test ebp, ebp
0x1caca:    7e 4c                              	jle 0x1cb18 <function_1cb18>
0x1cacc:    89 e8                              	mov eax, ebp
0x1cace:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x1cad3:    f7 ea                              	imul edx
0x1cad5:    89 e8                              	mov eax, ebp
0x1cad7:    c1 f8 1f                           	sar eax, 0x1f
0x1cada:    c1 fa 03                           	sar edx, 3
0x1cadd:    29 c2                              	sub edx, eax
0x1cadf:    8d 1c 93                           	lea ebx, [ebx + edx*4]
0x1cae2:    6b d2 2a                           	imul edx, edx, 0x2a
0x1cae5:    8b 03                              	mov eax, dword ptr [ebx]
0x1cae7:    29 d5                              	sub ebp, edx
0x1cae9:    8d 54 6d 00                        	lea edx, [ebp + ebp*2]
0x1caed:    8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0x1caf3:    8d 14 90                           	lea edx, [eax + edx*4]
0x1caf6:    e9 70 fc ff ff                     	jmp 0x1c76b
; data inside code section at 0x1cafb -- 0x1cb00
0x1cafb:    90 8d 74 26 00                                     |..t&.           |
; function: function_1cb00 at 0x1cb00 -- 0x1cb0d
0x1cb00:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1cb08:    e9 78 fb ff ff                     	jmp 0x1c685 <function_1c685>
; data inside code section at 0x1cb0d -- 0x1cb10
0x1cb0d:    8d 76 00                                           |.v.             |
; function: function_1cb10 at 0x1cb10 -- 0x1cb17
0x1cb10:    31 c0                              	xor eax, eax
0x1cb12:    e9 e0 fb ff ff                     	jmp 0x1c6f7
; data inside code section at 0x1cb17 -- 0x1cb18
0x1cb17:    90                                                 |.               |
; function: function_1cb18 at 0x1cb18 -- 0x1cb2c
0x1cb18:    89 e8                              	mov eax, ebp
0x1cb1a:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x1cb1f:    f7 d0                              	not eax
0x1cb21:    d1 e8                              	shr eax, 1
0x1cb23:    f7 e2                              	mul edx
0x1cb25:    c1 ea 02                           	shr edx, 2
0x1cb28:    f7 d2                              	not edx
0x1cb2a:    eb b3                              	jmp 0x1cadf
; data inside code section at 0x1cb2c -- 0x1cb30
0x1cb2c:    8d 74 26 00                                        |.t&.            |
; function: function_1cb30 at 0x1cb30 -- 0x1cb52
0x1cb30:    83 ed 04                           	sub ebp, 4
0x1cb33:    89 6c 24 54                        	mov dword ptr [esp + 0x54], ebp
0x1cb37:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1cb3b:    8b 6d fc                           	mov ebp, dword ptr [ebp - 4]
0x1cb3e:    89 e8                              	mov eax, ebp
0x1cb40:    05 f8 01 00 00                     	add eax, 0x1f8
0x1cb45:    89 6c 24 50                        	mov dword ptr [esp + 0x50], ebp
0x1cb49:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1cb4d:    e9 da fb ff ff                     	jmp 0x1c72c
; data inside code section at 0x1cb52 -- 0x1cb58
0x1cb52:    8d b6 00 00 00 00                                  |......          |
; function: function_1cb58 at 0x1cb58 -- 0x1cb6d
0x1cb58:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x1cb5c:    8b 42 fc                           	mov eax, dword ptr [edx - 4]
0x1cb5f:    05 f8 01 00 00                     	add eax, 0x1f8
0x1cb64:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x1cb68:    e9 ba fa ff ff                     	jmp 0x1c627
; data inside code section at 0x1cb6d -- 0x1cb70
0x1cb6d:    8d 76 00                                           |.v.             |
; function: function_1cb70 at 0x1cb70 -- 0x1cb8d
0x1cb70:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x1cb74:    8b 4d fc                           	mov ecx, dword ptr [ebp - 4]
0x1cb77:    83 ed 04                           	sub ebp, 4
0x1cb7a:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x1cb7e:    8d 81 f8 01 00 00                  	lea eax, [ecx + 0x1f8]
0x1cb84:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x1cb88:    e9 78 fb ff ff                     	jmp 0x1c705
; data inside code section at 0x1cb8d -- 0x1cb90
0x1cb8d:    8d 76 00                                           |.v.             |
; function: function_1cb90 at 0x1cb90 -- 0x1cbc6
0x1cb90:    85 c9                              	test ecx, ecx
0x1cb92:    0f 8e 9d 00 00 00                  	jle 0x1cc35 <function_1cc35>
0x1cb98:    89 c8                              	mov eax, ecx
0x1cb9a:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x1cb9f:    f7 ea                              	imul edx
0x1cba1:    89 c8                              	mov eax, ecx
0x1cba3:    c1 f8 1f                           	sar eax, 0x1f
0x1cba6:    c1 fa 03                           	sar edx, 3
0x1cba9:    29 c2                              	sub edx, eax
0x1cbab:    8d 1c 93                           	lea ebx, [ebx + edx*4]
0x1cbae:    6b d2 2a                           	imul edx, edx, 0x2a
0x1cbb1:    8b 03                              	mov eax, dword ptr [ebx]
0x1cbb3:    29 d1                              	sub ecx, edx
0x1cbb5:    8d 14 49                           	lea edx, [ecx + ecx*2]
0x1cbb8:    8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0x1cbbe:    8d 14 90                           	lea edx, [eax + edx*4]
0x1cbc1:    e9 2e fe ff ff                     	jmp 0x1c9f4
; function: function_1cbc6 at 0x1cbc6 -- 0x1cbf3
0x1cbc6:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x1cbca:    8b 7c 24 40                        	mov edi, dword ptr [esp + 0x40]
0x1cbce:    8b 49 04                           	mov ecx, dword ptr [ecx + 4]
0x1cbd1:    83 c7 04                           	add edi, 4
0x1cbd4:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1cbd8:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x1cbdc:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1cbe0:    81 c1 f8 01 00 00                  	add ecx, 0x1f8
0x1cbe6:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x1cbea:    89 7c 24 34                        	mov dword ptr [esp + 0x34], edi
0x1cbee:    e9 d3 fd ff ff                     	jmp 0x1c9c6
; function: function_1cbf3 at 0x1cbf3 -- 0x1cc14
0x1cbf3:    8b 7b 04                           	mov edi, dword ptr [ebx + 4]
0x1cbf6:    8d 4b 04                           	lea ecx, [ebx + 4]
0x1cbf9:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x1cbfd:    89 7c 24 50                        	mov dword ptr [esp + 0x50], edi
0x1cc01:    81 c7 f8 01 00 00                  	add edi, 0x1f8
0x1cc07:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1cc0b:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x1cc0f:    e9 87 fd ff ff                     	jmp 0x1c99b
; function: function_1cc14 at 0x1cc14 -- 0x1cc27
0x1cc14:    8b 43 04                           	mov eax, dword ptr [ebx + 4]
0x1cc17:    8d 4b 04                           	lea ecx, [ebx + 4]
0x1cc1a:    8d b8 f8 01 00 00                  	lea edi, [eax + 0x1f8]
0x1cc20:    89 c2                              	mov edx, eax
0x1cc22:    e9 e5 fd ff ff                     	jmp 0x1ca0c
; function: function_1cc27 at 0x1cc27 -- 0x1cc2e
0x1cc27:    31 d2                              	xor edx, edx
0x1cc29:    e9 4d fd ff ff                     	jmp 0x1c97b <function_1c97b>
; function: function_1cc2e at 0x1cc2e -- 0x1cc35
0x1cc2e:    31 ed                              	xor ebp, ebp
0x1cc30:    e9 ef fc ff ff                     	jmp 0x1c924 <function_1c924>
; function: function_1cc35 at 0x1cc35 -- 0x1cc4c
0x1cc35:    89 c8                              	mov eax, ecx
0x1cc37:    ba 31 0c c3 30                     	mov edx, 0x30c30c31
0x1cc3c:    f7 d0                              	not eax
0x1cc3e:    d1 e8                              	shr eax, 1
0x1cc40:    f7 e2                              	mul edx
0x1cc42:    c1 ea 02                           	shr edx, 2
0x1cc45:    f7 d2                              	not edx
0x1cc47:    e9 5f ff ff ff                     	jmp 0x1cbab
; function: function_1cc4c at 0x1cc4c -- 0x1cc90
0x1cc4c:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x1cc50:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x1cc57:    89 3c 24                           	mov dword ptr [esp], edi
0x1cc5a:    83 e8 0c                           	sub eax, 0xc
0x1cc5d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1cc61:    e8 fa bb 01 00                     	call 0x38860 <unknown_38860>
0x1cc66:    8b 5f 20                           	mov ebx, dword ptr [edi + 0x20]
0x1cc69:    8b 6f 24                           	mov ebp, dword ptr [edi + 0x24]
0x1cc6c:    8b 47 18                           	mov eax, dword ptr [edi + 0x18]
0x1cc6f:    8b 4f 1c                           	mov ecx, dword ptr [edi + 0x1c]
0x1cc72:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x1cc76:    8b 5f 08                           	mov ebx, dword ptr [edi + 8]
0x1cc79:    89 6c 24 38                        	mov dword ptr [esp + 0x38], ebp
0x1cc7d:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1cc80:    89 5c 24 34                        	mov dword ptr [esp + 0x34], ebx
0x1cc84:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x1cc87:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x1cc8b:    e9 6d fa ff ff                     	jmp 0x1c6fd
; function: function_1cc90 at 0x1cc90 -- 0x1ccbc
0x1cc90:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1cc94:    89 3c 24                           	mov dword ptr [esp], edi
0x1cc97:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1cc9b:    8d 9c 24 d0 00 00 00               	lea ebx, [esp + 0xd0]
0x1cca2:    e8 39 ba 01 00                     	call 0x386e0 <unknown_386e0>
0x1cca7:    8b 6f 10                           	mov ebp, dword ptr [edi + 0x10]
0x1ccaa:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x1ccad:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1ccb0:    8b 5f 14                           	mov ebx, dword ptr [edi + 0x14]
0x1ccb3:    89 6c 24 4c                        	mov dword ptr [esp + 0x4c], ebp
0x1ccb7:    e9 c2 fc ff ff                     	jmp 0x1c97e
; function: function_1ccbc at 0x1ccbc -- 0x1ccbd
; dynamically linked function: __stack_chk_fail at 0x1ccbd -- 0x1ccbe
; data inside code section at 0x1ccbe -- 0x1cccf
0x1ccbe:    ff ff ff 89 c6 89 1c 24  e8 c5 1d 01 00 89 34 24   |.......$......4$|
0x1ccce:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1cccf -- 0x1ccd0
; data inside code section at 0x1ccd0 -- 0x1ccd3
0x1ccd0:    ff ff ff                                           |...             |
; section: .text._ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_
; function: _ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_ at 0x1cce0 -- 0x1cdc3
0x1cce0:    83 ec 5c                           	sub esp, 0x5c
0x1cce3:    8b 44 24 68                        	mov eax, dword ptr [esp + 0x68]
0x1cce7:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x1cceb:    8b 74 24 64                        	mov esi, dword ptr [esp + 0x64]
0x1ccef:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x1ccf3:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1ccfa:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1ccfe:    31 d2                              	xor edx, edx
0x1cd00:    8b 18                              	mov ebx, dword ptr [eax]
0x1cd02:    3b 5e 08                           	cmp ebx, dword ptr [esi + 8]
0x1cd05:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1cd09:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1cd0d:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1cd11:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x1cd15:    0f 84 2d 01 00 00                  	je 0x1ce48 <function_1ce48>
0x1cd1b:    3b 5e 18                           	cmp ebx, dword ptr [esi + 0x18]
0x1cd1e:    74 60                              	je 0x1cd80 <_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_+0xa0>
0x1cd20:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x1cd23:    89 5c 24 2c                        	mov dword ptr [esp + 0x2c], ebx
0x1cd27:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x1cd2b:    8b 50 08                           	mov edx, dword ptr [eax + 8]
0x1cd2e:    8b 40 0c                           	mov eax, dword ptr [eax + 0xc]
0x1cd31:    89 6c 24 0c                        	mov dword ptr [esp + 0xc], ebp
0x1cd35:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1cd39:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x1cd3d:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1cd41:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1cd45:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1cd49:    89 3c 24                           	mov dword ptr [esp], edi
0x1cd4c:    e8 5f c4 01 00                     	call 0x391b0 <unknown_391b0>
0x1cd51:    83 ec 04                           	sub esp, 4
0x1cd54:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1cd58:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1cd5f:    89 f8                              	mov eax, edi
0x1cd61:    0f 85 5c 01 00 00                  	jne 0x1cec3 <function_1cec3>
0x1cd67:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x1cd6b:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1cd6f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x1cd73:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x1cd77:    83 c4 5c                           	add esp, 0x5c
0x1cd7a:    c2 04 00                           	ret 4
; data inside code section at 0x1cd7d -- 0x1cd80
0x1cd7d:    8d 76 00                                           |.v.             |
0x1cd80:    8b 46 20                           	mov eax, dword ptr [esi + 0x20]
0x1cd83:    8d 50 f4                           	lea edx, [eax - 0xc]
0x1cd86:    39 d3                              	cmp ebx, edx
0x1cd88:    0f 84 0a 01 00 00                  	je 0x1ce98 <function_1ce98>
0x1cd8e:    85 db                              	test ebx, ebx
0x1cd90:    0f 84 8a 00 00 00                  	je 0x1ce20 <function_1ce20>
0x1cd96:    8b 55 04                           	mov edx, dword ptr [ebp + 4]
0x1cd99:    2b 55 00                           	sub edx, dword ptr [ebp]
0x1cd9c:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x1cda4:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x1cdaa:    85 d2                              	test edx, edx
0x1cdac:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x1cdb3:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
0x1cdba:    74 14                              	je 0x1cdd0 <function_1cdd0>
0x1cdbc:    89 14 24                           	mov dword ptr [esp], edx
0x1cdbf:    89 54 24 14                        	mov dword ptr [esp + 0x14], edx
; data inside code section at 0x1cdc3 -- 0x1cdc4
0x1cdc3:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1cdc4 -- 0x1cdc5
; data inside code section at 0x1cdc5 -- 0x1cdd0
0x1cdc5:    ff ff ff 8b 54 24 14 89  44 24 18                  |....T$..D$.     |
; function: function_1cdd0 at 0x1cdd0 -- 0x1ce20
0x1cdd0:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1cdd4:    01 c2                              	add edx, eax
0x1cdd6:    89 03                              	mov dword ptr [ebx], eax
0x1cdd8:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1cddb:    89 53 08                           	mov dword ptr [ebx + 8], edx
0x1cdde:    8b 4d 04                           	mov ecx, dword ptr [ebp + 4]
0x1cde1:    8b 6d 00                           	mov ebp, dword ptr [ebp]
0x1cde4:    39 e9                              	cmp ecx, ebp
0x1cde6:    89 6c 24 1c                        	mov dword ptr [esp + 0x1c], ebp
0x1cdea:    74 27                              	je 0x1ce13 <function_1cdd0+0x43>
0x1cdec:    8b 54 24 18                        	mov edx, dword ptr [esp + 0x18]
0x1cdf0:    89 e8                              	mov eax, ebp
0x1cdf2:    89 cd                              	mov ebp, ecx
0x1cdf4:    8d 74 26 00                        	lea esi, [esi]
0x1cdf8:    85 d2                              	test edx, edx
0x1cdfa:    74 05                              	je 0x1ce01 <function_1cdd0+0x31>
0x1cdfc:    0f b6 08                           	movzx ecx, byte ptr [eax]
0x1cdff:    88 0a                              	mov byte ptr [edx], cl
0x1ce01:    83 c0 01                           	add eax, 1
0x1ce04:    83 c2 01                           	add edx, 1
0x1ce07:    39 e8                              	cmp eax, ebp
0x1ce09:    75 ed                              	jne 0x1cdf8 <function_1cdd0+0x28>
0x1ce0b:    2b 44 24 1c                        	sub eax, dword ptr [esp + 0x1c]
0x1ce0f:    01 44 24 18                        	add dword ptr [esp + 0x18], eax
0x1ce13:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1ce17:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1ce1a:    8b 5e 18                           	mov ebx, dword ptr [esi + 0x18]
0x1ce1d:    8b 46 20                           	mov eax, dword ptr [esi + 0x20]
; function: function_1ce20 at 0x1ce20 -- 0x1ce43
0x1ce20:    83 c3 0c                           	add ebx, 0xc
0x1ce23:    89 5e 18                           	mov dword ptr [esi + 0x18], ebx
0x1ce26:    8b 56 1c                           	mov edx, dword ptr [esi + 0x1c]
0x1ce29:    8b 4e 24                           	mov ecx, dword ptr [esi + 0x24]
0x1ce2c:    39 da                              	cmp edx, ebx
0x1ce2e:    74 58                              	je 0x1ce88 <function_1ce88>
0x1ce30:    83 eb 0c                           	sub ebx, 0xc
0x1ce33:    89 1f                              	mov dword ptr [edi], ebx
0x1ce35:    89 57 04                           	mov dword ptr [edi + 4], edx
0x1ce38:    89 47 08                           	mov dword ptr [edi + 8], eax
0x1ce3b:    89 4f 0c                           	mov dword ptr [edi + 0xc], ecx
0x1ce3e:    e9 11 ff ff ff                     	jmp 0x1cd54
; data inside code section at 0x1ce43 -- 0x1ce48
0x1ce43:    90 8d 74 26 00                                     |..t&.           |
; function: function_1ce48 at 0x1ce48 -- 0x1ce82
0x1ce48:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1ce4b:    39 c3                              	cmp ebx, eax
0x1ce4d:    74 60                              	je 0x1ceaf <function_1ceaf>
0x1ce4f:    83 eb 0c                           	sub ebx, 0xc
0x1ce52:    74 15                              	je 0x1ce69 <function_1ce48+0x21>
0x1ce54:    89 1c 24                           	mov dword ptr [esp], ebx
0x1ce57:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1ce5b:    e8 50 25 01 00                     	call 0x2f3b0 <function_2f3b0>
0x1ce60:    8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0x1ce63:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1ce66:    83 eb 0c                           	sub ebx, 0xc
0x1ce69:    89 5e 08                           	mov dword ptr [esi + 8], ebx
0x1ce6c:    89 47 04                           	mov dword ptr [edi + 4], eax
0x1ce6f:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x1ce72:    89 1f                              	mov dword ptr [edi], ebx
0x1ce74:    89 47 08                           	mov dword ptr [edi + 8], eax
0x1ce77:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1ce7a:    89 47 0c                           	mov dword ptr [edi + 0xc], eax
0x1ce7d:    e9 d2 fe ff ff                     	jmp 0x1cd54
; data inside code section at 0x1ce82 -- 0x1ce88
0x1ce82:    8d b6 00 00 00 00                                  |......          |
; function: function_1ce88 at 0x1ce88 -- 0x1ce98
0x1ce88:    8b 51 fc                           	mov edx, dword ptr [ecx - 4]
0x1ce8b:    83 e9 04                           	sub ecx, 4
0x1ce8e:    8d 9a f8 01 00 00                  	lea ebx, [edx + 0x1f8]
0x1ce94:    89 d8                              	mov eax, ebx
0x1ce96:    eb 98                              	jmp 0x1ce30
; function: function_1ce98 at 0x1ce98 -- 0x1ceaf
0x1ce98:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1ce9c:    89 34 24                           	mov dword ptr [esp], esi
0x1ce9f:    e8 cc c1 01 00                     	call 0x39070 <unknown_39070>
0x1cea4:    8b 5e 18                           	mov ebx, dword ptr [esi + 0x18]
0x1cea7:    8b 46 20                           	mov eax, dword ptr [esi + 0x20]
0x1ceaa:    e9 77 ff ff ff                     	jmp 0x1ce26
; function: function_1ceaf at 0x1ceaf -- 0x1cec3
0x1ceaf:    89 6c 24 04                        	mov dword ptr [esp + 4], ebp
0x1ceb3:    89 34 24                           	mov dword ptr [esp], esi
0x1ceb6:    e8 35 c0 01 00                     	call 0x38ef0 <unknown_38ef0>
0x1cebb:    8b 5e 08                           	mov ebx, dword ptr [esi + 8]
0x1cebe:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1cec1:    eb a9                              	jmp 0x1ce6c
; function: function_1cec3 at 0x1cec3 -- 0x1cec4
; dynamically linked function: __stack_chk_fail at 0x1cec4 -- 0x1cec5
; data inside code section at 0x1cec5 -- 0x1cec8
0x1cec5:    ff ff ff                                           |...             |
; section: .text._ZN5CNode10EndMessageEv
; function: _ZN5CNode10EndMessageEv at 0x1ced0 -- 0x1cf07
0x1ced0:    55                                 	push ebp
0x1ced1:    57                                 	push edi
0x1ced2:    56                                 	push esi
0x1ced3:    53                                 	push ebx
0x1ced4:    81 ec bc 00 00 00                  	sub esp, 0xbc
0x1ceda:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1cee0:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x1cee7:    31 c0                              	xor eax, eax
0x1cee9:    8d 54 24 58                        	lea edx, [esp + 0x58]
0x1ceed:    8b 9c 24 d0 00 00 00               	mov ebx, dword ptr [esp + 0xd0]
0x1cef4:    8d 44 24 6a                        	lea eax, [esp + 0x6a]
0x1cef8:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1cefc:    c7 44 24 04 6e a2 00 00            	mov dword ptr [esp + 4], 0xa26e ; "-dropmessagestest"
0x1cf04:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x1cf07 -- 0x1cf08
0x1cf07:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1cf08 -- 0x1cf09
; data inside code section at 0x1cf09 -- 0x1cf0e
0x1cf09:    ff ff ff 8b 35                                     |....5           |
; dynamically linked function: mapArgs at 0x1cf0e -- 0x1cf22
; data inside code section at 0x1cf22 -- 0x1cf26
0x1cf22:    c7 44 24 14                                        |.D$.            |
; dynamically linked function: mapArgs at 0x1cf26 -- 0x1cf35
; data inside code section at 0x1cf35 -- 0x1cf38
0x1cf35:    8d 76 00                                           |.v.             |
; function: function_1cf38 at 0x1cf38 -- 0x1cf43
0x1cf38:    89 74 24 14                        	mov dword ptr [esp + 0x14], esi
0x1cf3c:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x1cf3f:    85 f6                              	test esi, esi
0x1cf41:    74 2f                              	je 0x1cf72
; function: function_1cf43 at 0x1cf43 -- 0x1cf5d
0x1cf43:    8b 46 10                           	mov eax, dword ptr [esi + 0x10]
0x1cf46:    89 ea                              	mov edx, ebp
0x1cf48:    8b 78 f4                           	mov edi, dword ptr [eax - 0xc]
0x1cf4b:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x1cf4f:    89 04 24                           	mov dword ptr [esp], eax
0x1cf52:    39 ef                              	cmp edi, ebp
0x1cf54:    0f 46 d7                           	cmovbe edx, edi
0x1cf57:    29 ef                              	sub edi, ebp
0x1cf59:    89 54 24 08                        	mov dword ptr [esp + 8], edx
; data inside code section at 0x1cf5d -- 0x1cf5e
0x1cf5d:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1cf5e -- 0x1cf5f
; data inside code section at 0x1cf5f -- 0x1cf72
0x1cf5f:    ff ff ff 85 c0 0f 44 c7  85 c0 79 cd 8b 76 0c 85   |......D...y..v..|
0x1cf6f:    f6 75 d1                                           |.u.             |
; function: function_1cf72 at 0x1cf72 -- 0x1cf73
; data inside code section at 0x1cf73 -- 0x1cf76
0x1cf73:    7c 24 14                                           ||$.             |
; dynamically linked function: mapArgs at 0x1cf76 -- 0x1cfa6
; data inside code section at 0x1cfa6 -- 0x1cfa7
0x1cfa6:    e8                                                 |.               |
; dynamically linked function: memcmp at 0x1cfa7 -- 0x1cfa8
; data inside code section at 0x1cfa8 -- 0x1cfce
0x1cfa8:    ff ff ff 85 c0 0f 44 c5  31 ff 85 c0 78 66 8d 44   |......D.1...xf.D|
0x1cfb8:    24 6b 8d 74 24 5c 89 44  24 08 c7 44 24 04 6e a2   |$k.t$\.D$..D$.n.|
0x1cfc8:    00 00 89 34 24 e8                                  |...4$.          |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1cfce -- 0x1cfcf
; data inside code section at 0x1cfcf -- 0x1cff8
0x1cfcf:    ff ff ff 89 74 24 04 c7  04 24 00 00 00 00 e8 9e   |....t$...$......|
0x1cfdf:    9d 01 00 c7 44 24 08 0a  00 00 00 c7 44 24 04 00   |....D$......D$..|
0x1cfef:    00 00 00 8b 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: strtol at 0x1cff8 -- 0x1cff9
; data inside code section at 0x1cff9 -- 0x1cffd
0x1cff9:    ff ff ff 89                                        |....            |
; function: function_1cffd at 0x1cffd -- 0x1d000
0x1cffd:    c2 c1 fa                           	ret 0xfac1
; data inside code section at 0x1d000 -- 0x1d009
0x1d000:    1f 89 04 24 89 54 24 04  e8                        |...$.T$..       |
; dynamically linked function: _Z7GetRandy at 0x1d009 -- 0x1d00a
; data inside code section at 0x1d00a -- 0x1d018
0x1d00a:    ff ff ff 09 d0 0f 94 c0  89 c7 89 34 24 e8         |...........4$.  |
; dynamically linked function: _ZNSsD1Ev at 0x1d018 -- 0x1d019
; data inside code section at 0x1d019 -- 0x1d01c
0x1d019:    ff ff ff                                           |...             |
; function: function_1d01c at 0x1d01c -- 0x1d023
0x1d01c:    8d 54 24 58                        	lea edx, [esp + 0x58]
0x1d020:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x1d023 -- 0x1d024
0x1d023:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x1d024 -- 0x1d025
; data inside code section at 0x1d025 -- 0x1d075
0x1d025:    ff ff ff 89 f8 84 c0 0f  85 96 02 00 00 8b 4b 0c   |..............K.|
0x1d035:    8b 43 10 8b 53 18 29 c8  39 d0 0f 84 62 02 00 00   |.C..S.).9...b...|
0x1d045:    29 d0 8d 70 e8 89 74 24  60 8d bc 24 8c 00 00 00   |)..p..t$`..$....|
0x1d055:    89 74 11 10 8b 53 10 8b  43 0c 03 43 18 c7 84 24   |.t...S..C..C...$|
0x1d065:    8c 00 00 00 00 00 00 00  89 d1 83 c0 18 29 c1 39   |.............).9|
; function: function_1d075 at 0x1d075 -- 0x1d078
0x1d075:    c2 ba 20                           	ret 0x20ba
; function: function_1d078 at 0x1d078 -- 0x1d080
0x1d078:    13 03                              	adc eax, dword ptr [ebx]
0x1d07a:    00 0f                              	add byte ptr [edi], cl
0x1d07c:    44                                 	inc esp
0x1d07d:    c2 89 4c                           	ret 0x4c89
; data inside code section at 0x1d080 -- 0x1d0d7
0x1d080:    24 04 89 7c 24 08 c7 84  24 90 00 00 00 00 00 00   |$..|$...$.......|
0x1d090:    00 c7 84 24 94 00 00 00  00 00 00 00 c7 84 24 98   |...$..........$.|
0x1d0a0:    00 00 00 00 00 00 00 c7  84 24 9c 00 00 00 00 00   |.........$......|
0x1d0b0:    00 00 c7 84 24 a0 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0x1d0c0:    a4 00 00 00 00 00 00 00  c7 84 24 a8 00 00 00 00   |..........$.....|
0x1d0d0:    00 00 00 89 04 24 e8                               |.....$.         |
; dynamically linked function: SHA256 at 0x1d0d7 -- 0x1d0d8
; data inside code section at 0x1d0d8 -- 0x1d138
0x1d0d8:    ff ff ff 8d 44 24 6c 89  3c 24 c7 44 24 6c 00 00   |....D$l.<$.D$l..|
0x1d0e8:    00 00 c7 44 24 70 00 00  00 00 c7 44 24 74 00 00   |...D$p.....D$t..|
0x1d0f8:    00 00 c7 44 24 78 00 00  00 00 c7 44 24 7c 00 00   |...D$x.....D$|..|
0x1d108:    00 00 c7 84 24 80 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0x1d118:    84 00 00 00 00 00 00 00  c7 84 24 88 00 00 00 00   |..........$.....|
0x1d128:    00 00 00 89 44 24 08 c7  44 24 04 20 00 00 00 e8   |....D$..D$. ....|
; dynamically linked function: SHA256 at 0x1d138 -- 0x1d139
; data inside code section at 0x1d139 -- 0x1d160
0x1d139:    ff ff ff 8b 4b 0c 8b 43  10 8b 53 18 8b 7c 24 6c   |....K..C..S..|$l|
0x1d149:    29 c8 29 d0 83 f8 17 89  7c 24 64 0f 86 46 02 00   |).).....|$d..F..|
0x1d159:    00 89 7c 11 14 80 3d                               |..|...=         |
; dynamically linked function: fDebug at 0x1d160 -- 0x1d1da
; data inside code section at 0x1d1da -- 0x1d1db
0x1d1da:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1d1db -- 0x1d1dc
; data inside code section at 0x1d1dc -- 0x1d1e3
0x1d1dc:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x1d1e3 -- 0x1d1e4
; data inside code section at 0x1d1e4 -- 0x1d1e7
0x1d1e4:    ff ff ff                                           |...             |
; function: function_1d1e7 at 0x1d1e7 -- 0x1d235
0x1d1e7:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1d1eb:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x1d1ee:    8b 08                              	mov ecx, dword ptr [eax]
0x1d1f0:    89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0x1d1f3:    8b 48 04                           	mov ecx, dword ptr [eax + 4]
0x1d1f6:    89 10                              	mov dword ptr [eax], edx
0x1d1f8:    8b 53 10                           	mov edx, dword ptr [ebx + 0x10]
0x1d1fb:    89 4b 10                           	mov dword ptr [ebx + 0x10], ecx
0x1d1fe:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x1d201:    89 50 04                           	mov dword ptr [eax + 4], edx
0x1d204:    8b 53 14                           	mov edx, dword ptr [ebx + 0x14]
0x1d207:    89 4b 14                           	mov dword ptr [ebx + 0x14], ecx
0x1d20a:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1d20d:    8b 73 0c                           	mov esi, dword ptr [ebx + 0xc]
0x1d210:    8b 43 14                           	mov eax, dword ptr [ebx + 0x14]
0x1d213:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x1d21a:    c7 43 10 00 00 00 00               	mov dword ptr [ebx + 0x10], 0
0x1d221:    85 f6                              	test esi, esi
0x1d223:    c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0x1d22a:    74 16                              	je 0x1d242 <function_1d242>
0x1d22c:    29 f0                              	sub eax, esi
0x1d22e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1d232:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1d235 -- 0x1d236
0x1d235:    e8                                                 |.               |
; dynamically linked function: OPENSSL_cleanse at 0x1d236 -- 0x1d237
; data inside code section at 0x1d237 -- 0x1d23e
0x1d237:    ff ff ff 89 34 24 e8                               |....4$.         |
; dynamically linked function: _ZdlPv at 0x1d23e -- 0x1d23f
; data inside code section at 0x1d23f -- 0x1d242
0x1d23f:    ff ff ff                                           |...             |
; function: function_1d242 at 0x1d242 -- 0x1d25d
0x1d242:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1d246:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x1d249:    2b 10                              	sub edx, dword ptr [eax]
0x1d24b:    01 53 28                           	add dword ptr [ebx + 0x28], edx
0x1d24e:    3b 43 40                           	cmp eax, dword ptr [ebx + 0x40]
0x1d251:    0f 84 16 01 00 00                  	je 0x1d36d <function_1d36d>
0x1d257:    8d 73 60                           	lea esi, [ebx + 0x60]
0x1d25a:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1d25d -- 0x1d25e
0x1d25d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x1d25e -- 0x1d25f
; data inside code section at 0x1d25f -- 0x1d27e
0x1d25f:    ff ff ff 85 c0 0f 85 10  01 00 00 8b 83 b0 00 00   |................|
0x1d26f:    00 83 e8 01 85 c0 89 83  b0 00 00 00 75 07 c6      |............u.. |
; function: function_1d27e at 0x1d27e -- 0x1d286
0x1d27e:    83 a8 00 00 00 00 83               	sub dword ptr [eax], -0x7d
0x1d285:    c3                                 	ret 
; data inside code section at 0x1d286 -- 0x1d28b
0x1d286:    78 89 1c 24 e8                                     |x..$.           |
; dynamically linked function: pthread_cond_signal at 0x1d28b -- 0x1d28c
; data inside code section at 0x1d28c -- 0x1d29b
0x1d28c:    ff ff ff 85 c0 0f 85 e8  00 00 00 89 34 24 e8      |............4$. |
; dynamically linked function: pthread_mutex_unlock at 0x1d29b -- 0x1d29c
; data inside code section at 0x1d29c -- 0x1d29e
0x1d29c:    ff ff                                              |..              |
; function: function_1d29e at 0x1d29e -- 0x1d2c6
0x1d29e:    ff 85 c0 0f 85 de                  	inc dword ptr [ebp - 0x217af040]
0x1d2a4:    00 00                              	add byte ptr [eax], al
0x1d2a6:    00 8b 84 24 ac 00                  	add byte ptr [ebx + 0xac2484], cl
0x1d2ac:    00 00                              	add byte ptr [eax], al
0x1d2ae:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1d2b5:    0f 85 19 01 00 00                  	jne 0x1d3d4 <function_1d3d4>
0x1d2bb:    81 c4 bc 00 00 00                  	add esp, 0xbc
0x1d2c1:    5b                                 	pop ebx
0x1d2c2:    5e                                 	pop esi
0x1d2c3:    5f                                 	pop edi
0x1d2c4:    5d                                 	pop ebp
0x1d2c5:    c3                                 	ret 
; data inside code section at 0x1d2c6 -- 0x1d2d3
0x1d2c6:    66 90 c7 04 24 18 dc 00  00 8d 73 60 e8            |f...$.....s`.   |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1d2d3 -- 0x1d2d4
; data inside code section at 0x1d2d4 -- 0x1d2e8
0x1d2d4:    ff ff ff 8b 43 0c c7 43  18 00 00 00 00 89 43 10   |....C..C......C.|
0x1d2e4:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: pthread_mutex_lock at 0x1d2e8 -- 0x1d2e9
; data inside code section at 0x1d2e9 -- 0x1d2ef
0x1d2e9:    ff ff ff 85 c0 0f                                  |......          |
; function: function_1d2ef at 0x1d2ef -- 0x1d309
0x1d2ef:    85 86 00 00 00 8b                  	test dword ptr [esi - 0x75000000], eax
0x1d2f5:    83 b0 00 00 00 83 e8               	xor dword ptr [eax - 0x7d000000], 0xffffffe8
0x1d2fc:    01 85 c0 89 83 b0                  	add dword ptr [ebp - 0x4f7c7640], eax
0x1d302:    00 00                              	add byte ptr [eax], al
0x1d304:    00 74 39 83                        	add byte ptr [ecx + edi - 0x7d], dh
0x1d308:    c3                                 	ret 
; data inside code section at 0x1d309 -- 0x1d30e
0x1d309:    78 89 1c 24 e8                                     |x..$.           |
; dynamically linked function: pthread_cond_signal at 0x1d30e -- 0x1d30f
; data inside code section at 0x1d30f -- 0x1d31a
0x1d30f:    ff ff ff 85 c0 75 69 89  34 24 e8                  |.....ui.4$.     |
; dynamically linked function: pthread_mutex_unlock at 0x1d31a -- 0x1d31b
; data inside code section at 0x1d31b -- 0x1d324
0x1d31b:    ff ff ff 85 c0 75 63 80  3d                        |.....uc.=       |
; dynamically linked function: fDebug at 0x1d324 -- 0x1d32d
; data inside code section at 0x1d32d -- 0x1d337
0x1d32d:    ff ff c7 04 24 ef 9f 00  00 e8                     |....$.....      |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1d337 -- 0x1d338
; data inside code section at 0x1d338 -- 0x1d33b
0x1d338:    ff ff ff                                           |...             |
; function: function_1d33b at 0x1d33b -- 0x1d340
0x1d33b:    e9 67 ff ff ff                     	jmp 0x1d2a7
; function: function_1d340 at 0x1d340 -- 0x1d349
0x1d340:    c6 83 a8 00 00 00 00               	mov byte ptr [ebx + 0xa8], 0
0x1d347:    eb be                              	jmp 0x1d307
; data inside code section at 0x1d349 -- 0x1d350
0x1d349:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1d350 at 0x1d350 -- 0x1d357
0x1d350:    31 ff                              	xor edi, edi
0x1d352:    e9 c5 fc ff ff                     	jmp 0x1d01c <function_1d01c>
; data inside code section at 0x1d357 -- 0x1d364
0x1d357:    90 89 74 24 04 c7 04 24  80 a2 00 00 e8            |..t$...$.....   |
; dynamically linked function: _Z18OutputDebugStringFPKcz at 0x1d364 -- 0x1d365
; data inside code section at 0x1d365 -- 0x1d368
0x1d365:    ff ff ff                                           |...             |
; function: function_1d368 at 0x1d368 -- 0x1d36d
0x1d368:    e9 fe fd ff ff                     	jmp 0x1d16b
; function: function_1d36d at 0x1d36d -- 0x1d37a
0x1d36d:    89 1c 24                           	mov dword ptr [esp], ebx
0x1d370:    e8 7b 19 00 00                     	call 0x1ecf0 <function_1ecf0>
0x1d375:    e9 dd fe ff ff                     	jmp 0x1d257
; data inside code section at 0x1d37a -- 0x1d37b
0x1d37a:    e8                                                 |.               |
; function: function_1d37b at 0x1d37b -- 0x1d37c
0x1d37b:    c3                                 	ret 
; data inside code section at 0x1d37c -- 0x1d38b
0x1d37c:    db 00 00 90 e8 29 dd 00  00 e8 ec db 00 00 89      |.....)......... |
; function: function_1d38b at 0x1d38b -- 0x1d38c
0x1d38b:    c3                                 	ret 
; function: function_1d38c at 0x1d38c -- 0x1d38d
; data inside code section at 0x1d38d -- 0x1d394
0x1d38d:    54 24 58 89 14 24 e8                               |T$X..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1d394 -- 0x1d395
; data inside code section at 0x1d395 -- 0x1d398
0x1d395:    ff ff ff                                           |...             |
; function: function_1d398 at 0x1d398 -- 0x1d399
; data inside code section at 0x1d399 -- 0x1d39c
0x1d399:    1c 24 e8                                           |.$.             |
; dynamically linked function: _Unwind_Resume at 0x1d39c -- 0x1d39d
; data inside code section at 0x1d39d -- 0x1d3c0
0x1d39d:    ff ff ff c7 44 24 0c b2  7a 02 00 c7 44 24 08 b6   |....D$..z...D$..|
0x1d3ad:    01 00 00 c7 44 24 04 5b  a2 00 00 c7 04 24 3c dc   |....D$.[.....$<.|
0x1d3bd:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x1d3c0 -- 0x1d3c1
; data inside code section at 0x1d3c1 -- 0x1d3c5
0x1d3c1:    ff ff ff 89                                        |....            |
; function: function_1d3c5 at 0x1d3c5 -- 0x1d3c6
0x1d3c5:    c3                                 	ret 
; data inside code section at 0x1d3c6 -- 0x1d3ca
0x1d3c6:    89 34 24 e8                                        |.4$.            |
; dynamically linked function: _ZNSsD1Ev at 0x1d3ca -- 0x1d3cb
; data inside code section at 0x1d3cb -- 0x1d3ce
0x1d3cb:    ff ff ff                                           |...             |
; function: function_1d3ce at 0x1d3ce -- 0x1d3d0
0x1d3ce:    eb bc                              	jmp 0x1d38c <function_1d38c>
; function: function_1d3d0 at 0x1d3d0 -- 0x1d3d4
0x1d3d0:    89 c3                              	mov ebx, eax
0x1d3d2:    eb c4                              	jmp 0x1d398 <function_1d398>
; function: function_1d3d4 at 0x1d3d4 -- 0x1d3d5
; dynamically linked function: __stack_chk_fail at 0x1d3d5 -- 0x1d3d6
; data inside code section at 0x1d3d6 -- 0x1d3d8
0x1d3d6:    ff ff                                              |..              |
; function: function_1d3d8 at 0x1d3d8 -- 0x1d3e5
0x1d3d8:    ff 89 c3 89 34 24                  	dec dword ptr [ecx + 0x243489c3]
0x1d3de:    e8 ad 20 01 00                     	call 0x2f490 <function_2f490>
0x1d3e3:    eb b3                              	jmp 0x1d398 <function_1d398>
; section: .text._ZN5CNodeC2Ej8CAddressSsb
; function: _ZN5CNodeC1Ej8CAddressSsb at 0x1d3f0 -- 0x1d53d
0x1d3f0:    55                                 	push ebp
0x1d3f1:    57                                 	push edi
0x1d3f2:    56                                 	push esi
0x1d3f3:    53                                 	push ebx
0x1d3f4:    81 ec cc 00 00 00                  	sub esp, 0xcc
0x1d3fa:    8b 84 24 10 01 00 00               	mov eax, dword ptr [esp + 0x110]
0x1d401:    8b 9c 24 e0 00 00 00               	mov ebx, dword ptr [esp + 0xe0]
0x1d408:    0f b6 94 24 14 01 00 00            	movzx edx, byte ptr [esp + 0x114]
0x1d410:    8b b4 24 e4 00 00 00               	mov esi, dword ptr [esp + 0xe4]
0x1d417:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1d41b:    8b 84 24 e8 00 00 00               	mov eax, dword ptr [esp + 0xe8]
0x1d422:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
0x1d429:    88 54 24 33                        	mov byte ptr [esp + 0x33], dl
0x1d42d:    8d 53 38                           	lea edx, [ebx + 0x38]
0x1d430:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x1d434:    8b 84 24 ec 00 00 00               	mov eax, dword ptr [esp + 0xec]
0x1d43b:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x1d43f:    8b 84 24 f0 00 00 00               	mov eax, dword ptr [esp + 0xf0]
0x1d446:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x1d44a:    8b 84 24 f4 00 00 00               	mov eax, dword ptr [esp + 0xf4]
0x1d451:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x1d455:    8b 84 24 f8 00 00 00               	mov eax, dword ptr [esp + 0xf8]
0x1d45c:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x1d460:    8b 84 24 fc 00 00 00               	mov eax, dword ptr [esp + 0xfc]
0x1d467:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x1d46b:    8b 84 24 00 01 00 00               	mov eax, dword ptr [esp + 0x100]
0x1d472:    89 44 24 60                        	mov dword ptr [esp + 0x60], eax
0x1d476:    8b 84 24 04 01 00 00               	mov eax, dword ptr [esp + 0x104]
0x1d47d:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x1d481:    8b 84 24 08 01 00 00               	mov eax, dword ptr [esp + 0x108]
0x1d488:    89 44 24 68                        	mov dword ptr [esp + 0x68], eax
0x1d48c:    8b 84 24 0c 01 00 00               	mov eax, dword ptr [esp + 0x10c]
0x1d493:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x1d497:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1d49d:    89 84 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], eax
0x1d4a4:    31 c0                              	xor eax, eax
0x1d4a6:    c7 43 10 00 00 00 00               	mov dword ptr [ebx + 0x10], 0
0x1d4ad:    c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0x1d4b4:    c7 43 18 00 00 00 00               	mov dword ptr [ebx + 0x18], 0
0x1d4bb:    c7 43 20 01 00 00 00               	mov dword ptr [ebx + 0x20], 1
0x1d4c2:    c7 43 24 d1 00 00 00               	mov dword ptr [ebx + 0x24], 0xd1
0x1d4c9:    66 c7 43 1c 00 00                  	mov word ptr [ebx + 0x1c], 0
0x1d4cf:    66 c7 43 1e 05 00                  	mov word ptr [ebx + 0x1e], 5
0x1d4d5:    c7 43 38 00 00 00 00               	mov dword ptr [ebx + 0x38], 0
0x1d4dc:    c7 43 3c 00 00 00 00               	mov dword ptr [ebx + 0x3c], 0
0x1d4e3:    c7 43 40 00 00 00 00               	mov dword ptr [ebx + 0x40], 0
0x1d4ea:    c7 43 44 00 00 00 00               	mov dword ptr [ebx + 0x44], 0
0x1d4f1:    c7 43 48 00 00 00 00               	mov dword ptr [ebx + 0x48], 0
0x1d4f8:    c7 43 4c 00 00 00 00               	mov dword ptr [ebx + 0x4c], 0
0x1d4ff:    c7 43 50 00 00 00 00               	mov dword ptr [ebx + 0x50], 0
0x1d506:    c7 43 54 00 00 00 00               	mov dword ptr [ebx + 0x54], 0
0x1d50d:    c7 43 58 00 00 00 00               	mov dword ptr [ebx + 0x58], 0
0x1d514:    c7 43 5c 00 00 00 00               	mov dword ptr [ebx + 0x5c], 0
0x1d51b:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x1d51f:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x1d527:    89 14 24                           	mov dword ptr [esp], edx
0x1d52a:    e8 a1 50 01 00                     	call 0x325d0 <function_325d0>
0x1d52f:    8d 6b 60                           	lea ebp, [ebx + 0x60]
0x1d532:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x1d53a:    89 2c 24                           	mov dword ptr [esp], ebp
; data inside code section at 0x1d53d -- 0x1d53e
0x1d53d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x1d53e -- 0x1d53f
; data inside code section at 0x1d53f -- 0x1d559
0x1d53f:    ff ff ff 85 c0 0f 85 71  0b 00 00 8d 43 78 c7 44   |.......q....Cx.D|
0x1d54f:    24 04 00 00 00 00 89 04  24 e8                     |$.......$.      |
; dynamically linked function: pthread_cond_init at 0x1d559 -- 0x1d55a
; data inside code section at 0x1d55a -- 0x1d688
0x1d55a:    ff ff ff 85 c0 0f 85 b3  08 00 00 c6 83 a8 00 00   |................|
0x1d56a:    00 00 8d 83 b4 00 00 00  c7 83 b0 00 00 00 00 00   |................|
0x1d57a:    00 00 c7 83 b4 00 00 00  00 00 00 00 c7 83 b8 00   |................|
0x1d58a:    00 00 00 00 00 00 c7 83  bc 00 00 00 00 00 00 00   |................|
0x1d59a:    c7 83 c0 00 00 00 00 00  00 00 c7 83 c4 00 00 00   |................|
0x1d5aa:    00 00 00 00 c7 83 c8 00  00 00 00 00 00 00 c7 83   |................|
0x1d5ba:    cc 00 00 00 00 00 00 00  c7 83 d0 00 00 00 00 00   |................|
0x1d5ca:    00 00 c7 83 d4 00 00 00  00 00 00 00 c7 83 d8 00   |................|
0x1d5da:    00 00 00 00 00 00 89 44  24 28 c7 44 24 04 00 00   |.......D$(.D$...|
0x1d5ea:    00 00 89 04 24 e8 2c 53  01 00 c7 83 dc 00 00 00   |....$.,S........|
0x1d5fa:    00 00 00 00 8d 93 dc 00  00 00 c7 83 e0 00 00 00   |................|
0x1d60a:    00 00 00 00 c7 83 e4 00  00 00 00 00 00 00 c7 83   |................|
0x1d61a:    e8 00 00 00 00 00 00 00  c7 83 ec 00 00 00 00 00   |................|
0x1d62a:    00 00 c7 83 f0 00 00 00  00 00 00 00 c7 83 f4 00   |................|
0x1d63a:    00 00 00 00 00 00 c7 83  f8 00 00 00 00 00 00 00   |................|
0x1d64a:    c7 83 fc 00 00 00 00 00  00 00 c7 83 00 01 00 00   |................|
0x1d65a:    00 00 00 00 89 54 24 2c  c7 44 24 04 00 00 00 00   |.....T$,.D$.....|
0x1d66a:    89 14 24 e8 ee 53 01 00  8d 83 04 01 00 00 89 44   |..$..S.........D|
0x1d67a:    24 24 c7 44 24 04 00 00  00 00 89 04 24 e8         |$$.D$.......$.  |
; dynamically linked function: pthread_mutex_init at 0x1d688 -- 0x1d689
; data inside code section at 0x1d689 -- 0x1d6a6
0x1d689:    ff ff ff 85 c0 0f 85 48  0a 00 00 8d 83 1c 01 00   |.......H........|
0x1d699:    00 c7 44 24 04 00 00 00  00 89 04 24 e8            |..D$.......$.   |
; dynamically linked function: pthread_cond_init at 0x1d6a6 -- 0x1d6a7
; data inside code section at 0x1d6a7 -- 0x1d6d1
0x1d6a7:    ff ff ff 85 c0 0f 85 2e  07 00 00 8d 83 84 01 00   |................|
0x1d6b7:    00 c6 83 4c 01 00 00 00  c7 83 54 01 00 00 00 00   |...L......T.....|
0x1d6c7:    00 00 89 44 24 40 89 04  24 e8                     |...D$@..$.      |
; dynamically linked function: _ZN8CAddressC1Ev at 0x1d6d1 -- 0x1d6d2
; data inside code section at 0x1d6d2 -- 0x1d6db
0x1d6d2:    ff ff ff c7 83 ac 01 00  00                        |.........       |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1d6db -- 0x1d6e8
; data inside code section at 0x1d6e8 -- 0x1d6e9
0x1d6e8:    e8                                                 |.               |
; dynamically linked function: _ZN8CServiceC1Ev at 0x1d6e9 -- 0x1d6ea
; data inside code section at 0x1d6ea -- 0x1d6f3
0x1d6ea:    ff ff ff c7 83 c8 01 00  00                        |.........       |
; dynamically linked function: _ZNSs4_Rep20_S_empty_rep_storageE at 0x1d6f3 -- 0x1d71d
; data inside code section at 0x1d71d -- 0x1d71e
0x1d71d:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x1d71e -- 0x1d71f
; data inside code section at 0x1d71f -- 0x1d73c
0x1d71f:    ff ff ff 85 c0 0f 85 e1  09 00 00 8d 83 f4 01 00   |................|
0x1d72f:    00 c7 44 24 04 00 00 00  00 89 04 24 e8            |..D$.......$.   |
; dynamically linked function: pthread_cond_init at 0x1d73c -- 0x1d73d
; data inside code section at 0x1d73d -- 0x1d95f
0x1d73d:    ff ff ff 85 c0 0f 85 60  07 00 00 8d 83 98 02 00   |.......`........|
0x1d74d:    00 89 83 a0 02 00 00 89  83 a4 02 00 00 8d 83 b4   |................|
0x1d75d:    02 00 00 89 83 bc 02 00  00 89 83 c0 02 00 00 8d   |................|
0x1d76d:    83 cc 02 00 00 c6 83 24  02 00 00 00 c7 83 2c 02   |.......$......,.|
0x1d77d:    00 00 00 00 00 00 c7 83  3c 02 00 00 00 00 00 00   |........<.......|
0x1d78d:    c7 83 40 02 00 00 00 00  00 00 c7 83 44 02 00 00   |..@.........D...|
0x1d79d:    00 00 00 00 c7 83 48 02  00 00 00 00 00 00 c7 83   |......H.........|
0x1d7ad:    4c 02 00 00 00 00 00 00  c7 83 50 02 00 00 00 00   |L.........P.....|
0x1d7bd:    00 00 c7 83 54 02 00 00  00 00 00 00 c7 83 58 02   |....T.........X.|
0x1d7cd:    00 00 00 00 00 00 c7 83  60 02 00 00 00 00 00 00   |........`.......|
0x1d7dd:    c7 83 64 02 00 00 00 00  00 00 c7 83 68 02 00 00   |..d.........h...|
0x1d7ed:    00 00 00 00 c7 83 6c 02  00 00 00 00 00 00 c7 83   |......l.........|
0x1d7fd:    70 02 00 00 00 00 00 00  c7 83 74 02 00 00 00 00   |p.........t.....|
0x1d80d:    00 00 c7 83 78 02 00 00  00 00 00 00 c7 83 7c 02   |....x.........|.|
0x1d81d:    00 00 00 00 00 00 c7 83  88 02 00 00 00 00 00 00   |................|
0x1d82d:    c7 83 8c 02 00 00 00 00  00 00 c7 83 90 02 00 00   |................|
0x1d83d:    00 00 00 00 c7 83 98 02  00 00 00 00 00 00 c7 83   |................|
0x1d84d:    9c 02 00 00 00 00 00 00  c7 83 a8 02 00 00 00 00   |................|
0x1d85d:    00 00 c7 83 b4 02 00 00  00 00 00 00 c7 83 b8 02   |................|
0x1d86d:    00 00 00 00 00 00 c7 83  c4 02 00 00 00 00 00 00   |................|
0x1d87d:    c7 83 cc 02 00 00 00 00  00 00 c7 83 d0 02 00 00   |................|
0x1d88d:    00 00 00 00 c7 83 dc 02  00 00 00 00 00 00 89 83   |................|
0x1d89d:    d4 02 00 00 89 83 d8 02  00 00 8d 83 e0 02 00 00   |................|
0x1d8ad:    c7 83 e0 02 00 00 00 00  00 00 c7 83 e4 02 00 00   |................|
0x1d8bd:    00 00 00 00 c7 83 e8 02  00 00 00 00 00 00 c7 83   |................|
0x1d8cd:    ec 02 00 00 00 00 00 00  c7 83 f0 02 00 00 00 00   |................|
0x1d8dd:    00 00 c7 83 f4 02 00 00  00 00 00 00 c7 83 f8 02   |................|
0x1d8ed:    00 00 00 00 00 00 c7 83  fc 02 00 00 00 00 00 00   |................|
0x1d8fd:    c7 83 00 03 00 00 00 00  00 00 c7 83 04 03 00 00   |................|
0x1d90d:    00 00 00 00 c7 44 24 04  00 00 00 00 89 04 24 e8   |.....D$.......$.|
0x1d91d:    ff 4f 01 00 c7 83 08 03  00 00 00 00 00 00 8d 93   |.O..............|
0x1d92d:    18 03 00 00 c7 83 0c 03  00 00 00 00 00 00 c7 83   |................|
0x1d93d:    10 03 00 00 00 00 00 00  c7 83 14 03 00 00 00 00   |................|
0x1d94d:    00 00 89 54 24 44 c7 44  24 04 00 00 00 00 89 14   |...T$D.D$.......|
0x1d95d:    24 e8                                              |$.              |
; dynamically linked function: pthread_mutex_init at 0x1d95f -- 0x1d960
; data inside code section at 0x1d960 -- 0x1d97d
0x1d960:    ff ff ff 85 c0 0f 85 79  08 00 00 8d 83 30 03 00   |.......y.....0..|
0x1d970:    00 c7 44 24 04 00 00 00  00 89 04 24 e8            |..D$.......$.   |
; dynamically linked function: pthread_cond_init at 0x1d97d -- 0x1d97e
; data inside code section at 0x1d97e -- 0x1da49
0x1d97e:    ff ff ff 85 c0 0f 85 df  04 00 00 8d 83 70 03 00   |.............p..|
0x1d98e:    00 89 83 78 03 00 00 8d  93 ac 01 00 00 89 83 7c   |...x...........||
0x1d99e:    03 00 00 8d 83 c8 01 00  00 c6 83 60 03 00 00 00   |...........`....|
0x1d9ae:    8d bb c8 02 00 00 c7 83  68 03 00 00 00 00 00 00   |........h.......|
0x1d9be:    c7 83 70 03 00 00 00 00  00 00 c7 83 74 03 00 00   |..p.........t...|
0x1d9ce:    00 00 00 00 c7 83 80 03  00 00 00 00 00 00 c7 03   |................|
0x1d9de:    00 00 00 00 c7 43 04 00  00 00 00 89 73 08 c7 83   |.....C......s...|
0x1d9ee:    60 01 00 00 d1 00 00 00  c7 83 64 01 00 00 00 00   |`.........d.....|
0x1d9fe:    00 00 c7 83 68 01 00 00  00 00 00 00 c7 83 6c 01   |....h.........l.|
0x1da0e:    00 00 00 00 00 00 c7 83  70 01 00 00 00 00 00 00   |........p.......|
0x1da1e:    c7 43 30 00 00 00 00 c7  43 34 00 00 00 00 c7 83   |.C0.....C4......|
0x1da2e:    58 01 00 00 00 00 00 00  c7 83 5c 01 00 00 00 00   |X.........\.....|
0x1da3e:    00 00 89 54 24 38 89 44  24 3c e8                  |...T$8.D$<.     |
; dynamically linked function: _Z7GetTimev at 0x1da49 -- 0x1da4a
; data inside code section at 0x1da4a -- 0x1da6e
0x1da4a:    ff ff ff 89 83 74 01 00  00 8d 83 c8 01 00 00 89   |.....t..........|
0x1da5a:    93 78 01 00 00 8d 93 ac  01 00 00 89 54 24 38 89   |.x..........T$8.|
0x1da6a:    44 24 3c e8                                        |D$<.            |
; dynamically linked function: _Z7GetTimev at 0x1da6e -- 0x1da6f
; data inside code section at 0x1da6f -- 0x1db0c
0x1da6f:    ff ff ff 89 83 7c 01 00  00 8b 44 24 48 8d bb c8   |.....|....D$H...|
0x1da7f:    02 00 00 89 93 80 01 00  00 8b 54 24 1c 89 83 84   |..........T$....|
0x1da8f:    01 00 00 8b 44 24 4c 89  83 88 01 00 00 8b 44 24   |....D$L.......D$|
0x1da9f:    50 89 83 8c 01 00 00 8b  44 24 54 89 83 90 01 00   |P.......D$T.....|
0x1daaf:    00 8b 44 24 58 89 83 94  01 00 00 8b 44 24 5c 89   |..D$X.......D$\.|
0x1dabf:    83 98 01 00 00 8b 44 24  60 89 83 9c 01 00 00 8b   |......D$`.......|
0x1dacf:    44 24 64 89 83 a0 01 00  00 8b 44 24 68 89 83 a4   |D$d.......D$h...|
0x1dadf:    01 00 00 8b 44 24 6c 89  83 a8 01 00 00 8d 83 ac   |....D$l.........|
0x1daef:    01 00 00 89 14 24 8d 93  c8 01 00 00 c7 44 24 04   |.....$.......D$.|
0x1daff:    11 a1 00 00 89 44 24 38  89 54 24 3c e8            |.....D$8.T$<.   |
; dynamically linked function: _ZNKSs7compareEPKc at 0x1db0c -- 0x1db0d
; data inside code section at 0x1db0d -- 0x1db3f
0x1db0d:    ff ff ff 85 c0 0f 85 18  04 00 00 8b 44 24 40 8d   |............D$@.|
0x1db1d:    b4 24 b0 00 00 00 8d 93  ac 01 00 00 89 34 24 89   |.$...........4$.|
0x1db2d:    54 24 38 89 44 24 04 8d  83 c8 01 00 00 89 44 24   |T$8.D$........D$|
0x1db3d:    3c e8                                              |<.              |
; dynamically linked function: _ZNK8CService14ToStringIPPortEv at 0x1db3f -- 0x1db40
; data inside code section at 0x1db40 -- 0x1db46
0x1db40:    ff ff ff 83 ec 04                                  |......          |
; function: function_1db46 at 0x1db46 -- 0x1db47
; data inside code section at 0x1db47 -- 0x1db58
0x1db47:    83 ac 01 00 00 89 74 24  04 89 44 24 38 89 04 24   |......t$..D$8..$|
0x1db57:    e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x1db58 -- 0x1db59
; data inside code section at 0x1db59 -- 0x1db66
0x1db59:    ff ff ff 89 34 24 8d bb  c8 02 00 00 e8            |....4$.......   |
; dynamically linked function: _ZNSsD1Ev at 0x1db66 -- 0x1db67
; data inside code section at 0x1db67 -- 0x1db92
0x1db67:    ff ff ff 8d 93 c8 01 00  00 c7 83 c4 01 00 00 00   |................|
0x1db77:    00 00 00 89 54 24 3c c7  44 24 08 00 00 00 00 c7   |....T$<.D$......|
0x1db87:    44 24 04 11 a1 00 00 89  14 24 e8                  |D$.......$.     |
; dynamically linked function: _ZNSs6assignEPKcj at 0x1db92 -- 0x1db93
; data inside code section at 0x1db93 -- 0x1dccd
0x1db93:    ff ff ff 0f b6 44 24 33  8d b4 24 b4 00 00 00 c6   |.....D$3..$.....|
0x1dba3:    83 cc 01 00 00 00 c6 83  cd 01 00 00 00 c6 83 cf   |................|
0x1dbb3:    01 00 00 00 88 83 ce 01  00 00 8d 84 24 bb 00 00   |............$...|
0x1dbc3:    00 c6 83 d0 01 00 00 00  c6 83 d1 01 00 00 00 c7   |................|
0x1dbd3:    83 34 02 00 00 00 00 00  00 c7 43 28 00 00 00 00   |.4........C(....|
0x1dbe3:    c7 43 2c 00 00 00 00 c7  83 3c 02 00 00 00 00 00   |.C,......<......|
0x1dbf3:    00 c7 83 40 02 00 00 00  00 00 00 c7 83 44 02 00   |...@.........D..|
0x1dc03:    00 00 00 00 00 c7 83 48  02 00 00 00 00 00 00 c7   |.......H........|
0x1dc13:    83 4c 02 00 00 00 00 00  00 c7 83 50 02 00 00 00   |.L.........P....|
0x1dc23:    00 00 00 c7 83 54 02 00  00 00 00 00 00 c7 83 58   |.....T.........X|
0x1dc33:    02 00 00 00 00 00 00 c7  83 5c 02 00 00 00 00 00   |.........\......|
0x1dc43:    00 c7 83 60 02 00 00 00  00 00 00 c7 83 64 02 00   |...`.........d..|
0x1dc53:    00 00 00 00 00 c7 83 68  02 00 00 00 00 00 00 c7   |.......h........|
0x1dc63:    83 6c 02 00 00 00 00 00  00 c7 83 70 02 00 00 00   |.l.........p....|
0x1dc73:    00 00 00 c7 83 74 02 00  00 00 00 00 00 c7 83 78   |.....t.........x|
0x1dc83:    02 00 00 00 00 00 00 c7  83 7c 02 00 00 00 00 00   |.........|......|
0x1dc93:    00 c7 83 80 02 00 00 ff  ff ff ff c6 83 84 02 00   |................|
0x1dca3:    00 00 c6 83 ac 02 00 00  00 c7 83 38 02 00 00 00   |...........8....|
0x1dcb3:    00 00 00 c6 83 d2 01 00  00 00 89 44 24 08 c7 44   |...........D$..D|
0x1dcc3:    24 04 b4 a2 00 00 89 34  24 e8                     |$......4$.      |
; dynamically linked function: _ZNSsC1EPKcRKSaIcE at 0x1dccd -- 0x1dcce
; data inside code section at 0x1dcce -- 0x1dce5
0x1dcce:    ff ff ff c7 44 24 04 e8  03 00 00 c7 44 24 08 00   |....D$......D$..|
0x1dcde:    00 00 00 89 34 24 e8                               |....4$.         |
; dynamically linked function: _Z6GetArgRKSsx at 0x1dce5 -- 0x1dce6
; data inside code section at 0x1dce6 -- 0x1dce8
0x1dce6:    ff ff                                              |..              |
; function: function_1dce8 at 0x1dce8 -- 0x1dceb
0x1dce8:    ff 69 f8                           	ljmp [ecx - 8]
; data inside code section at 0x1dceb -- 0x1dcf3
0x1dceb:    e8 03 00 00 89 34 24 e8                            |.....4$.        |
; dynamically linked function: _ZNSsD1Ev at 0x1dcf3 -- 0x1dcf4
; data inside code section at 0x1dcf4 -- 0x1dcf7
0x1dcf4:    ff ff ff                                           |...             |
; function: function_1dcf7 at 0x1dcf7 -- 0x1dda8
0x1dcf7:    b9 d3 4d 62 10                     	mov ecx, 0x10624dd3
0x1dcfc:    89 f8                              	mov eax, edi
0x1dcfe:    f7 e1                              	mul ecx
0x1dd00:    c1 ea 06                           	shr edx, 6
0x1dd03:    85 d2                              	test edx, edx
0x1dd05:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x1dd09:    0f 84 d9 01 00 00                  	je 0x1dee8 <function_1dee8>
0x1dd0f:    8b bb f4 02 00 00                  	mov edi, dword ptr [ebx + 0x2f4]
0x1dd15:    8d b3 c8 02 00 00                  	lea esi, [ebx + 0x2c8]
0x1dd1b:    8b 8b f0 02 00 00                  	mov ecx, dword ptr [ebx + 0x2f0]
0x1dd21:    8b 93 e8 02 00 00                  	mov edx, dword ptr [ebx + 0x2e8]
0x1dd27:    eb 16                              	jmp 0x1dd3f <function_1dcf7+0x48>
; data inside code section at 0x1dd29 -- 0x1dd30
0x1dd29:    8d b4 26 00 00 00 00                               |..&....         |
0x1dd30:    8b bb f4 02 00 00                  	mov edi, dword ptr [ebx + 0x2f4]
0x1dd36:    83 c2 24                           	add edx, 0x24
0x1dd39:    89 93 e8 02 00 00                  	mov dword ptr [ebx + 0x2e8], edx
0x1dd3f:    8b 83 04 03 00 00                  	mov eax, dword ptr [ebx + 0x304]
0x1dd45:    29 d1                              	sub ecx, edx
0x1dd47:    c1 f9 02                           	sar ecx, 2
0x1dd4a:    69 c9 39 8e e3 38                  	imul ecx, ecx, 0x38e38e39
0x1dd50:    29 f8                              	sub eax, edi
0x1dd52:    c1 f8 02                           	sar eax, 2
0x1dd55:    83 e8 01                           	sub eax, 1
0x1dd58:    6b f8 0e                           	imul edi, eax, 0xe
0x1dd5b:    8b 83 f8 02 00 00                  	mov eax, dword ptr [ebx + 0x2f8]
0x1dd61:    2b 83 fc 02 00 00                  	sub eax, dword ptr [ebx + 0x2fc]
0x1dd67:    c1 f8 02                           	sar eax, 2
0x1dd6a:    69 c0 39 8e e3 38                  	imul eax, eax, 0x38e38e39
0x1dd70:    01 f8                              	add eax, edi
0x1dd72:    01 c8                              	add eax, ecx
0x1dd74:    39 44 24 1c                        	cmp dword ptr [esp + 0x1c], eax
0x1dd78:    0f 83 6a 01 00 00                  	jae 0x1dee8 <function_1dee8>
0x1dd7e:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1dd82:    89 f7                              	mov edi, esi
0x1dd84:    89 34 24                           	mov dword ptr [esp], esi
0x1dd87:    e8 54 8e 01 00                     	call 0x36be0 <unknown_36be0>
0x1dd8c:    8b 8b f0 02 00 00                  	mov ecx, dword ptr [ebx + 0x2f0]
0x1dd92:    8b 93 e8 02 00 00                  	mov edx, dword ptr [ebx + 0x2e8]
0x1dd98:    8d 41 dc                           	lea eax, [ecx - 0x24]
0x1dd9b:    39 c2                              	cmp edx, eax
0x1dd9d:    75 91                              	jne 0x1dd30 <function_1dcf7+0x39>
0x1dd9f:    8b 83 ec 02 00 00                  	mov eax, dword ptr [ebx + 0x2ec]
0x1dda5:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1dda8 -- 0x1dda9
0x1dda8:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1dda9 -- 0x1ddaa
; data inside code section at 0x1ddaa -- 0x1ddad
0x1ddaa:    ff ff ff                                           |...             |
; function: function_1ddad at 0x1ddad -- 0x1dddc
0x1ddad:    8b 83 f4 02 00 00                  	mov eax, dword ptr [ebx + 0x2f4]
0x1ddb3:    8d 78 04                           	lea edi, [eax + 4]
0x1ddb6:    89 bb f4 02 00 00                  	mov dword ptr [ebx + 0x2f4], edi
0x1ddbc:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x1ddbf:    8d 8a f8 01 00 00                  	lea ecx, [edx + 0x1f8]
0x1ddc5:    89 93 ec 02 00 00                  	mov dword ptr [ebx + 0x2ec], edx
0x1ddcb:    89 8b f0 02 00 00                  	mov dword ptr [ebx + 0x2f0], ecx
0x1ddd1:    89 93 e8 02 00 00                  	mov dword ptr [ebx + 0x2e8], edx
0x1ddd7:    e9 63 ff ff ff                     	jmp 0x1dd3f
; data inside code section at 0x1dddc -- 0x1dde8
0x1dddc:    8d 74 26 00 8b 54 24 24  89 14 24 e8               |.t&..T$$..$.    |
; dynamically linked function: pthread_mutex_destroy at 0x1dde8 -- 0x1dde9
; data inside code section at 0x1dde9 -- 0x1de10
0x1dde9:    ff ff ff 85 c0 74 50 c7  44 24 0c 60 79 02 00 c7   |.....tP.D$.`y...|
0x1ddf9:    44 24 08 53 00 00 00 c7  44 24 04 98 d5 00 00 c7   |D$.S....D$......|
0x1de09:    04 24 00 9f 00 00 e8                               |.$.....         |
; dynamically linked function: __assert_fail at 0x1de10 -- 0x1de11
; data inside code section at 0x1de11 -- 0x1de1c
0x1de11:    ff ff ff 8d 74 26 00 89  2c 24 e8                  |....t&..,$.     |
; dynamically linked function: pthread_mutex_destroy at 0x1de1c -- 0x1de1d
; data inside code section at 0x1de1d -- 0x1de70
0x1de1d:    ff ff ff 85 c0 75 cc 8d  74 24 78 c7 44 24 7c 00   |.....u..t$x.D$|.|
0x1de2d:    00 00 00 c7 44 24 78 48  12 03 00 89 34 24 e8 20   |....D$xH....4$. |
0x1de3d:    09 01 00 8d b4 24 88 00  00 00 c7 84 24 8c 00 00   |.....$......$...|
0x1de4d:    00 00 00 00 00 c7 84 24  88 00 00 00 48 12 03 00   |.......$....H...|
0x1de5d:    89 34 24 e8 fb 08 01 00  8d 76 00 8b 44 24 44 89   |.4$......v..D$D.|
0x1de6d:    04 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_destroy at 0x1de70 -- 0x1de71
; data inside code section at 0x1de71 -- 0x1deb0
0x1de71:    ff ff ff 85 c0 0f 85 74  ff ff ff 8d b4 24 a8 00   |.......t.....$..|
0x1de81:    00 00 c7 84 24 ac 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0x1de91:    a8 00 00 00 48 12 03 00  89 34 24 e8 bf 08 01 00   |....H....4$.....|
0x1dea1:    8d b4 26 00 00 00 00 8b  44 24 34 89 04 24 e8      |..&.....D$4..$. |
; dynamically linked function: pthread_mutex_destroy at 0x1deb0 -- 0x1deb1
; data inside code section at 0x1deb1 -- 0x1dee8
0x1deb1:    ff ff ff 85 c0 0f 85 34  ff ff ff 8d b4 24 98 00   |.......4.....$..|
0x1dec1:    00 00 c7 84 24 9c 00 00  00 00 00 00 00 c7 84 24   |....$..........$|
0x1ded1:    98 00 00 00 48 12 03 00  89 34 24 e8 7f 08 01 00   |....H....4$.....|
0x1dee1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_1dee8 at 0x1dee8 -- 0x1df2e
0x1dee8:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1deec:    83 7b 08 ff                        	cmp dword ptr [ebx + 8], -1
0x1def0:    c7 83 30 02 00 00 00 00 00 00      	mov dword ptr [ebx + 0x230], 0
0x1defa:    89 93 08 03 00 00                  	mov dword ptr [ebx + 0x308], edx
0x1df00:    74 0d                              	je 0x1df0f <function_1dee8+0x27>
0x1df02:    80 bb ce 01 00 00 00               	cmp byte ptr [ebx + 0x1ce], 0
0x1df09:    0f 84 99 01 00 00                  	je 0x1e0a8 <function_1e0a8>
0x1df0f:    8b 84 24 bc 00 00 00               	mov eax, dword ptr [esp + 0xbc]
0x1df16:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1df1d:    0f 85 e3 01 00 00                  	jne 0x1e106 <function_1e106>
0x1df23:    81 c4 cc 00 00 00                  	add esp, 0xcc
0x1df29:    5b                                 	pop ebx
0x1df2a:    5e                                 	pop esi
0x1df2b:    5f                                 	pop edi
0x1df2c:    5d                                 	pop ebp
0x1df2d:    c3                                 	ret 
; data inside code section at 0x1df2e -- 0x1df30
0x1df2e:    66 90                                              |f.              |
; function: function_1df30 at 0x1df30 -- 0x1df66
0x1df30:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1df34:    8d b4 24 b0 00 00 00               	lea esi, [esp + 0xb0]
0x1df3b:    8d 83 ac 01 00 00                  	lea eax, [ebx + 0x1ac]
0x1df41:    89 34 24                           	mov dword ptr [esp], esi
0x1df44:    8d bb c8 02 00 00                  	lea edi, [ebx + 0x2c8]
0x1df4a:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1df4e:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1df52:    8d 93 c8 01 00 00                  	lea edx, [ebx + 0x1c8]
0x1df58:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1df5c:    e8 fc ff ff ff                     	call 0x1df5d
0x1df61:    e9 e0 fb ff ff                     	jmp 0x1db46 <function_1db46>
; function: function_1df66 at 0x1df66 -- 0x1df67
; data inside code section at 0x1df67 -- 0x1df72
0x1df67:    c7 89 34 24 89 fe e8 3e  de 00 00                  |..4$...>...     |
; function: function_1df72 at 0x1df72 -- 0x1df73
; data inside code section at 0x1df73 -- 0x1df7e
0x1df73:    54 24 20 89 14 24 e8 e2  48 01 00                  |T$ ..$..H..     |
; function: function_1df7e at 0x1df7e -- 0x1df7f
; function: function_1df7f at 0x1df7f -- 0x1df80
0x1df7f:    c3                                 	ret 
; data inside code section at 0x1df80 -- 0x1df8d
0x1df80:    0c 89 1c 24 e8 27 1a 01  00 89 34 24 e8            |...$.'....4$.   |
; dynamically linked function: _Unwind_Resume at 0x1df8d -- 0x1df8e
; data inside code section at 0x1df8e -- 0x1df90
0x1df8e:    ff ff                                              |..              |
; function: function_1df90 at 0x1df90 -- 0x1dfbf
0x1df90:    ff 89 c7 89 34 24                  	dec dword ptr [ecx + 0x243489c7]
0x1df96:    89 fe                              	mov esi, edi
0x1df98:    e8 13 de 00 00                     	call 0x2bdb0 <function_2bdb0>
0x1df9d:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1dfa1:    89 14 24                           	mov dword ptr [esp], edx
0x1dfa4:    e8 27 4e 01 00                     	call 0x32dd0 <function_32dd0>
0x1dfa9:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1dfad:    89 04 24                           	mov dword ptr [esp], eax
0x1dfb0:    e8 8b 1e 01 00                     	call 0x2fe40 <function_2fe40>
0x1dfb5:    89 2c 24                           	mov dword ptr [esp], ebp
0x1dfb8:    e8 f3 db 00 00                     	call 0x2bbb0 <function_2bbb0>
0x1dfbd:    eb b3                              	jmp 0x1df72 <function_1df72>
; function: function_1dfbf at 0x1dfbf -- 0x1dfc0
; data inside code section at 0x1dfc0 -- 0x1dfdf
0x1dfc0:    c7 89 34 24 89 fe e8 e5  dd 00 00 8d 93 ac 01 00   |..4$............|
0x1dfd0:    00 8d 83 c8 01 00 00 89  54 24 38 89 44 24 3c      |........T$8.D$< |
; function: function_1dfdf at 0x1dfdf -- 0x1dfe0
; data inside code section at 0x1dfe0 -- 0x1dff5
0x1dfe0:    83 d4 01 00 00 89 04 24  e8 53 10 01 00 8b 54 24   |.......$.S....T$|
0x1dff0:    3c 89 14 24 e8                                     |<..$.           |
; dynamically linked function: _ZNSsD1Ev at 0x1dff5 -- 0x1dff6
; data inside code section at 0x1dff6 -- 0x1dff9
0x1dff6:    ff ff ff                                           |...             |
; function: function_1dff9 at 0x1dff9 -- 0x1dffa
; data inside code section at 0x1dffa -- 0x1e001
0x1dffa:    54 24 38 89 14 24 e8                               |T$8..$.         |
; dynamically linked function: _ZNSsD1Ev at 0x1e001 -- 0x1e002
; data inside code section at 0x1e002 -- 0x1e004
0x1e002:    ff ff                                              |..              |
; function: function_1e004 at 0x1e004 -- 0x1e013
0x1e004:    ff 8b 44 24 24 89                  	dec dword ptr [ebx - 0x76dbdbbc]
0x1e00a:    04 24                              	add al, 0x24
0x1e00c:    e8 9f db 00 00                     	call 0x2bbb0 <function_2bbb0>
0x1e011:    eb 8a                              	jmp 0x1df9d
; function: function_1e013 at 0x1e013 -- 0x1e014
; data inside code section at 0x1e014 -- 0x1e039
0x1e014:    c7 89 34 24 89 fe e8 91  dd 00 00 8d 93 ac 01 00   |..4$............|
0x1e024:    00 8d 83 c8 01 00 00 8d  bb c8 02 00 00 89 54 24   |..............T$|
0x1e034:    38 89 44 24 3c                                     |8.D$<           |
; function: function_1e039 at 0x1e039 -- 0x1e03a
; data inside code section at 0x1e03a -- 0x1e047
0x1e03a:    83 0c 03 00 00 85 c0 74  08 89 04 24 e8            |.......t...$.   |
; dynamically linked function: _ZdlPv at 0x1e047 -- 0x1e048
; data inside code section at 0x1e048 -- 0x1e053
0x1e048:    ff ff ff 89 3c 24 e8 5d  32 01 00                  |....<$.]2..     |
; function: function_1e053 at 0x1e053 -- 0x1e054
; data inside code section at 0x1e054 -- 0x1e091
0x1e054:    83 b8 02 00 00 89 44 24  04 8d 83 b0 02 00 00 89   |......D$........|
0x1e064:    04 24 e8 85 31 01 00 8b  83 9c 02 00 00 89 44 24   |.$..1.........D$|
0x1e074:    04 8d 83 94 02 00 00 89  04 24 e8 0d 31 01 00 8b   |.........$..1...|
0x1e084:    83 88 02 00 00 85 c0 74  08 89 04 24 e8            |.......t...$.   |
; dynamically linked function: _ZdlPv at 0x1e091 -- 0x1e092
; data inside code section at 0x1e092 -- 0x1e094
0x1e092:    ff ff                                              |..              |
; function: function_1e094 at 0x1e094 -- 0x1e0a6
0x1e094:    ff 8b 44 24 34 89                  	dec dword ptr [ebx - 0x76cbdbbc]
0x1e09a:    04 24                              	add al, 0x24
0x1e09c:    e8 0f db 00 00                     	call 0x2bbb0 <function_2bbb0>
0x1e0a1:    e9 39 ff ff ff                     	jmp 0x1dfdf <function_1dfdf>
; data inside code section at 0x1e0a6 -- 0x1e0a8
0x1e0a6:    66 90                                              |f.              |
; function: function_1e0a8 at 0x1e0a8 -- 0x1e0bb
0x1e0a8:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e0ab:    8d bb c8 02 00 00                  	lea edi, [ebx + 0x2c8]
0x1e0b1:    e8 ba 3d 00 00                     	call 0x21e70
0x1e0b6:    e9 54 fe ff ff                     	jmp 0x1df0f
; function: function_1e0bb at 0x1e0bb -- 0x1e0dc
0x1e0bb:    8d 74 24 70                        	lea esi, [esp + 0x70]
0x1e0bf:    c7 44 24 74 00 00 00 00            	mov dword ptr [esp + 0x74], 0
0x1e0c7:    c7 44 24 70 48 12 03 00            	mov dword ptr [esp + 0x70], 0x31248
0x1e0cf:    89 34 24                           	mov dword ptr [esp], esi
0x1e0d2:    e8 89 06 01 00                     	call 0x2e760 <function_2e760>
0x1e0d7:    e9 8a fe ff ff                     	jmp 0x1df66 <function_1df66>
; function: function_1e0dc at 0x1e0dc -- 0x1e106
0x1e0dc:    8d b4 24 80 00 00 00               	lea esi, [esp + 0x80]
0x1e0e3:    c7 84 24 84 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x84], 0
0x1e0ee:    c7 84 24 80 00 00 00 48 12 03 00   	mov dword ptr [esp + 0x80], 0x31248
0x1e0f9:    89 34 24                           	mov dword ptr [esp], esi
0x1e0fc:    e8 5f 06 01 00                     	call 0x2e760 <function_2e760>
0x1e101:    e9 8b fe ff ff                     	jmp 0x1df91
; function: function_1e106 at 0x1e106 -- 0x1e107
; dynamically linked function: __stack_chk_fail at 0x1e107 -- 0x1e108
; data inside code section at 0x1e108 -- 0x1e10a
0x1e108:    ff ff                                              |..              |
; function: function_1e10a at 0x1e10a -- 0x1e135
0x1e10a:    ff 8d b4 24 90 00                  	dec dword ptr [ebp + 0x9024b4]
0x1e110:    00 00                              	add byte ptr [eax], al
0x1e112:    c7 84 24 94 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x94], 0
0x1e11d:    c7 84 24 90 00 00 00 48 12 03 00   	mov dword ptr [esp + 0x90], 0x31248
0x1e128:    89 34 24                           	mov dword ptr [esp], esi
0x1e12b:    e8 30 06 01 00                     	call 0x2e760 <function_2e760>
0x1e130:    e9 8a fe ff ff                     	jmp 0x1dfbf <function_1dfbf>
; data inside code section at 0x1e135 -- 0x1e13d
0x1e135:    89 c7 89 34 24 89 fe e8                            |...4$...        |
; dynamically linked function: _ZNSsD1Ev at 0x1e13d -- 0x1e13e
; data inside code section at 0x1e13e -- 0x1e140
0x1e13e:    ff ff                                              |..              |
; function: function_1e140 at 0x1e140 -- 0x1e170
0x1e140:    ff 8d bb c8 02 00                  	dec dword ptr [ebp + 0x2c8bb]
0x1e146:    00 8b 83 74 03 00                  	add byte ptr [ebx + 0x37483], cl
0x1e14c:    00 89 44 24 04 8d                  	add byte ptr [ecx - 0x72fbdbbc], cl
0x1e152:    83 6c 03 00 00                     	sub dword ptr [ebx + eax], 0
0x1e157:    89 04 24                           	mov dword ptr [esp], eax
0x1e15a:    e8 d1 31 01 00                     	call 0x31330 <_ZTVN5boost17bad_function_callE>
0x1e15f:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x1e163:    89 14 24                           	mov dword ptr [esp], edx
0x1e166:    e8 45 da 00 00                     	call 0x2bbb0 <function_2bbb0>
0x1e16b:    e9 c9 fe ff ff                     	jmp 0x1e039 <function_1e039>
; function: function_1e170 at 0x1e170 -- 0x1e181
0x1e170:    89 c6                              	mov esi, eax
0x1e172:    8d 83 ac 01 00 00                  	lea eax, [ebx + 0x1ac]
0x1e178:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x1e17c:    e9 78 fe ff ff                     	jmp 0x1dff9 <function_1dff9>
; function: function_1e181 at 0x1e181 -- 0x1e188
0x1e181:    89 c6                              	mov esi, eax
0x1e183:    e9 21 fe ff ff                     	jmp 0x1dfa9
; function: function_1e188 at 0x1e188 -- 0x1e18f
0x1e188:    89 c6                              	mov esi, eax
0x1e18a:    e9 26 fe ff ff                     	jmp 0x1dfb5
; data inside code section at 0x1e18f -- 0x1e197
0x1e18f:    89 c7 89 34 24 89 fe e8                            |...4$...        |
; dynamically linked function: _ZNSsD1Ev at 0x1e197 -- 0x1e198
; data inside code section at 0x1e198 -- 0x1e19a
0x1e198:    ff ff                                              |..              |
; function: function_1e19a at 0x1e19a -- 0x1e1e4
0x1e19a:    ff 8d 83 c8 01 00                  	dec dword ptr [ebp + 0x1c883]
0x1e1a0:    00 8d bb c8 02 00                  	add byte ptr [ebp + 0x2c8bb], cl
0x1e1a6:    00 89 44 24 3c eb                  	add byte ptr [ecx - 0x14c3dbbc], cl
0x1e1ac:    9a 89 c6 eb 96 89 c6               	lcall 0xc689:0x96ebc689 <unknown_96ebc689>
0x1e1b3:    8b 83 d0 02 00 00                  	mov eax, dword ptr [ebx + 0x2d0]
0x1e1b9:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e1bd:    8d 83 c8 02 00 00                  	lea eax, [ebx + 0x2c8]
0x1e1c3:    89 04 24                           	mov dword ptr [esp], eax
0x1e1c6:    e8 85 30 01 00                     	call 0x31250 <function_31250>
0x1e1cb:    8d 93 ac 01 00 00                  	lea edx, [ebx + 0x1ac]
0x1e1d1:    8d 83 c8 01 00 00                  	lea eax, [ebx + 0x1c8]
0x1e1d7:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x1e1db:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1e1df:    e9 6f fe ff ff                     	jmp 0x1e053 <function_1e053>
; function: function_1e1e4 at 0x1e1e4 -- 0x1e210
0x1e1e4:    8d b4 24 a0 00 00 00               	lea esi, [esp + 0xa0]
0x1e1eb:    c7 84 24 a4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa4], 0
0x1e1f6:    c7 84 24 a0 00 00 00 48 12 03 00   	mov dword ptr [esp + 0xa0], 0x31248
0x1e201:    89 34 24                           	mov dword ptr [esp], esi
0x1e204:    e8 57 05 01 00                     	call 0x2e760 <function_2e760>
0x1e209:    89 c6                              	mov esi, eax
0x1e20b:    e9 6e fd ff ff                     	jmp 0x1df7e <function_1df7e>
; function: function_1e210 at 0x1e210 -- 0x1e217
0x1e210:    89 c6                              	mov esi, eax
0x1e212:    e9 ee fd ff ff                     	jmp 0x1e005
; function: function_1e217 at 0x1e217 -- 0x1e21c
0x1e217:    e9 f7 fd ff ff                     	jmp 0x1e013 <function_1e013>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E at 0x1e220 -- 0x1e261
0x1e220:    57                                 	push edi
0x1e221:    56                                 	push esi
0x1e222:    53                                 	push ebx
0x1e223:    83 ec 20                           	sub esp, 0x20
0x1e226:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1e22a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e230:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e234:    31 c0                              	xor eax, eax
0x1e236:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e23a:    85 db                              	test ebx, ebx
0x1e23c:    75 04                              	jne 0x1e242 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x22>
0x1e23e:    eb 2a                              	jmp 0x1e26a <function_1e26a>
0x1e240:    89 f3                              	mov ebx, esi
0x1e242:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1e245:    89 3c 24                           	mov dword ptr [esp], edi
0x1e248:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e24c:    e8 ef e1 01 00                     	call 0x3c440 <unknown_3c440>
0x1e251:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1e254:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x1e258:    74 04                              	je 0x1e25e <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x3e>
0x1e25a:    c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
0x1e25e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1e261 -- 0x1e262
0x1e261:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e262 -- 0x1e263
; data inside code section at 0x1e263 -- 0x1e26a
0x1e263:    ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_1e26a at 0x1e26a -- 0x1e27e
0x1e26a:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e26e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e275:    75 07                              	jne 0x1e27e <function_1e26a+0x13>
0x1e277:    83 c4 20                           	add esp, 0x20
0x1e27a:    5b                                 	pop ebx
0x1e27b:    5e                                 	pop esi
0x1e27c:    5f                                 	pop edi
0x1e27d:    c3                                 	ret 
; data inside code section at 0x1e27e -- 0x1e27f
0x1e27e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e27f -- 0x1e280
; data inside code section at 0x1e280 -- 0x1e283
0x1e280:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEED2Ev
; function: _ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEED1Ev at 0x1e290 -- 0x1e2d2
0x1e290:    57                                 	push edi
0x1e291:    56                                 	push esi
0x1e292:    53                                 	push ebx
0x1e293:    83 ec 20                           	sub esp, 0x20
0x1e296:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e29a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e2a0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e2a4:    31 c0                              	xor eax, eax
0x1e2a6:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e2a9:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e2ad:    8d 47 08                           	lea eax, [edi + 8]
0x1e2b0:    89 04 24                           	mov dword ptr [esp], eax
0x1e2b3:    e8 f8 e1 01 00                     	call 0x3c4b0 <unknown_3c4b0>
0x1e2b8:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e2ba:    39 fb                              	cmp ebx, edi
0x1e2bc:    75 04                              	jne 0x1e2c2 <_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEED1Ev+0x32>
0x1e2be:    eb 1b                              	jmp 0x1e2db <function_1e2db>
0x1e2c0:    89 f3                              	mov ebx, esi
0x1e2c2:    8b 33                              	mov esi, dword ptr [ebx]
0x1e2c4:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e2c7:    89 04 24                           	mov dword ptr [esp], eax
0x1e2ca:    e8 01 05 01 00                     	call 0x2e7d0 <function_2e7d0>
0x1e2cf:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1e2d2 -- 0x1e2d3
0x1e2d2:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e2d3 -- 0x1e2d4
; data inside code section at 0x1e2d4 -- 0x1e2db
0x1e2d4:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1e2db at 0x1e2db -- 0x1e2f4
0x1e2db:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e2df:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e2e6:    75 07                              	jne 0x1e2ef <function_1e2db+0x14>
0x1e2e8:    83 c4 20                           	add esp, 0x20
0x1e2eb:    5b                                 	pop ebx
0x1e2ec:    5e                                 	pop esi
0x1e2ed:    5f                                 	pop edi
0x1e2ee:    c3                                 	ret 
0x1e2ef:    e8 fc ff ff ff                     	call 0x1e2f0
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv at 0x1e300 -- 0x1e36a
0x1e300:    57                                 	push edi
0x1e301:    56                                 	push esi
0x1e302:    53                                 	push ebx
0x1e303:    83 ec 20                           	sub esp, 0x20
0x1e306:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e30c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e310:    31 c0                              	xor eax, eax
0x1e312:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1e316:    8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0x1e319:    85 ff                              	test edi, edi
0x1e31b:    74 53                              	je 0x1e370 <function_1e370>
0x1e31d:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e320:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e324:    8d 47 08                           	lea eax, [edi + 8]
0x1e327:    89 04 24                           	mov dword ptr [esp], eax
0x1e32a:    e8 f1 e1 01 00                     	call 0x3c520 <unknown_3c520>
0x1e32f:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e331:    39 fb                              	cmp ebx, edi
0x1e333:    75 05                              	jne 0x1e33a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0x1e335:    eb 1c                              	jmp 0x1e353 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x53>
; data inside code section at 0x1e337 -- 0x1e338
0x1e337:    90                                                 |.               |
0x1e338:    89 f3                              	mov ebx, esi
0x1e33a:    8b 33                              	mov esi, dword ptr [ebx]
0x1e33c:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e33f:    89 04 24                           	mov dword ptr [esp], eax
0x1e342:    e8 f9 04 01 00                     	call 0x2e840 <_ZZN5boost10shared_ptrINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEE5resetISK_EEvPT_E19__PRETTY_FUNCTION__>
0x1e347:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e34a:    e8 fc ff ff ff                     	call 0x1e34b
0x1e34f:    39 fe                              	cmp esi, edi
0x1e351:    75 e5                              	jne 0x1e338 <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x38>
0x1e353:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e357:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e35e:    75 24                              	jne 0x1e384 <function_1e384>
0x1e360:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1e364:    83 c4 20                           	add esp, 0x20
0x1e367:    5b                                 	pop ebx
0x1e368:    5e                                 	pop esi
0x1e369:    5f                                 	pop edi
; data inside code section at 0x1e36a -- 0x1e36b
0x1e36a:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e36b -- 0x1e36c
; data inside code section at 0x1e36c -- 0x1e370
0x1e36c:    ff ff ff 90                                        |....            |
; function: function_1e370 at 0x1e370 -- 0x1e384
0x1e370:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e374:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e37b:    75 07                              	jne 0x1e384 <function_1e384>
0x1e37d:    83 c4 20                           	add esp, 0x20
0x1e380:    5b                                 	pop ebx
0x1e381:    5e                                 	pop esi
0x1e382:    5f                                 	pop edi
0x1e383:    c3                                 	ret 
; function: function_1e384 at 0x1e384 -- 0x1e385
; dynamically linked function: __stack_chk_fail at 0x1e385 -- 0x1e386
; data inside code section at 0x1e386 -- 0x1e389
0x1e386:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_ at 0x1e390 -- 0x1e3f0
0x1e390:    53                                 	push ebx
0x1e391:    83 ec 28                           	sub esp, 0x28
0x1e394:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1e398:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e39e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e3a2:    31 c0                              	xor eax, eax
0x1e3a4:    85 db                              	test ebx, ebx
0x1e3a6:    74 30                              	je 0x1e3d8 <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_+0x48>
0x1e3a8:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e3ab:    89 04 24                           	mov dword ptr [esp], eax
0x1e3ae:    e8 fc ff ff ff                     	call 0x1e3af
0x1e3b3:    8d 43 04                           	lea eax, [ebx + 4]
0x1e3b6:    89 04 24                           	mov dword ptr [esp], eax
0x1e3b9:    e8 12 05 01 00                     	call 0x2e8d0 <function_2e8d0>
0x1e3be:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e3c2:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e3c9:    75 1f                              	jne 0x1e3ea <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_+0x5a>
0x1e3cb:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1e3cf:    83 c4 28                           	add esp, 0x28
0x1e3d2:    5b                                 	pop ebx
0x1e3d3:    e9 fc ff ff ff                     	jmp 0x1e3d4
0x1e3d8:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e3dc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e3e3:    75 05                              	jne 0x1e3ea <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEEEEEvPT_+0x5a>
0x1e3e5:    83 c4 28                           	add esp, 0x28
0x1e3e8:    5b                                 	pop ebx
0x1e3e9:    c3                                 	ret 
0x1e3ea:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1e3f0 -- 0x1e3f1
0x1e3f0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e3f1 -- 0x1e3f2
; data inside code section at 0x1e3f2 -- 0x1e3f5
0x1e3f2:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E at 0x1e400 -- 0x1e441
0x1e400:    57                                 	push edi
0x1e401:    56                                 	push esi
0x1e402:    53                                 	push ebx
0x1e403:    83 ec 20                           	sub esp, 0x20
0x1e406:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1e40a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e410:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e414:    31 c0                              	xor eax, eax
0x1e416:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e41a:    85 db                              	test ebx, ebx
0x1e41c:    75 04                              	jne 0x1e422 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x22>
0x1e41e:    eb 2a                              	jmp 0x1e44a <function_1e44a>
0x1e420:    89 f3                              	mov ebx, esi
0x1e422:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1e425:    89 3c 24                           	mov dword ptr [esp], edi
0x1e428:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e42c:    e8 cf e3 01 00                     	call 0x3c800 <unknown_3c800>
0x1e431:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1e434:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x1e438:    74 04                              	je 0x1e43e <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x3e>
0x1e43a:    c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
0x1e43e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1e441 -- 0x1e442
0x1e441:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e442 -- 0x1e443
; data inside code section at 0x1e443 -- 0x1e44a
0x1e443:    ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_1e44a at 0x1e44a -- 0x1e463
0x1e44a:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e44e:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e455:    75 07                              	jne 0x1e45e <function_1e44a+0x14>
0x1e457:    83 c4 20                           	add esp, 0x20
0x1e45a:    5b                                 	pop ebx
0x1e45b:    5e                                 	pop esi
0x1e45c:    5f                                 	pop edi
0x1e45d:    c3                                 	ret 
0x1e45e:    e8 fc ff ff ff                     	call 0x1e45f
; section: .text._ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEED2Ev
; function: _ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEED1Ev at 0x1e470 -- 0x1e4b2
0x1e470:    57                                 	push edi
0x1e471:    56                                 	push esi
0x1e472:    53                                 	push ebx
0x1e473:    83 ec 20                           	sub esp, 0x20
0x1e476:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e47a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e480:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e484:    31 c0                              	xor eax, eax
0x1e486:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e489:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e48d:    8d 47 08                           	lea eax, [edi + 8]
0x1e490:    89 04 24                           	mov dword ptr [esp], eax
0x1e493:    e8 d8 e3 01 00                     	call 0x3c870 <unknown_3c870>
0x1e498:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e49a:    39 fb                              	cmp ebx, edi
0x1e49c:    75 04                              	jne 0x1e4a2 <_ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEED1Ev+0x32>
0x1e49e:    eb 1b                              	jmp 0x1e4bb <function_1e4bb>
0x1e4a0:    89 f3                              	mov ebx, esi
0x1e4a2:    8b 33                              	mov esi, dword ptr [ebx]
0x1e4a4:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e4a7:    89 04 24                           	mov dword ptr [esp], eax
0x1e4aa:    e8 01 05 01 00                     	call 0x2e9b0 <function_2e9b0>
0x1e4af:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1e4b2 -- 0x1e4b3
0x1e4b2:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e4b3 -- 0x1e4b4
; data inside code section at 0x1e4b4 -- 0x1e4bb
0x1e4b4:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1e4bb at 0x1e4bb -- 0x1e4d4
0x1e4bb:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e4bf:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e4c6:    75 07                              	jne 0x1e4cf <function_1e4bb+0x14>
0x1e4c8:    83 c4 20                           	add esp, 0x20
0x1e4cb:    5b                                 	pop ebx
0x1e4cc:    5e                                 	pop esi
0x1e4cd:    5f                                 	pop edi
0x1e4ce:    c3                                 	ret 
0x1e4cf:    e8 fc ff ff ff                     	call 0x1e4d0
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE7disposeEv at 0x1e4e0 -- 0x1e52a
0x1e4e0:    57                                 	push edi
0x1e4e1:    56                                 	push esi
0x1e4e2:    53                                 	push ebx
0x1e4e3:    83 ec 20                           	sub esp, 0x20
0x1e4e6:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e4ec:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e4f0:    31 c0                              	xor eax, eax
0x1e4f2:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1e4f6:    8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0x1e4f9:    85 ff                              	test edi, edi
0x1e4fb:    74 53                              	je 0x1e550 <function_1e550>
0x1e4fd:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e500:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e504:    8d 47 08                           	lea eax, [edi + 8]
0x1e507:    89 04 24                           	mov dword ptr [esp], eax
0x1e50a:    e8 d1 e3 01 00                     	call 0x3c8e0 <unknown_3c8e0>
0x1e50f:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e511:    39 fb                              	cmp ebx, edi
0x1e513:    75 05                              	jne 0x1e51a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0x1e515:    eb 1c                              	jmp 0x1e533 <function_1e533>
; data inside code section at 0x1e517 -- 0x1e518
0x1e517:    90                                                 |.               |
0x1e518:    89 f3                              	mov ebx, esi
0x1e51a:    8b 33                              	mov esi, dword ptr [ebx]
0x1e51c:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e51f:    89 04 24                           	mov dword ptr [esp], eax
0x1e522:    e8 f9 04 01 00                     	call 0x2ea20 <function_2ea20>
0x1e527:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1e52a -- 0x1e52b
0x1e52a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1e52b -- 0x1e52c
; data inside code section at 0x1e52c -- 0x1e533
0x1e52c:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1e533 at 0x1e533 -- 0x1e550
0x1e533:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e537:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e53e:    75 24                              	jne 0x1e564 <function_1e564>
0x1e540:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1e544:    83 c4 20                           	add esp, 0x20
0x1e547:    5b                                 	pop ebx
0x1e548:    5e                                 	pop esi
0x1e549:    5f                                 	pop edi
0x1e54a:    e9 fc ff ff ff                     	jmp 0x1e54b
0x1e54f:    90                                 	nop 
; function: function_1e550 at 0x1e550 -- 0x1e564
0x1e550:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e554:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e55b:    75 07                              	jne 0x1e564 <function_1e564>
0x1e55d:    83 c4 20                           	add esp, 0x20
0x1e560:    5b                                 	pop ebx
0x1e561:    5e                                 	pop esi
0x1e562:    5f                                 	pop edi
0x1e563:    c3                                 	ret 
; function: function_1e564 at 0x1e564 -- 0x1e565
; dynamically linked function: __stack_chk_fail at 0x1e565 -- 0x1e566
; data inside code section at 0x1e566 -- 0x1e569
0x1e566:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEEEEEvPT_ at 0x1e570 -- 0x1e58e
0x1e570:    53                                 	push ebx
0x1e571:    83 ec 28                           	sub esp, 0x28
0x1e574:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1e578:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e57e:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e582:    31 c0                              	xor eax, eax
0x1e584:    85 db                              	test ebx, ebx
0x1e586:    74 30                              	je 0x1e5b8 <function_1e5b8>
0x1e588:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e58b:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1e58e -- 0x1e58f
0x1e58e:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_destroy at 0x1e58f -- 0x1e590
; data inside code section at 0x1e590 -- 0x1e5b4
0x1e590:    ff ff ff 8d 43 04 89 04  24 e8 12 05 01 00 8b 44   |....C...$......D|
0x1e5a0:    24 1c 65 33 05 14 00 00  00 75 1f 89 5c 24 30 83   |$.e3.....u..\$0.|
0x1e5b0:    c4 28 5b e9                                        |.([.            |
; dynamically linked function: _ZdlPv at 0x1e5b4 -- 0x1e5b5
; data inside code section at 0x1e5b5 -- 0x1e5b8
0x1e5b5:    ff ff ff                                           |...             |
; function: function_1e5b8 at 0x1e5b8 -- 0x1e5d0
0x1e5b8:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e5bc:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e5c3:    75 05                              	jne 0x1e5ca <function_1e5b8+0x12>
0x1e5c5:    83 c4 28                           	add esp, 0x28
0x1e5c8:    5b                                 	pop ebx
0x1e5c9:    c3                                 	ret 
0x1e5ca:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1e5d0 -- 0x1e5d1
0x1e5d0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e5d1 -- 0x1e5d2
; data inside code section at 0x1e5d2 -- 0x1e5d5
0x1e5d2:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_ at 0x1e5e0 -- 0x1e640
0x1e5e0:    53                                 	push ebx
0x1e5e1:    83 ec 38                           	sub esp, 0x38
0x1e5e4:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1e5e8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e5ee:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1e5f2:    31 c0                              	xor eax, eax
0x1e5f4:    85 db                              	test ebx, ebx
0x1e5f6:    74 30                              	je 0x1e628 <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0x1e5f8:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e5fb:    89 04 24                           	mov dword ptr [esp], eax
0x1e5fe:    e8 1d 05 01 00                     	call 0x2eb20 <function_2eb20>
0x1e603:    8d 43 04                           	lea eax, [ebx + 4]
0x1e606:    89 04 24                           	mov dword ptr [esp], eax
0x1e609:    e8 12 05 01 00                     	call 0x2eb20 <function_2eb20>
0x1e60e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1e612:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e619:    75 1f                              	jne 0x1e63a <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1e61b:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1e61f:    83 c4 38                           	add esp, 0x38
0x1e622:    5b                                 	pop ebx
0x1e623:    e9 fc ff ff ff                     	jmp 0x1e624
0x1e628:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1e62c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e633:    75 05                              	jne 0x1e63a <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIbP5CNodeNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1e635:    83 c4 38                           	add esp, 0x38
0x1e638:    5b                                 	pop ebx
0x1e639:    c3                                 	ret 
0x1e63a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1e640 -- 0x1e641
0x1e640:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e641 -- 0x1e642
; data inside code section at 0x1e642 -- 0x1e646
0x1e642:    ff ff ff 83                                        |....            |
; function: function_1e646 at 0x1e646 -- 0x1e647
0x1e646:    c3                                 	ret 
; data inside code section at 0x1e647 -- 0x1e660
0x1e647:    04 89 44 24 1c 89 1c 24  e8 cc 04 01 00 8b 44 24   |..D$...$......D$|
0x1e657:    1c 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_ at 0x1e660 -- 0x1e6c0
0x1e660:    53                                 	push ebx
0x1e661:    83 ec 38                           	sub esp, 0x38
0x1e664:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1e668:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e66e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1e672:    31 c0                              	xor eax, eax
0x1e674:    85 db                              	test ebx, ebx
0x1e676:    74 30                              	je 0x1e6a8 <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0x1e678:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e67b:    89 04 24                           	mov dword ptr [esp], eax
0x1e67e:    e8 1d 05 01 00                     	call 0x2eba0 <function_2eba0>
0x1e683:    8d 43 04                           	lea eax, [ebx + 4]
0x1e686:    89 04 24                           	mov dword ptr [esp], eax
0x1e689:    e8 12 05 01 00                     	call 0x2eba0 <function_2eba0>
0x1e68e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1e692:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e699:    75 1f                              	jne 0x1e6ba <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1e69b:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1e69f:    83 c4 38                           	add esp, 0x38
0x1e6a2:    5b                                 	pop ebx
0x1e6a3:    e9 fc ff ff ff                     	jmp 0x1e6a4
0x1e6a8:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1e6ac:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e6b3:    75 05                              	jne 0x1e6ba <_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIbP5CNodebNS1_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS1_10connectionES5_bEEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1e6b5:    83 c4 38                           	add esp, 0x38
0x1e6b8:    5b                                 	pop ebx
0x1e6b9:    c3                                 	ret 
0x1e6ba:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1e6c0 -- 0x1e6c1
0x1e6c0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e6c1 -- 0x1e6c2
; data inside code section at 0x1e6c2 -- 0x1e6c6
0x1e6c2:    ff ff ff 83                                        |....            |
; function: function_1e6c6 at 0x1e6c6 -- 0x1e6c7
0x1e6c6:    c3                                 	ret 
; data inside code section at 0x1e6c7 -- 0x1e6e0
0x1e6c7:    04 89 44 24 1c 89 1c 24  e8 cc 04 01 00 8b 44 24   |..D$...$......D$|
0x1e6d7:    1c 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev at 0x1e6e0 -- 0x1e72f
0x1e6e0:    57                                 	push edi
0x1e6e1:    56                                 	push esi
0x1e6e2:    53                                 	push ebx
0x1e6e3:    83 ec 20                           	sub esp, 0x20
0x1e6e6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e6ea:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e6f0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e6f4:    31 c0                              	xor eax, eax
0x1e6f6:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e6f8:    39 fb                              	cmp ebx, edi
0x1e6fa:    75 06                              	jne 0x1e702 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x22>
0x1e6fc:    eb 1d                              	jmp 0x1e71b <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x3b>
; data inside code section at 0x1e6fe -- 0x1e700
0x1e6fe:    66 90                                              |f.              |
0x1e700:    89 f3                              	mov ebx, esi
0x1e702:    8b 33                              	mov esi, dword ptr [ebx]
0x1e704:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e707:    89 04 24                           	mov dword ptr [esp], eax
0x1e70a:    e8 11 05 01 00                     	call 0x2ec20 <function_2ec20>
0x1e70f:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e712:    e8 fc ff ff ff                     	call 0x1e713
0x1e717:    39 fe                              	cmp esi, edi
0x1e719:    75 e5                              	jne 0x1e700 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x20>
0x1e71b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e71f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e726:    75 07                              	jne 0x1e72f <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1ISsPKcNS0_8functionIFSsSC_EEEEENS2_5mutexEEEEESaISJ_EED1Ev+0x4e>
0x1e728:    83 c4 20                           	add esp, 0x20
0x1e72b:    5b                                 	pop ebx
0x1e72c:    5e                                 	pop esi
0x1e72d:    5f                                 	pop edi
0x1e72e:    c3                                 	ret 
; data inside code section at 0x1e72f -- 0x1e730
0x1e72f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e730 -- 0x1e731
; data inside code section at 0x1e731 -- 0x1e734
0x1e731:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_ at 0x1e740 -- 0x1e7c4
0x1e740:    57                                 	push edi
0x1e741:    56                                 	push esi
0x1e742:    53                                 	push ebx
0x1e743:    83 ec 20                           	sub esp, 0x20
0x1e746:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e74a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e750:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e754:    31 c0                              	xor eax, eax
0x1e756:    85 ff                              	test edi, edi
0x1e758:    74 56                              	je 0x1e7b0 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x70>
0x1e75a:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e75d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e761:    8d 47 08                           	lea eax, [edi + 8]
0x1e764:    89 04 24                           	mov dword ptr [esp], eax
0x1e767:    e8 f4 e1 01 00                     	call 0x3c960 <unknown_3c960>
0x1e76c:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e76e:    39 fb                              	cmp ebx, edi
0x1e770:    75 08                              	jne 0x1e77a <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0x1e772:    eb 1f                              	jmp 0x1e793 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x53>
; data inside code section at 0x1e774 -- 0x1e778
0x1e774:    8d 74 26 00                                        |.t&.            |
0x1e778:    89 f3                              	mov ebx, esi
0x1e77a:    8b 33                              	mov esi, dword ptr [ebx]
0x1e77c:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e77f:    89 04 24                           	mov dword ptr [esp], eax
0x1e782:    e8 f9 04 01 00                     	call 0x2ec80 <function_2ec80>
0x1e787:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e78a:    e8 fc ff ff ff                     	call 0x1e78b
0x1e78f:    39 fe                              	cmp esi, edi
0x1e791:    75 e5                              	jne 0x1e778 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x38>
0x1e793:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e797:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e79e:    75 24                              	jne 0x1e7c4 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x83>
0x1e7a0:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1e7a4:    83 c4 20                           	add esp, 0x20
0x1e7a7:    5b                                 	pop ebx
0x1e7a8:    5e                                 	pop esi
0x1e7a9:    5f                                 	pop edi
0x1e7aa:    e9 fc ff ff ff                     	jmp 0x1e7ab
0x1e7af:    90                                 	nop 
0x1e7b0:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e7b4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e7bb:    75 07                              	jne 0x1e7c4 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IbP5CNodeNS_8functionIFbSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x83>
0x1e7bd:    83 c4 20                           	add esp, 0x20
0x1e7c0:    5b                                 	pop ebx
0x1e7c1:    5e                                 	pop esi
0x1e7c2:    5f                                 	pop edi
0x1e7c3:    c3                                 	ret 
; data inside code section at 0x1e7c4 -- 0x1e7c5
0x1e7c4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e7c5 -- 0x1e7c6
; data inside code section at 0x1e7c6 -- 0x1e7c9
0x1e7c6:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_ at 0x1e7d0 -- 0x1e854
0x1e7d0:    57                                 	push edi
0x1e7d1:    56                                 	push esi
0x1e7d2:    53                                 	push ebx
0x1e7d3:    83 ec 20                           	sub esp, 0x20
0x1e7d6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e7da:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e7e0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e7e4:    31 c0                              	xor eax, eax
0x1e7e6:    85 ff                              	test edi, edi
0x1e7e8:    74 56                              	je 0x1e840 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x70>
0x1e7ea:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1e7ed:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e7f1:    8d 47 08                           	lea eax, [edi + 8]
0x1e7f4:    89 04 24                           	mov dword ptr [esp], eax
0x1e7f7:    e8 d4 e3 01 00                     	call 0x3cbd0 <unknown_3cbd0>
0x1e7fc:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e7fe:    39 fb                              	cmp ebx, edi
0x1e800:    75 08                              	jne 0x1e80a <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0x1e802:    eb 1f                              	jmp 0x1e823 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x53>
; data inside code section at 0x1e804 -- 0x1e808
0x1e804:    8d 74 26 00                                        |.t&.            |
0x1e808:    89 f3                              	mov ebx, esi
0x1e80a:    8b 33                              	mov esi, dword ptr [ebx]
0x1e80c:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e80f:    89 04 24                           	mov dword ptr [esp], eax
0x1e812:    e8 f9 04 01 00                     	call 0x2ed10 <function_2ed10>
0x1e817:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e81a:    e8 fc ff ff ff                     	call 0x1e81b
0x1e81f:    39 fe                              	cmp esi, edi
0x1e821:    75 e5                              	jne 0x1e808 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x38>
0x1e823:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e827:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e82e:    75 24                              	jne 0x1e854 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x83>
0x1e830:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1e834:    83 c4 20                           	add esp, 0x20
0x1e837:    5b                                 	pop ebx
0x1e838:    5e                                 	pop esi
0x1e839:    5f                                 	pop edi
0x1e83a:    e9 fc ff ff ff                     	jmp 0x1e83b
0x1e83f:    90                                 	nop 
0x1e840:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e844:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e84b:    75 07                              	jne 0x1e854 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IbP5CNodebNS_8functionIFbSF_bEEEEENS1_5mutexEEEEEEEEEvPT_+0x83>
0x1e84d:    83 c4 20                           	add esp, 0x20
0x1e850:    5b                                 	pop ebx
0x1e851:    5e                                 	pop esi
0x1e852:    5f                                 	pop edi
0x1e853:    c3                                 	ret 
; data inside code section at 0x1e854 -- 0x1e855
0x1e854:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1e855 -- 0x1e856
; data inside code section at 0x1e856 -- 0x1e859
0x1e856:    ff ff ff                                           |...             |
; section: .text._ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED2Ev
; function: _ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev at 0x1e860 -- 0x1e8b4
0x1e860:    57                                 	push edi
0x1e861:    56                                 	push esi
0x1e862:    53                                 	push ebx
0x1e863:    83 ec 20                           	sub esp, 0x20
0x1e866:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1e86a:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e870:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e874:    31 c0                              	xor eax, eax
0x1e876:    8b 1f                              	mov ebx, dword ptr [edi]
0x1e878:    39 fb                              	cmp ebx, edi
0x1e87a:    75 06                              	jne 0x1e882 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev+0x22>
0x1e87c:    eb 1d                              	jmp 0x1e89b <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev+0x3b>
; data inside code section at 0x1e87e -- 0x1e880
0x1e87e:    66 90                                              |f.              |
0x1e880:    89 f3                              	mov ebx, esi
0x1e882:    8b 33                              	mov esi, dword ptr [ebx]
0x1e884:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1e887:    89 04 24                           	mov dword ptr [esp], eax
0x1e88a:    e8 11 05 01 00                     	call 0x2eda0 <function_2eda0>
0x1e88f:    89 1c 24                           	mov dword ptr [esp], ebx
0x1e892:    e8 fc ff ff ff                     	call 0x1e893
0x1e897:    39 fe                              	cmp esi, edi
0x1e899:    75 e5                              	jne 0x1e880 <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev+0x20>
0x1e89b:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1e89f:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1e8a6:    75 07                              	jne 0x1e8af <_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot1IviNS0_8functionIFviEEEEENS2_5mutexEEEEESaISH_EED1Ev+0x4f>
0x1e8a8:    83 c4 20                           	add esp, 0x20
0x1e8ab:    5b                                 	pop ebx
0x1e8ac:    5e                                 	pop esi
0x1e8ad:    5f                                 	pop edi
0x1e8ae:    c3                                 	ret 
0x1e8af:    e8 fc ff ff ff                     	call 0x1e8b0
; section: .text._ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i
; function: _ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i at 0x1e8c0 -- 0x1e96f
0x1e8c0:    83 ec 2c                           	sub esp, 0x2c
0x1e8c3:    31 c9                              	xor ecx, ecx
0x1e8c5:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x1e8c9:    8b 74 24 38                        	mov esi, dword ptr [esp + 0x38]
0x1e8cd:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e8d3:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e8d7:    31 c0                              	xor eax, eax
0x1e8d9:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x1e8dd:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1e8e1:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x1e8e5:    8b 56 04                           	mov edx, dword ptr [esi + 4]
0x1e8e8:    c7 44 24 14 00 00 00 00            	mov dword ptr [esp + 0x14], 0
0x1e8f0:    85 d2                              	test edx, edx
0x1e8f2:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1e8f6:    74 1d                              	je 0x1e915 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x55>
0x1e8f8:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x1e8fb:    85 c0                              	test eax, eax
0x1e8fd:    74 0a                              	je 0x1e909 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x49>
0x1e8ff:    89 c7                              	mov edi, eax
0x1e901:    47                                 	inc edi
0x1e902:    f0 0f b1 7a 04                     	lock cmpxchg dword ptr [edx + 4], edi
0x1e907:    75 f2                              	jne 0x1e8fb <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x3b>
0x1e909:    85 c0                              	test eax, eax
0x1e90b:    75 53                              	jne 0x1e960 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0xa0>
0x1e90d:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x1e915:    83 fb fc                           	cmp ebx, -4
0x1e918:    74 12                              	je 0x1e92c <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x6c>
0x1e91a:    8b 44 24 14                        	mov eax, dword ptr [esp + 0x14]
0x1e91e:    85 c9                              	test ecx, ecx
0x1e920:    89 4b 08                           	mov dword ptr [ebx + 8], ecx
0x1e923:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1e926:    74 04                              	je 0x1e92c <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x6c>
0x1e928:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x1e92c:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x1e930:    c7 03 00 00 00 00                  	mov dword ptr [ebx], 0
0x1e936:    89 04 24                           	mov dword ptr [esp], eax
0x1e939:    e8 c2 04 01 00                     	call 0x2ee00 <_ZZN5boost8optionalISsE3getEvE19__PRETTY_FUNCTION__>
0x1e93e:    89 d8                              	mov eax, ebx
0x1e940:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1e944:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1e94b:    75 1d                              	jne 0x1e96a <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0xaa>
0x1e94d:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x1e951:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x1e955:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x1e959:    83 c4 2c                           	add esp, 0x2c
0x1e95c:    c2 04 00                           	ret 4
; data inside code section at 0x1e95f -- 0x1e960
0x1e95f:    90                                                 |.               |
0x1e960:    8b 06                              	mov eax, dword ptr [esi]
0x1e962:    89 d1                              	mov ecx, edx
0x1e964:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x1e968:    eb ab                              	jmp 0x1e915 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS_8weak_ptrIvEEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_EERT_i+0x55>
0x1e96a:    e8 fc ff ff ff                     	call 0x1e96b
; section: .text._ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i
; function: _ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i at 0x1e970 -- 0x1ea05
0x1e970:    53                                 	push ebx
0x1e971:    83 ec 28                           	sub esp, 0x28
0x1e974:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1e97a:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1e97e:    31 c0                              	xor eax, eax
0x1e980:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x1e984:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1e988:    8b 00                              	mov eax, dword ptr [eax]
0x1e98a:    85 c0                              	test eax, eax
0x1e98c:    74 58                              	je 0x1e9e6 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i+0x76>
0x1e98e:    8b 10                              	mov edx, dword ptr [eax]
0x1e990:    8d 4c 24 18                        	lea ecx, [esp + 0x18]
0x1e994:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1e998:    89 0c 24                           	mov dword ptr [esp], ecx
0x1e99b:    ff 52 08                           	call dword ptr [edx + 8]
0x1e99e:    83 ec 04                           	sub esp, 4
0x1e9a1:    83 fb fc                           	cmp ebx, -4
0x1e9a4:    74 0f                              	je 0x1e9b5 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i+0x45>
0x1e9a6:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1e9aa:    8b 10                              	mov edx, dword ptr [eax]
0x1e9ac:    89 04 24                           	mov dword ptr [esp], eax
0x1e9af:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x1e9b2:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x1e9b5:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x1e9b9:    c7 03 01 00 00 00                  	mov dword ptr [ebx], 1
0x1e9bf:    85 c0                              	test eax, eax
0x1e9c1:    74 08                              	je 0x1e9cb <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i+0x5b>
0x1e9c3:    8b 10                              	mov edx, dword ptr [eax]
0x1e9c5:    89 04 24                           	mov dword ptr [esp], eax
0x1e9c8:    ff 52 04                           	call dword ptr [edx + 4]
0x1e9cb:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1e9cf:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1e9d6:    89 d8                              	mov eax, ebx
0x1e9d8:    75 07                              	jne 0x1e9e1 <_ZN5boost6detail7variant14invoke_visitorIKNS_8signals26detail21lock_weak_ptr_visitorEE14internal_visitIKNS4_21foreign_void_weak_ptrEEENS_7variantINS_10shared_ptrIvEENS4_23foreign_void_shared_ptrENS1_5void_ESF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_SF_EERT_i+0x71>
0x1e9da:    83 c4 28                           	add esp, 0x28
0x1e9dd:    5b                                 	pop ebx
0x1e9de:    c2 04 00                           	ret 4
0x1e9e1:    e8 fc ff ff ff                     	call 0x1e9e2
0x1e9e6:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x1e9ee:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x1e9f6:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x1e9fe:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x1ea05 -- 0x1ea06
0x1ea05:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1ea06 -- 0x1ea07
; data inside code section at 0x1ea07 -- 0x1ea09
0x1ea07:    ff ff                                              |..              |
; function: function_1ea09 at 0x1ea09 -- 0x1ea10
0x1ea09:    ff 8b 54 24 18 89                  	dec dword ptr [ebx - 0x76e7dbac]
0x1ea0f:    c3                                 	ret 
; data inside code section at 0x1ea10 -- 0x1ea20
0x1ea10:    85 d2 74 08 8b 02 89 14  24 ff 50 04 89 1c 24 e8   |..t.....$.P...$.|
; dynamically linked function: _Unwind_Resume at 0x1ea20 -- 0x1ea21
; data inside code section at 0x1ea21 -- 0x1ea24
0x1ea21:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_
; function: _ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_ at 0x1ea30 -- 0x1ea84
0x1ea30:    83 ec 3c                           	sub esp, 0x3c
0x1ea33:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x1ea37:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x1ea3b:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x1ea3f:    65 8b 3d 14 00 00 00               	mov edi, dword ptr gs:[0x14]
0x1ea46:    89 7c 24 2c                        	mov dword ptr [esp + 0x2c], edi
0x1ea4a:    31 ff                              	xor edi, edi
0x1ea4c:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x1ea50:    89 5c 24 30                        	mov dword ptr [esp + 0x30], ebx
0x1ea54:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1ea58:    83 fa 13                           	cmp edx, 0x13
0x1ea5b:    89 74 24 34                        	mov dword ptr [esp + 0x34], esi
0x1ea5f:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1ea63:    76 2b                              	jbe 0x1ea90 <function_1ea90>
0x1ea65:    c7 44 24 0c 40 9c 02 00            	mov dword ptr [esp + 0xc], 0x29c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x1ea6d:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x1ea75:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x1ea7d:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x1ea84 -- 0x1ea85
0x1ea84:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x1ea85 -- 0x1ea86
; data inside code section at 0x1ea86 -- 0x1ea90
0x1ea86:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_1ea90 at 0x1ea90 -- 0x1ea97
0x1ea90:    ff 24 95 44 eb 01 00               	jmp dword ptr [edx*4 + 0x1eb44]
; data inside code section at 0x1ea97 -- 0x1eac7
0x1ea97:    90 8d 44 24 10 e8 9f 00  00 00 8d b4 26 00 00 00   |..D$........&...|
0x1eaa7:    00 85 c0 c7 44 24 0c 01  00 00 00 78 5c 89 74 24   |....D$.....x\.t$|
0x1eab7:    08 89 4c 24 04 89 1c 24  e8 dc e8 01 00 83 ec 04   |..L$...$........|
; function: function_1eac7 at 0x1eac7 -- 0x1eac8
; data inside code section at 0x1eac8 -- 0x1ead2
0x1eac8:    54 24 2c 65 33 15 14 00  00 00                     |T$,e3.....      |
; function: function_1ead2 at 0x1ead2 -- 0x1eae8
0x1ead2:    89 d8                              	mov eax, ebx
0x1ead4:    75 69                              	jne 0x1eb3f <function_1ead2+0x13>
0x1ead6:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x1eada:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x1eade:    8b 7c 24 38                        	mov edi, dword ptr [esp + 0x38]
0x1eae2:    83 c4 3c                           	add esp, 0x3c
0x1eae5:    c2 04 00                           	ret 4
; function: function_1eae8 at 0x1eae8 -- 0x1eb3f
0x1eae8:    85 c0                              	test eax, eax
0x1eaea:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x1eaf2:    78 34                              	js 0x1eb28 <function_1eae8+0x40>
0x1eaf4:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x1eaf8:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1eafc:    89 1c 24                           	mov dword ptr [esp], ebx
0x1eaff:    e8 ec e7 01 00                     	call 0x3d2f0 <unknown_3d2f0>
0x1eb04:    83 ec 04                           	sub esp, 4
0x1eb07:    eb be                              	jmp 0x1eac7 <function_1eac7>
; data inside code section at 0x1eb09 -- 0x1eb10
0x1eb09:    8d b4 26 00 00 00 00                               |..&....         |
0x1eb10:    8b 06                              	mov eax, dword ptr [esi]
0x1eb12:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1eb16:    89 1c 24                           	mov dword ptr [esp], ebx
0x1eb19:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1eb1d:    e8 7e e8 01 00                     	call 0x3d3a0 <unknown_3d3a0>
0x1eb22:    83 ec 04                           	sub esp, 4
0x1eb25:    eb a0                              	jmp 0x1eac7 <function_1eac7>
; data inside code section at 0x1eb27 -- 0x1eb28
0x1eb27:    90                                                 |.               |
0x1eb28:    8b 06                              	mov eax, dword ptr [esi]
0x1eb2a:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x1eb2e:    89 1c 24                           	mov dword ptr [esp], ebx
0x1eb31:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1eb35:    e8 b6 e7 01 00                     	call 0x3d2f0 <unknown_3d2f0>
0x1eb3a:    83 ec 04                           	sub esp, 4
0x1eb3d:    eb 88                              	jmp 0x1eac7 <function_1eac7>
; data inside code section at 0x1eb3f -- 0x1eb40
0x1eb3f:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1eb40 -- 0x1eb41
; data inside code section at 0x1eb41 -- 0x1eb44
0x1eb41:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_
; function: _ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_ at 0x1eba0 -- 0x1ec31
0x1eba0:    55                                 	push ebp
0x1eba1:    57                                 	push edi
0x1eba2:    56                                 	push esi
0x1eba3:    53                                 	push ebx
0x1eba4:    83 ec 3c                           	sub esp, 0x3c
0x1eba7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ebad:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1ebb1:    31 c0                              	xor eax, eax
0x1ebb3:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1ebb7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1ebbb:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1ebbf:    c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
0x1ebc6:    e8 fc ff ff ff                     	call 0x1ebc7
0x1ebcb:    83 f8 f0                           	cmp eax, -0x10
0x1ebce:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1ebd2:    74 0a                              	je 0x1ebde <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_+0x3e>
0x1ebd4:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x1ebd7:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1ebdb:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x1ebde:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1ebe2:    8b 03                              	mov eax, dword ptr [ebx]
0x1ebe4:    c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0x1ebeb:    89 02                              	mov dword ptr [edx], eax
0x1ebed:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1ebf0:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x1ebf7:    89 72 04                           	mov dword ptr [edx + 4], esi
0x1ebfa:    85 c0                              	test eax, eax
0x1ebfc:    74 17                              	je 0x1ec15 <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_+0x75>
0x1ebfe:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1ec02:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1ec06:    89 2c 24                           	mov dword ptr [esp], ebp
0x1ec09:    e8 32 eb 01 00                     	call 0x3d740 <unknown_3d740>
0x1ec0e:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1ec12:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x1ec15:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1ec18:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1ec1c:    85 f6                              	test esi, esi
0x1ec1e:    75 0a                              	jne 0x1ec2a <_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_+0x8a>
0x1ec20:    eb 5a                              	jmp 0x1ec7c <function_1ec7c>
; data inside code section at 0x1ec22 -- 0x1ec28
0x1ec22:    8d b6 00 00 00 00                                  |......          |
0x1ec28:    89 df                              	mov edi, ebx
0x1ec2a:    c7 04 24 14 00 00 00               	mov dword ptr [esp], 0x14
; data inside code section at 0x1ec31 -- 0x1ec32
0x1ec31:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1ec32 -- 0x1ec33
; data inside code section at 0x1ec33 -- 0x1ec3a
0x1ec33:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_1ec3a at 0x1ec3a -- 0x1ec3b
0x1ec3a:    c3                                 	ret 
; data inside code section at 0x1ec3b -- 0x1ec40
0x1ec3b:    74 06 8b 46 10                                     |t..F.           |
; function: function_1ec40 at 0x1ec40 -- 0x1ec4c
0x1ec40:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1ec43:    8b 06                              	mov eax, dword ptr [esi]
0x1ec45:    c7 43 0c 00 00 00 00               	mov dword ptr [ebx + 0xc], 0
; data inside code section at 0x1ec4c -- 0x1ec50
0x1ec4c:    c7 43 08 00                                        |.C..            |
; function: function_1ec50 at 0x1ec50 -- 0x1ec80
0x1ec50:    00 00                              	add byte ptr [eax], al
0x1ec52:    00 89 7b 04 89 03                  	add byte ptr [ecx + 0x389047b], cl
0x1ec58:    8b 46 0c                           	mov eax, dword ptr [esi + 0xc]
0x1ec5b:    89 5f 08                           	mov dword ptr [edi + 8], ebx
0x1ec5e:    85 c0                              	test eax, eax
0x1ec60:    74 13                              	je 0x1ec75 <function_1ec50+0x25>
0x1ec62:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x1ec66:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1ec6a:    89 2c 24                           	mov dword ptr [esp], ebp
0x1ec6d:    e8 ce ea 01 00                     	call 0x3d740 <unknown_3d740>
0x1ec72:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1ec75:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x1ec78:    85 f6                              	test esi, esi
0x1ec7a:    75 ac                              	jne 0x1ec28
0x1ec7c:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
; data inside code section at 0x1ec80 -- 0x1ec83
0x1ec80:    65 33 15                                           |e3.             |
; function: function_1ec83 at 0x1ec83 -- 0x1ec95
0x1ec83:    14 00                              	adc al, 0
0x1ec85:    00 00                              	add byte ptr [eax], al
0x1ec87:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ec8b:    75 25                              	jne 0x1ecb2 <function_1ecb2>
0x1ec8d:    83 c4 3c                           	add esp, 0x3c
0x1ec90:    5b                                 	pop ebx
0x1ec91:    5e                                 	pop esi
0x1ec92:    5f                                 	pop edi
0x1ec93:    5d                                 	pop ebp
0x1ec94:    c3                                 	ret 
; data inside code section at 0x1ec95 -- 0x1ec99
0x1ec95:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1ec99 -- 0x1ec9a
; data inside code section at 0x1ec9a -- 0x1ecae
0x1ec9a:    ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 d3   |....D$..,$.D$...|
0x1ecaa:    38 01 00 e8                                        |8...            |
; dynamically linked function: __cxa_rethrow at 0x1ecae -- 0x1ecaf
; data inside code section at 0x1ecaf -- 0x1ecb0
0x1ecaf:    ff                                                 |.               |
; function: function_1ecb0 at 0x1ecb0 -- 0x1ecb1
; data inside code section at 0x1ecb1 -- 0x1ecb2
0x1ecb1:    ff                                                 |.               |
; function: function_1ecb2 at 0x1ecb2 -- 0x1ecb9
0x1ecb2:    e8 fc ff ff ff                     	call 0x1ecb3
0x1ecb7:    89 c3                              	mov ebx, eax
; data inside code section at 0x1ecb9 -- 0x1ecba
0x1ecb9:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1ecba -- 0x1ecbb
; data inside code section at 0x1ecbb -- 0x1ecc2
0x1ecbb:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1ecc2 -- 0x1ecc3
; data inside code section at 0x1ecc3 -- 0x1ecc6
0x1ecc3:    ff ff ff                                           |...             |
; section: .text._ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIiSt4lessIiESaIiEEjS6_EEvT_T0_RKT1_
; function: _ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIiSt4lessIiESaIiEEjS6_EEvT_T0_RKT1_ at 0x1ecd0 -- 0x1ecef
0x1ecd0:    55                                 	push ebp
0x1ecd1:    57                                 	push edi
0x1ecd2:    56                                 	push esi
0x1ecd3:    53                                 	push ebx
0x1ecd4:    83 ec 2c                           	sub esp, 0x2c
0x1ecd7:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1ecdb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ece1:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1ece5:    31 c0                              	xor eax, eax
0x1ece7:    8b 6c 24 40                        	mov ebp, dword ptr [esp + 0x40]
0x1eceb:    8b 74 24 48                        	mov esi, dword ptr [esp + 0x48]
; data inside code section at 0x1ecef -- 0x1ecf0
0x1ecef:    85                                                 |.               |
; function: function_1ecf0 at 0x1ecf0 -- 0x1ecf6
0x1ecf0:    ff 74 6f 89                        	push dword ptr [edi + ebp*2 - 0x77]
0x1ecf4:    eb 8d                              	jmp 0x1ec83 <function_1ec83>
; data inside code section at 0x1ecf6 -- 0x1ecf8
0x1ecf6:    76 00                                              |v.              |
; function: function_1ecf8 at 0x1ecf8 -- 0x1ed0d
0x1ecf8:    85 db                              	test ebx, ebx
0x1ecfa:    74 5e                              	je 0x1ed5a
0x1ecfc:    8d 43 04                           	lea eax, [ebx + 4]
0x1ecff:    c7 43 04 00 00 00 00               	mov dword ptr [ebx + 4], 0
0x1ed06:    c7 43 08 00 00 00 00               	mov dword ptr [ebx + 8], 0
; data inside code section at 0x1ed0d -- 0x1ed10
0x1ed0d:    c7 43 14                                           |.C.             |
; function: function_1ed10 at 0x1ed10 -- 0x1ed77
0x1ed10:    00 00                              	add byte ptr [eax], al
0x1ed12:    00 00                              	add byte ptr [eax], al
0x1ed14:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1ed17:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1ed1a:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x1ed1d:    85 d2                              	test edx, edx
0x1ed1f:    74 39                              	je 0x1ed5a <function_1ed10+0x4a>
0x1ed21:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1ed25:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1ed29:    89 1c 24                           	mov dword ptr [esp], ebx
0x1ed2c:    e8 3f eb 01 00                     	call 0x3d870 <unknown_3d870>
0x1ed31:    89 43 08                           	mov dword ptr [ebx + 8], eax
0x1ed34:    89 c1                              	mov ecx, eax
0x1ed36:    eb 02                              	jmp 0x1ed3a <function_1ed10+0x2a>
0x1ed38:    89 d1                              	mov ecx, edx
0x1ed3a:    8b 51 08                           	mov edx, dword ptr [ecx + 8]
0x1ed3d:    85 d2                              	test edx, edx
0x1ed3f:    75 f7                              	jne 0x1ed38 <function_1ed10+0x28>
0x1ed41:    89 4b 0c                           	mov dword ptr [ebx + 0xc], ecx
0x1ed44:    eb 04                              	jmp 0x1ed4a <function_1ed10+0x3a>
; data inside code section at 0x1ed46 -- 0x1ed48
0x1ed46:    66 90                                              |f.              |
0x1ed48:    89 d0                              	mov eax, edx
0x1ed4a:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x1ed4d:    85 d2                              	test edx, edx
0x1ed4f:    75 f7                              	jne 0x1ed48 <function_1ed10+0x38>
0x1ed51:    89 43 10                           	mov dword ptr [ebx + 0x10], eax
0x1ed54:    8b 46 14                           	mov eax, dword ptr [esi + 0x14]
0x1ed57:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x1ed5a:    83 c3 18                           	add ebx, 0x18
0x1ed5d:    83 ef 01                           	sub edi, 1
0x1ed60:    75 96                              	jne 0x1ecf8 <function_1ecf8>
0x1ed62:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ed66:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ed6d:    75 21                              	jne 0x1ed90 <function_1ed10+0x66>
0x1ed6f:    83 c4 2c                           	add esp, 0x2c
0x1ed72:    5b                                 	pop ebx
0x1ed73:    5e                                 	pop esi
0x1ed74:    5f                                 	pop edi
0x1ed75:    5d                                 	pop ebp
0x1ed76:    c3                                 	ret 
; data inside code section at 0x1ed77 -- 0x1ed80
0x1ed77:    89 04 24 e8 fc ff ff ff  89                        |..$......       |
; function: function_1ed80 at 0x1ed80 -- 0x1ed90
0x1ed80:    5c                                 	pop esp
0x1ed81:    24 04                              	and al, 4
0x1ed83:    89 2c 24                           	mov dword ptr [esp], ebp
0x1ed86:    e8 45 4e 01 00                     	call 0x33bd0 <unknown_33bd0>
0x1ed8b:    e8 fc ff ff ff                     	call 0x1ed8c
; data inside code section at 0x1ed90 -- 0x1ed91
0x1ed90:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ed91 -- 0x1ed92
; data inside code section at 0x1ed92 -- 0x1ed96
0x1ed92:    ff ff ff 89                                        |....            |
; function: function_1ed96 at 0x1ed96 -- 0x1ed97
0x1ed96:    c3                                 	ret 
; data inside code section at 0x1ed97 -- 0x1ed98
0x1ed97:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1ed98 -- 0x1ed99
; data inside code section at 0x1ed99 -- 0x1eda0
0x1ed99:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1eda0 -- 0x1eda1
; data inside code section at 0x1eda1 -- 0x1eda4
0x1eda1:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E at 0x1edb0 -- 0x1edf2
0x1edb0:    57                                 	push edi
0x1edb1:    56                                 	push esi
0x1edb2:    53                                 	push ebx
0x1edb3:    83 ec 20                           	sub esp, 0x20
0x1edb6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1edba:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1edc0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1edc4:    31 c0                              	xor eax, eax
0x1edc6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1edca:    85 db                              	test ebx, ebx
0x1edcc:    75 04                              	jne 0x1edd2 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x22>
0x1edce:    eb 2a                              	jmp 0x1edfa <function_1edfa>
0x1edd0:    89 f3                              	mov ebx, esi
0x1edd2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1edd5:    89 3c 24                           	mov dword ptr [esp], edi
0x1edd8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1eddc:    e8 7f ed 01 00                     	call 0x3db60 <unknown_3db60>
0x1ede1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1ede4:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x1ede8:    74 04                              	je 0x1edee <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE8_M_eraseEPSt13_Rb_tree_nodeISN_E+0x3a>
0x1edea:    c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
; data inside code section at 0x1edee -- 0x1edf0
0x1edee:    89 1c                                              |..              |
0x1edf0:    24 e8                              	and al, 0xe8
; dynamically linked function: _ZdlPv at 0x1edf2 -- 0x1edf3
; data inside code section at 0x1edf3 -- 0x1edfa
0x1edf3:    ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_1edfa at 0x1edfa -- 0x1ee0e
0x1edfa:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1edfe:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ee05:    75 07                              	jne 0x1ee0e <function_1edfa+0x13>
0x1ee07:    83 c4 20                           	add esp, 0x20
0x1ee0a:    5b                                 	pop ebx
0x1ee0b:    5e                                 	pop esi
0x1ee0c:    5f                                 	pop edi
0x1ee0d:    c3                                 	ret 
; data inside code section at 0x1ee0e -- 0x1ee0f
0x1ee0e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1ee0f -- 0x1ee10
; data inside code section at 0x1ee10 -- 0x1ee13
0x1ee10:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv at 0x1ee20 -- 0x1ee5f
0x1ee20:    57                                 	push edi
0x1ee21:    56                                 	push esi
0x1ee22:    53                                 	push ebx
0x1ee23:    83 ec 20                           	sub esp, 0x20
0x1ee26:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ee2c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1ee30:    31 c0                              	xor eax, eax
0x1ee32:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1ee36:    8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0x1ee39:    85 ff                              	test edi, edi
0x1ee3b:    74 53                              	je 0x1ee90
0x1ee3d:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1ee40:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1ee44:    8d 47 08                           	lea eax, [edi + 8]
0x1ee47:    89 04 24                           	mov dword ptr [esp], eax
0x1ee4a:    e8 81 ed 01 00                     	call 0x3dbd0 <unknown_3dbd0>
0x1ee4f:    8b 1f                              	mov ebx, dword ptr [edi]
0x1ee51:    39 fb                              	cmp ebx, edi
0x1ee53:    75 05                              	jne 0x1ee5a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0x1ee55:    eb 1c                              	jmp 0x1ee73
; data inside code section at 0x1ee57 -- 0x1ee58
0x1ee57:    90                                                 |.               |
0x1ee58:    89 f3                              	mov ebx, esi
0x1ee5a:    8b 33                              	mov esi, dword ptr [ebx]
0x1ee5c:    8d 43 0c                           	lea eax, [ebx + 0xc]
; data inside code section at 0x1ee5f -- 0x1ee60
0x1ee5f:    89                                                 |.               |
; function: function_1ee60 at 0x1ee60 -- 0x1eea4
0x1ee60:    04 24                              	add al, 0x24
0x1ee62:    e8 f9 04 01 00                     	call 0x2f360 <function_2f360>
0x1ee67:    89 1c 24                           	mov dword ptr [esp], ebx
0x1ee6a:    e8 fc ff ff ff                     	call 0x1ee6b
0x1ee6f:    39 fe                              	cmp esi, edi
0x1ee71:    75 e5                              	jne 0x1ee58
0x1ee73:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ee77:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ee7e:    75 24                              	jne 0x1eea4 <function_1ee60+0x43>
0x1ee80:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1ee84:    83 c4 20                           	add esp, 0x20
0x1ee87:    5b                                 	pop ebx
0x1ee88:    5e                                 	pop esi
0x1ee89:    5f                                 	pop edi
0x1ee8a:    e9 fc ff ff ff                     	jmp 0x1ee8b
0x1ee8f:    90                                 	nop 
0x1ee90:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ee94:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ee9b:    75 07                              	jne 0x1eea4 <function_1ee60+0x43>
0x1ee9d:    83 c4 20                           	add esp, 0x20
0x1eea0:    5b                                 	pop ebx
0x1eea1:    5e                                 	pop esi
0x1eea2:    5f                                 	pop edi
0x1eea3:    c3                                 	ret 
; data inside code section at 0x1eea4 -- 0x1eea5
0x1eea4:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1eea5 -- 0x1eea6
; data inside code section at 0x1eea6 -- 0x1eea9
0x1eea6:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_ at 0x1eeb0 -- 0x1ef39
0x1eeb0:    57                                 	push edi
0x1eeb1:    56                                 	push esi
0x1eeb2:    53                                 	push ebx
0x1eeb3:    83 ec 20                           	sub esp, 0x20
0x1eeb6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1eeba:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1eec0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1eec4:    31 c0                              	xor eax, eax
0x1eec6:    85 ff                              	test edi, edi
0x1eec8:    74 56                              	je 0x1ef20 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x70>
0x1eeca:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
; data inside code section at 0x1eecd -- 0x1eed0
0x1eecd:    89 44 24                                           |.D$             |
0x1eed0:    04 8d                              	add al, 0x8d
0x1eed2:    47                                 	inc edi
0x1eed3:    08 89 04 24 e8 84                  	or byte ptr [ecx - 0x7b17dbfc], cl
0x1eed9:    ed                                 	in eax, dx
0x1eeda:    01 00                              	add dword ptr [eax], eax
0x1eedc:    8b 1f                              	mov ebx, dword ptr [edi]
0x1eede:    39 fb                              	cmp ebx, edi
0x1eee0:    75 08                              	jne 0x1eeea <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0x1eee2:    eb 1f                              	jmp 0x1ef03 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x53>
; data inside code section at 0x1eee4 -- 0x1eee8
0x1eee4:    8d 74 26 00                                        |.t&.            |
0x1eee8:    89 f3                              	mov ebx, esi
0x1eeea:    8b 33                              	mov esi, dword ptr [ebx]
0x1eeec:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1eeef:    89 04 24                           	mov dword ptr [esp], eax
0x1eef2:    e8 f9 04 01 00                     	call 0x2f3f0 <function_2f3f0>
0x1eef7:    89 1c 24                           	mov dword ptr [esp], ebx
0x1eefa:    e8 fc ff ff ff                     	call 0x1eefb
0x1eeff:    39 fe                              	cmp esi, edi
0x1ef01:    75 e5                              	jne 0x1eee8 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x38>
0x1ef03:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ef07:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ef0e:    75 24                              	jne 0x1ef34 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x84>
0x1ef10:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1ef14:    83 c4 20                           	add esp, 0x20
0x1ef17:    5b                                 	pop ebx
0x1ef18:    5e                                 	pop esi
0x1ef19:    5f                                 	pop edi
0x1ef1a:    e9 fc ff ff ff                     	jmp 0x1ef1b
0x1ef1f:    90                                 	nop 
0x1ef20:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1ef24:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ef2b:    75 07                              	jne 0x1ef34 <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSF_EEEEENS1_5mutexEEEEEEEEEvPT_+0x84>
0x1ef2d:    83 c4 20                           	add esp, 0x20
0x1ef30:    5b                                 	pop ebx
0x1ef31:    5e                                 	pop esi
0x1ef32:    5f                                 	pop edi
0x1ef33:    c3                                 	ret 
0x1ef34:    e8 fc ff ff ff                     	call 0x1ef35
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_ at 0x1ef40 -- 0x1efa0
0x1ef40:    53                                 	push ebx
0x1ef41:    83 ec 38                           	sub esp, 0x38
0x1ef44:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1ef48:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ef4e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1ef52:    31 c0                              	xor eax, eax
0x1ef54:    85 db                              	test ebx, ebx
0x1ef56:    74 30                              	je 0x1ef88 <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0x1ef58:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1ef5b:    89 04 24                           	mov dword ptr [esp], eax
0x1ef5e:    e8 1d 05 01 00                     	call 0x2f480 <function_2f480>
0x1ef63:    8d 43 04                           	lea eax, [ebx + 4]
0x1ef66:    89 04 24                           	mov dword ptr [esp], eax
0x1ef69:    e8 12 05 01 00                     	call 0x2f480 <function_2f480>
0x1ef6e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1ef72:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1ef79:    75 1f                              	jne 0x1ef9a <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implISsPKcNS1_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS1_10connectionES5_EEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1ef7b:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1ef7f:    83 c4 38                           	add esp, 0x38
0x1ef82:    5b                                 	pop ebx
0x1ef83:    e9 fc ff ff ff                     	jmp 0x1ef84
0x1ef88:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
; data inside code section at 0x1ef8c -- 0x1ef90
0x1ef8c:    65 33 05 14                                        |e3..            |
0x1ef90:    00 00                              	add byte ptr [eax], al
0x1ef92:    00 75 05                           	add byte ptr [ebp + 5], dh
0x1ef95:    83 c4 38                           	add esp, 0x38
0x1ef98:    5b                                 	pop ebx
0x1ef99:    c3                                 	ret 
0x1ef9a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1efa0 -- 0x1efa1
0x1efa0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1efa1 -- 0x1efa2
; data inside code section at 0x1efa2 -- 0x1efa6
0x1efa2:    ff ff ff 83                                        |....            |
; function: function_1efa6 at 0x1efa6 -- 0x1efa7
0x1efa6:    c3                                 	ret 
; data inside code section at 0x1efa7 -- 0x1efb0
0x1efa7:    04 89 44 24 1c 89 1c 24  e8                        |..D$...$.       |
; function: function_1efb0 at 0x1efb0 -- 0x1efc0
0x1efb0:    cc                                 	int3 
0x1efb1:    04 01                              	add al, 1
0x1efb3:    00 8b 44 24 1c 89                  	add byte ptr [ebx - 0x76e3dbbc], cl
0x1efb9:    04 24                              	add al, 0x24
0x1efbb:    e8 fc ff ff ff                     	call 0x1efbc
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_ at 0x1efc0 -- 0x1efe6
0x1efc0:    55                                 	push ebp
0x1efc1:    57                                 	push edi
0x1efc2:    56                                 	push esi
0x1efc3:    53                                 	push ebx
0x1efc4:    83 ec 3c                           	sub esp, 0x3c
0x1efc7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1efcd:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1efd1:    31 c0                              	xor eax, eax
0x1efd3:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1efd7:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1efdb:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1efdf:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1efe6 -- 0x1efe7
0x1efe6:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1efe7 -- 0x1efe8
; data inside code section at 0x1efe8 -- 0x1f030
0x1efe8:    ff ff ff 83 f8 f0 89 44  24 1c 74 28 8b 43 10 8b   |.......D$.t(.C..|
0x1eff8:    54 24 1c 89 42 10 c6 42  14 00 80 7b 14 00 74 0a   |T$..B..B...{..t.|
0x1f008:    8b 43 18 c6 42 14 01 89  42 18 8b 43 1c 8b 54 24   |.C..B...B..C..T$|
0x1f018:    1c 89 42 1c 8b 54 24 1c  8b 03 c7 42 0c 00 00 00   |..B..T$....B....|
0x1f028:    00 89 02 8b 43 0c c7 42                            |....C..B        |
; function: function_1f030 at 0x1f030 -- 0x1f069
0x1f030:    08 00                              	or byte ptr [eax], al
0x1f032:    00 00                              	add byte ptr [eax], al
0x1f034:    00 89 72 04 85 c0                  	add byte ptr [ecx - 0x3f7afb8e], cl
0x1f03a:    74 17                              	je 0x1f053 <function_1f030+0x23>
0x1f03c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1f040:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f044:    89 2c 24                           	mov dword ptr [esp], ebp
0x1f047:    e8 34 ef 01 00                     	call 0x3df80 <unknown_3df80>
0x1f04c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f050:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x1f053:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1f056:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1f05a:    85 f6                              	test esi, esi
0x1f05c:    75 04                              	jne 0x1f062 <function_1f030+0x32>
0x1f05e:    eb 6e                              	jmp 0x1f0ce <function_1f0ce>
0x1f060:    89 df                              	mov edi, ebx
0x1f062:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1f069 -- 0x1f06a
0x1f069:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f06a -- 0x1f06b
; data inside code section at 0x1f06b -- 0x1f070
0x1f06b:    ff ff ff 83 f8                                     |.....           |
; function: function_1f070 at 0x1f070 -- 0x1f071
; data inside code section at 0x1f071 -- 0x1f072
0x1f071:    89                                                 |.               |
; function: function_1f072 at 0x1f072 -- 0x1f073
0x1f072:    c3                                 	ret 
; data inside code section at 0x1f073 -- 0x1f0c0
0x1f073:    74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0x1f083:    74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0x1f093:    43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0x1f0a3:    00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0x1f0b3:    13 89 5c 24 08 89 44 24  04 89 2c 24 e8            |..\$..D$..,$.   |
; function: function_1f0c0 at 0x1f0c0 -- 0x1f0ce
0x1f0c0:    bc ee 01 00 89                     	mov esp, 0x890001ee
0x1f0c5:    43                                 	inc ebx
0x1f0c6:    0c 8b                              	or al, 0x8b
0x1f0c8:    76 08                              	jbe 0x1f0d2
0x1f0ca:    85 f6                              	test esi, esi
0x1f0cc:    75 92                              	jne 0x1f060
; function: function_1f0ce at 0x1f0ce -- 0x1f0e7
0x1f0ce:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1f0d2:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1f0d9:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1f0dd:    75 08                              	jne 0x1f0e7 <function_1f0ce+0x18>
0x1f0df:    83 c4 3c                           	add esp, 0x3c
0x1f0e2:    5b                                 	pop ebx
0x1f0e3:    5e                                 	pop esi
0x1f0e4:    5f                                 	pop edi
0x1f0e5:    5d                                 	pop ebp
0x1f0e6:    c3                                 	ret 
; data inside code section at 0x1f0e7 -- 0x1f0e8
0x1f0e7:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1f0e8 -- 0x1f0e9
; data inside code section at 0x1f0e9 -- 0x1f0f0
0x1f0e9:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1f0f0 -- 0x1f0f1
; data inside code section at 0x1f0f1 -- 0x1f105
0x1f0f1:    ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 dc   |....D$..,$.D$...|
0x1f101:    e0 01 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1f105 -- 0x1f106
; data inside code section at 0x1f106 -- 0x1f10a
0x1f106:    ff ff ff 89                                        |....            |
; function: function_1f10a at 0x1f10a -- 0x1f10b
0x1f10a:    c3                                 	ret 
; data inside code section at 0x1f10b -- 0x1f118
0x1f10b:    e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEEC2ERKSM_
; function: _ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbP5CNodeNS_8functionIFbSE_EEEEENS0_5mutexEEEEEEC1ERKSM_ at 0x1f120 -- 0x1f157
0x1f120:    55                                 	push ebp
0x1f121:    57                                 	push edi
0x1f122:    56                                 	push esi
0x1f123:    53                                 	push ebx
0x1f124:    83 ec 3c                           	sub esp, 0x3c
0x1f127:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1f12b:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x1f12f:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1f136:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1f13a:    31 d2                              	xor edx, edx
0x1f13c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1f140:    89 36                              	mov dword ptr [esi], esi
0x1f142:    89 76 04                           	mov dword ptr [esi + 4], esi
0x1f145:    8b 18                              	mov ebx, dword ptr [eax]
0x1f147:    39 d8                              	cmp eax, ebx
0x1f149:    74 3c                              	je 0x1f187 <function_1f187>
0x1f14b:    89 c7                              	mov edi, eax
0x1f14d:    8d 76 00                           	lea esi, [esi]
0x1f150:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x1f157 -- 0x1f158
0x1f157:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f158 -- 0x1f159
; data inside code section at 0x1f159 -- 0x1f187
0x1f159:    ff ff ff 83 f8 f8 74 14  8b 53 08 89 50 08 8b 53   |......t..S..P..S|
0x1f169:    0c 85 d2 89 50 0c 74 04  f0 ff 42 04 89 74 24 04   |....P.t...B..t$.|
0x1f179:    89 04 24 e8 fc ff ff ff  8b 1b 39 df 75 c9         |..$.......9.u.  |
; function: function_1f187 at 0x1f187 -- 0x1f210
0x1f187:    8d 4e 0c                           	lea ecx, [esi + 0xc]
0x1f18a:    89 4e 14                           	mov dword ptr [esi + 0x14], ecx
0x1f18d:    89 cd                              	mov ebp, ecx
0x1f18f:    89 4e 18                           	mov dword ptr [esi + 0x18], ecx
0x1f192:    8d 56 08                           	lea edx, [esi + 8]
0x1f195:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x1f199:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1f19d:    c7 46 0c 00 00 00 00               	mov dword ptr [esi + 0xc], 0
0x1f1a4:    c7 46 10 00 00 00 00               	mov dword ptr [esi + 0x10], 0
0x1f1ab:    c7 46 1c 00 00 00 00               	mov dword ptr [esi + 0x1c], 0
0x1f1b2:    8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0x1f1b5:    85 c0                              	test eax, eax
0x1f1b7:    74 3d                              	je 0x1f1f6 <function_1f187+0x6f>
0x1f1b9:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1f1bd:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f1c1:    89 14 24                           	mov dword ptr [esp], edx
0x1f1c4:    e8 17 ef 01 00                     	call 0x3e0e0 <unknown_3e0e0>
0x1f1c9:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x1f1cc:    89 c5                              	mov ebp, eax
0x1f1ce:    eb 02                              	jmp 0x1f1d2 <function_1f187+0x4b>
0x1f1d0:    89 d5                              	mov ebp, edx
0x1f1d2:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x1f1d5:    85 d2                              	test edx, edx
0x1f1d7:    75 f7                              	jne 0x1f1d0 <function_1f187+0x49>
0x1f1d9:    89 6e 14                           	mov dword ptr [esi + 0x14], ebp
0x1f1dc:    eb 04                              	jmp 0x1f1e2 <function_1f187+0x5b>
; data inside code section at 0x1f1de -- 0x1f1e0
0x1f1de:    66 90                                              |f.              |
0x1f1e0:    89 d0                              	mov eax, edx
0x1f1e2:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x1f1e5:    85 d2                              	test edx, edx
0x1f1e7:    75 f7                              	jne 0x1f1e0 <function_1f187+0x59>
0x1f1e9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f1ed:    89 46 18                           	mov dword ptr [esi + 0x18], eax
0x1f1f0:    8b 42 1c                           	mov eax, dword ptr [edx + 0x1c]
0x1f1f3:    89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0x1f1f6:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1f1fa:    8b 36                              	mov esi, dword ptr [esi]
0x1f1fc:    8b 79 14                           	mov edi, dword ptr [ecx + 0x14]
0x1f1ff:    83 c1 0c                           	add ecx, 0xc
0x1f202:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x1f206:    39 f9                              	cmp ecx, edi
0x1f208:    74 46                              	je 0x1f250
0x1f20a:    8d b6 00 00 00 00                  	lea esi, [esi]
; function: function_1f210 at 0x1f210 -- 0x1f21f
0x1f210:    39 6c 24 18                        	cmp dword ptr [esp + 0x18], ebp
0x1f214:    74 66                              	je 0x1f27c <function_1f27c>
0x1f216:    89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0x1f219:    8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0x1f21c:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1f21f -- 0x1f220
0x1f21f:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x1f220 -- 0x1f221
; data inside code section at 0x1f221 -- 0x1f230
0x1f221:    ff ff ff 89 c7 8b 44 24  1c 39 7c 24 14 74 0c      |......D$.9|$.t. |
; function: function_1f230 at 0x1f230 -- 0x1f265
0x1f230:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x1f233:    eb 07                              	jmp 0x1f23c <function_1f230+0xc>
; data inside code section at 0x1f235 -- 0x1f238
0x1f235:    8d 76 00                                           |.v.             |
0x1f238:    8b 1b                              	mov ebx, dword ptr [ebx]
0x1f23a:    8b 36                              	mov esi, dword ptr [esi]
0x1f23c:    39 c3                              	cmp ebx, eax
0x1f23e:    75 f8                              	jne 0x1f238 <function_1f230+0x8>
0x1f240:    89 2c 24                           	mov dword ptr [esp], ebp
0x1f243:    e8 fc ff ff ff                     	call 0x1f244
0x1f248:    39 7c 24 14                        	cmp dword ptr [esp + 0x14], edi
0x1f24c:    89 c5                              	mov ebp, eax
0x1f24e:    75 c0                              	jne 0x1f210 <function_1f210>
0x1f250:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1f254:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1f25b:    75 1a                              	jne 0x1f277 <function_1f230+0x34>
0x1f25d:    83 c4 3c                           	add esp, 0x3c
0x1f260:    5b                                 	pop ebx
0x1f261:    5e                                 	pop esi
0x1f262:    5f                                 	pop edi
0x1f263:    5d                                 	pop ebp
0x1f264:    c3                                 	ret 
; function: function_1f265 at 0x1f265 -- 0x1f277
0x1f265:    89 c3                              	mov ebx, eax
0x1f267:    89 34 24                           	mov dword ptr [esp], esi
0x1f26a:    e8 f1 9e 01 00                     	call 0x39160 <unknown_39160>
0x1f26f:    89 1c 24                           	mov dword ptr [esp], ebx
0x1f272:    e8 fc ff ff ff                     	call 0x1f273
; data inside code section at 0x1f277 -- 0x1f278
0x1f277:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1f278 -- 0x1f279
; data inside code section at 0x1f279 -- 0x1f27c
0x1f279:    ff ff ff                                           |...             |
; function: function_1f27c at 0x1f27c -- 0x1f2ad
0x1f27c:    c7 44 24 0c 00 d3 02 00            	mov dword ptr [esp + 0xc], 0x2d300 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >]"
0x1f284:    c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x1f28c:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x1f294:    c7 04 24 a8 dd 00 00               	mov dword ptr [esp], 0xdda8 ; "this_map_it != _group_map.end()"
0x1f29b:    e8 fc ff ff ff                     	call 0x1f29c
0x1f2a0:    89 c3                              	mov ebx, eax
0x1f2a2:    89 34 24                           	mov dword ptr [esp], esi
0x1f2a5:    e8 b6 9e 01 00                     	call 0x39160 <unknown_39160>
0x1f2aa:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1f2ad -- 0x1f2ae
0x1f2ad:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1f2ae -- 0x1f2af
; data inside code section at 0x1f2af -- 0x1f2b0
0x1f2af:    ff                                                 |.               |
; function: function_1f2b0 at 0x1f2b0 -- 0x1f2b1
; data inside code section at 0x1f2b1 -- 0x1f2b2
0x1f2b1:    ff                                                 |.               |
; section: .text._ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEC2ERKS6_RKS8_
; function: _ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEC1ERKS6_RKS8_ at 0x1f2c0 -- 0x1f30e
0x1f2c0:    55                                 	push ebp
0x1f2c1:    57                                 	push edi
0x1f2c2:    56                                 	push esi
0x1f2c3:    53                                 	push ebx
0x1f2c4:    83 ec 4c                           	sub esp, 0x4c
0x1f2c7:    8d 5c 24 18                        	lea ebx, [esp + 0x18]
0x1f2cb:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1f2cf:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1f2d5:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1f2d9:    31 c0                              	xor eax, eax
0x1f2db:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x1f2df:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x1f2e3:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x1f2e7:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x1f2ef:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x1f2f7:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1f2ff:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1f303:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1f307:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x1f30e -- 0x1f30f
0x1f30e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f30f -- 0x1f310
; function: function_1f310 at 0x1f310 -- 0x1f311
; data inside code section at 0x1f311 -- 0x1f340
0x1f311:    ff ff 89 c6 c7 04 24 24  00 00 00 e8 fc ff ff ff   |......$$........|
0x1f321:    89 c5 89 5c 24 04 89 04  24 e8 b1 f0 01 00 89 2e   |...\$...$.......|
0x1f331:    c7 46 04 00 00 00 00 c7  04 24 10 00 00 00 e8      |.F.......$..... |
; dynamically linked function: _Znwj at 0x1f340 -- 0x1f341
; data inside code section at 0x1f341 -- 0x1f366
0x1f341:    ff ff ff c7 40 04 01 00  00 00 c7 40 08 01 00 00   |....@......@....|
0x1f351:    00 c7 00 c8 14 03 00 89  68 0c 89 46 04 c7 04 24   |........h..F...$|
0x1f361:    01 00 00 00 e8                                     |.....           |
; dynamically linked function: _Znwj at 0x1f366 -- 0x1f367
; data inside code section at 0x1f367 -- 0x1f37e
0x1f367:    ff ff ff 89 46 08 89 c5  c7 46 0c 00 00 00 00 c7   |....F....F......|
0x1f377:    04 24 10 00 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x1f37e -- 0x1f37f
; data inside code section at 0x1f37f -- 0x1f380
0x1f37f:    ff                                                 |.               |
; function: function_1f380 at 0x1f380 -- 0x1f381
; data inside code section at 0x1f381 -- 0x1f3ad
0x1f381:    ff c7 40 04 01 00 00 00  c7 40 08 01 00 00 00 c7   |..@......@......|
0x1f391:    00 78 16 03 00 89 68 0c  89 46 0c 89 37 c7 47 04   |.x....h..F..7.G.|
0x1f3a1:    00 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0x1f3ad -- 0x1f3ae
; data inside code section at 0x1f3ae -- 0x1f3b0
0x1f3ae:    ff ff                                              |..              |
; function: function_1f3b0 at 0x1f3b0 -- 0x1f40f
0x1f3b0:    ff 89 70 0c c7 40                  	dec dword ptr [ecx + 0x40c70c70]
0x1f3b6:    04 01                              	add al, 1
0x1f3b8:    00 00                              	add byte ptr [eax], al
0x1f3ba:    00 c7                              	add bh, al
0x1f3bc:    40                                 	inc eax
0x1f3bd:    08 01                              	or byte ptr [ecx], al
0x1f3bf:    00 00                              	add byte ptr [eax], al
0x1f3c1:    00 c7                              	add bh, al
0x1f3c3:    00 e8                              	add al, ch
0x1f3c5:    14 03                              	adc al, 3
0x1f3c7:    00 89 47 04 8b 44                  	add byte ptr [ecx + 0x448b0447], cl
0x1f3cd:    24 28                              	and al, 0x28
0x1f3cf:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f3d3:    8d 44 24 20                        	lea eax, [esp + 0x20]
0x1f3d7:    89 04 24                           	mov dword ptr [esp], eax
0x1f3da:    e8 01 e1 01 00                     	call 0x3d4e0 <unknown_3d4e0>
0x1f3df:    8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x1f3e3:    39 de                              	cmp esi, ebx
0x1f3e5:    75 0b                              	jne 0x1f3f2 <function_1f3b0+0x42>
0x1f3e7:    eb 22                              	jmp 0x1f40b <function_1f3b0+0x5b>
; data inside code section at 0x1f3e9 -- 0x1f3f0
0x1f3e9:    8d b4 26 00 00 00 00                               |..&....         |
0x1f3f0:    89 ee                              	mov esi, ebp
0x1f3f2:    8b 2e                              	mov ebp, dword ptr [esi]
0x1f3f4:    8d 46 0c                           	lea eax, [esi + 0xc]
0x1f3f7:    89 04 24                           	mov dword ptr [esp], eax
0x1f3fa:    e8 01 04 01 00                     	call 0x2f800 <function_2f800>
0x1f3ff:    89 34 24                           	mov dword ptr [esp], esi
0x1f402:    e8 fc ff ff ff                     	call 0x1f403
0x1f407:    39 dd                              	cmp ebp, ebx
0x1f409:    75 e5                              	jne 0x1f3f0 <function_1f3b0+0x40>
0x1f40b:    8b 07                              	mov eax, dword ptr [edi]
0x1f40d:    85 c0                              	test eax, eax
; data inside code section at 0x1f40f -- 0x1f410
0x1f40f:    74                                                 |t               |
; function: function_1f410 at 0x1f410 -- 0x1f428
0x1f410:    4d                                 	dec ebp
0x1f411:    8b 00                              	mov eax, dword ptr [eax]
0x1f413:    85 c0                              	test eax, eax
0x1f415:    74 42                              	je 0x1f459 <function_1f459>
0x1f417:    89 47 08                           	mov dword ptr [edi + 8], eax
0x1f41a:    83 c7 0c                           	add edi, 0xc
0x1f41d:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x1f425:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1f428 -- 0x1f429
0x1f428:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x1f429 -- 0x1f42a
; data inside code section at 0x1f42a -- 0x1f42c
0x1f42a:    ff ff                                              |..              |
; function: function_1f42c at 0x1f42c -- 0x1f442
0x1f42c:    ff 8b 44 24 3c 65                  	dec dword ptr [ebx + 0x653c2444]
0x1f432:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1f438:    75 1a                              	jne 0x1f454 <function_1f454>
0x1f43a:    83 c4 4c                           	add esp, 0x4c
0x1f43d:    5b                                 	pop ebx
0x1f43e:    5e                                 	pop esi
0x1f43f:    5f                                 	pop edi
0x1f440:    5d                                 	pop ebp
0x1f441:    c3                                 	ret 
; data inside code section at 0x1f442 -- 0x1f444
0x1f442:    89 c7                                              |..              |
; function: function_1f444 at 0x1f444 -- 0x1f445
; data inside code section at 0x1f445 -- 0x1f450
0x1f445:    1c 24 e8 04 e1 01 00 89  3c 24 e8                  |.$......<$.     |
; dynamically linked function: _Unwind_Resume at 0x1f450 -- 0x1f451
; data inside code section at 0x1f451 -- 0x1f454
0x1f451:    ff ff ff                                           |...             |
; function: function_1f454 at 0x1f454 -- 0x1f459
0x1f454:    e8 fc ff ff ff                     	call 0x1f455
; function: function_1f459 at 0x1f459 -- 0x1f468
0x1f459:    e8 14 e2 00 00                     	call 0x2d672 <function_2d672>
0x1f45e:    66 90                              	nop 
0x1f460:    e8 d5 e0 00 00                     	call 0x2d53a <function_2d53a>
0x1f465:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1f468 -- 0x1f469
0x1f468:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x1f469 -- 0x1f46a
; data inside code section at 0x1f46a -- 0x1f470
0x1f46a:    ff ff ff 89 34 24                                  |....4$          |
; function: function_1f470 at 0x1f470 -- 0x1f475
0x1f470:    e8 2b e4 01 00                     	call 0x3d8a0 <unknown_3d8a0>
; data inside code section at 0x1f475 -- 0x1f476
0x1f475:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x1f476 -- 0x1f477
; data inside code section at 0x1f477 -- 0x1f47e
0x1f477:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1f47e -- 0x1f47f
; data inside code section at 0x1f47f -- 0x1f486
0x1f47f:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZdlPv at 0x1f486 -- 0x1f487
; data inside code section at 0x1f487 -- 0x1f492
0x1f487:    ff ff ff e8 fc ff ff ff  89 c7 e8                  |...........     |
; dynamically linked function: __cxa_end_catch at 0x1f492 -- 0x1f493
; data inside code section at 0x1f493 -- 0x1f496
0x1f493:    ff ff ff                                           |...             |
; function: function_1f496 at 0x1f496 -- 0x1f498
0x1f496:    eb ac                              	jmp 0x1f444 <function_1f444>
; data inside code section at 0x1f498 -- 0x1f49b
0x1f498:    89 c7 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x1f49b -- 0x1f49c
; data inside code section at 0x1f49c -- 0x1f49f
0x1f49c:    ff ff ff                                           |...             |
; function: function_1f49f at 0x1f49f -- 0x1f4a0
; data inside code section at 0x1f4a0 -- 0x1f4aa
0x1f4a0:    46 04 89 04 24 e8 56 03  01 00                     |F...$.V...      |
; function: function_1f4aa at 0x1f4aa -- 0x1f4ab
; data inside code section at 0x1f4ab -- 0x1f4ae
0x1f4ab:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZdlPv at 0x1f4ae -- 0x1f4af
; data inside code section at 0x1f4af -- 0x1f4b2
0x1f4af:    ff ff ff                                           |...             |
; function: function_1f4b2 at 0x1f4b2 -- 0x1f4b4
0x1f4b2:    eb 90                              	jmp 0x1f444 <function_1f444>
; function: function_1f4b4 at 0x1f4b4 -- 0x1f4b8
0x1f4b4:    89 c7                              	mov edi, eax
0x1f4b6:    eb e7                              	jmp 0x1f49f <function_1f49f>
; data inside code section at 0x1f4b8 -- 0x1f4c1
0x1f4b8:    89 04 24 90 8d 74 26 00  e8                        |..$..t&..       |
; dynamically linked function: __cxa_begin_catch at 0x1f4c1 -- 0x1f4c2
; data inside code section at 0x1f4c2 -- 0x1f4ce
0x1f4c2:    ff ff ff 89 2c 24 e8 33  e5 01 00 e8               |....,$.3....    |
; dynamically linked function: __cxa_rethrow at 0x1f4ce -- 0x1f4cf
; data inside code section at 0x1f4cf -- 0x1f4d1
0x1f4cf:    ff ff                                              |..              |
; function: function_1f4d1 at 0x1f4d1 -- 0x1f4de
0x1f4d1:    ff 89 c7 89 2c 24                  	dec dword ptr [ecx + 0x242c89c7]
0x1f4d7:    e8 fc ff ff ff                     	call 0x1f4d8
0x1f4dc:    eb cc                              	jmp 0x1f4aa <function_1f4aa>
; function: function_1f4de at 0x1f4de -- 0x1f4e2
0x1f4de:    89 c7                              	mov edi, eax
0x1f4e0:    eb c8                              	jmp 0x1f4aa <function_1f4aa>
; data inside code section at 0x1f4e2 -- 0x1f4e5
0x1f4e2:    89 c7 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x1f4e5 -- 0x1f4e6
; data inside code section at 0x1f4e6 -- 0x1f4e9
0x1f4e6:    ff ff ff                                           |...             |
; function: function_1f4e9 at 0x1f4e9 -- 0x1f4eb
0x1f4e9:    eb bf                              	jmp 0x1f4aa <function_1f4aa>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_ at 0x1f4f0 -- 0x1f516
0x1f4f0:    55                                 	push ebp
0x1f4f1:    57                                 	push edi
0x1f4f2:    56                                 	push esi
0x1f4f3:    53                                 	push ebx
0x1f4f4:    83 ec 3c                           	sub esp, 0x3c
0x1f4f7:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1f4fd:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1f501:    31 c0                              	xor eax, eax
0x1f503:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x1f507:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1f50b:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x1f50f:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1f516 -- 0x1f517
0x1f516:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f517 -- 0x1f518
; data inside code section at 0x1f518 -- 0x1f51a
0x1f518:    ff ff                                              |..              |
; function: function_1f51a at 0x1f51a -- 0x1f590
0x1f51a:    ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0x1f520:    24 1c                              	and al, 0x1c
0x1f522:    74 28                              	je 0x1f54c <function_1f51a+0x32>
0x1f524:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x1f527:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f52b:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x1f52e:    c6 42 14 00                        	mov byte ptr [edx + 0x14], 0
0x1f532:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x1f536:    74 0a                              	je 0x1f542 <function_1f51a+0x28>
0x1f538:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x1f53b:    c6 42 14 01                        	mov byte ptr [edx + 0x14], 1
0x1f53f:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x1f542:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x1f545:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f549:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x1f54c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f550:    8b 03                              	mov eax, dword ptr [ebx]
0x1f552:    c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0x1f559:    89 02                              	mov dword ptr [edx], eax
0x1f55b:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1f55e:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x1f565:    89 72 04                           	mov dword ptr [edx + 4], esi
0x1f568:    85 c0                              	test eax, eax
0x1f56a:    74 17                              	je 0x1f583 <function_1f51a+0x69>
0x1f56c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x1f570:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f574:    89 2c 24                           	mov dword ptr [esp], ebp
0x1f577:    e8 64 f4 01 00                     	call 0x3e9e0 <unknown_3e9e0>
0x1f57c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f580:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x1f583:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1f586:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x1f58a:    85 f6                              	test esi, esi
0x1f58c:    75 04                              	jne 0x1f592
0x1f58e:    eb 6e                              	jmp 0x1f5fe
; function: function_1f590 at 0x1f590 -- 0x1f599
0x1f590:    89 df                              	mov edi, ebx
0x1f592:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1f599 -- 0x1f59a
0x1f599:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f59a -- 0x1f59b
; data inside code section at 0x1f59b -- 0x1f5a2
0x1f59b:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_1f5a2 at 0x1f5a2 -- 0x1f5a3
0x1f5a2:    c3                                 	ret 
; data inside code section at 0x1f5a3 -- 0x1f5f0
0x1f5a3:    74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0x1f5b3:    74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0x1f5c3:    43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0x1f5d3:    00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0x1f5e3:    13 89 5c 24 08 89 44 24  04 89 2c 24 e8            |..\$..D$..,$.   |
; function: function_1f5f0 at 0x1f5f0 -- 0x1f5fe
0x1f5f0:    ec                                 	in al, dx
0x1f5f1:    f3 01 00                           	add dword ptr [eax], eax
0x1f5f4:    89 43 0c                           	mov dword ptr [ebx + 0xc], eax
0x1f5f7:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x1f5fa:    85 f6                              	test esi, esi
0x1f5fc:    75 92                              	jne 0x1f590 <function_1f590>
; data inside code section at 0x1f5fe -- 0x1f600
0x1f5fe:    8b 54                                              |.T              |
; function: function_1f600 at 0x1f600 -- 0x1f634
0x1f600:    24 2c                              	and al, 0x2c
0x1f602:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1f609:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1f60d:    75 08                              	jne 0x1f617 <function_1f600+0x17>
0x1f60f:    83 c4 3c                           	add esp, 0x3c
0x1f612:    5b                                 	pop ebx
0x1f613:    5e                                 	pop esi
0x1f614:    5f                                 	pop edi
0x1f615:    5d                                 	pop ebp
0x1f616:    c3                                 	ret 
0x1f617:    e8 fc ff ff ff                     	call 0x1f618
0x1f61c:    89 04 24                           	mov dword ptr [esp], eax
0x1f61f:    e8 fc ff ff ff                     	call 0x1f620
0x1f624:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1f628:    89 2c 24                           	mov dword ptr [esp], ebp
0x1f62b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f62f:    e8 bc e2 01 00                     	call 0x3d8f0 <unknown_3d8f0>
; data inside code section at 0x1f634 -- 0x1f635
0x1f634:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x1f635 -- 0x1f636
; data inside code section at 0x1f636 -- 0x1f63a
0x1f636:    ff ff ff 89                                        |....            |
; function: function_1f63a at 0x1f63a -- 0x1f63b
0x1f63a:    c3                                 	ret 
; data inside code section at 0x1f63b -- 0x1f63c
0x1f63b:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x1f63c -- 0x1f63d
; data inside code section at 0x1f63d -- 0x1f644
0x1f63d:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x1f644 -- 0x1f645
; data inside code section at 0x1f645 -- 0x1f648
0x1f645:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEEC2ERKSM_
; function: _ZN5boost8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbP5CNodebNS_8functionIFbSE_bEEEEENS0_5mutexEEEEEEC1ERKSM_ at 0x1f650 -- 0x1f65f
0x1f650:    55                                 	push ebp
0x1f651:    57                                 	push edi
0x1f652:    56                                 	push esi
0x1f653:    53                                 	push ebx
0x1f654:    83 ec 3c                           	sub esp, 0x3c
0x1f657:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x1f65b:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
; data inside code section at 0x1f65f -- 0x1f660
0x1f65f:    65                                                 |e               |
; function: function_1f660 at 0x1f660 -- 0x1f6ac
0x1f660:    8b 15 14 00 00 00                  	mov edx, dword ptr [0x14]
0x1f666:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x1f66a:    31 d2                              	xor edx, edx
0x1f66c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1f670:    89 36                              	mov dword ptr [esi], esi
0x1f672:    89 76 04                           	mov dword ptr [esi + 4], esi
0x1f675:    8b 18                              	mov ebx, dword ptr [eax]
0x1f677:    39 d8                              	cmp eax, ebx
0x1f679:    74 3c                              	je 0x1f6b7 <function_1f6b7>
0x1f67b:    89 c7                              	mov edi, eax
0x1f67d:    8d 76 00                           	lea esi, [esi]
0x1f680:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
0x1f687:    e8 fc ff ff ff                     	call 0x1f688
0x1f68c:    83 f8 f8                           	cmp eax, -8
0x1f68f:    74 14                              	je 0x1f6a5 <function_1f660+0x45>
0x1f691:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x1f694:    89 50 08                           	mov dword ptr [eax + 8], edx
0x1f697:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x1f69a:    85 d2                              	test edx, edx
0x1f69c:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x1f69f:    74 04                              	je 0x1f6a5 <function_1f660+0x45>
0x1f6a1:    f0 ff 42 04                        	lock inc dword ptr [edx + 4]
0x1f6a5:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x1f6a9:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1f6ac -- 0x1f6ad
0x1f6ac:    e8                                                 |.               |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x1f6ad -- 0x1f6ae
; data inside code section at 0x1f6ae -- 0x1f6b7
0x1f6ae:    ff ff ff 8b 1b 39 df 75  c9                        |.....9.u.       |
; function: function_1f6b7 at 0x1f6b7 -- 0x1f700
0x1f6b7:    8d 4e 0c                           	lea ecx, [esi + 0xc]
0x1f6ba:    89 4e 14                           	mov dword ptr [esi + 0x14], ecx
0x1f6bd:    89 cd                              	mov ebp, ecx
0x1f6bf:    89 4e 18                           	mov dword ptr [esi + 0x18], ecx
0x1f6c2:    8d 56 08                           	lea edx, [esi + 8]
0x1f6c5:    89 4c 24 18                        	mov dword ptr [esp + 0x18], ecx
0x1f6c9:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1f6cd:    c7 46 0c 00 00 00 00               	mov dword ptr [esi + 0xc], 0
0x1f6d4:    c7 46 10 00 00 00 00               	mov dword ptr [esi + 0x10], 0
0x1f6db:    c7 46 1c 00 00 00 00               	mov dword ptr [esi + 0x1c], 0
0x1f6e2:    8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0x1f6e5:    85 c0                              	test eax, eax
0x1f6e7:    74 3d                              	je 0x1f726
0x1f6e9:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x1f6ed:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f6f1:    89 14 24                           	mov dword ptr [esp], edx
0x1f6f4:    e8 47 f4 01 00                     	call 0x3eb40 <unknown_3eb40>
0x1f6f9:    89 46 10                           	mov dword ptr [esi + 0x10], eax
0x1f6fc:    89 c5                              	mov ebp, eax
0x1f6fe:    eb 02                              	jmp 0x1f702
; function: function_1f700 at 0x1f700 -- 0x1f795
0x1f700:    89 d5                              	mov ebp, edx
0x1f702:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x1f705:    85 d2                              	test edx, edx
0x1f707:    75 f7                              	jne 0x1f700 <function_1f700>
0x1f709:    89 6e 14                           	mov dword ptr [esi + 0x14], ebp
0x1f70c:    eb 04                              	jmp 0x1f712 <function_1f700+0x12>
; data inside code section at 0x1f70e -- 0x1f710
0x1f70e:    66 90                                              |f.              |
0x1f710:    89 d0                              	mov eax, edx
0x1f712:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x1f715:    85 d2                              	test edx, edx
0x1f717:    75 f7                              	jne 0x1f710 <function_1f700+0x10>
0x1f719:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x1f71d:    89 46 18                           	mov dword ptr [esi + 0x18], eax
0x1f720:    8b 42 1c                           	mov eax, dword ptr [edx + 0x1c]
0x1f723:    89 46 1c                           	mov dword ptr [esi + 0x1c], eax
0x1f726:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x1f72a:    8b 36                              	mov esi, dword ptr [esi]
0x1f72c:    8b 79 14                           	mov edi, dword ptr [ecx + 0x14]
0x1f72f:    83 c1 0c                           	add ecx, 0xc
0x1f732:    89 4c 24 14                        	mov dword ptr [esp + 0x14], ecx
0x1f736:    39 f9                              	cmp ecx, edi
0x1f738:    74 46                              	je 0x1f780 <function_1f700+0x80>
0x1f73a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x1f740:    39 6c 24 18                        	cmp dword ptr [esp + 0x18], ebp
0x1f744:    74 66                              	je 0x1f7ac <function_1f7ac>
0x1f746:    89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0x1f749:    8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0x1f74c:    89 3c 24                           	mov dword ptr [esp], edi
0x1f74f:    e8 fc ff ff ff                     	call 0x1f750
0x1f754:    89 c7                              	mov edi, eax
0x1f756:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1f75a:    39 7c 24 14                        	cmp dword ptr [esp + 0x14], edi
0x1f75e:    74 0c                              	je 0x1f76c <function_1f700+0x6c>
0x1f760:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x1f763:    eb 07                              	jmp 0x1f76c <function_1f700+0x6c>
; data inside code section at 0x1f765 -- 0x1f768
0x1f765:    8d 76 00                                           |.v.             |
0x1f768:    8b 1b                              	mov ebx, dword ptr [ebx]
0x1f76a:    8b 36                              	mov esi, dword ptr [esi]
0x1f76c:    39 c3                              	cmp ebx, eax
0x1f76e:    75 f8                              	jne 0x1f768 <function_1f700+0x68>
0x1f770:    89 2c 24                           	mov dword ptr [esp], ebp
0x1f773:    e8 fc ff ff ff                     	call 0x1f774
0x1f778:    39 7c 24 14                        	cmp dword ptr [esp + 0x14], edi
0x1f77c:    89 c5                              	mov ebp, eax
0x1f77e:    75 c0                              	jne 0x1f740 <function_1f700+0x40>
0x1f780:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1f784:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1f78b:    75 1a                              	jne 0x1f7a7 <function_1f7a7>
0x1f78d:    83 c4 3c                           	add esp, 0x3c
0x1f790:    5b                                 	pop ebx
0x1f791:    5e                                 	pop esi
0x1f792:    5f                                 	pop edi
0x1f793:    5d                                 	pop ebp
0x1f794:    c3                                 	ret 
; data inside code section at 0x1f795 -- 0x1f796
0x1f795:    89                                                 |.               |
; function: function_1f796 at 0x1f796 -- 0x1f797
0x1f796:    c3                                 	ret 
; data inside code section at 0x1f797 -- 0x1f7a3
0x1f797:    89 34 24 e8 51 9f 01 00  89 1c 24 e8               |.4$.Q.....$.    |
; dynamically linked function: _Unwind_Resume at 0x1f7a3 -- 0x1f7a4
; data inside code section at 0x1f7a4 -- 0x1f7a7
0x1f7a4:    ff ff ff                                           |...             |
; function: function_1f7a7 at 0x1f7a7 -- 0x1f7ac
0x1f7a7:    e8 fc ff ff ff                     	call 0x1f7a8
; function: function_1f7ac at 0x1f7ac -- 0x1f7dd
0x1f7ac:    c7 44 24 0c a0 ea 02 00            	mov dword ptr [esp + 0xc], 0x2eaa0 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >]"
0x1f7b4:    c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x1f7bc:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x1f7c4:    c7 04 24 a8 dd 00 00               	mov dword ptr [esp], 0xdda8 ; "this_map_it != _group_map.end()"
0x1f7cb:    e8 fc ff ff ff                     	call 0x1f7cc
0x1f7d0:    89 c3                              	mov ebx, eax
0x1f7d2:    89 34 24                           	mov dword ptr [esp], esi
0x1f7d5:    e8 16 9f 01 00                     	call 0x396f0 <unknown_396f0>
0x1f7da:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1f7dd -- 0x1f7de
0x1f7dd:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x1f7de -- 0x1f7df
; data inside code section at 0x1f7df -- 0x1f7e2
0x1f7df:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEC2ERKS6_RKS8_
; function: _ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEC1ERKS6_RKS8_ at 0x1f7f0 -- 0x1f83e
0x1f7f0:    55                                 	push ebp
0x1f7f1:    57                                 	push edi
0x1f7f2:    56                                 	push esi
0x1f7f3:    53                                 	push ebx
0x1f7f4:    83 ec 4c                           	sub esp, 0x4c
0x1f7f7:    8d 5c 24 18                        	lea ebx, [esp + 0x18]
0x1f7fb:    8b 7c 24 60                        	mov edi, dword ptr [esp + 0x60]
0x1f7ff:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1f805:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1f809:    31 c0                              	xor eax, eax
0x1f80b:    8d 44 24 24                        	lea eax, [esp + 0x24]
0x1f80f:    89 5c 24 18                        	mov dword ptr [esp + 0x18], ebx
0x1f813:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x1f817:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x1f81f:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x1f827:    c7 44 24 34 00 00 00 00            	mov dword ptr [esp + 0x34], 0
0x1f82f:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1f833:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x1f837:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x1f83e -- 0x1f83f
0x1f83e:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f83f -- 0x1f840
; data inside code section at 0x1f840 -- 0x1f84d
0x1f840:    ff ff ff 89 c6 c7 04 24  24 00 00 00 e8            |.......$$....   |
; dynamically linked function: _Znwj at 0x1f84d -- 0x1f84e
; data inside code section at 0x1f84e -- 0x1f850
0x1f84e:    ff ff                                              |..              |
; function: function_1f850 at 0x1f850 -- 0x1f895
0x1f850:    ff 89 c5 89 5c 24                  	dec dword ptr [ecx + 0x245c89c5]
0x1f856:    04 89                              	add al, 0x89
0x1f858:    04 24                              	add al, 0x24
0x1f85a:    e8 e1 f5 01 00                     	call 0x3ee40 <unknown_3ee40>
0x1f85f:    89 2e                              	mov dword ptr [esi], ebp
0x1f861:    c7 46 04 00 00 00 00               	mov dword ptr [esi + 4], 0
0x1f868:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
0x1f86f:    e8 fc ff ff ff                     	call 0x1f870
0x1f874:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x1f87b:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x1f882:    c7 00 08 15 03 00                  	mov dword ptr [eax], 0x31508
0x1f888:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x1f88b:    89 46 04                           	mov dword ptr [esi + 4], eax
0x1f88e:    c7 04 24 01 00 00 00               	mov dword ptr [esp], 1
; data inside code section at 0x1f895 -- 0x1f896
0x1f895:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f896 -- 0x1f897
; data inside code section at 0x1f897 -- 0x1f8ae
0x1f897:    ff ff ff 89 46 08 89 c5  c7 46 0c 00 00 00 00 c7   |....F....F......|
0x1f8a7:    04 24 10 00 00 00 e8                               |.$.....         |
; dynamically linked function: _Znwj at 0x1f8ae -- 0x1f8af
; data inside code section at 0x1f8af -- 0x1f8c0
0x1f8af:    ff ff ff c7 40 04 01 00  00 00 c7 40 08 01 00 00   |....@......@....|
0x1f8bf:    00                                                 |.               |
; function: function_1f8c0 at 0x1f8c0 -- 0x1f8dc
0x1f8c0:    c7 00 78 16 03 00                  	mov dword ptr [eax], 0x31678
0x1f8c6:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x1f8c9:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x1f8cc:    89 37                              	mov dword ptr [edi], esi
0x1f8ce:    c7 47 04 00 00 00 00               	mov dword ptr [edi + 4], 0
0x1f8d5:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x1f8dc -- 0x1f8dd
0x1f8dc:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1f8dd -- 0x1f8de
; data inside code section at 0x1f8de -- 0x1f8e0
0x1f8de:    ff ff                                              |..              |
; function: function_1f8e0 at 0x1f8e0 -- 0x1f932
0x1f8e0:    ff 89 70 0c c7 40                  	dec dword ptr [ecx + 0x40c70c70]
0x1f8e6:    04 01                              	add al, 1
0x1f8e8:    00 00                              	add byte ptr [eax], al
0x1f8ea:    00 c7                              	add bh, al
0x1f8ec:    40                                 	inc eax
0x1f8ed:    08 01                              	or byte ptr [ecx], al
0x1f8ef:    00 00                              	add byte ptr [eax], al
0x1f8f1:    00 c7                              	add bh, al
0x1f8f3:    00 28                              	add byte ptr [eax], ch
0x1f8f5:    15 03 00 89 47                     	adc eax, 0x47890003
0x1f8fa:    04 8b                              	add al, 0x8b
0x1f8fc:    44                                 	inc esp
0x1f8fd:    24 28                              	and al, 0x28
0x1f8ff:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1f903:    8d 44 24 20                        	lea eax, [esp + 0x20]
0x1f907:    89 04 24                           	mov dword ptr [esp], eax
0x1f90a:    e8 e1 e2 01 00                     	call 0x3dbf0 <unknown_3dbf0>
0x1f90f:    8b 74 24 18                        	mov esi, dword ptr [esp + 0x18]
0x1f913:    39 de                              	cmp esi, ebx
0x1f915:    75 0b                              	jne 0x1f922 <function_1f8e0+0x42>
0x1f917:    eb 22                              	jmp 0x1f93b <function_1f93b>
; data inside code section at 0x1f919 -- 0x1f920
0x1f919:    8d b4 26 00 00 00 00                               |..&....         |
0x1f920:    89 ee                              	mov esi, ebp
0x1f922:    8b 2e                              	mov ebp, dword ptr [esi]
0x1f924:    8d 46 0c                           	lea eax, [esi + 0xc]
0x1f927:    89 04 24                           	mov dword ptr [esp], eax
0x1f92a:    e8 01 04 01 00                     	call 0x2fd30 <function_2fd30>
0x1f92f:    89 34 24                           	mov dword ptr [esp], esi
; data inside code section at 0x1f932 -- 0x1f933
0x1f932:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1f933 -- 0x1f934
; data inside code section at 0x1f934 -- 0x1f93b
0x1f934:    ff ff ff 39 dd 75 e5                               |...9.u.         |
; function: function_1f93b at 0x1f93b -- 0x1f93f
0x1f93b:    8b 07                              	mov eax, dword ptr [edi]
0x1f93d:    85 c0                              	test eax, eax
; data inside code section at 0x1f93f -- 0x1f940
0x1f93f:    74                                                 |t               |
; function: function_1f940 at 0x1f940 -- 0x1f958
0x1f940:    4d                                 	dec ebp
0x1f941:    8b 00                              	mov eax, dword ptr [eax]
0x1f943:    85 c0                              	test eax, eax
0x1f945:    74 42                              	je 0x1f989 <function_1f989>
0x1f947:    89 47 08                           	mov dword ptr [edi + 8], eax
0x1f94a:    83 c7 0c                           	add edi, 0xc
0x1f94d:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x1f955:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1f958 -- 0x1f959
0x1f958:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_init at 0x1f959 -- 0x1f95a
; data inside code section at 0x1f95a -- 0x1f95c
0x1f95a:    ff ff                                              |..              |
; function: function_1f95c at 0x1f95c -- 0x1f972
0x1f95c:    ff 8b 44 24 3c 65                  	dec dword ptr [ebx + 0x653c2444]
0x1f962:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x1f968:    75 1a                              	jne 0x1f984 <function_1f95c+0x15>
0x1f96a:    83 c4 4c                           	add esp, 0x4c
0x1f96d:    5b                                 	pop ebx
0x1f96e:    5e                                 	pop esi
0x1f96f:    5f                                 	pop edi
0x1f970:    5d                                 	pop ebp
0x1f971:    c3                                 	ret 
; function: function_1f972 at 0x1f972 -- 0x1f984
0x1f972:    89 c7                              	mov edi, eax
0x1f974:    89 1c 24                           	mov dword ptr [esp], ebx
0x1f977:    e8 e4 e2 01 00                     	call 0x3dc60 <unknown_3dc60>
0x1f97c:    89 3c 24                           	mov dword ptr [esp], edi
0x1f97f:    e8 fc ff ff ff                     	call 0x1f980
; data inside code section at 0x1f984 -- 0x1f985
0x1f984:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1f985 -- 0x1f986
; data inside code section at 0x1f986 -- 0x1f989
0x1f986:    ff ff ff                                           |...             |
; function: function_1f989 at 0x1f989 -- 0x1f998
0x1f989:    e8 48 e2 00 00                     	call 0x2dbd6 <function_2dbd6>
0x1f98e:    66 90                              	nop 
0x1f990:    e8 09 e1 00 00                     	call 0x2da9e <function_2da9e>
0x1f995:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x1f998 -- 0x1f999
0x1f998:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x1f999 -- 0x1f99a
; data inside code section at 0x1f99a -- 0x1f9a6
0x1f99a:    ff ff ff 89 34 24 e8 ab  e4 01 00 e8               |....4$......    |
; dynamically linked function: __cxa_rethrow at 0x1f9a6 -- 0x1f9a7
; data inside code section at 0x1f9a7 -- 0x1f9ae
0x1f9a7:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1f9ae -- 0x1f9af
; data inside code section at 0x1f9af -- 0x1f9b6
0x1f9af:    ff ff ff 89 2c 24 e8                               |....,$.         |
; dynamically linked function: _ZdlPv at 0x1f9b6 -- 0x1f9b7
; data inside code section at 0x1f9b7 -- 0x1f9bb
0x1f9b7:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1f9bb -- 0x1f9bc
; data inside code section at 0x1f9bc -- 0x1f9c2
0x1f9bc:    ff ff ff 89 c7 e8                                  |......          |
; dynamically linked function: __cxa_end_catch at 0x1f9c2 -- 0x1f9c3
; data inside code section at 0x1f9c3 -- 0x1f9c6
0x1f9c3:    ff ff ff                                           |...             |
; function: function_1f9c6 at 0x1f9c6 -- 0x1f9c8
0x1f9c6:    eb ac                              	jmp 0x1f974
; data inside code section at 0x1f9c8 -- 0x1f9cb
0x1f9c8:    89 c7 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x1f9cb -- 0x1f9cc
; data inside code section at 0x1f9cc -- 0x1f9cf
0x1f9cc:    ff ff ff                                           |...             |
; function: function_1f9cf at 0x1f9cf -- 0x1f9d0
; data inside code section at 0x1f9d0 -- 0x1f9da
0x1f9d0:    46 04 89 04 24 e8 56 03  01 00                     |F...$.V...      |
; function: function_1f9da at 0x1f9da -- 0x1f9db
; data inside code section at 0x1f9db -- 0x1f9de
0x1f9db:    34 24 e8                                           |4$.             |
; dynamically linked function: _ZdlPv at 0x1f9de -- 0x1f9df
; data inside code section at 0x1f9df -- 0x1f9e0
0x1f9df:    ff                                                 |.               |
; function: function_1f9e0 at 0x1f9e0 -- 0x1f9e1
; data inside code section at 0x1f9e1 -- 0x1f9e2
0x1f9e1:    ff                                                 |.               |
; function: function_1f9e2 at 0x1f9e2 -- 0x1f9e4
0x1f9e2:    eb 90                              	jmp 0x1f974
; function: function_1f9e4 at 0x1f9e4 -- 0x1f9e8
0x1f9e4:    89 c7                              	mov edi, eax
0x1f9e6:    eb e7                              	jmp 0x1f9cf <function_1f9cf>
; data inside code section at 0x1f9e8 -- 0x1f9f1
0x1f9e8:    89 04 24 90 8d 74 26 00  e8                        |..$..t&..       |
; dynamically linked function: __cxa_begin_catch at 0x1f9f1 -- 0x1f9f2
; data inside code section at 0x1f9f2 -- 0x1f9f7
0x1f9f2:    ff ff ff 89 2c                                     |....,           |
; function: function_1f9f7 at 0x1f9f7 -- 0x1f9fa
0x1f9f7:    24 e8                              	and al, 0xe8
0x1f9f9:    c3                                 	ret 
; data inside code section at 0x1f9fa -- 0x1f9fe
0x1f9fa:    e5 01 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x1f9fe -- 0x1f9ff
; data inside code section at 0x1f9ff -- 0x1fa01
0x1f9ff:    ff ff                                              |..              |
; function: function_1fa01 at 0x1fa01 -- 0x1fa0e
0x1fa01:    ff 89 c7 89 2c 24                  	dec dword ptr [ecx + 0x242c89c7]
0x1fa07:    e8 fc ff ff ff                     	call 0x1fa08
0x1fa0c:    eb cc                              	jmp 0x1f9da <function_1f9da>
; function: function_1fa0e at 0x1fa0e -- 0x1fa12
0x1fa0e:    89 c7                              	mov edi, eax
0x1fa10:    eb c8                              	jmp 0x1f9da <function_1f9da>
; data inside code section at 0x1fa12 -- 0x1fa15
0x1fa12:    89 c7 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x1fa15 -- 0x1fa16
; data inside code section at 0x1fa16 -- 0x1fa19
0x1fa16:    ff ff ff                                           |...             |
; function: function_1fa19 at 0x1fa19 -- 0x1fa1b
0x1fa19:    eb bf                              	jmp 0x1f9da <function_1f9da>
; section: .text._ZN12CNodeSignalsC2Ev
; function: _ZN12CNodeSignalsC1Ev at 0x1fa20 -- 0x1fa3b
0x1fa20:    56                                 	push esi
0x1fa21:    53                                 	push ebx
0x1fa22:    83 ec 34                           	sub esp, 0x34
0x1fa25:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1fa29:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fa2f:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1fa33:    31 c0                              	xor eax, eax
0x1fa35:    c7 03 20 16 03 00                  	mov dword ptr [ebx], 0x31620
; data inside code section at 0x1fa3b -- 0x1fa40
0x1fa3b:    c7 04 24 24 00                                     |..$$.           |
; function: function_1fa40 at 0x1fa40 -- 0x1fa42
0x1fa40:    00 00                              	add byte ptr [eax], al
; data inside code section at 0x1fa42 -- 0x1fa43
0x1fa42:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1fa43 -- 0x1fa44
; data inside code section at 0x1fa44 -- 0x1fa73
0x1fa44:    ff ff ff 89 c6 8d 44 24  29 89 44 24 08 8d 44 24   |......D$).D$..D$|
0x1fa54:    28 89 44 24 04 89 34 24  e8 7f f2 01 00 89 73 04   |(.D$..4$......s.|
0x1fa64:    c7 43 08 00 00 00 00 c7  04 24 10 00 00 00 e8      |.C.......$..... |
; dynamically linked function: _Znwj at 0x1fa73 -- 0x1fa74
; data inside code section at 0x1fa74 -- 0x1faa6
0x1fa74:    ff ff ff c7 40 04 01 00  00 00 c7 40 08 01 00 00   |....@......@....|
0x1fa84:    00 c7 00 38 16 03 00 89  70 0c 89 43 08 c7 03 08   |...8....p..C....|
0x1fa94:    16 03 00 c7 43 0c d8 15  03 00 c7 04 24 24 00 00   |....C.......$$..|
0x1faa4:    00 e8                                              |..              |
; dynamically linked function: _Znwj at 0x1faa6 -- 0x1faa7
; data inside code section at 0x1faa7 -- 0x1fab0
0x1faa7:    ff ff ff 89 c6 8d 44 24  2b                        |......D$+       |
; function: function_1fab0 at 0x1fab0 -- 0x1fad5
0x1fab0:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x1fab4:    8d 44 24 2a                        	lea eax, [esp + 0x2a]
0x1fab8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1fabc:    89 34 24                           	mov dword ptr [esp], esi
0x1fabf:    e8 4c f7 01 00                     	call 0x3f210 <unknown_3f210>
0x1fac4:    89 73 10                           	mov dword ptr [ebx + 0x10], esi
0x1fac7:    c7 43 14 00 00 00 00               	mov dword ptr [ebx + 0x14], 0
0x1face:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x1fad5 -- 0x1fad6
0x1fad5:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1fad6 -- 0x1fad7
; data inside code section at 0x1fad7 -- 0x1fad9
0x1fad7:    ff ff                                              |..              |
; function: function_1fad9 at 0x1fad9 -- 0x1fb0e
0x1fad9:    ff c7                              	inc edi
0x1fadb:    40                                 	inc eax
0x1fadc:    04 01                              	add al, 1
0x1fade:    00 00                              	add byte ptr [eax], al
0x1fae0:    00 c7                              	add bh, al
0x1fae2:    40                                 	inc eax
0x1fae3:    08 01                              	or byte ptr [ecx], al
0x1fae5:    00 00                              	add byte ptr [eax], al
0x1fae7:    00 c7                              	add bh, al
0x1fae9:    00 58 16                           	add byte ptr [eax + 0x16], bl
0x1faec:    03 00                              	add eax, dword ptr [eax]
0x1faee:    89 70 0c                           	mov dword ptr [eax + 0xc], esi
0x1faf1:    89 43 14                           	mov dword ptr [ebx + 0x14], eax
0x1faf4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1faf8:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1faff:    c7 43 0c c0 15 03 00               	mov dword ptr [ebx + 0xc], 0x315c0
0x1fb06:    75 06                              	jne 0x1fb0e <function_1fad9+0x34>
0x1fb08:    83 c4 34                           	add esp, 0x34
0x1fb0b:    5b                                 	pop ebx
0x1fb0c:    5e                                 	pop esi
0x1fb0d:    c3                                 	ret 
; data inside code section at 0x1fb0e -- 0x1fb0f
0x1fb0e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1fb0f -- 0x1fb10
; data inside code section at 0x1fb10 -- 0x1fb17
0x1fb10:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x1fb17 -- 0x1fb18
; data inside code section at 0x1fb18 -- 0x1fb3a
0x1fb18:    ff ff ff 89 34 24 e8 6d  e4 01 00 e8 fc ff ff ff   |....4$.m........|
0x1fb28:    89 34 24 89 44 24 1c e8  fc ff ff ff 8b 44 24 1c   |.4$.D$.......D$.|
0x1fb38:    89 c6                                              |..              |
; function: function_1fb3a at 0x1fb3a -- 0x1fb3b
; data inside code section at 0x1fb3b -- 0x1fb4d
0x1fb3b:    43 0c f0 15 03 00 89 1c  24 e8 d7 69 01 00 89 34   |C.......$..i...4|
0x1fb4b:    24 e8                                              |$.              |
; dynamically linked function: _Unwind_Resume at 0x1fb4d -- 0x1fb4e
; data inside code section at 0x1fb4e -- 0x1fb51
0x1fb4e:    ff ff ff                                           |...             |
; function: function_1fb51 at 0x1fb51 -- 0x1fb5a
0x1fb51:    89 c6                              	mov esi, eax
0x1fb53:    e8 fc ff ff ff                     	call 0x1fb54
0x1fb58:    eb e0                              	jmp 0x1fb3a <function_1fb3a>
; function: function_1fb5a at 0x1fb5a -- 0x1fb62
0x1fb5a:    89 c6                              	mov esi, eax
0x1fb5c:    8d 74 26 00                        	lea esi, [esi]
0x1fb60:    eb d8                              	jmp 0x1fb3a <function_1fb3a>
; data inside code section at 0x1fb62 -- 0x1fb66
0x1fb62:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x1fb66 -- 0x1fb67
; data inside code section at 0x1fb67 -- 0x1fb73
0x1fb67:    ff ff ff 89 34 24 e8 3e  e2 01 00 e8               |....4$.>....    |
; dynamically linked function: __cxa_rethrow at 0x1fb73 -- 0x1fb74
; data inside code section at 0x1fb74 -- 0x1fb7f
0x1fb74:    ff ff ff 89 44 24 1c 89  34 24 e8                  |....D$..4$.     |
; dynamically linked function: _ZdlPv at 0x1fb7f -- 0x1fb80
; data inside code section at 0x1fb80 -- 0x1fb87
0x1fb80:    ff ff ff 8b 44 24 1c                               |....D$.         |
; function: function_1fb87 at 0x1fb87 -- 0x1fb88
; data inside code section at 0x1fb88 -- 0x1fb91
0x1fb88:    03 f0 15 03 00 89 04 24  e8                        |.......$.       |
; dynamically linked function: _Unwind_Resume at 0x1fb91 -- 0x1fb92
; data inside code section at 0x1fb92 -- 0x1fb95
0x1fb92:    ff ff ff                                           |...             |
; function: function_1fb95 at 0x1fb95 -- 0x1fb97
0x1fb95:    eb f0                              	jmp 0x1fb87 <function_1fb87>
; data inside code section at 0x1fb97 -- 0x1fb9a
0x1fb97:    89 c6 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x1fb9a -- 0x1fb9b
; data inside code section at 0x1fb9b -- 0x1fb9e
0x1fb9b:    ff ff ff                                           |...             |
; function: function_1fb9e at 0x1fb9e -- 0x1fba2
0x1fb9e:    89 f0                              	mov eax, esi
0x1fba0:    eb e5                              	jmp 0x1fb87 <function_1fb87>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E at 0x1fbb0 -- 0x1fbf1
0x1fbb0:    57                                 	push edi
0x1fbb1:    56                                 	push esi
0x1fbb2:    53                                 	push ebx
0x1fbb3:    83 ec 20                           	sub esp, 0x20
0x1fbb6:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x1fbba:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fbc0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1fbc4:    31 c0                              	xor eax, eax
0x1fbc6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1fbca:    85 db                              	test ebx, ebx
0x1fbcc:    75 04                              	jne 0x1fbd2 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E+0x22>
0x1fbce:    eb 2a                              	jmp 0x1fbfa <function_1fbfa>
0x1fbd0:    89 f3                              	mov ebx, esi
0x1fbd2:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x1fbd5:    89 3c 24                           	mov dword ptr [esp], edi
0x1fbd8:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1fbdc:    e8 7f fb 01 00                     	call 0x3f760 <unknown_3f760>
0x1fbe1:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x1fbe4:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x1fbe8:    74 04                              	je 0x1fbee <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE8_M_eraseEPSt13_Rb_tree_nodeISL_E+0x3e>
0x1fbea:    c6 43 14 00                        	mov byte ptr [ebx + 0x14], 0
0x1fbee:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1fbf1 -- 0x1fbf2
0x1fbf1:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fbf2 -- 0x1fbf3
; data inside code section at 0x1fbf3 -- 0x1fbfa
0x1fbf3:    ff ff ff 85 f6 75 d6                               |.....u.         |
; function: function_1fbfa at 0x1fbfa -- 0x1fc0e
0x1fbfa:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1fbfe:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fc05:    75 07                              	jne 0x1fc0e <function_1fbfa+0x13>
0x1fc07:    83 c4 20                           	add esp, 0x20
0x1fc0a:    5b                                 	pop ebx
0x1fc0b:    5e                                 	pop esi
0x1fc0c:    5f                                 	pop edi
0x1fc0d:    c3                                 	ret 
; data inside code section at 0x1fc0e -- 0x1fc0f
0x1fc0e:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1fc0f -- 0x1fc10
; data inside code section at 0x1fc10 -- 0x1fc13
0x1fc10:    ff ff ff                                           |...             |
; section: .text._ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv
; function: _ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv at 0x1fc20 -- 0x1fc6a
0x1fc20:    57                                 	push edi
0x1fc21:    56                                 	push esi
0x1fc22:    53                                 	push ebx
0x1fc23:    83 ec 20                           	sub esp, 0x20
0x1fc26:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fc2c:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1fc30:    31 c0                              	xor eax, eax
0x1fc32:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x1fc36:    8b 78 0c                           	mov edi, dword ptr [eax + 0xc]
0x1fc39:    85 ff                              	test edi, edi
0x1fc3b:    74 53                              	je 0x1fc90 <function_1fc90>
0x1fc3d:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1fc40:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1fc44:    8d 47 08                           	lea eax, [edi + 8]
0x1fc47:    89 04 24                           	mov dword ptr [esp], eax
0x1fc4a:    e8 81 fb 01 00                     	call 0x3f7d0 <unknown_3f7d0>
0x1fc4f:    8b 1f                              	mov ebx, dword ptr [edi]
0x1fc51:    39 fb                              	cmp ebx, edi
0x1fc53:    75 05                              	jne 0x1fc5a <_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEE7disposeEv+0x3a>
0x1fc55:    eb 1c                              	jmp 0x1fc73 <function_1fc73>
; data inside code section at 0x1fc57 -- 0x1fc58
0x1fc57:    90                                                 |.               |
0x1fc58:    89 f3                              	mov ebx, esi
0x1fc5a:    8b 33                              	mov esi, dword ptr [ebx]
0x1fc5c:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1fc5f:    89 04 24                           	mov dword ptr [esp], eax
0x1fc62:    e8 f9 04 01 00                     	call 0x30160 <function_30160>
0x1fc67:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1fc6a -- 0x1fc6b
0x1fc6a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fc6b -- 0x1fc6c
; data inside code section at 0x1fc6c -- 0x1fc73
0x1fc6c:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1fc73 at 0x1fc73 -- 0x1fc8a
0x1fc73:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1fc77:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fc7e:    75 24                              	jne 0x1fca4 <function_1fca4>
0x1fc80:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1fc84:    83 c4 20                           	add esp, 0x20
0x1fc87:    5b                                 	pop ebx
0x1fc88:    5e                                 	pop esi
0x1fc89:    5f                                 	pop edi
; data inside code section at 0x1fc8a -- 0x1fc8b
0x1fc8a:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fc8b -- 0x1fc8c
; data inside code section at 0x1fc8c -- 0x1fc90
0x1fc8c:    ff ff ff 90                                        |....            |
; function: function_1fc90 at 0x1fc90 -- 0x1fca0
0x1fc90:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1fc94:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fc9b:    75 07                              	jne 0x1fca4 <function_1fca4>
0x1fc9d:    83 c4 20                           	add esp, 0x20
; function: function_1fca0 at 0x1fca0 -- 0x1fca4
0x1fca0:    5b                                 	pop ebx
0x1fca1:    5e                                 	pop esi
0x1fca2:    5f                                 	pop edi
0x1fca3:    c3                                 	ret 
; function: function_1fca4 at 0x1fca4 -- 0x1fca5
; dynamically linked function: __stack_chk_fail at 0x1fca5 -- 0x1fca6
; data inside code section at 0x1fca6 -- 0x1fca9
0x1fca6:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEEEEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEEEEEEvPT_ at 0x1fcb0 -- 0x1fcfa
0x1fcb0:    57                                 	push edi
0x1fcb1:    56                                 	push esi
0x1fcb2:    53                                 	push ebx
0x1fcb3:    83 ec 20                           	sub esp, 0x20
0x1fcb6:    8b 7c 24 30                        	mov edi, dword ptr [esp + 0x30]
0x1fcba:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fcc0:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x1fcc4:    31 c0                              	xor eax, eax
0x1fcc6:    85 ff                              	test edi, edi
0x1fcc8:    74 56                              	je 0x1fd20 <function_1fd20>
0x1fcca:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x1fccd:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x1fcd1:    8d 47 08                           	lea eax, [edi + 8]
0x1fcd4:    89 04 24                           	mov dword ptr [esp], eax
0x1fcd7:    e8 84 fb 01 00                     	call 0x3f860 <unknown_3f860>
0x1fcdc:    8b 1f                              	mov ebx, dword ptr [edi]
0x1fcde:    39 fb                              	cmp ebx, edi
0x1fce0:    75 08                              	jne 0x1fcea <_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1IviNS_8functionIFviEEEEENS1_5mutexEEEEEEEEEvPT_+0x3a>
0x1fce2:    eb 1f                              	jmp 0x1fd03 <function_1fd03>
; data inside code section at 0x1fce4 -- 0x1fce8
0x1fce4:    8d 74 26 00                                        |.t&.            |
0x1fce8:    89 f3                              	mov ebx, esi
0x1fcea:    8b 33                              	mov esi, dword ptr [ebx]
0x1fcec:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1fcef:    89 04 24                           	mov dword ptr [esp], eax
0x1fcf2:    e8 f9 04 01 00                     	call 0x301f0 <function_301f0>
0x1fcf7:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x1fcfa -- 0x1fcfb
0x1fcfa:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fcfb -- 0x1fcfc
; data inside code section at 0x1fcfc -- 0x1fd03
0x1fcfc:    ff ff ff 39 fe 75 e5                               |...9.u.         |
; function: function_1fd03 at 0x1fd03 -- 0x1fd1a
0x1fd03:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1fd07:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fd0e:    75 24                              	jne 0x1fd34 <function_1fd34>
0x1fd10:    89 7c 24 30                        	mov dword ptr [esp + 0x30], edi
0x1fd14:    83 c4 20                           	add esp, 0x20
0x1fd17:    5b                                 	pop ebx
0x1fd18:    5e                                 	pop esi
0x1fd19:    5f                                 	pop edi
; data inside code section at 0x1fd1a -- 0x1fd1b
0x1fd1a:    e9                                                 |.               |
; dynamically linked function: _ZdlPv at 0x1fd1b -- 0x1fd1c
; data inside code section at 0x1fd1c -- 0x1fd20
0x1fd1c:    ff ff ff 90                                        |....            |
; function: function_1fd20 at 0x1fd20 -- 0x1fd34
0x1fd20:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x1fd24:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fd2b:    75 07                              	jne 0x1fd34 <function_1fd34>
0x1fd2d:    83 c4 20                           	add esp, 0x20
0x1fd30:    5b                                 	pop ebx
0x1fd31:    5e                                 	pop esi
0x1fd32:    5f                                 	pop edi
0x1fd33:    c3                                 	ret 
; function: function_1fd34 at 0x1fd34 -- 0x1fd35
; dynamically linked function: __stack_chk_fail at 0x1fd35 -- 0x1fd36
; data inside code section at 0x1fd36 -- 0x1fd39
0x1fd36:    ff ff ff                                           |...             |
; section: .text._ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_
; function: _ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_ at 0x1fd40 -- 0x1fda0
0x1fd40:    53                                 	push ebx
0x1fd41:    83 ec 38                           	sub esp, 0x38
0x1fd44:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x1fd48:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fd4e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1fd52:    31 c0                              	xor eax, eax
0x1fd54:    85 db                              	test ebx, ebx
0x1fd56:    74 30                              	je 0x1fd88 <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_+0x48>
0x1fd58:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x1fd5b:    89 04 24                           	mov dword ptr [esp], eax
0x1fd5e:    e8 1d 05 01 00                     	call 0x30280 <function_30280>
0x1fd63:    8d 43 04                           	lea eax, [ebx + 4]
0x1fd66:    89 04 24                           	mov dword ptr [esp], eax
0x1fd69:    e8 12 05 01 00                     	call 0x30280 <function_30280>
0x1fd6e:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1fd72:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fd79:    75 1f                              	jne 0x1fd9a <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1fd7b:    89 5c 24 40                        	mov dword ptr [esp + 0x40], ebx
0x1fd7f:    83 c4 38                           	add esp, 0x38
0x1fd82:    5b                                 	pop ebx
0x1fd83:    e9 fc ff ff ff                     	jmp 0x1fd84
0x1fd88:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1fd8c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x1fd93:    75 05                              	jne 0x1fd9a <_ZN5boost14checked_deleteINS_8signals26detail12signal1_implIviNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS1_10connectionEiEEENS1_5mutexEE16invocation_stateEEEvPT_+0x5a>
0x1fd95:    83 c4 38                           	add esp, 0x38
0x1fd98:    5b                                 	pop ebx
0x1fd99:    c3                                 	ret 
0x1fd9a:    8d b6 00 00 00 00                  	lea esi, [esi]
; data inside code section at 0x1fda0 -- 0x1fda1
0x1fda0:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x1fda1 -- 0x1fda2
; data inside code section at 0x1fda2 -- 0x1fda6
0x1fda2:    ff ff ff 83                                        |....            |
; function: function_1fda6 at 0x1fda6 -- 0x1fda7
0x1fda6:    c3                                 	ret 
; data inside code section at 0x1fda7 -- 0x1fdc0
0x1fda7:    04 89 44 24 1c 89 1c 24  e8 cc 04 01 00 8b 44 24   |..D$...$......D$|
0x1fdb7:    1c 89 04 24 e8 fc ff ff  ff                        |...$.....       |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_ at 0x1fdc0 -- 0x1fe12
0x1fdc0:    83 ec 4c                           	sub esp, 0x4c
0x1fdc3:    ba 01 00 00 00                     	mov edx, 1
0x1fdc8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1fdce:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x1fdd2:    31 c0                              	xor eax, eax
0x1fdd4:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x1fdd8:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x1fddc:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x1fde0:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x1fde4:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1fde8:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x1fdec:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x1fdf0:    85 c0                              	test eax, eax
0x1fdf2:    8d 4b 04                           	lea ecx, [ebx + 4]
0x1fdf5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x1fdf9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x1fdfd:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x1fe01:    0f 84 89 00 00 00                  	je 0x1fe90 <function_1fe90>
0x1fe07:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x1fe0b:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x1fe12 -- 0x1fe13
0x1fe12:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x1fe13 -- 0x1fe14
; data inside code section at 0x1fe14 -- 0x1fe57
0x1fe14:    ff ff ff 8b 54 24 18 83  f8 f0 74 1f 8b 0e c6 40   |....T$....t....@|
0x1fe24:    14 00 89 48 10 80 7e 04  00 74 0a 8b 4e 08 c6 40   |...H..~..t..N..@|
0x1fe34:    14 01 89 48 18 8b 4e 0c  89 48 1c 8b 4c 24 1c 89   |...H..N..H..L$..|
0x1fe44:    44 24 04 89 14 24 89 44  24 18 89 4c 24 0c 89 6c   |D$...$.D$..L$..l|
0x1fe54:    24 08 e8                                           |$..             |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x1fe57 -- 0x1fe58
; data inside code section at 0x1fe58 -- 0x1fe5a
0x1fe58:    ff ff                                              |..              |
; function: function_1fe5a at 0x1fe5a -- 0x1fe8a
0x1fe5a:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x1fe60:    43                                 	inc ebx
0x1fe61:    14 01                              	adc al, 1
0x1fe63:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x1fe67:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1fe6e:    89 07                              	mov dword ptr [edi], eax
0x1fe70:    89 f8                              	mov eax, edi
0x1fe72:    75 36                              	jne 0x1feaa <function_1feaa>
0x1fe74:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x1fe78:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x1fe7c:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x1fe80:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x1fe84:    83 c4 4c                           	add esp, 0x4c
0x1fe87:    c2 04 00                           	ret 4
; data inside code section at 0x1fe8a -- 0x1fe90
0x1fe8a:    8d b6 00 00 00 00                                  |......          |
; function: function_1fe90 at 0x1fe90 -- 0x1feaa
0x1fe90:    39 cd                              	cmp ebp, ecx
0x1fe92:    0f 84 6f ff ff ff                  	je 0x1fe07
0x1fe98:    8d 55 10                           	lea edx, [ebp + 0x10]
0x1fe9b:    89 f0                              	mov eax, esi
0x1fe9d:    e8 fe 02 00 00                     	call 0x201a0
0x1fea2:    0f b6 d0                           	movzx edx, al
0x1fea5:    e9 5d ff ff ff                     	jmp 0x1fe07
; function: function_1feaa at 0x1feaa -- 0x1feab
; dynamically linked function: __stack_chk_fail at 0x1feab -- 0x1feac
; data inside code section at 0x1feac -- 0x1feaf
0x1feac:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_ at 0x1feb0 -- 0x1ff0e
0x1feb0:    55                                 	push ebp
0x1feb1:    57                                 	push edi
0x1feb2:    56                                 	push esi
0x1feb3:    53                                 	push ebx
0x1feb4:    83 ec 4c                           	sub esp, 0x4c
0x1feb7:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x1febb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x1fec2:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x1fec6:    31 d2                              	xor edx, edx
0x1fec8:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1fecc:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x1fed0:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x1fed3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x1fed7:    85 ff                              	test edi, edi
0x1fed9:    75 0e                              	jne 0x1fee9 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x39>
0x1fedb:    e9 ab 00 00 00                     	jmp 0x1ff8b <function_1ff8b>
0x1fee0:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x1fee3:    85 d2                              	test edx, edx
0x1fee5:    74 17                              	je 0x1fefe <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x4e>
0x1fee7:    89 d7                              	mov edi, edx
0x1fee9:    8d 57 10                           	lea edx, [edi + 0x10]
0x1feec:    89 d8                              	mov eax, ebx
0x1feee:    e8 9d 03 00 00                     	call 0x20290
0x1fef3:    84 c0                              	test al, al
0x1fef5:    75 e9                              	jne 0x1fee0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x30>
0x1fef7:    8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x1fefa:    85 d2                              	test edx, edx
0x1fefc:    75 e9                              	jne 0x1fee7 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x37>
0x1fefe:    84 c0                              	test al, al
0x1ff00:    74 46                              	je 0x1ff48 <function_1ff48>
0x1ff02:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x1ff06:    3b 78 0c                           	cmp edi, dword ptr [eax + 0xc]
0x1ff09:    74 4d                              	je 0x1ff58 <function_1ff58>
0x1ff0b:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x1ff0e -- 0x1ff0f
0x1ff0e:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x1ff0f -- 0x1ff10
; function: function_1ff10 at 0x1ff10 -- 0x1ff11
; data inside code section at 0x1ff11 -- 0x1ff23
0x1ff11:    ff ff 89 da 89 c5 8d 45  10 e8 71 03 00 00 84 c0   |.......E..q.....|
0x1ff21:    75 35                                              |u5              |
; function: function_1ff23 at 0x1ff23 -- 0x1ff24
; data inside code section at 0x1ff24 -- 0x1ff29
0x1ff24:    2e c6 46 04 00                                     |..F..           |
; function: function_1ff29 at 0x1ff29 -- 0x1ff42
0x1ff29:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x1ff2d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x1ff34:    89 f0                              	mov eax, esi
0x1ff36:    75 5d                              	jne 0x1ff95 <function_1ff95>
0x1ff38:    83 c4 4c                           	add esp, 0x4c
0x1ff3b:    5b                                 	pop ebx
0x1ff3c:    5e                                 	pop esi
0x1ff3d:    5f                                 	pop edi
0x1ff3e:    5d                                 	pop ebp
0x1ff3f:    c2 04 00                           	ret 4
; data inside code section at 0x1ff42 -- 0x1ff48
0x1ff42:    8d b6 00 00 00 00                                  |......          |
; function: function_1ff48 at 0x1ff48 -- 0x1ff58
0x1ff48:    89 fd                              	mov ebp, edi
0x1ff4a:    89 da                              	mov edx, ebx
0x1ff4c:    8d 45 10                           	lea eax, [ebp + 0x10]
0x1ff4f:    e8 3c 03 00 00                     	call 0x20290
0x1ff54:    84 c0                              	test al, al
0x1ff56:    74 cb                              	je 0x1ff23
; function: function_1ff58 at 0x1ff58 -- 0x1ff8b
0x1ff58:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x1ff5c:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x1ff60:    89 04 24                           	mov dword ptr [esp], eax
0x1ff63:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x1ff67:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x1ff6b:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x1ff73:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x1ff77:    e8 f4 fc 01 00                     	call 0x3fc70 <unknown_3fc70>
0x1ff7c:    83 ec 04                           	sub esp, 4
0x1ff7f:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x1ff83:    c6 46 04 01                        	mov byte ptr [esi + 4], 1
0x1ff87:    89 06                              	mov dword ptr [esi], eax
0x1ff89:    eb 9e                              	jmp 0x1ff29 <function_1ff29>
; function: function_1ff8b at 0x1ff8b -- 0x1ff95
0x1ff8b:    89 c7                              	mov edi, eax
0x1ff8d:    83 c7 04                           	add edi, 4
0x1ff90:    e9 6d ff ff ff                     	jmp 0x1ff02
; function: function_1ff95 at 0x1ff95 -- 0x1ff96
; dynamically linked function: __stack_chk_fail at 0x1ff96 -- 0x1ff97
; data inside code section at 0x1ff97 -- 0x1ff9a
0x1ff97:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_ at 0x1ffa0 -- 0x20000
0x1ffa0:    83 ec 5c                           	sub esp, 0x5c
0x1ffa3:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x1ffa7:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x1ffab:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x1ffaf:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x1ffb3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x1ffb9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x1ffbd:    31 c0                              	xor eax, eax
0x1ffbf:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x1ffc3:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x1ffc7:    8d 47 04                           	lea eax, [edi + 4]
0x1ffca:    39 c3                              	cmp ebx, eax
0x1ffcc:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x1ffd0:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x1ffd4:    0f 84 06 01 00 00                  	je 0x200e0 <function_200e0>
0x1ffda:    8d 43 10                           	lea eax, [ebx + 0x10]
0x1ffdd:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x1ffe1:    89 c2                              	mov edx, eax
0x1ffe3:    89 e8                              	mov eax, ebp
0x1ffe5:    e8 96 03 00 00                     	call 0x20380 <function_20380>
0x1ffea:    84 c0                              	test al, al
0x1ffec:    0f 84 7e 00 00 00                  	je 0x20070 <function_20070>
0x1fff2:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x1fff5:    39 d8                              	cmp eax, ebx
0x1fff7:    0f 84 5b 01 00 00                  	je 0x20158 <function_20158>
0x1fffd:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x20000 -- 0x20001
0x20000:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x20001 -- 0x20002
; data inside code section at 0x20002 -- 0x20006
0x20002:    ff ff ff 89                                        |....            |
; function: function_20006 at 0x20006 -- 0x2000d
0x20006:    ea 89 c1 8d 40 10 89               	ljmp 0x8910:0x408dc189 <function_408dc189>
; data inside code section at 0x2000d -- 0x20047
0x2000d:    4c 24 20 e8 6b 03 00 00  8b 4c 24 20 84 c0 0f 84   |L$ .k....L$ ....|
0x2001d:    c6 00 00 00 8b 41 0c 89  6c 24 10 85 c0 0f 84 08   |.....A..l$......|
0x2002d:    01 00 00 89 5c 24 0c 89  5c 24 08 89 7c 24 04 89   |....\$..\$..|$..|
0x2003d:    34 24 e8 1c fd 01 00 83  ec 04                     |4$........      |
; function: function_20047 at 0x20047 -- 0x20070
0x20047:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2004b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20052:    89 f0                              	mov eax, esi
0x20054:    0f 85 2e 01 00 00                  	jne 0x20188 <function_20188>
0x2005a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2005e:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x20062:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x20066:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x2006a:    83 c4 5c                           	add esp, 0x5c
0x2006d:    c2 04 00                           	ret 4
; function: function_20070 at 0x20070 -- 0x20091
0x20070:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20074:    89 ea                              	mov edx, ebp
0x20076:    e8 05 03 00 00                     	call 0x20380 <function_20380>
0x2007b:    84 c0                              	test al, al
0x2007d:    0f 84 8d 00 00 00                  	je 0x20110 <function_20110>
0x20083:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x20086:    39 d8                              	cmp eax, ebx
0x20088:    0f 84 f0 00 00 00                  	je 0x2017e <function_2017e>
0x2008e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x20091 -- 0x20092
0x20091:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x20092 -- 0x20093
; data inside code section at 0x20093 -- 0x20095
0x20093:    ff ff                                              |..              |
; function: function_20095 at 0x20095 -- 0x200d9
0x20095:    ff 89 c1 8d 50 10                  	dec dword ptr [ecx + 0x10508dc1]
0x2009b:    89 e8                              	mov eax, ebp
0x2009d:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x200a1:    e8 da 02 00 00                     	call 0x20380 <function_20380>
0x200a6:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x200aa:    84 c0                              	test al, al
0x200ac:    74 39                              	je 0x200e7
0x200ae:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x200b1:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x200b5:    85 c0                              	test eax, eax
0x200b7:    0f 84 bb 00 00 00                  	je 0x20178 <function_20178>
0x200bd:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x200c1:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x200c5:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x200c9:    89 34 24                           	mov dword ptr [esp], esi
0x200cc:    e8 8f fc 01 00                     	call 0x3fd60 <unknown_3fd60>
0x200d1:    83 ec 04                           	sub esp, 4
0x200d4:    e9 6e ff ff ff                     	jmp 0x20047 <function_20047>
; data inside code section at 0x200d9 -- 0x200e0
0x200d9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_200e0 at 0x200e0 -- 0x20109
0x200e0:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x200e3:    85 c0                              	test eax, eax
0x200e5:    75 31                              	jne 0x20118 <function_20118>
0x200e7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x200eb:    89 04 24                           	mov dword ptr [esp], eax
0x200ee:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x200f2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x200f6:    e8 55 fd 01 00                     	call 0x3fe50 <unknown_3fe50>
0x200fb:    83 ec 04                           	sub esp, 4
0x200fe:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x20102:    89 06                              	mov dword ptr [esi], eax
0x20104:    e9 3e ff ff ff                     	jmp 0x20047 <function_20047>
; data inside code section at 0x20109 -- 0x20110
0x20109:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_20110 at 0x20110 -- 0x20117
0x20110:    89 1e                              	mov dword ptr [esi], ebx
0x20112:    e9 30 ff ff ff                     	jmp 0x20047 <function_20047>
; data inside code section at 0x20117 -- 0x20118
0x20117:    90                                                 |.               |
; function: function_20118 at 0x20118 -- 0x20133
0x20118:    8b 5f 10                           	mov ebx, dword ptr [edi + 0x10]
0x2011b:    89 ea                              	mov edx, ebp
0x2011d:    8d 43 10                           	lea eax, [ebx + 0x10]
0x20120:    e8 5b 02 00 00                     	call 0x20380 <function_20380>
0x20125:    84 c0                              	test al, al
0x20127:    74 be                              	je 0x200e7
0x20129:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x2012d:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x20131:    eb 09                              	jmp 0x2013c <function_2013c>
; data inside code section at 0x20133 -- 0x2013c
0x20133:    90 8d 74 26 00 89 4c 24  0c                        |..t&..L$.       |
; function: function_2013c at 0x2013c -- 0x20158
0x2013c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x20144:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x20148:    89 34 24                           	mov dword ptr [esp], esi
0x2014b:    e8 10 fc 01 00                     	call 0x3fd60 <unknown_3fd60>
0x20150:    83 ec 04                           	sub esp, 4
0x20153:    e9 ef fe ff ff                     	jmp 0x20047 <function_20047>
; function: function_20158 at 0x20158 -- 0x20178
0x20158:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x2015c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x20160:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x20164:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x20168:    89 34 24                           	mov dword ptr [esp], esi
0x2016b:    e8 f0 fb 01 00                     	call 0x3fd60 <unknown_3fd60>
0x20170:    83 ec 04                           	sub esp, 4
0x20173:    e9 cf fe ff ff                     	jmp 0x20047 <function_20047>
; function: function_20178 at 0x20178 -- 0x2017e
0x20178:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x2017c:    eb be                              	jmp 0x2013c <function_2013c>
; function: function_2017e at 0x2017e -- 0x20188
0x2017e:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x20182:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x20186:    eb b4                              	jmp 0x2013c <function_2013c>
; function: function_20188 at 0x20188 -- 0x20189
; dynamically linked function: __stack_chk_fail at 0x20189 -- 0x2018a
; data inside code section at 0x2018a -- 0x2018d
0x2018a:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj
; function: _ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj at 0x20190 -- 0x20281
0x20190:    55                                 	push ebp
0x20191:    57                                 	push edi
0x20192:    56                                 	push esi
0x20193:    53                                 	push ebx
0x20194:    83 ec 7c                           	sub esp, 0x7c
0x20197:    8b 84 24 9c 00 00 00               	mov eax, dword ptr [esp + 0x9c]
; data inside code section at 0x2019e -- 0x201a0
0x2019e:    8b bc                                              |..              |
0x201a0:    24 90                              	and al, 0x90
0x201a2:    00 00                              	add byte ptr [eax], al
0x201a4:    00 8b 94 24 98 00                  	add byte ptr [ebx + 0x982494], cl
0x201aa:    00 00                              	add byte ptr [eax], al
0x201ac:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x201b0:    0f b6 84 24 94 00 00 00            	movzx eax, byte ptr [esp + 0x94]
0x201b8:    88 44 24 2e                        	mov byte ptr [esp + 0x2e], al
0x201bc:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x201c2:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x201c6:    31 c0                              	xor eax, eax
0x201c8:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x201cb:    85 c0                              	test eax, eax
0x201cd:    0f 84 4a 04 00 00                  	je 0x2061d <function_2061d>
0x201d3:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x201d6:    83 f8 01                           	cmp eax, 1
0x201d9:    0f 85 3e 04 00 00                  	jne 0x2061d <function_2061d>
0x201df:    8b 07                              	mov eax, dword ptr [edi]
0x201e1:    8b 1a                              	mov ebx, dword ptr [edx]
0x201e3:    85 c0                              	test eax, eax
0x201e5:    0f 84 28 04 00 00                  	je 0x20613 <function_20613>
0x201eb:    8b 00                              	mov eax, dword ptr [eax]
0x201ed:    85 c0                              	test eax, eax
0x201ef:    0f 84 19 04 00 00                  	je 0x2060e <function_2060e>
0x201f5:    39 d8                              	cmp eax, ebx
0x201f7:    0f 84 8b 00 00 00                  	je 0x20288 <function_20288>
0x201fd:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x20201:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x20204:    85 d2                              	test edx, edx
0x20206:    0f 94 44 24 2f                     	sete byte ptr [esp + 0x2f]
0x2020b:    85 f6                              	test esi, esi
0x2020d:    0f 84 fd 00 00 00                  	je 0x20310
0x20213:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x2021b:    8b 06                              	mov eax, dword ptr [esi]
0x2021d:    89 34 24                           	mov dword ptr [esp], esi
0x20220:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x20223:    80 7c 24 2e 00                     	cmp byte ptr [esp + 0x2e], 0
0x20228:    0f 84 8a 00 00 00                  	je 0x202b8 <function_202b8>
0x2022e:    8b 6b 08                           	mov ebp, dword ptr [ebx + 8]
0x20231:    85 ed                              	test ebp, ebp
0x20233:    0f 84 89 02 00 00                  	je 0x204c2 <function_204c2>
0x20239:    8b 45 10                           	mov eax, dword ptr [ebp + 0x10]
0x2023c:    8d 55 10                           	lea edx, [ebp + 0x10]
0x2023f:    3b 45 14                           	cmp eax, dword ptr [ebp + 0x14]
0x20242:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x20246:    74 7b                              	je 0x202c3
0x20248:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
; data inside code section at 0x2024c -- 0x20260
0x2024c:    8b 44 24 1c 8b 10 89 d0  c1 f8 1f 31 d0 83 f8 13   |.D$........1....|
0x2025c:    0f 86 d6 00                                        |....            |
0x20260:    00 00                              	add byte ptr [eax], al
0x20262:    c7 44 24 0c 40 8c 02 00            	mov dword ptr [esp + 0xc], 0x28c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0x2026a:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x20272:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x2027a:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x20281 -- 0x20282
0x20281:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x20282 -- 0x20283
; data inside code section at 0x20283 -- 0x20285
0x20283:    ff ff                                              |..              |
; function: function_20285 at 0x20285 -- 0x20288
0x20285:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_20288 at 0x20288 -- 0x202a4
0x20288:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x2028c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20293:    89 5f 08                           	mov dword ptr [edi + 8], ebx
0x20296:    0f 85 7c 03 00 00                  	jne 0x20618 <function_20618>
0x2029c:    83 c4 7c                           	add esp, 0x7c
0x2029f:    5b                                 	pop ebx
0x202a0:    5e                                 	pop esi
0x202a1:    5f                                 	pop edi
0x202a2:    5d                                 	pop ebp
0x202a3:    c3                                 	ret 
; function: function_202a4 at 0x202a4 -- 0x202b2
0x202a4:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x202a7:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x202aa:    85 c0                              	test eax, eax
0x202ac:    0f 85 c1 01 00 00                  	jne 0x20473
; function: function_202b2 at 0x202b2 -- 0x202b8
0x202b2:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x202b6:    66 90                              	nop 
; function: function_202b8 at 0x202b8 -- 0x20380
0x202b8:    8b 6b 08                           	mov ebp, dword ptr [ebx + 8]
0x202bb:    85 ed                              	test ebp, ebp
0x202bd:    0f 84 ff 01 00 00                  	je 0x204c2 <function_204c2>
0x202c3:    0f b6 6d 04                        	movzx ebp, byte ptr [ebp + 4]
0x202c7:    8b 06                              	mov eax, dword ptr [esi]
0x202c9:    89 34 24                           	mov dword ptr [esp], esi
0x202cc:    ff 50 10                           	call dword ptr [eax + 0x10]
0x202cf:    89 e8                              	mov eax, ebp
0x202d1:    84 c0                              	test al, al
0x202d3:    74 73                              	je 0x20348 <function_202b8+0x90>
0x202d5:    8b 1b                              	mov ebx, dword ptr [ebx]
0x202d7:    8b 07                              	mov eax, dword ptr [edi]
0x202d9:    85 c0                              	test eax, eax
0x202db:    0f 84 32 03 00 00                  	je 0x20613 <function_20613>
0x202e1:    8b 00                              	mov eax, dword ptr [eax]
0x202e3:    85 c0                              	test eax, eax
0x202e5:    0f 84 23 03 00 00                  	je 0x2060e <function_2060e>
0x202eb:    39 d8                              	cmp eax, ebx
0x202ed:    74 99                              	je 0x20288 <function_20288>
0x202ef:    83 44 24 20 01                     	add dword ptr [esp + 0x20], 1
0x202f4:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x202f8:    39 44 24 28                        	cmp dword ptr [esp + 0x28], eax
0x202fc:    77 07                              	ja 0x20305 <function_202b8+0x4d>
0x202fe:    80 7c 24 2f 00                     	cmp byte ptr [esp + 0x2f], 0
0x20303:    74 83                              	je 0x20288 <function_20288>
0x20305:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x20308:    85 f6                              	test esi, esi
0x2030a:    0f 85 0b ff ff ff                  	jne 0x2021b
0x20310:    c7 44 24 0c c0 f9 02 00            	mov dword ptr [esp + 0xc], 0x2f9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]"
0x20318:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x20320:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x20328:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
0x2032f:    e8 fc ff ff ff                     	call 0x20330
0x20334:    8d 74 26 00                        	lea esi, [esi]
0x20338:    ff 24 85 c0 06 02 00               	jmp dword ptr [eax*4 + 0x206c0]
; data inside code section at 0x2033f -- 0x20340
0x2033f:    90                                                 |.               |
0x20340:    e8 1b 00 00 00                     	call 0x20360
0x20345:    8d 76 00                           	lea esi, [esi]
0x20348:    8b 53 08                           	mov edx, dword ptr [ebx + 8]
0x2034b:    85 d2                              	test edx, edx
0x2034d:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x20351:    0f 84 6b 01 00 00                  	je 0x204c2 <function_204c2>
0x20357:    8b 6c 24 38                        	mov ebp, dword ptr [esp + 0x38]
0x2035b:    8b 07                              	mov eax, dword ptr [edi]
0x2035d:    83 c5 44                           	add ebp, 0x44
0x20360:    85 c0                              	test eax, eax
0x20362:    0f 84 ab 02 00 00                  	je 0x20613 <function_20613>
0x20368:    8b 00                              	mov eax, dword ptr [eax]
0x2036a:    85 c0                              	test eax, eax
0x2036c:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x20370:    0f 84 98 02 00 00                  	je 0x2060e <function_2060e>
0x20376:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2037a:    39 c3                              	cmp ebx, eax
0x2037c:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
; function: function_20380 at 0x20380 -- 0x20411
0x20380:    0f 84 15 03 00 00                  	je 0x2069b <function_2069b>
0x20386:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x2038a:    8b 52 10                           	mov edx, dword ptr [edx + 0x10]
0x2038d:    85 d2                              	test edx, edx
0x2038f:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x20393:    0f 84 de 02 00 00                  	je 0x20677 <function_20677>
0x20399:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2039d:    89 d6                              	mov esi, edx
0x2039f:    83 c0 0c                           	add eax, 0xc
0x203a2:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x203a6:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x203aa:    eb 0f                              	jmp 0x203bb <function_20380+0x3b>
; data inside code section at 0x203ac -- 0x203b0
0x203ac:    8d 74 26 00                                        |.t&.            |
0x203b0:    89 74 24 1c                        	mov dword ptr [esp + 0x1c], esi
0x203b4:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x203b7:    85 f6                              	test esi, esi
0x203b9:    74 15                              	je 0x203d0 <function_20380+0x50>
0x203bb:    8d 46 10                           	lea eax, [esi + 0x10]
0x203be:    89 ea                              	mov edx, ebp
0x203c0:    e8 ab 01 00 00                     	call 0x20570 <function_20570>
0x203c5:    84 c0                              	test al, al
0x203c7:    74 e7                              	je 0x203b0 <function_20380+0x30>
0x203c9:    8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0x203cc:    85 f6                              	test esi, esi
0x203ce:    75 eb                              	jne 0x203bb <function_20380+0x3b>
0x203d0:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x203d4:    39 54 24 1c                        	cmp dword ptr [esp + 0x1c], edx
0x203d8:    0f 84 99 02 00 00                  	je 0x20677 <function_20677>
0x203de:    8b 74 24 1c                        	mov esi, dword ptr [esp + 0x1c]
0x203e2:    89 ea                              	mov edx, ebp
0x203e4:    83 c6 10                           	add esi, 0x10
0x203e7:    89 f0                              	mov eax, esi
0x203e9:    e8 82 01 00 00                     	call 0x20570 <function_20570>
0x203ee:    84 c0                              	test al, al
0x203f0:    74 26                              	je 0x20418 <function_20418>
0x203f2:    c7 44 24 0c 40 02 03 00            	mov dword ptr [esp + 0xc], 0x30240 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x203fa:    c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0x20402:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x2040a:    c7 04 24 00 de 00 00               	mov dword ptr [esp], 0xde00 ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0x20411 -- 0x20412
0x20411:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x20412 -- 0x20413
; data inside code section at 0x20413 -- 0x20415
0x20413:    ff ff                                              |..              |
; function: function_20415 at 0x20415 -- 0x20418
0x20415:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_20418 at 0x20418 -- 0x2044e
0x20418:    89 f2                              	mov edx, esi
0x2041a:    89 e8                              	mov eax, ebp
0x2041c:    e8 4f 01 00 00                     	call 0x20570 <function_20570>
0x20421:    84 c0                              	test al, al
0x20423:    75 cd                              	jne 0x203f2
0x20425:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x20429:    8b 03                              	mov eax, dword ptr [ebx]
0x2042b:    3b 5a 1c                           	cmp ebx, dword ptr [edx + 0x1c]
0x2042e:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x20432:    0f 84 90 00 00 00                  	je 0x204c8 <function_204c8>
0x20438:    89 1c 24                           	mov dword ptr [esp], ebx
0x2043b:    e8 fc ff ff ff                     	call 0x2043c
0x20440:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x20443:    89 04 24                           	mov dword ptr [esp], eax
0x20446:    e8 85 02 01 00                     	call 0x306d0 <function_306d0>
0x2044b:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2044e -- 0x2044f
0x2044e:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2044f -- 0x20450
; data inside code section at 0x20450 -- 0x20453
0x20450:    ff ff ff                                           |...             |
; function: function_20453 at 0x20453 -- 0x2045c
0x20453:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x20457:    e9 7b fe ff ff                     	jmp 0x202d7
; data inside code section at 0x2045c -- 0x20460
0x2045c:    85 d2 8b 54                                        |...T            |
; function: function_20460 at 0x20460 -- 0x2049e
0x20460:    24 1c                              	and al, 0x1c
0x20462:    0f 88 3c fe ff ff                  	js 0x202a4 <function_202a4>
0x20468:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x2046b:    85 c0                              	test eax, eax
0x2046d:    0f 84 3f fe ff ff                  	je 0x202b2 <function_202b2>
0x20473:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x20476:    85 c0                              	test eax, eax
0x20478:    0f 94 c0                           	sete al
0x2047b:    84 c0                              	test al, al
0x2047d:    0f 85 2f fe ff ff                  	jne 0x202b2 <function_202b2>
0x20483:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20487:    83 44 24 1c 0c                     	add dword ptr [esp + 0x1c], 0xc
0x2048c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x20490:    3b 50 04                           	cmp edx, dword ptr [eax + 4]
0x20493:    0f 85 b3 fd ff ff                  	jne 0x2024c
0x20499:    e9 1a fe ff ff                     	jmp 0x202b8 <function_202b8>
; data inside code section at 0x2049e -- 0x204a0
0x2049e:    66 90                                              |f.              |
; function: function_204a0 at 0x204a0 -- 0x204c2
0x204a0:    85 d2                              	test edx, edx
0x204a2:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x204a6:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x204a9:    0f 88 1f 01 00 00                  	js 0x205ce <function_205ce>
0x204af:    85 c0                              	test eax, eax
0x204b1:    0f 84 8a 01 00 00                  	je 0x20641 <function_20641>
0x204b7:    8b 10                              	mov edx, dword ptr [eax]
0x204b9:    89 04 24                           	mov dword ptr [esp], eax
0x204bc:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x204bf:    90                                 	nop 
0x204c0:    eb b9                              	jmp 0x2047b
; function: function_204c2 at 0x204c2 -- 0x204c8
0x204c2:    e8 e3 e0 00 00                     	call 0x2e5aa <function_2e5aa>
0x204c7:    90                                 	nop 
; function: function_204c8 at 0x204c8 -- 0x2056c
0x204c8:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x204cc:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x204d0:    8b 74 24 34                        	mov esi, dword ptr [esp + 0x34]
0x204d4:    89 54 24 44                        	mov dword ptr [esp + 0x44], edx
0x204d8:    eb 11                              	jmp 0x204eb <function_204c8+0x23>
; data inside code section at 0x204da -- 0x204e0
0x204da:    8d b6 00 00 00 00                                  |......          |
0x204e0:    89 74 24 44                        	mov dword ptr [esp + 0x44], esi
0x204e4:    8b 76 08                           	mov esi, dword ptr [esi + 8]
0x204e7:    85 f6                              	test esi, esi
0x204e9:    74 15                              	je 0x20500 <function_204c8+0x38>
0x204eb:    8d 56 10                           	lea edx, [esi + 0x10]
0x204ee:    89 e8                              	mov eax, ebp
0x204f0:    e8 7b 00 00 00                     	call 0x20570 <function_20570>
0x204f5:    84 c0                              	test al, al
0x204f7:    75 e7                              	jne 0x204e0 <function_204c8+0x18>
0x204f9:    8b 76 0c                           	mov esi, dword ptr [esi + 0xc]
0x204fc:    eb e9                              	jmp 0x204e7 <function_204c8+0x1f>
; data inside code section at 0x204fe -- 0x20500
0x204fe:    66 90                                              |f.              |
0x20500:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x20504:    39 44 24 30                        	cmp dword ptr [esp + 0x30], eax
0x20508:    74 07                              	je 0x20511 <function_204c8+0x49>
0x2050a:    8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0x2050d:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x20511:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x20515:    39 44 24 3c                        	cmp dword ptr [esp + 0x3c], eax
0x20519:    0f 84 b6 00 00 00                  	je 0x205d5 <function_205d5>
0x2051f:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x20523:    8b 74 24 30                        	mov esi, dword ptr [esp + 0x30]
0x20527:    8b 5c 24 34                        	mov ebx, dword ptr [esp + 0x34]
0x2052b:    eb 0c                              	jmp 0x20539 <function_204c8+0x71>
; data inside code section at 0x2052d -- 0x20530
0x2052d:    8d 76 00                                           |.v.             |
0x20530:    89 de                              	mov esi, ebx
0x20532:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x20535:    85 db                              	test ebx, ebx
0x20537:    74 17                              	je 0x20550 <function_204c8+0x88>
0x20539:    8d 43 10                           	lea eax, [ebx + 0x10]
0x2053c:    89 ea                              	mov edx, ebp
0x2053e:    e8 2d 00 00 00                     	call 0x20570 <function_20570>
0x20543:    84 c0                              	test al, al
0x20545:    74 e9                              	je 0x20530 <function_204c8+0x68>
0x20547:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x2054a:    eb e9                              	jmp 0x20535 <function_204c8+0x6d>
; data inside code section at 0x2054c -- 0x20550
0x2054c:    8d 74 26 00                                        |.t&.            |
0x20550:    3b 74 24 30                        	cmp esi, dword ptr [esp + 0x30]
0x20554:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x20558:    74 0e                              	je 0x20568 <function_204c8+0xa0>
0x2055a:    8d 56 10                           	lea edx, [esi + 0x10]
0x2055d:    89 e8                              	mov eax, ebp
0x2055f:    e8 0c 00 00 00                     	call 0x20570 <function_20570>
0x20564:    84 c0                              	test al, al
0x20566:    74 5a                              	je 0x205c2 <function_205c2>
0x20568:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
; data inside code section at 0x2056c -- 0x20570
0x2056c:    c6 44 24 60                                        |.D$`            |
; function: function_20570 at 0x20570 -- 0x205c2
0x20570:    00 8b 42 44 80 7a                  	add byte ptr [ebx + 0x7a804442], cl
0x20576:    48                                 	dec eax
0x20577:    00 89 44 24 5c 74                  	add byte ptr [ecx + 0x745c2444], cl
0x2057d:    0c 8b                              	or al, 0x8b
0x2057f:    42                                 	inc edx
0x20580:    4c                                 	dec esp
0x20581:    c6 44 24 60 01                     	mov byte ptr [esp + 0x60], 1
0x20586:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x2058a:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x2058e:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x20592:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20596:    8d 54 24 4c                        	lea edx, [esp + 0x4c]
0x2059a:    89 74 24 08                        	mov dword ptr [esp + 8], esi
0x2059e:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x205a6:    89 14 24                           	mov dword ptr [esp], edx
0x205a9:    83 c0 08                           	add eax, 8
0x205ac:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x205b0:    e8 7b fb 01 00                     	call 0x40130 <unknown_40130>
0x205b5:    8b 03                              	mov eax, dword ptr [ebx]
0x205b7:    83 ec 04                           	sub esp, 4
0x205ba:    8b 74 24 4c                        	mov esi, dword ptr [esp + 0x4c]
0x205be:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
; function: function_205c2 at 0x205c2 -- 0x205ce
0x205c2:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x205c6:    89 56 1c                           	mov dword ptr [esi + 0x1c], edx
0x205c9:    e9 6a fe ff ff                     	jmp 0x20438
; function: function_205ce at 0x205ce -- 0x205d5
0x205ce:    8b 00                              	mov eax, dword ptr [eax]
0x205d0:    e9 da fe ff ff                     	jmp 0x204af
; function: function_205d5 at 0x205d5 -- 0x205e4
0x205d5:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x205d9:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x205dd:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x205e1:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x205e4 -- 0x205e5
0x205e4:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x205e5 -- 0x205e6
; data inside code section at 0x205e6 -- 0x205f7
0x205e6:    ff ff ff 80 78 14 00 74  04 c6 40 14 00 89 04 24   |....x..t..@....$|
0x205f6:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x205f7 -- 0x205f8
; data inside code section at 0x205f8 -- 0x205fa
0x205f8:    ff ff                                              |..              |
; function: function_205fa at 0x205fa -- 0x2060e
0x205fa:    ff 8b 44 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbbc]
0x20600:    13 83 68 1c 01 89                  	adc eax, dword ptr [ebx - 0x76fee398]
0x20606:    54                                 	push esp
0x20607:    24 3c                              	and al, 0x3c
0x20609:    e9 2a fe ff ff                     	jmp 0x20438
; function: function_2060e at 0x2060e -- 0x20613
0x2060e:    e8 5f de 00 00                     	call 0x2e472 <function_2e472>
; function: function_20613 at 0x20613 -- 0x20618
0x20613:    e8 8a dd 00 00                     	call 0x2e3a2 <function_2e3a2>
; function: function_20618 at 0x20618 -- 0x20619
; dynamically linked function: __stack_chk_fail at 0x20619 -- 0x2061a
; data inside code section at 0x2061a -- 0x2061d
0x2061a:    ff ff ff                                           |...             |
; function: function_2061d at 0x2061d -- 0x2063c
0x2061d:    c7 44 24 0c 40 fc 02 00            	mov dword ptr [esp + 0xc], 0x2fc40 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = std::basic_string<char>, T1 = const char*, Combiner = boost::signals2::optional_last_value<std::basic_string<char> >, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<std::basic_string<char>(const char*)>, ExtendedSlotFunction = boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >]"
0x20625:    c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0x2062d:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x20635:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x2063c -- 0x2063d
0x2063c:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2063d -- 0x2063e
; data inside code section at 0x2063e -- 0x20641
0x2063e:    ff ff ff                                           |...             |
; function: function_20641 at 0x20641 -- 0x20660
0x20641:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x20649:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x20651:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x20659:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x20660 -- 0x20661
0x20660:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x20661 -- 0x20662
; data inside code section at 0x20662 -- 0x20666
0x20662:    ff ff ff 89                                        |....            |
; function: function_20666 at 0x20666 -- 0x20667
0x20666:    c3                                 	ret 
; data inside code section at 0x20667 -- 0x20673
0x20667:    8b 06 89 34 24 ff 50 10  89 1c 24 e8               |...4$.P...$.    |
; dynamically linked function: _Unwind_Resume at 0x20673 -- 0x20674
; data inside code section at 0x20674 -- 0x20677
0x20674:    ff ff ff                                           |...             |
; function: function_20677 at 0x20677 -- 0x20696
0x20677:    c7 44 24 0c 40 02 03 00            	mov dword ptr [esp + 0xc], 0x30240 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x2067f:    c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0x20687:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x2068f:    c7 04 24 b9 a3 00 00               	mov dword ptr [esp], 0xa3b9 ; "map_it != _group_map.end()"
; data inside code section at 0x20696 -- 0x20697
0x20696:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x20697 -- 0x20698
; data inside code section at 0x20698 -- 0x2069b
0x20698:    ff ff ff                                           |...             |
; function: function_2069b at 0x2069b -- 0x206ba
0x2069b:    c7 44 24 0c 40 02 03 00            	mov dword ptr [esp + 0xc], 0x30240 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x206a3:    c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0x206ab:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x206b3:    c7 04 24 a7 a3 00 00               	mov dword ptr [esp], 0xa3a7 ; "it != _list.end()"
; data inside code section at 0x206ba -- 0x206bb
0x206ba:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x206bb -- 0x206bc
; data inside code section at 0x206bc -- 0x206bf
0x206bc:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1ISsPKcNS1_8functionIFSsSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE7_M_copyEPKSt13_Rb_tree_nodeISN_EPSX_ at 0x20710 -- 0x20736
0x20710:    55                                 	push ebp
0x20711:    57                                 	push edi
0x20712:    56                                 	push esi
0x20713:    53                                 	push ebx
0x20714:    83 ec 3c                           	sub esp, 0x3c
0x20717:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2071d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x20721:    31 c0                              	xor eax, eax
0x20723:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x20727:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x2072b:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x2072f:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x20736 -- 0x20737
0x20736:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x20737 -- 0x20738
; data inside code section at 0x20738 -- 0x2073a
0x20738:    ff ff                                              |..              |
; function: function_2073a at 0x2073a -- 0x207b9
0x2073a:    ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0x20740:    24 1c                              	and al, 0x1c
0x20742:    74 28                              	je 0x2076c <function_2073a+0x32>
0x20744:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x20747:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2074b:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x2074e:    c6 42 14 00                        	mov byte ptr [edx + 0x14], 0
0x20752:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x20756:    74 0a                              	je 0x20762 <function_2073a+0x28>
0x20758:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x2075b:    c6 42 14 01                        	mov byte ptr [edx + 0x14], 1
0x2075f:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x20762:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x20765:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x20769:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x2076c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x20770:    8b 03                              	mov eax, dword ptr [ebx]
0x20772:    c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0x20779:    89 02                              	mov dword ptr [edx], eax
0x2077b:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x2077e:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x20785:    89 72 04                           	mov dword ptr [edx + 4], esi
0x20788:    85 c0                              	test eax, eax
0x2078a:    74 17                              	je 0x207a3 <function_2073a+0x69>
0x2078c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x20790:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x20794:    89 2c 24                           	mov dword ptr [esp], ebp
0x20797:    e8 84 06 02 00                     	call 0x40e20 <unknown_40e20>
0x2079c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x207a0:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x207a3:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x207a6:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x207aa:    85 f6                              	test esi, esi
0x207ac:    75 04                              	jne 0x207b2 <function_2073a+0x78>
0x207ae:    eb 6e                              	jmp 0x2081e <function_2081e>
0x207b0:    89 df                              	mov edi, ebx
0x207b2:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x207b9 -- 0x207ba
0x207b9:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x207ba -- 0x207bb
; data inside code section at 0x207bb -- 0x207c2
0x207bb:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_207c2 at 0x207c2 -- 0x207c3
0x207c2:    c3                                 	ret 
; data inside code section at 0x207c3 -- 0x2081e
0x207c3:    74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0x207d3:    74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0x207e3:    43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0x207f3:    00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0x20803:    13 89 5c 24 08 89 44 24  04 89 2c 24 e8 0c 06 02   |..\$..D$..,$....|
0x20813:    00 89 43 0c 8b 76 08 85  f6 75 92                  |..C..v...u.     |
; function: function_2081e at 0x2081e -- 0x2083f
0x2081e:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x20822:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20829:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2082d:    75 08                              	jne 0x20837 <function_2081e+0x19>
0x2082f:    83 c4 3c                           	add esp, 0x3c
0x20832:    5b                                 	pop ebx
0x20833:    5e                                 	pop esi
0x20834:    5f                                 	pop edi
0x20835:    5d                                 	pop ebp
0x20836:    c3                                 	ret 
0x20837:    e8 fc ff ff ff                     	call 0x20838
0x2083c:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2083f -- 0x20840
0x2083f:    e8                                                 |.               |
; function: __cxa_begin_catch at 0x20840 -- 0x20841
0x20840:    fc                                 	cld 
; data inside code section at 0x20841 -- 0x20855
0x20841:    ff ff ff 8b 44 24 1c 89  2c 24 89 44 24 04 e8 6c   |....D$..,$.D$..l|
0x20851:    ec 01 00 e8                                        |....            |
; dynamically linked function: __cxa_rethrow at 0x20855 -- 0x20856
; data inside code section at 0x20856 -- 0x2085a
0x20856:    ff ff ff 89                                        |....            |
; function: function_2085a at 0x2085a -- 0x2085b
0x2085a:    c3                                 	ret 
; data inside code section at 0x2085b -- 0x20868
0x2085b:    e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC2ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE
; function: _ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE16invocation_stateC1ERKSJ_RKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE at 0x20870 -- 0x208a2
0x20870:    55                                 	push ebp
0x20871:    57                                 	push edi
0x20872:    56                                 	push esi
0x20873:    53                                 	push ebx
0x20874:    83 ec 4c                           	sub esp, 0x4c
0x20877:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x2087b:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x2087f:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x20883:    c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
0x2088a:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x2088e:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x20892:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x20898:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2089c:    31 c0                              	xor eax, eax
0x2089e:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
; data inside code section at 0x208a2 -- 0x208a3
0x208a2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x208a3 -- 0x208a4
; data inside code section at 0x208a4 -- 0x208ed
0x208a4:    ff ff ff 8b 54 24 1c 89  00 89 40 04 8b 1a 89 44   |....T$....@....D|
0x208b4:    24 24 39 da 74 3d 89 c6  89 d7 66 90 c7 04 24 10   |$$9.t=....f...$.|
0x208c4:    00 00 00 e8 fc ff ff ff  83 f8 f8 74 14 8b 53 08   |...........t..S.|
0x208d4:    89 50 08 8b 53 0c 85 d2  89 50 0c 74 04 f0 ff 42   |.P..S....P.t...B|
0x208e4:    04 89 74 24 04 89 04 24  e8                        |..t$...$.       |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x208ed -- 0x208ee
; data inside code section at 0x208ee -- 0x20907
0x208ee:    ff ff ff 8b 1b 39 df 75  c9 8b 44 24 24 8b 4c 24   |.....9.u..D$$.L$|
0x208fe:    24 c7 40 0c 00 00 00 00  89                        |$.@......       |
; function: function_20907 at 0x20907 -- 0x2090a
0x20907:    c2 c7 40                           	ret 0x40c7
; data inside code section at 0x2090a -- 0x20910
0x2090a:    10 00 00 00 00 83                                  |......          |
; function: function_20910 at 0x20910 -- 0x20913
0x20910:    c2 08 c7                           	ret 0xc708
; data inside code section at 0x20913 -- 0x20930
0x20913:    40 1c 00 00 00 00 83 c0  0c 89 41 14 89 c5 89 41   |@.........A....A|
0x20923:    18 8b 4c 24 1c 89 44 24  20 8b 41 10 85            |..L$..D$ .A..   |
; function: function_20930 at 0x20930 -- 0x209bd
0x20930:    c0 74 4f 89 6c                     	sal byte ptr [edi + ecx*2 - 0x77], 0x6c
0x20935:    24 08                              	and al, 8
0x20937:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2093b:    89 14 24                           	mov dword ptr [esp], edx
0x2093e:    e8 3d 06 02 00                     	call 0x40f80 <unknown_40f80>
0x20943:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x20947:    89 c5                              	mov ebp, eax
0x20949:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x2094c:    eb 04                              	jmp 0x20952 <function_20930+0x22>
; data inside code section at 0x2094e -- 0x20950
0x2094e:    66 90                                              |f.              |
0x20950:    89 d5                              	mov ebp, edx
0x20952:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x20955:    85 d2                              	test edx, edx
0x20957:    75 f7                              	jne 0x20950 <function_20930+0x20>
0x20959:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x2095d:    89 69 14                           	mov dword ptr [ecx + 0x14], ebp
0x20960:    eb 08                              	jmp 0x2096a <function_20930+0x3a>
; data inside code section at 0x20962 -- 0x20968
0x20962:    8d b6 00 00 00 00                                  |......          |
0x20968:    89 d0                              	mov eax, edx
0x2096a:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x2096d:    85 d2                              	test edx, edx
0x2096f:    75 f7                              	jne 0x20968 <function_20930+0x38>
0x20971:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x20975:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x20979:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x2097c:    8b 41 1c                           	mov eax, dword ptr [ecx + 0x1c]
0x2097f:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x20982:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x20986:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2098a:    8b 7a 14                           	mov edi, dword ptr [edx + 0x14]
0x2098d:    83 c2 0c                           	add edx, 0xc
0x20990:    8b 30                              	mov esi, dword ptr [eax]
0x20992:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x20996:    39 d7                              	cmp edi, edx
0x20998:    74 56                              	je 0x209f0 <function_209f0>
0x2099a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x209a0:    39 6c 24 20                        	cmp dword ptr [esp + 0x20], ebp
0x209a4:    0f 84 f2 00 00 00                  	je 0x20a9c <function_20a9c>
0x209aa:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x209ae:    89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0x209b1:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x209b5:    74 03                              	je 0x209ba <function_20930+0x8a>
0x209b7:    8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0x209ba:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x209bd -- 0x209be
0x209bd:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x209be -- 0x209bf
; data inside code section at 0x209bf -- 0x209c2
0x209bf:    ff ff ff                                           |...             |
; function: function_209c2 at 0x209c2 -- 0x209f0
0x209c2:    89 c7                              	mov edi, eax
0x209c4:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x209c8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x209cc:    74 0e                              	je 0x209dc <function_209c2+0x1a>
0x209ce:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x209d1:    eb 09                              	jmp 0x209dc <function_209c2+0x1a>
; data inside code section at 0x209d3 -- 0x209d8
0x209d3:    90 8d 74 26 00                                     |..t&.           |
0x209d8:    8b 1b                              	mov ebx, dword ptr [ebx]
0x209da:    8b 36                              	mov esi, dword ptr [esi]
0x209dc:    39 c3                              	cmp ebx, eax
0x209de:    75 f8                              	jne 0x209d8 <function_209c2+0x16>
0x209e0:    89 2c 24                           	mov dword ptr [esp], ebp
0x209e3:    e8 fc ff ff ff                     	call 0x209e4
0x209e8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x209ec:    89 c5                              	mov ebp, eax
0x209ee:    75 b0                              	jne 0x209a0
; function: function_209f0 at 0x209f0 -- 0x20a08
0x209f0:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x209f4:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x209f8:    c7 42 04 00 00 00 00               	mov dword ptr [edx + 4], 0
0x209ff:    89 02                              	mov dword ptr [edx], eax
0x20a01:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x20a08 -- 0x20a09
0x20a08:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x20a09 -- 0x20a0a
; data inside code section at 0x20a0a -- 0x20a0c
0x20a0a:    ff ff                                              |..              |
; function: function_20a0c at 0x20a0c -- 0x20a5c
0x20a0c:    ff 8b 54 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbac]
0x20a12:    4c                                 	dec esp
0x20a13:    24 28                              	and al, 0x28
0x20a15:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x20a1c:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x20a23:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x20a26:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x20a2a:    c7 00 48 15 03 00                  	mov dword ptr [eax], 0x31548
0x20a30:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x20a33:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x20a36:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x20a39:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x20a3c:    85 c0                              	test eax, eax
0x20a3e:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x20a41:    74 04                              	je 0x20a47 <function_20a0c+0x3b>
0x20a43:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x20a47:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x20a4b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20a52:    75 2a                              	jne 0x20a7e <function_20a7e>
0x20a54:    83 c4 4c                           	add esp, 0x4c
0x20a57:    5b                                 	pop ebx
0x20a58:    5e                                 	pop esi
0x20a59:    5f                                 	pop edi
0x20a5a:    5d                                 	pop ebp
0x20a5b:    c3                                 	ret 
; data inside code section at 0x20a5c -- 0x20a5d
0x20a5c:    89                                                 |.               |
; function: function_20a5d at 0x20a5d -- 0x20a5e
0x20a5d:    c3                                 	ret 
; data inside code section at 0x20a5e -- 0x20a6a
0x20a5e:    8b 44 24 24 89 04 24 e8  e6 e4 01 00               |.D$$..$.....    |
; function: function_20a6a at 0x20a6a -- 0x20a71
0x20a6a:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20a6e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x20a71 -- 0x20a72
0x20a71:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x20a72 -- 0x20a73
; data inside code section at 0x20a73 -- 0x20a7a
0x20a73:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x20a7a -- 0x20a7b
; data inside code section at 0x20a7b -- 0x20a7e
0x20a7b:    ff ff ff                                           |...             |
; function: function_20a7e at 0x20a7e -- 0x20a7f
; dynamically linked function: __stack_chk_fail at 0x20a7f -- 0x20a80
; data inside code section at 0x20a80 -- 0x20a87
0x20a80:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x20a87 -- 0x20a88
; data inside code section at 0x20a88 -- 0x20a9c
0x20a88:    ff ff ff 8b 44 24 24 89  04 24 e8 89 ec 01 00 e8   |....D$$..$......|
0x20a98:    fc ff ff ff                                        |....            |
; function: function_20a9c at 0x20a9c -- 0x20ad0
0x20a9c:    c7 44 24 0c 80 06 03 00            	mov dword ptr [esp + 0xc], 0x30680 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >]"
0x20aa4:    c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x20aac:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x20ab4:    c7 04 24 a8 dd 00 00               	mov dword ptr [esp], 0xdda8 ; "this_map_it != _group_map.end()"
0x20abb:    e8 fc ff ff ff                     	call 0x20abc
0x20ac0:    89 c3                              	mov ebx, eax
0x20ac2:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20ac6:    89 04 24                           	mov dword ptr [esp], eax
0x20ac9:    e8 82 e4 01 00                     	call 0x3ef50 <unknown_3ef50>
0x20ace:    eb 9a                              	jmp 0x20a6a <function_20a6a>
; data inside code section at 0x20ad0 -- 0x20ad1
0x20ad0:    89                                                 |.               |
; function: function_20ad1 at 0x20ad1 -- 0x20ad2
0x20ad1:    c3                                 	ret 
; data inside code section at 0x20ad2 -- 0x20ad3
0x20ad2:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x20ad3 -- 0x20ad4
; data inside code section at 0x20ad4 -- 0x20adb
0x20ad4:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x20adb -- 0x20adc
; data inside code section at 0x20adc -- 0x20adf
0x20adc:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE
; function: _ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEE at 0x20ae0 -- 0x20b12
0x20ae0:    83 ec 4c                           	sub esp, 0x4c
0x20ae3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x20ae7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
; data inside code section at 0x20aeb -- 0x20aee
0x20aeb:    65 a1 14                                           |e..             |
0x20aee:    00 00                              	add byte ptr [eax], al
; data inside code section at 0x20af0 -- 0x20b10
0x20af0:    00 89 44 24 2c 31 c0 89  74 24 40 89 7c 24 44 8b   |..D$,1..t$@.|$D.|
0x20b00:    7c 24 54 8d 43 0c 89 6c  24 48 89 44 24 24 89 04   ||$T.C..l$H.D$$..|
0x20b10:    24 e8                              	and al, 0xe8
; dynamically linked function: pthread_mutex_lock at 0x20b12 -- 0x20b13
; data inside code section at 0x20b13 -- 0x20b2e
0x20b13:    ff ff ff 8b 33 85 f6 0f  84 0a 01 00 00 8b 06 85   |....3...........|
0x20b23:    c0 0f 84 fb 00 00 00 39  c7 74 32                  |.......9.t2     |
; function: function_20b2e at 0x20b2e -- 0x20b2f
; data inside code section at 0x20b2f -- 0x20b36
0x20b2f:    44 24 24 89 04 24 e8                               |D$$..$.         |
; dynamically linked function: pthread_mutex_unlock at 0x20b36 -- 0x20b37
; data inside code section at 0x20b37 -- 0x20b39
0x20b37:    ff ff                                              |..              |
; function: function_20b39 at 0x20b39 -- 0x20b5f
0x20b39:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x20b3f:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x20b45:    0f 85 ea 00 00 00                  	jne 0x20c35 <function_20c35>
0x20b4b:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x20b4f:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x20b53:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x20b57:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x20b5b:    83 c4 4c                           	add esp, 0x4c
0x20b5e:    c3                                 	ret 
; data inside code section at 0x20b5f -- 0x20b7b
0x20b5f:    90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0x20b6f:    83 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0x20b7b -- 0x20b7c
; data inside code section at 0x20b7c -- 0x20b90
0x20b7c:    ff ff ff 89 c5 89 7c 24  08 89 74 24 04 89 04 24   |......|$..t$...$|
0x20b8c:    e8 bf 07 02                                        |....            |
; function: function_20b90 at 0x20b90 -- 0x20bb0
0x20b90:    00 85 ed 74 08 3b                  	add byte ptr [ebp + 0x3b0874ed], al
0x20b96:    2b 0f                              	sub ecx, dword ptr [edi]
0x20b98:    84 9d 00 00 00 89                  	test byte ptr [ebp - 0x77000000], bl
0x20b9e:    6c                                 	insb byte ptr es:[edi], dx
0x20b9f:    24 1c                              	and al, 0x1c
0x20ba1:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x20ba9:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x20bb0 -- 0x20bb1
0x20bb0:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x20bb1 -- 0x20bb2
; data inside code section at 0x20bb2 -- 0x20bb4
0x20bb2:    ff ff                                              |..              |
; function: function_20bb4 at 0x20bb4 -- 0x20c30
0x20bb4:    ff 8b 54 24 1c c7                  	dec dword ptr [ebx - 0x38e3dbac]
0x20bba:    00 68 15                           	add byte ptr [eax + 0x15], ch
0x20bbd:    03 00                              	add eax, dword ptr [eax]
0x20bbf:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x20bc6:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x20bc9:    8b 0b                              	mov ecx, dword ptr [ebx]
0x20bcb:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x20bd2:    89 13                              	mov dword ptr [ebx], edx
0x20bd4:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x20bd7:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x20bda:    8d 44 24 20                        	lea eax, [esp + 0x20]
0x20bde:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x20be2:    89 04 24                           	mov dword ptr [esp], eax
0x20be5:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x20be9:    e8 32 04 01 00                     	call 0x31020 <function_31020>
0x20bee:    8b 03                              	mov eax, dword ptr [ebx]
0x20bf0:    85 c0                              	test eax, eax
0x20bf2:    74 36                              	je 0x20c2a <function_20bb4+0x76>
0x20bf4:    8b 38                              	mov edi, dword ptr [eax]
0x20bf6:    85 ff                              	test edi, edi
0x20bf8:    74 2b                              	je 0x20c25 <function_20bb4+0x71>
0x20bfa:    8b 07                              	mov eax, dword ptr [edi]
0x20bfc:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x20c04:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x20c0c:    89 1c 24                           	mov dword ptr [esp], ebx
0x20c0f:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x20c13:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x20c17:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x20c1b:    e8 50 00 02 00                     	call 0x40c70 <unknown_40c70>
0x20c20:    e9 09 ff ff ff                     	jmp 0x20b2e <function_20b2e>
0x20c25:    e8 98 e1 00 00                     	call 0x2edc2 <function_2edc2>
0x20c2a:    8d b6 00 00 00 00                  	lea esi, [esi]
; function: function_20c30 at 0x20c30 -- 0x20c35
0x20c30:    e8 bd e0 00 00                     	call 0x2ecf2 <function_2ecf2>
; function: function_20c35 at 0x20c35 -- 0x20c36
; dynamically linked function: __stack_chk_fail at 0x20c36 -- 0x20c37
; data inside code section at 0x20c37 -- 0x20c5a
0x20c37:    ff ff ff c7 44 24 0c 20  0a 03 00 c7 44 24 08 87   |....D$. ....D$..|
0x20c47:    01 00 00 c7 44 24 04 d0  d5 00 00 c7 04 24 d4 a3   |....D$.......$..|
0x20c57:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x20c5a -- 0x20c5b
; data inside code section at 0x20c5b -- 0x20c62
0x20c5b:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x20c62 -- 0x20c63
; data inside code section at 0x20c63 -- 0x20c6f
0x20c63:    ff ff ff 89 2c 24 e8 b2  ed 01 00 e8               |....,$......    |
; dynamically linked function: __cxa_rethrow at 0x20c6f -- 0x20c70
; data inside code section at 0x20c70 -- 0x20c74
0x20c70:    ff ff ff 89                                        |....            |
; function: function_20c74 at 0x20c74 -- 0x20c75
0x20c74:    c3                                 	ret 
; function: function_20c75 at 0x20c75 -- 0x20c76
; data inside code section at 0x20c76 -- 0x20c85
0x20c76:    44 24 24 89 04 24 e8 8f  61 01 00 89 1c 24 e8      |D$$..$..a....$. |
; dynamically linked function: _Unwind_Resume at 0x20c85 -- 0x20c86
; data inside code section at 0x20c86 -- 0x20c8a
0x20c86:    ff ff ff 89                                        |....            |
; function: function_20c8a at 0x20c8a -- 0x20c8b
0x20c8a:    c3                                 	ret 
; data inside code section at 0x20c8b -- 0x20c8f
0x20c8b:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZdlPv at 0x20c8f -- 0x20c90
; data inside code section at 0x20c90 -- 0x20c93
0x20c90:    ff ff ff                                           |...             |
; function: function_20c93 at 0x20c93 -- 0x20c95
0x20c93:    eb e0                              	jmp 0x20c75 <function_20c75>
; function: function_20c95 at 0x20c95 -- 0x20ca2
0x20c95:    89 c3                              	mov ebx, eax
0x20c97:    e8 fc ff ff ff                     	call 0x20c98
0x20c9c:    8d 74 26 00                        	lea esi, [esi]
0x20ca0:    eb d3                              	jmp 0x20c75 <function_20c75>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_M_insert_EPKSt18_Rb_tree_node_baseSW_RKSL_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE10_M_insert_EPKSt18_Rb_tree_node_baseSW_RKSL_ at 0x20cb0 -- 0x20cbe
0x20cb0:    83 ec 4c                           	sub esp, 0x4c
0x20cb3:    ba 01 00 00 00                     	mov edx, 1
0x20cb8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
; data inside code section at 0x20cbe -- 0x20cc0
0x20cbe:    89 44                                              |.D              |
; function: function_20cc0 at 0x20cc0 -- 0x20d02
0x20cc0:    24 2c                              	and al, 0x2c
0x20cc2:    31 c0                              	xor eax, eax
0x20cc4:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x20cc8:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x20ccc:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x20cd0:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x20cd4:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x20cd8:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x20cdc:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x20ce0:    85 c0                              	test eax, eax
0x20ce2:    8d 4b 04                           	lea ecx, [ebx + 4]
0x20ce5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x20ce9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x20ced:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x20cf1:    0f 84 89 00 00 00                  	je 0x20d80 <function_20d80>
0x20cf7:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x20cfb:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x20d02 -- 0x20d03
0x20d02:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x20d03 -- 0x20d04
; data inside code section at 0x20d04 -- 0x20d47
0x20d04:    ff ff ff 8b 54 24 18 83  f8 f0 74 1f 8b 0e c6 40   |....T$....t....@|
0x20d14:    14 00 89 48 10 80 7e 04  00 74 0a 8b 4e 08 c6 40   |...H..~..t..N..@|
0x20d24:    14 01 89 48 18 8b 4e 0c  89 48 1c 8b 4c 24 1c 89   |...H..N..H..L$..|
0x20d34:    44 24 04 89 14 24 89 44  24 18 89 4c 24 0c 89 6c   |D$...$.D$..L$..l|
0x20d44:    24 08 e8                                           |$..             |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x20d47 -- 0x20d48
; data inside code section at 0x20d48 -- 0x20d50
0x20d48:    ff ff ff 8b 44 24 18 83                            |....D$..        |
; function: function_20d50 at 0x20d50 -- 0x20d7a
0x20d50:    43                                 	inc ebx
0x20d51:    14 01                              	adc al, 1
0x20d53:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x20d57:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20d5e:    89 07                              	mov dword ptr [edi], eax
0x20d60:    89 f8                              	mov eax, edi
0x20d62:    75 36                              	jne 0x20d9a <function_20d9a>
0x20d64:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x20d68:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x20d6c:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x20d70:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x20d74:    83 c4 4c                           	add esp, 0x4c
0x20d77:    c2 04 00                           	ret 4
; data inside code section at 0x20d7a -- 0x20d80
0x20d7a:    8d b6 00 00 00 00                                  |......          |
; function: function_20d80 at 0x20d80 -- 0x20d9a
0x20d80:    39 cd                              	cmp ebp, ecx
0x20d82:    0f 84 6f ff ff ff                  	je 0x20cf7
0x20d88:    8d 55 10                           	lea edx, [ebp + 0x10]
0x20d8b:    89 f0                              	mov eax, esi
0x20d8d:    e8 fe 02 00 00                     	call 0x21090 <function_21090>
0x20d92:    0f b6 d0                           	movzx edx, al
0x20d95:    e9 5d ff ff ff                     	jmp 0x20cf7
; function: function_20d9a at 0x20d9a -- 0x20d9b
; dynamically linked function: __stack_chk_fail at 0x20d9b -- 0x20d9c
; data inside code section at 0x20d9c -- 0x20d9f
0x20d9c:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE16_M_insert_uniqueERKSL_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE16_M_insert_uniqueERKSL_ at 0x20da0 -- 0x20dde
0x20da0:    55                                 	push ebp
0x20da1:    57                                 	push edi
0x20da2:    56                                 	push esi
0x20da3:    53                                 	push ebx
0x20da4:    83 ec 4c                           	sub esp, 0x4c
0x20da7:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x20dab:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x20db2:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x20db6:    31 d2                              	xor edx, edx
0x20db8:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x20dbc:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x20dc0:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x20dc3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x20dc7:    85 ff                              	test edi, edi
0x20dc9:    75 0e                              	jne 0x20dd9 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE16_M_insert_uniqueERKSL_+0x39>
0x20dcb:    e9 ab 00 00 00                     	jmp 0x20e7b <function_20e7b>
0x20dd0:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x20dd3:    85 d2                              	test edx, edx
0x20dd5:    74 17                              	je 0x20dee
0x20dd7:    89 d7                              	mov edi, edx
0x20dd9:    8d 57 10                           	lea edx, [edi + 0x10]
0x20ddc:    89 d8                              	mov eax, ebx
; data inside code section at 0x20dde -- 0x20de0
0x20dde:    e8 9d                                              |..              |
; function: function_20de0 at 0x20de0 -- 0x20dfe
0x20de0:    03 00                              	add eax, dword ptr [eax]
0x20de2:    00 84 c0 75 e9 8b 57               	add byte ptr [eax + eax*8 + 0x578be975], al
0x20de9:    0c 85                              	or al, 0x85
0x20deb:    d2 75 e9                           	sal byte ptr [ebp - 0x17], cl
0x20dee:    84 c0                              	test al, al
0x20df0:    74 46                              	je 0x20e38 <function_20e38>
0x20df2:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x20df6:    3b 78 0c                           	cmp edi, dword ptr [eax + 0xc]
0x20df9:    74 4d                              	je 0x20e48 <function_20e48>
0x20dfb:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x20dfe -- 0x20dff
0x20dfe:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x20dff -- 0x20e00
; data inside code section at 0x20e00 -- 0x20e13
0x20e00:    ff ff ff 89 da 89 c5 8d  45 10 e8 71 03 00 00 84   |........E..q....|
0x20e10:    c0 75 35                                           |.u5             |
; function: function_20e13 at 0x20e13 -- 0x20e14
; data inside code section at 0x20e14 -- 0x20e19
0x20e14:    2e c6 46 04 00                                     |..F..           |
; function: function_20e19 at 0x20e19 -- 0x20e32
0x20e19:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x20e1d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20e24:    89 f0                              	mov eax, esi
0x20e26:    75 5d                              	jne 0x20e85 <function_20e85>
0x20e28:    83 c4 4c                           	add esp, 0x4c
0x20e2b:    5b                                 	pop ebx
0x20e2c:    5e                                 	pop esi
0x20e2d:    5f                                 	pop edi
0x20e2e:    5d                                 	pop ebp
0x20e2f:    c2 04 00                           	ret 4
; data inside code section at 0x20e32 -- 0x20e38
0x20e32:    8d b6 00 00 00 00                                  |......          |
; function: function_20e38 at 0x20e38 -- 0x20e48
0x20e38:    89 fd                              	mov ebp, edi
0x20e3a:    89 da                              	mov edx, ebx
0x20e3c:    8d 45 10                           	lea eax, [ebp + 0x10]
0x20e3f:    e8 3c 03 00 00                     	call 0x21180
0x20e44:    84 c0                              	test al, al
0x20e46:    74 cb                              	je 0x20e13
; function: function_20e48 at 0x20e48 -- 0x20e7b
0x20e48:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x20e4c:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x20e50:    89 04 24                           	mov dword ptr [esp], eax
0x20e53:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x20e57:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x20e5b:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x20e63:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x20e67:    e8 e4 0b 02 00                     	call 0x41a50 <unknown_41a50>
0x20e6c:    83 ec 04                           	sub esp, 4
0x20e6f:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x20e73:    c6 46 04 01                        	mov byte ptr [esi + 4], 1
0x20e77:    89 06                              	mov dword ptr [esi], eax
0x20e79:    eb 9e                              	jmp 0x20e19 <function_20e19>
; function: function_20e7b at 0x20e7b -- 0x20e85
0x20e7b:    89 c7                              	mov edi, eax
0x20e7d:    83 c7 04                           	add edi, 4
0x20e80:    e9 6d ff ff ff                     	jmp 0x20df2
; function: function_20e85 at 0x20e85 -- 0x20e86
; dynamically linked function: __stack_chk_fail at 0x20e86 -- 0x20e87
; data inside code section at 0x20e87 -- 0x20e8a
0x20e87:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISL_ERKSL_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISL_ERKSL_ at 0x20e90 -- 0x20ef0
0x20e90:    83 ec 5c                           	sub esp, 0x5c
0x20e93:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x20e97:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x20e9b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x20e9f:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x20ea3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x20ea9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x20ead:    31 c0                              	xor eax, eax
0x20eaf:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x20eb3:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x20eb7:    8d 47 04                           	lea eax, [edi + 4]
0x20eba:    39 c3                              	cmp ebx, eax
0x20ebc:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x20ec0:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x20ec4:    0f 84 06 01 00 00                  	je 0x20fd0 <function_20fd0>
0x20eca:    8d 43 10                           	lea eax, [ebx + 0x10]
0x20ecd:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x20ed1:    89 c2                              	mov edx, eax
0x20ed3:    89 e8                              	mov eax, ebp
0x20ed5:    e8 96 03 00 00                     	call 0x21270
0x20eda:    84 c0                              	test al, al
0x20edc:    0f 84 7e 00 00 00                  	je 0x20f60 <function_20f60>
0x20ee2:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x20ee5:    39 d8                              	cmp eax, ebx
0x20ee7:    0f 84 5b 01 00 00                  	je 0x21048 <function_21048>
0x20eed:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x20ef0 -- 0x20ef1
0x20ef0:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x20ef1 -- 0x20ef2
; data inside code section at 0x20ef2 -- 0x20ef6
0x20ef2:    ff ff ff 89                                        |....            |
; function: function_20ef6 at 0x20ef6 -- 0x20efd
0x20ef6:    ea 89 c1 8d 40 10 89               	ljmp 0x8910:0x408dc189 <function_408dc189>
; data inside code section at 0x20efd -- 0x20f10
0x20efd:    4c 24 20 e8 6b 03 00 00  8b 4c 24 20 84 c0 0f 84   |L$ .k....L$ ....|
0x20f0d:    c6 00 00                                           |...             |
; function: function_20f10 at 0x20f10 -- 0x20f37
0x20f10:    00 8b 41 0c 89 6c                  	add byte ptr [ebx + 0x6c890c41], cl
0x20f16:    24 10                              	and al, 0x10
0x20f18:    85 c0                              	test eax, eax
0x20f1a:    0f 84 08 01 00 00                  	je 0x21028 <function_21028>
0x20f20:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x20f24:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x20f28:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x20f2c:    89 34 24                           	mov dword ptr [esp], esi
0x20f2f:    e8 0c 0c 02 00                     	call 0x41b40 <unknown_41b40>
0x20f34:    83 ec 04                           	sub esp, 4
; function: function_20f37 at 0x20f37 -- 0x20f60
0x20f37:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x20f3b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x20f42:    89 f0                              	mov eax, esi
0x20f44:    0f 85 2e 01 00 00                  	jne 0x21078 <function_21078>
0x20f4a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x20f4e:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x20f52:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x20f56:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x20f5a:    83 c4 5c                           	add esp, 0x5c
0x20f5d:    c2 04 00                           	ret 4
; function: function_20f60 at 0x20f60 -- 0x20f81
0x20f60:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x20f64:    89 ea                              	mov edx, ebp
0x20f66:    e8 05 03 00 00                     	call 0x21270
0x20f6b:    84 c0                              	test al, al
0x20f6d:    0f 84 8d 00 00 00                  	je 0x21000 <function_21000>
0x20f73:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x20f76:    39 d8                              	cmp eax, ebx
0x20f78:    0f 84 f0 00 00 00                  	je 0x2106e <function_2106e>
0x20f7e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x20f81 -- 0x20f82
0x20f81:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x20f82 -- 0x20f83
; data inside code section at 0x20f83 -- 0x20f85
0x20f83:    ff ff                                              |..              |
; function: function_20f85 at 0x20f85 -- 0x20fc9
0x20f85:    ff 89 c1 8d 50 10                  	dec dword ptr [ecx + 0x10508dc1]
0x20f8b:    89 e8                              	mov eax, ebp
0x20f8d:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x20f91:    e8 da 02 00 00                     	call 0x21270
0x20f96:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x20f9a:    84 c0                              	test al, al
0x20f9c:    74 39                              	je 0x20fd7
0x20f9e:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x20fa1:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x20fa5:    85 c0                              	test eax, eax
0x20fa7:    0f 84 bb 00 00 00                  	je 0x21068 <function_21068>
0x20fad:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x20fb1:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x20fb5:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x20fb9:    89 34 24                           	mov dword ptr [esp], esi
0x20fbc:    e8 7f 0b 02 00                     	call 0x41b40 <unknown_41b40>
0x20fc1:    83 ec 04                           	sub esp, 4
0x20fc4:    e9 6e ff ff ff                     	jmp 0x20f37 <function_20f37>
; data inside code section at 0x20fc9 -- 0x20fd0
0x20fc9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_20fd0 at 0x20fd0 -- 0x20ff9
0x20fd0:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x20fd3:    85 c0                              	test eax, eax
0x20fd5:    75 31                              	jne 0x21008 <function_21008>
0x20fd7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x20fdb:    89 04 24                           	mov dword ptr [esp], eax
0x20fde:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x20fe2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x20fe6:    e8 45 0c 02 00                     	call 0x41c30 <unknown_41c30>
0x20feb:    83 ec 04                           	sub esp, 4
0x20fee:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x20ff2:    89 06                              	mov dword ptr [esi], eax
0x20ff4:    e9 3e ff ff ff                     	jmp 0x20f37 <function_20f37>
; data inside code section at 0x20ff9 -- 0x21000
0x20ff9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_21000 at 0x21000 -- 0x21007
0x21000:    89 1e                              	mov dword ptr [esi], ebx
0x21002:    e9 30 ff ff ff                     	jmp 0x20f37 <function_20f37>
; data inside code section at 0x21007 -- 0x21008
0x21007:    90                                                 |.               |
; function: function_21008 at 0x21008 -- 0x21023
0x21008:    8b 5f 10                           	mov ebx, dword ptr [edi + 0x10]
0x2100b:    89 ea                              	mov edx, ebp
0x2100d:    8d 43 10                           	lea eax, [ebx + 0x10]
0x21010:    e8 5b 02 00 00                     	call 0x21270
0x21015:    84 c0                              	test al, al
0x21017:    74 be                              	je 0x20fd7
0x21019:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x2101d:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x21021:    eb 09                              	jmp 0x2102c <function_2102c>
; data inside code section at 0x21023 -- 0x21028
0x21023:    90 8d 74 26 00                                     |..t&.           |
; function: function_21028 at 0x21028 -- 0x2102c
0x21028:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
; function: function_2102c at 0x2102c -- 0x21048
0x2102c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x21034:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21038:    89 34 24                           	mov dword ptr [esp], esi
0x2103b:    e8 00 0b 02 00                     	call 0x41b40 <unknown_41b40>
0x21040:    83 ec 04                           	sub esp, 4
0x21043:    e9 ef fe ff ff                     	jmp 0x20f37 <function_20f37>
; function: function_21048 at 0x21048 -- 0x21068
0x21048:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x2104c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21050:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x21054:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21058:    89 34 24                           	mov dword ptr [esp], esi
0x2105b:    e8 e0 0a 02 00                     	call 0x41b40 <unknown_41b40>
0x21060:    83 ec 04                           	sub esp, 4
0x21063:    e9 cf fe ff ff                     	jmp 0x20f37 <function_20f37>
; function: function_21068 at 0x21068 -- 0x2106e
0x21068:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x2106c:    eb be                              	jmp 0x2102c <function_2102c>
; function: function_2106e at 0x2106e -- 0x21078
0x2106e:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x21072:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21076:    eb b4                              	jmp 0x2102c <function_2102c>
; function: function_21078 at 0x21078 -- 0x21079
; dynamically linked function: __stack_chk_fail at 0x21079 -- 0x2107a
; data inside code section at 0x2107a -- 0x2107d
0x2107a:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEj
; function: _ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEj at 0x21080 -- 0x2108e
0x21080:    55                                 	push ebp
0x21081:    57                                 	push edi
0x21082:    56                                 	push esi
0x21083:    53                                 	push ebx
0x21084:    83 ec 7c                           	sub esp, 0x7c
0x21087:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
; data inside code section at 0x2108e -- 0x21090
0x2108e:    8b 8c                                              |..              |
; function: function_21090 at 0x21090 -- 0x21230
0x21090:    24 9c                              	and al, 0x9c
0x21092:    00 00                              	add byte ptr [eax], al
0x21094:    00 8b 94 24 98 00                  	add byte ptr [ebx + 0x982494], cl
0x2109a:    00 00                              	add byte ptr [eax], al
0x2109c:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x210a0:    0f b6 84 24 94 00 00 00            	movzx eax, byte ptr [esp + 0x94]
0x210a8:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x210ac:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x210b3:    89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0x210b7:    31 c9                              	xor ecx, ecx
0x210b9:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x210bd:    88 44 24 3e                        	mov byte ptr [esp + 0x3e], al
0x210c1:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x210c4:    85 c0                              	test eax, eax
0x210c6:    0f 84 ce 03 00 00                  	je 0x2149a <function_2149a>
0x210cc:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x210cf:    83 f8 01                           	cmp eax, 1
0x210d2:    0f 85 c2 03 00 00                  	jne 0x2149a <function_2149a>
0x210d8:    8b 32                              	mov esi, dword ptr [edx]
0x210da:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x210de:    8b 02                              	mov eax, dword ptr [edx]
0x210e0:    85 c0                              	test eax, eax
0x210e2:    0f 84 9e 03 00 00                  	je 0x21486 <function_21486>
0x210e8:    8b 00                              	mov eax, dword ptr [eax]
0x210ea:    85 c0                              	test eax, eax
0x210ec:    0f 84 9e 03 00 00                  	je 0x21490 <function_21490>
0x210f2:    39 c6                              	cmp esi, eax
0x210f4:    0f 84 3e 01 00 00                  	je 0x21238 <function_21238>
0x210fa:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x210fe:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x21101:    85 c0                              	test eax, eax
0x21103:    0f 94 44 24 3f                     	sete byte ptr [esp + 0x3f]
0x21108:    85 ed                              	test ebp, ebp
0x2110a:    0f 84 01 01 00 00                  	je 0x21211 <function_21090+0x181>
0x21110:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x21118:    8b 45 00                           	mov eax, dword ptr [ebp]
0x2111b:    89 2c 24                           	mov dword ptr [esp], ebp
0x2111e:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x21121:    80 7c 24 3e 00                     	cmp byte ptr [esp + 0x3e], 0
0x21126:    0f 84 86 00 00 00                  	je 0x211b2 <function_21090+0x122>
0x2112c:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x2112f:    85 c9                              	test ecx, ecx
0x21131:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x21135:    0f 84 50 03 00 00                  	je 0x2148b <function_2148b>
0x2113b:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2113f:    8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0x21143:    8b 58 10                           	mov ebx, dword ptr [eax + 0x10]
0x21146:    83 c7 10                           	add edi, 0x10
0x21149:    39 58 14                           	cmp dword ptr [eax + 0x14], ebx
0x2114c:    75 12                              	jne 0x21160 <function_21090+0xd0>
0x2114e:    e9 f7 02 00 00                     	jmp 0x2144a <function_2144a>
; data inside code section at 0x21153 -- 0x21158
0x21153:    90 8d 74 26 00                                     |..t&.           |
0x21158:    83 c3 0c                           	add ebx, 0xc
0x2115b:    3b 5f 04                           	cmp ebx, dword ptr [edi + 4]
0x2115e:    74 52                              	je 0x211b2 <function_21090+0x122>
0x21160:    8b 03                              	mov eax, dword ptr [ebx]
0x21162:    8d 54 24 5b                        	lea edx, [esp + 0x5b]
0x21166:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x2116a:    8d 4b 04                           	lea ecx, [ebx + 4]
0x2116d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x21171:    8d 4c 24 54                        	lea ecx, [esp + 0x54]
0x21175:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2117d:    89 c2                              	mov edx, eax
0x2117f:    c1 fa 1f                           	sar edx, 0x1f
0x21182:    31 c2                              	xor edx, eax
0x21184:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x2118c:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x21191:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x21196:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x2119a:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x2119e:    89 04 24                           	mov dword ptr [esp], eax
0x211a1:    e8 ba bc 01 00                     	call 0x3ce60 <unknown_3ce60>
0x211a6:    84 c0                              	test al, al
0x211a8:    74 ae                              	je 0x21158 <function_21090+0xc8>
0x211aa:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x211ae:    c6 40 04 00                        	mov byte ptr [eax + 4], 0
0x211b2:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x211b5:    85 c0                              	test eax, eax
0x211b7:    0f 84 ce 02 00 00                  	je 0x2148b <function_2148b>
0x211bd:    0f b6 58 04                        	movzx ebx, byte ptr [eax + 4]
0x211c1:    8b 45 00                           	mov eax, dword ptr [ebp]
0x211c4:    89 2c 24                           	mov dword ptr [esp], ebp
0x211c7:    ff 50 10                           	call dword ptr [eax + 0x10]
0x211ca:    84 db                              	test bl, bl
0x211cc:    0f 84 86 00 00 00                  	je 0x21258 <function_21258>
0x211d2:    8b 36                              	mov esi, dword ptr [esi]
0x211d4:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x211d8:    8b 02                              	mov eax, dword ptr [edx]
0x211da:    85 c0                              	test eax, eax
0x211dc:    0f 84 a4 02 00 00                  	je 0x21486 <function_21486>
0x211e2:    8b 00                              	mov eax, dword ptr [eax]
0x211e4:    85 c0                              	test eax, eax
0x211e6:    0f 84 a4 02 00 00                  	je 0x21490 <function_21490>
0x211ec:    39 f0                              	cmp eax, esi
0x211ee:    74 48                              	je 0x21238 <function_21238>
0x211f0:    83 44 24 24 01                     	add dword ptr [esp + 0x24], 1
0x211f5:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x211f9:    39 4c 24 38                        	cmp dword ptr [esp + 0x38], ecx
0x211fd:    77 07                              	ja 0x21206 <function_21090+0x176>
0x211ff:    80 7c 24 3f 00                     	cmp byte ptr [esp + 0x3f], 0
0x21204:    74 32                              	je 0x21238 <function_21238>
0x21206:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x21209:    85 ed                              	test ebp, ebp
0x2120b:    0f 85 07 ff ff ff                  	jne 0x21118 <function_21090+0x88>
0x21211:    c7 44 24 0c 60 84 02 00            	mov dword ptr [esp + 0xc], 0x28460 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>&]"
0x21219:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x21221:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x21229:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x21230 -- 0x21231
0x21230:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x21231 -- 0x21232
; data inside code section at 0x21232 -- 0x21238
0x21232:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_21238 at 0x21238 -- 0x21258
0x21238:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x2123c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21243:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x21247:    89 70 08                           	mov dword ptr [eax + 8], esi
0x2124a:    0f 85 45 02 00 00                  	jne 0x21495 <function_21495>
0x21250:    83 c4 7c                           	add esp, 0x7c
0x21253:    5b                                 	pop ebx
0x21254:    5e                                 	pop esi
0x21255:    5f                                 	pop edi
0x21256:    5d                                 	pop ebp
0x21257:    c3                                 	ret 
; function: function_21258 at 0x21258 -- 0x21319
0x21258:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x2125b:    85 c9                              	test ecx, ecx
0x2125d:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x21261:    0f 84 24 02 00 00                  	je 0x2148b <function_2148b>
0x21267:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x2126b:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x2126f:    8b 02                              	mov eax, dword ptr [edx]
0x21271:    83 c7 44                           	add edi, 0x44
0x21274:    85 c0                              	test eax, eax
0x21276:    0f 84 0a 02 00 00                  	je 0x21486 <function_21486>
0x2127c:    8b 00                              	mov eax, dword ptr [eax]
0x2127e:    85 c0                              	test eax, eax
0x21280:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x21284:    0f 84 06 02 00 00                  	je 0x21490 <function_21490>
0x2128a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2128e:    39 f1                              	cmp ecx, esi
0x21290:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x21294:    0f 84 5b 02 00 00                  	je 0x214f5 <function_214f5>
0x2129a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2129e:    8b 69 10                           	mov ebp, dword ptr [ecx + 0x10]
0x212a1:    85 ed                              	test ebp, ebp
0x212a3:    0f 84 15 02 00 00                  	je 0x214be <function_214be>
0x212a9:    83 c1 0c                           	add ecx, 0xc
0x212ac:    89 eb                              	mov ebx, ebp
0x212ae:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x212b2:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x212b6:    eb 0b                              	jmp 0x212c3 <function_21258+0x6b>
0x212b8:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x212bc:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x212bf:    85 db                              	test ebx, ebx
0x212c1:    74 15                              	je 0x212d8 <function_21258+0x80>
0x212c3:    8d 43 10                           	lea eax, [ebx + 0x10]
0x212c6:    89 fa                              	mov edx, edi
0x212c8:    e8 93 01 00 00                     	call 0x21460 <function_21460>
0x212cd:    84 c0                              	test al, al
0x212cf:    74 e7                              	je 0x212b8 <function_21258+0x60>
0x212d1:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x212d4:    85 db                              	test ebx, ebx
0x212d6:    75 eb                              	jne 0x212c3 <function_21258+0x6b>
0x212d8:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x212dc:    39 4c 24 20                        	cmp dword ptr [esp + 0x20], ecx
0x212e0:    0f 84 d8 01 00 00                  	je 0x214be <function_214be>
0x212e6:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x212ea:    89 fa                              	mov edx, edi
0x212ec:    83 c3 10                           	add ebx, 0x10
0x212ef:    89 d8                              	mov eax, ebx
0x212f1:    e8 6a 01 00 00                     	call 0x21460 <function_21460>
0x212f6:    84 c0                              	test al, al
0x212f8:    74 26                              	je 0x21320 <function_21320>
0x212fa:    c7 44 24 0c 80 90 02 00            	mov dword ptr [esp + 0xc], 0x29080 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x21302:    c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0x2130a:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x21312:    c7 04 24 00 de 00 00               	mov dword ptr [esp], 0xde00 ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0x21319 -- 0x2131a
0x21319:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2131a -- 0x2131b
; data inside code section at 0x2131b -- 0x2131d
0x2131b:    ff ff                                              |..              |
; function: function_2131d at 0x2131d -- 0x21320
0x2131d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_21320 at 0x21320 -- 0x21350
0x21320:    89 da                              	mov edx, ebx
0x21322:    89 f8                              	mov eax, edi
0x21324:    e8 37 01 00 00                     	call 0x21460 <function_21460>
0x21329:    84 c0                              	test al, al
0x2132b:    75 cd                              	jne 0x212fa
0x2132d:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x21331:    39 71 1c                           	cmp dword ptr [ecx + 0x1c], esi
0x21334:    74 24                              	je 0x2135a <function_2135a>
0x21336:    8b 1e                              	mov ebx, dword ptr [esi]
0x21338:    89 34 24                           	mov dword ptr [esp], esi
0x2133b:    e8 fc ff ff ff                     	call 0x2133c
0x21340:    8d 46 0c                           	lea eax, [esi + 0xc]
0x21343:    89 04 24                           	mov dword ptr [esp], eax
0x21346:    e8 75 02 01 00                     	call 0x315c0 <function_315c0>
0x2134b:    89 34 24                           	mov dword ptr [esp], esi
0x2134e:    89 de                              	mov esi, ebx
; data inside code section at 0x21350 -- 0x21351
0x21350:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x21351 -- 0x21352
; data inside code section at 0x21352 -- 0x21355
0x21352:    ff ff ff                                           |...             |
; function: function_21355 at 0x21355 -- 0x2135a
0x21355:    e9 7a fe ff ff                     	jmp 0x211d4
; function: function_2135a at 0x2135a -- 0x2144a
0x2135a:    8b 0e                              	mov ecx, dword ptr [esi]
0x2135c:    89 eb                              	mov ebx, ebp
0x2135e:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x21362:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x21366:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x2136a:    eb 0f                              	jmp 0x2137b <function_2135a+0x21>
; data inside code section at 0x2136c -- 0x21370
0x2136c:    8d 74 26 00                                        |.t&.            |
0x21370:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x21374:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x21377:    85 db                              	test ebx, ebx
0x21379:    74 15                              	je 0x21390 <function_2135a+0x36>
0x2137b:    8d 53 10                           	lea edx, [ebx + 0x10]
0x2137e:    89 f8                              	mov eax, edi
0x21380:    e8 db 00 00 00                     	call 0x21460 <function_21460>
0x21385:    84 c0                              	test al, al
0x21387:    75 e7                              	jne 0x21370 <function_2135a+0x16>
0x21389:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x2138c:    85 db                              	test ebx, ebx
0x2138e:    75 eb                              	jne 0x2137b <function_2135a+0x21>
0x21390:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x21394:    39 4c 24 30                        	cmp dword ptr [esp + 0x30], ecx
0x21398:    74 07                              	je 0x213a1 <function_2135a+0x47>
0x2139a:    8b 49 1c                           	mov ecx, dword ptr [ecx + 0x1c]
0x2139d:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x213a1:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x213a5:    39 4c 24 48                        	cmp dword ptr [esp + 0x48], ecx
0x213a9:    0f 84 a4 00 00 00                  	je 0x21453 <function_21453>
0x213af:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x213b3:    eb 0c                              	jmp 0x213c1 <function_2135a+0x67>
; data inside code section at 0x213b5 -- 0x213b8
0x213b5:    8d 76 00                                           |.v.             |
0x213b8:    89 eb                              	mov ebx, ebp
0x213ba:    8b 6d 08                           	mov ebp, dword ptr [ebp + 8]
0x213bd:    85 ed                              	test ebp, ebp
0x213bf:    74 15                              	je 0x213d6 <function_2135a+0x7c>
0x213c1:    8d 45 10                           	lea eax, [ebp + 0x10]
0x213c4:    89 fa                              	mov edx, edi
0x213c6:    e8 95 00 00 00                     	call 0x21460 <function_21460>
0x213cb:    84 c0                              	test al, al
0x213cd:    74 e9                              	je 0x213b8 <function_2135a+0x5e>
0x213cf:    8b 6d 0c                           	mov ebp, dword ptr [ebp + 0xc]
0x213d2:    85 ed                              	test ebp, ebp
0x213d4:    75 eb                              	jne 0x213c1 <function_2135a+0x67>
0x213d6:    3b 5c 24 30                        	cmp ebx, dword ptr [esp + 0x30]
0x213da:    74 0e                              	je 0x213ea <function_2135a+0x90>
0x213dc:    8d 53 10                           	lea edx, [ebx + 0x10]
0x213df:    89 f8                              	mov eax, edi
0x213e1:    e8 7a 00 00 00                     	call 0x21460 <function_21460>
0x213e6:    84 c0                              	test al, al
0x213e8:    74 54                              	je 0x2143e <function_2135a+0xe4>
0x213ea:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x213ee:    c6 44 24 60 00                     	mov byte ptr [esp + 0x60], 0
0x213f3:    8b 41 44                           	mov eax, dword ptr [ecx + 0x44]
0x213f6:    80 79 48 00                        	cmp byte ptr [ecx + 0x48], 0
0x213fa:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x213fe:    74 0c                              	je 0x2140c <function_2135a+0xb2>
0x21400:    8b 41 4c                           	mov eax, dword ptr [ecx + 0x4c]
0x21403:    c6 44 24 60 01                     	mov byte ptr [esp + 0x60], 1
0x21408:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x2140c:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x21410:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21414:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x21418:    8d 54 24 4c                        	lea edx, [esp + 0x4c]
0x2141c:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x21420:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x21428:    89 14 24                           	mov dword ptr [esp], edx
0x2142b:    83 c0 08                           	add eax, 8
0x2142e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x21432:    e8 d9 0a 02 00                     	call 0x41f10 <unknown_41f10>
0x21437:    83 ec 04                           	sub esp, 4
0x2143a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2143e:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x21442:    89 4b 1c                           	mov dword ptr [ebx + 0x1c], ecx
0x21445:    e9 ec fe ff ff                     	jmp 0x21336
; function: function_2144a at 0x2144a -- 0x21453
0x2144a:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2144e:    e9 6a fd ff ff                     	jmp 0x211bd
; function: function_21453 at 0x21453 -- 0x2145f
0x21453:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x21457:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x2145b:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
; data inside code section at 0x2145f -- 0x21460
0x2145f:    89                                                 |.               |
; function: function_21460 at 0x21460 -- 0x21462
0x21460:    0c 24                              	or al, 0x24
; data inside code section at 0x21462 -- 0x21463
0x21462:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x21463 -- 0x21464
; data inside code section at 0x21464 -- 0x21475
0x21464:    ff ff ff 80 78 14 00 74  04 c6 40 14 00 89 04 24   |....x..t..@....$|
0x21474:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x21475 -- 0x21476
; data inside code section at 0x21476 -- 0x21479
0x21476:    ff ff ff                                           |...             |
; function: function_21479 at 0x21479 -- 0x21486
0x21479:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2147d:    83 69 1c 01                        	sub dword ptr [ecx + 0x1c], 1
0x21481:    e9 b0 fe ff ff                     	jmp 0x21336
; function: function_21486 at 0x21486 -- 0x2148b
0x21486:    e8 3b de 00 00                     	call 0x2f2c6 <function_2f2c6>
; function: function_2148b at 0x2148b -- 0x21490
0x2148b:    e8 3e e0 00 00                     	call 0x2f4ce <function_2f4ce>
; function: function_21490 at 0x21490 -- 0x21495
0x21490:    e8 69 df 00 00                     	call 0x2f3fe <function_2f3fe>
; function: function_21495 at 0x21495 -- 0x21496
; dynamically linked function: __stack_chk_fail at 0x21496 -- 0x21497
; data inside code section at 0x21497 -- 0x2149a
0x21497:    ff ff ff                                           |...             |
; function: function_2149a at 0x2149a -- 0x214b9
0x2149a:    c7 44 24 0c 80 86 02 00            	mov dword ptr [esp + 0xc], 0x28680 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = int, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(int)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, int)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >]"
0x214a2:    c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0x214aa:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x214b2:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x214b9 -- 0x214ba
0x214b9:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x214ba -- 0x214bb
; data inside code section at 0x214bb -- 0x214be
0x214bb:    ff ff ff                                           |...             |
; function: function_214be at 0x214be -- 0x214dd
0x214be:    c7 44 24 0c 80 90 02 00            	mov dword ptr [esp + 0xc], 0x29080 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x214c6:    c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0x214ce:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x214d6:    c7 04 24 b9 a3 00 00               	mov dword ptr [esp], 0xa3b9 ; "map_it != _group_map.end()"
; data inside code section at 0x214dd -- 0x214de
0x214dd:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x214de -- 0x214df
; data inside code section at 0x214df -- 0x214e3
0x214df:    ff ff ff 89                                        |....            |
; function: function_214e3 at 0x214e3 -- 0x214e4
0x214e3:    c3                                 	ret 
; data inside code section at 0x214e4 -- 0x214f1
0x214e4:    8b 45 00 89 2c 24 ff 50  10 89 1c 24 e8            |.E..,$.P...$.   |
; dynamically linked function: _Unwind_Resume at 0x214f1 -- 0x214f2
; data inside code section at 0x214f2 -- 0x214f5
0x214f2:    ff ff ff                                           |...             |
; function: function_214f5 at 0x214f5 -- 0x21514
0x214f5:    c7 44 24 0c 80 90 02 00            	mov dword ptr [esp + 0xc], 0x29080 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x214fd:    c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0x21505:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x2150d:    c7 04 24 a7 a3 00 00               	mov dword ptr [esp], 0xa3a7 ; "it != _list.end()"
; data inside code section at 0x21514 -- 0x21515
0x21514:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x21515 -- 0x21516
; data inside code section at 0x21516 -- 0x21519
0x21516:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IviNS1_8functionIFviEEEEENS2_5mutexEEEEEEESt10_Select1stISL_ENS3_14group_key_lessIiSt4lessIiEEESaISL_EE7_M_copyEPKSt13_Rb_tree_nodeISL_EPSV_ at 0x21520 -- 0x21546
0x21520:    55                                 	push ebp
0x21521:    57                                 	push edi
0x21522:    56                                 	push esi
0x21523:    53                                 	push ebx
0x21524:    83 ec 3c                           	sub esp, 0x3c
0x21527:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2152d:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x21531:    31 c0                              	xor eax, eax
0x21533:    8b 6c 24 50                        	mov ebp, dword ptr [esp + 0x50]
0x21537:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x2153b:    8b 74 24 58                        	mov esi, dword ptr [esp + 0x58]
0x2153f:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x21546 -- 0x21547
0x21546:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x21547 -- 0x21548
; data inside code section at 0x21548 -- 0x2154a
0x21548:    ff ff                                              |..              |
; function: function_2154a at 0x2154a -- 0x215c9
0x2154a:    ff 83 f8 f0 89 44                  	inc dword ptr [ebx + 0x4489f0f8]
0x21550:    24 1c                              	and al, 0x1c
0x21552:    74 28                              	je 0x2157c <function_2154a+0x32>
0x21554:    8b 43 10                           	mov eax, dword ptr [ebx + 0x10]
0x21557:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x2155b:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x2155e:    c6 42 14 00                        	mov byte ptr [edx + 0x14], 0
0x21562:    80 7b 14 00                        	cmp byte ptr [ebx + 0x14], 0
0x21566:    74 0a                              	je 0x21572 <function_2154a+0x28>
0x21568:    8b 43 18                           	mov eax, dword ptr [ebx + 0x18]
0x2156b:    c6 42 14 01                        	mov byte ptr [edx + 0x14], 1
0x2156f:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x21572:    8b 43 1c                           	mov eax, dword ptr [ebx + 0x1c]
0x21575:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x21579:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x2157c:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x21580:    8b 03                              	mov eax, dword ptr [ebx]
0x21582:    c7 42 0c 00 00 00 00               	mov dword ptr [edx + 0xc], 0
0x21589:    89 02                              	mov dword ptr [edx], eax
0x2158b:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x2158e:    c7 42 08 00 00 00 00               	mov dword ptr [edx + 8], 0
0x21595:    89 72 04                           	mov dword ptr [edx + 4], esi
0x21598:    85 c0                              	test eax, eax
0x2159a:    74 17                              	je 0x215b3 <function_2154a+0x69>
0x2159c:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x215a0:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x215a4:    89 2c 24                           	mov dword ptr [esp], ebp
0x215a7:    e8 94 14 02 00                     	call 0x42a40 <unknown_42a40>
0x215ac:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x215b0:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x215b3:    8b 73 08                           	mov esi, dword ptr [ebx + 8]
0x215b6:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x215ba:    85 f6                              	test esi, esi
0x215bc:    75 04                              	jne 0x215c2 <function_2154a+0x78>
0x215be:    eb 6e                              	jmp 0x2162e <function_2162e>
0x215c0:    89 df                              	mov edi, ebx
0x215c2:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x215c9 -- 0x215ca
0x215c9:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x215ca -- 0x215cb
; data inside code section at 0x215cb -- 0x215d2
0x215cb:    ff ff ff 83 f8 f0 89                               |.......         |
; function: function_215d2 at 0x215d2 -- 0x215d3
0x215d2:    c3                                 	ret 
; data inside code section at 0x215d3 -- 0x2162e
0x215d3:    74 20 8b 46 10 c6 43 14  00 89 43 10 80 7e 14 00   |t .F..C...C..~..|
0x215e3:    74 0a 8b 46 18 c6 43 14  01 89 43 18 8b 46 1c 89   |t..F..C...C..F..|
0x215f3:    43 1c 8b 06 c7 43 0c 00  00 00 00 c7 43 08 00 00   |C....C......C...|
0x21603:    00 00 89 7b 04 89 03 8b  46 0c 89 5f 08 85 c0 74   |...{....F.._...t|
0x21613:    13 89 5c 24 08 89 44 24  04 89 2c 24 e8 1c 14 02   |..\$..D$..,$....|
0x21623:    00 89 43 0c 8b 76 08 85  f6 75 92                  |..C..v...u.     |
; function: function_2162e at 0x2162e -- 0x21664
0x2162e:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x21632:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21639:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2163d:    75 08                              	jne 0x21647 <function_2162e+0x19>
0x2163f:    83 c4 3c                           	add esp, 0x3c
0x21642:    5b                                 	pop ebx
0x21643:    5e                                 	pop esi
0x21644:    5f                                 	pop edi
0x21645:    5d                                 	pop ebp
0x21646:    c3                                 	ret 
0x21647:    e8 fc ff ff ff                     	call 0x21648
0x2164c:    89 04 24                           	mov dword ptr [esp], eax
0x2164f:    e8 fc ff ff ff                     	call 0x21650
0x21654:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x21658:    89 2c 24                           	mov dword ptr [esp], ebp
0x2165b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2165f:    e8 6c fa 01 00                     	call 0x410d0 <unknown_410d0>
; data inside code section at 0x21664 -- 0x21665
0x21664:    e8                                                 |.               |
; dynamically linked function: __cxa_rethrow at 0x21665 -- 0x21666
; data inside code section at 0x21666 -- 0x2166a
0x21666:    ff ff ff 89                                        |....            |
; function: function_2166a at 0x2166a -- 0x2166b
0x2166a:    c3                                 	ret 
; data inside code section at 0x2166b -- 0x21678
0x2166b:    e8 fc ff ff ff 89 1c 24  e8 fc ff ff ff            |.......$.....   |
; section: .text._ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_stateC2ERKSH_RKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE
; function: _ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE16invocation_stateC1ERKSH_RKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE at 0x21680 -- 0x216b2
0x21680:    55                                 	push ebp
0x21681:    57                                 	push edi
0x21682:    56                                 	push esi
0x21683:    53                                 	push ebx
0x21684:    83 ec 4c                           	sub esp, 0x4c
0x21687:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x2168b:    8b 54 24 64                        	mov edx, dword ptr [esp + 0x64]
0x2168f:    8b 4c 24 68                        	mov ecx, dword ptr [esp + 0x68]
0x21693:    c7 04 24 24 00 00 00               	mov dword ptr [esp], 0x24
0x2169a:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x2169e:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x216a2:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x216a8:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x216ac:    31 c0                              	xor eax, eax
0x216ae:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
; data inside code section at 0x216b2 -- 0x216b3
0x216b2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x216b3 -- 0x216b4
; data inside code section at 0x216b4 -- 0x216fd
0x216b4:    ff ff ff 8b 54 24 1c 89  00 89 40 04 8b 1a 89 44   |....T$....@....D|
0x216c4:    24 24 39 da 74 3d 89 c6  89 d7 66 90 c7 04 24 10   |$$9.t=....f...$.|
0x216d4:    00 00 00 e8 fc ff ff ff  83 f8 f8 74 14 8b 53 08   |...........t..S.|
0x216e4:    89 50 08 8b 53 0c 85 d2  89 50 0c 74 04 f0 ff 42   |.P..S....P.t...B|
0x216f4:    04 89 74 24 04 89 04 24  e8                        |..t$...$.       |
; dynamically linked function: _ZNSt8__detail15_List_node_base7_M_hookEPS0_ at 0x216fd -- 0x216fe
; data inside code section at 0x216fe -- 0x21700
0x216fe:    ff ff                                              |..              |
; function: function_21700 at 0x21700 -- 0x217cd
0x21700:    ff 8b 1b 39 df 75                  	dec dword ptr [ebx + 0x75df391b]
0x21706:    c9                                 	leave 
0x21707:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2170b:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x2170f:    c7 40 0c 00 00 00 00               	mov dword ptr [eax + 0xc], 0
0x21716:    89 c2                              	mov edx, eax
0x21718:    c7 40 10 00 00 00 00               	mov dword ptr [eax + 0x10], 0
0x2171f:    83 c2 08                           	add edx, 8
0x21722:    c7 40 1c 00 00 00 00               	mov dword ptr [eax + 0x1c], 0
0x21729:    83 c0 0c                           	add eax, 0xc
0x2172c:    89 41 14                           	mov dword ptr [ecx + 0x14], eax
0x2172f:    89 c5                              	mov ebp, eax
0x21731:    89 41 18                           	mov dword ptr [ecx + 0x18], eax
0x21734:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x21738:    89 44 24 20                        	mov dword ptr [esp + 0x20], eax
0x2173c:    8b 41 10                           	mov eax, dword ptr [ecx + 0x10]
0x2173f:    85 c0                              	test eax, eax
0x21741:    74 4f                              	je 0x21792 <function_21700+0x92>
0x21743:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x21747:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2174b:    89 14 24                           	mov dword ptr [esp], edx
0x2174e:    e8 4d 14 02 00                     	call 0x42ba0 <unknown_42ba0>
0x21753:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x21757:    89 c5                              	mov ebp, eax
0x21759:    89 42 10                           	mov dword ptr [edx + 0x10], eax
0x2175c:    eb 04                              	jmp 0x21762 <function_21700+0x62>
; data inside code section at 0x2175e -- 0x21760
0x2175e:    66 90                                              |f.              |
0x21760:    89 d5                              	mov ebp, edx
0x21762:    8b 55 08                           	mov edx, dword ptr [ebp + 8]
0x21765:    85 d2                              	test edx, edx
0x21767:    75 f7                              	jne 0x21760 <function_21700+0x60>
0x21769:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x2176d:    89 69 14                           	mov dword ptr [ecx + 0x14], ebp
0x21770:    eb 08                              	jmp 0x2177a <function_21700+0x7a>
; data inside code section at 0x21772 -- 0x21778
0x21772:    8d b6 00 00 00 00                                  |......          |
0x21778:    89 d0                              	mov eax, edx
0x2177a:    8b 50 0c                           	mov edx, dword ptr [eax + 0xc]
0x2177d:    85 d2                              	test edx, edx
0x2177f:    75 f7                              	jne 0x21778 <function_21700+0x78>
0x21781:    8b 54 24 24                        	mov edx, dword ptr [esp + 0x24]
0x21785:    8b 4c 24 1c                        	mov ecx, dword ptr [esp + 0x1c]
0x21789:    89 42 18                           	mov dword ptr [edx + 0x18], eax
0x2178c:    8b 41 1c                           	mov eax, dword ptr [ecx + 0x1c]
0x2178f:    89 42 1c                           	mov dword ptr [edx + 0x1c], eax
0x21792:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x21796:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2179a:    8b 7a 14                           	mov edi, dword ptr [edx + 0x14]
0x2179d:    83 c2 0c                           	add edx, 0xc
0x217a0:    8b 30                              	mov esi, dword ptr [eax]
0x217a2:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x217a6:    39 d7                              	cmp edi, edx
0x217a8:    74 56                              	je 0x21800 <function_21800>
0x217aa:    8d b6 00 00 00 00                  	lea esi, [esi]
0x217b0:    39 6c 24 20                        	cmp dword ptr [esp + 0x20], ebp
0x217b4:    0f 84 f2 00 00 00                  	je 0x218ac <function_218ac>
0x217ba:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x217be:    89 75 1c                           	mov dword ptr [ebp + 0x1c], esi
0x217c1:    8b 5c 24 1c                        	mov ebx, dword ptr [esp + 0x1c]
0x217c5:    74 03                              	je 0x217ca <function_21700+0xca>
0x217c7:    8b 5f 1c                           	mov ebx, dword ptr [edi + 0x1c]
0x217ca:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x217cd -- 0x217ce
0x217cd:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x217ce -- 0x217cf
; data inside code section at 0x217cf -- 0x217d2
0x217cf:    ff ff ff                                           |...             |
; function: function_217d2 at 0x217d2 -- 0x21800
0x217d2:    89 c7                              	mov edi, eax
0x217d4:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x217d8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x217dc:    74 0e                              	je 0x217ec <function_217d2+0x1a>
0x217de:    8b 47 1c                           	mov eax, dword ptr [edi + 0x1c]
0x217e1:    eb 09                              	jmp 0x217ec <function_217d2+0x1a>
; data inside code section at 0x217e3 -- 0x217e8
0x217e3:    90 8d 74 26 00                                     |..t&.           |
0x217e8:    8b 1b                              	mov ebx, dword ptr [ebx]
0x217ea:    8b 36                              	mov esi, dword ptr [esi]
0x217ec:    39 c3                              	cmp ebx, eax
0x217ee:    75 f8                              	jne 0x217e8 <function_217d2+0x16>
0x217f0:    89 2c 24                           	mov dword ptr [esp], ebp
0x217f3:    e8 fc ff ff ff                     	call 0x217f4
0x217f8:    3b 7c 24 18                        	cmp edi, dword ptr [esp + 0x18]
0x217fc:    89 c5                              	mov ebp, eax
0x217fe:    75 b0                              	jne 0x217b0
; function: function_21800 at 0x21800 -- 0x21818
0x21800:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x21804:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x21808:    c7 42 04 00 00 00 00               	mov dword ptr [edx + 4], 0
0x2180f:    89 02                              	mov dword ptr [edx], eax
0x21811:    c7 04 24 10 00 00 00               	mov dword ptr [esp], 0x10
; data inside code section at 0x21818 -- 0x21819
0x21818:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x21819 -- 0x2181a
; data inside code section at 0x2181a -- 0x2181c
0x2181a:    ff ff                                              |..              |
; function: function_2181c at 0x2181c -- 0x2186c
0x2181c:    ff 8b 54 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbac]
0x21822:    4c                                 	dec esp
0x21823:    24 28                              	and al, 0x28
0x21825:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x2182c:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x21833:    89 50 0c                           	mov dword ptr [eax + 0xc], edx
0x21836:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x2183a:    c7 00 48 14 03 00                  	mov dword ptr [eax], 0x31448
0x21840:    89 41 04                           	mov dword ptr [ecx + 4], eax
0x21843:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x21846:    89 41 08                           	mov dword ptr [ecx + 8], eax
0x21849:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x2184c:    85 c0                              	test eax, eax
0x2184e:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x21851:    74 04                              	je 0x21857 <function_2181c+0x3b>
0x21853:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x21857:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2185b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21862:    75 2a                              	jne 0x2188e <function_2188e>
0x21864:    83 c4 4c                           	add esp, 0x4c
0x21867:    5b                                 	pop ebx
0x21868:    5e                                 	pop esi
0x21869:    5f                                 	pop edi
0x2186a:    5d                                 	pop ebp
0x2186b:    c3                                 	ret 
; data inside code section at 0x2186c -- 0x2186d
0x2186c:    89                                                 |.               |
; function: function_2186d at 0x2186d -- 0x2186e
0x2186d:    c3                                 	ret 
; data inside code section at 0x2186e -- 0x2187a
0x2186e:    8b 44 24 24 89 04 24 e8  66 e6 01 00               |.D$$..$.f...    |
; function: function_2187a at 0x2187a -- 0x21881
0x2187a:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x2187e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x21881 -- 0x21882
0x21881:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x21882 -- 0x21883
; data inside code section at 0x21883 -- 0x2188a
0x21883:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x2188a -- 0x2188b
; data inside code section at 0x2188b -- 0x2188e
0x2188b:    ff ff ff                                           |...             |
; function: function_2188e at 0x2188e -- 0x2188f
; dynamically linked function: __stack_chk_fail at 0x2188f -- 0x21890
; data inside code section at 0x21890 -- 0x21897
0x21890:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x21897 -- 0x21898
; data inside code section at 0x21898 -- 0x218ac
0x21898:    ff ff ff 8b 44 24 24 89  04 24 e8 89 fa 01 00 e8   |....D$$..$......|
0x218a8:    fc ff ff ff                                        |....            |
; function: function_218ac at 0x218ac -- 0x218e0
0x218ac:    c7 44 24 0c a0 b2 02 00            	mov dword ptr [esp + 0xc], 0x2b2a0 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >]"
0x218b4:    c7 44 24 08 50 00 00 00            	mov dword ptr [esp + 8], 0x50
0x218bc:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x218c4:    c7 04 24 a8 dd 00 00               	mov dword ptr [esp], 0xdda8 ; "this_map_it != _group_map.end()"
0x218cb:    e8 fc ff ff ff                     	call 0x218cc
0x218d0:    89 c3                              	mov ebx, eax
0x218d2:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x218d6:    89 04 24                           	mov dword ptr [esp], eax
0x218d9:    e8 02 e6 01 00                     	call 0x3fee0 <unknown_3fee0>
0x218de:    eb 9a                              	jmp 0x2187a <function_2187a>
; data inside code section at 0x218e0 -- 0x218e1
0x218e0:    89                                                 |.               |
; function: function_218e1 at 0x218e1 -- 0x218e2
0x218e1:    c3                                 	ret 
; data inside code section at 0x218e2 -- 0x218e3
0x218e2:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x218e3 -- 0x218e4
; data inside code section at 0x218e4 -- 0x218eb
0x218e4:    ff ff ff 89 1c 24 e8                               |.....$.         |
; dynamically linked function: _Unwind_Resume at 0x218eb -- 0x218ec
; data inside code section at 0x218ec -- 0x218ef
0x218ec:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE
; function: _ZNK5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS6_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviS9_EESF_EEEEEE at 0x218f0 -- 0x21921
0x218f0:    83 ec 4c                           	sub esp, 0x4c
0x218f3:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x218f7:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x218fb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21901:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x21905:    31 c0                              	xor eax, eax
0x21907:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x2190b:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x2190f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x21913:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x21916:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x2191a:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x2191e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x21921 -- 0x21922
0x21921:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x21922 -- 0x21923
; data inside code section at 0x21923 -- 0x2193e
0x21923:    ff ff ff 8b 33 85 f6 0f  84 0a 01 00 00 8b 06 85   |....3...........|
0x21933:    c0 0f 84 fb 00 00 00 39  c7 74 32                  |.......9.t2     |
; function: function_2193e at 0x2193e -- 0x2193f
; data inside code section at 0x2193f -- 0x21946
0x2193f:    44 24 24 89 04 24 e8                               |D$$..$.         |
; dynamically linked function: pthread_mutex_unlock at 0x21946 -- 0x21947
; data inside code section at 0x21947 -- 0x21949
0x21947:    ff ff                                              |..              |
; function: function_21949 at 0x21949 -- 0x2196f
0x21949:    ff 8b 44 24 2c 65                  	dec dword ptr [ebx + 0x652c2444]
0x2194f:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x21955:    0f 85 ea 00 00 00                  	jne 0x21a45 <function_21a45>
0x2195b:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x2195f:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x21963:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x21967:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x2196b:    83 c4 4c                           	add esp, 0x4c
0x2196e:    c3                                 	ret 
; data inside code section at 0x2196f -- 0x2198b
0x2196f:    90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0x2197f:    83 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0x2198b -- 0x2198c
; data inside code section at 0x2198c -- 0x219c1
0x2198c:    ff ff ff 89 c5 89 7c 24  08 89 74 24 04 89 04 24   |......|$..t$...$|
0x2199c:    e8 cf 15 02 00 85 ed 74  08 3b 2b 0f 84 9d 00 00   |.......t.;+.....|
0x219ac:    00 89 6c 24 1c c7 44 24  20 00 00 00 00 c7 04 24   |..l$..D$ ......$|
0x219bc:    10 00 00 00 e8                                     |.....           |
; dynamically linked function: _Znwj at 0x219c1 -- 0x219c2
; data inside code section at 0x219c2 -- 0x219c4
0x219c2:    ff ff                                              |..              |
; function: function_219c4 at 0x219c4 -- 0x21a45
0x219c4:    ff 8b 54 24 1c c7                  	dec dword ptr [ebx - 0x38e3dbac]
0x219ca:    00 68 14                           	add byte ptr [eax + 0x14], ch
0x219cd:    03 00                              	add eax, dword ptr [eax]
0x219cf:    c7 40 04 01 00 00 00               	mov dword ptr [eax + 4], 1
0x219d6:    89 68 0c                           	mov dword ptr [eax + 0xc], ebp
0x219d9:    8b 0b                              	mov ecx, dword ptr [ebx]
0x219db:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x219e2:    89 13                              	mov dword ptr [ebx], edx
0x219e4:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x219e7:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x219ea:    8d 44 24 20                        	lea eax, [esp + 0x20]
0x219ee:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x219f2:    89 04 24                           	mov dword ptr [esp], eax
0x219f5:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x219f9:    e8 32 04 01 00                     	call 0x31e30 <function_31e30>
0x219fe:    8b 03                              	mov eax, dword ptr [ebx]
0x21a00:    85 c0                              	test eax, eax
0x21a02:    74 36                              	je 0x21a3a <function_219c4+0x76>
0x21a04:    8b 38                              	mov edi, dword ptr [eax]
0x21a06:    85 ff                              	test edi, edi
0x21a08:    74 2b                              	je 0x21a35 <function_219c4+0x71>
0x21a0a:    8b 07                              	mov eax, dword ptr [edi]
0x21a0c:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x21a14:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x21a1c:    89 1c 24                           	mov dword ptr [esp], ebx
0x21a1f:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x21a23:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x21a27:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x21a2b:    e8 40 0f 02 00                     	call 0x42970 <unknown_42970>
0x21a30:    e9 09 ff ff ff                     	jmp 0x2193e <function_2193e>
0x21a35:    e8 34 e2 00 00                     	call 0x2fc6e <function_2fc6e>
0x21a3a:    8d b6 00 00 00 00                  	lea esi, [esi]
0x21a40:    e8 f1 e0 00 00                     	call 0x2fb36 <function_2fb36>
; function: function_21a45 at 0x21a45 -- 0x21a46
; dynamically linked function: __stack_chk_fail at 0x21a46 -- 0x21a47
; data inside code section at 0x21a47 -- 0x21a6a
0x21a47:    ff ff ff c7 44 24 0c e0  b5 02 00 c7 44 24 08 87   |....D$......D$..|
0x21a57:    01 00 00 c7 44 24 04 d0  d5 00 00 c7 04 24 d4 a3   |....D$.......$..|
0x21a67:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x21a6a -- 0x21a6b
; data inside code section at 0x21a6b -- 0x21a72
0x21a6b:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x21a72 -- 0x21a73
; data inside code section at 0x21a73 -- 0x21a7f
0x21a73:    ff ff ff 89 2c 24 e8 b2  fb 01 00 e8               |....,$......    |
; dynamically linked function: __cxa_rethrow at 0x21a7f -- 0x21a80
; data inside code section at 0x21a80 -- 0x21a84
0x21a80:    ff ff ff 89                                        |....            |
; function: function_21a84 at 0x21a84 -- 0x21a85
0x21a84:    c3                                 	ret 
; function: function_21a85 at 0x21a85 -- 0x21a86
; data inside code section at 0x21a86 -- 0x21a95
0x21a86:    44 24 24 89 04 24 e8 8f  61 01 00 89 1c 24 e8      |D$$..$..a....$. |
; dynamically linked function: _Unwind_Resume at 0x21a95 -- 0x21a96
; data inside code section at 0x21a96 -- 0x21a9a
0x21a96:    ff ff ff 89                                        |....            |
; function: function_21a9a at 0x21a9a -- 0x21a9b
0x21a9a:    c3                                 	ret 
; data inside code section at 0x21a9b -- 0x21a9f
0x21a9b:    89 2c 24 e8                                        |.,$.            |
; dynamically linked function: _ZdlPv at 0x21a9f -- 0x21aa0
; data inside code section at 0x21aa0 -- 0x21aa3
0x21aa0:    ff ff ff                                           |...             |
; function: function_21aa3 at 0x21aa3 -- 0x21aa5
0x21aa3:    eb e0                              	jmp 0x21a85 <function_21a85>
; function: function_21aa5 at 0x21aa5 -- 0x21ab2
0x21aa5:    89 c3                              	mov ebx, eax
0x21aa7:    e8 fc ff ff ff                     	call 0x21aa8
0x21aac:    8d 74 26 00                        	lea esi, [esi]
0x21ab0:    eb d3                              	jmp 0x21a85 <function_21a85>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_ at 0x21ac0 -- 0x21b12
0x21ac0:    83 ec 4c                           	sub esp, 0x4c
0x21ac3:    ba 01 00 00 00                     	mov edx, 1
0x21ac8:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21ace:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x21ad2:    31 c0                              	xor eax, eax
0x21ad4:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x21ad8:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x21adc:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x21ae0:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x21ae4:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x21ae8:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x21aec:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x21af0:    85 c0                              	test eax, eax
0x21af2:    8d 4b 04                           	lea ecx, [ebx + 4]
0x21af5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x21af9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x21afd:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x21b01:    0f 84 89 00 00 00                  	je 0x21b90 <function_21b90>
0x21b07:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x21b0b:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x21b12 -- 0x21b13
0x21b12:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x21b13 -- 0x21b14
; data inside code section at 0x21b14 -- 0x21b57
0x21b14:    ff ff ff 8b 54 24 18 83  f8 f0 74 1f 8b 0e c6 40   |....T$....t....@|
0x21b24:    14 00 89 48 10 80 7e 04  00 74 0a 8b 4e 08 c6 40   |...H..~..t..N..@|
0x21b34:    14 01 89 48 18 8b 4e 0c  89 48 1c 8b 4c 24 1c 89   |...H..N..H..L$..|
0x21b44:    44 24 04 89 14 24 89 44  24 18 89 4c 24 0c 89 6c   |D$...$.D$..L$..l|
0x21b54:    24 08 e8                                           |$..             |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x21b57 -- 0x21b58
; data inside code section at 0x21b58 -- 0x21b5a
0x21b58:    ff ff                                              |..              |
; function: function_21b5a at 0x21b5a -- 0x21b8a
0x21b5a:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x21b60:    43                                 	inc ebx
0x21b61:    14 01                              	adc al, 1
0x21b63:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x21b67:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21b6e:    89 07                              	mov dword ptr [edi], eax
0x21b70:    89 f8                              	mov eax, edi
0x21b72:    75 36                              	jne 0x21baa <function_21baa>
0x21b74:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x21b78:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x21b7c:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x21b80:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x21b84:    83 c4 4c                           	add esp, 0x4c
0x21b87:    c2 04 00                           	ret 4
; data inside code section at 0x21b8a -- 0x21b90
0x21b8a:    8d b6 00 00 00 00                                  |......          |
; function: function_21b90 at 0x21b90 -- 0x21baa
0x21b90:    39 cd                              	cmp ebp, ecx
0x21b92:    0f 84 6f ff ff ff                  	je 0x21b07
0x21b98:    8d 55 10                           	lea edx, [ebp + 0x10]
0x21b9b:    89 f0                              	mov eax, esi
0x21b9d:    e8 fe 02 00 00                     	call 0x21ea0 <function_21ea0>
0x21ba2:    0f b6 d0                           	movzx edx, al
0x21ba5:    e9 5d ff ff ff                     	jmp 0x21b07
; function: function_21baa at 0x21baa -- 0x21bab
; dynamically linked function: __stack_chk_fail at 0x21bab -- 0x21bac
; data inside code section at 0x21bac -- 0x21baf
0x21bac:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_ at 0x21bb0 -- 0x21c0e
0x21bb0:    55                                 	push ebp
0x21bb1:    57                                 	push edi
0x21bb2:    56                                 	push esi
0x21bb3:    53                                 	push ebx
0x21bb4:    83 ec 4c                           	sub esp, 0x4c
0x21bb7:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x21bbb:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x21bc2:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x21bc6:    31 d2                              	xor edx, edx
0x21bc8:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x21bcc:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x21bd0:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x21bd3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x21bd7:    85 ff                              	test edi, edi
0x21bd9:    75 0e                              	jne 0x21be9 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x39>
0x21bdb:    e9 ab 00 00 00                     	jmp 0x21c8b <function_21c8b>
0x21be0:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x21be3:    85 d2                              	test edx, edx
0x21be5:    74 17                              	je 0x21bfe <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x4e>
0x21be7:    89 d7                              	mov edi, edx
0x21be9:    8d 57 10                           	lea edx, [edi + 0x10]
0x21bec:    89 d8                              	mov eax, ebx
0x21bee:    e8 9d 03 00 00                     	call 0x21f90
0x21bf3:    84 c0                              	test al, al
0x21bf5:    75 e9                              	jne 0x21be0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x30>
0x21bf7:    8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x21bfa:    85 d2                              	test edx, edx
0x21bfc:    75 e9                              	jne 0x21be7 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x37>
0x21bfe:    84 c0                              	test al, al
0x21c00:    74 46                              	je 0x21c48 <function_21c48>
0x21c02:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x21c06:    3b 78 0c                           	cmp edi, dword ptr [eax + 0xc]
0x21c09:    74 4d                              	je 0x21c58 <function_21c58>
0x21c0b:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x21c0e -- 0x21c0f
0x21c0e:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x21c0f -- 0x21c10
; data inside code section at 0x21c10 -- 0x21c23
0x21c10:    ff ff ff 89 da 89 c5 8d  45 10 e8 71 03 00 00 84   |........E..q....|
0x21c20:    c0 75 35                                           |.u5             |
; function: function_21c23 at 0x21c23 -- 0x21c24
; data inside code section at 0x21c24 -- 0x21c29
0x21c24:    2e c6 46 04 00                                     |..F..           |
; function: function_21c29 at 0x21c29 -- 0x21c42
0x21c29:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x21c2d:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21c34:    89 f0                              	mov eax, esi
0x21c36:    75 5d                              	jne 0x21c95 <function_21c95>
0x21c38:    83 c4 4c                           	add esp, 0x4c
0x21c3b:    5b                                 	pop ebx
0x21c3c:    5e                                 	pop esi
0x21c3d:    5f                                 	pop edi
0x21c3e:    5d                                 	pop ebp
0x21c3f:    c2 04 00                           	ret 4
; data inside code section at 0x21c42 -- 0x21c48
0x21c42:    8d b6 00 00 00 00                                  |......          |
; function: function_21c48 at 0x21c48 -- 0x21c58
0x21c48:    89 fd                              	mov ebp, edi
0x21c4a:    89 da                              	mov edx, ebx
0x21c4c:    8d 45 10                           	lea eax, [ebp + 0x10]
0x21c4f:    e8 3c 03 00 00                     	call 0x21f90
0x21c54:    84 c0                              	test al, al
0x21c56:    74 cb                              	je 0x21c23
; function: function_21c58 at 0x21c58 -- 0x21c8b
0x21c58:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x21c5c:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x21c60:    89 04 24                           	mov dword ptr [esp], eax
0x21c63:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x21c67:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x21c6b:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x21c73:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x21c77:    e8 f4 19 02 00                     	call 0x43670 <unknown_43670>
0x21c7c:    83 ec 04                           	sub esp, 4
0x21c7f:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x21c83:    c6 46 04 01                        	mov byte ptr [esi + 4], 1
0x21c87:    89 06                              	mov dword ptr [esi], eax
0x21c89:    eb 9e                              	jmp 0x21c29 <function_21c29>
; function: function_21c8b at 0x21c8b -- 0x21c95
0x21c8b:    89 c7                              	mov edi, eax
0x21c8d:    83 c7 04                           	add edi, 4
0x21c90:    e9 6d ff ff ff                     	jmp 0x21c02
; function: function_21c95 at 0x21c95 -- 0x21c96
; dynamically linked function: __stack_chk_fail at 0x21c96 -- 0x21c97
; data inside code section at 0x21c97 -- 0x21c9a
0x21c97:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot1IbP5CNodeNS1_8functionIFbSE_EEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_ at 0x21ca0 -- 0x21d00
0x21ca0:    83 ec 5c                           	sub esp, 0x5c
0x21ca3:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x21ca7:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x21cab:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x21caf:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x21cb3:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x21cb9:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x21cbd:    31 c0                              	xor eax, eax
0x21cbf:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x21cc3:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x21cc7:    8d 47 04                           	lea eax, [edi + 4]
0x21cca:    39 c3                              	cmp ebx, eax
0x21ccc:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x21cd0:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x21cd4:    0f 84 06 01 00 00                  	je 0x21de0 <function_21de0>
0x21cda:    8d 43 10                           	lea eax, [ebx + 0x10]
0x21cdd:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x21ce1:    89 c2                              	mov edx, eax
0x21ce3:    89 e8                              	mov eax, ebp
0x21ce5:    e8 96 03 00 00                     	call 0x22080
0x21cea:    84 c0                              	test al, al
0x21cec:    0f 84 7e 00 00 00                  	je 0x21d70 <function_21d70>
0x21cf2:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x21cf5:    39 d8                              	cmp eax, ebx
0x21cf7:    0f 84 5b 01 00 00                  	je 0x21e58 <function_21e58>
0x21cfd:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x21d00 -- 0x21d01
0x21d00:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x21d01 -- 0x21d02
; data inside code section at 0x21d02 -- 0x21d06
0x21d02:    ff ff ff 89                                        |....            |
; function: function_21d06 at 0x21d06 -- 0x21d0d
0x21d06:    ea 89 c1 8d 40 10 89               	ljmp 0x8910:0x408dc189 <function_408dc189>
; data inside code section at 0x21d0d -- 0x21d2a
0x21d0d:    4c 24 20 e8 6b 03 00 00  8b 4c 24 20 84 c0 0f 84   |L$ .k....L$ ....|
0x21d1d:    c6 00 00 00 8b 41 0c 89  6c 24 10 85 c0            |.....A..l$...   |
; function: function_21d2a at 0x21d2a -- 0x21d47
0x21d2a:    0f 84 08 01 00 00                  	je 0x21e38 <function_21e38>
0x21d30:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x21d34:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x21d38:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21d3c:    89 34 24                           	mov dword ptr [esp], esi
0x21d3f:    e8 1c 1a 02 00                     	call 0x43760 <unknown_43760>
0x21d44:    83 ec 04                           	sub esp, 4
; function: function_21d47 at 0x21d47 -- 0x21d70
0x21d47:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x21d4b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x21d52:    89 f0                              	mov eax, esi
0x21d54:    0f 85 2e 01 00 00                  	jne 0x21e88 <function_21e88>
0x21d5a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x21d5e:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x21d62:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x21d66:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x21d6a:    83 c4 5c                           	add esp, 0x5c
0x21d6d:    c2 04 00                           	ret 4
; function: function_21d70 at 0x21d70 -- 0x21d91
0x21d70:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x21d74:    89 ea                              	mov edx, ebp
0x21d76:    e8 05 03 00 00                     	call 0x22080
0x21d7b:    84 c0                              	test al, al
0x21d7d:    0f 84 8d 00 00 00                  	je 0x21e10 <function_21e10>
0x21d83:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x21d86:    39 d8                              	cmp eax, ebx
0x21d88:    0f 84 f0 00 00 00                  	je 0x21e7e <function_21e7e>
0x21d8e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x21d91 -- 0x21d92
0x21d91:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x21d92 -- 0x21d93
; data inside code section at 0x21d93 -- 0x21d95
0x21d93:    ff ff                                              |..              |
; function: function_21d95 at 0x21d95 -- 0x21dd9
0x21d95:    ff 89 c1 8d 50 10                  	dec dword ptr [ecx + 0x10508dc1]
0x21d9b:    89 e8                              	mov eax, ebp
0x21d9d:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x21da1:    e8 da 02 00 00                     	call 0x22080
0x21da6:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x21daa:    84 c0                              	test al, al
0x21dac:    74 39                              	je 0x21de7
0x21dae:    8b 53 0c                           	mov edx, dword ptr [ebx + 0xc]
0x21db1:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x21db5:    85 d2                              	test edx, edx
0x21db7:    0f 84 bb 00 00 00                  	je 0x21e78 <function_21e78>
0x21dbd:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x21dc1:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x21dc5:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21dc9:    89 34 24                           	mov dword ptr [esp], esi
0x21dcc:    e8 8f 19 02 00                     	call 0x43760 <unknown_43760>
0x21dd1:    83 ec 04                           	sub esp, 4
0x21dd4:    e9 6e ff ff ff                     	jmp 0x21d47 <function_21d47>
; data inside code section at 0x21dd9 -- 0x21de0
0x21dd9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_21de0 at 0x21de0 -- 0x21e09
0x21de0:    8b 47 14                           	mov eax, dword ptr [edi + 0x14]
0x21de3:    85 c0                              	test eax, eax
0x21de5:    75 31                              	jne 0x21e18 <function_21e18>
0x21de7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x21deb:    89 04 24                           	mov dword ptr [esp], eax
0x21dee:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x21df2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21df6:    e8 55 1a 02 00                     	call 0x43850 <unknown_43850>
0x21dfb:    83 ec 04                           	sub esp, 4
0x21dfe:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x21e02:    89 06                              	mov dword ptr [esi], eax
0x21e04:    e9 3e ff ff ff                     	jmp 0x21d47 <function_21d47>
; data inside code section at 0x21e09 -- 0x21e10
0x21e09:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_21e10 at 0x21e10 -- 0x21e17
0x21e10:    89 1e                              	mov dword ptr [esi], ebx
0x21e12:    e9 30 ff ff ff                     	jmp 0x21d47 <function_21d47>
; data inside code section at 0x21e17 -- 0x21e18
0x21e17:    90                                                 |.               |
; function: function_21e18 at 0x21e18 -- 0x21e33
0x21e18:    8b 5f 10                           	mov ebx, dword ptr [edi + 0x10]
0x21e1b:    89 ea                              	mov edx, ebp
0x21e1d:    8d 43 10                           	lea eax, [ebx + 0x10]
0x21e20:    e8 5b 02 00 00                     	call 0x22080
0x21e25:    84 c0                              	test al, al
0x21e27:    74 be                              	je 0x21de7
0x21e29:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x21e2d:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x21e31:    eb 09                              	jmp 0x21e3c <function_21e3c>
; data inside code section at 0x21e33 -- 0x21e38
0x21e33:    90 8d 74 26 00                                     |..t&.           |
; function: function_21e38 at 0x21e38 -- 0x21e3c
0x21e38:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
; function: function_21e3c at 0x21e3c -- 0x21e58
0x21e3c:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x21e44:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21e48:    89 34 24                           	mov dword ptr [esp], esi
0x21e4b:    e8 10 19 02 00                     	call 0x43760 <unknown_43760>
0x21e50:    83 ec 04                           	sub esp, 4
0x21e53:    e9 ef fe ff ff                     	jmp 0x21d47 <function_21d47>
; function: function_21e58 at 0x21e58 -- 0x21e78
0x21e58:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x21e5c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21e60:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x21e64:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x21e68:    89 34 24                           	mov dword ptr [esp], esi
0x21e6b:    e8 f0 18 02 00                     	call 0x43760 <unknown_43760>
0x21e70:    83 ec 04                           	sub esp, 4
0x21e73:    e9 cf fe ff ff                     	jmp 0x21d47 <function_21d47>
; function: function_21e78 at 0x21e78 -- 0x21e7e
0x21e78:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x21e7c:    eb be                              	jmp 0x21e3c <function_21e3c>
; function: function_21e7e at 0x21e7e -- 0x21e88
0x21e7e:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x21e82:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x21e86:    eb b4                              	jmp 0x21e3c <function_21e3c>
; function: function_21e88 at 0x21e88 -- 0x21e89
; dynamically linked function: __stack_chk_fail at 0x21e89 -- 0x21e8a
; data inside code section at 0x21e8a -- 0x21e8d
0x21e8a:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEj
; function: _ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEj at 0x21e90 -- 0x21e9e
0x21e90:    55                                 	push ebp
0x21e91:    57                                 	push edi
0x21e92:    56                                 	push esi
0x21e93:    53                                 	push ebx
0x21e94:    83 ec 7c                           	sub esp, 0x7c
0x21e97:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
; data inside code section at 0x21e9e -- 0x21ea0
0x21e9e:    8b 8c                                              |..              |
; function: function_21ea0 at 0x21ea0 -- 0x22040
0x21ea0:    24 9c                              	and al, 0x9c
0x21ea2:    00 00                              	add byte ptr [eax], al
0x21ea4:    00 8b 94 24 98 00                  	add byte ptr [ebx + 0x982494], cl
0x21eaa:    00 00                              	add byte ptr [eax], al
0x21eac:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x21eb0:    0f b6 84 24 94 00 00 00            	movzx eax, byte ptr [esp + 0x94]
0x21eb8:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x21ebc:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x21ec3:    89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0x21ec7:    31 c9                              	xor ecx, ecx
0x21ec9:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x21ecd:    88 44 24 3e                        	mov byte ptr [esp + 0x3e], al
0x21ed1:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x21ed4:    85 c0                              	test eax, eax
0x21ed6:    0f 84 ce 03 00 00                  	je 0x222aa <function_222aa>
0x21edc:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x21edf:    83 f8 01                           	cmp eax, 1
0x21ee2:    0f 85 c2 03 00 00                  	jne 0x222aa <function_222aa>
0x21ee8:    8b 32                              	mov esi, dword ptr [edx]
0x21eea:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x21eee:    8b 02                              	mov eax, dword ptr [edx]
0x21ef0:    85 c0                              	test eax, eax
0x21ef2:    0f 84 9e 03 00 00                  	je 0x22296 <function_22296>
0x21ef8:    8b 00                              	mov eax, dword ptr [eax]
0x21efa:    85 c0                              	test eax, eax
0x21efc:    0f 84 9e 03 00 00                  	je 0x222a0 <function_222a0>
0x21f02:    39 c6                              	cmp esi, eax
0x21f04:    0f 84 3e 01 00 00                  	je 0x22048 <function_22048>
0x21f0a:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x21f0e:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x21f11:    85 c0                              	test eax, eax
0x21f13:    0f 94 44 24 3f                     	sete byte ptr [esp + 0x3f]
0x21f18:    85 ed                              	test ebp, ebp
0x21f1a:    0f 84 01 01 00 00                  	je 0x22021 <function_21ea0+0x181>
0x21f20:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x21f28:    8b 45 00                           	mov eax, dword ptr [ebp]
0x21f2b:    89 2c 24                           	mov dword ptr [esp], ebp
0x21f2e:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x21f31:    80 7c 24 3e 00                     	cmp byte ptr [esp + 0x3e], 0
0x21f36:    0f 84 86 00 00 00                  	je 0x21fc2 <function_21ea0+0x122>
0x21f3c:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x21f3f:    85 c9                              	test ecx, ecx
0x21f41:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x21f45:    0f 84 50 03 00 00                  	je 0x2229b <function_2229b>
0x21f4b:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x21f4f:    8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0x21f53:    8b 58 10                           	mov ebx, dword ptr [eax + 0x10]
0x21f56:    83 c7 10                           	add edi, 0x10
0x21f59:    39 58 14                           	cmp dword ptr [eax + 0x14], ebx
0x21f5c:    75 12                              	jne 0x21f70 <function_21ea0+0xd0>
0x21f5e:    e9 f7 02 00 00                     	jmp 0x2225a <function_2225a>
; data inside code section at 0x21f63 -- 0x21f68
0x21f63:    90 8d 74 26 00                                     |..t&.           |
0x21f68:    83 c3 0c                           	add ebx, 0xc
0x21f6b:    3b 5f 04                           	cmp ebx, dword ptr [edi + 4]
0x21f6e:    74 52                              	je 0x21fc2 <function_21ea0+0x122>
0x21f70:    8b 03                              	mov eax, dword ptr [ebx]
0x21f72:    8d 54 24 5b                        	lea edx, [esp + 0x5b]
0x21f76:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x21f7a:    8d 4b 04                           	lea ecx, [ebx + 4]
0x21f7d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x21f81:    8d 4c 24 54                        	lea ecx, [esp + 0x54]
0x21f85:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x21f8d:    89 c2                              	mov edx, eax
0x21f8f:    c1 fa 1f                           	sar edx, 0x1f
0x21f92:    31 c2                              	xor edx, eax
0x21f94:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x21f9c:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x21fa1:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x21fa6:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x21faa:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x21fae:    89 04 24                           	mov dword ptr [esp], eax
0x21fb1:    e8 ba bc 01 00                     	call 0x3dc70 <unknown_3dc70>
0x21fb6:    84 c0                              	test al, al
0x21fb8:    74 ae                              	je 0x21f68 <function_21ea0+0xc8>
0x21fba:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x21fbe:    c6 40 04 00                        	mov byte ptr [eax + 4], 0
0x21fc2:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x21fc5:    85 c0                              	test eax, eax
0x21fc7:    0f 84 ce 02 00 00                  	je 0x2229b <function_2229b>
0x21fcd:    0f b6 58 04                        	movzx ebx, byte ptr [eax + 4]
0x21fd1:    8b 45 00                           	mov eax, dword ptr [ebp]
0x21fd4:    89 2c 24                           	mov dword ptr [esp], ebp
0x21fd7:    ff 50 10                           	call dword ptr [eax + 0x10]
0x21fda:    84 db                              	test bl, bl
0x21fdc:    0f 84 86 00 00 00                  	je 0x22068 <function_22068>
0x21fe2:    8b 36                              	mov esi, dword ptr [esi]
0x21fe4:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x21fe8:    8b 02                              	mov eax, dword ptr [edx]
0x21fea:    85 c0                              	test eax, eax
0x21fec:    0f 84 a4 02 00 00                  	je 0x22296 <function_22296>
0x21ff2:    8b 00                              	mov eax, dword ptr [eax]
0x21ff4:    85 c0                              	test eax, eax
0x21ff6:    0f 84 a4 02 00 00                  	je 0x222a0 <function_222a0>
0x21ffc:    39 f0                              	cmp eax, esi
0x21ffe:    74 48                              	je 0x22048 <function_22048>
0x22000:    83 44 24 24 01                     	add dword ptr [esp + 0x24], 1
0x22005:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x22009:    39 4c 24 38                        	cmp dword ptr [esp + 0x38], ecx
0x2200d:    77 07                              	ja 0x22016 <function_21ea0+0x176>
0x2200f:    80 7c 24 3f 00                     	cmp byte ptr [esp + 0x3f], 0
0x22014:    74 32                              	je 0x22048 <function_22048>
0x22016:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x22019:    85 ed                              	test ebp, ebp
0x2201b:    0f 85 07 ff ff ff                  	jne 0x21f28 <function_21ea0+0x88>
0x22021:    c7 44 24 0c 60 c5 02 00            	mov dword ptr [esp + 0xc], 0x2c560 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>&]"
0x22029:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x22031:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x22039:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x22040 -- 0x22041
0x22040:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22041 -- 0x22042
; data inside code section at 0x22042 -- 0x22048
0x22042:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_22048 at 0x22048 -- 0x22068
0x22048:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x2204c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x22053:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x22057:    89 70 08                           	mov dword ptr [eax + 8], esi
0x2205a:    0f 85 45 02 00 00                  	jne 0x222a5 <function_222a5>
0x22060:    83 c4 7c                           	add esp, 0x7c
0x22063:    5b                                 	pop ebx
0x22064:    5e                                 	pop esi
0x22065:    5f                                 	pop edi
0x22066:    5d                                 	pop ebp
0x22067:    c3                                 	ret 
; function: function_22068 at 0x22068 -- 0x22129
0x22068:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x2206b:    85 c9                              	test ecx, ecx
0x2206d:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x22071:    0f 84 24 02 00 00                  	je 0x2229b <function_2229b>
0x22077:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x2207b:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x2207f:    8b 02                              	mov eax, dword ptr [edx]
0x22081:    83 c7 44                           	add edi, 0x44
0x22084:    85 c0                              	test eax, eax
0x22086:    0f 84 0a 02 00 00                  	je 0x22296 <function_22296>
0x2208c:    8b 00                              	mov eax, dword ptr [eax]
0x2208e:    85 c0                              	test eax, eax
0x22090:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x22094:    0f 84 06 02 00 00                  	je 0x222a0 <function_222a0>
0x2209a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2209e:    39 f1                              	cmp ecx, esi
0x220a0:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x220a4:    0f 84 5b 02 00 00                  	je 0x22305 <function_22305>
0x220aa:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x220ae:    8b 69 10                           	mov ebp, dword ptr [ecx + 0x10]
0x220b1:    85 ed                              	test ebp, ebp
0x220b3:    0f 84 15 02 00 00                  	je 0x222ce <function_222ce>
0x220b9:    83 c1 0c                           	add ecx, 0xc
0x220bc:    89 eb                              	mov ebx, ebp
0x220be:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x220c2:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x220c6:    eb 0b                              	jmp 0x220d3 <function_22068+0x6b>
0x220c8:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x220cc:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x220cf:    85 db                              	test ebx, ebx
0x220d1:    74 15                              	je 0x220e8 <function_22068+0x80>
0x220d3:    8d 43 10                           	lea eax, [ebx + 0x10]
0x220d6:    89 fa                              	mov edx, edi
0x220d8:    e8 93 01 00 00                     	call 0x22270 <function_22270>
0x220dd:    84 c0                              	test al, al
0x220df:    74 e7                              	je 0x220c8 <function_22068+0x60>
0x220e1:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x220e4:    85 db                              	test ebx, ebx
0x220e6:    75 eb                              	jne 0x220d3 <function_22068+0x6b>
0x220e8:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x220ec:    39 4c 24 20                        	cmp dword ptr [esp + 0x20], ecx
0x220f0:    0f 84 d8 01 00 00                  	je 0x222ce <function_222ce>
0x220f6:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x220fa:    89 fa                              	mov edx, edi
0x220fc:    83 c3 10                           	add ebx, 0x10
0x220ff:    89 d8                              	mov eax, ebx
0x22101:    e8 6a 01 00 00                     	call 0x22270 <function_22270>
0x22106:    84 c0                              	test al, al
0x22108:    74 26                              	je 0x22130 <function_22130>
0x2210a:    c7 44 24 0c e0 cc 02 00            	mov dword ptr [esp + 0xc], 0x2cce0 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x22112:    c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0x2211a:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x22122:    c7 04 24 00 de 00 00               	mov dword ptr [esp], 0xde00 ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0x22129 -- 0x2212a
0x22129:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2212a -- 0x2212b
; data inside code section at 0x2212b -- 0x2212d
0x2212b:    ff ff                                              |..              |
; function: function_2212d at 0x2212d -- 0x22130
0x2212d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_22130 at 0x22130 -- 0x22160
0x22130:    89 da                              	mov edx, ebx
0x22132:    89 f8                              	mov eax, edi
0x22134:    e8 37 01 00 00                     	call 0x22270 <function_22270>
0x22139:    84 c0                              	test al, al
0x2213b:    75 cd                              	jne 0x2210a
0x2213d:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x22141:    39 71 1c                           	cmp dword ptr [ecx + 0x1c], esi
0x22144:    74 24                              	je 0x2216a <function_2216a>
0x22146:    8b 1e                              	mov ebx, dword ptr [esi]
0x22148:    89 34 24                           	mov dword ptr [esp], esi
0x2214b:    e8 fc ff ff ff                     	call 0x2214c
0x22150:    8d 46 0c                           	lea eax, [esi + 0xc]
0x22153:    89 04 24                           	mov dword ptr [esp], eax
0x22156:    e8 75 02 01 00                     	call 0x323d0 <function_323d0>
0x2215b:    89 34 24                           	mov dword ptr [esp], esi
0x2215e:    89 de                              	mov esi, ebx
; data inside code section at 0x22160 -- 0x22161
0x22160:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x22161 -- 0x22162
; data inside code section at 0x22162 -- 0x22165
0x22162:    ff ff ff                                           |...             |
; function: function_22165 at 0x22165 -- 0x2216a
0x22165:    e9 7a fe ff ff                     	jmp 0x21fe4
; function: function_2216a at 0x2216a -- 0x2225a
0x2216a:    8b 0e                              	mov ecx, dword ptr [esi]
0x2216c:    89 eb                              	mov ebx, ebp
0x2216e:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x22172:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x22176:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x2217a:    eb 0f                              	jmp 0x2218b <function_2216a+0x21>
; data inside code section at 0x2217c -- 0x22180
0x2217c:    8d 74 26 00                                        |.t&.            |
0x22180:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x22184:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x22187:    85 db                              	test ebx, ebx
0x22189:    74 15                              	je 0x221a0 <function_2216a+0x36>
0x2218b:    8d 53 10                           	lea edx, [ebx + 0x10]
0x2218e:    89 f8                              	mov eax, edi
0x22190:    e8 db 00 00 00                     	call 0x22270 <function_22270>
0x22195:    84 c0                              	test al, al
0x22197:    75 e7                              	jne 0x22180 <function_2216a+0x16>
0x22199:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x2219c:    85 db                              	test ebx, ebx
0x2219e:    75 eb                              	jne 0x2218b <function_2216a+0x21>
0x221a0:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x221a4:    39 4c 24 30                        	cmp dword ptr [esp + 0x30], ecx
0x221a8:    74 07                              	je 0x221b1 <function_2216a+0x47>
0x221aa:    8b 49 1c                           	mov ecx, dword ptr [ecx + 0x1c]
0x221ad:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x221b1:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x221b5:    39 4c 24 48                        	cmp dword ptr [esp + 0x48], ecx
0x221b9:    0f 84 a4 00 00 00                  	je 0x22263 <function_22263>
0x221bf:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x221c3:    eb 0c                              	jmp 0x221d1 <function_2216a+0x67>
; data inside code section at 0x221c5 -- 0x221c8
0x221c5:    8d 76 00                                           |.v.             |
0x221c8:    89 eb                              	mov ebx, ebp
0x221ca:    8b 6d 08                           	mov ebp, dword ptr [ebp + 8]
0x221cd:    85 ed                              	test ebp, ebp
0x221cf:    74 15                              	je 0x221e6 <function_2216a+0x7c>
0x221d1:    8d 45 10                           	lea eax, [ebp + 0x10]
0x221d4:    89 fa                              	mov edx, edi
0x221d6:    e8 95 00 00 00                     	call 0x22270 <function_22270>
0x221db:    84 c0                              	test al, al
0x221dd:    74 e9                              	je 0x221c8 <function_2216a+0x5e>
0x221df:    8b 6d 0c                           	mov ebp, dword ptr [ebp + 0xc]
0x221e2:    85 ed                              	test ebp, ebp
0x221e4:    75 eb                              	jne 0x221d1 <function_2216a+0x67>
0x221e6:    3b 5c 24 30                        	cmp ebx, dword ptr [esp + 0x30]
0x221ea:    74 0e                              	je 0x221fa <function_2216a+0x90>
0x221ec:    8d 53 10                           	lea edx, [ebx + 0x10]
0x221ef:    89 f8                              	mov eax, edi
0x221f1:    e8 7a 00 00 00                     	call 0x22270 <function_22270>
0x221f6:    84 c0                              	test al, al
0x221f8:    74 54                              	je 0x2224e <function_2216a+0xe4>
0x221fa:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x221fe:    c6 44 24 60 00                     	mov byte ptr [esp + 0x60], 0
0x22203:    8b 41 44                           	mov eax, dword ptr [ecx + 0x44]
0x22206:    80 79 48 00                        	cmp byte ptr [ecx + 0x48], 0
0x2220a:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x2220e:    74 0c                              	je 0x2221c <function_2216a+0xb2>
0x22210:    8b 41 4c                           	mov eax, dword ptr [ecx + 0x4c]
0x22213:    c6 44 24 60 01                     	mov byte ptr [esp + 0x60], 1
0x22218:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x2221c:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x22220:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22224:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x22228:    8d 54 24 4c                        	lea edx, [esp + 0x4c]
0x2222c:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x22230:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x22238:    89 14 24                           	mov dword ptr [esp], edx
0x2223b:    83 c0 08                           	add eax, 8
0x2223e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x22242:    e8 e9 18 02 00                     	call 0x43b30 <unknown_43b30>
0x22247:    83 ec 04                           	sub esp, 4
0x2224a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2224e:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x22252:    89 4b 1c                           	mov dword ptr [ebx + 0x1c], ecx
0x22255:    e9 ec fe ff ff                     	jmp 0x22146
; function: function_2225a at 0x2225a -- 0x22263
0x2225a:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x2225e:    e9 6a fd ff ff                     	jmp 0x21fcd
; function: function_22263 at 0x22263 -- 0x2226f
0x22263:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x22267:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x2226b:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
; data inside code section at 0x2226f -- 0x22270
0x2226f:    89                                                 |.               |
; function: function_22270 at 0x22270 -- 0x22272
0x22270:    0c 24                              	or al, 0x24
; data inside code section at 0x22272 -- 0x22273
0x22272:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x22273 -- 0x22274
; data inside code section at 0x22274 -- 0x22285
0x22274:    ff ff ff 80 78 14 00 74  04 c6 40 14 00 89 04 24   |....x..t..@....$|
0x22284:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x22285 -- 0x22286
; data inside code section at 0x22286 -- 0x22289
0x22286:    ff ff ff                                           |...             |
; function: function_22289 at 0x22289 -- 0x22296
0x22289:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x2228d:    83 69 1c 01                        	sub dword ptr [ecx + 0x1c], 1
0x22291:    e9 b0 fe ff ff                     	jmp 0x22146
; function: function_22296 at 0x22296 -- 0x2229b
0x22296:    e8 6f de 00 00                     	call 0x3010a <function_3010a>
; function: function_2229b at 0x2229b -- 0x222a0
0x2229b:    e8 06 df 00 00                     	call 0x301a6 <function_301a6>
; function: function_222a0 at 0x222a0 -- 0x222a5
0x222a0:    e8 9d df 00 00                     	call 0x30242 <function_30242>
; function: function_222a5 at 0x222a5 -- 0x222a6
; dynamically linked function: __stack_chk_fail at 0x222a6 -- 0x222a7
; data inside code section at 0x222a7 -- 0x222aa
0x222a7:    ff ff ff                                           |...             |
; function: function_222aa at 0x222aa -- 0x222c9
0x222aa:    c7 44 24 0c 80 c7 02 00            	mov dword ptr [esp + 0xc], 0x2c780 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >]"
0x222b2:    c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0x222ba:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x222c2:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x222c9 -- 0x222ca
0x222c9:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x222ca -- 0x222cb
; data inside code section at 0x222cb -- 0x222ce
0x222cb:    ff ff ff                                           |...             |
; function: function_222ce at 0x222ce -- 0x222ed
0x222ce:    c7 44 24 0c e0 cc 02 00            	mov dword ptr [esp + 0xc], 0x2cce0 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x222d6:    c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0x222de:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x222e6:    c7 04 24 b9 a3 00 00               	mov dword ptr [esp], 0xa3b9 ; "map_it != _group_map.end()"
; data inside code section at 0x222ed -- 0x222ee
0x222ed:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x222ee -- 0x222ef
; data inside code section at 0x222ef -- 0x222f3
0x222ef:    ff ff ff 89                                        |....            |
; function: function_222f3 at 0x222f3 -- 0x222f4
0x222f3:    c3                                 	ret 
; data inside code section at 0x222f4 -- 0x22301
0x222f4:    8b 45 00 89 2c 24 ff 50  10 89 1c 24 e8            |.E..,$.P...$.   |
; dynamically linked function: _Unwind_Resume at 0x22301 -- 0x22302
; data inside code section at 0x22302 -- 0x22305
0x22302:    ff ff ff                                           |...             |
; function: function_22305 at 0x22305 -- 0x22324
0x22305:    c7 44 24 0c e0 cc 02 00            	mov dword ptr [esp + 0xc], 0x2cce0 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x2230d:    c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0x22315:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x2231d:    c7 04 24 a7 a3 00 00               	mov dword ptr [esp], 0xa3a7 ; "it != _list.end()"
; data inside code section at 0x22324 -- 0x22325
0x22324:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22325 -- 0x22326
; data inside code section at 0x22326 -- 0x22329
0x22326:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEE
; function: _ZNK5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS4_SB_EESH_EEEEEE at 0x22330 -- 0x22361
0x22330:    83 ec 5c                           	sub esp, 0x5c
0x22333:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x22337:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x2233b:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x22341:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x22345:    31 c0                              	xor eax, eax
0x22347:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x2234b:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x2234f:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x22353:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x22356:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x2235a:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x2235e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x22361 -- 0x22362
0x22361:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x22362 -- 0x22363
; data inside code section at 0x22363 -- 0x2237e
0x22363:    ff ff ff 8b 33 85 f6 0f  84 5e 01 00 00 8b 06 85   |....3....^......|
0x22373:    c0 0f 84 4f 01 00 00 39  c7 74 32                  |...O...9.t2     |
; function: function_2237e at 0x2237e -- 0x2237f
; data inside code section at 0x2237f -- 0x22386
0x2237f:    44 24 34 89 04 24 e8                               |D$4..$.         |
; dynamically linked function: pthread_mutex_unlock at 0x22386 -- 0x22387
; data inside code section at 0x22387 -- 0x22389
0x22387:    ff ff                                              |..              |
; function: function_22389 at 0x22389 -- 0x223af
0x22389:    ff 8b 54 24 3c 65                  	dec dword ptr [ebx + 0x653c2454]
0x2238f:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x22395:    0f 85 3a 01 00 00                  	jne 0x224d5 <function_224d5>
0x2239b:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2239f:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x223a3:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x223a7:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x223ab:    83 c4 5c                           	add esp, 0x5c
0x223ae:    c3                                 	ret 
; data inside code section at 0x223af -- 0x223cb
0x223af:    90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0x223bf:    d7 00 00 00 c7 04 24 10  00 00 00 e8               |......$.....    |
; dynamically linked function: _Znwj at 0x223cb -- 0x223cc
; data inside code section at 0x223cc -- 0x223d9
0x223cc:    ff ff ff 89 c5 c7 04 24  24 00 00 00 e8            |.......$$....   |
; dynamically linked function: _Znwj at 0x223d9 -- 0x223da
; data inside code section at 0x223da -- 0x22403
0x223da:    ff ff ff 89 44 24 1c 89  7c 24 04 89 04 24 e8 63   |....D$..|$...$.c|
0x223ea:    f0 01 00 8b 44 24 1c c7  45 04 00 00 00 00 89 45   |....D$..E......E|
0x223fa:    00 c7 04 24 10 00 00 00  e8                        |...$.....       |
; dynamically linked function: _Znwj at 0x22403 -- 0x22404
; data inside code section at 0x22404 -- 0x22455
0x22404:    ff ff ff 8b 54 24 1c c7  40 04 01 00 00 00 c7 40   |....T$..@......@|
0x22414:    08 01 00 00 00 c7 00 c8  14 03 00 89 50 0c 89 45   |............P..E|
0x22424:    04 8b 46 08 89 45 08 8b  46 0c 85 c0 89 45 0c 74   |..F..E..F....E.t|
0x22434:    04 f0 ff 40 04 3b 2b 0f  84 99 00 00 00 89 6c 24   |...@.;+.......l$|
0x22444:    2c c7 44 24 30 00 00 00  00 c7 04 24 10 00 00 00   |,.D$0......$....|
0x22454:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x22455 -- 0x22456
; data inside code section at 0x22456 -- 0x22458
0x22456:    ff ff                                              |..              |
; function: function_22458 at 0x22458 -- 0x224d5
0x22458:    ff 8b 54 24 2c c7                  	dec dword ptr [ebx - 0x38d3dbac]
0x2245e:    00 e8                              	add al, ch
0x22460:    14 03                              	adc al, 3
0x22462:    00 c7                              	add bh, al
0x22464:    40                                 	inc eax
0x22465:    04 01                              	add al, 1
0x22467:    00 00                              	add byte ptr [eax], al
0x22469:    00 89 68 0c 8b 0b                  	add byte ptr [ecx + 0xb8b0c68], cl
0x2246f:    c7 40 08 01 00 00 00               	mov dword ptr [eax + 8], 1
0x22476:    89 13                              	mov dword ptr [ebx], edx
0x22478:    8b 53 04                           	mov edx, dword ptr [ebx + 4]
0x2247b:    89 43 04                           	mov dword ptr [ebx + 4], eax
0x2247e:    8d 44 24 30                        	lea eax, [esp + 0x30]
0x22482:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x22486:    89 04 24                           	mov dword ptr [esp], eax
0x22489:    89 54 24 30                        	mov dword ptr [esp + 0x30], edx
0x2248d:    e8 de 03 01 00                     	call 0x32870 <function_32870>
0x22492:    8b 03                              	mov eax, dword ptr [ebx]
0x22494:    85 c0                              	test eax, eax
0x22496:    74 36                              	je 0x224ce <function_22458+0x76>
0x22498:    8b 38                              	mov edi, dword ptr [eax]
0x2249a:    85 ff                              	test edi, edi
0x2249c:    74 2b                              	je 0x224c9 <function_22458+0x71>
0x2249e:    8b 07                              	mov eax, dword ptr [edi]
0x224a0:    c7 44 24 0c 00 00 00 00            	mov dword ptr [esp + 0xc], 0
0x224a8:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x224b0:    89 1c 24                           	mov dword ptr [esp], ebx
0x224b3:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x224b7:    8d 44 24 38                        	lea eax, [esp + 0x38]
0x224bb:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x224bf:    e8 fc 1c 02 00                     	call 0x441c0 <unknown_441c0>
0x224c4:    e9 b5 fe ff ff                     	jmp 0x2237e <function_2237e>
0x224c9:    e8 14 e2 00 00                     	call 0x306e2 <function_306e2>
0x224ce:    66 90                              	nop 
0x224d0:    e8 d5 e0 00 00                     	call 0x305aa <function_305aa>
; function: function_224d5 at 0x224d5 -- 0x224d6
; dynamically linked function: __stack_chk_fail at 0x224d6 -- 0x224d7
; data inside code section at 0x224d7 -- 0x224fa
0x224d7:    ff ff ff c7 44 24 0c c0  d0 02 00 c7 44 24 08 87   |....D$......D$..|
0x224e7:    01 00 00 c7 44 24 04 d0  d5 00 00 c7 04 24 d4 a3   |....D$.......$..|
0x224f7:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x224fa -- 0x224fb
; data inside code section at 0x224fb -- 0x22502
0x224fb:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x22502 -- 0x22503
; data inside code section at 0x22503 -- 0x2250f
0x22503:    ff ff ff 89 2c 24 e8 02  e4 01 00 e8               |....,$......    |
; dynamically linked function: __cxa_rethrow at 0x2250f -- 0x22510
; data inside code section at 0x22510 -- 0x22514
0x22510:    ff ff ff 89                                        |....            |
; function: function_22514 at 0x22514 -- 0x22515
0x22514:    c3                                 	ret 
; data inside code section at 0x22515 -- 0x2251d
0x22515:    8b 44 24 1c 89 04 24 e8                            |.D$...$.        |
; dynamically linked function: _ZdlPv at 0x2251d -- 0x2251e
; data inside code section at 0x2251e -- 0x22521
0x2251e:    ff ff ff                                           |...             |
; function: function_22521 at 0x22521 -- 0x22522
; data inside code section at 0x22522 -- 0x22525
0x22522:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZdlPv at 0x22525 -- 0x22526
; data inside code section at 0x22526 -- 0x22529
0x22526:    ff ff ff                                           |...             |
; function: function_22529 at 0x22529 -- 0x2252a
; data inside code section at 0x2252a -- 0x22539
0x2252a:    44 24 34 89 04 24 e8 2b  61 01 00 89 1c 24 e8      |D$4..$.+a....$. |
; dynamically linked function: _Unwind_Resume at 0x22539 -- 0x2253a
; data inside code section at 0x2253a -- 0x2253c
0x2253a:    ff ff                                              |..              |
; function: function_2253c at 0x2253c -- 0x22543
0x2253c:    ff 89 c3 eb e8 89                  	dec dword ptr [ecx - 0x7617143d]
0x22542:    c3                                 	ret 
; function: function_22543 at 0x22543 -- 0x22545
0x22543:    eb dc                              	jmp 0x22521 <function_22521>
; data inside code section at 0x22545 -- 0x22549
0x22545:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x22549 -- 0x2254a
; data inside code section at 0x2254a -- 0x2255a
0x2254a:    ff ff ff 8b 44 24 1c 89  04 24 e8 17 e5 01 00 e8   |....D$...$......|
; dynamically linked function: __cxa_rethrow at 0x2255a -- 0x2255b
; data inside code section at 0x2255b -- 0x2255f
0x2255b:    ff ff ff 89                                        |....            |
; function: function_2255f at 0x2255f -- 0x22560
0x2255f:    c3                                 	ret 
; data inside code section at 0x22560 -- 0x22561
0x22560:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x22561 -- 0x22562
; data inside code section at 0x22562 -- 0x22565
0x22562:    ff ff ff                                           |...             |
; function: function_22565 at 0x22565 -- 0x22567
0x22565:    eb c2                              	jmp 0x22529 <function_22529>
; data inside code section at 0x22567 -- 0x22568
0x22567:    89                                                 |.               |
; function: function_22568 at 0x22568 -- 0x22569
0x22568:    c3                                 	ret 
; data inside code section at 0x22569 -- 0x2256a
0x22569:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x2256a -- 0x2256b
; data inside code section at 0x2256b -- 0x2256d
0x2256b:    ff ff                                              |..              |
; function: function_2256d at 0x2256d -- 0x22570
0x2256d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_22570 at 0x22570 -- 0x22572
0x22570:    eb af                              	jmp 0x22521 <function_22521>
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE10_M_insert_EPKSt18_Rb_tree_node_baseSY_RKSN_ at 0x22580 -- 0x225d2
0x22580:    83 ec 4c                           	sub esp, 0x4c
0x22583:    ba 01 00 00 00                     	mov edx, 1
0x22588:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x2258e:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x22592:    31 c0                              	xor eax, eax
0x22594:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x22598:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2259c:    8b 5c 24 54                        	mov ebx, dword ptr [esp + 0x54]
0x225a0:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x225a4:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x225a8:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x225ac:    8b 7c 24 50                        	mov edi, dword ptr [esp + 0x50]
0x225b0:    85 c0                              	test eax, eax
0x225b2:    8d 4b 04                           	lea ecx, [ebx + 4]
0x225b5:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x225b9:    8b 6c 24 5c                        	mov ebp, dword ptr [esp + 0x5c]
0x225bd:    89 4c 24 1c                        	mov dword ptr [esp + 0x1c], ecx
0x225c1:    0f 84 89 00 00 00                  	je 0x22650 <function_22650>
0x225c7:    89 54 24 18                        	mov dword ptr [esp + 0x18], edx
0x225cb:    c7 04 24 20 00 00 00               	mov dword ptr [esp], 0x20
; data inside code section at 0x225d2 -- 0x225d3
0x225d2:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x225d3 -- 0x225d4
; data inside code section at 0x225d4 -- 0x22617
0x225d4:    ff ff ff 8b 54 24 18 83  f8 f0 74 1f 8b 0e c6 40   |....T$....t....@|
0x225e4:    14 00 89 48 10 80 7e 04  00 74 0a 8b 4e 08 c6 40   |...H..~..t..N..@|
0x225f4:    14 01 89 48 18 8b 4e 0c  89 48 1c 8b 4c 24 1c 89   |...H..N..H..L$..|
0x22604:    44 24 04 89 14 24 89 44  24 18 89 4c 24 0c 89 6c   |D$...$.D$..L$..l|
0x22614:    24 08 e8                                           |$..             |
; dynamically linked function: _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ at 0x22617 -- 0x22618
; data inside code section at 0x22618 -- 0x2261a
0x22618:    ff ff                                              |..              |
; function: function_2261a at 0x2261a -- 0x2264a
0x2261a:    ff 8b 44 24 18 83                  	dec dword ptr [ebx - 0x7ce7dbbc]
0x22620:    43                                 	inc ebx
0x22621:    14 01                              	adc al, 1
0x22623:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x22627:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2262e:    89 07                              	mov dword ptr [edi], eax
0x22630:    89 f8                              	mov eax, edi
0x22632:    75 36                              	jne 0x2266a <function_2266a>
0x22634:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x22638:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x2263c:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x22640:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x22644:    83 c4 4c                           	add esp, 0x4c
0x22647:    c2 04 00                           	ret 4
; data inside code section at 0x2264a -- 0x22650
0x2264a:    8d b6 00 00 00 00                                  |......          |
; function: function_22650 at 0x22650 -- 0x2266a
0x22650:    39 cd                              	cmp ebp, ecx
0x22652:    0f 84 6f ff ff ff                  	je 0x225c7
0x22658:    8d 55 10                           	lea edx, [ebp + 0x10]
0x2265b:    89 f0                              	mov eax, esi
0x2265d:    e8 fe 02 00 00                     	call 0x22960 <function_22960>
0x22662:    0f b6 d0                           	movzx edx, al
0x22665:    e9 5d ff ff ff                     	jmp 0x225c7
; function: function_2266a at 0x2266a -- 0x2266b
; dynamically linked function: __stack_chk_fail at 0x2266b -- 0x2266c
; data inside code section at 0x2266c -- 0x2266f
0x2266c:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_ at 0x22670 -- 0x226ce
0x22670:    55                                 	push ebp
0x22671:    57                                 	push edi
0x22672:    56                                 	push esi
0x22673:    53                                 	push ebx
0x22674:    83 ec 4c                           	sub esp, 0x4c
0x22677:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x2267b:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x22682:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x22686:    31 d2                              	xor edx, edx
0x22688:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x2268c:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x22690:    8b 78 08                           	mov edi, dword ptr [eax + 8]
0x22693:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x22697:    85 ff                              	test edi, edi
0x22699:    75 0e                              	jne 0x226a9 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x39>
0x2269b:    e9 ab 00 00 00                     	jmp 0x2274b <function_2274b>
0x226a0:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x226a3:    85 d2                              	test edx, edx
0x226a5:    74 17                              	je 0x226be <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x4e>
0x226a7:    89 d7                              	mov edi, edx
0x226a9:    8d 57 10                           	lea edx, [edi + 0x10]
0x226ac:    89 d8                              	mov eax, ebx
0x226ae:    e8 9d 03 00 00                     	call 0x22a50
0x226b3:    84 c0                              	test al, al
0x226b5:    75 e9                              	jne 0x226a0 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x30>
0x226b7:    8b 57 0c                           	mov edx, dword ptr [edi + 0xc]
0x226ba:    85 d2                              	test edx, edx
0x226bc:    75 e9                              	jne 0x226a7 <_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE16_M_insert_uniqueERKSN_+0x37>
0x226be:    84 c0                              	test al, al
0x226c0:    74 46                              	je 0x22708 <function_22708>
0x226c2:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x226c6:    3b 78 0c                           	cmp edi, dword ptr [eax + 0xc]
0x226c9:    74 4d                              	je 0x22718 <function_22718>
0x226cb:    89 3c 24                           	mov dword ptr [esp], edi
; data inside code section at 0x226ce -- 0x226cf
0x226ce:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base at 0x226cf -- 0x226d0
; data inside code section at 0x226d0 -- 0x226e3
0x226d0:    ff ff ff 89 da 89 c5 8d  45 10 e8 71 03 00 00 84   |........E..q....|
0x226e0:    c0 75 35                                           |.u5             |
; function: function_226e3 at 0x226e3 -- 0x226e4
; data inside code section at 0x226e4 -- 0x226e9
0x226e4:    2e c6 46 04 00                                     |..F..           |
; function: function_226e9 at 0x226e9 -- 0x22702
0x226e9:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x226ed:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x226f4:    89 f0                              	mov eax, esi
0x226f6:    75 5d                              	jne 0x22755 <function_22755>
0x226f8:    83 c4 4c                           	add esp, 0x4c
0x226fb:    5b                                 	pop ebx
0x226fc:    5e                                 	pop esi
0x226fd:    5f                                 	pop edi
0x226fe:    5d                                 	pop ebp
0x226ff:    c2 04 00                           	ret 4
; data inside code section at 0x22702 -- 0x22708
0x22702:    8d b6 00 00 00 00                                  |......          |
; function: function_22708 at 0x22708 -- 0x22718
0x22708:    89 fd                              	mov ebp, edi
0x2270a:    89 da                              	mov edx, ebx
0x2270c:    8d 45 10                           	lea eax, [ebp + 0x10]
0x2270f:    e8 3c 03 00 00                     	call 0x22a50
0x22714:    84 c0                              	test al, al
0x22716:    74 cb                              	je 0x226e3
; function: function_22718 at 0x22718 -- 0x2274b
0x22718:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x2271c:    8d 44 24 2c                        	lea eax, [esp + 0x2c]
0x22720:    89 04 24                           	mov dword ptr [esp], eax
0x22723:    89 5c 24 10                        	mov dword ptr [esp + 0x10], ebx
0x22727:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x2272b:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x22733:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x22737:    e8 b4 24 02 00                     	call 0x44bf0 <unknown_44bf0>
0x2273c:    83 ec 04                           	sub esp, 4
0x2273f:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x22743:    c6 46 04 01                        	mov byte ptr [esi + 4], 1
0x22747:    89 06                              	mov dword ptr [esi], eax
0x22749:    eb 9e                              	jmp 0x226e9 <function_226e9>
; function: function_2274b at 0x2274b -- 0x22755
0x2274b:    89 c7                              	mov edi, eax
0x2274d:    83 c7 04                           	add edi, 4
0x22750:    e9 6d ff ff ff                     	jmp 0x226c2
; function: function_22755 at 0x22755 -- 0x22756
; dynamically linked function: __stack_chk_fail at 0x22756 -- 0x22757
; data inside code section at 0x22757 -- 0x2275a
0x22757:    ff ff ff                                           |...             |
; section: .text._ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_
; function: _ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IbP5CNodebNS1_8functionIFbSE_bEEEEENS2_5mutexEEEEEEESt10_Select1stISN_ENS3_14group_key_lessIiSt4lessIiEEESaISN_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISN_ERKSN_ at 0x22760 -- 0x227c0
0x22760:    83 ec 5c                           	sub esp, 0x5c
0x22763:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x22767:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x2276b:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x2276f:    8b 5c 24 68                        	mov ebx, dword ptr [esp + 0x68]
0x22773:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x22779:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2277d:    31 c0                              	xor eax, eax
0x2277f:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x22783:    8b 74 24 60                        	mov esi, dword ptr [esp + 0x60]
0x22787:    8d 47 04                           	lea eax, [edi + 4]
0x2278a:    39 c3                              	cmp ebx, eax
0x2278c:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x22790:    8b 6c 24 6c                        	mov ebp, dword ptr [esp + 0x6c]
0x22794:    0f 84 06 01 00 00                  	je 0x228a0 <function_228a0>
0x2279a:    8d 43 10                           	lea eax, [ebx + 0x10]
0x2279d:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x227a1:    89 c2                              	mov edx, eax
0x227a3:    89 e8                              	mov eax, ebp
0x227a5:    e8 96 03 00 00                     	call 0x22b40
0x227aa:    84 c0                              	test al, al
0x227ac:    0f 84 7e 00 00 00                  	je 0x22830 <function_22830>
0x227b2:    8b 47 0c                           	mov eax, dword ptr [edi + 0xc]
0x227b5:    39 d8                              	cmp eax, ebx
0x227b7:    0f 84 5b 01 00 00                  	je 0x22918 <function_22918>
0x227bd:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x227c0 -- 0x227c1
0x227c0:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base at 0x227c1 -- 0x227c2
; data inside code section at 0x227c2 -- 0x227c6
0x227c2:    ff ff ff 89                                        |....            |
; function: function_227c6 at 0x227c6 -- 0x227cd
0x227c6:    ea 89 c1 8d 40 10 89               	ljmp 0x8910:0x408dc189 <function_408dc189>
; data inside code section at 0x227cd -- 0x227d0
0x227cd:    4c 24 20                                           |L$              |
; function: function_227d0 at 0x227d0 -- 0x22807
0x227d0:    e8 6b 03 00 00                     	call 0x22b40
0x227d5:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x227d9:    84 c0                              	test al, al
0x227db:    0f 84 c6 00 00 00                  	je 0x228a7
0x227e1:    8b 41 0c                           	mov eax, dword ptr [ecx + 0xc]
0x227e4:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x227e8:    85 c0                              	test eax, eax
0x227ea:    0f 84 08 01 00 00                  	je 0x228f8 <function_228f8>
0x227f0:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x227f4:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x227f8:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x227fc:    89 34 24                           	mov dword ptr [esp], esi
0x227ff:    e8 dc 24 02 00                     	call 0x44ce0 <unknown_44ce0>
0x22804:    83 ec 04                           	sub esp, 4
; function: function_22807 at 0x22807 -- 0x22830
0x22807:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2280b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x22812:    89 f0                              	mov eax, esi
0x22814:    0f 85 2e 01 00 00                  	jne 0x22948 <function_22948>
0x2281a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x2281e:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x22822:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x22826:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x2282a:    83 c4 5c                           	add esp, 0x5c
0x2282d:    c2 04 00                           	ret 4
; function: function_22830 at 0x22830 -- 0x22851
0x22830:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x22834:    89 ea                              	mov edx, ebp
0x22836:    e8 05 03 00 00                     	call 0x22b40
0x2283b:    84 c0                              	test al, al
0x2283d:    0f 84 8d 00 00 00                  	je 0x228d0 <function_228d0>
0x22843:    8b 47 10                           	mov eax, dword ptr [edi + 0x10]
0x22846:    39 d8                              	cmp eax, ebx
0x22848:    0f 84 f0 00 00 00                  	je 0x2293e <function_2293e>
0x2284e:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x22851 -- 0x22852
0x22851:    e8                                                 |.               |
; dynamically linked function: _ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base at 0x22852 -- 0x22853
; data inside code section at 0x22853 -- 0x22855
0x22853:    ff ff                                              |..              |
; function: function_22855 at 0x22855 -- 0x22899
0x22855:    ff 89 c1 8d 50 10                  	dec dword ptr [ecx + 0x10508dc1]
0x2285b:    89 e8                              	mov eax, ebp
0x2285d:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x22861:    e8 da 02 00 00                     	call 0x22b40
0x22866:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x2286a:    84 c0                              	test al, al
0x2286c:    74 39                              	je 0x228a7
0x2286e:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x22871:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x22875:    85 c0                              	test eax, eax
0x22877:    0f 84 bb 00 00 00                  	je 0x22938 <function_22938>
0x2287d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x22881:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x22885:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x22889:    89 34 24                           	mov dword ptr [esp], esi
0x2288c:    e8 4f 24 02 00                     	call 0x44ce0 <unknown_44ce0>
0x22891:    83 ec 04                           	sub esp, 4
0x22894:    e9 6e ff ff ff                     	jmp 0x22807 <function_22807>
; data inside code section at 0x22899 -- 0x228a0
0x22899:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_228a0 at 0x228a0 -- 0x228c9
0x228a0:    8b 57 14                           	mov edx, dword ptr [edi + 0x14]
0x228a3:    85 d2                              	test edx, edx
0x228a5:    75 31                              	jne 0x228d8 <function_228d8>
0x228a7:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x228ab:    89 04 24                           	mov dword ptr [esp], eax
0x228ae:    89 6c 24 08                        	mov dword ptr [esp + 8], ebp
0x228b2:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x228b6:    e8 15 25 02 00                     	call 0x44dd0 <unknown_44dd0>
0x228bb:    83 ec 04                           	sub esp, 4
0x228be:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x228c2:    89 06                              	mov dword ptr [esi], eax
0x228c4:    e9 3e ff ff ff                     	jmp 0x22807 <function_22807>
; data inside code section at 0x228c9 -- 0x228d0
0x228c9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_228d0 at 0x228d0 -- 0x228d7
0x228d0:    89 1e                              	mov dword ptr [esi], ebx
0x228d2:    e9 30 ff ff ff                     	jmp 0x22807 <function_22807>
; data inside code section at 0x228d7 -- 0x228d8
0x228d7:    90                                                 |.               |
; function: function_228d8 at 0x228d8 -- 0x228f3
0x228d8:    8b 5f 10                           	mov ebx, dword ptr [edi + 0x10]
0x228db:    89 ea                              	mov edx, ebp
0x228dd:    8d 43 10                           	lea eax, [ebx + 0x10]
0x228e0:    e8 5b 02 00 00                     	call 0x22b40
0x228e5:    84 c0                              	test al, al
0x228e7:    74 be                              	je 0x228a7
0x228e9:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x228ed:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x228f1:    eb 09                              	jmp 0x228fc <function_228fc>
; data inside code section at 0x228f3 -- 0x228f8
0x228f3:    90 8d 74 26 00                                     |..t&.           |
; function: function_228f8 at 0x228f8 -- 0x228fc
0x228f8:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
; function: function_228fc at 0x228fc -- 0x22918
0x228fc:    c7 44 24 08 00 00 00 00            	mov dword ptr [esp + 8], 0
0x22904:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x22908:    89 34 24                           	mov dword ptr [esp], esi
0x2290b:    e8 d0 23 02 00                     	call 0x44ce0 <unknown_44ce0>
0x22910:    83 ec 04                           	sub esp, 4
0x22913:    e9 ef fe ff ff                     	jmp 0x22807 <function_22807>
; function: function_22918 at 0x22918 -- 0x22938
0x22918:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x2291c:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22920:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x22924:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x22928:    89 34 24                           	mov dword ptr [esp], esi
0x2292b:    e8 b0 23 02 00                     	call 0x44ce0 <unknown_44ce0>
0x22930:    83 ec 04                           	sub esp, 4
0x22933:    e9 cf fe ff ff                     	jmp 0x22807 <function_22807>
; function: function_22938 at 0x22938 -- 0x2293e
0x22938:    89 5c 24 0c                        	mov dword ptr [esp + 0xc], ebx
0x2293c:    eb be                              	jmp 0x228fc <function_228fc>
; function: function_2293e at 0x2293e -- 0x22948
0x2293e:    89 6c 24 10                        	mov dword ptr [esp + 0x10], ebp
0x22942:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22946:    eb b4                              	jmp 0x228fc <function_228fc>
; function: function_22948 at 0x22948 -- 0x22949
; dynamically linked function: __stack_chk_fail at 0x22949 -- 0x2294a
; data inside code section at 0x2294a -- 0x2294d
0x2294a:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEj
; function: _ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEj at 0x22950 -- 0x2295e
0x22950:    55                                 	push ebp
0x22951:    57                                 	push edi
0x22952:    56                                 	push esi
0x22953:    53                                 	push ebx
0x22954:    83 ec 7c                           	sub esp, 0x7c
0x22957:    8b 84 24 90 00 00 00               	mov eax, dword ptr [esp + 0x90]
; data inside code section at 0x2295e -- 0x22960
0x2295e:    8b 8c                                              |..              |
; function: function_22960 at 0x22960 -- 0x229b0
0x22960:    24 9c                              	and al, 0x9c
0x22962:    00 00                              	add byte ptr [eax], al
0x22964:    00 8b 94 24 98 00                  	add byte ptr [ebx + 0x982494], cl
0x2296a:    00 00                              	add byte ptr [eax], al
0x2296c:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x22970:    0f b6 84 24 94 00 00 00            	movzx eax, byte ptr [esp + 0x94]
0x22978:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x2297c:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x22983:    89 4c 24 6c                        	mov dword ptr [esp + 0x6c], ecx
0x22987:    31 c9                              	xor ecx, ecx
0x22989:    8b 4c 24 28                        	mov ecx, dword ptr [esp + 0x28]
0x2298d:    88 44 24 3e                        	mov byte ptr [esp + 0x3e], al
0x22991:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x22994:    85 c0                              	test eax, eax
0x22996:    0f 84 ce 03 00 00                  	je 0x22d6a <function_22d6a>
0x2299c:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x2299f:    83 f8 01                           	cmp eax, 1
0x229a2:    0f 85 c2 03 00 00                  	jne 0x22d6a <function_22d6a>
0x229a8:    8b 32                              	mov esi, dword ptr [edx]
0x229aa:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x229ae:    8b 02                              	mov eax, dword ptr [edx]
; function: function_229b0 at 0x229b0 -- 0x22b00
0x229b0:    85 c0                              	test eax, eax
0x229b2:    0f 84 9e 03 00 00                  	je 0x22d56 <function_22d56>
0x229b8:    8b 00                              	mov eax, dword ptr [eax]
0x229ba:    85 c0                              	test eax, eax
0x229bc:    0f 84 9e 03 00 00                  	je 0x22d60 <function_22d60>
0x229c2:    39 c6                              	cmp esi, eax
0x229c4:    0f 84 3e 01 00 00                  	je 0x22b08 <function_22b08>
0x229ca:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x229ce:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x229d1:    85 c9                              	test ecx, ecx
0x229d3:    0f 94 44 24 3f                     	sete byte ptr [esp + 0x3f]
0x229d8:    85 ed                              	test ebp, ebp
0x229da:    0f 84 01 01 00 00                  	je 0x22ae1 <function_229b0+0x131>
0x229e0:    c7 44 24 24 00 00 00 00            	mov dword ptr [esp + 0x24], 0
0x229e8:    8b 45 00                           	mov eax, dword ptr [ebp]
0x229eb:    89 2c 24                           	mov dword ptr [esp], ebp
0x229ee:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x229f1:    80 7c 24 3e 00                     	cmp byte ptr [esp + 0x3e], 0
0x229f6:    0f 84 86 00 00 00                  	je 0x22a82 <function_229b0+0xd2>
0x229fc:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x229ff:    85 c9                              	test ecx, ecx
0x22a01:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x22a05:    0f 84 50 03 00 00                  	je 0x22d5b <function_22d5b>
0x22a0b:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x22a0f:    8b 7c 24 20                        	mov edi, dword ptr [esp + 0x20]
0x22a13:    8b 58 10                           	mov ebx, dword ptr [eax + 0x10]
0x22a16:    83 c7 10                           	add edi, 0x10
0x22a19:    39 58 14                           	cmp dword ptr [eax + 0x14], ebx
0x22a1c:    75 12                              	jne 0x22a30 <function_229b0+0x80>
0x22a1e:    e9 f7 02 00 00                     	jmp 0x22d1a <function_22d1a>
; data inside code section at 0x22a23 -- 0x22a28
0x22a23:    90 8d 74 26 00                                     |..t&.           |
0x22a28:    83 c3 0c                           	add ebx, 0xc
0x22a2b:    3b 5f 04                           	cmp ebx, dword ptr [edi + 4]
0x22a2e:    74 52                              	je 0x22a82 <function_229b0+0xd2>
0x22a30:    8b 03                              	mov eax, dword ptr [ebx]
0x22a32:    8d 54 24 5b                        	lea edx, [esp + 0x5b]
0x22a36:    89 54 24 54                        	mov dword ptr [esp + 0x54], edx
0x22a3a:    8d 4b 04                           	lea ecx, [ebx + 4]
0x22a3d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x22a41:    8d 4c 24 54                        	lea ecx, [esp + 0x54]
0x22a45:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x22a4d:    89 c2                              	mov edx, eax
0x22a4f:    c1 fa 1f                           	sar edx, 0x1f
0x22a52:    31 c2                              	xor edx, eax
0x22a54:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x22a5c:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x22a61:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x22a66:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x22a6a:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x22a6e:    89 04 24                           	mov dword ptr [esp], eax
0x22a71:    e8 ba bc 01 00                     	call 0x3e730 <unknown_3e730>
0x22a76:    84 c0                              	test al, al
0x22a78:    74 ae                              	je 0x22a28 <function_229b0+0x78>
0x22a7a:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x22a7e:    c6 40 04 00                        	mov byte ptr [eax + 4], 0
0x22a82:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x22a85:    85 c0                              	test eax, eax
0x22a87:    0f 84 ce 02 00 00                  	je 0x22d5b <function_22d5b>
0x22a8d:    0f b6 58 04                        	movzx ebx, byte ptr [eax + 4]
0x22a91:    8b 45 00                           	mov eax, dword ptr [ebp]
0x22a94:    89 2c 24                           	mov dword ptr [esp], ebp
0x22a97:    ff 50 10                           	call dword ptr [eax + 0x10]
0x22a9a:    84 db                              	test bl, bl
0x22a9c:    0f 84 86 00 00 00                  	je 0x22b28 <function_22b28>
0x22aa2:    8b 36                              	mov esi, dword ptr [esi]
0x22aa4:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x22aa8:    8b 02                              	mov eax, dword ptr [edx]
0x22aaa:    85 c0                              	test eax, eax
0x22aac:    0f 84 a4 02 00 00                  	je 0x22d56 <function_22d56>
0x22ab2:    8b 00                              	mov eax, dword ptr [eax]
0x22ab4:    85 c0                              	test eax, eax
0x22ab6:    0f 84 a4 02 00 00                  	je 0x22d60 <function_22d60>
0x22abc:    39 f0                              	cmp eax, esi
0x22abe:    74 48                              	je 0x22b08 <function_22b08>
0x22ac0:    83 44 24 24 01                     	add dword ptr [esp + 0x24], 1
0x22ac5:    8b 4c 24 24                        	mov ecx, dword ptr [esp + 0x24]
0x22ac9:    39 4c 24 38                        	cmp dword ptr [esp + 0x38], ecx
0x22acd:    77 07                              	ja 0x22ad6 <function_229b0+0x126>
0x22acf:    80 7c 24 3f 00                     	cmp byte ptr [esp + 0x3f], 0
0x22ad4:    74 32                              	je 0x22b08 <function_22b08>
0x22ad6:    8b 6e 08                           	mov ebp, dword ptr [esi + 8]
0x22ad9:    85 ed                              	test ebp, ebp
0x22adb:    0f 85 07 ff ff ff                  	jne 0x229e8 <function_229b0+0x38>
0x22ae1:    c7 44 24 0c 80 dc 02 00            	mov dword ptr [esp + 0xc], 0x2dc80 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>&]"
0x22ae9:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x22af1:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x22af9:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x22b00 -- 0x22b01
0x22b00:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22b01 -- 0x22b02
; data inside code section at 0x22b02 -- 0x22b08
0x22b02:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_22b08 at 0x22b08 -- 0x22b28
0x22b08:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x22b0c:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x22b13:    8b 44 24 28                        	mov eax, dword ptr [esp + 0x28]
0x22b17:    89 70 08                           	mov dword ptr [eax + 8], esi
0x22b1a:    0f 85 45 02 00 00                  	jne 0x22d65 <function_22d65>
0x22b20:    83 c4 7c                           	add esp, 0x7c
0x22b23:    5b                                 	pop ebx
0x22b24:    5e                                 	pop esi
0x22b25:    5f                                 	pop edi
0x22b26:    5d                                 	pop ebp
0x22b27:    c3                                 	ret 
; function: function_22b28 at 0x22b28 -- 0x22be9
0x22b28:    8b 4e 08                           	mov ecx, dword ptr [esi + 8]
0x22b2b:    85 c9                              	test ecx, ecx
0x22b2d:    89 4c 24 34                        	mov dword ptr [esp + 0x34], ecx
0x22b31:    0f 84 24 02 00 00                  	je 0x22d5b <function_22d5b>
0x22b37:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x22b3b:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x22b3f:    8b 02                              	mov eax, dword ptr [edx]
0x22b41:    83 c7 44                           	add edi, 0x44
0x22b44:    85 c0                              	test eax, eax
0x22b46:    0f 84 0a 02 00 00                  	je 0x22d56 <function_22d56>
0x22b4c:    8b 00                              	mov eax, dword ptr [eax]
0x22b4e:    85 c0                              	test eax, eax
0x22b50:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x22b54:    0f 84 06 02 00 00                  	je 0x22d60 <function_22d60>
0x22b5a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x22b5e:    39 f1                              	cmp ecx, esi
0x22b60:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x22b64:    0f 84 5b 02 00 00                  	je 0x22dc5 <function_22dc5>
0x22b6a:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x22b6e:    8b 69 10                           	mov ebp, dword ptr [ecx + 0x10]
0x22b71:    85 ed                              	test ebp, ebp
0x22b73:    0f 84 15 02 00 00                  	je 0x22d8e <function_22d8e>
0x22b79:    83 c1 0c                           	add ecx, 0xc
0x22b7c:    89 eb                              	mov ebx, ebp
0x22b7e:    89 4c 24 30                        	mov dword ptr [esp + 0x30], ecx
0x22b82:    89 4c 24 20                        	mov dword ptr [esp + 0x20], ecx
0x22b86:    eb 0b                              	jmp 0x22b93 <function_22b28+0x6b>
0x22b88:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x22b8c:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x22b8f:    85 db                              	test ebx, ebx
0x22b91:    74 15                              	je 0x22ba8 <function_22b28+0x80>
0x22b93:    8d 43 10                           	lea eax, [ebx + 0x10]
0x22b96:    89 fa                              	mov edx, edi
0x22b98:    e8 93 01 00 00                     	call 0x22d30 <function_22d30>
0x22b9d:    84 c0                              	test al, al
0x22b9f:    74 e7                              	je 0x22b88 <function_22b28+0x60>
0x22ba1:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x22ba4:    85 db                              	test ebx, ebx
0x22ba6:    75 eb                              	jne 0x22b93 <function_22b28+0x6b>
0x22ba8:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x22bac:    39 4c 24 20                        	cmp dword ptr [esp + 0x20], ecx
0x22bb0:    0f 84 d8 01 00 00                  	je 0x22d8e <function_22d8e>
0x22bb6:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x22bba:    89 fa                              	mov edx, edi
0x22bbc:    83 c3 10                           	add ebx, 0x10
0x22bbf:    89 d8                              	mov eax, ebx
0x22bc1:    e8 6a 01 00 00                     	call 0x22d30 <function_22d30>
0x22bc6:    84 c0                              	test al, al
0x22bc8:    74 26                              	je 0x22bf0 <function_22bf0>
0x22bca:    c7 44 24 0c 40 e4 02 00            	mov dword ptr [esp + 0xc], 0x2e440 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x22bd2:    c7 44 24 08 97 00 00 00            	mov dword ptr [esp + 8], 0x97
0x22bda:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x22be2:    c7 04 24 00 de 00 00               	mov dword ptr [esp], 0xde00 ; "weakly_equivalent(map_it->first, key)"
; data inside code section at 0x22be9 -- 0x22bea
0x22be9:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22bea -- 0x22beb
; data inside code section at 0x22beb -- 0x22bed
0x22beb:    ff ff                                              |..              |
; function: function_22bed at 0x22bed -- 0x22bf0
0x22bed:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_22bf0 at 0x22bf0 -- 0x22c20
0x22bf0:    89 da                              	mov edx, ebx
0x22bf2:    89 f8                              	mov eax, edi
0x22bf4:    e8 37 01 00 00                     	call 0x22d30 <function_22d30>
0x22bf9:    84 c0                              	test al, al
0x22bfb:    75 cd                              	jne 0x22bca
0x22bfd:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
0x22c01:    39 71 1c                           	cmp dword ptr [ecx + 0x1c], esi
0x22c04:    74 24                              	je 0x22c2a <function_22c2a>
0x22c06:    8b 1e                              	mov ebx, dword ptr [esi]
0x22c08:    89 34 24                           	mov dword ptr [esp], esi
0x22c0b:    e8 fc ff ff ff                     	call 0x22c0c
0x22c10:    8d 46 0c                           	lea eax, [esi + 0xc]
0x22c13:    89 04 24                           	mov dword ptr [esp], eax
0x22c16:    e8 75 02 01 00                     	call 0x32e90 <function_32e90>
0x22c1b:    89 34 24                           	mov dword ptr [esp], esi
0x22c1e:    89 de                              	mov esi, ebx
; data inside code section at 0x22c20 -- 0x22c21
0x22c20:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x22c21 -- 0x22c22
; data inside code section at 0x22c22 -- 0x22c25
0x22c22:    ff ff ff                                           |...             |
; function: function_22c25 at 0x22c25 -- 0x22c2a
0x22c25:    e9 7a fe ff ff                     	jmp 0x22aa4
; function: function_22c2a at 0x22c2a -- 0x22d1a
0x22c2a:    8b 0e                              	mov ecx, dword ptr [esi]
0x22c2c:    89 eb                              	mov ebx, ebp
0x22c2e:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x22c32:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x22c36:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x22c3a:    eb 0f                              	jmp 0x22c4b <function_22c2a+0x21>
; data inside code section at 0x22c3c -- 0x22c40
0x22c3c:    8d 74 26 00                                        |.t&.            |
0x22c40:    89 5c 24 44                        	mov dword ptr [esp + 0x44], ebx
0x22c44:    8b 5b 08                           	mov ebx, dword ptr [ebx + 8]
0x22c47:    85 db                              	test ebx, ebx
0x22c49:    74 15                              	je 0x22c60 <function_22c2a+0x36>
0x22c4b:    8d 53 10                           	lea edx, [ebx + 0x10]
0x22c4e:    89 f8                              	mov eax, edi
0x22c50:    e8 db 00 00 00                     	call 0x22d30 <function_22d30>
0x22c55:    84 c0                              	test al, al
0x22c57:    75 e7                              	jne 0x22c40 <function_22c2a+0x16>
0x22c59:    8b 5b 0c                           	mov ebx, dword ptr [ebx + 0xc]
0x22c5c:    85 db                              	test ebx, ebx
0x22c5e:    75 eb                              	jne 0x22c4b <function_22c2a+0x21>
0x22c60:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x22c64:    39 4c 24 30                        	cmp dword ptr [esp + 0x30], ecx
0x22c68:    74 07                              	je 0x22c71 <function_22c2a+0x47>
0x22c6a:    8b 49 1c                           	mov ecx, dword ptr [ecx + 0x1c]
0x22c6d:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x22c71:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x22c75:    39 4c 24 48                        	cmp dword ptr [esp + 0x48], ecx
0x22c79:    0f 84 a4 00 00 00                  	je 0x22d23 <function_22d23>
0x22c7f:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x22c83:    eb 0c                              	jmp 0x22c91 <function_22c2a+0x67>
; data inside code section at 0x22c85 -- 0x22c88
0x22c85:    8d 76 00                                           |.v.             |
0x22c88:    89 eb                              	mov ebx, ebp
0x22c8a:    8b 6d 08                           	mov ebp, dword ptr [ebp + 8]
0x22c8d:    85 ed                              	test ebp, ebp
0x22c8f:    74 15                              	je 0x22ca6 <function_22c2a+0x7c>
0x22c91:    8d 45 10                           	lea eax, [ebp + 0x10]
0x22c94:    89 fa                              	mov edx, edi
0x22c96:    e8 95 00 00 00                     	call 0x22d30 <function_22d30>
0x22c9b:    84 c0                              	test al, al
0x22c9d:    74 e9                              	je 0x22c88 <function_22c2a+0x5e>
0x22c9f:    8b 6d 0c                           	mov ebp, dword ptr [ebp + 0xc]
0x22ca2:    85 ed                              	test ebp, ebp
0x22ca4:    75 eb                              	jne 0x22c91 <function_22c2a+0x67>
0x22ca6:    3b 5c 24 30                        	cmp ebx, dword ptr [esp + 0x30]
0x22caa:    74 0e                              	je 0x22cba <function_22c2a+0x90>
0x22cac:    8d 53 10                           	lea edx, [ebx + 0x10]
0x22caf:    89 f8                              	mov eax, edi
0x22cb1:    e8 7a 00 00 00                     	call 0x22d30 <function_22d30>
0x22cb6:    84 c0                              	test al, al
0x22cb8:    74 54                              	je 0x22d0e <function_22c2a+0xe4>
0x22cba:    8b 4c 24 34                        	mov ecx, dword ptr [esp + 0x34]
0x22cbe:    c6 44 24 60 00                     	mov byte ptr [esp + 0x60], 0
0x22cc3:    8b 41 44                           	mov eax, dword ptr [ecx + 0x44]
0x22cc6:    80 79 48 00                        	cmp byte ptr [ecx + 0x48], 0
0x22cca:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x22cce:    74 0c                              	je 0x22cdc <function_22c2a+0xb2>
0x22cd0:    8b 41 4c                           	mov eax, dword ptr [ecx + 0x4c]
0x22cd3:    c6 44 24 60 01                     	mov byte ptr [esp + 0x60], 1
0x22cd8:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x22cdc:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x22ce0:    89 44 24 0c                        	mov dword ptr [esp + 0xc], eax
0x22ce4:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x22ce8:    8d 54 24 4c                        	lea edx, [esp + 0x4c]
0x22cec:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x22cf0:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x22cf8:    89 14 24                           	mov dword ptr [esp], edx
0x22cfb:    83 c0 08                           	add eax, 8
0x22cfe:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x22d02:    e8 a9 23 02 00                     	call 0x450b0 <unknown_450b0>
0x22d07:    83 ec 04                           	sub esp, 4
0x22d0a:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x22d0e:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x22d12:    89 4b 1c                           	mov dword ptr [ebx + 0x1c], ecx
0x22d15:    e9 ec fe ff ff                     	jmp 0x22c06
; function: function_22d1a at 0x22d1a -- 0x22d23
0x22d1a:    8b 44 24 20                        	mov eax, dword ptr [esp + 0x20]
0x22d1e:    e9 6a fd ff ff                     	jmp 0x22a8d
; function: function_22d23 at 0x22d23 -- 0x22d2f
0x22d23:    8b 4c 24 30                        	mov ecx, dword ptr [esp + 0x30]
0x22d27:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x22d2b:    8b 4c 24 20                        	mov ecx, dword ptr [esp + 0x20]
; data inside code section at 0x22d2f -- 0x22d30
0x22d2f:    89                                                 |.               |
; function: function_22d30 at 0x22d30 -- 0x22d32
0x22d30:    0c 24                              	or al, 0x24
; data inside code section at 0x22d32 -- 0x22d33
0x22d32:    e8                                                 |.               |
; dynamically linked function: _ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ at 0x22d33 -- 0x22d34
; data inside code section at 0x22d34 -- 0x22d3a
0x22d34:    ff ff ff 80 78 14                                  |....x.          |
; function: function_22d3a at 0x22d3a -- 0x22d44
0x22d3a:    00 74 04 c6                        	add byte ptr [esp + eax - 0x3a], dh
0x22d3e:    40                                 	inc eax
0x22d3f:    14 00                              	adc al, 0
0x22d41:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x22d44 -- 0x22d45
0x22d44:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x22d45 -- 0x22d46
; data inside code section at 0x22d46 -- 0x22d49
0x22d46:    ff ff ff                                           |...             |
; function: function_22d49 at 0x22d49 -- 0x22d56
0x22d49:    8b 4c 24 2c                        	mov ecx, dword ptr [esp + 0x2c]
0x22d4d:    83 69 1c 01                        	sub dword ptr [ecx + 0x1c], 1
0x22d51:    e9 b0 fe ff ff                     	jmp 0x22c06
; function: function_22d56 at 0x22d56 -- 0x22d5b
0x22d56:    e8 a3 de 00 00                     	call 0x30bfe <function_30bfe>
; function: function_22d5b at 0x22d5b -- 0x22d60
0x22d5b:    e8 3a df 00 00                     	call 0x30c9a <function_30c9a>
; function: function_22d60 at 0x22d60 -- 0x22d65
0x22d60:    e8 d1 df 00 00                     	call 0x30d36 <function_30d36>
; function: function_22d65 at 0x22d65 -- 0x22d66
; dynamically linked function: __stack_chk_fail at 0x22d66 -- 0x22d67
; data inside code section at 0x22d67 -- 0x22d6a
0x22d67:    ff ff ff                                           |...             |
; function: function_22d6a at 0x22d6a -- 0x22d89
0x22d6a:    c7 44 24 0c c0 de 02 00            	mov dword ptr [esp + 0xc], 0x2dec0 ; "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = bool, T1 = CNode*, T2 = bool, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*, bool)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >]"
0x22d72:    c7 44 24 08 ae 01 00 00            	mov dword ptr [esp + 8], 0x1ae
0x22d7a:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x22d82:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x22d89 -- 0x22d8a
0x22d89:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22d8a -- 0x22d8b
; data inside code section at 0x22d8b -- 0x22d8e
0x22d8b:    ff ff ff                                           |...             |
; function: function_22d8e at 0x22d8e -- 0x22dad
0x22d8e:    c7 44 24 0c 40 e4 02 00            	mov dword ptr [esp + 0xc], 0x2e440 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x22d96:    c7 44 24 08 96 00 00 00            	mov dword ptr [esp + 8], 0x96
0x22d9e:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x22da6:    c7 04 24 b9 a3 00 00               	mov dword ptr [esp], 0xa3b9 ; "map_it != _group_map.end()"
; data inside code section at 0x22dad -- 0x22dae
0x22dad:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22dae -- 0x22daf
; data inside code section at 0x22daf -- 0x22db3
0x22daf:    ff ff ff 89                                        |....            |
; function: function_22db3 at 0x22db3 -- 0x22db4
0x22db3:    c3                                 	ret 
; data inside code section at 0x22db4 -- 0x22dc1
0x22db4:    8b 45 00 89 2c 24 ff 50  10 89 1c 24 e8            |.E..,$.P...$.   |
; dynamically linked function: _Unwind_Resume at 0x22dc1 -- 0x22dc2
; data inside code section at 0x22dc2 -- 0x22dc5
0x22dc2:    ff ff ff                                           |...             |
; function: function_22dc5 at 0x22dc5 -- 0x22de4
0x22dc5:    c7 44 24 0c 40 e4 02 00            	mov dword ptr [esp + 0xc], 0x2e440 ; "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x22dcd:    c7 44 24 08 94 00 00 00            	mov dword ptr [esp + 8], 0x94
0x22dd5:    c7 44 24 04 74 dd 00 00            	mov dword ptr [esp + 4], 0xdd74 ; "/usr/include/boost/signals2/detail/slot_groups.hpp"
0x22ddd:    c7 04 24 a7 a3 00 00               	mov dword ptr [esp], 0xa3a7 ; "it != _list.end()"
; data inside code section at 0x22de4 -- 0x22de5
0x22de4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x22de5 -- 0x22de6
; data inside code section at 0x22de6 -- 0x22de9
0x22de6:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEE
; function: _ZNK5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiS8_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS4_bSB_EESH_EEEEEE at 0x22df0 -- 0x22e21
0x22df0:    83 ec 5c                           	sub esp, 0x5c
0x22df3:    89 5c 24 4c                        	mov dword ptr [esp + 0x4c], ebx
0x22df7:    8b 5c 24 60                        	mov ebx, dword ptr [esp + 0x60]
0x22dfb:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x22e01:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x22e05:    31 c0                              	xor eax, eax
0x22e07:    89 74 24 50                        	mov dword ptr [esp + 0x50], esi
0x22e0b:    89 7c 24 54                        	mov dword ptr [esp + 0x54], edi
0x22e0f:    8b 7c 24 64                        	mov edi, dword ptr [esp + 0x64]
0x22e13:    8d 43 0c                           	lea eax, [ebx + 0xc]
0x22e16:    89 6c 24 58                        	mov dword ptr [esp + 0x58], ebp
0x22e1a:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x22e1e:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x22e21 -- 0x22e22
0x22e21:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x22e22 -- 0x22e23
; data inside code section at 0x22e23 -- 0x22e3e
0x22e23:    ff ff ff 8b 33 85 f6 0f  84 5e 01 00 00 8b 06 85   |....3....^......|
0x22e33:    c0 0f 84 4f 01 00 00 39  c7 74 32                  |...O...9.t2     |
; function: function_22e3e at 0x22e3e -- 0x22e45
0x22e3e:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x22e42:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x22e45 -- 0x22e46
0x22e45:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x22e46 -- 0x22e47
; data inside code section at 0x22e47 -- 0x22e49
0x22e47:    ff ff                                              |..              |
; function: function_22e49 at 0x22e49 -- 0x22e6f
0x22e49:    ff 8b 54 24 3c 65                  	dec dword ptr [ebx + 0x653c2454]
0x22e4f:    33 15 14 00 00 00                  	xor edx, dword ptr [0x14]
0x22e55:    0f 85 3a 01 00 00                  	jne 0x22f95 <function_22f95>
0x22e5b:    8b 5c 24 4c                        	mov ebx, dword ptr [esp + 0x4c]
0x22e5f:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x22e63:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x22e67:    8b 6c 24 58                        	mov ebp, dword ptr [esp + 0x58]
0x22e6b:    83 c4 5c                           	add esp, 0x5c
0x22e6e:    c3                                 	ret 
; data inside code section at 0x22e6f -- 0x22e80
0x22e6f:    90 8b 43 04 85 c0 74 0c  8b 40 04 83 f8 01 0f 84   |..C...t..@......|
0x22e7f:    d7                                                 |.               |
; function: function_22e80 at 0x22e80 -- 0x22e8a
0x22e80:    00 00                              	add byte ptr [eax], al
0x22e82:    00 c7                              	add bh, al
0x22e84:    04 24                              	add al, 0x24
0x22e86:    10 00                              	adc byte ptr [eax], al
0x22e88:    00 00                              	add byte ptr [eax], al
; function: function_22e8a at 0x22e8a -- 0x22e8b
; dynamically linked function: _Znwj at 0x22e8b -- 0x22e8c
; data inside code section at 0x22e8c -- 0x22e99
0x22e8c:    ff ff ff 89 c5 c7 04 24  24 00 00 00 e8            |.......$$....   |
; dynamically linked function: _Znwj at 0x22e99 -- 0x22e9a
; data inside code section at 0x22e9a -- 0x22ec3
0x22e9a:    ff ff ff 89 44 24 1c 89  7c 24 04 89 04 24 e8 93   |....D$..|$...$..|
0x22eaa:    f5 01 00 8b 44 24 1c c7  45 04 00 00 00 00 89 45   |....D$..E......E|
0x22eba:    00 c7 04 24 10 00 00 00  e8                        |...$.....       |
; dynamically linked function: _Znwj at 0x22ec3 -- 0x22ec4
; data inside code section at 0x22ec4 -- 0x22f15
0x22ec4:    ff ff ff 8b 54 24 1c c7  40 04 01 00 00 00 c7 40   |....T$..@......@|
0x22ed4:    08 01 00 00 00 c7 00 08  15 03 00 89 50 0c 89 45   |............P..E|
0x22ee4:    04 8b 46 08 89 45 08 8b  46 0c 85 c0 89 45 0c 74   |..F..E..F....E.t|
0x22ef4:    04 f0 ff 40 04 3b 2b 0f  84 99 00 00 00 89 6c 24   |...@.;+.......l$|
0x22f04:    2c c7 44 24 30 00 00 00  00 c7 04 24 10 00 00 00   |,.D$0......$....|
0x22f14:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x22f15 -- 0x22f16
; data inside code section at 0x22f16 -- 0x22f6a
0x22f16:    ff ff ff 8b 54 24 2c c7  00 28 15 03 00 c7 40 04   |....T$,..(....@.|
0x22f26:    01 00 00 00 89 68 0c 8b  0b c7 40 08 01 00 00 00   |.....h....@.....|
0x22f36:    89 13 8b 53 04 89 43 04  8d 44 24 30 89 4c 24 2c   |...S..C..D$0.L$,|
0x22f46:    89 04 24 89 54 24 30 e8  de 03 01 00 8b 03 85 c0   |..$.T$0.........|
0x22f56:    74 36 8b 38 85 ff 74 2b  8b 07 c7 44 24 0c 00 00   |t6.8..t+...D$...|
0x22f66:    00 00 c7 44                                        |...D            |
; function: function_22f6a at 0x22f6a -- 0x22f89
0x22f6a:    24 04                              	and al, 4
0x22f6c:    00 00                              	add byte ptr [eax], al
0x22f6e:    00 00                              	add byte ptr [eax], al
0x22f70:    89 1c 24                           	mov dword ptr [esp], ebx
0x22f73:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x22f77:    8d 44 24 38                        	lea eax, [esp + 0x38]
0x22f7b:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x22f7f:    e8 bc 27 02 00                     	call 0x45740 <unknown_45740>
0x22f84:    e9 b5 fe ff ff                     	jmp 0x22e3e <function_22e3e>
; data inside code section at 0x22f89 -- 0x22f95
0x22f89:    e8 48 e2 00 00 66 90 e8  09 e1 00 00               |.H...f......    |
; function: function_22f95 at 0x22f95 -- 0x22f96
; dynamically linked function: __stack_chk_fail at 0x22f96 -- 0x22f97
; data inside code section at 0x22f97 -- 0x22fba
0x22f97:    ff ff ff c7 44 24 0c 40  e8 02 00 c7 44 24 08 87   |....D$.@....D$..|
0x22fa7:    01 00 00 c7 44 24 04 d0  d5 00 00 c7 04 24 d4 a3   |....D$.......$..|
0x22fb7:    00 00 e8                                           |...             |
; dynamically linked function: __assert_fail at 0x22fba -- 0x22fbb
; data inside code section at 0x22fbb -- 0x22fc2
0x22fbb:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x22fc2 -- 0x22fc3
; data inside code section at 0x22fc3 -- 0x22fcf
0x22fc3:    ff ff ff 89 2c 24 e8 82  e4 01 00 e8               |....,$......    |
; dynamically linked function: __cxa_rethrow at 0x22fcf -- 0x22fd0
; data inside code section at 0x22fd0 -- 0x22fd4
0x22fd0:    ff ff ff 89                                        |....            |
; function: function_22fd4 at 0x22fd4 -- 0x22fd5
0x22fd4:    c3                                 	ret 
; data inside code section at 0x22fd5 -- 0x22fdd
0x22fd5:    8b 44 24 1c 89 04 24 e8                            |.D$...$.        |
; dynamically linked function: _ZdlPv at 0x22fdd -- 0x22fde
; data inside code section at 0x22fde -- 0x22fe1
0x22fde:    ff ff ff                                           |...             |
; function: function_22fe1 at 0x22fe1 -- 0x22fe2
; data inside code section at 0x22fe2 -- 0x22fe5
0x22fe2:    2c 24 e8                                           |,$.             |
; dynamically linked function: _ZdlPv at 0x22fe5 -- 0x22fe6
; data inside code section at 0x22fe6 -- 0x22fe9
0x22fe6:    ff ff ff                                           |...             |
; function: function_22fe9 at 0x22fe9 -- 0x22fea
; data inside code section at 0x22fea -- 0x22ff9
0x22fea:    44 24 34 89 04 24 e8 2b  61 01 00 89 1c 24 e8      |D$4..$.+a....$. |
; dynamically linked function: _Unwind_Resume at 0x22ff9 -- 0x22ffa
; data inside code section at 0x22ffa -- 0x22ffc
0x22ffa:    ff ff                                              |..              |
; function: function_22ffc at 0x22ffc -- 0x23003
0x22ffc:    ff 89 c3 eb e8 89                  	dec dword ptr [ecx - 0x7617143d]
0x23002:    c3                                 	ret 
; function: function_23003 at 0x23003 -- 0x23005
0x23003:    eb dc                              	jmp 0x22fe1 <function_22fe1>
; data inside code section at 0x23005 -- 0x23009
0x23005:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x23009 -- 0x2300a
; data inside code section at 0x2300a -- 0x2301a
0x2300a:    ff ff ff 8b 44 24 1c 89  04 24 e8 a7 e5 01 00 e8   |....D$...$......|
; dynamically linked function: __cxa_rethrow at 0x2301a -- 0x2301b
; data inside code section at 0x2301b -- 0x2301f
0x2301b:    ff ff ff 89                                        |....            |
; function: function_2301f at 0x2301f -- 0x23020
0x2301f:    c3                                 	ret 
; data inside code section at 0x23020 -- 0x23021
0x23020:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x23021 -- 0x23022
; data inside code section at 0x23022 -- 0x23025
0x23022:    ff ff ff                                           |...             |
; function: function_23025 at 0x23025 -- 0x23027
0x23025:    eb c2                              	jmp 0x22fe9 <function_22fe9>
; data inside code section at 0x23027 -- 0x23028
0x23027:    89                                                 |.               |
; function: function_23028 at 0x23028 -- 0x23029
0x23028:    c3                                 	ret 
; data inside code section at 0x23029 -- 0x2302a
0x23029:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x2302a -- 0x2302b
; data inside code section at 0x2302b -- 0x2302d
0x2302b:    ff ff                                              |..              |
; function: function_2302d at 0x2302d -- 0x23030
0x2302d:    ff 66 90                           	jmp dword ptr [esi - 0x70]
; function: function_23030 at 0x23030 -- 0x23032
0x23030:    eb af                              	jmp 0x22fe1 <function_22fe1>
; section: .text._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
; function: _ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE at 0x23040 -- 0x23086
0x23040:    83 ec 4c                           	sub esp, 0x4c
0x23043:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x23047:    8b 6c 24 54                        	mov ebp, dword ptr [esp + 0x54]
0x2304b:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2304f:    8b 5c 24 50                        	mov ebx, dword ptr [esp + 0x50]
0x23053:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23059:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2305d:    31 c0                              	xor eax, eax
0x2305f:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x23063:    83 fd 0a                           	cmp ebp, 0xa
0x23066:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x2306a:    89 5c 24 1c                        	mov dword ptr [esp + 0x1c], ebx
0x2306e:    76 1f                              	jbe 0x2308f <function_2308f>
0x23070:    81 fd 55 55 55 15                  	cmp ebp, 0x15555555
0x23076:    0f 87 09 01 00 00                  	ja 0x23185 <function_23185>
0x2307c:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x23080:    c1 e0 02                           	shl eax, 2
0x23083:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x23086 -- 0x23087
0x23086:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x23087 -- 0x23088
; data inside code section at 0x23088 -- 0x2308f
0x23088:    ff ff ff 89 44 24 1c                               |....D$.         |
; function: function_2308f at 0x2308f -- 0x23180
0x2308f:    8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
0x23095:    8b 73 7c                           	mov esi, dword ptr [ebx + 0x7c]
0x23098:    8d 04 40                           	lea eax, [eax + eax*2]
0x2309b:    8d 04 86                           	lea eax, [esi + eax*4]
0x2309e:    39 c6                              	cmp esi, eax
0x230a0:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x230a4:    74 66                              	je 0x2310c <function_2308f+0x7d>
0x230a6:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x230aa:    85 ff                              	test edi, edi
0x230ac:    74 52                              	je 0x23100 <function_2308f+0x71>
0x230ae:    8b 16                              	mov edx, dword ptr [esi]
0x230b0:    89 d0                              	mov eax, edx
0x230b2:    c1 f8 1f                           	sar eax, 0x1f
0x230b5:    31 d0                              	xor eax, edx
0x230b7:    83 f8 13                           	cmp eax, 0x13
0x230ba:    76 7c                              	jbe 0x23138 <function_2308f+0xa9>
0x230bc:    c7 44 24 0c 00 a1 02 00            	mov dword ptr [esp + 0xc], 0x2a100 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x230c4:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x230cc:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x230d4:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
0x230db:    e8 fc ff ff ff                     	call 0x230dc
0x230e0:    85 d2                              	test edx, edx
0x230e2:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x230e5:    78 7e                              	js 0x23165 <function_2308f+0xd6>
0x230e7:    8b 10                              	mov edx, dword ptr [eax]
0x230e9:    89 04 24                           	mov dword ptr [esp], eax
0x230ec:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x230ef:    89 47 04                           	mov dword ptr [edi + 4], eax
0x230f2:    8b 06                              	mov eax, dword ptr [esi]
0x230f4:    89 c2                              	mov edx, eax
0x230f6:    c1 fa 1f                           	sar edx, 0x1f
0x230f9:    31 d0                              	xor eax, edx
0x230fb:    89 07                              	mov dword ptr [edi], eax
0x230fd:    8d 76 00                           	lea esi, [esi]
0x23100:    83 c6 0c                           	add esi, 0xc
0x23103:    83 c7 0c                           	add edi, 0xc
0x23106:    39 74 24 18                        	cmp dword ptr [esp + 0x18], esi
0x2310a:    75 9e                              	jne 0x230aa <function_2308f+0x1b>
0x2310c:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x23110:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x23117:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2311b:    75 63                              	jne 0x23180 <function_2308f+0xec>
0x2311d:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x23121:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x23125:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x23129:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x2312d:    83 c4 4c                           	add esp, 0x4c
0x23130:    c3                                 	ret 
; data inside code section at 0x23131 -- 0x23138
0x23131:    8d b4 26 00 00 00 00                               |..&....         |
0x23138:    ff 24 85 d0 31 02 00               	jmp dword ptr [eax*4 + 0x231d0]
; data inside code section at 0x2313f -- 0x23140
0x2313f:    90                                                 |.               |
0x23140:    e8 4b 00 00 00                     	call 0x23190 <function_23190>
0x23145:    8d 76 00                           	lea esi, [esi]
0x23148:    85 d2                              	test edx, edx
0x2314a:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x2314d:    8d 76 00                           	lea esi, [esi]
0x23150:    78 1a                              	js 0x2316c <function_2308f+0xdd>
0x23152:    89 47 04                           	mov dword ptr [edi + 4], eax
0x23155:    8b 46 08                           	mov eax, dword ptr [esi + 8]
0x23158:    85 c0                              	test eax, eax
0x2315a:    89 47 08                           	mov dword ptr [edi + 8], eax
0x2315d:    74 93                              	je 0x230f2 <function_2308f+0x63>
0x2315f:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x23163:    eb 8d                              	jmp 0x230f2 <function_2308f+0x63>
0x23165:    8b 00                              	mov eax, dword ptr [eax]
0x23167:    e9 7b ff ff ff                     	jmp 0x230e7 <function_2308f+0x58>
0x2316c:    8b 10                              	mov edx, dword ptr [eax]
0x2316e:    89 57 04                           	mov dword ptr [edi + 4], edx
0x23171:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x23174:    85 c0                              	test eax, eax
0x23176:    89 47 08                           	mov dword ptr [edi + 8], eax
0x23179:    75 e4                              	jne 0x2315f <function_2308f+0xd0>
0x2317b:    e9 72 ff ff ff                     	jmp 0x230f2 <function_2308f+0x63>
; data inside code section at 0x23180 -- 0x23181
0x23180:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x23181 -- 0x23182
; data inside code section at 0x23182 -- 0x23185
0x23182:    ff ff ff                                           |...             |
; function: function_23185 at 0x23185 -- 0x23186
; dynamically linked function: _ZSt17__throw_bad_allocv at 0x23186 -- 0x23187
; data inside code section at 0x23187 -- 0x2318e
0x23187:    ff ff ff 89 04 24 e8                               |.....$.         |
; dynamically linked function: __cxa_begin_catch at 0x2318e -- 0x2318f
; data inside code section at 0x2318f -- 0x23190
0x2318f:    ff                                                 |.               |
; function: function_23190 at 0x23190 -- 0x23191
; function: function_23191 at 0x23191 -- 0x231a7
0x23191:    ff 8b 74 24 1c 39                  	dec dword ptr [ebx + 0x391c2474]
0x23197:    f7 74 0d 89                        	div dword ptr [ebp + ecx - 0x77]
0x2319b:    34 24                              	xor al, 0x24
0x2319d:    e8 0e 26 01 00                     	call 0x357b0 <unknown_357b0>
0x231a2:    83 c6 0c                           	add esi, 0xc
0x231a5:    eb ef                              	jmp 0x23196
; data inside code section at 0x231a7 -- 0x231af
0x231a7:    e8 fc ff ff ff 89 c6 e8                            |........        |
; dynamically linked function: __cxa_end_catch at 0x231af -- 0x231b0
; data inside code section at 0x231b0 -- 0x231cb
0x231b0:    ff ff ff 8b 44 24 1c 89  6c 24 08 89 1c 24 89 44   |....D$..l$...$.D|
0x231c0:    24 04 e8 19 b3 00 00 89  34 24 e8                  |$.......4$.     |
; dynamically linked function: _Unwind_Resume at 0x231cb -- 0x231cc
; data inside code section at 0x231cc -- 0x231cf
0x231cc:    ff ff ff                                           |...             |
; section: .text._ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_
; function: _ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_ at 0x23220 -- 0x23290
0x23220:    83 ec 4c                           	sub esp, 0x4c
0x23223:    89 74 24 40                        	mov dword ptr [esp + 0x40], esi
0x23227:    8b 74 24 50                        	mov esi, dword ptr [esp + 0x50]
0x2322b:    89 5c 24 3c                        	mov dword ptr [esp + 0x3c], ebx
0x2322f:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23235:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x23239:    31 c0                              	xor eax, eax
0x2323b:    89 7c 24 44                        	mov dword ptr [esp + 0x44], edi
0x2323f:    8b 7c 24 54                        	mov edi, dword ptr [esp + 0x54]
0x23243:    8b 1e                              	mov ebx, dword ptr [esi]
0x23245:    89 6c 24 48                        	mov dword ptr [esp + 0x48], ebp
0x23249:    8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
0x2324f:    3b 43 78                           	cmp eax, dword ptr [ebx + 0x78]
0x23252:    74 54                              	je 0x232a8 <function_232a8>
0x23254:    8d 2c 40                           	lea ebp, [eax + eax*2]
0x23257:    c1 e5 02                           	shl ebp, 2
0x2325a:    03 6b 7c                           	add ebp, dword ptr [ebx + 0x7c]
0x2325d:    0f 84 2d 01 00 00                  	je 0x23390 <function_23390>
0x23263:    8b 17                              	mov edx, dword ptr [edi]
0x23265:    89 d0                              	mov eax, edx
0x23267:    c1 f8 1f                           	sar eax, 0x1f
0x2326a:    31 d0                              	xor eax, edx
0x2326c:    83 f8 13                           	cmp eax, 0x13
0x2326f:    76 27                              	jbe 0x23298 <function_23298>
0x23271:    c7 44 24 0c 00 a1 02 00            	mov dword ptr [esp + 0xc], 0x2a100 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x23279:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x23281:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x23289:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x23290 -- 0x23291
0x23290:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23291 -- 0x23292
; data inside code section at 0x23292 -- 0x23298
0x23292:    ff ff ff 8d 76 00                                  |....v.          |
; function: function_23298 at 0x23298 -- 0x2329f
0x23298:    ff 24 85 e0 34 02 00               	jmp dword ptr [eax*4 + 0x234e0]
; data inside code section at 0x2329f -- 0x232a1
0x2329f:    90 e8                                              |..              |
; function: function_232a1 at 0x232a1 -- 0x232a2
0x232a1:    cb                                 	retf 
; data inside code section at 0x232a2 -- 0x232a8
0x232a2:    00 00 00 8d 76 00                                  |....v.          |
; function: function_232a8 at 0x232a8 -- 0x2332a
0x232a8:    83 f8 09                           	cmp eax, 9
0x232ab:    90                                 	nop 
0x232ac:    8d 74 26 00                        	lea esi, [esi]
0x232b0:    0f 86 bb 01 00 00                  	jbe 0x23471 <function_23471>
0x232b6:    8d 68 01                           	lea ebp, [eax + 1]
0x232b9:    39 e8                              	cmp eax, ebp
0x232bb:    0f 83 9e 00 00 00                  	jae 0x2335f <function_2335f>
0x232c1:    c1 e0 02                           	shl eax, 2
0x232c4:    39 e8                              	cmp eax, ebp
0x232c6:    0f 42 c5                           	cmovb eax, ebp
0x232c9:    89 44 24 10                        	mov dword ptr [esp + 0x10], eax
0x232cd:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x232d1:    8d 44 24 2b                        	lea eax, [esp + 0x2b]
0x232d5:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x232d9:    89 1c 24                           	mov dword ptr [esp], ebx
0x232dc:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x232e0:    e8 7b 2f 02 00                     	call 0x46260 <unknown_46260>
0x232e5:    8b 4b 7c                           	mov ecx, dword ptr [ebx + 0x7c]
0x232e8:    85 c9                              	test ecx, ecx
0x232ea:    89 44 24 18                        	mov dword ptr [esp + 0x18], eax
0x232ee:    74 3f                              	je 0x2332f <function_2332f>
0x232f0:    8b 43 78                           	mov eax, dword ptr [ebx + 0x78]
0x232f3:    83 f8 09                           	cmp eax, 9
0x232f6:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x232fa:    0f 86 29 01 00 00                  	jbe 0x23429 <function_23429>
0x23300:    39 d9                              	cmp ecx, ebx
0x23302:    0f 84 18 01 00 00                  	je 0x23420 <function_23420>
0x23308:    8b 93 80 00 00 00                  	mov edx, dword ptr [ebx + 0x80]
0x2330e:    39 54 24 14                        	cmp dword ptr [esp + 0x14], edx
0x23312:    0f 82 11 01 00 00                  	jb 0x23429 <function_23429>
0x23318:    85 d2                              	test edx, edx
0x2331a:    0f 85 a0 00 00 00                  	jne 0x233c0 <function_233c0>
0x23320:    83 7c 24 14 0a                     	cmp dword ptr [esp + 0x14], 0xa
0x23325:    76 08                              	jbe 0x2332f <function_2332f>
0x23327:    89 0c 24                           	mov dword ptr [esp], ecx
; data inside code section at 0x2332a -- 0x2332b
0x2332a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2332b -- 0x2332c
; data inside code section at 0x2332c -- 0x2332f
0x2332c:    ff ff ff                                           |...             |
; function: function_2332f at 0x2332f -- 0x2335f
0x2332f:    8b 44 24 18                        	mov eax, dword ptr [esp + 0x18]
0x23333:    8b 54 24 10                        	mov edx, dword ptr [esp + 0x10]
0x23337:    89 43 7c                           	mov dword ptr [ebx + 0x7c], eax
0x2333a:    8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
0x23340:    89 53 78                           	mov dword ptr [ebx + 0x78], edx
0x23343:    39 d0                              	cmp eax, edx
0x23345:    0f 87 4a 01 00 00                  	ja 0x23495 <function_23495>
0x2334b:    3b 6c 24 10                        	cmp ebp, dword ptr [esp + 0x10]
0x2334f:    0f 87 64 01 00 00                  	ja 0x234b9 <function_234b9>
0x23355:    3b 44 24 10                        	cmp eax, dword ptr [esp + 0x10]
0x23359:    0f 85 f5 fe ff ff                  	jne 0x23254
; function: function_2335f at 0x2335f -- 0x23390
0x2335f:    e8 aa e4 00 00                     	call 0x3180e <function_3180e>
0x23364:    8d 74 26 00                        	lea esi, [esi]
0x23368:    85 d2                              	test edx, edx
0x2336a:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x2336d:    0f 88 de 00 00 00                  	js 0x23451 <function_23451>
0x23373:    8b 10                              	mov edx, dword ptr [eax]
0x23375:    89 04 24                           	mov dword ptr [esp], eax
0x23378:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x2337b:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x2337e:    8b 07                              	mov eax, dword ptr [edi]
0x23380:    89 c2                              	mov edx, eax
0x23382:    c1 fa 1f                           	sar edx, 0x1f
0x23385:    31 d0                              	xor eax, edx
0x23387:    89 45 00                           	mov dword ptr [ebp], eax
0x2338a:    8b 83 80 00 00 00                  	mov eax, dword ptr [ebx + 0x80]
; function: function_23390 at 0x23390 -- 0x233c0
0x23390:    83 c0 01                           	add eax, 1
0x23393:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x23397:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x2339e:    89 83 80 00 00 00                  	mov dword ptr [ebx + 0x80], eax
0x233a4:    89 f0                              	mov eax, esi
0x233a6:    0f 85 c0 00 00 00                  	jne 0x2346c <function_2346c>
0x233ac:    8b 5c 24 3c                        	mov ebx, dword ptr [esp + 0x3c]
0x233b0:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x233b4:    8b 7c 24 44                        	mov edi, dword ptr [esp + 0x44]
0x233b8:    8b 6c 24 48                        	mov ebp, dword ptr [esp + 0x48]
0x233bc:    83 c4 4c                           	add esp, 0x4c
0x233bf:    c3                                 	ret 
; function: function_233c0 at 0x233c0 -- 0x23420
0x233c0:    8d 44 52 fd                        	lea eax, [edx + edx*2 - 3]
0x233c4:    8d 14 52                           	lea edx, [edx + edx*2]
0x233c7:    c1 e2 02                           	shl edx, 2
0x233ca:    8d 04 81                           	lea eax, [ecx + eax*4]
0x233cd:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x233d1:    89 c2                              	mov edx, eax
0x233d3:    2b 54 24 1c                        	sub edx, dword ptr [esp + 0x1c]
0x233d7:    39 d0                              	cmp eax, edx
0x233d9:    89 54 24 1c                        	mov dword ptr [esp + 0x1c], edx
0x233dd:    0f 86 3d ff ff ff                  	jbe 0x23320
0x233e3:    89 74 24 14                        	mov dword ptr [esp + 0x14], esi
0x233e7:    89 d6                              	mov esi, edx
0x233e9:    89 7c 24 1c                        	mov dword ptr [esp + 0x1c], edi
0x233ed:    89 df                              	mov edi, ebx
0x233ef:    89 c3                              	mov ebx, eax
0x233f1:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x233f8:    89 1c 24                           	mov dword ptr [esp], ebx
0x233fb:    83 eb 0c                           	sub ebx, 0xc
0x233fe:    e8 8d 25 01 00                     	call 0x35990 <unknown_35990>
0x23403:    39 de                              	cmp esi, ebx
0x23405:    72 f1                              	jb 0x233f8 <function_233c0+0x38>
0x23407:    89 fb                              	mov ebx, edi
0x23409:    8b 74 24 14                        	mov esi, dword ptr [esp + 0x14]
0x2340d:    8b 43 78                           	mov eax, dword ptr [ebx + 0x78]
0x23410:    8b 7c 24 1c                        	mov edi, dword ptr [esp + 0x1c]
0x23414:    8b 4b 7c                           	mov ecx, dword ptr [ebx + 0x7c]
0x23417:    89 44 24 14                        	mov dword ptr [esp + 0x14], eax
0x2341b:    e9 00 ff ff ff                     	jmp 0x23320
; function: function_23420 at 0x23420 -- 0x23429
0x23420:    83 f8 0a                           	cmp eax, 0xa
0x23423:    0f 84 df fe ff ff                  	je 0x23308
; function: function_23429 at 0x23429 -- 0x23451
0x23429:    e8 ac e3 00 00                     	call 0x317da <function_317da>
0x2342e:    66 90                              	nop 
0x23430:    85 d2                              	test edx, edx
0x23432:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x23435:    78 21                              	js 0x23458 <function_23458>
0x23437:    89 45 04                           	mov dword ptr [ebp + 4], eax
0x2343a:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x2343d:    85 c0                              	test eax, eax
0x2343f:    89 45 08                           	mov dword ptr [ebp + 8], eax
0x23442:    0f 84 36 ff ff ff                  	je 0x2337e
0x23448:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x2344c:    e9 2d ff ff ff                     	jmp 0x2337e
; function: function_23451 at 0x23451 -- 0x23458
0x23451:    8b 00                              	mov eax, dword ptr [eax]
0x23453:    e9 1b ff ff ff                     	jmp 0x23373
; function: function_23458 at 0x23458 -- 0x2346c
0x23458:    8b 10                              	mov edx, dword ptr [eax]
0x2345a:    89 55 04                           	mov dword ptr [ebp + 4], edx
0x2345d:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x23460:    85 c0                              	test eax, eax
0x23462:    89 45 08                           	mov dword ptr [ebp + 8], eax
0x23465:    75 e1                              	jne 0x23448 <function_23448>
0x23467:    e9 12 ff ff ff                     	jmp 0x2337e
; function: function_2346c at 0x2346c -- 0x2346d
; dynamically linked function: __stack_chk_fail at 0x2346d -- 0x2346e
; data inside code section at 0x2346e -- 0x23471
0x2346e:    ff ff ff                                           |...             |
; function: function_23471 at 0x23471 -- 0x23490
0x23471:    c7 44 24 0c e0 a7 02 00            	mov dword ptr [esp + 0xc], 0x2a7e0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x23479:    c7 44 24 08 15 03 00 00            	mov dword ptr [esp + 8], 0x315
0x23481:    c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x23489:    c7 04 24 e6 a3 00 00               	mov dword ptr [esp], 0xa3e6 ; "members_.capacity_ >= N"
; data inside code section at 0x23490 -- 0x23491
0x23490:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23491 -- 0x23492
; data inside code section at 0x23492 -- 0x23495
0x23492:    ff ff ff                                           |...             |
; function: function_23495 at 0x23495 -- 0x234b4
0x23495:    c7 44 24 0c 80 aa 02 00            	mov dword ptr [esp + 0xc], 0x2aa80 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve_impl(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x2349d:    c7 44 24 08 34 01 00 00            	mov dword ptr [esp + 8], 0x134
0x234a5:    c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x234ad:    c7 04 24 fe a3 00 00               	mov dword ptr [esp], 0xa3fe ; "size_ <= members_.capacity_"
; data inside code section at 0x234b4 -- 0x234b5
0x234b4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x234b5 -- 0x234b6
; data inside code section at 0x234b6 -- 0x234b9
0x234b6:    ff ff ff                                           |...             |
; function: function_234b9 at 0x234b9 -- 0x234d8
0x234b9:    c7 44 24 0c e0 a7 02 00            	mov dword ptr [esp + 0xc], 0x2a7e0 ; "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x234c1:    c7 44 24 08 1b 03 00 00            	mov dword ptr [esp + 8], 0x31b
0x234c9:    c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x234d1:    c7 04 24 1a a4 00 00               	mov dword ptr [esp], 0xa41a ; "members_.capacity_ >= n"
; data inside code section at 0x234d8 -- 0x234d9
0x234d8:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x234d9 -- 0x234da
; data inside code section at 0x234da -- 0x234dd
0x234da:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv at 0x23530 -- 0x23754
0x23530:    55                                 	push ebp
0x23531:    57                                 	push edi
0x23532:    56                                 	push esi
0x23533:    53                                 	push ebx
0x23534:    83 ec 6c                           	sub esp, 0x6c
0x23537:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x2353e:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x23545:    89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x23549:    31 d2                              	xor edx, edx
0x2354b:    89 c1                              	mov ecx, eax
0x2354d:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x23551:    8b 00                              	mov eax, dword ptr [eax]
0x23553:    3b 41 0c                           	cmp eax, dword ptr [ecx + 0xc]
0x23556:    0f 84 8b 01 00 00                  	je 0x236e7 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1b7>
0x2355c:    39 41 04                           	cmp dword ptr [ecx + 4], eax
0x2355f:    0f 84 4e 02 00 00                  	je 0x237b3 <function_237b3>
0x23565:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x23568:    85 c0                              	test eax, eax
0x2356a:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2356e:    0f 84 c1 01 00 00                  	je 0x23735 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x205>
0x23574:    8d 7c 24 50                        	lea edi, [esp + 0x50]
0x23578:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2357c:    8b 02                              	mov eax, dword ptr [edx]
0x2357e:    89 14 24                           	mov dword ptr [esp], edx
0x23581:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x23584:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23588:    8b 71 08                           	mov esi, dword ptr [ecx + 8]
0x2358b:    8b ae 88 00 00 00                  	mov ebp, dword ptr [esi + 0x88]
0x23591:    85 ed                              	test ebp, ebp
0x23593:    0f 85 c7 01 00 00                  	jne 0x23760 <function_23760>
0x23599:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x2359d:    8d 46 08                           	lea eax, [esi + 8]
0x235a0:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x235a4:    8b 02                              	mov eax, dword ptr [edx]
0x235a6:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x235a9:    85 ed                              	test ebp, ebp
0x235ab:    0f 84 34 02 00 00                  	je 0x237e5 <function_237e5>
0x235b1:    8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0x235b4:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x235b7:    75 33                              	jne 0x235ec <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0xbc>
0x235b9:    e9 ea 00 00 00                     	jmp 0x236a8 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x178>
; data inside code section at 0x235be -- 0x235c0
0x235be:    66 90                                              |f.              |
0x235c0:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x235c4:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x235c8:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x235cc:    8d 44 24 40                        	lea eax, [esp + 0x40]
0x235d0:    89 04 24                           	mov dword ptr [esp], eax
0x235d3:    e8 78 31 02 00                     	call 0x46750 <unknown_46750>
0x235d8:    89 3c 24                           	mov dword ptr [esp], edi
0x235db:    e8 c0 26 01 00                     	call 0x35ca0 <unknown_35ca0>
0x235e0:    83 c3 0c                           	add ebx, 0xc
0x235e3:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x235e6:    0f 84 a4 00 00 00                  	je 0x23690 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x160>
0x235ec:    8b 03                              	mov eax, dword ptr [ebx]
0x235ee:    8d 4c 24 4f                        	lea ecx, [esp + 0x4f]
0x235f2:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x235f6:    8d 73 04                           	lea esi, [ebx + 4]
0x235f9:    8d 4c 24 44                        	lea ecx, [esp + 0x44]
0x235fd:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x23605:    89 c2                              	mov edx, eax
0x23607:    c1 fa 1f                           	sar edx, 0x1f
0x2360a:    31 c2                              	xor edx, eax
0x2360c:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x23614:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x23619:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x2361e:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x23622:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x23626:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x2362a:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2362e:    89 3c 24                           	mov dword ptr [esp], edi
0x23631:    e8 2a e9 01 00                     	call 0x41f60 <unknown_41f60>
0x23636:    83 ec 04                           	sub esp, 4
0x23639:    8d 44 24 4e                        	lea eax, [esp + 0x4e]
0x2363d:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x23641:    8b 03                              	mov eax, dword ptr [ebx]
0x23643:    8d 4c 24 48                        	lea ecx, [esp + 0x48]
0x23647:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2364f:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x23657:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x2365c:    89 c2                              	mov edx, eax
0x2365e:    c1 fa 1f                           	sar edx, 0x1f
0x23661:    31 c2                              	xor edx, eax
0x23663:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x23668:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x2366c:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x23670:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x23674:    89 04 24                           	mov dword ptr [esp], eax
0x23677:    e8 94 bc 01 00                     	call 0x3f310 <unknown_3f310>
0x2367c:    84 c0                              	test al, al
0x2367e:    0f 84 3c ff ff ff                  	je 0x235c0 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x90>
0x23684:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x23688:    89 3c 24                           	mov dword ptr [esp], edi
0x2368b:    e8 10 26 01 00                     	call 0x35ca0 <unknown_35ca0>
0x23690:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x23694:    8b 02                              	mov eax, dword ptr [edx]
0x23696:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x23699:    85 ed                              	test ebp, ebp
0x2369b:    0f 84 44 01 00 00                  	je 0x237e5 <function_237e5>
0x236a1:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x236a5:    8b 71 08                           	mov esi, dword ptr [ecx + 8]
0x236a8:    80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0x236ac:    74 52                              	je 0x23700 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1d0>
0x236ae:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x236b1:    83 86 90 00 00 00 01               	add dword ptr [esi + 0x90], 1
0x236b8:    85 c0                              	test eax, eax
0x236ba:    74 07                              	je 0x236c3 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x193>
0x236bc:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x236bf:    85 c0                              	test eax, eax
0x236c1:    75 44                              	jne 0x23707 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1d7>
0x236c3:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x236c7:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x236cb:    8b 02                              	mov eax, dword ptr [edx]
0x236cd:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x236d0:    8b 01                              	mov eax, dword ptr [ecx]
0x236d2:    89 0c 24                           	mov dword ptr [esp], ecx
0x236d5:    ff 50 10                           	call dword ptr [eax + 0x10]
0x236d8:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x236dc:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x236df:    39 10                              	cmp dword ptr [eax], edx
0x236e1:    0f 84 cc 00 00 00                  	je 0x237b3 <function_237b3>
0x236e7:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x236eb:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x236f2:    0f 85 e8 00 00 00                  	jne 0x237e0 <function_237e0>
0x236f8:    83 c4 6c                           	add esp, 0x6c
0x236fb:    5b                                 	pop ebx
0x236fc:    5e                                 	pop esi
0x236fd:    5f                                 	pop edi
0x236fe:    5d                                 	pop ebp
0x236ff:    c3                                 	ret 
0x23700:    83 86 94 00 00 00 01               	add dword ptr [esi + 0x94], 1
0x23707:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x2370b:    8b 01                              	mov eax, dword ptr [ecx]
0x2370d:    89 0c 24                           	mov dword ptr [esp], ecx
0x23710:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23713:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x23717:    8b 02                              	mov eax, dword ptr [edx]
0x23719:    8b 00                              	mov eax, dword ptr [eax]
0x2371b:    3b 42 04                           	cmp eax, dword ptr [edx + 4]
0x2371e:    89 02                              	mov dword ptr [edx], eax
0x23720:    0f 84 8d 00 00 00                  	je 0x237b3 <function_237b3>
0x23726:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x23729:    85 c0                              	test eax, eax
0x2372b:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2372f:    0f 85 43 fe ff ff                  	jne 0x23578 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS5_EEENSA_IFSsRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x48>
0x23735:    c7 44 24 0c c0 f9 02 00            	mov dword ptr [esp + 0xc], 0x2f9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]"
0x2373d:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x23745:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x2374d:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x23754 -- 0x23755
0x23754:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23755 -- 0x23756
; data inside code section at 0x23756 -- 0x23760
0x23756:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_23760 at 0x23760 -- 0x237b3
0x23760:    8b 86 84 00 00 00                  	mov eax, dword ptr [esi + 0x84]
0x23766:    8d 5c 6d fd                        	lea ebx, [ebp + ebp*2 - 3]
0x2376a:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x2376d:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x23771:    89 da                              	mov edx, ebx
0x23773:    c1 e0 02                           	shl eax, 2
0x23776:    29 c2                              	sub edx, eax
0x23778:    39 d3                              	cmp ebx, edx
0x2377a:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x2377e:    76 2d                              	jbe 0x237ad <function_23760+0x4d>
0x23780:    89 1c 24                           	mov dword ptr [esp], ebx
0x23783:    e8 18 25 01 00                     	call 0x35ca0 <unknown_35ca0>
0x23788:    83 eb 0c                           	sub ebx, 0xc
0x2378b:    39 5c 24 34                        	cmp dword ptr [esp + 0x34], ebx
0x2378f:    72 ef                              	jb 0x23780 <function_23760+0x20>
0x23791:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23795:    8b 86 88 00 00 00                  	mov eax, dword ptr [esi + 0x88]
0x2379b:    8b 51 08                           	mov edx, dword ptr [ecx + 8]
0x2379e:    29 e8                              	sub eax, ebp
0x237a0:    89 86 88 00 00 00                  	mov dword ptr [esi + 0x88], eax
0x237a6:    89 d6                              	mov esi, edx
0x237a8:    e9 ec fd ff ff                     	jmp 0x23599
0x237ad:    89 f2                              	mov edx, esi
0x237af:    31 c0                              	xor eax, eax
0x237b1:    eb ed                              	jmp 0x237a0 <function_23760+0x40>
; function: function_237b3 at 0x237b3 -- 0x237c2
0x237b3:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x237b7:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x237ba:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x237bd:    e9 25 ff ff ff                     	jmp 0x236e7
; data inside code section at 0x237c2 -- 0x237c3
0x237c2:    89                                                 |.               |
; function: function_237c3 at 0x237c3 -- 0x237c4
0x237c3:    c3                                 	ret 
; data inside code section at 0x237c4 -- 0x237cc
0x237c4:    89 3c 24 e8 d4 24 01 00                            |.<$..$..        |
; function: function_237cc at 0x237cc -- 0x237e0
0x237cc:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x237d0:    8b 02                              	mov eax, dword ptr [edx]
0x237d2:    89 14 24                           	mov dword ptr [esp], edx
0x237d5:    ff 50 10                           	call dword ptr [eax + 0x10]
0x237d8:    89 1c 24                           	mov dword ptr [esp], ebx
0x237db:    e8 fc ff ff ff                     	call 0x237dc
; function: function_237e0 at 0x237e0 -- 0x237e1
; dynamically linked function: __stack_chk_fail at 0x237e1 -- 0x237e2
; data inside code section at 0x237e2 -- 0x237e5
0x237e2:    ff ff ff                                           |...             |
; function: function_237e5 at 0x237e5 -- 0x237ee
0x237e5:    e8 60 e1 00 00                     	call 0x3194a <function_3194a>
0x237ea:    89 c3                              	mov ebx, eax
0x237ec:    eb de                              	jmp 0x237cc <function_237cc>
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv at 0x237f0 -- 0x23a14
0x237f0:    55                                 	push ebp
0x237f1:    57                                 	push edi
0x237f2:    56                                 	push esi
0x237f3:    53                                 	push ebx
0x237f4:    83 ec 6c                           	sub esp, 0x6c
0x237f7:    8b 84 24 80 00 00 00               	mov eax, dword ptr [esp + 0x80]
0x237fe:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x23805:    89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x23809:    31 d2                              	xor edx, edx
0x2380b:    89 c1                              	mov ecx, eax
0x2380d:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x23811:    8b 00                              	mov eax, dword ptr [eax]
0x23813:    3b 41 0c                           	cmp eax, dword ptr [ecx + 0xc]
0x23816:    0f 84 8b 01 00 00                  	je 0x239a7 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1b7>
0x2381c:    39 41 04                           	cmp dword ptr [ecx + 4], eax
0x2381f:    0f 84 4e 02 00 00                  	je 0x23a73 <function_23a73>
0x23825:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x23828:    85 c0                              	test eax, eax
0x2382a:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x2382e:    0f 84 c1 01 00 00                  	je 0x239f5 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x205>
0x23834:    8d 7c 24 50                        	lea edi, [esp + 0x50]
0x23838:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x2383c:    8b 02                              	mov eax, dword ptr [edx]
0x2383e:    89 14 24                           	mov dword ptr [esp], edx
0x23841:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x23844:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23848:    8b 71 08                           	mov esi, dword ptr [ecx + 8]
0x2384b:    8b ae 84 00 00 00                  	mov ebp, dword ptr [esi + 0x84]
0x23851:    85 ed                              	test ebp, ebp
0x23853:    0f 85 c7 01 00 00                  	jne 0x23a20 <function_23a20>
0x23859:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x2385d:    8d 46 04                           	lea eax, [esi + 4]
0x23860:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x23864:    8b 02                              	mov eax, dword ptr [edx]
0x23866:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x23869:    85 ed                              	test ebp, ebp
0x2386b:    0f 84 34 02 00 00                  	je 0x23aa5 <function_23aa5>
0x23871:    8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0x23874:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x23877:    75 33                              	jne 0x238ac <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0xbc>
0x23879:    e9 ea 00 00 00                     	jmp 0x23968 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x178>
; data inside code section at 0x2387e -- 0x23880
0x2387e:    66 90                                              |f.              |
0x23880:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x23884:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x23888:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x2388c:    8d 44 24 40                        	lea eax, [esp + 0x40]
0x23890:    89 04 24                           	mov dword ptr [esp], eax
0x23893:    e8 78 31 02 00                     	call 0x46a10 <unknown_46a10>
0x23898:    89 3c 24                           	mov dword ptr [esp], edi
0x2389b:    e8 c0 26 01 00                     	call 0x35f60 <unknown_35f60>
0x238a0:    83 c3 0c                           	add ebx, 0xc
0x238a3:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x238a6:    0f 84 a4 00 00 00                  	je 0x23950 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x160>
0x238ac:    8b 03                              	mov eax, dword ptr [ebx]
0x238ae:    8d 4c 24 4f                        	lea ecx, [esp + 0x4f]
0x238b2:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x238b6:    8d 73 04                           	lea esi, [ebx + 4]
0x238b9:    8d 4c 24 44                        	lea ecx, [esp + 0x44]
0x238bd:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x238c5:    89 c2                              	mov edx, eax
0x238c7:    c1 fa 1f                           	sar edx, 0x1f
0x238ca:    31 c2                              	xor edx, eax
0x238cc:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x238d4:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x238d9:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x238de:    89 74 24 10                        	mov dword ptr [esp + 0x10], esi
0x238e2:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x238e6:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x238ea:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x238ee:    89 3c 24                           	mov dword ptr [esp], edi
0x238f1:    e8 2a e9 01 00                     	call 0x42220 <unknown_42220>
0x238f6:    83 ec 04                           	sub esp, 4
0x238f9:    8d 44 24 4e                        	lea eax, [esp + 0x4e]
0x238fd:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x23901:    8b 03                              	mov eax, dword ptr [ebx]
0x23903:    8d 4c 24 48                        	lea ecx, [esp + 0x48]
0x23907:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2390f:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x23917:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x2391c:    89 c2                              	mov edx, eax
0x2391e:    c1 fa 1f                           	sar edx, 0x1f
0x23921:    31 c2                              	xor edx, eax
0x23923:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x23928:    89 74 24 0c                        	mov dword ptr [esp + 0xc], esi
0x2392c:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x23930:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x23934:    89 04 24                           	mov dword ptr [esp], eax
0x23937:    e8 94 bc 01 00                     	call 0x3f5d0 <unknown_3f5d0>
0x2393c:    84 c0                              	test al, al
0x2393e:    0f 84 3c ff ff ff                  	je 0x23880 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x90>
0x23944:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x23948:    89 3c 24                           	mov dword ptr [esp], edi
0x2394b:    e8 10 26 01 00                     	call 0x35f60 <unknown_35f60>
0x23950:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x23954:    8b 02                              	mov eax, dword ptr [edx]
0x23956:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x23959:    85 ed                              	test ebp, ebp
0x2395b:    0f 84 44 01 00 00                  	je 0x23aa5 <function_23aa5>
0x23961:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23965:    8b 71 08                           	mov esi, dword ptr [ecx + 8]
0x23968:    80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0x2396c:    74 52                              	je 0x239c0 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1d0>
0x2396e:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x23971:    83 86 8c 00 00 00 01               	add dword ptr [esi + 0x8c], 1
0x23978:    85 c0                              	test eax, eax
0x2397a:    74 07                              	je 0x23983 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x193>
0x2397c:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x2397f:    85 c0                              	test eax, eax
0x23981:    75 44                              	jne 0x239c7 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x1d7>
0x23983:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x23987:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x2398b:    8b 02                              	mov eax, dword ptr [edx]
0x2398d:    89 42 0c                           	mov dword ptr [edx + 0xc], eax
0x23990:    8b 01                              	mov eax, dword ptr [ecx]
0x23992:    89 0c 24                           	mov dword ptr [esp], ecx
0x23995:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23998:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x2399c:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x2399f:    39 10                              	cmp dword ptr [eax], edx
0x239a1:    0f 84 cc 00 00 00                  	je 0x23a73 <function_23a73>
0x239a7:    8b 4c 24 5c                        	mov ecx, dword ptr [esp + 0x5c]
0x239ab:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x239b2:    0f 85 e8 00 00 00                  	jne 0x23aa0 <function_23aa0>
0x239b8:    83 c4 6c                           	add esp, 0x6c
0x239bb:    5b                                 	pop ebx
0x239bc:    5e                                 	pop esi
0x239bd:    5f                                 	pop edi
0x239be:    5d                                 	pop ebp
0x239bf:    c3                                 	ret 
0x239c0:    83 86 90 00 00 00 01               	add dword ptr [esi + 0x90], 1
0x239c7:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x239cb:    8b 01                              	mov eax, dword ptr [ecx]
0x239cd:    89 0c 24                           	mov dword ptr [esp], ecx
0x239d0:    ff 50 10                           	call dword ptr [eax + 0x10]
0x239d3:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x239d7:    8b 02                              	mov eax, dword ptr [edx]
0x239d9:    8b 00                              	mov eax, dword ptr [eax]
0x239db:    3b 42 04                           	cmp eax, dword ptr [edx + 4]
0x239de:    89 02                              	mov dword ptr [edx], eax
0x239e0:    0f 84 8d 00 00 00                  	je 0x23a73 <function_23a73>
0x239e6:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x239e9:    85 c0                              	test eax, eax
0x239eb:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x239ef:    0f 85 43 fe ff ff                  	jne 0x23838 <_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_EEENSA_IFbRKNS0_10connectionES5_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IbS5_SC_EESI_EEEEESV_E18lock_next_callableEv+0x48>
0x239f5:    c7 44 24 0c 60 c5 02 00            	mov dword ptr [esp + 0xc], 0x2c560 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>&]"
0x239fd:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x23a05:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x23a0d:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x23a14 -- 0x23a15
0x23a14:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23a15 -- 0x23a16
; data inside code section at 0x23a16 -- 0x23a20
0x23a16:    ff ff ff 8d b4 26 00 00  00 00                     |.....&....      |
; function: function_23a20 at 0x23a20 -- 0x23a2d
0x23a20:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x23a26:    8d 5c 6d fd                        	lea ebx, [ebp + ebp*2 - 3]
0x23a2a:    8d 1c 98                           	lea ebx, [eax + ebx*4]
; data inside code section at 0x23a2d -- 0x23a30
0x23a2d:    8d 44 6d                                           |.Dm             |
; function: function_23a30 at 0x23a30 -- 0x23a73
0x23a30:    00 89 da c1 e0 02                  	add byte ptr [ecx + 0x2e0c1da], cl
0x23a36:    29 c2                              	sub edx, eax
0x23a38:    39 d3                              	cmp ebx, edx
0x23a3a:    89 54 24 34                        	mov dword ptr [esp + 0x34], edx
0x23a3e:    76 2d                              	jbe 0x23a6d <function_23a30+0x3d>
0x23a40:    89 1c 24                           	mov dword ptr [esp], ebx
0x23a43:    e8 18 25 01 00                     	call 0x35f60 <unknown_35f60>
0x23a48:    83 eb 0c                           	sub ebx, 0xc
0x23a4b:    39 5c 24 34                        	cmp dword ptr [esp + 0x34], ebx
0x23a4f:    72 ef                              	jb 0x23a40 <function_23a30+0x10>
0x23a51:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23a55:    8b 86 84 00 00 00                  	mov eax, dword ptr [esi + 0x84]
0x23a5b:    8b 51 08                           	mov edx, dword ptr [ecx + 8]
0x23a5e:    29 e8                              	sub eax, ebp
0x23a60:    89 86 84 00 00 00                  	mov dword ptr [esi + 0x84], eax
0x23a66:    89 d6                              	mov esi, edx
0x23a68:    e9 ec fd ff ff                     	jmp 0x23859
0x23a6d:    89 f2                              	mov edx, esi
0x23a6f:    31 c0                              	xor eax, eax
0x23a71:    eb ed                              	jmp 0x23a60 <function_23a30+0x30>
; function: function_23a73 at 0x23a73 -- 0x23a82
0x23a73:    8b 4c 24 38                        	mov ecx, dword ptr [esp + 0x38]
0x23a77:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x23a7a:    89 41 0c                           	mov dword ptr [ecx + 0xc], eax
0x23a7d:    e9 25 ff ff ff                     	jmp 0x239a7
; data inside code section at 0x23a82 -- 0x23a83
0x23a82:    89                                                 |.               |
; function: function_23a83 at 0x23a83 -- 0x23a84
0x23a83:    c3                                 	ret 
; data inside code section at 0x23a84 -- 0x23a8c
0x23a84:    89 3c 24 e8 d4 24 01 00                            |.<$..$..        |
; function: function_23a8c at 0x23a8c -- 0x23aa0
0x23a8c:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x23a90:    8b 02                              	mov eax, dword ptr [edx]
0x23a92:    89 14 24                           	mov dword ptr [esp], edx
0x23a95:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23a98:    89 1c 24                           	mov dword ptr [esp], ebx
0x23a9b:    e8 fc ff ff ff                     	call 0x23a9c
; function: function_23aa0 at 0x23aa0 -- 0x23aa1
; dynamically linked function: __stack_chk_fail at 0x23aa1 -- 0x23aa2
; data inside code section at 0x23aa2 -- 0x23aa5
0x23aa2:    ff ff ff                                           |...             |
; function: function_23aa5 at 0x23aa5 -- 0x23aae
0x23aa5:    e8 5c e0 00 00                     	call 0x31b06 <function_31b06>
0x23aaa:    89 c3                              	mov ebx, eax
0x23aac:    eb de                              	jmp 0x23a8c <function_23a8c>
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS5_bSC_EESI_EEEEESV_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS5_bSC_EESI_EEEEESV_E18lock_next_callableEv at 0x23ab0 -- 0x23b65
0x23ab0:    55                                 	push ebp
0x23ab1:    57                                 	push edi
0x23ab2:    56                                 	push esi
0x23ab3:    53                                 	push ebx
0x23ab4:    83 ec 7c                           	sub esp, 0x7c
0x23ab7:    8b b4 24 90 00 00 00               	mov esi, dword ptr [esp + 0x90]
0x23abe:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23ac4:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x23ac8:    31 c0                              	xor eax, eax
0x23aca:    8b 06                              	mov eax, dword ptr [esi]
0x23acc:    3b 46 0c                           	cmp eax, dword ptr [esi + 0xc]
0x23acf:    0f 84 db 01 00 00                  	je 0x23cb0 <function_23cb0>
0x23ad5:    3b 46 04                           	cmp eax, dword ptr [esi + 4]
0x23ad8:    0f 84 c5 01 00 00                  	je 0x23ca3 <function_23ca3>
0x23ade:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x23ae1:    85 c0                              	test eax, eax
0x23ae3:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x23ae7:    0f 84 49 03 00 00                  	je 0x23e36 <function_23e36>
0x23aed:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x23af1:    8b 02                              	mov eax, dword ptr [edx]
0x23af3:    89 14 24                           	mov dword ptr [esp], edx
0x23af6:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x23af9:    8b 7e 08                           	mov edi, dword ptr [esi + 8]
0x23afc:    8b af 84 00 00 00                  	mov ebp, dword ptr [edi + 0x84]
0x23b02:    85 ed                              	test ebp, ebp
0x23b04:    0f 85 de 01 00 00                  	jne 0x23ce8 <function_23ce8>
0x23b0a:    8d 47 04                           	lea eax, [edi + 4]
0x23b0d:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x23b11:    8b 06                              	mov eax, dword ptr [esi]
0x23b13:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x23b16:    85 db                              	test ebx, ebx
0x23b18:    0f 84 3c 03 00 00                  	je 0x23e5a <function_23e5a>
0x23b1e:    8b 6b 10                           	mov ebp, dword ptr [ebx + 0x10]
0x23b21:    3b 6b 14                           	cmp ebp, dword ptr [ebx + 0x14]
0x23b24:    0f 84 3e 01 00 00                  	je 0x23c68 <function_23c68>
0x23b2a:    89 ef                              	mov edi, ebp
0x23b2c:    8d 54 24 5f                        	lea edx, [esp + 0x5f]
0x23b30:    89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x23b34:    8b 17                              	mov edx, dword ptr [edi]
0x23b36:    89 d0                              	mov eax, edx
0x23b38:    c1 f8 1f                           	sar eax, 0x1f
0x23b3b:    31 d0                              	xor eax, edx
0x23b3d:    83 f8 13                           	cmp eax, 0x13
0x23b40:    0f 86 8a 01 00 00                  	jbe 0x23cd0 <function_23cd0>
0x23b46:    c7 44 24 0c 40 9c 02 00            	mov dword ptr [esp + 0xc], 0x29c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x23b4e:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x23b56:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x23b5e:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x23b65 -- 0x23b66
0x23b65:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23b66 -- 0x23b67
; data inside code section at 0x23b67 -- 0x23b78
0x23b67:    ff ff ff 85 d2 0f 88 5f  02 00 00 8b 4f 08 89 fa   |......._....O...|
0x23b77:    29                                                 |)               |
; function: function_23b78 at 0x23b78 -- 0x23b7f
0x23b78:    ea c7 44 24 44 00 00               	ljmp 0:0x442444c7 <function_442444c7>
; data inside code section at 0x23b7f -- 0x23b99
0x23b7f:    00 00 89 54 24 2c 85 c9  89 4c 24 48 0f 84 2b 02   |...T$,...L$H..+.|
0x23b8f:    00 00 8b 41 04 85 c0 74  0a 89                     |...A...t..      |
; function: function_23b99 at 0x23b99 -- 0x23b9c
0x23b99:    c2 42 f0                           	ret 0xf042
; data inside code section at 0x23b9c -- 0x23bc2
0x23b9c:    0f b1 51 04 75 f2 85 c0  0f 84 0a 02 00 00 8b 54   |..Q.u..........T|
0x23bac:    24 2c 8b 44 15 04 89 4c  24 68 89 44 24 44 89 44   |$,.D...L$h.D$D.D|
0x23bbc:    24 64 f0 ff 41 04                                  |$d..A.          |
; function: function_23bc2 at 0x23bc2 -- 0x23bc3
; data inside code section at 0x23bc3 -- 0x23bd6
0x23bc3:    44 24 48 c7 44 24 60 00  00 00 00 89 04 24 e8 1a   |D$H.D$`......$..|
0x23bd3:    04 01 00                                           |...             |
; function: function_23bd6 at 0x23bd6 -- 0x23bd7
; data inside code section at 0x23bd7 -- 0x23c58
0x23bd7:    17 8d 44 24 5e 89 44 24  58 8d 4f 04 89 4c 24 0c   |..D$^.D$X.O..L$.|
0x23be7:    8d 4c 24 58 c7 44 24 1c  00 00 00 00 89 d0 c1 f8   |.L$X.D$.........|
0x23bf7:    1f 31 d0 c7 44 24 18 00  00 00 00 c6 44 24 14 00   |.1..D$......D$..|
0x23c07:    c6 44 24 10 00 89 4c 24  08 89 44 24 04 89 14 24   |.D$...L$..D$...$|
0x23c17:    e8 74 bc 01 00 84 c0 0f  85 fd 01 00 00 8b 54 24   |.t............T$|
0x23c27:    24 8d 44 24 60 89 44 24  04 8d 44 24 4c 89 04 24   |$.D$`.D$..D$L..$|
0x23c37:    89 54 24 4c e8 90 30 02  00 8d 54 24 60 89 14 24   |.T$L..0...T$`..$|
0x23c47:    e8 d4 25 01 00 83 c7 0c  3b 7b 14 0f 85 d4 fe ff   |..%.....;{......|
0x23c57:    ff                                                 |.               |
; function: function_23c58 at 0x23c58 -- 0x23c59
; data inside code section at 0x23c59 -- 0x23c68
0x23c59:    06 8b 58 08 85 db 0f 84  f5 01 00 00 8b 7e 08      |..X..........~. |
; function: function_23c68 at 0x23c68 -- 0x23ca3
0x23c68:    80 7b 04 00                        	cmp byte ptr [ebx + 4], 0
0x23c6c:    0f 84 24 01 00 00                  	je 0x23d96 <function_23d96>
0x23c72:    8b 43 0c                           	mov eax, dword ptr [ebx + 0xc]
0x23c75:    83 87 90 00 00 00 01               	add dword ptr [edi + 0x90], 1
0x23c7c:    85 c0                              	test eax, eax
0x23c7e:    74 0b                              	je 0x23c8b <function_23c68+0x23>
0x23c80:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x23c83:    85 c0                              	test eax, eax
0x23c85:    0f 85 12 01 00 00                  	jne 0x23d9d <function_23d9d>
0x23c8b:    8b 06                              	mov eax, dword ptr [esi]
0x23c8d:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x23c91:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x23c94:    8b 02                              	mov eax, dword ptr [edx]
0x23c96:    89 14 24                           	mov dword ptr [esp], edx
0x23c99:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23c9c:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x23c9f:    39 06                              	cmp dword ptr [esi], eax
0x23ca1:    75 0d                              	jne 0x23cb0
; function: function_23ca3 at 0x23ca3 -- 0x23cb0
0x23ca3:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x23ca6:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x23ca9:    8d b4 26 00 00 00 00               	lea esi, [esi]
; function: function_23cb0 at 0x23cb0 -- 0x23cc9
0x23cb0:    8b 44 24 6c                        	mov eax, dword ptr [esp + 0x6c]
0x23cb4:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x23cbb:    0f 85 9e 01 00 00                  	jne 0x23e5f <function_23e5f>
0x23cc1:    83 c4 7c                           	add esp, 0x7c
0x23cc4:    5b                                 	pop ebx
0x23cc5:    5e                                 	pop esi
0x23cc6:    5f                                 	pop edi
0x23cc7:    5d                                 	pop ebp
0x23cc8:    c3                                 	ret 
; data inside code section at 0x23cc9 -- 0x23cd0
0x23cc9:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_23cd0 at 0x23cd0 -- 0x23cd7
0x23cd0:    ff 24 85 c4 3e 02 00               	jmp dword ptr [eax*4 + 0x23ec4]
; data inside code section at 0x23cd7 -- 0x23ce8
0x23cd7:    90 8d 44 24 30 e8 df fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0x23ce7:    00                                                 |.               |
; function: function_23ce8 at 0x23ce8 -- 0x23d96
0x23ce8:    8b 87 80 00 00 00                  	mov eax, dword ptr [edi + 0x80]
0x23cee:    8d 5c 6d fd                        	lea ebx, [ebp + ebp*2 - 3]
0x23cf2:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x23cf5:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x23cf9:    89 da                              	mov edx, ebx
0x23cfb:    c1 e0 02                           	shl eax, 2
0x23cfe:    29 c2                              	sub edx, eax
0x23d00:    39 d3                              	cmp ebx, edx
0x23d02:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x23d06:    0f 86 84 00 00 00                  	jbe 0x23d90 <function_23ce8+0xa8>
0x23d0c:    8d 74 26 00                        	lea esi, [esi]
0x23d10:    89 1c 24                           	mov dword ptr [esp], ebx
0x23d13:    e8 08 25 01 00                     	call 0x36220 <unknown_36220>
0x23d18:    83 eb 0c                           	sub ebx, 0xc
0x23d1b:    39 5c 24 24                        	cmp dword ptr [esp + 0x24], ebx
0x23d1f:    72 ef                              	jb 0x23d10 <function_23ce8+0x28>
0x23d21:    8b 87 84 00 00 00                  	mov eax, dword ptr [edi + 0x84]
0x23d27:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x23d2a:    29 e8                              	sub eax, ebp
0x23d2c:    89 87 84 00 00 00                  	mov dword ptr [edi + 0x84], eax
0x23d32:    89 d7                              	mov edi, edx
0x23d34:    e9 d1 fd ff ff                     	jmp 0x23b0a
0x23d39:    85 d2                              	test edx, edx
0x23d3b:    0f 88 bb 00 00 00                  	js 0x23dfc <function_23dfc>
0x23d41:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x23d44:    85 c0                              	test eax, eax
0x23d46:    0f 84 52 01 00 00                  	je 0x23e9e <function_23e9e>
0x23d4c:    8b 10                              	mov edx, dword ptr [eax]
0x23d4e:    8d 4c 24 54                        	lea ecx, [esp + 0x54]
0x23d52:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x23d56:    89 0c 24                           	mov dword ptr [esp], ecx
0x23d59:    ff 52 08                           	call dword ptr [edx + 8]
0x23d5c:    83 ec 04                           	sub esp, 4
0x23d5f:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x23d63:    8b 10                              	mov edx, dword ptr [eax]
0x23d65:    89 04 24                           	mov dword ptr [esp], eax
0x23d68:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x23d6b:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x23d6f:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x23d73:    c7 44 24 60 01 00 00 00            	mov dword ptr [esp + 0x60], 1
0x23d7b:    85 c0                              	test eax, eax
0x23d7d:    0f 84 53 fe ff ff                  	je 0x23bd6 <function_23bd6>
0x23d83:    8b 10                              	mov edx, dword ptr [eax]
0x23d85:    89 04 24                           	mov dword ptr [esp], eax
0x23d88:    ff 52 04                           	call dword ptr [edx + 4]
0x23d8b:    e9 46 fe ff ff                     	jmp 0x23bd6 <function_23bd6>
0x23d90:    89 fa                              	mov edx, edi
0x23d92:    31 c0                              	xor eax, eax
0x23d94:    eb 96                              	jmp 0x23d2c <function_23ce8+0x44>
; function: function_23d96 at 0x23d96 -- 0x23d9d
0x23d96:    83 87 94 00 00 00 01               	add dword ptr [edi + 0x94], 1
; function: function_23d9d at 0x23d9d -- 0x23db4
0x23d9d:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x23da1:    8b 02                              	mov eax, dword ptr [edx]
0x23da3:    89 14 24                           	mov dword ptr [esp], edx
0x23da6:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23da9:    8b 06                              	mov eax, dword ptr [esi]
0x23dab:    8b 00                              	mov eax, dword ptr [eax]
0x23dad:    89 06                              	mov dword ptr [esi], eax
0x23daf:    e9 21 fd ff ff                     	jmp 0x23ad5
; function: function_23db4 at 0x23db4 -- 0x23dd1
0x23db4:    c7 44 24 48 00 00 00 00            	mov dword ptr [esp + 0x48], 0
0x23dbc:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x23dc0:    c7 44 24 68 00 00 00 00            	mov dword ptr [esp + 0x68], 0
0x23dc8:    89 44 24 64                        	mov dword ptr [esp + 0x64], eax
0x23dcc:    e9 f1 fd ff ff                     	jmp 0x23bc2 <function_23bc2>
; data inside code section at 0x23dd1 -- 0x23df4
0x23dd1:    c7 44 24 0c 01 00 00 00  8b 47 04 8d 54 24 60 89   |.D$......G..T$`.|
0x23de1:    14 24 89 44 24 08 8d 44  24 50 89 44 24 04 e8 7c   |.$.D$..D$P.D$..||
0x23df1:    e5 01 00                                           |...             |
; function: function_23df4 at 0x23df4 -- 0x23dfc
0x23df4:    83 ec 04                           	sub esp, 4
0x23df7:    e9 da fd ff ff                     	jmp 0x23bd6 <function_23bd6>
; function: function_23dfc at 0x23dfc -- 0x23e21
0x23dfc:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x23e04:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x23e07:    8d 54 24 60                        	lea edx, [esp + 0x60]
0x23e0b:    89 14 24                           	mov dword ptr [esp], edx
0x23e0e:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x23e12:    8d 44 24 50                        	lea eax, [esp + 0x50]
0x23e16:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x23e1a:    e8 01 e6 01 00                     	call 0x42420 <unknown_42420>
0x23e1f:    eb d3                              	jmp 0x23df4 <function_23df4>
; function: function_23e21 at 0x23e21 -- 0x23e36
0x23e21:    c6 43 04 00                        	mov byte ptr [ebx + 4], 0
0x23e25:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x23e29:    89 04 24                           	mov dword ptr [esp], eax
0x23e2c:    e8 ef 23 01 00                     	call 0x36220 <unknown_36220>
0x23e31:    e9 22 fe ff ff                     	jmp 0x23c58 <function_23c58>
; function: function_23e36 at 0x23e36 -- 0x23e55
0x23e36:    c7 44 24 0c 80 dc 02 00            	mov dword ptr [esp + 0xc], 0x2dc80 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>&]"
0x23e3e:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x23e46:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x23e4e:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x23e55 -- 0x23e56
0x23e55:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23e56 -- 0x23e57
; data inside code section at 0x23e57 -- 0x23e5a
0x23e57:    ff ff ff                                           |...             |
; function: function_23e5a at 0x23e5a -- 0x23e5f
0x23e5a:    e8 9b df 00 00                     	call 0x31dfa <unknown_31dfa>
; function: function_23e5f at 0x23e5f -- 0x23e75
0x23e5f:    e8 fc ff ff ff                     	call 0x23e60
0x23e64:    89 c3                              	mov ebx, eax
0x23e66:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x23e6a:    8b 02                              	mov eax, dword ptr [edx]
0x23e6c:    89 14 24                           	mov dword ptr [esp], edx
0x23e6f:    ff 50 10                           	call dword ptr [eax + 0x10]
0x23e72:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x23e75 -- 0x23e76
0x23e75:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x23e76 -- 0x23e77
; data inside code section at 0x23e77 -- 0x23e79
0x23e77:    ff ff                                              |..              |
; function: function_23e79 at 0x23e79 -- 0x23e80
0x23e79:    ff 8b 54 24 54 89                  	dec dword ptr [ebx - 0x76abdbac]
0x23e7f:    c3                                 	ret 
; function: function_23e80 at 0x23e80 -- 0x23e8e
0x23e80:    85 d2                              	test edx, edx
0x23e82:    74 e2                              	je 0x23e66
0x23e84:    8b 02                              	mov eax, dword ptr [edx]
0x23e86:    89 14 24                           	mov dword ptr [esp], edx
0x23e89:    ff 50 04                           	call dword ptr [eax + 4]
0x23e8c:    eb d8                              	jmp 0x23e66
; function: function_23e8e at 0x23e8e -- 0x23e9e
0x23e8e:    89 c3                              	mov ebx, eax
0x23e90:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x23e94:    89 04 24                           	mov dword ptr [esp], eax
0x23e97:    e8 84 23 01 00                     	call 0x36220 <unknown_36220>
0x23e9c:    eb c8                              	jmp 0x23e66
; function: function_23e9e at 0x23e9e -- 0x23ebd
0x23e9e:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x23ea6:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x23eae:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x23eb6:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x23ebd -- 0x23ebe
0x23ebd:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23ebe -- 0x23ebf
; data inside code section at 0x23ebf -- 0x23ec2
0x23ebf:    ff ff ff                                           |...             |
; section: .text._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviSA_EESG_EEEEEST_E18lock_next_callableEv
; function: _ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviSA_EESG_EEEEEST_E18lock_next_callableEv at 0x23f20 -- 0x23fd4
0x23f20:    55                                 	push ebp
0x23f21:    57                                 	push edi
0x23f22:    56                                 	push esi
0x23f23:    53                                 	push ebx
0x23f24:    81 ec 8c 00 00 00                  	sub esp, 0x8c
0x23f2a:    8b b4 24 a0 00 00 00               	mov esi, dword ptr [esp + 0xa0]
0x23f31:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x23f37:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x23f3b:    31 c0                              	xor eax, eax
0x23f3d:    8b 06                              	mov eax, dword ptr [esi]
0x23f3f:    3b 46 0c                           	cmp eax, dword ptr [esi + 0xc]
0x23f42:    0f 84 d0 01 00 00                  	je 0x24118 <function_24118>
0x23f48:    3b 46 04                           	cmp eax, dword ptr [esi + 4]
0x23f4b:    0f 84 bf 01 00 00                  	je 0x24110 <function_24110>
0x23f51:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x23f54:    85 c0                              	test eax, eax
0x23f56:    89 44 24 28                        	mov dword ptr [esp + 0x28], eax
0x23f5a:    0f 84 b5 03 00 00                  	je 0x24315 <function_24315>
0x23f60:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x23f64:    8b 02                              	mov eax, dword ptr [edx]
0x23f66:    89 14 24                           	mov dword ptr [esp], edx
0x23f69:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x23f6c:    8b 7e 08                           	mov edi, dword ptr [esi + 8]
0x23f6f:    8b af 84 00 00 00                  	mov ebp, dword ptr [edi + 0x84]
0x23f75:    85 ed                              	test ebp, ebp
0x23f77:    0f 85 d3 01 00 00                  	jne 0x24150 <function_24150>
0x23f7d:    8d 47 04                           	lea eax, [edi + 4]
0x23f80:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x23f84:    8b 06                              	mov eax, dword ptr [esi]
0x23f86:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x23f89:    85 ed                              	test ebp, ebp
0x23f8b:    0f 84 77 03 00 00                  	je 0x24308 <function_24308>
0x23f91:    8b 55 10                           	mov edx, dword ptr [ebp + 0x10]
0x23f94:    3b 55 14                           	cmp edx, dword ptr [ebp + 0x14]
0x23f97:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x23f9b:    0f 84 34 01 00 00                  	je 0x240d5 <function_240d5>
0x23fa1:    89 d7                              	mov edi, edx
0x23fa3:    8b 17                              	mov edx, dword ptr [edi]
0x23fa5:    89 d0                              	mov eax, edx
0x23fa7:    c1 f8 1f                           	sar eax, 0x1f
0x23faa:    31 d0                              	xor eax, edx
0x23fac:    83 f8 13                           	cmp eax, 0x13
0x23faf:    0f 86 83 01 00 00                  	jbe 0x24138 <function_24138>
0x23fb5:    c7 44 24 0c 40 9c 02 00            	mov dword ptr [esp + 0xc], 0x29c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x23fbd:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x23fc5:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x23fcd:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x23fd4 -- 0x23fd5
0x23fd4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x23fd5 -- 0x23fd6
; data inside code section at 0x23fd6 -- 0x24006
0x23fd6:    ff ff ff 85 d2 0f 88 58  02 00 00 8b 4f 08 89 fb   |.......X....O...|
0x23fe6:    2b 5c 24 24 c7 44 24 4c  00 00 00 00 85 c9 89 4c   |+\$$.D$L.......L|
0x23ff6:    24 50 0f 84 26 02 00 00  8b 41 04 85 c0 74 0a 89   |$P..&....A...t..|
; function: function_24006 at 0x24006 -- 0x24009
0x24006:    c2 42 f0                           	ret 0xf042
; data inside code section at 0x24009 -- 0x2402f
0x24009:    0f b1 51 04 75 f2 85 c0  0f 84 05 02 00 00 8b 54   |..Q.u..........T|
0x24019:    24 24 8b 44 13 04 89 4c  24 78 89 44 24 4c 89 44   |$$.D...L$x.D$L.D|
0x24029:    24 74 f0 ff 41 04                                  |$t..A.          |
; function: function_2402f at 0x2402f -- 0x24030
; data inside code section at 0x24030 -- 0x24043
0x24030:    44 24 50 c7 44 24 70 00  00 00 00 89 04 24 e8 1d   |D$P.D$p......$..|
0x24040:    04 01 00                                           |...             |
; function: function_24043 at 0x24043 -- 0x24044
; data inside code section at 0x24044 -- 0x240c5
0x24044:    17 8d 44 24 6f 89 44 24  68 8d 4f 04 89 4c 24 0c   |..D$o.D$h.O..L$.|
0x24054:    8d 4c 24 68 c7 44 24 1c  00 00 00 00 8d 5c 24 70   |.L$h.D$......\$p|
0x24064:    89 d0 c1 f8 1f 31 d0 c7  44 24 18 00 00 00 00 c6   |.....1..D$......|
0x24074:    44 24 14 00 c6 44 24 10  00 89 4c 24 08 89 44 24   |D$...D$...L$..D$|
0x24084:    04 89 14 24 e8 73 bc 01  00 84 c0 0f 85 5e 02 00   |...$.s.......^..|
0x24094:    00 8b 54 24 2c 8d 5c 24  70 8d 44 24 5c 89 5c 24   |..T$,.\$p.D$\.\$|
0x240a4:    04 89 04 24 89 54 24 5c  e8 8f 30 02 00 89 1c 24   |...$.T$\..0....$|
0x240b4:    e8 d7 25 01 00 83 c7 0c  3b 7d 14 0f 85 de fe ff   |..%.....;}......|
0x240c4:    ff                                                 |.               |
; function: function_240c5 at 0x240c5 -- 0x240c6
; data inside code section at 0x240c6 -- 0x240d5
0x240c6:    06 8b 68 08 85 ed 0f 84  36 02 00 00 8b 7e 08      |..h.....6....~. |
; function: function_240d5 at 0x240d5 -- 0x24110
0x240d5:    80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0x240d9:    0f 84 1f 01 00 00                  	je 0x241fe <function_241fe>
0x240df:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x240e2:    83 87 8c 00 00 00 01               	add dword ptr [edi + 0x8c], 1
0x240e9:    85 c0                              	test eax, eax
0x240eb:    74 0b                              	je 0x240f8 <function_240d5+0x23>
0x240ed:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x240f0:    85 c0                              	test eax, eax
0x240f2:    0f 85 0d 01 00 00                  	jne 0x24205 <function_24205>
0x240f8:    8b 06                              	mov eax, dword ptr [esi]
0x240fa:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x240fe:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x24101:    8b 02                              	mov eax, dword ptr [edx]
0x24103:    89 14 24                           	mov dword ptr [esp], edx
0x24106:    ff 50 10                           	call dword ptr [eax + 0x10]
0x24109:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x2410c:    39 06                              	cmp dword ptr [esi], eax
0x2410e:    75 08                              	jne 0x24118
; function: function_24110 at 0x24110 -- 0x24118
0x24110:    8b 46 04                           	mov eax, dword ptr [esi + 4]
0x24113:    89 46 0c                           	mov dword ptr [esi + 0xc], eax
0x24116:    66 90                              	nop 
; function: function_24118 at 0x24118 -- 0x24134
0x24118:    8b 44 24 7c                        	mov eax, dword ptr [esp + 0x7c]
0x2411c:    65 33 05 14 00 00 00               	xor eax, dword ptr gs:[0x14]
0x24123:    0f 85 e4 01 00 00                  	jne 0x2430d <function_2430d>
0x24129:    81 c4 8c 00 00 00                  	add esp, 0x8c
0x2412f:    5b                                 	pop ebx
0x24130:    5e                                 	pop esi
0x24131:    5f                                 	pop edi
0x24132:    5d                                 	pop ebp
0x24133:    c3                                 	ret 
; data inside code section at 0x24134 -- 0x24138
0x24134:    8d 74 26 00                                        |.t&.            |
; function: function_24138 at 0x24138 -- 0x2413f
0x24138:    ff 24 85 ac 43 02 00               	jmp dword ptr [eax*4 + 0x243ac]
; data inside code section at 0x2413f -- 0x24150
0x2413f:    90 8d 44 24 30 e8 e7 fe  ff ff 8d b4 26 00 00 00   |..D$0.......&...|
0x2414f:    00                                                 |.               |
; function: function_24150 at 0x24150 -- 0x241fe
0x24150:    8b 87 80 00 00 00                  	mov eax, dword ptr [edi + 0x80]
0x24156:    8d 5c 6d fd                        	lea ebx, [ebp + ebp*2 - 3]
0x2415a:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x2415d:    8d 44 6d 00                        	lea eax, [ebp + ebp*2]
0x24161:    89 da                              	mov edx, ebx
0x24163:    c1 e0 02                           	shl eax, 2
0x24166:    29 c2                              	sub edx, eax
0x24168:    39 d3                              	cmp ebx, edx
0x2416a:    89 54 24 24                        	mov dword ptr [esp + 0x24], edx
0x2416e:    0f 86 84 00 00 00                  	jbe 0x241f8 <function_24150+0xa8>
0x24174:    8d 74 26 00                        	lea esi, [esi]
0x24178:    89 1c 24                           	mov dword ptr [esp], ebx
0x2417b:    e8 10 25 01 00                     	call 0x36690 <unknown_36690>
0x24180:    83 eb 0c                           	sub ebx, 0xc
0x24183:    39 5c 24 24                        	cmp dword ptr [esp + 0x24], ebx
0x24187:    72 ef                              	jb 0x24178 <function_24150+0x28>
0x24189:    8b 87 84 00 00 00                  	mov eax, dword ptr [edi + 0x84]
0x2418f:    8b 56 08                           	mov edx, dword ptr [esi + 8]
0x24192:    29 e8                              	sub eax, ebp
0x24194:    89 87 84 00 00 00                  	mov dword ptr [edi + 0x84], eax
0x2419a:    89 d7                              	mov edi, edx
0x2419c:    e9 dc fd ff ff                     	jmp 0x23f7d
0x241a1:    85 d2                              	test edx, edx
0x241a3:    8b 47 04                           	mov eax, dword ptr [edi + 4]
0x241a6:    0f 88 e7 00 00 00                  	js 0x24293 <function_24293>
0x241ac:    85 c0                              	test eax, eax
0x241ae:    0f 84 ab 01 00 00                  	je 0x2435f <function_2435f>
0x241b4:    8b 10                              	mov edx, dword ptr [eax]
0x241b6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x241ba:    8d 44 24 60                        	lea eax, [esp + 0x60]
0x241be:    89 04 24                           	mov dword ptr [esp], eax
0x241c1:    ff 52 08                           	call dword ptr [edx + 8]
0x241c4:    83 ec 04                           	sub esp, 4
0x241c7:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x241cb:    8b 10                              	mov edx, dword ptr [eax]
0x241cd:    89 04 24                           	mov dword ptr [esp], eax
0x241d0:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x241d3:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x241d7:    8b 44 24 60                        	mov eax, dword ptr [esp + 0x60]
0x241db:    c7 44 24 70 01 00 00 00            	mov dword ptr [esp + 0x70], 1
0x241e3:    85 c0                              	test eax, eax
0x241e5:    0f 84 58 fe ff ff                  	je 0x24043 <function_24043>
0x241eb:    8b 10                              	mov edx, dword ptr [eax]
0x241ed:    89 04 24                           	mov dword ptr [esp], eax
0x241f0:    ff 52 04                           	call dword ptr [edx + 4]
0x241f3:    e9 4b fe ff ff                     	jmp 0x24043 <function_24043>
0x241f8:    89 fa                              	mov edx, edi
0x241fa:    31 c0                              	xor eax, eax
0x241fc:    eb 96                              	jmp 0x24194 <function_24150+0x44>
; function: function_241fe at 0x241fe -- 0x24205
0x241fe:    83 87 90 00 00 00 01               	add dword ptr [edi + 0x90], 1
; function: function_24205 at 0x24205 -- 0x2421c
0x24205:    8b 54 24 28                        	mov edx, dword ptr [esp + 0x28]
0x24209:    8b 02                              	mov eax, dword ptr [edx]
0x2420b:    89 14 24                           	mov dword ptr [esp], edx
0x2420e:    ff 50 10                           	call dword ptr [eax + 0x10]
0x24211:    8b 06                              	mov eax, dword ptr [esi]
0x24213:    8b 00                              	mov eax, dword ptr [eax]
0x24215:    89 06                              	mov dword ptr [esi], eax
0x24217:    e9 2c fd ff ff                     	jmp 0x23f48
; function: function_2421c at 0x2421c -- 0x24239
0x2421c:    c7 44 24 50 00 00 00 00            	mov dword ptr [esp + 0x50], 0
0x24224:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x24228:    c7 44 24 78 00 00 00 00            	mov dword ptr [esp + 0x78], 0
0x24230:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x24234:    e9 f6 fd ff ff                     	jmp 0x2402f <function_2402f>
; function: function_24239 at 0x24239 -- 0x24293
0x24239:    8b 5f 04                           	mov ebx, dword ptr [edi + 4]
0x2423c:    c7 44 24 54 00 00 00 00            	mov dword ptr [esp + 0x54], 0
0x24244:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x24247:    85 c9                              	test ecx, ecx
0x24249:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x2424d:    0f 84 8e 00 00 00                  	je 0x242e1 <function_242e1>
0x24253:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x24256:    85 c0                              	test eax, eax
0x24258:    74 0a                              	je 0x24264 <function_24239+0x2b>
0x2425a:    89 c2                              	mov edx, eax
0x2425c:    42                                 	inc edx
0x2425d:    f0 0f b1 51 04                     	lock cmpxchg dword ptr [ecx + 4], edx
0x24262:    75 f2                              	jne 0x24256 <function_24239+0x1d>
0x24264:    85 c0                              	test eax, eax
0x24266:    74 71                              	je 0x242d9 <function_242d9>
0x24268:    8b 03                              	mov eax, dword ptr [ebx]
0x2426a:    89 4c 24 78                        	mov dword ptr [esp + 0x78], ecx
0x2426e:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x24272:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x24276:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x2427a:    8d 44 24 58                        	lea eax, [esp + 0x58]
0x2427e:    c7 44 24 70 00 00 00 00            	mov dword ptr [esp + 0x70], 0
0x24286:    89 04 24                           	mov dword ptr [esp], eax
0x24289:    e8 d2 01 01 00                     	call 0x34460 <unknown_34460>
0x2428e:    e9 b0 fd ff ff                     	jmp 0x24043 <function_24043>
; function: function_24293 at 0x24293 -- 0x242d9
0x24293:    8b 00                              	mov eax, dword ptr [eax]
0x24295:    85 c0                              	test eax, eax
0x24297:    0f 84 c2 00 00 00                  	je 0x2435f <function_2435f>
0x2429d:    8b 10                              	mov edx, dword ptr [eax]
0x2429f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x242a3:    8d 44 24 64                        	lea eax, [esp + 0x64]
0x242a7:    89 04 24                           	mov dword ptr [esp], eax
0x242aa:    ff 52 08                           	call dword ptr [edx + 8]
0x242ad:    83 ec 04                           	sub esp, 4
0x242b0:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x242b4:    8b 10                              	mov edx, dword ptr [eax]
0x242b6:    89 04 24                           	mov dword ptr [esp], eax
0x242b9:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x242bc:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x242c0:    8b 44 24 64                        	mov eax, dword ptr [esp + 0x64]
0x242c4:    c7 44 24 70 01 00 00 00            	mov dword ptr [esp + 0x70], 1
0x242cc:    85 c0                              	test eax, eax
0x242ce:    0f 85 17 ff ff ff                  	jne 0x241eb
0x242d4:    e9 6a fd ff ff                     	jmp 0x24043 <function_24043>
; function: function_242d9 at 0x242d9 -- 0x242e1
0x242d9:    c7 44 24 58 00 00 00 00            	mov dword ptr [esp + 0x58], 0
; function: function_242e1 at 0x242e1 -- 0x242f3
0x242e1:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x242e5:    c7 44 24 78 00 00 00 00            	mov dword ptr [esp + 0x78], 0
0x242ed:    89 44 24 74                        	mov dword ptr [esp + 0x74], eax
0x242f1:    eb 87                              	jmp 0x2427a
; function: function_242f3 at 0x242f3 -- 0x24308
0x242f3:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x242f7:    8d 5c 24 70                        	lea ebx, [esp + 0x70]
0x242fb:    89 1c 24                           	mov dword ptr [esp], ebx
0x242fe:    e8 8d 23 01 00                     	call 0x36690 <unknown_36690>
0x24303:    e9 bd fd ff ff                     	jmp 0x240c5 <function_240c5>
; function: function_24308 at 0x24308 -- 0x2430d
0x24308:    e8 61 e0 00 00                     	call 0x3236e <function_3236e>
; function: function_2430d at 0x2430d -- 0x24310
0x2430d:    8d 76 00                           	lea esi, [esi]
; data inside code section at 0x24310 -- 0x24311
0x24310:    e8                                                 |.               |
; dynamically linked function: __stack_chk_fail at 0x24311 -- 0x24312
; data inside code section at 0x24312 -- 0x24315
0x24312:    ff ff ff                                           |...             |
; function: function_24315 at 0x24315 -- 0x24334
0x24315:    c7 44 24 0c 60 84 02 00            	mov dword ptr [esp + 0xc], 0x28460 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>&]"
0x2431d:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x24325:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x2432d:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x24334 -- 0x24335
0x24334:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x24335 -- 0x24336
; data inside code section at 0x24336 -- 0x24338
0x24336:    ff ff                                              |..              |
; function: function_24338 at 0x24338 -- 0x2433f
0x24338:    ff 8b 54 24 64 89                  	dec dword ptr [ebx - 0x769bdbac]
0x2433e:    c3                                 	ret 
; data inside code section at 0x2433f -- 0x2434b
0x2433f:    85 d2 74 08 8b 02 89 14  24 ff 50 04               |..t.....$.P.    |
; function: function_2434b at 0x2434b -- 0x2434c
; data inside code section at 0x2434c -- 0x2435b
0x2434c:    54 24 28 8b 02 89 14 24  ff 50 10 89 1c 24 e8      |T$(....$.P...$. |
; dynamically linked function: _Unwind_Resume at 0x2435b -- 0x2435c
; data inside code section at 0x2435c -- 0x2435f
0x2435c:    ff ff ff                                           |...             |
; function: function_2435f at 0x2435f -- 0x2437e
0x2435f:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x24367:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x2436f:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x24377:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x2437e -- 0x2437f
0x2437e:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2437f -- 0x24380
; data inside code section at 0x24380 -- 0x24382
0x24380:    ff ff                                              |..              |
; function: function_24382 at 0x24382 -- 0x24391
0x24382:    ff 89 c6 89 1c 24                  	dec dword ptr [ecx + 0x241c89c6]
0x24388:    89 f3                              	mov ebx, esi
0x2438a:    e8 01 23 01 00                     	call 0x36690 <unknown_36690>
0x2438f:    eb ba                              	jmp 0x2434b <function_2434b>
; function: function_24391 at 0x24391 -- 0x24395
0x24391:    89 c3                              	mov ebx, eax
0x24393:    eb b6                              	jmp 0x2434b <function_2434b>
; function: function_24395 at 0x24395 -- 0x243a9
0x24395:    8b 54 24 60                        	mov edx, dword ptr [esp + 0x60]
0x24399:    89 c3                              	mov ebx, eax
0x2439b:    85 d2                              	test edx, edx
0x2439d:    74 ac                              	je 0x2434b <function_2434b>
0x2439f:    8b 02                              	mov eax, dword ptr [edx]
0x243a1:    89 14 24                           	mov dword ptr [esp], edx
0x243a4:    ff 50 04                           	call dword ptr [eax + 4]
0x243a7:    eb a2                              	jmp 0x2434b <function_2434b>
; section: .text._ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_
; function: _ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_ at 0x24400 -- 0x2445a
0x24400:    55                                 	push ebp
0x24401:    57                                 	push edi
0x24402:    56                                 	push esi
0x24403:    53                                 	push ebx
0x24404:    81 ec 9c 01 00 00                  	sub esp, 0x19c
0x2440a:    8b 84 24 b0 01 00 00               	mov eax, dword ptr [esp + 0x1b0]
0x24411:    8b ac 24 b4 01 00 00               	mov ebp, dword ptr [esp + 0x1b4]
0x24418:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2441f:    89 94 24 8c 01 00 00               	mov dword ptr [esp + 0x18c], edx
0x24426:    31 d2                              	xor edx, edx
0x24428:    c7 84 24 a0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa0], 0
0x24433:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x24437:    8b 84 24 b8 01 00 00               	mov eax, dword ptr [esp + 0x1b8]
0x2443e:    c7 84 24 a4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa4], 0
0x24449:    89 44 24 7c                        	mov dword ptr [esp + 0x7c], eax
0x2444d:    8d 45 0c                           	lea eax, [ebp + 0xc]
0x24450:    89 84 24 c8 00 00 00               	mov dword ptr [esp + 0xc8], eax
0x24457:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x2445a -- 0x2445b
0x2445a:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x2445b -- 0x2445c
; data inside code section at 0x2445c -- 0x24487
0x2445c:    ff ff ff 8b 45 04 85 c0  0f 84 6e 06 00 00 8b 50   |....E.....n....P|
0x2446c:    04 83 fa 01 0f 84 a2 03  00 00 8b 55 00 89 84 24   |...........U...$|
0x2447c:    ac 00 00 00 89 94 24 a8  00 00 00                  |......$....     |
; function: function_24487 at 0x24487 -- 0x24488
; data inside code section at 0x24488 -- 0x24499
0x24488:    ff 40 04 8b 94 24 a8 00  00 00 8b 84 24 ac 00 00   |.@...$......$...|
0x24498:    00                                                 |.               |
; function: function_24499 at 0x24499 -- 0x2449a
; data inside code section at 0x2449a -- 0x244dd
0x2449a:    8c 24 a0 00 00 00 89 94  24 a0 00 00 00 8b 94 24   |.$......$......$|
0x244aa:    a4 00 00 00 89 84 24 a4  00 00 00 8d 84 24 ac 00   |......$......$..|
0x244ba:    00 00 89 04 24 89 8c 24  a8 00 00 00 89 94 24 ac   |....$..$......$.|
0x244ca:    00 00 00 e8 6e 04 01 00  8b 84 24 c8 00 00 00 89   |....n.....$.....|
0x244da:    04 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_unlock at 0x244dd -- 0x244de
; data inside code section at 0x244de -- 0x245e8
0x244de:    ff ff ff 8d 84 24 f0 00  00 00 89 44 24 34 89 84   |.....$.....D$4..|
0x244ee:    24 6c 01 00 00 8d 44 24  7c 89 84 24 74 01 00 00   |$l....D$|..$t...|
0x244fe:    8b 84 24 a0 00 00 00 c6  84 24 e8 00 00 00 00 c7   |..$......$......|
0x2450e:    84 24 68 01 00 00 0a 00  00 00 c7 84 24 70 01 00   |.$h.........$p..|
0x2451e:    00 00 00 00 00 85 c0 c7  84 24 78 01 00 00 00 00   |.........$x.....|
0x2452e:    00 00 c7 84 24 7c 01 00  00 00 00 00 00 0f 84 87   |....$|..........|
0x2453e:    08 00 00 8b 00 85 c0 89  44 24 40 0f 84 7e 08 00   |........D$@..~..|
0x2454e:    00 8b 54 24 40 8d 84 24  e8 00 00 00 89 84 24 98   |..T$@..$......$.|
0x2455e:    00 00 00 8d 84 24 90 00  00 00 89 04 24 89 94 24   |.....$......$..$|
0x2456e:    90 00 00 00 89 94 24 94  00 00 00 89 94 24 9c 00   |......$......$..|
0x2457e:    00 00 e8 ab 33 02 00 8b  84 24 a0 00 00 00 85 c0   |....3....$......|
0x2458e:    0f 84 34 08 00 00 8b 00  85 c0 0f 84 2f 08 00 00   |..4........./...|
0x2459e:    8b 10 89 84 24 84 00 00  00 89 84 24 8c 00 00 00   |....$......$....|
0x245ae:    8d 84 24 80 00 00 00 89  04 24 89 94 24 80 00 00   |..$......$..$...|
0x245be:    00 8d 94 24 e8 00 00 00  89 94 24 88 00 00 00 e8   |...$......$.....|
0x245ce:    5e 33 02 00 8b 84 24 a0  00 00 00 85 c0 0f 84 e7   |^3....$.........|
0x245de:    07 00 00 8b 48 08 85 c9  0f 84                     |....H.....      |
; function: function_245e8 at 0x245e8 -- 0x245ed
0x245e8:    e9 07 00 00 8b                     	jmp 0x8b0245f4 <function_8b0245f4>
; data inside code section at 0x245ed -- 0x24600
0x245ed:    84 24 84 00 00 00 8b 94  24 90 00 00 00 8b b4 24   |.$......$......$|
0x245fd:    88 00 00                                           |...             |
; function: function_24600 at 0x24600 -- 0x24705
0x24600:    00 8b bc 24 80 00                  	add byte ptr [ebx + 0x8024bc], cl
0x24606:    00 00                              	add byte ptr [eax], al
0x24608:    89 44 24 58                        	mov dword ptr [esp + 0x58], eax
0x2460c:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x24610:    89 54 24 50                        	mov dword ptr [esp + 0x50], edx
0x24614:    8b 94 24 8c 00 00 00               	mov edx, dword ptr [esp + 0x8c]
0x2461b:    c6 00 00                           	mov byte ptr [eax], 0
0x2461e:    83 c0 04                           	add eax, 4
0x24621:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x24625:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x24629:    39 7c 24 50                        	cmp dword ptr [esp + 0x50], edi
0x2462d:    0f 84 a3 05 00 00                  	je 0x24bd6 <function_24bd6>
0x24633:    80 3e 00                           	cmp byte ptr [esi], 0
0x24636:    8d 5e 04                           	lea ebx, [esi + 4]
0x24639:    0f 84 39 01 00 00                  	je 0x24778 <function_24778>
0x2463f:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x24643:    80 38 00                           	cmp byte ptr [eax], 0
0x24646:    0f 85 54 02 00 00                  	jne 0x248a0 <function_248a0>
0x2464c:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x24650:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x24654:    89 04 24                           	mov dword ptr [esp], eax
0x24657:    e8 fc ff ff ff                     	call 0x24658
0x2465c:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x24660:    c6 00 01                           	mov byte ptr [eax], 1
0x24663:    8b 3f                              	mov edi, dword ptr [edi]
0x24665:    3b 7c 24 38                        	cmp edi, dword ptr [esp + 0x38]
0x24669:    0f 84 51 02 00 00                  	je 0x248c0 <function_248c0>
0x2466f:    39 7c 24 58                        	cmp dword ptr [esp + 0x58], edi
0x24673:    0f 84 4f 04 00 00                  	je 0x24ac8 <function_24ac8>
0x24679:    8b 57 08                           	mov edx, dword ptr [edi + 8]
0x2467c:    85 d2                              	test edx, edx
0x2467e:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x24682:    0f 84 2e 06 00 00                  	je 0x24cb6 <function_24cb6>
0x24688:    8d 56 08                           	lea edx, [esi + 8]
0x2468b:    89 54 24 5c                        	mov dword ptr [esp + 0x5c], edx
0x2468f:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x24693:    8b 02                              	mov eax, dword ptr [edx]
0x24695:    89 14 24                           	mov dword ptr [esp], edx
0x24698:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x2469b:    8b 86 88 00 00 00                  	mov eax, dword ptr [esi + 0x88]
0x246a1:    85 c0                              	test eax, eax
0x246a3:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x246a7:    75 7f                              	jne 0x24728 <function_24728>
0x246a9:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x246ac:    85 c0                              	test eax, eax
0x246ae:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x246b2:    0f 84 41 07 00 00                  	je 0x24df9 <function_24df9>
0x246b8:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x246bc:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x246c0:    8b 52 10                           	mov edx, dword ptr [edx + 0x10]
0x246c3:    3b 50 14                           	cmp edx, dword ptr [eax + 0x14]
0x246c6:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x246ca:    0f 84 b7 03 00 00                  	je 0x24a87 <function_24a87>
0x246d0:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x246d4:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x246d8:    8b 10                              	mov edx, dword ptr [eax]
0x246da:    89 d0                              	mov eax, edx
0x246dc:    c1 f8 1f                           	sar eax, 0x1f
0x246df:    31 d0                              	xor eax, edx
0x246e1:    83 f8 13                           	cmp eax, 0x13
0x246e4:    76 2a                              	jbe 0x24710 <function_24710>
0x246e6:    c7 44 24 0c 40 9c 02 00            	mov dword ptr [esp + 0xc], 0x29c40 ; "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x246ee:    c7 44 24 08 cf 00 00 00            	mov dword ptr [esp + 8], 0xcf
0x246f6:    c7 44 24 04 fc d5 00 00            	mov dword ptr [esp + 4], 0xd5fc ; "/usr/include/boost/variant/detail/visitation_impl.hpp"
0x246fe:    c7 04 24 8d 9f 00 00               	mov dword ptr [esp], 0x9f8d ; "false"
; data inside code section at 0x24705 -- 0x24706
0x24705:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x24706 -- 0x24707
; data inside code section at 0x24707 -- 0x24710
0x24707:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_24710 at 0x24710 -- 0x24717
0x24710:    ff 24 85 fc 4f 02 00               	jmp dword ptr [eax*4 + 0x24ffc]
; data inside code section at 0x24717 -- 0x24728
0x24717:    90 8d 44 24 60 e8 ef fd  ff ff 8d b4 26 00 00 00   |..D$`.......&...|
0x24727:    00                                                 |.               |
; function: function_24728 at 0x24728 -- 0x24776
0x24728:    8b 96 84 00 00 00                  	mov edx, dword ptr [esi + 0x84]
0x2472e:    8d 5c 40 fd                        	lea ebx, [eax + eax*2 - 3]
0x24732:    8d 04 40                           	lea eax, [eax + eax*2]
0x24735:    c1 e0 02                           	shl eax, 2
0x24738:    8d 1c 9a                           	lea ebx, [edx + ebx*4]
0x2473b:    89 da                              	mov edx, ebx
0x2473d:    29 c2                              	sub edx, eax
0x2473f:    39 d3                              	cmp ebx, edx
0x24741:    89 54 24 38                        	mov dword ptr [esp + 0x38], edx
0x24745:    0f 86 84 04 00 00                  	jbe 0x24bcf <function_24bcf>
0x2474b:    90                                 	nop 
0x2474c:    8d 74 26 00                        	lea esi, [esi]
0x24750:    89 1c 24                           	mov dword ptr [esp], ebx
0x24753:    e8 18 24 01 00                     	call 0x36b70 <unknown_36b70>
0x24758:    83 eb 0c                           	sub ebx, 0xc
0x2475b:    39 5c 24 38                        	cmp dword ptr [esp + 0x38], ebx
0x2475f:    72 ef                              	jb 0x24750 <function_24728+0x28>
0x24761:    8b 86 88 00 00 00                  	mov eax, dword ptr [esi + 0x88]
0x24767:    2b 44 24 3c                        	sub eax, dword ptr [esp + 0x3c]
0x2476b:    89 86 88 00 00 00                  	mov dword ptr [esi + 0x88], eax
0x24771:    e9 33 ff ff ff                     	jmp 0x246a9
; data inside code section at 0x24776 -- 0x24778
0x24776:    66 90                                              |f.              |
; function: function_24778 at 0x24778 -- 0x247ce
0x24778:    8b 86 8c 00 00 00                  	mov eax, dword ptr [esi + 0x8c]
0x2477e:    8b 08                              	mov ecx, dword ptr [eax]
0x24780:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x24783:    85 c0                              	test eax, eax
0x24785:    0f 84 6e 06 00 00                  	je 0x24df9 <function_24df9>
0x2478b:    8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0x2478e:    85 d2                              	test edx, edx
0x24790:    0f 84 0f 08 00 00                  	je 0x24fa5 <function_24fa5>
0x24796:    83 c0 20                           	add eax, 0x20
0x24799:    83 e2 fe                           	and edx, 0xfffffffe
0x2479c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x247a0:    8d 84 24 d0 00 00 00               	lea eax, [esp + 0xd0]
0x247a7:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x247ab:    89 04 24                           	mov dword ptr [esp], eax
0x247ae:    ff 52 04                           	call dword ptr [edx + 4]
0x247b1:    83 ec 04                           	sub esp, 4
0x247b4:    80 3e 00                           	cmp byte ptr [esi], 0
0x247b7:    0f 85 2b 03 00 00                  	jne 0x24ae8 <function_24ae8>
0x247bd:    8d 84 24 d0 00 00 00               	lea eax, [esp + 0xd0]
0x247c4:    8d 5e 04                           	lea ebx, [esi + 4]
0x247c7:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x247cb:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x247ce -- 0x247cf
0x247ce:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x247cf -- 0x247d0
; data inside code section at 0x247d0 -- 0x247d6
0x247d0:    ff ff ff c6 06 01                                  |......          |
; function: function_247d6 at 0x247d6 -- 0x247d7
; data inside code section at 0x247d7 -- 0x247e1
0x247d7:    94 24 d0 00 00 00 89 14  24 e8                     |.$......$.      |
; dynamically linked function: _ZNSsD1Ev at 0x247e1 -- 0x247e2
; data inside code section at 0x247e2 -- 0x2480e
0x247e2:    ff ff ff 80 3e 00 0f 85  51 fe ff ff c7 44 24 0c   |....>...Q....D$.|
0x247f2:    00 ee 02 00 c7 44 24 08  77 02 00 00 c7 44 24 04   |.....D$.w....D$.|
0x24802:    68 d6 00 00 c7 04 24 b7  9f 00 00 e8               |h.....$.....    |
; dynamically linked function: __assert_fail at 0x2480e -- 0x2480f
; data inside code section at 0x2480f -- 0x24811
0x2480f:    ff ff                                              |..              |
; function: function_24811 at 0x24811 -- 0x2489d
0x24811:    ff 8d b6 00 00 00                  	dec dword ptr [ebp + 0xb6]
0x24817:    00 8b 40 04 83 f8                  	add byte ptr [ebx - 0x77cfbc0], cl
0x2481d:    01 0f                              	add dword ptr [edi], ecx
0x2481f:    85 b0 06 00 00 8b                  	test dword ptr [eax - 0x74fffffa], esi
0x24825:    45                                 	inc ebp
0x24826:    00 c7                              	add bh, al
0x24828:    84 24 cc                           	test byte ptr [esp + ecx*8], ah
0x2482b:    00 00                              	add byte ptr [eax], al
0x2482d:    00 00                              	add byte ptr [eax], al
0x2482f:    00 00                              	add byte ptr [eax], al
0x24831:    00 85 c0 0f 84 8e                  	add byte ptr [ebp - 0x717bf040], al
0x24837:    05 00 00 8b 00                     	add eax, 0x8b0000
0x2483c:    85 c0                              	test eax, eax
0x2483e:    0f 84 89 05 00 00                  	je 0x24dcd
0x24844:    3b 45 08                           	cmp eax, dword ptr [ebp + 8]
0x24847:    0f 84 93 04 00 00                  	je 0x24ce0 <function_24ce0>
0x2484d:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x24850:    89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x24857:    8d 84 24 cc 00 00 00               	lea eax, [esp + 0xcc]
0x2485e:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x24866:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2486a:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x24872:    89 2c 24                           	mov dword ptr [esp], ebp
0x24875:    e8 16 fd 01 00                     	call 0x44590 <unknown_44590>
0x2487a:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x2487d:    8b 55 00                           	mov edx, dword ptr [ebp]
0x24880:    85 c0                              	test eax, eax
0x24882:    89 94 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], edx
0x24889:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x24890:    0f 85 f1 fb ff ff                  	jne 0x24487 <function_24487>
0x24896:    31 c0                              	xor eax, eax
0x24898:    e9 fc fb ff ff                     	jmp 0x24499 <function_24499>
; data inside code section at 0x2489d -- 0x248a0
0x2489d:    8d 76 00                                           |.v.             |
; function: function_248a0 at 0x248a0 -- 0x248c0
0x248a0:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x248a4:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x248a8:    89 14 24                           	mov dword ptr [esp], edx
0x248ab:    e8 fc ff ff ff                     	call 0x248ac
0x248b0:    8b 3f                              	mov edi, dword ptr [edi]
0x248b2:    3b 7c 24 38                        	cmp edi, dword ptr [esp + 0x38]
0x248b6:    0f 85 b3 fd ff ff                  	jne 0x2466f
0x248bc:    8d 74 26 00                        	lea esi, [esi]
; function: function_248c0 at 0x248c0 -- 0x248dc
0x248c0:    80 3e 00                           	cmp byte ptr [esi], 0
0x248c3:    0f 84 60 fd ff ff                  	je 0x24629
0x248c9:    8d 5e 04                           	lea ebx, [esi + 4]
0x248cc:    89 1c 24                           	mov dword ptr [esp], ebx
0x248cf:    e8 fc ff ff ff                     	call 0x248d0
0x248d4:    c6 06 00                           	mov byte ptr [esi], 0
0x248d7:    e9 4d fd ff ff                     	jmp 0x24629
; function: function_248dc at 0x248dc -- 0x24946
0x248dc:    85 d2                              	test edx, edx
0x248de:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x248e2:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x248e5:    0f 88 18 02 00 00                  	js 0x24b03 <function_24b03>
0x248eb:    85 c0                              	test eax, eax
0x248ed:    0f 84 4f 06 00 00                  	je 0x24f42 <function_24f42>
0x248f3:    8b 10                              	mov edx, dword ptr [eax]
0x248f5:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x248f9:    8d 84 24 d8 00 00 00               	lea eax, [esp + 0xd8]
0x24900:    89 04 24                           	mov dword ptr [esp], eax
0x24903:    ff 52 08                           	call dword ptr [edx + 8]
0x24906:    83 ec 04                           	sub esp, 4
0x24909:    8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x24910:    8b 10                              	mov edx, dword ptr [eax]
0x24912:    89 04 24                           	mov dword ptr [esp], eax
0x24915:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x24918:    89 84 24 84 01 00 00               	mov dword ptr [esp + 0x184], eax
0x2491f:    8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x24926:    c7 84 24 80 01 00 00 01 00 00 00   	mov dword ptr [esp + 0x180], 1
0x24931:    85 c0                              	test eax, eax
0x24933:    0f 84 92 00 00 00                  	je 0x249cb <function_249cb>
0x24939:    8b 10                              	mov edx, dword ptr [eax]
0x2493b:    89 04 24                           	mov dword ptr [esp], eax
0x2493e:    ff 52 04                           	call dword ptr [edx + 4]
0x24941:    e9 85 00 00 00                     	jmp 0x249cb <function_249cb>
; data inside code section at 0x24946 -- 0x2497f
0x24946:    85 d2 0f 88 0a 02 00 00  8b 54 24 4c 8b 5c 24 4c   |.........T$L.\$L|
0x24956:    2b 5c 24 3c c7 84 24 b8  00 00 00 00 00 00 00 8b   |+\$<..$.........|
0x24966:    4a 08 85 c9 89 8c 24 bc  00 00 00 0f 84 82 03 00   |J.....$.........|
0x24976:    00 8b 41 04 85 c0 74 0a  89                        |..A...t..       |
; function: function_2497f at 0x2497f -- 0x24982
0x2497f:    c2 42 f0                           	ret 0xf042
; data inside code section at 0x24982 -- 0x249b1
0x24982:    0f b1 51 04 75 f2 85 c0  0f 84 5e 03 00 00 8b 54   |..Q.u.....^....T|
0x24992:    24 3c 8b 44 1a 04 89 8c  24 88 01 00 00 89 84 24   |$<.D....$......$|
0x249a2:    b8 00 00 00 89 84 24 84  01 00 00 f0 ff 41 04      |......$......A. |
; function: function_249b1 at 0x249b1 -- 0x249b2
; data inside code section at 0x249b2 -- 0x249cb
0x249b2:    84 24 bc 00 00 00 c7 84  24 80 01 00 00 00 00 00   |.$......$.......|
0x249c2:    00 89 04 24 e8 75 ff 00  00                        |...$.u...       |
; function: function_249cb at 0x249cb -- 0x24a87
0x249cb:    8d 84 24 e7 00 00 00               	lea eax, [esp + 0xe7]
0x249d2:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x249d6:    89 84 24 e0 00 00 00               	mov dword ptr [esp + 0xe0], eax
0x249dd:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x249e1:    8d 9c 24 80 01 00 00               	lea ebx, [esp + 0x180]
0x249e8:    83 c1 04                           	add ecx, 4
0x249eb:    8b 10                              	mov edx, dword ptr [eax]
0x249ed:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x249f1:    8d 8c 24 e0 00 00 00               	lea ecx, [esp + 0xe0]
0x249f8:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x24a00:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x24a08:    89 d0                              	mov eax, edx
0x24a0a:    c1 f8 1f                           	sar eax, 0x1f
0x24a0d:    31 d0                              	xor eax, edx
0x24a0f:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x24a14:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x24a19:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x24a1d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x24a21:    89 14 24                           	mov dword ptr [esp], edx
0x24a24:    e8 b7 b7 01 00                     	call 0x401e0 <unknown_401e0>
0x24a29:    84 c0                              	test al, al
0x24a2b:    0f 85 62 03 00 00                  	jne 0x24d93 <function_24d93>
0x24a31:    8b 54 24 5c                        	mov edx, dword ptr [esp + 0x5c]
0x24a35:    8d 9c 24 80 01 00 00               	lea ebx, [esp + 0x180]
0x24a3c:    8d 84 24 d4 00 00 00               	lea eax, [esp + 0xd4]
0x24a43:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x24a47:    89 04 24                           	mov dword ptr [esp], eax
0x24a4a:    89 94 24 d4 00 00 00               	mov dword ptr [esp + 0xd4], edx
0x24a51:    e8 ca 2b 02 00                     	call 0x47620 <unknown_47620>
0x24a56:    89 1c 24                           	mov dword ptr [esp], ebx
0x24a59:    e8 12 21 01 00                     	call 0x36b70 <unknown_36b70>
0x24a5e:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x24a62:    83 44 24 4c 0c                     	add dword ptr [esp + 0x4c], 0xc
0x24a67:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x24a6b:    3b 50 14                           	cmp edx, dword ptr [eax + 0x14]
0x24a6e:    0f 85 60 fc ff ff                  	jne 0x246d4
0x24a74:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x24a77:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x24a7b:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x24a7f:    85 c0                              	test eax, eax
0x24a81:    0f 84 72 03 00 00                  	je 0x24df9
; function: function_24a87 at 0x24a87 -- 0x24ac8
0x24a87:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x24a8b:    80 7a 04 00                        	cmp byte ptr [edx + 4], 0
0x24a8f:    0f 84 f3 01 00 00                  	je 0x24c88 <function_24c88>
0x24a95:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x24a98:    83 86 90 00 00 00 01               	add dword ptr [esi + 0x90], 1
0x24a9f:    85 c0                              	test eax, eax
0x24aa1:    74 0b                              	je 0x24aae <function_24a87+0x27>
0x24aa3:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x24aa6:    85 c0                              	test eax, eax
0x24aa8:    0f 85 e1 01 00 00                  	jne 0x24c8f <function_24c8f>
0x24aae:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x24ab2:    8b 02                              	mov eax, dword ptr [edx]
0x24ab4:    89 14 24                           	mov dword ptr [esp], edx
0x24ab7:    ff 50 10                           	call dword ptr [eax + 0x10]
0x24aba:    39 7c 24 58                        	cmp dword ptr [esp + 0x58], edi
0x24abe:    89 7c 24 38                        	mov dword ptr [esp + 0x38], edi
0x24ac2:    0f 85 f8 fd ff ff                  	jne 0x248c0
; function: function_24ac8 at 0x24ac8 -- 0x24ad7
0x24ac8:    8b 44 24 58                        	mov eax, dword ptr [esp + 0x58]
0x24acc:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x24ad0:    89 c7                              	mov edi, eax
0x24ad2:    e9 e9 fd ff ff                     	jmp 0x248c0 <function_248c0>
; data inside code section at 0x24ad7 -- 0x24ad8
0x24ad7:    90                                                 |.               |
; function: function_24ad8 at 0x24ad8 -- 0x24ae2
0x24ad8:    8b 55 00                           	mov edx, dword ptr [ebp]
0x24adb:    31 c0                              	xor eax, eax
0x24add:    e9 b7 f9 ff ff                     	jmp 0x24499 <function_24499>
; data inside code section at 0x24ae2 -- 0x24ae8
0x24ae2:    8d b6 00 00 00 00                                  |......          |
; function: function_24ae8 at 0x24ae8 -- 0x24af9
0x24ae8:    8d 94 24 d0 00 00 00               	lea edx, [esp + 0xd0]
0x24aef:    8d 5e 04                           	lea ebx, [esi + 4]
0x24af2:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x24af6:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x24af9 -- 0x24afa
0x24af9:    e8                                                 |.               |
; dynamically linked function: _ZNSs6assignERKSs at 0x24afa -- 0x24afb
; data inside code section at 0x24afb -- 0x24afe
0x24afb:    ff ff ff                                           |...             |
; function: function_24afe at 0x24afe -- 0x24b03
0x24afe:    e9 d3 fc ff ff                     	jmp 0x247d6 <function_247d6>
; function: function_24b03 at 0x24b03 -- 0x24b58
0x24b03:    8b 00                              	mov eax, dword ptr [eax]
0x24b05:    85 c0                              	test eax, eax
0x24b07:    0f 84 35 04 00 00                  	je 0x24f42 <function_24f42>
0x24b0d:    8b 10                              	mov edx, dword ptr [eax]
0x24b0f:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x24b13:    8d 84 24 dc 00 00 00               	lea eax, [esp + 0xdc]
0x24b1a:    89 04 24                           	mov dword ptr [esp], eax
0x24b1d:    ff 52 08                           	call dword ptr [edx + 8]
0x24b20:    83 ec 04                           	sub esp, 4
0x24b23:    8b 84 24 dc 00 00 00               	mov eax, dword ptr [esp + 0xdc]
0x24b2a:    8b 10                              	mov edx, dword ptr [eax]
0x24b2c:    89 04 24                           	mov dword ptr [esp], eax
0x24b2f:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x24b32:    89 84 24 84 01 00 00               	mov dword ptr [esp + 0x184], eax
0x24b39:    8b 84 24 dc 00 00 00               	mov eax, dword ptr [esp + 0xdc]
0x24b40:    c7 84 24 80 01 00 00 01 00 00 00   	mov dword ptr [esp + 0x180], 1
0x24b4b:    85 c0                              	test eax, eax
0x24b4d:    0f 85 e6 fd ff ff                  	jne 0x24939
0x24b53:    e9 73 fe ff ff                     	jmp 0x249cb <function_249cb>
; data inside code section at 0x24b58 -- 0x24b7a
0x24b58:    8b 44 24 4c 8b 58 04 c7  84 24 c0 00 00 00 00 00   |.D$L.X...$......|
0x24b68:    00 00 8b 4b 04 85 c9 89  8c 24 c4 00 00 00 0f 84   |...K.....$......|
0x24b78:    f9 01                                              |..              |
; function: function_24b7a at 0x24b7a -- 0x24bcf
0x24b7a:    00 00                              	add byte ptr [eax], al
0x24b7c:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x24b7f:    85 c0                              	test eax, eax
0x24b81:    74 0a                              	je 0x24b8d <function_24b7a+0x13>
0x24b83:    89 c2                              	mov edx, eax
0x24b85:    42                                 	inc edx
0x24b86:    f0 0f b1 51 04                     	lock cmpxchg dword ptr [ecx + 4], edx
0x24b8b:    75 f2                              	jne 0x24b7f <function_24b7a+0x5>
0x24b8d:    85 c0                              	test eax, eax
0x24b8f:    0f 84 d5 01 00 00                  	je 0x24d6a <function_24d6a>
0x24b95:    8b 03                              	mov eax, dword ptr [ebx]
0x24b97:    89 8c 24 88 01 00 00               	mov dword ptr [esp + 0x188], ecx
0x24b9e:    89 84 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], eax
0x24ba5:    89 84 24 84 01 00 00               	mov dword ptr [esp + 0x184], eax
0x24bac:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x24bb0:    8d 84 24 c4 00 00 00               	lea eax, [esp + 0xc4]
0x24bb7:    c7 84 24 80 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x180], 0
0x24bc2:    89 04 24                           	mov dword ptr [esp], eax
0x24bc5:    e8 76 fd 00 00                     	call 0x34940 <unknown_34940>
0x24bca:    e9 fc fd ff ff                     	jmp 0x249cb <function_249cb>
; function: function_24bcf at 0x24bcf -- 0x24bd6
0x24bcf:    31 c0                              	xor eax, eax
0x24bd1:    e9 95 fb ff ff                     	jmp 0x2476b
; function: function_24bd6 at 0x24bd6 -- 0x24c2e
0x24bd6:    8b 94 24 78 01 00 00               	mov edx, dword ptr [esp + 0x178]
0x24bdd:    39 94 24 7c 01 00 00               	cmp dword ptr [esp + 0x17c], edx
0x24be4:    0f 87 2d 01 00 00                  	ja 0x24d17 <function_24d17>
0x24bea:    8b 94 24 6c 01 00 00               	mov edx, dword ptr [esp + 0x16c]
0x24bf1:    85 d2                              	test edx, edx
0x24bf3:    74 3e                              	je 0x24c33 <function_24c33>
0x24bf5:    8b 84 24 68 01 00 00               	mov eax, dword ptr [esp + 0x168]
0x24bfc:    83 f8 09                           	cmp eax, 9
0x24bff:    0f 86 b3 01 00 00                  	jbe 0x24db8 <function_24db8>
0x24c05:    3b 54 24 34                        	cmp edx, dword ptr [esp + 0x34]
0x24c09:    0f 84 a0 01 00 00                  	je 0x24daf <function_24daf>
0x24c0f:    8b 8c 24 70 01 00 00               	mov ecx, dword ptr [esp + 0x170]
0x24c16:    39 c8                              	cmp eax, ecx
0x24c18:    0f 82 9a 01 00 00                  	jb 0x24db8 <function_24db8>
0x24c1e:    85 c9                              	test ecx, ecx
0x24c20:    0f 85 06 01 00 00                  	jne 0x24d2c <function_24d2c>
0x24c26:    83 f8 0a                           	cmp eax, 0xa
0x24c29:    76 08                              	jbe 0x24c33 <function_24c33>
0x24c2b:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x24c2e -- 0x24c2f
0x24c2e:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x24c2f -- 0x24c30
; data inside code section at 0x24c30 -- 0x24c33
0x24c30:    ff ff ff                                           |...             |
; function: function_24c33 at 0x24c33 -- 0x24c88
0x24c33:    80 bc 24 e8 00 00 00 00            	cmp byte ptr [esp + 0xe8], 0
0x24c3b:    74 17                              	je 0x24c54 <function_24c33+0x21>
0x24c3d:    8d 84 24 ec 00 00 00               	lea eax, [esp + 0xec]
0x24c44:    89 04 24                           	mov dword ptr [esp], eax
0x24c47:    e8 fc ff ff ff                     	call 0x24c48
0x24c4c:    c6 84 24 e8 00 00 00 00            	mov byte ptr [esp + 0xe8], 0
0x24c54:    8d 84 24 a4 00 00 00               	lea eax, [esp + 0xa4]
0x24c5b:    89 04 24                           	mov dword ptr [esp], eax
0x24c5e:    e8 dd fc 00 00                     	call 0x34940 <unknown_34940>
0x24c63:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x24c67:    8b 94 24 8c 01 00 00               	mov edx, dword ptr [esp + 0x18c]
0x24c6e:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x24c75:    0f 85 83 01 00 00                  	jne 0x24dfe <function_24dfe>
0x24c7b:    81 c4 9c 01 00 00                  	add esp, 0x19c
0x24c81:    5b                                 	pop ebx
0x24c82:    5e                                 	pop esi
0x24c83:    5f                                 	pop edi
0x24c84:    5d                                 	pop ebp
0x24c85:    c2 04 00                           	ret 4
; function: function_24c88 at 0x24c88 -- 0x24c8f
0x24c88:    83 86 94 00 00 00 01               	add dword ptr [esi + 0x94], 1
; function: function_24c8f at 0x24c8f -- 0x24cb6
0x24c8f:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x24c93:    8b 02                              	mov eax, dword ptr [edx]
0x24c95:    89 14 24                           	mov dword ptr [esp], edx
0x24c98:    ff 50 10                           	call dword ptr [eax + 0x10]
0x24c9b:    8b 3f                              	mov edi, dword ptr [edi]
0x24c9d:    39 7c 24 58                        	cmp dword ptr [esp + 0x58], edi
0x24ca1:    0f 84 21 fe ff ff                  	je 0x24ac8 <function_24ac8>
0x24ca7:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x24caa:    85 c0                              	test eax, eax
0x24cac:    89 44 24 48                        	mov dword ptr [esp + 0x48], eax
0x24cb0:    0f 85 d9 f9 ff ff                  	jne 0x2468f
; function: function_24cb6 at 0x24cb6 -- 0x24cd5
0x24cb6:    c7 44 24 0c c0 f9 02 00            	mov dword ptr [esp + 0xc], 0x2f9c0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]"
0x24cbe:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x24cc6:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x24cce:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x24cd5 -- 0x24cd6
0x24cd5:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x24cd6 -- 0x24cd7
; data inside code section at 0x24cd7 -- 0x24ce0
0x24cd7:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_24ce0 at 0x24ce0 -- 0x24cee
0x24ce0:    8b 00                              	mov eax, dword ptr [eax]
0x24ce2:    89 84 24 cc 00 00 00               	mov dword ptr [esp + 0xcc], eax
0x24ce9:    e9 69 fb ff ff                     	jmp 0x24857
; function: function_24cee at 0x24cee -- 0x24d17
0x24cee:    c7 84 24 bc 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xbc], 0
0x24cf9:    8b 84 24 b8 00 00 00               	mov eax, dword ptr [esp + 0xb8]
0x24d00:    c7 84 24 88 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x188], 0
0x24d0b:    89 84 24 84 01 00 00               	mov dword ptr [esp + 0x184], eax
0x24d12:    e9 9a fc ff ff                     	jmp 0x249b1 <function_249b1>
; function: function_24d17 at 0x24d17 -- 0x24d2c
0x24d17:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x24d1b:    89 2c 24                           	mov dword ptr [esp], ebp
0x24d1e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x24d22:    e8 b9 01 02 00                     	call 0x44ee0 <unknown_44ee0>
0x24d27:    e9 be fe ff ff                     	jmp 0x24bea
; function: function_24d2c at 0x24d2c -- 0x24d6a
0x24d2c:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x24d30:    8d 1c 9a                           	lea ebx, [edx + ebx*4]
0x24d33:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x24d36:    89 de                              	mov esi, ebx
0x24d38:    c1 e1 02                           	shl ecx, 2
0x24d3b:    29 ce                              	sub esi, ecx
0x24d3d:    39 f3                              	cmp ebx, esi
0x24d3f:    0f 86 e1 fe ff ff                  	jbe 0x24c26
0x24d45:    8d 76 00                           	lea esi, [esi]
0x24d48:    89 1c 24                           	mov dword ptr [esp], ebx
0x24d4b:    e8 20 1e 01 00                     	call 0x36b70 <unknown_36b70>
0x24d50:    83 eb 0c                           	sub ebx, 0xc
0x24d53:    39 de                              	cmp esi, ebx
0x24d55:    72 f1                              	jb 0x24d48 <function_24d2c+0x1c>
0x24d57:    8b 84 24 68 01 00 00               	mov eax, dword ptr [esp + 0x168]
0x24d5e:    8b 94 24 6c 01 00 00               	mov edx, dword ptr [esp + 0x16c]
0x24d65:    e9 bc fe ff ff                     	jmp 0x24c26
; function: function_24d6a at 0x24d6a -- 0x24d93
0x24d6a:    c7 84 24 c4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc4], 0
0x24d75:    8b 84 24 c0 00 00 00               	mov eax, dword ptr [esp + 0xc0]
0x24d7c:    c7 84 24 88 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x188], 0
0x24d87:    89 84 24 84 01 00 00               	mov dword ptr [esp + 0x184], eax
0x24d8e:    e9 1d fe ff ff                     	jmp 0x24bb0
; function: function_24d93 at 0x24d93 -- 0x24daf
0x24d93:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x24d97:    8d 9c 24 80 01 00 00               	lea ebx, [esp + 0x180]
0x24d9e:    c6 42 04 00                        	mov byte ptr [edx + 4], 0
0x24da2:    89 1c 24                           	mov dword ptr [esp], ebx
0x24da5:    e8 c6 1d 01 00                     	call 0x36b70 <unknown_36b70>
0x24daa:    e9 c5 fc ff ff                     	jmp 0x24a74 <function_24a74>
; function: function_24daf at 0x24daf -- 0x24db8
0x24daf:    83 f8 0a                           	cmp eax, 0xa
0x24db2:    0f 84 57 fe ff ff                  	je 0x24c0f
; function: function_24db8 at 0x24db8 -- 0x24df4
0x24db8:    90                                 	nop 
0x24db9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x24dc0:    e8 f5 db 00 00                     	call 0x329ba <function_329ba>
0x24dc5:    8d 76 00                           	lea esi, [esi]
0x24dc8:    e8 45 d8 00 00                     	call 0x32612 <unknown_32612>
0x24dcd:    8d 76 00                           	lea esi, [esi]
0x24dd0:    e8 0d d9 00 00                     	call 0x326e2 <function_326e2>
0x24dd5:    c7 44 24 0c 00 f4 02 00            	mov dword ptr [esp + 0xc], 0x2f400 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<std::basic_string<char> >, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<std::basic_string<char> >&]"
0x24ddd:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x24de5:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x24ded:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x24df4 -- 0x24df5
0x24df4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x24df5 -- 0x24df6
; data inside code section at 0x24df6 -- 0x24df9
0x24df6:    ff ff ff                                           |...             |
; function: function_24df9 at 0x24df9 -- 0x24dfe
0x24df9:    e8 1c da 00 00                     	call 0x3281a <function_3281a>
; function: function_24dfe at 0x24dfe -- 0x24dff
; dynamically linked function: __stack_chk_fail at 0x24dff -- 0x24e00
; data inside code section at 0x24e00 -- 0x24e04
0x24e00:    ff ff ff 89                                        |....            |
; function: function_24e04 at 0x24e04 -- 0x24e05
0x24e04:    c3                                 	ret 
; data inside code section at 0x24e05 -- 0x24e1e
0x24e05:    8d 84 24 d0 00 00 00 89  04 24 89 54 24 2c e8 fc   |..$......$.T$,..|
0x24e15:    ff ff ff 8b 54 24 2c 89  d8                        |....T$,..       |
; function: function_24e1e at 0x24e1e -- 0x24e1f
; function: function_24e1f at 0x24e1f -- 0x24e2b
0x24e1f:    fa                                 	cli 
0x24e20:    01 74 6b 83                        	add dword ptr [ebx + ebp*2 - 0x7d], esi
0x24e24:    ea 01 74 54 89 c3 8b               	ljmp 0x8bc3:0x89547401 <function_89547401>
; data inside code section at 0x24e2b -- 0x24e36
0x24e2b:    44 24 44 89 04 24 e8 0a  23 01 00                  |D$D..$..#..     |
; function: function_24e36 at 0x24e36 -- 0x24e65
0x24e36:    8b 84 24 78 01 00 00               	mov eax, dword ptr [esp + 0x178]
0x24e3d:    39 84 24 7c 01 00 00               	cmp dword ptr [esp + 0x17c], eax
0x24e44:    76 10                              	jbe 0x24e56 <function_24e36+0x20>
0x24e46:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x24e4a:    89 2c 24                           	mov dword ptr [esp], ebp
0x24e4d:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x24e51:    e8 8a 00 02 00                     	call 0x44ee0 <unknown_44ee0>
0x24e56:    8d 84 24 e8 00 00 00               	lea eax, [esp + 0xe8]
0x24e5d:    89 04 24                           	mov dword ptr [esp], eax
0x24e60:    e8 6b 3a 01 00                     	call 0x388d0 <unknown_388d0>
; function: function_24e65 at 0x24e65 -- 0x24e84
0x24e65:    8d 84 24 a4 00 00 00               	lea eax, [esp + 0xa4]
0x24e6c:    89 04 24                           	mov dword ptr [esp], eax
0x24e6f:    e8 cc fa 00 00                     	call 0x34940 <unknown_34940>
0x24e74:    89 1c 24                           	mov dword ptr [esp], ebx
0x24e77:    e8 fc ff ff ff                     	call 0x24e78
0x24e7c:    89 04 24                           	mov dword ptr [esp], eax
0x24e7f:    e8 fc ff ff ff                     	call 0x24e80
; data inside code section at 0x24e84 -- 0x24e85
0x24e84:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x24e85 -- 0x24e86
; data inside code section at 0x24e86 -- 0x24e89
0x24e86:    ff ff ff                                           |...             |
; function: function_24e89 at 0x24e89 -- 0x24e8e
0x24e89:    e9 d5 f7 ff ff                     	jmp 0x24663
; data inside code section at 0x24e8e -- 0x24e92
0x24e8e:    89 04 24 e8                                        |..$.            |
; dynamically linked function: __cxa_begin_catch at 0x24e92 -- 0x24e93
; data inside code section at 0x24e93 -- 0x24eb6
0x24e93:    ff ff ff 8b 5f 08 85 db  0f 84 58 ff ff ff 8b 03   |...._.....X.....|
0x24ea3:    89 1c 24 ff 50 0c 8b 03  c6 43 04 00 89 1c 24 ff   |..$.P....C....$.|
0x24eb3:    50 10 e8                                           |P..             |
; dynamically linked function: __cxa_rethrow at 0x24eb6 -- 0x24eb7
; data inside code section at 0x24eb7 -- 0x24eba
0x24eb7:    ff ff ff                                           |...             |
; function: function_24eba at 0x24eba -- 0x24ebe
0x24eba:    89 c3                              	mov ebx, eax
0x24ebc:    eb 98                              	jmp 0x24e56
; function: function_24ebe at 0x24ebe -- 0x24ec4
0x24ebe:    89 c3                              	mov ebx, eax
0x24ec0:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
; data inside code section at 0x24ec4 -- 0x24ec5
0x24ec4:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x24ec5 -- 0x24ec6
; data inside code section at 0x24ec6 -- 0x24ec9
0x24ec6:    ff ff ff                                           |...             |
; function: function_24ec9 at 0x24ec9 -- 0x24ed4
0x24ec9:    89 d8                              	mov eax, ebx
0x24ecb:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x24ecf:    e9 4f ff ff ff                     	jmp 0x24e23
; data inside code section at 0x24ed4 -- 0x24ef2
0x24ed4:    c7 44 24 0c c0 f1 02 00  c7 44 24 08 c9 01 00 00   |.D$......D$.....|
0x24ee4:    c7 44 24 04 c8 dd 00 00  c7 04 24 90 a3 00         |.D$.......$...  |
; function: function_24ef2 at 0x24ef2 -- 0x24ef5
0x24ef2:    00 e8                              	add al, ch
0x24ef4:    fc                                 	cld 
; data inside code section at 0x24ef5 -- 0x24ef7
0x24ef5:    ff ff                                              |..              |
; function: function_24ef7 at 0x24ef7 -- 0x24f0e
0x24ef7:    ff 8d 94 24 e8 00                  	dec dword ptr [ebp + 0xe82494]
0x24efd:    00 00                              	add byte ptr [eax], al
0x24eff:    89 c3                              	mov ebx, eax
0x24f01:    89 14 24                           	mov dword ptr [esp], edx
0x24f04:    e8 37 22 01 00                     	call 0x37140 <unknown_37140>
0x24f09:    e9 57 ff ff ff                     	jmp 0x24e65 <function_24e65>
; function: function_24f0e at 0x24f0e -- 0x24f2b
0x24f0e:    89 c6                              	mov esi, eax
0x24f10:    89 1c 24                           	mov dword ptr [esp], ebx
0x24f13:    89 f3                              	mov ebx, esi
0x24f15:    e8 56 1c 01 00                     	call 0x36b70 <unknown_36b70>
0x24f1a:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x24f1e:    8b 02                              	mov eax, dword ptr [edx]
0x24f20:    89 14 24                           	mov dword ptr [esp], edx
0x24f23:    ff 50 10                           	call dword ptr [eax + 0x10]
0x24f26:    e9 ff fe ff ff                     	jmp 0x24e2a
; function: function_24f2b at 0x24f2b -- 0x24f42
0x24f2b:    89 c3                              	mov ebx, eax
0x24f2d:    8b 84 24 d8 00 00 00               	mov eax, dword ptr [esp + 0xd8]
0x24f34:    85 c0                              	test eax, eax
0x24f36:    74 e2                              	je 0x24f1a
0x24f38:    8b 10                              	mov edx, dword ptr [eax]
0x24f3a:    89 04 24                           	mov dword ptr [esp], eax
0x24f3d:    ff 52 04                           	call dword ptr [edx + 4]
0x24f40:    eb d8                              	jmp 0x24f1a
; function: function_24f42 at 0x24f42 -- 0x24f5a
0x24f42:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x24f4a:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x24f52:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
; function: function_24f5a at 0x24f5a -- 0x24f61
0x24f5a:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x24f61 -- 0x24f62
0x24f61:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x24f62 -- 0x24f63
; data inside code section at 0x24f63 -- 0x24f65
0x24f63:    ff ff                                              |..              |
; function: function_24f65 at 0x24f65 -- 0x24f7d
0x24f65:    ff 89 c3 8b 84 24                  	dec dword ptr [ecx + 0x24848bc3]
0x24f6b:    dc 00                              	fadd qword ptr [eax]
0x24f6d:    00 00                              	add byte ptr [eax], al
0x24f6f:    85 c0                              	test eax, eax
0x24f71:    74 a7                              	je 0x24f1a
0x24f73:    8b 10                              	mov edx, dword ptr [eax]
0x24f75:    89 04 24                           	mov dword ptr [esp], eax
0x24f78:    ff 52 04                           	call dword ptr [edx + 4]
0x24f7b:    eb 9d                              	jmp 0x24f1a
; data inside code section at 0x24f7d -- 0x24f82
0x24f7d:    8d 76 00 e9 99                                     |.v...           |
; function: function_24f82 at 0x24f82 -- 0x24f83
; data inside code section at 0x24f83 -- 0x24f90
0x24f83:    ff ff 8d 74 26 00 8d bc  27 00 00 00 00            |...t&...'....   |
; function: function_24f90 at 0x24f90 -- 0x24f95
0x24f90:    e9 8e fe ff ff                     	jmp 0x24e23
; function: function_24f95 at 0x24f95 -- 0x24fa5
0x24f95:    89 c3                              	mov ebx, eax
0x24f97:    89 f6                              	mov esi, esi
0x24f99:    8d bc 27 00 00 00 00               	lea edi, [edi]
0x24fa0:    e9 75 ff ff ff                     	jmp 0x24f1a
; function: function_24fa5 at 0x24fa5 -- 0x24fd2
0x24fa5:    8d 9c 24 b0 00 00 00               	lea ebx, [esp + 0xb0]
0x24fac:    89 1c 24                           	mov dword ptr [esp], ebx
0x24faf:    e8 4c fe 00 00                     	call 0x34e00 <unknown_34e00>
0x24fb4:    89 1c 24                           	mov dword ptr [esp], ebx
0x24fb7:    e8 84 2a 01 00                     	call 0x37a40 <unknown_37a40>
0x24fbc:    89 c3                              	mov ebx, eax
0x24fbe:    8d 84 24 c8 00 00 00               	lea eax, [esp + 0xc8]
0x24fc5:    89 04 24                           	mov dword ptr [esp], eax
0x24fc8:    e8 63 57 01 00                     	call 0x3a730 <unknown_3a730>
0x24fcd:    e9 93 fe ff ff                     	jmp 0x24e65 <function_24e65>
; function: function_24fd2 at 0x24fd2 -- 0x24fef
0x24fd2:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x24fd6:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x24fda:    89 1c 24                           	mov dword ptr [esp], ebx
0x24fdd:    e8 de a9 00 00                     	call 0x2f9c0 <_ZZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot1ISsPKcNS_8functionIFSsSB_EEEEENS1_5mutexEEEEdeEvE19__PRETTY_FUNCTION__> ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]"
0x24fe2:    8b 44 24 30                        	mov eax, dword ptr [esp + 0x30]
0x24fe6:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x24fea:    e9 2f fe ff ff                     	jmp 0x24e1e <function_24e1e>
; function: function_24fef at 0x24fef -- 0x24ff4
0x24fef:    e9 34 fe ff ff                     	jmp 0x24e28
; data inside code section at 0x24ff4 -- 0x24ff5
0x24ff4:    89                                                 |.               |
; function: function_24ff5 at 0x24ff5 -- 0x24ff6
0x24ff5:    c3                                 	ret 
; function: function_24ff6 at 0x24ff6 -- 0x24ffb
0x24ff6:    e9 3b fe ff ff                     	jmp 0x24e36 <function_24e36>
; section: .text._Z1_PKc
; function: _Z1_PKc at 0x25050 -- 0x250b2
0x25050:    83 ec 2c                           	sub esp, 0x2c
0x25053:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x25059:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x2505d:    31 c0                              	xor eax, eax
0x2505f:    a1 34 00 00 00                     	mov eax, dword ptr [0x34]
0x25064:    89 5c 24 20                        	mov dword ptr [esp + 0x20], ebx
0x25068:    8b 5c 24 30                        	mov ebx, dword ptr [esp + 0x30]
0x2506c:    89 7c 24 28                        	mov dword ptr [esp + 0x28], edi
0x25070:    8b 7c 24 34                        	mov edi, dword ptr [esp + 0x34]
0x25074:    89 74 24 24                        	mov dword ptr [esp + 0x24], esi
0x25078:    85 c0                              	test eax, eax
0x2507a:    0f 84 8b 00 00 00                  	je 0x2510b <function_2510b>
0x25080:    8d 74 24 14                        	lea esi, [esp + 0x14]
0x25084:    89 7c 24 08                        	mov dword ptr [esp + 8], edi
0x25088:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2508c:    89 34 24                           	mov dword ptr [esp], esi
0x2508f:    e8 bc 43 02 00                     	call 0x49450 <unknown_49450>
0x25094:    83 ec 04                           	sub esp, 4
0x25097:    80 7c 24 14 00                     	cmp byte ptr [esp + 0x14], 0
0x2509c:    74 52                              	je 0x250f0 <function_250f0>
0x2509e:    b8 90 a7 00 00                     	mov eax, 0xa790
0x250a3:    85 c0                              	test eax, eax
0x250a5:    74 49                              	je 0x250f0 <function_250f0>
0x250a7:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x250ab:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x250af:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x250b2 -- 0x250b3
0x250b2:    e8                                                 |.               |
; dynamically linked function: _ZNSsC1ERKSs at 0x250b3 -- 0x250b4
; data inside code section at 0x250b4 -- 0x250b7
0x250b4:    ff ff ff                                           |...             |
; function: function_250b7 at 0x250b7 -- 0x250c5
0x250b7:    80 7c 24 14 00                     	cmp byte ptr [esp + 0x14], 0
0x250bc:    74 0c                              	je 0x250ca <function_250ca>
0x250be:    8d 44 24 18                        	lea eax, [esp + 0x18]
0x250c2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x250c5 -- 0x250c6
0x250c5:    e8                                                 |.               |
; dynamically linked function: _ZNSsD1Ev at 0x250c6 -- 0x250c7
; data inside code section at 0x250c7 -- 0x250ca
0x250c7:    ff ff ff                                           |...             |
; function: function_250ca at 0x250ca -- 0x250eb
0x250ca:    8b 54 24 1c                        	mov edx, dword ptr [esp + 0x1c]
0x250ce:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x250d5:    89 d8                              	mov eax, ebx
0x250d7:    75 2d                              	jne 0x25106 <function_25106>
0x250d9:    8b 5c 24 20                        	mov ebx, dword ptr [esp + 0x20]
0x250dd:    8b 74 24 24                        	mov esi, dword ptr [esp + 0x24]
0x250e1:    8b 7c 24 28                        	mov edi, dword ptr [esp + 0x28]
0x250e5:    83 c4 2c                           	add esp, 0x2c
0x250e8:    c2 04 00                           	ret 4
; data inside code section at 0x250eb -- 0x250f0
0x250eb:    90 8d 74 26 00                                     |..t&.           |
; function: function_250f0 at 0x250f0 -- 0x25106
0x250f0:    8d 44 24 13                        	lea eax, [esp + 0x13]
0x250f4:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x250f8:    89 7c 24 04                        	mov dword ptr [esp + 4], edi
0x250fc:    89 1c 24                           	mov dword ptr [esp], ebx
0x250ff:    e8 fc ff ff ff                     	call 0x25100
0x25104:    eb b1                              	jmp 0x250b7 <function_250b7>
; function: function_25106 at 0x25106 -- 0x25107
; dynamically linked function: __stack_chk_fail at 0x25107 -- 0x25108
; data inside code section at 0x25108 -- 0x2510b
0x25108:    ff ff ff                                           |...             |
; function: function_2510b at 0x2510b -- 0x2512a
0x2510b:    c7 44 24 0c a0 ee 02 00            	mov dword ptr [esp + 0xc], 0x2eea0 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>&]"
0x25113:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x2511b:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x25123:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x2512a -- 0x2512b
0x2512a:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2512b -- 0x2512c
; data inside code section at 0x2512c -- 0x25130
0x2512c:    ff ff ff 89                                        |....            |
; function: function_25130 at 0x25130 -- 0x25131
0x25130:    c3                                 	ret 
; data inside code section at 0x25131 -- 0x2513d
0x25131:    89 34 24 e8 57 2c 01 00  89 1c 24 e8               |.4$.W,....$.    |
; dynamically linked function: _Unwind_Resume at 0x2513d -- 0x2513e
; data inside code section at 0x2513e -- 0x25141
0x2513e:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEEclEi
; function: _ZN5boost8signals26detail12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS7_IFvRKNS0_10connectionEiEEENS0_5mutexEEclEi at 0x25150 -- 0x25230
0x25150:    55                                 	push ebp
0x25151:    57                                 	push edi
0x25152:    56                                 	push esi
0x25153:    53                                 	push ebx
0x25154:    81 ec 6c 01 00 00                  	sub esp, 0x16c
0x2515a:    8b 84 24 80 01 00 00               	mov eax, dword ptr [esp + 0x180]
0x25161:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x25168:    89 94 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], edx
0x2516f:    31 d2                              	xor edx, edx
0x25171:    c7 84 24 8c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x8c], 0
0x2517c:    c7 84 24 90 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x90], 0
0x25187:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x2518b:    8b 84 24 84 01 00 00               	mov eax, dword ptr [esp + 0x184]
0x25192:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x25196:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x2519a:    83 c0 0c                           	add eax, 0xc
0x2519d:    89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x251a4:    89 04 24                           	mov dword ptr [esp], eax
0x251a7:    e8 fc ff ff ff                     	call 0x251a8
0x251ac:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x251b0:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x251b3:    85 c0                              	test eax, eax
0x251b5:    0f 84 e2 05 00 00                  	je 0x2579d <function_2579d>
0x251bb:    8b 50 04                           	mov edx, dword ptr [eax + 4]
0x251be:    83 fa 01                           	cmp edx, 1
0x251c1:    0f 84 f4 06 00 00                  	je 0x258bb <function_258bb>
0x251c7:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x251cb:    89 84 24 98 00 00 00               	mov dword ptr [esp + 0x98], eax
0x251d2:    8b 11                              	mov edx, dword ptr [ecx]
0x251d4:    89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0x251db:    f0 ff 40 04                        	lock inc dword ptr [eax + 4]
0x251df:    8b 94 24 94 00 00 00               	mov edx, dword ptr [esp + 0x94]
0x251e6:    8b 84 24 98 00 00 00               	mov eax, dword ptr [esp + 0x98]
0x251ed:    8b 8c 24 8c 00 00 00               	mov ecx, dword ptr [esp + 0x8c]
0x251f4:    89 94 24 8c 00 00 00               	mov dword ptr [esp + 0x8c], edx
0x251fb:    8b 94 24 90 00 00 00               	mov edx, dword ptr [esp + 0x90]
0x25202:    89 84 24 90 00 00 00               	mov dword ptr [esp + 0x90], eax
0x25209:    8d 84 24 98 00 00 00               	lea eax, [esp + 0x98]
0x25210:    89 04 24                           	mov dword ptr [esp], eax
0x25213:    89 8c 24 94 00 00 00               	mov dword ptr [esp + 0x94], ecx
0x2521a:    89 94 24 98 00 00 00               	mov dword ptr [esp + 0x98], edx
0x25221:    e8 6a 04 01 00                     	call 0x35690 <unknown_35690>
0x25226:    8b 84 24 a4 00 00 00               	mov eax, dword ptr [esp + 0xa4]
0x2522d:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x25230 -- 0x25231
0x25230:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_unlock at 0x25231 -- 0x25232
; data inside code section at 0x25232 -- 0x25236
0x25232:    ff ff ff 8d                                        |....            |
; function: function_25236 at 0x25236 -- 0x2559a
0x25236:    84 24 c0                           	test byte ptr [eax + eax*8], ah
0x25239:    00 00                              	add byte ptr [eax], al
0x2523b:    00 89 44 24 38 89                  	add byte ptr [ecx - 0x76c7dbbc], cl
0x25241:    84 24 3c                           	test byte ptr [esp + edi], ah
0x25244:    01 00                              	add dword ptr [eax], eax
0x25246:    00 8d 44 24 5c 89                  	add byte ptr [ebp - 0x76a3dbbc], cl
0x2524c:    84 24 44                           	test byte ptr [esp + eax*2], ah
0x2524f:    01 00                              	add dword ptr [eax], eax
0x25251:    00 8b 84 24 8c 00                  	add byte ptr [ebx + 0x8c2484], cl
0x25257:    00 00                              	add byte ptr [eax], al
0x25259:    c6 84 24 bc 00 00 00 00            	mov byte ptr [esp + 0xbc], 0
0x25261:    c7 84 24 38 01 00 00 0a 00 00 00   	mov dword ptr [esp + 0x138], 0xa
0x2526c:    c7 84 24 40 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x140], 0
0x25277:    85 c0                              	test eax, eax
0x25279:    c7 84 24 48 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x148], 0
0x25284:    c7 84 24 4c 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x14c], 0
0x2528f:    0f 84 09 06 00 00                  	je 0x2589e <function_2589e>
0x25295:    8b 00                              	mov eax, dword ptr [eax]
0x25297:    85 c0                              	test eax, eax
0x25299:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x2529d:    0f 84 f6 05 00 00                  	je 0x25899 <function_25899>
0x252a3:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x252a7:    8d 8c 24 bc 00 00 00               	lea ecx, [esp + 0xbc]
0x252ae:    8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x252b2:    89 8c 24 84 00 00 00               	mov dword ptr [esp + 0x84], ecx
0x252b9:    89 04 24                           	mov dword ptr [esp], eax
0x252bc:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x252c0:    89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0x252c7:    89 94 24 88 00 00 00               	mov dword ptr [esp + 0x88], edx
0x252ce:    e8 9d 3d 02 00                     	call 0x49070 <unknown_49070>
0x252d3:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x252da:    85 c0                              	test eax, eax
0x252dc:    0f 84 bc 05 00 00                  	je 0x2589e <function_2589e>
0x252e2:    8b 00                              	mov eax, dword ptr [eax]
0x252e4:    85 c0                              	test eax, eax
0x252e6:    0f 84 ad 05 00 00                  	je 0x25899 <function_25899>
0x252ec:    8b 10                              	mov edx, dword ptr [eax]
0x252ee:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x252f2:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x252f6:    8d 44 24 6c                        	lea eax, [esp + 0x6c]
0x252fa:    89 04 24                           	mov dword ptr [esp], eax
0x252fd:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x25301:    8d 94 24 bc 00 00 00               	lea edx, [esp + 0xbc]
0x25308:    89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0x2530c:    e8 5f 3d 02 00                     	call 0x49070 <unknown_49070>
0x25311:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x25318:    85 c0                              	test eax, eax
0x2531a:    0f 84 7e 05 00 00                  	je 0x2589e <function_2589e>
0x25320:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x25323:    85 ed                              	test ebp, ebp
0x25325:    0f 84 45 05 00 00                  	je 0x25870 <function_25870>
0x2532b:    8b 4c 24 7c                        	mov ecx, dword ptr [esp + 0x7c]
0x2532f:    8b 54 24 74                        	mov edx, dword ptr [esp + 0x74]
0x25333:    8b 44 24 70                        	mov eax, dword ptr [esp + 0x70]
0x25337:    8b 74 24 78                        	mov esi, dword ptr [esp + 0x78]
0x2533b:    89 4c 24 58                        	mov dword ptr [esp + 0x58], ecx
0x2533f:    8b 4c 24 6c                        	mov ecx, dword ptr [esp + 0x6c]
0x25343:    89 54 24 48                        	mov dword ptr [esp + 0x48], edx
0x25347:    83 c2 04                           	add edx, 4
0x2534a:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x2534e:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x25352:    89 4c 24 40                        	mov dword ptr [esp + 0x40], ecx
0x25356:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x2535a:    39 54 24 58                        	cmp dword ptr [esp + 0x58], edx
0x2535e:    0f 84 de 01 00 00                  	je 0x25542 <function_25236+0x30c>
0x25364:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x25368:    80 38 00                           	cmp byte ptr [eax], 0
0x2536b:    0f 84 3b 03 00 00                  	je 0x256ac <function_256ac>
0x25371:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x25375:    8b 12                              	mov edx, dword ptr [edx]
0x25377:    39 f2                              	cmp edx, esi
0x25379:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x2537d:    0f 84 a1 01 00 00                  	je 0x25524 <function_25236+0x2ee>
0x25383:    39 54 24 4c                        	cmp dword ptr [esp + 0x4c], edx
0x25387:    0f 84 62 03 00 00                  	je 0x256ef <function_256ef>
0x2538d:    8b 4a 08                           	mov ecx, dword ptr [edx + 8]
0x25390:    85 c9                              	test ecx, ecx
0x25392:    89 4c 24 44                        	mov dword ptr [esp + 0x44], ecx
0x25396:    0f 84 82 02 00 00                  	je 0x2561e <function_2561e>
0x2539c:    8d 74 26 00                        	lea esi, [esi]
0x253a0:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x253a4:    8b 02                              	mov eax, dword ptr [edx]
0x253a6:    89 14 24                           	mov dword ptr [esp], edx
0x253a9:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x253ac:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x253b0:    8b b1 84 00 00 00                  	mov esi, dword ptr [ecx + 0x84]
0x253b6:    85 f6                              	test esi, esi
0x253b8:    0f 85 8a 02 00 00                  	jne 0x25648 <function_25648>
0x253be:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x253c2:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x253c5:    85 ed                              	test ebp, ebp
0x253c7:    0f 84 cf 02 00 00                  	je 0x2569c <function_2569c>
0x253cd:    8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0x253d0:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x253d3:    0f 84 06 01 00 00                  	je 0x254df <function_25236+0x2a9>
0x253d9:    8d b4 24 50 01 00 00               	lea esi, [esp + 0x150]
0x253e0:    eb 38                              	jmp 0x2541a <function_25236+0x1e4>
; data inside code section at 0x253e2 -- 0x253e8
0x253e2:    8d b6 00 00 00 00                                  |......          |
0x253e8:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x253ec:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x253f0:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x253f7:    8d 84 24 ac 00 00 00               	lea eax, [esp + 0xac]
0x253fe:    89 04 24                           	mov dword ptr [esp], eax
0x25401:    e8 6a 2f 02 00                     	call 0x48370 <unknown_48370>
0x25406:    89 34 24                           	mov dword ptr [esp], esi
0x25409:    e8 b2 24 01 00                     	call 0x378c0 <unknown_378c0>
0x2540e:    83 c3 0c                           	add ebx, 0xc
0x25411:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x25414:    0f 84 b6 00 00 00                  	je 0x254d0 <function_25236+0x29a>
0x2541a:    8b 03                              	mov eax, dword ptr [ebx]
0x2541c:    8d 94 24 bb 00 00 00               	lea edx, [esp + 0xbb]
0x25423:    89 94 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], edx
0x2542a:    8d 7b 04                           	lea edi, [ebx + 4]
0x2542d:    8d 8c 24 b0 00 00 00               	lea ecx, [esp + 0xb0]
0x25434:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x2543c:    89 c2                              	mov edx, eax
0x2543e:    c1 fa 1f                           	sar edx, 0x1f
0x25441:    31 c2                              	xor edx, eax
0x25443:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2544b:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x25450:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x25455:    89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0x25459:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x2545d:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x25461:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x25465:    89 34 24                           	mov dword ptr [esp], esi
0x25468:    e8 13 e7 01 00                     	call 0x43b80 <unknown_43b80>
0x2546d:    83 ec 04                           	sub esp, 4
0x25470:    8d 84 24 ba 00 00 00               	lea eax, [esp + 0xba]
0x25477:    89 84 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], eax
0x2547e:    8b 03                              	mov eax, dword ptr [ebx]
0x25480:    8d 8c 24 b4 00 00 00               	lea ecx, [esp + 0xb4]
0x25487:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x2548f:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x25497:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x2549c:    89 c2                              	mov edx, eax
0x2549e:    c1 fa 1f                           	sar edx, 0x1f
0x254a1:    31 c2                              	xor edx, eax
0x254a3:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x254a8:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x254ac:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x254b0:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x254b4:    89 04 24                           	mov dword ptr [esp], eax
0x254b7:    e8 74 ba 01 00                     	call 0x40f30 <unknown_40f30>
0x254bc:    84 c0                              	test al, al
0x254be:    0f 84 24 ff ff ff                  	je 0x253e8 <function_25236+0x1b2>
0x254c4:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x254c8:    89 34 24                           	mov dword ptr [esp], esi
0x254cb:    e8 f0 23 01 00                     	call 0x378c0 <unknown_378c0>
0x254d0:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x254d4:    8b 6a 08                           	mov ebp, dword ptr [edx + 8]
0x254d7:    85 ed                              	test ebp, ebp
0x254d9:    0f 84 bd 01 00 00                  	je 0x2569c <function_2569c>
0x254df:    80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0x254e3:    0f 84 f7 00 00 00                  	je 0x255e0 <function_255e0>
0x254e9:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x254ed:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x254f0:    83 81 8c 00 00 00 01               	add dword ptr [ecx + 0x8c], 1
0x254f7:    85 c0                              	test eax, eax
0x254f9:    74 0b                              	je 0x25506 <function_25236+0x2d0>
0x254fb:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x254fe:    85 c0                              	test eax, eax
0x25500:    0f 85 e5 00 00 00                  	jne 0x255eb <function_255eb>
0x25506:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x2550a:    8b 02                              	mov eax, dword ptr [edx]
0x2550c:    89 14 24                           	mov dword ptr [esp], edx
0x2550f:    ff 50 10                           	call dword ptr [eax + 0x10]
0x25512:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x25516:    39 54 24 4c                        	cmp dword ptr [esp + 0x4c], edx
0x2551a:    0f 84 cf 01 00 00                  	je 0x256ef <function_256ef>
0x25520:    8b 74 24 40                        	mov esi, dword ptr [esp + 0x40]
0x25524:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x25528:    80 38 00                           	cmp byte ptr [eax], 0
0x2552b:    0f 84 25 fe ff ff                  	je 0x25356 <function_25236+0x120>
0x25531:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x25535:    39 54 24 58                        	cmp dword ptr [esp + 0x58], edx
0x25539:    c6 00 00                           	mov byte ptr [eax], 0
0x2553c:    0f 85 22 fe ff ff                  	jne 0x25364 <function_25236+0x12e>
0x25542:    8b 8c 24 48 01 00 00               	mov ecx, dword ptr [esp + 0x148]
0x25549:    39 8c 24 4c 01 00 00               	cmp dword ptr [esp + 0x14c], ecx
0x25550:    0f 87 1b 02 00 00                  	ja 0x25771 <function_25771>
0x25556:    8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
0x2555d:    85 d2                              	test edx, edx
0x2555f:    74 3e                              	je 0x2559f <function_2559f>
0x25561:    8b 8c 24 38 01 00 00               	mov ecx, dword ptr [esp + 0x138]
0x25568:    83 f9 09                           	cmp ecx, 9
0x2556b:    0f 86 cb 01 00 00                  	jbe 0x2573c <function_2573c>
0x25571:    3b 54 24 38                        	cmp edx, dword ptr [esp + 0x38]
0x25575:    0f 84 b8 01 00 00                  	je 0x25733 <function_25733>
0x2557b:    8b 84 24 40 01 00 00               	mov eax, dword ptr [esp + 0x140]
0x25582:    39 c1                              	cmp ecx, eax
0x25584:    0f 82 b2 01 00 00                  	jb 0x2573c <function_2573c>
0x2558a:    85 c0                              	test eax, eax
0x2558c:    0f 85 66 01 00 00                  	jne 0x256f8 <function_256f8>
0x25592:    83 f9 0a                           	cmp ecx, 0xa
0x25595:    76 08                              	jbe 0x2559f <function_2559f>
0x25597:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x2559a -- 0x2559b
0x2559a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x2559b -- 0x2559c
; data inside code section at 0x2559c -- 0x2559f
0x2559c:    ff ff ff                                           |...             |
; function: function_2559f at 0x2559f -- 0x255df
0x2559f:    80 bc 24 bc 00 00 00 00            	cmp byte ptr [esp + 0xbc], 0
0x255a7:    74 08                              	je 0x255b1 <function_2559f+0x12>
0x255a9:    c6 84 24 bc 00 00 00 00            	mov byte ptr [esp + 0xbc], 0
0x255b1:    8d 84 24 90 00 00 00               	lea eax, [esp + 0x90]
0x255b8:    89 04 24                           	mov dword ptr [esp], eax
0x255bb:    e8 d0 00 01 00                     	call 0x35690 <unknown_35690>
0x255c0:    8b 8c 24 5c 01 00 00               	mov ecx, dword ptr [esp + 0x15c]
0x255c7:    65 33 0d 14 00 00 00               	xor ecx, dword ptr gs:[0x14]
0x255ce:    0f 85 6d 01 00 00                  	jne 0x25741 <function_25741>
0x255d4:    81 c4 6c 01 00 00                  	add esp, 0x16c
0x255da:    5b                                 	pop ebx
0x255db:    5e                                 	pop esi
0x255dc:    5f                                 	pop edi
0x255dd:    5d                                 	pop ebp
0x255de:    c3                                 	ret 
; data inside code section at 0x255df -- 0x255e0
0x255df:    90                                                 |.               |
; function: function_255e0 at 0x255e0 -- 0x255eb
0x255e0:    8b 44 24 48                        	mov eax, dword ptr [esp + 0x48]
0x255e4:    83 80 90 00 00 00 01               	add dword ptr [eax + 0x90], 1
; function: function_255eb at 0x255eb -- 0x2561e
0x255eb:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x255ef:    8b 01                              	mov eax, dword ptr [ecx]
0x255f1:    89 0c 24                           	mov dword ptr [esp], ecx
0x255f4:    ff 50 10                           	call dword ptr [eax + 0x10]
0x255f7:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x255fb:    8b 00                              	mov eax, dword ptr [eax]
0x255fd:    39 44 24 4c                        	cmp dword ptr [esp + 0x4c], eax
0x25601:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x25605:    0f 84 e4 00 00 00                  	je 0x256ef <function_256ef>
0x2560b:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2560f:    8b 40 08                           	mov eax, dword ptr [eax + 8]
0x25612:    85 c0                              	test eax, eax
0x25614:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x25618:    0f 85 82 fd ff ff                  	jne 0x253a0
; function: function_2561e at 0x2561e -- 0x2563d
0x2561e:    c7 44 24 0c 60 84 02 00            	mov dword ptr [esp + 0xc], 0x28460 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>&]"
0x25626:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x2562e:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x25636:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x2563d -- 0x2563e
0x2563d:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2563e -- 0x2563f
; data inside code section at 0x2563f -- 0x25648
0x2563f:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_25648 at 0x25648 -- 0x2569c
0x25648:    8b b9 80 00 00 00                  	mov edi, dword ptr [ecx + 0x80]
0x2564e:    8d 5c 76 fd                        	lea ebx, [esi + esi*2 - 3]
0x25652:    8d 04 76                           	lea eax, [esi + esi*2]
0x25655:    c1 e0 02                           	shl eax, 2
0x25658:    8d 1c 9f                           	lea ebx, [edi + ebx*4]
0x2565b:    89 df                              	mov edi, ebx
0x2565d:    29 c7                              	sub edi, eax
0x2565f:    39 fb                              	cmp ebx, edi
0x25661:    76 45                              	jbe 0x256a8 <function_256a8>
0x25663:    90                                 	nop 
0x25664:    8d 74 26 00                        	lea esi, [esi]
0x25668:    89 1c 24                           	mov dword ptr [esp], ebx
0x2566b:    e8 50 22 01 00                     	call 0x378c0 <unknown_378c0>
0x25670:    83 eb 0c                           	sub ebx, 0xc
0x25673:    39 df                              	cmp edi, ebx
0x25675:    72 f1                              	jb 0x25668 <function_25648+0x20>
0x25677:    8b 54 24 48                        	mov edx, dword ptr [esp + 0x48]
0x2567b:    8b 82 84 00 00 00                  	mov eax, dword ptr [edx + 0x84]
0x25681:    29 f0                              	sub eax, esi
0x25683:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x25687:    89 81 84 00 00 00                  	mov dword ptr [ecx + 0x84], eax
0x2568d:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x25691:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x25694:    85 ed                              	test ebp, ebp
0x25696:    0f 85 31 fd ff ff                  	jne 0x253cd
; function: function_2569c at 0x2569c -- 0x256a8
0x2569c:    e8 fd de 00 00                     	call 0x3359e <unknown_3359e>
0x256a1:    8d b4 26 00 00 00 00               	lea esi, [esi]
; function: function_256a8 at 0x256a8 -- 0x256ac
0x256a8:    31 c0                              	xor eax, eax
0x256aa:    eb d7                              	jmp 0x25683
; function: function_256ac at 0x256ac -- 0x256ef
0x256ac:    8b 80 88 00 00 00                  	mov eax, dword ptr [eax + 0x88]
0x256b2:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x256b6:    8b 08                              	mov ecx, dword ptr [eax]
0x256b8:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x256bb:    85 c0                              	test eax, eax
0x256bd:    74 dd                              	je 0x2569c <function_2569c>
0x256bf:    8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0x256c2:    85 d2                              	test edx, edx
0x256c4:    0f 84 12 01 00 00                  	je 0x257dc <function_257dc>
0x256ca:    83 c0 20                           	add eax, 0x20
0x256cd:    83 e2 fe                           	and edx, 0xfffffffe
0x256d0:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x256d4:    89 04 24                           	mov dword ptr [esp], eax
0x256d7:    ff 52 04                           	call dword ptr [edx + 4]
0x256da:    8b 4c 24 48                        	mov ecx, dword ptr [esp + 0x48]
0x256de:    80 39 00                           	cmp byte ptr [ecx], 0
0x256e1:    0f 85 8a fc ff ff                  	jne 0x25371
0x256e7:    c6 01 01                           	mov byte ptr [ecx], 1
0x256ea:    e9 82 fc ff ff                     	jmp 0x25371
; function: function_256ef at 0x256ef -- 0x256f8
0x256ef:    8b 74 24 4c                        	mov esi, dword ptr [esp + 0x4c]
0x256f3:    e9 2c fe ff ff                     	jmp 0x25524
; function: function_256f8 at 0x256f8 -- 0x2572e
0x256f8:    8d 5c 40 fd                        	lea ebx, [eax + eax*2 - 3]
0x256fc:    8d 1c 9a                           	lea ebx, [edx + ebx*4]
0x256ff:    8d 04 40                           	lea eax, [eax + eax*2]
0x25702:    89 de                              	mov esi, ebx
0x25704:    c1 e0 02                           	shl eax, 2
0x25707:    29 c6                              	sub esi, eax
0x25709:    39 f3                              	cmp ebx, esi
0x2570b:    0f 86 81 fe ff ff                  	jbe 0x25592
0x25711:    89 1c 24                           	mov dword ptr [esp], ebx
0x25714:    e8 a7 21 01 00                     	call 0x378c0 <unknown_378c0>
0x25719:    83 eb 0c                           	sub ebx, 0xc
0x2571c:    39 de                              	cmp esi, ebx
0x2571e:    72 f1                              	jb 0x25711
0x25720:    8b 8c 24 38 01 00 00               	mov ecx, dword ptr [esp + 0x138]
0x25727:    8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
; data inside code section at 0x2572e -- 0x25730
0x2572e:    e9 5f                                              |._              |
; function: function_25730 at 0x25730 -- 0x25731
; data inside code section at 0x25731 -- 0x25733
0x25731:    ff ff                                              |..              |
; function: function_25733 at 0x25733 -- 0x2573c
0x25733:    83 f9 0a                           	cmp ecx, 0xa
0x25736:    0f 84 3f fe ff ff                  	je 0x2557b
; function: function_2573c at 0x2573c -- 0x25741
0x2573c:    e8 c9 df 00 00                     	call 0x3370a <unknown_3370a>
; function: function_25741 at 0x25741 -- 0x25742
; dynamically linked function: __stack_chk_fail at 0x25742 -- 0x25743
; data inside code section at 0x25743 -- 0x25759
0x25743:    ff ff ff 80 bc 24 bc 00  00 00 00 74 08 c6 84 24   |.....$.....t...$|
0x25753:    bc 00 00 00 00 89                                  |......          |
; function: function_25759 at 0x25759 -- 0x2575a
0x25759:    c3                                 	ret 
; function: function_2575a at 0x2575a -- 0x2576c
0x2575a:    8d 84 24 90 00 00 00               	lea eax, [esp + 0x90]
0x25761:    89 04 24                           	mov dword ptr [esp], eax
0x25764:    e8 27 ff 00 00                     	call 0x35690 <unknown_35690>
0x25769:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x2576c -- 0x2576d
0x2576c:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x2576d -- 0x2576e
; data inside code section at 0x2576e -- 0x25771
0x2576e:    ff ff ff                                           |...             |
; function: function_25771 at 0x25771 -- 0x2578a
0x25771:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x25775:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x25779:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2577d:    89 14 24                           	mov dword ptr [esp], edx
0x25780:    e8 bb 12 02 00                     	call 0x46a40 <unknown_46a40>
0x25785:    e9 cc fd ff ff                     	jmp 0x25556
; data inside code section at 0x2578a -- 0x2578b
0x2578a:    89                                                 |.               |
; function: function_2578b at 0x2578b -- 0x2578c
0x2578b:    c3                                 	ret 
; function: function_2578c at 0x2578c -- 0x2579d
0x2578c:    8d 84 24 bc 00 00 00               	lea eax, [esp + 0xbc]
0x25793:    89 04 24                           	mov dword ptr [esp], eax
0x25796:    e8 35 41 01 00                     	call 0x398d0 <unknown_398d0>
0x2579b:    eb bd                              	jmp 0x2575a <function_2575a>
; function: function_2579d at 0x2579d -- 0x257aa
0x2579d:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x257a1:    8b 10                              	mov edx, dword ptr [eax]
0x257a3:    31 c0                              	xor eax, eax
0x257a5:    e9 43 fa ff ff                     	jmp 0x251ed
; function: function_257aa at 0x257aa -- 0x257bd
0x257aa:    83 fa 01                           	cmp edx, 1
0x257ad:    74 76                              	je 0x25825 <function_25825>
0x257af:    83 fa 01                           	cmp edx, 1
0x257b2:    74 5f                              	je 0x25813 <function_25813>
0x257b4:    89 c3                              	mov ebx, eax
0x257b6:    8b 84 24 48 01 00 00               	mov eax, dword ptr [esp + 0x148]
; data inside code section at 0x257bd -- 0x257c0
0x257bd:    39 84 24                                           |9.$             |
; function: function_257c0 at 0x257c0 -- 0x257dc
0x257c0:    4c                                 	dec esp
0x257c1:    01 00                              	add dword ptr [eax], eax
0x257c3:    00 76 c6                           	add byte ptr [esi - 0x3a], dh
0x257c6:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x257ca:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x257ce:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x257d2:    89 0c 24                           	mov dword ptr [esp], ecx
0x257d5:    e8 66 12 02 00                     	call 0x46a40 <unknown_46a40>
0x257da:    eb b0                              	jmp 0x2578c <function_2578c>
; function: function_257dc at 0x257dc -- 0x25813
0x257dc:    8d 8c 24 9c 00 00 00               	lea ecx, [esp + 0x9c]
0x257e3:    89 0c 24                           	mov dword ptr [esp], ecx
0x257e6:    e8 65 03 01 00                     	call 0x35b50 <unknown_35b50>
0x257eb:    8d 84 24 9c 00 00 00               	lea eax, [esp + 0x9c]
0x257f2:    89 04 24                           	mov dword ptr [esp], eax
0x257f5:    e8 96 2f 01 00                     	call 0x38790 <unknown_38790>
0x257fa:    89 c3                              	mov ebx, eax
0x257fc:    89 d7                              	mov edi, edx
0x257fe:    8d 94 24 9c 00 00 00               	lea edx, [esp + 0x9c]
0x25805:    89 14 24                           	mov dword ptr [esp], edx
0x25808:    e8 03 af 00 00                     	call 0x30710 <function_30710>
0x2580d:    89 d8                              	mov eax, ebx
0x2580f:    89 fa                              	mov edx, edi
0x25811:    eb 97                              	jmp 0x257aa <function_257aa>
; function: function_25813 at 0x25813 -- 0x25816
0x25813:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x25816 -- 0x25817
0x25816:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x25817 -- 0x25818
; data inside code section at 0x25818 -- 0x2581b
0x25818:    ff ff ff                                           |...             |
; function: function_2581b at 0x2581b -- 0x25825
0x2581b:    e8 fc ff ff ff                     	call 0x2581c
0x25820:    e9 4c fb ff ff                     	jmp 0x25371
; function: function_25825 at 0x25825 -- 0x25828
0x25825:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x25828 -- 0x25829
0x25828:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x25829 -- 0x2582a
; data inside code section at 0x2582a -- 0x25851
0x2582a:    ff ff ff 8b 44 24 40 8b  58 08 85 db 0f 84 60 fe   |....D$@.X.....`.|
0x2583a:    ff ff 8b 03 89 1c 24 ff  50 0c 8b 03 c6 43 04 00   |......$.P....C..|
0x2584a:    89 1c 24 ff 50 10 e8                               |..$.P..         |
; dynamically linked function: __cxa_rethrow at 0x25851 -- 0x25852
; data inside code section at 0x25852 -- 0x25854
0x25852:    ff ff                                              |..              |
; function: function_25854 at 0x25854 -- 0x25870
0x25854:    ff 89 c3 89 34 24                  	dec dword ptr [ecx + 0x243489c3]
0x2585a:    e8 61 20 01 00                     	call 0x378c0 <unknown_378c0>
0x2585f:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25863:    8b 01                              	mov eax, dword ptr [ecx]
0x25865:    89 0c 24                           	mov dword ptr [esp], ecx
0x25868:    ff 50 10                           	call dword ptr [eax + 0x10]
0x2586b:    e9 46 ff ff ff                     	jmp 0x257b6
; function: function_25870 at 0x25870 -- 0x25899
0x25870:    c7 44 24 0c 80 7f 02 00            	mov dword ptr [esp + 0xc], 0x27f80 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0x25878:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x25880:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x25888:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
0x2588f:    e8 fc ff ff ff                     	call 0x25890
0x25894:    e9 1b ff ff ff                     	jmp 0x257b4
; function: function_25899 at 0x25899 -- 0x2589e
0x25899:    e8 30 dc 00 00                     	call 0x334ce <unknown_334ce>
; function: function_2589e at 0x2589e -- 0x258bb
0x2589e:    66 90                              	nop 
0x258a0:    e8 f1 da 00 00                     	call 0x33396 <unknown_33396>
0x258a5:    89 c3                              	mov ebx, eax
0x258a7:    8d 84 24 a4 00 00 00               	lea eax, [esp + 0xa4]
0x258ae:    89 04 24                           	mov dword ptr [esp], eax
0x258b1:    e8 ca 5b 01 00                     	call 0x3b480 <unknown_3b480>
0x258b6:    e9 9f fe ff ff                     	jmp 0x2575a <function_2575a>
; function: function_258bb at 0x258bb -- 0x25946
0x258bb:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x258be:    83 f8 01                           	cmp eax, 1
0x258c1:    0f 85 a3 00 00 00                  	jne 0x2596a <function_2596a>
0x258c7:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x258cb:    c7 84 24 a8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa8], 0
0x258d6:    8b 02                              	mov eax, dword ptr [edx]
0x258d8:    85 c0                              	test eax, eax
0x258da:    74 c2                              	je 0x2589e <function_2589e>
0x258dc:    8b 00                              	mov eax, dword ptr [eax]
0x258de:    85 c0                              	test eax, eax
0x258e0:    74 b7                              	je 0x25899 <function_25899>
0x258e2:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x258e6:    3b 41 08                           	cmp eax, dword ptr [ecx + 8]
0x258e9:    74 74                              	je 0x2595f <function_2595f>
0x258eb:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x258ef:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x258f2:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x258f9:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x258fd:    8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x25904:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x2590c:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x25910:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x25918:    89 0c 24                           	mov dword ptr [esp], ecx
0x2591b:    e8 b0 08 02 00                     	call 0x461d0 <unknown_461d0>
0x25920:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x25924:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x25927:    8b 12                              	mov edx, dword ptr [edx]
0x25929:    85 c0                              	test eax, eax
0x2592b:    89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0x25932:    89 84 24 98 00 00 00               	mov dword ptr [esp + 0x98], eax
0x25939:    0f 85 9c f8 ff ff                  	jne 0x251db
0x2593f:    31 c0                              	xor eax, eax
0x25941:    e9 a7 f8 ff ff                     	jmp 0x251ed
; function: function_25946 at 0x25946 -- 0x2594d
0x25946:    89 c3                              	mov ebx, eax
0x25948:    e9 12 ff ff ff                     	jmp 0x2585f
; data inside code section at 0x2594d -- 0x2594e
0x2594d:    89                                                 |.               |
; function: function_2594e at 0x2594e -- 0x2594f
0x2594e:    c3                                 	ret 
; data inside code section at 0x2594f -- 0x25952
0x2594f:    89 d7 e8                                           |...             |
; dynamically linked function: __cxa_end_catch at 0x25952 -- 0x25953
; data inside code section at 0x25953 -- 0x25956
0x25953:    ff ff ff                                           |...             |
; function: function_25956 at 0x25956 -- 0x2595f
0x25956:    89 d8                              	mov eax, ebx
0x25958:    89 fa                              	mov edx, edi
0x2595a:    e9 50 fe ff ff                     	jmp 0x257af
; function: function_2595f at 0x2595f -- 0x2596a
0x2595f:    8b 00                              	mov eax, dword ptr [eax]
0x25961:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x25968:    eb 8f                              	jmp 0x258f9
; function: function_2596a at 0x2596a -- 0x25989
0x2596a:    c7 44 24 0c a0 7d 02 00            	mov dword ptr [esp + 0xc], 0x27da0 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = void, T1 = int, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(int)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, int)>, Mutex = boost::signals2::mutex]"
0x25972:    c7 44 24 08 c9 01 00 00            	mov dword ptr [esp + 8], 0x1c9
0x2597a:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x25982:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x25989 -- 0x2598a
0x25989:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2598a -- 0x2598b
; data inside code section at 0x2598b -- 0x2598e
0x2598b:    ff ff ff                                           |...             |
; section: .text._ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEclES4_
; function: _ZN5boost8signals26detail12signal1_implIbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_EEENS9_IFbRKNS0_10connectionES4_EEENS0_5mutexEEclES4_ at 0x25990 -- 0x259f0
0x25990:    55                                 	push ebp
0x25991:    57                                 	push edi
0x25992:    56                                 	push esi
0x25993:    53                                 	push ebx
0x25994:    81 ec 6c 01 00 00                  	sub esp, 0x16c
0x2599a:    8b 84 24 80 01 00 00               	mov eax, dword ptr [esp + 0x180]
0x259a1:    8b 94 24 84 01 00 00               	mov edx, dword ptr [esp + 0x184]
0x259a8:    65 8b 0d 14 00 00 00               	mov ecx, dword ptr gs:[0x14]
0x259af:    89 8c 24 5c 01 00 00               	mov dword ptr [esp + 0x15c], ecx
0x259b6:    31 c9                              	xor ecx, ecx
0x259b8:    c7 84 24 8c 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x8c], 0
0x259c3:    89 44 24 50                        	mov dword ptr [esp + 0x50], eax
0x259c7:    8b 84 24 88 01 00 00               	mov eax, dword ptr [esp + 0x188]
0x259ce:    89 54 24 4c                        	mov dword ptr [esp + 0x4c], edx
0x259d2:    c7 84 24 90 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x90], 0
0x259dd:    89 44 24 5c                        	mov dword ptr [esp + 0x5c], eax
0x259e1:    89 d0                              	mov eax, edx
0x259e3:    83 c0 0c                           	add eax, 0xc
0x259e6:    89 84 24 a4 00 00 00               	mov dword ptr [esp + 0xa4], eax
0x259ed:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x259f0 -- 0x259f1
0x259f0:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x259f1 -- 0x259f2
; data inside code section at 0x259f2 -- 0x25a24
0x259f2:    ff ff ff 8b 54 24 4c 8b  42 04 85 c0 0f 84 08 08   |....T$L.B.......|
0x25a02:    00 00 8b 50 04 83 fa 01  0f 84 1a 07 00 00 8b 4c   |...P...........L|
0x25a12:    24 4c 89 84 24 98 00 00  00 8b 11 89 94 24 94 00   |$L..$........$..|
0x25a22:    00 00                                              |..              |
; function: function_25a24 at 0x25a24 -- 0x25a25
; data inside code section at 0x25a25 -- 0x25a36
0x25a25:    ff 40 04 8b 94 24 94 00  00 00 8b 84 24 98 00 00   |.@...$......$...|
0x25a35:    00                                                 |.               |
; function: function_25a36 at 0x25a36 -- 0x25a37
; data inside code section at 0x25a37 -- 0x25a7a
0x25a37:    8c 24 8c 00 00 00 89 94  24 8c 00 00 00 8b 94 24   |.$......$......$|
0x25a47:    90 00 00 00 89 84 24 90  00 00 00 8d 84 24 98 00   |......$......$..|
0x25a57:    00 00 89 04 24 89 8c 24  94 00 00 00 89 94 24 98   |....$..$......$.|
0x25a67:    00 00 00 e8 61 04 01 00  8b 84 24 a4 00 00 00 89   |....a.....$.....|
0x25a77:    04 24 e8                                           |.$.             |
; dynamically linked function: pthread_mutex_unlock at 0x25a7a -- 0x25a7b
; data inside code section at 0x25a7b -- 0x25a7d
0x25a7b:    ff ff                                              |..              |
; function: function_25a7d at 0x25a7d -- 0x25e0a
0x25a7d:    ff 8d 84 24 c0 00                  	dec dword ptr [ebp + 0xc02484]
0x25a83:    00 00                              	add byte ptr [eax], al
0x25a85:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x25a89:    89 84 24 3c 01 00 00               	mov dword ptr [esp + 0x13c], eax
0x25a90:    8d 44 24 5c                        	lea eax, [esp + 0x5c]
0x25a94:    89 84 24 44 01 00 00               	mov dword ptr [esp + 0x144], eax
0x25a9b:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x25aa2:    c6 84 24 bc 00 00 00 00            	mov byte ptr [esp + 0xbc], 0
0x25aaa:    c7 84 24 38 01 00 00 0a 00 00 00   	mov dword ptr [esp + 0x138], 0xa
0x25ab5:    c7 84 24 40 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x140], 0
0x25ac0:    85 c0                              	test eax, eax
0x25ac2:    c7 84 24 48 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x148], 0
0x25acd:    c7 84 24 4c 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x14c], 0
0x25ad8:    0f 84 8a 07 00 00                  	je 0x26268 <function_26268>
0x25ade:    8b 00                              	mov eax, dword ptr [eax]
0x25ae0:    85 c0                              	test eax, eax
0x25ae2:    89 44 24 54                        	mov dword ptr [esp + 0x54], eax
0x25ae6:    0f 84 77 07 00 00                  	je 0x26263 <function_26263>
0x25aec:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x25af0:    8d 8c 24 bc 00 00 00               	lea ecx, [esp + 0xbc]
0x25af7:    8d 44 24 7c                        	lea eax, [esp + 0x7c]
0x25afb:    89 8c 24 84 00 00 00               	mov dword ptr [esp + 0x84], ecx
0x25b02:    89 04 24                           	mov dword ptr [esp], eax
0x25b05:    89 54 24 7c                        	mov dword ptr [esp + 0x7c], edx
0x25b09:    89 94 24 80 00 00 00               	mov dword ptr [esp + 0x80], edx
0x25b10:    89 94 24 88 00 00 00               	mov dword ptr [esp + 0x88], edx
0x25b17:    e8 64 36 02 00                     	call 0x49180 <unknown_49180>
0x25b1c:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x25b23:    85 c0                              	test eax, eax
0x25b25:    0f 84 3d 07 00 00                  	je 0x26268 <function_26268>
0x25b2b:    8b 00                              	mov eax, dword ptr [eax]
0x25b2d:    85 c0                              	test eax, eax
0x25b2f:    0f 84 2e 07 00 00                  	je 0x26263 <function_26263>
0x25b35:    8b 10                              	mov edx, dword ptr [eax]
0x25b37:    89 44 24 70                        	mov dword ptr [esp + 0x70], eax
0x25b3b:    89 44 24 78                        	mov dword ptr [esp + 0x78], eax
0x25b3f:    8d 44 24 6c                        	lea eax, [esp + 0x6c]
0x25b43:    89 04 24                           	mov dword ptr [esp], eax
0x25b46:    89 54 24 6c                        	mov dword ptr [esp + 0x6c], edx
0x25b4a:    8d 94 24 bc 00 00 00               	lea edx, [esp + 0xbc]
0x25b51:    89 54 24 74                        	mov dword ptr [esp + 0x74], edx
0x25b55:    e8 26 36 02 00                     	call 0x49180 <unknown_49180>
0x25b5a:    8b 84 24 8c 00 00 00               	mov eax, dword ptr [esp + 0x8c]
0x25b61:    85 c0                              	test eax, eax
0x25b63:    0f 84 ff 06 00 00                  	je 0x26268 <function_26268>
0x25b69:    8b 58 08                           	mov ebx, dword ptr [eax + 8]
0x25b6c:    85 db                              	test ebx, ebx
0x25b6e:    0f 84 c6 06 00 00                  	je 0x2623a <function_2623a>
0x25b74:    8b 4c 24 70                        	mov ecx, dword ptr [esp + 0x70]
0x25b78:    8b 44 24 74                        	mov eax, dword ptr [esp + 0x74]
0x25b7c:    8b 54 24 7c                        	mov edx, dword ptr [esp + 0x7c]
0x25b80:    8b 74 24 78                        	mov esi, dword ptr [esp + 0x78]
0x25b84:    89 4c 24 48                        	mov dword ptr [esp + 0x48], ecx
0x25b88:    89 44 24 44                        	mov dword ptr [esp + 0x44], eax
0x25b8c:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25b90:    89 54 24 58                        	mov dword ptr [esp + 0x58], edx
0x25b94:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x25b98:    8b 54 24 6c                        	mov edx, dword ptr [esp + 0x6c]
0x25b9c:    83 c1 04                           	add ecx, 4
0x25b9f:    c6 00 00                           	mov byte ptr [eax], 0
0x25ba2:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x25ba6:    89 4c 24 38                        	mov dword ptr [esp + 0x38], ecx
0x25baa:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25bae:    39 54 24 58                        	cmp dword ptr [esp + 0x58], edx
0x25bb2:    0f 84 fa 01 00 00                  	je 0x25db2 <function_25a7d+0x335>
0x25bb8:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x25bbc:    80 38 00                           	cmp byte ptr [eax], 0
0x25bbf:    0f 84 76 03 00 00                  	je 0x25f3b <function_25f3b>
0x25bc5:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x25bc9:    80 38 00                           	cmp byte ptr [eax], 0
0x25bcc:    0f 84 52 03 00 00                  	je 0x25f24 <function_25f24>
0x25bd2:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25bd6:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x25bda:    0f b6 41 01                        	movzx eax, byte ptr [ecx + 1]
0x25bde:    88 42 01                           	mov byte ptr [edx + 1], al
0x25be1:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x25be5:    8b 09                              	mov ecx, dword ptr [ecx]
0x25be7:    39 f1                              	cmp ecx, esi
0x25be9:    89 4c 24 3c                        	mov dword ptr [esp + 0x3c], ecx
0x25bed:    0f 84 a1 01 00 00                  	je 0x25d94 <function_25a7d+0x317>
0x25bf3:    39 4c 24 48                        	cmp dword ptr [esp + 0x48], ecx
0x25bf7:    0f 84 81 03 00 00                  	je 0x25f7e <function_25f7e>
0x25bfd:    8b 41 08                           	mov eax, dword ptr [ecx + 8]
0x25c00:    85 c0                              	test eax, eax
0x25c02:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x25c06:    0f 84 8a 02 00 00                  	je 0x25e96 <function_25e96>
0x25c0c:    8d 74 26 00                        	lea esi, [esi]
0x25c10:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x25c14:    8b 01                              	mov eax, dword ptr [ecx]
0x25c16:    89 0c 24                           	mov dword ptr [esp], ecx
0x25c19:    ff 50 0c                           	call dword ptr [eax + 0xc]
0x25c1c:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x25c20:    8b b0 84 00 00 00                  	mov esi, dword ptr [eax + 0x84]
0x25c26:    85 f6                              	test esi, esi
0x25c28:    0f 85 92 02 00 00                  	jne 0x25ec0 <function_25ec0>
0x25c2e:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x25c32:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x25c35:    85 ed                              	test ebp, ebp
0x25c37:    0f 84 d7 02 00 00                  	je 0x25f14 <function_25f14>
0x25c3d:    8b 5d 10                           	mov ebx, dword ptr [ebp + 0x10]
0x25c40:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x25c43:    0f 84 06 01 00 00                  	je 0x25d4f <function_25a7d+0x2d2>
0x25c49:    8d b4 24 50 01 00 00               	lea esi, [esp + 0x150]
0x25c50:    eb 38                              	jmp 0x25c8a <function_25a7d+0x20d>
; data inside code section at 0x25c52 -- 0x25c58
0x25c52:    8d b6 00 00 00 00                                  |......          |
0x25c58:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x25c5c:    89 74 24 04                        	mov dword ptr [esp + 4], esi
0x25c60:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x25c67:    8d 84 24 ac 00 00 00               	lea eax, [esp + 0xac]
0x25c6e:    89 04 24                           	mov dword ptr [esp], eax
0x25c71:    e8 3a 2f 02 00                     	call 0x48bb0 <unknown_48bb0>
0x25c76:    89 34 24                           	mov dword ptr [esp], esi
0x25c79:    e8 82 24 01 00                     	call 0x38100 <unknown_38100>
0x25c7e:    83 c3 0c                           	add ebx, 0xc
0x25c81:    3b 5d 14                           	cmp ebx, dword ptr [ebp + 0x14]
0x25c84:    0f 84 b6 00 00 00                  	je 0x25d40 <function_25a7d+0x2c3>
0x25c8a:    8b 03                              	mov eax, dword ptr [ebx]
0x25c8c:    8d 94 24 bb 00 00 00               	lea edx, [esp + 0xbb]
0x25c93:    89 94 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], edx
0x25c9a:    8d 7b 04                           	lea edi, [ebx + 4]
0x25c9d:    8d 8c 24 b0 00 00 00               	lea ecx, [esp + 0xb0]
0x25ca4:    c7 44 24 20 00 00 00 00            	mov dword ptr [esp + 0x20], 0
0x25cac:    89 c2                              	mov edx, eax
0x25cae:    c1 fa 1f                           	sar edx, 0x1f
0x25cb1:    31 c2                              	xor edx, eax
0x25cb3:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x25cbb:    c6 44 24 18 00                     	mov byte ptr [esp + 0x18], 0
0x25cc0:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x25cc5:    89 7c 24 10                        	mov dword ptr [esp + 0x10], edi
0x25cc9:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x25ccd:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x25cd1:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x25cd5:    89 34 24                           	mov dword ptr [esp], esi
0x25cd8:    e8 e3 e6 01 00                     	call 0x443c0 <unknown_443c0>
0x25cdd:    83 ec 04                           	sub esp, 4
0x25ce0:    8d 84 24 ba 00 00 00               	lea eax, [esp + 0xba]
0x25ce7:    89 84 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], eax
0x25cee:    8b 03                              	mov eax, dword ptr [ebx]
0x25cf0:    8d 8c 24 b4 00 00 00               	lea ecx, [esp + 0xb4]
0x25cf7:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x25cff:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x25d07:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x25d0c:    89 c2                              	mov edx, eax
0x25d0e:    c1 fa 1f                           	sar edx, 0x1f
0x25d11:    31 c2                              	xor edx, eax
0x25d13:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x25d18:    89 7c 24 0c                        	mov dword ptr [esp + 0xc], edi
0x25d1c:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x25d20:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x25d24:    89 04 24                           	mov dword ptr [esp], eax
0x25d27:    e8 44 ba 01 00                     	call 0x41770 <unknown_41770>
0x25d2c:    84 c0                              	test al, al
0x25d2e:    0f 84 24 ff ff ff                  	je 0x25c58 <function_25a7d+0x1db>
0x25d34:    c6 45 04 00                        	mov byte ptr [ebp + 4], 0
0x25d38:    89 34 24                           	mov dword ptr [esp], esi
0x25d3b:    e8 c0 23 01 00                     	call 0x38100 <unknown_38100>
0x25d40:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25d44:    8b 6a 08                           	mov ebp, dword ptr [edx + 8]
0x25d47:    85 ed                              	test ebp, ebp
0x25d49:    0f 84 c5 01 00 00                  	je 0x25f14 <function_25f14>
0x25d4f:    80 7d 04 00                        	cmp byte ptr [ebp + 4], 0
0x25d53:    0f 84 ff 00 00 00                  	je 0x25e58 <function_25e58>
0x25d59:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25d5d:    8b 45 0c                           	mov eax, dword ptr [ebp + 0xc]
0x25d60:    83 81 8c 00 00 00 01               	add dword ptr [ecx + 0x8c], 1
0x25d67:    85 c0                              	test eax, eax
0x25d69:    74 0b                              	je 0x25d76 <function_25a7d+0x2f9>
0x25d6b:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x25d6e:    85 c0                              	test eax, eax
0x25d70:    0f 85 ed 00 00 00                  	jne 0x25e63 <function_25e63>
0x25d76:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x25d7a:    8b 02                              	mov eax, dword ptr [edx]
0x25d7c:    89 14 24                           	mov dword ptr [esp], edx
0x25d7f:    ff 50 10                           	call dword ptr [eax + 0x10]
0x25d82:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25d86:    39 54 24 48                        	cmp dword ptr [esp + 0x48], edx
0x25d8a:    0f 84 ee 01 00 00                  	je 0x25f7e <function_25f7e>
0x25d90:    8b 74 24 3c                        	mov esi, dword ptr [esp + 0x3c]
0x25d94:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x25d98:    80 38 00                           	cmp byte ptr [eax], 0
0x25d9b:    0f 84 09 fe ff ff                  	je 0x25baa <function_25a7d+0x12d>
0x25da1:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25da5:    39 54 24 58                        	cmp dword ptr [esp + 0x58], edx
0x25da9:    c6 00 00                           	mov byte ptr [eax], 0
0x25dac:    0f 85 06 fe ff ff                  	jne 0x25bb8 <function_25a7d+0x13b>
0x25db2:    8b 84 24 48 01 00 00               	mov eax, dword ptr [esp + 0x148]
0x25db9:    39 84 24 4c 01 00 00               	cmp dword ptr [esp + 0x14c], eax
0x25dc0:    0f 87 35 03 00 00                  	ja 0x260fb <function_260fb>
0x25dc6:    8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
0x25dcd:    85 d2                              	test edx, edx
0x25dcf:    74 3e                              	je 0x25e0f <function_25e0f>
0x25dd1:    8b 8c 24 38 01 00 00               	mov ecx, dword ptr [esp + 0x138]
0x25dd8:    83 f9 09                           	cmp ecx, 9
0x25ddb:    0f 86 b6 02 00 00                  	jbe 0x26097 <function_26097>
0x25de1:    3b 54 24 34                        	cmp edx, dword ptr [esp + 0x34]
0x25de5:    0f 84 a3 02 00 00                  	je 0x2608e <function_2608e>
0x25deb:    8b 84 24 40 01 00 00               	mov eax, dword ptr [esp + 0x140]
0x25df2:    39 c1                              	cmp ecx, eax
0x25df4:    0f 82 9d 02 00 00                  	jb 0x26097 <function_26097>
0x25dfa:    85 c0                              	test eax, eax
0x25dfc:    0f 85 be 02 00 00                  	jne 0x260c0 <function_260c0>
0x25e02:    83 f9 0a                           	cmp ecx, 0xa
0x25e05:    76 08                              	jbe 0x25e0f <function_25e0f>
0x25e07:    89 14 24                           	mov dword ptr [esp], edx
; data inside code section at 0x25e0a -- 0x25e0b
0x25e0a:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x25e0b -- 0x25e0c
; data inside code section at 0x25e0c -- 0x25e0f
0x25e0c:    ff ff ff                                           |...             |
; function: function_25e0f at 0x25e0f -- 0x25e55
0x25e0f:    80 bc 24 bc 00 00 00 00            	cmp byte ptr [esp + 0xbc], 0
0x25e17:    74 08                              	je 0x25e21 <function_25e0f+0x12>
0x25e19:    c6 84 24 bc 00 00 00 00            	mov byte ptr [esp + 0xbc], 0
0x25e21:    8d 84 24 90 00 00 00               	lea eax, [esp + 0x90]
0x25e28:    89 04 24                           	mov dword ptr [esp], eax
0x25e2b:    e8 a0 00 01 00                     	call 0x35ed0 <unknown_35ed0>
0x25e30:    8b 44 24 50                        	mov eax, dword ptr [esp + 0x50]
0x25e34:    8b 94 24 5c 01 00 00               	mov edx, dword ptr [esp + 0x15c]
0x25e3b:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x25e42:    0f 85 73 02 00 00                  	jne 0x260bb <function_260bb>
0x25e48:    81 c4 6c 01 00 00                  	add esp, 0x16c
0x25e4e:    5b                                 	pop ebx
0x25e4f:    5e                                 	pop esi
0x25e50:    5f                                 	pop edi
0x25e51:    5d                                 	pop ebp
0x25e52:    c2 04 00                           	ret 4
; data inside code section at 0x25e55 -- 0x25e58
0x25e55:    8d 76 00                                           |.v.             |
; function: function_25e58 at 0x25e58 -- 0x25e63
0x25e58:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x25e5c:    83 80 90 00 00 00 01               	add dword ptr [eax + 0x90], 1
; function: function_25e63 at 0x25e63 -- 0x25e96
0x25e63:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x25e67:    8b 01                              	mov eax, dword ptr [ecx]
0x25e69:    89 0c 24                           	mov dword ptr [esp], ecx
0x25e6c:    ff 50 10                           	call dword ptr [eax + 0x10]
0x25e6f:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x25e73:    8b 00                              	mov eax, dword ptr [eax]
0x25e75:    39 44 24 48                        	cmp dword ptr [esp + 0x48], eax
0x25e79:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x25e7d:    0f 84 fb 00 00 00                  	je 0x25f7e <function_25f7e>
0x25e83:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25e87:    8b 52 08                           	mov edx, dword ptr [edx + 8]
0x25e8a:    85 d2                              	test edx, edx
0x25e8c:    89 54 24 40                        	mov dword ptr [esp + 0x40], edx
0x25e90:    0f 85 7a fd ff ff                  	jne 0x25c10
; function: function_25e96 at 0x25e96 -- 0x25eb5
0x25e96:    c7 44 24 0c 60 c5 02 00            	mov dword ptr [esp + 0xc], 0x2c560 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>&]"
0x25e9e:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x25ea6:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x25eae:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x25eb5 -- 0x25eb6
0x25eb5:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x25eb6 -- 0x25eb7
; data inside code section at 0x25eb7 -- 0x25ec0
0x25eb7:    ff ff ff 8d b6 00 00 00  00                        |.........       |
; function: function_25ec0 at 0x25ec0 -- 0x25f14
0x25ec0:    8b 88 80 00 00 00                  	mov ecx, dword ptr [eax + 0x80]
0x25ec6:    8d 5c 76 fd                        	lea ebx, [esi + esi*2 - 3]
0x25eca:    8d 04 76                           	lea eax, [esi + esi*2]
0x25ecd:    c1 e0 02                           	shl eax, 2
0x25ed0:    8d 1c 99                           	lea ebx, [ecx + ebx*4]
0x25ed3:    89 df                              	mov edi, ebx
0x25ed5:    29 c7                              	sub edi, eax
0x25ed7:    39 fb                              	cmp ebx, edi
0x25ed9:    76 45                              	jbe 0x25f20 <function_25f20>
0x25edb:    90                                 	nop 
0x25edc:    8d 74 26 00                        	lea esi, [esi]
0x25ee0:    89 1c 24                           	mov dword ptr [esp], ebx
0x25ee3:    e8 18 22 01 00                     	call 0x38100 <unknown_38100>
0x25ee8:    83 eb 0c                           	sub ebx, 0xc
0x25eeb:    39 df                              	cmp edi, ebx
0x25eed:    72 f1                              	jb 0x25ee0 <function_25ec0+0x20>
0x25eef:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x25ef3:    8b 82 84 00 00 00                  	mov eax, dword ptr [edx + 0x84]
0x25ef9:    29 f0                              	sub eax, esi
0x25efb:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25eff:    89 81 84 00 00 00                  	mov dword ptr [ecx + 0x84], eax
0x25f05:    8b 44 24 3c                        	mov eax, dword ptr [esp + 0x3c]
0x25f09:    8b 68 08                           	mov ebp, dword ptr [eax + 8]
0x25f0c:    85 ed                              	test ebp, ebp
0x25f0e:    0f 85 29 fd ff ff                  	jne 0x25c3d
; function: function_25f14 at 0x25f14 -- 0x25f20
0x25f14:    e8 8d dd 00 00                     	call 0x33ca6 <unknown_33ca6>
0x25f19:    8d b4 26 00 00 00 00               	lea esi, [esi]
; function: function_25f20 at 0x25f20 -- 0x25f24
0x25f20:    31 c0                              	xor eax, eax
0x25f22:    eb d7                              	jmp 0x25efb
; function: function_25f24 at 0x25f24 -- 0x25f3b
0x25f24:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25f28:    8b 54 24 50                        	mov edx, dword ptr [esp + 0x50]
0x25f2c:    0f b6 41 01                        	movzx eax, byte ptr [ecx + 1]
0x25f30:    c6 02 01                           	mov byte ptr [edx], 1
0x25f33:    88 42 01                           	mov byte ptr [edx + 1], al
0x25f36:    e9 a6 fc ff ff                     	jmp 0x25be1
; function: function_25f3b at 0x25f3b -- 0x25f7e
0x25f3b:    8b 80 88 00 00 00                  	mov eax, dword ptr [eax + 0x88]
0x25f41:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x25f45:    8b 08                              	mov ecx, dword ptr [eax]
0x25f47:    8b 42 08                           	mov eax, dword ptr [edx + 8]
0x25f4a:    85 c0                              	test eax, eax
0x25f4c:    74 c6                              	je 0x25f14 <function_25f14>
0x25f4e:    8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0x25f51:    85 d2                              	test edx, edx
0x25f53:    0f 84 e4 00 00 00                  	je 0x2603d <function_2603d>
0x25f59:    83 c0 20                           	add eax, 0x20
0x25f5c:    83 e2 fe                           	and edx, 0xfffffffe
0x25f5f:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x25f63:    89 04 24                           	mov dword ptr [esp], eax
0x25f66:    ff 52 04                           	call dword ptr [edx + 4]
0x25f69:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x25f6d:    80 3a 00                           	cmp byte ptr [edx], 0
0x25f70:    74 15                              	je 0x25f87 <function_25f87>
0x25f72:    8b 54 24 44                        	mov edx, dword ptr [esp + 0x44]
0x25f76:    88 42 01                           	mov byte ptr [edx + 1], al
0x25f79:    e9 47 fc ff ff                     	jmp 0x25bc5
; function: function_25f7e at 0x25f7e -- 0x25f87
0x25f7e:    8b 74 24 48                        	mov esi, dword ptr [esp + 0x48]
0x25f82:    e9 0d fe ff ff                     	jmp 0x25d94
; function: function_25f87 at 0x25f87 -- 0x25f96
0x25f87:    8b 4c 24 44                        	mov ecx, dword ptr [esp + 0x44]
0x25f8b:    88 41 01                           	mov byte ptr [ecx + 1], al
0x25f8e:    c6 01 01                           	mov byte ptr [ecx], 1
0x25f91:    e9 2f fc ff ff                     	jmp 0x25bc5
; function: function_25f96 at 0x25f96 -- 0x25f97
; data inside code section at 0x25f97 -- 0x25f9b
0x25f97:    fa 01 74 6f                                        |..to            |
; function: function_25f9b at 0x25f9b -- 0x26000
0x25f9b:    83 fa 01                           	cmp edx, 1
0x25f9e:    74 58                              	je 0x25ff8 <function_25f9b+0x5d>
0x25fa0:    8b 4c 24 50                        	mov ecx, dword ptr [esp + 0x50]
0x25fa4:    80 39 00                           	cmp byte ptr [ecx], 0
0x25fa7:    74 03                              	je 0x25fac <function_25f9b+0x11>
0x25fa9:    c6 01 00                           	mov byte ptr [ecx], 0
0x25fac:    8b 8c 24 48 01 00 00               	mov ecx, dword ptr [esp + 0x148]
0x25fb3:    89 c3                              	mov ebx, eax
0x25fb5:    39 8c 24 4c 01 00 00               	cmp dword ptr [esp + 0x14c], ecx
0x25fbc:    76 14                              	jbe 0x25fd2 <function_25f9b+0x37>
0x25fbe:    8b 44 24 54                        	mov eax, dword ptr [esp + 0x54]
0x25fc2:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x25fc6:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x25fca:    89 14 24                           	mov dword ptr [esp], edx
0x25fcd:    e8 ee 1c 02 00                     	call 0x47cc0 <unknown_47cc0>
0x25fd2:    8d 8c 24 bc 00 00 00               	lea ecx, [esp + 0xbc]
0x25fd9:    89 0c 24                           	mov dword ptr [esp], ecx
0x25fdc:    e8 7f 42 01 00                     	call 0x3a260 <unknown_3a260>
0x25fe1:    8d 84 24 90 00 00 00               	lea eax, [esp + 0x90]
0x25fe8:    89 04 24                           	mov dword ptr [esp], eax
0x25feb:    e8 e0 fe 00 00                     	call 0x35ed0 <unknown_35ed0>
0x25ff0:    89 1c 24                           	mov dword ptr [esp], ebx
0x25ff3:    e8 fc ff ff ff                     	call 0x25ff4
0x25ff8:    89 04 24                           	mov dword ptr [esp], eax
0x25ffb:    e8 fc ff ff ff                     	call 0x25ffc
; data inside code section at 0x26000 -- 0x26001
0x26000:    e8                                                 |.               |
; dynamically linked function: __cxa_end_catch at 0x26001 -- 0x26002
; data inside code section at 0x26002 -- 0x26005
0x26002:    ff ff ff                                           |...             |
; function: function_26005 at 0x26005 -- 0x2600a
0x26005:    e9 d7 fb ff ff                     	jmp 0x25be1
; data inside code section at 0x2600a -- 0x26011
0x2600a:    89 04 24 8d 76 00 e8                               |..$.v..         |
; dynamically linked function: __cxa_begin_catch at 0x26011 -- 0x26012
; data inside code section at 0x26012 -- 0x26039
0x26012:    ff ff ff 8b 54 24 3c 8b  5a 08 85 db 0f 84 f0 fe   |....T$<.Z.......|
0x26022:    ff ff 8b 03 89 1c 24 ff  50 0c 8b 03 c6 43 04 00   |......$.P....C..|
0x26032:    89 1c 24 ff 50 10 e8                               |..$.P..         |
; dynamically linked function: __cxa_rethrow at 0x26039 -- 0x2603a
; data inside code section at 0x2603a -- 0x2603d
0x2603a:    ff ff ff                                           |...             |
; function: function_2603d at 0x2603d -- 0x2606d
0x2603d:    8d 8c 24 9c 00 00 00               	lea ecx, [esp + 0x9c]
0x26044:    89 0c 24                           	mov dword ptr [esp], ecx
0x26047:    e8 44 03 01 00                     	call 0x36390 <unknown_36390>
0x2604c:    8d 84 24 9c 00 00 00               	lea eax, [esp + 0x9c]
0x26053:    89 04 24                           	mov dword ptr [esp], eax
0x26056:    e8 75 2f 01 00                     	call 0x38fd0 <unknown_38fd0>
0x2605b:    89 c3                              	mov ebx, eax
0x2605d:    89 d7                              	mov edi, edx
0x2605f:    e8 fc ff ff ff                     	call 0x26060
0x26064:    89 d8                              	mov eax, ebx
0x26066:    89 fa                              	mov edx, edi
0x26068:    e9 2e ff ff ff                     	jmp 0x25f9b <function_25f9b>
; function: function_2606d at 0x2606d -- 0x26089
0x2606d:    89 c3                              	mov ebx, eax
0x2606f:    89 d7                              	mov edi, edx
0x26071:    8d 8c 24 9c 00 00 00               	lea ecx, [esp + 0x9c]
0x26078:    89 0c 24                           	mov dword ptr [esp], ecx
0x2607b:    e8 d0 ae 00 00                     	call 0x30f50 <function_30f50>
0x26080:    89 d8                              	mov eax, ebx
0x26082:    89 fa                              	mov edx, edi
0x26084:    e9 0d ff ff ff                     	jmp 0x25f96 <function_25f96>
; function: function_26089 at 0x26089 -- 0x2608e
0x26089:    e9 12 ff ff ff                     	jmp 0x25fa0
; function: function_2608e at 0x2608e -- 0x26097
0x2608e:    83 f9 0a                           	cmp ecx, 0xa
0x26091:    0f 84 54 fd ff ff                  	je 0x25deb
; function: function_26097 at 0x26097 -- 0x260b6
0x26097:    c7 44 24 0c 20 ad 02 00            	mov dword ptr [esp + 0xc], 0x2ad20 ; "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x2609f:    c7 44 24 08 59 02 00 00            	mov dword ptr [esp + 8], 0x259
0x260a7:    c7 44 24 04 34 d6 00 00            	mov dword ptr [esp + 4], 0xd634 ; "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0x260af:    c7 04 24 93 9f 00 00               	mov dword ptr [esp], 0x9f93 ; "is_valid()"
; data inside code section at 0x260b6 -- 0x260b7
0x260b6:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x260b7 -- 0x260b8
; data inside code section at 0x260b8 -- 0x260bb
0x260b8:    ff ff ff                                           |...             |
; function: function_260bb at 0x260bb -- 0x260c0
0x260bb:    e8 fc ff ff ff                     	call 0x260bc
; function: function_260c0 at 0x260c0 -- 0x260fb
0x260c0:    8d 5c 40 fd                        	lea ebx, [eax + eax*2 - 3]
0x260c4:    8d 1c 9a                           	lea ebx, [edx + ebx*4]
0x260c7:    8d 04 40                           	lea eax, [eax + eax*2]
0x260ca:    89 de                              	mov esi, ebx
0x260cc:    c1 e0 02                           	shl eax, 2
0x260cf:    29 c6                              	sub esi, eax
0x260d1:    39 f3                              	cmp ebx, esi
0x260d3:    0f 86 29 fd ff ff                  	jbe 0x25e02
0x260d9:    89 1c 24                           	mov dword ptr [esp], ebx
0x260dc:    e8 1f 20 01 00                     	call 0x38100 <unknown_38100>
0x260e1:    83 eb 0c                           	sub ebx, 0xc
0x260e4:    39 de                              	cmp esi, ebx
0x260e6:    72 f1                              	jb 0x260d9
0x260e8:    8b 8c 24 38 01 00 00               	mov ecx, dword ptr [esp + 0x138]
0x260ef:    8b 94 24 3c 01 00 00               	mov edx, dword ptr [esp + 0x13c]
0x260f6:    e9 07 fd ff ff                     	jmp 0x25e02
; function: function_260fb at 0x260fb -- 0x26114
0x260fb:    8b 54 24 54                        	mov edx, dword ptr [esp + 0x54]
0x260ff:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x26103:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x26107:    89 0c 24                           	mov dword ptr [esp], ecx
0x2610a:    e8 b1 1b 02 00                     	call 0x47cc0 <unknown_47cc0>
0x2610f:    e9 b2 fc ff ff                     	jmp 0x25dc6
; function: function_26114 at 0x26114 -- 0x2612a
0x26114:    89 c3                              	mov ebx, eax
0x26116:    8d 84 24 a4 00 00 00               	lea eax, [esp + 0xa4]
0x2611d:    89 04 24                           	mov dword ptr [esp], eax
0x26120:    e8 9b 5b 01 00                     	call 0x3bcc0 <unknown_3bcc0>
0x26125:    e9 b7 fe ff ff                     	jmp 0x25fe1
; function: function_2612a at 0x2612a -- 0x26219
0x2612a:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x2612d:    83 f8 01                           	cmp eax, 1
0x26130:    0f 85 b2 00 00 00                  	jne 0x261e8 <function_2612a+0xbe>
0x26136:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x2613a:    c7 84 24 a8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xa8], 0
0x26145:    8b 01                              	mov eax, dword ptr [ecx]
0x26147:    85 c0                              	test eax, eax
0x26149:    0f 84 19 01 00 00                  	je 0x26268 <function_26268>
0x2614f:    8b 00                              	mov eax, dword ptr [eax]
0x26151:    85 c0                              	test eax, eax
0x26153:    0f 84 0a 01 00 00                  	je 0x26263 <function_26263>
0x26159:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x2615d:    3b 42 08                           	cmp eax, dword ptr [edx + 8]
0x26160:    74 7b                              	je 0x261dd <function_2612a+0xb3>
0x26162:    8b 4c 24 4c                        	mov ecx, dword ptr [esp + 0x4c]
0x26166:    8b 41 08                           	mov eax, dword ptr [ecx + 8]
0x26169:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x26170:    8d 84 24 a8 00 00 00               	lea eax, [esp + 0xa8]
0x26177:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x2617b:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x2617f:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x26187:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2618f:    89 04 24                           	mov dword ptr [esp], eax
0x26192:    e8 89 16 02 00                     	call 0x47820 <unknown_47820>
0x26197:    8b 54 24 4c                        	mov edx, dword ptr [esp + 0x4c]
0x2619b:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x2619e:    8b 12                              	mov edx, dword ptr [edx]
0x261a0:    85 c0                              	test eax, eax
0x261a2:    89 94 24 94 00 00 00               	mov dword ptr [esp + 0x94], edx
0x261a9:    89 84 24 98 00 00 00               	mov dword ptr [esp + 0x98], eax
0x261b0:    0f 85 6e f8 ff ff                  	jne 0x25a24 <function_25a24>
0x261b6:    31 c0                              	xor eax, eax
0x261b8:    e9 79 f8 ff ff                     	jmp 0x25a36 <function_25a36>
0x261bd:    80 bc 24 bc 00 00 00 00            	cmp byte ptr [esp + 0xbc], 0
0x261c5:    74 08                              	je 0x261cf <function_2612a+0xa5>
0x261c7:    c6 84 24 bc 00 00 00 00            	mov byte ptr [esp + 0xbc], 0
0x261cf:    89 c3                              	mov ebx, eax
0x261d1:    e9 0b fe ff ff                     	jmp 0x25fe1
0x261d6:    89 c3                              	mov ebx, eax
0x261d8:    e9 f5 fd ff ff                     	jmp 0x25fd2
0x261dd:    8b 00                              	mov eax, dword ptr [eax]
0x261df:    89 84 24 a8 00 00 00               	mov dword ptr [esp + 0xa8], eax
0x261e6:    eb 88                              	jmp 0x26170 <function_2612a+0x46>
0x261e8:    c7 44 24 0c a0 be 02 00            	mov dword ptr [esp + 0xc], 0x2bea0 ; "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex]"
0x261f0:    c7 44 24 08 c9 01 00 00            	mov dword ptr [esp + 8], 0x1c9
0x261f8:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x26200:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
0x26207:    e8 fc ff ff ff                     	call 0x26208
0x2620c:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x26210:    8b 10                              	mov edx, dword ptr [eax]
0x26212:    31 c0                              	xor eax, eax
0x26214:    e9 1d f8 ff ff                     	jmp 0x25a36 <function_25a36>
; function: function_26219 at 0x26219 -- 0x26236
0x26219:    89 c3                              	mov ebx, eax
0x2621b:    89 34 24                           	mov dword ptr [esp], esi
0x2621e:    e8 dd 1e 01 00                     	call 0x38100 <unknown_38100>
0x26223:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x26227:    8b 01                              	mov eax, dword ptr [ecx]
0x26229:    89 0c 24                           	mov dword ptr [esp], ecx
0x2622c:    ff 50 10                           	call dword ptr [eax + 0x10]
0x2622f:    89 d8                              	mov eax, ebx
0x26231:    e9 6a fd ff ff                     	jmp 0x25fa0
; function: function_26236 at 0x26236 -- 0x2623a
0x26236:    89 c3                              	mov ebx, eax
0x26238:    eb e9                              	jmp 0x26223
; function: function_2623a at 0x2623a -- 0x26259
0x2623a:    c7 44 24 0c 80 c0 02 00            	mov dword ptr [esp + 0xc], 0x2c080 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<bool>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<bool>&]"
0x26242:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x2624a:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x26252:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x26259 -- 0x2625a
0x26259:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2625a -- 0x2625b
; data inside code section at 0x2625b -- 0x2625e
0x2625b:    ff ff ff                                           |...             |
; function: function_2625e at 0x2625e -- 0x26263
0x2625e:    e9 49 fd ff ff                     	jmp 0x25fac
; function: function_26263 at 0x26263 -- 0x26268
0x26263:    e8 da da 00 00                     	call 0x33d42 <unknown_33d42>
; function: function_26268 at 0x26268 -- 0x26275
0x26268:    90                                 	nop 
0x26269:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x26270:    e8 95 d9 00 00                     	call 0x33c0a <unknown_33c0a>
; section: .text._ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEclES4_b
; function: _ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEclES4_b at 0x26280 -- 0x262e5
0x26280:    55                                 	push ebp
0x26281:    57                                 	push edi
0x26282:    56                                 	push esi
0x26283:    53                                 	push ebx
0x26284:    81 ec 8c 01 00 00                  	sub esp, 0x18c
0x2628a:    8b 84 24 a0 01 00 00               	mov eax, dword ptr [esp + 0x1a0]
0x26291:    8b ac 24 a4 01 00 00               	mov ebp, dword ptr [esp + 0x1a4]
0x26298:    65 8b 15 14 00 00 00               	mov edx, dword ptr gs:[0x14]
0x2629f:    89 94 24 7c 01 00 00               	mov dword ptr [esp + 0x17c], edx
0x262a6:    31 d2                              	xor edx, edx
0x262a8:    c7 84 24 94 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x94], 0
0x262b3:    89 44 24 38                        	mov dword ptr [esp + 0x38], eax
0x262b7:    8b 84 24 a8 01 00 00               	mov eax, dword ptr [esp + 0x1a8]
0x262be:    c7 84 24 98 00 00 00 00 00 00 00   	mov dword ptr [esp + 0x98], 0
0x262c9:    89 44 24 6c                        	mov dword ptr [esp + 0x6c], eax
0x262cd:    8b 84 24 ac 01 00 00               	mov eax, dword ptr [esp + 0x1ac]
0x262d4:    88 44 24 68                        	mov byte ptr [esp + 0x68], al
0x262d8:    8d 45 0c                           	lea eax, [ebp + 0xc]
0x262db:    89 84 24 bc 00 00 00               	mov dword ptr [esp + 0xbc], eax
0x262e2:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x262e5 -- 0x262e6
0x262e5:    e8                                                 |.               |
; dynamically linked function: pthread_mutex_lock at 0x262e6 -- 0x262e7
; data inside code section at 0x262e7 -- 0x26312
0x262e7:    ff ff ff 8b 45 04 85 c0  0f 84 03 06 00 00 8b 50   |....E..........P|
0x262f7:    04 83 fa 01 0f 84 6f 03  00 00 8b 55 00 89 84 24   |......o....U...$|
0x26307:    a0 00 00 00 89 94 24 9c  00 00 00                  |......$....     |
; function: function_26312 at 0x26312 -- 0x26313
; data inside code section at 0x26313 -- 0x26324
0x26313:    ff 40 04 8b 94 24 9c 00  00 00 8b 84 24 a0 00 00   |.@...$......$...|
0x26323:    00                                                 |.               |
; function: function_26324 at 0x26324 -- 0x26325
; data inside code section at 0x26325 -- 0x26390
0x26325:    8c 24 94 00 00 00 89 94  24 94 00 00 00 8b 94 24   |.$......$......$|
0x26335:    98 00 00 00 89 84 24 98  00 00 00 8d 84 24 a0 00   |......$......$..|
0x26345:    00 00 89 04 24 89 8c 24  9c 00 00 00 89 94 24 a0   |....$..$......$.|
0x26355:    00 00 00 e8 63 04 01 00  8b 84 24 bc 00 00 00 89   |....c.....$.....|
0x26365:    04 24 e8 fc ff ff ff 8d  44 24 6c 89 84 24 60 01   |.$......D$l..$`.|
0x26375:    00 00 8d 44 24 68 89 84  24 64 01 00 00 8b 84 24   |...D$h..$d.....$|
0x26385:    94 00 00 00 8d 8c 24 dc  00 00 00                  |......$....     |
; function: function_26390 at 0x26390 -- 0x26391
; data inside code section at 0x26391 -- 0x264a6
0x26391:    84 24 d8 00 00 00 00 c7  84 24 54 01 00 00 0a 00   |.$.......$T.....|
0x263a1:    00 00 89 4c 24 28 85 c0  89 8c 24 58 01 00 00 c7   |...L$(....$X....|
0x263b1:    84 24 5c 01 00 00 00 00  00 00 c7 84 24 68 01 00   |.$\.........$h..|
0x263c1:    00 00 00 00 00 c7 84 24  6c 01 00 00 00 00 00 00   |.......$l.......|
0x263d1:    0f 84 cf 07 00 00 8b 00  85 c0 89 44 24 34 0f 84   |...........D$4..|
0x263e1:    db 07 00 00 8b 44 24 34  8d 94 24 d8 00 00 00 89   |.....D$4..$.....|
0x263f1:    94 24 8c 00 00 00 89 84  24 84 00 00 00 89 84 24   |.$......$......$|
0x26401:    88 00 00 00 89 84 24 90  00 00 00 8d 84 24 84 00   |......$......$..|
0x26411:    00 00 89 04 24 e8 15 39  02 00 8b 84 24 94 00 00   |....$..9....$...|
0x26421:    00 85 c0 0f 84 7c 07 00  00 8b 00 85 c0 0f 84 8c   |.....|..........|
0x26431:    07 00 00 8b 10 8d 8c 24  d8 00 00 00 89 44 24 78   |.......$.....D$x|
0x26441:    89 84 24 80 00 00 00 8d  44 24 74 89 4c 24 7c 89   |..$.....D$t.L$|.|
0x26451:    54 24 74 89 04 24 e8 d4  38 02 00 8b 84 24 94 00   |T$t..$..8....$..|
0x26461:    00 00 85 c0 0f 84 3b 07  00 00 8b 40 08 85 c0 0f   |......;....@....|
0x26471:    84 4f 07 00 00 8b 44 24  78 8b 94 24 84 00 00 00   |.O....D$x..$....|
0x26481:    8b 74 24 7c 8b 9c 24 80  00 00 00 89 44 24 48 8b   |.t$|..$.....D$H.|
0x26491:    44 24 38 8b 7c 24 74 89  54 24 44 8d 56 04 89 54   |D$8.|$t.T$D.V..T|
0x264a1:    24 4c c6 00 00                                     |$L...           |
; function: function_264a6 at 0x264a6 -- 0x264a7
; data inside code section at 0x264a7 -- 0x264b9
0x264a7:    7c 24 44 0f 84 27 05 00  00 80 3e 00 0f 84 57 01   ||$D..'....>...W.|
0x264b7:    00 00                                              |..              |
; function: function_264b9 at 0x264b9 -- 0x264ba
; data inside code section at 0x264ba -- 0x264d1
0x264ba:    44 24 38 80 38 00 0f 84  b2 00 00 00 0f b6 46 01   |D$8.8.........F.|
0x264ca:    8b 4c 24 38 88 41 01                               |.L$8.A.         |
; function: function_264d1 at 0x264d1 -- 0x264d2
; data inside code section at 0x264d2 -- 0x264db
0x264d2:    3f 39 df 0f 84 b5 00 00  00                        |?9.......       |
; function: function_264db at 0x264db -- 0x264dc
; data inside code section at 0x264dc -- 0x264f4
0x264dc:    7c 24 48 0f 84 01 04 00  00 8b 4f 08 85 c9 89 4c   ||$H.......O....L|
0x264ec:    24 3c 0f 84 b4 05 00 00                            |$<......        |
; function: function_264f4 at 0x264f4 -- 0x264f5
; data inside code section at 0x264f5 -- 0x26512
0x264f5:    54 24 3c 8b 02 89 14 24  ff 50 0c 8b 8e 84 00 00   |T$<....$.P......|
0x26505:    00 85 c9 89 4c 24 30 0f  85 ae 00 00 00            |....L$0......   |
; function: function_26512 at 0x26512 -- 0x26513
; data inside code section at 0x26513 -- 0x2653d
0x26513:    4f 08 85 c9 89 4c 24 2c  0f 84 c8 06 00 00 8b 44   |O....L$,.......D|
0x26523:    24 2c 8b 54 24 2c 8b 40  10 3b 42 14 89 44 24 30   |$,.T$,.@.;B..D$0|
0x26533:    0f 84 6e 03 00 00 89 44  24 40                     |..n....D$@      |
; function: function_2653d at 0x2653d -- 0x2653e
; data inside code section at 0x2653e -- 0x2656f
0x2653e:    4c 24 40 8b 11 89 d0 c1  f8 1f 31 d0 83 f8 13 76   |L$@.......1....v|
0x2654e:    59 c7 44 24 0c 40 9c 02  00 c7 44 24 08 cf 00 00   |Y.D$.@....D$....|
0x2655e:    00 c7 44 24 04 fc d5 00  00 c7 04 24 8d 9f 00 00   |..D$.......$....|
0x2656e:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x2656f -- 0x26570
; data inside code section at 0x26570 -- 0x26572
0x26570:    ff ff                                              |..              |
; function: function_26572 at 0x26572 -- 0x265a1
0x26572:    ff 90 8d 74 26 00                  	call dword ptr [eax + 0x26748d]
0x26578:    8b 3f                              	mov edi, dword ptr [edi]
0x2657a:    0f b6 46 01                        	movzx eax, byte ptr [esi + 1]
0x2657e:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x26582:    39 df                              	cmp edi, ebx
0x26584:    88 42 01                           	mov byte ptr [edx + 1], al
0x26587:    c6 02 01                           	mov byte ptr [edx], 1
0x2658a:    0f 85 4b ff ff ff                  	jne 0x264db <function_264db>
0x26590:    80 3e 00                           	cmp byte ptr [esi], 0
0x26593:    0f 84 0d ff ff ff                  	je 0x264a6 <function_264a6>
0x26599:    c6 06 00                           	mov byte ptr [esi], 0
0x2659c:    e9 05 ff ff ff                     	jmp 0x264a6 <function_264a6>
; data inside code section at 0x265a1 -- 0x265a8
0x265a1:    8d b4 26 00 00 00 00                               |..&....         |
; function: function_265a8 at 0x265a8 -- 0x265af
0x265a8:    ff 24 85 dc 6d 02 00               	jmp dword ptr [eax*4 + 0x26ddc]
; data inside code section at 0x265af -- 0x265b0
0x265af:    90                                                 |.               |
; function: function_265b0 at 0x265b0 -- 0x26be4
0x265b0:    8d 44 24 50                        	lea eax, [esp + 0x50]
0x265b4:    e8 d7 fd ff ff                     	call 0x26390 <function_26390>
0x265b9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x265c0:    8b 86 80 00 00 00                  	mov eax, dword ptr [esi + 0x80]
0x265c6:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x265ca:    8d 1c 98                           	lea ebx, [eax + ebx*4]
0x265cd:    8d 04 49                           	lea eax, [ecx + ecx*2]
0x265d0:    89 da                              	mov edx, ebx
0x265d2:    c1 e0 02                           	shl eax, 2
0x265d5:    29 c2                              	sub edx, eax
0x265d7:    39 d3                              	cmp ebx, edx
0x265d9:    89 54 24 2c                        	mov dword ptr [esp + 0x2c], edx
0x265dd:    0f 86 ed 03 00 00                  	jbe 0x269d0 <function_265b0+0x420>
0x265e3:    90                                 	nop 
0x265e4:    8d 74 26 00                        	lea esi, [esi]
0x265e8:    89 1c 24                           	mov dword ptr [esp], ebx
0x265eb:    e8 00 24 01 00                     	call 0x389f0 <unknown_389f0>
0x265f0:    83 eb 0c                           	sub ebx, 0xc
0x265f3:    39 5c 24 2c                        	cmp dword ptr [esp + 0x2c], ebx
0x265f7:    72 ef                              	jb 0x265e8 <function_265b0+0x38>
0x265f9:    8b 86 84 00 00 00                  	mov eax, dword ptr [esi + 0x84]
0x265ff:    2b 44 24 30                        	sub eax, dword ptr [esp + 0x30]
0x26603:    89 86 84 00 00 00                  	mov dword ptr [esi + 0x84], eax
0x26609:    e9 04 ff ff ff                     	jmp 0x26512 <function_26512>
; data inside code section at 0x2660e -- 0x26610
0x2660e:    66 90                                              |f.              |
0x26610:    8b 86 8c 00 00 00                  	mov eax, dword ptr [esi + 0x8c]
0x26616:    0f b6 00                           	movzx eax, byte ptr [eax]
0x26619:    88 44 24 2c                        	mov byte ptr [esp + 0x2c], al
0x2661d:    8b 86 88 00 00 00                  	mov eax, dword ptr [esi + 0x88]
0x26623:    8b 08                              	mov ecx, dword ptr [eax]
0x26625:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x26628:    85 c0                              	test eax, eax
0x2662a:    0f 84 b9 05 00 00                  	je 0x26be9 <function_26be9>
0x26630:    8b 50 1c                           	mov edx, dword ptr [eax + 0x1c]
0x26633:    85 d2                              	test edx, edx
0x26635:    0f 84 9f 06 00 00                  	je 0x26cda <function_26cda>
0x2663b:    83 e2 fe                           	and edx, 0xfffffffe
0x2663e:    83 c0 20                           	add eax, 0x20
0x26641:    89 54 24 3c                        	mov dword ptr [esp + 0x3c], edx
0x26645:    0f b6 54 24 2c                     	movzx edx, byte ptr [esp + 0x2c]
0x2664a:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x2664e:    89 04 24                           	mov dword ptr [esp], eax
0x26651:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x26655:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x26659:    ff 52 04                           	call dword ptr [edx + 4]
0x2665c:    80 3e 00                           	cmp byte ptr [esi], 0
0x2665f:    0f 84 93 00 00 00                  	je 0x266f8 <function_265b0+0x148>
0x26665:    88 46 01                           	mov byte ptr [esi + 1], al
0x26668:    e9 4c fe ff ff                     	jmp 0x264b9 <function_264b9>
; data inside code section at 0x2666d -- 0x26670
0x2666d:    8d 76 00                                           |.v.             |
0x26670:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x26673:    83 f8 01                           	cmp eax, 1
0x26676:    0f 85 39 07 00 00                  	jne 0x26db5 <function_26db5>
0x2667c:    8b 45 00                           	mov eax, dword ptr [ebp]
0x2667f:    c7 84 24 c0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xc0], 0
0x2668a:    85 c0                              	test eax, eax
0x2668c:    0f 84 14 05 00 00                  	je 0x26ba6 <function_265b0+0x5f6>
0x26692:    8b 00                              	mov eax, dword ptr [eax]
0x26694:    85 c0                              	test eax, eax
0x26696:    0f 84 24 05 00 00                  	je 0x26bc0 <function_265b0+0x610>
0x2669c:    3b 45 08                           	cmp eax, dword ptr [ebp + 8]
0x2669f:    0f 84 2b 04 00 00                  	je 0x26ad0 <function_265b0+0x520>
0x266a5:    8b 45 08                           	mov eax, dword ptr [ebp + 8]
0x266a8:    89 84 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], eax
0x266af:    8d 84 24 c0 00 00 00               	lea eax, [esp + 0xc0]
0x266b6:    c7 44 24 0c 01 00 00 00            	mov dword ptr [esp + 0xc], 1
0x266be:    89 44 24 08                        	mov dword ptr [esp + 8], eax
0x266c2:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x266ca:    89 2c 24                           	mov dword ptr [esp], ebp
0x266cd:    e8 fe 24 02 00                     	call 0x48bd0 <unknown_48bd0>
0x266d2:    8b 45 04                           	mov eax, dword ptr [ebp + 4]
0x266d5:    8b 55 00                           	mov edx, dword ptr [ebp]
0x266d8:    85 c0                              	test eax, eax
0x266da:    89 94 24 9c 00 00 00               	mov dword ptr [esp + 0x9c], edx
0x266e1:    89 84 24 a0 00 00 00               	mov dword ptr [esp + 0xa0], eax
0x266e8:    0f 85 24 fc ff ff                  	jne 0x26312 <function_26312>
0x266ee:    31 c0                              	xor eax, eax
0x266f0:    e9 2f fc ff ff                     	jmp 0x26324 <function_26324>
; data inside code section at 0x266f5 -- 0x266f8
0x266f5:    8d 76 00                                           |.v.             |
0x266f8:    88 46 01                           	mov byte ptr [esi + 1], al
0x266fb:    c6 06 01                           	mov byte ptr [esi], 1
0x266fe:    e9 b6 fd ff ff                     	jmp 0x264b9 <function_264b9>
0x26703:    85 d2                              	test edx, edx
0x26705:    0f 88 f7 01 00 00                  	js 0x26902 <function_265b0+0x352>
0x2670b:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x2670f:    8b 5c 24 40                        	mov ebx, dword ptr [esp + 0x40]
0x26713:    2b 5c 24 30                        	sub ebx, dword ptr [esp + 0x30]
0x26717:    c7 84 24 ac 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xac], 0
0x26722:    8b 48 08                           	mov ecx, dword ptr [eax + 8]
0x26725:    85 c9                              	test ecx, ecx
0x26727:    89 8c 24 b0 00 00 00               	mov dword ptr [esp + 0xb0], ecx
0x2672e:    0f 84 b5 03 00 00                  	je 0x26ae9 <function_265b0+0x539>
0x26734:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x26737:    85 c0                              	test eax, eax
0x26739:    74 0a                              	je 0x26745 <function_265b0+0x195>
0x2673b:    89 c2                              	mov edx, eax
0x2673d:    42                                 	inc edx
0x2673e:    f0 0f b1 51 04                     	lock cmpxchg dword ptr [ecx + 4], edx
0x26743:    75 f2                              	jne 0x26737 <function_265b0+0x187>
0x26745:    85 c0                              	test eax, eax
0x26747:    0f 84 91 03 00 00                  	je 0x26ade <function_265b0+0x52e>
0x2674d:    8b 54 24 30                        	mov edx, dword ptr [esp + 0x30]
0x26751:    8b 44 13 04                        	mov eax, dword ptr [ebx + edx + 4]
0x26755:    89 8c 24 78 01 00 00               	mov dword ptr [esp + 0x178], ecx
0x2675c:    89 84 24 ac 00 00 00               	mov dword ptr [esp + 0xac], eax
0x26763:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x2676a:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x2676e:    8d 84 24 b0 00 00 00               	lea eax, [esp + 0xb0]
0x26775:    c7 84 24 70 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x170], 0
0x26780:    89 04 24                           	mov dword ptr [esp], eax
0x26783:    e8 38 00 01 00                     	call 0x367c0 <unknown_367c0>
0x26788:    eb 61                              	jmp 0x267eb <function_265b0+0x23b>
0x2678a:    85 d2                              	test edx, edx
0x2678c:    8b 54 24 40                        	mov edx, dword ptr [esp + 0x40]
0x26790:    8b 42 04                           	mov eax, dword ptr [edx + 4]
0x26793:    0f 88 e0 01 00 00                  	js 0x26979 <function_265b0+0x3c9>
0x26799:    85 c0                              	test eax, eax
0x2679b:    0f 84 c9 04 00 00                  	je 0x26c6a <function_26c6a>
0x267a1:    8b 10                              	mov edx, dword ptr [eax]
0x267a3:    8d 8c 24 c8 00 00 00               	lea ecx, [esp + 0xc8]
0x267aa:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x267ae:    89 0c 24                           	mov dword ptr [esp], ecx
0x267b1:    ff 52 08                           	call dword ptr [edx + 8]
0x267b4:    83 ec 04                           	sub esp, 4
0x267b7:    8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0x267be:    8b 10                              	mov edx, dword ptr [eax]
0x267c0:    89 04 24                           	mov dword ptr [esp], eax
0x267c3:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x267c6:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x267cd:    8b 84 24 c8 00 00 00               	mov eax, dword ptr [esp + 0xc8]
0x267d4:    c7 84 24 70 01 00 00 01 00 00 00   	mov dword ptr [esp + 0x170], 1
0x267df:    85 c0                              	test eax, eax
0x267e1:    74 08                              	je 0x267eb <function_265b0+0x23b>
0x267e3:    8b 10                              	mov edx, dword ptr [eax]
0x267e5:    89 04 24                           	mov dword ptr [esp], eax
0x267e8:    ff 52 04                           	call dword ptr [edx + 4]
0x267eb:    8d 84 24 d7 00 00 00               	lea eax, [esp + 0xd7]
0x267f2:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x267f6:    89 84 24 d0 00 00 00               	mov dword ptr [esp + 0xd0], eax
0x267fd:    8b 44 24 40                        	mov eax, dword ptr [esp + 0x40]
0x26801:    8d 9c 24 70 01 00 00               	lea ebx, [esp + 0x170]
0x26808:    83 c1 04                           	add ecx, 4
0x2680b:    8b 10                              	mov edx, dword ptr [eax]
0x2680d:    89 4c 24 0c                        	mov dword ptr [esp + 0xc], ecx
0x26811:    8d 8c 24 d0 00 00 00               	lea ecx, [esp + 0xd0]
0x26818:    c7 44 24 1c 00 00 00 00            	mov dword ptr [esp + 0x1c], 0
0x26820:    c7 44 24 18 00 00 00 00            	mov dword ptr [esp + 0x18], 0
0x26828:    89 d0                              	mov eax, edx
0x2682a:    c1 f8 1f                           	sar eax, 0x1f
0x2682d:    31 d0                              	xor eax, edx
0x2682f:    c6 44 24 14 00                     	mov byte ptr [esp + 0x14], 0
0x26834:    c6 44 24 10 00                     	mov byte ptr [esp + 0x10], 0
0x26839:    89 4c 24 08                        	mov dword ptr [esp + 8], ecx
0x2683d:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x26841:    89 14 24                           	mov dword ptr [esp], edx
0x26844:    e8 17 b8 01 00                     	call 0x42060 <unknown_42060>
0x26849:    84 c0                              	test al, al
0x2684b:    0f 85 32 03 00 00                  	jne 0x26b83 <function_265b0+0x5d3>
0x26851:    8b 44 24 4c                        	mov eax, dword ptr [esp + 0x4c]
0x26855:    8d 9c 24 70 01 00 00               	lea ebx, [esp + 0x170]
0x2685c:    89 5c 24 04                        	mov dword ptr [esp + 4], ebx
0x26860:    89 84 24 c4 00 00 00               	mov dword ptr [esp + 0xc4], eax
0x26867:    8d 84 24 c4 00 00 00               	lea eax, [esp + 0xc4]
0x2686e:    89 04 24                           	mov dword ptr [esp], eax
0x26871:    e8 2a 2c 02 00                     	call 0x494a0 <unknown_494a0>
0x26876:    89 1c 24                           	mov dword ptr [esp], ebx
0x26879:    e8 72 21 01 00                     	call 0x389f0 <unknown_389f0>
0x2687e:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x26882:    83 44 24 40 0c                     	add dword ptr [esp + 0x40], 0xc
0x26887:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x2688b:    3b 4a 14                           	cmp ecx, dword ptr [edx + 0x14]
0x2688e:    0f 85 a9 fc ff ff                  	jne 0x2653d <function_2653d>
0x26894:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x26897:    89 44 24 2c                        	mov dword ptr [esp + 0x2c], eax
0x2689b:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x2689f:    85 c0                              	test eax, eax
0x268a1:    0f 84 42 03 00 00                  	je 0x26be9 <function_26be9>
0x268a7:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x268ab:    80 7a 04 00                        	cmp byte ptr [edx + 4], 0
0x268af:    0f 84 c5 01 00 00                  	je 0x26a7a <function_265b0+0x4ca>
0x268b5:    8b 42 0c                           	mov eax, dword ptr [edx + 0xc]
0x268b8:    83 86 90 00 00 00 01               	add dword ptr [esi + 0x90], 1
0x268bf:    85 c0                              	test eax, eax
0x268c1:    74 0b                              	je 0x268ce <function_265b0+0x31e>
0x268c3:    8b 40 04                           	mov eax, dword ptr [eax + 4]
0x268c6:    85 c0                              	test eax, eax
0x268c8:    0f 85 b3 01 00 00                  	jne 0x26a81 <function_265b0+0x4d1>
0x268ce:    8b 4c 24 3c                        	mov ecx, dword ptr [esp + 0x3c]
0x268d2:    8b 01                              	mov eax, dword ptr [ecx]
0x268d4:    89 0c 24                           	mov dword ptr [esp], ecx
0x268d7:    ff 50 10                           	call dword ptr [eax + 0x10]
0x268da:    39 7c 24 48                        	cmp dword ptr [esp + 0x48], edi
0x268de:    89 fb                              	mov ebx, edi
0x268e0:    0f 85 aa fc ff ff                  	jne 0x26590
0x268e6:    8b 5c 24 48                        	mov ebx, dword ptr [esp + 0x48]
0x268ea:    89 df                              	mov edi, ebx
0x268ec:    e9 9f fc ff ff                     	jmp 0x26590
; data inside code section at 0x268f1 -- 0x268f8
0x268f1:    8d b4 26 00 00 00 00                               |..&....         |
0x268f8:    8b 55 00                           	mov edx, dword ptr [ebp]
0x268fb:    31 c0                              	xor eax, eax
0x268fd:    e9 22 fa ff ff                     	jmp 0x26324 <function_26324>
0x26902:    8b 4c 24 40                        	mov ecx, dword ptr [esp + 0x40]
0x26906:    8b 59 04                           	mov ebx, dword ptr [ecx + 4]
0x26909:    c7 84 24 b4 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb4], 0
0x26914:    8b 4b 04                           	mov ecx, dword ptr [ebx + 4]
0x26917:    85 c9                              	test ecx, ecx
0x26919:    89 8c 24 b8 00 00 00               	mov dword ptr [esp + 0xb8], ecx
0x26920:    0f 84 3f 02 00 00                  	je 0x26b65 <function_265b0+0x5b5>
0x26926:    8b 41 04                           	mov eax, dword ptr [ecx + 4]
0x26929:    85 c0                              	test eax, eax
0x2692b:    74 0a                              	je 0x26937 <function_265b0+0x387>
0x2692d:    89 c2                              	mov edx, eax
0x2692f:    42                                 	inc edx
0x26930:    f0 0f b1 51 04                     	lock cmpxchg dword ptr [ecx + 4], edx
0x26935:    75 f2                              	jne 0x26929 <function_265b0+0x379>
0x26937:    85 c0                              	test eax, eax
0x26939:    0f 84 1b 02 00 00                  	je 0x26b5a <function_265b0+0x5aa>
0x2693f:    8b 03                              	mov eax, dword ptr [ebx]
0x26941:    89 8c 24 78 01 00 00               	mov dword ptr [esp + 0x178], ecx
0x26948:    89 84 24 b4 00 00 00               	mov dword ptr [esp + 0xb4], eax
0x2694f:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x26956:    f0 ff 41 04                        	lock inc dword ptr [ecx + 4]
0x2695a:    8d 84 24 b8 00 00 00               	lea eax, [esp + 0xb8]
0x26961:    c7 84 24 70 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x170], 0
0x2696c:    89 04 24                           	mov dword ptr [esp], eax
0x2696f:    e8 4c fe 00 00                     	call 0x367c0 <unknown_367c0>
0x26974:    e9 72 fe ff ff                     	jmp 0x267eb <function_265b0+0x23b>
0x26979:    8b 00                              	mov eax, dword ptr [eax]
0x2697b:    85 c0                              	test eax, eax
0x2697d:    0f 84 e7 02 00 00                  	je 0x26c6a <function_26c6a>
0x26983:    8b 10                              	mov edx, dword ptr [eax]
0x26985:    8d 8c 24 cc 00 00 00               	lea ecx, [esp + 0xcc]
0x2698c:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x26990:    89 0c 24                           	mov dword ptr [esp], ecx
0x26993:    ff 52 08                           	call dword ptr [edx + 8]
0x26996:    83 ec 04                           	sub esp, 4
0x26999:    8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0x269a0:    8b 10                              	mov edx, dword ptr [eax]
0x269a2:    89 04 24                           	mov dword ptr [esp], eax
0x269a5:    ff 52 0c                           	call dword ptr [edx + 0xc]
0x269a8:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x269af:    8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0x269b6:    c7 84 24 70 01 00 00 01 00 00 00   	mov dword ptr [esp + 0x170], 1
0x269c1:    85 c0                              	test eax, eax
0x269c3:    0f 85 1a fe ff ff                  	jne 0x267e3 <function_265b0+0x233>
0x269c9:    e9 1d fe ff ff                     	jmp 0x267eb <function_265b0+0x23b>
; data inside code section at 0x269ce -- 0x269d0
0x269ce:    66 90                                              |f.              |
0x269d0:    31 c0                              	xor eax, eax
0x269d2:    e9 2c fc ff ff                     	jmp 0x26603 <function_265b0+0x53>
0x269d7:    8b 8c 24 68 01 00 00               	mov ecx, dword ptr [esp + 0x168]
0x269de:    39 8c 24 6c 01 00 00               	cmp dword ptr [esp + 0x16c], ecx
0x269e5:    0f 87 1c 01 00 00                  	ja 0x26b07 <function_265b0+0x557>
0x269eb:    8b 94 24 58 01 00 00               	mov edx, dword ptr [esp + 0x158]
0x269f2:    85 d2                              	test edx, edx
0x269f4:    74 3e                              	je 0x26a34 <function_265b0+0x484>
0x269f6:    8b 84 24 54 01 00 00               	mov eax, dword ptr [esp + 0x154]
0x269fd:    83 f8 09                           	cmp eax, 9
0x26a00:    0f 86 ae 01 00 00                  	jbe 0x26bb4 <function_265b0+0x604>
0x26a06:    3b 54 24 28                        	cmp edx, dword ptr [esp + 0x28]
0x26a0a:    0f 84 9b 01 00 00                  	je 0x26bab <function_265b0+0x5fb>
0x26a10:    8b 8c 24 5c 01 00 00               	mov ecx, dword ptr [esp + 0x15c]
0x26a17:    39 c8                              	cmp eax, ecx
0x26a19:    0f 82 95 01 00 00                  	jb 0x26bb4 <function_265b0+0x604>
0x26a1f:    85 c9                              	test ecx, ecx
0x26a21:    0f 85 f5 00 00 00                  	jne 0x26b1c <function_265b0+0x56c>
0x26a27:    83 f8 0a                           	cmp eax, 0xa
0x26a2a:    76 08                              	jbe 0x26a34 <function_265b0+0x484>
0x26a2c:    89 14 24                           	mov dword ptr [esp], edx
0x26a2f:    e8 fc ff ff ff                     	call 0x26a30
0x26a34:    80 bc 24 d8 00 00 00 00            	cmp byte ptr [esp + 0xd8], 0
0x26a3c:    74 08                              	je 0x26a46 <function_265b0+0x496>
0x26a3e:    c6 84 24 d8 00 00 00 00            	mov byte ptr [esp + 0xd8], 0
0x26a46:    8d 84 24 98 00 00 00               	lea eax, [esp + 0x98]
0x26a4d:    89 04 24                           	mov dword ptr [esp], eax
0x26a50:    e8 6b fd 00 00                     	call 0x367c0 <unknown_367c0>
0x26a55:    8b 44 24 38                        	mov eax, dword ptr [esp + 0x38]
0x26a59:    8b 94 24 7c 01 00 00               	mov edx, dword ptr [esp + 0x17c]
0x26a60:    65 33 15 14 00 00 00               	xor edx, dword ptr gs:[0x14]
0x26a67:    0f 85 81 01 00 00                  	jne 0x26bee <function_26bee>
0x26a6d:    81 c4 8c 01 00 00                  	add esp, 0x18c
0x26a73:    5b                                 	pop ebx
0x26a74:    5e                                 	pop esi
0x26a75:    5f                                 	pop edi
0x26a76:    5d                                 	pop ebp
0x26a77:    c2 04 00                           	ret 4
0x26a7a:    83 86 94 00 00 00 01               	add dword ptr [esi + 0x94], 1
0x26a81:    8b 54 24 3c                        	mov edx, dword ptr [esp + 0x3c]
0x26a85:    8b 02                              	mov eax, dword ptr [edx]
0x26a87:    89 14 24                           	mov dword ptr [esp], edx
0x26a8a:    ff 50 10                           	call dword ptr [eax + 0x10]
0x26a8d:    8b 3f                              	mov edi, dword ptr [edi]
0x26a8f:    39 7c 24 48                        	cmp dword ptr [esp + 0x48], edi
0x26a93:    0f 84 4d fe ff ff                  	je 0x268e6 <function_265b0+0x33c>
0x26a99:    8b 47 08                           	mov eax, dword ptr [edi + 8]
0x26a9c:    85 c0                              	test eax, eax
0x26a9e:    89 44 24 3c                        	mov dword ptr [esp + 0x3c], eax
0x26aa2:    0f 85 4c fa ff ff                  	jne 0x264f4 <function_264f4>
0x26aa8:    c7 44 24 0c 80 dc 02 00            	mov dword ptr [esp + 0xc], 0x2dc80 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>&]"
0x26ab0:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x26ab8:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x26ac0:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
0x26ac7:    e8 fc ff ff ff                     	call 0x26ac8
0x26acc:    8d 74 26 00                        	lea esi, [esi]
0x26ad0:    8b 00                              	mov eax, dword ptr [eax]
0x26ad2:    89 84 24 c0 00 00 00               	mov dword ptr [esp + 0xc0], eax
0x26ad9:    e9 d1 fb ff ff                     	jmp 0x266af <function_265b0+0xff>
0x26ade:    c7 84 24 b0 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb0], 0
0x26ae9:    8b 84 24 ac 00 00 00               	mov eax, dword ptr [esp + 0xac]
0x26af0:    c7 84 24 78 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x178], 0
0x26afb:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x26b02:    e9 67 fc ff ff                     	jmp 0x2676e <function_265b0+0x1be>
0x26b07:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x26b0b:    89 2c 24                           	mov dword ptr [esp], ebp
0x26b0e:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x26b12:    e8 59 25 02 00                     	call 0x49070 <unknown_49070>
0x26b17:    e9 cf fe ff ff                     	jmp 0x269eb <function_265b0+0x43b>
0x26b1c:    8d 5c 49 fd                        	lea ebx, [ecx + ecx*2 - 3]
0x26b20:    8d 1c 9a                           	lea ebx, [edx + ebx*4]
0x26b23:    8d 0c 49                           	lea ecx, [ecx + ecx*2]
0x26b26:    89 de                              	mov esi, ebx
0x26b28:    c1 e1 02                           	shl ecx, 2
0x26b2b:    29 ce                              	sub esi, ecx
0x26b2d:    39 f3                              	cmp ebx, esi
0x26b2f:    0f 86 f2 fe ff ff                  	jbe 0x26a27 <function_265b0+0x477>
0x26b35:    8d 76 00                           	lea esi, [esi]
0x26b38:    89 1c 24                           	mov dword ptr [esp], ebx
0x26b3b:    e8 b0 1e 01 00                     	call 0x389f0 <unknown_389f0>
0x26b40:    83 eb 0c                           	sub ebx, 0xc
0x26b43:    39 de                              	cmp esi, ebx
0x26b45:    72 f1                              	jb 0x26b38 <function_265b0+0x588>
0x26b47:    8b 84 24 54 01 00 00               	mov eax, dword ptr [esp + 0x154]
0x26b4e:    8b 94 24 58 01 00 00               	mov edx, dword ptr [esp + 0x158]
0x26b55:    e9 cd fe ff ff                     	jmp 0x26a27 <function_265b0+0x477>
0x26b5a:    c7 84 24 b8 00 00 00 00 00 00 00   	mov dword ptr [esp + 0xb8], 0
0x26b65:    8b 84 24 b4 00 00 00               	mov eax, dword ptr [esp + 0xb4]
0x26b6c:    c7 84 24 78 01 00 00 00 00 00 00   	mov dword ptr [esp + 0x178], 0
0x26b77:    89 84 24 74 01 00 00               	mov dword ptr [esp + 0x174], eax
0x26b7e:    e9 d7 fd ff ff                     	jmp 0x2695a <function_265b0+0x3aa>
0x26b83:    8b 54 24 2c                        	mov edx, dword ptr [esp + 0x2c]
0x26b87:    8d 9c 24 70 01 00 00               	lea ebx, [esp + 0x170]
0x26b8e:    c6 42 04 00                        	mov byte ptr [edx + 4], 0
0x26b92:    89 1c 24                           	mov dword ptr [esp], ebx
0x26b95:    e8 56 1e 01 00                     	call 0x389f0 <unknown_389f0>
0x26b9a:    8b 4f 08                           	mov ecx, dword ptr [edi + 8]
0x26b9d:    89 4c 24 2c                        	mov dword ptr [esp + 0x2c], ecx
0x26ba1:    e9 f5 fc ff ff                     	jmp 0x2689b <function_265b0+0x2eb>
0x26ba6:    e8 83 d9 00 00                     	call 0x3452e <unknown_3452e>
0x26bab:    83 f8 0a                           	cmp eax, 0xa
0x26bae:    0f 84 5c fe ff ff                  	je 0x26a10 <function_265b0+0x460>
0x26bb4:    e8 81 dc 00 00                     	call 0x3483a <unknown_3483a>
0x26bb9:    8d b4 26 00 00 00 00               	lea esi, [esi]
0x26bc0:    e8 a1 da 00 00                     	call 0x34666 <unknown_34666>
0x26bc5:    c7 44 24 0c 80 c0 02 00            	mov dword ptr [esp + 0xc], 0x2c080 ; "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<bool>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<bool>&]"
0x26bcd:    c7 44 24 08 9c 01 00 00            	mov dword ptr [esp + 8], 0x19c
0x26bd5:    c7 44 24 04 d0 d5 00 00            	mov dword ptr [esp + 4], 0xd5d0 ; "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0x26bdd:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x26be4 -- 0x26be5
0x26be4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x26be5 -- 0x26be6
; data inside code section at 0x26be6 -- 0x26be9
0x26be6:    ff ff ff                                           |...             |
; function: function_26be9 at 0x26be9 -- 0x26bee
0x26be9:    e8 dc d9 00 00                     	call 0x345ca <unknown_345ca>
; function: function_26bee at 0x26bee -- 0x26bef
; dynamically linked function: __stack_chk_fail at 0x26bef -- 0x26bf0
; data inside code section at 0x26bf0 -- 0x26bf4
0x26bf0:    ff ff ff 89                                        |....            |
; function: function_26bf4 at 0x26bf4 -- 0x26bf5
0x26bf4:    c3                                 	ret 
; data inside code section at 0x26bf5 -- 0x26c08
0x26bf5:    8b 84 24 c8 00 00 00 85  c0 74 08 8b 10 89 04 24   |..$......t.....$|
0x26c05:    ff 52 04                                           |.R.             |
; function: function_26c08 at 0x26c08 -- 0x26c09
; data inside code section at 0x26c09 -- 0x26c16
0x26c09:    4c 24 3c 8b 01 89 0c 24  ff 50 10 89 d8            |L$<....$.P...   |
; function: function_26c16 at 0x26c16 -- 0x26c3f
0x26c16:    8b 54 24 38                        	mov edx, dword ptr [esp + 0x38]
0x26c1a:    80 3a 00                           	cmp byte ptr [edx], 0
0x26c1d:    74 03                              	je 0x26c22 <function_26c16+0xc>
0x26c1f:    c6 02 00                           	mov byte ptr [edx], 0
0x26c22:    8b 8c 24 68 01 00 00               	mov ecx, dword ptr [esp + 0x168]
0x26c29:    89 c3                              	mov ebx, eax
0x26c2b:    39 8c 24 6c 01 00 00               	cmp dword ptr [esp + 0x16c], ecx
0x26c32:    76 10                              	jbe 0x26c44
0x26c34:    8b 44 24 34                        	mov eax, dword ptr [esp + 0x34]
0x26c38:    89 2c 24                           	mov dword ptr [esp], ebp
0x26c3b:    89 44 24 04                        	mov dword ptr [esp + 4], eax
; data inside code section at 0x26c3f -- 0x26c40
0x26c3f:    e8                                                 |.               |
; function: function_26c40 at 0x26c40 -- 0x26c65
0x26c40:    2c 24                              	sub al, 0x24
0x26c42:    02 00                              	add al, byte ptr [eax]
0x26c44:    8d 94 24 d8 00 00 00               	lea edx, [esp + 0xd8]
0x26c4b:    89 14 24                           	mov dword ptr [esp], edx
0x26c4e:    e8 dd 3f 01 00                     	call 0x3ac30 <unknown_3ac30>
0x26c53:    8d 84 24 98 00 00 00               	lea eax, [esp + 0x98]
0x26c5a:    89 04 24                           	mov dword ptr [esp], eax
0x26c5d:    e8 5e fb 00 00                     	call 0x367c0 <unknown_367c0>
0x26c62:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x26c65 -- 0x26c66
0x26c65:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x26c66 -- 0x26c67
; data inside code section at 0x26c67 -- 0x26c6a
0x26c67:    ff ff ff                                           |...             |
; function: function_26c6a at 0x26c6a -- 0x26c89
0x26c6a:    c7 44 24 0c c0 8b 02 00            	mov dword ptr [esp + 0xc], 0x28bc0 ; "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x26c72:    c7 44 24 08 61 00 00 00            	mov dword ptr [esp + 8], 0x61
0x26c7a:    c7 44 24 04 ec db 00 00            	mov dword ptr [esp + 4], 0xdbec ; "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0x26c82:    c7 04 24 6e 9f 00 00               	mov dword ptr [esp], 0x9f6e ; "px != 0"
; data inside code section at 0x26c89 -- 0x26c8a
0x26c89:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x26c8a -- 0x26c8b
; data inside code section at 0x26c8b -- 0x26c8d
0x26c8b:    ff ff                                              |..              |
; function: function_26c8d at 0x26c8d -- 0x26c9f
0x26c8d:    ff 89 c6 89 1c 24                  	dec dword ptr [ecx + 0x241c89c6]
0x26c93:    89 f3                              	mov ebx, esi
0x26c95:    e8 56 1d 01 00                     	call 0x389f0 <unknown_389f0>
0x26c9a:    e9 69 ff ff ff                     	jmp 0x26c08 <function_26c08>
; function: function_26c9f at 0x26c9f -- 0x26cb5
0x26c9f:    80 bc 24 d8 00 00 00 00            	cmp byte ptr [esp + 0xd8], 0
0x26ca7:    74 08                              	je 0x26cb1 <function_26c9f+0x12>
0x26ca9:    c6 84 24 d8 00 00 00 00            	mov byte ptr [esp + 0xd8], 0
0x26cb1:    89 c3                              	mov ebx, eax
0x26cb3:    eb 9e                              	jmp 0x26c53
; function: function_26cb5 at 0x26cb5 -- 0x26cd3
0x26cb5:    89 c3                              	mov ebx, eax
0x26cb7:    8b 84 24 cc 00 00 00               	mov eax, dword ptr [esp + 0xcc]
0x26cbe:    85 c0                              	test eax, eax
0x26cc0:    0f 84 42 ff ff ff                  	je 0x26c08 <function_26c08>
0x26cc6:    8b 10                              	mov edx, dword ptr [eax]
0x26cc8:    89 04 24                           	mov dword ptr [esp], eax
0x26ccb:    ff 52 04                           	call dword ptr [edx + 4]
0x26cce:    e9 35 ff ff ff                     	jmp 0x26c08 <function_26c08>
; function: function_26cd3 at 0x26cd3 -- 0x26cda
0x26cd3:    89 c3                              	mov ebx, eax
0x26cd5:    e9 6a ff ff ff                     	jmp 0x26c44
; function: function_26cda at 0x26cda -- 0x26d09
0x26cda:    8d 8c 24 a4 00 00 00               	lea ecx, [esp + 0xa4]
0x26ce1:    89 0c 24                           	mov dword ptr [esp], ecx
0x26ce4:    e8 97 ff 00 00                     	call 0x36c80 <unknown_36c80>
0x26ce9:    8d 84 24 a4 00 00 00               	lea eax, [esp + 0xa4]
0x26cf0:    89 04 24                           	mov dword ptr [esp], eax
0x26cf3:    e8 c8 2b 01 00                     	call 0x398c0 <unknown_398c0>
0x26cf8:    83 fa 01                           	cmp edx, 1
0x26cfb:    74 3c                              	je 0x26d39 <function_26d39>
0x26cfd:    83 ea 01                           	sub edx, 1
0x26d00:    0f 85 10 ff ff ff                  	jne 0x26c16 <function_26c16>
0x26d06:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x26d09 -- 0x26d0a
0x26d09:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x26d0a -- 0x26d0b
; data inside code section at 0x26d0b -- 0x26d0f
0x26d0b:    ff ff ff e8                                        |....            |
; dynamically linked function: __cxa_end_catch at 0x26d0f -- 0x26d10
; data inside code section at 0x26d10 -- 0x26d13
0x26d10:    ff ff ff                                           |...             |
; function: function_26d13 at 0x26d13 -- 0x26d18
0x26d13:    e9 b9 f7 ff ff                     	jmp 0x264d1 <function_264d1>
; function: function_26d18 at 0x26d18 -- 0x26d39
0x26d18:    8d 8c 24 a4 00 00 00               	lea ecx, [esp + 0xa4]
0x26d1f:    89 44 24 24                        	mov dword ptr [esp + 0x24], eax
0x26d23:    89 54 24 20                        	mov dword ptr [esp + 0x20], edx
0x26d27:    89 0c 24                           	mov dword ptr [esp], ecx
0x26d2a:    e8 11 ab 00 00                     	call 0x31840 <function_31840>
0x26d2f:    8b 44 24 24                        	mov eax, dword ptr [esp + 0x24]
0x26d33:    8b 54 24 20                        	mov edx, dword ptr [esp + 0x20]
0x26d37:    eb bf                              	jmp 0x26cf8
; function: function_26d39 at 0x26d39 -- 0x26d3c
0x26d39:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x26d3c -- 0x26d3d
0x26d3c:    e8                                                 |.               |
; dynamically linked function: __cxa_begin_catch at 0x26d3d -- 0x26d3e
; data inside code section at 0x26d3e -- 0x26d65
0x26d3e:    ff ff ff 8b 57 08 85 d2  89 54 24 2c 0f 84 99 fe   |....W....T$,....|
0x26d4e:    ff ff 8b 4c 24 2c 8b 01  89 0c 24 ff 50 0c 8b 44   |...L$,....$.P..D|
0x26d5e:    24 2c c6 40 04 00 89                               |$,.@...         |
; function: function_26d65 at 0x26d65 -- 0x26d68
0x26d65:    c2 8b 00                           	ret 0x8b
; data inside code section at 0x26d68 -- 0x26d6f
0x26d68:    89 14 24 ff 50 10 e8                               |..$.P..         |
; dynamically linked function: __cxa_rethrow at 0x26d6f -- 0x26d70
; data inside code section at 0x26d70 -- 0x26d73
0x26d70:    ff ff ff                                           |...             |
; function: function_26d73 at 0x26d73 -- 0x26d7a
0x26d73:    89 c3                              	mov ebx, eax
0x26d75:    e9 8e fe ff ff                     	jmp 0x26c08 <function_26c08>
; data inside code section at 0x26d7a -- 0x26d83
0x26d7a:    89 44 24 24 89 54 24 20  e8                        |.D$$.T$ .       |
; dynamically linked function: __cxa_end_catch at 0x26d83 -- 0x26d84
; data inside code section at 0x26d84 -- 0x26d86
0x26d84:    ff ff                                              |..              |
; function: function_26d86 at 0x26d86 -- 0x26d94
0x26d86:    ff 8b 44 24 24 8b                  	dec dword ptr [ebx - 0x74dbdbbc]
0x26d8c:    54                                 	push esp
0x26d8d:    24 20                              	and al, 0x20
0x26d8f:    e9 69 ff ff ff                     	jmp 0x26cfd
; function: function_26d94 at 0x26d94 -- 0x26daa
0x26d94:    89 c3                              	mov ebx, eax
0x26d96:    8d 84 24 bc 00 00 00               	lea eax, [esp + 0xbc]
0x26d9d:    89 04 24                           	mov dword ptr [esp], eax
0x26da0:    e8 0b 58 01 00                     	call 0x3c5b0 <unknown_3c5b0>
0x26da5:    e9 a9 fe ff ff                     	jmp 0x26c53
; function: function_26daa at 0x26daa -- 0x26daf
0x26daa:    e9 73 fe ff ff                     	jmp 0x26c22
; data inside code section at 0x26daf -- 0x26db0
0x26daf:    90                                                 |.               |
; function: function_26db0 at 0x26db0 -- 0x26db5
0x26db0:    e9 61 fe ff ff                     	jmp 0x26c16 <function_26c16>
; function: function_26db5 at 0x26db5 -- 0x26dd4
0x26db5:    c7 44 24 0c 40 d6 02 00            	mov dword ptr [esp + 0xc], 0x2d640 ; "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = bool, T1 = CNode*, T2 = bool, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*, bool)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, Mutex = boost::signals2::mutex]"
0x26dbd:    c7 44 24 08 c9 01 00 00            	mov dword ptr [esp + 8], 0x1c9
0x26dc5:    c7 44 24 04 c8 dd 00 00            	mov dword ptr [esp + 4], 0xddc8 ; "/usr/include/boost/signals2/detail/signal_template.hpp"
0x26dcd:    c7 04 24 90 a3 00 00               	mov dword ptr [esp], 0xa390 ; "_shared_state.unique()"
; data inside code section at 0x26dd4 -- 0x26dd5
0x26dd4:    e8                                                 |.               |
; dynamically linked function: __assert_fail at 0x26dd5 -- 0x26dd6
; data inside code section at 0x26dd6 -- 0x26dd9
0x26dd6:    ff ff ff                                           |...             |
; section: .text.startup
; function: _GLOBAL__sub_I_fDiscover at 0x26e30 -- 0x26e47
0x26e30:    53                                 	push ebx
0x26e31:    83 ec 58                           	sub esp, 0x58
0x26e34:    65 a1 14 00 00 00                  	mov eax, dword ptr gs:[0x14]
0x26e3a:    89 44 24 4c                        	mov dword ptr [esp + 0x4c], eax
0x26e3e:    31 c0                              	xor eax, eax
0x26e40:    c7 04 24 3c a3 00 00               	mov dword ptr [esp], 0xa33c
; data inside code section at 0x26e47 -- 0x26e48
0x26e47:    e8                                                 |.               |
; dynamically linked function: _ZNSt8ios_base4InitC1Ev at 0x26e48 -- 0x26e49
; data inside code section at 0x26e49 -- 0x26e50
0x26e49:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x26e50 -- 0x26e5c
; data inside code section at 0x26e5c -- 0x26e5f
0x26e5c:    c7 04 24                                           |..$             |
; dynamically linked function: _ZNSt8ios_base4InitD1Ev at 0x26e5f -- 0x26e75
; data inside code section at 0x26e75 -- 0x26e76
0x26e75:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system16generic_categoryEv at 0x26e76 -- 0x26e77
; data inside code section at 0x26e77 -- 0x26e79
0x26e77:    ff ff                                              |..              |
; function: function_26e79 at 0x26e79 -- 0x26e7f
0x26e79:    ff a3 40 a3 00 00                  	jmp dword ptr [ebx + 0xa340]
; data inside code section at 0x26e7f -- 0x26e83
0x26e7f:    e8 fc ff ff                                        |....            |
; function: function_26e83 at 0x26e83 -- 0x26e89
0x26e83:    ff a3 44 a3 00 00                  	jmp dword ptr [ebx + 0xa344]
; data inside code section at 0x26e89 -- 0x26e8a
0x26e89:    e8                                                 |.               |
; dynamically linked function: _ZN5boost6system15system_categoryEv at 0x26e8a -- 0x26e8b
; data inside code section at 0x26e8b -- 0x26ea3
0x26e8b:    ff ff ff c7 04 24 a0 a2  00 00 a3 48 a3 00 00 e8   |.....$.....H....|
0x26e9b:    f1 13 01 00 c7 44 24 08                            |.....D$.        |
; dynamically linked function: __dso_handle at 0x26ea3 -- 0x26eb6
; data inside code section at 0x26eb6 -- 0x26eb7
0x26eb6:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x26eb7 -- 0x26eb8
; data inside code section at 0x26eb8 -- 0x26ef0
0x26eb8:    ff ff ff c7 05 f8 a2 00  00 00 00 00 00 c7 05 fc   |................|
0x26ec8:    a2 00 00 00 00 00 00 c7  05 08 a3 00 00 00 00 00   |................|
0x26ed8:    00 c7 05 00 a3 00 00 f8  a2 00 00 c7 05 04 a3 00   |................|
0x26ee8:    00 f8 a2 00 00 c7 44 24                            |......D$        |
; function: function_26ef0 at 0x26ef0 -- 0x26ef1
; dynamically linked function: __dso_handle at 0x26ef1 -- 0x26f04
; data inside code section at 0x26f04 -- 0x26f05
0x26f04:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x26f05 -- 0x26f06
; data inside code section at 0x26f06 -- 0x26f10
0x26f06:    ff ff ff c7 05 20 a3 00  00 00                     |..... ....      |
; function: function_26f10 at 0x26f10 -- 0x26f27
0x26f10:    00 00                              	add byte ptr [eax], al
0x26f12:    00 c7                              	add bh, al
0x26f14:    05 24 a3 00 00                     	add eax, 0xa324
0x26f19:    00 00                              	add byte ptr [eax], al
0x26f1b:    00 00                              	add byte ptr [eax], al
0x26f1d:    c7 05 28 a3 00 00 00 00 00 00      	mov dword ptr [0xa328], 0 ; "dcon"
; data inside code section at 0x26f27 -- 0x26f2b
0x26f27:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x26f2b -- 0x26f3e
; data inside code section at 0x26f3e -- 0x26f3f
0x26f3e:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x26f3f -- 0x26f40
; data inside code section at 0x26f40 -- 0x26fb0
0x26f40:    ff ff ff c7 04 24 80 a1  00 00 e8 41 13 01 00 31   |.....$.....A...1|
0x26f50:    d2 b8 14 a2 00 00 c7 05  d4 a1 00 00 00 00 00 00   |................|
0x26f60:    c7 05 d8 a1 00 00 00 00  00 00 c7 05 dc a1 00 00   |................|
0x26f70:    00 00 00 00 c7 05 e8 a1  00 00 00 00 00 00 c7 05   |................|
0x26f80:    ec a1 00 00 00 00 00 00  c7 05 f8 a1 00 00 00 00   |................|
0x26f90:    00 00 c7 05 f0 a1 00 00  e8 a1 00 00 c7 05 f4 a1   |................|
0x26fa0:    00 00 e8 a1 00 00 c7 05  00 a2 00 00 00 00 00 00   |................|
; function: function_26fb0 at 0x26fb0 -- 0x27021
0x26fb0:    c7 05 04 a2 00 00 00 00 00 00      	mov dword ptr [0xa204], 0 ; "GDs found\n"
0x26fba:    c7 05 10 a2 00 00 00 00 00 00      	mov dword ptr [0xa210], 0 ; "banscore"
0x26fc4:    c7 05 08 a2 00 00 00 a2 00 00      	mov dword ptr [0xa208], 0xa200 ; "found\n"
0x26fce:    c7 05 0c a2 00 00 00 a2 00 00      	mov dword ptr [0xa20c], 0xa200 ; "d\n"
0x26fd8:    e8 93 fe ff ff                     	call 0x26e70
0x26fdd:    a1 1c a2 00 00                     	mov eax, dword ptr [0xa21c] ; "ntime"
0x26fe2:    8d 5c 24 3c                        	lea ebx, [esp + 0x3c]
0x26fe6:    31 d2                              	xor edx, edx
0x26fe8:    a3 18 a2 00 00                     	mov dword ptr [0xa218], eax
0x26fed:    89 d8                              	mov eax, ebx
0x26fef:    e8 7c fe ff ff                     	call 0x26e70
0x26ff4:    8b 44 24 44                        	mov eax, dword ptr [esp + 0x44]
0x26ff8:    c7 05 24 a2 00 00 00 00 00 00      	mov dword ptr [0xa224], 0 ; "sbehaving: %s (%d -> %d)\n"
0x27002:    c7 05 28 a2 00 00 00 00 00 00      	mov dword ptr [0xa228], 0 ; "aving: %s (%d -> %d)\n"
0x2700c:    c7 05 2c a2 00 00 00 00 00 00      	mov dword ptr [0xa22c], 0 ; "g: %s (%d -> %d)\n"
0x27016:    89 44 24 40                        	mov dword ptr [esp + 0x40], eax
0x2701a:    c7 04 24 00 03 00 00               	mov dword ptr [esp], 0x300
; data inside code section at 0x27021 -- 0x27022
0x27021:    e8                                                 |.               |
; dynamically linked function: _Znwj at 0x27022 -- 0x27023
; data inside code section at 0x27023 -- 0x27040
0x27023:    ff ff ff 8d 90 00 03 00  00 a3 24 a2 00 00 a3 28   |..........$....(|
0x27033:    a2 00 00 89 15 2c a2 00  00 89 5c 24 08            |.....,....\$.   |
; function: function_27040 at 0x27040 -- 0x27152
0x27040:    c7 44 24 04 40 00 00 00            	mov dword ptr [esp + 4], 0x40
0x27048:    89 04 24                           	mov dword ptr [esp], eax
0x2704b:    e8 20 bd 01 00                     	call 0x42d70 <unknown_42d70>
0x27050:    a1 2c a2 00 00                     	mov eax, dword ptr [0xa22c] ; "g: %s (%d -> %d)\n"
0x27055:    89 1c 24                           	mov dword ptr [esp], ebx
0x27058:    a3 28 a2 00 00                     	mov dword ptr [0xa228], eax ; "aving: %s (%d -> %d)\n"
0x2705d:    e8 3e 27 01 00                     	call 0x397a0 <unknown_397a0>
0x27062:    8d 44 24 28                        	lea eax, [esp + 0x28]
0x27066:    c7 44 24 28 00 00 00 00            	mov dword ptr [esp + 0x28], 0
0x2706e:    c7 44 24 2c 00 00 00 00            	mov dword ptr [esp + 0x2c], 0
0x27076:    c7 44 24 38 00 00 00 00            	mov dword ptr [esp + 0x38], 0
0x2707e:    89 44 24 30                        	mov dword ptr [esp + 0x30], eax
0x27082:    89 44 24 34                        	mov dword ptr [esp + 0x34], eax
0x27086:    c7 05 34 a2 00 00 00 00 00 00      	mov dword ptr [0xa234], 0 ; "d -> %d)\n"
0x27090:    c7 05 38 a2 00 00 00 00 00 00      	mov dword ptr [0xa238], 0 ; " %d)\n"
0x2709a:    c7 05 3c a2 00 00 00 00 00 00      	mov dword ptr [0xa23c], 0
0x270a4:    c7 04 24 00 18 00 00               	mov dword ptr [esp], 0x1800
0x270ab:    e8 fc ff ff ff                     	call 0x270ac
0x270b0:    8d 90 00 18 00 00                  	lea edx, [eax + 0x1800]
0x270b6:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x270ba:    a3 34 a2 00 00                     	mov dword ptr [0xa234], eax ; "d -> %d)\n"
0x270bf:    a3 38 a2 00 00                     	mov dword ptr [0xa238], eax ; " %d)\n"
0x270c4:    89 15 3c a2 00 00                  	mov dword ptr [0xa23c], edx
0x270ca:    89 5c 24 08                        	mov dword ptr [esp + 8], ebx
0x270ce:    c7 44 24 04 00 01 00 00            	mov dword ptr [esp + 4], 0x100
0x270d6:    89 04 24                           	mov dword ptr [esp], eax
0x270d9:    e8 22 ea 01 00                     	call 0x45b00 <unknown_45b00>
0x270de:    a1 3c a2 00 00                     	mov eax, dword ptr [0xa23c]
0x270e3:    89 1c 24                           	mov dword ptr [esp], ebx
0x270e6:    a3 38 a2 00 00                     	mov dword ptr [0xa238], eax ; " %d)\n"
0x270eb:    8b 44 24 2c                        	mov eax, dword ptr [esp + 0x2c]
0x270ef:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x270f3:    e8 18 37 01 00                     	call 0x3a810 <unknown_3a810>
0x270f8:    8b 0d d8 a1 00 00                  	mov ecx, dword ptr [0xa1d8] ; "ss = %s\n"
0x270fe:    8b 15 d4 a1 00 00                  	mov edx, dword ptr [0xa1d4] ; "ddress = %s\n"
0x27104:    c6 44 24 4b 00                     	mov byte ptr [esp + 0x4b], 0
0x27109:    89 c8                              	mov eax, ecx
0x2710b:    29 d0                              	sub eax, edx
0x2710d:    83 f8 1f                           	cmp eax, 0x1f
0x27110:    0f 86 ec 04 00 00                  	jbe 0x27602 <function_27602>
0x27116:    83 f8 20                           	cmp eax, 0x20
0x27119:    0f 85 d5 04 00 00                  	jne 0x275f4 <function_275f4>
0x2711f:    a1 d4 a1 00 00                     	mov eax, dword ptr [0xa1d4] ; "ddress = %s\n"
0x27124:    c7 44 24 04 20 00 00 00            	mov dword ptr [esp + 4], 0x20
0x2712c:    89 04 24                           	mov dword ptr [esp], eax
0x2712f:    e8 fc ff ff ff                     	call 0x27130
0x27134:    c7 05 e0 a1 00 00 00 00 00 00      	mov dword ptr [0xa1e0], 0
0x2713e:    c7 05 20 a2 00 00 00 00 00 00      	mov dword ptr [0xa220], 0
0x27148:    c7 05 30 a2 00 00 00 00 00 00      	mov dword ptr [0xa230], 0 ; "s (%d -> %d)\n"
; data inside code section at 0x27152 -- 0x27156
0x27152:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27156 -- 0x27169
; data inside code section at 0x27169 -- 0x2716a
0x27169:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x2716a -- 0x2716b
; data inside code section at 0x2716b -- 0x27190
0x2716b:    ff ff ff c7 05 74 a1 00  00 00 00 00 00 c7 05 78   |.....t.........x|
0x2717b:    a1 00 00 00 00 00 00 c7  05 7c a1 00 00 00 00 00   |.........|......|
0x2718b:    00 c7 44 24 08                                     |..D$.           |
; dynamically linked function: __dso_handle at 0x27190 -- 0x271b4
; data inside code section at 0x271b4 -- 0x271b8
0x271b4:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x271b8 -- 0x27202
; data inside code section at 0x27202 -- 0x27206
0x27202:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27206 -- 0x27219
; data inside code section at 0x27219 -- 0x2721a
0x27219:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x2721a -- 0x2721b
; data inside code section at 0x2721b -- 0x27220
0x2721b:    ff ff ff c7 05                                     |.....           |
; function: function_27220 at 0x27220 -- 0x27296
0x27220:    e0 a0                              	loopne 0x271c2
0x27222:    00 00                              	add byte ptr [eax], al
0x27224:    00 00                              	add byte ptr [eax], al
0x27226:    00 00                              	add byte ptr [eax], al
0x27228:    c7 05 e4 a0 00 00 00 00 00 00      	mov dword ptr [0xa0e4], 0 ; "t == 0"
0x27232:    c7 05 e8 a0 00 00 00 00 00 00      	mov dword ptr [0xa0e8], 0 ; " 0"
0x2723c:    c7 05 ec a0 00 00 00 00 00 00      	mov dword ptr [0xa0ec], 0 ; "node->nSendSize == 0"
0x27246:    c7 05 f0 a0 00 00 00 00 00 00      	mov dword ptr [0xa0f0], 0 ; "->nSendSize == 0"
0x27250:    c7 05 f4 a0 00 00 00 00 00 00      	mov dword ptr [0xa0f4], 0 ; "endSize == 0"
0x2725a:    c7 05 f8 a0 00 00 00 00 00 00      	mov dword ptr [0xa0f8], 0 ; "ize == 0"
0x27264:    c7 05 fc a0 00 00 00 00 00 00      	mov dword ptr [0xa0fc], 0 ; "== 0"
0x2726e:    c7 05 00 a1 00 00 00 00 00 00      	mov dword ptr [0xa100], 0
0x27278:    c7 05 04 a1 00 00 00 00 00 00      	mov dword ptr [0xa104], 0 ; "thread stop\n"
0x27282:    c7 44 24 04 00 00 00 00            	mov dword ptr [esp + 4], 0
0x2728a:    c7 04 24 e0 a0 00 00               	mov dword ptr [esp], 0xa0e0 ; "ffset == 0"
0x27291:    e8 7a 60 01 00                     	call 0x3d310 <unknown_3d310>
; data inside code section at 0x27296 -- 0x2729a
0x27296:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x2729a -- 0x272ad
; data inside code section at 0x272ad -- 0x272ae
0x272ad:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x272ae -- 0x272af
; data inside code section at 0x272af -- 0x272c0
0x272af:    ff ff ff c7 04 24 80 a0  00 00 e8 d2 0f 01 00 c7   |.....$..........|
0x272bf:    44                                                 |D               |
; function: function_272c0 at 0x272c0 -- 0x272c2
0x272c0:    24 08                              	and al, 8
; dynamically linked function: __dso_handle at 0x272c2 -- 0x272d5
; data inside code section at 0x272d5 -- 0x272d6
0x272d5:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x272d6 -- 0x272d7
; data inside code section at 0x272d7 -- 0x272e2
0x272d7:    ff ff ff c7 05 44 a0 00  00 00 00                  |.....D.....     |
; function: function_272e2 at 0x272e2 -- 0x2733e
0x272e2:    00 00                              	add byte ptr [eax], al
0x272e4:    c7 05 48 a0 00 00 00 00 00 00      	mov dword ptr [0xa048], 0 ; "_mapLocalHost"
0x272ee:    c7 05 54 a0 00 00 00 00 00 00      	mov dword ptr [0xa054], 0
0x272f8:    c7 05 4c a0 00 00 44 a0 00 00      	mov dword ptr [0xa04c], 0xa044 ; "LocalHost"
0x27302:    c7 05 50 a0 00 00 44 a0 00 00      	mov dword ptr [0xa050], 0xa044 ; "lHost"
0x2730c:    c7 05 5c a0 00 00 00 00 00 00      	mov dword ptr [0xa05c], 0
0x27316:    c7 05 60 a0 00 00 00 00 00 00      	mov dword ptr [0xa060], 0 ; "_setBanned"
0x27320:    c7 05 6c a0 00 00 00 00 00 00      	mov dword ptr [0xa06c], 0 ; "ector::_M_fill_insert"
0x2732a:    c7 05 64 a0 00 00 5c a0 00 00      	mov dword ptr [0xa064], 0xa05c ; "Banned"
0x27334:    c7 05 68 a0 00 00 5c a0 00 00      	mov dword ptr [0xa068], 0xa05c ; "ed"
; data inside code section at 0x2733e -- 0x27340
0x2733e:    c7 05                                              |..              |
; function: function_27340 at 0x27340 -- 0x27346
0x27340:    70 a0                              	jo 0x272e2 <function_272e2>
0x27342:    00 00                              	add byte ptr [eax], al
0x27344:    50                                 	push eax
0x27345:    c3                                 	ret 
; data inside code section at 0x27346 -- 0x2734c
0x27346:    00 00 c7 44 24 08                                  |...D$.          |
; dynamically linked function: __dso_handle at 0x2734c -- 0x273dc
; data inside code section at 0x273dc -- 0x273e0
0x273dc:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x273e0 -- 0x27404
; data inside code section at 0x27404 -- 0x27408
0x27404:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27408 -- 0x27452
; data inside code section at 0x27452 -- 0x27456
0x27452:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27456 -- 0x27469
; data inside code section at 0x27469 -- 0x2746a
0x27469:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x2746a -- 0x2746b
; data inside code section at 0x2746b -- 0x2747e
0x2746b:    ff ff ff c7 04 24 60 9f  00 00 e8 16 0e 01 00 c7   |.....$`.........|
0x2747b:    44 24 08                                           |D$.             |
; dynamically linked function: __dso_handle at 0x2747e -- 0x27491
; data inside code section at 0x27491 -- 0x27492
0x27491:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x27492 -- 0x27493
; data inside code section at 0x27493 -- 0x274b8
0x27493:    ff ff ff c7 05 54 9f 00  00 00 00 00 00 c7 05 58   |.....T.........X|
0x274a3:    9f 00 00 00 00 00 00 c7  05 5c 9f 00 00 00 00 00   |.........\......|
0x274b3:    00 c7 44 24 08                                     |..D$.           |
; dynamically linked function: __dso_handle at 0x274b8 -- 0x274dc
; data inside code section at 0x274dc -- 0x274e0
0x274dc:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x274e0 -- 0x27504
; data inside code section at 0x27504 -- 0x27508
0x27504:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27508 -- 0x27552
; data inside code section at 0x27552 -- 0x27556
0x27552:    c7 44 24 08                                        |.D$.            |
; dynamically linked function: __dso_handle at 0x27556 -- 0x27569
; data inside code section at 0x27569 -- 0x2756a
0x27569:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x2756a -- 0x2756b
; data inside code section at 0x2756b -- 0x2757e
0x2756b:    ff ff ff c7 04 24 80 9e  00 00 e8 16 0d 01 00 c7   |.....$..........|
0x2757b:    44 24 08                                           |D$.             |
; dynamically linked function: __dso_handle at 0x2757e -- 0x27591
; data inside code section at 0x27591 -- 0x27592
0x27591:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x27592 -- 0x27593
; data inside code section at 0x27593 -- 0x275ae
0x27593:    ff ff ff c7 05 18 a3 00  00 18 a3 00 00 c7 05 1c   |................|
0x275a3:    a3 00 00 18 a3 00 00 c7  44 24 08                  |........D$.     |
; dynamically linked function: __dso_handle at 0x275ae -- 0x275c1
; data inside code section at 0x275c1 -- 0x275c2
0x275c1:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x275c2 -- 0x275c3
; data inside code section at 0x275c3 -- 0x275ca
0x275c3:    ff ff ff c7 44 24 08                               |....D$.         |
; dynamically linked function: __dso_handle at 0x275ca -- 0x275dd
; data inside code section at 0x275dd -- 0x275de
0x275dd:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x275de -- 0x275df
; data inside code section at 0x275df -- 0x275e1
0x275df:    ff ff                                              |..              |
; function: function_275e1 at 0x275e1 -- 0x275f4
0x275e1:    ff 8b 44 24 4c 65                  	dec dword ptr [ebx + 0x654c2444]
0x275e7:    33 05 14 00 00 00                  	xor eax, dword ptr [0x14]
0x275ed:    75 70                              	jne 0x2765f <function_2765f>
0x275ef:    83 c4 58                           	add esp, 0x58
0x275f2:    5b                                 	pop ebx
0x275f3:    c3                                 	ret 
; function: function_275f4 at 0x275f4 -- 0x27602
0x275f4:    83 c2 20                           	add edx, 0x20
0x275f7:    89 15 d8 a1 00 00                  	mov dword ptr [0xa1d8], edx ; "ss = %s\n"
0x275fd:    e9 1d fb ff ff                     	jmp 0x2711f
; function: function_27602 at 0x27602 -- 0x2762a
0x27602:    8d 54 24 4b                        	lea edx, [esp + 0x4b]
0x27606:    89 54 24 0c                        	mov dword ptr [esp + 0xc], edx
0x2760a:    ba 20 00 00 00                     	mov edx, 0x20
0x2760f:    29 c2                              	sub edx, eax
0x27611:    89 54 24 08                        	mov dword ptr [esp + 8], edx
0x27615:    89 4c 24 04                        	mov dword ptr [esp + 4], ecx
0x27619:    c7 04 24 d4 a1 00 00               	mov dword ptr [esp], 0xa1d4 ; "ddress = %s\n"
0x27620:    e8 5b 47 01 00                     	call 0x3bd80 <unknown_3bd80>
0x27625:    e9 f5 fa ff ff                     	jmp 0x2711f
; function: function_2762a at 0x2762a -- 0x2763e
0x2762a:    c6 05 b8 15 03 00 01               	mov byte ptr [0x315b8], 1
0x27631:    c7 04 24 b8 15 03 00               	mov dword ptr [esp], 0x315b8
0x27638:    e8 f3 15 01 00                     	call 0x38c30 <unknown_38c30>
0x2763d:    50                                 	push eax
; data inside code section at 0x2763e -- 0x27640
0x2763e:    c7 44                                              |.D              |
; function: function_27640 at 0x27640 -- 0x27642
0x27640:    24 08                              	and al, 8
; dynamically linked function: __dso_handle at 0x27642 -- 0x27655
; data inside code section at 0x27655 -- 0x27656
0x27655:    e8                                                 |.               |
; dynamically linked function: __cxa_atexit at 0x27656 -- 0x27657
; data inside code section at 0x27657 -- 0x2765a
0x27657:    ff ff ff                                           |...             |
; function: function_2765a at 0x2765a -- 0x2765f
0x2765a:    e9 16 f8 ff ff                     	jmp 0x26e75
; function: function_2765f at 0x2765f -- 0x2769f
0x2765f:    e8 fc ff ff ff                     	call 0x27660
0x27664:    89 c3                              	mov ebx, eax
0x27666:    c7 04 24 34 a2 00 00               	mov dword ptr [esp], 0xa234 ; "d -> %d)\n"
0x2766d:    e8 fe 31 01 00                     	call 0x3a870 <unknown_3a870>
0x27672:    c7 04 24 24 a2 00 00               	mov dword ptr [esp], 0xa224 ; "sbehaving: %s (%d -> %d)\n"
0x27679:    e8 82 21 01 00                     	call 0x39800 <unknown_39800>
0x2767e:    c7 04 24 14 a2 00 00               	mov dword ptr [esp], 0xa214 ; "core"
0x27685:    e8 16 21 01 00                     	call 0x397a0 <unknown_397a0>
0x2768a:    a1 04 a2 00 00                     	mov eax, dword ptr [0xa204] ; "GDs found\n"
0x2768f:    c7 04 24 fc a1 00 00               	mov dword ptr [esp], 0xa1fc ; "d UPnP IGDs found\n"
0x27696:    89 44 24 04                        	mov dword ptr [esp + 4], eax
0x2769a:    e8 b1 32 01 00                     	call 0x3a950 <unknown_3a950>
; data inside code section at 0x2769f -- 0x276a0
0x2769f:    a1                                                 |.               |
; function: function_276a0 at 0x276a0 -- 0x276c0
0x276a0:    ec                                 	in al, dx
0x276a1:    a1 00 00 c7 04                     	mov eax, dword ptr [0x4c70000]
0x276a6:    24 e4                              	and al, 0xe4
0x276a8:    a1 00 00 89 44                     	mov eax, dword ptr [0x44890000]
0x276ad:    24 04                              	and al, 4
0x276af:    e8 3c 32 01 00                     	call 0x3a8f0 <unknown_3a8f0>
0x276b4:    a1 d4 a1 00 00                     	mov eax, dword ptr [0xa1d4] ; "ddress = %s\n"
0x276b9:    85 c0                              	test eax, eax
0x276bb:    74 08                              	je 0x276c5 <function_276c5>
0x276bd:    89 04 24                           	mov dword ptr [esp], eax
; data inside code section at 0x276c0 -- 0x276c1
0x276c0:    e8                                                 |.               |
; dynamically linked function: _ZdlPv at 0x276c1 -- 0x276c2
; data inside code section at 0x276c2 -- 0x276c5
0x276c2:    ff ff ff                                           |...             |
; function: function_276c5 at 0x276c5 -- 0x276d4
0x276c5:    c7 04 24 80 a1 00 00               	mov dword ptr [esp], 0xa180 ; ".192"
0x276cc:    e8 1f df 00 00                     	call 0x355f0 <unknown_355f0>
0x276d1:    89 1c 24                           	mov dword ptr [esp], ebx
; data inside code section at 0x276d4 -- 0x276d5
0x276d4:    e8                                                 |.               |
; dynamically linked function: _Unwind_Resume at 0x276d5 -- 0x276d6
; data inside code section at 0x276d6 -- 0x276eb
0x276d6:    ff ff ff 8b 15 34 a2 00  00 85 d2 74 10 89 44 24   |.....4.....t..D$|
0x276e6:    1c 89 14 24 e8                                     |...$.           |
; dynamically linked function: _ZdlPv at 0x276eb -- 0x276ec
; data inside code section at 0x276ec -- 0x276ee
0x276ec:    ff ff                                              |..              |
; function: function_276ee at 0x276ee -- 0x27712
0x276ee:    ff 8b 44 24 1c 8b                  	dec dword ptr [ebx - 0x74e3dbbc]
0x276f4:    54                                 	push esp
0x276f5:    24 2c                              	and al, 0x2c
0x276f7:    89 1c 24                           	mov dword ptr [esp], ebx
0x276fa:    89 44 24 1c                        	mov dword ptr [esp + 0x1c], eax
0x276fe:    89 54 24 04                        	mov dword ptr [esp + 4], edx
0x27702:    e8 09 31 01 00                     	call 0x3a810 <unknown_3a810>
0x27707:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x2770b:    89 c3                              	mov ebx, eax
0x2770d:    e9 60 ff ff ff                     	jmp 0x27672
; function: function_27712 at 0x27712 -- 0x27719
0x27712:    89 c3                              	mov ebx, eax
0x27714:    e9 71 ff ff ff                     	jmp 0x2768a
; function: function_27719 at 0x27719 -- 0x2771f
0x27719:    8d 5c 24 24                        	lea ebx, [esp + 0x24]
0x2771d:    eb d4                              	jmp 0x276f3
; data inside code section at 0x2771f -- 0x27731
0x2771f:    8b 15 24 a2 00 00 85 d2  74 10 89 44 24 1c 89 14   |..$.....t..D$...|
0x2772f:    24 e8                                              |$.              |
; dynamically linked function: _ZdlPv at 0x27731 -- 0x27732
; data inside code section at 0x27732 -- 0x27734
0x27732:    ff ff                                              |..              |
; function: function_27734 at 0x27734 -- 0x27750
0x27734:    ff 8b 44 24 1c 89                  	dec dword ptr [ebx - 0x76e3dbbc]
0x2773a:    44                                 	inc esp
0x2773b:    24 1c                              	and al, 0x1c
0x2773d:    89 1c 24                           	mov dword ptr [esp], ebx
0x27740:    e8 5b 20 01 00                     	call 0x397a0 <unknown_397a0>
0x27745:    8b 44 24 1c                        	mov eax, dword ptr [esp + 0x1c]
0x27749:    89 c3                              	mov ebx, eax
0x2774b:    e9 2e ff ff ff                     	jmp 0x2767e
; function: function_27750 at 0x27750 -- 0x27752
0x27750:    eb e7                              	jmp 0x27739
; function: function_27752 at 0x27752 -- 0x27754
0x27752:    eb f5                              	jmp 0x27749

;;
;; Data Segment
;;

; section: .data
0x9e30:     7d 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |}...............|
0x9e40:     01 ??                                              |.?              |
; section: .rodata.str1.1
0x9e60:     62 6f 6f 73 74 3a 3a 6c  6f 63 6b 5f 65 72 72 6f   |boost::lock_erro|   "boost::lock_error"
0x9e70:     72 00                                              |r.              |
0x9e72:     62 6f 6f 73 74 3a 3a 74  68 72 65 61 64 5f 72 65   |boost::thread_re|   "boost::thread_resource_error"
0x9e82:     73 6f 75 72 63 65 5f 65  72 72 6f 72 00            |source_error.   |
0x9e8f:     62 69 74 63 6f 69 6e 2d  25 73 00                  |bitcoin-%s.     |   "bitcoin-%s"
0x9e9a:     25 73 20 74 68 72 65 61  64 20 73 74 61 72 74 0a   |%s thread start.|
0x9eaa:     00 25 73 20 74 68 72 65  61 64 20 65 78 69 74 0a   |.%s thread exit.|
0x9eba:     00 25 73 20 74 68 72 65  61 64 20 69 6e 74 65 72   |.%s thread inter|
0x9eca:     72 75 70 74 0a 00                                  |rupt..          |
0x9ed0:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 6c   |!pthread_mutex_l|   "!pthread_mutex_lock(m)"
0x9ee0:     6f 63 6b 28 6d 29 00                               |ock(m).         |
0x9ee7:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(m)"
0x9ef7:     6e 6c 6f 63 6b 28 6d 29  00                        |nlock(m).       |
0x9f00:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 64   |!pthread_mutex_d|   "!pthread_mutex_destroy(&m)"
0x9f10:     65 73 74 72 6f 79 28 26  6d 29 00                  |estroy(&m).     |
0x9f1b:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 75   |!pthread_mutex_u|   "!pthread_mutex_unlock(&m)"
0x9f2b:     6e 6c 6f 63 6b 28 26 6d  29 00                     |nlock(&m).      |
0x9f35:     21 70 74 68 72 65 61 64  5f 63 6f 6e 64 5f 73 69   |!pthread_cond_si|   "!pthread_cond_signal(&cond)"
0x9f45:     67 6e 61 6c 28 26 63 6f  6e 64 29 00               |gnal(&cond).    |
0x9f51:     21 70 74                                           |!pt             |
0x9f54:     68 72 65 61 64 5f 63 6f  6e 64 5f 64 65 73 74 72   |hread_cond_destr|   "hread_cond_destroy(&cond)"
0x9f64:     6f 79 28 26 63 6f 6e 64  29 00                     |oy(&cond).      |
0x9f6e:     70 78 20 21 3d 20 30 00                            |px != 0.        |   "px != 0"
0x9f76:     73 65 72 69 61 6c 69 7a  65 2e 68 00               |serialize.h.    |   "serialize.h"
0x9f82:     6e 53 69 7a 65 20 3e 3d  20 30 00                  |nSize >= 0.     |   "nSize >= 0"
0x9f8d:     66 61 6c 73 65 00                                  |false.          |   "false"
0x9f93:     69 73 5f 76 61 6c 69 64  28 29 00                  |is_valid().     |   "is_valid()"
0x9f9e:     6e 20 3e 20 30 00                                  |n > 0.          |   "n > 0"
0x9fa4:     6e 20 3c 3d 20 73 69 7a  65 5f 00                  |n <= size_.     |   "n <= size_"
0x9faf:     21 66 75 6c 6c 28 29 00                            |!full().        |   "!full()"
0x9fb7:     74 68 69 73 2d 3e 69 73  5f 69 6e 69 74 69 61 6c   |this->is_initial|   "this->is_initialized()"
0x9fc7:     69 7a 65 64 28 29 00                               |ized().         |
0x9fce:     3a 20 00                                           |: .             |
0x9fd1:     63 61 6c 6c 20 74 6f 20  65 6d 70 74 79 20 62 6f   |call to empty bo|   "call to empty boost::function"
0x9fe1:     6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 00         |ost::function.  |
0x9fef:     28 61 62 6f 72 74 65 64  29 0a 00 2d 70 6f 72 74   |(aborted)..-port|
0x9fff:     00 75 70 6e 70 00 21 72  65 73 00 21 70 74 68 72   |.upnp.!res.!pthr|
0xa00f:     65 61 64 5f 63 6f 6e 64  5f 77 61 69 74 28 26 63   |ead_cond_wait(&c|
0xa01f:     6f 6e 64 2c 26 6d 29 00                            |ond,&m).        |
0xa027:     6e 65 74 2e 63 70 70 00                            |net.cpp.        |   "net.cpp"
0xa02f:     63 73 5f 76 4e 6f 64 65  73 00                     |cs_vNodes.      |   "cs_vNodes"
0xa039:     61 64 64 72 6d 61 6e 2e  68 00 63 73 00            |addrman.h.cs.   |
0xa046:     63 73 5f 6d 61 70 4c 6f  63 61 6c 48 6f 73 74 00   |cs_mapLocalHost.|   "cs_mapLocalHost"
0xa056:     30 2e 30 2e 30 2e 30 00                            |0.0.0.0.        |   "0.0.0.0"
0xa05e:     63 73 5f 73 65 74 42 61  6e 6e 65 64 00            |cs_setBanned.   |   "cs_setBanned"
0xa06b:     76 65 63 74 6f 72 3a 3a  5f 4d 5f 66 69 6c 6c 5f   |vector::_M_fill_|   "vector::_M_fill_insert"
0xa07b:     69 6e 73 65 72 74 00                               |insert.         |
0xa082:     76 65 63 74 6f 72 3a 3a  5f 4d 5f 72 61 6e 67 65   |vector::_M_range|   "vector::_M_range_insert"
0xa092:     5f 69 6e 73 65 72 74 00                            |_insert.        |
0xa09a:     64 69 73 63 6f 6e 6e 65  63 74 69 6e 67 20 6e 6f   |disconnecting no|   "disconnecting node %s\n"
0xa0aa:     64 65 20 25 73 0a 00                               |de %s..         |
0xa0b1:     63 73 5f 76 52 65 63 76  4d 73 67 00               |cs_vRecvMsg.    |   "cs_vRecvMsg"
0xa0bd:     73 6f 63 6b 65 74 20 73  65 6e 64 20 65 72 72 6f   |socket send erro|
0xa0cd:     72 20 25 64 0a 00                                  |r %d..          |
0xa0d3:     70 6e 6f 64 65 2d 3e 6e  53 65 6e 64 4f 66 66 73   |pnode->nSendOffs|   "pnode->nSendOffset == 0"
0xa0e3:     65 74 20 3d 3d 20 30 00                            |et == 0.        |
0xa0eb:     70 6e 6f 64 65 2d 3e 6e  53 65 6e 64 53 69 7a 65   |pnode->nSendSize|   "pnode->nSendSize == 0"
0xa0fb:     20 3d 3d 20 30 00                                  | == 0.          |
0xa101:     25 73 20                                           |%s              |
0xa104:     74 68 72 65 61 64 20 73  74 6f 70 0a 00            |thread stop..   |   "thread stop\n"
0xa111:     00 73 6f                                           |.so             |
0xa114:     63 6b 65 74 20 63 6c 6f  73 65 64 0a 00            |cket closed..   |   "cket closed\n"
0xa121:     72 65 63                                           |rec             |
0xa124:     76 20 66 61 69 6c 65 64  3a 20 25 64 0a 00         |v failed: %d..  |   "v failed: %d\n"
0xa132:     62 61 73 69 63 5f 73 74  72 69 6e 67 3a 3a 73 75   |basic_string::su|
0xa142:     62 73 74 72 00 3c 00 20  09 0a 0d 00               |bstr.<. ....    |
0xa14e:     41 64 64 72 65 73 73 3a  00                        |Address:.       |   "Address:"
0xa157:     39 31 2e 31 39 38 2e 32  32 2e 37 30 00            |91.198.22.70.   |   "91.198.22.70"
0xa164:     63 68 65 63 6b 69 70 2e  64 79 6e 64 6e 73 2e 6f   |checkip.dyndns.o|   "checkip.dyndns.org"
0xa174:     72 67 00                                           |rg.             |
0xa177:     37 34 2e 32 30 38 2e 34  33 2e 31 39 32 00         |74.208.43.192.  |   "74.208.43.192"
0xa185:     77 77 77 2e 73 68 6f 77  6d 79 69 70 2e 63 6f 6d   |www.showmyip.com|   "www.showmyip.com"
0xa195:     00                                                 |.               |
0xa196:     53 74 6f 70 4e 6f 64 65  28 29 0a 00               |StopNode()..    |   "StopNode()\n"
0xa1a2:     63 73 5f 76 4f 6e 65 53  68 6f 74 73 00            |cs_vOneShots.   |   "cs_vOneShots"
0xa1af:     41 64 64 4c 6f 63 61 6c  28 25 73 2c 25 69 29 0a   |AddLocal(%s,%i).|   "AddLocal(%s,%i)\n"
0xa1bf:     00                                                 |.               |
0xa1c0:     25 75 00                                           |%u.             |   "%u"
0xa1c3:     55 50 6e 50 3a 20 45 78  74 65 72 6e 61 6c 49 50   |UPnP: ExternalIP|
0xa1d3:     41                                                 |A               |
0xa1d4:     64 64 72 65 73 73 20 3d  20 25 73 0a 00            |ddress = %s..   |   "ddress = %s\n"
0xa1e1:     50 61 72 61 6c 6c 65 6c  63 6f 69 6e 20 00 30 00   |Parallelcoin .0.|
0xa1f1:     54 43 50 00                                        |TCP.            |   "TCP"
0xa1f5:     4e 6f 20 76 61 6c 69                               |No vali         |
0xa1fc:     64 20 55 50 6e 50 20 49  47 44 73 20 66 6f 75 6e   |d UPnP IGDs foun|   "d UPnP IGDs found\n"
0xa20c:     64 0a 00                                           |d..             |
0xa20f:     2d                                                 |-               |
0xa210:     62 61 6e 73 63 6f 72 65  00                        |banscore.       |   "banscore"
0xa219:     2d 62 61                                           |-ba             |
0xa21c:     6e 74 69 6d 65 00                                  |ntime.          |   "ntime"
0xa222:     4d 69                                              |Mi              |
0xa224:     73 62 65 68 61 76 69 6e  67 3a 20 25 73 20 28 25   |sbehaving: %s (%|   "sbehaving: %s (%d -> %d)\n"
0xa234:     64 20 2d 3e 20 25 64 29  0a 00                     |d -> %d)..      |
0xa23e:     63 73 5f 6d 61 70 52 65  6c 61 79 00               |cs_mapRelay.    |   "cs_mapRelay"
0xa24a:     70 6e 6f 64 65 2d 3e 63  73 5f 66 69 6c 74 65 72   |pnode->cs_filter|   "pnode->cs_filter"
0xa25a:     00                                                 |.               |
0xa25b:     6e 65 74 2e 68 00                                  |net.h.          |   "net.h"
0xa261:     63 73 5f 69 6e 76 65 6e  74 6f 72 79 00            |cs_inventory.   |   "cs_inventory"
0xa26e:     2d 64 72 6f 70 6d 65 73  73 61 67 65 73 74 65 73   |-dropmessagestes|   "-dropmessagestest"
0xa27e:     74 00                                              |t.              |
0xa280:     28 25 64 20 62 79 74 65  73 29 0a 00               |(%d bytes)..    |   "(%d bytes)\n"
0xa28c:     73 73 53 65 6e 64 2e 73  69 7a 65 28 29 20 3d 3d   |ssSend.size() ==|
0xa29c:     20 30 00 76                                        | 0.v            |
0xa2a0:     65 72 73 69 6f 6e 00                               |ersion.         |   "ersion"
0xa2a7:     73 65 6e 64 69 6e 67 3a  20 25 73 20 00 2d 6d 61   |sending: %s .-ma|
0xa2b7:     78 73 65 6e 64 62 75 66  66 65 72 00               |xsendbuffer.    |
0xa2c3:     31 32 37 2e 30 2e 30 2e  31 00                     |127.0.0.1.      |   "127.0.0.1"
0xa2cd:     6c 6f 00 6c 6f 30 00 49  50 76 34 20 25 73 3a 20   |lo.lo0.IPv4 %s: |
0xa2dd:     25 73 0a 00 49 50 76 36  20 25 73 3a 20 25 73 0a   |%s..IPv6 %s: %s.|
0xa2ed:     00 65 78 74 2d 69 70 00                            |.ext-ip.        |
0xa2f5:     2d 64 6e 73 73 65 65 64  00                        |-dnsseed.       |   "-dnsseed"
0xa2fe:     44 4e 53 20 73 65 65 64  69 6e 67 20 64 69 73 61   |DNS seeding disa|   "DNS seeding disabled\n"
0xa30e:     62 6c 65 64 0a 00                                  |bled..          |
0xa314:     64 6e 73 73 65 65 64 00                            |dnsseed.        |   "dnsseed"
0xa31c:     2d 75 70 6e 70 00                                  |-upnp.          |   "-upnp"
0xa322:     6e 65 74 00 61 64                                  |net.ad          |
0xa328:     64 63 6f 6e 00                                     |dcon.           |   "dcon"
0xa32d:     6f 70 65                                           |ope             |
0xa330:     6e 63 6f 6e 00                                     |ncon.           |   "ncon"
0xa335:     6d 73 67                                           |msg             |
0xa338:     68 61 6e 64 00                                     |hand.           |   "hand"
0xa33d:     64 75 6d 70 61 64 64 72  00 63 6f 6e 6e 65 63 74   |dumpaddr.connect|
0xa34d:     65 64 20 25 73 0a 00                               |ed %s..         |
0xa354:     2d 63 6f 6e 6e 65 63 74  00                        |-connect.       |   "-connect"
0xa35d:     63 73 5f 76 41 64 64 65  64 4e 6f 64 65 73 00      |cs_vAddedNodes. |   "cs_vAddedNodes"
0xa36c:     2d 61 64 64 6e 6f 64 65  00                        |-addnode.       |   "-addnode"
0xa375:     63 73 5f 73 65 74 73 65  72 76 41 64 64 4e 6f 64   |cs_setservAddNod|   "cs_setservAddNodeAddresses"
0xa385:     65 41 64 64 72 65 73 73  65 73 00                  |eAddresses.     |
0xa390:     5f 73 68 61 72 65 64 5f  73 74 61 74 65 2e 75 6e   |_shared_state.un|   "_shared_state.unique()"
0xa3a0:     69 71 75 65 28 29 00                               |ique().         |
0xa3a7:     69 74 20 21 3d 20 5f 6c  69 73 74 2e 65 6e 64 28   |it != _list.end(|   "it != _list.end()"
0xa3b7:     29 00                                              |).              |
0xa3b9:     6d 61 70 5f 69 74 20 21  3d 20 5f 67 72 6f 75 70   |map_it != _group|   "map_it != _group_map.end()"
0xa3c9:     5f 6d 61 70 2e 65 6e 64  28 29 00                  |_map.end().     |
0xa3d4:     70 20 3d 3d 20 30 20 7c  7c 20 70 20 21 3d 20 70   |p == 0 || p != p|
0xa3e4:     78 00                                              |x.              |
0xa3e6:     6d 65 6d 62 65 72 73 5f  2e 63 61 70 61 63 69 74   |members_.capacit|   "members_.capacity_ >= N"
0xa3f6:     79 5f 20 3e 3d 20 4e 00                            |y_ >= N.        |
0xa3fe:     73 69 7a 65 5f 20 3c 3d  20 6d 65 6d 62 65 72 73   |size_ <= members|   "size_ <= members_.capacity_"
0xa40e:     5f 2e 63 61 70 61 63 69  74 79 5f 00               |_.capacity_.    |
0xa41a:     6d 65 6d 62 65 72 73 5f  2e 63 61 70 61 63 69 74   |members_.capacit|   "members_.capacity_ >= n"
0xa42a:     79 5f 20 3e 3d 20 6e 00                            |y_ >= n.        |
0xa432:     25 73 0a 00 42 6f 75 6e  64 20 74 6f 20 25 73 0a   |%s..Bound to %s.|
0xa442:     00                                                 |.               |
0xa443:     6e 52 65 66 43 6f 75 6e  74 20 3e 3d 20 30 00      |nRefCount >= 0. |   "nRefCount >= 0"
0xa452:     70 6e 6f 64 65 2d 3e 63  73 5f 76 53 65 6e 64 00   |pnode->cs_vSend.|   "pnode->cs_vSend"
0xa462:     70 6e 6f 64 65 2d 3e 63  73 5f 76 52 65 63 76 4d   |pnode->cs_vRecvM|   "pnode->cs_vRecvMsg"
0xa472:     73 67 00                                           |sg.             |
0xa475:     70 6e 6f 64 65 2d 3e 63  73 5f 69 6e 76 65 6e 74   |pnode->cs_invent|   "pnode->cs_inventory"
0xa485:     6f 72 79 00                                        |ory.            |
0xa489:     2d 6d 61 78 72 65 63 65  69 76 65 62 75 66 66 65   |-maxreceivebuffe|   "-maxreceivebuffer"
0xa499:     72 00                                              |r.              |
0xa49b:     73 6f 63 6b 65 74 20 73  65 6c 65 63 74 20 65 72   |socket select er|
0xa4ab:     72 6f 72 20 25 64 0a 00  61 63 63 65 70 74 65 64   |ror %d..accepted|
0xa4bb:     20 63 6f 6e 6e 65 63 74  69 6f 6e 20 25 73 0a 00   | connection %s..|
0xa4cb:     73 6f 63 6b 65 74 20 72  65 63 76 20 65 72 72 6f   |socket recv erro|
0xa4db:     72 20 25 64 0a 00 73 6f  63 6b 65 74 20 6e 6f 74   |r %d..socket not|
0xa4eb:     20 73 65 6e 64 69 6e 67  0a 00 73 6f 63 6b 65 74   | sending..socket|
0xa4fb:     20 69 6e 61 63 74 69 76  69 74 79 20 74 69 6d 65   | inactivity time|
0xa50b:     6f 75 74 0a 00 83                                  |out...          |
; section: .gcc_except_table
0xb72c:     ff ff 01 08 38 03 79 00  74 17 00 00 ff 00 41 01   |....8.y.t.....A.|
0xb73c:     2b 3e 05 00 00 4d 05 c7  01 00 5d 17 9e 01 05 bb   |+>...M....].....|
0xb74c:     01 05 d9 01 00 c0 01 05  c7 01 00 d4 01 05 00 00   |................|
0xb75c:     f1 01 05 9d 02 00 93 02  0a a6 02 00 03 00 02 7d   |...............}|
0xb76c:     01 7d 00 00 00 00 00 00  00 00 00 00 7c 14 03 00   |.}..........|...|
0xb77c:     ff 00 15 01 0d 2b 05 5a  01 75 05 7a 00 84 01 05   |.....+.Z.u.z....|
0xb78c:     00 00 01 00 00 00 00 00  ff ff 01 0d 1c 05 00 00   |................|
0xb79c:     38 03 7c 00 89 01 05 00  00 ff ff 01 0e 1c 05 00   |8.|.............|
0xb7ac:     00 45 03 89 01 00 9e 01  05 00 00 ff ff 01 0e 1c   |.E..............|
0xb7bc:     05 00 00 45 03 89 01 00  9e 01 05 00 00 00 00 00   |...E............|
0xb7cc:     ff 00 29 01 1c 70 29 ff  01 01 a3 01 05 d7 01 03   |..)..p).........|
0xb7dc:     cb 01 05 ff 01 01 f5 01  05 82 02 05 8a 02 0a 00   |................|
0xb7ec:     00 01 00 00 7d 7f 00 00  00 00 00 00 00 ff ff 01   |....}...........|
0xb7fc:     13 1c 05 00 00 36 05 af  01 00 51 03 95 01 00 aa   |.....6....Q.....|
0xb80c:     01 05 00 00 ff ff 01 13  1c 05 00 00 36 05 b5 01   |............6...|
0xb81c:     00 57 03 9b 01 00 b0 01  05 00 00 ff ff 01 13 1c   |.W..............|
0xb82c:     05 00 00 36 05 b5 01 00  57 03 9b 01 00 b0 01 05   |...6....W.......|
0xb83c:     00 00 ff ff 01 13 1c 05  00 00 36 05 b5 01 00 57   |..........6....W|
0xb84c:     03 9b 01 00 b0 01 05 00  00 ff ff 01 13 1c 05 00   |................|
0xb85c:     00 36 05 b5 01 00 57 03  9b 01 00 b0 01 05 00 00   |.6....W.........|
0xb86c:     ff 00 0d 01 08 26 03 56  01 5e 0a 00 00 7f 00 00   |.....&.V.^......|
0xb87c:     00 ff ff 01 0c 21 05 67  00 2c 05 00 00 7d 05 00   |.....!.g.,...}..|
0xb88c:     00 ff ff 01 0c 21 05 67  00 2c 05 00 00 7d 05 00   |.....!.g.,...}..|
0xb89c:     00 ff ff 01 0c 21 05 67  00 2c 05 00 00 7d 05 00   |.....!.g.,...}..|
0xb8ac:     00 ff ff 01 0c 21 05 67  00 2c 05 00 00 7d 05 00   |.....!.g.,...}..|
0xb8bc:     00 ff ff 01 0c 32 05 00  00 3e 05 6f 00 7c 05 00   |.....2...>.o.|..|
0xb8cc:     00 ff ff 01 0e 1f 25 00  00 4f 05 82 01 00 8f 01   |......%..O......|
0xb8dc:     05 00 00 ff ff 01 19 47  03 a7 02 00 5e 13 89 02   |.......G....^...|
0xb8ec:     00 7e 3b a7 02 00 c6 01  03 00 00 a2 02 05 00 00   |.~;.............|
0xb8fc:     ff ff 01 0f 2c 05 93 01  00 47 03 81 01 00 8e 01   |....,....G......|
0xb90c:     17 00 00 ff ff 01 08 2a  05 5b 00 56 17 00 00 ff   |.......*.[.V....|
0xb91c:     ff 01 15 39 05 c5 01 00  79 05 8e 02 00 a0 01 05   |...9....y.......|
0xb92c:     e3 01 00 c0 01 23 00 00  ff ff 01 13 68 05 00 00   |.....#......h...|
0xb93c:     74 05 a3 01 00 7c 05 81  01 00 9e 01 05 00 00 ff   |t....|..........|
0xb94c:     ff 01 08 2b 05 47 00 5a  05 00 00 ff ff 01 0f 2c   |...+.G.Z.......,|
0xb95c:     05 99 01 00 4d 03 87 01  00 94 01 17 00 00 ff ff   |....M...........|
0xb96c:     01 08 2a 05 5b 00 56 17  00 00 ff ff 01 15 2e 05   |..*.[.V.........|
0xb97c:     b6 01 00 6a 05 f3 01 00  91 01 05 c8 01 00 b1 01   |...j............|
0xb98c:     17 00 00 ff ff 01 10 27  05 00 00 37 05 58 00 53   |.......'...7.X.S|
0xb99c:     05 70 00 6b 1d 00 00 ff  ff 01 09 3b 03 75 00 82   |.p.k.......;.u..|
0xb9ac:     01 05 00 00 ff ff 01 08  2a 05 5b 00 56 17 00 00   |........*.[.V...|
0xb9bc:     ff ff 01 10 65 05 b1 01  00 8c 01 05 d1 01 00 ac   |....e...........|
0xb9cc:     01 25 00 00 ff ff 01 11  af 01 05 b4 01 00 c7 01   |.%..............|
0xb9dc:     05 00 00 e3 01 05 e8 01  00 ff ff 01 29 db 03 05   |............)...|
0xb9ec:     fc 03 00 f7 03 05 bf 04  00 ba 04 05 00 00 88 05   |................|
0xb9fc:     05 8d 05 00 b5 05 05 ba  05 00 db 05 05 e0 05 00   |................|
0xba0c:     90 06 05 95 06 00 00 00  ff 00 41 01 36 32 38 00   |..........A.628.|
0xba1c:     00 73 05 df 03 00 7d 05  d1 03 00 b6 01 05 e3 03   |.s....}.........|
0xba2c:     01 a0 02 05 a5 03 00 a8  02 05 c2 03 00 d7 02 24   |...............$|
0xba3c:     00 00 95 03 03 f8 03 00  bd 03 05 00 00 f0 03 08   |................|
0xba4c:     88 04 00 01 00 00 00 00  00 00 00 00 ff ff 01 09   |................|
0xba5c:     3b 03 75 00 82 01 05 00  00 ff ff 01 08 2a 05 5b   |;.u..........*.[|
0xba6c:     00 56 17 00 00 ff ff 01  10 65 05 b1 01 00 8c 01   |.V.......e......|
0xba7c:     05 d1 01 00 ac 01 25 00  00 ff ff 01 0b f6 01 05   |......%.........|
0xba8c:     fb 01 00 88 02 05 00 00  ff ff 01 0b 81 01 05 86   |................|
0xba9c:     01 00 93 01 05 00 00 ff  ff 01 0b ca 01 05 cf 01   |................|
0xbaac:     00 dc 01 05 00 00 00 00  ff 00 2d 01 23 9a 01 05   |..........-.#...|
0xbabc:     82 05 00 f3 02 05 fa 04  00 90 03 03 c3 04 00 d6   |................|
0xbacc:     03 05 a9 04 01 be 04 05  f1 04 00 ec 04 05 00 00   |................|
0xbadc:     01 00 00 00 00 00 00 00  ff ff 01 0e 55 05 5a 00   |............U.Z.|
0xbaec:     6d 05 00 00 8a 01 05 8f  01 00 ff ff 01 42 1b 05   |m............B..|
0xbafc:     00 00 78 05 f8 06 00 85  01 05 f1 06 00 aa 03 05   |..x.............|
0xbb0c:     af 03 00 d6 03 05 00 00  97 04 05 9c 04 00 bf 04   |................|
0xbb1c:     05 c4 04 00 d1 04 05 00  00 d5 05 05 da 05 00 fe   |................|
0xbb2c:     05 05 83 06 00 ae 06 05  b3 06 00 c8 06 05 00 00   |................|
0xbb3c:     ff ff 01 15 24 4b 00 00  93 01 05 cd 01 00 c8 01   |....$K..........|
0xbb4c:     05 ec 01 00 e2 01 05 00  00 ff ff 01 0e 28 05 85   |.............(..|
0xbb5c:     01 00 48 05 00 00 95 01  05 00 00 ff ff 01 0a 4f   |..H............O|
0xbb6c:     05 cc 01 00 dd 01 05 00  00 ff ff 01 0a 58 05 b7   |.............X..|
0xbb7c:     01 00 cc 01 05 00 00 ff  ff 01 0f 57 05 00 00 b5   |...........W....|
0xbb8c:     01 05 f7 01 00 84 02 05  00 00 ff ff 01 0f 57 05   |..............W.|
0xbb9c:     00 00 a9 01 05 eb 01 00  f8 01 05 00 00 ff ff 01   |................|
0xbbac:     0e 19 3d 00 00 71 05 96  01 00 a3 01 05 00 00 ff   |..=..q..........|
0xbbbc:     ff 01 0e 44 05 00 00 4c  05 88 01 00 95 01 05 00   |...D...L........|
0xbbcc:     00 ff ff 01 0f 77 05 00  00 b5 01 35 ce 02 00 df   |.....w.....5....|
0xbbdc:     02 05 00 00 ff ff 01 0e  46 05 00 00 73 27 c9 01   |........F...s'..|
0xbbec:     00 d6 01 05 00 00 ff ff  01 0f 62 05 00 00 93 01   |..........b.....|
0xbbfc:     58 81 02 00 8e 02 05 00  00 00 00 00 ff 00 39 01   |X.............9.|
0xbc0c:     2f 6d 05 00 00 7c 05 8b  04 01 8d 02 65 00 00 ab   |/m...|......e...|
0xbc1c:     03 05 e9 03 01 86 04 05  00 00 a1 04 05 ab 04 00   |................|
0xbc2c:     a6 04 05 ba 04 00 b5 04  05 00 00 c4 04 05 00 00   |................|
0xbc3c:     01 00 00 00 00 00 00 00  ff 00 49 01 41 46 05 00   |..........I.AF..|
0xbc4c:     00 52 05 e7 03 00 74 05  d3 03 00 7e 05 c5 03 00   |.R....t....~....|
0xbc5c:     b3 01 05 b0 03 01 9d 02  05 86 04 00 a5 02 05 f7   |................|
0xbc6c:     03 00 b1 02 05 eb 03 00  d1 02 05 00 00 f5 02 03   |................|
0xbc7c:     ff 02 00 ab 03 05 00 00  bd 03 08 d7 03 00 01 00   |................|
0xbc8c:     00 00 00 00 ff ff 01 0f  2c 05 99 01 00 4d 03 87   |........,....M..|
0xbc9c:     01 00 94 01 17 00 00 ff  ff 01 08 2a 05 5b 00 56   |...........*.[.V|
0xbcac:     17 00 00 ff ff 01 15 39  05 c5 01 00 79 05 8e 02   |.......9....y...|
0xbcbc:     00 a0 01 05 e3 01 00 c0  01 23 00 00 ff 00 45 01   |.........#....E.|
0xbccc:     3a a0 06 05 00 00 f8 06  05 bc 09 03 a4 07 05 a9   |:...............|
0xbcdc:     07 01 b5 07 05 00 00 df  07 05 8d 0a 03 8b 08 05   |................|
0xbcec:     a9 07 01 b5 08 05 92 0a  03 e1 08 05 a9 07 01 8b   |................|
0xbcfc:     09 05 e1 09 03 b7 09 05  a9 07 01 01 00 00 7d 00   |..............}.|
0xbd0c:     00 00 00 00 ff ff 01 10  4c 05 00 00 bd 01 c0 03   |........L.......|
0xbd1c:     84 05 00 95 05 05 00 00  ff ff 01 0b b3 01 05 e5   |................|
0xbd2c:     01 00 f2 01 05 00 00 ff  ff 01 0b 9b 01 05 cb 01   |................|
0xbd3c:     00 d8 01 05 00 00 ff ff  01 0b 9b 01 05 cb 01 00   |................|
0xbd4c:     d8 01 05 00 00 ff ff 01  0b 9b 01 05 cb 01 00 d8   |................|
0xbd5c:     01 05 00 00 ff 00 25 01  1a 49 05 00 00 6f 05 de   |......%..I...o..|
0xbd6c:     01 01 ef 01 05 f9 01 03  9f 02 05 a4 02 00 ae 02   |................|
0xbd7c:     05 00 00 01 00 00 7d 00  00 00 00 00 ff ff 01 0a   |......}.........|
0xbd8c:     6e 05 a1 01 00 ae 01 05  00 00 00 00 ff 00 25 01   |n.............%.|
0xbd9c:     1a 49 05 00 00 6f 05 de  01 01 fc 01 05 86 02 03   |.I...o..........|
0xbdac:     ac 02 05 b1 02 00 bb 02  05 00 00 01 00 00 7d 00   |..............}.|
0xbdbc:     00 00 00 00 ff 00 25 01  1a 44 05 00 00 67 05 d3   |......%..D...g..|
0xbdcc:     01 01 f1 01 05 fb 01 03  a1 02 05 a6 02 00 b0 02   |................|
0xbddc:     05 00 00 01 00 00 7d 00  00 00 00 00 ff ff 01 3e   |......}........>|
0xbdec:     5b 05 e6 03 00 7b 05 00  00 d3 01 05 95 04 00 f3   |[....{..........|
0xbdfc:     01 05 00 00 ab 02 05 80  04 00 cb 02 05 00 00 9b   |................|
0xbe0c:     03 05 d1 03 00 bb 03 05  00 00 e1 03 05 00 00 f6   |................|
0xbe1c:     03 05 00 00 90 04 05 00  00 a5 04 05 00 00 ff ff   |................|
0xbe2c:     01 0f 44 4e 00 00 d1 02  05 e9 03 00 d3 03 28 00   |..DN..........(.|
0xbe3c:     00 ff ff 01 0a 6e 05 a1  01 00 ae 01 05 00 00 ff   |.....n..........|
0xbe4c:     ff 01 21 25 05 ec 07 00  ab 04 05 ad 09 00 eb 05   |..!%............|
0xbe5c:     05 9c 09 00 8b 06 05 00  00 c1 06 05 d2 06 00 be   |................|
0xbe6c:     07 05 00 00 ff 00 25 01  1a 44 05 00 00 67 05 d6   |......%..D...g..|
0xbe7c:     01 01 f4 01 05 fe 01 03  a4 02 05 a9 02 00 b3 02   |................|
0xbe8c:     05 00 00 01 00 00 7d 00  00 00 00 00 ff 00 25 01   |......}.......%.|
0xbe9c:     1a 40 05 00 00 67 05 c1  01 01 df 01 05 e9 01 03   |.@...g..........|
0xbeac:     8f 02 05 94 02 00 9e 02  05 00 00 01 00 00 7d 00   |..............}.|
0xbebc:     00 00 00 00 ff ff 01 0f  5c 0f b5 01 00 86 01 05   |........\.......|
0xbecc:     00 00 c6 01 05 00 00 ff  ff 01 0d 24 05 83 01 00   |...........$....|
0xbedc:     2f 05 75 00 7e 05 00 00  ff ff 01 0c 24 05 6c 00   |/.u.~.......$.l.|
0xbeec:     2f 05 5e 00 67 05 00 00  ff ff 01 0c 24 05 64 00   |/.^.g.......$.d.|
0xbefc:     2f 05 56 00 5f 05 00 00  ff ff 01 0c 24 05 6c 00   |/.V._.......$.l.|
0xbf0c:     2f 05 5e 00 67 05 00 00  ff ff 01 0f 5c 0f b5 01   |/.^.g.......\...|
0xbf1c:     00 86 01 05 00 00 c6 01  05 00 00 ff ff 01 0d 24   |...............$|
0xbf2c:     05 83 01 00 2f 05 75 00  7e 05 00 00 ff ff 01 0c   |..../.u.~.......|
0xbf3c:     24 05 64 00 2f 05 56 00  5f 05 00 00 ff ff 01 0c   |$.d./.V._.......|
0xbf4c:     24 05 6c 00 2f 05 5e 00  67 05 00 00 ff ff 01 0c   |$.l./.^.g.......|
0xbf5c:     24 05 6c 00 2f 05 5e 00  67 05 00 00 ff ff 01 1e   |$.l./.^.g.......|
0xbf6c:     25 05 c7 01 00 30 05 a8  01 00 4c 05 93 01 00 57   |%....0....L....W|
0xbf7c:     05 85 01 00 8e 01 05 00  00 c2 01 05 00 00 00 00   |................|
0xbf8c:     ff 00 1d 01 15 4f 05 00  00 eb 01 05 ef 02 01 ff   |.....O..........|
0xbf9c:     02 05 84 03 00 8e 03 05  00 00 01 00 00 00 00 00   |................|
0xbfac:     ff 00 25 01 1a 48 05 00  00 b3 01 05 9c 03 01 ff   |..%..H..........|
0xbfbc:     02 05 00 00 ac 03 05 b1  03 00 bb 03 05 00 00 01   |................|
0xbfcc:     00 00 00 00 00 00 00 00  ff ff 01 0f 2c 05 99 01   |............,...|
0xbfdc:     00 4d 03 87 01 00 94 01  17 00 00 ff ff 01 08 2a   |.M.............*|
0xbfec:     05 5b 00 56 17 00 00 ff  ff 01 15 2e 05 b6 01 00   |.[.V............|
0xbffc:     6a 05 f3 01 00 91 01 05  c8 01 00 b1 01 17 00 00   |j...............|
0xc00c:     ff ff 01 10 27 05 00 00  37 05 58 00 53 05 70 00   |....'...7.X.S.p.|
0xc01c:     6b 1d 00 00 ff ff 01 0f  2c 05 99 01 00 4d 03 87   |k.......,....M..|
0xc02c:     01 00 94 01 17 00 00 ff  ff 01 08 2a 05 5b 00 56   |...........*.[.V|
0xc03c:     17 00 00 ff ff 01 15 2e  05 b6 01 00 6a 05 f3 01   |............j...|
0xc04c:     00 91 01 05 c8 01 00 b1  01 17 00 00 ff ff 01 10   |................|
0xc05c:     27 05 00 00 37 05 58 00  53 05 70 00 6b 1d 00 00   |'...7.X.S.p.k...|
0xc06c:     ff ff 01 16 58 f9 05 00  00 d8 06 05 9a 08 00 e8   |....X...........|
0xc07c:     06 05 b2 07 00 c9 07 51  00 00 00 00 ff 00 3d 01   |.......Q......=.|
0xc08c:     29 3e 05 00 00 4d 15 78  00 6f 07 8e 01 05 89 01   |)>...M.x.o......|
0xc09c:     05 00 00 ab 01 05 85 02  00 b0 01 05 78 00 e9 01   |............x...|
0xc0ac:     0a f8 01 00 a4 02 05 b0  02 00 03 00 02 7d 01 7d   |.............}.}|
0xc0bc:     00 00 00 00 00 00 00 00  7c 14 03 00 ff ff 01 56   |........|......V|
0xc0cc:     37 19 00 00 62 05 84 08  00 b3 01 05 00 00 cb 01   |7...b...........|
0xc0dc:     b7 01 e6 07 00 89 03 05  d8 07 00 be 03 46 e6 07   |.............F..|
0xc0ec:     00 8b 04 05 bc 07 00 cc  04 05 e6 07 00 d8 04 05   |................|
0xc0fc:     f6 07 00 8e 05 15 e6 07  00 bd 05 05 f8 07 00 cd   |................|
0xc10c:     05 e0 01 e6 07 00 d3 07  05 00 00 e1 07 15 e6 07   |................|
0xc11c:     00 91 08 05 00 00 ff ff  01 0e 1f 11 00 00 3b 34   |..............;4|
0xc12c:     99 01 00 a6 01 05 00 00  ff ff 01 10 19 99 01 00   |................|
0xc13c:     00 de 01 05 e3 01 00 f0  01 05 00 00 ff 00 25 01   |..............%.|
0xc14c:     19 4c 05 00 00 63 05 bc  02 03 75 05 97 02 03 b7   |.L...c....u.....|
0xc15c:     02 05 be 02 00 c8 02 05  00 00 01 00 00 7d 00 00   |.............}..|
0xc16c:     00 00 00 00 ff ff 01 17  df 01 05 87 03 00 f3 01   |................|
0xc17c:     05 d9 02 00 8f 02 05 f3  02 00 ee 02 05 00 00 00   |................|
0xc18c:     ff 00 21 01 19 3e 05 00  00 54 05 ba 01 01 ab 01   |..!..>...T......|
0xc19c:     05 00 00 d0 01 05 d5 01  00 df 01 05 00 00 01 00   |................|
0xc1ac:     00 00 00 00 ff ff 01 0e  44 05 00 00 66 4a b7 01   |........D...fJ..|
0xc1bc:     00 c4 01 05 00 00 ff ff  01 2c 19 4b 00 00 67 05   |.........,.K..g.|
0xc1cc:     d9 07 00 8e 01 05 00 00  8a 02 85 03 d5 07 00 c6   |................|
0xc1dc:     05 05 95 07 00 9f 06 31  d5 07 00 f2 06 05 c7 07   |.......1........|
0xc1ec:     00 c2 07 29 00 00 ff ff  01 25 2a 43 00 00 83 01   |...).....%*C....|
0xc1fc:     05 fd 02 00 bf 01 05 00  00 cf 01 41 eb 02 00 98   |...........A....|
0xc20c:     02 05 00 00 d9 02 05 eb  02 00 f8 02 17 00 00 00   |................|
0xc21c:     ff 00 39 01 2e 19 28 00  00 7b cb 01 87 05 00 e6   |..9...(..{......|
0xc22c:     02 29 ae 05 00 a3 03 93  01 9d 05 03 bf 04 21 87   |.)............!.|
0xc23c:     05 00 98 05 05 00 00 cf  05 16 87 05 00 9a 06 32   |...............2|
0xc24c:     cc 06 00 00 00 01 7d 00  7c 14 03 00 ff ff 01 0e   |......}.|.......|
0xc25c:     1e 3a 00 00 6a 05 8e 01  00 82 01 1e 00 00 ff ff   |.:..j...........|
0xc26c:     01 0f 49 05 00 00 7b ce  01 8c 03 00 dc 02 42 00   |..I...{.......B.|
0xc27c:     00 ff ff 01 3c 3b 39 00  00 87 01 05 95 05 00 be   |....<;9.........|
0xc28c:     01 05 00 00 dd 01 05 e9  05 00 9e 02 29 00 00 de   |............)...|
0xc29c:     02 05 bd 05 00 92 03 05  00 00 b9 03 05 d3 05 00   |................|
0xc2ac:     f9 03 05 00 00 89 04 28  a7 05 00 c5 04 b6 01 00   |.......(........|
0xc2bc:     00 00 00 00 ff 00 2d 01  20 43 05 00 00 85 01 05   |......-. C......|
0xc2cc:     ca 04 01 be 02 05 9c 04  03 8b 04 05 00 00 c5 04   |................|
0xc2dc:     05 d5 04 00 df 04 05 00  00 01 00 00 7d 00 00 00   |............}...|
0xc2ec:     00 00 00 00 ff ff 01 38  c9 01 05 96 09 00 94 03   |.......8........|
0xc2fc:     05 92 09 00 e0 04 05 f3  08 00 99 06 05 dd 08 00   |................|
0xc30c:     b9 06 44 00 00 81 08 05  ac 09 00 ad 08 05 92 09   |..D.............|
0xc31c:     00 ee 08 05 00 00 8d 09  05 00 00 a7 09 05 00 00   |................|
0xc32c:     ff 00 39 01 2c 4a 05 00  00 67 05 93 03 03 a4 01   |..9.,J...g......|
0xc33c:     05 db 03 03 db 01 05 b5  03 01 a3 03 05 ed 03 00   |................|
0xc34c:     b0 03 05 db 03 03 d6 03  05 fc 03 03 f7 03 05 00   |................|
0xc35c:     00 01 00 00 7d 00 00 00  00 00 00 00 ff ff 01 23   |....}..........#|
0xc36c:     f3 01 05 de 04 00 b9 02  05 9c 04 00 d6 02 05 ba   |................|
0xc37c:     04 00 f6 02 05 ce 04 00  97 04 05 9c 04 00 b5 04   |................|
0xc38c:     05 00 00 ff ff 01 69 50  39 00 00 b1 01 87 01 a9   |......iP9.......|
0xc39c:     15 00 c6 05 05 d6 16 00  88 08 05 d2 16 00 c0 09   |................|
0xc3ac:     05 a1 16 00 e3 09 05 d2  16 00 8b 0a 05 d6 16 00   |................|
0xc3bc:     ad 0a 12 a9 15 00 86 0e  05 00 00 a3 0f 05 f6 15   |................|
0xc3cc:     00 c9 0f 58 f2 15 00 d3  10 25 f0 15 00 bc 12 05   |...X.....%......|
0xc3dc:     f2 15 00 f3 12 25 bf 15  00 b9 14 05 f0 15 00 db   |.....%..........|
0xc3ec:     14 05 bf 15 00 ba 15 36  00 00 97 16 05 a9 15 00   |.......6........|
0xc3fc:     ff ff 01 0f 74 73 af 02  00 fc 01 05 00 00 bc 02   |....ts..........|
0xc40c:     05 00 00 00 ff 00 19 01  11 4a a0 01 ea 01 01 8b   |.........J......|
0xc41c:     02 05 95 02 00 9f 02 05  00 00 01 00 00 00 00 00   |................|
0xc42c:     ff 00 25 01 1a 34 05 00  00 90 01 05 9f 02 01 8b   |..%..4..........|
0xc43c:     02 05 00 00 de 02 05 e8  02 00 f2 02 05 00 00 01   |................|
0xc44c:     00 00 00 00 00 00 00 00  ff 00 21 01 19 3a 05 00   |..........!..:..|
0xc45c:     00 6a 05 88 02 01 fb 01  05 00 00 9e 02 05 a8 02   |.j..............|
0xc46c:     00 b2 02 05 00 00 01 00  00 00 00 00 ff ff 01 1c   |................|
0xc47c:     73 05 00 00 ac 03 d0 03  f1 0f 00 b1 07 05 00 00   |s...............|
0xc48c:     c0 08 97 07 f1 0f 00 fe  0f 05 00 00 ff ff 01 22   |..............."|
0xc49c:     37 05 80 0a 00 fd 01 05  ba 09 00 8d 02 30 f4 09   |7............0..|
0xc4ac:     00 86 04 66 00 00 ed 05  05 89 0a 00 8a 06 c6 03   |...f............|
0xc4bc:     00 00 00 00 ff 00 49 01  41 2d e5 01 00 00 ac 02   |......I.A-......|
0xc4cc:     05 89 12 00 ce 02 05 95  12 00 86 03 05 da 11 00   |................|
0xc4dc:     e2 03 05 d6 11 00 b7 04  05 dc 10 01 a9 05 e5 06   |................|
0xc4ec:     8d 12 01 e8 0c 05 00 00  97 0d f9 02 8d 12 01 f7   |................|
0xc4fc:     10 0a a5 11 00 c7 11 3d  00 00 01 00 00 00 00 00   |.......=........|
0xc50c:     ff ff 01 85 01 ba 02 05  99 1c 00 ff 03 05 98 1b   |................|
0xc51c:     00 fd 04 05 91 1b 00 e0  05 05 a0 1c 00 f8 05 05   |................|
0xc52c:     80 1b 00 ac 0a 05 c1 1b  00 d8 0c fb 01 bd 1b 00   |................|
0xc53c:     e7 0e 05 9f 1b 00 a1 0f  c0 02 bd 1b 00 f4 11 05   |................|
0xc54c:     c5 1a 00 97 13 05 bd 1b  00 cb 14 05 f6 16 00 f0   |................|
0xc55c:     14 05 a1 17 00 ac 15 05  a3 18 00 ec 15 05 cf 17   |................|
0xc56c:     00 ec 16 05 bd 1b 00 9c  17 05 00 00 c1 19 05 bd   |................|
0xc57c:     1b 00 e2 19 05 e7 19 00  8c 1a 05 91 1a 00 bb 1a   |................|
0xc58c:     05 c0 1a 00 94 1c 05 a7  1c 00 00 00 ff 00 e0 01   |................|
0xc59c:     01 d7 01 6b 05 00 00 7b  05 82 14 00 cb 01 27 00   |...k...{......'.|
0xc5ac:     00 fd 01 10 95 14 00 d3  02 d8 01 00 00 b2 04 05   |................|
0xc5bc:     ce 13 00 c0 04 05 d5 13  00 ca 04 05 dc 13 00 8d   |................|
0xc5cc:     05 05 ed 13 01 84 06 05  92 11 00 8c 06 05 96 11   |................|
0xc5dc:     00 98 06 05 a5 11 00 b8  06 f5 01 00 00 b2 08 05   |................|
0xc5ec:     bc 13 00 f4 08 05 f3 11  01 ef 09 05 a1 12 00 fe   |................|
0xc5fc:     09 05 88 12 00 86 0a af  02 00 00 bc 0c 05 d0 12   |................|
0xc60c:     00 c8 0d 05 b4 12 00 ea  0d 30 00 00 b6 0e 05 80   |.........0......|
0xc61c:     11 00 d2 0e 30 00 00 9e  0f 05 da 11 00 bc 0f 03   |....0...........|
0xc62c:     cc 10 00 96 10 05 9b 10  00 b2 10 05 00 00 bd 10   |................|
0xc63c:     03 b2 11 00 fb 10 17 00  00 d5 11 1e 00 00 80 12   |................|
0xc64c:     08 a5 12 00 9c 12 05 00  00 af 12 21 00 00 f4 12   |...........!....|
0xc65c:     05 9e 13 00 99 13 05 b7  13 00 c9 13 05 00 00 fa   |................|
0xc66c:     13 08 87 14 00 a2 14 05  00 00 01 00 00 00 00 00   |................|
0xc67c:     ff ff 01 39 aa 01 05 83  0a 00 cb 01 73 00 00 d9   |...9........s...|
0xc68c:     02 05 e1 09 00 fd 02 05  e7 09 00 a6 03 36 00 00   |.............6..|
0xc69c:     e3 03 05 e3 09 00 d4 04  05 b5 09 00 a1 05 b7 03   |................|
0xc6ac:     00 00 a6 09 05 cf 09 00  ca 09 17 00 00 ff ff 01   |................|
0xc6bc:     33 50 21 00 00 74 05 b6  05 00 d3 01 05 b4 05 00   |3P!..t..........|
0xc6cc:     82 02 05 b2 05 00 b9 02  05 ac 05 00 d1 02 05 aa   |................|
0xc6dc:     05 00 ee 02 05 a8 05 00  f6 02 05 fc 04 00 f0 03   |................|
0xc6ec:     dd 01 00 00 ff ff 01 34  69 05 ef 04 00 8a 01 05   |.......4i.......|
0xc6fc:     f3 04 00 c3 01 05 ef 04  00 bb 02 05 97 05 00 d8   |................|
0xc70c:     02 05 ef 04 00 fb 03 05  97 05 00 83 04 05 81 05   |................|
0xc71c:     00 c9 04 05 ce 04 00 e5  04 05 00 00 ff 00 cc 01   |................|
0xc72c:     01 c1 01 36 05 89 01 00  8e 01 99 01 00 00 f3 03   |...6............|
0xc73c:     05 84 09 00 d4 04 05 bd  08 00 8e 05 05 a2 09 01   |................|
0xc74c:     cb 05 05 8f 09 00 8f 07  05 00 00 9b 07 52 f2 08   |.............R..|
0xc75c:     00 a0 08 4d 00 00 ed 08  05 bd 08 00 ff 08 73 00   |...M..........s.|
0xc76c:     00 c6 0a 05 c4 11 00 ee  0a 2e e7 1a 00 9a 0c da   |................|
0xc77c:     01 99 1b 00 8b 0e 05 8e  17 00 a0 0f 47 99 1b 00   |............G...|
0xc78c:     93 11 05 f4 11 00 a3 11  05 dd 11 00 d8 11 05 00   |................|
0xc79c:     00 84 12 05 a1 17 00 a2  12 05 e8 16 00 de 12 05   |................|
0xc7ac:     99 1b 00 cf 14 05 a5 16  00 95 15 58 99 1b 00 e3   |...........X....|
0xc7bc:     16 05 00 00 f7 17 05 a0  1b 00 a8 18 05 b9 18 00   |................|
0xc7cc:     b4 18 05 cb 18 00 c6 18  05 00 00 f0 18 9a 01 e7   |................|
0xc7dc:     1a 00 bd 1a 05 83 1b 00  d3 1b 05 e7 1a 00 f7 1b   |................|
0xc7ec:     05 89 1c 00 01 00 00 00  00 00 00 00 ff 00 d0 01   |................|
0xc7fc:     01 c5 01 4f 05 00 00 6a  05 81 14 00 7a 15 a8 14   |...O...j....z...|
0xc80c:     00 9f 01 05 00 00 8c 02  05 fa 14 00 ab 02 05 fd   |................|
0xc81c:     12 00 be 02 05 93 14 01  fe 02 05 fa 14 00 c7 03   |................|
0xc82c:     05 e5 14 00 89 04 19 b1  05 00 cc 05 05 00 00 ed   |................|
0xc83c:     05 05 f7 05 00 b1 06 05  f5 14 00 c5 06 05 fa 14   |................|
0xc84c:     00 c4 07 05 87 13 00 df  07 05 c0 0f 00 f2 07 05   |................|
0xc85c:     b6 14 01 c6 08 05 95 13  00 ea 08 46 8e 13 00 84   |...........F....|
0xc86c:     0a 05 e5 0f 01 c6 0b 05  8e 13 00 e7 0b 05 fa 0f   |................|
0xc87c:     00 cf 0c 05 95 13 00 e7  0d 05 ab 13 00 ee 0e 40   |...............@|
0xc88c:     aa 12 00 f5 0f 05 a5 10  00 cf 10 05 9c 13 00 d7   |................|
0xc89c:     12 05 f0 13 00 f8 12 05  85 15 00 82 13 05 e5 0f   |................|
0xc8ac:     01 c9 13 05 95 13 00 8e  14 05 00 00 a3 14 05 cb   |................|
0xc8bc:     14 00 c6 14 05 d7 14 00  01 00 00 00 00 00 00 00   |................|
0xc8cc:     ff ff 01 0c 1e 05 65 00  29 05 00 00 7b 05 00 00   |......e.)...{...|
0xc8dc:     ff ff 01 0c 1e 05 65 00  29 05 00 00 7b 05 00 00   |......e.)...{...|
0xc8ec:     ff ff 01 12 2b 03 00 00  3f 03 9a 01 00 58 03 00   |....+...?....X..|
0xc8fc:     00 af 01 05 00 00 00 00  ff 00 1d 01 14 26 05 00   |.............&..|
0xc90c:     00 69 69 f5 01 01 8d 02  05 97 02 00 a1 02 05 00   |.ii.............|
0xc91c:     00 01 00 00 00 00 00 00  ff 00 19 01 10 5c 05 a7   |.............\..|
0xc92c:     01 01 bb 01 05 c5 01 00  cf 01 05 00 00 01 00 00   |................|
0xc93c:     00 00 00 00 ff ff 01 0c  1e 05 65 00 29 05 00 00   |..........e.)...|
0xc94c:     7b 05 00 00 ff 00 1d 01  15 26 05 00 00 87 01 7d   |{........&.....}|
0xc95c:     ac 02 01 c4 02 05 c9 02  00 d3 02 05 00 00 01 00   |................|
0xc96c:     00 00 00 00 ff ff 01 15  37 05 c5 02 00 a4 01 05   |........7.......|
0xc97c:     80 03 00 d2 02 05 00 00  8d 03 05 00 00 00 00 00   |................|
0xc98c:     ff 00 4d 01 42 4e 05 82  03 00 5c 05 9e 04 00 6a   |..M.BN....\....j|
0xc99c:     05 92 04 00 7f 05 f8 03  01 a5 01 05 f4 03 00 bd   |................|
0xc9ac:     01 05 ba 03 01 ec 01 05  a5 03 01 ba 02 05 00 00   |................|
0xc9bc:     8f 03 05 00 00 b0 03 0a  cf 03 00 ca 03 05 d8 03   |................|
0xc9cc:     00 88 04 0a a2 04 00 01  00 00 00 00 00 00 00 00   |................|
0xc9dc:     ff 00 1d 01 15 26 05 00  00 87 01 7d ac 02 01 c4   |.....&.....}....|
0xc9ec:     02 05 c9 02 00 d3 02 05  00 00 01 00 00 00 00 00   |................|
0xc9fc:     ff ff 01 15 37 05 c5 02  00 a4 01 05 80 03 00 d2   |....7...........|
0xca0c:     02 05 00 00 8d 03 05 00  00 00 00 00 ff 00 4d 01   |..............M.|
0xca1c:     42 4e 05 82 03 00 5c 05  9e 04 00 6a 05 92 04 00   |BN....\....j....|
0xca2c:     7f 05 f8 03 01 a5 01 05  f4 03 00 bd 01 05 ba 03   |................|
0xca3c:     01 ec 01 05 a5 03 01 ba  02 05 00 00 8f 03 05 00   |................|
0xca4c:     00 b0 03 0a cf 03 00 ca  03 05 d8 03 00 88 04 0a   |................|
0xca5c:     a2 04 00 01 00 00 00 00  00 00 00 00 ff 00 41 01   |..............A.|
0xca6c:     37 22 05 f5 02 00 3c 05  d7 02 00 52 05 c2 02 01   |7"....<....R....|
0xca7c:     85 01 05 ba 02 00 9f 01  05 88 02 00 b5 01 05 f3   |................|
0xca8c:     01 01 fe 01 0a b1 02 00  ac 02 05 00 00 cd 02 0a   |................|
0xca9c:     f7 02 00 f0 02 05 00 00  01 00 00 00 00 00 00 00   |................|
0xcaac:     ff ff 01 0c 1e 05 65 00  29 05 00 00 7b 05 00 00   |......e.)...{...|
0xcabc:     ff ff 01 16 90 01 ab 04  00 00 ac 06 03 d5 09 00   |................|
0xcacc:     a0 08 05 00 00 e2 09 05  00 00 00 00 ff 00 1d 01   |................|
0xcadc:     15 26 05 00 00 87 01 7d  ac 02 01 c4 02 05 c9 02   |.&.....}........|
0xcaec:     00 d3 02 05 00 00 01 00  00 00 00 00 ff 00 2d 01   |..............-.|
0xcafc:     25 32 05 00 00 57 05 ec  03 00 ce 01 05 d0 04 00   |%2...W..........|
0xcb0c:     98 03 05 93 04 01 89 04  05 00 00 a2 04 0a e0 04   |................|
0xcb1c:     00 ea 04 05 00 00 01 00  00 00 00 00 ff 00 2d 01   |..............-.|
0xcb2c:     23 9a 01 05 93 03 00 ac  01 05 a9 03 00 d0 01 05   |#...............|
0xcb3c:     fe 02 01 89 02 37 93 03  00 89 03 0a b5 03 00 a4   |.....7..........|
0xcb4c:     03 05 00 00 01 00 00 00  00 00 00 00 ff ff 01 16   |................|
0xcb5c:     9e 01 03 00 00 a1 02 05  e2 08 00 c7 02 f0 04 00   |................|
0xcb6c:     00 f0 08 05 00 00 00 00  ff 00 1d 01 15 26 05 00   |.............&..|
0xcb7c:     00 87 01 7d ac 02 01 c4  02 05 c9 02 00 d3 02 05   |...}............|
0xcb8c:     00 00 01 00 00 00 00 00  ff 00 2d 01 25 32 05 00   |..........-.%2..|
0xcb9c:     00 57 05 ec 03 00 ce 01  05 d0 04 00 98 03 05 93   |.W..............|
0xcbac:     04 01 89 04 05 00 00 a2  04 0a e0 04 00 ea 04 05   |................|
0xcbbc:     00 00 01 00 00 00 00 00  ff 00 2d 01 23 9a 01 05   |..........-.#...|
0xcbcc:     93 03 00 ac 01 05 a9 03  00 d0 01 05 fe 02 01 89   |................|
0xcbdc:     02 37 93 03 00 89 03 0a  b5 03 00 a4 03 05 00 00   |.7..............|
0xcbec:     01 00 00 00 00 00 00 00  ff ff 01 16 9e 01 03 00   |................|
0xcbfc:     00 a1 02 05 e2 08 00 c7  02 f0 04 00 00 f0 08 05   |................|
0xcc0c:     00 00 00 00 ff 00 3d 01  35 9a 01 05 8d 04 00 a8   |......=.5.......|
0xcc1c:     01 05 91 04 00 b8 01 05  e3 03 00 d2 01 05 95 04   |................|
0xcc2c:     01 a4 02 05 ce 03 01 dd  02 37 8d 04 00 d9 03 0a   |.........7......|
0xcc3c:     ae 04 00 88 04 05 00 00  a4 04 0a b7 04 00 01 00   |................|
0xcc4c:     00 00 00 00 ff ff 01 16  9e 01 03 00 00 a1 02 05   |................|
0xcc5c:     e2 08 00 c7 02 f0 04 00  00 f0 08 05 00 00 00 00   |................|
0xcc6c:     ff 00 3d 01 35 9a 01 05  8d 04 00 a8 01 05 91 04   |..=.5...........|
0xcc7c:     00 b8 01 05 e3 03 00 d2  01 05 95 04 01 a4 02 05   |................|
0xcc8c:     ce 03 01 dd 02 37 8d 04  00 d9 03 0a ae 04 00 88   |.....7..........|
0xcc9c:     04 05 00 00 a4 04 0a b7  04 00 01 00 00 00 00 00   |................|
0xccac:     ff 00 25 01 1a 46 05 00  00 ac 01 03 ca 02 01 c5   |..%..F..........|
0xccbc:     02 05 00 00 dd 02 0f ec  02 00 8a 03 05 00 00 01   |................|
0xcccc:     00 00 00 00 00 00 00 00  ff ff 01 2c 51 03 00 00   |...........,Q...|
0xccdc:     a3 01 05 92 05 00 ab 01  5b ba 05 00 c7 02 05 92   |........[.......|
0xccec:     05 00 db 02 05 ba 05 00  a5 03 3e 00 00 d3 04 05   |..........>.....|
0xccfc:     ba 05 00 ab 05 05 00 00  ff ff 01 2c 51 03 00 00   |...........,Q...|
0xcd0c:     a3 01 05 92 05 00 ab 01  5b ba 05 00 c7 02 05 92   |........[.......|
0xcd1c:     05 00 db 02 05 ba 05 00  a5 03 3e 00 00 d3 04 05   |..........>.....|
0xcd2c:     ba 05 00 ab 05 05 00 00  ff ff 01 3d 46 03 00 00   |...........=F...|
0xcd3c:     a1 02 05 b4 07 00 e7 02  29 de 07 00 97 03 05 b4   |........).......|
0xcd4c:     07 00 e9 03 03 00 00 e3  04 49 b4 07 00 b8 05 03   |.........I......|
0xcd5c:     ca 07 00 d8 05 03 b4 07  00 f6 05 03 00 00 bf 06   |................|
0xcd6c:     42 b4 07 00 c5 07 05 00  00 ff ff 01 49 49 03 00   |B...........II..|
0xcd7c:     00 9e 02 05 f1 08 00 e8  02 29 e3 08 00 94 03 05   |.........)......|
0xcd8c:     f1 08 00 e6 03 03 00 00  db 04 49 f1 08 00 b0 05   |..........I.....|
0xcd9c:     03 f5 08 00 d0 05 03 f1  08 00 ee 05 03 00 00 e9   |................|
0xcdac:     06 24 f1 08 00 99 07 03  99 08 00 de 07 05 f1 08   |.$..............|
0xcdbc:     00 ba 08 05 00 00 00 00  ff 00 b4 01 01 a7 01 cd   |................|
0xcdcc:     01 05 bc 17 00 80 03 52  f4 17 00 d7 04 05 85 17   |.......R........|
0xcddc:     03 98 05 03 ef 17 00 d3  06 05 95 17 00 ae 07 03   |................|
0xcdec:     fd 16 05 ce 07 05 83 14  05 f5 08 05 bc 17 00 ab   |................|
0xcdfc:     09 05 85 17 03 83 0a 03  95 17 00 95 0a 03 ab 16   |................|
0xce0c:     00 be 0a 8d 01 95 17 00  a4 0c 32 8e 16 00 d9 0c   |..........2.....|
0xce1c:     05 95 17 00 b7 0d 03 ef  17 00 f9 0d 05 83 14 05   |................|
0xce2c:     9d 0e 03 95 17 00 af 0e  03 e6 16 00 c5 0f 05 95   |................|
0xce3c:     17 00 de 10 05 00 00 98  11 03 ef 17 00 a2 12 05   |................|
0xce4c:     ba 15 00 cb 12 05 f8 15  00 a5 13 05 95 17 00 f7   |................|
0xce5c:     14 05 00 00 a6 15 14 be  15 03 af 17 05 fd 16 05   |................|
0xce6c:     b7 17 05 d2 17 05 00 00  01 7d 01 7d 20 13 03 00   |.........}.} ...|
0xce7c:     ff ff 01 0e 3f 05 00 00  62 52 df 01 00 ec 01 05   |....?...bR......|
0xce8c:     00 00 ff ff 01 71 3e 41  00 00 a1 01 05 ee 09 00   |.....q>A........|
0xce9c:     b0 01 05 e2 09 00 d4 01  e4 01 00 00 ca 03 05 b7   |................|
0xceac:     09 00 9f 04 58 00 00 81  05 05 c9 09 00 b7 05 05   |....X...........|
0xcebc:     00 00 d6 05 05 db 09 00  85 06 05 b3 09 00 94 06   |................|
0xcecc:     05 8d 09 00 92 07 05 00  00 a1 07 05 df 09 00 bb   |................|
0xcedc:     07 05 00 00 da 07 05 8c  0a 00 fd 07 05 f2 09 00   |................|
0xceec:     8c 08 05 90 0a 00 d2 08  05 00 00 e1 08 05 9c 0a   |................|
0xcefc:     00 fe 08 8e 01 00 00 00  ff 00 79 01 6b d1 01 05   |..........y.k...|
0xcf0c:     d5 0e 00 fe 02 de 01 c4  0e 00 b1 05 05 85 0e 00   |................|
0xcf1c:     b9 05 64 f6 0f 00 e7 06  05 85 0e 00 fb 06 05 f6   |..d.............|
0xcf2c:     0f 00 bf 07 03 c4 0e 00  eb 08 05 00 00 a4 09 03   |................|
0xcf3c:     c4 0e 00 9b 0a 05 f6 0f  00 87 0b 03 da 0c 05 c4   |................|
0xcf4c:     0b 05 f6 0b 00 9c 0c 05  00 00 b0 0c 05 ba 0c 00   |................|
0xcf5c:     96 0d 05 da 0c 05 a5 0d  05 aa 0d 05 f1 0d 14 fd   |................|
0xcf6c:     0f 03 cb 0f 05 d5 0e 00  00 00 01 7d 01 7d 00 00   |...........}.}..|
0xcf7c:     20 13 03 00 ff ff 01 f4  01 5e 05 00 00 8f 01 05   | ........^......|
0xcf8c:     fe 0c 00 86 04 31 fa 0c  00 8f 05 05 c5 0c 00 86   |.....1..........|
0xcf9c:     07 05 c1 0c 00 c9 07 05  bd 0c 00 94 08 05 fc 0b   |................|
0xcfac:     00 ec 09 77 00 00 e1 0b  05 c1 0c 00 b8 0c 05 00   |...w............|
0xcfbc:     00 f5 0c 05 fe 0c 00 9e  0d 05 c7 0d 00 95 0e 05   |................|
0xcfcc:     00 00 c2 0e 05 a9 26 00  8a 0f 8b 01 a5 26 00 b6   |......&......&..|
0xcfdc:     10 bb 01 87 26 00 8b 12  05 b5 26 00 83 13 f9 02   |....&.....&.....|
0xcfec:     00 00 a3 16 37 eb 24 00  8b 17 20 00 00 be 17 05   |....7.$... .....|
0xcffc:     81 24 00 d2 17 2a 00 00  d4 18 05 de 26 00 eb 18   |.$...*......&...|
0xd00c:     05 c8 26 00 a2 19 05 00  00 ba 19 05 9d 25 00 e4   |..&..........%..|
0xd01c:     19 05 00 00 f0 19 05 e5  26 00 a1 1a 05 f4 25 00   |........&.....%.|
0xd02c:     f9 1a 50 00 00 b4 1c 05  de 26 00 dd 1c 31 b8 24   |..P......&...1.$|
0xd03c:     00 c9 1d b5 02 de 26 00  8b 20 05 93 24 00 ab 20   |......&.. ..$.. |
0xd04c:     7d de 26 00 f5 21 0d b8  24 00 92 22 28 de 26 00   |}.&..!..$.."(.&.|
0xd05c:     cf 22 05 b8 24 00 88 23  68 de 26 00 8e 24 2a 00   |."..$..#h.&..$*.|
0xd06c:     00 e1 24 05 84 25 00 ff  24 97 02 00 00 00 00 00   |..$..%..$.......|
0xd07c:     ff 00 7d 01 70 da 01 05  84 0f 00 87 03 43 ce 11   |..}.p........C..|
0xd08c:     00 89 05 03 f9 0d 00 e1  05 05 89 11 00 e9 05 64   |...............d|
0xd09c:     a6 11 00 97 07 05 89 11  00 ab 07 05 a6 11 00 ef   |................|
0xd0ac:     07 03 f9 0d 00 9b 09 05  00 00 dc 09 03 f9 0d 00   |................|
0xd0bc:     d3 0a 05 a6 11 00 d6 0b  03 86 0c 05 e3 0c 05 00   |................|
0xd0cc:     00 99 0d 14 cb 0d 03 b7  0d 05 86 0c 05 c6 0d 05   |................|
0xd0dc:     dd 0d 05 cc 0e 05 ad 10  00 fa 0e 05 c6 10 00 82   |................|
0xd0ec:     10 05 84 0f 00 00 00 01  7d 01 7d 00 20 13 03 00   |........}.}. ...|
0xd0fc:     ff 00 98 01 01 88 01 d8  01 05 94 16 00 96 03 46   |...............F|
0xd10c:     aa 16 00 fd 04 03 af 16  00 eb 06 05 f3 15 00 d9   |................|
0xd11c:     07 03 f8 14 05 cd 08 05  94 16 00 83 0a 31 f3 15   |.............1..|
0xd12c:     00 c3 0a 03 f3 12 00 e8  0a 03 f3 15 00 c4 0b 32   |...............2|
0xd13c:     8e 14 00 f9 0b 05 f3 15  00 d7 0c 03 af 16 00 ef   |................|
0xd14c:     0d 27 f3 15 00 a5 0e 03  b5 14 00 d0 0f 05 00 00   |.'..............|
0xd15c:     8a 10 03 af 16 00 92 11  05 d3 14 00 bb 11 05 9f   |................|
0xd16c:     14 00 95 12 05 f3 15 00  e5 13 05 00 00 e4 14 05   |................|
0xd17c:     f8 14 05 f3 14 05 98 15  05 d9 15 1a fa 15 03 00   |................|
0xd18c:     00 01 7d 01 7d 00 00 00  20 13 03 00 ff ff 01 36   |..}.}... ......6|
0xd19c:     7a 05 88 08 00 8e 01 05  9b 08 00 fc 01 85 01 88   |z...............|
0xd1ac:     08 00 9f 03 05 ab 08 00  bd 03 34 88 08 00 9c 04   |..........4.....|
0xd1bc:     05 a9 08 00 b8 04 80 01  88 08 00 cb 05 05 ab 08   |................|
0xd1cc:     00 96 08 05 00 00 ff ff  01 41 17 88 02 00 00 a8   |.........A......|
0xd1dc:     03 05 e2 11 00 bf 03 05  a2 12 00 f1 03 05 a0 12   |................|
0xd1ec:     00 9b 04 05 ef 11 00 fb  04 05 e9 11 00 a9 05 05   |................|
0xd1fc:     a9 11 00 ff 05 05 b4 10  00 ff 06 cb 07 00 00 f0   |................|
0xd20c:     0f 05 b4 10 00 88 10 a1  01 00 00 ??               |...........?    |
; section: .rodata.str1.4
0xd488:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/pthread_mutex_scoped_lock.hpp"
0xd498:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0xd4a8:     64 2f 70 74 68 72 65 61  64 5f 6d 75 74 65 78 5f   |d/pthread_mutex_|
0xd4b8:     73 63 6f 70 65 64 5f 6c  6f 63 6b 2e 68 70 70 00   |scoped_lock.hpp.|
0xd4c8:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/mutex.hpp"
0xd4d8:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0xd4e8:     64 2f 6d 75 74 65 78 2e  68 70 70 00               |d/mutex.hpp.    |
0xd4f4:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/condition_variable_fwd.hpp"
0xd504:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0xd514:     64 2f 63 6f 6e 64 69 74  69 6f 6e 5f 76 61 72 69   |d/condition_vari|
0xd524:     61 62 6c 65 5f 66 77 64  2e 68 70 70 00            |able_fwd.hpp.   |
0xd531:     00 00 00                                           |...             |
0xd534:     21 70 74 68 72 65 61 64  5f 6d 75 74 65 78 5f 64   |!pthread_mutex_d|   "!pthread_mutex_destroy(&internal_mutex)"
0xd544:     65 73 74 72 6f 79 28 26  69 6e 74 65 72 6e 61 6c   |estroy(&internal|
0xd554:     5f 6d 75 74 65 78 29 00                            |_mutex).        |
0xd55c:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/condition_variable.hpp"
0xd56c:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0xd57c:     64 2f 63 6f 6e 64 69 74  69 6f 6e 5f 76 61 72 69   |d/condition_vari|
0xd58c:     61 62 6c 65 2e 68 70 70  00                        |able.hpp.       |
0xd595:     00 00 00                                           |...             |
0xd598:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/thread/pthread/recursive_mutex.hpp"
0xd5a8:     73 74 2f 74 68 72 65 61  64 2f 70 74 68 72 65 61   |st/thread/pthrea|
0xd5b8:     64 2f 72 65 63 75 72 73  69 76 65 5f 6d 75 74 65   |d/recursive_mute|
0xd5c8:     78 2e 68 70 70 00                                  |x.hpp.          |
0xd5ce:     00 00                                              |..              |
0xd5d0:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/shared_ptr.hpp"
0xd5e0:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 68 61   |st/smart_ptr/sha|
0xd5f0:     72 65 64 5f 70 74 72 2e  68 70 70 00               |red_ptr.hpp.    |
0xd5fc:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/variant/detail/visitation_impl.hpp"
0xd60c:     73 74 2f 76 61 72 69 61  6e 74 2f 64 65 74 61 69   |st/variant/detai|
0xd61c:     6c 2f 76 69 73 69 74 61  74 69 6f 6e 5f 69 6d 70   |l/visitation_imp|
0xd62c:     6c 2e 68 70 70 00                                  |l.hpp.          |
0xd632:     00 00                                              |..              |
0xd634:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/auto_buffer.hpp"
0xd644:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0xd654:     69 6c 2f 61 75 74 6f 5f  62 75 66 66 65 72 2e 68   |il/auto_buffer.h|
0xd664:     70 70 00                                           |pp.             |
0xd667:     00                                                 |.               |
0xd668:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/optional/optional.hpp"
0xd678:     73 74 2f 6f 70 74 69 6f  6e 61 6c 2f 6f 70 74 69   |st/optional/opti|
0xd688:     6f 6e 61 6c 2e 68 70 70  00                        |onal.hpp.       |
0xd691:     00 00 00 63 6f 75 6c 64  20 6e 6f 74 20 63 6f 6e   |...could not con|
0xd6a1:     76 65 72 74 20 63 61 6c  65 6e 64 61 72 20 74 69   |vert calendar ti|
0xd6b1:     6d 65 20 74 6f 20 55 54  43 20 74 69 6d 65 00      |me to UTC time. |
0xd6c0:     44 61 79 20 6f 66 20 6d  6f 6e 74 68 20 76 61 6c   |Day of month val|   "Day of month value is out of range 1..31"
0xd6d0:     75 65 20 69 73 20 6f 75  74 20 6f 66 20 72 61 6e   |ue is out of ran|
0xd6e0:     67 65 20 31 2e 2e 33 31  00                        |ge 1..31.       |
0xd6e9:     00 00 00 2f 75 73 72 2f  69 6e 63 6c 75 64 65 2f   |.../usr/include/|
0xd6f9:     62 6f 6f 73 74 2f 74 68  72 65 61 64 2f 70 74 68   |boost/thread/pth|
0xd709:     72 65 61 64 2f 74 68 72  65 61 64 5f 64 61 74 61   |read/thread_data|
0xd719:     2e 68 70 70 00 00 00 21  70 74 68 72 65 61 64 5f   |.hpp...!pthread_|
0xd729:     63 6f 6e 64 5f 62 72 6f  61 64 63 61 73 74 28 26   |cond_broadcast(&|
0xd739:     63 6f 6e 64 29 00 00                               |cond)..         |
0xd740:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/exception/detail/exception_ptr.hpp"
0xd750:     73 74 2f 65 78 63 65 70  74 69 6f 6e 2f 64 65 74   |st/exception/det|
0xd760:     61 69 6c 2f 65 78 63 65  70 74 69 6f 6e 5f 70 74   |ail/exception_pt|
0xd770:     72 2e 68 70 70 00                                  |r.hpp.          |
0xd776:     00 00 43 44 61 74 61 53  74 72 65 61 6d 3a 3a 72   |..CDataStream::r|
0xd786:     65 61 64 28 29 20 3a 20  65 6e 64 20 6f 66 20 64   |ead() : end of d|
0xd796:     61 74 61 00 00 00 63 6c  6f 73 65 73 6f 63 6b 65   |ata...closesocke|
0xd7a6:     74 28 68 4c 69 73 74 65  6e 53 6f 63 6b 65 74 29   |t(hListenSocket)|
0xd7b6:     20 66 61 69 6c 65 64 20  77 69 74 68 20 65 72 72   | failed with err|
0xd7c6:     6f 72 20 25 64 0a 00 00  00 00                     |or %d.....      |
0xd7d0:     64 61 74 61 2e 73 69 7a  65 28 29 20 3e 20 70 6e   |data.size() > pn|   "data.size() > pnode->nSendOffset"
0xd7e0:     6f 64 65 2d 3e 6e 53 65  6e 64 4f 66 66 73 65 74   |ode->nSendOffset|
0xd7f0:     00                                                 |.               |
0xd7f1:     00 00 00                                           |...             |
0xd7f4:     59 65 61 72 20 69 73 20  6f 75 74 20 6f 66 20 76   |Year is out of v|   "Year is out of valid range: 1400..10000"
0xd804:     61 6c 69 64 20 72 61 6e  67 65 3a 20 31 34 30 30   |alid range: 1400|
0xd814:     2e 2e 31 30 30 30 30 00                            |..10000.        |
0xd81c:     4d 6f 6e 74 68 20 6e 75  6d 62 65 72 20 69 73 20   |Month number is |   "Month number is out of range 1..12"
0xd82c:     6f 75 74 20 6f 66 20 72  61 6e 67 65 20 31 2e 2e   |out of range 1..|
0xd83c:     31 32 00                                           |12.             |
0xd83f:     00                                                 |.               |
0xd840:     44 61 79 20 6f 66 20 6d  6f 6e 74 68 20 69 73 20   |Day of month is |   "Day of month is not valid for year"
0xd850:     6e 6f 74 20 76 61 6c 69  64 20 66 6f 72 20 79 65   |not valid for ye|
0xd860:     61 72 00                                           |ar.             |
0xd863:     00 47 65 74 4d 79 45 78  74 65 72 6e 61 6c 49 50   |.GetMyExternalIP|
0xd873:     28 29 20 3a 20 63 6f 6e  6e 65 63 74 69 6f 6e 20   |() : connection |
0xd883:     74 6f 20 25 73 20 66 61  69 6c 65 64 00 47 65 74   |to %s failed.Get|
0xd893:     4d 79 45 78 74 65 72 6e  61 6c 49 50 28 29 20 72   |MyExternalIP() r|
0xd8a3:     65 63 65 69 76 65 64 20  5b 25 73 5d 20 25 73 0a   |eceived [%s] %s.|
0xd8b3:     00                                                 |.               |
0xd8b4:     47 65 74 4d 79 45 78 74  65 72 6e 61 6c 49 50 28   |GetMyExternalIP(|   "GetMyExternalIP() : connection closed"
0xd8c4:     29 20 3a 20 63 6f 6e 6e  65 63 74 69 6f 6e 20 63   |) : connection c|
0xd8d4:     6c 6f 73 65 64 00                                  |losed.          |
0xd8da:     00 00                                              |..              |
0xd8dc:     47 45 54 20 2f 20 48 54  54 50 2f 31 2e 31 0d 0a   |GET / HTTP/1.1..|   "GET / HTTP/1.1\r\nHost: checkip.dyndns.org\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)\r\nConnection: close\r\n\r\n"
0xd8ec:     48 6f 73 74 3a 20 63 68  65 63 6b 69 70 2e 64 79   |Host: checkip.dy|
0xd8fc:     6e 64 6e 73 2e 6f 72 67  0d 0a 55 73 65 72 2d 41   |ndns.org..User-A|
0xd90c:     67 65 6e 74 3a 20 4d 6f  7a 69 6c 6c 61 2f 34 2e   |gent: Mozilla/4.|
0xd91c:     30 20 28 63 6f 6d 70 61  74 69 62 6c 65 3b 20 4d   |0 (compatible; M|
0xd92c:     53 49 45 20 37 2e 30 3b  20 57 69 6e 64 6f 77 73   |SIE 7.0; Windows|
0xd93c:     20 4e 54 20 35 2e 31 29  0d 0a 43 6f 6e 6e 65 63   | NT 5.1)..Connec|
0xd94c:     74 69 6f 6e 3a 20 63 6c  6f 73 65 0d 0a 0d 0a 00   |tion: close.....|
0xd95c:     47 45 54 20 2f 73 69 6d  70 6c 65 2f 20 48 54 54   |GET /simple/ HTT|
0xd96c:     50 2f 31 2e 31 0d 0a 48  6f 73 74 3a 20 77 77 77   |P/1.1..Host: www|
0xd97c:     2e 73 68 6f 77 6d 79 69  70 2e 63 6f 6d 0d 0a 55   |.showmyip.com..U|
0xd98c:     73 65 72 2d 41 67 65 6e  74 3a 20 4d 6f 7a 69 6c   |ser-Agent: Mozil|
0xd99c:     6c 61 2f 34 2e 30 20 28  63 6f 6d 70 61 74 69 62   |la/4.0 (compatib|
0xd9ac:     6c 65 3b 20 4d 53 49 45  20 37 2e 30 3b 20 57 69   |le; MSIE 7.0; Wi|
0xd9bc:     6e 64 6f 77 73 20 4e 54  20 35 2e 31 29 0d 0a 43   |ndows NT 5.1)..C|
0xd9cc:     6f 6e 6e 65 63 74 69 6f  6e 3a 20 63 6c 6f 73 65   |onnection: close|
0xd9dc:     0d 0a 0d 0a 00 00 00 00  46 6c 75 73 68 65 64 20   |........Flushed |
0xd9ec:     25 64 20 61 64 64 72 65  73 73 65 73 20 74 6f 20   |%d addresses to |
0xd9fc:     70 65 65 72 73 2e 64 61  74 20 20 25 6c 6c 64 6d   |peers.dat  %lldm|
0xda0c:     73 0a 00 00 4c 6f 61 64  69 6e 67 20 61 64 64 72   |s...Loading addr|
0xda1c:     65 73 73 65 73 20 66 72  6f 6d 20 44 4e 53 20 73   |esses from DNS s|
0xda2c:     65 65 64 73 20 28 63 6f  75 6c 64 20 74 61 6b 65   |eeds (could take|
0xda3c:     20 61 20 77 68 69 6c 65  29 0a 00 00 41 64 64 65   | a while)...Adde|
0xda4c:     64 20 25 69 20 61 64 64  72 65 73 73 65 73 20 66   |d %i addresses f|
0xda5c:     72 6f 6d 20 25 73 3a 20  25 69 20 74 72 69 65 64   |rom %s: %i tried|
0xda6c:     2c 20 25 69 20 6e 65 77  0a 00 00 00 25 64 20 61   |, %i new....%d a|
0xda7c:     64 64 72 65 73 73 65 73  20 66 6f 75 6e 64 20 66   |ddresses found f|
0xda8c:     72 6f 6d 20 44 4e 53 20  73 65 65 64 73 0a 00 00   |rom DNS seeds...|
0xda9c:     55 50 6e 50 3a 20 47 65  74 45 78 74 65 72 6e 61   |UPnP: GetExterna|   "UPnP: GetExternalIPAddress() returned %d\n"
0xdaac:     6c 49 50 41 64 64 72 65  73 73 28 29 20 72 65 74   |lIPAddress() ret|
0xdabc:     75 72 6e 65 64 20 25 64  0a 00                     |urned %d..      |
0xdac6:     00 00 55 50 6e 50 3a 20  47 65 74 45 78 74 65 72   |..UPnP: GetExter|
0xdad6:     6e 61 6c 49 50 41 64 64  72 65 73 73 20 66 61 69   |nalIPAddress fai|
0xdae6:     6c 65 64 2e 0a 00 41 64  64 50 6f 72 74 4d 61 70   |led...AddPortMap|
0xdaf6:     70 69 6e 67 28 25 73 2c  20 25 73 2c 20 25 73 29   |ping(%s, %s, %s)|
0xdb06:     20 66 61 69 6c 65 64 20  77 69 74 68 20 63 6f 64   | failed with cod|
0xdb16:     65 20 25 64 20 28 25 73  29 0a 00 00 00 00 55 50   |e %d (%s).....UP|
0xdb26:     6e 50 20 50 6f 72 74 20  4d 61 70 70 69 6e 67 20   |nP Port Mapping |
0xdb36:     73 75 63 63 65 73 73 66  75 6c 2e 0a 00 00 55 50   |successful....UP|
0xdb46:     4e 50 5f 44 65 6c 65 74  65 50 6f 72 74 4d 61 70   |NP_DeletePortMap|
0xdb56:     70 69 6e 67 28 29 20 72  65 74 75 72 6e 65 64 20   |ping() returned |
0xdb66:     3a 20 25 64 0a 00 47 65  74 4d 79 45 78 74 65 72   |: %d..GetMyExter|
0xdb76:     6e 61 6c 49 50 28 29 20  72 65 74 75 72 6e 65 64   |nalIP() returned|
0xdb86:     20 25 73 0a 00 00 57 61  72 6e 69 6e 67 3a 20 4c   | %s...Warning: L|
0xdb96:     6f 63 61 6c 20 6e 6f 64  65 20 25 73 20 6d 69 73   |ocal node %s mis|
0xdba6:     62 65 68 61 76 69 6e 67  20 28 64 65 6c 74 61 3a   |behaving (delta:|
0xdbb6:     20 25 64 29 21 0a 00 00  00 00 4d 69 73 62 65 68   | %d)!.....Misbeh|
0xdbc6:     61 76 69 6e 67 3a 20 25  73 20 28 25 64 20 2d 3e   |aving: %s (%d ->|
0xdbd6:     20 25 64 29 20 44 49 53  43 4f 4e 4e 45 43 54 49   | %d) DISCONNECTI|
0xdbe6:     4e 47 0a 00 00 00                                  |NG....          |
0xdbec:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/smart_ptr/scoped_ptr.hpp"
0xdbfc:     73 74 2f 73 6d 61 72 74  5f 70 74 72 2f 73 63 6f   |st/smart_ptr/sco|
0xdc0c:     70 65 64 5f 70 74 72 2e  68 70 70 00               |ped_ptr.hpp.    |
0xdc18:     64 72 6f 70 6d 65 73 73  61 67 65 73 20 44 52 4f   |dropmessages DRO|
0xdc28:     50 50 49 4e 47 20 53 45  4e 44 20 4d 45 53 53 41   |PPING SEND MESSA|
0xdc38:     47 45 0a 00 73 73 53 65  6e 64 2e 73 69 7a 65 20   |GE..ssSend.size |
0xdc48:     28 29 20 3e 3d 20 43 4d  65 73 73 61 67 65 48 65   |() >= CMessageHe|
0xdc58:     61 64 65 72 3a 3a 43 48  45 43 4b 53 55 4d 5f 4f   |ader::CHECKSUM_O|
0xdc68:     46 46 53 45 54 20 2b 20  73 69 7a 65 6f 66 28 6e   |FFSET + sizeof(n|
0xdc78:     43 68 65 63 6b 73 75 6d  29 00 00 00 73 65 6e 64   |Checksum)...send|
0xdc88:     20 76 65 72 73 69 6f 6e  20 6d 65 73 73 61 67 65   | version message|
0xdc98:     3a 20 76 65 72 73 69 6f  6e 20 25 64 2c 20 62 6c   |: version %d, bl|
0xdca8:     6f 63 6b 73 3d 25 64 2c  20 75 73 3d 25 73 2c 20   |ocks=%d, us=%s, |
0xdcb8:     74 68 65 6d 3d 25 73 2c  20 70 65 65 72 3d 25 73   |them=%s, peer=%s|
0xdcc8:     0a 00 00 00                                        |....            |
0xdccc:     74 72 79 69 6e 67 20 63  6f 6e 6e 65 63 74 69 6f   |trying connectio|   "trying connection %s lastseen=%.1fhrs\n"
0xdcdc:     6e 20 25 73 20 6c 61 73  74 73 65 65 6e 3d 25 2e   |n %s lastseen=%.|
0xdcec:     31 66 68 72 73 0a 00                               |1fhrs..         |
0xdcf3:     00 43 6f 6e 6e 65 63 74  53 6f 63 6b 65 74 28 29   |.ConnectSocket()|
0xdd03:     20 3a 20 66 63 6e 74 6c  20 6e 6f 6e 2d 62 6c 6f   | : fcntl non-blo|
0xdd13:     63 6b 69 6e 67 20 73 65  74 74 69 6e 67 20 66 61   |cking setting fa|
0xdd23:     69 6c 65 64 2c 20 65 72  72 6f 72 20 25 64 0a 00   |iled, error %d..|
0xdd33:     00 41 64 64 69 6e 67 20  66 69 78 65 64 20 73 65   |.Adding fixed se|
0xdd43:     65 64 20 6e 6f 64 65 73  20 61 73 20 44 4e 53 20   |ed nodes as DNS |
0xdd53:     64 6f 65 73 6e 27 74 20  73 65 65 6d 20 74 6f 20   |doesn't seem to |
0xdd63:     62 65 20 61 76 61 69 6c  61 62 6c 65 2e 0a 00 00   |be available....|
0xdd73:     00                                                 |.               |
0xdd74:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/slot_groups.hpp"
0xdd84:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0xdd94:     69 6c 2f 73 6c 6f 74 5f  67 72 6f 75 70 73 2e 68   |il/slot_groups.h|
0xdda4:     70 70 00                                           |pp.             |
0xdda7:     00                                                 |.               |
0xdda8:     74 68 69 73 5f 6d 61 70  5f 69 74 20 21 3d 20 5f   |this_map_it != _|   "this_map_it != _group_map.end()"
0xddb8:     67 72 6f 75 70 5f 6d 61  70 2e 65 6e 64 28 29 00   |group_map.end().|
0xddc8:     2f 75 73 72 2f 69 6e 63  6c 75 64 65 2f 62 6f 6f   |/usr/include/boo|   "/usr/include/boost/signals2/detail/signal_template.hpp"
0xddd8:     73 74 2f 73 69 67 6e 61  6c 73 32 2f 64 65 74 61   |st/signals2/deta|
0xdde8:     69 6c 2f 73 69 67 6e 61  6c 5f 74 65 6d 70 6c 61   |il/signal_templa|
0xddf8:     74 65 2e 68 70 70 00                               |te.hpp.         |
0xddff:     00                                                 |.               |
0xde00:     77 65 61 6b 6c 79 5f 65  71 75 69 76 61 6c 65 6e   |weakly_equivalen|   "weakly_equivalent(map_it->first, key)"
0xde10:     74 28 6d 61 70 5f 69 74  2d 3e 66 69 72 73 74 2c   |t(map_it->first,|
0xde20:     20 6b 65 79 29 00                                  | key).          |
0xde26:     00 00 45 72 72 6f 72 3a  20 62 69 6e 64 20 61 64   |..Error: bind ad|
0xde36:     64 72 65 73 73 20 66 61  6d 69 6c 79 20 66 6f 72   |dress family for|
0xde46:     20 25 73 20 6e 6f 74 20  73 75 70 70 6f 72 74 65   | %s not supporte|
0xde56:     64 00 45 72 72 6f 72 3a  20 43 6f 75 6c 64 6e 27   |d.Error: Couldn'|
0xde66:     74 20 6f 70 65 6e 20 73  6f 63 6b 65 74 20 66 6f   |t open socket fo|
0xde76:     72 20 69 6e 63 6f 6d 69  6e 67 20 63 6f 6e 6e 65   |r incoming conne|
0xde86:     63 74 69 6f 6e 73 20 28  73 6f 63 6b 65 74 20 72   |ctions (socket r|
0xde96:     65 74 75 72 6e 65 64 20  65 72 72 6f 72 20 25 64   |eturned error %d|
0xdea6:     29 00 45 72 72 6f 72 3a  20 43 6f 75 6c 64 6e 27   |).Error: Couldn'|
0xdeb6:     74 20 73 65 74 20 70 72  6f 70 65 72 74 69 65 73   |t set properties|
0xdec6:     20 6f 6e 20 73 6f 63 6b  65 74 20 66 6f 72 20 69   | on socket for i|
0xded6:     6e 63 6f 6d 69 6e 67 20  63 6f 6e 6e 65 63 74 69   |ncoming connecti|
0xdee6:     6f 6e 73 20 28 65 72 72  6f 72 20 25 64 29 00 00   |ons (error %d)..|
0xdef6:     00 00 55 6e 61 62 6c 65  20 74 6f 20 62 69 6e 64   |..Unable to bind|
0xdf06:     20 74 6f 20 25 73 20 6f  6e 20 74 68 69 73 20 63   | to %s on this c|
0xdf16:     6f 6d 70 75 74 65 72 2e  20 50 61 72 61 6c 6c 65   |omputer. Paralle|
0xdf26:     6c 63 6f 69 6e 20 69 73  20 70 72 6f 62 61 62 6c   |lcoin is probabl|
0xdf36:     79 20 61 6c 72 65 61 64  79 20 72 75 6e 6e 69 6e   |y already runnin|
0xdf46:     67 2e 00 00 00 00 55 6e  61 62 6c 65 20 74 6f 20   |g.....Unable to |
0xdf56:     62 69 6e 64 20 74 6f 20  25 73 20 6f 6e 20 74 68   |bind to %s on th|
0xdf66:     69 73 20 63 6f 6d 70 75  74 65 72 20 28 62 69 6e   |is computer (bin|
0xdf76:     64 20 72 65 74 75 72 6e  65 64 20 65 72 72 6f 72   |d returned error|
0xdf86:     20 25 64 2c 20 25 73 29  00 00 45 72 72 6f 72 3a   | %d, %s)..Error:|
0xdf96:     20 4c 69 73 74 65 6e 69  6e 67 20 66 6f 72 20 69   | Listening for i|
0xdfa6:     6e 63 6f 6d 69 6e 67 20  63 6f 6e 6e 65 63 74 69   |ncoming connecti|
0xdfb6:     6f 6e 73 20 66 61 69 6c  65 64 20 28 6c 69 73 74   |ons failed (list|
0xdfc6:     65 6e 20 72 65 74 75 72  6e 65 64 20 65 72 72 6f   |en returned erro|
0xdfd6:     72 20 25 64 29 00 57 61  72 6e 69 6e 67 3a 20 55   |r %d).Warning: U|
0xdfe6:     6e 6b 6e 6f 77 6e 20 73  6f 63 6b 65 74 20 66 61   |nknown socket fa|
0xdff6:     6d 69 6c 79 0a 00 73 6f  63 6b 65 74 20 65 72 72   |mily..socket err|
0xe006:     6f 72 20 61 63 63 65 70  74 20 66 61 69 6c 65 64   |or accept failed|
0xe016:     3a 20 25 64 0a 00 63 6f  6e 6e 65 63 74 69 6f 6e   |: %d..connection|
0xe026:     20 66 72 6f 6d 20 25 73  20 64 72 6f 70 70 65 64   | from %s dropped|
0xe036:     20 28 62 61 6e 6e 65 64  29 0a 00 00 00 00 73 6f   | (banned).....so|
0xe046:     63 6b 65 74 20 6e 6f 20  6d 65 73 73 61 67 65 20   |cket no message |
0xe056:     69 6e 20 66 69 72 73 74  20 36 30 20 73 65 63 6f   |in first 60 seco|
0xe066:     6e 64 73 2c 20 25 64 20  25 64 0a 00 83            |nds, %d %d...   |
; section: .rodata._ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED2Ev
0x12890:    00 28 01 00 c8 27 01 00  c0 27 01 00 c0 27 01 00   |.(...'...'...'..|
0x128a0:    c0 27 01 00 c0 27 01 00  c0 27 01 00 c0 27 01 00   |.'...'...'...'..|
0x128b0:    c0 27 01 00 c0 27 01 00  c0 27 01 00 c0 27 01 00   |.'...'...'...'..|
0x128c0:    c0 27 01 00 c0 27 01 00  c0 27 01 00 c0 27 01 00   |.'...'...'...'..|
0x128d0:    c0 27 01 00 c0 27 01 00  c0 27 01 00 c0 27 01 00   |.'...'...'...'..|
0x128e0:    53                                                 |S               |
; section: .rodata._ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_24expired_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_
0x1beec:    68 be 01 00 38 be 01 00  30 be 01 00 30 be 01 00   |h...8...0...0...|
0x1befc:    30 be 01 00 30 be 01 00  30 be 01 00 30 be 01 00   |0...0...0...0...|
0x1bf0c:    30 be 01 00 30 be 01 00  30 be 01 00 30 be 01 00   |0...0...0...0...|
0x1bf1c:    30 be 01 00 30 be 01 00  30 be 01 00 30 be 01 00   |0...0...0...0...|
0x1bf2c:    30 be 01 00 30 be 01 00  30 be 01 00 30 be 01 00   |0...0...0...0...|
0x1bf3c:    ??                                                 |?               |
; section: .rodata._ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl2EEENS_8weak_ptrIvEENS9_INSA_ILl1EEENS_8signals26detail21foreign_void_weak_ptrENS7_5l_endEEEEEEENS8_ISI_EEEENS1_14invoke_visitorIKNSG_21lock_weak_ptr_visitorEEEPKvNS_7variantISD_SH_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_
0x1eb44:    e8 ea 01 00 a8 ea 01 00  98 ea 01 00 98 ea 01 00   |................|
0x1eb54:    98 ea 01 00 98 ea 01 00  98 ea 01 00 98 ea 01 00   |................|
0x1eb64:    98 ea 01 00 98 ea 01 00  98 ea 01 00 98 ea 01 00   |................|
0x1eb74:    98 ea 01 00 98 ea 01 00  98 ea 01 00 98 ea 01 00   |................|
0x1eb84:    98 ea 01 00 98 ea 01 00  98 ea 01 00 98 ea 01 00   |................|
0x1eb94:    ??                                                 |?               |
; section: .rodata._ZNK5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1ISsS4_SB_EESH_EEEEEj
0x206c0:    5c 04 02 00 a0 04 02 00  40 03 02 00 40 03 02 00   |\.......@...@...|
0x206d0:    40 03 02 00 40 03 02 00  40 03 02 00 40 03 02 00   |@...@...@...@...|
0x206e0:    40 03 02 00 40 03 02 00  40 03 02 00 40 03 02 00   |@...@...@...@...|
0x206f0:    40 03 02 00 40 03 02 00  40 03 02 00 40 03 02 00   |@...@...@...@...|
0x20700:    40 03 02 00 40 03 02 00  40 03 02 00 40 03 02 00   |@...@...@...@...|
0x20710:    55                                                 |U               |
; section: .rodata._ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE
0x231d0:    48 31 02 00 e0 30 02 00  40 31 02 00 40 31 02 00   |H1...0..@1..@1..|
0x231e0:    40 31 02 00 40 31 02 00  40 31 02 00 40 31 02 00   |@1..@1..@1..@1..|
0x231f0:    40 31 02 00 40 31 02 00  40 31 02 00 40 31 02 00   |@1..@1..@1..@1..|
0x23200:    40 31 02 00 40 31 02 00  40 31 02 00 40 31 02 00   |@1..@1..@1..@1..|
0x23210:    40 31 02 00 40 31 02 00  40 31 02 00 40 31 02 00   |@1..@1..@1..@1..|
0x23220:    83                                                 |.               |
; section: .rodata._ZNSt20back_insert_iteratorIN5boost8signals26detail11auto_bufferINS0_7variantINS0_10shared_ptrIvEENS2_23foreign_void_shared_ptrENS0_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EENS2_15store_n_objectsILj10EEENS2_19default_grow_policyESaISB_EEEEaSERKSB_
0x234e0:    30 34 02 00 68 33 02 00  a0 32 02 00 a0 32 02 00   |04..h3...2...2..|
0x234f0:    a0 32 02 00 a0 32 02 00  a0 32 02 00 a0 32 02 00   |.2...2...2...2..|
0x23500:    a0 32 02 00 a0 32 02 00  a0 32 02 00 a0 32 02 00   |.2...2...2...2..|
0x23510:    a0 32 02 00 a0 32 02 00  a0 32 02 00 a0 32 02 00   |.2...2...2...2..|
0x23520:    a0 32 02 00 a0 32 02 00  a0 32 02 00 a0 32 02 00   |.2...2...2...2..|
0x23530:    55                                                 |U               |
; section: .rodata._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS5_bEEENSA_IFbRKNS0_10connectionES5_bEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IbS5_bSC_EESI_EEEEESV_E18lock_next_callableEv
0x23ec4:    6a 3b 02 00 39 3d 02 00  d8 3c 02 00 d8 3c 02 00   |j;..9=...<...<..|
0x23ed4:    d8 3c 02 00 d8 3c 02 00  d8 3c 02 00 d8 3c 02 00   |.<...<...<...<..|
0x23ee4:    d8 3c 02 00 d8 3c 02 00  d8 3c 02 00 d8 3c 02 00   |.<...<...<...<..|
0x23ef4:    d8 3c 02 00 d8 3c 02 00  d8 3c 02 00 d8 3c 02 00   |.<...<...<...<..|
0x23f04:    d8 3c 02 00 d8 3c 02 00  d8 3c 02 00 d8 3c 02 00   |.<...<...<...<..|
0x23f14:    ??                                                 |?               |
; section: .rodata._ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal1_implIviNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS8_IFvRKNS0_10connectionEiEEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot1IviSA_EESG_EEEEEST_E18lock_next_callableEv
0x243ac:    d9 3f 02 00 a1 41 02 00  40 41 02 00 40 41 02 00   |.?...A..@A..@A..|
0x243bc:    40 41 02 00 40 41 02 00  40 41 02 00 40 41 02 00   |@A..@A..@A..@A..|
0x243cc:    40 41 02 00 40 41 02 00  40 41 02 00 40 41 02 00   |@A..@A..@A..@A..|
0x243dc:    40 41 02 00 40 41 02 00  40 41 02 00 40 41 02 00   |@A..@A..@A..@A..|
0x243ec:    40 41 02 00 40 41 02 00  40 41 02 00 40 41 02 00   |@A..@A..@A..@A..|
0x243fc:    ??                                                 |?               |
; section: .rodata._ZN5boost8signals26detail12signal1_implISsPKcNS0_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS4_EEENS9_IFSsRKNS0_10connectionES4_EEENS0_5mutexEEclES4_
0x24ffc:    46 49 02 00 dc 48 02 00  18 47 02 00 18 47 02 00   |FI...H...G...G..|
0x2500c:    18 47 02 00 18 47 02 00  18 47 02 00 18 47 02 00   |.G...G...G...G..|
0x2501c:    18 47 02 00 18 47 02 00  18 47 02 00 18 47 02 00   |.G...G...G...G..|
0x2502c:    18 47 02 00 18 47 02 00  18 47 02 00 18 47 02 00   |.G...G...G...G..|
0x2503c:    18 47 02 00 18 47 02 00  18 47 02 00 18 47 02 00   |.G...G...G...G..|
0x2504c:    ??                                                 |?               |
; section: .rodata._ZN5boost8signals26detail12signal2_implIbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS4_bEEENS9_IFbRKNS0_10connectionES4_bEEENS0_5mutexEEclES4_b
0x26ddc:    03 67 02 00 8a 67 02 00  b0 65 02 00 b0 65 02 00   |.g...g...e...e..|
0x26dec:    b0 65 02 00 b0 65 02 00  b0 65 02 00 b0 65 02 00   |.e...e...e...e..|
0x26dfc:    b0 65 02 00 b0 65 02 00  b0 65 02 00 b0 65 02 00   |.e...e...e...e..|
0x26e0c:    b0 65 02 00 b0 65 02 00  b0 65 02 00 b0 65 02 00   |.e...e...e...e..|
0x26e1c:    b0 65 02 00 b0 65 02 00  b0 65 02 00 b0 65 02 00   |.e...e...e...e..|
0x26e2c:    ??                                                 |?               |
; section: .ctors
0x27754:    30 6e 02 00 ??                                     |0n..?           |
; section: .rodata._ZTSN5boost6system14error_categoryE
0x27760:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 34   |N5boost6system14|
0x27770:    65 72 72 6f 72 5f 63 61  74 65 67 6f 72 79 45 00   |error_categoryE.|
0x27780:    08                                                 |.               |
; section: .rodata._ZTIN5boost6system14error_categoryE
0x27780:    08 00 00 00 60 77 02 00  80 17 03 00 4e            |....`w......N   |
; section: .rodata._ZTSN5boost6system12system_errorE
0x2778c:    4e 35 62 6f 6f 73 74 36  73 79 73 74 65 6d 31 32   |N5boost6system12|
0x2779c:    73 79 73 74 65 6d 5f 65  72 72 6f 72 45 00 ??      |system_errorE.? |
; section: .rodata._ZTIN5boost6system12system_errorE
0x277ac:    08 00 00 00 8c 77 02 00  00 00 00 00 ??            |.....w......?   |
; section: .rodata._ZTVN5boost6system14error_categoryE
0x277c0:    00 00 00 00 80 77 02 00  30 a6 00 00 70 b3 00 00   |.....w..0...p...|
0x277d0:    00 00 00 00 00 00 00 00  60 a6 00 00 a0 a6 00 00   |........`.......|
0x277e0:    10 a7 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6system12system_errorE
0x277e8:    00 00 00 00 ac 77 02 00  00 b6 00 00 40 eb 00 00   |.....w......@...|
0x277f8:    40 f0 00 00 ??                                     |@...?           |
; section: .rodata._ZTVN5boost16thread_exceptionE
0x27800:    00 00 00 00 88 17 03 00  50 b6 00 00 90 ea 00 00   |........P.......|
0x27810:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost10lock_errorE
0x27818:    00 00 00 00 94 17 03 00  50 ea 00 00 e0 eb 00 00   |........P.......|
0x27828:    10 a5 00 00 ??                                     |....?           |
; section: .rodata
0x27840:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 70 74 68 72   |void boost::pthr|   "void boost::pthread::pthread_mutex_scoped_lock::unlock()"
0x27850:    65 61 64 3a 3a 70 74 68  72 65 61 64 5f 6d 75 74   |ead::pthread_mut|
0x27860:    65 78 5f 73 63 6f 70 65  64 5f 6c 6f 63 6b 3a 3a   |ex_scoped_lock::|
0x27870:    75 6e 6c 6f 63 6b 28 29  00                        |unlock().       |
0x27879:    00 00 00 00 00 00 00                               |.......         |
0x27880:    62 6f 6f 73 74 3a 3a 70  74 68 72 65 61 64 3a 3a   |boost::pthread::|   "boost::pthread::pthread_mutex_scoped_lock::pthread_mutex_scoped_lock(pthread_mutex_t*)"
0x27890:    70 74 68 72 65 61 64 5f  6d 75 74 65 78 5f 73 63   |pthread_mutex_sc|
0x278a0:    6f 70 65 64 5f 6c 6f 63  6b 3a 3a 70 74 68 72 65   |oped_lock::pthre|
0x278b0:    61 64 5f 6d 75 74 65 78  5f 73 63 6f 70 65 64 5f   |ad_mutex_scoped_|
0x278c0:    6c 6f 63 6b 28 70 74 68  72 65 61 64 5f 6d 75 74   |lock(pthread_mut|
0x278d0:    65 78 5f 74 2a 29 00                               |ex_t*).         |
0x278d7:    00 00 00 00 00 00 00 00  00 76 6f 69 64 20 62 6f   |.........void bo|
0x278e7:    6f 73 74 3a 3a 72 65 63  75 72 73 69 76 65 5f 6d   |ost::recursive_m|
0x278f7:    75 74 65 78 3a 3a 6c 6f  63 6b 28 29 00 00 00 00   |utex::lock()....|
0x27907:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x27917:    00 00 00 00 00 00 00 00  00                        |.........       |
0x27920:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 72 65 63 75   |void boost::recu|   "void boost::recursive_mutex::unlock()"
0x27930:    72 73 69 76 65 5f 6d 75  74 65 78 3a 3a 75 6e 6c   |rsive_mutex::unl|
0x27940:    6f 63 6b 28 29 00                                  |ock().          |
0x27946:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x27956:    00 00 00 00 00 00 00 00  00 00 62 6f 6f 73 74 3a   |..........boost:|
0x27966:    3a 72 65 63 75 72 73 69  76 65 5f 6d 75 74 65 78   |:recursive_mutex|
0x27976:    3a 3a 72 65 63 75 72 73  69 76 65 5f 6d 75 74 65   |::recursive_mute|
0x27986:    78 28 29 00                                        |x().            |
0x2798a:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 6d 75 74 65   |void boost::mute|   "void boost::mutex::unlock()"
0x2799a:    78 3a 3a 75 6e 6c 6f 63  6b 28 29 00               |x::unlock().    |
0x279a6:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x279b6:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x279c0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 63 6f 6e 64   |void boost::cond|   "void boost::condition_variable::notify_one()"
0x279d0:    69 74 69 6f 6e 5f 76 61  72 69 61 62 6c 65 3a 3a   |ition_variable::|
0x279e0:    6e 6f 74 69 66 79 5f 6f  6e 65 28 29 00            |notify_one().   |
0x279ed:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x279fd:    00 00 00                                           |...             |
0x27a00:    62 6f 6f 73 74 3a 3a 72  65 63 75 72 73 69 76 65   |boost::recursive|   "boost::recursive_mutex::~recursive_mutex()"
0x27a10:    5f 6d 75 74 65 78 3a 3a  7e 72 65 63 75 72 73 69   |_mutex::~recursi|
0x27a20:    76 65 5f 6d 75 74 65 78  28 29 00                  |ve_mutex().     |
0x27a2b:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x27a3b:    00 00 00 00 00 76 6f 69  64 20 43 4e 6f 64 65 3a   |.....void CNode:|
0x27a4b:    3a 42 65 67 69 6e 4d 65  73 73 61 67 65 28 63 6f   |:BeginMessage(co|
0x27a5b:    6e 73 74 20 63 68 61 72  2a 29 00 00 00 00 00 00   |nst char*)......|
0x27a6b:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x27a7b:    00 00 00 00 00                                     |.....           |
0x27a80:    43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::write(const char*, int)"
0x27a90:    74 61 53 74 72 65 61 6d  3a 3a 77 72 69 74 65 28   |taStream::write(|
0x27aa0:    63 6f 6e 73 74 20 63 68  61 72 2a 2c 20 69 6e 74   |const char*, int|
0x27ab0:    29 00                                              |).              |
0x27ab2:    76 6f 69 64 20 43 4e 6f  64 65 3a 3a 45 6e 64 4d   |void CNode::EndM|
0x27ac2:    65 73 73 61 67 65 28 29  00 00 00 00 00 00 00 00   |essage()........|
0x27ad2:    00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x27ae0:    43 44 61 74 61 53 74 72  65 61 6d 26 20 43 44 61   |CDataStream& CDa|   "CDataStream& CDataStream::read(char*, int)"
0x27af0:    74 61 53 74 72 65 61 6d  3a 3a 72 65 61 64 28 63   |taStream::read(c|
0x27b00:    68 61 72 2a 2c 20 69 6e  74 29 00                  |har*, int).     |
0x27b0b:    76 6f 69 64 20 53 6f 63  6b 65 74 53 65 6e 64 44   |void SocketSendD|   "void SocketSendData(CNode*)"
0x27b1b:    61 74 61 28 43 4e 6f 64  65 2a 29 00               |ata(CNode*).    |
0x27b27:    69 6e 74 20 43 4e 6f 64  65 3a 3a 47 65 74 52 65   |int CNode::GetRe|   "int CNode::GetRefCount()"
0x27b37:    66 43 6f 75 6e 74 28 29  00                        |fCount().       |
0x27b40:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x27b50:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x27b60:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x27b70:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x27b80:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x27b90:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x27ba0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x27bb0:    6c 31 5f 69 6d 70 6c 3c  76 6f 69 64 2c 20 69 6e   |l1_impl<void, in|
0x27bc0:    74 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |t, boost::signal|
0x27bd0:    73 32 3a 3a 6f 70 74 69  6f 6e 61 6c 5f 6c 61 73   |s2::optional_las|
0x27be0:    74 5f 76 61 6c 75 65 3c  76 6f 69 64 3e 2c 20 69   |t_value<void>, i|
0x27bf0:    6e 74 2c 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |nt, std::less<in|
0x27c00:    74 3e 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |t>, boost::funct|
0x27c10:    69 6f 6e 3c 76 6f 69 64  28 69 6e 74 29 3e 2c 20   |ion<void(int)>, |
0x27c20:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x27c30:    76 6f 69 64 28 63 6f 6e  73 74 20 62 6f 6f 73 74   |void(const boost|
0x27c40:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 63 6f 6e 6e   |::signals2::conn|
0x27c50:    65 63 74 69 6f 6e 26 2c  20 69 6e 74 29 3e 2c 20   |ection&, int)>, |
0x27c60:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x27c70:    3a 6d 75 74 65 78 3e 2c  20 62 6f 6f 73 74 3a 3a   |:mutex>, boost::|
0x27c80:    73 68 61 72 65 64 5f 70  74 72 3c 54 3e 3a 3a 72   |shared_ptr<T>::r|
0x27c90:    65 66 65 72 65 6e 63 65  20 3d 20 62 6f 6f 73 74   |eference = boost|
0x27ca0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x27cb0:    69 6c 3a 3a 73 69 67 6e  61 6c 31 5f 69 6d 70 6c   |il::signal1_impl|
0x27cc0:    3c 76 6f 69 64 2c 20 69  6e 74 2c 20 62 6f 6f 73   |<void, int, boos|
0x27cd0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6f 70 74   |t::signals2::opt|
0x27ce0:    69 6f 6e 61 6c 5f 6c 61  73 74 5f 76 61 6c 75 65   |ional_last_value|
0x27cf0:    3c 76 6f 69 64 3e 2c 20  69 6e 74 2c 20 73 74 64   |<void>, int, std|
0x27d00:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x27d10:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 76 6f 69   |st::function<voi|
0x27d20:    64 28 69 6e 74 29 3e 2c  20 62 6f 6f 73 74 3a 3a   |d(int)>, boost::|
0x27d30:    66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 63 6f   |function<void(co|
0x27d40:    6e 73 74 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |nst boost::signa|
0x27d50:    6c 73 32 3a 3a 63 6f 6e  6e 65 63 74 69 6f 6e 26   |ls2::connection&|
0x27d60:    2c 20 69 6e 74 29 3e 2c  20 62 6f 6f 73 74 3a 3a   |, int)>, boost::|
0x27d70:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x27d80:    26 5d 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |&]..............|
0x27d90:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x27da0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = void, T1 = int, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(int)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, int)>, Mutex = boost::signals2::mutex]"
0x27db0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x27dc0:    67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x27dd0:    2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x27de0:    70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x27df0:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x27e00:    78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x27e10:    69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x27e20:    6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x27e30:    65 63 74 69 6f 6e 73 28  62 6f 6f 6c 2c 20 75 6e   |ections(bool, un|
0x27e40:    73 69 67 6e 65 64 20 69  6e 74 29 20 63 6f 6e 73   |signed int) cons|
0x27e50:    74 20 5b 77 69 74 68 20  52 20 3d 20 76 6f 69 64   |t [with R = void|
0x27e60:    2c 20 54 31 20 3d 20 69  6e 74 2c 20 43 6f 6d 62   |, T1 = int, Comb|
0x27e70:    69 6e 65 72 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |iner = boost::si|
0x27e80:    67 6e 61 6c 73 32 3a 3a  6f 70 74 69 6f 6e 61 6c   |gnals2::optional|
0x27e90:    5f 6c 61 73 74 5f 76 61  6c 75 65 3c 76 6f 69 64   |_last_value<void|
0x27ea0:    3e 2c 20 47 72 6f 75 70  20 3d 20 69 6e 74 2c 20   |>, Group = int, |
0x27eb0:    47 72 6f 75 70 43 6f 6d  70 61 72 65 20 3d 20 73   |GroupCompare = s|
0x27ec0:    74 64 3a 3a 6c 65 73 73  3c 69 6e 74 3e 2c 20 53   |td::less<int>, S|
0x27ed0:    6c 6f 74 46 75 6e 63 74  69 6f 6e 20 3d 20 62 6f   |lotFunction = bo|
0x27ee0:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x27ef0:    69 64 28 69 6e 74 29 3e  2c 20 45 78 74 65 6e 64   |id(int)>, Extend|
0x27f00:    65 64 53 6c 6f 74 46 75  6e 63 74 69 6f 6e 20 3d   |edSlotFunction =|
0x27f10:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x27f20:    3c 76 6f 69 64 28 63 6f  6e 73 74 20 62 6f 6f 73   |<void(const boos|
0x27f30:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 63 6f 6e   |t::signals2::con|
0x27f40:    6e 65 63 74 69 6f 6e 26  2c 20 69 6e 74 29 3e 2c   |nection&, int)>,|
0x27f50:    20 4d 75 74 65 78 20 3d  20 62 6f 6f 73 74 3a 3a   | Mutex = boost::|
0x27f60:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 5d   |signals2::mutex]|
0x27f70:    00                                                 |.               |
0x27f71:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00      |............... |
0x27f80:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<void>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<void>&]"
0x27f90:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x27fa0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x27fb0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x27fc0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x27fd0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x27fe0:    32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x27ff0:    5f 76 61 6c 75 65 3c 76  6f 69 64 3e 2c 20 62 6f   |_value<void>, bo|
0x28000:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x28010:    54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x28020:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x28030:    3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x28040:    61 6c 75 65 3c 76 6f 69  64 3e 26 5d 00            |alue<void>&].   |
0x2804d:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2805d:    00 00 00                                           |...             |
0x28060:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<void, int, boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void(int)>, boost::function<void(const boost::signals2::connection&, int)>, boost::signals2::mutex>::invocation_state]"
0x28070:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x28080:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x28090:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x280a0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x280b0:    69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 76 6f 69 64   |ignal1_impl<void|
0x280c0:    2c 20 69 6e 74 2c 20 62  6f 6f 73 74 3a 3a 73 69   |, int, boost::si|
0x280d0:    67 6e 61 6c 73 32 3a 3a  6f 70 74 69 6f 6e 61 6c   |gnals2::optional|
0x280e0:    5f 6c 61 73 74 5f 76 61  6c 75 65 3c 76 6f 69 64   |_last_value<void|
0x280f0:    3e 2c 20 69 6e 74 2c 20  73 74 64 3a 3a 6c 65 73   |>, int, std::les|
0x28100:    73 3c 69 6e 74 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |s<int>, boost::f|
0x28110:    75 6e 63 74 69 6f 6e 3c  76 6f 69 64 28 69 6e 74   |unction<void(int|
0x28120:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |)>, boost::funct|
0x28130:    69 6f 6e 3c 76 6f 69 64  28 63 6f 6e 73 74 20 62   |ion<void(const b|
0x28140:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x28150:    63 6f 6e 6e 65 63 74 69  6f 6e 26 2c 20 69 6e 74   |connection&, int|
0x28160:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |)>, boost::signa|
0x28170:    6c 73 32 3a 3a 6d 75 74  65 78 3e 3a 3a 69 6e 76   |ls2::mutex>::inv|
0x28180:    6f 63 61 74 69 6f 6e 5f  73 74 61 74 65 5d 00      |ocation_state]. |
0x2818f:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2819f:    00                                                 |.               |
0x281a0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >&]"
0x281b0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x281c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x281d0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x281e0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x281f0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x28200:    32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x28210:    65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x28220:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x28230:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x28240:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x28250:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x28260:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x28270:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x28280:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x28290:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x282a0:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x282b0:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x282c0:    6c 73 32 3a 3a 73 6c 6f  74 31 3c 76 6f 69 64 2c   |ls2::slot1<void,|
0x282d0:    20 69 6e 74 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   | int, boost::fun|
0x282e0:    63 74 69 6f 6e 3c 76 6f  69 64 28 69 6e 74 29 3e   |ction<void(int)>|
0x282f0:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x28300:    6c 73 32 3a 3a 6d 75 74  65 78 3e 20 3e 20 3e 2c   |ls2::mutex> > >,|
0x28310:    20 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   | boost::shared_p|
0x28320:    74 72 3c 54 3e 3a 3a 72  65 66 65 72 65 6e 63 65   |tr<T>::reference|
0x28330:    20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x28340:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 67 72 6f 75   |s2::detail::grou|
0x28350:    70 65 64 5f 6c 69 73 74  3c 69 6e 74 2c 20 73 74   |ped_list<int, st|
0x28360:    64 3a 3a 6c 65 73 73 3c  69 6e 74 3e 2c 20 62 6f   |d::less<int>, bo|
0x28370:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x28380:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x28390:    3a 64 65 74 61 69 6c 3a  3a 63 6f 6e 6e 65 63 74   |:detail::connect|
0x283a0:    69 6f 6e 5f 62 6f 64 79  3c 73 74 64 3a 3a 70 61   |ion_body<std::pa|
0x283b0:    69 72 3c 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |ir<boost::signal|
0x283c0:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 6c 6f 74   |s2::detail::slot|
0x283d0:    5f 6d 65 74 61 5f 67 72  6f 75 70 2c 20 62 6f 6f   |_meta_group, boo|
0x283e0:    73 74 3a 3a 6f 70 74 69  6f 6e 61 6c 3c 69 6e 74   |st::optional<int|
0x283f0:    3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x28400:    61 6c 73 32 3a 3a 73 6c  6f 74 31 3c 76 6f 69 64   |als2::slot1<void|
0x28410:    2c 20 69 6e 74 2c 20 62  6f 6f 73 74 3a 3a 66 75   |, int, boost::fu|
0x28420:    6e 63 74 69 6f 6e 3c 76  6f 69 64 28 69 6e 74 29   |nction<void(int)|
0x28430:    3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x28440:    61 6c 73 32 3a 3a 6d 75  74 65 78 3e 20 3e 20 3e   |als2::mutex> > >|
0x28450:    26 5d 00                                           |&].             |
0x28453:    00 00 00 00 00 00 00 00  00 00 00 00 00            |.............   |
0x28460:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>&]"
0x28470:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x28480:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x28490:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x284a0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x284b0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x284c0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x284d0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x284e0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x284f0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x28500:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x28510:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x28520:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x28530:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 76 6f   |gnals2::slot1<vo|
0x28540:    69 64 2c 20 69 6e 74 2c  20 62 6f 6f 73 74 3a 3a   |id, int, boost::|
0x28550:    66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 69 6e   |function<void(in|
0x28560:    74 29 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |t)> >, boost::si|
0x28570:    67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 2c 20   |gnals2::mutex>, |
0x28580:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x28590:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x285a0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x285b0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x285c0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x285d0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x285e0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x285f0:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x28600:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x28610:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x28620:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 76 6f   |gnals2::slot1<vo|
0x28630:    69 64 2c 20 69 6e 74 2c  20 62 6f 6f 73 74 3a 3a   |id, int, boost::|
0x28640:    66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 69 6e   |function<void(in|
0x28650:    74 29 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |t)> >, boost::si|
0x28660:    67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 26 5d   |gnals2::mutex>&]|
0x28670:    00                                                 |.               |
0x28671:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00      |............... |
0x28680:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = void, T1 = int, Combiner = boost::signals2::optional_last_value<void>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<void(int)>, ExtendedSlotFunction = boost::function<void(const boost::signals2::connection&, int)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >]"
0x28690:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x286a0:    67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x286b0:    2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x286c0:    70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x286d0:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x286e0:    78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x286f0:    69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x28700:    6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x28710:    65 63 74 69 6f 6e 73 5f  66 72 6f 6d 28 62 6f 6f   |ections_from(boo|
0x28720:    6c 2c 20 63 6f 6e 73 74  20 74 79 70 65 6e 61 6d   |l, const typenam|
0x28730:    65 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |e boost::signals|
0x28740:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x28750:    6c 31 5f 69 6d 70 6c 3c  52 2c 20 54 31 2c 20 43   |l1_impl<R, T1, C|
0x28760:    6f 6d 62 69 6e 65 72 2c  20 47 72 6f 75 70 2c 20   |ombiner, Group, |
0x28770:    47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 53 6c   |GroupCompare, Sl|
0x28780:    6f 74 46 75 6e 63 74 69  6f 6e 2c 20 45 78 74 65   |otFunction, Exte|
0x28790:    6e 64 65 64 53 6c 6f 74  46 75 6e 63 74 69 6f 6e   |ndedSlotFunction|
0x287a0:    2c 20 4d 75 74 65 78 3e  3a 3a 63 6f 6e 6e 65 63   |, Mutex>::connec|
0x287b0:    74 69 6f 6e 5f 6c 69 73  74 5f 74 79 70 65 3a 3a   |tion_list_type::|
0x287c0:    69 74 65 72 61 74 6f 72  26 2c 20 75 6e 73 69 67   |iterator&, unsig|
0x287d0:    6e 65 64 20 69 6e 74 29  20 63 6f 6e 73 74 20 5b   |ned int) const [|
0x287e0:    77 69 74 68 20 52 20 3d  20 76 6f 69 64 2c 20 54   |with R = void, T|
0x287f0:    31 20 3d 20 69 6e 74 2c  20 43 6f 6d 62 69 6e 65   |1 = int, Combine|
0x28800:    72 20 3d 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |r = boost::signa|
0x28810:    6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x28820:    73 74 5f 76 61 6c 75 65  3c 76 6f 69 64 3e 2c 20   |st_value<void>, |
0x28830:    47 72 6f 75 70 20 3d 20  69 6e 74 2c 20 47 72 6f   |Group = int, Gro|
0x28840:    75 70 43 6f 6d 70 61 72  65 20 3d 20 73 74 64 3a   |upCompare = std:|
0x28850:    3a 6c 65 73 73 3c 69 6e  74 3e 2c 20 53 6c 6f 74   |:less<int>, Slot|
0x28860:    46 75 6e 63 74 69 6f 6e  20 3d 20 62 6f 6f 73 74   |Function = boost|
0x28870:    3a 3a 66 75 6e 63 74 69  6f 6e 3c 76 6f 69 64 28   |::function<void(|
0x28880:    69 6e 74 29 3e 2c 20 45  78 74 65 6e 64 65 64 53   |int)>, ExtendedS|
0x28890:    6c 6f 74 46 75 6e 63 74  69 6f 6e 20 3d 20 62 6f   |lotFunction = bo|
0x288a0:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x288b0:    69 64 28 63 6f 6e 73 74  20 62 6f 6f 73 74 3a 3a   |id(const boost::|
0x288c0:    73 69 67 6e 61 6c 73 32  3a 3a 63 6f 6e 6e 65 63   |signals2::connec|
0x288d0:    74 69 6f 6e 26 2c 20 69  6e 74 29 3e 2c 20 4d 75   |tion&, int)>, Mu|
0x288e0:    74 65 78 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |tex = boost::sig|
0x288f0:    6e 61 6c 73 32 3a 3a 6d  75 74 65 78 2c 20 74 79   |nals2::mutex, ty|
0x28900:    70 65 6e 61 6d 65 20 62  6f 6f 73 74 3a 3a 73 69   |pename boost::si|
0x28910:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x28920:    73 69 67 6e 61 6c 31 5f  69 6d 70 6c 3c 52 2c 20   |signal1_impl<R, |
0x28930:    54 31 2c 20 43 6f 6d 62  69 6e 65 72 2c 20 47 72   |T1, Combiner, Gr|
0x28940:    6f 75 70 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |oup, GroupCompar|
0x28950:    65 2c 20 53 6c 6f 74 46  75 6e 63 74 69 6f 6e 2c   |e, SlotFunction,|
0x28960:    20 45 78 74 65 6e 64 65  64 53 6c 6f 74 46 75 6e   | ExtendedSlotFun|
0x28970:    63 74 69 6f 6e 2c 20 4d  75 74 65 78 3e 3a 3a 63   |ction, Mutex>::c|
0x28980:    6f 6e 6e 65 63 74 69 6f  6e 5f 6c 69 73 74 5f 74   |onnection_list_t|
0x28990:    79 70 65 3a 3a 69 74 65  72 61 74 6f 72 20 3d 20   |ype::iterator = |
0x289a0:    73 74 64 3a 3a 5f 4c 69  73 74 5f 69 74 65 72 61   |std::_List_itera|
0x289b0:    74 6f 72 3c 62 6f 6f 73  74 3a 3a 73 68 61 72 65   |tor<boost::share|
0x289c0:    64 5f 70 74 72 3c 62 6f  6f 73 74 3a 3a 73 69 67   |d_ptr<boost::sig|
0x289d0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x289e0:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x289f0:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x28a00:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x28a10:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x28a20:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x28a30:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x28a40:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x28a50:    31 3c 76 6f 69 64 2c 20  69 6e 74 2c 20 62 6f 6f   |1<void, int, boo|
0x28a60:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 76 6f 69   |st::function<voi|
0x28a70:    64 28 69 6e 74 29 3e 20  3e 2c 20 62 6f 6f 73 74   |d(int)> >, boost|
0x28a80:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x28a90:    78 3e 20 3e 20 3e 5d 00                            |x> > >].        |
0x28a98:    00 00 00 00 00 00 00 00                            |........        |
0x28aa0:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex>]"
0x28ab0:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x28ac0:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x28ad0:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x28ae0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x28af0:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x28b00:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x28b10:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x28b20:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x28b30:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x28b40:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x28b50:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x28b60:    31 3c 76 6f 69 64 2c 20  69 6e 74 2c 20 62 6f 6f   |1<void, int, boo|
0x28b70:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 76 6f 69   |st::function<voi|
0x28b80:    64 28 69 6e 74 29 3e 20  3e 2c 20 62 6f 6f 73 74   |d(int)> >, boost|
0x28b90:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x28ba0:    78 3e 5d 00                                        |x>].            |
0x28ba4:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x28bb4:    00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x28bc0:    54 2a 20 62 6f 6f 73 74  3a 3a 73 63 6f 70 65 64   |T* boost::scoped|   "T* boost::scoped_ptr<T>::operator->() const [with T = boost::signals2::detail::foreign_weak_ptr_impl_base]"
0x28bd0:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x28be0:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x28bf0:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x28c00:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 66   |nals2::detail::f|
0x28c10:    6f 72 65 69 67 6e 5f 77  65 61 6b 5f 70 74 72 5f   |oreign_weak_ptr_|
0x28c20:    69 6d 70 6c 5f 62 61 73  65 5d 00                  |impl_base].     |
0x28c2b:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x28c3b:    00 00 00 00 00                                     |.....           |
0x28c40:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool, mpl_::true_ = mpl_::bool_<true>]"
0x28c50:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x28c60:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x28c70:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x28c80:    5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x28c90:    56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x28ca0:    6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x28cb0:    2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x28cc0:    57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x28cd0:    30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x28ce0:    65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x28cf0:    76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x28d00:    73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x28d10:    3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x28d20:    70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x28d30:    74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x28d40:    6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x28d50:    3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x28d60:    6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x28d70:    72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x28d80:    73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x28d90:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x28da0:    61 69 6c 3a 3a 65 78 70  69 72 65 64 5f 77 65 61   |ail::expired_wea|
0x28db0:    6b 5f 70 74 72 5f 76 69  73 69 74 6f 72 3e 2c 20   |k_ptr_visitor>, |
0x28dc0:    56 50 43 56 20 3d 20 63  6f 6e 73 74 20 76 6f 69   |VPCV = const voi|
0x28dd0:    64 2a 2c 20 4e 42 46 20  3d 20 62 6f 6f 73 74 3a   |d*, NBF = boost:|
0x28de0:    3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x28df0:    77 65 61 6b 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |weak_ptr<void>, |
0x28e00:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x28e10:    3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x28e20:    5f 76 6f 69 64 5f 77 65  61 6b 5f 70 74 72 3e 3a   |_void_weak_ptr>:|
0x28e30:    3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x28e40:    70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x28e50:    73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x28e60:    70 65 20 3d 20 62 6f 6f  6c 2c 20 6d 70 6c 5f 3a   |pe = bool, mpl_:|
0x28e70:    3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x28e80:    6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x28e8c:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x28e9c:    00 00 00 00                                        |....            |
0x28ea0:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, VoidPtrCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = bool]"
0x28eb0:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x28ec0:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x28ed0:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x28ee0:    5f 69 6d 70 6c 5f 69 6e  76 6f 6b 65 28 69 6e 74   |_impl_invoke(int|
0x28ef0:    2c 20 56 69 73 69 74 6f  72 26 2c 20 56 6f 69 64   |, Visitor&, Void|
0x28f00:    50 74 72 43 56 2c 20 62  6f 6f 73 74 3a 3a 64 65   |PtrCV, boost::de|
0x28f10:    74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 61   |tail::variant::a|
0x28f20:    70 70 6c 79 5f 76 69 73  69 74 6f 72 5f 75 6e 72   |pply_visitor_unr|
0x28f30:    6f 6c 6c 65 64 2a 2c 20  4e 42 46 2c 20 6c 6f 6e   |olled*, NBF, lon|
0x28f40:    67 20 69 6e 74 29 20 5b  77 69 74 68 20 56 69 73   |g int) [with Vis|
0x28f50:    69 74 6f 72 20 3d 20 62  6f 6f 73 74 3a 3a 64 65   |itor = boost::de|
0x28f60:    74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 69   |tail::variant::i|
0x28f70:    6e 76 6f 6b 65 5f 76 69  73 69 74 6f 72 3c 63 6f   |nvoke_visitor<co|
0x28f80:    6e 73 74 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |nst boost::signa|
0x28f90:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 65 78 70   |ls2::detail::exp|
0x28fa0:    69 72 65 64 5f 77 65 61  6b 5f 70 74 72 5f 76 69   |ired_weak_ptr_vi|
0x28fb0:    73 69 74 6f 72 3e 2c 20  56 6f 69 64 50 74 72 43   |sitor>, VoidPtrC|
0x28fc0:    56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x28fd0:    20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x28fe0:    72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 77 65 61   |riant<boost::wea|
0x28ff0:    6b 5f 70 74 72 3c 76 6f  69 64 3e 2c 20 62 6f 6f   |k_ptr<void>, boo|
0x29000:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x29010:    74 61 69 6c 3a 3a 66 6f  72 65 69 67 6e 5f 76 6f   |tail::foreign_vo|
0x29020:    69 64 5f 77 65 61 6b 5f  70 74 72 3e 3a 3a 68 61   |id_weak_ptr>::ha|
0x29030:    73 5f 66 61 6c 6c 62 61  63 6b 5f 74 79 70 65 5f   |s_fallback_type_|
0x29040:    2c 20 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |, typename Visit|
0x29050:    6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x29060:    3d 20 62 6f 6f 6c 5d 00                            |= bool].        |
0x29068:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x29078:    00 00 00 00 00 00 00 00                            |........        |
0x29080:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x29090:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x290a0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x290b0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x290c0:    54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x290d0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x290e0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x290f0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x29100:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x29110:    54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x29120:    73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x29130:    65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x29140:    6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x29150:    20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x29160:    70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x29170:    3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x29180:    20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x29190:    5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x291a0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x291b0:    6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x291c0:    64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x291d0:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x291e0:    3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x291f0:    2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x29200:    6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x29210:    3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 31   |:signals2::slot1|
0x29220:    3c 76 6f 69 64 2c 20 69  6e 74 2c 20 62 6f 6f 73   |<void, int, boos|
0x29230:    74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 76 6f 69 64   |t::function<void|
0x29240:    28 69 6e 74 29 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |(int)> >, boost:|
0x29250:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6d 75 74 65 78   |:signals2::mutex|
0x29260:    3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x29270:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 67 72   |als2::detail::gr|
0x29280:    6f 75 70 65 64 5f 6c 69  73 74 3c 47 72 6f 75 70   |ouped_list<Group|
0x29290:    2c 20 47 72 6f 75 70 43  6f 6d 70 61 72 65 2c 20   |, GroupCompare, |
0x292a0:    56 61 6c 75 65 54 79 70  65 3e 3a 3a 69 74 65 72   |ValueType>::iter|
0x292b0:    61 74 6f 72 20 3d 20 73  74 64 3a 3a 5f 4c 69 73   |ator = std::_Lis|
0x292c0:    74 5f 69 74 65 72 61 74  6f 72 3c 62 6f 6f 73 74   |t_iterator<boost|
0x292d0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 62 6f 6f   |::shared_ptr<boo|
0x292e0:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x292f0:    74 61 69 6c 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |tail::connection|
0x29300:    5f 62 6f 64 79 3c 73 74  64 3a 3a 70 61 69 72 3c   |_body<std::pair<|
0x29310:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x29320:    3a 64 65 74 61 69 6c 3a  3a 73 6c 6f 74 5f 6d 65   |:detail::slot_me|
0x29330:    74 61 5f 67 72 6f 75 70  2c 20 62 6f 6f 73 74 3a   |ta_group, boost:|
0x29340:    3a 6f 70 74 69 6f 6e 61  6c 3c 69 6e 74 3e 20 3e   |:optional<int> >|
0x29350:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x29360:    32 3a 3a 73 6c 6f 74 31  3c 76 6f 69 64 2c 20 69   |2::slot1<void, i|
0x29370:    6e 74 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |nt, boost::funct|
0x29380:    69 6f 6e 3c 76 6f 69 64  28 69 6e 74 29 3e 20 3e   |ion<void(int)> >|
0x29390:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x293a0:    32 3a 3a 6d 75 74 65 78  3e 20 3e 20 3e 2c 20 62   |2::mutex> > >, b|
0x293b0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x293c0:    64 65 74 61 69 6c 3a 3a  67 72 6f 75 70 65 64 5f   |detail::grouped_|
0x293d0:    6c 69 73 74 3c 47 72 6f  75 70 2c 20 47 72 6f 75   |list<Group, Grou|
0x293e0:    70 43 6f 6d 70 61 72 65  2c 20 56 61 6c 75 65 54   |pCompare, ValueT|
0x293f0:    79 70 65 3e 3a 3a 67 72  6f 75 70 5f 6b 65 79 5f   |ype>::group_key_|
0x29400:    74 79 70 65 20 3d 20 73  74 64 3a 3a 70 61 69 72   |type = std::pair|
0x29410:    3c 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   |<boost::signals2|
0x29420:    3a 3a 64 65 74 61 69 6c  3a 3a 73 6c 6f 74 5f 6d   |::detail::slot_m|
0x29430:    65 74 61 5f 67 72 6f 75  70 2c 20 62 6f 6f 73 74   |eta_group, boost|
0x29440:    3a 3a 6f 70 74 69 6f 6e  61 6c 3c 69 6e 74 3e 20   |::optional<int> |
0x29450:    3e 5d 00                                           |>].             |
0x29453:    00 00 00 00 00 00 00 00  00 00 00 00 00            |.............   |
0x29460:    62 6f 6f 73 74 3a 3a 6f  70 74 69 6f 6e 61 6c 3c   |boost::optional<|   "boost::optional<T>::reference_const_type boost::optional<T>::get() const [with T = int, boost::optional<T>::reference_const_type = const int&]"
0x29470:    54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 5f 63 6f   |T>::reference_co|
0x29480:    6e 73 74 5f 74 79 70 65  20 62 6f 6f 73 74 3a 3a   |nst_type boost::|
0x29490:    6f 70 74 69 6f 6e 61 6c  3c 54 3e 3a 3a 67 65 74   |optional<T>::get|
0x294a0:    28 29 20 63 6f 6e 73 74  20 5b 77 69 74 68 20 54   |() const [with T|
0x294b0:    20 3d 20 69 6e 74 2c 20  62 6f 6f 73 74 3a 3a 6f   | = int, boost::o|
0x294c0:    70 74 69 6f 6e 61 6c 3c  54 3e 3a 3a 72 65 66 65   |ptional<T>::refe|
0x294d0:    72 65 6e 63 65 5f 63 6f  6e 73 74 5f 74 79 70 65   |rence_const_type|
0x294e0:    20 3d 20 63 6f 6e 73 74  20 69 6e 74 26 5d 00      | = const int&]. |
0x294ef:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x294ff:    00                                                 |.               |
0x29500:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x29510:    3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x29520:    66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x29530:    66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x29540:    6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x29550:    3e 3a 3a 61 75 74 6f 5f  62 75 66 66 65 72 28 29   |>::auto_buffer()|
0x29560:    20 5b 77 69 74 68 20 54  20 3d 20 62 6f 6f 73 74   | [with T = boost|
0x29570:    3a 3a 76 61 72 69 61 6e  74 3c 62 6f 6f 73 74 3a   |::variant<boost:|
0x29580:    3a 73 68 61 72 65 64 5f  70 74 72 3c 76 6f 69 64   |:shared_ptr<void|
0x29590:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x295a0:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 66 6f 72 65   |s2::detail::fore|
0x295b0:    69 67 6e 5f 76 6f 69 64  5f 73 68 61 72 65 64 5f   |ign_void_shared_|
0x295c0:    70 74 72 3e 2c 20 53 74  61 63 6b 42 75 66 66 65   |ptr>, StackBuffe|
0x295d0:    72 50 6f 6c 69 63 79 20  3d 20 62 6f 6f 73 74 3a   |rPolicy = boost:|
0x295e0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x295f0:    6c 3a 3a 73 74 6f 72 65  5f 6e 5f 6f 62 6a 65 63   |l::store_n_objec|
0x29600:    74 73 3c 31 30 75 3e 2c  20 47 72 6f 77 50 6f 6c   |ts<10u>, GrowPol|
0x29610:    69 63 79 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |icy = boost::sig|
0x29620:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 64   |nals2::detail::d|
0x29630:    65 66 61 75 6c 74 5f 67  72 6f 77 5f 70 6f 6c 69   |efault_grow_poli|
0x29640:    63 79 2c 20 41 6c 6c 6f  63 61 74 6f 72 20 3d 20   |cy, Allocator = |
0x29650:    73 74 64 3a 3a 61 6c 6c  6f 63 61 74 6f 72 3c 62   |std::allocator<b|
0x29660:    6f 6f 73 74 3a 3a 76 61  72 69 61 6e 74 3c 62 6f   |oost::variant<bo|
0x29670:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x29680:    76 6f 69 64 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |void>, boost::si|
0x29690:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x296a0:    66 6f 72 65 69 67 6e 5f  76 6f 69 64 5f 73 68 61   |foreign_void_sha|
0x296b0:    72 65 64 5f 70 74 72 3e  20 3e 5d 00               |red_ptr> >].    |
0x296bc:    00 00 00 00                                        |....            |
0x296c0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::destroy_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type, const false_type&) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int, boost::false_type = boost::integral_constant<bool, false>]"
0x296d0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x296e0:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x296f0:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x29700:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x29710:    63 61 74 6f 72 3e 3a 3a  64 65 73 74 72 6f 79 5f   |cator>::destroy_|
0x29720:    62 61 63 6b 5f 6e 28 62  6f 6f 73 74 3a 3a 73 69   |back_n(boost::si|
0x29730:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x29740:    61 75 74 6f 5f 62 75 66  66 65 72 3c 54 2c 20 53   |auto_buffer<T, S|
0x29750:    74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x29760:    2c 20 47 72 6f 77 50 6f  6c 69 63 79 2c 20 41 6c   |, GrowPolicy, Al|
0x29770:    6c 6f 63 61 74 6f 72 3e  3a 3a 73 69 7a 65 5f 74   |locator>::size_t|
0x29780:    79 70 65 2c 20 63 6f 6e  73 74 20 66 61 6c 73 65   |ype, const false|
0x29790:    5f 74 79 70 65 26 29 20  5b 77 69 74 68 20 54 20   |_type&) [with T |
0x297a0:    3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x297b0:    3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x297c0:    74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x297d0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x297e0:    6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x297f0:    73 68 61 72 65 64 5f 70  74 72 3e 2c 20 53 74 61   |shared_ptr>, Sta|
0x29800:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 20 3d   |ckBufferPolicy =|
0x29810:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x29820:    3a 3a 64 65 74 61 69 6c  3a 3a 73 74 6f 72 65 5f   |::detail::store_|
0x29830:    6e 5f 6f 62 6a 65 63 74  73 3c 31 30 75 3e 2c 20   |n_objects<10u>, |
0x29840:    47 72 6f 77 50 6f 6c 69  63 79 20 3d 20 62 6f 6f   |GrowPolicy = boo|
0x29850:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x29860:    74 61 69 6c 3a 3a 64 65  66 61 75 6c 74 5f 67 72   |tail::default_gr|
0x29870:    6f 77 5f 70 6f 6c 69 63  79 2c 20 41 6c 6c 6f 63   |ow_policy, Alloc|
0x29880:    61 74 6f 72 20 3d 20 73  74 64 3a 3a 61 6c 6c 6f   |ator = std::allo|
0x29890:    63 61 74 6f 72 3c 62 6f  6f 73 74 3a 3a 76 61 72   |cator<boost::var|
0x298a0:    69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x298b0:    65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x298c0:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x298d0:    65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x298e0:    6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 20   |oid_shared_ptr> |
0x298f0:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x29900:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 61 75 74 6f   |s2::detail::auto|
0x29910:    5f 62 75 66 66 65 72 3c  54 2c 20 53 74 61 63 6b   |_buffer<T, Stack|
0x29920:    42 75 66 66 65 72 50 6f  6c 69 63 79 2c 20 47 72   |BufferPolicy, Gr|
0x29930:    6f 77 50 6f 6c 69 63 79  2c 20 41 6c 6c 6f 63 61   |owPolicy, Alloca|
0x29940:    74 6f 72 3e 3a 3a 73 69  7a 65 5f 74 79 70 65 20   |tor>::size_type |
0x29950:    3d 20 75 6e 73 69 67 6e  65 64 20 69 6e 74 2c 20   |= unsigned int, |
0x29960:    62 6f 6f 73 74 3a 3a 66  61 6c 73 65 5f 74 79 70   |boost::false_typ|
0x29970:    65 20 3d 20 62 6f 6f 73  74 3a 3a 69 6e 74 65 67   |e = boost::integ|
0x29980:    72 61 6c 5f 63 6f 6e 73  74 61 6e 74 3c 62 6f 6f   |ral_constant<boo|
0x29990:    6c 2c 20 66 61 6c 73 65  3e 5d 00                  |l, false>].     |
0x2999b:    00 00 00 00 00                                     |.....           |
0x299a0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::pop_back_n(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x299b0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x299c0:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x299d0:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x299e0:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x299f0:    63 61 74 6f 72 3e 3a 3a  70 6f 70 5f 62 61 63 6b   |cator>::pop_back|
0x29a00:    5f 6e 28 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |_n(boost::signal|
0x29a10:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 61 75 74 6f   |s2::detail::auto|
0x29a20:    5f 62 75 66 66 65 72 3c  54 2c 20 53 74 61 63 6b   |_buffer<T, Stack|
0x29a30:    42 75 66 66 65 72 50 6f  6c 69 63 79 2c 20 47 72   |BufferPolicy, Gr|
0x29a40:    6f 77 50 6f 6c 69 63 79  2c 20 41 6c 6c 6f 63 61   |owPolicy, Alloca|
0x29a50:    74 6f 72 3e 3a 3a 73 69  7a 65 5f 74 79 70 65 29   |tor>::size_type)|
0x29a60:    20 5b 77 69 74 68 20 54  20 3d 20 62 6f 6f 73 74   | [with T = boost|
0x29a70:    3a 3a 76 61 72 69 61 6e  74 3c 62 6f 6f 73 74 3a   |::variant<boost:|
0x29a80:    3a 73 68 61 72 65 64 5f  70 74 72 3c 76 6f 69 64   |:shared_ptr<void|
0x29a90:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x29aa0:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 66 6f 72 65   |s2::detail::fore|
0x29ab0:    69 67 6e 5f 76 6f 69 64  5f 73 68 61 72 65 64 5f   |ign_void_shared_|
0x29ac0:    70 74 72 3e 2c 20 53 74  61 63 6b 42 75 66 66 65   |ptr>, StackBuffe|
0x29ad0:    72 50 6f 6c 69 63 79 20  3d 20 62 6f 6f 73 74 3a   |rPolicy = boost:|
0x29ae0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x29af0:    6c 3a 3a 73 74 6f 72 65  5f 6e 5f 6f 62 6a 65 63   |l::store_n_objec|
0x29b00:    74 73 3c 31 30 75 3e 2c  20 47 72 6f 77 50 6f 6c   |ts<10u>, GrowPol|
0x29b10:    69 63 79 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |icy = boost::sig|
0x29b20:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 64   |nals2::detail::d|
0x29b30:    65 66 61 75 6c 74 5f 67  72 6f 77 5f 70 6f 6c 69   |efault_grow_poli|
0x29b40:    63 79 2c 20 41 6c 6c 6f  63 61 74 6f 72 20 3d 20   |cy, Allocator = |
0x29b50:    73 74 64 3a 3a 61 6c 6c  6f 63 61 74 6f 72 3c 62   |std::allocator<b|
0x29b60:    6f 6f 73 74 3a 3a 76 61  72 69 61 6e 74 3c 62 6f   |oost::variant<bo|
0x29b70:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x29b80:    76 6f 69 64 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |void>, boost::si|
0x29b90:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x29ba0:    66 6f 72 65 69 67 6e 5f  76 6f 69 64 5f 73 68 61   |foreign_void_sha|
0x29bb0:    72 65 64 5f 70 74 72 3e  20 3e 2c 20 62 6f 6f 73   |red_ptr> >, boos|
0x29bc0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x29bd0:    61 69 6c 3a 3a 61 75 74  6f 5f 62 75 66 66 65 72   |ail::auto_buffer|
0x29be0:    3c 54 2c 20 53 74 61 63  6b 42 75 66 66 65 72 50   |<T, StackBufferP|
0x29bf0:    6f 6c 69 63 79 2c 20 47  72 6f 77 50 6f 6c 69 63   |olicy, GrowPolic|
0x29c00:    79 2c 20 41 6c 6c 6f 63  61 74 6f 72 3e 3a 3a 73   |y, Allocator>::s|
0x29c10:    69 7a 65 5f 74 79 70 65  20 3d 20 75 6e 73 69 67   |ize_type = unsig|
0x29c20:    6e 65 64 20 69 6e 74 5d  00                        |ned int].       |
0x29c29:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x29c39:    00 00 00 00 00 00 00                               |.......         |
0x29c40:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::invoke_visitor<const boost::signals2::detail::lock_weak_ptr_visitor>, VPCV = const void*, NBF = boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_, typename Visitor::result_type = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, mpl_::true_ = mpl_::bool_<true>]"
0x29c50:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x29c60:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x29c70:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x29c80:    5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x29c90:    56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x29ca0:    6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x29cb0:    2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x29cc0:    57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x29cd0:    30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x29ce0:    65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x29cf0:    76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x29d00:    73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x29d10:    3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x29d20:    70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x29d30:    74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x29d40:    6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x29d50:    3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x29d60:    6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x29d70:    72 69 61 6e 74 3a 3a 69  6e 76 6f 6b 65 5f 76 69   |riant::invoke_vi|
0x29d80:    73 69 74 6f 72 3c 63 6f  6e 73 74 20 62 6f 6f 73   |sitor<const boos|
0x29d90:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x29da0:    61 69 6c 3a 3a 6c 6f 63  6b 5f 77 65 61 6b 5f 70   |ail::lock_weak_p|
0x29db0:    74 72 5f 76 69 73 69 74  6f 72 3e 2c 20 56 50 43   |tr_visitor>, VPC|
0x29dc0:    56 20 3d 20 63 6f 6e 73  74 20 76 6f 69 64 2a 2c   |V = const void*,|
0x29dd0:    20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x29de0:    72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 77 65 61   |riant<boost::wea|
0x29df0:    6b 5f 70 74 72 3c 76 6f  69 64 3e 2c 20 62 6f 6f   |k_ptr<void>, boo|
0x29e00:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x29e10:    74 61 69 6c 3a 3a 66 6f  72 65 69 67 6e 5f 76 6f   |tail::foreign_vo|
0x29e20:    69 64 5f 77 65 61 6b 5f  70 74 72 3e 3a 3a 68 61   |id_weak_ptr>::ha|
0x29e30:    73 5f 66 61 6c 6c 62 61  63 6b 5f 74 79 70 65 5f   |s_fallback_type_|
0x29e40:    2c 20 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |, typename Visit|
0x29e50:    6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x29e60:    3d 20 62 6f 6f 73 74 3a  3a 76 61 72 69 61 6e 74   |= boost::variant|
0x29e70:    3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x29e80:    74 72 3c 76 6f 69 64 3e  2c 20 62 6f 6f 73 74 3a   |tr<void>, boost:|
0x29e90:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x29ea0:    6c 3a 3a 66 6f 72 65 69  67 6e 5f 76 6f 69 64 5f   |l::foreign_void_|
0x29eb0:    73 68 61 72 65 64 5f 70  74 72 3e 2c 20 6d 70 6c   |shared_ptr>, mpl|
0x29ec0:    5f 3a 3a 74 72 75 65 5f  20 3d 20 6d 70 6c 5f 3a   |_::true_ = mpl_:|
0x29ed0:    3a 62 6f 6f 6c 5f 3c 74  72 75 65 3e 5d 00         |:bool_<true>].  |
0x29ede:    00 00 74 79 70 65 6e 61  6d 65 20 56 69 73 69 74   |..typename Visit|
0x29eee:    6f 72 3a 3a 72 65 73 75  6c 74 5f 74 79 70 65 20   |or::result_type |
0x29efe:    62 6f 6f 73 74 3a 3a 64  65 74 61 69 6c 3a 3a 76   |boost::detail::v|
0x29f0e:    61 72 69 61 6e 74 3a 3a  76 69 73 69 74 61 74 69   |ariant::visitati|
0x29f1e:    6f 6e 5f 69 6d 70 6c 5f  69 6e 76 6f 6b 65 28 69   |on_impl_invoke(i|
0x29f2e:    6e 74 2c 20 56 69 73 69  74 6f 72 26 2c 20 56 6f   |nt, Visitor&, Vo|
0x29f3e:    69 64 50 74 72 43 56 2c  20 62 6f 6f 73 74 3a 3a   |idPtrCV, boost::|
0x29f4e:    64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x29f5e:    3a 61 70 70 6c 79 5f 76  69 73 69 74 6f 72 5f 75   |:apply_visitor_u|
0x29f6e:    6e 72 6f 6c 6c 65 64 2a  2c 20 4e 42 46 2c 20 6c   |nrolled*, NBF, l|
0x29f7e:    6f 6e 67 20 69 6e 74 29  20 5b 77 69 74 68 20 56   |ong int) [with V|
0x29f8e:    69 73 69 74 6f 72 20 3d  20 62 6f 6f 73 74 3a 3a   |isitor = boost::|
0x29f9e:    64 65 74 61 69 6c 3a 3a  76 61 72 69 61 6e 74 3a   |detail::variant:|
0x29fae:    3a 69 6e 76 6f 6b 65 5f  76 69 73 69 74 6f 72 3c   |:invoke_visitor<|
0x29fbe:    63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x29fce:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 6c   |nals2::detail::l|
0x29fde:    6f 63 6b 5f 77 65 61 6b  5f 70 74 72 5f 76 69 73   |ock_weak_ptr_vis|
0x29fee:    69 74 6f 72 3e 2c 20 56  6f 69 64 50 74 72 43 56   |itor>, VoidPtrCV|
0x29ffe:    20 3d 20 63 6f 6e 73 74  20 76 6f 69 64 2a 2c 20   | = const void*, |
0x2a00e:    4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x2a01e:    69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 77 65 61 6b   |iant<boost::weak|
0x2a02e:    5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x2a03e:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2a04e:    61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x2a05e:    64 5f 77 65 61 6b 5f 70  74 72 3e 3a 3a 68 61 73   |d_weak_ptr>::has|
0x2a06e:    5f 66 61 6c 6c 62 61 63  6b 5f 74 79 70 65 5f 2c   |_fallback_type_,|
0x2a07e:    20 74 79 70 65 6e 61 6d  65 20 56 69 73 69 74 6f   | typename Visito|
0x2a08e:    72 3a 3a 72 65 73 75 6c  74 5f 74 79 70 65 20 3d   |r::result_type =|
0x2a09e:    20 62 6f 6f 73 74 3a 3a  76 61 72 69 61 6e 74 3c   | boost::variant<|
0x2a0ae:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2a0be:    72 3c 76 6f 69 64 3e 2c  20 62 6f 6f 73 74 3a 3a   |r<void>, boost::|
0x2a0ce:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2a0de:    3a 3a 66 6f 72 65 69 67  6e 5f 76 6f 69 64 5f 73   |::foreign_void_s|
0x2a0ee:    68 61 72 65 64 5f 70 74  72 3e 5d 00 00 00 00 00   |hared_ptr>].....|
0x2a0fe:    00 00                                              |..              |
0x2a100:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::copy_into, VPCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x2a110:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x2a120:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x2a130:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x2a140:    5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x2a150:    56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x2a160:    6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x2a170:    2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x2a180:    57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x2a190:    30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x2a1a0:    65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x2a1b0:    76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x2a1c0:    73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x2a1d0:    3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x2a1e0:    70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x2a1f0:    74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x2a200:    6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x2a210:    3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x2a220:    6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x2a230:    72 69 61 6e 74 3a 3a 63  6f 70 79 5f 69 6e 74 6f   |riant::copy_into|
0x2a240:    2c 20 56 50 43 56 20 3d  20 63 6f 6e 73 74 20 76   |, VPCV = const v|
0x2a250:    6f 69 64 2a 2c 20 4e 42  46 20 3d 20 62 6f 6f 73   |oid*, NBF = boos|
0x2a260:    74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x2a270:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x2a280:    64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x2a290:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x2a2a0:    65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x2a2b0:    5f 70 74 72 3e 3a 3a 68  61 73 5f 66 61 6c 6c 62   |_ptr>::has_fallb|
0x2a2c0:    61 63 6b 5f 74 79 70 65  5f 2c 20 74 79 70 65 6e   |ack_type_, typen|
0x2a2d0:    61 6d 65 20 56 69 73 69  74 6f 72 3a 3a 72 65 73   |ame Visitor::res|
0x2a2e0:    75 6c 74 5f 74 79 70 65  20 3d 20 76 6f 69 64 2c   |ult_type = void,|
0x2a2f0:    20 6d 70 6c 5f 3a 3a 74  72 75 65 5f 20 3d 20 6d   | mpl_::true_ = m|
0x2a300:    70 6c 5f 3a 3a 62 6f 6f  6c 5f 3c 74 72 75 65 3e   |pl_::bool_<true>|
0x2a310:    5d 00                                              |].              |
0x2a312:    00 00 00 00 00 00 00 00  00 00 00 00 00 00         |..............  |
0x2a320:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl_invoke(int, Visitor&, VoidPtrCV, boost::detail::variant::apply_visitor_unrolled*, NBF, long int) [with Visitor = boost::detail::variant::copy_into, VoidPtrCV = const void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void]"
0x2a330:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x2a340:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x2a350:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x2a360:    5f 69 6d 70 6c 5f 69 6e  76 6f 6b 65 28 69 6e 74   |_impl_invoke(int|
0x2a370:    2c 20 56 69 73 69 74 6f  72 26 2c 20 56 6f 69 64   |, Visitor&, Void|
0x2a380:    50 74 72 43 56 2c 20 62  6f 6f 73 74 3a 3a 64 65   |PtrCV, boost::de|
0x2a390:    74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 61   |tail::variant::a|
0x2a3a0:    70 70 6c 79 5f 76 69 73  69 74 6f 72 5f 75 6e 72   |pply_visitor_unr|
0x2a3b0:    6f 6c 6c 65 64 2a 2c 20  4e 42 46 2c 20 6c 6f 6e   |olled*, NBF, lon|
0x2a3c0:    67 20 69 6e 74 29 20 5b  77 69 74 68 20 56 69 73   |g int) [with Vis|
0x2a3d0:    69 74 6f 72 20 3d 20 62  6f 6f 73 74 3a 3a 64 65   |itor = boost::de|
0x2a3e0:    74 61 69 6c 3a 3a 76 61  72 69 61 6e 74 3a 3a 63   |tail::variant::c|
0x2a3f0:    6f 70 79 5f 69 6e 74 6f  2c 20 56 6f 69 64 50 74   |opy_into, VoidPt|
0x2a400:    72 43 56 20 3d 20 63 6f  6e 73 74 20 76 6f 69 64   |rCV = const void|
0x2a410:    2a 2c 20 4e 42 46 20 3d  20 62 6f 6f 73 74 3a 3a   |*, NBF = boost::|
0x2a420:    76 61 72 69 61 6e 74 3c  62 6f 6f 73 74 3a 3a 73   |variant<boost::s|
0x2a430:    68 61 72 65 64 5f 70 74  72 3c 76 6f 69 64 3e 2c   |hared_ptr<void>,|
0x2a440:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2a450:    3a 3a 64 65 74 61 69 6c  3a 3a 66 6f 72 65 69 67   |::detail::foreig|
0x2a460:    6e 5f 76 6f 69 64 5f 73  68 61 72 65 64 5f 70 74   |n_void_shared_pt|
0x2a470:    72 3e 3a 3a 68 61 73 5f  66 61 6c 6c 62 61 63 6b   |r>::has_fallback|
0x2a480:    5f 74 79 70 65 5f 2c 20  74 79 70 65 6e 61 6d 65   |_type_, typename|
0x2a490:    20 56 69 73 69 74 6f 72  3a 3a 72 65 73 75 6c 74   | Visitor::result|
0x2a4a0:    5f 74 79 70 65 20 3d 20  76 6f 69 64 5d 00         |_type = void].  |
0x2a4ae:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2a4be:    00 00                                              |..              |
0x2a4c0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::unchecked_push_back(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::optimized_const_reference = const boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>&]"
0x2a4d0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x2a4e0:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x2a4f0:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x2a500:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x2a510:    63 61 74 6f 72 3e 3a 3a  75 6e 63 68 65 63 6b 65   |cator>::unchecke|
0x2a520:    64 5f 70 75 73 68 5f 62  61 63 6b 28 62 6f 6f 73   |d_push_back(boos|
0x2a530:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2a540:    61 69 6c 3a 3a 61 75 74  6f 5f 62 75 66 66 65 72   |ail::auto_buffer|
0x2a550:    3c 54 2c 20 53 74 61 63  6b 42 75 66 66 65 72 50   |<T, StackBufferP|
0x2a560:    6f 6c 69 63 79 2c 20 47  72 6f 77 50 6f 6c 69 63   |olicy, GrowPolic|
0x2a570:    79 2c 20 41 6c 6c 6f 63  61 74 6f 72 3e 3a 3a 6f   |y, Allocator>::o|
0x2a580:    70 74 69 6d 69 7a 65 64  5f 63 6f 6e 73 74 5f 72   |ptimized_const_r|
0x2a590:    65 66 65 72 65 6e 63 65  29 20 5b 77 69 74 68 20   |eference) [with |
0x2a5a0:    54 20 3d 20 62 6f 6f 73  74 3a 3a 76 61 72 69 61   |T = boost::varia|
0x2a5b0:    6e 74 3c 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |nt<boost::shared|
0x2a5c0:    5f 70 74 72 3c 76 6f 69  64 3e 2c 20 62 6f 6f 73   |_ptr<void>, boos|
0x2a5d0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2a5e0:    61 69 6c 3a 3a 66 6f 72  65 69 67 6e 5f 76 6f 69   |ail::foreign_voi|
0x2a5f0:    64 5f 73 68 61 72 65 64  5f 70 74 72 3e 2c 20 53   |d_shared_ptr>, S|
0x2a600:    74 61 63 6b 42 75 66 66  65 72 50 6f 6c 69 63 79   |tackBufferPolicy|
0x2a610:    20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x2a620:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 74 6f 72   |s2::detail::stor|
0x2a630:    65 5f 6e 5f 6f 62 6a 65  63 74 73 3c 31 30 75 3e   |e_n_objects<10u>|
0x2a640:    2c 20 47 72 6f 77 50 6f  6c 69 63 79 20 3d 20 62   |, GrowPolicy = b|
0x2a650:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2a660:    64 65 74 61 69 6c 3a 3a  64 65 66 61 75 6c 74 5f   |detail::default_|
0x2a670:    67 72 6f 77 5f 70 6f 6c  69 63 79 2c 20 41 6c 6c   |grow_policy, All|
0x2a680:    6f 63 61 74 6f 72 20 3d  20 73 74 64 3a 3a 61 6c   |ocator = std::al|
0x2a690:    6c 6f 63 61 74 6f 72 3c  62 6f 6f 73 74 3a 3a 76   |locator<boost::v|
0x2a6a0:    61 72 69 61 6e 74 3c 62  6f 6f 73 74 3a 3a 73 68   |ariant<boost::sh|
0x2a6b0:    61 72 65 64 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |ared_ptr<void>, |
0x2a6c0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2a6d0:    3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x2a6e0:    5f 76 6f 69 64 5f 73 68  61 72 65 64 5f 70 74 72   |_void_shared_ptr|
0x2a6f0:    3e 20 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |> >, boost::sign|
0x2a700:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x2a710:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x2a720:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x2a730:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x2a740:    63 61 74 6f 72 3e 3a 3a  6f 70 74 69 6d 69 7a 65   |cator>::optimize|
0x2a750:    64 5f 63 6f 6e 73 74 5f  72 65 66 65 72 65 6e 63   |d_const_referenc|
0x2a760:    65 20 3d 20 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |e = const boost:|
0x2a770:    3a 76 61 72 69 61 6e 74  3c 62 6f 6f 73 74 3a 3a   |:variant<boost::|
0x2a780:    73 68 61 72 65 64 5f 70  74 72 3c 76 6f 69 64 3e   |shared_ptr<void>|
0x2a790:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x2a7a0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 66 6f 72 65 69   |2::detail::forei|
0x2a7b0:    67 6e 5f 76 6f 69 64 5f  73 68 61 72 65 64 5f 70   |gn_void_shared_p|
0x2a7c0:    74 72 3e 26 5d 00                                  |tr>&].          |
0x2a7c6:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2a7d6:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x2a7e0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x2a7f0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x2a800:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x2a810:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x2a820:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x2a830:    63 61 74 6f 72 3e 3a 3a  72 65 73 65 72 76 65 28   |cator>::reserve(|
0x2a840:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2a850:    3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x2a860:    66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x2a870:    66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x2a880:    6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x2a890:    3e 3a 3a 73 69 7a 65 5f  74 79 70 65 29 20 5b 77   |>::size_type) [w|
0x2a8a0:    69 74 68 20 54 20 3d 20  62 6f 6f 73 74 3a 3a 76   |ith T = boost::v|
0x2a8b0:    61 72 69 61 6e 74 3c 62  6f 6f 73 74 3a 3a 73 68   |ariant<boost::sh|
0x2a8c0:    61 72 65 64 5f 70 74 72  3c 76 6f 69 64 3e 2c 20   |ared_ptr<void>, |
0x2a8d0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2a8e0:    3a 64 65 74 61 69 6c 3a  3a 66 6f 72 65 69 67 6e   |:detail::foreign|
0x2a8f0:    5f 76 6f 69 64 5f 73 68  61 72 65 64 5f 70 74 72   |_void_shared_ptr|
0x2a900:    3e 2c 20 53 74 61 63 6b  42 75 66 66 65 72 50 6f   |>, StackBufferPo|
0x2a910:    6c 69 63 79 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |licy = boost::si|
0x2a920:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x2a930:    73 74 6f 72 65 5f 6e 5f  6f 62 6a 65 63 74 73 3c   |store_n_objects<|
0x2a940:    31 30 75 3e 2c 20 47 72  6f 77 50 6f 6c 69 63 79   |10u>, GrowPolicy|
0x2a950:    20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x2a960:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 64 65 66 61   |s2::detail::defa|
0x2a970:    75 6c 74 5f 67 72 6f 77  5f 70 6f 6c 69 63 79 2c   |ult_grow_policy,|
0x2a980:    20 41 6c 6c 6f 63 61 74  6f 72 20 3d 20 73 74 64   | Allocator = std|
0x2a990:    3a 3a 61 6c 6c 6f 63 61  74 6f 72 3c 62 6f 6f 73   |::allocator<boos|
0x2a9a0:    74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x2a9b0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x2a9c0:    64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x2a9d0:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x2a9e0:    65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x2a9f0:    5f 70 74 72 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |_ptr> >, boost::|
0x2aa00:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2aa10:    3a 3a 61 75 74 6f 5f 62  75 66 66 65 72 3c 54 2c   |::auto_buffer<T,|
0x2aa20:    20 53 74 61 63 6b 42 75  66 66 65 72 50 6f 6c 69   | StackBufferPoli|
0x2aa30:    63 79 2c 20 47 72 6f 77  50 6f 6c 69 63 79 2c 20   |cy, GrowPolicy, |
0x2aa40:    41 6c 6c 6f 63 61 74 6f  72 3e 3a 3a 73 69 7a 65   |Allocator>::size|
0x2aa50:    5f 74 79 70 65 20 3d 20  75 6e 73 69 67 6e 65 64   |_type = unsigned|
0x2aa60:    20 69 6e 74 5d 00                                  | int].          |
0x2aa66:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2aa76:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x2aa80:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::reserve_impl(boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type) [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >, boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::size_type = unsigned int]"
0x2aa90:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x2aaa0:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x2aab0:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x2aac0:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x2aad0:    63 61 74 6f 72 3e 3a 3a  72 65 73 65 72 76 65 5f   |cator>::reserve_|
0x2aae0:    69 6d 70 6c 28 62 6f 6f  73 74 3a 3a 73 69 67 6e   |impl(boost::sign|
0x2aaf0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 61 75   |als2::detail::au|
0x2ab00:    74 6f 5f 62 75 66 66 65  72 3c 54 2c 20 53 74 61   |to_buffer<T, Sta|
0x2ab10:    63 6b 42 75 66 66 65 72  50 6f 6c 69 63 79 2c 20   |ckBufferPolicy, |
0x2ab20:    47 72 6f 77 50 6f 6c 69  63 79 2c 20 41 6c 6c 6f   |GrowPolicy, Allo|
0x2ab30:    63 61 74 6f 72 3e 3a 3a  73 69 7a 65 5f 74 79 70   |cator>::size_typ|
0x2ab40:    65 29 20 5b 77 69 74 68  20 54 20 3d 20 62 6f 6f   |e) [with T = boo|
0x2ab50:    73 74 3a 3a 76 61 72 69  61 6e 74 3c 62 6f 6f 73   |st::variant<boos|
0x2ab60:    74 3a 3a 73 68 61 72 65  64 5f 70 74 72 3c 76 6f   |t::shared_ptr<vo|
0x2ab70:    69 64 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |id>, boost::sign|
0x2ab80:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 66 6f   |als2::detail::fo|
0x2ab90:    72 65 69 67 6e 5f 76 6f  69 64 5f 73 68 61 72 65   |reign_void_share|
0x2aba0:    64 5f 70 74 72 3e 2c 20  53 74 61 63 6b 42 75 66   |d_ptr>, StackBuf|
0x2abb0:    66 65 72 50 6f 6c 69 63  79 20 3d 20 62 6f 6f 73   |ferPolicy = boos|
0x2abc0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2abd0:    61 69 6c 3a 3a 73 74 6f  72 65 5f 6e 5f 6f 62 6a   |ail::store_n_obj|
0x2abe0:    65 63 74 73 3c 31 30 75  3e 2c 20 47 72 6f 77 50   |ects<10u>, GrowP|
0x2abf0:    6f 6c 69 63 79 20 3d 20  62 6f 6f 73 74 3a 3a 73   |olicy = boost::s|
0x2ac00:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2ac10:    3a 64 65 66 61 75 6c 74  5f 67 72 6f 77 5f 70 6f   |:default_grow_po|
0x2ac20:    6c 69 63 79 2c 20 41 6c  6c 6f 63 61 74 6f 72 20   |licy, Allocator |
0x2ac30:    3d 20 73 74 64 3a 3a 61  6c 6c 6f 63 61 74 6f 72   |= std::allocator|
0x2ac40:    3c 62 6f 6f 73 74 3a 3a  76 61 72 69 61 6e 74 3c   |<boost::variant<|
0x2ac50:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2ac60:    72 3c 76 6f 69 64 3e 2c  20 62 6f 6f 73 74 3a 3a   |r<void>, boost::|
0x2ac70:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2ac80:    3a 3a 66 6f 72 65 69 67  6e 5f 76 6f 69 64 5f 73   |::foreign_void_s|
0x2ac90:    68 61 72 65 64 5f 70 74  72 3e 20 3e 2c 20 62 6f   |hared_ptr> >, bo|
0x2aca0:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x2acb0:    65 74 61 69 6c 3a 3a 61  75 74 6f 5f 62 75 66 66   |etail::auto_buff|
0x2acc0:    65 72 3c 54 2c 20 53 74  61 63 6b 42 75 66 66 65   |er<T, StackBuffe|
0x2acd0:    72 50 6f 6c 69 63 79 2c  20 47 72 6f 77 50 6f 6c   |rPolicy, GrowPol|
0x2ace0:    69 63 79 2c 20 41 6c 6c  6f 63 61 74 6f 72 3e 3a   |icy, Allocator>:|
0x2acf0:    3a 73 69 7a 65 5f 74 79  70 65 20 3d 20 75 6e 73   |:size_type = uns|
0x2ad00:    69 67 6e 65 64 20 69 6e  74 5d 00                  |igned int].     |
0x2ad0b:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ad1b:    00 00 00 00 00                                     |.....           |
0x2ad20:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::auto_buffer<T, StackBufferPolicy, GrowPolicy, Allocator>::~auto_buffer() [with T = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>, StackBufferPolicy = boost::signals2::detail::store_n_objects<10u>, GrowPolicy = boost::signals2::detail::default_grow_policy, Allocator = std::allocator<boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr> >]"
0x2ad30:    3a 64 65 74 61 69 6c 3a  3a 61 75 74 6f 5f 62 75   |:detail::auto_bu|
0x2ad40:    66 66 65 72 3c 54 2c 20  53 74 61 63 6b 42 75 66   |ffer<T, StackBuf|
0x2ad50:    66 65 72 50 6f 6c 69 63  79 2c 20 47 72 6f 77 50   |ferPolicy, GrowP|
0x2ad60:    6f 6c 69 63 79 2c 20 41  6c 6c 6f 63 61 74 6f 72   |olicy, Allocator|
0x2ad70:    3e 3a 3a 7e 61 75 74 6f  5f 62 75 66 66 65 72 28   |>::~auto_buffer(|
0x2ad80:    29 20 5b 77 69 74 68 20  54 20 3d 20 62 6f 6f 73   |) [with T = boos|
0x2ad90:    74 3a 3a 76 61 72 69 61  6e 74 3c 62 6f 6f 73 74   |t::variant<boost|
0x2ada0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 76 6f 69   |::shared_ptr<voi|
0x2adb0:    64 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |d>, boost::signa|
0x2adc0:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 66 6f 72   |ls2::detail::for|
0x2add0:    65 69 67 6e 5f 76 6f 69  64 5f 73 68 61 72 65 64   |eign_void_shared|
0x2ade0:    5f 70 74 72 3e 2c 20 53  74 61 63 6b 42 75 66 66   |_ptr>, StackBuff|
0x2adf0:    65 72 50 6f 6c 69 63 79  20 3d 20 62 6f 6f 73 74   |erPolicy = boost|
0x2ae00:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x2ae10:    69 6c 3a 3a 73 74 6f 72  65 5f 6e 5f 6f 62 6a 65   |il::store_n_obje|
0x2ae20:    63 74 73 3c 31 30 75 3e  2c 20 47 72 6f 77 50 6f   |cts<10u>, GrowPo|
0x2ae30:    6c 69 63 79 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |licy = boost::si|
0x2ae40:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x2ae50:    64 65 66 61 75 6c 74 5f  67 72 6f 77 5f 70 6f 6c   |default_grow_pol|
0x2ae60:    69 63 79 2c 20 41 6c 6c  6f 63 61 74 6f 72 20 3d   |icy, Allocator =|
0x2ae70:    20 73 74 64 3a 3a 61 6c  6c 6f 63 61 74 6f 72 3c   | std::allocator<|
0x2ae80:    62 6f 6f 73 74 3a 3a 76  61 72 69 61 6e 74 3c 62   |boost::variant<b|
0x2ae90:    6f 6f 73 74 3a 3a 73 68  61 72 65 64 5f 70 74 72   |oost::shared_ptr|
0x2aea0:    3c 76 6f 69 64 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |<void>, boost::s|
0x2aeb0:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2aec0:    3a 66 6f 72 65 69 67 6e  5f 76 6f 69 64 5f 73 68   |:foreign_void_sh|
0x2aed0:    61 72 65 64 5f 70 74 72  3e 20 3e 5d 00            |ared_ptr> >].   |
0x2aedd:    00 00 00                                           |...             |
0x2aee0:    74 79 70 65 6e 61 6d 65  20 56 69 73 69 74 6f 72   |typename Visitor|   "typename Visitor::result_type boost::detail::variant::visitation_impl(int, int, Visitor&, VPCV, mpl_::true_, NBF, W*, S*) [with W = mpl_::int_<20>, S = boost::detail::variant::visitation_impl_step<boost::mpl::l_iter<boost::mpl::l_end>, boost::mpl::l_iter<boost::mpl::l_end> >, Visitor = boost::detail::variant::destroyer, VPCV = void*, NBF = boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_, typename Visitor::result_type = void, mpl_::true_ = mpl_::bool_<true>]"
0x2aef0:    3a 3a 72 65 73 75 6c 74  5f 74 79 70 65 20 62 6f   |::result_type bo|
0x2af00:    6f 73 74 3a 3a 64 65 74  61 69 6c 3a 3a 76 61 72   |ost::detail::var|
0x2af10:    69 61 6e 74 3a 3a 76 69  73 69 74 61 74 69 6f 6e   |iant::visitation|
0x2af20:    5f 69 6d 70 6c 28 69 6e  74 2c 20 69 6e 74 2c 20   |_impl(int, int, |
0x2af30:    56 69 73 69 74 6f 72 26  2c 20 56 50 43 56 2c 20   |Visitor&, VPCV, |
0x2af40:    6d 70 6c 5f 3a 3a 74 72  75 65 5f 2c 20 4e 42 46   |mpl_::true_, NBF|
0x2af50:    2c 20 57 2a 2c 20 53 2a  29 20 5b 77 69 74 68 20   |, W*, S*) [with |
0x2af60:    57 20 3d 20 6d 70 6c 5f  3a 3a 69 6e 74 5f 3c 32   |W = mpl_::int_<2|
0x2af70:    30 3e 2c 20 53 20 3d 20  62 6f 6f 73 74 3a 3a 64   |0>, S = boost::d|
0x2af80:    65 74 61 69 6c 3a 3a 76  61 72 69 61 6e 74 3a 3a   |etail::variant::|
0x2af90:    76 69 73 69 74 61 74 69  6f 6e 5f 69 6d 70 6c 5f   |visitation_impl_|
0x2afa0:    73 74 65 70 3c 62 6f 6f  73 74 3a 3a 6d 70 6c 3a   |step<boost::mpl:|
0x2afb0:    3a 6c 5f 69 74 65 72 3c  62 6f 6f 73 74 3a 3a 6d   |:l_iter<boost::m|
0x2afc0:    70 6c 3a 3a 6c 5f 65 6e  64 3e 2c 20 62 6f 6f 73   |pl::l_end>, boos|
0x2afd0:    74 3a 3a 6d 70 6c 3a 3a  6c 5f 69 74 65 72 3c 62   |t::mpl::l_iter<b|
0x2afe0:    6f 6f 73 74 3a 3a 6d 70  6c 3a 3a 6c 5f 65 6e 64   |oost::mpl::l_end|
0x2aff0:    3e 20 3e 2c 20 56 69 73  69 74 6f 72 20 3d 20 62   |> >, Visitor = b|
0x2b000:    6f 6f 73 74 3a 3a 64 65  74 61 69 6c 3a 3a 76 61   |oost::detail::va|
0x2b010:    72 69 61 6e 74 3a 3a 64  65 73 74 72 6f 79 65 72   |riant::destroyer|
0x2b020:    2c 20 56 50 43 56 20 3d  20 76 6f 69 64 2a 2c 20   |, VPCV = void*, |
0x2b030:    4e 42 46 20 3d 20 62 6f  6f 73 74 3a 3a 76 61 72   |NBF = boost::var|
0x2b040:    69 61 6e 74 3c 62 6f 6f  73 74 3a 3a 73 68 61 72   |iant<boost::shar|
0x2b050:    65 64 5f 70 74 72 3c 76  6f 69 64 3e 2c 20 62 6f   |ed_ptr<void>, bo|
0x2b060:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x2b070:    65 74 61 69 6c 3a 3a 66  6f 72 65 69 67 6e 5f 76   |etail::foreign_v|
0x2b080:    6f 69 64 5f 73 68 61 72  65 64 5f 70 74 72 3e 3a   |oid_shared_ptr>:|
0x2b090:    3a 68 61 73 5f 66 61 6c  6c 62 61 63 6b 5f 74 79   |:has_fallback_ty|
0x2b0a0:    70 65 5f 2c 20 74 79 70  65 6e 61 6d 65 20 56 69   |pe_, typename Vi|
0x2b0b0:    73 69 74 6f 72 3a 3a 72  65 73 75 6c 74 5f 74 79   |sitor::result_ty|
0x2b0c0:    70 65 20 3d 20 76 6f 69  64 2c 20 6d 70 6c 5f 3a   |pe = void, mpl_:|
0x2b0d0:    3a 74 72 75 65 5f 20 3d  20 6d 70 6c 5f 3a 3a 62   |:true_ = mpl_::b|
0x2b0e0:    6f 6f 6c 5f 3c 74 72 75  65 3e 5d 00               |ool_<true>].    |
0x2b0ec:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b0fc:    00 00 00 00 74 79 70 65  6e 61 6d 65 20 56 69 73   |....typename Vis|
0x2b10c:    69 74 6f 72 3a 3a 72 65  73 75 6c 74 5f 74 79 70   |itor::result_typ|
0x2b11c:    65 20 62 6f 6f 73 74 3a  3a 64 65 74 61 69 6c 3a   |e boost::detail:|
0x2b12c:    3a 76 61 72 69 61 6e 74  3a 3a 76 69 73 69 74 61   |:variant::visita|
0x2b13c:    74 69 6f 6e 5f 69 6d 70  6c 5f 69 6e 76 6f 6b 65   |tion_impl_invoke|
0x2b14c:    28 69 6e 74 2c 20 56 69  73 69 74 6f 72 26 2c 20   |(int, Visitor&, |
0x2b15c:    56 6f 69 64 50 74 72 43  56 2c 20 62 6f 6f 73 74   |VoidPtrCV, boost|
0x2b16c:    3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x2b17c:    74 3a 3a 61 70 70 6c 79  5f 76 69 73 69 74 6f 72   |t::apply_visitor|
0x2b18c:    5f 75 6e 72 6f 6c 6c 65  64 2a 2c 20 4e 42 46 2c   |_unrolled*, NBF,|
0x2b19c:    20 6c 6f 6e 67 20 69 6e  74 29 20 5b 77 69 74 68   | long int) [with|
0x2b1ac:    20 56 69 73 69 74 6f 72  20 3d 20 62 6f 6f 73 74   | Visitor = boost|
0x2b1bc:    3a 3a 64 65 74 61 69 6c  3a 3a 76 61 72 69 61 6e   |::detail::varian|
0x2b1cc:    74 3a 3a 64 65 73 74 72  6f 79 65 72 2c 20 56 6f   |t::destroyer, Vo|
0x2b1dc:    69 64 50 74 72 43 56 20  3d 20 76 6f 69 64 2a 2c   |idPtrCV = void*,|
0x2b1ec:    20 4e 42 46 20 3d 20 62  6f 6f 73 74 3a 3a 76 61   | NBF = boost::va|
0x2b1fc:    72 69 61 6e 74 3c 62 6f  6f 73 74 3a 3a 73 68 61   |riant<boost::sha|
0x2b20c:    72 65 64 5f 70 74 72 3c  76 6f 69 64 3e 2c 20 62   |red_ptr<void>, b|
0x2b21c:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2b22c:    64 65 74 61 69 6c 3a 3a  66 6f 72 65 69 67 6e 5f   |detail::foreign_|
0x2b23c:    76 6f 69 64 5f 73 68 61  72 65 64 5f 70 74 72 3e   |void_shared_ptr>|
0x2b24c:    3a 3a 68 61 73 5f 66 61  6c 6c 62 61 63 6b 5f 74   |::has_fallback_t|
0x2b25c:    79 70 65 5f 2c 20 74 79  70 65 6e 61 6d 65 20 56   |ype_, typename V|
0x2b26c:    69 73 69 74 6f 72 3a 3a  72 65 73 75 6c 74 5f 74   |isitor::result_t|
0x2b27c:    79 70 65 20 3d 20 76 6f  69 64 5d 00 00 00 00 00   |ype = void].....|
0x2b28c:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b29c:    00 00 00 00                                        |....            |
0x2b2a0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<void, int, boost::function<void(int)> >, boost::signals2::mutex> > >]"
0x2b2b0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2b2c0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2b2d0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2b2e0:    54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x2b2f0:    69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x2b300:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x2b310:    6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x2b320:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x2b330:    61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x2b340:    29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x2b350:    69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x2b360:    65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x2b370:    74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x2b380:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2b390:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2b3a0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2b3b0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2b3c0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2b3d0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2b3e0:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2b3f0:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2b400:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2b410:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 76 6f   |gnals2::slot1<vo|
0x2b420:    69 64 2c 20 69 6e 74 2c  20 62 6f 6f 73 74 3a 3a   |id, int, boost::|
0x2b430:    66 75 6e 63 74 69 6f 6e  3c 76 6f 69 64 28 69 6e   |function<void(in|
0x2b440:    74 29 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |t)> >, boost::si|
0x2b450:    67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 20 3e   |gnals2::mutex> >|
0x2b460:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x2b470:    32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x2b480:    65 64 5f 6c 69 73 74 3c  47 72 6f 75 70 2c 20 47   |ed_list<Group, G|
0x2b490:    72 6f 75 70 43 6f 6d 70  61 72 65 2c 20 56 61 6c   |roupCompare, Val|
0x2b4a0:    75 65 54 79 70 65 3e 20  3d 20 62 6f 6f 73 74 3a   |ueType> = boost:|
0x2b4b0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x2b4c0:    6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x2b4d0:    69 6e 74 2c 20 73 74 64  3a 3a 6c 65 73 73 3c 69   |int, std::less<i|
0x2b4e0:    6e 74 3e 2c 20 62 6f 6f  73 74 3a 3a 73 68 61 72   |nt>, boost::shar|
0x2b4f0:    65 64 5f 70 74 72 3c 62  6f 6f 73 74 3a 3a 73 69   |ed_ptr<boost::si|
0x2b500:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x2b510:    63 6f 6e 6e 65 63 74 69  6f 6e 5f 62 6f 64 79 3c   |connection_body<|
0x2b520:    73 74 64 3a 3a 70 61 69  72 3c 62 6f 6f 73 74 3a   |std::pair<boost:|
0x2b530:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x2b540:    6c 3a 3a 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |l::slot_meta_gro|
0x2b550:    75 70 2c 20 62 6f 6f 73  74 3a 3a 6f 70 74 69 6f   |up, boost::optio|
0x2b560:    6e 61 6c 3c 69 6e 74 3e  20 3e 2c 20 62 6f 6f 73   |nal<int> >, boos|
0x2b570:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 73 6c 6f   |t::signals2::slo|
0x2b580:    74 31 3c 76 6f 69 64 2c  20 69 6e 74 2c 20 62 6f   |t1<void, int, bo|
0x2b590:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 76 6f   |ost::function<vo|
0x2b5a0:    69 64 28 69 6e 74 29 3e  20 3e 2c 20 62 6f 6f 73   |id(int)> >, boos|
0x2b5b0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6d 75 74   |t::signals2::mut|
0x2b5c0:    65 78 3e 20 3e 20 3e 5d  00                        |ex> > >].       |
0x2b5c9:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b5d9:    00 00 00 00 00 00 00 76  6f 69 64 20 62 6f 6f 73   |.......void boos|
0x2b5e9:    74 3a 3a 73 68 61 72 65  64 5f 70 74 72 3c 54 3e   |t::shared_ptr<T>|
0x2b5f9:    3a 3a 72 65 73 65 74 28  59 2a 29 20 5b 77 69 74   |::reset(Y*) [wit|
0x2b609:    68 20 59 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h Y = boost::sig|
0x2b619:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2b629:    69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 76 6f 69 64   |ignal1_impl<void|
0x2b639:    2c 20 69 6e 74 2c 20 62  6f 6f 73 74 3a 3a 73 69   |, int, boost::si|
0x2b649:    67 6e 61 6c 73 32 3a 3a  6f 70 74 69 6f 6e 61 6c   |gnals2::optional|
0x2b659:    5f 6c 61 73 74 5f 76 61  6c 75 65 3c 76 6f 69 64   |_last_value<void|
0x2b669:    3e 2c 20 69 6e 74 2c 20  73 74 64 3a 3a 6c 65 73   |>, int, std::les|
0x2b679:    73 3c 69 6e 74 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |s<int>, boost::f|
0x2b689:    75 6e 63 74 69 6f 6e 3c  76 6f 69 64 28 69 6e 74   |unction<void(int|
0x2b699:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |)>, boost::funct|
0x2b6a9:    69 6f 6e 3c 76 6f 69 64  28 63 6f 6e 73 74 20 62   |ion<void(const b|
0x2b6b9:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2b6c9:    63 6f 6e 6e 65 63 74 69  6f 6e 26 2c 20 69 6e 74   |connection&, int|
0x2b6d9:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |)>, boost::signa|
0x2b6e9:    6c 73 32 3a 3a 6d 75 74  65 78 3e 3a 3a 69 6e 76   |ls2::mutex>::inv|
0x2b6f9:    6f 63 61 74 69 6f 6e 5f  73 74 61 74 65 2c 20 54   |ocation_state, T|
0x2b709:    20 3d 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   | = boost::signal|
0x2b719:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 73 69 67 6e   |s2::detail::sign|
0x2b729:    61 6c 31 5f 69 6d 70 6c  3c 76 6f 69 64 2c 20 69   |al1_impl<void, i|
0x2b739:    6e 74 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |nt, boost::signa|
0x2b749:    6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x2b759:    73 74 5f 76 61 6c 75 65  3c 76 6f 69 64 3e 2c 20   |st_value<void>, |
0x2b769:    69 6e 74 2c 20 73 74 64  3a 3a 6c 65 73 73 3c 69   |int, std::less<i|
0x2b779:    6e 74 3e 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |nt>, boost::func|
0x2b789:    74 69 6f 6e 3c 76 6f 69  64 28 69 6e 74 29 3e 2c   |tion<void(int)>,|
0x2b799:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2b7a9:    3c 76 6f 69 64 28 63 6f  6e 73 74 20 62 6f 6f 73   |<void(const boos|
0x2b7b9:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 63 6f 6e   |t::signals2::con|
0x2b7c9:    6e 65 63 74 69 6f 6e 26  2c 20 69 6e 74 29 3e 2c   |nection&, int)>,|
0x2b7d9:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2b7e9:    3a 3a 6d 75 74 65 78 3e  3a 3a 69 6e 76 6f 63 61   |::mutex>::invoca|
0x2b7f9:    74 69 6f 6e 5f 73 74 61  74 65 5d 00 00 00 00 00   |tion_state].....|
0x2b809:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b819:    00 00 00 00 00 00 00 62  6f 6f 73 74 3a 3a 63 6f   |.......boost::co|
0x2b829:    6e 64 69 74 69 6f 6e 5f  76 61 72 69 61 62 6c 65   |ndition_variable|
0x2b839:    3a 3a 63 6f 6e 64 69 74  69 6f 6e 5f 76 61 72 69   |::condition_vari|
0x2b849:    61 62 6c 65 28 29 00 00  00 00 00 00 00 00 00 00   |able()..........|
0x2b859:    00 00 00 00 00 00 00                               |.......         |
0x2b860:    62 6f 6f 73 74 3a 3a 63  6f 6e 64 69 74 69 6f 6e   |boost::condition|   "boost::condition_variable::~condition_variable()"
0x2b870:    5f 76 61 72 69 61 62 6c  65 3a 3a 7e 63 6f 6e 64   |_variable::~cond|
0x2b880:    69 74 69 6f 6e 5f 76 61  72 69 61 62 6c 65 28 29   |ition_variable()|
0x2b890:    00                                                 |.               |
0x2b891:    62 6f 6f 73 74 3a 3a 6d  75 74 65 78 3a 3a 7e 6d   |boost::mutex::~m|   "boost::mutex::~mutex()"
0x2b8a1:    75 74 65 78 28 29 00                               |utex().         |
0x2b8a8:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b8b8:    00 00 00 00 00 00 00 00  62 6f 6f 73 74 3a 3a 64   |........boost::d|
0x2b8c8:    65 74 61 69 6c 3a 3a 69  6e 74 65 72 72 75 70 74   |etail::interrupt|
0x2b8d8:    69 6f 6e 5f 63 68 65 63  6b 65 72 3a 3a 69 6e 74   |ion_checker::int|
0x2b8e8:    65 72 72 75 70 74 69 6f  6e 5f 63 68 65 63 6b 65   |erruption_checke|
0x2b8f8:    72 28 70 74 68 72 65 61  64 5f 6d 75 74 65 78 5f   |r(pthread_mutex_|
0x2b908:    74 2a 2c 20 70 74 68 72  65 61 64 5f 63 6f 6e 64   |t*, pthread_cond|
0x2b918:    5f 74 2a 29 00 00 00 00  76 6f 69 64 20 62 6f 6f   |_t*)....void boo|
0x2b928:    73 74 3a 3a 63 6f 6e 64  69 74 69 6f 6e 5f 76 61   |st::condition_va|
0x2b938:    72 69 61 62 6c 65 3a 3a  77 61 69 74 28 62 6f 6f   |riable::wait(boo|
0x2b948:    73 74 3a 3a 75 6e 69 71  75 65 5f 6c 6f 63 6b 3c   |st::unique_lock<|
0x2b958:    62 6f 6f 73 74 3a 3a 6d  75 74 65 78 3e 26 29 00   |boost::mutex>&).|
0x2b968:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2b978:    00 00 00 00 00 00 00 00  62 6f 6f 73 74 3a 3a 64   |........boost::d|
0x2b988:    65 74 61 69 6c 3a 3a 69  6e 74 65 72 72 75 70 74   |etail::interrupt|
0x2b998:    69 6f 6e 5f 63 68 65 63  6b 65 72 3a 3a 7e 69 6e   |ion_checker::~in|
0x2b9a8:    74 65 72 72 75 70 74 69  6f 6e 5f 63 68 65 63 6b   |terruption_check|
0x2b9b8:    65 72 28 29 00 00 00 00                            |er()....        |
0x2b9c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>&]"
0x2b9d0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2b9e0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2b9f0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2ba00:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2ba10:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2ba20:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x2ba30:    6c 31 5f 69 6d 70 6c 3c  62 6f 6f 6c 2c 20 43 4e   |l1_impl<bool, CN|
0x2ba40:    6f 64 65 2a 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |ode*, boost::sig|
0x2ba50:    6e 61 6c 73 32 3a 3a 6f  70 74 69 6f 6e 61 6c 5f   |nals2::optional_|
0x2ba60:    6c 61 73 74 5f 76 61 6c  75 65 3c 62 6f 6f 6c 3e   |last_value<bool>|
0x2ba70:    2c 20 69 6e 74 2c 20 73  74 64 3a 3a 6c 65 73 73   |, int, std::less|
0x2ba80:    3c 69 6e 74 3e 2c 20 62  6f 6f 73 74 3a 3a 66 75   |<int>, boost::fu|
0x2ba90:    6e 63 74 69 6f 6e 3c 62  6f 6f 6c 28 43 4e 6f 64   |nction<bool(CNod|
0x2baa0:    65 2a 29 3e 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |e*)>, boost::fun|
0x2bab0:    63 74 69 6f 6e 3c 62 6f  6f 6c 28 63 6f 6e 73 74   |ction<bool(const|
0x2bac0:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2bad0:    3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 26 2c 20 43   |::connection&, C|
0x2bae0:    4e 6f 64 65 2a 29 3e 2c  20 62 6f 6f 73 74 3a 3a   |Node*)>, boost::|
0x2baf0:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2bb00:    2c 20 62 6f 6f 73 74 3a  3a 73 68 61 72 65 64 5f   |, boost::shared_|
0x2bb10:    70 74 72 3c 54 3e 3a 3a  72 65 66 65 72 65 6e 63   |ptr<T>::referenc|
0x2bb20:    65 20 3d 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |e = boost::signa|
0x2bb30:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 73 69 67   |ls2::detail::sig|
0x2bb40:    6e 61 6c 31 5f 69 6d 70  6c 3c 62 6f 6f 6c 2c 20   |nal1_impl<bool, |
0x2bb50:    43 4e 6f 64 65 2a 2c 20  62 6f 6f 73 74 3a 3a 73   |CNode*, boost::s|
0x2bb60:    69 67 6e 61 6c 73 32 3a  3a 6f 70 74 69 6f 6e 61   |ignals2::optiona|
0x2bb70:    6c 5f 6c 61 73 74 5f 76  61 6c 75 65 3c 62 6f 6f   |l_last_value<boo|
0x2bb80:    6c 3e 2c 20 69 6e 74 2c  20 73 74 64 3a 3a 6c 65   |l>, int, std::le|
0x2bb90:    73 73 3c 69 6e 74 3e 2c  20 62 6f 6f 73 74 3a 3a   |ss<int>, boost::|
0x2bba0:    66 75 6e 63 74 69 6f 6e  3c 62 6f 6f 6c 28 43 4e   |function<bool(CN|
0x2bbb0:    6f 64 65 2a 29 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |ode*)>, boost::f|
0x2bbc0:    75 6e 63 74 69 6f 6e 3c  62 6f 6f 6c 28 63 6f 6e   |unction<bool(con|
0x2bbd0:    73 74 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |st boost::signal|
0x2bbe0:    73 32 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 26 2c   |s2::connection&,|
0x2bbf0:    20 43 4e 6f 64 65 2a 29  3e 2c 20 62 6f 6f 73 74   | CNode*)>, boost|
0x2bc00:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x2bc10:    78 3e 26 5d 00                                     |x>&].           |
0x2bc15:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x2bc20:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>&]"
0x2bc30:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2bc40:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2bc50:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2bc60:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2bc70:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2bc80:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x2bc90:    6c 32 5f 69 6d 70 6c 3c  62 6f 6f 6c 2c 20 43 4e   |l2_impl<bool, CN|
0x2bca0:    6f 64 65 2a 2c 20 62 6f  6f 6c 2c 20 62 6f 6f 73   |ode*, bool, boos|
0x2bcb0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6f 70 74   |t::signals2::opt|
0x2bcc0:    69 6f 6e 61 6c 5f 6c 61  73 74 5f 76 61 6c 75 65   |ional_last_value|
0x2bcd0:    3c 62 6f 6f 6c 3e 2c 20  69 6e 74 2c 20 73 74 64   |<bool>, int, std|
0x2bce0:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x2bcf0:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 62 6f 6f   |st::function<boo|
0x2bd00:    6c 28 43 4e 6f 64 65 2a  2c 20 62 6f 6f 6c 29 3e   |l(CNode*, bool)>|
0x2bd10:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2bd20:    6e 3c 62 6f 6f 6c 28 63  6f 6e 73 74 20 62 6f 6f   |n<bool(const boo|
0x2bd30:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 63 6f   |st::signals2::co|
0x2bd40:    6e 6e 65 63 74 69 6f 6e  26 2c 20 43 4e 6f 64 65   |nnection&, CNode|
0x2bd50:    2a 2c 20 62 6f 6f 6c 29  3e 2c 20 62 6f 6f 73 74   |*, bool)>, boost|
0x2bd60:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x2bd70:    78 3e 2c 20 62 6f 6f 73  74 3a 3a 73 68 61 72 65   |x>, boost::share|
0x2bd80:    64 5f 70 74 72 3c 54 3e  3a 3a 72 65 66 65 72 65   |d_ptr<T>::refere|
0x2bd90:    6e 63 65 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |nce = boost::sig|
0x2bda0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2bdb0:    69 67 6e 61 6c 32 5f 69  6d 70 6c 3c 62 6f 6f 6c   |ignal2_impl<bool|
0x2bdc0:    2c 20 43 4e 6f 64 65 2a  2c 20 62 6f 6f 6c 2c 20   |, CNode*, bool, |
0x2bdd0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2bde0:    3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x2bdf0:    61 6c 75 65 3c 62 6f 6f  6c 3e 2c 20 69 6e 74 2c   |alue<bool>, int,|
0x2be00:    20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x2be10:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2be20:    3c 62 6f 6f 6c 28 43 4e  6f 64 65 2a 2c 20 62 6f   |<bool(CNode*, bo|
0x2be30:    6f 6c 29 3e 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |ol)>, boost::fun|
0x2be40:    63 74 69 6f 6e 3c 62 6f  6f 6c 28 63 6f 6e 73 74   |ction<bool(const|
0x2be50:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2be60:    3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 26 2c 20 43   |::connection&, C|
0x2be70:    4e 6f 64 65 2a 2c 20 62  6f 6f 6c 29 3e 2c 20 62   |Node*, bool)>, b|
0x2be80:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2be90:    6d 75 74 65 78 3e 26 5d  00                        |mutex>&].       |
0x2be99:    00 00 00 00 00 00 00                               |.......         |
0x2bea0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex]"
0x2beb0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x2bec0:    67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x2bed0:    2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x2bee0:    70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x2bef0:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x2bf00:    78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x2bf10:    69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x2bf20:    6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x2bf30:    65 63 74 69 6f 6e 73 28  62 6f 6f 6c 2c 20 75 6e   |ections(bool, un|
0x2bf40:    73 69 67 6e 65 64 20 69  6e 74 29 20 63 6f 6e 73   |signed int) cons|
0x2bf50:    74 20 5b 77 69 74 68 20  52 20 3d 20 62 6f 6f 6c   |t [with R = bool|
0x2bf60:    2c 20 54 31 20 3d 20 43  4e 6f 64 65 2a 2c 20 43   |, T1 = CNode*, C|
0x2bf70:    6f 6d 62 69 6e 65 72 20  3d 20 62 6f 6f 73 74 3a   |ombiner = boost:|
0x2bf80:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x2bf90:    6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 62   |nal_last_value<b|
0x2bfa0:    6f 6f 6c 3e 2c 20 47 72  6f 75 70 20 3d 20 69 6e   |ool>, Group = in|
0x2bfb0:    74 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 20   |t, GroupCompare |
0x2bfc0:    3d 20 73 74 64 3a 3a 6c  65 73 73 3c 69 6e 74 3e   |= std::less<int>|
0x2bfd0:    2c 20 53 6c 6f 74 46 75  6e 63 74 69 6f 6e 20 3d   |, SlotFunction =|
0x2bfe0:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2bff0:    3c 62 6f 6f 6c 28 43 4e  6f 64 65 2a 29 3e 2c 20   |<bool(CNode*)>, |
0x2c000:    45 78 74 65 6e 64 65 64  53 6c 6f 74 46 75 6e 63   |ExtendedSlotFunc|
0x2c010:    74 69 6f 6e 20 3d 20 62  6f 6f 73 74 3a 3a 66 75   |tion = boost::fu|
0x2c020:    6e 63 74 69 6f 6e 3c 62  6f 6f 6c 28 63 6f 6e 73   |nction<bool(cons|
0x2c030:    74 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |t boost::signals|
0x2c040:    32 3a 3a 63 6f 6e 6e 65  63 74 69 6f 6e 26 2c 20   |2::connection&, |
0x2c050:    43 4e 6f 64 65 2a 29 3e  2c 20 4d 75 74 65 78 20   |CNode*)>, Mutex |
0x2c060:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2c070:    32 3a 3a 6d 75 74 65 78  5d 00                     |2::mutex].      |
0x2c07a:    00 00 00 00 00 00                                  |......          |
0x2c080:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<bool>, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<bool>&]"
0x2c090:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2c0a0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2c0b0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2c0c0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2c0d0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2c0e0:    32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x2c0f0:    5f 76 61 6c 75 65 3c 62  6f 6f 6c 3e 2c 20 62 6f   |_value<bool>, bo|
0x2c100:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x2c110:    54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x2c120:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2c130:    3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x2c140:    61 6c 75 65 3c 62 6f 6f  6c 3e 26 5d 00            |alue<bool>&].   |
0x2c14d:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2c15d:    00 00 00                                           |...             |
0x2c160:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<bool, CNode*, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*)>, boost::function<bool(const boost::signals2::connection&, CNode*)>, boost::signals2::mutex>::invocation_state]"
0x2c170:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x2c180:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x2c190:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x2c1a0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2c1b0:    69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 62 6f 6f 6c   |ignal1_impl<bool|
0x2c1c0:    2c 20 43 4e 6f 64 65 2a  2c 20 62 6f 6f 73 74 3a   |, CNode*, boost:|
0x2c1d0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x2c1e0:    6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 62   |nal_last_value<b|
0x2c1f0:    6f 6f 6c 3e 2c 20 69 6e  74 2c 20 73 74 64 3a 3a   |ool>, int, std::|
0x2c200:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x2c210:    3a 3a 66 75 6e 63 74 69  6f 6e 3c 62 6f 6f 6c 28   |::function<bool(|
0x2c220:    43 4e 6f 64 65 2a 29 3e  2c 20 62 6f 6f 73 74 3a   |CNode*)>, boost:|
0x2c230:    3a 66 75 6e 63 74 69 6f  6e 3c 62 6f 6f 6c 28 63   |:function<bool(c|
0x2c240:    6f 6e 73 74 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |onst boost::sign|
0x2c250:    61 6c 73 32 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |als2::connection|
0x2c260:    26 2c 20 43 4e 6f 64 65  2a 29 3e 2c 20 62 6f 6f   |&, CNode*)>, boo|
0x2c270:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2c280:    74 65 78 3e 3a 3a 69 6e  76 6f 63 61 74 69 6f 6e   |tex>::invocation|
0x2c290:    5f 73 74 61 74 65 5d 00                            |_state].        |
0x2c298:    00 00 00 00 00 00 00 00                            |........        |
0x2c2a0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >&]"
0x2c2b0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2c2c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2c2d0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2c2e0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2c2f0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2c300:    32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x2c310:    65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x2c320:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x2c330:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x2c340:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2c350:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x2c360:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x2c370:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2c380:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x2c390:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x2c3a0:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x2c3b0:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2c3c0:    6c 73 32 3a 3a 73 6c 6f  74 31 3c 62 6f 6f 6c 2c   |ls2::slot1<bool,|
0x2c3d0:    20 43 4e 6f 64 65 2a 2c  20 62 6f 6f 73 74 3a 3a   | CNode*, boost::|
0x2c3e0:    66 75 6e 63 74 69 6f 6e  3c 62 6f 6f 6c 28 43 4e   |function<bool(CN|
0x2c3f0:    6f 64 65 2a 29 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |ode*)> >, boost:|
0x2c400:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6d 75 74 65 78   |:signals2::mutex|
0x2c410:    3e 20 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 68   |> > >, boost::sh|
0x2c420:    61 72 65 64 5f 70 74 72  3c 54 3e 3a 3a 72 65 66   |ared_ptr<T>::ref|
0x2c430:    65 72 65 6e 63 65 20 3d  20 62 6f 6f 73 74 3a 3a   |erence = boost::|
0x2c440:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2c450:    3a 3a 67 72 6f 75 70 65  64 5f 6c 69 73 74 3c 69   |::grouped_list<i|
0x2c460:    6e 74 2c 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |nt, std::less<in|
0x2c470:    74 3e 2c 20 62 6f 6f 73  74 3a 3a 73 68 61 72 65   |t>, boost::share|
0x2c480:    64 5f 70 74 72 3c 62 6f  6f 73 74 3a 3a 73 69 67   |d_ptr<boost::sig|
0x2c490:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x2c4a0:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x2c4b0:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x2c4c0:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2c4d0:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x2c4e0:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x2c4f0:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x2c500:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x2c510:    31 3c 62 6f 6f 6c 2c 20  43 4e 6f 64 65 2a 2c 20   |1<bool, CNode*, |
0x2c520:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x2c530:    62 6f 6f 6c 28 43 4e 6f  64 65 2a 29 3e 20 3e 2c   |bool(CNode*)> >,|
0x2c540:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2c550:    3a 3a 6d 75 74 65 78 3e  20 3e 20 3e 26 5d 00      |::mutex> > >&]. |
0x2c55f:    00                                                 |.               |
0x2c560:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>&]"
0x2c570:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2c580:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2c590:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2c5a0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2c5b0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2c5c0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2c5d0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2c5e0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2c5f0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2c600:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2c610:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2c620:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2c630:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 62 6f   |gnals2::slot1<bo|
0x2c640:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 73   |ol, CNode*, boos|
0x2c650:    74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 62 6f 6f 6c   |t::function<bool|
0x2c660:    28 43 4e 6f 64 65 2a 29  3e 20 3e 2c 20 62 6f 6f   |(CNode*)> >, boo|
0x2c670:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2c680:    74 65 78 3e 2c 20 62 6f  6f 73 74 3a 3a 73 68 61   |tex>, boost::sha|
0x2c690:    72 65 64 5f 70 74 72 3c  54 3e 3a 3a 72 65 66 65   |red_ptr<T>::refe|
0x2c6a0:    72 65 6e 63 65 20 3d 20  62 6f 6f 73 74 3a 3a 73   |rence = boost::s|
0x2c6b0:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2c6c0:    3a 63 6f 6e 6e 65 63 74  69 6f 6e 5f 62 6f 64 79   |:connection_body|
0x2c6d0:    3c 73 74 64 3a 3a 70 61  69 72 3c 62 6f 6f 73 74   |<std::pair<boost|
0x2c6e0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x2c6f0:    69 6c 3a 3a 73 6c 6f 74  5f 6d 65 74 61 5f 67 72   |il::slot_meta_gr|
0x2c700:    6f 75 70 2c 20 62 6f 6f  73 74 3a 3a 6f 70 74 69   |oup, boost::opti|
0x2c710:    6f 6e 61 6c 3c 69 6e 74  3e 20 3e 2c 20 62 6f 6f   |onal<int> >, boo|
0x2c720:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 73 6c   |st::signals2::sl|
0x2c730:    6f 74 31 3c 62 6f 6f 6c  2c 20 43 4e 6f 64 65 2a   |ot1<bool, CNode*|
0x2c740:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2c750:    6e 3c 62 6f 6f 6c 28 43  4e 6f 64 65 2a 29 3e 20   |n<bool(CNode*)> |
0x2c760:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x2c770:    73 32 3a 3a 6d 75 74 65  78 3e 26 5d 00            |s2::mutex>&].   |
0x2c77d:    00 00 00                                           |...             |
0x2c780:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = bool, T1 = CNode*, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >]"
0x2c790:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x2c7a0:    67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x2c7b0:    2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x2c7c0:    70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x2c7d0:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x2c7e0:    78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x2c7f0:    69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x2c800:    6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x2c810:    65 63 74 69 6f 6e 73 5f  66 72 6f 6d 28 62 6f 6f   |ections_from(boo|
0x2c820:    6c 2c 20 63 6f 6e 73 74  20 74 79 70 65 6e 61 6d   |l, const typenam|
0x2c830:    65 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |e boost::signals|
0x2c840:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x2c850:    6c 31 5f 69 6d 70 6c 3c  52 2c 20 54 31 2c 20 43   |l1_impl<R, T1, C|
0x2c860:    6f 6d 62 69 6e 65 72 2c  20 47 72 6f 75 70 2c 20   |ombiner, Group, |
0x2c870:    47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 53 6c   |GroupCompare, Sl|
0x2c880:    6f 74 46 75 6e 63 74 69  6f 6e 2c 20 45 78 74 65   |otFunction, Exte|
0x2c890:    6e 64 65 64 53 6c 6f 74  46 75 6e 63 74 69 6f 6e   |ndedSlotFunction|
0x2c8a0:    2c 20 4d 75 74 65 78 3e  3a 3a 63 6f 6e 6e 65 63   |, Mutex>::connec|
0x2c8b0:    74 69 6f 6e 5f 6c 69 73  74 5f 74 79 70 65 3a 3a   |tion_list_type::|
0x2c8c0:    69 74 65 72 61 74 6f 72  26 2c 20 75 6e 73 69 67   |iterator&, unsig|
0x2c8d0:    6e 65 64 20 69 6e 74 29  20 63 6f 6e 73 74 20 5b   |ned int) const [|
0x2c8e0:    77 69 74 68 20 52 20 3d  20 62 6f 6f 6c 2c 20 54   |with R = bool, T|
0x2c8f0:    31 20 3d 20 43 4e 6f 64  65 2a 2c 20 43 6f 6d 62   |1 = CNode*, Comb|
0x2c900:    69 6e 65 72 20 3d 20 62  6f 6f 73 74 3a 3a 73 69   |iner = boost::si|
0x2c910:    67 6e 61 6c 73 32 3a 3a  6f 70 74 69 6f 6e 61 6c   |gnals2::optional|
0x2c920:    5f 6c 61 73 74 5f 76 61  6c 75 65 3c 62 6f 6f 6c   |_last_value<bool|
0x2c930:    3e 2c 20 47 72 6f 75 70  20 3d 20 69 6e 74 2c 20   |>, Group = int, |
0x2c940:    47 72 6f 75 70 43 6f 6d  70 61 72 65 20 3d 20 73   |GroupCompare = s|
0x2c950:    74 64 3a 3a 6c 65 73 73  3c 69 6e 74 3e 2c 20 53   |td::less<int>, S|
0x2c960:    6c 6f 74 46 75 6e 63 74  69 6f 6e 20 3d 20 62 6f   |lotFunction = bo|
0x2c970:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 62 6f   |ost::function<bo|
0x2c980:    6f 6c 28 43 4e 6f 64 65  2a 29 3e 2c 20 45 78 74   |ol(CNode*)>, Ext|
0x2c990:    65 6e 64 65 64 53 6c 6f  74 46 75 6e 63 74 69 6f   |endedSlotFunctio|
0x2c9a0:    6e 20 3d 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |n = boost::funct|
0x2c9b0:    69 6f 6e 3c 62 6f 6f 6c  28 63 6f 6e 73 74 20 62   |ion<bool(const b|
0x2c9c0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2c9d0:    63 6f 6e 6e 65 63 74 69  6f 6e 26 2c 20 43 4e 6f   |connection&, CNo|
0x2c9e0:    64 65 2a 29 3e 2c 20 4d  75 74 65 78 20 3d 20 62   |de*)>, Mutex = b|
0x2c9f0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2ca00:    6d 75 74 65 78 2c 20 74  79 70 65 6e 61 6d 65 20   |mutex, typename |
0x2ca10:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2ca20:    3a 64 65 74 61 69 6c 3a  3a 73 69 67 6e 61 6c 31   |:detail::signal1|
0x2ca30:    5f 69 6d 70 6c 3c 52 2c  20 54 31 2c 20 43 6f 6d   |_impl<R, T1, Com|
0x2ca40:    62 69 6e 65 72 2c 20 47  72 6f 75 70 2c 20 47 72   |biner, Group, Gr|
0x2ca50:    6f 75 70 43 6f 6d 70 61  72 65 2c 20 53 6c 6f 74   |oupCompare, Slot|
0x2ca60:    46 75 6e 63 74 69 6f 6e  2c 20 45 78 74 65 6e 64   |Function, Extend|
0x2ca70:    65 64 53 6c 6f 74 46 75  6e 63 74 69 6f 6e 2c 20   |edSlotFunction, |
0x2ca80:    4d 75 74 65 78 3e 3a 3a  63 6f 6e 6e 65 63 74 69   |Mutex>::connecti|
0x2ca90:    6f 6e 5f 6c 69 73 74 5f  74 79 70 65 3a 3a 69 74   |on_list_type::it|
0x2caa0:    65 72 61 74 6f 72 20 3d  20 73 74 64 3a 3a 5f 4c   |erator = std::_L|
0x2cab0:    69 73 74 5f 69 74 65 72  61 74 6f 72 3c 62 6f 6f   |ist_iterator<boo|
0x2cac0:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x2cad0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2cae0:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x2caf0:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x2cb00:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2cb10:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x2cb20:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x2cb30:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x2cb40:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2cb50:    6c 73 32 3a 3a 73 6c 6f  74 31 3c 62 6f 6f 6c 2c   |ls2::slot1<bool,|
0x2cb60:    20 43 4e 6f 64 65 2a 2c  20 62 6f 6f 73 74 3a 3a   | CNode*, boost::|
0x2cb70:    66 75 6e 63 74 69 6f 6e  3c 62 6f 6f 6c 28 43 4e   |function<bool(CN|
0x2cb80:    6f 64 65 2a 29 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |ode*)> >, boost:|
0x2cb90:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6d 75 74 65 78   |:signals2::mutex|
0x2cba0:    3e 20 3e 20 3e 5d 00                               |> > >].         |
0x2cba7:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2cbb7:    00 00 00 00 00 00 00 00  00                        |.........       |
0x2cbc0:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex>]"
0x2cbd0:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x2cbe0:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x2cbf0:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x2cc00:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x2cc10:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x2cc20:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x2cc30:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2cc40:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x2cc50:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x2cc60:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x2cc70:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x2cc80:    31 3c 62 6f 6f 6c 2c 20  43 4e 6f 64 65 2a 2c 20   |1<bool, CNode*, |
0x2cc90:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x2cca0:    62 6f 6f 6c 28 43 4e 6f  64 65 2a 29 3e 20 3e 2c   |bool(CNode*)> >,|
0x2ccb0:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2ccc0:    3a 3a 6d 75 74 65 78 3e  5d 00                     |::mutex>].      |
0x2ccca:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2ccda:    00 00 00 00 00 00                                  |......          |
0x2cce0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x2ccf0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2cd00:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2cd10:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2cd20:    54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x2cd30:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2cd40:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2cd50:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2cd60:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2cd70:    54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x2cd80:    73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x2cd90:    65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x2cda0:    6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x2cdb0:    20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x2cdc0:    70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x2cdd0:    3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x2cde0:    20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x2cdf0:    5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x2ce00:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x2ce10:    6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x2ce20:    64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x2ce30:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2ce40:    3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x2ce50:    2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x2ce60:    6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x2ce70:    3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 31   |:signals2::slot1|
0x2ce80:    3c 62 6f 6f 6c 2c 20 43  4e 6f 64 65 2a 2c 20 62   |<bool, CNode*, b|
0x2ce90:    6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 62   |oost::function<b|
0x2cea0:    6f 6f 6c 28 43 4e 6f 64  65 2a 29 3e 20 3e 2c 20   |ool(CNode*)> >, |
0x2ceb0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2cec0:    3a 6d 75 74 65 78 3e 20  3e 2c 20 62 6f 6f 73 74   |:mutex> >, boost|
0x2ced0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x2cee0:    69 6c 3a 3a 67 72 6f 75  70 65 64 5f 6c 69 73 74   |il::grouped_list|
0x2cef0:    3c 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   |<Group, GroupCom|
0x2cf00:    70 61 72 65 2c 20 56 61  6c 75 65 54 79 70 65 3e   |pare, ValueType>|
0x2cf10:    3a 3a 69 74 65 72 61 74  6f 72 20 3d 20 73 74 64   |::iterator = std|
0x2cf20:    3a 3a 5f 4c 69 73 74 5f  69 74 65 72 61 74 6f 72   |::_List_iterator|
0x2cf30:    3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x2cf40:    74 72 3c 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |tr<boost::signal|
0x2cf50:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 63 6f 6e 6e   |s2::detail::conn|
0x2cf60:    65 63 74 69 6f 6e 5f 62  6f 64 79 3c 73 74 64 3a   |ection_body<std:|
0x2cf70:    3a 70 61 69 72 3c 62 6f  6f 73 74 3a 3a 73 69 67   |:pair<boost::sig|
0x2cf80:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2cf90:    6c 6f 74 5f 6d 65 74 61  5f 67 72 6f 75 70 2c 20   |lot_meta_group, |
0x2cfa0:    62 6f 6f 73 74 3a 3a 6f  70 74 69 6f 6e 61 6c 3c   |boost::optional<|
0x2cfb0:    69 6e 74 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |int> >, boost::s|
0x2cfc0:    69 67 6e 61 6c 73 32 3a  3a 73 6c 6f 74 31 3c 62   |ignals2::slot1<b|
0x2cfd0:    6f 6f 6c 2c 20 43 4e 6f  64 65 2a 2c 20 62 6f 6f   |ool, CNode*, boo|
0x2cfe0:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 62 6f 6f   |st::function<boo|
0x2cff0:    6c 28 43 4e 6f 64 65 2a  29 3e 20 3e 2c 20 62 6f   |l(CNode*)> >, bo|
0x2d000:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6d   |ost::signals2::m|
0x2d010:    75 74 65 78 3e 20 3e 20  3e 2c 20 62 6f 6f 73 74   |utex> > >, boost|
0x2d020:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x2d030:    69 6c 3a 3a 67 72 6f 75  70 65 64 5f 6c 69 73 74   |il::grouped_list|
0x2d040:    3c 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   |<Group, GroupCom|
0x2d050:    70 61 72 65 2c 20 56 61  6c 75 65 54 79 70 65 3e   |pare, ValueType>|
0x2d060:    3a 3a 67 72 6f 75 70 5f  6b 65 79 5f 74 79 70 65   |::group_key_type|
0x2d070:    20 3d 20 73 74 64 3a 3a  70 61 69 72 3c 62 6f 6f   | = std::pair<boo|
0x2d080:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x2d090:    74 61 69 6c 3a 3a 73 6c  6f 74 5f 6d 65 74 61 5f   |tail::slot_meta_|
0x2d0a0:    67 72 6f 75 70 2c 20 62  6f 6f 73 74 3a 3a 6f 70   |group, boost::op|
0x2d0b0:    74 69 6f 6e 61 6c 3c 69  6e 74 3e 20 3e 5d 00      |tional<int> >]. |
0x2d0bf:    00 76 6f 69 64 20 62 6f  6f 73 74 3a 3a 73 68 61   |.void boost::sha|
0x2d0cf:    72 65 64 5f 70 74 72 3c  54 3e 3a 3a 72 65 73 65   |red_ptr<T>::rese|
0x2d0df:    74 28 59 2a 29 20 5b 77  69 74 68 20 59 20 3d 20   |t(Y*) [with Y = |
0x2d0ef:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2d0ff:    3a 64 65 74 61 69 6c 3a  3a 73 69 67 6e 61 6c 31   |:detail::signal1|
0x2d10f:    5f 69 6d 70 6c 3c 62 6f  6f 6c 2c 20 43 4e 6f 64   |_impl<bool, CNod|
0x2d11f:    65 2a 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |e*, boost::signa|
0x2d12f:    6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x2d13f:    73 74 5f 76 61 6c 75 65  3c 62 6f 6f 6c 3e 2c 20   |st_value<bool>, |
0x2d14f:    69 6e 74 2c 20 73 74 64  3a 3a 6c 65 73 73 3c 69   |int, std::less<i|
0x2d15f:    6e 74 3e 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |nt>, boost::func|
0x2d16f:    74 69 6f 6e 3c 62 6f 6f  6c 28 43 4e 6f 64 65 2a   |tion<bool(CNode*|
0x2d17f:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |)>, boost::funct|
0x2d18f:    69 6f 6e 3c 62 6f 6f 6c  28 63 6f 6e 73 74 20 62   |ion<bool(const b|
0x2d19f:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2d1af:    63 6f 6e 6e 65 63 74 69  6f 6e 26 2c 20 43 4e 6f   |connection&, CNo|
0x2d1bf:    64 65 2a 29 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |de*)>, boost::si|
0x2d1cf:    67 6e 61 6c 73 32 3a 3a  6d 75 74 65 78 3e 3a 3a   |gnals2::mutex>::|
0x2d1df:    69 6e 76 6f 63 61 74 69  6f 6e 5f 73 74 61 74 65   |invocation_state|
0x2d1ef:    2c 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |, T = boost::sig|
0x2d1ff:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2d20f:    69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 62 6f 6f 6c   |ignal1_impl<bool|
0x2d21f:    2c 20 43 4e 6f 64 65 2a  2c 20 62 6f 6f 73 74 3a   |, CNode*, boost:|
0x2d22f:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x2d23f:    6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 62   |nal_last_value<b|
0x2d24f:    6f 6f 6c 3e 2c 20 69 6e  74 2c 20 73 74 64 3a 3a   |ool>, int, std::|
0x2d25f:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x2d26f:    3a 3a 66 75 6e 63 74 69  6f 6e 3c 62 6f 6f 6c 28   |::function<bool(|
0x2d27f:    43 4e 6f 64 65 2a 29 3e  2c 20 62 6f 6f 73 74 3a   |CNode*)>, boost:|
0x2d28f:    3a 66 75 6e 63 74 69 6f  6e 3c 62 6f 6f 6c 28 63   |:function<bool(c|
0x2d29f:    6f 6e 73 74 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |onst boost::sign|
0x2d2af:    61 6c 73 32 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |als2::connection|
0x2d2bf:    26 2c 20 43 4e 6f 64 65  2a 29 3e 2c 20 62 6f 6f   |&, CNode*)>, boo|
0x2d2cf:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2d2df:    74 65 78 3e 3a 3a 69 6e  76 6f 63 61 74 69 6f 6e   |tex>::invocation|
0x2d2ef:    5f 73 74 61 74 65 5d 00  00 00 00 00 00 00 00 00   |_state].........|
0x2d2ff:    00                                                 |.               |
0x2d300:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<bool, CNode*, boost::function<bool(CNode*)> >, boost::signals2::mutex> > >]"
0x2d310:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2d320:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2d330:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2d340:    54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x2d350:    69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x2d360:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x2d370:    6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x2d380:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x2d390:    61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x2d3a0:    29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x2d3b0:    69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x2d3c0:    65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x2d3d0:    74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x2d3e0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2d3f0:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2d400:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2d410:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2d420:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2d430:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2d440:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2d450:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2d460:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2d470:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 62 6f   |gnals2::slot1<bo|
0x2d480:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 73   |ol, CNode*, boos|
0x2d490:    74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 62 6f 6f 6c   |t::function<bool|
0x2d4a0:    28 43 4e 6f 64 65 2a 29  3e 20 3e 2c 20 62 6f 6f   |(CNode*)> >, boo|
0x2d4b0:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2d4c0:    74 65 78 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |tex> >, boost::s|
0x2d4d0:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2d4e0:    3a 67 72 6f 75 70 65 64  5f 6c 69 73 74 3c 47 72   |:grouped_list<Gr|
0x2d4f0:    6f 75 70 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |oup, GroupCompar|
0x2d500:    65 2c 20 56 61 6c 75 65  54 79 70 65 3e 20 3d 20   |e, ValueType> = |
0x2d510:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2d520:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2d530:    5f 6c 69 73 74 3c 69 6e  74 2c 20 73 74 64 3a 3a   |_list<int, std::|
0x2d540:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x2d550:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 62 6f 6f   |::shared_ptr<boo|
0x2d560:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x2d570:    74 61 69 6c 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |tail::connection|
0x2d580:    5f 62 6f 64 79 3c 73 74  64 3a 3a 70 61 69 72 3c   |_body<std::pair<|
0x2d590:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2d5a0:    3a 64 65 74 61 69 6c 3a  3a 73 6c 6f 74 5f 6d 65   |:detail::slot_me|
0x2d5b0:    74 61 5f 67 72 6f 75 70  2c 20 62 6f 6f 73 74 3a   |ta_group, boost:|
0x2d5c0:    3a 6f 70 74 69 6f 6e 61  6c 3c 69 6e 74 3e 20 3e   |:optional<int> >|
0x2d5d0:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x2d5e0:    32 3a 3a 73 6c 6f 74 31  3c 62 6f 6f 6c 2c 20 43   |2::slot1<bool, C|
0x2d5f0:    4e 6f 64 65 2a 2c 20 62  6f 6f 73 74 3a 3a 66 75   |Node*, boost::fu|
0x2d600:    6e 63 74 69 6f 6e 3c 62  6f 6f 6c 28 43 4e 6f 64   |nction<bool(CNod|
0x2d610:    65 2a 29 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |e*)> >, boost::s|
0x2d620:    69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 3e 20   |ignals2::mutex> |
0x2d630:    3e 20 3e 5d 00                                     |> >].           |
0x2d635:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x2d640:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections(bool, unsigned int) const [with R = bool, T1 = CNode*, T2 = bool, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*, bool)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, Mutex = boost::signals2::mutex]"
0x2d650:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x2d660:    67 6e 61 6c 32 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal2_impl<R, T1|
0x2d670:    2c 20 54 32 2c 20 43 6f  6d 62 69 6e 65 72 2c 20   |, T2, Combiner, |
0x2d680:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x2d690:    61 72 65 2c 20 53 6c 6f  74 46 75 6e 63 74 69 6f   |are, SlotFunctio|
0x2d6a0:    6e 2c 20 45 78 74 65 6e  64 65 64 53 6c 6f 74 46   |n, ExtendedSlotF|
0x2d6b0:    75 6e 63 74 69 6f 6e 2c  20 4d 75 74 65 78 3e 3a   |unction, Mutex>:|
0x2d6c0:    3a 6e 6f 6c 6f 63 6b 5f  63 6c 65 61 6e 75 70 5f   |:nolock_cleanup_|
0x2d6d0:    63 6f 6e 6e 65 63 74 69  6f 6e 73 28 62 6f 6f 6c   |connections(bool|
0x2d6e0:    2c 20 75 6e 73 69 67 6e  65 64 20 69 6e 74 29 20   |, unsigned int) |
0x2d6f0:    63 6f 6e 73 74 20 5b 77  69 74 68 20 52 20 3d 20   |const [with R = |
0x2d700:    62 6f 6f 6c 2c 20 54 31  20 3d 20 43 4e 6f 64 65   |bool, T1 = CNode|
0x2d710:    2a 2c 20 54 32 20 3d 20  62 6f 6f 6c 2c 20 43 6f   |*, T2 = bool, Co|
0x2d720:    6d 62 69 6e 65 72 20 3d  20 62 6f 6f 73 74 3a 3a   |mbiner = boost::|
0x2d730:    73 69 67 6e 61 6c 73 32  3a 3a 6f 70 74 69 6f 6e   |signals2::option|
0x2d740:    61 6c 5f 6c 61 73 74 5f  76 61 6c 75 65 3c 62 6f   |al_last_value<bo|
0x2d750:    6f 6c 3e 2c 20 47 72 6f  75 70 20 3d 20 69 6e 74   |ol>, Group = int|
0x2d760:    2c 20 47 72 6f 75 70 43  6f 6d 70 61 72 65 20 3d   |, GroupCompare =|
0x2d770:    20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x2d780:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 20 3d 20   | SlotFunction = |
0x2d790:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x2d7a0:    62 6f 6f 6c 28 43 4e 6f  64 65 2a 2c 20 62 6f 6f   |bool(CNode*, boo|
0x2d7b0:    6c 29 3e 2c 20 45 78 74  65 6e 64 65 64 53 6c 6f   |l)>, ExtendedSlo|
0x2d7c0:    74 46 75 6e 63 74 69 6f  6e 20 3d 20 62 6f 6f 73   |tFunction = boos|
0x2d7d0:    74 3a 3a 66 75 6e 63 74  69 6f 6e 3c 62 6f 6f 6c   |t::function<bool|
0x2d7e0:    28 63 6f 6e 73 74 20 62  6f 6f 73 74 3a 3a 73 69   |(const boost::si|
0x2d7f0:    67 6e 61 6c 73 32 3a 3a  63 6f 6e 6e 65 63 74 69   |gnals2::connecti|
0x2d800:    6f 6e 26 2c 20 43 4e 6f  64 65 2a 2c 20 62 6f 6f   |on&, CNode*, boo|
0x2d810:    6c 29 3e 2c 20 4d 75 74  65 78 20 3d 20 62 6f 6f   |l)>, Mutex = boo|
0x2d820:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2d830:    74 65 78 5d 00                                     |tex].           |
0x2d835:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x2d840:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal2_impl<bool, CNode*, bool, boost::signals2::optional_last_value<bool>, int, std::less<int>, boost::function<bool(CNode*, bool)>, boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, boost::signals2::mutex>::invocation_state]"
0x2d850:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x2d860:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x2d870:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x2d880:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2d890:    69 67 6e 61 6c 32 5f 69  6d 70 6c 3c 62 6f 6f 6c   |ignal2_impl<bool|
0x2d8a0:    2c 20 43 4e 6f 64 65 2a  2c 20 62 6f 6f 6c 2c 20   |, CNode*, bool, |
0x2d8b0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2d8c0:    3a 6f 70 74 69 6f 6e 61  6c 5f 6c 61 73 74 5f 76   |:optional_last_v|
0x2d8d0:    61 6c 75 65 3c 62 6f 6f  6c 3e 2c 20 69 6e 74 2c   |alue<bool>, int,|
0x2d8e0:    20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x2d8f0:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2d900:    3c 62 6f 6f 6c 28 43 4e  6f 64 65 2a 2c 20 62 6f   |<bool(CNode*, bo|
0x2d910:    6f 6c 29 3e 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |ol)>, boost::fun|
0x2d920:    63 74 69 6f 6e 3c 62 6f  6f 6c 28 63 6f 6e 73 74   |ction<bool(const|
0x2d930:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2d940:    3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 26 2c 20 43   |::connection&, C|
0x2d950:    4e 6f 64 65 2a 2c 20 62  6f 6f 6c 29 3e 2c 20 62   |Node*, bool)>, b|
0x2d960:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2d970:    6d 75 74 65 78 3e 3a 3a  69 6e 76 6f 63 61 74 69   |mutex>::invocati|
0x2d980:    6f 6e 5f 73 74 61 74 65  5d 00                     |on_state].      |
0x2d98a:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d99a:    00 00 00 00 00 00                                  |......          |
0x2d9a0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >&]"
0x2d9b0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2d9c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2d9d0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2d9e0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2d9f0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2da00:    32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x2da10:    65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x2da20:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x2da30:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x2da40:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2da50:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x2da60:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x2da70:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2da80:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x2da90:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x2daa0:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x2dab0:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2dac0:    6c 73 32 3a 3a 73 6c 6f  74 32 3c 62 6f 6f 6c 2c   |ls2::slot2<bool,|
0x2dad0:    20 43 4e 6f 64 65 2a 2c  20 62 6f 6f 6c 2c 20 62   | CNode*, bool, b|
0x2dae0:    6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 62   |oost::function<b|
0x2daf0:    6f 6f 6c 28 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ool(CNode*, bool|
0x2db00:    29 3e 20 3e 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |)> >, boost::sig|
0x2db10:    6e 61 6c 73 32 3a 3a 6d  75 74 65 78 3e 20 3e 20   |nals2::mutex> > |
0x2db20:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |>, boost::shared|
0x2db30:    5f 70 74 72 3c 54 3e 3a  3a 72 65 66 65 72 65 6e   |_ptr<T>::referen|
0x2db40:    63 65 20 3d 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |ce = boost::sign|
0x2db50:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 67 72   |als2::detail::gr|
0x2db60:    6f 75 70 65 64 5f 6c 69  73 74 3c 69 6e 74 2c 20   |ouped_list<int, |
0x2db70:    73 74 64 3a 3a 6c 65 73  73 3c 69 6e 74 3e 2c 20   |std::less<int>, |
0x2db80:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2db90:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2dba0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2dbb0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2dbc0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2dbd0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2dbe0:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2dbf0:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2dc00:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2dc10:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 62 6f   |gnals2::slot2<bo|
0x2dc20:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ol, CNode*, bool|
0x2dc30:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2dc40:    6e 3c 62 6f 6f 6c 28 43  4e 6f 64 65 2a 2c 20 62   |n<bool(CNode*, b|
0x2dc50:    6f 6f 6c 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |ool)> >, boost::|
0x2dc60:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2dc70:    20 3e 20 3e 26 5d 00                               | > >&].         |
0x2dc77:    00 00 00 00 00 00 00 00  00                        |.........       |
0x2dc80:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>&]"
0x2dc90:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2dca0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2dcb0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2dcc0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2dcd0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2dce0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2dcf0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2dd00:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2dd10:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2dd20:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2dd30:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2dd40:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2dd50:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 62 6f   |gnals2::slot2<bo|
0x2dd60:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ol, CNode*, bool|
0x2dd70:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2dd80:    6e 3c 62 6f 6f 6c 28 43  4e 6f 64 65 2a 2c 20 62   |n<bool(CNode*, b|
0x2dd90:    6f 6f 6c 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |ool)> >, boost::|
0x2dda0:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2ddb0:    2c 20 62 6f 6f 73 74 3a  3a 73 68 61 72 65 64 5f   |, boost::shared_|
0x2ddc0:    70 74 72 3c 54 3e 3a 3a  72 65 66 65 72 65 6e 63   |ptr<T>::referenc|
0x2ddd0:    65 20 3d 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |e = boost::signa|
0x2dde0:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 63 6f 6e   |ls2::detail::con|
0x2ddf0:    6e 65 63 74 69 6f 6e 5f  62 6f 64 79 3c 73 74 64   |nection_body<std|
0x2de00:    3a 3a 70 61 69 72 3c 62  6f 6f 73 74 3a 3a 73 69   |::pair<boost::si|
0x2de10:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x2de20:    73 6c 6f 74 5f 6d 65 74  61 5f 67 72 6f 75 70 2c   |slot_meta_group,|
0x2de30:    20 62 6f 6f 73 74 3a 3a  6f 70 74 69 6f 6e 61 6c   | boost::optional|
0x2de40:    3c 69 6e 74 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |<int> >, boost::|
0x2de50:    73 69 67 6e 61 6c 73 32  3a 3a 73 6c 6f 74 32 3c   |signals2::slot2<|
0x2de60:    62 6f 6f 6c 2c 20 43 4e  6f 64 65 2a 2c 20 62 6f   |bool, CNode*, bo|
0x2de70:    6f 6c 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |ol, boost::funct|
0x2de80:    69 6f 6e 3c 62 6f 6f 6c  28 43 4e 6f 64 65 2a 2c   |ion<bool(CNode*,|
0x2de90:    20 62 6f 6f 6c 29 3e 20  3e 2c 20 62 6f 6f 73 74   | bool)> >, boost|
0x2dea0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x2deb0:    78 3e 26 5d 00                                     |x>&].           |
0x2deb5:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x2dec0:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = bool, T1 = CNode*, T2 = bool, Combiner = boost::signals2::optional_last_value<bool>, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<bool(CNode*, bool)>, ExtendedSlotFunction = boost::function<bool(const boost::signals2::connection&, CNode*, bool)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal2_impl<R, T1, T2, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >]"
0x2ded0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x2dee0:    67 6e 61 6c 32 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal2_impl<R, T1|
0x2def0:    2c 20 54 32 2c 20 43 6f  6d 62 69 6e 65 72 2c 20   |, T2, Combiner, |
0x2df00:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x2df10:    61 72 65 2c 20 53 6c 6f  74 46 75 6e 63 74 69 6f   |are, SlotFunctio|
0x2df20:    6e 2c 20 45 78 74 65 6e  64 65 64 53 6c 6f 74 46   |n, ExtendedSlotF|
0x2df30:    75 6e 63 74 69 6f 6e 2c  20 4d 75 74 65 78 3e 3a   |unction, Mutex>:|
0x2df40:    3a 6e 6f 6c 6f 63 6b 5f  63 6c 65 61 6e 75 70 5f   |:nolock_cleanup_|
0x2df50:    63 6f 6e 6e 65 63 74 69  6f 6e 73 5f 66 72 6f 6d   |connections_from|
0x2df60:    28 62 6f 6f 6c 2c 20 63  6f 6e 73 74 20 74 79 70   |(bool, const typ|
0x2df70:    65 6e 61 6d 65 20 62 6f  6f 73 74 3a 3a 73 69 67   |ename boost::sig|
0x2df80:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2df90:    69 67 6e 61 6c 32 5f 69  6d 70 6c 3c 52 2c 20 54   |ignal2_impl<R, T|
0x2dfa0:    31 2c 20 54 32 2c 20 43  6f 6d 62 69 6e 65 72 2c   |1, T2, Combiner,|
0x2dfb0:    20 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   | Group, GroupCom|
0x2dfc0:    70 61 72 65 2c 20 53 6c  6f 74 46 75 6e 63 74 69   |pare, SlotFuncti|
0x2dfd0:    6f 6e 2c 20 45 78 74 65  6e 64 65 64 53 6c 6f 74   |on, ExtendedSlot|
0x2dfe0:    46 75 6e 63 74 69 6f 6e  2c 20 4d 75 74 65 78 3e   |Function, Mutex>|
0x2dff0:    3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 5f 6c 69 73   |::connection_lis|
0x2e000:    74 5f 74 79 70 65 3a 3a  69 74 65 72 61 74 6f 72   |t_type::iterator|
0x2e010:    26 2c 20 75 6e 73 69 67  6e 65 64 20 69 6e 74 29   |&, unsigned int)|
0x2e020:    20 63 6f 6e 73 74 20 5b  77 69 74 68 20 52 20 3d   | const [with R =|
0x2e030:    20 62 6f 6f 6c 2c 20 54  31 20 3d 20 43 4e 6f 64   | bool, T1 = CNod|
0x2e040:    65 2a 2c 20 54 32 20 3d  20 62 6f 6f 6c 2c 20 43   |e*, T2 = bool, C|
0x2e050:    6f 6d 62 69 6e 65 72 20  3d 20 62 6f 6f 73 74 3a   |ombiner = boost:|
0x2e060:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x2e070:    6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 62   |nal_last_value<b|
0x2e080:    6f 6f 6c 3e 2c 20 47 72  6f 75 70 20 3d 20 69 6e   |ool>, Group = in|
0x2e090:    74 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 20   |t, GroupCompare |
0x2e0a0:    3d 20 73 74 64 3a 3a 6c  65 73 73 3c 69 6e 74 3e   |= std::less<int>|
0x2e0b0:    2c 20 53 6c 6f 74 46 75  6e 63 74 69 6f 6e 20 3d   |, SlotFunction =|
0x2e0c0:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2e0d0:    3c 62 6f 6f 6c 28 43 4e  6f 64 65 2a 2c 20 62 6f   |<bool(CNode*, bo|
0x2e0e0:    6f 6c 29 3e 2c 20 45 78  74 65 6e 64 65 64 53 6c   |ol)>, ExtendedSl|
0x2e0f0:    6f 74 46 75 6e 63 74 69  6f 6e 20 3d 20 62 6f 6f   |otFunction = boo|
0x2e100:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 62 6f 6f   |st::function<boo|
0x2e110:    6c 28 63 6f 6e 73 74 20  62 6f 6f 73 74 3a 3a 73   |l(const boost::s|
0x2e120:    69 67 6e 61 6c 73 32 3a  3a 63 6f 6e 6e 65 63 74   |ignals2::connect|
0x2e130:    69 6f 6e 26 2c 20 43 4e  6f 64 65 2a 2c 20 62 6f   |ion&, CNode*, bo|
0x2e140:    6f 6c 29 3e 2c 20 4d 75  74 65 78 20 3d 20 62 6f   |ol)>, Mutex = bo|
0x2e150:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6d   |ost::signals2::m|
0x2e160:    75 74 65 78 2c 20 74 79  70 65 6e 61 6d 65 20 62   |utex, typename b|
0x2e170:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2e180:    64 65 74 61 69 6c 3a 3a  73 69 67 6e 61 6c 32 5f   |detail::signal2_|
0x2e190:    69 6d 70 6c 3c 52 2c 20  54 31 2c 20 54 32 2c 20   |impl<R, T1, T2, |
0x2e1a0:    43 6f 6d 62 69 6e 65 72  2c 20 47 72 6f 75 70 2c   |Combiner, Group,|
0x2e1b0:    20 47 72 6f 75 70 43 6f  6d 70 61 72 65 2c 20 53   | GroupCompare, S|
0x2e1c0:    6c 6f 74 46 75 6e 63 74  69 6f 6e 2c 20 45 78 74   |lotFunction, Ext|
0x2e1d0:    65 6e 64 65 64 53 6c 6f  74 46 75 6e 63 74 69 6f   |endedSlotFunctio|
0x2e1e0:    6e 2c 20 4d 75 74 65 78  3e 3a 3a 63 6f 6e 6e 65   |n, Mutex>::conne|
0x2e1f0:    63 74 69 6f 6e 5f 6c 69  73 74 5f 74 79 70 65 3a   |ction_list_type:|
0x2e200:    3a 69 74 65 72 61 74 6f  72 20 3d 20 73 74 64 3a   |:iterator = std:|
0x2e210:    3a 5f 4c 69 73 74 5f 69  74 65 72 61 74 6f 72 3c   |:_List_iterator<|
0x2e220:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2e230:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2e240:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2e250:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2e260:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2e270:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2e280:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2e290:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2e2a0:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2e2b0:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 62 6f   |gnals2::slot2<bo|
0x2e2c0:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ol, CNode*, bool|
0x2e2d0:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2e2e0:    6e 3c 62 6f 6f 6c 28 43  4e 6f 64 65 2a 2c 20 62   |n<bool(CNode*, b|
0x2e2f0:    6f 6f 6c 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |ool)> >, boost::|
0x2e300:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2e310:    20 3e 20 3e 5d 00                                  | > >].          |
0x2e316:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x2e320:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex>]"
0x2e330:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x2e340:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x2e350:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x2e360:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x2e370:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x2e380:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x2e390:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2e3a0:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x2e3b0:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x2e3c0:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x2e3d0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x2e3e0:    32 3c 62 6f 6f 6c 2c 20  43 4e 6f 64 65 2a 2c 20   |2<bool, CNode*, |
0x2e3f0:    62 6f 6f 6c 2c 20 62 6f  6f 73 74 3a 3a 66 75 6e   |bool, boost::fun|
0x2e400:    63 74 69 6f 6e 3c 62 6f  6f 6c 28 43 4e 6f 64 65   |ction<bool(CNode|
0x2e410:    2a 2c 20 62 6f 6f 6c 29  3e 20 3e 2c 20 62 6f 6f   |*, bool)> >, boo|
0x2e420:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2e430:    74 65 78 3e 5d 00                                  |tex>].          |
0x2e436:    00 00 00 00 00 00 00 00  00 00                     |..........      |
0x2e440:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x2e450:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2e460:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2e470:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2e480:    54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x2e490:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2e4a0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2e4b0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2e4c0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2e4d0:    54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x2e4e0:    73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x2e4f0:    65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x2e500:    6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x2e510:    20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x2e520:    70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x2e530:    3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x2e540:    20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x2e550:    5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x2e560:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x2e570:    6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x2e580:    64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x2e590:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2e5a0:    3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x2e5b0:    2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x2e5c0:    6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x2e5d0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 32   |:signals2::slot2|
0x2e5e0:    3c 62 6f 6f 6c 2c 20 43  4e 6f 64 65 2a 2c 20 62   |<bool, CNode*, b|
0x2e5f0:    6f 6f 6c 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |ool, boost::func|
0x2e600:    74 69 6f 6e 3c 62 6f 6f  6c 28 43 4e 6f 64 65 2a   |tion<bool(CNode*|
0x2e610:    2c 20 62 6f 6f 6c 29 3e  20 3e 2c 20 62 6f 6f 73   |, bool)> >, boos|
0x2e620:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6d 75 74   |t::signals2::mut|
0x2e630:    65 78 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |ex> >, boost::si|
0x2e640:    67 6e 61 6c 73 32 3a 3a  64 65 74 61 69 6c 3a 3a   |gnals2::detail::|
0x2e650:    67 72 6f 75 70 65 64 5f  6c 69 73 74 3c 47 72 6f   |grouped_list<Gro|
0x2e660:    75 70 2c 20 47 72 6f 75  70 43 6f 6d 70 61 72 65   |up, GroupCompare|
0x2e670:    2c 20 56 61 6c 75 65 54  79 70 65 3e 3a 3a 69 74   |, ValueType>::it|
0x2e680:    65 72 61 74 6f 72 20 3d  20 73 74 64 3a 3a 5f 4c   |erator = std::_L|
0x2e690:    69 73 74 5f 69 74 65 72  61 74 6f 72 3c 62 6f 6f   |ist_iterator<boo|
0x2e6a0:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x2e6b0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2e6c0:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x2e6d0:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x2e6e0:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2e6f0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x2e700:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x2e710:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x2e720:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2e730:    6c 73 32 3a 3a 73 6c 6f  74 32 3c 62 6f 6f 6c 2c   |ls2::slot2<bool,|
0x2e740:    20 43 4e 6f 64 65 2a 2c  20 62 6f 6f 6c 2c 20 62   | CNode*, bool, b|
0x2e750:    6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 62   |oost::function<b|
0x2e760:    6f 6f 6c 28 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ool(CNode*, bool|
0x2e770:    29 3e 20 3e 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |)> >, boost::sig|
0x2e780:    6e 61 6c 73 32 3a 3a 6d  75 74 65 78 3e 20 3e 20   |nals2::mutex> > |
0x2e790:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x2e7a0:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 67 72 6f 75   |s2::detail::grou|
0x2e7b0:    70 65 64 5f 6c 69 73 74  3c 47 72 6f 75 70 2c 20   |ped_list<Group, |
0x2e7c0:    47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 56 61   |GroupCompare, Va|
0x2e7d0:    6c 75 65 54 79 70 65 3e  3a 3a 67 72 6f 75 70 5f   |lueType>::group_|
0x2e7e0:    6b 65 79 5f 74 79 70 65  20 3d 20 73 74 64 3a 3a   |key_type = std::|
0x2e7f0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2e800:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2e810:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2e820:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2e830:    6e 74 3e 20 3e 5d 00                               |nt> >].         |
0x2e837:    00 00 00 00 00 00 00 00  00 76 6f 69 64 20 62 6f   |.........void bo|
0x2e847:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x2e857:    54 3e 3a 3a 72 65 73 65  74 28 59 2a 29 20 5b 77   |T>::reset(Y*) [w|
0x2e867:    69 74 68 20 59 20 3d 20  62 6f 6f 73 74 3a 3a 73   |ith Y = boost::s|
0x2e877:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2e887:    3a 73 69 67 6e 61 6c 32  5f 69 6d 70 6c 3c 62 6f   |:signal2_impl<bo|
0x2e897:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ol, CNode*, bool|
0x2e8a7:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x2e8b7:    32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x2e8c7:    5f 76 61 6c 75 65 3c 62  6f 6f 6c 3e 2c 20 69 6e   |_value<bool>, in|
0x2e8d7:    74 2c 20 73 74 64 3a 3a  6c 65 73 73 3c 69 6e 74   |t, std::less<int|
0x2e8e7:    3e 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |>, boost::functi|
0x2e8f7:    6f 6e 3c 62 6f 6f 6c 28  43 4e 6f 64 65 2a 2c 20   |on<bool(CNode*, |
0x2e907:    62 6f 6f 6c 29 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |bool)>, boost::f|
0x2e917:    75 6e 63 74 69 6f 6e 3c  62 6f 6f 6c 28 63 6f 6e   |unction<bool(con|
0x2e927:    73 74 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |st boost::signal|
0x2e937:    73 32 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 26 2c   |s2::connection&,|
0x2e947:    20 43 4e 6f 64 65 2a 2c  20 62 6f 6f 6c 29 3e 2c   | CNode*, bool)>,|
0x2e957:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2e967:    3a 3a 6d 75 74 65 78 3e  3a 3a 69 6e 76 6f 63 61   |::mutex>::invoca|
0x2e977:    74 69 6f 6e 5f 73 74 61  74 65 2c 20 54 20 3d 20   |tion_state, T = |
0x2e987:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2e997:    3a 64 65 74 61 69 6c 3a  3a 73 69 67 6e 61 6c 32   |:detail::signal2|
0x2e9a7:    5f 69 6d 70 6c 3c 62 6f  6f 6c 2c 20 43 4e 6f 64   |_impl<bool, CNod|
0x2e9b7:    65 2a 2c 20 62 6f 6f 6c  2c 20 62 6f 6f 73 74 3a   |e*, bool, boost:|
0x2e9c7:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6f 70 74 69 6f   |:signals2::optio|
0x2e9d7:    6e 61 6c 5f 6c 61 73 74  5f 76 61 6c 75 65 3c 62   |nal_last_value<b|
0x2e9e7:    6f 6f 6c 3e 2c 20 69 6e  74 2c 20 73 74 64 3a 3a   |ool>, int, std::|
0x2e9f7:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x2ea07:    3a 3a 66 75 6e 63 74 69  6f 6e 3c 62 6f 6f 6c 28   |::function<bool(|
0x2ea17:    43 4e 6f 64 65 2a 2c 20  62 6f 6f 6c 29 3e 2c 20   |CNode*, bool)>, |
0x2ea27:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x2ea37:    62 6f 6f 6c 28 63 6f 6e  73 74 20 62 6f 6f 73 74   |bool(const boost|
0x2ea47:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 63 6f 6e 6e   |::signals2::conn|
0x2ea57:    65 63 74 69 6f 6e 26 2c  20 43 4e 6f 64 65 2a 2c   |ection&, CNode*,|
0x2ea67:    20 62 6f 6f 6c 29 3e 2c  20 62 6f 6f 73 74 3a 3a   | bool)>, boost::|
0x2ea77:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2ea87:    3a 3a 69 6e 76 6f 63 61  74 69 6f 6e 5f 73 74 61   |::invocation_sta|
0x2ea97:    74 65 5d 00 00 00 00 00  00                        |te]......       |
0x2eaa0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<bool, CNode*, bool, boost::function<bool(CNode*, bool)> >, boost::signals2::mutex> > >]"
0x2eab0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x2eac0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x2ead0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x2eae0:    54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x2eaf0:    69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x2eb00:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x2eb10:    6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x2eb20:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x2eb30:    61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x2eb40:    29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x2eb50:    69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x2eb60:    65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x2eb70:    74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x2eb80:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2eb90:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2eba0:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2ebb0:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2ebc0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2ebd0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2ebe0:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2ebf0:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2ec00:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2ec10:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 32 3c 62 6f   |gnals2::slot2<bo|
0x2ec20:    6f 6c 2c 20 43 4e 6f 64  65 2a 2c 20 62 6f 6f 6c   |ol, CNode*, bool|
0x2ec30:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x2ec40:    6e 3c 62 6f 6f 6c 28 43  4e 6f 64 65 2a 2c 20 62   |n<bool(CNode*, b|
0x2ec50:    6f 6f 6c 29 3e 20 3e 2c  20 62 6f 6f 73 74 3a 3a   |ool)> >, boost::|
0x2ec60:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2ec70:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2ec80:    6c 73 32 3a 3a 64 65 74  61 69 6c 3a 3a 67 72 6f   |ls2::detail::gro|
0x2ec90:    75 70 65 64 5f 6c 69 73  74 3c 47 72 6f 75 70 2c   |uped_list<Group,|
0x2eca0:    20 47 72 6f 75 70 43 6f  6d 70 61 72 65 2c 20 56   | GroupCompare, V|
0x2ecb0:    61 6c 75 65 54 79 70 65  3e 20 3d 20 62 6f 6f 73   |alueType> = boos|
0x2ecc0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2ecd0:    61 69 6c 3a 3a 67 72 6f  75 70 65 64 5f 6c 69 73   |ail::grouped_lis|
0x2ece0:    74 3c 69 6e 74 2c 20 73  74 64 3a 3a 6c 65 73 73   |t<int, std::less|
0x2ecf0:    3c 69 6e 74 3e 2c 20 62  6f 6f 73 74 3a 3a 73 68   |<int>, boost::sh|
0x2ed00:    61 72 65 64 5f 70 74 72  3c 62 6f 6f 73 74 3a 3a   |ared_ptr<boost::|
0x2ed10:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2ed20:    3a 3a 63 6f 6e 6e 65 63  74 69 6f 6e 5f 62 6f 64   |::connection_bod|
0x2ed30:    79 3c 73 74 64 3a 3a 70  61 69 72 3c 62 6f 6f 73   |y<std::pair<boos|
0x2ed40:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2ed50:    61 69 6c 3a 3a 73 6c 6f  74 5f 6d 65 74 61 5f 67   |ail::slot_meta_g|
0x2ed60:    72 6f 75 70 2c 20 62 6f  6f 73 74 3a 3a 6f 70 74   |roup, boost::opt|
0x2ed70:    69 6f 6e 61 6c 3c 69 6e  74 3e 20 3e 2c 20 62 6f   |ional<int> >, bo|
0x2ed80:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 73   |ost::signals2::s|
0x2ed90:    6c 6f 74 32 3c 62 6f 6f  6c 2c 20 43 4e 6f 64 65   |lot2<bool, CNode|
0x2eda0:    2a 2c 20 62 6f 6f 6c 2c  20 62 6f 6f 73 74 3a 3a   |*, bool, boost::|
0x2edb0:    66 75 6e 63 74 69 6f 6e  3c 62 6f 6f 6c 28 43 4e   |function<bool(CN|
0x2edc0:    6f 64 65 2a 2c 20 62 6f  6f 6c 29 3e 20 3e 2c 20   |ode*, bool)> >, |
0x2edd0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2ede0:    3a 6d 75 74 65 78 3e 20  3e 20 3e 5d 00            |:mutex> > >].   |
0x2eded:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2edfd:    00 00 00 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |...boost::option|
0x2ee0d:    61 6c 3c 54 3e 3a 3a 72  65 66 65 72 65 6e 63 65   |al<T>::reference|
0x2ee1d:    5f 74 79 70 65 20 62 6f  6f 73 74 3a 3a 6f 70 74   |_type boost::opt|
0x2ee2d:    69 6f 6e 61 6c 3c 54 3e  3a 3a 67 65 74 28 29 20   |ional<T>::get() |
0x2ee3d:    5b 77 69 74 68 20 54 20  3d 20 73 74 64 3a 3a 62   |[with T = std::b|
0x2ee4d:    61 73 69 63 5f 73 74 72  69 6e 67 3c 63 68 61 72   |asic_string<char|
0x2ee5d:    3e 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |>, boost::option|
0x2ee6d:    61 6c 3c 54 3e 3a 3a 72  65 66 65 72 65 6e 63 65   |al<T>::reference|
0x2ee7d:    5f 74 79 70 65 20 3d 20  73 74 64 3a 3a 62 61 73   |_type = std::bas|
0x2ee8d:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 26   |ic_string<char>&|
0x2ee9d:    5d 00 00                                           |]..             |
0x2eea0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>&]"
0x2eeb0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2eec0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2eed0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2eee0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2eef0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2ef00:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x2ef10:    6c 31 5f 69 6d 70 6c 3c  73 74 64 3a 3a 62 61 73   |l1_impl<std::bas|
0x2ef20:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 2c   |ic_string<char>,|
0x2ef30:    20 63 6f 6e 73 74 20 63  68 61 72 2a 2c 20 62 6f   | const char*, bo|
0x2ef40:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6f   |ost::signals2::o|
0x2ef50:    70 74 69 6f 6e 61 6c 5f  6c 61 73 74 5f 76 61 6c   |ptional_last_val|
0x2ef60:    75 65 3c 73 74 64 3a 3a  62 61 73 69 63 5f 73 74   |ue<std::basic_st|
0x2ef70:    72 69 6e 67 3c 63 68 61  72 3e 20 3e 2c 20 69 6e   |ring<char> >, in|
0x2ef80:    74 2c 20 73 74 64 3a 3a  6c 65 73 73 3c 69 6e 74   |t, std::less<int|
0x2ef90:    3e 2c 20 62 6f 6f 73 74  3a 3a 66 75 6e 63 74 69   |>, boost::functi|
0x2efa0:    6f 6e 3c 73 74 64 3a 3a  62 61 73 69 63 5f 73 74   |on<std::basic_st|
0x2efb0:    72 69 6e 67 3c 63 68 61  72 3e 28 63 6f 6e 73 74   |ring<char>(const|
0x2efc0:    20 63 68 61 72 2a 29 3e  2c 20 62 6f 6f 73 74 3a   | char*)>, boost:|
0x2efd0:    3a 66 75 6e 63 74 69 6f  6e 3c 73 74 64 3a 3a 62   |:function<std::b|
0x2efe0:    61 73 69 63 5f 73 74 72  69 6e 67 3c 63 68 61 72   |asic_string<char|
0x2eff0:    3e 28 63 6f 6e 73 74 20  62 6f 6f 73 74 3a 3a 73   |>(const boost::s|
0x2f000:    69 67 6e 61 6c 73 32 3a  3a 63 6f 6e 6e 65 63 74   |ignals2::connect|
0x2f010:    69 6f 6e 26 2c 20 63 6f  6e 73 74 20 63 68 61 72   |ion&, const char|
0x2f020:    2a 29 3e 2c 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |*)>, boost::sign|
0x2f030:    61 6c 73 32 3a 3a 6d 75  74 65 78 3e 2c 20 62 6f   |als2::mutex>, bo|
0x2f040:    6f 73 74 3a 3a 73 68 61  72 65 64 5f 70 74 72 3c   |ost::shared_ptr<|
0x2f050:    54 3e 3a 3a 72 65 66 65  72 65 6e 63 65 20 3d 20   |T>::reference = |
0x2f060:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x2f070:    3a 64 65 74 61 69 6c 3a  3a 73 69 67 6e 61 6c 31   |:detail::signal1|
0x2f080:    5f 69 6d 70 6c 3c 73 74  64 3a 3a 62 61 73 69 63   |_impl<std::basic|
0x2f090:    5f 73 74 72 69 6e 67 3c  63 68 61 72 3e 2c 20 63   |_string<char>, c|
0x2f0a0:    6f 6e 73 74 20 63 68 61  72 2a 2c 20 62 6f 6f 73   |onst char*, boos|
0x2f0b0:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 6f 70 74   |t::signals2::opt|
0x2f0c0:    69 6f 6e 61 6c 5f 6c 61  73 74 5f 76 61 6c 75 65   |ional_last_value|
0x2f0d0:    3c 73 74 64 3a 3a 62 61  73 69 63 5f 73 74 72 69   |<std::basic_stri|
0x2f0e0:    6e 67 3c 63 68 61 72 3e  20 3e 2c 20 69 6e 74 2c   |ng<char> >, int,|
0x2f0f0:    20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x2f100:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2f110:    3c 73 74 64 3a 3a 62 61  73 69 63 5f 73 74 72 69   |<std::basic_stri|
0x2f120:    6e 67 3c 63 68 61 72 3e  28 63 6f 6e 73 74 20 63   |ng<char>(const c|
0x2f130:    68 61 72 2a 29 3e 2c 20  62 6f 6f 73 74 3a 3a 66   |har*)>, boost::f|
0x2f140:    75 6e 63 74 69 6f 6e 3c  73 74 64 3a 3a 62 61 73   |unction<std::bas|
0x2f150:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 28   |ic_string<char>(|
0x2f160:    63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x2f170:    6e 61 6c 73 32 3a 3a 63  6f 6e 6e 65 63 74 69 6f   |nals2::connectio|
0x2f180:    6e 26 2c 20 63 6f 6e 73  74 20 63 68 61 72 2a 29   |n&, const char*)|
0x2f190:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x2f1a0:    73 32 3a 3a 6d 75 74 65  78 3e 26 5d 00            |s2::mutex>&].   |
0x2f1ad:    00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f1bd:    00 00 00 76 6f 69 64 20  62 6f 6f 73 74 3a 3a 73   |...void boost::s|
0x2f1cd:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2f1dd:    3a 73 69 67 6e 61 6c 31  5f 69 6d 70 6c 3c 52 2c   |:signal1_impl<R,|
0x2f1ed:    20 54 31 2c 20 43 6f 6d  62 69 6e 65 72 2c 20 47   | T1, Combiner, G|
0x2f1fd:    72 6f 75 70 2c 20 47 72  6f 75 70 43 6f 6d 70 61   |roup, GroupCompa|
0x2f20d:    72 65 2c 20 53 6c 6f 74  46 75 6e 63 74 69 6f 6e   |re, SlotFunction|
0x2f21d:    2c 20 45 78 74 65 6e 64  65 64 53 6c 6f 74 46 75   |, ExtendedSlotFu|
0x2f22d:    6e 63 74 69 6f 6e 2c 20  4d 75 74 65 78 3e 3a 3a   |nction, Mutex>::|
0x2f23d:    6e 6f 6c 6f 63 6b 5f 63  6c 65 61 6e 75 70 5f 63   |nolock_cleanup_c|
0x2f24d:    6f 6e 6e 65 63 74 69 6f  6e 73 28 62 6f 6f 6c 2c   |onnections(bool,|
0x2f25d:    20 75 6e 73 69 67 6e 65  64 20 69 6e 74 29 20 63   | unsigned int) c|
0x2f26d:    6f 6e 73 74 20 5b 77 69  74 68 20 52 20 3d 20 73   |onst [with R = s|
0x2f27d:    74 64 3a 3a 62 61 73 69  63 5f 73 74 72 69 6e 67   |td::basic_string|
0x2f28d:    3c 63 68 61 72 3e 2c 20  54 31 20 3d 20 63 6f 6e   |<char>, T1 = con|
0x2f29d:    73 74 20 63 68 61 72 2a  2c 20 43 6f 6d 62 69 6e   |st char*, Combin|
0x2f2ad:    65 72 20 3d 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |er = boost::sign|
0x2f2bd:    61 6c 73 32 3a 3a 6f 70  74 69 6f 6e 61 6c 5f 6c   |als2::optional_l|
0x2f2cd:    61 73 74 5f 76 61 6c 75  65 3c 73 74 64 3a 3a 62   |ast_value<std::b|
0x2f2dd:    61 73 69 63 5f 73 74 72  69 6e 67 3c 63 68 61 72   |asic_string<char|
0x2f2ed:    3e 20 3e 2c 20 47 72 6f  75 70 20 3d 20 69 6e 74   |> >, Group = int|
0x2f2fd:    2c 20 47 72 6f 75 70 43  6f 6d 70 61 72 65 20 3d   |, GroupCompare =|
0x2f30d:    20 73 74 64 3a 3a 6c 65  73 73 3c 69 6e 74 3e 2c   | std::less<int>,|
0x2f31d:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 20 3d 20   | SlotFunction = |
0x2f32d:    62 6f 6f 73 74 3a 3a 66  75 6e 63 74 69 6f 6e 3c   |boost::function<|
0x2f33d:    73 74 64 3a 3a 62 61 73  69 63 5f 73 74 72 69 6e   |std::basic_strin|
0x2f34d:    67 3c 63 68 61 72 3e 28  63 6f 6e 73 74 20 63 68   |g<char>(const ch|
0x2f35d:    61 72 2a 29 3e 2c 20 45  78 74 65 6e 64 65 64 53   |ar*)>, ExtendedS|
0x2f36d:    6c 6f 74 46 75 6e 63 74  69 6f 6e 20 3d 20 62 6f   |lotFunction = bo|
0x2f37d:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 73 74   |ost::function<st|
0x2f38d:    64 3a 3a 62 61 73 69 63  5f 73 74 72 69 6e 67 3c   |d::basic_string<|
0x2f39d:    63 68 61 72 3e 28 63 6f  6e 73 74 20 62 6f 6f 73   |char>(const boos|
0x2f3ad:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 63 6f 6e   |t::signals2::con|
0x2f3bd:    6e 65 63 74 69 6f 6e 26  2c 20 63 6f 6e 73 74 20   |nection&, const |
0x2f3cd:    63 68 61 72 2a 29 3e 2c  20 4d 75 74 65 78 20 3d   |char*)>, Mutex =|
0x2f3dd:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2f3ed:    3a 3a 6d 75 74 65 78 5d  00 00 00 00 00 00 00 00   |::mutex]........|
0x2f3fd:    00 00 00                                           |...             |
0x2f400:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::optional_last_value<std::basic_string<char> >, boost::shared_ptr<T>::reference = boost::signals2::optional_last_value<std::basic_string<char> >&]"
0x2f410:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2f420:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2f430:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2f440:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2f450:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2f460:    32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x2f470:    5f 76 61 6c 75 65 3c 73  74 64 3a 3a 62 61 73 69   |_value<std::basi|
0x2f480:    63 5f 73 74 72 69 6e 67  3c 63 68 61 72 3e 20 3e   |c_string<char> >|
0x2f490:    2c 20 62 6f 6f 73 74 3a  3a 73 68 61 72 65 64 5f   |, boost::shared_|
0x2f4a0:    70 74 72 3c 54 3e 3a 3a  72 65 66 65 72 65 6e 63   |ptr<T>::referenc|
0x2f4b0:    65 20 3d 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   |e = boost::signa|
0x2f4c0:    6c 73 32 3a 3a 6f 70 74  69 6f 6e 61 6c 5f 6c 61   |ls2::optional_la|
0x2f4d0:    73 74 5f 76 61 6c 75 65  3c 73 74 64 3a 3a 62 61   |st_value<std::ba|
0x2f4e0:    73 69 63 5f 73 74 72 69  6e 67 3c 63 68 61 72 3e   |sic_string<char>|
0x2f4f0:    20 3e 26 5d 00                                     | >&].           |
0x2f4f5:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x2f500:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::signal1_impl<std::basic_string<char>, const char*, boost::signals2::optional_last_value<std::basic_string<char> >, int, std::less<int>, boost::function<std::basic_string<char>(const char*)>, boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, boost::signals2::mutex>::invocation_state]"
0x2f510:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x2f520:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x2f530:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x2f540:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x2f550:    69 67 6e 61 6c 31 5f 69  6d 70 6c 3c 73 74 64 3a   |ignal1_impl<std:|
0x2f560:    3a 62 61 73 69 63 5f 73  74 72 69 6e 67 3c 63 68   |:basic_string<ch|
0x2f570:    61 72 3e 2c 20 63 6f 6e  73 74 20 63 68 61 72 2a   |ar>, const char*|
0x2f580:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x2f590:    32 3a 3a 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |2::optional_last|
0x2f5a0:    5f 76 61 6c 75 65 3c 73  74 64 3a 3a 62 61 73 69   |_value<std::basi|
0x2f5b0:    63 5f 73 74 72 69 6e 67  3c 63 68 61 72 3e 20 3e   |c_string<char> >|
0x2f5c0:    2c 20 69 6e 74 2c 20 73  74 64 3a 3a 6c 65 73 73   |, int, std::less|
0x2f5d0:    3c 69 6e 74 3e 2c 20 62  6f 6f 73 74 3a 3a 66 75   |<int>, boost::fu|
0x2f5e0:    6e 63 74 69 6f 6e 3c 73  74 64 3a 3a 62 61 73 69   |nction<std::basi|
0x2f5f0:    63 5f 73 74 72 69 6e 67  3c 63 68 61 72 3e 28 63   |c_string<char>(c|
0x2f600:    6f 6e 73 74 20 63 68 61  72 2a 29 3e 2c 20 62 6f   |onst char*)>, bo|
0x2f610:    6f 73 74 3a 3a 66 75 6e  63 74 69 6f 6e 3c 73 74   |ost::function<st|
0x2f620:    64 3a 3a 62 61 73 69 63  5f 73 74 72 69 6e 67 3c   |d::basic_string<|
0x2f630:    63 68 61 72 3e 28 63 6f  6e 73 74 20 62 6f 6f 73   |char>(const boos|
0x2f640:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 63 6f 6e   |t::signals2::con|
0x2f650:    6e 65 63 74 69 6f 6e 26  2c 20 63 6f 6e 73 74 20   |nection&, const |
0x2f660:    63 68 61 72 2a 29 3e 2c  20 62 6f 6f 73 74 3a 3a   |char*)>, boost::|
0x2f670:    73 69 67 6e 61 6c 73 32  3a 3a 6d 75 74 65 78 3e   |signals2::mutex>|
0x2f680:    3a 3a 69 6e 76 6f 63 61  74 69 6f 6e 5f 73 74 61   |::invocation_sta|
0x2f690:    74 65 5d 00                                        |te].            |
0x2f694:    00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x2f6a0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::shared_ptr<T>::reference = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >&]"
0x2f6b0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2f6c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2f6d0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2f6e0:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2f6f0:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2f700:    32 3a 3a 64 65 74 61 69  6c 3a 3a 67 72 6f 75 70   |2::detail::group|
0x2f710:    65 64 5f 6c 69 73 74 3c  69 6e 74 2c 20 73 74 64   |ed_list<int, std|
0x2f720:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x2f730:    73 74 3a 3a 73 68 61 72  65 64 5f 70 74 72 3c 62   |st::shared_ptr<b|
0x2f740:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2f750:    64 65 74 61 69 6c 3a 3a  63 6f 6e 6e 65 63 74 69   |detail::connecti|
0x2f760:    6f 6e 5f 62 6f 64 79 3c  73 74 64 3a 3a 70 61 69   |on_body<std::pai|
0x2f770:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x2f780:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 6c 6f 74 5f   |2::detail::slot_|
0x2f790:    6d 65 74 61 5f 67 72 6f  75 70 2c 20 62 6f 6f 73   |meta_group, boos|
0x2f7a0:    74 3a 3a 6f 70 74 69 6f  6e 61 6c 3c 69 6e 74 3e   |t::optional<int>|
0x2f7b0:    20 3e 2c 20 62 6f 6f 73  74 3a 3a 73 69 67 6e 61   | >, boost::signa|
0x2f7c0:    6c 73 32 3a 3a 73 6c 6f  74 31 3c 73 74 64 3a 3a   |ls2::slot1<std::|
0x2f7d0:    62 61 73 69 63 5f 73 74  72 69 6e 67 3c 63 68 61   |basic_string<cha|
0x2f7e0:    72 3e 2c 20 63 6f 6e 73  74 20 63 68 61 72 2a 2c   |r>, const char*,|
0x2f7f0:    20 62 6f 6f 73 74 3a 3a  66 75 6e 63 74 69 6f 6e   | boost::function|
0x2f800:    3c 73 74 64 3a 3a 62 61  73 69 63 5f 73 74 72 69   |<std::basic_stri|
0x2f810:    6e 67 3c 63 68 61 72 3e  28 63 6f 6e 73 74 20 63   |ng<char>(const c|
0x2f820:    68 61 72 2a 29 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |har*)> >, boost:|
0x2f830:    3a 73 69 67 6e 61 6c 73  32 3a 3a 6d 75 74 65 78   |:signals2::mutex|
0x2f840:    3e 20 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 68   |> > >, boost::sh|
0x2f850:    61 72 65 64 5f 70 74 72  3c 54 3e 3a 3a 72 65 66   |ared_ptr<T>::ref|
0x2f860:    65 72 65 6e 63 65 20 3d  20 62 6f 6f 73 74 3a 3a   |erence = boost::|
0x2f870:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2f880:    3a 3a 67 72 6f 75 70 65  64 5f 6c 69 73 74 3c 69   |::grouped_list<i|
0x2f890:    6e 74 2c 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |nt, std::less<in|
0x2f8a0:    74 3e 2c 20 62 6f 6f 73  74 3a 3a 73 68 61 72 65   |t>, boost::share|
0x2f8b0:    64 5f 70 74 72 3c 62 6f  6f 73 74 3a 3a 73 69 67   |d_ptr<boost::sig|
0x2f8c0:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x2f8d0:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x2f8e0:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x2f8f0:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x2f900:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x2f910:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x2f920:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x2f930:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x2f940:    31 3c 73 74 64 3a 3a 62  61 73 69 63 5f 73 74 72   |1<std::basic_str|
0x2f950:    69 6e 67 3c 63 68 61 72  3e 2c 20 63 6f 6e 73 74   |ing<char>, const|
0x2f960:    20 63 68 61 72 2a 2c 20  62 6f 6f 73 74 3a 3a 66   | char*, boost::f|
0x2f970:    75 6e 63 74 69 6f 6e 3c  73 74 64 3a 3a 62 61 73   |unction<std::bas|
0x2f980:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 28   |ic_string<char>(|
0x2f990:    63 6f 6e 73 74 20 63 68  61 72 2a 29 3e 20 3e 2c   |const char*)> >,|
0x2f9a0:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x2f9b0:    3a 3a 6d 75 74 65 78 3e  20 3e 20 3e 26 5d 00      |::mutex> > >&]. |
0x2f9bf:    00                                                 |.               |
0x2f9c0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|   "boost::shared_ptr<T>::reference boost::shared_ptr<T>::operator*() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>, boost::shared_ptr<T>::reference = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>&]"
0x2f9d0:    72 3c 54 3e 3a 3a 72 65  66 65 72 65 6e 63 65 20   |r<T>::reference |
0x2f9e0:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x2f9f0:    72 3c 54 3e 3a 3a 6f 70  65 72 61 74 6f 72 2a 28   |r<T>::operator*(|
0x2fa00:    29 20 63 6f 6e 73 74 20  5b 77 69 74 68 20 54 20   |) const [with T |
0x2fa10:    3d 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |= boost::signals|
0x2fa20:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x2fa30:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x2fa40:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x2fa50:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x2fa60:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x2fa70:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x2fa80:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x2fa90:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 73 74   |gnals2::slot1<st|
0x2faa0:    64 3a 3a 62 61 73 69 63  5f 73 74 72 69 6e 67 3c   |d::basic_string<|
0x2fab0:    63 68 61 72 3e 2c 20 63  6f 6e 73 74 20 63 68 61   |char>, const cha|
0x2fac0:    72 2a 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |r*, boost::funct|
0x2fad0:    69 6f 6e 3c 73 74 64 3a  3a 62 61 73 69 63 5f 73   |ion<std::basic_s|
0x2fae0:    74 72 69 6e 67 3c 63 68  61 72 3e 28 63 6f 6e 73   |tring<char>(cons|
0x2faf0:    74 20 63 68 61 72 2a 29  3e 20 3e 2c 20 62 6f 6f   |t char*)> >, boo|
0x2fb00:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x2fb10:    74 65 78 3e 2c 20 62 6f  6f 73 74 3a 3a 73 68 61   |tex>, boost::sha|
0x2fb20:    72 65 64 5f 70 74 72 3c  54 3e 3a 3a 72 65 66 65   |red_ptr<T>::refe|
0x2fb30:    72 65 6e 63 65 20 3d 20  62 6f 6f 73 74 3a 3a 73   |rence = boost::s|
0x2fb40:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x2fb50:    3a 63 6f 6e 6e 65 63 74  69 6f 6e 5f 62 6f 64 79   |:connection_body|
0x2fb60:    3c 73 74 64 3a 3a 70 61  69 72 3c 62 6f 6f 73 74   |<std::pair<boost|
0x2fb70:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x2fb80:    69 6c 3a 3a 73 6c 6f 74  5f 6d 65 74 61 5f 67 72   |il::slot_meta_gr|
0x2fb90:    6f 75 70 2c 20 62 6f 6f  73 74 3a 3a 6f 70 74 69   |oup, boost::opti|
0x2fba0:    6f 6e 61 6c 3c 69 6e 74  3e 20 3e 2c 20 62 6f 6f   |onal<int> >, boo|
0x2fbb0:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 73 6c   |st::signals2::sl|
0x2fbc0:    6f 74 31 3c 73 74 64 3a  3a 62 61 73 69 63 5f 73   |ot1<std::basic_s|
0x2fbd0:    74 72 69 6e 67 3c 63 68  61 72 3e 2c 20 63 6f 6e   |tring<char>, con|
0x2fbe0:    73 74 20 63 68 61 72 2a  2c 20 62 6f 6f 73 74 3a   |st char*, boost:|
0x2fbf0:    3a 66 75 6e 63 74 69 6f  6e 3c 73 74 64 3a 3a 62   |:function<std::b|
0x2fc00:    61 73 69 63 5f 73 74 72  69 6e 67 3c 63 68 61 72   |asic_string<char|
0x2fc10:    3e 28 63 6f 6e 73 74 20  63 68 61 72 2a 29 3e 20   |>(const char*)> |
0x2fc20:    3e 2c 20 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |>, boost::signal|
0x2fc30:    73 32 3a 3a 6d 75 74 65  78 3e 26 5d 00            |s2::mutex>&].   |
0x2fc3d:    00 00 00                                           |...             |
0x2fc40:    76 6f 69 64 20 62 6f 6f  73 74 3a 3a 73 69 67 6e   |void boost::sign|   "void boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::nolock_cleanup_connections_from(bool, const typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator&, unsigned int) const [with R = std::basic_string<char>, T1 = const char*, Combiner = boost::signals2::optional_last_value<std::basic_string<char> >, Group = int, GroupCompare = std::less<int>, SlotFunction = boost::function<std::basic_string<char>(const char*)>, ExtendedSlotFunction = boost::function<std::basic_string<char>(const boost::signals2::connection&, const char*)>, Mutex = boost::signals2::mutex, typename boost::signals2::detail::signal1_impl<R, T1, Combiner, Group, GroupCompare, SlotFunction, ExtendedSlotFunction, Mutex>::connection_list_type::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >]"
0x2fc50:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 69   |als2::detail::si|
0x2fc60:    67 6e 61 6c 31 5f 69 6d  70 6c 3c 52 2c 20 54 31   |gnal1_impl<R, T1|
0x2fc70:    2c 20 43 6f 6d 62 69 6e  65 72 2c 20 47 72 6f 75   |, Combiner, Grou|
0x2fc80:    70 2c 20 47 72 6f 75 70  43 6f 6d 70 61 72 65 2c   |p, GroupCompare,|
0x2fc90:    20 53 6c 6f 74 46 75 6e  63 74 69 6f 6e 2c 20 45   | SlotFunction, E|
0x2fca0:    78 74 65 6e 64 65 64 53  6c 6f 74 46 75 6e 63 74   |xtendedSlotFunct|
0x2fcb0:    69 6f 6e 2c 20 4d 75 74  65 78 3e 3a 3a 6e 6f 6c   |ion, Mutex>::nol|
0x2fcc0:    6f 63 6b 5f 63 6c 65 61  6e 75 70 5f 63 6f 6e 6e   |ock_cleanup_conn|
0x2fcd0:    65 63 74 69 6f 6e 73 5f  66 72 6f 6d 28 62 6f 6f   |ections_from(boo|
0x2fce0:    6c 2c 20 63 6f 6e 73 74  20 74 79 70 65 6e 61 6d   |l, const typenam|
0x2fcf0:    65 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |e boost::signals|
0x2fd00:    32 3a 3a 64 65 74 61 69  6c 3a 3a 73 69 67 6e 61   |2::detail::signa|
0x2fd10:    6c 31 5f 69 6d 70 6c 3c  52 2c 20 54 31 2c 20 43   |l1_impl<R, T1, C|
0x2fd20:    6f 6d 62 69 6e 65 72 2c  20 47 72 6f 75 70 2c 20   |ombiner, Group, |
0x2fd30:    47 72 6f 75 70 43 6f 6d  70 61 72 65 2c 20 53 6c   |GroupCompare, Sl|
0x2fd40:    6f 74 46 75 6e 63 74 69  6f 6e 2c 20 45 78 74 65   |otFunction, Exte|
0x2fd50:    6e 64 65 64 53 6c 6f 74  46 75 6e 63 74 69 6f 6e   |ndedSlotFunction|
0x2fd60:    2c 20 4d 75 74 65 78 3e  3a 3a 63 6f 6e 6e 65 63   |, Mutex>::connec|
0x2fd70:    74 69 6f 6e 5f 6c 69 73  74 5f 74 79 70 65 3a 3a   |tion_list_type::|
0x2fd80:    69 74 65 72 61 74 6f 72  26 2c 20 75 6e 73 69 67   |iterator&, unsig|
0x2fd90:    6e 65 64 20 69 6e 74 29  20 63 6f 6e 73 74 20 5b   |ned int) const [|
0x2fda0:    77 69 74 68 20 52 20 3d  20 73 74 64 3a 3a 62 61   |with R = std::ba|
0x2fdb0:    73 69 63 5f 73 74 72 69  6e 67 3c 63 68 61 72 3e   |sic_string<char>|
0x2fdc0:    2c 20 54 31 20 3d 20 63  6f 6e 73 74 20 63 68 61   |, T1 = const cha|
0x2fdd0:    72 2a 2c 20 43 6f 6d 62  69 6e 65 72 20 3d 20 62   |r*, Combiner = b|
0x2fde0:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x2fdf0:    6f 70 74 69 6f 6e 61 6c  5f 6c 61 73 74 5f 76 61   |optional_last_va|
0x2fe00:    6c 75 65 3c 73 74 64 3a  3a 62 61 73 69 63 5f 73   |lue<std::basic_s|
0x2fe10:    74 72 69 6e 67 3c 63 68  61 72 3e 20 3e 2c 20 47   |tring<char> >, G|
0x2fe20:    72 6f 75 70 20 3d 20 69  6e 74 2c 20 47 72 6f 75   |roup = int, Grou|
0x2fe30:    70 43 6f 6d 70 61 72 65  20 3d 20 73 74 64 3a 3a   |pCompare = std::|
0x2fe40:    6c 65 73 73 3c 69 6e 74  3e 2c 20 53 6c 6f 74 46   |less<int>, SlotF|
0x2fe50:    75 6e 63 74 69 6f 6e 20  3d 20 62 6f 6f 73 74 3a   |unction = boost:|
0x2fe60:    3a 66 75 6e 63 74 69 6f  6e 3c 73 74 64 3a 3a 62   |:function<std::b|
0x2fe70:    61 73 69 63 5f 73 74 72  69 6e 67 3c 63 68 61 72   |asic_string<char|
0x2fe80:    3e 28 63 6f 6e 73 74 20  63 68 61 72 2a 29 3e 2c   |>(const char*)>,|
0x2fe90:    20 45 78 74 65 6e 64 65  64 53 6c 6f 74 46 75 6e   | ExtendedSlotFun|
0x2fea0:    63 74 69 6f 6e 20 3d 20  62 6f 6f 73 74 3a 3a 66   |ction = boost::f|
0x2feb0:    75 6e 63 74 69 6f 6e 3c  73 74 64 3a 3a 62 61 73   |unction<std::bas|
0x2fec0:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 28   |ic_string<char>(|
0x2fed0:    63 6f 6e 73 74 20 62 6f  6f 73 74 3a 3a 73 69 67   |const boost::sig|
0x2fee0:    6e 61 6c 73 32 3a 3a 63  6f 6e 6e 65 63 74 69 6f   |nals2::connectio|
0x2fef0:    6e 26 2c 20 63 6f 6e 73  74 20 63 68 61 72 2a 29   |n&, const char*)|
0x2ff00:    3e 2c 20 4d 75 74 65 78  20 3d 20 62 6f 6f 73 74   |>, Mutex = boost|
0x2ff10:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 6d 75 74 65   |::signals2::mute|
0x2ff20:    78 2c 20 74 79 70 65 6e  61 6d 65 20 62 6f 6f 73   |x, typename boos|
0x2ff30:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x2ff40:    61 69 6c 3a 3a 73 69 67  6e 61 6c 31 5f 69 6d 70   |ail::signal1_imp|
0x2ff50:    6c 3c 52 2c 20 54 31 2c  20 43 6f 6d 62 69 6e 65   |l<R, T1, Combine|
0x2ff60:    72 2c 20 47 72 6f 75 70  2c 20 47 72 6f 75 70 43   |r, Group, GroupC|
0x2ff70:    6f 6d 70 61 72 65 2c 20  53 6c 6f 74 46 75 6e 63   |ompare, SlotFunc|
0x2ff80:    74 69 6f 6e 2c 20 45 78  74 65 6e 64 65 64 53 6c   |tion, ExtendedSl|
0x2ff90:    6f 74 46 75 6e 63 74 69  6f 6e 2c 20 4d 75 74 65   |otFunction, Mute|
0x2ffa0:    78 3e 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 5f 6c   |x>::connection_l|
0x2ffb0:    69 73 74 5f 74 79 70 65  3a 3a 69 74 65 72 61 74   |ist_type::iterat|
0x2ffc0:    6f 72 20 3d 20 73 74 64  3a 3a 5f 4c 69 73 74 5f   |or = std::_List_|
0x2ffd0:    69 74 65 72 61 74 6f 72  3c 62 6f 6f 73 74 3a 3a   |iterator<boost::|
0x2ffe0:    73 68 61 72 65 64 5f 70  74 72 3c 62 6f 6f 73 74   |shared_ptr<boost|
0x2fff0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x30000:    69 6c 3a 3a 63 6f 6e 6e  65 63 74 69 6f 6e 5f 62   |il::connection_b|
0x30010:    6f 64 79 3c 73 74 64 3a  3a 70 61 69 72 3c 62 6f   |ody<std::pair<bo|
0x30020:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 64   |ost::signals2::d|
0x30030:    65 74 61 69 6c 3a 3a 73  6c 6f 74 5f 6d 65 74 61   |etail::slot_meta|
0x30040:    5f 67 72 6f 75 70 2c 20  62 6f 6f 73 74 3a 3a 6f   |_group, boost::o|
0x30050:    70 74 69 6f 6e 61 6c 3c  69 6e 74 3e 20 3e 2c 20   |ptional<int> >, |
0x30060:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x30070:    3a 73 6c 6f 74 31 3c 73  74 64 3a 3a 62 61 73 69   |:slot1<std::basi|
0x30080:    63 5f 73 74 72 69 6e 67  3c 63 68 61 72 3e 2c 20   |c_string<char>, |
0x30090:    63 6f 6e 73 74 20 63 68  61 72 2a 2c 20 62 6f 6f   |const char*, boo|
0x300a0:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 73 74 64   |st::function<std|
0x300b0:    3a 3a 62 61 73 69 63 5f  73 74 72 69 6e 67 3c 63   |::basic_string<c|
0x300c0:    68 61 72 3e 28 63 6f 6e  73 74 20 63 68 61 72 2a   |har>(const char*|
0x300d0:    29 3e 20 3e 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |)> >, boost::sig|
0x300e0:    6e 61 6c 73 32 3a 3a 6d  75 74 65 78 3e 20 3e 20   |nals2::mutex> > |
0x300f0:    3e 5d 00                                           |>].             |
0x300f3:    00 00 00 00 00 00 00 00  00 00 00 00 00            |.............   |
0x30100:    54 2a 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   |T* boost::shared|   "T* boost::shared_ptr<T>::operator->() const [with T = boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex>]"
0x30110:    5f 70 74 72 3c 54 3e 3a  3a 6f 70 65 72 61 74 6f   |_ptr<T>::operato|
0x30120:    72 2d 3e 28 29 20 63 6f  6e 73 74 20 5b 77 69 74   |r->() const [wit|
0x30130:    68 20 54 20 3d 20 62 6f  6f 73 74 3a 3a 73 69 67   |h T = boost::sig|
0x30140:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 63   |nals2::detail::c|
0x30150:    6f 6e 6e 65 63 74 69 6f  6e 5f 62 6f 64 79 3c 73   |onnection_body<s|
0x30160:    74 64 3a 3a 70 61 69 72  3c 62 6f 6f 73 74 3a 3a   |td::pair<boost::|
0x30170:    73 69 67 6e 61 6c 73 32  3a 3a 64 65 74 61 69 6c   |signals2::detail|
0x30180:    3a 3a 73 6c 6f 74 5f 6d  65 74 61 5f 67 72 6f 75   |::slot_meta_grou|
0x30190:    70 2c 20 62 6f 6f 73 74  3a 3a 6f 70 74 69 6f 6e   |p, boost::option|
0x301a0:    61 6c 3c 69 6e 74 3e 20  3e 2c 20 62 6f 6f 73 74   |al<int> >, boost|
0x301b0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 73 6c 6f 74   |::signals2::slot|
0x301c0:    31 3c 73 74 64 3a 3a 62  61 73 69 63 5f 73 74 72   |1<std::basic_str|
0x301d0:    69 6e 67 3c 63 68 61 72  3e 2c 20 63 6f 6e 73 74   |ing<char>, const|
0x301e0:    20 63 68 61 72 2a 2c 20  62 6f 6f 73 74 3a 3a 66   | char*, boost::f|
0x301f0:    75 6e 63 74 69 6f 6e 3c  73 74 64 3a 3a 62 61 73   |unction<std::bas|
0x30200:    69 63 5f 73 74 72 69 6e  67 3c 63 68 61 72 3e 28   |ic_string<char>(|
0x30210:    63 6f 6e 73 74 20 63 68  61 72 2a 29 3e 20 3e 2c   |const char*)> >,|
0x30220:    20 62 6f 6f 73 74 3a 3a  73 69 67 6e 61 6c 73 32   | boost::signals2|
0x30230:    3a 3a 6d 75 74 65 78 3e  5d 00                     |::mutex>].      |
0x3023a:    00 00 00 00 00 00                                  |......          |
0x30240:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::erase(const group_key_type&, const iterator&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::iterator = std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::group_key_type = std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >]"
0x30250:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x30260:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x30270:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x30280:    54 79 70 65 3e 3a 3a 69  74 65 72 61 74 6f 72 20   |Type>::iterator |
0x30290:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x302a0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x302b0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x302c0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x302d0:    54 79 70 65 3e 3a 3a 65  72 61 73 65 28 63 6f 6e   |Type>::erase(con|
0x302e0:    73 74 20 67 72 6f 75 70  5f 6b 65 79 5f 74 79 70   |st group_key_typ|
0x302f0:    65 26 2c 20 63 6f 6e 73  74 20 69 74 65 72 61 74   |e&, const iterat|
0x30300:    6f 72 26 29 20 5b 77 69  74 68 20 47 72 6f 75 70   |or&) [with Group|
0x30310:    20 3d 20 69 6e 74 2c 20  47 72 6f 75 70 43 6f 6d   | = int, GroupCom|
0x30320:    70 61 72 65 20 3d 20 73  74 64 3a 3a 6c 65 73 73   |pare = std::less|
0x30330:    3c 69 6e 74 3e 2c 20 56  61 6c 75 65 54 79 70 65   |<int>, ValueType|
0x30340:    20 3d 20 62 6f 6f 73 74  3a 3a 73 68 61 72 65 64   | = boost::shared|
0x30350:    5f 70 74 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |_ptr<boost::sign|
0x30360:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 63 6f   |als2::detail::co|
0x30370:    6e 6e 65 63 74 69 6f 6e  5f 62 6f 64 79 3c 73 74   |nnection_body<st|
0x30380:    64 3a 3a 70 61 69 72 3c  62 6f 6f 73 74 3a 3a 73   |d::pair<boost::s|
0x30390:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x303a0:    3a 73 6c 6f 74 5f 6d 65  74 61 5f 67 72 6f 75 70   |:slot_meta_group|
0x303b0:    2c 20 62 6f 6f 73 74 3a  3a 6f 70 74 69 6f 6e 61   |, boost::optiona|
0x303c0:    6c 3c 69 6e 74 3e 20 3e  2c 20 62 6f 6f 73 74 3a   |l<int> >, boost:|
0x303d0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 73 6c 6f 74 31   |:signals2::slot1|
0x303e0:    3c 73 74 64 3a 3a 62 61  73 69 63 5f 73 74 72 69   |<std::basic_stri|
0x303f0:    6e 67 3c 63 68 61 72 3e  2c 20 63 6f 6e 73 74 20   |ng<char>, const |
0x30400:    63 68 61 72 2a 2c 20 62  6f 6f 73 74 3a 3a 66 75   |char*, boost::fu|
0x30410:    6e 63 74 69 6f 6e 3c 73  74 64 3a 3a 62 61 73 69   |nction<std::basi|
0x30420:    63 5f 73 74 72 69 6e 67  3c 63 68 61 72 3e 28 63   |c_string<char>(c|
0x30430:    6f 6e 73 74 20 63 68 61  72 2a 29 3e 20 3e 2c 20   |onst char*)> >, |
0x30440:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x30450:    3a 6d 75 74 65 78 3e 20  3e 2c 20 62 6f 6f 73 74   |:mutex> >, boost|
0x30460:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x30470:    69 6c 3a 3a 67 72 6f 75  70 65 64 5f 6c 69 73 74   |il::grouped_list|
0x30480:    3c 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   |<Group, GroupCom|
0x30490:    70 61 72 65 2c 20 56 61  6c 75 65 54 79 70 65 3e   |pare, ValueType>|
0x304a0:    3a 3a 69 74 65 72 61 74  6f 72 20 3d 20 73 74 64   |::iterator = std|
0x304b0:    3a 3a 5f 4c 69 73 74 5f  69 74 65 72 61 74 6f 72   |::_List_iterator|
0x304c0:    3c 62 6f 6f 73 74 3a 3a  73 68 61 72 65 64 5f 70   |<boost::shared_p|
0x304d0:    74 72 3c 62 6f 6f 73 74  3a 3a 73 69 67 6e 61 6c   |tr<boost::signal|
0x304e0:    73 32 3a 3a 64 65 74 61  69 6c 3a 3a 63 6f 6e 6e   |s2::detail::conn|
0x304f0:    65 63 74 69 6f 6e 5f 62  6f 64 79 3c 73 74 64 3a   |ection_body<std:|
0x30500:    3a 70 61 69 72 3c 62 6f  6f 73 74 3a 3a 73 69 67   |:pair<boost::sig|
0x30510:    6e 61 6c 73 32 3a 3a 64  65 74 61 69 6c 3a 3a 73   |nals2::detail::s|
0x30520:    6c 6f 74 5f 6d 65 74 61  5f 67 72 6f 75 70 2c 20   |lot_meta_group, |
0x30530:    62 6f 6f 73 74 3a 3a 6f  70 74 69 6f 6e 61 6c 3c   |boost::optional<|
0x30540:    69 6e 74 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |int> >, boost::s|
0x30550:    69 67 6e 61 6c 73 32 3a  3a 73 6c 6f 74 31 3c 73   |ignals2::slot1<s|
0x30560:    74 64 3a 3a 62 61 73 69  63 5f 73 74 72 69 6e 67   |td::basic_string|
0x30570:    3c 63 68 61 72 3e 2c 20  63 6f 6e 73 74 20 63 68   |<char>, const ch|
0x30580:    61 72 2a 2c 20 62 6f 6f  73 74 3a 3a 66 75 6e 63   |ar*, boost::func|
0x30590:    74 69 6f 6e 3c 73 74 64  3a 3a 62 61 73 69 63 5f   |tion<std::basic_|
0x305a0:    73 74 72 69 6e 67 3c 63  68 61 72 3e 28 63 6f 6e   |string<char>(con|
0x305b0:    73 74 20 63 68 61 72 2a  29 3e 20 3e 2c 20 62 6f   |st char*)> >, bo|
0x305c0:    6f 73 74 3a 3a 73 69 67  6e 61 6c 73 32 3a 3a 6d   |ost::signals2::m|
0x305d0:    75 74 65 78 3e 20 3e 20  3e 2c 20 62 6f 6f 73 74   |utex> > >, boost|
0x305e0:    3a 3a 73 69 67 6e 61 6c  73 32 3a 3a 64 65 74 61   |::signals2::deta|
0x305f0:    69 6c 3a 3a 67 72 6f 75  70 65 64 5f 6c 69 73 74   |il::grouped_list|
0x30600:    3c 47 72 6f 75 70 2c 20  47 72 6f 75 70 43 6f 6d   |<Group, GroupCom|
0x30610:    70 61 72 65 2c 20 56 61  6c 75 65 54 79 70 65 3e   |pare, ValueType>|
0x30620:    3a 3a 67 72 6f 75 70 5f  6b 65 79 5f 74 79 70 65   |::group_key_type|
0x30630:    20 3d 20 73 74 64 3a 3a  70 61 69 72 3c 62 6f 6f   | = std::pair<boo|
0x30640:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x30650:    74 61 69 6c 3a 3a 73 6c  6f 74 5f 6d 65 74 61 5f   |tail::slot_meta_|
0x30660:    67 72 6f 75 70 2c 20 62  6f 6f 73 74 3a 3a 6f 70   |group, boost::op|
0x30670:    74 69 6f 6e 61 6c 3c 69  6e 74 3e 20 3e 5d 00      |tional<int> >]. |
0x3067f:    00                                                 |.               |
0x30680:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|   "boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot1<std::basic_string<char>, const char*, boost::function<std::basic_string<char>(const char*)> >, boost::signals2::mutex> > >]"
0x30690:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x306a0:    5f 6c 69 73 74 3c 47 72  6f 75 70 2c 20 47 72 6f   |_list<Group, Gro|
0x306b0:    75 70 43 6f 6d 70 61 72  65 2c 20 56 61 6c 75 65   |upCompare, Value|
0x306c0:    54 79 70 65 3e 3a 3a 67  72 6f 75 70 65 64 5f 6c   |Type>::grouped_l|
0x306d0:    69 73 74 28 63 6f 6e 73  74 20 62 6f 6f 73 74 3a   |ist(const boost:|
0x306e0:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x306f0:    6c 3a 3a 67 72 6f 75 70  65 64 5f 6c 69 73 74 3c   |l::grouped_list<|
0x30700:    47 72 6f 75 70 2c 20 47  72 6f 75 70 43 6f 6d 70   |Group, GroupComp|
0x30710:    61 72 65 2c 20 56 61 6c  75 65 54 79 70 65 3e 26   |are, ValueType>&|
0x30720:    29 20 5b 77 69 74 68 20  47 72 6f 75 70 20 3d 20   |) [with Group = |
0x30730:    69 6e 74 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |int, GroupCompar|
0x30740:    65 20 3d 20 73 74 64 3a  3a 6c 65 73 73 3c 69 6e   |e = std::less<in|
0x30750:    74 3e 2c 20 56 61 6c 75  65 54 79 70 65 20 3d 20   |t>, ValueType = |
0x30760:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x30770:    72 3c 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |r<boost::signals|
0x30780:    32 3a 3a 64 65 74 61 69  6c 3a 3a 63 6f 6e 6e 65   |2::detail::conne|
0x30790:    63 74 69 6f 6e 5f 62 6f  64 79 3c 73 74 64 3a 3a   |ction_body<std::|
0x307a0:    70 61 69 72 3c 62 6f 6f  73 74 3a 3a 73 69 67 6e   |pair<boost::sign|
0x307b0:    61 6c 73 32 3a 3a 64 65  74 61 69 6c 3a 3a 73 6c   |als2::detail::sl|
0x307c0:    6f 74 5f 6d 65 74 61 5f  67 72 6f 75 70 2c 20 62   |ot_meta_group, b|
0x307d0:    6f 6f 73 74 3a 3a 6f 70  74 69 6f 6e 61 6c 3c 69   |oost::optional<i|
0x307e0:    6e 74 3e 20 3e 2c 20 62  6f 6f 73 74 3a 3a 73 69   |nt> >, boost::si|
0x307f0:    67 6e 61 6c 73 32 3a 3a  73 6c 6f 74 31 3c 73 74   |gnals2::slot1<st|
0x30800:    64 3a 3a 62 61 73 69 63  5f 73 74 72 69 6e 67 3c   |d::basic_string<|
0x30810:    63 68 61 72 3e 2c 20 63  6f 6e 73 74 20 63 68 61   |char>, const cha|
0x30820:    72 2a 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |r*, boost::funct|
0x30830:    69 6f 6e 3c 73 74 64 3a  3a 62 61 73 69 63 5f 73   |ion<std::basic_s|
0x30840:    74 72 69 6e 67 3c 63 68  61 72 3e 28 63 6f 6e 73   |tring<char>(cons|
0x30850:    74 20 63 68 61 72 2a 29  3e 20 3e 2c 20 62 6f 6f   |t char*)> >, boo|
0x30860:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x30870:    74 65 78 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |tex> >, boost::s|
0x30880:    69 67 6e 61 6c 73 32 3a  3a 64 65 74 61 69 6c 3a   |ignals2::detail:|
0x30890:    3a 67 72 6f 75 70 65 64  5f 6c 69 73 74 3c 47 72   |:grouped_list<Gr|
0x308a0:    6f 75 70 2c 20 47 72 6f  75 70 43 6f 6d 70 61 72   |oup, GroupCompar|
0x308b0:    65 2c 20 56 61 6c 75 65  54 79 70 65 3e 20 3d 20   |e, ValueType> = |
0x308c0:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x308d0:    3a 64 65 74 61 69 6c 3a  3a 67 72 6f 75 70 65 64   |:detail::grouped|
0x308e0:    5f 6c 69 73 74 3c 69 6e  74 2c 20 73 74 64 3a 3a   |_list<int, std::|
0x308f0:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x30900:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 62 6f 6f   |::shared_ptr<boo|
0x30910:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 64 65   |st::signals2::de|
0x30920:    74 61 69 6c 3a 3a 63 6f  6e 6e 65 63 74 69 6f 6e   |tail::connection|
0x30930:    5f 62 6f 64 79 3c 73 74  64 3a 3a 70 61 69 72 3c   |_body<std::pair<|
0x30940:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x30950:    3a 64 65 74 61 69 6c 3a  3a 73 6c 6f 74 5f 6d 65   |:detail::slot_me|
0x30960:    74 61 5f 67 72 6f 75 70  2c 20 62 6f 6f 73 74 3a   |ta_group, boost:|
0x30970:    3a 6f 70 74 69 6f 6e 61  6c 3c 69 6e 74 3e 20 3e   |:optional<int> >|
0x30980:    2c 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |, boost::signals|
0x30990:    32 3a 3a 73 6c 6f 74 31  3c 73 74 64 3a 3a 62 61   |2::slot1<std::ba|
0x309a0:    73 69 63 5f 73 74 72 69  6e 67 3c 63 68 61 72 3e   |sic_string<char>|
0x309b0:    2c 20 63 6f 6e 73 74 20  63 68 61 72 2a 2c 20 62   |, const char*, b|
0x309c0:    6f 6f 73 74 3a 3a 66 75  6e 63 74 69 6f 6e 3c 73   |oost::function<s|
0x309d0:    74 64 3a 3a 62 61 73 69  63 5f 73 74 72 69 6e 67   |td::basic_string|
0x309e0:    3c 63 68 61 72 3e 28 63  6f 6e 73 74 20 63 68 61   |<char>(const cha|
0x309f0:    72 2a 29 3e 20 3e 2c 20  62 6f 6f 73 74 3a 3a 73   |r*)> >, boost::s|
0x30a00:    69 67 6e 61 6c 73 32 3a  3a 6d 75 74 65 78 3e 20   |ignals2::mutex> |
0x30a10:    3e 20 3e 5d 00                                     |> >].           |
0x30a15:    00 00 00 00 00 00 00 00  00 00 00 76 6f 69 64 20   |...........void |
0x30a25:    62 6f 6f 73 74 3a 3a 73  68 61 72 65 64 5f 70 74   |boost::shared_pt|
0x30a35:    72 3c 54 3e 3a 3a 72 65  73 65 74 28 59 2a 29 20   |r<T>::reset(Y*) |
0x30a45:    5b 77 69 74 68 20 59 20  3d 20 62 6f 6f 73 74 3a   |[with Y = boost:|
0x30a55:    3a 73 69 67 6e 61 6c 73  32 3a 3a 64 65 74 61 69   |:signals2::detai|
0x30a65:    6c 3a 3a 73 69 67 6e 61  6c 31 5f 69 6d 70 6c 3c   |l::signal1_impl<|
0x30a75:    73 74 64 3a 3a 62 61 73  69 63 5f 73 74 72 69 6e   |std::basic_strin|
0x30a85:    67 3c 63 68 61 72 3e 2c  20 63 6f 6e 73 74 20 63   |g<char>, const c|
0x30a95:    68 61 72 2a 2c 20 62 6f  6f 73 74 3a 3a 73 69 67   |har*, boost::sig|
0x30aa5:    6e 61 6c 73 32 3a 3a 6f  70 74 69 6f 6e 61 6c 5f   |nals2::optional_|
0x30ab5:    6c 61 73 74 5f 76 61 6c  75 65 3c 73 74 64 3a 3a   |last_value<std::|
0x30ac5:    62 61 73 69 63 5f 73 74  72 69 6e 67 3c 63 68 61   |basic_string<cha|
0x30ad5:    72 3e 20 3e 2c 20 69 6e  74 2c 20 73 74 64 3a 3a   |r> >, int, std::|
0x30ae5:    6c 65 73 73 3c 69 6e 74  3e 2c 20 62 6f 6f 73 74   |less<int>, boost|
0x30af5:    3a 3a 66 75 6e 63 74 69  6f 6e 3c 73 74 64 3a 3a   |::function<std::|
0x30b05:    62 61 73 69 63 5f 73 74  72 69 6e 67 3c 63 68 61   |basic_string<cha|
0x30b15:    72 3e 28 63 6f 6e 73 74  20 63 68 61 72 2a 29 3e   |r>(const char*)>|
0x30b25:    2c 20 62 6f 6f 73 74 3a  3a 66 75 6e 63 74 69 6f   |, boost::functio|
0x30b35:    6e 3c 73 74 64 3a 3a 62  61 73 69 63 5f 73 74 72   |n<std::basic_str|
0x30b45:    69 6e 67 3c 63 68 61 72  3e 28 63 6f 6e 73 74 20   |ing<char>(const |
0x30b55:    62 6f 6f 73 74 3a 3a 73  69 67 6e 61 6c 73 32 3a   |boost::signals2:|
0x30b65:    3a 63 6f 6e 6e 65 63 74  69 6f 6e 26 2c 20 63 6f   |:connection&, co|
0x30b75:    6e 73 74 20 63 68 61 72  2a 29 3e 2c 20 62 6f 6f   |nst char*)>, boo|
0x30b85:    73 74 3a 3a 73 69 67 6e  61 6c 73 32 3a 3a 6d 75   |st::signals2::mu|
0x30b95:    74 65 78 3e 3a 3a 69 6e  76 6f 63 61 74 69 6f 6e   |tex>::invocation|
0x30ba5:    5f 73 74 61 74 65 2c 20  54 20 3d 20 62 6f 6f 73   |_state, T = boos|
0x30bb5:    74 3a 3a 73 69 67 6e 61  6c 73 32 3a 3a 64 65 74   |t::signals2::det|
0x30bc5:    61 69 6c 3a 3a 73 69 67  6e 61 6c 31 5f 69 6d 70   |ail::signal1_imp|
0x30bd5:    6c 3c 73 74 64 3a 3a 62  61 73 69 63 5f 73 74 72   |l<std::basic_str|
0x30be5:    69 6e 67 3c 63 68 61 72  3e 2c 20 63 6f 6e 73 74   |ing<char>, const|
0x30bf5:    20 63 68 61 72 2a 2c 20  62 6f 6f 73 74 3a 3a 73   | char*, boost::s|
0x30c05:    69 67 6e 61 6c 73 32 3a  3a 6f 70 74 69 6f 6e 61   |ignals2::optiona|
0x30c15:    6c 5f 6c 61 73 74 5f 76  61 6c 75 65 3c 73 74 64   |l_last_value<std|
0x30c25:    3a 3a 62 61 73 69 63 5f  73 74 72 69 6e 67 3c 63   |::basic_string<c|
0x30c35:    68 61 72 3e 20 3e 2c 20  69 6e 74 2c 20 73 74 64   |har> >, int, std|
0x30c45:    3a 3a 6c 65 73 73 3c 69  6e 74 3e 2c 20 62 6f 6f   |::less<int>, boo|
0x30c55:    73 74 3a 3a 66 75 6e 63  74 69 6f 6e 3c 73 74 64   |st::function<std|
0x30c65:    3a 3a 62 61 73 69 63 5f  73 74 72 69 6e 67 3c 63   |::basic_string<c|
0x30c75:    68 61 72 3e 28 63 6f 6e  73 74 20 63 68 61 72 2a   |har>(const char*|
0x30c85:    29 3e 2c 20 62 6f 6f 73  74 3a 3a 66 75 6e 63 74   |)>, boost::funct|
0x30c95:    69 6f 6e 3c 73 74 64 3a  3a 62 61 73 69 63 5f 73   |ion<std::basic_s|
0x30ca5:    74 72 69 6e 67 3c 63 68  61 72 3e 28 63 6f 6e 73   |tring<char>(cons|
0x30cb5:    74 20 62 6f 6f 73 74 3a  3a 73 69 67 6e 61 6c 73   |t boost::signals|
0x30cc5:    32 3a 3a 63 6f 6e 6e 65  63 74 69 6f 6e 26 2c 20   |2::connection&, |
0x30cd5:    63 6f 6e 73 74 20 63 68  61 72 2a 29 3e 2c 20 62   |const char*)>, b|
0x30ce5:    6f 6f 73 74 3a 3a 73 69  67 6e 61 6c 73 32 3a 3a   |oost::signals2::|
0x30cf5:    6d 75 74 65 78 3e 3a 3a  69 6e 76 6f 63 61 74 69   |mutex>::invocati|
0x30d05:    6f 6e 5f 73 74 61 74 65  5d 00 00 00 00 00 00 00   |on_state].......|
0x30d15:    00 00 00 00 00 00 00 00  00 00 00 76 6f 69 64 20   |...........void |
0x30d25:    62 6f 6f 73 74 3a 3a 63  6f 6e 64 69 74 69 6f 6e   |boost::condition|
0x30d35:    5f 76 61 72 69 61 62 6c  65 3a 3a 6e 6f 74 69 66   |_variable::notif|
0x30d45:    79 5f 61 6c 6c 28 29 00  00 00 00 00 00 00 00 00   |y_all().........|
0x30d55:    00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x30d60:    62 6f 6f 73 74 3a 3a 65  78 63 65 70 74 69 6f 6e   |boost::exception|   "boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]"
0x30d70:    5f 70 74 72 20 62 6f 6f  73 74 3a 3a 65 78 63 65   |_ptr boost::exce|
0x30d80:    70 74 69 6f 6e 5f 64 65  74 61 69 6c 3a 3a 67 65   |ption_detail::ge|
0x30d90:    74 5f 62 61 64 5f 61 6c  6c 6f 63 28 29 20 5b 77   |t_bad_alloc() [w|
0x30da0:    69 74 68 20 69 6e 74 20  44 75 6d 6d 79 20 3d 20   |ith int Dummy = |
0x30db0:    34 32 2c 20 62 6f 6f 73  74 3a 3a 65 78 63 65 70   |42, boost::excep|
0x30dc0:    74 69 6f 6e 5f 70 74 72  20 3d 20 62 6f 6f 73 74   |tion_ptr = boost|
0x30dd0:    3a 3a 73 68 61 72 65 64  5f 70 74 72 3c 63 6f 6e   |::shared_ptr<con|
0x30de0:    73 74 20 62 6f 6f 73 74  3a 3a 65 78 63 65 70 74   |st boost::except|
0x30df0:    69 6f 6e 5f 64 65 74 61  69 6c 3a 3a 63 6c 6f 6e   |ion_detail::clon|
0x30e00:    65 5f 62 61 73 65 3e 5d  00                        |e_base>].       |
0x30e09:    ??                                                 |?               |
; section: .rodata._ZTVN5boost9exceptionE
0x30e10:    00 00 00 00 a0 17 03 00  00 00 00 00 00 00 00 00   |................|
0x30e20:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x30e20:    00 00 00 00 c0 17 03 00  00 f7 00 00 a0 04 01 00   |................|
0x30e30:    10 a5 00 00 f8 ff ff ff  c0 17 03 00 f0 f6 00 00   |................|
0x30e40:    90 04 01 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_baseE
0x30e48:    00 00 00 00 e0 17 03 00  00 00 00 00 00 00 00 00   |................|
0x30e58:    70 a5 00 00 30 b3 00 00  00                        |p...0....       |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x30e60:    00 00 00 00 c0 0e 03 00  30 04 01 00 b0 03 01 00   |........0.......|
0x30e70:    10 a5 00 00 d0 ee 00 00  20 19 01 00 f8 ff ff ff   |........ .......|
0x30e80:    c0 0e 03 00 20 04 01 00  a0 03 01 00 e4 ff ff ff   |.... ...........|
0x30e90:    c0 0e 03 00 c0 ee 00 00  10 19 01 00 10 04 01 00   |................|
0x30ea0:    90 03 01 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x30ec0:    08 00 00 00 00 18 03 00  00 00 00 00 02 00 00 00   |................|
0x30ed0:    c0 17 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |................|
0x30ee0:    00                                                 |.               |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorISt13runtime_errorEE
0x30ee0:    00 00 00 00 60 18 03 00  70 f7 00 00 90 fa 00 00   |....`...p.......|
0x30ef0:    00 00 00 00 f8 ff ff ff  60 18 03 00 60 f7 00 00   |........`...`...|
0x30f00:    80 fa 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEEE
0x30f20:    00 00 00 00 80 0f 03 00  10 fb 00 00 20 fa 00 00   |............ ...|
0x30f30:    00 00 00 00 70 f1 00 00  a0 0d 01 00 f8 ff ff ff   |....p...........|
0x30f40:    80 0f 03 00 00 fb 00 00  10 fa 00 00 e4 ff ff ff   |................|
0x30f50:    80 0f 03 00 60 f1 00 00  90 0d 01 00 f0 fa 00 00   |....`...........|
0x30f60:    00 fa 00 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEEE
0x30f80:    08 00 00 00 80 18 03 00  00 00 00 00 02 00 00 00   |................|
0x30f90:    60 18 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |`...............|
0x30fa0:    00                                                 |.               |
; section: .rodata._ZTVN5boost9gregorian16bad_day_of_monthE
0x30fa0:    00 00 00 00 d8 18 03 00  20 d2 00 00 70 e9 00 00   |........ ...p...|
0x30fb0:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEE
0x30fc0:    00 00 00 00 00 19 03 00  d0 f7 00 00 50 00 01 00   |............P...|
0x30fd0:    00 00 00 00 f8 ff ff ff  00 19 03 00 c0 f7 00 00   |................|
0x30fe0:    40 00 01 00 ??                                     |@...?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEE
0x31000:    00 00 00 00 60 10 03 00  e0 ff 00 00 60 ff 00 00   |....`.......`...|
0x31010:    00 00 00 00 00 f4 00 00  f0 10 01 00 f8 ff ff ff   |................|
0x31020:    60 10 03 00 d0 ff 00 00  50 ff 00 00 e4 ff ff ff   |`.......P.......|
0x31030:    60 10 03 00 f0 f3 00 00  e0 10 01 00 c0 ff 00 00   |`...............|
0x31040:    40 ff 00 00 ??                                     |@...?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEE
0x31060:    08 00 00 00 20 19 03 00  00 00 00 00 02 00 00 00   |.... ...........|
0x31070:    00 19 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |................|
0x31080:    00                                                 |.               |
; section: .rodata._ZTVN5boost9gregorian9bad_monthE
0x31080:    00 00 00 00 88 19 03 00  a0 d2 00 00 20 e9 00 00   |............ ...|
0x31090:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEE
0x310a0:    00 00 00 00 a0 19 03 00  20 f9 00 00 c0 00 01 00   |........ .......|
0x310b0:    00 00 00 00 f8 ff ff ff  a0 19 03 00 10 f9 00 00   |................|
0x310c0:    b0 00 01 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE
0x310e0:    00 00 00 00 40 11 03 00  40 01 01 00 c0 01 01 00   |....@...@.......|
0x310f0:    00 00 00 00 20 f3 00 00  e0 8a 01 00 f8 ff ff ff   |.... ...........|
0x31100:    40 11 03 00 30 01 01 00  b0 01 01 00 e4 ff ff ff   |@...0...........|
0x31110:    40 11 03 00 10 f3 00 00  d0 8a 01 00 20 01 01 00   |@........... ...|
0x31120:    a0 01 01 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE
0x31140:    08 00 00 00 c0 19 03 00  00 00 00 00 02 00 00 00   |................|
0x31150:    a0 19 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |................|
0x31160:    00                                                 |.               |
; section: .rodata._ZTVN5boost9gregorian8bad_yearE
0x31160:    00 00 00 00 20 1a 03 00  60 d2 00 00 d0 e8 00 00   |.... ...`.......|
0x31170:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEE
0x31180:    00 00 00 00 40 1a 03 00  b0 f8 00 00 70 fd 00 00   |....@.......p...|
0x31190:    00 00 00 00 f8 ff ff ff  40 1a 03 00 a0 f8 00 00   |........@.......|
0x311a0:    60 fd 00 00 ??                                     |`...?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEEE
0x311c0:    00 00 00 00 20 12 03 00  00 fd 00 00 80 fc 00 00   |.... ...........|
0x311d0:    00 00 00 00 e0 f4 00 00  b0 88 01 00 f8 ff ff ff   |................|
0x311e0:    20 12 03 00 f0 fc 00 00  70 fc 00 00 e4 ff ff ff   | .......p.......|
0x311f0:    20 12 03 00 d0 f4 00 00  a0 88 01 00 e0 fc 00 00   | ...............|
0x31200:    60 fc 00 00 ??                                     |`...?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEEE
0x31220:    08 00 00 00 60 1a 03 00  00 00 00 00 02 00 00 00   |....`...........|
0x31230:    40 1a 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |@...............|
0x31240:    00                                                 |.               |
; section: .rodata._ZTVN5boost21thread_resource_errorE
0x31240:    00 00 00 00 bc 1a 03 00  c0 e9 00 00 90 eb 00 00   |................|
0x31250:    40 a5 00 00 ??                                     |@...?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x31260:    00 00 00 00 e0 1a 03 00  90 f6 00 00 b0 02 01 00   |................|
0x31270:    40 a5 00 00 f8 ff ff ff  e0 1a 03 00 80 f6 00 00   |@...............|
0x31280:    a0 02 01 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x312a0:    00 00 00 00 00 13 03 00  40 02 01 00 30 03 01 00   |........@...0...|
0x312b0:    40 a5 00 00 90 ef 00 00  00 13 01 00 f8 ff ff ff   |@...............|
0x312c0:    00 13 03 00 30 02 01 00  20 03 01 00 e4 ff ff ff   |....0... .......|
0x312d0:    00 13 03 00 80 ef 00 00  f0 12 01 00 20 02 01 00   |............ ...|
0x312e0:    10 03 01 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x31300:    08 00 00 00 00 1b 03 00  00 00 00 00 02 00 00 00   |................|
0x31310:    e0 1a 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |................|
0x31320:    08                                                 |.               |
; section: .rodata._ZTIN5boost8signals212expired_slotE
0x31320:    08 00 00 00 60 1b 03 00  80 1b 03 00 ??            |....`.......?   |
; section: .rodata._ZTVN5boost17bad_function_callE
0x31330:    00 00 00 00 8c 1b 03 00  c0 b5 00 00 00 ea 00 00   |................|
0x31340:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x31360:    00 00 00 00 a0 1b 03 00  40 f8 00 00 e0 fd 00 00   |........@.......|
0x31370:    00 00 00 00 f8 ff ff ff  a0 1b 03 00 30 f8 00 00   |............0...|
0x31380:    d0 fd 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x313a0:    00 00 00 00 00 14 03 00  60 fe 00 00 e0 fe 00 00   |........`.......|
0x313b0:    00 00 00 00 40 f2 00 00  d0 35 01 00 f8 ff ff ff   |....@....5......|
0x313c0:    00 14 03 00 50 fe 00 00  d0 fe 00 00 e4 ff ff ff   |....P...........|
0x313d0:    00 14 03 00 30 f2 00 00  c0 35 01 00 40 fe 00 00   |....0....5..@...|
0x313e0:    c0 fe 00 00 ??                                     |....?           |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x31400:    08 00 00 00 c0 1b 03 00  00 00 00 00 02 00 00 00   |................|
0x31410:    a0 1b 03 00 02 00 00 00  e0 17 03 00 02 1c 00 00   |................|
0x31420:    00                                                 |.               |
; section: .rodata._ZTVN5boost6detail15sp_counted_baseE
0x31420:    00 00 00 00 1c 1c 03 00  a0 a5 00 00 f0 b2 00 00   |................|
0x31430:    00 00 00 00 d0 a5 00 00  00 00 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEEE
0x31440:    00 00 00 00 24 1c 03 00  f0 a7 00 00 70 b2 00 00   |....$.......p...|
0x31450:    20 fc 01 00 d0 a5 00 00  90 aa 00 00 ??            | ...........?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEEE
0x31460:    00 00 00 00 30 1c 03 00  c0 a7 00 00 b0 b2 00 00   |....0...........|
0x31470:    f0 06 01 00 d0 a5 00 00  60 aa 00 00 08            |........`....   |
; section: .rodata._ZTIN5boost18thread_interruptedE
0x3147c:    08 00 00 00 3c 1c 03 00  ??                        |....<...?       |
; section: .rodata._ZTVN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEE
0x31488:    00 00 00 00 5c 1c 03 00  20 d3 00 00 30 e8 00 00   |....\... ...0...|
0x31498:    f0 ad 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEEE
0x314a0:    00 00 00 00 68 1c 03 00  a0 a9 00 00 30 b0 00 00   |....h.......0...|
0x314b0:    00 ad 00 00 d0 a5 00 00  60 ad 00 00 ??            |........`...?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEEE
0x314c0:    00 00 00 00 74 1c 03 00  e0 a8 00 00 30 b1 00 00   |....t.......0...|
0x314d0:    00 e3 01 00 d0 a5 00 00  80 ab 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x314e0:    00 00 00 00 80 1c 03 00  70 a9 00 00 70 b0 00 00   |........p...p...|
0x314f0:    80 07 01 00 d0 a5 00 00  70 ac 00 00 ??            |........p...?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEEE
0x31500:    00 00 00 00 8c 1c 03 00  80 a8 00 00 b0 b1 00 00   |................|
0x31510:    e0 e4 01 00 d0 a5 00 00  20 ab 00 00 ??            |........ ...?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEEE
0x31520:    00 00 00 00 98 1c 03 00  40 a9 00 00 b0 b0 00 00   |........@.......|
0x31530:    a0 08 01 00 d0 a5 00 00  40 ac 00 00 ??            |........@...?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEEE
0x31540:    00 00 00 00 a4 1c 03 00  50 a8 00 00 f0 b1 00 00   |........P.......|
0x31550:    20 ee 01 00 d0 a5 00 00  f0 aa 00 00 ??            | ...........?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x31560:    00 00 00 00 b0 1c 03 00  20 a8 00 00 30 b2 00 00   |........ ...0...|
0x31570:    10 08 01 00 d0 a5 00 00  c0 aa 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEEE
0x31580:    00 00 00 00 bc 1c 03 00  e0 d2 00 00 80 e8 00 00   |................|
0x31590:    a0 ac 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEEE
0x31598:    00 00 00 00 c8 1c 03 00  10 a9 00 00 f0 b0 00 00   |................|
0x315a8:    b0 ab 00 00 d0 a5 00 00  10 ac 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x315b8:    00 00 00 00 d4 1c 03 00  80 6d 01 00 00 6e 01 00   |.........m...n..|
0x315c8:    d0 ae 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x315d0:    00 00 00 00 e0 1c 03 00  e0 6c 01 00 90 6e 01 00   |.........l...n..|
0x315e0:    d0 ae 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost8signals211signal_baseE
0x315e8:    00 00 00 00 00 1d 03 00  60 a7 00 00 b0 b3 00 00   |........`.......|
0x315f8:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x31600:    00 00 00 00 0c 1d 03 00  00 6b 01 00 80 6b 01 00   |.........k...k..|
0x31610:    20 af 00 00 ??                                     | ...?           |
; section: .rodata._ZTVN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x31618:    00 00 00 00 20 1d 03 00  d0 69 01 00 70 6a 01 00   |.... ....i..pj..|
0x31628:    20 af 00 00 ??                                     | ...?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEEE
0x31630:    00 00 00 00 40 1d 03 00  00 aa 00 00 b0 af 00 00   |....@...........|
0x31640:    10 06 01 00 d0 a5 00 00  c0 ad 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEEE
0x31650:    00 00 00 00 4c 1d 03 00  d0 a9 00 00 f0 af 00 00   |....L...........|
0x31660:    80 06 01 00 d0 a5 00 00  90 ad 00 00 ??            |............?   |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEEE
0x31670:    00 00 00 00 58 1d 03 00  b0 a8 00 00 70 b1 00 00   |....X.......p...|
0x31680:    00 b5 00 00 d0 a5 00 00  50 ab 00 00 ??            |........P...?   |
; section: .rodata._ZTVN5boost16exception_detail10bad_alloc_E
0x316a0:    00 00 00 00 80 1d 03 00  30 f6 00 00 00 fc 00 00   |........0.......|
0x316b0:    ec ff ff ff 80 1d 03 00  20 f6 00 00 f0 fb 00 00   |........ .......|
0x316c0:    00 00 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x316e0:    00 00 00 00 60 17 03 00  90 fb 00 00 a0 f9 00 00   |....`...........|
0x316f0:    30 ee 00 00 a0 b6 00 00  ec ff ff ff 60 17 03 00   |0...........`...|
0x31700:    80 fb 00 00 90 f9 00 00  00 00 00 00 e8 ff ff ff   |................|
0x31710:    60 17 03 00 20 ee 00 00  90 b6 00 00 70 fb 00 00   |`... .......p...|
0x31720:    80 f9 00 00 ??                                     |....?           |
; section: .rodata._ZTVN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x31728:    00 00 00 00 a0 1d 03 00  30 aa 00 00 70 af 00 00   |........0...p...|
0x31738:    40 ae 00 00 d0 a5 00 00  a0 ae 00 00 ??            |@...........?   |
; section: .rodata._ZTIN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x31760:    08 00 00 00 c0 1d 03 00  00 00 00 00 02 00 00 00   |................|
0x31770:    80 1d 03 00 02 00 00 00  e0 17 03 00 02 18 00 00   |................|
0x31780:    08                                                 |.               |
; section: .rodata._ZTIN5boost12noncopyable_11noncopyableE
0x31780:    08 00 00 00 00 1e 03 00  08                        |.........       |
; section: .rodata._ZTIN5boost16thread_exceptionE
0x31788:    08 00 00 00 24 1e 03 00  00 00 00 00 08            |....$........   |
; section: .rodata._ZTIN5boost10lock_errorE
0x31794:    08 00 00 00 3f 1e 03 00  88 17 03 00 08            |....?........   |
; section: .rodata._ZTIN5boost9exceptionE
0x317a0:    08 00 00 00 54 1e 03 00  ??                        |....T...?       |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x317c0:    08 00 00 00 80 1e 03 00  00 00 00 00 02 00 00 00   |................|
0x317d0:    94 17 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x317e0:    08                                                 |.               |
; section: .rodata._ZTIN5boost16exception_detail10clone_baseE
0x317e0:    08 00 00 00 e0 1e 03 00  ??                        |........?       |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEE
0x31800:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31810:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31820:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31830:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31840:    4e 53 5f 31 30 6c 6f 63  6b 5f 65 72 72 6f 72 45   |NS_10lock_errorE|
0x31850:    45 45 45 45 00 ??                                  |EEEE.?          |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorISt13runtime_errorEE
0x31860:    08 00 00 00 20 1f 03 00  00 00 00 00 02 00 00 00   |.... ...........|
0x31870:    00 00 00 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x31880:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorISt13runtime_errorEEEE
0x31880:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31890:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x318a0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x318b0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x318c0:    53 74 31 33 72 75 6e 74  69 6d 65 5f 65 72 72 6f   |St13runtime_erro|
0x318d0:    72 45 45 45 45 00 ??                               |rEEEE.?         |
; section: .rodata._ZTIN5boost9gregorian16bad_day_of_monthE
0x318d8:    08 00 00 00 80 1f 03 00  00 00 00 00 ??            |............?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEE
0x31900:    08 00 00 00 c0 1f 03 00  00 00 00 00 02 00 00 00   |................|
0x31910:    d8 18 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x31920:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian16bad_day_of_monthEEEEE
0x31920:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31930:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31940:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31950:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31960:    4e 53 5f 39 67 72 65 67  6f 72 69 61 6e 31 36 62   |NS_9gregorian16b|
0x31970:    61 64 5f 64 61 79 5f 6f  66 5f 6d 6f 6e 74 68 45   |ad_day_of_monthE|
0x31980:    45 45 45 45 00 ??                                  |EEEE.?          |
; section: .rodata._ZTIN5boost9gregorian9bad_monthE
0x31988:    08 00 00 00 12 20 03 00  00 00 00 00 ??            |..... ......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEE
0x319a0:    08 00 00 00 40 20 03 00  00 00 00 00 02 00 00 00   |....@ ..........|
0x319b0:    88 19 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x319c0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian9bad_monthEEEEE
0x319c0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x319d0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x319e0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x319f0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31a00:    4e 53 5f 39 67 72 65 67  6f 72 69 61 6e 39 62 61   |NS_9gregorian9ba|
0x31a10:    64 5f 6d 6f 6e 74 68 45  45 45 45 45 00 ??         |d_monthEEEEE.?  |
; section: .rodata._ZTIN5boost9gregorian8bad_yearE
0x31a20:    08 00 00 00 8a 20 03 00  00 00 00 00 ??            |..... ......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEE
0x31a40:    08 00 00 00 c0 20 03 00  00 00 00 00 02 00 00 00   |..... ..........|
0x31a50:    20 1a 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   | ...............|
0x31a60:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_9gregorian8bad_yearEEEEE
0x31a60:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31a70:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31a80:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31a90:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31aa0:    4e 53 5f 39 67 72 65 67  6f 72 69 61 6e 38 62 61   |NS_9gregorian8ba|
0x31ab0:    64 5f 79 65 61 72 45 45  45 45 45 00 08            |d_yearEEEEE..   |
; section: .rodata._ZTIN5boost21thread_resource_errorE
0x31abc:    08 00 00 00 20 21 03 00  88 17 03 00 ??            |.... !......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x31ae0:    08 00 00 00 40 21 03 00  00 00 00 00 02 00 00 00   |....@!..........|
0x31af0:    bc 1a 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x31b00:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEE
0x31b00:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31b10:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31b20:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31b30:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31b40:    4e 53 5f 32 31 74 68 72  65 61 64 5f 72 65 73 6f   |NS_21thread_reso|
0x31b50:    75 72 63 65 5f 65 72 72  6f 72 45 45 45 45 45 00   |urce_errorEEEEE.|
0x31b60:    4e                                                 |N               |
; section: .rodata._ZTSN5boost8signals212expired_slotE
0x31b60:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x31b70:    31 32 65 78 70 69 72 65  64 5f 73 6c 6f 74 45 00   |12expired_slotE.|
0x31b80:    08                                                 |.               |
; section: .rodata._ZTIN5boost12bad_weak_ptrE
0x31b80:    08 00 00 00 8d 21 03 00  00 00 00 00 08            |.....!.......   |
; section: .rodata._ZTIN5boost17bad_function_callE
0x31b8c:    08 00 00 00 a4 21 03 00  00 00 00 00 ??            |.....!......?   |
; section: .rodata._ZTIN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x31ba0:    08 00 00 00 c0 21 03 00  00 00 00 00 02 00 00 00   |.....!..........|
0x31bb0:    8c 1b 03 00 02 00 00 00  a0 17 03 00 02 08 00 00   |................|
0x31bc0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEEE
0x31bc0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31bd0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31be0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 39 65 72 72 6f   |_implINS0_19erro|
0x31bf0:    72 5f 69 6e 66 6f 5f 69  6e 6a 65 63 74 6f 72 49   |r_info_injectorI|
0x31c00:    4e 53 5f 31 37 62 61 64  5f 66 75 6e 63 74 69 6f   |NS_17bad_functio|
0x31c10:    6e 5f 63 61 6c 6c 45 45  45 45 45 00 08            |n_callEEEEE..   |
; section: .rodata._ZTIN5boost6detail15sp_counted_baseE
0x31c1c:    08 00 00 00 20 22 03 00  08                        |.... "...       |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEEE
0x31c24:    08 00 00 00 60 22 03 00  1c 1c 03 00 08            |....`".......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEEE
0x31c30:    08 00 00 00 40 23 03 00  1c 1c 03 00 4e            |....@#......N   |
; section: .rodata._ZTSN5boost18thread_interruptedE
0x31c3c:    4e 35 62 6f 6f 73 74 31  38 74 68 72 65 61 64 5f   |N5boost18thread_|
0x31c4c:    69 6e 74 65 72 72 75 70  74 65 64 45 00 ??         |interruptedE.?  |
; section: .rodata._ZTIN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEE
0x31c5c:    08 00 00 00 20 24 03 00  00 00 00 00 08            |.... $.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEEE
0x31c68:    08 00 00 00 a0 24 03 00  1c 1c 03 00 08            |.....$.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEEE
0x31c74:    08 00 00 00 20 25 03 00  1c 1c 03 00 08            |.... %.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x31c80:    08 00 00 00 20 26 03 00  1c 1c 03 00 08            |.... &.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEEE
0x31c8c:    08 00 00 00 00 27 03 00  1c 1c 03 00 08            |.....'.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEEE
0x31c98:    08 00 00 00 00 28 03 00  1c 1c 03 00 08            |.....(.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEEE
0x31ca4:    08 00 00 00 e0 28 03 00  1c 1c 03 00 08            |.....(.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x31cb0:    08 00 00 00 c0 29 03 00  1c 1c 03 00 08            |.....).......   |
; section: .rodata._ZTIN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEEE
0x31cbc:    08 00 00 00 a0 2a 03 00  00 00 00 00 08            |.....*.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEEE
0x31cc8:    08 00 00 00 20 2b 03 00  1c 1c 03 00 08            |.... +.......   |
; section: .rodata._ZTIN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x31cd4:    08 00 00 00 c0 2b 03 00  e0 1c 03 00 08            |.....+.......   |
; section: .rodata._ZTIN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x31ce0:    08 00 00 00 60 2c 03 00  00 00 00 00 02 00 00 00   |....`,..........|
0x31cf0:    00 1d 03 00 02 00 00 00  f0 2c 03 00 02 00 00 00   |.........,......|
0x31d00:    08                                                 |.               |
; section: .rodata._ZTIN5boost8signals211signal_baseE
0x31d00:    08 00 00 00 f8 2c 03 00  80 17 03 00 08            |.....,.......   |
; section: .rodata._ZTIN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x31d0c:    08 00 00 00 20 2d 03 00  20 1d 03 00 ??            |.... -.. ...?   |
; section: .rodata._ZTIN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x31d20:    08 00 00 00 c0 2d 03 00  00 00 00 00 02 00 00 00   |.....-..........|
0x31d30:    00 1d 03 00 02 00 00 00  f0 2c 03 00 02 00 00 00   |.........,......|
0x31d40:    08                                                 |.               |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEEE
0x31d40:    08 00 00 00 60 2e 03 00  1c 1c 03 00 08            |....`........   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEEE
0x31d4c:    08 00 00 00 20 2f 03 00  1c 1c 03 00 08            |.... /.......   |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEEE
0x31d58:    08 00 00 00 e0 2f 03 00  1c 1c 03 00 ??            |...../......?   |
; section: .rodata._ZTIN5boost16exception_detail10bad_alloc_E
0x31d80:    08 00 00 00 40 30 03 00  00 00 00 00 02 00 00 00   |....@0..........|
0x31d90:    a0 17 03 00 02 00 00 00  00 00 00 00 02 14 00 00   |................|
0x31da0:    08                                                 |.               |
; section: .rodata._ZTIN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x31da0:    08 00 00 00 80 30 03 00  1c 1c 03 00 ??            |.....0......?   |
; section: .rodata._ZTSN5boost16exception_detail10clone_implINS0_10bad_alloc_EEE
0x31dc0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31dd0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31de0:    5f 69 6d 70 6c 49 4e 53  30 5f 31 30 62 61 64 5f   |_implINS0_10bad_|
0x31df0:    61 6c 6c 6f 63 5f 45 45  45 00 ??                  |alloc_EEE.?     |
; section: .rodata._ZTSN5boost12noncopyable_11noncopyableE
0x31e00:    4e 35 62 6f 6f 73 74 31  32 6e 6f 6e 63 6f 70 79   |N5boost12noncopy|
0x31e10:    61 62 6c 65 5f 31 31 6e  6f 6e 63 6f 70 79 61 62   |able_11noncopyab|
0x31e20:    6c 65 45 00 4e                                     |leE.N           |
; section: .rodata._ZTSN5boost16thread_exceptionE
0x31e24:    4e 35 62 6f 6f 73 74 31  36 74 68 72 65 61 64 5f   |N5boost16thread_|
0x31e34:    65 78 63 65 70 74 69 6f  6e 45 00 4e               |exceptionE.N    |
; section: .rodata._ZTSN5boost10lock_errorE
0x31e3f:    4e 35 62 6f 6f 73 74 31  30 6c 6f 63 6b 5f 65 72   |N5boost10lock_er|
0x31e4f:    72 6f 72 45 00 4e                                  |rorE.N          |
; section: .rodata._ZTSN5boost9exceptionE
0x31e54:    4e 35 62 6f 6f 73 74 39  65 78 63 65 70 74 69 6f   |N5boost9exceptio|
0x31e64:    6e 45 00 ??                                        |nE.?            |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_10lock_errorEEE
0x31e80:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31e90:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x31ea0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x31eb0:    53 5f 31 30 6c 6f 63 6b  5f 65 72 72 6f 72 45 45   |S_10lock_errorEE|
0x31ec0:    45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost16exception_detail10clone_baseE
0x31ee0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31ef0:    6f 6e 5f 64 65 74 61 69  6c 31 30 63 6c 6f 6e 65   |on_detail10clone|
0x31f00:    5f 62 61 73 65 45 00 ??                            |_baseE.?        |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorISt13runtime_errorEE
0x31f20:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31f30:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x31f40:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 53   |_info_injectorIS|
0x31f50:    74 31 33 72 75 6e 74 69  6d 65 5f 65 72 72 6f 72   |t13runtime_error|
0x31f60:    45 45 00 ??                                        |EE.?            |
; section: .rodata._ZTSN5boost9gregorian16bad_day_of_monthE
0x31f80:    4e 35 62 6f 6f 73 74 39  67 72 65 67 6f 72 69 61   |N5boost9gregoria|
0x31f90:    6e 31 36 62 61 64 5f 64  61 79 5f 6f 66 5f 6d 6f   |n16bad_day_of_mo|
0x31fa0:    6e 74 68 45 00 ??                                  |nthE.?          |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_9gregorian16bad_day_of_monthEEE
0x31fc0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x31fd0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x31fe0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x31ff0:    53 5f 39 67 72 65 67 6f  72 69 61 6e 31 36 62 61   |S_9gregorian16ba|
0x32000:    64 5f 64 61 79 5f 6f 66  5f 6d 6f 6e 74 68 45 45   |d_day_of_monthEE|
0x32010:    45 00 4e                                           |E.N             |
; section: .rodata._ZTSN5boost9gregorian9bad_monthE
0x32012:    4e 35 62 6f 6f 73 74 39  67 72 65 67 6f 72 69 61   |N5boost9gregoria|
0x32022:    6e 39 62 61 64 5f 6d 6f  6e 74 68 45 00 ??         |n9bad_monthE.?  |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_9gregorian9bad_monthEEE
0x32040:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x32050:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x32060:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x32070:    53 5f 39 67 72 65 67 6f  72 69 61 6e 39 62 61 64   |S_9gregorian9bad|
0x32080:    5f 6d 6f 6e 74 68 45 45  45 00 4e                  |_monthEEE.N     |
; section: .rodata._ZTSN5boost9gregorian8bad_yearE
0x3208a:    4e 35 62 6f 6f 73 74 39  67 72 65 67 6f 72 69 61   |N5boost9gregoria|
0x3209a:    6e 38 62 61 64 5f 79 65  61 72 45 00 ??            |n8bad_yearE.?   |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_9gregorian8bad_yearEEE
0x320c0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x320d0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x320e0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x320f0:    53 5f 39 67 72 65 67 6f  72 69 61 6e 38 62 61 64   |S_9gregorian8bad|
0x32100:    5f 79 65 61 72 45 45 45  00 ??                     |_yearEEE.?      |
; section: .rodata._ZTSN5boost21thread_resource_errorE
0x32120:    4e 35 62 6f 6f 73 74 32  31 74 68 72 65 61 64 5f   |N5boost21thread_|
0x32130:    72 65 73 6f 75 72 63 65  5f 65 72 72 6f 72 45 00   |resource_errorE.|
0x32140:    4e                                                 |N               |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEE
0x32140:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x32150:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x32160:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x32170:    53 5f 32 31 74 68 72 65  61 64 5f 72 65 73 6f 75   |S_21thread_resou|
0x32180:    72 63 65 5f 65 72 72 6f  72 45 45 45 00 4e         |rce_errorEEE.N  |
; section: .rodata._ZTSN5boost12bad_weak_ptrE
0x3218d:    4e 35 62 6f 6f 73 74 31  32 62 61 64 5f 77 65 61   |N5boost12bad_wea|
0x3219d:    6b 5f 70 74 72 45 00 4e                            |k_ptrE.N        |
; section: .rodata._ZTSN5boost17bad_function_callE
0x321a4:    4e 35 62 6f 6f 73 74 31  37 62 61 64 5f 66 75 6e   |N5boost17bad_fun|
0x321b4:    63 74 69 6f 6e 5f 63 61  6c 6c 45 00 4e            |ction_callE.N   |
; section: .rodata._ZTSN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEE
0x321c0:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x321d0:    6f 6e 5f 64 65 74 61 69  6c 31 39 65 72 72 6f 72   |on_detail19error|
0x321e0:    5f 69 6e 66 6f 5f 69 6e  6a 65 63 74 6f 72 49 4e   |_info_injectorIN|
0x321f0:    53 5f 31 37 62 61 64 5f  66 75 6e 63 74 69 6f 6e   |S_17bad_function|
0x32200:    5f 63 61 6c 6c 45 45 45  00 ??                     |_callEEE.?      |
; section: .rodata._ZTSN5boost6detail15sp_counted_baseE
0x32220:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 35   |N5boost6detail15|
0x32230:    73 70 5f 63 6f 75 6e 74  65 64 5f 62 61 73 65 45   |sp_counted_baseE|
0x32240:    00 ??                                              |.?              |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IviNS_8functionIFviEEEEENS2_5mutexEEEEEEEEE
0x32260:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32270:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32280:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32290:    65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0x322a0:    69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0x322b0:    53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0x322c0:    53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0x322d0:    62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0x322e0:    5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0x322f0:    75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0x32300:    69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 31 49 76   |iEEENS2_5slot1Iv|
0x32310:    69 4e 53 5f 38 66 75 6e  63 74 69 6f 6e 49 46 76   |iNS_8functionIFv|
0x32320:    69 45 45 45 45 45 4e 53  32 5f 35 6d 75 74 65 78   |iEEEEENS2_5mutex|
0x32330:    45 45 45 45 45 45 45 45  45 00 ??                  |EEEEEEEEE.?     |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIviNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFviEEENS9_IFvRKNS2_10connectionEiEEENS2_5mutexEE16invocation_stateEEE
0x32340:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32350:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32360:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32370:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 31 5f 69   |etail12signal1_i|
0x32380:    6d 70 6c 49 76 69 4e 53  32 5f 31 39 6f 70 74 69   |mplIviNS2_19opti|
0x32390:    6f 6e 61 6c 5f 6c 61 73  74 5f 76 61 6c 75 65 49   |onal_last_valueI|
0x323a0:    76 45 45 69 53 74 34 6c  65 73 73 49 69 45 4e 53   |vEEiSt4lessIiENS|
0x323b0:    5f 38 66 75 6e 63 74 69  6f 6e 49 46 76 69 45 45   |_8functionIFviEE|
0x323c0:    45 4e 53 39 5f 49 46 76  52 4b 4e 53 32 5f 31 30   |ENS9_IFvRKNS2_10|
0x323d0:    63 6f 6e 6e 65 63 74 69  6f 6e 45 69 45 45 45 4e   |connectionEiEEEN|
0x323e0:    53 32 5f 35 6d 75 74 65  78 45 45 31 36 69 6e 76   |S2_5mutexEE16inv|
0x323f0:    6f 63 61 74 69 6f 6e 5f  73 74 61 74 65 45 45 45   |ocation_stateEEE|
0x32400:    00 ??                                              |.?              |
; section: .rodata._ZTSN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS2_5list2INS2_5valueIS5_EENSB_IS7_EEEEEEEE
0x32420:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 31   |N5boost6detail11|
0x32430:    74 68 72 65 61 64 5f 64  61 74 61 49 4e 53 5f 33   |thread_dataINS_3|
0x32440:    5f 62 69 36 62 69 6e 64  5f 74 49 76 50 46 76 50   |_bi6bind_tIvPFvP|
0x32450:    4b 63 50 46 76 76 45 45  4e 53 32 5f 35 6c 69 73   |KcPFvvEENS2_5lis|
0x32460:    74 32 49 4e 53 32 5f 35  76 61 6c 75 65 49 53 35   |t2INS2_5valueIS5|
0x32470:    5f 45 45 4e 53 42 5f 49  53 37 5f 45 45 45 45 45   |_EENSB_IS7_EEEEE|
0x32480:    45 45 45 00 ??                                     |EEE.?           |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvEENS3_5list2INS3_5valueIS6_EENSC_IS8_EEEEEEEEEE
0x324a0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x324b0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x324c0:    70 49 4e 53 30 5f 31 31  74 68 72 65 61 64 5f 64   |pINS0_11thread_d|
0x324d0:    61 74 61 49 4e 53 5f 33  5f 62 69 36 62 69 6e 64   |ataINS_3_bi6bind|
0x324e0:    5f 74 49 76 50 46 76 50  4b 63 50 46 76 76 45 45   |_tIvPFvPKcPFvvEE|
0x324f0:    4e 53 33 5f 35 6c 69 73  74 32 49 4e 53 33 5f 35   |NS3_5list2INS3_5|
0x32500:    76 61 6c 75 65 49 53 36  5f 45 45 4e 53 43 5f 49   |valueIS6_EENSC_I|
0x32510:    53 38 5f 45 45 45 45 45  45 45 45 45 45 00 ??      |S8_EEEEEEEEEE.? |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1IbP5CNodeNS_8functionIFbSG_EEEEENS2_5mutexEEEEEEEEE
0x32520:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32530:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32540:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32550:    65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0x32560:    69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0x32570:    53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0x32580:    53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0x32590:    62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0x325a0:    5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0x325b0:    75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0x325c0:    69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 31 49 62   |iEEENS2_5slot1Ib|
0x325d0:    50 35 43 4e 6f 64 65 4e  53 5f 38 66 75 6e 63 74   |P5CNodeNS_8funct|
0x325e0:    69 6f 6e 49 46 62 53 47  5f 45 45 45 45 45 4e 53   |ionIFbSG_EEEEENS|
0x325f0:    32 5f 35 6d 75 74 65 78  45 45 45 45 45 45 45 45   |2_5mutexEEEEEEEE|
0x32600:    45 00 ??                                           |E.?             |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x32620:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32630:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32640:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32650:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 31 5f 69   |etail12signal1_i|
0x32660:    6d 70 6c 49 62 50 35 43  4e 6f 64 65 4e 53 32 5f   |mplIbP5CNodeNS2_|
0x32670:    31 39 6f 70 74 69 6f 6e  61 6c 5f 6c 61 73 74 5f   |19optional_last_|
0x32680:    76 61 6c 75 65 49 62 45  45 69 53 74 34 6c 65 73   |valueIbEEiSt4les|
0x32690:    73 49 69 45 4e 53 5f 38  66 75 6e 63 74 69 6f 6e   |sIiENS_8function|
0x326a0:    49 46 62 53 36 5f 45 45  45 4e 53 42 5f 49 46 62   |IFbS6_EEENSB_IFb|
0x326b0:    52 4b 4e 53 32 5f 31 30  63 6f 6e 6e 65 63 74 69   |RKNS2_10connecti|
0x326c0:    6f 6e 45 53 36 5f 45 45  45 4e 53 32 5f 35 6d 75   |onES6_EEENS2_5mu|
0x326d0:    74 65 78 45 45 31 36 69  6e 76 6f 63 61 74 69 6f   |texEE16invocatio|
0x326e0:    6e 5f 73 74 61 74 65 45  45 45 00 ??               |n_stateEEE.?    |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IbP5CNodebNS_8functionIFbSG_bEEEEENS2_5mutexEEEEEEEEE
0x32700:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32710:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32720:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32730:    65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0x32740:    69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0x32750:    53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0x32760:    53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0x32770:    62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0x32780:    5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0x32790:    75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0x327a0:    69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 32 49 62   |iEEENS2_5slot2Ib|
0x327b0:    50 35 43 4e 6f 64 65 62  4e 53 5f 38 66 75 6e 63   |P5CNodebNS_8func|
0x327c0:    74 69 6f 6e 49 46 62 53  47 5f 62 45 45 45 45 45   |tionIFbSG_bEEEEE|
0x327d0:    4e 53 32 5f 35 6d 75 74  65 78 45 45 45 45 45 45   |NS2_5mutexEEEEEE|
0x327e0:    45 45 45 00 ??                                     |EEE.?           |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEE16invocation_stateEEE
0x32800:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32810:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32820:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32830:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 32 5f 69   |etail12signal2_i|
0x32840:    6d 70 6c 49 62 50 35 43  4e 6f 64 65 62 4e 53 32   |mplIbP5CNodebNS2|
0x32850:    5f 31 39 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |_19optional_last|
0x32860:    5f 76 61 6c 75 65 49 62  45 45 69 53 74 34 6c 65   |_valueIbEEiSt4le|
0x32870:    73 73 49 69 45 4e 53 5f  38 66 75 6e 63 74 69 6f   |ssIiENS_8functio|
0x32880:    6e 49 46 62 53 36 5f 62  45 45 45 4e 53 42 5f 49   |nIFbS6_bEEENSB_I|
0x32890:    46 62 52 4b 4e 53 32 5f  31 30 63 6f 6e 6e 65 63   |FbRKNS2_10connec|
0x328a0:    74 69 6f 6e 45 53 36 5f  62 45 45 45 4e 53 32 5f   |tionES6_bEEENS2_|
0x328b0:    35 6d 75 74 65 78 45 45  31 36 69 6e 76 6f 63 61   |5mutexEE16invoca|
0x328c0:    74 69 6f 6e 5f 73 74 61  74 65 45 45 45 00 ??      |tion_stateEEE.? |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot1ISsPKcNS_8functionIFSsSG_EEEEENS2_5mutexEEEEEEEEE
0x328e0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x328f0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32900:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32910:    65 74 61 69 6c 31 32 67  72 6f 75 70 65 64 5f 6c   |etail12grouped_l|
0x32920:    69 73 74 49 69 53 74 34  6c 65 73 73 49 69 45 4e   |istIiSt4lessIiEN|
0x32930:    53 5f 31 30 73 68 61 72  65 64 5f 70 74 72 49 4e   |S_10shared_ptrIN|
0x32940:    53 33 5f 31 35 63 6f 6e  6e 65 63 74 69 6f 6e 5f   |S3_15connection_|
0x32950:    62 6f 64 79 49 53 74 34  70 61 69 72 49 4e 53 33   |bodyISt4pairINS3|
0x32960:    5f 31 35 73 6c 6f 74 5f  6d 65 74 61 5f 67 72 6f   |_15slot_meta_gro|
0x32970:    75 70 45 4e 53 5f 38 6f  70 74 69 6f 6e 61 6c 49   |upENS_8optionalI|
0x32980:    69 45 45 45 4e 53 32 5f  35 73 6c 6f 74 31 49 53   |iEEENS2_5slot1IS|
0x32990:    73 50 4b 63 4e 53 5f 38  66 75 6e 63 74 69 6f 6e   |sPKcNS_8function|
0x329a0:    49 46 53 73 53 47 5f 45  45 45 45 45 4e 53 32 5f   |IFSsSG_EEEEENS2_|
0x329b0:    35 6d 75 74 65 78 45 45  45 45 45 45 45 45 45 00   |5mutexEEEEEEEEE.|
0x329c0:    4e                                                 |N               |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implISsPKcNS2_19optional_last_valueISsEEiSt4lessIiENS_8functionIFSsS6_EEENSB_IFSsRKNS2_10connectionES6_EEENS2_5mutexEE16invocation_stateEEE
0x329c0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x329d0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x329e0:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x329f0:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 31 5f 69   |etail12signal1_i|
0x32a00:    6d 70 6c 49 53 73 50 4b  63 4e 53 32 5f 31 39 6f   |mplISsPKcNS2_19o|
0x32a10:    70 74 69 6f 6e 61 6c 5f  6c 61 73 74 5f 76 61 6c   |ptional_last_val|
0x32a20:    75 65 49 53 73 45 45 69  53 74 34 6c 65 73 73 49   |ueISsEEiSt4lessI|
0x32a30:    69 45 4e 53 5f 38 66 75  6e 63 74 69 6f 6e 49 46   |iENS_8functionIF|
0x32a40:    53 73 53 36 5f 45 45 45  4e 53 42 5f 49 46 53 73   |SsS6_EEENSB_IFSs|
0x32a50:    52 4b 4e 53 32 5f 31 30  63 6f 6e 6e 65 63 74 69   |RKNS2_10connecti|
0x32a60:    6f 6e 45 53 36 5f 45 45  45 4e 53 32 5f 35 6d 75   |onES6_EEENS2_5mu|
0x32a70:    74 65 78 45 45 31 36 69  6e 76 6f 63 61 74 69 6f   |texEE16invocatio|
0x32a80:    6e 5f 73 74 61 74 65 45  45 45 00 ??               |n_stateEEE.?    |
; section: .rodata._ZTSN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS2_5list3INS2_5valueIS5_EENSB_IS7_EENSB_IiEEEEEEEE
0x32aa0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 31   |N5boost6detail11|
0x32ab0:    74 68 72 65 61 64 5f 64  61 74 61 49 4e 53 5f 33   |thread_dataINS_3|
0x32ac0:    5f 62 69 36 62 69 6e 64  5f 74 49 76 50 46 76 50   |_bi6bind_tIvPFvP|
0x32ad0:    4b 63 50 46 76 76 45 78  45 4e 53 32 5f 35 6c 69   |KcPFvvExENS2_5li|
0x32ae0:    73 74 33 49 4e 53 32 5f  35 76 61 6c 75 65 49 53   |st3INS2_5valueIS|
0x32af0:    35 5f 45 45 4e 53 42 5f  49 53 37 5f 45 45 4e 53   |5_EENSB_IS7_EENS|
0x32b00:    42 5f 49 69 45 45 45 45  45 45 45 45 00 ??         |B_IiEEEEEEEE.?  |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvPKcPFvvExENS3_5list3INS3_5valueIS6_EENSC_IS8_EENSC_IiEEEEEEEEEE
0x32b20:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32b30:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32b40:    70 49 4e 53 30 5f 31 31  74 68 72 65 61 64 5f 64   |pINS0_11thread_d|
0x32b50:    61 74 61 49 4e 53 5f 33  5f 62 69 36 62 69 6e 64   |ataINS_3_bi6bind|
0x32b60:    5f 74 49 76 50 46 76 50  4b 63 50 46 76 76 45 78   |_tIvPFvPKcPFvvEx|
0x32b70:    45 4e 53 33 5f 35 6c 69  73 74 33 49 4e 53 33 5f   |ENS3_5list3INS3_|
0x32b80:    35 76 61 6c 75 65 49 53  36 5f 45 45 4e 53 43 5f   |5valueIS6_EENSC_|
0x32b90:    49 53 38 5f 45 45 4e 53  43 5f 49 69 45 45 45 45   |IS8_EENSC_IiEEEE|
0x32ba0:    45 45 45 45 45 45 00 ??                            |EEEEEE.?        |
; section: .rodata._ZTSN5boost8signals26signalIFbP5CNodebENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x32bc0:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x32bd0:    36 73 69 67 6e 61 6c 49  46 62 50 35 43 4e 6f 64   |6signalIFbP5CNod|
0x32be0:    65 62 45 4e 53 30 5f 31  39 6f 70 74 69 6f 6e 61   |ebENS0_19optiona|
0x32bf0:    6c 5f 6c 61 73 74 5f 76  61 6c 75 65 49 62 45 45   |l_last_valueIbEE|
0x32c00:    69 53 74 34 6c 65 73 73  49 69 45 4e 53 5f 38 66   |iSt4lessIiENS_8f|
0x32c10:    75 6e 63 74 69 6f 6e 49  53 34 5f 45 45 4e 53 39   |unctionIS4_EENS9|
0x32c20:    5f 49 46 62 52 4b 4e 53  30 5f 31 30 63 6f 6e 6e   |_IFbRKNS0_10conn|
0x32c30:    65 63 74 69 6f 6e 45 53  33 5f 62 45 45 45 4e 53   |ectionES3_bEEENS|
0x32c40:    30 5f 35 6d 75 74 65 78  45 45 45 00 ??            |0_5mutexEEE.?   |
; section: .rodata._ZTSN5boost8signals27signal2IbP5CNodebNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_bEEENS8_IFbRKNS0_10connectionES3_bEEENS0_5mutexEEE
0x32c60:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x32c70:    37 73 69 67 6e 61 6c 32  49 62 50 35 43 4e 6f 64   |7signal2IbP5CNod|
0x32c80:    65 62 4e 53 30 5f 31 39  6f 70 74 69 6f 6e 61 6c   |ebNS0_19optional|
0x32c90:    5f 6c 61 73 74 5f 76 61  6c 75 65 49 62 45 45 69   |_last_valueIbEEi|
0x32ca0:    53 74 34 6c 65 73 73 49  69 45 4e 53 5f 38 66 75   |St4lessIiENS_8fu|
0x32cb0:    6e 63 74 69 6f 6e 49 46  62 53 33 5f 62 45 45 45   |nctionIFbS3_bEEE|
0x32cc0:    4e 53 38 5f 49 46 62 52  4b 4e 53 30 5f 31 30 63   |NS8_IFbRKNS0_10c|
0x32cd0:    6f 6e 6e 65 63 74 69 6f  6e 45 53 33 5f 62 45 45   |onnectionES3_bEE|
0x32ce0:    45 4e 53 30 5f 35 6d 75  74 65 78 45 45 45 00 ??   |ENS0_5mutexEEE.?|
; section: .rodata._ZTIN5boost8signals26detail19std_functional_baseE
0x32cf0:    08 00 00 00 e0 30 03 00  4e                        |.....0..N       |
; section: .rodata._ZTSN5boost8signals211signal_baseE
0x32cf8:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x32d08:    31 31 73 69 67 6e 61 6c  5f 62 61 73 65 45 00 ??   |11signal_baseE.?|
; section: .rodata._ZTSN5boost8signals26signalIFbP5CNodeENS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIS4_EENS9_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x32d20:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x32d30:    36 73 69 67 6e 61 6c 49  46 62 50 35 43 4e 6f 64   |6signalIFbP5CNod|
0x32d40:    65 45 4e 53 30 5f 31 39  6f 70 74 69 6f 6e 61 6c   |eENS0_19optional|
0x32d50:    5f 6c 61 73 74 5f 76 61  6c 75 65 49 62 45 45 69   |_last_valueIbEEi|
0x32d60:    53 74 34 6c 65 73 73 49  69 45 4e 53 5f 38 66 75   |St4lessIiENS_8fu|
0x32d70:    6e 63 74 69 6f 6e 49 53  34 5f 45 45 4e 53 39 5f   |nctionIS4_EENS9_|
0x32d80:    49 46 62 52 4b 4e 53 30  5f 31 30 63 6f 6e 6e 65   |IFbRKNS0_10conne|
0x32d90:    63 74 69 6f 6e 45 53 33  5f 45 45 45 4e 53 30 5f   |ctionES3_EEENS0_|
0x32da0:    35 6d 75 74 65 78 45 45  45 00 ??                  |5mutexEEE.?     |
; section: .rodata._ZTSN5boost8signals27signal1IbP5CNodeNS0_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS3_EEENS8_IFbRKNS0_10connectionES3_EEENS0_5mutexEEE
0x32dc0:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x32dd0:    37 73 69 67 6e 61 6c 31  49 62 50 35 43 4e 6f 64   |7signal1IbP5CNod|
0x32de0:    65 4e 53 30 5f 31 39 6f  70 74 69 6f 6e 61 6c 5f   |eNS0_19optional_|
0x32df0:    6c 61 73 74 5f 76 61 6c  75 65 49 62 45 45 69 53   |last_valueIbEEiS|
0x32e00:    74 34 6c 65 73 73 49 69  45 4e 53 5f 38 66 75 6e   |t4lessIiENS_8fun|
0x32e10:    63 74 69 6f 6e 49 46 62  53 33 5f 45 45 45 4e 53   |ctionIFbS3_EEENS|
0x32e20:    38 5f 49 46 62 52 4b 4e  53 30 5f 31 30 63 6f 6e   |8_IFbRKNS0_10con|
0x32e30:    6e 65 63 74 69 6f 6e 45  53 33 5f 45 45 45 4e 53   |nectionES3_EEENS|
0x32e40:    30 5f 35 6d 75 74 65 78  45 45 45 00 ??            |0_5mutexEEE.?   |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal1_implIbP5CNodeNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_EEENSB_IFbRKNS2_10connectionES6_EEENS2_5mutexEEEEE
0x32e60:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32e70:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32e80:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32e90:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 31 5f 69   |etail12signal1_i|
0x32ea0:    6d 70 6c 49 62 50 35 43  4e 6f 64 65 4e 53 32 5f   |mplIbP5CNodeNS2_|
0x32eb0:    31 39 6f 70 74 69 6f 6e  61 6c 5f 6c 61 73 74 5f   |19optional_last_|
0x32ec0:    76 61 6c 75 65 49 62 45  45 69 53 74 34 6c 65 73   |valueIbEEiSt4les|
0x32ed0:    73 49 69 45 4e 53 5f 38  66 75 6e 63 74 69 6f 6e   |sIiENS_8function|
0x32ee0:    49 46 62 53 36 5f 45 45  45 4e 53 42 5f 49 46 62   |IFbS6_EEENSB_IFb|
0x32ef0:    52 4b 4e 53 32 5f 31 30  63 6f 6e 6e 65 63 74 69   |RKNS2_10connecti|
0x32f00:    6f 6e 45 53 36 5f 45 45  45 4e 53 32 5f 35 6d 75   |onES6_EEENS2_5mu|
0x32f10:    74 65 78 45 45 45 45 45  00 ??                     |texEEEEE.?      |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIbP5CNodebNS2_19optional_last_valueIbEEiSt4lessIiENS_8functionIFbS6_bEEENSB_IFbRKNS2_10connectionES6_bEEENS2_5mutexEEEEE
0x32f20:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32f30:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x32f40:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 36 64   |pINS_8signals26d|
0x32f50:    65 74 61 69 6c 31 32 73  69 67 6e 61 6c 32 5f 69   |etail12signal2_i|
0x32f60:    6d 70 6c 49 62 50 35 43  4e 6f 64 65 62 4e 53 32   |mplIbP5CNodebNS2|
0x32f70:    5f 31 39 6f 70 74 69 6f  6e 61 6c 5f 6c 61 73 74   |_19optional_last|
0x32f80:    5f 76 61 6c 75 65 49 62  45 45 69 53 74 34 6c 65   |_valueIbEEiSt4le|
0x32f90:    73 73 49 69 45 4e 53 5f  38 66 75 6e 63 74 69 6f   |ssIiENS_8functio|
0x32fa0:    6e 49 46 62 53 36 5f 62  45 45 45 4e 53 42 5f 49   |nIFbS6_bEEENSB_I|
0x32fb0:    46 62 52 4b 4e 53 32 5f  31 30 63 6f 6e 6e 65 63   |FbRKNS2_10connec|
0x32fc0:    74 69 6f 6e 45 53 36 5f  62 45 45 45 4e 53 32 5f   |tionES6_bEEENS2_|
0x32fd0:    35 6d 75 74 65 78 45 45  45 45 45 00 ??            |5mutexEEEEE.?   |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_8signals219optional_last_valueIbEEEE
0x32fe0:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|
0x32ff0:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x33000:    70 49 4e 53 5f 38 73 69  67 6e 61 6c 73 32 31 39   |pINS_8signals219|
0x33010:    6f 70 74 69 6f 6e 61 6c  5f 6c 61 73 74 5f 76 61   |optional_last_va|
0x33020:    6c 75 65 49 62 45 45 45  45 00 ??                  |lueIbEEEE.?     |
; section: .rodata._ZTSN5boost16exception_detail10bad_alloc_E
0x33040:    4e 35 62 6f 6f 73 74 31  36 65 78 63 65 70 74 69   |N5boost16excepti|
0x33050:    6f 6e 5f 64 65 74 61 69  6c 31 30 62 61 64 5f 61   |on_detail10bad_a|
0x33060:    6c 6c 6f 63 5f 45 00 ??                            |lloc_E.?        |
; section: .rodata._ZTSN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE
0x33080:    4e 35 62 6f 6f 73 74 36  64 65 74 61 69 6c 31 37   |N5boost6detail17|   "N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE"
0x33090:    73 70 5f 63 6f 75 6e 74  65 64 5f 69 6d 70 6c 5f   |sp_counted_impl_|
0x330a0:    70 49 4e 53 5f 31 36 65  78 63 65 70 74 69 6f 6e   |pINS_16exception|
0x330b0:    5f 64 65 74 61 69 6c 31  30 63 6c 6f 6e 65 5f 69   |_detail10clone_i|
0x330c0:    6d 70 6c 49 4e 53 32 5f  31 30 62 61 64 5f 61 6c   |mplINS2_10bad_al|
0x330d0:    6c 6f 63 5f 45 45 45 45  45 00                     |loc_EEEEE.      |
0x330da:    ??                                                 |?               |
; section: .rodata._ZTSN5boost8signals26detail19std_functional_baseE
0x330e0:    4e 35 62 6f 6f 73 74 38  73 69 67 6e 61 6c 73 32   |N5boost8signals2|
0x330f0:    36 64 65 74 61 69 6c 31  39 73 74 64 5f 66 75 6e   |6detail19std_fun|
0x33100:    63 74 69 6f 6e 61 6c 5f  62 61 73 65 45 00 ??      |ctional_baseE.? |
; section: .rodata.cst4
0x33110:    00 00 61 45 ??                                     |..aE?           |
; section: .eh_frame
0x33c478:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x33c488:   1b 0c 04 04 88 01 00 00  18 00 00 00 1c 00 00 00   |................|
0x33c498:   f0 a4 00 00 2a 00 00 00  00 43 0e 20 61 0a 0e 04   |....*....C. a...|
0x33c4a8:   41 0b 00 00 18 00 00 00  38 00 00 00 04 a5 00 00   |A.......8.......|
0x33c4b8:   2a 00 00 00 00 43 0e 20  61 0a 0e 04 41 0b 00 00   |*....C. a...A...|
0x33c4c8:   18 00 00 00 54 00 00 00  18 a5 00 00 2f 00 00 00   |....T......./...|
0x33c4d8:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x33c4e8:   70 00 00 00 2c a5 00 00  2f 00 00 00 00 43 0e 20   |p...,.../....C. |
0x33c4f8:   66 0a 0e 04 41 0b 00 00  1c 00 00 00 8c 00 00 00   |f...A...........|
0x33c508:   40 a5 00 00 55 00 00 00  00 43 0e 20 6e 0a 0e 04   |@...U....C. n...|
0x33c518:   47 0b 50 0a 0e 04 41 0b  18 00 00 00 ac 00 00 00   |G.P...A.........|
0x33c528:   80 a5 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |..../....C. f...|
0x33c538:   41 0b 00 00 18 00 00 00  c8 00 00 00 94 a5 00 00   |A...............|
0x33c548:   39 00 00 00 00 43 0e 20  6e 0a 0e 04 43 0b 00 00   |9....C. n...C...|
0x33c558:   2c 00 00 00 e4 00 00 00  b8 a5 00 00 64 00 00 00   |,...........d...|
0x33c568:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 4f   |.A....A....C.@.O|
0x33c578:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 42 0b 00 00 00   |...A...A...B....|
0x33c588:   20 00 00 00 14 01 00 00  f8 a5 00 00 44 00 00 00   | ...........D...|
0x33c598:   00 41 0e 08 83 02 43 0e  20 6d 0a 0e 08 41 0e 04   |.A....C. m...A..|
0x33c5a8:   c3 46 0b 00 18 00 00 00  38 01 00 00 24 a6 00 00   |.F......8...$...|
0x33c5b8:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x33c5c8:   18 00 00 00 54 01 00 00  38 a6 00 00 2c 00 00 00   |....T...8...,...|
0x33c5d8:   00 43 0e 20 63 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. c...A.......|
0x33c5e8:   70 01 00 00 4c a6 00 00  2f 00 00 00 00 43 0e 20   |p...L.../....C. |
0x33c5f8:   66 0a 0e 04 41 0b 00 00  18 00 00 00 8c 01 00 00   |f...A...........|
0x33c608:   60 a6 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |`.../....C. f...|
0x33c618:   41 0b 00 00 18 00 00 00  a8 01 00 00 74 a6 00 00   |A...........t...|
0x33c628:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x33c638:   18 00 00 00 c4 01 00 00  88 a6 00 00 2f 00 00 00   |............/...|
0x33c648:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x33c658:   e0 01 00 00 9c a6 00 00  2f 00 00 00 00 43 0e 20   |......../....C. |
0x33c668:   66 0a 0e 04 41 0b 00 00  18 00 00 00 fc 01 00 00   |f...A...........|
0x33c678:   b0 a6 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |..../....C. f...|
0x33c688:   41 0b 00 00 18 00 00 00  18 02 00 00 c4 a6 00 00   |A...............|
0x33c698:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x33c6a8:   18 00 00 00 34 02 00 00  d8 a6 00 00 2f 00 00 00   |....4......./...|
0x33c6b8:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x33c6c8:   50 02 00 00 ec a6 00 00  2f 00 00 00 00 43 0e 20   |P......./....C. |
0x33c6d8:   66 0a 0e 04 41 0b 00 00  18 00 00 00 6c 02 00 00   |f...A.......l...|
0x33c6e8:   00 a7 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |..../....C. f...|
0x33c6f8:   41 0b 00 00 18 00 00 00  88 02 00 00 14 a7 00 00   |A...............|
0x33c708:   2f 00 00 00 00 43 0e 20  66 0a 0e 04 41 0b 00 00   |/....C. f...A...|
0x33c718:   18 00 00 00 a4 02 00 00  28 a7 00 00 2f 00 00 00   |........(.../...|
0x33c728:   00 43 0e 20 66 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. f...A.......|
0x33c738:   c0 02 00 00 3c a7 00 00  2f 00 00 00 00 43 0e 20   |....<.../....C. |
0x33c748:   66 0a 0e 04 41 0b 00 00  18 00 00 00 dc 02 00 00   |f...A...........|
0x33c758:   50 a7 00 00 2f 00 00 00  00 43 0e 20 66 0a 0e 04   |P.../....C. f...|
0x33c768:   41 0b 00 00 18 00 00 00  f8 02 00 00 64 a7 00 00   |A...........d...|
0x33c778:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x33c788:   18 00 00 00 14 03 00 00  78 a7 00 00 25 00 00 00   |........x...%...|
0x33c798:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x33c7a8:   30 03 00 00 8c a7 00 00  25 00 00 00 00 43 0e 20   |0.......%....C. |
0x33c7b8:   5c 0a 0e 04 41 0b 00 00  18 00 00 00 4c 03 00 00   |\...A.......L...|
0x33c7c8:   a0 a7 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |....%....C. \...|
0x33c7d8:   41 0b 00 00 18 00 00 00  68 03 00 00 b4 a7 00 00   |A.......h.......|
0x33c7e8:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x33c7f8:   18 00 00 00 84 03 00 00  c8 a7 00 00 25 00 00 00   |............%...|
0x33c808:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x33c818:   a0 03 00 00 dc a7 00 00  25 00 00 00 00 43 0e 20   |........%....C. |
0x33c828:   5c 0a 0e 04 41 0b 00 00  1c 00 00 00 bc 03 00 00   |\...A...........|
0x33c838:   f0 a7 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |....U....C. p...|
0x33c848:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 dc 03 00 00   |E.P...A.........|
0x33c858:   30 a8 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |0...%....C. \...|
0x33c868:   41 0b 00 00 18 00 00 00  f8 03 00 00 44 a8 00 00   |A...........D...|
0x33c878:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x33c888:   18 00 00 00 14 04 00 00  58 a8 00 00 25 00 00 00   |........X...%...|
0x33c898:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x33c8a8:   30 04 00 00 6c a8 00 00  56 00 00 00 00 43 0e 30   |0...l...V....C.0|
0x33c8b8:   02 4d 0a 0e 04 41 0b 00  1c 00 00 00 4c 04 00 00   |.M...A......L...|
0x33c8c8:   b0 a8 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |....U....C. p...|
0x33c8d8:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 6c 04 00 00   |E.P...A.....l...|
0x33c8e8:   f0 a8 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |....%....C. \...|
0x33c8f8:   41 0b 00 00 18 00 00 00  88 04 00 00 04 a9 00 00   |A...............|
0x33c908:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x33c918:   18 00 00 00 a4 04 00 00  18 a9 00 00 25 00 00 00   |............%...|
0x33c928:   00 43 0e 20 5c 0a 0e 04  41 0b 00 00 18 00 00 00   |.C. \...A.......|
0x33c938:   c0 04 00 00 2c a9 00 00  45 00 00 00 00 43 0e 30   |....,...E....C.0|
0x33c948:   7a 0a 0e 04 41 0b 00 00  1c 00 00 00 dc 04 00 00   |z...A...........|
0x33c958:   60 a9 00 00 55 00 00 00  00 43 0e 20 70 0a 0e 04   |`...U....C. p...|
0x33c968:   45 0b 50 0a 0e 04 41 0b  18 00 00 00 fc 04 00 00   |E.P...A.........|
0x33c978:   a0 a9 00 00 25 00 00 00  00 43 0e 20 5c 0a 0e 04   |....%....C. \...|
0x33c988:   41 0b 00 00 18 00 00 00  18 05 00 00 b4 a9 00 00   |A...............|
0x33c998:   45 00 00 00 00 43 0e 20  78 0a 0e 04 43 0b 00 00   |E....C. x...C...|
0x33c9a8:   18 00 00 00 34 05 00 00  e8 a9 00 00 45 00 00 00   |....4.......E...|
0x33c9b8:   00 43 0e 20 78 0a 0e 04  43 0b 00 00 18 00 00 00   |.C. x...C.......|
0x33c9c8:   50 05 00 00 1c aa 00 00  38 00 00 00 00 43 0e 20   |P.......8....C. |
0x33c9d8:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 6c 05 00 00   |k...E.......l...|
0x33c9e8:   40 aa 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |@...8....C. k...|
0x33c9f8:   45 0b 00 00 18 00 00 00  88 05 00 00 64 aa 00 00   |E...........d...|
0x33ca08:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33ca18:   18 00 00 00 a4 05 00 00  88 aa 00 00 38 00 00 00   |............8...|
0x33ca28:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x33ca38:   c0 05 00 00 ac aa 00 00  38 00 00 00 00 43 0e 20   |........8....C. |
0x33ca48:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 dc 05 00 00   |k...E...........|
0x33ca58:   d0 aa 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |....8....C. k...|
0x33ca68:   45 0b 00 00 18 00 00 00  f8 05 00 00 f4 aa 00 00   |E...............|
0x33ca78:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33ca88:   18 00 00 00 14 06 00 00  18 ab 00 00 38 00 00 00   |............8...|
0x33ca98:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x33caa8:   30 06 00 00 3c ab 00 00  38 00 00 00 00 43 0e 20   |0...<...8....C. |
0x33cab8:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 4c 06 00 00   |k...E.......L...|
0x33cac8:   60 ab 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |`...8....C. k...|
0x33cad8:   45 0b 00 00 18 00 00 00  68 06 00 00 84 ab 00 00   |E.......h.......|
0x33cae8:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33caf8:   18 00 00 00 84 06 00 00  a8 ab 00 00 38 00 00 00   |............8...|
0x33cb08:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x33cb18:   a0 06 00 00 cc ab 00 00  38 00 00 00 00 43 0e 20   |........8....C. |
0x33cb28:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 bc 06 00 00   |k...E...........|
0x33cb38:   f0 ab 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |....8....C. k...|
0x33cb48:   45 0b 00 00 18 00 00 00  d8 06 00 00 14 ac 00 00   |E...............|
0x33cb58:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33cb68:   18 00 00 00 f4 06 00 00  38 ac 00 00 38 00 00 00   |........8...8...|
0x33cb78:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x33cb88:   10 07 00 00 5c ac 00 00  38 00 00 00 00 43 0e 20   |....\...8....C. |
0x33cb98:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 2c 07 00 00   |k...E.......,...|
0x33cba8:   80 ac 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |....8....C. k...|
0x33cbb8:   45 0b 00 00 28 00 00 00  48 07 00 00 a4 ac 00 00   |E...(...H.......|
0x33cbc8:   48 00 00 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |H....A....A....C|
0x33cbd8:   0e 30 7b 0a 0e 0c 41 0e  08 c3 41 0e 04 c6 41 0b   |.0{...A...A...A.|
0x33cbe8:   1c 00 00 00 74 07 00 00  c8 ac 00 00 55 00 00 00   |....t.......U...|
0x33cbf8:   00 43 0e 20 6a 0a 0e 04  4b 0b 50 0a 0e 04 41 0b   |.C. j...K.P...A.|
0x33cc08:   1c 00 00 00 94 07 00 00  08 ad 00 00 53 00 00 00   |............S...|
0x33cc18:   00 43 0e 20 68 0a 0e 04  45 0b 59 0a 0e 04 45 0b   |.C. h...E.Y...E.|
0x33cc28:   18 00 00 00 b4 07 00 00  48 ad 00 00 35 00 00 00   |........H...5...|
0x33cc38:   00 43 0e 20 68 0a 0e 04  45 0b 00 00 44 00 00 00   |.C. h...E...D...|
0x33cc48:   d0 07 00 00 6c ad 00 00  79 00 00 00 00 41 0e 08   |....l...y....A..|
0x33cc58:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33cc68:   51 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |Q...A...A...A...|
0x33cc78:   46 0b 50 0a 0e 10 41 0e  0c c3 41 0e 08 c6 41 0e   |F.P...A...A...A.|
0x33cc88:   04 c7 41 0b 18 00 00 00  18 08 00 00 a4 ad 00 00   |..A.............|
0x33cc98:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33cca8:   20 00 00 00 34 08 00 00  c8 ad 00 00 44 00 00 00   | ...4.......D...|
0x33ccb8:   00 41 0e 08 83 02 43 0e  30 75 0a 0e 08 41 0e 04   |.A....C.0u...A..|
0x33ccc8:   c3 45 0b 00 18 00 00 00  58 08 00 00 f4 ad 00 00   |.E......X.......|
0x33ccd8:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33cce8:   10 00 00 00 74 08 00 00  18 ae 00 00 07 00 00 00   |....t...........|
0x33ccf8:   00 00 00 00 1c 00 00 00  00 00 00 00 01 7a 50 4c   |.............zPL|
0x33cd08:   52 00 01 7c 08 07 00 00  00 00 00 00 1b 0c 04 04   |R..|............|
0x33cd18:   88 01 00 00 20 00 00 00  24 00 00 00 f4 ad 00 00   |.... ...$.......|
0x33cd28:   8b 00 00 00 04 2c b7 00  00 41 0e 08 86 02 41 0e   |.....,...A....A.|
0x33cd38:   0c 83 03 43 0e 30 00 00  18 00 00 00 cc 08 00 00   |...C.0..........|
0x33cd48:   50 c9 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |P...8....C. k...|
0x33cd58:   45 0b 00 00 18 00 00 00  e8 08 00 00 74 c9 00 00   |E...........t...|
0x33cd68:   38 00 00 00 00 43 0e 20  6b 0a 0e 04 45 0b 00 00   |8....C. k...E...|
0x33cd78:   18 00 00 00 04 09 00 00  98 c9 00 00 38 00 00 00   |............8...|
0x33cd88:   00 43 0e 20 6b 0a 0e 04  45 0b 00 00 18 00 00 00   |.C. k...E.......|
0x33cd98:   20 09 00 00 bc c9 00 00  38 00 00 00 00 43 0e 20   | .......8....C. |
0x33cda8:   6b 0a 0e 04 45 0b 00 00  18 00 00 00 3c 09 00 00   |k...E.......<...|
0x33cdb8:   e0 c9 00 00 38 00 00 00  00 43 0e 20 6b 0a 0e 04   |....8....C. k...|
0x33cdc8:   45 0b 00 00 28 00 00 00  d4 00 00 00 04 ca 00 00   |E...(...........|
0x33cdd8:   28 01 00 00 04 38 b7 00  00 43 0e 30 48 83 04 48   |(....8...C.0H..H|
0x33cde8:   86 03 48 87 02 02 7d 0a  0e 04 c7 c6 c3 41 0b 00   |..H...}......A..|
0x33cdf8:   10 00 00 00 84 09 00 00  ea d6 00 00 33 00 00 00   |............3...|
0x33ce08:   00 43 0e 30 10 00 00 00  98 09 00 00 0a d7 00 00   |.C.0............|
0x33ce18:   33 00 00 00 00 43 0e 30  10 00 00 00 ac 09 00 00   |3....C.0........|
0x33ce28:   2a d7 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |*...3....C.0....|
0x33ce38:   c0 09 00 00 4a d7 00 00  33 00 00 00 00 43 0e 30   |....J...3....C.0|
0x33ce48:   10 00 00 00 d4 09 00 00  6a d7 00 00 33 00 00 00   |........j...3...|
0x33ce58:   00 43 0e 30 10 00 00 00  e8 09 00 00 8a d7 00 00   |.C.0............|
0x33ce68:   33 00 00 00 00 43 0e 30  10 00 00 00 fc 09 00 00   |3....C.0........|
0x33ce78:   aa d7 00 00 33 00 00 00  00 43 0e 30 20 00 00 00   |....3....C.0 ...|
0x33ce88:   10 0a 00 00 ac dd 00 00  6f 00 00 00 00 41 0e 08   |........o....A..|
0x33ce98:   83 02 43 0e 30 7b 0a 0e  08 41 0e 04 c3 41 0b 00   |..C.0{...A...A..|
0x33cea8:   10 00 00 00 34 0a 00 00  a6 d7 00 00 33 00 00 00   |....4.......3...|
0x33ceb8:   00 43 0e 30 10 00 00 00  48 0a 00 00 c6 d7 00 00   |.C.0....H.......|
0x33cec8:   33 00 00 00 00 43 0e 30  10 00 00 00 5c 0a 00 00   |3....C.0....\...|
0x33ced8:   e6 d7 00 00 33 00 00 00  00 43 0e 30 18 00 00 00   |....3....C.0....|
0x33cee8:   70 0a 00 00 8c f5 ff ff  35 00 00 00 00 43 0e 30   |p.......5....C.0|
0x33cef8:   69 0a 0e 04 41 0b 00 00  10 00 00 00 8c 0a 00 00   |i...A...........|
0x33cf08:   ea d7 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |....3....C.0....|
0x33cf18:   a0 0a 00 00 0a d8 00 00  33 00 00 00 00 43 0e 30   |........3....C.0|
0x33cf28:   10 00 00 00 b4 0a 00 00  2a d8 00 00 33 00 00 00   |........*...3...|
0x33cf38:   00 43 0e 30 10 00 00 00  c8 0a 00 00 4a d8 00 00   |.C.0........J...|
0x33cf48:   33 00 00 00 00 43 0e 30  10 00 00 00 dc 0a 00 00   |3....C.0........|
0x33cf58:   6a d8 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |j...3....C.0....|
0x33cf68:   f0 0a 00 00 8a d8 00 00  33 00 00 00 00 43 0e 30   |........3....C.0|
0x33cf78:   10 00 00 00 04 0b 00 00  aa d8 00 00 33 00 00 00   |............3...|
0x33cf88:   00 43 0e 30 10 00 00 00  18 0b 00 00 ca d8 00 00   |.C.0............|
0x33cf98:   33 00 00 00 00 43 0e 30  20 00 00 00 2c 0b 00 00   |3....C.0 ...,...|
0x33cfa8:   10 f5 ff ff 80 00 00 00  00 43 0e 30 46 83 03 68   |.........C.0F..h|
0x33cfb8:   86 02 79 0a 0e 04 c6 c3  46 0b 00 00 28 00 00 00   |..y.....F...(...|
0x33cfc8:   50 0b 00 00 6c f5 ff ff  49 00 00 00 00 41 0e 08   |P...l...I....A..|
0x33cfd8:   86 02 43 0e 0c 83 03 45  0e 30 78 0a 0e 0c 41 0e   |..C....E.0x...A.|
0x33cfe8:   08 c3 41 0e 04 c6 41 0b  10 00 00 00 7c 0b 00 00   |..A...A.....|...|
0x33cff8:   9a d8 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |....3....C.0....|
0x33d008:   90 0b 00 00 ba d8 00 00  33 00 00 00 00 43 0e 30   |........3....C.0|
0x33d018:   10 00 00 00 a4 0b 00 00  da d8 00 00 33 00 00 00   |............3...|
0x33d028:   00 43 0e 30 10 00 00 00  b8 0b 00 00 fa d8 00 00   |.C.0............|
0x33d038:   33 00 00 00 00 43 0e 30  10 00 00 00 cc 0b 00 00   |3....C.0........|
0x33d048:   1a d9 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |....3....C.0....|
0x33d058:   e0 0b 00 00 2c f5 ff ff  33 00 00 00 00 43 0e 30   |....,...3....C.0|
0x33d068:   10 00 00 00 f4 0b 00 00  58 f5 ff ff 33 00 00 00   |........X...3...|
0x33d078:   00 43 0e 30 10 00 00 00  08 0c 00 00 84 f5 ff ff   |.C.0............|
0x33d088:   33 00 00 00 00 43 0e 30  10 00 00 00 1c 0c 00 00   |3....C.0........|
0x33d098:   b0 f5 ff ff 33 00 00 00  00 43 0e 30 3c 00 00 00   |....3....C.0<...|
0x33d0a8:   30 0c 00 00 dc f5 ff ff  97 00 00 00 00 41 0e 08   |0............A..|
0x33d0b8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33d0c8:   05 45 0e 30 02 84 0a 0e  14 41 0e 10 c3 41 0e 0c   |.E.0.....A...A..|
0x33d0d8:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 40 00 00 00   |.A...A...A..@...|
0x33d0e8:   ec 03 00 00 3c f6 ff ff  89 00 00 00 04 7c b7 00   |....<........|..|
0x33d0f8:   00 41 0e 08 85 02 43 0e  0c 87 03 43 0e 10 86 04   |.A....C....C....|
0x33d108:   41 0e 14 83 05 43 0e 40  02 41 0a 0e 14 41 0e 10   |A....C.@.A...A..|
0x33d118:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x33d128:   3c 00 00 00 b4 0c 00 00  88 f6 ff ff 91 00 00 00   |<...............|
0x33d138:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33d148:   41 0e 14 83 05 45 0e 30  02 7e 0a 0e 14 41 0e 10   |A....E.0.~...A..|
0x33d158:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x33d168:   10 00 00 00 f4 0c 00 00  26 d8 00 00 33 00 00 00   |........&...3...|
0x33d178:   00 43 0e 30 10 00 00 00  08 0d 00 00 46 d8 00 00   |.C.0........F...|
0x33d188:   33 00 00 00 00 43 0e 30  10 00 00 00 1c 0d 00 00   |3....C.0........|
0x33d198:   66 d8 00 00 33 00 00 00  00 43 0e 30 10 00 00 00   |f...3....C.0....|
0x33d1a8:   30 0d 00 00 86 d8 00 00  33 00 00 00 00 43 0e 30   |0.......3....C.0|
0x33d1b8:   10 00 00 00 44 0d 00 00  a6 d8 00 00 33 00 00 00   |....D.......3...|
0x33d1c8:   00 43 0e 30 20 00 00 00  58 0d 00 00 84 f6 ff ff   |.C.0 ...X.......|
0x33d1d8:   77 00 00 00 00 41 0e 08  83 02 45 0e 30 65 0a 0e   |w....A....E.0e..|
0x33d1e8:   08 41 0e 04 c3 44 0b 00  20 00 00 00 7c 0d 00 00   |.A...D.. ...|...|
0x33d1f8:   b0 da 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |....A....A....C.|
0x33d208:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 20 00 00 00   |0r...A...E.. ...|
0x33d218:   a0 0d 00 00 dc da 00 00  41 00 00 00 00 41 0e 08   |........A....A..|
0x33d228:   83 02 43 0e 30 72 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0r...A...E..|
0x33d238:   20 00 00 00 c4 0d 00 00  08 db 00 00 41 00 00 00   | ...........A...|
0x33d248:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x33d258:   c3 45 0b 00 20 00 00 00  e8 0d 00 00 34 db 00 00   |.E.. .......4...|
0x33d268:   41 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |A....A....C.0r..|
0x33d278:   08 41 0e 04 c3 45 0b 00  20 00 00 00 0c 0e 00 00   |.A...E.. .......|
0x33d288:   60 db 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |`...A....A....C.|
0x33d298:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 18 00 00 00   |0r...A...E......|
0x33d2a8:   30 0e 00 00 8c db 00 00  38 00 00 00 00 43 0e 20   |0.......8....C. |
0x33d2b8:   6b 0a 0e 04 45 0b 00 00  20 00 00 00 4c 0e 00 00   |k...E... ...L...|
0x33d2c8:   b0 db 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |....A....A....C.|
0x33d2d8:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 18 00 00 00   |0r...A...E......|
0x33d2e8:   70 0e 00 00 dc db 00 00  38 00 00 00 00 43 0e 20   |p.......8....C. |
0x33d2f8:   6b 0a 0e 04 45 0b 00 00  20 00 00 00 8c 0e 00 00   |k...E... .......|
0x33d308:   00 dc 00 00 41 00 00 00  00 41 0e 08 83 02 43 0e   |....A....A....C.|
0x33d318:   30 72 0a 0e 08 41 0e 04  c3 45 0b 00 1c 00 00 00   |0r...A...E......|
0x33d328:   b0 0e 00 00 2c dc 00 00  55 00 00 00 00 43 0e 20   |....,...U....C. |
0x33d338:   6a 0a 0e 04 4b 0b 50 0a  0e 04 41 0b 20 00 00 00   |j...K.P...A. ...|
0x33d348:   d0 0e 00 00 6c dc 00 00  4c 00 00 00 00 41 0e 08   |....l...L....A..|
0x33d358:   83 02 43 0e 30 7d 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0}...A...E..|
0x33d368:   20 00 00 00 f4 0e 00 00  98 dc 00 00 41 00 00 00   | ...........A...|
0x33d378:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x33d388:   c3 45 0b 00 20 00 00 00  18 0f 00 00 c4 dc 00 00   |.E.. ...........|
0x33d398:   41 00 00 00 00 41 0e 08  83 02 43 0e 30 72 0a 0e   |A....A....C.0r..|
0x33d3a8:   08 41 0e 04 c3 45 0b 00  44 00 00 00 3c 0f 00 00   |.A...E..D...<...|
0x33d3b8:   f0 dc 00 00 71 00 00 00  00 41 0e 08 87 02 41 0e   |....q....A....A.|
0x33d3c8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 43 0a 0e 10   |...A....C.0.C...|
0x33d3d8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 4c 0b 50 0a   |A...A...A...L.P.|
0x33d3e8:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x33d3f8:   54 00 00 00 84 0f 00 00  28 dd 00 00 63 01 00 00   |T.......(...c...|
0x33d408:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33d418:   41 0e 14 83 05 43 0e 60  03 14 01 0a 0e 14 41 0e   |A....C.`......A.|
0x33d428:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 45 0b   |..A...A...A...E.|
0x33d438:   75 0a 0e 14 41 0e 10 c3  41 0e 0c c6 41 0e 08 c7   |u...A...A...A...|
0x33d448:   41 0e 04 c5 41 0b 00 00  10 00 00 00 dc 0f 00 00   |A...A...........|
0x33d458:   40 de 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |@...........0...|
0x33d468:   6c 07 00 00 3c de 00 00  8e 00 00 00 04 94 b7 00   |l...<...........|
0x33d478:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 6f   |.A....A....C.0.o|
0x33d488:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33d498:   10 00 00 00 24 10 00 00  98 de 00 00 07 00 00 00   |....$...........|
0x33d4a8:   00 00 00 00 30 00 00 00  b4 07 00 00 94 de 00 00   |....0...........|
0x33d4b8:   a3 00 00 00 04 a5 b7 00  00 41 0e 08 86 02 41 0e   |.........A....A.|
0x33d4c8:   0c 83 03 43 0e 30 02 7c  0a 0e 0c 41 0e 08 c3 41   |...C.0.|...A...A|
0x33d4d8:   0e 04 c6 41 0b 00 00 00  10 00 00 00 6c 10 00 00   |...A........l...|
0x33d4e8:   10 df 00 00 07 00 00 00  00 00 00 00 30 00 00 00   |............0...|
0x33d4f8:   fc 07 00 00 0c df 00 00  a3 00 00 00 04 b7 b7 00   |................|
0x33d508:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 7c   |.A....A....C.0.||
0x33d518:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33d528:   28 00 00 00 30 08 00 00  88 df 00 00 14 01 00 00   |(...0...........|
0x33d538:   04 cc b7 00 00 43 0e 30  48 86 03 57 87 02 83 04   |.....C.0H..W....|
0x33d548:   69 0a 0e 04 c7 c6 c3 45  0b 00 00 00 10 00 00 00   |i......E........|
0x33d558:   e0 10 00 00 7c e0 00 00  07 00 00 00 00 00 00 00   |....|...........|
0x33d568:   30 00 00 00 70 08 00 00  78 e0 00 00 bb 00 00 00   |0...p...x.......|
0x33d578:   04 f9 b7 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33d588:   0e 30 02 88 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.....A...A...A|
0x33d598:   0b 00 00 00 10 00 00 00  28 11 00 00 04 e1 00 00   |........(.......|
0x33d5a8:   07 00 00 00 00 00 00 00  30 00 00 00 b8 08 00 00   |........0.......|
0x33d5b8:   00 e1 00 00 c1 00 00 00  04 10 b8 00 00 41 0e 08   |.............A..|
0x33d5c8:   86 02 41 0e 0c 83 03 43  0e 30 02 8e 0a 0e 0c 41   |..A....C.0.....A|
0x33d5d8:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x33d5e8:   70 11 00 00 9c e1 00 00  07 00 00 00 00 00 00 00   |p...............|
0x33d5f8:   30 00 00 00 00 09 00 00  98 e1 00 00 c1 00 00 00   |0...............|
0x33d608:   04 27 b8 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.'...A....A....C|
0x33d618:   0e 30 02 8e 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.....A...A...A|
0x33d628:   0b 00 00 00 10 00 00 00  b8 11 00 00 34 e2 00 00   |............4...|
0x33d638:   07 00 00 00 00 00 00 00  30 00 00 00 48 09 00 00   |........0...H...|
0x33d648:   30 e2 00 00 c1 00 00 00  04 3e b8 00 00 41 0e 08   |0........>...A..|
0x33d658:   86 02 41 0e 0c 83 03 43  0e 30 02 8e 0a 0e 0c 41   |..A....C.0.....A|
0x33d668:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x33d678:   00 12 00 00 cc e2 00 00  07 00 00 00 00 00 00 00   |................|
0x33d688:   30 00 00 00 90 09 00 00  c8 e2 00 00 c1 00 00 00   |0...............|
0x33d698:   04 55 b8 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.U...A....A....C|
0x33d6a8:   0e 30 02 8e 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.....A...A...A|
0x33d6b8:   0b 00 00 00 24 00 00 00  c4 09 00 00 64 e3 00 00   |....$.......d...|
0x33d6c8:   68 00 00 00 04 6c b8 00  00 41 0e 08 83 02 43 0e   |h....l...A....C.|
0x33d6d8:   30 79 0a 0e 08 41 0e 04  c3 4a 0b 00 10 00 00 00   |0y...A...J......|
0x33d6e8:   70 12 00 00 ac e3 00 00  0a 00 00 00 00 00 00 00   |p...............|
0x33d6f8:   20 00 00 00 84 12 00 00  a8 e3 00 00 4b 00 00 00   | ...........K...|
0x33d708:   00 41 0e 08 83 02 43 0e  30 7c 0a 0e 08 41 0e 04   |.A....C.0|...A..|
0x33d718:   c3 45 0b 00 10 00 00 00  a8 12 00 00 d4 e3 00 00   |.E..............|
0x33d728:   0a 00 00 00 00 00 00 00  20 00 00 00 bc 12 00 00   |........ .......|
0x33d738:   d0 e3 00 00 51 00 00 00  00 41 0e 08 83 02 43 0e   |....Q....A....C.|
0x33d748:   30 02 42 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.B...A...E.....|
0x33d758:   e0 12 00 00 0c e4 00 00  0a 00 00 00 00 00 00 00   |................|
0x33d768:   20 00 00 00 f4 12 00 00  08 e4 00 00 51 00 00 00   | ...........Q...|
0x33d778:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x33d788:   04 c3 45 0b 10 00 00 00  18 13 00 00 44 e4 00 00   |..E.........D...|
0x33d798:   0a 00 00 00 00 00 00 00  20 00 00 00 2c 13 00 00   |........ ...,...|
0x33d7a8:   40 e4 00 00 4b 00 00 00  00 41 0e 08 83 02 43 0e   |@...K....A....C.|
0x33d7b8:   30 7c 0a 0e 08 41 0e 04  c3 45 0b 00 10 00 00 00   |0|...A...E......|
0x33d7c8:   50 13 00 00 6c e4 00 00  0a 00 00 00 00 00 00 00   |P...l...........|
0x33d7d8:   20 00 00 00 64 13 00 00  68 e4 00 00 51 00 00 00   | ...d...h...Q...|
0x33d7e8:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x33d7f8:   04 c3 45 0b 10 00 00 00  88 13 00 00 a4 e4 00 00   |..E.............|
0x33d808:   0a 00 00 00 00 00 00 00  20 00 00 00 9c 13 00 00   |........ .......|
0x33d818:   a0 e4 00 00 51 00 00 00  00 41 0e 08 83 02 43 0e   |....Q....A....C.|
0x33d828:   30 02 42 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.B...A...E.....|
0x33d838:   c0 13 00 00 dc e4 00 00  0a 00 00 00 00 00 00 00   |................|
0x33d848:   20 00 00 00 d4 13 00 00  d8 e4 00 00 51 00 00 00   | ...........Q...|
0x33d858:   00 41 0e 08 83 02 43 0e  30 02 42 0a 0e 08 41 0e   |.A....C.0.B...A.|
0x33d868:   04 c3 45 0b 10 00 00 00  f8 13 00 00 14 e5 00 00   |..E.............|
0x33d878:   0a 00 00 00 00 00 00 00  20 00 00 00 0c 14 00 00   |........ .......|
0x33d888:   10 e5 00 00 51 00 00 00  00 41 0e 08 83 02 43 0e   |....Q....A....C.|
0x33d898:   30 02 42 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.B...A...E.....|
0x33d8a8:   30 14 00 00 4c e5 00 00  07 00 00 00 00 00 00 00   |0...L...........|
0x33d8b8:   10 00 00 00 44 14 00 00  48 e5 00 00 07 00 00 00   |....D...H.......|
0x33d8c8:   00 00 00 00 20 00 00 00  58 14 00 00 44 e5 00 00   |.... ...X...D...|
0x33d8d8:   5a 00 00 00 00 41 0e 08  83 02 43 0e 30 02 4b 0a   |Z....A....C.0.K.|
0x33d8e8:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 7c 14 00 00   |..A...E.....|...|
0x33d8f8:   80 e5 00 00 07 00 00 00  00 00 00 00 10 00 00 00   |................|
0x33d908:   90 14 00 00 7c e5 00 00  07 00 00 00 00 00 00 00   |....|...........|
0x33d918:   20 00 00 00 a4 14 00 00  78 e5 00 00 5a 00 00 00   | .......x...Z...|
0x33d928:   00 41 0e 08 83 02 43 0e  30 02 4b 0a 0e 08 41 0e   |.A....C.0.K...A.|
0x33d938:   04 c3 45 0b 10 00 00 00  c8 14 00 00 b4 e5 00 00   |..E.............|
0x33d948:   07 00 00 00 00 00 00 00  20 00 00 00 dc 14 00 00   |........ .......|
0x33d958:   b0 e5 00 00 53 00 00 00  00 41 0e 08 83 02 43 0e   |....S....A....C.|
0x33d968:   30 02 44 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.D...A...E.....|
0x33d978:   00 15 00 00 ec e5 00 00  0a 00 00 00 00 00 00 00   |................|
0x33d988:   10 00 00 00 14 15 00 00  e8 e5 00 00 0a 00 00 00   |................|
0x33d998:   00 00 00 00 20 00 00 00  28 15 00 00 e4 e5 00 00   |.... ...(.......|
0x33d9a8:   52 00 00 00 00 41 0e 08  83 02 43 0e 30 02 43 0a   |R....A....C.0.C.|
0x33d9b8:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 4c 15 00 00   |..A...E.....L...|
0x33d9c8:   20 e6 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   | ...............|
0x33d9d8:   60 15 00 00 1c e6 00 00  0a 00 00 00 00 00 00 00   |`...............|
0x33d9e8:   20 00 00 00 74 15 00 00  18 e6 00 00 52 00 00 00   | ...t.......R...|
0x33d9f8:   00 41 0e 08 83 02 43 0e  30 02 43 0a 0e 08 41 0e   |.A....C.0.C...A.|
0x33da08:   04 c3 45 0b 10 00 00 00  98 15 00 00 54 e6 00 00   |..E.........T...|
0x33da18:   07 00 00 00 00 00 00 00  20 00 00 00 ac 15 00 00   |........ .......|
0x33da28:   50 e6 00 00 53 00 00 00  00 41 0e 08 83 02 43 0e   |P...S....A....C.|
0x33da38:   30 02 44 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.D...A...E.....|
0x33da48:   d0 15 00 00 8c e6 00 00  07 00 00 00 00 00 00 00   |................|
0x33da58:   10 00 00 00 e4 15 00 00  88 e6 00 00 07 00 00 00   |................|
0x33da68:   00 00 00 00 20 00 00 00  f8 15 00 00 84 e6 00 00   |.... ...........|
0x33da78:   60 00 00 00 00 41 0e 08  83 02 43 0e 30 02 51 0a   |`....A....C.0.Q.|
0x33da88:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 1c 16 00 00   |..A...E.........|
0x33da98:   c0 e6 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |................|
0x33daa8:   30 16 00 00 bc e6 00 00  0a 00 00 00 00 00 00 00   |0...............|
0x33dab8:   20 00 00 00 44 16 00 00  b8 e6 00 00 58 00 00 00   | ...D.......X...|
0x33dac8:   00 41 0e 08 83 02 43 0e  30 02 49 0a 0e 08 41 0e   |.A....C.0.I...A.|
0x33dad8:   04 c3 45 0b 10 00 00 00  68 16 00 00 f4 e6 00 00   |..E.....h.......|
0x33dae8:   07 00 00 00 00 00 00 00  20 00 00 00 7c 16 00 00   |........ ...|...|
0x33daf8:   f0 e6 00 00 59 00 00 00  00 41 0e 08 83 02 43 0e   |....Y....A....C.|
0x33db08:   30 02 4a 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.J...A...E.....|
0x33db18:   a0 16 00 00 2c e7 00 00  07 00 00 00 00 00 00 00   |....,...........|
0x33db28:   20 00 00 00 b4 16 00 00  28 e7 00 00 59 00 00 00   | .......(...Y...|
0x33db38:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x33db48:   04 c3 45 0b 10 00 00 00  d8 16 00 00 64 e7 00 00   |..E.........d...|
0x33db58:   0a 00 00 00 00 00 00 00  10 00 00 00 ec 16 00 00   |................|
0x33db68:   60 e7 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   |`........... ...|
0x33db78:   00 17 00 00 5c e7 00 00  58 00 00 00 00 41 0e 08   |....\...X....A..|
0x33db88:   83 02 43 0e 30 02 49 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.I...A...E.|
0x33db98:   10 00 00 00 24 17 00 00  98 e7 00 00 07 00 00 00   |....$...........|
0x33dba8:   00 00 00 00 10 00 00 00  38 17 00 00 94 e7 00 00   |........8.......|
0x33dbb8:   07 00 00 00 00 00 00 00  20 00 00 00 4c 17 00 00   |........ ...L...|
0x33dbc8:   90 e7 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |....`....A....C.|
0x33dbd8:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.Q...A...E.....|
0x33dbe8:   70 17 00 00 cc e7 00 00  07 00 00 00 00 00 00 00   |p...............|
0x33dbf8:   10 00 00 00 84 17 00 00  c8 e7 00 00 07 00 00 00   |................|
0x33dc08:   00 00 00 00 20 00 00 00  98 17 00 00 c4 e7 00 00   |.... ...........|
0x33dc18:   60 00 00 00 00 41 0e 08  83 02 43 0e 30 02 51 0a   |`....A....C.0.Q.|
0x33dc28:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 bc 17 00 00   |..A...E.........|
0x33dc38:   00 e8 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |................|
0x33dc48:   d0 17 00 00 fc e7 00 00  0a 00 00 00 00 00 00 00   |................|
0x33dc58:   20 00 00 00 e4 17 00 00  f8 e7 00 00 58 00 00 00   | ...........X...|
0x33dc68:   00 41 0e 08 83 02 43 0e  30 02 49 0a 0e 08 41 0e   |.A....C.0.I...A.|
0x33dc78:   04 c3 45 0b 10 00 00 00  08 18 00 00 34 e8 00 00   |..E.........4...|
0x33dc88:   07 00 00 00 00 00 00 00  20 00 00 00 1c 18 00 00   |........ .......|
0x33dc98:   30 e8 00 00 59 00 00 00  00 41 0e 08 83 02 43 0e   |0...Y....A....C.|
0x33dca8:   30 02 4a 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.J...A...E.....|
0x33dcb8:   40 18 00 00 6c e8 00 00  07 00 00 00 00 00 00 00   |@...l...........|
0x33dcc8:   20 00 00 00 54 18 00 00  68 e8 00 00 59 00 00 00   | ...T...h...Y...|
0x33dcd8:   00 41 0e 08 83 02 43 0e  30 02 4a 0a 0e 08 41 0e   |.A....C.0.J...A.|
0x33dce8:   04 c3 45 0b 10 00 00 00  78 18 00 00 a4 e8 00 00   |..E.....x.......|
0x33dcf8:   0a 00 00 00 00 00 00 00  10 00 00 00 8c 18 00 00   |................|
0x33dd08:   a0 e8 00 00 0a 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x33dd18:   a0 18 00 00 9c e8 00 00  58 00 00 00 00 41 0e 08   |........X....A..|
0x33dd28:   83 02 43 0e 30 02 49 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.I...A...E.|
0x33dd38:   10 00 00 00 c4 18 00 00  d8 e8 00 00 07 00 00 00   |................|
0x33dd48:   00 00 00 00 10 00 00 00  d8 18 00 00 d4 e8 00 00   |................|
0x33dd58:   07 00 00 00 00 00 00 00  20 00 00 00 ec 18 00 00   |........ .......|
0x33dd68:   d0 e8 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |....`....A....C.|
0x33dd78:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.Q...A...E.....|
0x33dd88:   10 19 00 00 0c e9 00 00  0a 00 00 00 00 00 00 00   |................|
0x33dd98:   10 00 00 00 24 19 00 00  08 e9 00 00 0a 00 00 00   |....$...........|
0x33dda8:   00 00 00 00 20 00 00 00  38 19 00 00 04 e9 00 00   |.... ...8.......|
0x33ddb8:   58 00 00 00 00 41 0e 08  83 02 43 0e 30 02 49 0a   |X....A....C.0.I.|
0x33ddc8:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 5c 19 00 00   |..A...E.....\...|
0x33ddd8:   40 e9 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |@........... ...|
0x33dde8:   70 19 00 00 3c e9 00 00  59 00 00 00 00 41 0e 08   |p...<...Y....A..|
0x33ddf8:   83 02 43 0e 30 02 4a 0a  0e 08 41 0e 04 c3 45 0b   |..C.0.J...A...E.|
0x33de08:   10 00 00 00 94 19 00 00  78 e9 00 00 07 00 00 00   |........x.......|
0x33de18:   00 00 00 00 10 00 00 00  a8 19 00 00 74 e9 00 00   |............t...|
0x33de28:   07 00 00 00 00 00 00 00  20 00 00 00 bc 19 00 00   |........ .......|
0x33de38:   70 e9 00 00 60 00 00 00  00 41 0e 08 83 02 43 0e   |p...`....A....C.|
0x33de48:   30 02 51 0a 0e 08 41 0e  04 c3 45 0b 10 00 00 00   |0.Q...A...E.....|
0x33de58:   e0 19 00 00 ac e9 00 00  07 00 00 00 00 00 00 00   |................|
0x33de68:   10 00 00 00 f4 19 00 00  a8 e9 00 00 07 00 00 00   |................|
0x33de78:   00 00 00 00 20 00 00 00  08 1a 00 00 a4 e9 00 00   |.... ...........|
0x33de88:   60 00 00 00 00 41 0e 08  83 02 43 0e 30 02 51 0a   |`....A....C.0.Q.|
0x33de98:   0e 08 41 0e 04 c3 45 0b  10 00 00 00 2c 1a 00 00   |..A...E.....,...|
0x33dea8:   e0 e9 00 00 0a 00 00 00  00 00 00 00 10 00 00 00   |................|
0x33deb8:   40 1a 00 00 dc e9 00 00  0a 00 00 00 00 00 00 00   |@...............|
0x33dec8:   20 00 00 00 54 1a 00 00  d8 e9 00 00 58 00 00 00   | ...T.......X...|
0x33ded8:   00 41 0e 08 83 02 43 0e  30 02 49 0a 0e 08 41 0e   |.A....C.0.I...A.|
0x33dee8:   04 c3 45 0b 10 00 00 00  78 1a 00 00 14 ea 00 00   |..E.....x.......|
0x33def8:   07 00 00 00 00 00 00 00  20 00 00 00 8c 1a 00 00   |........ .......|
0x33df08:   10 ea 00 00 59 00 00 00  00 41 0e 08 83 02 43 0e   |....Y....A....C.|
0x33df18:   30 02 4a 0a 0e 08 41 0e  04 c3 45 0b 20 00 00 00   |0.J...A...E. ...|
0x33df28:   b0 1a 00 00 4c ea 00 00  3b 00 00 00 00 41 0e 08   |....L...;....A..|
0x33df38:   83 02 43 0e 30 6c 0a 0e  08 41 0e 04 c3 45 0b 00   |..C.0l...A...E..|
0x33df48:   28 00 00 00 d4 1a 00 00  68 ea 00 00 8a 00 00 00   |(.......h.......|
0x33df58:   00 43 0e 30 5a 86 02 83  03 6d 0a 0e 04 c6 c3 46   |.C.0Z....m.....F|
0x33df68:   0b 73 0a 0e 04 c6 c3 42  0b 00 00 00 18 00 00 00   |.s.....B........|
0x33df78:   00 1b 00 00 cc ea 00 00  35 00 00 00 00 43 0e 20   |........5....C. |
0x33df88:   68 0a 0e 04 45 0b 00 00  2c 00 00 00 1c 1b 00 00   |h...E...,.......|
0x33df98:   f0 ea 00 00 67 00 00 00  00 41 0e 08 83 02 43 0e   |....g....A....C.|
0x33dfa8:   30 02 41 0a 0e 08 41 0e  04 c3 4a 0b 50 0a 0e 08   |0.A...A...J.P...|
0x33dfb8:   41 0e 04 c3 41 0b 00 00  2c 00 00 00 4c 1b 00 00   |A...A...,...L...|
0x33dfc8:   30 eb 00 00 67 00 00 00  00 41 0e 08 83 02 43 0e   |0...g....A....C.|
0x33dfd8:   30 02 41 0a 0e 08 41 0e  04 c3 4a 0b 50 0a 0e 08   |0.A...A...J.P...|
0x33dfe8:   41 0e 04 c3 41 0b 00 00  30 00 00 00 f8 12 00 00   |A...A...0.......|
0x33dff8:   70 eb 00 00 82 00 00 00  04 7d b8 00 00 41 0e 08   |p........}...A..|
0x33e008:   83 02 43 0e 40 02 41 0a  0e 08 41 0e 04 c3 4a 0b   |..C.@.A...A...J.|
0x33e018:   50 0a 0e 08 41 0e 04 c3  41 0b 00 00 30 00 00 00   |P...A...A...0...|
0x33e028:   2c 13 00 00 cc eb 00 00  82 00 00 00 04 8d b8 00   |,...............|
0x33e038:   00 41 0e 08 83 02 43 0e  40 02 41 0a 0e 08 41 0e   |.A....C.@.A...A.|
0x33e048:   04 c3 4a 0b 50 0a 0e 08  41 0e 04 c3 41 0b 00 00   |..J.P...A...A...|
0x33e058:   30 00 00 00 60 13 00 00  28 ec 00 00 82 00 00 00   |0...`...(.......|
0x33e068:   04 9d b8 00 00 41 0e 08  83 02 43 0e 40 02 41 0a   |.....A....C.@.A.|
0x33e078:   0e 08 41 0e 04 c3 4a 0b  50 0a 0e 08 41 0e 04 c3   |..A...J.P...A...|
0x33e088:   41 0b 00 00 30 00 00 00  94 13 00 00 84 ec 00 00   |A...0...........|
0x33e098:   82 00 00 00 04 ad b8 00  00 41 0e 08 83 02 43 0e   |.........A....C.|
0x33e0a8:   40 02 41 0a 0e 08 41 0e  04 c3 4a 0b 50 0a 0e 08   |@.A...A...J.P...|
0x33e0b8:   41 0e 04 c3 41 0b 00 00  18 00 00 00 4c 1c 00 00   |A...A.......L...|
0x33e0c8:   e0 ec 00 00 5a 00 00 00  00 43 0e 30 6c 0a 0e 04   |....Z....C.0l...|
0x33e0d8:   42 0b 00 00 20 00 00 00  68 1c 00 00 24 ed 00 00   |B... ...h...$...|
0x33e0e8:   6f 00 00 00 00 41 0e 08  83 02 43 0e 30 7b 0a 0e   |o....A....C.0{..|
0x33e0f8:   08 41 0e 04 c3 41 0b 00  24 00 00 00 08 14 00 00   |.A...A..$.......|
0x33e108:   70 ed 00 00 81 00 00 00  04 bd b8 00 00 43 0e 30   |p............C.0|
0x33e118:   48 86 02 48 83 03 02 56  0a 0e 04 c6 c3 41 0b 00   |H..H...V.....A..|
0x33e128:   38 00 00 00 b4 1c 00 00  d8 ed 00 00 c5 00 00 00   |8...............|
0x33e138:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 73   |.A....A....C.0.s|
0x33e148:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 46 0b 68 0a 0e   |...A...A...F.h..|
0x33e158:   0c 41 0e 08 c3 41 0e 04  c6 45 0b 00 18 00 00 00   |.A...A...E......|
0x33e168:   f0 1c 00 00 6c e7 ff ff  2a 00 00 00 00 43 0e 20   |....l...*....C. |
0x33e178:   61 0a 0e 04 41 0b 00 00  28 00 00 00 88 14 00 00   |a...A...(.......|
0x33e188:   80 e7 ff ff 94 00 00 00  04 cd b8 00 00 43 0e 30   |.............C.0|
0x33e198:   48 83 04 54 87 02 86 03  02 5d 0a 0e 04 c7 c6 c3   |H..T.....]......|
0x33e1a8:   41 0b 00 00 18 00 00 00  38 1d 00 00 f4 e7 ff ff   |A.......8.......|
0x33e1b8:   25 00 00 00 00 43 0e 20  5c 0a 0e 04 41 0b 00 00   |%....C. \...A...|
0x33e1c8:   2c 00 00 00 54 1d 00 00  08 e8 ff ff e8 00 00 00   |,...T...........|
0x33e1d8:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 db   |.A....A....C.0..|
0x33e1e8:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33e1f8:   2c 00 00 00 84 1d 00 00  c8 e8 ff ff 5f 00 00 00   |,..........._...|
0x33e208:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 52   |.A....A....C.0.R|
0x33e218:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33e228:   20 00 00 00 b4 1d 00 00  a8 ed 00 00 45 00 00 00   | ...........E...|
0x33e238:   00 41 0e 08 83 02 43 0e  30 72 0a 0e 08 41 0e 04   |.A....C.0r...A..|
0x33e248:   c3 41 0b 00 2c 00 00 00  54 15 00 00 d4 ed 00 00   |.A..,...T.......|
0x33e258:   2b 01 00 00 04 df b8 00  00 43 0e 40 48 83 05 54   |+........C.@H..T|
0x33e268:   86 04 5b 85 02 87 03 02  af 0a 0e 04 c5 c7 c6 c3   |..[.............|
0x33e278:   47 0b 00 00 30 00 00 00  84 15 00 00 d4 ee 00 00   |G...0...........|
0x33e288:   a5 00 00 00 04 fc b8 00  00 41 0e 08 86 02 41 0e   |.........A....A.|
0x33e298:   0c 83 03 43 0e 30 02 74  0a 0e 0c 41 0e 08 c3 41   |...C.0.t...A...A|
0x33e2a8:   0e 04 c6 41 0b 00 00 00  10 00 00 00 3c 1e 00 00   |...A........<...|
0x33e2b8:   50 ef 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |P........... ...|
0x33e2c8:   cc 15 00 00 4c ef 00 00  6d 00 00 00 04 0f b9 00   |....L...m.......|
0x33e2d8:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x33e2e8:   20 00 00 00 f0 15 00 00  98 ef 00 00 10 01 00 00   | ...............|
0x33e2f8:   04 1b b9 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33e308:   0e 50 00 00 24 00 00 00  14 16 00 00 84 f0 00 00   |.P..$...........|
0x33e318:   a7 00 00 00 04 34 b9 00  00 43 0e 50 63 86 02 83   |.....4...C.Pc...|
0x33e328:   03 61 0a 0e 04 c6 c3 41  0b 00 00 00 24 00 00 00   |.a.....A....$...|
0x33e338:   3c 16 00 00 0c f1 00 00  5f 00 00 00 04 4b b9 00   |<......._....K..|
0x33e348:   00 41 0e 08 83 02 43 0e  40 7c 0a 0e 08 41 0e 04   |.A....C.@|...A..|
0x33e358:   c3 41 0b 00 30 00 00 00  64 16 00 00 44 f1 00 00   |.A..0...d...D...|
0x33e368:   ab 00 00 00 04 57 b9 00  00 41 0e 08 86 02 41 0e   |.....W...A....A.|
0x33e378:   0c 83 03 43 0e 30 02 7a  0a 0e 0c 41 0e 08 c3 41   |...C.0.z...A...A|
0x33e388:   0e 04 c6 41 0b 00 00 00  10 00 00 00 1c 1f 00 00   |...A............|
0x33e398:   c0 f1 00 00 07 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x33e3a8:   ac 16 00 00 bc f1 00 00  6d 00 00 00 04 6a b9 00   |........m....j..|
0x33e3b8:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x33e3c8:   20 00 00 00 d0 16 00 00  08 f2 00 00 f5 00 00 00   | ...............|
0x33e3d8:   04 76 b9 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.v...A....A....C|
0x33e3e8:   0e 50 00 00 1c 00 00 00  f4 16 00 00 a5 c6 00 00   |.P..............|
0x33e3f8:   88 00 00 00 04 8f b9 00  00 41 0e 08 83 02 43 0e   |.........A....C.|
0x33e408:   50 00 00 00 30 00 00 00  14 17 00 00 c4 f2 00 00   |P...0...........|
0x33e418:   87 00 00 00 04 a3 b9 00  00 41 0e 08 86 02 41 0e   |.........A....A.|
0x33e428:   0c 83 03 43 0e 30 02 68  0a 0e 0c 41 0e 08 c3 41   |...C.0.h...A...A|
0x33e438:   0e 04 c6 41 0b 00 00 00  10 00 00 00 cc 1f 00 00   |...A............|
0x33e448:   20 f3 00 00 07 00 00 00  00 00 00 00 20 00 00 00   | ........... ...|
0x33e458:   5c 17 00 00 1c f3 00 00  6d 00 00 00 04 b0 b9 00   |\.......m.......|
0x33e468:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x33e478:   20 00 00 00 80 17 00 00  68 f3 00 00 ea 00 00 00   | .......h.......|
0x33e488:   04 bc b9 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33e498:   0e 50 00 00 24 00 00 00  a4 17 00 00 34 f4 00 00   |.P..$.......4...|
0x33e4a8:   ef 00 00 00 04 d0 b9 00  00 41 0e 08 83 02 43 0e   |.........A....C.|
0x33e4b8:   50 02 5e 0a 0e 08 41 0e  04 c3 45 0b 2c 00 00 00   |P.^...A...E.,...|
0x33e4c8:   cc 17 00 00 fc f4 00 00  2c 03 00 00 04 e5 b9 00   |........,.......|
0x33e4d8:   00 43 0e 80 01 4b 83 05  4f 85 02 86 04 87 03 03   |.C...K..O.......|
0x33e4e8:   62 01 0a 0e 04 c5 c7 c6  c3 41 0b 00 28 00 00 00   |b........A..(...|
0x33e4f8:   fc 17 00 00 2c e6 ff ff  12 02 00 00 04 14 ba 00   |....,...........|
0x33e508:   00 43 0e 30 68 87 02 86  03 83 04 03 24 01 0a 0e   |.C.0h.......$...|
0x33e518:   04 c7 c6 c3 41 0b 00 00  30 00 00 00 28 18 00 00   |....A...0...(...|
0x33e528:   d0 f7 00 00 87 00 00 00  04 58 ba 00 00 41 0e 08   |.........X...A..|
0x33e538:   86 02 41 0e 0c 83 03 43  0e 30 02 68 0a 0e 0c 41   |..A....C.0.h...A|
0x33e548:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 10 00 00 00   |...A...A........|
0x33e558:   e0 20 00 00 2c f8 00 00  07 00 00 00 00 00 00 00   |. ..,...........|
0x33e568:   20 00 00 00 70 18 00 00  28 f8 00 00 6d 00 00 00   | ...p...(...m...|
0x33e578:   04 65 ba 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.e...A....A....C|
0x33e588:   0e 30 00 00 20 00 00 00  94 18 00 00 74 f8 00 00   |.0.. .......t...|
0x33e598:   ea 00 00 00 04 71 ba 00  00 41 0e 08 86 02 41 0e   |.....q...A....A.|
0x33e5a8:   0c 83 03 43 0e 50 00 00  24 00 00 00 b8 18 00 00   |...C.P..$.......|
0x33e5b8:   40 f9 00 00 0d 01 00 00  04 85 ba 00 00 43 0e 30   |@............C.0|
0x33e5c8:   48 83 03 5c 86 02 02 5c  0a 0e 04 c6 c3 45 0b 00   |H..\...\.....E..|
0x33e5d8:   30 00 00 00 e0 18 00 00  28 fa 00 00 b5 00 00 00   |0.......(.......|
0x33e5e8:   04 94 ba 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33e5f8:   0e 30 02 66 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.f...A...A...A|
0x33e608:   0b 00 00 00 20 00 00 00  98 21 00 00 b4 fa 00 00   |.... ....!......|
0x33e618:   3f 00 00 00 00 41 0e 08  83 02 43 0e 30 74 0a 0e   |?....A....C.0t..|
0x33e628:   08 41 0e 04 c3 41 0b 00  18 00 00 00 bc 21 00 00   |.A...A.......!..|
0x33e638:   d0 fa 00 00 48 00 00 00  00 43 0e 30 67 0a 0e 04   |....H....C.0g...|
0x33e648:   46 0b 00 00 38 00 00 00  54 19 00 00 04 fb 00 00   |F...8...T.......|
0x33e658:   19 01 00 00 04 a3 ba 00  00 41 0e 08 87 02 41 0e   |.........A....A.|
0x33e668:   0c 86 03 41 0e 10 83 04  43 0e 30 02 a8 0a 0e 10   |...A....C.0.....|
0x33e678:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x33e688:   2c 00 00 00 90 19 00 00  e8 fb 00 00 96 02 00 00   |,...............|
0x33e698:   04 b4 ba 00 00 43 0e 70  48 86 04 48 87 03 48 83   |.....C.pH..H..H.|
0x33e6a8:   05 02 7f 85 02 02 b7 0a  0e 04 c5 c7 c6 c3 47 0b   |..............G.|
0x33e6b8:   24 00 00 00 c0 19 00 00  58 fe 00 00 91 00 00 00   |$.......X.......|
0x33e6c8:   04 e4 ba 00 00 41 0e 08  83 02 43 0e 50 78 0a 0e   |.....A....C.Px..|
0x33e6d8:   08 41 0e 04 c3 41 0b 00  40 00 00 00 e8 19 00 00   |.A...A..@.......|
0x33e6e8:   d0 fe 00 00 7a 03 00 00  04 f6 ba 00 00 41 0e 08   |....z........A..|
0x33e6f8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33e708:   05 43 0e 70 02 d2 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.p.....A...A..|
0x33e718:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 40 00 00 00   |.A...A...C..@...|
0x33e728:   2c 1a 00 00 0c 02 01 00  fa 00 00 00 04 3c bb 00   |,............<..|
0x33e738:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33e748:   41 0e 14 83 05 43 0e 50  02 78 0a 0e 14 41 0e 10   |A....C.P.x...A..|
0x33e758:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 45 0b 00   |.A...A...A...E..|
0x33e768:   2c 00 00 00 f4 22 00 00  c8 02 01 00 65 00 00 00   |,...."......e...|
0x33e778:   00 41 0e 08 83 02 43 0e  30 7c 0a 0e 08 41 0e 04   |.A....C.0|...A..|
0x33e788:   c3 47 0b 50 0a 0e 08 41  0e 04 c3 41 0b 00 00 00   |.G.P...A...A....|
0x33e798:   3c 00 00 00 a0 1a 00 00  08 03 01 00 9a 00 00 00   |<...............|
0x33e7a8:   04 55 bb 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.U...A....A....C|
0x33e7b8:   0e 30 02 5c 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 45   |.0.\...A...A...E|
0x33e7c8:   0b 50 0a 0e 0c 41 0e 08  c3 41 0e 04 c6 41 0b 00   |.P...A...A...A..|
0x33e7d8:   3c 00 00 00 64 23 00 00  68 03 01 00 94 00 00 00   |<...d#..h.......|
0x33e7e8:   00 41 0e 08 85 02 43 0e  0c 87 03 41 0e 10 86 04   |.A....C....A....|
0x33e7f8:   41 0e 14 83 05 43 0e 40  02 81 0a 0e 14 41 0e 10   |A....C.@.....A..|
0x33e808:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x33e818:   40 00 00 00 a4 23 00 00  c8 03 01 00 1f 01 00 00   |@....#..........|
0x33e828:   00 41 0e 08 83 02 43 0e  30 02 86 0a 0e 08 41 0e   |.A....C.0.....A.|
0x33e838:   04 c3 45 0b 6a 0a 0e 08  41 0e 04 c3 45 0b 50 0a   |..E.j...A...E.P.|
0x33e848:   0e 08 41 0e 04 c3 47 0b  57 0a 0e 08 41 0e 04 c3   |..A...G.W...A...|
0x33e858:   48 0b 00 00 20 00 00 00  e8 23 00 00 f4 04 01 00   |H... ....#......|
0x33e868:   85 00 00 00 00 41 0e 08  83 02 43 0e 30 67 0a 0e   |.....A....C.0g..|
0x33e878:   08 41 0e 04 c3 44 0b 00  1c 00 00 00 0c 24 00 00   |.A...D.......$..|
0x33e888:   60 05 01 00 55 00 00 00  00 43 0e 20 6a 0a 0e 04   |`...U....C. j...|
0x33e898:   4b 0b 50 0a 0e 04 41 0b  44 00 00 00 2c 24 00 00   |K.P...A.D...,$..|
0x33e8a8:   a0 05 01 00 71 00 00 00  00 41 0e 08 87 02 41 0e   |....q....A....A.|
0x33e8b8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 49 0a 0e 10   |...A....C.0.I...|
0x33e8c8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x33e8d8:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x33e8e8:   44 00 00 00 74 24 00 00  d8 05 01 00 79 00 00 00   |D...t$......y...|
0x33e8f8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x33e908:   43 0e 30 02 51 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.Q...A...A...|
0x33e918:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x33e928:   08 c6 41 0e 04 c7 41 0b  30 00 00 00 38 1c 00 00   |..A...A.0...8...|
0x33e938:   10 06 01 00 ec 00 00 00  04 67 bb 00 00 41 0e 08   |.........g...A..|
0x33e948:   86 02 41 0e 0c 83 03 43  0e 30 02 87 0a 0e 0c 41   |..A....C.0.....A|
0x33e958:   0e 08 c3 41 0e 04 c6 43  0b 00 00 00 20 00 00 00   |...A...C.... ...|
0x33e968:   f0 24 00 00 cc 06 01 00  99 00 00 00 00 41 0e 08   |.$...........A..|
0x33e978:   83 02 43 0e 30 02 54 0a  0e 08 41 0e 04 c3 47 0b   |..C.0.T...A...G.|
0x33e988:   28 00 00 00 90 1c 00 00  48 07 01 00 d1 00 00 00   |(.......H.......|
0x33e998:   04 75 bb 00 00 43 0e 30  48 83 04 48 86 03 60 87   |.u...C.0H..H..`.|
0x33e9a8:   02 02 4a 0a 0e 04 c7 c6  c3 43 0b 00 2c 00 00 00   |..J......C..,...|
0x33e9b8:   bc 1c 00 00 8c e3 ff ff  09 01 00 00 04 83 bb 00   |................|
0x33e9c8:   00 43 0e 70 4c 85 02 02  48 86 04 87 03 83 05 02   |.C.pL...H.......|
0x33e9d8:   9a 0a 0e 04 c5 c7 c6 c3  41 0b 00 00 28 00 00 00   |........A...(...|
0x33e9e8:   70 25 00 00 6c e4 ff ff  ee 00 00 00 00 43 0e 60   |p%..l........C.`|
0x33e9f8:   52 87 03 86 04 83 05 48  85 02 02 a3 0a 0e 04 c5   |R......H........|
0x33ea08:   c7 c6 c3 48 0b 00 00 00  2c 00 00 00 18 1d 00 00   |...H....,.......|
0x33ea18:   30 e5 ff ff fd 00 00 00  04 96 bb 00 00 43 0e 70   |0............C.p|
0x33ea28:   4c 85 02 02 48 86 04 87  03 83 05 02 8e 0a 0e 04   |L...H...........|
0x33ea38:   c5 c7 c6 c3 41 0b 00 00  30 00 00 00 48 1d 00 00   |....A...0...H...|
0x33ea48:   00 e6 ff ff a8 00 00 00  04 a9 bb 00 00 41 0e 08   |.............A..|
0x33ea58:   86 02 41 0e 0c 83 03 43  0e 50 02 89 0a 0e 0c 41   |..A....C.P.....A|
0x33ea68:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 30 00 00 00   |...A...A....0...|
0x33ea78:   7c 1d 00 00 7c e6 ff ff  9a 00 00 00 04 bb bb 00   ||...|...........|
0x33ea88:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 7b   |.A....A....C.@.{|
0x33ea98:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33eaa8:   20 00 00 00 34 26 00 00  e8 e6 ff ff 7e 00 00 00   | ...4&......~...|
0x33eab8:   00 43 0e 40 48 86 02 48  83 03 02 65 0a 0e 04 c6   |.C.@H..H...e....|
0x33eac8:   c3 41 0b 00 18 00 00 00  58 26 00 00 44 e7 ff ff   |.A......X&..D...|
0x33ead8:   39 00 00 00 00 43 0e 30  6c 0a 0e 04 45 0b 00 00   |9....C.0l...E...|
0x33eae8:   24 00 00 00 74 26 00 00  68 e7 ff ff 8d 00 00 00   |$...t&..h.......|
0x33eaf8:   00 43 0e 40 48 83 04 54  86 03 48 87 02 02 60 0a   |.C.@H..T..H...`.|
0x33eb08:   0e 04 c7 c6 c3 41 0b 00  28 00 00 00 9c 26 00 00   |.....A..(....&..|
0x33eb18:   d0 e7 ff ff aa 00 00 00  00 43 0e 50 48 86 04 48   |.........C.PH..H|
0x33eb28:   87 03 48 83 05 7b 85 02  7a 0a 0e 04 c5 c7 c6 c3   |..H..{..z.......|
0x33eb38:   48 0b 00 00 40 00 00 00  44 1e 00 00 54 e8 ff ff   |H...@...D...T...|
0x33eb48:   64 01 00 00 04 cd bb 00  00 41 0e 08 85 02 41 0e   |d........A....A.|
0x33eb58:   0c 87 03 43 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...C....A....C.p|
0x33eb68:   78 0a 0e 14 41 0e 10 c3  41 0e 0c c6 41 0e 08 c7   |x...A...A...A...|
0x33eb78:   41 0e 04 c5 43 0b 00 00  34 00 00 00 0c 27 00 00   |A...C...4....'..|
0x33eb88:   80 e9 ff ff 59 01 00 00  00 41 0e 08 87 02 41 0e   |....Y....A....A.|
0x33eb98:   0c 86 03 41 0e 10 83 04  43 0e 80 01 03 48 01 0a   |...A....C....H..|
0x33eba8:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 43 0b   |..A...A...A...C.|
0x33ebb8:   40 00 00 00 c0 1e 00 00  a8 ea ff ff db 00 00 00   |@...............|
0x33ebc8:   04 e0 bb 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33ebd8:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 b2 0a 0e   |....A....C.P....|
0x33ebe8:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x33ebf8:   c5 43 0b 00 40 00 00 00  04 1f 00 00 44 eb ff ff   |.C..@.......D...|
0x33ec08:   13 01 00 00 04 f2 bb 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x33ec18:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x33ec28:   02 d3 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x33ec38:   c7 41 0e 04 c5 42 0b 00  20 00 00 00 cc 27 00 00   |.A...B.. ....'..|
0x33ec48:   70 05 01 00 3e 00 00 00  00 41 0e 08 83 02 43 0e   |p...>....A....C.|
0x33ec58:   30 73 0a 0e 08 41 0e 04  c3 41 0b 00 3c 00 00 00   |0s...A...A..<...|
0x33ec68:   f0 27 00 00 8c 05 01 00  88 00 00 00 00 41 0e 08   |.'...........A..|
0x33ec78:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33ec88:   05 43 0e 40 02 77 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.@.w...A...A..|
0x33ec98:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 28 00 00 00   |.A...A...A..(...|
0x33eca8:   30 28 00 00 dc 05 01 00  d9 01 00 00 00 43 0e 50   |0(...........C.P|
0x33ecb8:   48 83 05 48 87 03 58 85  02 86 04 02 65 0a 0e 04   |H..H..X.....e...|
0x33ecc8:   c5 c7 c6 c3 48 0b 00 00  40 00 00 00 d8 1f 00 00   |....H...@.......|
0x33ecd8:   90 07 01 00 49 02 00 00  04 08 bc 00 00 41 0e 08   |....I........A..|
0x33ece8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33ecf8:   05 43 0e 50 02 cb 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x33ed08:   c6 41 0e 08 c7 41 0e 04  c5 42 0b 00 34 00 00 00   |.A...A...B..4...|
0x33ed18:   a0 28 00 00 9c 09 01 00  54 00 00 00 00 41 0e 08   |.(......T....A..|
0x33ed28:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33ed38:   45 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |E...A...A...A...|
0x33ed48:   41 0b 00 00 34 00 00 00  d8 28 00 00 c4 09 01 00   |A...4....(......|
0x33ed58:   58 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |X....A....A....A|
0x33ed68:   0e 10 83 04 43 0e 30 02  49 0a 0e 10 41 0e 0c c3   |....C.0.I...A...|
0x33ed78:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 40 00 00 00   |A...A...A...@...|
0x33ed88:   8c 20 00 00 ec 09 01 00  0a 02 00 00 04 44 bc 00   |. ...........D..|
0x33ed98:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33eda8:   41 0e 14 83 05 43 0e 60  03 61 01 0a 0e 14 41 0e   |A....C.`.a....A.|
0x33edb8:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 44 0b   |..A...A...A...D.|
0x33edc8:   30 00 00 00 d0 20 00 00  b8 0b 01 00 ab 00 00 00   |0.... ..........|
0x33edd8:   04 90 bc 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33ede8:   0e 30 02 7a 0a 0e 0c 41  0e 08 c3 41 0e 04 c6 41   |.0.z...A...A...A|
0x33edf8:   0b 00 00 00 10 00 00 00  88 29 00 00 34 0c 01 00   |.........)..4...|
0x33ee08:   07 00 00 00 00 00 00 00  20 00 00 00 18 21 00 00   |........ ....!..|
0x33ee18:   30 0c 01 00 6d 00 00 00  04 a3 bc 00 00 41 0e 08   |0...m........A..|
0x33ee28:   86 02 41 0e 0c 83 03 43  0e 30 00 00 20 00 00 00   |..A....C.0.. ...|
0x33ee38:   3c 21 00 00 7c 0c 01 00  10 01 00 00 04 af bc 00   |<!..|...........|
0x33ee48:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 50 00 00   |.A....A....C.P..|
0x33ee58:   54 00 00 00 e4 29 00 00  68 0d 01 00 82 02 00 00   |T....)..h.......|
0x33ee68:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33ee78:   41 0e 14 83 05 43 0e 50  02 b1 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x33ee88:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 4c 0b 03   |.A...A...A...L..|
0x33ee98:   02 01 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x33eea8:   c7 41 0e 04 c5 42 0b 00  40 00 00 00 b8 21 00 00   |.A...B..@....!..|
0x33eeb8:   b0 e9 ff ff 14 05 00 00  04 c8 bc 00 00 41 0e 08   |.............A..|
0x33eec8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33eed8:   05 43 0e 60 02 5f 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`._...A...A..|
0x33eee8:   c6 41 0e 08 c7 41 0e 04  c5 46 0b 00 34 00 00 00   |.A...A...F..4...|
0x33eef8:   80 2a 00 00 5c 0f 01 00  59 00 00 00 00 41 0e 08   |.*..\...Y....A..|
0x33ef08:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33ef18:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x33ef28:   41 0b 00 00 44 00 00 00  b8 2a 00 00 84 0f 01 00   |A...D....*......|
0x33ef38:   71 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |q....A....A....A|
0x33ef48:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0x33ef58:   41 0e 08 c6 41 0e 04 c7  45 0b 50 0a 0e 10 41 0e   |A...A...E.P...A.|
0x33ef68:   0c c3 41 0e 08 c6 41 0e  04 c7 41 0b 34 00 00 00   |..A...A...A.4...|
0x33ef78:   00 2b 00 00 bc 0f 01 00  59 00 00 00 00 41 0e 08   |.+......Y....A..|
0x33ef88:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33ef98:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x33efa8:   41 0b 00 00 34 00 00 00  38 2b 00 00 e4 0f 01 00   |A...4...8+......|
0x33efb8:   59 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |Y....A....A....A|
0x33efc8:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0x33efd8:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 34 00 00 00   |A...A...A...4...|
0x33efe8:   70 2b 00 00 0c 10 01 00  2c 01 00 00 00 41 0e 08   |p+......,....A..|
0x33eff8:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33f008:   f4 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |....A...A...A...|
0x33f018:   41 0b 00 00 2c 00 00 00  a8 2b 00 00 04 11 01 00   |A...,....+......|
0x33f028:   65 00 00 00 00 41 0e 08  83 02 43 0e 20 7a 0a 0e   |e....A....C. z..|
0x33f038:   08 41 0e 04 c3 49 0b 50  0a 0e 08 41 0e 04 c3 41   |.A...I.P...A...A|
0x33f048:   0b 00 00 00 44 00 00 00  d8 2b 00 00 44 11 01 00   |....D....+..D...|
0x33f058:   79 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |y....A....A....A|
0x33f068:   0e 10 83 04 43 0e 30 02  51 0a 0e 10 41 0e 0c c3   |....C.0.Q...A...|
0x33f078:   41 0e 08 c6 41 0e 04 c7  46 0b 50 0a 0e 10 41 0e   |A...A...F.P...A.|
0x33f088:   0c c3 41 0e 08 c6 41 0e  04 c7 41 0b 34 00 00 00   |..A...A...A.4...|
0x33f098:   20 2c 00 00 7c 11 01 00  59 00 00 00 00 41 0e 08   | ,..|...Y....A..|
0x33f0a8:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33f0b8:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x33f0c8:   41 0b 00 00 34 00 00 00  58 2c 00 00 a4 11 01 00   |A...4...X,......|
0x33f0d8:   59 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |Y....A....A....A|
0x33f0e8:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0x33f0f8:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 34 00 00 00   |A...A...A...4...|
0x33f108:   90 2c 00 00 cc 11 01 00  59 00 00 00 00 41 0e 08   |.,......Y....A..|
0x33f118:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33f128:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x33f138:   41 0b 00 00 34 00 00 00  c8 2c 00 00 f4 11 01 00   |A...4....,......|
0x33f148:   74 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |t....A....A....A|
0x33f158:   0e 10 83 04 43 0e 30 02  65 0a 0e 10 41 0e 0c c3   |....C.0.e...A...|
0x33f168:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 34 00 00 00   |A...A...A...4...|
0x33f178:   00 2d 00 00 3c 12 01 00  59 00 00 00 00 41 0e 08   |.-..<...Y....A..|
0x33f188:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33f198:   4a 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |J...A...A...A...|
0x33f1a8:   41 0b 00 00 3c 00 00 00  38 2d 00 00 64 12 01 00   |A...<...8-..d...|
0x33f1b8:   ac 02 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33f1c8:   0e 10 86 04 41 0e 14 83  05 43 0e 70 03 82 01 0a   |....A....C.p....|
0x33f1d8:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x33f1e8:   04 c5 43 0b 40 00 00 00  f4 24 00 00 94 eb ff ff   |..C.@....$......|
0x33f1f8:   9a 02 00 00 04 10 bd 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x33f208:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e b0   |...A....A....F..|
0x33f218:   01 02 9d 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x33f228:   08 c7 41 0e 04 c5 45 0b  3c 00 00 00 bc 2d 00 00   |..A...E.<....-..|
0x33f238:   90 14 01 00 78 02 00 00  00 41 0e 08 85 02 41 0e   |....x....A....A.|
0x33f248:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x33f258:   03 5b 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.[....A...A...A.|
0x33f268:   08 c7 41 0e 04 c5 42 0b  28 00 00 00 78 25 00 00   |..A...B.(...x%..|
0x33f278:   d0 16 01 00 f7 00 00 00  04 24 bd 00 00 43 0e 30   |.........$...C.0|
0x33f288:   48 86 03 5e 87 02 83 04  02 68 0a 0e 04 c7 c6 c3   |H..^.....h......|
0x33f298:   47 0b 00 00 28 00 00 00  28 2e 00 00 a4 17 01 00   |G...(...(.......|
0x33f2a8:   a6 01 00 00 00 43 0e 50  48 83 05 54 86 04 48 87   |.....C.PH..T..H.|
0x33f2b8:   03 4c 85 02 02 48 0a 0e  04 c5 c7 c6 c3 45 0b 00   |.L...H.......E..|
0x33f2c8:   28 00 00 00 d0 25 00 00  28 19 01 00 dd 00 00 00   |(....%..(.......|
0x33f2d8:   04 33 bd 00 00 43 0e 30  48 86 03 5e 87 02 83 04   |.3...C.0H..^....|
0x33f2e8:   02 52 0a 0e 04 c7 c6 c3  45 0b 00 00 34 00 00 00   |.R......E...4...|
0x33f2f8:   80 2e 00 00 dc 19 01 00  68 00 00 00 00 41 0e 08   |........h....A..|
0x33f308:   87 02 41 0e 0c 86 03 41  0e 10 83 04 43 0e 30 02   |..A....A....C.0.|
0x33f318:   59 0a 0e 10 41 0e 0c c3  41 0e 08 c6 41 0e 04 c7   |Y...A...A...A...|
0x33f328:   41 0b 00 00 28 00 00 00  34 26 00 00 14 1a 01 00   |A...(...4&......|
0x33f338:   dd 00 00 00 04 42 bd 00  00 43 0e 30 48 86 03 5e   |.....B...C.0H..^|
0x33f348:   87 02 83 04 02 52 0a 0e  04 c7 c6 c3 45 0b 00 00   |.....R......E...|
0x33f358:   28 00 00 00 60 26 00 00  c8 1a 01 00 dd 00 00 00   |(...`&..........|
0x33f368:   04 51 bd 00 00 43 0e 30  48 86 03 5e 87 02 83 04   |.Q...C.0H..^....|
0x33f378:   02 52 0a 0e 04 c7 c6 c3  45 0b 00 00 28 00 00 00   |.R......E...(...|
0x33f388:   10 2f 00 00 7c 1b 01 00  aa 01 00 00 00 43 0e 50   |./..|........C.P|
0x33f398:   48 83 05 54 86 04 48 87  03 4c 85 02 02 43 0a 0e   |H..T..H..L...C..|
0x33f3a8:   04 c5 c7 c6 c3 42 0b 00  54 00 00 00 3c 2f 00 00   |.....B..T...</..|
0x33f3b8:   00 1d 01 00 b2 02 00 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x33f3c8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x33f3d8:   02 9d 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x33f3e8:   c7 41 0e 04 c5 48 0b 03  a0 01 0a 0e 14 41 0e 10   |.A...H.......A..|
0x33f3f8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 4c 0b 00   |.A...A...A...L..|
0x33f408:   2c 00 00 00 94 2f 00 00  68 1f 01 00 4e 00 00 00   |,..../..h...N...|
0x33f418:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 02 41   |.A....A....C.0.A|
0x33f428:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x33f438:   34 00 00 00 c4 2f 00 00  88 1f 01 00 82 02 00 00   |4..../..........|
0x33f448:   00 43 0e 60 48 83 05 58  86 04 48 87 03 4c 85 02   |.C.`H..X..H..L..|
0x33f458:   02 f9 0a 0e 04 c5 c7 c6  c3 48 0b 02 a4 0a 0e 04   |.........H......|
0x33f468:   c5 c7 c6 c3 45 0b 00 00  40 00 00 00 78 27 00 00   |....E...@...x'..|
0x33f478:   e0 21 01 00 33 01 00 00  04 60 bd 00 00 41 0e 08   |.!..3....`...A..|
0x33f488:   85 02 46 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..F....A....A...|
0x33f498:   05 43 0e 50 02 cd 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x33f4a8:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 3c 00 00 00   |.A...A...A..<...|
0x33f4b8:   40 30 00 00 dc 22 01 00  4d 01 00 00 00 41 0e 08   |@0..."..M....A..|
0x33f4c8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33f4d8:   05 43 0e 50 02 ff 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x33f4e8:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 2c 00 00 00   |.A...A...A..,...|
0x33f4f8:   fc 27 00 00 ec 23 01 00  b3 00 00 00 04 88 bd 00   |.'...#..........|
0x33f508:   00 43 0e 60 48 83 05 5a  86 04 85 02 57 87 03 02   |.C.`H..Z....W...|
0x33f518:   5f 0a 0e 04 c5 c7 c6 c3  41 0b 00 00 40 00 00 00   |_.......A...@...|
0x33f528:   2c 28 00 00 7c 24 01 00  40 01 00 00 04 98 bd 00   |,(..|$..@.......|
0x33f538:   00 41 0e 08 85 02 46 0e  0c 87 03 41 0e 10 86 04   |.A....F....A....|
0x33f548:   41 0e 14 83 05 43 0e 50  02 cd 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x33f558:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x33f568:   40 00 00 00 70 28 00 00  78 25 01 00 35 01 00 00   |@...p(..x%..5...|
0x33f578:   04 c0 bd 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33f588:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 c7 0a 0e   |....A....C.P....|
0x33f598:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x33f5a8:   c5 41 0b 00 40 00 00 00  b4 28 00 00 74 26 01 00   |.A..@....(..t&..|
0x33f5b8:   2a 02 00 00 04 e8 bd 00  00 41 0e 08 85 02 41 0e   |*........A....A.|
0x33f5c8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x33f5d8:   03 6c 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.l....A...A...A.|
0x33f5e8:   08 c7 41 0e 04 c5 41 0b  2c 00 00 00 f8 28 00 00   |..A...A.,....(..|
0x33f5f8:   30 ea ff ff fb 01 00 00  04 2a be 00 00 43 0e 80   |0........*...C..|
0x33f608:   01 4b 83 05 65 85 02 87  03 86 04 02 9e 0a 0e 04   |.K..e...........|
0x33f618:   c5 c7 c6 c3 47 0b 00 00  2c 00 00 00 28 29 00 00   |....G...,...()..|
0x33f628:   30 28 01 00 b3 00 00 00  04 3d be 00 00 43 0e 60   |0(.......=...C.`|
0x33f638:   48 83 05 5a 86 04 85 02  57 87 03 02 5f 0a 0e 04   |H..Z....W..._...|
0x33f648:   c5 c7 c6 c3 41 0b 00 00  44 00 00 00 58 29 00 00   |....A...D...X)..|
0x33f658:   c0 28 01 00 be 04 00 00  04 4b be 00 00 41 0e 08   |.(.......K...A..|
0x33f668:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33f678:   05 43 0e 80 01 03 25 03  0a 0e 14 41 0e 10 c3 41   |.C....%....A...A|
0x33f688:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 48 0b 00 00 00   |...A...A...H....|
0x33f698:   34 00 00 00 24 32 00 00  38 2d 01 00 31 02 00 00   |4...$2..8-..1...|
0x33f6a8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x33f6b8:   43 0e 30 03 90 01 0a 0e  10 41 0e 0c c3 41 0e 08   |C.0......A...A..|
0x33f6c8:   c6 41 0e 04 c7 47 0b 00  3c 00 00 00 5c 32 00 00   |.A...G..<...\2..|
0x33f6d8:   40 2f 01 00 89 01 00 00  00 41 0e 08 85 02 41 0e   |@/.......A....A.|
0x33f6e8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x33f6f8:   02 8f 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x33f708:   c7 41 0e 04 c5 46 0b 00  18 00 00 00 9c 32 00 00   |.A...F.......2..|
0x33f718:   90 30 01 00 34 00 00 00  00 43 0e 20 67 0a 0e 04   |.0..4....C. g...|
0x33f728:   45 0b 00 00 34 00 00 00  b8 32 00 00 b4 30 01 00   |E...4....2...0..|
0x33f738:   59 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |Y....A....A....A|
0x33f748:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0x33f758:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 18 00 00 00   |A...A...A.......|
0x33f768:   f0 32 00 00 dc 30 01 00  39 00 00 00 00 43 0e 30   |.2...0..9....C.0|
0x33f778:   70 0a 0e 04 41 0b 00 00  3c 00 00 00 0c 33 00 00   |p...A...<....3..|
0x33f788:   00 31 01 00 82 00 00 00  00 41 0e 08 85 02 41 0e   |.1.......A....A.|
0x33f798:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 40   |...A....A....C.@|
0x33f7a8:   02 71 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.q...A...A...A..|
0x33f7b8:   c7 41 0e 04 c5 41 0b 00  18 00 00 00 4c 33 00 00   |.A...A......L3..|
0x33f7c8:   50 31 01 00 39 00 00 00  00 43 0e 30 70 0a 0e 04   |P1..9....C.0p...|
0x33f7d8:   41 0b 00 00 40 00 00 00  e4 2a 00 00 74 31 01 00   |A...@....*..t1..|
0x33f7e8:   38 01 00 00 04 70 be 00  00 41 0e 08 85 02 41 0e   |8....p...A....A.|
0x33f7f8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x33f808:   02 ca 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x33f818:   c7 41 0e 04 c5 41 0b 00  34 00 00 00 ac 33 00 00   |.A...A..4....3..|
0x33f828:   70 32 01 00 59 00 00 00  00 41 0e 08 87 02 41 0e   |p2..Y....A....A.|
0x33f838:   0c 86 03 41 0e 10 83 04  43 0e 30 02 4a 0a 0e 10   |...A....C.0.J...|
0x33f848:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x33f858:   34 00 00 00 e4 33 00 00  98 32 01 00 59 00 00 00   |4....3...2..Y...|
0x33f868:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x33f878:   43 0e 30 02 4a 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.J...A...A...|
0x33f888:   41 0e 04 c7 41 0b 00 00  20 00 00 00 1c 34 00 00   |A...A... ....4..|
0x33f898:   c0 32 01 00 4c 00 00 00  00 41 0e 08 83 02 43 0e   |.2..L....A....C.|
0x33f8a8:   30 02 41 0a 0e 08 41 0e  04 c3 41 0b 40 00 00 00   |0.A...A...A.@...|
0x33f8b8:   bc 2b 00 00 ec 32 01 00  23 01 00 00 04 98 be 00   |.+...2..#.......|
0x33f8c8:   00 41 0e 08 85 02 46 0e  0c 87 03 41 0e 10 86 04   |.A....F....A....|
0x33f8d8:   41 0e 14 83 05 43 0e 50  02 b0 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x33f8e8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 41 0b 00   |.A...A...A...A..|
0x33f8f8:   34 00 00 00 84 34 00 00  d8 33 01 00 59 00 00 00   |4....4...3..Y...|
0x33f908:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x33f918:   43 0e 30 02 4a 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.J...A...A...|
0x33f928:   41 0e 04 c7 41 0b 00 00  18 00 00 00 bc 34 00 00   |A...A........4..|
0x33f938:   00 34 01 00 39 00 00 00  00 43 0e 30 70 0a 0e 04   |.4..9....C.0p...|
0x33f948:   41 0b 00 00 30 00 00 00  54 2c 00 00 24 34 01 00   |A...0...T,..$4..|
0x33f958:   cb 00 00 00 04 c0 be 00  00 41 0e 08 86 02 41 0e   |.........A....A.|
0x33f968:   0c 83 03 43 0e 30 02 96  0a 0e 0c 41 0e 08 c3 41   |...C.0.....A...A|
0x33f978:   0e 04 c6 41 0b 00 00 00  24 00 00 00 88 2c 00 00   |...A....$....,..|
0x33f988:   c0 34 01 00 98 00 00 00  04 d3 be 00 00 41 0e 08   |.4...........A..|
0x33f998:   83 02 43 0e 40 02 46 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.F...A...A.|
0x33f9a8:   24 00 00 00 b0 2c 00 00  38 35 01 00 81 00 00 00   |$....,..85......|
0x33f9b8:   04 e4 be 00 00 41 0e 08  83 02 43 0e 40 02 4a 0a   |.....A....C.@.J.|
0x33f9c8:   0e 08 41 0e 04 c3 45 0b  24 00 00 00 d8 2c 00 00   |..A...E.$....,..|
0x33f9d8:   a0 35 01 00 79 00 00 00  04 f4 be 00 00 41 0e 08   |.5..y........A..|
0x33f9e8:   83 02 43 0e 40 02 46 0a  0e 08 41 0e 04 c3 41 0b   |..C.@.F...A...A.|
0x33f9f8:   24 00 00 00 00 2d 00 00  f8 35 01 00 81 00 00 00   |$....-...5......|
0x33fa08:   04 04 bf 00 00 41 0e 08  83 02 43 0e 40 02 4a 0a   |.....A....C.@.J.|
0x33fa18:   0e 08 41 0e 04 c3 45 0b  30 00 00 00 28 2d 00 00   |..A...E.0...(-..|
0x33fa28:   60 36 01 00 cb 00 00 00  04 14 bf 00 00 41 0e 08   |`6...........A..|
0x33fa38:   86 02 41 0e 0c 83 03 43  0e 30 02 96 0a 0e 0c 41   |..A....C.0.....A|
0x33fa48:   0e 08 c3 41 0e 04 c6 41  0b 00 00 00 24 00 00 00   |...A...A....$...|
0x33fa58:   5c 2d 00 00 fc 36 01 00  98 00 00 00 04 27 bf 00   |\-...6.......'..|
0x33fa68:   00 41 0e 08 83 02 43 0e  40 02 46 0a 0e 08 41 0e   |.A....C.@.F...A.|
0x33fa78:   04 c3 41 0b 24 00 00 00  84 2d 00 00 74 37 01 00   |..A.$....-..t7..|
0x33fa88:   79 00 00 00 04 38 bf 00  00 41 0e 08 83 02 43 0e   |y....8...A....C.|
0x33fa98:   40 02 46 0a 0e 08 41 0e  04 c3 41 0b 24 00 00 00   |@.F...A...A.$...|
0x33faa8:   ac 2d 00 00 cc 37 01 00  81 00 00 00 04 48 bf 00   |.-...7.......H..|
0x33fab8:   00 41 0e 08 83 02 43 0e  40 02 4a 0a 0e 08 41 0e   |.A....C.@.J...A.|
0x33fac8:   04 c3 45 0b 24 00 00 00  d4 2d 00 00 34 38 01 00   |..E.$....-..48..|
0x33fad8:   81 00 00 00 04 58 bf 00  00 41 0e 08 83 02 43 0e   |.....X...A....C.|
0x33fae8:   40 02 4a 0a 0e 08 41 0e  04 c3 45 0b 24 00 00 00   |@.J...A...E.$...|
0x33faf8:   fc 2d 00 00 9c 38 01 00  dc 00 00 00 04 68 bf 00   |.-...8.......h..|
0x33fb08:   00 41 0e 08 83 02 43 0e  40 02 6e 0a 0e 08 41 0e   |.A....C.@.n...A.|
0x33fb18:   04 c3 41 0b 34 00 00 00  a8 36 00 00 54 39 01 00   |..A.4....6..T9..|
0x33fb28:   59 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |Y....A....A....A|
0x33fb38:   0e 10 83 04 43 0e 30 02  4a 0a 0e 10 41 0e 0c c3   |....C.0.J...A...|
0x33fb48:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 18 00 00 00   |A...A...A.......|
0x33fb58:   e0 36 00 00 7c 39 01 00  39 00 00 00 00 43 0e 30   |.6..|9..9....C.0|
0x33fb68:   70 0a 0e 04 41 0b 00 00  18 00 00 00 fc 36 00 00   |p...A........6..|
0x33fb78:   b0 e6 ff ff 62 00 00 00  00 43 0e 30 02 59 0a 0e   |....b....C.0.Y..|
0x33fb88:   04 41 0b 00 40 00 00 00  18 37 00 00 84 39 01 00   |.A..@....7...9..|
0x33fb98:   0d 03 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33fba8:   0e 10 86 04 41 0e 14 83  05 43 0e 90 01 03 25 02   |....A....C....%.|
0x33fbb8:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x33fbc8:   0e 04 c5 48 0b 00 00 00  40 00 00 00 5c 37 00 00   |...H....@...\7..|
0x33fbd8:   50 3c 01 00 b6 02 00 00  00 41 0e 08 85 02 41 0e   |P<.......A....A.|
0x33fbe8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 90   |...A....A....C..|
0x33fbf8:   01 03 1f 02 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x33fc08:   0e 08 c7 41 0e 04 c5 46  0b 00 00 00 40 00 00 00   |...A...F....@...|
0x33fc18:   a0 37 00 00 cc 3e 01 00  76 07 00 00 00 41 0e 08   |.7...>..v....A..|
0x33fc28:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x33fc38:   05 46 0e f0 02 03 73 03  0a 0e 14 41 0e 10 c3 41   |.F....s....A...A|
0x33fc48:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 47 0b 00 00 00   |...A...A...G....|
0x33fc58:   40 00 00 00 e4 37 00 00  38 e6 ff ff 21 02 00 00   |@....7..8...!...|
0x33fc68:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33fc78:   41 0e 14 83 05 43 0e 80  01 03 c0 01 0a 0e 14 41   |A....C.........A|
0x33fc88:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x33fc98:   0b 00 00 00 3c 00 00 00  28 38 00 00 c4 45 01 00   |....<...(8...E..|
0x33fca8:   05 01 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33fcb8:   0e 10 86 04 41 0e 14 83  05 43 0e 40 02 c3 0a 0e   |....A....C.@....|
0x33fcc8:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x33fcd8:   c5 43 0b 00 2c 00 00 00  e4 2f 00 00 94 46 01 00   |.C..,..../...F..|
0x33fce8:   93 01 00 00 04 8c bf 00  00 43 0e 60 50 86 04 48   |.........C.`P..H|
0x33fcf8:   85 02 6d 87 03 83 05 02  9c 0a 0e 04 c5 c7 c6 c3   |..m.............|
0x33fd08:   44 0b 00 00 3c 00 00 00  98 38 00 00 04 48 01 00   |D...<....8...H..|
0x33fd18:   97 01 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33fd28:   0e 10 86 04 41 0e 14 83  05 43 0e 70 02 f0 0a 0e   |....A....C.p....|
0x33fd38:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x33fd48:   c5 43 0b 00 28 00 00 00  d8 38 00 00 64 49 01 00   |.C..(....8..dI..|
0x33fd58:   e8 00 00 00 00 43 0e 50  5d 86 04 48 83 05 48 87   |.....C.P]..H..H.|
0x33fd68:   03 4d 85 02 02 7e 0a 0e  04 c5 c7 c6 c3 45 0b 00   |.M...~.......E..|
0x33fd78:   3c 00 00 00 04 39 00 00  28 4a 01 00 e4 00 00 00   |<....9..(J......|
0x33fd88:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33fd98:   41 0e 14 83 05 43 0e 60  02 92 0a 0e 14 41 0e 10   |A....C.`.....A..|
0x33fda8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x33fdb8:   3c 00 00 00 44 39 00 00  d8 4a 01 00 1a 01 00 00   |<...D9...J......|
0x33fdc8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x33fdd8:   41 0e 14 83 05 43 0e 50  02 6c 0a 0e 14 41 0e 10   |A....C.P.l...A..|
0x33fde8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 49 0b 00   |.A...A...A...I..|
0x33fdf8:   40 00 00 00 00 31 00 00  b8 4b 01 00 c0 01 00 00   |@....1...K......|
0x33fe08:   04 ac bf 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33fe18:   0e 10 86 04 41 0e 14 83  05 43 0e 60 03 51 01 0a   |....A....C.`.Q..|
0x33fe28:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x33fe38:   04 c5 44 0b 3c 00 00 00  c8 39 00 00 34 4d 01 00   |..D.<....9..4M..|
0x33fe48:   e4 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x33fe58:   0e 10 86 04 41 0e 14 83  05 43 0e 60 02 92 0a 0e   |....A....C.`....|
0x33fe68:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x33fe78:   c5 43 0b 00 30 00 00 00  84 31 00 00 e4 4d 01 00   |.C..0....1...M..|
0x33fe88:   ab 00 00 00 04 d4 bf 00  00 41 0e 08 86 02 41 0e   |.........A....A.|
0x33fe98:   0c 83 03 43 0e 30 02 7a  0a 0e 0c 41 0e 08 c3 41   |...C.0.z...A...A|
0x33fea8:   0e 04 c6 41 0b 00 00 00  10 00 00 00 3c 3a 00 00   |...A........<:..|
0x33feb8:   60 4e 01 00 07 00 00 00  00 00 00 00 20 00 00 00   |`N.......... ...|
0x33fec8:   cc 31 00 00 5c 4e 01 00  6d 00 00 00 04 e7 bf 00   |.1..\N..m.......|
0x33fed8:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x33fee8:   20 00 00 00 f0 31 00 00  a8 4e 01 00 f5 00 00 00   | ....1...N......|
0x33fef8:   04 f3 bf 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.....A....A....C|
0x33ff08:   0e 50 00 00 1c 00 00 00  14 32 00 00 0d ac 00 00   |.P.......2......|
0x33ff18:   88 00 00 00 04 0c c0 00  00 41 0e 08 83 02 43 0e   |.........A....C.|
0x33ff28:   50 00 00 00 30 00 00 00  34 32 00 00 64 4f 01 00   |P...0...42..dO..|
0x33ff38:   ab 00 00 00 04 20 c0 00  00 41 0e 08 86 02 41 0e   |..... ...A....A.|
0x33ff48:   0c 83 03 43 0e 30 02 7a  0a 0e 0c 41 0e 08 c3 41   |...C.0.z...A...A|
0x33ff58:   0e 04 c6 41 0b 00 00 00  10 00 00 00 ec 3a 00 00   |...A.........:..|
0x33ff68:   e0 4f 01 00 07 00 00 00  00 00 00 00 20 00 00 00   |.O.......... ...|
0x33ff78:   7c 32 00 00 dc 4f 01 00  6d 00 00 00 04 33 c0 00   ||2...O..m....3..|
0x33ff88:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 30 00 00   |.A....A....C.0..|
0x33ff98:   20 00 00 00 a0 32 00 00  28 50 01 00 f5 00 00 00   | ....2..(P......|
0x33ffa8:   04 3f c0 00 00 41 0e 08  86 02 41 0e 0c 83 03 43   |.?...A....A....C|
0x33ffb8:   0e 50 00 00 1c 00 00 00  c4 32 00 00 e5 ab 00 00   |.P.......2......|
0x33ffc8:   88 00 00 00 04 58 c0 00  00 41 0e 08 83 02 43 0e   |.....X...A....C.|
0x33ffd8:   50 00 00 00 44 00 00 00  e4 32 00 00 e4 50 01 00   |P...D....2...P..|
0x33ffe8:   1e 04 00 00 04 6c c0 00  00 41 0e 08 85 02 41 0e   |.....l...A....A.|
0x33fff8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 46 0e a0   |...A....A....F..|
0x340008:   01 03 9a 02 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x340018:   0e 08 c7 41 0e 04 c5 48  0b 00 00 00 24 00 00 00   |...A...H....$...|
0x340028:   b0 3b 00 00 bc 54 01 00  c9 00 00 00 00 43 0e 40   |.;...T.......C.@|
0x340038:   02 42 87 02 86 03 83 04  02 7e 0a 0e 04 c7 c6 c3   |.B.......~......|
0x340048:   41 0b 00 00 40 00 00 00  54 33 00 00 64 55 01 00   |A...@...T3..dU..|
0x340058:   32 01 00 00 04 88 c0 00  00 41 0e 08 85 02 41 0e   |2........A....A.|
0x340068:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 40   |...A....A....C.@|
0x340078:   02 ca 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x340088:   c7 41 0e 04 c5 41 0b 00  3c 00 00 00 1c 3c 00 00   |.A...A..<....<..|
0x340098:   30 e4 ff ff 6e 01 00 00  00 41 0e 08 85 02 41 0e   |0...n....A....A.|
0x3400a8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x3400b8:   02 c0 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x3400c8:   c7 41 0e 04 c5 45 0b 00  40 00 00 00 d8 33 00 00   |.A...E..@....3..|
0x3400d8:   60 e5 ff ff 16 04 00 00  04 c8 c0 00 00 41 0e 08   |`............A..|
0x3400e8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x3400f8:   05 43 0e 70 02 80 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.p.....A...A..|
0x340108:   c6 41 0e 08 c7 41 0e 04  c5 45 0b 00 3c 00 00 00   |.A...A...E..<...|
0x340118:   a0 3c 00 00 3c e9 ff ff  df 01 00 00 00 41 0e 08   |.<..<........A..|
0x340128:   85 02 41 0e 0c 87 03 41  0e 10 86 04 43 0e 14 83   |..A....A....C...|
0x340138:   05 43 0e 90 01 02 d5 0a  0e 14 41 0e 10 c3 41 0e   |.C........A...A.|
0x340148:   0c c6 41 0e 08 c7 41 0e  04 c5 46 0b 24 00 00 00   |..A...A...F.$...|
0x340158:   e0 3c 00 00 9c 55 01 00  d1 00 00 00 00 43 0e 40   |.<...U.......C.@|
0x340168:   59 83 04 53 87 02 86 03  02 8d 0a 0e 04 c7 c6 c3   |Y..S............|
0x340178:   44 0b 00 00 28 00 00 00  84 34 00 00 b4 ea ff ff   |D...(....4......|
0x340188:   ab 00 00 00 04 22 c1 00  00 43 0e 30 48 83 04 54   |....."...C.0H..T|
0x340198:   87 02 86 03 02 74 0a 0e  04 c7 c6 c3 41 0b 00 00   |.....t......A...|
0x3401a8:   38 00 00 00 b0 34 00 00  38 eb ff ff 15 01 00 00   |8....4..8.......|
0x3401b8:   04 34 c1 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |.4...A....A....A|
0x3401c8:   0e 10 83 04 43 0e 30 02  c1 0a 0e 10 41 0e 0c c3   |....C.0.....A...|
0x3401d8:   41 0e 08 c6 41 0e 04 c7  41 0b 00 00 20 00 00 00   |A...A...A... ...|
0x3401e8:   70 3d 00 00 ec 55 01 00  48 01 00 00 00 41 0e 08   |p=...U..H....A..|
0x3401f8:   83 02 43 0e 50 02 87 0a  0e 08 41 0e 04 c3 44 0b   |..C.P.....A...D.|
0x340208:   3c 00 00 00 94 3d 00 00  18 57 01 00 19 02 00 00   |<....=...W......|
0x340218:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340228:   41 0e 14 83 05 43 0e 50  03 03 02 0a 0e 14 41 0e   |A....C.P......A.|
0x340238:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x340248:   3c 00 00 00 d4 3d 00 00  f8 58 01 00 1a 01 00 00   |<....=...X......|
0x340258:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340268:   41 0e 14 83 05 43 0e 50  02 6c 0a 0e 14 41 0e 10   |A....C.P.l...A..|
0x340278:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 49 0b 00   |.A...A...A...I..|
0x340288:   3c 00 00 00 14 3e 00 00  d8 59 01 00 ed 00 00 00   |<....>...Y......|
0x340298:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x3402a8:   41 0e 14 83 05 43 0e 50  02 9a 0a 0e 14 41 0e 10   |A....C.P.....A..|
0x3402b8:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x3402c8:   2c 00 00 00 d0 35 00 00  88 5a 01 00 4d 01 00 00   |,....5...Z..M...|
0x3402d8:   04 48 c1 00 00 43 0e 60  5d 86 04 4a 87 03 48 85   |.H...C.`]..J..H.|
0x3402e8:   02 53 83 05 02 7e 0a 0e  04 c5 c7 c6 c3 45 0b 00   |.S...~.......E..|
0x3402f8:   3c 00 00 00 84 3e 00 00  a8 5b 01 00 7b 01 00 00   |<....>...[..{...|
0x340308:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340318:   41 0e 14 83 05 43 0e 70  02 e7 0a 0e 14 41 0e 10   |A....C.p.....A..|
0x340328:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x340338:   28 00 00 00 c4 3e 00 00  e8 5c 01 00 f7 02 00 00   |(....>...\......|
0x340348:   00 43 0e 80 01 4b 85 02  4b 86 04 64 87 03 4e 83   |.C...K..K..d..N.|
0x340358:   05 02 f6 0a 0e 04 c5 c7  c6 c3 47 0b 40 00 00 00   |..........G.@...|
0x340368:   6c 36 00 00 bc 5f 01 00  8f 01 00 00 04 70 c1 00   |l6..._.......p..|
0x340378:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340388:   41 0e 14 83 05 43 0e 60  03 3f 01 0a 0e 14 41 0e   |A....C.`.?....A.|
0x340398:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x3403a8:   34 00 00 00 34 3f 00 00  08 61 01 00 54 00 00 00   |4...4?...a..T...|
0x3403b8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x3403c8:   43 0e 30 02 45 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.E...A...A...|
0x3403d8:   41 0e 04 c7 41 0b 00 00  34 00 00 00 6c 3f 00 00   |A...A...4...l?..|
0x3403e8:   30 61 01 00 54 00 00 00  00 41 0e 08 87 02 41 0e   |0a..T....A....A.|
0x3403f8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 45 0a 0e 10   |...A....C.0.E...|
0x340408:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x340418:   28 00 00 00 a4 3f 00 00  58 61 01 00 95 01 00 00   |(....?..Xa......|
0x340428:   00 43 0e 50 4d 83 05 54  86 04 55 85 02 87 03 03   |.C.PM..T..U.....|
0x340438:   2f 01 0a 0e 04 c5 c7 c6  c3 48 0b 00 28 00 00 00   |/........H..(...|
0x340448:   4c 37 00 00 cc 62 01 00  e4 00 00 00 04 8c c1 00   |L7...b..........|
0x340458:   00 43 0e 30 48 83 04 58  87 02 86 03 02 6d 0a 0e   |.C.0H..X.....m..|
0x340468:   04 c7 c6 c3 48 0b 00 00  30 00 00 00 78 37 00 00   |....H...0...x7..|
0x340478:   90 e9 ff ff c9 00 00 00  04 b0 c1 00 00 41 0e 08   |.............A..|
0x340488:   86 02 41 0e 0c 83 03 43  0e 40 02 8b 0a 0e 0c 41   |..A....C.@.....A|
0x340498:   0e 08 c3 41 0e 04 c6 46  0b 00 00 00 40 00 00 00   |...A...F....@...|
0x3404a8:   ac 37 00 00 2c ea ff ff  f7 03 00 00 04 c2 c1 00   |.7..,...........|
0x3404b8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x3404c8:   41 0e 14 83 05 46 0e d0  01 02 a3 0a 0e 14 41 0e   |A....F........A.|
0x3404d8:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 47 0b   |..A...A...A...G.|
0x3404e8:   28 00 00 00 74 40 00 00  18 63 01 00 f8 00 00 00   |(...t@...c......|
0x3404f8:   00 43 0e 50 5d 86 04 48  83 05 48 87 03 4d 85 02   |.C.P]..H..H..M..|
0x340508:   02 8e 0a 0e 04 c5 c7 c6  c3 45 0b 00 3c 00 00 00   |.........E..<...|
0x340518:   a0 40 00 00 ec 63 01 00  e4 00 00 00 00 41 0e 08   |.@...c.......A..|
0x340528:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340538:   05 43 0e 60 02 92 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.....A...A..|
0x340548:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 28 00 00 00   |.A...A...C..(...|
0x340558:   e0 40 00 00 9c 64 01 00  05 02 00 00 00 43 0e 60   |.@...d.......C.`|
0x340568:   48 87 03 48 83 05 54 86  04 4d 85 02 02 a5 0a 0e   |H..H..T..M......|
0x340578:   04 c5 c7 c6 c3 47 0b 00  3c 00 00 00 0c 41 00 00   |.....G..<....A..|
0x340588:   80 66 01 00 dd 00 00 00  00 41 0e 08 85 02 41 0e   |.f.......A....A.|
0x340598:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x3405a8:   02 78 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.x...A...A...A..|
0x3405b8:   c7 41 0e 04 c5 41 0b 00  2c 00 00 00 c8 38 00 00   |.A...A..,....8..|
0x3405c8:   10 ed ff ff 8f 01 00 00  04 f2 c1 00 00 43 0e 60   |.............C.`|
0x3405d8:   48 83 05 48 86 04 57 85  02 87 03 03 20 01 0a 0e   |H..H..W..... ...|
0x3405e8:   04 c5 c7 c6 c3 46 0b 00  20 00 00 00 7c 41 00 00   |.....F.. ...|A..|
0x3405f8:   70 ee ff ff 65 00 00 00  00 43 0e 40 48 83 03 48   |p...e....C.@H..H|
0x340608:   86 02 02 4c 0a 0e 04 c6  c3 41 0b 00 44 00 00 00   |...L.....A..D...|
0x340618:   1c 39 00 00 bc ee ff ff  58 03 00 00 04 1c c2 00   |.9......X.......|
0x340628:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340638:   41 0e 14 83 05 46 0e 80  19 03 78 02 0a 0e 14 41   |A....F....x....A|
0x340648:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x340658:   0b 00 00 00 24 00 00 00  64 39 00 00 d4 f1 ff ff   |....$...d9......|
0x340668:   a0 00 00 00 04 58 c2 00  00 43 0e 40 48 83 03 53   |.....X...C.@H..S|
0x340678:   86 02 69 0a 0e 04 c6 c3  41 0b 00 00 44 00 00 00   |..i.....A...D...|
0x340688:   8c 39 00 00 4c f2 ff ff  9e 01 00 00 04 6a c2 00   |.9..L........j..|
0x340698:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x3406a8:   41 0e 14 83 05 43 0e 80  01 03 7b 01 0a 0e 14 41   |A....C....{....A|
0x3406b8:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x3406c8:   0b 00 00 00 28 00 00 00  58 42 00 00 14 66 01 00   |....(...XB...f..|
0x3406d8:   f8 00 00 00 00 43 0e 50  5d 86 04 48 83 05 48 87   |.....C.P]..H..H.|
0x3406e8:   03 4d 85 02 02 8e 0a 0e  04 c5 c7 c6 c3 45 0b 00   |.M...........E..|
0x3406f8:   3c 00 00 00 84 42 00 00  e8 66 01 00 e4 00 00 00   |<....B...f......|
0x340708:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340718:   41 0e 14 83 05 43 0e 60  02 92 0a 0e 14 41 0e 10   |A....C.`.....A..|
0x340728:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 43 0b 00   |.A...A...A...C..|
0x340738:   28 00 00 00 c4 42 00 00  98 67 01 00 05 02 00 00   |(....B...g......|
0x340748:   00 43 0e 60 48 87 03 48  83 05 54 86 04 4d 85 02   |.C.`H..H..T..M..|
0x340758:   02 a5 0a 0e 04 c5 c7 c6  c3 47 0b 00 3c 00 00 00   |.........G..<...|
0x340768:   f0 42 00 00 7c 69 01 00  dd 00 00 00 00 41 0e 08   |.B..|i.......A..|
0x340778:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340788:   05 43 0e 60 02 78 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.`.x...A...A..|
0x340798:   c6 41 0e 08 c7 41 0e 04  c5 41 0b 00 2c 00 00 00   |.A...A...A..,...|
0x3407a8:   ac 3a 00 00 cc f2 ff ff  fb 02 00 00 04 7d c2 00   |.:...........}..|
0x3407b8:   00 43 0e 80 01 4b 83 05  5e 85 02 4f 87 03 86 04   |.C...K..^..O....|
0x3407c8:   02 d5 0a 0e 04 c5 c7 c6  c3 48 0b 00 28 00 00 00   |.........H..(...|
0x3407d8:   60 43 00 00 ec 69 01 00  95 01 00 00 00 43 0e 50   |`C...i.......C.P|
0x3407e8:   4d 83 05 54 86 04 55 85  02 87 03 03 2f 01 0a 0e   |M..T..U...../...|
0x3407f8:   04 c5 c7 c6 c3 48 0b 00  40 00 00 00 08 3b 00 00   |.....H..@....;..|
0x340808:   60 6b 01 00 64 02 00 00  04 c0 c2 00 00 41 0e 08   |`k..d........A..|
0x340818:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340828:   05 43 0e 50 03 d8 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.P......A...A.|
0x340838:   0c c6 41 0e 08 c7 41 0e  04 c5 45 0b 44 00 00 00   |..A...A...E.D...|
0x340848:   4c 3b 00 00 2c f5 ff ff  c1 04 00 00 04 f0 c2 00   |L;..,...........|
0x340858:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340868:   41 0e 14 83 05 46 0e b0  01 03 a4 03 0a 0e 14 41   |A....F.........A|
0x340878:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 46   |...A...A...A...F|
0x340888:   0b 00 00 00 40 00 00 00  94 3b 00 00 44 6d 01 00   |....@....;..Dm..|
0x340898:   14 02 00 00 04 2c c3 00  00 41 0e 08 85 02 41 0e   |.....,...A....A.|
0x3408a8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x3408b8:   03 28 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.(....A...A...A.|
0x3408c8:   08 c7 41 0e 04 c5 45 0b  3c 00 00 00 5c 44 00 00   |..A...E.<...\D..|
0x3408d8:   20 6f 01 00 7b 01 00 00  00 41 0e 08 85 02 41 0e   | o..{....A....A.|
0x3408e8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x3408f8:   02 e7 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x340908:   c7 41 0e 04 c5 43 0b 00  28 00 00 00 9c 44 00 00   |.A...C..(....D..|
0x340918:   60 70 01 00 f7 02 00 00  00 43 0e 80 01 4b 85 02   |`p.......C...K..|
0x340928:   4b 86 04 64 87 03 4e 83  05 02 f6 0a 0e 04 c5 c7   |K..d..N.........|
0x340938:   c6 c3 47 0b 40 00 00 00  44 3c 00 00 34 73 01 00   |..G.@...D<..4s..|
0x340948:   62 02 00 00 04 68 c3 00  00 41 0e 08 85 02 41 0e   |b....h...A....A.|
0x340958:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 70   |...A....A....C.p|
0x340968:   03 f3 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x340978:   08 c7 41 0e 04 c5 42 0b  3c 00 00 00 0c 45 00 00   |..A...B.<....E..|
0x340988:   60 75 01 00 e5 00 00 00  00 41 0e 08 85 02 41 0e   |`u.......A....A.|
0x340998:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x3409a8:   02 97 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x3409b8:   c7 41 0e 04 c5 46 0b 00  28 00 00 00 4c 45 00 00   |.A...F..(...LE..|
0x3409c8:   10 76 01 00 95 01 00 00  00 43 0e 50 4d 83 05 54   |.v.......C.PM..T|
0x3409d8:   86 04 55 85 02 87 03 03  2f 01 0a 0e 04 c5 c7 c6   |..U...../.......|
0x3409e8:   c3 48 0b 00 34 00 00 00  78 45 00 00 84 77 01 00   |.H..4...xE...w..|
0x3409f8:   dd 00 00 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |.....A....A....A|
0x340a08:   0e 10 83 04 43 0e 30 02  ad 0a 0e 10 41 0e 0c c3   |....C.0.....A...|
0x340a18:   41 0e 08 c6 41 0e 04 c7  42 0b 00 00 44 00 00 00   |A...A...B...D...|
0x340a28:   2c 3d 00 00 1c f8 ff ff  5a 0b 00 00 04 8f c3 00   |,=......Z.......|
0x340a38:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340a48:   41 0e 14 83 05 46 0e a0  03 03 63 07 0a 0e 14 41   |A....F....c....A|
0x340a58:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x340a68:   0b 00 00 00 2c 00 00 00  74 3d 00 00 34 03 00 00   |....,...t=..4...|
0x340a78:   41 01 00 00 04 fc c3 00  00 43 0e 60 4c 83 05 48   |A........C.`L..H|
0x340a88:   87 03 02 5d 85 02 86 04  02 b5 0a 0e 04 c5 c7 c6   |...]............|
0x340a98:   c3 41 0b 00 2c 00 00 00  28 46 00 00 b4 77 01 00   |.A..,...(F...w..|
0x340aa8:   09 01 00 00 00 41 0e 08  83 02 43 0e 30 02 7b 0a   |.....A....C.0.{.|
0x340ab8:   0e 08 41 0e 04 c3 48 0b  68 0a 0e 08 41 0e 04 c3   |..A...H.h...A...|
0x340ac8:   47 0b 00 00 40 00 00 00  d4 3d 00 00 e4 78 01 00   |G...@....=...x..|
0x340ad8:   24 01 00 00 04 10 c4 00  00 41 0e 08 85 02 41 0e   |$........A....A.|
0x340ae8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x340af8:   02 d9 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x340b08:   c7 41 0e 04 c5 41 0b 00  28 00 00 00 9c 46 00 00   |.A...A..(....F..|
0x340b18:   d0 79 01 00 95 01 00 00  00 43 0e 50 4d 83 05 54   |.y.......C.PM..T|
0x340b28:   86 04 55 85 02 87 03 03  2f 01 0a 0e 04 c5 c7 c6   |..U...../.......|
0x340b38:   c3 48 0b 00 40 00 00 00  44 3e 00 00 44 7b 01 00   |.H..@...D>..D{..|
0x340b48:   77 01 00 00 04 2c c4 00  00 41 0e 08 85 02 41 0e   |w....,...A....A.|
0x340b58:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 40   |...A....A....C.@|
0x340b68:   02 e6 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x340b78:   c7 41 0e 04 c5 47 0b 00  40 00 00 00 88 3e 00 00   |.A...G..@....>..|
0x340b88:   80 7c 01 00 37 01 00 00  04 54 c4 00 00 41 0e 08   |.|..7....T...A..|
0x340b98:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340ba8:   05 43 0e 50 02 d2 0a 0e  14 41 0e 10 c3 41 0e 0c   |.C.P.....A...A..|
0x340bb8:   c6 41 0e 08 c7 41 0e 04  c5 43 0b 00 44 00 00 00   |.A...A...C..D...|
0x340bc8:   cc 3e 00 00 7c 7d 01 00  03 08 00 00 04 78 c4 00   |.>..|}.......x..|
0x340bd8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x340be8:   41 0e 14 83 05 46 0e 80  02 03 d2 03 0a 0e 14 41   |A....F.........A|
0x340bf8:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 48   |...A...A...A...H|
0x340c08:   0b 00 00 00 28 00 00 00  98 47 00 00 44 85 01 00   |....(....G..D...|
0x340c18:   e8 01 00 00 00 43 0e 60  4c 86 04 53 83 05 4b 87   |.....C.`L..S..K.|
0x340c28:   03 48 85 02 02 65 0a 0e  04 c5 c7 c6 c3 46 0b 00   |.H...e.......F..|
0x340c38:   44 00 00 00 40 3f 00 00  08 87 01 00 15 05 00 00   |D...@?..........|
0x340c48:   04 98 c4 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x340c58:   0e 10 86 04 41 0e 14 83  05 46 0e d0 01 03 e7 03   |....A....F......|
0x340c68:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x340c78:   0e 04 c5 43 0b 00 00 00  44 00 00 00 88 3f 00 00   |...C....D....?..|
0x340c88:   70 02 00 00 19 09 00 00  04 c0 c4 00 00 41 0e 08   |p............A..|
0x340c98:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340ca8:   05 46 0e 80 02 03 57 06  0a 0e 14 41 0e 10 c3 41   |.F....W....A...A|
0x340cb8:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 43 0b 00 00 00   |...A...A...C....|
0x340cc8:   44 00 00 00 d0 3f 00 00  98 8b 01 00 2c 0e 00 00   |D....?......,...|
0x340cd8:   04 0c c5 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x340ce8:   0e 10 86 04 41 0e 14 83  05 46 0e e0 01 03 2f 0b   |....A....F..../.|
0x340cf8:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x340d08:   0e 04 c5 43 0b 00 00 00  44 00 00 00 18 40 00 00   |...C....D....@..|
0x340d18:   00 0b 00 00 2c 0a 00 00  04 98 c5 00 00 41 0e 08   |....,........A..|
0x340d28:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x340d38:   05 46 0e d0 02 03 4d 03  0a 0e 14 41 0e 10 c3 41   |.F....M....A...A|
0x340d48:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 45 0b 00 00 00   |...A...A...E....|
0x340d58:   38 00 00 00 60 40 00 00  e8 14 00 00 1c 05 00 00   |8...`@..........|
0x340d68:   04 7c c6 00 00 41 0e 08  87 02 41 0e 0c 86 03 41   |.|...A....A....A|
0x340d78:   0e 10 83 04 46 0e d0 01  03 0d 03 0a 0e 10 41 0e   |....F.........A.|
0x340d88:   0c c3 41 0e 08 c6 41 0e  04 c7 47 0b 2c 00 00 00   |..A...A...G.,...|
0x340d98:   9c 40 00 00 cc 19 00 00  cd 02 00 00 04 b9 c6 00   |.@..............|
0x340da8:   00 46 0e a0 01 56 87 03  4e 83 05 4e 85 02 58 86   |.F...V..N..N..X.|
0x340db8:   04 02 7a 0a 0e 04 c5 c7  c6 c3 46 0b 30 00 00 00   |..z.......F.0...|
0x340dc8:   cc 40 00 00 6c 1c 00 00  9b 02 00 00 04 f0 c6 00   |.@..l...........|
0x340dd8:   00 46 0e a0 01 4b 86 04  4b 83 05 02 4d 85 02 87   |.F...K..K...M...|
0x340de8:   03 03 42 01 0a 0e 04 c5  c7 c6 c3 45 0b 00 00 00   |..B........E....|
0x340df8:   2c 00 00 00 00 41 00 00  d8 1e 00 00 1f 0e 00 00   |,....A..........|
0x340e08:   04 28 c7 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.(...A....A....A|
0x340e18:   0e 10 86 04 41 0e 14 83  05 46 0e b0 03 00 00 00   |....A....F......|
0x340e28:   2c 00 00 00 30 41 00 00  c8 2c 00 00 95 0a 00 00   |,...0A...,......|
0x340e38:   04 f8 c7 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x340e48:   0e 10 86 04 41 0e 14 83  05 46 0e c0 02 00 00 00   |....A....F......|
0x340e58:   34 00 00 00 e4 49 00 00  38 98 01 00 63 00 00 00   |4....I..8...c...|
0x340e68:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x340e78:   43 0e 30 02 54 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.T...A...A...|
0x340e88:   41 0e 04 c7 41 0b 00 00  34 00 00 00 1c 4a 00 00   |A...A...4....J..|
0x340e98:   70 98 01 00 64 00 00 00  00 41 0e 08 87 02 41 0e   |p...d....A....A.|
0x340ea8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 55 0a 0e 10   |...A....C.0.U...|
0x340eb8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x340ec8:   44 00 00 00 54 4a 00 00  a8 98 01 00 89 00 00 00   |D...TJ..........|
0x340ed8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x340ee8:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x340ef8:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x340f08:   08 c6 41 0e 04 c7 41 0b  2c 00 00 00 9c 4a 00 00   |..A...A.,....J..|
0x340f18:   f0 98 01 00 65 00 00 00  00 41 0e 08 83 02 43 0e   |....e....A....C.|
0x340f28:   30 7e 0a 0e 08 41 0e 04  c3 45 0b 50 0a 0e 08 41   |0~...A...E.P...A|
0x340f38:   0e 04 c3 41 0b 00 00 00  34 00 00 00 cc 4a 00 00   |...A....4....J..|
0x340f48:   30 99 01 00 63 00 00 00  00 41 0e 08 87 02 41 0e   |0...c....A....A.|
0x340f58:   0c 86 03 41 0e 10 83 04  43 0e 30 02 54 0a 0e 10   |...A....C.0.T...|
0x340f68:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x340f78:   34 00 00 00 04 4b 00 00  68 99 01 00 64 00 00 00   |4....K..h...d...|
0x340f88:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x340f98:   43 0e 30 02 55 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.U...A...A...|
0x340fa8:   41 0e 04 c7 41 0b 00 00  44 00 00 00 3c 4b 00 00   |A...A...D...<K..|
0x340fb8:   a0 99 01 00 89 00 00 00  00 41 0e 08 87 02 41 0e   |.........A....A.|
0x340fc8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 61 0a 0e 10   |...A....C.0.a...|
0x340fd8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x340fe8:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x340ff8:   2c 00 00 00 84 4b 00 00  e8 99 01 00 65 00 00 00   |,....K......e...|
0x341008:   00 41 0e 08 83 02 43 0e  30 7e 0a 0e 08 41 0e 04   |.A....C.0~...A..|
0x341018:   c3 45 0b 50 0a 0e 08 41  0e 04 c3 41 0b 00 00 00   |.E.P...A...A....|
0x341028:   30 00 00 00 30 43 00 00  28 9a 01 00 80 00 00 00   |0...0C..(.......|
0x341038:   04 cc c8 00 00 41 0e 08  83 02 43 0e 40 7e 0a 0e   |.....A....C.@~..|
0x341048:   08 41 0e 04 c3 45 0b 50  0a 0e 08 41 0e 04 c3 41   |.A...E.P...A...A|
0x341058:   0b 00 00 00 30 00 00 00  64 43 00 00 74 9a 01 00   |....0...dC..t...|
0x341068:   80 00 00 00 04 dc c8 00  00 41 0e 08 83 02 43 0e   |.........A....C.|
0x341078:   40 7e 0a 0e 08 41 0e 04  c3 45 0b 50 0a 0e 08 41   |@~...A...E.P...A|
0x341088:   0e 04 c3 41 0b 00 00 00  34 00 00 00 1c 4c 00 00   |...A....4....L..|
0x341098:   c0 9a 01 00 54 00 00 00  00 41 0e 08 87 02 41 0e   |....T....A....A.|
0x3410a8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 45 0a 0e 10   |...A....C.0.E...|
0x3410b8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x3410c8:   44 00 00 00 54 4c 00 00  e8 9a 01 00 89 00 00 00   |D...TL..........|
0x3410d8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x3410e8:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x3410f8:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x341108:   08 c6 41 0e 04 c7 41 0b  44 00 00 00 9c 4c 00 00   |..A...A.D....L..|
0x341118:   30 9b 01 00 89 00 00 00  00 41 0e 08 87 02 41 0e   |0........A....A.|
0x341128:   0c 86 03 41 0e 10 83 04  43 0e 30 02 61 0a 0e 10   |...A....C.0.a...|
0x341138:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x341148:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x341158:   34 00 00 00 e4 4c 00 00  78 9b 01 00 54 00 00 00   |4....L..x...T...|
0x341168:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x341178:   43 0e 30 02 45 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.E...A...A...|
0x341188:   41 0e 04 c7 41 0b 00 00  24 00 00 00 1c 4d 00 00   |A...A...$....M..|
0x341198:   a0 9b 01 00 af 00 00 00  00 43 0e 30 4a 86 03 54   |.........C.0J..T|
0x3411a8:   83 04 57 87 02 02 64 0a  0e 04 c7 c6 c3 44 0b 00   |..W...d......D..|
0x3411b8:   24 00 00 00 c0 44 00 00  28 9c 01 00 b4 00 00 00   |$....D..(.......|
0x3411c8:   04 ec c8 00 00 41 0e 08  83 02 43 0e 30 02 69 0a   |.....A....C.0.i.|
0x3411d8:   0e 08 41 0e 04 c3 43 0b  24 00 00 00 6c 4d 00 00   |..A...C.$...lM..|
0x3411e8:   c0 9c 01 00 14 01 00 00  00 43 0e 40 59 87 02 4c   |.........C.@Y..L|
0x3411f8:   83 04 4b 86 03 02 82 0a  0e 04 c7 c6 c3 43 0b 00   |..K..........C..|
0x341208:   40 00 00 00 10 45 00 00  08 9e 01 00 26 01 00 00   |@....E......&...|
0x341218:   04 04 c9 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341228:   0e 10 86 04 41 0e 14 83  05 43 0e 50 02 e9 0a 0e   |....A....C.P....|
0x341238:   14 41 0e 10 c3 41 0e 0c  c6 41 0e 08 c7 41 0e 04   |.A...A...A...A..|
0x341248:   c5 41 0b 00 40 00 00 00  54 45 00 00 f4 9e 01 00   |.A..@...TE......|
0x341258:   d4 00 00 00 04 24 c9 00  00 41 0e 08 85 02 41 0e   |.....$...A....A.|
0x341268:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 40   |...A....A....C.@|
0x341278:   02 9b 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x341288:   c7 41 0e 04 c5 41 0b 00  34 00 00 00 1c 4e 00 00   |.A...A..4....N..|
0x341298:   90 9f 01 00 63 00 00 00  00 41 0e 08 87 02 41 0e   |....c....A....A.|
0x3412a8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 54 0a 0e 10   |...A....C.0.T...|
0x3412b8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 41 0b 00 00   |A...A...A...A...|
0x3412c8:   44 00 00 00 54 4e 00 00  c8 9f 01 00 89 00 00 00   |D...TN..........|
0x3412d8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x3412e8:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x3412f8:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x341308:   08 c6 41 0e 04 c7 41 0b  44 00 00 00 9c 4e 00 00   |..A...A.D....N..|
0x341318:   10 a0 01 00 89 00 00 00  00 41 0e 08 87 02 41 0e   |.........A....A.|
0x341328:   0c 86 03 41 0e 10 83 04  43 0e 30 02 61 0a 0e 10   |...A....C.0.a...|
0x341338:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x341348:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x341358:   30 00 00 00 60 46 00 00  58 a0 01 00 80 00 00 00   |0...`F..X.......|
0x341368:   04 40 c9 00 00 41 0e 08  83 02 43 0e 40 7e 0a 0e   |.@...A....C.@~..|
0x341378:   08 41 0e 04 c3 45 0b 50  0a 0e 08 41 0e 04 c3 41   |.A...E.P...A...A|
0x341388:   0b 00 00 00 40 00 00 00  94 46 00 00 a4 a0 01 00   |....@....F......|
0x341398:   58 01 00 00 04 50 c9 00  00 41 0e 08 85 02 41 0e   |X....P...A....A.|
0x3413a8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x3413b8:   03 1b 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x3413c8:   08 c7 41 0e 04 c5 41 0b  40 00 00 00 d8 46 00 00   |..A...A.@....F..|
0x3413d8:   c0 a1 01 00 92 01 00 00  04 70 c9 00 00 41 0e 08   |.........p...A..|
0x3413e8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x3413f8:   05 43 0e 50 03 39 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.P.9....A...A.|
0x341408:   0c c6 41 0e 08 c7 41 0e  04 c5 41 0b 40 00 00 00   |..A...A...A.@...|
0x341418:   1c 47 00 00 1c a3 01 00  2b 02 00 00 04 8c c9 00   |.G......+.......|
0x341428:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x341438:   41 0e 14 83 05 43 0e 60  03 76 01 0a 0e 14 41 0e   |A....C.`.v....A.|
0x341448:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x341458:   40 00 00 00 60 47 00 00  08 a5 01 00 58 01 00 00   |@...`G......X...|
0x341468:   04 dc c9 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341478:   0e 10 86 04 41 0e 14 83  05 43 0e 50 03 1b 01 0a   |....A....C.P....|
0x341488:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x341498:   04 c5 41 0b 40 00 00 00  a4 47 00 00 24 a6 01 00   |..A.@....G..$...|
0x3414a8:   92 01 00 00 04 fc c9 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x3414b8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x3414c8:   03 39 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |.9....A...A...A.|
0x3414d8:   08 c7 41 0e 04 c5 41 0b  40 00 00 00 e8 47 00 00   |..A...A.@....G..|
0x3414e8:   80 a7 01 00 2b 02 00 00  04 18 ca 00 00 41 0e 08   |....+........A..|
0x3414f8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341508:   05 43 0e 60 03 76 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.`.v....A...A.|
0x341518:   0c c6 41 0e 08 c7 41 0e  04 c5 41 0b 30 00 00 00   |..A...A...A.0...|
0x341528:   2c 48 00 00 6c a9 01 00  82 01 00 00 04 68 ca 00   |,H..l........h..|
0x341538:   00 41 0e 08 86 02 41 0e  0c 83 03 43 0e 40 02 e6   |.A....A....C.@..|
0x341548:   0a 0e 0c 41 0e 08 c3 41  0e 04 c6 41 0b 00 00 00   |...A...A...A....|
0x341558:   34 00 00 00 e4 50 00 00  c8 aa 01 00 63 00 00 00   |4....P......c...|
0x341568:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x341578:   43 0e 30 02 54 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.T...A...A...|
0x341588:   41 0e 04 c7 41 0b 00 00  44 00 00 00 1c 51 00 00   |A...A...D....Q..|
0x341598:   00 ab 01 00 89 00 00 00  00 41 0e 08 87 02 41 0e   |.........A....A.|
0x3415a8:   0c 86 03 41 0e 10 83 04  43 0e 30 02 61 0a 0e 10   |...A....C.0.a...|
0x3415b8:   41 0e 0c c3 41 0e 08 c6  41 0e 04 c7 46 0b 50 0a   |A...A...A...F.P.|
0x3415c8:   0e 10 41 0e 0c c3 41 0e  08 c6 41 0e 04 c7 41 0b   |..A...A...A...A.|
0x3415d8:   44 00 00 00 64 51 00 00  48 ab 01 00 89 00 00 00   |D...dQ..H.......|
0x3415e8:   00 41 0e 08 87 02 41 0e  0c 86 03 41 0e 10 83 04   |.A....A....A....|
0x3415f8:   43 0e 30 02 61 0a 0e 10  41 0e 0c c3 41 0e 08 c6   |C.0.a...A...A...|
0x341608:   41 0e 04 c7 46 0b 50 0a  0e 10 41 0e 0c c3 41 0e   |A...F.P...A...A.|
0x341618:   08 c6 41 0e 04 c7 41 0b  30 00 00 00 28 49 00 00   |..A...A.0...(I..|
0x341628:   90 ab 01 00 80 00 00 00  04 ac ca 00 00 41 0e 08   |.............A..|
0x341638:   83 02 43 0e 40 7e 0a 0e  08 41 0e 04 c3 45 0b 50   |..C.@~...A...E.P|
0x341648:   0a 0e 08 41 0e 04 c3 41  0b 00 00 00 28 00 00 00   |...A...A....(...|
0x341658:   e0 51 00 00 dc ab 01 00  ef 00 00 00 00 43 0e 50   |.Q...........C.P|
0x341668:   5d 83 05 48 86 04 48 87  03 4d 85 02 02 8a 0a 0e   |]..H..H..M......|
0x341678:   04 c5 c7 c6 c3 49 0b 00  3c 00 00 00 0c 52 00 00   |.....I..<....R..|
0x341688:   a0 ac 01 00 ea 00 00 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x341698:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x3416a8:   02 84 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x3416b8:   c7 41 0e 04 c5 49 0b 00  28 00 00 00 4c 52 00 00   |.A...I..(...LR..|
0x3416c8:   50 ad 01 00 ed 01 00 00  00 43 0e 60 48 87 03 48   |P........C.`H..H|
0x3416d8:   83 05 54 86 04 4d 85 02  02 99 0a 0e 04 c5 c7 c6   |..T..M..........|
0x3416e8:   c3 43 0b 00 44 00 00 00  f4 49 00 00 14 af 01 00   |.C..D....I......|
0x3416f8:   2f 05 00 00 04 bc ca 00  00 41 0e 08 85 02 41 0e   |/........A....A.|
0x341708:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 90   |...A....A....C..|
0x341718:   01 03 08 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x341728:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 40 00 00 00   |...A...A....@...|
0x341738:   3c 4a 00 00 4c b4 01 00  58 01 00 00 04 d8 ca 00   |<J..L...X.......|
0x341748:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x341758:   41 0e 14 83 05 43 0e 50  03 1b 01 0a 0e 14 41 0e   |A....C.P......A.|
0x341768:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 41 0b   |..A...A...A...A.|
0x341778:   40 00 00 00 80 4a 00 00  68 b5 01 00 6f 02 00 00   |@....J..h...o...|
0x341788:   04 f8 ca 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341798:   0e 10 86 04 41 0e 14 83  05 43 0e 60 03 e0 01 0a   |....A....C.`....|
0x3417a8:   0e 14 41 0e 10 c3 41 0e  0c c6 41 0e 08 c7 41 0e   |..A...A...A...A.|
0x3417b8:   04 c5 41 0b 2c 00 00 00  c4 4a 00 00 94 b7 01 00   |..A.,....J......|
0x3417c8:   c2 01 00 00 04 28 cb 00  00 43 0e 50 48 83 05 58   |.....(...C.PH..X|
0x3417d8:   87 03 86 04 4e 85 02 02  4d 0a 0e 04 c5 c7 c6 c3   |....N...M.......|
0x3417e8:   42 0b 00 00 28 00 00 00  78 53 00 00 34 b9 01 00   |B...(...xS..4...|
0x3417f8:   ef 00 00 00 00 43 0e 50  5d 83 05 48 86 04 48 87   |.....C.P]..H..H.|
0x341808:   03 4d 85 02 02 8a 0a 0e  04 c5 c7 c6 c3 49 0b 00   |.M...........I..|
0x341818:   3c 00 00 00 a4 53 00 00  f8 b9 01 00 ea 00 00 00   |<....S..........|
0x341828:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x341838:   41 0e 14 83 05 43 0e 60  02 84 0a 0e 14 41 0e 10   |A....C.`.....A..|
0x341848:   c3 41 0e 0c c6 41 0e 08  c7 41 0e 04 c5 49 0b 00   |.A...A...A...I..|
0x341858:   28 00 00 00 e4 53 00 00  a8 ba 01 00 ed 01 00 00   |(....S..........|
0x341868:   00 43 0e 60 48 87 03 48  83 05 54 86 04 4d 85 02   |.C.`H..H..T..M..|
0x341878:   02 99 0a 0e 04 c5 c7 c6  c3 43 0b 00 44 00 00 00   |.........C..D...|
0x341888:   8c 4b 00 00 6c bc 01 00  99 04 00 00 04 58 cb 00   |.K..l........X..|
0x341898:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x3418a8:   41 0e 14 83 05 43 0e 90  01 03 cc 01 0a 0e 14 41   |A....C.........A|
0x3418b8:   0e 10 c3 41 0e 0c c6 41  0e 08 c7 41 0e 04 c5 41   |...A...A...A...A|
0x3418c8:   0b 00 00 00 40 00 00 00  d4 4b 00 00 c4 c0 01 00   |....@....K......|
0x3418d8:   58 01 00 00 04 74 cb 00  00 41 0e 08 85 02 41 0e   |X....t...A....A.|
0x3418e8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 50   |...A....A....C.P|
0x3418f8:   03 1b 01 0a 0e 14 41 0e  10 c3 41 0e 0c c6 41 0e   |......A...A...A.|
0x341908:   08 c7 41 0e 04 c5 41 0b  40 00 00 00 18 4c 00 00   |..A...A.@....L..|
0x341918:   e0 c1 01 00 6f 02 00 00  04 94 cb 00 00 41 0e 08   |....o........A..|
0x341928:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341938:   05 43 0e 60 03 e0 01 0a  0e 14 41 0e 10 c3 41 0e   |.C.`......A...A.|
0x341948:   0c c6 41 0e 08 c7 41 0e  04 c5 41 0b 2c 00 00 00   |..A...A...A.,...|
0x341958:   5c 4c 00 00 0c c4 01 00  c2 01 00 00 04 c4 cb 00   |\L..............|
0x341968:   00 43 0e 50 48 83 05 58  87 03 86 04 4e 85 02 02   |.C.PH..X....N...|
0x341978:   4d 0a 0e 04 c5 c7 c6 c3  42 0b 00 00 28 00 00 00   |M.......B...(...|
0x341988:   10 55 00 00 ac c5 01 00  ef 00 00 00 00 43 0e 50   |.U...........C.P|
0x341998:   5d 83 05 48 86 04 48 87  03 4d 85 02 02 8a 0a 0e   |]..H..H..M......|
0x3419a8:   04 c5 c7 c6 c3 49 0b 00  3c 00 00 00 3c 55 00 00   |.....I..<...<U..|
0x3419b8:   70 c6 01 00 ea 00 00 00  00 41 0e 08 85 02 41 0e   |p........A....A.|
0x3419c8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x3419d8:   02 84 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x3419e8:   c7 41 0e 04 c5 49 0b 00  28 00 00 00 7c 55 00 00   |.A...I..(...|U..|
0x3419f8:   20 c7 01 00 ed 01 00 00  00 43 0e 60 48 87 03 48   | ........C.`H..H|
0x341a08:   83 05 54 86 04 4d 85 02  02 99 0a 0e 04 c5 c7 c6   |..T..M..........|
0x341a18:   c3 43 0b 00 44 00 00 00  24 4d 00 00 e4 c8 01 00   |.C..D...$M......|
0x341a28:   99 04 00 00 04 f4 cb 00  00 41 0e 08 85 02 41 0e   |.........A....A.|
0x341a38:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 90   |...A....A....C..|
0x341a48:   01 03 cc 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x341a58:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 2c 00 00 00   |...A...A....,...|
0x341a68:   6c 4d 00 00 3c cd 01 00  42 02 00 00 04 10 cc 00   |lM..<...B.......|
0x341a78:   00 43 0e 60 48 83 05 58  87 03 86 04 4e 85 02 02   |.C.`H..X....N...|
0x341a88:   4d 0a 0e 04 c5 c7 c6 c3  42 0b 00 00 28 00 00 00   |M.......B...(...|
0x341a98:   20 56 00 00 5c cf 01 00  ef 00 00 00 00 43 0e 50   | V..\........C.P|
0x341aa8:   5d 83 05 48 86 04 48 87  03 4d 85 02 02 8a 0a 0e   |]..H..H..M......|
0x341ab8:   04 c5 c7 c6 c3 49 0b 00  3c 00 00 00 4c 56 00 00   |.....I..<...LV..|
0x341ac8:   20 d0 01 00 ea 00 00 00  00 41 0e 08 85 02 41 0e   | ........A....A.|
0x341ad8:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 60   |...A....A....C.`|
0x341ae8:   02 84 0a 0e 14 41 0e 10  c3 41 0e 0c c6 41 0e 08   |.....A...A...A..|
0x341af8:   c7 41 0e 04 c5 49 0b 00  28 00 00 00 8c 56 00 00   |.A...I..(....V..|
0x341b08:   d0 d0 01 00 ed 01 00 00  00 43 0e 60 48 87 03 48   |.........C.`H..H|
0x341b18:   83 05 54 86 04 4d 85 02  02 99 0a 0e 04 c5 c7 c6   |..T..M..........|
0x341b28:   c3 43 0b 00 44 00 00 00  34 4e 00 00 94 d2 01 00   |.C..D...4N......|
0x341b38:   99 04 00 00 04 50 cc 00  00 41 0e 08 85 02 41 0e   |.....P...A....A.|
0x341b48:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 43 0e 90   |...A....A....C..|
0x341b58:   01 03 cc 01 0a 0e 14 41  0e 10 c3 41 0e 0c c6 41   |.......A...A...A|
0x341b68:   0e 08 c7 41 0e 04 c5 41  0b 00 00 00 2c 00 00 00   |...A...A....,...|
0x341b78:   7c 4e 00 00 ec d6 01 00  42 02 00 00 04 6c cc 00   ||N......B....l..|
0x341b88:   00 43 0e 60 48 83 05 58  87 03 86 04 4e 85 02 02   |.C.`H..X....N...|
0x341b98:   4d 0a 0e 04 c5 c7 c6 c3  42 0b 00 00 2c 00 00 00   |M.......B...,...|
0x341ba8:   ac 4e 00 00 0c d9 01 00  8f 01 00 00 04 ac cc 00   |.N..............|
0x341bb8:   00 43 0e 50 48 85 02 48  83 05 5d 87 03 86 04 02   |.C.PH..H..].....|
0x341bc8:   c0 0a 0e 04 c5 c7 c6 c3  48 0b 00 00 28 00 00 00   |........H...(...|
0x341bd8:   60 57 00 00 bc da 01 00  bd 02 00 00 00 43 0e 50   |`W...........C.P|
0x341be8:   48 86 04 58 87 03 83 05  51 85 02 03 6b 01 0a 0e   |H..X....Q...k...|
0x341bf8:   04 c5 c7 c6 c3 41 0b 00  44 00 00 00 08 4f 00 00   |.....A..D....O..|
0x341c08:   a0 dd 01 00 be 02 00 00  04 d4 cc 00 00 41 0e 08   |.............A..|
0x341c18:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341c28:   05 43 0e 80 01 03 c4 01  0a 0e 14 41 0e 10 c3 41   |.C.........A...A|
0x341c38:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 41 0b 00 00 00   |...A...A...A....|
0x341c48:   44 00 00 00 50 4f 00 00  18 e0 01 00 be 02 00 00   |D...PO..........|
0x341c58:   04 04 cd 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341c68:   0e 10 86 04 41 0e 14 83  05 43 0e 80 01 03 c4 01   |....A....C......|
0x341c78:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x341c88:   0e 04 c5 41 0b 00 00 00  44 00 00 00 98 4f 00 00   |...A....D....O..|
0x341c98:   90 e2 01 00 12 04 00 00  04 34 cd 00 00 41 0e 08   |.........4...A..|
0x341ca8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341cb8:   05 43 0e 90 01 03 0d 02  0a 0e 14 41 0e 10 c3 41   |.C.........A...A|
0x341cc8:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 48 0b 00 00 00   |...A...A...H....|
0x341cd8:   44 00 00 00 e0 4f 00 00  b8 e6 01 00 89 04 00 00   |D....O..........|
0x341ce8:   04 75 cd 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.u...A....A....A|
0x341cf8:   0e 10 86 04 41 0e 14 83  05 46 0e a0 01 03 05 02   |....A....F......|
0x341d08:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x341d18:   0e 04 c5 45 0b 00 00 00  44 00 00 00 28 50 00 00   |...E....D...(P..|
0x341d28:   50 eb 01 00 fb 0b 00 00  04 c4 cd 00 00 41 0e 08   |P............A..|
0x341d38:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341d48:   05 46 0e b0 03 03 77 08  0a 0e 14 41 0e 10 c3 41   |.F....w....A...A|
0x341d58:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 43 0b 00 00 00   |...A...A...C....|
0x341d68:   28 00 00 00 70 50 00 00  58 f7 01 00 f1 00 00 00   |(...pP..X.......|
0x341d78:   04 7c ce 00 00 43 0e 30  59 83 04 48 87 02 4c 86   |.|...C.0Y..H..L.|
0x341d88:   03 02 68 0a 0e 04 c7 c6  c3 48 0b 00 40 00 00 00   |..h......H..@...|
0x341d98:   9c 50 00 00 fc 27 00 00  1e 05 00 00 04 8e ce 00   |.P...'..........|
0x341da8:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x341db8:   41 0e 14 83 05 46 0e 90  02 02 eb 0a 0e 14 41 0e   |A....F........A.|
0x341dc8:   10 c3 41 0e 0c c6 41 0e  08 c7 41 0e 04 c5 47 0b   |..A...A...A...G.|
0x341dd8:   44 00 00 00 e0 50 00 00  e8 f7 01 00 3e 08 00 00   |D....P......>...|
0x341de8:   04 04 cf 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341df8:   0e 10 86 04 41 0e 14 83  05 46 0e 80 03 03 80 04   |....A....F......|
0x341e08:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x341e18:   0e 04 c5 42 0b 00 00 00  2c 00 00 00 28 51 00 00   |...B....,...(Q..|
0x341e28:   90 2c 00 00 af 13 00 00  04 80 cf 00 00 41 0e 08   |.,...........A..|
0x341e38:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341e48:   05 46 0e c0 86 04 00 00  44 00 00 00 58 51 00 00   |.F......D...XQ..|
0x341e58:   b0 ff 01 00 e5 08 00 00  04 7c d0 00 00 41 0e 08   |.........|...A..|
0x341e68:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341e78:   05 46 0e 80 03 03 b4 04  0a 0e 14 41 0e 10 c3 41   |.F.........A...A|
0x341e88:   0e 0c c6 41 0e 08 c7 41  0e 04 c5 46 0b 00 00 00   |...A...A...F....|
0x341e98:   44 00 00 00 a0 51 00 00  58 08 02 00 59 0b 00 00   |D....Q..X...Y...|
0x341ea8:   04 fc d0 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |.....A....A....A|
0x341eb8:   0e 10 86 04 41 0e 14 83  05 46 0e a0 03 03 e9 07   |....A....F......|
0x341ec8:   0a 0e 14 41 0e 10 c3 41  0e 0c c6 41 0e 08 c7 41   |...A...A...A...A|
0x341ed8:   0e 04 c5 43 0b 00 00 00  2c 00 00 00 e8 51 00 00   |...C....,....Q..|
0x341ee8:   80 3f 00 00 3f 04 00 00  04 98 d1 00 00 41 0e 08   |.?..?........A..|
0x341ef8:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x341f08:   05 43 0e 80 01 00 00 00  28 00 00 00 18 52 00 00   |.C......(....R..|
0x341f18:   90 13 02 00 24 09 00 00  04 d2 d1 00 00 41 0e 08   |....$........A..|
0x341f28:   83 02 43 0e 60 03 be 07  0a 0e 08 41 0e 04 c3 41   |..C.`......A...A|
0x341f38:   0b 00 00 00 ??                                     |....?           |

source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_38020_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32*)*, i32 (i32, i32)* }
%vtable_380d8_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_38138_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38178_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_381d8_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38200_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%vtable_38218_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38278_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)*, i32 (i32)* }
%vtable_382d8_type = type { i32 (i32*)*, i32 (i32)* }
%vtable_38320_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38338_type = type { i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%vtable_38350_type = type { i32 (i32*)*, i32 (i32)*, i32 ()* }
%"vector<unsignedchar,std::allocator<unsignedchar>>" = type { i32 }
%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" = type { i32 }
%CScript = type { i32 }
%"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>.1" = type { i32 }
%"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>" = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.23" = type { i32 }
%uint256 = type { i32 }
%CScript.22 = type { i32 }
%uint256.24 = type { i32 }
%uint256.25 = type { i32 }
%uint256.26 = type { i32 }
%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5" = type { i32 }
%CScript.27 = type { i32 }
%CScript.29 = type { i32 }
%CScript.28 = type { i32 }
%CScript.31 = type { i32 }
%CScript.30 = type { i32 }
%"vector<unsignedchar,std::allocator<unsignedchar>>.11" = type { i32 }
%CScript.33 = type { i32 }
%CScript.32 = type { i32 }
%CScriptID = type { i32 }

@cf = internal unnamed_addr global i1 false
@pf = internal unnamed_addr global i1 false
@az = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@tf = internal unnamed_addr global i1 false
@if = internal unnamed_addr global i1 false
@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@nt = internal unnamed_addr global i1 false
@st0 = internal unnamed_addr global x86_fp80 0xK00000000000000000000
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external local_unnamed_addr global i32
@1 = external local_unnamed_addr global i32
@2 = external local_unnamed_addr global i32
@3 = external local_unnamed_addr global i32
@4 = external local_unnamed_addr global i32
@5 = external local_unnamed_addr global i32
@6 = external local_unnamed_addr global i32
@7 = external local_unnamed_addr global i32
@8 = external local_unnamed_addr global i32
@global_var_b648.2055 = constant i32 824
@global_var_b613.2056 = constant [12 x i8] c"nonstandard\00"
@global_var_b61f.2057 = constant [7 x i8] c"pubkey\00"
@global_var_b626.2058 = constant [11 x i8] c"pubkeyhash\00"
@global_var_b631.2059 = constant [11 x i8] c"scripthash\00"
@global_var_b63c.2060 = constant [9 x i8] c"multisig\00"
@global_var_ba60.2061 = constant i32 929
@global_var_b65e.2063 = constant [13 x i8] c"OP_PUSHDATA1\00"
@global_var_b66b.2064 = constant [13 x i8] c"OP_PUSHDATA2\00"
@global_var_b678.2065 = constant [13 x i8] c"OP_PUSHDATA4\00"
@global_var_b685.2066 = constant [3 x i8] c"-1\00"
@global_var_b688.2067 = constant [12 x i8] c"OP_RESERVED\00"
@global_var_b694.2068 = constant i32 3276849
@global_var_b696.2069 = constant i32 3342386
@global_var_b698.2070 = constant i32 3407923
@global_var_b69a.2071 = constant i32 3473460
@global_var_b69c.2072 = constant i32 3538997
@global_var_b69e.2073 = constant i32 3604534
@global_var_b6a0.2074 = constant i32 3670071
@global_var_b6a2.2075 = constant i32 3735608
@global_var_b6a4.2076 = constant i32 808517689
@global_var_b6a6.2077 = constant [3 x i8] c"10\00"
@global_var_b6a9.2078 = constant [3 x i8] c"11\00"
@global_var_b6ac.2079 = constant [3 x i8] c"12\00"
@global_var_b6af.2080 = constant [3 x i8] c"13\00"
@global_var_b6b2.2081 = constant [3 x i8] c"14\00"
@global_var_b6b5.2082 = constant [3 x i8] c"15\00"
@global_var_b6b8.2083 = constant [3 x i8] c"16\00"
@global_var_b6bb.2084 = constant [7 x i8] c"OP_NOP\00"
@global_var_b6c2.2085 = constant [7 x i8] c"OP_VER\00"
@global_var_b6c9.2086 = constant [6 x i8] c"OP_IF\00"
@global_var_b6cf.2087 = constant [9 x i8] c"OP_NOTIF\00"
@global_var_b6d8.2088 = constant [9 x i8] c"OP_VERIF\00"
@global_var_b6e1.2089 = constant [12 x i8] c"OP_VERNOTIF\00"
@global_var_b6ed.2090 = constant [8 x i8] c"OP_ELSE\00"
@global_var_b6f5.2091 = constant [9 x i8] c"OP_ENDIF\00"
@global_var_b6fe.2092 = constant [10 x i8] c"OP_VERIFY\00"
@global_var_b708.2093 = constant [10 x i8] c"OP_RETURN\00"
@global_var_b712.2094 = constant [14 x i8] c"OP_TOALTSTACK\00"
@global_var_b720.2095 = constant [16 x i8] c"OP_FROMALTSTACK\00"
@global_var_b730.2096 = constant [9 x i8] c"OP_2DROP\00"
@global_var_b739.2097 = constant [8 x i8] c"OP_2DUP\00"
@global_var_b741.2098 = constant [8 x i8] c"OP_3DUP\00"
@global_var_b749.2099 = constant [9 x i8] c"OP_2OVER\00"
@global_var_b752.2100 = constant [8 x i8] c"OP_2ROT\00"
@global_var_b75a.2101 = constant [9 x i8] c"OP_2SWAP\00"
@global_var_b763.2102 = constant [9 x i8] c"OP_IFDUP\00"
@global_var_b76c.2103 = constant [9 x i8] c"OP_DEPTH\00"
@global_var_b775.2104 = constant [8 x i8] c"OP_DROP\00"
@global_var_b77d.2105 = constant [7 x i8] c"OP_DUP\00"
@global_var_b784.2106 = constant [7 x i8] c"OP_NIP\00"
@global_var_b78b.2107 = constant [8 x i8] c"OP_OVER\00"
@global_var_b793.2108 = constant [8 x i8] c"OP_PICK\00"
@global_var_b79b.2109 = constant [8 x i8] c"OP_ROLL\00"
@global_var_b7a3.2110 = constant [7 x i8] c"OP_ROT\00"
@global_var_b7aa.2111 = constant [8 x i8] c"OP_SWAP\00"
@global_var_b7b2.2112 = constant [8 x i8] c"OP_TUCK\00"
@global_var_b7ba.2113 = constant [7 x i8] c"OP_CAT\00"
@global_var_b7c1.2114 = constant [10 x i8] c"OP_SUBSTR\00"
@global_var_b7cb.2115 = constant [8 x i8] c"OP_LEFT\00"
@global_var_b7d3.2116 = constant [9 x i8] c"OP_RIGHT\00"
@global_var_b7dc.2117 = constant [8 x i8] c"OP_SIZE\00"
@global_var_b7e4.2118 = constant [10 x i8] c"OP_INVERT\00"
@global_var_b7ee.2119 = constant [7 x i8] c"OP_AND\00"
@global_var_b7f5.2120 = constant [6 x i8] c"OP_OR\00"
@global_var_b7fb.2121 = constant [7 x i8] c"OP_XOR\00"
@global_var_b802.2122 = constant [9 x i8] c"OP_EQUAL\00"
@global_var_b80b.2123 = constant [15 x i8] c"OP_EQUALVERIFY\00"
@global_var_b81a.2124 = constant [13 x i8] c"OP_RESERVED1\00"
@global_var_b827.2125 = constant [13 x i8] c"OP_RESERVED2\00"
@global_var_b834.2126 = constant [8 x i8] c"OP_1ADD\00"
@global_var_b83c.2127 = constant [8 x i8] c"OP_1SUB\00"
@global_var_b844.2128 = constant [8 x i8] c"OP_2MUL\00"
@global_var_b84c.2129 = constant [8 x i8] c"OP_2DIV\00"
@global_var_b854.2130 = constant [10 x i8] c"OP_NEGATE\00"
@global_var_b85e.2131 = constant [7 x i8] c"OP_ABS\00"
@global_var_b865.2132 = constant [7 x i8] c"OP_NOT\00"
@global_var_b86c.2133 = constant [13 x i8] c"OP_0NOTEQUAL\00"
@global_var_b879.2134 = constant [7 x i8] c"OP_ADD\00"
@global_var_b880.2135 = constant [7 x i8] c"OP_SUB\00"
@global_var_b887.2136 = constant [7 x i8] c"OP_MUL\00"
@global_var_b88e.2137 = constant [7 x i8] c"OP_DIV\00"
@global_var_b895.2138 = constant [7 x i8] c"OP_MOD\00"
@global_var_b89c.2139 = constant [10 x i8] c"OP_LSHIFT\00"
@global_var_b8a6.2140 = constant [10 x i8] c"OP_RSHIFT\00"
@global_var_b8b0.2141 = constant [11 x i8] c"OP_BOOLAND\00"
@global_var_b8bb.2142 = constant [10 x i8] c"OP_BOOLOR\00"
@global_var_b8c5.2143 = constant [12 x i8] c"OP_NUMEQUAL\00"
@global_var_b8d1.2144 = constant [18 x i8] c"OP_NUMEQUALVERIFY\00"
@global_var_b8e3.2145 = constant [15 x i8] c"OP_NUMNOTEQUAL\00"
@global_var_b8f2.2146 = constant [12 x i8] c"OP_LESSTHAN\00"
@global_var_b8fe.2147 = constant [15 x i8] c"OP_GREATERTHAN\00"
@global_var_b90d.2148 = constant [19 x i8] c"OP_LESSTHANOREQUAL\00"
@global_var_b920.2149 = constant [22 x i8] c"OP_GREATERTHANOREQUAL\00"
@global_var_b936.2150 = constant [7 x i8] c"OP_MIN\00"
@global_var_b93d.2151 = constant [7 x i8] c"OP_MAX\00"
@global_var_b944.2152 = constant [10 x i8] c"OP_WITHIN\00"
@global_var_b94e.2153 = constant [13 x i8] c"OP_RIPEMD160\00"
@global_var_b95b.2154 = constant [8 x i8] c"OP_SHA1\00"
@global_var_b963.2155 = constant [10 x i8] c"OP_SHA256\00"
@global_var_b96d.2156 = constant [11 x i8] c"OP_HASH160\00"
@global_var_b978.2157 = constant [11 x i8] c"OP_HASH256\00"
@global_var_b983.2158 = constant [17 x i8] c"OP_CODESEPARATOR\00"
@global_var_b994.2159 = constant [12 x i8] c"OP_CHECKSIG\00"
@global_var_b9a0.2160 = constant [18 x i8] c"OP_CHECKSIGVERIFY\00"
@global_var_b9b2.2161 = constant [17 x i8] c"OP_CHECKMULTISIG\00"
@global_var_b9c3.2162 = constant [23 x i8] c"OP_CHECKMULTISIGVERIFY\00"
@global_var_b9da.2163 = constant [8 x i8] c"OP_NOP1\00"
@global_var_b9e2.2164 = constant [8 x i8] c"OP_NOP2\00"
@global_var_b9ea.2165 = constant [8 x i8] c"OP_NOP3\00"
@global_var_b9f2.2166 = constant [8 x i8] c"OP_NOP4\00"
@global_var_b9fa.2167 = constant [8 x i8] c"OP_NOP5\00"
@global_var_ba02.2168 = constant [8 x i8] c"OP_NOP6\00"
@global_var_ba0a.2169 = constant [8 x i8] c"OP_NOP7\00"
@global_var_ba12.2170 = constant [8 x i8] c"OP_NOP8\00"
@global_var_ba1a.2171 = constant [8 x i8] c"OP_NOP9\00"
@global_var_ba22.2172 = constant [9 x i8] c"OP_NOP10\00"
@global_var_ba2b.2173 = constant [14 x i8] c"OP_PUBKEYHASH\00"
@global_var_ba39.2174 = constant [10 x i8] c"OP_PUBKEY\00"
@global_var_ba43.2175 = constant [17 x i8] c"OP_INVALIDOPCODE\00"
@global_var_ba54.2176 = constant [11 x i8] c"OP_UNKNOWN\00"
@global_var_be60.2177 = constant [36 x i8] c"Non-canonical public key: too short\00"
@global_var_be84.2178 = constant [62 x i8] c"Non-canonical public key: invalid length for uncompressed key\00"
@global_var_bec4.2179 = constant [60 x i8] c"Non-canonical public key: invalid length for compressed key\00"
@global_var_bf38.2181 = constant [35 x i8] c"Non-canonical signature: too short\00"
@global_var_c030.2187 = constant [45 x i8] c"Non-canonical signature: R+S length mismatch\00"
@global_var_c1a4.2195 = constant [52 x i8] c"Non-canonical signature: S value excessively padded\00"
@global_var_c9.2196 = constant i32 -1929057149
@global_var_8e68.2198 = constant i32 862319685
@global_var_c3a4.2200 = constant i32 8452
@global_var_8ea0.2201 = constant i32 20
@global_var_8e8c.2202 = constant i32 838092169
@global_var_c1d8.2204 = constant [11 x i8] c"script.cpp\00"
@global_var_93.2206 = constant i32 1153894436
@global_var_c3c4.2207 = constant i32 9170
@global_var_fd.2211 = constant i32 20
@global_var_c47c.2214 = constant i32 20990
@global_var_c490.2215 = constant i32 21926
@global_var_c4a4.2217 = constant i32 23108
@global_var_ccd0.2226 = constant [203 x i8] c"CScript CombineMultisig(CScript, const CTransaction&, unsigned int, const std::vector<std::vector<unsigned char> >&, std::vector<std::vector<unsigned char> >&, std::vector<std::vector<unsigned char> >&)\00"
@global_var_65a.2227 = constant i32 -1207959551
@global_var_c508.2228 = constant [22 x i8] c"vSolutions.size() > 1\00"
@global_var_c520.2229 = constant i32 29635
@global_var_22.2230 = constant i32 -400292727
@global_var_c548.2232 = constant i32 34512
@global_var_87.2233 = constant i32 -792
@global_var_38380.2236 = constant i32 0
@global_var_38368.2237 = constant i32 0
@global_var_b1f0.2240 = constant [18 x i8] c"boost::lock_error\00"
@global_var_b202.2242 = constant [29 x i8] c"boost::thread_resource_error\00"
@global_var_38300.2243 = constant i32 61802
@global_var_fc.2247 = constant i32 5141
@global_var_100.2248 = constant i32 -346328064
@global_var_38238.2249 = constant i32 69350
@global_var_38620.2252 = constant i32 8
@global_var_b5ac.2260 = constant [34 x i8] c"opcode >= OP_1 && opcode <= OP_16\00"
@global_var_381ec.2265 = constant i32 110549
@global_var_38194.2267 = constant i32 110823
@global_var_381a4.2268 = constant i32 231926
@global_var_38570.2269 = constant i32 8
@global_var_3814c.2271 = constant i32 111103
@global_var_380f4.2273 = constant i32 111377
@global_var_38104.2274 = constant i32 231694
@global_var_38c00 = external global i32
@global_var_382e8.2276 = constant i32 90284
@global_var_38290.2279 = constant i32 114427
@global_var_382a4.2280 = constant i32 232158
@global_var_c730.2281 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_c5ba.2282 = constant [22 x i8] c"vector::_M_insert_aux\00"
@global_var_c5e7.2284 = constant [28 x i8] c"vector<bool>::_M_insert_aux\00"
@global_var_c603.2285 = constant [24 x i8] c"vector::_M_range_insert\00"
@global_var_c61b.2286 = constant [23 x i8] c"vector::_M_fill_insert\00"
@global_var_2c5f0.2288 = constant i32 180596
@global_var_2fe9c.2289 = constant i32 195105
@global_var_30700.2290 = constant i32 197251
@global_var_31020.2295 = constant i32 199589
@global_var_31db0.2297 = constant i32 203058
@global_var_33878.2300 = constant i32 209915
@global_var_33da4.2302 = constant i32 211239
@global_var_342d0.2303 = constant i32 212563
@9 = external global i32
@10 = internal constant [2 x i8] c"0\00"
@global_var_b65c.2062 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i32 0, i32 0)
@global_var_8b.2199 = constant i8 -1
@global_var_88.2212 = constant i8 -4
@11 = internal constant [2 x i8] c"\14\00"
@global_var_16.2213 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i32 0, i32 0)
@global_var_15.2231 = constant i8 -95
@global_var_8d.2244 = constant i8 0
@12 = internal constant [6 x i8] c"\F4e3\15\14\00"
@global_var_f9.2245 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @12, i32 0, i32 0)
@13 = internal constant [7 x i8] c"U\F4e3\15\14\00"
@global_var_f8.2246 = constant i8* getelementptr inbounds ([7 x i8], [7 x i8]* @13, i32 0, i32 0)
@global_var_f4.2253 = constant i8 -117
@global_var_89.2254 = constant i8 -1
@global_var_8800.2296 = constant i8 4
@global_var_38020.2287 = constant %vtable_38020_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 (i32, i32)* @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info }
@global_var_380d8.2272 = constant %vtable_380d8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.2054, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_38138.2270 = constant %vtable_38138_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_38178.2266 = constant %vtable_38178_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv }
@global_var_381d8.2264 = constant %vtable_381d8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev, i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38200.2251 = constant %vtable_38200_type { i32 (i32*)* @_ZN12bignum_errorD1Ev, i32 (i32)* @_ZN12bignum_errorD0Ev, i32 ()* @_Z12CastToBigNumRKSt6vectorIhSaIhEE }
@global_var_38218.2250 = constant %vtable_38218_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_38278.2278 = constant %vtable_38278_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }
@global_var_382d8.2275 = constant %vtable_382d8_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_38320.2241 = constant %vtable_38320_type { i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, i32 (i32)* @_ZN5boost21thread_resource_errorD0Ev, i32 (i32)* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_38338.2239 = constant %vtable_38338_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32)* @_ZN5boost10lock_errorD0Ev, i32 (i32)* @_ZNK5boost10lock_error4whatEv }
@global_var_38350.2238 = constant %vtable_38350_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @_Z12CastToBigNumRKSt6vectorIhSaIhEE }

define i32 @_Z12CastToBigNumRKSt6vectorIhSaIhEE() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_8:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_8 = add i32 %tmp91, 8
  %v2_8 = inttoptr i32 %v1_8 to i32*
  %v3_8 = load i32, i32* %v2_8, align 4
  %v2_b = add i32 %tmp91, -60
  %v3_b = inttoptr i32 %v2_b to i32*
  store i32 %v3_8, i32* %v3_b, align 4
  ret void

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_e:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_e = add i32 %tmp91, 12
  %v2_e = inttoptr i32 %v1_e to i32*
  %v3_e = load i32, i32* %v2_e, align 4
  %v2_11 = add i32 %tmp91, -64
  %v3_11 = inttoptr i32 %v2_11 to i32*
  store i32 %v3_e, i32* %v3_11, align 4
  ret void

; uselistorder directives
  uselistorder i32 %tmp91, { 1, 0 }
}

define i32 @function_a4() local_unnamed_addr {
dec_label_pc_a4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a4 = add i32 %v0_a4, 1149878341
  %v2_a4 = inttoptr i32 %v1_a4 to i32*
  %v3_a4 = load i32, i32* %v2_a4, align 4
  %v4_a4 = add i32 %v3_a4, -1
  store i32 %v4_a4, i32* %v2_a4, align 4
  %v0_ac = load i32, i32* @ebp, align 4
  %v1_ac = add i32 %v0_ac, -52
  %v1_b2 = call i32 @_ZN7CBigNumC1ERKSt6vectorIhSaIhEE(i32 %v1_ac)
  %v0_b7 = load i32, i32* @ebp, align 4
  %v1_b7 = add i32 %v0_b7, -32
  %v1_ba = add i32 %v0_b7, -52
  store i32 %v1_ba, i32* @edx, align 4
  %v2_c4 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_b7, i32 %v1_ba)
  %v0_cc = load i32, i32* @ebp, align 4
  %v1_d3 = add i32 %v0_cc, -60
  %v2_d3 = inttoptr i32 %v1_d3 to i32*
  %v3_d3 = load i32, i32* %v2_d3, align 4
  %v2_d9 = call i32 @_ZN7CBigNumC1ERKSt6vectorIhSaIhEE(i32 %v3_d3)
  %v0_de = load i32, i32* @ebp, align 4
  %v1_de = add i32 %v0_de, -32
  %v1_e4 = inttoptr i32 %v1_de to i32*
  %v2_e4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_e4)
  %v0_e9 = load i32, i32* @ebp, align 4
  %v1_e9 = add i32 %v0_e9, -52
  %v1_ef = call i32 @_ZN7CBigNumD1Ev(i32 %v1_e9)
  %v0_f4 = load i32, i32* @ebp, align 4
  %v1_f4 = add i32 %v0_f4, -60
  %v2_f4 = inttoptr i32 %v1_f4 to i32*
  %v3_f4 = load i32, i32* %v2_f4, align 4
  store i32 %v3_f4, i32* @eax, align 4
  %v1_f7 = add i32 %v0_f4, -12
  %v2_f7 = inttoptr i32 %v1_f7 to i32*
  %v3_f7 = load i32, i32* %v2_f7, align 4
  %v1_fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_fa = icmp eq i32 %v1_fa, %v3_f7
  br i1 %v3_fa, label %bb, label %dec_label_pc_103

bb:                                               ; preds = %dec_label_pc_a4
  %v1_101 = call i32 @function_15e()
  store i32 %v1_101, i32* @eax, align 4
  br label %dec_label_pc_103

dec_label_pc_103:                                 ; preds = %bb, %dec_label_pc_a4
  %v0_103 = call i32 @function_159()
  ret i32 %v0_103

; uselistorder directives
  uselistorder i32 (i32)* @_ZN7CBigNumC1ERKSt6vectorIhSaIhEE, { 1, 0 }
}

define i32 @function_112() local_unnamed_addr {
dec_label_pc_112:
  %v0_112 = call i32 @function_116()
  ret i32 %v0_112
}

define i32 @function_114() local_unnamed_addr {
dec_label_pc_114:
  %eax.global-to-local = alloca i32, align 4
  %v0_114 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_114
}

define i32 @function_116() local_unnamed_addr {
dec_label_pc_116:
  %v0_116 = load i32, i32* @ebp, align 4
  %v1_116 = add i32 %v0_116, -13
  ret i32 %v1_116
}

define i32 @function_132() local_unnamed_addr {
dec_label_pc_132:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_132 = load i32, i32* %ecx.global-to-local, align 4
  %v1_132 = add i32 %v0_132, -532312637
  %v2_132 = inttoptr i32 %v1_132 to i32*
  %v3_132 = load i32, i32* %v2_132, align 4
  %v4_132 = add i32 %v3_132, -1
  store i32 %v4_132, i32* %v2_132, align 4
  %v0_138 = load i32, i32* %eax.global-to-local, align 4
  %v1_13b = inttoptr i32 %v0_138 to i32*
  %v2_13b = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_13b)
  store i32 %v2_13b, i32* %eax.global-to-local, align 4
  %v0_140 = call i32 @function_144()
  store i32 %v0_140, i32* %eax.global-to-local, align 4
  ret i32 %v0_140
}

define i32 @function_142() local_unnamed_addr {
dec_label_pc_142:
  %eax.global-to-local = alloca i32, align 4
  %v0_142 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_142
}

define i32 @function_144() local_unnamed_addr {
dec_label_pc_144:
  %v0_144 = load i32, i32* @ebp, align 4
  %v1_144 = add i32 %v0_144, -52
  %v1_14a = call i32 @_ZN7CBigNumD1Ev(i32 %v1_144)
  %v0_14f = load i32, i32* @ebx, align 4
  ret i32 %v0_14f
}

define i32 @function_159() local_unnamed_addr {
dec_label_pc_159:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15e() local_unnamed_addr {
dec_label_pc_15e:
  %v0_164 = load i32, i32* @eax, align 4
  ret i32 %v0_164
}

define i1 @_Z10CastToBoolRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %vch) local_unnamed_addr {
dec_label_pc_167:
  %tmp = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %vch, 0
  %v1_1f9 = inttoptr i32 %tmp to i32*
  br label %dec_label_pc_1f3

dec_label_pc_187:                                 ; preds = %dec_label_pc_1f3
  %v3_194 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v1_1f9, i32 %storemerge2)
  %v1_199 = inttoptr i32 %v3_194 to i8*
  %v2_199 = load i8, i8* %v1_199, align 1
  %v5_19c = icmp eq i8 %v2_199, 0
  %v1_19e = icmp eq i1 %v5_19c, false
  %v5_1a1 = icmp eq i1 %v1_19e, false
  br i1 %v5_1a1, label %dec_label_pc_1ef, label %dec_label_pc_1a5

dec_label_pc_1a5:                                 ; preds = %dec_label_pc_187
  %v2_1ab = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_1f9)
  %v1_1b0 = add i32 %v2_1ab, -1
  %v15_1b3 = icmp eq i32 %v1_1b0, %storemerge2
  %v1_1b6 = icmp eq i1 %v15_1b3, false
  br i1 %v1_1b6, label %dec_label_pc_1d8, label %dec_label_pc_1b8

dec_label_pc_1b8:                                 ; preds = %dec_label_pc_1a5
  %v3_1c5 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v1_1f9, i32 %storemerge2)
  %v1_1ca = inttoptr i32 %v3_1c5 to i8*
  %v2_1ca = load i8, i8* %v1_1ca, align 1
  %v10_1cd = icmp eq i8 %v2_1ca, -128
  %v1_1cf = icmp eq i1 %v10_1cd, false
  br i1 %v1_1cf, label %dec_label_pc_1d8, label %dec_label_pc_1dd

dec_label_pc_1d8:                                 ; preds = %dec_label_pc_1b8, %dec_label_pc_1a5
  br label %dec_label_pc_1dd

dec_label_pc_1dd:                                 ; preds = %dec_label_pc_1b8, %dec_label_pc_1d8
  %storemerge = phi i1 [ true, %dec_label_pc_1d8 ], [ false, %dec_label_pc_1b8 ]
  br i1 %storemerge, label %dec_label_pc_1e8, label %dec_label_pc_1e1

dec_label_pc_1e1:                                 ; preds = %dec_label_pc_1dd
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_211

dec_label_pc_1e8:                                 ; preds = %dec_label_pc_1dd
  store i32 1, i32* @eax, align 4
  br label %dec_label_pc_211

dec_label_pc_1ef:                                 ; preds = %dec_label_pc_187
  %v4_1ef = add i32 %storemerge2, 1
  br label %dec_label_pc_1f3

dec_label_pc_1f3:                                 ; preds = %dec_label_pc_1ef, %dec_label_pc_167
  %storemerge2 = phi i32 [ %v4_1ef, %dec_label_pc_1ef ], [ 0, %dec_label_pc_167 ]
  %v2_1f9 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_1f9)
  %tmp18 = icmp ule i32 %v2_1f9, %storemerge2
  %v3_201 = icmp ne i1 %tmp18, true
  %v5_204 = icmp eq i1 %v3_201, false
  %v1_206 = icmp eq i1 %v5_204, false
  br i1 %v1_206, label %dec_label_pc_187, label %dec_label_pc_20c

dec_label_pc_20c:                                 ; preds = %dec_label_pc_1f3
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_211

dec_label_pc_211:                                 ; preds = %dec_label_pc_1e8, %dec_label_pc_1e1, %dec_label_pc_20c
  %v2_21b9 = phi i32 [ 1, %dec_label_pc_1e8 ], [ 0, %dec_label_pc_1e1 ], [ 0, %dec_label_pc_20c ]
  br i1 true, label %bb, label %dec_label_pc_21d

bb:                                               ; preds = %dec_label_pc_211
  %v1_21b = call i32 @function_222()
  br label %dec_label_pc_21d

dec_label_pc_21d:                                 ; preds = %bb, %dec_label_pc_211
  %v2_21b = phi i32 [ %v1_21b, %bb ], [ %v2_21b9, %dec_label_pc_211 ]
  %tmp19 = urem i32 %v2_21b, 2
  %v3_21b = icmp ne i32 %tmp19, 0
  ret i1 %v3_21b

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 4, 0, 1, 3 }
  uselistorder i32* %v1_1f9, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_211, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1dd, { 1, 0 }
}

define i32 @function_222() local_unnamed_addr {
dec_label_pc_222:
  %v0_223 = load i32, i32* @eax, align 4
  ret i32 %v0_223
}

define void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %stack) local_unnamed_addr {
dec_label_pc_224:
  %tmp = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %stack, 0
  %v1_243 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv(i32 %tmp)
  %v4_248 = trunc i32 %v1_243 to i8
  %v5_248 = icmp eq i8 %v4_248, 0
  br i1 %v5_248, label %bb, label %dec_label_pc_24c

bb:                                               ; preds = %dec_label_pc_224
  %v1_24a = call i32 @function_2bd()
  br label %dec_label_pc_24c

dec_label_pc_24c:                                 ; preds = %bb, %dec_label_pc_224
  ret void
}

define i32 @function_259() local_unnamed_addr {
dec_label_pc_259:
  %eax.global-to-local = alloca i32, align 4
  %v0_259 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_259
}

define i32 @function_2bd() local_unnamed_addr {
dec_label_pc_2bd:
  %v0_2bd = load i32, i32* @ebp, align 4
  %v1_2bd = add i32 %v0_2bd, -28
  %v2_2bd = inttoptr i32 %v1_2bd to i32*
  %v3_2bd = load i32, i32* %v2_2bd, align 4
  %v1_2c3 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE8pop_backEv(i32 %v3_2bd)
  %v0_2c8 = load i32, i32* @ebp, align 4
  %v1_2c8 = add i32 %v0_2c8, -12
  %v2_2c8 = inttoptr i32 %v1_2c8 to i32*
  %v3_2c8 = load i32, i32* %v2_2c8, align 4
  %v1_2cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2cb = xor i32 %v1_2cb, %v3_2c8
  %v3_2cb = icmp eq i32 %v2_2cb, 0
  store i32 %v2_2cb, i32* @eax, align 4
  br i1 %v3_2cb, label %bb, label %dec_label_pc_2d4

bb:                                               ; preds = %dec_label_pc_2bd
  %v1_2d2 = call i32 @function_309()
  store i32 %v1_2d2, i32* @eax, align 4
  br label %dec_label_pc_2d4

dec_label_pc_2d4:                                 ; preds = %bb, %dec_label_pc_2bd
  %v0_2d4 = call i32 @function_304()
  ret i32 %v0_2d4
}

define i32 @function_2e3() local_unnamed_addr {
dec_label_pc_2e3:
  %v0_2e3 = call i32 @function_2e7()
  ret i32 %v0_2e3
}

define i32 @function_2e5() local_unnamed_addr {
dec_label_pc_2e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e5
}

define i32 @function_2e7() local_unnamed_addr {
dec_label_pc_2e7:
  %v0_2e7 = load i32, i32* @ebp, align 4
  %v1_2e7 = add i32 %v0_2e7, -13
  ret i32 %v1_2e7
}

define i32 @function_304() local_unnamed_addr {
dec_label_pc_304:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_309() local_unnamed_addr {
dec_label_pc_309:
  %v0_30f = load i32, i32* @eax, align 4
  ret i32 %v0_30f
}

define i8* @_Z16GetTxnOutputType10txnouttype(i32 %t) local_unnamed_addr {
dec_label_pc_310:
  store i32 %t, i32* @0, align 4
  switch i32 %t, label %dec_label_pc_35b [
    i32 0, label %dec_label_pc_338
    i32 1, label %dec_label_pc_33f
    i32 2, label %dec_label_pc_346
    i32 3, label %dec_label_pc_34d
    i32 4, label %dec_label_pc_354
  ]

dec_label_pc_338:                                 ; preds = %dec_label_pc_310
  store i32 ptrtoint ([12 x i8]* @global_var_b613.2056 to i32), i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_33f:                                 ; preds = %dec_label_pc_310
  store i32 ptrtoint ([7 x i8]* @global_var_b61f.2057 to i32), i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_346:                                 ; preds = %dec_label_pc_310
  store i32 ptrtoint ([11 x i8]* @global_var_b626.2058 to i32), i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_34d:                                 ; preds = %dec_label_pc_310
  store i32 ptrtoint ([11 x i8]* @global_var_b631.2059 to i32), i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_354:                                 ; preds = %dec_label_pc_310
  store i32 ptrtoint ([9 x i8]* @global_var_b63c.2060 to i32), i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_35b:                                 ; preds = %dec_label_pc_310
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_360

dec_label_pc_360:                                 ; preds = %dec_label_pc_354, %dec_label_pc_34d, %dec_label_pc_346, %dec_label_pc_33f, %dec_label_pc_338, %dec_label_pc_35b
  %v2_36a2 = phi i32 [ ptrtoint ([9 x i8]* @global_var_b63c.2060 to i32), %dec_label_pc_354 ], [ ptrtoint ([11 x i8]* @global_var_b631.2059 to i32), %dec_label_pc_34d ], [ ptrtoint ([11 x i8]* @global_var_b626.2058 to i32), %dec_label_pc_346 ], [ ptrtoint ([7 x i8]* @global_var_b61f.2057 to i32), %dec_label_pc_33f ], [ ptrtoint ([12 x i8]* @global_var_b613.2056 to i32), %dec_label_pc_338 ], [ 0, %dec_label_pc_35b ]
  br i1 true, label %bb, label %dec_label_pc_36c

bb:                                               ; preds = %dec_label_pc_360
  %v1_36a = call i32 @function_371()
  br label %dec_label_pc_36c

dec_label_pc_36c:                                 ; preds = %bb, %dec_label_pc_360
  %v2_36a = phi i32 [ %v1_36a, %bb ], [ %v2_36a2, %dec_label_pc_360 ]
  %v3_36a = inttoptr i32 %v2_36a to i8*
  ret i8* %v3_36a

; uselistorder directives
  uselistorder i32 %t, { 1, 0 }
  uselistorder label %dec_label_pc_360, { 5, 0, 1, 2, 3, 4 }
}

define i32 @function_371() local_unnamed_addr {
dec_label_pc_371:
  %v0_372 = load i32, i32* @eax, align 4
  ret i32 %v0_372
}

define i8* @_Z9GetOpName10opcodetype(i32 %opcode) local_unnamed_addr {
dec_label_pc_373:
  store i32 %opcode, i32* @1, align 4
  switch i32 %opcode, label %dec_label_pc_7df [
    i32 0, label %dec_label_pc_3a1
    i32 76, label %dec_label_pc_3ab
    i32 77, label %dec_label_pc_3b5
    i32 78, label %dec_label_pc_3bf
    i32 79, label %dec_label_pc_3c9
    i32 80, label %dec_label_pc_3d3
    i32 81, label %dec_label_pc_3dd
    i32 82, label %dec_label_pc_3e7
    i32 83, label %dec_label_pc_3f1
    i32 84, label %dec_label_pc_3fb
    i32 85, label %dec_label_pc_405
    i32 86, label %dec_label_pc_40f
    i32 87, label %dec_label_pc_419
    i32 88, label %dec_label_pc_423
    i32 89, label %dec_label_pc_42d
    i32 90, label %dec_label_pc_437
    i32 91, label %dec_label_pc_441
    i32 92, label %dec_label_pc_44b
    i32 93, label %dec_label_pc_455
    i32 94, label %dec_label_pc_45f
    i32 95, label %dec_label_pc_469
    i32 96, label %dec_label_pc_473
    i32 97, label %dec_label_pc_47d
    i32 98, label %dec_label_pc_487
    i32 99, label %dec_label_pc_491
    i32 100, label %dec_label_pc_49b
    i32 101, label %dec_label_pc_4a5
    i32 102, label %dec_label_pc_4af
    i32 103, label %dec_label_pc_4b9
    i32 104, label %dec_label_pc_4c3
    i32 105, label %dec_label_pc_4cd
    i32 106, label %dec_label_pc_4d7
    i32 107, label %dec_label_pc_4e1
    i32 108, label %dec_label_pc_4eb
    i32 109, label %dec_label_pc_4f5
    i32 110, label %dec_label_pc_4ff
    i32 111, label %dec_label_pc_509
    i32 112, label %dec_label_pc_513
    i32 113, label %dec_label_pc_51d
    i32 114, label %dec_label_pc_527
    i32 115, label %dec_label_pc_531
    i32 116, label %dec_label_pc_53b
    i32 117, label %dec_label_pc_545
    i32 118, label %dec_label_pc_54f
    i32 119, label %dec_label_pc_559
    i32 120, label %dec_label_pc_563
    i32 121, label %dec_label_pc_56d
    i32 122, label %dec_label_pc_577
    i32 123, label %dec_label_pc_581
    i32 124, label %dec_label_pc_58b
    i32 125, label %dec_label_pc_595
    i32 126, label %dec_label_pc_59f
    i32 127, label %dec_label_pc_5a9
    i32 128, label %dec_label_pc_5b3
    i32 129, label %dec_label_pc_5bd
    i32 130, label %dec_label_pc_5c7
    i32 131, label %dec_label_pc_5d1
    i32 132, label %dec_label_pc_5db
    i32 133, label %dec_label_pc_5e5
    i32 134, label %dec_label_pc_5ef
    i32 135, label %dec_label_pc_5f9
    i32 136, label %dec_label_pc_603
    i32 137, label %dec_label_pc_60d
    i32 138, label %dec_label_pc_617
    i32 139, label %dec_label_pc_621
    i32 140, label %dec_label_pc_62b
    i32 141, label %dec_label_pc_635
    i32 142, label %dec_label_pc_63f
    i32 143, label %dec_label_pc_649
    i32 144, label %dec_label_pc_653
    i32 145, label %dec_label_pc_65d
    i32 146, label %dec_label_pc_667
    i32 147, label %dec_label_pc_671
    i32 148, label %dec_label_pc_67b
    i32 149, label %dec_label_pc_685
    i32 150, label %dec_label_pc_68f
    i32 151, label %dec_label_pc_699
    i32 152, label %dec_label_pc_6a3
    i32 153, label %dec_label_pc_6ad
    i32 154, label %dec_label_pc_6b7
    i32 155, label %dec_label_pc_6c1
    i32 156, label %dec_label_pc_6cb
    i32 157, label %dec_label_pc_6d5
    i32 158, label %dec_label_pc_6df
    i32 159, label %dec_label_pc_6e9
    i32 160, label %dec_label_pc_6f3
    i32 161, label %dec_label_pc_6fd
    i32 162, label %dec_label_pc_707
    i32 163, label %dec_label_pc_711
    i32 164, label %dec_label_pc_71b
    i32 165, label %dec_label_pc_725
    i32 166, label %dec_label_pc_72f
    i32 167, label %dec_label_pc_739
    i32 168, label %dec_label_pc_743
    i32 169, label %dec_label_pc_74d
    i32 170, label %dec_label_pc_757
    i32 171, label %dec_label_pc_761
    i32 172, label %dec_label_pc_768
    i32 173, label %dec_label_pc_76f
    i32 174, label %dec_label_pc_776
    i32 175, label %dec_label_pc_77d
    i32 176, label %dec_label_pc_784
    i32 177, label %dec_label_pc_78b
    i32 178, label %dec_label_pc_792
    i32 179, label %dec_label_pc_799
    i32 180, label %dec_label_pc_7a0
    i32 181, label %dec_label_pc_7a7
    i32 182, label %dec_label_pc_7ae
    i32 183, label %dec_label_pc_7b5
    i32 184, label %dec_label_pc_7bc
    i32 185, label %dec_label_pc_7c3
    i32 253, label %dec_label_pc_7ca
    i32 254, label %dec_label_pc_7d1
    i32 255, label %dec_label_pc_7d8
  ]

dec_label_pc_3a1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i8** @global_var_b65c.2062 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3ab:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b65e.2063 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3b5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b66b.2064 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3bf:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b678.2065 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3c9:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b685.2066 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3d3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([12 x i8]* @global_var_b688.2067 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3dd:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b694.2068 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3e7:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b696.2069 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3f1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b698.2070 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_3fb:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b69a.2071 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_405:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b69c.2072 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_40f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b69e.2073 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_419:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b6a0.2074 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_423:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b6a2.2075 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_42d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint (i32* @global_var_b6a4.2076 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_437:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6a6.2077 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_441:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6a9.2078 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_44b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6ac.2079 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_455:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6af.2080 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_45f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6b2.2081 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_469:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6b5.2082 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_473:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([3 x i8]* @global_var_b6b8.2083 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_47d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b6bb.2084 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_487:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b6c2.2085 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_491:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([6 x i8]* @global_var_b6c9.2086 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_49b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b6cf.2087 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4a5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b6d8.2088 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4af:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([12 x i8]* @global_var_b6e1.2089 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4b9:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b6ed.2090 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4c3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b6f5.2091 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4cd:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b6fe.2092 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4d7:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b708.2093 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4e1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([14 x i8]* @global_var_b712.2094 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4eb:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([16 x i8]* @global_var_b720.2095 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4f5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b730.2096 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_4ff:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b739.2097 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_509:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b741.2098 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_513:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b749.2099 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_51d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b752.2100 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_527:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b75a.2101 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_531:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b763.2102 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_53b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b76c.2103 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_545:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b775.2104 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_54f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b77d.2105 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_559:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b784.2106 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_563:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b78b.2107 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_56d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b793.2108 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_577:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b79b.2109 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_581:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b7a3.2110 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_58b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b7aa.2111 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_595:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b7b2.2112 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_59f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b7ba.2113 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5a9:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b7c1.2114 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5b3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b7cb.2115 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5bd:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b7d3.2116 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5c7:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b7dc.2117 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5d1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b7e4.2118 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5db:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b7ee.2119 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5e5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([6 x i8]* @global_var_b7f5.2120 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5ef:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b7fb.2121 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_5f9:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_b802.2122 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_603:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([15 x i8]* @global_var_b80b.2123 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_60d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b81a.2124 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_617:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b827.2125 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_621:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b834.2126 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_62b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b83c.2127 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_635:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b844.2128 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_63f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b84c.2129 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_649:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b854.2130 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_653:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b85e.2131 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_65d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b865.2132 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_667:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b86c.2133 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_671:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b879.2134 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_67b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b880.2135 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_685:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b887.2136 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_68f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b88e.2137 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_699:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b895.2138 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6a3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b89c.2139 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6ad:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b8a6.2140 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6b7:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([11 x i8]* @global_var_b8b0.2141 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6c1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b8bb.2142 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6cb:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([12 x i8]* @global_var_b8c5.2143 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6d5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([18 x i8]* @global_var_b8d1.2144 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6df:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([15 x i8]* @global_var_b8e3.2145 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6e9:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([12 x i8]* @global_var_b8f2.2146 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6f3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([15 x i8]* @global_var_b8fe.2147 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_6fd:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([19 x i8]* @global_var_b90d.2148 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_707:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([22 x i8]* @global_var_b920.2149 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_711:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b936.2150 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_71b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([7 x i8]* @global_var_b93d.2151 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_725:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b944.2152 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_72f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([13 x i8]* @global_var_b94e.2153 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_739:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b95b.2154 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_743:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_b963.2155 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_74d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([11 x i8]* @global_var_b96d.2156 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_757:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([11 x i8]* @global_var_b978.2157 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_761:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([17 x i8]* @global_var_b983.2158 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_768:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([12 x i8]* @global_var_b994.2159 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_76f:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([18 x i8]* @global_var_b9a0.2160 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_776:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([17 x i8]* @global_var_b9b2.2161 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_77d:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([23 x i8]* @global_var_b9c3.2162 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_784:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b9da.2163 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_78b:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b9e2.2164 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_792:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b9ea.2165 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_799:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b9f2.2166 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7a0:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_b9fa.2167 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7a7:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_ba02.2168 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7ae:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_ba0a.2169 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7b5:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_ba12.2170 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7bc:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([8 x i8]* @global_var_ba1a.2171 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7c3:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([9 x i8]* @global_var_ba22.2172 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7ca:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([14 x i8]* @global_var_ba2b.2173 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7d1:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([10 x i8]* @global_var_ba39.2174 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7d8:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([17 x i8]* @global_var_ba43.2175 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7df:                                 ; preds = %dec_label_pc_373
  store i32 ptrtoint ([11 x i8]* @global_var_ba54.2176 to i32), i32* @eax, align 4
  br label %dec_label_pc_7e4

dec_label_pc_7e4:                                 ; preds = %dec_label_pc_7d8, %dec_label_pc_7d1, %dec_label_pc_7ca, %dec_label_pc_7c3, %dec_label_pc_7bc, %dec_label_pc_7b5, %dec_label_pc_7ae, %dec_label_pc_7a7, %dec_label_pc_7a0, %dec_label_pc_799, %dec_label_pc_792, %dec_label_pc_78b, %dec_label_pc_784, %dec_label_pc_77d, %dec_label_pc_776, %dec_label_pc_76f, %dec_label_pc_768, %dec_label_pc_761, %dec_label_pc_757, %dec_label_pc_74d, %dec_label_pc_743, %dec_label_pc_739, %dec_label_pc_72f, %dec_label_pc_725, %dec_label_pc_71b, %dec_label_pc_711, %dec_label_pc_707, %dec_label_pc_6fd, %dec_label_pc_6f3, %dec_label_pc_6e9, %dec_label_pc_6df, %dec_label_pc_6d5, %dec_label_pc_6cb, %dec_label_pc_6c1, %dec_label_pc_6b7, %dec_label_pc_6ad, %dec_label_pc_6a3, %dec_label_pc_699, %dec_label_pc_68f, %dec_label_pc_685, %dec_label_pc_67b, %dec_label_pc_671, %dec_label_pc_667, %dec_label_pc_65d, %dec_label_pc_653, %dec_label_pc_649, %dec_label_pc_63f, %dec_label_pc_635, %dec_label_pc_62b, %dec_label_pc_621, %dec_label_pc_617, %dec_label_pc_60d, %dec_label_pc_603, %dec_label_pc_5f9, %dec_label_pc_5ef, %dec_label_pc_5e5, %dec_label_pc_5db, %dec_label_pc_5d1, %dec_label_pc_5c7, %dec_label_pc_5bd, %dec_label_pc_5b3, %dec_label_pc_5a9, %dec_label_pc_59f, %dec_label_pc_595, %dec_label_pc_58b, %dec_label_pc_581, %dec_label_pc_577, %dec_label_pc_56d, %dec_label_pc_563, %dec_label_pc_559, %dec_label_pc_54f, %dec_label_pc_545, %dec_label_pc_53b, %dec_label_pc_531, %dec_label_pc_527, %dec_label_pc_51d, %dec_label_pc_513, %dec_label_pc_509, %dec_label_pc_4ff, %dec_label_pc_4f5, %dec_label_pc_4eb, %dec_label_pc_4e1, %dec_label_pc_4d7, %dec_label_pc_4cd, %dec_label_pc_4c3, %dec_label_pc_4b9, %dec_label_pc_4af, %dec_label_pc_4a5, %dec_label_pc_49b, %dec_label_pc_491, %dec_label_pc_487, %dec_label_pc_47d, %dec_label_pc_473, %dec_label_pc_469, %dec_label_pc_45f, %dec_label_pc_455, %dec_label_pc_44b, %dec_label_pc_441, %dec_label_pc_437, %dec_label_pc_42d, %dec_label_pc_423, %dec_label_pc_419, %dec_label_pc_40f, %dec_label_pc_405, %dec_label_pc_3fb, %dec_label_pc_3f1, %dec_label_pc_3e7, %dec_label_pc_3dd, %dec_label_pc_3d3, %dec_label_pc_3c9, %dec_label_pc_3bf, %dec_label_pc_3b5, %dec_label_pc_3ab, %dec_label_pc_3a1, %dec_label_pc_7df
  br i1 true, label %bb, label %dec_label_pc_7f0

bb:                                               ; preds = %dec_label_pc_7e4
  %v1_7ee = call i32 @function_7f5()
  store i32 %v1_7ee, i32* @eax, align 4
  br label %dec_label_pc_7f0

dec_label_pc_7f0:                                 ; preds = %bb, %dec_label_pc_7e4
  %v2_7ee = load i32, i32* @eax, align 4
  %v3_7ee = inttoptr i32 %v2_7ee to i8*
  ret i8* %v3_7ee

; uselistorder directives
  uselistorder i32 %opcode, { 1, 0 }
  uselistorder label %dec_label_pc_7e4, { 114, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113 }
}

define i32 @function_7f5() local_unnamed_addr {
dec_label_pc_7f5:
  %v0_7f6 = load i32, i32* @eax, align 4
  ret i32 %v0_7f6
}

define i1 @_Z17IsCanonicalPubKeyRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %vchPubKey) local_unnamed_addr {
dec_label_pc_7f7:
  %tmp = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %vchPubKey, 0
  %tmp12 = inttoptr i32 %tmp to i32*
  %v3_814 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp12)
  %tmp13 = icmp ult i32 %v3_814, 33
  %v3_81c = zext i1 %tmp13 to i32
  %v5_81c = and i32 %v3_814, -256
  %v6_81c = or i32 %v3_81c, %v5_81c
  store i32 %v6_81c, i32* @eax, align 4
  %v5_81f = icmp eq i1 %tmp13, false
  br i1 %v5_81f, label %dec_label_pc_834, label %dec_label_pc_823

dec_label_pc_823:                                 ; preds = %dec_label_pc_7f7
  %v2_82f = call i32 @function_8f4(i32 ptrtoint ([36 x i8]* @global_var_be60.2177 to i32))
  %tmp14 = urem i32 %v2_82f, 2
  %v4_82f = icmp ne i32 %tmp14, 0
  ret i1 %v4_82f

dec_label_pc_834:                                 ; preds = %dec_label_pc_7f7
  %v4_842 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp12, i32 0)
  %v1_847 = inttoptr i32 %v4_842 to i8*
  %v2_847 = load i8, i8* %v1_847, align 1
  %v11_84a = icmp eq i8 %v2_847, 4
  %v5_84f = icmp eq i1 %v11_84a, false
  br i1 %v5_84f, label %dec_label_pc_87a, label %dec_label_pc_853

dec_label_pc_853:                                 ; preds = %dec_label_pc_834
  %v3_859 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp12)
  %v10_85e = icmp eq i32 %v3_859, 65
  %v1_861 = icmp eq i1 %v10_85e, false
  %v2_861 = zext i1 %v1_861 to i32
  %v4_861 = and i32 %v3_859, -256
  %v5_861 = or i32 %v2_861, %v4_861
  store i32 %v5_861, i32* @eax, align 4
  %v5_864 = icmp eq i1 %v1_861, false
  br i1 %v5_864, label %bb, label %dec_label_pc_86c

bb:                                               ; preds = %dec_label_pc_853
  %v1_866 = call i32 @function_8ef()
  store i32 %v1_866, i32* @eax, align 4
  br label %dec_label_pc_86c

dec_label_pc_86c:                                 ; preds = %bb, %dec_label_pc_853
  %v2_878 = call i32 @function_8f4(i32 ptrtoint ([62 x i8]* @global_var_be84.2178 to i32))
  %tmp15 = urem i32 %v2_878, 2
  %v4_878 = icmp ne i32 %tmp15, 0
  ret i1 %v4_878

dec_label_pc_87a:                                 ; preds = %dec_label_pc_834
  %v4_888 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp12, i32 0)
  %v1_88d = inttoptr i32 %v4_888 to i8*
  %v2_88d = load i8, i8* %v1_88d, align 1
  %v11_890 = icmp eq i8 %v2_88d, 2
  br i1 %v11_890, label %dec_label_pc_8ba, label %dec_label_pc_894

dec_label_pc_894:                                 ; preds = %dec_label_pc_87a
  %v4_8a2 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp12, i32 0)
  %v1_8a7 = inttoptr i32 %v4_8a2 to i8*
  %v2_8a7 = load i8, i8* %v1_8a7, align 1
  %v11_8aa = icmp eq i8 %v2_8a7, 3
  %phitmp = icmp eq i1 %v11_8aa, false
  br label %dec_label_pc_8ba

dec_label_pc_8ba:                                 ; preds = %dec_label_pc_894, %dec_label_pc_87a
  %v3_8e1 = phi i1 [ false, %dec_label_pc_87a ], [ %phitmp, %dec_label_pc_894 ]
  br i1 %v3_8e1, label %dec_label_pc_8e1, label %dec_label_pc_8be

dec_label_pc_8be:                                 ; preds = %dec_label_pc_8ba
  %v3_8c4 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp12)
  %v10_8c9 = icmp eq i32 %v3_8c4, 33
  %v1_8cc = icmp eq i1 %v10_8c9, false
  %v2_8cc = zext i1 %v1_8cc to i32
  %v4_8cc = and i32 %v3_8c4, -256
  %v5_8cc = or i32 %v2_8cc, %v4_8cc
  store i32 %v5_8cc, i32* @eax, align 4
  %v5_8cf = icmp eq i1 %v1_8cc, false
  br i1 %v5_8cf, label %bb18, label %dec_label_pc_8d3

bb18:                                             ; preds = %dec_label_pc_8be
  %v1_8d1 = call i32 @function_8ef()
  store i32 %v1_8d1, i32* @eax, align 4
  br label %dec_label_pc_8d3

dec_label_pc_8d3:                                 ; preds = %bb18, %dec_label_pc_8be
  %v2_8df = call i32 @function_8f4(i32 ptrtoint ([60 x i8]* @global_var_bec4.2179 to i32))
  %tmp19 = urem i32 %v2_8df, 2
  %v4_8df = icmp ne i32 %tmp19, 0
  ret i1 %v4_8df

dec_label_pc_8e1:                                 ; preds = %dec_label_pc_8ba
  ret i1 false

; uselistorder directives
  uselistorder i32 %v3_8c4, { 1, 0 }
  uselistorder i32 %v3_859, { 1, 0 }
  uselistorder i32 %v3_814, { 1, 0 }
  uselistorder i32* %tmp12, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_8ef, { 1, 0 }
}

define i32 @function_8ed() local_unnamed_addr {
dec_label_pc_8ed:
  %v1_8ed = call i32 @function_8f4(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_8ed

; uselistorder directives
  uselistorder i32 (i32)* @function_8f4, { 3, 2, 1, 0 }
}

define i32 @function_8ef() local_unnamed_addr {
dec_label_pc_8ef:
  ret i32 1
}

define i32 @function_8f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f4:
  %v0_8f4 = load i32, i32* @ebp, align 4
  %v1_8f4 = add i32 %v0_8f4, -12
  %v2_8f4 = inttoptr i32 %v1_8f4 to i32*
  %v3_8f4 = load i32, i32* %v2_8f4, align 4
  %v1_8f7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8f7 = icmp eq i32 %v1_8f7, %v3_8f4
  br i1 %v3_8f7, label %bb, label %dec_label_pc_8f4.dec_label_pc_900_crit_edge

dec_label_pc_8f4.dec_label_pc_900_crit_edge:      ; preds = %dec_label_pc_8f4
  %v2_8fe.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_900

bb:                                               ; preds = %dec_label_pc_8f4
  %v1_8fe = call i32 @function_905()
  br label %dec_label_pc_900

dec_label_pc_900:                                 ; preds = %dec_label_pc_8f4.dec_label_pc_900_crit_edge, %bb
  %v2_8fe = phi i32 [ %v2_8fe.pre, %dec_label_pc_8f4.dec_label_pc_900_crit_edge ], [ %v1_8fe, %bb ]
  ret i32 %v2_8fe

; uselistorder directives
  uselistorder label %dec_label_pc_900, { 1, 0 }
}

define i32 @function_905() local_unnamed_addr {
dec_label_pc_905:
  %v0_906 = load i32, i32* @eax, align 4
  ret i32 %v0_906
}

define i1 @_Z20IsCanonicalSignatureRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %vchSig) local_unnamed_addr {
dec_label_pc_907:
  %tmp = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %vchSig, 0
  %tmp11 = inttoptr i32 %tmp to i32*
  %v3_925 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp11)
  %tmp12 = icmp ult i32 %v3_925, 9
  %v3_92d = zext i1 %tmp12 to i32
  %v5_92d = and i32 %v3_925, -256
  %v6_92d = or i32 %v3_92d, %v5_92d
  store i32 %v6_92d, i32* @eax, align 4
  %v5_930 = icmp eq i1 %tmp12, false
  br i1 %v5_930, label %dec_label_pc_945, label %dec_label_pc_934

dec_label_pc_934:                                 ; preds = %dec_label_pc_907
  %v2_940 = call i32 @function_bd7(i32 ptrtoint ([35 x i8]* @global_var_bf38.2181 to i32))
  %tmp13 = urem i32 %v2_940, 2
  %v4_940 = icmp ne i32 %tmp13, 0
  ret i1 %v4_940

dec_label_pc_945:                                 ; preds = %dec_label_pc_907
  %v3_94b = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp11)
  %tmp14 = icmp ult i32 %v3_94b, 74
  %v3_953 = icmp ne i1 %tmp14, true
  %v4_953 = zext i1 %v3_953 to i32
  %v6_953 = and i32 %v3_94b, -256
  %v7_953 = or i32 %v4_953, %v6_953
  %v5_956 = icmp eq i1 %v3_953, false
  br i1 %v5_956, label %bb, label %dec_label_pc_95a

bb:                                               ; preds = %dec_label_pc_945
  %v1_958 = call i32 @function_96b()
  br label %dec_label_pc_95a

dec_label_pc_95a:                                 ; preds = %bb, %dec_label_pc_945
  %v3_95a = phi i32 [ %v1_958, %bb ], [ %v7_953, %dec_label_pc_945 ]
  %tmp15 = urem i32 %v3_95a, 2
  %v4_95a = icmp ne i32 %tmp15, 0
  ret i1 %v4_95a

; uselistorder directives
  uselistorder i32 %v3_94b, { 1, 0 }
  uselistorder i32 %v3_925, { 1, 0 }
}

define i32 @function_966() local_unnamed_addr {
dec_label_pc_966:
  %v1_966 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_966
}

define i32 @function_96b() local_unnamed_addr {
dec_label_pc_96b:
  %eax.global-to-local = alloca i32, align 4
  %v0_96b = load i32, i32* @ebp, align 4
  %v1_96b = add i32 %v0_96b, -44
  %v2_96b = inttoptr i32 %v1_96b to i32*
  %v3_96b = load i32, i32* %v2_96b, align 4
  store i32 %v3_96b, i32* %eax.global-to-local, align 4
  %tmp4 = inttoptr i32 %v3_96b to i32*
  %v3_971 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp4)
  %v1_976 = add i32 %v3_971, -1
  store i32 %v1_976, i32* %eax.global-to-local, align 4
  %v0_97d = load i32, i32* @ebp, align 4
  %v1_97d = add i32 %v0_97d, -44
  %v2_97d = inttoptr i32 %v1_97d to i32*
  %v3_97d = load i32, i32* %v2_97d, align 4
  store i32 %v3_97d, i32* %eax.global-to-local, align 4
  %tmp6 = inttoptr i32 %v3_97d to i32*
  %v4_983 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp6, i32 %v1_976)
  store i32 %v4_983, i32* %eax.global-to-local, align 4
  %v1_988 = inttoptr i32 %v4_983 to i8*
  %v2_988 = load i8, i8* %v1_988, align 1
  %tmp8 = urem i8 %v2_988, -128
  %v1_98b = zext i8 %tmp8 to i32
  store i32 %v1_98b, i32* %eax.global-to-local, align 4
  %v2_98e = load i32, i32* @ebp, align 4
  %v3_98e = add i32 %v2_98e, -13
  %v4_98e = inttoptr i32 %v3_98e to i8*
  store i8 %tmp8, i8* %v4_98e, align 1
  %v0_991 = load i32, i32* @ebp, align 4
  %v1_991 = add i32 %v0_991, -13
  %v2_991 = inttoptr i32 %v1_991 to i8*
  %v3_991 = load i8, i8* %v2_991, align 1
  %v10_991 = icmp eq i8 %v3_991, 0
  br i1 %v10_991, label %dec_label_pc_99d, label %dec_label_pc_997

dec_label_pc_997:                                 ; preds = %dec_label_pc_96b
  %v3_997 = load i8, i8* %v2_991, align 1
  %tmp9 = icmp ult i8 %v3_997, 4
  br i1 %tmp9, label %bb, label %dec_label_pc_99d

bb:                                               ; preds = %dec_label_pc_997
  %v3_99b = call i32 @function_9ae()
  store i32 %v3_99b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_99d

dec_label_pc_99d:                                 ; preds = %bb, %dec_label_pc_997, %dec_label_pc_96b
  %v3_99d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_99d

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
}

define i32 @function_9a9() local_unnamed_addr {
dec_label_pc_9a9:
  %v1_9a9 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_9a9
}

define i32 @function_9ae() local_unnamed_addr {
dec_label_pc_9ae:
  %v0_9b6 = load i32, i32* @ebp, align 4
  %v1_9b6 = add i32 %v0_9b6, -44
  %v2_9b6 = inttoptr i32 %v1_9b6 to i32*
  %v3_9b6 = load i32, i32* %v2_9b6, align 4
  %tmp5 = inttoptr i32 %v3_9b6 to i32*
  %v4_9bc = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp5, i32 0)
  %v1_9c1 = inttoptr i32 %v4_9bc to i8*
  %v2_9c1 = load i8, i8* %v1_9c1, align 1
  %v10_9c4 = icmp eq i8 %v2_9c1, 48
  %v1_9c6 = icmp eq i1 %v10_9c4, false
  %v2_9c6 = zext i1 %v1_9c6 to i32
  %v5_9c9 = icmp eq i1 %v1_9c6, false
  br i1 %v5_9c9, label %bb, label %dec_label_pc_9cd

bb:                                               ; preds = %dec_label_pc_9ae
  %v1_9cb = call i32 @function_9de()
  br label %dec_label_pc_9cd

dec_label_pc_9cd:                                 ; preds = %bb, %dec_label_pc_9ae
  %v3_9cd = phi i32 [ %v1_9cb, %bb ], [ %v2_9c6, %dec_label_pc_9ae ]
  ret i32 %v3_9cd
}

define i32 @function_9d9() local_unnamed_addr {
dec_label_pc_9d9:
  %v1_9d9 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_9d9
}

define i32 @function_9de() local_unnamed_addr {
dec_label_pc_9de:
  %v0_9e6 = load i32, i32* @ebp, align 4
  %v1_9e6 = add i32 %v0_9e6, -44
  %v2_9e6 = inttoptr i32 %v1_9e6 to i32*
  %v3_9e6 = load i32, i32* %v2_9e6, align 4
  %tmp5 = inttoptr i32 %v3_9e6 to i32*
  %v4_9ec = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp5, i32 1)
  %v1_9f1 = inttoptr i32 %v4_9ec to i8*
  %v2_9f1 = load i8, i8* %v1_9f1, align 1
  %v3_9f1 = zext i8 %v2_9f1 to i32
  store i32 %v3_9f1, i32* @ebx, align 4
  %v0_9f7 = load i32, i32* @ebp, align 4
  %v1_9f7 = add i32 %v0_9f7, -44
  %v2_9f7 = inttoptr i32 %v1_9f7 to i32*
  %v3_9f7 = load i32, i32* %v2_9f7, align 4
  %tmp6 = inttoptr i32 %v3_9f7 to i32*
  %v3_9fd = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp6)
  %v1_a02 = add i32 %v3_9fd, -3
  %v0_a05 = load i32, i32* @ebx, align 4
  %v12_a05 = icmp eq i32 %v0_a05, %v1_a02
  %v1_a07 = icmp eq i1 %v12_a05, false
  %v2_a07 = zext i1 %v1_a07 to i32
  %v4_a07 = and i32 %v1_a02, -256
  %v5_a07 = or i32 %v2_a07, %v4_a07
  %v5_a0a = icmp eq i1 %v1_a07, false
  br i1 %v5_a0a, label %bb, label %dec_label_pc_a0e

bb:                                               ; preds = %dec_label_pc_9de
  %v1_a0c = call i32 @function_a1f()
  br label %dec_label_pc_a0e

dec_label_pc_a0e:                                 ; preds = %bb, %dec_label_pc_9de
  %v3_a0e = phi i32 [ %v1_a0c, %bb ], [ %v5_a07, %dec_label_pc_9de ]
  ret i32 %v3_a0e

; uselistorder directives
  uselistorder i32 %v1_a02, { 1, 0 }
}

define i32 @function_a1a() local_unnamed_addr {
dec_label_pc_a1a:
  %v1_a1a = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_a1a
}

define i32 @function_a1f() local_unnamed_addr {
dec_label_pc_a1f:
  %v0_a27 = load i32, i32* @ebp, align 4
  %v1_a27 = add i32 %v0_a27, -44
  %v2_a27 = inttoptr i32 %v1_a27 to i32*
  %v3_a27 = load i32, i32* %v2_a27, align 4
  %tmp5 = inttoptr i32 %v3_a27 to i32*
  %v4_a2d = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp5, i32 3)
  %v1_a32 = inttoptr i32 %v4_a2d to i8*
  %v2_a32 = load i8, i8* %v1_a32, align 1
  %v3_a32 = zext i8 %v2_a32 to i32
  %v1_a38 = load i32, i32* @ebp, align 4
  %v2_a38 = add i32 %v1_a38, -32
  %v3_a38 = inttoptr i32 %v2_a38 to i32*
  store i32 %v3_a32, i32* %v3_a38, align 4
  %v0_a3b = load i32, i32* @ebp, align 4
  %v1_a3b = add i32 %v0_a3b, -32
  %v2_a3b = inttoptr i32 %v1_a3b to i32*
  %v3_a3b = load i32, i32* %v2_a3b, align 4
  %v1_a3e = add i32 %v3_a3b, 5
  store i32 %v1_a3e, i32* @ebx, align 4
  %v1_a41 = add i32 %v0_a3b, -44
  %v2_a41 = inttoptr i32 %v1_a41 to i32*
  %v3_a41 = load i32, i32* %v2_a41, align 4
  %tmp6 = inttoptr i32 %v3_a41 to i32*
  %v3_a47 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp6)
  %v0_a4c = load i32, i32* @ebx, align 4
  %v7_a4c = icmp ult i32 %v0_a4c, %v3_a47
  %v1_a4e = icmp eq i1 %v7_a4c, false
  %v2_a4e = zext i1 %v1_a4e to i32
  %v4_a4e = and i32 %v3_a47, -256
  %v5_a4e = or i32 %v2_a4e, %v4_a4e
  %v5_a51 = icmp eq i1 %v1_a4e, false
  br i1 %v5_a51, label %bb, label %dec_label_pc_a55

bb:                                               ; preds = %dec_label_pc_a1f
  %v1_a53 = call i32 @function_a66()
  br label %dec_label_pc_a55

dec_label_pc_a55:                                 ; preds = %bb, %dec_label_pc_a1f
  %v3_a55 = phi i32 [ %v1_a53, %bb ], [ %v5_a4e, %dec_label_pc_a1f ]
  ret i32 %v3_a55
}

define i32 @function_a61() local_unnamed_addr {
dec_label_pc_a61:
  %v1_a61 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_a61
}

define i32 @function_a66() local_unnamed_addr {
dec_label_pc_a66:
  %v0_a66 = load i32, i32* @ebp, align 4
  %v1_a66 = add i32 %v0_a66, -32
  %v2_a66 = inttoptr i32 %v1_a66 to i32*
  %v3_a66 = load i32, i32* %v2_a66, align 4
  %v1_a69 = add i32 %v3_a66, 5
  %v1_a70 = add i32 %v0_a66, -44
  %v2_a70 = inttoptr i32 %v1_a70 to i32*
  %v3_a70 = load i32, i32* %v2_a70, align 4
  %tmp6 = inttoptr i32 %v3_a70 to i32*
  %v4_a76 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp6, i32 %v1_a69)
  %v1_a7b = inttoptr i32 %v4_a76 to i8*
  %v2_a7b = load i8, i8* %v1_a7b, align 1
  %v3_a7b = zext i8 %v2_a7b to i32
  %v1_a81 = load i32, i32* @ebp, align 4
  %v2_a81 = add i32 %v1_a81, -28
  %v3_a81 = inttoptr i32 %v2_a81 to i32*
  store i32 %v3_a7b, i32* %v3_a81, align 4
  %v0_a84 = load i32, i32* @ebp, align 4
  %v1_a84 = add i32 %v0_a84, -28
  %v2_a84 = inttoptr i32 %v1_a84 to i32*
  %v3_a84 = load i32, i32* %v2_a84, align 4
  %v1_a87 = add i32 %v0_a84, -32
  %v2_a87 = inttoptr i32 %v1_a87 to i32*
  %v3_a87 = load i32, i32* %v2_a87, align 4
  %v2_a8a = add i32 %v3_a87, %v3_a84
  %v1_a8c = add i32 %v2_a8a, 7
  store i32 %v1_a8c, i32* @ebx, align 4
  %v1_a8f = add i32 %v0_a84, -44
  %v2_a8f = inttoptr i32 %v1_a8f to i32*
  %v3_a8f = load i32, i32* %v2_a8f, align 4
  %tmp7 = inttoptr i32 %v3_a8f to i32*
  %v3_a95 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp7)
  %v0_a9a = load i32, i32* @ebx, align 4
  %v12_a9a = icmp eq i32 %v0_a9a, %v3_a95
  %v1_a9c = icmp eq i1 %v12_a9a, false
  %v2_a9c = zext i1 %v1_a9c to i32
  %v4_a9c = and i32 %v3_a95, -256
  %v5_a9c = or i32 %v2_a9c, %v4_a9c
  store i32 %v5_a9c, i32* @eax, align 4
  %v5_a9f = icmp eq i1 %v1_a9c, false
  br i1 %v5_a9f, label %dec_label_pc_ab4, label %dec_label_pc_aa3

dec_label_pc_aa3:                                 ; preds = %dec_label_pc_a66
  %v2_aaf = call i32 @function_bd7(i32 ptrtoint ([45 x i8]* @global_var_c030.2187 to i32))
  ret i32 %v2_aaf

dec_label_pc_ab4:                                 ; preds = %dec_label_pc_a66
  %v0_abc = load i32, i32* @ebp, align 4
  %v1_abc = add i32 %v0_abc, -44
  %v2_abc = inttoptr i32 %v1_abc to i32*
  %v3_abc = load i32, i32* %v2_abc, align 4
  %tmp8 = inttoptr i32 %v3_abc to i32*
  %v4_ac2 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp8, i32 4)
  %v1_ac7 = load i32, i32* @ebp, align 4
  %v2_ac7 = add i32 %v1_ac7, -24
  %v3_ac7 = inttoptr i32 %v2_ac7 to i32*
  store i32 %v4_ac2, i32* %v3_ac7, align 4
  %v0_aca = load i32, i32* @ebp, align 4
  %v1_aca = add i32 %v0_aca, -24
  %v2_aca = inttoptr i32 %v1_aca to i32*
  %v3_aca = load i32, i32* %v2_aca, align 4
  %v1_acd = add i32 %v3_aca, -2
  %v1_ad0 = inttoptr i32 %v1_acd to i8*
  %v2_ad0 = load i8, i8* %v1_ad0, align 1
  %v3_ad0 = zext i8 %v2_ad0 to i32
  store i32 %v3_ad0, i32* @eax, align 4
  %v11_ad3 = icmp eq i8 %v2_ad0, 2
  br i1 %v11_ad3, label %bb, label %dec_label_pc_ad7

bb:                                               ; preds = %dec_label_pc_ab4
  %v1_ad5 = call i32 @function_ae8()
  br label %dec_label_pc_ad7

dec_label_pc_ad7:                                 ; preds = %bb, %dec_label_pc_ab4
  %v3_ad7 = phi i32 [ %v1_ad5, %bb ], [ %v3_ad0, %dec_label_pc_ab4 ]
  ret i32 %v3_ad7

; uselistorder directives
  uselistorder i32 %v3_a95, { 1, 0 }
}

define i32 @function_ae3() local_unnamed_addr {
dec_label_pc_ae3:
  %v1_ae3 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_ae3
}

define i32 @function_ae8() local_unnamed_addr {
dec_label_pc_ae8:
  %v0_ae8 = load i32, i32* @ebp, align 4
  %v1_ae8 = add i32 %v0_ae8, -32
  %v2_ae8 = inttoptr i32 %v1_ae8 to i32*
  %v3_ae8 = load i32, i32* %v2_ae8, align 4
  %v10_ae8 = icmp eq i32 %v3_ae8, 0
  %v1_aec = icmp eq i1 %v10_ae8, false
  br i1 %v1_aec, label %bb, label %dec_label_pc_ae8.dec_label_pc_aee_crit_edge

dec_label_pc_ae8.dec_label_pc_aee_crit_edge:      ; preds = %dec_label_pc_ae8
  %v3_aee.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_aee

bb:                                               ; preds = %dec_label_pc_ae8
  %v2_aec = call i32 @function_aff()
  br label %dec_label_pc_aee

dec_label_pc_aee:                                 ; preds = %dec_label_pc_ae8.dec_label_pc_aee_crit_edge, %bb
  %v3_aee = phi i32 [ %v3_aee.pre, %dec_label_pc_ae8.dec_label_pc_aee_crit_edge ], [ %v2_aec, %bb ]
  ret i32 %v3_aee

; uselistorder directives
  uselistorder label %dec_label_pc_aee, { 1, 0 }
}

define i32 @function_afa() local_unnamed_addr {
dec_label_pc_afa:
  %v1_afa = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_afa
}

define i32 @function_aff() local_unnamed_addr {
dec_label_pc_aff:
  %v0_aff = load i32, i32* @ebp, align 4
  %v1_aff = add i32 %v0_aff, -24
  %v2_aff = inttoptr i32 %v1_aff to i32*
  %v3_aff = load i32, i32* %v2_aff, align 4
  %v1_b02 = inttoptr i32 %v3_aff to i8*
  %v2_b02 = load i8, i8* %v1_b02, align 1
  %v3_b02 = zext i8 %v2_b02 to i32
  %v6_b05 = icmp slt i8 %v2_b02, 0
  %v1_b07 = icmp eq i1 %v6_b05, false
  br i1 %v1_b07, label %bb, label %dec_label_pc_b09

bb:                                               ; preds = %dec_label_pc_aff
  %v2_b07 = call i32 @function_b1a()
  br label %dec_label_pc_b09

dec_label_pc_b09:                                 ; preds = %bb, %dec_label_pc_aff
  %v3_b09 = phi i32 [ %v2_b07, %bb ], [ %v3_b02, %dec_label_pc_aff ]
  ret i32 %v3_b09
}

define i32 @function_b15() local_unnamed_addr {
dec_label_pc_b15:
  %v1_b15 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_b15
}

define i32 @function_b1a() local_unnamed_addr {
dec_label_pc_b1a:
  %v0_b1a = load i32, i32* @ebp, align 4
  %v1_b1a = add i32 %v0_b1a, -32
  %v2_b1a = inttoptr i32 %v1_b1a to i32*
  %v3_b1a = load i32, i32* %v2_b1a, align 4
  %tmp10 = or i32 %v3_b1a, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  br i1 %tmp11, label %bb, label %dec_label_pc_b20

bb:                                               ; preds = %dec_label_pc_b1a
  %v3_b1e = call i32 @function_b48()
  %v0_b20.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b20

dec_label_pc_b20:                                 ; preds = %bb, %dec_label_pc_b1a
  %v0_b20 = phi i32 [ %v0_b20.pre, %bb ], [ %v0_b1a, %dec_label_pc_b1a ]
  %v1_b20 = add i32 %v0_b20, -24
  %v2_b20 = inttoptr i32 %v1_b20 to i32*
  %v3_b20 = load i32, i32* %v2_b20, align 4
  %v1_b23 = inttoptr i32 %v3_b20 to i8*
  %v2_b23 = load i8, i8* %v1_b23, align 1
  %v5_b26 = icmp eq i8 %v2_b23, 0
  %v1_b28 = icmp eq i1 %v5_b26, false
  br i1 %v1_b28, label %bb7, label %dec_label_pc_b2a

bb7:                                              ; preds = %dec_label_pc_b20
  %v2_b28 = call i32 @function_b48()
  %v0_b2a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_b2a

dec_label_pc_b2a:                                 ; preds = %bb7, %dec_label_pc_b20
  %v0_b2a = phi i32 [ %v0_b2a.pre, %bb7 ], [ %v0_b20, %dec_label_pc_b20 ]
  %v1_b2a = add i32 %v0_b2a, -24
  %v2_b2a = inttoptr i32 %v1_b2a to i32*
  %v3_b2a = load i32, i32* %v2_b2a, align 4
  %v1_b2d = add i32 %v3_b2a, 1
  %v1_b30 = inttoptr i32 %v1_b2d to i8*
  %v2_b30 = load i8, i8* %v1_b30, align 1
  %v3_b30 = zext i8 %v2_b30 to i32
  %v6_b33 = icmp slt i8 %v2_b30, 0
  br i1 %v6_b33, label %bb9, label %dec_label_pc_b37

bb9:                                              ; preds = %dec_label_pc_b2a
  %v1_b35 = call i32 @function_b48()
  br label %dec_label_pc_b37

dec_label_pc_b37:                                 ; preds = %bb9, %dec_label_pc_b2a
  %v3_b37 = phi i32 [ %v1_b35, %bb9 ], [ %v3_b30, %dec_label_pc_b2a ]
  ret i32 %v3_b37

; uselistorder directives
  uselistorder i32 ()* @function_b48, { 2, 1, 0 }
}

define i32 @function_b43() local_unnamed_addr {
dec_label_pc_b43:
  %v1_b43 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_b43
}

define i32 @function_b48() local_unnamed_addr {
dec_label_pc_b48:
  %v0_b48 = load i32, i32* @ebp, align 4
  %v1_b48 = add i32 %v0_b48, -32
  %v2_b48 = inttoptr i32 %v1_b48 to i32*
  %v3_b48 = load i32, i32* %v2_b48, align 4
  %v1_b4b = add i32 %v3_b48, 6
  %v1_b52 = add i32 %v0_b48, -44
  %v2_b52 = inttoptr i32 %v1_b52 to i32*
  %v3_b52 = load i32, i32* %v2_b52, align 4
  %tmp6 = inttoptr i32 %v3_b52 to i32*
  %v4_b58 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %tmp6, i32 %v1_b4b)
  %v1_b5d = load i32, i32* @ebp, align 4
  %v2_b5d = add i32 %v1_b5d, -20
  %v3_b5d = inttoptr i32 %v2_b5d to i32*
  store i32 %v4_b58, i32* %v3_b5d, align 4
  %v0_b60 = load i32, i32* @ebp, align 4
  %v1_b60 = add i32 %v0_b60, -20
  %v2_b60 = inttoptr i32 %v1_b60 to i32*
  %v3_b60 = load i32, i32* %v2_b60, align 4
  %v1_b63 = add i32 %v3_b60, -2
  %v1_b66 = inttoptr i32 %v1_b63 to i8*
  %v2_b66 = load i8, i8* %v1_b66, align 1
  %v3_b66 = zext i8 %v2_b66 to i32
  store i32 %v3_b66, i32* @eax, align 4
  %v11_b69 = icmp eq i8 %v2_b66, 2
  br i1 %v11_b69, label %bb, label %dec_label_pc_b6d

bb:                                               ; preds = %dec_label_pc_b48
  %v1_b6b = call i32 @function_b7b()
  br label %dec_label_pc_b6d

dec_label_pc_b6d:                                 ; preds = %bb, %dec_label_pc_b48
  %v3_b6d = phi i32 [ %v1_b6b, %bb ], [ %v3_b66, %dec_label_pc_b48 ]
  ret i32 %v3_b6d
}

define i32 @function_b79() local_unnamed_addr {
dec_label_pc_b79:
  %v1_b79 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_b79
}

define i32 @function_b7b() local_unnamed_addr {
dec_label_pc_b7b:
  %v0_b7b = load i32, i32* @ebp, align 4
  %v1_b7b = add i32 %v0_b7b, -28
  %v2_b7b = inttoptr i32 %v1_b7b to i32*
  %v3_b7b = load i32, i32* %v2_b7b, align 4
  %v10_b7b = icmp eq i32 %v3_b7b, 0
  %v1_b7f = icmp eq i1 %v10_b7b, false
  br i1 %v1_b7f, label %bb, label %dec_label_pc_b7b.dec_label_pc_b81_crit_edge

dec_label_pc_b7b.dec_label_pc_b81_crit_edge:      ; preds = %dec_label_pc_b7b
  %v3_b81.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_b81

bb:                                               ; preds = %dec_label_pc_b7b
  %v2_b7f = call i32 @function_b8f()
  br label %dec_label_pc_b81

dec_label_pc_b81:                                 ; preds = %dec_label_pc_b7b.dec_label_pc_b81_crit_edge, %bb
  %v3_b81 = phi i32 [ %v3_b81.pre, %dec_label_pc_b7b.dec_label_pc_b81_crit_edge ], [ %v2_b7f, %bb ]
  ret i32 %v3_b81

; uselistorder directives
  uselistorder label %dec_label_pc_b81, { 1, 0 }
}

define i32 @function_b8d() local_unnamed_addr {
dec_label_pc_b8d:
  %v1_b8d = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_b8d
}

define i32 @function_b8f() local_unnamed_addr {
dec_label_pc_b8f:
  %v0_b8f = load i32, i32* @ebp, align 4
  %v1_b8f = add i32 %v0_b8f, -20
  %v2_b8f = inttoptr i32 %v1_b8f to i32*
  %v3_b8f = load i32, i32* %v2_b8f, align 4
  %v1_b92 = inttoptr i32 %v3_b8f to i8*
  %v2_b92 = load i8, i8* %v1_b92, align 1
  %v3_b92 = zext i8 %v2_b92 to i32
  %v6_b95 = icmp slt i8 %v2_b92, 0
  %v1_b97 = icmp eq i1 %v6_b95, false
  br i1 %v1_b97, label %bb, label %dec_label_pc_b99

bb:                                               ; preds = %dec_label_pc_b8f
  %v2_b97 = call i32 @function_ba7()
  br label %dec_label_pc_b99

dec_label_pc_b99:                                 ; preds = %bb, %dec_label_pc_b8f
  %v3_b99 = phi i32 [ %v2_b97, %bb ], [ %v3_b92, %dec_label_pc_b8f ]
  ret i32 %v3_b99
}

define i32 @function_ba5() local_unnamed_addr {
dec_label_pc_ba5:
  %v1_ba5 = call i32 @function_bd7(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_ba5
}

define i32 @function_ba7() local_unnamed_addr {
dec_label_pc_ba7:
  %v0_ba7 = load i32, i32* @ebp, align 4
  %v1_ba7 = add i32 %v0_ba7, -28
  %v2_ba7 = inttoptr i32 %v1_ba7 to i32*
  %v3_ba7 = load i32, i32* %v2_ba7, align 4
  %tmp5 = or i32 %v3_ba7, 1
  %tmp6 = icmp eq i32 %tmp5, 1
  br i1 %tmp6, label %dec_label_pc_bd2, label %dec_label_pc_bad

dec_label_pc_bad:                                 ; preds = %dec_label_pc_ba7
  %v1_bad = add i32 %v0_ba7, -20
  %v2_bad = inttoptr i32 %v1_bad to i32*
  %v3_bad = load i32, i32* %v2_bad, align 4
  %v1_bb0 = inttoptr i32 %v3_bad to i8*
  %v2_bb0 = load i8, i8* %v1_bb0, align 1
  %v5_bb3 = icmp eq i8 %v2_bb0, 0
  %v1_bb5 = icmp eq i1 %v5_bb3, false
  br i1 %v1_bb5, label %dec_label_pc_bd2, label %dec_label_pc_bb7

dec_label_pc_bb7:                                 ; preds = %dec_label_pc_bad
  %v3_bb7 = load i32, i32* %v2_bad, align 4
  %v1_bba = add i32 %v3_bb7, 1
  %v1_bbd = inttoptr i32 %v1_bba to i8*
  %v2_bbd = load i8, i8* %v1_bbd, align 1
  %v3_bbd = zext i8 %v2_bbd to i32
  store i32 %v3_bbd, i32* @eax, align 4
  %v6_bc0 = icmp slt i8 %v2_bbd, 0
  br i1 %v6_bc0, label %dec_label_pc_bd2, label %dec_label_pc_bc4

dec_label_pc_bc4:                                 ; preds = %dec_label_pc_bb7
  %v2_bd0 = call i32 @function_bd7(i32 ptrtoint ([52 x i8]* @global_var_c1a4.2195 to i32))
  ret i32 %v2_bd0

dec_label_pc_bd2:                                 ; preds = %dec_label_pc_bb7, %dec_label_pc_bad, %dec_label_pc_ba7
  ret i32 1

; uselistorder directives
  uselistorder i32 (i32)* @function_bd7, { 2, 14, 13, 12, 11, 10, 9, 8, 1, 7, 6, 5, 4, 3, 0 }
}

define i32 @function_bd7(i32 %arg1) local_unnamed_addr {
dec_label_pc_bd7:
  store i32 %arg1, i32* @ebx, align 4
  %v0_bed = load i32, i32* @eax, align 4
  ret i32 %v0_bed
}

define i1 @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %stack, %CScript %script, i32 %txTo, i32 %nIn, i32 %flags, i32 %nHashType) local_unnamed_addr {
dec_label_pc_bee:
  %tmp3 = extractvalue %CScript %script, 0
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-856 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  %opcode_-240 = alloca i32, align 4
  %opcode_-244 = alloca i32, align 4
  %pbegincodehash_-248 = alloca %"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>.1", align 8
  %pend_-252 = alloca %"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>", align 8
  %v2_c3b = ptrtoint %"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>"* %pend_-252 to i32
  %v1_c44 = call i32 @_ZN11CAutoBN_CTXC1Ev(i32 %v2_c3b)
  %v2_c4f = ptrtoint %"__normal_iterator<constunsignedchar*,std::vector<unsignedchar,std::allocator<unsignedchar>>>.1"* %pbegincodehash_-248 to i32
  %v2_c5c = inttoptr i32 %tmp3 to i32*
  %v3_c5c = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v2_c4f, i32* %v2_c5c)
  %v2_c6a = ptrtoint i32* %opcode_-244 to i32
  %v2_c77 = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %v2_c6a, i32 %tmp3)
  %v2_c85 = ptrtoint i32* %opcode_-240 to i32
  %v3_c92 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v2_c85, i32* %v2_c5c)
  %v2_c9a = ptrtoint i32* %stack_var_-416 to i32
  %v1_ca3 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v2_c9a)
  %v2_ca8 = ptrtoint i32* %stack_var_-856 to i32
  %v1_cb1 = call i32 @_ZNSt6vectorIbSaIbEEC1Ev(i32 %v2_ca8)
  %v2_cb6 = ptrtoint i32* %stack_var_-404 to i32
  %v1_cbf = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_cb6)
  %v2_ccd = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v2_c5c)
  %tmp49 = icmp ult i32 %v2_ccd, 10001
  %v3_cd7 = icmp ne i1 %tmp49, true
  %v5_cda = icmp eq i1 %v3_cd7, false
  br i1 %v5_cda, label %dec_label_pc_ce8, label %dec_label_pc_cde

dec_label_pc_cde:                                 ; preds = %dec_label_pc_bee
  %v0_ce3 = call i32 @function_34f8()
  %tmp50 = urem i32 %v0_ce3, 2
  %v2_ce3 = icmp ne i32 %tmp50, 0
  ret i1 %v2_ce3

dec_label_pc_ce8:                                 ; preds = %dec_label_pc_bee
  %v1_d03 = call i32 @function_34b7(i32 0)
  %tmp51 = urem i32 %v1_d03, 2
  %v3_d03 = icmp ne i32 %tmp51, 0
  ret i1 %v3_d03

; uselistorder directives
  uselistorder i32 %tmp3, { 1, 0 }
}

define i32 @function_f6a() local_unnamed_addr {
dec_label_pc_f6a:
  %v0_f6a = load i32, i32* @ebp, align 4
  %v1_f6a = add i32 %v0_f6a, -232
  %v2_f6a = inttoptr i32 %v1_f6a to i32*
  %v3_f6a = load i32, i32* %v2_f6a, align 4
  %v1_f70 = add i32 %v3_f6a, -80
  %v1_f77 = add i32 %v0_f6a, -832
  %v2_f80 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_f77, i32 %v1_f70)
  %v0_f85 = load i32, i32* @ebp, align 4
  %v1_f85 = add i32 %v0_f85, -388
  %v1_f8b = add i32 %v0_f85, -832
  %v2_f98 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_f85, i32 %v1_f8b)
  %v0_fa0 = load i32, i32* @ebp, align 4
  %v1_fa0 = add i32 %v0_fa0, -388
  %v1_faa = add i32 %v0_fa0, -860
  %v2_faa = inttoptr i32 %v1_faa to i32*
  %v3_faa = load i32, i32* %v2_faa, align 4
  %v2_fb3 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_faa, i32 %v1_fa0)
  %v0_fb8 = load i32, i32* @ebp, align 4
  %v1_fb8 = add i32 %v0_fb8, -388
  %v1_fc1 = inttoptr i32 %v1_fb8 to i32*
  %v2_fc1 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_fc1)
  %v0_fc6 = load i32, i32* @ebp, align 4
  %v1_fc6 = add i32 %v0_fc6, -832
  %v1_fcf = call i32 @_ZN7CBigNumD1Ev(i32 %v1_fc6)
  %v0_fd4 = call i32 @function_3484()
  ret i32 %v0_fd4
}

define i32 @function_fd9() local_unnamed_addr {
dec_label_pc_fd9:
  %v0_fd9 = load i32, i32* @ebp, align 4
  %v1_fd9 = add i32 %v0_fd9, -69
  %v2_fd9 = inttoptr i32 %v1_fd9 to i8*
  store i8 0, i8* %v2_fd9, align 1
  %v0_fdd = load i32, i32* @ebp, align 4
  %v1_fdd = add i32 %v0_fdd, -64
  %v2_fdd = inttoptr i32 %v1_fdd to i8*
  %v3_fdd = load i8, i8* %v2_fdd, align 1
  %v10_fdd = icmp eq i8 %v3_fdd, 0
  br i1 %v10_fdd, label %dec_label_pc_1055, label %dec_label_pc_fe3

dec_label_pc_fe3:                                 ; preds = %dec_label_pc_fd9
  %v1_fe3 = add i32 %v0_fdd, -860
  %v2_fe3 = inttoptr i32 %v1_fe3 to i32*
  %v3_fe3 = load i32, i32* %v2_fe3, align 4
  %v1_fec = inttoptr i32 %v3_fe3 to i32*
  %v2_fec = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_fec)
  %v1_ff1 = icmp eq i32 %v2_fec, 0
  %v5_ff6 = icmp eq i1 %v1_ff1, false
  br i1 %v5_ff6, label %dec_label_pc_1004, label %dec_label_pc_ffa

dec_label_pc_ffa:                                 ; preds = %dec_label_pc_fe3
  %v0_fff = call i32 @function_34f8()
  ret i32 %v0_fff

dec_label_pc_1004:                                ; preds = %dec_label_pc_fe3
  %v0_1004 = load i32, i32* @ebp, align 4
  %v1_1004 = add i32 %v0_1004, -860
  %v2_1004 = inttoptr i32 %v1_1004 to i32*
  %v3_1004 = load i32, i32* %v2_1004, align 4
  %v1_100d = inttoptr i32 %v3_1004 to i32*
  %v2_100d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_100d)
  %v1_1012 = add i32 %v2_100d, -1
  %v0_1019 = load i32, i32* @ebp, align 4
  %v1_1019 = add i32 %v0_1019, -860
  %v2_1019 = inttoptr i32 %v1_1019 to i32*
  %v3_1019 = load i32, i32* %v2_1019, align 4
  %v2_1022 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1019, i32 %v1_1012)
  %v1_1027 = load i32, i32* @ebp, align 4
  %v2_1027 = add i32 %v1_1027, -108
  %v3_1027 = inttoptr i32 %v2_1027 to i32*
  store i32 %v2_1022, i32* %v3_1027, align 4
  %v0_102a = load i32, i32* @ebp, align 4
  %v1_102a = add i32 %v0_102a, -108
  %v2_102a = inttoptr i32 %v1_102a to i32*
  %v3_102a = load i32, i32* %v2_102a, align 4
  %v1_1030 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_102a, 0
  %v2_1030 = call i1 @_Z10CastToBoolRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_1030)
  %v1_1035 = sext i1 %v2_1030 to i8
  %v2_1035 = load i32, i32* @ebp, align 4
  %v3_1035 = add i32 %v2_1035, -69
  %v4_1035 = inttoptr i32 %v3_1035 to i8*
  store i8 %v1_1035, i8* %v4_1035, align 1
  %v0_1038 = load i32, i32* @ebp, align 4
  %v1_1038 = add i32 %v0_1038, -232
  %v2_1038 = inttoptr i32 %v1_1038 to i32*
  %v3_1038 = load i32, i32* %v2_1038, align 4
  %v10_103e = icmp eq i32 %v3_1038, 100
  %v1_1041 = icmp eq i1 %v10_103e, false
  br i1 %v1_1041, label %dec_label_pc_1047, label %dec_label_pc_1043

dec_label_pc_1043:                                ; preds = %dec_label_pc_1004
  %v1_1043 = add i32 %v0_1038, -69
  %v2_1043 = inttoptr i32 %v1_1043 to i8*
  %v3_1043 = load i8, i8* %v2_1043, align 1
  %v4_1043 = xor i8 %v3_1043, 1
  store i8 %v4_1043, i8* %v2_1043, align 1
  %v0_1047.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1047

dec_label_pc_1047:                                ; preds = %dec_label_pc_1043, %dec_label_pc_1004
  %v0_1047 = phi i32 [ %v0_1047.pre, %dec_label_pc_1043 ], [ %v0_1038, %dec_label_pc_1004 ]
  %v1_1047 = add i32 %v0_1047, -860
  %v2_1047 = inttoptr i32 %v1_1047 to i32*
  %v3_1047 = load i32, i32* %v2_1047, align 4
  %v1_1050 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_1047, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_1050)
  %v0_1055.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1055

dec_label_pc_1055:                                ; preds = %dec_label_pc_1047, %dec_label_pc_fd9
  %v0_1055 = phi i32 [ %v0_1055.pre, %dec_label_pc_1047 ], [ %v0_fdd, %dec_label_pc_fd9 ]
  %v1_1055 = add i32 %v0_1055, -69
  %v2_1055 = inttoptr i32 %v1_1055 to i8*
  %v3_1055 = load i8, i8* %v2_1055, align 1
  %v1_105d = add i32 %v0_1055, -852
  %v3_1066 = call i32 @_ZNSt6vectorIbSaIbEE9push_backEb(i32 %v1_105d, i8 %v3_1055)
  %v0_106b = call i32 @function_3484()
  ret i32 %v0_106b

; uselistorder directives
  uselistorder i32 %v0_1055, { 1, 0 }
}

define i32 @function_1070() local_unnamed_addr {
dec_label_pc_1070:
  %v0_1070 = load i32, i32* @ebp, align 4
  %v1_1070 = add i32 %v0_1070, -852
  %v1_1079 = call i32 @_ZNKSt6vectorIbSaIbEE5emptyEv(i32 %v1_1070)
  %v4_107e = trunc i32 %v1_1079 to i8
  %v5_107e = icmp eq i8 %v4_107e, 0
  br i1 %v5_107e, label %dec_label_pc_108c, label %dec_label_pc_1082

dec_label_pc_1082:                                ; preds = %dec_label_pc_1070
  %v0_1087 = call i32 @function_34f8()
  ret i32 %v0_1087

dec_label_pc_108c:                                ; preds = %dec_label_pc_1070
  %v0_108c = load i32, i32* @ebp, align 4
  %v1_108c = add i32 %v0_108c, -256
  %v1_1092 = add i32 %v0_108c, -852
  %v2_109f = call i32 @_ZNSt6vectorIbSaIbEE4backEv(i32 %v1_108c, i32 %v1_1092)
  %v0_10a7 = load i32, i32* @ebp, align 4
  %v1_10a7 = add i32 %v0_10a7, -256
  %v1_10b0 = inttoptr i32 %v1_10a7 to i32*
  %v2_10b0 = call i32 @_ZNKSt14_Bit_referencecvbEv(i32* %v1_10b0)
  %v1_10b5 = xor i32 %v2_10b0, 1
  %v1_10b8 = urem i32 %v1_10b5, 256
  %v0_10bb = load i32, i32* @ebp, align 4
  %v1_10bb = add i32 %v0_10bb, -264
  %v1_10c1 = add i32 %v0_10bb, -852
  %v2_10ce = call i32 @_ZNSt6vectorIbSaIbEE4backEv(i32 %v1_10bb, i32 %v1_10c1)
  %v0_10da = load i32, i32* @ebp, align 4
  %v1_10da = add i32 %v0_10da, -264
  %v2_10e3 = inttoptr i32 %v1_10da to i32*
  %v3_10e3 = call i32 @_ZNSt14_Bit_referenceaSEb(i32* %v2_10e3, i32 %v1_10b8)
  %v0_10e8 = call i32 @function_3484()
  ret i32 %v0_10e8

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIbSaIbEE4backEv, { 1, 0 }
}

define i32 @function_10ed() local_unnamed_addr {
dec_label_pc_10ed:
  %v0_10ed = load i32, i32* @ebp, align 4
  %v1_10ed = add i32 %v0_10ed, -852
  %v1_10f6 = call i32 @_ZNKSt6vectorIbSaIbEE5emptyEv(i32 %v1_10ed)
  %v4_10fb = trunc i32 %v1_10f6 to i8
  %v5_10fb = icmp eq i8 %v4_10fb, 0
  br i1 %v5_10fb, label %dec_label_pc_1109, label %dec_label_pc_10ff

dec_label_pc_10ff:                                ; preds = %dec_label_pc_10ed
  %v0_1104 = call i32 @function_34f8()
  ret i32 %v0_1104

dec_label_pc_1109:                                ; preds = %dec_label_pc_10ed
  %v0_1109 = load i32, i32* @ebp, align 4
  %v1_1109 = add i32 %v0_1109, -852
  %v1_1112 = call i32 @_ZNSt6vectorIbSaIbEE8pop_backEv(i32 %v1_1109)
  %v0_1117 = call i32 @function_3484()
  ret i32 %v0_1117
}

define i32 @function_111c() local_unnamed_addr {
dec_label_pc_111c:
  %v0_111c = load i32, i32* @ebp, align 4
  %v1_111c = add i32 %v0_111c, -860
  %v2_111c = inttoptr i32 %v1_111c to i32*
  %v3_111c = load i32, i32* %v2_111c, align 4
  %v1_1125 = inttoptr i32 %v3_111c to i32*
  %v2_1125 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1125)
  %v1_112a = icmp eq i32 %v2_1125, 0
  %v5_112f = icmp eq i1 %v1_112a, false
  br i1 %v5_112f, label %dec_label_pc_113d, label %dec_label_pc_1133

dec_label_pc_1133:                                ; preds = %dec_label_pc_111c
  %v0_1138 = call i32 @function_34f8()
  ret i32 %v0_1138

dec_label_pc_113d:                                ; preds = %dec_label_pc_111c
  %v0_113d = load i32, i32* @ebp, align 4
  %v1_113d = add i32 %v0_113d, -860
  %v2_113d = inttoptr i32 %v1_113d to i32*
  %v3_113d = load i32, i32* %v2_113d, align 4
  %v1_1146 = inttoptr i32 %v3_113d to i32*
  %v2_1146 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1146)
  %v1_114b = add i32 %v2_1146, -1
  %v0_1152 = load i32, i32* @ebp, align 4
  %v1_1152 = add i32 %v0_1152, -860
  %v2_1152 = inttoptr i32 %v1_1152 to i32*
  %v3_1152 = load i32, i32* %v2_1152, align 4
  %v2_115b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1152, i32 %v1_114b)
  %v1_1163 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v2_115b, 0
  %v2_1163 = call i1 @_Z10CastToBoolRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_1163)
  %v1_1168 = sext i1 %v2_1163 to i8
  %v2_1168 = load i32, i32* @ebp, align 4
  %v3_1168 = add i32 %v2_1168, -63
  %v4_1168 = inttoptr i32 %v3_1168 to i8*
  store i8 %v1_1168, i8* %v4_1168, align 1
  %v0_116b = load i32, i32* @ebp, align 4
  %v1_116b = add i32 %v0_116b, -63
  %v2_116b = inttoptr i32 %v1_116b to i8*
  %v3_116b = load i8, i8* %v2_116b, align 1
  %v10_116b = icmp eq i8 %v3_116b, 0
  br i1 %v10_116b, label %dec_label_pc_1184, label %dec_label_pc_1171

dec_label_pc_1171:                                ; preds = %dec_label_pc_113d
  %v1_1171 = add i32 %v0_116b, -860
  %v2_1171 = inttoptr i32 %v1_1171 to i32*
  %v3_1171 = load i32, i32* %v2_1171, align 4
  %v1_117a = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_1171, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_117a)
  %v0_117f = call i32 @function_3484()
  ret i32 %v0_117f

dec_label_pc_1184:                                ; preds = %dec_label_pc_113d
  %v0_1189 = call i32 @function_34f8()
  ret i32 %v0_1189
}

define i32 @function_118e() local_unnamed_addr {
dec_label_pc_118e:
  %v0_1193 = call i32 @function_34f8()
  ret i32 %v0_1193
}

define i32 @function_1198() local_unnamed_addr {
dec_label_pc_1198:
  %v0_1198 = load i32, i32* @ebp, align 4
  %v1_1198 = add i32 %v0_1198, -860
  %v2_1198 = inttoptr i32 %v1_1198 to i32*
  %v3_1198 = load i32, i32* %v2_1198, align 4
  %v1_11a1 = inttoptr i32 %v3_1198 to i32*
  %v2_11a1 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_11a1)
  %v1_11a6 = icmp eq i32 %v2_11a1, 0
  %v5_11ab = icmp eq i1 %v1_11a6, false
  br i1 %v5_11ab, label %dec_label_pc_11b9, label %dec_label_pc_11af

dec_label_pc_11af:                                ; preds = %dec_label_pc_1198
  %v0_11b4 = call i32 @function_34f8()
  ret i32 %v0_11b4

dec_label_pc_11b9:                                ; preds = %dec_label_pc_1198
  %v0_11b9 = load i32, i32* @ebp, align 4
  %v1_11b9 = add i32 %v0_11b9, -860
  %v2_11b9 = inttoptr i32 %v1_11b9 to i32*
  %v3_11b9 = load i32, i32* %v2_11b9, align 4
  %v1_11c2 = inttoptr i32 %v3_11b9 to i32*
  %v2_11c2 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_11c2)
  %v1_11c7 = add i32 %v2_11c2, -1
  %v0_11ce = load i32, i32* @ebp, align 4
  %v1_11ce = add i32 %v0_11ce, -860
  %v2_11ce = inttoptr i32 %v1_11ce to i32*
  %v3_11ce = load i32, i32* %v2_11ce, align 4
  %v2_11d7 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_11ce, i32 %v1_11c7)
  %v0_11e0 = load i32, i32* @ebp, align 4
  %v1_11e0 = add i32 %v0_11e0, -400
  %v2_11e9 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v1_11e0, i32 %v2_11d7)
  %v0_11ee = load i32, i32* @ebp, align 4
  %v1_11ee = add i32 %v0_11ee, -860
  %v2_11ee = inttoptr i32 %v1_11ee to i32*
  %v3_11ee = load i32, i32* %v2_11ee, align 4
  %v1_11f7 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_11ee, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_11f7)
  %v0_11fc = call i32 @function_3484()
  ret i32 %v0_11fc
}

define i32 @function_1201() local_unnamed_addr {
dec_label_pc_1201:
  %v0_1201 = load i32, i32* @ebp, align 4
  %v1_1201 = add i32 %v0_1201, -400
  %v1_120a = inttoptr i32 %v1_1201 to i32*
  %v2_120a = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_120a)
  %v1_120f = icmp eq i32 %v2_120a, 0
  %v5_1214 = icmp eq i1 %v1_120f, false
  br i1 %v5_1214, label %dec_label_pc_1222, label %dec_label_pc_1218

dec_label_pc_1218:                                ; preds = %dec_label_pc_1201
  %v0_121d = call i32 @function_34f8()
  ret i32 %v0_121d

dec_label_pc_1222:                                ; preds = %dec_label_pc_1201
  %v0_1222 = load i32, i32* @ebp, align 4
  %v1_1222 = add i32 %v0_1222, -400
  %v1_122b = inttoptr i32 %v1_1222 to i32*
  %v2_122b = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_122b)
  %v1_1230 = add i32 %v2_122b, -1
  %v0_1237 = load i32, i32* @ebp, align 4
  %v1_1237 = add i32 %v0_1237, -400
  %v2_1240 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v1_1237, i32 %v1_1230)
  %v0_1249 = load i32, i32* @ebp, align 4
  %v1_1249 = add i32 %v0_1249, -860
  %v2_1249 = inttoptr i32 %v1_1249 to i32*
  %v3_1249 = load i32, i32* %v2_1249, align 4
  %v2_1252 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1249, i32 %v2_1240)
  %v0_1257 = load i32, i32* @ebp, align 4
  %v1_1257 = add i32 %v0_1257, -400
  %v1_1260 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v1_1257, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_1260)
  %v0_1265 = call i32 @function_3484()
  ret i32 %v0_1265
}

define i32 @function_126a() local_unnamed_addr {
dec_label_pc_126a:
  %v0_126a = load i32, i32* @ebp, align 4
  %v1_126a = add i32 %v0_126a, -860
  %v2_126a = inttoptr i32 %v1_126a to i32*
  %v3_126a = load i32, i32* %v2_126a, align 4
  %v1_1273 = inttoptr i32 %v3_126a to i32*
  %v2_1273 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1273)
  %tmp98 = or i32 %v2_1273, 1
  %tmp99 = icmp eq i32 %tmp98, 1
  %v5_127e = icmp eq i1 %tmp99, false
  br i1 %v5_127e, label %dec_label_pc_128c, label %dec_label_pc_1282

dec_label_pc_1282:                                ; preds = %dec_label_pc_126a
  %v0_1287 = call i32 @function_34f8()
  ret i32 %v0_1287

dec_label_pc_128c:                                ; preds = %dec_label_pc_126a
  %v0_128c = load i32, i32* @ebp, align 4
  %v1_128c = add i32 %v0_128c, -860
  %v2_128c = inttoptr i32 %v1_128c to i32*
  %v3_128c = load i32, i32* %v2_128c, align 4
  %v1_1295 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_128c, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_1295)
  %v0_129a = load i32, i32* @ebp, align 4
  %v1_129a = add i32 %v0_129a, -860
  %v2_129a = inttoptr i32 %v1_129a to i32*
  %v3_129a = load i32, i32* %v2_129a, align 4
  %v1_12a3 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_129a, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_12a3)
  %v0_12a8 = call i32 @function_3484()
  ret i32 %v0_12a8
}

define i32 @function_12ad() local_unnamed_addr {
dec_label_pc_12ad:
  %v0_12ad = load i32, i32* @ebp, align 4
  %v1_12ad = add i32 %v0_12ad, -860
  %v2_12ad = inttoptr i32 %v1_12ad to i32*
  %v3_12ad = load i32, i32* %v2_12ad, align 4
  %v1_12b6 = inttoptr i32 %v3_12ad to i32*
  %v2_12b6 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_12b6)
  %tmp99 = or i32 %v2_12b6, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  %v5_12c1 = icmp eq i1 %tmp100, false
  br i1 %v5_12c1, label %dec_label_pc_12cf, label %dec_label_pc_12c5

dec_label_pc_12c5:                                ; preds = %dec_label_pc_12ad
  %v0_12ca = call i32 @function_34f8()
  ret i32 %v0_12ca

dec_label_pc_12cf:                                ; preds = %dec_label_pc_12ad
  %v0_12cf = load i32, i32* @ebp, align 4
  %v1_12cf = add i32 %v0_12cf, -860
  %v2_12cf = inttoptr i32 %v1_12cf to i32*
  %v3_12cf = load i32, i32* %v2_12cf, align 4
  %v1_12d8 = inttoptr i32 %v3_12cf to i32*
  %v2_12d8 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_12d8)
  %v1_12dd = add i32 %v2_12d8, -2
  %v0_12e4 = load i32, i32* @ebp, align 4
  %v1_12e4 = add i32 %v0_12e4, -860
  %v2_12e4 = inttoptr i32 %v1_12e4 to i32*
  %v3_12e4 = load i32, i32* %v2_12e4, align 4
  %v2_12ed = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_12e4, i32 %v1_12dd)
  %v0_12f6 = load i32, i32* @ebp, align 4
  %v1_12f6 = add i32 %v0_12f6, -832
  %v2_12ff = inttoptr i32 %v1_12f6 to i32*
  %v3_12ff = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_12ff, i32 %v2_12ed)
  %v0_1304 = load i32, i32* @ebp, align 4
  %v1_1304 = add i32 %v0_1304, -860
  %v2_1304 = inttoptr i32 %v1_1304 to i32*
  %v3_1304 = load i32, i32* %v2_1304, align 4
  %v1_130d = inttoptr i32 %v3_1304 to i32*
  %v2_130d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_130d)
  %v1_1312 = add i32 %v2_130d, -1
  %v0_1319 = load i32, i32* @ebp, align 4
  %v1_1319 = add i32 %v0_1319, -860
  %v2_1319 = inttoptr i32 %v1_1319 to i32*
  %v3_1319 = load i32, i32* %v2_1319, align 4
  %v2_1322 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1319, i32 %v1_1312)
  %v0_132b = load i32, i32* @ebp, align 4
  %v1_132b = add i32 %v0_132b, -712
  %v2_1334 = inttoptr i32 %v1_132b to i32*
  %v3_1334 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1334, i32 %v2_1322)
  %v0_1339 = load i32, i32* @ebp, align 4
  %v1_1339 = add i32 %v0_1339, -832
  %v1_1343 = add i32 %v0_1339, -860
  %v2_1343 = inttoptr i32 %v1_1343 to i32*
  %v3_1343 = load i32, i32* %v2_1343, align 4
  %v2_134c = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1343, i32 %v1_1339)
  %v0_1351 = load i32, i32* @ebp, align 4
  %v1_1351 = add i32 %v0_1351, -712
  %v1_135b = add i32 %v0_1351, -860
  %v2_135b = inttoptr i32 %v1_135b to i32*
  %v3_135b = load i32, i32* %v2_135b, align 4
  %v2_1364 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_135b, i32 %v1_1351)
  %v0_1369 = load i32, i32* @ebp, align 4
  %v1_1369 = add i32 %v0_1369, -712
  %v1_1372 = inttoptr i32 %v1_1369 to i32*
  %v2_1372 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1372)
  %v0_1377 = load i32, i32* @ebp, align 4
  %v1_1377 = add i32 %v0_1377, -832
  %v1_1380 = inttoptr i32 %v1_1377 to i32*
  %v2_1380 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1380)
  %v0_1385 = call i32 @function_3484()
  ret i32 %v0_1385
}

define i32 @function_138a() local_unnamed_addr {
dec_label_pc_138a:
  %v0_138a = load i32, i32* @ebp, align 4
  %v1_138a = add i32 %v0_138a, -860
  %v2_138a = inttoptr i32 %v1_138a to i32*
  %v3_138a = load i32, i32* %v2_138a, align 4
  %v1_1393 = inttoptr i32 %v3_138a to i32*
  %v2_1393 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1393)
  %tmp99 = icmp ult i32 %v2_1393, 3
  %v5_139e = icmp eq i1 %tmp99, false
  br i1 %v5_139e, label %dec_label_pc_13ac, label %dec_label_pc_13a2

dec_label_pc_13a2:                                ; preds = %dec_label_pc_138a
  %v0_13a7 = call i32 @function_34f8()
  ret i32 %v0_13a7

dec_label_pc_13ac:                                ; preds = %dec_label_pc_138a
  %v0_13ac = load i32, i32* @ebp, align 4
  %v1_13ac = add i32 %v0_13ac, -860
  %v2_13ac = inttoptr i32 %v1_13ac to i32*
  %v3_13ac = load i32, i32* %v2_13ac, align 4
  %v1_13b5 = inttoptr i32 %v3_13ac to i32*
  %v2_13b5 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_13b5)
  %v1_13ba = add i32 %v2_13b5, -3
  %v0_13c1 = load i32, i32* @ebp, align 4
  %v1_13c1 = add i32 %v0_13c1, -860
  %v2_13c1 = inttoptr i32 %v1_13c1 to i32*
  %v3_13c1 = load i32, i32* %v2_13c1, align 4
  %v2_13ca = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_13c1, i32 %v1_13ba)
  %v0_13d3 = load i32, i32* @ebp, align 4
  %v1_13d3 = add i32 %v0_13d3, -712
  %v2_13dc = inttoptr i32 %v1_13d3 to i32*
  %v3_13dc = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_13dc, i32 %v2_13ca)
  %v0_13e1 = load i32, i32* @ebp, align 4
  %v1_13e1 = add i32 %v0_13e1, -860
  %v2_13e1 = inttoptr i32 %v1_13e1 to i32*
  %v3_13e1 = load i32, i32* %v2_13e1, align 4
  %v1_13ea = inttoptr i32 %v3_13e1 to i32*
  %v2_13ea = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_13ea)
  %v1_13ef = add i32 %v2_13ea, -2
  %v0_13f6 = load i32, i32* @ebp, align 4
  %v1_13f6 = add i32 %v0_13f6, -860
  %v2_13f6 = inttoptr i32 %v1_13f6 to i32*
  %v3_13f6 = load i32, i32* %v2_13f6, align 4
  %v2_13ff = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_13f6, i32 %v1_13ef)
  %v0_1408 = load i32, i32* @ebp, align 4
  %v1_1408 = add i32 %v0_1408, -832
  %v2_1411 = inttoptr i32 %v1_1408 to i32*
  %v3_1411 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1411, i32 %v2_13ff)
  %v0_1416 = load i32, i32* @ebp, align 4
  %v1_1416 = add i32 %v0_1416, -860
  %v2_1416 = inttoptr i32 %v1_1416 to i32*
  %v3_1416 = load i32, i32* %v2_1416, align 4
  %v1_141f = inttoptr i32 %v3_1416 to i32*
  %v2_141f = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_141f)
  %v1_1424 = add i32 %v2_141f, -1
  %v0_142b = load i32, i32* @ebp, align 4
  %v1_142b = add i32 %v0_142b, -860
  %v2_142b = inttoptr i32 %v1_142b to i32*
  %v3_142b = load i32, i32* %v2_142b, align 4
  %v2_1434 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_142b, i32 %v1_1424)
  %v0_143d = load i32, i32* @ebp, align 4
  %v1_143d = add i32 %v0_143d, -692
  %v2_1446 = inttoptr i32 %v1_143d to i32*
  %v3_1446 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1446, i32 %v2_1434)
  %v0_144b = load i32, i32* @ebp, align 4
  %v1_144b = add i32 %v0_144b, -712
  %v1_1455 = add i32 %v0_144b, -860
  %v2_1455 = inttoptr i32 %v1_1455 to i32*
  %v3_1455 = load i32, i32* %v2_1455, align 4
  %v2_145e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1455, i32 %v1_144b)
  %v0_1463 = load i32, i32* @ebp, align 4
  %v1_1463 = add i32 %v0_1463, -832
  %v1_146d = add i32 %v0_1463, -860
  %v2_146d = inttoptr i32 %v1_146d to i32*
  %v3_146d = load i32, i32* %v2_146d, align 4
  %v2_1476 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_146d, i32 %v1_1463)
  %v0_147b = load i32, i32* @ebp, align 4
  %v1_147b = add i32 %v0_147b, -692
  %v1_1485 = add i32 %v0_147b, -860
  %v2_1485 = inttoptr i32 %v1_1485 to i32*
  %v3_1485 = load i32, i32* %v2_1485, align 4
  %v2_148e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1485, i32 %v1_147b)
  %v0_1493 = load i32, i32* @ebp, align 4
  %v1_1493 = add i32 %v0_1493, -692
  %v1_149c = inttoptr i32 %v1_1493 to i32*
  %v2_149c = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_149c)
  %v0_14a1 = load i32, i32* @ebp, align 4
  %v1_14a1 = add i32 %v0_14a1, -832
  %v1_14aa = inttoptr i32 %v1_14a1 to i32*
  %v2_14aa = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_14aa)
  %v0_14af = load i32, i32* @ebp, align 4
  %v1_14af = add i32 %v0_14af, -712
  %v1_14b8 = inttoptr i32 %v1_14af to i32*
  %v2_14b8 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_14b8)
  %v0_14bd = call i32 @function_3484()
  ret i32 %v0_14bd
}

define i32 @function_14c2() local_unnamed_addr {
dec_label_pc_14c2:
  %v0_14c2 = load i32, i32* @ebp, align 4
  %v1_14c2 = add i32 %v0_14c2, -860
  %v2_14c2 = inttoptr i32 %v1_14c2 to i32*
  %v3_14c2 = load i32, i32* %v2_14c2, align 4
  %v1_14cb = inttoptr i32 %v3_14c2 to i32*
  %v2_14cb = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_14cb)
  %tmp99 = icmp ult i32 %v2_14cb, 4
  %v5_14d6 = icmp eq i1 %tmp99, false
  br i1 %v5_14d6, label %dec_label_pc_14e4, label %dec_label_pc_14da

dec_label_pc_14da:                                ; preds = %dec_label_pc_14c2
  %v0_14df = call i32 @function_34f8()
  ret i32 %v0_14df

dec_label_pc_14e4:                                ; preds = %dec_label_pc_14c2
  %v0_14e4 = load i32, i32* @ebp, align 4
  %v1_14e4 = add i32 %v0_14e4, -860
  %v2_14e4 = inttoptr i32 %v1_14e4 to i32*
  %v3_14e4 = load i32, i32* %v2_14e4, align 4
  %v1_14ed = inttoptr i32 %v3_14e4 to i32*
  %v2_14ed = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_14ed)
  %v1_14f2 = add i32 %v2_14ed, -4
  %v0_14f9 = load i32, i32* @ebp, align 4
  %v1_14f9 = add i32 %v0_14f9, -860
  %v2_14f9 = inttoptr i32 %v1_14f9 to i32*
  %v3_14f9 = load i32, i32* %v2_14f9, align 4
  %v2_1502 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_14f9, i32 %v1_14f2)
  %v0_150b = load i32, i32* @ebp, align 4
  %v1_150b = add i32 %v0_150b, -692
  %v2_1514 = inttoptr i32 %v1_150b to i32*
  %v3_1514 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1514, i32 %v2_1502)
  %v0_1519 = load i32, i32* @ebp, align 4
  %v1_1519 = add i32 %v0_1519, -860
  %v2_1519 = inttoptr i32 %v1_1519 to i32*
  %v3_1519 = load i32, i32* %v2_1519, align 4
  %v1_1522 = inttoptr i32 %v3_1519 to i32*
  %v2_1522 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1522)
  %v1_1527 = add i32 %v2_1522, -3
  %v0_152e = load i32, i32* @ebp, align 4
  %v1_152e = add i32 %v0_152e, -860
  %v2_152e = inttoptr i32 %v1_152e to i32*
  %v3_152e = load i32, i32* %v2_152e, align 4
  %v2_1537 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_152e, i32 %v1_1527)
  %v0_1540 = load i32, i32* @ebp, align 4
  %v1_1540 = add i32 %v0_1540, -832
  %v2_1549 = inttoptr i32 %v1_1540 to i32*
  %v3_1549 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1549, i32 %v2_1537)
  %v0_154e = load i32, i32* @ebp, align 4
  %v1_154e = add i32 %v0_154e, -692
  %v1_1558 = add i32 %v0_154e, -860
  %v2_1558 = inttoptr i32 %v1_1558 to i32*
  %v3_1558 = load i32, i32* %v2_1558, align 4
  %v2_1561 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1558, i32 %v1_154e)
  %v0_1566 = load i32, i32* @ebp, align 4
  %v1_1566 = add i32 %v0_1566, -832
  %v1_1570 = add i32 %v0_1566, -860
  %v2_1570 = inttoptr i32 %v1_1570 to i32*
  %v3_1570 = load i32, i32* %v2_1570, align 4
  %v2_1579 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1570, i32 %v1_1566)
  %v0_157e = load i32, i32* @ebp, align 4
  %v1_157e = add i32 %v0_157e, -832
  %v1_1587 = inttoptr i32 %v1_157e to i32*
  %v2_1587 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1587)
  %v0_158c = load i32, i32* @ebp, align 4
  %v1_158c = add i32 %v0_158c, -692
  %v1_1595 = inttoptr i32 %v1_158c to i32*
  %v2_1595 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1595)
  %v0_159a = call i32 @function_3484()
  ret i32 %v0_159a
}

define i32 @function_159f() local_unnamed_addr {
dec_label_pc_159f:
  %v0_159f = load i32, i32* @ebp, align 4
  %v1_159f = add i32 %v0_159f, -860
  %v2_159f = inttoptr i32 %v1_159f to i32*
  %v3_159f = load i32, i32* %v2_159f, align 4
  %v1_15a8 = inttoptr i32 %v3_159f to i32*
  %v2_15a8 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_15a8)
  %tmp104 = icmp ult i32 %v2_15a8, 6
  %v5_15b3 = icmp eq i1 %tmp104, false
  br i1 %v5_15b3, label %dec_label_pc_15c1, label %dec_label_pc_15b7

dec_label_pc_15b7:                                ; preds = %dec_label_pc_159f
  %v0_15bc = call i32 @function_34f8()
  ret i32 %v0_15bc

dec_label_pc_15c1:                                ; preds = %dec_label_pc_159f
  %v0_15c1 = load i32, i32* @ebp, align 4
  %v1_15c1 = add i32 %v0_15c1, -860
  %v2_15c1 = inttoptr i32 %v1_15c1 to i32*
  %v3_15c1 = load i32, i32* %v2_15c1, align 4
  %v1_15ca = inttoptr i32 %v3_15c1 to i32*
  %v2_15ca = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_15ca)
  %v1_15cf = add i32 %v2_15ca, -6
  %v0_15d6 = load i32, i32* @ebp, align 4
  %v1_15d6 = add i32 %v0_15d6, -860
  %v2_15d6 = inttoptr i32 %v1_15d6 to i32*
  %v3_15d6 = load i32, i32* %v2_15d6, align 4
  %v2_15df = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_15d6, i32 %v1_15cf)
  %v0_15e8 = load i32, i32* @ebp, align 4
  %v1_15e8 = add i32 %v0_15e8, -832
  %v2_15f1 = inttoptr i32 %v1_15e8 to i32*
  %v3_15f1 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_15f1, i32 %v2_15df)
  %v0_15f6 = load i32, i32* @ebp, align 4
  %v1_15f6 = add i32 %v0_15f6, -860
  %v2_15f6 = inttoptr i32 %v1_15f6 to i32*
  %v3_15f6 = load i32, i32* %v2_15f6, align 4
  %v1_15ff = inttoptr i32 %v3_15f6 to i32*
  %v2_15ff = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_15ff)
  %v1_1604 = add i32 %v2_15ff, -5
  %v0_160b = load i32, i32* @ebp, align 4
  %v1_160b = add i32 %v0_160b, -860
  %v2_160b = inttoptr i32 %v1_160b to i32*
  %v3_160b = load i32, i32* %v2_160b, align 4
  %v2_1614 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_160b, i32 %v1_1604)
  %v0_161d = load i32, i32* @ebp, align 4
  %v1_161d = add i32 %v0_161d, -692
  %v2_1626 = inttoptr i32 %v1_161d to i32*
  %v3_1626 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1626, i32 %v2_1614)
  %v0_162b = load i32, i32* @ebp, align 4
  %v1_162b = add i32 %v0_162b, -212
  %v2_162b = inttoptr i32 %v1_162b to i32*
  store i32 4, i32* %v2_162b, align 4
  %v0_1635 = load i32, i32* @ebp, align 4
  %v1_1635 = add i32 %v0_1635, -216
  %v1_163b = add i32 %v0_1635, -860
  %v2_163b = inttoptr i32 %v1_163b to i32*
  %v3_163b = load i32, i32* %v2_163b, align 4
  %v2_1648 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %v1_1635, i32 %v3_163b)
  %v0_1650 = load i32, i32* @ebp, align 4
  %v1_1650 = add i32 %v0_1650, -208
  %v1_1656 = add i32 %v0_1650, -212
  %v1_1660 = add i32 %v0_1650, -216
  %v3_166d = inttoptr i32 %v1_1660 to i32*
  %v4_166d = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_1650, i32* %v3_166d, i32 %v1_1656)
  %v0_1675 = load i32, i32* @ebp, align 4
  %v1_1675 = add i32 %v0_1675, -224
  %v2_1675 = inttoptr i32 %v1_1675 to i32*
  store i32 6, i32* %v2_1675, align 4
  %v0_167f = load i32, i32* @ebp, align 4
  %v1_167f = add i32 %v0_167f, -228
  %v1_1685 = add i32 %v0_167f, -860
  %v2_1685 = inttoptr i32 %v1_1685 to i32*
  %v3_1685 = load i32, i32* %v2_1685, align 4
  %v2_1692 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %v1_167f, i32 %v3_1685)
  %v0_169a = load i32, i32* @ebp, align 4
  %v1_169a = add i32 %v0_169a, -220
  %v1_16a0 = add i32 %v0_169a, -224
  %v1_16aa = add i32 %v0_169a, -228
  %v3_16b7 = inttoptr i32 %v1_16aa to i32*
  %v4_16b7 = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_169a, i32* %v3_16b7, i32 %v1_16a0)
  %v0_16bf = load i32, i32* @ebp, align 4
  %v1_16bf = add i32 %v0_16bf, -204
  %v1_16c5 = add i32 %v0_16bf, -208
  %v2_16c5 = inttoptr i32 %v1_16c5 to i32*
  %v3_16c5 = load i32, i32* %v2_16c5, align 4
  %v1_16cf = add i32 %v0_16bf, -220
  %v2_16cf = inttoptr i32 %v1_16cf to i32*
  %v3_16cf = load i32, i32* %v2_16cf, align 4
  %v1_16d9 = add i32 %v0_16bf, -860
  %v2_16d9 = inttoptr i32 %v1_16d9 to i32*
  %v3_16d9 = load i32, i32* %v2_16d9, align 4
  %v4_16e6 = inttoptr i32 %v1_16bf to i32*
  %v5_16e6 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_(i32* %v4_16e6, i32 %v3_16d9, i32 %v3_16cf, i32 %v3_16c5)
  %v0_16ee = load i32, i32* @ebp, align 4
  %v1_16ee = add i32 %v0_16ee, -832
  %v1_16f8 = add i32 %v0_16ee, -860
  %v2_16f8 = inttoptr i32 %v1_16f8 to i32*
  %v3_16f8 = load i32, i32* %v2_16f8, align 4
  %v2_1701 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_16f8, i32 %v1_16ee)
  %v0_1706 = load i32, i32* @ebp, align 4
  %v1_1706 = add i32 %v0_1706, -692
  %v1_1710 = add i32 %v0_1706, -860
  %v2_1710 = inttoptr i32 %v1_1710 to i32*
  %v3_1710 = load i32, i32* %v2_1710, align 4
  %v2_1719 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1710, i32 %v1_1706)
  %v0_171e = load i32, i32* @ebp, align 4
  %v1_171e = add i32 %v0_171e, -692
  %v1_1727 = inttoptr i32 %v1_171e to i32*
  %v2_1727 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1727)
  %v0_172c = load i32, i32* @ebp, align 4
  %v1_172c = add i32 %v0_172c, -832
  %v1_1735 = inttoptr i32 %v1_172c to i32*
  %v2_1735 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1735)
  %v0_173a = call i32 @function_3484()
  ret i32 %v0_173a

; uselistorder directives
  uselistorder i32 %v0_16bf, { 1, 0, 2, 3 }
}

define i32 @function_173f() local_unnamed_addr {
dec_label_pc_173f:
  %esi.global-to-local = alloca i32, align 4
  %v0_173f = load i32, i32* @ebp, align 4
  %v1_173f = add i32 %v0_173f, -860
  %v2_173f = inttoptr i32 %v1_173f to i32*
  %v3_173f = load i32, i32* %v2_173f, align 4
  %v1_1748 = inttoptr i32 %v3_173f to i32*
  %v2_1748 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1748)
  %tmp99 = icmp ult i32 %v2_1748, 4
  %v5_1753 = icmp eq i1 %tmp99, false
  br i1 %v5_1753, label %dec_label_pc_1761, label %dec_label_pc_1757

dec_label_pc_1757:                                ; preds = %dec_label_pc_173f
  %v0_175c = call i32 @function_34f8()
  ret i32 %v0_175c

dec_label_pc_1761:                                ; preds = %dec_label_pc_173f
  %v0_1761 = load i32, i32* @ebp, align 4
  %v1_1761 = add i32 %v0_1761, -860
  %v2_1761 = inttoptr i32 %v1_1761 to i32*
  %v3_1761 = load i32, i32* %v2_1761, align 4
  %v1_176a = inttoptr i32 %v3_1761 to i32*
  %v2_176a = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_176a)
  %v1_176f = add i32 %v2_176a, -2
  %v0_1776 = load i32, i32* @ebp, align 4
  %v1_1776 = add i32 %v0_1776, -860
  %v2_1776 = inttoptr i32 %v1_1776 to i32*
  %v3_1776 = load i32, i32* %v2_1776, align 4
  %v2_177f = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1776, i32 %v1_176f)
  store i32 %v2_177f, i32* %esi.global-to-local, align 4
  %v0_1786 = load i32, i32* @ebp, align 4
  %v1_1786 = add i32 %v0_1786, -860
  %v2_1786 = inttoptr i32 %v1_1786 to i32*
  %v3_1786 = load i32, i32* %v2_1786, align 4
  %v1_178f = inttoptr i32 %v3_1786 to i32*
  %v2_178f = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_178f)
  %v1_1794 = add i32 %v2_178f, -4
  %v0_179b = load i32, i32* @ebp, align 4
  %v1_179b = add i32 %v0_179b, -860
  %v2_179b = inttoptr i32 %v1_179b to i32*
  %v3_179b = load i32, i32* %v2_179b, align 4
  %v2_17a4 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_179b, i32 %v1_1794)
  %v0_17a9 = load i32, i32* %esi.global-to-local, align 4
  %v2_17b0 = call i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %v2_17a4, i32 %v0_17a9)
  %v0_17b5 = load i32, i32* @ebp, align 4
  %v1_17b5 = add i32 %v0_17b5, -860
  %v2_17b5 = inttoptr i32 %v1_17b5 to i32*
  %v3_17b5 = load i32, i32* %v2_17b5, align 4
  %v1_17be = inttoptr i32 %v3_17b5 to i32*
  %v2_17be = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_17be)
  %v1_17c3 = add i32 %v2_17be, -1
  %v0_17ca = load i32, i32* @ebp, align 4
  %v1_17ca = add i32 %v0_17ca, -860
  %v2_17ca = inttoptr i32 %v1_17ca to i32*
  %v3_17ca = load i32, i32* %v2_17ca, align 4
  %v2_17d3 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_17ca, i32 %v1_17c3)
  store i32 %v2_17d3, i32* %esi.global-to-local, align 4
  %v0_17da = load i32, i32* @ebp, align 4
  %v1_17da = add i32 %v0_17da, -860
  %v2_17da = inttoptr i32 %v1_17da to i32*
  %v3_17da = load i32, i32* %v2_17da, align 4
  %v1_17e3 = inttoptr i32 %v3_17da to i32*
  %v2_17e3 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_17e3)
  %v1_17e8 = add i32 %v2_17e3, -3
  %v0_17ef = load i32, i32* @ebp, align 4
  %v1_17ef = add i32 %v0_17ef, -860
  %v2_17ef = inttoptr i32 %v1_17ef to i32*
  %v3_17ef = load i32, i32* %v2_17ef, align 4
  %v2_17f8 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_17ef, i32 %v1_17e8)
  %v0_17fd = load i32, i32* %esi.global-to-local, align 4
  %v2_1804 = call i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %v2_17f8, i32 %v0_17fd)
  %v0_1809 = call i32 @function_3484()
  ret i32 %v0_1809
}

define i32 @function_180e() local_unnamed_addr {
dec_label_pc_180e:
  %v0_180e = load i32, i32* @ebp, align 4
  %v1_180e = add i32 %v0_180e, -860
  %v2_180e = inttoptr i32 %v1_180e to i32*
  %v3_180e = load i32, i32* %v2_180e, align 4
  %v1_1817 = inttoptr i32 %v3_180e to i32*
  %v2_1817 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1817)
  %v1_181c = icmp eq i32 %v2_1817, 0
  %v5_1821 = icmp eq i1 %v1_181c, false
  br i1 %v5_1821, label %dec_label_pc_182f, label %dec_label_pc_1825

dec_label_pc_1825:                                ; preds = %dec_label_pc_180e
  %v0_182a = call i32 @function_34f8()
  ret i32 %v0_182a

dec_label_pc_182f:                                ; preds = %dec_label_pc_180e
  %v0_182f = load i32, i32* @ebp, align 4
  %v1_182f = add i32 %v0_182f, -860
  %v2_182f = inttoptr i32 %v1_182f to i32*
  %v3_182f = load i32, i32* %v2_182f, align 4
  %v1_1838 = inttoptr i32 %v3_182f to i32*
  %v2_1838 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1838)
  %v1_183d = add i32 %v2_1838, -1
  %v0_1844 = load i32, i32* @ebp, align 4
  %v1_1844 = add i32 %v0_1844, -860
  %v2_1844 = inttoptr i32 %v1_1844 to i32*
  %v3_1844 = load i32, i32* %v2_1844, align 4
  %v2_184d = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1844, i32 %v1_183d)
  %v0_1856 = load i32, i32* @ebp, align 4
  %v1_1856 = add i32 %v0_1856, -692
  %v2_185f = inttoptr i32 %v1_1856 to i32*
  %v3_185f = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_185f, i32 %v2_184d)
  %v0_1864 = load i32, i32* @ebp, align 4
  %v1_1864 = add i32 %v0_1864, -692
  %v1_186d = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v1_1864, 0
  %v2_186d = call i1 @_Z10CastToBoolRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_186d)
  %v5_1872 = icmp eq i1 %v2_186d, false
  br i1 %v5_1872, label %dec_label_pc_188e, label %dec_label_pc_1876

dec_label_pc_1876:                                ; preds = %dec_label_pc_182f
  %v0_1876 = load i32, i32* @ebp, align 4
  %v1_1876 = add i32 %v0_1876, -692
  %v1_1880 = add i32 %v0_1876, -860
  %v2_1880 = inttoptr i32 %v1_1880 to i32*
  %v3_1880 = load i32, i32* %v2_1880, align 4
  %v2_1889 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1880, i32 %v1_1876)
  br label %dec_label_pc_188e

dec_label_pc_188e:                                ; preds = %dec_label_pc_1876, %dec_label_pc_182f
  %v0_188e = load i32, i32* @ebp, align 4
  %v1_188e = add i32 %v0_188e, -692
  %v1_1897 = inttoptr i32 %v1_188e to i32*
  %v2_1897 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1897)
  %v0_189c = call i32 @function_3484()
  ret i32 %v0_189c
}

define i32 @function_18a1() local_unnamed_addr {
dec_label_pc_18a1:
  %v0_18a1 = load i32, i32* @ebp, align 4
  %v1_18a1 = add i32 %v0_18a1, -860
  %v2_18a1 = inttoptr i32 %v1_18a1 to i32*
  %v3_18a1 = load i32, i32* %v2_18a1, align 4
  %v1_18aa = inttoptr i32 %v3_18a1 to i32*
  %v2_18aa = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_18aa)
  %v0_18b3 = load i32, i32* @ebp, align 4
  %v1_18b3 = add i32 %v0_18b3, -832
  %v2_18bc = call i32 @_ZN7CBigNumC1Ej(i32 %v1_18b3, i32 %v2_18aa)
  %v0_18c1 = load i32, i32* @ebp, align 4
  %v1_18c1 = add i32 %v0_18c1, -376
  %v1_18c7 = add i32 %v0_18c1, -832
  %v2_18d4 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_18c1, i32 %v1_18c7)
  %v0_18dc = load i32, i32* @ebp, align 4
  %v1_18dc = add i32 %v0_18dc, -376
  %v1_18e6 = add i32 %v0_18dc, -860
  %v2_18e6 = inttoptr i32 %v1_18e6 to i32*
  %v3_18e6 = load i32, i32* %v2_18e6, align 4
  %v2_18ef = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_18e6, i32 %v1_18dc)
  %v0_18f4 = load i32, i32* @ebp, align 4
  %v1_18f4 = add i32 %v0_18f4, -376
  %v1_18fd = inttoptr i32 %v1_18f4 to i32*
  %v2_18fd = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_18fd)
  %v0_1902 = load i32, i32* @ebp, align 4
  %v1_1902 = add i32 %v0_1902, -832
  %v1_190b = call i32 @_ZN7CBigNumD1Ev(i32 %v1_1902)
  %v0_1910 = call i32 @function_3484()
  ret i32 %v0_1910
}

define i32 @function_1915() local_unnamed_addr {
dec_label_pc_1915:
  %v0_1915 = load i32, i32* @ebp, align 4
  %v1_1915 = add i32 %v0_1915, -860
  %v2_1915 = inttoptr i32 %v1_1915 to i32*
  %v3_1915 = load i32, i32* %v2_1915, align 4
  %v1_191e = inttoptr i32 %v3_1915 to i32*
  %v2_191e = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_191e)
  %v1_1923 = icmp eq i32 %v2_191e, 0
  %v5_1928 = icmp eq i1 %v1_1923, false
  br i1 %v5_1928, label %dec_label_pc_1936, label %dec_label_pc_192c

dec_label_pc_192c:                                ; preds = %dec_label_pc_1915
  %v0_1931 = call i32 @function_34f8()
  ret i32 %v0_1931

dec_label_pc_1936:                                ; preds = %dec_label_pc_1915
  %v0_1936 = load i32, i32* @ebp, align 4
  %v1_1936 = add i32 %v0_1936, -860
  %v2_1936 = inttoptr i32 %v1_1936 to i32*
  %v3_1936 = load i32, i32* %v2_1936, align 4
  %v1_193f = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_1936, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_193f)
  %v0_1944 = call i32 @function_3484()
  ret i32 %v0_1944
}

define i32 @function_1949() local_unnamed_addr {
dec_label_pc_1949:
  %v0_1949 = load i32, i32* @ebp, align 4
  %v1_1949 = add i32 %v0_1949, -860
  %v2_1949 = inttoptr i32 %v1_1949 to i32*
  %v3_1949 = load i32, i32* %v2_1949, align 4
  %v1_1952 = inttoptr i32 %v3_1949 to i32*
  %v2_1952 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1952)
  %v1_1957 = icmp eq i32 %v2_1952, 0
  %v5_195c = icmp eq i1 %v1_1957, false
  br i1 %v5_195c, label %dec_label_pc_196a, label %dec_label_pc_1960

dec_label_pc_1960:                                ; preds = %dec_label_pc_1949
  %v0_1965 = call i32 @function_34f8()
  ret i32 %v0_1965

dec_label_pc_196a:                                ; preds = %dec_label_pc_1949
  %v0_196a = load i32, i32* @ebp, align 4
  %v1_196a = add i32 %v0_196a, -860
  %v2_196a = inttoptr i32 %v1_196a to i32*
  %v3_196a = load i32, i32* %v2_196a, align 4
  %v1_1973 = inttoptr i32 %v3_196a to i32*
  %v2_1973 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1973)
  %v1_1978 = add i32 %v2_1973, -1
  %v0_197f = load i32, i32* @ebp, align 4
  %v1_197f = add i32 %v0_197f, -860
  %v2_197f = inttoptr i32 %v1_197f to i32*
  %v3_197f = load i32, i32* %v2_197f, align 4
  %v2_1988 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_197f, i32 %v1_1978)
  %v0_1991 = load i32, i32* @ebp, align 4
  %v1_1991 = add i32 %v0_1991, -692
  %v2_199a = inttoptr i32 %v1_1991 to i32*
  %v3_199a = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_199a, i32 %v2_1988)
  %v0_199f = load i32, i32* @ebp, align 4
  %v1_199f = add i32 %v0_199f, -692
  %v1_19a9 = add i32 %v0_199f, -860
  %v2_19a9 = inttoptr i32 %v1_19a9 to i32*
  %v3_19a9 = load i32, i32* %v2_19a9, align 4
  %v2_19b2 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_19a9, i32 %v1_199f)
  %v0_19b7 = load i32, i32* @ebp, align 4
  %v1_19b7 = add i32 %v0_19b7, -692
  %v1_19c0 = inttoptr i32 %v1_19b7 to i32*
  %v2_19c0 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_19c0)
  %v0_19c5 = call i32 @function_3484()
  ret i32 %v0_19c5
}

define i32 @function_19ca() local_unnamed_addr {
dec_label_pc_19ca:
  %v0_19ca = load i32, i32* @ebp, align 4
  %v1_19ca = add i32 %v0_19ca, -860
  %v2_19ca = inttoptr i32 %v1_19ca to i32*
  %v3_19ca = load i32, i32* %v2_19ca, align 4
  %v1_19d3 = inttoptr i32 %v3_19ca to i32*
  %v2_19d3 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_19d3)
  %tmp102 = or i32 %v2_19d3, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  %v5_19de = icmp eq i1 %tmp103, false
  br i1 %v5_19de, label %dec_label_pc_19ec, label %dec_label_pc_19e2

dec_label_pc_19e2:                                ; preds = %dec_label_pc_19ca
  %v0_19e7 = call i32 @function_34f8()
  ret i32 %v0_19e7

dec_label_pc_19ec:                                ; preds = %dec_label_pc_19ca
  %v0_19ec = load i32, i32* @ebp, align 4
  %v1_19ec = add i32 %v0_19ec, -196
  %v2_19ec = inttoptr i32 %v1_19ec to i32*
  store i32 2, i32* %v2_19ec, align 4
  %v0_19f6 = load i32, i32* @ebp, align 4
  %v1_19f6 = add i32 %v0_19f6, -200
  %v1_19fc = add i32 %v0_19f6, -860
  %v2_19fc = inttoptr i32 %v1_19fc to i32*
  %v3_19fc = load i32, i32* %v2_19fc, align 4
  %v2_1a09 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %v1_19f6, i32 %v3_19fc)
  %v0_1a11 = load i32, i32* @ebp, align 4
  %v1_1a11 = add i32 %v0_1a11, -192
  %v1_1a17 = add i32 %v0_1a11, -196
  %v1_1a21 = add i32 %v0_1a11, -200
  %v3_1a2e = inttoptr i32 %v1_1a21 to i32*
  %v4_1a2e = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_1a11, i32* %v3_1a2e, i32 %v1_1a17)
  %v0_1a36 = load i32, i32* @ebp, align 4
  %v1_1a36 = add i32 %v0_1a36, -188
  %v1_1a3c = add i32 %v0_1a36, -192
  %v2_1a3c = inttoptr i32 %v1_1a3c to i32*
  %v3_1a3c = load i32, i32* %v2_1a3c, align 4
  %v1_1a46 = add i32 %v0_1a36, -860
  %v2_1a46 = inttoptr i32 %v1_1a46 to i32*
  %v3_1a46 = load i32, i32* %v2_1a46, align 4
  %v3_1a53 = inttoptr i32 %v1_1a36 to i32*
  %v4_1a53 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(i32* %v3_1a53, i32 %v3_1a46, i32 %v3_1a3c)
  %v0_1a5b = call i32 @function_3484()
  ret i32 %v0_1a5b
}

define i32 @function_1a60() local_unnamed_addr {
dec_label_pc_1a60:
  %v0_1a60 = load i32, i32* @ebp, align 4
  %v1_1a60 = add i32 %v0_1a60, -860
  %v2_1a60 = inttoptr i32 %v1_1a60 to i32*
  %v3_1a60 = load i32, i32* %v2_1a60, align 4
  %v1_1a69 = inttoptr i32 %v3_1a60 to i32*
  %v2_1a69 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1a69)
  %tmp99 = or i32 %v2_1a69, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  %v5_1a74 = icmp eq i1 %tmp100, false
  br i1 %v5_1a74, label %dec_label_pc_1a82, label %dec_label_pc_1a78

dec_label_pc_1a78:                                ; preds = %dec_label_pc_1a60
  %v0_1a7d = call i32 @function_34f8()
  ret i32 %v0_1a7d

dec_label_pc_1a82:                                ; preds = %dec_label_pc_1a60
  %v0_1a82 = load i32, i32* @ebp, align 4
  %v1_1a82 = add i32 %v0_1a82, -860
  %v2_1a82 = inttoptr i32 %v1_1a82 to i32*
  %v3_1a82 = load i32, i32* %v2_1a82, align 4
  %v1_1a8b = inttoptr i32 %v3_1a82 to i32*
  %v2_1a8b = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1a8b)
  %v1_1a90 = add i32 %v2_1a8b, -2
  %v0_1a97 = load i32, i32* @ebp, align 4
  %v1_1a97 = add i32 %v0_1a97, -860
  %v2_1a97 = inttoptr i32 %v1_1a97 to i32*
  %v3_1a97 = load i32, i32* %v2_1a97, align 4
  %v2_1aa0 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1a97, i32 %v1_1a90)
  %v0_1aa9 = load i32, i32* @ebp, align 4
  %v1_1aa9 = add i32 %v0_1aa9, -692
  %v2_1ab2 = inttoptr i32 %v1_1aa9 to i32*
  %v3_1ab2 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1ab2, i32 %v2_1aa0)
  %v0_1ab7 = load i32, i32* @ebp, align 4
  %v1_1ab7 = add i32 %v0_1ab7, -692
  %v1_1ac1 = add i32 %v0_1ab7, -860
  %v2_1ac1 = inttoptr i32 %v1_1ac1 to i32*
  %v3_1ac1 = load i32, i32* %v2_1ac1, align 4
  %v2_1aca = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1ac1, i32 %v1_1ab7)
  %v0_1acf = load i32, i32* @ebp, align 4
  %v1_1acf = add i32 %v0_1acf, -692
  %v1_1ad8 = inttoptr i32 %v1_1acf to i32*
  %v2_1ad8 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1ad8)
  %v0_1add = call i32 @function_3484()
  ret i32 %v0_1add
}

define i32 @function_1ae2() local_unnamed_addr {
dec_label_pc_1ae2:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_1ae2 = load i32, i32* @ebp, align 4
  %v1_1ae2 = add i32 %v0_1ae2, -860
  %v2_1ae2 = inttoptr i32 %v1_1ae2 to i32*
  %v3_1ae2 = load i32, i32* %v2_1ae2, align 4
  %v1_1aeb = inttoptr i32 %v3_1ae2 to i32*
  %v2_1aeb = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1aeb)
  %tmp111 = or i32 %v2_1aeb, 1
  %tmp112 = icmp eq i32 %tmp111, 1
  %v5_1af6 = icmp eq i1 %tmp112, false
  br i1 %v5_1af6, label %dec_label_pc_1b04, label %dec_label_pc_1afa

dec_label_pc_1afa:                                ; preds = %dec_label_pc_1ae2
  %v0_1aff = call i32 @function_34f8()
  ret i32 %v0_1aff

dec_label_pc_1b04:                                ; preds = %dec_label_pc_1ae2
  %v0_1b04 = load i32, i32* @ebp, align 4
  %v1_1b04 = add i32 %v0_1b04, -860
  %v2_1b04 = inttoptr i32 %v1_1b04 to i32*
  %v3_1b04 = load i32, i32* %v2_1b04, align 4
  %v1_1b0d = inttoptr i32 %v3_1b04 to i32*
  %v2_1b0d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1b0d)
  %v1_1b12 = add i32 %v2_1b0d, -1
  %v0_1b19 = load i32, i32* @ebp, align 4
  %v1_1b19 = add i32 %v0_1b19, -860
  %v2_1b19 = inttoptr i32 %v1_1b19 to i32*
  %v3_1b19 = load i32, i32* %v2_1b19, align 4
  %v2_1b22 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1b19, i32 %v1_1b12)
  %v0_1b29 = load i32, i32* @ebp, align 4
  %v1_1b29 = add i32 %v0_1b29, -812
  %v3_1b47 = call i32 @_ZNK7CBigNum6getintEv(i32 %v1_1b29, i32 %v1_1b29, i32 %v2_1b22)
  %v1_1b4c = load i32, i32* @ebp, align 4
  %v2_1b4c = add i32 %v1_1b4c, -184
  %v3_1b4c = inttoptr i32 %v2_1b4c to i32*
  store i32 %v3_1b47, i32* %v3_1b4c, align 4
  %v0_1b52 = load i32, i32* @ebp, align 4
  %v1_1b52 = add i32 %v0_1b52, -812
  %v1_1b5b = call i32 @_ZN7CBigNumD1Ev(i32 %v1_1b52)
  %v0_1b60 = load i32, i32* @ebp, align 4
  %v1_1b60 = add i32 %v0_1b60, -860
  %v2_1b60 = inttoptr i32 %v1_1b60 to i32*
  %v3_1b60 = load i32, i32* %v2_1b60, align 4
  %v1_1b69 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_1b60, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_1b69)
  %v0_1b6e = load i32, i32* @ebp, align 4
  %v1_1b6e = add i32 %v0_1b6e, -184
  %v2_1b6e = inttoptr i32 %v1_1b6e to i32*
  %v3_1b6e = load i32, i32* %v2_1b6e, align 4
  %v2_1b74 = icmp slt i32 %v3_1b6e, 0
  br i1 %v2_1b74, label %dec_label_pc_1b9e, label %dec_label_pc_1b78

dec_label_pc_1b78:                                ; preds = %dec_label_pc_1b04
  %v1_1b78 = add i32 %v0_1b6e, -860
  %v2_1b78 = inttoptr i32 %v1_1b78 to i32*
  %v3_1b78 = load i32, i32* %v2_1b78, align 4
  %v1_1b81 = inttoptr i32 %v3_1b78 to i32*
  %v2_1b81 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1b81)
  %v0_1b88 = load i32, i32* @ebp, align 4
  %v1_1b88 = add i32 %v0_1b88, -184
  %v2_1b88 = inttoptr i32 %v1_1b88 to i32*
  %v3_1b88 = load i32, i32* %v2_1b88, align 4
  %not.v8_1b90 = icmp sle i32 %v2_1b81, %v3_1b88
  %phitmp = icmp eq i1 %not.v8_1b90, false
  br label %dec_label_pc_1b9e

dec_label_pc_1b9e:                                ; preds = %dec_label_pc_1b78, %dec_label_pc_1b04
  %v0_1bac = phi i32 [ %v0_1b6e, %dec_label_pc_1b04 ], [ %v0_1b88, %dec_label_pc_1b78 ]
  %storemerge = phi i1 [ false, %dec_label_pc_1b04 ], [ %phitmp, %dec_label_pc_1b78 ]
  br i1 %storemerge, label %dec_label_pc_1bac, label %dec_label_pc_1ba2

dec_label_pc_1ba2:                                ; preds = %dec_label_pc_1b9e
  %v0_1ba7 = call i32 @function_34f8()
  ret i32 %v0_1ba7

dec_label_pc_1bac:                                ; preds = %dec_label_pc_1b9e
  %v1_1bac = add i32 %v0_1bac, -860
  %v2_1bac = inttoptr i32 %v1_1bac to i32*
  %v3_1bac = load i32, i32* %v2_1bac, align 4
  %v1_1bb5 = inttoptr i32 %v3_1bac to i32*
  %v2_1bb5 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1bb5)
  %v0_1bba = load i32, i32* @ebp, align 4
  %v1_1bba = add i32 %v0_1bba, -184
  %v2_1bba = inttoptr i32 %v1_1bba to i32*
  %v3_1bba = load i32, i32* %v2_1bba, align 4
  %v1_1bc0 = sub i32 -1, %v3_1bba
  store i32 %v1_1bc0, i32* @edx, align 4
  %v2_1bc2 = add i32 %v2_1bb5, %v1_1bc0
  %v1_1bc8 = add i32 %v0_1bba, -860
  %v2_1bc8 = inttoptr i32 %v1_1bc8 to i32*
  %v3_1bc8 = load i32, i32* %v2_1bc8, align 4
  %v2_1bd1 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1bc8, i32 %v2_1bc2)
  %v0_1bda = load i32, i32* @ebp, align 4
  %v1_1bda = add i32 %v0_1bda, -692
  %v2_1be3 = inttoptr i32 %v1_1bda to i32*
  %v3_1be3 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1be3, i32 %v2_1bd1)
  %v0_1be8 = load i32, i32* @ebp, align 4
  %v1_1be8 = add i32 %v0_1be8, -232
  %v2_1be8 = inttoptr i32 %v1_1be8 to i32*
  %v3_1be8 = load i32, i32* %v2_1be8, align 4
  %v10_1bee = icmp eq i32 %v3_1be8, 122
  %v1_1bf1 = icmp eq i1 %v10_1bee, false
  br i1 %v1_1bf1, label %dec_label_pc_1bac.dec_label_pc_1c8b_crit_edge, label %dec_label_pc_1bf7

dec_label_pc_1bac.dec_label_pc_1c8b_crit_edge:    ; preds = %dec_label_pc_1bac
  %v1_1c91.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_1c8b

dec_label_pc_1bf7:                                ; preds = %dec_label_pc_1bac
  %v1_1bf7 = add i32 %v0_1be8, -172
  %v2_1bf7 = inttoptr i32 %v1_1bf7 to i32*
  store i32 1, i32* %v2_1bf7, align 4
  %v0_1c01 = load i32, i32* @ebp, align 4
  %v1_1c01 = add i32 %v0_1c01, -180
  %v1_1c07 = add i32 %v0_1c01, -860
  %v2_1c07 = inttoptr i32 %v1_1c07 to i32*
  %v3_1c07 = load i32, i32* %v2_1c07, align 4
  %v2_1c14 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %v1_1c01, i32 %v3_1c07)
  %v0_1c1c = load i32, i32* @ebp, align 4
  %v1_1c1c = add i32 %v0_1c1c, -176
  %v1_1c22 = add i32 %v0_1c1c, -184
  %v1_1c2c = add i32 %v0_1c1c, -180
  %v3_1c39 = inttoptr i32 %v1_1c2c to i32*
  %v4_1c39 = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_1c1c, i32* %v3_1c39, i32 %v1_1c22)
  %v0_1c41 = load i32, i32* @ebp, align 4
  %v1_1c41 = add i32 %v0_1c41, -168
  %v1_1c47 = add i32 %v0_1c41, -172
  %v1_1c51 = add i32 %v0_1c41, -176
  store i32 %v1_1c41, i32* %stack_var_-12, align 4
  %v3_1c5e = inttoptr i32 %v1_1c51 to i32*
  %v4_1c5e = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_1c41, i32* %v3_1c5e, i32 %v1_1c47)
  %v0_1c66 = load i32, i32* @ebp, align 4
  %v1_1c66 = add i32 %v0_1c66, -164
  %v1_1c6c = add i32 %v0_1c66, -168
  %v2_1c6c = inttoptr i32 %v1_1c6c to i32*
  %v3_1c6c = load i32, i32* %v2_1c6c, align 4
  %v1_1c76 = add i32 %v0_1c66, -860
  %v2_1c76 = inttoptr i32 %v1_1c76 to i32*
  %v3_1c76 = load i32, i32* %v2_1c76, align 4
  store i32 %v3_1c76, i32* %stack_var_-12, align 4
  store i32 %v1_1c66, i32* %stack_var_-16, align 4
  %v3_1c83 = inttoptr i32 %v1_1c66 to i32*
  %v4_1c83 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(i32* %v3_1c83, i32 %v3_1c76, i32 %v3_1c6c)
  %v16_1c88 = ptrtoint i32* %stack_var_-20 to i32
  %v0_1c8b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1c8b

dec_label_pc_1c8b:                                ; preds = %dec_label_pc_1bac.dec_label_pc_1c8b_crit_edge, %dec_label_pc_1bf7
  %v1_1c91 = phi i32 [ %v16_1c88, %dec_label_pc_1bf7 ], [ %v1_1c91.pre, %dec_label_pc_1bac.dec_label_pc_1c8b_crit_edge ]
  %v0_1c8b = phi i32 [ %v0_1c8b.pre, %dec_label_pc_1bf7 ], [ %v0_1be8, %dec_label_pc_1bac.dec_label_pc_1c8b_crit_edge ]
  %v1_1c8b = add i32 %v0_1c8b, -692
  %v2_1c91 = add i32 %v1_1c91, 4
  %v3_1c91 = inttoptr i32 %v2_1c91 to i32*
  store i32 %v1_1c8b, i32* %v3_1c91, align 4
  %v0_1c95 = load i32, i32* @ebp, align 4
  %v1_1c95 = add i32 %v0_1c95, -860
  %v2_1c95 = inttoptr i32 %v1_1c95 to i32*
  %v3_1c95 = load i32, i32* %v2_1c95, align 4
  %v1_1c9b = load i32, i32* @esp, align 4
  %v2_1c9b = inttoptr i32 %v1_1c9b to i32*
  store i32 %v3_1c95, i32* %v2_1c9b, align 4
  %v0_1c9e = load i32, i32* %stack_var_-16, align 4
  %v1_1c9e = load i32, i32* %stack_var_-12, align 4
  %v2_1c9e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_1c9e, i32 %v1_1c9e)
  %v0_1ca3 = load i32, i32* @ebp, align 4
  %v1_1ca3 = add i32 %v0_1ca3, -692
  %v1_1ca9 = load i32, i32* @esp, align 4
  %v2_1ca9 = inttoptr i32 %v1_1ca9 to i32*
  store i32 %v1_1ca3, i32* %v2_1ca9, align 4
  %v0_1cac = load i32, i32* %stack_var_-16, align 4
  %v1_1cac = inttoptr i32 %v0_1cac to i32*
  %v2_1cac = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1cac)
  %v0_1cb1 = call i32 @function_3484()
  ret i32 %v0_1cb1

; uselistorder directives
  uselistorder i32 %v1_1c66, { 1, 0 }
  uselistorder i32 %v1_1c41, { 1, 0 }
  uselistorder i32 %v1_1bc0, { 1, 0 }
  uselistorder i32 %v1_1b29, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c8b, { 1, 0 }
}

define i32 @function_1cb6() local_unnamed_addr {
dec_label_pc_1cb6:
  %esi.global-to-local = alloca i32, align 4
  %v0_1cb6 = load i32, i32* @ebp, align 4
  %v1_1cb6 = add i32 %v0_1cb6, -860
  %v2_1cb6 = inttoptr i32 %v1_1cb6 to i32*
  %v3_1cb6 = load i32, i32* %v2_1cb6, align 4
  %v1_1cbf = inttoptr i32 %v3_1cb6 to i32*
  %v2_1cbf = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1cbf)
  %tmp99 = icmp ult i32 %v2_1cbf, 3
  %v5_1cca = icmp eq i1 %tmp99, false
  br i1 %v5_1cca, label %dec_label_pc_1cd8, label %dec_label_pc_1cce

dec_label_pc_1cce:                                ; preds = %dec_label_pc_1cb6
  %v0_1cd3 = call i32 @function_34f8()
  ret i32 %v0_1cd3

dec_label_pc_1cd8:                                ; preds = %dec_label_pc_1cb6
  %v0_1cd8 = load i32, i32* @ebp, align 4
  %v1_1cd8 = add i32 %v0_1cd8, -860
  %v2_1cd8 = inttoptr i32 %v1_1cd8 to i32*
  %v3_1cd8 = load i32, i32* %v2_1cd8, align 4
  %v1_1ce1 = inttoptr i32 %v3_1cd8 to i32*
  %v2_1ce1 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1ce1)
  %v1_1ce6 = add i32 %v2_1ce1, -2
  %v0_1ced = load i32, i32* @ebp, align 4
  %v1_1ced = add i32 %v0_1ced, -860
  %v2_1ced = inttoptr i32 %v1_1ced to i32*
  %v3_1ced = load i32, i32* %v2_1ced, align 4
  %v2_1cf6 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1ced, i32 %v1_1ce6)
  store i32 %v2_1cf6, i32* %esi.global-to-local, align 4
  %v0_1cfd = load i32, i32* @ebp, align 4
  %v1_1cfd = add i32 %v0_1cfd, -860
  %v2_1cfd = inttoptr i32 %v1_1cfd to i32*
  %v3_1cfd = load i32, i32* %v2_1cfd, align 4
  %v1_1d06 = inttoptr i32 %v3_1cfd to i32*
  %v2_1d06 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1d06)
  %v1_1d0b = add i32 %v2_1d06, -3
  %v0_1d12 = load i32, i32* @ebp, align 4
  %v1_1d12 = add i32 %v0_1d12, -860
  %v2_1d12 = inttoptr i32 %v1_1d12 to i32*
  %v3_1d12 = load i32, i32* %v2_1d12, align 4
  %v2_1d1b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1d12, i32 %v1_1d0b)
  %v0_1d20 = load i32, i32* %esi.global-to-local, align 4
  %v2_1d27 = call i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %v2_1d1b, i32 %v0_1d20)
  %v0_1d2c = load i32, i32* @ebp, align 4
  %v1_1d2c = add i32 %v0_1d2c, -860
  %v2_1d2c = inttoptr i32 %v1_1d2c to i32*
  %v3_1d2c = load i32, i32* %v2_1d2c, align 4
  %v1_1d35 = inttoptr i32 %v3_1d2c to i32*
  %v2_1d35 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1d35)
  %v1_1d3a = add i32 %v2_1d35, -1
  %v0_1d41 = load i32, i32* @ebp, align 4
  %v1_1d41 = add i32 %v0_1d41, -860
  %v2_1d41 = inttoptr i32 %v1_1d41 to i32*
  %v3_1d41 = load i32, i32* %v2_1d41, align 4
  %v2_1d4a = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1d41, i32 %v1_1d3a)
  store i32 %v2_1d4a, i32* %esi.global-to-local, align 4
  %v0_1d51 = load i32, i32* @ebp, align 4
  %v1_1d51 = add i32 %v0_1d51, -860
  %v2_1d51 = inttoptr i32 %v1_1d51 to i32*
  %v3_1d51 = load i32, i32* %v2_1d51, align 4
  %v1_1d5a = inttoptr i32 %v3_1d51 to i32*
  %v2_1d5a = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1d5a)
  %v1_1d5f = add i32 %v2_1d5a, -2
  %v0_1d66 = load i32, i32* @ebp, align 4
  %v1_1d66 = add i32 %v0_1d66, -860
  %v2_1d66 = inttoptr i32 %v1_1d66 to i32*
  %v3_1d66 = load i32, i32* %v2_1d66, align 4
  %v2_1d6f = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1d66, i32 %v1_1d5f)
  %v0_1d74 = load i32, i32* %esi.global-to-local, align 4
  %v2_1d7b = call i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %v2_1d6f, i32 %v0_1d74)
  %v0_1d80 = call i32 @function_3484()
  ret i32 %v0_1d80
}

define i32 @function_1d85() local_unnamed_addr {
dec_label_pc_1d85:
  %esi.global-to-local = alloca i32, align 4
  %v0_1d85 = load i32, i32* @ebp, align 4
  %v1_1d85 = add i32 %v0_1d85, -860
  %v2_1d85 = inttoptr i32 %v1_1d85 to i32*
  %v3_1d85 = load i32, i32* %v2_1d85, align 4
  %v1_1d8e = inttoptr i32 %v3_1d85 to i32*
  %v2_1d8e = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1d8e)
  %tmp99 = or i32 %v2_1d8e, 1
  %tmp100 = icmp eq i32 %tmp99, 1
  %v5_1d99 = icmp eq i1 %tmp100, false
  br i1 %v5_1d99, label %dec_label_pc_1da7, label %dec_label_pc_1d9d

dec_label_pc_1d9d:                                ; preds = %dec_label_pc_1d85
  %v0_1da2 = call i32 @function_34f8()
  ret i32 %v0_1da2

dec_label_pc_1da7:                                ; preds = %dec_label_pc_1d85
  %v0_1da7 = load i32, i32* @ebp, align 4
  %v1_1da7 = add i32 %v0_1da7, -860
  %v2_1da7 = inttoptr i32 %v1_1da7 to i32*
  %v3_1da7 = load i32, i32* %v2_1da7, align 4
  %v1_1db0 = inttoptr i32 %v3_1da7 to i32*
  %v2_1db0 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1db0)
  %v1_1db5 = add i32 %v2_1db0, -1
  %v0_1dbc = load i32, i32* @ebp, align 4
  %v1_1dbc = add i32 %v0_1dbc, -860
  %v2_1dbc = inttoptr i32 %v1_1dbc to i32*
  %v3_1dbc = load i32, i32* %v2_1dbc, align 4
  %v2_1dc5 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1dbc, i32 %v1_1db5)
  store i32 %v2_1dc5, i32* %esi.global-to-local, align 4
  %v0_1dcc = load i32, i32* @ebp, align 4
  %v1_1dcc = add i32 %v0_1dcc, -860
  %v2_1dcc = inttoptr i32 %v1_1dcc to i32*
  %v3_1dcc = load i32, i32* %v2_1dcc, align 4
  %v1_1dd5 = inttoptr i32 %v3_1dcc to i32*
  %v2_1dd5 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1dd5)
  %v1_1dda = add i32 %v2_1dd5, -2
  %v0_1de1 = load i32, i32* @ebp, align 4
  %v1_1de1 = add i32 %v0_1de1, -860
  %v2_1de1 = inttoptr i32 %v1_1de1 to i32*
  %v3_1de1 = load i32, i32* %v2_1de1, align 4
  %v2_1dea = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1de1, i32 %v1_1dda)
  %v0_1def = load i32, i32* %esi.global-to-local, align 4
  %v2_1df6 = call i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %v2_1dea, i32 %v0_1def)
  %v0_1dfb = call i32 @function_3484()
  ret i32 %v0_1dfb

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_, { 4, 3, 2, 1, 0 }
}

define i32 @function_1e00() local_unnamed_addr {
dec_label_pc_1e00:
  %v0_1e00 = load i32, i32* @ebp, align 4
  %v1_1e00 = add i32 %v0_1e00, -860
  %v2_1e00 = inttoptr i32 %v1_1e00 to i32*
  %v3_1e00 = load i32, i32* %v2_1e00, align 4
  %v1_1e09 = inttoptr i32 %v3_1e00 to i32*
  %v2_1e09 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1e09)
  %tmp102 = or i32 %v2_1e09, 1
  %tmp103 = icmp eq i32 %tmp102, 1
  %v5_1e14 = icmp eq i1 %tmp103, false
  br i1 %v5_1e14, label %dec_label_pc_1e22, label %dec_label_pc_1e18

dec_label_pc_1e18:                                ; preds = %dec_label_pc_1e00
  %v0_1e1d = call i32 @function_34f8()
  ret i32 %v0_1e1d

dec_label_pc_1e22:                                ; preds = %dec_label_pc_1e00
  %v0_1e22 = load i32, i32* @ebp, align 4
  %v1_1e22 = add i32 %v0_1e22, -860
  %v2_1e22 = inttoptr i32 %v1_1e22 to i32*
  %v3_1e22 = load i32, i32* %v2_1e22, align 4
  %v1_1e2b = inttoptr i32 %v3_1e22 to i32*
  %v2_1e2b = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1e2b)
  %v1_1e30 = add i32 %v2_1e2b, -1
  %v0_1e37 = load i32, i32* @ebp, align 4
  %v1_1e37 = add i32 %v0_1e37, -860
  %v2_1e37 = inttoptr i32 %v1_1e37 to i32*
  %v3_1e37 = load i32, i32* %v2_1e37, align 4
  %v2_1e40 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1e37, i32 %v1_1e30)
  %v0_1e49 = load i32, i32* @ebp, align 4
  %v1_1e49 = add i32 %v0_1e49, -692
  %v2_1e52 = inttoptr i32 %v1_1e49 to i32*
  %v3_1e52 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_1e52, i32 %v2_1e40)
  %v0_1e57 = load i32, i32* @ebp, align 4
  %v1_1e57 = add i32 %v0_1e57, -156
  %v2_1e57 = inttoptr i32 %v1_1e57 to i32*
  store i32 2, i32* %v2_1e57, align 4
  %v0_1e61 = load i32, i32* @ebp, align 4
  %v1_1e61 = add i32 %v0_1e61, -160
  %v1_1e67 = add i32 %v0_1e61, -860
  %v2_1e67 = inttoptr i32 %v1_1e67 to i32*
  %v3_1e67 = load i32, i32* %v2_1e67, align 4
  %v2_1e74 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %v1_1e61, i32 %v3_1e67)
  %v0_1e7c = load i32, i32* @ebp, align 4
  %v1_1e7c = add i32 %v0_1e7c, -152
  %v1_1e82 = add i32 %v0_1e7c, -156
  %v1_1e8c = add i32 %v0_1e7c, -160
  %v3_1e99 = inttoptr i32 %v1_1e8c to i32*
  %v4_1e99 = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %v1_1e7c, i32* %v3_1e99, i32 %v1_1e82)
  %v0_1ea1 = load i32, i32* @ebp, align 4
  %v1_1ea1 = add i32 %v0_1ea1, -148
  %v1_1ea7 = add i32 %v0_1ea1, -692
  %v1_1eb1 = add i32 %v0_1ea1, -152
  %v2_1eb1 = inttoptr i32 %v1_1eb1 to i32*
  %v3_1eb1 = load i32, i32* %v2_1eb1, align 4
  %v1_1ebb = add i32 %v0_1ea1, -860
  %v2_1ebb = inttoptr i32 %v1_1ebb to i32*
  %v3_1ebb = load i32, i32* %v2_1ebb, align 4
  %v4_1ec8 = inttoptr i32 %v3_1ebb to i32*
  %v5_1ec8 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32 %v1_1ea1, i32* %v4_1ec8, i32 %v3_1eb1, i32 %v1_1ea7)
  %v0_1ed0 = load i32, i32* @ebp, align 4
  %v1_1ed0 = add i32 %v0_1ed0, -692
  %v1_1ed9 = inttoptr i32 %v1_1ed0 to i32*
  %v2_1ed9 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1ed9)
  %v0_1ede = call i32 @function_3484()
  ret i32 %v0_1ede

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv, { 4, 3, 2, 1, 0 }
}

define i32 @function_1ee3() local_unnamed_addr {
dec_label_pc_1ee3:
  %v0_1ee3 = load i32, i32* @ebp, align 4
  %v1_1ee3 = add i32 %v0_1ee3, -860
  %v2_1ee3 = inttoptr i32 %v1_1ee3 to i32*
  %v3_1ee3 = load i32, i32* %v2_1ee3, align 4
  %v1_1eec = inttoptr i32 %v3_1ee3 to i32*
  %v2_1eec = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1eec)
  %v1_1ef1 = icmp eq i32 %v2_1eec, 0
  %v5_1ef6 = icmp eq i1 %v1_1ef1, false
  br i1 %v5_1ef6, label %dec_label_pc_1f04, label %dec_label_pc_1efa

dec_label_pc_1efa:                                ; preds = %dec_label_pc_1ee3
  %v0_1eff = call i32 @function_34f8()
  ret i32 %v0_1eff

dec_label_pc_1f04:                                ; preds = %dec_label_pc_1ee3
  %v0_1f04 = load i32, i32* @ebp, align 4
  %v1_1f04 = add i32 %v0_1f04, -860
  %v2_1f04 = inttoptr i32 %v1_1f04 to i32*
  %v3_1f04 = load i32, i32* %v2_1f04, align 4
  %v1_1f0d = inttoptr i32 %v3_1f04 to i32*
  %v2_1f0d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1f0d)
  %v1_1f12 = add i32 %v2_1f0d, -1
  %v0_1f19 = load i32, i32* @ebp, align 4
  %v1_1f19 = add i32 %v0_1f19, -860
  %v2_1f19 = inttoptr i32 %v1_1f19 to i32*
  %v3_1f19 = load i32, i32* %v2_1f19, align 4
  %v2_1f22 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1f19, i32 %v1_1f12)
  %v1_1f2a = inttoptr i32 %v2_1f22 to i32*
  %v2_1f2a = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_1f2a)
  %v0_1f33 = load i32, i32* @ebp, align 4
  %v1_1f33 = add i32 %v0_1f33, -832
  %v2_1f3c = call i32 @_ZN7CBigNumC1Ej(i32 %v1_1f33, i32 %v2_1f2a)
  %v0_1f41 = load i32, i32* @ebp, align 4
  %v1_1f41 = add i32 %v0_1f41, -364
  %v1_1f47 = add i32 %v0_1f41, -832
  %v2_1f54 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_1f41, i32 %v1_1f47)
  %v0_1f5c = load i32, i32* @ebp, align 4
  %v1_1f5c = add i32 %v0_1f5c, -364
  %v1_1f66 = add i32 %v0_1f5c, -860
  %v2_1f66 = inttoptr i32 %v1_1f66 to i32*
  %v3_1f66 = load i32, i32* %v2_1f66, align 4
  %v2_1f6f = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_1f66, i32 %v1_1f5c)
  %v0_1f74 = load i32, i32* @ebp, align 4
  %v1_1f74 = add i32 %v0_1f74, -364
  %v1_1f7d = inttoptr i32 %v1_1f74 to i32*
  %v2_1f7d = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_1f7d)
  %v0_1f82 = load i32, i32* @ebp, align 4
  %v1_1f82 = add i32 %v0_1f82, -832
  %v1_1f8b = call i32 @_ZN7CBigNumD1Ev(i32 %v1_1f82)
  %v0_1f90 = call i32 @function_3484()
  ret i32 %v0_1f90

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZN7CBigNumC1Ej, { 1, 0 }
}

define i32 @function_1f95() local_unnamed_addr {
dec_label_pc_1f95:
  %v0_1f95 = load i32, i32* @ebp, align 4
  %v1_1f95 = add i32 %v0_1f95, -860
  %v2_1f95 = inttoptr i32 %v1_1f95 to i32*
  %v3_1f95 = load i32, i32* %v2_1f95, align 4
  %v1_1f9e = inttoptr i32 %v3_1f95 to i32*
  %v2_1f9e = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1f9e)
  %tmp100 = or i32 %v2_1f9e, 1
  %tmp101 = icmp eq i32 %tmp100, 1
  %v5_1fa9 = icmp eq i1 %tmp101, false
  br i1 %v5_1fa9, label %dec_label_pc_1fb7, label %dec_label_pc_1fad

dec_label_pc_1fad:                                ; preds = %dec_label_pc_1f95
  %v0_1fb2 = call i32 @function_34f8()
  ret i32 %v0_1fb2

dec_label_pc_1fb7:                                ; preds = %dec_label_pc_1f95
  %v0_1fb7 = load i32, i32* @ebp, align 4
  %v1_1fb7 = add i32 %v0_1fb7, -860
  %v2_1fb7 = inttoptr i32 %v1_1fb7 to i32*
  %v3_1fb7 = load i32, i32* %v2_1fb7, align 4
  %v1_1fc0 = inttoptr i32 %v3_1fb7 to i32*
  %v2_1fc0 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1fc0)
  %v1_1fc5 = add i32 %v2_1fc0, -2
  %v0_1fcc = load i32, i32* @ebp, align 4
  %v1_1fcc = add i32 %v0_1fcc, -860
  %v2_1fcc = inttoptr i32 %v1_1fcc to i32*
  %v3_1fcc = load i32, i32* %v2_1fcc, align 4
  %v2_1fd5 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1fcc, i32 %v1_1fc5)
  %v1_1fda = load i32, i32* @ebp, align 4
  %v2_1fda = add i32 %v1_1fda, -104
  %v3_1fda = inttoptr i32 %v2_1fda to i32*
  store i32 %v2_1fd5, i32* %v3_1fda, align 4
  %v0_1fdd = load i32, i32* @ebp, align 4
  %v1_1fdd = add i32 %v0_1fdd, -860
  %v2_1fdd = inttoptr i32 %v1_1fdd to i32*
  %v3_1fdd = load i32, i32* %v2_1fdd, align 4
  %v1_1fe6 = inttoptr i32 %v3_1fdd to i32*
  %v2_1fe6 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_1fe6)
  %v1_1feb = add i32 %v2_1fe6, -1
  %v0_1ff2 = load i32, i32* @ebp, align 4
  %v1_1ff2 = add i32 %v0_1ff2, -860
  %v2_1ff2 = inttoptr i32 %v1_1ff2 to i32*
  %v3_1ff2 = load i32, i32* %v2_1ff2, align 4
  %v2_1ffb = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_1ff2, i32 %v1_1feb)
  %v1_2000 = load i32, i32* @ebp, align 4
  %v2_2000 = add i32 %v1_2000, -100
  %v3_2000 = inttoptr i32 %v2_2000 to i32*
  store i32 %v2_1ffb, i32* %v3_2000, align 4
  %v0_2003 = load i32, i32* @ebp, align 4
  %v1_2003 = add i32 %v0_2003, -100
  %v2_2003 = inttoptr i32 %v1_2003 to i32*
  %v3_2003 = load i32, i32* %v2_2003, align 4
  %v1_200a = add i32 %v0_2003, -104
  %v2_200a = inttoptr i32 %v1_200a to i32*
  %v3_200a = load i32, i32* %v2_200a, align 4
  %v2_2010 = call i32 @_ZSteqIhSaIhEEbRKSt6vectorIT_T0_ES6_(i32 %v3_200a, i32 %v3_2003)
  %v1_2015 = trunc i32 %v2_2010 to i8
  %v2_2015 = load i32, i32* @ebp, align 4
  %v3_2015 = add i32 %v2_2015, -62
  %v4_2015 = inttoptr i32 %v3_2015 to i8*
  store i8 %v1_2015, i8* %v4_2015, align 1
  %v0_2018 = load i32, i32* @ebp, align 4
  %v1_2018 = add i32 %v0_2018, -860
  %v2_2018 = inttoptr i32 %v1_2018 to i32*
  %v3_2018 = load i32, i32* %v2_2018, align 4
  %v1_2021 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2018, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2021)
  %v0_2026 = load i32, i32* @ebp, align 4
  %v1_2026 = add i32 %v0_2026, -860
  %v2_2026 = inttoptr i32 %v1_2026 to i32*
  %v3_2026 = load i32, i32* %v2_2026, align 4
  %v1_202f = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2026, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_202f)
  %v0_2034 = load i32, i32* @ebp, align 4
  %v1_2034 = add i32 %v0_2034, -62
  %v2_2034 = inttoptr i32 %v1_2034 to i8*
  %v3_2034 = load i8, i8* %v2_2034, align 1
  %v10_2034 = icmp eq i8 %v3_2034, 0
  %. = select i1 %v10_2034, i32 ptrtoint (i32* @global_var_8e68.2198 to i32), i32 36480
  %v1_204a = add i32 %v0_2034, -860
  %v2_204a = inttoptr i32 %v1_204a to i32*
  %v3_204a = load i32, i32* %v2_204a, align 4
  %v2_2053 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_204a, i32 %.)
  %v0_2058 = load i32, i32* @ebp, align 4
  %v1_2058 = add i32 %v0_2058, -232
  %v2_2058 = inttoptr i32 %v1_2058 to i32*
  %v3_2058 = load i32, i32* %v2_2058, align 4
  %v10_205e = icmp eq i32 %v3_2058, 136
  %v1_2063 = icmp eq i1 %v10_205e, false
  br i1 %v1_2063, label %bb, label %dec_label_pc_2069

bb:                                               ; preds = %dec_label_pc_1fb7
  %v2_2063 = call i32 @function_347a()
  %v0_2069.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2069

dec_label_pc_2069:                                ; preds = %bb, %dec_label_pc_1fb7
  %v0_206f = phi i32 [ %v0_2069.pre, %bb ], [ %v0_2058, %dec_label_pc_1fb7 ]
  %v1_2069 = add i32 %v0_206f, -62
  %v2_2069 = inttoptr i32 %v1_2069 to i8*
  %v3_2069 = load i8, i8* %v2_2069, align 1
  %v10_2069 = icmp eq i8 %v3_2069, 0
  br i1 %v10_2069, label %dec_label_pc_2082, label %dec_label_pc_206f

dec_label_pc_206f:                                ; preds = %dec_label_pc_2069
  %v1_206f = add i32 %v0_206f, -860
  %v2_206f = inttoptr i32 %v1_206f to i32*
  %v3_206f = load i32, i32* %v2_206f, align 4
  %v1_2078 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_206f, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2078)
  %v0_207d = call i32 @function_347a()
  ret i32 %v0_207d

dec_label_pc_2082:                                ; preds = %dec_label_pc_2069
  %v0_2087 = call i32 @function_34f8()
  ret i32 %v0_2087

; uselistorder directives
  uselistorder i32 ()* @function_347a, { 1, 0 }
}

define i32 @function_208c() local_unnamed_addr {
dec_label_pc_208c:
  %v0_208c = load i32, i32* @ebp, align 4
  %v1_208c = add i32 %v0_208c, -860
  %v2_208c = inttoptr i32 %v1_208c to i32*
  %v3_208c = load i32, i32* %v2_208c, align 4
  %v1_2095 = inttoptr i32 %v3_208c to i32*
  %v2_2095 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2095)
  %v1_209a = icmp eq i32 %v2_2095, 0
  %v5_209f = icmp eq i1 %v1_209a, false
  br i1 %v5_209f, label %dec_label_pc_20ad, label %dec_label_pc_20a3

dec_label_pc_20a3:                                ; preds = %dec_label_pc_208c
  %v0_20a8 = call i32 @function_34f8()
  ret i32 %v0_20a8

dec_label_pc_20ad:                                ; preds = %dec_label_pc_208c
  %v0_20ad = load i32, i32* @ebp, align 4
  %v1_20ad = add i32 %v0_20ad, -860
  %v2_20ad = inttoptr i32 %v1_20ad to i32*
  %v3_20ad = load i32, i32* %v2_20ad, align 4
  %v1_20b6 = inttoptr i32 %v3_20ad to i32*
  %v2_20b6 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_20b6)
  %v1_20bb = add i32 %v2_20b6, -1
  %v0_20c2 = load i32, i32* @ebp, align 4
  %v1_20c2 = add i32 %v0_20c2, -860
  %v2_20c2 = inttoptr i32 %v1_20c2 to i32*
  %v3_20c2 = load i32, i32* %v2_20c2, align 4
  %v2_20cb = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_20c2, i32 %v1_20bb)
  %v0_20d2 = load i32, i32* @ebp, align 4
  %v1_20d2 = add i32 %v0_20d2, -832
  %v1_20e7 = add i32 %v0_20d2, -232
  %v2_20e7 = inttoptr i32 %v1_20e7 to i32*
  %v3_20e7 = load i32, i32* %v2_20e7, align 4
  %v1_20ed = sub i32 %v3_20e7, ptrtoint (i8* @global_var_8b.2199 to i32)
  store i32 %v1_20ed, i32* @7, align 4
  switch i32 %v1_20ed, label %dec_label_pc_228a [
    i32 0, label %dec_label_pc_2104
    i32 1, label %dec_label_pc_211f
    i32 4, label %dec_label_pc_213a
    i32 5, label %dec_label_pc_2180
    i32 6, label %dec_label_pc_21e4
    i32 7, label %dec_label_pc_2237
  ]

dec_label_pc_2104:                                ; preds = %dec_label_pc_20ad
  %v4_2115 = call i32 @_ZN7CBigNumpLERKS_(i32 %v1_20d2, i32 ptrtoint (i32* @global_var_8ea0.2201 to i32), i32 %v2_20cb)
  %v0_211a = call i32 @function_22af()
  ret i32 %v0_211a

dec_label_pc_211f:                                ; preds = %dec_label_pc_20ad
  %v4_2130 = call i32 @_ZN7CBigNummIERKS_(i32 %v1_20d2, i32 ptrtoint (i32* @global_var_8ea0.2201 to i32), i32 %v2_20cb)
  %v0_2135 = call i32 @function_22af()
  ret i32 %v0_2135

dec_label_pc_213a:                                ; preds = %dec_label_pc_20ad
  %v1_213a = add i32 %v0_20d2, -792
  store i32 %v1_213a, i32* @eax, align 4
  %v3_214d = call i32 @_ZngRK7CBigNum(i32 %v1_213a, i32 %v1_20d2)
  %v0_2155 = load i32, i32* @ebp, align 4
  %v1_2155 = add i32 %v0_2155, -792
  %v1_215f = add i32 %v0_2155, -832
  %v3_2168 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_215f, i32 %v1_2155)
  %v0_216d = load i32, i32* @ebp, align 4
  %v1_216d = add i32 %v0_216d, -792
  %v1_2176 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_216d)
  %v0_217b = call i32 @function_22af()
  ret i32 %v0_217b

dec_label_pc_2180:                                ; preds = %dec_label_pc_20ad
  %v3_2191 = call i32 @_ZltRK7CBigNumS1_(i32 %v1_20d2, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  store i32 %v3_2191, i32* @eax, align 4
  %v4_2196 = trunc i32 %v3_2191 to i8
  %v5_2196 = icmp eq i8 %v4_2196, 0
  br i1 %v5_2196, label %bb, label %dec_label_pc_219e

bb:                                               ; preds = %dec_label_pc_2180
  %v1_2198 = call i32 @function_22ae()
  br label %dec_label_pc_219e

dec_label_pc_219e:                                ; preds = %bb, %dec_label_pc_2180
  %v0_219e = load i32, i32* @ebp, align 4
  %v1_219e = add i32 %v0_219e, -772
  store i32 %v1_219e, i32* @eax, align 4
  %v1_21a4 = add i32 %v0_219e, -832
  %v3_21b1 = call i32 @_ZngRK7CBigNum(i32 %v1_219e, i32 %v1_21a4)
  %v0_21b9 = load i32, i32* @ebp, align 4
  %v1_21b9 = add i32 %v0_21b9, -772
  %v1_21c3 = add i32 %v0_21b9, -832
  %v3_21cc = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_21c3, i32 %v1_21b9)
  %v0_21d1 = load i32, i32* @ebp, align 4
  %v1_21d1 = add i32 %v0_21d1, -772
  %v1_21da = call i32 @_ZN7CBigNumD1Ev(i32 %v1_21d1)
  store i32 %v1_21da, i32* @eax, align 4
  %v0_21df = call i32 @function_22ae()
  ret i32 %v0_21df

dec_label_pc_21e4:                                ; preds = %dec_label_pc_20ad
  %v3_21f5 = call i32 @_ZeqRK7CBigNumS1_(i32 %v1_20d2, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v1_21fa = urem i32 %v3_21f5, 256
  %v0_2201 = load i32, i32* @ebp, align 4
  %v1_2201 = add i32 %v0_2201, -752
  %v3_220a = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2201, i32 %v1_21fa)
  %v0_220f = load i32, i32* @ebp, align 4
  %v1_220f = add i32 %v0_220f, -752
  %v1_2219 = add i32 %v0_220f, -832
  %v3_2222 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2219, i32 %v1_220f)
  %v0_2227 = load i32, i32* @ebp, align 4
  %v1_2227 = add i32 %v0_2227, -752
  %v2_2230 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2227)
  %v0_2235 = call i32 @function_22af()
  ret i32 %v0_2235

dec_label_pc_2237:                                ; preds = %dec_label_pc_20ad
  %v3_2248 = call i32 @_ZneRK7CBigNumS1_(i32 %v1_20d2, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v1_224d = urem i32 %v3_2248, 256
  %v0_2254 = load i32, i32* @ebp, align 4
  %v1_2254 = add i32 %v0_2254, -732
  %v3_225d = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2254, i32 %v1_224d)
  %v0_2262 = load i32, i32* @ebp, align 4
  %v1_2262 = add i32 %v0_2262, -732
  %v1_226c = add i32 %v0_2262, -832
  %v3_2275 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_226c, i32 %v1_2262)
  %v0_227a = load i32, i32* @ebp, align 4
  %v1_227a = add i32 %v0_227a, -732
  %v2_2283 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_227a)
  %v0_2288 = call i32 @function_22af()
  ret i32 %v0_2288

dec_label_pc_228a:                                ; preds = %dec_label_pc_20ad
  %v1_20fb = mul i32 %v1_20ed, 4
  %v2_20fb = add i32 %v1_20fb, ptrtoint (i32* @global_var_c3a4.2200 to i32)
  %v3_20fb = inttoptr i32 %v2_20fb to i32*
  %v4_20fb = load i32, i32* %v3_20fb, align 4
  ret i32 %v4_20fb

; uselistorder directives
  uselistorder i32 %v1_20ed, { 0, 2, 1 }
  uselistorder i32 %v1_20d2, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v2_20cb, { 1, 0 }
  uselistorder i32 ()* @function_22ae, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZngRK7CBigNum, { 1, 0 }
  uselistorder i32 ()* @function_22af, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8ea0.2201 to i32), { 1, 0 }
}

define i32 @function_22ae() local_unnamed_addr {
dec_label_pc_22ae:
  %v0_22ae = load i32, i32* @eax, align 4
  ret i32 %v0_22ae
}

define i32 @function_22af() local_unnamed_addr {
dec_label_pc_22af:
  %v0_22af = load i32, i32* @ebp, align 4
  %v1_22af = add i32 %v0_22af, -860
  %v2_22af = inttoptr i32 %v1_22af to i32*
  %v3_22af = load i32, i32* %v2_22af, align 4
  %v1_22b8 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_22af, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_22b8)
  %v0_22bd = load i32, i32* @ebp, align 4
  %v1_22bd = add i32 %v0_22bd, -352
  %v1_22c3 = add i32 %v0_22bd, -832
  %v2_22d0 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_22bd, i32 %v1_22c3)
  %v0_22d8 = load i32, i32* @ebp, align 4
  %v1_22d8 = add i32 %v0_22d8, -352
  %v1_22e2 = add i32 %v0_22d8, -860
  %v2_22e2 = inttoptr i32 %v1_22e2 to i32*
  %v3_22e2 = load i32, i32* %v2_22e2, align 4
  %v2_22eb = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_22e2, i32 %v1_22d8)
  %v0_22f0 = load i32, i32* @ebp, align 4
  %v1_22f0 = add i32 %v0_22f0, -352
  %v1_22f9 = inttoptr i32 %v1_22f0 to i32*
  %v2_22f9 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_22f9)
  %v0_22fe = load i32, i32* @ebp, align 4
  %v1_22fe = add i32 %v0_22fe, -832
  %v1_2307 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_22fe)
  %v0_230c = call i32 @function_3484()
  ret i32 %v0_230c
}

define i32 @function_2311() local_unnamed_addr {
dec_label_pc_2311:
  %v0_2311 = load i32, i32* @ebp, align 4
  %v1_2311 = add i32 %v0_2311, -860
  %v2_2311 = inttoptr i32 %v1_2311 to i32*
  %v3_2311 = load i32, i32* %v2_2311, align 4
  %v1_231a = inttoptr i32 %v3_2311 to i32*
  %v2_231a = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_231a)
  %tmp115 = or i32 %v2_231a, 1
  %tmp116 = icmp eq i32 %tmp115, 1
  %v5_2325 = icmp eq i1 %tmp116, false
  br i1 %v5_2325, label %dec_label_pc_2333, label %dec_label_pc_2329

dec_label_pc_2329:                                ; preds = %dec_label_pc_2311
  %v0_232e = call i32 @function_34f8()
  ret i32 %v0_232e

dec_label_pc_2333:                                ; preds = %dec_label_pc_2311
  %v0_2333 = load i32, i32* @ebp, align 4
  %v1_2333 = add i32 %v0_2333, -860
  %v2_2333 = inttoptr i32 %v1_2333 to i32*
  %v3_2333 = load i32, i32* %v2_2333, align 4
  %v1_233c = inttoptr i32 %v3_2333 to i32*
  %v2_233c = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_233c)
  %v1_2341 = add i32 %v2_233c, -2
  %v0_2348 = load i32, i32* @ebp, align 4
  %v1_2348 = add i32 %v0_2348, -860
  %v2_2348 = inttoptr i32 %v1_2348 to i32*
  %v3_2348 = load i32, i32* %v2_2348, align 4
  %v3_2351 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2348, i32 %v1_2341)
  %v0_2358 = load i32, i32* @ebp, align 4
  %v1_236d = add i32 %v0_2358, -860
  %v2_236d = inttoptr i32 %v1_236d to i32*
  %v3_236d = load i32, i32* %v2_236d, align 4
  %v1_2376 = inttoptr i32 %v3_236d to i32*
  %v2_2376 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2376)
  %v1_237b = add i32 %v2_2376, -1
  %v0_2382 = load i32, i32* @ebp, align 4
  %v1_2382 = add i32 %v0_2382, -860
  %v2_2382 = inttoptr i32 %v1_2382 to i32*
  %v3_2382 = load i32, i32* %v2_2382, align 4
  %v2_238b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2382, i32 %v1_237b)
  %v0_2392 = load i32, i32* @ebp, align 4
  %v1_2392 = add i32 %v0_2392, -712
  %v1_23a7 = add i32 %v0_2392, -692
  %v4_23b0 = call i32 @_ZN7CBigNumC1Ev(i32 %v1_23a7, i32 %v1_2392, i32 %v2_238b)
  %v0_23b5 = load i32, i32* @ebp, align 4
  %v1_23b5 = add i32 %v0_23b5, -232
  %v2_23b5 = inttoptr i32 %v1_23b5 to i32*
  %v3_23b5 = load i32, i32* %v2_23b5, align 4
  %v1_23bb = sub i32 %v3_23b5, ptrtoint (i32* @global_var_93.2206 to i32)
  store i32 %v1_23bb, i32* @8, align 4
  switch i32 %v1_23bb, label %dec_label_pc_2856 [
    i32 0, label %dec_label_pc_23d2
    i32 1, label %dec_label_pc_2422
    i32 7, label %dec_label_pc_2472
    i32 8, label %dec_label_pc_24f2
    i32 9, label %dec_label_pc_2572
    i32 10, label %dec_label_pc_25ca
    i32 11, label %dec_label_pc_2622
    i32 12, label %dec_label_pc_267a
    i32 13, label %dec_label_pc_26d2
    i32 14, label %dec_label_pc_272a
    i32 15, label %dec_label_pc_2782
    i32 16, label %dec_label_pc_27da
    i32 17, label %dec_label_pc_2818
  ]

dec_label_pc_23d2:                                ; preds = %dec_label_pc_2333
  %v1_23d2 = add i32 %v0_23b5, -672
  %v1_23d8 = add i32 %v0_23b5, -712
  %v1_23e2 = add i32 %v0_23b5, -832
  %v4_23ef = call i32 @_ZplRK7CBigNumS1_(i32 %v1_23d2, i32 %v1_23e2, i32 %v1_23d8)
  %v0_23f7 = load i32, i32* @ebp, align 4
  %v1_23f7 = add i32 %v0_23f7, -672
  %v1_2401 = add i32 %v0_23f7, -692
  %v3_240a = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2401, i32 %v1_23f7)
  %v0_240f = load i32, i32* @ebp, align 4
  %v1_240f = add i32 %v0_240f, -672
  %v1_2418 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_240f)
  %v0_241d = call i32 @function_287a()
  ret i32 %v0_241d

dec_label_pc_2422:                                ; preds = %dec_label_pc_2333
  %v1_2422 = add i32 %v0_23b5, -652
  %v1_2428 = add i32 %v0_23b5, -712
  %v1_2432 = add i32 %v0_23b5, -832
  %v4_243f = call i32 @_ZmiRK7CBigNumS1_(i32 %v1_2422, i32 %v1_2432, i32 %v1_2428)
  %v0_2447 = load i32, i32* @ebp, align 4
  %v1_2447 = add i32 %v0_2447, -652
  %v1_2451 = add i32 %v0_2447, -692
  %v3_245a = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2451, i32 %v1_2447)
  %v0_245f = load i32, i32* @ebp, align 4
  %v1_245f = add i32 %v0_245f, -652
  %v1_2468 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_245f)
  %v0_246d = call i32 @function_287a()
  ret i32 %v0_246d

dec_label_pc_2472:                                ; preds = %dec_label_pc_2333
  %v1_247a = add i32 %v0_23b5, -832
  %v3_2483 = call i32 @_ZneRK7CBigNumS1_(i32 %v1_247a, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v4_2488 = trunc i32 %v3_2483 to i8
  %v5_2488 = icmp eq i8 %v4_2488, 0
  br i1 %v5_2488, label %dec_label_pc_24ad, label %dec_label_pc_248c

dec_label_pc_248c:                                ; preds = %dec_label_pc_2472
  %v0_2494 = load i32, i32* @ebp, align 4
  %v1_2494 = add i32 %v0_2494, -712
  %v3_249d = call i32 @_ZneRK7CBigNumS1_(i32 %v1_2494, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v4_24a2 = trunc i32 %v3_249d to i8
  %v5_24a2 = icmp eq i8 %v4_24a2, 0
  br i1 %v5_24a2, label %dec_label_pc_24ad, label %dec_label_pc_24b2

dec_label_pc_24ad:                                ; preds = %dec_label_pc_248c, %dec_label_pc_2472
  br label %dec_label_pc_24b2

dec_label_pc_24b2:                                ; preds = %dec_label_pc_248c, %dec_label_pc_24ad
  %storemerge12 = phi i32 [ 0, %dec_label_pc_24ad ], [ 1, %dec_label_pc_248c ]
  %v0_24b9 = load i32, i32* @ebp, align 4
  %v1_24b9 = add i32 %v0_24b9, -632
  %v3_24c2 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_24b9, i32 %storemerge12)
  %v0_24c7 = load i32, i32* @ebp, align 4
  %v1_24c7 = add i32 %v0_24c7, -632
  %v1_24d1 = add i32 %v0_24c7, -692
  %v3_24da = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_24d1, i32 %v1_24c7)
  %v0_24df = load i32, i32* @ebp, align 4
  %v1_24df = add i32 %v0_24df, -632
  %v2_24e8 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_24df)
  %v0_24ed = call i32 @function_287a()
  ret i32 %v0_24ed

dec_label_pc_24f2:                                ; preds = %dec_label_pc_2333
  %v1_24fa = add i32 %v0_23b5, -832
  %v3_2503 = call i32 @_ZneRK7CBigNumS1_(i32 %v1_24fa, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v4_2508 = trunc i32 %v3_2503 to i8
  %v5_2508 = icmp eq i8 %v4_2508, 0
  %v1_250a = icmp eq i1 %v5_2508, false
  br i1 %v1_250a, label %dec_label_pc_2532, label %dec_label_pc_250c

dec_label_pc_250c:                                ; preds = %dec_label_pc_24f2
  %v0_2514 = load i32, i32* @ebp, align 4
  %v1_2514 = add i32 %v0_2514, -712
  %v3_251d = call i32 @_ZneRK7CBigNumS1_(i32 %v1_2514, i32 ptrtoint (i32* @global_var_8e8c.2202 to i32))
  %v4_2522 = trunc i32 %v3_251d to i8
  %v5_2522 = icmp ne i8 %v4_2522, 0
  %. = zext i1 %v5_2522 to i32
  br label %dec_label_pc_2532

dec_label_pc_2532:                                ; preds = %dec_label_pc_250c, %dec_label_pc_24f2
  %storemerge9 = phi i32 [ 1, %dec_label_pc_24f2 ], [ %., %dec_label_pc_250c ]
  %v0_2539 = load i32, i32* @ebp, align 4
  %v1_2539 = add i32 %v0_2539, -612
  %v3_2542 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2539, i32 %storemerge9)
  %v0_2547 = load i32, i32* @ebp, align 4
  %v1_2547 = add i32 %v0_2547, -612
  %v1_2551 = add i32 %v0_2547, -692
  %v3_255a = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2551, i32 %v1_2547)
  %v0_255f = load i32, i32* @ebp, align 4
  %v1_255f = add i32 %v0_255f, -612
  %v2_2568 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_255f)
  %v0_256d = call i32 @function_287a()
  ret i32 %v0_256d

dec_label_pc_2572:                                ; preds = %dec_label_pc_2333
  %v1_2572 = add i32 %v0_23b5, -712
  %v1_257c = add i32 %v0_23b5, -832
  %v3_2585 = call i32 @_ZeqRK7CBigNumS1_(i32 %v1_257c, i32 %v1_2572)
  %v1_258a = urem i32 %v3_2585, 256
  %v0_2591 = load i32, i32* @ebp, align 4
  %v1_2591 = add i32 %v0_2591, -592
  %v3_259a = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2591, i32 %v1_258a)
  %v0_259f = load i32, i32* @ebp, align 4
  %v1_259f = add i32 %v0_259f, -592
  %v1_25a9 = add i32 %v0_259f, -692
  %v3_25b2 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_25a9, i32 %v1_259f)
  %v0_25b7 = load i32, i32* @ebp, align 4
  %v1_25b7 = add i32 %v0_25b7, -592
  %v2_25c0 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_25b7)
  %v0_25c5 = call i32 @function_287a()
  ret i32 %v0_25c5

dec_label_pc_25ca:                                ; preds = %dec_label_pc_2333
  %v1_25ca = add i32 %v0_23b5, -712
  %v1_25d4 = add i32 %v0_23b5, -832
  %v3_25dd = call i32 @_ZeqRK7CBigNumS1_(i32 %v1_25d4, i32 %v1_25ca)
  %v1_25e2 = urem i32 %v3_25dd, 256
  %v0_25e9 = load i32, i32* @ebp, align 4
  %v1_25e9 = add i32 %v0_25e9, -572
  %v3_25f2 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_25e9, i32 %v1_25e2)
  %v0_25f7 = load i32, i32* @ebp, align 4
  %v1_25f7 = add i32 %v0_25f7, -572
  %v1_2601 = add i32 %v0_25f7, -692
  %v3_260a = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2601, i32 %v1_25f7)
  %v0_260f = load i32, i32* @ebp, align 4
  %v1_260f = add i32 %v0_260f, -572
  %v2_2618 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_260f)
  %v0_261d = call i32 @function_287a()
  ret i32 %v0_261d

dec_label_pc_2622:                                ; preds = %dec_label_pc_2333
  %v1_2622 = add i32 %v0_23b5, -712
  %v1_262c = add i32 %v0_23b5, -832
  %v3_2635 = call i32 @_ZneRK7CBigNumS1_(i32 %v1_262c, i32 %v1_2622)
  %v1_263a = urem i32 %v3_2635, 256
  %v0_2641 = load i32, i32* @ebp, align 4
  %v1_2641 = add i32 %v0_2641, -552
  %v3_264a = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2641, i32 %v1_263a)
  %v0_264f = load i32, i32* @ebp, align 4
  %v1_264f = add i32 %v0_264f, -552
  %v1_2659 = add i32 %v0_264f, -692
  %v3_2662 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2659, i32 %v1_264f)
  %v0_2667 = load i32, i32* @ebp, align 4
  %v1_2667 = add i32 %v0_2667, -552
  %v2_2670 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2667)
  %v0_2675 = call i32 @function_287a()
  ret i32 %v0_2675

dec_label_pc_267a:                                ; preds = %dec_label_pc_2333
  %v1_267a = add i32 %v0_23b5, -712
  %v1_2684 = add i32 %v0_23b5, -832
  %v3_268d = call i32 @_ZltRK7CBigNumS1_(i32 %v1_2684, i32 %v1_267a)
  %v1_2692 = urem i32 %v3_268d, 256
  %v0_2699 = load i32, i32* @ebp, align 4
  %v1_2699 = add i32 %v0_2699, -532
  %v3_26a2 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2699, i32 %v1_2692)
  %v0_26a7 = load i32, i32* @ebp, align 4
  %v1_26a7 = add i32 %v0_26a7, -532
  %v1_26b1 = add i32 %v0_26a7, -692
  %v3_26ba = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_26b1, i32 %v1_26a7)
  %v0_26bf = load i32, i32* @ebp, align 4
  %v1_26bf = add i32 %v0_26bf, -532
  %v2_26c8 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_26bf)
  %v0_26cd = call i32 @function_287a()
  ret i32 %v0_26cd

dec_label_pc_26d2:                                ; preds = %dec_label_pc_2333
  %v1_26d2 = add i32 %v0_23b5, -712
  %v1_26dc = add i32 %v0_23b5, -832
  %v3_26e5 = call i32 @_ZgtRK7CBigNumS1_(i32 %v1_26dc, i32 %v1_26d2)
  %v1_26ea = urem i32 %v3_26e5, 256
  %v0_26f1 = load i32, i32* @ebp, align 4
  %v1_26f1 = add i32 %v0_26f1, -512
  %v3_26fa = call i32 @_ZN7CBigNumC1Ei(i32 %v1_26f1, i32 %v1_26ea)
  %v0_26ff = load i32, i32* @ebp, align 4
  %v1_26ff = add i32 %v0_26ff, -512
  %v1_2709 = add i32 %v0_26ff, -692
  %v3_2712 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2709, i32 %v1_26ff)
  %v0_2717 = load i32, i32* @ebp, align 4
  %v1_2717 = add i32 %v0_2717, -512
  %v2_2720 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2717)
  %v0_2725 = call i32 @function_287a()
  ret i32 %v0_2725

dec_label_pc_272a:                                ; preds = %dec_label_pc_2333
  %v1_272a = add i32 %v0_23b5, -712
  %v1_2734 = add i32 %v0_23b5, -832
  %v3_273d = call i32 @_ZleRK7CBigNumS1_(i32 %v1_2734, i32 %v1_272a)
  %v1_2742 = urem i32 %v3_273d, 256
  %v0_2749 = load i32, i32* @ebp, align 4
  %v1_2749 = add i32 %v0_2749, -492
  %v3_2752 = call i32 @_ZN7CBigNumC1Ei(i32 %v1_2749, i32 %v1_2742)
  %v0_2757 = load i32, i32* @ebp, align 4
  %v1_2757 = add i32 %v0_2757, -492
  %v1_2761 = add i32 %v0_2757, -692
  %v3_276a = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2761, i32 %v1_2757)
  %v0_276f = load i32, i32* @ebp, align 4
  %v1_276f = add i32 %v0_276f, -492
  %v2_2778 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_276f)
  %v0_277d = call i32 @function_287a()
  ret i32 %v0_277d

dec_label_pc_2782:                                ; preds = %dec_label_pc_2333
  %v1_2782 = add i32 %v0_23b5, -712
  %v1_278c = add i32 %v0_23b5, -832
  %v3_2795 = call i32 @_ZgeRK7CBigNumS1_(i32 %v1_278c, i32 %v1_2782)
  %v1_279a = urem i32 %v3_2795, 256
  %v0_27a1 = load i32, i32* @ebp, align 4
  %v1_27a1 = add i32 %v0_27a1, -472
  %v3_27aa = call i32 @_ZN7CBigNumC1Ei(i32 %v1_27a1, i32 %v1_279a)
  %v0_27af = load i32, i32* @ebp, align 4
  %v1_27af = add i32 %v0_27af, -472
  %v1_27b9 = add i32 %v0_27af, -692
  %v3_27c2 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_27b9, i32 %v1_27af)
  %v0_27c7 = load i32, i32* @ebp, align 4
  %v1_27c7 = add i32 %v0_27c7, -472
  %v2_27d0 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_27c7)
  %v0_27d5 = call i32 @function_287a()
  ret i32 %v0_27d5

dec_label_pc_27da:                                ; preds = %dec_label_pc_2333
  %v1_27da = add i32 %v0_23b5, -712
  %v1_27e4 = add i32 %v0_23b5, -832
  %v3_27ed = call i32 @_ZltRK7CBigNumS1_(i32 %v1_27e4, i32 %v1_27da)
  %v4_27f2 = trunc i32 %v3_27ed to i8
  %v5_27f2 = icmp eq i8 %v4_27f2, 0
  %v0_27fe = load i32, i32* @ebp, align 4
  %storemerge6.v = select i1 %v5_27f2, i32 -712, i32 -832
  %storemerge6 = add i32 %v0_27fe, %storemerge6.v
  %v1_2808 = add i32 %v0_27fe, -692
  %v3_2811 = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2808, i32 %storemerge6)
  %v0_2816 = call i32 @function_287a()
  ret i32 %v0_2816

dec_label_pc_2818:                                ; preds = %dec_label_pc_2333
  %v1_2818 = add i32 %v0_23b5, -712
  %v1_2822 = add i32 %v0_23b5, -832
  %v3_282b = call i32 @_ZgtRK7CBigNumS1_(i32 %v1_2822, i32 %v1_2818)
  %v4_2830 = trunc i32 %v3_282b to i8
  %v5_2830 = icmp eq i8 %v4_2830, 0
  %v0_283c = load i32, i32* @ebp, align 4
  %storemerge.v = select i1 %v5_2830, i32 -712, i32 -832
  %storemerge = add i32 %v0_283c, %storemerge.v
  %v1_2846 = add i32 %v0_283c, -692
  %v3_284f = call i32 @_ZN7CBigNumaSERKS_(i32 %v1_2846, i32 %storemerge)
  %v0_2854 = call i32 @function_287a()
  ret i32 %v0_2854

dec_label_pc_2856:                                ; preds = %dec_label_pc_2333
  %v1_23c9 = mul i32 %v1_23bb, 4
  %v2_23c9 = add i32 %v1_23c9, ptrtoint (i32* @global_var_c3c4.2207 to i32)
  %v3_23c9 = inttoptr i32 %v2_23c9 to i32*
  %v4_23c9 = load i32, i32* %v3_23c9, align 4
  ret i32 %v4_23c9

; uselistorder directives
  uselistorder i32 %v0_283c, { 1, 0 }
  uselistorder i32 %v0_27fe, { 1, 0 }
  uselistorder i32 %v1_23bb, { 0, 2, 1 }
  uselistorder i32 %v0_23b5, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 26 }
  uselistorder i32 (i32, i32)* @_ZgtRK7CBigNumS1_, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZeqRK7CBigNumS1_, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CBigNumC1Ei, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZneRK7CBigNumS1_, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_8e8c.2202 to i32), { 2, 3, 0, 1, 6, 5, 4 }
  uselistorder i32 ()* @function_287a, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CBigNumaSERKS_, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_24b2, { 1, 0 }
}

define i32 @function_287a() local_unnamed_addr {
dec_label_pc_287a:
  %v0_287a = load i32, i32* @ebp, align 4
  %v1_287a = add i32 %v0_287a, -860
  %v2_287a = inttoptr i32 %v1_287a to i32*
  %v3_287a = load i32, i32* %v2_287a, align 4
  %v1_2883 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_287a, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2883)
  %v0_2888 = load i32, i32* @ebp, align 4
  %v1_2888 = add i32 %v0_2888, -860
  %v2_2888 = inttoptr i32 %v1_2888 to i32*
  %v3_2888 = load i32, i32* %v2_2888, align 4
  %v1_2891 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2888, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2891)
  %v0_2896 = load i32, i32* @ebp, align 4
  %v1_2896 = add i32 %v0_2896, -340
  %v1_289c = add i32 %v0_2896, -692
  %v2_28a9 = call i32 @_ZNK7CBigNum6getvchEv(i32 %v1_2896, i32 %v1_289c)
  %v0_28b1 = load i32, i32* @ebp, align 4
  %v1_28b1 = add i32 %v0_28b1, -340
  %v1_28bb = add i32 %v0_28b1, -860
  %v2_28bb = inttoptr i32 %v1_28bb to i32*
  %v3_28bb = load i32, i32* %v2_28bb, align 4
  %v2_28c4 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_28bb, i32 %v1_28b1)
  %v0_28c9 = load i32, i32* @ebp, align 4
  %v1_28c9 = add i32 %v0_28c9, -340
  %v1_28d2 = inttoptr i32 %v1_28c9 to i32*
  %v2_28d2 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_28d2)
  %v0_28d7 = load i32, i32* @ebp, align 4
  %v1_28d7 = add i32 %v0_28d7, -232
  %v2_28d7 = inttoptr i32 %v1_28d7 to i32*
  %v3_28d7 = load i32, i32* %v2_28d7, align 4
  %v10_28dd = icmp eq i32 %v3_28d7, 157
  %v1_28e2 = icmp eq i1 %v10_28dd, false
  br i1 %v1_28e2, label %dec_label_pc_2934, label %dec_label_pc_28e4

dec_label_pc_28e4:                                ; preds = %dec_label_pc_287a
  %v1_28e4 = add i32 %v0_28d7, -860
  %v2_28e4 = inttoptr i32 %v1_28e4 to i32*
  %v3_28e4 = load i32, i32* %v2_28e4, align 4
  %v1_28ed = inttoptr i32 %v3_28e4 to i32*
  %v2_28ed = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_28ed)
  %v1_28f2 = add i32 %v2_28ed, -1
  %v0_28f9 = load i32, i32* @ebp, align 4
  %v1_28f9 = add i32 %v0_28f9, -860
  %v2_28f9 = inttoptr i32 %v1_28f9 to i32*
  %v3_28f9 = load i32, i32* %v2_28f9, align 4
  %v2_2902 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_28f9, i32 %v1_28f2)
  %v1_290a = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v2_2902, 0
  %v2_290a = call i1 @_Z10CastToBoolRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_290a)
  %v5_290f = icmp eq i1 %v2_290a, false
  br i1 %v5_290f, label %dec_label_pc_2923, label %dec_label_pc_2913

dec_label_pc_2913:                                ; preds = %dec_label_pc_28e4
  %v0_2913 = load i32, i32* @ebp, align 4
  %v1_2913 = add i32 %v0_2913, -860
  %v2_2913 = inttoptr i32 %v1_2913 to i32*
  %v3_2913 = load i32, i32* %v2_2913, align 4
  %v1_291c = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2913, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_291c)
  br label %dec_label_pc_2934

dec_label_pc_2923:                                ; preds = %dec_label_pc_28e4
  br label %dec_label_pc_2934

dec_label_pc_2934:                                ; preds = %dec_label_pc_287a, %dec_label_pc_2913, %dec_label_pc_2923
  %storemerge3 = phi i1 [ false, %dec_label_pc_2923 ], [ true, %dec_label_pc_2913 ], [ true, %dec_label_pc_287a ]
  %v0_2934 = load i32, i32* @ebp, align 4
  %v1_2934 = add i32 %v0_2934, -692
  %v1_293d = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2934)
  %v0_2953 = load i32, i32* @ebp, align 4
  %v1_2953 = add i32 %v0_2953, -712
  %v1_295c = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2953)
  %v0_2972 = load i32, i32* @ebp, align 4
  %v1_2972 = add i32 %v0_2972, -832
  %v1_297b = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2972)
  br i1 %storemerge3, label %bb, label %dec_label_pc_2989

bb:                                               ; preds = %dec_label_pc_2934
  %v1_2983 = call i32 @function_347d()
  br label %dec_label_pc_2989

dec_label_pc_2989:                                ; preds = %bb, %dec_label_pc_2934
  %v0_2989 = call i32 @function_34f8()
  ret i32 %v0_2989

; uselistorder directives
  uselistorder i1 (%"vector<unsignedchar,std::allocator<unsignedchar>>")* @_Z10CastToBoolRKSt6vectorIhSaIhEE, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNK7CBigNum6getvchEv, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2934, { 2, 1, 0 }
}

define i32 @function_298e() local_unnamed_addr {
dec_label_pc_298e:
  %v0_298e = load i32, i32* @ebp, align 4
  %v1_298e = add i32 %v0_298e, -860
  %v2_298e = inttoptr i32 %v1_298e to i32*
  %v3_298e = load i32, i32* %v2_298e, align 4
  %v1_2997 = inttoptr i32 %v3_298e to i32*
  %v2_2997 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2997)
  %tmp105 = icmp ult i32 %v2_2997, 3
  %v5_29a2 = icmp eq i1 %tmp105, false
  br i1 %v5_29a2, label %dec_label_pc_29b0, label %dec_label_pc_29a6

dec_label_pc_29a6:                                ; preds = %dec_label_pc_298e
  %v0_29ab = call i32 @function_34f8()
  ret i32 %v0_29ab

dec_label_pc_29b0:                                ; preds = %dec_label_pc_298e
  %v0_29b0 = load i32, i32* @ebp, align 4
  %v1_29b0 = add i32 %v0_29b0, -860
  %v2_29b0 = inttoptr i32 %v1_29b0 to i32*
  %v3_29b0 = load i32, i32* %v2_29b0, align 4
  %v1_29b9 = inttoptr i32 %v3_29b0 to i32*
  %v2_29b9 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_29b9)
  %v1_29be = add i32 %v2_29b9, -3
  %v0_29c5 = load i32, i32* @ebp, align 4
  %v1_29c5 = add i32 %v0_29c5, -860
  %v2_29c5 = inttoptr i32 %v1_29c5 to i32*
  %v3_29c5 = load i32, i32* %v2_29c5, align 4
  %v2_29ce = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_29c5, i32 %v1_29be)
  %v0_29d5 = load i32, i32* @ebp, align 4
  %v1_29ea = add i32 %v0_29d5, -860
  %v2_29ea = inttoptr i32 %v1_29ea to i32*
  %v3_29ea = load i32, i32* %v2_29ea, align 4
  %v1_29f3 = inttoptr i32 %v3_29ea to i32*
  %v2_29f3 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_29f3)
  %v1_29f8 = add i32 %v2_29f3, -2
  %v0_29ff = load i32, i32* @ebp, align 4
  %v1_29ff = add i32 %v0_29ff, -860
  %v2_29ff = inttoptr i32 %v1_29ff to i32*
  %v3_29ff = load i32, i32* %v2_29ff, align 4
  %v2_2a08 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_29ff, i32 %v1_29f8)
  %v0_2a0f = load i32, i32* @ebp, align 4
  %v1_2a24 = add i32 %v0_2a0f, -860
  %v2_2a24 = inttoptr i32 %v1_2a24 to i32*
  %v3_2a24 = load i32, i32* %v2_2a24, align 4
  %v1_2a2d = inttoptr i32 %v3_2a24 to i32*
  %v2_2a2d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2a2d)
  %v1_2a32 = add i32 %v2_2a2d, -1
  %v0_2a39 = load i32, i32* @ebp, align 4
  %v1_2a39 = add i32 %v0_2a39, -860
  %v2_2a39 = inttoptr i32 %v1_2a39 to i32*
  %v3_2a39 = load i32, i32* %v2_2a39, align 4
  %v2_2a42 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2a39, i32 %v1_2a32)
  %v0_2a49 = load i32, i32* @ebp, align 4
  %v1_2a5e = add i32 %v0_2a49, -692
  %v1_2a68 = add i32 %v0_2a49, -712
  %v2_2a71 = call i32 @_ZleRK7CBigNumS1_(i32 %v1_2a68, i32 %v1_2a5e)
  %v4_2a76 = trunc i32 %v2_2a71 to i8
  %v5_2a76 = icmp eq i8 %v4_2a76, 0
  br i1 %v5_2a76, label %dec_label_pc_2a9d, label %dec_label_pc_2a7a

dec_label_pc_2a7a:                                ; preds = %dec_label_pc_29b0
  %v0_2a7a = load i32, i32* @ebp, align 4
  %v1_2a7a = add i32 %v0_2a7a, -832
  %v1_2a84 = add i32 %v0_2a7a, -692
  %v2_2a8d = call i32 @_ZltRK7CBigNumS1_(i32 %v1_2a84, i32 %v1_2a7a)
  %v4_2a92 = trunc i32 %v2_2a8d to i8
  %v5_2a92 = icmp eq i8 %v4_2a92, 0
  br i1 %v5_2a92, label %dec_label_pc_2a9d, label %dec_label_pc_2aa2

dec_label_pc_2a9d:                                ; preds = %dec_label_pc_2a7a, %dec_label_pc_29b0
  br label %dec_label_pc_2aa2

dec_label_pc_2aa2:                                ; preds = %dec_label_pc_2a7a, %dec_label_pc_2a9d
  %storemerge4 = phi i8 [ 0, %dec_label_pc_2a9d ], [ 1, %dec_label_pc_2a7a ]
  %v2_2aa2 = load i32, i32* @ebp, align 4
  %v3_2aa2 = add i32 %v2_2aa2, -61
  %v4_2aa2 = inttoptr i32 %v3_2aa2 to i8*
  store i8 %storemerge4, i8* %v4_2aa2, align 1
  %v0_2aa5 = load i32, i32* @ebp, align 4
  %v1_2aa5 = add i32 %v0_2aa5, -860
  %v2_2aa5 = inttoptr i32 %v1_2aa5 to i32*
  %v3_2aa5 = load i32, i32* %v2_2aa5, align 4
  %v1_2aae = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2aa5, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2aae)
  %v0_2ab3 = load i32, i32* @ebp, align 4
  %v1_2ab3 = add i32 %v0_2ab3, -860
  %v2_2ab3 = inttoptr i32 %v1_2ab3 to i32*
  %v3_2ab3 = load i32, i32* %v2_2ab3, align 4
  %v1_2abc = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2ab3, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2abc)
  %v0_2ac1 = load i32, i32* @ebp, align 4
  %v1_2ac1 = add i32 %v0_2ac1, -860
  %v2_2ac1 = inttoptr i32 %v1_2ac1 to i32*
  %v3_2ac1 = load i32, i32* %v2_2ac1, align 4
  %v1_2aca = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2ac1, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2aca)
  %v0_2acf = load i32, i32* @ebp, align 4
  %v1_2acf = add i32 %v0_2acf, -61
  %v2_2acf = inttoptr i32 %v1_2acf to i8*
  %v3_2acf = load i8, i8* %v2_2acf, align 1
  %v10_2acf = icmp eq i8 %v3_2acf, 0
  %. = select i1 %v10_2acf, i32 ptrtoint (i32* @global_var_8e68.2198 to i32), i32 36480
  %v1_2ae5 = add i32 %v0_2acf, -860
  %v2_2ae5 = inttoptr i32 %v1_2ae5 to i32*
  %v3_2ae5 = load i32, i32* %v2_2ae5, align 4
  %v2_2aee = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_2ae5, i32 %.)
  %v0_2af3 = load i32, i32* @ebp, align 4
  %v1_2af3 = add i32 %v0_2af3, -832
  %v1_2afc = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2af3)
  %v0_2b01 = load i32, i32* @ebp, align 4
  %v1_2b01 = add i32 %v0_2b01, -712
  %v1_2b0a = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2b01)
  %v0_2b0f = load i32, i32* @ebp, align 4
  %v1_2b0f = add i32 %v0_2b0f, -692
  %v1_2b18 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_2b0f)
  %v0_2b1d = call i32 @function_3484()
  ret i32 %v0_2b1d

; uselistorder directives
  uselistorder i32 %v0_2a49, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZltRK7CBigNumS1_, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZleRK7CBigNumS1_, { 1, 0 }
  uselistorder label %dec_label_pc_2aa2, { 1, 0 }
}

define i32 @function_2b22() local_unnamed_addr {
dec_label_pc_2b22:
  %v0_2b22 = load i32, i32* @ebp, align 4
  %v1_2b22 = add i32 %v0_2b22, -860
  %v2_2b22 = inttoptr i32 %v1_2b22 to i32*
  %v3_2b22 = load i32, i32* %v2_2b22, align 4
  %v1_2b2b = inttoptr i32 %v3_2b22 to i32*
  %v2_2b2b = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2b2b)
  %v1_2b30 = icmp eq i32 %v2_2b2b, 0
  %v5_2b35 = icmp eq i1 %v1_2b30, false
  br i1 %v5_2b35, label %dec_label_pc_2b43, label %dec_label_pc_2b39

dec_label_pc_2b39:                                ; preds = %dec_label_pc_2b22
  %v0_2b3e = call i32 @function_34f8()
  ret i32 %v0_2b3e

dec_label_pc_2b43:                                ; preds = %dec_label_pc_2b22
  %v0_2b43 = load i32, i32* @ebp, align 4
  %v1_2b43 = add i32 %v0_2b43, -860
  %v2_2b43 = inttoptr i32 %v1_2b43 to i32*
  %v3_2b43 = load i32, i32* %v2_2b43, align 4
  %v1_2b4c = inttoptr i32 %v3_2b43 to i32*
  %v2_2b4c = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2b4c)
  %v1_2b51 = add i32 %v2_2b4c, -1
  %v0_2b58 = load i32, i32* @ebp, align 4
  %v1_2b58 = add i32 %v0_2b58, -860
  %v2_2b58 = inttoptr i32 %v1_2b58 to i32*
  %v3_2b58 = load i32, i32* %v2_2b58, align 4
  %v2_2b61 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2b58, i32 %v1_2b51)
  %v1_2b66 = load i32, i32* @ebp, align 4
  %v2_2b66 = add i32 %v1_2b66, -96
  %v3_2b66 = inttoptr i32 %v2_2b66 to i32*
  store i32 %v2_2b61, i32* %v3_2b66, align 4
  %v0_2b69 = load i32, i32* @ebp, align 4
  %v1_2b69 = add i32 %v0_2b69, -70
  %v1_2b6f = call i32 @_ZNSaIhEC1Ev(i32 %v1_2b69)
  %v0_2b74 = load i32, i32* @ebp, align 4
  %v1_2b74 = add i32 %v0_2b74, -71
  %v2_2b74 = inttoptr i32 %v1_2b74 to i8*
  store i8 0, i8* %v2_2b74, align 1
  %v0_2b78 = load i32, i32* @ebp, align 4
  %v1_2b78 = add i32 %v0_2b78, -232
  %v2_2b78 = inttoptr i32 %v1_2b78 to i32*
  %v3_2b78 = load i32, i32* %v2_2b78, align 4
  %v10_2b7e = icmp eq i32 %v3_2b78, 166
  br i1 %v10_2b7e, label %dec_label_pc_2bab, label %dec_label_pc_2b85

dec_label_pc_2b85:                                ; preds = %dec_label_pc_2b43
  %v3_2b85 = load i32, i32* %v2_2b78, align 4
  %v10_2b8b = icmp eq i32 %v3_2b85, 167
  br i1 %v10_2b8b, label %dec_label_pc_2bab, label %dec_label_pc_2b92

dec_label_pc_2b92:                                ; preds = %dec_label_pc_2b85
  %v3_2b92 = load i32, i32* %v2_2b78, align 4
  %v10_2b98 = icmp eq i32 %v3_2b92, 169
  %v1_2b9d = icmp eq i1 %v10_2b98, false
  %. = select i1 %v1_2b9d, i32 32, i32 20
  br label %dec_label_pc_2bab

dec_label_pc_2bab:                                ; preds = %dec_label_pc_2b92, %dec_label_pc_2b43, %dec_label_pc_2b85
  %storemerge = phi i32 [ 20, %dec_label_pc_2b85 ], [ 20, %dec_label_pc_2b43 ], [ %., %dec_label_pc_2b92 ]
  %v1_2bab = add i32 %v0_2b78, -70
  %v1_2bb2 = add i32 %v0_2b78, -71
  %v1_2bbd = add i32 %v0_2b78, -692
  %v4_2bc6 = call i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %v1_2bbd, i32 %storemerge, i32 %v1_2bb2, i32 %v1_2bab)
  %v0_2bcb = load i32, i32* @ebp, align 4
  %v1_2bcb = add i32 %v0_2bcb, -70
  %v1_2bd1 = call i32 @_ZNSaIhED1Ev(i32 %v1_2bcb)
  %v0_2bd6 = load i32, i32* @ebp, align 4
  %v1_2bd6 = add i32 %v0_2bd6, -232
  %v2_2bd6 = inttoptr i32 %v1_2bd6 to i32*
  %v3_2bd6 = load i32, i32* %v2_2bd6, align 4
  %v10_2bdc = icmp eq i32 %v3_2bd6, 166
  %v1_2be1 = icmp eq i1 %v10_2bdc, false
  br i1 %v1_2be1, label %bb, label %dec_label_pc_2be3

bb:                                               ; preds = %dec_label_pc_2bab
  %v2_2be1 = call i32 @function_2c30()
  %v0_2beb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2be3

dec_label_pc_2be3:                                ; preds = %bb, %dec_label_pc_2bab
  %v0_2beb = phi i32 [ %v0_2beb.pre, %bb ], [ %v0_2bd6, %dec_label_pc_2bab ]
  %v1_2beb = add i32 %v0_2beb, -692
  %v2_2bf4 = inttoptr i32 %v1_2beb to i32*
  %v3_2bf4 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2bf4, i32 0)
  %v0_2bfb = load i32, i32* @ebp, align 4
  %v1_2bfb = add i32 %v0_2bfb, -96
  %v2_2bfb = inttoptr i32 %v1_2bfb to i32*
  %v3_2bfb = load i32, i32* %v2_2bfb, align 4
  %v1_2c01 = inttoptr i32 %v3_2bfb to i32*
  %v2_2c01 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_2c01)
  %v0_2c10 = load i32, i32* @ebp, align 4
  %v1_2c10 = add i32 %v0_2c10, -96
  %v2_2c10 = inttoptr i32 %v1_2c10 to i32*
  %v3_2c10 = load i32, i32* %v2_2c10, align 4
  %v2_2c16 = inttoptr i32 %v3_2c10 to i32*
  %v3_2c16 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2c16, i32 0)
  ret i32 %v3_2c16

; uselistorder directives
  uselistorder i32 %v0_2b78, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_2bab, { 0, 2, 1 }
}

define i32 @function_2c2b() local_unnamed_addr {
dec_label_pc_2c2b:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c2b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2c2b
}

define i32 @function_2c30() local_unnamed_addr {
dec_label_pc_2c30:
  %v0_2c30 = load i32, i32* @ebp, align 4
  %v1_2c30 = add i32 %v0_2c30, -232
  %v2_2c30 = inttoptr i32 %v1_2c30 to i32*
  %v3_2c30 = load i32, i32* %v2_2c30, align 4
  %v10_2c36 = icmp eq i32 %v3_2c30, 167
  %v1_2c3b = icmp eq i1 %v10_2c36, false
  br i1 %v1_2c3b, label %bb, label %dec_label_pc_2c3d

bb:                                               ; preds = %dec_label_pc_2c30
  %v2_2c3b = call i32 @function_2c8a()
  %v0_2c45.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2c3d

dec_label_pc_2c3d:                                ; preds = %bb, %dec_label_pc_2c30
  %v0_2c45 = phi i32 [ %v0_2c45.pre, %bb ], [ %v0_2c30, %dec_label_pc_2c30 ]
  %v1_2c45 = add i32 %v0_2c45, -692
  %v2_2c4e = inttoptr i32 %v1_2c45 to i32*
  %v3_2c4e = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2c4e, i32 0)
  %v0_2c55 = load i32, i32* @ebp, align 4
  %v1_2c55 = add i32 %v0_2c55, -96
  %v2_2c55 = inttoptr i32 %v1_2c55 to i32*
  %v3_2c55 = load i32, i32* %v2_2c55, align 4
  %v1_2c5b = inttoptr i32 %v3_2c55 to i32*
  %v2_2c5b = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_2c5b)
  %v0_2c6a = load i32, i32* @ebp, align 4
  %v1_2c6a = add i32 %v0_2c6a, -96
  %v2_2c6a = inttoptr i32 %v1_2c6a to i32*
  %v3_2c6a = load i32, i32* %v2_2c6a, align 4
  %v2_2c70 = inttoptr i32 %v3_2c6a to i32*
  %v3_2c70 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2c70, i32 0)
  ret i32 %v3_2c70
}

define i32 @function_2c85() local_unnamed_addr {
dec_label_pc_2c85:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c85 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2c85
}

define i32 @function_2c8a() local_unnamed_addr {
dec_label_pc_2c8a:
  %v0_2c8a = load i32, i32* @ebp, align 4
  %v1_2c8a = add i32 %v0_2c8a, -232
  %v2_2c8a = inttoptr i32 %v1_2c8a to i32*
  %v3_2c8a = load i32, i32* %v2_2c8a, align 4
  %v10_2c90 = icmp eq i32 %v3_2c8a, 168
  %v1_2c95 = icmp eq i1 %v10_2c90, false
  br i1 %v1_2c95, label %bb, label %dec_label_pc_2c97

bb:                                               ; preds = %dec_label_pc_2c8a
  %v2_2c95 = call i32 @function_2ce4()
  %v0_2c9f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2c97

dec_label_pc_2c97:                                ; preds = %bb, %dec_label_pc_2c8a
  %v0_2c9f = phi i32 [ %v0_2c9f.pre, %bb ], [ %v0_2c8a, %dec_label_pc_2c8a ]
  %v1_2c9f = add i32 %v0_2c9f, -692
  %v2_2ca8 = inttoptr i32 %v1_2c9f to i32*
  %v3_2ca8 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2ca8, i32 0)
  %v0_2caf = load i32, i32* @ebp, align 4
  %v1_2caf = add i32 %v0_2caf, -96
  %v2_2caf = inttoptr i32 %v1_2caf to i32*
  %v3_2caf = load i32, i32* %v2_2caf, align 4
  %v1_2cb5 = inttoptr i32 %v3_2caf to i32*
  %v2_2cb5 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_2cb5)
  %v0_2cc4 = load i32, i32* @ebp, align 4
  %v1_2cc4 = add i32 %v0_2cc4, -96
  %v2_2cc4 = inttoptr i32 %v1_2cc4 to i32*
  %v3_2cc4 = load i32, i32* %v2_2cc4, align 4
  %v2_2cca = inttoptr i32 %v3_2cc4 to i32*
  %v3_2cca = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2cca, i32 0)
  ret i32 %v3_2cca
}

define i32 @function_2cdf() local_unnamed_addr {
dec_label_pc_2cdf:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cdf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2cdf
}

define i32 @function_2ce4() local_unnamed_addr {
dec_label_pc_2ce4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_2ce4 = load i32, i32* @ebp, align 4
  %v1_2ce4 = add i32 %v0_2ce4, -232
  %v2_2ce4 = inttoptr i32 %v1_2ce4 to i32*
  %v3_2ce4 = load i32, i32* %v2_2ce4, align 4
  store i32 %v3_2ce4, i32* %eax.global-to-local, align 4
  %v10_2cea = icmp eq i32 %v3_2ce4, 169
  %v1_2cef = icmp eq i1 %v10_2cea, false
  br i1 %v1_2cef, label %dec_label_pc_2d40, label %dec_label_pc_2cf1

dec_label_pc_2cf1:                                ; preds = %dec_label_pc_2ce4
  %v1_2cf1 = add i32 %v0_2ce4, -60
  store i32 %v1_2cf1, i32* %eax.global-to-local, align 4
  %v1_2cf4 = add i32 %v0_2ce4, -96
  %v2_2cf4 = inttoptr i32 %v1_2cf4 to i32*
  %v3_2cf4 = load i32, i32* %v2_2cf4, align 4
  store i32 %v3_2cf4, i32* %edx.global-to-local, align 4
  %v2_2cfe = call i32 @_Z7Hash160RKSt6vectorIhSaIhEE(i32 %v1_2cf1, i32 %v3_2cf4)
  %v0_2d0e = load i32, i32* @ebp, align 4
  %v1_2d0e = add i32 %v0_2d0e, -692
  store i32 %v1_2d0e, i32* %eax.global-to-local, align 4
  %v2_2d17 = inttoptr i32 %v1_2d0e to i32*
  %v3_2d17 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2d17, i32 0)
  store i32 %v3_2d17, i32* %eax.global-to-local, align 4
  %v0_2d1c = load i32, i32* @ebp, align 4
  %v1_2d1c = add i32 %v0_2d1c, -60
  store i32 %v1_2d1c, i32* %edx.global-to-local, align 4
  %v1_2d1f = inttoptr i32 %v1_2d1c to i32*
  %v2_2d1f = load i32, i32* %v1_2d1f, align 4
  %v2_2d21 = inttoptr i32 %v3_2d17 to i32*
  store i32 %v2_2d1f, i32* %v2_2d21, align 4
  %v0_2d23 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d23 = add i32 %v0_2d23, 4
  %v2_2d23 = inttoptr i32 %v1_2d23 to i32*
  %v3_2d23 = load i32, i32* %v2_2d23, align 4
  %v1_2d26 = load i32, i32* %eax.global-to-local, align 4
  %v2_2d26 = add i32 %v1_2d26, 4
  %v3_2d26 = inttoptr i32 %v2_2d26 to i32*
  store i32 %v3_2d23, i32* %v3_2d26, align 4
  %v0_2d29 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d29 = add i32 %v0_2d29, 8
  %v2_2d29 = inttoptr i32 %v1_2d29 to i32*
  %v3_2d29 = load i32, i32* %v2_2d29, align 4
  %v1_2d2c = load i32, i32* %eax.global-to-local, align 4
  %v2_2d2c = add i32 %v1_2d2c, 8
  %v3_2d2c = inttoptr i32 %v2_2d2c to i32*
  store i32 %v3_2d29, i32* %v3_2d2c, align 4
  %v0_2d2f = load i32, i32* %edx.global-to-local, align 4
  %v1_2d2f = add i32 %v0_2d2f, 12
  %v2_2d2f = inttoptr i32 %v1_2d2f to i32*
  %v3_2d2f = load i32, i32* %v2_2d2f, align 4
  %v1_2d32 = load i32, i32* %eax.global-to-local, align 4
  %v2_2d32 = add i32 %v1_2d32, 12
  %v3_2d32 = inttoptr i32 %v2_2d32 to i32*
  store i32 %v3_2d2f, i32* %v3_2d32, align 4
  %v0_2d35 = load i32, i32* %edx.global-to-local, align 4
  %v1_2d35 = add i32 %v0_2d35, 16
  %v2_2d35 = inttoptr i32 %v1_2d35 to i32*
  %v3_2d35 = load i32, i32* %v2_2d35, align 4
  store i32 %v3_2d35, i32* %edx.global-to-local, align 4
  %v1_2d38 = load i32, i32* %eax.global-to-local, align 4
  %v2_2d38 = add i32 %v1_2d38, 16
  %v3_2d38 = inttoptr i32 %v2_2d38 to i32*
  store i32 %v3_2d35, i32* %v3_2d38, align 4
  br label %dec_label_pc_2dea

dec_label_pc_2d40:                                ; preds = %dec_label_pc_2ce4
  %v3_2d40 = load i32, i32* %v2_2ce4, align 4
  store i32 %v3_2d40, i32* %eax.global-to-local, align 4
  %v10_2d46 = icmp eq i32 %v3_2d40, 170
  %v1_2d4b = icmp eq i1 %v10_2d46, false
  br i1 %v1_2d4b, label %dec_label_pc_2dea, label %dec_label_pc_2d51

dec_label_pc_2d51:                                ; preds = %dec_label_pc_2d40
  %v1_2d51 = add i32 %v0_2ce4, -140
  store i32 %v1_2d51, i32* %eax.global-to-local, align 4
  %v1_2d57 = add i32 %v0_2ce4, -96
  %v2_2d57 = inttoptr i32 %v1_2d57 to i32*
  %v3_2d57 = load i32, i32* %v2_2d57, align 4
  store i32 %v3_2d57, i32* @edx, align 4
  %v2_2d61 = call i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %v1_2d51, i32 %v3_2d57)
  %v0_2d69 = load i32, i32* @ebp, align 4
  %v1_2d69 = add i32 %v0_2d69, -144
  store i32 %v1_2d69, i32* %eax.global-to-local, align 4
  %v1_2d6f = add i32 %v0_2d69, -96
  %v2_2d6f = inttoptr i32 %v1_2d6f to i32*
  %v3_2d6f = load i32, i32* %v2_2d6f, align 4
  store i32 %v3_2d6f, i32* %edx.global-to-local, align 4
  %v2_2d79 = call i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %v1_2d69, i32 %v3_2d6f)
  %v0_2d81 = load i32, i32* @ebp, align 4
  %v1_2d81 = add i32 %v0_2d81, -60
  store i32 %v1_2d81, i32* %eax.global-to-local, align 4
  %v1_2d84 = add i32 %v0_2d81, -140
  %v2_2d84 = inttoptr i32 %v1_2d84 to i32*
  %v3_2d84 = load i32, i32* %v2_2d84, align 4
  store i32 %v3_2d84, i32* %edx.global-to-local, align 4
  %v1_2d8e = add i32 %v0_2d81, -144
  %v2_2d8e = inttoptr i32 %v1_2d8e to i32*
  %v3_2d8e = load i32, i32* %v2_2d8e, align 4
  store i32 %v3_2d8e, i32* %edx.global-to-local, align 4
  store i32 %v1_2d81, i32* %stack_var_-8, align 4
  %v3_2d9b = call i32 @_Z4HashIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEE7uint256T_S8_(i32 %v1_2d81, i32 %v3_2d8e, i32 %v3_2d84)
  store i32 0, i32* %stack_var_-8, align 4
  %v0_2dab = load i32, i32* @ebp, align 4
  %v1_2dab = add i32 %v0_2dab, -692
  store i32 %v1_2dab, i32* %eax.global-to-local, align 4
  store i32 %v1_2dab, i32* %stack_var_-12, align 4
  %v2_2db4 = inttoptr i32 %v1_2dab to i32*
  %v3_2db4 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_2db4, i32 0)
  store i32 %v3_2db4, i32* %eax.global-to-local, align 4
  %v0_2db9 = load i32, i32* @ebp, align 4
  %v1_2db9 = add i32 %v0_2db9, -60
  store i32 %v1_2db9, i32* %edx.global-to-local, align 4
  %v1_2dbc = inttoptr i32 %v1_2db9 to i32*
  %v2_2dbc = load i32, i32* %v1_2dbc, align 4
  %v2_2dbe = inttoptr i32 %v3_2db4 to i32*
  store i32 %v2_2dbc, i32* %v2_2dbe, align 4
  %v0_2dc0 = load i32, i32* %edx.global-to-local, align 4
  %v1_2dc0 = add i32 %v0_2dc0, 4
  %v2_2dc0 = inttoptr i32 %v1_2dc0 to i32*
  %v3_2dc0 = load i32, i32* %v2_2dc0, align 4
  %v1_2dc3 = load i32, i32* %eax.global-to-local, align 4
  %v2_2dc3 = add i32 %v1_2dc3, 4
  %v3_2dc3 = inttoptr i32 %v2_2dc3 to i32*
  store i32 %v3_2dc0, i32* %v3_2dc3, align 4
  %v0_2dc6 = load i32, i32* %edx.global-to-local, align 4
  %v1_2dc6 = add i32 %v0_2dc6, 8
  %v2_2dc6 = inttoptr i32 %v1_2dc6 to i32*
  %v3_2dc6 = load i32, i32* %v2_2dc6, align 4
  %v1_2dc9 = load i32, i32* %eax.global-to-local, align 4
  %v2_2dc9 = add i32 %v1_2dc9, 8
  %v3_2dc9 = inttoptr i32 %v2_2dc9 to i32*
  store i32 %v3_2dc6, i32* %v3_2dc9, align 4
  %v0_2dcc = load i32, i32* %edx.global-to-local, align 4
  %v1_2dcc = add i32 %v0_2dcc, 12
  %v2_2dcc = inttoptr i32 %v1_2dcc to i32*
  %v3_2dcc = load i32, i32* %v2_2dcc, align 4
  %v1_2dcf = load i32, i32* %eax.global-to-local, align 4
  %v2_2dcf = add i32 %v1_2dcf, 12
  %v3_2dcf = inttoptr i32 %v2_2dcf to i32*
  store i32 %v3_2dcc, i32* %v3_2dcf, align 4
  %v0_2dd2 = load i32, i32* %edx.global-to-local, align 4
  %v1_2dd2 = add i32 %v0_2dd2, 16
  %v2_2dd2 = inttoptr i32 %v1_2dd2 to i32*
  %v3_2dd2 = load i32, i32* %v2_2dd2, align 4
  %v1_2dd5 = load i32, i32* %eax.global-to-local, align 4
  %v2_2dd5 = add i32 %v1_2dd5, 16
  %v3_2dd5 = inttoptr i32 %v2_2dd5 to i32*
  store i32 %v3_2dd2, i32* %v3_2dd5, align 4
  %v0_2dd8 = load i32, i32* %edx.global-to-local, align 4
  %v1_2dd8 = add i32 %v0_2dd8, 20
  %v2_2dd8 = inttoptr i32 %v1_2dd8 to i32*
  %v3_2dd8 = load i32, i32* %v2_2dd8, align 4
  %v1_2ddb = load i32, i32* %eax.global-to-local, align 4
  %v2_2ddb = add i32 %v1_2ddb, 20
  %v3_2ddb = inttoptr i32 %v2_2ddb to i32*
  store i32 %v3_2dd8, i32* %v3_2ddb, align 4
  %v0_2dde = load i32, i32* %edx.global-to-local, align 4
  %v1_2dde = add i32 %v0_2dde, 24
  %v2_2dde = inttoptr i32 %v1_2dde to i32*
  %v3_2dde = load i32, i32* %v2_2dde, align 4
  %v1_2de1 = load i32, i32* %eax.global-to-local, align 4
  %v2_2de1 = add i32 %v1_2de1, 24
  %v3_2de1 = inttoptr i32 %v2_2de1 to i32*
  store i32 %v3_2dde, i32* %v3_2de1, align 4
  %v0_2de4 = load i32, i32* %edx.global-to-local, align 4
  %v1_2de4 = add i32 %v0_2de4, 28
  %v2_2de4 = inttoptr i32 %v1_2de4 to i32*
  %v3_2de4 = load i32, i32* %v2_2de4, align 4
  store i32 %v3_2de4, i32* %edx.global-to-local, align 4
  %v1_2de7 = load i32, i32* %eax.global-to-local, align 4
  %v2_2de7 = add i32 %v1_2de7, 28
  %v3_2de7 = inttoptr i32 %v2_2de7 to i32*
  store i32 %v3_2de4, i32* %v3_2de7, align 4
  br label %dec_label_pc_2dea

dec_label_pc_2dea:                                ; preds = %dec_label_pc_2d51, %dec_label_pc_2d40, %dec_label_pc_2cf1
  %v0_2dea = load i32, i32* @ebp, align 4
  %v1_2dea = add i32 %v0_2dea, -860
  %v2_2dea = inttoptr i32 %v1_2dea to i32*
  %v3_2dea = load i32, i32* %v2_2dea, align 4
  store i32 %v3_2dea, i32* %eax.global-to-local, align 4
  %v1_2df0 = load i32, i32* @esp, align 4
  %v2_2df0 = inttoptr i32 %v1_2df0 to i32*
  store i32 %v3_2dea, i32* %v2_2df0, align 4
  %v0_2df3 = load i32, i32* %stack_var_-12, align 4
  %v1_2df3 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v0_2df3, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2df3)
  %v0_2df8 = load i32, i32* @ebp, align 4
  %v1_2df8 = add i32 %v0_2df8, -692
  store i32 %v1_2df8, i32* %eax.global-to-local, align 4
  %v1_2dfe = load i32, i32* @esp, align 4
  %v2_2dfe = add i32 %v1_2dfe, 4
  %v3_2dfe = inttoptr i32 %v2_2dfe to i32*
  store i32 %v1_2df8, i32* %v3_2dfe, align 4
  %v0_2e02 = load i32, i32* @ebp, align 4
  %v1_2e02 = add i32 %v0_2e02, -860
  %v2_2e02 = inttoptr i32 %v1_2e02 to i32*
  %v3_2e02 = load i32, i32* %v2_2e02, align 4
  store i32 %v3_2e02, i32* %eax.global-to-local, align 4
  %v1_2e08 = load i32, i32* @esp, align 4
  %v2_2e08 = inttoptr i32 %v1_2e08 to i32*
  store i32 %v3_2e02, i32* %v2_2e08, align 4
  %v0_2e0b = load i32, i32* %stack_var_-12, align 4
  %v1_2e0b = load i32, i32* %stack_var_-8, align 4
  %v2_2e0b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_2e0b, i32 %v1_2e0b)
  %v0_2e10 = load i32, i32* @ebp, align 4
  %v1_2e10 = add i32 %v0_2e10, -692
  store i32 %v1_2e10, i32* %eax.global-to-local, align 4
  %v1_2e16 = load i32, i32* @esp, align 4
  %v2_2e16 = inttoptr i32 %v1_2e16 to i32*
  store i32 %v1_2e10, i32* %v2_2e16, align 4
  %v0_2e19 = load i32, i32* %stack_var_-12, align 4
  %v1_2e19 = inttoptr i32 %v0_2e19 to i32*
  %v2_2e19 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_2e19)
  store i32 %v2_2e19, i32* %eax.global-to-local, align 4
  %v0_2e1e = call i32 @function_3484()
  store i32 %v0_2e1e, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e1e

; uselistorder directives
  uselistorder i32 %v1_2d81, { 1, 0, 2 }
  uselistorder i32 %v0_2ce4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-12, { 1, 0, 2, 3 }
}

define i32 @function_2e23() local_unnamed_addr {
dec_label_pc_2e23:
  %v0_2e23 = load i32, i32* @ebp, align 4
  %v1_2e23 = add i32 %v0_2e23, -244
  %v2_2e23 = inttoptr i32 %v1_2e23 to i32*
  %v3_2e23 = load i32, i32* %v2_2e23, align 4
  %v2_2e29 = add i32 %v0_2e23, -236
  %v3_2e29 = inttoptr i32 %v2_2e29 to i32*
  store i32 %v3_2e23, i32* %v3_2e29, align 4
  %v0_2e2f = call i32 @function_3484()
  ret i32 %v0_2e2f
}

define i32 @function_2e34() local_unnamed_addr {
dec_label_pc_2e34:
  %v0_2e34 = load i32, i32* @ebp, align 4
  %v1_2e34 = add i32 %v0_2e34, -860
  %v2_2e34 = inttoptr i32 %v1_2e34 to i32*
  %v3_2e34 = load i32, i32* %v2_2e34, align 4
  %v1_2e3d = inttoptr i32 %v3_2e34 to i32*
  %v2_2e3d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2e3d)
  %tmp111 = or i32 %v2_2e3d, 1
  %tmp112 = icmp eq i32 %tmp111, 1
  %v5_2e48 = icmp eq i1 %tmp112, false
  br i1 %v5_2e48, label %dec_label_pc_2e56, label %dec_label_pc_2e4c

dec_label_pc_2e4c:                                ; preds = %dec_label_pc_2e34
  %v0_2e51 = call i32 @function_34f8()
  ret i32 %v0_2e51

dec_label_pc_2e56:                                ; preds = %dec_label_pc_2e34
  %v0_2e56 = load i32, i32* @ebp, align 4
  %v1_2e56 = add i32 %v0_2e56, -860
  %v2_2e56 = inttoptr i32 %v1_2e56 to i32*
  %v3_2e56 = load i32, i32* %v2_2e56, align 4
  %v1_2e5f = inttoptr i32 %v3_2e56 to i32*
  %v2_2e5f = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2e5f)
  %v1_2e64 = add i32 %v2_2e5f, -2
  %v0_2e6b = load i32, i32* @ebp, align 4
  %v1_2e6b = add i32 %v0_2e6b, -860
  %v2_2e6b = inttoptr i32 %v1_2e6b to i32*
  %v3_2e6b = load i32, i32* %v2_2e6b, align 4
  %v2_2e74 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2e6b, i32 %v1_2e64)
  %v1_2e79 = load i32, i32* @ebp, align 4
  %v2_2e79 = add i32 %v1_2e79, -92
  %v3_2e79 = inttoptr i32 %v2_2e79 to i32*
  store i32 %v2_2e74, i32* %v3_2e79, align 4
  %v0_2e7c = load i32, i32* @ebp, align 4
  %v1_2e7c = add i32 %v0_2e7c, -860
  %v2_2e7c = inttoptr i32 %v1_2e7c to i32*
  %v3_2e7c = load i32, i32* %v2_2e7c, align 4
  %v1_2e85 = inttoptr i32 %v3_2e7c to i32*
  %v2_2e85 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_2e85)
  %v1_2e8a = add i32 %v2_2e85, -1
  %v0_2e91 = load i32, i32* @ebp, align 4
  %v1_2e91 = add i32 %v0_2e91, -860
  %v2_2e91 = inttoptr i32 %v1_2e91 to i32*
  %v3_2e91 = load i32, i32* %v2_2e91, align 4
  %v2_2e9a = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_2e91, i32 %v1_2e8a)
  %v1_2e9f = load i32, i32* @ebp, align 4
  %v2_2e9f = add i32 %v1_2e9f, -88
  %v3_2e9f = inttoptr i32 %v2_2e9f to i32*
  store i32 %v2_2e9a, i32* %v3_2e9f, align 4
  %v0_2ea2 = load i32, i32* @ebp, align 4
  %v1_2ea2 = add i32 %v0_2ea2, -240
  %v2_2ea2 = inttoptr i32 %v1_2ea2 to i32*
  %v3_2ea2 = load i32, i32* %v2_2ea2, align 4
  %v1_2eac = add i32 %v0_2ea2, -236
  %v2_2eac = inttoptr i32 %v1_2eac to i32*
  %v3_2eac = load i32, i32* %v2_2eac, align 4
  %v1_2eb6 = add i32 %v0_2ea2, -692
  %v3_2ebf = call i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %v1_2eb6, i32 %v3_2eac, i32 %v3_2ea2)
  %v0_2ec4 = load i32, i32* @ebp, align 4
  %v1_2ec4 = add i32 %v0_2ec4, -92
  %v2_2ec4 = inttoptr i32 %v1_2ec4 to i32*
  %v3_2ec4 = load i32, i32* %v2_2ec4, align 4
  %v1_2ecb = add i32 %v0_2ec4, -328
  %v2_2ed4 = call i32 @_ZN7CScriptC1ERKSt6vectorIhSaIhEE(i32 %v1_2ecb, i32 %v3_2ec4)
  %v0_2ed9 = load i32, i32* @ebp, align 4
  %v1_2ed9 = add i32 %v0_2ed9, -328
  %v1_2ee3 = add i32 %v0_2ed9, -692
  %v2_2eec = call i32 @_ZN7CScript13FindAndDeleteERKS_(i32 %v1_2ee3, i32 %v1_2ed9)
  %v0_2ef1 = load i32, i32* @ebp, align 4
  %v1_2ef1 = add i32 %v0_2ef1, -328
  %v1_2efa = call i32 @_ZN7CScriptD1Ev(i32 %v1_2ef1)
  %v0_2eff = load i32, i32* @ebp, align 4
  %v1_2eff = add i32 %v0_2eff, -65
  %v2_2eff = inttoptr i32 %v1_2eff to i8*
  %v3_2eff = load i8, i8* %v2_2eff, align 1
  %v5_2f06 = icmp eq i8 %v3_2eff, 1
  %v1_2f08 = icmp eq i1 %v5_2f06, false
  br i1 %v1_2f08, label %dec_label_pc_2f34, label %dec_label_pc_2f0a

dec_label_pc_2f0a:                                ; preds = %dec_label_pc_2e56
  %v1_2f0a = add i32 %v0_2eff, -92
  %v2_2f0a = inttoptr i32 %v1_2f0a to i32*
  %v3_2f0a = load i32, i32* %v2_2f0a, align 4
  %v1_2f10 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_2f0a, 0
  %v2_2f10 = call i1 @_Z20IsCanonicalSignatureRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_2f10)
  %v5_2f15 = icmp eq i1 %v2_2f10, false
  br i1 %v5_2f15, label %dec_label_pc_2f2f, label %dec_label_pc_2f19

dec_label_pc_2f19:                                ; preds = %dec_label_pc_2f0a
  %v0_2f19 = load i32, i32* @ebp, align 4
  %v1_2f19 = add i32 %v0_2f19, -88
  %v2_2f19 = inttoptr i32 %v1_2f19 to i32*
  %v3_2f19 = load i32, i32* %v2_2f19, align 4
  %v1_2f1f = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_2f19, 0
  %v2_2f1f = call i1 @_Z17IsCanonicalPubKeyRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_2f1f)
  %v5_2f24 = icmp eq i1 %v2_2f1f, false
  br i1 %v5_2f24, label %dec_label_pc_2f2f, label %dec_label_pc_2f34

dec_label_pc_2f2f:                                ; preds = %dec_label_pc_2f19, %dec_label_pc_2f0a
  br label %dec_label_pc_2f34

dec_label_pc_2f34:                                ; preds = %dec_label_pc_2e56, %dec_label_pc_2f19, %dec_label_pc_2f2f
  %storemerge6 = phi i8 [ 0, %dec_label_pc_2f2f ], [ 1, %dec_label_pc_2f19 ], [ 1, %dec_label_pc_2e56 ]
  %v2_2f34 = load i32, i32* @ebp, align 4
  %v3_2f34 = add i32 %v2_2f34, -68
  %v4_2f34 = inttoptr i32 %v3_2f34 to i8*
  store i8 %storemerge6, i8* %v4_2f34, align 1
  %v0_2f37 = load i32, i32* @ebp, align 4
  %v1_2f37 = add i32 %v0_2f37, -68
  %v2_2f37 = inttoptr i32 %v1_2f37 to i8*
  %v3_2f37 = load i8, i8* %v2_2f37, align 1
  %v10_2f37 = icmp eq i8 %v3_2f37, 0
  br i1 %v10_2f37, label %dec_label_pc_2faa, label %dec_label_pc_2f3d

dec_label_pc_2f3d:                                ; preds = %dec_label_pc_2f34
  %v1_2f3d = add i32 %v0_2f37, -876
  %v2_2f3d = inttoptr i32 %v1_2f3d to i32*
  %v3_2f3d = load i32, i32* %v2_2f3d, align 4
  store i32 %v3_2f3d, i32* @esi, align 4
  %v1_2f43 = add i32 %v0_2f37, -92
  %v2_2f43 = inttoptr i32 %v1_2f43 to i32*
  %v3_2f43 = load i32, i32* %v2_2f43, align 4
  %v1_2f4a = add i32 %v0_2f37, -316
  %v2_2f53 = inttoptr i32 %v1_2f4a to i32*
  %v3_2f53 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_2f53, i32 %v3_2f43)
  %v0_2f58 = load i32, i32* @esi, align 4
  %v0_2f5c = load i32, i32* @ebp, align 4
  %v1_2f5c = add i32 %v0_2f5c, -880
  %v2_2f5c = inttoptr i32 %v1_2f5c to i32*
  %v3_2f5c = load i32, i32* %v2_2f5c, align 4
  %v1_2f66 = add i32 %v0_2f5c, -872
  %v2_2f66 = inttoptr i32 %v1_2f66 to i32*
  %v3_2f66 = load i32, i32* %v2_2f66, align 4
  %v1_2f70 = add i32 %v0_2f5c, -868
  %v2_2f70 = inttoptr i32 %v1_2f70 to i32*
  %v3_2f70 = load i32, i32* %v2_2f70, align 4
  %v1_2f7a = add i32 %v0_2f5c, -692
  %v1_2f84 = add i32 %v0_2f5c, -88
  %v2_2f84 = inttoptr i32 %v1_2f84 to i32*
  %v3_2f84 = load i32, i32* %v2_2f84, align 4
  %v1_2f8b = add i32 %v0_2f5c, -316
  %v7_2f94 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.23" undef, i32 %v1_2f8b, 0
  %v8_2f94 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_2f84, 0
  %v9_2f94 = insertvalue %CScript undef, i32 %v1_2f7a, 0
  %v10_2f94 = call i1 @_Z8CheckSigSt6vectorIhSaIhEERKS1_RK7CScriptRK12CTransactionjii(%"vector<unsignedchar,std::allocator<unsignedchar>>.23" %v7_2f94, %"vector<unsignedchar,std::allocator<unsignedchar>>" %v8_2f94, %CScript %v9_2f94, i32 %v3_2f70, i32 %v3_2f66, i32 %v3_2f5c, i32 %v0_2f58)
  %v1_2f99 = sext i1 %v10_2f94 to i8
  %v2_2f99 = load i32, i32* @ebp, align 4
  %v3_2f99 = add i32 %v2_2f99, -68
  %v4_2f99 = inttoptr i32 %v3_2f99 to i8*
  store i8 %v1_2f99, i8* %v4_2f99, align 1
  %v0_2f9c = load i32, i32* @ebp, align 4
  %v1_2f9c = add i32 %v0_2f9c, -316
  %v1_2fa5 = inttoptr i32 %v1_2f9c to i32*
  %v2_2fa5 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_2fa5)
  %v0_2faa.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2faa

dec_label_pc_2faa:                                ; preds = %dec_label_pc_2f3d, %dec_label_pc_2f34
  %v0_2faa = phi i32 [ %v0_2faa.pre, %dec_label_pc_2f3d ], [ %v0_2f37, %dec_label_pc_2f34 ]
  %v1_2faa = add i32 %v0_2faa, -860
  %v2_2faa = inttoptr i32 %v1_2faa to i32*
  %v3_2faa = load i32, i32* %v2_2faa, align 4
  %v1_2fb3 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2faa, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2fb3)
  %v0_2fb8 = load i32, i32* @ebp, align 4
  %v1_2fb8 = add i32 %v0_2fb8, -860
  %v2_2fb8 = inttoptr i32 %v1_2fb8 to i32*
  %v3_2fb8 = load i32, i32* %v2_2fb8, align 4
  %v1_2fc1 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2fb8, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_2fc1)
  %v0_2fc6 = load i32, i32* @ebp, align 4
  %v1_2fc6 = add i32 %v0_2fc6, -68
  %v2_2fc6 = inttoptr i32 %v1_2fc6 to i8*
  %v3_2fc6 = load i8, i8* %v2_2fc6, align 1
  %v10_2fc6 = icmp eq i8 %v3_2fc6, 0
  %. = select i1 %v10_2fc6, i32 ptrtoint (i32* @global_var_8e68.2198 to i32), i32 36480
  %v1_2fdc = add i32 %v0_2fc6, -860
  %v2_2fdc = inttoptr i32 %v1_2fdc to i32*
  %v3_2fdc = load i32, i32* %v2_2fdc, align 4
  %v2_2fe5 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_2fdc, i32 %.)
  %v0_2fea = load i32, i32* @ebp, align 4
  %v1_2fea = add i32 %v0_2fea, -232
  %v2_2fea = inttoptr i32 %v1_2fea to i32*
  %v3_2fea = load i32, i32* %v2_2fea, align 4
  %v10_2ff0 = icmp eq i32 %v3_2fea, 173
  %v1_2ff5 = icmp eq i1 %v10_2ff0, false
  br i1 %v1_2ff5, label %dec_label_pc_301e, label %dec_label_pc_2ff7

dec_label_pc_2ff7:                                ; preds = %dec_label_pc_2faa
  %v1_2ff7 = add i32 %v0_2fea, -68
  %v2_2ff7 = inttoptr i32 %v1_2ff7 to i8*
  %v3_2ff7 = load i8, i8* %v2_2ff7, align 1
  %v10_2ff7 = icmp eq i8 %v3_2ff7, 0
  br i1 %v10_2ff7, label %dec_label_pc_300d, label %dec_label_pc_2ffd

dec_label_pc_2ffd:                                ; preds = %dec_label_pc_2ff7
  %v1_2ffd = add i32 %v0_2fea, -860
  %v2_2ffd = inttoptr i32 %v1_2ffd to i32*
  %v3_2ffd = load i32, i32* %v2_2ffd, align 4
  %v1_3006 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_2ffd, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_3006)
  %v0_301e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_301e

dec_label_pc_300d:                                ; preds = %dec_label_pc_2ff7
  br label %dec_label_pc_301e

dec_label_pc_301e:                                ; preds = %dec_label_pc_2faa, %dec_label_pc_2ffd, %dec_label_pc_300d
  %v0_301e = phi i32 [ %v0_2fea, %dec_label_pc_300d ], [ %v0_301e.pre, %dec_label_pc_2ffd ], [ %v0_2fea, %dec_label_pc_2faa ]
  %storemerge = phi i1 [ false, %dec_label_pc_300d ], [ true, %dec_label_pc_2ffd ], [ true, %dec_label_pc_2faa ]
  %v1_301e = add i32 %v0_301e, -692
  %v1_3027 = call i32 @_ZN7CScriptD1Ev(i32 %v1_301e)
  br i1 %storemerge, label %bb, label %dec_label_pc_3035

bb:                                               ; preds = %dec_label_pc_301e
  %v1_302f = call i32 @function_3480()
  br label %dec_label_pc_3035

dec_label_pc_3035:                                ; preds = %bb, %dec_label_pc_301e
  %v0_3035 = call i32 @function_34f8()
  ret i32 %v0_3035

; uselistorder directives
  uselistorder i32 %v0_2f5c, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v0_2f37, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_301e, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2f34, { 2, 1, 0 }
}

define i32 @function_303a() local_unnamed_addr {
dec_label_pc_303a:
  %eax.global-to-local = alloca i32, align 4
  %v0_303a = load i32, i32* @ebp, align 4
  %v1_303a = add i32 %v0_303a, -132
  %v2_303a = inttoptr i32 %v1_303a to i32*
  store i32 1, i32* %v2_303a, align 4
  %v0_3044 = load i32, i32* @ebp, align 4
  %v1_3044 = add i32 %v0_3044, -860
  %v2_3044 = inttoptr i32 %v1_3044 to i32*
  %v3_3044 = load i32, i32* %v2_3044, align 4
  store i32 %v3_3044, i32* %eax.global-to-local, align 4
  %v1_304d = inttoptr i32 %v3_3044 to i32*
  %v2_304d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_304d)
  store i32 %v2_304d, i32* %eax.global-to-local, align 4
  %v1_3052 = load i32, i32* @ebp, align 4
  %v2_3052 = add i32 %v1_3052, -132
  %v3_3052 = inttoptr i32 %v2_3052 to i32*
  %v4_3052 = load i32, i32* %v3_3052, align 4
  %v5_3052 = sub i32 %v2_304d, %v4_3052
  %v11_3052 = xor i32 %v4_3052, %v2_304d
  %v12_3052 = xor i32 %v5_3052, %v2_304d
  %v13_3052 = and i32 %v12_3052, %v11_3052
  %v14_3052 = icmp slt i32 %v13_3052, 0
  %v16_3052 = icmp slt i32 %v5_3052, 0
  %v2_3058 = icmp ne i1 %v16_3052, %v14_3052
  %v3_3058 = zext i1 %v2_3058 to i32
  %v5_3058 = and i32 %v2_304d, -256
  %v6_3058 = or i32 %v3_3058, %v5_3058
  store i32 %v6_3058, i32* %eax.global-to-local, align 4
  %v5_305b = icmp eq i1 %v2_3058, false
  br i1 %v5_305b, label %dec_label_pc_3069, label %dec_label_pc_305f

dec_label_pc_305f:                                ; preds = %dec_label_pc_303a
  %v0_3064 = call i32 @function_34f8()
  store i32 %v0_3064, i32* %eax.global-to-local, align 4
  ret i32 %v0_3064

dec_label_pc_3069:                                ; preds = %dec_label_pc_303a
  %v1_3069 = add i32 %v1_3052, -860
  %v2_3069 = inttoptr i32 %v1_3069 to i32*
  %v3_3069 = load i32, i32* %v2_3069, align 4
  store i32 %v3_3069, i32* %eax.global-to-local, align 4
  %v1_3072 = inttoptr i32 %v3_3069 to i32*
  %v2_3072 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_3072)
  store i32 %v2_3072, i32* %eax.global-to-local, align 4
  %v0_3077 = load i32, i32* @ebp, align 4
  %v1_3077 = add i32 %v0_3077, -132
  %v2_3077 = inttoptr i32 %v1_3077 to i32*
  %v3_3077 = load i32, i32* %v2_3077, align 4
  store i32 %v3_3077, i32* @edx, align 4
  %v2_307d = sub i32 %v2_3072, %v3_3077
  store i32 %v2_307d, i32* %eax.global-to-local, align 4
  %v1_3083 = add i32 %v0_3077, -860
  %v2_3083 = inttoptr i32 %v1_3083 to i32*
  %v3_3083 = load i32, i32* %v2_3083, align 4
  store i32 %v3_3083, i32* %eax.global-to-local, align 4
  %v2_308c = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_3083, i32 %v2_307d)
  %v0_3093 = load i32, i32* @ebp, align 4
  %v1_3093 = add i32 %v0_3093, -452
  store i32 %v1_3093, i32* %eax.global-to-local, align 4
  %v3_30b1 = call i32 @_ZNK7CBigNum6getintEv(i32 %v1_3093, i32 %v1_3093, i32 %v2_308c)
  %v1_30b6 = load i32, i32* @ebp, align 4
  %v2_30b6 = add i32 %v1_30b6, -128
  %v3_30b6 = inttoptr i32 %v2_30b6 to i32*
  store i32 %v3_30b1, i32* %v3_30b6, align 4
  %v0_30b9 = load i32, i32* @ebp, align 4
  %v1_30b9 = add i32 %v0_30b9, -452
  store i32 %v1_30b9, i32* %eax.global-to-local, align 4
  %v1_30c2 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_30b9)
  store i32 %v1_30c2, i32* %eax.global-to-local, align 4
  %v0_30c7 = load i32, i32* @ebp, align 4
  %v1_30c7 = add i32 %v0_30c7, -128
  %v2_30c7 = inttoptr i32 %v1_30c7 to i32*
  %v3_30c7 = load i32, i32* %v2_30c7, align 4
  %v11_30c7 = icmp slt i32 %v3_30c7, 0
  br i1 %v11_30c7, label %dec_label_pc_30d3, label %dec_label_pc_30cd

dec_label_pc_30cd:                                ; preds = %dec_label_pc_3069
  %v7_30d1 = icmp sgt i32 %v3_30c7, 20
  br i1 %v7_30d1, label %dec_label_pc_30d3, label %dec_label_pc_30dd

dec_label_pc_30d3:                                ; preds = %dec_label_pc_30cd, %dec_label_pc_3069
  %v0_30d8 = call i32 @function_34f8()
  store i32 %v0_30d8, i32* %eax.global-to-local, align 4
  ret i32 %v0_30d8

dec_label_pc_30dd:                                ; preds = %dec_label_pc_30cd
  store i32 %v3_30c7, i32* %eax.global-to-local, align 4
  %v1_30e0 = add i32 %v0_30c7, -136
  %v2_30e0 = inttoptr i32 %v1_30e0 to i32*
  %v3_30e0 = load i32, i32* %v2_30e0, align 4
  %v5_30e0 = add i32 %v3_30e0, %v3_30c7
  store i32 %v5_30e0, i32* %v2_30e0, align 4
  %v0_30e6 = load i32, i32* @ebp, align 4
  %v1_30e6 = add i32 %v0_30e6, -136
  %v2_30e6 = inttoptr i32 %v1_30e6 to i32*
  %v3_30e6 = load i32, i32* %v2_30e6, align 4
  %v7_30f0 = icmp sgt i32 %v3_30e6, ptrtoint (i32* @global_var_c9.2196 to i32)
  br i1 %v7_30f0, label %dec_label_pc_30f2, label %dec_label_pc_30fc

dec_label_pc_30f2:                                ; preds = %dec_label_pc_30dd
  %v0_30f7 = call i32 @function_34f8()
  store i32 %v0_30f7, i32* %eax.global-to-local, align 4
  ret i32 %v0_30f7

dec_label_pc_30fc:                                ; preds = %dec_label_pc_30dd
  %v1_30fc = add i32 %v0_30e6, -132
  %v2_30fc = inttoptr i32 %v1_30fc to i32*
  %v3_30fc = load i32, i32* %v2_30fc, align 4
  %v4_30fc = add i32 %v3_30fc, 1
  store i32 %v4_30fc, i32* %v2_30fc, align 4
  %v0_3103 = load i32, i32* @ebp, align 4
  %v1_3103 = add i32 %v0_3103, -132
  %v2_3103 = inttoptr i32 %v1_3103 to i32*
  %v3_3103 = load i32, i32* %v2_3103, align 4
  store i32 %v3_3103, i32* %eax.global-to-local, align 4
  %v2_3109 = add i32 %v0_3103, -124
  %v3_3109 = inttoptr i32 %v2_3109 to i32*
  store i32 %v3_3103, i32* %v3_3109, align 4
  %v0_310c = load i32, i32* @ebp, align 4
  %v1_310c = add i32 %v0_310c, -128
  %v2_310c = inttoptr i32 %v1_310c to i32*
  %v3_310c = load i32, i32* %v2_310c, align 4
  store i32 %v3_310c, i32* %eax.global-to-local, align 4
  %v1_310f = add i32 %v0_310c, -132
  %v2_310f = inttoptr i32 %v1_310f to i32*
  %v3_310f = load i32, i32* %v2_310f, align 4
  %v5_310f = add i32 %v3_310f, %v3_310c
  store i32 %v5_310f, i32* %v2_310f, align 4
  %v0_3115 = load i32, i32* @ebp, align 4
  %v1_3115 = add i32 %v0_3115, -860
  %v2_3115 = inttoptr i32 %v1_3115 to i32*
  %v3_3115 = load i32, i32* %v2_3115, align 4
  store i32 %v3_3115, i32* %eax.global-to-local, align 4
  %v1_311e = inttoptr i32 %v3_3115 to i32*
  %v2_311e = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_311e)
  store i32 %v2_311e, i32* %eax.global-to-local, align 4
  %v1_3123 = load i32, i32* @ebp, align 4
  %v2_3123 = add i32 %v1_3123, -132
  %v3_3123 = inttoptr i32 %v2_3123 to i32*
  %v4_3123 = load i32, i32* %v3_3123, align 4
  %v5_3123 = sub i32 %v2_311e, %v4_3123
  %v11_3123 = xor i32 %v4_3123, %v2_311e
  %v12_3123 = xor i32 %v5_3123, %v2_311e
  %v13_3123 = and i32 %v12_3123, %v11_3123
  %v14_3123 = icmp slt i32 %v13_3123, 0
  %v16_3123 = icmp slt i32 %v5_3123, 0
  %v2_3129 = icmp ne i1 %v16_3123, %v14_3123
  %v3_3129 = zext i1 %v2_3129 to i32
  %v5_3129 = and i32 %v2_311e, -256
  %v6_3129 = or i32 %v3_3129, %v5_3129
  store i32 %v6_3129, i32* %eax.global-to-local, align 4
  %v5_312c = icmp eq i1 %v2_3129, false
  br i1 %v5_312c, label %dec_label_pc_313a, label %dec_label_pc_3130

dec_label_pc_3130:                                ; preds = %dec_label_pc_30fc
  %v0_3135 = call i32 @function_34f8()
  store i32 %v0_3135, i32* %eax.global-to-local, align 4
  ret i32 %v0_3135

dec_label_pc_313a:                                ; preds = %dec_label_pc_30fc
  %v1_313a = add i32 %v1_3123, -860
  %v2_313a = inttoptr i32 %v1_313a to i32*
  %v3_313a = load i32, i32* %v2_313a, align 4
  store i32 %v3_313a, i32* %eax.global-to-local, align 4
  %v1_3143 = inttoptr i32 %v3_313a to i32*
  %v2_3143 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_3143)
  store i32 %v2_3143, i32* %eax.global-to-local, align 4
  %v0_3148 = load i32, i32* @ebp, align 4
  %v1_3148 = add i32 %v0_3148, -132
  %v2_3148 = inttoptr i32 %v1_3148 to i32*
  %v3_3148 = load i32, i32* %v2_3148, align 4
  store i32 %v3_3148, i32* @edx, align 4
  %v2_314e = sub i32 %v2_3143, %v3_3148
  store i32 %v2_314e, i32* %eax.global-to-local, align 4
  %v1_3154 = add i32 %v0_3148, -860
  %v2_3154 = inttoptr i32 %v1_3154 to i32*
  %v3_3154 = load i32, i32* %v2_3154, align 4
  store i32 %v3_3154, i32* %eax.global-to-local, align 4
  %v2_315d = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_3154, i32 %v2_314e)
  %v0_3164 = load i32, i32* @ebp, align 4
  %v1_3164 = add i32 %v0_3164, -432
  store i32 %v1_3164, i32* %eax.global-to-local, align 4
  %v3_3182 = call i32 @_ZNK7CBigNum6getintEv(i32 %v1_3164, i32 %v1_3164, i32 %v2_315d)
  %v1_3187 = load i32, i32* @ebp, align 4
  %v2_3187 = add i32 %v1_3187, -120
  %v3_3187 = inttoptr i32 %v2_3187 to i32*
  store i32 %v3_3182, i32* %v3_3187, align 4
  %v0_318a = load i32, i32* @ebp, align 4
  %v1_318a = add i32 %v0_318a, -432
  store i32 %v1_318a, i32* %eax.global-to-local, align 4
  %v1_3193 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_318a)
  store i32 %v1_3193, i32* %eax.global-to-local, align 4
  %v0_3198 = load i32, i32* @ebp, align 4
  %v1_3198 = add i32 %v0_3198, -120
  %v2_3198 = inttoptr i32 %v1_3198 to i32*
  %v3_3198 = load i32, i32* %v2_3198, align 4
  %v11_3198 = icmp slt i32 %v3_3198, 0
  br i1 %v11_3198, label %dec_label_pc_31a6, label %dec_label_pc_319e

dec_label_pc_319e:                                ; preds = %dec_label_pc_313a
  store i32 %v3_3198, i32* %eax.global-to-local, align 4
  %v2_31a1 = add i32 %v0_3198, -128
  %v3_31a1 = inttoptr i32 %v2_31a1 to i32*
  %v4_31a1 = load i32, i32* %v3_31a1, align 4
  %v7_31a4 = icmp sgt i32 %v3_3198, %v4_31a1
  br i1 %v7_31a4, label %dec_label_pc_31a6, label %dec_label_pc_31b0

dec_label_pc_31a6:                                ; preds = %dec_label_pc_319e, %dec_label_pc_313a
  %v0_31ab = call i32 @function_34f8()
  store i32 %v0_31ab, i32* %eax.global-to-local, align 4
  ret i32 %v0_31ab

dec_label_pc_31b0:                                ; preds = %dec_label_pc_319e
  %v1_31b0 = add i32 %v0_3198, -132
  %v2_31b0 = inttoptr i32 %v1_31b0 to i32*
  %v3_31b0 = load i32, i32* %v2_31b0, align 4
  %v4_31b0 = add i32 %v3_31b0, 1
  store i32 %v4_31b0, i32* %v2_31b0, align 4
  %v0_31b7 = load i32, i32* @ebp, align 4
  %v1_31b7 = add i32 %v0_31b7, -132
  %v2_31b7 = inttoptr i32 %v1_31b7 to i32*
  %v3_31b7 = load i32, i32* %v2_31b7, align 4
  store i32 %v3_31b7, i32* %eax.global-to-local, align 4
  %v2_31bd = add i32 %v0_31b7, -116
  %v3_31bd = inttoptr i32 %v2_31bd to i32*
  store i32 %v3_31b7, i32* %v3_31bd, align 4
  %v0_31c0 = load i32, i32* @ebp, align 4
  %v1_31c0 = add i32 %v0_31c0, -120
  %v2_31c0 = inttoptr i32 %v1_31c0 to i32*
  %v3_31c0 = load i32, i32* %v2_31c0, align 4
  store i32 %v3_31c0, i32* %eax.global-to-local, align 4
  %v1_31c3 = add i32 %v0_31c0, -132
  %v2_31c3 = inttoptr i32 %v1_31c3 to i32*
  %v3_31c3 = load i32, i32* %v2_31c3, align 4
  %v5_31c3 = add i32 %v3_31c3, %v3_31c0
  store i32 %v5_31c3, i32* %v2_31c3, align 4
  %v0_31c9 = load i32, i32* @ebp, align 4
  %v1_31c9 = add i32 %v0_31c9, -860
  %v2_31c9 = inttoptr i32 %v1_31c9 to i32*
  %v3_31c9 = load i32, i32* %v2_31c9, align 4
  store i32 %v3_31c9, i32* %eax.global-to-local, align 4
  %v1_31d2 = inttoptr i32 %v3_31c9 to i32*
  %v2_31d2 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_31d2)
  store i32 %v2_31d2, i32* %eax.global-to-local, align 4
  %v1_31d7 = load i32, i32* @ebp, align 4
  %v2_31d7 = add i32 %v1_31d7, -132
  %v3_31d7 = inttoptr i32 %v2_31d7 to i32*
  %v4_31d7 = load i32, i32* %v3_31d7, align 4
  %v5_31d7 = sub i32 %v2_31d2, %v4_31d7
  %v11_31d7 = xor i32 %v4_31d7, %v2_31d2
  %v12_31d7 = xor i32 %v5_31d7, %v2_31d2
  %v13_31d7 = and i32 %v12_31d7, %v11_31d7
  %v14_31d7 = icmp slt i32 %v13_31d7, 0
  %v16_31d7 = icmp slt i32 %v5_31d7, 0
  %v2_31dd = icmp ne i1 %v16_31d7, %v14_31d7
  %v3_31dd = zext i1 %v2_31dd to i32
  %v5_31dd = and i32 %v2_31d2, -256
  %v6_31dd = or i32 %v3_31dd, %v5_31dd
  store i32 %v6_31dd, i32* %eax.global-to-local, align 4
  %v5_31e0 = icmp eq i1 %v2_31dd, false
  br i1 %v5_31e0, label %dec_label_pc_31ee, label %dec_label_pc_31e4

dec_label_pc_31e4:                                ; preds = %dec_label_pc_31b0
  %v0_31e9 = call i32 @function_34f8()
  store i32 %v0_31e9, i32* %eax.global-to-local, align 4
  ret i32 %v0_31e9

dec_label_pc_31ee:                                ; preds = %dec_label_pc_31b0
  %v1_31ee = add i32 %v1_31d7, -240
  %v2_31ee = inttoptr i32 %v1_31ee to i32*
  %v3_31ee = load i32, i32* %v2_31ee, align 4
  store i32 %v3_31ee, i32* %eax.global-to-local, align 4
  %v1_31f8 = add i32 %v1_31d7, -236
  %v2_31f8 = inttoptr i32 %v1_31f8 to i32*
  %v3_31f8 = load i32, i32* %v2_31f8, align 4
  %v1_3202 = add i32 %v1_31d7, -692
  store i32 %v1_3202, i32* %eax.global-to-local, align 4
  %v3_320b = call i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %v1_3202, i32 %v3_31f8, i32 %v3_31ee)
  store i32 %v3_320b, i32* %eax.global-to-local, align 4
  %v0_3210 = load i32, i32* @ebp, align 4
  %v1_3210 = add i32 %v0_3210, -112
  %v2_3210 = inttoptr i32 %v1_3210 to i32*
  store i32 0, i32* %v2_3210, align 4
  br label %dec_label_pc_3285

dec_label_pc_3219:                                ; preds = %dec_label_pc_3285
  %v1_3219 = add i32 %v0_3285, -860
  %v2_3219 = inttoptr i32 %v1_3219 to i32*
  %v3_3219 = load i32, i32* %v2_3219, align 4
  store i32 %v3_3219, i32* %eax.global-to-local, align 4
  %v1_3222 = inttoptr i32 %v3_3219 to i32*
  %v2_3222 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_3222)
  store i32 %v2_3222, i32* %eax.global-to-local, align 4
  %v0_3227 = load i32, i32* @ebp, align 4
  %v1_3227 = add i32 %v0_3227, -116
  %v2_3227 = inttoptr i32 %v1_3227 to i32*
  %v3_3227 = load i32, i32* %v2_3227, align 4
  %v1_322a = sub i32 0, %v3_3227
  %v2_322c = add i32 %v0_3227, -112
  %v3_322c = inttoptr i32 %v2_322c to i32*
  %v4_322c = load i32, i32* %v3_322c, align 4
  %v5_322c = sub i32 %v1_322a, %v4_322c
  store i32 %v5_322c, i32* @edx, align 4
  %v2_322f = add i32 %v5_322c, %v2_3222
  store i32 %v2_322f, i32* %eax.global-to-local, align 4
  %v1_3235 = add i32 %v0_3227, -860
  %v2_3235 = inttoptr i32 %v1_3235 to i32*
  %v3_3235 = load i32, i32* %v2_3235, align 4
  store i32 %v3_3235, i32* %eax.global-to-local, align 4
  %v2_323e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_3235, i32 %v2_322f)
  store i32 %v2_323e, i32* %eax.global-to-local, align 4
  %v1_3243 = load i32, i32* @ebp, align 4
  %v2_3243 = add i32 %v1_3243, -84
  %v3_3243 = inttoptr i32 %v2_3243 to i32*
  store i32 %v2_323e, i32* %v3_3243, align 4
  %v0_3246 = load i32, i32* @ebp, align 4
  %v1_3246 = add i32 %v0_3246, -84
  %v2_3246 = inttoptr i32 %v1_3246 to i32*
  %v3_3246 = load i32, i32* %v2_3246, align 4
  %v1_324d = add i32 %v0_3246, -304
  store i32 %v1_324d, i32* %eax.global-to-local, align 4
  %v2_3256 = call i32 @_ZN7CScriptC1ERKSt6vectorIhSaIhEE(i32 %v1_324d, i32 %v3_3246)
  %v0_325b = load i32, i32* @ebp, align 4
  %v1_325b = add i32 %v0_325b, -304
  %v1_3265 = add i32 %v0_325b, -692
  store i32 %v1_3265, i32* %eax.global-to-local, align 4
  %v2_326e = call i32 @_ZN7CScript13FindAndDeleteERKS_(i32 %v1_3265, i32 %v1_325b)
  %v0_3273 = load i32, i32* @ebp, align 4
  %v1_3273 = add i32 %v0_3273, -304
  store i32 %v1_3273, i32* %eax.global-to-local, align 4
  %v1_327c = call i32 @_ZN7CScriptD1Ev(i32 %v1_3273)
  store i32 %v1_327c, i32* %eax.global-to-local, align 4
  %v0_3281 = load i32, i32* @ebp, align 4
  %v1_3281 = add i32 %v0_3281, -112
  %v2_3281 = inttoptr i32 %v1_3281 to i32*
  %v3_3281 = load i32, i32* %v2_3281, align 4
  %v4_3281 = add i32 %v3_3281, 1
  store i32 %v4_3281, i32* %v2_3281, align 4
  br label %dec_label_pc_3285

dec_label_pc_3285:                                ; preds = %dec_label_pc_3219, %dec_label_pc_31ee
  %v0_3285 = load i32, i32* @ebp, align 4
  %v1_3285 = add i32 %v0_3285, -112
  %v2_3285 = inttoptr i32 %v1_3285 to i32*
  %v3_3285 = load i32, i32* %v2_3285, align 4
  store i32 %v3_3285, i32* %eax.global-to-local, align 4
  %v2_3288 = add i32 %v0_3285, -120
  %v3_3288 = inttoptr i32 %v2_3288 to i32*
  %v4_3288 = load i32, i32* %v3_3288, align 4
  %v5_3288 = sub i32 %v3_3285, %v4_3288
  %v11_3288 = xor i32 %v4_3288, %v3_3285
  %v12_3288 = xor i32 %v5_3288, %v3_3285
  %v13_3288 = and i32 %v12_3288, %v11_3288
  %v14_3288 = icmp slt i32 %v13_3288, 0
  %v16_3288 = icmp slt i32 %v5_3288, 0
  %v2_328b = icmp ne i1 %v16_3288, %v14_3288
  %v3_328b = zext i1 %v2_328b to i32
  %v5_328b = and i32 %v3_3285, -256
  %v6_328b = or i32 %v3_328b, %v5_328b
  store i32 %v6_328b, i32* %eax.global-to-local, align 4
  %v5_328e = icmp eq i1 %v2_328b, false
  %v1_3290 = icmp eq i1 %v5_328e, false
  br i1 %v1_3290, label %dec_label_pc_3219, label %dec_label_pc_3292

dec_label_pc_3292:                                ; preds = %dec_label_pc_3285
  %v1_3292 = add i32 %v0_3285, -67
  %v2_3292 = inttoptr i32 %v1_3292 to i8*
  store i8 1, i8* %v2_3292, align 1
  br label %dec_label_pc_33b8

dec_label_pc_329b:                                ; preds = %dec_label_pc_33d0
  %v1_329b = add i32 %v0_33b8, -860
  %v2_329b = inttoptr i32 %v1_329b to i32*
  %v3_329b = load i32, i32* %v2_329b, align 4
  store i32 %v3_329b, i32* %eax.global-to-local, align 4
  %v1_32a4 = inttoptr i32 %v3_329b to i32*
  %v2_32a4 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_32a4)
  store i32 %v2_32a4, i32* %eax.global-to-local, align 4
  %v0_32a9 = load i32, i32* @ebp, align 4
  %v1_32a9 = add i32 %v0_32a9, -116
  %v2_32a9 = inttoptr i32 %v1_32a9 to i32*
  %v3_32a9 = load i32, i32* %v2_32a9, align 4
  store i32 %v3_32a9, i32* @edx, align 4
  %v2_32ac = sub i32 %v2_32a4, %v3_32a9
  store i32 %v2_32ac, i32* %eax.global-to-local, align 4
  %v1_32b2 = add i32 %v0_32a9, -860
  %v2_32b2 = inttoptr i32 %v1_32b2 to i32*
  %v3_32b2 = load i32, i32* %v2_32b2, align 4
  store i32 %v3_32b2, i32* %eax.global-to-local, align 4
  %v2_32bb = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_32b2, i32 %v2_32ac)
  store i32 %v2_32bb, i32* %eax.global-to-local, align 4
  %v1_32c0 = load i32, i32* @ebp, align 4
  %v2_32c0 = add i32 %v1_32c0, -80
  %v3_32c0 = inttoptr i32 %v2_32c0 to i32*
  store i32 %v2_32bb, i32* %v3_32c0, align 4
  %v0_32c3 = load i32, i32* @ebp, align 4
  %v1_32c3 = add i32 %v0_32c3, -860
  %v2_32c3 = inttoptr i32 %v1_32c3 to i32*
  %v3_32c3 = load i32, i32* %v2_32c3, align 4
  store i32 %v3_32c3, i32* %eax.global-to-local, align 4
  %v1_32cc = inttoptr i32 %v3_32c3 to i32*
  %v2_32cc = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_32cc)
  store i32 %v2_32cc, i32* %eax.global-to-local, align 4
  %v0_32d1 = load i32, i32* @ebp, align 4
  %v1_32d1 = add i32 %v0_32d1, -124
  %v2_32d1 = inttoptr i32 %v1_32d1 to i32*
  %v3_32d1 = load i32, i32* %v2_32d1, align 4
  store i32 %v3_32d1, i32* @edx, align 4
  %v2_32d4 = sub i32 %v2_32cc, %v3_32d1
  store i32 %v2_32d4, i32* %eax.global-to-local, align 4
  %v1_32da = add i32 %v0_32d1, -860
  %v2_32da = inttoptr i32 %v1_32da to i32*
  %v3_32da = load i32, i32* %v2_32da, align 4
  store i32 %v3_32da, i32* %eax.global-to-local, align 4
  %v2_32e3 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %v3_32da, i32 %v2_32d4)
  store i32 %v2_32e3, i32* %eax.global-to-local, align 4
  %v1_32e8 = load i32, i32* @ebp, align 4
  %v2_32e8 = add i32 %v1_32e8, -76
  %v3_32e8 = inttoptr i32 %v2_32e8 to i32*
  store i32 %v2_32e3, i32* %v3_32e8, align 4
  %v0_32eb = load i32, i32* @ebp, align 4
  %v1_32eb = add i32 %v0_32eb, -65
  %v2_32eb = inttoptr i32 %v1_32eb to i8*
  %v3_32eb = load i8, i8* %v2_32eb, align 1
  %v4_32eb = zext i8 %v3_32eb to i32
  %v1_32ef = xor i32 %v4_32eb, 1
  store i32 %v1_32ef, i32* %eax.global-to-local, align 4
  %v5_32f2 = icmp eq i32 %v1_32ef, 0
  %v1_32f4 = icmp eq i1 %v5_32f2, false
  br i1 %v1_32f4, label %dec_label_pc_3320, label %dec_label_pc_32f6

dec_label_pc_32f6:                                ; preds = %dec_label_pc_329b
  %v1_32f6 = add i32 %v0_32eb, -80
  %v2_32f6 = inttoptr i32 %v1_32f6 to i32*
  %v3_32f6 = load i32, i32* %v2_32f6, align 4
  store i32 %v3_32f6, i32* %eax.global-to-local, align 4
  %v1_32fc = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_32f6, 0
  %v2_32fc = call i1 @_Z20IsCanonicalSignatureRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_32fc)
  %v4_32fc = sext i1 %v2_32fc to i32
  store i32 %v4_32fc, i32* %eax.global-to-local, align 4
  %v5_3301 = icmp eq i1 %v2_32fc, false
  br i1 %v5_3301, label %dec_label_pc_331b, label %dec_label_pc_3305

dec_label_pc_3305:                                ; preds = %dec_label_pc_32f6
  %v0_3305 = load i32, i32* @ebp, align 4
  %v1_3305 = add i32 %v0_3305, -76
  %v2_3305 = inttoptr i32 %v1_3305 to i32*
  %v3_3305 = load i32, i32* %v2_3305, align 4
  store i32 %v3_3305, i32* %eax.global-to-local, align 4
  %v1_330b = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_3305, 0
  %v2_330b = call i1 @_Z17IsCanonicalPubKeyRKSt6vectorIhSaIhEE(%"vector<unsignedchar,std::allocator<unsignedchar>>" %v1_330b)
  %v4_330b = sext i1 %v2_330b to i32
  store i32 %v4_330b, i32* %eax.global-to-local, align 4
  %v5_3310 = icmp eq i1 %v2_330b, false
  br i1 %v5_3310, label %dec_label_pc_331b, label %dec_label_pc_3320

dec_label_pc_331b:                                ; preds = %dec_label_pc_3305, %dec_label_pc_32f6
  br label %dec_label_pc_3320

dec_label_pc_3320:                                ; preds = %dec_label_pc_329b, %dec_label_pc_3305, %dec_label_pc_331b
  %storemerge7 = phi i32 [ 0, %dec_label_pc_331b ], [ 1, %dec_label_pc_3305 ], [ 1, %dec_label_pc_329b ]
  store i32 %storemerge7, i32* %eax.global-to-local, align 4
  %v1_3320 = trunc i32 %storemerge7 to i8
  %v2_3320 = load i32, i32* @ebp, align 4
  %v3_3320 = add i32 %v2_3320, -66
  %v4_3320 = inttoptr i32 %v3_3320 to i8*
  store i8 %v1_3320, i8* %v4_3320, align 1
  %v0_3323 = load i32, i32* @ebp, align 4
  %v1_3323 = add i32 %v0_3323, -66
  %v2_3323 = inttoptr i32 %v1_3323 to i8*
  %v3_3323 = load i8, i8* %v2_3323, align 1
  %v10_3323 = icmp eq i8 %v3_3323, 0
  br i1 %v10_3323, label %dec_label_pc_3396, label %dec_label_pc_3329

dec_label_pc_3329:                                ; preds = %dec_label_pc_3320
  %v1_3329 = add i32 %v0_3323, -876
  %v2_3329 = inttoptr i32 %v1_3329 to i32*
  %v3_3329 = load i32, i32* %v2_3329, align 4
  store i32 %v3_3329, i32* @esi, align 4
  %v1_332f = add i32 %v0_3323, -80
  %v2_332f = inttoptr i32 %v1_332f to i32*
  %v3_332f = load i32, i32* %v2_332f, align 4
  %v1_3336 = add i32 %v0_3323, -292
  store i32 %v1_3336, i32* %eax.global-to-local, align 4
  %v2_333f = inttoptr i32 %v1_3336 to i32*
  %v3_333f = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_333f, i32 %v3_332f)
  store i32 %v3_333f, i32* %eax.global-to-local, align 4
  %v0_3344 = load i32, i32* @esi, align 4
  %v0_3348 = load i32, i32* @ebp, align 4
  %v1_3348 = add i32 %v0_3348, -880
  %v2_3348 = inttoptr i32 %v1_3348 to i32*
  %v3_3348 = load i32, i32* %v2_3348, align 4
  store i32 %v3_3348, i32* %eax.global-to-local, align 4
  %v1_3352 = add i32 %v0_3348, -872
  %v2_3352 = inttoptr i32 %v1_3352 to i32*
  %v3_3352 = load i32, i32* %v2_3352, align 4
  store i32 %v3_3352, i32* %eax.global-to-local, align 4
  %v1_335c = add i32 %v0_3348, -868
  %v2_335c = inttoptr i32 %v1_335c to i32*
  %v3_335c = load i32, i32* %v2_335c, align 4
  %v1_3366 = add i32 %v0_3348, -692
  store i32 %v1_3366, i32* %eax.global-to-local, align 4
  %v1_3370 = add i32 %v0_3348, -76
  %v2_3370 = inttoptr i32 %v1_3370 to i32*
  %v3_3370 = load i32, i32* %v2_3370, align 4
  %v1_3377 = add i32 %v0_3348, -292
  store i32 %v1_3377, i32* %eax.global-to-local, align 4
  %v7_3380 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.23" undef, i32 %v1_3377, 0
  %v8_3380 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_3370, 0
  %v9_3380 = insertvalue %CScript undef, i32 %v1_3366, 0
  %v10_3380 = call i1 @_Z8CheckSigSt6vectorIhSaIhEERKS1_RK7CScriptRK12CTransactionjii(%"vector<unsignedchar,std::allocator<unsignedchar>>.23" %v7_3380, %"vector<unsignedchar,std::allocator<unsignedchar>>" %v8_3380, %CScript %v9_3380, i32 %v3_335c, i32 %v3_3352, i32 %v3_3348, i32 %v0_3344)
  %v1_3385 = sext i1 %v10_3380 to i8
  %v2_3385 = load i32, i32* @ebp, align 4
  %v3_3385 = add i32 %v2_3385, -66
  %v4_3385 = inttoptr i32 %v3_3385 to i8*
  store i8 %v1_3385, i8* %v4_3385, align 1
  %v0_3388 = load i32, i32* @ebp, align 4
  %v1_3388 = add i32 %v0_3388, -292
  store i32 %v1_3388, i32* %eax.global-to-local, align 4
  %v1_3391 = inttoptr i32 %v1_3388 to i32*
  %v2_3391 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3391)
  store i32 %v2_3391, i32* %eax.global-to-local, align 4
  %v0_3396.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3396

dec_label_pc_3396:                                ; preds = %dec_label_pc_3329, %dec_label_pc_3320
  %v19_339c = phi i32 [ %v0_3396.pre, %dec_label_pc_3329 ], [ %v0_3323, %dec_label_pc_3320 ]
  %v1_3396 = add i32 %v19_339c, -66
  %v2_3396 = inttoptr i32 %v1_3396 to i8*
  %v3_3396 = load i8, i8* %v2_3396, align 1
  %v10_3396 = icmp eq i8 %v3_3396, 0
  br i1 %v10_3396, label %dec_label_pc_33a4, label %dec_label_pc_339c

dec_label_pc_339c:                                ; preds = %dec_label_pc_3396
  %v1_339c = add i32 %v19_339c, -116
  %v2_339c = inttoptr i32 %v1_339c to i32*
  %v3_339c = load i32, i32* %v2_339c, align 4
  %v4_339c = add i32 %v3_339c, 1
  store i32 %v4_339c, i32* %v2_339c, align 4
  %v0_33a0 = load i32, i32* @ebp, align 4
  %v1_33a0 = add i32 %v0_33a0, -120
  %v2_33a0 = inttoptr i32 %v1_33a0 to i32*
  %v3_33a0 = load i32, i32* %v2_33a0, align 4
  %v4_33a0 = add i32 %v3_33a0, -1
  store i32 %v4_33a0, i32* %v2_33a0, align 4
  %v0_33a4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_33a4

dec_label_pc_33a4:                                ; preds = %dec_label_pc_339c, %dec_label_pc_3396
  %v19_33a4 = phi i32 [ %v0_33a4.pre, %dec_label_pc_339c ], [ %v19_339c, %dec_label_pc_3396 ]
  %v1_33a4 = add i32 %v19_33a4, -124
  %v2_33a4 = inttoptr i32 %v1_33a4 to i32*
  %v3_33a4 = load i32, i32* %v2_33a4, align 4
  %v4_33a4 = add i32 %v3_33a4, 1
  store i32 %v4_33a4, i32* %v2_33a4, align 4
  %v0_33a8 = load i32, i32* @ebp, align 4
  %v1_33a8 = add i32 %v0_33a8, -128
  %v2_33a8 = inttoptr i32 %v1_33a8 to i32*
  %v3_33a8 = load i32, i32* %v2_33a8, align 4
  %v4_33a8 = add i32 %v3_33a8, -1
  store i32 %v4_33a8, i32* %v2_33a8, align 4
  %v0_33ac = load i32, i32* @ebp, align 4
  %v1_33ac = add i32 %v0_33ac, -120
  %v2_33ac = inttoptr i32 %v1_33ac to i32*
  %v3_33ac = load i32, i32* %v2_33ac, align 4
  store i32 %v3_33ac, i32* %eax.global-to-local, align 4
  %v2_33af = add i32 %v0_33ac, -128
  %v3_33af = inttoptr i32 %v2_33af to i32*
  %v4_33af = load i32, i32* %v3_33af, align 4
  %v7_33b2 = icmp sgt i32 %v3_33ac, %v4_33af
  br i1 %v7_33b2, label %dec_label_pc_33b4, label %dec_label_pc_33b8

dec_label_pc_33b4:                                ; preds = %dec_label_pc_33a4
  %v1_33b4 = add i32 %v0_33ac, -67
  %v2_33b4 = inttoptr i32 %v1_33b4 to i8*
  store i8 0, i8* %v2_33b4, align 1
  br label %dec_label_pc_33b8

dec_label_pc_33b8:                                ; preds = %dec_label_pc_33a4, %dec_label_pc_33b4, %dec_label_pc_3292
  %v0_33b8 = load i32, i32* @ebp, align 4
  %v1_33b8 = add i32 %v0_33b8, -67
  %v2_33b8 = inttoptr i32 %v1_33b8 to i8*
  %v3_33b8 = load i8, i8* %v2_33b8, align 1
  %v10_33b8 = icmp eq i8 %v3_33b8, 0
  br i1 %v10_33b8, label %dec_label_pc_33cb, label %dec_label_pc_33be

dec_label_pc_33be:                                ; preds = %dec_label_pc_33b8
  %v1_33be = add i32 %v0_33b8, -120
  %v2_33be = inttoptr i32 %v1_33be to i32*
  %v3_33be = load i32, i32* %v2_33be, align 4
  %v7_33c2 = icmp sgt i32 %v3_33be, 0
  br i1 %v7_33c2, label %dec_label_pc_33d0, label %dec_label_pc_33cb

dec_label_pc_33cb:                                ; preds = %dec_label_pc_33be, %dec_label_pc_33b8
  br label %dec_label_pc_33d0

dec_label_pc_33d0:                                ; preds = %dec_label_pc_33be, %dec_label_pc_33cb
  %storemerge8 = phi i32 [ 0, %dec_label_pc_33cb ], [ 1, %dec_label_pc_33be ]
  store i32 %storemerge8, i32* %eax.global-to-local, align 4
  %v5_33d0 = icmp eq i32 %storemerge8, 0
  %v1_33d2 = icmp eq i1 %v5_33d0, false
  br i1 %v1_33d2, label %dec_label_pc_329b, label %dec_label_pc_33e8

dec_label_pc_33da:                                ; preds = %dec_label_pc_33e8
  %v1_33da = add i32 %v0_33da, -860
  %v2_33da = inttoptr i32 %v1_33da to i32*
  %v3_33da = load i32, i32* %v2_33da, align 4
  store i32 %v3_33da, i32* %eax.global-to-local, align 4
  %v1_33e3 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_33da, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_33e3)
  store i32 ptrtoint (i32* @9 to i32), i32* %eax.global-to-local, align 4
  %v0_33e8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_33e8

dec_label_pc_33e8:                                ; preds = %dec_label_pc_33d0, %dec_label_pc_33da
  %v7_33ef = phi i32 [ ptrtoint (i32* @9 to i32), %dec_label_pc_33da ], [ %storemerge8, %dec_label_pc_33d0 ]
  %v19_33f2 = phi i32 [ %v0_33e8.pre, %dec_label_pc_33da ], [ %v0_33b8, %dec_label_pc_33d0 ]
  %v1_33e8 = add i32 %v19_33f2, -132
  %v2_33e8 = inttoptr i32 %v1_33e8 to i32*
  %v3_33e8 = load i32, i32* %v2_33e8, align 4
  %v10_33e8 = icmp eq i32 %v3_33e8, 0
  %v11_33e8 = icmp slt i32 %v3_33e8, 0
  %v3_33ef = icmp eq i1 %v11_33e8, false
  %v4_33ef = icmp eq i1 %v10_33e8, false
  %v5_33ef = icmp eq i1 %v3_33ef, %v4_33ef
  %v6_33ef = zext i1 %v5_33ef to i32
  %v8_33ef = and i32 %v7_33ef, -256
  %v9_33ef = or i32 %v6_33ef, %v8_33ef
  store i32 %v9_33ef, i32* %eax.global-to-local, align 4
  %v3_33f2 = load i32, i32* %v2_33e8, align 4
  %v4_33f2 = add i32 %v3_33f2, -1
  store i32 %v4_33f2, i32* %v2_33e8, align 4
  %v0_33f9 = load i32, i32* %eax.global-to-local, align 4
  %v4_33f9 = trunc i32 %v0_33f9 to i8
  %v5_33f9 = icmp eq i8 %v4_33f9, 0
  %v1_33fb = icmp eq i1 %v5_33f9, false
  %v0_33da = load i32, i32* @ebp, align 4
  br i1 %v1_33fb, label %dec_label_pc_33da, label %dec_label_pc_33fd

dec_label_pc_33fd:                                ; preds = %dec_label_pc_33e8
  %v1_33fd = add i32 %v0_33da, -67
  %v2_33fd = inttoptr i32 %v1_33fd to i8*
  %v3_33fd = load i8, i8* %v2_33fd, align 1
  %v10_33fd = icmp eq i8 %v3_33fd, 0
  %. = select i1 %v10_33fd, i32 ptrtoint (i32* @global_var_8e68.2198 to i32), i32 36480
  store i32 %., i32* %eax.global-to-local, align 4
  %v1_3413 = add i32 %v0_33da, -860
  %v2_3413 = inttoptr i32 %v1_3413 to i32*
  %v3_3413 = load i32, i32* %v2_3413, align 4
  store i32 %v3_3413, i32* %eax.global-to-local, align 4
  %v2_341c = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_3413, i32 %.)
  store i32 %v2_341c, i32* %eax.global-to-local, align 4
  %v0_3421 = load i32, i32* @ebp, align 4
  %v1_3421 = add i32 %v0_3421, -232
  %v2_3421 = inttoptr i32 %v1_3421 to i32*
  %v3_3421 = load i32, i32* %v2_3421, align 4
  store i32 %v3_3421, i32* %eax.global-to-local, align 4
  %v10_3427 = icmp eq i32 %v3_3421, 175
  %v1_342c = icmp eq i1 %v10_3427, false
  br i1 %v1_342c, label %dec_label_pc_3455, label %dec_label_pc_342e

dec_label_pc_342e:                                ; preds = %dec_label_pc_33fd
  %v1_342e = add i32 %v0_3421, -67
  %v2_342e = inttoptr i32 %v1_342e to i8*
  %v3_342e = load i8, i8* %v2_342e, align 1
  %v10_342e = icmp eq i8 %v3_342e, 0
  br i1 %v10_342e, label %dec_label_pc_3444, label %dec_label_pc_3434

dec_label_pc_3434:                                ; preds = %dec_label_pc_342e
  %v1_3434 = add i32 %v0_3421, -860
  %v2_3434 = inttoptr i32 %v1_3434 to i32*
  %v3_3434 = load i32, i32* %v2_3434, align 4
  store i32 %v3_3434, i32* %eax.global-to-local, align 4
  %v1_343d = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v3_3434, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_343d)
  store i32 ptrtoint (i32* @9 to i32), i32* %eax.global-to-local, align 4
  %v0_3455.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3455

dec_label_pc_3444:                                ; preds = %dec_label_pc_342e
  br label %dec_label_pc_3455

dec_label_pc_3455:                                ; preds = %dec_label_pc_33fd, %dec_label_pc_3434, %dec_label_pc_3444
  %v0_3455 = phi i32 [ %v0_3421, %dec_label_pc_3444 ], [ %v0_3455.pre, %dec_label_pc_3434 ], [ %v0_3421, %dec_label_pc_33fd ]
  %storemerge = phi i1 [ false, %dec_label_pc_3444 ], [ true, %dec_label_pc_3434 ], [ true, %dec_label_pc_33fd ]
  %v1_3455 = add i32 %v0_3455, -692
  store i32 %v1_3455, i32* %eax.global-to-local, align 4
  %v1_345e = call i32 @_ZN7CScriptD1Ev(i32 %v1_3455)
  store i32 %v1_345e, i32* @eax, align 4
  br i1 %storemerge, label %bb, label %dec_label_pc_3468

bb:                                               ; preds = %dec_label_pc_3455
  %v1_3466 = call i32 @function_3483()
  store i32 %v1_3466, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3468

dec_label_pc_3468:                                ; preds = %bb, %dec_label_pc_3455
  %v0_3468 = call i32 @function_34f8()
  store i32 %v0_3468, i32* %eax.global-to-local, align 4
  ret i32 %v0_3468

; uselistorder directives
  uselistorder i32 %v3_33e8, { 1, 0 }
  uselistorder i32 %v0_33b8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_3348, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 %v0_3323, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v5_3288, { 1, 0 }
  uselistorder i32 %v3_3285, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_3285, { 0, 2, 3, 1 }
  uselistorder i32 %v5_31d7, { 1, 0 }
  uselistorder i32 %v1_31d7, { 0, 2, 1, 3 }
  uselistorder i32 %v2_31d2, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_3198, { 1, 0, 2 }
  uselistorder i32 %v1_3164, { 0, 2, 1 }
  uselistorder i32 %v5_3123, { 1, 0 }
  uselistorder i32 %v2_311e, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_3093, { 2, 1, 0 }
  uselistorder i32 %v5_3052, { 1, 0 }
  uselistorder i32 %v2_304d, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 4, 5, 6, 7, 8, 3, 11, 12, 9, 10, 23, 13, 15, 16, 17, 18, 19, 20, 21, 22, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48, 49, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87 }
  uselistorder i1 (%"vector<unsignedchar,std::allocator<unsignedchar>>")* @_Z17IsCanonicalPubKeyRKSt6vectorIhSaIhEE, { 1, 0 }
  uselistorder i1 (%"vector<unsignedchar,std::allocator<unsignedchar>>")* @_Z20IsCanonicalSignatureRKSt6vectorIhSaIhEE, { 1, 0 }
  uselistorder i32 -67, { 0, 1, 3, 2, 4 }
  uselistorder i32 (i32, i32, i32)* @_ZNK7CBigNum6getintEv, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj, { 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_3455, { 2, 1, 0 }
  uselistorder label %dec_label_pc_33e8, { 1, 0 }
  uselistorder label %dec_label_pc_33d0, { 1, 0 }
  uselistorder label %dec_label_pc_33b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_3320, { 2, 1, 0 }
}

define i32 @function_346d() local_unnamed_addr {
dec_label_pc_346d:
  %v0_3472 = call i32 @function_34f8()
  ret i32 %v0_3472
}

define i32 @function_3478() local_unnamed_addr {
dec_label_pc_3478:
  %v0_3478 = call i32 @function_3484()
  ret i32 %v0_3478
}

define i32 @function_347a() local_unnamed_addr {
dec_label_pc_347a:
  %v0_347b = call i32 @function_3484()
  ret i32 %v0_347b
}

define i32 @function_347d() local_unnamed_addr {
dec_label_pc_347d:
  %v0_347e = call i32 @function_3484()
  ret i32 %v0_347e
}

define i32 @function_3480() local_unnamed_addr {
dec_label_pc_3480:
  %v0_3481 = call i32 @function_3484()
  ret i32 %v0_3481

; uselistorder directives
  uselistorder i32 ()* @function_3484, { 30, 26, 24, 31, 29, 28, 27, 25, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_3483() local_unnamed_addr {
dec_label_pc_3483:
  %v0_3483 = load i32, i32* @eax, align 4
  ret i32 %v0_3483
}

define i32 @function_3484() local_unnamed_addr {
dec_label_pc_3484:
  %v0_3484 = load i32, i32* @ebp, align 4
  %v1_3484 = add i32 %v0_3484, -860
  %v2_3484 = inttoptr i32 %v1_3484 to i32*
  %v3_3484 = load i32, i32* %v2_3484, align 4
  %v1_348d = inttoptr i32 %v3_3484 to i32*
  %v2_348d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_348d)
  %v0_3494 = load i32, i32* @ebp, align 4
  %v1_3494 = add i32 %v0_3494, -400
  %v1_349d = inttoptr i32 %v1_3494 to i32*
  %v2_349d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_349d)
  %v2_34a2 = add i32 %v2_348d, %v2_349d
  %tmp1 = icmp ult i32 %v2_34a2, 1001
  %v3_34a9 = icmp ne i1 %tmp1, true
  %v5_34ac = icmp eq i1 %v3_34a9, false
  br i1 %v5_34ac, label %bb, label %dec_label_pc_34b0

bb:                                               ; preds = %dec_label_pc_3484
  %v2_34ae = call i32 @function_34b7(i32 %v1_3494)
  br label %dec_label_pc_34b0

dec_label_pc_34b0:                                ; preds = %bb, %dec_label_pc_3484
  %v0_34b5 = call i32 @function_34f8()
  ret i32 %v0_34b5

; uselistorder directives
  uselistorder i32 (i32)* @function_34b7, { 1, 0 }
  uselistorder i32 -860, { 178, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177 }
}

define i32 @function_34b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_34b7:
  %v0_34b7 = load i32, i32* @ebp, align 4
  %v1_34b7 = add i32 %v0_34b7, -240
  %v1_34c1 = add i32 %v0_34b7, -244
  %v2_34ca = call i32 @_ZN9__gnu_cxxltIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %v1_34c1, i32 %v1_34b7)
  %v0_34d7 = load i32, i32* @ebp, align 4
  %v1_34d7 = add i32 %v0_34d7, -852
  %v1_34e0 = call i32 @_ZNKSt6vectorIbSaIbEE5emptyEv(i32 %v1_34d7)
  %v1_34e5 = xor i32 %v1_34e0, 1
  %v4_34e5 = trunc i32 %v1_34e5 to i8
  %v5_34e8 = icmp eq i8 %v4_34e5, 0
  br i1 %v5_34e8, label %dec_label_pc_34f3, label %dec_label_pc_34ec

dec_label_pc_34ec:                                ; preds = %dec_label_pc_34b7
  %v0_34f1 = call i32 @function_34f8()
  ret i32 %v0_34f1

dec_label_pc_34f3:                                ; preds = %dec_label_pc_34b7
  store i32 1, i32* @ebx, align 4
  ret i32 %v1_34e5

; uselistorder directives
  uselistorder i32 (i32)* @_ZNKSt6vectorIbSaIbEE5emptyEv, { 0, 2, 1 }
  uselistorder i32 -244, { 1, 0 }
}

define i32 @function_34f8() local_unnamed_addr {
dec_label_pc_34f8:
  %v0_34f8 = load i32, i32* @ebp, align 4
  %v1_34f8 = add i32 %v0_34f8, -400
  %v1_3501 = inttoptr i32 %v1_34f8 to i32*
  %v2_3501 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_3501)
  %v0_3506 = load i32, i32* @ebp, align 4
  %v1_3506 = add i32 %v0_3506, -852
  %v1_350f = call i32 @_ZNSt6vectorIbSaIbEED1Ev(i32 %v1_3506)
  %v0_3514 = load i32, i32* @ebp, align 4
  %v1_3514 = add i32 %v0_3514, -412
  %v1_351d = inttoptr i32 %v1_3514 to i32*
  %v2_351d = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_351d)
  %v0_3522 = load i32, i32* @ebp, align 4
  %v1_3522 = add i32 %v0_3522, -248
  %v1_352b = inttoptr i32 %v1_3522 to i32*
  %v2_352b = call i32 @_ZN11CAutoBN_CTXD1Ev(i32* %v1_352b)
  %v0_3530 = load i32, i32* @ebx, align 4
  store i32 %v0_3530, i32* @eax, align 4
  %v0_3532 = load i32, i32* @ebp, align 4
  %v1_3532 = add i32 %v0_3532, -28
  %v2_3532 = inttoptr i32 %v1_3532 to i32*
  %v3_3532 = load i32, i32* %v2_3532, align 4
  %v1_3535 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3535 = icmp eq i32 %v1_3535, %v3_3532
  br i1 %v3_3535, label %bb, label %dec_label_pc_3542

bb:                                               ; preds = %dec_label_pc_34f8
  %v1_353c = call i32 @function_39ff()
  store i32 %v1_353c, i32* @eax, align 4
  br label %dec_label_pc_3542

dec_label_pc_3542:                                ; preds = %bb, %dec_label_pc_34f8
  %v0_3542 = call i32 @function_39fa()
  ret i32 %v0_3542
}

define i32 @function_3547() local_unnamed_addr {
dec_label_pc_3547:
  %eax.global-to-local = alloca i32, align 4
  %v0_3547 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3547, i32* @ebx, align 4
  %v0_3549 = load i32, i32* @ebp, align 4
  %v1_3549 = add i32 %v0_3549, -388
  store i32 %v1_3549, i32* %eax.global-to-local, align 4
  %v1_3552 = inttoptr i32 %v1_3549 to i32*
  %v2_3552 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3552)
  store i32 %v2_3552, i32* %eax.global-to-local, align 4
  %v0_3557 = call i32 @function_355b()
  store i32 %v0_3557, i32* %eax.global-to-local, align 4
  ret i32 %v0_3557

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0 }
}

define i32 @function_3559() local_unnamed_addr {
dec_label_pc_3559:
  %eax.global-to-local = alloca i32, align 4
  %v0_3559 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3559
}

define i32 @function_355b() local_unnamed_addr {
dec_label_pc_355b:
  %v0_355b = load i32, i32* @ebp, align 4
  %v1_355b = add i32 %v0_355b, -832
  %v1_3564 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_355b)
  %v0_3569 = load i32, i32* @ebx, align 4
  store i32 %v0_3569, i32* @eax, align 4
  %v0_356b = call i32 @function_3993()
  ret i32 %v0_356b
}

define i32 @function_3570() local_unnamed_addr {
dec_label_pc_3570:
  %eax.global-to-local = alloca i32, align 4
  %v0_3570 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3570, i32* @ebx, align 4
  %v0_3572 = load i32, i32* @ebp, align 4
  %v1_3572 = add i32 %v0_3572, -712
  store i32 %v1_3572, i32* %eax.global-to-local, align 4
  %v1_357b = inttoptr i32 %v1_3572 to i32*
  %v2_357b = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_357b)
  store i32 %v2_357b, i32* %eax.global-to-local, align 4
  %v0_3580 = call i32 @function_3584()
  store i32 %v0_3580, i32* %eax.global-to-local, align 4
  ret i32 %v0_3580
}

define i32 @function_3582() local_unnamed_addr {
dec_label_pc_3582:
  %eax.global-to-local = alloca i32, align 4
  %v0_3582 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3582
}

define i32 @function_3584() local_unnamed_addr {
dec_label_pc_3584:
  %v0_3584 = load i32, i32* @ebp, align 4
  %v1_3584 = add i32 %v0_3584, -832
  %v1_358d = inttoptr i32 %v1_3584 to i32*
  %v2_358d = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_358d)
  %v0_3592 = load i32, i32* @ebx, align 4
  store i32 %v0_3592, i32* @eax, align 4
  %v0_3594 = call i32 @function_3993()
  ret i32 %v0_3594
}

define i32 @function_3599() local_unnamed_addr {
dec_label_pc_3599:
  %eax.global-to-local = alloca i32, align 4
  %v0_3599 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3599, i32* @ebx, align 4
  %v0_359b = load i32, i32* @ebp, align 4
  %v1_359b = add i32 %v0_359b, -692
  store i32 %v1_359b, i32* %eax.global-to-local, align 4
  %v1_35a4 = inttoptr i32 %v1_359b to i32*
  %v2_35a4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_35a4)
  store i32 %v2_35a4, i32* %eax.global-to-local, align 4
  %v0_35a9 = call i32 @function_35ad()
  store i32 %v0_35a9, i32* %eax.global-to-local, align 4
  ret i32 %v0_35a9
}

define i32 @function_35ab() local_unnamed_addr {
dec_label_pc_35ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_35ab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35ab
}

define i32 @function_35ad() local_unnamed_addr {
dec_label_pc_35ad:
  %v0_35ad = load i32, i32* @ebp, align 4
  %v1_35ad = add i32 %v0_35ad, -832
  %v1_35b6 = inttoptr i32 %v1_35ad to i32*
  %v2_35b6 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_35b6)
  %v0_35bb = call i32 @function_35bf()
  ret i32 %v0_35bb
}

define i32 @function_35bd() local_unnamed_addr {
dec_label_pc_35bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_35bd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35bd
}

define i32 @function_35bf() local_unnamed_addr {
dec_label_pc_35bf:
  %v0_35bf = load i32, i32* @ebp, align 4
  %v1_35bf = add i32 %v0_35bf, -712
  %v1_35c8 = inttoptr i32 %v1_35bf to i32*
  %v2_35c8 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_35c8)
  %v0_35cd = load i32, i32* @ebx, align 4
  store i32 %v0_35cd, i32* @eax, align 4
  %v0_35cf = call i32 @function_3993()
  ret i32 %v0_35cf
}

define i32 @function_35d4() local_unnamed_addr {
dec_label_pc_35d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_35d4 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_35d4, i32* @ebx, align 4
  %v0_35d6 = load i32, i32* @ebp, align 4
  %v1_35d6 = add i32 %v0_35d6, -832
  store i32 %v1_35d6, i32* %eax.global-to-local, align 4
  %v1_35df = inttoptr i32 %v1_35d6 to i32*
  %v2_35df = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_35df)
  store i32 %v2_35df, i32* %eax.global-to-local, align 4
  %v0_35e4 = call i32 @function_35e8()
  store i32 %v0_35e4, i32* %eax.global-to-local, align 4
  ret i32 %v0_35e4
}

define i32 @function_35e6() local_unnamed_addr {
dec_label_pc_35e6:
  %eax.global-to-local = alloca i32, align 4
  %v0_35e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35e6
}

define i32 @function_35e8() local_unnamed_addr {
dec_label_pc_35e8:
  %v0_35e8 = load i32, i32* @ebp, align 4
  %v1_35e8 = add i32 %v0_35e8, -692
  %v1_35f1 = inttoptr i32 %v1_35e8 to i32*
  %v2_35f1 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_35f1)
  %v0_35f6 = load i32, i32* @ebx, align 4
  store i32 %v0_35f6, i32* @eax, align 4
  %v0_35f8 = call i32 @function_3993()
  ret i32 %v0_35f8
}

define i32 @function_35fd() local_unnamed_addr {
dec_label_pc_35fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_35fd = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_35fd, i32* @ebx, align 4
  %v0_35ff = load i32, i32* @ebp, align 4
  %v1_35ff = add i32 %v0_35ff, -692
  store i32 %v1_35ff, i32* %eax.global-to-local, align 4
  %v1_3608 = inttoptr i32 %v1_35ff to i32*
  %v2_3608 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3608)
  store i32 %v2_3608, i32* %eax.global-to-local, align 4
  %v0_360d = call i32 @function_3611()
  store i32 %v0_360d, i32* %eax.global-to-local, align 4
  ret i32 %v0_360d
}

define i32 @function_360f() local_unnamed_addr {
dec_label_pc_360f:
  %eax.global-to-local = alloca i32, align 4
  %v0_360f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_360f
}

define i32 @function_3611() local_unnamed_addr {
dec_label_pc_3611:
  %v0_3611 = load i32, i32* @ebp, align 4
  %v1_3611 = add i32 %v0_3611, -832
  %v1_361a = inttoptr i32 %v1_3611 to i32*
  %v2_361a = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_361a)
  %v0_361f = load i32, i32* @ebx, align 4
  store i32 %v0_361f, i32* @eax, align 4
  %v0_3621 = call i32 @function_3993()
  ret i32 %v0_3621
}

define i32 @function_3626() local_unnamed_addr {
dec_label_pc_3626:
  %eax.global-to-local = alloca i32, align 4
  %v0_3626 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3626, i32* @ebx, align 4
  %v0_3628 = load i32, i32* @ebp, align 4
  %v1_3628 = add i32 %v0_3628, -692
  store i32 %v1_3628, i32* %eax.global-to-local, align 4
  %v1_3631 = inttoptr i32 %v1_3628 to i32*
  %v2_3631 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3631)
  %v0_3636 = load i32, i32* @ebx, align 4
  store i32 %v0_3636, i32* @eax, align 4
  %v0_3638 = call i32 @function_3993()
  store i32 %v0_3638, i32* %eax.global-to-local, align 4
  ret i32 %v0_3638
}

define i32 @function_363d() local_unnamed_addr {
dec_label_pc_363d:
  %eax.global-to-local = alloca i32, align 4
  %v0_363d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_363d, i32* @ebx, align 4
  %v0_363f = load i32, i32* @ebp, align 4
  %v1_363f = add i32 %v0_363f, -376
  store i32 %v1_363f, i32* %eax.global-to-local, align 4
  %v1_3648 = inttoptr i32 %v1_363f to i32*
  %v2_3648 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3648)
  store i32 %v2_3648, i32* %eax.global-to-local, align 4
  %v0_364d = call i32 @function_3651()
  store i32 %v0_364d, i32* %eax.global-to-local, align 4
  ret i32 %v0_364d
}

define i32 @function_364f() local_unnamed_addr {
dec_label_pc_364f:
  %eax.global-to-local = alloca i32, align 4
  %v0_364f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_364f
}

define i32 @function_3651() local_unnamed_addr {
dec_label_pc_3651:
  %v0_3651 = load i32, i32* @ebp, align 4
  %v1_3651 = add i32 %v0_3651, -832
  %v1_365a = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3651)
  %v0_365f = load i32, i32* @ebx, align 4
  store i32 %v0_365f, i32* @eax, align 4
  %v0_3661 = call i32 @function_3993()
  ret i32 %v0_3661
}

define i32 @function_3666() local_unnamed_addr {
dec_label_pc_3666:
  %eax.global-to-local = alloca i32, align 4
  %v0_3666 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3666, i32* @ebx, align 4
  %v0_3668 = load i32, i32* @ebp, align 4
  %v1_3668 = add i32 %v0_3668, -692
  store i32 %v1_3668, i32* %eax.global-to-local, align 4
  %v1_3671 = inttoptr i32 %v1_3668 to i32*
  %v2_3671 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3671)
  %v0_3676 = load i32, i32* @ebx, align 4
  store i32 %v0_3676, i32* @eax, align 4
  %v0_3678 = call i32 @function_3993()
  store i32 %v0_3678, i32* %eax.global-to-local, align 4
  ret i32 %v0_3678
}

define i32 @function_367d() local_unnamed_addr {
dec_label_pc_367d:
  %eax.global-to-local = alloca i32, align 4
  %v0_367d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_367d, i32* @ebx, align 4
  %v0_367f = load i32, i32* @ebp, align 4
  %v1_367f = add i32 %v0_367f, -692
  store i32 %v1_367f, i32* %eax.global-to-local, align 4
  %v1_3688 = inttoptr i32 %v1_367f to i32*
  %v2_3688 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3688)
  %v0_368d = load i32, i32* @ebx, align 4
  store i32 %v0_368d, i32* @eax, align 4
  %v0_368f = call i32 @function_3993()
  store i32 %v0_368f, i32* %eax.global-to-local, align 4
  ret i32 %v0_368f
}

define i32 @function_3694() local_unnamed_addr {
dec_label_pc_3694:
  %eax.global-to-local = alloca i32, align 4
  %v0_3694 = load i32, i32* %eax.global-to-local, align 4
  %v0_3696 = load i32, i32* @ebp, align 4
  %v1_3696 = add i32 %v0_3696, -812
  store i32 %v1_3696, i32* %eax.global-to-local, align 4
  %v1_369f = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3696)
  store i32 %v0_3694, i32* @eax, align 4
  %v0_36a6 = call i32 @function_3993()
  store i32 %v0_36a6, i32* %eax.global-to-local, align 4
  ret i32 %v0_36a6
}

define i32 @function_36ab() local_unnamed_addr {
dec_label_pc_36ab:
  %eax.global-to-local = alloca i32, align 4
  %v0_36ab = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_36ab, i32* @ebx, align 4
  %v0_36ad = load i32, i32* @ebp, align 4
  %v1_36ad = add i32 %v0_36ad, -692
  store i32 %v1_36ad, i32* %eax.global-to-local, align 4
  %v1_36b6 = inttoptr i32 %v1_36ad to i32*
  %v2_36b6 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_36b6)
  %v0_36bb = load i32, i32* @ebx, align 4
  store i32 %v0_36bb, i32* @eax, align 4
  %v0_36bd = call i32 @function_3993()
  store i32 %v0_36bd, i32* %eax.global-to-local, align 4
  ret i32 %v0_36bd
}

define i32 @function_36c2() local_unnamed_addr {
dec_label_pc_36c2:
  %eax.global-to-local = alloca i32, align 4
  %v0_36c2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_36c2, i32* @ebx, align 4
  %v0_36c4 = load i32, i32* @ebp, align 4
  %v1_36c4 = add i32 %v0_36c4, -692
  store i32 %v1_36c4, i32* %eax.global-to-local, align 4
  %v1_36cd = inttoptr i32 %v1_36c4 to i32*
  %v2_36cd = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_36cd)
  %v0_36d2 = load i32, i32* @ebx, align 4
  store i32 %v0_36d2, i32* @eax, align 4
  %v0_36d4 = call i32 @function_3993()
  store i32 %v0_36d4, i32* %eax.global-to-local, align 4
  ret i32 %v0_36d4
}

define i32 @function_36d9() local_unnamed_addr {
dec_label_pc_36d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_36d9 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_36d9, i32* @ebx, align 4
  %v0_36db = load i32, i32* @ebp, align 4
  %v1_36db = add i32 %v0_36db, -364
  store i32 %v1_36db, i32* %eax.global-to-local, align 4
  %v1_36e4 = inttoptr i32 %v1_36db to i32*
  %v2_36e4 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_36e4)
  store i32 %v2_36e4, i32* %eax.global-to-local, align 4
  %v0_36e9 = call i32 @function_36ed()
  store i32 %v0_36e9, i32* %eax.global-to-local, align 4
  ret i32 %v0_36e9
}

define i32 @function_36eb() local_unnamed_addr {
dec_label_pc_36eb:
  %eax.global-to-local = alloca i32, align 4
  %v0_36eb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_36eb
}

define i32 @function_36ed() local_unnamed_addr {
dec_label_pc_36ed:
  %v0_36ed = load i32, i32* @ebp, align 4
  %v1_36ed = add i32 %v0_36ed, -832
  %v1_36f6 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_36ed)
  %v0_36fb = load i32, i32* @ebx, align 4
  store i32 %v0_36fb, i32* @eax, align 4
  %v0_36fd = call i32 @function_3993()
  ret i32 %v0_36fd
}

define i32 @function_3702() local_unnamed_addr {
dec_label_pc_3702:
  %eax.global-to-local = alloca i32, align 4
  %v0_3702 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3702, i32* @ebx, align 4
  %v0_3704 = load i32, i32* @ebp, align 4
  %v1_3704 = add i32 %v0_3704, -792
  store i32 %v1_3704, i32* %eax.global-to-local, align 4
  %v1_370d = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3704)
  store i32 %v1_370d, i32* %eax.global-to-local, align 4
  %v0_3712 = call i32 @function_375e()
  store i32 %v0_3712, i32* %eax.global-to-local, align 4
  ret i32 %v0_3712
}

define i32 @function_3714() local_unnamed_addr {
dec_label_pc_3714:
  %eax.global-to-local = alloca i32, align 4
  %v0_3714 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3714, i32* @ebx, align 4
  %v0_3716 = load i32, i32* @ebp, align 4
  %v1_3716 = add i32 %v0_3716, -772
  store i32 %v1_3716, i32* %eax.global-to-local, align 4
  %v1_371f = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3716)
  store i32 %v1_371f, i32* %eax.global-to-local, align 4
  %v0_3724 = call i32 @function_375e()
  store i32 %v0_3724, i32* %eax.global-to-local, align 4
  ret i32 %v0_3724
}

define i32 @function_3726() local_unnamed_addr {
dec_label_pc_3726:
  %eax.global-to-local = alloca i32, align 4
  %v0_3726 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3726, i32* @ebx, align 4
  %v0_3728 = load i32, i32* @ebp, align 4
  %v1_3728 = add i32 %v0_3728, -752
  store i32 %v1_3728, i32* %eax.global-to-local, align 4
  %v1_3731 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3728)
  store i32 %v1_3731, i32* %eax.global-to-local, align 4
  %v0_3736 = call i32 @function_375e()
  store i32 %v0_3736, i32* %eax.global-to-local, align 4
  ret i32 %v0_3736
}

define i32 @function_3738() local_unnamed_addr {
dec_label_pc_3738:
  %eax.global-to-local = alloca i32, align 4
  %v0_3738 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3738, i32* @ebx, align 4
  %v0_373a = load i32, i32* @ebp, align 4
  %v1_373a = add i32 %v0_373a, -732
  store i32 %v1_373a, i32* %eax.global-to-local, align 4
  %v1_3743 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_373a)
  store i32 %v1_3743, i32* %eax.global-to-local, align 4
  %v0_3748 = call i32 @function_375e()
  store i32 %v0_3748, i32* %eax.global-to-local, align 4
  ret i32 %v0_3748
}

define i32 @function_374a() local_unnamed_addr {
dec_label_pc_374a:
  %eax.global-to-local = alloca i32, align 4
  %v0_374a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_374a, i32* @ebx, align 4
  %v0_374c = load i32, i32* @ebp, align 4
  %v1_374c = add i32 %v0_374c, -352
  store i32 %v1_374c, i32* %eax.global-to-local, align 4
  %v1_3755 = inttoptr i32 %v1_374c to i32*
  %v2_3755 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3755)
  store i32 %v2_3755, i32* %eax.global-to-local, align 4
  %v0_375a = call i32 @function_375e()
  store i32 %v0_375a, i32* %eax.global-to-local, align 4
  ret i32 %v0_375a

; uselistorder directives
  uselistorder i32 ()* @function_375e, { 4, 3, 2, 1, 0 }
}

define i32 @function_375d() local_unnamed_addr {
dec_label_pc_375d:
  %eax.global-to-local = alloca i32, align 4
  %v0_375d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_375d
}

define i32 @function_375e() local_unnamed_addr {
dec_label_pc_375e:
  %v0_375e = load i32, i32* @ebp, align 4
  %v1_375e = add i32 %v0_375e, -832
  %v1_3767 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_375e)
  %v0_376c = load i32, i32* @ebx, align 4
  store i32 %v0_376c, i32* @eax, align 4
  %v0_376e = call i32 @function_3993()
  ret i32 %v0_376e
}

define i32 @function_3773() local_unnamed_addr {
dec_label_pc_3773:
  %eax.global-to-local = alloca i32, align 4
  %v0_3773 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3773, i32* @ebx, align 4
  %v0_3775 = load i32, i32* @ebp, align 4
  %v1_3775 = add i32 %v0_3775, -672
  store i32 %v1_3775, i32* %eax.global-to-local, align 4
  %v1_377e = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3775)
  store i32 %v1_377e, i32* %eax.global-to-local, align 4
  %v0_3783 = call i32 @function_385c()
  store i32 %v0_3783, i32* %eax.global-to-local, align 4
  ret i32 %v0_3783
}

define i32 @function_3788() local_unnamed_addr {
dec_label_pc_3788:
  %eax.global-to-local = alloca i32, align 4
  %v0_3788 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3788, i32* @ebx, align 4
  %v0_378a = load i32, i32* @ebp, align 4
  %v1_378a = add i32 %v0_378a, -652
  store i32 %v1_378a, i32* %eax.global-to-local, align 4
  %v1_3793 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_378a)
  store i32 %v1_3793, i32* %eax.global-to-local, align 4
  %v0_3798 = call i32 @function_385c()
  store i32 %v0_3798, i32* %eax.global-to-local, align 4
  ret i32 %v0_3798
}

define i32 @function_379d() local_unnamed_addr {
dec_label_pc_379d:
  %eax.global-to-local = alloca i32, align 4
  %v0_379d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_379d, i32* @ebx, align 4
  %v0_379f = load i32, i32* @ebp, align 4
  %v1_379f = add i32 %v0_379f, -632
  store i32 %v1_379f, i32* %eax.global-to-local, align 4
  %v1_37a8 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_379f)
  store i32 %v1_37a8, i32* %eax.global-to-local, align 4
  %v0_37ad = call i32 @function_385c()
  store i32 %v0_37ad, i32* %eax.global-to-local, align 4
  ret i32 %v0_37ad
}

define i32 @function_37b2() local_unnamed_addr {
dec_label_pc_37b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_37b2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_37b2, i32* @ebx, align 4
  %v0_37b4 = load i32, i32* @ebp, align 4
  %v1_37b4 = add i32 %v0_37b4, -612
  store i32 %v1_37b4, i32* %eax.global-to-local, align 4
  %v1_37bd = call i32 @_ZN7CBigNumD1Ev(i32 %v1_37b4)
  store i32 %v1_37bd, i32* %eax.global-to-local, align 4
  %v0_37c2 = call i32 @function_385c()
  store i32 %v0_37c2, i32* %eax.global-to-local, align 4
  ret i32 %v0_37c2
}

define i32 @function_37c7() local_unnamed_addr {
dec_label_pc_37c7:
  %eax.global-to-local = alloca i32, align 4
  %v0_37c7 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_37c7, i32* @ebx, align 4
  %v0_37c9 = load i32, i32* @ebp, align 4
  %v1_37c9 = add i32 %v0_37c9, -592
  store i32 %v1_37c9, i32* %eax.global-to-local, align 4
  %v1_37d2 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_37c9)
  store i32 %v1_37d2, i32* %eax.global-to-local, align 4
  %v0_37d7 = call i32 @function_385c()
  store i32 %v0_37d7, i32* %eax.global-to-local, align 4
  ret i32 %v0_37d7
}

define i32 @function_37dc() local_unnamed_addr {
dec_label_pc_37dc:
  %eax.global-to-local = alloca i32, align 4
  %v0_37dc = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_37dc, i32* @ebx, align 4
  %v0_37de = load i32, i32* @ebp, align 4
  %v1_37de = add i32 %v0_37de, -572
  store i32 %v1_37de, i32* %eax.global-to-local, align 4
  %v1_37e7 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_37de)
  store i32 %v1_37e7, i32* %eax.global-to-local, align 4
  %v0_37ec = call i32 @function_385c()
  store i32 %v0_37ec, i32* %eax.global-to-local, align 4
  ret i32 %v0_37ec
}

define i32 @function_37ee() local_unnamed_addr {
dec_label_pc_37ee:
  %eax.global-to-local = alloca i32, align 4
  %v0_37ee = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_37ee, i32* @ebx, align 4
  %v0_37f0 = load i32, i32* @ebp, align 4
  %v1_37f0 = add i32 %v0_37f0, -552
  store i32 %v1_37f0, i32* %eax.global-to-local, align 4
  %v1_37f9 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_37f0)
  store i32 %v1_37f9, i32* %eax.global-to-local, align 4
  %v0_37fe = call i32 @function_385c()
  store i32 %v0_37fe, i32* %eax.global-to-local, align 4
  ret i32 %v0_37fe
}

define i32 @function_3800() local_unnamed_addr {
dec_label_pc_3800:
  %eax.global-to-local = alloca i32, align 4
  %v0_3800 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3800, i32* @ebx, align 4
  %v0_3802 = load i32, i32* @ebp, align 4
  %v1_3802 = add i32 %v0_3802, -532
  store i32 %v1_3802, i32* %eax.global-to-local, align 4
  %v1_380b = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3802)
  store i32 %v1_380b, i32* %eax.global-to-local, align 4
  %v0_3810 = call i32 @function_385c()
  store i32 %v0_3810, i32* %eax.global-to-local, align 4
  ret i32 %v0_3810
}

define i32 @function_3812() local_unnamed_addr {
dec_label_pc_3812:
  %eax.global-to-local = alloca i32, align 4
  %v0_3812 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3812, i32* @ebx, align 4
  %v0_3814 = load i32, i32* @ebp, align 4
  %v1_3814 = add i32 %v0_3814, -512
  store i32 %v1_3814, i32* %eax.global-to-local, align 4
  %v1_381d = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3814)
  store i32 %v1_381d, i32* %eax.global-to-local, align 4
  %v0_3822 = call i32 @function_385c()
  store i32 %v0_3822, i32* %eax.global-to-local, align 4
  ret i32 %v0_3822
}

define i32 @function_3824() local_unnamed_addr {
dec_label_pc_3824:
  %eax.global-to-local = alloca i32, align 4
  %v0_3824 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3824, i32* @ebx, align 4
  %v0_3826 = load i32, i32* @ebp, align 4
  %v1_3826 = add i32 %v0_3826, -492
  store i32 %v1_3826, i32* %eax.global-to-local, align 4
  %v1_382f = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3826)
  store i32 %v1_382f, i32* %eax.global-to-local, align 4
  %v0_3834 = call i32 @function_385c()
  store i32 %v0_3834, i32* %eax.global-to-local, align 4
  ret i32 %v0_3834
}

define i32 @function_3836() local_unnamed_addr {
dec_label_pc_3836:
  %eax.global-to-local = alloca i32, align 4
  %v0_3836 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3836, i32* @ebx, align 4
  %v0_3838 = load i32, i32* @ebp, align 4
  %v1_3838 = add i32 %v0_3838, -472
  store i32 %v1_3838, i32* %eax.global-to-local, align 4
  %v1_3841 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3838)
  store i32 %v1_3841, i32* %eax.global-to-local, align 4
  %v0_3846 = call i32 @function_385c()
  store i32 %v0_3846, i32* %eax.global-to-local, align 4
  ret i32 %v0_3846
}

define i32 @function_3848() local_unnamed_addr {
dec_label_pc_3848:
  %eax.global-to-local = alloca i32, align 4
  %v0_3848 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3848, i32* @ebx, align 4
  %v0_384a = load i32, i32* @ebp, align 4
  %v1_384a = add i32 %v0_384a, -340
  store i32 %v1_384a, i32* %eax.global-to-local, align 4
  %v1_3853 = inttoptr i32 %v1_384a to i32*
  %v2_3853 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3853)
  store i32 %v2_3853, i32* %eax.global-to-local, align 4
  %v0_3858 = call i32 @function_385c()
  store i32 %v0_3858, i32* %eax.global-to-local, align 4
  ret i32 %v0_3858

; uselistorder directives
  uselistorder i32 ()* @function_385c, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_385b() local_unnamed_addr {
dec_label_pc_385b:
  %eax.global-to-local = alloca i32, align 4
  %v0_385b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_385b
}

define i32 @function_385c() local_unnamed_addr {
dec_label_pc_385c:
  %v0_385c = load i32, i32* @ebp, align 4
  %v1_385c = add i32 %v0_385c, -692
  %v1_3865 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_385c)
  %v0_386a = call i32 @function_386e()
  ret i32 %v0_386a
}

define i32 @function_386c() local_unnamed_addr {
dec_label_pc_386c:
  %eax.global-to-local = alloca i32, align 4
  %v0_386c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_386c
}

define i32 @function_386e() local_unnamed_addr {
dec_label_pc_386e:
  %v0_386e = load i32, i32* @ebp, align 4
  %v1_386e = add i32 %v0_386e, -712
  %v1_3877 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_386e)
  %v0_387c = call i32 @function_3880()
  ret i32 %v0_387c
}

define i32 @function_387e() local_unnamed_addr {
dec_label_pc_387e:
  %eax.global-to-local = alloca i32, align 4
  %v0_387e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_387e
}

define i32 @function_3880() local_unnamed_addr {
dec_label_pc_3880:
  %v0_3880 = load i32, i32* @ebp, align 4
  %v1_3880 = add i32 %v0_3880, -832
  %v1_3889 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3880)
  %v0_388e = load i32, i32* @ebx, align 4
  store i32 %v0_388e, i32* @eax, align 4
  %v0_3890 = call i32 @function_3993()
  ret i32 %v0_3890
}

define i32 @function_3895() local_unnamed_addr {
dec_label_pc_3895:
  %eax.global-to-local = alloca i32, align 4
  %v0_3895 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_3895, i32* @ebx, align 4
  %v0_3897 = load i32, i32* @ebp, align 4
  %v1_3897 = add i32 %v0_3897, -832
  store i32 %v1_3897, i32* %eax.global-to-local, align 4
  %v1_38a0 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3897)
  store i32 %v1_38a0, i32* %eax.global-to-local, align 4
  %v0_38a5 = call i32 @function_38a9()
  store i32 %v0_38a5, i32* %eax.global-to-local, align 4
  ret i32 %v0_38a5

; uselistorder directives
  uselistorder i32 -832, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 26, 1, 14, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
}

define i32 @function_38a7() local_unnamed_addr {
dec_label_pc_38a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_38a7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38a7
}

define i32 @function_38a9() local_unnamed_addr {
dec_label_pc_38a9:
  %v0_38a9 = load i32, i32* @ebp, align 4
  %v1_38a9 = add i32 %v0_38a9, -712
  %v1_38b2 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_38a9)
  %v0_38b7 = call i32 @function_38bb()
  ret i32 %v0_38b7

; uselistorder directives
  uselistorder i32 -712, { 2, 3, 4, 5, 6, 7, 20, 1, 8, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28 }
}

define i32 @function_38b9() local_unnamed_addr {
dec_label_pc_38b9:
  %eax.global-to-local = alloca i32, align 4
  %v0_38b9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38b9
}

define i32 @function_38bb() local_unnamed_addr {
dec_label_pc_38bb:
  %v0_38bb = load i32, i32* @ebp, align 4
  %v1_38bb = add i32 %v0_38bb, -692
  %v1_38c4 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_38bb)
  %v0_38c9 = load i32, i32* @ebx, align 4
  store i32 %v0_38c9, i32* @eax, align 4
  %v0_38cb = call i32 @function_3993()
  ret i32 %v0_38cb
}

define i32 @function_38d0() local_unnamed_addr {
dec_label_pc_38d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_38d0 = load i32, i32* %eax.global-to-local, align 4
  %v0_38d2 = load i32, i32* @ebp, align 4
  %v1_38d2 = add i32 %v0_38d2, -70
  store i32 %v1_38d2, i32* %eax.global-to-local, align 4
  %v1_38d8 = call i32 @_ZNSaIhED1Ev(i32 %v1_38d2)
  store i32 %v0_38d0, i32* @eax, align 4
  %v0_38df = call i32 @function_3993()
  store i32 %v0_38df, i32* %eax.global-to-local, align 4
  ret i32 %v0_38df
}

define i32 @function_38e4() local_unnamed_addr {
dec_label_pc_38e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_38e4 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_38e4, i32* @ebx, align 4
  %v0_38e6 = load i32, i32* @ebp, align 4
  %v1_38e6 = add i32 %v0_38e6, -692
  store i32 %v1_38e6, i32* %eax.global-to-local, align 4
  %v1_38ef = inttoptr i32 %v1_38e6 to i32*
  %v2_38ef = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_38ef)
  %v0_38f4 = load i32, i32* @ebx, align 4
  store i32 %v0_38f4, i32* @eax, align 4
  %v0_38f6 = call i32 @function_3993()
  store i32 %v0_38f6, i32* %eax.global-to-local, align 4
  ret i32 %v0_38f6
}

define i32 @function_38fb() local_unnamed_addr {
dec_label_pc_38fb:
  %eax.global-to-local = alloca i32, align 4
  %v0_38fb = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_38fb, i32* @ebx, align 4
  %v0_38fd = load i32, i32* @ebp, align 4
  %v1_38fd = add i32 %v0_38fd, -328
  store i32 %v1_38fd, i32* %eax.global-to-local, align 4
  %v1_3906 = call i32 @_ZN7CScriptD1Ev(i32 %v1_38fd)
  store i32 %v1_3906, i32* %eax.global-to-local, align 4
  %v0_390b = call i32 @function_3921()
  store i32 %v0_390b, i32* %eax.global-to-local, align 4
  ret i32 %v0_390b
}

define i32 @function_390d() local_unnamed_addr {
dec_label_pc_390d:
  %eax.global-to-local = alloca i32, align 4
  %v0_390d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_390d, i32* @ebx, align 4
  %v0_390f = load i32, i32* @ebp, align 4
  %v1_390f = add i32 %v0_390f, -316
  store i32 %v1_390f, i32* %eax.global-to-local, align 4
  %v1_3918 = inttoptr i32 %v1_390f to i32*
  %v2_3918 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3918)
  store i32 %v2_3918, i32* %eax.global-to-local, align 4
  %v0_391d = call i32 @function_3921()
  store i32 %v0_391d, i32* %eax.global-to-local, align 4
  ret i32 %v0_391d

; uselistorder directives
  uselistorder i32 ()* @function_3921, { 1, 0 }
}

define i32 @function_3920() local_unnamed_addr {
dec_label_pc_3920:
  %eax.global-to-local = alloca i32, align 4
  %v0_3920 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3920
}

define i32 @function_3921() local_unnamed_addr {
dec_label_pc_3921:
  %v0_3921 = load i32, i32* @ebp, align 4
  %v1_3921 = add i32 %v0_3921, -692
  %v1_392a = call i32 @_ZN7CScriptD1Ev(i32 %v1_3921)
  %v0_392f = load i32, i32* @ebx, align 4
  store i32 %v0_392f, i32* @eax, align 4
  %v0_3931 = call i32 @function_3993()
  ret i32 %v0_3931
}

define i32 @function_3933() local_unnamed_addr {
dec_label_pc_3933:
  %eax.global-to-local = alloca i32, align 4
  %v0_3933 = load i32, i32* %eax.global-to-local, align 4
  %v0_3935 = load i32, i32* @ebp, align 4
  %v1_3935 = add i32 %v0_3935, -452
  store i32 %v1_3935, i32* %eax.global-to-local, align 4
  %v1_393e = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3935)
  store i32 %v0_3933, i32* @eax, align 4
  %v0_3945 = call i32 @function_3993()
  store i32 %v0_3945, i32* %eax.global-to-local, align 4
  ret i32 %v0_3945
}

define i32 @function_3947() local_unnamed_addr {
dec_label_pc_3947:
  %eax.global-to-local = alloca i32, align 4
  %v0_3947 = load i32, i32* %eax.global-to-local, align 4
  %v0_3949 = load i32, i32* @ebp, align 4
  %v1_3949 = add i32 %v0_3949, -432
  store i32 %v1_3949, i32* %eax.global-to-local, align 4
  %v1_3952 = call i32 @_ZN7CBigNumD1Ev(i32 %v1_3949)
  store i32 %v0_3947, i32* @eax, align 4
  %v0_3959 = call i32 @function_3993()
  store i32 %v0_3959, i32* %eax.global-to-local, align 4
  ret i32 %v0_3959

; uselistorder directives
  uselistorder i32 (i32)* @_ZN7CBigNumD1Ev, { 57, 56, 55, 54, 53, 42, 41, 40, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 39, 35, 38, 37, 36, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 14, 13, 12, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 11, 6, 10, 9, 8, 7, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_395b() local_unnamed_addr {
dec_label_pc_395b:
  %eax.global-to-local = alloca i32, align 4
  %v0_395b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_395b, i32* @ebx, align 4
  %v0_395d = load i32, i32* @ebp, align 4
  %v1_395d = add i32 %v0_395d, -304
  store i32 %v1_395d, i32* %eax.global-to-local, align 4
  %v1_3966 = call i32 @_ZN7CScriptD1Ev(i32 %v1_395d)
  store i32 %v1_3966, i32* %eax.global-to-local, align 4
  %v0_396b = call i32 @function_3981()
  store i32 %v0_396b, i32* %eax.global-to-local, align 4
  ret i32 %v0_396b
}

define i32 @function_396d() local_unnamed_addr {
dec_label_pc_396d:
  %eax.global-to-local = alloca i32, align 4
  %v0_396d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_396d, i32* @ebx, align 4
  %v0_396f = load i32, i32* @ebp, align 4
  %v1_396f = add i32 %v0_396f, -292
  store i32 %v1_396f, i32* %eax.global-to-local, align 4
  %v1_3978 = inttoptr i32 %v1_396f to i32*
  %v2_3978 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_3978)
  store i32 %v2_3978, i32* %eax.global-to-local, align 4
  %v0_397d = call i32 @function_3981()
  store i32 %v0_397d, i32* %eax.global-to-local, align 4
  ret i32 %v0_397d

; uselistorder directives
  uselistorder i32 ()* @function_3981, { 1, 0 }
}

define i32 @function_3980() local_unnamed_addr {
dec_label_pc_3980:
  %eax.global-to-local = alloca i32, align 4
  %v0_3980 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3980
}

define i32 @function_3981() local_unnamed_addr {
dec_label_pc_3981:
  %v0_3981 = load i32, i32* @ebp, align 4
  %v1_3981 = add i32 %v0_3981, -692
  %v1_398a = call i32 @_ZN7CScriptD1Ev(i32 %v1_3981)
  %v0_398f = load i32, i32* @ebx, align 4
  store i32 %v0_398f, i32* @eax, align 4
  %v0_3991 = call i32 @function_3993()
  ret i32 %v0_3991

; uselistorder directives
  uselistorder i32 ()* @function_3993, { 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -692, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 44, 45, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72 }
}

define i32 @function_3993() local_unnamed_addr {
dec_label_pc_3993:
  %v3_3993 = load i32, i32* @eax, align 4
  ret i32 %v3_3993
}

define i32 @function_39a5() local_unnamed_addr {
dec_label_pc_39a5:
  %v0_39a5 = call i32 @function_34f8()
  ret i32 %v0_39a5

; uselistorder directives
  uselistorder i32 ()* @function_34f8, { 45, 1, 3, 2, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 0 }
}

define i32 @function_39aa() local_unnamed_addr {
dec_label_pc_39aa:
  %v0_39ac = load i32, i32* @ebp, align 4
  %v1_39ac = add i32 %v0_39ac, -400
  %v1_39b5 = inttoptr i32 %v1_39ac to i32*
  %v2_39b5 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_39b5)
  %v0_39ba = call i32 @function_39be()
  ret i32 %v0_39ba
}

define i32 @function_39bc() local_unnamed_addr {
dec_label_pc_39bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_39bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39bc
}

define i32 @function_39be() local_unnamed_addr {
dec_label_pc_39be:
  %v0_39be = load i32, i32* @ebp, align 4
  %v1_39be = add i32 %v0_39be, -852
  %v1_39c7 = call i32 @_ZNSt6vectorIbSaIbEED1Ev(i32 %v1_39be)
  %v0_39cc = call i32 @function_39d0()
  ret i32 %v0_39cc

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt6vectorIbSaIbEED1Ev, { 1, 0 }
  uselistorder i32 -852, { 0, 7, 8, 1, 2, 3, 4, 5, 6 }
}

define i32 @function_39ce() local_unnamed_addr {
dec_label_pc_39ce:
  %eax.global-to-local = alloca i32, align 4
  %v0_39ce = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39ce
}

define i32 @function_39d0() local_unnamed_addr {
dec_label_pc_39d0:
  %v0_39d0 = load i32, i32* @ebp, align 4
  %v1_39d0 = add i32 %v0_39d0, -412
  %v1_39d9 = inttoptr i32 %v1_39d0 to i32*
  %v2_39d9 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_39d9)
  %v0_39de = call i32 @function_39e2()
  ret i32 %v0_39de
}

define i32 @function_39e0() local_unnamed_addr {
dec_label_pc_39e0:
  %eax.global-to-local = alloca i32, align 4
  %v0_39e0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_39e0
}

define i32 @function_39e2() local_unnamed_addr {
dec_label_pc_39e2:
  %v0_39e2 = load i32, i32* @ebp, align 4
  %v1_39e2 = add i32 %v0_39e2, -248
  %v1_39eb = inttoptr i32 %v1_39e2 to i32*
  %v2_39eb = call i32 @_ZN11CAutoBN_CTXD1Ev(i32* %v1_39eb)
  %v0_39f0 = load i32, i32* @ebx, align 4
  ret i32 %v0_39f0
}

define i32 @function_39fa() local_unnamed_addr {
dec_label_pc_39fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_39ff() local_unnamed_addr {
dec_label_pc_39ff:
  %v0_39ff = load i32, i32* @ebp, align 4
  %v1_39ff = add i32 %v0_39ff, -12
  %v1_3a02 = inttoptr i32 %v1_39ff to i32*
  %v2_3a02 = load i32, i32* %v1_3a02, align 4
  store i32 %v2_3a02, i32* @ebx, align 4
  %v3_3a02 = add i32 %v0_39ff, -8
  %v1_3a03 = inttoptr i32 %v3_3a02 to i32*
  %v2_3a03 = load i32, i32* %v1_3a03, align 4
  store i32 %v2_3a03, i32* @esi, align 4
  %v3_3a03 = add i32 %v0_39ff, -4
  %v1_3a04 = inttoptr i32 %v3_3a03 to i32*
  %v2_3a04 = load i32, i32* %v1_3a04, align 4
  store i32 %v2_3a04, i32* @edi, align 4
  %v1_3a05 = inttoptr i32 %v0_39ff to i32*
  %v2_3a05 = load i32, i32* %v1_3a05, align 4
  store i32 %v2_3a05, i32* @ebp, align 4
  %v0_3a06 = load i32, i32* @eax, align 4
  ret i32 %v0_3a06
}

define %uint256 @_Z13SignatureHash7CScriptRK12CTransactionji(%CScript.22 %scriptCode, i32 %txTo, i32 %nIn, i32 %nHashType) local_unnamed_addr {
dec_label_pc_3a07:
  %v1_3a4f = add i32 %nIn, 4
  %tmp19 = inttoptr i32 %v1_3a4f to i32*
  %v3_3a55 = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp19)
  %tmp20 = icmp ule i32 %v3_3a55, %nHashType
  %v5_3a63 = icmp eq i1 %tmp20, false
  br i1 %v5_3a63, label %bb, label %dec_label_pc_3a67

bb:                                               ; preds = %dec_label_pc_3a07
  %v1_3a65 = call i32 @function_3aa0()
  br label %dec_label_pc_3a67

dec_label_pc_3a67:                                ; preds = %bb, %dec_label_pc_3a07
  %v4_3a71 = insertvalue %uint256 undef, i32 %nHashType, 0
  ret %uint256 %v4_3a71

; uselistorder directives
  uselistorder i32 %nHashType, { 1, 0 }
}

define i32 @function_3a7c() local_unnamed_addr {
dec_label_pc_3a7c:
  %eax.global-to-local = alloca i32, align 4
  %v0_3a7f = load i32, i32* %eax.global-to-local, align 4
  %v11_3a7f = and i32 %v0_3a7f, -252
  store i32 %v11_3a7f, i32* %eax.global-to-local, align 4
  %v1_3a81 = inttoptr i32 %v11_3a7f to i32*
  %v2_3a81 = load i32, i32* %v1_3a81, align 4
  %v4_3a81 = add i32 %v2_3a81, %v11_3a7f
  store i32 %v4_3a81, i32* %v1_3a81, align 4
  %v0_3a83 = load i32, i32* %eax.global-to-local, align 4
  %v1_3a83 = inttoptr i32 %v0_3a83 to i8*
  %v2_3a83 = load i8, i8* %v1_3a83, align 1
  %v4_3a83 = trunc i32 %v0_3a83 to i8
  %v5_3a83 = add i8 %v2_3a83, %v4_3a83
  store i8 %v5_3a83, i8* %v1_3a83, align 1
  %v0_3a8d = load i32, i32* @ebp, align 4
  %v1_3a8d = add i32 %v0_3a8d, -284
  %v2_3a8d = inttoptr i32 %v1_3a8d to i32*
  %v3_3a8d = load i32, i32* %v2_3a8d, align 4
  store i32 %v3_3a8d, i32* %eax.global-to-local, align 4
  %v2_3a96 = inttoptr i32 %v3_3a8d to i32*
  %v3_3a96 = call i32 @_ZN7uint256C1Ey(i32* %v2_3a96, i32 0)
  store i32 %v3_3a96, i32* %eax.global-to-local, align 4
  %v0_3a9b = call i32 @function_3ee2()
  store i32 %v0_3a9b, i32* %eax.global-to-local, align 4
  ret i32 %v0_3a9b

; uselistorder directives
  uselistorder i32 %v11_3a7f, { 0, 2, 1 }
}

define i32 @function_3aa0() local_unnamed_addr {
dec_label_pc_3aa0:
  %v0_3aa0 = load i32, i32* @ebp, align 4
  %v1_3aa0 = add i32 %v0_3aa0, -292
  %v2_3aa0 = inttoptr i32 %v1_3aa0 to i32*
  %v3_3aa0 = load i32, i32* %v2_3aa0, align 4
  %v1_3aaa = add i32 %v0_3aa0, -280
  %tmp14 = inttoptr i32 %v1_3aaa to i32*
  %v4_3ab3 = call i32 @_ZN12CTransactionC1ERKS_(i32* %tmp14, i32 %v3_3aa0)
  %v0_3ac0 = load i32, i32* @ebp, align 4
  %v1_3ac0 = add i32 %v0_3ac0, -228
  %v3_3ac9 = call i32 @_ZN7CScriptC1E10opcodetype(i32 %v1_3ac0, i32 171)
  %v0_3ace = load i32, i32* @ebp, align 4
  %v1_3ace = add i32 %v0_3ace, -228
  %v1_3ad8 = add i32 %v0_3ace, -288
  %v2_3ad8 = inttoptr i32 %v1_3ad8 to i32*
  %v3_3ad8 = load i32, i32* %v2_3ad8, align 4
  %v3_3ae1 = call i32 @_ZN7CScript13FindAndDeleteERKS_(i32 %v3_3ad8, i32 %v1_3ace)
  %v0_3ae6 = load i32, i32* @ebp, align 4
  %v1_3ae6 = add i32 %v0_3ae6, -228
  %v2_3aef = call i32 @_ZN7CScriptD1Ev(i32 %v1_3ae6)
  %v0_3af4 = load i32, i32* @ebp, align 4
  %v1_3af4 = add i32 %v0_3af4, -204
  %v2_3af4 = inttoptr i32 %v1_3af4 to i32*
  store i32 0, i32* %v2_3af4, align 4
  br label %dec_label_pc_3b53

dec_label_pc_3b00:                                ; preds = %dec_label_pc_3b53
  %v1_3b00 = add i32 %v1_3b64, -216
  %v2_3b09 = call i32 @_ZN7CScriptC1Ev(i32 %v1_3b00)
  %v0_3b0e = load i32, i32* @ebp, align 4
  %v1_3b0e = add i32 %v0_3b0e, -204
  %v2_3b0e = inttoptr i32 %v1_3b0e to i32*
  %v3_3b0e = load i32, i32* %v2_3b0e, align 4
  %v1_3b1e = add i32 %v0_3b0e, -276
  %tmp16 = inttoptr i32 %v1_3b1e to i32*
  %v4_3b24 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp16, i32 %v3_3b0e)
  %v1_3b29 = add i32 %v4_3b24, 36
  %v0_3b2c = load i32, i32* @ebp, align 4
  %v1_3b2c = add i32 %v0_3b2c, -216
  %v3_3b39 = call i32 @_ZN7CScriptaSERKS_(i32 %v1_3b29, i32 %v1_3b2c)
  %v0_3b3e = load i32, i32* @ebp, align 4
  %v1_3b3e = add i32 %v0_3b3e, -216
  %v2_3b47 = call i32 @_ZN7CScriptD1Ev(i32 %v1_3b3e)
  %v0_3b4c = load i32, i32* @ebp, align 4
  %v1_3b4c = add i32 %v0_3b4c, -204
  %v2_3b4c = inttoptr i32 %v1_3b4c to i32*
  %v3_3b4c = load i32, i32* %v2_3b4c, align 4
  %v4_3b4c = add i32 %v3_3b4c, 1
  store i32 %v4_3b4c, i32* %v2_3b4c, align 4
  br label %dec_label_pc_3b53

dec_label_pc_3b53:                                ; preds = %dec_label_pc_3b00, %dec_label_pc_3aa0
  %v0_3b53 = load i32, i32* @ebp, align 4
  %v1_3b59 = add i32 %v0_3b53, -276
  %tmp19 = inttoptr i32 %v1_3b59 to i32*
  %v3_3b5f = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp19)
  %v1_3b64 = load i32, i32* @ebp, align 4
  %v2_3b64 = add i32 %v1_3b64, -204
  %v3_3b64 = inttoptr i32 %v2_3b64 to i32*
  %v4_3b64 = load i32, i32* %v3_3b64, align 4
  %tmp20 = icmp ule i32 %v3_3b5f, %v4_3b64
  %v3_3b6a = icmp ne i1 %tmp20, true
  %v5_3b6d = icmp eq i1 %v3_3b6a, false
  %v1_3b6f = icmp eq i1 %v5_3b6d, false
  br i1 %v1_3b6f, label %dec_label_pc_3b00, label %dec_label_pc_3b71

dec_label_pc_3b71:                                ; preds = %dec_label_pc_3b53
  %v1_3b71 = add i32 %v1_3b64, -296
  %v2_3b71 = inttoptr i32 %v1_3b71 to i32*
  %v3_3b71 = load i32, i32* %v2_3b71, align 4
  %v1_3b81 = add i32 %v1_3b64, -276
  %tmp22 = inttoptr i32 %v1_3b81 to i32*
  %v4_3b87 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp22, i32 %v3_3b71)
  %v1_3b8c = add i32 %v4_3b87, 36
  %v0_3b8f = load i32, i32* @ebp, align 4
  %v1_3b8f = add i32 %v0_3b8f, -288
  %v2_3b8f = inttoptr i32 %v1_3b8f to i32*
  %v3_3b8f = load i32, i32* %v2_3b8f, align 4
  %v3_3b9c = call i32 @_ZN7CScriptaSERKS_(i32 %v1_3b8c, i32 %v3_3b8f)
  %v0_3ba1 = load i32, i32* @ebp, align 4
  %v1_3ba1 = add i32 %v0_3ba1, -300
  %v2_3ba1 = inttoptr i32 %v1_3ba1 to i32*
  %v3_3ba1 = load i32, i32* %v2_3ba1, align 4
  %v1_3ba7 = urem i32 %v3_3ba1, 32
  %v10_3baa = icmp eq i32 %v1_3ba7, 2
  %v1_3bad = icmp eq i1 %v10_3baa, false
  br i1 %v1_3bad, label %dec_label_pc_3c26, label %dec_label_pc_3baf

dec_label_pc_3baf:                                ; preds = %dec_label_pc_3b71
  %v1_3bb5 = add i32 %v0_3ba1, -264
  %tmp24 = inttoptr i32 %v1_3bb5 to i32*
  %v3_3bbb = call i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5clearEv(i32* %tmp24)
  %v0_3bc0 = load i32, i32* @ebp, align 4
  %v1_3bc0 = add i32 %v0_3bc0, -200
  %v2_3bc0 = inttoptr i32 %v1_3bc0 to i32*
  store i32 0, i32* %v2_3bc0, align 4
  br label %dec_label_pc_3c03

dec_label_pc_3bcc:                                ; preds = %dec_label_pc_3c03
  %v3_3bcc = load i32, i32* %v3_3c14, align 4
  %v2_3bd2 = add i32 %v1_3c14, -296
  %v3_3bd2 = inttoptr i32 %v2_3bd2 to i32*
  %v4_3bd2 = load i32, i32* %v3_3bd2, align 4
  %v15_3bd2 = icmp eq i32 %v3_3bcc, %v4_3bd2
  br i1 %v15_3bd2, label %dec_label_pc_3bfc, label %dec_label_pc_3bda

dec_label_pc_3bda:                                ; preds = %dec_label_pc_3bcc
  %v3_3bda = load i32, i32* %v3_3c14, align 4
  %v1_3bea = add i32 %v1_3c14, -276
  %tmp26 = inttoptr i32 %v1_3bea to i32*
  %v4_3bf0 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp26, i32 %v3_3bda)
  %v1_3bf5 = add i32 %v4_3bf0, 48
  %v2_3bf5 = inttoptr i32 %v1_3bf5 to i32*
  store i32 0, i32* %v2_3bf5, align 4
  %v0_3bfc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3bfc

dec_label_pc_3bfc:                                ; preds = %dec_label_pc_3bda, %dec_label_pc_3bcc
  %v19_3bfc = phi i32 [ %v0_3bfc.pre, %dec_label_pc_3bda ], [ %v1_3c14, %dec_label_pc_3bcc ]
  %v1_3bfc = add i32 %v19_3bfc, -200
  %v2_3bfc = inttoptr i32 %v1_3bfc to i32*
  %v3_3bfc = load i32, i32* %v2_3bfc, align 4
  %v4_3bfc = add i32 %v3_3bfc, 1
  store i32 %v4_3bfc, i32* %v2_3bfc, align 4
  br label %dec_label_pc_3c03

dec_label_pc_3c03:                                ; preds = %dec_label_pc_3bfc, %dec_label_pc_3baf
  %v0_3c03 = load i32, i32* @ebp, align 4
  %v1_3c09 = add i32 %v0_3c03, -276
  %tmp29 = inttoptr i32 %v1_3c09 to i32*
  %v3_3c0f = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp29)
  %v1_3c14 = load i32, i32* @ebp, align 4
  %v2_3c14 = add i32 %v1_3c14, -200
  %v3_3c14 = inttoptr i32 %v2_3c14 to i32*
  %v4_3c14 = load i32, i32* %v3_3c14, align 4
  %tmp30 = icmp ule i32 %v3_3c0f, %v4_3c14
  %v3_3c1a = icmp ne i1 %tmp30, true
  %v5_3c1d = icmp eq i1 %v3_3c1a, false
  %v1_3c1f = icmp eq i1 %v5_3c1d, false
  br i1 %v1_3c1f, label %dec_label_pc_3bcc, label %dec_label_pc_3d89

dec_label_pc_3c26:                                ; preds = %dec_label_pc_3b71
  %v3_3c26 = load i32, i32* %v2_3ba1, align 4
  %v1_3c2c = urem i32 %v3_3c26, 32
  %v10_3c2f = icmp eq i32 %v1_3c2c, 3
  %v1_3c32 = icmp eq i1 %v10_3c2f, false
  br i1 %v1_3c32, label %dec_label_pc_3d89, label %dec_label_pc_3c38

dec_label_pc_3c38:                                ; preds = %dec_label_pc_3c26
  %v1_3c38 = add i32 %v0_3ba1, -296
  %v2_3c38 = inttoptr i32 %v1_3c38 to i32*
  %v3_3c38 = load i32, i32* %v2_3c38, align 4
  %v2_3c3e = add i32 %v0_3ba1, -188
  %v3_3c3e = inttoptr i32 %v2_3c3e to i32*
  store i32 %v3_3c38, i32* %v3_3c3e, align 4
  %v0_3c44 = load i32, i32* @ebp, align 4
  %v1_3c4a = add i32 %v0_3c44, -264
  %tmp32 = inttoptr i32 %v1_3c4a to i32*
  %v3_3c50 = call i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32* %tmp32)
  %v1_3c55 = load i32, i32* @ebp, align 4
  %v2_3c55 = add i32 %v1_3c55, -188
  %v3_3c55 = inttoptr i32 %v2_3c55 to i32*
  %v4_3c55 = load i32, i32* %v3_3c55, align 4
  %tmp33 = icmp ule i32 %v3_3c50, %v4_3c55
  %v5_3c5e = icmp eq i1 %tmp33, false
  br i1 %v5_3c5e, label %dec_label_pc_3c9b, label %dec_label_pc_3c62

dec_label_pc_3c62:                                ; preds = %dec_label_pc_3c38
  %v1_3c88 = add i32 %v1_3c55, -284
  %v2_3c88 = inttoptr i32 %v1_3c88 to i32*
  %v3_3c88 = load i32, i32* %v2_3c88, align 4
  %tmp34 = inttoptr i32 %v3_3c88 to i32*
  %v5_3c91 = call i32 @_ZN7uint256C1Ey(i32* %tmp34, i32 1)
  br label %dec_label_pc_3e73

dec_label_pc_3c9b:                                ; preds = %dec_label_pc_3c38
  %v1_3c9b = add i32 %v1_3c55, -248
  %v2_3ca4 = call i32 @_ZN6CTxOutC1Ev(i32 %v1_3c9b)
  %v0_3ca9 = load i32, i32* @ebp, align 4
  %v1_3ca9 = add i32 %v0_3ca9, -188
  %v2_3ca9 = inttoptr i32 %v1_3ca9 to i32*
  %v3_3ca9 = load i32, i32* %v2_3ca9, align 4
  %v1_3caf = add i32 %v3_3ca9, 1
  %v1_3cb2 = add i32 %v0_3ca9, -248
  %v1_3cc6 = add i32 %v0_3ca9, -264
  %tmp36 = inttoptr i32 %v1_3cc6 to i32*
  %v5_3ccc = call i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6resizeEjS0_(i32* %tmp36, i32 %v1_3caf, i32 %v1_3cb2)
  %v0_3cd1 = load i32, i32* @ebp, align 4
  %v1_3cd1 = add i32 %v0_3cd1, -248
  %v2_3cda = call i32 @_ZN6CTxOutD1Ev(i32 %v1_3cd1)
  %v0_3cdf = load i32, i32* @ebp, align 4
  %v1_3cdf = add i32 %v0_3cdf, -196
  %v2_3cdf = inttoptr i32 %v1_3cdf to i32*
  store i32 0, i32* %v2_3cdf, align 4
  br label %dec_label_pc_3d15

dec_label_pc_3ceb:                                ; preds = %dec_label_pc_3d15
  %v3_3ceb = load i32, i32* %v2_3d15, align 4
  %v1_3cfb = add i32 %v0_3d15, -264
  %tmp38 = inttoptr i32 %v1_3cfb to i32*
  %v4_3d01 = call i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %tmp38, i32 %v3_3ceb)
  %tmp39 = inttoptr i32 %v4_3d01 to i32*
  %v3_3d09 = call i32 @_ZN6CTxOut7SetNullEv(i32* %tmp39)
  %v0_3d0e = load i32, i32* @ebp, align 4
  %v1_3d0e = add i32 %v0_3d0e, -196
  %v2_3d0e = inttoptr i32 %v1_3d0e to i32*
  %v3_3d0e = load i32, i32* %v2_3d0e, align 4
  %v4_3d0e = add i32 %v3_3d0e, 1
  store i32 %v4_3d0e, i32* %v2_3d0e, align 4
  br label %dec_label_pc_3d15

dec_label_pc_3d15:                                ; preds = %dec_label_pc_3ceb, %dec_label_pc_3c9b
  %v0_3d15 = load i32, i32* @ebp, align 4
  %v1_3d15 = add i32 %v0_3d15, -196
  %v2_3d15 = inttoptr i32 %v1_3d15 to i32*
  %v3_3d15 = load i32, i32* %v2_3d15, align 4
  %v2_3d1b = add i32 %v0_3d15, -188
  %v3_3d1b = inttoptr i32 %v2_3d1b to i32*
  %v4_3d1b = load i32, i32* %v3_3d1b, align 4
  %v10_3d1b = icmp ult i32 %v3_3d15, %v4_3d1b
  %v5_3d24 = icmp eq i1 %v10_3d1b, false
  %v1_3d26 = icmp eq i1 %v5_3d24, false
  br i1 %v1_3d26, label %dec_label_pc_3ceb, label %dec_label_pc_3d28

dec_label_pc_3d28:                                ; preds = %dec_label_pc_3d15
  %v1_3d28 = add i32 %v0_3d15, -192
  %v2_3d28 = inttoptr i32 %v1_3d28 to i32*
  store i32 0, i32* %v2_3d28, align 4
  br label %dec_label_pc_3d6b

dec_label_pc_3d34:                                ; preds = %dec_label_pc_3d6b
  %v3_3d34 = load i32, i32* %v3_3d7c, align 4
  %v2_3d3a = add i32 %v1_3d7c, -296
  %v3_3d3a = inttoptr i32 %v2_3d3a to i32*
  %v4_3d3a = load i32, i32* %v3_3d3a, align 4
  %v15_3d3a = icmp eq i32 %v3_3d34, %v4_3d3a
  br i1 %v15_3d3a, label %dec_label_pc_3d64, label %dec_label_pc_3d42

dec_label_pc_3d42:                                ; preds = %dec_label_pc_3d34
  %v3_3d42 = load i32, i32* %v3_3d7c, align 4
  %v1_3d52 = add i32 %v1_3d7c, -276
  %tmp42 = inttoptr i32 %v1_3d52 to i32*
  %v4_3d58 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp42, i32 %v3_3d42)
  %v1_3d5d = add i32 %v4_3d58, 48
  %v2_3d5d = inttoptr i32 %v1_3d5d to i32*
  store i32 0, i32* %v2_3d5d, align 4
  %v0_3d64.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3d64

dec_label_pc_3d64:                                ; preds = %dec_label_pc_3d42, %dec_label_pc_3d34
  %v19_3d64 = phi i32 [ %v0_3d64.pre, %dec_label_pc_3d42 ], [ %v1_3d7c, %dec_label_pc_3d34 ]
  %v1_3d64 = add i32 %v19_3d64, -192
  %v2_3d64 = inttoptr i32 %v1_3d64 to i32*
  %v3_3d64 = load i32, i32* %v2_3d64, align 4
  %v4_3d64 = add i32 %v3_3d64, 1
  store i32 %v4_3d64, i32* %v2_3d64, align 4
  br label %dec_label_pc_3d6b

dec_label_pc_3d6b:                                ; preds = %dec_label_pc_3d64, %dec_label_pc_3d28
  %v0_3d6b = load i32, i32* @ebp, align 4
  %v1_3d71 = add i32 %v0_3d6b, -276
  %tmp45 = inttoptr i32 %v1_3d71 to i32*
  %v3_3d77 = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp45)
  %v1_3d7c = load i32, i32* @ebp, align 4
  %v2_3d7c = add i32 %v1_3d7c, -192
  %v3_3d7c = inttoptr i32 %v2_3d7c to i32*
  %v4_3d7c = load i32, i32* %v3_3d7c, align 4
  %tmp46 = icmp ule i32 %v3_3d77, %v4_3d7c
  %v3_3d82 = icmp ne i1 %tmp46, true
  %v5_3d85 = icmp eq i1 %v3_3d82, false
  %v1_3d87 = icmp eq i1 %v5_3d85, false
  br i1 %v1_3d87, label %dec_label_pc_3d34, label %dec_label_pc_3d89

dec_label_pc_3d89:                                ; preds = %dec_label_pc_3c03, %dec_label_pc_3d6b, %dec_label_pc_3c26
  %v0_3d98 = phi i32 [ %v0_3ba1, %dec_label_pc_3c26 ], [ %v1_3d7c, %dec_label_pc_3d6b ], [ %v1_3c14, %dec_label_pc_3c03 ]
  %v1_3d89 = add i32 %v0_3d98, -300
  %v2_3d89 = inttoptr i32 %v1_3d89 to i32*
  %v3_3d89 = load i32, i32* %v2_3d89, align 4
  %tmp56 = trunc i32 %v3_3d89 to i8
  %v2_3d8f = icmp sgt i8 %tmp56, -1
  br i1 %v2_3d8f, label %dec_label_pc_3e10, label %dec_label_pc_3d98

dec_label_pc_3d98:                                ; preds = %dec_label_pc_3d89
  %v1_3d98 = add i32 %v0_3d98, -296
  %v2_3d98 = inttoptr i32 %v1_3d98 to i32*
  %v3_3d98 = load i32, i32* %v2_3d98, align 4
  %v1_3da8 = add i32 %v0_3d98, -276
  %tmp48 = inttoptr i32 %v1_3da8 to i32*
  %v4_3dae = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp48, i32 %v3_3d98)
  store i32 %v4_3dae, i32* @ebx, align 4
  %v0_3dbd = load i32, i32* @ebp, align 4
  %v1_3dc3 = add i32 %v0_3dbd, -276
  %tmp50 = inttoptr i32 %v1_3dc3 to i32*
  %v4_3dc9 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp50, i32 0)
  %v0_3dce = load i32, i32* @ebx, align 4
  %tmp51 = inttoptr i32 %v4_3dc9 to i32*
  %v4_3dd5 = call i32 @_ZN5CTxInaSERKS_(i32* %tmp51, i32 %v0_3dce)
  %v0_3dda = load i32, i32* @ebp, align 4
  %v1_3dda = add i32 %v0_3dda, -64
  %v2_3de0 = call i32 @_ZN5CTxInC1Ev(i32 %v1_3dda)
  %v0_3de5 = load i32, i32* @ebp, align 4
  %v1_3de5 = add i32 %v0_3de5, -64
  %v1_3dfa = add i32 %v0_3de5, -276
  %tmp53 = inttoptr i32 %v1_3dfa to i32*
  %v5_3e00 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EE6resizeEjS0_(i32* %tmp53, i32 1, i32 %v1_3de5)
  %v0_3e05 = load i32, i32* @ebp, align 4
  %v1_3e05 = add i32 %v0_3e05, -64
  %v2_3e0b = call i32 @_ZN5CTxInD1Ev(i32 %v1_3e05)
  %v0_3e20.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3e10

dec_label_pc_3e10:                                ; preds = %dec_label_pc_3d98, %dec_label_pc_3d89
  %v0_3e20 = phi i32 [ %v0_3e20.pre, %dec_label_pc_3d98 ], [ %v0_3d98, %dec_label_pc_3d89 ]
  %v1_3e20 = add i32 %v0_3e20, -184
  %v4_3e29 = call i32 @_ZN11CHashWriterC1Eii(i32 %v1_3e20, i32 4, i32 0)
  %v0_3e2e = load i32, i32* @ebp, align 4
  %v1_3e2e = add i32 %v0_3e2e, -280
  %v1_3e38 = add i32 %v0_3e2e, -184
  %v3_3e41 = call i32 @_ZN11CHashWriterlsI12CTransactionEERS_RKT_(i32 %v1_3e38, i32 %v1_3e2e)
  %v0_3e46 = load i32, i32* @ebp, align 4
  %v1_3e46 = add i32 %v0_3e46, -300
  %v3_3e53 = inttoptr i32 %v1_3e46 to i32*
  %v4_3e53 = call i32 @_ZN11CHashWriterlsIiEERS_RKT_(i32 %v3_3e41, i32* %v3_3e53)
  %v0_3e58 = load i32, i32* @ebp, align 4
  %v1_3e58 = add i32 %v0_3e58, -284
  %v2_3e58 = inttoptr i32 %v1_3e58 to i32*
  %v3_3e58 = load i32, i32* %v2_3e58, align 4
  %v1_3e5e = add i32 %v0_3e58, -184
  %v3_3e6b = call i32 @_ZN11CHashWriter7GetHashEv(i32 %v3_3e58, i32 %v1_3e5e)
  br label %dec_label_pc_3e73

dec_label_pc_3e73:                                ; preds = %dec_label_pc_3e10, %dec_label_pc_3c62
  %v0_3e73 = load i32, i32* @ebp, align 4
  %v1_3e73 = add i32 %v0_3e73, -280
  %v1_3e7c = call i32 @_ZN12CTransactionD1Ev(i32 %v1_3e73)
  %v0_3e81 = call i32 @function_3ee2()
  ret i32 %v0_3e81

; uselistorder directives
  uselistorder i32 %v0_3d98, { 0, 2, 1, 3 }
  uselistorder i32* %v3_3d7c, { 2, 1, 0 }
  uselistorder i32 %v1_3d7c, { 0, 4, 3, 2, 1 }
  uselistorder i32* %v2_3d15, { 1, 0 }
  uselistorder i32 %v0_3d15, { 0, 2, 3, 1 }
  uselistorder i32 %v0_3ca9, { 1, 0, 2 }
  uselistorder i32 %v1_3c55, { 1, 0, 2 }
  uselistorder i32* %v3_3c14, { 2, 1, 0 }
  uselistorder i32 %v1_3c14, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v0_3ba1, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_3b64, { 1, 0, 3, 2 }
  uselistorder i32 -184, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 -192, { 3, 2, 4, 0, 1 }
  uselistorder i32 (i32*, i32)* @_ZN7uint256C1Ey, { 1, 0 }
  uselistorder i32 -296, { 1, 0, 2, 3, 4 }
  uselistorder i32 -276, { 4, 5, 6, 2, 1, 7, 3, 8, 9, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CScript13FindAndDeleteERKS_, { 0, 2, 1 }
  uselistorder i32 -292, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_3d89, { 1, 2, 0 }
}

define i32 @function_3e83() local_unnamed_addr {
dec_label_pc_3e83:
  %v0_3e85 = load i32, i32* @ebp, align 4
  %v1_3e85 = add i32 %v0_3e85, -228
  %v1_3e8e = call i32 @_ZN7CScriptD1Ev(i32 %v1_3e85)
  %v0_3e93 = call i32 @function_3eca()
  ret i32 %v0_3e93
}

define i32 @function_3e95() local_unnamed_addr {
dec_label_pc_3e95:
  %v0_3e97 = load i32, i32* @ebp, align 4
  %v1_3e97 = add i32 %v0_3e97, -216
  %v1_3ea0 = call i32 @_ZN7CScriptD1Ev(i32 %v1_3e97)
  %v0_3ea5 = call i32 @function_3eca()
  ret i32 %v0_3ea5

; uselistorder directives
  uselistorder i32 -216, { 0, 3, 4, 5, 1, 2 }
}

define i32 @function_3ea7() local_unnamed_addr {
dec_label_pc_3ea7:
  %v0_3ea9 = load i32, i32* @ebp, align 4
  %v1_3ea9 = add i32 %v0_3ea9, -248
  %v1_3eb2 = call i32 @_ZN6CTxOutD1Ev(i32 %v1_3ea9)
  %v0_3eb7 = call i32 @function_3eca()
  ret i32 %v0_3eb7

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CTxOutD1Ev, { 1, 0 }
}

define i32 @function_3eb9() local_unnamed_addr {
dec_label_pc_3eb9:
  %v0_3ebb = load i32, i32* @ebp, align 4
  %v1_3ebb = add i32 %v0_3ebb, -64
  %v1_3ec1 = call i32 @_ZN5CTxInD1Ev(i32 %v1_3ebb)
  %v0_3ec6 = call i32 @function_3eca()
  ret i32 %v0_3ec6

; uselistorder directives
  uselistorder i32 ()* @function_3eca, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5CTxInD1Ev, { 1, 0 }
}

define i32 @function_3ec9() local_unnamed_addr {
dec_label_pc_3ec9:
  %eax.global-to-local = alloca i32, align 4
  %v0_3ec9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3ec9
}

define i32 @function_3eca() local_unnamed_addr {
dec_label_pc_3eca:
  %v0_3eca = load i32, i32* @ebp, align 4
  %v1_3eca = add i32 %v0_3eca, -280
  %v1_3ed3 = call i32 @_ZN12CTransactionD1Ev(i32 %v1_3eca)
  %v0_3ed8 = load i32, i32* @ebx, align 4
  ret i32 %v0_3ed8
}

define i32 @function_3ee2() local_unnamed_addr {
dec_label_pc_3ee2:
  %v0_3ee2 = load i32, i32* @ebp, align 4
  %v1_3ee2 = add i32 %v0_3ee2, -284
  %v2_3ee2 = inttoptr i32 %v1_3ee2 to i32*
  %v3_3ee2 = load i32, i32* %v2_3ee2, align 4
  store i32 %v3_3ee2, i32* @eax, align 4
  %v1_3ee8 = add i32 %v0_3ee2, -12
  %v2_3ee8 = inttoptr i32 %v1_3ee8 to i32*
  %v3_3ee8 = load i32, i32* %v2_3ee8, align 4
  %v1_3eeb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3eeb = icmp eq i32 %v1_3eeb, %v3_3ee8
  br i1 %v3_3eeb, label %bb, label %dec_label_pc_3ef4

bb:                                               ; preds = %dec_label_pc_3ee2
  %v1_3ef2 = call i32 @function_3ef9()
  br label %dec_label_pc_3ef4

dec_label_pc_3ef4:                                ; preds = %bb, %dec_label_pc_3ee2
  %v2_3ef2 = phi i32 [ %v1_3ef2, %bb ], [ %v3_3ee2, %dec_label_pc_3ee2 ]
  ret i32 %v2_3ef2
}

define i32 @function_3ef9() local_unnamed_addr {
dec_label_pc_3ef9:
  %v0_3ef9 = load i32, i32* @ebp, align 4
  %v1_3ef9 = add i32 %v0_3ef9, -4
  %v2_3ef9 = inttoptr i32 %v1_3ef9 to i32*
  %v3_3ef9 = load i32, i32* %v2_3ef9, align 4
  store i32 %v3_3ef9, i32* @ebx, align 4
  %v0_3efd = load i32, i32* @eax, align 4
  ret i32 %v0_3efd
}

define i1 @_Z8CheckSigSt6vectorIhSaIhEERKS1_RK7CScriptRK12CTransactionjii(%"vector<unsignedchar,std::allocator<unsignedchar>>.23" %vchSig, %"vector<unsignedchar,std::allocator<unsignedchar>>" %vchPubKey, %CScript %scriptCode, i32 %txTo, i32 %nIn, i32 %nHashType, i32 %flags) local_unnamed_addr {
dec_label_pc_3f00:
  %v2_3f5a = load i8, i8* inttoptr (i32 36576 to i8*), align 32
  %v3_3f5a = zext i8 %v2_3f5a to i32
  %v5_3f5d = icmp eq i8 %v2_3f5a, 0
  %v1_3f5f = icmp eq i1 %v5_3f5d, false
  br i1 %v1_3f5f, label %bb, label %dec_label_pc_3f61

bb:                                               ; preds = %dec_label_pc_3f00
  %tmp20 = extractvalue %CScript %scriptCode, 0
  %tmp21 = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %vchPubKey, 0
  %tmp22 = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.23" %vchSig, 0
  %v9_3f5f = call i32 @function_3fb0(i32 %flags, i32 %nHashType, i32 %nIn, i32 %txTo, i32 %tmp20, i32 %tmp21, i32 %tmp22)
  br label %dec_label_pc_3f61

dec_label_pc_3f61:                                ; preds = %bb, %dec_label_pc_3f00
  %v2_3f61 = phi i32 [ %v9_3f5f, %bb ], [ %v3_3f5a, %dec_label_pc_3f00 ]
  %tmp23 = urem i32 %v2_3f61, 2
  %v3_3f61 = icmp ne i32 %tmp23, 0
  ret i1 %v3_3f61
}

define i32 @function_3f94() local_unnamed_addr {
dec_label_pc_3f94:
  %v0_3f94 = call i32 @function_c7000141()
  ret i32 %v0_3f94
}

define i32 @function_3fb0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_3fb0:
  %v0_3fb0 = load i32, i32* @ebp, align 4
  %v1_3fb0 = add i32 %v0_3fb0, -144
  %v2_3fb0 = inttoptr i32 %v1_3fb0 to i32*
  %v3_3fb0 = load i32, i32* %v2_3fb0, align 4
  %v1_3fba = add i32 %v0_3fb0, -109
  %v2_3fc0 = call i32 @_ZN7CPubKeyC1ERKSt6vectorIhSaIhEE(i32 %v1_3fba, i32 %v3_3fb0)
  %v0_3fc5 = load i32, i32* @ebp, align 4
  %v1_3fc5 = add i32 %v0_3fc5, -109
  %v1_3fcb = call i32 @_ZNK7CPubKey7IsValidEv(i32 %v1_3fc5)
  %v1_3fd0 = xor i32 %v1_3fcb, 1
  %v4_3fd0 = trunc i32 %v1_3fd0 to i8
  %v5_3fd3 = icmp eq i8 %v4_3fd0, 0
  br i1 %v5_3fd3, label %dec_label_pc_3fe1, label %dec_label_pc_3fd7

dec_label_pc_3fd7:                                ; preds = %dec_label_pc_3fb0
  store i32 0, i32* @eax, align 4
  %v0_3fdc = call i32 @function_413d()
  ret i32 %v0_3fdc

dec_label_pc_3fe1:                                ; preds = %dec_label_pc_3fb0
  %v0_3fe1 = load i32, i32* @ebp, align 4
  %v1_3fe1 = add i32 %v0_3fe1, -140
  %v2_3fe1 = inttoptr i32 %v1_3fe1 to i32*
  %v3_3fe1 = load i32, i32* %v2_3fe1, align 4
  %v1_3fea = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v3_3fe1)
  %v4_3fef = trunc i32 %v1_3fea to i8
  %v5_3fef = icmp eq i8 %v4_3fef, 0
  br i1 %v5_3fef, label %dec_label_pc_3ffd, label %dec_label_pc_3ff3

dec_label_pc_3ff3:                                ; preds = %dec_label_pc_3fe1
  store i32 0, i32* @eax, align 4
  %v0_3ff8 = call i32 @function_413d()
  ret i32 %v0_3ff8

dec_label_pc_3ffd:                                ; preds = %dec_label_pc_3fe1
  %v0_3ffd = load i32, i32* @ebp, align 4
  %v1_3ffd = add i32 %v0_3ffd, -160
  %v2_3ffd = inttoptr i32 %v1_3ffd to i32*
  %v3_3ffd = load i32, i32* %v2_3ffd, align 4
  %v10_3ffd = icmp eq i32 %v3_3ffd, 0
  %v1_4004 = icmp eq i1 %v10_3ffd, false
  %v1_4022 = add i32 %v0_3ffd, -140
  %v2_4022 = inttoptr i32 %v1_4022 to i32*
  %v3_4022 = load i32, i32* %v2_4022, align 4
  %v1_402b = call i32 @_ZNSt6vectorIhSaIhEE4backEv(i32 %v3_4022)
  %v1_4030 = inttoptr i32 %v1_402b to i8*
  %v2_4030 = load i8, i8* %v1_4030, align 1
  %v3_4030 = zext i8 %v2_4030 to i32
  %v1_4036 = load i32, i32* @ebp, align 4
  %v2_4036 = add i32 %v1_4036, -160
  %v3_4036 = inttoptr i32 %v2_4036 to i32*
  br i1 %v1_4004, label %dec_label_pc_4022, label %dec_label_pc_4006

dec_label_pc_4006:                                ; preds = %dec_label_pc_3ffd
  store i32 %v3_4030, i32* %v3_4036, align 4
  %v0_404d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_404d

dec_label_pc_4022:                                ; preds = %dec_label_pc_3ffd
  %v4_4036 = load i32, i32* %v3_4036, align 4
  %v15_4036 = icmp eq i32 %v3_4030, %v4_4036
  %v1_403c = icmp eq i1 %v15_4036, false
  %v5_403f = icmp eq i1 %v1_403c, false
  br i1 %v5_403f, label %dec_label_pc_404d, label %dec_label_pc_4043

dec_label_pc_4043:                                ; preds = %dec_label_pc_4022
  store i32 0, i32* @eax, align 4
  %v0_4048 = call i32 @function_413d()
  ret i32 %v0_4048

dec_label_pc_404d:                                ; preds = %dec_label_pc_4022, %dec_label_pc_4006
  %v0_404d = phi i32 [ %v1_4036, %dec_label_pc_4022 ], [ %v0_404d.pre, %dec_label_pc_4006 ]
  %v1_404d = add i32 %v0_404d, -140
  %v2_404d = inttoptr i32 %v1_404d to i32*
  %v3_404d = load i32, i32* %v2_404d, align 4
  %v1_4056 = call i32 @_ZNSt6vectorIhSaIhEE8pop_backEv(i32 %v3_404d)
  %v0_405b = load i32, i32* @ebp, align 4
  %v1_405b = add i32 %v0_405b, -148
  %v2_405b = inttoptr i32 %v1_405b to i32*
  %v3_405b = load i32, i32* %v2_405b, align 4
  %v1_4065 = add i32 %v0_405b, -124
  %v2_406b = call i32 @_ZN7CScriptC1ERKS_(i32 %v1_4065, i32 %v3_405b)
  %v0_4070 = load i32, i32* @ebp, align 4
  %v1_4070 = add i32 %v0_4070, -44
  %v1_407d = add i32 %v0_4070, -156
  %v2_407d = inttoptr i32 %v1_407d to i32*
  %v3_407d = load i32, i32* %v2_407d, align 4
  %v1_4087 = add i32 %v0_4070, -152
  %v2_4087 = inttoptr i32 %v1_4087 to i32*
  %v3_4087 = load i32, i32* %v2_4087, align 4
  %v1_4091 = add i32 %v0_4070, -124
  %v5_409b = insertvalue %CScript.22 undef, i32 %v1_4070, 0
  %v6_409b = call %uint256 @_Z13SignatureHash7CScriptRK12CTransactionji(%CScript.22 %v5_409b, i32 %v1_4091, i32 %v3_4087, i32 %v3_407d)
  %v0_40a3 = load i32, i32* @ebp, align 4
  %v1_40a3 = add i32 %v0_40a3, -124
  %v1_40a9 = call i32 @_ZN7CScriptD1Ev(i32 %v1_40a3)
  %v0_40ae = load i32, i32* @ebp, align 4
  %v1_40ae = add i32 %v0_40ae, -109
  %v1_40b5 = add i32 %v0_40ae, -140
  %v2_40b5 = inttoptr i32 %v1_40b5 to i32*
  %v3_40b5 = load i32, i32* %v2_40b5, align 4
  %v1_40bf = add i32 %v0_40ae, -44
  %v4_40cd = call i32 @_ZN15CSignatureCache3GetERK7uint256RKSt6vectorIhSaIhEERK7CPubKey(i32 36624, i32 %v1_40bf, i32 %v3_40b5, i32 %v1_40ae)
  %v4_40d2 = trunc i32 %v4_40cd to i8
  %v5_40d2 = icmp eq i8 %v4_40d2, 0
  br i1 %v5_40d2, label %dec_label_pc_40dd, label %dec_label_pc_40d6

dec_label_pc_40d6:                                ; preds = %dec_label_pc_404d
  store i32 1, i32* @eax, align 4
  %v0_40db = call i32 @function_413d()
  ret i32 %v0_40db

dec_label_pc_40dd:                                ; preds = %dec_label_pc_404d
  %v0_40dd = load i32, i32* @ebp, align 4
  %v1_40ee = add i32 %v0_40dd, -109
  ret i32 %v1_40ee

; uselistorder directives
  uselistorder i32 %v0_4070, { 0, 2, 1, 3 }
  uselistorder i32* %v3_4036, { 1, 0 }
  uselistorder i32 -148, { 1, 0 }
  uselistorder i32 -144, { 2, 0, 1 }
}

define i32 @function_40f8() local_unnamed_addr {
dec_label_pc_40f8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_40f8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_40f8 = add i32 %v0_40f8, -1065090576
  %v2_40f8 = inttoptr i32 %v1_40f8 to i32*
  %v3_40f8 = load i32, i32* %v2_40f8, align 4
  %v4_40f8 = add i32 %v3_40f8, 1
  %v12_40f8 = icmp eq i32 %v4_40f8, 0
  store i32 %v4_40f8, i32* %v2_40f8, align 4
  br i1 %v12_40f8, label %dec_label_pc_4107, label %dec_label_pc_4100

dec_label_pc_4100:                                ; preds = %dec_label_pc_40f8
  store i32 0, i32* @eax, align 4
  %v0_4105 = call i32 @function_413d()
  ret i32 %v0_4105

dec_label_pc_4107:                                ; preds = %dec_label_pc_40f8
  %v0_4107 = load i32, i32* @ebp, align 4
  %v1_4107 = add i32 %v0_4107, -164
  %v2_4107 = inttoptr i32 %v1_4107 to i32*
  %v3_4107 = load i32, i32* %v2_4107, align 4
  %v1_410d = and i32 %v3_4107, 4
  %v2_410d = icmp eq i32 %v1_410d, 0
  %v1_4112 = icmp eq i1 %v2_410d, false
  br i1 %v1_4112, label %dec_label_pc_4138, label %dec_label_pc_4114

dec_label_pc_4114:                                ; preds = %dec_label_pc_4107
  %v1_4114 = add i32 %v0_4107, -109
  %v1_411b = add i32 %v0_4107, -140
  %v2_411b = inttoptr i32 %v1_411b to i32*
  %v3_411b = load i32, i32* %v2_411b, align 4
  %v1_4125 = add i32 %v0_4107, -44
  store i32 %v1_4125, i32* @eax, align 4
  %v4_4133 = call i32 @_ZN15CSignatureCache3SetERK7uint256RKSt6vectorIhSaIhEERK7CPubKey(i32 36624, i32 %v1_4125, i32 %v3_411b, i32 %v1_4114)
  br label %dec_label_pc_4138

dec_label_pc_4138:                                ; preds = %dec_label_pc_4114, %dec_label_pc_4107
  ret i32 1

; uselistorder directives
  uselistorder i32 %v0_4107, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_413d, { 4, 3, 2, 1, 0 }
}

define i32 @function_413d() local_unnamed_addr {
dec_label_pc_413d:
  %v0_413d = load i32, i32* @ebp, align 4
  %v1_413d = add i32 %v0_413d, -12
  %v2_413d = inttoptr i32 %v1_413d to i32*
  %v3_413d = load i32, i32* %v2_413d, align 4
  %v1_4140 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4140 = icmp eq i32 %v1_4140, %v3_413d
  br i1 %v3_4140, label %bb, label %dec_label_pc_4149

bb:                                               ; preds = %dec_label_pc_413d
  %v1_4147 = call i32 @function_4185()
  store i32 %v1_4147, i32* @eax, align 4
  br label %dec_label_pc_4149

dec_label_pc_4149:                                ; preds = %bb, %dec_label_pc_413d
  %v0_4149 = call i32 @function_4180()
  ret i32 %v0_4149
}

define i32 @function_414c() local_unnamed_addr {
dec_label_pc_414c:
  %eax.global-to-local = alloca i32, align 4
  %v0_414c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_414c
}

define i32 @function_416a() local_unnamed_addr {
dec_label_pc_416a:
  %eax.global-to-local = alloca i32, align 4
  %v0_416a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_416a
}

define i32 @function_4180() local_unnamed_addr {
dec_label_pc_4180:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4185() local_unnamed_addr {
dec_label_pc_4185:
  %v0_4185 = load i32, i32* @ebp, align 4
  %v1_4185 = add i32 %v0_4185, -8
  %v1_4188 = inttoptr i32 %v1_4185 to i32*
  %v2_4188 = load i32, i32* %v1_4188, align 4
  store i32 %v2_4188, i32* @ebx, align 4
  %v3_4188 = add i32 %v0_4185, -4
  %v1_4189 = inttoptr i32 %v3_4188 to i32*
  %v2_4189 = load i32, i32* %v1_4189, align 4
  store i32 %v2_4189, i32* @esi, align 4
  %v1_418a = inttoptr i32 %v0_4185 to i32*
  %v2_418a = load i32, i32* %v1_418a, align 4
  store i32 %v2_418a, i32* @ebp, align 4
  %v0_418b = load i32, i32* @eax, align 4
  ret i32 %v0_418b
}

define i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %scriptPubKey, i32 %typeRet, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutionsRet) local_unnamed_addr {
dec_label_pc_418c:
  %v2_41c2 = load i8, i8* inttoptr (i32 36584 to i8*), align 8
  %v3_41c2 = zext i8 %v2_41c2 to i32
  %v5_41c5 = icmp eq i8 %v2_41c2, 0
  %v1_41c7 = icmp eq i1 %v5_41c5, false
  br i1 %v1_41c7, label %bb, label %dec_label_pc_41c9

bb:                                               ; preds = %dec_label_pc_418c
  %tmp12 = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutionsRet, 0
  %tmp13 = extractvalue %CScript %scriptPubKey, 0
  %v5_41c7 = call i32 @function_4218(i32 %tmp12, i32 %typeRet, i32 %tmp13)
  br label %dec_label_pc_41c9

dec_label_pc_41c9:                                ; preds = %bb, %dec_label_pc_418c
  %v2_41c9 = phi i32 [ %v5_41c7, %bb ], [ %v3_41c2, %dec_label_pc_418c ]
  %tmp14 = urem i32 %v2_41c9, 2
  %v3_41c9 = icmp ne i32 %tmp14, 0
  ret i1 %v3_41c9
}

define i32 @function_4218(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4218:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca %CScript*, align 4
  %v1_421f = call i32 @_ZNKSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE5emptyEv(i32 36592)
  store i32 %v1_421f, i32* %eax.global-to-local, align 4
  %v4_4224 = trunc i32 %v1_421f to i8
  %v5_4224 = icmp eq i8 %v4_4224, 0
  br i1 %v5_4224, label %dec_label_pc_4507, label %dec_label_pc_422c

dec_label_pc_422c:                                ; preds = %dec_label_pc_4218
  %v0_422c = load i32, i32* @ebp, align 4
  %v1_422c = add i32 %v0_422c, -236
  store i32 %v1_422c, i32* %eax.global-to-local, align 4
  %v1_4235 = call i32 @_ZN7CScriptC1Ev(i32 %v1_422c)
  %v0_4242 = load i32, i32* @ebp, align 4
  %v1_4242 = add i32 %v0_4242, -236
  store i32 %v1_4242, i32* %eax.global-to-local, align 4
  %v2_424b = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v1_4242, i32 254)
  store i32 %v2_424b, i32* %eax.global-to-local, align 4
  %v2_425b = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_424b, i32 172)
  %v0_4264 = load i32, i32* @ebp, align 4
  %v1_4264 = add i32 %v0_4264, -224
  store i32 %v1_4264, i32* %eax.global-to-local, align 4
  %v2_426d = call i32 @_ZN7CScriptC1ERKS_(i32 %v1_4264, i32 %v2_425b)
  %v0_4272 = load i32, i32* @ebp, align 4
  %v1_4272 = add i32 %v0_4272, -348
  store i32 %v1_4272, i32* %eax.global-to-local, align 4
  %v1_4278 = add i32 %v0_4272, -224
  store i32 %v1_4278, i32* @edx, align 4
  %v3_428d = call i32 @_ZSt9make_pairI10txnouttype7CScriptESt4pairIT_T0_ES3_S4_(i32 %v1_4272, i32 1, i32 %v1_4278)
  %v0_4295 = load i32, i32* @ebp, align 4
  %v1_4295 = add i32 %v0_4295, -348
  %v1_429f = add i32 %v0_4295, -332
  store i32 %v1_429f, i32* %eax.global-to-local, align 4
  %v2_42a8 = inttoptr i32 %v1_429f to i32*
  %v3_42a8 = call i32 @_ZNSt4pairIK10txnouttype7CScriptEC1IS0_S2_EERKS_IT_T0_E(i32* %v2_42a8, i32 %v1_4295)
  %v0_42ad = load i32, i32* @ebp, align 4
  %v1_42ad = add i32 %v0_42ad, -128
  store i32 %v1_42ad, i32* %eax.global-to-local, align 4
  %v1_42b0 = add i32 %v0_42ad, -332
  %v3_42c5 = call i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE6insertERKS6_(i32 %v1_42ad, i32 36592, i32 %v1_42b0)
  %v0_42cd = load i32, i32* @ebp, align 4
  %v1_42cd = add i32 %v0_42cd, -332
  store i32 %v1_42cd, i32* %eax.global-to-local, align 4
  %v1_42d6 = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_42cd)
  %v0_42db = load i32, i32* @ebp, align 4
  %v1_42db = add i32 %v0_42db, -348
  store i32 %v1_42db, i32* %eax.global-to-local, align 4
  %v1_42e4 = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_42db)
  %v0_42e9 = load i32, i32* @ebp, align 4
  %v1_42e9 = add i32 %v0_42e9, -224
  store i32 %v1_42e9, i32* %eax.global-to-local, align 4
  %v1_42f2 = call i32 @_ZN7CScriptD1Ev(i32 %v1_42e9)
  %v0_42f7 = load i32, i32* @ebp, align 4
  %v1_42f7 = add i32 %v0_42f7, -236
  store i32 %v1_42f7, i32* %eax.global-to-local, align 4
  %v1_4300 = call i32 @_ZN7CScriptD1Ev(i32 %v1_42f7)
  %v0_4305 = load i32, i32* @ebp, align 4
  %v1_4305 = add i32 %v0_4305, -212
  store i32 %v1_4305, i32* %eax.global-to-local, align 4
  %v1_430e = call i32 @_ZN7CScriptC1Ev(i32 %v1_4305)
  %v0_431b = load i32, i32* @ebp, align 4
  %v1_431b = add i32 %v0_431b, -212
  store i32 %v1_431b, i32* %eax.global-to-local, align 4
  %v2_4324 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v1_431b, i32 118)
  store i32 %v2_4324, i32* %eax.global-to-local, align 4
  %v2_4334 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_4324, i32 169)
  store i32 %v2_4334, i32* %eax.global-to-local, align 4
  %v2_4344 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_4334, i32 ptrtoint (i32* @global_var_fd.2211 to i32))
  store i32 %v2_4344, i32* %eax.global-to-local, align 4
  %v2_4354 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_4344, i32 ptrtoint (i8* @global_var_88.2212 to i32))
  store i32 %v2_4354, i32* %eax.global-to-local, align 4
  %v2_4364 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_4354, i32 172)
  %v0_436d = load i32, i32* @ebp, align 4
  %v1_436d = add i32 %v0_436d, -200
  store i32 %v1_436d, i32* %eax.global-to-local, align 4
  %v2_4376 = call i32 @_ZN7CScriptC1ERKS_(i32 %v1_436d, i32 %v2_4364)
  %v0_437b = load i32, i32* @ebp, align 4
  %v1_437b = add i32 %v0_437b, -316
  store i32 %v1_437b, i32* %eax.global-to-local, align 4
  %v1_4381 = add i32 %v0_437b, -200
  store i32 %v1_4381, i32* @edx, align 4
  %v3_4396 = call i32 @_ZSt9make_pairI10txnouttype7CScriptESt4pairIT_T0_ES3_S4_(i32 %v1_437b, i32 2, i32 %v1_4381)
  %v0_439e = load i32, i32* @ebp, align 4
  %v1_439e = add i32 %v0_439e, -316
  %v1_43a8 = add i32 %v0_439e, -300
  store i32 %v1_43a8, i32* %eax.global-to-local, align 4
  %v2_43b1 = inttoptr i32 %v1_43a8 to i32*
  %v3_43b1 = call i32 @_ZNSt4pairIK10txnouttype7CScriptEC1IS0_S2_EERKS_IT_T0_E(i32* %v2_43b1, i32 %v1_439e)
  %v0_43b6 = load i32, i32* @ebp, align 4
  %v1_43b6 = add i32 %v0_43b6, -120
  store i32 %v1_43b6, i32* %eax.global-to-local, align 4
  %v1_43b9 = add i32 %v0_43b6, -300
  %v3_43ce = call i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE6insertERKS6_(i32 %v1_43b6, i32 36592, i32 %v1_43b9)
  %v0_43d6 = load i32, i32* @ebp, align 4
  %v1_43d6 = add i32 %v0_43d6, -300
  store i32 %v1_43d6, i32* %eax.global-to-local, align 4
  %v1_43df = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_43d6)
  %v0_43e4 = load i32, i32* @ebp, align 4
  %v1_43e4 = add i32 %v0_43e4, -316
  store i32 %v1_43e4, i32* %eax.global-to-local, align 4
  %v1_43ed = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_43e4)
  %v0_43f2 = load i32, i32* @ebp, align 4
  %v1_43f2 = add i32 %v0_43f2, -200
  store i32 %v1_43f2, i32* %eax.global-to-local, align 4
  %v1_43fb = call i32 @_ZN7CScriptD1Ev(i32 %v1_43f2)
  %v0_4400 = load i32, i32* @ebp, align 4
  %v1_4400 = add i32 %v0_4400, -212
  store i32 %v1_4400, i32* %eax.global-to-local, align 4
  %v1_4409 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4400)
  %v0_440e = load i32, i32* @ebp, align 4
  %v1_440e = add i32 %v0_440e, -188
  store i32 %v1_440e, i32* %eax.global-to-local, align 4
  %v1_4417 = call i32 @_ZN7CScriptC1Ev(i32 %v1_440e)
  %v0_4424 = load i32, i32* @ebp, align 4
  %v1_4424 = add i32 %v0_4424, -188
  store i32 %v1_4424, i32* %eax.global-to-local, align 4
  %v2_442d = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v1_4424, i32 250)
  store i32 %v2_442d, i32* %eax.global-to-local, align 4
  %v2_443d = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_442d, i32 251)
  store i32 %v2_443d, i32* %eax.global-to-local, align 4
  %v2_444d = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_443d, i32 250)
  store i32 %v2_444d, i32* %eax.global-to-local, align 4
  %v2_445d = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v2_444d, i32 174)
  %v0_4466 = load i32, i32* @ebp, align 4
  %v1_4466 = add i32 %v0_4466, -176
  store i32 %v1_4466, i32* %eax.global-to-local, align 4
  %v2_446f = call i32 @_ZN7CScriptC1ERKS_(i32 %v1_4466, i32 %v2_445d)
  %v0_4474 = load i32, i32* @ebp, align 4
  %v1_4474 = add i32 %v0_4474, -284
  store i32 %v1_4474, i32* %eax.global-to-local, align 4
  %v1_447a = add i32 %v0_4474, -176
  store i32 %v1_447a, i32* @edx, align 4
  %v3_448f = call i32 @_ZSt9make_pairI10txnouttype7CScriptESt4pairIT_T0_ES3_S4_(i32 %v1_4474, i32 4, i32 %v1_447a)
  %v0_4497 = load i32, i32* @ebp, align 4
  %v1_4497 = add i32 %v0_4497, -284
  %v1_44a1 = add i32 %v0_4497, -268
  store i32 %v1_44a1, i32* %eax.global-to-local, align 4
  %v2_44aa = inttoptr i32 %v1_44a1 to i32*
  %v3_44aa = call i32 @_ZNSt4pairIK10txnouttype7CScriptEC1IS0_S2_EERKS_IT_T0_E(i32* %v2_44aa, i32 %v1_4497)
  %v0_44af = load i32, i32* @ebp, align 4
  %v1_44af = add i32 %v0_44af, -112
  store i32 %v1_44af, i32* %eax.global-to-local, align 4
  %v1_44b2 = add i32 %v0_44af, -268
  %v3_44c7 = call i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE6insertERKS6_(i32 %v1_44af, i32 36592, i32 %v1_44b2)
  %v0_44cf = load i32, i32* @ebp, align 4
  %v1_44cf = add i32 %v0_44cf, -268
  store i32 %v1_44cf, i32* %eax.global-to-local, align 4
  %v3_44d5 = inttoptr i32 %v1_44cf to %CScript*
  store %CScript* %v3_44d5, %CScript** %stack_var_-24, align 4
  %v2_44d8 = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_44cf)
  %v0_44dd = load i32, i32* @ebp, align 4
  %v1_44dd = add i32 %v0_44dd, -284
  store i32 %v1_44dd, i32* %eax.global-to-local, align 4
  %v3_44e3 = inttoptr i32 %v1_44dd to %CScript*
  store %CScript* %v3_44e3, %CScript** %stack_var_-24, align 4
  %v2_44e6 = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_44dd)
  %v0_44eb = load i32, i32* @ebp, align 4
  %v1_44eb = add i32 %v0_44eb, -176
  store i32 %v1_44eb, i32* %eax.global-to-local, align 4
  %v3_44f1 = inttoptr i32 %v1_44eb to %CScript*
  store %CScript* %v3_44f1, %CScript** %stack_var_-24, align 4
  %v2_44f4 = call i32 @_ZN7CScriptD1Ev(i32 %v1_44eb)
  %v0_44f9 = load i32, i32* @ebp, align 4
  %v1_44f9 = add i32 %v0_44f9, -188
  store i32 %v1_44f9, i32* %eax.global-to-local, align 4
  %v3_44ff = inttoptr i32 %v1_44f9 to %CScript*
  store %CScript* %v3_44ff, %CScript** %stack_var_-24, align 4
  %v2_4502 = call i32 @_ZN7CScriptD1Ev(i32 %v1_44f9)
  store i32 %v2_4502, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4507

dec_label_pc_4507:                                ; preds = %dec_label_pc_422c, %dec_label_pc_4218
  %v0_4507 = load i32, i32* @ebp, align 4
  %v1_4507 = add i32 %v0_4507, -364
  %v2_4507 = inttoptr i32 %v1_4507 to i32*
  %v3_4507 = load i32, i32* %v2_4507, align 4
  store i32 %v3_4507, i32* %eax.global-to-local, align 4
  %v3_450d = inttoptr i32 %v3_4507 to %CScript*
  store %CScript* %v3_450d, %CScript** %stack_var_-24, align 4
  call void @_ZNK7CScript17IsPayToScriptHashEv(%CScript* %v3_450d)
  store i32 ptrtoint (i32* @9 to i32), i32* %eax.global-to-local, align 4
  %v0_4608 = load i32, i32* @ebp, align 4
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @9 to i8), i8 ptrtoint (i32* @9 to i8)), i8 0), label %dec_label_pc_4608, label %dec_label_pc_451d

dec_label_pc_451d:                                ; preds = %dec_label_pc_4507
  %v1_451d = add i32 %v0_4608, -368
  %v2_451d = inttoptr i32 %v1_451d to i32*
  %v3_451d = load i32, i32* %v2_451d, align 4
  %v1_4523 = inttoptr i32 %v3_451d to i32*
  store i32 3, i32* %v1_4523, align 4
  %v0_4529 = load i32, i32* @ebp, align 4
  %v1_4529 = add i32 %v0_4529, -19
  store i32 %v1_4529, i32* %eax.global-to-local, align 4
  %v3_452c = inttoptr i32 %v1_4529 to %CScript*
  store %CScript* %v3_452c, %CScript** %stack_var_-24, align 4
  %v2_452f = call i32 @_ZNSaIhEC1Ev(i32 %v1_4529)
  store i32 %v2_452f, i32* %eax.global-to-local, align 4
  %v0_4534 = load i32, i32* @ebp, align 4
  %v1_4534 = add i32 %v0_4534, -88
  %v2_4534 = inttoptr i32 %v1_4534 to i32*
  store i32 ptrtoint (i8** @global_var_16.2213 to i32), i32* %v2_4534, align 4
  %v0_453b = load i32, i32* @ebp, align 4
  %v1_453b = add i32 %v0_453b, -364
  %v2_453b = inttoptr i32 %v1_453b to i32*
  %v3_453b = load i32, i32* %v2_453b, align 4
  %v1_4541 = add i32 %v0_453b, -92
  store i32 %v1_4541, i32* %eax.global-to-local, align 4
  %v3_4548 = inttoptr i32 %v1_4541 to %CScript*
  store %CScript* %v3_4548, %CScript** %stack_var_-24, align 4
  %v3_454b = inttoptr i32 %v3_453b to i32*
  %v4_454b = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v1_4541, i32* %v3_454b)
  %v0_4553 = load i32, i32* @ebp, align 4
  %v1_4553 = add i32 %v0_4553, -84
  store i32 %v1_4553, i32* %eax.global-to-local, align 4
  %v1_4556 = add i32 %v0_4553, -88
  %v1_455d = add i32 %v0_4553, -92
  %v4_4560 = inttoptr i32 %v1_455d to %CScript*
  store %CScript* %v4_4560, %CScript** %stack_var_-24, align 4
  store i32 %v1_4553, i32* %stack_var_-28, align 4
  %tmp66 = getelementptr inbounds %CScript, %CScript* %v4_4560, i32 0, i32 0
  %v5_4567 = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEplERKi(i32 %v1_4553, i32* %tmp66, i32 %v1_4556)
  store i32 %v5_4567, i32* %eax.global-to-local, align 4
  %v0_456f = load i32, i32* @ebp, align 4
  %v1_456f = add i32 %v0_456f, -100
  %v2_456f = inttoptr i32 %v1_456f to i32*
  store i32 2, i32* %v2_456f, align 4
  %v0_4576 = load i32, i32* @ebp, align 4
  %v1_4576 = add i32 %v0_4576, -364
  %v2_4576 = inttoptr i32 %v1_4576 to i32*
  %v3_4576 = load i32, i32* %v2_4576, align 4
  %v1_457c = add i32 %v0_4576, -104
  store i32 %v1_457c, i32* %eax.global-to-local, align 4
  store i32 %v3_4576, i32* %stack_var_-28, align 4
  store i32 %v1_457c, i32* %stack_var_-32, align 4
  %v2_4586 = inttoptr i32 %v3_4576 to i32*
  %v3_4586 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v1_457c, i32* %v2_4586)
  %v0_458e = load i32, i32* @ebp, align 4
  %v1_458e = add i32 %v0_458e, -96
  store i32 %v1_458e, i32* %eax.global-to-local, align 4
  %v1_4591 = add i32 %v0_458e, -100
  store i32 %v1_4591, i32* %stack_var_-28, align 4
  %v1_4598 = add i32 %v0_458e, -104
  store i32 %v1_4598, i32* %stack_var_-32, align 4
  store i32 %v1_458e, i32* %stack_var_-36, align 4
  %v3_45a2 = inttoptr i32 %v1_4598 to i32*
  %v4_45a2 = call i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEplERKi(i32 %v1_458e, i32* %v3_45a2, i32 %v1_4591)
  %v0_45aa = load i32, i32* @ebp, align 4
  %v1_45aa = add i32 %v0_45aa, -19
  store i32 %v1_45aa, i32* %eax.global-to-local, align 4
  store i32 %v1_45aa, i32* %stack_var_-28, align 4
  %v1_45b1 = add i32 %v0_45aa, -84
  %v2_45b1 = inttoptr i32 %v1_45b1 to i32*
  %v3_45b1 = load i32, i32* %v2_45b1, align 4
  store i32 %v3_45b1, i32* %eax.global-to-local, align 4
  store i32 %v3_45b1, i32* %stack_var_-32, align 4
  %v1_45b8 = add i32 %v0_45aa, -96
  %v2_45b8 = inttoptr i32 %v1_45b8 to i32*
  %v3_45b8 = load i32, i32* %v2_45b8, align 4
  store i32 %v3_45b8, i32* %stack_var_-36, align 4
  %v1_45bf = add i32 %v0_45aa, -164
  store i32 %v1_45bf, i32* %eax.global-to-local, align 4
  %v4_45c8 = call i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_(i32 %v1_45bf, i32 %v3_45b8, i32 %v3_45b1, i32 %v1_45aa)
  %v0_45cd = load i32, i32* @ebp, align 4
  %v1_45cd = add i32 %v0_45cd, -19
  store i32 %v1_45cd, i32* %eax.global-to-local, align 4
  %v1_45d3 = call i32 @_ZNSaIhED1Ev(i32 %v1_45cd)
  %v0_45d8 = load i32, i32* @ebp, align 4
  %v1_45d8 = add i32 %v0_45d8, -164
  store i32 %v1_45d8, i32* %eax.global-to-local, align 4
  store i32 %v1_45d8, i32* %stack_var_-36, align 4
  %v1_45e2 = add i32 %v0_45d8, -372
  %v2_45e2 = inttoptr i32 %v1_45e2 to i32*
  %v3_45e2 = load i32, i32* %v2_45e2, align 4
  store i32 %v3_45e2, i32* %eax.global-to-local, align 4
  %v2_45eb = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v3_45e2, i32 %v1_45d8)
  store i32 1, i32* @ebx, align 4
  %v0_45f5 = load i32, i32* @ebp, align 4
  %v1_45f5 = add i32 %v0_45f5, -164
  store i32 %v1_45f5, i32* %eax.global-to-local, align 4
  %v1_45fe = inttoptr i32 %v1_45f5 to i32*
  %v2_45fe = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_45fe)
  store i32 %v2_45fe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4c2c

dec_label_pc_4608:                                ; preds = %dec_label_pc_4507
  %v1_4608 = add i32 %v0_4608, -364
  %v2_4608 = inttoptr i32 %v1_4608 to i32*
  %v3_4608 = load i32, i32* %v2_4608, align 4
  %v2_460e = add i32 %v0_4608, -44
  %v3_460e = inttoptr i32 %v2_460e to i32*
  store i32 %v3_4608, i32* %v3_460e, align 4
  %v0_4611 = load i32, i32* @ebp, align 4
  %v1_4611 = add i32 %v0_4611, -80
  store i32 %v1_4611, i32* %eax.global-to-local, align 4
  %v3_4624 = inttoptr i32 %v1_4611 to %CScript*
  store %CScript* %v3_4624, %CScript** %stack_var_-24, align 4
  %v4_4627 = call i32 @_ZN5boost15foreach_detail_7containISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS0_8auto_anyIPT_EERSD_PN4mpl_5bool_ILb0EEE(i32 %v1_4611, i32 36592, i32 0)
  %v0_462f = load i32, i32* @ebp, align 4
  %v1_462f = add i32 %v0_462f, -80
  store i32 %v1_462f, i32* %eax.global-to-local, align 4
  %v2_4632 = add i32 %v0_462f, -40
  %v3_4632 = inttoptr i32 %v2_4632 to i32*
  store i32 %v1_462f, i32* %v3_4632, align 4
  %v0_4635 = load i32, i32* @ebp, align 4
  %v1_4635 = add i32 %v0_4635, -40
  %v2_4635 = inttoptr i32 %v1_4635 to i32*
  %v3_4635 = load i32, i32* %v2_4635, align 4
  store i32 %v3_4635, i32* %eax.global-to-local, align 4
  store i32 %v3_4635, i32* %stack_var_-28, align 4
  %v1_463b = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_4635)
  store i32 %v1_463b, i32* %eax.global-to-local, align 4
  %v4_4640 = trunc i32 %v1_463b to i8
  %v5_4640 = icmp eq i8 %v4_4640, 0
  %v1_4642 = icmp eq i1 %v5_4640, false
  br i1 %v1_4642, label %dec_label_pc_4c0d, label %dec_label_pc_4648

dec_label_pc_4648:                                ; preds = %dec_label_pc_4608
  %v0_4648 = load i32, i32* @ebp, align 4
  %v1_4648 = add i32 %v0_4648, -76
  store i32 %v1_4648, i32* %eax.global-to-local, align 4
  %v1_465b = add i32 %v0_4648, -40
  %v2_465b = inttoptr i32 %v1_465b to i32*
  %v3_465b = load i32, i32* %v2_465b, align 4
  %v4_465e = inttoptr i32 %v3_465b to %CScript*
  store %CScript* %v4_465e, %CScript** %stack_var_-24, align 4
  store i32 %v1_4648, i32* %stack_var_-28, align 4
  %v5_4665 = call i32 @_ZN5boost15foreach_detail_5beginISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISH_SI_EEPSE_(i32 %v1_4648, i32 %v3_465b, i32 0, i32 0)
  %v0_466d = load i32, i32* @ebp, align 4
  %v1_466d = add i32 %v0_466d, -76
  store i32 %v1_466d, i32* %eax.global-to-local, align 4
  %v2_4670 = add i32 %v0_466d, -36
  %v3_4670 = inttoptr i32 %v2_4670 to i32*
  store i32 %v1_466d, i32* %v3_4670, align 4
  %v0_4673 = load i32, i32* @ebp, align 4
  %v1_4673 = add i32 %v0_4673, -36
  %v2_4673 = inttoptr i32 %v1_4673 to i32*
  %v3_4673 = load i32, i32* %v2_4673, align 4
  store i32 %v3_4673, i32* %eax.global-to-local, align 4
  store i32 %v3_4673, i32* %stack_var_-32, align 4
  %v1_4679 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_4673)
  store i32 %v1_4679, i32* %eax.global-to-local, align 4
  %v4_467e = trunc i32 %v1_4679 to i8
  %v5_467e = icmp eq i8 %v4_467e, 0
  %v1_4680 = icmp eq i1 %v5_467e, false
  br i1 %v1_4680, label %dec_label_pc_4c0d, label %dec_label_pc_4686

dec_label_pc_4686:                                ; preds = %dec_label_pc_4648
  %v0_4686 = load i32, i32* @ebp, align 4
  %v1_4686 = add i32 %v0_4686, -72
  store i32 %v1_4686, i32* %eax.global-to-local, align 4
  store %CScript* null, %CScript** %stack_var_-24, align 4
  %v1_4699 = add i32 %v0_4686, -40
  %v2_4699 = inttoptr i32 %v1_4699 to i32*
  %v3_4699 = load i32, i32* %v2_4699, align 4
  store i32 %v3_4699, i32* %stack_var_-28, align 4
  store i32 %v1_4686, i32* %stack_var_-32, align 4
  %v5_46a3 = call i32 @_ZN5boost15foreach_detail_3endISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISH_SI_EEPSE_(i32 %v1_4686, i32 %v3_4699, i32 0, i32 0)
  %v0_46ab = load i32, i32* @ebp, align 4
  %v1_46ab = add i32 %v0_46ab, -72
  store i32 %v1_46ab, i32* %eax.global-to-local, align 4
  %v2_46ae = add i32 %v0_46ab, -32
  %v3_46ae = inttoptr i32 %v2_46ae to i32*
  store i32 %v1_46ab, i32* %v3_46ae, align 4
  %v0_46b1 = load i32, i32* @ebp, align 4
  %v1_46b1 = add i32 %v0_46b1, -32
  %v2_46b1 = inttoptr i32 %v1_46b1 to i32*
  %v3_46b1 = load i32, i32* %v2_46b1, align 4
  store i32 %v3_46b1, i32* %eax.global-to-local, align 4
  store i32 %v3_46b1, i32* %stack_var_-36, align 4
  %v1_46b7 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_46b1)
  store i32 %v1_46b7, i32* %eax.global-to-local, align 4
  %v4_46bc = trunc i32 %v1_46b7 to i8
  %v5_46bc = icmp eq i8 %v4_46bc, 0
  %v1_46be = icmp eq i1 %v5_46bc, false
  br i1 %v1_46be, label %dec_label_pc_4c0d, label %dec_label_pc_46c4

dec_label_pc_46c4:                                ; preds = %dec_label_pc_4686
  %v0_46c4 = load i32, i32* @ebp, align 4
  %v1_46c4 = add i32 %v0_46c4, -18
  %v2_46c4 = inttoptr i32 %v1_46c4 to i8*
  store i8 1, i8* %v2_46c4, align 1
  br label %dec_label_pc_4bd0

dec_label_pc_46cd:                                ; preds = %dec_label_pc_4c05
  %v0_46cd = load i32, i32* @ebp, align 4
  %v1_46cd = add i32 %v0_46cd, -18
  store i32 %v1_46cd, i32* %eax.global-to-local, align 4
  %v1_46d0 = load i32, i32* @esp, align 4
  %v2_46d0 = inttoptr i32 %v1_46d0 to i32*
  store i32 %v1_46cd, i32* %v2_46d0, align 4
  %v0_46d3 = load i32, i32* %stack_var_-36, align 4
  %v1_46d3 = inttoptr i32 %v0_46d3 to i8*
  %v2_46d3 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_46d3)
  store i32 %v2_46d3, i32* %eax.global-to-local, align 4
  %v4_46d8 = trunc i32 %v2_46d3 to i8
  %v5_46d8 = icmp eq i8 %v4_46d8, 0
  %v1_46da = icmp eq i1 %v5_46d8, false
  br i1 %v1_46da, label %dec_label_pc_4bb5, label %dec_label_pc_46e0

dec_label_pc_46e0:                                ; preds = %dec_label_pc_46cd
  %v0_46e0 = load i32, i32* @esp, align 4
  %v1_46e0 = add i32 %v0_46e0, 4
  %v2_46e0 = inttoptr i32 %v1_46e0 to i32*
  store i32 0, i32* %v2_46e0, align 4
  %v0_46e8 = load i32, i32* @ebp, align 4
  %v1_46e8 = add i32 %v0_46e8, -36
  %v2_46e8 = inttoptr i32 %v1_46e8 to i32*
  %v3_46e8 = load i32, i32* %v2_46e8, align 4
  store i32 %v3_46e8, i32* %eax.global-to-local, align 4
  %v1_46eb = load i32, i32* @esp, align 4
  %v2_46eb = inttoptr i32 %v1_46eb to i32*
  store i32 %v3_46e8, i32* %v2_46eb, align 4
  %v0_46ee = call i32 @_ZN5boost15foreach_detail_5derefISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISG_SH_EE()
  %v1_46f3 = load i32, i32* @esp, align 4
  %v2_46f3 = add i32 %v1_46f3, 4
  %v3_46f3 = inttoptr i32 %v2_46f3 to i32*
  store i32 %v0_46ee, i32* %v3_46f3, align 4
  %v0_46f7 = load i32, i32* @ebp, align 4
  %v1_46f7 = add i32 %v0_46f7, -252
  store i32 %v1_46f7, i32* %eax.global-to-local, align 4
  %v1_46fd = load i32, i32* @esp, align 4
  %v2_46fd = inttoptr i32 %v1_46fd to i32*
  store i32 %v1_46f7, i32* %v2_46fd, align 4
  %v0_4700 = call i32 @_ZNSt4pairI10txnouttype7CScriptEC1IKS0_S1_EERKS_IT_T0_E()
  %v0_4705 = load i32, i32* @ebp, align 4
  %v1_4705 = add i32 %v0_4705, -252
  store i32 %v1_4705, i32* %eax.global-to-local, align 4
  %v2_470b = add i32 %v0_4705, -28
  %v3_470b = inttoptr i32 %v2_470b to i32*
  store i32 %v1_4705, i32* %v3_470b, align 4
  br label %dec_label_pc_4b8e

dec_label_pc_4713:                                ; preds = %dec_label_pc_4b8e
  %v1_4713 = add i32 %v0_4b8e, -28
  %v2_4713 = inttoptr i32 %v1_4713 to i32*
  %v3_4713 = load i32, i32* %v2_4713, align 4
  %v1_4716 = add i32 %v3_4713, 4
  store i32 %v1_4716, i32* %eax.global-to-local, align 4
  %v2_4719 = add i32 %v0_4b8e, -24
  %v3_4719 = inttoptr i32 %v2_4719 to i32*
  store i32 %v1_4716, i32* %v3_4719, align 4
  %v0_471c = load i32, i32* @ebp, align 4
  %v1_471c = add i32 %v0_471c, -372
  %v2_471c = inttoptr i32 %v1_471c to i32*
  %v3_471c = load i32, i32* %v2_471c, align 4
  store i32 %v3_471c, i32* %eax.global-to-local, align 4
  %v1_4722 = load i32, i32* @esp, align 4
  %v2_4722 = inttoptr i32 %v1_4722 to i32*
  store i32 %v3_471c, i32* %v2_4722, align 4
  %v0_4725 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5clearEv()
  %v0_472a = load i32, i32* @ebp, align 4
  %v1_472a = add i32 %v0_472a, -164
  store i32 %v1_472a, i32* %eax.global-to-local, align 4
  %v1_4730 = load i32, i32* @esp, align 4
  %v2_4730 = inttoptr i32 %v1_4730 to i32*
  store i32 %v1_472a, i32* %v2_4730, align 4
  %v0_4733 = load i32, i32* %stack_var_-36, align 4
  %v1_4733 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v0_4733)
  %v0_4738 = load i32, i32* @ebp, align 4
  %v1_4738 = add i32 %v0_4738, -152
  store i32 %v1_4738, i32* %eax.global-to-local, align 4
  %v1_473e = load i32, i32* @esp, align 4
  %v2_473e = inttoptr i32 %v1_473e to i32*
  store i32 %v1_4738, i32* %v2_473e, align 4
  %v0_4741 = load i32, i32* %stack_var_-36, align 4
  %v1_4741 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v0_4741)
  store i32 %v1_4741, i32* %eax.global-to-local, align 4
  %v0_4746 = load i32, i32* @ebp, align 4
  %v1_4746 = add i32 %v0_4746, -44
  %v2_4746 = inttoptr i32 %v1_4746 to i32*
  %v3_4746 = load i32, i32* %v2_4746, align 4
  %v1_4749 = add i32 %v0_4746, -60
  store i32 %v1_4749, i32* %eax.global-to-local, align 4
  %v1_474c = load i32, i32* @esp, align 4
  %v2_474c = add i32 %v1_474c, 4
  %v3_474c = inttoptr i32 %v2_474c to i32*
  store i32 %v3_4746, i32* %v3_474c, align 4
  %v0_4750 = load i32, i32* %eax.global-to-local, align 4
  %v1_4750 = load i32, i32* @esp, align 4
  %v2_4750 = inttoptr i32 %v1_4750 to i32*
  store i32 %v0_4750, i32* %v2_4750, align 4
  %v0_4753 = load i32, i32* %stack_var_-36, align 4
  %v1_4753 = load i32, i32* %stack_var_-32, align 4
  %v2_4753 = inttoptr i32 %v1_4753 to i32*
  %v3_4753 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v0_4753, i32* %v2_4753)
  store i32 %v3_4753, i32* %eax.global-to-local, align 4
  %v0_4758 = load i32, i32* @esp, align 4
  %v0_475b = load i32, i32* @ebp, align 4
  %v1_475b = add i32 %v0_475b, -24
  %v2_475b = inttoptr i32 %v1_475b to i32*
  %v3_475b = load i32, i32* %v2_475b, align 4
  %v1_475e = add i32 %v0_475b, -56
  store i32 %v1_475e, i32* %eax.global-to-local, align 4
  %v3_4761 = inttoptr i32 %v0_4758 to i32*
  store i32 %v3_475b, i32* %v3_4761, align 4
  %v0_4765 = load i32, i32* %eax.global-to-local, align 4
  %v1_4765 = load i32, i32* @esp, align 4
  %v2_4765 = inttoptr i32 %v1_4765 to i32*
  store i32 %v0_4765, i32* %v2_4765, align 4
  %v0_4768 = load i32, i32* %stack_var_-36, align 4
  %v1_4768 = load i32, i32* %stack_var_-32, align 4
  %v2_4768 = inttoptr i32 %v1_4768 to i32*
  %v3_4768 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v0_4768, i32* %v2_4768)
  store i32 %v3_4768, i32* %eax.global-to-local, align 4
  %v0_476d = load i32, i32* @esp, align 4
  %v1_476d = add i32 %v0_476d, -4
  br label %dec_label_pc_4773

dec_label_pc_4773:                                ; preds = %dec_label_pc_4773.backedge, %dec_label_pc_4713
  %v1_4779 = phi i32 [ %v1_4779.pre, %dec_label_pc_4773.backedge ], [ %v1_476d, %dec_label_pc_4713 ]
  %v0_4773 = load i32, i32* @ebp, align 4
  %v1_4773 = add i32 %v0_4773, -44
  %v2_4773 = inttoptr i32 %v1_4773 to i32*
  %v3_4773 = load i32, i32* %v2_4773, align 4
  %v1_4776 = add i32 %v0_4773, -52
  store i32 %v1_4776, i32* %eax.global-to-local, align 4
  %v2_4779 = add i32 %v1_4779, 4
  %v3_4779 = inttoptr i32 %v2_4779 to i32*
  store i32 %v3_4773, i32* %v3_4779, align 4
  %v0_477d = load i32, i32* %eax.global-to-local, align 4
  %v1_477d = load i32, i32* @esp, align 4
  %v2_477d = inttoptr i32 %v1_477d to i32*
  store i32 %v0_477d, i32* %v2_477d, align 4
  %v0_4780 = load i32, i32* %stack_var_-36, align 4
  %v1_4780 = load i32, i32* %stack_var_-32, align 4
  %v2_4780 = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %v0_4780, i32 %v1_4780)
  %v0_4785 = load i32, i32* @esp, align 4
  %v0_4788 = load i32, i32* @ebp, align 4
  %v1_4788 = add i32 %v0_4788, -52
  %v3_478b = inttoptr i32 %v0_4785 to i32*
  store i32 %v1_4788, i32* %v3_478b, align 4
  %v0_478f = load i32, i32* @ebp, align 4
  %v1_478f = add i32 %v0_478f, -60
  store i32 %v1_478f, i32* %eax.global-to-local, align 4
  %v1_4792 = load i32, i32* @esp, align 4
  %v2_4792 = inttoptr i32 %v1_4792 to i32*
  store i32 %v1_478f, i32* %v2_4792, align 4
  %v0_4795 = call i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_()
  store i32 %v0_4795, i32* %eax.global-to-local, align 4
  %v4_479a = trunc i32 %v0_4795 to i8
  %v5_479a = icmp eq i8 %v4_479a, 0
  br i1 %v5_479a, label %dec_label_pc_47d0, label %dec_label_pc_479e

dec_label_pc_479e:                                ; preds = %dec_label_pc_4773
  %v0_479e = load i32, i32* @ebp, align 4
  %v1_479e = add i32 %v0_479e, -24
  %v2_479e = inttoptr i32 %v1_479e to i32*
  %v3_479e = load i32, i32* %v2_479e, align 4
  %v1_47a1 = add i32 %v0_479e, -48
  store i32 %v1_47a1, i32* %eax.global-to-local, align 4
  %v1_47a4 = load i32, i32* @esp, align 4
  %v2_47a4 = add i32 %v1_47a4, 4
  %v3_47a4 = inttoptr i32 %v2_47a4 to i32*
  store i32 %v3_479e, i32* %v3_47a4, align 4
  %v0_47a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_47a8 = load i32, i32* @esp, align 4
  %v2_47a8 = inttoptr i32 %v1_47a8 to i32*
  store i32 %v0_47a8, i32* %v2_47a8, align 4
  %v0_47ab = load i32, i32* %stack_var_-36, align 4
  %v1_47ab = load i32, i32* %stack_var_-32, align 4
  %v2_47ab = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %v0_47ab, i32 %v1_47ab)
  %v0_47b0 = load i32, i32* @esp, align 4
  %v0_47b3 = load i32, i32* @ebp, align 4
  %v1_47b3 = add i32 %v0_47b3, -48
  %v3_47b6 = inttoptr i32 %v0_47b0 to i32*
  store i32 %v1_47b3, i32* %v3_47b6, align 4
  %v0_47ba = load i32, i32* @ebp, align 4
  %v1_47ba = add i32 %v0_47ba, -56
  store i32 %v1_47ba, i32* %eax.global-to-local, align 4
  %v1_47bd = load i32, i32* @esp, align 4
  %v2_47bd = inttoptr i32 %v1_47bd to i32*
  store i32 %v1_47ba, i32* %v2_47bd, align 4
  %v0_47c0 = call i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_()
  store i32 %v0_47c0, i32* %eax.global-to-local, align 4
  %v4_47c5 = trunc i32 %v0_47c0 to i8
  %v5_47c5 = icmp eq i8 %v4_47c5, 0
  br i1 %v5_47c5, label %dec_label_pc_47d0, label %dec_label_pc_47d5

dec_label_pc_47d0:                                ; preds = %dec_label_pc_479e, %dec_label_pc_4773
  br label %dec_label_pc_47d5

dec_label_pc_47d5:                                ; preds = %dec_label_pc_479e, %dec_label_pc_47d0
  %storemerge27 = phi i32 [ 0, %dec_label_pc_47d0 ], [ 1, %dec_label_pc_479e ]
  store i32 %storemerge27, i32* %eax.global-to-local, align 4
  %v5_47d5 = icmp eq i32 %storemerge27, 0
  %v0_489f = load i32, i32* @ebp, align 4
  br i1 %v5_47d5, label %dec_label_pc_489f, label %dec_label_pc_47dd

dec_label_pc_47dd:                                ; preds = %dec_label_pc_47d5
  %v1_47dd = add i32 %v0_489f, -28
  %v2_47dd = inttoptr i32 %v1_47dd to i32*
  %v3_47dd = load i32, i32* %v2_47dd, align 4
  store i32 %v3_47dd, i32* %eax.global-to-local, align 4
  %v1_47e0 = inttoptr i32 %v3_47dd to i32*
  %v2_47e0 = load i32, i32* %v1_47e0, align 4
  %v1_47e2 = add i32 %v0_489f, -368
  %v2_47e2 = inttoptr i32 %v1_47e2 to i32*
  %v3_47e2 = load i32, i32* %v2_47e2, align 4
  store i32 %v3_47e2, i32* %eax.global-to-local, align 4
  %v2_47e8 = inttoptr i32 %v3_47e2 to i32*
  store i32 %v2_47e0, i32* %v2_47e8, align 4
  %v0_47ea = load i32, i32* @ebp, align 4
  %v1_47ea = add i32 %v0_47ea, -368
  %v2_47ea = inttoptr i32 %v1_47ea to i32*
  %v3_47ea = load i32, i32* %v2_47ea, align 4
  store i32 %v3_47ea, i32* %eax.global-to-local, align 4
  %v1_47f0 = inttoptr i32 %v3_47ea to i32*
  %v2_47f0 = load i32, i32* %v1_47f0, align 4
  store i32 %v2_47f0, i32* %eax.global-to-local, align 4
  %v10_47f2 = icmp eq i32 %v2_47f0, 4
  %v1_47f5 = icmp eq i1 %v10_47f2, false
  br i1 %v1_47f5, label %dec_label_pc_4890, label %dec_label_pc_47fb

dec_label_pc_47fb:                                ; preds = %dec_label_pc_47dd
  %v1_47fb = add i32 %v0_47ea, -372
  %v2_47fb = inttoptr i32 %v1_47fb to i32*
  %v3_47fb = load i32, i32* %v2_47fb, align 4
  store i32 %v3_47fb, i32* %eax.global-to-local, align 4
  %v1_4801 = load i32, i32* @esp, align 4
  %v2_4801 = inttoptr i32 %v1_4801 to i32*
  store i32 %v3_47fb, i32* %v2_4801, align 4
  %v0_4804 = load i32, i32* %stack_var_-36, align 4
  %v1_4804 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5frontEv(i32 %v0_4804)
  store i32 %v1_4804, i32* %eax.global-to-local, align 4
  %v0_4809 = load i32, i32* @esp, align 4
  %v1_4809 = add i32 %v0_4809, 4
  %v2_4809 = inttoptr i32 %v1_4809 to i32*
  store i32 0, i32* %v2_4809, align 4
  %v0_4811 = load i32, i32* %eax.global-to-local, align 4
  %v1_4811 = load i32, i32* @esp, align 4
  %v2_4811 = inttoptr i32 %v1_4811 to i32*
  store i32 %v0_4811, i32* %v2_4811, align 4
  %v0_4814 = load i32, i32* %stack_var_-36, align 4
  %v1_4814 = load i32, i32* %stack_var_-32, align 4
  %v2_4814 = inttoptr i32 %v0_4814 to i32*
  %v3_4814 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_4814, i32 %v1_4814)
  store i32 %v3_4814, i32* %eax.global-to-local, align 4
  %v1_4819 = inttoptr i32 %v3_4814 to i8*
  %v2_4819 = load i8, i8* %v1_4819, align 1
  %v3_4819 = zext i8 %v2_4819 to i32
  store i32 %v3_4819, i32* %eax.global-to-local, align 4
  %v2_481c = load i32, i32* @ebp, align 4
  %v3_481c = add i32 %v2_481c, -15
  %v4_481c = inttoptr i32 %v3_481c to i8*
  store i8 %v2_4819, i8* %v4_481c, align 1
  %v0_481f = load i32, i32* @ebp, align 4
  %v1_481f = add i32 %v0_481f, -372
  %v2_481f = inttoptr i32 %v1_481f to i32*
  %v3_481f = load i32, i32* %v2_481f, align 4
  store i32 %v3_481f, i32* %eax.global-to-local, align 4
  %v1_4825 = load i32, i32* @esp, align 4
  %v2_4825 = inttoptr i32 %v1_4825 to i32*
  store i32 %v3_481f, i32* %v2_4825, align 4
  %v0_4828 = load i32, i32* %stack_var_-36, align 4
  %v1_4828 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %v0_4828)
  store i32 %v1_4828, i32* %eax.global-to-local, align 4
  %v0_482d = load i32, i32* @esp, align 4
  %v1_482d = add i32 %v0_482d, 4
  %v2_482d = inttoptr i32 %v1_482d to i32*
  store i32 0, i32* %v2_482d, align 4
  %v0_4835 = load i32, i32* %eax.global-to-local, align 4
  %v1_4835 = load i32, i32* @esp, align 4
  %v2_4835 = inttoptr i32 %v1_4835 to i32*
  store i32 %v0_4835, i32* %v2_4835, align 4
  %v0_4838 = load i32, i32* %stack_var_-36, align 4
  %v1_4838 = load i32, i32* %stack_var_-32, align 4
  %v2_4838 = inttoptr i32 %v0_4838 to i32*
  %v3_4838 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_4838, i32 %v1_4838)
  store i32 %v3_4838, i32* %eax.global-to-local, align 4
  %v1_483d = inttoptr i32 %v3_4838 to i8*
  %v2_483d = load i8, i8* %v1_483d, align 1
  %v3_483d = zext i8 %v2_483d to i32
  store i32 %v3_483d, i32* %eax.global-to-local, align 4
  %v2_4840 = load i32, i32* @ebp, align 4
  %v3_4840 = add i32 %v2_4840, -14
  %v4_4840 = inttoptr i32 %v3_4840 to i8*
  store i8 %v2_483d, i8* %v4_4840, align 1
  %v0_4843 = load i32, i32* @ebp, align 4
  %v1_4843 = add i32 %v0_4843, -15
  %v2_4843 = inttoptr i32 %v1_4843 to i8*
  %v3_4843 = load i8, i8* %v2_4843, align 1
  %v10_4843 = icmp eq i8 %v3_4843, 0
  br i1 %v10_4843, label %dec_label_pc_487d, label %dec_label_pc_4849

dec_label_pc_4849:                                ; preds = %dec_label_pc_47fb
  %v1_4849 = add i32 %v0_4843, -14
  %v2_4849 = inttoptr i32 %v1_4849 to i8*
  %v3_4849 = load i8, i8* %v2_4849, align 1
  %v10_4849 = icmp eq i8 %v3_4849, 0
  br i1 %v10_4849, label %dec_label_pc_487d, label %dec_label_pc_484f

dec_label_pc_484f:                                ; preds = %dec_label_pc_4849
  %v3_484f = load i8, i8* %v2_4843, align 1
  %v4_484f = zext i8 %v3_484f to i32
  store i32 %v4_484f, i32* %eax.global-to-local, align 4
  %v5_4853 = load i8, i8* %v2_4849, align 1
  %tmp98 = icmp ugt i8 %v3_484f, %v5_4853
  br i1 %tmp98, label %dec_label_pc_487d, label %dec_label_pc_4858

dec_label_pc_4858:                                ; preds = %dec_label_pc_484f
  %v1_4858 = add i32 %v0_4843, -372
  %v2_4858 = inttoptr i32 %v1_4858 to i32*
  %v3_4858 = load i32, i32* %v2_4858, align 4
  store i32 %v3_4858, i32* %eax.global-to-local, align 4
  %v1_485e = load i32, i32* @esp, align 4
  %v2_485e = inttoptr i32 %v1_485e to i32*
  store i32 %v3_4858, i32* %v2_485e, align 4
  %v0_4861 = load i32, i32* %stack_var_-36, align 4
  %v1_4861 = inttoptr i32 %v0_4861 to i32*
  %v2_4861 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_4861)
  store i32 %v2_4861, i32* %eax.global-to-local, align 4
  %v1_4866 = add i32 %v2_4861, -2
  %v0_4869 = load i32, i32* @ebp, align 4
  %v1_4869 = add i32 %v0_4869, -14
  %v2_4869 = inttoptr i32 %v1_4869 to i8*
  %v3_4869 = load i8, i8* %v2_4869, align 1
  %v4_4869 = zext i8 %v3_4869 to i32
  store i32 %v4_4869, i32* %eax.global-to-local, align 4
  %v12_486d = icmp ne i32 %v1_4866, %v4_4869
  %.29 = zext i1 %v12_486d to i32
  br label %dec_label_pc_487d

dec_label_pc_487d:                                ; preds = %dec_label_pc_484f, %dec_label_pc_4858, %dec_label_pc_47fb, %dec_label_pc_4849
  %v0_4b5139 = phi i32 [ %v0_4843, %dec_label_pc_484f ], [ %v0_4843, %dec_label_pc_4849 ], [ %v0_4843, %dec_label_pc_47fb ], [ %v0_4869, %dec_label_pc_4858 ]
  %storemerge15 = phi i32 [ 1, %dec_label_pc_484f ], [ 1, %dec_label_pc_4849 ], [ 1, %dec_label_pc_47fb ], [ %.29, %dec_label_pc_4858 ]
  store i32 %storemerge15, i32* %eax.global-to-local, align 4
  %v5_487d = icmp eq i32 %storemerge15, 0
  br i1 %v5_487d, label %dec_label_pc_4890, label %dec_label_pc_4881

dec_label_pc_4881:                                ; preds = %dec_label_pc_487d
  store i32 0, i32* @ebx, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_4b51

dec_label_pc_4890:                                ; preds = %dec_label_pc_487d, %dec_label_pc_47dd
  %v0_4b5138 = phi i32 [ %v0_4b5139, %dec_label_pc_487d ], [ %v0_47ea, %dec_label_pc_47dd ]
  store i32 1, i32* @ebx, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_4b51

dec_label_pc_489f:                                ; preds = %dec_label_pc_47d5
  %v1_489f = add i32 %v0_489f, -164
  %v1_48a5 = load i32, i32* @esp, align 4
  %v2_48a5 = add i32 %v1_48a5, 12
  %v3_48a5 = inttoptr i32 %v2_48a5 to i32*
  store i32 %v1_489f, i32* %v3_48a5, align 4
  %v0_48a9 = load i32, i32* @ebp, align 4
  %v1_48a9 = add i32 %v0_48a9, -68
  %v1_48ac = load i32, i32* @esp, align 4
  %v2_48ac = add i32 %v1_48ac, 8
  %v3_48ac = inttoptr i32 %v2_48ac to i32*
  store i32 %v1_48a9, i32* %v3_48ac, align 4
  %v0_48b0 = load i32, i32* @ebp, align 4
  %v1_48b0 = add i32 %v0_48b0, -60
  store i32 %v1_48b0, i32* %eax.global-to-local, align 4
  %v1_48b3 = load i32, i32* @esp, align 4
  %v2_48b3 = add i32 %v1_48b3, 4
  %v3_48b3 = inttoptr i32 %v2_48b3 to i32*
  store i32 %v1_48b0, i32* %v3_48b3, align 4
  %v0_48b7 = load i32, i32* @ebp, align 4
  %v1_48b7 = add i32 %v0_48b7, -44
  %v2_48b7 = inttoptr i32 %v1_48b7 to i32*
  %v3_48b7 = load i32, i32* %v2_48b7, align 4
  store i32 %v3_48b7, i32* %eax.global-to-local, align 4
  %v1_48ba = load i32, i32* @esp, align 4
  %v2_48ba = inttoptr i32 %v1_48ba to i32*
  store i32 %v3_48b7, i32* %v2_48ba, align 4
  %v0_48bd = load i32, i32* %stack_var_-36, align 4
  %v1_48bd = load i32, i32* %stack_var_-32, align 4
  %v2_48bd = load i32, i32* %stack_var_-28, align 4
  %v3_48bd = load %CScript*, %CScript** %stack_var_-24, align 4
  %v4_48bd = ptrtoint %CScript* %v3_48bd to i32
  %v5_48bd = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %v0_48bd, i32 %v1_48bd, i32 %v2_48bd, i32 %v4_48bd)
  %v1_48c2 = xor i32 %v5_48bd, 1
  %v4_48c2 = trunc i32 %v1_48c2 to i8
  store i32 %v1_48c2, i32* %eax.global-to-local, align 4
  %v5_48c5 = icmp eq i8 %v4_48c2, 0
  %v1_48c7 = icmp eq i1 %v5_48c5, false
  br i1 %v1_48c7, label %dec_label_pc_4b4c, label %dec_label_pc_48cd

dec_label_pc_48cd:                                ; preds = %dec_label_pc_489f
  %v0_48cd = load i32, i32* @ebp, align 4
  %v1_48cd = add i32 %v0_48cd, -152
  %v1_48d3 = load i32, i32* @esp, align 4
  %v2_48d3 = add i32 %v1_48d3, 12
  %v3_48d3 = inttoptr i32 %v2_48d3 to i32*
  store i32 %v1_48cd, i32* %v3_48d3, align 4
  %v0_48d7 = load i32, i32* @ebp, align 4
  %v1_48d7 = add i32 %v0_48d7, -64
  %v1_48da = load i32, i32* @esp, align 4
  %v2_48da = add i32 %v1_48da, 8
  %v3_48da = inttoptr i32 %v2_48da to i32*
  store i32 %v1_48d7, i32* %v3_48da, align 4
  %v0_48de = load i32, i32* @ebp, align 4
  %v1_48de = add i32 %v0_48de, -56
  store i32 %v1_48de, i32* %eax.global-to-local, align 4
  %v1_48e1 = load i32, i32* @esp, align 4
  %v2_48e1 = add i32 %v1_48e1, 4
  %v3_48e1 = inttoptr i32 %v2_48e1 to i32*
  store i32 %v1_48de, i32* %v3_48e1, align 4
  %v0_48e5 = load i32, i32* @ebp, align 4
  %v1_48e5 = add i32 %v0_48e5, -24
  %v2_48e5 = inttoptr i32 %v1_48e5 to i32*
  %v3_48e5 = load i32, i32* %v2_48e5, align 4
  store i32 %v3_48e5, i32* %eax.global-to-local, align 4
  %v1_48e8 = load i32, i32* @esp, align 4
  %v2_48e8 = inttoptr i32 %v1_48e8 to i32*
  store i32 %v3_48e5, i32* %v2_48e8, align 4
  %v0_48eb = load i32, i32* %stack_var_-36, align 4
  %v1_48eb = load i32, i32* %stack_var_-32, align 4
  %v2_48eb = load i32, i32* %stack_var_-28, align 4
  %v3_48eb = load %CScript*, %CScript** %stack_var_-24, align 4
  %v4_48eb = ptrtoint %CScript* %v3_48eb to i32
  %v5_48eb = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %v0_48eb, i32 %v1_48eb, i32 %v2_48eb, i32 %v4_48eb)
  %v1_48f0 = xor i32 %v5_48eb, 1
  %v4_48f0 = trunc i32 %v1_48f0 to i8
  store i32 %v1_48f0, i32* %eax.global-to-local, align 4
  %v5_48f3 = icmp eq i8 %v4_48f0, 0
  %v1_48f5 = icmp eq i1 %v5_48f3, false
  br i1 %v1_48f5, label %dec_label_pc_4b4c, label %dec_label_pc_48fb

dec_label_pc_48fb:                                ; preds = %dec_label_pc_48cd
  %v0_48fb = load i32, i32* @ebp, align 4
  %v1_48fb = add i32 %v0_48fb, -64
  %v2_48fb = inttoptr i32 %v1_48fb to i32*
  %v3_48fb = load i32, i32* %v2_48fb, align 4
  store i32 %v3_48fb, i32* %eax.global-to-local, align 4
  %v10_48fe = icmp eq i32 %v3_48fb, 251
  %v1_4903 = icmp eq i1 %v10_48fe, false
  br i1 %v1_4903, label %dec_label_pc_49b4, label %dec_label_pc_494d

dec_label_pc_490b:                                ; preds = %dec_label_pc_497f
  %v0_490b = load i32, i32* @ebp, align 4
  %v1_490b = add i32 %v0_490b, -164
  store i32 %v1_490b, i32* %eax.global-to-local, align 4
  %v1_4911 = load i32, i32* @esp, align 4
  %v2_4911 = add i32 %v1_4911, 4
  %v3_4911 = inttoptr i32 %v2_4911 to i32*
  store i32 %v1_490b, i32* %v3_4911, align 4
  %v0_4915 = load i32, i32* @ebp, align 4
  %v1_4915 = add i32 %v0_4915, -372
  %v2_4915 = inttoptr i32 %v1_4915 to i32*
  %v3_4915 = load i32, i32* %v2_4915, align 4
  store i32 %v3_4915, i32* %eax.global-to-local, align 4
  %v1_491b = load i32, i32* @esp, align 4
  %v2_491b = inttoptr i32 %v1_491b to i32*
  store i32 %v3_4915, i32* %v2_491b, align 4
  %v0_491e = load i32, i32* %stack_var_-36, align 4
  %v1_491e = load i32, i32* %stack_var_-32, align 4
  %v2_491e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_491e, i32 %v1_491e)
  %v0_4923 = load i32, i32* @ebp, align 4
  %v1_4923 = add i32 %v0_4923, -164
  %v1_4929 = load i32, i32* @esp, align 4
  %v2_4929 = add i32 %v1_4929, 12
  %v3_4929 = inttoptr i32 %v2_4929 to i32*
  store i32 %v1_4923, i32* %v3_4929, align 4
  %v0_492d = load i32, i32* @ebp, align 4
  %v1_492d = add i32 %v0_492d, -68
  %v1_4930 = load i32, i32* @esp, align 4
  %v2_4930 = add i32 %v1_4930, 8
  %v3_4930 = inttoptr i32 %v2_4930 to i32*
  store i32 %v1_492d, i32* %v3_4930, align 4
  %v0_4934 = load i32, i32* @ebp, align 4
  %v1_4934 = add i32 %v0_4934, -60
  store i32 %v1_4934, i32* %eax.global-to-local, align 4
  %v1_4937 = load i32, i32* @esp, align 4
  %v2_4937 = add i32 %v1_4937, 4
  %v3_4937 = inttoptr i32 %v2_4937 to i32*
  store i32 %v1_4934, i32* %v3_4937, align 4
  %v0_493b = load i32, i32* @ebp, align 4
  %v1_493b = add i32 %v0_493b, -44
  %v2_493b = inttoptr i32 %v1_493b to i32*
  %v3_493b = load i32, i32* %v2_493b, align 4
  store i32 %v3_493b, i32* %eax.global-to-local, align 4
  %v1_493e = load i32, i32* @esp, align 4
  %v2_493e = inttoptr i32 %v1_493e to i32*
  store i32 %v3_493b, i32* %v2_493e, align 4
  %v0_4941 = load i32, i32* %stack_var_-36, align 4
  %v1_4941 = load i32, i32* %stack_var_-32, align 4
  %v2_4941 = load i32, i32* %stack_var_-28, align 4
  %v3_4941 = load %CScript*, %CScript** %stack_var_-24, align 4
  %v4_4941 = ptrtoint %CScript* %v3_4941 to i32
  %v5_4941 = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %v0_4941, i32 %v1_4941, i32 %v2_4941, i32 %v4_4941)
  %v1_4946 = xor i32 %v5_4941, 1
  %v4_4946 = trunc i32 %v1_4946 to i8
  store i32 %v1_4946, i32* %eax.global-to-local, align 4
  %v5_4949 = icmp eq i8 %v4_4946, 0
  %v1_494b = icmp eq i1 %v5_4949, false
  br i1 %v1_494b, label %dec_label_pc_4986, label %dec_label_pc_490b.dec_label_pc_494d_crit_edge

dec_label_pc_490b.dec_label_pc_494d_crit_edge:    ; preds = %dec_label_pc_490b
  %v0_494d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_494d

dec_label_pc_494d:                                ; preds = %dec_label_pc_48fb, %dec_label_pc_490b.dec_label_pc_494d_crit_edge
  %v0_494d = phi i32 [ %v0_494d.pre, %dec_label_pc_490b.dec_label_pc_494d_crit_edge ], [ %v0_48fb, %dec_label_pc_48fb ]
  %v1_494d = add i32 %v0_494d, -164
  store i32 %v1_494d, i32* %eax.global-to-local, align 4
  %v1_4953 = load i32, i32* @esp, align 4
  %v2_4953 = inttoptr i32 %v1_4953 to i32*
  store i32 %v1_494d, i32* %v2_4953, align 4
  %v0_4956 = load i32, i32* %stack_var_-36, align 4
  %v1_4956 = inttoptr i32 %v0_4956 to i32*
  %v2_4956 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_4956)
  store i32 %v2_4956, i32* %eax.global-to-local, align 4
  %tmp99 = icmp ult i32 %v2_4956, 33
  br i1 %tmp99, label %dec_label_pc_497a, label %dec_label_pc_4960

dec_label_pc_4960:                                ; preds = %dec_label_pc_494d
  %v0_4960 = load i32, i32* @ebp, align 4
  %v1_4960 = add i32 %v0_4960, -164
  store i32 %v1_4960, i32* %eax.global-to-local, align 4
  %v1_4966 = load i32, i32* @esp, align 4
  %v2_4966 = inttoptr i32 %v1_4966 to i32*
  store i32 %v1_4960, i32* %v2_4966, align 4
  %v0_4969 = load i32, i32* %stack_var_-36, align 4
  %v1_4969 = inttoptr i32 %v0_4969 to i32*
  %v2_4969 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_4969)
  store i32 %v2_4969, i32* %eax.global-to-local, align 4
  %tmp100 = icmp ult i32 %v2_4969, 121
  br i1 %tmp100, label %dec_label_pc_497f, label %dec_label_pc_497a

dec_label_pc_497a:                                ; preds = %dec_label_pc_4960, %dec_label_pc_494d
  br label %dec_label_pc_497f

dec_label_pc_497f:                                ; preds = %dec_label_pc_4960, %dec_label_pc_497a
  %storemerge26 = phi i32 [ 0, %dec_label_pc_497a ], [ 1, %dec_label_pc_4960 ]
  store i32 %storemerge26, i32* %eax.global-to-local, align 4
  %v5_497f = icmp eq i32 %storemerge26, 0
  %v1_4981 = icmp eq i1 %v5_497f, false
  br i1 %v1_4981, label %dec_label_pc_490b, label %dec_label_pc_4986

dec_label_pc_4986:                                ; preds = %dec_label_pc_490b, %dec_label_pc_497f
  %v0_4986 = load i32, i32* @ebp, align 4
  %v1_4986 = add i32 %v0_4986, -152
  %v1_498c = load i32, i32* @esp, align 4
  %v2_498c = add i32 %v1_498c, 12
  %v3_498c = inttoptr i32 %v2_498c to i32*
  store i32 %v1_4986, i32* %v3_498c, align 4
  %v0_4990 = load i32, i32* @ebp, align 4
  %v1_4990 = add i32 %v0_4990, -64
  %v1_4993 = load i32, i32* @esp, align 4
  %v2_4993 = add i32 %v1_4993, 8
  %v3_4993 = inttoptr i32 %v2_4993 to i32*
  store i32 %v1_4990, i32* %v3_4993, align 4
  %v0_4997 = load i32, i32* @ebp, align 4
  %v1_4997 = add i32 %v0_4997, -56
  store i32 %v1_4997, i32* %eax.global-to-local, align 4
  %v1_499a = load i32, i32* @esp, align 4
  %v2_499a = add i32 %v1_499a, 4
  %v3_499a = inttoptr i32 %v2_499a to i32*
  store i32 %v1_4997, i32* %v3_499a, align 4
  %v0_499e = load i32, i32* @ebp, align 4
  %v1_499e = add i32 %v0_499e, -24
  %v2_499e = inttoptr i32 %v1_499e to i32*
  %v3_499e = load i32, i32* %v2_499e, align 4
  store i32 %v3_499e, i32* %eax.global-to-local, align 4
  %v1_49a1 = load i32, i32* @esp, align 4
  %v2_49a1 = inttoptr i32 %v1_49a1 to i32*
  store i32 %v3_499e, i32* %v2_49a1, align 4
  %v0_49a4 = load i32, i32* %stack_var_-36, align 4
  %v1_49a4 = load i32, i32* %stack_var_-32, align 4
  %v2_49a4 = load i32, i32* %stack_var_-28, align 4
  %v3_49a4 = load %CScript*, %CScript** %stack_var_-24, align 4
  %v4_49a4 = ptrtoint %CScript* %v3_49a4 to i32
  %v5_49a4 = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %v0_49a4, i32 %v1_49a4, i32 %v2_49a4, i32 %v4_49a4)
  %v1_49a9 = xor i32 %v5_49a4, 1
  %v4_49a9 = trunc i32 %v1_49a9 to i8
  store i32 %v1_49a9, i32* %eax.global-to-local, align 4
  %v5_49ac = icmp eq i8 %v4_49a9, 0
  %v1_49ae = icmp eq i1 %v5_49ac, false
  br i1 %v1_49ae, label %dec_label_pc_4b4c, label %dec_label_pc_4986.dec_label_pc_49b4_crit_edge

dec_label_pc_4986.dec_label_pc_49b4_crit_edge:    ; preds = %dec_label_pc_4986
  %v0_49b4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_49b4

dec_label_pc_49b4:                                ; preds = %dec_label_pc_4986.dec_label_pc_49b4_crit_edge, %dec_label_pc_48fb
  %v0_4b0a = phi i32 [ %v0_49b4.pre, %dec_label_pc_4986.dec_label_pc_49b4_crit_edge ], [ %v0_48fb, %dec_label_pc_48fb ]
  %v1_49b4 = add i32 %v0_4b0a, -64
  %v2_49b4 = inttoptr i32 %v1_49b4 to i32*
  %v3_49b4 = load i32, i32* %v2_49b4, align 4
  store i32 %v3_49b4, i32* %eax.global-to-local, align 4
  %v10_49b7 = icmp eq i32 %v3_49b4, 254
  %v1_49bc = icmp eq i1 %v10_49b7, false
  br i1 %v1_49bc, label %dec_label_pc_4a15, label %dec_label_pc_49be

dec_label_pc_49be:                                ; preds = %dec_label_pc_49b4
  %v1_49be = add i32 %v0_4b0a, -164
  store i32 %v1_49be, i32* %eax.global-to-local, align 4
  %v1_49c4 = load i32, i32* @esp, align 4
  %v2_49c4 = inttoptr i32 %v1_49c4 to i32*
  store i32 %v1_49be, i32* %v2_49c4, align 4
  %v0_49c7 = load i32, i32* %stack_var_-36, align 4
  %v1_49c7 = inttoptr i32 %v0_49c7 to i32*
  %v2_49c7 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_49c7)
  store i32 %v2_49c7, i32* %eax.global-to-local, align 4
  %tmp101 = icmp ult i32 %v2_49c7, 33
  br i1 %tmp101, label %dec_label_pc_49f0, label %dec_label_pc_49d1

dec_label_pc_49d1:                                ; preds = %dec_label_pc_49be
  %v0_49d1 = load i32, i32* @ebp, align 4
  %v1_49d1 = add i32 %v0_49d1, -164
  store i32 %v1_49d1, i32* %eax.global-to-local, align 4
  %v1_49d7 = load i32, i32* @esp, align 4
  %v2_49d7 = inttoptr i32 %v1_49d7 to i32*
  store i32 %v1_49d1, i32* %v2_49d7, align 4
  %v0_49da = load i32, i32* %stack_var_-36, align 4
  %v1_49da = inttoptr i32 %v0_49da to i32*
  %v2_49da = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_49da)
  store i32 %v2_49da, i32* %eax.global-to-local, align 4
  %tmp102 = icmp ugt i32 %v2_49da, 120
  %.30 = zext i1 %tmp102 to i32
  br label %dec_label_pc_49f0

dec_label_pc_49f0:                                ; preds = %dec_label_pc_49d1, %dec_label_pc_49be
  %storemerge21 = phi i32 [ 1, %dec_label_pc_49be ], [ %.30, %dec_label_pc_49d1 ]
  store i32 %storemerge21, i32* %eax.global-to-local, align 4
  %v5_49f0 = icmp eq i32 %storemerge21, 0
  %v1_49f2 = icmp eq i1 %v5_49f0, false
  br i1 %v1_49f2, label %dec_label_pc_4b4c, label %dec_label_pc_49f8

dec_label_pc_49f8:                                ; preds = %dec_label_pc_49f0
  %v0_49f8 = load i32, i32* @ebp, align 4
  %v1_49f8 = add i32 %v0_49f8, -164
  store i32 %v1_49f8, i32* %eax.global-to-local, align 4
  %v1_49fe = load i32, i32* @esp, align 4
  %v2_49fe = add i32 %v1_49fe, 4
  %v3_49fe = inttoptr i32 %v2_49fe to i32*
  store i32 %v1_49f8, i32* %v3_49fe, align 4
  %v0_4a02 = load i32, i32* @ebp, align 4
  %v1_4a02 = add i32 %v0_4a02, -372
  %v2_4a02 = inttoptr i32 %v1_4a02 to i32*
  %v3_4a02 = load i32, i32* %v2_4a02, align 4
  store i32 %v3_4a02, i32* %eax.global-to-local, align 4
  %v1_4a08 = load i32, i32* @esp, align 4
  %v2_4a08 = inttoptr i32 %v1_4a08 to i32*
  store i32 %v3_4a02, i32* %v2_4a08, align 4
  %v0_4a0b = load i32, i32* %stack_var_-36, align 4
  %v1_4a0b = load i32, i32* %stack_var_-32, align 4
  %v2_4a0b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_4a0b, i32 %v1_4a0b)
  store i32 %v2_4a0b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4773.backedge

dec_label_pc_4a15:                                ; preds = %dec_label_pc_49b4
  %v3_4a15 = load i32, i32* %v2_49b4, align 4
  store i32 %v3_4a15, i32* %eax.global-to-local, align 4
  %v10_4a18 = icmp eq i32 %v3_4a15, 253
  %v1_4a1d = icmp eq i1 %v10_4a18, false
  br i1 %v1_4a1d, label %dec_label_pc_4a58, label %dec_label_pc_4a1f

dec_label_pc_4a1f:                                ; preds = %dec_label_pc_4a15
  %v1_4a1f = add i32 %v0_4b0a, -164
  store i32 %v1_4a1f, i32* %eax.global-to-local, align 4
  %v1_4a25 = load i32, i32* @esp, align 4
  %v2_4a25 = inttoptr i32 %v1_4a25 to i32*
  store i32 %v1_4a1f, i32* %v2_4a25, align 4
  %v0_4a28 = load i32, i32* %stack_var_-36, align 4
  %v1_4a28 = inttoptr i32 %v0_4a28 to i32*
  %v2_4a28 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_4a28)
  %v10_4a2d = icmp eq i32 %v2_4a28, 20
  %v1_4a30 = icmp eq i1 %v10_4a2d, false
  %v2_4a30 = zext i1 %v1_4a30 to i32
  %v4_4a30 = and i32 %v2_4a28, -256
  %v5_4a30 = or i32 %v2_4a30, %v4_4a30
  store i32 %v5_4a30, i32* %eax.global-to-local, align 4
  %v5_4a33 = icmp eq i1 %v1_4a30, false
  %v1_4a35 = icmp eq i1 %v5_4a33, false
  br i1 %v1_4a35, label %dec_label_pc_4b4c, label %dec_label_pc_4a3b

dec_label_pc_4a3b:                                ; preds = %dec_label_pc_4a1f
  %v0_4a3b = load i32, i32* @ebp, align 4
  %v1_4a3b = add i32 %v0_4a3b, -164
  store i32 %v1_4a3b, i32* %eax.global-to-local, align 4
  %v1_4a41 = load i32, i32* @esp, align 4
  %v2_4a41 = add i32 %v1_4a41, 4
  %v3_4a41 = inttoptr i32 %v2_4a41 to i32*
  store i32 %v1_4a3b, i32* %v3_4a41, align 4
  %v0_4a45 = load i32, i32* @ebp, align 4
  %v1_4a45 = add i32 %v0_4a45, -372
  %v2_4a45 = inttoptr i32 %v1_4a45 to i32*
  %v3_4a45 = load i32, i32* %v2_4a45, align 4
  store i32 %v3_4a45, i32* %eax.global-to-local, align 4
  %v1_4a4b = load i32, i32* @esp, align 4
  %v2_4a4b = inttoptr i32 %v1_4a4b to i32*
  store i32 %v3_4a45, i32* %v2_4a4b, align 4
  %v0_4a4e = load i32, i32* %stack_var_-36, align 4
  %v1_4a4e = load i32, i32* %stack_var_-32, align 4
  %v2_4a4e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_4a4e, i32 %v1_4a4e)
  store i32 %v2_4a4e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4773.backedge

dec_label_pc_4a58:                                ; preds = %dec_label_pc_4a15
  %v3_4a58 = load i32, i32* %v2_49b4, align 4
  store i32 %v3_4a58, i32* %eax.global-to-local, align 4
  %v10_4a5b = icmp eq i32 %v3_4a58, 250
  %v1_4a60 = icmp eq i1 %v10_4a5b, false
  %v1_4b00 = add i32 %v0_4b0a, -68
  %v2_4b00 = inttoptr i32 %v1_4b00 to i32*
  %v3_4b00 = load i32, i32* %v2_4b00, align 4
  br i1 %v1_4a60, label %dec_label_pc_4b00, label %dec_label_pc_4a66

dec_label_pc_4a66:                                ; preds = %dec_label_pc_4a58
  store i32 %v3_4b00, i32* %eax.global-to-local, align 4
  %v1_4a69 = icmp eq i32 %v3_4b00, 0
  br i1 %v1_4a69, label %dec_label_pc_4a85, label %dec_label_pc_4a6d

dec_label_pc_4a6d:                                ; preds = %dec_label_pc_4a66
  %v3_4a6d = load i32, i32* %v2_4b00, align 4
  store i32 %v3_4a6d, i32* %eax.global-to-local, align 4
  %v7_4a73 = icmp sgt i32 %v3_4a6d, 80
  br i1 %v7_4a73, label %dec_label_pc_4a79, label %dec_label_pc_4b4c

dec_label_pc_4a79:                                ; preds = %dec_label_pc_4a6d
  %v3_4a79 = load i32, i32* %v2_4b00, align 4
  store i32 %v3_4a79, i32* %eax.global-to-local, align 4
  %v8_4a7f = icmp sgt i32 %v3_4a79, 96
  br i1 %v8_4a7f, label %dec_label_pc_4b4c, label %dec_label_pc_4a85

dec_label_pc_4a85:                                ; preds = %dec_label_pc_4a79, %dec_label_pc_4a66
  %v3_4a85 = load i32, i32* %v2_4b00, align 4
  store i32 %v3_4a85, i32* %eax.global-to-local, align 4
  %v1_4a88 = load i32, i32* @esp, align 4
  %v2_4a88 = inttoptr i32 %v1_4a88 to i32*
  store i32 %v3_4a85, i32* %v2_4a88, align 4
  %v0_4a8b = call i32 @_ZN7CScript10DecodeOP_NE10opcodetype()
  %v1_4a90 = trunc i32 %v0_4a8b to i8
  %v2_4a90 = load i32, i32* @ebp, align 4
  %v3_4a90 = add i32 %v2_4a90, -13
  %v4_4a90 = inttoptr i32 %v3_4a90 to i8*
  store i8 %v1_4a90, i8* %v4_4a90, align 1
  %v0_4a93 = load i32, i32* @ebp, align 4
  %v1_4a93 = add i32 %v0_4a93, -16
  store i32 %v1_4a93, i32* %eax.global-to-local, align 4
  %v1_4a96 = load i32, i32* @esp, align 4
  %v2_4a96 = inttoptr i32 %v1_4a96 to i32*
  store i32 %v1_4a93, i32* %v2_4a96, align 4
  %v0_4a99 = load i32, i32* %stack_var_-36, align 4
  %v1_4a99 = call i32 @_ZNSaIhEC1Ev(i32 %v0_4a99)
  store i32 %v1_4a99, i32* %eax.global-to-local, align 4
  %v0_4a9e = load i32, i32* @ebp, align 4
  %v1_4a9e = add i32 %v0_4a9e, -13
  %v2_4a9e = inttoptr i32 %v1_4a9e to i8*
  %v3_4a9e = load i8, i8* %v2_4a9e, align 1
  %v3_4aa2 = add i32 %v0_4a9e, -17
  %v4_4aa2 = inttoptr i32 %v3_4aa2 to i8*
  store i8 %v3_4a9e, i8* %v4_4aa2, align 1
  %v0_4aa5 = load i32, i32* @ebp, align 4
  %v1_4aa5 = add i32 %v0_4aa5, -16
  %v1_4aa8 = load i32, i32* @esp, align 4
  %v2_4aa8 = add i32 %v1_4aa8, 12
  %v3_4aa8 = inttoptr i32 %v2_4aa8 to i32*
  store i32 %v1_4aa5, i32* %v3_4aa8, align 4
  %v0_4aac = load i32, i32* @ebp, align 4
  %v1_4aac = add i32 %v0_4aac, -17
  %v1_4aaf = load i32, i32* @esp, align 4
  %v2_4aaf = add i32 %v1_4aaf, 8
  %v3_4aaf = inttoptr i32 %v2_4aaf to i32*
  store i32 %v1_4aac, i32* %v3_4aaf, align 4
  %v0_4ab3 = load i32, i32* @esp, align 4
  %v1_4ab3 = add i32 %v0_4ab3, 4
  %v2_4ab3 = inttoptr i32 %v1_4ab3 to i32*
  store i32 1, i32* %v2_4ab3, align 4
  %v0_4abb = load i32, i32* @ebp, align 4
  %v1_4abb = add i32 %v0_4abb, -140
  store i32 %v1_4abb, i32* %eax.global-to-local, align 4
  %v1_4ac1 = load i32, i32* @esp, align 4
  %v2_4ac1 = inttoptr i32 %v1_4ac1 to i32*
  store i32 %v1_4abb, i32* %v2_4ac1, align 4
  %v0_4ac4 = load i32, i32* %stack_var_-36, align 4
  %v1_4ac4 = load i32, i32* %stack_var_-32, align 4
  %v2_4ac4 = load i32, i32* %stack_var_-28, align 4
  %v3_4ac4 = load %CScript*, %CScript** %stack_var_-24, align 4
  %v4_4ac4 = ptrtoint %CScript* %v3_4ac4 to i32
  %v5_4ac4 = call i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %v0_4ac4, i32 %v1_4ac4, i32 %v2_4ac4, i32 %v4_4ac4)
  %v0_4ac9 = load i32, i32* @ebp, align 4
  %v1_4ac9 = add i32 %v0_4ac9, -140
  store i32 %v1_4ac9, i32* %eax.global-to-local, align 4
  %v1_4acf = load i32, i32* @esp, align 4
  %v2_4acf = add i32 %v1_4acf, 4
  %v3_4acf = inttoptr i32 %v2_4acf to i32*
  store i32 %v1_4ac9, i32* %v3_4acf, align 4
  %v0_4ad3 = load i32, i32* @ebp, align 4
  %v1_4ad3 = add i32 %v0_4ad3, -372
  %v2_4ad3 = inttoptr i32 %v1_4ad3 to i32*
  %v3_4ad3 = load i32, i32* %v2_4ad3, align 4
  store i32 %v3_4ad3, i32* %eax.global-to-local, align 4
  %v1_4ad9 = load i32, i32* @esp, align 4
  %v2_4ad9 = inttoptr i32 %v1_4ad9 to i32*
  store i32 %v3_4ad3, i32* %v2_4ad9, align 4
  %v0_4adc = load i32, i32* %stack_var_-36, align 4
  %v1_4adc = load i32, i32* %stack_var_-32, align 4
  %v2_4adc = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %v0_4adc, i32 %v1_4adc)
  %v0_4ae1 = load i32, i32* @ebp, align 4
  %v1_4ae1 = add i32 %v0_4ae1, -140
  store i32 %v1_4ae1, i32* %eax.global-to-local, align 4
  %v1_4ae7 = load i32, i32* @esp, align 4
  %v2_4ae7 = inttoptr i32 %v1_4ae7 to i32*
  store i32 %v1_4ae1, i32* %v2_4ae7, align 4
  %v0_4aea = load i32, i32* %stack_var_-36, align 4
  %v1_4aea = inttoptr i32 %v0_4aea to i32*
  %v2_4aea = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4aea)
  %v0_4aef = load i32, i32* @ebp, align 4
  %v1_4aef = add i32 %v0_4aef, -16
  store i32 %v1_4aef, i32* %eax.global-to-local, align 4
  %v1_4af2 = load i32, i32* @esp, align 4
  %v2_4af2 = inttoptr i32 %v1_4af2 to i32*
  store i32 %v1_4aef, i32* %v2_4af2, align 4
  %v0_4af5 = load i32, i32* %stack_var_-36, align 4
  %v1_4af5 = call i32 @_ZNSaIhED1Ev(i32 %v0_4af5)
  store i32 %v1_4af5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4773.backedge

dec_label_pc_4b00:                                ; preds = %dec_label_pc_4a58
  %v3_4b03 = load i32, i32* %v2_49b4, align 4
  store i32 %v3_4b03, i32* %eax.global-to-local, align 4
  %v12_4b06 = icmp eq i32 %v3_4b00, %v3_4b03
  %v1_4b08 = icmp eq i1 %v12_4b06, false
  br i1 %v1_4b08, label %dec_label_pc_4b32, label %dec_label_pc_4b0a

dec_label_pc_4b0a:                                ; preds = %dec_label_pc_4b00
  %v1_4b0a = add i32 %v0_4b0a, -152
  %v1_4b10 = load i32, i32* @esp, align 4
  %v2_4b10 = add i32 %v1_4b10, 4
  %v3_4b10 = inttoptr i32 %v2_4b10 to i32*
  store i32 %v1_4b0a, i32* %v3_4b10, align 4
  %v0_4b14 = load i32, i32* @ebp, align 4
  %v1_4b14 = add i32 %v0_4b14, -164
  store i32 %v1_4b14, i32* %eax.global-to-local, align 4
  %v1_4b1a = load i32, i32* @esp, align 4
  %v2_4b1a = inttoptr i32 %v1_4b1a to i32*
  store i32 %v1_4b14, i32* %v2_4b1a, align 4
  %v0_4b1d = call i32 @_ZStneIhSaIhEEbRKSt6vectorIT_T0_ES6_()
  store i32 %v0_4b1d, i32* %eax.global-to-local, align 4
  %v4_4b22 = trunc i32 %v0_4b1d to i8
  %v5_4b22 = icmp ne i8 %v4_4b22, 0
  %.31 = zext i1 %v5_4b22 to i32
  br label %dec_label_pc_4b32

dec_label_pc_4b32:                                ; preds = %dec_label_pc_4b0a, %dec_label_pc_4b00
  %storemerge24 = phi i32 [ 1, %dec_label_pc_4b00 ], [ %.31, %dec_label_pc_4b0a ]
  store i32 %storemerge24, i32* %eax.global-to-local, align 4
  %v5_4b32 = icmp eq i32 %storemerge24, 0
  br i1 %v5_4b32, label %dec_label_pc_4773.backedge, label %dec_label_pc_4b4c

dec_label_pc_4773.backedge:                       ; preds = %dec_label_pc_4b32, %dec_label_pc_4a85, %dec_label_pc_4a3b, %dec_label_pc_49f8
  %v1_4779.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_4773

dec_label_pc_4b4c:                                ; preds = %dec_label_pc_4a79, %dec_label_pc_4a6d, %dec_label_pc_4a1f, %dec_label_pc_49f0, %dec_label_pc_4986, %dec_label_pc_48cd, %dec_label_pc_489f, %dec_label_pc_4b32
  store i32 1, i32* %esi.global-to-local, align 4
  %v0_4b51.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_4b51

dec_label_pc_4b51:                                ; preds = %dec_label_pc_4b4c, %dec_label_pc_4890, %dec_label_pc_4881
  %v0_4b51 = phi i32 [ %v0_4b51.pre, %dec_label_pc_4b4c ], [ %v0_4b5138, %dec_label_pc_4890 ], [ %v0_4b5139, %dec_label_pc_4881 ]
  %v1_4b51 = add i32 %v0_4b51, -152
  store i32 %v1_4b51, i32* %eax.global-to-local, align 4
  %v1_4b57 = load i32, i32* @esp, align 4
  %v2_4b57 = inttoptr i32 %v1_4b57 to i32*
  store i32 %v1_4b51, i32* %v2_4b57, align 4
  %v0_4b5a = load i32, i32* %stack_var_-36, align 4
  %v1_4b5a = inttoptr i32 %v0_4b5a to i32*
  %v2_4b5a = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4b5a)
  %v0_4b5f = load i32, i32* %esi.global-to-local, align 4
  %v10_4b5f = icmp eq i32 %v0_4b5f, 1
  %. = zext i1 %v10_4b5f to i32
  store i32 %., i32* %esi.global-to-local, align 4
  %v0_4b70 = load i32, i32* @ebp, align 4
  %v1_4b70 = add i32 %v0_4b70, -164
  store i32 %v1_4b70, i32* %eax.global-to-local, align 4
  %v1_4b76 = load i32, i32* @esp, align 4
  %v2_4b76 = inttoptr i32 %v1_4b76 to i32*
  store i32 %v1_4b70, i32* %v2_4b76, align 4
  %v0_4b79 = load i32, i32* %stack_var_-36, align 4
  %v1_4b79 = inttoptr i32 %v0_4b79 to i32*
  %v2_4b79 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4b79)
  store i32 %v2_4b79, i32* %eax.global-to-local, align 4
  %v0_4b7e = load i32, i32* %esi.global-to-local, align 4
  %v10_4b7e = icmp eq i32 %v0_4b7e, 1
  %v0_4b8a = load i32, i32* @ebp, align 4
  br i1 %v10_4b7e, label %dec_label_pc_4b8a, label %dec_label_pc_4ba2

dec_label_pc_4b8a:                                ; preds = %dec_label_pc_4b51
  %v1_4b8a = add i32 %v0_4b8a, -18
  %v2_4b8a = inttoptr i32 %v1_4b8a to i8*
  store i8 1, i8* %v2_4b8a, align 1
  br label %dec_label_pc_4b8e

dec_label_pc_4b8e:                                ; preds = %dec_label_pc_4b8a, %dec_label_pc_46e0
  %v0_4b8e = load i32, i32* @ebp, align 4
  %v1_4b8e = add i32 %v0_4b8e, -18
  %v2_4b8e = inttoptr i32 %v1_4b8e to i8*
  %v3_4b8e = load i8, i8* %v2_4b8e, align 1
  %v4_4b8e = zext i8 %v3_4b8e to i32
  %v1_4b92 = xor i32 %v4_4b8e, 1
  store i32 %v1_4b92, i32* %eax.global-to-local, align 4
  %v5_4b95 = icmp eq i32 %v1_4b92, 0
  %v1_4b97 = icmp eq i1 %v5_4b95, false
  br i1 %v1_4b97, label %dec_label_pc_4713, label %dec_label_pc_4ba2

dec_label_pc_4ba2:                                ; preds = %dec_label_pc_4b51, %dec_label_pc_4b8e
  %v0_4ba2 = phi i32 [ %v0_4b8e, %dec_label_pc_4b8e ], [ %v0_4b8a, %dec_label_pc_4b51 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_4b8e ], [ 0, %dec_label_pc_4b51 ]
  store i32 %storemerge, i32* @esi, align 4
  %v1_4ba2 = add i32 %v0_4ba2, -252
  store i32 %v1_4ba2, i32* %eax.global-to-local, align 4
  %v1_4ba8 = load i32, i32* @esp, align 4
  %v2_4ba8 = inttoptr i32 %v1_4ba8 to i32*
  store i32 %v1_4ba2, i32* %v2_4ba8, align 4
  %v0_4bab = load i32, i32* %stack_var_-36, align 4
  %v1_4bab = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v0_4bab)
  store i32 %v1_4bab, i32* %eax.global-to-local, align 4
  %v0_4bb0 = load i32, i32* @esi, align 4
  %v10_4bb0 = icmp eq i32 %v0_4bb0, 1
  %v1_4bb3 = icmp eq i1 %v10_4bb0, false
  br i1 %v1_4bb3, label %dec_label_pc_4c2c, label %dec_label_pc_4bb5

dec_label_pc_4bb5:                                ; preds = %dec_label_pc_4ba2, %dec_label_pc_46cd
  %v0_4bb5 = load i32, i32* @ebp, align 4
  %v1_4bb5 = add i32 %v0_4bb5, -18
  %v2_4bb5 = inttoptr i32 %v1_4bb5 to i8*
  %v3_4bb5 = load i8, i8* %v2_4bb5, align 1
  %v4_4bb5 = zext i8 %v3_4bb5 to i32
  store i32 %v4_4bb5, i32* %eax.global-to-local, align 4
  %v5_4bb9 = icmp eq i8 %v3_4bb5, 0
  br i1 %v5_4bb9, label %dec_label_pc_4bd0, label %dec_label_pc_4bbd

dec_label_pc_4bbd:                                ; preds = %dec_label_pc_4bb5
  %v0_4bbd = load i32, i32* @esp, align 4
  %v1_4bbd = add i32 %v0_4bbd, 4
  %v2_4bbd = inttoptr i32 %v1_4bbd to i32*
  store i32 0, i32* %v2_4bbd, align 4
  %v0_4bc5 = load i32, i32* @ebp, align 4
  %v1_4bc5 = add i32 %v0_4bc5, -36
  %v2_4bc5 = inttoptr i32 %v1_4bc5 to i32*
  %v3_4bc5 = load i32, i32* %v2_4bc5, align 4
  store i32 %v3_4bc5, i32* %eax.global-to-local, align 4
  %v1_4bc8 = load i32, i32* @esp, align 4
  %v2_4bc8 = inttoptr i32 %v1_4bc8 to i32*
  store i32 %v3_4bc5, i32* %v2_4bc8, align 4
  %v0_4bcb = call i32 @_ZN5boost15foreach_detail_4nextISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE()
  store i32 %v0_4bcb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_4bd0

dec_label_pc_4bd0:                                ; preds = %dec_label_pc_4bbd, %dec_label_pc_4bb5, %dec_label_pc_46c4
  %v0_4bd0 = load i32, i32* @ebp, align 4
  %v1_4bd0 = add i32 %v0_4bd0, -18
  %v2_4bd0 = inttoptr i32 %v1_4bd0 to i8*
  %v3_4bd0 = load i8, i8* %v2_4bd0, align 1
  %v4_4bd0 = zext i8 %v3_4bd0 to i32
  store i32 %v4_4bd0, i32* %eax.global-to-local, align 4
  %v5_4bd4 = icmp eq i8 %v3_4bd0, 0
  br i1 %v5_4bd4, label %dec_label_pc_4c00, label %dec_label_pc_4bd8

dec_label_pc_4bd8:                                ; preds = %dec_label_pc_4bd0
  %v0_4bd8 = load i32, i32* @esp, align 4
  %v1_4bd8 = add i32 %v0_4bd8, 8
  %v2_4bd8 = inttoptr i32 %v1_4bd8 to i32*
  store i32 0, i32* %v2_4bd8, align 4
  %v0_4be0 = load i32, i32* @ebp, align 4
  %v1_4be0 = add i32 %v0_4be0, -32
  %v2_4be0 = inttoptr i32 %v1_4be0 to i32*
  %v3_4be0 = load i32, i32* %v2_4be0, align 4
  store i32 %v3_4be0, i32* %eax.global-to-local, align 4
  %v1_4be3 = load i32, i32* @esp, align 4
  %v2_4be3 = add i32 %v1_4be3, 4
  %v3_4be3 = inttoptr i32 %v2_4be3 to i32*
  store i32 %v3_4be0, i32* %v3_4be3, align 4
  %v0_4be7 = load i32, i32* @ebp, align 4
  %v1_4be7 = add i32 %v0_4be7, -36
  %v2_4be7 = inttoptr i32 %v1_4be7 to i32*
  %v3_4be7 = load i32, i32* %v2_4be7, align 4
  store i32 %v3_4be7, i32* %eax.global-to-local, align 4
  %v1_4bea = load i32, i32* @esp, align 4
  %v2_4bea = inttoptr i32 %v1_4bea to i32*
  store i32 %v3_4be7, i32* %v2_4bea, align 4
  %v0_4bed = call i32 @_ZN5boost15foreach_detail_4doneISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESH_PNS0_9type2typeIT_T0_EE()
  %v1_4bf2 = xor i32 %v0_4bed, 1
  %v4_4bf2 = trunc i32 %v1_4bf2 to i8
  store i32 %v1_4bf2, i32* %eax.global-to-local, align 4
  %v5_4bf5 = icmp eq i8 %v4_4bf2, 0
  br i1 %v5_4bf5, label %dec_label_pc_4c00, label %dec_label_pc_4c05

dec_label_pc_4c00:                                ; preds = %dec_label_pc_4bd8, %dec_label_pc_4bd0
  br label %dec_label_pc_4c05

dec_label_pc_4c05:                                ; preds = %dec_label_pc_4bd8, %dec_label_pc_4c00
  %storemerge28 = phi i32 [ 0, %dec_label_pc_4c00 ], [ 1, %dec_label_pc_4bd8 ]
  store i32 %storemerge28, i32* %eax.global-to-local, align 4
  %v5_4c05 = icmp eq i32 %storemerge28, 0
  %v1_4c07 = icmp eq i1 %v5_4c05, false
  br i1 %v1_4c07, label %dec_label_pc_46cd, label %dec_label_pc_4c0d

dec_label_pc_4c0d:                                ; preds = %dec_label_pc_4c05, %dec_label_pc_4686, %dec_label_pc_4648, %dec_label_pc_4608
  %v0_4c0d = load i32, i32* @ebp, align 4
  %v1_4c0d = add i32 %v0_4c0d, -372
  %v2_4c0d = inttoptr i32 %v1_4c0d to i32*
  %v3_4c0d = load i32, i32* %v2_4c0d, align 4
  store i32 %v3_4c0d, i32* %eax.global-to-local, align 4
  %v1_4c13 = load i32, i32* @esp, align 4
  %v2_4c13 = inttoptr i32 %v1_4c13 to i32*
  store i32 %v3_4c0d, i32* %v2_4c13, align 4
  %v0_4c16 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5clearEv()
  store i32 %v0_4c16, i32* %eax.global-to-local, align 4
  %v0_4c1b = load i32, i32* @ebp, align 4
  %v1_4c1b = add i32 %v0_4c1b, -368
  %v2_4c1b = inttoptr i32 %v1_4c1b to i32*
  %v3_4c1b = load i32, i32* %v2_4c1b, align 4
  store i32 %v3_4c1b, i32* %eax.global-to-local, align 4
  %v1_4c21 = inttoptr i32 %v3_4c1b to i32*
  store i32 0, i32* %v1_4c21, align 4
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_4c2c

dec_label_pc_4c2c:                                ; preds = %dec_label_pc_4ba2, %dec_label_pc_4c0d, %dec_label_pc_451d
  %v0_4c2c = load i32, i32* @ebx, align 4
  store i32 %v0_4c2c, i32* @eax, align 4
  %v0_4c2e = load i32, i32* @ebp, align 4
  %v1_4c2e = add i32 %v0_4c2e, -12
  %v2_4c2e = inttoptr i32 %v1_4c2e to i32*
  %v3_4c2e = load i32, i32* %v2_4c2e, align 4
  %v1_4c31 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4c31 = icmp eq i32 %v1_4c31, %v3_4c2e
  br i1 %v3_4c31, label %bb, label %dec_label_pc_4c3e

bb:                                               ; preds = %dec_label_pc_4c2c
  %v1_4c38 = call i32 @function_4dee()
  store i32 %v1_4c38, i32* @eax, align 4
  br label %dec_label_pc_4c3e

dec_label_pc_4c3e:                                ; preds = %bb, %dec_label_pc_4c2c
  %v0_4c3e = call i32 @function_4de9()
  store i32 %v0_4c3e, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c3e

; uselistorder directives
  uselistorder i32 %v0_4b8e, { 0, 3, 2, 1 }
  uselistorder i32 %v3_4b00, { 0, 2, 1 }
  uselistorder i32 %v2_4a28, { 1, 0 }
  uselistorder i32 %v0_48fb, { 1, 0, 2 }
  uselistorder i32 %v0_489f, { 2, 0, 1 }
  uselistorder i32 %v1_4686, { 1, 0, 2 }
  uselistorder i32 %v1_4648, { 1, 0, 2 }
  uselistorder i32 %v0_45aa, { 1, 0, 2, 3 }
  uselistorder i32 %v1_458e, { 1, 0, 2 }
  uselistorder i32 %v1_4553, { 1, 0, 2 }
  uselistorder i32 %v0_4608, { 1, 2, 0 }
  uselistorder %CScript** %stack_var_-24, { 11, 15, 14, 13, 12, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-28, { 4, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %stack_var_-32, { 0, 10, 1, 2, 4, 5, 3, 6, 7, 8, 9, 13, 14, 11, 12, 15, 16, 17, 18, 19 }
  uselistorder i32* %stack_var_-36, { 2, 14, 15, 19, 16, 4, 20, 21, 5, 26, 6, 27, 28, 8, 29, 30, 9, 7, 10, 11, 3, 17, 0, 18, 1, 24, 25, 22, 23, 12, 13, 31, 32, 33, 34, 35 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 107, 108, 109, 76, 110, 111, 112, 113, 96, 97, 98, 99, 100, 101, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 48, 49, 50, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 3, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 46, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182 }
  uselistorder i32 ()* @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_, { 4, 3, 2, 1, 0, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 (i32)* @_ZNSaIhEC1Ev, { 1, 0, 2 }
  uselistorder i32 -364, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE6insertERKS6_, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZSt9make_pairI10txnouttype7CScriptESt4pairIT_T0_ES3_S4_, { 2, 1, 0 }
  uselistorder label %dec_label_pc_4c2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_4c05, { 1, 0 }
  uselistorder label %dec_label_pc_4ba2, { 1, 0 }
  uselistorder label %dec_label_pc_4b4c, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_4986, { 1, 0 }
  uselistorder label %dec_label_pc_497f, { 1, 0 }
  uselistorder label %dec_label_pc_494d, { 1, 0 }
  uselistorder label %dec_label_pc_487d, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_47d5, { 1, 0 }
}

define i32 @function_4c44() local_unnamed_addr {
dec_label_pc_4c44:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c44 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c44
}

define i32 @function_4c61() local_unnamed_addr {
dec_label_pc_4c61:
  %v0_4c63 = load i32, i32* @ebp, align 4
  %v1_4c63 = add i32 %v0_4c63, -332
  %v1_4c6c = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_4c63)
  %v0_4c71 = call i32 @function_4c75()
  ret i32 %v0_4c71
}

define i32 @function_4c73() local_unnamed_addr {
dec_label_pc_4c73:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c73 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c73
}

define i32 @function_4c75() local_unnamed_addr {
dec_label_pc_4c75:
  %v0_4c75 = load i32, i32* @ebp, align 4
  %v1_4c75 = add i32 %v0_4c75, -348
  %v1_4c7e = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_4c75)
  %v0_4c83 = call i32 @function_4c87()
  ret i32 %v0_4c83
}

define i32 @function_4c85() local_unnamed_addr {
dec_label_pc_4c85:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c85 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c85
}

define i32 @function_4c87() local_unnamed_addr {
dec_label_pc_4c87:
  %v0_4c87 = load i32, i32* @ebp, align 4
  %v1_4c87 = add i32 %v0_4c87, -224
  %v1_4c90 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4c87)
  %v0_4c95 = call i32 @function_4c99()
  ret i32 %v0_4c95
}

define i32 @function_4c97() local_unnamed_addr {
dec_label_pc_4c97:
  %eax.global-to-local = alloca i32, align 4
  %v0_4c97 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4c97
}

define i32 @function_4c99() local_unnamed_addr {
dec_label_pc_4c99:
  %v0_4c99 = load i32, i32* @ebp, align 4
  %v1_4c99 = add i32 %v0_4c99, -236
  %v1_4ca2 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4c99)
  %v0_4ca7 = load i32, i32* @ebx, align 4
  ret i32 %v0_4ca7
}

define i32 @function_4cb1() local_unnamed_addr {
dec_label_pc_4cb1:
  %v0_4cb3 = load i32, i32* @ebp, align 4
  %v1_4cb3 = add i32 %v0_4cb3, -300
  %v1_4cbc = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_4cb3)
  %v0_4cc1 = call i32 @function_4cc5()
  ret i32 %v0_4cc1
}

define i32 @function_4cc3() local_unnamed_addr {
dec_label_pc_4cc3:
  %eax.global-to-local = alloca i32, align 4
  %v0_4cc3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4cc3
}

define i32 @function_4cc5() local_unnamed_addr {
dec_label_pc_4cc5:
  %v0_4cc5 = load i32, i32* @ebp, align 4
  %v1_4cc5 = add i32 %v0_4cc5, -316
  %v1_4cce = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_4cc5)
  %v0_4cd3 = call i32 @function_4cd7()
  ret i32 %v0_4cd3

; uselistorder directives
  uselistorder i32 -316, { 0, 5, 6, 7, 1, 2, 3, 4 }
}

define i32 @function_4cd5() local_unnamed_addr {
dec_label_pc_4cd5:
  %eax.global-to-local = alloca i32, align 4
  %v0_4cd5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4cd5
}

define i32 @function_4cd7() local_unnamed_addr {
dec_label_pc_4cd7:
  %v0_4cd7 = load i32, i32* @ebp, align 4
  %v1_4cd7 = add i32 %v0_4cd7, -200
  %v1_4ce0 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4cd7)
  %v0_4ce5 = call i32 @function_4ce9()
  ret i32 %v0_4ce5

; uselistorder directives
  uselistorder i32 -200, { 0, 3, 4, 5, 7, 6, 8, 1, 2 }
}

define i32 @function_4ce7() local_unnamed_addr {
dec_label_pc_4ce7:
  %eax.global-to-local = alloca i32, align 4
  %v0_4ce7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4ce7
}

define i32 @function_4ce9() local_unnamed_addr {
dec_label_pc_4ce9:
  %v0_4ce9 = load i32, i32* @ebp, align 4
  %v1_4ce9 = add i32 %v0_4ce9, -212
  %v1_4cf2 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4ce9)
  %v0_4cf7 = load i32, i32* @ebx, align 4
  ret i32 %v0_4cf7

; uselistorder directives
  uselistorder i32 -212, { 0, 3, 4, 5, 1, 2 }
}

define i32 @function_4d01() local_unnamed_addr {
dec_label_pc_4d01:
  %v0_4d03 = load i32, i32* @ebp, align 4
  %v1_4d03 = add i32 %v0_4d03, -268
  %v1_4d0c = call i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %v1_4d03)
  %v0_4d11 = call i32 @function_4d15()
  ret i32 %v0_4d11

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt4pairIK10txnouttype7CScriptED1Ev, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_4d13() local_unnamed_addr {
dec_label_pc_4d13:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d13
}

define i32 @function_4d15() local_unnamed_addr {
dec_label_pc_4d15:
  %v0_4d15 = load i32, i32* @ebp, align 4
  %v1_4d15 = add i32 %v0_4d15, -284
  %v1_4d1e = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_4d15)
  %v0_4d23 = call i32 @function_4d27()
  ret i32 %v0_4d23

; uselistorder directives
  uselistorder i32 -284, { 0, 2, 3, 4, 5, 6, 7, 1 }
}

define i32 @function_4d25() local_unnamed_addr {
dec_label_pc_4d25:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d25 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d25
}

define i32 @function_4d27() local_unnamed_addr {
dec_label_pc_4d27:
  %v0_4d27 = load i32, i32* @ebp, align 4
  %v1_4d27 = add i32 %v0_4d27, -176
  %v1_4d30 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4d27)
  %v0_4d35 = call i32 @function_4d39()
  ret i32 %v0_4d35

; uselistorder directives
  uselistorder i32 -176, { 0, 3, 4, 5, 1, 2 }
}

define i32 @function_4d37() local_unnamed_addr {
dec_label_pc_4d37:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d37 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d37
}

define i32 @function_4d39() local_unnamed_addr {
dec_label_pc_4d39:
  %v0_4d39 = load i32, i32* @ebp, align 4
  %v1_4d39 = add i32 %v0_4d39, -188
  %v1_4d42 = call i32 @_ZN7CScriptD1Ev(i32 %v1_4d39)
  %v0_4d47 = load i32, i32* @ebx, align 4
  ret i32 %v0_4d47

; uselistorder directives
  uselistorder i32 -188, { 0, 2, 3, 4, 5, 6, 7, 8, 1 }
}

define i32 @function_4d51() local_unnamed_addr {
dec_label_pc_4d51:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d59 = load i32, i32* %eax.global-to-local, align 4
  %v0_4d5b = load i32, i32* @ebp, align 4
  %v1_4d5b = add i32 %v0_4d5b, -19
  store i32 %v1_4d5b, i32* %eax.global-to-local, align 4
  %v1_4d61 = call i32 @_ZNSaIhED1Ev(i32 %v1_4d5b)
  store i32 %v0_4d59, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d59

; uselistorder directives
  uselistorder i32 %v0_4d59, { 1, 0 }
}

define i32 @function_4d71() local_unnamed_addr {
dec_label_pc_4d71:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d71 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d71
}

define i32 @function_4d8a() local_unnamed_addr {
dec_label_pc_4d8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d8a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4d8a, i32* @ebx, align 4
  %v0_4d8c = load i32, i32* @ebp, align 4
  %v1_4d8c = add i32 %v0_4d8c, -140
  store i32 %v1_4d8c, i32* %eax.global-to-local, align 4
  %v1_4d95 = inttoptr i32 %v1_4d8c to i32*
  %v2_4d95 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4d95)
  store i32 %v2_4d95, i32* %eax.global-to-local, align 4
  %v0_4d9a = call i32 @function_4d9e()
  store i32 %v0_4d9a, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d9a
}

define i32 @function_4d9c() local_unnamed_addr {
dec_label_pc_4d9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_4d9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4d9c
}

define i32 @function_4d9e() local_unnamed_addr {
dec_label_pc_4d9e:
  %v0_4d9e = load i32, i32* @ebp, align 4
  %v1_4d9e = add i32 %v0_4d9e, -16
  %v1_4da4 = call i32 @_ZNSaIhED1Ev(i32 %v1_4d9e)
  %v0_4da9 = call i32 @function_4dad()
  ret i32 %v0_4da9

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSaIhED1Ev, { 5, 4, 1, 0, 3, 2 }
}

define i32 @function_4dab() local_unnamed_addr {
dec_label_pc_4dab:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4dab
}

define i32 @function_4dad() local_unnamed_addr {
dec_label_pc_4dad:
  %v0_4dad = load i32, i32* @ebp, align 4
  %v1_4dad = add i32 %v0_4dad, -152
  %v1_4db6 = inttoptr i32 %v1_4dad to i32*
  %v2_4db6 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4db6)
  %v0_4dbb = call i32 @function_4dbf()
  ret i32 %v0_4dbb

; uselistorder directives
  uselistorder i32 -152, { 0, 3, 4, 5, 6, 7, 8, 1, 2 }
}

define i32 @function_4dbd() local_unnamed_addr {
dec_label_pc_4dbd:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dbd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4dbd
}

define i32 @function_4dbf() local_unnamed_addr {
dec_label_pc_4dbf:
  %v0_4dbf = load i32, i32* @ebp, align 4
  %v1_4dbf = add i32 %v0_4dbf, -164
  %v1_4dc8 = inttoptr i32 %v1_4dbf to i32*
  %v2_4dc8 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4dc8)
  %v0_4dcd = call i32 @function_4dd1()
  ret i32 %v0_4dcd
}

define i32 @function_4dcf() local_unnamed_addr {
dec_label_pc_4dcf:
  %eax.global-to-local = alloca i32, align 4
  %v0_4dcf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4dcf
}

define i32 @function_4dd1() local_unnamed_addr {
dec_label_pc_4dd1:
  %v0_4dd1 = load i32, i32* @ebp, align 4
  %v1_4dd1 = add i32 %v0_4dd1, -252
  %v1_4dda = call i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %v1_4dd1)
  %v0_4ddf = load i32, i32* @ebx, align 4
  ret i32 %v0_4ddf

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt4pairI10txnouttype7CScriptED1Ev, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_4de9() local_unnamed_addr {
dec_label_pc_4de9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4dee() local_unnamed_addr {
dec_label_pc_4dee:
  %v0_4dee = load i32, i32* @ebp, align 4
  %v1_4dee = add i32 %v0_4dee, -8
  %v1_4df1 = inttoptr i32 %v1_4dee to i32*
  %v2_4df1 = load i32, i32* %v1_4df1, align 4
  store i32 %v2_4df1, i32* @ebx, align 4
  %v3_4df1 = add i32 %v0_4dee, -4
  %v1_4df2 = inttoptr i32 %v3_4df1 to i32*
  %v2_4df2 = load i32, i32* %v1_4df2, align 4
  store i32 %v2_4df2, i32* @esi, align 4
  %v1_4df3 = inttoptr i32 %v0_4dee to i32*
  %v2_4df3 = load i32, i32* %v1_4df3, align 4
  store i32 %v2_4df3, i32* @ebp, align 4
  %v0_4df4 = load i32, i32* @eax, align 4
  ret i32 %v0_4df4
}

define i1 @_Z5Sign1RK6CKeyIDRK9CKeyStore7uint256iR7CScript(i32 %address, i32 %keystore, %uint256.24 %hash, i32 %nHashType, %CScript %scriptSigRet) local_unnamed_addr {
dec_label_pc_4df5:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-50 = alloca i32, align 4
  %v1_4e58 = bitcast i32* %stack_var_-50 to i8*
  %v2_4e58 = call i32 @_ZN4CKeyC1Ev(i8* %v1_4e58)
  %v1_4e7d = xor i32 %keystore, 1
  %v4_4e7d = trunc i32 %v1_4e7d to i8
  %v5_4e80 = icmp eq i8 %v4_4e7d, 0
  br i1 %v5_4e80, label %dec_label_pc_4e8b, label %dec_label_pc_4e84

dec_label_pc_4e84:                                ; preds = %dec_label_pc_4df5
  %v2_4e52 = ptrtoint i32* %stack_var_-50 to i32
  store i32 0, i32* @ebx, align 4
  %v3_4e89 = call i32 @function_4ef7(i32 %keystore, i32 %address, i32 %v2_4e52)
  %tmp33 = urem i32 %v3_4e89, 2
  %v5_4e89 = icmp ne i32 %tmp33, 0
  ret i1 %v5_4e89

dec_label_pc_4e8b:                                ; preds = %dec_label_pc_4df5
  %v2_4e8b = ptrtoint i32* %stack_var_-64 to i32
  %v1_4e91 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v2_4e8b)
  ret i1 false

; uselistorder directives
  uselistorder i32* %stack_var_-50, { 1, 0 }
}

define i32 @function_4eae() local_unnamed_addr {
dec_label_pc_4eae:
  %v0_4eae = load i32, i32* @ebx, align 4
  %v1_4eae = add i32 %v0_4eae, -1065090576
  %v2_4eae = inttoptr i32 %v1_4eae to i32*
  %v3_4eae = load i32, i32* %v2_4eae, align 4
  %v4_4eae = add i32 %v3_4eae, 1
  %v12_4eae = icmp eq i32 %v4_4eae, 0
  store i32 %v4_4eae, i32* %v2_4eae, align 4
  br i1 %v12_4eae, label %dec_label_pc_4ebd, label %dec_label_pc_4eec

dec_label_pc_4ebd:                                ; preds = %dec_label_pc_4eae
  %v0_4ebd = load i32, i32* @ebp, align 4
  %v1_4ebd = add i32 %v0_4ebd, -116
  %v2_4ebd = inttoptr i32 %v1_4ebd to i32*
  %v3_4ebd = load i32, i32* %v2_4ebd, align 4
  %v1_4ec0 = trunc i32 %v3_4ebd to i8
  %v3_4ec0 = add i32 %v0_4ebd, -47
  %v4_4ec0 = inttoptr i32 %v3_4ec0 to i8*
  store i8 %v1_4ec0, i8* %v4_4ec0, align 1
  %v0_4ec3 = load i32, i32* @ebp, align 4
  %v1_4ec3 = add i32 %v0_4ec3, -47
  %v1_4eca = add i32 %v0_4ec3, -60
  %v2_4ed0 = call i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %v1_4eca, i32 %v1_4ec3)
  %v0_4ed5 = load i32, i32* @ebp, align 4
  %v1_4ed5 = add i32 %v0_4ed5, -60
  %v1_4edc = add i32 %v0_4ed5, -120
  %v2_4edc = inttoptr i32 %v1_4edc to i32*
  %v3_4edc = load i32, i32* %v2_4edc, align 4
  %v2_4ee2 = call i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %v3_4edc, i32 %v1_4ed5)
  br label %dec_label_pc_4eec

dec_label_pc_4eec:                                ; preds = %dec_label_pc_4eae, %dec_label_pc_4ebd
  %v0_4eec = load i32, i32* @ebp, align 4
  %v1_4eec = add i32 %v0_4eec, -60
  %v1_4ef2 = inttoptr i32 %v1_4eec to i32*
  %v2_4ef2 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4ef2)
  ret i32 %v2_4ef2

; uselistorder directives
  uselistorder label %dec_label_pc_4eec, { 1, 0 }
}

define i32 @function_4ef7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4ef7:
  %v0_4ef7 = load i32, i32* @ebp, align 4
  %v1_4ef7 = add i32 %v0_4ef7, -46
  %v1_4efd = call i32 @_ZN4CKeyD1Ev(i32 %v1_4ef7)
  %v0_4f02 = load i32, i32* @ebx, align 4
  store i32 %v0_4f02, i32* @eax, align 4
  %v0_4f04 = load i32, i32* @ebp, align 4
  %v1_4f04 = add i32 %v0_4f04, -12
  %v2_4f04 = inttoptr i32 %v1_4f04 to i32*
  %v3_4f04 = load i32, i32* %v2_4f04, align 4
  %v1_4f07 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_4f07 = icmp eq i32 %v1_4f07, %v3_4f04
  br i1 %v3_4f07, label %bb, label %dec_label_pc_4f10

bb:                                               ; preds = %dec_label_pc_4ef7
  %v1_4f0e = call i32 @function_4f3d()
  store i32 %v1_4f0e, i32* @eax, align 4
  br label %dec_label_pc_4f10

dec_label_pc_4f10:                                ; preds = %bb, %dec_label_pc_4ef7
  %v0_4f10 = call i32 @function_4f38()
  ret i32 %v0_4f10
}

define i32 @function_4f12() local_unnamed_addr {
dec_label_pc_4f12:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f12 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_4f12, i32* @ebx, align 4
  %v0_4f14 = load i32, i32* @ebp, align 4
  %v1_4f14 = add i32 %v0_4f14, -60
  store i32 %v1_4f14, i32* %eax.global-to-local, align 4
  %v1_4f1a = inttoptr i32 %v1_4f14 to i32*
  %v2_4f1a = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_4f1a)
  store i32 %v2_4f1a, i32* %eax.global-to-local, align 4
  %v0_4f1f = call i32 @function_4f23()
  store i32 %v0_4f1f, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f1f
}

define i32 @function_4f21() local_unnamed_addr {
dec_label_pc_4f21:
  %eax.global-to-local = alloca i32, align 4
  %v0_4f21 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4f21
}

define i32 @function_4f23() local_unnamed_addr {
dec_label_pc_4f23:
  %v0_4f23 = load i32, i32* @ebp, align 4
  %v1_4f23 = add i32 %v0_4f23, -46
  %v1_4f29 = call i32 @_ZN4CKeyD1Ev(i32 %v1_4f23)
  %v0_4f2e = load i32, i32* @ebx, align 4
  ret i32 %v0_4f2e

; uselistorder directives
  uselistorder i32 (i32)* @_ZN4CKeyD1Ev, { 1, 0 }
}

define i32 @function_4f38() local_unnamed_addr {
dec_label_pc_4f38:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4f3d() local_unnamed_addr {
dec_label_pc_4f3d:
  %v0_4f45 = load i32, i32* @eax, align 4
  ret i32 %v0_4f45
}

define i1 @_Z5SignNRKSt6vectorIS_IhSaIhEESaIS1_EERK9CKeyStore7uint256iR7CScript(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %multisigdata, i32 %keystore, %uint256.25 %hash, i32 %nHashType, %CScript %scriptSigRet) local_unnamed_addr {
dec_label_pc_4f46:
  %tmp = extractvalue %CScript %scriptSigRet, 0
  %tmp5 = extractvalue %uint256.25 %hash, 0
  %tmp6 = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %multisigdata, 0
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-101 = alloca i32, align 4
  %v1_4fcd = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5frontEv(i32 %tmp6)
  %v2_4fdd = inttoptr i32 %v1_4fcd to i32*
  %v3_4fdd = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v2_4fdd, i32 0)
  %v1_4fe2 = inttoptr i32 %v3_4fdd to i8*
  %v2_4fe2 = load i8, i8* %v1_4fe2, align 1
  %v3_4fe2 = zext i8 %v2_4fe2 to i32
  %v2_5013 = ptrtoint i32* %stack_var_-101 to i32
  %v2_501e = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_50b5

dec_label_pc_4ff7:                                ; preds = %dec_label_pc_50dc
  %v1_4ffa = load i32, i32* @esp, align 4
  %v2_4ffa = add i32 %v1_4ffa, 4
  %v3_4ffa = inttoptr i32 %v2_4ffa to i32*
  store i32 %storemerge, i32* %v3_4ffa, align 4
  %v1_5001 = load i32, i32* @esp, align 4
  %v2_5001 = inttoptr i32 %v1_5001 to i32*
  store i32 %tmp6, i32* %v2_5001, align 4
  %v3_5004 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v1_50bb, i32 %v3_4fe2)
  %v1_500f = load i32, i32* @esp, align 4
  %v2_500f = add i32 %v1_500f, 4
  %v3_500f = inttoptr i32 %v2_500f to i32*
  store i32 %v3_5004, i32* %v3_500f, align 4
  %v1_5016 = load i32, i32* @esp, align 4
  %v2_5016 = inttoptr i32 %v1_5016 to i32*
  store i32 %v2_5013, i32* %v2_5016, align 4
  %v2_5019 = call i32 @_ZN7CPubKeyC1ERKSt6vectorIhSaIhEE(i32 %v3_5004, i32 ptrtoint (i32* @9 to i32))
  %v1_5024 = load i32, i32* @esp, align 4
  %v2_5024 = add i32 %v1_5024, 4
  %v3_5024 = inttoptr i32 %v2_5024 to i32*
  store i32 %v2_5013, i32* %v3_5024, align 4
  %v1_5028 = load i32, i32* @esp, align 4
  %v2_5028 = inttoptr i32 %v1_5028 to i32*
  store i32 %v2_501e, i32* %v2_5028, align 4
  %v2_502b = call i32 @_ZNK7CPubKey5GetIDEv(i32 %v3_5004, i32 ptrtoint (i32* @9 to i32))
  %v0_5030 = load i32, i32* @esp, align 4
  %v2_5039 = add i32 %v0_5030, 40
  %v3_5039 = inttoptr i32 %v2_5039 to i32*
  %v1_5043 = load i32, i32* @esp, align 4
  %v2_5043 = add i32 %v1_5043, 40
  %v3_5043 = inttoptr i32 %v2_5043 to i32*
  %v1_504d = load i32, i32* @esp, align 4
  %v2_504d = add i32 %v1_504d, 8
  %v3_504d = inttoptr i32 %v2_504d to i32*
  store i32 %tmp5, i32* %v3_504d, align 4
  %v1_5057 = load i32, i32* @esp, align 4
  %v2_5057 = add i32 %v1_5057, 12
  %v3_5057 = inttoptr i32 %v2_5057 to i32*
  store i32 %nHashType, i32* %v3_5057, align 4
  %v1_5061 = load i32, i32* @esp, align 4
  %v2_5061 = add i32 %v1_5061, 16
  %v3_5061 = inttoptr i32 %v2_5061 to i32*
  store i32 %tmp, i32* %v3_5061, align 4
  %v1_506b = load i32, i32* @esp, align 4
  %v2_506b = add i32 %v1_506b, 20
  %v3_506b = inttoptr i32 %v2_506b to i32*
  %v1_5075 = load i32, i32* @esp, align 4
  %v2_5075 = add i32 %v1_5075, 24
  %v3_5075 = inttoptr i32 %v2_5075 to i32*
  %v1_507f = load i32, i32* @esp, align 4
  %v2_507f = add i32 %v1_507f, 28
  %v3_507f = inttoptr i32 %v2_507f to i32*
  %v1_5089 = load i32, i32* @esp, align 4
  %v2_5089 = add i32 %v1_5089, 32
  %v3_5089 = inttoptr i32 %v2_5089 to i32*
  %v1_5093 = load i32, i32* @esp, align 4
  %v2_5093 = add i32 %v1_5093, 36
  %v3_5093 = inttoptr i32 %v2_5093 to i32*
  %v1_509a = load i32, i32* @esp, align 4
  %v2_509a = add i32 %v1_509a, 4
  %v3_509a = inttoptr i32 %v2_509a to i32*
  store i32 %keystore, i32* %v3_509a, align 4
  %v1_50a1 = load i32, i32* @esp, align 4
  %v2_50a1 = inttoptr i32 %v1_50a1 to i32*
  store i32 %v2_501e, i32* %v2_50a1, align 4
  %v7_50a4 = call i1 @_Z5Sign1RK6CKeyIDRK9CKeyStore7uint256iR7CScript(i32 %v3_5004, i32 ptrtoint (i32* @9 to i32), %uint256.24 { i32 ptrtoint (i32* @9 to i32) }, i32 ptrtoint (i32* @9 to i32), %CScript { i32 ptrtoint (i32* @9 to i32) })
  %v5_50a9 = icmp eq i1 %v7_50a4, false
  br i1 %v5_50a9, label %dec_label_pc_50b1, label %dec_label_pc_50ad

dec_label_pc_50ad:                                ; preds = %dec_label_pc_4ff7
  %v4_50ad = add i32 %nRequired_-120.1, 1
  br label %dec_label_pc_50b1

dec_label_pc_50b1:                                ; preds = %dec_label_pc_50ad, %dec_label_pc_4ff7
  %nRequired_-120.0 = phi i32 [ %nRequired_-120.1, %dec_label_pc_4ff7 ], [ %v4_50ad, %dec_label_pc_50ad ]
  %v4_50b1 = add i32 %storemerge, 1
  br label %dec_label_pc_50b5

dec_label_pc_50b5:                                ; preds = %dec_label_pc_50b1, %dec_label_pc_4f46
  %nRequired_-120.1 = phi i32 [ 0, %dec_label_pc_4f46 ], [ %nRequired_-120.0, %dec_label_pc_50b1 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_4f46 ], [ %v4_50b1, %dec_label_pc_50b1 ]
  %v1_50b8 = load i32, i32* @esp, align 4
  %v2_50b8 = inttoptr i32 %v1_50b8 to i32*
  store i32 %tmp6, i32* %v2_50b8, align 4
  %v1_50bb = inttoptr i32 %storemerge to i32*
  %v2_50bb = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_50bb)
  %v1_50c0 = add i32 %v2_50bb, -1
  %tmp48 = icmp ugt i32 %v1_50c0, %storemerge
  br i1 %tmp48, label %dec_label_pc_50c8, label %dec_label_pc_50d7

dec_label_pc_50c8:                                ; preds = %dec_label_pc_50b5
  %v5_50ce = icmp slt i32 %nRequired_-120.1, %v3_4fe2
  br i1 %v5_50ce, label %dec_label_pc_50dc, label %dec_label_pc_50d7

dec_label_pc_50d7:                                ; preds = %dec_label_pc_50b5, %dec_label_pc_50c8
  br label %dec_label_pc_50dc

dec_label_pc_50dc:                                ; preds = %dec_label_pc_50c8, %dec_label_pc_50d7
  %storemerge3 = phi i1 [ false, %dec_label_pc_50d7 ], [ true, %dec_label_pc_50c8 ]
  br i1 %storemerge3, label %dec_label_pc_4ff7, label %dec_label_pc_50e4

dec_label_pc_50e4:                                ; preds = %dec_label_pc_50dc
  %v15_50e7 = icmp eq i32 %nRequired_-120.1, %v3_4fe2
  %v1_50ea = zext i1 %v15_50e7 to i32
  %v3_50ea = and i32 %nRequired_-120.1, -256
  %v4_50ea = or i32 %v1_50ea, %v3_50ea
  store i32 %v4_50ea, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_50f9

bb:                                               ; preds = %dec_label_pc_50e4
  %v1_50f7 = call i32 @function_50fe()
  br label %dec_label_pc_50f9

dec_label_pc_50f9:                                ; preds = %bb, %dec_label_pc_50e4
  %v2_50f7 = phi i32 [ %v1_50f7, %bb ], [ %v4_50ea, %dec_label_pc_50e4 ]
  %tmp47 = urem i32 %v2_50f7, 2
  %v3_50f7 = icmp ne i32 %tmp47, 0
  ret i1 %v3_50f7

; uselistorder directives
  uselistorder i32* %v1_50bb, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 3, 2, 1 }
  uselistorder i32 %nRequired_-120.1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %tmp6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_50dc, { 1, 0 }
  uselistorder label %dec_label_pc_50d7, { 1, 0 }
}

define i32 @function_50fe() local_unnamed_addr {
dec_label_pc_50fe:
  %v0_50ff = load i32, i32* @eax, align 4
  ret i32 %v0_50ff
}

define i1 @_Z6SolverRK9CKeyStoreRK7CScript7uint256iRS2_R10txnouttype(i32 %keystore, %CScript %scriptPubKey, %uint256.26 %hash, i32 %nHashType, %CScript %scriptSigRet, i32 %whichTypeRet) local_unnamed_addr {
dec_label_pc_5100:
  %tmp3 = extractvalue %CScript %scriptPubKey, 0
  %stack_var_-260 = alloca i32, align 4
  %tmp39 = call i32 @__decompiler_undefined_function_0()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-412 = alloca i32, align 4
  %v1_5193 = inttoptr i32 %tmp41 to i32*
  %v2_5193 = call i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %v1_5193)
  %v2_5198 = ptrtoint i32* %stack_var_-260 to i32
  store i32 %v2_5198, i32* %stack_var_-412, align 4
  %v1_51a1 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_5198)
  store i32 %tmp3, i32* %stack_var_-412, align 4
  %v4_51c3 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_5198, 0
  %v5_51c3 = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %scriptPubKey, i32 %tmp39, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_51c3)
  br i1 false, label %dec_label_pc_51d9, label %dec_label_pc_51cf

dec_label_pc_51cf:                                ; preds = %dec_label_pc_5100
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_5532

dec_label_pc_51d9:                                ; preds = %dec_label_pc_5100
  switch i32 undef, label %dec_label_pc_552d [
    i32 0, label %dec_label_pc_51fe
    i32 1, label %dec_label_pc_5208
    i32 2, label %dec_label_pc_52f8
    i32 3, label %dec_label_pc_5430
    i32 4, label %dec_label_pc_5497
  ]

dec_label_pc_51fe:                                ; preds = %dec_label_pc_51d9
  br label %dec_label_pc_5532

dec_label_pc_5208:                                ; preds = %dec_label_pc_51d9
  br label %dec_label_pc_5532

dec_label_pc_52f8:                                ; preds = %dec_label_pc_51d9
  br i1 false, label %dec_label_pc_53d7, label %dec_label_pc_53cd

dec_label_pc_53cd:                                ; preds = %dec_label_pc_52f8
  br label %dec_label_pc_5532

dec_label_pc_53d7:                                ; preds = %dec_label_pc_52f8
  br label %dec_label_pc_5532

dec_label_pc_5430:                                ; preds = %dec_label_pc_51d9
  br label %dec_label_pc_5532

dec_label_pc_5497:                                ; preds = %dec_label_pc_51d9
  br label %dec_label_pc_5532

dec_label_pc_552d:                                ; preds = %dec_label_pc_51d9
  br label %dec_label_pc_5532

dec_label_pc_5532:                                ; preds = %dec_label_pc_5497, %dec_label_pc_5430, %dec_label_pc_53d7, %dec_label_pc_53cd, %dec_label_pc_5208, %dec_label_pc_51fe, %dec_label_pc_552d, %dec_label_pc_51cf
  %v1_5538 = load i32, i32* @esp, align 4
  %v2_5538 = inttoptr i32 %v1_5538 to i32*
  store i32 %v2_5198, i32* %v2_5538, align 4
  %v0_553b = load i32, i32* %stack_var_-412, align 4
  %v1_553b = inttoptr i32 %v0_553b to i32*
  %v2_553b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_553b)
  %v0_5540 = load i32, i32* @ebx, align 4
  store i32 %v0_5540, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_554e

bb:                                               ; preds = %dec_label_pc_5532
  %v1_554c = call i32 @function_556f()
  store i32 %v1_554c, i32* @eax, align 4
  br label %dec_label_pc_554e

dec_label_pc_554e:                                ; preds = %bb, %dec_label_pc_5532
  %v0_554e = call i32 @function_556a()
  %tmp71 = urem i32 %v0_554e, 2
  %v2_554e = icmp ne i32 %tmp71, 0
  ret i1 %v2_554e

; uselistorder directives
  uselistorder i32 %v2_5198, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_5532, { 6, 0, 1, 2, 3, 4, 5, 7 }
}

define i32 @function_5551() local_unnamed_addr {
dec_label_pc_5551:
  %eax.global-to-local = alloca i32, align 4
  %v0_5551 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5551
}

define i32 @function_556a() local_unnamed_addr {
dec_label_pc_556a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_556f() local_unnamed_addr {
dec_label_pc_556f:
  %v0_556f = load i32, i32* @ebp, align 4
  %v1_556f = add i32 %v0_556f, -4
  %v2_556f = inttoptr i32 %v1_556f to i32*
  %v3_556f = load i32, i32* %v2_556f, align 4
  store i32 %v3_556f, i32* @ebx, align 4
  %v0_5573 = load i32, i32* @eax, align 4
  ret i32 %v0_5573
}

define i32 @_Z21ScriptSigArgsExpected10txnouttypeRKSt6vectorIS0_IhSaIhEESaIS2_EE(i32 %t, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutions) local_unnamed_addr {
dec_label_pc_5574:
  store i32 %t, i32* @3, align 4
  switch i32 %t, label %dec_label_pc_563b [
    i32 0, label %dec_label_pc_55a6
    i32 1, label %dec_label_pc_55b0
    i32 2, label %dec_label_pc_55ba
    i32 3, label %dec_label_pc_5634
    i32 4, label %dec_label_pc_55c1
  ]

dec_label_pc_55a6:                                ; preds = %dec_label_pc_5574
  store i32 -1, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_55b0:                                ; preds = %dec_label_pc_5574
  store i32 1, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_55ba:                                ; preds = %dec_label_pc_5574
  store i32 2, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_55c1:                                ; preds = %dec_label_pc_5574
  %tmp101 = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutions, 0
  %v1_55c7 = inttoptr i32 %tmp101 to i32*
  %v2_55c7 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_55c7)
  %v1_55cc = icmp eq i32 %v2_55c7, 0
  br i1 %v1_55cc, label %dec_label_pc_55fb, label %dec_label_pc_55d0

dec_label_pc_55d0:                                ; preds = %dec_label_pc_55c1
  %v3_55de = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v1_55c7, i32 0)
  %v1_55e6 = inttoptr i32 %v3_55de to i32*
  %v2_55e6 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_55e6)
  %v1_55eb = icmp eq i32 %v2_55e6, 0
  %phitmp = icmp eq i1 %v1_55eb, false
  br label %dec_label_pc_55fb

dec_label_pc_55fb:                                ; preds = %dec_label_pc_55d0, %dec_label_pc_55c1
  %storemerge = phi i1 [ false, %dec_label_pc_55c1 ], [ %phitmp, %dec_label_pc_55d0 ]
  br i1 %storemerge, label %dec_label_pc_5606, label %dec_label_pc_55ff

dec_label_pc_55ff:                                ; preds = %dec_label_pc_55fb
  store i32 -1, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_5606:                                ; preds = %dec_label_pc_55fb
  %v3_5614 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v1_55c7, i32 0)
  %v2_5624 = inttoptr i32 %v3_5614 to i32*
  %v3_5624 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v2_5624, i32 0)
  %v1_5629 = inttoptr i32 %v3_5624 to i8*
  %v2_5629 = load i8, i8* %v1_5629, align 1
  %v3_5629 = zext i8 %v2_5629 to i32
  %v1_562f = add nuw nsw i32 %v3_5629, 1
  store i32 %v1_562f, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_5634:                                ; preds = %dec_label_pc_5574
  store i32 1, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_563b:                                ; preds = %dec_label_pc_5574
  store i32 -1, i32* @eax, align 4
  br label %dec_label_pc_5640

dec_label_pc_5640:                                ; preds = %dec_label_pc_5634, %dec_label_pc_5606, %dec_label_pc_55ff, %dec_label_pc_55ba, %dec_label_pc_55b0, %dec_label_pc_55a6, %dec_label_pc_563b
  %v2_564a3 = phi i32 [ 1, %dec_label_pc_5634 ], [ %v1_562f, %dec_label_pc_5606 ], [ -1, %dec_label_pc_55ff ], [ 2, %dec_label_pc_55ba ], [ 1, %dec_label_pc_55b0 ], [ -1, %dec_label_pc_55a6 ], [ -1, %dec_label_pc_563b ]
  br i1 true, label %bb, label %dec_label_pc_564c

bb:                                               ; preds = %dec_label_pc_5640
  %v1_564a = call i32 @function_5651()
  br label %dec_label_pc_564c

dec_label_pc_564c:                                ; preds = %bb, %dec_label_pc_5640
  %v2_564a = phi i32 [ %v1_564a, %bb ], [ %v2_564a3, %dec_label_pc_5640 ]
  ret i32 %v2_564a

; uselistorder directives
  uselistorder i32* %v1_55c7, { 1, 0, 2 }
  uselistorder i32 %t, { 1, 0 }
  uselistorder label %dec_label_pc_5640, { 6, 0, 1, 2, 3, 4, 5 }
}

define i32 @function_5651() local_unnamed_addr {
dec_label_pc_5651:
  %v0_5652 = load i32, i32* @eax, align 4
  ret i32 %v0_5652
}

define i1 @_Z10IsStandardRK7CScript(%CScript %scriptPubKey) local_unnamed_addr {
dec_label_pc_5653:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_566b = ptrtoint i32* %stack_var_-36 to i32
  %v1_5671 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_566b)
  %v2_567d = ptrtoint i32* %stack_var_-24 to i32
  %v4_568a = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_566b, 0
  %v5_568a = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %scriptPubKey, i32 %v2_567d, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_568a)
  br i1 false, label %dec_label_pc_569d, label %dec_label_pc_5696

dec_label_pc_5696:                                ; preds = %dec_label_pc_5653
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_5718

dec_label_pc_569d:                                ; preds = %dec_label_pc_5653
  br i1 undef, label %dec_label_pc_5710, label %dec_label_pc_56a5

dec_label_pc_56a5:                                ; preds = %dec_label_pc_569d
  br i1 undef, label %dec_label_pc_56f3, label %dec_label_pc_56ed

dec_label_pc_56ed:                                ; preds = %dec_label_pc_56a5
  br i1 undef, label %dec_label_pc_56fa, label %dec_label_pc_56f3

dec_label_pc_56f3:                                ; preds = %dec_label_pc_56ed, %dec_label_pc_56a5
  br label %dec_label_pc_5718

dec_label_pc_56fa:                                ; preds = %dec_label_pc_56ed
  br i1 undef, label %dec_label_pc_5709, label %dec_label_pc_5700

dec_label_pc_5700:                                ; preds = %dec_label_pc_56fa
  br i1 undef, label %dec_label_pc_5709, label %dec_label_pc_5700.dec_label_pc_5710_crit_edge

dec_label_pc_5700.dec_label_pc_5710_crit_edge:    ; preds = %dec_label_pc_5700
  br label %dec_label_pc_5710

dec_label_pc_5709:                                ; preds = %dec_label_pc_5700, %dec_label_pc_56fa
  br label %dec_label_pc_5718

dec_label_pc_5710:                                ; preds = %dec_label_pc_5700.dec_label_pc_5710_crit_edge, %dec_label_pc_569d
  br label %dec_label_pc_5718

dec_label_pc_5718:                                ; preds = %dec_label_pc_5710, %dec_label_pc_5709, %dec_label_pc_56f3, %dec_label_pc_5696
  %v2_571e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* nonnull %stack_var_-36)
  %v0_5723 = load i32, i32* @ebx, align 4
  store i32 %v0_5723, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5731

bb:                                               ; preds = %dec_label_pc_5718
  %v1_572f = call i32 @function_574f()
  store i32 %v1_572f, i32* @eax, align 4
  br label %dec_label_pc_5731

dec_label_pc_5731:                                ; preds = %bb, %dec_label_pc_5718
  %v0_5731 = call i32 @function_574a()
  %tmp114 = urem i32 %v0_5731, 2
  %v2_5731 = icmp ne i32 %tmp114, 0
  ret i1 %v2_5731
}

define i32 @function_5734() local_unnamed_addr {
dec_label_pc_5734:
  %eax.global-to-local = alloca i32, align 4
  %v0_5734 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5734
}

define i32 @function_574a() local_unnamed_addr {
dec_label_pc_574a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_574f() local_unnamed_addr {
dec_label_pc_574f:
  %v0_5754 = load i32, i32* @eax, align 4
  ret i32 %v0_5754
}

define i32 @_Z8HaveKeysRKSt6vectorIS_IhSaIhEESaIS1_EERK9CKeyStore(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %pubkeys, i32 %keystore) local_unnamed_addr {
dec_label_pc_5755:
  %eax.global-to-local = alloca i32, align 4
  %tmp = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %pubkeys, 0
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-101 = alloca i32, align 4
  %stack_var_-102 = alloca i8, align 1
  %_foreach_col1357_-128 = alloca i32, align 4
  %nResult_-132 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v2_5782 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_5782, i32* %eax.global-to-local, align 4
  %v3_579d = call i32 @_ZN5boost15foreach_detail_7containIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS9_PN4mpl_5bool_ILb0EEE(i32 %v2_5782, i32 %tmp, i32 0)
  store i32 %v2_5782, i32* %eax.global-to-local, align 4
  %v1_57b4 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_5782)
  store i32 %v1_57b4, i32* %eax.global-to-local, align 4
  %v4_57b9 = trunc i32 %v1_57b4 to i8
  %v5_57b9 = icmp eq i8 %v4_57b9, 0
  %v1_57bb = icmp eq i1 %v5_57b9, false
  br i1 %v1_57bb, label %dec_label_pc_5922, label %dec_label_pc_57c1

dec_label_pc_57c1:                                ; preds = %dec_label_pc_5755
  %v2_57c1 = ptrtoint i32* %nResult_-132 to i32
  store i32 %v2_57c1, i32* %eax.global-to-local, align 4
  %v4_57de = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %v2_57c1, i32 %v2_5782, i32 0, i32 0)
  store i32 %v2_57c1, i32* %eax.global-to-local, align 4
  %v1_57f2 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_57c1)
  store i32 %v1_57f2, i32* %eax.global-to-local, align 4
  %v4_57f7 = trunc i32 %v1_57f2 to i8
  %v5_57f7 = icmp eq i8 %v4_57f7, 0
  %v1_57f9 = icmp eq i1 %v5_57f7, false
  br i1 %v1_57f9, label %dec_label_pc_5922, label %dec_label_pc_57ff

dec_label_pc_57ff:                                ; preds = %dec_label_pc_57c1
  %v2_57ff = ptrtoint i32* %_foreach_col1357_-128 to i32
  store i32 %v2_57ff, i32* %eax.global-to-local, align 4
  %v4_581c = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %v2_57ff, i32 %v2_5782, i32 0, i32 0)
  store i32 %v2_57ff, i32* %eax.global-to-local, align 4
  %v1_5830 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_57ff)
  store i32 %v1_5830, i32* %eax.global-to-local, align 4
  %v4_5835 = trunc i32 %v1_5830 to i8
  %v5_5835 = icmp eq i8 %v4_5835, 0
  %v1_5837 = icmp eq i1 %v5_5835, false
  br i1 %v1_5837, label %dec_label_pc_5922, label %dec_label_pc_583d

dec_label_pc_583d:                                ; preds = %dec_label_pc_57ff
  store i8 1, i8* %stack_var_-102, align 1
  %v2_5846 = ptrtoint i8* %stack_var_-102 to i32
  %v2_5874 = ptrtoint i32* %stack_var_-101 to i32
  %v2_587f = ptrtoint i32* %stack_var_-36 to i32
  %v1_589a = inttoptr i32 %keystore to i32*
  br label %dec_label_pc_58e5

dec_label_pc_5846:                                ; preds = %dec_label_pc_591a
  store i32 %v2_5846, i32* %eax.global-to-local, align 4
  %v1_5849 = load i32, i32* @esp, align 4
  %v2_5849 = inttoptr i32 %v1_5849 to i32*
  store i32 %v2_5846, i32* %v2_5849, align 4
  %v0_584c = load i8, i8* %stack_var_-102, align 1
  %v1_584c = sext i8 %v0_584c to i32
  %v2_584c = inttoptr i32 %v1_584c to i8*
  %v3_584c = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v2_584c)
  store i32 %v3_584c, i32* %eax.global-to-local, align 4
  %v4_5851 = trunc i32 %v3_584c to i8
  %v5_5851 = icmp eq i8 %v4_5851, 0
  %v1_5853 = icmp eq i1 %v5_5851, false
  br i1 %v1_5853, label %dec_label_pc_5846.dec_label_pc_58ca_crit_edge, label %dec_label_pc_5855

dec_label_pc_5846.dec_label_pc_58ca_crit_edge:    ; preds = %dec_label_pc_5846
  %v3_58ca.pre = load i8, i8* %stack_var_-102, align 1
  br label %dec_label_pc_58ca

dec_label_pc_5855:                                ; preds = %dec_label_pc_5846
  %v0_5855 = load i32, i32* @esp, align 4
  %v1_5855 = add i32 %v0_5855, 4
  %v2_5855 = inttoptr i32 %v1_5855 to i32*
  store i32 0, i32* %v2_5855, align 4
  store i32 %v2_57c1, i32* %eax.global-to-local, align 4
  %v1_5860 = load i32, i32* @esp, align 4
  %v2_5860 = inttoptr i32 %v1_5860 to i32*
  store i32 %v2_57c1, i32* %v2_5860, align 4
  %v0_5863 = load i8, i8* %stack_var_-102, align 1
  %v1_5863 = sext i8 %v0_5863 to i32
  %v3_5863 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE(i32 %v1_5863, i32 ptrtoint (i32* @9 to i32))
  %v3_58bf.pre = load i8, i8* %stack_var_-102, align 1
  %v4_58bf41 = zext i8 %v3_58bf.pre to i32
  %v1_58c342 = xor i32 %v4_58bf41, 1
  store i32 %v1_58c342, i32* %eax.global-to-local, align 4
  %v5_58c647 = icmp eq i32 %v1_58c342, 0
  %v1_58c849 = icmp eq i1 %v5_58c647, false
  br i1 %v1_58c849, label %dec_label_pc_586d, label %dec_label_pc_58ca

dec_label_pc_586d:                                ; preds = %dec_label_pc_5855
  %v1_5870 = load i32, i32* @esp, align 4
  %v2_5870 = add i32 %v1_5870, 4
  %v3_5870 = inttoptr i32 %v2_5870 to i32*
  store i32 %v3_5863, i32* %v3_5870, align 4
  store i32 %v2_5874, i32* %eax.global-to-local, align 4
  %v1_5877 = load i32, i32* @esp, align 4
  %v2_5877 = inttoptr i32 %v1_5877 to i32*
  store i32 %v2_5874, i32* %v2_5877, align 4
  %v2_587a = call i32 @_ZN7CPubKeyC1ERKSt6vectorIhSaIhEE(i32 %v3_5863, i32 ptrtoint (i32* @9 to i32))
  store i32 %v2_587f, i32* %eax.global-to-local, align 4
  %v1_5885 = load i32, i32* @esp, align 4
  %v2_5885 = add i32 %v1_5885, 4
  %v3_5885 = inttoptr i32 %v2_5885 to i32*
  store i32 %v2_5874, i32* %v3_5885, align 4
  %v1_5889 = load i32, i32* @esp, align 4
  %v2_5889 = inttoptr i32 %v1_5889 to i32*
  store i32 %v2_587f, i32* %v2_5889, align 4
  %v2_588c = call i32 @_ZNK7CPubKey5GetIDEv(i32 %v3_5863, i32 ptrtoint (i32* @9 to i32))
  %v0_5891 = load i32, i32* @esp, align 4
  store i32 %keystore, i32* %eax.global-to-local, align 4
  %v2_589a = load i32, i32* %v1_589a, align 4
  %v1_589c = add i32 %v2_589a, 16
  store i32 %v1_589c, i32* %eax.global-to-local, align 4
  %v3_58a4 = inttoptr i32 %v0_5891 to i32*
  store i32 %v2_587f, i32* %v3_58a4, align 4
  store i32 %keystore, i32* %eax.global-to-local, align 4
  %v1_58ae = load i32, i32* @esp, align 4
  %v2_58ae = inttoptr i32 %v1_58ae to i32*
  store i32 %keystore, i32* %v2_58ae, align 4
  %v0_58b3 = load i32, i32* %eax.global-to-local, align 4
  %v4_58b3 = trunc i32 %v0_58b3 to i8
  %v5_58b3 = icmp eq i8 %v4_58b3, 0
  br i1 %v5_58b3, label %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge, label %dec_label_pc_58b7

dec_label_pc_58b7:                                ; preds = %dec_label_pc_586d
  %v4_58b7 = add i32 %_foreach_cur1357_-124.3, 1
  br label %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge

dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge: ; preds = %dec_label_pc_586d, %dec_label_pc_58b7
  %_foreach_cur1357_-124.0 = phi i32 [ %_foreach_cur1357_-124.3, %dec_label_pc_586d ], [ %v4_58b7, %dec_label_pc_58b7 ]
  store i8 1, i8* %stack_var_-102, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_58ca

dec_label_pc_58ca:                                ; preds = %dec_label_pc_5855, %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge, %dec_label_pc_5846.dec_label_pc_58ca_crit_edge
  %v0_58e0 = phi i8 [ %v3_58ca.pre, %dec_label_pc_5846.dec_label_pc_58ca_crit_edge ], [ 1, %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge ], [ %v3_58bf.pre, %dec_label_pc_5855 ]
  %_foreach_cur1357_-124.2 = phi i32 [ %_foreach_cur1357_-124.3, %dec_label_pc_5846.dec_label_pc_58ca_crit_edge ], [ %_foreach_cur1357_-124.0, %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge ], [ %_foreach_cur1357_-124.3, %dec_label_pc_5855 ]
  %v4_58ca = zext i8 %v0_58e0 to i32
  store i32 %v4_58ca, i32* %eax.global-to-local, align 4
  %v5_58ce = icmp eq i8 %v0_58e0, 0
  br i1 %v5_58ce, label %dec_label_pc_58e5, label %dec_label_pc_58d2

dec_label_pc_58d2:                                ; preds = %dec_label_pc_58ca
  %v0_58d2 = load i32, i32* @esp, align 4
  %v1_58d2 = add i32 %v0_58d2, 4
  %v2_58d2 = inttoptr i32 %v1_58d2 to i32*
  store i32 0, i32* %v2_58d2, align 4
  store i32 %v2_57c1, i32* %eax.global-to-local, align 4
  %v1_58dd = load i32, i32* @esp, align 4
  %v2_58dd = inttoptr i32 %v1_58dd to i32*
  store i32 %v2_57c1, i32* %v2_58dd, align 4
  %v1_58e0 = sext i8 %v0_58e0 to i32
  %v3_58e0 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v1_58e0, i32 ptrtoint (i32* @9 to i32))
  store i32 %v3_58e0, i32* %eax.global-to-local, align 4
  %v3_58e5.pre.pre = load i8, i8* %stack_var_-102, align 1
  br label %dec_label_pc_58e5

dec_label_pc_58e5:                                ; preds = %dec_label_pc_58d2, %dec_label_pc_58ca, %dec_label_pc_583d
  %v0_5902 = phi i8 [ 1, %dec_label_pc_583d ], [ 0, %dec_label_pc_58ca ], [ %v3_58e5.pre.pre, %dec_label_pc_58d2 ]
  %_foreach_cur1357_-124.3 = phi i32 [ 0, %dec_label_pc_583d ], [ %_foreach_cur1357_-124.2, %dec_label_pc_58ca ], [ %_foreach_cur1357_-124.2, %dec_label_pc_58d2 ]
  %v4_58e5 = zext i8 %v0_5902 to i32
  store i32 %v4_58e5, i32* %eax.global-to-local, align 4
  %v5_58e9 = icmp eq i8 %v0_5902, 0
  br i1 %v5_58e9, label %dec_label_pc_5915, label %dec_label_pc_58ed

dec_label_pc_58ed:                                ; preds = %dec_label_pc_58e5
  %v0_58ed = load i32, i32* @esp, align 4
  %v1_58ed = add i32 %v0_58ed, 8
  %v2_58ed = inttoptr i32 %v1_58ed to i32*
  store i32 0, i32* %v2_58ed, align 4
  %v1_58f8 = load i32, i32* @esp, align 4
  %v2_58f8 = add i32 %v1_58f8, 4
  %v3_58f8 = inttoptr i32 %v2_58f8 to i32*
  store i32 %v2_57ff, i32* %v3_58f8, align 4
  store i32 %v2_57c1, i32* %eax.global-to-local, align 4
  %v1_58ff = load i32, i32* @esp, align 4
  %v2_58ff = inttoptr i32 %v1_58ff to i32*
  store i32 %v2_57c1, i32* %v2_58ff, align 4
  %v1_5902 = sext i8 %v0_5902 to i32
  %v4_5902 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE(i32 %v1_5902, i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  %v1_5907 = xor i32 %v4_5902, 1
  %v4_5907 = trunc i32 %v1_5907 to i8
  store i32 %v1_5907, i32* %eax.global-to-local, align 4
  %v5_590a = icmp eq i8 %v4_5907, 0
  br i1 %v5_590a, label %dec_label_pc_5915, label %dec_label_pc_591a

dec_label_pc_5915:                                ; preds = %dec_label_pc_58ed, %dec_label_pc_58e5
  br label %dec_label_pc_591a

dec_label_pc_591a:                                ; preds = %dec_label_pc_58ed, %dec_label_pc_5915
  %storemerge = phi i32 [ 0, %dec_label_pc_5915 ], [ 1, %dec_label_pc_58ed ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_591a = icmp eq i32 %storemerge, 0
  %v1_591c = icmp eq i1 %v5_591a, false
  br i1 %v1_591c, label %dec_label_pc_5846, label %dec_label_pc_5922

dec_label_pc_5922:                                ; preds = %dec_label_pc_591a, %dec_label_pc_57ff, %dec_label_pc_57c1, %dec_label_pc_5755
  %_foreach_cur1357_-124.4 = phi i32 [ 0, %dec_label_pc_5755 ], [ 0, %dec_label_pc_57c1 ], [ 0, %dec_label_pc_57ff ], [ %_foreach_cur1357_-124.3, %dec_label_pc_591a ]
  store i32 %_foreach_cur1357_-124.4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5931

bb:                                               ; preds = %dec_label_pc_5922
  %v1_592f = call i32 @function_5936()
  store i32 %v1_592f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_5931

dec_label_pc_5931:                                ; preds = %bb, %dec_label_pc_5922
  %v2_592f = phi i32 [ %v1_592f, %bb ], [ %_foreach_cur1357_-124.4, %dec_label_pc_5922 ]
  ret i32 %v2_592f

; uselistorder directives
  uselistorder i32 %_foreach_cur1357_-124.3, { 0, 3, 4, 2, 1 }
  uselistorder i8 %v0_5902, { 0, 2, 1 }
  uselistorder i8 %v0_58e0, { 0, 2, 1 }
  uselistorder i32 %v2_57ff, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_57c1, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9 }
  uselistorder i32 %v2_5782, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8* %stack_var_-102, { 0, 5, 2, 3, 1, 4, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 16, 17, 18, 9, 10, 11, 12, 3, 4, 5, 6, 7, 8, 1, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32 (i32, i32)* @_ZNK7CPubKey5GetIDEv, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CPubKeyC1ERKSt6vectorIhSaIhEE, { 2, 1, 0 }
  uselistorder i32 %keystore, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_591a, { 1, 0 }
  uselistorder label %dec_label_pc_58ca, { 1, 0, 2 }
  uselistorder label %dec_label_pc_58bf.dec_label_pc_58ca.loopexit_crit_edge, { 1, 0 }
}

define i32 @function_5936() local_unnamed_addr {
dec_label_pc_5936:
  %v0_5937 = load i32, i32* @eax, align 4
  ret i32 %v0_5937
}

define i1 @_Z6IsMineRK9CKeyStoreRKN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS2_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EE(i32 %keystore, i32 %dest) local_unnamed_addr {
dec_label_pc_5938:
  %stack_var_-20 = alloca i32, align 4
  %v2_595d = ptrtoint i32* %stack_var_-20 to i32
  %v3_5963 = call i32 @_ZN22CKeyStoreIsMineVisitorC1EPK9CKeyStore(i32* nonnull %stack_var_-20, i32 %keystore)
  %v2_5975 = call i32 @_ZN5boost13apply_visitorI22CKeyStoreIsMineVisitorKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENT_11result_typeERKSB_RT0_(i32 %v2_595d, i32 %dest)
  store i32 %v2_5975, i32* @ebx, align 4
  %v1_5982 = call i32 @_ZN22CKeyStoreIsMineVisitorD1Ev(i32 %v2_595d)
  %v0_5987 = load i32, i32* @ebx, align 4
  store i32 %v0_5987, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5995

bb:                                               ; preds = %dec_label_pc_5938
  %v1_5993 = call i32 @function_59b3()
  store i32 %v1_5993, i32* @eax, align 4
  br label %dec_label_pc_5995

dec_label_pc_5995:                                ; preds = %bb, %dec_label_pc_5938
  %v0_5995 = call i32 @function_59ae()
  %tmp106 = urem i32 %v0_5995, 2
  %v2_5995 = icmp ne i32 %tmp106, 0
  ret i1 %v2_5995
}

define i32 @function_5998() local_unnamed_addr {
dec_label_pc_5998:
  %eax.global-to-local = alloca i32, align 4
  %v0_5998 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5998
}

define i32 @function_599e() local_unnamed_addr {
dec_label_pc_599e:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_599e = load i32, i32* %eax.global-to-local, align 4
  %v11_599e = and i32 %v0_599e, -24
  store i32 %v11_599e, i32* @eax, align 4
  %v0_59a0 = load i32, i32* %esi.global-to-local, align 4
  %v1_59a0 = add i32 %v0_59a0, 1
  store i32 %v1_59a0, i32* %esi.global-to-local, align 4
  %v0_59a1 = call i32 @function_d8890000()
  store i32 %v0_59a1, i32* %eax.global-to-local, align 4
  ret i32 %v0_59a1
}

define i32 @function_59ae() local_unnamed_addr {
dec_label_pc_59ae:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_59b3() local_unnamed_addr {
dec_label_pc_59b3:
  %v0_59b8 = load i32, i32* @eax, align 4
  ret i32 %v0_59b8
}

define i1 @_Z6IsMineRK9CKeyStoreRK7CScript(i32 %keystore, %CScript %scriptPubKey) local_unnamed_addr {
dec_label_pc_59b9:
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-244 = alloca i32, align 4
  %v2_59e0 = ptrtoint i32* %stack_var_-244 to i32
  %v1_59e9 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_59e0)
  %v2_59f8 = ptrtoint i32* %stack_var_-220 to i32
  %v4_5a0b = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_59e0, 0
  %v5_5a0b = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %scriptPubKey, i32 %v2_59f8, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_5a0b)
  br i1 false, label %dec_label_pc_5a21, label %dec_label_pc_5a17

dec_label_pc_5a17:                                ; preds = %dec_label_pc_59b9
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_5d5f

dec_label_pc_5a21:                                ; preds = %dec_label_pc_59b9
  switch i32 undef, label %dec_label_pc_5d5a [
    i32 0, label %dec_label_pc_5a44
    i32 1, label %dec_label_pc_5a4e
    i32 2, label %dec_label_pc_5ae4
    i32 3, label %dec_label_pc_5b5f
    i32 4, label %dec_label_pc_5c08
  ]

dec_label_pc_5a44:                                ; preds = %dec_label_pc_5a21
  br label %dec_label_pc_5d5f

dec_label_pc_5a4e:                                ; preds = %dec_label_pc_5a21
  br label %dec_label_pc_5d5f

dec_label_pc_5ae4:                                ; preds = %dec_label_pc_5a21
  br label %dec_label_pc_5d5f

dec_label_pc_5b5f:                                ; preds = %dec_label_pc_5a21
  br i1 undef, label %dec_label_pc_5bdb, label %dec_label_pc_5bf5

dec_label_pc_5bdb:                                ; preds = %dec_label_pc_5b5f
  br label %dec_label_pc_5bf5

dec_label_pc_5bf5:                                ; preds = %dec_label_pc_5b5f, %dec_label_pc_5bdb
  br label %dec_label_pc_5d5f

dec_label_pc_5c08:                                ; preds = %dec_label_pc_5a21
  br label %dec_label_pc_5d5f

dec_label_pc_5d5a:                                ; preds = %dec_label_pc_5a21
  br label %dec_label_pc_5d5f

dec_label_pc_5d5f:                                ; preds = %dec_label_pc_5c08, %dec_label_pc_5bf5, %dec_label_pc_5ae4, %dec_label_pc_5a4e, %dec_label_pc_5a44, %dec_label_pc_5d5a, %dec_label_pc_5a17
  %v1_5d65 = load i32, i32* @esp, align 4
  %v2_5d65 = inttoptr i32 %v1_5d65 to i32*
  store i32 %v2_59e0, i32* %v2_5d65, align 4
  %v0_5d68 = load i32, i32* %stack_var_-336, align 4
  %v1_5d68 = inttoptr i32 %v0_5d68 to i32*
  %v2_5d68 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_5d68)
  %v0_5d6d = load i32, i32* @ebx, align 4
  store i32 %v0_5d6d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5d7b

bb:                                               ; preds = %dec_label_pc_5d5f
  %v1_5d79 = call i32 @function_5ddc()
  store i32 %v1_5d79, i32* @eax, align 4
  br label %dec_label_pc_5d7b

dec_label_pc_5d7b:                                ; preds = %bb, %dec_label_pc_5d5f
  %v0_5d7b = call i32 @function_5dd7()
  %tmp58 = urem i32 %v0_5d7b, 2
  %v2_5d7b = icmp ne i32 %tmp58, 0
  ret i1 %v2_5d7b

; uselistorder directives
  uselistorder i32 %v2_59e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_5d5f, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_5bf5, { 1, 0 }
}

define i32 @function_5d7d() local_unnamed_addr {
dec_label_pc_5d7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_5d7d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5d7d, i32* @ebx, align 4
  %v0_5d7f = load i32, i32* @ebp, align 4
  %v1_5d7f = add i32 %v0_5d7f, -228
  store i32 %v1_5d7f, i32* %eax.global-to-local, align 4
  %v1_5d88 = call i32 @_ZN7CScriptD1Ev(i32 %v1_5d7f)
  store i32 %v1_5d88, i32* %eax.global-to-local, align 4
  %v0_5d8d = call i32 @function_5dbf()
  store i32 %v0_5d8d, i32* %eax.global-to-local, align 4
  ret i32 %v0_5d8d
}

define i32 @function_5d8f() local_unnamed_addr {
dec_label_pc_5d8f:
  %eax.global-to-local = alloca i32, align 4
  %v0_5d99 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5d99, i32* @ebx, align 4
  %v0_5d9b = load i32, i32* @ebp, align 4
  %v1_5d9b = add i32 %v0_5d9b, -178
  store i32 %v1_5d9b, i32* %eax.global-to-local, align 4
  %v1_5da4 = call i32 @_ZNSaISt6vectorIhSaIhEEED1Ev(i32 %v1_5d9b)
  store i32 %v1_5da4, i32* %eax.global-to-local, align 4
  %v0_5da9 = call i32 @function_5dbf()
  store i32 %v0_5da9, i32* %eax.global-to-local, align 4
  ret i32 %v0_5da9
}

define i32 @function_5dab() local_unnamed_addr {
dec_label_pc_5dab:
  %eax.global-to-local = alloca i32, align 4
  %v0_5dab = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5dab, i32* @ebx, align 4
  %v0_5dad = load i32, i32* @ebp, align 4
  %v1_5dad = add i32 %v0_5dad, -228
  store i32 %v1_5dad, i32* %eax.global-to-local, align 4
  %v1_5db6 = inttoptr i32 %v1_5dad to i32*
  %v2_5db6 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_5db6)
  store i32 %v2_5db6, i32* %eax.global-to-local, align 4
  %v0_5dbb = call i32 @function_5dbf()
  store i32 %v0_5dbb, i32* %eax.global-to-local, align 4
  ret i32 %v0_5dbb

; uselistorder directives
  uselistorder i32 ()* @function_5dbf, { 2, 1, 0 }
}

define i32 @function_5dbe() local_unnamed_addr {
dec_label_pc_5dbe:
  %eax.global-to-local = alloca i32, align 4
  %v0_5dbe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_5dbe
}

define i32 @function_5dbf() local_unnamed_addr {
dec_label_pc_5dbf:
  %v0_5dbf = load i32, i32* @ebp, align 4
  %v1_5dbf = add i32 %v0_5dbf, -240
  %v1_5dc8 = inttoptr i32 %v1_5dbf to i32*
  %v2_5dc8 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_5dc8)
  %v0_5dcd = load i32, i32* @ebx, align 4
  ret i32 %v0_5dcd
}

define i32 @function_5dd7() local_unnamed_addr {
dec_label_pc_5dd7:
  %v0_5dd7 = load i32, i32* @eax, align 4
  ret i32 %v0_5dd7
}

define i32 @function_5ddc() local_unnamed_addr {
dec_label_pc_5ddc:
  %v0_5de0 = load i32, i32* @eax, align 4
  ret i32 %v0_5de0
}

define i1 @_Z18ExtractDestinationRK7CScriptRN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS2_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EE(%CScript %scriptPubKey, i32 %addressRet) local_unnamed_addr {
dec_label_pc_5de1:
  %tmp = extractvalue %CScript %scriptPubKey, 0
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %vSolutions_-208 = alloca %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>", align 8
  %stack_var_-236 = alloca i32, align 4
  %v4_5dee = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %tmp, 0
  store %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_5dee, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>"* %vSolutions_-208, align 8
  %v2_5e08 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_5e08, i32* %stack_var_-236, align 4
  %v1_5e11 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_5e08)
  %v2_5e20 = ptrtoint i32* %stack_var_-188 to i32
  %v4_5e2a = getelementptr inbounds %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>", %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>"* %vSolutions_-208, i32 0, i32 0
  %v5_5e2a = load i32, i32* %v4_5e2a, align 8
  store i32 %v5_5e2a, i32* %stack_var_-236, align 4
  %v3_5e33 = insertvalue %CScript undef, i32 %v5_5e2a, 0
  %v4_5e33 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_5e08, 0
  %v5_5e33 = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %v3_5e33, i32 %v2_5e20, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_5e33)
  br i1 false, label %dec_label_pc_5e49, label %dec_label_pc_5e3f

dec_label_pc_5e3f:                                ; preds = %dec_label_pc_5de1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_5f74

dec_label_pc_5e49:                                ; preds = %dec_label_pc_5de1
  br i1 undef, label %dec_label_pc_5eb3, label %dec_label_pc_5e54

dec_label_pc_5e54:                                ; preds = %dec_label_pc_5e49
  br label %dec_label_pc_5f74

dec_label_pc_5eb3:                                ; preds = %dec_label_pc_5e49
  br i1 undef, label %dec_label_pc_5f11, label %dec_label_pc_5ebe

dec_label_pc_5ebe:                                ; preds = %dec_label_pc_5eb3
  br label %dec_label_pc_5f74

dec_label_pc_5f11:                                ; preds = %dec_label_pc_5eb3
  br i1 undef, label %dec_label_pc_5f6f, label %dec_label_pc_5f1c

dec_label_pc_5f1c:                                ; preds = %dec_label_pc_5f11
  br label %dec_label_pc_5f74

dec_label_pc_5f6f:                                ; preds = %dec_label_pc_5f11
  br label %dec_label_pc_5f74

dec_label_pc_5f74:                                ; preds = %dec_label_pc_5f6f, %dec_label_pc_5f1c, %dec_label_pc_5ebe, %dec_label_pc_5e54, %dec_label_pc_5e3f
  %v1_5f7a = load i32, i32* @esp, align 4
  %v2_5f7a = inttoptr i32 %v1_5f7a to i32*
  store i32 %v2_5e08, i32* %v2_5f7a, align 4
  %v0_5f7d = load i32, i32* %stack_var_-236, align 4
  %v1_5f7d = inttoptr i32 %v0_5f7d to i32*
  %v2_5f7d = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_5f7d)
  %v0_5f82 = load i32, i32* @ebx, align 4
  store i32 %v0_5f82, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_5fac

bb:                                               ; preds = %dec_label_pc_5f74
  %v1_5f8e = call i32 @function_5fb1()
  br label %dec_label_pc_5fac

dec_label_pc_5fac:                                ; preds = %dec_label_pc_5f74, %bb
  %v0_5f90 = phi i32 [ %v0_5f82, %dec_label_pc_5f74 ], [ %v1_5f8e, %bb ]
  %tmp26 = urem i32 %v0_5f90, 2
  %v1_5f90 = icmp ne i32 %tmp26, 0
  ret i1 %v1_5f90

; uselistorder directives
  uselistorder i32 %v2_5e08, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_5fac, { 1, 0 }
}

define i32 @function_5f92() local_unnamed_addr {
dec_label_pc_5f92:
  %eax.global-to-local = alloca i32, align 4
  %v0_5f92 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_5f92, i32* @ebx, align 4
  %v0_5f94 = load i32, i32* @ebp, align 4
  %v1_5f94 = add i32 %v0_5f94, -196
  store i32 %v1_5f94, i32* %eax.global-to-local, align 4
  %v1_5f9d = inttoptr i32 %v1_5f94 to i32*
  %v2_5f9d = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_5f9d)
  %v0_5fa2 = load i32, i32* @ebx, align 4
  store i32 %v0_5fa2, i32* %eax.global-to-local, align 4
  ret i32 %v0_5fa2

; uselistorder directives
  uselistorder i32 -196, { 0, 4, 3, 5, 1, 2 }
}

define i32 @function_5fb1() local_unnamed_addr {
dec_label_pc_5fb1:
  %v0_5fb1 = load i32, i32* @ebp, align 4
  %v1_5fb1 = add i32 %v0_5fb1, -4
  %v2_5fb1 = inttoptr i32 %v1_5fb1 to i32*
  %v3_5fb1 = load i32, i32* %v2_5fb1, align 4
  store i32 %v3_5fb1, i32* @ebx, align 4
  %v0_5fb5 = load i32, i32* @eax, align 4
  ret i32 %v0_5fb5
}

define i1 @_Z19ExtractDestinationsRK7CScriptR10txnouttypeRSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS5_6detail7variant5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_EESaISD_EERi(%CScript %scriptPubKey, i32 %typeRet, i32 %addressRet, i32 %nRequiredRet) local_unnamed_addr {
dec_label_pc_5fb6:
  %tmp99 = extractvalue %CScript %scriptPubKey, 0
  %stack_var_-168 = alloca i32, align 4
  %vSolutions_-176 = alloca %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5", align 8
  %stack_var_-204 = alloca i32, align 4
  %v4_5fc4 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5" undef, i32 %tmp99, 0
  store %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5" %v4_5fc4, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5"* %vSolutions_-176, align 8
  store i32 %addressRet, i32* %stack_var_-204, align 4
  %v1_5ff9 = inttoptr i32 %addressRet to i32*
  %v2_5ff9 = call i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE5clearEv(i32* %v1_5ff9)
  %v1_6004 = inttoptr i32 %typeRet to i32*
  store i32 0, i32* %v1_6004, align 4
  %v2_600a = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_600a, i32* %stack_var_-204, align 4
  %v1_6013 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_600a)
  %v4_602c = getelementptr inbounds %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5", %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>.5"* %vSolutions_-176, i32 0, i32 0
  %v5_602c = load i32, i32* %v4_602c, align 8
  store i32 %v5_602c, i32* %stack_var_-204, align 4
  %v3_6035 = insertvalue %CScript undef, i32 %v5_602c, 0
  %v4_6035 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_600a, 0
  %v5_6035 = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %v3_6035, i32 %typeRet, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_6035)
  br i1 false, label %dec_label_pc_604b, label %dec_label_pc_6041

dec_label_pc_6041:                                ; preds = %dec_label_pc_5fb6
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_61a1

dec_label_pc_604b:                                ; preds = %dec_label_pc_5fb6
  br i1 undef, label %dec_label_pc_6133, label %dec_label_pc_605c

dec_label_pc_605c:                                ; preds = %dec_label_pc_604b
  br label %dec_label_pc_610f

dec_label_pc_6094:                                ; preds = %dec_label_pc_610f
  br label %dec_label_pc_610f

dec_label_pc_610f:                                ; preds = %dec_label_pc_6094, %dec_label_pc_605c
  br i1 undef, label %dec_label_pc_6094, label %dec_label_pc_619c

dec_label_pc_6133:                                ; preds = %dec_label_pc_604b
  br i1 false, label %dec_label_pc_6172, label %dec_label_pc_6166

dec_label_pc_6166:                                ; preds = %dec_label_pc_6133
  br label %dec_label_pc_618c

dec_label_pc_6172:                                ; preds = %dec_label_pc_6133
  br label %dec_label_pc_618c

dec_label_pc_618c:                                ; preds = %dec_label_pc_6172, %dec_label_pc_6166
  br i1 undef, label %dec_label_pc_61a1, label %dec_label_pc_619c

dec_label_pc_619c:                                ; preds = %dec_label_pc_610f, %dec_label_pc_618c
  br label %dec_label_pc_61a1

dec_label_pc_61a1:                                ; preds = %dec_label_pc_619c, %dec_label_pc_618c, %dec_label_pc_6041
  %v1_61a7 = load i32, i32* @esp, align 4
  %v2_61a7 = inttoptr i32 %v1_61a7 to i32*
  store i32 %v2_600a, i32* %v2_61a7, align 4
  %v0_61aa = load i32, i32* %stack_var_-204, align 4
  %v1_61aa = inttoptr i32 %v0_61aa to i32*
  %v2_61aa = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_61aa)
  %v0_61af = load i32, i32* @ebx, align 4
  store i32 %v0_61af, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_61bd

bb:                                               ; preds = %dec_label_pc_61a1
  %v1_61bb = call i32 @function_6200()
  store i32 %v1_61bb, i32* @eax, align 4
  br label %dec_label_pc_61bd

dec_label_pc_61bd:                                ; preds = %bb, %dec_label_pc_61a1
  %v0_61bd = call i32 @function_61fb()
  %tmp126 = urem i32 %v0_61bd, 2
  %v2_61bd = icmp ne i32 %tmp126, 0
  ret i1 %v2_61bd

; uselistorder directives
  uselistorder i32 %v2_600a, { 1, 0, 3, 2 }
  uselistorder i32 %addressRet, { 1, 0 }
  uselistorder label %dec_label_pc_619c, { 1, 0 }
}

define i32 @function_61bf() local_unnamed_addr {
dec_label_pc_61bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_61bf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_61bf, i32* @ebx, align 4
  %v0_61c1 = call i32 @function_61e3()
  store i32 %v0_61c1, i32* %eax.global-to-local, align 4
  ret i32 %v0_61c1
}

define i32 @function_61c3() local_unnamed_addr {
dec_label_pc_61c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_61c3 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_61c3, i32* @ebx, align 4
  %v0_61c5 = load i32, i32* @ebp, align 4
  %v1_61c5 = add i32 %v0_61c5, -80
  store i32 %v1_61c5, i32* %eax.global-to-local, align 4
  %v1_61cb = call i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_ED1Ev(i32 %v1_61c5)
  store i32 %v1_61cb, i32* %eax.global-to-local, align 4
  %v0_61d0 = call i32 @function_61e3()
  store i32 %v0_61d0, i32* %eax.global-to-local, align 4
  ret i32 %v0_61d0
}

define i32 @function_61d2() local_unnamed_addr {
dec_label_pc_61d2:
  %eax.global-to-local = alloca i32, align 4
  %v0_61d2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_61d2, i32* @ebx, align 4
  %v0_61d4 = load i32, i32* @ebp, align 4
  %v1_61d4 = add i32 %v0_61d4, -56
  store i32 %v1_61d4, i32* %eax.global-to-local, align 4
  %v1_61da = call i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_ED1Ev(i32 %v1_61d4)
  store i32 %v1_61da, i32* %eax.global-to-local, align 4
  %v0_61df = call i32 @function_61e3()
  store i32 %v0_61df, i32* %eax.global-to-local, align 4
  ret i32 %v0_61df

; uselistorder directives
  uselistorder i32 ()* @function_61e3, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_ED1Ev, { 1, 0 }
}

define i32 @function_61e2() local_unnamed_addr {
dec_label_pc_61e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_61e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_61e2
}

define i32 @function_61e3() local_unnamed_addr {
dec_label_pc_61e3:
  %v0_61e3 = load i32, i32* @ebp, align 4
  %v1_61e3 = add i32 %v0_61e3, -164
  %v1_61ec = inttoptr i32 %v1_61e3 to i32*
  %v2_61ec = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_61ec)
  %v0_61f1 = load i32, i32* @ebx, align 4
  ret i32 %v0_61f1
}

define i32 @function_61fb() local_unnamed_addr {
dec_label_pc_61fb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_6200() local_unnamed_addr {
dec_label_pc_6200:
  %v0_6206 = load i32, i32* @eax, align 4
  ret i32 %v0_6206
}

define void @_Z19ExtractAffectedKeysRK9CKeyStoreRK7CScriptRSt6vectorI6CKeyIDSaIS6_EE(i32 %keystore, %CScript %scriptPubKey, i32 %vKeys) local_unnamed_addr {
dec_label_pc_6207:
  %tmp96 = extractvalue %CScript %scriptPubKey, 0
  %stack_var_-24 = alloca i32, align 4
  %v2_6239 = ptrtoint i32* %stack_var_-24 to i32
  %v4_623f = call i32 @_ZN20CAffectedKeysVisitorC1ERK9CKeyStoreRSt6vectorI6CKeyIDSaIS4_EE(i32* nonnull %stack_var_-24, i32 %keystore, i32 %vKeys)
  %v2_6251 = call i32 @_ZN20CAffectedKeysVisitor7ProcessERK7CScript(i32 %v2_6239, i32 %tmp96)
  %v1_625c = call i32 @_ZN20CAffectedKeysVisitorD1Ev(i32 %v2_6239)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_626d

bb:                                               ; preds = %dec_label_pc_6207
  %v1_626b = call i32 @function_628b()
  store i32 %v1_626b, i32* @eax, align 4
  br label %dec_label_pc_626d

dec_label_pc_626d:                                ; preds = %bb, %dec_label_pc_6207
  %v0_626d = call i32 @function_6286()
  ret void
}

define i32 @function_6270() local_unnamed_addr {
dec_label_pc_6270:
  %eax.global-to-local = alloca i32, align 4
  %v0_6270 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6270
}

define i32 @function_6286() local_unnamed_addr {
dec_label_pc_6286:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_628b() local_unnamed_addr {
dec_label_pc_628b:
  %v0_6290 = load i32, i32* @eax, align 4
  ret i32 %v0_6290
}

define i1 @_Z12VerifyScriptRK7CScriptS1_RK12CTransactionjji(%CScript %scriptSig, %CScript %scriptPubKey, i32 %txTo, i32 %nIn, i32 %flags, i32 %nHashType) local_unnamed_addr {
dec_label_pc_6291:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_62ca = ptrtoint i32* %stack_var_-64 to i32
  %v2_62d0 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_62ca)
  %v2_62d5 = ptrtoint i32* %stack_var_-52 to i32
  %v2_62db = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_62d5)
  %v9_6309 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_62ca, 0
  %v11_6309 = call i1 @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v9_6309, %CScript %scriptSig, i32 %txTo, i32 %nIn, i32 %flags, i32 %nHashType)
  br i1 false, label %dec_label_pc_631f, label %dec_label_pc_6315

dec_label_pc_6315:                                ; preds = %dec_label_pc_6291
  store i32 0, i32* @ebx, align 4
  %v0_631a = call i32 @function_6508()
  %tmp43 = urem i32 %v0_631a, 2
  %v2_631a = icmp ne i32 %tmp43, 0
  ret i1 %v2_631a

dec_label_pc_631f:                                ; preds = %dec_label_pc_6291
  br i1 undef, label %dec_label_pc_633b, label %dec_label_pc_6329

dec_label_pc_6329:                                ; preds = %dec_label_pc_631f
  br label %dec_label_pc_633b

dec_label_pc_633b:                                ; preds = %dec_label_pc_6329, %dec_label_pc_631f
  br i1 false, label %dec_label_pc_637a, label %dec_label_pc_6370

dec_label_pc_6370:                                ; preds = %dec_label_pc_633b
  ret i1 undef

dec_label_pc_637a:                                ; preds = %dec_label_pc_633b
  br i1 undef, label %dec_label_pc_6393, label %dec_label_pc_6389

dec_label_pc_6389:                                ; preds = %dec_label_pc_637a
  ret i1 undef

dec_label_pc_6393:                                ; preds = %dec_label_pc_637a
  br i1 false, label %dec_label_pc_63b7, label %dec_label_pc_63ad

dec_label_pc_63ad:                                ; preds = %dec_label_pc_6393
  ret i1 undef

dec_label_pc_63b7:                                ; preds = %dec_label_pc_6393
  br i1 undef, label %dec_label_pc_63d7, label %dec_label_pc_63c1

dec_label_pc_63c1:                                ; preds = %dec_label_pc_63b7
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @9 to i8), i8 ptrtoint (i32* @9 to i8)), i8 0), label %dec_label_pc_63d7, label %dec_label_pc_63dc

dec_label_pc_63d7:                                ; preds = %dec_label_pc_63c1, %dec_label_pc_63b7
  br label %dec_label_pc_63dc

dec_label_pc_63dc:                                ; preds = %dec_label_pc_63c1, %dec_label_pc_63d7
  br i1 undef, label %bb, label %dec_label_pc_63e4

bb:                                               ; preds = %dec_label_pc_63dc
  br label %dec_label_pc_63e4

dec_label_pc_63e4:                                ; preds = %bb, %dec_label_pc_63dc
  br i1 undef, label %dec_label_pc_6400, label %dec_label_pc_63f6

dec_label_pc_63f6:                                ; preds = %dec_label_pc_63e4
  ret i1 undef

dec_label_pc_6400:                                ; preds = %dec_label_pc_63e4
  br i1 undef, label %bb48, label %dec_label_pc_640f

bb48:                                             ; preds = %dec_label_pc_6400
  br label %dec_label_pc_640f

dec_label_pc_640f:                                ; preds = %bb48, %dec_label_pc_6400
  ret i1 undef

; uselistorder directives
  uselistorder label %dec_label_pc_63dc, { 1, 0 }
}

define i32 @function_6433() local_unnamed_addr {
dec_label_pc_6433:
  %v0_6433 = load i32, i32* @ebp, align 4
  %v1_6433 = add i32 %v0_6433, -48
  %v1_6439 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %v1_6433)
  %v1_643e = load i32, i32* @ebp, align 4
  %v2_643e = add i32 %v1_643e, -16
  %v3_643e = inttoptr i32 %v2_643e to i32*
  store i32 %v1_6439, i32* %v3_643e, align 4
  %v0_6441 = load i32, i32* @ebp, align 4
  %v1_6441 = add i32 %v0_6441, -20
  %v1_6444 = add i32 %v0_6441, -16
  %v2_6444 = inttoptr i32 %v1_6444 to i32*
  %v3_6444 = load i32, i32* %v2_6444, align 4
  %v2_644e = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %v1_6441, i32 %v3_6444)
  %v0_6456 = load i32, i32* @ebp, align 4
  %v1_6456 = add i32 %v0_6456, -24
  %v1_6459 = add i32 %v0_6456, -16
  %v2_6459 = inttoptr i32 %v1_6459 to i32*
  %v3_6459 = load i32, i32* %v2_6459, align 4
  %v2_6463 = inttoptr i32 %v3_6459 to i32*
  %v3_6463 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v1_6456, i32* %v2_6463)
  %v0_646b = load i32, i32* @ebp, align 4
  %v1_646b = add i32 %v0_646b, -20
  %v2_646b = inttoptr i32 %v1_646b to i32*
  %v3_646b = load i32, i32* %v2_646b, align 4
  %v1_6472 = add i32 %v0_646b, -24
  %v2_6472 = inttoptr i32 %v1_6472 to i32*
  %v3_6472 = load i32, i32* %v2_6472, align 4
  %v1_6479 = add i32 %v0_646b, -36
  %v3_647f = call i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %v1_6479, i32 %v3_6472, i32 %v3_646b)
  %v0_6484 = load i32, i32* @ebp, align 4
  %v1_6484 = add i32 %v0_6484, -48
  %v1_648a = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v1_6484, 0
  call void @popstack(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v1_648a)
  %v0_648f = load i32, i32* @ebp, align 4
  %v1_648f = add i32 %v0_648f, -96
  %v2_648f = inttoptr i32 %v1_648f to i32*
  %v3_648f = load i32, i32* %v2_648f, align 4
  %v1_6496 = add i32 %v0_648f, -92
  %v2_6496 = inttoptr i32 %v1_6496 to i32*
  %v3_6496 = load i32, i32* %v2_6496, align 4
  %v1_649d = add i32 %v0_648f, -88
  %v2_649d = inttoptr i32 %v1_649d to i32*
  %v3_649d = load i32, i32* %v2_649d, align 4
  %v1_64a4 = add i32 %v0_648f, -84
  %v2_64a4 = inttoptr i32 %v1_64a4 to i32*
  %v3_64a4 = load i32, i32* %v2_64a4, align 4
  %v1_64ab = add i32 %v0_648f, -36
  %v1_64b2 = add i32 %v0_648f, -48
  %v6_64b8 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v1_64b2, 0
  %v7_64b8 = insertvalue %CScript undef, i32 %v1_64ab, 0
  %v8_64b8 = call i1 @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v6_64b8, %CScript %v7_64b8, i32 %v3_64a4, i32 %v3_649d, i32 %v3_6496, i32 %v3_648f)
  br i1 false, label %dec_label_pc_64cb, label %dec_label_pc_64c4

dec_label_pc_64c4:                                ; preds = %dec_label_pc_6433
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_64f6

dec_label_pc_64cb:                                ; preds = %dec_label_pc_6433
  br i1 undef, label %dec_label_pc_64e1, label %dec_label_pc_64da

dec_label_pc_64da:                                ; preds = %dec_label_pc_64cb
  br label %dec_label_pc_64f6

dec_label_pc_64e1:                                ; preds = %dec_label_pc_64cb
  br label %dec_label_pc_64f6

dec_label_pc_64f6:                                ; preds = %dec_label_pc_64e1, %dec_label_pc_64da, %dec_label_pc_64c4
  %v0_64f6 = load i32, i32* @ebp, align 4
  %v1_64f6 = add i32 %v0_64f6, -36
  %v1_64fc = call i32 @_ZN7CScriptD1Ev(i32 %v1_64f6)
  %v0_6501 = call i32 @function_6508()
  ret i32 %v0_6501

; uselistorder directives
  uselistorder i32 %v0_648f, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 ()* @function_6508, { 1, 0 }
  uselistorder void (%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>")* @popstack, { 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
}

define i32 @function_6503() local_unnamed_addr {
dec_label_pc_6503:
  %v0_6503 = load i32, i32* @eax, align 4
  ret i32 %v0_6503
}

define i32 @function_6508() local_unnamed_addr {
dec_label_pc_6508:
  %v0_6508 = load i32, i32* @ebp, align 4
  %v1_6508 = add i32 %v0_6508, -48
  %v1_650e = inttoptr i32 %v1_6508 to i32*
  %v2_650e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_650e)
  %v0_6513 = load i32, i32* @ebp, align 4
  %v1_6513 = add i32 %v0_6513, -60
  %v1_6519 = inttoptr i32 %v1_6513 to i32*
  %v2_6519 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_6519)
  %v0_651e = load i32, i32* @ebx, align 4
  store i32 %v0_651e, i32* @eax, align 4
  %v0_6520 = load i32, i32* @ebp, align 4
  %v1_6520 = add i32 %v0_6520, -12
  %v2_6520 = inttoptr i32 %v1_6520 to i32*
  %v3_6520 = load i32, i32* %v2_6520, align 4
  %v1_6523 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6523 = icmp eq i32 %v1_6523, %v3_6520
  br i1 %v3_6523, label %bb, label %dec_label_pc_652c

bb:                                               ; preds = %dec_label_pc_6508
  %v1_652a = call i32 @function_656c()
  store i32 %v1_652a, i32* @eax, align 4
  br label %dec_label_pc_652c

dec_label_pc_652c:                                ; preds = %bb, %dec_label_pc_6508
  %v0_652c = call i32 @function_6567()
  ret i32 %v0_652c
}

define i32 @function_652e() local_unnamed_addr {
dec_label_pc_652e:
  %eax.global-to-local = alloca i32, align 4
  %v0_652e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_652e, i32* @ebx, align 4
  %v0_6530 = call i32 @function_6543()
  store i32 %v0_6530, i32* %eax.global-to-local, align 4
  ret i32 %v0_6530
}

define i32 @function_6532() local_unnamed_addr {
dec_label_pc_6532:
  %eax.global-to-local = alloca i32, align 4
  %v0_6532 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_6532, i32* @ebx, align 4
  %v0_6534 = load i32, i32* @ebp, align 4
  %v1_6534 = add i32 %v0_6534, -36
  store i32 %v1_6534, i32* %eax.global-to-local, align 4
  %v1_653a = call i32 @_ZN7CScriptD1Ev(i32 %v1_6534)
  store i32 %v1_653a, i32* %eax.global-to-local, align 4
  %v0_653f = call i32 @function_6543()
  store i32 %v0_653f, i32* %eax.global-to-local, align 4
  ret i32 %v0_653f

; uselistorder directives
  uselistorder i32 ()* @function_6543, { 1, 0 }
}

define i32 @function_6542() local_unnamed_addr {
dec_label_pc_6542:
  %eax.global-to-local = alloca i32, align 4
  %v0_6542 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6542
}

define i32 @function_6543() local_unnamed_addr {
dec_label_pc_6543:
  %v0_6543 = load i32, i32* @ebp, align 4
  %v1_6543 = add i32 %v0_6543, -48
  %v1_6549 = inttoptr i32 %v1_6543 to i32*
  %v2_6549 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_6549)
  %v0_654e = call i32 @function_6552()
  ret i32 %v0_654e
}

define i32 @function_6550() local_unnamed_addr {
dec_label_pc_6550:
  %eax.global-to-local = alloca i32, align 4
  %v0_6550 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6550
}

define i32 @function_6552() local_unnamed_addr {
dec_label_pc_6552:
  %v0_6552 = load i32, i32* @ebp, align 4
  %v1_6552 = add i32 %v0_6552, -60
  %v1_6558 = inttoptr i32 %v1_6552 to i32*
  %v2_6558 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_6558)
  %v0_655d = load i32, i32* @ebx, align 4
  ret i32 %v0_655d
}

define i32 @function_6567() local_unnamed_addr {
dec_label_pc_6567:
  %v0_6567 = load i32, i32* @eax, align 4
  ret i32 %v0_6567
}

define i32 @function_656c() local_unnamed_addr {
dec_label_pc_656c:
  %v0_6570 = load i32, i32* @eax, align 4
  ret i32 %v0_6570
}

define i1 @_Z13SignSignatureRK9CKeyStoreRK7CScriptR12CTransactionji(i32 %keystore, %CScript %fromPubKey, i32 %txTo, i32 %nIn, i32 %nHashType) local_unnamed_addr {
dec_label_pc_6571:
  %v1_65ba = add i32 %txTo, 4
  %tmp26 = inttoptr i32 %v1_65ba to i32*
  %v3_65c0 = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp26)
  %tmp28 = icmp ugt i32 %v3_65c0, %nIn
  br i1 %tmp28, label %bb, label %dec_label_pc_65cd

bb:                                               ; preds = %dec_label_pc_6571
  %v4_65cb = call i32 @function_65f1()
  br label %dec_label_pc_65cd

dec_label_pc_65cd:                                ; preds = %dec_label_pc_6571, %bb
  %v3_65e5 = phi i32 [ %v3_65c0, %dec_label_pc_6571 ], [ %v4_65cb, %bb ]
  %tmp27 = urem i32 %v3_65e5, 2
  %v4_65e5 = icmp ne i32 %tmp27, 0
  ret i1 %v4_65e5

; uselistorder directives
  uselistorder i32 %v3_65c0, { 1, 0 }
  uselistorder label %dec_label_pc_65cd, { 1, 0 }
}

define i32 @function_65f1() local_unnamed_addr {
dec_label_pc_65f1:
  %v0_65f1 = load i32, i32* @ebp, align 4
  %v1_65f1 = add i32 %v0_65f1, -164
  %v2_65f1 = inttoptr i32 %v1_65f1 to i32*
  %v3_65f1 = load i32, i32* %v2_65f1, align 4
  %v1_65f7 = add i32 %v3_65f1, 4
  %v1_65fa = add i32 %v0_65f1, -168
  %v2_65fa = inttoptr i32 %v1_65fa to i32*
  %v3_65fa = load i32, i32* %v2_65fa, align 4
  %v2_6607 = inttoptr i32 %v1_65f7 to i32*
  %v3_6607 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %v2_6607, i32 %v3_65fa)
  %v1_660c = load i32, i32* @ebp, align 4
  %v2_660c = add i32 %v1_660c, -84
  %v3_660c = inttoptr i32 %v2_660c to i32*
  store i32 %v3_6607, i32* %v3_660c, align 4
  %v0_660f = load i32, i32* @ebp, align 4
  %v1_660f = add i32 %v0_660f, -160
  %v2_660f = inttoptr i32 %v1_660f to i32*
  %v3_660f = load i32, i32* %v2_660f, align 4
  %v1_6619 = add i32 %v0_660f, -140
  %v2_6622 = call i32 @_ZN7CScriptC1ERKS_(i32 %v1_6619, i32 %v3_660f)
  %v0_6627 = load i32, i32* @ebp, align 4
  %v1_6627 = add i32 %v0_6627, -76
  %v1_6634 = add i32 %v0_6627, -168
  %v2_6634 = inttoptr i32 %v1_6634 to i32*
  %v3_6634 = load i32, i32* %v2_6634, align 4
  %v1_663e = add i32 %v0_6627, -164
  %v2_663e = inttoptr i32 %v1_663e to i32*
  %v3_663e = load i32, i32* %v2_663e, align 4
  %v1_6648 = add i32 %v0_6627, -140
  %v5_6655 = insertvalue %CScript.22 undef, i32 %v1_6627, 0
  %v6_6655 = call %uint256 @_Z13SignatureHash7CScriptRK12CTransactionji(%CScript.22 %v5_6655, i32 %v1_6648, i32 %v3_663e, i32 %v3_6634)
  %v0_665d = load i32, i32* @ebp, align 4
  %v1_665d = add i32 %v0_665d, -140
  %v1_6666 = call i32 @_ZN7CScriptD1Ev(i32 %v1_665d)
  %v0_666b = load i32, i32* @ebp, align 4
  %v1_666b = add i32 %v0_666b, -84
  %v2_666b = inttoptr i32 %v1_666b to i32*
  %v3_666b = load i32, i32* %v2_666b, align 4
  %v1_666e = add i32 %v3_666b, 36
  store i32 %v1_666e, i32* @edx, align 4
  %v1_6686 = add i32 %v0_666b, -76
  %v2_6686 = inttoptr i32 %v1_6686 to i32*
  %v3_6686 = load i32, i32* %v2_6686, align 4
  %v1_668d = add i32 %v0_666b, -72
  %v2_668d = inttoptr i32 %v1_668d to i32*
  %v3_668d = load i32, i32* %v2_668d, align 4
  %v1_6694 = add i32 %v0_666b, -68
  %v2_6694 = inttoptr i32 %v1_6694 to i32*
  %v3_6694 = load i32, i32* %v2_6694, align 4
  %v1_669b = add i32 %v0_666b, -64
  %v2_669b = inttoptr i32 %v1_669b to i32*
  %v3_669b = load i32, i32* %v2_669b, align 4
  %v1_66be = add i32 %v0_666b, -160
  %v2_66be = inttoptr i32 %v1_66be to i32*
  %v3_66be = load i32, i32* %v2_66be, align 4
  %v1_66c8 = add i32 %v0_666b, -156
  %v2_66c8 = inttoptr i32 %v1_66c8 to i32*
  %v3_66c8 = load i32, i32* %v2_66c8, align 4
  %v13_66d1 = insertvalue %CScript undef, i32 %v3_66be, 0
  %v14_66d1 = insertvalue %uint256.26 undef, i32 %v3_6686, 0
  %v15_66d1 = insertvalue %CScript undef, i32 %v3_6694, 0
  %v16_66d1 = call i1 @_Z6SolverRK9CKeyStoreRK7CScript7uint256iRS2_R10txnouttype(i32 %v3_66c8, %CScript %v13_66d1, %uint256.26 %v14_66d1, i32 %v3_668d, %CScript %v15_66d1, i32 %v3_669b)
  br i1 false, label %dec_label_pc_66e7, label %dec_label_pc_66dd

dec_label_pc_66dd:                                ; preds = %dec_label_pc_65f1
  br label %dec_label_pc_6877

dec_label_pc_66e7:                                ; preds = %dec_label_pc_65f1
  br i1 undef, label %dec_label_pc_6839, label %dec_label_pc_66f3

dec_label_pc_66f3:                                ; preds = %dec_label_pc_66e7
  br i1 undef, label %dec_label_pc_67d3, label %dec_label_pc_67c4

dec_label_pc_67c4:                                ; preds = %dec_label_pc_66f3
  br i1 undef, label %dec_label_pc_67d3, label %dec_label_pc_67d8

dec_label_pc_67d3:                                ; preds = %dec_label_pc_66f3, %dec_label_pc_67c4
  br label %dec_label_pc_67d8

dec_label_pc_67d8:                                ; preds = %dec_label_pc_67c4, %dec_label_pc_67d3
  br i1 undef, label %dec_label_pc_6829, label %dec_label_pc_6818

dec_label_pc_6818:                                ; preds = %dec_label_pc_67d8
  br label %dec_label_pc_6829

dec_label_pc_6829:                                ; preds = %dec_label_pc_67d8, %dec_label_pc_6818
  br i1 undef, label %dec_label_pc_6829.dec_label_pc_6877_crit_edge, label %dec_label_pc_6829.dec_label_pc_6839_crit_edge

dec_label_pc_6829.dec_label_pc_6877_crit_edge:    ; preds = %dec_label_pc_6829
  br label %dec_label_pc_6877

dec_label_pc_6829.dec_label_pc_6839_crit_edge:    ; preds = %dec_label_pc_6829
  br label %dec_label_pc_6839

dec_label_pc_6839:                                ; preds = %dec_label_pc_6829.dec_label_pc_6839_crit_edge, %dec_label_pc_66e7
  br label %dec_label_pc_6877

dec_label_pc_6877:                                ; preds = %dec_label_pc_6829.dec_label_pc_6877_crit_edge, %dec_label_pc_6839, %dec_label_pc_66dd
  store i32 0, i32* @eax, align 4
  %v0_6879 = load i32, i32* @ebp, align 4
  %v1_6879 = add i32 %v0_6879, -12
  %v2_6879 = inttoptr i32 %v1_6879 to i32*
  %v3_6879 = load i32, i32* %v2_6879, align 4
  %v1_687c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_687c = icmp eq i32 %v1_687c, %v3_6879
  br i1 %v3_687c, label %bb, label %dec_label_pc_6885

bb:                                               ; preds = %dec_label_pc_6877
  %v1_6883 = call i32 @function_68db()
  store i32 %v1_6883, i32* @eax, align 4
  br label %dec_label_pc_6885

dec_label_pc_6885:                                ; preds = %bb, %dec_label_pc_6877
  %v0_6885 = call i32 @function_68d6()
  ret i32 %v0_6885

; uselistorder directives
  uselistorder i32 %v0_666b, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32 %v0_6627, { 0, 2, 1, 3 }
  uselistorder i1 undef, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder %uint256 (%CScript.22, i32, i32, i32)* @_Z13SignatureHash7CScriptRK12CTransactionji, { 1, 0 }
  uselistorder %CScript.22 undef, { 1, 0 }
  uselistorder i32 -140, { 4, 5, 6, 0, 7, 8, 9, 1, 10, 11, 12, 13, 2, 3 }
  uselistorder i32 -160, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 -168, { 2, 3, 0, 1 }
  uselistorder i32 -164, { 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 2, 3 }
  uselistorder label %dec_label_pc_6877, { 1, 0, 2 }
  uselistorder label %dec_label_pc_6829, { 1, 0 }
  uselistorder label %dec_label_pc_67d8, { 1, 0 }
  uselistorder label %dec_label_pc_67d3, { 1, 0 }
}

define i32 @function_6888() local_unnamed_addr {
dec_label_pc_6888:
  %eax.global-to-local = alloca i32, align 4
  %v0_6888 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6888
}

define i32 @function_68a0() local_unnamed_addr {
dec_label_pc_68a0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_68a0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_68a0 = add i32 %v0_68a0, -1941598781
  %v2_68a0 = inttoptr i32 %v1_68a0 to i32*
  %v3_68a0 = load i32, i32* %v2_68a0, align 4
  %v4_68a0 = add i32 %v3_68a0, -1
  store i32 %v4_68a0, i32* %v2_68a0, align 4
  %v0_68a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_68a9 = call i32 @_ZN7CScriptD1Ev(i32 %v0_68a6)
  store i32 %v1_68a9, i32* %eax.global-to-local, align 4
  %v0_68ae = call i32 @function_68c1()
  store i32 %v0_68ae, i32* %eax.global-to-local, align 4
  ret i32 %v0_68ae
}

define i32 @function_68b0() local_unnamed_addr {
dec_label_pc_68b0:
  %eax.global-to-local = alloca i32, align 4
  %v0_68b0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_68b0, i32* @ebx, align 4
  %v0_68b2 = load i32, i32* @ebp, align 4
  %v1_68b2 = add i32 %v0_68b2, -104
  store i32 %v1_68b2, i32* %eax.global-to-local, align 4
  %v1_68b8 = inttoptr i32 %v1_68b2 to i32*
  %v2_68b8 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_68b8)
  store i32 %v2_68b8, i32* %eax.global-to-local, align 4
  %v0_68bd = call i32 @function_68c1()
  store i32 %v0_68bd, i32* %eax.global-to-local, align 4
  ret i32 %v0_68bd

; uselistorder directives
  uselistorder i32 ()* @function_68c1, { 1, 0 }
}

define i32 @function_68c0() local_unnamed_addr {
dec_label_pc_68c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_68c0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_68c0
}

define i32 @function_68c1() local_unnamed_addr {
dec_label_pc_68c1:
  %v0_68c1 = load i32, i32* @ebp, align 4
  %v1_68c1 = add i32 %v0_68c1, -128
  %v1_68c7 = call i32 @_ZN7CScriptD1Ev(i32 %v1_68c1)
  %v0_68cc = load i32, i32* @ebx, align 4
  ret i32 %v0_68cc
}

define i32 @function_68d6() local_unnamed_addr {
dec_label_pc_68d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_68db() local_unnamed_addr {
dec_label_pc_68db:
  %v0_68db = load i32, i32* @ebp, align 4
  %v1_68e0 = inttoptr i32 %v0_68db to i32*
  %v2_68e0 = load i32, i32* %v1_68e0, align 4
  store i32 %v2_68e0, i32* @ebp, align 4
  %v0_68e1 = load i32, i32* @eax, align 4
  ret i32 %v0_68e1
}

define i1 @_Z13SignSignatureRK9CKeyStoreRK12CTransactionRS2_ji(i32 %keystore, i32 %txFrom, i32 %txTo, i32 %nIn, i32 %nHashType) local_unnamed_addr {
dec_label_pc_68e2:
  %v1_6915 = add i32 %txTo, 4
  %tmp121 = inttoptr i32 %v1_6915 to i32*
  %v3_691b = call i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %tmp121)
  %tmp123 = icmp ugt i32 %v3_691b, %nIn
  br i1 %tmp123, label %bb, label %dec_label_pc_6925

bb:                                               ; preds = %dec_label_pc_68e2
  %v4_6923 = call i32 @function_6949()
  br label %dec_label_pc_6925

dec_label_pc_6925:                                ; preds = %dec_label_pc_68e2, %bb
  %v3_693d = phi i32 [ %v3_691b, %dec_label_pc_68e2 ], [ %v4_6923, %bb ]
  %tmp122 = urem i32 %v3_693d, 2
  %v4_693d = icmp ne i32 %tmp122, 0
  ret i1 %v4_693d

; uselistorder directives
  uselistorder i32 %v3_691b, { 1, 0 }
  uselistorder label %dec_label_pc_6925, { 1, 0 }
}

define i32 @function_6949() local_unnamed_addr {
dec_label_pc_6949:
  %ebx.global-to-local = alloca i32, align 4
  %v0_6949 = load i32, i32* @ebp, align 4
  %v1_6949 = add i32 %v0_6949, -36
  %v2_6949 = inttoptr i32 %v1_6949 to i32*
  %v3_6949 = load i32, i32* %v2_6949, align 4
  %v1_694c = add i32 %v3_6949, 4
  %v1_694f = add i32 %v0_6949, -40
  %v2_694f = inttoptr i32 %v1_694f to i32*
  %v3_694f = load i32, i32* %v2_694f, align 4
  %tmp11 = inttoptr i32 %v1_694c to i32*
  %v5_6959 = call i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %tmp11, i32 %v3_694f)
  %v1_695e = load i32, i32* @ebp, align 4
  %v2_695e = add i32 %v1_695e, -20
  %v3_695e = inttoptr i32 %v2_695e to i32*
  store i32 %v5_6959, i32* %v3_695e, align 4
  %v0_6961 = load i32, i32* @ebp, align 4
  %v1_6961 = add i32 %v0_6961, -20
  %v2_6961 = inttoptr i32 %v1_6961 to i32*
  %v3_6961 = load i32, i32* %v2_6961, align 4
  %v1_6964 = add i32 %v3_6961, 32
  %v2_6964 = inttoptr i32 %v1_6964 to i32*
  %v3_6964 = load i32, i32* %v2_6964, align 4
  store i32 %v3_6964, i32* %ebx.global-to-local, align 4
  %v1_6967 = add i32 %v0_6961, -32
  %v2_6967 = inttoptr i32 %v1_6967 to i32*
  %v3_6967 = load i32, i32* %v2_6967, align 4
  %v1_696a = add i32 %v3_6967, 16
  %tmp13 = inttoptr i32 %v1_696a to i32*
  %v3_6970 = call i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32* %tmp13)
  %v0_6975 = load i32, i32* %ebx.global-to-local, align 4
  %v7_6975 = icmp ult i32 %v0_6975, %v3_6970
  br i1 %v7_6975, label %bb, label %dec_label_pc_6979

bb:                                               ; preds = %dec_label_pc_6949
  %v1_6977 = call i32 @function_699d()
  br label %dec_label_pc_6979

dec_label_pc_6979:                                ; preds = %bb, %dec_label_pc_6949
  %v3_6991 = phi i32 [ %v1_6977, %bb ], [ %v3_6970, %dec_label_pc_6949 ]
  ret i32 %v3_6991

; uselistorder directives
  uselistorder i32 (i32*, i32)* @_ZNSt6vectorI5CTxInSaIS0_EEixEj, { 0, 1, 3, 4, 2, 5, 7, 6 }
}

define i32 @function_699d() local_unnamed_addr {
dec_label_pc_699d:
  %v0_699d = load i32, i32* @ebp, align 4
  %v1_699d = add i32 %v0_699d, -20
  %v2_699d = inttoptr i32 %v1_699d to i32*
  %v3_699d = load i32, i32* %v2_699d, align 4
  %v1_69a0 = add i32 %v3_699d, 32
  %v2_69a0 = inttoptr i32 %v1_69a0 to i32*
  %v3_69a0 = load i32, i32* %v2_69a0, align 4
  %v1_69a3 = add i32 %v0_699d, -32
  %v2_69a3 = inttoptr i32 %v1_69a3 to i32*
  %v3_69a3 = load i32, i32* %v2_69a3, align 4
  %v1_69a6 = add i32 %v3_69a3, 16
  %v2_69b0 = inttoptr i32 %v1_69a6 to i32*
  %v3_69b0 = call i32 @_ZNKSt6vectorI6CTxOutSaIS0_EEixEj(i32* %v2_69b0, i32 %v3_69a0)
  %v1_69b5 = load i32, i32* @ebp, align 4
  %v2_69b5 = add i32 %v1_69b5, -16
  %v3_69b5 = inttoptr i32 %v2_69b5 to i32*
  store i32 %v3_69b0, i32* %v3_69b5, align 4
  %v0_69b8 = load i32, i32* @ebp, align 4
  %v1_69b8 = add i32 %v0_69b8, -16
  %v2_69b8 = inttoptr i32 %v1_69b8 to i32*
  %v3_69b8 = load i32, i32* %v2_69b8, align 4
  %v1_69bb = add i32 %v3_69b8, 8
  %v1_69be = add i32 %v0_69b8, -44
  %v2_69be = inttoptr i32 %v1_69be to i32*
  %v3_69be = load i32, i32* %v2_69be, align 4
  %v1_69c5 = add i32 %v0_69b8, -40
  %v2_69c5 = inttoptr i32 %v1_69c5 to i32*
  %v3_69c5 = load i32, i32* %v2_69c5, align 4
  %v1_69cc = add i32 %v0_69b8, -36
  %v2_69cc = inttoptr i32 %v1_69cc to i32*
  %v3_69cc = load i32, i32* %v2_69cc, align 4
  %v1_69d7 = add i32 %v0_69b8, -28
  %v2_69d7 = inttoptr i32 %v1_69d7 to i32*
  %v3_69d7 = load i32, i32* %v2_69d7, align 4
  %v5_69dd = insertvalue %CScript undef, i32 %v1_69bb, 0
  %v6_69dd = call i1 @_Z13SignSignatureRK9CKeyStoreRK7CScriptR12CTransactionji(i32 %v3_69d7, %CScript %v5_69dd, i32 %v3_69cc, i32 %v3_69c5, i32 %v3_69be)
  %v8_69dd = sext i1 %v6_69dd to i32
  store i32 %v8_69dd, i32* @eax, align 4
  %v0_69e2 = load i32, i32* @ebp, align 4
  %v1_69e2 = add i32 %v0_69e2, -12
  %v2_69e2 = inttoptr i32 %v1_69e2 to i32*
  %v3_69e2 = load i32, i32* %v2_69e2, align 4
  %v1_69e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_69e5 = icmp eq i32 %v1_69e5, %v3_69e2
  br i1 %v3_69e5, label %bb, label %dec_label_pc_69ee

bb:                                               ; preds = %dec_label_pc_699d
  %v1_69ec = call i32 @function_69f3()
  br label %dec_label_pc_69ee

dec_label_pc_69ee:                                ; preds = %bb, %dec_label_pc_699d
  %v2_69ec = phi i32 [ %v1_69ec, %bb ], [ %v8_69dd, %dec_label_pc_699d ]
  ret i32 %v2_69ec

; uselistorder directives
  uselistorder i32 %v0_69b8, { 1, 0, 3, 2, 4 }
}

define i32 @function_69f3() local_unnamed_addr {
dec_label_pc_69f3:
  %v0_69f8 = load i32, i32* @eax, align 4
  ret i32 %v0_69f8
}

define %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %values) local_unnamed_addr {
dec_label_pc_69f9:
  %tmp = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %values, 0
  %stack_var_-17 = alloca i8, align 1
  %_foreach_cur1603_-40 = alloca i32, align 4
  %_foreach_col1603_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %result_-68 = alloca %CScript, align 8
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %v4_6a09 = insertvalue %CScript undef, i32 %tmp27, 0
  store %CScript %v4_6a09, %CScript* %result_-68, align 8
  %v1_6a1d = call i32 @_ZN7CScriptC1Ev(i32 %tmp)
  %v2_6a22 = ptrtoint i32* %stack_var_-48 to i32
  %v4_6a2d = getelementptr inbounds %CScript, %CScript* %result_-68, i32 0, i32 0
  %v5_6a2d = load i32, i32* %v4_6a2d, align 8
  %v3_6a37 = call i32 @_ZN5boost15foreach_detail_7containIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS9_PN4mpl_5bool_ILb0EEE(i32 %v2_6a22, i32 %v5_6a2d, i32 0)
  %v1_6a4b = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6a22)
  %v4_6a50 = trunc i32 %v1_6a4b to i8
  %v5_6a50 = icmp eq i8 %v4_6a50, 0
  %v1_6a52 = icmp eq i1 %v5_6a50, false
  br i1 %v1_6a52, label %bb, label %dec_label_pc_6a58

bb:                                               ; preds = %dec_label_pc_69f9
  %v2_6a52 = call i32 @function_6b93()
  br label %dec_label_pc_6a58

dec_label_pc_6a58:                                ; preds = %bb, %dec_label_pc_69f9
  %v2_6a58 = ptrtoint i32* %_foreach_col1603_-44 to i32
  %v4_6a75 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %v2_6a58, i32 %v2_6a22, i32 0, i32 0)
  %v1_6a89 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6a58)
  %v4_6a8e = trunc i32 %v1_6a89 to i8
  %v5_6a8e = icmp eq i8 %v4_6a8e, 0
  %v1_6a90 = icmp eq i1 %v5_6a8e, false
  br i1 %v1_6a90, label %bb35, label %dec_label_pc_6a96

bb35:                                             ; preds = %dec_label_pc_6a58
  %v2_6a90 = call i32 @function_6b93()
  br label %dec_label_pc_6a96

dec_label_pc_6a96:                                ; preds = %bb35, %dec_label_pc_6a58
  %v2_6a96 = ptrtoint i32* %_foreach_cur1603_-40 to i32
  %v4_6ab3 = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %v2_6a96, i32 %v2_6a22, i32 0, i32 0)
  %v1_6ac7 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6a96)
  %v4_6acc = trunc i32 %v1_6ac7 to i8
  %v5_6acc = icmp eq i8 %v4_6acc, 0
  %v1_6ace = icmp eq i1 %v5_6acc, false
  br i1 %v1_6ace, label %bb37, label %dec_label_pc_6ad4

bb37:                                             ; preds = %dec_label_pc_6a96
  %v2_6ace = call i32 @function_6b93()
  br label %dec_label_pc_6ad4

dec_label_pc_6ad4:                                ; preds = %bb37, %dec_label_pc_6a96
  store i8 1, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6b3d

dec_label_pc_6ada:                                ; preds = %dec_label_pc_6b72
  %v2_6ae0 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* nonnull %stack_var_-17)
  %v4_6ae5 = trunc i32 %v2_6ae0 to i8
  %v5_6ae5 = icmp eq i8 %v4_6ae5, 0
  %v1_6ae7 = icmp eq i1 %v5_6ae5, false
  br i1 %v1_6ae7, label %dec_label_pc_6ada.dec_label_pc_6b22_crit_edge, label %dec_label_pc_6ae9

dec_label_pc_6ada.dec_label_pc_6b22_crit_edge:    ; preds = %dec_label_pc_6ada
  %v3_6b22.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6b22

dec_label_pc_6ae9:                                ; preds = %dec_label_pc_6ada
  %v2_6af7 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE(i32 %v2_6a58, i32 0)
  %v3_6b17.pre = load i8, i8* %stack_var_-17, align 1
  %v5_6b1e44 = icmp eq i8 %v3_6b17.pre, 1
  %v1_6b2046 = icmp eq i1 %v5_6b1e44, false
  br i1 %v1_6b2046, label %dec_label_pc_6b17.dec_label_pc_6b22.loopexit_crit_edge, label %dec_label_pc_6b22

dec_label_pc_6b17.dec_label_pc_6b22.loopexit_crit_edge: ; preds = %dec_label_pc_6ae9
  %v2_6b0e = call i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %tmp, i32 %v2_6af7)
  store i8 1, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6b22

dec_label_pc_6b22:                                ; preds = %dec_label_pc_6ae9, %dec_label_pc_6b17.dec_label_pc_6b22.loopexit_crit_edge, %dec_label_pc_6ada.dec_label_pc_6b22_crit_edge
  %v3_6b22 = phi i8 [ %v3_6b22.pre, %dec_label_pc_6ada.dec_label_pc_6b22_crit_edge ], [ 1, %dec_label_pc_6b17.dec_label_pc_6b22.loopexit_crit_edge ], [ %v3_6b17.pre, %dec_label_pc_6ae9 ]
  %v5_6b26 = icmp eq i8 %v3_6b22, 0
  br i1 %v5_6b26, label %dec_label_pc_6b3d, label %dec_label_pc_6b2a

dec_label_pc_6b2a:                                ; preds = %dec_label_pc_6b22
  %v2_6b38 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v2_6a58, i32 0)
  %v3_6b3d.pre.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6b3d

dec_label_pc_6b3d:                                ; preds = %dec_label_pc_6b2a, %dec_label_pc_6b22, %dec_label_pc_6ad4
  %v3_6b3d = phi i8 [ 1, %dec_label_pc_6ad4 ], [ 0, %dec_label_pc_6b22 ], [ %v3_6b3d.pre.pre, %dec_label_pc_6b2a ]
  %v5_6b41 = icmp eq i8 %v3_6b3d, 0
  br i1 %v5_6b41, label %dec_label_pc_6b6d, label %dec_label_pc_6b45

dec_label_pc_6b45:                                ; preds = %dec_label_pc_6b3d
  %v3_6b5a = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE(i32 %v2_6a58, i32 %v2_6a96, i32 0)
  %v1_6b5f = xor i32 %v3_6b5a, 1
  %v4_6b5f = trunc i32 %v1_6b5f to i8
  %v5_6b62 = icmp eq i8 %v4_6b5f, 0
  br i1 %v5_6b62, label %dec_label_pc_6b6d, label %dec_label_pc_6b72

dec_label_pc_6b6d:                                ; preds = %dec_label_pc_6b45, %dec_label_pc_6b3d
  br label %dec_label_pc_6b72

dec_label_pc_6b72:                                ; preds = %dec_label_pc_6b45, %dec_label_pc_6b6d
  %storemerge = phi i1 [ false, %dec_label_pc_6b6d ], [ true, %dec_label_pc_6b45 ]
  br i1 %storemerge, label %dec_label_pc_6ada, label %dec_label_pc_6b7a

dec_label_pc_6b7a:                                ; preds = %dec_label_pc_6b72
  %v0_6b7a = call i32 @function_6b93()
  %v2_6b7a = insertvalue %CScript.27 undef, i32 %v0_6b7a, 0
  ret %CScript.27 %v2_6b7a

; uselistorder directives
  uselistorder i8 %v3_6b17.pre, { 1, 0 }
  uselistorder i32 %v2_6a58, { 0, 2, 1, 3, 4 }
  uselistorder i8* %stack_var_-17, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE, { 1, 0 }
  uselistorder i32 ()* @function_6b93, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost15foreach_detail_7containIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS9_PN4mpl_5bool_ILb0EEE, { 1, 0 }
  uselistorder label %dec_label_pc_6b72, { 1, 0 }
  uselistorder label %dec_label_pc_6b22, { 1, 0, 2 }
}

define i32 @function_6b7d() local_unnamed_addr {
dec_label_pc_6b7d:
  %eax.global-to-local = alloca i32, align 4
  %v0_6b7d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_6b7d
}

define i32 @function_6b93() local_unnamed_addr {
dec_label_pc_6b93:
  %v0_6b94 = load i32, i32* @ebp, align 4
  %v1_6b94 = add i32 %v0_6b94, -60
  %v2_6b94 = inttoptr i32 %v1_6b94 to i32*
  %v3_6b94 = load i32, i32* %v2_6b94, align 4
  store i32 %v3_6b94, i32* @eax, align 4
  %v1_6b97 = add i32 %v0_6b94, -12
  %v2_6b97 = inttoptr i32 %v1_6b97 to i32*
  %v3_6b97 = load i32, i32* %v2_6b97, align 4
  %v1_6b9a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_6b9a = icmp eq i32 %v1_6b9a, %v3_6b97
  br i1 %v3_6b9a, label %bb, label %dec_label_pc_6ba3

bb:                                               ; preds = %dec_label_pc_6b93
  %v1_6ba1 = call i32 @function_6ba8()
  br label %dec_label_pc_6ba3

dec_label_pc_6ba3:                                ; preds = %bb, %dec_label_pc_6b93
  %v2_6ba1 = phi i32 [ %v1_6ba1, %bb ], [ %v3_6b94, %dec_label_pc_6b93 ]
  ret i32 %v2_6ba1
}

define i32 @function_6ba8() local_unnamed_addr {
dec_label_pc_6ba8:
  %v0_6ba8 = load i32, i32* @ebp, align 4
  %v1_6ba8 = add i32 %v0_6ba8, -4
  %v2_6ba8 = inttoptr i32 %v1_6ba8 to i32*
  %v3_6ba8 = load i32, i32* %v2_6ba8, align 4
  store i32 %v3_6ba8, i32* @ebx, align 4
  %v0_6bac = load i32, i32* @eax, align 4
  ret i32 %v0_6bac
}

define %CScript.29 @CombineMultisig(%CScript.28 %scriptPubKey, i32 %txTo, i32 %nIn, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutions, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs1, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2) local_unnamed_addr {
dec_label_pc_6baf:
  %eax.global-to-local = alloca i32, align 4
  %tmp = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2, 0
  %tmp26 = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs1, 0
  %stack_var_-140 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-124 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v2_6c03 = ptrtoint i32* %stack_var_-208 to i32
  store i32 %v2_6c03, i32* %eax.global-to-local, align 4
  %v1_6c0c = call i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EEC1Ev(i32 %v2_6c03)
  %v2_6c11 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_6c11, i32* %eax.global-to-local, align 4
  %v3_6c29 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %v2_6c11, i32 %tmp, i32 0)
  store i32 %v2_6c11, i32* %eax.global-to-local, align 4
  %v1_6c3d = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6c11)
  store i32 %v1_6c3d, i32* %eax.global-to-local, align 4
  %v4_6c42 = trunc i32 %v1_6c3d to i8
  %v5_6c42 = icmp eq i8 %v4_6c42, 0
  %v1_6c44 = icmp eq i1 %v5_6c42, false
  br i1 %v1_6c44, label %dec_label_pc_6d91, label %dec_label_pc_6c4a

dec_label_pc_6c4a:                                ; preds = %dec_label_pc_6baf
  %v2_6c4a = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_6c4a, i32* %eax.global-to-local, align 4
  %v4_6c67 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %v2_6c4a, i32 %v2_6c11, i32 0, i32 0)
  store i32 %v2_6c4a, i32* %eax.global-to-local, align 4
  %v1_6c7b = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6c4a)
  store i32 %v1_6c7b, i32* %eax.global-to-local, align 4
  %v4_6c80 = trunc i32 %v1_6c7b to i8
  %v5_6c80 = icmp eq i8 %v4_6c80, 0
  %v1_6c82 = icmp eq i1 %v5_6c80, false
  br i1 %v1_6c82, label %dec_label_pc_6d91, label %dec_label_pc_6c88

dec_label_pc_6c88:                                ; preds = %dec_label_pc_6c4a
  %v2_6c88 = ptrtoint i32* %stack_var_-124 to i32
  store i32 %v2_6c88, i32* %eax.global-to-local, align 4
  %v4_6ca5 = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %v2_6c88, i32 %v2_6c11, i32 0, i32 0)
  store i32 %v2_6c88, i32* %eax.global-to-local, align 4
  %v1_6cb9 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6c88)
  store i32 %v1_6cb9, i32* %eax.global-to-local, align 4
  %v4_6cbe = trunc i32 %v1_6cb9 to i8
  %v5_6cbe = icmp eq i8 %v4_6cbe, 0
  %v1_6cc0 = icmp eq i1 %v5_6cbe, false
  br i1 %v1_6cc0, label %dec_label_pc_6d91, label %dec_label_pc_6cc6

dec_label_pc_6cc6:                                ; preds = %dec_label_pc_6c88
  store i8 1, i8* %stack_var_-17, align 1
  %v2_6ccf = ptrtoint i8* %stack_var_-17 to i32
  %v2_6d08 = ptrtoint i32* %stack_var_-148 to i32
  br label %dec_label_pc_6d54

dec_label_pc_6ccf:                                ; preds = %dec_label_pc_6d89
  store i32 %v2_6ccf, i32* %eax.global-to-local, align 4
  %v1_6cd2 = load i32, i32* @esp, align 4
  %v2_6cd2 = inttoptr i32 %v1_6cd2 to i32*
  store i32 %v2_6ccf, i32* %v2_6cd2, align 4
  %v0_6cd5 = load i8, i8* %stack_var_-17, align 1
  %v1_6cd5 = sext i8 %v0_6cd5 to i32
  %v2_6cd5 = inttoptr i32 %v1_6cd5 to i8*
  %v3_6cd5 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v2_6cd5)
  store i32 %v3_6cd5, i32* %eax.global-to-local, align 4
  %v4_6cda = trunc i32 %v3_6cd5 to i8
  %v5_6cda = icmp eq i8 %v4_6cda, 0
  %v1_6cdc = icmp eq i1 %v5_6cda, false
  br i1 %v1_6cdc, label %dec_label_pc_6ccf.dec_label_pc_6d39_crit_edge, label %dec_label_pc_6cde

dec_label_pc_6ccf.dec_label_pc_6d39_crit_edge:    ; preds = %dec_label_pc_6ccf
  %v3_6d39.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6d39

dec_label_pc_6cde:                                ; preds = %dec_label_pc_6ccf
  %v0_6cde = load i32, i32* @esp, align 4
  %v1_6cde = add i32 %v0_6cde, 4
  %v2_6cde = inttoptr i32 %v1_6cde to i32*
  store i32 0, i32* %v2_6cde, align 4
  store i32 %v2_6c4a, i32* @eax, align 4
  %v1_6ce9 = load i32, i32* @esp, align 4
  %v2_6ce9 = inttoptr i32 %v1_6ce9 to i32*
  store i32 %v2_6c4a, i32* %v2_6ce9, align 4
  %v0_6cec = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE()
  %v3_6d2e.pre = load i8, i8* %stack_var_-17, align 1
  %v4_6d2e86 = zext i8 %v3_6d2e.pre to i32
  %v1_6d3287 = xor i32 %v4_6d2e86, 1
  store i32 %v1_6d3287, i32* %eax.global-to-local, align 4
  %v5_6d3592 = icmp eq i32 %v1_6d3287, 0
  %v1_6d3794 = icmp eq i1 %v5_6d3592, false
  br i1 %v1_6d3794, label %dec_label_pc_6cf6, label %dec_label_pc_6d39

dec_label_pc_6cf6:                                ; preds = %dec_label_pc_6cde
  store i32 %v0_6cec, i32* %eax.global-to-local, align 4
  %v1_6cf9 = load i32, i32* @esp, align 4
  %v2_6cf9 = inttoptr i32 %v1_6cf9 to i32*
  store i32 %v0_6cec, i32* %v2_6cf9, align 4
  %v1_6cfc = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v0_6cec)
  %v1_6d01 = xor i32 %v1_6cfc, 1
  %v4_6d01 = trunc i32 %v1_6d01 to i8
  store i32 %v1_6d01, i32* %eax.global-to-local, align 4
  %v5_6d04 = icmp eq i8 %v4_6d01, 0
  br i1 %v5_6d04, label %dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge, label %dec_label_pc_6d08

dec_label_pc_6d08:                                ; preds = %dec_label_pc_6cf6
  store i32 %v2_6d08, i32* %eax.global-to-local, align 4
  %v1_6d11 = load i32, i32* @esp, align 4
  %v2_6d11 = add i32 %v1_6d11, 8
  %v3_6d11 = inttoptr i32 %v2_6d11 to i32*
  store i32 %v0_6cec, i32* %v3_6d11, align 4
  %v1_6d1b = load i32, i32* @esp, align 4
  %v2_6d1b = add i32 %v1_6d1b, 4
  %v3_6d1b = inttoptr i32 %v2_6d1b to i32*
  store i32 %v2_6c03, i32* %v3_6d1b, align 4
  %v1_6d1f = load i32, i32* @esp, align 4
  %v2_6d1f = inttoptr i32 %v1_6d1f to i32*
  store i32 %v2_6d08, i32* %v2_6d1f, align 4
  %v0_6d22 = call i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE6insertERKS2_()
  store i32 %v0_6d22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge

dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge: ; preds = %dec_label_pc_6cf6, %dec_label_pc_6d08
  store i8 1, i8* %stack_var_-17, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6d39

dec_label_pc_6d39:                                ; preds = %dec_label_pc_6cde, %dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge, %dec_label_pc_6ccf.dec_label_pc_6d39_crit_edge
  %v3_6d39 = phi i8 [ %v3_6d39.pre, %dec_label_pc_6ccf.dec_label_pc_6d39_crit_edge ], [ 1, %dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge ], [ %v3_6d2e.pre, %dec_label_pc_6cde ]
  %v4_6d39 = zext i8 %v3_6d39 to i32
  store i32 %v4_6d39, i32* %eax.global-to-local, align 4
  %v5_6d3d = icmp eq i8 %v3_6d39, 0
  br i1 %v5_6d3d, label %dec_label_pc_6d54, label %dec_label_pc_6d41

dec_label_pc_6d41:                                ; preds = %dec_label_pc_6d39
  %v0_6d41 = load i32, i32* @esp, align 4
  %v1_6d41 = add i32 %v0_6d41, 4
  %v2_6d41 = inttoptr i32 %v1_6d41 to i32*
  store i32 0, i32* %v2_6d41, align 4
  store i32 %v2_6c4a, i32* %eax.global-to-local, align 4
  %v1_6d4c = load i32, i32* @esp, align 4
  %v2_6d4c = inttoptr i32 %v1_6d4c to i32*
  store i32 %v2_6c4a, i32* %v2_6d4c, align 4
  %v0_6d4f = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE()
  store i32 %v0_6d4f, i32* %eax.global-to-local, align 4
  %v3_6d54.pre.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6d54

dec_label_pc_6d54:                                ; preds = %dec_label_pc_6d41, %dec_label_pc_6d39, %dec_label_pc_6cc6
  %v3_6d54 = phi i8 [ 1, %dec_label_pc_6cc6 ], [ 0, %dec_label_pc_6d39 ], [ %v3_6d54.pre.pre, %dec_label_pc_6d41 ]
  %v4_6d54 = zext i8 %v3_6d54 to i32
  store i32 %v4_6d54, i32* %eax.global-to-local, align 4
  %v5_6d58 = icmp eq i8 %v3_6d54, 0
  br i1 %v5_6d58, label %dec_label_pc_6d84, label %dec_label_pc_6d5c

dec_label_pc_6d5c:                                ; preds = %dec_label_pc_6d54
  %v0_6d5c = load i32, i32* @esp, align 4
  %v1_6d5c = add i32 %v0_6d5c, 8
  %v2_6d5c = inttoptr i32 %v1_6d5c to i32*
  store i32 0, i32* %v2_6d5c, align 4
  %v1_6d67 = load i32, i32* @esp, align 4
  %v2_6d67 = add i32 %v1_6d67, 4
  %v3_6d67 = inttoptr i32 %v2_6d67 to i32*
  store i32 %v2_6c88, i32* %v3_6d67, align 4
  store i32 %v2_6c4a, i32* %eax.global-to-local, align 4
  %v1_6d6e = load i32, i32* @esp, align 4
  %v2_6d6e = inttoptr i32 %v1_6d6e to i32*
  store i32 %v2_6c4a, i32* %v2_6d6e, align 4
  %v0_6d71 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE()
  %v1_6d76 = xor i32 %v0_6d71, 1
  %v4_6d76 = trunc i32 %v1_6d76 to i8
  store i32 %v1_6d76, i32* %eax.global-to-local, align 4
  %v5_6d79 = icmp eq i8 %v4_6d76, 0
  br i1 %v5_6d79, label %dec_label_pc_6d84, label %dec_label_pc_6d89

dec_label_pc_6d84:                                ; preds = %dec_label_pc_6d5c, %dec_label_pc_6d54
  br label %dec_label_pc_6d89

dec_label_pc_6d89:                                ; preds = %dec_label_pc_6d5c, %dec_label_pc_6d84
  %storemerge17 = phi i32 [ 0, %dec_label_pc_6d84 ], [ 1, %dec_label_pc_6d5c ]
  store i32 %storemerge17, i32* %eax.global-to-local, align 4
  %v5_6d89 = icmp eq i32 %storemerge17, 0
  %v1_6d8b = icmp eq i1 %v5_6d89, false
  br i1 %v1_6d8b, label %dec_label_pc_6ccf, label %dec_label_pc_6d91

dec_label_pc_6d91:                                ; preds = %dec_label_pc_6d89, %dec_label_pc_6c88, %dec_label_pc_6c4a, %dec_label_pc_6baf
  %v2_6d91 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_6d91, i32* %eax.global-to-local, align 4
  %v0_6d94 = load i32, i32* @esp, align 4
  %v1_6d94 = add i32 %v0_6d94, 8
  %v2_6d94 = inttoptr i32 %v1_6d94 to i32*
  store i32 0, i32* %v2_6d94, align 4
  %v1_6da2 = load i32, i32* @esp, align 4
  %v2_6da2 = add i32 %v1_6da2, 4
  %v3_6da2 = inttoptr i32 %v2_6da2 to i32*
  %v1_6da6 = load i32, i32* @esp, align 4
  %v2_6da6 = inttoptr i32 %v1_6da6 to i32*
  store i32 %v2_6d91, i32* %v2_6da6, align 4
  %v0_6da9 = load i8, i8* %stack_var_-17, align 1
  %v1_6da9 = sext i8 %v0_6da9 to i32
  %v4_6da9 = call i32 @_ZN5boost15foreach_detail_7containISt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %v1_6da9, i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  %v0_6dae = load i32, i32* @esp, align 4
  %v1_6dae = add i32 %v0_6dae, -4
  store i32 %v2_6d91, i32* %eax.global-to-local, align 4
  %v2_6dba = inttoptr i32 %v1_6dae to i32*
  store i32 %v2_6d91, i32* %v2_6dba, align 4
  %v1_6dbd = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6d91)
  store i32 %v1_6dbd, i32* %eax.global-to-local, align 4
  %v4_6dc2 = trunc i32 %v1_6dbd to i8
  %v5_6dc2 = icmp eq i8 %v4_6dc2, 0
  %v1_6dc4 = icmp eq i1 %v5_6dc2, false
  br i1 %v1_6dc4, label %dec_label_pc_6f11, label %dec_label_pc_6dca

dec_label_pc_6dca:                                ; preds = %dec_label_pc_6d91
  %v2_6dca = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_6dca, i32* %eax.global-to-local, align 4
  %v0_6dcd = load i32, i32* @esp, align 4
  %v1_6dcd = add i32 %v0_6dcd, 12
  %v2_6dcd = inttoptr i32 %v1_6dcd to i32*
  store i32 0, i32* %v2_6dcd, align 4
  %v0_6dd5 = load i32, i32* @esp, align 4
  %v1_6dd5 = add i32 %v0_6dd5, 8
  %v2_6dd5 = inttoptr i32 %v1_6dd5 to i32*
  store i32 0, i32* %v2_6dd5, align 4
  %v1_6de0 = load i32, i32* @esp, align 4
  %v2_6de0 = add i32 %v1_6de0, 4
  %v3_6de0 = inttoptr i32 %v2_6de0 to i32*
  store i32 %v2_6d91, i32* %v3_6de0, align 4
  %v1_6de4 = load i32, i32* @esp, align 4
  %v2_6de4 = inttoptr i32 %v1_6de4 to i32*
  store i32 %v2_6dca, i32* %v2_6de4, align 4
  %v4_6de7 = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %v2_6d91, i32 %tmp31, i32 %tmp29, i32 %tmp28)
  %v0_6dec = load i32, i32* @esp, align 4
  %v1_6dec = add i32 %v0_6dec, -4
  store i32 %v2_6dca, i32* %eax.global-to-local, align 4
  %v2_6df8 = inttoptr i32 %v1_6dec to i32*
  store i32 %v2_6dca, i32* %v2_6df8, align 4
  %v1_6dfb = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6dca)
  store i32 %v1_6dfb, i32* %eax.global-to-local, align 4
  %v4_6e00 = trunc i32 %v1_6dfb to i8
  %v5_6e00 = icmp eq i8 %v4_6e00, 0
  %v1_6e02 = icmp eq i1 %v5_6e00, false
  br i1 %v1_6e02, label %dec_label_pc_6f11, label %dec_label_pc_6e08

dec_label_pc_6e08:                                ; preds = %dec_label_pc_6dca
  %v2_6e08 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_6e08, i32* %eax.global-to-local, align 4
  %v0_6e0b = load i32, i32* @esp, align 4
  %v1_6e0b = add i32 %v0_6e0b, 12
  %v2_6e0b = inttoptr i32 %v1_6e0b to i32*
  store i32 0, i32* %v2_6e0b, align 4
  %v0_6e13 = load i32, i32* @esp, align 4
  %v1_6e13 = add i32 %v0_6e13, 8
  %v2_6e13 = inttoptr i32 %v1_6e13 to i32*
  store i32 0, i32* %v2_6e13, align 4
  %v1_6e1e = load i32, i32* @esp, align 4
  %v2_6e1e = add i32 %v1_6e1e, 4
  %v3_6e1e = inttoptr i32 %v2_6e1e to i32*
  store i32 %v2_6d91, i32* %v3_6e1e, align 4
  %v1_6e22 = load i32, i32* @esp, align 4
  %v2_6e22 = inttoptr i32 %v1_6e22 to i32*
  store i32 %v2_6e08, i32* %v2_6e22, align 4
  %v4_6e25 = call i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %v2_6dca, i32 %tmp29, i32 %tmp28, i32 ptrtoint (i32* @9 to i32))
  %v0_6e2a = load i32, i32* @esp, align 4
  %v1_6e2a = add i32 %v0_6e2a, -4
  store i32 %v2_6e08, i32* %eax.global-to-local, align 4
  %v2_6e36 = inttoptr i32 %v1_6e2a to i32*
  store i32 %v2_6e08, i32* %v2_6e36, align 4
  %v1_6e39 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_6e08)
  store i32 %v1_6e39, i32* %eax.global-to-local, align 4
  %v4_6e3e = trunc i32 %v1_6e39 to i8
  %v5_6e3e = icmp eq i8 %v4_6e3e, 0
  %v1_6e40 = icmp eq i1 %v5_6e3e, false
  br i1 %v1_6e40, label %dec_label_pc_6f11, label %dec_label_pc_6e46

dec_label_pc_6e46:                                ; preds = %dec_label_pc_6e08
  store i8 1, i8* %stack_var_-17, align 1
  %v2_6e4f = ptrtoint i8* %stack_var_-17 to i32
  %v2_6e88 = ptrtoint i32* %stack_var_-140 to i32
  br label %dec_label_pc_6ed4

dec_label_pc_6e4f:                                ; preds = %dec_label_pc_6f09
  store i32 %v2_6e4f, i32* %eax.global-to-local, align 4
  %v1_6e52 = load i32, i32* @esp, align 4
  %v2_6e52 = inttoptr i32 %v1_6e52 to i32*
  store i32 %v2_6e4f, i32* %v2_6e52, align 4
  %v0_6e55 = load i8, i8* %stack_var_-17, align 1
  %v1_6e55 = sext i8 %v0_6e55 to i32
  %v2_6e55 = inttoptr i32 %v1_6e55 to i8*
  %v3_6e55 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v2_6e55)
  store i32 %v3_6e55, i32* %eax.global-to-local, align 4
  %v4_6e5a = trunc i32 %v3_6e55 to i8
  %v5_6e5a = icmp eq i8 %v4_6e5a, 0
  %v1_6e5c = icmp eq i1 %v5_6e5a, false
  br i1 %v1_6e5c, label %dec_label_pc_6e4f.dec_label_pc_6eb9_crit_edge, label %dec_label_pc_6e5e

dec_label_pc_6e4f.dec_label_pc_6eb9_crit_edge:    ; preds = %dec_label_pc_6e4f
  %v3_6eb9.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6eb9

dec_label_pc_6e5e:                                ; preds = %dec_label_pc_6e4f
  %v0_6e5e = load i32, i32* @esp, align 4
  %v1_6e5e = add i32 %v0_6e5e, 4
  %v2_6e5e = inttoptr i32 %v1_6e5e to i32*
  store i32 0, i32* %v2_6e5e, align 4
  store i32 %v2_6dca, i32* @eax, align 4
  %v1_6e69 = load i32, i32* @esp, align 4
  %v2_6e69 = inttoptr i32 %v1_6e69 to i32*
  store i32 %v2_6dca, i32* %v2_6e69, align 4
  %v0_6e6c = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE()
  %v3_6eae.pre = load i8, i8* %stack_var_-17, align 1
  %v4_6eae77 = zext i8 %v3_6eae.pre to i32
  %v1_6eb278 = xor i32 %v4_6eae77, 1
  store i32 %v1_6eb278, i32* %eax.global-to-local, align 4
  %v5_6eb583 = icmp eq i32 %v1_6eb278, 0
  %v1_6eb785 = icmp eq i1 %v5_6eb583, false
  br i1 %v1_6eb785, label %dec_label_pc_6e76, label %dec_label_pc_6eb9

dec_label_pc_6e76:                                ; preds = %dec_label_pc_6e5e
  store i32 %v0_6e6c, i32* %eax.global-to-local, align 4
  %v1_6e79 = load i32, i32* @esp, align 4
  %v2_6e79 = inttoptr i32 %v1_6e79 to i32*
  store i32 %v0_6e6c, i32* %v2_6e79, align 4
  %v1_6e7c = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v0_6e6c)
  %v1_6e81 = xor i32 %v1_6e7c, 1
  %v4_6e81 = trunc i32 %v1_6e81 to i8
  store i32 %v1_6e81, i32* %eax.global-to-local, align 4
  %v5_6e84 = icmp eq i8 %v4_6e81, 0
  br i1 %v5_6e84, label %dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge, label %dec_label_pc_6e88

dec_label_pc_6e88:                                ; preds = %dec_label_pc_6e76
  store i32 %v2_6e88, i32* %eax.global-to-local, align 4
  %v1_6e91 = load i32, i32* @esp, align 4
  %v2_6e91 = add i32 %v1_6e91, 8
  %v3_6e91 = inttoptr i32 %v2_6e91 to i32*
  store i32 %v0_6e6c, i32* %v3_6e91, align 4
  %v1_6e9b = load i32, i32* @esp, align 4
  %v2_6e9b = add i32 %v1_6e9b, 4
  %v3_6e9b = inttoptr i32 %v2_6e9b to i32*
  store i32 %v2_6c03, i32* %v3_6e9b, align 4
  %v1_6e9f = load i32, i32* @esp, align 4
  %v2_6e9f = inttoptr i32 %v1_6e9f to i32*
  store i32 %v2_6e88, i32* %v2_6e9f, align 4
  %v0_6ea2 = call i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE6insertERKS2_()
  store i32 %v0_6ea2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge

dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge: ; preds = %dec_label_pc_6e76, %dec_label_pc_6e88
  store i8 1, i8* %stack_var_-17, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6eb9

dec_label_pc_6eb9:                                ; preds = %dec_label_pc_6e5e, %dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge, %dec_label_pc_6e4f.dec_label_pc_6eb9_crit_edge
  %v3_6eb9 = phi i8 [ %v3_6eb9.pre, %dec_label_pc_6e4f.dec_label_pc_6eb9_crit_edge ], [ 1, %dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge ], [ %v3_6eae.pre, %dec_label_pc_6e5e ]
  %v4_6eb9 = zext i8 %v3_6eb9 to i32
  store i32 %v4_6eb9, i32* %eax.global-to-local, align 4
  %v5_6ebd = icmp eq i8 %v3_6eb9, 0
  br i1 %v5_6ebd, label %dec_label_pc_6ed4, label %dec_label_pc_6ec1

dec_label_pc_6ec1:                                ; preds = %dec_label_pc_6eb9
  %v0_6ec1 = load i32, i32* @esp, align 4
  %v1_6ec1 = add i32 %v0_6ec1, 4
  %v2_6ec1 = inttoptr i32 %v1_6ec1 to i32*
  store i32 0, i32* %v2_6ec1, align 4
  store i32 %v2_6dca, i32* %eax.global-to-local, align 4
  %v1_6ecc = load i32, i32* @esp, align 4
  %v2_6ecc = inttoptr i32 %v1_6ecc to i32*
  store i32 %v2_6dca, i32* %v2_6ecc, align 4
  %v0_6ecf = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE()
  store i32 %v0_6ecf, i32* %eax.global-to-local, align 4
  %v3_6ed4.pre.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_6ed4

dec_label_pc_6ed4:                                ; preds = %dec_label_pc_6ec1, %dec_label_pc_6eb9, %dec_label_pc_6e46
  %v3_6ed4 = phi i8 [ 1, %dec_label_pc_6e46 ], [ 0, %dec_label_pc_6eb9 ], [ %v3_6ed4.pre.pre, %dec_label_pc_6ec1 ]
  %v4_6ed4 = zext i8 %v3_6ed4 to i32
  store i32 %v4_6ed4, i32* %eax.global-to-local, align 4
  %v5_6ed8 = icmp eq i8 %v3_6ed4, 0
  br i1 %v5_6ed8, label %dec_label_pc_6f04, label %dec_label_pc_6edc

dec_label_pc_6edc:                                ; preds = %dec_label_pc_6ed4
  %v0_6edc = load i32, i32* @esp, align 4
  %v1_6edc = add i32 %v0_6edc, 8
  %v2_6edc = inttoptr i32 %v1_6edc to i32*
  store i32 0, i32* %v2_6edc, align 4
  %v1_6ee7 = load i32, i32* @esp, align 4
  %v2_6ee7 = add i32 %v1_6ee7, 4
  %v3_6ee7 = inttoptr i32 %v2_6ee7 to i32*
  store i32 %v2_6e08, i32* %v3_6ee7, align 4
  store i32 %v2_6dca, i32* %eax.global-to-local, align 4
  %v1_6eee = load i32, i32* @esp, align 4
  %v2_6eee = inttoptr i32 %v1_6eee to i32*
  store i32 %v2_6dca, i32* %v2_6eee, align 4
  %v0_6ef1 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE()
  %v1_6ef6 = xor i32 %v0_6ef1, 1
  %v4_6ef6 = trunc i32 %v1_6ef6 to i8
  store i32 %v1_6ef6, i32* %eax.global-to-local, align 4
  %v5_6ef9 = icmp eq i8 %v4_6ef6, 0
  br i1 %v5_6ef9, label %dec_label_pc_6f04, label %dec_label_pc_6f09

dec_label_pc_6f04:                                ; preds = %dec_label_pc_6edc, %dec_label_pc_6ed4
  br label %dec_label_pc_6f09

dec_label_pc_6f09:                                ; preds = %dec_label_pc_6edc, %dec_label_pc_6f04
  %storemerge = phi i32 [ 0, %dec_label_pc_6f04 ], [ 1, %dec_label_pc_6edc ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_6f09 = icmp eq i32 %storemerge, 0
  %v1_6f0b = icmp eq i1 %v5_6f09, false
  br i1 %v1_6f0b, label %dec_label_pc_6e4f, label %dec_label_pc_6f11

dec_label_pc_6f11:                                ; preds = %dec_label_pc_6f09, %dec_label_pc_6e08, %dec_label_pc_6dca, %dec_label_pc_6d91
  store i32 %tmp26, i32* %eax.global-to-local, align 4
  %v1_6f17 = load i32, i32* @esp, align 4
  %v2_6f17 = inttoptr i32 %v1_6f17 to i32*
  store i32 %tmp26, i32* %v2_6f17, align 4
  %v0_6f1a = load i8, i8* %stack_var_-17, align 1
  %v1_6f1a = sext i8 %v0_6f1a to i32
  %v2_6f1a = inttoptr i32 %v1_6f1a to i32*
  %v3_6f1a = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v2_6f1a)
  store i32 %v3_6f1a, i32* %eax.global-to-local, align 4
  %tmp96 = or i32 %v3_6f1a, 1
  %tmp97 = icmp eq i32 %tmp96, 1
  br i1 %tmp97, label %dec_label_pc_6f24, label %bb

bb:                                               ; preds = %dec_label_pc_6f11
  %v4_6f22 = call i32 @function_6f48()
  store i32 %v4_6f22, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_6f24

dec_label_pc_6f24:                                ; preds = %dec_label_pc_6f11, %bb
  %v0_6f24 = load i32, i32* @esp, align 4
  %v1_6f24 = add i32 %v0_6f24, 12
  %v2_6f24 = inttoptr i32 %v1_6f24 to i32*
  store i32 ptrtoint ([203 x i8]* @global_var_ccd0.2226 to i32), i32* %v2_6f24, align 4
  %v0_6f2c = load i32, i32* @esp, align 4
  %v1_6f2c = add i32 %v0_6f2c, 8
  %v2_6f2c = inttoptr i32 %v1_6f2c to i32*
  store i32 ptrtoint (i32* @global_var_65a.2227 to i32), i32* %v2_6f2c, align 4
  %v0_6f34 = load i32, i32* @esp, align 4
  %v1_6f34 = add i32 %v0_6f34, 4
  %v2_6f34 = inttoptr i32 %v1_6f34 to i32*
  store i32 ptrtoint ([11 x i8]* @global_var_c1d8.2204 to i32), i32* %v2_6f34, align 4
  %v0_6f3c = load i32, i32* @esp, align 4
  %v1_6f3c = inttoptr i32 %v0_6f3c to i32*
  store i32 ptrtoint ([22 x i8]* @global_var_c508.2228 to i32), i32* %v1_6f3c, align 4
  %v2_6f3c = load i32, i32* %eax.global-to-local, align 4
  %v3_6f3c = insertvalue %CScript.29 undef, i32 %v2_6f3c, 0
  ret %CScript.29 %v3_6f3c

; uselistorder directives
  uselistorder i8 %v3_6ed4, { 1, 0 }
  uselistorder i8 %v3_6eb9, { 1, 0 }
  uselistorder i32 %v0_6e6c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_6e08, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_6dca, { 1, 0, 5, 4, 3, 2, 6, 7, 9, 8, 10, 11 }
  uselistorder i32 %v2_6d91, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i8 %v3_6d54, { 1, 0 }
  uselistorder i8 %v3_6d39, { 1, 0 }
  uselistorder i32 %v0_6cec, { 0, 1, 3, 2 }
  uselistorder i32 %v2_6c88, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_6c4a, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9 }
  uselistorder i32 %v2_6c11, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_6c03, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 7, 0, 10, 2, 1, 8, 11, 12, 6, 3, 13, 5, 4, 9, 14, 15 }
  uselistorder i32 %tmp26, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 14, 0, 15, 16, 3, 17, 18, 19, 8, 9, 10, 11, 4, 5, 6, 7, 1, 12, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 20, 40, 41, 42, 25, 26, 27, 28, 21, 22, 23, 24, 2, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 ()* @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 ()* @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE, { 1, 0 }
  uselistorder i32 ()* @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE6insertERKS2_, { 1, 0 }
  uselistorder i32 ()* @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN5boost15foreach_detail_7containISt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE, { 1, 0 }
  uselistorder label %dec_label_pc_6f24, { 1, 0 }
  uselistorder label %dec_label_pc_6f09, { 1, 0 }
  uselistorder label %dec_label_pc_6eb9, { 1, 0, 2 }
  uselistorder label %dec_label_pc_6eae.dec_label_pc_6eb9.loopexit_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_6d89, { 1, 0 }
  uselistorder label %dec_label_pc_6d39, { 1, 0, 2 }
  uselistorder label %dec_label_pc_6d2e.dec_label_pc_6d39.loopexit_crit_edge, { 1, 0 }
}

define i32 @function_6f48() local_unnamed_addr {
dec_label_pc_6f48:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_6f48 = load i32, i32* @ebp, align 4
  %v1_6f48 = add i32 %v0_6f48, -236
  %v2_6f48 = inttoptr i32 %v1_6f48 to i32*
  %v3_6f48 = load i32, i32* %v2_6f48, align 4
  %v1_6f51 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5frontEv(i32 %v3_6f48)
  %v2_6f61 = inttoptr i32 %v1_6f51 to i32*
  %v3_6f61 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v2_6f61, i32 0)
  %v1_6f66 = inttoptr i32 %v3_6f61 to i8*
  %v2_6f66 = load i8, i8* %v1_6f66, align 1
  %v3_6f66 = zext i8 %v2_6f66 to i32
  %v1_6f6c = load i32, i32* @ebp, align 4
  %v2_6f6c = add i32 %v1_6f6c, -44
  %v3_6f6c = inttoptr i32 %v2_6f6c to i32*
  store i32 %v3_6f66, i32* %v3_6f6c, align 4
  %v0_6f6f = load i32, i32* @ebp, align 4
  %v1_6f6f = add i32 %v0_6f6f, -236
  %v2_6f6f = inttoptr i32 %v1_6f6f to i32*
  %v3_6f6f = load i32, i32* %v2_6f6f, align 4
  %v1_6f78 = inttoptr i32 %v3_6f6f to i32*
  %v2_6f78 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_6f78)
  %v1_6f7d = add i32 %v2_6f78, -2
  %v1_6f80 = load i32, i32* @ebp, align 4
  %v2_6f80 = add i32 %v1_6f80, -40
  %v3_6f80 = inttoptr i32 %v2_6f80 to i32*
  store i32 %v1_6f7d, i32* %v3_6f80, align 4
  %v0_6f83 = load i32, i32* @ebp, align 4
  %v1_6f83 = add i32 %v0_6f83, -180
  %v1_6f8c = call i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEC1Ev(i32 %v1_6f83)
  %v0_6f91 = load i32, i32* @ebp, align 4
  %v1_6f91 = add i32 %v0_6f91, -104
  %v1_6f9c = add i32 %v0_6f91, -204
  %v3_6fa9 = call i32 @_ZN5boost15foreach_detail_7containISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS0_8auto_anyIPT_EERSB_PN4mpl_5bool_ILb0EEE(i32 %v1_6f91, i32 %v1_6f9c, i32 0)
  %v0_6fb1 = load i32, i32* @ebp, align 4
  %v1_6fb1 = add i32 %v0_6fb1, -104
  %v2_6fb4 = add i32 %v0_6fb1, -36
  %v3_6fb4 = inttoptr i32 %v2_6fb4 to i32*
  store i32 %v1_6fb1, i32* %v3_6fb4, align 4
  %v0_6fb7 = load i32, i32* @ebp, align 4
  %v1_6fb7 = add i32 %v0_6fb7, -36
  %v2_6fb7 = inttoptr i32 %v1_6fb7 to i32*
  %v3_6fb7 = load i32, i32* %v2_6fb7, align 4
  %v1_6fbd = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_6fb7)
  %v4_6fc2 = trunc i32 %v1_6fbd to i8
  %v5_6fc2 = icmp eq i8 %v4_6fc2, 0
  %v1_6fc4 = icmp eq i1 %v5_6fc2, false
  br i1 %v1_6fc4, label %dec_label_pc_71d9, label %dec_label_pc_6fca

dec_label_pc_6fca:                                ; preds = %dec_label_pc_6f48
  %v0_6fca = load i32, i32* @ebp, align 4
  %v1_6fca = add i32 %v0_6fca, -100
  %v1_6fdd = add i32 %v0_6fca, -36
  %v2_6fdd = inttoptr i32 %v1_6fdd to i32*
  %v3_6fdd = load i32, i32* %v2_6fdd, align 4
  %v4_6fe7 = call i32 @_ZN5boost15foreach_detail_5beginISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %v1_6fca, i32 %v3_6fdd, i32 0, i32 0)
  %v0_6fef = load i32, i32* @ebp, align 4
  %v1_6fef = add i32 %v0_6fef, -100
  %v2_6ff2 = add i32 %v0_6fef, -32
  %v3_6ff2 = inttoptr i32 %v2_6ff2 to i32*
  store i32 %v1_6fef, i32* %v3_6ff2, align 4
  %v0_6ff5 = load i32, i32* @ebp, align 4
  %v1_6ff5 = add i32 %v0_6ff5, -32
  %v2_6ff5 = inttoptr i32 %v1_6ff5 to i32*
  %v3_6ff5 = load i32, i32* %v2_6ff5, align 4
  store i32 %v3_6ff5, i32* %stack_var_-8, align 4
  %v1_6ffb = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_6ff5)
  %v4_7000 = trunc i32 %v1_6ffb to i8
  %v5_7000 = icmp eq i8 %v4_7000, 0
  %v1_7002 = icmp eq i1 %v5_7000, false
  br i1 %v1_7002, label %dec_label_pc_71d9, label %dec_label_pc_7008

dec_label_pc_7008:                                ; preds = %dec_label_pc_6fca
  %v0_7008 = load i32, i32* @ebp, align 4
  %v1_7008 = add i32 %v0_7008, -96
  %v1_701b = add i32 %v0_7008, -36
  %v2_701b = inttoptr i32 %v1_701b to i32*
  %v3_701b = load i32, i32* %v2_701b, align 4
  store i32 %v1_7008, i32* %stack_var_-8, align 4
  %v4_7025 = call i32 @_ZN5boost15foreach_detail_3endISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %v1_7008, i32 %v3_701b, i32 0, i32 0)
  %v0_702d = load i32, i32* @ebp, align 4
  %v1_702d = add i32 %v0_702d, -96
  %v2_7030 = add i32 %v0_702d, -28
  %v3_7030 = inttoptr i32 %v2_7030 to i32*
  store i32 %v1_702d, i32* %v3_7030, align 4
  %v0_7033 = load i32, i32* @ebp, align 4
  %v1_7033 = add i32 %v0_7033, -28
  %v2_7033 = inttoptr i32 %v1_7033 to i32*
  %v3_7033 = load i32, i32* %v2_7033, align 4
  store i32 %v3_7033, i32* %stack_var_-12, align 4
  %v1_7039 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v3_7033)
  %v4_703e = trunc i32 %v1_7039 to i8
  %v5_703e = icmp eq i8 %v4_703e, 0
  %v1_7040 = icmp eq i1 %v5_703e, false
  br i1 %v1_7040, label %dec_label_pc_71d9, label %dec_label_pc_7046

dec_label_pc_7046:                                ; preds = %dec_label_pc_7008
  %v0_7046 = load i32, i32* @ebp, align 4
  %v1_7046 = add i32 %v0_7046, -13
  %v2_7046 = inttoptr i32 %v1_7046 to i8*
  store i8 1, i8* %v2_7046, align 1
  br label %dec_label_pc_719c

dec_label_pc_704f:                                ; preds = %dec_label_pc_71d1
  %v0_704f = load i32, i32* @ebp, align 4
  %v1_704f = add i32 %v0_704f, -13
  store i32 %v1_704f, i32* %stack_var_-12, align 4
  %v1_7055 = inttoptr i32 %v1_704f to i8*
  %v2_7055 = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %v1_7055)
  %v4_705a = trunc i32 %v2_7055 to i8
  %v5_705a = icmp eq i8 %v4_705a, 0
  %v1_705c = icmp eq i1 %v5_705a, false
  br i1 %v1_705c, label %dec_label_pc_704f.dec_label_pc_7181_crit_edge, label %dec_label_pc_7062

dec_label_pc_704f.dec_label_pc_7181_crit_edge:    ; preds = %dec_label_pc_704f
  %v0_7181.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_7181

dec_label_pc_7062:                                ; preds = %dec_label_pc_704f
  store i32 0, i32* %stack_var_-8, align 4
  %v0_706a = load i32, i32* @ebp, align 4
  %v1_706a = add i32 %v0_706a, -32
  %v2_706a = inttoptr i32 %v1_706a to i32*
  %v3_706a = load i32, i32* %v2_706a, align 4
  store i32 %v3_706a, i32* %stack_var_-12, align 4
  %v2_7070 = call i32 @_ZN5boost15foreach_detail_5derefISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISE_SF_EE(i32 %v3_706a, i32 0)
  %v1_7075 = load i32, i32* @ebp, align 4
  %v2_7075 = add i32 %v1_7075, -24
  %v3_7075 = inttoptr i32 %v2_7075 to i32*
  store i32 %v2_7070, i32* %v3_7075, align 4
  br label %dec_label_pc_7172

dec_label_pc_707d:                                ; preds = %dec_label_pc_7172
  %v1_707d = add i32 %v0_7172, -92
  %v2_707d = inttoptr i32 %v1_707d to i32*
  store i32 0, i32* %v2_707d, align 4
  br label %dec_label_pc_715d

dec_label_pc_7089:                                ; preds = %dec_label_pc_715d
  %v3_7089 = load i32, i32* %v2_715d, align 4
  %v1_708c = add i32 %v3_7089, 1
  store i32 %v1_708c, i32* %stack_var_-8, align 4
  %v1_7093 = add i32 %v0_715d, -236
  %v2_7093 = inttoptr i32 %v1_7093 to i32*
  %v3_7093 = load i32, i32* %v2_7093, align 4
  store i32 %v3_7093, i32* %stack_var_-12, align 4
  %v2_709c = inttoptr i32 %v3_7093 to i32*
  %v3_709c = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v2_709c, i32 %v1_708c)
  %v1_70a1 = load i32, i32* @ebp, align 4
  %v2_70a1 = add i32 %v1_70a1, -20
  %v3_70a1 = inttoptr i32 %v2_70a1 to i32*
  store i32 %v3_709c, i32* %v3_70a1, align 4
  %v0_70a4 = load i32, i32* @ebp, align 4
  %v1_70a4 = add i32 %v0_70a4, -20
  %v2_70a4 = inttoptr i32 %v1_70a4 to i32*
  %v3_70a4 = load i32, i32* %v2_70a4, align 4
  store i32 %v3_70a4, i32* %stack_var_-8, align 4
  %v1_70ab = add i32 %v0_70a4, -180
  store i32 %v1_70ab, i32* %stack_var_-12, align 4
  %v2_70b4 = call i32 @_ZNKSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE5countERS6_(i32 %v1_70ab, i32 %v3_70a4)
  %v1_70b9 = icmp eq i32 %v2_70b4, 0
  %v1_70bb = icmp eq i1 %v1_70b9, false
  %v5_70be = icmp eq i1 %v1_70bb, false
  %v1_70c0 = icmp eq i1 %v5_70be, false
  br i1 %v1_70c0, label %dec_label_pc_7159, label %dec_label_pc_70c6

dec_label_pc_70c6:                                ; preds = %dec_label_pc_7089
  %v0_70c6 = load i32, i32* @ebp, align 4
  %v1_70c6 = add i32 %v0_70c6, -24
  %v2_70c6 = inttoptr i32 %v1_70c6 to i32*
  %v3_70c6 = load i32, i32* %v2_70c6, align 4
  store i32 %v3_70c6, i32* %stack_var_-8, align 4
  %v1_70cd = add i32 %v0_70c6, -156
  store i32 %v1_70cd, i32* %stack_var_-12, align 4
  %v2_70d6 = inttoptr i32 %v1_70cd to i32*
  %v3_70d6 = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %v2_70d6, i32 %v3_70c6)
  %v0_70eb = load i32, i32* @ebp, align 4
  %v1_70eb = add i32 %v0_70eb, -232
  %v2_70eb = inttoptr i32 %v1_70eb to i32*
  %v3_70eb = load i32, i32* %v2_70eb, align 4
  %v1_70f5 = add i32 %v0_70eb, -228
  %v2_70f5 = inttoptr i32 %v1_70f5 to i32*
  %v3_70f5 = load i32, i32* %v2_70f5, align 4
  %v1_70ff = add i32 %v0_70eb, -224
  %v2_70ff = inttoptr i32 %v1_70ff to i32*
  %v3_70ff = load i32, i32* %v2_70ff, align 4
  %v1_7109 = add i32 %v0_70eb, -20
  %v2_7109 = inttoptr i32 %v1_7109 to i32*
  %v3_7109 = load i32, i32* %v2_7109, align 4
  store i32 %v3_7109, i32* %stack_var_-8, align 4
  %v1_7110 = add i32 %v0_70eb, -156
  store i32 %v1_7110, i32* %stack_var_-12, align 4
  %v7_7119 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.23" undef, i32 %v1_7110, 0
  %v8_7119 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %v3_7109, 0
  %v9_7119 = insertvalue %CScript undef, i32 %v3_70ff, 0
  %v10_7119 = call i1 @_Z8CheckSigSt6vectorIhSaIhEERKS1_RK7CScriptRK12CTransactionjii(%"vector<unsignedchar,std::allocator<unsignedchar>>.23" %v7_7119, %"vector<unsignedchar,std::allocator<unsignedchar>>" %v8_7119, %CScript %v9_7119, i32 %v3_70f5, i32 %v3_70eb, i32 0, i32 0)
  %v12_7119 = sext i1 %v10_7119 to i32
  store i32 %v12_7119, i32* @ebx, align 4
  %v0_7120 = load i32, i32* @ebp, align 4
  %v1_7120 = add i32 %v0_7120, -156
  store i32 %v1_7120, i32* %stack_var_-12, align 4
  %v1_7129 = inttoptr i32 %v1_7120 to i32*
  %v2_7129 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_7129)
  %v0_712e = load i32, i32* @ebx, align 4
  %v4_712e = trunc i32 %v0_712e to i8
  %v5_712e = icmp eq i8 %v4_712e, 0
  br i1 %v5_712e, label %dec_label_pc_7159, label %dec_label_pc_7132

dec_label_pc_7132:                                ; preds = %dec_label_pc_70c6
  %v0_7132 = load i32, i32* @ebp, align 4
  %v1_7132 = add i32 %v0_7132, -20
  %v2_7132 = inttoptr i32 %v1_7132 to i32*
  %v3_7132 = load i32, i32* %v2_7132, align 4
  store i32 %v3_7132, i32* %stack_var_-8, align 4
  %v1_7139 = add i32 %v0_7132, -180
  store i32 %v1_7139, i32* %stack_var_-12, align 4
  %v2_7142 = call i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEixERS6_(i32 %v1_7139, i32 %v3_7132)
  %v0_7147 = load i32, i32* @ebp, align 4
  %v1_7147 = add i32 %v0_7147, -24
  %v2_7147 = inttoptr i32 %v1_7147 to i32*
  %v3_7147 = load i32, i32* %v2_7147, align 4
  store i32 %v3_7147, i32* @edx, align 4
  store i32 %v3_7147, i32* %stack_var_-8, align 4
  store i32 %v2_7142, i32* %stack_var_-12, align 4
  %v2_7151 = inttoptr i32 %v2_7142 to i32*
  %v3_7151 = call i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %v2_7151, i32 %v3_7147)
  %v0_716e.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_716e

dec_label_pc_7159:                                ; preds = %dec_label_pc_7089, %dec_label_pc_70c6
  %v0_7159 = load i32, i32* @ebp, align 4
  %v1_7159 = add i32 %v0_7159, -92
  %v2_7159 = inttoptr i32 %v1_7159 to i32*
  %v3_7159 = load i32, i32* %v2_7159, align 4
  %v4_7159 = add i32 %v3_7159, 1
  store i32 %v4_7159, i32* %v2_7159, align 4
  br label %dec_label_pc_715d

dec_label_pc_715d:                                ; preds = %dec_label_pc_7159, %dec_label_pc_707d
  %v0_715d = load i32, i32* @ebp, align 4
  %v1_715d = add i32 %v0_715d, -92
  %v2_715d = inttoptr i32 %v1_715d to i32*
  %v3_715d = load i32, i32* %v2_715d, align 4
  %v2_7160 = add i32 %v0_715d, -40
  %v3_7160 = inttoptr i32 %v2_7160 to i32*
  %v4_7160 = load i32, i32* %v3_7160, align 4
  %v10_7160 = icmp ult i32 %v3_715d, %v4_7160
  %v5_7166 = icmp eq i1 %v10_7160, false
  %v1_7168 = icmp eq i1 %v5_7166, false
  br i1 %v1_7168, label %dec_label_pc_7089, label %dec_label_pc_716e

dec_label_pc_716e:                                ; preds = %dec_label_pc_715d, %dec_label_pc_7132
  %v0_716e = phi i32 [ %v0_716e.pre, %dec_label_pc_7132 ], [ %v0_715d, %dec_label_pc_715d ]
  %v1_716e = add i32 %v0_716e, -13
  %v2_716e = inttoptr i32 %v1_716e to i8*
  store i8 1, i8* %v2_716e, align 1
  br label %dec_label_pc_7172

dec_label_pc_7172:                                ; preds = %dec_label_pc_716e, %dec_label_pc_7062
  %v0_7172 = load i32, i32* @ebp, align 4
  %v1_7172 = add i32 %v0_7172, -13
  %v2_7172 = inttoptr i32 %v1_7172 to i8*
  %v3_7172 = load i8, i8* %v2_7172, align 1
  %v5_7179 = icmp eq i8 %v3_7172, 1
  %v1_717b = icmp eq i1 %v5_7179, false
  br i1 %v1_717b, label %dec_label_pc_707d, label %dec_label_pc_7181

dec_label_pc_7181:                                ; preds = %dec_label_pc_7172, %dec_label_pc_704f.dec_label_pc_7181_crit_edge
  %v0_7191 = phi i32 [ %v0_7181.pre, %dec_label_pc_704f.dec_label_pc_7181_crit_edge ], [ %v0_7172, %dec_label_pc_7172 ]
  %v1_7181 = add i32 %v0_7191, -13
  %v2_7181 = inttoptr i32 %v1_7181 to i8*
  %v3_7181 = load i8, i8* %v2_7181, align 1
  %v5_7185 = icmp eq i8 %v3_7181, 0
  br i1 %v5_7185, label %dec_label_pc_719c, label %dec_label_pc_7189

dec_label_pc_7189:                                ; preds = %dec_label_pc_7181
  store i32 0, i32* %stack_var_-8, align 4
  %v1_7191 = add i32 %v0_7191, -32
  %v2_7191 = inttoptr i32 %v1_7191 to i32*
  %v3_7191 = load i32, i32* %v2_7191, align 4
  store i32 %v3_7191, i32* %stack_var_-12, align 4
  %v2_7197 = call i32 @_ZN5boost15foreach_detail_4nextISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v3_7191, i32 0)
  br label %dec_label_pc_719c

dec_label_pc_719c:                                ; preds = %dec_label_pc_7189, %dec_label_pc_7181, %dec_label_pc_7046
  %v0_719c = load i32, i32* @ebp, align 4
  %v1_719c = add i32 %v0_719c, -13
  %v2_719c = inttoptr i32 %v1_719c to i8*
  %v3_719c = load i8, i8* %v2_719c, align 1
  %v5_71a0 = icmp eq i8 %v3_719c, 0
  br i1 %v5_71a0, label %dec_label_pc_71cc, label %dec_label_pc_71a4

dec_label_pc_71a4:                                ; preds = %dec_label_pc_719c
  %v1_71ac = add i32 %v0_719c, -28
  %v2_71ac = inttoptr i32 %v1_71ac to i32*
  %v3_71ac = load i32, i32* %v2_71ac, align 4
  store i32 %v3_71ac, i32* %stack_var_-8, align 4
  %v1_71b3 = add i32 %v0_719c, -32
  %v2_71b3 = inttoptr i32 %v1_71b3 to i32*
  %v3_71b3 = load i32, i32* %v2_71b3, align 4
  store i32 %v3_71b3, i32* %stack_var_-12, align 4
  %v3_71b9 = call i32 @_ZN5boost15foreach_detail_4doneISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESF_PNS0_9type2typeIT_T0_EE(i32 %v3_71b3, i32 %v3_71ac, i32 0)
  %v1_71be = xor i32 %v3_71b9, 1
  %v4_71be = trunc i32 %v1_71be to i8
  %v5_71c1 = icmp eq i8 %v4_71be, 0
  br i1 %v5_71c1, label %dec_label_pc_71cc, label %dec_label_pc_71d1

dec_label_pc_71cc:                                ; preds = %dec_label_pc_71a4, %dec_label_pc_719c
  br label %dec_label_pc_71d1

dec_label_pc_71d1:                                ; preds = %dec_label_pc_71a4, %dec_label_pc_71cc
  %storemerge12 = phi i1 [ false, %dec_label_pc_71cc ], [ true, %dec_label_pc_71a4 ]
  br i1 %storemerge12, label %dec_label_pc_704f, label %dec_label_pc_71d9

dec_label_pc_71d9:                                ; preds = %dec_label_pc_71d1, %dec_label_pc_7008, %dec_label_pc_6fca, %dec_label_pc_6f48
  %v0_71d9 = load i32, i32* @ebp, align 4
  %v1_71d9 = add i32 %v0_71d9, -88
  %v2_71d9 = inttoptr i32 %v1_71d9 to i32*
  store i32 0, i32* %v2_71d9, align 4
  %v0_71e0 = load i32, i32* @ebp, align 4
  %v1_71e0 = add i32 %v0_71e0, -220
  %v2_71e0 = inttoptr i32 %v1_71e0 to i32*
  %v3_71e0 = load i32, i32* %v2_71e0, align 4
  %v1_71e6 = load i32, i32* @esp, align 4
  %v2_71e6 = inttoptr i32 %v1_71e6 to i32*
  store i32 %v3_71e0, i32* %v2_71e6, align 4
  %v0_71e9 = load i32, i32* %stack_var_-12, align 4
  %v1_71e9 = call i32 @_ZN7CScriptC1Ev(i32 %v0_71e9)
  %v0_71ee = load i32, i32* @esp, align 4
  %v1_71ee = add i32 %v0_71ee, 4
  %v2_71ee = inttoptr i32 %v1_71ee to i32*
  store i32 0, i32* %v2_71ee, align 4
  %v0_71f6 = load i32, i32* @ebp, align 4
  %v1_71f6 = add i32 %v0_71f6, -220
  %v2_71f6 = inttoptr i32 %v1_71f6 to i32*
  %v3_71f6 = load i32, i32* %v2_71f6, align 4
  %v1_71fc = load i32, i32* @esp, align 4
  %v2_71fc = inttoptr i32 %v1_71fc to i32*
  store i32 %v3_71f6, i32* %v2_71fc, align 4
  %v0_71ff = load i32, i32* %stack_var_-12, align 4
  %v1_71ff = load i32, i32* %stack_var_-8, align 4
  %v2_71ff = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v0_71ff, i32 %v1_71ff)
  %v0_7204 = load i32, i32* @ebp, align 4
  %v1_7204 = add i32 %v0_7204, -84
  %v2_7204 = inttoptr i32 %v1_7204 to i32*
  store i32 0, i32* %v2_7204, align 4
  br label %dec_label_pc_7284

dec_label_pc_720d:                                ; preds = %dec_label_pc_72a0
  %v3_720d = load i32, i32* %v2_7284, align 4
  %v1_7210 = add i32 %v3_720d, 1
  %v1_7213 = load i32, i32* @esp, align 4
  %v2_7213 = add i32 %v1_7213, 4
  %v3_7213 = inttoptr i32 %v2_7213 to i32*
  store i32 %v1_7210, i32* %v3_7213, align 4
  %v0_7217 = load i32, i32* @ebp, align 4
  %v1_7217 = add i32 %v0_7217, -236
  %v2_7217 = inttoptr i32 %v1_7217 to i32*
  %v3_7217 = load i32, i32* %v2_7217, align 4
  %v1_721d = load i32, i32* @esp, align 4
  %v2_721d = inttoptr i32 %v1_721d to i32*
  store i32 %v3_7217, i32* %v2_721d, align 4
  %v0_7220 = load i32, i32* %stack_var_-12, align 4
  %v1_7220 = load i32, i32* %stack_var_-8, align 4
  %v2_7220 = inttoptr i32 %v0_7220 to i32*
  %v3_7220 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v2_7220, i32 %v1_7220)
  %v1_7225 = load i32, i32* @esp, align 4
  %v2_7225 = add i32 %v1_7225, 4
  %v3_7225 = inttoptr i32 %v2_7225 to i32*
  store i32 %v3_7220, i32* %v3_7225, align 4
  %v0_7229 = load i32, i32* @ebp, align 4
  %v1_7229 = add i32 %v0_7229, -180
  %v1_722f = load i32, i32* @esp, align 4
  %v2_722f = inttoptr i32 %v1_722f to i32*
  store i32 %v1_7229, i32* %v2_722f, align 4
  %v0_7232 = load i32, i32* %stack_var_-12, align 4
  %v1_7232 = load i32, i32* %stack_var_-8, align 4
  %v2_7232 = call i32 @_ZNKSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE5countERS6_(i32 %v0_7232, i32 %v1_7232)
  %v1_7237 = icmp eq i32 %v2_7232, 0
  %v1_7239 = icmp eq i1 %v1_7237, false
  %v5_723c = icmp eq i1 %v1_7239, false
  br i1 %v5_723c, label %dec_label_pc_7280, label %dec_label_pc_7240

dec_label_pc_7240:                                ; preds = %dec_label_pc_720d
  %v0_7240 = load i32, i32* @ebp, align 4
  %v1_7240 = add i32 %v0_7240, -84
  %v2_7240 = inttoptr i32 %v1_7240 to i32*
  %v3_7240 = load i32, i32* %v2_7240, align 4
  %v1_7243 = add i32 %v3_7240, 1
  %v1_7246 = load i32, i32* @esp, align 4
  %v2_7246 = add i32 %v1_7246, 4
  %v3_7246 = inttoptr i32 %v2_7246 to i32*
  store i32 %v1_7243, i32* %v3_7246, align 4
  %v0_724a = load i32, i32* @ebp, align 4
  %v1_724a = add i32 %v0_724a, -236
  %v2_724a = inttoptr i32 %v1_724a to i32*
  %v3_724a = load i32, i32* %v2_724a, align 4
  %v1_7250 = load i32, i32* @esp, align 4
  %v2_7250 = inttoptr i32 %v1_7250 to i32*
  store i32 %v3_724a, i32* %v2_7250, align 4
  %v0_7253 = load i32, i32* %stack_var_-12, align 4
  %v1_7253 = load i32, i32* %stack_var_-8, align 4
  %v2_7253 = inttoptr i32 %v0_7253 to i32*
  %v3_7253 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v2_7253, i32 %v1_7253)
  %v1_7258 = load i32, i32* @esp, align 4
  %v2_7258 = add i32 %v1_7258, 4
  %v3_7258 = inttoptr i32 %v2_7258 to i32*
  store i32 %v3_7253, i32* %v3_7258, align 4
  %v0_725c = load i32, i32* @ebp, align 4
  %v1_725c = add i32 %v0_725c, -180
  %v1_7262 = load i32, i32* @esp, align 4
  %v2_7262 = inttoptr i32 %v1_7262 to i32*
  store i32 %v1_725c, i32* %v2_7262, align 4
  %v0_7265 = load i32, i32* %stack_var_-12, align 4
  %v1_7265 = load i32, i32* %stack_var_-8, align 4
  %v2_7265 = call i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEixERS6_(i32 %v0_7265, i32 %v1_7265)
  %v1_726a = load i32, i32* @esp, align 4
  %v2_726a = add i32 %v1_726a, 4
  %v3_726a = inttoptr i32 %v2_726a to i32*
  store i32 %v2_7265, i32* %v3_726a, align 4
  %v0_726e = load i32, i32* @ebp, align 4
  %v1_726e = add i32 %v0_726e, -220
  %v2_726e = inttoptr i32 %v1_726e to i32*
  %v3_726e = load i32, i32* %v2_726e, align 4
  %v1_7274 = load i32, i32* @esp, align 4
  %v2_7274 = inttoptr i32 %v1_7274 to i32*
  store i32 %v3_726e, i32* %v2_7274, align 4
  %v0_7277 = load i32, i32* %stack_var_-12, align 4
  %v1_7277 = load i32, i32* %stack_var_-8, align 4
  %v2_7277 = call i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %v0_7277, i32 %v1_7277)
  %v0_727c = load i32, i32* @ebp, align 4
  %v1_727c = add i32 %v0_727c, -88
  %v2_727c = inttoptr i32 %v1_727c to i32*
  %v3_727c = load i32, i32* %v2_727c, align 4
  %v4_727c = add i32 %v3_727c, 1
  store i32 %v4_727c, i32* %v2_727c, align 4
  br label %dec_label_pc_7280

dec_label_pc_7280:                                ; preds = %dec_label_pc_7240, %dec_label_pc_720d
  %v0_7280 = load i32, i32* @ebp, align 4
  %v1_7280 = add i32 %v0_7280, -84
  %v2_7280 = inttoptr i32 %v1_7280 to i32*
  %v3_7280 = load i32, i32* %v2_7280, align 4
  %v4_7280 = add i32 %v3_7280, 1
  store i32 %v4_7280, i32* %v2_7280, align 4
  br label %dec_label_pc_7284

dec_label_pc_7284:                                ; preds = %dec_label_pc_7280, %dec_label_pc_71d9
  %v0_7284 = load i32, i32* @ebp, align 4
  %v1_7284 = add i32 %v0_7284, -84
  %v2_7284 = inttoptr i32 %v1_7284 to i32*
  %v3_7284 = load i32, i32* %v2_7284, align 4
  %v2_7287 = add i32 %v0_7284, -40
  %v3_7287 = inttoptr i32 %v2_7287 to i32*
  %v4_7287 = load i32, i32* %v3_7287, align 4
  %v10_7287 = icmp ult i32 %v3_7284, %v4_7287
  %v1_728a = icmp eq i1 %v10_7287, false
  br i1 %v1_728a, label %dec_label_pc_729b, label %dec_label_pc_728c

dec_label_pc_728c:                                ; preds = %dec_label_pc_7284
  %v1_728c = add i32 %v0_7284, -88
  %v2_728c = inttoptr i32 %v1_728c to i32*
  %v3_728c = load i32, i32* %v2_728c, align 4
  %v2_728f = add i32 %v0_7284, -44
  %v3_728f = inttoptr i32 %v2_728f to i32*
  %v4_728f = load i32, i32* %v3_728f, align 4
  %v10_728f = icmp ult i32 %v3_728c, %v4_728f
  %v1_7292 = icmp eq i1 %v10_728f, false
  br i1 %v1_7292, label %dec_label_pc_729b, label %dec_label_pc_72a0

dec_label_pc_729b:                                ; preds = %dec_label_pc_728c, %dec_label_pc_7284
  br label %dec_label_pc_72a0

dec_label_pc_72a0:                                ; preds = %dec_label_pc_728c, %dec_label_pc_729b
  %storemerge = phi i1 [ false, %dec_label_pc_729b ], [ true, %dec_label_pc_728c ]
  br i1 %storemerge, label %dec_label_pc_720d, label %dec_label_pc_72a8

dec_label_pc_72a8:                                ; preds = %dec_label_pc_72a0
  %v1_72a8 = add i32 %v0_7284, -88
  %v2_72a8 = inttoptr i32 %v1_72a8 to i32*
  %v3_72a8 = load i32, i32* %v2_72a8, align 4
  %v2_72ab = add i32 %v0_7284, -80
  %v3_72ab = inttoptr i32 %v2_72ab to i32*
  store i32 %v3_72a8, i32* %v3_72ab, align 4
  br label %dec_label_pc_72ca

dec_label_pc_72b0:                                ; preds = %dec_label_pc_72ca
  %v0_72b0 = load i32, i32* @esp, align 4
  %v1_72b0 = add i32 %v0_72b0, 4
  %v2_72b0 = inttoptr i32 %v1_72b0 to i32*
  store i32 0, i32* %v2_72b0, align 4
  %v0_72b8 = load i32, i32* @ebp, align 4
  %v1_72b8 = add i32 %v0_72b8, -220
  %v2_72b8 = inttoptr i32 %v1_72b8 to i32*
  %v3_72b8 = load i32, i32* %v2_72b8, align 4
  %v1_72be = load i32, i32* @esp, align 4
  %v2_72be = inttoptr i32 %v1_72be to i32*
  store i32 %v3_72b8, i32* %v2_72be, align 4
  %v0_72c1 = load i32, i32* %stack_var_-12, align 4
  %v1_72c1 = load i32, i32* %stack_var_-8, align 4
  %v2_72c1 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v0_72c1, i32 %v1_72c1)
  %v0_72c6 = load i32, i32* @ebp, align 4
  %v1_72c6 = add i32 %v0_72c6, -80
  %v2_72c6 = inttoptr i32 %v1_72c6 to i32*
  %v3_72c6 = load i32, i32* %v2_72c6, align 4
  %v4_72c6 = add i32 %v3_72c6, 1
  store i32 %v4_72c6, i32* %v2_72c6, align 4
  br label %dec_label_pc_72ca

dec_label_pc_72ca:                                ; preds = %dec_label_pc_72b0, %dec_label_pc_72a8
  %v0_72ca = load i32, i32* @ebp, align 4
  %v1_72ca = add i32 %v0_72ca, -80
  %v2_72ca = inttoptr i32 %v1_72ca to i32*
  %v3_72ca = load i32, i32* %v2_72ca, align 4
  %v2_72cd = add i32 %v0_72ca, -44
  %v3_72cd = inttoptr i32 %v2_72cd to i32*
  %v4_72cd = load i32, i32* %v3_72cd, align 4
  %v10_72cd = icmp ult i32 %v3_72ca, %v4_72cd
  %v5_72d3 = icmp eq i1 %v10_72cd, false
  %v1_72d5 = icmp eq i1 %v5_72d3, false
  br i1 %v1_72d5, label %dec_label_pc_72b0, label %dec_label_pc_72d7

dec_label_pc_72d7:                                ; preds = %dec_label_pc_72ca
  %v1_72d7 = add i32 %v0_72ca, -180
  %v1_72dd = load i32, i32* @esp, align 4
  %v2_72dd = inttoptr i32 %v1_72dd to i32*
  store i32 %v1_72d7, i32* %v2_72dd, align 4
  %v0_72e0 = load i32, i32* %stack_var_-12, align 4
  %v1_72e0 = call i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEED1Ev(i32 %v0_72e0)
  %v0_72e5 = load i32, i32* @ebp, align 4
  %v1_72e5 = add i32 %v0_72e5, -204
  %v1_72eb = load i32, i32* @esp, align 4
  %v2_72eb = inttoptr i32 %v1_72eb to i32*
  store i32 %v1_72e5, i32* %v2_72eb, align 4
  %v0_72ee = load i32, i32* %stack_var_-12, align 4
  %v1_72ee = call i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EED1Ev(i32 %v0_72ee)
  %v0_72f3 = load i32, i32* @ebp, align 4
  %v1_72f3 = add i32 %v0_72f3, -220
  %v2_72f3 = inttoptr i32 %v1_72f3 to i32*
  %v3_72f3 = load i32, i32* %v2_72f3, align 4
  store i32 %v3_72f3, i32* @eax, align 4
  %v1_72f9 = add i32 %v0_72f3, -12
  %v2_72f9 = inttoptr i32 %v1_72f9 to i32*
  %v3_72f9 = load i32, i32* %v2_72f9, align 4
  %v1_72fc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_72fc = icmp eq i32 %v1_72fc, %v3_72f9
  br i1 %v3_72fc, label %bb, label %dec_label_pc_7305

bb:                                               ; preds = %dec_label_pc_72d7
  %v1_7303 = call i32 @function_735c()
  store i32 %v1_7303, i32* @eax, align 4
  br label %dec_label_pc_7305

dec_label_pc_7305:                                ; preds = %bb, %dec_label_pc_72d7
  %v0_7305 = call i32 @function_7357()
  ret i32 %v0_7305

; uselistorder directives
  uselistorder i32* %v2_7284, { 1, 0 }
  uselistorder i32 %v0_7284, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_719c, { 1, 0, 2 }
  uselistorder i32 %v0_7172, { 0, 2, 1 }
  uselistorder i32* %v2_715d, { 1, 0 }
  uselistorder i32 %v0_715d, { 0, 2, 3, 1 }
  uselistorder i32 %v2_7142, { 1, 0 }
  uselistorder i32 %v0_70eb, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_7008, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 5, 4, 0, 2, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %stack_var_-12, { 3, 2, 7, 6, 0, 4, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 (i32, i32)* @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEixERS6_, { 1, 0 }
  uselistorder i1 (%"vector<unsignedchar,std::allocator<unsignedchar>>.23", %"vector<unsignedchar,std::allocator<unsignedchar>>", %CScript, i32, i32, i32, i32)* @_Z8CheckSigSt6vectorIhSaIhEERKS1_RK7CScriptRK12CTransactionjii, { 0, 2, 1 }
  uselistorder %"vector<unsignedchar,std::allocator<unsignedchar>>.23" undef, { 0, 2, 1 }
  uselistorder i32 -228, { 5, 0, 1, 2, 6, 7, 8, 3, 4 }
  uselistorder i32 -232, { 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32, i32)* @_ZNKSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE5countERS6_, { 1, 0 }
  uselistorder i32 (i32)* @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5frontEv, { 1, 0 }
  uselistorder label %dec_label_pc_72a0, { 1, 0 }
  uselistorder label %dec_label_pc_71d1, { 1, 0 }
  uselistorder label %dec_label_pc_7159, { 1, 0 }
}

define i32 @function_7307() local_unnamed_addr {
dec_label_pc_7307:
  %v0_7309 = load i32, i32* @ebp, align 4
  %v1_7309 = add i32 %v0_7309, -156
  %v1_7312 = inttoptr i32 %v1_7309 to i32*
  %v2_7312 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_7312)
  %v0_7317 = call i32 @function_732d()
  ret i32 %v0_7317

; uselistorder directives
  uselistorder i32 -156, { 0, 3, 4, 5, 6, 7, 1, 2 }
}

define i32 @function_7319() local_unnamed_addr {
dec_label_pc_7319:
  %v0_731b = load i32, i32* @ebp, align 4
  %v1_731b = add i32 %v0_731b, -220
  %v2_731b = inttoptr i32 %v1_731b to i32*
  %v3_731b = load i32, i32* %v2_731b, align 4
  %v1_7324 = call i32 @_ZN7CScriptD1Ev(i32 %v3_731b)
  %v0_7329 = call i32 @function_732d()
  ret i32 %v0_7329

; uselistorder directives
  uselistorder i32 ()* @function_732d, { 1, 0 }
  uselistorder i32 -220, { 0, 4, 3, 5, 6, 7, 1, 2 }
}

define i32 @function_732c() local_unnamed_addr {
dec_label_pc_732c:
  %eax.global-to-local = alloca i32, align 4
  %v0_732c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_732c
}

define i32 @function_732d() local_unnamed_addr {
dec_label_pc_732d:
  %v0_732d = load i32, i32* @ebp, align 4
  %v1_732d = add i32 %v0_732d, -180
  %v1_7336 = call i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEED1Ev(i32 %v1_732d)
  %v0_733b = call i32 @function_733f()
  ret i32 %v0_733b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEED1Ev, { 1, 0 }
  uselistorder i32 -180, { 0, 3, 4, 5, 6, 7, 8, 1, 2 }
}

define i32 @function_733d() local_unnamed_addr {
dec_label_pc_733d:
  %eax.global-to-local = alloca i32, align 4
  %v0_733d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_733d
}

define i32 @function_733f() local_unnamed_addr {
dec_label_pc_733f:
  %v0_733f = load i32, i32* @ebp, align 4
  %v1_733f = add i32 %v0_733f, -204
  %v1_7348 = call i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EED1Ev(i32 %v1_733f)
  %v0_734d = load i32, i32* @ebx, align 4
  ret i32 %v0_734d

; uselistorder directives
  uselistorder i32 (i32)* @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EED1Ev, { 1, 0 }
  uselistorder i32 -204, { 0, 2, 3, 6, 4, 5, 7, 1 }
}

define i32 @function_7357() local_unnamed_addr {
dec_label_pc_7357:
  %v0_7357 = load i32, i32* @eax, align 4
  ret i32 %v0_7357
}

define i32 @function_735c() local_unnamed_addr {
dec_label_pc_735c:
  %v0_735c = load i32, i32* @ebp, align 4
  %v1_735c = add i32 %v0_735c, -4
  %v2_735c = inttoptr i32 %v1_735c to i32*
  %v3_735c = load i32, i32* %v2_735c, align 4
  store i32 %v3_735c, i32* @ebx, align 4
  %v0_7360 = load i32, i32* @eax, align 4
  ret i32 %v0_7360
}

define %CScript.31 @CombineSignatures(%CScript.30 %scriptPubKey, i32 %txTo, i32 %nIn, i32 %txType, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutions, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs1, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2) local_unnamed_addr {
dec_label_pc_7363:
  %tmp = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2, 0
  %tmp14 = extractvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %vSolutions, 0
  %tmp15 = extractvalue %CScript.30 %scriptPubKey, 0
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %txType2_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %txType2_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %spk_-116 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>.11", align 8
  %spk_-112 = alloca %"vector<unsignedchar,std::allocator<unsignedchar>>", align 8
  %v4_7370 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, i32 %tmp15, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>" %v4_7370, %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, align 8
  %v4_7376 = insertvalue %"vector<unsignedchar,std::allocator<unsignedchar>>.11" undef, i32 %txTo, 0
  store %"vector<unsignedchar,std::allocator<unsignedchar>>.11" %v4_7376, %"vector<unsignedchar,std::allocator<unsignedchar>>.11"* %spk_-116, align 8
  store i32 %tmp14, i32* @5, align 4
  switch i32 %tmp14, label %dec_label_pc_772c [
    i32 0, label %dec_label_pc_73c3
    i32 1, label %dec_label_pc_7424
    i32 2, label %dec_label_pc_7424
    i32 3, label %dec_label_pc_74a2
    i32 4, label %dec_label_pc_76cf
  ]

dec_label_pc_73c3:                                ; preds = %dec_label_pc_7363
  %v1_73cc = inttoptr i32 %tmp to i32*
  %v2_73cc = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_73cc)
  store i32 %v2_73cc, i32* @ebx, align 4
  %v1_73dc = inttoptr i32 %tmp38 to i32*
  %v2_73dc = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %v1_73dc)
  %v0_73e1 = load i32, i32* @ebx, align 4
  %v7_73e1 = icmp ult i32 %v0_73e1, %v2_73dc
  %v1_73e3 = icmp eq i1 %v7_73e1, false
  %v5_73e6 = icmp eq i1 %v1_73e3, false
  %v4_7407 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_7407 = load i32, i32* %v4_7407, align 8
  br i1 %v5_73e6, label %dec_label_pc_7407, label %dec_label_pc_73ea

dec_label_pc_73ea:                                ; preds = %dec_label_pc_73c3
  %v2_73fa = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_7407, 0
  %v3_73fa = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_73fa)
  %v0_7402 = call i32 @function_77ab()
  %v2_7402 = insertvalue %CScript.31 undef, i32 %v0_7402, 0
  ret %CScript.31 %v2_7402

dec_label_pc_7407:                                ; preds = %dec_label_pc_73c3
  %v2_7417 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_7407, 0
  %v3_7417 = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_7417)
  %v0_741f = call i32 @function_77ab()
  %v2_741f = insertvalue %CScript.31 undef, i32 %v0_741f, 0
  ret %CScript.31 %v2_741f

dec_label_pc_7424:                                ; preds = %dec_label_pc_7363, %dec_label_pc_7363
  %v1_742d = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv(i32 %tmp)
  %v4_7432 = trunc i32 %v1_742d to i8
  %v5_7432 = icmp eq i8 %v4_7432, 0
  %v1_7434 = icmp eq i1 %v5_7432, false
  br i1 %v1_7434, label %dec_label_pc_7464, label %dec_label_pc_7436

dec_label_pc_7436:                                ; preds = %dec_label_pc_7424
  %v2_7447 = inttoptr i32 %tmp to i32*
  %v3_7447 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %v2_7447, i32 0)
  %v1_744f = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v3_7447)
  %v4_7454 = trunc i32 %v1_744f to i8
  %v5_7454 = icmp eq i8 %v4_7454, 0
  br label %dec_label_pc_7464

dec_label_pc_7464:                                ; preds = %dec_label_pc_7436, %dec_label_pc_7424
  %storemerge11 = phi i1 [ false, %dec_label_pc_7424 ], [ %v5_7454, %dec_label_pc_7436 ]
  %v4_7485 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_7485 = load i32, i32* %v4_7485, align 8
  br i1 %storemerge11, label %dec_label_pc_7485, label %dec_label_pc_7468

dec_label_pc_7468:                                ; preds = %dec_label_pc_7464
  %v2_7478 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_7485, 0
  %v3_7478 = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_7478)
  %v0_7480 = call i32 @function_77ab()
  %v2_7480 = insertvalue %CScript.31 undef, i32 %v0_7480, 0
  ret %CScript.31 %v2_7480

dec_label_pc_7485:                                ; preds = %dec_label_pc_7464
  %v2_7495 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_7485, 0
  %v3_7495 = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_7495)
  %v0_749d = call i32 @function_77ab()
  %v2_749d = insertvalue %CScript.31 undef, i32 %v0_749d, 0
  ret %CScript.31 %v2_749d

dec_label_pc_74a2:                                ; preds = %dec_label_pc_7363
  %v1_74ab = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv(i32 %tmp)
  %v4_74b0 = trunc i32 %v1_74ab to i8
  %v5_74b0 = icmp eq i8 %v4_74b0, 0
  %v1_74b2 = icmp eq i1 %v5_74b0, false
  br i1 %v1_74b2, label %dec_label_pc_74da, label %dec_label_pc_74b4

dec_label_pc_74b4:                                ; preds = %dec_label_pc_74a2
  %v1_74bd = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %tmp)
  %v1_74c5 = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v1_74bd)
  %v4_74ca = trunc i32 %v1_74c5 to i8
  %v5_74ca = icmp ne i8 %v4_74ca, 0
  %phitmp69 = icmp eq i1 %v5_74ca, false
  br label %dec_label_pc_74da

dec_label_pc_74da:                                ; preds = %dec_label_pc_74b4, %dec_label_pc_74a2
  %storemerge7 = phi i1 [ false, %dec_label_pc_74a2 ], [ %phitmp69, %dec_label_pc_74b4 ]
  br i1 %storemerge7, label %dec_label_pc_74fb, label %dec_label_pc_74de

dec_label_pc_74de:                                ; preds = %dec_label_pc_74da
  %v4_74de = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_74de = load i32, i32* %v4_74de, align 8
  %v2_74ee = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_74de, 0
  %v3_74ee = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_74ee)
  %v0_74f6 = call i32 @function_77ab()
  %v2_74f6 = insertvalue %CScript.31 undef, i32 %v0_74f6, 0
  ret %CScript.31 %v2_74f6

dec_label_pc_74fb:                                ; preds = %dec_label_pc_74da
  %v1_7504 = call i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv(i32 %tmp38)
  %v4_7509 = trunc i32 %v1_7504 to i8
  %v5_7509 = icmp eq i8 %v4_7509, 0
  %v1_750b = icmp eq i1 %v5_7509, false
  br i1 %v1_750b, label %dec_label_pc_7533, label %dec_label_pc_750d

dec_label_pc_750d:                                ; preds = %dec_label_pc_74fb
  %v1_7516 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %tmp38)
  %v1_751e = call i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %v1_7516)
  %v4_7523 = trunc i32 %v1_751e to i8
  %v5_7523 = icmp ne i8 %v4_7523, 0
  %phitmp70 = icmp eq i1 %v5_7523, false
  br label %dec_label_pc_7533

dec_label_pc_7533:                                ; preds = %dec_label_pc_750d, %dec_label_pc_74fb
  %storemerge = phi i1 [ false, %dec_label_pc_74fb ], [ %phitmp70, %dec_label_pc_750d ]
  br i1 %storemerge, label %dec_label_pc_7554, label %dec_label_pc_7537

dec_label_pc_7537:                                ; preds = %dec_label_pc_7533
  %v4_7537 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_7537 = load i32, i32* %v4_7537, align 8
  %v2_7547 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v5_7537, 0
  %v3_7547 = call %CScript.27 @PushAll(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v2_7547)
  %v0_754f = call i32 @function_77ab()
  %v2_754f = insertvalue %CScript.31 undef, i32 %v0_754f, 0
  ret %CScript.31 %v2_754f

dec_label_pc_7554:                                ; preds = %dec_label_pc_7533
  %v1_755d = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %tmp)
  %v2_7566 = ptrtoint i32* %stack_var_-108 to i32
  %v3_756c = call i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* nonnull %stack_var_-108, i32 %v1_755d)
  %v2_7571 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_7566, i32* @edx, align 4
  %v2_757e = call i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %v2_7571, i32 %v2_7566)
  %v3_7593 = call i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1IPhEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE(i32* nonnull %txType2_-24, i32 %v2_7571)
  %v2_7598 = ptrtoint i32* %stack_var_-36 to i32
  %v2_75a5 = call i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %v2_7598, i32 %v2_7566)
  %v3_75ba = call i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1IPhEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE(i32* nonnull %txType2_-28, i32 %v2_7598)
  %v3_75bf = load i32, i32* %txType2_-24, align 4
  %v3_75c6 = load i32, i32* %txType2_-28, align 4
  %v2_75cd = ptrtoint i32* %stack_var_-96 to i32
  %v3_75d3 = call i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %v2_75cd, i32 %v3_75c6, i32 %v3_75bf)
  %v2_75d8 = ptrtoint i32* %stack_var_-84 to i32
  %v1_75de = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_75d8)
  %v2_75ea = ptrtoint i32* %stack_var_-20 to i32
  %v3_75f7 = insertvalue %CScript undef, i32 %v2_75cd, 0
  %v4_75f7 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_75d8, 0
  %v5_75f7 = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %v3_75f7, i32 %v2_75ea, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_75f7)
  %v1_7605 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE8pop_backEv(i32 %tmp)
  %v1_7613 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE8pop_backEv(i32 %tmp38)
  %v2_7622 = ptrtoint i32* %stack_var_-60 to i32
  %v2_7628 = call i32 @_ZN7CScriptC1ERKS_(i32 %v2_7622, i32 %v2_75cd)
  %v2_762d = ptrtoint i32* %stack_var_-72 to i32
  %v0_764b = load i32, i32* @ebx, align 4
  %v8_7667 = insertvalue %CScript.30 undef, i32 %v2_762d, 0
  %v9_7667 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v0_764b, 0
  %v12_7667 = call %CScript.31 @CombineSignatures(%CScript.30 %v8_7667, i32 %v2_7622, i32 %nIn, i32 %txType, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v9_7667, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_75f7, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2)
  %v1_7675 = call i32 @_ZN7CScriptD1Ev(i32 %v2_7622)
  %v2_7687 = call i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %v2_762d, i32 %v2_7566)
  %v4_7693 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_7693 = load i32, i32* %v4_7693, align 8
  %v2_7699 = call i32 @_ZN7CScriptC1ERKS_(i32 %v5_7693, i32 %v2_762d)
  %v1_76a4 = call i32 @_ZN7CScriptD1Ev(i32 %v2_762d)
  %v2_76af = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* nonnull %stack_var_-84)
  %v1_76ba = call i32 @_ZN7CScriptD1Ev(i32 %v2_75cd)
  %v2_76c5 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* nonnull %stack_var_-108)
  %v0_76ca = call i32 @function_77ab()
  %v2_76ca = insertvalue %CScript.31 undef, i32 %v0_76ca, 0
  ret %CScript.31 %v2_76ca

dec_label_pc_76cf:                                ; preds = %dec_label_pc_7363
  %v4_76cf = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>.11", %"vector<unsignedchar,std::allocator<unsignedchar>>.11"* %spk_-116, i32 0, i32 0
  %v5_76cf = load i32, i32* %v4_76cf, align 8
  %v2_76d6 = ptrtoint i32* %stack_var_-48 to i32
  %v2_76dc = call i32 @_ZN7CScriptC1ERKS_(i32 %v2_76d6, i32 %v5_76cf)
  %v4_76e1 = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_76e1 = load i32, i32* %v4_76e1, align 8
  %v7_7717 = insertvalue %CScript.28 undef, i32 %v5_76e1, 0
  %v8_7717 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %txType, 0
  %v11_7717 = call %CScript.29 @CombineMultisig(%CScript.28 %v7_7717, i32 %v2_76d6, i32 %nIn, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v8_7717, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs1, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %sigs2)
  %v1_7725 = call i32 @_ZN7CScriptD1Ev(i32 %v2_76d6)
  %v0_772a = call i32 @function_77ab()
  %v2_772a = insertvalue %CScript.31 undef, i32 %v0_772a, 0
  ret %CScript.31 %v2_772a

dec_label_pc_772c:                                ; preds = %dec_label_pc_7363
  %v4_772c = getelementptr inbounds %"vector<unsignedchar,std::allocator<unsignedchar>>", %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, i32 0, i32 0
  %v5_772c = load i32, i32* %v4_772c, align 8
  %v1_7732 = call i32 @_ZN7CScriptC1Ev(i32 %v5_772c)
  %v0_7737 = call i32 @function_77ab()
  %v2_7737 = insertvalue %CScript.31 undef, i32 %v0_7737, 0
  ret %CScript.31 %v2_7737

; uselistorder directives
  uselistorder i32 %v5_7485, { 1, 0 }
  uselistorder i32 %v5_7407, { 1, 0 }
  uselistorder %"vector<unsignedchar,std::allocator<unsignedchar>>"* %spk_-112, { 0, 6, 3, 4, 5, 2, 1, 7 }
  uselistorder i32 %tmp38, { 2, 1, 3, 0 }
  uselistorder i32* %txType2_-24, { 1, 0 }
  uselistorder i32* %txType2_-28, { 1, 0 }
  uselistorder i32 %tmp14, { 1, 0 }
  uselistorder i32 %tmp, { 4, 5, 3, 6, 1, 2, 0 }
  uselistorder i32 (i32)* @_ZN7CScriptC1Ev, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CScriptlsERKSt6vectorIhSaIhEE, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EE8pop_backEv, { 2, 1, 0 }
  uselistorder i32 (i32*, i32)* @_ZNSt6vectorIhSaIhEEC1ERKS1_, { 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNKSt6vectorIhSaIhEE5emptyEv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_77ab, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder %CScript.27 (%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>")* @PushAll, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32*)* @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv, { 80, 81, 82, 83, 84, 85, 86, 78, 79, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77 }
  uselistorder %"vector<unsignedchar,std::allocator<unsignedchar>>" undef, { 11, 0, 2, 6, 4, 1, 5, 3, 10, 9, 8, 7 }
  uselistorder i32 %txType, { 1, 0 }
  uselistorder i32 %nIn, { 1, 0 }
}

define i32 @function_7739() local_unnamed_addr {
dec_label_pc_7739:
  %eax.global-to-local = alloca i32, align 4
  %v0_773d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_773d, i32* @ebx, align 4
  %v0_773f = call i32 @function_777f()
  store i32 %v0_773f, i32* %eax.global-to-local, align 4
  ret i32 %v0_773f
}

define i32 @function_7741() local_unnamed_addr {
dec_label_pc_7741:
  %eax.global-to-local = alloca i32, align 4
  %v0_7741 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_7741, i32* @ebx, align 4
  %v0_7743 = load i32, i32* @ebp, align 4
  %v1_7743 = add i32 %v0_7743, -56
  store i32 %v1_7743, i32* %eax.global-to-local, align 4
  %v1_7749 = call i32 @_ZN7CScriptD1Ev(i32 %v1_7743)
  store i32 %v1_7749, i32* %eax.global-to-local, align 4
  %v0_774e = call i32 @function_7761()
  store i32 %v0_774e, i32* %eax.global-to-local, align 4
  ret i32 %v0_774e
}

define i32 @function_7750() local_unnamed_addr {
dec_label_pc_7750:
  %eax.global-to-local = alloca i32, align 4
  %v0_7750 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_7750, i32* @ebx, align 4
  %v0_7752 = load i32, i32* @ebp, align 4
  %v1_7752 = add i32 %v0_7752, -68
  store i32 %v1_7752, i32* %eax.global-to-local, align 4
  %v1_7758 = call i32 @_ZN7CScriptD1Ev(i32 %v1_7752)
  store i32 %v1_7758, i32* %eax.global-to-local, align 4
  %v0_775d = call i32 @function_7761()
  store i32 %v0_775d, i32* %eax.global-to-local, align 4
  ret i32 %v0_775d

; uselistorder directives
  uselistorder i32 ()* @function_7761, { 1, 0 }
}

define i32 @function_7760() local_unnamed_addr {
dec_label_pc_7760:
  %eax.global-to-local = alloca i32, align 4
  %v0_7760 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7760
}

define i32 @function_7761() local_unnamed_addr {
dec_label_pc_7761:
  %v0_7761 = load i32, i32* @ebp, align 4
  %v1_7761 = add i32 %v0_7761, -80
  %v1_7767 = inttoptr i32 %v1_7761 to i32*
  %v2_7767 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_7767)
  %v0_776c = call i32 @function_7770()
  ret i32 %v0_776c
}

define i32 @function_776e() local_unnamed_addr {
dec_label_pc_776e:
  %eax.global-to-local = alloca i32, align 4
  %v0_776e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_776e
}

define i32 @function_7770() local_unnamed_addr {
dec_label_pc_7770:
  %v0_7770 = load i32, i32* @ebp, align 4
  %v1_7770 = add i32 %v0_7770, -92
  %v1_7776 = call i32 @_ZN7CScriptD1Ev(i32 %v1_7770)
  %v0_777b = call i32 @function_777f()
  ret i32 %v0_777b

; uselistorder directives
  uselistorder i32 ()* @function_777f, { 1, 0 }
}

define i32 @function_777e() local_unnamed_addr {
dec_label_pc_777e:
  %eax.global-to-local = alloca i32, align 4
  %v0_777e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_777e
}

define i32 @function_777f() local_unnamed_addr {
dec_label_pc_777f:
  %v0_777f = load i32, i32* @ebp, align 4
  %v1_777f = add i32 %v0_777f, -104
  %v1_7785 = inttoptr i32 %v1_777f to i32*
  %v2_7785 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_7785)
  %v0_778a = load i32, i32* @ebx, align 4
  ret i32 %v0_778a
}

define i32 @function_7795() local_unnamed_addr {
dec_label_pc_7795:
  %eax.global-to-local = alloca i32, align 4
  %v0_7795 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7795
}

define i32 @function_77ab() local_unnamed_addr {
dec_label_pc_77ab:
  %v0_77ab = load i32, i32* @ebp, align 4
  %v1_77ab = add i32 %v0_77ab, -108
  %v2_77ab = inttoptr i32 %v1_77ab to i32*
  %v3_77ab = load i32, i32* %v2_77ab, align 4
  store i32 %v3_77ab, i32* @eax, align 4
  %v1_77ae = add i32 %v0_77ab, -12
  %v2_77ae = inttoptr i32 %v1_77ae to i32*
  %v3_77ae = load i32, i32* %v2_77ae, align 4
  %v1_77b1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_77b1 = icmp eq i32 %v1_77b1, %v3_77ae
  br i1 %v3_77b1, label %bb, label %dec_label_pc_77ba

bb:                                               ; preds = %dec_label_pc_77ab
  %v1_77b8 = call i32 @function_77bf()
  br label %dec_label_pc_77ba

dec_label_pc_77ba:                                ; preds = %bb, %dec_label_pc_77ab
  %v2_77b8 = phi i32 [ %v1_77b8, %bb ], [ %v3_77ab, %dec_label_pc_77ab ]
  ret i32 %v2_77b8
}

define i32 @function_77bf() local_unnamed_addr {
dec_label_pc_77bf:
  %v0_77bf = load i32, i32* @ebp, align 4
  %v1_77bf = add i32 %v0_77bf, -4
  %v2_77bf = inttoptr i32 %v1_77bf to i32*
  %v3_77bf = load i32, i32* %v2_77bf, align 4
  store i32 %v3_77bf, i32* @ebx, align 4
  %v0_77c3 = load i32, i32* @eax, align 4
  ret i32 %v0_77c3
}

define %CScript.33 @_Z17CombineSignatures7CScriptRK12CTransactionjRKS_S4_(%CScript.32 %scriptPubKey, i32 %txTo, i32 %nIn, %CScript %scriptSig1, %CScript %scriptSig2) local_unnamed_addr {
dec_label_pc_77c6:
  %tmp96 = extractvalue %CScript %scriptSig1, 0
  %tmp97 = extractvalue %CScript.32 %scriptPubKey, 0
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %v2_7811 = ptrtoint i32* %stack_var_-68 to i32
  %v1_7817 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_7811)
  %v2_7823 = ptrtoint i32* %stack_var_-20 to i32
  %v3_7833 = insertvalue %CScript undef, i32 %txTo, 0
  %v4_7833 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_7811, 0
  %v5_7833 = call i1 @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE(%CScript %v3_7833, i32 %v2_7823, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_7833)
  %v2_7838 = ptrtoint i32* %stack_var_-56 to i32
  %v1_783e = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_7838)
  %v2_7843 = ptrtoint i32* %stack_var_-132 to i32
  %v1_7849 = call i32 @_ZN12CTransactionC1Ev(i32 %v2_7843)
  %v6_787d = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_7838, 0
  %v8_787d = call i1 @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v6_787d, %CScript %scriptSig2, i32 %v2_7843, i32 0, i32 2, i32 0)
  %v1_7888 = call i32 @_ZN12CTransactionD1Ev(i32 %v2_7843)
  %v2_788d = ptrtoint i32* %stack_var_-44 to i32
  %v1_7893 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %v2_788d)
  %v2_7898 = ptrtoint i32* %stack_var_-100 to i32
  %v1_789e = call i32 @_ZN12CTransactionC1Ev(i32 %v2_7898)
  %v6_78d2 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v2_788d, 0
  %v7_78d2 = insertvalue %CScript undef, i32 %tmp115, 0
  %v8_78d2 = call i1 @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji(%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v6_78d2, %CScript %v7_78d2, i32 %v2_7898, i32 0, i32 2, i32 0)
  %v1_78dd = call i32 @_ZN12CTransactionD1Ev(i32 %v2_7898)
  %v2_78ef = ptrtoint i32* %stack_var_-32 to i32
  %v2_78f5 = call i32 @_ZN7CScriptC1ERKS_(i32 %v2_78ef, i32 %txTo)
  %v0_7915 = load i32, i32* @ebx, align 4
  %v8_7937 = insertvalue %CScript.30 undef, i32 %tmp97, 0
  %v9_7937 = insertvalue %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, i32 %v0_7915, 0
  %v12_7937 = call %CScript.31 @CombineSignatures(%CScript.30 %v8_7937, i32 %v2_78ef, i32 %nIn, i32 %tmp96, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v9_7937, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v4_7833, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" %v6_787d)
  %v1_7945 = call i32 @_ZN7CScriptD1Ev(i32 %v2_78ef)
  %v2_7950 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* nonnull %stack_var_-44)
  %v2_795b = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* nonnull %stack_var_-56)
  %v2_7966 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* nonnull %stack_var_-68)
  store i32 %tmp97, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_797d

bb:                                               ; preds = %dec_label_pc_77c6
  %v1_797b = call i32 @function_79e6()
  store i32 %v1_797b, i32* @eax, align 4
  br label %dec_label_pc_797d

dec_label_pc_797d:                                ; preds = %bb, %dec_label_pc_77c6
  %v0_797d = call i32 @function_79e1()
  %v2_797d = insertvalue %CScript.33 undef, i32 %v0_797d, 0
  ret %CScript.33 %v2_797d

; uselistorder directives
  uselistorder i32 %tmp97, { 1, 0 }
  uselistorder %CScript.31 (%CScript.30, i32, i32, i32, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>", %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>", %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>")* @CombineSignatures, { 1, 0 }
  uselistorder %CScript.30 undef, { 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CScriptC1ERKS_, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 (%"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>", %CScript, i32, i32, i32, i32)* @_Z10EvalScriptRSt6vectorIS_IhSaIhEESaIS1_EERK7CScriptRK12CTransactionjji, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN12CTransactionC1Ev, { 1, 0 }
  uselistorder i1 (%CScript, i32, %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>")* @_Z6SolverRK7CScriptR10txnouttypeRSt6vectorIS4_IhSaIhEESaIS6_EE, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder %"vector<std::vector<unsignedchar,std::allocator<unsignedchar>>,std::allocator<std::vector<unsignedchar,std::allocator<unsignedchar>>>>" undef, { 1, 19, 18, 15, 2, 0, 14, 8, 7, 6, 5, 4, 3, 17, 20, 16, 13, 12, 45, 11, 10, 9, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21 }
  uselistorder %CScript undef, { 11, 6, 5, 7, 12, 0, 1, 2, 10, 4, 3, 9, 8 }
  uselistorder i32 (i32)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %txTo, { 1, 0 }
}

define i32 @function_797f() local_unnamed_addr {
dec_label_pc_797f:
  %v0_7981 = load i32, i32* @ebp, align 4
  %v1_7981 = add i32 %v0_7981, -128
  %v1_7987 = call i32 @_ZN12CTransactionD1Ev(i32 %v1_7981)
  %v0_798c = call i32 @function_79bd()
  ret i32 %v0_798c
}

define i32 @function_798e() local_unnamed_addr {
dec_label_pc_798e:
  %v0_7990 = load i32, i32* @ebp, align 4
  %v1_7990 = add i32 %v0_7990, -96
  %v1_7996 = call i32 @_ZN12CTransactionD1Ev(i32 %v1_7990)
  %v0_799b = call i32 @function_79ae()
  ret i32 %v0_799b

; uselistorder directives
  uselistorder i32 (i32)* @_ZN12CTransactionD1Ev, { 5, 4, 2, 1, 3, 0 }
}

define i32 @function_799d() local_unnamed_addr {
dec_label_pc_799d:
  %eax.global-to-local = alloca i32, align 4
  %v0_799d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_799d, i32* @ebx, align 4
  %v0_799f = load i32, i32* @ebp, align 4
  %v1_799f = add i32 %v0_799f, -28
  store i32 %v1_799f, i32* %eax.global-to-local, align 4
  %v1_79a5 = call i32 @_ZN7CScriptD1Ev(i32 %v1_799f)
  store i32 %v1_79a5, i32* %eax.global-to-local, align 4
  %v0_79aa = call i32 @function_79ae()
  store i32 %v0_79aa, i32* %eax.global-to-local, align 4
  ret i32 %v0_79aa

; uselistorder directives
  uselistorder i32 ()* @function_79ae, { 1, 0 }
}

define i32 @function_79ad() local_unnamed_addr {
dec_label_pc_79ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_79ad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_79ad
}

define i32 @function_79ae() local_unnamed_addr {
dec_label_pc_79ae:
  %v0_79ae = load i32, i32* @ebp, align 4
  %v1_79ae = add i32 %v0_79ae, -40
  %v1_79b4 = inttoptr i32 %v1_79ae to i32*
  %v2_79b4 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_79b4)
  %v0_79b9 = call i32 @function_79bd()
  ret i32 %v0_79b9

; uselistorder directives
  uselistorder i32 ()* @function_79bd, { 1, 0 }
}

define i32 @function_79bc() local_unnamed_addr {
dec_label_pc_79bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_79bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_79bc
}

define i32 @function_79bd() local_unnamed_addr {
dec_label_pc_79bd:
  %v0_79bd = load i32, i32* @ebp, align 4
  %v1_79bd = add i32 %v0_79bd, -52
  %v1_79c3 = inttoptr i32 %v1_79bd to i32*
  %v2_79c3 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_79c3)
  %v0_79c8 = call i32 @function_79cc()
  ret i32 %v0_79c8
}

define i32 @function_79ca() local_unnamed_addr {
dec_label_pc_79ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_79ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_79ca
}

define i32 @function_79cc() local_unnamed_addr {
dec_label_pc_79cc:
  %v0_79cc = load i32, i32* @ebp, align 4
  %v1_79cc = add i32 %v0_79cc, -64
  %v1_79d2 = inttoptr i32 %v1_79cc to i32*
  %v2_79d2 = call i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %v1_79d2)
  %v0_79d7 = load i32, i32* @ebx, align 4
  ret i32 %v0_79d7

; uselistorder directives
  uselistorder i32 (i32*)* @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev, { 1, 2, 0, 11, 12, 13, 3, 14, 4, 5, 15, 16, 6, 17, 7, 18, 9, 8, 19, 20, 21, 10, 22 }
}

define i32 @function_79e1() local_unnamed_addr {
dec_label_pc_79e1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_79e6() local_unnamed_addr {
dec_label_pc_79e6:
  %v0_79ea = load i32, i32* @eax, align 4
  ret i32 %v0_79ea
}

define void @_ZNK7CScript13GetSigOpCountEb(%CScript* %this, i1 %fAccurate) local_unnamed_addr {
dec_label_pc_79ee:
  %n_-32 = alloca i32, align 4
  %lastOpcode_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %opcode_-36 = alloca i32, align 4
  %v4_79f7 = ptrtoint %CScript* %this to i32
  %v0_7a00 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_7a15 = ptrtoint i32* %opcode_-36 to i32
  %tmp32 = getelementptr inbounds %CScript, %CScript* %this, i32 0, i32 0
  %v4_7a1f = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v2_7a15, i32* %tmp32)
  %v16_7a24 = ptrtoint i32* %stack_var_-80 to i32
  %v2_7a33 = ptrtoint i32* %lastOpcode_-28 to i32
  %v2_7ab8 = ptrtoint i32* %n_-32 to i32
  %v11_7a85 = icmp eq i1 %fAccurate, false
  br label %dec_label_pc_7ab5

dec_label_pc_7a33:                                ; preds = %dec_label_pc_7ab5
  %v1_7a36 = load i32, i32* @esp, align 4
  %v2_7a36 = add i32 %v1_7a36, 8
  %v3_7a36 = inttoptr i32 %v2_7a36 to i32*
  store i32 %v2_7a33, i32* %v3_7a36, align 4
  %v1_7a3d = load i32, i32* @esp, align 4
  %v2_7a3d = add i32 %v1_7a3d, 4
  %v3_7a3d = inttoptr i32 %v2_7a3d to i32*
  store i32 %v2_7a15, i32* %v3_7a3d, align 4
  %v1_7a44 = load i32, i32* @esp, align 4
  %v2_7a44 = inttoptr i32 %v1_7a44 to i32*
  store i32 %v4_79f7, i32* %v2_7a44, align 4
  %v0_7a47 = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetype()
  %v1_7a4c = xor i32 %v0_7a47, 1
  %v4_7a4c = trunc i32 %v1_7a4c to i8
  %v5_7a4f = icmp eq i8 %v4_7a4c, 0
  %v1_7a51 = icmp eq i1 %v5_7a4f, false
  br i1 %v1_7a51, label %dec_label_pc_7ae7, label %dec_label_pc_7a57

dec_label_pc_7a57:                                ; preds = %dec_label_pc_7a33
  %v3_7a57 = load i32, i32* %lastOpcode_-28, align 4
  %v10_7a5a = icmp eq i32 %v3_7a57, 172
  br i1 %v10_7a5a, label %dec_label_pc_7a6b, label %dec_label_pc_7a61

dec_label_pc_7a61:                                ; preds = %dec_label_pc_7a57
  %v10_7a64 = icmp eq i32 %v3_7a57, 173
  %v1_7a69 = icmp eq i1 %v10_7a64, false
  br i1 %v1_7a69, label %dec_label_pc_7a71, label %dec_label_pc_7a6b

dec_label_pc_7a6b:                                ; preds = %dec_label_pc_7a61, %dec_label_pc_7a57
  %v4_7a6b = add i32 %lastOpcode_-24.1, 1
  br label %dec_label_pc_7aaf

dec_label_pc_7a71:                                ; preds = %dec_label_pc_7a61
  %v10_7a74 = icmp eq i32 %v3_7a57, 174
  br i1 %v10_7a74, label %dec_label_pc_7a85, label %dec_label_pc_7a7b

dec_label_pc_7a7b:                                ; preds = %dec_label_pc_7a71
  %v10_7a7e = icmp eq i32 %v3_7a57, 175
  %v1_7a83 = icmp eq i1 %v10_7a7e, false
  br i1 %v1_7a83, label %dec_label_pc_7aaf, label %dec_label_pc_7a85

dec_label_pc_7a85:                                ; preds = %dec_label_pc_7a7b, %dec_label_pc_7a71
  br i1 %v11_7a85, label %dec_label_pc_7aab, label %dec_label_pc_7a8b

dec_label_pc_7a8b:                                ; preds = %dec_label_pc_7a85
  %v7_7a91 = icmp sgt i32 %storemerge, 80
  br i1 %v7_7a91, label %dec_label_pc_7a93, label %dec_label_pc_7aab

dec_label_pc_7a93:                                ; preds = %dec_label_pc_7a8b
  %v8_7a99 = icmp sgt i32 %storemerge, 96
  br i1 %v8_7a99, label %dec_label_pc_7aab, label %dec_label_pc_7a9b

dec_label_pc_7a9b:                                ; preds = %dec_label_pc_7a93
  %v1_7a9e = load i32, i32* @esp, align 4
  %v2_7a9e = inttoptr i32 %v1_7a9e to i32*
  store i32 %storemerge, i32* %v2_7a9e, align 4
  %v0_7aa1 = call i32 @_ZN7CScript10DecodeOP_NE10opcodetype()
  %v5_7aa6 = add i32 %v0_7aa1, %lastOpcode_-24.1
  %v3_7aaf.pre = load i32, i32* %lastOpcode_-28, align 4
  br label %dec_label_pc_7aaf

dec_label_pc_7aab:                                ; preds = %dec_label_pc_7a8b, %dec_label_pc_7a93, %dec_label_pc_7a85
  %v4_7aab = add i32 %lastOpcode_-24.1, 20
  br label %dec_label_pc_7aaf

dec_label_pc_7aaf:                                ; preds = %dec_label_pc_7aab, %dec_label_pc_7a9b, %dec_label_pc_7a7b, %dec_label_pc_7a6b
  %v3_7aaf = phi i32 [ %v3_7a57, %dec_label_pc_7a6b ], [ %v3_7a57, %dec_label_pc_7aab ], [ %v3_7aaf.pre, %dec_label_pc_7a9b ], [ %v3_7a57, %dec_label_pc_7a7b ]
  %lastOpcode_-24.0 = phi i32 [ %v4_7a6b, %dec_label_pc_7a6b ], [ %v4_7aab, %dec_label_pc_7aab ], [ %v5_7aa6, %dec_label_pc_7a9b ], [ %lastOpcode_-24.1, %dec_label_pc_7a7b ]
  %v1_7abb.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_7ab5

dec_label_pc_7ab5:                                ; preds = %dec_label_pc_7aaf, %dec_label_pc_79ee
  %v1_7abb = phi i32 [ %v16_7a24, %dec_label_pc_79ee ], [ %v1_7abb.pre, %dec_label_pc_7aaf ]
  %lastOpcode_-24.1 = phi i32 [ 0, %dec_label_pc_79ee ], [ %lastOpcode_-24.0, %dec_label_pc_7aaf ]
  %storemerge = phi i32 [ 255, %dec_label_pc_79ee ], [ %v3_7aaf, %dec_label_pc_7aaf ]
  %v2_7abb = add i32 %v1_7abb, 4
  %v3_7abb = inttoptr i32 %v2_7abb to i32*
  store i32 %v4_79f7, i32* %v3_7abb, align 4
  %v1_7abf = load i32, i32* @esp, align 4
  %v2_7abf = inttoptr i32 %v1_7abf to i32*
  store i32 %v2_7ab8, i32* %v2_7abf, align 4
  %v2_7ac2 = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %storemerge, i32 %v0_7a00)
  %v0_7ac7 = load i32, i32* @esp, align 4
  %v3_7acd = inttoptr i32 %v0_7ac7 to i32*
  store i32 %v2_7ab8, i32* %v3_7acd, align 4
  %v1_7ad4 = load i32, i32* @esp, align 4
  %v2_7ad4 = inttoptr i32 %v1_7ad4 to i32*
  store i32 %v2_7a15, i32* %v2_7ad4, align 4
  %v2_7ad7 = call i32 @_ZN9__gnu_cxxltIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %storemerge, i32 %v0_7a00)
  %v4_7adc = trunc i32 %v2_7ad7 to i8
  %v5_7adc = icmp eq i8 %v4_7adc, 0
  %v1_7ade = icmp eq i1 %v5_7adc, false
  br i1 %v1_7ade, label %dec_label_pc_7a33, label %dec_label_pc_7ae7

dec_label_pc_7ae7:                                ; preds = %dec_label_pc_7a33, %dec_label_pc_7ab5
  store i32 %lastOpcode_-24.1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7af6

bb:                                               ; preds = %dec_label_pc_7ae7
  %v1_7af4 = call i32 @function_7afb()
  br label %dec_label_pc_7af6

dec_label_pc_7af6:                                ; preds = %bb, %dec_label_pc_7ae7
  ret void

; uselistorder directives
  uselistorder i32 %storemerge, { 3, 4, 2, 1, 0 }
  uselistorder i32 %lastOpcode_-24.1, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v3_7a57, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 %v2_7a15, { 1, 0, 2 }
  uselistorder i32 %v4_79f7, { 1, 0 }
  uselistorder i32 ()* @_ZN7CScript10DecodeOP_NE10opcodetype, { 1, 0 }
  uselistorder label %dec_label_pc_7ae7, { 1, 0 }
  uselistorder label %dec_label_pc_7aab, { 1, 0, 2 }
}

define i32 @function_7afb() local_unnamed_addr {
dec_label_pc_7afb:
  %v0_7afc = load i32, i32* @eax, align 4
  ret i32 %v0_7afc
}

define void @_ZNK7CScript13GetSigOpCountERKS_(%CScript* %this, %CScript %scriptSig) local_unnamed_addr {
dec_label_pc_7afe:
  %tmp104 = extractvalue %CScript %scriptSig, 0
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %opcode_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-112 = alloca %CScript*, align 4
  %opcode_-44 = alloca i32, align 4
  %stack_var_-108 = alloca %CScript*, align 4
  store %CScript* %this, %CScript** %stack_var_-108, align 4
  call void @_ZNK7CScript17IsPayToScriptHashEv(%CScript* %this)
  br i1 icmp eq (i8 and (i8 trunc (i32 xor (i32 ptrtoint (i32* @9 to i32), i32 1) to i8), i8 trunc (i32 xor (i32 ptrtoint (i32* @9 to i32), i32 1) to i8)), i8 0), label %dec_label_pc_7b48, label %dec_label_pc_7b2e

dec_label_pc_7b2e:                                ; preds = %dec_label_pc_7afe
  store %CScript* %this, %CScript** %stack_var_-108, align 4
  call void @_ZNK7CScript13GetSigOpCountEb(%CScript* %this, i1 true)
  br label %dec_label_pc_7c6a

dec_label_pc_7b48:                                ; preds = %dec_label_pc_7afe
  %v2_7b4b = ptrtoint i32* %opcode_-44 to i32
  %tmp131 = urem i32 %tmp104, 2
  %v4_7b4e = icmp ne i32 %tmp131, 0
  %tmp132 = bitcast i32* %opcode_-44 to %CScript*
  store %CScript* %tmp132, %CScript** %stack_var_-108, align 4
  %v3_7b55 = sext i1 %v4_7b4e to i32
  %v4_7b55 = inttoptr i32 %v3_7b55 to i32*
  %v5_7b55 = call i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %v2_7b4b, i32* %v4_7b55)
  %v2_7b5d = ptrtoint i32* %stack_var_-68 to i32
  %tmp134 = bitcast i32* %stack_var_-68 to %CScript*
  store %CScript* %tmp134, %CScript** %stack_var_-112, align 4
  %v2_7b63 = call i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %v2_7b5d)
  %v2_7bb0 = ptrtoint i32* %opcode_-40 to i32
  %v2_7b71 = ptrtoint i32* %stack_var_-36 to i32
  br label %dec_label_pc_7bad

dec_label_pc_7b6a:                                ; preds = %dec_label_pc_7bad
  %v1_7b6d = load i32, i32* @esp, align 4
  %v2_7b6d = add i32 %v1_7b6d, 12
  %v3_7b6d = inttoptr i32 %v2_7b6d to i32*
  store i32 %v2_7b5d, i32* %v3_7b6d, align 4
  %v1_7b74 = load i32, i32* @esp, align 4
  %v2_7b74 = add i32 %v1_7b74, 8
  %v3_7b74 = inttoptr i32 %v2_7b74 to i32*
  store i32 %v2_7b71, i32* %v3_7b74, align 4
  %v1_7b7b = load i32, i32* @esp, align 4
  %v2_7b7b = add i32 %v1_7b7b, 4
  %v3_7b7b = inttoptr i32 %v2_7b7b to i32*
  store i32 %v2_7b4b, i32* %v3_7b7b, align 4
  %v1_7b82 = load i32, i32* @esp, align 4
  %v2_7b82 = inttoptr i32 %v1_7b82 to i32*
  store i32 %tmp104, i32* %v2_7b82, align 4
  %v0_7b85 = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7b85 = ptrtoint %CScript* %v0_7b85 to i32
  %v2_7b85 = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7b85 = ptrtoint %CScript* %v2_7b85 to i32
  %v7_7b85 = call i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %v1_7b85, i32 %v3_7b85, i32 %v3_7b55, i32 ptrtoint (i32* @9 to i32))
  %v1_7b8a = xor i32 %v7_7b85, 1
  %v4_7b8a = trunc i32 %v1_7b8a to i8
  %v5_7b8d = icmp eq i8 %v4_7b8a, 0
  br i1 %v5_7b8d, label %dec_label_pc_7b9b, label %dec_label_pc_7b91

dec_label_pc_7b91:                                ; preds = %dec_label_pc_7b6a
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_7c5f

dec_label_pc_7b9b:                                ; preds = %dec_label_pc_7b6a
  %v3_7b9b = load i32, i32* %stack_var_-36, align 4
  %v7_7ba1 = icmp sgt i32 %v3_7b9b, 96
  br i1 %v7_7ba1, label %dec_label_pc_7ba3, label %dec_label_pc_7bad

dec_label_pc_7ba3:                                ; preds = %dec_label_pc_7b9b
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_7c5f

dec_label_pc_7bad:                                ; preds = %dec_label_pc_7b9b, %dec_label_pc_7b48
  %v1_7bb3 = load i32, i32* @esp, align 4
  %v2_7bb3 = add i32 %v1_7bb3, 4
  %v3_7bb3 = inttoptr i32 %v2_7bb3 to i32*
  store i32 %tmp104, i32* %v3_7bb3, align 4
  %v1_7bb7 = load i32, i32* @esp, align 4
  %v2_7bb7 = inttoptr i32 %v1_7bb7 to i32*
  store i32 %v2_7bb0, i32* %v2_7bb7, align 4
  %v0_7bba = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7bba = ptrtoint %CScript* %v0_7bba to i32
  %v2_7bba = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7bba = ptrtoint %CScript* %v2_7bba to i32
  %v4_7bba = call i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %v1_7bba, i32 %v3_7bba)
  %v0_7bbf = load i32, i32* @esp, align 4
  %v3_7bc5 = inttoptr i32 %v0_7bbf to i32*
  store i32 %v2_7bb0, i32* %v3_7bc5, align 4
  %v1_7bcc = load i32, i32* @esp, align 4
  %v2_7bcc = inttoptr i32 %v1_7bcc to i32*
  store i32 %v2_7b4b, i32* %v2_7bcc, align 4
  %v0_7bcf = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7bcf = ptrtoint %CScript* %v0_7bcf to i32
  %v2_7bcf = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7bcf = ptrtoint %CScript* %v2_7bcf to i32
  %v4_7bcf = call i32 @_ZN9__gnu_cxxltIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %v1_7bcf, i32 %v3_7bcf)
  %v4_7bd4 = trunc i32 %v4_7bcf to i8
  %v5_7bd4 = icmp eq i8 %v4_7bd4, 0
  %v1_7bd6 = icmp eq i1 %v5_7bd4, false
  br i1 %v1_7bd6, label %dec_label_pc_7b6a, label %dec_label_pc_7bd8

dec_label_pc_7bd8:                                ; preds = %dec_label_pc_7bad
  %v2_7bd8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_7b5d, i32* @edx, align 4
  %v1_7bde = load i32, i32* @esp, align 4
  %v2_7bde = add i32 %v1_7bde, 4
  %v3_7bde = inttoptr i32 %v2_7bde to i32*
  store i32 %v2_7b5d, i32* %v3_7bde, align 4
  %v1_7be2 = load i32, i32* @esp, align 4
  %v2_7be2 = inttoptr i32 %v1_7be2 to i32*
  store i32 %v2_7bd8, i32* %v2_7be2, align 4
  %v0_7be5 = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7be5 = ptrtoint %CScript* %v0_7be5 to i32
  %v2_7be5 = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7be5 = ptrtoint %CScript* %v2_7be5 to i32
  %v4_7be5 = call i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %v1_7be5, i32 %v3_7be5)
  %v0_7bea = load i32, i32* @esp, align 4
  %v3_7bf0 = inttoptr i32 %v0_7bea to i32*
  store i32 %v2_7bd8, i32* %v3_7bf0, align 4
  %v2_7bf4 = ptrtoint i32* %stack_var_-20 to i32
  %v1_7bf7 = load i32, i32* @esp, align 4
  %v2_7bf7 = inttoptr i32 %v1_7bf7 to i32*
  store i32 %v2_7bf4, i32* %v2_7bf7, align 4
  %v0_7bfa = load %CScript*, %CScript** %stack_var_-112, align 4
  %v2_7bfa = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7bfa = ptrtoint %CScript* %v2_7bfa to i32
  %tmp138 = getelementptr inbounds %CScript, %CScript* %v0_7bfa, i32 0, i32 0
  %v5_7bfa = call i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1IPhEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE(i32* %tmp138, i32 %v3_7bfa)
  %v2_7bff = ptrtoint i32* %stack_var_-32 to i32
  %v1_7c05 = load i32, i32* @esp, align 4
  %v2_7c05 = add i32 %v1_7c05, 4
  %v3_7c05 = inttoptr i32 %v2_7c05 to i32*
  store i32 %v2_7b5d, i32* %v3_7c05, align 4
  %v1_7c09 = load i32, i32* @esp, align 4
  %v2_7c09 = inttoptr i32 %v1_7c09 to i32*
  store i32 %v2_7bff, i32* %v2_7c09, align 4
  %v0_7c0c = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7c0c = ptrtoint %CScript* %v0_7c0c to i32
  %v2_7c0c = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7c0c = ptrtoint %CScript* %v2_7c0c to i32
  %v4_7c0c = call i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %v1_7c0c, i32 %v3_7c0c)
  %v0_7c11 = load i32, i32* @esp, align 4
  %v3_7c17 = inttoptr i32 %v0_7c11 to i32*
  store i32 %v2_7bff, i32* %v3_7c17, align 4
  %v2_7c1b = ptrtoint i32* %stack_var_-24 to i32
  %v1_7c1e = load i32, i32* @esp, align 4
  %v2_7c1e = inttoptr i32 %v1_7c1e to i32*
  store i32 %v2_7c1b, i32* %v2_7c1e, align 4
  %v0_7c21 = load %CScript*, %CScript** %stack_var_-112, align 4
  %v2_7c21 = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7c21 = ptrtoint %CScript* %v2_7c21 to i32
  %tmp140 = getelementptr inbounds %CScript, %CScript* %v0_7c21, i32 0, i32 0
  %v5_7c21 = call i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1IPhEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE(i32* %tmp140, i32 %v3_7c21)
  %v3_7c26 = load i32, i32* %stack_var_-20, align 4
  %v1_7c29 = load i32, i32* @esp, align 4
  %v2_7c29 = add i32 %v1_7c29, 8
  %v3_7c29 = inttoptr i32 %v2_7c29 to i32*
  store i32 %v3_7c26, i32* %v3_7c29, align 4
  %v3_7c2d = load i32, i32* %stack_var_-24, align 4
  %v1_7c30 = load i32, i32* @esp, align 4
  %v2_7c30 = add i32 %v1_7c30, 4
  %v3_7c30 = inttoptr i32 %v2_7c30 to i32*
  store i32 %v3_7c2d, i32* %v3_7c30, align 4
  %v2_7c34 = ptrtoint i32* %stack_var_-56 to i32
  %v1_7c37 = load i32, i32* @esp, align 4
  %v2_7c37 = inttoptr i32 %v1_7c37 to i32*
  store i32 %v2_7c34, i32* %v2_7c37, align 4
  %v0_7c3a = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7c3a = ptrtoint %CScript* %v0_7c3a to i32
  %v2_7c3a = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7c3a = ptrtoint %CScript* %v2_7c3a to i32
  %v6_7c3a = call i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %v1_7c3a, i32 %v3_7c3a, i32 %v3_7b55)
  %v0_7c3f = load i32, i32* @esp, align 4
  %v1_7c3f = add i32 %v0_7c3f, 4
  %v2_7c3f = inttoptr i32 %v1_7c3f to i32*
  store i32 1, i32* %v2_7c3f, align 4
  %v1_7c4a = load i32, i32* @esp, align 4
  %v2_7c4a = inttoptr i32 %v1_7c4a to i32*
  store i32 %v2_7c34, i32* %v2_7c4a, align 4
  %v0_7c4d = load %CScript*, %CScript** %stack_var_-112, align 4
  %v2_7c4d = load %CScript*, %CScript** %stack_var_-108, align 4
  %v3_7c4d = ptrtoint %CScript* %v2_7c4d to i32
  %tmp141 = urem i32 %v3_7c4d, 2
  %v5_7c4d = icmp ne i32 %tmp141, 0
  call void @_ZNK7CScript13GetSigOpCountEb(%CScript* %v0_7c4d, i1 %v5_7c4d)
  store i32 ptrtoint (i32* @9 to i32), i32* @ebx, align 4
  %v1_7c57 = load i32, i32* @esp, align 4
  %v2_7c57 = inttoptr i32 %v1_7c57 to i32*
  store i32 %v2_7c34, i32* %v2_7c57, align 4
  %v0_7c5a = load %CScript*, %CScript** %stack_var_-112, align 4
  %v1_7c5a = ptrtoint %CScript* %v0_7c5a to i32
  %v2_7c5a = call i32 @_ZN7CScriptD1Ev(i32 %v1_7c5a)
  br label %dec_label_pc_7c5f

dec_label_pc_7c5f:                                ; preds = %dec_label_pc_7ba3, %dec_label_pc_7b91, %dec_label_pc_7bd8
  %v1_7c62 = load i32, i32* @esp, align 4
  %v2_7c62 = inttoptr i32 %v1_7c62 to i32*
  store i32 %v2_7b5d, i32* %v2_7c62, align 4
  %v0_7c65 = load %CScript*, %CScript** %stack_var_-112, align 4
  %tmp142 = getelementptr inbounds %CScript, %CScript* %v0_7c65, i32 0, i32 0
  %v3_7c65 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %tmp142)
  %v0_7c6a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_7c6a

dec_label_pc_7c6a:                                ; preds = %dec_label_pc_7c5f, %dec_label_pc_7b2e
  %v0_7c6a = phi i32 [ %v0_7c6a.pre, %dec_label_pc_7c5f ], [ ptrtoint (i32* @9 to i32), %dec_label_pc_7b2e ]
  store i32 %v0_7c6a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7c78

bb:                                               ; preds = %dec_label_pc_7c6a
  %v1_7c76 = call i32 @function_7cad()
  store i32 %v1_7c76, i32* @eax, align 4
  br label %dec_label_pc_7c78

dec_label_pc_7c78:                                ; preds = %bb, %dec_label_pc_7c6a
  %v0_7c78 = call i32 @function_7ca8()
  ret void

; uselistorder directives
  uselistorder i32 %v2_7b5d, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_7b4b, { 1, 0, 2 }
  uselistorder %CScript** %stack_var_-108, { 3, 7, 9, 5, 8, 6, 11, 4, 10, 2, 1, 0 }
  uselistorder %CScript** %stack_var_-112, { 4, 7, 1, 6, 9, 3, 8, 5, 11, 2, 10, 0 }
  uselistorder i32 %tmp104, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_, { 2, 1, 0, 4, 3 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIhSaIhEE5beginEv, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @_ZNSt6vectorIhSaIhEE3endEv, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @_ZN9__gnu_cxxltIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNKSt6vectorIhSaIhEE3endEv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNSt6vectorIhSaIhEEC1Ev, { 4, 3, 2, 1, 0 }
  uselistorder void (%CScript*, i1)* @_ZNK7CScript13GetSigOpCountEb, { 1, 0 }
  uselistorder void (%CScript*)* @_ZNK7CScript17IsPayToScriptHashEv, { 1, 0 }
  uselistorder %CScript* %this, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_7c5f, { 2, 0, 1 }
}

define i32 @function_7c7a() local_unnamed_addr {
dec_label_pc_7c7a:
  %eax.global-to-local = alloca i32, align 4
  %v0_7c7e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_7c7e, i32* @ebx, align 4
  %v0_7c80 = call i32 @function_7c93()
  store i32 %v0_7c80, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c80
}

define i32 @function_7c82() local_unnamed_addr {
dec_label_pc_7c82:
  %eax.global-to-local = alloca i32, align 4
  %v0_7c82 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_7c82, i32* @ebx, align 4
  %v0_7c84 = load i32, i32* @ebp, align 4
  %v1_7c84 = add i32 %v0_7c84, -52
  store i32 %v1_7c84, i32* %eax.global-to-local, align 4
  %v1_7c8a = call i32 @_ZN7CScriptD1Ev(i32 %v1_7c84)
  store i32 %v1_7c8a, i32* %eax.global-to-local, align 4
  %v0_7c8f = call i32 @function_7c93()
  store i32 %v0_7c8f, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c8f

; uselistorder directives
  uselistorder i32 ()* @function_7c93, { 1, 0 }
  uselistorder i32 (i32)* @_ZN7CScriptD1Ev, { 42, 16, 41, 15, 39, 40, 38, 14, 13, 12, 11, 37, 36, 35, 10, 34, 9, 33, 32, 31, 30, 29, 28, 27, 8, 7, 6, 5, 4, 3, 2, 26, 25, 1, 0, 24, 23, 22, 21, 20, 19, 18, 17 }
}

define i32 @function_7c92() local_unnamed_addr {
dec_label_pc_7c92:
  %eax.global-to-local = alloca i32, align 4
  %v0_7c92 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7c92
}

define i32 @function_7c93() local_unnamed_addr {
dec_label_pc_7c93:
  %v0_7c93 = load i32, i32* @ebp, align 4
  %v1_7c93 = add i32 %v0_7c93, -64
  %v1_7c99 = inttoptr i32 %v1_7c93 to i32*
  %v2_7c99 = call i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %v1_7c99)
  %v0_7c9e = load i32, i32* @ebx, align 4
  ret i32 %v0_7c9e

; uselistorder directives
  uselistorder i32 (i32*)* @_ZNSt6vectorIhSaIhEED1Ev, { 0, 56, 1, 57, 2, 58, 3, 4, 5, 6, 7, 8, 59, 60, 61, 62, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 63, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
}

define i32 @function_7ca8() local_unnamed_addr {
dec_label_pc_7ca8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7cad() local_unnamed_addr {
dec_label_pc_7cad:
  %v0_7cb1 = load i32, i32* @eax, align 4
  ret i32 %v0_7cb1
}

define void @_ZNK7CScript17IsPayToScriptHashEv(%CScript* %this) local_unnamed_addr {
dec_label_pc_7cb2:
  %v4_7cb8 = ptrtoint %CScript* %this to i32
  %tmp14 = getelementptr inbounds %CScript, %CScript* %this, i32 0, i32 0
  %v3_7ccf = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %tmp14)
  %v10_7cd4 = icmp eq i32 %v3_7ccf, 23
  %v1_7cd7 = icmp eq i1 %v10_7cd4, false
  br i1 %v1_7cd7, label %dec_label_pc_7d2e, label %dec_label_pc_7cd9

dec_label_pc_7cd9:                                ; preds = %dec_label_pc_7cb2
  %v4_7ce7 = call i32 @_ZNKSt6vectorIhSaIhEE2atEj(i32 %v4_7cb8, i32 0)
  %v1_7cec = inttoptr i32 %v4_7ce7 to i8*
  %v2_7cec = load i8, i8* %v1_7cec, align 1
  %v11_7cef = icmp eq i8 %v2_7cec, -87
  %v1_7cf1 = icmp eq i1 %v11_7cef, false
  br i1 %v1_7cf1, label %dec_label_pc_7d2e, label %dec_label_pc_7cf3

dec_label_pc_7cf3:                                ; preds = %dec_label_pc_7cd9
  %v4_7d01 = call i32 @_ZNKSt6vectorIhSaIhEE2atEj(i32 %v4_7cb8, i32 1)
  %v1_7d06 = inttoptr i32 %v4_7d01 to i8*
  %v2_7d06 = load i8, i8* %v1_7d06, align 1
  %v11_7d09 = icmp eq i8 %v2_7d06, 20
  %v1_7d0b = icmp eq i1 %v11_7d09, false
  br i1 %v1_7d0b, label %dec_label_pc_7d2e, label %dec_label_pc_7d0d

dec_label_pc_7d0d:                                ; preds = %dec_label_pc_7cf3
  %v4_7d1b = call i32 @_ZNKSt6vectorIhSaIhEE2atEj(i32 %v4_7cb8, i32 ptrtoint (i8** @global_var_16.2213 to i32))
  %v1_7d20 = inttoptr i32 %v4_7d1b to i8*
  %v2_7d20 = load i8, i8* %v1_7d20, align 1
  %v11_7d23 = icmp eq i8 %v2_7d20, -121
  %v1_7d25 = icmp eq i1 %v11_7d23, false
  br i1 %v1_7d25, label %dec_label_pc_7d2e, label %dec_label_pc_7d33

dec_label_pc_7d2e:                                ; preds = %dec_label_pc_7d0d, %dec_label_pc_7cf3, %dec_label_pc_7cd9, %dec_label_pc_7cb2
  br label %dec_label_pc_7d33

dec_label_pc_7d33:                                ; preds = %dec_label_pc_7d0d, %dec_label_pc_7d2e
  %storemerge = phi i32 [ 0, %dec_label_pc_7d2e ], [ 1, %dec_label_pc_7d0d ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7d3f

bb:                                               ; preds = %dec_label_pc_7d33
  %v1_7d3d = call i32 @function_7d44()
  br label %dec_label_pc_7d3f

dec_label_pc_7d3f:                                ; preds = %bb, %dec_label_pc_7d33
  ret void

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZNKSt6vectorIhSaIhEE2atEj, { 2, 1, 0 }
  uselistorder label %dec_label_pc_7d33, { 1, 0 }
}

define i32 @function_7d44() local_unnamed_addr {
dec_label_pc_7d44:
  %v0_7d45 = load i32, i32* @eax, align 4
  ret i32 %v0_7d45
}

define void @_ZN7CScript14SetDestinationERKN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EE(%CScript* %this, i32 %dest) local_unnamed_addr {
dec_label_pc_7d46:
  %stack_var_-20 = alloca i32, align 4
  %v2_7d6b = ptrtoint i32* %stack_var_-20 to i32
  %v2_7d71 = ptrtoint %CScript* %this to i32
  %v4_7d71 = call i32 @_ZN14CScriptVisitorC1EP7CScript(i32* nonnull %stack_var_-20, i32 %v2_7d71)
  %v3_7d83 = call i32 @_ZN5boost13apply_visitorI14CScriptVisitorKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENT_11result_typeERKSB_RT0_(i32 %v2_7d6b, i32 %dest)
  %v1_7d8e = call i32 @_ZN14CScriptVisitorD1Ev(i32 %v2_7d6b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7d9f

bb:                                               ; preds = %dec_label_pc_7d46
  %v1_7d9d = call i32 @function_7dbd()
  store i32 %v1_7d9d, i32* @eax, align 4
  br label %dec_label_pc_7d9f

dec_label_pc_7d9f:                                ; preds = %bb, %dec_label_pc_7d46
  %v0_7d9f = call i32 @function_7db8()
  ret void
}

define i32 @function_7da2() local_unnamed_addr {
dec_label_pc_7da2:
  %eax.global-to-local = alloca i32, align 4
  %v0_7da2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7da2
}

define i32 @function_7db8() local_unnamed_addr {
dec_label_pc_7db8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_7dbd() local_unnamed_addr {
dec_label_pc_7dbd:
  %v0_7dc2 = load i32, i32* @eax, align 4
  ret i32 %v0_7dc2
}

define void @_ZN7CScript11SetMultisigEiRKSt6vectorI7CPubKeySaIS1_EE(%CScript* %this, i32 %nRequired, i32 %keys) local_unnamed_addr {
dec_label_pc_7dc4:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-104 = alloca %CScript*, align 4
  %_foreach_cur1814_-40 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %_foreach_col1814_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  store i32 %keys, i32* %eax.global-to-local, align 4
  %v0_7ddc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_7de7 = ptrtoint %CScript* %this to i32
  store i32 %v4_7de7, i32* %eax.global-to-local, align 4
  %tmp137 = getelementptr inbounds %CScript, %CScript* %this, i32 0, i32 0
  %v3_7ded = call i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %tmp137)
  store i32 %nRequired, i32* %eax.global-to-local, align 4
  %v2_7df8 = call i32 @_ZN7CScript10EncodeOP_NEi(i32 %nRequired)
  store i32 %v4_7de7, i32* %eax.global-to-local, align 4
  %v3_7e07 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v4_7de7, i32 %v2_7df8)
  %v2_7e0c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_7e0c, i32* %eax.global-to-local, align 4
  %v4_7e21 = call i32 @_ZN5boost15foreach_detail_7containIKSt6vectorI7CPubKeySaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %v2_7e0c, i32 %keys, i32 0)
  store i32 %v2_7e0c, i32* %eax.global-to-local, align 4
  %v1_7e35 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_7e0c)
  store i32 %v1_7e35, i32* %eax.global-to-local, align 4
  %v4_7e3a = trunc i32 %v1_7e35 to i8
  %v5_7e3a = icmp eq i8 %v4_7e3a, 0
  %v1_7e3c = icmp eq i1 %v5_7e3a, false
  br i1 %v1_7e3c, label %dec_label_pc_7f64, label %dec_label_pc_7e42

dec_label_pc_7e42:                                ; preds = %dec_label_pc_7dc4
  %v2_7e42 = ptrtoint i32* %_foreach_col1814_-44 to i32
  store i32 %v2_7e42, i32* %eax.global-to-local, align 4
  %v5_7e5f = call i32 @_ZN5boost15foreach_detail_5beginISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %v2_7e42, i32 %v2_7e0c, i32 0, i32 0)
  store i32 %v2_7e42, i32* %eax.global-to-local, align 4
  store i32 %v2_7e42, i32* %stack_var_-100, align 4
  %v1_7e73 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_7e42)
  store i32 %v1_7e73, i32* %eax.global-to-local, align 4
  %v4_7e78 = trunc i32 %v1_7e73 to i8
  %v5_7e78 = icmp eq i8 %v4_7e78, 0
  %v1_7e7a = icmp eq i1 %v5_7e78, false
  br i1 %v1_7e7a, label %dec_label_pc_7f64, label %dec_label_pc_7e80

dec_label_pc_7e80:                                ; preds = %dec_label_pc_7e42
  %v2_7e80 = ptrtoint i32* %_foreach_cur1814_-40 to i32
  store i32 %v2_7e80, i32* %eax.global-to-local, align 4
  store i32 %v2_7e80, i32* %stack_var_-100, align 4
  %v5_7e9d = call i32 @_ZN5boost15foreach_detail_3endISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %v2_7e80, i32 %v2_7e0c, i32 0, i32 0)
  store i32 %v2_7e80, i32* %eax.global-to-local, align 4
  %v3_7eae = bitcast i32* %_foreach_cur1814_-40 to %CScript*
  store %CScript* %v3_7eae, %CScript** %stack_var_-104, align 4
  %v2_7eb1 = call i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %v2_7e80)
  store i32 %v2_7eb1, i32* %eax.global-to-local, align 4
  %v4_7eb6 = trunc i32 %v2_7eb1 to i8
  %v5_7eb6 = icmp eq i8 %v4_7eb6, 0
  %v1_7eb8 = icmp eq i1 %v5_7eb6, false
  br i1 %v1_7eb8, label %dec_label_pc_7f64, label %dec_label_pc_7ebe

dec_label_pc_7ebe:                                ; preds = %dec_label_pc_7e80
  store i8 1, i8* %stack_var_-17, align 1
  %v2_7ec4 = ptrtoint i8* %stack_var_-17 to i32
  %tmp142 = bitcast i8* %stack_var_-17 to %CScript*
  %v3_7f1f = bitcast i32* %_foreach_col1814_-44 to %CScript*
  br label %dec_label_pc_7f27

dec_label_pc_7ec4:                                ; preds = %dec_label_pc_7f5c
  store i32 %v2_7ec4, i32* %eax.global-to-local, align 4
  store %CScript* %tmp142, %CScript** %stack_var_-104, align 4
  %v3_7eca = call i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* nonnull %stack_var_-17)
  store i32 %v3_7eca, i32* %eax.global-to-local, align 4
  %v4_7ecf = trunc i32 %v3_7eca to i8
  %v5_7ecf = icmp eq i8 %v4_7ecf, 0
  %v1_7ed1 = icmp eq i1 %v5_7ecf, false
  br i1 %v1_7ed1, label %dec_label_pc_7ec4.dec_label_pc_7f0c_crit_edge, label %dec_label_pc_7ed3

dec_label_pc_7ec4.dec_label_pc_7f0c_crit_edge:    ; preds = %dec_label_pc_7ec4
  %v3_7f0c.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_7f0c

dec_label_pc_7ed3:                                ; preds = %dec_label_pc_7ec4
  store i32 0, i32* %stack_var_-100, align 4
  store i32 %v2_7e42, i32* %eax.global-to-local, align 4
  store %CScript* %v3_7f1f, %CScript** %stack_var_-104, align 4
  %v3_7ee1 = call i32 @_ZN5boost15foreach_detail_5derefISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %v2_7e42, i32 0)
  %v3_7f01.pre = load i8, i8* %stack_var_-17, align 1
  %v4_7f01143 = zext i8 %v3_7f01.pre to i32
  %v1_7f05144 = xor i32 %v4_7f01143, 1
  store i32 %v1_7f05144, i32* %eax.global-to-local, align 4
  %v5_7f08149 = icmp eq i32 %v1_7f05144, 0
  %v1_7f0a151 = icmp eq i1 %v5_7f08149, false
  br i1 %v1_7f0a151, label %dec_label_pc_7f01.dec_label_pc_7f0c.loopexit_crit_edge, label %dec_label_pc_7f0c

dec_label_pc_7f01.dec_label_pc_7f0c.loopexit_crit_edge: ; preds = %dec_label_pc_7ed3
  store i32 %v3_7ee1, i32* %stack_var_-100, align 4
  store i32 %v4_7de7, i32* %eax.global-to-local, align 4
  store %CScript* %this, %CScript** %stack_var_-104, align 4
  %v3_7ef8 = call i32 @_ZN7CScriptlsERK7CPubKey(i32 %v4_7de7, i32 %v3_7ee1)
  store i8 1, i8* %stack_var_-17, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7f0c

dec_label_pc_7f0c:                                ; preds = %dec_label_pc_7ed3, %dec_label_pc_7f01.dec_label_pc_7f0c.loopexit_crit_edge, %dec_label_pc_7ec4.dec_label_pc_7f0c_crit_edge
  %v3_7f0c = phi i8 [ %v3_7f0c.pre, %dec_label_pc_7ec4.dec_label_pc_7f0c_crit_edge ], [ 1, %dec_label_pc_7f01.dec_label_pc_7f0c.loopexit_crit_edge ], [ %v3_7f01.pre, %dec_label_pc_7ed3 ]
  %v4_7f0c = zext i8 %v3_7f0c to i32
  store i32 %v4_7f0c, i32* %eax.global-to-local, align 4
  %v5_7f10 = icmp eq i8 %v3_7f0c, 0
  br i1 %v5_7f10, label %dec_label_pc_7f27, label %dec_label_pc_7f14

dec_label_pc_7f14:                                ; preds = %dec_label_pc_7f0c
  store i32 0, i32* %stack_var_-100, align 4
  store i32 %v2_7e42, i32* %eax.global-to-local, align 4
  store %CScript* %v3_7f1f, %CScript** %stack_var_-104, align 4
  %v3_7f22 = call i32 @_ZN5boost15foreach_detail_4nextISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %v2_7e42, i32 0)
  store i32 %v3_7f22, i32* %eax.global-to-local, align 4
  %v3_7f27.pre.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_7f27

dec_label_pc_7f27:                                ; preds = %dec_label_pc_7f14, %dec_label_pc_7f0c, %dec_label_pc_7ebe
  %v3_7f27 = phi i8 [ 1, %dec_label_pc_7ebe ], [ 0, %dec_label_pc_7f0c ], [ %v3_7f27.pre.pre, %dec_label_pc_7f14 ]
  %v4_7f27 = zext i8 %v3_7f27 to i32
  store i32 %v4_7f27, i32* %eax.global-to-local, align 4
  %v5_7f2b = icmp eq i8 %v3_7f27, 0
  br i1 %v5_7f2b, label %dec_label_pc_7f57, label %dec_label_pc_7f2f

dec_label_pc_7f2f:                                ; preds = %dec_label_pc_7f27
  store i32 %v2_7e80, i32* %stack_var_-100, align 4
  store i32 %v2_7e42, i32* %eax.global-to-local, align 4
  store %CScript* %v3_7f1f, %CScript** %stack_var_-104, align 4
  %v4_7f44 = call i32 @_ZN5boost15foreach_detail_4doneISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %v2_7e42, i32 %v2_7e80, i32 0)
  %v1_7f49 = xor i32 %v4_7f44, 1
  %v4_7f49 = trunc i32 %v1_7f49 to i8
  store i32 %v1_7f49, i32* %eax.global-to-local, align 4
  %v5_7f4c = icmp eq i8 %v4_7f49, 0
  br i1 %v5_7f4c, label %dec_label_pc_7f57, label %dec_label_pc_7f5c

dec_label_pc_7f57:                                ; preds = %dec_label_pc_7f2f, %dec_label_pc_7f27
  br label %dec_label_pc_7f5c

dec_label_pc_7f5c:                                ; preds = %dec_label_pc_7f2f, %dec_label_pc_7f57
  %storemerge = phi i32 [ 0, %dec_label_pc_7f57 ], [ 1, %dec_label_pc_7f2f ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_7f5c = icmp eq i32 %storemerge, 0
  %v1_7f5e = icmp eq i1 %v5_7f5c, false
  br i1 %v1_7f5e, label %dec_label_pc_7ec4, label %dec_label_pc_7f64

dec_label_pc_7f64:                                ; preds = %dec_label_pc_7f5c, %dec_label_pc_7e80, %dec_label_pc_7e42, %dec_label_pc_7dc4
  store i32 %keys, i32* %eax.global-to-local, align 4
  %v1_7f67 = load i32, i32* @esp, align 4
  %v2_7f67 = inttoptr i32 %v1_7f67 to i32*
  store i32 %keys, i32* %v2_7f67, align 4
  %v0_7f6a = call i32 @_ZNKSt6vectorI7CPubKeySaIS0_EE4sizeEv()
  store i32 %v0_7f6a, i32* %eax.global-to-local, align 4
  %v1_7f6f = load i32, i32* @esp, align 4
  %v2_7f6f = inttoptr i32 %v1_7f6f to i32*
  store i32 %v0_7f6a, i32* %v2_7f6f, align 4
  %v0_7f72 = load %CScript*, %CScript** %stack_var_-104, align 4
  %v1_7f72 = ptrtoint %CScript* %v0_7f72 to i32
  %v2_7f72 = call i32 @_ZN7CScript10EncodeOP_NEi(i32 %v1_7f72)
  %v1_7f77 = load i32, i32* @esp, align 4
  %v2_7f77 = add i32 %v1_7f77, 4
  %v3_7f77 = inttoptr i32 %v2_7f77 to i32*
  store i32 %v2_7f72, i32* %v3_7f77, align 4
  store i32 %v4_7de7, i32* %eax.global-to-local, align 4
  %v1_7f7e = load i32, i32* @esp, align 4
  %v2_7f7e = inttoptr i32 %v1_7f7e to i32*
  store i32 %v4_7de7, i32* %v2_7f7e, align 4
  %v0_7f81 = load %CScript*, %CScript** %stack_var_-104, align 4
  %v1_7f81 = ptrtoint %CScript* %v0_7f81 to i32
  %v2_7f81 = load i32, i32* %stack_var_-100, align 4
  %v3_7f81 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v1_7f81, i32 %v2_7f81)
  store i32 %v3_7f81, i32* %eax.global-to-local, align 4
  %v0_7f86 = load i32, i32* @esp, align 4
  %v1_7f86 = add i32 %v0_7f86, 4
  %v2_7f86 = inttoptr i32 %v1_7f86 to i32*
  store i32 174, i32* %v2_7f86, align 4
  %v0_7f8e = load i32, i32* %eax.global-to-local, align 4
  %v1_7f8e = load i32, i32* @esp, align 4
  %v2_7f8e = inttoptr i32 %v1_7f8e to i32*
  store i32 %v0_7f8e, i32* %v2_7f8e, align 4
  %v0_7f91 = load %CScript*, %CScript** %stack_var_-104, align 4
  %v1_7f91 = ptrtoint %CScript* %v0_7f91 to i32
  %v2_7f91 = load i32, i32* %stack_var_-100, align 4
  %v3_7f91 = call i32 @_ZN7CScriptlsE10opcodetype(i32 %v1_7f91, i32 %v2_7f91)
  store i32 %v0_7ddc, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_7fa2

bb:                                               ; preds = %dec_label_pc_7f64
  %v1_7fa0 = call i32 @function_7fa7()
  store i32 %v1_7fa0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7fa2

dec_label_pc_7fa2:                                ; preds = %bb, %dec_label_pc_7f64
  ret void

; uselistorder directives
  uselistorder i8 %v3_7f27, { 1, 0 }
  uselistorder i8 %v3_7f0c, { 1, 0 }
  uselistorder i32 %v3_7ee1, { 1, 0 }
  uselistorder %CScript* %v3_7f1f, { 0, 2, 1 }
  uselistorder i32 %v2_7e80, { 1, 0, 2, 3, 5, 4, 6 }
  uselistorder i32 %v2_7e42, { 1, 0, 5, 4, 3, 2, 8, 7, 6, 9, 10 }
  uselistorder i32 %v2_7e0c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v4_7de7, { 3, 2, 1, 0, 5, 4, 6 }
  uselistorder i32* %stack_var_-100, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder %CScript** %stack_var_-104, { 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %stack_var_-17, { 0, 5, 2, 1, 3, 4, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 11, 12, 13, 14, 15, 16, 6, 17, 18, 19, 3, 4, 5, 7, 2, 1, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 174, { 2, 0, 1, 3 }
  uselistorder i32 (i32)* @_ZNK5boost15foreach_detail_13auto_any_basecvbEv, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZN7CScriptlsE10opcodetype, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN7CScript10EncodeOP_NEi, { 1, 0 }
  uselistorder i32 %keys, { 1, 0, 2, 3 }
  uselistorder %CScript* %this, { 0, 2, 1 }
  uselistorder label %dec_label_pc_7f5c, { 1, 0 }
  uselistorder label %dec_label_pc_7f0c, { 1, 0, 2 }
}

define i32 @function_7fa7() local_unnamed_addr {
dec_label_pc_7fa7:
  %v0_7fa8 = load i32, i32* @eax, align 4
  ret i32 %v0_7fa8
}

define void @_ZNK17CScriptCompressor9IsToKeyIDER6CKeyID(i32 %this, i32 %hash) local_unnamed_addr {
dec_label_pc_7faa:
  %v1_7fca = inttoptr i32 %this to i32*
  %v2_7fca = load i32, i32* %v1_7fca, align 4
  %v1_7fcf = inttoptr i32 %v2_7fca to i32*
  %v2_7fcf = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_7fcf)
  %v10_7fd4 = icmp eq i32 %v2_7fcf, 25
  %v1_7fd7 = icmp eq i1 %v10_7fd4, false
  br i1 %v1_7fd7, label %dec_label_pc_8070, label %dec_label_pc_7fdd

dec_label_pc_7fdd:                                ; preds = %dec_label_pc_7faa
  %v2_7fe0 = load i32, i32* %v1_7fca, align 4
  %v2_7fed = inttoptr i32 %v2_7fe0 to i32*
  %v3_7fed = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_7fed, i32 0)
  %v1_7ff2 = inttoptr i32 %v3_7fed to i8*
  %v2_7ff2 = load i8, i8* %v1_7ff2, align 1
  %v11_7ff5 = icmp eq i8 %v2_7ff2, 118
  %v1_7ff7 = icmp eq i1 %v11_7ff5, false
  br i1 %v1_7ff7, label %dec_label_pc_8070, label %dec_label_pc_7ff9

dec_label_pc_7ff9:                                ; preds = %dec_label_pc_7fdd
  %v2_7ffc = load i32, i32* %v1_7fca, align 4
  %v2_8009 = inttoptr i32 %v2_7ffc to i32*
  %v3_8009 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8009, i32 1)
  %v1_800e = inttoptr i32 %v3_8009 to i8*
  %v2_800e = load i8, i8* %v1_800e, align 1
  %v11_8011 = icmp eq i8 %v2_800e, -87
  %v1_8013 = icmp eq i1 %v11_8011, false
  br i1 %v1_8013, label %dec_label_pc_8070, label %dec_label_pc_8015

dec_label_pc_8015:                                ; preds = %dec_label_pc_7ff9
  %v2_8018 = load i32, i32* %v1_7fca, align 4
  %v2_8025 = inttoptr i32 %v2_8018 to i32*
  %v3_8025 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8025, i32 2)
  %v1_802a = inttoptr i32 %v3_8025 to i8*
  %v2_802a = load i8, i8* %v1_802a, align 1
  %v11_802d = icmp eq i8 %v2_802a, 20
  %v1_802f = icmp eq i1 %v11_802d, false
  br i1 %v1_802f, label %dec_label_pc_8070, label %dec_label_pc_8031

dec_label_pc_8031:                                ; preds = %dec_label_pc_8015
  %v2_8034 = load i32, i32* %v1_7fca, align 4
  %v2_8041 = inttoptr i32 %v2_8034 to i32*
  %v3_8041 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8041, i32 23)
  %v1_8046 = inttoptr i32 %v3_8041 to i8*
  %v2_8046 = load i8, i8* %v1_8046, align 1
  %v11_8049 = icmp eq i8 %v2_8046, -120
  %v1_804b = icmp eq i1 %v11_8049, false
  br i1 %v1_804b, label %dec_label_pc_8070, label %dec_label_pc_804d

dec_label_pc_804d:                                ; preds = %dec_label_pc_8031
  %v2_8050 = load i32, i32* %v1_7fca, align 4
  %v2_805d = inttoptr i32 %v2_8050 to i32*
  %v3_805d = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_805d, i32 24)
  %v1_8062 = inttoptr i32 %v3_805d to i8*
  %v2_8062 = load i8, i8* %v1_8062, align 1
  %v11_8065 = icmp eq i8 %v2_8062, -84
  %v1_8067 = icmp eq i1 %v11_8065, false
  br i1 %v1_8067, label %dec_label_pc_8070, label %dec_label_pc_8075

dec_label_pc_8070:                                ; preds = %dec_label_pc_804d, %dec_label_pc_8031, %dec_label_pc_8015, %dec_label_pc_7ff9, %dec_label_pc_7fdd, %dec_label_pc_7faa
  br label %dec_label_pc_8075

dec_label_pc_8075:                                ; preds = %dec_label_pc_804d, %dec_label_pc_8070
  %storemerge = phi i1 [ true, %dec_label_pc_8070 ], [ false, %dec_label_pc_804d ]
  br i1 %storemerge, label %bb, label %dec_label_pc_8079

bb:                                               ; preds = %dec_label_pc_8075
  %v1_8077 = call i32 @function_80ac()
  br label %dec_label_pc_8079

dec_label_pc_8079:                                ; preds = %bb, %dec_label_pc_8075
  %v2_807c = load i32, i32* %v1_7fca, align 4
  %v2_8089 = inttoptr i32 %v2_807c to i32*
  %v3_8089 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8089, i32 3)
  ret void

; uselistorder directives
  uselistorder i32* %v1_7fca, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_8075, { 1, 0 }
}

define i32 @function_80a5() local_unnamed_addr {
dec_label_pc_80a5:
  ret i32 1
}

define i32 @function_80ac() local_unnamed_addr {
dec_label_pc_80ac:
  store i32 0, i32* @eax, align 4
  %v0_80b1 = load i32, i32* @ebp, align 4
  %v1_80b1 = add i32 %v0_80b1, -12
  %v2_80b1 = inttoptr i32 %v1_80b1 to i32*
  %v3_80b1 = load i32, i32* %v2_80b1, align 4
  %v1_80b4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_80b4 = icmp eq i32 %v1_80b4, %v3_80b1
  br i1 %v3_80b4, label %bb, label %dec_label_pc_80bd

bb:                                               ; preds = %dec_label_pc_80ac
  %v1_80bb = call i32 @function_80c2()
  br label %dec_label_pc_80bd

dec_label_pc_80bd:                                ; preds = %bb, %dec_label_pc_80ac
  %v2_80bb = phi i32 [ %v1_80bb, %bb ], [ 0, %dec_label_pc_80ac ]
  ret i32 %v2_80bb
}

define i32 @function_80c2() local_unnamed_addr {
dec_label_pc_80c2:
  %v0_80c3 = load i32, i32* @eax, align 4
  ret i32 %v0_80c3
}

define void @_ZNK17CScriptCompressor12IsToScriptIDER9CScriptID(i32 %this, %CScriptID %hash) local_unnamed_addr {
dec_label_pc_80c4:
  %v1_80e4 = inttoptr i32 %this to i32*
  %v2_80e4 = load i32, i32* %v1_80e4, align 4
  %v1_80e9 = inttoptr i32 %v2_80e4 to i32*
  %v2_80e9 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_80e9)
  %v10_80ee = icmp eq i32 %v2_80e9, 23
  %v1_80f1 = icmp eq i1 %v10_80ee, false
  br i1 %v1_80f1, label %dec_label_pc_814e, label %dec_label_pc_80f3

dec_label_pc_80f3:                                ; preds = %dec_label_pc_80c4
  %v2_80f6 = load i32, i32* %v1_80e4, align 4
  %v3_8103 = inttoptr i32 %v2_80f6 to i32*
  %v4_8103 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v3_8103, i32 0)
  %v1_8108 = inttoptr i32 %v4_8103 to i8*
  %v2_8108 = load i8, i8* %v1_8108, align 1
  %v11_810b = icmp eq i8 %v2_8108, -87
  %v1_810d = icmp eq i1 %v11_810b, false
  br i1 %v1_810d, label %dec_label_pc_814e, label %dec_label_pc_810f

dec_label_pc_810f:                                ; preds = %dec_label_pc_80f3
  %v2_8112 = load i32, i32* %v1_80e4, align 4
  %v3_811f = inttoptr i32 %v2_8112 to i32*
  %v4_811f = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v3_811f, i32 1)
  %v1_8124 = inttoptr i32 %v4_811f to i8*
  %v2_8124 = load i8, i8* %v1_8124, align 1
  %v11_8127 = icmp eq i8 %v2_8124, 20
  %v1_8129 = icmp eq i1 %v11_8127, false
  br i1 %v1_8129, label %dec_label_pc_814e, label %dec_label_pc_812b

dec_label_pc_812b:                                ; preds = %dec_label_pc_810f
  %v2_812e = load i32, i32* %v1_80e4, align 4
  %v3_813b = inttoptr i32 %v2_812e to i32*
  %v4_813b = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v3_813b, i32 ptrtoint (i8** @global_var_16.2213 to i32))
  %v1_8140 = inttoptr i32 %v4_813b to i8*
  %v2_8140 = load i8, i8* %v1_8140, align 1
  %v11_8143 = icmp eq i8 %v2_8140, -121
  %v1_8145 = icmp eq i1 %v11_8143, false
  br i1 %v1_8145, label %dec_label_pc_814e, label %dec_label_pc_8153

dec_label_pc_814e:                                ; preds = %dec_label_pc_812b, %dec_label_pc_810f, %dec_label_pc_80f3, %dec_label_pc_80c4
  br label %dec_label_pc_8153

dec_label_pc_8153:                                ; preds = %dec_label_pc_812b, %dec_label_pc_814e
  %storemerge = phi i1 [ true, %dec_label_pc_814e ], [ false, %dec_label_pc_812b ]
  br i1 %storemerge, label %bb, label %dec_label_pc_8157

bb:                                               ; preds = %dec_label_pc_8153
  %v1_8155 = call i32 @function_818a()
  br label %dec_label_pc_8157

dec_label_pc_8157:                                ; preds = %bb, %dec_label_pc_8153
  %v2_815a = load i32, i32* %v1_80e4, align 4
  %v3_8167 = inttoptr i32 %v2_815a to i32*
  %v4_8167 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v3_8167, i32 2)
  ret void

; uselistorder directives
  uselistorder i32* %v1_80e4, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_8153, { 1, 0 }
}

define i32 @function_8183() local_unnamed_addr {
dec_label_pc_8183:
  ret i32 1
}

define i32 @function_818a() local_unnamed_addr {
dec_label_pc_818a:
  store i32 0, i32* @eax, align 4
  %v0_818f = load i32, i32* @ebp, align 4
  %v1_818f = add i32 %v0_818f, -12
  %v2_818f = inttoptr i32 %v1_818f to i32*
  %v3_818f = load i32, i32* %v2_818f, align 4
  %v1_8192 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8192 = icmp eq i32 %v1_8192, %v3_818f
  br i1 %v3_8192, label %bb, label %dec_label_pc_819b

bb:                                               ; preds = %dec_label_pc_818a
  %v1_8199 = call i32 @function_81a0()
  br label %dec_label_pc_819b

dec_label_pc_819b:                                ; preds = %bb, %dec_label_pc_818a
  %v2_8199 = phi i32 [ %v1_8199, %bb ], [ 0, %dec_label_pc_818a ]
  ret i32 %v2_8199
}

define i32 @function_81a0() local_unnamed_addr {
dec_label_pc_81a0:
  %v0_81a1 = load i32, i32* @eax, align 4
  ret i32 %v0_81a1
}

define void @_ZNK17CScriptCompressor10IsToPubKeyER7CPubKey(i32 %this, i32 %pubkey) local_unnamed_addr {
dec_label_pc_81a2:
  %v1_81c3 = inttoptr i32 %this to i32*
  %v2_81c3 = load i32, i32* %v1_81c3, align 4
  %v1_81c8 = inttoptr i32 %v2_81c3 to i32*
  %v2_81c8 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_81c8)
  %v10_81cd = icmp eq i32 %v2_81c8, 35
  %v1_81d0 = icmp eq i1 %v10_81cd, false
  br i1 %v1_81d0, label %dec_label_pc_8249, label %dec_label_pc_81d2

dec_label_pc_81d2:                                ; preds = %dec_label_pc_81a2
  %v2_81d5 = load i32, i32* %v1_81c3, align 4
  %v2_81e2 = inttoptr i32 %v2_81d5 to i32*
  %v3_81e2 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_81e2, i32 0)
  %v1_81e7 = inttoptr i32 %v3_81e2 to i8*
  %v2_81e7 = load i8, i8* %v1_81e7, align 1
  %v11_81ea = icmp eq i8 %v2_81e7, 33
  %v1_81ec = icmp eq i1 %v11_81ea, false
  br i1 %v1_81ec, label %dec_label_pc_8249, label %dec_label_pc_81ee

dec_label_pc_81ee:                                ; preds = %dec_label_pc_81d2
  %v2_81f1 = load i32, i32* %v1_81c3, align 4
  %v2_81fe = inttoptr i32 %v2_81f1 to i32*
  %v3_81fe = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_81fe, i32 ptrtoint (i32* @global_var_22.2230 to i32))
  %v1_8203 = inttoptr i32 %v3_81fe to i8*
  %v2_8203 = load i8, i8* %v1_8203, align 1
  %v11_8206 = icmp eq i8 %v2_8203, -84
  %v1_8208 = icmp eq i1 %v11_8206, false
  br i1 %v1_8208, label %dec_label_pc_8249, label %dec_label_pc_820a

dec_label_pc_820a:                                ; preds = %dec_label_pc_81ee
  %v2_820d = load i32, i32* %v1_81c3, align 4
  %v2_821a = inttoptr i32 %v2_820d to i32*
  %v3_821a = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_821a, i32 1)
  %v1_821f = inttoptr i32 %v3_821a to i8*
  %v2_821f = load i8, i8* %v1_821f, align 1
  %v11_8222 = icmp eq i8 %v2_821f, 2
  br i1 %v11_8222, label %dec_label_pc_824e, label %dec_label_pc_8226

dec_label_pc_8226:                                ; preds = %dec_label_pc_820a
  %v2_8229 = load i32, i32* %v1_81c3, align 4
  %v2_8236 = inttoptr i32 %v2_8229 to i32*
  %v3_8236 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8236, i32 1)
  %v1_823b = inttoptr i32 %v3_8236 to i8*
  %v2_823b = load i8, i8* %v1_823b, align 1
  %v11_823e = icmp eq i8 %v2_823b, 3
  %v1_8240 = icmp eq i1 %v11_823e, false
  br i1 %v1_8240, label %dec_label_pc_8249, label %dec_label_pc_824e

dec_label_pc_8249:                                ; preds = %dec_label_pc_8226, %dec_label_pc_81ee, %dec_label_pc_81d2, %dec_label_pc_81a2
  br label %dec_label_pc_824e

dec_label_pc_824e:                                ; preds = %dec_label_pc_820a, %dec_label_pc_8226, %dec_label_pc_8249
  %storemerge3 = phi i1 [ true, %dec_label_pc_8249 ], [ false, %dec_label_pc_8226 ], [ false, %dec_label_pc_820a ]
  %v2_829e = load i32, i32* %v1_81c3, align 4
  %v1_82a3 = inttoptr i32 %v2_829e to i32*
  br i1 %storemerge3, label %dec_label_pc_829b, label %dec_label_pc_8252

dec_label_pc_8252:                                ; preds = %dec_label_pc_824e
  %v3_8262 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v1_82a3, i32 ptrtoint (i32* @global_var_22.2230 to i32))
  %v2_826c = load i32, i32* %v1_81c3, align 4
  %v2_8279 = inttoptr i32 %v2_826c to i32*
  %v3_8279 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8279, i32 1)
  %v3_828c = inttoptr i32 %v3_8279 to i8*
  %v4_828c = call i32 @_ZN7CPubKey3SetIPhEEvT_S2_(i32 %pubkey, i8* %v3_828c, i32 %v3_8262)
  store i32 1, i32* @eax, align 4
  %v0_8296 = call i32 @function_8362()
  ret void

dec_label_pc_829b:                                ; preds = %dec_label_pc_824e
  %v2_82a3 = call i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %v1_82a3)
  %v10_82a8 = icmp eq i32 %v2_82a3, 67
  %v1_82ab = icmp eq i1 %v10_82a8, false
  br i1 %v1_82ab, label %dec_label_pc_8308, label %dec_label_pc_82ad

dec_label_pc_82ad:                                ; preds = %dec_label_pc_829b
  %v2_82b0 = load i32, i32* %v1_81c3, align 4
  %v2_82bd = inttoptr i32 %v2_82b0 to i32*
  %v3_82bd = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_82bd, i32 0)
  %v1_82c2 = inttoptr i32 %v3_82bd to i8*
  %v2_82c2 = load i8, i8* %v1_82c2, align 1
  %v11_82c5 = icmp eq i8 %v2_82c2, 65
  %v1_82c7 = icmp eq i1 %v11_82c5, false
  br i1 %v1_82c7, label %dec_label_pc_8308, label %dec_label_pc_82c9

dec_label_pc_82c9:                                ; preds = %dec_label_pc_82ad
  %v2_82cc = load i32, i32* %v1_81c3, align 4
  %v2_82d9 = inttoptr i32 %v2_82cc to i32*
  %v3_82d9 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_82d9, i32 66)
  %v1_82de = inttoptr i32 %v3_82d9 to i8*
  %v2_82de = load i8, i8* %v1_82de, align 1
  %v11_82e1 = icmp eq i8 %v2_82de, -84
  %v1_82e3 = icmp eq i1 %v11_82e1, false
  br i1 %v1_82e3, label %dec_label_pc_8308, label %dec_label_pc_82e5

dec_label_pc_82e5:                                ; preds = %dec_label_pc_82c9
  %v2_82e8 = load i32, i32* %v1_81c3, align 4
  %v2_82f5 = inttoptr i32 %v2_82e8 to i32*
  %v3_82f5 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_82f5, i32 1)
  %v1_82fa = inttoptr i32 %v3_82f5 to i8*
  %v2_82fa = load i8, i8* %v1_82fa, align 1
  %v11_82fd = icmp eq i8 %v2_82fa, 4
  %v1_82ff = icmp eq i1 %v11_82fd, false
  br i1 %v1_82ff, label %dec_label_pc_8308, label %dec_label_pc_830d

dec_label_pc_8308:                                ; preds = %dec_label_pc_82e5, %dec_label_pc_82c9, %dec_label_pc_82ad, %dec_label_pc_829b
  br label %dec_label_pc_830d

dec_label_pc_830d:                                ; preds = %dec_label_pc_82e5, %dec_label_pc_8308
  %storemerge = phi i1 [ true, %dec_label_pc_8308 ], [ false, %dec_label_pc_82e5 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_8311

bb:                                               ; preds = %dec_label_pc_830d
  %v1_830f = call i32 @function_835d()
  br label %dec_label_pc_8311

dec_label_pc_8311:                                ; preds = %bb, %dec_label_pc_830d
  %v2_8314 = load i32, i32* %v1_81c3, align 4
  %v2_8321 = inttoptr i32 %v2_8314 to i32*
  %v3_8321 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8321, i32 66)
  %v2_832b = load i32, i32* %v1_81c3, align 4
  %v2_8338 = inttoptr i32 %v2_832b to i32*
  %v3_8338 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8338, i32 1)
  %v3_834b = inttoptr i32 %v3_8338 to i8*
  %v4_834b = call i32 @_ZN7CPubKey3SetIPhEEvT_S2_(i32 %pubkey, i8* %v3_834b, i32 %v3_8321)
  ret void

; uselistorder directives
  uselistorder i32* %v1_82a3, { 1, 0 }
  uselistorder i32* %v1_81c3, { 8, 9, 5, 6, 7, 4, 10, 0, 1, 2, 3, 11 }
  uselistorder i32 (i32*)* @_ZNKSt6vectorIhSaIhEE4sizeEv, { 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 0, 1, 2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25 }
  uselistorder i32 %pubkey, { 1, 0 }
  uselistorder label %dec_label_pc_830d, { 1, 0 }
  uselistorder label %dec_label_pc_824e, { 2, 1, 0 }
}

define i32 @function_835b() local_unnamed_addr {
dec_label_pc_835b:
  %v0_835b = call i32 @function_8362()
  ret i32 %v0_835b

; uselistorder directives
  uselistorder i32 ()* @function_8362, { 1, 0 }
}

define i32 @function_835d() local_unnamed_addr {
dec_label_pc_835d:
  ret i32 0
}

define i32 @function_8362() local_unnamed_addr {
dec_label_pc_8362:
  %v0_8362 = load i32, i32* @ebp, align 4
  %v1_8362 = add i32 %v0_8362, -12
  %v2_8362 = inttoptr i32 %v1_8362 to i32*
  %v3_8362 = load i32, i32* %v2_8362, align 4
  %v1_8365 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8365 = icmp eq i32 %v1_8365, %v3_8362
  br i1 %v3_8365, label %bb, label %dec_label_pc_8362.dec_label_pc_836e_crit_edge

dec_label_pc_8362.dec_label_pc_836e_crit_edge:    ; preds = %dec_label_pc_8362
  %v2_836c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_836e

bb:                                               ; preds = %dec_label_pc_8362
  %v1_836c = call i32 @function_8373()
  br label %dec_label_pc_836e

dec_label_pc_836e:                                ; preds = %dec_label_pc_8362.dec_label_pc_836e_crit_edge, %bb
  %v2_836c = phi i32 [ %v2_836c.pre, %dec_label_pc_8362.dec_label_pc_836e_crit_edge ], [ %v1_836c, %bb ]
  ret i32 %v2_836c

; uselistorder directives
  uselistorder label %dec_label_pc_836e, { 1, 0 }
}

define i32 @function_8373() local_unnamed_addr {
dec_label_pc_8373:
  %v0_8378 = load i32, i32* @eax, align 4
  ret i32 %v0_8378
}

define void @_ZNK17CScriptCompressor8CompressERSt6vectorIhSaIhEE(i32 %this, %"vector<unsignedchar,std::allocator<unsignedchar>>" %out) local_unnamed_addr {
dec_label_pc_837a:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %out, 0
  %stack_var_-121 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %scriptID_-40 = alloca %CScriptID, align 8
  %stack_var_-56 = alloca i32, align 4
  %v2_839b = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_839b, i32* %eax.global-to-local, align 4
  %v1_83a1 = call i32 @_ZN6CKeyIDC1Ev(i32 %v2_839b)
  store i32 %this, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v2_839b, 16777216
  %v2_83b3 = sdiv i32 %sext, 16777216
  call void @_ZNK17CScriptCompressor9IsToKeyIDER6CKeyID(i32 %this, i32 %v2_83b3)
  store i32 ptrtoint (i32* @9 to i32), i32* %eax.global-to-local, align 4
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @9 to i8), i8 ptrtoint (i32* @9 to i8)), i8 0), label %dec_label_pc_8429, label %dec_label_pc_83bc

dec_label_pc_83bc:                                ; preds = %dec_label_pc_837a
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v4_83d2 = inttoptr i32 %tmp99 to i32*
  %v5_83d2 = call i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %v4_83d2, i32 sext (i8 ptrtoint (i8* @global_var_15.2231 to i8) to i32), i32 0)
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v4_83e5 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v4_83d2, i32 0)
  %v1_83ea = inttoptr i32 %v4_83e5 to i8*
  store i8 0, i8* %v1_83ea, align 1
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v4_83fb = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v4_83d2, i32 1)
  store i32 %v4_83fb, i32* %eax.global-to-local, align 4
  %v2_8403 = load i32, i32* %stack_var_-56, align 4
  %v2_8405 = inttoptr i32 %v4_83fb to i32*
  store i32 %v2_8403, i32* %v2_8405, align 4
  %v1_840a = load i32, i32* %eax.global-to-local, align 4
  %v2_840a = add i32 %v1_840a, 4
  %v3_840a = inttoptr i32 %v2_840a to i32*
  %v1_8410 = load i32, i32* %eax.global-to-local, align 4
  %v2_8410 = add i32 %v1_8410, 8
  %v3_8410 = inttoptr i32 %v2_8410 to i32*
  %v1_8416 = load i32, i32* %eax.global-to-local, align 4
  %v2_8416 = add i32 %v1_8416, 12
  %v3_8416 = inttoptr i32 %v2_8416 to i32*
  %v4_8419 = getelementptr inbounds %CScriptID, %CScriptID* %scriptID_-40, i32 0, i32 0
  %v5_8419 = load i32, i32* %v4_8419, align 8
  %v1_841c = load i32, i32* %eax.global-to-local, align 4
  %v2_841c = add i32 %v1_841c, 16
  %v3_841c = inttoptr i32 %v2_841c to i32*
  store i32 %v5_8419, i32* %v3_841c, align 4
  store i32 1, i32* @eax, align 4
  %v0_8424 = call i32 @function_8609()
  store i32 %v0_8424, i32* %eax.global-to-local, align 4
  ret void

dec_label_pc_8429:                                ; preds = %dec_label_pc_837a
  %v2_8429 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8429, i32* %eax.global-to-local, align 4
  %v1_842f = call i32 @_ZN9CScriptIDC1Ev(i32 %v2_8429)
  store i32 %this, i32* %eax.global-to-local, align 4
  %sext2 = mul i32 %v2_8429, 16777216
  %v2_8441 = sdiv i32 %sext2, 16777216
  %v3_8441 = insertvalue %CScriptID undef, i32 %v2_8441, 0
  call void @_ZNK17CScriptCompressor12IsToScriptIDER9CScriptID(i32 %this, %CScriptID %v3_8441)
  %v2_84b7 = ptrtoint i32* %stack_var_-121 to i32
  store i32 %v2_84b7, i32* %eax.global-to-local, align 4
  %v1_84bd = call i32 @_ZN7CPubKeyC1Ev(i32 %v2_84b7)
  store i32 %this, i32* %eax.global-to-local, align 4
  %sext3 = mul i32 %v2_84b7, 16777216
  %v2_84cf = sdiv i32 %sext3, 16777216
  call void @_ZNK17CScriptCompressor10IsToPubKeyER7CPubKey(i32 %this, i32 %v2_84cf)
  store i32 ptrtoint (i32* @9 to i32), i32* %eax.global-to-local, align 4
  %v1_84d6 = call i32 @function_8604()
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v4_84f2 = inttoptr i32 %tmp99 to i32*
  %v5_84f2 = call i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %v4_84f2, i32 33, i32 0)
  store i32 %v2_84b7, i32* %eax.global-to-local, align 4
  %v3_8505 = call i32 @_ZNK7CPubKeyixEj(i32 %v2_84b7, i32 1)
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v4_851a = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v4_84f2, i32 1)
  store i32 %v4_851a, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %v2_84b7, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp99, { 4, 6, 5, 0, 3, 2, 1 }
  uselistorder i32 %this, { 1, 0, 3, 2, 5, 4 }
}

define i32 @function_8532() local_unnamed_addr {
dec_label_pc_8532:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %v0_8535 = load i32, i32* %eax.global-to-local, align 4
  %v1_8535 = trunc i32 %v0_8535 to i8
  %v2_8535 = and i8 %v1_8535, 4
  %v8_8535 = zext i8 %v2_8535 to i32
  %v10_8535 = and i32 %v0_8535, -256
  %v11_8535 = or i32 %v8_8535, %v10_8535
  store i32 %v11_8535, i32* %eax.global-to-local, align 4
  %v1_8537 = inttoptr i32 %v11_8535 to i8*
  %v2_8537 = load i8, i8* %v1_8537, align 4
  %v5_8537 = add i8 %v2_8537, %v2_8535
  store i8 %v5_8537, i8* %v1_8537, align 4
  %v0_8539 = load i32, i32* %eax.global-to-local, align 4
  %v1_8539 = inttoptr i32 %v0_8539 to i8*
  %v2_8539 = load i8, i8* %v1_8539, align 1
  %v4_8539 = trunc i32 %v0_8539 to i8
  %v5_8539 = add i8 %v2_8539, %v4_8539
  store i8 %v5_8539, i8* %v1_8539, align 1
  %v0_853b = load i32, i32* @ebp, align 4
  %v1_853b = add i32 %v0_853b, -117
  store i32 %v1_853b, i32* %eax.global-to-local, align 4
  %v2_8541 = call i32 @_ZNK7CPubKeyixEj(i32 %v1_853b, i32 %tmp98)
  store i32 %v2_8541, i32* %eax.global-to-local, align 4
  %v1_8546 = inttoptr i32 %v2_8541 to i8*
  %v2_8546 = load i8, i8* %v1_8546, align 1
  %v3_8546 = zext i8 %v2_8546 to i32
  store i32 %v3_8546, i32* %eax.global-to-local, align 4
  %v11_8549 = icmp eq i8 %v2_8546, 2
  br i1 %v11_8549, label %dec_label_pc_8573, label %dec_label_pc_854d

dec_label_pc_854d:                                ; preds = %dec_label_pc_8532
  %v0_8555 = load i32, i32* @ebp, align 4
  %v1_8555 = add i32 %v0_8555, -117
  store i32 %v1_8555, i32* %eax.global-to-local, align 4
  %v2_855b = call i32 @_ZNK7CPubKeyixEj(i32 %v1_8555, i32 0)
  store i32 %v2_855b, i32* %eax.global-to-local, align 4
  %v1_8560 = inttoptr i32 %v2_855b to i8*
  %v2_8560 = load i8, i8* %v1_8560, align 1
  %v3_8560 = zext i8 %v2_8560 to i32
  store i32 %v3_8560, i32* %eax.global-to-local, align 4
  %v11_8563 = icmp eq i8 %v2_8560, 3
  %. = zext i1 %v11_8563 to i32
  br label %dec_label_pc_8573

dec_label_pc_8573:                                ; preds = %dec_label_pc_854d, %dec_label_pc_8532
  %storemerge = phi i32 [ 1, %dec_label_pc_8532 ], [ %., %dec_label_pc_854d ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_8573 = icmp eq i32 %storemerge, 0
  %v0_85b3 = load i32, i32* @ebp, align 4
  br i1 %v5_8573, label %dec_label_pc_85ab, label %dec_label_pc_8577

dec_label_pc_8577:                                ; preds = %dec_label_pc_8573
  %v1_857f = add i32 %v0_85b3, -128
  %v2_857f = inttoptr i32 %v1_857f to i32*
  %v3_857f = load i32, i32* %v2_857f, align 4
  store i32 %v3_857f, i32* %eax.global-to-local, align 4
  %v2_8585 = inttoptr i32 %v3_857f to i32*
  %v3_8585 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8585, i32 0)
  store i32 %v3_8585, i32* %ebx.global-to-local, align 4
  %v0_8594 = load i32, i32* @ebp, align 4
  %v1_8594 = add i32 %v0_8594, -117
  store i32 %v1_8594, i32* %eax.global-to-local, align 4
  %v2_859a = call i32 @_ZNK7CPubKeyixEj(i32 %v1_8594, i32 0)
  store i32 %v2_859a, i32* %eax.global-to-local, align 4
  %v1_859f = inttoptr i32 %v2_859a to i8*
  %v2_859f = load i8, i8* %v1_859f, align 1
  %v2_85a2 = load i32, i32* %ebx.global-to-local, align 4
  %v3_85a2 = inttoptr i32 %v2_85a2 to i8*
  store i8 %v2_859f, i8* %v3_85a2, align 1
  store i32 1, i32* @eax, align 4
  %v0_85a9 = call i32 @function_8609()
  store i32 %v0_85a9, i32* %eax.global-to-local, align 4
  ret i32 %v0_85a9

dec_label_pc_85ab:                                ; preds = %dec_label_pc_8573
  %v1_85b3 = add i32 %v0_85b3, -117
  store i32 %v1_85b3, i32* %eax.global-to-local, align 4
  %v2_85b9 = call i32 @_ZNK7CPubKeyixEj(i32 %v1_85b3, i32 0)
  store i32 %v2_85b9, i32* %eax.global-to-local, align 4
  %v1_85be = inttoptr i32 %v2_85b9 to i8*
  %v2_85be = load i8, i8* %v1_85be, align 1
  %v11_85c1 = icmp eq i8 %v2_85be, 4
  %v1_85c3 = zext i1 %v11_85c1 to i32
  store i32 %v1_85c3, i32* %eax.global-to-local, align 4
  %v5_85c6 = icmp eq i1 %v11_85c1, false
  br i1 %v5_85c6, label %bb, label %dec_label_pc_85ca

bb:                                               ; preds = %dec_label_pc_85ab
  %v1_85c8 = call i32 @function_8604()
  store i32 %v1_85c8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_85ca

dec_label_pc_85ca:                                ; preds = %bb, %dec_label_pc_85ab
  %v0_85d2 = load i32, i32* @ebp, align 4
  %v1_85d2 = add i32 %v0_85d2, -128
  %v2_85d2 = inttoptr i32 %v1_85d2 to i32*
  %v3_85d2 = load i32, i32* %v2_85d2, align 4
  store i32 %v3_85d2, i32* %eax.global-to-local, align 4
  %v2_85d8 = inttoptr i32 %v3_85d2 to i32*
  %v3_85d8 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_85d8, i32 0)
  store i32 %v3_85d8, i32* %ebx.global-to-local, align 4
  %v0_85e7 = load i32, i32* @ebp, align 4
  %v1_85e7 = add i32 %v0_85e7, -117
  store i32 %v1_85e7, i32* %eax.global-to-local, align 4
  %v2_85ed = call i32 @_ZNK7CPubKeyixEj(i32 %v1_85e7, i32 64)
  store i32 %v2_85ed, i32* %eax.global-to-local, align 4
  %v1_85f2 = inttoptr i32 %v2_85ed to i8*
  %v2_85f2 = load i8, i8* %v1_85f2, align 1
  %v1_85f5 = urem i8 %v2_85f2, 2
  %v1_85f8 = or i8 %v1_85f5, 4
  %v2_85fb = load i32, i32* %ebx.global-to-local, align 4
  %v3_85fb = inttoptr i32 %v2_85fb to i8*
  store i8 %v1_85f8, i8* %v3_85fb, align 1
  store i32 1, i32* @eax, align 4
  %v0_8602 = call i32 @function_8609()
  store i32 %v0_8602, i32* %eax.global-to-local, align 4
  ret i32 %v0_8602

; uselistorder directives
  uselistorder i32 %v0_85b3, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 0, 6, 7, 8, 9, 10, 11, 12, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32 ()* @function_8604, { 1, 0 }
  uselistorder i32 ()* @function_8609, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @_ZNK7CPubKeyixEj, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_8604() local_unnamed_addr {
dec_label_pc_8604:
  ret i32 0
}

define i32 @function_8609() local_unnamed_addr {
dec_label_pc_8609:
  %v0_8609 = load i32, i32* @ebp, align 4
  %v1_8609 = add i32 %v0_8609, -12
  %v2_8609 = inttoptr i32 %v1_8609 to i32*
  %v3_8609 = load i32, i32* %v2_8609, align 4
  %v1_860c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_860c = icmp eq i32 %v1_860c, %v3_8609
  br i1 %v3_860c, label %bb, label %dec_label_pc_8609.dec_label_pc_8615_crit_edge

dec_label_pc_8609.dec_label_pc_8615_crit_edge:    ; preds = %dec_label_pc_8609
  %v2_8613.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8615

bb:                                               ; preds = %dec_label_pc_8609
  %v1_8613 = call i32 @function_861a()
  br label %dec_label_pc_8615

dec_label_pc_8615:                                ; preds = %dec_label_pc_8609.dec_label_pc_8615_crit_edge, %bb
  %v2_8613 = phi i32 [ %v2_8613.pre, %dec_label_pc_8609.dec_label_pc_8615_crit_edge ], [ %v1_8613, %bb ]
  ret i32 %v2_8613

; uselistorder directives
  uselistorder label %dec_label_pc_8615, { 1, 0 }
}

define i32 @function_861a() local_unnamed_addr {
dec_label_pc_861a:
  %v0_8622 = load i32, i32* @eax, align 4
  ret i32 %v0_8622
}

define void @_ZNK17CScriptCompressor14GetSpecialSizeEj(i32 %this, i32 %nSize) local_unnamed_addr {
dec_label_pc_8624:
  %v10_8641 = icmp eq i32 %nSize, 0
  br i1 %v10_8641, label %dec_label_pc_864d, label %dec_label_pc_8647

dec_label_pc_8647:                                ; preds = %dec_label_pc_8624
  %v13_8647 = icmp eq i32 %nSize, 1
  %v1_864b = icmp eq i1 %v13_8647, false
  br i1 %v1_864b, label %dec_label_pc_8654, label %dec_label_pc_864d

dec_label_pc_864d:                                ; preds = %dec_label_pc_8647, %dec_label_pc_8624
  store i32 20, i32* @eax, align 4
  br label %dec_label_pc_8678

dec_label_pc_8654:                                ; preds = %dec_label_pc_8647
  %v13_8654 = icmp eq i32 %nSize, 2
  br i1 %v13_8654, label %dec_label_pc_866c, label %dec_label_pc_865a

dec_label_pc_865a:                                ; preds = %dec_label_pc_8654
  %v13_865a = icmp eq i32 %nSize, 3
  br i1 %v13_865a, label %dec_label_pc_866c, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_865a
  %v13_8660 = icmp eq i32 %nSize, 4
  br i1 %v13_8660, label %dec_label_pc_866c, label %dec_label_pc_8666

dec_label_pc_8666:                                ; preds = %dec_label_pc_8660
  %v13_8666 = icmp eq i32 %nSize, 5
  %v1_866a = icmp eq i1 %v13_8666, false
  br i1 %v1_866a, label %dec_label_pc_8673, label %dec_label_pc_866c

dec_label_pc_866c:                                ; preds = %dec_label_pc_8666, %dec_label_pc_8660, %dec_label_pc_865a, %dec_label_pc_8654
  store i32 32, i32* @eax, align 4
  br label %dec_label_pc_8678

dec_label_pc_8673:                                ; preds = %dec_label_pc_8666
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8673, %dec_label_pc_866c, %dec_label_pc_864d
  br i1 true, label %bb, label %dec_label_pc_8684

bb:                                               ; preds = %dec_label_pc_8678
  %v1_8682 = call i32 @function_8689()
  br label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %bb, %dec_label_pc_8678
  ret void
}

define i32 @function_8689() local_unnamed_addr {
dec_label_pc_8689:
  %v0_868a = load i32, i32* @eax, align 4
  ret i32 %v0_868a
}

define void @_ZN17CScriptCompressor10DecompressEjRKSt6vectorIhSaIhEE(i32 %this, i32 %nSize, %"vector<unsignedchar,std::allocator<unsignedchar>>" %in) local_unnamed_addr {
dec_label_pc_868c:
  %tmp111 = icmp ult i32 %nSize, 6
  br i1 %tmp111, label %dec_label_pc_86c1, label %bb

bb:                                               ; preds = %dec_label_pc_868c
  %tmp109 = extractvalue %"vector<unsignedchar,std::allocator<unsignedchar>>" %in, 0
  %v7_86bb = call i32 @function_8a99(i32 %tmp109, i32 %nSize, i32 %this)
  br label %dec_label_pc_86c1

dec_label_pc_86c1:                                ; preds = %dec_label_pc_868c, %bb
  ret void

; uselistorder directives
  uselistorder i32 %nSize, { 1, 0 }
  uselistorder label %dec_label_pc_86c1, { 1, 0 }
}

define i32 @function_874c() local_unnamed_addr {
dec_label_pc_874c:
  %eax.global-to-local = alloca i32, align 4
  %v0_874c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_874c
}

define i32 @function_8775() local_unnamed_addr {
dec_label_pc_8775:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8775 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8775 = add i32 %v0_8775, 9143365
  %v2_8775 = inttoptr i32 %v1_8775 to i32*
  %v3_8775 = load i32, i32* %v2_8775, align 4
  %v4_8775 = add i32 %v3_8775, -1
  store i32 %v4_8775, i32* %v2_8775, align 4
  %v0_8783 = load i32, i32* %eax.global-to-local, align 4
  %v2_8786 = inttoptr i32 %v0_8783 to i32*
  %v3_8786 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8786, i32 23)
  store i32 %v3_8786, i32* %eax.global-to-local, align 4
  %v1_878b = inttoptr i32 %v3_8786 to i8*
  store i8 ptrtoint (i8* @global_var_88.2212 to i8), i8* %v1_878b, align 1
  %v0_878e = load i32, i32* @ebp, align 4
  %v1_878e = add i32 %v0_878e, -124
  %v2_878e = inttoptr i32 %v1_878e to i32*
  %v3_878e = load i32, i32* %v2_878e, align 4
  store i32 %v3_878e, i32* %eax.global-to-local, align 4
  %v1_8791 = inttoptr i32 %v3_878e to i32*
  %v2_8791 = load i32, i32* %v1_8791, align 4
  store i32 %v2_8791, i32* %eax.global-to-local, align 4
  %v2_879e = inttoptr i32 %v2_8791 to i32*
  %v3_879e = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_879e, i32 24)
  %v1_87a3 = inttoptr i32 %v3_879e to i8*
  store i8 -84, i8* %v1_87a3, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 23, { 2, 0, 3, 1 }
}

define i32 @function_8800() local_unnamed_addr {
dec_label_pc_8800:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_8800 = load i32, i32* %eax.global-to-local, align 4
  %v1_8800 = trunc i32 %v0_8800 to i8
  %v1_8802 = inttoptr i32 %v0_8800 to i8*
  %v2_8802 = load i8, i8* %v1_8802, align 1
  %v5_8802 = add i8 %v2_8802, %v1_8800
  store i8 %v5_8802, i8* %v1_8802, align 1
  %v0_8804 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8804 = add i32 %v0_8804, -33659
  %v2_8804 = inttoptr i32 %v1_8804 to i8*
  %v3_8804 = load i8, i8* %v2_8804, align 1
  %v4_8804 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8804 = trunc i32 %v4_8804 to i8
  %v6_8804 = add i8 %v5_8804, %v3_8804
  store i8 %v6_8804, i8* %v2_8804, align 1
  %v0_880a = load i32, i32* %ecx.global-to-local, align 4
  %v1_880a = add i32 %v0_880a, -437771260
  %v2_880a = inttoptr i32 %v1_880a to i32*
  %v3_880a = load i32, i32* %v2_880a, align 4
  %v4_880a = add i32 %v3_880a, -1
  store i32 %v4_880a, i32* %v2_880a, align 4
  %v0_8814 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8814
}

define i32 @function_883d() local_unnamed_addr {
dec_label_pc_883d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_883d = load i32, i32* %ebx.global-to-local, align 4
  %v1_883d = add i32 %v0_883d, 9143365
  %v2_883d = inttoptr i32 %v1_883d to i32*
  %v3_883d = load i32, i32* %v2_883d, align 4
  %v4_883d = add i32 %v3_883d, -1
  store i32 %v4_883d, i32* %v2_883d, align 4
  %v0_884b = load i32, i32* %eax.global-to-local, align 4
  %v3_884e = inttoptr i32 %v0_884b to i32*
  %v4_884e = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v3_884e, i32 ptrtoint (i8** @global_var_16.2213 to i32))
  %v1_8853 = inttoptr i32 %v4_884e to i8*
  store i8 ptrtoint (i32* @global_var_87.2233 to i8), i8* %v1_8853, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  ret i32 1
}

define i32 @function_88b2() local_unnamed_addr {
dec_label_pc_88b2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_88b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_88b2 = trunc i32 %v0_88b2 to i8
  %v1_88b4 = inttoptr i32 %v0_88b2 to i8*
  %v2_88b4 = load i8, i8* %v1_88b4, align 1
  %v5_88b4 = add i8 %v2_88b4, %v1_88b2
  store i8 %v5_88b4, i8* %v1_88b4, align 1
  %v0_88b6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_88b6 = add i32 %v0_88b6, -33659
  %v2_88b6 = inttoptr i32 %v1_88b6 to i8*
  %v3_88b6 = load i8, i8* %v2_88b6, align 1
  %v4_88b6 = load i32, i32* %ecx.global-to-local, align 4
  %v5_88b6 = trunc i32 %v4_88b6 to i8
  %v6_88b6 = add i8 %v5_88b6, %v3_88b6
  store i8 %v6_88b6, i8* %v2_88b6, align 1
  %v0_88bc = load i32, i32* %ecx.global-to-local, align 4
  %v1_88bc = add i32 %v0_88bc, 870851588
  %v2_88bc = inttoptr i32 %v1_88bc to i32*
  %v3_88bc = load i32, i32* %v2_88bc, align 4
  %v4_88bc = add i32 %v3_88bc, -1
  store i32 %v4_88bc, i32* %v2_88bc, align 4
  %v0_88c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_88c6
}

define i32 @function_88ef() local_unnamed_addr {
dec_label_pc_88ef:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_88ef = load i32, i32* %ebx.global-to-local, align 4
  %v1_88ef = add i32 %v0_88ef, 9143365
  %v2_88ef = inttoptr i32 %v1_88ef to i32*
  %v3_88ef = load i32, i32* %v2_88ef, align 4
  %v4_88ef = add i32 %v3_88ef, -1
  store i32 %v4_88ef, i32* %v2_88ef, align 4
  %v0_88fd = load i32, i32* %eax.global-to-local, align 4
  %v2_8900 = inttoptr i32 %v0_88fd to i32*
  %v3_8900 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8900, i32 ptrtoint (i32* @global_var_22.2230 to i32))
  %v1_8905 = inttoptr i32 %v3_8900 to i8*
  store i8 -84, i8* %v1_8905, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  ret i32 1
}

define i32 @function_892b() local_unnamed_addr {
dec_label_pc_892b:
  %eax.global-to-local = alloca i32, align 4
  %v0_892b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_892b
}

define i32 @function_892e() local_unnamed_addr {
dec_label_pc_892e:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_8931 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8931 = add i32 %v0_8931, -914029855
  %v2_8931 = inttoptr i32 %v1_8931 to i32*
  %v3_8931 = load i32, i32* %v2_8931, align 4
  %v4_8931 = mul i32 %v3_8931, 2
  %tmp115 = icmp slt i32 %v3_8931, 0
  %v5_8931 = zext i1 %tmp115 to i32
  %v6_8931 = or i32 %v5_8931, %v4_8931
  store i32 %v6_8931, i32* %v2_8931, align 4
  %v0_8937 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8937, label %dec_label_pc_892e.dec_label_pc_8942_crit_edge, label %dec_label_pc_8939

dec_label_pc_892e.dec_label_pc_8942_crit_edge:    ; preds = %dec_label_pc_892e
  %v0_8942.pre = load i32, i32* %ebx.global-to-local, align 4
  %v0_8947.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8942

dec_label_pc_8939:                                ; preds = %dec_label_pc_892e
  %v0_8939 = load i32, i32* %eax.global-to-local, align 4
  %v1_8939 = trunc i32 %v0_8939 to i16
  %v2_8939 = load i32, i32* %edx.global-to-local, align 4
  %v3_8939 = inttoptr i32 %v2_8939 to i16*
  store i16 %v1_8939, i16* %v3_8939, align 2
  %v0_893c = load i32, i32* %edx.global-to-local, align 4
  %v1_893c = add i32 %v0_893c, 2
  store i32 %v1_893c, i32* %edx.global-to-local, align 4
  %v0_893f = load i32, i32* %ebx.global-to-local, align 4
  %v1_893f = add i32 %v0_893f, -2
  %v10_893f = icmp eq i32 %v1_893f, 0
  store i1 %v10_893f, i1* %zf.global-to-local, align 1
  store i32 %v1_893f, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8942

dec_label_pc_8942:                                ; preds = %dec_label_pc_892e.dec_label_pc_8942_crit_edge, %dec_label_pc_8939
  %v0_8947 = phi i32 [ %v0_8947.pre, %dec_label_pc_892e.dec_label_pc_8942_crit_edge ], [ %v1_893c, %dec_label_pc_8939 ]
  %v0_8942 = phi i32 [ %v0_8942.pre, %dec_label_pc_892e.dec_label_pc_8942_crit_edge ], [ %v1_893f, %dec_label_pc_8939 ]
  %v2_8944 = udiv i32 %v0_8942, 4
  %tmp116 = icmp ult i32 %v0_8942, 4
  store i1 %tmp116, i1* %zf.global-to-local, align 1
  %v1_8947 = inttoptr i32 %v0_8947 to i8*
  %v3_8949 = load i32, i32* %eax.global-to-local, align 4
  call void @__asm_rep_stosd_memset(i8* %v1_8947, i32 %v3_8949, i32 %v2_8944)
  %v5_8949 = load i1, i1* %df.global-to-local, align 1
  %v6_8949 = select i1 %v5_8949, i32 -4, i32 4
  %v7_8949 = mul i32 %v6_8949, %v2_8944
  %v8_8949 = add i32 %v7_8949, %v0_8947
  store i32 %v8_8949, i32* %edx.global-to-local, align 4
  %v0_894d = load i32, i32* %ebx.global-to-local, align 4
  %v1_894f = and i32 %v0_894d, 2
  %v2_894f = icmp eq i32 %v1_894f, 0
  store i1 %v2_894f, i1* %zf.global-to-local, align 1
  br i1 %v2_894f, label %dec_label_pc_895c, label %dec_label_pc_8956

dec_label_pc_8956:                                ; preds = %dec_label_pc_8942
  %v0_8956 = load i32, i32* %eax.global-to-local, align 4
  %v1_8956 = trunc i32 %v0_8956 to i16
  %v3_8956 = inttoptr i32 %v8_8949 to i16*
  store i16 %v1_8956, i16* %v3_8956, align 2
  %v0_8959 = load i32, i32* %edx.global-to-local, align 4
  %v1_8959 = add i32 %v0_8959, 2
  %v10_8959 = icmp eq i32 %v1_8959, 0
  store i1 %v10_8959, i1* %zf.global-to-local, align 1
  store i32 %v1_8959, i32* %edx.global-to-local, align 4
  %v0_895c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_895c

dec_label_pc_895c:                                ; preds = %dec_label_pc_8956, %dec_label_pc_8942
  %v2_8965 = phi i32 [ %v1_8959, %dec_label_pc_8956 ], [ %v8_8949, %dec_label_pc_8942 ]
  %v0_895c = phi i32 [ %v0_895c.pre, %dec_label_pc_8956 ], [ %v0_894d, %dec_label_pc_8942 ]
  %v1_895e = urem i32 %v0_895c, 2
  %v2_895e = icmp eq i32 %v1_895e, 0
  store i1 %v2_895e, i1* %zf.global-to-local, align 1
  br i1 %v2_895e, label %dec_label_pc_896a, label %dec_label_pc_8965

dec_label_pc_8965:                                ; preds = %dec_label_pc_895c
  %v0_8965 = load i32, i32* %eax.global-to-local, align 4
  %v1_8965 = trunc i32 %v0_8965 to i8
  %v3_8965 = inttoptr i32 %v2_8965 to i8*
  store i8 %v1_8965, i8* %v3_8965, align 1
  %v0_8967 = load i32, i32* %edx.global-to-local, align 4
  %v1_8967 = add i32 %v0_8967, 1
  %v10_8967 = icmp eq i32 %v1_8967, 0
  store i1 %v10_8967, i1* %zf.global-to-local, align 1
  store i32 %v1_8967, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_896a

dec_label_pc_896a:                                ; preds = %dec_label_pc_8965, %dec_label_pc_895c
  %v0_896a = load i32, i32* @ebp, align 4
  %v1_896a = add i32 %v0_896a, -128
  %v2_896a = inttoptr i32 %v1_896a to i32*
  %v3_896a = load i32, i32* %v2_896a, align 4
  %v1_896d = add i32 %v3_896a, -2
  %v10_896d = icmp eq i32 %v1_896d, 0
  store i1 %v10_896d, i1* %zf.global-to-local, align 1
  %v12_896d = trunc i32 %v1_896d to i8
  store i32 %v1_896d, i32* %eax.global-to-local, align 4
  %v3_8970 = add i32 %v0_896a, -45
  %v4_8970 = inttoptr i32 %v3_8970 to i8*
  store i8 %v12_896d, i8* %v4_8970, align 1
  %v0_897b = load i32, i32* @ebp, align 4
  %v1_897b = add i32 %v0_897b, -132
  %v2_897b = inttoptr i32 %v1_897b to i32*
  %v3_897b = load i32, i32* %v2_897b, align 4
  store i32 %v3_897b, i32* %eax.global-to-local, align 4
  %v2_8984 = inttoptr i32 %v3_897b to i32*
  %v3_8984 = call i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %v2_8984, i32 0)
  %v0_8995 = load i32, i32* @ebp, align 4
  %v1_8998 = add i32 %v0_8995, -44
  %v10_8998 = icmp eq i32 %v1_8998, 0
  store i1 %v10_8998, i1* %zf.global-to-local, align 1
  store i32 %v1_8998, i32* %eax.global-to-local, align 4
  ret i32 %v1_8998

; uselistorder directives
  uselistorder i32 %v1_896d, { 2, 1, 0 }
  uselistorder i1 %v2_895e, { 1, 0 }
  uselistorder i1 %v2_894f, { 1, 0 }
  uselistorder i32 %v2_8944, { 1, 0 }
  uselistorder i32 %v1_893f, { 0, 2, 1 }
  uselistorder i32 %v3_8931, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 2, 1, 3, 4, 5, 7, 8, 6 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 5, 4 }
  uselistorder label %dec_label_pc_8942, { 1, 0 }
}

define i32 @function_89c9() local_unnamed_addr {
dec_label_pc_89c9:
  %ebx.global-to-local = alloca i32, align 4
  %v0_89c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_89c9 = add i32 %v0_89c9, -1065090576
  %v2_89c9 = inttoptr i32 %v1_89c9 to i32*
  %v3_89c9 = load i32, i32* %v2_89c9, align 4
  %v4_89c9 = add i32 %v3_89c9, 1
  %v12_89c9 = icmp eq i32 %v4_89c9, 0
  store i32 %v4_89c9, i32* %v2_89c9, align 4
  br i1 %v12_89c9, label %dec_label_pc_89db, label %dec_label_pc_89d1

dec_label_pc_89d1:                                ; preds = %dec_label_pc_89c9
  ret i32 0

dec_label_pc_89db:                                ; preds = %dec_label_pc_89c9
  %v0_89db = load i32, i32* @ebp, align 4
  %v1_89db = add i32 %v0_89db, -110
  %v3_89de = inttoptr i32 %v1_89db to i8*
  %v3_89e1 = call i32 @_ZNK7CPubKey4sizeEv(i8* %v3_89de)
  %v10_89e6 = icmp eq i32 %v3_89e1, 65
  br i1 %v10_89e6, label %bb, label %dec_label_pc_89eb

bb:                                               ; preds = %dec_label_pc_89db
  %v1_89e9 = call i32 @function_8a0f()
  br label %dec_label_pc_89eb

dec_label_pc_89eb:                                ; preds = %bb, %dec_label_pc_89db
  %v3_8a03 = phi i32 [ %v1_89e9, %bb ], [ %v3_89e1, %dec_label_pc_89db ]
  ret i32 %v3_8a03

; uselistorder directives
  uselistorder i32 %v3_89e1, { 1, 0 }
}

define i32 @function_8a0f() local_unnamed_addr {
dec_label_pc_8a0f:
  %v0_8a0f = load i32, i32* @ebp, align 4
  %v1_8a0f = add i32 %v0_8a0f, -124
  %v2_8a0f = inttoptr i32 %v1_8a0f to i32*
  %v3_8a0f = load i32, i32* %v2_8a0f, align 4
  %v1_8a12 = inttoptr i32 %v3_8a0f to i32*
  %v2_8a12 = load i32, i32* %v1_8a12, align 4
  %v3_8a27 = inttoptr i32 %v2_8a12 to i32*
  %v4_8a27 = call i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %v3_8a27, i32 67, i32 0)
  %v0_8a2c = load i32, i32* @ebp, align 4
  %v1_8a2c = add i32 %v0_8a2c, -124
  %v2_8a2c = inttoptr i32 %v1_8a2c to i32*
  %v3_8a2c = load i32, i32* %v2_8a2c, align 4
  %v1_8a2f = inttoptr i32 %v3_8a2c to i32*
  %v2_8a2f = load i32, i32* %v1_8a2f, align 4
  %v2_8a3c = inttoptr i32 %v2_8a2f to i32*
  %v3_8a3c = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8a3c, i32 0)
  %v1_8a41 = inttoptr i32 %v3_8a3c to i8*
  store i8 65, i8* %v1_8a41, align 1
  %v0_8a44 = load i32, i32* @ebp, align 4
  %v1_8a44 = add i32 %v0_8a44, -110
  %v1_8a4a = call i32 @_ZNK7CPubKey5beginEv(i32 %v1_8a44)
  %v0_8a51 = load i32, i32* @ebp, align 4
  %v1_8a51 = add i32 %v0_8a51, -124
  %v2_8a51 = inttoptr i32 %v1_8a51 to i32*
  %v3_8a51 = load i32, i32* %v2_8a51, align 4
  %v1_8a54 = inttoptr i32 %v3_8a51 to i32*
  %v2_8a54 = load i32, i32* %v1_8a54, align 4
  %v2_8a61 = inttoptr i32 %v2_8a54 to i32*
  %v3_8a61 = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8a61, i32 1)
  ret i32 %v3_8a61

; uselistorder directives
  uselistorder i8 65, { 1, 0 }
  uselistorder i32 67, { 1, 0 }
  uselistorder i32 -124, { 0, 1, 2, 3, 7, 8, 9, 4, 5, 6 }
}

define i32 @function_8a79() local_unnamed_addr {
dec_label_pc_8a79:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8a79 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8a79 = add i32 %v0_8a79, 9143365
  %v2_8a79 = inttoptr i32 %v1_8a79 to i32*
  %v3_8a79 = load i32, i32* %v2_8a79, align 4
  %v4_8a79 = add i32 %v3_8a79, -1
  store i32 %v4_8a79, i32* %v2_8a79, align 4
  %v0_8a87 = load i32, i32* %eax.global-to-local, align 4
  %v2_8a8a = inttoptr i32 %v0_8a87 to i32*
  %v3_8a8a = call i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %v2_8a8a, i32 66)
  %v1_8a8f = inttoptr i32 %v3_8a8a to i8*
  store i8 -84, i8* %v1_8a8f, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i8 -84, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 (i32*, i32)* @_ZNSt6vectorIhSaIhEEixEj, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 9, 10, 11, 12, 13, 14, 15, 16 }
}

define i32 @function_8a99(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8a99:
  store i32 0, i32* @eax, align 4
  %v0_8a9e = load i32, i32* @ebp, align 4
  %v1_8a9e = add i32 %v0_8a9e, -12
  %v2_8a9e = inttoptr i32 %v1_8a9e to i32*
  %v3_8a9e = load i32, i32* %v2_8a9e, align 4
  %v1_8aa1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_8aa1 = icmp eq i32 %v1_8aa1, %v3_8a9e
  br i1 %v3_8aa1, label %bb, label %dec_label_pc_8aaa

bb:                                               ; preds = %dec_label_pc_8a99
  %v1_8aa8 = call i32 @function_8aaf()
  br label %dec_label_pc_8aaa

dec_label_pc_8aaa:                                ; preds = %bb, %dec_label_pc_8a99
  %v2_8aa8 = phi i32 [ %v1_8aa8, %bb ], [ 0, %dec_label_pc_8a99 ]
  ret i32 %v2_8aa8
}

define i32 @function_8aaf() local_unnamed_addr {
dec_label_pc_8aaf:
  %v0_8ab8 = load i32, i32* @eax, align 4
  ret i32 %v0_8ab8
}

define void @__static_initialization_and_destruction_0(i32 %__initialize_p, i32 %__priority) local_unnamed_addr {
dec_label_pc_8ab9:
  %v0_8acc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v13_8ad7 = icmp eq i32 %__initialize_p, 1
  %v1_8adb = icmp eq i1 %v13_8ad7, false
  br i1 %v1_8adb, label %bb, label %dec_label_pc_8ae1

bb:                                               ; preds = %dec_label_pc_8ab9
  %v4_8adb = call i32 @function_8df5(i32 %__priority, i32 %__initialize_p)
  br label %dec_label_pc_8ae1

dec_label_pc_8ae1:                                ; preds = %bb, %dec_label_pc_8ab9
  %v13_8ae1 = icmp eq i32 %__priority, 65535
  %v1_8ae8 = icmp eq i1 %v13_8ae1, false
  br i1 %v1_8ae8, label %bb10, label %dec_label_pc_8aee

bb10:                                             ; preds = %dec_label_pc_8ae1
  %v4_8ae8 = call i32 @function_8df5(i32 %v0_8acc, i32 ptrtoint (i32* @9 to i32))
  br label %dec_label_pc_8aee

dec_label_pc_8aee:                                ; preds = %bb10, %dec_label_pc_8ae1
  ret void

; uselistorder directives
  uselistorder i32 %__initialize_p, { 1, 0 }
}

define i32 @function_8bc8() local_unnamed_addr {
dec_label_pc_8bc8:
  %eax.global-to-local = alloca i32, align 4
  %v0_8bc8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8bc8
}

define i32 @function_8bd2() local_unnamed_addr {
dec_label_pc_8bd2:
  %eax.global-to-local = alloca i32, align 4
  %v0_8bd2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8bd2
}

define i32 @function_8bdc() local_unnamed_addr {
dec_label_pc_8bdc:
  %eax.global-to-local = alloca i32, align 4
  %v0_8bdc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8bdc
}

define i32 @function_8cbf() local_unnamed_addr {
dec_label_pc_8cbf:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_8cc1 = add i32 %tmp91, 76149573
  %v2_8cc1 = inttoptr i32 %v1_8cc1 to i8*
  %v3_8cc1 = load i8, i8* %v2_8cc1, align 1
  %v4_8cc1 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8cc1 = trunc i32 %v4_8cc1 to i8
  %v6_8cc1 = add i8 %v5_8cc1, %v3_8cc1
  store i8 %v6_8cc1, i8* %v2_8cc1, align 1
  %v0_8cc7 = load i32, i32* %eax.global-to-local, align 4
  %v11_8cc7 = and i32 %v0_8cc7, -24
  store i32 %v11_8cc7, i32* %eax.global-to-local, align 4
  ret i32 %v11_8cc7

; uselistorder directives
  uselistorder i32 %v11_8cc7, { 1, 0 }
}

define i32 @function_8cff() local_unnamed_addr {
dec_label_pc_8cff:
  %eax.global-to-local = alloca i32, align 4
  %v0_8cff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8cff
}

define i32 @function_8d30() local_unnamed_addr {
dec_label_pc_8d30:
  %eax.global-to-local = alloca i32, align 4
  %v0_8d30 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8d30
}

define i32 @function_8d61() local_unnamed_addr {
dec_label_pc_8d61:
  %eax.global-to-local = alloca i32, align 4
  %v0_8d61 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8d61
}

define i32 @function_8d92() local_unnamed_addr {
dec_label_pc_8d92:
  %eax.global-to-local = alloca i32, align 4
  %v0_8d92 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8d92
}

define i32 @function_8dae() local_unnamed_addr {
dec_label_pc_8dae:
  %v2_8dae = call i32 @function_8df5(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  ret i32 %v2_8dae

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_8df5, { 2, 1, 0 }
}

define i32 @function_8db1() local_unnamed_addr {
dec_label_pc_8db1:
  %eax.global-to-local = alloca i32, align 4
  %v0_8db1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8db1
}

define i32 @function_8dc8() local_unnamed_addr {
dec_label_pc_8dc8:
  %eax.global-to-local = alloca i32, align 4
  %v0_8dc8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8dc8
}

define i32 @function_8ddf() local_unnamed_addr {
dec_label_pc_8ddf:
  %eax.global-to-local = alloca i32, align 4
  %v0_8ddf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8ddf
}

define i32 @function_8df5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8df5:
  %v0_8df5 = load i32, i32* @ebp, align 4
  %v1_8df5 = add i32 %v0_8df5, -12
  %v2_8df5 = inttoptr i32 %v1_8df5 to i32*
  %v3_8df5 = load i32, i32* %v2_8df5, align 4
  %v1_8df8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_8df8 = xor i32 %v1_8df8, %v3_8df5
  %v3_8df8 = icmp eq i32 %v2_8df8, 0
  store i32 %v2_8df8, i32* @eax, align 4
  br i1 %v3_8df8, label %bb, label %dec_label_pc_8e01

bb:                                               ; preds = %dec_label_pc_8df5
  %v1_8dff = call i32 @function_8e06()
  br label %dec_label_pc_8e01

dec_label_pc_8e01:                                ; preds = %bb, %dec_label_pc_8df5
  %v2_8dff = phi i32 [ %v1_8dff, %bb ], [ %v2_8df8, %dec_label_pc_8df5 ]
  ret i32 %v2_8dff
}

define i32 @function_8e06() local_unnamed_addr {
dec_label_pc_8e06:
  %v0_8e0a = load i32, i32* @eax, align 4
  ret i32 %v0_8e0a
}

define void @_GLOBAL__sub_I__Z12CastToBigNumRKSt6vectorIhSaIhEE() local_unnamed_addr {
dec_label_pc_8e0b:
  call void @__static_initialization_and_destruction_0(i32 1, i32 65535)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e3c

bb:                                               ; preds = %dec_label_pc_8e0b
  %v1_8e3a = call i32 @function_8e41()
  br label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %bb, %dec_label_pc_8e0b
  ret void

; uselistorder directives
  uselistorder i32 65535, { 1, 0 }
}

define i32 @function_8e41() local_unnamed_addr {
dec_label_pc_8e41:
  %v0_8e42 = load i32, i32* @eax, align 4
  ret i32 %v0_8e42
}

define i32 @_ZN5boost12noncopyable_11noncopyableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e50:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8e73

bb:                                               ; preds = %dec_label_pc_8e50
  %v2_8e71 = call i32 @function_8e78(i32 %arg1)
  br label %dec_label_pc_8e73

dec_label_pc_8e73:                                ; preds = %bb, %dec_label_pc_8e50
  %v3_8e71 = phi i32 [ %v2_8e71, %bb ], [ 0, %dec_label_pc_8e50 ]
  ret i32 %v3_8e71
}

define i32 @function_8e78(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e78:
  %v0_8e79 = load i32, i32* @eax, align 4
  ret i32 %v0_8e79
}

define i32 @_ZNSt9exceptionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e7a:
  ret i32 %arg1
}

define i32 @function_8eab() local_unnamed_addr {
dec_label_pc_8eab:
  %eax.global-to-local = alloca i32, align 4
  %v0_8eac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8eac
}

define i32 @_ZNSt9bad_allocC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8eae:
  store i32 %arg1, i32* @eax, align 4
  %v1_8ecb = call i32 @function_11d28(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_8eea() local_unnamed_addr {
dec_label_pc_8eea:
  %eax.global-to-local = alloca i32, align 4
  %v0_8eeb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8eeb
}

define i32 @_ZnwjPv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8eec:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8f18

bb:                                               ; preds = %dec_label_pc_8eec
  %v3_8f16 = call i32 @function_8f1d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_8f18

dec_label_pc_8f18:                                ; preds = %bb, %dec_label_pc_8eec
  %v4_8f16 = phi i32 [ %v3_8f16, %bb ], [ %arg2, %dec_label_pc_8eec ]
  ret i32 %v4_8f16
}

define i32 @function_8f1d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f1d:
  %v0_8f1e = load i32, i32* @eax, align 4
  ret i32 %v0_8f1e
}

define i32 @_ZdlPvS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f1f:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8f48

bb:                                               ; preds = %dec_label_pc_8f1f
  %v3_8f46 = call i32 @function_8f4d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_8f48

dec_label_pc_8f48:                                ; preds = %bb, %dec_label_pc_8f1f
  %v4_8f46 = phi i32 [ %v3_8f46, %bb ], [ 0, %dec_label_pc_8f1f ]
  ret i32 %v4_8f46
}

define i32 @function_8f4d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f4d:
  %v0_8f4e = load i32, i32* @eax, align 4
  ret i32 %v0_8f4e
}

define i32 @_ZNK5boost15foreach_detail_13auto_any_basecvbEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f50:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8f78

bb:                                               ; preds = %dec_label_pc_8f50
  %v2_8f76 = call i32 @function_8f7d(i32 %arg1)
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %bb, %dec_label_pc_8f50
  %v3_8f76 = phi i32 [ %v2_8f76, %bb ], [ 0, %dec_label_pc_8f50 ]
  ret i32 %v3_8f76
}

define i32 @function_8f7d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8f7d:
  %v0_8f7e = load i32, i32* @eax, align 4
  ret i32 %v0_8f7e
}

define i32 @_ZN5boost15foreach_detail_9set_falseERb(i8* %arg1) local_unnamed_addr {
dec_label_pc_8f7f:
  store i8 0, i8* %arg1, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8fad

bb:                                               ; preds = %dec_label_pc_8f7f
  %v4_8f85 = ptrtoint i8* %arg1 to i32
  %v3_8fab = call i32 @function_8fb2(i32 %v4_8f85)
  br label %dec_label_pc_8fad

dec_label_pc_8fad:                                ; preds = %bb, %dec_label_pc_8f7f
  %v4_8fab = phi i32 [ %v3_8fab, %bb ], [ 0, %dec_label_pc_8f7f ]
  ret i32 %v4_8fab

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_8fb2(i32 %arg1) local_unnamed_addr {
dec_label_pc_8fb2:
  %v0_8fb3 = load i32, i32* @eax, align 4
  ret i32 %v0_8fb3
}

define i32 @_ZN5boost6tuples6detail5cnullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8fb4:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_8fda

bb:                                               ; preds = %dec_label_pc_8fb4
  %v2_8fd8 = call i32 @function_8fdf(i32 %arg1)
  br label %dec_label_pc_8fda

dec_label_pc_8fda:                                ; preds = %bb, %dec_label_pc_8fb4
  %v3_8fd8 = phi i32 [ %v2_8fd8, %bb ], [ %arg1, %dec_label_pc_8fb4 ]
  ret i32 %v3_8fd8
}

define i32 @function_8fdf(i32 %arg1) local_unnamed_addr {
dec_label_pc_8fdf:
  %v0_8fe0 = load i32, i32* @eax, align 4
  ret i32 %v0_8fe0
}

define i32 @_ZNSt14_Bit_referenceC1EPmm(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8fe4:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_9015 = add i32 %tmp104, 4
  %v3_9015 = inttoptr i32 %v2_9015 to i32*
  store i32 %arg3, i32* %v3_9015, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9024

bb:                                               ; preds = %dec_label_pc_8fe4
  %v4_9022 = call i32 @function_9029(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_9024

dec_label_pc_9024:                                ; preds = %bb, %dec_label_pc_8fe4
  %v5_9022 = phi i32 [ %v4_9022, %bb ], [ 0, %dec_label_pc_8fe4 ]
  ret i32 %v5_9022
}

define i32 @function_9029(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9029:
  %v0_902a = load i32, i32* @eax, align 4
  ret i32 %v0_902a
}

define i32 @_ZNKSt14_Bit_referencecvbEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_902c:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_9046 = load i32, i32* %arg1, align 4
  %v1_9048 = inttoptr i32 %v2_9046 to i32*
  %v2_9048 = load i32, i32* %v1_9048, align 4
  %v1_904d = add i32 %tmp5, 4
  %v2_904d = inttoptr i32 %v1_904d to i32*
  %v3_904d = load i32, i32* %v2_904d, align 4
  %v2_9050 = and i32 %v3_904d, %v2_9048
  %v3_9050 = icmp eq i32 %v2_9050, 0
  %v1_9054 = icmp eq i1 %v3_9050, false
  %v2_9054 = zext i1 %v1_9054 to i32
  %v4_9054 = and i32 %v2_9050, -256
  %v5_9054 = or i32 %v2_9054, %v4_9054
  ret i32 %v5_9054
}

define i32 @_ZNSt14_Bit_referenceaSEb(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_906a:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %tmp9 = trunc i32 %arg2 to i8
  %v10_9087 = icmp eq i8 %tmp9, 0
  %v2_90a8 = load i32, i32* %arg1, align 4
  %v1_90af = inttoptr i32 %v2_90a8 to i32*
  %v2_90af = load i32, i32* %v1_90af, align 4
  %v1_90b4 = add i32 %tmp6, 4
  %v2_90b4 = inttoptr i32 %v1_90b4 to i32*
  %v3_90b4 = load i32, i32* %v2_90b4, align 4
  br i1 %v10_9087, label %dec_label_pc_90a5, label %dec_label_pc_908d

dec_label_pc_908d:                                ; preds = %dec_label_pc_906a
  %v2_909f = or i32 %v3_90b4, %v2_90af
  %v2_90a1 = inttoptr i32 %v2_90a8 to i32*
  store i32 %v2_909f, i32* %v2_90a1, align 4
  br label %dec_label_pc_90bd

dec_label_pc_90a5:                                ; preds = %dec_label_pc_906a
  %v1_90b7 = sub i32 -1, %v3_90b4
  %v2_90b9 = and i32 %v2_90af, %v1_90b7
  %v2_90bb = inttoptr i32 %v2_90a8 to i32*
  store i32 %v2_90b9, i32* %v2_90bb, align 4
  br label %dec_label_pc_90bd

dec_label_pc_90bd:                                ; preds = %dec_label_pc_90a5, %dec_label_pc_908d
  store i32 %tmp6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_90cc

bb:                                               ; preds = %dec_label_pc_90bd
  %v1_90ca = call i32 @function_90d1()
  br label %dec_label_pc_90cc

dec_label_pc_90cc:                                ; preds = %bb, %dec_label_pc_90bd
  %v2_90ca = phi i32 [ %v1_90ca, %bb ], [ %tmp6, %dec_label_pc_90bd ]
  ret i32 %v2_90ca

; uselistorder directives
  uselistorder i32 %v2_90a8, { 1, 2, 0 }
}

define i32 @function_90d1() local_unnamed_addr {
dec_label_pc_90d1:
  %v0_90d2 = load i32, i32* @eax, align 4
  ret i32 %v0_90d2
}

define i32 @_ZNSt14_Bit_referenceaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_90d4:
  store i32 %arg2, i32* @eax, align 4
  %v1_90f7 = call i32 @function_12100(i32 %arg2)
  %v1_90fc = urem i32 %v1_90f7, 256
  store i32 %arg1, i32* @eax, align 4
  %v2_9109 = call i32 @function_1213e(i32 %arg1, i32 %v1_90fc)
  store i32 %v2_9109, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_911a

bb:                                               ; preds = %dec_label_pc_90d4
  %v1_9118 = call i32 @function_911f()
  br label %dec_label_pc_911a

dec_label_pc_911a:                                ; preds = %bb, %dec_label_pc_90d4
  %v2_9118 = phi i32 [ %v1_9118, %bb ], [ %v2_9109, %dec_label_pc_90d4 ]
  ret i32 %v2_9118

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_911f() local_unnamed_addr {
dec_label_pc_911f:
  %v0_9120 = load i32, i32* @eax, align 4
  ret i32 %v0_9120
}

define i32 @_ZNSt8iteratorISt26random_access_iterator_tagbiPbRbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_9122:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9145

bb:                                               ; preds = %dec_label_pc_9122
  %v2_9143 = call i32 @function_914a(i32 %arg1)
  br label %dec_label_pc_9145

dec_label_pc_9145:                                ; preds = %bb, %dec_label_pc_9122
  %v3_9143 = phi i32 [ %v2_9143, %bb ], [ 0, %dec_label_pc_9122 ]
  ret i32 %v3_9143
}

define i32 @function_914a(i32 %arg1) local_unnamed_addr {
dec_label_pc_914a:
  %v0_914b = load i32, i32* @eax, align 4
  ret i32 %v0_914b
}

define i32 @_ZNSt18_Bit_iterator_baseC1EPmj(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_914c:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @eax, align 4
  %v1_9175 = call i32 @function_1226e(i32 %tmp104)
  store i32 %arg2, i32* %arg1, align 4
  %v2_9188 = add i32 %tmp104, 4
  %v3_9188 = inttoptr i32 %v2_9188 to i32*
  store i32 %arg3, i32* %v3_9188, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9197

bb:                                               ; preds = %dec_label_pc_914c
  %v1_9195 = call i32 @function_919c()
  br label %dec_label_pc_9197

dec_label_pc_9197:                                ; preds = %bb, %dec_label_pc_914c
  %v2_9195 = phi i32 [ %v1_9195, %bb ], [ 0, %dec_label_pc_914c ]
  ret i32 %v2_9195

; uselistorder directives
  uselistorder i32 %tmp104, { 2, 1, 0 }
}

define i32 @function_919c() local_unnamed_addr {
dec_label_pc_919c:
  %v0_919d = load i32, i32* @eax, align 4
  ret i32 %v0_919d
}

define i32 @_ZNSt18_Bit_iterator_base10_M_bump_upEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_919e:
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_91b8 = add i32 %tmp101, 4
  %v2_91b8 = inttoptr i32 %v1_91b8 to i32*
  %v3_91b8 = load i32, i32* %v2_91b8, align 4
  %v10_91bb = icmp eq i32 %v3_91b8, 31
  %v1_91be = zext i1 %v10_91bb to i32
  %v2_91be = load i32, i32* %edx.global-to-local, align 4
  %v3_91be = and i32 %v2_91be, -256
  %v4_91be = or i32 %v3_91be, %v1_91be
  store i32 %v4_91be, i32* %edx.global-to-local, align 4
  %v1_91c1 = add i32 %v3_91b8, 1
  store i32 %v1_91c1, i32* %v2_91b8, align 4
  %v0_91ca = load i32, i32* %edx.global-to-local, align 4
  %v4_91ca = trunc i32 %v0_91ca to i8
  %v5_91ca = icmp eq i8 %v4_91ca, 0
  br i1 %v5_91ca, label %dec_label_pc_91e5, label %dec_label_pc_91ce

dec_label_pc_91ce:                                ; preds = %dec_label_pc_919e
  store i32 0, i32* %v2_91b8, align 4
  %v2_91db = load i32, i32* %arg1, align 4
  %v1_91dd = add i32 %v2_91db, 4
  store i32 %v1_91dd, i32* %edx.global-to-local, align 4
  store i32 %v1_91dd, i32* %arg1, align 4
  br label %dec_label_pc_91e5

dec_label_pc_91e5:                                ; preds = %dec_label_pc_91ce, %dec_label_pc_919e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_91f1

bb:                                               ; preds = %dec_label_pc_91e5
  %v1_91ef = call i32 @function_91f6()
  br label %dec_label_pc_91f1

dec_label_pc_91f1:                                ; preds = %bb, %dec_label_pc_91e5
  %v2_91ef = phi i32 [ %v1_91ef, %bb ], [ 0, %dec_label_pc_91e5 ]
  ret i32 %v2_91ef

; uselistorder directives
  uselistorder i32 %v3_91b8, { 1, 0 }
}

define i32 @function_91f6() local_unnamed_addr {
dec_label_pc_91f6:
  %v0_91f7 = load i32, i32* @eax, align 4
  ret i32 %v0_91f7
}

define i32 @_ZNSt18_Bit_iterator_base12_M_bump_downEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_91f8:
  %edx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_9212 = add i32 %tmp102, 4
  %v2_9212 = inttoptr i32 %v1_9212 to i32*
  %v3_9212 = load i32, i32* %v2_9212, align 4
  %v1_9215 = icmp eq i32 %v3_9212, 0
  %v1_9217 = zext i1 %v1_9215 to i32
  %v2_9217 = load i32, i32* %edx.global-to-local, align 4
  %v3_9217 = and i32 %v2_9217, -256
  %v4_9217 = or i32 %v3_9217, %v1_9217
  store i32 %v4_9217, i32* %edx.global-to-local, align 4
  %v1_921a = add i32 %v3_9212, -1
  store i32 %v1_921a, i32* %v2_9212, align 4
  %v0_9223 = load i32, i32* %edx.global-to-local, align 4
  %v4_9223 = trunc i32 %v0_9223 to i8
  %v5_9223 = icmp eq i8 %v4_9223, 0
  br i1 %v5_9223, label %dec_label_pc_923e, label %dec_label_pc_9227

dec_label_pc_9227:                                ; preds = %dec_label_pc_91f8
  store i32 31, i32* %v2_9212, align 4
  %v2_9234 = load i32, i32* %arg1, align 4
  %v1_9236 = add i32 %v2_9234, -4
  store i32 %v1_9236, i32* %edx.global-to-local, align 4
  store i32 %v1_9236, i32* %arg1, align 4
  br label %dec_label_pc_923e

dec_label_pc_923e:                                ; preds = %dec_label_pc_9227, %dec_label_pc_91f8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_924a

bb:                                               ; preds = %dec_label_pc_923e
  %v1_9248 = call i32 @function_924f()
  br label %dec_label_pc_924a

dec_label_pc_924a:                                ; preds = %bb, %dec_label_pc_923e
  %v2_9248 = phi i32 [ %v1_9248, %bb ], [ 0, %dec_label_pc_923e ]
  ret i32 %v2_9248
}

define i32 @function_924f() local_unnamed_addr {
dec_label_pc_924f:
  %v0_9250 = load i32, i32* @eax, align 4
  ret i32 %v0_9250
}

define i32 @_ZNSt18_Bit_iterator_base7_M_incrEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9252:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_9272 = add i32 %tmp104, 4
  %v2_9272 = inttoptr i32 %v1_9272 to i32*
  %v3_9272 = load i32, i32* %v2_9272, align 4
  %v2_9278 = add i32 %v3_9272, %arg2
  %v13_9278 = icmp slt i32 %v2_9278, 0
  %v2_9280 = load i32, i32* %arg1, align 4
  %v1_9285 = add i32 %v2_9278, 31
  %v3_928a = select i1 %v13_9278, i32 %v1_9285, i32 %v2_9278
  %v2_928d = sdiv i32 %v3_928a, 32
  %v2_9290 = mul nsw i32 %v2_928d, 4
  %v2_9293 = add i32 %v2_9290, %v2_9280
  store i32 %v2_9293, i32* %arg1, align 4
  %v2_92aa = srem i32 %v2_9278, 32
  %v13_92aa = icmp slt i32 %v2_92aa, 0
  %v1_92b3 = icmp eq i1 %v13_92aa, false
  br i1 %v1_92b3, label %dec_label_pc_92c6, label %dec_label_pc_92b5

dec_label_pc_92b5:                                ; preds = %dec_label_pc_9252
  %v4_92b5 = add nsw i32 %v2_92aa, 32
  %v2_92bc = load i32, i32* %arg1, align 4
  %v1_92be = add i32 %v2_92bc, -4
  store i32 %v1_92be, i32* %arg1, align 4
  br label %dec_label_pc_92c6

dec_label_pc_92c6:                                ; preds = %dec_label_pc_92b5, %dec_label_pc_9252
  %stack_var_-20.0 = phi i32 [ %v2_92aa, %dec_label_pc_9252 ], [ %v4_92b5, %dec_label_pc_92b5 ]
  store i32 %stack_var_-20.0, i32* %v2_9272, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_92aa, { 1, 2, 0 }
}

define i32 @_ZNKSt18_Bit_iterator_baseeqERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_92e2:
  %v2_9302 = load i32, i32* %arg1, align 4
  %v1_9307 = inttoptr i32 %arg2 to i32*
  %v2_9307 = load i32, i32* %v1_9307, align 4
  %v12_9309 = icmp eq i32 %v2_9302, %v2_9307
  %v1_930b = icmp eq i1 %v12_9309, false
  br i1 %v1_930b, label %dec_label_pc_9324, label %dec_label_pc_930d

dec_label_pc_930d:                                ; preds = %dec_label_pc_92e2
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_9310 = add i32 %tmp102, 4
  %v2_9310 = inttoptr i32 %v1_9310 to i32*
  %v3_9310 = load i32, i32* %v2_9310, align 4
  %v1_9316 = add i32 %arg2, 4
  %v2_9316 = inttoptr i32 %v1_9316 to i32*
  %v3_9316 = load i32, i32* %v2_9316, align 4
  %v12_9319 = icmp eq i32 %v3_9310, %v3_9316
  %v1_931b = icmp eq i1 %v12_9319, false
  br i1 %v1_931b, label %dec_label_pc_9324, label %dec_label_pc_9329

dec_label_pc_9324:                                ; preds = %dec_label_pc_930d, %dec_label_pc_92e2
  br label %dec_label_pc_9329

dec_label_pc_9329:                                ; preds = %dec_label_pc_930d, %dec_label_pc_9324
  %storemerge = phi i32 [ 0, %dec_label_pc_9324 ], [ 1, %dec_label_pc_930d ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9335

bb:                                               ; preds = %dec_label_pc_9329
  %v1_9333 = call i32 @function_933a()
  br label %dec_label_pc_9335

dec_label_pc_9335:                                ; preds = %bb, %dec_label_pc_9329
  %v2_9333 = phi i32 [ %v1_9333, %bb ], [ %storemerge, %dec_label_pc_9329 ]
  ret i32 %v2_9333

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9329, { 1, 0 }
}

define i32 @function_933a() local_unnamed_addr {
dec_label_pc_933a:
  %v0_933b = load i32, i32* @eax, align 4
  ret i32 %v0_933b
}

define i32 @_ZNKSt18_Bit_iterator_baseneERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_933c:
  store i32 %arg1, i32* @eax, align 4
  %v2_9366 = call i32 @function_1261e(i32 %arg1, i32 %arg2)
  %v1_936b = xor i32 %v2_9366, 1
  store i32 %v1_936b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_937a

bb:                                               ; preds = %dec_label_pc_933c
  %v1_9378 = call i32 @function_937f()
  br label %dec_label_pc_937a

dec_label_pc_937a:                                ; preds = %bb, %dec_label_pc_933c
  %v2_9378 = phi i32 [ %v1_9378, %bb ], [ %v1_936b, %dec_label_pc_933c ]
  ret i32 %v2_9378

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_937f() local_unnamed_addr {
dec_label_pc_937f:
  %v0_9380 = load i32, i32* @eax, align 4
  ret i32 %v0_9380
}

define i32 @_ZStmiRKSt18_Bit_iterator_baseS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9381:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_93a1 = load i32, i32* %arg1, align 4
  %v1_93a8 = inttoptr i32 %arg2 to i32*
  %v2_93a8 = load i32, i32* %v1_93a8, align 4
  %v2_93ac = sub i32 %v2_93a1, %v2_93a8
  %v2_93b02 = udiv i32 %v2_93ac, 4
  %v2_93b3 = mul i32 %v2_93b02, 32
  %v1_93bb = add i32 %tmp103, 4
  %v2_93bb = inttoptr i32 %v1_93bb to i32*
  %v3_93bb = load i32, i32* %v2_93bb, align 4
  %v2_93be = add i32 %v3_93bb, %v2_93b3
  %v1_93c3 = add i32 %arg2, 4
  %v2_93c3 = inttoptr i32 %v1_93c3 to i32*
  %v3_93c3 = load i32, i32* %v2_93c3, align 4
  %v2_93c8 = sub i32 %v2_93be, %v3_93c3
  store i32 %v2_93c8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_93d8

bb:                                               ; preds = %dec_label_pc_9381
  %v3_93d6 = call i32 @function_93dd(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_93d8

dec_label_pc_93d8:                                ; preds = %bb, %dec_label_pc_9381
  %v4_93d6 = phi i32 [ %v3_93d6, %bb ], [ %v2_93c8, %dec_label_pc_9381 ]
  ret i32 %v4_93d6
}

define i32 @function_93dd(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_93dd:
  %v0_93de = load i32, i32* @eax, align 4
  ret i32 %v0_93de
}

define i32 @_ZNSt13_Bit_iteratorC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_93e0:
  %v3_940d = call i32 @function_1252c(i32 %arg1, i32 0, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_941e

bb:                                               ; preds = %dec_label_pc_93e0
  %v1_941c = call i32 @function_9423()
  br label %dec_label_pc_941e

dec_label_pc_941e:                                ; preds = %bb, %dec_label_pc_93e0
  %v2_941c = phi i32 [ %v1_941c, %bb ], [ 0, %dec_label_pc_93e0 ]
  ret i32 %v2_941c
}

define i32 @function_9423() local_unnamed_addr {
dec_label_pc_9423:
  %v0_9424 = load i32, i32* @eax, align 4
  ret i32 %v0_9424
}

define i32 @_ZNSt13_Bit_iteratorC1EPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9426:
  store i32 %arg1, i32* @eax, align 4
  %v3_945d = call i32 @function_12572(i32 %arg1, i32 %arg2, i32 %arg3)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt13_Bit_iteratordeEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9476:
  %tmp103 = ptrtoint i32* %arg2 to i32
  %v1_9496 = add i32 %tmp103, 4
  %v2_9496 = inttoptr i32 %v1_9496 to i32*
  %v3_9496 = load i32, i32* %v2_9496, align 4
  %v3_94a0 = urem i32 %v3_9496, 32
  %v5_94a0 = icmp eq i32 %v3_94a0, 0
  br i1 %v5_94a0, label %bb108, label %bb

bb:                                               ; preds = %dec_label_pc_9476
  %v6_94a0 = shl i32 1, %v3_94a0
  br label %bb108

bb108:                                            ; preds = %dec_label_pc_9476, %bb
  %v0_94a7 = phi i32 [ 1, %dec_label_pc_9476 ], [ %v6_94a0, %bb ]
  %v2_94a5 = load i32, i32* %arg2, align 4
  %v3_94b5 = call i32 @function_1245a(i32 %arg1, i32 %v2_94a5, i32 %v0_94a7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb109, label %dec_label_pc_94c9

bb109:                                            ; preds = %bb108
  %v1_94c7 = call i32 @function_94ce()
  br label %dec_label_pc_94c9

dec_label_pc_94c9:                                ; preds = %bb109, %bb108
  %v2_94c7 = phi i32 [ %v1_94c7, %bb109 ], [ %arg1, %bb108 ]
  ret i32 %v2_94c7

; uselistorder directives
  uselistorder i32 %v3_94a0, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb108, { 1, 0 }
}

define i32 @function_94ce() local_unnamed_addr {
dec_label_pc_94ce:
  %v0_94cf = load i32, i32* @eax, align 4
  ret i32 %v0_94cf
}

define i32 @_ZNSt13_Bit_iteratorppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_94d2:
  store i32 %arg1, i32* @eax, align 4
  %v1_94ef = call i32 @function_12670(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9503

bb:                                               ; preds = %dec_label_pc_94d2
  %v1_9501 = call i32 @function_9508()
  br label %dec_label_pc_9503

dec_label_pc_9503:                                ; preds = %bb, %dec_label_pc_94d2
  %v2_9501 = phi i32 [ %v1_9501, %bb ], [ %arg1, %dec_label_pc_94d2 ]
  ret i32 %v2_9501

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_9508() local_unnamed_addr {
dec_label_pc_9508:
  %v0_9509 = load i32, i32* @eax, align 4
  ret i32 %v0_9509
}

define i32 @_ZNSt13_Bit_iteratorppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_950a:
  %ecx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* %ecx.global-to-local, align 4
  %v1_9533 = add i32 %arg2, 4
  %v2_9533 = inttoptr i32 %v1_9533 to i32*
  %v3_9533 = load i32, i32* %v2_9533, align 4
  %v1_9536 = inttoptr i32 %arg2 to i32*
  %v2_9536 = load i32, i32* %v1_9536, align 4
  store i32 %v2_9536, i32* %arg1, align 4
  %v1_953a = load i32, i32* %ecx.global-to-local, align 4
  %v2_953a = add i32 %v1_953a, 4
  %v3_953a = inttoptr i32 %v2_953a to i32*
  store i32 %v3_9533, i32* %v3_953a, align 4
  ret i32 %tmp104

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZNSt13_Bit_iteratormmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9560:
  store i32 %arg1, i32* @eax, align 4
  %v1_957d = call i32 @function_12758(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9591

bb:                                               ; preds = %dec_label_pc_9560
  %v1_958f = call i32 @function_9596()
  br label %dec_label_pc_9591

dec_label_pc_9591:                                ; preds = %bb, %dec_label_pc_9560
  %v2_958f = phi i32 [ %v1_958f, %bb ], [ %arg1, %dec_label_pc_9560 ]
  ret i32 %v2_958f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_9596() local_unnamed_addr {
dec_label_pc_9596:
  %v0_9597 = load i32, i32* @eax, align 4
  ret i32 %v0_9597
}

define i32 @_ZNSt13_Bit_iteratorpLEi(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9598:
  store i32 %arg1, i32* @eax, align 4
  %v2_95c2 = call i32 @function_127ea(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNSt13_Bit_iteratormIEi(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_95de:
  ret i32 %arg1
}

define i32 @_ZNKSt13_Bit_iteratorplEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9626:
  %stack_var_-24 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_964c = add i32 %arg2, 4
  %v2_964c = inttoptr i32 %v1_964c to i32*
  %v3_964c = load i32, i32* %v2_964c, align 4
  %v1_964f = inttoptr i32 %arg2 to i32*
  %v2_964f = load i32, i32* %v1_964f, align 4
  store i32 %v2_964f, i32* %stack_var_-24, align 4
  %v2_965e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_965e, i32* %stack_var_-60, align 4
  store i32 %v2_964f, i32* %arg1, align 4
  %v2_9673 = add i32 %tmp107, 4
  %v3_9673 = inttoptr i32 %v2_9673 to i32*
  store i32 %v3_964c, i32* %v3_9673, align 4
  store i32 %tmp107, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9685

bb:                                               ; preds = %dec_label_pc_9626
  %v1_9683 = load i32, i32* %stack_var_-60, align 4
  %v3_9683 = call i32 @function_968a(i32 %v1_9683, i32 %arg3)
  br label %dec_label_pc_9685

dec_label_pc_9685:                                ; preds = %bb, %dec_label_pc_9626
  %v4_9683 = phi i32 [ %v3_9683, %bb ], [ %tmp107, %dec_label_pc_9626 ]
  ret i32 %v4_9683

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_968a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_968a:
  %v0_968b = load i32, i32* @eax, align 4
  ret i32 %v0_968b
}

define i32 @_ZNKSt13_Bit_iteratormiEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_968e:
  %stack_var_-24 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_96b4 = add i32 %arg2, 4
  %v2_96b4 = inttoptr i32 %v1_96b4 to i32*
  %v3_96b4 = load i32, i32* %v2_96b4, align 4
  %v1_96b7 = inttoptr i32 %arg2 to i32*
  %v2_96b7 = load i32, i32* %v1_96b7, align 4
  store i32 %v2_96b7, i32* %stack_var_-24, align 4
  %v2_96c6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_96c6, i32* %stack_var_-60, align 4
  store i32 %v2_96b7, i32* %arg1, align 4
  %v2_96db = add i32 %tmp107, 4
  %v3_96db = inttoptr i32 %v2_96db to i32*
  store i32 %v3_96b4, i32* %v3_96db, align 4
  store i32 %tmp107, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_96ed

bb:                                               ; preds = %dec_label_pc_968e
  %v1_96eb = load i32, i32* %stack_var_-60, align 4
  %v3_96eb = call i32 @function_96f2(i32 %v1_96eb, i32 %arg3)
  br label %dec_label_pc_96ed

dec_label_pc_96ed:                                ; preds = %bb, %dec_label_pc_968e
  %v4_96eb = phi i32 [ %v3_96eb, %bb ], [ %tmp107, %dec_label_pc_968e ]
  ret i32 %v4_96eb

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_96f2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_96f2:
  %v0_96f3 = load i32, i32* @eax, align 4
  ret i32 %v0_96f3
}

define i32 @_ZNSt19_Bit_const_iteratorC1EPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_96f6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_973e

bb:                                               ; preds = %dec_label_pc_96f6
  %v4_973c = call i32 @function_9743(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_973e

dec_label_pc_973e:                                ; preds = %bb, %dec_label_pc_96f6
  %v5_973c = phi i32 [ %v4_973c, %bb ], [ 0, %dec_label_pc_96f6 ]
  ret i32 %v5_973c
}

define i32 @function_9743(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9743:
  %v0_9744 = load i32, i32* @eax, align 4
  ret i32 %v0_9744
}

define i32 @_ZNSt19_Bit_const_iteratorC1ERKSt13_Bit_iterator(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9746:
  %v2_976c = load i32, i32* %arg2, align 4
  %v2_977c = call i32 @_ZN7CScriptC1ERKSt6vectorIhSaIhEE(i32 %arg1, i32 %v2_976c)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_978d

bb:                                               ; preds = %dec_label_pc_9746
  %v1_978b = call i32 @function_9792()
  br label %dec_label_pc_978d

dec_label_pc_978d:                                ; preds = %bb, %dec_label_pc_9746
  %v2_978b = phi i32 [ %v1_978b, %bb ], [ 0, %dec_label_pc_9746 ]
  ret i32 %v2_978b

; uselistorder directives
  uselistorder i32 (i32, i32)* @_ZN7CScriptC1ERKSt6vectorIhSaIhEE, { 0, 2, 1 }
}

define i32 @function_9792() local_unnamed_addr {
dec_label_pc_9792:
  %v0_9793 = load i32, i32* @eax, align 4
  ret i32 %v0_9793
}

define i32 @_ZNKSt19_Bit_const_iteratordeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_9794:
  %stack_var_-24 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_97ae = add i32 %tmp104, 4
  %v2_97ae = inttoptr i32 %v1_97ae to i32*
  %v3_97ae = load i32, i32* %v2_97ae, align 4
  %v3_97b8 = urem i32 %v3_97ae, 32
  %v5_97b8 = icmp eq i32 %v3_97b8, 0
  br i1 %v5_97b8, label %bb107, label %bb

bb:                                               ; preds = %dec_label_pc_9794
  %v6_97b8 = shl i32 1, %v3_97b8
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_9794, %bb
  %v0_97bf = phi i32 [ 1, %dec_label_pc_9794 ], [ %v6_97b8, %bb ]
  %v2_97bd = load i32, i32* %arg1, align 4
  %v2_97c7 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_97c7, i32* @eax, align 4
  br i1 true, label %bb108, label %dec_label_pc_97e9

bb108:                                            ; preds = %bb107
  %v4_97e7 = call i32 @function_97ee(i32 %v2_97c7, i32 %v2_97bd, i32 %v0_97bf)
  br label %dec_label_pc_97e9

dec_label_pc_97e9:                                ; preds = %bb108, %bb107
  %v5_97e7 = phi i32 [ %v4_97e7, %bb108 ], [ %v2_97c7, %bb107 ]
  ret i32 %v5_97e7

; uselistorder directives
  uselistorder i32 %v3_97b8, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
}

define i32 @function_97ee(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_97ee:
  %v0_97ef = load i32, i32* @eax, align 4
  ret i32 %v0_97ef
}

define i32 @_ZNSt19_Bit_const_iteratorppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_97f0:
  store i32 %arg1, i32* @eax, align 4
  %v1_980d = call i32 @function_1298e(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9821

bb:                                               ; preds = %dec_label_pc_97f0
  %v1_981f = call i32 @function_9826()
  br label %dec_label_pc_9821

dec_label_pc_9821:                                ; preds = %bb, %dec_label_pc_97f0
  %v2_981f = phi i32 [ %v1_981f, %bb ], [ %arg1, %dec_label_pc_97f0 ]
  ret i32 %v2_981f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_9826() local_unnamed_addr {
dec_label_pc_9826:
  %v0_9827 = load i32, i32* @eax, align 4
  ret i32 %v0_9827
}

define i32 @_ZN5boost6detail7variant9copy_intoC1EPv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9828:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_984b = call i32 @function_1e252(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9864

bb:                                               ; preds = %dec_label_pc_9828
  %v1_9862 = call i32 @function_9869()
  br label %dec_label_pc_9864

dec_label_pc_9864:                                ; preds = %bb, %dec_label_pc_9828
  %v2_9862 = phi i32 [ %v1_9862, %bb ], [ 0, %dec_label_pc_9828 ]
  ret i32 %v2_9862

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_9869() local_unnamed_addr {
dec_label_pc_9869:
  %v0_986a = load i32, i32* @eax, align 4
  ret i32 %v0_986a
}

define i32 @_ZN5boost6detail7variant14assign_storageC1EPKv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_986c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_988f = call i32 @function_1e296(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_98a8

bb:                                               ; preds = %dec_label_pc_986c
  %v1_98a6 = call i32 @function_98ad()
  br label %dec_label_pc_98a8

dec_label_pc_98a8:                                ; preds = %bb, %dec_label_pc_986c
  %v2_98a6 = phi i32 [ %v1_98a6, %bb ], [ 0, %dec_label_pc_986c ]
  ret i32 %v2_98a6

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_98ad() local_unnamed_addr {
dec_label_pc_98ad:
  %v0_98ae = load i32, i32* @eax, align 4
  ret i32 %v0_98ae
}

define i32 @_ZN5boost10error_infoINS_15throw_function_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98b0:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_98e1

bb:                                               ; preds = %dec_label_pc_98b0
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_98df = call i32 @function_98e6(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_98e1

dec_label_pc_98e1:                                ; preds = %bb, %dec_label_pc_98b0
  %v4_98df = phi i32 [ %v3_98df, %bb ], [ 0, %dec_label_pc_98b0 ]
  ret i32 %v4_98df

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_98e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98e6:
  %v0_98e7 = load i32, i32* @eax, align 4
  ret i32 %v0_98e7
}

define i32 @_ZN5boost10error_infoINS_11throw_file_EPKcEC1ES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98e8:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9919

bb:                                               ; preds = %dec_label_pc_98e8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_9917 = call i32 @function_991e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_9919

dec_label_pc_9919:                                ; preds = %bb, %dec_label_pc_98e8
  %v4_9917 = phi i32 [ %v3_9917, %bb ], [ 0, %dec_label_pc_98e8 ]
  ret i32 %v4_9917

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_991e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_991e:
  %v0_991f = load i32, i32* @eax, align 4
  ret i32 %v0_991f
}

define i32 @_ZN5boost10error_infoINS_11throw_line_EiEC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9920:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_9951

bb:                                               ; preds = %dec_label_pc_9920
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_994f = call i32 @function_9956(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_9951

dec_label_pc_9951:                                ; preds = %bb, %dec_label_pc_9920
  %v4_994f = phi i32 [ %v3_994f, %bb ], [ 0, %dec_label_pc_9920 ]
  ret i32 %v4_994f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_9956(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9956:
  %v0_9957 = load i32, i32* @eax, align 4
  ret i32 %v0_9957
}

define i32 @_ZN5boost9exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9958:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38380.2236 to i32), i32* %arg1, align 4
  %v1_997b = add i32 %tmp100, 4
  store i32 %v1_997b, i32* @eax, align 4
  %v1_9981 = call i32 @function_1e3e2(i32 %v1_997b)
  %v1_9989 = add i32 %tmp100, 8
  %v2_9989 = inttoptr i32 %v1_9989 to i32*
  store i32 0, i32* %v2_9989, align 4
  %v1_9993 = add i32 %tmp100, 12
  %v2_9993 = inttoptr i32 %v1_9993 to i32*
  store i32 0, i32* %v2_9993, align 4
  %v1_999d = add i32 %tmp100, 16
  %v2_999d = inttoptr i32 %v1_999d to i32*
  store i32 -1, i32* %v2_999d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_99b0

bb:                                               ; preds = %dec_label_pc_9958
  %v1_99ae = call i32 @function_99b5()
  br label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %bb, %dec_label_pc_9958
  %v2_99ae = phi i32 [ %v1_99ae, %bb ], [ 0, %dec_label_pc_9958 ]
  ret i32 %v2_99ae

; uselistorder directives
  uselistorder i32 %tmp100, { 3, 2, 1, 0 }
}

define i32 @function_99b5() local_unnamed_addr {
dec_label_pc_99b5:
  %v0_99b6 = load i32, i32* @eax, align 4
  ret i32 %v0_99b6
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_99b8:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38380.2236 to i32), i32* %arg1, align 4
  %v1_99db = add i32 %tmp99, 4
  store i32 %v1_99db, i32* @eax, align 4
  %v1_99e1 = call i32 @function_1e476(i32 %v1_99db)
  %v1_99f0 = call i32 @function_9a14()
  ret i32 %tmp99
}

define i32 @function_99fd() local_unnamed_addr {
dec_label_pc_99fd:
  %v0_99fd = call i32 @function_9a14()
  ret i32 %v0_99fd

; uselistorder directives
  uselistorder i32 ()* @function_9a14, { 1, 0 }
}

define i32 @function_9a14() local_unnamed_addr {
dec_label_pc_9a14:
  %v0_9a14 = load i32, i32* @ebp, align 4
  %v1_9a14 = add i32 %v0_9a14, -12
  %v2_9a14 = inttoptr i32 %v1_9a14 to i32*
  %v3_9a14 = load i32, i32* %v2_9a14, align 4
  %v1_9a17 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_9a17 = xor i32 %v1_9a17, %v3_9a14
  %v3_9a17 = icmp eq i32 %v2_9a17, 0
  store i32 %v2_9a17, i32* @eax, align 4
  br i1 %v3_9a17, label %bb, label %dec_label_pc_9a20

bb:                                               ; preds = %dec_label_pc_9a14
  %v1_9a1e = call i32 @function_9a25()
  br label %dec_label_pc_9a20

dec_label_pc_9a20:                                ; preds = %bb, %dec_label_pc_9a14
  %v2_9a1e = phi i32 [ %v1_9a1e, %bb ], [ %v2_9a17, %dec_label_pc_9a14 ]
  ret i32 %v2_9a1e
}

define i32 @function_9a25() local_unnamed_addr {
dec_label_pc_9a25:
  %v0_9a26 = load i32, i32* @eax, align 4
  ret i32 %v0_9a26
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ada6:
  store i32 %arg1, i32* @eax, align 4
  %v1_adc3 = call i32 @function_1475e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_ade3() local_unnamed_addr {
dec_label_pc_ade3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ade3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_ade3 = add i32 %v0_ade3, -1
  store i32 %v1_ade3, i32* %ecx.global-to-local, align 4
  %v0_ade5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ade5
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_ade6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38368.2237 to i32), i32* %arg1, align 4
  %v2_ae10 = call i32 @function_ae1d(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_ae1d(i32 %arg1) local_unnamed_addr {
dec_label_pc_ae1d:
  %v0_ae1d = load i32, i32* @ebp, align 4
  %v1_ae1d = add i32 %v0_ae1d, -12
  %v2_ae1d = inttoptr i32 %v1_ae1d to i32*
  %v3_ae1d = load i32, i32* %v2_ae1d, align 4
  %v1_ae20 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_ae20 = xor i32 %v1_ae20, %v3_ae1d
  %v3_ae20 = icmp eq i32 %v2_ae20, 0
  store i32 %v2_ae20, i32* @eax, align 4
  br i1 %v3_ae20, label %bb, label %dec_label_pc_ae29

bb:                                               ; preds = %dec_label_pc_ae1d
  %v1_ae27 = call i32 @function_ae2e()
  br label %dec_label_pc_ae29

dec_label_pc_ae29:                                ; preds = %bb, %dec_label_pc_ae1d
  %v2_ae27 = phi i32 [ %v1_ae27, %bb ], [ %v2_ae20, %dec_label_pc_ae1d ]
  ret i32 %v2_ae27
}

define i32 @function_ae2e() local_unnamed_addr {
dec_label_pc_ae2e:
  %v0_ae2f = load i32, i32* @eax, align 4
  ret i32 %v0_ae2f
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ae30:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_ae4d = call i32 @function_15c16(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_ae6d() local_unnamed_addr {
dec_label_pc_ae6d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_ae6d = load i32, i32* %ecx.global-to-local, align 4
  %v1_ae6d = add i32 %v0_ae6d, -1
  store i32 %v1_ae6d, i32* %ecx.global-to-local, align 4
  %v0_ae6f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ae6f
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ae70:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_ae8e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_ae8e, i32* @eax, align 4
  store i32 %v2_ae8e, i32* %stack_var_-60, align 4
  %v1_ae94 = call i32 @function_1f8fa(i32 %v2_ae8e)
  %v1_ae9c = add i32 %arg2, 4
  store i32 %v1_ae9c, i32* @eax, align 4
  store i32 %v1_ae9c, i32* %stack_var_-60, align 4
  %v1_aea2 = call i32 @function_1f964(i32 %v1_ae9c)
  %v10_aeaa = icmp eq i32 %v1_aea2, 0
  br i1 %v10_aeaa, label %dec_label_pc_aee9, label %dec_label_pc_aeb0

dec_label_pc_aeb0:                                ; preds = %dec_label_pc_ae70
  %v2_aeba = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_aea2, i32* %edx.global-to-local, align 4
  store i32 %v2_aeba, i32* %stack_var_-60, align 4
  store i32 %v2_ae8e, i32* @eax, align 4
  store i32 %v2_ae8e, i32* %stack_var_-64, align 4
  %v3_aed9 = call i32 @function_1f994(i32 %v2_ae8e, i32 %v2_aeba, i32 %v1_aea2)
  store i32 %v2_aeba, i32* @eax, align 4
  store i32 %v2_aeba, i32* %stack_var_-64, align 4
  %v1_aee4 = call i32 @function_1f92e(i32 %v2_aeba)
  br label %dec_label_pc_aee9

dec_label_pc_aee9:                                ; preds = %dec_label_pc_aeb0, %dec_label_pc_ae70
  %stack_var_-56.0 = phi i32 [ %tmp97, %dec_label_pc_ae70 ], [ %v1_aea2, %dec_label_pc_aeb0 ]
  %v1_aeec = add i32 %arg2, 12
  %v2_aeec = inttoptr i32 %v1_aeec to i32*
  %v3_aeec = load i32, i32* %v2_aeec, align 4
  store i32 %v3_aeec, i32* %edx.global-to-local, align 4
  %v2_aef2 = add i32 %arg1, 12
  %v3_aef2 = inttoptr i32 %v2_aef2 to i32*
  store i32 %v3_aeec, i32* %v3_aef2, align 4
  %v1_aef8 = add i32 %arg2, 16
  %v2_aef8 = inttoptr i32 %v1_aef8 to i32*
  %v3_aef8 = load i32, i32* %v2_aef8, align 4
  store i32 %v3_aef8, i32* %edx.global-to-local, align 4
  %v2_aefe = add i32 %arg1, 16
  %v3_aefe = inttoptr i32 %v2_aefe to i32*
  store i32 %v3_aef8, i32* %v3_aefe, align 4
  %v1_af04 = add i32 %arg2, 8
  %v2_af04 = inttoptr i32 %v1_af04 to i32*
  %v3_af04 = load i32, i32* %v2_af04, align 4
  %v2_af0a = add i32 %arg1, 8
  %v3_af0a = inttoptr i32 %v2_af0a to i32*
  store i32 %v3_af04, i32* %v3_af0a, align 4
  %v1_af10 = add i32 %arg1, 4
  store i32 %v1_af10, i32* %edx.global-to-local, align 4
  store i32 %v2_ae8e, i32* @eax, align 4
  %v1_af16 = load i32, i32* @esp, align 4
  %v2_af16 = add i32 %v1_af16, 4
  %v3_af16 = inttoptr i32 %v2_af16 to i32*
  store i32 %v2_ae8e, i32* %v3_af16, align 4
  %v0_af1a = load i32, i32* %edx.global-to-local, align 4
  %v1_af1a = load i32, i32* @esp, align 4
  %v2_af1a = inttoptr i32 %v1_af1a to i32*
  store i32 %v0_af1a, i32* %v2_af1a, align 4
  %v0_af1d = load i32, i32* %stack_var_-64, align 4
  %v1_af1d = load i32, i32* %stack_var_-60, align 4
  %v3_af1d = call i32 @function_1f994(i32 %v0_af1d, i32 %v1_af1d, i32 %stack_var_-56.0)
  store i32 %v2_ae8e, i32* @eax, align 4
  %v1_af25 = load i32, i32* @esp, align 4
  %v2_af25 = inttoptr i32 %v1_af25 to i32*
  store i32 %v2_ae8e, i32* %v2_af25, align 4
  %v0_af28 = load i32, i32* %stack_var_-64, align 4
  %v1_af28 = call i32 @function_1f92e(i32 %v0_af28)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_af39

bb:                                               ; preds = %dec_label_pc_aee9
  %v1_af37 = call i32 @function_af66()
  store i32 %v1_af37, i32* @eax, align 4
  br label %dec_label_pc_af39

dec_label_pc_af39:                                ; preds = %bb, %dec_label_pc_aee9
  %v0_af39 = call i32 @function_af61()
  ret i32 %v0_af39

; uselistorder directives
  uselistorder i32 %v2_aeba, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_ae8e, { 3, 4, 5, 6, 1, 0, 2, 8, 7, 9 }
  uselistorder i32 (i32, i32, i32)* @function_1f994, { 1, 0 }
}

define i32 @function_af3b() local_unnamed_addr {
dec_label_pc_af3b:
  %eax.global-to-local = alloca i32, align 4
  %v0_af3b = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_af3b, i32* @ebx, align 4
  %v0_af3d = load i32, i32* @ebp, align 4
  %v1_af3d = add i32 %v0_af3d, -20
  store i32 %v1_af3d, i32* @eax, align 4
  %v1_af43 = call i32 @function_1f92e(i32 %v1_af3d)
  store i32 %v1_af43, i32* %eax.global-to-local, align 4
  %v0_af48 = call i32 @function_af4c()
  store i32 %v0_af48, i32* %eax.global-to-local, align 4
  ret i32 %v0_af48
}

define i32 @function_af4a() local_unnamed_addr {
dec_label_pc_af4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_af4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_af4a
}

define i32 @function_af4c() local_unnamed_addr {
dec_label_pc_af4c:
  %v0_af4c = load i32, i32* @ebp, align 4
  %v1_af4c = add i32 %v0_af4c, -24
  store i32 %v1_af4c, i32* @eax, align 4
  %v1_af52 = call i32 @function_1f92e(i32 %v1_af4c)
  %v0_af57 = load i32, i32* @ebx, align 4
  ret i32 %v0_af57

; uselistorder directives
  uselistorder i32 (i32)* @function_1f92e, { 3, 2, 1, 0 }
}

define i32 @function_af61() local_unnamed_addr {
dec_label_pc_af61:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_af66() local_unnamed_addr {
dec_label_pc_af66:
  %v0_af6a = load i32, i32* @eax, align 4
  ret i32 %v0_af6a
}

define i32 @_ZN5boost36throw_exception_assert_compatibilityERKSt9exception(i32 %arg1) local_unnamed_addr {
dec_label_pc_af6b:
  ret i32 0
}

define i32 @_ZN5boost16thread_exceptionC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_af96:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_afb3 = call i32 @function_13e10(i32 %tmp100)
  store i32 ptrtoint (%vtable_38350_type* @global_var_38350.2238 to i32), i32* %arg1, align 4
  %v1_afc4 = add i32 %tmp100, 4
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  store i32 0, i32* %v2_afc4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZN5boost16thread_exceptionC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_afde:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_b001 = call i32 @function_13e58(i32 %tmp102)
  store i32 ptrtoint (%vtable_38350_type* @global_var_38350.2238 to i32), i32* %arg1, align 4
  %v2_b015 = add i32 %tmp102, 4
  %v3_b015 = inttoptr i32 %v2_b015 to i32*
  store i32 %arg2, i32* %v3_b015, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b024

bb:                                               ; preds = %dec_label_pc_afde
  %v1_b022 = call i32 @function_b029()
  br label %dec_label_pc_b024

dec_label_pc_b024:                                ; preds = %bb, %dec_label_pc_afde
  %v2_b022 = phi i32 [ %v1_b022, %bb ], [ 0, %dec_label_pc_afde ]
  ret i32 %v2_b022

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_b029() local_unnamed_addr {
dec_label_pc_b029:
  %v0_b02a = load i32, i32* @eax, align 4
  ret i32 %v0_b02a
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_b02c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38350_type* @global_var_38350.2238 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_b07e() local_unnamed_addr {
dec_label_pc_b07e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_b07e = load i32, i32* %ecx.global-to-local, align 4
  %v1_b07e = add i32 %v0_b07e, -1
  store i32 %v1_b07e, i32* %ecx.global-to-local, align 4
  %v0_b080 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b080
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32 %arg1) {
dec_label_pc_b082:
  store i32 %arg1, i32* @eax, align 4
  %v1_b09f = call i32 @function_160ae(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_b0ae() local_unnamed_addr {
dec_label_pc_b0ae:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_b0ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_b0ae = add i32 %v0_b0ae, 862319685
  %v2_b0ae = inttoptr i32 %v1_b0ae to i32*
  %v3_b0ae = load i32, i32* %v2_b0ae, align 4
  %v4_b0ae = add i32 %v3_b0ae, -1
  store i32 %v4_b0ae, i32* %v2_b0ae, align 4
  %v0_b0b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_b0b4 = add i32 %v0_b0b4, 20
  store i32 %v1_b0b4, i32* %eax.global-to-local, align 4
  ret i32 %v1_b0b4
}

define i32 @_ZN5boost10lock_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_b0c2:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_b0df = call i32 @function_16058(i32 %tmp100)
  store i32 ptrtoint (%vtable_38338_type* @global_var_38338.2239 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b0f9

bb:                                               ; preds = %dec_label_pc_b0c2
  %v1_b0f7 = call i32 @function_b0fe()
  br label %dec_label_pc_b0f9

dec_label_pc_b0f9:                                ; preds = %bb, %dec_label_pc_b0c2
  %v2_b0f7 = phi i32 [ %v1_b0f7, %bb ], [ 0, %dec_label_pc_b0c2 ]
  ret i32 %v2_b0f7
}

define i32 @function_b0fe() local_unnamed_addr {
dec_label_pc_b0fe:
  %v0_b0ff = load i32, i32* @eax, align 4
  ret i32 %v0_b0ff
}

define i32 @_ZN5boost10lock_errorC1Ei(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b100:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_b12a = call i32 @function_160de(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38338_type* @global_var_38338.2239 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_b144

bb:                                               ; preds = %dec_label_pc_b100
  %v1_b142 = call i32 @function_b149()
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %bb, %dec_label_pc_b100
  %v2_b142 = phi i32 [ %v1_b142, %bb ], [ 0, %dec_label_pc_b100 ]
  ret i32 %v2_b142

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_b149() local_unnamed_addr {
dec_label_pc_b149:
  %v0_b14a = load i32, i32* @eax, align 4
  ret i32 %v0_b14a
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_b14c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38338_type* @global_var_38338.2239 to i32), i32* %arg1, align 4
  %v1_b172 = call i32 @function_16178(i32 %tmp99)
  %v1_b181 = call i32 @function_b18e()
  ret i32 %tmp99
}

define i32 @function_b18e() local_unnamed_addr {
dec_label_pc_b18e:
  %v0_b18e = load i32, i32* @ebp, align 4
  %v1_b18e = add i32 %v0_b18e, -12
  %v2_b18e = inttoptr i32 %v1_b18e to i32*
  %v3_b18e = load i32, i32* %v2_b18e, align 4
  %v1_b191 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_b191 = xor i32 %v1_b191, %v3_b18e
  %v3_b191 = icmp eq i32 %v2_b191, 0
  store i32 %v2_b191, i32* @eax, align 4
  br i1 %v3_b191, label %bb, label %dec_label_pc_b19a

bb:                                               ; preds = %dec_label_pc_b18e
  %v1_b198 = call i32 @function_b19f()
  br label %dec_label_pc_b19a

dec_label_pc_b19a:                                ; preds = %bb, %dec_label_pc_b18e
  %v2_b198 = phi i32 [ %v1_b198, %bb ], [ %v2_b191, %dec_label_pc_b18e ]
  ret i32 %v2_b198
}

define i32 @function_b19f() local_unnamed_addr {
dec_label_pc_b19f:
  %v0_b1a0 = load i32, i32* @eax, align 4
  ret i32 %v0_b1a0
}

define i32 @_ZN5boost10lock_errorD0Ev(i32 %arg1) {
dec_label_pc_b1a2:
  store i32 %arg1, i32* @eax, align 4
  %v1_b1bf = call i32 @function_162ee(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_b1df() local_unnamed_addr {
dec_label_pc_b1df:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_b1df = load i32, i32* %ecx.global-to-local, align 4
  %v1_b1df = add i32 %v0_b1df, -1
  store i32 %v1_b1df, i32* %ecx.global-to-local, align 4
  %v0_b1e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b1e1
}

define i32 @_ZNK5boost10lock_error4whatEv(i32 %arg1) {
dec_label_pc_ef72:
  store i32 ptrtoint ([18 x i8]* @global_var_b1f0.2240 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ef9a

bb:                                               ; preds = %dec_label_pc_ef72
  %v2_ef98 = call i32 @function_ef9f(i32 %arg1)
  br label %dec_label_pc_ef9a

dec_label_pc_ef9a:                                ; preds = %bb, %dec_label_pc_ef72
  %v3_ef98 = phi i32 [ %v2_ef98, %bb ], [ ptrtoint ([18 x i8]* @global_var_b1f0.2240 to i32), %dec_label_pc_ef72 ]
  ret i32 %v3_ef98
}

define i32 @function_ef9f(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef9f:
  %v0_efa0 = load i32, i32* @eax, align 4
  ret i32 %v0_efa0
}

define i32 @_ZN5boost21thread_resource_errorC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_efa2:
  store i32 ptrtoint (%vtable_38320_type* @global_var_38320.2241 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_efd9

bb:                                               ; preds = %dec_label_pc_efa2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_efd7 = call i32 @function_efde(i32 %tmp100)
  br label %dec_label_pc_efd9

dec_label_pc_efd9:                                ; preds = %bb, %dec_label_pc_efa2
  %v3_efd7 = phi i32 [ %v2_efd7, %bb ], [ 0, %dec_label_pc_efa2 ]
  ret i32 %v3_efd7

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_efde(i32 %arg1) local_unnamed_addr {
dec_label_pc_efde:
  %v0_efdf = load i32, i32* @eax, align 4
  ret i32 %v0_efdf
}

define i32 @_ZN5boost21thread_resource_errorD1Ev(i32* %arg1) {
dec_label_pc_efe0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38320_type* @global_var_38320.2241 to i32), i32* %arg1, align 4
  %v2_f015 = call i32 @function_f022(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_f022(i32 %arg1) local_unnamed_addr {
dec_label_pc_f022:
  %v0_f022 = load i32, i32* @ebp, align 4
  %v1_f022 = add i32 %v0_f022, -12
  %v2_f022 = inttoptr i32 %v1_f022 to i32*
  %v3_f022 = load i32, i32* %v2_f022, align 4
  %v1_f025 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f025 = xor i32 %v1_f025, %v3_f022
  %v3_f025 = icmp eq i32 %v2_f025, 0
  store i32 %v2_f025, i32* @eax, align 4
  br i1 %v3_f025, label %bb, label %dec_label_pc_f02e

bb:                                               ; preds = %dec_label_pc_f022
  %v1_f02c = call i32 @function_f033()
  br label %dec_label_pc_f02e

dec_label_pc_f02e:                                ; preds = %bb, %dec_label_pc_f022
  %v2_f02c = phi i32 [ %v1_f02c, %bb ], [ %v2_f025, %dec_label_pc_f022 ]
  ret i32 %v2_f02c
}

define i32 @function_f033() local_unnamed_addr {
dec_label_pc_f033:
  %v0_f034 = load i32, i32* @eax, align 4
  ret i32 %v0_f034
}

define i32 @_ZN5boost21thread_resource_errorD0Ev(i32 %arg1) {
dec_label_pc_f036:
  store i32 %arg1, i32* @eax, align 4
  %v1_f053 = call i32 @function_1e016(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f06f

bb:                                               ; preds = %dec_label_pc_f036
  %v2_f06d = call i32 @function_f074(i32 %arg1)
  br label %dec_label_pc_f06f

dec_label_pc_f06f:                                ; preds = %bb, %dec_label_pc_f036
  %v3_f06d = phi i32 [ %v2_f06d, %bb ], [ 0, %dec_label_pc_f036 ]
  ret i32 %v3_f06d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_f074(i32 %arg1) local_unnamed_addr {
dec_label_pc_f074:
  %v0_f075 = load i32, i32* @eax, align 4
  ret i32 %v0_f075
}

define i32 @_ZNK5boost21thread_resource_error4whatEv(i32 %arg1) {
dec_label_pc_f076:
  store i32 ptrtoint ([29 x i8]* @global_var_b202.2242 to i32), i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f09e

bb:                                               ; preds = %dec_label_pc_f076
  %v2_f09c = call i32 @function_f0a3(i32 %arg1)
  br label %dec_label_pc_f09e

dec_label_pc_f09e:                                ; preds = %bb, %dec_label_pc_f076
  %v3_f09c = phi i32 [ %v2_f09c, %bb ], [ ptrtoint ([29 x i8]* @global_var_b202.2242 to i32), %dec_label_pc_f076 ]
  ret i32 %v3_f09c
}

define i32 @function_f0a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_f0a3:
  %v0_f0a4 = load i32, i32* @eax, align 4
  ret i32 %v0_f0a4
}

define i32 @_ZN5boost6detail23atomic_exchange_and_addEPii(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f0a5:
  %v2_f0ce = load i32, i32* %arg1, align 4
  %v4_f0ce = add i32 %v2_f0ce, %arg2
  store i32 %v4_f0ce, i32* %arg1, align 4
  store i32 %v2_f0ce, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f0e4

bb:                                               ; preds = %dec_label_pc_f0a5
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_f0e2 = call i32 @function_f0e9(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_f0e4

dec_label_pc_f0e4:                                ; preds = %bb, %dec_label_pc_f0a5
  %v4_f0e2 = phi i32 [ %v3_f0e2, %bb ], [ %v2_f0ce, %dec_label_pc_f0a5 ]
  ret i32 %v4_f0e2

; uselistorder directives
  uselistorder i32 %v2_f0ce, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_f0e9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f0e9:
  %v0_f0ee = load i32, i32* @eax, align 4
  ret i32 %v0_f0ee
}

define i32 @_ZN5boost6detail16atomic_incrementEPi(i32* %arg1) local_unnamed_addr {
dec_label_pc_f0ef:
  %v2_f10c = load i32, i32* %arg1, align 4
  %v3_f10c = add i32 %v2_f10c, 1
  store i32 %v3_f10c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f11b

bb:                                               ; preds = %dec_label_pc_f0ef
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_f119 = call i32 @function_f120(i32 %tmp100)
  br label %dec_label_pc_f11b

dec_label_pc_f11b:                                ; preds = %bb, %dec_label_pc_f0ef
  %v3_f119 = phi i32 [ %v2_f119, %bb ], [ 0, %dec_label_pc_f0ef ]
  ret i32 %v3_f119

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_f120(i32 %arg1) local_unnamed_addr {
dec_label_pc_f120:
  %v0_f121 = load i32, i32* @eax, align 4
  ret i32 %v0_f121
}

define i32 @_ZN5boost6detail15sp_counted_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_f122:
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38300.2243 to i32), i32* %arg1, align 4
  %v1_f145 = add i32 %tmp100, 4
  %v2_f145 = inttoptr i32 %v1_f145 to i32*
  store i32 1, i32* %v2_f145, align 4
  %v1_f14f = add i32 %tmp100, 8
  %v2_f14f = inttoptr i32 %v1_f14f to i32*
  store i32 1, i32* %v2_f14f, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp100, { 1, 0 }
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_f16a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38300.2243 to i32), i32* %arg1, align 4
  %v2_f194 = call i32 @function_f1a1(i32 %tmp99)
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %tmp99, { 1, 0 }
}

define i32 @function_f1a1(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1a1:
  %v0_f1a1 = load i32, i32* @ebp, align 4
  %v1_f1a1 = add i32 %v0_f1a1, -12
  %v2_f1a1 = inttoptr i32 %v1_f1a1 to i32*
  %v3_f1a1 = load i32, i32* %v2_f1a1, align 4
  %v1_f1a4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_f1a4 = xor i32 %v1_f1a4, %v3_f1a1
  %v3_f1a4 = icmp eq i32 %v2_f1a4, 0
  store i32 %v2_f1a4, i32* @eax, align 4
  br i1 %v3_f1a4, label %bb, label %dec_label_pc_f1ad

bb:                                               ; preds = %dec_label_pc_f1a1
  %v1_f1ab = call i32 @function_f1b2()
  br label %dec_label_pc_f1ad

dec_label_pc_f1ad:                                ; preds = %bb, %dec_label_pc_f1a1
  %v2_f1ab = phi i32 [ %v1_f1ab, %bb ], [ %v2_f1a4, %dec_label_pc_f1a1 ]
  ret i32 %v2_f1ab
}

define i32 @function_f1b2() local_unnamed_addr {
dec_label_pc_f1b2:
  %v0_f1b3 = load i32, i32* @eax, align 4
  ret i32 %v0_f1b3
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f1b4:
  store i32 %arg1, i32* @eax, align 4
  %v1_f1d1 = call i32 @function_1e31e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_f1f1() local_unnamed_addr {
dec_label_pc_f1f1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f1f1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f1f1 = add i32 %v0_f1f1, -1
  store i32 %v1_f1f1, i32* %ecx.global-to-local, align 4
  %v0_f1f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f1f3
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_f1f4:
  %v10_f20b = icmp eq i32* %arg1, null
  br i1 %v10_f20b, label %dec_label_pc_f223, label %dec_label_pc_f211

dec_label_pc_f211:                                ; preds = %dec_label_pc_f1f4
  br label %dec_label_pc_f223

dec_label_pc_f223:                                ; preds = %dec_label_pc_f211, %dec_label_pc_f1f4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f22f

bb:                                               ; preds = %dec_label_pc_f223
  %v1_f22d = call i32 @function_f234()
  br label %dec_label_pc_f22f

dec_label_pc_f22f:                                ; preds = %bb, %dec_label_pc_f223
  %v2_f22d = phi i32 [ %v1_f22d, %bb ], [ 0, %dec_label_pc_f223 ]
  ret i32 %v2_f22d
}

define i32 @function_f234() local_unnamed_addr {
dec_label_pc_f234:
  %v0_f235 = load i32, i32* @eax, align 4
  ret i32 %v0_f235
}

define i32 @_ZN5boost6detail15sp_counted_base12add_ref_copyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f236:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f267

bb:                                               ; preds = %dec_label_pc_f236
  %v1_f250 = add i32 %arg1, 4
  %v2_f265 = call i32 @function_f26c(i32 %v1_f250)
  br label %dec_label_pc_f267

dec_label_pc_f267:                                ; preds = %bb, %dec_label_pc_f236
  %v3_f265 = phi i32 [ %v2_f265, %bb ], [ 0, %dec_label_pc_f236 ]
  ret i32 %v3_f265
}

define i32 @function_f26c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f26c:
  %v0_f26d = load i32, i32* @eax, align 4
  ret i32 %v0_f26d
}

define i32 @_ZN5boost6detail15sp_counted_base7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f26e:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_f288 = add i32 %tmp102, 4
  store i32 %v1_f288, i32* @eax, align 4
  %v2_f296 = call i32 @function_1e313(i32 %v1_f288, i32 -1)
  %v10_f29b = icmp eq i32 %v2_f296, 1
  %v5_f2a1 = icmp eq i1 %v10_f29b, false
  br i1 %v5_f2a1, label %dec_label_pc_f2c2, label %dec_label_pc_f2a5

dec_label_pc_f2a5:                                ; preds = %dec_label_pc_f26e
  %v1_f2bd = call i32 @function_1e544(i32 %tmp102)
  br label %dec_label_pc_f2c2

dec_label_pc_f2c2:                                ; preds = %dec_label_pc_f2a5, %dec_label_pc_f26e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f2ce

bb:                                               ; preds = %dec_label_pc_f2c2
  %v1_f2cc = call i32 @function_f2d3()
  br label %dec_label_pc_f2ce

dec_label_pc_f2ce:                                ; preds = %bb, %dec_label_pc_f2c2
  %v2_f2cc = phi i32 [ %v1_f2cc, %bb ], [ 0, %dec_label_pc_f2c2 ]
  ret i32 %v2_f2cc
}

define i32 @function_f2d3() local_unnamed_addr {
dec_label_pc_f2d3:
  %v0_f2d4 = load i32, i32* @eax, align 4
  ret i32 %v0_f2d4
}

define i32 @_ZN5boost6detail15sp_counted_base12weak_releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f2d6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_f2f0 = add i32 %tmp102, 8
  store i32 %v1_f2f0, i32* @eax, align 4
  %v2_f2fe = call i32 @function_1e37b(i32 %v1_f2f0, i32 -1)
  %v10_f303 = icmp eq i32 %v2_f2fe, 1
  %v5_f309 = icmp eq i1 %v10_f303, false
  br i1 %v5_f309, label %dec_label_pc_f31f, label %dec_label_pc_f30d

dec_label_pc_f30d:                                ; preds = %dec_label_pc_f2d6
  br label %dec_label_pc_f31f

dec_label_pc_f31f:                                ; preds = %dec_label_pc_f30d, %dec_label_pc_f2d6
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f32b

bb:                                               ; preds = %dec_label_pc_f31f
  %v1_f329 = call i32 @function_f330()
  br label %dec_label_pc_f32b

dec_label_pc_f32b:                                ; preds = %bb, %dec_label_pc_f31f
  %v2_f329 = phi i32 [ %v1_f329, %bb ], [ 0, %dec_label_pc_f31f ]
  ret i32 %v2_f329
}

define i32 @function_f330() local_unnamed_addr {
dec_label_pc_f330:
  %v0_f331 = load i32, i32* @eax, align 4
  ret i32 %v0_f331
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_f332:
  %v2_f34c = load i32, i32* %arg1, align 4
  %v1_f34e = icmp eq i32 %v2_f34c, 0
  br i1 %v1_f34e, label %dec_label_pc_f35f, label %dec_label_pc_f352

dec_label_pc_f352:                                ; preds = %dec_label_pc_f332
  %v2_f355 = load i32, i32* %arg1, align 4
  store i32 %v2_f355, i32* @eax, align 4
  %v1_f35a = call i32 @function_1e5a0(i32 %v2_f355)
  br label %dec_label_pc_f35f

dec_label_pc_f35f:                                ; preds = %dec_label_pc_f352, %dec_label_pc_f332
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f36b

bb:                                               ; preds = %dec_label_pc_f35f
  %v1_f369 = call i32 @function_f370()
  br label %dec_label_pc_f36b

dec_label_pc_f36b:                                ; preds = %bb, %dec_label_pc_f35f
  %v2_f369 = phi i32 [ %v1_f369, %bb ], [ 0, %dec_label_pc_f35f ]
  ret i32 %v2_f369
}

define i32 @function_f370() local_unnamed_addr {
dec_label_pc_f370:
  %v0_f371 = load i32, i32* @eax, align 4
  ret i32 %v0_f371
}

define i32 @_ZN5boost6detail12shared_countC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f372:
  %v1_f392 = inttoptr i32 %arg2 to i32*
  %v2_f392 = load i32, i32* %v1_f392, align 4
  store i32 %v2_f392, i32* %arg1, align 4
  %v1_f39e = icmp eq i32 %v2_f392, 0
  br i1 %v1_f39e, label %dec_label_pc_f3af, label %dec_label_pc_f3a2

dec_label_pc_f3a2:                                ; preds = %dec_label_pc_f372
  br label %dec_label_pc_f3af

dec_label_pc_f3af:                                ; preds = %dec_label_pc_f3a2, %dec_label_pc_f372
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f3bb

bb:                                               ; preds = %dec_label_pc_f3af
  %v1_f3b9 = call i32 @function_f3c0()
  br label %dec_label_pc_f3bb

dec_label_pc_f3bb:                                ; preds = %bb, %dec_label_pc_f3af
  %v2_f3b9 = phi i32 [ %v1_f3b9, %bb ], [ 0, %dec_label_pc_f3af ]
  ret i32 %v2_f3b9
}

define i32 @function_f3c0() local_unnamed_addr {
dec_label_pc_f3c0:
  %v0_f3c1 = load i32, i32* @eax, align 4
  ret i32 %v0_f3c1
}

define i32 @_ZN5boost6detail26sp_enable_shared_from_thisEz() local_unnamed_addr {
dec_label_pc_f3c2:
  %v0_f3c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f3df

bb:                                               ; preds = %dec_label_pc_f3c2
  %v2_f3dd = call i32 @function_f3e4(i32 %v0_f3c8)
  br label %dec_label_pc_f3df

dec_label_pc_f3df:                                ; preds = %bb, %dec_label_pc_f3c2
  %v3_f3dd = phi i32 [ %v2_f3dd, %bb ], [ 0, %dec_label_pc_f3c2 ]
  ret i32 %v3_f3dd
}

define i32 @function_f3e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_f3e4:
  %v0_f3e5 = load i32, i32* @eax, align 4
  ret i32 %v0_f3e5
}

define i32 @_ZNSt14numeric_limitsItE3maxEv() local_unnamed_addr {
dec_label_pc_f3e6:
  %v0_f3ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f408

bb:                                               ; preds = %dec_label_pc_f3e6
  %v2_f406 = call i32 @function_f40d(i32 %v0_f3ec)
  br label %dec_label_pc_f408

dec_label_pc_f408:                                ; preds = %bb, %dec_label_pc_f3e6
  %v3_f406 = phi i32 [ %v2_f406, %bb ], [ -1, %dec_label_pc_f3e6 ]
  ret i32 %v3_f406
}

define i32 @function_f40d(i32 %arg1) local_unnamed_addr {
dec_label_pc_f40d:
  %v0_f40e = load i32, i32* @eax, align 4
  ret i32 %v0_f40e
}

define i32 @_ZNSt14numeric_limitsIiE3minEv() local_unnamed_addr {
dec_label_pc_f40f:
  %v0_f415 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -2147483648, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f431

bb:                                               ; preds = %dec_label_pc_f40f
  %v2_f42f = call i32 @function_f436(i32 %v0_f415)
  br label %dec_label_pc_f431

dec_label_pc_f431:                                ; preds = %bb, %dec_label_pc_f40f
  %v3_f42f = phi i32 [ %v2_f42f, %bb ], [ -2147483648, %dec_label_pc_f40f ]
  ret i32 %v3_f42f
}

define i32 @function_f436(i32 %arg1) local_unnamed_addr {
dec_label_pc_f436:
  %v0_f437 = load i32, i32* @eax, align 4
  ret i32 %v0_f437
}

define i32 @_ZNSt14numeric_limitsIiE3maxEv() local_unnamed_addr {
dec_label_pc_f438:
  %v0_f43e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 2147483647, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f45a

bb:                                               ; preds = %dec_label_pc_f438
  %v2_f458 = call i32 @function_f45f(i32 %v0_f43e)
  br label %dec_label_pc_f45a

dec_label_pc_f45a:                                ; preds = %bb, %dec_label_pc_f438
  %v3_f458 = phi i32 [ %v2_f458, %bb ], [ 2147483647, %dec_label_pc_f438 ]
  ret i32 %v3_f458
}

define i32 @function_f45f(i32 %arg1) local_unnamed_addr {
dec_label_pc_f45f:
  %v0_f460 = load i32, i32* @eax, align 4
  ret i32 %v0_f460
}

define i32 @_ZNSt14numeric_limitsIjE3maxEv() local_unnamed_addr {
dec_label_pc_f461:
  %v0_f467 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 -1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f483

bb:                                               ; preds = %dec_label_pc_f461
  %v2_f481 = call i32 @function_f488(i32 %v0_f467)
  br label %dec_label_pc_f483

dec_label_pc_f483:                                ; preds = %bb, %dec_label_pc_f461
  %v3_f481 = phi i32 [ %v2_f481, %bb ], [ -1, %dec_label_pc_f461 ]
  ret i32 %v3_f481
}

define i32 @function_f488(i32 %arg1) local_unnamed_addr {
dec_label_pc_f488:
  %v0_f489 = load i32, i32* @eax, align 4
  ret i32 %v0_f489
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC1EP15pthread_mutex_t(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f48a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_f4b2 = add i32 %tmp101, 4
  %v2_f4b2 = inttoptr i32 %v1_f4b2 to i8*
  store i8 1, i8* %v2_f4b2, align 1
  %v2_f4b9 = load i32, i32* %arg1, align 4
  ret i32 %v2_f4b9
}

define i32 @function_f4fb() local_unnamed_addr {
dec_label_pc_f4fb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f4fb = load i32, i32* %ecx.global-to-local, align 4
  %v1_f4fb = add i32 %v0_f4fb, -1
  store i32 %v1_f4fb, i32* %ecx.global-to-local, align 4
  %v0_f4fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f4fd
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lock6unlockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_f4fe:
  %v2_f518 = load i32, i32* %arg1, align 4
  ret i32 %v2_f518
}

define i32 @function_f561() local_unnamed_addr {
dec_label_pc_f561:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f561 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f561 = add i32 %v0_f561, -1
  store i32 %v1_f561, i32* %ecx.global-to-local, align 4
  %v0_f563 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f563
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f564:
  %v1_f57e = add i32 %arg1, 4
  %v2_f57e = inttoptr i32 %v1_f57e to i8*
  %v3_f57e = load i8, i8* %v2_f57e, align 1
  %v5_f582 = icmp eq i8 %v3_f57e, 0
  br i1 %v5_f582, label %dec_label_pc_f591, label %dec_label_pc_f586

dec_label_pc_f586:                                ; preds = %dec_label_pc_f564
  %v1_f58c = inttoptr i32 %arg1 to i8*
  %v2_f58c = call i32 @function_1ea62(i8* %v1_f58c)
  br label %dec_label_pc_f591

dec_label_pc_f591:                                ; preds = %dec_label_pc_f586, %dec_label_pc_f564
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f59d

bb:                                               ; preds = %dec_label_pc_f591
  %v1_f59b = call i32 @function_f5a2()
  br label %dec_label_pc_f59d

dec_label_pc_f59d:                                ; preds = %bb, %dec_label_pc_f591
  %v2_f59b = phi i32 [ %v1_f59b, %bb ], [ 0, %dec_label_pc_f591 ]
  ret i32 %v2_f59b
}

define i32 @function_f5a2() local_unnamed_addr {
dec_label_pc_f5a2:
  %v0_f5a3 = load i32, i32* @eax, align 4
  ret i32 %v0_f5a3
}

define i32 @_ZN5boost5mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5a4:
  %stack_var_-28 = alloca i32, align 4
  %v10_f5d2 = icmp eq i32 %arg1, 0
  br i1 %v10_f5d2, label %dec_label_pc_f605, label %dec_label_pc_f5d8

dec_label_pc_f5d8:                                ; preds = %dec_label_pc_f5a4
  %v2_f5d8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_f5e9 = call i32 @function_242f1(i32 %v2_f5d8, i32 0)
  store i32 %v2_f5e9, i32* @ebx, align 4
  %v1_f5f6 = call i32 @function_1e584(i32 %v2_f5d8)
  br label %dec_label_pc_f605

dec_label_pc_f605:                                ; preds = %dec_label_pc_f5d8, %dec_label_pc_f5a4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f611

bb:                                               ; preds = %dec_label_pc_f605
  %v1_f60f = call i32 @function_f616()
  br label %dec_label_pc_f611

dec_label_pc_f611:                                ; preds = %bb, %dec_label_pc_f605
  %v2_f60f = phi i32 [ %v1_f60f, %bb ], [ 0, %dec_label_pc_f605 ]
  ret i32 %v2_f60f
}

define i32 @function_f616() local_unnamed_addr {
dec_label_pc_f616:
  %v0_f61b = load i32, i32* @eax, align 4
  ret i32 %v0_f61b
}

define i32 @_ZN5boost5mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f61c:
  ret i32 %arg1
}

define i32 @function_f676() local_unnamed_addr {
dec_label_pc_f676:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f676 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f676 = add i32 %v0_f676, -1
  store i32 %v1_f676, i32* %ecx.global-to-local, align 4
  %v0_f678 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f678
}

define i32 @_ZN5boost5mutex4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f67a:
  ret i32 %arg1
}

define i32 @function_f6ac() local_unnamed_addr {
dec_label_pc_f6ac:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_f6ac = load i32, i32* %eax.global-to-local, align 4
  %v2_f6ac = add i32 %v0_f6ac, zext (i8 ptrtoint (i8* @global_var_8d.2244 to i8) to i32)
  %v16_f6ac = and i32 %v2_f6ac, 255
  %v18_f6ac = and i32 %v0_f6ac, -256
  %v19_f6ac = or i32 %v16_f6ac, %v18_f6ac
  store i32 %v19_f6ac, i32* %eax.global-to-local, align 4
  %v0_f6ae = load i32, i32* %ebp.global-to-local, align 4
  %v1_f6ae = add i32 %v0_f6ae, 1
  store i32 %v1_f6ae, i32* %ebp.global-to-local, align 4
  %v0_f6af = call i32 @unknown_e824fb3d()
  store i32 %v0_f6af, i32* %eax.global-to-local, align 4
  ret i32 %v0_f6af

; uselistorder directives
  uselistorder i32 %v0_f6ac, { 1, 0 }
}

define i32 @function_f6c4() local_unnamed_addr {
dec_label_pc_f6c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_f6c4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f6c4
}

define i32 @function_f6ea() local_unnamed_addr {
dec_label_pc_f6ea:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_f6ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_f6ea = add i32 %v0_f6ea, 1566258372
  %v2_f6ea = inttoptr i32 %v1_f6ea to i32*
  %v3_f6ea = load i32, i32* %v2_f6ea, align 4
  %v4_f6ea = add i32 %v3_f6ea, 1
  store i32 %v4_f6ea, i32* %v2_f6ea, align 4
  %v0_f6f0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f6f0
}

define i32 @_ZN5boost5mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_f6f2:
  ret i32 %arg1
}

define i32 @function_f71b() local_unnamed_addr {
dec_label_pc_f71b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_38 = alloca i32, align 4
  %stack_var_2 = alloca i32, align 4
  %v0_f71b = load i32, i32* %eax.global-to-local, align 4
  %v2_f71b = or i32 %v0_f71b, 221
  %v0_f71f = load i32, i32* %ebx.global-to-local, align 4
  %v1_f71f = udiv i32 %v0_f71f, 256
  %v5_f71f = add i32 %v1_f71f, %v2_f71b
  %v15_f729 = ptrtoint i32* %stack_var_2 to i32
  %v0_f72d = load i32, i32* %edx.global-to-local, align 4
  %v1_f72d = and i32 %v0_f72d, -256
  store i32 %v1_f72d, i32* %edx.global-to-local, align 4
  %v5_f72f = add i32 %v5_f71f, %v15_f729
  %v20_f72f = mul i32 %v5_f72f, 256
  %v22_f72f = and i32 %v20_f72f, 65280
  %v23_f72f = and i32 %v0_f71f, -65281
  %v24_f72f = or i32 %v23_f72f, %v22_f72f
  store i32 %v24_f72f, i32* %ebx.global-to-local, align 4
  %v20_f731 = ptrtoint i32* %stack_var_38 to i32
  store i32 %v20_f731, i32* %eax.global-to-local, align 4
  ret i32 %v20_f731

; uselistorder directives
  uselistorder i32 %v0_f71f, { 1, 0 }
}

define i32 @function_f74c() local_unnamed_addr {
dec_label_pc_f74c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f74c = load i32, i32* %ecx.global-to-local, align 4
  %v1_f74c = add i32 %v0_f74c, -1
  store i32 %v1_f74c, i32* %ecx.global-to-local, align 4
  %v0_f74e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f74e
}

define i32 @_ZN16MemoryPageLocker4LockEPKvj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f750:
  ret i32 %arg2
}

define i32 @function_f79a() local_unnamed_addr {
dec_label_pc_f79a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f79a = load i32, i32* %ecx.global-to-local, align 4
  %v1_f79a = add i32 %v0_f79a, -1
  store i32 %v1_f79a, i32* %ecx.global-to-local, align 4
  %v0_f79c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f79c
}

define i32 @_ZN16MemoryPageLocker6UnlockEPKvj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f79e:
  ret i32 %arg2
}

define i32 @function_f7e8() local_unnamed_addr {
dec_label_pc_f7e8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f7e8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f7e8 = add i32 %v0_f7e8, -1
  store i32 %v1_f7e8, i32* %ecx.global-to-local, align 4
  %v0_f7ea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f7ea
}

define i32 @_ZN5boost6tuples6detail2ltINS0_9null_typeES3_EEbRKT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f7eb:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f819

bb:                                               ; preds = %dec_label_pc_f7eb
  %v3_f817 = call i32 @function_f81e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_f819

dec_label_pc_f819:                                ; preds = %bb, %dec_label_pc_f7eb
  %v4_f817 = phi i32 [ %v3_f817, %bb ], [ 0, %dec_label_pc_f7eb ]
  ret i32 %v4_f817
}

define i32 @function_f81e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f81e:
  %v0_f81f = load i32, i32* @eax, align 4
  ret i32 %v0_f81f
}

define i32 @_ZN9CFlatDataC1EPvS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f820:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_f851 = add i32 %tmp104, 4
  %v3_f851 = inttoptr i32 %v2_f851 to i32*
  store i32 %arg3, i32* %v3_f851, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f860

bb:                                               ; preds = %dec_label_pc_f820
  %v4_f85e = call i32 @function_f865(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_f860

dec_label_pc_f860:                                ; preds = %bb, %dec_label_pc_f820
  %v5_f85e = phi i32 [ %v4_f85e, %bb ], [ 0, %dec_label_pc_f820 ]
  ret i32 %v5_f85e
}

define i32 @function_f865(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f865:
  %v0_f866 = load i32, i32* @eax, align 4
  ret i32 %v0_f866
}

define i32 @_ZNSt9exceptionC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f868:
  ret i32 %arg1
}

define i32 @function_f89f() local_unnamed_addr {
dec_label_pc_f89f:
  %eax.global-to-local = alloca i32, align 4
  %v0_f8a0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f8a0
}

define i32 @_ZN9base_uintILj160EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8a2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f8c5

bb:                                               ; preds = %dec_label_pc_f8a2
  %v2_f8c3 = call i32 @function_f8ca(i32 %arg1)
  br label %dec_label_pc_f8c5

dec_label_pc_f8c5:                                ; preds = %bb, %dec_label_pc_f8a2
  %v3_f8c3 = phi i32 [ %v2_f8c3, %bb ], [ 0, %dec_label_pc_f8a2 ]
  ret i32 %v3_f8c3
}

define i32 @function_f8ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8ca:
  %v0_f8cb = load i32, i32* @eax, align 4
  ret i32 %v0_f8cb
}

define i32 @_ZN7uint160C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_f8cc:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_f8d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_f8e9 = call i32 @function_1f16e(i32 %arg1)
  %v7_f90c107 = and i32 %v1_f8e9, -256
  %v8_f90c108 = or i32 %v7_f90c107, 1
  store i32 %v8_f90c108, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f8f7

dec_label_pc_f8f7:                                ; preds = %dec_label_pc_f8cc, %dec_label_pc_f8f7
  %storemerge109 = phi i32 [ 0, %dec_label_pc_f8cc ], [ %v4_f904, %dec_label_pc_f8f7 ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_f8fd = mul nuw nsw i32 %storemerge109, 4
  %v3_f8fd = add i32 %v2_f8fd, %arg1
  %v4_f8fd = inttoptr i32 %v3_f8fd to i32*
  store i32 0, i32* %v4_f8fd, align 4
  %v4_f904 = add nuw nsw i32 %storemerge109, 1
  %v6_f90c.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp106 = sub nsw i32 2, %storemerge109
  %v11_f908 = and i32 %tmp106, %v4_f904
  %v12_f908 = icmp slt i32 %v11_f908, 0
  %v13_f908 = icmp eq i32 %v4_f904, 4
  %v14_f908 = icmp slt i32 %v4_f904, 4
  %v3_f90c = icmp ne i1 %v14_f908, %v12_f908
  %v4_f90c = or i1 %v13_f908, %v3_f90c
  %v5_f90c = zext i1 %v4_f90c to i32
  %v7_f90c = and i32 %v6_f90c.pre, -256
  %v8_f90c = or i32 %v5_f90c, %v7_f90c
  store i32 %v8_f90c, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_f904, 5
  br i1 %exitcond, label %dec_label_pc_f913, label %dec_label_pc_f8f7

dec_label_pc_f913:                                ; preds = %dec_label_pc_f8f7
  store i32 %v0_f8d8, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_f91f

bb:                                               ; preds = %dec_label_pc_f913
  %v1_f91d = call i32 @function_f924()
  store i32 %v1_f91d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f91f

dec_label_pc_f91f:                                ; preds = %bb, %dec_label_pc_f913
  %v2_f91d = phi i32 [ %v1_f91d, %bb ], [ 0, %dec_label_pc_f913 ]
  ret i32 %v2_f91d

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_f8f7, { 1, 0 }
}

define i32 @function_f924() local_unnamed_addr {
dec_label_pc_f924:
  %v0_f925 = load i32, i32* @eax, align 4
  ret i32 %v0_f925
}

define i32 @_ZN7uint160C1Ey(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f926:
  %eax.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp107, i32* @eax, align 4
  %v1_f94f = call i32 @function_1f1c8(i32 %tmp107)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_f96b = add i32 %tmp107, 4
  %v3_f96b = inttoptr i32 %v2_f96b to i32*
  store i32 %arg3, i32* %v3_f96b, align 4
  %v6_f98c111 = load i32, i32* %eax.global-to-local, align 4
  %v7_f98c112 = and i32 %v6_f98c111, -256
  %v8_f98c113 = or i32 %v7_f98c112, 1
  store i32 %v8_f98c113, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f977

dec_label_pc_f977:                                ; preds = %dec_label_pc_f926, %dec_label_pc_f977
  %storemerge114 = phi i32 [ 2, %dec_label_pc_f926 ], [ %v4_f984, %dec_label_pc_f977 ]
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v2_f97d = mul nuw nsw i32 %storemerge114, 4
  %v3_f97d = add i32 %v2_f97d, %tmp107
  %v4_f97d = inttoptr i32 %v3_f97d to i32*
  store i32 0, i32* %v4_f97d, align 4
  %v4_f984 = add nuw nsw i32 %storemerge114, 1
  %tmp110 = sub nsw i32 2, %storemerge114
  %v11_f988 = and i32 %tmp110, %v4_f984
  %v12_f988 = icmp slt i32 %v11_f988, 0
  %v13_f988 = icmp eq i32 %v4_f984, 4
  %v14_f988 = icmp slt i32 %v4_f984, 4
  %v3_f98c = icmp ne i1 %v14_f988, %v12_f988
  %v4_f98c = or i1 %v13_f988, %v3_f98c
  %v5_f98c = zext i1 %v4_f98c to i32
  %v6_f98c = load i32, i32* %eax.global-to-local, align 4
  %v7_f98c = and i32 %v6_f98c, -256
  %v8_f98c = or i32 %v5_f98c, %v7_f98c
  store i32 %v8_f98c, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_f984, 5
  br i1 %exitcond, label %dec_label_pc_f993, label %dec_label_pc_f977

dec_label_pc_f993:                                ; preds = %dec_label_pc_f977
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge114, { 0, 2, 1 }
  uselistorder i32 %tmp107, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 1, 2, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_f977, { 1, 0 }
}

define i32 @_ZN7uint160aSEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f9a6:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_f9e0 = add i32 %tmp106, 4
  %v3_f9e0 = inttoptr i32 %v2_f9e0 to i32*
  store i32 %arg3, i32* %v3_f9e0, align 4
  br label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %dec_label_pc_f9a6, %dec_label_pc_f9ec
  %storemerge109 = phi i32 [ 2, %dec_label_pc_f9a6 ], [ %v4_f9f9, %dec_label_pc_f9ec ]
  %v2_f9f2 = mul nuw nsw i32 %storemerge109, 4
  %v3_f9f2 = add i32 %v2_f9f2, %tmp106
  %v4_f9f2 = inttoptr i32 %v3_f9f2 to i32*
  store i32 0, i32* %v4_f9f2, align 4
  %v4_f9f9 = add nuw nsw i32 %storemerge109, 1
  store i32 %tmp106, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_f9f9, 5
  br i1 %exitcond, label %dec_label_pc_fa08, label %dec_label_pc_f9ec

dec_label_pc_fa08:                                ; preds = %dec_label_pc_f9ec
  br i1 true, label %bb, label %dec_label_pc_fa17

bb:                                               ; preds = %dec_label_pc_fa08
  %v1_fa15 = call i32 @function_fa1c()
  br label %dec_label_pc_fa17

dec_label_pc_fa17:                                ; preds = %bb, %dec_label_pc_fa08
  %v2_fa15 = phi i32 [ %v1_fa15, %bb ], [ %tmp106, %dec_label_pc_fa08 ]
  ret i32 %v2_fa15

; uselistorder directives
  uselistorder i32 %storemerge109, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f9ec, { 1, 0 }
}

define i32 @function_fa1c() local_unnamed_addr {
dec_label_pc_fa1c:
  %v0_fa1d = load i32, i32* @eax, align 4
  ret i32 %v0_fa1d
}

define i32 @_ZN7uint160C1ERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fa1e:
  store i32 %arg1, i32* @eax, align 4
  %v1_fa41 = call i32 @function_1f2c0(i32 %arg1)
  store i32 %arg2, i32* @eax, align 4
  %v1_fa4c = call i32 @function_24ad8(i32 %arg2)
  %v10_fa51 = icmp eq i32 %v1_fa4c, 20
  %v5_fa57 = icmp eq i1 %v10_fa51, false
  br i1 %v5_fa57, label %bb, label %dec_label_pc_fa5b

bb:                                               ; preds = %dec_label_pc_fa1e
  %v1_fa59 = call i32 @function_fa87()
  br label %dec_label_pc_fa5b

dec_label_pc_fa5b:                                ; preds = %bb, %dec_label_pc_fa1e
  store i32 %arg2, i32* @eax, align 4
  %v2_fa69 = call i32 @function_24b16(i32 %arg2, i32 0)
  ret i32 %v2_fa69

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fa85() local_unnamed_addr {
dec_label_pc_fa85:
  %eax.global-to-local = alloca i32, align 4
  %v0_fa85 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fa85
}

define i32 @function_fa87() local_unnamed_addr {
dec_label_pc_fa87:
  %v0_fa97 = load i32, i32* @ebp, align 4
  %v1_fa97 = add i32 %v0_fa97, -28
  %v2_fa97 = inttoptr i32 %v1_fa97 to i32*
  %v3_fa97 = load i32, i32* %v2_fa97, align 4
  store i32 %v3_fa97, i32* @eax, align 4
  %v3_fa9d = call i32 @function_1f3c4(i32 %v3_fa97, i32 0, i32 0)
  %v0_faa2 = load i32, i32* @ebp, align 4
  %v1_faa2 = add i32 %v0_faa2, -12
  %v2_faa2 = inttoptr i32 %v1_faa2 to i32*
  %v3_faa2 = load i32, i32* %v2_faa2, align 4
  %v1_faa5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_faa5 = xor i32 %v1_faa5, %v3_faa2
  %v3_faa5 = icmp eq i32 %v2_faa5, 0
  store i32 %v2_faa5, i32* @eax, align 4
  br i1 %v3_faa5, label %bb, label %dec_label_pc_faae

bb:                                               ; preds = %dec_label_pc_fa87
  %v1_faac = call i32 @function_fab3()
  br label %dec_label_pc_faae

dec_label_pc_faae:                                ; preds = %bb, %dec_label_pc_fa87
  %v2_faac = phi i32 [ %v1_faac, %bb ], [ %v2_faa5, %dec_label_pc_fa87 ]
  ret i32 %v2_faac
}

define i32 @function_fab3() local_unnamed_addr {
dec_label_pc_fab3:
  %v0_fab4 = load i32, i32* @eax, align 4
  ret i32 %v0_fab4
}

define i32 @_ZN9base_uintILj256EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fab6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fad9

bb:                                               ; preds = %dec_label_pc_fab6
  %v2_fad7 = call i32 @function_fade(i32 %arg1)
  br label %dec_label_pc_fad9

dec_label_pc_fad9:                                ; preds = %bb, %dec_label_pc_fab6
  %v3_fad7 = phi i32 [ %v2_fad7, %bb ], [ 0, %dec_label_pc_fab6 ]
  ret i32 %v3_fad7
}

define i32 @function_fade(i32 %arg1) local_unnamed_addr {
dec_label_pc_fade:
  %v0_fadf = load i32, i32* @eax, align 4
  ret i32 %v0_fadf
}

define i32 @_ZN7uint256C1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fae0:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_fafd = call i32 @function_1f596(i32 %arg1)
  %v7_fb20107 = and i32 %v1_fafd, -256
  %v8_fb20108 = or i32 %v7_fb20107, 1
  store i32 %v8_fb20108, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_fb0b

dec_label_pc_fb0b:                                ; preds = %dec_label_pc_fae0, %dec_label_pc_fb0b
  %storemerge109 = phi i32 [ 0, %dec_label_pc_fae0 ], [ %v4_fb18, %dec_label_pc_fb0b ]
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v2_fb11 = mul nuw nsw i32 %storemerge109, 4
  %v3_fb11 = add i32 %v2_fb11, %arg1
  %v4_fb11 = inttoptr i32 %v3_fb11 to i32*
  store i32 0, i32* %v4_fb11, align 4
  %v4_fb18 = add nuw nsw i32 %storemerge109, 1
  %v6_fb20.pre = load i32, i32* %eax.global-to-local, align 4
  %tmp106 = sub nsw i32 5, %storemerge109
  %v11_fb1c = and i32 %tmp106, %v4_fb18
  %v12_fb1c = icmp slt i32 %v11_fb1c, 0
  %v13_fb1c = icmp eq i32 %v4_fb18, 7
  %v14_fb1c = icmp slt i32 %v4_fb18, 7
  %v3_fb20 = icmp ne i1 %v14_fb1c, %v12_fb1c
  %v4_fb20 = or i1 %v13_fb1c, %v3_fb20
  %v5_fb20 = zext i1 %v4_fb20 to i32
  %v7_fb20 = and i32 %v6_fb20.pre, -256
  %v8_fb20 = or i32 %v5_fb20, %v7_fb20
  store i32 %v8_fb20, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_fb18, 8
  br i1 %exitcond, label %dec_label_pc_fb27, label %dec_label_pc_fb0b

dec_label_pc_fb27:                                ; preds = %dec_label_pc_fb0b
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge109, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_fb0b, { 1, 0 }
}

define i32 @_ZN7uint256C1Ey(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb3a:
  %eax.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_fb52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp11, i32* @eax, align 4
  %v1_fb63 = call i32 @function_1f5f0(i32 %tmp11)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_fb7f = add i32 %tmp11, 4
  %v3_fb7f = inttoptr i32 %v2_fb7f to i32*
  %v6_fba015 = load i32, i32* %eax.global-to-local, align 4
  %v7_fba016 = and i32 %v6_fba015, -256
  %v8_fba017 = or i32 %v7_fba016, 1
  store i32 %v8_fba017, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_fb8b

dec_label_pc_fb8b:                                ; preds = %dec_label_pc_fb3a, %dec_label_pc_fb8b
  %storemerge18 = phi i32 [ 2, %dec_label_pc_fb3a ], [ %v4_fb98, %dec_label_pc_fb8b ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v2_fb91 = mul nuw nsw i32 %storemerge18, 4
  %v3_fb91 = add i32 %v2_fb91, %tmp11
  %v4_fb91 = inttoptr i32 %v3_fb91 to i32*
  store i32 0, i32* %v4_fb91, align 4
  %v4_fb98 = add nuw nsw i32 %storemerge18, 1
  %tmp14 = sub nsw i32 5, %storemerge18
  %v11_fb9c = and i32 %tmp14, %v4_fb98
  %v12_fb9c = icmp slt i32 %v11_fb9c, 0
  %v13_fb9c = icmp eq i32 %v4_fb98, 7
  %v14_fb9c = icmp slt i32 %v4_fb98, 7
  %v3_fba0 = icmp ne i1 %v14_fb9c, %v12_fb9c
  %v4_fba0 = or i1 %v13_fb9c, %v3_fba0
  %v5_fba0 = zext i1 %v4_fba0 to i32
  %v6_fba0 = load i32, i32* %eax.global-to-local, align 4
  %v7_fba0 = and i32 %v6_fba0, -256
  %v8_fba0 = or i32 %v5_fba0, %v7_fba0
  store i32 %v8_fba0, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_fb98, 8
  br i1 %exitcond, label %dec_label_pc_fba7, label %dec_label_pc_fb8b

dec_label_pc_fba7:                                ; preds = %dec_label_pc_fb8b
  store i32 %v0_fb52, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fbb3

bb:                                               ; preds = %dec_label_pc_fba7
  %v1_fbb1 = call i32 @function_fbb8()
  store i32 %v1_fbb1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_fbb3

dec_label_pc_fbb3:                                ; preds = %bb, %dec_label_pc_fba7
  %v2_fbb1 = phi i32 [ %v1_fbb1, %bb ], [ 0, %dec_label_pc_fba7 ]
  ret i32 %v2_fbb1

; uselistorder directives
  uselistorder i32 %storemerge18, { 0, 2, 1 }
  uselistorder i32 %tmp11, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 2, 3, 1, 6, 7 }
  uselistorder label %dec_label_pc_fb8b, { 1, 0 }
}

define i32 @function_fbb8() local_unnamed_addr {
dec_label_pc_fbb8:
  %v0_fbb9 = load i32, i32* @eax, align 4
  ret i32 %v0_fbb9
}

define i32 @_ZN7uint256aSEy(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fbba:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_fbf4 = add i32 %tmp106, 4
  %v3_fbf4 = inttoptr i32 %v2_fbf4 to i32*
  store i32 %arg3, i32* %v3_fbf4, align 4
  br label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fbba, %dec_label_pc_fc00
  %storemerge109 = phi i32 [ 2, %dec_label_pc_fbba ], [ %v4_fc0d, %dec_label_pc_fc00 ]
  %v2_fc06 = mul nuw nsw i32 %storemerge109, 4
  %v3_fc06 = add i32 %v2_fc06, %tmp106
  %v4_fc06 = inttoptr i32 %v3_fc06 to i32*
  store i32 0, i32* %v4_fc06, align 4
  %v4_fc0d = add nuw nsw i32 %storemerge109, 1
  store i32 %tmp106, i32* @eax, align 4
  %exitcond = icmp eq i32 %v4_fc0d, 8
  br i1 %exitcond, label %dec_label_pc_fc1c, label %dec_label_pc_fc00

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fc00
  br i1 true, label %bb, label %dec_label_pc_fc2b

bb:                                               ; preds = %dec_label_pc_fc1c
  %v1_fc29 = call i32 @function_fc30()
  br label %dec_label_pc_fc2b

dec_label_pc_fc2b:                                ; preds = %bb, %dec_label_pc_fc1c
  %v2_fc29 = phi i32 [ %v1_fc29, %bb ], [ %tmp106, %dec_label_pc_fc1c ]
  ret i32 %v2_fc29

; uselistorder directives
  uselistorder i32 %storemerge109, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_fc00, { 1, 0 }
}

define i32 @function_fc30() local_unnamed_addr {
dec_label_pc_fc30:
  %v0_fc31 = load i32, i32* @eax, align 4
  ret i32 %v0_fc31
}

define i32 @_ZltRK7uint256S1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fc32:
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_fc52 = inttoptr i32 %arg2 to i32*
  %v2_fc52 = load i32, i32* %v1_fc52, align 4
  store i32 %v2_fc52, i32* %stack_var_-48, align 4
  %v2_fc84 = load i32, i32* %arg1, align 4
  store i32 %v2_fc84, i32* %stack_var_-80, align 4
  %v4_fcb6 = ptrtoint i32* %stack_var_-48 to i32
  %v2_fcba = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_fcba, i32* @eax, align 4
  %v2_fcc0 = call i32 @function_24d62(i32 %v2_fcba, i32 %v4_fcb6)
  store i32 %v2_fcc0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fcd1

bb:                                               ; preds = %dec_label_pc_fc32
  %v1_fccf = call i32 @function_fcd6()
  br label %dec_label_pc_fcd1

dec_label_pc_fcd1:                                ; preds = %bb, %dec_label_pc_fc32
  %v2_fccf = phi i32 [ %v1_fccf, %bb ], [ %v2_fcc0, %dec_label_pc_fc32 ]
  ret i32 %v2_fccf
}

define i32 @function_fcd6() local_unnamed_addr {
dec_label_pc_fcd6:
  %v0_fcd7 = load i32, i32* @eax, align 4
  ret i32 %v0_fcd7
}

define i32 @_ZN11CHashWriter4InitEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_fcd8:
  ret i32 %arg1
}

define i32 @function_fd0a() local_unnamed_addr {
dec_label_pc_fd0a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fd0a = load i32, i32* %ecx.global-to-local, align 4
  %v1_fd0a = add i32 %v0_fd0a, -1
  store i32 %v1_fd0a, i32* %ecx.global-to-local, align 4
  %v0_fd0c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fd0c
}

define i32 @_ZN11CHashWriterC1Eii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fd0e:
  %v2_fd37 = add i32 %arg1, 112
  %v3_fd37 = inttoptr i32 %v2_fd37 to i32*
  store i32 %arg2, i32* %v3_fd37, align 4
  %v2_fd40 = add i32 %arg1, 116
  %v3_fd40 = inttoptr i32 %v2_fd40 to i32*
  store i32 %arg3, i32* %v3_fd40, align 4
  %v1_fd49 = call i32 @function_1f9e6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fd5a

bb:                                               ; preds = %dec_label_pc_fd0e
  %v1_fd58 = call i32 @function_fd5f()
  br label %dec_label_pc_fd5a

dec_label_pc_fd5a:                                ; preds = %bb, %dec_label_pc_fd0e
  %v2_fd58 = phi i32 [ %v1_fd58, %bb ], [ 0, %dec_label_pc_fd0e ]
  ret i32 %v2_fd58

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_fd5f() local_unnamed_addr {
dec_label_pc_fd5f:
  %v0_fd60 = load i32, i32* @eax, align 4
  ret i32 %v0_fd60
}

define i32 @_ZN11CHashWriter5writeEPKcj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fd62:
  ret i32 %arg1
}

define i32 @function_fdb1() local_unnamed_addr {
dec_label_pc_fdb1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fdb1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_fdb1 = add i32 %v0_fdb1, -1
  store i32 %v1_fdb1, i32* %ecx.global-to-local, align 4
  %v0_fdb3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fdb3
}

define i32 @_ZN11CHashWriter7GetHashEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fdb4:
  %stack_var_-48 = alloca i32, align 4
  %v2_fdd1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_fdd1, i32* @eax, align 4
  %v1_fdd7 = call i32 @function_1f894(i32 %v2_fdd1)
  ret i32 %v2_fdd1
}

define i32 @function_fe26() local_unnamed_addr {
dec_label_pc_fe26:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_fe26 = load i32, i32* %ecx.global-to-local, align 4
  %v1_fe26 = add i32 %v0_fe26, -1
  store i32 %v1_fe26, i32* %ecx.global-to-local, align 4
  %v0_fe28 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fe28
}

define i32 @_Z7Hash160RKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fe2b:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_fe48 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_fe48, i32* @eax, align 4
  %v2_fe55 = call i32 @function_24e95(i32 %v2_fe48, i32 %arg2)
  %v2_fe5d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_fe5d, i32* @eax, align 4
  %v2_fe6a = call i32 @function_24e09(i32 %v2_fe5d, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v3_fe75 = load i32, i32* %stack_var_-20, align 4
  %v3_fe7c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_fe7c, i32* @edx, align 4
  %v3_fe86 = call i32 @function_24fe3(i32 %arg1, i32 %v3_fe7c, i32 %v3_fe75)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fe9d

bb:                                               ; preds = %dec_label_pc_fe2b
  %v1_fe9b = call i32 @function_fea2()
  br label %dec_label_pc_fe9d

dec_label_pc_fe9d:                                ; preds = %bb, %dec_label_pc_fe2b
  %v2_fe9b = phi i32 [ %v1_fe9b, %bb ], [ %arg1, %dec_label_pc_fe2b ]
  ret i32 %v2_fe9b

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
}

define i32 @function_fea2() local_unnamed_addr {
dec_label_pc_fea2:
  %v0_fea3 = load i32, i32* @eax, align 4
  ret i32 %v0_fea3
}

define i32 @_ZN6CKeyIDC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_fea6:
  %v3_fed3 = call i32 @function_1f7cc(i32 %arg1, i32 0, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_fee4

bb:                                               ; preds = %dec_label_pc_fea6
  %v1_fee2 = call i32 @function_fee9()
  br label %dec_label_pc_fee4

dec_label_pc_fee4:                                ; preds = %bb, %dec_label_pc_fea6
  %v2_fee2 = phi i32 [ %v1_fee2, %bb ], [ 0, %dec_label_pc_fea6 ]
  ret i32 %v2_fee2
}

define i32 @function_fee9() local_unnamed_addr {
dec_label_pc_fee9:
  %v0_feea = load i32, i32* @eax, align 4
  ret i32 %v0_feea
}

define i32 @_ZN6CKeyIDC1ERK7uint160(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_feec:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_fefe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_ff0f = inttoptr i32 %arg2 to i32*
  %v2_ff0f = load i32, i32* %v1_ff0f, align 4
  store i32 %v2_ff0f, i32* %arg1, align 4
  %v1_ff13 = add i32 %arg2, 4
  %v2_ff13 = inttoptr i32 %v1_ff13 to i32*
  %v3_ff13 = load i32, i32* %v2_ff13, align 4
  %v1_ff16 = load i32, i32* %eax.global-to-local, align 4
  %v2_ff16 = add i32 %v1_ff16, 4
  %v3_ff16 = inttoptr i32 %v2_ff16 to i32*
  store i32 %v3_ff13, i32* %v3_ff16, align 4
  %v0_ff19 = load i32, i32* %edx.global-to-local, align 4
  %v1_ff19 = add i32 %v0_ff19, 8
  %v2_ff19 = inttoptr i32 %v1_ff19 to i32*
  %v3_ff19 = load i32, i32* %v2_ff19, align 4
  %v1_ff1c = load i32, i32* %eax.global-to-local, align 4
  %v2_ff1c = add i32 %v1_ff1c, 8
  %v3_ff1c = inttoptr i32 %v2_ff1c to i32*
  store i32 %v3_ff19, i32* %v3_ff1c, align 4
  %v0_ff1f = load i32, i32* %edx.global-to-local, align 4
  %v1_ff1f = add i32 %v0_ff1f, 12
  %v2_ff1f = inttoptr i32 %v1_ff1f to i32*
  %v3_ff1f = load i32, i32* %v2_ff1f, align 4
  store i32 %v3_ff1f, i32* @ecx, align 4
  %v1_ff22 = load i32, i32* %eax.global-to-local, align 4
  %v2_ff22 = add i32 %v1_ff22, 12
  %v3_ff22 = inttoptr i32 %v2_ff22 to i32*
  store i32 %v3_ff1f, i32* %v3_ff22, align 4
  %v0_ff25 = load i32, i32* %edx.global-to-local, align 4
  %v1_ff25 = add i32 %v0_ff25, 16
  %v2_ff25 = inttoptr i32 %v1_ff25 to i32*
  %v3_ff25 = load i32, i32* %v2_ff25, align 4
  store i32 %v3_ff25, i32* %edx.global-to-local, align 4
  %v1_ff28 = load i32, i32* %eax.global-to-local, align 4
  %v2_ff28 = add i32 %v1_ff28, 16
  %v3_ff28 = inttoptr i32 %v2_ff28 to i32*
  store i32 %v3_ff25, i32* %v3_ff28, align 4
  store i32 %v0_fefe, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ff37

bb:                                               ; preds = %dec_label_pc_feec
  %v3_ff35 = call i32 @function_ff3c(i32 %arg2, i32 %tmp6)
  store i32 %v3_ff35, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ff37

dec_label_pc_ff37:                                ; preds = %bb, %dec_label_pc_feec
  %v4_ff35 = phi i32 [ %v3_ff35, %bb ], [ 0, %dec_label_pc_feec ]
  ret i32 %v4_ff35

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2, 4 }
}

define i32 @function_ff3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff3c:
  %v0_ff3d = load i32, i32* @eax, align 4
  ret i32 %v0_ff3d
}

define i32 @_ZN9CScriptIDC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff3e:
  store i32 %arg1, i32* @eax, align 4
  %v3_ff6b = call i32 @function_1f864(i32 %arg1, i32 0, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ff7c

bb:                                               ; preds = %dec_label_pc_ff3e
  %v1_ff7a = call i32 @function_ff81()
  br label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %bb, %dec_label_pc_ff3e
  %v2_ff7a = phi i32 [ %v1_ff7a, %bb ], [ 0, %dec_label_pc_ff3e ]
  ret i32 %v2_ff7a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_ff81() local_unnamed_addr {
dec_label_pc_ff81:
  %v0_ff82 = load i32, i32* @eax, align 4
  ret i32 %v0_ff82
}

define i32 @_ZN9CScriptIDC1ERK7uint160(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ff84:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_ff96 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp6, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_ffa7 = inttoptr i32 %arg2 to i32*
  %v2_ffa7 = load i32, i32* %v1_ffa7, align 4
  store i32 %v2_ffa7, i32* %arg1, align 4
  %v1_ffab = add i32 %arg2, 4
  %v2_ffab = inttoptr i32 %v1_ffab to i32*
  %v3_ffab = load i32, i32* %v2_ffab, align 4
  %v1_ffae = load i32, i32* %eax.global-to-local, align 4
  %v2_ffae = add i32 %v1_ffae, 4
  %v3_ffae = inttoptr i32 %v2_ffae to i32*
  store i32 %v3_ffab, i32* %v3_ffae, align 4
  %v0_ffb1 = load i32, i32* %edx.global-to-local, align 4
  %v1_ffb1 = add i32 %v0_ffb1, 8
  %v2_ffb1 = inttoptr i32 %v1_ffb1 to i32*
  %v3_ffb1 = load i32, i32* %v2_ffb1, align 4
  %v1_ffb4 = load i32, i32* %eax.global-to-local, align 4
  %v2_ffb4 = add i32 %v1_ffb4, 8
  %v3_ffb4 = inttoptr i32 %v2_ffb4 to i32*
  store i32 %v3_ffb1, i32* %v3_ffb4, align 4
  %v0_ffb7 = load i32, i32* %edx.global-to-local, align 4
  %v1_ffb7 = add i32 %v0_ffb7, 12
  %v2_ffb7 = inttoptr i32 %v1_ffb7 to i32*
  %v3_ffb7 = load i32, i32* %v2_ffb7, align 4
  store i32 %v3_ffb7, i32* @ecx, align 4
  %v1_ffba = load i32, i32* %eax.global-to-local, align 4
  %v2_ffba = add i32 %v1_ffba, 12
  %v3_ffba = inttoptr i32 %v2_ffba to i32*
  store i32 %v3_ffb7, i32* %v3_ffba, align 4
  %v0_ffbd = load i32, i32* %edx.global-to-local, align 4
  %v1_ffbd = add i32 %v0_ffbd, 16
  %v2_ffbd = inttoptr i32 %v1_ffbd to i32*
  %v3_ffbd = load i32, i32* %v2_ffbd, align 4
  store i32 %v3_ffbd, i32* %edx.global-to-local, align 4
  %v1_ffc0 = load i32, i32* %eax.global-to-local, align 4
  %v2_ffc0 = add i32 %v1_ffc0, 16
  %v3_ffc0 = inttoptr i32 %v2_ffc0 to i32*
  store i32 %v3_ffbd, i32* %v3_ffc0, align 4
  store i32 %v0_ff96, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_ffcf

bb:                                               ; preds = %dec_label_pc_ff84
  %v3_ffcd = call i32 @function_ffd4(i32 %arg2, i32 %tmp6)
  store i32 %v3_ffcd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ffcf

dec_label_pc_ffcf:                                ; preds = %bb, %dec_label_pc_ff84
  %v4_ffcd = phi i32 [ %v3_ffcd, %bb ], [ 0, %dec_label_pc_ff84 ]
  ret i32 %v4_ffcd

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2, 4 }
}

define i32 @function_ffd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffd4:
  %v0_ffd5 = load i32, i32* @eax, align 4
  ret i32 %v0_ffd5
}

define i32 @_ZN7CPubKey6GetLenEh(i8 %arg1) local_unnamed_addr {
dec_label_pc_ffd6:
  %v13_ffed = icmp eq i8 %arg1, 2
  br i1 %v13_ffed, label %dec_label_pc_fff9, label %dec_label_pc_fff3

dec_label_pc_fff3:                                ; preds = %dec_label_pc_ffd6
  %v13_fff3 = icmp eq i8 %arg1, 3
  %v1_fff7 = icmp eq i1 %v13_fff3, false
  br i1 %v1_fff7, label %dec_label_pc_10000, label %dec_label_pc_fff9

dec_label_pc_fff9:                                ; preds = %dec_label_pc_fff3, %dec_label_pc_ffd6
  store i32 33, i32* @eax, align 4
  br label %dec_label_pc_1001e

dec_label_pc_10000:                               ; preds = %dec_label_pc_fff3
  %v13_10000 = icmp eq i8 %arg1, 4
  br i1 %v13_10000, label %dec_label_pc_10012, label %dec_label_pc_10006

dec_label_pc_10006:                               ; preds = %dec_label_pc_10000
  %v13_10006 = icmp eq i8 %arg1, 6
  br i1 %v13_10006, label %dec_label_pc_10012, label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %dec_label_pc_10006
  %v13_1000c = icmp eq i8 %arg1, 7
  %v1_10010 = icmp eq i1 %v13_1000c, false
  br i1 %v1_10010, label %dec_label_pc_10019, label %dec_label_pc_10012

dec_label_pc_10012:                               ; preds = %dec_label_pc_1000c, %dec_label_pc_10006, %dec_label_pc_10000
  store i32 65, i32* @eax, align 4
  br label %dec_label_pc_1001e

dec_label_pc_10019:                               ; preds = %dec_label_pc_1000c
  store i32 0, i32* @eax, align 4
  br label %dec_label_pc_1001e

dec_label_pc_1001e:                               ; preds = %dec_label_pc_10019, %dec_label_pc_10012, %dec_label_pc_fff9
  %v2_100282 = phi i32 [ 0, %dec_label_pc_10019 ], [ 65, %dec_label_pc_10012 ], [ 33, %dec_label_pc_fff9 ]
  br i1 true, label %bb, label %dec_label_pc_1002a

bb:                                               ; preds = %dec_label_pc_1001e
  %v1_10028 = call i32 @function_1002f()
  br label %dec_label_pc_1002a

dec_label_pc_1002a:                               ; preds = %bb, %dec_label_pc_1001e
  %v2_10028 = phi i32 [ %v1_10028, %bb ], [ %v2_100282, %dec_label_pc_1001e ]
  ret i32 %v2_10028
}

define i32 @function_1002f() local_unnamed_addr {
dec_label_pc_1002f:
  %v0_10030 = load i32, i32* @eax, align 4
  ret i32 %v0_10030
}

define i32 @_ZN7CPubKey10InvalidateEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_10032:
  store i8 -1, i8* %arg1, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1005b

bb:                                               ; preds = %dec_label_pc_10032
  %v4_10038 = ptrtoint i8* %arg1 to i32
  %v3_10059 = call i32 @function_10060(i32 %v4_10038)
  br label %dec_label_pc_1005b

dec_label_pc_1005b:                               ; preds = %bb, %dec_label_pc_10032
  %v4_10059 = phi i32 [ %v3_10059, %bb ], [ 0, %dec_label_pc_10032 ]
  ret i32 %v4_10059

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @function_10060(i32 %arg1) local_unnamed_addr {
dec_label_pc_10060:
  %v0_10061 = load i32, i32* @eax, align 4
  ret i32 %v0_10061
}

define i32 @_ZN7CPubKeyC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10062:
  %v1_1007f = call i32 @function_20094(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10090

bb:                                               ; preds = %dec_label_pc_10062
  %v1_1008e = call i32 @function_10095()
  br label %dec_label_pc_10090

dec_label_pc_10090:                               ; preds = %bb, %dec_label_pc_10062
  %v2_1008e = phi i32 [ %v1_1008e, %bb ], [ 0, %dec_label_pc_10062 ]
  ret i32 %v2_1008e
}

define i32 @function_10095() local_unnamed_addr {
dec_label_pc_10095:
  %v0_10096 = load i32, i32* @eax, align 4
  ret i32 %v0_10096
}

define i32 @_ZN7CPubKeyC1ERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10098:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_100b5 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_100b5, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_100c2 = call i32 @function_25102(i32 %v2_100b5, i32 %arg2)
  %v2_100ca = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_100ca, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_100d7 = call i32 @function_25076(i32 %v2_100ca, i32 %arg2)
  %v3_100df = load i32, i32* %stack_var_-20, align 4
  %v3_100e6 = load i32, i32* %stack_var_-24, align 4
  %v3_100f3 = call i32 @function_2531e(i32 %arg1, i32 %v3_100e6, i32 %v3_100df)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10104

bb:                                               ; preds = %dec_label_pc_10098
  %v1_10102 = call i32 @function_10109()
  br label %dec_label_pc_10104

dec_label_pc_10104:                               ; preds = %bb, %dec_label_pc_10098
  %v2_10102 = phi i32 [ %v1_10102, %bb ], [ 0, %dec_label_pc_10098 ]
  ret i32 %v2_10102

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_10109() local_unnamed_addr {
dec_label_pc_10109:
  %v0_1010a = load i32, i32* @eax, align 4
  ret i32 %v0_1010a
}

define i32 @_ZNK7CPubKey4sizeEv(i8* %arg1) local_unnamed_addr {
dec_label_pc_1010c:
  %v2_10126 = load i8, i8* %arg1, align 1
  %v3_10126 = zext i8 %v2_10126 to i32
  store i32 %v3_10126, i32* @eax, align 4
  %v1_1012f = call i32 @function_200e2(i32 %v3_10126)
  store i32 %v1_1012f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10140

bb:                                               ; preds = %dec_label_pc_1010c
  %v1_1013e = call i32 @function_10145()
  br label %dec_label_pc_10140

dec_label_pc_10140:                               ; preds = %bb, %dec_label_pc_1010c
  %v2_1013e = phi i32 [ %v1_1013e, %bb ], [ %v1_1012f, %dec_label_pc_1010c ]
  ret i32 %v2_1013e
}

define i32 @function_10145() local_unnamed_addr {
dec_label_pc_10145:
  %v0_10146 = load i32, i32* @eax, align 4
  ret i32 %v0_10146
}

define i32 @_ZNK7CPubKey5beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10148:
  ret i32 %arg1
}

define i32 @_ZNK7CPubKey3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10176:
  store i32 %arg1, i32* @ebx, align 4
  %v1_10197 = call i32 @function_20282(i32 %arg1)
  %v1_1019c = load i32, i32* @ebx, align 4
  %v2_1019c = add i32 %v1_1019c, %v1_10197
  store i32 %v2_1019c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_101aa

bb:                                               ; preds = %dec_label_pc_10176
  %v1_101a8 = call i32 @function_101af()
  br label %dec_label_pc_101aa

dec_label_pc_101aa:                               ; preds = %bb, %dec_label_pc_10176
  %v2_101a8 = phi i32 [ %v1_101a8, %bb ], [ %v2_1019c, %dec_label_pc_10176 ]
  ret i32 %v2_101a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_101af() local_unnamed_addr {
dec_label_pc_101af:
  %v0_101b4 = load i32, i32* @eax, align 4
  ret i32 %v0_101b4
}

define i32 @_ZNK7CPubKeyixEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101b6:
  %v2_101d9 = add i32 %arg2, %arg1
  store i32 %v2_101d9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_101e7

bb:                                               ; preds = %dec_label_pc_101b6
  %v3_101e5 = call i32 @function_101ec(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_101e7

dec_label_pc_101e7:                               ; preds = %bb, %dec_label_pc_101b6
  %v4_101e5 = phi i32 [ %v3_101e5, %bb ], [ %v2_101d9, %dec_label_pc_101b6 ]
  ret i32 %v4_101e5

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_101ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101ec:
  %v0_101ed = load i32, i32* @eax, align 4
  ret i32 %v0_101ed
}

define i32 @_ZltRK7CPubKeyS1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_101ee:
  %tmp110 = inttoptr i32 %arg2 to i8*
  %v4_1020b = ptrtoint i8* %arg1 to i32
  %v2_1020e = load i8, i8* %arg1, align 1
  %v2_10214 = load i8, i8* %tmp110, align 1
  %v9_10217 = icmp ult i8 %v2_1020e, %v2_10214
  br i1 %v9_10217, label %bb, label %dec_label_pc_1021b

bb:                                               ; preds = %dec_label_pc_101ee
  %v5_10219 = call i32 @function_10250(i32 %arg2, i32 %v4_1020b)
  br label %dec_label_pc_1021b

dec_label_pc_1021b:                               ; preds = %bb, %dec_label_pc_101ee
  %v2_1021e = load i8, i8* %arg1, align 1
  %v2_10224 = load i8, i8* %tmp110, align 1
  %v14_10227 = icmp eq i8 %v2_1021e, %v2_10224
  %v1_10229 = icmp eq i1 %v14_10227, false
  br i1 %v1_10229, label %bb118, label %dec_label_pc_1022b

bb118:                                            ; preds = %dec_label_pc_1021b
  %v2_10229 = call i32 @function_10257()
  br label %dec_label_pc_1022b

dec_label_pc_1022b:                               ; preds = %bb118, %dec_label_pc_1021b
  store i32 %v4_1020b, i32* @eax, align 4
  %v2_10231 = call i32 @function_202fa(i32 %v4_1020b)
  ret i32 %v2_10231

; uselistorder directives
  uselistorder i32 %v4_1020b, { 1, 0, 2 }
  uselistorder i8* %arg1, { 0, 2, 1 }
}

define i32 @function_10250(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10250:
  store i32 1, i32* @eax, align 4
  %v0_10255 = call i32 @function_1025c()
  ret i32 %v0_10255
}

define i32 @function_10257() local_unnamed_addr {
dec_label_pc_10257:
  ret i32 0
}

define i32 @function_1025c() local_unnamed_addr {
dec_label_pc_1025c:
  %v0_1025c = load i32, i32* @ebp, align 4
  %v1_1025c = add i32 %v0_1025c, -12
  %v2_1025c = inttoptr i32 %v1_1025c to i32*
  %v3_1025c = load i32, i32* %v2_1025c, align 4
  %v1_1025f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1025f = icmp eq i32 %v1_1025f, %v3_1025c
  br i1 %v3_1025f, label %bb, label %dec_label_pc_1025c.dec_label_pc_10268_crit_edge

dec_label_pc_1025c.dec_label_pc_10268_crit_edge:  ; preds = %dec_label_pc_1025c
  %v2_10266.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10268

bb:                                               ; preds = %dec_label_pc_1025c
  %v1_10266 = call i32 @function_1026d()
  br label %dec_label_pc_10268

dec_label_pc_10268:                               ; preds = %dec_label_pc_1025c.dec_label_pc_10268_crit_edge, %bb
  %v2_10266 = phi i32 [ %v2_10266.pre, %dec_label_pc_1025c.dec_label_pc_10268_crit_edge ], [ %v1_10266, %bb ]
  ret i32 %v2_10266

; uselistorder directives
  uselistorder label %dec_label_pc_10268, { 1, 0 }
}

define i32 @function_1026d() local_unnamed_addr {
dec_label_pc_1026d:
  %v0_1026e = load i32, i32* @eax, align 4
  ret i32 %v0_1026e
}

define i32 @_ZNK7CPubKey5GetIDEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10270:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_10297 = call i32 @function_2037c(i32 %arg2)
  %v0_1029c = load i32, i32* @ebx, align 4
  %v3_1029c = add i32 %v0_1029c, %v1_10297
  %v2_102a2 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_102a2, i32* @eax, align 4
  %v3_102b0 = call i32 @function_255e1(i32 %v2_102a2, i32 %arg2, i32 %v3_1029c)
  %v2_102c5 = call i32 @function_2015c(i32 %arg1, i32 %v2_102a2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_102d9

bb:                                               ; preds = %dec_label_pc_10270
  %v1_102d7 = call i32 @function_102de()
  br label %dec_label_pc_102d9

dec_label_pc_102d9:                               ; preds = %bb, %dec_label_pc_10270
  %v2_102d7 = phi i32 [ %v1_102d7, %bb ], [ %arg1, %dec_label_pc_10270 ]
  ret i32 %v2_102d7

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_102de() local_unnamed_addr {
dec_label_pc_102de:
  %v0_102de = load i32, i32* @ebp, align 4
  %v1_102de = add i32 %v0_102de, -4
  %v2_102de = inttoptr i32 %v1_102de to i32*
  %v3_102de = load i32, i32* %v2_102de, align 4
  store i32 %v3_102de, i32* @ebx, align 4
  %v0_102e2 = load i32, i32* @eax, align 4
  ret i32 %v0_102e2
}

define i32 @_ZNK7CPubKey7IsValidEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_102e6:
  store i32 %arg1, i32* @eax, align 4
  %v1_10303 = call i32 @function_203f2(i32 %arg1)
  %v1_10308 = icmp eq i32 %v1_10303, 0
  %v1_1030a = icmp eq i1 %v1_10308, false
  %v2_1030a = zext i1 %v1_1030a to i32
  %v4_1030a = and i32 %v1_10303, -256
  %v5_1030a = or i32 %v2_1030a, %v4_1030a
  store i32 %v5_1030a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10319

bb:                                               ; preds = %dec_label_pc_102e6
  %v1_10317 = call i32 @function_1031e()
  br label %dec_label_pc_10319

dec_label_pc_10319:                               ; preds = %bb, %dec_label_pc_102e6
  %v2_10317 = phi i32 [ %v1_10317, %bb ], [ %v5_1030a, %dec_label_pc_102e6 ]
  ret i32 %v2_10317

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1031e() local_unnamed_addr {
dec_label_pc_1031e:
  %v0_1031f = load i32, i32* @eax, align 4
  ret i32 %v0_1031f
}

define i32 @_ZN4CKeyC1Ev(i8* %arg1) local_unnamed_addr {
dec_label_pc_10320:
  %v4_10326 = ptrtoint i8* %arg1 to i32
  store i8 0, i8* %arg1, align 1
  %v1_10340 = add i32 %v4_10326, 2
  store i32 %v1_10340, i32* @eax, align 4
  %v2_10346 = call i32 @function_2572f(i32 %v1_10340)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10357

bb:                                               ; preds = %dec_label_pc_10320
  %v1_10355 = call i32 @function_1035c()
  br label %dec_label_pc_10357

dec_label_pc_10357:                               ; preds = %bb, %dec_label_pc_10320
  %v2_10355 = phi i32 [ %v1_10355, %bb ], [ 0, %dec_label_pc_10320 ]
  ret i32 %v2_10355
}

define i32 @function_1035c() local_unnamed_addr {
dec_label_pc_1035c:
  %v0_1035d = load i32, i32* @eax, align 4
  ret i32 %v0_1035d
}

define i32 @_ZN4CKeyD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1035e:
  %v1_10378 = add i32 %arg1, 2
  store i32 %v1_10378, i32* @eax, align 4
  %v1_1037e = call i32 @function_257b2(i32 %v1_10378)
  ret i32 0
}

define i32 @_ZN5boost18condition_variableC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10396:
  ret i32 %arg1
}

define i32 @function_10449() local_unnamed_addr {
dec_label_pc_10449:
  %eax.global-to-local = alloca i32, align 4
  %v0_10449 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10449
}

define i32 @function_10460() local_unnamed_addr {
dec_label_pc_10460:
  %eax.global-to-local = alloca i32, align 4
  %v0_10460 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10460
}

define i32 @function_10486() local_unnamed_addr {
dec_label_pc_10486:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10486 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10486 = add i32 %v0_10486, 1566262468
  %v2_10486 = inttoptr i32 %v1_10486 to i32*
  %v3_10486 = load i32, i32* %v2_10486, align 4
  %v4_10486 = add i32 %v3_10486, 1
  store i32 %v4_10486, i32* %v2_10486, align 4
  %v0_1048c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1048c
}

define i32 @_ZN5boost18condition_variableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1048e:
  ret i32 %arg1
}

define i32 @function_1051e() local_unnamed_addr {
dec_label_pc_1051e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1051e = load i32, i32* %ecx.global-to-local, align 4
  %v1_1051e = add i32 %v0_1051e, -1
  store i32 %v1_1051e, i32* %ecx.global-to-local, align 4
  %v0_10520 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10520
}

define i32 @_ZN5boost6detail20interruption_checker22check_for_interruptionEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10522:
  %eax.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v2_1053c = load i32, i32* %arg1, align 4
  store i32 %v2_1053c, i32* %eax.global-to-local, align 4
  %v1_1053e = add i32 %v2_1053c, ptrtoint (i8** @global_var_f9.2245 to i32)
  %v2_1053e = inttoptr i32 %v1_1053e to i8*
  %v3_1053e = load i8, i8* %v2_1053e, align 1
  %v4_1053e = zext i8 %v3_1053e to i32
  store i32 %v4_1053e, i32* %eax.global-to-local, align 4
  %v5_10545 = icmp eq i8 %v3_1053e, 0
  br i1 %v5_10545, label %bb, label %dec_label_pc_10549

bb:                                               ; preds = %dec_label_pc_10522
  %v2_10547 = call i32 @function_10579(i32 %tmp99)
  store i32 %v2_10547, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10549

dec_label_pc_10549:                               ; preds = %bb, %dec_label_pc_10522
  store i32 %tmp99, i32* %eax.global-to-local, align 4
  %v2_1054c = load i32, i32* %arg1, align 4
  store i32 %v2_1054c, i32* %eax.global-to-local, align 4
  %v1_1054e = add i32 %v2_1054c, ptrtoint (i8** @global_var_f9.2245 to i32)
  %v2_1054e = inttoptr i32 %v1_1054e to i8*
  store i8 0, i8* %v2_1054e, align 1
  %v2_10555 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_10555

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i8** @global_var_f9.2245 to i32), { 1, 0 }
}

define i32 @function_10579(i32 %arg1) local_unnamed_addr {
dec_label_pc_10579:
  %v0_10579 = load i32, i32* @ebp, align 4
  %v1_10579 = add i32 %v0_10579, -12
  %v2_10579 = inttoptr i32 %v1_10579 to i32*
  %v3_10579 = load i32, i32* %v2_10579, align 4
  %v1_1057c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1057c = xor i32 %v1_1057c, %v3_10579
  ret i32 %v2_1057c
}

define i32 @_ZN5boost6detail20interruption_checkerC1EP15pthread_mutex_tP14pthread_cond_t(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1058c:
  ret i32 0
}

define i32 @function_105b4() local_unnamed_addr {
dec_label_pc_105b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_105b4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_105b4 = add i32 %v0_105b4, -465204286
  %v2_105b4 = inttoptr i32 %v1_105b4 to i32*
  %v3_105b4 = load i32, i32* %v2_105b4, align 4
  %v4_105b4 = add i32 %v3_105b4, -1
  store i32 %v4_105b4, i32* %v2_105b4, align 4
  %v0_105ba = load i32, i32* %edx.global-to-local, align 4
  %v1_105ba = load i32, i32* %eax.global-to-local, align 4
  %v2_105ba = inttoptr i32 %v1_105ba to i32*
  store i32 %v0_105ba, i32* %v2_105ba, align 4
  %v0_105bc = load i32, i32* @ebp, align 4
  %v1_105bc = add i32 %v0_105bc, -28
  %v2_105bc = inttoptr i32 %v1_105bc to i32*
  %v3_105bc = load i32, i32* %v2_105bc, align 4
  store i32 %v3_105bc, i32* %eax.global-to-local, align 4
  %v1_105bf = add i32 %v0_105bc, -32
  %v2_105bf = inttoptr i32 %v1_105bf to i32*
  %v3_105bf = load i32, i32* %v2_105bf, align 4
  store i32 %v3_105bf, i32* %edx.global-to-local, align 4
  %v2_105c2 = add i32 %v3_105bc, 4
  %v3_105c2 = inttoptr i32 %v2_105c2 to i32*
  store i32 %v3_105bf, i32* %v3_105c2, align 4
  %v0_105c5 = load i32, i32* @ebp, align 4
  %v1_105c5 = add i32 %v0_105c5, -28
  %v2_105c5 = inttoptr i32 %v1_105c5 to i32*
  %v3_105c5 = load i32, i32* %v2_105c5, align 4
  store i32 %v3_105c5, i32* %eax.global-to-local, align 4
  %v1_105c8 = inttoptr i32 %v3_105c5 to i32*
  %v2_105c8 = load i32, i32* %v1_105c8, align 4
  store i32 %v2_105c8, i32* %eax.global-to-local, align 4
  %v1_105ca = icmp eq i32 %v2_105c8, 0
  br i1 %v1_105ca, label %dec_label_pc_105e5, label %dec_label_pc_105ce

dec_label_pc_105ce:                               ; preds = %dec_label_pc_105b4
  %v3_105ce = load i32, i32* %v2_105c5, align 4
  store i32 %v3_105ce, i32* %eax.global-to-local, align 4
  %v1_105d1 = inttoptr i32 %v3_105ce to i32*
  %v2_105d1 = load i32, i32* %v1_105d1, align 4
  store i32 %v2_105d1, i32* %eax.global-to-local, align 4
  %v1_105d3 = add i32 %v2_105d1, ptrtoint (i8** @global_var_f8.2246 to i32)
  %v2_105d3 = inttoptr i32 %v1_105d3 to i8*
  %v3_105d3 = load i8, i8* %v2_105d3, align 1
  %v4_105d3 = zext i8 %v3_105d3 to i32
  store i32 %v4_105d3, i32* %eax.global-to-local, align 4
  %v5_105da = icmp eq i8 %v3_105d3, 0
  br i1 %v5_105da, label %dec_label_pc_105e5, label %dec_label_pc_105ea

dec_label_pc_105e5:                               ; preds = %dec_label_pc_105ce, %dec_label_pc_105b4
  br label %dec_label_pc_105ea

dec_label_pc_105ea:                               ; preds = %dec_label_pc_105ce, %dec_label_pc_105e5
  %storemerge = phi i32 [ 0, %dec_label_pc_105e5 ], [ 1, %dec_label_pc_105ce ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_105ea = load i32, i32* %v2_105c5, align 4
  store i32 %v3_105ea, i32* %edx.global-to-local, align 4
  %v1_105ed = trunc i32 %storemerge to i8
  %v3_105ed = add i32 %v3_105ea, 8
  %v4_105ed = inttoptr i32 %v3_105ed to i8*
  store i8 %v1_105ed, i8* %v4_105ed, align 1
  %v0_105f0 = load i32, i32* @ebp, align 4
  %v1_105f0 = add i32 %v0_105f0, -28
  %v2_105f0 = inttoptr i32 %v1_105f0 to i32*
  %v3_105f0 = load i32, i32* %v2_105f0, align 4
  store i32 %v3_105f0, i32* %eax.global-to-local, align 4
  %v1_105f3 = add i32 %v3_105f0, 8
  %v2_105f3 = inttoptr i32 %v1_105f3 to i8*
  %v3_105f3 = load i8, i8* %v2_105f3, align 1
  %v4_105f3 = zext i8 %v3_105f3 to i32
  store i32 %v4_105f3, i32* %eax.global-to-local, align 4
  %v5_105f7 = icmp eq i8 %v3_105f3, 0
  br i1 %v5_105f7, label %bb, label %dec_label_pc_105ff

bb:                                               ; preds = %dec_label_pc_105ea
  %v1_105f9 = call i32 @function_10680()
  store i32 %v1_105f9, i32* %eax.global-to-local, align 4
  %v0_105ff.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_105ff

dec_label_pc_105ff:                               ; preds = %bb, %dec_label_pc_105ea
  %v0_10626 = phi i32 [ %v0_105ff.pre, %bb ], [ %v0_105f0, %dec_label_pc_105ea ]
  %v1_105ff = add i32 %v0_10626, -28
  %v2_105ff = inttoptr i32 %v1_105ff to i32*
  %v1_1060b = add i32 %v0_10626, -16
  store i32 %v1_1060b, i32* %eax.global-to-local, align 4
  %v3_10616 = load i32, i32* %v2_105ff, align 4
  store i32 %v3_10616, i32* %eax.global-to-local, align 4
  %v3_10621 = load i32, i32* %v2_105ff, align 4
  store i32 %v3_10621, i32* %eax.global-to-local, align 4
  %v1_10624 = inttoptr i32 %v3_10621 to i32*
  %v2_10624 = load i32, i32* %v1_10624, align 4
  store i32 %v2_10624, i32* %eax.global-to-local, align 4
  %v1_10626 = add i32 %v0_10626, -32
  %v2_10626 = inttoptr i32 %v1_10626 to i32*
  %v3_10626 = load i32, i32* %v2_10626, align 4
  store i32 %v3_10626, i32* %edx.global-to-local, align 4
  %v2_10629 = add i32 %v2_10624, ptrtoint (i32* @global_var_fc.2247 to i32)
  %v3_10629 = inttoptr i32 %v2_10629 to i32*
  store i32 %v3_10626, i32* %v3_10629, align 4
  %v0_1062f = load i32, i32* @ebp, align 4
  %v1_1062f = add i32 %v0_1062f, -28
  %v2_1062f = inttoptr i32 %v1_1062f to i32*
  %v3_1062f = load i32, i32* %v2_1062f, align 4
  store i32 %v3_1062f, i32* %eax.global-to-local, align 4
  %v1_10632 = inttoptr i32 %v3_1062f to i32*
  %v2_10632 = load i32, i32* %v1_10632, align 4
  store i32 %v2_10632, i32* %eax.global-to-local, align 4
  %v1_10634 = add i32 %v0_1062f, -36
  %v2_10634 = inttoptr i32 %v1_10634 to i32*
  %v3_10634 = load i32, i32* %v2_10634, align 4
  store i32 %v3_10634, i32* %edx.global-to-local, align 4
  %v2_10637 = add i32 %v2_10632, ptrtoint (i32* @global_var_100.2248 to i32)
  %v3_10637 = inttoptr i32 %v2_10637 to i32*
  store i32 %v3_10634, i32* %v3_10637, align 4
  %v0_1063d = load i32, i32* @ebp, align 4
  %v1_1063d = add i32 %v0_1063d, -28
  %v2_1063d = inttoptr i32 %v1_1063d to i32*
  %v3_1063d = load i32, i32* %v2_1063d, align 4
  store i32 %v3_1063d, i32* %eax.global-to-local, align 4
  %v1_10640 = add i32 %v3_1063d, 4
  %v2_10640 = inttoptr i32 %v1_10640 to i32*
  %v3_10640 = load i32, i32* %v2_10640, align 4
  store i32 %v3_10640, i32* %eax.global-to-local, align 4
  ret i32 %v3_10640

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 11, 9, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_105ea, { 1, 0 }
}

define i32 @function_10672(i32 %arg1) local_unnamed_addr {
dec_label_pc_10672:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_10672 = load i32, i32* @ebp, align 4
  %v1_10672 = add i32 %v0_10672, 76148805
  %v2_10672 = inttoptr i32 %v1_10672 to i32*
  %v3_10672 = load i32, i32* %v2_10672, align 4
  %v4_10672 = add i32 %v3_10672, -1
  store i32 %v4_10672, i32* %v2_10672, align 4
  %v0_10678 = load i32, i32* %eax.global-to-local, align 4
  %v11_10678 = and i32 %v0_10678, -24
  store i32 %v11_10678, i32* %eax.global-to-local, align 4
  %v0_1067a = load i32, i32* %esi.global-to-local, align 4
  %v1_1067a = add i32 %v0_1067a, 1
  store i32 %v1_1067a, i32* %esi.global-to-local, align 4
  %v1_1067c = inttoptr i32 %v11_10678 to i32*
  %v2_1067c = load i32, i32* %v1_1067c, align 8
  %v4_1067c = add i32 %v2_1067c, %v11_10678
  store i32 %v4_1067c, i32* %v1_1067c, align 8
  %v0_1067e = call i32 @function_106cd()
  store i32 %v0_1067e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1067e

; uselistorder directives
  uselistorder i32 %v11_10678, { 0, 2, 1 }
}

define i32 @function_10680() local_unnamed_addr {
dec_label_pc_10680:
  %v0_10680 = load i32, i32* @ebp, align 4
  %v1_10680 = add i32 %v0_10680, -28
  %v2_10680 = inttoptr i32 %v1_10680 to i32*
  %v3_10680 = load i32, i32* %v2_10680, align 4
  %v1_10683 = add i32 %v3_10680, 4
  %v2_10683 = inttoptr i32 %v1_10683 to i32*
  %v3_10683 = load i32, i32* %v2_10683, align 4
  ret i32 %v3_10683
}

define i32 @function_106b7() local_unnamed_addr {
dec_label_pc_106b7:
  %eax.global-to-local = alloca i32, align 4
  %v0_106b7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_106b7
}

define i32 @function_106cd() local_unnamed_addr {
dec_label_pc_106cd:
  %v0_106cd = load i32, i32* @ebp, align 4
  %v1_106cd = add i32 %v0_106cd, -12
  %v2_106cd = inttoptr i32 %v1_106cd to i32*
  %v3_106cd = load i32, i32* %v2_106cd, align 4
  %v1_106d0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_106d0 = xor i32 %v1_106d0, %v3_106cd
  %v3_106d0 = icmp eq i32 %v2_106d0, 0
  store i32 %v2_106d0, i32* @eax, align 4
  br i1 %v3_106d0, label %bb, label %dec_label_pc_106d9

bb:                                               ; preds = %dec_label_pc_106cd
  %v1_106d7 = call i32 @function_106de()
  br label %dec_label_pc_106d9

dec_label_pc_106d9:                               ; preds = %bb, %dec_label_pc_106cd
  %v2_106d7 = phi i32 [ %v1_106d7, %bb ], [ %v2_106d0, %dec_label_pc_106cd ]
  ret i32 %v2_106d7
}

define i32 @function_106de() local_unnamed_addr {
dec_label_pc_106de:
  %v0_106e3 = load i32, i32* @eax, align 4
  ret i32 %v0_106e3
}

define i32 @_ZN5boost6detail20interruption_checkerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_106e4:
  %v1_106fe = add i32 %arg1, 8
  %v2_106fe = inttoptr i32 %v1_106fe to i8*
  %v3_106fe = load i8, i8* %v2_106fe, align 1
  %v5_10702 = icmp eq i8 %v3_106fe, 0
  br i1 %v5_10702, label %bb, label %dec_label_pc_10706

bb:                                               ; preds = %dec_label_pc_106e4
  %v2_10704 = call i32 @function_1077e(i32 %arg1)
  br label %dec_label_pc_10706

dec_label_pc_10706:                               ; preds = %bb, %dec_label_pc_106e4
  %v1_10709 = add i32 %arg1, 4
  %v2_10709 = inttoptr i32 %v1_10709 to i32*
  %v3_10709 = load i32, i32* %v2_10709, align 4
  ret i32 %v3_10709
}

define i32 @function_1073b() local_unnamed_addr {
dec_label_pc_1073b:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1073b = load i32, i32* %ebx.global-to-local, align 4
  %v1_1073b = add i32 %v0_1073b, 9167941
  %v2_1073b = inttoptr i32 %v1_1073b to i32*
  %v3_1073b = load i32, i32* %v2_1073b, align 4
  %v4_1073b = add i32 %v3_1073b, -1
  store i32 %v4_1073b, i32* %v2_1073b, align 4
  %v0_10741 = load i32, i32* %eax.global-to-local, align 4
  %v1_10741 = add i32 %v0_10741, 24
  %v0_10748 = load i32, i32* @ebp, align 4
  %v1_10748 = add i32 %v0_10748, -16
  store i32 %v1_10748, i32* %eax.global-to-local, align 4
  %v1_10753 = add i32 %v0_10748, -28
  %v2_10753 = inttoptr i32 %v1_10753 to i32*
  %v3_10753 = load i32, i32* %v2_10753, align 4
  store i32 %v3_10753, i32* %eax.global-to-local, align 4
  %v1_10756 = inttoptr i32 %v3_10753 to i32*
  %v2_10756 = load i32, i32* %v1_10756, align 4
  store i32 %v2_10756, i32* %eax.global-to-local, align 4
  %v1_10758 = add i32 %v2_10756, ptrtoint (i32* @global_var_fc.2247 to i32)
  %v2_10758 = inttoptr i32 %v1_10758 to i32*
  store i32 0, i32* %v2_10758, align 4
  %v0_10762 = load i32, i32* @ebp, align 4
  %v1_10762 = add i32 %v0_10762, -28
  %v2_10762 = inttoptr i32 %v1_10762 to i32*
  %v3_10762 = load i32, i32* %v2_10762, align 4
  store i32 %v3_10762, i32* %eax.global-to-local, align 4
  %v1_10765 = inttoptr i32 %v3_10762 to i32*
  %v2_10765 = load i32, i32* %v1_10765, align 4
  %v1_10767 = add i32 %v2_10765, ptrtoint (i32* @global_var_100.2248 to i32)
  %v2_10767 = inttoptr i32 %v1_10767 to i32*
  store i32 0, i32* %v2_10767, align 4
  %v0_10771 = load i32, i32* @ebp, align 4
  %v1_10771 = add i32 %v0_10771, -16
  store i32 %v1_10771, i32* %eax.global-to-local, align 4
  %v2_1077c = call i32 @function_107b4(i32 %v1_10771, i32 %v1_10741)
  store i32 %v2_1077c, i32* %eax.global-to-local, align 4
  ret i32 %v2_1077c
}

define i32 @function_1077e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1077e:
  %v0_1077e = load i32, i32* @ebp, align 4
  %v1_1077e = add i32 %v0_1077e, -28
  %v2_1077e = inttoptr i32 %v1_1077e to i32*
  %v3_1077e = load i32, i32* %v2_1077e, align 4
  %v1_10781 = add i32 %v3_1077e, 4
  %v2_10781 = inttoptr i32 %v1_10781 to i32*
  %v3_10781 = load i32, i32* %v2_10781, align 4
  ret i32 %v3_10781
}

define i32 @function_107b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107b4:
  %v0_107b4 = load i32, i32* @ebp, align 4
  %v1_107b4 = add i32 %v0_107b4, -12
  %v2_107b4 = inttoptr i32 %v1_107b4 to i32*
  %v3_107b4 = load i32, i32* %v2_107b4, align 4
  %v1_107b7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_107b7 = xor i32 %v1_107b7, %v3_107b4
  %v3_107b7 = icmp eq i32 %v2_107b7, 0
  store i32 %v2_107b7, i32* @eax, align 4
  br i1 %v3_107b7, label %bb, label %dec_label_pc_107c0

bb:                                               ; preds = %dec_label_pc_107b4
  %v1_107be = call i32 @function_107c5()
  br label %dec_label_pc_107c0

dec_label_pc_107c0:                               ; preds = %bb, %dec_label_pc_107b4
  %v2_107be = phi i32 [ %v1_107be, %bb ], [ %v2_107b7, %dec_label_pc_107b4 ]
  ret i32 %v2_107be
}

define i32 @function_107c5() local_unnamed_addr {
dec_label_pc_107c5:
  %v0_107c6 = load i32, i32* @eax, align 4
  ret i32 %v0_107c6
}

define i32 @_ZN5boost18condition_variable4waitERNS_11unique_lockINS_5mutexEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_107c8:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_107e6 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_107e6, i32* @eax, align 4
  %v1_107ec = call i32 @function_26438(i32 %v2_107e6)
  %v1_107f4 = add i32 %arg1, 24
  %v2_10802 = ptrtoint i32* %stack_var_-36 to i32
  %v3_10808 = call i32 @function_20d54(i32 %v2_10802, i32 %arg1, i32 %v1_107f4)
  store i32 %v2_107e6, i32* @eax, align 4
  %v2_1081a = call i32 @function_264ac(i32 %v2_107e6, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_10865() local_unnamed_addr {
dec_label_pc_10865:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_10865 = add i32 %tmp91, 76144709
  %v2_10865 = inttoptr i32 %v1_10865 to i32*
  %v3_10865 = load i32, i32* %v2_10865, align 4
  %v4_10865 = add i32 %v3_10865, -1
  store i32 %v4_10865, i32* %v2_10865, align 4
  %v0_1086b = load i32, i32* %eax.global-to-local, align 4
  %v11_1086b = and i32 %v0_1086b, -24
  store i32 %v11_1086b, i32* %eax.global-to-local, align 4
  %v1_1086f = inttoptr i32 %v11_1086b to i32*
  %v2_1086f = load i32, i32* %v1_1086f, align 8
  %v4_1086f = add i32 %v2_1086f, %v11_1086b
  store i32 %v4_1086f, i32* %v1_1086f, align 8
  %v0_10871 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10871 = add i32 %v0_10871, -20
  store i32 %v1_10871, i32* %eax.global-to-local, align 4
  %v1_1087c = add i32 %v0_10871, -12
  %v2_1087c = inttoptr i32 %v1_1087c to i32*
  %v3_1087c = load i32, i32* %v2_1087c, align 4
  store i32 %v3_1087c, i32* %eax.global-to-local, align 4
  %v1_1087f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1087f = xor i32 %v1_1087f, %v3_1087c
  %v3_1087f = icmp eq i32 %v2_1087f, 0
  store i32 %v2_1087f, i32* @eax, align 4
  br i1 %v3_1087f, label %bb, label %dec_label_pc_10888

bb:                                               ; preds = %dec_label_pc_10865
  %v2_10886 = call i32 @function_108b5(i32 %v1_10871)
  store i32 %v2_10886, i32* @eax, align 4
  br label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %bb, %dec_label_pc_10865
  %v0_10888 = call i32 @function_108b0()
  store i32 %v0_10888, i32* %eax.global-to-local, align 4
  ret i32 %v0_10888

; uselistorder directives
  uselistorder i32 %v11_1086b, { 0, 2, 1 }
}

define i32 @function_1088a() local_unnamed_addr {
dec_label_pc_1088a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1088a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1088a, i32* @ebx, align 4
  %v0_1088c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1088c = add i32 %v0_1088c, -32
  store i32 %v1_1088c, i32* %eax.global-to-local, align 4
  %v1_10897 = call i32 @function_1089b(i32 %v1_1088c)
  store i32 %v1_10897, i32* %eax.global-to-local, align 4
  ret i32 %v1_10897
}

define i32 @function_10899() local_unnamed_addr {
dec_label_pc_10899:
  %eax.global-to-local = alloca i32, align 4
  %v0_10899 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10899
}

define i32 @function_1089b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1089b:
  %v0_108a6 = load i32, i32* @ebx, align 4
  ret i32 %v0_108a6
}

define i32 @function_108b0() local_unnamed_addr {
dec_label_pc_108b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_108b5(i32 %arg1) local_unnamed_addr {
dec_label_pc_108b5:
  %v0_108ba = load i32, i32* @eax, align 4
  ret i32 %v0_108ba
}

define i32 @_ZN5boost18condition_variable10notify_oneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_108bc:
  %stack_var_-24 = alloca i32, align 4
  %v2_108da = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_108da, i32* @eax, align 4
  %v2_108e0 = call i32 @function_1fd46(i32 %v2_108da, i32 %arg1)
  %v1_108e8 = add i32 %arg1, 24
  ret i32 %v1_108e8
}

define i32 @function_10936() local_unnamed_addr {
dec_label_pc_10936:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10936 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10936 = add i32 %v0_10936, -1
  store i32 %v1_10936, i32* %ecx.global-to-local, align 4
  %v0_10938 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10938
}

define i32 @_ZN5boost18condition_variable10notify_allEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1093a:
  %stack_var_-24 = alloca i32, align 4
  %v2_10958 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1095e = call i32 @function_1fdc4(i32 %v2_10958, i32 %arg1)
  %v1_10966 = add i32 %arg1, 24
  ret i32 %v1_10966
}

define i32 @function_109b4() local_unnamed_addr {
dec_label_pc_109b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_109b4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_109b4 = add i32 %v0_109b4, -1
  store i32 %v1_109b4, i32* %ecx.global-to-local, align 4
  %v0_109b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_109b6
}

define i32 @_ZN5boost12shared_mutex15release_waitersEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_109b8:
  %v1_109d2 = add i32 %arg1, 104
  store i32 %v1_109d2, i32* @eax, align 4
  %v1_109d8 = call i32 @function_21274(i32 %v1_109d2)
  %v1_109e0 = add i32 %arg1, 32
  %v4_109e0 = icmp ugt i32 %arg1, -33
  store i1 %v4_109e0, i1* @cf, align 1
  store i32 %v1_109e0, i32* @eax, align 4
  %v1_109e6 = call i32 @function_212f2(i32 %v1_109e0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN5boost12shared_mutexC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_109fe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  %v1_10a19 = add i32 %tmp103, 8
  %v10_10a19 = icmp eq i32 %v1_10a19, 0
  store i1 %v10_10a19, i1* @zf, align 1
  store i32 %v1_10a19, i32* @eax, align 4
  store i32 %v1_10a19, i32* %stack_var_-60, align 4
  %v1_10a1f = call i32 @function_1ffa2(i32 %v1_10a19)
  %v1_10a43 = add i32 %tmp103, 176
  store i32 %v1_10a43, i32* %stack_var_-60, align 4
  store i32 0, i32* %arg1, align 4
  %v2_10a6e = add i32 %tmp103, 4
  %v3_10a6e = inttoptr i32 %v2_10a6e to i32*
  store i32 0, i32* %v3_10a6e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10a7d

bb:                                               ; preds = %dec_label_pc_109fe
  %v1_10a7b = load i32, i32* %stack_var_-60, align 4
  %v2_10a7b = call i32 @function_10ac2(i32 %v1_10a7b)
  store i32 %v2_10a7b, i32* @eax, align 4
  br label %dec_label_pc_10a7d

dec_label_pc_10a7d:                               ; preds = %bb, %dec_label_pc_109fe
  %v0_10a7d = call i32 @function_10abd()
  ret i32 %v0_10a7d

; uselistorder directives
  uselistorder i32 %tmp103, { 0, 2, 1 }
}

define i32 @function_10a7f() local_unnamed_addr {
dec_label_pc_10a7f:
  %eax.global-to-local = alloca i32, align 4
  %v0_10a7f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_10a7f, i32* @ebx, align 4
  %v0_10a81 = load i32, i32* @ebp, align 4
  %v1_10a81 = add i32 %v0_10a81, -28
  %v2_10a81 = inttoptr i32 %v1_10a81 to i32*
  %v3_10a81 = load i32, i32* %v2_10a81, align 4
  %v1_10a84 = add i32 %v3_10a81, 104
  store i32 %v1_10a84, i32* %eax.global-to-local, align 4
  %v1_10a8f = call i32 @function_10a93(i32 %v1_10a84)
  store i32 %v1_10a8f, i32* %eax.global-to-local, align 4
  ret i32 %v1_10a8f
}

define i32 @function_10a91() local_unnamed_addr {
dec_label_pc_10a91:
  %eax.global-to-local = alloca i32, align 4
  %v0_10a91 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10a91
}

define i32 @function_10a93(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a93:
  %v0_10a93 = load i32, i32* @ebp, align 4
  %v1_10a93 = add i32 %v0_10a93, -28
  %v2_10a93 = inttoptr i32 %v1_10a93 to i32*
  %v3_10a93 = load i32, i32* %v2_10a93, align 4
  %v1_10a96 = add i32 %v3_10a93, 32
  %v1_10aa1 = call i32 @function_10aa5(i32 %v1_10a96)
  ret i32 %v1_10aa1
}

define i32 @function_10aa3() local_unnamed_addr {
dec_label_pc_10aa3:
  %eax.global-to-local = alloca i32, align 4
  %v0_10aa3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10aa3
}

define i32 @function_10aa5(i32 %arg1) local_unnamed_addr {
dec_label_pc_10aa5:
  %v0_10ab3 = load i32, i32* @ebx, align 4
  ret i32 %v0_10ab3
}

define i32 @function_10abd() local_unnamed_addr {
dec_label_pc_10abd:
  %v0_10abd = load i32, i32* @eax, align 4
  ret i32 %v0_10abd
}

define i32 @function_10ac2(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ac2:
  %v0_10ac7 = load i32, i32* @eax, align 4
  ret i32 %v0_10ac7
}

define i32 @_ZN5boost12shared_mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10ac8:
  %v1_10ae2 = add i32 %arg1, 176
  %v4_10ae2 = icmp ugt i32 %arg1, -177
  store i1 %v4_10ae2, i1* @cf, align 1
  store i32 %v1_10ae2, i32* @eax, align 4
  %v1_10aea = call i32 @function_20f56(i32 %v1_10ae2)
  %v1_10af2 = add i32 %arg1, 104
  %v5_10af2 = icmp ugt i32 %arg1, -105
  store i1 %v5_10af2, i1* @cf, align 1
  store i32 %v1_10af2, i32* @eax, align 4
  %v1_10af8 = call i32 @function_20f56(i32 %v1_10af2)
  %v1_10b00 = add i32 %arg1, 32
  %v4_10b00 = icmp ugt i32 %arg1, -33
  store i1 %v4_10b00, i1* @cf, align 1
  store i32 %v1_10b00, i32* @eax, align 4
  %v1_10b06 = call i32 @function_20f56(i32 %v1_10b00)
  %v1_10b0e = add i32 %arg1, 8
  store i32 %v1_10b0e, i32* @eax, align 4
  %v1_10b14 = call i32 @function_200e4(i32 %v1_10b0e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10b25

bb:                                               ; preds = %dec_label_pc_10ac8
  %v1_10b23 = call i32 @function_10b2a()
  br label %dec_label_pc_10b25

dec_label_pc_10b25:                               ; preds = %bb, %dec_label_pc_10ac8
  %v2_10b23 = phi i32 [ %v1_10b23, %bb ], [ 0, %dec_label_pc_10ac8 ]
  ret i32 %v2_10b23

; uselistorder directives
  uselistorder i32 (i32)* @function_20f56, { 2, 1, 0 }
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10b2a() local_unnamed_addr {
dec_label_pc_10b2a:
  %v0_10b2b = load i32, i32* @eax, align 4
  ret i32 %v0_10b2b
}

define i32 @_ZN5boost12shared_mutex11lock_sharedEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b2c:
  %stack_var_-17 = alloca i32, align 4
  %v2_10b44 = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_10b44
}

define i32 @function_10b4f() local_unnamed_addr {
dec_label_pc_10b4f:
  %ebp.global-to-local = alloca i32, align 4
  %v0_10b4f = load i32, i32* %ebp.global-to-local, align 4
  %v1_10b4f = add i32 %v0_10b4f, -28
  %v2_10b4f = inttoptr i32 %v1_10b4f to i32*
  br label %dec_label_pc_10b7b

dec_label_pc_10b66:                               ; preds = %dec_label_pc_10b9d
  br label %dec_label_pc_10b7b

dec_label_pc_10b7b:                               ; preds = %dec_label_pc_10b66, %dec_label_pc_10b4f
  %v3_10b7b = load i32, i32* %v2_10b4f, align 4
  %v1_10b7e = add i32 %v3_10b7b, 4
  %v2_10b7e = inttoptr i32 %v1_10b7e to i8*
  %v3_10b7e = load i8, i8* %v2_10b7e, align 1
  %v5_10b82 = icmp eq i8 %v3_10b7e, 0
  %v1_10b84 = icmp eq i1 %v5_10b82, false
  br i1 %v1_10b84, label %dec_label_pc_10b9d, label %dec_label_pc_10b86

dec_label_pc_10b86:                               ; preds = %dec_label_pc_10b7b
  %v3_10b86 = load i32, i32* %v2_10b4f, align 4
  %v1_10b89 = add i32 %v3_10b86, 6
  %v2_10b89 = inttoptr i32 %v1_10b89 to i8*
  %v3_10b89 = load i8, i8* %v2_10b89, align 1
  %v5_10b8d = icmp ne i8 %v3_10b89, 0
  %. = zext i1 %v5_10b8d to i8
  br label %dec_label_pc_10b9d

dec_label_pc_10b9d:                               ; preds = %dec_label_pc_10b86, %dec_label_pc_10b7b
  %storemerge2 = phi i8 [ 1, %dec_label_pc_10b7b ], [ %., %dec_label_pc_10b86 ]
  %v5_10b9d = icmp eq i8 %storemerge2, 0
  %v1_10b9f = icmp eq i1 %v5_10b9d, false
  br i1 %v1_10b9f, label %dec_label_pc_10b66, label %dec_label_pc_10ba1

dec_label_pc_10ba1:                               ; preds = %dec_label_pc_10b9d
  %v3_10b66 = load i32, i32* %v2_10b4f, align 4
  %v1_10ba4 = inttoptr i32 %v3_10b66 to i32*
  %v2_10ba4 = load i32, i32* %v1_10ba4, align 4
  %v1_10ba6 = add i32 %v2_10ba4, 1
  %v2_10bac = inttoptr i32 %v3_10b66 to i32*
  store i32 %v1_10ba6, i32* %v2_10bac, align 4
  %v0_10bae = load i32, i32* %ebp.global-to-local, align 4
  %v1_10bc4 = add i32 %v0_10bae, -12
  %v2_10bc4 = inttoptr i32 %v1_10bc4 to i32*
  %v3_10bc4 = load i32, i32* %v2_10bc4, align 4
  %v1_10bc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10bc7 = xor i32 %v1_10bc7, %v3_10bc4
  %v3_10bc7 = icmp eq i32 %v2_10bc7, 0
  store i32 %v2_10bc7, i32* @eax, align 4
  br i1 %v3_10bc7, label %bb, label %dec_label_pc_10bd0

bb:                                               ; preds = %dec_label_pc_10ba1
  %v1_10bb9 = add i32 %v0_10bae, -13
  %v2_10bce = call i32 @function_10bfd(i32 %v1_10bb9)
  store i32 %v2_10bce, i32* @eax, align 4
  br label %dec_label_pc_10bd0

dec_label_pc_10bd0:                               ; preds = %bb, %dec_label_pc_10ba1
  %v0_10bd0 = call i32 @function_10bf8()
  ret i32 %v0_10bd0

; uselistorder directives
  uselistorder i32 %v0_10bae, { 1, 0 }
  uselistorder i32* %v2_10b4f, { 2, 1, 0 }
}

define i32 @function_10bd2() local_unnamed_addr {
dec_label_pc_10bd2:
  %v0_10bd4 = load i32, i32* @ebp, align 4
  %v1_10bd4 = add i32 %v0_10bd4, -24
  %v1_10bdf = call i32 @function_10be3(i32 %v1_10bd4)
  ret i32 %v1_10bdf
}

define i32 @function_10be1() local_unnamed_addr {
dec_label_pc_10be1:
  %eax.global-to-local = alloca i32, align 4
  %v0_10be1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10be1
}

define i32 @function_10be3(i32 %arg1) local_unnamed_addr {
dec_label_pc_10be3:
  %v0_10be3 = load i32, i32* @ebp, align 4
  %v1_10be3 = add i32 %v0_10be3, -13
  ret i32 %v1_10be3
}

define i32 @function_10bf8() local_unnamed_addr {
dec_label_pc_10bf8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10bfd(i32 %arg1) local_unnamed_addr {
dec_label_pc_10bfd:
  %v0_10c02 = load i32, i32* @eax, align 4
  ret i32 %v0_10c02
}

define i32 @_ZN5boost12shared_mutex13unlock_sharedEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10c04:
  %stack_var_-28 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_10c1e = add i32 %tmp104, 8
  %v2_10c25 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10c2b = call i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj20ELj4EE7addressEv(i32 %v2_10c25, i32 %v1_10c1e)
  %v2_10c33 = load i32, i32* %arg1, align 4
  %v1_10c35 = add i32 %v2_10c33, -1
  store i32 %v1_10c35, i32* %arg1, align 4
  %v1_10c42 = icmp eq i32 %v1_10c35, 0
  %v10_10c4a = icmp eq i1 %v1_10c42, false
  br i1 %v10_10c4a, label %dec_label_pc_10c8d, label %dec_label_pc_10c50

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c04
  %v1_10c53 = add i32 %tmp104, 5
  %v2_10c53 = inttoptr i32 %v1_10c53 to i8*
  %v3_10c53 = load i8, i8* %v2_10c53, align 1
  %v5_10c57 = icmp eq i8 %v3_10c53, 0
  br i1 %v5_10c57, label %dec_label_pc_10c7b, label %dec_label_pc_10c5b

dec_label_pc_10c5b:                               ; preds = %dec_label_pc_10c50
  store i8 0, i8* %v2_10c53, align 1
  %v1_10c65 = add i32 %tmp104, 4
  %v2_10c65 = inttoptr i32 %v1_10c65 to i8*
  store i8 1, i8* %v2_10c65, align 1
  %v1_10c6c = add i32 %tmp104, 176
  store i32 %v1_10c6c, i32* @eax, align 4
  %v1_10c74 = call i32 @function_214c0(i32 %v1_10c6c)
  br label %dec_label_pc_10c82

dec_label_pc_10c7b:                               ; preds = %dec_label_pc_10c50
  %v1_10c7e = add i32 %tmp104, 6
  %v2_10c7e = inttoptr i32 %v1_10c7e to i8*
  store i8 0, i8* %v2_10c7e, align 1
  br label %dec_label_pc_10c82

dec_label_pc_10c82:                               ; preds = %dec_label_pc_10c7b, %dec_label_pc_10c5b
  store i32 %tmp104, i32* @eax, align 4
  %v1_10c88 = call i32 @function_215bc(i32 %tmp104)
  br label %dec_label_pc_10c8d

dec_label_pc_10c8d:                               ; preds = %dec_label_pc_10c82, %dec_label_pc_10c04
  store i32 %v2_10c25, i32* @eax, align 4
  %v1_10c93 = call i32 @function_26976(i32 %v2_10c25)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10ca4

bb:                                               ; preds = %dec_label_pc_10c8d
  %v1_10ca2 = call i32 @function_10ca9()
  br label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %bb, %dec_label_pc_10c8d
  %v2_10ca2 = phi i32 [ %v1_10ca2, %bb ], [ 0, %dec_label_pc_10c8d ]
  ret i32 %v2_10ca2

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 4, 0, 1, 5, 6 }
}

define i32 @function_10ca9() local_unnamed_addr {
dec_label_pc_10ca9:
  %v0_10caa = load i32, i32* @eax, align 4
  ret i32 %v0_10caa
}

define i32 @_ZN5boost12shared_mutex4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_10cac:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_10cd2 = add i32 %tmp105, 8
  %v2_10cd9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_10cd9, i32* @eax, align 4
  %v2_10cdf = call i32 @function_269d4(i32 %v2_10cd9, i32 %v1_10cd2)
  %v1_10ce9 = add i32 %tmp105, 6
  %v2_10ce9 = inttoptr i32 %v1_10ce9 to i8*
  %v1_10cf0 = add i32 %tmp105, 104
  %v1_10d0e = add i32 %tmp105, 4
  %v2_10d0e = inttoptr i32 %v1_10d0e to i8*
  br label %dec_label_pc_10d02

dec_label_pc_10ce6:                               ; preds = %dec_label_pc_10d22
  store i8 1, i8* %v2_10ce9, align 1
  store i32 %v2_10cd9, i32* @eax, align 4
  %v2_10cfd = call i32 @function_21474(i32 %v1_10cf0, i32 %v2_10cd9)
  br label %dec_label_pc_10d02

dec_label_pc_10d02:                               ; preds = %dec_label_pc_10ce6, %dec_label_pc_10cac
  %v2_10d05 = load i32, i32* %arg1, align 4
  %v1_10d07 = icmp eq i32 %v2_10d05, 0
  %v1_10d09 = icmp eq i1 %v1_10d07, false
  br i1 %v1_10d09, label %dec_label_pc_10d22, label %dec_label_pc_10d0b

dec_label_pc_10d0b:                               ; preds = %dec_label_pc_10d02
  %v3_10d0e = load i8, i8* %v2_10d0e, align 1
  %v5_10d12 = icmp ne i8 %v3_10d0e, 0
  %. = zext i1 %v5_10d12 to i8
  br label %dec_label_pc_10d22

dec_label_pc_10d22:                               ; preds = %dec_label_pc_10d0b, %dec_label_pc_10d02
  %storemerge2 = phi i8 [ 1, %dec_label_pc_10d02 ], [ %., %dec_label_pc_10d0b ]
  %v5_10d22 = icmp eq i8 %storemerge2, 0
  %v1_10d24 = icmp eq i1 %v5_10d22, false
  br i1 %v1_10d24, label %dec_label_pc_10ce6, label %dec_label_pc_10d26

dec_label_pc_10d26:                               ; preds = %dec_label_pc_10d22
  store i8 1, i8* %v2_10d0e, align 1
  store i32 %v2_10cd9, i32* @eax, align 4
  %v1_10d33 = call i32 @function_26a1e(i32 %v2_10cd9)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10d4f

bb:                                               ; preds = %dec_label_pc_10d26
  %v2_10cc4 = ptrtoint i32* %stack_var_-17 to i32
  %v2_10d4d = call i32 @function_10d7c(i32 %v2_10cc4)
  store i32 %v2_10d4d, i32* @eax, align 4
  br label %dec_label_pc_10d4f

dec_label_pc_10d4f:                               ; preds = %bb, %dec_label_pc_10d26
  %v0_10d4f = call i32 @function_10d77()
  ret i32 %v0_10d4f

; uselistorder directives
  uselistorder i32 104, { 1, 2, 0, 3, 4 }
}

define i32 @function_10d51() local_unnamed_addr {
dec_label_pc_10d51:
  %v0_10d53 = load i32, i32* @ebp, align 4
  %v1_10d53 = add i32 %v0_10d53, -24
  store i32 %v1_10d53, i32* @eax, align 4
  %v1_10d59 = call i32 @function_26a1e(i32 %v1_10d53)
  %v0_10d5e = call i32 @function_10d62()
  ret i32 %v0_10d5e

; uselistorder directives
  uselistorder i32 (i32)* @function_26a1e, { 1, 0 }
}

define i32 @function_10d60() local_unnamed_addr {
dec_label_pc_10d60:
  %eax.global-to-local = alloca i32, align 4
  %v0_10d60 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10d60
}

define i32 @function_10d62() local_unnamed_addr {
dec_label_pc_10d62:
  %v0_10d62 = load i32, i32* @ebp, align 4
  %v1_10d62 = add i32 %v0_10d62, -13
  ret i32 %v1_10d62
}

define i32 @function_10d77() local_unnamed_addr {
dec_label_pc_10d77:
  %v0_10d77 = load i32, i32* @eax, align 4
  ret i32 %v0_10d77
}

define i32 @function_10d7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d7c:
  %v0_10d81 = load i32, i32* @eax, align 4
  ret i32 %v0_10d81
}

define i32 @_ZN5boost12shared_mutex6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d82:
  %stack_var_-24 = alloca i32, align 4
  %v1_10d9c = add i32 %arg1, 8
  %v2_10da3 = ptrtoint i32* %stack_var_-24 to i32
  %v1_10db1 = add i32 %arg1, 4
  %v2_10db1 = inttoptr i32 %v1_10db1 to i8*
  store i8 0, i8* %v2_10db1, align 1
  %v1_10db8 = add i32 %arg1, 6
  %v2_10db8 = inttoptr i32 %v1_10db8 to i8*
  store i8 0, i8* %v2_10db8, align 1
  store i32 %arg1, i32* @eax, align 4
  %v2_10dc2 = call i32 @function_2173a(i32 %arg1, i32 %v1_10d9c)
  %v1_10dcd = call i32 @function_26af4(i32 %v2_10da3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10dde

bb:                                               ; preds = %dec_label_pc_10d82
  %v1_10ddc = call i32 @function_10de3()
  br label %dec_label_pc_10dde

dec_label_pc_10dde:                               ; preds = %bb, %dec_label_pc_10d82
  %v2_10ddc = phi i32 [ %v1_10ddc, %bb ], [ 0, %dec_label_pc_10d82 ]
  ret i32 %v2_10ddc

; uselistorder directives
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_10de3() local_unnamed_addr {
dec_label_pc_10de3:
  %v0_10de4 = load i32, i32* @eax, align 4
  ret i32 %v0_10de4
}

define i32 @_ZN5boost9exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10de6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38380.2236 to i32), i32* %arg1, align 4
  %v1_10e0f = add i32 %arg2, 4
  %v1_10e15 = add i32 %tmp103, 4
  %v5_10e15 = icmp ugt i32* %arg1, inttoptr (i32 -5 to i32*)
  store i1 %v5_10e15, i1* @cf, align 1
  store i32 %v1_10e15, i32* @eax, align 4
  %v2_10e1f = call i32 @function_26df6(i32 %v1_10e15, i32 %v1_10e0f)
  %v1_10e27 = add i32 %arg2, 8
  %v2_10e27 = inttoptr i32 %v1_10e27 to i32*
  %v3_10e27 = load i32, i32* %v2_10e27, align 4
  %v2_10e2d = add i32 %tmp103, 8
  %v3_10e2d = inttoptr i32 %v2_10e2d to i32*
  store i32 %v3_10e27, i32* %v3_10e2d, align 4
  %v1_10e33 = add i32 %arg2, 12
  %v2_10e33 = inttoptr i32 %v1_10e33 to i32*
  %v3_10e33 = load i32, i32* %v2_10e33, align 4
  %v2_10e39 = add i32 %tmp103, 12
  %v3_10e39 = inttoptr i32 %v2_10e39 to i32*
  store i32 %v3_10e33, i32* %v3_10e39, align 4
  %v1_10e3f = add i32 %arg2, 16
  %v2_10e3f = inttoptr i32 %v1_10e3f to i32*
  %v3_10e3f = load i32, i32* %v2_10e3f, align 4
  %v2_10e45 = add i32 %tmp103, 16
  %v3_10e45 = inttoptr i32 %v2_10e45 to i32*
  store i32 %v3_10e3f, i32* %v3_10e45, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_10e54

bb:                                               ; preds = %dec_label_pc_10de6
  %v1_10e52 = call i32 @function_10e59()
  br label %dec_label_pc_10e54

dec_label_pc_10e54:                               ; preds = %bb, %dec_label_pc_10de6
  %v2_10e52 = phi i32 [ %v1_10e52, %bb ], [ 0, %dec_label_pc_10de6 ]
  ret i32 %v2_10e52

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_10e59() local_unnamed_addr {
dec_label_pc_10e59:
  %v0_10e5a = load i32, i32* @eax, align 4
  ret i32 %v0_10e5a
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10e5c:
  %v1_10e76 = add i32 %arg1, 4
  store i32 %v1_10e76, i32* @eax, align 4
  %v1_10e7c = call i32 @function_2018e(i32 %v1_10e76)
  ret i32 0
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10e94:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_10eb4 = inttoptr i32 %arg2 to i32*
  %v2_10eb4 = load i32, i32* %v1_10eb4, align 4
  store i32 %v2_10eb4, i32* %arg1, align 4
  %v1_10ebe = add i32 %arg2, 4
  %v1_10ec4 = add i32 %tmp103, 4
  store i32 %v1_10ec4, i32* @eax, align 4
  %v2_10ece = call i32 @function_20206(i32 %v1_10ec4, i32 %v1_10ebe)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_10ee6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_38238.2249 to i32), i32* %arg1, align 4
  store i32 %tmp99, i32* @eax, align 4
  %v1_10f0c = call i32 @function_19d36(i32 %tmp99)
  %v1_10f1b = call i32 @function_10f28()
  ret i32 %tmp99
}

define i32 @function_10f28() local_unnamed_addr {
dec_label_pc_10f28:
  %v0_10f28 = load i32, i32* @ebp, align 4
  %v1_10f28 = add i32 %v0_10f28, -12
  %v2_10f28 = inttoptr i32 %v1_10f28 to i32*
  %v3_10f28 = load i32, i32* %v2_10f28, align 4
  %v1_10f2b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_10f2b = xor i32 %v1_10f2b, %v3_10f28
  %v3_10f2b = icmp eq i32 %v2_10f2b, 0
  store i32 %v2_10f2b, i32* @eax, align 4
  br i1 %v3_10f2b, label %bb, label %dec_label_pc_10f34

bb:                                               ; preds = %dec_label_pc_10f28
  %v1_10f32 = call i32 @function_10f39()
  br label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %bb, %dec_label_pc_10f28
  %v2_10f32 = phi i32 [ %v1_10f32, %bb ], [ %v2_10f2b, %dec_label_pc_10f28 ]
  ret i32 %v2_10f32
}

define i32 @function_10f39() local_unnamed_addr {
dec_label_pc_10f39:
  %v0_10f3a = load i32, i32* @eax, align 4
  ret i32 %v0_10f3a
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_10f3c:
  store i32 %arg1, i32* @eax, align 4
  %v1_10f59 = call i32 @function_21e22(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_10f68() local_unnamed_addr {
dec_label_pc_10f68:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_10f68 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10f68 = add i32 %v0_10f68, 862319685
  %v2_10f68 = inttoptr i32 %v1_10f68 to i32*
  %v3_10f68 = load i32, i32* %v2_10f68, align 4
  %v4_10f68 = add i32 %v3_10f68, -1
  store i32 %v4_10f68, i32* %v2_10f68, align 4
  %v0_10f6e = load i32, i32* %eax.global-to-local, align 4
  %v1_10f6e = add i32 %v0_10f6e, 20
  store i32 %v1_10f6e, i32* %eax.global-to-local, align 4
  ret i32 %v1_10f6e
}

define i32 @_ZNK5boost6system14error_categoryeqERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10f7c:
  %v15_10f9c = icmp eq i32 %arg1, %arg2
  %v1_10f9f = zext i1 %v15_10f9c to i32
  %v3_10f9f = and i32 %arg1, -256
  %v4_10f9f = or i32 %v1_10f9f, %v3_10f9f
  ret i32 %v4_10f9f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZN5boost6system15error_conditionC1EiRKNS0_14error_categoryE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10fb6:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_10fe7 = add i32 %tmp104, 4
  %v3_10fe7 = inttoptr i32 %v2_10fe7 to i32*
  store i32 %arg3, i32* %v3_10fe7, align 4
  ret i32 0
}

define i32 @_ZN5boost6systemeqERKNS0_15error_conditionES3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ffd:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1101d = add i32 %tmp102, 4
  %v2_1101d = inttoptr i32 %v1_1101d to i32*
  %v3_1101d = load i32, i32* %v2_1101d, align 4
  %v1_11023 = add i32 %arg2, 4
  %v2_11023 = inttoptr i32 %v1_11023 to i32*
  %v3_11023 = load i32, i32* %v2_11023, align 4
  %v12_11026 = icmp eq i32 %v3_1101d, %v3_11023
  %v1_11028 = icmp eq i1 %v12_11026, false
  br i1 %v1_11028, label %dec_label_pc_1103f, label %dec_label_pc_1102a

dec_label_pc_1102a:                               ; preds = %dec_label_pc_10ffd
  %v2_1102d = load i32, i32* %arg1, align 4
  %v1_11032 = inttoptr i32 %arg2 to i32*
  %v2_11032 = load i32, i32* %v1_11032, align 4
  %v12_11034 = icmp eq i32 %v2_1102d, %v2_11032
  %v1_11036 = icmp eq i1 %v12_11034, false
  br i1 %v1_11036, label %dec_label_pc_1103f, label %dec_label_pc_11044

dec_label_pc_1103f:                               ; preds = %dec_label_pc_1102a, %dec_label_pc_10ffd
  br label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %dec_label_pc_1102a, %dec_label_pc_1103f
  %storemerge = phi i32 [ 0, %dec_label_pc_1103f ], [ 1, %dec_label_pc_1102a ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11050

bb:                                               ; preds = %dec_label_pc_11044
  %v1_1104e = call i32 @function_11055()
  br label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %bb, %dec_label_pc_11044
  %v2_1104e = phi i32 [ %v1_1104e, %bb ], [ %storemerge, %dec_label_pc_11044 ]
  ret i32 %v2_1104e

; uselistorder directives
  uselistorder label %dec_label_pc_11044, { 1, 0 }
}

define i32 @function_11055() local_unnamed_addr {
dec_label_pc_11055:
  %v0_11056 = load i32, i32* @eax, align 4
  ret i32 %v0_11056
}

define i32 @_ZNK5boost6system10error_code5valueEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11058:
  %v2_11072 = load i32, i32* %arg1, align 4
  store i32 %v2_11072, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_11080

bb:                                               ; preds = %dec_label_pc_11058
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1107e = call i32 @function_11085(i32 %tmp100)
  br label %dec_label_pc_11080

dec_label_pc_11080:                               ; preds = %bb, %dec_label_pc_11058
  %v3_1107e = phi i32 [ %v2_1107e, %bb ], [ %v2_11072, %dec_label_pc_11058 ]
  ret i32 %v3_1107e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_11085(i32 %arg1) local_unnamed_addr {
dec_label_pc_11085:
  %v0_11086 = load i32, i32* @eax, align 4
  ret i32 %v0_11086
}

define i32 @_ZNK5boost6system10error_code8categoryEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_11088:
  %v1_110a2 = add i32 %arg1, 4
  %v2_110a2 = inttoptr i32 %v1_110a2 to i32*
  %v3_110a2 = load i32, i32* %v2_110a2, align 4
  store i32 %v3_110a2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_110b1

bb:                                               ; preds = %dec_label_pc_11088
  %v2_110af = call i32 @function_110b6(i32 %arg1)
  br label %dec_label_pc_110b1

dec_label_pc_110b1:                               ; preds = %bb, %dec_label_pc_11088
  %v3_110af = phi i32 [ %v2_110af, %bb ], [ %v3_110a2, %dec_label_pc_11088 ]
  ret i32 %v3_110af
}

define i32 @function_110b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_110b6:
  %v0_110b7 = load i32, i32* @eax, align 4
  ret i32 %v0_110b7
}

define i32 @_ZNK5boost6system10error_code7messageEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_110b8:
  %ebx.global-to-local = alloca i32, align 4
  %v0_110bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_110d9 = add i32 %arg2, 4
  %v2_110d9 = inttoptr i32 %v1_110d9 to i32*
  %v3_110d9 = load i32, i32* %v2_110d9, align 4
  %v1_110dc = inttoptr i32 %v3_110d9 to i32*
  %v2_110dc = load i32, i32* %v1_110dc, align 4
  %v1_110de = add i32 %v2_110dc, 12
  %v1_110e1 = inttoptr i32 %v1_110de to i32*
  %v2_110e1 = load i32, i32* %v1_110e1, align 4
  store i32 %v2_110e1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_110e9 = call i32 @function_22110(i32 %arg2)
  store i32 %v0_110bb, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11122:
  %v3_11159 = call i32 @function_220d8(i32 %arg1, i32 %arg3, i32 %arg2)
  ret i32 %arg1
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11176:
  %stack_var_-24 = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  %v2_111a3 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_111a3, i32* @eax, align 4
  %v4_111c9 = call i32 @function_22173(i32 %v2_111a3, i32 %arg3, i32 %tmp108, i32 %arg2)
  store i32 %v4_111c9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_111da

bb:                                               ; preds = %dec_label_pc_11176
  %v1_111d8 = call i32 @function_111df()
  br label %dec_label_pc_111da

dec_label_pc_111da:                               ; preds = %bb, %dec_label_pc_11176
  %v2_111d8 = phi i32 [ %v1_111d8, %bb ], [ %v4_111c9, %dec_label_pc_11176 ]
  ret i32 %v2_111d8
}

define i32 @function_111df() local_unnamed_addr {
dec_label_pc_111df:
  %v0_111e0 = load i32, i32* @eax, align 4
  ret i32 %v0_111e0
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_111e2:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_1120b = call i32 @function_2226a(i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_1121a = call i32 @function_2215e(i32 %arg1, i32 %v1_1120b)
  %v4_1121f = trunc i32 %v2_1121a to i8
  %v5_1121f = icmp eq i8 %v4_1121f, 0
  br i1 %v5_1121f, label %dec_label_pc_1123a, label %dec_label_pc_11223

dec_label_pc_11223:                               ; preds = %dec_label_pc_111e2
  store i32 %arg2, i32* @eax, align 4
  %v1_11229 = call i32 @function_2223a(i32 %arg2)
  %v15_1122e = icmp eq i32 %v1_11229, %arg3
  %v1_11231 = icmp eq i1 %v15_1122e, false
  br i1 %v1_11231, label %dec_label_pc_1123a, label %dec_label_pc_1123f

dec_label_pc_1123a:                               ; preds = %dec_label_pc_11223, %dec_label_pc_111e2
  br label %dec_label_pc_1123f

dec_label_pc_1123f:                               ; preds = %dec_label_pc_11223, %dec_label_pc_1123a
  %storemerge = phi i32 [ 0, %dec_label_pc_1123a ], [ 1, %dec_label_pc_11223 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1124b

bb:                                               ; preds = %dec_label_pc_1123f
  %v1_11249 = call i32 @function_11250()
  br label %dec_label_pc_1124b

dec_label_pc_1124b:                               ; preds = %bb, %dec_label_pc_1123f
  %v2_11249 = phi i32 [ %v1_11249, %bb ], [ %storemerge, %dec_label_pc_1123f ]
  ret i32 %v2_11249

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 3, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1123f, { 1, 0 }
}

define i32 @function_11250() local_unnamed_addr {
dec_label_pc_11250:
  %v0_11251 = load i32, i32* @eax, align 4
  ret i32 %v0_11251
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_11252:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38218_type* @global_var_38218.2250 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_112a4() local_unnamed_addr {
dec_label_pc_112a4:
  %v0_112a4 = call i32 @function_112ce()
  ret i32 %v0_112a4
}

define i32 @function_112ce() local_unnamed_addr {
dec_label_pc_112ce:
  %v0_112ce = load i32, i32* @ebp, align 4
  %v1_112ce = add i32 %v0_112ce, -12
  %v2_112ce = inttoptr i32 %v1_112ce to i32*
  %v3_112ce = load i32, i32* %v2_112ce, align 4
  %v1_112d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_112d1 = xor i32 %v1_112d1, %v3_112ce
  %v3_112d1 = icmp eq i32 %v2_112d1, 0
  store i32 %v2_112d1, i32* @eax, align 4
  br i1 %v3_112d1, label %bb, label %dec_label_pc_112da

bb:                                               ; preds = %dec_label_pc_112ce
  %v1_112d8 = call i32 @function_112df()
  br label %dec_label_pc_112da

dec_label_pc_112da:                               ; preds = %bb, %dec_label_pc_112ce
  %v2_112d8 = phi i32 [ %v1_112d8, %bb ], [ %v2_112d1, %dec_label_pc_112ce ]
  ret i32 %v2_112d8
}

define i32 @function_112df() local_unnamed_addr {
dec_label_pc_112df:
  %v0_112e5 = load i32, i32* @eax, align 4
  ret i32 %v0_112e5
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32 %arg1) {
dec_label_pc_112e6:
  store i32 %arg1, i32* @eax, align 4
  %v1_11303 = call i32 @function_22538(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1131f

bb:                                               ; preds = %dec_label_pc_112e6
  %v2_1131d = call i32 @function_11324(i32 %arg1)
  br label %dec_label_pc_1131f

dec_label_pc_1131f:                               ; preds = %bb, %dec_label_pc_112e6
  %v3_1131d = phi i32 [ %v2_1131d, %bb ], [ 0, %dec_label_pc_112e6 ]
  ret i32 %v3_1131d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_11324(i32 %arg1) local_unnamed_addr {
dec_label_pc_11324:
  %v0_11325 = load i32, i32* @eax, align 4
  ret i32 %v0_11325
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_11326:
  %v1_11341 = add i32 %arg1, 16
  ret i32 %v1_11341
}

define i32 @function_11360() local_unnamed_addr {
dec_label_pc_11360:
  %eax.global-to-local = alloca i32, align 4
  %v0_11363 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11363
}

define i32 @function_113e1() local_unnamed_addr {
dec_label_pc_113e1:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_113e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_113e1 = add i32 %v0_113e1, -1948743229
  %v2_113e1 = inttoptr i32 %v1_113e1 to i32*
  %v3_113e1 = load i32, i32* %v2_113e1, align 4
  %v4_113e1 = add i32 %v3_113e1, -1
  store i32 %v4_113e1, i32* %v2_113e1, align 4
  %v0_113e9 = load i32, i32* %edx.global-to-local, align 4
  %v1_113e9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_113e9 = xor i32 %v1_113e9, %v0_113e9
  %v3_113e9 = icmp eq i32 %v2_113e9, 0
  store i32 %v2_113e9, i32* %edx.global-to-local, align 4
  br i1 %v3_113e9, label %bb, label %dec_label_pc_113f2

bb:                                               ; preds = %dec_label_pc_113e1
  %v1_113f0 = call i32 @function_1143b()
  store i32 %v1_113f0, i32* @eax, align 4
  br label %dec_label_pc_113f2

dec_label_pc_113f2:                               ; preds = %bb, %dec_label_pc_113e1
  %v0_113f2 = call i32 @function_11436()
  ret i32 %v0_113f2
}

define i32 @function_113f5() local_unnamed_addr {
dec_label_pc_113f5:
  %eax.global-to-local = alloca i32, align 4
  %v0_113f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_113f5
}

define i32 @function_11401() local_unnamed_addr {
dec_label_pc_11401:
  %ebx.global-to-local = alloca i32, align 4
  %v0_11401 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v0_11401
}

define i32 @function_11418() local_unnamed_addr {
dec_label_pc_11418:
  %eax.global-to-local = alloca i32, align 4
  %v0_11418 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11418
}

define i32 @function_11436() local_unnamed_addr {
dec_label_pc_11436:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1143b() local_unnamed_addr {
dec_label_pc_1143b:
  %v0_1143f = load i32, i32* @eax, align 4
  ret i32 %v0_1143f
}

define i32 @_ZN12bignum_errorC1ERKSs(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11440:
  ret i32 %arg1
}

define i32 @function_11488() local_unnamed_addr {
dec_label_pc_11488:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11488 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11488 = add i32 %v0_11488, -1
  store i32 %v1_11488, i32* %ecx.global-to-local, align 4
  %v0_1148a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1148a
}

define i32 @_ZN12bignum_errorD1Ev(i32* %arg1) {
dec_label_pc_1148c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38200_type* @global_var_38200.2251 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_114b7() local_unnamed_addr {
dec_label_pc_114b7:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_114ce = add i32 %tmp91, -12
  %v2_114ce = inttoptr i32 %v1_114ce to i32*
  %v3_114ce = load i32, i32* %v2_114ce, align 4
  %v1_114d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_114d1 = xor i32 %v1_114d1, %v3_114ce
  ret i32 %v2_114d1
}

define i32 @_ZN12bignum_errorD0Ev(i32 %arg1) {
dec_label_pc_114e2:
  ret i32 %arg1
}

define i32 @function_1150e() local_unnamed_addr {
dec_label_pc_1150e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1150e = load i32, i32* %ebx.global-to-local, align 4
  %v1_1150e = add i32 %v0_1150e, 862319685
  %v2_1150e = inttoptr i32 %v1_1150e to i32*
  %v3_1150e = load i32, i32* %v2_1150e, align 4
  %v4_1150e = add i32 %v3_1150e, -1
  store i32 %v4_1150e, i32* %v2_1150e, align 4
  %v0_11514 = load i32, i32* %eax.global-to-local, align 4
  %v1_11514 = add i32 %v0_11514, 20
  store i32 %v1_11514, i32* %eax.global-to-local, align 4
  ret i32 %v1_11514
}

define i32 @_ZN11CAutoBN_CTXC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_11522:
  ret i32 0
}

define i32 @function_11541() local_unnamed_addr {
dec_label_pc_11541:
  %eax.global-to-local = alloca i32, align 4
  %v0_11541 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11541
}

define i32 @function_11561() local_unnamed_addr {
dec_label_pc_11561:
  %eax.global-to-local = alloca i32, align 4
  %v0_11561 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11561
}

define i32 @function_115c4() local_unnamed_addr {
dec_label_pc_115c4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_115c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_115c4 = add i32 %v0_115c4, -330986042
  %v2_115c4 = inttoptr i32 %v1_115c4 to i32*
  %v3_115c4 = load i32, i32* %v2_115c4, align 4
  %v4_115c4 = add i32 %v3_115c4, -1
  store i32 %v4_115c4, i32* %v2_115c4, align 4
  %v0_115ca = load i32, i32* %eax.global-to-local, align 4
  %v1_115d2 = call i32 @function_115d6(i32 %v0_115ca)
  store i32 %v1_115d2, i32* %eax.global-to-local, align 4
  ret i32 %v1_115d2
}

define i32 @function_115d4() local_unnamed_addr {
dec_label_pc_115d4:
  %eax.global-to-local = alloca i32, align 4
  %v0_115d4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_115d4
}

define i32 @function_115d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_115d6:
  %v0_115d6 = load i32, i32* @ebp, align 4
  %v1_115d6 = add i32 %v0_115d6, -13
  ret i32 %v1_115d6
}

define i32 @function_115f2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_115f2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_115f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_115f2 = add i32 %v0_115f2, 862319685
  %v2_115f2 = inttoptr i32 %v1_115f2 to i32*
  %v3_115f2 = load i32, i32* %v2_115f2, align 4
  %v4_115f2 = add i32 %v3_115f2, -1
  store i32 %v4_115f2, i32* %v2_115f2, align 4
  %v0_115f8 = load i32, i32* %eax.global-to-local, align 4
  %v1_115f8 = add i32 %v0_115f8, 20
  store i32 %v1_115f8, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v1_115f8
}

define i32 @_ZN11CAutoBN_CTXD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1160c:
  %v2_11626 = load i32, i32* %arg1, align 4
  %v1_11628 = icmp eq i32 %v2_11626, 0
  br i1 %v1_11628, label %bb, label %dec_label_pc_1162c

bb:                                               ; preds = %dec_label_pc_1160c
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v2_1162a = call i32 @function_11639(i32 %tmp4)
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %bb, %dec_label_pc_1160c
  %v2_1162f = load i32, i32* %arg1, align 4
  ret i32 %v2_1162f

; uselistorder directives
  uselistorder i32* %arg1, { 0, 2, 1 }
}

define i32 @function_11639(i32 %arg1) local_unnamed_addr {
dec_label_pc_11639:
  %v0_11639 = load i32, i32* @ebp, align 4
  %v1_11639 = add i32 %v0_11639, -12
  %v2_11639 = inttoptr i32 %v1_11639 to i32*
  %v3_11639 = load i32, i32* %v2_11639, align 4
  %v1_1163c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1163c = xor i32 %v1_1163c, %v3_11639
  ret i32 %v2_1163c
}

define i32 @_ZN9bignum_stC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1164c:
  ret i32 0
}

define i32 @_ZN7CBigNumC1Ev(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11676:
  store i32 %arg1, i32* @eax, align 4
  %v1_11693 = call i32 @function_22cc2(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_116a2() local_unnamed_addr {
dec_label_pc_116a2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_116a2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_116a2 = add i32 %v0_116a2, 862319685
  %v2_116a2 = inttoptr i32 %v1_116a2 to i32*
  %v3_116a2 = load i32, i32* %v2_116a2, align 4
  %v4_116a2 = add i32 %v3_116a2, -1
  store i32 %v4_116a2, i32* %v2_116a2, align 4
  %v0_116a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_116a8 = add i32 %v0_116a8, 20
  store i32 %v1_116a8, i32* %eax.global-to-local, align 4
  ret i32 %v1_116a8
}

define i32 @_ZN7CBigNumC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_116b6:
  store i32 %arg1, i32* @eax, align 4
  %v1_116db = call i32 @function_22d02(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_11722() local_unnamed_addr {
dec_label_pc_11722:
  %eax.global-to-local = alloca i32, align 4
  %v0_11722 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11722
}

define i32 @function_11785() local_unnamed_addr {
dec_label_pc_11785:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11785 = load i32, i32* %ecx.global-to-local, align 4
  %v1_11785 = add i32 %v0_11785, -330986042
  %v2_11785 = inttoptr i32 %v1_11785 to i32*
  %v3_11785 = load i32, i32* %v2_11785, align 4
  %v4_11785 = add i32 %v3_11785, -1
  store i32 %v4_11785, i32* %v2_11785, align 4
  %v0_1178b = load i32, i32* %eax.global-to-local, align 4
  %v1_11793 = call i32 @function_11797(i32 %v0_1178b)
  store i32 %v1_11793, i32* %eax.global-to-local, align 4
  ret i32 %v1_11793
}

define i32 @function_11795() local_unnamed_addr {
dec_label_pc_11795:
  %eax.global-to-local = alloca i32, align 4
  %v0_11795 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11795
}

define i32 @function_11797(i32 %arg1) local_unnamed_addr {
dec_label_pc_11797:
  %v0_11797 = load i32, i32* @ebp, align 4
  %v1_11797 = add i32 %v0_11797, -13
  ret i32 %v1_11797
}

define i32 @function_117c4(i32 %arg1) local_unnamed_addr {
dec_label_pc_117c4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_117c4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_117c4 = add i32 %v0_117c4, 1583034564
  %v2_117c4 = inttoptr i32 %v1_117c4 to i32*
  %v3_117c4 = load i32, i32* %v2_117c4, align 4
  %v4_117c4 = add i32 %v3_117c4, 1
  store i32 %v4_117c4, i32* %v2_117c4, align 4
  %v0_117cb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_117cb
}

define i32 @_ZN7CBigNumaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_117cc:
  ret i32 %arg1
}

define i32 @function_11813() local_unnamed_addr {
dec_label_pc_11813:
  %eax.global-to-local = alloca i32, align 4
  %v0_11813 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11813
}

define i32 @function_1185e() local_unnamed_addr {
dec_label_pc_1185e:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1186f = load i32, i32* %ebx.global-to-local, align 4
  %v0_11877 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11877 = add i32 %v0_11877, -28
  %v2_11877 = inttoptr i32 %v1_11877 to i32*
  %v3_11877 = load i32, i32* %v2_11877, align 4
  store i32 %v3_11877, i32* @eax, align 4
  %v1_1187a = add i32 %v0_11877, -12
  %v2_1187a = inttoptr i32 %v1_1187a to i32*
  %v3_1187a = load i32, i32* %v2_1187a, align 4
  %v1_1187d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1187d = icmp eq i32 %v1_1187d, %v3_1187a
  br i1 %v3_1187d, label %bb, label %dec_label_pc_11886

bb:                                               ; preds = %dec_label_pc_1185e
  %v4_11884 = call i32 @function_118bb(i32 %v0_1186f, i32 ptrtoint (i32* @global_var_38620.2252 to i32), i32 70796)
  store i32 %v4_11884, i32* @eax, align 4
  br label %dec_label_pc_11886

dec_label_pc_11886:                               ; preds = %bb, %dec_label_pc_1185e
  %v0_11886 = call i32 @function_118b6()
  ret i32 %v0_11886
}

define i32 @function_11895() local_unnamed_addr {
dec_label_pc_11895:
  %v0_11895 = call i32 @function_11899()
  ret i32 %v0_11895
}

define i32 @function_11897() local_unnamed_addr {
dec_label_pc_11897:
  %eax.global-to-local = alloca i32, align 4
  %v0_11897 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11897
}

define i32 @function_11899() local_unnamed_addr {
dec_label_pc_11899:
  %v0_118ac = load i32, i32* @esi, align 4
  ret i32 %v0_118ac
}

define i32 @function_118b6() local_unnamed_addr {
dec_label_pc_118b6:
  %v0_118b6 = load i32, i32* @eax, align 4
  ret i32 %v0_118b6
}

define i32 @function_118bb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118bb:
  %v0_118c1 = load i32, i32* @eax, align 4
  ret i32 %v0_118c1
}

define i32 @_ZN7CBigNumD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_118c2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_118f0

bb:                                               ; preds = %dec_label_pc_118c2
  %v2_118ee = call i32 @function_118f5(i32 %arg1)
  br label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %bb, %dec_label_pc_118c2
  %v3_118ee = phi i32 [ %v2_118ee, %bb ], [ 0, %dec_label_pc_118c2 ]
  ret i32 %v3_118ee
}

define i32 @function_118f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_118f5:
  %v0_118f6 = load i32, i32* @eax, align 4
  ret i32 %v0_118f6
}

define i32 @_ZN7CBigNumC1Ei(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_118f8:
  store i32 %arg1, i32* @eax, align 4
  %v1_1191b = call i32 @function_22f44(i32 %arg1)
  store i1 false, i1* @of, align 1
  %v11_1192b = icmp slt i32 %arg2, 0
  br i1 %v11_1192b, label %dec_label_pc_11945, label %dec_label_pc_11931

dec_label_pc_11931:                               ; preds = %dec_label_pc_118f8
  store i32 %arg1, i32* @eax, align 4
  %v2_1193e = call i32 @function_2331c(i32 %arg1, i32 %arg2)
  br label %dec_label_pc_11960

dec_label_pc_11945:                               ; preds = %dec_label_pc_118f8
  %v2_1194a = ashr i32 %arg2, 31
  store i32 %v2_1194a, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_1195b = call i32 @function_23480(i32 %arg1, i32 %arg2, i32 %v2_1194a)
  br label %dec_label_pc_11960

dec_label_pc_11960:                               ; preds = %dec_label_pc_11945, %dec_label_pc_11931
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1196c

bb:                                               ; preds = %dec_label_pc_11960
  %v1_1196a = call i32 @function_11971()
  br label %dec_label_pc_1196c

dec_label_pc_1196c:                               ; preds = %bb, %dec_label_pc_11960
  %v2_1196a = phi i32 [ %v1_1196a, %bb ], [ 0, %dec_label_pc_11960 ]
  ret i32 %v2_1196a

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 3, 2, 1, 0, 5, 4 }
}

define i32 @function_11971() local_unnamed_addr {
dec_label_pc_11971:
  %v0_11972 = load i32, i32* @eax, align 4
  ret i32 %v0_11972
}

define i32 @_ZN7CBigNumC1Ej(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11974:
  store i32 %arg1, i32* @eax, align 4
  %v1_11997 = call i32 @function_22fc0(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_119a6() local_unnamed_addr {
dec_label_pc_119a6:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_119a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_119a6 = add i32 %v0_119a6, 1149886533
  %v2_119a6 = inttoptr i32 %v1_119a6 to i32*
  %v3_119a6 = load i32, i32* %v2_119a6, align 4
  %v4_119a6 = add i32 %v3_119a6, -1
  store i32 %v4_119a6, i32* %v2_119a6, align 4
  %v0_119ac = load i32, i32* %eax.global-to-local, align 4
  %v11_119ac = and i32 %v0_119ac, -252
  store i32 %v11_119ac, i32* %eax.global-to-local, align 4
  %v0_119ae = load i32, i32* %ebp.global-to-local, align 4
  %v1_119ae = add i32 %v0_119ae, -28
  %v2_119ae = inttoptr i32 %v1_119ae to i32*
  %v3_119ae = load i32, i32* %v2_119ae, align 4
  store i32 %v3_119ae, i32* %eax.global-to-local, align 4
  %v1_119b9 = add i32 %v0_119ae, -12
  %v2_119b9 = inttoptr i32 %v1_119b9 to i32*
  %v3_119b9 = load i32, i32* %v2_119b9, align 4
  store i32 %v3_119b9, i32* %eax.global-to-local, align 4
  %v1_119bc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_119bc = xor i32 %v1_119bc, %v3_119b9
  store i32 %v2_119bc, i32* %eax.global-to-local, align 4
  ret i32 %v2_119bc
}

define i32 @_ZN7CBigNumC1ERKSt6vectorIhSaIhEE(i32 %arg1) local_unnamed_addr {
dec_label_pc_119cc:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @eax, align 4
  %v1_119ef = call i32 @function_23018(i32 %arg1)
  %v2_11a0c = call i32 @function_236b4(i32 %arg1, i32 %tmp4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN7CBigNum8setulongEm(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a24:
  ret i32 %arg1
}

define i32 @function_11a6f() local_unnamed_addr {
dec_label_pc_11a6f:
  %eax.global-to-local = alloca i32, align 4
  %v0_11a6f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a6f
}

define i32 @function_11a94() local_unnamed_addr {
dec_label_pc_11a94:
  %v0_11a94 = load i32, i32* @ebp, align 4
  %v1_11a94 = add i32 %v0_11a94, 1149889605
  %v2_11a94 = inttoptr i32 %v1_11a94 to i32*
  %v3_11a94 = load i32, i32* %v2_11a94, align 4
  %v4_11a94 = add i32 %v3_11a94, -1
  store i32 %v4_11a94, i32* %v2_11a94, align 4
  %v0_11ad5 = load i32, i32* @ebp, align 4
  %v1_11ad5 = add i32 %v0_11ad5, -20
  %v3_11ae0 = call i32 @function_11ae4(i32 %v1_11ad5, i32 ptrtoint (i32* @global_var_38620.2252 to i32), i32 70796)
  ret i32 %v3_11ae0

; uselistorder directives
  uselistorder i32 70796, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_38620.2252 to i32), { 1, 0 }
}

define i32 @function_11ae2() local_unnamed_addr {
dec_label_pc_11ae2:
  %eax.global-to-local = alloca i32, align 4
  %v0_11ae2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11ae2
}

define i32 @function_11ae4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11ae4:
  %v0_11ae4 = load i32, i32* @ebp, align 4
  %v1_11ae4 = add i32 %v0_11ae4, -13
  ret i32 %v1_11ae4
}

define i32 @function_11b00(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11b00 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11b00 = add i32 %v0_11b00, 862319685
  %v2_11b00 = inttoptr i32 %v1_11b00 to i32*
  %v3_11b00 = load i32, i32* %v2_11b00, align 4
  %v4_11b00 = add i32 %v3_11b00, -1
  store i32 %v4_11b00, i32* %v2_11b00, align 4
  %v0_11b06 = load i32, i32* %eax.global-to-local, align 4
  %v1_11b06 = add i32 %v0_11b06, 20
  store i32 %v1_11b06, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v1_11b06
}

define i32 @_ZNK7CBigNum6getintEv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b1a:
  ret i32 %arg1
}

define i32 @function_11b3b() local_unnamed_addr {
dec_label_pc_11b3b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11b3b = load i32, i32* %ecx.global-to-local, align 4
  %v1_11b3b = add i32 %v0_11b3b, 1166798917
  %v2_11b3b = inttoptr i32 %v1_11b3b to i32*
  %v3_11b3b = load i32, i32* %v2_11b3b, align 4
  %v4_11b3b = add i32 %v3_11b3b, -1
  store i32 %v4_11b3b, i32* %v2_11b3b, align 4
  %v0_11b43 = load i32, i32* %eax.global-to-local, align 4
  %v1_11b43 = add i32 %v0_11b43, 1
  %v11_11b43 = trunc i32 %v1_11b43 to i8
  %v2_11b44 = or i8 %v11_11b43, -123
  %v2_11b4a = add i8 %v2_11b44, ptrtoint (i8* @global_var_f4.2253 to i8)
  %v16_11b4a = zext i8 %v2_11b4a to i32
  %v18_11b4a = and i32 %v1_11b43, -256
  %v19_11b4a = or i32 %v16_11b4a, %v18_11b4a
  store i32 %v19_11b4a, i32* @eax, align 4
  %v1_11b4c = inttoptr i32 %v19_11b4a to i8*
  %v2_11b4c = load i8, i8* %v1_11b4c, align 1
  %v5_11b4c = add i8 %v2_11b4c, %v2_11b4a
  store i8 %v5_11b4c, i8* %v1_11b4c, align 1
  %v0_11b4e = load i32, i32* @eax, align 4
  %v1_11b4e = load i32, i32* @ebp, align 4
  %v2_11b4e = add i32 %v1_11b4e, -16
  %v3_11b4e = inttoptr i32 %v2_11b4e to i32*
  %v4_11b4e = load i32, i32* %v3_11b4e, align 4
  %v10_11b4e = icmp ult i32 %v0_11b4e, %v4_11b4e
  %v1_11b51 = icmp eq i1 %v10_11b4e, false
  br i1 %v1_11b51, label %dec_label_pc_11b5a, label %dec_label_pc_11b5d

dec_label_pc_11b5a:                               ; preds = %dec_label_pc_11b3b
  store i32 %v4_11b4e, i32* @eax, align 4
  br label %dec_label_pc_11b5d

dec_label_pc_11b5d:                               ; preds = %dec_label_pc_11b3b, %dec_label_pc_11b5a
  %v0_11b5d = call i32 @function_11b75()
  store i32 %v0_11b5d, i32* %eax.global-to-local, align 4
  ret i32 %v0_11b5d

; uselistorder directives
  uselistorder label %dec_label_pc_11b5d, { 1, 0 }
}

define i32 @function_11b5f() local_unnamed_addr {
dec_label_pc_11b5f:
  %v0_11b64 = load i32, i32* @eax, align 4
  %v1_11b64 = load i32, i32* @ebp, align 4
  %v2_11b64 = add i32 %v1_11b64, -16
  %v3_11b64 = inttoptr i32 %v2_11b64 to i32*
  %v4_11b64 = load i32, i32* %v3_11b64, align 4
  %v10_11b64 = icmp ult i32 %v0_11b64, %v4_11b64
  %v1_11b67 = icmp eq i1 %v10_11b64, false
  br i1 %v1_11b67, label %dec_label_pc_11b70, label %dec_label_pc_11b69

dec_label_pc_11b69:                               ; preds = %dec_label_pc_11b5f
  %v0_11b6e = call i32 @function_11b75()
  ret i32 %v0_11b6e

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b5f
  %v1_11b73 = sub i32 0, %v4_11b64
  ret i32 %v1_11b73

; uselistorder directives
  uselistorder i32 ()* @function_11b75, { 1, 0 }
}

define i32 @function_11b75() local_unnamed_addr {
dec_label_pc_11b75:
  %v0_11b75 = load i32, i32* @ebp, align 4
  %v1_11b75 = add i32 %v0_11b75, -12
  %v2_11b75 = inttoptr i32 %v1_11b75 to i32*
  %v3_11b75 = load i32, i32* %v2_11b75, align 4
  %v1_11b78 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_11b78 = icmp eq i32 %v1_11b78, %v3_11b75
  br i1 %v3_11b78, label %bb, label %dec_label_pc_11b75.dec_label_pc_11b81_crit_edge

dec_label_pc_11b75.dec_label_pc_11b81_crit_edge:  ; preds = %dec_label_pc_11b75
  %v2_11b7f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11b81

bb:                                               ; preds = %dec_label_pc_11b75
  %v1_11b7f = call i32 @function_11b86()
  br label %dec_label_pc_11b81

dec_label_pc_11b81:                               ; preds = %dec_label_pc_11b75.dec_label_pc_11b81_crit_edge, %bb
  %v2_11b7f = phi i32 [ %v2_11b7f.pre, %dec_label_pc_11b75.dec_label_pc_11b81_crit_edge ], [ %v1_11b7f, %bb ]
  ret i32 %v2_11b7f

; uselistorder directives
  uselistorder label %dec_label_pc_11b81, { 1, 0 }
}

define i32 @function_11b86() local_unnamed_addr {
dec_label_pc_11b86:
  %v0_11b87 = load i32, i32* @eax, align 4
  ret i32 %v0_11b87
}

define i32 @_ZN7CBigNum8setint64Ex(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11b88:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-26 = alloca i32, align 4
  %stack_var_-30 = alloca i32, align 4
  %v2_11bad = ptrtoint i32* %stack_var_-30 to i32
  %tmp135 = bitcast i32* %stack_var_-26 to i8*
  %v11_11bb6 = icmp slt i32 %arg3, 0
  %v1_11bba = icmp eq i1 %v11_11bb6, false
  br i1 %v1_11bba, label %dec_label_pc_11bde, label %dec_label_pc_11bbc

dec_label_pc_11bbc:                               ; preds = %dec_label_pc_11b88
  %v1_11bc1 = sub i32 -1, %arg2
  store i32 %v1_11bc1, i32* %eax.global-to-local, align 4
  %v1_11bc8 = sub i32 -1, %arg3
  %v4_11bd0 = sub i32 0, %arg2
  %v8_11bd0 = icmp ugt i32 %v1_11bc1, %v4_11bd0
  %v5_11bd4 = zext i1 %v8_11bd0 to i32
  %v6_11bd4 = add i32 %v5_11bd4, %v1_11bc8
  br label %dec_label_pc_11bee

dec_label_pc_11bde:                               ; preds = %dec_label_pc_11b88
  store i32 %arg2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_11bee

dec_label_pc_11bee:                               ; preds = %dec_label_pc_11bde, %dec_label_pc_11bbc
  %stack_var_-60.0 = phi i32 [ %arg2, %dec_label_pc_11bde ], [ %v4_11bd0, %dec_label_pc_11bbc ]
  %v6_11c7511 = phi i32 [ %arg2, %dec_label_pc_11bde ], [ %v1_11bc1, %dec_label_pc_11bbc ]
  %storemerge6 = phi i32 [ %arg3, %dec_label_pc_11bde ], [ %v6_11bd4, %dec_label_pc_11bbc ]
  %storemerge5 = phi i1 [ true, %dec_label_pc_11bde ], [ false, %dec_label_pc_11bbc ]
  %. = select i1 %storemerge5, i32 0, i32 -128
  %v1_11c47 = trunc i32 %. to i8
  br label %dec_label_pc_11c71

dec_label_pc_11bfb:                               ; preds = %dec_label_pc_11c71
  %v2_11c05 = udiv i32 %stack_var_-56.0, 16777216
  %v5_11c05 = trunc i32 %v2_11c05 to i8
  %v3_11c11 = mul i32 %stack_var_-56.0, 256
  %v4_11c11 = udiv i32 %stack_var_-60.1, 16777216
  %v5_11c11 = or i32 %v3_11c11, %v4_11c11
  %v2_11c15 = mul i32 %stack_var_-60.1, 256
  store i32 %v2_11c15, i32* %eax.global-to-local, align 4
  %v10_11c1e = icmp eq i8 %stack_var_-32.2, 0
  br i1 %v10_11c1e, label %dec_label_pc_11c5d, label %dec_label_pc_11c24

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11bfb
  %v10_11c24 = icmp eq i8 %v5_11c05, 0
  br i1 %v10_11c24, label %dec_label_pc_11c6d, label %dec_label_pc_11c2a

dec_label_pc_11c2a:                               ; preds = %dec_label_pc_11c24
  %v11_11c24 = icmp slt i8 %v5_11c05, 0
  store i32 %v2_11c05, i32* %eax.global-to-local, align 4
  %v1_11c30 = icmp eq i1 %v11_11c24, false
  br i1 %v1_11c30, label %dec_label_pc_11c4f, label %dec_label_pc_11c32

dec_label_pc_11c32:                               ; preds = %dec_label_pc_11c2a
  store i32 %., i32* %eax.global-to-local, align 4
  %v4_11c44 = ptrtoint i8* %stack_var_-48.3 to i32
  store i8 %v1_11c47, i8* %stack_var_-48.3, align 1
  %v5_11c49 = add i32 %v4_11c44, 1
  %v23_11c49 = inttoptr i32 %v5_11c49 to i8*
  br label %dec_label_pc_11c5d

dec_label_pc_11c4f:                               ; preds = %dec_label_pc_11c2a
  br i1 %storemerge5, label %dec_label_pc_11c5d, label %dec_label_pc_11c55

dec_label_pc_11c55:                               ; preds = %dec_label_pc_11c4f
  %v4_11c55 = or i8 %v5_11c05, -128
  br label %dec_label_pc_11c5d

dec_label_pc_11c5d:                               ; preds = %dec_label_pc_11c32, %dec_label_pc_11c4f, %dec_label_pc_11c55, %dec_label_pc_11bfb
  %stack_var_-48.1 = phi i8* [ %stack_var_-48.3, %dec_label_pc_11bfb ], [ %stack_var_-48.3, %dec_label_pc_11c4f ], [ %stack_var_-48.3, %dec_label_pc_11c55 ], [ %v23_11c49, %dec_label_pc_11c32 ]
  %stack_var_-31.1 = phi i8 [ %v5_11c05, %dec_label_pc_11bfb ], [ %v5_11c05, %dec_label_pc_11c4f ], [ %v4_11c55, %dec_label_pc_11c55 ], [ %v5_11c05, %dec_label_pc_11c32 ]
  %v4_11c5d = ptrtoint i8* %stack_var_-48.1 to i32
  store i32 %v4_11c5d, i32* %eax.global-to-local, align 4
  store i8 %stack_var_-31.1, i8* %stack_var_-48.1, align 1
  %v5_11c66 = add i32 %v4_11c5d, 1
  %v23_11c66 = inttoptr i32 %v5_11c66 to i8*
  %v6_11c75.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_11c6d

dec_label_pc_11c6d:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c5d
  %v6_11c75.pre = phi i32 [ %v6_11c75.pre.pre, %dec_label_pc_11c5d ], [ %v2_11c15, %dec_label_pc_11c24 ]
  %stack_var_-48.2 = phi i8* [ %v23_11c66, %dec_label_pc_11c5d ], [ %stack_var_-48.3, %dec_label_pc_11c24 ]
  %stack_var_-32.1 = phi i8 [ 0, %dec_label_pc_11c5d ], [ %stack_var_-32.2, %dec_label_pc_11c24 ]
  %v4_11c6d = add nuw nsw i32 %storemerge, 1
  br label %dec_label_pc_11c71

dec_label_pc_11c71:                               ; preds = %dec_label_pc_11c6d, %dec_label_pc_11bee
  %v6_11c75 = phi i32 [ %v6_11c7511, %dec_label_pc_11bee ], [ %v6_11c75.pre, %dec_label_pc_11c6d ]
  %stack_var_-48.3 = phi i8* [ %tmp135, %dec_label_pc_11bee ], [ %stack_var_-48.2, %dec_label_pc_11c6d ]
  %stack_var_-60.1 = phi i32 [ %stack_var_-60.0, %dec_label_pc_11bee ], [ %v2_11c15, %dec_label_pc_11c6d ]
  %stack_var_-56.0 = phi i32 [ %storemerge6, %dec_label_pc_11bee ], [ %v5_11c11, %dec_label_pc_11c6d ]
  %stack_var_-32.2 = phi i8 [ 1, %dec_label_pc_11bee ], [ %stack_var_-32.1, %dec_label_pc_11c6d ]
  %storemerge = phi i32 [ 0, %dec_label_pc_11bee ], [ %v4_11c6d, %dec_label_pc_11c6d ]
  %tmp139 = sub nsw i32 6, %storemerge
  %v11_11c71 = and i32 %tmp139, %storemerge
  %v12_11c71 = icmp slt i32 %v11_11c71, 0
  %v13_11c71 = icmp eq i32 %storemerge, 7
  %v14_11c71 = icmp slt i32 %storemerge, 7
  %v3_11c75 = icmp ne i1 %v14_11c71, %v12_11c71
  %v4_11c75 = or i1 %v13_11c71, %v3_11c75
  %v5_11c75 = zext i1 %v4_11c75 to i32
  %v7_11c75 = and i32 %v6_11c75, -256
  %v8_11c75 = or i32 %v5_11c75, %v7_11c75
  store i32 %v8_11c75, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %storemerge, 8
  br i1 %exitcond, label %dec_label_pc_11c80, label %dec_label_pc_11bfb

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c71
  store i32 %v2_11bad, i32* %eax.global-to-local, align 4
  ret i32 %v2_11bad

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 1, 0, 3, 5, 4 }
  uselistorder i8 %stack_var_-32.2, { 1, 0 }
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %stack_var_-60.1, { 1, 0 }
  uselistorder i8* %stack_var_-48.3, { 3, 4, 2, 1, 0, 5 }
  uselistorder i8* %stack_var_-48.1, { 1, 0 }
  uselistorder i32 %v2_11c15, { 1, 2, 0 }
  uselistorder i8 %v5_11c05, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v2_11c05, { 1, 0 }
  uselistorder i1 %storemerge5, { 1, 0 }
  uselistorder i32 %v4_11bd0, { 1, 0 }
  uselistorder i32 %v1_11bc1, { 2, 0, 1 }
  uselistorder i32 %v2_11bad, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 5, 6, 1, 2, 0, 3, 4, 7, 8 }
  uselistorder i8 -128, { 2, 0, 1 }
  uselistorder i32 -128, { 0, 1, 2, 3, 4, 5, 12, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 4, 3, 0 }
  uselistorder label %dec_label_pc_11c6d, { 1, 0 }
  uselistorder label %dec_label_pc_11c5d, { 2, 1, 0, 3 }
}

define i32 @function_11ce1() local_unnamed_addr {
dec_label_pc_11ce1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11ce1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11ce1 = add i32 %v0_11ce1, 1566266564
  %v2_11ce1 = inttoptr i32 %v1_11ce1 to i32*
  %v3_11ce1 = load i32, i32* %v2_11ce1, align 4
  %v4_11ce1 = add i32 %v3_11ce1, 1
  store i32 %v4_11ce1, i32* %v2_11ce1, align 4
  %v0_11ce7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11ce7
}

define i32 @_ZN7CBigNum6setvchERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ce8:
  %stack_var_-17 = alloca i32, align 4
  %v2_11d07 = ptrtoint i32* %stack_var_-17 to i32
  %v1_11d0d = call i32 @function_27244(i32 %v2_11d07)
  store i32 %arg2, i32* @eax, align 4
  %v1_11d1c = call i32 @function_26da2(i32 %arg2)
  ret i32 %v2_11d07
}

define i32 @function_11d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_11d28:
  %v0_11d2b = load i32, i32* @ebp, align 4
  %v1_11d2b = add i32 %v0_11d2b, -14
  %v0_11d32 = load i32, i32* @edx, align 4
  %v1_11d36 = add i32 %v0_11d2b, -56
  store i32 %v1_11d36, i32* @eax, align 4
  %v3_11d3c = call i32 @function_272b0(i32 %v1_11d36, i32 %v0_11d32, i32 %v1_11d2b)
  %v0_11d41 = load i32, i32* @ebp, align 4
  %v1_11d41 = add i32 %v0_11d41, -13
  store i32 %v1_11d41, i32* @eax, align 4
  %v1_11d47 = call i32 @function_2727a(i32 %v1_11d41)
  %v0_11d4c = load i32, i32* @ebp, align 4
  %v1_11d4c = add i32 %v0_11d4c, -64
  %v2_11d4c = inttoptr i32 %v1_11d4c to i32*
  %v3_11d4c = load i32, i32* %v2_11d4c, align 4
  store i32 %v3_11d4c, i32* @eax, align 4
  %v1_11d52 = call i32 @function_26da2(i32 %v3_11d4c)
  %v1_11d57 = load i32, i32* @ebp, align 4
  %v2_11d57 = add i32 %v1_11d57, -20
  %v3_11d57 = inttoptr i32 %v2_11d57 to i32*
  store i32 %v1_11d52, i32* %v3_11d57, align 4
  %v0_11d62 = load i32, i32* @ebp, align 4
  %v1_11d62 = add i32 %v0_11d62, -56
  store i32 %v1_11d62, i32* @eax, align 4
  %v2_11d68 = call i32 @function_2826a(i32 %v1_11d62, i32 0)
  %v0_11d6d = load i32, i32* @ebp, align 4
  %v1_11d6d = add i32 %v0_11d6d, -20
  %v2_11d6d = inttoptr i32 %v1_11d6d to i32*
  %v3_11d6d = load i32, i32* %v2_11d6d, align 4
  %v2_11d70 = udiv i32 %v3_11d6d, 16777216
  %v5_11d70 = trunc i32 %v2_11d70 to i8
  store i32 %v2_11d70, i32* @edx, align 4
  %v3_11d73 = inttoptr i32 %v2_11d68 to i8*
  store i8 %v5_11d70, i8* %v3_11d73, align 1
  %v0_11d7d = load i32, i32* @ebp, align 4
  %v1_11d7d = add i32 %v0_11d7d, -56
  store i32 %v1_11d7d, i32* @eax, align 4
  %v2_11d83 = call i32 @function_2826a(i32 %v1_11d7d, i32 1)
  %v0_11d88 = load i32, i32* @ebp, align 4
  %v1_11d88 = add i32 %v0_11d88, -20
  %v2_11d88 = inttoptr i32 %v1_11d88 to i32*
  %v3_11d88 = load i32, i32* %v2_11d88, align 4
  %v2_11d8b = udiv i32 %v3_11d88, 65536
  %v5_11d8b = trunc i32 %v2_11d8b to i8
  store i32 %v2_11d8b, i32* @edx, align 4
  %v3_11d8e = inttoptr i32 %v2_11d83 to i8*
  store i8 %v5_11d8b, i8* %v3_11d8e, align 1
  %v0_11d98 = load i32, i32* @ebp, align 4
  %v1_11d98 = add i32 %v0_11d98, -56
  store i32 %v1_11d98, i32* @eax, align 4
  %v2_11d9e = call i32 @function_2826a(i32 %v1_11d98, i32 2)
  %v0_11da3 = load i32, i32* @ebp, align 4
  %v1_11da3 = add i32 %v0_11da3, -20
  %v2_11da3 = inttoptr i32 %v1_11da3 to i32*
  %v3_11da3 = load i32, i32* %v2_11da3, align 4
  %v2_11da6 = udiv i32 %v3_11da3, 256
  %v5_11da6 = trunc i32 %v2_11da6 to i8
  store i32 %v2_11da6, i32* @edx, align 4
  %v3_11da9 = inttoptr i32 %v2_11d9e to i8*
  store i8 %v5_11da6, i8* %v3_11da9, align 1
  %v0_11db3 = load i32, i32* @ebp, align 4
  %v1_11db3 = add i32 %v0_11db3, -56
  store i32 %v1_11db3, i32* @eax, align 4
  %v2_11db9 = call i32 @function_2826a(i32 %v1_11db3, i32 3)
  %v0_11dbe = load i32, i32* @ebp, align 4
  %v1_11dbe = add i32 %v0_11dbe, -20
  %v2_11dbe = inttoptr i32 %v1_11dbe to i32*
  %v3_11dbe = load i32, i32* %v2_11dbe, align 4
  %v1_11dc1 = trunc i32 %v3_11dbe to i8
  %v3_11dc1 = inttoptr i32 %v2_11db9 to i8*
  store i8 %v1_11dc1, i8* %v3_11dc1, align 1
  %v0_11dc3 = load i32, i32* @ebp, align 4
  %v1_11dc3 = add i32 %v0_11dc3, -32
  %v2_11dc3 = inttoptr i32 %v1_11dc3 to i32*
  store i32 4, i32* %v2_11dc3, align 4
  %v0_11dca = load i32, i32* @ebp, align 4
  %v1_11dca = add i32 %v0_11dca, -36
  store i32 %v1_11dca, i32* @eax, align 4
  %v1_11dcd = add i32 %v0_11dca, -56
  %v2_11dd7 = call i32 @function_282a2(i32 %v1_11dca, i32 %v1_11dcd)
  %v0_11ddf = load i32, i32* @ebp, align 4
  %v1_11ddf = add i32 %v0_11ddf, -28
  store i32 %v1_11ddf, i32* @eax, align 4
  %v1_11de2 = add i32 %v0_11ddf, -32
  %v1_11de9 = add i32 %v0_11ddf, -36
  store i32 %v1_11de9, i32* @edx, align 4
  %v3_11df3 = call i32 @function_282ea(i32 %v1_11ddf, i32 %v1_11de9, i32 %v1_11de2)
  %v0_11df8 = load i32, i32* @esp, align 4
  %v5_11df8 = icmp ult i32 %v0_11df8, 4
  store i1 %v5_11df8, i1* @cf, align 1
  %v0_11dfb = load i32, i32* @ebp, align 4
  %v1_11dfb = add i32 %v0_11dfb, -40
  store i32 %v1_11dfb, i32* @eax, align 4
  %v1_11dfe = add i32 %v0_11dfb, -64
  %v2_11dfe = inttoptr i32 %v1_11dfe to i32*
  %v3_11dfe = load i32, i32* %v2_11dfe, align 4
  %v2_11e08 = call i32 @function_26d52(i32 %v1_11dfb, i32 %v3_11dfe)
  %v0_11e10 = load i32, i32* @ebp, align 4
  %v1_11e10 = add i32 %v0_11e10, -44
  store i32 %v1_11e10, i32* @eax, align 4
  %v1_11e13 = add i32 %v0_11e10, -64
  %v2_11e13 = inttoptr i32 %v1_11e13 to i32*
  %v3_11e13 = load i32, i32* %v2_11e13, align 4
  %v2_11e1d = call i32 @function_26cc6(i32 %v1_11e10, i32 %v3_11e13)
  %v0_11e25 = load i32, i32* @ebp, align 4
  %v1_11e25 = add i32 %v0_11e25, -24
  store i32 %v1_11e25, i32* @eax, align 4
  %v1_11e28 = add i32 %v0_11e25, -28
  %v2_11e28 = inttoptr i32 %v1_11e28 to i32*
  %v3_11e28 = load i32, i32* %v2_11e28, align 4
  %v1_11e2f = add i32 %v0_11e25, -40
  %v2_11e2f = inttoptr i32 %v1_11e2f to i32*
  %v3_11e2f = load i32, i32* %v2_11e2f, align 4
  %v1_11e36 = add i32 %v0_11e25, -44
  %v2_11e36 = inttoptr i32 %v1_11e36 to i32*
  %v3_11e36 = load i32, i32* %v2_11e36, align 4
  %v4_11e40 = call i32 @function_28346(i32 %v1_11e25, i32 %v3_11e36, i32 %v3_11e2f, i32 %v3_11e28)
  %v0_11e45 = load i32, i32* @esp, align 4
  %v5_11e45 = icmp ult i32 %v0_11e45, 4
  store i1 %v5_11e45, i1* @cf, align 1
  %v0_11e48 = load i32, i32* @ebp, align 4
  %v1_11e4b = add i32 %v0_11e48, -56
  store i32 %v1_11e4b, i32* @eax, align 4
  %v1_11e51 = call i32 @function_26da2(i32 %v1_11e4b)
  store i32 %v1_11e51, i32* @ebx, align 4
  %v0_11e60 = load i32, i32* @ebp, align 4
  %v1_11e60 = add i32 %v0_11e60, -56
  store i32 %v1_11e60, i32* @eax, align 4
  %v2_11e66 = call i32 @function_2826a(i32 %v1_11e60, i32 0)
  ret i32 %v2_11e66

; uselistorder directives
  uselistorder i32 %v0_11e25, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11da6, { 1, 0 }
  uselistorder i32 %v2_11d8b, { 1, 0 }
  uselistorder i32 %v2_11d70, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2826a, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_26da2, { 1, 0, 2 }
}

define i32 @function_11e7a() local_unnamed_addr {
dec_label_pc_11e7a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-3 = alloca i32, align 4
  %v0_11e7a = load i32, i32* @ebp, align 4
  %v1_11e7a = add i32 %v0_11e7a, 76138565
  %v2_11e7a = inttoptr i32 %v1_11e7a to i32*
  %v3_11e7a = load i32, i32* %v2_11e7a, align 4
  %v4_11e7a = add i32 %v3_11e7a, -1
  store i32 %v4_11e7a, i32* %v2_11e7a, align 4
  %v0_11e80 = load i32, i32* %eax.global-to-local, align 4
  %v11_11e80 = and i32 %v0_11e80, -24
  store i32 %v11_11e80, i32* %eax.global-to-local, align 4
  %v0_11e83 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_11e83, i32* %stack_var_-3, align 4
  %v1_11e84 = inttoptr i32 %v11_11e80 to i32*
  %v2_11e84 = load i32, i32* %v1_11e84, align 8
  %v4_11e84 = add i32 %v2_11e84, %v11_11e80
  store i32 %v4_11e84, i32* %v1_11e84, align 8
  %v0_11e86 = load i32, i32* @ebp, align 4
  %v1_11e86 = add i32 %v0_11e86, -12
  %v2_11e86 = inttoptr i32 %v1_11e86 to i32*
  %v3_11e86 = load i32, i32* %v2_11e86, align 4
  store i32 %v3_11e86, i32* %eax.global-to-local, align 4
  %v1_11e89 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_11e89 = xor i32 %v1_11e89, %v3_11e86
  %v3_11e89 = icmp eq i32 %v2_11e89, 0
  store i32 %v2_11e89, i32* @eax, align 4
  br i1 %v3_11e89, label %bb, label %dec_label_pc_11ec2

bb:                                               ; preds = %dec_label_pc_11e7a
  %v1_11e90 = load i32, i32* %stack_var_-3, align 4
  %v2_11e90 = call i32 @function_11ec7(i32 %v1_11e90)
  store i32 %v2_11e90, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_11ec2

dec_label_pc_11ec2:                               ; preds = %dec_label_pc_11e7a, %bb
  %v0_11e92 = phi i32 [ %v2_11e89, %dec_label_pc_11e7a ], [ %v2_11e90, %bb ]
  ret i32 %v0_11e92

; uselistorder directives
  uselistorder i32 %v11_11e80, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ec2, { 1, 0 }
}

define i32 @function_11e94() local_unnamed_addr {
dec_label_pc_11e94:
  %v0_11e96 = load i32, i32* @ebp, align 4
  %v1_11e96 = add i32 %v0_11e96, -13
  store i32 %v1_11e96, i32* @eax, align 4
  %v1_11e9c = call i32 @function_2727a(i32 %v1_11e96)
  %v0_11ead = load i32, i32* @ebp, align 4
  %v1_11ead = add i32 %v0_11ead, -56
  store i32 %v1_11ead, i32* @eax, align 4
  %v1_11eb3 = call i32 @function_271ca(i32 %v1_11ead)
  %v0_11eb8 = load i32, i32* @ebx, align 4
  ret i32 %v0_11eb8

; uselistorder directives
  uselistorder i32 (i32)* @function_2727a, { 1, 0 }
}

define i32 @function_11ec7(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ec7:
  %v0_11ecd = load i32, i32* @eax, align 4
  ret i32 %v0_11ecd
}

define i32 @_ZNK7CBigNum6getvchEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11ece:
  ret i32 %arg2
}

define i32 @function_11efe() local_unnamed_addr {
dec_label_pc_11efe:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_11efe = load i32, i32* %ecx.global-to-local, align 4
  %v1_11efe = add i32 %v0_11efe, 2105797701
  %v2_11efe = inttoptr i32 %v1_11efe to i32*
  %v3_11efe = load i32, i32* %v2_11efe, align 4
  %v4_11efe = add i32 %v3_11efe, -1
  store i32 %v4_11efe, i32* %v2_11efe, align 4
  %v0_11f05 = load i32, i32* %eax.global-to-local, align 4
  %v1_11f05 = trunc i32 %v0_11f05 to i8
  %v2_11f05 = add i32 %v0_11f05, 119
  %v6_11f05 = icmp ugt i8 %v1_11f05, -120
  %v16_11f05 = and i32 %v2_11f05, 255
  %v18_11f05 = and i32 %v0_11f05, -256
  %v19_11f05 = or i32 %v16_11f05, %v18_11f05
  store i32 %v19_11f05, i32* %eax.global-to-local, align 4
  %v0_11f07 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11f07 = add i32 %v0_11f07, 76133445
  %v2_11f07 = inttoptr i32 %v1_11f07 to i8*
  %v3_11f07 = load i8, i8* %v2_11f07, align 1
  %v4_11f07 = load i32, i32* %ecx.global-to-local, align 4
  %v5_11f07 = trunc i32 %v4_11f07 to i8
  %v7_11f07 = zext i1 %v6_11f05 to i8
  %v8_11f07 = add i8 %v3_11f07, %v7_11f07
  %v9_11f07 = add i8 %v8_11f07, %v5_11f07
  store i8 %v9_11f07, i8* %v2_11f07, align 1
  %v0_11f0d = load i32, i32* %eax.global-to-local, align 4
  %v11_11f0d = and i32 %v0_11f0d, -24
  store i32 %v11_11f0d, i32* %eax.global-to-local, align 4
  %v4_11f0f = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_11f0f, i32* %stack_var_-4, align 4
  %v1_11f11 = inttoptr i32 %v11_11f0d to i32*
  %v2_11f11 = load i32, i32* %v1_11f11, align 8
  %v4_11f11 = add i32 %v2_11f11, %v11_11f0d
  store i32 %v4_11f11, i32* %v1_11f11, align 8
  %v0_11f13 = load i32, i32* %stack_var_-4, align 4
  %v1_11f13 = call i32 @function_1206d(i32 %v0_11f13)
  store i32 %v1_11f13, i32* %eax.global-to-local, align 4
  ret i32 %v1_11f13

; uselistorder directives
  uselistorder i32 %v11_11f0d, { 0, 2, 1 }
  uselistorder i32 %v0_11f05, { 1, 0, 2 }
}

define i32 @function_11f18() local_unnamed_addr {
dec_label_pc_11f18:
  %v0_11f18 = load i32, i32* @ebp, align 4
  %v1_11f18 = add i32 %v0_11f18, -13
  store i32 %v1_11f18, i32* @eax, align 4
  %v1_11f1e = call i32 @function_2742a(i32 %v1_11f18)
  %v0_11f23 = load i32, i32* @ebp, align 4
  %v1_11f23 = add i32 %v0_11f23, -14
  %v2_11f23 = inttoptr i32 %v1_11f23 to i8*
  store i8 0, i8* %v2_11f23, align 1
  %v0_11f27 = load i32, i32* @ebp, align 4
  %v1_11f27 = add i32 %v0_11f27, -13
  %v1_11f2e = add i32 %v0_11f27, -14
  %v1_11f74 = add i32 %v0_11f27, -40
  %v2_11f74 = inttoptr i32 %v1_11f74 to i32*
  store i32 4, i32* %v2_11f74, align 4
  %v0_11f7b = load i32, i32* @ebp, align 4
  %v1_11f7e = add i32 %v0_11f7b, -60
  %v1_11f90 = add i32 %v0_11f7b, -36
  %v1_11f93 = add i32 %v0_11f7b, -40
  %v1_11fac = add i32 %v0_11f7b, -48
  %v2_11fc4 = inttoptr i32 %v1_11f90 to i32*
  %v3_11fc4 = load i32, i32* %v2_11fc4, align 4
  %v2_11fcb = inttoptr i32 %v1_11fac to i32*
  %v3_11fcb = load i32, i32* %v2_11fcb, align 4
  %v1_11fe4 = add i32 %v0_11f7b, -24
  %v1_11ff9 = add i32 %v0_11f7b, -28
  %v2_1200e = inttoptr i32 %v1_11fe4 to i32*
  %v3_1200e = load i32, i32* %v2_1200e, align 4
  %v2_12015 = inttoptr i32 %v1_11ff9 to i32*
  %v3_12015 = load i32, i32* %v2_12015, align 4
  store i32 %v3_12015, i32* @eax, align 4
  %v10_1201b = call i32 @function_287fa(i32 %v3_12015, i32 %v3_1200e, i32 %v1_11f7e, i32 %v1_11f7e, i32 %v1_11f7e, i32 %v3_11fcb, i32 %v3_11fc4, i32 %v1_11f93, i32 %v1_11f2e, i32 %v1_11f27)
  %v0_12020 = load i32, i32* @ebp, align 4
  %v1_12020 = add i32 %v0_12020, -60
  %v1_1203d = call i32 @function_1206d(i32 %v1_12020)
  ret i32 %v1_1203d

; uselistorder directives
  uselistorder i32 %v1_11f7e, { 2, 1, 0 }
  uselistorder i32 %v0_11f7b, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 (i32)* @function_1206d, { 1, 0 }
}

define i32 @function_12040() local_unnamed_addr {
dec_label_pc_12040:
  %eax.global-to-local = alloca i32, align 4
  %v0_12040 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12040
}

define i32 @function_12057() local_unnamed_addr {
dec_label_pc_12057:
  %eax.global-to-local = alloca i32, align 4
  %v0_12057 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12057
}

define i32 @function_1206d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1206d:
  %v0_1206d = load i32, i32* @ebp, align 4
  %v1_1206d = add i32 %v0_1206d, -76
  %v2_1206d = inttoptr i32 %v1_1206d to i32*
  %v3_1206d = load i32, i32* %v2_1206d, align 4
  store i32 %v3_1206d, i32* @eax, align 4
  %v1_12070 = add i32 %v0_1206d, -12
  %v2_12070 = inttoptr i32 %v1_12070 to i32*
  %v3_12070 = load i32, i32* %v2_12070, align 4
  %v1_12073 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12073 = icmp eq i32 %v1_12073, %v3_12070
  br i1 %v3_12073, label %bb, label %dec_label_pc_1207c

bb:                                               ; preds = %dec_label_pc_1206d
  %v1_1207a = call i32 @function_12081()
  br label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %bb, %dec_label_pc_1206d
  %v2_1207a = phi i32 [ %v1_1207a, %bb ], [ %v3_1206d, %dec_label_pc_1206d ]
  ret i32 %v2_1207a
}

define i32 @function_12081() local_unnamed_addr {
dec_label_pc_12081:
  %v0_12085 = load i32, i32* @eax, align 4
  ret i32 %v0_12085
}

define i32 @_ZN7CBigNumpLERKS_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12088:
  ret i32 %arg1
}

define i32 @function_120d6() local_unnamed_addr {
dec_label_pc_120d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_120d6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_120d6
}

define i32 @function_12100(i32 %arg1) local_unnamed_addr {
dec_label_pc_12100:
  %v0_12103 = load i32, i32* @ebx, align 4
  %v1_12106 = call i32 @__cxa_end_catch.1849(i32 %v0_12103)
  %v0_1210b = load i32, i32* @ebp, align 4
  %v1_1210b = add i32 %v0_1210b, -20
  ret i32 %v1_1210b
}

define i32 @function_1213e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1213e:
  %v0_12140 = load i32, i32* @edx, align 4
  %v1_12140 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12140 = icmp eq i32 %v1_12140, %v0_12140
  br i1 %v3_12140, label %bb, label %dec_label_pc_12149

bb:                                               ; preds = %dec_label_pc_1213e
  %v1_12147 = call i32 @function_1217e()
  store i32 %v1_12147, i32* @eax, align 4
  br label %dec_label_pc_12149

dec_label_pc_12149:                               ; preds = %bb, %dec_label_pc_1213e
  %v0_12149 = call i32 @function_12179()
  ret i32 %v0_12149
}

define i32 @function_1214b() local_unnamed_addr {
dec_label_pc_1214b:
  %v0_1214d = load i32, i32* @ebp, align 4
  %v1_1214d = add i32 %v0_1214d, -20
  %v1_12158 = call i32 @function_1215c(i32 %v1_1214d)
  ret i32 %v1_12158
}

define i32 @function_1215a() local_unnamed_addr {
dec_label_pc_1215a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1215a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1215a
}

define i32 @function_1215c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1215c:
  %v0_1215c = load i32, i32* @ebp, align 4
  %v1_1215c = add i32 %v0_1215c, -13
  ret i32 %v1_1215c
}

define i32 @function_12179() local_unnamed_addr {
dec_label_pc_12179:
  %v0_12179 = load i32, i32* @eax, align 4
  ret i32 %v0_12179
}

define i32 @function_1217e() local_unnamed_addr {
dec_label_pc_1217e:
  %v0_12184 = load i32, i32* @eax, align 4
  ret i32 %v0_12184
}

define i32 @_ZN7CBigNummIERKS_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12186:
  %stack_var_-36 = alloca i32, align 4
  %v2_121a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_121b8 = call i32 @function_244b9(i32 %v2_121a4, i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_121cd = call i32 @function_23952(i32 %arg1, i32 %v2_121a4)
  store i32 %v2_121a4, i32* @eax, align 4
  %v1_121d8 = call i32 @function_23a48(i32 %v2_121a4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_121ec

bb:                                               ; preds = %dec_label_pc_12186
  %v1_121ea = call i32 @function_1220a()
  store i32 %v1_121ea, i32* @eax, align 4
  br label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %bb, %dec_label_pc_12186
  %v0_121ec = call i32 @function_12205()
  ret i32 %v0_121ec

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_121ef() local_unnamed_addr {
dec_label_pc_121ef:
  %eax.global-to-local = alloca i32, align 4
  %v0_121ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_121ef
}

define i32 @function_12205() local_unnamed_addr {
dec_label_pc_12205:
  %v0_12205 = load i32, i32* @eax, align 4
  ret i32 %v0_12205
}

define i32 @function_1220a() local_unnamed_addr {
dec_label_pc_1220a:
  %v0_1220e = load i32, i32* @eax, align 4
  ret i32 %v0_1220e
}

define i32 @_ZplRK7CBigNumS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1220f:
  store i32 %arg1, i32* @eax, align 4
  %v1_1223a = call i32 @function_23885(i32 %arg1)
  %v1_12258 = icmp eq i32 %arg1, 0
  %v1_1225a = zext i1 %v1_12258 to i32
  %v3_1225a = and i32 %arg1, -256
  %v4_1225a = or i32 %v1_1225a, %v3_1225a
  %v5_1225d = icmp eq i1 %v1_12258, false
  br i1 %v5_1225d, label %bb, label %dec_label_pc_12265

bb:                                               ; preds = %dec_label_pc_1220f
  %v4_1225f = call i32 @function_12315(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_12265

dec_label_pc_12265:                               ; preds = %bb, %dec_label_pc_1220f
  %v2_12265 = phi i32 [ %v4_1225f, %bb ], [ %v4_1225a, %dec_label_pc_1220f ]
  ret i32 %v2_12265

; uselistorder directives
  uselistorder i1 %v1_12258, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_1226e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1226e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12272() local_unnamed_addr {
dec_label_pc_12272:
  %eax.global-to-local = alloca i32, align 4
  %v0_12272 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12272
}

define i32 @function_122e3() local_unnamed_addr {
dec_label_pc_122e3:
  %v0_122e3 = call i32 @function_122e7()
  ret i32 %v0_122e3
}

define i32 @function_122e5() local_unnamed_addr {
dec_label_pc_122e5:
  %eax.global-to-local = alloca i32, align 4
  %v0_122e5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_122e5
}

define i32 @function_122e7() local_unnamed_addr {
dec_label_pc_122e7:
  %v0_122f2 = load i32, i32* @ebx, align 4
  %v0_122fa = load i32, i32* @esi, align 4
  store i32 %v0_122fa, i32* @ebx, align 4
  %v1_122fc = call i32 @function_12300(i32 %v0_122f2)
  ret i32 %v1_122fc
}

define i32 @function_122fe() local_unnamed_addr {
dec_label_pc_122fe:
  %eax.global-to-local = alloca i32, align 4
  %v0_122fe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_122fe
}

define i32 @function_12300(i32 %arg1) local_unnamed_addr {
dec_label_pc_12300:
  %v0_1230b = load i32, i32* @ebx, align 4
  ret i32 %v0_1230b
}

define i32 @function_12315(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12315:
  %v0_12316 = load i32, i32* @ebp, align 4
  %v1_12316 = add i32 %v0_12316, -28
  %v2_12316 = inttoptr i32 %v1_12316 to i32*
  %v3_12316 = load i32, i32* %v2_12316, align 4
  store i32 %arg3, i32* @ebp, align 4
  ret i32 %v3_12316
}

define i32 @_ZmiRK7CBigNumS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12333:
  ret i32 %arg1
}

define i32 @function_12396() local_unnamed_addr {
dec_label_pc_12396:
  %eax.global-to-local = alloca i32, align 4
  %v0_12396 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12396
}

define i32 @function_12407() local_unnamed_addr {
dec_label_pc_12407:
  %v0_12407 = call i32 @function_1240b()
  ret i32 %v0_12407
}

define i32 @function_12409() local_unnamed_addr {
dec_label_pc_12409:
  %eax.global-to-local = alloca i32, align 4
  %v0_12409 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12409
}

define i32 @function_1240b() local_unnamed_addr {
dec_label_pc_1240b:
  %v0_1240b = load i32, i32* @ebp, align 4
  %v1_1240b = add i32 %v0_1240b, -13
  ret i32 %v1_1240b
}

define i32 @function_12416() local_unnamed_addr {
dec_label_pc_12416:
  %ebx.global-to-local = alloca i32, align 4
  %v0_12416 = load i32, i32* %ebx.global-to-local, align 4
  %v1_12420 = call i32 @function_12424(i32 %v0_12416)
  ret i32 %v1_12420
}

define i32 @function_12422() local_unnamed_addr {
dec_label_pc_12422:
  %eax.global-to-local = alloca i32, align 4
  %v0_12422 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12422
}

define i32 @function_12424(i32 %arg1) local_unnamed_addr {
dec_label_pc_12424:
  %v0_1242f = load i32, i32* @ebx, align 4
  ret i32 %v0_1242f
}

define i32 @function_1244d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1244d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1244d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1244d = add i32 %v0_1244d, 1583034564
  %v2_1244d = inttoptr i32 %v1_1244d to i32*
  %v3_1244d = load i32, i32* %v2_1244d, align 4
  %v4_1244d = add i32 %v3_1244d, 1
  store i32 %v4_1244d, i32* %v2_1244d, align 4
  %v0_12454 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12454
}

define i32 @_ZngRK7CBigNum(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12457:
  %v2_12458 = load i32, i32* @eax, align 4
  ret i32 %v2_12458
}

define i32 @function_1245a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1245a:
  %v0_1245e = load i32, i32* @ebp, align 4
  %v1_1245e = add i32 %v0_1245e, 8
  %v2_1245e = inttoptr i32 %v1_1245e to i32*
  %v3_1245e = load i32, i32* %v2_1245e, align 4
  %v2_12461 = add i32 %v0_1245e, -28
  %v3_12461 = inttoptr i32 %v2_12461 to i32*
  store i32 %v3_1245e, i32* %v3_12461, align 4
  %v0_12464 = load i32, i32* @ebp, align 4
  %v1_12464 = add i32 %v0_12464, 12
  %v2_12464 = inttoptr i32 %v1_12464 to i32*
  %v3_12464 = load i32, i32* %v2_12464, align 4
  %v2_12467 = add i32 %v0_12464, -32
  %v3_12467 = inttoptr i32 %v2_12467 to i32*
  store i32 %v3_12464, i32* %v3_12467, align 4
  %v0_1246a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12470 = load i32, i32* @ebp, align 4
  %v2_12470 = add i32 %v1_12470, -12
  %v3_12470 = inttoptr i32 %v2_12470 to i32*
  store i32 %v0_1246a, i32* %v3_12470, align 4
  store i1 false, i1* @cf, align 1
  %v0_12475 = load i32, i32* @ebp, align 4
  %v1_12475 = add i32 %v0_12475, -32
  %v2_12475 = inttoptr i32 %v1_12475 to i32*
  %v3_12475 = load i32, i32* %v2_12475, align 4
  %v1_1247c = add i32 %v0_12475, -28
  %v2_1247c = inttoptr i32 %v1_1247c to i32*
  %v3_1247c = load i32, i32* %v2_1247c, align 4
  store i32 %v3_1247c, i32* @eax, align 4
  %v2_12482 = call i32 @function_23b0d(i32 %v3_1247c, i32 %v3_12475)
  %v0_12487 = load i32, i32* @ebp, align 4
  %v1_12487 = add i32 %v0_12487, -28
  %v2_12487 = inttoptr i32 %v1_12487 to i32*
  %v3_12495 = load i32, i32* %v2_12487, align 4
  ret i32 %v3_12495
}

define i32 @function_124a4() local_unnamed_addr {
dec_label_pc_124a4:
  %v0_124a4 = call i32 @function_124bd()
  ret i32 %v0_124a4
}

define i32 @function_124a7() local_unnamed_addr {
dec_label_pc_124a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_124a7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_124a7
}

define i32 @function_124bd() local_unnamed_addr {
dec_label_pc_124bd:
  %v0_124bd = load i32, i32* @ebp, align 4
  %v1_124bd = add i32 %v0_124bd, -28
  %v2_124bd = inttoptr i32 %v1_124bd to i32*
  %v3_124bd = load i32, i32* %v2_124bd, align 4
  store i32 %v3_124bd, i32* @eax, align 4
  %v1_124c0 = add i32 %v0_124bd, -12
  %v2_124c0 = inttoptr i32 %v1_124c0 to i32*
  %v3_124c0 = load i32, i32* %v2_124c0, align 4
  %v1_124c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_124c3 = icmp eq i32 %v1_124c3, %v3_124c0
  br i1 %v3_124c3, label %bb, label %dec_label_pc_124cc

bb:                                               ; preds = %dec_label_pc_124bd
  %v1_124ca = call i32 @function_124d1()
  br label %dec_label_pc_124cc

dec_label_pc_124cc:                               ; preds = %bb, %dec_label_pc_124bd
  %v2_124ca = phi i32 [ %v1_124ca, %bb ], [ %v3_124bd, %dec_label_pc_124bd ]
  ret i32 %v2_124ca
}

define i32 @function_124d1() local_unnamed_addr {
dec_label_pc_124d1:
  %v0_124d6 = load i32, i32* @eax, align 4
  ret i32 %v0_124d6
}

define i32 @_ZeqRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_124d9:
  ret i32 %arg1
}

define i32 @function_12507() local_unnamed_addr {
dec_label_pc_12507:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_12507 = add i32 %tmp91, -1064038464
  %v2_12507 = inttoptr i32 %v1_12507 to i32*
  %v3_12507 = load i32, i32* %v2_12507, align 4
  %v4_12507 = add i32 %v3_12507, 1
  store i32 %v4_12507, i32* %v2_12507, align 4
  %v0_1251f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1251f
}

define i32 @_ZneRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12520:
  %stack_var_-4 = alloca i32, align 4
  %v4_12520 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_12520, i32* @ebp, align 4
  ret i32 %arg1
}

define i32 @function_1252c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1252c:
  %v0_1252c = load i32, i32* @ebp, align 4
  %v1_1252c = add i32 %v0_1252c, 12
  %v2_1252c = inttoptr i32 %v1_1252c to i32*
  %v3_1252c = load i32, i32* %v2_1252c, align 4
  %v2_1252f = add i32 %v0_1252c, -32
  %v3_1252f = inttoptr i32 %v2_1252f to i32*
  store i32 %v3_1252c, i32* %v3_1252f, align 4
  %v0_12532 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_12538 = load i32, i32* @ebp, align 4
  %v2_12538 = add i32 %v1_12538, -12
  %v3_12538 = inttoptr i32 %v2_12538 to i32*
  store i32 %v0_12532, i32* %v3_12538, align 4
  %v0_1253d = load i32, i32* @ebp, align 4
  %v1_1253d = add i32 %v0_1253d, -32
  %v2_1253d = inttoptr i32 %v1_1253d to i32*
  %v3_1253d = load i32, i32* %v2_1253d, align 4
  %v1_12540 = add i32 %v0_1253d, -28
  %v2_12540 = inttoptr i32 %v1_12540 to i32*
  %v3_12540 = load i32, i32* %v2_12540, align 4
  %v1_1254f = icmp eq i32 %v3_12540, 0
  %v1_12551 = icmp eq i1 %v1_1254f, false
  %v2_12551 = zext i1 %v1_12551 to i32
  %v4_12551 = and i32 %v3_12540, -256
  %v5_12551 = or i32 %v2_12551, %v4_12551
  store i32 %v5_12551, i32* @eax, align 4
  %v1_12554 = add i32 %v0_1253d, -12
  %v2_12554 = inttoptr i32 %v1_12554 to i32*
  %v3_12554 = load i32, i32* %v2_12554, align 4
  %v1_12557 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_12557 = icmp eq i32 %v1_12557, %v3_12554
  br i1 %v3_12557, label %bb, label %dec_label_pc_12560

bb:                                               ; preds = %dec_label_pc_1252c
  %v3_1255e = call i32 @function_12565(i32 %v3_12540, i32 %v3_1253d)
  br label %dec_label_pc_12560

dec_label_pc_12560:                               ; preds = %bb, %dec_label_pc_1252c
  %v4_1255e = phi i32 [ %v3_1255e, %bb ], [ %v5_12551, %dec_label_pc_1252c ]
  ret i32 %v4_1255e
}

define i32 @function_12565(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12565:
  %v0_12566 = load i32, i32* @eax, align 4
  ret i32 %v0_12566
}

define i32 @_ZleRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12567:
  %stack_var_-4 = alloca i32, align 4
  %v4_12567 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_12567, i32* @ebp, align 4
  ret i32 %arg1
}

define i32 @function_12572(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12572:
  %v0_12574 = load i32, i32* @ebp, align 4
  %v0_12575 = load i32, i32* @eax, align 4
  %v2_12575 = or i32 %v0_12575, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i32 %v2_12575, i32* @eax, align 4
  %v1_12577 = add i32 %v0_12574, 2
  %v9_12577 = icmp eq i32 %v1_12577, 0
  store i32 %v1_12577, i32* @ebp, align 4
  %v0_12578 = load i32, i32* @ecx, align 4
  %v2_12578 = icmp eq i32 %v0_12578, 1
  %v4_12578 = or i1 %v9_12577, %v2_12578
  br i1 %v4_12578, label %dec_label_pc_1257a, label %bb

bb:                                               ; preds = %dec_label_pc_12572
  %v6_12578 = call i32 @function_125df()
  %v1_1257f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1257a

dec_label_pc_1257a:                               ; preds = %dec_label_pc_12572, %bb
  %v1_1257f = phi i32 [ %v1_12577, %dec_label_pc_12572 ], [ %v1_1257f.pre, %bb ]
  %v0_1257a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1257f = add i32 %v1_1257f, -12
  %v3_1257f = inttoptr i32 %v2_1257f to i32*
  store i32 %v0_1257a, i32* %v3_1257f, align 4
  %v0_12584 = load i32, i32* @ebp, align 4
  %v1_12587 = add i32 %v0_12584, -28
  %v2_12587 = inttoptr i32 %v1_12587 to i32*
  %v3_12587 = load i32, i32* %v2_12587, align 4
  ret i32 %v3_12587

; uselistorder directives
  uselistorder label %dec_label_pc_1257a, { 1, 0 }
}

define i32 @function_125ab() local_unnamed_addr {
dec_label_pc_125ab:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_125ab = load i32, i32* %ecx.global-to-local, align 4
  %v1_125ab = add i32 %v0_125ab, -1
  store i32 %v1_125ab, i32* %ecx.global-to-local, align 4
  %v0_125ad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_125ad
}

define i32 @_ZgeRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125ae:
  ret i32 %arg1
}

define i32 @function_125df() local_unnamed_addr {
dec_label_pc_125df:
  %v0_125df = load i32, i32* @eax, align 4
  %tmp = icmp slt i32 %v0_125df, 0
  %v2_125df = zext i1 %tmp to i32
  store i32 %v2_125df, i32* @eax, align 4
  %v0_125e2 = load i32, i32* @ebp, align 4
  %v1_125e2 = add i32 %v0_125e2, -12
  %v2_125e2 = inttoptr i32 %v1_125e2 to i32*
  %v3_125e2 = load i32, i32* %v2_125e2, align 4
  %v1_125e5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_125e5 = icmp eq i32 %v1_125e5, %v3_125e2
  br i1 %v3_125e5, label %bb, label %dec_label_pc_125ee

bb:                                               ; preds = %dec_label_pc_125df
  %v1_125ec = call i32 @function_125f3()
  br label %dec_label_pc_125ee

dec_label_pc_125ee:                               ; preds = %bb, %dec_label_pc_125df
  %v2_125ec = phi i32 [ %v1_125ec, %bb ], [ %v2_125df, %dec_label_pc_125df ]
  ret i32 %v2_125ec

; uselistorder directives
  uselistorder i32 %v2_125df, { 1, 0 }
}

define i32 @function_125f3() local_unnamed_addr {
dec_label_pc_125f3:
  %v0_125f4 = load i32, i32* @eax, align 4
  ret i32 %v0_125f4
}

define i32 @_ZltRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125f5:
  ret i32 %arg1
}

define i32 @function_1261e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1261e:
  %v0_1261e = load i32, i32* @eax, align 4
  %v11_1261e = and i32 %v0_1261e, -24
  ret i32 %v11_1261e
}

define i32 @function_12637() local_unnamed_addr {
dec_label_pc_12637:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_12637 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12637 = add i32 %v0_12637, -1
  store i32 %v1_12637, i32* %ecx.global-to-local, align 4
  %v0_12639 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12639
}

define i32 @_ZgtRK7CBigNumS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1263a:
  ret i32 %arg1
}

define i32 @function_12670(i32 %arg1) local_unnamed_addr {
dec_label_pc_12670:
  %v0_12680 = load i32, i32* @eax, align 4
  ret i32 %v0_12680
}

define i32 @_ZN7CScriptC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_12682:
  %v1_1269f = call i32 @function_27b2e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_126b0

bb:                                               ; preds = %dec_label_pc_12682
  %v1_126ae = call i32 @function_126b5()
  br label %dec_label_pc_126b0

dec_label_pc_126b0:                               ; preds = %bb, %dec_label_pc_12682
  %v3_126ae = phi i32 [ %v1_126ae, %bb ], [ 0, %dec_label_pc_12682 ]
  ret i32 %v3_126ae
}

define i32 @function_126b5() local_unnamed_addr {
dec_label_pc_126b5:
  %v0_126b6 = load i32, i32* @eax, align 4
  ret i32 %v0_126b6
}

define i32 @_ZN7CScriptC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_126b8:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %v2_126d6 = ptrtoint i32* %stack_var_-17 to i32
  %v1_126dc = call i32 @function_27c14(i32 %v2_126d6)
  %v2_126e4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_126ee = call i32 @function_27722(i32 %v2_126e4, i32 %arg2)
  %v2_126f9 = ptrtoint i32* %stack_var_-28 to i32
  %v2_12703 = call i32 @function_27696(i32 %v2_126f9, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v3_12715 = load i32, i32* %stack_var_-24, align 4
  %v3_1271c = load i32, i32* %stack_var_-28, align 4
  %v4_12726 = call i32 @function_29314(i32 %arg1, i32 %v3_1271c, i32 %v3_12715, i32 %v2_126d6)
  store i32 %v2_126d6, i32* @eax, align 4
  %v1_12731 = call i32 @function_27c4a(i32 %v2_126d6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12742

bb:                                               ; preds = %dec_label_pc_126b8
  %v1_12740 = call i32 @function_12760()
  store i32 %v1_12740, i32* @eax, align 4
  br label %dec_label_pc_12742

dec_label_pc_12742:                               ; preds = %bb, %dec_label_pc_126b8
  %v0_12742 = call i32 @function_1275b()
  ret i32 %v0_12742

; uselistorder directives
  uselistorder i32 %v2_126d6, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_12745() local_unnamed_addr {
dec_label_pc_12745:
  %eax.global-to-local = alloca i32, align 4
  %v0_12745 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12745
}

define i32 @function_12758(i32 %arg1) local_unnamed_addr {
dec_label_pc_12758:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1275b() local_unnamed_addr {
dec_label_pc_1275b:
  %v0_1275b = load i32, i32* @eax, align 4
  ret i32 %v0_1275b
}

define i32 @function_12760() local_unnamed_addr {
dec_label_pc_12760:
  %v0_12760 = load i32, i32* @ebp, align 4
  %v1_12760 = add i32 %v0_12760, -4
  %v2_12760 = inttoptr i32 %v1_12760 to i32*
  %v3_12760 = load i32, i32* %v2_12760, align 4
  store i32 %v3_12760, i32* @ebx, align 4
  %v0_12764 = load i32, i32* @eax, align 4
  ret i32 %v0_12764
}

define i32 @_ZN7CScriptC1EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12766:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v2_1278a = ptrtoint i32* %stack_var_-17 to i32
  store i32 %v2_1278a, i32* @eax, align 4
  store i32 %v2_1278a, i32* %stack_var_-60, align 4
  %v1_12790 = call i32 @function_27cc2(i32 %v2_1278a)
  store i32 %v2_1278a, i32* %stack_var_-60, align 4
  %v4_127bb = call i32 @function_27cf8(i32 %v2_1278a, i32 %arg2, i32 %arg3, i32 %v2_1278a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_127cc

bb:                                               ; preds = %dec_label_pc_12766
  %v1_127ca = load i32, i32* %stack_var_-60, align 4
  %v3_127ca = call i32 @function_127ea(i32 %v1_127ca, i32 %arg2)
  store i32 %v3_127ca, i32* @eax, align 4
  br label %dec_label_pc_127cc

dec_label_pc_127cc:                               ; preds = %bb, %dec_label_pc_12766
  %v0_127cc = call i32 @function_127e5()
  ret i32 %v0_127cc

; uselistorder directives
  uselistorder i32 %v2_1278a, { 0, 2, 1, 4, 3, 5 }
}

define i32 @function_127cf() local_unnamed_addr {
dec_label_pc_127cf:
  %eax.global-to-local = alloca i32, align 4
  %v0_127cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_127cf
}

define i32 @function_127e5() local_unnamed_addr {
dec_label_pc_127e5:
  %v0_127e5 = load i32, i32* @eax, align 4
  ret i32 %v0_127e5
}

define i32 @function_127ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_127ea:
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg2, i32* @ebp, align 4
  %v0_127ef = load i32, i32* @eax, align 4
  ret i32 %v0_127ef
}

define i32 @_ZN7CScriptD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_127f0:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_1280d = call i32 @function_27cd2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1281e

bb:                                               ; preds = %dec_label_pc_127f0
  %v1_1281c = call i32 @function_12823()
  br label %dec_label_pc_1281e

dec_label_pc_1281e:                               ; preds = %bb, %dec_label_pc_127f0
  %v2_1281c = phi i32 [ %v1_1281c, %bb ], [ 0, %dec_label_pc_127f0 ]
  ret i32 %v2_1281c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_12823() local_unnamed_addr {
dec_label_pc_12823:
  %v0_12824 = load i32, i32* @eax, align 4
  ret i32 %v0_12824
}

define i32 @_ZN7CScriptC1E10opcodetype(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12826:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_1284a = call i32 @function_27cd2(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v2_1285c = call i32 @function_25124(i32 %arg1, i32 %arg2)
  %v0_12861 = call i32 @function_1287a()
  ret i32 %v0_12861

; uselistorder directives
  uselistorder i32 (i32)* @function_27cd2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_12864() local_unnamed_addr {
dec_label_pc_12864:
  %eax.global-to-local = alloca i32, align 4
  %v0_12864 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12864
}

define i32 @function_1287a() local_unnamed_addr {
dec_label_pc_1287a:
  %v0_1287a = load i32, i32* @ebp, align 4
  %v1_1287a = add i32 %v0_1287a, -12
  %v2_1287a = inttoptr i32 %v1_1287a to i32*
  %v3_1287a = load i32, i32* %v2_1287a, align 4
  %v1_1287d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1287d = xor i32 %v1_1287d, %v3_1287a
  %v3_1287d = icmp eq i32 %v2_1287d, 0
  store i32 %v2_1287d, i32* @eax, align 4
  br i1 %v3_1287d, label %bb, label %dec_label_pc_12886

bb:                                               ; preds = %dec_label_pc_1287a
  %v1_12884 = call i32 @function_1288b()
  br label %dec_label_pc_12886

dec_label_pc_12886:                               ; preds = %bb, %dec_label_pc_1287a
  %v2_12884 = phi i32 [ %v1_12884, %bb ], [ %v2_1287d, %dec_label_pc_1287a ]
  ret i32 %v2_12884
}

define i32 @function_1288b() local_unnamed_addr {
dec_label_pc_1288b:
  %v0_12890 = load i32, i32* @eax, align 4
  ret i32 %v0_12890
}

define i32 @_ZN7CScriptC1ERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12892:
  %v1_128b6 = call i32 @function_27d3e(i32 %arg1)
  %v1_128c8 = call i32 @function_25464(i32 %arg1)
  %v0_128cd = call i32 @function_128e6()
  ret i32 %v0_128cd

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_128d0() local_unnamed_addr {
dec_label_pc_128d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_128d0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_128d0
}

define i32 @function_128e6() local_unnamed_addr {
dec_label_pc_128e6:
  %v0_128e6 = load i32, i32* @ebp, align 4
  %v1_128e6 = add i32 %v0_128e6, -12
  %v2_128e6 = inttoptr i32 %v1_128e6 to i32*
  %v3_128e6 = load i32, i32* %v2_128e6, align 4
  %v1_128e9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_128e9 = xor i32 %v1_128e9, %v3_128e6
  %v3_128e9 = icmp eq i32 %v2_128e9, 0
  store i32 %v2_128e9, i32* @eax, align 4
  br i1 %v3_128e9, label %bb, label %dec_label_pc_128f2

bb:                                               ; preds = %dec_label_pc_128e6
  %v1_128f0 = call i32 @function_128f7()
  br label %dec_label_pc_128f2

dec_label_pc_128f2:                               ; preds = %bb, %dec_label_pc_128e6
  %v2_128f0 = phi i32 [ %v1_128f0, %bb ], [ %v2_128e9, %dec_label_pc_128e6 ]
  ret i32 %v2_128f0
}

define i32 @function_128f7() local_unnamed_addr {
dec_label_pc_128f7:
  %v0_128fc = load i32, i32* @eax, align 4
  ret i32 %v0_128fc
}

define i32 @_ZN7CScriptlsE10opcodetype(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128fe:
  %stack_var_-18 = alloca i32, align 4
  %v2_12920 = icmp slt i32 %arg2, 0
  br i1 %v2_12920, label %dec_label_pc_1292e, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_128fe
  %v7_1292c = icmp sgt i32 %arg2, 255
  br i1 %v7_1292c, label %dec_label_pc_1292e, label %bb

bb:                                               ; preds = %dec_label_pc_12924
  %v10_1292c = call i32 @function_1299f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1292e

dec_label_pc_1292e:                               ; preds = %dec_label_pc_12924, %bb, %dec_label_pc_128fe
  %v0_1293a = phi i32 [ %arg2, %dec_label_pc_12924 ], [ %v10_1292c, %bb ], [ %arg2, %dec_label_pc_128fe ]
  store i32 %v0_1293a, i32* @ebx, align 4
  %v2_1293c = ptrtoint i32* %stack_var_-18 to i32
  ret i32 %v2_1293c

; uselistorder directives
  uselistorder label %dec_label_pc_1292e, { 1, 0, 2 }
}

define i32 @function_1298e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1298e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1299f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1299f:
  %v0_1299f = load i32, i32* @ebp, align 4
  %v1_1299f = add i32 %v0_1299f, -48
  %v2_1299f = inttoptr i32 %v1_1299f to i32*
  %v3_1299f = load i32, i32* %v2_1299f, align 4
  %v1_129a2 = trunc i32 %v3_1299f to i8
  %v3_129a2 = add i32 %v0_1299f, -13
  %v4_129a2 = inttoptr i32 %v3_129a2 to i8*
  store i8 %v1_129a2, i8* %v4_129a2, align 1
  %v0_129a5 = load i32, i32* @ebp, align 4
  %v1_129a5 = add i32 %v0_129a5, -44
  %v2_129a5 = inttoptr i32 %v1_129a5 to i32*
  %v3_129a5 = load i32, i32* %v2_129a5, align 4
  store i32 %v3_129a5, i32* @edx, align 4
  %v1_129a8 = add i32 %v0_129a5, -24
  store i32 %v1_129a8, i32* @eax, align 4
  %v2_129b2 = call i32 @function_291e0(i32 %v1_129a8, i32 %v3_129a5)
  %v0_129ba = load i32, i32* @ebp, align 4
  %v1_129ba = add i32 %v0_129ba, -44
  %v2_129ba = inttoptr i32 %v1_129ba to i32*
  %v3_129ba = load i32, i32* %v2_129ba, align 4
  %v1_129bd = add i32 %v0_129ba, -20
  %v1_129c0 = add i32 %v0_129ba, -13
  %v1_129c7 = add i32 %v0_129ba, -24
  %v2_129c7 = inttoptr i32 %v1_129c7 to i32*
  %v3_129c7 = load i32, i32* %v2_129c7, align 4
  store i32 %v3_129c7, i32* @ecx, align 4
  %v4_129d5 = call i32 @function_29644(i32 %v1_129bd, i32 %v3_129ba, i32 %v3_129c7, i32 %v1_129c0)
  %v0_129dd = load i32, i32* @ebp, align 4
  %v1_129dd = add i32 %v0_129dd, -44
  %v2_129dd = inttoptr i32 %v1_129dd to i32*
  %v3_129dd = load i32, i32* %v2_129dd, align 4
  store i32 %v3_129dd, i32* @eax, align 4
  %v1_129e0 = add i32 %v0_129dd, -12
  %v2_129e0 = inttoptr i32 %v1_129e0 to i32*
  %v3_129e0 = load i32, i32* %v2_129e0, align 4
  %v1_129e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_129e3 = icmp eq i32 %v1_129e3, %v3_129e0
  br i1 %v3_129e3, label %bb, label %dec_label_pc_129ec

bb:                                               ; preds = %dec_label_pc_1299f
  %v1_129ea = call i32 @function_12a21()
  store i32 %v1_129ea, i32* @eax, align 4
  br label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %bb, %dec_label_pc_1299f
  %v0_129ec = call i32 @function_12a1c()
  ret i32 %v0_129ec

; uselistorder directives
  uselistorder i32 %v0_129ba, { 1, 0, 2, 3 }
}

define i32 @function_129fb() local_unnamed_addr {
dec_label_pc_129fb:
  %v0_129fb = call i32 @function_129ff()
  ret i32 %v0_129fb
}

define i32 @function_129fd() local_unnamed_addr {
dec_label_pc_129fd:
  %eax.global-to-local = alloca i32, align 4
  %v0_129fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_129fd
}

define i32 @function_129ff() local_unnamed_addr {
dec_label_pc_129ff:
  %v0_129ff = load i32, i32* @ebp, align 4
  %v1_129ff = add i32 %v0_129ff, -14
  ret i32 %v1_129ff
}

define i32 @function_12a1c() local_unnamed_addr {
dec_label_pc_12a1c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12a21() local_unnamed_addr {
dec_label_pc_12a21:
  %v0_12a21 = load i32, i32* @ebp, align 4
  %v3_12a24 = add i32 %v0_12a21, -4
  %v1_12a25 = inttoptr i32 %v3_12a24 to i32*
  %v2_12a25 = load i32, i32* %v1_12a25, align 4
  store i32 %v2_12a25, i32* @esi, align 4
  %v1_12a26 = inttoptr i32 %v0_12a21 to i32*
  %v2_12a26 = load i32, i32* %v1_12a26, align 4
  store i32 %v2_12a26, i32* @ebp, align 4
  %v0_12a27 = load i32, i32* @eax, align 4
  ret i32 %v0_12a27
}

define i32 @_ZN7CScriptlsERK7uint160(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a28:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %v0_12a2b = load i32, i32* %ebx.global-to-local, align 4
  store i8 20, i8* %stack_var_-17, align 1
  %v2_12a4d = ptrtoint i32* %stack_var_-32 to i32
  %v2_12a57 = call i32 @function_2930a(i32 %v2_12a4d, i32 %arg1)
  %v2_12a62 = ptrtoint i32* %stack_var_-28 to i32
  %v2_12a65 = ptrtoint i8* %stack_var_-17 to i32
  %v3_12a6c = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_12a6c, i32* @ecx, align 4
  %v4_12a7a = call i32 @function_2976e(i32 %v2_12a62, i32 %arg1, i32 %v3_12a6c, i32 %v2_12a65)
  %v1_12a85 = add i32 %arg2, 20
  store i32 %v1_12a85, i32* %ebx.global-to-local, align 4
  %v2_12a8b = ptrtoint i32* %stack_var_-24 to i32
  %v2_12a95 = call i32 @function_2930a(i32 %v2_12a8b, i32 %arg1)
  %v3_12aab = load i32, i32* %stack_var_-24, align 4
  %v4_12ab5 = call i32 @function_29888(i32 %arg1, i32 %v3_12aab, i32 %arg2, i32 %v1_12a85)
  store i32 %v0_12a2b, i32* %ebx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2930a, { 1, 0 }
  uselistorder i8 20, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 4, 2, 3 }
}

define i32 @_ZN7CScriptlsERK7CPubKey(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12ad4:
  store i1 false, i1* @of, align 1
  store i1 true, i1* @zf, align 1
  store i1 false, i1* @sf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v2_12af9 = call i32 @function_22be0(i32 %arg2)
  %v1_12afe = add i32 %v2_12af9, -75
  %v5_12afe = icmp ult i32 %v2_12af9, 75
  %tmp19 = sub i32 74, %v2_12af9
  %v8_12afe = and i32 %tmp19, %v2_12af9
  %v9_12afe = icmp slt i32 %v8_12afe, 0
  store i1 %v9_12afe, i1* @of, align 1
  %v10_12afe = icmp eq i32 %v1_12afe, 0
  store i1 %v10_12afe, i1* @zf, align 1
  %v11_12afe = icmp slt i32 %v1_12afe, 0
  store i1 %v11_12afe, i1* @sf, align 1
  %v2_12b01 = or i1 %v5_12afe, %v10_12afe
  br i1 %v2_12b01, label %bb, label %dec_label_pc_12b03

bb:                                               ; preds = %dec_label_pc_12ad4
  %v3_12b01 = call i32 @function_12b27()
  br label %dec_label_pc_12b03

dec_label_pc_12b03:                               ; preds = %bb, %dec_label_pc_12ad4
  %v3_12b1b = phi i32 [ %v3_12b01, %bb ], [ %v2_12af9, %dec_label_pc_12ad4 ]
  ret i32 %v3_12b1b

; uselistorder directives
  uselistorder i32 %v1_12afe, { 1, 0 }
  uselistorder i32 %v2_12af9, { 1, 0, 2, 4, 3 }
  uselistorder i32 74, { 1, 0 }
}

define i32 @function_12b27() local_unnamed_addr {
dec_label_pc_12b27:
  %v0_12b27 = load i32, i32* @ebp, align 4
  %v1_12b27 = add i32 %v0_12b27, -48
  %v2_12b27 = inttoptr i32 %v1_12b27 to i32*
  %v3_12b27 = load i32, i32* %v2_12b27, align 4
  store i32 %v3_12b27, i32* @eax, align 4
  %v1_12b2d = call i32 @function_22be0(i32 %v3_12b27)
  %v1_12b32 = trunc i32 %v1_12b2d to i8
  %v2_12b32 = load i32, i32* @ebp, align 4
  %v3_12b32 = add i32 %v2_12b32, -13
  %v4_12b32 = inttoptr i32 %v3_12b32 to i8*
  store i8 %v1_12b32, i8* %v4_12b32, align 1
  %v0_12b35 = load i32, i32* @ebp, align 4
  %v1_12b35 = add i32 %v0_12b35, -44
  %v2_12b35 = inttoptr i32 %v1_12b35 to i32*
  %v3_12b35 = load i32, i32* %v2_12b35, align 4
  %v1_12b38 = add i32 %v0_12b35, -28
  store i32 %v1_12b38, i32* @eax, align 4
  %v2_12b42 = call i32 @function_293b6(i32 %v1_12b38, i32 %v3_12b35)
  %v0_12b4a = load i32, i32* @ebp, align 4
  %v1_12b4a = add i32 %v0_12b4a, -44
  %v2_12b4a = inttoptr i32 %v1_12b4a to i32*
  %v3_12b4a = load i32, i32* %v2_12b4a, align 4
  %v1_12b4d = add i32 %v0_12b4a, -24
  store i32 %v1_12b4d, i32* @eax, align 4
  %v1_12b50 = add i32 %v0_12b4a, -13
  %v1_12b57 = add i32 %v0_12b4a, -28
  %v2_12b57 = inttoptr i32 %v1_12b57 to i32*
  %v3_12b57 = load i32, i32* %v2_12b57, align 4
  store i32 %v3_12b57, i32* @ecx, align 4
  %v4_12b65 = call i32 @function_2981a(i32 %v1_12b4d, i32 %v3_12b4a, i32 %v3_12b57, i32 %v1_12b50)
  %v0_12b6a = load i32, i32* @esp, align 4
  %v1_12b6a = add i32 %v0_12b6a, -4
  %v2_12b6a = urem i32 %v0_12b6a, 16
  %v3_12b6a = add nsw i32 %v2_12b6a, -4
  %v4_12b6a = icmp ugt i32 %v3_12b6a, 15
  %v5_12b6a = icmp ult i32 %v0_12b6a, 4
  %tmp7 = sub i32 3, %v0_12b6a
  %v8_12b6a = and i32 %tmp7, %v0_12b6a
  %v9_12b6a = icmp slt i32 %v8_12b6a, 0
  store i1 %v4_12b6a, i1* @az, align 1
  store i1 %v5_12b6a, i1* @cf, align 1
  store i1 %v9_12b6a, i1* @of, align 1
  %v10_12b6a = icmp eq i32 %v1_12b6a, 0
  store i1 %v10_12b6a, i1* @zf, align 1
  %v11_12b6a = icmp slt i32 %v1_12b6a, 0
  store i1 %v11_12b6a, i1* @sf, align 1
  %v12_12b6a = trunc i32 %v1_12b6a to i8
  %v13_12b6a = call i8 @llvm.ctpop.i8(i8 %v12_12b6a)
  %v14_12b6a = urem i8 %v13_12b6a, 2
  %v15_12b6a = icmp eq i8 %v14_12b6a, 0
  store i1 %v15_12b6a, i1* @pf, align 1
  %v0_12b6d = load i32, i32* @ebp, align 4
  %v1_12b6d = add i32 %v0_12b6d, -48
  %v2_12b6d = inttoptr i32 %v1_12b6d to i32*
  %v3_12b6d = load i32, i32* %v2_12b6d, align 4
  store i32 %v3_12b6d, i32* @eax, align 4
  %v1_12b73 = call i32 @function_22c4a(i32 %v3_12b6d)
  %v0_12b7a = load i32, i32* @ebp, align 4
  %v1_12b7a = add i32 %v0_12b7a, -48
  %v2_12b7a = inttoptr i32 %v1_12b7a to i32*
  %v3_12b7a = load i32, i32* %v2_12b7a, align 4
  store i32 %v3_12b7a, i32* @eax, align 4
  %v1_12b80 = call i32 @function_22c1c(i32 %v3_12b7a)
  store i32 %v1_12b80, i32* @ebx, align 4
  %v0_12b87 = load i32, i32* @ebp, align 4
  %v1_12b87 = add i32 %v0_12b87, -44
  %v2_12b87 = inttoptr i32 %v1_12b87 to i32*
  %v3_12b87 = load i32, i32* %v2_12b87, align 4
  %v1_12b8a = add i32 %v0_12b87, -20
  store i32 %v1_12b8a, i32* @eax, align 4
  %v2_12b94 = call i32 @function_293b6(i32 %v1_12b8a, i32 %v3_12b87)
  %v0_12b99 = load i32, i32* @esp, align 4
  %v5_12b99 = icmp ult i32 %v0_12b99, 4
  store i1 %v5_12b99, i1* @cf, align 1
  %v0_12b9c = load i32, i32* @ebp, align 4
  %v1_12b9c = add i32 %v0_12b9c, -44
  %v2_12b9c = inttoptr i32 %v1_12b9c to i32*
  %v3_12b9c = load i32, i32* %v2_12b9c, align 4
  store i32 %v3_12b9c, i32* @eax, align 4
  %v1_12ba7 = add i32 %v0_12b9c, -20
  %v2_12ba7 = inttoptr i32 %v1_12ba7 to i32*
  %v3_12ba7 = load i32, i32* %v2_12ba7, align 4
  %v2_12bb1 = call i32 @function_29994(i32 %v3_12b9c, i32 %v3_12ba7)
  %v0_12bb6 = load i32, i32* @ebp, align 4
  %v1_12bb6 = add i32 %v0_12bb6, -44
  %v2_12bb6 = inttoptr i32 %v1_12bb6 to i32*
  %v3_12bb6 = load i32, i32* %v2_12bb6, align 4
  %v1_12bca = add i32 %v0_12bb6, -8
  %v1_12bcd = inttoptr i32 %v1_12bca to i32*
  %v2_12bcd = load i32, i32* %v1_12bcd, align 4
  store i32 %v2_12bcd, i32* @ebx, align 4
  %v3_12bcd = add i32 %v0_12bb6, -4
  %v1_12bce = inttoptr i32 %v3_12bcd to i32*
  %v2_12bce = load i32, i32* %v1_12bce, align 4
  store i32 %v2_12bce, i32* @esi, align 4
  %v1_12bcf = inttoptr i32 %v0_12bb6 to i32*
  %v2_12bcf = load i32, i32* %v1_12bcf, align 4
  store i32 %v2_12bcf, i32* @ebp, align 4
  ret i32 %v3_12bb6

; uselistorder directives
  uselistorder i32 %v0_12bb6, { 2, 1, 0, 3 }
  uselistorder i32 %v1_12b6a, { 2, 1, 0 }
  uselistorder i32 %v0_12b6a, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v0_12b4a, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32)* @function_293b6, { 1, 0 }
  uselistorder i32 (i32)* @function_22be0, { 1, 0 }
}

define i32 @_ZN7CScriptlsERKSt6vectorIhSaIhEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bd2:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-20 = alloca i8, align 1
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %v0_12bd5 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_12bf6 = call i32 @function_27c8c(i32 %arg2)
  %tmp41 = icmp ult i32 %v1_12bf6, 76
  %v5_12c01 = icmp eq i1 %tmp41, false
  store i32 %arg2, i32* @eax, align 4
  %v1_12c56 = call i32 @function_27c8c(i32 %arg2)
  br i1 %v5_12c01, label %dec_label_pc_12c50, label %dec_label_pc_12c05

dec_label_pc_12c05:                               ; preds = %dec_label_pc_12bd2
  %v1_12c10 = trunc i32 %v1_12c56 to i8
  store i8 %v1_12c10, i8* %stack_var_-21, align 1
  %v2_12c16 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_12c16, i32* @eax, align 4
  %v2_12c20 = call i32 @function_294b4(i32 %v2_12c16, i32 %arg1)
  %v2_12c2b = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_12c2b, i32* @eax, align 4
  %v2_12c2e = ptrtoint i8* %stack_var_-21 to i32
  %v3_12c35 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_12c35, i32* @ecx, align 4
  %v4_12c43 = call i32 @function_29918(i32 %v2_12c2b, i32 %arg1, i32 %v3_12c35, i32 %v2_12c2e)
  br label %dec_label_pc_12e17

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12bd2
  %tmp44 = icmp ult i32 %v1_12c56, 256
  %v5_12c63 = icmp eq i1 %tmp44, false
  br i1 %v5_12c63, label %dec_label_pc_12cf2, label %dec_label_pc_12c6b

dec_label_pc_12c6b:                               ; preds = %dec_label_pc_12c50
  store i8 76, i8* %stack_var_-20, align 1
  %v2_12c72 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_12c72, i32* @eax, align 4
  %v2_12c7c = call i32 @function_294b4(i32 %v2_12c72, i32 %arg1)
  %v2_12c87 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_12c87, i32* @eax, align 4
  %v2_12c8a = ptrtoint i8* %stack_var_-20 to i32
  %v3_12c91 = load i32, i32* %stack_var_-80, align 4
  %v4_12c9f = call i32 @function_29918(i32 %v2_12c87, i32 %arg1, i32 %v3_12c91, i32 %v2_12c8a)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_12cad = call i32 @function_27c8c(i32 %arg2)
  %v1_12cb2 = trunc i32 %v1_12cad to i8
  store i8 %v1_12cb2, i8* %stack_var_-19, align 1
  %v2_12cb8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12cb8, i32* @eax, align 4
  store i32 %v2_12cb8, i32* %stack_var_-132, align 4
  %v2_12cc2 = call i32 @function_294b4(i32 %v2_12cb8, i32 %arg1)
  %v2_12ccd = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_12ccd, i32* @eax, align 4
  %v2_12cd0 = ptrtoint i8* %stack_var_-19 to i32
  %v3_12cd7 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_12cd7, i32* @ecx, align 4
  store i32 %arg1, i32* %stack_var_-132, align 4
  store i32 %v2_12ccd, i32* %stack_var_-136, align 4
  %v4_12ce5 = call i32 @function_29918(i32 %v2_12ccd, i32 %arg1, i32 %v3_12cd7, i32 %v2_12cd0)
  br label %dec_label_pc_12e17

dec_label_pc_12cf2:                               ; preds = %dec_label_pc_12c50
  store i32 %arg2, i32* @eax, align 4
  %v1_12cf8 = call i32 @function_27c8c(i32 %arg2)
  %tmp49 = icmp ult i32 %v1_12cf8, 65536
  %v5_12d05 = icmp eq i1 %tmp49, false
  br i1 %v5_12d05, label %dec_label_pc_12d95, label %dec_label_pc_12d0d

dec_label_pc_12d0d:                               ; preds = %dec_label_pc_12cf2
  store i8 77, i8* %stack_var_-18, align 1
  %v2_12d14 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_12d14, i32* @eax, align 4
  %v2_12d1e = call i32 @function_294b4(i32 %v2_12d14, i32 %arg1)
  %v2_12d29 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_12d29, i32* @eax, align 4
  %v2_12d2c = ptrtoint i8* %stack_var_-18 to i32
  %v3_12d33 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_12d33, i32* @ecx, align 4
  %v4_12d41 = call i32 @function_29918(i32 %v2_12d29, i32 %arg1, i32 %v3_12d33, i32 %v2_12d2c)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_12d4f = call i32 @function_27c8c(i32 %arg2)
  %v16_12d5b = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v16_12d5b, i32* @ebx, align 4
  %v2_12d61 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12d61, i32* @eax, align 4
  store i32 %v2_12d61, i32* %stack_var_-132, align 4
  %v2_12d6b = call i32 @function_294b4(i32 %v2_12d61, i32 %arg1)
  %v3_12d81 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_12d81, i32* %stack_var_-132, align 4
  store i32 %arg1, i32* %stack_var_-136, align 4
  br label %dec_label_pc_12e17

dec_label_pc_12d95:                               ; preds = %dec_label_pc_12cf2
  store i8 78, i8* %stack_var_-17, align 1
  %v2_12d9c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_12d9c, i32* @eax, align 4
  %v2_12da6 = call i32 @function_294b4(i32 %v2_12d9c, i32 %arg1)
  %v2_12db1 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_12db1, i32* @eax, align 4
  %v2_12db4 = ptrtoint i8* %stack_var_-17 to i32
  %v3_12dbb = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_12dbb, i32* @ecx, align 4
  %v4_12dc9 = call i32 @function_29918(i32 %v2_12db1, i32 %arg1, i32 %v3_12dbb, i32 %v2_12db4)
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg2, i32* %stack_var_-132, align 4
  %v1_12dd7 = call i32 @function_27c8c(i32 %arg2)
  %v16_12de2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v16_12de2, i32* @ebx, align 4
  store i32 %v16_12de2, i32* @eax, align 4
  store i32 %v16_12de2, i32* %stack_var_-132, align 4
  %v2_12df2 = call i32 @function_294b4(i32 %v16_12de2, i32 %arg1)
  %v3_12e08 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12e08, i32* %stack_var_-132, align 4
  store i32 %arg1, i32* %stack_var_-136, align 4
  br label %dec_label_pc_12e17

dec_label_pc_12e17:                               ; preds = %dec_label_pc_12d95, %dec_label_pc_12d0d, %dec_label_pc_12c6b, %dec_label_pc_12c05
  %v1_12e1d.in = phi i32* [ %stack_var_-136, %dec_label_pc_12d95 ], [ %stack_var_-136, %dec_label_pc_12d0d ], [ %stack_var_-140, %dec_label_pc_12c6b ], [ %stack_var_-132, %dec_label_pc_12c05 ]
  %v1_12e1d = ptrtoint i32* %v1_12e1d.in to i32
  %v2_12e17 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12e17, i32* @eax, align 4
  %v2_12e1d = add i32 %v1_12e1d, 4
  %v3_12e1d = inttoptr i32 %v2_12e1d to i32*
  store i32 %arg2, i32* %v3_12e1d, align 4
  %v1_12e21 = load i32, i32* @esp, align 4
  %v2_12e21 = inttoptr i32 %v1_12e21 to i32*
  store i32 %v2_12e17, i32* %v2_12e21, align 4
  %v0_12e24 = call i32 @function_27c3c()
  %v0_12e29 = load i32, i32* @esp, align 4
  %v2_12e2c = ptrtoint i32* %stack_var_-32 to i32
  %v3_12e32 = inttoptr i32 %v0_12e29 to i32*
  store i32 %arg2, i32* %v3_12e32, align 4
  %v1_12e36 = load i32, i32* @esp, align 4
  %v2_12e36 = inttoptr i32 %v1_12e36 to i32*
  store i32 %v2_12e2c, i32* %v2_12e36, align 4
  %v0_12e39 = call i32 @function_27bb0()
  %v0_12e3e = load i32, i32* @esp, align 4
  %v2_12e44 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12e44, i32* @eax, align 4
  %v3_12e47 = inttoptr i32 %v0_12e3e to i32*
  store i32 %arg1, i32* %v3_12e47, align 4
  %v1_12e4b = load i32, i32* @esp, align 4
  %v2_12e4b = inttoptr i32 %v1_12e4b to i32*
  store i32 %v2_12e44, i32* %v2_12e4b, align 4
  %v0_12e4e = load i32, i32* %stack_var_-136, align 4
  %v1_12e4e = load i32, i32* %stack_var_-132, align 4
  %v2_12e4e = call i32 @function_294b4(i32 %v0_12e4e, i32 %v1_12e4e)
  %v0_12e53 = load i32, i32* @esp, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_12e59 = load i32, i32* %stack_var_-28, align 4
  %v2_12e5c = add i32 %v0_12e53, 8
  %v3_12e5c = inttoptr i32 %v2_12e5c to i32*
  store i32 %v3_12e59, i32* %v3_12e5c, align 4
  %v3_12e60 = load i32, i32* %stack_var_-32, align 4
  %v1_12e63 = load i32, i32* @esp, align 4
  %v2_12e63 = add i32 %v1_12e63, 8
  %v3_12e63 = inttoptr i32 %v2_12e63 to i32*
  store i32 %v3_12e60, i32* %v3_12e63, align 4
  %v3_12e67 = load i32, i32* %stack_var_-36, align 4
  %v1_12e6a = load i32, i32* @esp, align 4
  %v2_12e6a = add i32 %v1_12e6a, 4
  %v3_12e6a = inttoptr i32 %v2_12e6a to i32*
  store i32 %v3_12e67, i32* %v3_12e6a, align 4
  %v0_12e6e = load i32, i32* @eax, align 4
  %v1_12e6e = load i32, i32* @esp, align 4
  %v2_12e6e = inttoptr i32 %v1_12e6e to i32*
  store i32 %v0_12e6e, i32* %v2_12e6e, align 4
  %v0_12e71 = call i32 @function_298b8()
  store i32 %v0_12bd5, i32* @ebx, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v16_12de2, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12d61, { 1, 0, 2 }
  uselistorder i32 %v2_12ccd, { 1, 0, 2 }
  uselistorder i32 %v2_12cb8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-136, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @function_29918, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_294b4, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_27c8c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 6, 7, 10, 9, 8, 5, 4, 3, 12, 11, 2, 1, 0, 14, 13, 16, 15 }
  uselistorder i32 %arg1, { 0, 14, 15, 1, 16, 2, 17, 3, 12, 4, 13, 6, 5, 10, 7, 11, 8, 9 }
}

define i32 @_ZN7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEER10opcodetype(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e90:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %tmp114 = ptrtoint i32* %arg2 to i32
  %v0_12e93 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12ebb = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_12ebb, i32* @eax, align 4
  %v2_12ec1 = call i32 @function_29db0(i32 %v2_12ebb, i32 %tmp114)
  store i32 %arg1, i32* @eax, align 4
  %v4_12ee2 = call i32 @function_25eac(i32 %arg1, i32 %v2_12ebb, i32 %arg3, i32 0)
  %v2_12eed = ptrtoint i32* %stack_var_-28 to i32
  %v2_12ef7 = call i32 @function_2944a(i32 %v2_12eed, i32 %arg1)
  %v2_12f0c = call i32 @function_29df2(i32 %v2_12ebb, i32 %v2_12eed)
  store i32 %v2_12f0c, i32* %stack_var_-24, align 4
  %v2_12f17 = ptrtoint i32* %stack_var_-32 to i32
  %v2_12f21 = call i32 @function_2944a(i32 %v2_12f17, i32 %arg1)
  %v0_12f26 = load i32, i32* @esp, align 4
  %v10_12f26 = icmp eq i32 %v0_12f26, 4
  store i1 %v10_12f26, i1* @zf, align 1
  store i32 %tmp114, i32* %ebx.global-to-local, align 4
  %v2_12f2c = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_12f2c, i32* @eax, align 4
  %v2_12f2f = ptrtoint i32* %stack_var_-24 to i32
  %v3_12f40 = call i32 @function_29492(i32 %v2_12f2c, i32 %v2_12f17, i32 %v2_12f2f)
  %v3_12f48 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_12f48, i32* %arg2, align 4
  %v4_12f4d = urem i32 %v4_12ee2, 256
  store i32 %v0_12e93, i32* %ebx.global-to-local, align 4
  ret i32 %v4_12f4d

; uselistorder directives
  uselistorder i32 %tmp114, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2944a, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypeRS6_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12f68:
  store i32 %arg1, i32* @eax, align 4
  %v8_12fac = call i32 @function_25f84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_12fac, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_12fbd

bb:                                               ; preds = %dec_label_pc_12f68
  %v1_12fbb = call i32 @function_12fc2()
  br label %dec_label_pc_12fbd

dec_label_pc_12fbd:                               ; preds = %bb, %dec_label_pc_12f68
  %v2_12fbb = phi i32 [ %v1_12fbb, %bb ], [ %v8_12fac, %dec_label_pc_12f68 ]
  ret i32 %v2_12fbb

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_12fc2() local_unnamed_addr {
dec_label_pc_12fc2:
  %v0_12fc3 = load i32, i32* @eax, align 4
  ret i32 %v0_12fc3
}

define i32 @_ZNK7CScript5GetOpERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetype() local_unnamed_addr {
dec_label_pc_12fc4:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v7_13003 = inttoptr i32 %tmp10 to i32*
  %v8_13003 = call i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEC1EPSt13_Rb_tree_nodeIS4_E(i32* %v7_13003, i32 %tmp8, i32 %tmp6, i32 0, i32 %tmp6, i32 %tmp8, i32 %tmp10)
  store i32 %v8_13003, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13014

bb:                                               ; preds = %dec_label_pc_12fc4
  %v1_13012 = call i32 @function_13019()
  br label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %bb, %dec_label_pc_12fc4
  %v2_13012 = phi i32 [ %v1_13012, %bb ], [ %v8_13003, %dec_label_pc_12fc4 ]
  ret i32 %v2_13012

; uselistorder directives
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_13019() local_unnamed_addr {
dec_label_pc_13019:
  %v0_1301a = load i32, i32* @eax, align 4
  ret i32 %v0_1301a
}

define i32 @_ZNK7CScript6GetOp2ERN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEER10opcodetypePS6_(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1301c:
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 255, i32* %arg3, align 4
  %v10_1304e = icmp eq i32 %arg4, 0
  br i1 %v10_1304e, label %dec_label_pc_1305f, label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %dec_label_pc_1301c
  store i32 %arg4, i32* @eax, align 4
  %v1_1305a = call i32 @function_29fd6(i32 %arg4)
  br label %dec_label_pc_1305f

dec_label_pc_1305f:                               ; preds = %dec_label_pc_13054, %dec_label_pc_1301c
  %v2_13062 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_13062, i32* @eax, align 4
  %v2_1306c = call i32 @function_28086(i32 %v2_13062, i32 %arg1)
  %v2_13081 = call i32 @function_2a014(i32 %arg2, i32 %v2_13062)
  %v4_13086 = trunc i32 %v2_13081 to i8
  %v5_13086 = icmp eq i8 %v4_13086, 0
  br i1 %v5_13086, label %dec_label_pc_13094, label %dec_label_pc_1308a

dec_label_pc_1308a:                               ; preds = %dec_label_pc_1305f
  store i32 0, i32* @eax, align 4
  %v0_1308f = call i32 @function_13380()
  ret i32 %v0_1308f

dec_label_pc_13094:                               ; preds = %dec_label_pc_1305f
  %v2_13097 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_13097, i32* @eax, align 4
  %v2_130a1 = call i32 @function_28086(i32 %v2_13097, i32 %arg1)
  store i32 %v2_13097, i32* @eax, align 4
  %v2_130b6 = call i32 @function_2a068(i32 %v2_13097, i32 %arg2)
  %tmp131 = icmp slt i32 %v2_130b6, 1
  %v5_130c0 = icmp eq i1 %tmp131, false
  br i1 %v5_130c0, label %dec_label_pc_130ce, label %dec_label_pc_130c4

dec_label_pc_130c4:                               ; preds = %dec_label_pc_13094
  store i32 0, i32* @eax, align 4
  %v0_130c9 = call i32 @function_13380()
  ret i32 %v0_130c9

dec_label_pc_130ce:                               ; preds = %dec_label_pc_13094
  %v2_130ce = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_130ce, i32* @eax, align 4
  %v3_130e3 = call i32 @function_2a0c0(i32 %v2_130ce, i32 %arg2, i32 0)
  %v0_130e8 = load i32, i32* @esp, align 4
  %v5_130e8 = icmp ult i32 %v0_130e8, 4
  store i1 %v5_130e8, i1* @cf, align 1
  store i32 %v2_130ce, i32* @eax, align 4
  %v1_130f1 = call i32 @function_2a11e(i32 %v2_130ce)
  %v1_130f6 = inttoptr i32 %v1_130f1 to i8*
  %v2_130f6 = load i8, i8* %v1_130f6, align 1
  %v3_130f6 = zext i8 %v2_130f6 to i32
  %tmp139 = icmp ult i8 %v2_130f6, 79
  br i1 %tmp139, label %dec_label_pc_13109, label %bb

bb:                                               ; preds = %dec_label_pc_130ce
  %v5_13103 = call i32 @function_13373(i32 %v3_130f6)
  br label %dec_label_pc_13109

dec_label_pc_13109:                               ; preds = %dec_label_pc_130ce, %bb
  store i32 0, i32* %stack_var_-76, align 4
  %tmp140 = icmp ult i8 %v2_130f6, 76
  br i1 %tmp140, label %dec_label_pc_13116, label %dec_label_pc_13121

dec_label_pc_13116:                               ; preds = %dec_label_pc_13109
  store i32 %v3_130f6, i32* %stack_var_-76, align 4
  %v1_1311c = call i32 @function_132a6(i32 %v3_130f6)
  ret i32 %v1_1311c

dec_label_pc_13121:                               ; preds = %dec_label_pc_13109
  %v13_13121 = icmp eq i8 %v2_130f6, 76
  %v1_13125 = icmp eq i1 %v13_13121, false
  br i1 %v1_13125, label %dec_label_pc_13197, label %dec_label_pc_13127

dec_label_pc_13127:                               ; preds = %dec_label_pc_13121
  %v2_1312a = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1312a, i32* @eax, align 4
  %v2_13134 = call i32 @function_28086(i32 %v2_1312a, i32 %arg1)
  store i32 %v2_1312a, i32* @eax, align 4
  %v2_13149 = call i32 @function_2a068(i32 %v2_1312a, i32 %arg2)
  %tmp134 = icmp slt i32 %v2_13149, 1
  %v5_13153 = icmp eq i1 %tmp134, false
  br i1 %v5_13153, label %dec_label_pc_13161, label %dec_label_pc_13157

dec_label_pc_13157:                               ; preds = %dec_label_pc_13127
  store i32 0, i32* @eax, align 4
  %v0_1315c = call i32 @function_13380()
  ret i32 %v0_1315c

dec_label_pc_13161:                               ; preds = %dec_label_pc_13127
  %v2_13161 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_13161, i32* @eax, align 4
  %v3_13176 = call i32 @function_2a0c0(i32 %v2_13161, i32 %arg2, i32 0)
  %v0_1317b = load i32, i32* @esp, align 4
  %v5_1317b = icmp ult i32 %v0_1317b, 4
  store i1 %v5_1317b, i1* @cf, align 1
  store i32 %v2_13161, i32* @eax, align 4
  %v1_13184 = call i32 @function_2a11e(i32 %v2_13161)
  %v1_13189 = inttoptr i32 %v1_13184 to i8*
  %v2_13189 = load i8, i8* %v1_13189, align 1
  %v3_13189 = zext i8 %v2_13189 to i32
  store i32 %v3_13189, i32* %stack_var_-76, align 4
  %v1_13192 = call i32 @function_132a6(i32 %v3_13189)
  ret i32 %v1_13192

dec_label_pc_13197:                               ; preds = %dec_label_pc_13121
  %v13_13197 = icmp eq i8 %v2_130f6, 77
  %v1_1319b = icmp eq i1 %v13_13197, false
  br i1 %v1_1319b, label %bb136, label %dec_label_pc_131a1

bb136:                                            ; preds = %dec_label_pc_13197
  %v3_1319b = call i32 @function_1322e(i32 0)
  br label %dec_label_pc_131a1

dec_label_pc_131a1:                               ; preds = %bb136, %dec_label_pc_13197
  %v2_131a4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_131a4, i32* @eax, align 4
  %v2_131ae = call i32 @function_28086(i32 %v2_131a4, i32 %arg1)
  store i32 %v2_131a4, i32* @eax, align 4
  %v2_131c3 = call i32 @function_2a068(i32 %v2_131a4, i32 %arg2)
  %v1_131c8 = add i32 %v2_131c3, -1
  %tmp138 = sub i32 0, %v2_131c3
  %v8_131c8 = and i32 %v2_131c3, %tmp138
  %v9_131c8 = icmp slt i32 %v8_131c8, 0
  %v10_131c8 = icmp eq i32 %v1_131c8, 0
  %v11_131c8 = icmp slt i32 %v1_131c8, 0
  %v3_131cb = icmp ne i1 %v11_131c8, %v9_131c8
  %v4_131cb = or i1 %v10_131c8, %v3_131cb
  %v5_131ce = icmp eq i1 %v4_131cb, false
  br i1 %v5_131ce, label %dec_label_pc_131dc, label %dec_label_pc_131d2

dec_label_pc_131d2:                               ; preds = %dec_label_pc_131a1
  store i32 0, i32* @eax, align 4
  %v0_131d7 = call i32 @function_13380()
  ret i32 %v0_131d7

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131a1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 0, i32* %stack_var_-60, align 4
  %v2_131ea = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg2, i32* @eax, align 4
  %v2_131f7 = call i32 @function_2804a(i32 %arg2, i32 %v2_131ea)
  %v2_13208 = ptrtoint i32* %stack_var_-76 to i32
  ret i32 %v2_13208

; uselistorder directives
  uselistorder i32 %v1_131c8, { 1, 0 }
  uselistorder i32 %v2_131c3, { 1, 0, 2 }
  uselistorder i32 %v3_130f6, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_2a11e, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_2a0c0, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1, 5, 6, 7 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13109, { 1, 0 }
}

define i32 @function_13212() local_unnamed_addr {
dec_label_pc_13212:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_13212 = add i32 %tmp93, 1
  store i32 %v1_13212, i32* @edi, align 4
  %v0_13214 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13214 = add i32 %v0_13214, 1
  store i32 %v1_13214, i32* @ebp, align 4
  %v0_13216 = load i32, i32* %eax.global-to-local, align 4
  %v1_13216 = trunc i32 %v0_13216 to i8
  %v5_13216 = mul i8 %v1_13216, 2
  %v20_13216 = zext i8 %v5_13216 to i32
  %v22_13216 = and i32 %v0_13216, -256
  %v23_13216 = or i32 %v20_13216, %v22_13216
  store i32 %v23_13216, i32* %eax.global-to-local, align 4
  %v1_13218 = inttoptr i32 %v23_13216 to i8*
  %v2_13218 = load i8, i8* %v1_13218, align 2
  %v5_13218 = add i8 %v2_13218, %v5_13216
  store i8 %v5_13218, i8* %v1_13218, align 2
  %v0_1321a = load i32, i32* @ebp, align 4
  %v1_1321a = add i32 %v0_1321a, -52
  store i32 %v1_1321a, i32* %eax.global-to-local, align 4
  %v1_13221 = add i32 %v0_1321a, -96
  %v2_13221 = inttoptr i32 %v1_13221 to i32*
  %v3_13221 = load i32, i32* %v2_13221, align 4
  store i32 %v3_13221, i32* @eax, align 4
  %v2_13227 = call i32 @function_2a14e(i32 %v3_13221, i32 %v1_1321a)
  store i32 %v2_13227, i32* %eax.global-to-local, align 4
  %v1_1322c = call i32 @function_132a6(i32 %v3_13221)
  store i32 %v1_1322c, i32* %eax.global-to-local, align 4
  ret i32 %v1_1322c

; uselistorder directives
  uselistorder i8 %v5_13216, { 1, 0 }
}

define i32 @function_1322e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1322e:
  %v0_1322e = load i32, i32* @ebp, align 4
  %v1_1322e = add i32 %v0_1322e, -16
  %v2_1322e = inttoptr i32 %v1_1322e to i32*
  %v3_1322e = load i32, i32* %v2_1322e, align 4
  %v13_1322e = icmp eq i32 %v3_1322e, 78
  %v1_13232 = icmp eq i1 %v13_1322e, false
  br i1 %v1_13232, label %bb, label %dec_label_pc_13234

bb:                                               ; preds = %dec_label_pc_1322e
  %v3_13232 = call i32 @function_132a6(i32 ptrtoint (i32* @9 to i32))
  %v0_13234.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13234

dec_label_pc_13234:                               ; preds = %bb, %dec_label_pc_1322e
  %v0_13234 = phi i32 [ %v0_13234.pre, %bb ], [ %v0_1322e, %dec_label_pc_1322e ]
  %v1_13234 = add i32 %v0_13234, -92
  %v2_13234 = inttoptr i32 %v1_13234 to i32*
  %v3_13234 = load i32, i32* %v2_13234, align 4
  %v1_13237 = add i32 %v0_13234, -48
  store i32 %v1_13237, i32* @eax, align 4
  %v2_13241 = call i32 @function_28086(i32 %v1_13237, i32 %v3_13234)
  %v0_13249 = load i32, i32* @ebp, align 4
  %v1_13249 = add i32 %v0_13249, -96
  %v2_13249 = inttoptr i32 %v1_13249 to i32*
  %v3_13249 = load i32, i32* %v2_13249, align 4
  %v1_13250 = add i32 %v0_13249, -48
  store i32 %v1_13250, i32* @eax, align 4
  %v2_13256 = call i32 @function_2a068(i32 %v1_13250, i32 %v3_13249)
  %v1_1325b = add i32 %v2_13256, -3
  %tmp7 = sub i32 2, %v2_13256
  %v8_1325b = and i32 %tmp7, %v2_13256
  %v9_1325b = icmp slt i32 %v8_1325b, 0
  %v10_1325b = icmp eq i32 %v1_1325b, 0
  %v11_1325b = icmp slt i32 %v1_1325b, 0
  %v3_1325e = icmp ne i1 %v11_1325b, %v9_1325b
  %v4_1325e = or i1 %v10_1325b, %v3_1325e
  %v5_13261 = icmp eq i1 %v4_1325e, false
  br i1 %v5_13261, label %dec_label_pc_1326f, label %dec_label_pc_13265

dec_label_pc_13265:                               ; preds = %dec_label_pc_13234
  store i32 0, i32* @eax, align 4
  %v0_1326a = call i32 @function_13380()
  ret i32 %v0_1326a

dec_label_pc_1326f:                               ; preds = %dec_label_pc_13234
  %v0_1326f = load i32, i32* @ebp, align 4
  %v1_1326f = add i32 %v0_1326f, -44
  %v2_1326f = inttoptr i32 %v1_1326f to i32*
  store i32 0, i32* %v2_1326f, align 4
  %v0_13276 = load i32, i32* @ebp, align 4
  %v1_13276 = add i32 %v0_13276, -44
  %v1_1327d = add i32 %v0_13276, -96
  %v2_1327d = inttoptr i32 %v1_1327d to i32*
  %v3_1327d = load i32, i32* %v2_1327d, align 4
  store i32 %v3_1327d, i32* @eax, align 4
  %v2_13283 = call i32 @function_2804a(i32 %v3_1327d, i32 %v1_13276)
  %v1_13288 = inttoptr i32 %v2_13283 to i32*
  %v2_13288 = load i32, i32* %v1_13288, align 4
  %v1_1328a = load i32, i32* @ebp, align 4
  %v2_1328a = add i32 %v1_1328a, -72
  %v3_1328a = inttoptr i32 %v2_1328a to i32*
  store i32 %v2_13288, i32* %v3_1328a, align 4
  %v0_1328d = load i32, i32* @ebp, align 4
  %v1_1328d = add i32 %v0_1328d, -40
  %v2_1328d = inttoptr i32 %v1_1328d to i32*
  store i32 4, i32* %v2_1328d, align 4
  %v0_13294 = load i32, i32* @ebp, align 4
  %v1_13294 = add i32 %v0_13294, -40
  %v1_1329b = add i32 %v0_13294, -96
  %v2_1329b = inttoptr i32 %v1_1329b to i32*
  %v3_1329b = load i32, i32* %v2_1329b, align 4
  store i32 %v3_1329b, i32* @eax, align 4
  %v2_132a1 = call i32 @function_2a14e(i32 %v3_1329b, i32 %v1_13294)
  ret i32 %v2_132a1

; uselistorder directives
  uselistorder i32 %v1_1325b, { 1, 0 }
  uselistorder i32 %v0_13234, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_2804a, { 1, 0 }
  uselistorder i32 (i32)* @function_132a6, { 2, 3, 1, 0 }
}

define i32 @function_132a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_132a6:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_132a6 = load i32, i32* @ebp, align 4
  %v1_132a6 = add i32 %v0_132a6, -92
  %v2_132a6 = inttoptr i32 %v1_132a6 to i32*
  %v3_132a6 = load i32, i32* %v2_132a6, align 4
  %v1_132a9 = add i32 %v0_132a6, -36
  store i32 %v1_132a9, i32* @eax, align 4
  %v2_132b3 = call i32 @function_28086(i32 %v1_132a9, i32 %v3_132a6)
  store i32 %v2_132b3, i32* %eax.global-to-local, align 4
  %v0_132bb = load i32, i32* @ebp, align 4
  %v1_132bb = add i32 %v0_132bb, -96
  %v2_132bb = inttoptr i32 %v1_132bb to i32*
  %v3_132bb = load i32, i32* %v2_132bb, align 4
  %v1_132c2 = add i32 %v0_132bb, -36
  store i32 %v1_132c2, i32* @eax, align 4
  store i32 %v1_132c2, i32* %stack_var_-4, align 4
  %v2_132c8 = call i32 @function_2a068(i32 %v1_132c2, i32 %v3_132bb)
  store i32 %v2_132c8, i32* %eax.global-to-local, align 4
  %v2_132cd = icmp slt i32 %v2_132c8, 0
  br i1 %v2_132cd, label %dec_label_pc_1330d, label %dec_label_pc_132d1

dec_label_pc_132d1:                               ; preds = %dec_label_pc_132a6
  %v0_132d1 = load i32, i32* @ebp, align 4
  %v1_132d1 = add i32 %v0_132d1, -92
  %v2_132d1 = inttoptr i32 %v1_132d1 to i32*
  %v3_132d1 = load i32, i32* %v2_132d1, align 4
  %v1_132d4 = add i32 %v0_132d1, -32
  store i32 %v1_132d4, i32* @eax, align 4
  store i32 %v1_132d4, i32* %stack_var_-4, align 4
  %v2_132de = call i32 @function_28086(i32 %v1_132d4, i32 %v3_132d1)
  store i32 %v2_132de, i32* %eax.global-to-local, align 4
  %v0_132e6 = load i32, i32* @ebp, align 4
  %v1_132e6 = add i32 %v0_132e6, -96
  %v2_132e6 = inttoptr i32 %v1_132e6 to i32*
  %v3_132e6 = load i32, i32* %v2_132e6, align 4
  store i32 %v3_132e6, i32* %stack_var_-4, align 4
  %v1_132ed = add i32 %v0_132e6, -32
  store i32 %v1_132ed, i32* @eax, align 4
  store i32 %v1_132ed, i32* %stack_var_-8, align 4
  %v2_132f3 = call i32 @function_2a068(i32 %v1_132ed, i32 %v3_132e6)
  store i32 %v2_132f3, i32* %eax.global-to-local, align 4
  %v0_132fa = load i32, i32* @ebp, align 4
  %v1_132fa = add i32 %v0_132fa, -72
  %v2_132fa = inttoptr i32 %v1_132fa to i32*
  %v3_132fa = load i32, i32* %v2_132fa, align 4
  store i32 %v3_132fa, i32* %eax.global-to-local, align 4
  %v7_132fd = icmp ult i32 %v2_132f3, %v3_132fa
  %. = zext i1 %v7_132fd to i32
  br label %dec_label_pc_1330d

dec_label_pc_1330d:                               ; preds = %dec_label_pc_132d1, %dec_label_pc_132a6
  %storemerge = phi i32 [ 1, %dec_label_pc_132a6 ], [ %., %dec_label_pc_132d1 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v5_1330d = icmp eq i32 %storemerge, 0
  br i1 %v5_1330d, label %dec_label_pc_13318, label %dec_label_pc_13311

dec_label_pc_13311:                               ; preds = %dec_label_pc_1330d
  store i32 0, i32* @eax, align 4
  %v0_13316 = call i32 @function_13380()
  store i32 %v0_13316, i32* %eax.global-to-local, align 4
  ret i32 %v0_13316

dec_label_pc_13318:                               ; preds = %dec_label_pc_1330d
  %v0_13318 = load i32, i32* @ebp, align 4
  %v1_13318 = add i32 %v0_13318, -104
  %v2_13318 = inttoptr i32 %v1_13318 to i32*
  %v3_13318 = load i32, i32* %v2_13318, align 4
  %v10_13318 = icmp eq i32 %v3_13318, 0
  br i1 %v10_13318, label %dec_label_pc_1335b, label %dec_label_pc_1331e

dec_label_pc_1331e:                               ; preds = %dec_label_pc_13318
  %v1_1331e = add i32 %v0_13318, -72
  %v2_1331e = inttoptr i32 %v1_1331e to i32*
  %v3_1331e = load i32, i32* %v2_1331e, align 4
  %v2_13321 = add i32 %v0_13318, -28
  %v3_13321 = inttoptr i32 %v2_13321 to i32*
  store i32 %v3_1331e, i32* %v3_13321, align 4
  %v0_13324 = load i32, i32* @ebp, align 4
  %v1_13324 = add i32 %v0_13324, -24
  store i32 %v1_13324, i32* %eax.global-to-local, align 4
  %v1_13327 = add i32 %v0_13324, -28
  %v1_1332a = load i32, i32* @esp, align 4
  %v2_1332a = add i32 %v1_1332a, 8
  %v3_1332a = inttoptr i32 %v2_1332a to i32*
  store i32 %v1_13327, i32* %v3_1332a, align 4
  %v0_1332e = load i32, i32* @ebp, align 4
  %v1_1332e = add i32 %v0_1332e, -96
  %v2_1332e = inttoptr i32 %v1_1332e to i32*
  %v3_1332e = load i32, i32* %v2_1332e, align 4
  %v1_13331 = load i32, i32* @esp, align 4
  %v2_13331 = add i32 %v1_13331, 4
  %v3_13331 = inttoptr i32 %v2_13331 to i32*
  store i32 %v3_1332e, i32* %v3_13331, align 4
  %v0_13335 = load i32, i32* %eax.global-to-local, align 4
  %v1_13335 = load i32, i32* @esp, align 4
  %v2_13335 = inttoptr i32 %v1_13335 to i32*
  store i32 %v0_13335, i32* %v2_13335, align 4
  %v0_13338 = call i32 @function_2a192()
  store i32 %v0_13338, i32* %eax.global-to-local, align 4
  %v0_1333d = load i32, i32* @esp, align 4
  %v0_13340 = load i32, i32* @ebp, align 4
  %v1_13340 = add i32 %v0_13340, -24
  %v2_13340 = inttoptr i32 %v1_13340 to i32*
  %v3_13340 = load i32, i32* %v2_13340, align 4
  store i32 %v3_13340, i32* %eax.global-to-local, align 4
  %v2_13343 = add i32 %v0_1333d, 4
  %v3_13343 = inttoptr i32 %v2_13343 to i32*
  store i32 %v3_13340, i32* %v3_13343, align 4
  %v0_13347 = load i32, i32* @ebp, align 4
  %v1_13347 = add i32 %v0_13347, -96
  %v2_13347 = inttoptr i32 %v1_13347 to i32*
  %v3_13347 = load i32, i32* %v2_13347, align 4
  store i32 %v3_13347, i32* %eax.global-to-local, align 4
  %v1_1334a = inttoptr i32 %v3_13347 to i32*
  %v2_1334a = load i32, i32* %v1_1334a, align 4
  store i32 %v2_1334a, i32* %eax.global-to-local, align 4
  %v1_1334c = load i32, i32* @esp, align 4
  %v2_1334c = add i32 %v1_1334c, 4
  %v3_1334c = inttoptr i32 %v2_1334c to i32*
  store i32 %v2_1334a, i32* %v3_1334c, align 4
  %v0_13350 = load i32, i32* @ebp, align 4
  %v1_13350 = add i32 %v0_13350, -104
  %v2_13350 = inttoptr i32 %v1_13350 to i32*
  %v3_13350 = load i32, i32* %v2_13350, align 4
  store i32 %v3_13350, i32* @eax, align 4
  %v1_13353 = load i32, i32* @esp, align 4
  %v2_13353 = inttoptr i32 %v1_13353 to i32*
  store i32 %v3_13350, i32* %v2_13353, align 4
  %v0_13356 = call i32 @function_2a1ee()
  store i32 %v0_13356, i32* %eax.global-to-local, align 4
  %v0_1335b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1335b

dec_label_pc_1335b:                               ; preds = %dec_label_pc_1331e, %dec_label_pc_13318
  %v0_1335b = phi i32 [ %v0_1335b.pre, %dec_label_pc_1331e ], [ %v0_13318, %dec_label_pc_13318 ]
  %v1_1335b = add i32 %v0_1335b, -72
  %v2_1335b = inttoptr i32 %v1_1335b to i32*
  %v3_1335b = load i32, i32* %v2_1335b, align 4
  %v2_1335e = add i32 %v0_1335b, -20
  %v3_1335e = inttoptr i32 %v2_1335e to i32*
  store i32 %v3_1335b, i32* %v3_1335e, align 4
  %v0_13361 = load i32, i32* @ebp, align 4
  %v1_13361 = add i32 %v0_13361, -20
  store i32 %v1_13361, i32* %eax.global-to-local, align 4
  %v1_13364 = load i32, i32* @esp, align 4
  %v2_13364 = add i32 %v1_13364, 4
  %v3_13364 = inttoptr i32 %v2_13364 to i32*
  store i32 %v1_13361, i32* %v3_13364, align 4
  %v0_13368 = load i32, i32* @ebp, align 4
  %v1_13368 = add i32 %v0_13368, -96
  %v2_13368 = inttoptr i32 %v1_13368 to i32*
  %v3_13368 = load i32, i32* %v2_13368, align 4
  store i32 %v3_13368, i32* @eax, align 4
  %v1_1336b = load i32, i32* @esp, align 4
  %v2_1336b = inttoptr i32 %v1_1336b to i32*
  store i32 %v3_13368, i32* %v2_1336b, align 4
  %v0_1336e = load i32, i32* %stack_var_-8, align 4
  %v1_1336e = load i32, i32* %stack_var_-4, align 4
  %v2_1336e = call i32 @function_2a14e(i32 %v0_1336e, i32 %v1_1336e)
  store i32 %v2_1336e, i32* %eax.global-to-local, align 4
  ret i32 %v2_1336e

; uselistorder directives
  uselistorder i32 %v0_1335b, { 1, 0 }
  uselistorder i32 %v0_13318, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 6, 11, 12, 13, 14, 15 }
  uselistorder i32 (i32, i32)* @function_2a14e, { 1, 0, 2 }
  uselistorder i32 ()* @function_13380, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_2a068, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_28086, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_13373(i32 %arg1) local_unnamed_addr {
dec_label_pc_13373:
  %v0_13373 = load i32, i32* @ebp, align 4
  %v1_13373 = add i32 %v0_13373, -100
  %v2_13373 = inttoptr i32 %v1_13373 to i32*
  %v3_13373 = load i32, i32* %v2_13373, align 4
  %v1_13376 = add i32 %v0_13373, -16
  %v2_13376 = inttoptr i32 %v1_13376 to i32*
  %v3_13376 = load i32, i32* %v2_13376, align 4
  %v2_13379 = inttoptr i32 %v3_13373 to i32*
  store i32 %v3_13376, i32* %v2_13379, align 4
  ret i32 1
}

define i32 @function_13380() local_unnamed_addr {
dec_label_pc_13380:
  %v0_13380 = load i32, i32* @ebp, align 4
  %v1_13380 = add i32 %v0_13380, -12
  %v2_13380 = inttoptr i32 %v1_13380 to i32*
  %v3_13380 = load i32, i32* %v2_13380, align 4
  %v1_13383 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_13383 = icmp eq i32 %v1_13383, %v3_13380
  br i1 %v3_13383, label %bb, label %dec_label_pc_13380.dec_label_pc_1338c_crit_edge

dec_label_pc_13380.dec_label_pc_1338c_crit_edge:  ; preds = %dec_label_pc_13380
  %v2_1338a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1338c

bb:                                               ; preds = %dec_label_pc_13380
  %v1_1338a = call i32 @function_13391()
  br label %dec_label_pc_1338c

dec_label_pc_1338c:                               ; preds = %dec_label_pc_13380.dec_label_pc_1338c_crit_edge, %bb
  %v2_1338a = phi i32 [ %v2_1338a.pre, %dec_label_pc_13380.dec_label_pc_1338c_crit_edge ], [ %v1_1338a, %bb ]
  ret i32 %v2_1338a

; uselistorder directives
  uselistorder label %dec_label_pc_1338c, { 1, 0 }
}

define i32 @function_13391() local_unnamed_addr {
dec_label_pc_13391:
  %v0_13392 = load i32, i32* @eax, align 4
  ret i32 %v0_13392
}

define i32 @_ZN7CScript10DecodeOP_NE10opcodetype() local_unnamed_addr {
dec_label_pc_13393:
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v10_133aa = icmp eq i32 %tmp11, 0
  %v1_133ae = icmp eq i1 %v10_133aa, false
  br i1 %v1_133ae, label %dec_label_pc_133b7, label %dec_label_pc_133f1

dec_label_pc_133b7:                               ; preds = %dec_label_pc_13393
  %v1_133ba = add i32 %tmp11, -80
  %v7_133bd = icmp sgt i32 %tmp11, 80
  br i1 %v7_133bd, label %dec_label_pc_133bf, label %dec_label_pc_133c7

dec_label_pc_133bf:                               ; preds = %dec_label_pc_133b7
  %v7_133c5 = icmp sgt i32 %tmp11, 96
  br i1 %v7_133c5, label %dec_label_pc_133c7, label %dec_label_pc_133eb

dec_label_pc_133c7:                               ; preds = %dec_label_pc_133bf, %dec_label_pc_133b7
  br label %dec_label_pc_133eb

dec_label_pc_133eb:                               ; preds = %dec_label_pc_133bf, %dec_label_pc_133c7
  br label %dec_label_pc_133f1

dec_label_pc_133f1:                               ; preds = %dec_label_pc_13393, %dec_label_pc_133eb
  %storemerge = phi i32 [ %v1_133ba, %dec_label_pc_133eb ], [ 0, %dec_label_pc_13393 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_133f1, { 1, 0 }
  uselistorder label %dec_label_pc_133eb, { 1, 0 }
}

define i32 @_ZN7CScript10EncodeOP_NEi(i32 %arg1) local_unnamed_addr {
dec_label_pc_13404:
  %v11_1341b = icmp slt i32 %arg1, 0
  br i1 %v11_1341b, label %dec_label_pc_13427, label %dec_label_pc_13421

dec_label_pc_13421:                               ; preds = %dec_label_pc_13404
  %v7_13425 = icmp sgt i32 %arg1, 16
  br i1 %v7_13425, label %dec_label_pc_13427, label %bb

bb:                                               ; preds = %dec_label_pc_13421
  %v9_13425 = call i32 @function_1344b(i32 %arg1)
  br label %dec_label_pc_13427

dec_label_pc_13427:                               ; preds = %dec_label_pc_13421, %bb, %dec_label_pc_13404
  %v3_1343f = phi i32 [ 0, %dec_label_pc_13421 ], [ %v9_13425, %bb ], [ 0, %dec_label_pc_13404 ]
  ret i32 %v3_1343f

; uselistorder directives
  uselistorder label %dec_label_pc_13427, { 1, 0, 2 }
}

define i32 @function_1344b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1344b:
  %v0_1344b = load i32, i32* @ebp, align 4
  %v1_1344b = add i32 %v0_1344b, -28
  %v2_1344b = inttoptr i32 %v1_1344b to i32*
  %v3_1344b = load i32, i32* %v2_1344b, align 4
  %v10_1344b = icmp eq i32 %v3_1344b, 0
  %v1_1344f = icmp eq i1 %v10_1344b, false
  br i1 %v1_1344f, label %dec_label_pc_13458, label %dec_label_pc_1345e

dec_label_pc_13458:                               ; preds = %dec_label_pc_1344b
  %v1_1345b = add i32 %v3_1344b, 80
  br label %dec_label_pc_1345e

dec_label_pc_1345e:                               ; preds = %dec_label_pc_1344b, %dec_label_pc_13458
  %storemerge = phi i32 [ %v1_1345b, %dec_label_pc_13458 ], [ 0, %dec_label_pc_1344b ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_1345e = add i32 %v0_1344b, -12
  %v2_1345e = inttoptr i32 %v1_1345e to i32*
  %v3_1345e = load i32, i32* %v2_1345e, align 4
  %v1_13461 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_13461 = icmp eq i32 %v1_13461, %v3_1345e
  br i1 %v3_13461, label %bb, label %dec_label_pc_1346a

bb:                                               ; preds = %dec_label_pc_1345e
  %v1_13468 = call i32 @function_1346f()
  br label %dec_label_pc_1346a

dec_label_pc_1346a:                               ; preds = %bb, %dec_label_pc_1345e
  %v2_13468 = phi i32 [ %v1_13468, %bb ], [ %storemerge, %dec_label_pc_1345e ]
  ret i32 %v2_13468

; uselistorder directives
  uselistorder i32 80, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1345e, { 1, 0 }
}

define i32 @function_1346f() local_unnamed_addr {
dec_label_pc_1346f:
  %v0_13470 = load i32, i32* @eax, align 4
  ret i32 %v0_13470
}

define i32 @_ZN7CScript13FindAndDeleteERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13472:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v1_1349e = call i32 @function_2a698(i32 %arg2)
  %v4_134a3 = trunc i32 %v1_1349e to i8
  store i1 false, i1* @cf, align 1
  %v5_134a3 = icmp eq i8 %v4_134a3, 0
  br i1 %v5_134a3, label %dec_label_pc_134af, label %dec_label_pc_134a7

dec_label_pc_134a7:                               ; preds = %dec_label_pc_13472
  store i32 0, i32* @eax, align 4
  %v0_134aa = call i32 @function_135d9()
  ret i32 %v0_134aa

dec_label_pc_134af:                               ; preds = %dec_label_pc_13472
  %v2_134b2 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_134b2, i32* @eax, align 4
  %v2_134bc = call i32 @function_29a2c(i32 %v2_134b2, i32 %arg1)
  %v2_1351d = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1351d, i32* @eax, align 4
  %v2_13527 = call i32 @function_29d54(i32 %v2_1351d, i32 %arg1)
  %v2_1353c = call i32 @function_2a6fe(i32 %v2_1351d, i32 %v2_134b2)
  store i32 %v2_1353c, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_13549 = call i32 @function_2852c(i32 %arg2)
  %v0_1354e = load i32, i32* @ebx, align 4
  %v5_13550 = icmp slt i32 %v0_1354e, %v1_13549
  br i1 %v5_13550, label %bb, label %dec_label_pc_13552

bb:                                               ; preds = %dec_label_pc_134af
  %v6_13550 = call i32 @function_135a8()
  br label %dec_label_pc_13552

dec_label_pc_13552:                               ; preds = %bb, %dec_label_pc_134af
  store i32 %arg2, i32* @eax, align 4
  %v1_13558 = call i32 @function_2852c(i32 %arg2)
  store i32 %v1_13558, i32* @esi, align 4
  store i32 %arg2, i32* @eax, align 4
  %v2_1356d = call i32 @function_2856a(i32 %arg2, i32 0)
  store i32 %v2_1356d, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_1357b = ptrtoint i32* %stack_var_-36 to i32
  %v2_13588 = call i32 @function_2a756(i32 %v2_134b2, i32 %v2_1357b)
  ret i32 %v2_13588

; uselistorder directives
  uselistorder i32 (i32)* @function_2852c, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 5, 4, 6 }
}

define i32 @function_1359c() local_unnamed_addr {
dec_label_pc_1359c:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1359c = add i32 %tmp91, -1207470656
  %v2_1359c = inttoptr i32 %v1_1359c to i32*
  %v3_1359c = load i32, i32* %v2_1359c, align 4
  %v4_1359c = add i32 %v3_1359c, 1
  store i32 %v4_1359c, i32* %v2_1359c, align 4
  %v2_135a2 = load i32, i32* %eax.global-to-local, align 4
  %v4_135a2 = mul i32 %v2_135a2, 2
  %v21_135a2 = inttoptr i32 %v2_135a2 to i32*
  store i32 %v4_135a2, i32* %v21_135a2, align 4
  %v2_135a4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_135a4 = load i32, i32* %eax.global-to-local, align 4
  %v4_135a4 = trunc i32 %v3_135a4 to i8
  %v5_135a4 = add i8 %v4_135a4, %v2_135a4
  %v21_135a4 = inttoptr i32 %v3_135a4 to i8*
  store i8 %v5_135a4, i8* %v21_135a4, align 1
  %v0_135a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_135a6

; uselistorder directives
  uselistorder i32 %v2_135a2, { 1, 0 }
}

define i32 @function_135a8() local_unnamed_addr {
dec_label_pc_135a8:
  %v0_135b5 = load i32, i32* @ebp, align 4
  %v1_135b5 = add i32 %v0_135b5, -40
  %v1_135bc = add i32 %v0_135b5, -44
  %v1_135c3 = add i32 %v0_135b5, -60
  %v2_135c3 = inttoptr i32 %v1_135c3 to i32*
  %v3_135c3 = load i32, i32* %v2_135c3, align 4
  store i32 %v3_135c3, i32* @eax, align 4
  %v3_135c9 = call i32 @function_26302(i32 %v3_135c3, i32 %v1_135bc, i32 %v1_135b5)
  %v0_135d6 = load i32, i32* @ebp, align 4
  %v1_135d6 = add i32 %v0_135d6, -16
  %v2_135d6 = inttoptr i32 %v1_135d6 to i32*
  %v3_135d6 = load i32, i32* %v2_135d6, align 4
  ret i32 %v3_135d6
}

define i32 @function_135d9() local_unnamed_addr {
dec_label_pc_135d9:
  %v0_135d9 = load i32, i32* @ebp, align 4
  %v1_135ea = add i32 %v0_135d9, -8
  %v1_135ed = inttoptr i32 %v1_135ea to i32*
  %v2_135ed = load i32, i32* %v1_135ed, align 4
  store i32 %v2_135ed, i32* @ebx, align 4
  %v3_135ed = add i32 %v0_135d9, -4
  %v1_135ee = inttoptr i32 %v3_135ed to i32*
  %v2_135ee = load i32, i32* %v1_135ee, align 4
  store i32 %v2_135ee, i32* @esi, align 4
  %v1_135ef = inttoptr i32 %v0_135d9 to i32*
  %v2_135ef = load i32, i32* %v1_135ef, align 4
  store i32 %v2_135ef, i32* @ebp, align 4
  %v0_135f0 = load i32, i32* @eax, align 4
  ret i32 %v0_135f0

; uselistorder directives
  uselistorder i32 %v0_135d9, { 2, 1, 0 }
}

define i32 @_ZNK7CScript10IsPushOnlyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_135f2:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_1360c = ptrtoint i32* %stack_var_-28 to i32
  %v16_1361b = ptrtoint i32* %stack_var_-64 to i32
  %v2_13659 = ptrtoint i32* %stack_var_-24 to i32
  %v2_13620 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_13656

dec_label_pc_13620:                               ; preds = %dec_label_pc_13656
  %v1_13623 = load i32, i32* @esp, align 4
  %v2_13623 = add i32 %v1_13623, 8
  %v3_13623 = inttoptr i32 %v2_13623 to i32*
  store i32 %v2_13620, i32* %v3_13623, align 4
  %v1_1362a = load i32, i32* @esp, align 4
  %v2_1362a = add i32 %v1_1362a, 4
  %v3_1362a = inttoptr i32 %v2_1362a to i32*
  store i32 %v2_1360c, i32* %v3_1362a, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_13631 = load i32, i32* @esp, align 4
  %v2_13631 = inttoptr i32 %v1_13631 to i32*
  store i32 %arg1, i32* %v2_13631, align 4
  %v0_13634 = call i32 @function_265b6()
  %v1_13639 = xor i32 %v0_13634, 1
  %v4_13639 = trunc i32 %v1_13639 to i8
  %v5_1363c = icmp eq i8 %v4_13639, 0
  br i1 %v5_1363c, label %dec_label_pc_13647, label %dec_label_pc_13640

dec_label_pc_13640:                               ; preds = %dec_label_pc_13620
  br label %dec_label_pc_13686

dec_label_pc_13647:                               ; preds = %dec_label_pc_13620
  %v3_13647 = load i32, i32* %stack_var_-20, align 4
  %v7_1364d = icmp sgt i32 %v3_13647, 96
  br i1 %v7_1364d, label %dec_label_pc_1364f, label %dec_label_pc_13647.dec_label_pc_13656_crit_edge

dec_label_pc_13647.dec_label_pc_13656_crit_edge:  ; preds = %dec_label_pc_13647
  %v1_1365c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_13656

dec_label_pc_1364f:                               ; preds = %dec_label_pc_13647
  br label %dec_label_pc_13686

dec_label_pc_13656:                               ; preds = %dec_label_pc_13647.dec_label_pc_13656_crit_edge, %dec_label_pc_135f2
  %v1_1365c = phi i32 [ %v1_1365c.pre, %dec_label_pc_13647.dec_label_pc_13656_crit_edge ], [ %v16_1361b, %dec_label_pc_135f2 ]
  store i32 %v2_13659, i32* @eax, align 4
  %v2_1365c = add i32 %v1_1365c, 4
  %v3_1365c = inttoptr i32 %v2_1365c to i32*
  store i32 %arg1, i32* %v3_1365c, align 4
  %v1_13660 = load i32, i32* @esp, align 4
  %v2_13660 = inttoptr i32 %v1_13660 to i32*
  store i32 %v2_13659, i32* %v2_13660, align 4
  %v0_13663 = call i32 @function_2865c()
  %v0_13668 = load i32, i32* @esp, align 4
  %v3_1366e = inttoptr i32 %v0_13668 to i32*
  store i32 %v2_13659, i32* %v3_1366e, align 4
  store i32 %v2_1360c, i32* @eax, align 4
  %v1_13675 = load i32, i32* @esp, align 4
  %v2_13675 = inttoptr i32 %v1_13675 to i32*
  store i32 %v2_1360c, i32* %v2_13675, align 4
  %v0_13678 = call i32 @function_2a966()
  %v4_1367d = trunc i32 %v0_13678 to i8
  %v5_1367d = icmp eq i8 %v4_1367d, 0
  %v1_1367f = icmp eq i1 %v5_1367d, false
  br i1 %v1_1367f, label %dec_label_pc_13620, label %dec_label_pc_13681

dec_label_pc_13681:                               ; preds = %dec_label_pc_13656
  br label %dec_label_pc_13686

dec_label_pc_13686:                               ; preds = %dec_label_pc_1364f, %dec_label_pc_13640, %dec_label_pc_13681
  %v0_13698 = phi i32 [ 0, %dec_label_pc_1364f ], [ 0, %dec_label_pc_13640 ], [ 1, %dec_label_pc_13681 ]
  ret i32 %v0_13698

; uselistorder directives
  uselistorder i32 %v2_1360c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13686, { 2, 0, 1 }
}

define i32 @_ZN9COutPointC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1369a:
  store i1 false, i1* @cf, align 1
  %v1_136b7 = call i32 @function_2317a(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v1_136c2 = call i32 @function_26d74(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_136d3

bb:                                               ; preds = %dec_label_pc_1369a
  %v1_136d1 = call i32 @function_136d8()
  br label %dec_label_pc_136d3

dec_label_pc_136d3:                               ; preds = %bb, %dec_label_pc_1369a
  %v2_136d1 = phi i32 [ %v1_136d1, %bb ], [ 0, %dec_label_pc_1369a ]
  ret i32 %v2_136d1

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_136d8() local_unnamed_addr {
dec_label_pc_136d8:
  %v0_136d9 = load i32, i32* @eax, align 4
  ret i32 %v0_136d9
}

define i32 @_ZN9COutPoint7SetNullEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_136da:
  %v1_1370f = add i32 %arg1, 32
  %v2_1370f = inttoptr i32 %v1_1370f to i32*
  store i32 -1, i32* %v2_1370f, align 4
  ret i32 0
}

define i32 @_ZN5CTxInC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1372a:
  store i32 %arg1, i32* @eax, align 4
  %v1_13747 = call i32 @function_26dc4(i32 %arg1)
  %v1_1374f = add i32 %arg1, 36
  store i32 %v1_1374f, i32* @eax, align 4
  %v1_13755 = call i32 @function_25dac(i32 %v1_1374f)
  %v0_1375a = call i32 @function_22b8b()
  %v2_13762 = add i32 %arg1, 48
  %v3_13762 = inttoptr i32 %v2_13762 to i32*
  store i32 %v0_1375a, i32* %v3_13762, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13771

bb:                                               ; preds = %dec_label_pc_1372a
  %v1_1376f = call i32 @function_13776()
  br label %dec_label_pc_13771

dec_label_pc_13771:                               ; preds = %bb, %dec_label_pc_1372a
  %v2_1376f = phi i32 [ %v1_1376f, %bb ], [ 0, %dec_label_pc_1372a ]
  ret i32 %v2_1376f

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_13776() local_unnamed_addr {
dec_label_pc_13776:
  %v0_13777 = load i32, i32* @eax, align 4
  ret i32 %v0_13777
}

define i32 @_ZN6CTxOutC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13778:
  %v1_13793 = add i32 %arg1, 8
  store i32 %v1_13793, i32* @eax, align 4
  %v1_13799 = call i32 @function_25dfa(i32 %v1_13793)
  %v1_137a4 = call i32 @function_26f54(i32 %arg1)
  %v0_137a9 = call i32 @function_137c5()
  ret i32 %v0_137a9
}

define i32 @function_137ac() local_unnamed_addr {
dec_label_pc_137ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_137ac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_137ac
}

define i32 @function_137c5() local_unnamed_addr {
dec_label_pc_137c5:
  %v0_137c5 = load i32, i32* @ebp, align 4
  %v1_137c5 = add i32 %v0_137c5, -12
  %v2_137c5 = inttoptr i32 %v1_137c5 to i32*
  %v3_137c5 = load i32, i32* %v2_137c5, align 4
  %v1_137c8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_137c8 = xor i32 %v1_137c8, %v3_137c5
  ret i32 %v2_137c8
}

define i32 @_ZN6CTxOut7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_137dc:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* %arg1, align 4
  %v1_137fc = add i32 %tmp4, 4
  %v2_137fc = inttoptr i32 %v1_137fc to i32*
  store i32 -1, i32* %v2_137fc, align 4
  %v1_13806 = add i32 %tmp4, 8
  %v1_1380c = call i32 @function_2a796(i32 %v1_13806)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1381d

bb:                                               ; preds = %dec_label_pc_137dc
  %v1_1381b = call i32 @function_13822()
  br label %dec_label_pc_1381d

dec_label_pc_1381d:                               ; preds = %bb, %dec_label_pc_137dc
  %v2_1381b = phi i32 [ %v1_1381b, %bb ], [ 0, %dec_label_pc_137dc ]
  ret i32 %v2_1381b

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_13822() local_unnamed_addr {
dec_label_pc_13822:
  %v0_13823 = load i32, i32* @eax, align 4
  ret i32 %v0_13823
}

define i32 @_ZN12CTransactionC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13824:
  %v1_1383f = add i32 %arg1, 4
  store i32 %v1_1383f, i32* @eax, align 4
  %v1_13845 = call i32 @function_2aca4(i32 %v1_1383f)
  %v1_1384d = add i32 %arg1, 16
  %v9_1384d = icmp eq i32 %v1_1384d, 0
  store i1 %v9_1384d, i1* @zf, align 1
  store i32 %v1_1384d, i32* @eax, align 4
  %v1_13853 = call i32 @function_2ad54(i32 %v1_1384d)
  store i32 %arg1, i32* @eax, align 4
  %v1_1385e = call i32 @function_270cc(i32 %arg1)
  %v0_13863 = call i32 @function_13891()
  ret i32 %v0_13863
}

define i32 @function_13865() local_unnamed_addr {
dec_label_pc_13865:
  %eax.global-to-local = alloca i32, align 4
  %v0_13865 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_13865, i32* @ebx, align 4
  %v0_13867 = load i32, i32* @ebp, align 4
  %v1_13867 = add i32 %v0_13867, -28
  %v2_13867 = inttoptr i32 %v1_13867 to i32*
  %v3_13867 = load i32, i32* %v2_13867, align 4
  %v1_1386a = add i32 %v3_13867, 16
  store i32 %v1_1386a, i32* %eax.global-to-local, align 4
  %v1_13875 = call i32 @function_13879(i32 %v1_1386a)
  store i32 %v1_13875, i32* %eax.global-to-local, align 4
  ret i32 %v1_13875
}

define i32 @function_13877() local_unnamed_addr {
dec_label_pc_13877:
  %eax.global-to-local = alloca i32, align 4
  %v0_13877 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13877
}

define i32 @function_13879(i32 %arg1) local_unnamed_addr {
dec_label_pc_13879:
  %v0_13887 = load i32, i32* @ebx, align 4
  ret i32 %v0_13887
}

define i32 @function_13891() local_unnamed_addr {
dec_label_pc_13891:
  %v0_13891 = load i32, i32* @ebp, align 4
  %v1_13891 = add i32 %v0_13891, -12
  %v2_13891 = inttoptr i32 %v1_13891 to i32*
  %v3_13891 = load i32, i32* %v2_13891, align 4
  %v1_13894 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_13894 = xor i32 %v1_13894, %v3_13891
  %v3_13894 = icmp eq i32 %v2_13894, 0
  store i32 %v2_13894, i32* @eax, align 4
  br i1 %v3_13894, label %bb, label %dec_label_pc_1389d

bb:                                               ; preds = %dec_label_pc_13891
  %v1_1389b = call i32 @function_138a2()
  br label %dec_label_pc_1389d

dec_label_pc_1389d:                               ; preds = %bb, %dec_label_pc_13891
  %v2_1389b = phi i32 [ %v1_1389b, %bb ], [ %v2_13894, %dec_label_pc_13891 ]
  ret i32 %v2_1389b
}

define i32 @function_138a2() local_unnamed_addr {
dec_label_pc_138a2:
  %v0_138a7 = load i32, i32* @eax, align 4
  ret i32 %v0_138a7
}

define i32 @_ZN12CTransaction7SetNullEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_138a8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %stack_var_-60 = alloca i32, align 4
  store i32 1, i32* %arg1, align 4
  %v1_138cb = add i32 %tmp100, 4
  store i32 %v1_138cb, i32* @eax, align 4
  store i32 %v1_138cb, i32* %stack_var_-60, align 4
  %v1_138d1 = call i32 @function_2ae88(i32 %v1_138cb)
  %v1_138d9 = add i32 %tmp100, 16
  store i32 %v1_138d9, i32* %stack_var_-60, align 4
  %v1_138e7 = add i32 %tmp100, 28
  %v2_138e7 = inttoptr i32 %v1_138e7 to i32*
  store i32 0, i32* %v2_138e7, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_138fa

bb:                                               ; preds = %dec_label_pc_138a8
  %v1_138f8 = load i32, i32* %stack_var_-60, align 4
  %v2_138f8 = call i32 @function_138ff(i32 %v1_138f8)
  br label %dec_label_pc_138fa

dec_label_pc_138fa:                               ; preds = %bb, %dec_label_pc_138a8
  %v3_138f8 = phi i32 [ %v2_138f8, %bb ], [ 0, %dec_label_pc_138a8 ]
  ret i32 %v3_138f8

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_138ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_138ff:
  %v0_13900 = load i32, i32* @eax, align 4
  ret i32 %v0_13900
}

define i32 @_ZN6CTxOutD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13902:
  %v1_1391c = add i32 %arg1, 8
  store i32 %v1_1391c, i32* @eax, align 4
  %v1_13922 = call i32 @function_260f2(i32 %v1_1391c)
  ret i32 0
}

define i32 @_ZN6CTxOutC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1393a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_1395a = add i32 %arg2, 4
  %v2_1395a = inttoptr i32 %v1_1395a to i32*
  %v3_1395a = load i32, i32* %v2_1395a, align 4
  %v1_1395d = inttoptr i32 %arg2 to i32*
  %v2_1395d = load i32, i32* %v1_1395d, align 4
  store i32 %v2_1395d, i32* %arg1, align 4
  %v2_13964 = add i32 %tmp103, 4
  %v3_13964 = inttoptr i32 %v2_13964 to i32*
  store i32 %v3_1395a, i32* %v3_13964, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN12CTransactionC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13992:
  %tmp7 = ptrtoint i32* %arg1 to i32
  %v1_139b3 = inttoptr i32 %arg2 to i32*
  %v2_139b3 = load i32, i32* %v1_139b3, align 4
  store i32 %v2_139b3, i32* %arg1, align 4
  %v1_139bd = add i32 %arg2, 4
  store i32 %v1_139bd, i32* @edx, align 4
  %v1_139c3 = add i32 %tmp7, 4
  store i32 %v1_139c3, i32* @eax, align 4
  %v2_139cd = call i32 @function_2bdb2(i32 %v1_139c3, i32 %v1_139bd)
  %v1_139d5 = add i32 %arg2, 16
  store i32 %v1_139d5, i32* @edx, align 4
  %v1_139db = add i32 %tmp7, 16
  store i32 %v1_139db, i32* @eax, align 4
  %v2_139e5 = call i32 @function_2b034(i32 %v1_139db, i32 %v1_139d5)
  %v1_139ed = add i32 %arg2, 28
  %v2_139ed = inttoptr i32 %v1_139ed to i32*
  %v3_139ed = load i32, i32* %v2_139ed, align 4
  %v2_139f3 = add i32 %tmp7, 28
  %v3_139f3 = inttoptr i32 %v2_139f3 to i32*
  store i32 %v3_139ed, i32* %v3_139f3, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @_ZN12CTransactionD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a2a:
  %v1_13a45 = add i32 %arg1, 16
  store i32 %v1_13a45, i32* @eax, align 4
  %v1_13a4b = call i32 @function_2af90(i32 %v1_13a45)
  %v1_13a53 = add i32 %arg1, 4
  %v1_13a59 = call i32 @function_2aee0(i32 %v1_13a53)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13a6a

bb:                                               ; preds = %dec_label_pc_13a2a
  %v1_13a68 = call i32 @function_13a8b()
  store i32 %v1_13a68, i32* @eax, align 4
  br label %dec_label_pc_13a6a

dec_label_pc_13a6a:                               ; preds = %bb, %dec_label_pc_13a2a
  %v0_13a6a = call i32 @function_13a86()
  ret i32 %v0_13a6a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13a6d() local_unnamed_addr {
dec_label_pc_13a6d:
  %eax.global-to-local = alloca i32, align 4
  %v0_13a6d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13a6d
}

define i32 @function_13a86() local_unnamed_addr {
dec_label_pc_13a86:
  %v0_13a86 = load i32, i32* @eax, align 4
  ret i32 %v0_13a86
}

define i32 @function_13a8b() local_unnamed_addr {
dec_label_pc_13a8b:
  %v0_13a90 = load i32, i32* @eax, align 4
  ret i32 %v0_13a90
}

define i32 @_ZN7CScriptaSERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a92:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_13abc = call i32 @function_290e6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13ad0

bb:                                               ; preds = %dec_label_pc_13a92
  %v1_13ace = call i32 @function_13ad5()
  br label %dec_label_pc_13ad0

dec_label_pc_13ad0:                               ; preds = %bb, %dec_label_pc_13a92
  %v2_13ace = phi i32 [ %v1_13ace, %bb ], [ %arg1, %dec_label_pc_13a92 ]
  ret i32 %v2_13ace

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_13ad5() local_unnamed_addr {
dec_label_pc_13ad5:
  %v0_13ad6 = load i32, i32* @eax, align 4
  ret i32 %v0_13ad6
}

define i32 @_ZN5CTxInaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ad8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg1 to i32
  store i32 %tmp7, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_13afb = inttoptr i32 %arg2 to i32*
  %v2_13afb = load i32, i32* %v1_13afb, align 4
  store i32 %v2_13afb, i32* %arg1, align 4
  %v1_13aff = add i32 %arg2, 4
  %v2_13aff = inttoptr i32 %v1_13aff to i32*
  %v3_13aff = load i32, i32* %v2_13aff, align 4
  %v1_13b02 = load i32, i32* %eax.global-to-local, align 4
  %v2_13b02 = add i32 %v1_13b02, 4
  %v3_13b02 = inttoptr i32 %v2_13b02 to i32*
  store i32 %v3_13aff, i32* %v3_13b02, align 4
  %v0_13b05 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b05 = add i32 %v0_13b05, 8
  %v2_13b05 = inttoptr i32 %v1_13b05 to i32*
  %v3_13b05 = load i32, i32* %v2_13b05, align 4
  %v1_13b08 = load i32, i32* %eax.global-to-local, align 4
  %v2_13b08 = add i32 %v1_13b08, 8
  %v3_13b08 = inttoptr i32 %v2_13b08 to i32*
  store i32 %v3_13b05, i32* %v3_13b08, align 4
  %v0_13b0b = load i32, i32* %edx.global-to-local, align 4
  %v1_13b0b = add i32 %v0_13b0b, 12
  %v2_13b0b = inttoptr i32 %v1_13b0b to i32*
  %v3_13b0b = load i32, i32* %v2_13b0b, align 4
  %v1_13b0e = load i32, i32* %eax.global-to-local, align 4
  %v2_13b0e = add i32 %v1_13b0e, 12
  %v3_13b0e = inttoptr i32 %v2_13b0e to i32*
  store i32 %v3_13b0b, i32* %v3_13b0e, align 4
  %v0_13b11 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b11 = add i32 %v0_13b11, 16
  %v2_13b11 = inttoptr i32 %v1_13b11 to i32*
  %v3_13b11 = load i32, i32* %v2_13b11, align 4
  %v1_13b14 = load i32, i32* %eax.global-to-local, align 4
  %v2_13b14 = add i32 %v1_13b14, 16
  %v3_13b14 = inttoptr i32 %v2_13b14 to i32*
  store i32 %v3_13b11, i32* %v3_13b14, align 4
  %v0_13b17 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b17 = add i32 %v0_13b17, 20
  %v2_13b17 = inttoptr i32 %v1_13b17 to i32*
  %v3_13b17 = load i32, i32* %v2_13b17, align 4
  %v1_13b1a = load i32, i32* %eax.global-to-local, align 4
  %v2_13b1a = add i32 %v1_13b1a, 20
  %v3_13b1a = inttoptr i32 %v2_13b1a to i32*
  store i32 %v3_13b17, i32* %v3_13b1a, align 4
  %v0_13b1d = load i32, i32* %edx.global-to-local, align 4
  %v1_13b1d = add i32 %v0_13b1d, 24
  %v2_13b1d = inttoptr i32 %v1_13b1d to i32*
  %v3_13b1d = load i32, i32* %v2_13b1d, align 4
  %v1_13b20 = load i32, i32* %eax.global-to-local, align 4
  %v2_13b20 = add i32 %v1_13b20, 24
  %v3_13b20 = inttoptr i32 %v2_13b20 to i32*
  store i32 %v3_13b1d, i32* %v3_13b20, align 4
  %v0_13b23 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b23 = add i32 %v0_13b23, 28
  %v2_13b23 = inttoptr i32 %v1_13b23 to i32*
  %v3_13b23 = load i32, i32* %v2_13b23, align 4
  store i32 %v3_13b23, i32* @ecx, align 4
  %v1_13b26 = load i32, i32* %eax.global-to-local, align 4
  %v2_13b26 = add i32 %v1_13b26, 28
  %v3_13b26 = inttoptr i32 %v2_13b26 to i32*
  store i32 %v3_13b23, i32* %v3_13b26, align 4
  %v0_13b29 = load i32, i32* %edx.global-to-local, align 4
  %v1_13b29 = add i32 %v0_13b29, 32
  %v2_13b29 = inttoptr i32 %v1_13b29 to i32*
  %v3_13b29 = load i32, i32* %v2_13b29, align 4
  %v1_13b2c = load i32, i32* %eax.global-to-local, align 4
  %v2_13b2c = add i32 %v1_13b2c, 32
  %v3_13b2c = inttoptr i32 %v2_13b2c to i32*
  store i32 %v3_13b29, i32* %v3_13b2c, align 4
  %v1_13b32 = add i32 %arg2, 36
  store i32 %v1_13b32, i32* %edx.global-to-local, align 4
  %v1_13b38 = add i32 %tmp7, 36
  store i32 %v1_13b38, i32* @eax, align 4
  %v2_13b42 = call i32 @function_2756a(i32 %v1_13b38, i32 %v1_13b32)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_13b4a = add i32 %arg2, 48
  %v2_13b4a = inttoptr i32 %v1_13b4a to i32*
  %v3_13b4a = load i32, i32* %v2_13b4a, align 4
  %v2_13b50 = add i32 %tmp7, 48
  %v3_13b50 = inttoptr i32 %v2_13b50 to i32*
  store i32 %v3_13b4a, i32* %v3_13b50, align 4
  store i32 %tmp7, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  ret i32 %tmp7

; uselistorder directives
  uselistorder i32 %tmp7, { 0, 4, 3, 2, 1 }
  uselistorder i32 %arg2, { 5, 4, 3, 0, 2, 1 }
}

define i32 @_ZN5CTxInD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13b6a:
  %v1_13b84 = add i32 %arg1, 36
  %v1_13b8a = call i32 @__stack_chk_fail.844(i32 %v1_13b84)
  ret i32 0
}

define i32 @_ZN5CTxInC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ba2:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_13bb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp103, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_13bc5 = inttoptr i32 %arg2 to i32*
  %v2_13bc5 = load i32, i32* %v1_13bc5, align 4
  store i32 %v2_13bc5, i32* %arg1, align 4
  %v1_13bc9 = add i32 %arg2, 4
  %v2_13bc9 = inttoptr i32 %v1_13bc9 to i32*
  %v3_13bc9 = load i32, i32* %v2_13bc9, align 4
  %v1_13bcc = load i32, i32* %eax.global-to-local, align 4
  %v2_13bcc = add i32 %v1_13bcc, 4
  %v3_13bcc = inttoptr i32 %v2_13bcc to i32*
  store i32 %v3_13bc9, i32* %v3_13bcc, align 4
  %v0_13bcf = load i32, i32* %edx.global-to-local, align 4
  %v1_13bcf = add i32 %v0_13bcf, 8
  %v2_13bcf = inttoptr i32 %v1_13bcf to i32*
  %v3_13bcf = load i32, i32* %v2_13bcf, align 4
  %v1_13bd2 = load i32, i32* %eax.global-to-local, align 4
  %v2_13bd2 = add i32 %v1_13bd2, 8
  %v3_13bd2 = inttoptr i32 %v2_13bd2 to i32*
  store i32 %v3_13bcf, i32* %v3_13bd2, align 4
  %v0_13bd5 = load i32, i32* %edx.global-to-local, align 4
  %v1_13bd5 = add i32 %v0_13bd5, 12
  %v2_13bd5 = inttoptr i32 %v1_13bd5 to i32*
  %v3_13bd5 = load i32, i32* %v2_13bd5, align 4
  %v1_13bd8 = load i32, i32* %eax.global-to-local, align 4
  %v2_13bd8 = add i32 %v1_13bd8, 12
  %v3_13bd8 = inttoptr i32 %v2_13bd8 to i32*
  store i32 %v3_13bd5, i32* %v3_13bd8, align 4
  %v0_13bdb = load i32, i32* %edx.global-to-local, align 4
  %v1_13bdb = add i32 %v0_13bdb, 16
  %v2_13bdb = inttoptr i32 %v1_13bdb to i32*
  %v3_13bdb = load i32, i32* %v2_13bdb, align 4
  %v1_13bde = load i32, i32* %eax.global-to-local, align 4
  %v2_13bde = add i32 %v1_13bde, 16
  %v3_13bde = inttoptr i32 %v2_13bde to i32*
  store i32 %v3_13bdb, i32* %v3_13bde, align 4
  %v0_13be1 = load i32, i32* %edx.global-to-local, align 4
  %v1_13be1 = add i32 %v0_13be1, 20
  %v2_13be1 = inttoptr i32 %v1_13be1 to i32*
  %v3_13be1 = load i32, i32* %v2_13be1, align 4
  %v1_13be4 = load i32, i32* %eax.global-to-local, align 4
  %v2_13be4 = add i32 %v1_13be4, 20
  %v3_13be4 = inttoptr i32 %v2_13be4 to i32*
  store i32 %v3_13be1, i32* %v3_13be4, align 4
  %v0_13be7 = load i32, i32* %edx.global-to-local, align 4
  %v1_13be7 = add i32 %v0_13be7, 24
  %v2_13be7 = inttoptr i32 %v1_13be7 to i32*
  %v3_13be7 = load i32, i32* %v2_13be7, align 4
  %v1_13bea = load i32, i32* %eax.global-to-local, align 4
  %v2_13bea = add i32 %v1_13bea, 24
  %v3_13bea = inttoptr i32 %v2_13bea to i32*
  store i32 %v3_13be7, i32* %v3_13bea, align 4
  %v0_13bed = load i32, i32* %edx.global-to-local, align 4
  %v1_13bed = add i32 %v0_13bed, 28
  %v2_13bed = inttoptr i32 %v1_13bed to i32*
  %v3_13bed = load i32, i32* %v2_13bed, align 4
  %v1_13bf0 = load i32, i32* %eax.global-to-local, align 4
  %v2_13bf0 = add i32 %v1_13bf0, 28
  %v3_13bf0 = inttoptr i32 %v2_13bf0 to i32*
  store i32 %v3_13bed, i32* %v3_13bf0, align 4
  %v0_13bf3 = load i32, i32* %edx.global-to-local, align 4
  %v1_13bf3 = add i32 %v0_13bf3, 32
  %v2_13bf3 = inttoptr i32 %v1_13bf3 to i32*
  %v3_13bf3 = load i32, i32* %v2_13bf3, align 4
  %v1_13bf6 = load i32, i32* %eax.global-to-local, align 4
  %v2_13bf6 = add i32 %v1_13bf6, 32
  %v3_13bf6 = inttoptr i32 %v2_13bf6 to i32*
  store i32 %v3_13bf3, i32* %v3_13bf6, align 4
  %v1_13bfc = add i32 %arg2, 36
  store i32 %v1_13bfc, i32* %edx.global-to-local, align 4
  %v1_13c02 = add i32 %tmp103, 36
  store i32 %v1_13c02, i32* @eax, align 4
  %v2_13c0c = call i32 @function_2625a(i32 %v1_13c02, i32 %v1_13bfc)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_13c14 = add i32 %arg2, 48
  %v2_13c14 = inttoptr i32 %v1_13c14 to i32*
  %v3_13c14 = load i32, i32* %v2_13c14, align 4
  store i32 %v3_13c14, i32* %edx.global-to-local, align 4
  %v2_13c1a = add i32 %tmp103, 48
  %v3_13c1a = inttoptr i32 %v2_13c1a to i32*
  store i32 %v3_13c14, i32* %v3_13c1a, align 4
  store i32 %v0_13bb4, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13c29

bb:                                               ; preds = %dec_label_pc_13ba2
  %v1_13c27 = call i32 @function_13c2e()
  store i32 %v1_13c27, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13c29

dec_label_pc_13c29:                               ; preds = %bb, %dec_label_pc_13ba2
  %v2_13c27 = phi i32 [ %v1_13c27, %bb ], [ 0, %dec_label_pc_13ba2 ]
  ret i32 %v2_13c27

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 0, 2, 1, 6 }
}

define i32 @function_13c2e() local_unnamed_addr {
dec_label_pc_13c2e:
  %v0_13c2f = load i32, i32* @eax, align 4
  ret i32 %v0_13c2f
}

define i32 @_ZN5boost6tuples4consISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c30:
  %v1_13c4d = call i32 @function_29112(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13c5e

bb:                                               ; preds = %dec_label_pc_13c30
  %v1_13c5c = call i32 @function_13c63()
  br label %dec_label_pc_13c5e

dec_label_pc_13c5e:                               ; preds = %bb, %dec_label_pc_13c30
  %v2_13c5c = phi i32 [ %v1_13c5c, %bb ], [ 0, %dec_label_pc_13c30 ]
  ret i32 %v2_13c5c
}

define i32 @function_13c63() local_unnamed_addr {
dec_label_pc_13c63:
  %v0_13c64 = load i32, i32* @eax, align 4
  ret i32 %v0_13c64
}

define i32 @_ZN5boost6tuples4consI7uint256NS1_ISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c66:
  %v1_13c80 = add i32 %arg1, 32
  store i32 %v1_13c80, i32* @eax, align 4
  %v1_13c86 = call i32 @function_27896(i32 %v1_13c80)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13c97

bb:                                               ; preds = %dec_label_pc_13c66
  %v1_13c95 = call i32 @function_13c9c()
  br label %dec_label_pc_13c97

dec_label_pc_13c97:                               ; preds = %bb, %dec_label_pc_13c66
  %v2_13c95 = phi i32 [ %v1_13c95, %bb ], [ 0, %dec_label_pc_13c66 ]
  ret i32 %v2_13c95
}

define i32 @function_13c9c() local_unnamed_addr {
dec_label_pc_13c9c:
  %v0_13c9d = load i32, i32* @eax, align 4
  ret i32 %v0_13c9d
}

define i32 @_ZN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS0_9null_typeES7_S7_S7_S7_S7_S7_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_13c9e:
  store i32 %arg1, i32* @eax, align 4
  %v1_13cbb = call i32 @function_27904(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_13ccc

bb:                                               ; preds = %dec_label_pc_13c9e
  %v1_13cca = call i32 @function_13cd1()
  br label %dec_label_pc_13ccc

dec_label_pc_13ccc:                               ; preds = %bb, %dec_label_pc_13c9e
  %v2_13cca = phi i32 [ %v1_13cca, %bb ], [ 0, %dec_label_pc_13c9e ]
  ret i32 %v2_13cca

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_13cd1() local_unnamed_addr {
dec_label_pc_13cd1:
  %v0_13cd2 = load i32, i32* @eax, align 4
  ret i32 %v0_13cd2
}

define i32 @_ZN15CSignatureCache3GetERK7uint256RKSt6vectorIhSaIhEERK7CPubKey(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13cd4:
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %v0_13cd7 = load i32, i32* @ebx, align 4
  %v1_13d13 = add i32 %arg1, 24
  %v2_13d1a = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_13d1a, i32* @eax, align 4
  %v2_13d23 = call i32 @function_29c06(i32 %v2_13d1a, i32 %v1_13d13)
  %v2_13d46 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13d46, i32* @eax, align 4
  %v4_13d4c = call i32 @function_2c49a(i32 %v2_13d46, i32 %arg2, i32 %arg3, i32 %arg4)
  %v2_13d57 = ptrtoint i32* %stack_var_-136 to i32
  %v3_13d6b = call i32 @function_2c58a(i32 %v2_13d57, i32 %arg1, i32 %v2_13d46)
  %v2_13d79 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_13d79, i32* @eax, align 4
  %v2_13d83 = call i32 @function_2c5f4(i32 %v2_13d79, i32 %arg1)
  store i32 %v2_13d57, i32* @eax, align 4
  %v2_13d9b = call i32 @function_2c63e(i32 %v2_13d57, i32 %v2_13d79)
  store i32 %v2_13d46, i32* @eax, align 4
  %v1_13db6 = call i32 @function_27972(i32 %v2_13d46)
  %v1_13dc4 = call i32 @function_29c50(i32 %v2_13d1a)
  %v0_13dc9 = load i32, i32* @ebx, align 4
  store i32 %v0_13cd7, i32* @ebx, align 4
  ret i32 %v0_13dc9

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @_ZN15CSignatureCache3SetERK7uint256RKSt6vectorIhSaIhEERK7CPubKey(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13e0c:
  %v5_13e0f = load i32, i32* @eax, align 4
  ret i32 %v5_13e0f
}

define i32 @function_13e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e10:
  %v0_13e16 = load i32, i32* @ebp, align 4
  %v1_13e16 = add i32 %v0_13e16, 8
  %v2_13e16 = inttoptr i32 %v1_13e16 to i32*
  %v3_13e16 = load i32, i32* %v2_13e16, align 4
  %v2_13e19 = add i32 %v0_13e16, -396
  %v3_13e19 = inttoptr i32 %v2_13e19 to i32*
  store i32 %v3_13e16, i32* %v3_13e19, align 4
  %v0_13e1f = load i32, i32* @ebp, align 4
  %v1_13e1f = add i32 %v0_13e1f, 12
  %v2_13e1f = inttoptr i32 %v1_13e1f to i32*
  %v3_13e1f = load i32, i32* %v2_13e1f, align 4
  %v2_13e22 = add i32 %v0_13e1f, -400
  %v3_13e22 = inttoptr i32 %v2_13e22 to i32*
  store i32 %v3_13e1f, i32* %v3_13e22, align 4
  %v0_13e28 = load i32, i32* @ebp, align 4
  %v1_13e28 = add i32 %v0_13e28, 16
  %v2_13e28 = inttoptr i32 %v1_13e28 to i32*
  %v3_13e28 = load i32, i32* %v2_13e28, align 4
  %v2_13e2b = add i32 %v0_13e28, -404
  %v3_13e2b = inttoptr i32 %v2_13e2b to i32*
  store i32 %v3_13e28, i32* %v3_13e2b, align 4
  %v0_13e31 = load i32, i32* @ebp, align 4
  %v1_13e31 = add i32 %v0_13e31, 20
  %v2_13e31 = inttoptr i32 %v1_13e31 to i32*
  %v3_13e31 = load i32, i32* %v2_13e31, align 4
  %v2_13e34 = add i32 %v0_13e31, -408
  %v3_13e34 = inttoptr i32 %v2_13e34 to i32*
  store i32 %v3_13e31, i32* %v3_13e34, align 4
  %v0_13e3a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_13e40 = load i32, i32* @ebp, align 4
  %v2_13e40 = add i32 %v1_13e40, -12
  %v3_13e40 = inttoptr i32 %v2_13e40 to i32*
  store i32 %v0_13e3a, i32* %v3_13e40, align 4
  %v0_13e45 = load i32, i32* @ebp, align 4
  %v1_13e45 = add i32 %v0_13e45, -337
  ret i32 %v1_13e45
}

define i32 @function_13e58(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e58:
  %eax.global-to-local = alloca i32, align 4
  %v0_13e58 = load i32, i32* @ecx, align 4
  %v1_13e58 = add i32 %v0_13e58, -955767740
  %v2_13e58 = inttoptr i32 %v1_13e58 to i32*
  %v3_13e58 = load i32, i32* %v2_13e58, align 4
  %v4_13e58 = add i32 %v3_13e58, -1
  store i32 %v4_13e58, i32* %v2_13e58, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_13e64 = load i32, i32* @ebp, align 4
  %v1_13e64 = add i32 %v0_13e64, -89979
  %v2_13e64 = inttoptr i32 %v1_13e64 to i8*
  %v3_13e64 = load i8, i8* %v2_13e64, align 1
  %v4_13e64 = load i32, i32* @ecx, align 4
  %v5_13e64 = trunc i32 %v4_13e64 to i8
  %v6_13e64 = add i8 %v5_13e64, %v3_13e64
  store i8 %v6_13e64, i8* %v2_13e64, align 1
  %v24_13e64 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v24_13e64
}

define i32 @function_13e72() local_unnamed_addr {
dec_label_pc_13e72:
  %eax.global-to-local = alloca i32, align 4
  %v0_13e75 = load i32, i32* %eax.global-to-local, align 4
  %v11_13e75 = and i32 %v0_13e75, -252
  store i32 %v11_13e75, i32* %eax.global-to-local, align 4
  ret i32 %v11_13e75

; uselistorder directives
  uselistorder i32 %v11_13e75, { 1, 0 }
}

define i32 @function_13eb8() local_unnamed_addr {
dec_label_pc_13eb8:
  %v0_13eb8 = load i32, i32* @ebx, align 4
  %v1_13eb8 = add i32 %v0_13eb8, -95043
  %v2_13eb8 = inttoptr i32 %v1_13eb8 to i32*
  %v3_13eb8 = load i32, i32* %v2_13eb8, align 4
  %v4_13eb8 = add i32 %v3_13eb8, 1
  store i32 %v4_13eb8, i32* %v2_13eb8, align 4
  %v2_13ebe = load i32, i32* @eax, align 4
  %v3_13ebe = add i32 %v2_13ebe, 1
  %tmp99 = xor i32 %v2_13ebe, -2147483648
  %v9_13ebe = and i32 %v3_13ebe, %tmp99
  %v10_13ebe = icmp slt i32 %v9_13ebe, 0
  %v11_13ebe = icmp eq i32 %v3_13ebe, 0
  %v12_13ebe = icmp slt i32 %v3_13ebe, 0
  %v18_13ebe = inttoptr i32 %v2_13ebe to i32*
  store i32 %v3_13ebe, i32* %v18_13ebe, align 4
  %v3_13ec0 = icmp eq i1 %v12_13ebe, %v10_13ebe
  %v4_13ec0 = icmp eq i1 %v11_13ebe, false
  %v5_13ec0 = icmp eq i1 %v3_13ec0, %v4_13ec0
  br i1 %v5_13ec0, label %dec_label_pc_13edc, label %dec_label_pc_13ec2

dec_label_pc_13ec2:                               ; preds = %dec_label_pc_13eb8
  %v0_13ec2 = load i32, i32* @ebp, align 4
  %v1_13ec2 = add i32 %v0_13ec2, -372
  %v2_13ec2 = inttoptr i32 %v1_13ec2 to i32*
  %v3_13ec2 = load i32, i32* %v2_13ec2, align 4
  %v11_13ec2 = icmp slt i32 %v3_13ec2, 0
  br i1 %v11_13ec2, label %bb, label %dec_label_pc_13ecf

bb:                                               ; preds = %dec_label_pc_13ec2
  %v1_13ec9 = call i32 @function_1413a()
  store i32 %v1_13ec9, i32* @eax, align 4
  %v0_13ecf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_13ecf

dec_label_pc_13ecf:                               ; preds = %bb, %dec_label_pc_13ec2
  %v0_13ecf = phi i32 [ %v0_13ecf.pre, %bb ], [ %v0_13ec2, %dec_label_pc_13ec2 ]
  %v1_13ecf = add i32 %v0_13ecf, -376
  %v2_13ecf = inttoptr i32 %v1_13ecf to i32*
  %v3_13ecf = load i32, i32* %v2_13ecf, align 4
  %v10_13ecf = icmp eq i32 %v3_13ecf, 0
  br i1 %v10_13ecf, label %bb100, label %dec_label_pc_13edc

bb100:                                            ; preds = %dec_label_pc_13ecf
  %v3_13ed6 = call i32 @function_1413a()
  br label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %bb100, %dec_label_pc_13ecf, %dec_label_pc_13eb8
  %v0_13edc = load i32, i32* @ebp, align 4
  %v1_13edc = add i32 %v0_13edc, -396
  %v2_13edc = inttoptr i32 %v1_13edc to i32*
  %v3_13edc = load i32, i32* %v2_13edc, align 4
  %v1_13ee2 = add i32 %v3_13edc, 24
  %v1_13ee9 = add i32 %v0_13edc, -368
  store i32 %v1_13ee9, i32* @eax, align 4
  %v2_13ef2 = call i32 @function_2c7b6(i32 %v1_13ee9, i32 %v1_13ee2)
  %v0_13ef7 = call i32 @function_14012()
  ret i32 %v0_13ef7

; uselistorder directives
  uselistorder i32 %v3_13ebe, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_1413a, { 1, 0 }
  uselistorder i32 -2147483648, { 1, 0, 2 }
}

define i32 @function_13efc() local_unnamed_addr {
dec_label_pc_13efc:
  %v0_13efc = load i32, i32* @ebp, align 4
  %v1_13efc = add i32 %v0_13efc, -44
  ret i32 %v1_13efc
}

define i32 @function_14012() local_unnamed_addr {
dec_label_pc_14012:
  %v0_14012 = load i32, i32* @ebp, align 4
  %v1_14012 = add i32 %v0_14012, -396
  %v2_14012 = inttoptr i32 %v1_14012 to i32*
  %v3_14012 = load i32, i32* %v2_14012, align 4
  store i32 %v3_14012, i32* @eax, align 4
  %v1_1401b = call i32 @function_2c846(i32 %v3_14012)
  %v1_1402a = load i32, i32* @ebp, align 4
  %v2_1402a = add i32 %v1_1402a, -372
  %v3_1402a = inttoptr i32 %v2_1402a to i32*
  %v4_1402a = load i32, i32* %v3_1402a, align 4
  %v8_14030 = icmp slt i32 %v4_1402a, 0
  br i1 %v8_14030, label %dec_label_pc_14047, label %dec_label_pc_14032

dec_label_pc_14032:                               ; preds = %dec_label_pc_14012
  %v15_1402a = icmp eq i32 %v4_1402a, 0
  br i1 %v15_1402a, label %dec_label_pc_1403a, label %dec_label_pc_14042

dec_label_pc_1403a:                               ; preds = %dec_label_pc_14032
  %v2_1403a = add i32 %v1_1402a, -376
  %v3_1403a = inttoptr i32 %v2_1403a to i32*
  %v4_1403a = load i32, i32* %v3_1403a, align 4
  %tmp13 = icmp ugt i32 %v1_1401b, %v4_1403a
  br i1 %tmp13, label %dec_label_pc_14047, label %dec_label_pc_14042

dec_label_pc_14042:                               ; preds = %dec_label_pc_1403a, %dec_label_pc_14032
  br label %dec_label_pc_14047

dec_label_pc_14047:                               ; preds = %dec_label_pc_1403a, %dec_label_pc_14042, %dec_label_pc_14012
  %v0_14047 = phi i1 [ true, %dec_label_pc_1403a ], [ false, %dec_label_pc_14042 ], [ true, %dec_label_pc_14012 ]
  br i1 %v0_14047, label %bb, label %dec_label_pc_1404f

bb:                                               ; preds = %dec_label_pc_14047
  %v2_14049 = call i32 @function_13efc()
  %v0_1404f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1404f

dec_label_pc_1404f:                               ; preds = %bb, %dec_label_pc_14047
  %v0_14063 = phi i32 [ %v0_1404f.pre, %bb ], [ %v1_1402a, %dec_label_pc_14047 ]
  %v1_1404f = add i32 %v0_14063, -408
  %v2_1404f = inttoptr i32 %v1_1404f to i32*
  %v3_1404f = load i32, i32* %v2_1404f, align 4
  %v1_14059 = add i32 %v0_14063, -404
  %v2_14059 = inttoptr i32 %v1_14059 to i32*
  %v3_14059 = load i32, i32* %v2_14059, align 4
  %v1_14063 = add i32 %v0_14063, -400
  %v2_14063 = inttoptr i32 %v1_14063 to i32*
  %v3_14063 = load i32, i32* %v2_14063, align 4
  %v1_1406d = add i32 %v0_14063, -224
  store i32 %v1_1406d, i32* @eax, align 4
  %v4_14076 = call i32 @function_2c5d2(i32 %v1_1406d, i32 %v3_14063, i32 %v3_14059, i32 %v3_1404f)
  %v0_1407b = load i32, i32* @ebp, align 4
  %v1_1407b = add i32 %v0_1407b, -396
  %v2_1407b = inttoptr i32 %v1_1407b to i32*
  %v3_1407b = load i32, i32* %v2_1407b, align 4
  %v1_14081 = add i32 %v0_1407b, -360
  %v1_14087 = add i32 %v0_1407b, -224
  %v4_140a9 = call i32 @_ZNKSt9_IdentityISt6vectorIhSaIhEEEclERKS2_(i32 %v1_14087, i32 %v1_14081, i32 %v3_1407b, i32 %v1_14087)
  %v0_140ae = load i32, i32* @ebp, align 4
  %v1_140ae = add i32 %v0_140ae, -368
  %v1_140bc = call i32 @function_1413b(i32 %v1_140ae)
  ret i32 %v1_140bc

; uselistorder directives
  uselistorder i32 %v1_14087, { 1, 0 }
  uselistorder i32 %v0_14063, { 1, 0, 3, 2 }
  uselistorder i32 %v4_1402a, { 1, 0 }
  uselistorder i32 -368, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 -400, { 0, 8, 1, 9, 7, 2, 3, 4, 5, 6 }
  uselistorder i32 -372, { 0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_14047, { 1, 0, 2 }
}

define i32 @function_140be() local_unnamed_addr {
dec_label_pc_140be:
  %eax.global-to-local = alloca i32, align 4
  %v0_140be = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_140be, i32* @ebx, align 4
  %v0_140c0 = load i32, i32* @ebp, align 4
  %v1_140c0 = add i32 %v0_140c0, -352
  store i32 %v1_140c0, i32* %eax.global-to-local, align 4
  %v1_140ce = call i32 @function_140d2(i32 %v1_140c0)
  store i32 %v1_140ce, i32* %eax.global-to-local, align 4
  ret i32 %v1_140ce
}

define i32 @function_140d0() local_unnamed_addr {
dec_label_pc_140d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_140d0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_140d0
}

define i32 @function_140d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_140d2:
  %v0_140d2 = load i32, i32* @ebp, align 4
  %v1_140ec = add i32 %v0_140d2, -336
  %v4_140f5 = call i32 @_ZNKSt9_IdentityISt6vectorIhSaIhEEEclERKS2_(i32 %v1_140ec, i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  %v0_140fa = call i32 @function_140fe()
  ret i32 %v0_140fa
}

define i32 @function_140fc() local_unnamed_addr {
dec_label_pc_140fc:
  %eax.global-to-local = alloca i32, align 4
  %v0_140fc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_140fc
}

define i32 @function_140fe() local_unnamed_addr {
dec_label_pc_140fe:
  %v0_140fe = load i32, i32* @ebp, align 4
  %v1_140fe = add i32 %v0_140fe, -388
  store i32 %v1_140fe, i32* @eax, align 4
  %v1_14107 = call i32 @function_292ee(i32 %v1_140fe)
  %v0_1410c = call i32 @function_14122()
  ret i32 %v0_1410c
}

define i32 @function_1410e() local_unnamed_addr {
dec_label_pc_1410e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1410e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1410e, i32* @ebx, align 4
  %v0_14110 = load i32, i32* @ebp, align 4
  %v1_14110 = add i32 %v0_14110, -224
  store i32 %v1_14110, i32* %eax.global-to-local, align 4
  %v4_14119 = call i32 @_ZNKSt9_IdentityISt6vectorIhSaIhEEEclERKS2_(i32 %v1_14110, i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  store i32 %v4_14119, i32* %eax.global-to-local, align 4
  %v0_1411e = call i32 @function_14122()
  store i32 %v0_1411e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1411e

; uselistorder directives
  uselistorder i32 ()* @function_14122, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_ZNKSt9_IdentityISt6vectorIhSaIhEEEclERKS2_, { 2, 1, 0 }
  uselistorder i32 -224, { 0, 1, 2, 6, 3, 7, 8, 9, 4, 5 }
}

define i32 @function_14121() local_unnamed_addr {
dec_label_pc_14121:
  %eax.global-to-local = alloca i32, align 4
  %v0_14121 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14121
}

define i32 @function_14122() local_unnamed_addr {
dec_label_pc_14122:
  %v0_14130 = load i32, i32* @ebx, align 4
  ret i32 %v0_14130
}

define i32 @function_1413a() local_unnamed_addr {
dec_label_pc_1413a:
  %v0_1413a = load i32, i32* @eax, align 4
  ret i32 %v0_1413a
}

define i32 @function_1413b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1413b:
  %v0_1413b = load i32, i32* @ebp, align 4
  %v1_1413b = add i32 %v0_1413b, -12
  %v2_1413b = inttoptr i32 %v1_1413b to i32*
  %v3_1413b = load i32, i32* %v2_1413b, align 4
  %v1_1413e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1413e = xor i32 %v1_1413e, %v3_1413b
  %v3_1413e = icmp eq i32 %v2_1413e, 0
  store i32 %v2_1413e, i32* @eax, align 4
  br i1 %v3_1413e, label %bb, label %dec_label_pc_14147

bb:                                               ; preds = %dec_label_pc_1413b
  %v1_14145 = call i32 @function_1414c()
  br label %dec_label_pc_14147

dec_label_pc_14147:                               ; preds = %bb, %dec_label_pc_1413b
  %v2_14145 = phi i32 [ %v1_14145, %bb ], [ %v2_1413e, %dec_label_pc_1413b ]
  ret i32 %v2_14145
}

define i32 @function_1414c() local_unnamed_addr {
dec_label_pc_1414c:
  %v0_14150 = load i32, i32* @eax, align 4
  ret i32 %v0_14150
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14152:
  store i32 %arg1, i32* @eax, align 4
  %v1_1416f = call i32 @function_2ce1c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14180

bb:                                               ; preds = %dec_label_pc_14152
  %v1_1417e = call i32 @function_14185()
  br label %dec_label_pc_14180

dec_label_pc_14180:                               ; preds = %bb, %dec_label_pc_14152
  %v2_1417e = phi i32 [ %v1_1417e, %bb ], [ 0, %dec_label_pc_14152 ]
  ret i32 %v2_1417e

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14185() local_unnamed_addr {
dec_label_pc_14185:
  %v0_14186 = load i32, i32* @eax, align 4
  ret i32 %v0_14186
}

define i32 @_ZN15CSignatureCacheC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14188:
  %v1_141a6 = call i32 @function_2cde6(i32 %arg1)
  %v1_141ae = add i32 %arg1, 24
  store i32 %v1_141ae, i32* @eax, align 4
  %v1_141b4 = call i32 @function_24b86(i32 %v1_141ae)
  %v0_141b9 = call i32 @function_141d2()
  ret i32 %v0_141b9
}

define i32 @function_141bc() local_unnamed_addr {
dec_label_pc_141bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_141bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_141bc
}

define i32 @function_141d2() local_unnamed_addr {
dec_label_pc_141d2:
  %v0_141d2 = load i32, i32* @ebp, align 4
  %v1_141d2 = add i32 %v0_141d2, -12
  %v2_141d2 = inttoptr i32 %v1_141d2 to i32*
  %v3_141d2 = load i32, i32* %v2_141d2, align 4
  %v1_141d5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_141d5 = xor i32 %v1_141d5, %v3_141d2
  ret i32 %v2_141d5
}

define i32 @_ZN15CSignatureCacheD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_141ea:
  %v1_14204 = add i32 %arg1, 24
  store i32 %v1_14204, i32* @eax, align 4
  %v1_1420a = call i32 @function_24cb2(i32 %v1_14204)
  store i32 %arg1, i32* @eax, align 4
  %v1_14215 = call i32 @function_2833c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14226

bb:                                               ; preds = %dec_label_pc_141ea
  %v1_14224 = call i32 @function_1422b()
  br label %dec_label_pc_14226

dec_label_pc_14226:                               ; preds = %bb, %dec_label_pc_141ea
  %v2_14224 = phi i32 [ %v1_14224, %bb ], [ 0, %dec_label_pc_141ea ]
  ret i32 %v2_14224

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1422b() local_unnamed_addr {
dec_label_pc_1422b:
  %v0_1422c = load i32, i32* @eax, align 4
  ret i32 %v0_1422c
}

define i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1422e:
  store i32 %arg1, i32* @eax, align 4
  %v1_1424b = call i32 @function_2d08e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1425c

bb:                                               ; preds = %dec_label_pc_1422e
  %v1_1425a = call i32 @function_14261()
  br label %dec_label_pc_1425c

dec_label_pc_1425c:                               ; preds = %bb, %dec_label_pc_1422e
  %v2_1425a = phi i32 [ %v1_1425a, %bb ], [ 0, %dec_label_pc_1422e ]
  ret i32 %v2_1425a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14261() local_unnamed_addr {
dec_label_pc_14261:
  %v0_14262 = load i32, i32* @eax, align 4
  ret i32 %v0_14262
}

define i32 @_ZNSt4pairI10txnouttype7CScriptED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14264:
  %v1_1427e = add i32 %arg1, 4
  store i32 %v1_1427e, i32* @eax, align 4
  %v1_14284 = call i32 @function_26a54(i32 %v1_1427e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14295

bb:                                               ; preds = %dec_label_pc_14264
  %v1_14293 = call i32 @function_1429a()
  br label %dec_label_pc_14295

dec_label_pc_14295:                               ; preds = %bb, %dec_label_pc_14264
  %v2_14293 = phi i32 [ %v1_14293, %bb ], [ 0, %dec_label_pc_14264 ]
  ret i32 %v2_14293
}

define i32 @function_1429a() local_unnamed_addr {
dec_label_pc_1429a:
  %v0_1429b = load i32, i32* @eax, align 4
  ret i32 %v0_1429b
}

define i32 @_ZNSt4pairIK10txnouttype7CScriptED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1429c:
  %v1_142b6 = add i32 %arg1, 4
  store i32 %v1_142b6, i32* @eax, align 4
  %v1_142bc = call i32 @function_26a8c(i32 %v1_142b6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_142cd

bb:                                               ; preds = %dec_label_pc_1429c
  %v1_142cb = call i32 @function_142d2()
  br label %dec_label_pc_142cd

dec_label_pc_142cd:                               ; preds = %bb, %dec_label_pc_1429c
  %v2_142cb = phi i32 [ %v1_142cb, %bb ], [ 0, %dec_label_pc_1429c ]
  ret i32 %v2_142cb
}

define i32 @function_142d2() local_unnamed_addr {
dec_label_pc_142d2:
  %v0_142d3 = load i32, i32* @eax, align 4
  ret i32 %v0_142d3
}

define i32 @_ZN22CKeyStoreIsMineVisitorC1EPK9CKeyStore(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142d4:
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* @eax, align 4
  %v1_142f7 = call i32 @function_2d7bc(i32 %tmp6)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14310

bb:                                               ; preds = %dec_label_pc_142d4
  %v1_1430e = call i32 @function_14315()
  br label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %bb, %dec_label_pc_142d4
  %v2_1430e = phi i32 [ %v1_1430e, %bb ], [ 0, %dec_label_pc_142d4 ]
  ret i32 %v2_1430e

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_14315() local_unnamed_addr {
dec_label_pc_14315:
  %v0_14316 = load i32, i32* @eax, align 4
  ret i32 %v0_14316
}

define i32 @_ZNK22CKeyStoreIsMineVisitorclERK14CNoDestination(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14318:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14346

bb:                                               ; preds = %dec_label_pc_14318
  %v3_14344 = call i32 @function_1434b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_14346

dec_label_pc_14346:                               ; preds = %bb, %dec_label_pc_14318
  %v4_14344 = phi i32 [ %v3_14344, %bb ], [ 0, %dec_label_pc_14318 ]
  ret i32 %v4_14344
}

define i32 @function_1434b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1434b:
  %v0_1434c = load i32, i32* @eax, align 4
  ret i32 %v0_1434c
}

define i32 @_ZNK22CKeyStoreIsMineVisitorclERK6CKeyID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1434e:
  %v2_1437a = load i32, i32* %arg1, align 4
  store i32 %v2_1437a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14394

bb:                                               ; preds = %dec_label_pc_1434e
  %v3_14392 = call i32 @function_14399(i32 %v2_1437a, i32 %arg2)
  br label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %bb, %dec_label_pc_1434e
  %v4_14392 = phi i32 [ %v3_14392, %bb ], [ %v2_1437a, %dec_label_pc_1434e ]
  ret i32 %v4_14392
}

define i32 @function_14399(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14399:
  %v0_1439a = load i32, i32* @eax, align 4
  ret i32 %v0_1439a
}

define i32 @_ZNK22CKeyStoreIsMineVisitorclERK9CScriptID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1439c:
  %v2_143c8 = load i32, i32* %arg1, align 4
  store i32 %v2_143c8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_143e2

bb:                                               ; preds = %dec_label_pc_1439c
  %v3_143e0 = call i32 @function_143e7(i32 %v2_143c8, i32 %arg2)
  br label %dec_label_pc_143e2

dec_label_pc_143e2:                               ; preds = %bb, %dec_label_pc_1439c
  %v4_143e0 = phi i32 [ %v3_143e0, %bb ], [ %v2_143c8, %dec_label_pc_1439c ]
  ret i32 %v4_143e0
}

define i32 @function_143e7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_143e7:
  %v0_143e8 = load i32, i32* @eax, align 4
  ret i32 %v0_143e8
}

define i32 @_ZN22CKeyStoreIsMineVisitorD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_143ea:
  store i32 %arg1, i32* @eax, align 4
  %v1_14407 = call i32 @function_2d908(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14418

bb:                                               ; preds = %dec_label_pc_143ea
  %v1_14416 = call i32 @function_1441d()
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %bb, %dec_label_pc_143ea
  %v2_14416 = phi i32 [ %v1_14416, %bb ], [ 0, %dec_label_pc_143ea ]
  ret i32 %v2_14416

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1441d() local_unnamed_addr {
dec_label_pc_1441d:
  %v0_1441e = load i32, i32* @eax, align 4
  ret i32 %v0_1441e
}

define i32 @_ZN20CAffectedKeysVisitorC1ERK9CKeyStoreRSt6vectorI6CKeyIDSaIS4_EE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14420:
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v1_14449 = call i32 @function_28e4a(i32 %tmp8)
  store i32 %arg2, i32* %arg1, align 4
  %v2_1445c = add i32 %tmp8, 4
  %v3_1445c = inttoptr i32 %v2_1445c to i32*
  store i32 %arg3, i32* %v3_1445c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1446b

bb:                                               ; preds = %dec_label_pc_14420
  %v1_14469 = call i32 @function_14470()
  br label %dec_label_pc_1446b

dec_label_pc_1446b:                               ; preds = %bb, %dec_label_pc_14420
  %v2_14469 = phi i32 [ %v1_14469, %bb ], [ 0, %dec_label_pc_14420 ]
  ret i32 %v2_14469

; uselistorder directives
  uselistorder i32 %tmp8, { 1, 0 }
}

define i32 @function_14470() local_unnamed_addr {
dec_label_pc_14470:
  %v0_14471 = load i32, i32* @eax, align 4
  ret i32 %v0_14471
}

define i32 @_ZN20CAffectedKeysVisitor7ProcessERK7CScript(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14472:
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %v2_14490 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_14490, i32* @eax, align 4
  %v1_14496 = call i32 @function_2df6e(i32 %v2_14490)
  %v2_1449b = ptrtoint i32* %stack_var_-52 to i32
  %v2_144a9 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg2, i32* @eax, align 4
  %v4_144b6 = call i32 @function_1a428(i32 %arg2, i32 %v2_144a9, i32 %v2_14490, i32 %v2_1449b)
  %v4_144bb = trunc i32 %v4_144b6 to i8
  %v5_144bb = icmp eq i8 %v4_144bb, 0
  br i1 %v5_144bb, label %dec_label_pc_1461b, label %dec_label_pc_144c3

dec_label_pc_144c3:                               ; preds = %dec_label_pc_14472
  %v2_144c3 = ptrtoint i32* %stack_var_-48 to i32
  %v3_144d8 = call i32 @function_2e01d(i32 %v2_144c3, i32 %v2_14490, i32 0)
  %v1_144ec = call i32 @function_1d3c2(i32 %v2_144c3)
  %v4_144f1 = trunc i32 %v1_144ec to i8
  %v5_144f1 = icmp eq i8 %v4_144f1, 0
  %v1_144f3 = icmp eq i1 %v5_144f1, false
  br i1 %v1_144f3, label %dec_label_pc_1461b, label %dec_label_pc_144f9

dec_label_pc_144f9:                               ; preds = %dec_label_pc_144c3
  %v2_144f9 = ptrtoint i32* %stack_var_-44 to i32
  %v5_14516 = call i32 @function_2e078(i32 %v2_144f9, i32 %v2_144c3, i8 0, i32 0)
  %v1_1452a = call i32 @function_1d3c2(i32 %v2_144f9)
  %v4_1452f = trunc i32 %v1_1452a to i8
  %v5_1452f = icmp eq i8 %v4_1452f, 0
  %v1_14531 = icmp eq i1 %v5_1452f, false
  br i1 %v1_14531, label %dec_label_pc_1461b, label %dec_label_pc_14537

dec_label_pc_14537:                               ; preds = %dec_label_pc_144f9
  %v2_14537 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_14537, i32* @eax, align 4
  %v4_14554 = call i32 @function_2e0f2(i32 %v2_14537, i32 %v2_144c3, i32 0, i32 0)
  store i32 %v2_14537, i32* %stack_var_-120, align 4
  %v1_14568 = call i32 @function_1d3c2(i32 %v2_14537)
  %v4_1456d = trunc i32 %v1_14568 to i8
  %v5_1456d = icmp eq i8 %v4_1456d, 0
  %v1_1456f = icmp eq i1 %v5_1456d, false
  br i1 %v1_1456f, label %dec_label_pc_1461b, label %dec_label_pc_14575

dec_label_pc_14575:                               ; preds = %dec_label_pc_14537
  store i8 1, i8* %stack_var_-17, align 1
  %v2_1457b = ptrtoint i8* %stack_var_-17 to i32
  br label %dec_label_pc_145de

dec_label_pc_1457b:                               ; preds = %dec_label_pc_14613
  store i32 %v2_1457b, i32* %stack_var_-120, align 4
  %v1_14581 = call i32 @function_1d3f1(i32 %v2_1457b)
  %v4_14586 = trunc i32 %v1_14581 to i8
  %v5_14586 = icmp eq i8 %v4_14586, 0
  %v1_14588 = icmp eq i1 %v5_14586, false
  br i1 %v1_14588, label %dec_label_pc_1457b.dec_label_pc_145c3_crit_edge, label %dec_label_pc_1458a

dec_label_pc_1457b.dec_label_pc_145c3_crit_edge:  ; preds = %dec_label_pc_1457b
  %v3_145c3.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_145c3

dec_label_pc_1458a:                               ; preds = %dec_label_pc_1457b
  store i32 %v2_144f9, i32* @eax, align 4
  store i32 %v2_144f9, i32* %stack_var_-120, align 4
  %v2_14598 = call i32 @function_2e20e(i32 %v2_144f9, i32 0)
  %v3_145b8.pre = load i8, i8* %stack_var_-17, align 1
  %v5_145bf47 = icmp eq i8 %v3_145b8.pre, 1
  %v1_145c149 = icmp eq i1 %v5_145bf47, false
  br i1 %v1_145c149, label %dec_label_pc_145b8.dec_label_pc_145c3.loopexit_crit_edge, label %dec_label_pc_145c3

dec_label_pc_145b8.dec_label_pc_145c3.loopexit_crit_edge: ; preds = %dec_label_pc_1458a
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg1, i32* %stack_var_-120, align 4
  %v2_145af = call i32 @function_2e251(i32 %arg1, i32 %v2_14598)
  store i8 1, i8* %stack_var_-17, align 1
  br label %dec_label_pc_145c3

dec_label_pc_145c3:                               ; preds = %dec_label_pc_1458a, %dec_label_pc_145b8.dec_label_pc_145c3.loopexit_crit_edge, %dec_label_pc_1457b.dec_label_pc_145c3_crit_edge
  %v3_145c3 = phi i8 [ %v3_145c3.pre, %dec_label_pc_1457b.dec_label_pc_145c3_crit_edge ], [ 1, %dec_label_pc_145b8.dec_label_pc_145c3.loopexit_crit_edge ], [ %v3_145b8.pre, %dec_label_pc_1458a ]
  %v5_145c7 = icmp eq i8 %v3_145c3, 0
  br i1 %v5_145c7, label %dec_label_pc_145de, label %dec_label_pc_145cb

dec_label_pc_145cb:                               ; preds = %dec_label_pc_145c3
  store i32 %v2_144f9, i32* %stack_var_-120, align 4
  %v2_145d9 = call i32 @function_2e1cb(i32 %v2_144f9, i32 0)
  %v3_145de.pre.pre = load i8, i8* %stack_var_-17, align 1
  br label %dec_label_pc_145de

dec_label_pc_145de:                               ; preds = %dec_label_pc_145cb, %dec_label_pc_145c3, %dec_label_pc_14575
  %v3_145de = phi i8 [ 1, %dec_label_pc_14575 ], [ 0, %dec_label_pc_145c3 ], [ %v3_145de.pre.pre, %dec_label_pc_145cb ]
  %v5_145e2 = icmp eq i8 %v3_145de, 0
  br i1 %v5_145e2, label %dec_label_pc_1460e, label %dec_label_pc_145e6

dec_label_pc_145e6:                               ; preds = %dec_label_pc_145de
  store i32 %v2_144f9, i32* %stack_var_-120, align 4
  %v3_145fb = call i32 @function_2e16c(i32 %v2_144f9, i32 %v2_14537, i32 0)
  %v1_14600 = xor i32 %v3_145fb, 1
  %v4_14600 = trunc i32 %v1_14600 to i8
  %v5_14603 = icmp eq i8 %v4_14600, 0
  br i1 %v5_14603, label %dec_label_pc_1460e, label %dec_label_pc_14613

dec_label_pc_1460e:                               ; preds = %dec_label_pc_145e6, %dec_label_pc_145de
  br label %dec_label_pc_14613

dec_label_pc_14613:                               ; preds = %dec_label_pc_145e6, %dec_label_pc_1460e
  %storemerge = phi i1 [ false, %dec_label_pc_1460e ], [ true, %dec_label_pc_145e6 ]
  br i1 %storemerge, label %dec_label_pc_1457b, label %dec_label_pc_1461b

dec_label_pc_1461b:                               ; preds = %dec_label_pc_14613, %dec_label_pc_14537, %dec_label_pc_144f9, %dec_label_pc_144c3, %dec_label_pc_14472
  store i32 %v2_14490, i32* @eax, align 4
  %v1_1461e = load i32, i32* @esp, align 4
  %v2_1461e = inttoptr i32 %v1_1461e to i32*
  store i32 %v2_14490, i32* %v2_1461e, align 4
  %v0_14621 = load i32, i32* %stack_var_-120, align 4
  %v1_14621 = call i32 @function_2dfa4(i32 %v0_14621)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1464b

bb:                                               ; preds = %dec_label_pc_1461b
  %v1_14630 = call i32 @function_14650()
  br label %dec_label_pc_1464b

dec_label_pc_1464b:                               ; preds = %dec_label_pc_1461b, %bb
  %v0_14632 = phi i32 [ 0, %dec_label_pc_1461b ], [ %v1_14630, %bb ]
  ret i32 %v0_14632

; uselistorder directives
  uselistorder i8 %v3_145b8.pre, { 1, 0 }
  uselistorder i32 %v2_1457b, { 1, 0 }
  uselistorder i32 %v2_14537, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_144f9, { 1, 0, 6, 5, 4, 3, 2, 7, 8 }
  uselistorder i32 %v2_14490, { 2, 3, 1, 0, 4, 5 }
  uselistorder i8* %stack_var_-17, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 (i32)* @function_1d3c2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1464b, { 1, 0 }
  uselistorder label %dec_label_pc_14613, { 1, 0 }
  uselistorder label %dec_label_pc_145c3, { 1, 0, 2 }
}

define i32 @function_14634() local_unnamed_addr {
dec_label_pc_14634:
  %eax.global-to-local = alloca i32, align 4
  %v0_14634 = load i32, i32* %eax.global-to-local, align 4
  %v0_14636 = load i32, i32* @ebp, align 4
  %v1_14636 = add i32 %v0_14636, -64
  store i32 %v1_14636, i32* @eax, align 4
  %v1_1463c = call i32 @function_2dfa4(i32 %v1_14636)
  store i32 %v0_14634, i32* %eax.global-to-local, align 4
  ret i32 %v0_14634

; uselistorder directives
  uselistorder i32 %v0_14634, { 1, 0 }
  uselistorder i32 (i32)* @function_2dfa4, { 1, 0 }
}

define i32 @function_14650() local_unnamed_addr {
dec_label_pc_14650:
  %v0_14654 = load i32, i32* @eax, align 4
  ret i32 %v0_14654
}

define i32 @_ZN20CAffectedKeysVisitorclERK6CKeyID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14656:
  %v2_14682 = load i32, i32* %arg1, align 4
  %v4_14690 = trunc i32 %v2_14682 to i8
  %v5_14690 = icmp eq i8 %v4_14690, 0
  br i1 %v5_14690, label %dec_label_pc_146a9, label %dec_label_pc_14694

dec_label_pc_14694:                               ; preds = %dec_label_pc_14656
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_14697 = add i32 %tmp104, 4
  %v2_14697 = inttoptr i32 %v1_14697 to i32*
  %v3_14697 = load i32, i32* %v2_14697, align 4
  store i32 %v3_14697, i32* @eax, align 4
  %v2_146a4 = call i32 @function_2e478(i32 %v3_14697, i32 %arg2)
  br label %dec_label_pc_146a9

dec_label_pc_146a9:                               ; preds = %dec_label_pc_14694, %dec_label_pc_14656
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_146b5

bb:                                               ; preds = %dec_label_pc_146a9
  %v1_146b3 = call i32 @function_146ba()
  br label %dec_label_pc_146b5

dec_label_pc_146b5:                               ; preds = %bb, %dec_label_pc_146a9
  %v2_146b3 = phi i32 [ %v1_146b3, %bb ], [ 0, %dec_label_pc_146a9 ]
  ret i32 %v2_146b3

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_146ba() local_unnamed_addr {
dec_label_pc_146ba:
  %v0_146bb = load i32, i32* @eax, align 4
  ret i32 %v0_146bb
}

define i32 @_ZN20CAffectedKeysVisitorclERK9CScriptID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_146bc:
  %stack_var_-28 = alloca i32, align 4
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v2_146da = ptrtoint i32* %stack_var_-28 to i32
  %v1_146e0 = call i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE7destroyEPS9_(i32 %v2_146da)
  %v2_146f4 = load i32, i32* %arg1, align 4
  %v4_14709 = trunc i32 %v2_146f4 to i8
  %v5_14709 = icmp eq i8 %v4_14709, 0
  br i1 %v5_14709, label %dec_label_pc_1471f, label %dec_label_pc_1470d

dec_label_pc_1470d:                               ; preds = %dec_label_pc_146bc
  store i32 %tmp105, i32* @eax, align 4
  %v3_1471a = call i32 @function_28b2e(i32 %tmp105, i32 %v2_146da, i32 %v2_146da)
  br label %dec_label_pc_1471f

dec_label_pc_1471f:                               ; preds = %dec_label_pc_1470d, %dec_label_pc_146bc
  %v1_14725 = call i32 @function_26eac(i32 %v2_146da)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14736

bb:                                               ; preds = %dec_label_pc_1471f
  %v1_14734 = call i32 @function_14754()
  store i32 %v1_14734, i32* @eax, align 4
  br label %dec_label_pc_14736

dec_label_pc_14736:                               ; preds = %bb, %dec_label_pc_1471f
  %v0_14736 = call i32 @function_1474f()
  ret i32 %v0_14736

; uselistorder directives
  uselistorder i32 %v2_146da, { 2, 0, 1, 3 }
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_14739() local_unnamed_addr {
dec_label_pc_14739:
  %eax.global-to-local = alloca i32, align 4
  %v0_14739 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14739
}

define i32 @function_1474f() local_unnamed_addr {
dec_label_pc_1474f:
  %v0_1474f = load i32, i32* @eax, align 4
  ret i32 %v0_1474f
}

define i32 @function_14754() local_unnamed_addr {
dec_label_pc_14754:
  %v0_14759 = load i32, i32* @eax, align 4
  ret i32 %v0_14759
}

define i32 @_ZN20CAffectedKeysVisitorclERK14CNoDestination() local_unnamed_addr {
dec_label_pc_1475a:
  %eax.global-to-local = alloca i32, align 4
  %v2_1475b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1475b
}

define i32 @function_1475e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1475e:
  %v0_1475f = load i32, i32* @ebx, align 4
  %v1_1475f = add i32 %v0_1475f, 1166608453
  %v2_1475f = inttoptr i32 %v1_1475f to i8*
  %v3_1475f = load i8, i8* %v2_1475f, align 1
  %v4_1475f = load i32, i32* @ecx, align 4
  %v5_1475f = trunc i32 %v4_1475f to i8
  %v6_1475f = sub i8 %v3_1475f, %v5_1475f
  store i8 %v6_1475f, i8* %v2_1475f, align 1
  %v0_14767 = load i32, i32* @ebp, align 4
  %v1_1476a = add i32 %v0_14767, 2
  store i32 %v1_1476a, i32* @ebp, align 4
  %v0_1476d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_14772 = add i32 %v0_14767, -10
  %v3_14772 = inttoptr i32 %v2_14772 to i32*
  store i32 %v0_1476d, i32* %v3_14772, align 4
  %v0_14777 = load i32, i32* @ebp, align 4
  %v1_14777 = add i32 %v0_14777, -12
  %v2_14777 = inttoptr i32 %v1_14777 to i32*
  %v3_14777 = load i32, i32* %v2_14777, align 4
  %v1_1477a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1477a = xor i32 %v1_1477a, %v3_14777
  %v3_1477a = icmp eq i32 %v2_1477a, 0
  store i32 %v2_1477a, i32* @eax, align 4
  br i1 %v3_1477a, label %bb, label %dec_label_pc_14783

bb:                                               ; preds = %dec_label_pc_1475e
  %v1_14781 = call i32 @function_14788()
  br label %dec_label_pc_14783

dec_label_pc_14783:                               ; preds = %bb, %dec_label_pc_1475e
  %v3_14781 = phi i32 [ %v1_14781, %bb ], [ %v2_1477a, %dec_label_pc_1475e ]
  ret i32 %v3_14781
}

define i32 @function_14788() local_unnamed_addr {
dec_label_pc_14788:
  %v0_14789 = load i32, i32* @eax, align 4
  ret i32 %v0_14789
}

define i32 @_ZN20CAffectedKeysVisitorD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1478a:
  %v1_147a7 = call i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_147b8

bb:                                               ; preds = %dec_label_pc_1478a
  %v1_147b6 = call i32 @function_147bd()
  br label %dec_label_pc_147b8

dec_label_pc_147b8:                               ; preds = %bb, %dec_label_pc_1478a
  %v2_147b6 = phi i32 [ %v1_147b6, %bb ], [ 0, %dec_label_pc_1478a ]
  ret i32 %v2_147b6
}

define i32 @function_147bd() local_unnamed_addr {
dec_label_pc_147bd:
  %v0_147be = load i32, i32* @eax, align 4
  ret i32 %v0_147be
}

define i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_147c0:
  store i32 %arg1, i32* @eax, align 4
  %v1_147dd = call i32 @function_2e982(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_147f6:
  store i32 %arg1, i32* @eax, align 4
  %v1_14813 = call i32 @function_2ed4c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14824

bb:                                               ; preds = %dec_label_pc_147f6
  %v1_14822 = call i32 @function_14829()
  br label %dec_label_pc_14824

dec_label_pc_14824:                               ; preds = %bb, %dec_label_pc_147f6
  %v2_14822 = phi i32 [ %v1_14822, %bb ], [ 0, %dec_label_pc_147f6 ]
  ret i32 %v2_14822

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14829() local_unnamed_addr {
dec_label_pc_14829:
  %v0_1482a = load i32, i32* @eax, align 4
  ret i32 %v0_1482a
}

define i32 @_ZN14CScriptVisitorC1EP7CScript(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1482c:
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* @eax, align 4
  %v1_1484f = call i32 @function_2dd14(i32 %tmp6)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14868

bb:                                               ; preds = %dec_label_pc_1482c
  %v1_14866 = call i32 @function_1486d()
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %bb, %dec_label_pc_1482c
  %v2_14866 = phi i32 [ %v1_14866, %bb ], [ 0, %dec_label_pc_1482c ]
  ret i32 %v2_14866

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_1486d() local_unnamed_addr {
dec_label_pc_1486d:
  %v0_1486e = load i32, i32* @eax, align 4
  ret i32 %v0_1486e
}

define i32 @_ZNK14CScriptVisitorclERK14CNoDestination(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14870:
  %v2_14890 = load i32, i32* %arg1, align 4
  %v1_14895 = call i32 @function_2b82a(i32 %v2_14890)
  ret i32 0
}

define i32 @_ZNK14CScriptVisitorclERK6CKeyID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_148b2:
  %v2_148d3 = load i32, i32* %arg1, align 4
  store i32 %v2_148d3, i32* @eax, align 4
  %v1_148d8 = call i32 @function_2b86c(i32 %v2_148d3)
  %v2_148e3 = load i32, i32* %arg1, align 4
  store i32 %v2_148e3, i32* @eax, align 4
  %v3_148f0 = call i32 @function_271b0(i32 %v2_148e3, i32 118)
  store i32 %v3_148f0, i32* @eax, align 4
  %v3_14900 = call i32 @function_271b0(i32 %v3_148f0, i32 -87)
  store i32 %v3_14900, i32* @eax, align 4
  %v3_1491c = call i32 @function_271b0(i32 %v3_14900, i32 sext (i8 ptrtoint (i8* @global_var_88.2212 to i8) to i32))
  store i32 %v3_1491c, i32* @eax, align 4
  %v3_1492c = call i32 @function_271b0(i32 %v3_1491c, i32 -84)
  store i32 1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14942

bb:                                               ; preds = %dec_label_pc_148b2
  %v1_14940 = call i32 @function_14947()
  br label %dec_label_pc_14942

dec_label_pc_14942:                               ; preds = %bb, %dec_label_pc_148b2
  %v2_14940 = phi i32 [ %v1_14940, %bb ], [ 1, %dec_label_pc_148b2 ]
  ret i32 %v2_14940

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_271b0, { 3, 2, 1, 0 }
}

define i32 @function_14947() local_unnamed_addr {
dec_label_pc_14947:
  %v0_1494c = load i32, i32* @eax, align 4
  ret i32 %v0_1494c
}

define i32 @_ZNK14CScriptVisitorclERK9CScriptID(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1494e:
  %v2_1496f = load i32, i32* %arg1, align 4
  %v1_14974 = call i32 @function_2b908(i32 %v2_1496f)
  %v2_1497f = load i32, i32* %arg1, align 4
  store i32 %v2_1497f, i32* @eax, align 4
  %v2_1498c = call i32 @function_2724c(i32 %v2_1497f, i32 169)
  store i32 %v2_1498c, i32* @eax, align 4
  %v2_14998 = call i32 @function_27376(i32 %v2_1498c, i32 %arg2)
  store i32 %v2_14998, i32* @eax, align 4
  %v2_149a8 = call i32 @function_2724c(i32 %v2_14998, i32 ptrtoint (i32* @global_var_87.2233 to i32))
  store i32 1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_149be

bb:                                               ; preds = %dec_label_pc_1494e
  %v1_149bc = call i32 @function_149c3()
  br label %dec_label_pc_149be

dec_label_pc_149be:                               ; preds = %bb, %dec_label_pc_1494e
  %v2_149bc = phi i32 [ %v1_149bc, %bb ], [ 1, %dec_label_pc_1494e ]
  ret i32 %v2_149bc

; uselistorder directives
  uselistorder i32 -792, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @function_2724c, { 1, 0 }
  uselistorder i32 169, { 2, 3, 0, 1, 4 }
}

define i32 @function_149c3() local_unnamed_addr {
dec_label_pc_149c3:
  %v0_149c8 = load i32, i32* @eax, align 4
  ret i32 %v0_149c8
}

define i32 @_ZN14CScriptVisitorD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_149ca:
  store i32 %arg1, i32* @eax, align 4
  %v1_149e7 = call i32 @function_2dee8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_149f8

bb:                                               ; preds = %dec_label_pc_149ca
  %v1_149f6 = call i32 @function_149fd()
  br label %dec_label_pc_149f8

dec_label_pc_149f8:                               ; preds = %bb, %dec_label_pc_149ca
  %v2_149f6 = phi i32 [ %v1_149f6, %bb ], [ 0, %dec_label_pc_149ca ]
  ret i32 %v2_149f6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_149fd() local_unnamed_addr {
dec_label_pc_149fd:
  %v0_149fe = load i32, i32* @eax, align 4
  ret i32 %v0_149fe
}

define i32 @_ZN5boost6detail21is_static_visitor_tagC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a00:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14a23

bb:                                               ; preds = %dec_label_pc_14a00
  %v2_14a21 = call i32 @function_14a28(i32 %arg1)
  br label %dec_label_pc_14a23

dec_label_pc_14a23:                               ; preds = %bb, %dec_label_pc_14a00
  %v3_14a21 = phi i32 [ %v2_14a21, %bb ], [ 0, %dec_label_pc_14a00 ]
  ret i32 %v3_14a21
}

define i32 @function_14a28(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a28:
  %v0_14a29 = load i32, i32* @eax, align 4
  ret i32 %v0_14a29
}

define i32 @_ZN5boost14static_visitorIvEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a2a:
  store i32 %arg1, i32* @eax, align 4
  %v1_14a47 = call i32 @function_2942a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14a58

bb:                                               ; preds = %dec_label_pc_14a2a
  %v1_14a56 = call i32 @function_14a5d()
  br label %dec_label_pc_14a58

dec_label_pc_14a58:                               ; preds = %bb, %dec_label_pc_14a2a
  %v2_14a56 = phi i32 [ %v1_14a56, %bb ], [ 0, %dec_label_pc_14a2a ]
  ret i32 %v2_14a56

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14a5d() local_unnamed_addr {
dec_label_pc_14a5d:
  %v0_14a5e = load i32, i32* @eax, align 4
  ret i32 %v0_14a5e
}

define i32 @_ZN5boost14static_visitorIvED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a60:
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_14a8a:
  %ebp.global-to-local = alloca i32, align 4
  %v0_14a8a = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  store i32 %v0_14a8a, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_14abe:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_14adb = call i32 @function_2f9e6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14aec

bb:                                               ; preds = %dec_label_pc_14abe
  %v1_14aea = call i32 @function_14af1()
  br label %dec_label_pc_14aec

dec_label_pc_14aec:                               ; preds = %bb, %dec_label_pc_14abe
  %v2_14aea = phi i32 [ %v1_14aea, %bb ], [ 0, %dec_label_pc_14abe ]
  ret i32 %v2_14aea

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_14af1() local_unnamed_addr {
dec_label_pc_14af1:
  %v0_14af2 = load i32, i32* @eax, align 4
  ret i32 %v0_14af2
}

define i32 @_ZNK5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE3getEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_14af4:
  %v2_14b0e = load i32, i32* %arg1, align 4
  store i32 %v2_14b0e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14b1c

bb:                                               ; preds = %dec_label_pc_14af4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_14b1a = call i32 @function_14b21(i32 %tmp100)
  br label %dec_label_pc_14b1c

dec_label_pc_14b1c:                               ; preds = %bb, %dec_label_pc_14af4
  %v3_14b1a = phi i32 [ %v2_14b1a, %bb ], [ %v2_14b0e, %dec_label_pc_14af4 ]
  ret i32 %v3_14b1a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_14b21(i32 %arg1) local_unnamed_addr {
dec_label_pc_14b21:
  %v0_14b22 = load i32, i32* @eax, align 4
  ret i32 %v0_14b22
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEaSERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_14b24:
  %v2_14b44 = load i32, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_14b50 = call i32 @function_2aae6(i32 %arg1, i32 %v2_14b44)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14b64

bb:                                               ; preds = %dec_label_pc_14b24
  %v1_14b62 = call i32 @function_14b69()
  br label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %bb, %dec_label_pc_14b24
  %v2_14b62 = phi i32 [ %v1_14b62, %bb ], [ %arg1, %dec_label_pc_14b24 ]
  ret i32 %v2_14b62

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_14b69() local_unnamed_addr {
dec_label_pc_14b69:
  %v0_14b6a = load i32, i32* @eax, align 4
  ret i32 %v0_14b6a
}

define i32 @_ZN5boost16exception_detail10clone_baseC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b6c:
  store i32 ptrtoint (i32* @global_var_38368.2237 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14b9e

bb:                                               ; preds = %dec_label_pc_14b6c
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_14b9c = call i32 @function_14ba3(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_14b9e

dec_label_pc_14b9e:                               ; preds = %bb, %dec_label_pc_14b6c
  %v4_14b9c = phi i32 [ %v3_14b9c, %bb ], [ 0, %dec_label_pc_14b6c ]
  ret i32 %v4_14b9c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_14ba3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ba3:
  %v0_14ba4 = load i32, i32* @eax, align 4
  ret i32 %v0_14ba4
}

define i32 @_ZN5boost16thread_exceptionC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ba6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 4
  store i32 %tmp103, i32* @eax, align 4
  %v2_14bd0 = call i32 @function_2440e(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38350_type* @global_var_38350.2238 to i32), i32* %arg1, align 4
  %v1_14be1 = add i32 %arg2, 4
  %v2_14be1 = inttoptr i32 %v1_14be1 to i32*
  %v3_14be1 = load i32, i32* %v2_14be1, align 4
  %v2_14be7 = add i32 %tmp103, 4
  %v3_14be7 = inttoptr i32 %v2_14be7 to i32*
  store i32 %v3_14be1, i32* %v3_14be7, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14bf6

bb:                                               ; preds = %dec_label_pc_14ba6
  %v1_14bf4 = call i32 @function_14bfb()
  br label %dec_label_pc_14bf6

dec_label_pc_14bf6:                               ; preds = %bb, %dec_label_pc_14ba6
  %v2_14bf4 = phi i32 [ %v1_14bf4, %bb ], [ 0, %dec_label_pc_14ba6 ]
  ret i32 %v2_14bf4

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38350_type* @global_var_38350.2238 to i32), { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_14bfb() local_unnamed_addr {
dec_label_pc_14bfb:
  %v0_14bfc = load i32, i32* @eax, align 4
  ret i32 %v0_14bfc
}

define i32 @_ZN5boost21thread_resource_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14bfe:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_14c28 = call i32 @function_297a4(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38320_type* @global_var_38320.2241 to i32), i32* %arg1, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38320_type* @global_var_38320.2241 to i32), { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c4a:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_14c75 = call i32 @function_29848(i32 %tmp103, i32 %arg2)
  %v1_14c7d = add i32 %arg2, 8
  %v1_14c83 = add i32 %tmp103, 8
  %v5_14c83 = icmp ugt i32* %arg1, inttoptr (i32 -9 to i32*)
  store i1 %v5_14c83, i1* @cf, align 1
  store i32 %v1_14c83, i32* @eax, align 4
  %v2_14c8d = call i32 @function_25a30(i32 %v1_14c83, i32 %v1_14c7d)
  store i32 ptrtoint (%vtable_381d8_type* @global_var_381d8.2264 to i32), i32* %arg1, align 4
  %v2_14c9e = inttoptr i32 %v1_14c83 to i32*
  store i32 ptrtoint (i32* @global_var_381ec.2265 to i32), i32* %v2_14c9e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14cca

bb:                                               ; preds = %dec_label_pc_14c4a
  %v1_14caf = call i32 @function_14ccf()
  br label %dec_label_pc_14cca

dec_label_pc_14cca:                               ; preds = %dec_label_pc_14c4a, %bb
  %v0_14cb1 = phi i32 [ 0, %dec_label_pc_14c4a ], [ %v1_14caf, %bb ]
  ret i32 %v0_14cb1

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14cca, { 1, 0 }
}

define i32 @function_14cb3() local_unnamed_addr {
dec_label_pc_14cb3:
  %eax.global-to-local = alloca i32, align 4
  %v0_14cb3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14cb3
}

define i32 @function_14ccf() local_unnamed_addr {
dec_label_pc_14ccf:
  %v0_14cd4 = load i32, i32* @eax, align 4
  ret i32 %v0_14cd4
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14cd6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_14d08 = add i32 %arg2, 28
  %v1_14d0e = add i32 %tmp103, 28
  store i32 %v1_14d0e, i32* @eax, align 4
  %v2_14d18 = call i32 @function_29842(i32 %v1_14d0e, i32 %v1_14d08)
  store i32 ptrtoint (%vtable_38178_type* @global_var_38178.2266 to i32), i32* %arg1, align 4
  %v1_14d29 = add i32 %tmp103, 8
  %v2_14d29 = inttoptr i32 %v1_14d29 to i32*
  store i32 ptrtoint (i32* @global_var_38194.2267 to i32), i32* %v2_14d29, align 4
  %v2_14d33 = inttoptr i32 %v1_14d0e to i32*
  store i32 ptrtoint (i32* @global_var_381a4.2268 to i32), i32* %v2_14d33, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14d46

bb:                                               ; preds = %dec_label_pc_14cd6
  %v1_14d44 = call i32 @function_14d4b()
  br label %dec_label_pc_14d46

dec_label_pc_14d46:                               ; preds = %bb, %dec_label_pc_14cd6
  %v2_14d44 = phi i32 [ %v1_14d44, %bb ], [ 0, %dec_label_pc_14cd6 ]
  ret i32 %v2_14d44

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
}

define i32 @function_14d4b() local_unnamed_addr {
dec_label_pc_14d4b:
  %v0_14d4c = load i32, i32* @eax, align 4
  ret i32 %v0_14d4c
}

define i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14d4d:
  ret i32 %arg1
}

define i32 @function_14d7c() local_unnamed_addr {
dec_label_pc_14d7c:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14d7c = load i32, i32* %ecx.global-to-local, align 4
  %v1_14d7c = add i32 %v0_14d7c, -666530365
  %v2_14d7c = inttoptr i32 %v1_14d7c to i32*
  %v3_14d7c = load i32, i32* %v2_14d7c, align 4
  %v4_14d7c = add i32 %v3_14d7c, -1
  store i32 %v4_14d7c, i32* %v2_14d7c, align 4
  %v0_14d82 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14d82 = add i32 %v0_14d82, -44
  %v2_14d82 = inttoptr i32 %v1_14d82 to i32*
  %v3_14d82 = load i32, i32* %v2_14d82, align 4
  %v0_14d89 = load i32, i32* @eax, align 4
  %v2_14d8c = call i32 @function_2fcdb(i32 %v0_14d89, i32 %v3_14d82)
  %v1_14d94 = add i32 %v0_14d82, -40
  store i32 %v1_14d94, i32* @eax, align 4
  %v0_14d9b = load i32, i32* %ebx.global-to-local, align 4
  %v2_14d9e = call i32 @function_2fde3(i32 %v0_14d9b, i32 %v1_14d94)
  %v0_14da6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_14da6 = add i32 %v0_14da6, -40
  store i32 110834, i32* @esi, align 4
  %v3_14dd7 = call i32 @function_14ddb(i32 %v1_14da6, i32 ptrtoint (i32* @global_var_38570.2269 to i32), i32 110834)
  ret i32 %v3_14dd7
}

define i32 @function_14dd9() local_unnamed_addr {
dec_label_pc_14dd9:
  %eax.global-to-local = alloca i32, align 4
  %v0_14dd9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14dd9
}

define i32 @function_14ddb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14ddb:
  %v0_14de3 = load i32, i32* @esi, align 4
  ret i32 %v0_14de3
}

define i32 @_ZN5boost10lock_errorC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14dee:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i1 false, i1* @cf, align 1
  store i32 %tmp103, i32* @eax, align 4
  %v2_14e18 = call i32 @function_29994(i32 %tmp103, i32 %arg2)
  store i32 ptrtoint (%vtable_38338_type* @global_var_38338.2239 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14e32

bb:                                               ; preds = %dec_label_pc_14dee
  %v1_14e30 = call i32 @function_14e37()
  br label %dec_label_pc_14e32

dec_label_pc_14e32:                               ; preds = %bb, %dec_label_pc_14dee
  %v2_14e30 = phi i32 [ %v1_14e30, %bb ], [ 0, %dec_label_pc_14dee ]
  ret i32 %v2_14e30

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38338_type* @global_var_38338.2239 to i32), { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_29994, { 1, 0 }
}

define i32 @function_14e37() local_unnamed_addr {
dec_label_pc_14e37:
  %v0_14e38 = load i32, i32* @eax, align 4
  ret i32 %v0_14e38
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14e3a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_14e6d = add i32 %arg2, 8
  %v1_14e73 = add i32 %tmp102, 8
  %v2_14e7d = call i32 @function_25c20(i32 %v1_14e73, i32 %v1_14e6d)
  store i32 ptrtoint (%vtable_38138_type* @global_var_38138.2270 to i32), i32* %arg1, align 4
  %v2_14e8e = inttoptr i32 %v1_14e73 to i32*
  store i32 ptrtoint (i32* @global_var_3814c.2271 to i32), i32* %v2_14e8e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_14ea1

bb:                                               ; preds = %dec_label_pc_14e3a
  %v1_14e9f = call i32 @function_14ebf()
  store i32 %v1_14e9f, i32* @eax, align 4
  br label %dec_label_pc_14ea1

dec_label_pc_14ea1:                               ; preds = %bb, %dec_label_pc_14e3a
  %v0_14ea1 = call i32 @function_14eba()
  ret i32 %v0_14ea1
}

define i32 @function_14ea4() local_unnamed_addr {
dec_label_pc_14ea4:
  %eax.global-to-local = alloca i32, align 4
  %v0_14ea4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14ea4
}

define i32 @function_14eba() local_unnamed_addr {
dec_label_pc_14eba:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14ebf() local_unnamed_addr {
dec_label_pc_14ebf:
  %v0_14ec4 = load i32, i32* @eax, align 4
  ret i32 %v0_14ec4
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ec6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* @eax, align 4
  %v2_14ef0 = call i32 @function_29d00(i32 %tmp103, i32 %arg2)
  %v1_14efe = add i32 %tmp103, 28
  store i32 ptrtoint (%vtable_380d8_type* @global_var_380d8.2272 to i32), i32* %arg1, align 4
  %v1_14f19 = add i32 %tmp103, 8
  %v2_14f19 = inttoptr i32 %v1_14f19 to i32*
  store i32 ptrtoint (i32* @global_var_380f4.2273 to i32), i32* %v2_14f19, align 4
  %v2_14f23 = inttoptr i32 %v1_14efe to i32*
  store i32 ptrtoint (i32* @global_var_38104.2274 to i32), i32* %v2_14f23, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 3, 2, 1, 0 }
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_14f3d:
  store i32 %arg1, i32* @eax, align 4
  %v1_14f5c = call i32 @function_1fea8(i32 %arg1)
  ret i32 %v1_14f5c
}

define i32 @function_14f6e() local_unnamed_addr {
dec_label_pc_14f6e:
  %eax.global-to-local = alloca i32, align 4
  %v0_14f6e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14f6e
}

define i32 @function_14fb9() local_unnamed_addr {
dec_label_pc_14fb9:
  %ecx.global-to-local = alloca i32, align 4
  %v0_14fb9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_14fb9 = add i32 %v0_14fb9, -666530362
  %v2_14fb9 = inttoptr i32 %v1_14fb9 to i32*
  %v3_14fb9 = load i32, i32* %v2_14fb9, align 4
  %v4_14fb9 = add i32 %v3_14fb9, -1
  store i32 %v4_14fb9, i32* %v2_14fb9, align 4
  %v0_14fbf = load i32, i32* @eax, align 4
  %v1_14fc7 = call i32 @function_14fcb(i32 %v0_14fbf)
  ret i32 %v1_14fc7
}

define i32 @function_14fc9() local_unnamed_addr {
dec_label_pc_14fc9:
  %eax.global-to-local = alloca i32, align 4
  %v0_14fc9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14fc9
}

define i32 @function_14fcb(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fcb:
  %v3_14fcb = load i32, i32* @eax, align 4
  ret i32 %v3_14fcb
}

define i32 @_ZNKSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_14fde:
  %stack_var_-20 = alloca i32, align 4
  %v2_14ffe = load i32, i32* %arg2, align 4
  store i32 %v2_14ffe, i32* %stack_var_-20, align 4
  %v2_15003 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_15010 = call i32 @function_303f0(i32 %arg1, i32 %v2_15003)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15024

bb:                                               ; preds = %dec_label_pc_14fde
  %v1_15022 = call i32 @function_15029()
  br label %dec_label_pc_15024

dec_label_pc_15024:                               ; preds = %bb, %dec_label_pc_14fde
  %v2_15022 = phi i32 [ %v1_15022, %bb ], [ %arg1, %dec_label_pc_14fde ]
  ret i32 %v2_15022

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_15029() local_unnamed_addr {
dec_label_pc_15029:
  %v0_1502a = load i32, i32* @eax, align 4
  ret i32 %v0_1502a
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEixERKi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1502e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1502e = load i32, i32* %ebp.global-to-local, align 4
  %v2_1504e = load i32, i32* %arg1, align 4
  %v1_15053 = inttoptr i32 %arg2 to i32*
  %v2_15053 = load i32, i32* %v1_15053, align 4
  %v2_15055 = add i32 %v2_15053, %v2_1504e
  store i32 %v0_1502e, i32* %ebp.global-to-local, align 4
  ret i32 %v2_15055
}

define i32 @_ZNKSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1506a:
  %stack_var_-20 = alloca i32, align 4
  %v1_1508a = add i32 %arg2, 4
  %v2_1508a = inttoptr i32 %v1_1508a to i32*
  %v3_1508a = load i32, i32* %v2_1508a, align 4
  store i32 %v3_1508a, i32* %stack_var_-20, align 4
  %v2_15090 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_1509d = call i32 @function_3047c(i32 %arg1, i32 %v2_15090)
  store i32 0, i32* @edx, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZNKSt6vectorIhSaIhEE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_150ba:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_150d4 = add i32 %tmp4, 4
  %v2_150d4 = inttoptr i32 %v1_150d4 to i32*
  %v3_150d4 = load i32, i32* %v2_150d4, align 4
  %v2_150dc = load i32, i32* %arg1, align 4
  %v2_150e0 = sub i32 %v3_150d4, %v2_150dc
  store i32 %v2_150e0, i32* @ecx, align 4
  store i32 %v2_150e0, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_150f0

bb:                                               ; preds = %dec_label_pc_150ba
  %v2_150ee = call i32 @function_150f5(i32 %tmp4)
  br label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %bb, %dec_label_pc_150ba
  %v3_150ee = phi i32 [ %v2_150ee, %bb ], [ %v2_150e0, %dec_label_pc_150ba ]
  ret i32 %v3_150ee
}

define i32 @function_150f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_150f5:
  %v0_150f6 = load i32, i32* @eax, align 4
  ret i32 %v0_150f6
}

define i32 @_ZNKSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150f8:
  %v2_15118 = load i32, i32* %arg1, align 4
  %v5_1511a = add i32 %v2_15118, %arg2
  store i32 %v5_1511a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15129

bb:                                               ; preds = %dec_label_pc_150f8
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_15127 = call i32 @function_1512e(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_15129

dec_label_pc_15129:                               ; preds = %bb, %dec_label_pc_150f8
  %v4_15127 = phi i32 [ %v3_15127, %bb ], [ %v5_1511a, %dec_label_pc_150f8 ]
  ret i32 %v4_15127

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1512e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1512e:
  %v0_1512f = load i32, i32* @eax, align 4
  ret i32 %v0_1512f
}

define i32 @_ZltRK9base_uintILj256EES2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15130:
  %ebp.global-to-local = alloca i32, align 4
  %v0_15130 = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_15156

dec_label_pc_15156:                               ; preds = %dec_label_pc_15130, %dec_label_pc_15194
  %storemerge121 = phi i32 [ 7, %dec_label_pc_15130 ], [ %v4_15190, %dec_label_pc_15194 ]
  %v2_1515c = mul nuw nsw i32 %storemerge121, 4
  %v3_1515c = add i32 %v2_1515c, %arg1
  %v4_1515c = inttoptr i32 %v3_1515c to i32*
  %v5_1515c = load i32, i32* %v4_1515c, align 4
  %v3_15165 = add i32 %v2_1515c, %arg2
  %v4_15165 = inttoptr i32 %v3_15165 to i32*
  %v5_15165 = load i32, i32* %v4_15165, align 4
  %v7_15168 = icmp ult i32 %v5_1515c, %v5_15165
  %v1_1516a = icmp eq i1 %v7_15168, false
  br i1 %v1_1516a, label %dec_label_pc_15173, label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15156
  br label %dec_label_pc_151a5

dec_label_pc_15173:                               ; preds = %dec_label_pc_15156
  %v5_15179 = load i32, i32* %v4_1515c, align 4
  %v5_15182 = load i32, i32* %v4_15165, align 4
  %tmp133 = icmp ugt i32 %v5_15179, %v5_15182
  br i1 %tmp133, label %dec_label_pc_15189, label %dec_label_pc_15194

dec_label_pc_15189:                               ; preds = %dec_label_pc_15173
  br label %dec_label_pc_151a5

dec_label_pc_15194:                               ; preds = %dec_label_pc_15173
  %v4_15190 = add nsw i32 %storemerge121, -1
  %tmp134 = icmp sgt i32 %storemerge121, 0
  %v3_15199 = icmp eq i1 %tmp134, false
  %v1_1519e = icmp eq i1 %v3_15199, false
  br i1 %v1_1519e, label %dec_label_pc_15156, label %dec_label_pc_151a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15194
  br label %dec_label_pc_151a5

dec_label_pc_151a5:                               ; preds = %dec_label_pc_15189, %dec_label_pc_1516c, %dec_label_pc_151a0
  %v0_151b7 = phi i32 [ 0, %dec_label_pc_15189 ], [ 1, %dec_label_pc_1516c ], [ 0, %dec_label_pc_151a0 ]
  store i32 %v0_15130, i32* %ebp.global-to-local, align 4
  ret i32 %v0_151b7

; uselistorder directives
  uselistorder i32 %storemerge121, { 0, 2, 1 }
  uselistorder label %dec_label_pc_151a5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15156, { 1, 0 }
}

define i32 @_Z7Hash160IN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEE7uint160T_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_151b8:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  %v2_151dc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_151dc, i32* @eax, align 4
  %v1_151e2 = call i32 @function_24c98(i32 %v2_151dc)
  %v4_151ea = ptrtoint i32* %stack_var_-68 to i32
  %v2_151ee = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_151ee, i32* @eax, align 4
  %v2_151f4 = call i32 @function_2c204(i32 %v2_151ee, i32 %v4_151ea)
  %v2_15208 = call i32 @function_2e47e(i32 %v4_151ea, i32 %v2_151ee)
  %v4_1520d = trunc i32 %v2_15208 to i8
  %v5_1520d = icmp eq i8 %v4_1520d, 0
  br i1 %v5_1520d, label %dec_label_pc_15218, label %dec_label_pc_15231

dec_label_pc_15218:                               ; preds = %dec_label_pc_151b8
  store i32 0, i32* %stack_var_-52, align 4
  %v4_15222 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v4_151ea, i32* @eax, align 4
  %v2_1522c = call i32 @function_2a1e6(i32 %v4_151ea, i32 %v4_15222)
  br label %dec_label_pc_15231

dec_label_pc_15231:                               ; preds = %dec_label_pc_151b8, %dec_label_pc_15218
  %storemerge = phi i32 [ %v2_1522c, %dec_label_pc_15218 ], [ ptrtoint (i32* @global_var_38c00 to i32), %dec_label_pc_151b8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_15231, { 1, 0 }
}

define i32 @function_1527c() local_unnamed_addr {
dec_label_pc_1527c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1527c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1527c = add i32 %v0_1527c, 1566266564
  %v2_1527c = inttoptr i32 %v1_1527c to i32*
  %v3_1527c = load i32, i32* %v2_1527c, align 4
  %v4_1527c = add i32 %v3_1527c, 1
  store i32 %v4_1527c, i32* %v2_1527c, align 4
  %v0_15282 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15282
}

define i32 @_ZN7CPubKey3SetIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEEEvT_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15286:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_152ad = ptrtoint i32* %stack_var_-36 to i32
  %v2_152b1 = ptrtoint i32* %stack_var_-40 to i32
  %v2_152b7 = call i32 @function_2e54c(i32 %v2_152b1, i32 %v4_152ad)
  %v4_152bc = trunc i32 %v2_152b7 to i8
  %v5_152bc = icmp eq i8 %v4_152bc, 0
  br i1 %v5_152bc, label %dec_label_pc_152c7, label %dec_label_pc_152ee

dec_label_pc_152c7:                               ; preds = %dec_label_pc_15286
  store i32 0, i32* %stack_var_-28, align 4
  %v4_152d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v4_152ad, i32* @eax, align 4
  %v2_152db = call i32 @function_2a2b4(i32 %v4_152ad, i32 %v4_152d1)
  %v1_152e0 = inttoptr i32 %v2_152db to i8*
  %v2_152e0 = load i8, i8* %v1_152e0, align 1
  %v3_152e0 = zext i8 %v2_152e0 to i32
  %v1_152e9 = call i32 @function_2525c(i32 %v3_152e0)
  br label %dec_label_pc_152ee

dec_label_pc_152ee:                               ; preds = %dec_label_pc_15286, %dec_label_pc_152c7
  %storemerge3 = phi i32 [ %v1_152e9, %dec_label_pc_152c7 ], [ 0, %dec_label_pc_15286 ]
  %v10_152f1 = icmp eq i32 %storemerge3, 0
  br i1 %v10_152f1, label %dec_label_pc_15315, label %dec_label_pc_152f7

dec_label_pc_152f7:                               ; preds = %dec_label_pc_152ee
  store i32 %v2_152b1, i32* @eax, align 4
  %v2_15304 = call i32 @function_2c2d2(i32 %v2_152b1, i32 %v4_152ad)
  %v15_15309 = icmp eq i32 %v2_15304, %storemerge3
  %v1_1530c = icmp eq i1 %v15_15309, false
  br i1 %v1_1530c, label %dec_label_pc_15315, label %dec_label_pc_1531a

dec_label_pc_15315:                               ; preds = %dec_label_pc_152f7, %dec_label_pc_152ee
  br label %dec_label_pc_1531a

dec_label_pc_1531a:                               ; preds = %dec_label_pc_152f7, %dec_label_pc_15315
  %storemerge = phi i1 [ true, %dec_label_pc_15315 ], [ false, %dec_label_pc_152f7 ]
  br i1 %storemerge, label %bb, label %dec_label_pc_1531e

bb:                                               ; preds = %dec_label_pc_1531a
  %v1_1531c = call i32 @function_1534f()
  br label %dec_label_pc_1531e

dec_label_pc_1531e:                               ; preds = %bb, %dec_label_pc_1531a
  store i32 0, i32* %stack_var_-24, align 4
  %v4_1532b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v4_152ad, i32* @eax, align 4
  %v2_15335 = call i32 @function_2a2b4(i32 %v4_152ad, i32 %v4_1532b)
  ret i32 %v2_15335

; uselistorder directives
  uselistorder i32 %v4_152ad, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32)* @function_2a2b4, { 1, 0 }
  uselistorder label %dec_label_pc_1531a, { 1, 0 }
  uselistorder label %dec_label_pc_152ee, { 1, 0 }
}

define i32 @function_1534d() local_unnamed_addr {
dec_label_pc_1534d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1534d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1534d
}

define i32 @function_1534f() local_unnamed_addr {
dec_label_pc_1534f:
  %v0_1534f = load i32, i32* @ebp, align 4
  %v1_1534f = add i32 %v0_1534f, -28
  %v2_1534f = inttoptr i32 %v1_1534f to i32*
  %v3_1534f = load i32, i32* %v2_1534f, align 4
  store i32 %v3_1534f, i32* @eax, align 4
  %v1_15355 = call i32 @function_252b8(i32 %v3_1534f)
  %v0_1535a = load i32, i32* @ebp, align 4
  %v1_1535a = add i32 %v0_1535a, -12
  %v2_1535a = inttoptr i32 %v1_1535a to i32*
  %v3_1535a = load i32, i32* %v2_1535a, align 4
  %v1_1535d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1535d = xor i32 %v1_1535d, %v3_1535a
  ret i32 %v2_1535d
}

define i32 @_Z7Hash160IPKhE7uint160T_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15371:
  %stack_var_-48 = alloca i32, align 4
  %v2_15394 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_15394, i32* @eax, align 4
  %v1_1539a = call i32 @function_24e51(i32 %v2_15394)
  %v15_153b0 = icmp eq i32 %arg2, %arg3
  %storemerge = select i1 %v15_153b0, i32 ptrtoint (i32* @global_var_38c00 to i32), i32 %arg2
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_153f6() local_unnamed_addr {
dec_label_pc_153f6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_153f6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_153f6 = add i32 %v0_153f6, 1435223109
  %v2_153f6 = inttoptr i32 %v1_153f6 to i32*
  %v3_153f6 = load i32, i32* %v2_153f6, align 4
  %v4_153f6 = add i32 %v3_153f6, -1
  store i32 %v4_153f6, i32* %v2_153f6, align 4
  %v0_153fd = load i32, i32* %edx.global-to-local, align 4
  %v1_153fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_153fd = xor i32 %v1_153fd, %v0_153fd
  store i32 %v2_153fd, i32* %edx.global-to-local, align 4
  %v0_1540c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1540c
}

define i32 @_Z10LockObjectIA32_hEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1540f:
  ret i32 %arg1
}

define i32 @function_15452() local_unnamed_addr {
dec_label_pc_15452:
  %eax.global-to-local = alloca i32, align 4
  %v0_15453 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15453
}

define i32 @_Z12UnlockObjectIA32_hEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_15454:
  ret i32 %arg1
}

define i32 @_ZNSt6vectorIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_154ac:
  store i32 %arg1, i32* @eax, align 4
  %v1_154c9 = call i32 @function_3092e(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_154e2:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v1_15500 = call i32 @function_30a1a(i32 %tmp6)
  %v1_15508 = add i32 %tmp6, 4
  %v2_15508 = inttoptr i32 %v1_15508 to i32*
  %v3_15508 = load i32, i32* %v2_15508, align 4
  store i32 %v3_15508, i32* @ecx, align 4
  %v2_1550e = load i32, i32* %arg1, align 4
  %v3_1551b = call i32 @function_30a47(i32 %v2_1550e, i32 %v3_15508, i32 %v1_15500)
  %v1_15526 = call i32 @function_3099a(i32 %tmp6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15550

bb:                                               ; preds = %dec_label_pc_154e2
  %v1_15535 = call i32 @function_15555()
  br label %dec_label_pc_15550

dec_label_pc_15550:                               ; preds = %dec_label_pc_154e2, %bb
  %v0_15537 = phi i32 [ 0, %dec_label_pc_154e2 ], [ %v1_15535, %bb ]
  ret i32 %v0_15537

; uselistorder directives
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15550, { 1, 0 }
}

define i32 @function_15539() local_unnamed_addr {
dec_label_pc_15539:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_15539 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_15539, i32* %ebx.global-to-local, align 4
  %v0_1553b = load i32, i32* @ebp, align 4
  %v1_1553b = add i32 %v0_1553b, -28
  %v2_1553b = inttoptr i32 %v1_1553b to i32*
  %v3_1553b = load i32, i32* %v2_1553b, align 4
  store i32 %v3_1553b, i32* %eax.global-to-local, align 4
  %v1_15541 = call i32 @function_3099a(i32 %v3_1553b)
  %v0_15546 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_15546, i32* %eax.global-to-local, align 4
  ret i32 %v0_15546

; uselistorder directives
  uselistorder i32 (i32)* @function_3099a, { 1, 0 }
}

define i32 @function_15555() local_unnamed_addr {
dec_label_pc_15555:
  %v0_1555a = load i32, i32* @eax, align 4
  ret i32 %v0_1555a
}

define i32 @_ZNSaIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1555c:
  store i32 %arg1, i32* @eax, align 4
  %v1_15579 = call i32 @function_30b0a(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSaIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15592:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_155af = call i32 @function_30b6a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_155c0

bb:                                               ; preds = %dec_label_pc_15592
  %v1_155be = call i32 @function_155c5()
  br label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %bb, %dec_label_pc_15592
  %v2_155be = phi i32 [ %v1_155be, %bb ], [ 0, %dec_label_pc_15592 ]
  ret i32 %v2_155be

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_155c5() local_unnamed_addr {
dec_label_pc_155c5:
  %v0_155c6 = load i32, i32* @eax, align 4
  ret i32 %v0_155c6
}

define i32 @_ZNSt6vectorIhSaIhEEC1EjRKhRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_155c8:
  store i32 %arg1, i32* @eax, align 4
  %v7_15606 = call i32 @function_30bca(i32 %arg1, i32 %arg2, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v3_1561f = call i32 @function_30c64(i32 %arg1, i32 %arg2, i32 %arg3)
  %v0_15624 = call i32 @function_1563d()
  ret i32 %v0_15624

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_15627() local_unnamed_addr {
dec_label_pc_15627:
  %eax.global-to-local = alloca i32, align 4
  %v0_15627 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15627
}

define i32 @function_1563d() local_unnamed_addr {
dec_label_pc_1563d:
  %v0_1563d = load i32, i32* @ebp, align 4
  %v1_1563d = add i32 %v0_1563d, -12
  %v2_1563d = inttoptr i32 %v1_1563d to i32*
  %v3_1563d = load i32, i32* %v2_1563d, align 4
  %v1_15640 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15640 = xor i32 %v1_15640, %v3_1563d
  %v3_15640 = icmp eq i32 %v2_15640, 0
  store i32 %v2_15640, i32* @eax, align 4
  br i1 %v3_15640, label %bb, label %dec_label_pc_15649

bb:                                               ; preds = %dec_label_pc_1563d
  %v1_15647 = call i32 @function_1564e()
  br label %dec_label_pc_15649

dec_label_pc_15649:                               ; preds = %bb, %dec_label_pc_1563d
  %v2_15647 = phi i32 [ %v1_15647, %bb ], [ %v2_15640, %dec_label_pc_1563d ]
  ret i32 %v2_15647
}

define i32 @function_1564e() local_unnamed_addr {
dec_label_pc_1564e:
  %v0_15653 = load i32, i32* @eax, align 4
  ret i32 %v0_15653
}

define i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15654:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = ptrtoint i32* %arg1 to i32
  %v15_15677 = icmp eq i32 %tmp26, %arg2
  br i1 %v15_15677, label %dec_label_pc_15899, label %dec_label_pc_15680

dec_label_pc_15680:                               ; preds = %dec_label_pc_15654
  store i32 %tmp26, i32* @eax, align 4
  %v1_15694 = call i32 @function_30d5c(i32 %tmp26)
  %v10_15699 = icmp ult i32 %v1_15694, %arg2
  %v5_1569f = icmp eq i1 %v10_15699, false
  br i1 %v5_1569f, label %dec_label_pc_15764, label %dec_label_pc_156a7

dec_label_pc_156a7:                               ; preds = %dec_label_pc_15680
  %v2_156bc = ptrtoint i32* %stack_var_-68 to i32
  %v3_156c9 = call i32 @function_2a632(i32 %v2_156bc, i32 %arg2, i32 %arg2)
  %v0_156ce = load i32, i32* @esp, align 4
  %v5_156ce = icmp ult i32 %v0_156ce, 4
  store i1 %v5_156ce, i1* @cf, align 1
  %v3_156d8 = load i32, i32* %stack_var_-68, align 4
  store i32 %tmp26, i32* @eax, align 4
  %v4_156ec = call i32 @function_30d9a(i32 %tmp26, i32 %arg2, i32 %v3_156d8, i32 %tmp19)
  store i32 %tmp26, i32* @eax, align 4
  %v1_156fa = call i32 @function_30b8c(i32 %tmp26)
  store i32 %v1_156fa, i32* @eax, align 4
  %v1_15702 = add i32 %tmp26, 4
  %v2_15702 = inttoptr i32 %v1_15702 to i32*
  %v3_15702 = load i32, i32* %v2_15702, align 4
  %v2_15708 = load i32, i32* %arg1, align 4
  %v3_15715 = call i32 @function_30bb9(i32 %v2_15708, i32 %v3_15702, i32 %v1_156fa)
  %v1_1571d = add i32 %tmp26, 8
  %v2_1571d = inttoptr i32 %v1_1571d to i32*
  %v3_1571d = load i32, i32* %v2_1571d, align 4
  %v2_15725 = load i32, i32* %arg1, align 4
  %v2_15729 = sub i32 %v3_1571d, %v2_15725
  store i32 %v2_15729, i32* @ecx, align 4
  %v2_15732 = load i32, i32* %arg1, align 4
  store i32 %tmp26, i32* @eax, align 4
  %v3_15742 = call i32 @function_30e54(i32 %tmp26, i32 %v2_15732, i32 %v2_15729)
  store i32 %v4_156ec, i32* %arg1, align 4
  %v5_15756 = add i32 %v4_156ec, %arg2
  store i32 %v5_15756, i32* %v2_1571d, align 4
  br label %dec_label_pc_15889

dec_label_pc_15764:                               ; preds = %dec_label_pc_15680
  %v10_1576f = icmp ult i32 %tmp26, %arg2
  %v1_15772 = icmp eq i1 %v10_1576f, false
  %v5_15775 = icmp eq i1 %v1_15772, false
  store i32 %tmp26, i32* @eax, align 4
  br i1 %v5_15775, label %dec_label_pc_15819, label %dec_label_pc_1577d

dec_label_pc_1577d:                               ; preds = %dec_label_pc_15764
  %v1_15783 = call i32 @function_30b8c(i32 %tmp26)
  %v2_1578a = ptrtoint i32* %stack_var_-44 to i32
  %v2_15797 = call i32 @function_2bf36(i32 %v2_1578a, i32 %tmp26)
  %v2_1579f = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1579f, i32* @eax, align 4
  %v2_157ac = call i32 @function_2bc0e(i32 %v2_1579f, i32 %tmp26)
  %v2_157c9 = ptrtoint i32* %stack_var_-60 to i32
  %v3_157d6 = call i32 @function_2a632(i32 %v2_157c9, i32 %arg2, i32 %arg2)
  %v2_157de = ptrtoint i32* %stack_var_-48 to i32
  %v3_157e1 = load i32, i32* %stack_var_-52, align 4
  %v3_157ef = load i32, i32* %stack_var_-60, align 4
  %v4_157f9 = call i32 @function_30ea9(i32 %v2_157de, i32 %v3_157ef, i32 %tmp11, i32 %v3_157e1)
  %v0_15801 = load i32, i32* @ebx, align 4
  %v3_15805 = load i32, i32* %stack_var_-44, align 4
  %v3_1580c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1580c, i32* @eax, align 4
  %v3_15812 = call i32 @function_30f37(i32 %v3_1580c, i32 %v3_15805, i32 %v0_15801)
  %.pre = add i32 %tmp26, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_15889

dec_label_pc_15819:                               ; preds = %dec_label_pc_15764
  %v2_1581c = load i32, i32* %arg1, align 4
  %v1_15821 = inttoptr i32 %arg2 to i32*
  %v2_15821 = load i32, i32* %v1_15821, align 4
  %v3_1582e = add i32 %v2_15821, %tmp26
  store i32 %v2_15821, i32* @eax, align 4
  %v3_15841 = call i32 @function_30f7f(i32 %v2_15821, i32 %v3_1582e, i32 %v2_1581c)
  store i32 %tmp26, i32* @eax, align 4
  %v1_1584c = call i32 @function_30b8c(i32 %tmp26)
  store i32 %v1_1584c, i32* @ebx, align 4
  %v1_15856 = add i32 %tmp26, 4
  %v2_15856 = inttoptr i32 %v1_15856 to i32*
  %v3_15856 = load i32, i32* %v2_15856, align 4
  store i32 %v3_15856, i32* @edi, align 4
  %v1_1585c = add i32 %arg2, 4
  %v2_1585c = inttoptr i32 %v1_1585c to i32*
  %v3_1585c = load i32, i32* %v2_1585c, align 4
  store i32 %v3_1585c, i32* @esi, align 4
  %v2_15862 = load i32, i32* %v1_15821, align 4
  %v5_15872 = add i32 %v2_15862, %tmp26
  store i32 %v5_15872, i32* @eax, align 4
  %v5_15884 = call i32 @function_30fe5(i32 %v5_15872, i32 %v3_1585c, i32 %v3_15856, i32 %v1_1584c, i32 %v2_15862)
  br label %dec_label_pc_15889

dec_label_pc_15889:                               ; preds = %dec_label_pc_15819, %dec_label_pc_1577d, %dec_label_pc_156a7
  %v3_15896.pre-phi = phi i32* [ %v2_15856, %dec_label_pc_15819 ], [ %.pre3, %dec_label_pc_1577d ], [ %v2_15702, %dec_label_pc_156a7 ]
  %v2_1588c = load i32, i32* %arg1, align 4
  %v5_15890 = add i32 %v2_1588c, %arg2
  store i32 %v5_15890, i32* %v3_15896.pre-phi, align 4
  br label %dec_label_pc_15899

dec_label_pc_15899:                               ; preds = %dec_label_pc_15889, %dec_label_pc_15654
  store i32 %tmp26, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_158a8

bb:                                               ; preds = %dec_label_pc_15899
  %v1_158a6 = call i32 @function_158ad()
  br label %dec_label_pc_158a8

dec_label_pc_158a8:                               ; preds = %bb, %dec_label_pc_15899
  %v2_158a6 = phi i32 [ %v1_158a6, %bb ], [ %tmp26, %dec_label_pc_15899 ]
  ret i32 %v2_158a6

; uselistorder directives
  uselistorder i32 %v2_15862, { 1, 0 }
  uselistorder i32 %v2_15821, { 1, 0, 2 }
  uselistorder i32 %tmp26, { 4, 23, 1, 15, 17, 16, 2, 3, 13, 14, 19, 18, 20, 6, 5, 7, 8, 10, 9, 12, 11, 22, 21, 0 }
  uselistorder i32 (i32)* @function_30b8c, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_2a632, { 1, 0 }
  uselistorder i32 %arg2, { 1, 8, 9, 3, 7, 10, 2, 4, 5, 6, 11, 0 }
  uselistorder i32* %arg1, { 1, 0, 2, 3, 4, 5, 6 }
}

define i32 @function_158ad() local_unnamed_addr {
dec_label_pc_158ad:
  %v0_158ad = load i32, i32* @ebp, align 4
  %v1_158ad = add i32 %v0_158ad, -12
  %v1_158b0 = inttoptr i32 %v1_158ad to i32*
  %v2_158b0 = load i32, i32* %v1_158b0, align 4
  store i32 %v2_158b0, i32* @ebx, align 4
  %v3_158b0 = add i32 %v0_158ad, -8
  %v1_158b1 = inttoptr i32 %v3_158b0 to i32*
  %v2_158b1 = load i32, i32* %v1_158b1, align 4
  store i32 %v2_158b1, i32* @esi, align 4
  %v3_158b1 = add i32 %v0_158ad, -4
  %v1_158b2 = inttoptr i32 %v3_158b1 to i32*
  %v2_158b2 = load i32, i32* %v1_158b2, align 4
  store i32 %v2_158b2, i32* @edi, align 4
  %v1_158b3 = inttoptr i32 %v0_158ad to i32*
  %v2_158b3 = load i32, i32* %v1_158b3, align 4
  store i32 %v2_158b3, i32* @ebp, align 4
  %v0_158b4 = load i32, i32* @eax, align 4
  ret i32 %v0_158b4
}

define i32 @_ZN21LockedPageManagerBaseI16MemoryPageLockerE9LockRangeEPvj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_158b6:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v1_158dd = add i32 %arg1, 4
  %v2_158e4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_158e4, i32* @eax, align 4
  %v2_158ea = call i32 @function_2b5de(i32 %v2_158e4, i32 %v1_158dd)
  %v10_158ef = icmp eq i32 %arg3, 0
  br i1 %v10_158ef, label %dec_label_pc_15a1a, label %dec_label_pc_158f9

dec_label_pc_158f9:                               ; preds = %dec_label_pc_158b6
  %v1_15902 = add i32 %arg1, 32
  %v2_15902 = inttoptr i32 %v1_15902 to i32*
  %v3_15902 = load i32, i32* %v2_15902, align 4
  %v5_15905 = and i32 %v3_15902, %arg2
  %v2_15911 = add i32 %arg2, -1
  %v1_15913 = add i32 %v2_15911, %arg3
  store i32 %v1_15913, i32* %edx.global-to-local, align 4
  %v3_15919 = load i32, i32* %v2_15902, align 4
  %v2_1591c = and i32 %v3_15919, %v1_15913
  %v1_1592f = add i32 %arg1, 36
  %v2_15932 = ptrtoint i32* %stack_var_-36 to i32
  %v2_15935 = ptrtoint i32* %stack_var_-40 to i32
  %v2_15951 = ptrtoint i32* %stack_var_-32 to i32
  %v1_159fe = add i32 %arg1, 28
  %v2_159fe = inttoptr i32 %v1_159fe to i32*
  %v2_1599a = ptrtoint i32* %stack_var_-64 to i32
  %v2_159bb = ptrtoint i32* %stack_var_-56 to i32
  %v2_159cc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v5_15905, i32* %stack_var_-40, align 4
  %tmp127128 = icmp ule i32 %v5_15905, %v2_1591c
  %v5_15a12132 = icmp eq i1 %tmp127128, false
  %v1_15a14133 = icmp eq i1 %v5_15a12132, false
  br i1 %v1_15a14133, label %dec_label_pc_1592c, label %dec_label_pc_15a1a

dec_label_pc_1592c:                               ; preds = %dec_label_pc_158f9, %dec_label_pc_159fb
  store i32 %v1_1592f, i32* %ecx.global-to-local, align 4
  store i32 %v2_15932, i32* @eax, align 4
  store i32 %v2_15935, i32* %edx.global-to-local, align 4
  %v1_15938 = load i32, i32* @esp, align 4
  %v2_15938 = add i32 %v1_15938, 8
  %v3_15938 = inttoptr i32 %v2_15938 to i32*
  store i32 %v2_15935, i32* %v3_15938, align 4
  %v0_1593c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1593c = load i32, i32* @esp, align 4
  %v2_1593c = add i32 %v1_1593c, 4
  %v3_1593c = inttoptr i32 %v2_1593c to i32*
  store i32 %v0_1593c, i32* %v3_1593c, align 4
  %v1_15940 = load i32, i32* @esp, align 4
  %v2_15940 = inttoptr i32 %v1_15940 to i32*
  store i32 %v2_15932, i32* %v2_15940, align 4
  %v0_15943 = call i32 @function_3129c()
  %v0_15948 = load i32, i32* @esp, align 4
  store i32 %v1_1592f, i32* %edx.global-to-local, align 4
  %v3_15954 = inttoptr i32 %v0_15948 to i32*
  store i32 %v1_1592f, i32* %v3_15954, align 4
  %v1_15958 = load i32, i32* @esp, align 4
  %v2_15958 = inttoptr i32 %v1_15958 to i32*
  store i32 %v2_15951, i32* %v2_15958, align 4
  %v0_1595b = call i32 @__stack_chk_fail.1297()
  %v0_15960 = load i32, i32* @esp, align 4
  %v3_15966 = inttoptr i32 %v0_15960 to i32*
  store i32 %v2_15951, i32* %v3_15966, align 4
  %v1_1596d = load i32, i32* @esp, align 4
  %v2_1596d = inttoptr i32 %v1_1596d to i32*
  store i32 %v2_15932, i32* %v2_1596d, align 4
  %v0_15970 = call i32 @function_3133e()
  %v4_15975 = trunc i32 %v0_15970 to i8
  %v5_15975 = icmp eq i8 %v4_15975, 0
  br i1 %v5_15975, label %dec_label_pc_159e7, label %dec_label_pc_15979

dec_label_pc_15979:                               ; preds = %dec_label_pc_1592c
  %v3_1597c = load i32, i32* %v2_159fe, align 4
  store i32 %v3_1597c, i32* @ecx, align 4
  %v3_1597f = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1597f, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_15987 = load i32, i32* @esp, align 4
  %v2_15987 = add i32 %v1_15987, 8
  %v3_15987 = inttoptr i32 %v2_15987 to i32*
  store i32 %v3_1597c, i32* %v3_15987, align 4
  %v0_1598b = load i32, i32* %edx.global-to-local, align 4
  %v1_1598b = load i32, i32* @esp, align 4
  %v2_1598b = add i32 %v1_1598b, 4
  %v3_1598b = inttoptr i32 %v2_1598b to i32*
  store i32 %v0_1598b, i32* %v3_1598b, align 4
  %v0_1598f = load i32, i32* @eax, align 4
  %v1_1598f = load i32, i32* @esp, align 4
  %v2_1598f = inttoptr i32 %v1_1598f to i32*
  store i32 %v0_1598f, i32* %v2_1598f, align 4
  %v0_15992 = call i32 @function_25006()
  %v3_15997 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_15997, i32* %edx.global-to-local, align 4
  store i32 %v2_1599a, i32* @eax, align 4
  %v0_1599d = load i32, i32* @esp, align 4
  %v1_1599d = add i32 %v0_1599d, 8
  %v2_1599d = inttoptr i32 %v1_1599d to i32*
  store i32 1, i32* %v2_1599d, align 4
  %v0_159a5 = load i32, i32* %edx.global-to-local, align 4
  %v1_159a5 = load i32, i32* @esp, align 4
  %v2_159a5 = add i32 %v1_159a5, 4
  %v3_159a5 = inttoptr i32 %v2_159a5 to i32*
  store i32 %v0_159a5, i32* %v3_159a5, align 4
  %v1_159a9 = load i32, i32* @esp, align 4
  %v2_159a9 = inttoptr i32 %v1_159a9 to i32*
  store i32 %v2_1599a, i32* %v2_159a9, align 4
  %v0_159ac = call i32 @function_3137d()
  %v0_159b1 = load i32, i32* @esp, align 4
  %v3_159b7 = inttoptr i32 %v0_159b1 to i32*
  store i32 %v2_1599a, i32* %v3_159b7, align 4
  store i32 %v2_159bb, i32* @eax, align 4
  %v1_159be = load i32, i32* @esp, align 4
  %v2_159be = inttoptr i32 %v1_159be to i32*
  store i32 %v2_159bb, i32* %v2_159be, align 4
  %v0_159c1 = call i32 @function_313d2()
  store i32 %v1_1592f, i32* %ecx.global-to-local, align 4
  store i32 %v2_159cc, i32* @eax, align 4
  store i32 %v2_159bb, i32* %edx.global-to-local, align 4
  %v1_159d2 = load i32, i32* @esp, align 4
  %v2_159d2 = add i32 %v1_159d2, 8
  %v3_159d2 = inttoptr i32 %v2_159d2 to i32*
  store i32 %v2_159bb, i32* %v3_159d2, align 4
  %v0_159d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_159d6 = load i32, i32* @esp, align 4
  %v2_159d6 = add i32 %v1_159d6, 4
  %v3_159d6 = inttoptr i32 %v2_159d6 to i32*
  store i32 %v0_159d6, i32* %v3_159d6, align 4
  %v1_159da = load i32, i32* @esp, align 4
  %v2_159da = inttoptr i32 %v1_159da to i32*
  store i32 %v2_159cc, i32* %v2_159da, align 4
  %v0_159dd = call i32 @function_31418()
  br label %dec_label_pc_159fb

dec_label_pc_159e7:                               ; preds = %dec_label_pc_1592c
  store i32 %v2_15932, i32* @eax, align 4
  %v1_159ea = load i32, i32* @esp, align 4
  %v2_159ea = inttoptr i32 %v1_159ea to i32*
  store i32 %v2_15932, i32* %v2_159ea, align 4
  %v0_159ed = call i32 @function_31470()
  %v1_159f2 = add i32 %v0_159ed, 4
  %v2_159f2 = inttoptr i32 %v1_159f2 to i32*
  %v3_159f2 = load i32, i32* %v2_159f2, align 4
  %v1_159f5 = add i32 %v3_159f2, 1
  store i32 %v1_159f5, i32* %edx.global-to-local, align 4
  store i32 %v1_159f5, i32* %v2_159f2, align 4
  br label %dec_label_pc_159fb

dec_label_pc_159fb:                               ; preds = %dec_label_pc_159e7, %dec_label_pc_15979
  %v3_159fe = load i32, i32* %v2_159fe, align 4
  store i32 %v3_159fe, i32* %edx.global-to-local, align 4
  %v3_15a01 = load i32, i32* %stack_var_-40, align 4
  %v2_15a04 = add i32 %v3_15a01, %v3_159fe
  store i32 %v2_15a04, i32* %stack_var_-40, align 4
  %tmp127 = icmp ule i32 %v2_15a04, %v2_1591c
  %v5_15a12 = icmp eq i1 %tmp127, false
  %v1_15a14 = icmp eq i1 %v5_15a12, false
  br i1 %v1_15a14, label %dec_label_pc_1592c, label %dec_label_pc_15a1a

dec_label_pc_15a1a:                               ; preds = %dec_label_pc_158f9, %dec_label_pc_159fb, %dec_label_pc_158b6
  %v1_15a1d = load i32, i32* @esp, align 4
  %v2_15a1d = inttoptr i32 %v1_15a1d to i32*
  store i32 %v2_158e4, i32* %v2_15a1d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15a4a

bb:                                               ; preds = %dec_label_pc_15a1a
  %v1_15a2f = call i32 @function_15a4f()
  br label %dec_label_pc_15a4a

dec_label_pc_15a4a:                               ; preds = %dec_label_pc_15a1a, %bb
  %v0_15a31 = phi i32 [ 0, %dec_label_pc_15a1a ], [ %v1_15a2f, %bb ]
  ret i32 %v0_15a31

; uselistorder directives
  uselistorder i32 %v2_15a04, { 1, 0 }
  uselistorder i32* %v2_159fe, { 1, 0 }
  uselistorder i32 %v1_1592f, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1591c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 2, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_15a4a, { 1, 0 }
  uselistorder label %dec_label_pc_15a1a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1592c, { 1, 0 }
}

define i32 @function_15a33() local_unnamed_addr {
dec_label_pc_15a33:
  %eax.global-to-local = alloca i32, align 4
  %v0_15a33 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15a33
}

define i32 @function_15a4f() local_unnamed_addr {
dec_label_pc_15a4f:
  %v0_15a53 = load i32, i32* @eax, align 4
  ret i32 %v0_15a53
}

define i32 @_ZN21LockedPageManagerBaseI16MemoryPageLockerE11UnlockRangeEPvj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15a54:
  %stack_var_-48 = alloca i32, align 4
  %v10_15a8d = icmp eq i32 %arg3, 0
  br i1 %v10_15a8d, label %bb, label %dec_label_pc_15a97

bb:                                               ; preds = %dec_label_pc_15a54
  %v2_15a82 = ptrtoint i32* %stack_var_-48 to i32
  %v1_15a7b = add i32 %arg1, 4
  %v3_15a91 = call i32 @function_15bb8(i32 %v2_15a82, i32 %v1_15a7b)
  br label %dec_label_pc_15a97

dec_label_pc_15a97:                               ; preds = %bb, %dec_label_pc_15a54
  %v1_15aa0 = add i32 %arg1, 32
  %v2_15aa0 = inttoptr i32 %v1_15aa0 to i32*
  %v3_15aa0 = load i32, i32* %v2_15aa0, align 4
  %v5_15aa3 = and i32 %v3_15aa0, %arg2
  %v1_15ac5 = call i32 @function_15ba7(i32 %v5_15aa3)
  ret i32 %v1_15ac5
}

define i32 @function_15b43() local_unnamed_addr {
dec_label_pc_15b43:
  %eax.global-to-local = alloca i32, align 4
  %v0_15b48 = load i32, i32* %eax.global-to-local, align 4
  %v2_15b48 = add i32 %v0_15b48, 131
  %v16_15b48 = and i32 %v2_15b48, 255
  %v18_15b48 = and i32 %v0_15b48, -256
  %v19_15b48 = or i32 %v16_15b48, %v18_15b48
  store i32 %v19_15b48, i32* @eax, align 4
  %v0_15b4a = call i32 @function_4508901()
  store i32 %v0_15b4a, i32* %eax.global-to-local, align 4
  ret i32 %v0_15b4a

; uselistorder directives
  uselistorder i32 %v0_15b48, { 1, 0 }
}

define i32 @function_15b70() local_unnamed_addr {
dec_label_pc_15b70:
  %eax.global-to-local = alloca i32, align 4
  %v0_15b70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15b70
}

define i32 @function_15ba7(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ba7:
  %v0_15ba7 = load i32, i32* @ebp, align 4
  %v1_15ba7 = add i32 %v0_15ba7, -36
  %v2_15ba7 = inttoptr i32 %v1_15ba7 to i32*
  %v3_15ba7 = load i32, i32* %v2_15ba7, align 4
  %v2_15baa = add i32 %v0_15ba7, -16
  %v3_15baa = inttoptr i32 %v2_15baa to i32*
  %v4_15baa = load i32, i32* %v3_15baa, align 4
  %tmp = icmp ule i32 %v3_15ba7, %v4_15baa
  %v3_15bad = zext i1 %tmp to i32
  %v5_15bad = and i32 %v3_15ba7, -256
  %v6_15bad = or i32 %v3_15bad, %v5_15bad
  ret i32 %v6_15bad

; uselistorder directives
  uselistorder i32 %v3_15ba7, { 1, 0 }
}

define i32 @function_15bb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15bb8:
  %v0_15bb8 = load i32, i32* @ebp, align 4
  %v1_15bc3 = add i32 %v0_15bb8, -12
  %v2_15bc3 = inttoptr i32 %v1_15bc3 to i32*
  %v3_15bc3 = load i32, i32* %v2_15bc3, align 4
  %v1_15bc6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15bc6 = xor i32 %v1_15bc6, %v3_15bc3
  %v3_15bc6 = icmp eq i32 %v2_15bc6, 0
  store i32 %v2_15bc6, i32* @eax, align 4
  br i1 %v3_15bc6, label %bb, label %dec_label_pc_15be8

bb:                                               ; preds = %dec_label_pc_15bb8
  %v1_15bb8 = add i32 %v0_15bb8, -44
  %v2_15bcd = call i32 @function_15bed(i32 %v1_15bb8)
  br label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15bb8, %bb
  %v0_15bcf = phi i32 [ %v2_15bc6, %dec_label_pc_15bb8 ], [ %v2_15bcd, %bb ]
  ret i32 %v0_15bcf

; uselistorder directives
  uselistorder i32 %v0_15bb8, { 1, 0 }
  uselistorder label %dec_label_pc_15be8, { 1, 0 }
}

define i32 @function_15bd1() local_unnamed_addr {
dec_label_pc_15bd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_15bd1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_15bd1
}

define i32 @function_15bed(i32 %arg1) local_unnamed_addr {
dec_label_pc_15bed:
  %v0_15bf1 = load i32, i32* @eax, align 4
  ret i32 %v0_15bf1
}

define i32 @_ZN5boost10lock_guardINS_5mutexEEC1ERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15bf2:
  ret i32 %arg1
}

define i32 @function_15c16(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c16:
  %v0_15c16 = load i32, i32* @ebx, align 4
  %v1_15c16 = add i32 %v0_15c16, 9167941
  %v2_15c16 = inttoptr i32 %v1_15c16 to i8*
  %v3_15c16 = load i8, i8* %v2_15c16, align 1
  %v4_15c16 = load i32, i32* @ecx, align 4
  %v5_15c16 = trunc i32 %v4_15c16 to i8
  %v6_15c16 = load i1, i1* @cf, align 1
  %v7_15c16 = zext i1 %v6_15c16 to i8
  %v8_15c16 = add i8 %v5_15c16, %v3_15c16
  %v9_15c16 = add i8 %v8_15c16, %v7_15c16
  store i8 %v9_15c16, i8* %v2_15c16, align 1
  %v0_15c1c = load i32, i32* @eax, align 4
  %v1_15c1f = call i32 @function_2526c(i32 %v0_15c1c)
  %v0_15c24 = load i32, i32* @ebp, align 4
  %v1_15c24 = add i32 %v0_15c24, -12
  %v2_15c24 = inttoptr i32 %v1_15c24 to i32*
  %v3_15c24 = load i32, i32* %v2_15c24, align 4
  %v1_15c27 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_15c27 = xor i32 %v1_15c27, %v3_15c24
  %v3_15c27 = icmp eq i32 %v2_15c27, 0
  store i32 %v2_15c27, i32* @eax, align 4
  br i1 %v3_15c27, label %bb, label %dec_label_pc_15c30

bb:                                               ; preds = %dec_label_pc_15c16
  %v1_15c2e = call i32 @function_15c35()
  br label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %bb, %dec_label_pc_15c16
  %v2_15c2e = phi i32 [ %v1_15c2e, %bb ], [ %v2_15c27, %dec_label_pc_15c16 ]
  ret i32 %v2_15c2e

; uselistorder directives
  uselistorder i32 9167941, { 1, 0 }
}

define i32 @function_15c35() local_unnamed_addr {
dec_label_pc_15c35:
  %v0_15c36 = load i32, i32* @eax, align 4
  ret i32 %v0_15c36
}

define i32 @_ZN5boost10lock_guardINS_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15c38:
  %v2_15c52 = load i32, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15c68

bb:                                               ; preds = %dec_label_pc_15c38
  %v2_15c66 = call i32 @function_15c6d(i32 %v2_15c52)
  br label %dec_label_pc_15c68

dec_label_pc_15c68:                               ; preds = %bb, %dec_label_pc_15c38
  %v3_15c66 = phi i32 [ %v2_15c66, %bb ], [ 0, %dec_label_pc_15c38 ]
  ret i32 %v3_15c66
}

define i32 @function_15c6d(i32 %arg1) local_unnamed_addr {
dec_label_pc_15c6d:
  %v0_15c6e = load i32, i32* @eax, align 4
  ret i32 %v0_15c6e
}

define i32 @_ZN5boost16thread_cv_detail12lock_on_exitINS_11unique_lockINS_5mutexEEEEC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15c70:
  store i32 0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15c9c

bb:                                               ; preds = %dec_label_pc_15c70
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_15c9a = call i32 @function_15ca1(i32 %tmp100)
  br label %dec_label_pc_15c9c

dec_label_pc_15c9c:                               ; preds = %bb, %dec_label_pc_15c70
  %v3_15c9a = phi i32 [ %v2_15c9a, %bb ], [ 0, %dec_label_pc_15c70 ]
  ret i32 %v3_15c9a

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_15ca1(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ca1:
  %v0_15ca2 = load i32, i32* @eax, align 4
  ret i32 %v0_15ca2
}

define i32 @_ZN5boost16thread_cv_detail12lock_on_exitINS_11unique_lockINS_5mutexEEEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15ca4:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_15ca4 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_15ca4, i32* %stack_var_-4, align 4
  %v4_15ca4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_15ca4, i32* @ebp, align 4
  %v2_15cbe = load i32, i32* %arg1, align 4
  %v1_15cc0 = icmp eq i32 %v2_15cbe, 0
  br i1 %v1_15cc0, label %dec_label_pc_15cd1, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15ca4
  %v2_15cc7 = load i32, i32* %arg1, align 4
  store i32 %v2_15cc7, i32* @eax, align 4
  %v1_15ccc = call i32 @function_2c178(i32 %v2_15cc7)
  %v2_15ce2.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_15cd1

dec_label_pc_15cd1:                               ; preds = %dec_label_pc_15cc4, %dec_label_pc_15ca4
  %v2_15ce2 = phi i32 [ %v2_15ce2.pre, %dec_label_pc_15cc4 ], [ %v0_15ca4, %dec_label_pc_15ca4 ]
  store i32 %v2_15ce2, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16thread_cv_detail12lock_on_exitINS_11unique_lockINS_5mutexEEEE8activateERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15ce4:
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_15d07 = call i32 @function_2c134(i32 %arg2)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15d20

bb:                                               ; preds = %dec_label_pc_15ce4
  %v1_15d1e = call i32 @function_15d25()
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %bb, %dec_label_pc_15ce4
  %v2_15d1e = phi i32 [ %v1_15d1e, %bb ], [ 0, %dec_label_pc_15ce4 ]
  ret i32 %v2_15d1e

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_15d25() local_unnamed_addr {
dec_label_pc_15d25:
  %v0_15d26 = load i32, i32* @eax, align 4
  ret i32 %v0_15d26
}

define i32 @_ZN5boost11unique_lockINS_5mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15d28:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_15d50 = add i32 %tmp102, 4
  %v2_15d50 = inttoptr i32 %v1_15d50 to i8*
  store i8 0, i8* %v2_15d50, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_15d5a = call i32 @function_2c1fc(i32 %tmp102)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @_ZN5boost11unique_lockINS_5mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15d72:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_15d8f = call i32 @function_319e8(i32 %tmp101)
  %v4_15d94 = trunc i32 %v1_15d8f to i8
  %v5_15d94 = icmp eq i8 %v4_15d94, 0
  br i1 %v5_15d94, label %dec_label_pc_15da5, label %dec_label_pc_15d98

dec_label_pc_15d98:                               ; preds = %dec_label_pc_15d72
  %v2_15d9b = load i32, i32* %arg1, align 4
  %v1_15da0 = call i32 @function_25464(i32 %v2_15d9b)
  br label %dec_label_pc_15da5

dec_label_pc_15da5:                               ; preds = %dec_label_pc_15d98, %dec_label_pc_15d72
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15db1

bb:                                               ; preds = %dec_label_pc_15da5
  %v1_15daf = call i32 @function_15db6()
  br label %dec_label_pc_15db1

dec_label_pc_15db1:                               ; preds = %bb, %dec_label_pc_15da5
  %v2_15daf = phi i32 [ %v1_15daf, %bb ], [ 0, %dec_label_pc_15da5 ]
  ret i32 %v2_15daf

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
  uselistorder i32 (i32)* @function_25464, { 1, 0 }
}

define i32 @function_15db6() local_unnamed_addr {
dec_label_pc_15db6:
  %v0_15db7 = load i32, i32* @eax, align 4
  ret i32 %v0_15db7
}

define i32 @_ZN5boost3argILi1EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15db8:
  ret i32 0
}

define i32 @_ZN5boost3argILi2EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15de2:
  ret i32 0
}

define i32 @_ZN5boost3argILi3EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e0c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15e2f

bb:                                               ; preds = %dec_label_pc_15e0c
  %v2_15e2d = call i32 @function_15e34(i32 %arg1)
  br label %dec_label_pc_15e2f

dec_label_pc_15e2f:                               ; preds = %bb, %dec_label_pc_15e0c
  %v3_15e2d = phi i32 [ %v2_15e2d, %bb ], [ 0, %dec_label_pc_15e0c ]
  ret i32 %v3_15e2d
}

define i32 @function_15e34(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e34:
  %v0_15e35 = load i32, i32* @eax, align 4
  ret i32 %v0_15e35
}

define i32 @_ZN5boost3argILi4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e36:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15e59

bb:                                               ; preds = %dec_label_pc_15e36
  %v2_15e57 = call i32 @function_15e5e(i32 %arg1)
  br label %dec_label_pc_15e59

dec_label_pc_15e59:                               ; preds = %bb, %dec_label_pc_15e36
  %v3_15e57 = phi i32 [ %v2_15e57, %bb ], [ 0, %dec_label_pc_15e36 ]
  ret i32 %v3_15e57
}

define i32 @function_15e5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e5e:
  %v0_15e5f = load i32, i32* @eax, align 4
  ret i32 %v0_15e5f
}

define i32 @_ZN5boost3argILi5EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e60:
  ret i32 0
}

define i32 @_ZN5boost3argILi6EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e8a:
  ret i32 0
}

define i32 @_ZN5boost3argILi7EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15eb4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15ed7

bb:                                               ; preds = %dec_label_pc_15eb4
  %v2_15ed5 = call i32 @function_15edc(i32 %arg1)
  br label %dec_label_pc_15ed7

dec_label_pc_15ed7:                               ; preds = %bb, %dec_label_pc_15eb4
  %v3_15ed5 = phi i32 [ %v2_15ed5, %bb ], [ 0, %dec_label_pc_15eb4 ]
  ret i32 %v3_15ed5
}

define i32 @function_15edc(i32 %arg1) local_unnamed_addr {
dec_label_pc_15edc:
  %v0_15edd = load i32, i32* @eax, align 4
  ret i32 %v0_15edd
}

define i32 @_ZN5boost3argILi8EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ede:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15f01

bb:                                               ; preds = %dec_label_pc_15ede
  %v2_15eff = call i32 @function_15f06(i32 %arg1)
  br label %dec_label_pc_15f01

dec_label_pc_15f01:                               ; preds = %bb, %dec_label_pc_15ede
  %v3_15eff = phi i32 [ %v2_15eff, %bb ], [ 0, %dec_label_pc_15ede ]
  ret i32 %v3_15eff
}

define i32 @function_15f06(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f06:
  %v0_15f07 = load i32, i32* @eax, align 4
  ret i32 %v0_15f07
}

define i32 @_ZN5boost3argILi9EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_15f08:
  ret i32 0
}

define i32 @_ZN5boost11shared_lockINS_12shared_mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15f32:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_15f5a = add i32 %tmp102, 4
  %v2_15f5a = inttoptr i32 %v1_15f5a to i8*
  store i8 0, i8* %v2_15f5a, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_15f64 = call i32 @function_31c46(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_15f75

bb:                                               ; preds = %dec_label_pc_15f32
  %v1_15f73 = call i32 @function_15f7a()
  br label %dec_label_pc_15f75

dec_label_pc_15f75:                               ; preds = %bb, %dec_label_pc_15f32
  %v2_15f73 = phi i32 [ %v1_15f73, %bb ], [ 0, %dec_label_pc_15f32 ]
  ret i32 %v2_15f73

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_15f7a() local_unnamed_addr {
dec_label_pc_15f7a:
  %v0_15f7b = load i32, i32* @eax, align 4
  ret i32 %v0_15f7b
}

define i32 @_ZN5boost11shared_lockINS_12shared_mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_15f7c:
  %ebp.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_15f7c = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_15f7c, i32* %stack_var_-4, align 4
  %v4_15f7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_15f7c, i32* @ebp, align 4
  %v4_15f9e = trunc i32 %tmp102 to i8
  %v5_15f9e = icmp eq i8 %v4_15f9e, 0
  br i1 %v5_15f9e, label %dec_label_pc_15faf, label %dec_label_pc_15fa2

dec_label_pc_15fa2:                               ; preds = %dec_label_pc_15f7c
  %v2_15fa5 = load i32, i32* %arg1, align 4
  %v1_15faa = call i32 @function_26b80(i32 %v2_15fa5)
  %v2_15fc0.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_15faf

dec_label_pc_15faf:                               ; preds = %dec_label_pc_15fa2, %dec_label_pc_15f7c
  %v2_15fc0 = phi i32 [ %v2_15fc0.pre, %dec_label_pc_15fa2 ], [ %v0_15f7c, %dec_label_pc_15f7c ]
  store i32 %v2_15fc0, i32* %ebp.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE5adoptEPS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fc2:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_15fe5 = call i32 @function_30eea(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_15ff8 = call i32 @function_31d8a(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16009

bb:                                               ; preds = %dec_label_pc_15fc2
  %v1_16007 = call i32 @function_1600e()
  br label %dec_label_pc_16009

dec_label_pc_16009:                               ; preds = %bb, %dec_label_pc_15fc2
  %v2_16007 = phi i32 [ %v1_16007, %bb ], [ 0, %dec_label_pc_15fc2 ]
  ret i32 %v2_16007

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_1600e() local_unnamed_addr {
dec_label_pc_1600e:
  %v0_1600f = load i32, i32* @eax, align 4
  ret i32 %v0_1600f
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16010:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_16030 = inttoptr i32 %arg2 to i32*
  %v2_16030 = load i32, i32* %v1_16030, align 4
  store i32 %v2_16030, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v1_1603d = call i32 @function_31dd8(i32 %tmp102)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1Ev() local_unnamed_addr {
dec_label_pc_16056:
  %eax.global-to-local = alloca i32, align 4
  %v5_16056 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_16056
}

define i32 @function_16058(i32 %arg1) local_unnamed_addr {
dec_label_pc_16058:
  %v0_16063 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16068 = load i32, i32* @ebp, align 4
  %v2_16068 = add i32 %v1_16068, -12
  %v3_16068 = inttoptr i32 %v2_16068 to i32*
  store i32 %v0_16063, i32* %v3_16068, align 4
  %v0_1606d = load i32, i32* @ebp, align 4
  %v1_1606d = add i32 %v0_1606d, -28
  %v2_1606d = inttoptr i32 %v1_1606d to i32*
  %v3_16078 = load i32, i32* %v2_1606d, align 4
  %v1_1607b = add i32 %v3_16078, 20
  store i32 %v1_1607b, i32* @eax, align 4
  %v1_16081 = call i32 @function_1ef04(i32 %v1_1607b)
  %v0_16086 = load i32, i32* @ebp, align 4
  %v1_16086 = add i32 %v0_16086, -28
  %v2_16086 = inttoptr i32 %v1_16086 to i32*
  %v3_16086 = load i32, i32* %v2_16086, align 4
  %v1_16089 = inttoptr i32 %v3_16086 to i32*
  store i32 ptrtoint (%vtable_382d8_type* @global_var_382d8.2275 to i32), i32* %v1_16089, align 4
  %v0_1608f = load i32, i32* @ebp, align 4
  %v1_1608f = add i32 %v0_1608f, -28
  %v2_1608f = inttoptr i32 %v1_1608f to i32*
  %v3_1608f = load i32, i32* %v2_1608f, align 4
  %v1_16092 = add i32 %v3_1608f, 20
  %v2_16092 = inttoptr i32 %v1_16092 to i32*
  store i32 ptrtoint (i32* @global_var_382e8.2276 to i32), i32* %v2_16092, align 4
  %v0_16099 = load i32, i32* @ebp, align 4
  %v1_16099 = add i32 %v0_16099, -12
  %v2_16099 = inttoptr i32 %v1_16099 to i32*
  %v3_16099 = load i32, i32* %v2_16099, align 4
  %v1_1609c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1609c = xor i32 %v1_1609c, %v3_16099
  ret i32 %v2_1609c
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev() local_unnamed_addr {
dec_label_pc_160ac:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_160ae(i32 %arg1) local_unnamed_addr {
dec_label_pc_160ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_160ae = load i32, i32* @eax, align 4
  %v27_160b0 = and i32 %v0_160ae, -256
  %v2_160b2 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_160b2 = zext i8 %v2_160b2 to i32
  %v6_160b2 = or i32 %v3_160b2, %v27_160b0
  store i32 %v6_160b2, i32* %eax.global-to-local, align 4
  %v0_160b3 = load i32, i32* @esp, align 4
  %v8_160b3 = add i32 %v0_160b3, -32
  %v23_160b3 = inttoptr i32 %v8_160b3 to i32*
  %v24_160b3 = load i32, i32* @edi, align 4
  store i32 %v24_160b3, i32* %v23_160b3, align 4
  %v0_160b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_160b4 = inttoptr i32 %v0_160b4 to i32*
  %v2_160b4 = load i32, i32* %v1_160b4, align 4
  %v4_160b4 = add i32 %v2_160b4, %v0_160b4
  store i32 %v4_160b4, i32* %v1_160b4, align 4
  %v22_160b4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_160b4
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_160b6:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_382d8_type* @global_var_382d8.2275 to i32), i32* %arg1, align 4
  ret i32 %tmp99
}

define i32 @function_160de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_160de:
  %v0_160e0 = load i32, i32* @ebp, align 4
  %v1_160e0 = add i32 %v0_160e0, -28
  %v2_160e0 = inttoptr i32 %v1_160e0 to i32*
  %v3_160e0 = load i32, i32* %v2_160e0, align 4
  %v1_160e3 = add i32 %v3_160e0, 20
  ret i32 %v1_160e3
}

define i32 @function_16120() local_unnamed_addr {
dec_label_pc_16120:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_16120 = load i32, i32* %ecx.global-to-local, align 4
  %v1_16120 = add i32 %v0_16120, -1
  store i32 %v1_16120, i32* %ecx.global-to-local, align 4
  %v0_16122 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16122
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_16124:
  %v4_16124 = add i32 %arg1, -20
  %v1_16129 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %v4_16124)
  ret i32 %v1_16129
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) {
dec_label_pc_1612c:
  store i32 %arg1, i32* @eax, align 4
  %v1_16149 = call i32 @function_2c1da(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_16158() local_unnamed_addr {
dec_label_pc_16158:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_16158 = load i32, i32* %ebx.global-to-local, align 4
  %v1_16158 = add i32 %v0_16158, 862319685
  %v2_16158 = inttoptr i32 %v1_16158 to i32*
  %v3_16158 = load i32, i32* %v2_16158, align 4
  %v4_16158 = add i32 %v3_16158, -1
  store i32 %v4_16158, i32* %v2_16158, align 4
  %v0_1615e = load i32, i32* %eax.global-to-local, align 4
  %v1_1615e = add i32 %v0_1615e, 20
  store i32 %v1_1615e, i32* %eax.global-to-local, align 4
  ret i32 %v1_1615e
}

define i32 @_ZNSt9bad_allocC1ERKS_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1616c:
  ret i32 %arg1
}

define i32 @function_16178(i32 %arg1) local_unnamed_addr {
dec_label_pc_16178:
  %v0_16178 = load i32, i32* @ebp, align 4
  %v1_16178 = add i32 %v0_16178, 12
  %v2_16178 = inttoptr i32 %v1_16178 to i32*
  %v3_16178 = load i32, i32* %v2_16178, align 4
  %v2_1617b = add i32 %v0_16178, -32
  %v3_1617b = inttoptr i32 %v2_1617b to i32*
  store i32 %v3_16178, i32* %v3_1617b, align 4
  %v0_1617e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_16184 = load i32, i32* @ebp, align 4
  %v2_16184 = add i32 %v1_16184, -12
  %v3_16184 = inttoptr i32 %v2_16184 to i32*
  store i32 %v0_1617e, i32* %v3_16184, align 4
  %v0_16189 = load i32, i32* @ebp, align 4
  %v1_16189 = add i32 %v0_16189, -32
  %v2_16189 = inttoptr i32 %v1_16189 to i32*
  %v3_16189 = load i32, i32* %v2_16189, align 4
  %v1_1618c = add i32 %v0_16189, -28
  %v2_1618c = inttoptr i32 %v1_1618c to i32*
  %v3_1618c = load i32, i32* %v2_1618c, align 4
  store i32 %v3_1618c, i32* @eax, align 4
  %v2_16196 = call i32 @function_259d4(i32 %v3_1618c, i32 %v3_16189)
  %v0_1619b = load i32, i32* @ebp, align 4
  %v1_1619b = add i32 %v0_1619b, -28
  %v2_1619b = inttoptr i32 %v1_1619b to i32*
  %v3_1619b = load i32, i32* %v2_1619b, align 4
  ret i32 %v3_1619b
}

define i32 @function_161b5() local_unnamed_addr {
dec_label_pc_161b5:
  %eax.global-to-local = alloca i32, align 4
  %v0_161b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_161b6
}

define i32 @_ZN5boost16exception_detail10bad_alloc_C1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_161b8:
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @edx, align 4
  store i32 %tmp103, i32* @eax, align 4
  %v2_161e2 = call i32 @function_26f9e(i32 %tmp103, i32 %arg2)
  %v1_161ea = add i32 %arg2, 20
  %v1_161f0 = add i32 %tmp103, 20
  %v2_161fa = call i32 @function_2c324(i32 %v1_161f0, i32 %v1_161ea)
  store i32 ptrtoint (%vtable_382d8_type* @global_var_382d8.2275 to i32), i32* %arg1, align 4
  %v2_1620b = inttoptr i32 %v1_161f0 to i32*
  store i32 ptrtoint (i32* @global_var_382e8.2276 to i32), i32* %v2_1620b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1621e

bb:                                               ; preds = %dec_label_pc_161b8
  %v1_1621c = call i32 @function_16223()
  br label %dec_label_pc_1621e

dec_label_pc_1621e:                               ; preds = %bb, %dec_label_pc_161b8
  %v2_1621c = phi i32 [ %v1_1621c, %bb ], [ 0, %dec_label_pc_161b8 ]
  ret i32 %v2_1621c

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_382d8_type* @global_var_382d8.2275 to i32), { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_16223() local_unnamed_addr {
dec_label_pc_16223:
  %v0_16224 = load i32, i32* @eax, align 4
  ret i32 %v0_16224
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16226:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_16250 = call i32 @function_2c3de(i32 %tmp103, i32 %arg2)
  %v1_16258 = add i32 %arg2, 24
  %v1_1625e = add i32 %tmp103, 24
  %v2_16268 = call i32 @__stack_chk_fail.1047(i32 %v1_1625e, i32 %v1_16258)
  store i32 ptrtoint (%vtable_38278_type* @global_var_38278.2278 to i32), i32* %arg1, align 4
  %v1_16279 = add i32 %tmp103, 20
  %v2_16279 = inttoptr i32 %v1_16279 to i32*
  store i32 ptrtoint (i32* @global_var_38290.2279 to i32), i32* %v2_16279, align 4
  %v2_16283 = inttoptr i32 %v1_1625e to i32*
  store i32 ptrtoint (i32* @global_var_382a4.2280 to i32), i32* %v2_16283, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv() local_unnamed_addr {
dec_label_pc_162a0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_162ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_162ee:
  %v3_162ee = load i32, i32* @eax, align 4
  %tmp7 = trunc i32 %v3_162ee to i8
  %v5_162f0 = mul i8 %tmp7, 2
  %v21_162f0 = inttoptr i32 %v3_162ee to i8*
  store i8 %v5_162f0, i8* %v21_162f0, align 1
  %v0_162f2 = load i32, i32* @ebp, align 4
  %v1_162f2 = add i32 %v0_162f2, -36
  store i32 %v1_162f2, i32* @eax, align 4
  %v1_162f8 = call i32 @function_1fb88(i32 %v1_162f2)
  %v0_16305 = load i32, i32* @ebp, align 4
  %v1_16305 = add i32 %v0_16305, -32
  store i32 %v1_16305, i32* @eax, align 4
  %v3_1630b = call i32 @function_1fb50(i32 %v1_16305, i32 ptrtoint ([169 x i8]* @global_var_c730.2281 to i32))
  %v0_16310 = load i32, i32* @ebp, align 4
  %v1_16310 = add i32 %v0_16310, -32
  %v1_16317 = add i32 %v0_16310, -92
  store i32 %v1_16317, i32* @eax, align 4
  %v3_1631d = call i32 @function_3226c(i32 %v1_16317, i32 %v1_16310)
  %v0_16322 = load i32, i32* @ebp, align 4
  %v1_16322 = add i32 %v0_16322, -36
  store i32 %v1_16322, i32* @edx, align 4
  %v3_1632c = call i32 @function_322ae(i32 %v3_1631d, i32 %v1_16322)
  %v0_16331 = load i32, i32* @ebp, align 4
  %v1_16331 = add i32 %v0_16331, -40
  %v3_1633b = call i32 @function_322f0(i32 %v3_1632c, i32 %v1_16331)
  %v2_16345 = load i8, i8* inttoptr (i32 90784 to i8*), align 32
  %v7_16348 = icmp eq i8 %v2_16345, 0
  %v1_1635a = icmp eq i1 %v7_16348, false
  %v2_1635a = zext i1 %v1_1635a to i32
  %v4_1635a = sext i8 %v2_16345 to i32
  %v5_1635a = and i32 %v4_1635a, -256
  %v6_1635a = or i32 %v2_1635a, %v5_1635a
  %v0_16374 = load i32, i32* @ebp, align 4
  %v1_16374 = add i32 %v0_16374, -92
  store i32 %v1_16374, i32* @eax, align 4
  %v3_1637e = call i32 @function_2c4c6(i32 %v6_1635a, i32 %v1_16374)
  %v3_1638e = call i32 @function_32332(i32 ptrtoint (i32* @global_var_38c00 to i32), i32 %v6_1635a)
  ret i32 %v3_1638e
}

define i32 @function_163f6() local_unnamed_addr {
dec_label_pc_163f6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_163f6 = load i32, i32* %eax.global-to-local, align 4
  %v0_163f8 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_163f6, i32* @ebx, align 4
  %v1_16402 = call i32 @function_16406(i32 %v0_163f8)
  store i32 %v1_16402, i32* %eax.global-to-local, align 4
  ret i32 %v1_16402
}

define i32 @function_16404() local_unnamed_addr {
dec_label_pc_16404:
  %eax.global-to-local = alloca i32, align 4
  %v0_16404 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16404
}

define i32 @function_16406(i32 %arg1) local_unnamed_addr {
dec_label_pc_16406:
  %v0_16418 = call i32 @function_1641c()
  ret i32 %v0_16418
}

define i32 @function_1641a() local_unnamed_addr {
dec_label_pc_1641a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1641a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1641a
}

define i32 @function_1641c() local_unnamed_addr {
dec_label_pc_1641c:
  %v0_1641c = load i32, i32* @ebp, align 4
  %v1_1641c = add i32 %v0_1641c, -92
  store i32 %v1_1641c, i32* @eax, align 4
  %v1_16422 = call i32 @function_321a6(i32 %v1_1641c)
  %v0_16427 = call i32 @function_1642b()
  ret i32 %v0_16427
}

define i32 @function_16429() local_unnamed_addr {
dec_label_pc_16429:
  %eax.global-to-local = alloca i32, align 4
  %v0_16429 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16429
}

define i32 @function_1642b() local_unnamed_addr {
dec_label_pc_1642b:
  %v0_1642b = load i32, i32* @ebp, align 4
  %v1_1642b = add i32 %v0_1642b, -64
  store i32 %v1_1642b, i32* @eax, align 4
  %v1_16431 = call i32 @function_2c356(i32 %v1_1642b)
  %v0_16436 = load i32, i32* @ebx, align 4
  ret i32 %v0_16436
}

define i32 @function_16440() local_unnamed_addr {
dec_label_pc_16440:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_16445(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16445:
  %eax.global-to-local = alloca i32, align 4
  %v0_1644c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1644c
}

define i32 @_ZN5boost11unique_lockINS_5mutexEE6unlockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16450:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1646e = call i32 @function_320c6(i32 %tmp101)
  %v1_16473 = xor i32 %v1_1646e, 1
  %v4_16473 = trunc i32 %v1_16473 to i8
  %v5_16476 = icmp eq i8 %v4_16473, 0
  br i1 %v5_16476, label %dec_label_pc_16490, label %dec_label_pc_1647a

dec_label_pc_1647a:                               ; preds = %dec_label_pc_16450
  %v2_1647a = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1647a, i32* @eax, align 4
  %v1_16480 = call i32 @function_21512(i32 %v2_1647a)
  %v1_1648b = call i32 @function_2b38d(i32 %v2_1647a)
  br label %dec_label_pc_16490

dec_label_pc_16490:                               ; preds = %dec_label_pc_1647a, %dec_label_pc_16450
  %v2_16493 = load i32, i32* %arg1, align 4
  store i32 %v2_16493, i32* @eax, align 4
  %v1_16498 = call i32 @function_25b42(i32 %v2_16493)
  %v1_164a0 = add i32 %tmp101, 4
  %v2_164a0 = inttoptr i32 %v1_164a0 to i8*
  store i8 0, i8* %v2_164a0, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_164b0

bb:                                               ; preds = %dec_label_pc_16490
  %v1_164ae = call i32 @function_164ce()
  store i32 %v1_164ae, i32* @eax, align 4
  br label %dec_label_pc_164b0

dec_label_pc_164b0:                               ; preds = %bb, %dec_label_pc_16490
  %v0_164b0 = call i32 @function_164c9()
  ret i32 %v0_164b0
}

define i32 @function_164b3() local_unnamed_addr {
dec_label_pc_164b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_164b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_164b3
}

define i32 @function_164c9() local_unnamed_addr {
dec_label_pc_164c9:
  %v0_164c9 = load i32, i32* @eax, align 4
  ret i32 %v0_164c9
}

define i32 @function_164ce() local_unnamed_addr {
dec_label_pc_164ce:
  %v0_164d3 = load i32, i32* @eax, align 4
  ret i32 %v0_164d3
}

define i32 @_ZN5boost11unique_lockINS_5mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_164d4:
  %stack_var_-24 = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_164f2 = call i32 @function_3214a(i32 %tmp102)
  %v4_164f7 = trunc i32 %v1_164f2 to i8
  %v5_164f7 = icmp eq i8 %v4_164f7, 0
  br i1 %v5_164f7, label %dec_label_pc_16511, label %dec_label_pc_164fb

dec_label_pc_164fb:                               ; preds = %dec_label_pc_164d4
  %v2_164fb = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_164fb, i32* @eax, align 4
  %v1_16501 = call i32 @function_21596(i32 %v2_164fb)
  store i32 %v2_164fb, i32* @eax, align 4
  %v1_1650c = call i32 @function_2b411(i32 %v2_164fb)
  br label %dec_label_pc_16511

dec_label_pc_16511:                               ; preds = %dec_label_pc_164fb, %dec_label_pc_164d4
  %v2_16514 = load i32, i32* %arg1, align 4
  %v1_16519 = call i32 @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i32 %v2_16514)
  %v1_16521 = add i32 %tmp102, 4
  %v2_16521 = inttoptr i32 %v1_16521 to i8*
  store i8 1, i8* %v2_16521, align 1
  ret i32 0
}

define i32 @_Z3REFI9CFlatDataERT_RKS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_16555:
  ret i32 %arg1
}

define i32 @_ZNSt6vectorIhSaIhEEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16582:
  %v2_165a2 = load i32, i32* %arg1, align 4
  %v5_165a4 = add i32 %v2_165a2, %arg2
  ret i32 %v5_165a4
}

define i32 @_ZNSt6vectorIhSaIhEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_165ba:
  store i32 %arg1, i32* @eax, align 4
  %v2_165e4 = call i32 @function_326c2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_165f8

bb:                                               ; preds = %dec_label_pc_165ba
  %v1_165f6 = call i32 @function_165fd()
  br label %dec_label_pc_165f8

dec_label_pc_165f8:                               ; preds = %bb, %dec_label_pc_165ba
  %v2_165f6 = phi i32 [ %v1_165f6, %bb ], [ %arg1, %dec_label_pc_165ba ]
  ret i32 %v2_165f6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_165fd() local_unnamed_addr {
dec_label_pc_165fd:
  %v0_165fe = load i32, i32* @eax, align 4
  ret i32 %v0_165fe
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16602:
  %stack_var_-20 = alloca i32, align 4
  %v2_16628 = load i32, i32* %arg2, align 4
  %v1_1662d = inttoptr i32 %arg3 to i32*
  %v2_1662d = load i32, i32* %v1_1662d, align 4
  %v2_1662f = add i32 %v2_1662d, %v2_16628
  store i32 %v2_1662f, i32* %stack_var_-20, align 4
  %v2_16634 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_16641 = call i32 @function_3270a(i32 %arg1, i32 %v2_16634)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16655

bb:                                               ; preds = %dec_label_pc_16602
  %v1_16653 = call i32 @function_1665a()
  br label %dec_label_pc_16655

dec_label_pc_16655:                               ; preds = %bb, %dec_label_pc_16602
  %v2_16653 = phi i32 [ %v1_16653, %bb ], [ %arg1, %dec_label_pc_16602 ]
  ret i32 %v2_16653

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1665a() local_unnamed_addr {
dec_label_pc_1665a:
  %v0_1665b = load i32, i32* @eax, align 4
  ret i32 %v0_1665b
}

define i32 @_ZSt12reverse_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1665e:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v0_16661 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  store i32 %arg4, i32* %stack_var_-44, align 4
  %v4_166c0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_166c4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_16695 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_166bd

dec_label_pc_1668a:                               ; preds = %dec_label_pc_166bd
  store i32 %v2_16695, i32* @eax, align 4
  %v1_1669b = call i32 @function_327da(i32 %v2_16695)
  store i32 %v1_1669b, i32* %ebx.global-to-local, align 4
  store i32 %v4_166c0, i32* @eax, align 4
  %v1_166a8 = call i32 @function_2d760(i32 %v4_166c0)
  %v1_166ad = inttoptr i32 %v1_166a8 to i8*
  %v2_166ad = load i8, i8* %v1_166ad, align 1
  %v3_166b0 = inttoptr i32 %v1_1669b to i8*
  store i8 %v2_166ad, i8* %v3_166b0, align 1
  store i32 %v2_16695, i32* @eax, align 4
  %v1_166b8 = call i32 @function_3280a(i32 %v2_16695)
  br label %dec_label_pc_166bd

dec_label_pc_166bd:                               ; preds = %dec_label_pc_1668a, %dec_label_pc_1665e
  %v2_166ca = call i32 @function_2d97e(i32 %v2_166c4, i32 %v4_166c0)
  %v4_166cf = trunc i32 %v2_166ca to i8
  %v5_166cf = icmp eq i8 %v4_166cf, 0
  %v1_166d1 = icmp eq i1 %v5_166cf, false
  br i1 %v1_166d1, label %dec_label_pc_1668a, label %dec_label_pc_166d3

dec_label_pc_166d3:                               ; preds = %dec_label_pc_166bd
  %tmp111 = ptrtoint i32* %arg1 to i32
  %v3_166d6 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_166d6, i32* %arg1, align 4
  store i32 %v0_16661, i32* %ebx.global-to-local, align 4
  ret i32 %tmp111

; uselistorder directives
  uselistorder i32 %v4_166c0, { 2, 0, 1 }
}

define i32 @_ZNSt6vectorIhSaIhEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_166f8:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp12 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_1671d = call i32 @function_328de(i32 %arg2)
  %v1_1672a = call i32 @function_2b7b2(i32 %arg2)
  store i32 %v1_1672a, i32* @eax, align 4
  %v3_1673d = call i32 @function_31cfa(i32 %tmp12, i32 %v1_1672a, i32 %v1_1671d)
  %v1_16748 = call i32 @function_31c30(i32 %tmp12)
  store i32 %v1_16748, i32* @ebx, align 4
  %v2_16752 = load i32, i32* %arg1, align 4
  store i32 %v2_16752, i32* @esi, align 4
  %v2_16754 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16754, i32* @eax, align 4
  %v2_16761 = call i32 @function_2b762(i32 %v2_16754, i32 %arg2)
  %v2_16769 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16769, i32* @eax, align 4
  %v2_16776 = call i32 @function_2b6d6(i32 %v2_16769, i32 %arg2)
  %v0_1677e = load i32, i32* @ebx, align 4
  %v0_16782 = load i32, i32* @esi, align 4
  %v3_16786 = load i32, i32* %stack_var_-20, align 4
  %v3_1678d = load i32, i32* %stack_var_-24, align 4
  %v4_16793 = call i32 @function_3290b(i32 %v3_1678d, i32 %v3_16786, i32 %v0_16782, i32 %v0_1677e)
  %v2_1679d = add i32 %tmp12, 4
  %v3_1679d = inttoptr i32 %v2_1679d to i32*
  store i32 %v4_16793, i32* %v3_1679d, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_167c5

bb:                                               ; preds = %dec_label_pc_166f8
  %v1_167aa = call i32 @function_167ca()
  br label %dec_label_pc_167c5

dec_label_pc_167c5:                               ; preds = %dec_label_pc_166f8, %bb
  %v0_167ac = phi i32 [ 0, %dec_label_pc_166f8 ], [ %v1_167aa, %bb ]
  ret i32 %v0_167ac

; uselistorder directives
  uselistorder i32 %tmp12, { 2, 1, 0 }
  uselistorder i32 %arg2, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_167c5, { 1, 0 }
}

define i32 @function_167ae() local_unnamed_addr {
dec_label_pc_167ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_167ae = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_167ae, i32* @ebx, align 4
  %v0_167b0 = load i32, i32* @ebp, align 4
  %v1_167b0 = add i32 %v0_167b0, -28
  %v2_167b0 = inttoptr i32 %v1_167b0 to i32*
  %v3_167b0 = load i32, i32* %v2_167b0, align 4
  store i32 %v3_167b0, i32* %eax.global-to-local, align 4
  %v1_167b6 = call i32 @function_31bb0(i32 %v3_167b0)
  %v0_167bb = load i32, i32* @ebx, align 4
  store i32 %v0_167bb, i32* %eax.global-to-local, align 4
  ret i32 %v0_167bb
}

define i32 @function_167ca() local_unnamed_addr {
dec_label_pc_167ca:
  %v0_167ca = load i32, i32* @ebp, align 4
  %v1_167ca = add i32 %v0_167ca, -8
  %v1_167cd = inttoptr i32 %v1_167ca to i32*
  %v2_167cd = load i32, i32* %v1_167cd, align 4
  store i32 %v2_167cd, i32* @ebx, align 4
  %v3_167cd = add i32 %v0_167ca, -4
  %v1_167ce = inttoptr i32 %v3_167cd to i32*
  %v2_167ce = load i32, i32* %v1_167ce, align 4
  store i32 %v2_167ce, i32* @esi, align 4
  %v1_167cf = inttoptr i32 %v0_167ca to i32*
  %v2_167cf = load i32, i32* %v1_167cf, align 4
  store i32 %v2_167cf, i32* @ebp, align 4
  %v0_167d0 = load i32, i32* @eax, align 4
  ret i32 %v0_167d0
}

define i32 @_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_167d2:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %arg4, i32* %stack_var_-60, align 4
  %v2_167fc = ptrtoint i32* %stack_var_-60 to i32
  %v2_16803 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16803, i32* @eax, align 4
  %v2_16809 = call i32 @function_32a3a(i32 %v2_16803, i32 %v2_167fc)
  %v4_1680e = trunc i32 %v2_16809 to i8
  %v5_1680e = icmp eq i8 %v4_1680e, 0
  br i1 %v5_1680e, label %dec_label_pc_168be, label %dec_label_pc_16816

dec_label_pc_16816:                               ; preds = %dec_label_pc_167d2
  %v2_16816 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16816, i32* @eax, align 4
  %v2_16823 = call i32 @function_2d0b4(i32 %v2_16816, i32 %arg2)
  store i32 %v2_167fc, i32* @eax, align 4
  store i32 %v2_167fc, i32* %stack_var_-80, align 4
  %v2_16838 = call i32 @function_32a3a(i32 %v2_167fc, i32 %v2_16816)
  %v4_1683d = trunc i32 %v2_16838 to i8
  %v5_1683d = icmp eq i8 %v4_1683d, 0
  br i1 %v5_1683d, label %dec_label_pc_16816.dec_label_pc_16879_crit_edge, label %dec_label_pc_16841

dec_label_pc_16816.dec_label_pc_16879_crit_edge:  ; preds = %dec_label_pc_16816
  %v1_1687c.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_16879

dec_label_pc_16841:                               ; preds = %dec_label_pc_16816
  %v2_16841 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16841, i32* @eax, align 4
  store i32 %v2_16841, i32* %stack_var_-80, align 4
  %v2_1684e = call i32 @function_2d0b4(i32 %v2_16841, i32 %arg2)
  %v2_16856 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_16856, i32* @eax, align 4
  %v3_16859 = load i32, i32* %stack_var_-56, align 4
  %v3_16860 = load i32, i32* %stack_var_-28, align 4
  %v3_16867 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_16867, i32* @edx, align 4
  store i32 %v3_16867, i32* %stack_var_-80, align 4
  store i32 %v2_16856, i32* %stack_var_-84, align 4
  %v4_16871 = call i32 @function_32a8e(i32 %v2_16856, i32 %v3_16867, i32 %v3_16860, i32 %v3_16859)
  %v16_16876 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_16879

dec_label_pc_16879:                               ; preds = %dec_label_pc_16816.dec_label_pc_16879_crit_edge, %dec_label_pc_16841
  %v1_1687c = phi i32 [ %v1_1687c.pre, %dec_label_pc_16816.dec_label_pc_16879_crit_edge ], [ %v16_16876, %dec_label_pc_16841 ]
  store i32 %v2_16803, i32* @eax, align 4
  %v2_1687c = inttoptr i32 %v1_1687c to i32*
  store i32 %v2_16803, i32* %v2_1687c, align 4
  %v0_1687f = call i32 @function_32b7a()
  %v1_16884 = inttoptr i32 %v0_1687f to i32*
  %v2_16884 = load i32, i32* %v1_16884, align 4
  store i32 %v2_16884, i32* %ebx.global-to-local, align 4
  %v2_16886 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16886, i32* @eax, align 4
  %v1_1688c = load i32, i32* @esp, align 4
  %v2_1688c = add i32 %v1_1688c, 4
  %v3_1688c = inttoptr i32 %v2_1688c to i32*
  store i32 %arg2, i32* %v3_1688c, align 4
  %v1_16890 = load i32, i32* @esp, align 4
  %v2_16890 = inttoptr i32 %v1_16890 to i32*
  store i32 %v2_16886, i32* %v2_16890, align 4
  %v0_16893 = load i32, i32* %stack_var_-84, align 4
  %v1_16893 = load i32, i32* %stack_var_-80, align 4
  %v2_16893 = call i32 @function_2d0b4(i32 %v0_16893, i32 %v1_16893)
  %v0_16898 = load i32, i32* @esp, align 4
  %v3_1689e = inttoptr i32 %v0_16898 to i32*
  store i32 %v2_167fc, i32* %v3_1689e, align 4
  store i32 %v2_16886, i32* @eax, align 4
  %v1_168a5 = load i32, i32* @esp, align 4
  %v2_168a5 = inttoptr i32 %v1_168a5 to i32*
  store i32 %v2_16886, i32* %v2_168a5, align 4
  %v0_168a8 = call i32 @function_2da5e()
  %v1_168ad = load i32, i32* %ebx.global-to-local, align 4
  %v2_168ad = add i32 %v1_168ad, %v0_168a8
  %v1_168af = load i32, i32* @esp, align 4
  %v2_168af = add i32 %v1_168af, 4
  %v3_168af = inttoptr i32 %v2_168af to i32*
  store i32 %v2_168ad, i32* %v3_168af, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_168b6 = load i32, i32* @esp, align 4
  %v2_168b6 = inttoptr i32 %v1_168b6 to i32*
  store i32 %arg2, i32* %v2_168b6, align 4
  %v0_168b9 = load i32, i32* %stack_var_-84, align 4
  %v1_168b9 = call i32 @function_32b1c(i32 %v0_168b9)
  br label %dec_label_pc_168be

dec_label_pc_168be:                               ; preds = %dec_label_pc_16879, %dec_label_pc_167d2
  %v3_168c1 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_168c1, i32* %arg1, align 4
  store i32 %tmp117, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_168d5

bb:                                               ; preds = %dec_label_pc_168be
  %v1_168d3 = call i32 @function_168da()
  br label %dec_label_pc_168d5

dec_label_pc_168d5:                               ; preds = %bb, %dec_label_pc_168be
  %v2_168d3 = phi i32 [ %v1_168d3, %bb ], [ %tmp117, %dec_label_pc_168be ]
  ret i32 %v2_168d3

; uselistorder directives
  uselistorder i32 %v2_16856, { 1, 0, 2 }
  uselistorder i32 %v2_16841, { 1, 0, 2 }
  uselistorder i32 %v2_167fc, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @function_2d0b4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_32a3a, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_16879, { 1, 0 }
}

define i32 @function_168da() local_unnamed_addr {
dec_label_pc_168da:
  %v0_168de = load i32, i32* @eax, align 4
  ret i32 %v0_168de
}

define i32 @_ZNSt6vectorIhSaIhEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_168e2:
  %v1_16902 = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 4
  %v2_1690f = call i32 @function_329ea(i32 %arg1, i32 %v1_16902)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16923

bb:                                               ; preds = %dec_label_pc_168e2
  %v1_16921 = call i32 @function_16928()
  br label %dec_label_pc_16923

dec_label_pc_16923:                               ; preds = %bb, %dec_label_pc_168e2
  %v2_16921 = phi i32 [ %v1_16921, %bb ], [ %arg1, %dec_label_pc_168e2 ]
  ret i32 %v2_16921

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_16928() local_unnamed_addr {
dec_label_pc_16928:
  %v0_16929 = load i32, i32* @eax, align 4
  ret i32 %v0_16929
}

define i32 @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1692c:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_1692f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i1 false, i1* @cf, align 1
  %v2_1694a = ptrtoint i32* %stack_var_-37 to i32
  store i32 %v2_1694a, i32* @eax, align 4
  %v2_1694d = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1694d, i32* @edx, align 4
  %v2_16957 = call i32 @function_32d01(i32 %v2_1694a, i32 %v2_1694d)
  %v0_1695f = load i32, i32* %ebx.global-to-local, align 4
  %v3_1696a = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1696a, i32* @eax, align 4
  %v3_16970 = call i32 @function_32d36(i32 %v3_1696a, i32 %arg2, i32 %v0_1695f)
  store i32 %v0_1692f, i32* %ebx.global-to-local, align 4
  ret i32 0
}

define i32 @_ZN5boost15foreach_detail_7containIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS9_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1698b:
  %stack_var_-20 = alloca i32, align 4
  store i1 true, i1* @zf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_169b4 = call i32 @function_32e30(i32 %arg2)
  store i32 %v1_169b4, i32* %stack_var_-20, align 4
  %v2_169bc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_169c9 = call i32 @function_32eb1(i32 %arg1, i32 %v2_169bc)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_169dd

bb:                                               ; preds = %dec_label_pc_1698b
  %v1_169db = call i32 @function_169e2()
  br label %dec_label_pc_169dd

dec_label_pc_169dd:                               ; preds = %bb, %dec_label_pc_1698b
  %v2_169db = phi i32 [ %v1_169db, %bb ], [ %arg1, %dec_label_pc_1698b ]
  ret i32 %v2_169db

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_169e2() local_unnamed_addr {
dec_label_pc_169e2:
  %v0_169e3 = load i32, i32* @eax, align 4
  ret i32 %v0_169e3
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_169e6:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_16a15 = call i32 @function_32f51(i32 %arg2)
  %v1_16a1a = inttoptr i32 %v1_16a15 to i32*
  %v2_16a1a = load i32, i32* %v1_16a1a, align 4
  store i32 %v2_16a1a, i32* @eax, align 4
  %v1_16a1f = call i32 @function_32f7e(i32 %v2_16a1a)
  store i32 %v1_16a1f, i32* @eax, align 4
  %v2_16a24 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16a24, i32* @edx, align 4
  %v2_16a2e = call i32 @function_32fab(i32 %v2_16a24, i32 %v1_16a1f)
  store i32 %arg1, i32* @eax, align 4
  %v2_16a43 = call i32 @function_32ff6(i32 %arg1, i32 %v2_16a24)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPNS8_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16a60:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_16a8f = call i32 @function_32fcb(i32 %arg2)
  %v1_16a94 = inttoptr i32 %v1_16a8f to i32*
  %v2_16a94 = load i32, i32* %v1_16a94, align 4
  store i32 %v2_16a94, i32* @eax, align 4
  %v1_16a99 = call i32 @function_32ff8(i32 %v2_16a94)
  store i32 %v1_16a99, i32* @eax, align 4
  %v2_16a9e = ptrtoint i32* %stack_var_-20 to i32
  %v2_16aa8 = call i32 @function_330b5(i32 %v2_16a9e, i32 %v1_16a99)
  store i32 %arg1, i32* @eax, align 4
  %v2_16abd = call i32 @function_33070(i32 %arg1, i32 %v2_16a9e)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16ada:
  store i32 %arg2, i32* @eax, align 4
  %v1_16b04 = call i32 @function_33179(i32 %arg2)
  store i32 %v1_16b04, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_16b11 = call i32 @function_33179(i32 %arg1)
  store i32 %v1_16b11, i32* @eax, align 4
  %v0_16b16 = load i32, i32* @ebx, align 4
  %v2_16b1d = call i32 @function_331a6(i32 %v1_16b11, i32 %v0_16b16)
  store i32 %v2_16b1d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16b2e

bb:                                               ; preds = %dec_label_pc_16ada
  %v1_16b2c = call i32 @function_16b33()
  br label %dec_label_pc_16b2e

dec_label_pc_16b2e:                               ; preds = %bb, %dec_label_pc_16ada
  %v2_16b2c = phi i32 [ %v1_16b2c, %bb ], [ %v2_16b1d, %dec_label_pc_16ada ]
  ret i32 %v2_16b2c

; uselistorder directives
  uselistorder i32 (i32)* @function_33179, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16b33() local_unnamed_addr {
dec_label_pc_16b33:
  %v0_16b38 = load i32, i32* @eax, align 4
  ret i32 %v0_16b38
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b39:
  store i32 %arg1, i32* @eax, align 4
  %v1_16b5c = call i32 @function_331d8(i32 %arg1)
  store i32 %v1_16b5c, i32* @eax, align 4
  %v1_16b64 = call i32 @function_33259(i32 %v1_16b5c)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16b75

bb:                                               ; preds = %dec_label_pc_16b39
  %v1_16b73 = call i32 @function_16b7a()
  br label %dec_label_pc_16b75

dec_label_pc_16b75:                               ; preds = %bb, %dec_label_pc_16b39
  %v2_16b73 = phi i32 [ %v1_16b73, %bb ], [ 0, %dec_label_pc_16b39 ]
  ret i32 %v2_16b73

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16b7a() local_unnamed_addr {
dec_label_pc_16b7a:
  %v0_16b7b = load i32, i32* @eax, align 4
  ret i32 %v0_16b7b
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16b7c:
  store i32 %arg1, i32* @eax, align 4
  %v1_16b9f = call i32 @function_3321b(i32 %arg1)
  store i32 %v1_16b9f, i32* @eax, align 4
  %v1_16ba7 = call i32 @function_332d6(i32 %v1_16b9f)
  store i32 %v1_16ba7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16bb8

bb:                                               ; preds = %dec_label_pc_16b7c
  %v1_16bb6 = call i32 @function_16bbd()
  br label %dec_label_pc_16bb8

dec_label_pc_16bb8:                               ; preds = %bb, %dec_label_pc_16b7c
  %v2_16bb6 = phi i32 [ %v1_16bb6, %bb ], [ %v1_16ba7, %dec_label_pc_16b7c ]
  ret i32 %v2_16bb6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16bbd() local_unnamed_addr {
dec_label_pc_16bbd:
  %v0_16bbe = load i32, i32* @eax, align 4
  ret i32 %v0_16bbe
}

define i32 @_ZNSt6vectorIhSaIhEE9push_backERKh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16bc0:
  %stack_var_-20 = alloca i32, align 4
  %v1_16be0 = add i32 %arg1, 4
  %v2_16be0 = inttoptr i32 %v1_16be0 to i32*
  %v3_16be0 = load i32, i32* %v2_16be0, align 4
  %v1_16be6 = add i32 %arg1, 8
  %v2_16be6 = inttoptr i32 %v1_16be6 to i32*
  %v3_16be6 = load i32, i32* %v2_16be6, align 4
  %v12_16be9 = icmp eq i32 %v3_16be0, %v3_16be6
  br i1 %v12_16be9, label %dec_label_pc_16c1a, label %dec_label_pc_16bed

dec_label_pc_16bed:                               ; preds = %dec_label_pc_16bc0
  %v3_16bf0 = load i32, i32* %v2_16be0, align 4
  %v3_16c04 = call i32 @unknown_3334a(i32 %arg1, i32 %v3_16bf0, i32 %arg2)
  %v3_16c0c = load i32, i32* %v2_16be0, align 4
  %v1_16c0f = add i32 %v3_16c0c, 1
  store i32 %v1_16c0f, i32* %v2_16be0, align 4
  br label %dec_label_pc_16c48

dec_label_pc_16c1a:                               ; preds = %dec_label_pc_16bc0
  %v2_16c1a = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_16c1a, i32* @eax, align 4
  %v2_16c27 = call i32 @function_2d4a2(i32 %v2_16c1a, i32 %arg1)
  %v3_16c36 = load i32, i32* %stack_var_-20, align 4
  %v3_16c43 = call i32 @function_333a0(i32 %arg1, i32 %v3_16c36, i32 %arg2)
  br label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c1a, %dec_label_pc_16bed
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16c54

bb:                                               ; preds = %dec_label_pc_16c48
  %v1_16c52 = call i32 @function_16c59()
  br label %dec_label_pc_16c54

dec_label_pc_16c54:                               ; preds = %bb, %dec_label_pc_16c48
  %v2_16c52 = phi i32 [ %v1_16c52, %bb ], [ 0, %dec_label_pc_16c48 ]
  ret i32 %v2_16c52

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 4, 3 }
}

define i32 @function_16c59() local_unnamed_addr {
dec_label_pc_16c59:
  %v0_16c5a = load i32, i32* @eax, align 4
  ret i32 %v0_16c5a
}

define i32 @_ZNSt6vectorIhSaIhEEC1IN9__gnu_cxx17__normal_iteratorIPKhS1_EEEET_S8_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16c5c:
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg4, i32* @edx, align 4
  %v2_16c93 = call i32 @function_336f4(i32 %arg1, i32 %arg4)
  %v0_16c98 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_16c98, 16777216
  %v4_16cb0 = sdiv i32 %sext, 16777216
  %v5_16cb0 = call i32 @function_33736(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_16cb0)
  %v0_16cb5 = call i32 @function_16cce()
  ret i32 %v0_16cb5

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_16cb8() local_unnamed_addr {
dec_label_pc_16cb8:
  %eax.global-to-local = alloca i32, align 4
  %v0_16cb8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16cb8
}

define i32 @function_16cce() local_unnamed_addr {
dec_label_pc_16cce:
  %v0_16cce = load i32, i32* @ebp, align 4
  %v1_16cce = add i32 %v0_16cce, -12
  %v2_16cce = inttoptr i32 %v1_16cce to i32*
  %v3_16cce = load i32, i32* %v2_16cce, align 4
  %v1_16cd1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_16cd1 = xor i32 %v1_16cd1, %v3_16cce
  %v3_16cd1 = icmp eq i32 %v2_16cd1, 0
  store i32 %v2_16cd1, i32* @eax, align 4
  br i1 %v3_16cd1, label %bb, label %dec_label_pc_16cda

bb:                                               ; preds = %dec_label_pc_16cce
  %v1_16cd8 = call i32 @function_16cdf()
  br label %dec_label_pc_16cda

dec_label_pc_16cda:                               ; preds = %bb, %dec_label_pc_16cce
  %v2_16cd8 = phi i32 [ %v1_16cd8, %bb ], [ %v2_16cd1, %dec_label_pc_16cce ]
  ret i32 %v2_16cd8
}

define i32 @function_16cdf() local_unnamed_addr {
dec_label_pc_16cdf:
  %v0_16ce4 = load i32, i32* @eax, align 4
  ret i32 %v0_16ce4
}

define i32 @_ZNSt6vectorIhSaIhEE6insertIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16ce6:
  %edx.global-to-local = alloca i32, align 4
  %v0_16d0f = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_16d0f, 16777216
  %v5_16d2e = sdiv i32 %sext, 16777216
  %v6_16d2e = call i32 @function_3381a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_16d2e)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16d46:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_16d6f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_16d6f, i32* @eax, align 4
  store i32 %tmp113, i32* @edx, align 4
  %v2_16d7c = call i32 @function_2d300(i32 %v2_16d6f, i32 %tmp113)
  %v2_16d8b = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16d8b, i32* @eax, align 4
  %v2_16d91 = call i32 @function_2dfd2(i32 %v2_16d8b, i32 %v2_16d6f)
  %v1_16d9c = add i32 %tmp113, 4
  %v2_16d9c = inttoptr i32 %v1_16d9c to i32*
  %v3_16d9c = load i32, i32* %v2_16d9c, align 4
  store i32 %v3_16d9c, i32* %edx.global-to-local, align 4
  %v1_16da2 = add i32 %tmp113, 8
  %v2_16da2 = inttoptr i32 %v1_16da2 to i32*
  %v3_16da2 = load i32, i32* %v2_16da2, align 4
  %v7_16da5 = icmp ult i32 %v3_16d9c, %v3_16da2
  store i1 %v7_16da5, i1* @cf, align 1
  %v12_16da5 = icmp eq i32 %v3_16d9c, %v3_16da2
  br i1 %v12_16da5, label %dec_label_pc_16ddb, label %dec_label_pc_16da9

dec_label_pc_16da9:                               ; preds = %dec_label_pc_16d46
  %v2_16da9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_16da9, i32* @eax, align 4
  store i32 %tmp113, i32* @edx, align 4
  %v2_16db6 = call i32 @function_2d628(i32 %v2_16da9, i32 %tmp113)
  %v2_16dcb = call i32 @function_338e1(i32 %v2_16d8b, i32 %v2_16da9)
  %v4_16dd0 = trunc i32 %v2_16dcb to i8
  %v5_16dd0 = icmp eq i8 %v4_16dd0, 0
  br i1 %v5_16dd0, label %dec_label_pc_16ddb, label %dec_label_pc_16de0

dec_label_pc_16ddb:                               ; preds = %dec_label_pc_16da9, %dec_label_pc_16d46
  br label %dec_label_pc_16de0

dec_label_pc_16de0:                               ; preds = %dec_label_pc_16da9, %dec_label_pc_16ddb
  %storemerge = phi i1 [ true, %dec_label_pc_16ddb ], [ false, %dec_label_pc_16da9 ]
  br i1 %storemerge, label %dec_label_pc_16e11, label %dec_label_pc_16de4

dec_label_pc_16de4:                               ; preds = %dec_label_pc_16de0
  %v3_16de7 = load i32, i32* %v2_16d9c, align 4
  store i32 %v3_16de7, i32* %edx.global-to-local, align 4
  store i32 %tmp113, i32* @eax, align 4
  %v1_16df0 = load i32, i32* @esp, align 4
  %v2_16df0 = add i32 %v1_16df0, 8
  %v3_16df0 = inttoptr i32 %v2_16df0 to i32*
  store i32 %arg4, i32* %v3_16df0, align 4
  %v0_16df4 = load i32, i32* %edx.global-to-local, align 4
  %v1_16df4 = load i32, i32* @esp, align 4
  %v2_16df4 = add i32 %v1_16df4, 4
  %v3_16df4 = inttoptr i32 %v2_16df4 to i32*
  store i32 %v0_16df4, i32* %v3_16df4, align 4
  %v0_16df8 = load i32, i32* @eax, align 4
  %v1_16df8 = load i32, i32* @esp, align 4
  %v2_16df8 = inttoptr i32 %v1_16df8 to i32*
  store i32 %v0_16df8, i32* %v2_16df8, align 4
  %v0_16dfb = call i32 @function_334d0()
  %v3_16e03 = load i32, i32* %v2_16d9c, align 4
  %v1_16e06 = add i32 %v3_16e03, 1
  store i32 %v1_16e06, i32* %edx.global-to-local, align 4
  store i32 %v1_16e06, i32* %v2_16d9c, align 4
  br label %dec_label_pc_16e2a

dec_label_pc_16e11:                               ; preds = %dec_label_pc_16de0
  %v1_16e14 = load i32, i32* @esp, align 4
  %v2_16e14 = add i32 %v1_16e14, 8
  %v3_16e14 = inttoptr i32 %v2_16e14 to i32*
  store i32 %arg4, i32* %v3_16e14, align 4
  %v3_16e18 = load i32, i32* %stack_var_-56, align 4
  %v1_16e1b = load i32, i32* @esp, align 4
  %v2_16e1b = add i32 %v1_16e1b, 4
  %v3_16e1b = inttoptr i32 %v2_16e1b to i32*
  store i32 %v3_16e18, i32* %v3_16e1b, align 4
  store i32 %tmp113, i32* @eax, align 4
  %v1_16e22 = load i32, i32* @esp, align 4
  %v2_16e22 = inttoptr i32 %v1_16e22 to i32*
  store i32 %tmp113, i32* %v2_16e22, align 4
  %v0_16e25 = call i32 @function_33526()
  br label %dec_label_pc_16e2a

dec_label_pc_16e2a:                               ; preds = %dec_label_pc_16e11, %dec_label_pc_16de4
  %v2_16e2d = load i32, i32* %arg2, align 4
  %v5_16e2f = add i32 %v2_16e2d, %v2_16d91
  store i32 %v5_16e2f, i32* %stack_var_-24, align 4
  %v2_16e35 = ptrtoint i32* %stack_var_-24 to i32
  %v1_16e38 = load i32, i32* @esp, align 4
  %v2_16e38 = add i32 %v1_16e38, 4
  %v3_16e38 = inttoptr i32 %v2_16e38 to i32*
  store i32 %v2_16e35, i32* %v3_16e38, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_16e3f = load i32, i32* @esp, align 4
  %v2_16e3f = inttoptr i32 %v1_16e3f to i32*
  store i32 %arg1, i32* %v2_16e3f, align 4
  %v0_16e42 = load i32, i32* %stack_var_-24, align 4
  %v1_16e42 = call i32 @function_32e4e(i32 %v0_16e42)
  store i32 0, i32* %edx.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp113, { 4, 3, 2, 1, 0, 6, 5, 8, 7 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16de0, { 1, 0 }
}

define i32 @_ZNSt6vectorIhSaIhEE6insertIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16e60:
  %edx.global-to-local = alloca i32, align 4
  %v0_16e89 = load i32, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16eb9

bb:                                               ; preds = %dec_label_pc_16e60
  %sext = mul i32 %v0_16e89, 16777216
  %v6_16eb7 = sdiv i32 %sext, 16777216
  %v7_16eb7 = call i32 @function_16ebe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v6_16eb7)
  br label %dec_label_pc_16eb9

dec_label_pc_16eb9:                               ; preds = %bb, %dec_label_pc_16e60
  %v8_16eb7 = phi i32 [ %v7_16eb7, %bb ], [ 0, %dec_label_pc_16e60 ]
  ret i32 %v8_16eb7
}

define i32 @function_16ebe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16ebe:
  %v0_16ebf = load i32, i32* @eax, align 4
  ret i32 %v0_16ebf
}

define i32 @_ZNSt6vectorIhSaIhEE6insertIPKhEEvN9__gnu_cxx17__normal_iteratorIPhS1_EET_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16ec0:
  %edx.global-to-local = alloca i32, align 4
  %v0_16ee9 = load i32, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16f19

bb:                                               ; preds = %dec_label_pc_16ec0
  %sext = mul i32 %v0_16ee9, 16777216
  %v6_16f17 = sdiv i32 %sext, 16777216
  %v7_16f17 = call i32 @function_16f1e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v6_16f17)
  br label %dec_label_pc_16f19

dec_label_pc_16f19:                               ; preds = %bb, %dec_label_pc_16ec0
  %v8_16f17 = phi i32 [ %v7_16f17, %bb ], [ 0, %dec_label_pc_16ec0 ]
  ret i32 %v8_16f17
}

define i32 @function_16f1e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16f1e:
  %v0_16f1f = load i32, i32* @eax, align 4
  ret i32 %v0_16f1f
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1IPhEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameIS9_S8_E7__valueES5_E6__typeEEE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f20:
  store i32 %arg2, i32* @eax, align 4
  %v1_16f43 = call i32 @function_332c8(i32 %arg2)
  %v1_16f48 = inttoptr i32 %v1_16f43 to i32*
  %v2_16f48 = load i32, i32* %v1_16f48, align 4
  store i32 %v2_16f48, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16f5b

bb:                                               ; preds = %dec_label_pc_16f20
  %v1_16f59 = call i32 @function_16f60()
  br label %dec_label_pc_16f5b

dec_label_pc_16f5b:                               ; preds = %bb, %dec_label_pc_16f20
  %v2_16f59 = phi i32 [ %v1_16f59, %bb ], [ 0, %dec_label_pc_16f20 ]
  ret i32 %v2_16f59

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_16f60() local_unnamed_addr {
dec_label_pc_16f60:
  %v0_16f61 = load i32, i32* @eax, align 4
  ret i32 %v0_16f61
}

define i32 @_ZN9__gnu_cxxmiIPKhPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T1_E15difference_typeERKSA_RKNS7_IT0_S9_EE(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16f62:
  %v2_16f8b = load i32, i32* %arg1, align 4
  %v1_16f9a = inttoptr i32 %arg2 to i32*
  %v2_16f9a = load i32, i32* %v1_16f9a, align 4
  %v2_16f9e = sub i32 %v2_16f8b, %v2_16f9a
  store i32 %v2_16f9e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_16fae

bb:                                               ; preds = %dec_label_pc_16f62
  %v2_16fac = call i32 @function_16fb3(i32 %arg2)
  br label %dec_label_pc_16fae

dec_label_pc_16fae:                               ; preds = %bb, %dec_label_pc_16f62
  %v3_16fac = phi i32 [ %v2_16fac, %bb ], [ %v2_16f9e, %dec_label_pc_16f62 ]
  ret i32 %v3_16fac
}

define i32 @function_16fb3(i32 %arg1) local_unnamed_addr {
dec_label_pc_16fb3:
  %v0_16fb8 = load i32, i32* @eax, align 4
  ret i32 %v0_16fb8
}

define i32 @_ZNSt6vectorIhSaIhEE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_16fba:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_16fd4 = load i32, i32* %arg1, align 4
  store i32 %tmp5, i32* @eax, align 4
  %v2_16fe0 = call i32 @function_33304(i32 %tmp5, i32 %v2_16fd4)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @_ZN9__gnu_cxxgeIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16ff8:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_16ff8 = load i32, i32* %ebp.global-to-local, align 4
  %v0_16ffb = load i32, i32* %ebx.global-to-local, align 4
  %v2_17021 = load i32, i32* %arg1, align 4
  store i32 %v2_17021, i32* %ebx.global-to-local, align 4
  %v1_1702e = inttoptr i32 %arg2 to i32*
  %v2_1702e = load i32, i32* %v1_1702e, align 4
  %v7_17030 = icmp ult i32 %v2_17021, %v2_1702e
  %v1_17032 = icmp eq i1 %v7_17030, false
  %v2_17032 = zext i1 %v1_17032 to i32
  %v4_17032 = and i32 %v2_1702e, -256
  %v5_17032 = or i32 %v2_17032, %v4_17032
  store i32 %v0_16ffb, i32* %ebx.global-to-local, align 4
  store i32 %v0_16ff8, i32* %ebp.global-to-local, align 4
  ret i32 %v5_17032
}

define i32 @_ZN9__gnu_cxxmiIPKhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1704c:
  %v2_17075 = load i32, i32* %arg1, align 4
  %v1_17084 = inttoptr i32 %arg2 to i32*
  %v2_17084 = load i32, i32* %v1_17084, align 4
  %v2_17088 = sub i32 %v2_17075, %v2_17084
  store i32 %v2_17088, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17098

bb:                                               ; preds = %dec_label_pc_1704c
  %v2_17096 = call i32 @function_1709d(i32 %arg2)
  br label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %bb, %dec_label_pc_1704c
  %v3_17096 = phi i32 [ %v2_17096, %bb ], [ %v2_17088, %dec_label_pc_1704c ]
  ret i32 %v3_17096
}

define i32 @function_1709d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1709d:
  %v0_170a2 = load i32, i32* @eax, align 4
  ret i32 %v0_170a2
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEppEi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_170a4:
  %stack_var_-20 = alloca i32, align 4
  %v2_170ca = load i32, i32* %arg2, align 4
  store i32 %v2_170ca, i32* %stack_var_-20, align 4
  %v2_170cf = ptrtoint i32* %stack_var_-20 to i32
  %v1_170d2 = add i32 %v2_170ca, 1
  store i32 %v1_170d2, i32* %arg2, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_170e4 = call i32 @function_324b6(i32 %arg1, i32 %v2_170cf)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_170f8

bb:                                               ; preds = %dec_label_pc_170a4
  %v1_170f6 = call i32 @function_170fd()
  br label %dec_label_pc_170f8

dec_label_pc_170f8:                               ; preds = %bb, %dec_label_pc_170a4
  %v2_170f6 = phi i32 [ %v1_170f6, %bb ], [ %arg1, %dec_label_pc_170a4 ]
  ret i32 %v2_170f6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_170fd() local_unnamed_addr {
dec_label_pc_170fd:
  %v0_170fe = load i32, i32* @eax, align 4
  ret i32 %v0_170fe
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17102:
  %v2_1711c = load i32, i32* %arg1, align 4
  store i32 %v2_1711c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1712a

bb:                                               ; preds = %dec_label_pc_17102
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_17128 = call i32 @function_1712f(i32 %tmp100)
  br label %dec_label_pc_1712a

dec_label_pc_1712a:                               ; preds = %bb, %dec_label_pc_17102
  %v3_17128 = phi i32 [ %v2_17128, %bb ], [ %v2_1711c, %dec_label_pc_17102 ]
  ret i32 %v3_17128

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1712f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1712f:
  %v0_17130 = load i32, i32* @eax, align 4
  ret i32 %v0_17130
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEpLERKi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17132:
  %ebp.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_17132 = load i32, i32* %ebp.global-to-local, align 4
  %v2_17152 = load i32, i32* %arg1, align 4
  %v1_17157 = inttoptr i32 %arg2 to i32*
  %v2_17157 = load i32, i32* %v1_17157, align 4
  %v2_17159 = add i32 %v2_17157, %v2_17152
  store i32 %v2_17159, i32* %arg1, align 4
  store i32 %v0_17132, i32* %ebp.global-to-local, align 4
  ret i32 %tmp102
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17176:
  %stack_var_-20 = alloca i32, align 4
  %v2_1719c = load i32, i32* %arg2, align 4
  %v1_171a1 = inttoptr i32 %arg3 to i32*
  %v2_171a1 = load i32, i32* %v1_171a1, align 4
  %v2_171a3 = add i32 %v2_171a1, %v2_1719c
  store i32 %v2_171a3, i32* %stack_var_-20, align 4
  %v2_171a8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_171b5 = call i32 @function_32588(i32 %arg1, i32 %v2_171a8)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_171c9

bb:                                               ; preds = %dec_label_pc_17176
  %v1_171c7 = call i32 @function_171ce()
  br label %dec_label_pc_171c9

dec_label_pc_171c9:                               ; preds = %bb, %dec_label_pc_17176
  %v2_171c7 = phi i32 [ %v1_171c7, %bb ], [ %arg1, %dec_label_pc_17176 ]
  ret i32 %v2_171c7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_171ce() local_unnamed_addr {
dec_label_pc_171ce:
  %v0_171cf = load i32, i32* @eax, align 4
  ret i32 %v0_171cf
}

define i32 @_ZNSt6vectorIhSaIhEE6assignIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_171d2:
  %edx.global-to-local = alloca i32, align 4
  %v0_171f5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_171f5, 16777216
  %v7_1720d = sdiv i32 %sext, 16777216
  %v8_1720d = call i32 @function_33ec0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v7_1720d, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1721e

bb:                                               ; preds = %dec_label_pc_171d2
  %v1_1721c = call i32 @function_17223()
  br label %dec_label_pc_1721e

dec_label_pc_1721e:                               ; preds = %bb, %dec_label_pc_171d2
  %v2_1721c = phi i32 [ %v1_1721c, %bb ], [ 0, %dec_label_pc_171d2 ]
  ret i32 %v2_1721c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_17223() local_unnamed_addr {
dec_label_pc_17223:
  %v0_17224 = load i32, i32* @eax, align 4
  ret i32 %v0_17224
}

define i32 @_ZNKSt6vectorIhSaIhEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17226:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_1723d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1723d, i32* @eax, align 4
  %v2_1724a = call i32 @function_2c290(i32 %v2_1723d, i32 %arg1)
  %v2_17252 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17252, i32* @eax, align 4
  %v2_1725f = call i32 @function_2c204(i32 %v2_17252, i32 %arg1)
  store i32 %v2_17252, i32* @eax, align 4
  %v2_17274 = call i32 @function_304ec(i32 %v2_17252, i32 %v2_1723d)
  store i32 %v2_17274, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17285

bb:                                               ; preds = %dec_label_pc_17226
  %v1_17283 = call i32 @function_1728a()
  br label %dec_label_pc_17285

dec_label_pc_17285:                               ; preds = %bb, %dec_label_pc_17226
  %v2_17283 = phi i32 [ %v1_17283, %bb ], [ %v2_17274, %dec_label_pc_17226 ]
  ret i32 %v2_17283

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1728a() local_unnamed_addr {
dec_label_pc_1728a:
  %v0_1728b = load i32, i32* @eax, align 4
  ret i32 %v0_1728b
}

define i32 @_ZN9__gnu_cxxmiIPhSt6vectorIhSaIhEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1728c:
  store i32 %arg1, i32* @eax, align 4
  %v1_172b0 = call i32 @function_33634(i32 %arg1)
  %v1_172b5 = inttoptr i32 %v1_172b0 to i32*
  %v2_172b5 = load i32, i32* %v1_172b5, align 4
  store i32 %v2_172b5, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_172bf = call i32 @function_33634(i32 %arg2)
  %v1_172c4 = inttoptr i32 %v1_172bf to i32*
  %v2_172c4 = load i32, i32* %v1_172c4, align 4
  %v0_172c6 = load i32, i32* @ebx, align 4
  %v2_172c8 = sub i32 %v0_172c6, %v2_172c4
  store i32 %v2_172c8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_172d8

bb:                                               ; preds = %dec_label_pc_1728c
  %v1_172d6 = call i32 @function_172dd()
  br label %dec_label_pc_172d8

dec_label_pc_172d8:                               ; preds = %bb, %dec_label_pc_1728c
  %v2_172d6 = phi i32 [ %v1_172d6, %bb ], [ %v2_172c8, %dec_label_pc_1728c ]
  ret i32 %v2_172d6

; uselistorder directives
  uselistorder i32 (i32)* @function_33634, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_172dd() local_unnamed_addr {
dec_label_pc_172dd:
  %v0_172e2 = load i32, i32* @eax, align 4
  ret i32 %v0_172e2
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEixERKi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_172e4:
  %v2_17304 = load i32, i32* %arg1, align 4
  %v1_17309 = inttoptr i32 %arg2 to i32*
  %v2_17309 = load i32, i32* %v1_17309, align 4
  %v2_1730b = add i32 %v2_17309, %v2_17304
  store i32 %v2_1730b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17319

bb:                                               ; preds = %dec_label_pc_172e4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_17317 = call i32 @function_1731e(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_17319

dec_label_pc_17319:                               ; preds = %bb, %dec_label_pc_172e4
  %v4_17317 = phi i32 [ %v3_17317, %bb ], [ %v2_1730b, %dec_label_pc_172e4 ]
  ret i32 %v4_17317

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1731e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1731e:
  %v0_1731f = load i32, i32* @eax, align 4
  ret i32 %v0_1731f
}

define i32 @_ZN9__gnu_cxxneIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17320:
  store i32 %arg1, i32* @eax, align 4
  %v1_17344 = call i32 @function_33fe0(i32 %arg1)
  %v1_17349 = inttoptr i32 %v1_17344 to i32*
  %v2_17349 = load i32, i32* %v1_17349, align 4
  store i32 %v2_17349, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_17351 = call i32 @function_33fe0(i32 %arg2)
  %v1_17356 = inttoptr i32 %v1_17351 to i32*
  %v2_17356 = load i32, i32* %v1_17356, align 4
  %v0_17358 = load i32, i32* @ebx, align 4
  %v12_17358 = icmp eq i32 %v0_17358, %v2_17356
  %v1_1735a = icmp eq i1 %v12_17358, false
  %v2_1735a = zext i1 %v1_1735a to i32
  %v4_1735a = and i32 %v2_17356, -256
  %v5_1735a = or i32 %v2_1735a, %v4_1735a
  store i32 %v5_1735a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17369

bb:                                               ; preds = %dec_label_pc_17320
  %v1_17367 = call i32 @function_1736e()
  br label %dec_label_pc_17369

dec_label_pc_17369:                               ; preds = %bb, %dec_label_pc_17320
  %v2_17367 = phi i32 [ %v1_17367, %bb ], [ %v5_1735a, %dec_label_pc_17320 ]
  ret i32 %v2_17367

; uselistorder directives
  uselistorder i32 %v2_17356, { 1, 0 }
  uselistorder i32 (i32)* @function_33fe0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1736e() local_unnamed_addr {
dec_label_pc_1736e:
  %v0_17373 = load i32, i32* @eax, align 4
  ret i32 %v0_17373
}

define i32 @_ZN9__gnu_cxxltIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17374:
  store i32 %arg1, i32* @eax, align 4
  %v1_17398 = call i32 @function_34034(i32 %arg1)
  store i32 %arg2, i32* @eax, align 4
  %v1_173a5 = call i32 @function_34034(i32 %arg2)
  %v1_173aa = inttoptr i32 %v1_173a5 to i32*
  %v2_173aa = load i32, i32* %v1_173aa, align 4
  %v0_173ac = load i32, i32* @ebx, align 4
  %v7_173ac = icmp ult i32 %v0_173ac, %v2_173aa
  %v1_173ae = zext i1 %v7_173ac to i32
  %v3_173ae = and i32 %v2_173aa, -256
  %v4_173ae = or i32 %v1_173ae, %v3_173ae
  store i32 %v4_173ae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_173bd

bb:                                               ; preds = %dec_label_pc_17374
  %v1_173bb = call i32 @function_173c2()
  br label %dec_label_pc_173bd

dec_label_pc_173bd:                               ; preds = %bb, %dec_label_pc_17374
  %v2_173bb = phi i32 [ %v1_173bb, %bb ], [ %v4_173ae, %dec_label_pc_17374 ]
  ret i32 %v2_173bb

; uselistorder directives
  uselistorder i32 (i32)* @function_34034, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_173c2() local_unnamed_addr {
dec_label_pc_173c2:
  %v0_173c7 = load i32, i32* @eax, align 4
  ret i32 %v0_173c7
}

define i32 @_ZSteqIhSaIhEEbRKSt6vectorIT_T0_ES6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_173c8:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_173ec = call i32 @function_2c482(i32 %arg1)
  store i32 %v1_173ec, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_173f9 = call i32 @function_2c482(i32 %arg2)
  %v0_173fe = load i32, i32* @ebx, align 4
  %v12_173fe = icmp eq i32 %v0_173fe, %v1_173f9
  %v1_17400 = icmp eq i1 %v12_173fe, false
  br i1 %v1_17400, label %dec_label_pc_17465, label %dec_label_pc_17402

dec_label_pc_17402:                               ; preds = %dec_label_pc_173c8
  %v2_17402 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17402, i32* @eax, align 4
  %v2_1740f = call i32 @function_2c3a6(i32 %v2_17402, i32 %arg2)
  %v2_17417 = ptrtoint i32* %stack_var_-24 to i32
  %v2_17424 = call i32 @function_2c432(i32 %v2_17417, i32 %arg1)
  %v2_1742c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1742c, i32* @eax, align 4
  %v2_17439 = call i32 @function_2c3a6(i32 %v2_1742c, i32 %arg1)
  %v3_17441 = load i32, i32* %stack_var_-20, align 4
  %v3_17448 = load i32, i32* %stack_var_-24, align 4
  %v3_1744f = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_1744f, i32* @eax, align 4
  %v3_17455 = call i32 @function_34110(i32 %v3_1744f, i32 %v3_17448, i32 %v3_17441)
  %v4_1745a = trunc i32 %v3_17455 to i8
  %v5_1745a = icmp eq i8 %v4_1745a, 0
  br i1 %v5_1745a, label %dec_label_pc_17465, label %dec_label_pc_1746a

dec_label_pc_17465:                               ; preds = %dec_label_pc_17402, %dec_label_pc_173c8
  br label %dec_label_pc_1746a

dec_label_pc_1746a:                               ; preds = %dec_label_pc_17402, %dec_label_pc_17465
  %storemerge = phi i32 [ 0, %dec_label_pc_17465 ], [ 1, %dec_label_pc_17402 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2c3a6, { 1, 0 }
  uselistorder i32 (i32)* @function_2c482, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1746a, { 1, 0 }
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17480:
  %v1_1749d = call i32 @function_34270(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_174ae

bb:                                               ; preds = %dec_label_pc_17480
  %v1_174ac = call i32 @function_174b3()
  br label %dec_label_pc_174ae

dec_label_pc_174ae:                               ; preds = %bb, %dec_label_pc_17480
  %v2_174ac = phi i32 [ %v1_174ac, %bb ], [ 0, %dec_label_pc_17480 ]
  ret i32 %v2_174ac
}

define i32 @function_174b3() local_unnamed_addr {
dec_label_pc_174b3:
  %v0_174b4 = load i32, i32* @eax, align 4
  ret i32 %v0_174b4
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_174b6:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_174d4 = call i32 @function_34366(i32 %tmp102)
  %v1_174dc = add i32 %tmp102, 4
  %v2_174dc = inttoptr i32 %v1_174dc to i32*
  %v3_174dc = load i32, i32* %v2_174dc, align 4
  %v2_174e2 = load i32, i32* %arg1, align 4
  store i32 %v2_174e2, i32* @edx, align 4
  %v3_174ef = call i32 @function_34393(i32 %v2_174e2, i32 %v3_174dc, i32 %v1_174d4)
  store i32 %tmp102, i32* @eax, align 4
  %v1_174fa = call i32 @function_342dc(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17524

bb:                                               ; preds = %dec_label_pc_174b6
  %v1_17509 = call i32 @function_17529()
  br label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_174b6, %bb
  %v0_1750b = phi i32 [ 0, %dec_label_pc_174b6 ], [ %v1_17509, %bb ]
  ret i32 %v0_1750b

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17524, { 1, 0 }
}

define i32 @function_1750d() local_unnamed_addr {
dec_label_pc_1750d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1750d = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1750d, i32* %ebx.global-to-local, align 4
  %v0_1750f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1750f = add i32 %v0_1750f, -28
  %v2_1750f = inttoptr i32 %v1_1750f to i32*
  %v3_1750f = load i32, i32* %v2_1750f, align 4
  store i32 %v3_1750f, i32* @eax, align 4
  %v1_17515 = call i32 @function_342dc(i32 %v3_1750f)
  %v0_1751a = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_1751a, i32* %eax.global-to-local, align 4
  ret i32 %v0_1751a

; uselistorder directives
  uselistorder i32 (i32)* @function_342dc, { 1, 0 }
}

define i32 @function_17529() local_unnamed_addr {
dec_label_pc_17529:
  %v0_1752e = load i32, i32* @eax, align 4
  ret i32 %v0_1752e
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17530:
  %v1_1754d = call i32 @function_3448c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1755e

bb:                                               ; preds = %dec_label_pc_17530
  %v1_1755c = call i32 @function_17563()
  br label %dec_label_pc_1755e

dec_label_pc_1755e:                               ; preds = %bb, %dec_label_pc_17530
  %v2_1755c = phi i32 [ %v1_1755c, %bb ], [ 0, %dec_label_pc_17530 ]
  ret i32 %v2_1755c
}

define i32 @function_17563() local_unnamed_addr {
dec_label_pc_17563:
  %v0_17564 = load i32, i32* @eax, align 4
  ret i32 %v0_17564
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17566:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_17584 = call i32 @function_34582(i32 %tmp102)
  store i32 %v1_17584, i32* @eax, align 4
  %v1_1758c = add i32 %tmp102, 4
  %v2_1758c = inttoptr i32 %v1_1758c to i32*
  %v3_1758c = load i32, i32* %v2_1758c, align 4
  %v2_17592 = load i32, i32* %arg1, align 4
  %v3_1759f = call i32 @function_345af(i32 %v2_17592, i32 %v3_1758c, i32 %v1_17584)
  %v1_175aa = call i32 @function_344f8(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_175d4

bb:                                               ; preds = %dec_label_pc_17566
  %v1_175b9 = call i32 @function_175d9()
  br label %dec_label_pc_175d4

dec_label_pc_175d4:                               ; preds = %dec_label_pc_17566, %bb
  %v0_175bb = phi i32 [ 0, %dec_label_pc_17566 ], [ %v1_175b9, %bb ]
  ret i32 %v0_175bb

; uselistorder directives
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_175d4, { 1, 0 }
}

define i32 @function_175bd() local_unnamed_addr {
dec_label_pc_175bd:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_175bd = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_175bd, i32* %ebx.global-to-local, align 4
  %v0_175bf = load i32, i32* @ebp, align 4
  %v1_175bf = add i32 %v0_175bf, -28
  %v2_175bf = inttoptr i32 %v1_175bf to i32*
  %v3_175bf = load i32, i32* %v2_175bf, align 4
  store i32 %v3_175bf, i32* %eax.global-to-local, align 4
  %v1_175c5 = call i32 @function_344f8(i32 %v3_175bf)
  %v0_175ca = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_175ca, i32* %eax.global-to-local, align 4
  ret i32 %v0_175ca

; uselistorder directives
  uselistorder i32 (i32)* @function_344f8, { 1, 0 }
}

define i32 @function_175d9() local_unnamed_addr {
dec_label_pc_175d9:
  %v0_175de = load i32, i32* @eax, align 4
  ret i32 %v0_175de
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_175e0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_175fa = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v2_17606 = call i32 @function_34672(i32 %tmp101, i32 %v2_175fa)
  ret i32 0

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1761e:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_17638 = load i32, i32* %arg1, align 4
  store i32 %tmp5, i32* @eax, align 4
  %v2_17644 = call i32 @function_3470e(i32 %tmp5, i32 %v2_17638)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17655

bb:                                               ; preds = %dec_label_pc_1761e
  %v1_17653 = call i32 @function_1765a()
  br label %dec_label_pc_17655

dec_label_pc_17655:                               ; preds = %bb, %dec_label_pc_1761e
  %v2_17653 = phi i32 [ %v1_17653, %bb ], [ 0, %dec_label_pc_1761e ]
  ret i32 %v2_17653

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
}

define i32 @function_1765a() local_unnamed_addr {
dec_label_pc_1765a:
  %v0_1765b = load i32, i32* @eax, align 4
  ret i32 %v0_1765b
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1765c:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_17676 = add i32 %tmp4, 4
  %v2_17676 = inttoptr i32 %v1_17676 to i32*
  %v3_17676 = load i32, i32* %v2_17676, align 4
  %v2_1767e = load i32, i32* %arg1, align 4
  %v2_17682 = sub i32 %v3_17676, %v2_1767e
  store i32 %v2_17682, i32* @ecx, align 4
  %v2_17686 = sdiv i32 %v2_17682, 4
  %v3_17689 = mul i32 %v2_17686, -991146299
  store i32 %v3_17689, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1769b

bb:                                               ; preds = %dec_label_pc_1765c
  %v2_17699 = call i32 @function_176a0(i32 %tmp4)
  br label %dec_label_pc_1769b

dec_label_pc_1769b:                               ; preds = %bb, %dec_label_pc_1765c
  %v3_17699 = phi i32 [ %v2_17699, %bb ], [ %v3_17689, %dec_label_pc_1765c ]
  ret i32 %v3_17699
}

define i32 @function_176a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_176a0:
  %v0_176a1 = load i32, i32* @eax, align 4
  ret i32 %v0_176a1
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_176a2:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_176c7 = call i32 @function_34930(i32 %arg2)
  store i32 %v1_176c7, i32* %ebx.global-to-local, align 4
  %v1_176d4 = call i32 @function_2ee8a(i32 %arg2)
  store i32 %v1_176d4, i32* @eax, align 4
  %v3_176e7 = call i32 @function_3495e(i32 %tmp107, i32 %v1_176d4, i32 %v1_176c7)
  store i32 %tmp107, i32* %ebx.global-to-local, align 4
  %v2_176fc = load i32, i32* %arg1, align 4
  store i32 %v2_176fc, i32* %esi.global-to-local, align 4
  %v2_176fe = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_176fe, i32* @eax, align 4
  %v2_1770b = call i32 @function_34890(i32 %v2_176fe, i32 %arg2)
  %v0_17710 = load i32, i32* @esp, align 4
  %v5_17710 = icmp ult i32 %v0_17710, 4
  store i1 %v5_17710, i1* @cf, align 1
  %v2_17713 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17713, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_17720 = call i32 @function_348e0(i32 %v2_17713, i32 %arg2)
  %v0_17728 = load i32, i32* %ebx.global-to-local, align 4
  %v0_1772c = load i32, i32* %esi.global-to-local, align 4
  %v3_17730 = load i32, i32* %stack_var_-20, align 4
  %v3_17737 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_17737, i32* @eax, align 4
  %v4_1773d = call i32 @function_34a03(i32 %v3_17737, i32 %v3_17730, i32 %v0_1772c, i32 %v0_17728)
  %v2_17747 = add i32 %tmp107, 4
  %v3_17747 = inttoptr i32 %v2_17747 to i32*
  store i32 %v4_1773d, i32* %v3_17747, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17756

bb:                                               ; preds = %dec_label_pc_176a2
  %v1_17754 = call i32 @function_17774()
  store i32 %v1_17754, i32* @eax, align 4
  br label %dec_label_pc_17756

dec_label_pc_17756:                               ; preds = %bb, %dec_label_pc_176a2
  %v0_17756 = call i32 @function_1776f()
  ret i32 %v0_17756

; uselistorder directives
  uselistorder i32 %tmp107, { 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_17759() local_unnamed_addr {
dec_label_pc_17759:
  %eax.global-to-local = alloca i32, align 4
  %v0_17759 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17759
}

define i32 @function_1776f() local_unnamed_addr {
dec_label_pc_1776f:
  %v0_1776f = load i32, i32* @eax, align 4
  ret i32 %v0_1776f
}

define i32 @function_17774() local_unnamed_addr {
dec_label_pc_17774:
  %v0_1777a = load i32, i32* @eax, align 4
  ret i32 %v0_1777a
}

define i32 @_ZNSaI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1777c:
  store i32 %arg1, i32* @eax, align 4
  %v1_17799 = call i32 @function_34b32(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_177aa

bb:                                               ; preds = %dec_label_pc_1777c
  %v1_177a8 = call i32 @function_177af()
  br label %dec_label_pc_177aa

dec_label_pc_177aa:                               ; preds = %bb, %dec_label_pc_1777c
  %v2_177a8 = phi i32 [ %v1_177a8, %bb ], [ 0, %dec_label_pc_1777c ]
  ret i32 %v2_177a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_177af() local_unnamed_addr {
dec_label_pc_177af:
  %v0_177b0 = load i32, i32* @eax, align 4
  ret i32 %v0_177b0
}

define i32 @_ZNSaI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_177b2:
  store i32 %arg1, i32* @eax, align 4
  %v1_177cf = call i32 @function_34b92(i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_177e8:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_17802 = add i32 %tmp4, 4
  %v2_17802 = inttoptr i32 %v1_17802 to i32*
  %v3_17802 = load i32, i32* %v2_17802, align 4
  %v2_1780a = load i32, i32* %arg1, align 4
  %v2_1780e = sub i32 %v3_17802, %v2_1780a
  store i32 %v2_1780e, i32* @ecx, align 4
  %v2_17812 = sdiv i32 %v2_1780e, 4
  %v3_17815 = mul i32 %v2_17812, -858993459
  ret i32 %v3_17815
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1782e:
  %v2_1784e = load i32, i32* %arg1, align 4
  %v2_1785a = mul i32 %arg2, 20
  %v2_1785d = add i32 %v2_1784e, %v2_1785a
  store i32 %v2_1785d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1786b

bb:                                               ; preds = %dec_label_pc_1782e
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_17869 = call i32 @function_17870(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_1786b

dec_label_pc_1786b:                               ; preds = %bb, %dec_label_pc_1782e
  %v4_17869 = phi i32 [ %v3_17869, %bb ], [ %v2_1785d, %dec_label_pc_1782e ]
  ret i32 %v4_17869

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_17870(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17870:
  %v0_17871 = load i32, i32* @eax, align 4
  ret i32 %v0_17871
}

define i32 @_ZNSt6vectorIhSaIhEEC1IiEET_S3_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17872:
  %ebx.global-to-local = alloca i32, align 4
  %v0_17875 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_178a9 = call i32 @function_3430a(i32 %arg1, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  %sext = mul i32 %v0_17875, 16777216
  %v4_178c6 = sdiv i32 %sext, 16777216
  %v5_178c6 = call i32 @function_34d30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_178c6)
  store i32 %v0_17875, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_17875, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_178fc:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_17913 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17913, i32* @eax, align 4
  %v2_17920 = call i32 @function_34e40(i32 %v2_17913, i32 %arg1)
  %v2_17928 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17928, i32* @eax, align 4
  %v2_17935 = call i32 @function_34e90(i32 %v2_17928, i32 %arg1)
  store i32 %v2_17928, i32* @eax, align 4
  %v2_1794a = call i32 @function_33fc8(i32 %v2_17928, i32 %v2_17913)
  store i32 %v2_1794a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1795b

bb:                                               ; preds = %dec_label_pc_178fc
  %v1_17959 = call i32 @function_17960()
  br label %dec_label_pc_1795b

dec_label_pc_1795b:                               ; preds = %bb, %dec_label_pc_178fc
  %v2_17959 = phi i32 [ %v1_17959, %bb ], [ %v2_1794a, %dec_label_pc_178fc ]
  ret i32 %v2_17959

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17960() local_unnamed_addr {
dec_label_pc_17960:
  %v0_17961 = load i32, i32* @eax, align 4
  ret i32 %v0_17961
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE8pop_backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17962:
  store i1 false, i1* @cf, align 1
  %v1_1797c = add i32 %arg1, 4
  %v2_1797c = inttoptr i32 %v1_1797c to i32*
  %v3_1797c = load i32, i32* %v2_1797c, align 4
  %v1_1797f = add i32 %v3_1797c, -12
  store i32 %v1_1797f, i32* %v2_1797c, align 4
  store i32 %v1_1797f, i32* @edx, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_17998 = call i32 @function_34f46(i32 %arg1, i32 %v1_1797f)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_179a9

bb:                                               ; preds = %dec_label_pc_17962
  %v1_179a7 = call i32 @function_179ae()
  br label %dec_label_pc_179a9

dec_label_pc_179a9:                               ; preds = %bb, %dec_label_pc_17962
  %v2_179a7 = phi i32 [ %v1_179a7, %bb ], [ 0, %dec_label_pc_17962 ]
  ret i32 %v2_179a7

; uselistorder directives
  uselistorder i32 %v1_1797f, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_179ae() local_unnamed_addr {
dec_label_pc_179ae:
  %v0_179af = load i32, i32* @eax, align 4
  ret i32 %v0_179af
}

define i32 @_ZNSt6vectorIbSaIbEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_179b0:
  %v1_179cd = call i32 @function_35006(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_179de

bb:                                               ; preds = %dec_label_pc_179b0
  %v1_179dc = call i32 @function_179e3()
  br label %dec_label_pc_179de

dec_label_pc_179de:                               ; preds = %bb, %dec_label_pc_179b0
  %v2_179dc = phi i32 [ %v1_179dc, %bb ], [ 0, %dec_label_pc_179b0 ]
  ret i32 %v2_179dc
}

define i32 @function_179e3() local_unnamed_addr {
dec_label_pc_179e3:
  %v0_179e4 = load i32, i32* @eax, align 4
  ret i32 %v0_179e4
}

define i32 @_ZNSt6vectorIbSaIbEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_179e6:
  %v1_17a03 = call i32 @function_35072(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17a14

bb:                                               ; preds = %dec_label_pc_179e6
  %v1_17a12 = call i32 @function_17a19()
  br label %dec_label_pc_17a14

dec_label_pc_17a14:                               ; preds = %bb, %dec_label_pc_179e6
  %v2_17a12 = phi i32 [ %v1_17a12, %bb ], [ 0, %dec_label_pc_179e6 ]
  ret i32 %v2_17a12
}

define i32 @function_17a19() local_unnamed_addr {
dec_label_pc_17a19:
  %v0_17a1a = load i32, i32* @eax, align 4
  ret i32 %v0_17a1a
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a1c:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_17a39 = call i32 @function_3513c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17a4a

bb:                                               ; preds = %dec_label_pc_17a1c
  %v1_17a48 = call i32 @function_17a4f()
  br label %dec_label_pc_17a4a

dec_label_pc_17a4a:                               ; preds = %bb, %dec_label_pc_17a1c
  %v2_17a48 = phi i32 [ %v1_17a48, %bb ], [ 0, %dec_label_pc_17a1c ]
  ret i32 %v2_17a48

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17a4f() local_unnamed_addr {
dec_label_pc_17a4f:
  %v0_17a50 = load i32, i32* @eax, align 4
  ret i32 %v0_17a50
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_17a52:
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i32 %tmp5, i32* @eax, align 4
  %v1_17a70 = call i32 @function_35232(i32 %tmp5)
  store i32 %v1_17a70, i32* @eax, align 4
  %v1_17a78 = add i32 %tmp5, 4
  %v2_17a78 = inttoptr i32 %v1_17a78 to i32*
  %v3_17a78 = load i32, i32* %v2_17a78, align 4
  store i32 %v3_17a78, i32* @ecx, align 4
  %v2_17a7e = load i32, i32* %arg1, align 4
  %v3_17a8b = call i32 @function_3525f(i32 %v2_17a7e, i32 %v3_17a78, i32 %v1_17a70)
  store i32 %tmp5, i32* @eax, align 4
  %v1_17a96 = call i32 @function_351a8(i32 %tmp5)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17aa7

bb:                                               ; preds = %dec_label_pc_17a52
  %v1_17aa5 = call i32 @function_17ac5()
  store i32 %v1_17aa5, i32* @eax, align 4
  br label %dec_label_pc_17aa7

dec_label_pc_17aa7:                               ; preds = %bb, %dec_label_pc_17a52
  %v0_17aa7 = call i32 @function_17ac0()
  ret i32 %v0_17aa7

; uselistorder directives
  uselistorder i32 %tmp5, { 4, 3, 2, 1, 0 }
}

define i32 @function_17aaa() local_unnamed_addr {
dec_label_pc_17aaa:
  %eax.global-to-local = alloca i32, align 4
  %v0_17aaa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17aaa
}

define i32 @function_17ac0() local_unnamed_addr {
dec_label_pc_17ac0:
  %v0_17ac0 = load i32, i32* @eax, align 4
  ret i32 %v0_17ac0
}

define i32 @function_17ac5() local_unnamed_addr {
dec_label_pc_17ac5:
  %v0_17aca = load i32, i32* @eax, align 4
  ret i32 %v0_17aca
}

define i32 @_ZNSt6vectorIbSaIbEE5beginEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17acc:
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v1_17aef = add i32 %arg2, 4
  %v2_17aef = inttoptr i32 %v1_17aef to i32*
  %v3_17aef = load i32, i32* %v2_17aef, align 4
  %v1_17af2 = inttoptr i32 %arg2 to i32*
  %v2_17af2 = load i32, i32* %v1_17af2, align 4
  store i32 %v2_17af2, i32* %arg1, align 4
  %v1_17af6 = load i32, i32* %ecx.global-to-local, align 4
  %v2_17af6 = add i32 %v1_17af6, 4
  %v3_17af6 = inttoptr i32 %v2_17af6 to i32*
  store i32 %v3_17aef, i32* %v3_17af6, align 4
  store i32 %tmp6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17b08

bb:                                               ; preds = %dec_label_pc_17acc
  %v3_17b06 = call i32 @function_17b0d(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_17b08

dec_label_pc_17b08:                               ; preds = %bb, %dec_label_pc_17acc
  %v4_17b06 = phi i32 [ %v3_17b06, %bb ], [ %tmp6, %dec_label_pc_17acc ]
  ret i32 %v4_17b06

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_17b0d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b0d:
  %v0_17b0e = load i32, i32* @eax, align 4
  ret i32 %v0_17b0e
}

define i32 @_ZNSt6vectorIbSaIbEE3endEv(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17b12:
  %ecx.global-to-local = alloca i32, align 4
  %tmp6 = ptrtoint i32* %arg1 to i32
  store i32 %tmp6, i32* %ecx.global-to-local, align 4
  %v1_17b35 = add i32 %arg2, 12
  %v2_17b35 = inttoptr i32 %v1_17b35 to i32*
  %v3_17b35 = load i32, i32* %v2_17b35, align 4
  %v1_17b38 = add i32 %arg2, 8
  %v2_17b38 = inttoptr i32 %v1_17b38 to i32*
  %v3_17b38 = load i32, i32* %v2_17b38, align 4
  store i32 %v3_17b38, i32* %arg1, align 4
  %v1_17b3d = load i32, i32* %ecx.global-to-local, align 4
  %v2_17b3d = add i32 %v1_17b3d, 4
  %v3_17b3d = inttoptr i32 %v2_17b3d to i32*
  store i32 %v3_17b35, i32* %v3_17b3d, align 4
  ret i32 %tmp6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @_ZSt5countISt13_Bit_iteratorbENSt15iterator_traitsIT_E15difference_typeES2_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5) local_unnamed_addr {
dec_label_pc_17b58:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v16_17b5b = ptrtoint i32* %stack_var_-76 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-44, align 4
  %v4_17b76 = ptrtoint i8* %arg5 to i32
  store i32 %v4_17b76, i32* %eax.global-to-local, align 4
  %v0_17b7c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %v0_17b7c, i32* %eax.global-to-local, align 4
  %v2_17bce = ptrtoint i32* %stack_var_-44 to i32
  %v2_17bd5 = ptrtoint i32* %stack_var_-36 to i32
  %v2_17b90 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_17bce

dec_label_pc_17b90:                               ; preds = %dec_label_pc_17bce
  store i32 %v2_17b90, i32* %eax.global-to-local, align 4
  store i32 %v2_17bd5, i32* @edx, align 4
  %v1_17b96 = load i32, i32* @esp, align 4
  %v2_17b96 = add i32 %v1_17b96, 4
  %v3_17b96 = inttoptr i32 %v2_17b96 to i32*
  store i32 %v2_17bd5, i32* %v3_17b96, align 4
  %v1_17b9a = load i32, i32* @esp, align 4
  %v2_17b9a = inttoptr i32 %v1_17b9a to i32*
  store i32 %v2_17b90, i32* %v2_17b9a, align 4
  %v0_17b9d = call i32 @function_20fce()
  %v0_17ba2 = load i32, i32* @esp, align 4
  %v1_17ba2 = add i32 %v0_17ba2, -4
  store i32 %v2_17b90, i32* @eax, align 4
  %v2_17ba8 = inttoptr i32 %v1_17ba2 to i32*
  store i32 %v2_17b90, i32* %v2_17ba8, align 4
  %v0_17bab = call i32 @function_20b84()
  store i32 %v0_17bab, i32* %eax.global-to-local, align 4
  %v2_17bb3 = load i8, i8* %arg5, align 1
  %v1_17bb6 = trunc i32 %v0_17bab to i8
  %v14_17bb6 = icmp eq i8 %v1_17bb6, %v2_17bb3
  %v1_17bb8 = zext i1 %v14_17bb6 to i32
  %v3_17bb8 = and i32 %v0_17bab, -256
  %v4_17bb8 = or i32 %v1_17bb8, %v3_17bb8
  store i32 %v4_17bb8, i32* %eax.global-to-local, align 4
  %v5_17bbb = icmp eq i1 %v14_17bb6, false
  br i1 %v5_17bbb, label %dec_label_pc_17bc3, label %dec_label_pc_17bbf

dec_label_pc_17bbf:                               ; preds = %dec_label_pc_17b90
  %v4_17bbf = add i32 %stack_var_-20.1, 1
  br label %dec_label_pc_17bc3

dec_label_pc_17bc3:                               ; preds = %dec_label_pc_17bbf, %dec_label_pc_17b90
  %stack_var_-20.0 = phi i32 [ %stack_var_-20.1, %dec_label_pc_17b90 ], [ %v4_17bbf, %dec_label_pc_17bbf ]
  store i32 %v2_17bd5, i32* @eax, align 4
  %v1_17bc6 = load i32, i32* @esp, align 4
  %v2_17bc6 = inttoptr i32 %v1_17bc6 to i32*
  store i32 %v2_17bd5, i32* %v2_17bc6, align 4
  %v0_17bc9 = call i32 @function_2102a()
  %v1_17bd1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_17bce

dec_label_pc_17bce:                               ; preds = %dec_label_pc_17bc3, %dec_label_pc_17b58
  %v1_17bd1 = phi i32 [ %v16_17b5b, %dec_label_pc_17b58 ], [ %v1_17bd1.pre, %dec_label_pc_17bc3 ]
  %stack_var_-20.1 = phi i32 [ 0, %dec_label_pc_17b58 ], [ %stack_var_-20.0, %dec_label_pc_17bc3 ]
  %v2_17bd1 = add i32 %v1_17bd1, 4
  %v3_17bd1 = inttoptr i32 %v2_17bd1 to i32*
  store i32 %v2_17bce, i32* %v3_17bd1, align 4
  store i32 %v2_17bd5, i32* %eax.global-to-local, align 4
  %v1_17bd8 = load i32, i32* @esp, align 4
  %v2_17bd8 = inttoptr i32 %v1_17bd8 to i32*
  store i32 %v2_17bd5, i32* %v2_17bd8, align 4
  %v0_17be0 = load i32, i32* %eax.global-to-local, align 4
  %v4_17be0 = trunc i32 %v0_17be0 to i8
  %v5_17be0 = icmp eq i8 %v4_17be0, 0
  %v1_17be2 = icmp eq i1 %v5_17be0, false
  br i1 %v1_17be2, label %dec_label_pc_17b90, label %dec_label_pc_17be4

dec_label_pc_17be4:                               ; preds = %dec_label_pc_17bce
  store i32 %stack_var_-20.1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17bf3

bb:                                               ; preds = %dec_label_pc_17be4
  %v1_17bf1 = call i32 @function_17bf8()
  store i32 %v1_17bf1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_17bf3

dec_label_pc_17bf3:                               ; preds = %bb, %dec_label_pc_17be4
  %v2_17bf1 = phi i32 [ %v1_17bf1, %bb ], [ %stack_var_-20.1, %dec_label_pc_17be4 ]
  ret i32 %v2_17bf1

; uselistorder directives
  uselistorder i32 %v2_17bd5, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3, 6, 7 }
}

define i32 @function_17bf8() local_unnamed_addr {
dec_label_pc_17bf8:
  %v0_17bf9 = load i32, i32* @eax, align 4
  ret i32 %v0_17bf9
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE9push_backERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17bfa:
  %stack_var_-20 = alloca i32, align 4
  %v1_17c1a = add i32 %arg1, 4
  %v2_17c1a = inttoptr i32 %v1_17c1a to i32*
  %v3_17c1a = load i32, i32* %v2_17c1a, align 4
  %v1_17c20 = add i32 %arg1, 8
  %v2_17c20 = inttoptr i32 %v1_17c20 to i32*
  %v3_17c20 = load i32, i32* %v2_17c20, align 4
  %v7_17c23 = icmp ult i32 %v3_17c1a, %v3_17c20
  store i1 %v7_17c23, i1* @cf, align 1
  %v12_17c23 = icmp eq i32 %v3_17c1a, %v3_17c20
  br i1 %v12_17c23, label %dec_label_pc_17c54, label %dec_label_pc_17c27

dec_label_pc_17c27:                               ; preds = %dec_label_pc_17bfa
  %v3_17c2a = load i32, i32* %v2_17c1a, align 4
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg2, i32* @ecx, align 4
  %v3_17c3e = call i32 @function_35450(i32 %arg1, i32 %v3_17c2a, i32 %arg2)
  %v3_17c46 = load i32, i32* %v2_17c1a, align 4
  %v1_17c49 = add i32 %v3_17c46, 12
  store i32 %v1_17c49, i32* %v2_17c1a, align 4
  br label %dec_label_pc_17c82

dec_label_pc_17c54:                               ; preds = %dec_label_pc_17bfa
  %v2_17c54 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_17c54, i32* @eax, align 4
  %v2_17c61 = call i32 @function_2fb08(i32 %v2_17c54, i32 %arg1)
  %v3_17c70 = load i32, i32* %stack_var_-20, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_17c7d = call i32 @function_354d2(i32 %arg1, i32 %v3_17c70, i32 %arg2)
  br label %dec_label_pc_17c82

dec_label_pc_17c82:                               ; preds = %dec_label_pc_17c54, %dec_label_pc_17c27
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17c8e

bb:                                               ; preds = %dec_label_pc_17c82
  %v1_17c8c = call i32 @function_17c93()
  br label %dec_label_pc_17c8e

dec_label_pc_17c8e:                               ; preds = %bb, %dec_label_pc_17c82
  %v2_17c8c = phi i32 [ %v1_17c8c, %bb ], [ 0, %dec_label_pc_17c82 ]
  ret i32 %v2_17c8c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 4, 1, 0, 6, 5 }
}

define i32 @function_17c93() local_unnamed_addr {
dec_label_pc_17c93:
  %v0_17c94 = load i32, i32* @eax, align 4
  ret i32 %v0_17c94
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_17c96:
  %tmp4 = ptrtoint i32* %arg1 to i32
  %v1_17cb0 = add i32 %tmp4, 4
  %v2_17cb0 = inttoptr i32 %v1_17cb0 to i32*
  %v3_17cb0 = load i32, i32* %v2_17cb0, align 4
  %v2_17cb8 = load i32, i32* %arg1, align 4
  %v2_17cbc = sub i32 %v3_17cb0, %v2_17cb8
  store i32 %v2_17cbc, i32* @ecx, align 4
  %v2_17cc0 = sdiv i32 %v2_17cbc, 4
  %v3_17cc3 = mul i32 %v2_17cc0, -1431655765
  store i32 %v3_17cc3, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_17cd5

bb:                                               ; preds = %dec_label_pc_17c96
  %v2_17cd3 = call i32 @function_17cda(i32 %tmp4)
  br label %dec_label_pc_17cd5

dec_label_pc_17cd5:                               ; preds = %bb, %dec_label_pc_17c96
  %v3_17cd3 = phi i32 [ %v2_17cd3, %bb ], [ %v3_17cc3, %dec_label_pc_17c96 ]
  ret i32 %v3_17cd3
}

define i32 @function_17cda(i32 %arg1) local_unnamed_addr {
dec_label_pc_17cda:
  %v0_17cdb = load i32, i32* @eax, align 4
  ret i32 %v0_17cdb
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE2atEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17cdc:
  store i32 %arg1, i32* @eax, align 4
  %v2_17d06 = call i32 @function_358ca(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_17d18 = call i32 @function_31180(i32 %arg1, i32 %arg2)
  store i32 %v2_17d18, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_17d29

bb:                                               ; preds = %dec_label_pc_17cdc
  %v1_17d27 = call i32 @function_17d2e()
  br label %dec_label_pc_17d29

dec_label_pc_17d29:                               ; preds = %bb, %dec_label_pc_17cdc
  %v2_17d27 = phi i32 [ %v1_17d27, %bb ], [ %v2_17d18, %dec_label_pc_17cdc ]
  ret i32 %v2_17d27

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_17d2e() local_unnamed_addr {
dec_label_pc_17d2e:
  %v0_17d2f = load i32, i32* @eax, align 4
  ret i32 %v0_17d2f
}

define i32 @_ZNSt6vectorIbSaIbEE9push_backEb(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_17d30:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v1_17d51 = add i32 %arg1, 8
  %v2_17d51 = inttoptr i32 %v1_17d51 to i32*
  %v3_17d51 = load i32, i32* %v2_17d51, align 4
  %v1_17d57 = add i32 %arg1, 16
  %v2_17d57 = inttoptr i32 %v1_17d57 to i32*
  %v3_17d57 = load i32, i32* %v2_17d57, align 4
  %v12_17d5a = icmp eq i32 %v3_17d51, %v3_17d57
  br i1 %v12_17d5a, label %dec_label_pc_17da8, label %dec_label_pc_17d5e

dec_label_pc_17d5e:                               ; preds = %dec_label_pc_17d30
  %v2_17d68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_17d68, i32* @eax, align 4
  %v4_17d7a = call i32 @function_2123a(i32 %v2_17d68, i32 %v1_17d51, i32 0)
  %v2_17d82 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17d82, i32* @eax, align 4
  %v2_17d8f = call i32 @function_211a6(i32 %v2_17d82, i32 %v2_17d68)
  br label %dec_label_pc_17dde

dec_label_pc_17da8:                               ; preds = %dec_label_pc_17d30
  %v2_17dac = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17dac, i32* @eax, align 4
  %v2_17db9 = call i32 @function_2f842(i32 %v2_17dac, i32 %arg1)
  br label %dec_label_pc_17dde

dec_label_pc_17dde:                               ; preds = %dec_label_pc_17da8, %dec_label_pc_17d5e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17dea

bb:                                               ; preds = %dec_label_pc_17dde
  %v1_17de8 = call i32 @function_17def()
  br label %dec_label_pc_17dea

dec_label_pc_17dea:                               ; preds = %bb, %dec_label_pc_17dde
  %v2_17de8 = phi i32 [ %v1_17de8, %bb ], [ 0, %dec_label_pc_17dde ]
  ret i32 %v2_17de8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_17def() local_unnamed_addr {
dec_label_pc_17def:
  %v0_17df3 = load i32, i32* @eax, align 4
  ret i32 %v0_17df3
}

define i32 @_ZNKSt6vectorIbSaIbEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17df4:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_17e0b = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17e0b, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v2_17e18 = call i32 @function_35cf2(i32 %v2_17e0b, i32 %arg1)
  %v2_17e20 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17e20, i32* @eax, align 4
  %v2_17e2d = call i32 @function_35d3c(i32 %v2_17e20, i32 %arg1)
  %v0_17e32 = load i32, i32* @esp, align 4
  %v1_17e32 = add i32 %v0_17e32, -4
  %tmp12 = sub i32 3, %v0_17e32
  %v8_17e32 = and i32 %tmp12, %v0_17e32
  %v9_17e32 = icmp slt i32 %v8_17e32, 0
  store i1 %v9_17e32, i1* @of, align 1
  %v10_17e32 = icmp eq i32 %v1_17e32, 0
  store i1 %v10_17e32, i1* @zf, align 1
  %v11_17e32 = icmp slt i32 %v1_17e32, 0
  store i1 %v11_17e32, i1* @sf, align 1
  store i32 %v2_17e20, i32* @eax, align 4
  %v2_17e42 = call i32 @function_210d6(i32 %v2_17e20, i32 %v2_17e0b)
  store i32 %v2_17e42, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17e53

bb:                                               ; preds = %dec_label_pc_17df4
  %v1_17e51 = call i32 @function_17e58()
  br label %dec_label_pc_17e53

dec_label_pc_17e53:                               ; preds = %bb, %dec_label_pc_17df4
  %v2_17e51 = phi i32 [ %v1_17e51, %bb ], [ %v2_17e42, %dec_label_pc_17df4 ]
  ret i32 %v2_17e51

; uselistorder directives
  uselistorder i32 %v1_17e32, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_17e58() local_unnamed_addr {
dec_label_pc_17e58:
  %v0_17e59 = load i32, i32* @eax, align 4
  ret i32 %v0_17e59
}

define i32 @_ZNSt6vectorIbSaIbEE4backEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17e5a:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_17e77 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_17e77, i32* @eax, align 4
  %v2_17e84 = call i32 @function_2f96c(i32 %v2_17e77, i32 %arg2)
  %v2_17e8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_17e8c, i32* @eax, align 4
  %v3_17ea1 = call i32 @function_214e8(i32 %v2_17e8c, i32 %v2_17e77, i32 1)
  store i32 %arg1, i32* @eax, align 4
  %v2_17eb6 = call i32 @function_212d0(i32 %arg1, i32 %v2_17e8c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17ecd

bb:                                               ; preds = %dec_label_pc_17e5a
  %v1_17ecb = call i32 @function_17ed2()
  br label %dec_label_pc_17ecd

dec_label_pc_17ecd:                               ; preds = %bb, %dec_label_pc_17e5a
  %v2_17ecb = phi i32 [ %v1_17ecb, %bb ], [ %arg1, %dec_label_pc_17e5a ]
  ret i32 %v2_17ecb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_17ed2() local_unnamed_addr {
dec_label_pc_17ed2:
  %v0_17ed3 = load i32, i32* @eax, align 4
  ret i32 %v0_17ed3
}

define i32 @_ZNSt6vectorIbSaIbEE8pop_backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_17ed6:
  %v1_17ef0 = add i32 %arg1, 8
  store i32 %v1_17ef0, i32* @eax, align 4
  %v1_17ef6 = call i32 @function_21436(i32 %v1_17ef0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17f07

bb:                                               ; preds = %dec_label_pc_17ed6
  %v1_17f05 = call i32 @function_17f0c()
  br label %dec_label_pc_17f07

dec_label_pc_17f07:                               ; preds = %bb, %dec_label_pc_17ed6
  %v2_17f05 = phi i32 [ %v1_17f05, %bb ], [ 0, %dec_label_pc_17ed6 ]
  ret i32 %v2_17f05
}

define i32 @function_17f0c() local_unnamed_addr {
dec_label_pc_17f0c:
  %v0_17f0d = load i32, i32* @eax, align 4
  ret i32 %v0_17f0d
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f0e:
  %v1_17f2e = add i32 %arg2, 4
  store i32 %arg1, i32* @eax, align 4
  %v2_17f3b = call i32 @function_35e9e(i32 %arg1, i32 %v1_17f2e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17f4f

bb:                                               ; preds = %dec_label_pc_17f0e
  %v1_17f4d = call i32 @function_17f54()
  br label %dec_label_pc_17f4f

dec_label_pc_17f4f:                               ; preds = %bb, %dec_label_pc_17f0e
  %v2_17f4d = phi i32 [ %v1_17f4d, %bb ], [ %arg1, %dec_label_pc_17f0e ]
  ret i32 %v2_17f4d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_17f54() local_unnamed_addr {
dec_label_pc_17f54:
  %v0_17f55 = load i32, i32* @eax, align 4
  ret i32 %v0_17f55
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEmiERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17f58:
  %stack_var_-20 = alloca i32, align 4
  %v2_17f7e = load i32, i32* %arg2, align 4
  store i32 %v2_17f7e, i32* @ecx, align 4
  %v1_17f83 = inttoptr i32 %arg3 to i32*
  %v2_17f83 = load i32, i32* %v1_17f83, align 4
  %tmp13 = mul i32 %v2_17f83, -12
  %v2_17f92 = add i32 %v2_17f7e, %tmp13
  store i32 %v2_17f92, i32* %stack_var_-20, align 4
  %v2_17f97 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_17fa4 = call i32 @function_35ee8(i32 %arg1, i32 %v2_17f97)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_17fb8

bb:                                               ; preds = %dec_label_pc_17f58
  %v1_17fb6 = call i32 @function_17fbd()
  br label %dec_label_pc_17fb8

dec_label_pc_17fb8:                               ; preds = %bb, %dec_label_pc_17f58
  %v2_17fb6 = phi i32 [ %v1_17fb6, %bb ], [ %arg1, %dec_label_pc_17f58 ]
  ret i32 %v2_17fb6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_17fbd() local_unnamed_addr {
dec_label_pc_17fbd:
  %v0_17fbe = load i32, i32* @eax, align 4
  ret i32 %v0_17fbe
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17fc2:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp22 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  store i32 %arg4, i32* %stack_var_-60, align 4
  %v2_17fec = ptrtoint i32* %stack_var_-60 to i32
  %v2_17ff3 = ptrtoint i32* %stack_var_-56 to i32
  %v4_17ffe = trunc i32 %v2_17ff3 to i8
  %v5_17ffe = icmp eq i8 %v4_17ffe, 0
  br i1 %v5_17ffe, label %dec_label_pc_180b9, label %dec_label_pc_18006

dec_label_pc_18006:                               ; preds = %dec_label_pc_17fc2
  %v2_18006 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_18006, i32* @eax, align 4
  %v2_18013 = call i32 @function_2fed0(i32 %v2_18006, i32 %arg2)
  store i32 %v2_17fec, i32* %stack_var_-80, align 4
  %v4_1802d = trunc i32 %v2_17fec to i8
  %v5_1802d = icmp eq i8 %v4_1802d, 0
  br i1 %v5_1802d, label %dec_label_pc_18069, label %dec_label_pc_18031

dec_label_pc_18031:                               ; preds = %dec_label_pc_18006
  %v2_18031 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_18031, i32* @eax, align 4
  store i32 %v2_18031, i32* %stack_var_-80, align 4
  %v2_1803e = call i32 @function_2fed0(i32 %v2_18031, i32 %arg2)
  %v0_18043 = load i32, i32* @esp, align 4
  %v5_18043 = icmp ult i32 %v0_18043, 4
  store i1 %v5_18043, i1* @cf, align 1
  %v2_18046 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_18046, i32* @eax, align 4
  %v3_18049 = load i32, i32* %stack_var_-56, align 4
  %v3_18050 = load i32, i32* %stack_var_-28, align 4
  %v3_18057 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_18057, i32* @edx, align 4
  store i32 %v3_18057, i32* %stack_var_-80, align 4
  store i32 %v2_18046, i32* %stack_var_-84, align 4
  %v4_18061 = call i32 @function_35fe0(i32 %v2_18046, i32 %v3_18057, i32 %v3_18050, i32 %v3_18049)
  br label %dec_label_pc_18069

dec_label_pc_18069:                               ; preds = %dec_label_pc_18031, %dec_label_pc_18006
  %v1_1806c.in = phi i32* [ %stack_var_-88, %dec_label_pc_18031 ], [ %stack_var_-80, %dec_label_pc_18006 ]
  store i32 %v2_17ff3, i32* @eax, align 4
  store i32 %v2_17ff3, i32* %v1_1806c.in, align 4
  %v0_1806f = call i32 @function_3612c()
  %v1_18074 = inttoptr i32 %v0_1806f to i32*
  %v2_18074 = load i32, i32* %v1_18074, align 4
  store i32 %v2_18074, i32* @ebx, align 4
  %v2_18076 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18076, i32* @eax, align 4
  %v1_1807c = load i32, i32* @esp, align 4
  %v2_1807c = add i32 %v1_1807c, 4
  %v3_1807c = inttoptr i32 %v2_1807c to i32*
  store i32 %arg2, i32* %v3_1807c, align 4
  %v1_18080 = load i32, i32* @esp, align 4
  %v2_18080 = inttoptr i32 %v1_18080 to i32*
  store i32 %v2_18076, i32* %v2_18080, align 4
  %v0_18083 = load i32, i32* %stack_var_-84, align 4
  %v1_18083 = load i32, i32* %stack_var_-80, align 4
  %v2_18083 = call i32 @function_2fed0(i32 %v0_18083, i32 %v1_18083)
  %v0_18088 = load i32, i32* @esp, align 4
  %v3_1808e = inttoptr i32 %v0_18088 to i32*
  store i32 %v2_17fec, i32* %v3_1808e, align 4
  store i32 %v2_18076, i32* @eax, align 4
  %v1_18095 = load i32, i32* @esp, align 4
  %v2_18095 = inttoptr i32 %v1_18095 to i32*
  store i32 %v2_18076, i32* %v2_18095, align 4
  %v0_18098 = call i32 @function_360cb()
  %v2_180a5 = mul i32 %v0_18098, 12
  %v1_180a8 = load i32, i32* @ebx, align 4
  %v2_180a8 = add i32 %v1_180a8, %v2_180a5
  %v1_180aa = load i32, i32* @esp, align 4
  %v2_180aa = add i32 %v1_180aa, 4
  %v3_180aa = inttoptr i32 %v2_180aa to i32*
  store i32 %v2_180a8, i32* %v3_180aa, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_180b1 = load i32, i32* @esp, align 4
  %v2_180b1 = inttoptr i32 %v1_180b1 to i32*
  store i32 %arg2, i32* %v2_180b1, align 4
  %v0_180b4 = call i32 @function_3606e()
  %v3_180bc.pre = load i32, i32* %stack_var_-56, align 4
  br label %dec_label_pc_180b9

dec_label_pc_180b9:                               ; preds = %dec_label_pc_18069, %dec_label_pc_17fc2
  %v3_180bc = phi i32 [ %v3_180bc.pre, %dec_label_pc_18069 ], [ %arg3, %dec_label_pc_17fc2 ]
  store i32 %v3_180bc, i32* %arg1, align 4
  store i32 %tmp22, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_180d0

bb:                                               ; preds = %dec_label_pc_180b9
  %v1_180ce = call i32 @function_180d5()
  br label %dec_label_pc_180d0

dec_label_pc_180d0:                               ; preds = %bb, %dec_label_pc_180b9
  %v2_180ce = phi i32 [ %v1_180ce, %bb ], [ %tmp22, %dec_label_pc_180b9 ]
  ret i32 %v2_180ce

; uselistorder directives
  uselistorder i32 %v2_18046, { 1, 0, 2 }
  uselistorder i32 %v2_18031, { 1, 0, 2 }
  uselistorder i32 %v2_17fec, { 0, 2, 1 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2, 3, 4 }
  uselistorder i32 (i32, i32)* @function_2fed0, { 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 3, 0, 4 }
}

define i32 @function_180d5() local_unnamed_addr {
dec_label_pc_180d5:
  %v0_180d5 = load i32, i32* @ebp, align 4
  %v1_180d5 = add i32 %v0_180d5, -4
  %v2_180d5 = inttoptr i32 %v1_180d5 to i32*
  %v3_180d5 = load i32, i32* %v2_180d5, align 4
  store i32 %v3_180d5, i32* @ebx, align 4
  %v0_180d9 = load i32, i32* @eax, align 4
  ret i32 %v0_180d9
}

define i32 @_ZSt4swapIhSaIhEEvRSt6vectorIT_T0_ES5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_180dc:
  store i32 %arg1, i32* @eax, align 4
  %v2_18106 = call i32 @function_36274(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18117

bb:                                               ; preds = %dec_label_pc_180dc
  %v1_18115 = call i32 @function_1811c()
  br label %dec_label_pc_18117

dec_label_pc_18117:                               ; preds = %bb, %dec_label_pc_180dc
  %v2_18115 = phi i32 [ %v1_18115, %bb ], [ 0, %dec_label_pc_180dc ]
  ret i32 %v2_18115

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1811c() local_unnamed_addr {
dec_label_pc_1811c:
  %v0_1811d = load i32, i32* @eax, align 4
  ret i32 %v0_1811d
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1811e:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp22 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_18141 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18141, i32* @eax, align 4
  %v2_1814e = call i32 @function_3002c(i32 %v2_18141, i32 %arg2)
  store i32 1, i32* %stack_var_-40, align 4
  %v2_1815d = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1815d, i32* %eax.global-to-local, align 4
  %v2_18160 = ptrtoint i32* %stack_var_-40 to i32
  %v2_18167 = ptrtoint i32* %stack_var_-56 to i32
  %v3_18171 = call i32 @function_316f0(i32 %v2_1815d, i32 %v2_18167, i32 %v2_18160)
  store i32 %v2_1815d, i32* @eax, align 4
  %v2_18186 = call i32 @function_360e8(i32 %v2_1815d, i32 %v2_18141)
  store i32 %v2_18186, i32* %eax.global-to-local, align 4
  %v4_1818b = trunc i32 %v2_18186 to i8
  %v5_1818b = icmp eq i8 %v4_1818b, 0
  br i1 %v5_1818b, label %dec_label_pc_181ea, label %dec_label_pc_1818f

dec_label_pc_1818f:                               ; preds = %dec_label_pc_1811e
  %v2_1818f = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1818f, i32* @eax, align 4
  %v2_1819c = call i32 @function_3002c(i32 %v2_1818f, i32 %arg2)
  store i32 1, i32* %stack_var_-32, align 4
  %v2_181ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_181ab, i32* %eax.global-to-local, align 4
  %v2_181ae = ptrtoint i32* %stack_var_-32 to i32
  %v3_181bf = call i32 @function_316f0(i32 %v2_181ab, i32 %v2_18167, i32 %v2_181ae)
  %v2_181c7 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_181c7, i32* @eax, align 4
  %v3_181ca = load i32, i32* %stack_var_-56, align 4
  %v3_181d1 = load i32, i32* %stack_var_-24, align 4
  %v3_181d8 = load i32, i32* %stack_var_-28, align 4
  %v4_181e2 = call i32 @function_3613c(i32 %v2_181c7, i32 %v3_181d8, i32 %v3_181d1, i32 %v3_181ca)
  store i32 %v4_181e2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_181ea

dec_label_pc_181ea:                               ; preds = %dec_label_pc_1818f, %dec_label_pc_1811e
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_181ed = add i32 %arg2, 4
  %v2_181ed = inttoptr i32 %v1_181ed to i32*
  %v3_181ed = load i32, i32* %v2_181ed, align 4
  %v1_181f0 = add i32 %v3_181ed, -12
  store i32 %v1_181f0, i32* %v2_181ed, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v3_181fc = load i32, i32* %v2_181ed, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_18202 = load i32, i32* @esp, align 4
  %v2_18202 = add i32 %v1_18202, 4
  %v3_18202 = inttoptr i32 %v2_18202 to i32*
  store i32 %v3_181fc, i32* %v3_18202, align 4
  %v0_18206 = load i32, i32* %eax.global-to-local, align 4
  %v1_18206 = load i32, i32* @esp, align 4
  %v2_18206 = inttoptr i32 %v1_18206 to i32*
  store i32 %v0_18206, i32* %v2_18206, align 4
  %v3_18211 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_18211, i32* %arg1, align 4
  store i32 %tmp22, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18225

bb:                                               ; preds = %dec_label_pc_181ea
  %v1_18223 = call i32 @function_1822a()
  store i32 %v1_18223, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_18225

dec_label_pc_18225:                               ; preds = %bb, %dec_label_pc_181ea
  %v2_18223 = phi i32 [ %v1_18223, %bb ], [ %tmp22, %dec_label_pc_181ea ]
  ret i32 %v2_18223

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_316f0, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_3002c, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 3, 0, 5 }
}

define i32 @function_1822a() local_unnamed_addr {
dec_label_pc_1822a:
  %v0_1822b = load i32, i32* @eax, align 4
  ret i32 %v0_1822b
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1822e:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp17 = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_18257 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_18257, i32* @eax, align 4
  store i32 %tmp17, i32* %edx.global-to-local, align 4
  %v2_18264 = call i32 @function_317b8(i32 %v2_18257, i32 %tmp17)
  %v2_18273 = ptrtoint i32* %stack_var_-56 to i32
  %v2_18279 = call i32 @function_36337(i32 %v2_18273, i32 %v2_18257)
  %v1_18284 = add i32 %tmp17, 4
  %v2_18284 = inttoptr i32 %v1_18284 to i32*
  %v3_18284 = load i32, i32* %v2_18284, align 4
  store i32 %v3_18284, i32* %edx.global-to-local, align 4
  %v1_1828a = add i32 %tmp17, 8
  %v2_1828a = inttoptr i32 %v1_1828a to i32*
  %v3_1828a = load i32, i32* %v2_1828a, align 4
  %v12_1828d = icmp eq i32 %v3_18284, %v3_1828a
  store i1 %v12_1828d, i1* @zf, align 1
  br i1 %v12_1828d, label %dec_label_pc_182c3, label %dec_label_pc_18291

dec_label_pc_18291:                               ; preds = %dec_label_pc_1822e
  %v2_18291 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_18291, i32* @eax, align 4
  store i32 %tmp17, i32* %edx.global-to-local, align 4
  %v2_1829e = call i32 @function_3013c(i32 %v2_18291, i32 %tmp17)
  %v2_182b3 = call i32 @function_36461(i32 %v2_18273, i32 %v2_18291)
  %v4_182b8 = trunc i32 %v2_182b3 to i8
  %v5_182b8 = icmp eq i8 %v4_182b8, 0
  br i1 %v5_182b8, label %dec_label_pc_182c3, label %dec_label_pc_182c8

dec_label_pc_182c3:                               ; preds = %dec_label_pc_18291, %dec_label_pc_1822e
  br label %dec_label_pc_182c8

dec_label_pc_182c8:                               ; preds = %dec_label_pc_18291, %dec_label_pc_182c3
  %storemerge = phi i1 [ true, %dec_label_pc_182c3 ], [ false, %dec_label_pc_18291 ]
  store i1 false, i1* @cf, align 1
  br i1 %storemerge, label %dec_label_pc_182f9, label %dec_label_pc_182cc

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182c8
  %v3_182cf = load i32, i32* %v2_18284, align 4
  store i32 %v3_182cf, i32* %edx.global-to-local, align 4
  store i32 %tmp17, i32* @eax, align 4
  %v1_182d8 = load i32, i32* @esp, align 4
  %v2_182d8 = add i32 %v1_182d8, 8
  %v3_182d8 = inttoptr i32 %v2_182d8 to i32*
  store i32 %arg4, i32* %v3_182d8, align 4
  %v0_182dc = load i32, i32* %edx.global-to-local, align 4
  %v1_182dc = load i32, i32* @esp, align 4
  %v2_182dc = add i32 %v1_182dc, 4
  %v3_182dc = inttoptr i32 %v2_182dc to i32*
  store i32 %v0_182dc, i32* %v3_182dc, align 4
  %v0_182e0 = load i32, i32* @eax, align 4
  %v1_182e0 = load i32, i32* @esp, align 4
  %v2_182e0 = inttoptr i32 %v1_182e0 to i32*
  store i32 %v0_182e0, i32* %v2_182e0, align 4
  %v0_182e3 = call i32 @function_35a84()
  %v3_182eb = load i32, i32* %v2_18284, align 4
  %v1_182ee = add i32 %v3_182eb, 12
  store i32 %v1_182ee, i32* %edx.global-to-local, align 4
  store i32 %v1_182ee, i32* %v2_18284, align 4
  br label %dec_label_pc_18312

dec_label_pc_182f9:                               ; preds = %dec_label_pc_182c8
  %v1_182fc = load i32, i32* @esp, align 4
  %v2_182fc = add i32 %v1_182fc, 8
  %v3_182fc = inttoptr i32 %v2_182fc to i32*
  store i32 %arg4, i32* %v3_182fc, align 4
  %v3_18300 = load i32, i32* %stack_var_-56, align 4
  %v1_18303 = load i32, i32* @esp, align 4
  %v2_18303 = add i32 %v1_18303, 4
  %v3_18303 = inttoptr i32 %v2_18303 to i32*
  store i32 %v3_18300, i32* %v3_18303, align 4
  store i32 %tmp17, i32* @eax, align 4
  %v1_1830a = load i32, i32* @esp, align 4
  %v2_1830a = inttoptr i32 %v1_1830a to i32*
  store i32 %tmp17, i32* %v2_1830a, align 4
  %v0_1830d = call i32 @function_35b06()
  br label %dec_label_pc_18312

dec_label_pc_18312:                               ; preds = %dec_label_pc_182f9, %dec_label_pc_182cc
  %v2_18315 = load i32, i32* %arg2, align 4
  store i32 %v2_18279, i32* %edx.global-to-local, align 4
  %v2_18320 = mul i32 %v2_18279, 12
  %v2_18323 = add i32 %v2_18315, %v2_18320
  store i32 %v2_18323, i32* %stack_var_-24, align 4
  %v2_18328 = ptrtoint i32* %stack_var_-24 to i32
  %v1_1832b = load i32, i32* @esp, align 4
  %v2_1832b = add i32 %v1_1832b, 4
  %v3_1832b = inttoptr i32 %v2_1832b to i32*
  store i32 %v2_18328, i32* %v3_1832b, align 4
  store i32 %arg1, i32* @eax, align 4
  %v1_18332 = load i32, i32* @esp, align 4
  %v2_18332 = inttoptr i32 %v1_18332 to i32*
  store i32 %arg1, i32* %v2_18332, align 4
  %v0_18335 = load i32, i32* %stack_var_-24, align 4
  %v1_18335 = call i32 @function_361be(i32 %v0_18335)
  store i32 %arg1, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_18349

bb:                                               ; preds = %dec_label_pc_18312
  %v1_18347 = call i32 @function_1834e()
  br label %dec_label_pc_18349

dec_label_pc_18349:                               ; preds = %bb, %dec_label_pc_18312
  %v2_18347 = phi i32 [ %v1_18347, %bb ], [ %arg1, %dec_label_pc_18312 ]
  ret i32 %v2_18347

; uselistorder directives
  uselistorder i1 %v12_1828d, { 1, 0 }
  uselistorder i32 %tmp17, { 4, 3, 2, 1, 0, 6, 5, 8, 7 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_182c8, { 1, 0 }
}

define i32 @function_1834e() local_unnamed_addr {
dec_label_pc_1834e:
  %v0_1834f = load i32, i32* @eax, align 4
  ret i32 %v0_1834f
}

define i32 @_Z4HashIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEE7uint256T_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18352:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  %v2_18376 = ptrtoint i32* %stack_var_-48 to i32
  %v1_1837c = call i32 @function_27e32(i32 %v2_18376)
  %v4_18384 = ptrtoint i32* %stack_var_-68 to i32
  %v2_18388 = ptrtoint i32* %stack_var_-72 to i32
  %v2_1838e = call i32 @function_2f5de(i32 %v2_18388, i32 %v4_18384)
  store i32 %v4_18384, i32* @eax, align 4
  %v2_183a2 = call i32 @function_34eed(i32 %v4_18384, i32 %v2_18388)
  %v4_183a7 = trunc i32 %v2_183a2 to i8
  %v5_183a7 = icmp eq i8 %v4_183a7, 0
  br i1 %v5_183a7, label %dec_label_pc_183b2, label %dec_label_pc_183cb

dec_label_pc_183b2:                               ; preds = %dec_label_pc_18352
  store i32 0, i32* %stack_var_-52, align 4
  %v4_183bc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v4_18384, i32* @eax, align 4
  %v2_183c6 = call i32 @function_2f636(i32 %v4_18384, i32 %v4_183bc)
  br label %dec_label_pc_183cb

dec_label_pc_183cb:                               ; preds = %dec_label_pc_18352, %dec_label_pc_183b2
  %storemerge = phi i32 [ %v2_183c6, %dec_label_pc_183b2 ], [ ptrtoint (i32* @global_var_38c00 to i32), %dec_label_pc_18352 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_38c00 to i32), { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_183cb, { 1, 0 }
}

define i32 @function_18416() local_unnamed_addr {
dec_label_pc_18416:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_18416 = load i32, i32* %ebx.global-to-local, align 4
  %v1_18416 = add i32 %v0_18416, 1566266564
  %v2_18416 = inttoptr i32 %v1_18416 to i32*
  %v3_18416 = load i32, i32* %v2_18416, align 4
  %v4_18416 = add i32 %v3_18416, 1
  store i32 %v4_18416, i32* %v2_18416, align 4
  %v0_1841c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1841c
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18420:
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @eax, align 4
  %v1_18445 = call i32 @function_366a8(i32 %arg2)
  store i32 %v1_18445, i32* @ebx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_18452 = call i32 @function_2fa7c(i32 %arg2)
  store i32 %v1_18452, i32* @eax, align 4
  %v0_1845a = load i32, i32* @ebx, align 4
  %v3_18465 = call i32 @function_366d6(i32 %tmp107, i32 %v1_18452, i32 %v0_1845a)
  store i32 %tmp107, i32* @eax, align 4
  %v1_18470 = call i32 @function_352d0(i32 %tmp107)
  %v2_1847a = load i32, i32* %arg1, align 4
  %v4_184bb = call i32 @function_36773(i32 %tmp97, i32 %tmp99, i32 %v2_1847a, i32 %v1_18470)
  %v2_184c5 = add i32 %tmp107, 4
  %v3_184c5 = inttoptr i32 %v2_184c5 to i32*
  store i32 %v4_184bb, i32* %v3_184c5, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_184d4

bb:                                               ; preds = %dec_label_pc_18420
  %v1_184d2 = call i32 @function_184f2()
  store i32 %v1_184d2, i32* @eax, align 4
  br label %dec_label_pc_184d4

dec_label_pc_184d4:                               ; preds = %bb, %dec_label_pc_18420
  %v0_184d4 = call i32 @function_184ed()
  ret i32 %v0_184d4

; uselistorder directives
  uselistorder i32 %tmp107, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_184d7() local_unnamed_addr {
dec_label_pc_184d7:
  %eax.global-to-local = alloca i32, align 4
  %v0_184d7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_184d7
}

define i32 @function_184ed() local_unnamed_addr {
dec_label_pc_184ed:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_184f2() local_unnamed_addr {
dec_label_pc_184f2:
  %v0_184f8 = load i32, i32* @eax, align 4
  ret i32 %v0_184f8
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_184fa:
  %v2_1851a = load i32, i32* %arg1, align 4
  %v3_1851f = mul i32 %arg2, 52
  %v2_18522 = add i32 %v2_1851a, %v3_1851f
  store i32 %v2_18522, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18530

bb:                                               ; preds = %dec_label_pc_184fa
  %tmp10 = ptrtoint i32* %arg1 to i32
  %v4_1852e = call i32 @function_18535(i32 %arg2, i32 %tmp10)
  br label %dec_label_pc_18530

dec_label_pc_18530:                               ; preds = %bb, %dec_label_pc_184fa
  %v5_1852e = phi i32 [ %v4_1852e, %bb ], [ %v2_18522, %dec_label_pc_184fa ]
  ret i32 %v5_1852e

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18535(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18535:
  %v0_18536 = load i32, i32* @eax, align 4
  ret i32 %v0_18536
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6resizeEjS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18538:
  %stack_var_-20 = alloca i32, align 4
  %tmp13 = ptrtoint i32* %arg1 to i32
  %v1_18562 = call i32 @function_2fd20(i32 %tmp13)
  %v10_18567 = icmp ult i32 %v1_18562, %arg2
  %v5_1856d = icmp eq i1 %v10_18567, false
  %v1_185bd = call i32 @function_2fd20(i32 %tmp13)
  br i1 %v5_1856d, label %dec_label_pc_185b7, label %dec_label_pc_18571

dec_label_pc_18571:                               ; preds = %dec_label_pc_18538
  %v2_18581 = sub i32 %arg2, %v1_185bd
  store i32 %v2_18581, i32* @ebx, align 4
  %v2_18583 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %tmp13, i32* @edx, align 4
  %v2_18590 = call i32 @function_35942(i32 %v2_18583, i32 %tmp13)
  %v0_1859f = load i32, i32* @ebx, align 4
  %v3_185a3 = load i32, i32* %stack_var_-20, align 4
  store i32 %tmp13, i32* @eax, align 4
  %v4_185b0 = call i32 @function_368e0(i32 %tmp13, i32 %v3_185a3, i32 %v0_1859f, i32 %arg3)
  br label %dec_label_pc_185ef

dec_label_pc_185b7:                               ; preds = %dec_label_pc_18538
  %tmp18 = icmp ule i32 %v1_185bd, %arg2
  %v3_185c5 = icmp ne i1 %tmp18, true
  %v5_185c8 = icmp eq i1 %v3_185c5, false
  br i1 %v5_185c8, label %dec_label_pc_185ef, label %dec_label_pc_185cc

dec_label_pc_185cc:                               ; preds = %dec_label_pc_185b7
  %v2_185cf = load i32, i32* %arg1, align 4
  store i32 %v2_185cf, i32* @ecx, align 4
  %v2_185db = mul i32 %arg2, 20
  %v2_185de = add i32 %v2_185cf, %v2_185db
  store i32 %tmp13, i32* @eax, align 4
  %v2_185ea = call i32 @function_35628(i32 %tmp13, i32 %v2_185de)
  br label %dec_label_pc_185ef

dec_label_pc_185ef:                               ; preds = %dec_label_pc_185cc, %dec_label_pc_185b7, %dec_label_pc_18571
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_185fb

bb:                                               ; preds = %dec_label_pc_185ef
  %v1_185f9 = call i32 @function_18600()
  br label %dec_label_pc_185fb

dec_label_pc_185fb:                               ; preds = %bb, %dec_label_pc_185ef
  %v2_185f9 = phi i32 [ %v1_185f9, %bb ], [ 0, %dec_label_pc_185ef ]
  ret i32 %v2_185f9

; uselistorder directives
  uselistorder i32 %tmp13, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder i32 (i32)* @function_2fd20, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_18600() local_unnamed_addr {
dec_label_pc_18600:
  %v0_18600 = load i32, i32* @ebp, align 4
  %v1_18600 = add i32 %v0_18600, -4
  %v2_18600 = inttoptr i32 %v1_18600 to i32*
  %v3_18600 = load i32, i32* %v2_18600, align 4
  store i32 %v3_18600, i32* @ebx, align 4
  %v0_18604 = load i32, i32* @eax, align 4
  ret i32 %v0_18604
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18606:
  %v2_18626 = load i32, i32* %arg1, align 4
  store i32 %v2_18626, i32* @ecx, align 4
  %v2_18632 = mul i32 %arg2, 20
  %v2_18635 = add i32 %v2_18626, %v2_18632
  store i32 %v2_18635, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18643

bb:                                               ; preds = %dec_label_pc_18606
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_18641 = call i32 @function_18648(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_18643

dec_label_pc_18643:                               ; preds = %bb, %dec_label_pc_18606
  %v4_18641 = phi i32 [ %v3_18641, %bb ], [ %v2_18635, %dec_label_pc_18606 ]
  ret i32 %v4_18641

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18648(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18648:
  %v0_18649 = load i32, i32* @eax, align 4
  ret i32 %v0_18649
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6resizeEjS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1864a:
  %stack_var_-20 = alloca i32, align 4
  %tmp18 = ptrtoint i32* %arg1 to i32
  store i32 %tmp18, i32* @eax, align 4
  %v1_18674 = call i32 @function_2fca6(i32 %tmp18)
  %v11_18679 = icmp ult i32 %v1_18674, %arg2
  %v5_1867f = icmp eq i1 %v11_18679, false
  store i32 %tmp18, i32* @eax, align 4
  %v1_186cf = call i32 @function_2fca6(i32 %tmp18)
  br i1 %v5_1867f, label %dec_label_pc_186c9, label %dec_label_pc_18683

dec_label_pc_18683:                               ; preds = %dec_label_pc_1864a
  %v2_18693 = sub i32 %arg2, %v1_186cf
  store i32 %v2_18693, i32* @ebx, align 4
  %v2_18695 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18695, i32* @eax, align 4
  %v2_186a2 = call i32 @function_36a4e(i32 %v2_18695, i32 %tmp18)
  %v0_186b1 = load i32, i32* @ebx, align 4
  %v3_186b5 = load i32, i32* %stack_var_-20, align 4
  %v4_186c2 = call i32 @function_36a98(i32 %tmp18, i32 %v3_186b5, i32 %v0_186b1, i32 %arg3)
  br label %dec_label_pc_186fa

dec_label_pc_186c9:                               ; preds = %dec_label_pc_1864a
  %tmp23 = icmp ule i32 %v1_186cf, %arg2
  %v3_186d7 = icmp ne i1 %tmp23, true
  %v5_186da = icmp eq i1 %v3_186d7, false
  br i1 %v5_186da, label %dec_label_pc_186fa, label %dec_label_pc_186de

dec_label_pc_186de:                               ; preds = %dec_label_pc_186c9
  %v2_186e1 = load i32, i32* %arg1, align 4
  %v3_186e6 = mul i32 %arg2, 52
  %v2_186e9 = add i32 %v2_186e1, %v3_186e6
  store i32 %tmp18, i32* @eax, align 4
  %v2_186f5 = call i32 @function_356dc(i32 %tmp18, i32 %v2_186e9)
  br label %dec_label_pc_186fa

dec_label_pc_186fa:                               ; preds = %dec_label_pc_186de, %dec_label_pc_186c9, %dec_label_pc_18683
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18706

bb:                                               ; preds = %dec_label_pc_186fa
  %v1_18704 = call i32 @function_1870b()
  br label %dec_label_pc_18706

dec_label_pc_18706:                               ; preds = %bb, %dec_label_pc_186fa
  %v2_18704 = phi i32 [ %v1_18704, %bb ], [ 0, %dec_label_pc_186fa ]
  ret i32 %v2_18704

; uselistorder directives
  uselistorder i32 %tmp18, { 3, 2, 0, 1, 5, 4, 7, 6 }
  uselistorder i32 (i32)* @function_2fca6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_1870b() local_unnamed_addr {
dec_label_pc_1870b:
  %v0_1870b = load i32, i32* @ebp, align 4
  %v1_1870b = add i32 %v0_1870b, -4
  %v2_1870b = inttoptr i32 %v1_1870b to i32*
  %v3_1870b = load i32, i32* %v2_1870b, align 4
  store i32 %v3_1870b, i32* @ebx, align 4
  %v0_1870f = load i32, i32* @eax, align 4
  ret i32 %v0_1870f
}

define i32 @_ZN11CHashWriterlsI12CTransactionEERS_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18710:
  %v1_18730 = add i32 %arg1, 116
  %v2_18730 = inttoptr i32 %v1_18730 to i32*
  %v3_18730 = load i32, i32* %v2_18730, align 4
  %v1_18736 = add i32 %arg1, 112
  %v2_18736 = inttoptr i32 %v1_18736 to i32*
  %v3_18736 = load i32, i32* %v2_18736, align 4
  store i32 %arg1, i32* @eax, align 4
  %v4_1874e = call i32 @function_36bba(i32 %arg1, i32 %arg2, i32 %v3_18736, i32 %v3_18730)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18762

bb:                                               ; preds = %dec_label_pc_18710
  %v1_18760 = call i32 @function_18767()
  br label %dec_label_pc_18762

dec_label_pc_18762:                               ; preds = %bb, %dec_label_pc_18710
  %v2_18760 = phi i32 [ %v1_18760, %bb ], [ %arg1, %dec_label_pc_18710 ]
  ret i32 %v2_18760

; uselistorder directives
  uselistorder i32 %arg1, { 0, 5, 4, 3, 2, 1 }
}

define i32 @function_18767() local_unnamed_addr {
dec_label_pc_18767:
  %v0_18768 = load i32, i32* @eax, align 4
  ret i32 %v0_18768
}

define i32 @_ZN11CHashWriterlsIiEERS_RKT_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1876a:
  %v1_1878a = add i32 %arg1, 116
  %v2_1878a = inttoptr i32 %v1_1878a to i32*
  %v3_1878a = load i32, i32* %v2_1878a, align 4
  store i32 %v3_1878a, i32* @ecx, align 4
  %v1_18790 = add i32 %arg1, 112
  %v2_18790 = inttoptr i32 %v1_18790 to i32*
  %v3_18790 = load i32, i32* %v2_18790, align 4
  %v2_18796 = load i32, i32* %arg2, align 4
  %v4_187aa = call i32 @function_36c70(i32 %arg1, i32 %v2_18796, i32 %v3_18790, i32 %v3_1878a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_187be

bb:                                               ; preds = %dec_label_pc_1876a
  %v1_187bc = call i32 @function_187c3()
  br label %dec_label_pc_187be

dec_label_pc_187be:                               ; preds = %bb, %dec_label_pc_1876a
  %v2_187bc = phi i32 [ %v1_187bc, %bb ], [ %arg1, %dec_label_pc_1876a ]
  ret i32 %v2_187bc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 4, 3, 2, 1 }
}

define i32 @function_187c3() local_unnamed_addr {
dec_label_pc_187c3:
  %v0_187c4 = load i32, i32* @eax, align 4
  ret i32 %v0_187c4
}

define i32 @_ZN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS0_9null_typeES7_S7_S7_S7_S7_S7_EC1ERKS2_RKS5_RKS6_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_187c6:
  %stack_var_-23 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-19 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %v2_187ef = ptrtoint i32* %stack_var_-45 to i32
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_187f5 = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_18803 = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_18811 = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_1881f = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_1882d = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_1883b = call i32 @function_2177a(i32 %v2_187ef)
  store i32 %v2_187ef, i32* @eax, align 4
  %v1_18849 = call i32 @function_2177a(i32 %v2_187ef)
  %v2_18854 = ptrtoint i32* %stack_var_-17 to i32
  %v2_1885b = ptrtoint i32* %stack_var_-18 to i32
  %v2_18862 = ptrtoint i32* %stack_var_-19 to i32
  %v2_18869 = ptrtoint i32* %stack_var_-20 to i32
  %v2_18870 = ptrtoint i32* %stack_var_-21 to i32
  %v2_18877 = ptrtoint i32* %stack_var_-22 to i32
  %v2_1887e = ptrtoint i32* %stack_var_-23 to i32
  %v11_1889d = call i32 @function_36d22(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_1887e, i32 %v2_18877, i32 %v2_18870, i32 %v2_18869, i32 %v2_18862, i32 %v2_1885b, i32 %v2_18854)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_188ae

bb:                                               ; preds = %dec_label_pc_187c6
  %v1_188ac = call i32 @function_188b3()
  br label %dec_label_pc_188ae

dec_label_pc_188ae:                               ; preds = %bb, %dec_label_pc_187c6
  %v2_188ac = phi i32 [ %v1_188ac, %bb ], [ 0, %dec_label_pc_187c6 ]
  ret i32 %v2_188ac

; uselistorder directives
  uselistorder i32 (i32)* @function_2177a, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_188b3() local_unnamed_addr {
dec_label_pc_188b3:
  %v0_188b4 = load i32, i32* @eax, align 4
  ret i32 %v0_188b4
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE4findERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_188b6:
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  store i32 %arg2, i32* @edx, align 4
  %v2_188dc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_188dc, i32* @eax, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_188ed = call i32 @function_36f0e(i32 %v2_188dc, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  %v2_18902 = call i32 @function_36ffa(i32 %arg1, i32 %v2_188dc)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18916

bb:                                               ; preds = %dec_label_pc_188b6
  %v1_18914 = call i32 @function_1891b()
  br label %dec_label_pc_18916

dec_label_pc_18916:                               ; preds = %bb, %dec_label_pc_188b6
  %v2_18914 = phi i32 [ %v1_18914, %bb ], [ %arg1, %dec_label_pc_188b6 ]
  ret i32 %v2_18914

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1891b() local_unnamed_addr {
dec_label_pc_1891b:
  %v0_1891c = load i32, i32* @eax, align 4
  ret i32 %v0_1891c
}

define i32 @_ZNKSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18920:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v2_1894a = call i32 @function_3709e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18961

bb:                                               ; preds = %dec_label_pc_18920
  %v1_1895f = call i32 @function_18966()
  br label %dec_label_pc_18961

dec_label_pc_18961:                               ; preds = %bb, %dec_label_pc_18920
  %v2_1895f = phi i32 [ %v1_1895f, %bb ], [ %arg1, %dec_label_pc_18920 ]
  ret i32 %v2_1895f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18966() local_unnamed_addr {
dec_label_pc_18966:
  %v0_18967 = load i32, i32* @eax, align 4
  ret i32 %v0_18967
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEneERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1896a:
  %v2_1898a = load i32, i32* %arg1, align 4
  %v1_1898f = inttoptr i32 %arg2 to i32*
  %v2_1898f = load i32, i32* %v1_1898f, align 4
  %v12_18991 = icmp eq i32 %v2_1898a, %v2_1898f
  %v1_18993 = icmp eq i1 %v12_18991, false
  %v2_18993 = zext i1 %v1_18993 to i32
  %v4_18993 = and i32 %v2_1898f, -256
  %v5_18993 = or i32 %v2_18993, %v4_18993
  store i32 %v5_18993, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_189a2

bb:                                               ; preds = %dec_label_pc_1896a
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_189a0 = call i32 @function_189a7(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_189a2

dec_label_pc_189a2:                               ; preds = %bb, %dec_label_pc_1896a
  %v4_189a0 = phi i32 [ %v3_189a0, %bb ], [ %v5_18993, %dec_label_pc_1896a ]
  ret i32 %v4_189a0

; uselistorder directives
  uselistorder i32 %v2_1898f, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_189a7(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189a7:
  %v0_189a8 = load i32, i32* @eax, align 4
  ret i32 %v0_189a8
}

define i32 @_ZN5boost11unique_lockINS_12shared_mutexEEC1ERS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_189aa:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v1_189d2 = add i32 %tmp102, 4
  %v2_189d2 = inttoptr i32 %v1_189d2 to i8*
  store i8 0, i8* %v2_189d2, align 1
  store i32 %tmp102, i32* @eax, align 4
  %v1_189dc = call i32 @function_37172(i32 %tmp102)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_189ed

bb:                                               ; preds = %dec_label_pc_189aa
  %v1_189eb = call i32 @function_189f2()
  br label %dec_label_pc_189ed

dec_label_pc_189ed:                               ; preds = %bb, %dec_label_pc_189aa
  %v2_189eb = phi i32 [ %v1_189eb, %bb ], [ 0, %dec_label_pc_189aa ]
  ret i32 %v2_189eb

; uselistorder directives
  uselistorder i32 %tmp102, { 2, 1, 0 }
}

define i32 @function_189f2() local_unnamed_addr {
dec_label_pc_189f2:
  %v0_189f3 = load i32, i32* @eax, align 4
  ret i32 %v0_189f3
}

define i32 @_ZN5boost11unique_lockINS_12shared_mutexEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_189f4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @eax, align 4
  %v1_18a11 = call i32 @function_3723e(i32 %tmp101)
  %v4_18a16 = trunc i32 %v1_18a11 to i8
  %v5_18a16 = icmp eq i8 %v4_18a16, 0
  br i1 %v5_18a16, label %dec_label_pc_18a27, label %dec_label_pc_18a1a

dec_label_pc_18a1a:                               ; preds = %dec_label_pc_189f4
  br label %dec_label_pc_18a27

dec_label_pc_18a27:                               ; preds = %dec_label_pc_18a1a, %dec_label_pc_189f4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18a33

bb:                                               ; preds = %dec_label_pc_18a27
  %v1_18a31 = call i32 @function_18a38()
  br label %dec_label_pc_18a33

dec_label_pc_18a33:                               ; preds = %bb, %dec_label_pc_18a27
  %v2_18a31 = phi i32 [ %v1_18a31, %bb ], [ 0, %dec_label_pc_18a27 ]
  ret i32 %v2_18a31

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
}

define i32 @function_18a38() local_unnamed_addr {
dec_label_pc_18a38:
  %v0_18a39 = load i32, i32* @eax, align 4
  ret i32 %v0_18a39
}

define i32 @_ZNKSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a3a:
  %v1_18a57 = call i32 @function_372b6(i32 %arg1)
  store i32 %v1_18a57, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18a68

bb:                                               ; preds = %dec_label_pc_18a3a
  %v1_18a66 = call i32 @function_18a6d()
  br label %dec_label_pc_18a68

dec_label_pc_18a68:                               ; preds = %bb, %dec_label_pc_18a3a
  %v2_18a66 = phi i32 [ %v1_18a66, %bb ], [ %v1_18a57, %dec_label_pc_18a3a ]
  ret i32 %v2_18a66
}

define i32 @function_18a6d() local_unnamed_addr {
dec_label_pc_18a6d:
  %v0_18a6e = load i32, i32* @eax, align 4
  ret i32 %v0_18a6e
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE11lower_boundERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18a70:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @edx, align 4
  %v2_18a96 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18a96, i32* @eax, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v2_18aa7 = call i32 @function_3731c(i32 %v2_18a96, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_18abc = call i32 @function_371b4(i32 %arg1, i32 %v2_18a96)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ad0

bb:                                               ; preds = %dec_label_pc_18a70
  %v1_18ace = call i32 @function_18ad5()
  br label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %bb, %dec_label_pc_18a70
  %v2_18ace = phi i32 [ %v1_18ace, %bb ], [ %arg1, %dec_label_pc_18a70 ]
  ret i32 %v2_18ace

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18ad5() local_unnamed_addr {
dec_label_pc_18ad5:
  %v0_18ad6 = load i32, i32* @eax, align 4
  ret i32 %v0_18ad6
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEeqERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18ada:
  %v2_18afa = load i32, i32* %arg1, align 4
  %v1_18aff = inttoptr i32 %arg2 to i32*
  %v2_18aff = load i32, i32* %v1_18aff, align 4
  %v12_18b01 = icmp eq i32 %v2_18afa, %v2_18aff
  %v1_18b03 = zext i1 %v12_18b01 to i32
  %v3_18b03 = and i32 %v2_18aff, -256
  %v4_18b03 = or i32 %v1_18b03, %v3_18b03
  store i32 %v4_18b03, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18b12

bb:                                               ; preds = %dec_label_pc_18ada
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_18b10 = call i32 @function_18b17(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_18b12

dec_label_pc_18b12:                               ; preds = %bb, %dec_label_pc_18ada
  %v4_18b10 = phi i32 [ %v3_18b10, %bb ], [ %v4_18b03, %dec_label_pc_18ada ]
  ret i32 %v4_18b10

; uselistorder directives
  uselistorder i32 %v2_18aff, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18b17(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18b17:
  %v0_18b18 = load i32, i32* @eax, align 4
  ret i32 %v0_18b18
}

define i32 @_ZNKSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18b1a:
  store i32 %arg1, i32* @eax, align 4
  %v2_18b44 = call i32 @function_37442(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18b5b

bb:                                               ; preds = %dec_label_pc_18b1a
  %v1_18b59 = call i32 @function_18b60()
  br label %dec_label_pc_18b5b

dec_label_pc_18b5b:                               ; preds = %bb, %dec_label_pc_18b1a
  %v2_18b59 = phi i32 [ %v1_18b59, %bb ], [ %arg1, %dec_label_pc_18b1a ]
  ret i32 %v2_18b59

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18b60() local_unnamed_addr {
dec_label_pc_18b60:
  %v0_18b61 = load i32, i32* @eax, align 4
  ret i32 %v0_18b61
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_18b64:
  %v2_18b7e = load i32, i32* %arg1, align 4
  %v1_18b80 = add i32 %v2_18b7e, 16
  store i32 %v1_18b80, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18b8f

bb:                                               ; preds = %dec_label_pc_18b64
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_18b8d = call i32 @function_18b94(i32 %tmp100)
  br label %dec_label_pc_18b8f

dec_label_pc_18b8f:                               ; preds = %bb, %dec_label_pc_18b64
  %v3_18b8d = phi i32 [ %v2_18b8d, %bb ], [ %v1_18b80, %dec_label_pc_18b64 ]
  ret i32 %v3_18b8d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_18b94(i32 %arg1) local_unnamed_addr {
dec_label_pc_18b94:
  %v0_18b95 = load i32, i32* @eax, align 4
  ret i32 %v0_18b95
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE5eraseERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18b96:
  store i32 %arg1, i32* @eax, align 4
  %v2_18bc0 = call i32 @function_37508(i32 %arg1, i32 %arg2)
  store i32 %v2_18bc0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18bd1

bb:                                               ; preds = %dec_label_pc_18b96
  %v1_18bcf = call i32 @function_18bd6()
  br label %dec_label_pc_18bd1

dec_label_pc_18bd1:                               ; preds = %bb, %dec_label_pc_18b96
  %v2_18bcf = phi i32 [ %v1_18bcf, %bb ], [ %v2_18bc0, %dec_label_pc_18b96 ]
  ret i32 %v2_18bcf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18bd6() local_unnamed_addr {
dec_label_pc_18bd6:
  %v0_18bd7 = load i32, i32* @eax, align 4
  ret i32 %v0_18bd7
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EE6insertERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18bd8:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_18bfe = ptrtoint i32* %stack_var_-28 to i32
  %v3_18c0f = call i32 @__stack_chk_fail.1473(i32 %v2_18bfe, i32 %arg2, i32 %arg3)
  %v2_18c1e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18c1e, i32* @eax, align 4
  %v2_18c24 = call i32 @function_3731c(i32 %v2_18c1e, i32 %v2_18bfe)
  %v16_18c2c = ptrtoint i32* %stack_var_-24 to i32
  %v3_18c40 = call i32 @function_377d6(i32 %arg1, i32 %v2_18c1e, i32 %v16_18c2c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18c54

bb:                                               ; preds = %dec_label_pc_18bd8
  %v1_18c52 = call i32 @function_18c59()
  br label %dec_label_pc_18c54

dec_label_pc_18c54:                               ; preds = %bb, %dec_label_pc_18bd8
  %v2_18c52 = phi i32 [ %v1_18c52, %bb ], [ %arg1, %dec_label_pc_18bd8 ]
  ret i32 %v2_18c52

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_3731c, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18c59() local_unnamed_addr {
dec_label_pc_18c59:
  %v0_18c5a = load i32, i32* @eax, align 4
  ret i32 %v0_18c5a
}

define i32 @_ZNSt3setIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EESt4lessIS9_ESaIS9_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c5e:
  %v1_18c7b = call i32 @__stack_chk_fail.1480(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18c8c

bb:                                               ; preds = %dec_label_pc_18c5e
  %v1_18c8a = call i32 @function_18c91()
  br label %dec_label_pc_18c8c

dec_label_pc_18c8c:                               ; preds = %bb, %dec_label_pc_18c5e
  %v2_18c8a = phi i32 [ %v1_18c8a, %bb ], [ 0, %dec_label_pc_18c5e ]
  ret i32 %v2_18c8a
}

define i32 @function_18c91() local_unnamed_addr {
dec_label_pc_18c91:
  %v0_18c92 = load i32, i32* @eax, align 4
  ret i32 %v0_18c92
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE13_Rb_tree_implISD_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c94:
  store i32 %arg1, i32* @eax, align 4
  %v1_18cb1 = call i32 @function_37914(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18cc2

bb:                                               ; preds = %dec_label_pc_18c94
  %v1_18cc0 = call i32 @function_18cc7()
  br label %dec_label_pc_18cc2

dec_label_pc_18cc2:                               ; preds = %bb, %dec_label_pc_18c94
  %v2_18cc0 = phi i32 [ %v1_18cc0, %bb ], [ 0, %dec_label_pc_18c94 ]
  ret i32 %v2_18cc0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18cc7() local_unnamed_addr {
dec_label_pc_18cc7:
  %v0_18cc8 = load i32, i32* @eax, align 4
  ret i32 %v0_18cc8
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18cca:
  %v1_18ce8 = call i32 @function_379fe(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v2_18cf7 = call i32 @function_37980(i32 %arg1, i32 %v1_18ce8)
  %v1_18d02 = call i32 @function_3195e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18d13

bb:                                               ; preds = %dec_label_pc_18cca
  %v1_18d11 = call i32 @function_18d31()
  store i32 %v1_18d11, i32* @eax, align 4
  br label %dec_label_pc_18d13

dec_label_pc_18d13:                               ; preds = %bb, %dec_label_pc_18cca
  %v0_18d13 = call i32 @function_18d2c()
  ret i32 %v0_18d13

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_18d16() local_unnamed_addr {
dec_label_pc_18d16:
  %eax.global-to-local = alloca i32, align 4
  %v0_18d16 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18d16
}

define i32 @function_18d2c() local_unnamed_addr {
dec_label_pc_18d2c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18d31() local_unnamed_addr {
dec_label_pc_18d31:
  %v0_18d36 = load i32, i32* @eax, align 4
  ret i32 %v0_18d36
}

define i32 @_ZNSt6vectorIhSaIhEE4backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d38:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 1, i32* %stack_var_-24, align 4
  %v2_18d56 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_18d56, i32* @eax, align 4
  %v2_18d63 = call i32 @function_2f61a(i32 %v2_18d56, i32 %arg1)
  %v0_18d68 = load i32, i32* @esp, align 4
  %v5_18d68 = icmp ult i32 %v0_18d68, 4
  store i1 %v5_18d68, i1* @cf, align 1
  %v2_18d6b = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_18d6b, i32* @eax, align 4
  %v2_18d6e = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_18d56, i32* @edx, align 4
  %v3_18d7f = call i32 @function_37a9c(i32 %v2_18d6b, i32 %v2_18d56, i32 %v2_18d6e)
  store i32 %v2_18d6b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18d9e

bb:                                               ; preds = %dec_label_pc_18d38
  %v2_18d9c = call i32 @function_18da3(i32 %v2_18d6b)
  br label %dec_label_pc_18d9e

dec_label_pc_18d9e:                               ; preds = %bb, %dec_label_pc_18d38
  %v3_18d9c = phi i32 [ %v2_18d9c, %bb ], [ %v2_18d6b, %dec_label_pc_18d38 ]
  ret i32 %v3_18d9c
}

define i32 @function_18da3(i32 %arg1) local_unnamed_addr {
dec_label_pc_18da3:
  %v0_18da4 = load i32, i32* @eax, align 4
  ret i32 %v0_18da4
}

define i32 @_ZNSt6vectorIhSaIhEE8pop_backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18da6:
  %v1_18dc0 = add i32 %arg1, 4
  %v2_18dc0 = inttoptr i32 %v1_18dc0 to i32*
  %v3_18dc0 = load i32, i32* %v2_18dc0, align 4
  %v1_18dc3 = add i32 %v3_18dc0, -1
  store i32 %v1_18dc3, i32* %v2_18dc0, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_18ddc = call i32 @function_37b68(i32 %arg1, i32 %v1_18dc3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ded

bb:                                               ; preds = %dec_label_pc_18da6
  %v1_18deb = call i32 @function_18df2()
  br label %dec_label_pc_18ded

dec_label_pc_18ded:                               ; preds = %bb, %dec_label_pc_18da6
  %v2_18deb = phi i32 [ %v1_18deb, %bb ], [ 0, %dec_label_pc_18da6 ]
  ret i32 %v2_18deb

; uselistorder directives
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_18df2() local_unnamed_addr {
dec_label_pc_18df2:
  %v0_18df3 = load i32, i32* @eax, align 4
  ret i32 %v0_18df3
}

define i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18df4:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v1_18e11 = call i32 @function_37be6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18e22

bb:                                               ; preds = %dec_label_pc_18df4
  %v1_18e20 = call i32 @function_18e27()
  br label %dec_label_pc_18e22

dec_label_pc_18e22:                               ; preds = %bb, %dec_label_pc_18df4
  %v2_18e20 = phi i32 [ %v1_18e20, %bb ], [ 0, %dec_label_pc_18df4 ]
  ret i32 %v2_18e20

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18e27() local_unnamed_addr {
dec_label_pc_18e27:
  %v0_18e28 = load i32, i32* @eax, align 4
  ret i32 %v0_18e28
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE13_Rb_tree_implIS8_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e2a:
  store i32 %arg1, i32* @eax, align 4
  %v1_18e47 = call i32 @function_37c52(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18e58

bb:                                               ; preds = %dec_label_pc_18e2a
  %v1_18e56 = call i32 @function_18e5d()
  br label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %bb, %dec_label_pc_18e2a
  %v2_18e56 = phi i32 [ %v1_18e56, %bb ], [ 0, %dec_label_pc_18e2a ]
  ret i32 %v2_18e56

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18e5d() local_unnamed_addr {
dec_label_pc_18e5d:
  %v0_18e5e = load i32, i32* @eax, align 4
  ret i32 %v0_18e5e
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e60:
  store i32 %arg1, i32* @eax, align 4
  %v1_18e7e = call i32 @function_37d3c(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  %v2_18e8d = call i32 @function_37cbe(i32 %arg1, i32 %v1_18e7e)
  store i32 %arg1, i32* @eax, align 4
  %v1_18e98 = call i32 @function_31c8a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ea9

bb:                                               ; preds = %dec_label_pc_18e60
  %v1_18ea7 = call i32 @function_18ec7()
  store i32 %v1_18ea7, i32* @eax, align 4
  br label %dec_label_pc_18ea9

dec_label_pc_18ea9:                               ; preds = %bb, %dec_label_pc_18e60
  %v0_18ea9 = call i32 @function_18ec2()
  ret i32 %v0_18ea9

; uselistorder directives
  uselistorder i32 %arg1, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_18eac() local_unnamed_addr {
dec_label_pc_18eac:
  %eax.global-to-local = alloca i32, align 4
  %v0_18eac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_18eac
}

define i32 @function_18ec2() local_unnamed_addr {
dec_label_pc_18ec2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_18ec7() local_unnamed_addr {
dec_label_pc_18ec7:
  %v0_18ecc = load i32, i32* @eax, align 4
  ret i32 %v0_18ecc
}

define i32 @_ZNKSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_18ece:
  store i32 %arg1, i32* @eax, align 4
  %v1_18eeb = call i32 @function_37dda(i32 %arg1)
  store i32 %v1_18eeb, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18efc

bb:                                               ; preds = %dec_label_pc_18ece
  %v1_18efa = call i32 @function_18f01()
  br label %dec_label_pc_18efc

dec_label_pc_18efc:                               ; preds = %bb, %dec_label_pc_18ece
  %v2_18efa = phi i32 [ %v1_18efa, %bb ], [ %v1_18eeb, %dec_label_pc_18ece ]
  ret i32 %v2_18efa

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_18f01() local_unnamed_addr {
dec_label_pc_18f01:
  %v0_18f02 = load i32, i32* @eax, align 4
  ret i32 %v0_18f02
}

define i32 @_ZSt9make_pairI10txnouttype7CScriptESt4pairIT_T0_ES3_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18f03:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i1 false, i1* @cf, align 1
  %v2_18f2d = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* @eax, align 4
  %v3_18f3a = call i32 @function_37e45(i32 %arg1, i32 %v2_18f2d, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18f4e

bb:                                               ; preds = %dec_label_pc_18f03
  %v1_18f4c = call i32 @function_18f53()
  br label %dec_label_pc_18f4e

dec_label_pc_18f4e:                               ; preds = %bb, %dec_label_pc_18f03
  %v2_18f4c = phi i32 [ %v1_18f4c, %bb ], [ %arg1, %dec_label_pc_18f03 ]
  ret i32 %v2_18f4c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18f53() local_unnamed_addr {
dec_label_pc_18f53:
  %v0_18f54 = load i32, i32* @eax, align 4
  ret i32 %v0_18f54
}

define i32 @_ZNSt4pairIK10txnouttype7CScriptEC1IS0_S2_EERKS_IT_T0_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18f58:
  %tmp7 = ptrtoint i32* %arg1 to i32
  %v1_18f78 = inttoptr i32 %arg2 to i32*
  %v2_18f78 = load i32, i32* %v1_18f78, align 4
  store i32 %v2_18f78, i32* %arg1, align 4
  %v1_18f82 = add i32 %arg2, 4
  %v1_18f88 = add i32 %tmp7, 4
  %v2_18f92 = call i32 @function_2b610(i32 %v1_18f88, i32 %v1_18f82)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18fa3

bb:                                               ; preds = %dec_label_pc_18f58
  %v1_18fa1 = call i32 @function_18fa8()
  br label %dec_label_pc_18fa3

dec_label_pc_18fa3:                               ; preds = %bb, %dec_label_pc_18f58
  %v2_18fa1 = phi i32 [ %v1_18fa1, %bb ], [ 0, %dec_label_pc_18f58 ]
  ret i32 %v2_18fa1

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_18fa8() local_unnamed_addr {
dec_label_pc_18fa8:
  %v0_18fa9 = load i32, i32* @eax, align 4
  ret i32 %v0_18fa9
}

define i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE6insertERKS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18faa:
  store i32 %arg1, i32* @eax, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v3_18fe1 = call i32 @function_37f42(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_18ff8

bb:                                               ; preds = %dec_label_pc_18faa
  %v1_18ff6 = call i32 @function_18ffd()
  br label %dec_label_pc_18ff8

dec_label_pc_18ff8:                               ; preds = %bb, %dec_label_pc_18faa
  %v2_18ff6 = phi i32 [ %v1_18ff6, %bb ], [ %arg1, %dec_label_pc_18faa ]
  ret i32 %v2_18ff6

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_18ffd() local_unnamed_addr {
dec_label_pc_18ffd:
  %v0_18ffe = load i32, i32* @eax, align 4
  ret i32 %v0_18ffe
}

define i32 @_ZN5boost15foreach_detail_7containISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS0_8auto_anyIPT_EERSD_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19001:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_1902a = call i32 @function_3819d(i32 %arg2)
  store i32 %v1_1902a, i32* %stack_var_-20, align 4
  %v2_19032 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1903f = call i32 @unknown_381f5(i32 %arg1, i32 %v2_19032)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19053

bb:                                               ; preds = %dec_label_pc_19001
  %v1_19051 = call i32 @function_19058()
  br label %dec_label_pc_19053

dec_label_pc_19053:                               ; preds = %bb, %dec_label_pc_19001
  %v2_19051 = phi i32 [ %v1_19051, %bb ], [ %arg1, %dec_label_pc_19001 ]
  ret i32 %v2_19051

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19058() local_unnamed_addr {
dec_label_pc_19058:
  %v0_19059 = load i32, i32* @eax, align 4
  ret i32 %v0_19059
}

define i32 @_ZN5boost15foreach_detail_5beginISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISH_SI_EEPSE_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1905c:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_1908b = call i32 @function_38295(i32 %arg2)
  %v1_19090 = inttoptr i32 %v1_1908b to i32*
  %v2_19090 = load i32, i32* %v1_19090, align 4
  %v1_19095 = call i32 @unknown_382c2(i32 %v2_19090)
  store i32 %v1_19095, i32* @eax, align 4
  %v2_1909a = ptrtoint i32* %stack_var_-20 to i32
  %v2_190a4 = call i32 @function_382ef(i32 %v2_1909a, i32 %v1_19095)
  store i32 %arg1, i32* @eax, align 4
  %v2_190b9 = call i32 @function_3833a(i32 %arg1, i32 %v2_1909a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_190cd

bb:                                               ; preds = %dec_label_pc_1905c
  %v1_190cb = call i32 @function_190d2()
  br label %dec_label_pc_190cd

dec_label_pc_190cd:                               ; preds = %bb, %dec_label_pc_1905c
  %v2_190cb = phi i32 [ %v1_190cb, %bb ], [ %arg1, %dec_label_pc_1905c ]
  ret i32 %v2_190cb

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_190d2() local_unnamed_addr {
dec_label_pc_190d2:
  %v0_190d3 = load i32, i32* @eax, align 4
  ret i32 %v0_190d3
}

define i32 @_ZN5boost15foreach_detail_3endISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISH_SI_EEPSE_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_190d6:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_19105 = call i32 @function_3830f(i32 %arg2)
  %v1_1910a = inttoptr i32 %v1_19105 to i32*
  %v2_1910a = load i32, i32* %v1_1910a, align 4
  store i32 %v2_1910a, i32* @eax, align 4
  %v1_1910f = call i32 @function_3833c(i32 %v2_1910a)
  %v2_19114 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1911e = call i32 @unknown_383f9(i32 %v2_19114, i32 %v1_1910f)
  store i32 %arg1, i32* @eax, align 4
  %v2_19133 = call i32 @function_383b4(i32 %arg1, i32 %v2_19114)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19147

bb:                                               ; preds = %dec_label_pc_190d6
  %v1_19145 = call i32 @function_1914c()
  br label %dec_label_pc_19147

dec_label_pc_19147:                               ; preds = %bb, %dec_label_pc_190d6
  %v2_19145 = phi i32 [ %v1_19145, %bb ], [ %arg1, %dec_label_pc_190d6 ]
  ret i32 %v2_19145

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1914c() local_unnamed_addr {
dec_label_pc_1914c:
  %v0_1914d = load i32, i32* @eax, align 4
  ret i32 %v0_1914d
}

define i32 @_ZN5boost15foreach_detail_4doneISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESH_PNS0_9type2typeIT_T0_EE() local_unnamed_addr {
dec_label_pc_19150:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_1917a = call i32 @function_384bd(i32 %tmp6)
  store i32 %v1_1917a, i32* @ebx, align 4
  %v1_19187 = call i32 @function_384bd(i32 %tmp8)
  %v0_1918c = load i32, i32* @ebx, align 4
  %v2_19193 = call i32 @unknown_384ea(i32 %v1_19187, i32 %v0_1918c)
  store i32 %v2_19193, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_191a4

bb:                                               ; preds = %dec_label_pc_19150
  %v1_191a2 = call i32 @function_191a9()
  br label %dec_label_pc_191a4

dec_label_pc_191a4:                               ; preds = %bb, %dec_label_pc_19150
  %v2_191a2 = phi i32 [ %v1_191a2, %bb ], [ %v2_19193, %dec_label_pc_19150 ]
  ret i32 %v2_191a2

; uselistorder directives
  uselistorder i32 (i32)* @function_384bd, { 1, 0 }
}

define i32 @function_191a9() local_unnamed_addr {
dec_label_pc_191a9:
  %v0_191ae = load i32, i32* @eax, align 4
  ret i32 %v0_191ae
}

define i32 @_ZN5boost15foreach_detail_4nextISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE() local_unnamed_addr {
dec_label_pc_191af:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_191d2 = call i32 @function_3851c(i32 %tmp5)
  store i32 %v1_191d2, i32* @eax, align 4
  %v1_191da = call i32 @function_38589(i32 %v1_191d2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_191eb

bb:                                               ; preds = %dec_label_pc_191af
  %v1_191e9 = call i32 @function_191f0()
  br label %dec_label_pc_191eb

dec_label_pc_191eb:                               ; preds = %bb, %dec_label_pc_191af
  %v2_191e9 = phi i32 [ %v1_191e9, %bb ], [ 0, %dec_label_pc_191af ]
  ret i32 %v2_191e9
}

define i32 @function_191f0() local_unnamed_addr {
dec_label_pc_191f0:
  %v0_191f1 = load i32, i32* @eax, align 4
  ret i32 %v0_191f1
}

define i32 @_ZN5boost15foreach_detail_5derefISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISG_SH_EE() local_unnamed_addr {
dec_label_pc_191f2:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_19215 = call i32 @function_3855f(i32 %tmp5)
  store i32 %v1_19215, i32* @eax, align 4
  %v1_1921d = call i32 @function_3860c(i32 %v1_19215)
  store i32 %v1_1921d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1922e

bb:                                               ; preds = %dec_label_pc_191f2
  %v1_1922c = call i32 @function_19233()
  br label %dec_label_pc_1922e

dec_label_pc_1922e:                               ; preds = %bb, %dec_label_pc_191f2
  %v2_1922c = phi i32 [ %v1_1922c, %bb ], [ %v1_1921d, %dec_label_pc_191f2 ]
  ret i32 %v2_1922c
}

define i32 @function_19233() local_unnamed_addr {
dec_label_pc_19233:
  %v0_19234 = load i32, i32* @eax, align 4
  ret i32 %v0_19234
}

define i32 @_ZNSt4pairI10txnouttype7CScriptEC1IKS0_S1_EERKS_IT_T0_E() local_unnamed_addr {
dec_label_pc_19236:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_19256 = inttoptr i32 %tmp4 to i32*
  %v2_19256 = load i32, i32* %v1_19256, align 4
  %v2_1925b = inttoptr i32 %tmp6 to i32*
  store i32 %v2_19256, i32* %v2_1925b, align 4
  %v1_19260 = add i32 %tmp4, 4
  store i32 %v1_19260, i32* @edx, align 4
  %v1_19266 = add i32 %tmp6, 4
  store i32 %v1_19266, i32* @eax, align 4
  %v2_19270 = call i32 @function_2b8ee(i32 %v1_19266, i32 %v1_19260)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19281

bb:                                               ; preds = %dec_label_pc_19236
  %v1_1927f = call i32 @function_19286()
  br label %dec_label_pc_19281

dec_label_pc_19281:                               ; preds = %bb, %dec_label_pc_19236
  %v2_1927f = phi i32 [ %v1_1927f, %bb ], [ 0, %dec_label_pc_19236 ]
  ret i32 %v2_1927f

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_19286() local_unnamed_addr {
dec_label_pc_19286:
  %v0_19287 = load i32, i32* @eax, align 4
  ret i32 %v0_19287
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5clearEv() local_unnamed_addr {
dec_label_pc_19288:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  store i1 false, i1* @cf, align 1
  %v1_192a2 = inttoptr i32 %tmp4 to i32*
  %v2_192a2 = load i32, i32* %v1_192a2, align 4
  %v2_192ae = call i32 @function_37334(i32 %tmp4, i32 %v2_192a2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_192bf

bb:                                               ; preds = %dec_label_pc_19288
  %v1_192bd = call i32 @function_192c4()
  br label %dec_label_pc_192bf

dec_label_pc_192bf:                               ; preds = %bb, %dec_label_pc_19288
  %v2_192bd = phi i32 [ %v1_192bd, %bb ], [ 0, %dec_label_pc_19288 ]
  ret i32 %v2_192bd

; uselistorder directives
  uselistorder i32 %tmp4, { 1, 0 }
}

define i32 @function_192c4() local_unnamed_addr {
dec_label_pc_192c4:
  %v0_192c5 = load i32, i32* @eax, align 4
  ret i32 %v0_192c5
}

define i32 @_ZN9__gnu_cxxeqIPKhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESB_() local_unnamed_addr {
dec_label_pc_192c6:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_192ea = call i32 @function_35f86(i32 %tmp5)
  %v1_192ef = inttoptr i32 %v1_192ea to i32*
  %v2_192ef = load i32, i32* %v1_192ef, align 4
  store i32 %v2_192ef, i32* @ebx, align 4
  %v1_192f7 = call i32 @function_35f86(i32 %tmp3)
  %v1_192fc = inttoptr i32 %v1_192f7 to i32*
  %v2_192fc = load i32, i32* %v1_192fc, align 4
  %v0_192fe = load i32, i32* @ebx, align 4
  %v12_192fe = icmp eq i32 %v0_192fe, %v2_192fc
  %v1_19300 = zext i1 %v12_192fe to i32
  %v3_19300 = and i32 %v2_192fc, -256
  %v4_19300 = or i32 %v1_19300, %v3_19300
  store i32 %v4_19300, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1930f

bb:                                               ; preds = %dec_label_pc_192c6
  %v1_1930d = call i32 @function_19314()
  br label %dec_label_pc_1930f

dec_label_pc_1930f:                               ; preds = %bb, %dec_label_pc_192c6
  %v2_1930d = phi i32 [ %v1_1930d, %bb ], [ %v4_19300, %dec_label_pc_192c6 ]
  ret i32 %v2_1930d

; uselistorder directives
  uselistorder i32 %v2_192fc, { 1, 0 }
  uselistorder i32 (i32)* @function_35f86, { 1, 0 }
}

define i32 @function_19314() local_unnamed_addr {
dec_label_pc_19314:
  %v0_19319 = load i32, i32* @eax, align 4
  ret i32 %v0_19319
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5frontEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1931a:
  %stack_var_-20 = alloca i32, align 4
  store i1 false, i1* @cf, align 1
  %v2_19331 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_19331, i32* @eax, align 4
  %v2_1933e = call i32 @function_328a4(i32 %v2_19331, i32 %arg1)
  store i32 %v2_19331, i32* @eax, align 4
  %v1_1934c = call i32 @function_38766(i32 %v2_19331)
  store i32 %v1_1934c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1935d

bb:                                               ; preds = %dec_label_pc_1931a
  %v1_1935b = call i32 @function_19362()
  br label %dec_label_pc_1935d

dec_label_pc_1935d:                               ; preds = %bb, %dec_label_pc_1931a
  %v2_1935b = phi i32 [ %v1_1935b, %bb ], [ %v1_1934c, %dec_label_pc_1931a ]
  ret i32 %v2_1935b
}

define i32 @function_19362() local_unnamed_addr {
dec_label_pc_19362:
  %v0_19363 = load i32, i32* @eax, align 4
  ret i32 %v0_19363
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE4backEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19364:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 1, i32* %stack_var_-24, align 4
  %v2_19382 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_19382, i32* @eax, align 4
  %v2_1938f = call i32 @function_31272(i32 %v2_19382, i32 %arg1)
  %v2_19397 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_19397, i32* @eax, align 4
  %v2_1939a = ptrtoint i32* %stack_var_-24 to i32
  %v3_193ab = call i32 @function_312bc(i32 %v2_19397, i32 %v2_19382, i32 %v2_1939a)
  store i32 %v2_19397, i32* @eax, align 4
  %v1_193b9 = call i32 @function_387b0(i32 %v2_19397)
  store i32 %v1_193b9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_193ca

bb:                                               ; preds = %dec_label_pc_19364
  %v1_193c8 = call i32 @function_193cf()
  br label %dec_label_pc_193ca

dec_label_pc_193ca:                               ; preds = %bb, %dec_label_pc_19364
  %v2_193c8 = phi i32 [ %v1_193c8, %bb ], [ %v1_193b9, %dec_label_pc_19364 ]
  ret i32 %v2_193c8
}

define i32 @function_193cf() local_unnamed_addr {
dec_label_pc_193cf:
  %v0_193d0 = load i32, i32* @eax, align 4
  ret i32 %v0_193d0
}

define i32 @_ZStneIhSaIhEEbRKSt6vectorIT_T0_ES6_() local_unnamed_addr {
dec_label_pc_193d1:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_193fb = call i32 @function_30799(i32 %tmp6, i32 %tmp4)
  %v1_19400 = xor i32 %v2_193fb, 1
  store i32 %v1_19400, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1940f

bb:                                               ; preds = %dec_label_pc_193d1
  %v1_1940d = call i32 @function_19414()
  br label %dec_label_pc_1940f

dec_label_pc_1940f:                               ; preds = %bb, %dec_label_pc_193d1
  %v2_1940d = phi i32 [ %v1_1940d, %bb ], [ %v1_19400, %dec_label_pc_193d1 ]
  ret i32 %v2_1940d
}

define i32 @function_19414() local_unnamed_addr {
dec_label_pc_19414:
  %v0_19415 = load i32, i32* @eax, align 4
  ret i32 %v0_19415
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5frontEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_19416:
  %stack_var_-20 = alloca i32, align 4
  %v2_1942d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1942d, i32* @eax, align 4
  store i32 %arg1, i32* @edx, align 4
  %v2_1943a = call i32 @function_369aa(i32 %v2_1942d, i32 %arg1)
  store i32 %v2_1942d, i32* @eax, align 4
  %v1_19448 = call i32 @function_35b70(i32 %v2_1942d)
  store i32 %v1_19448, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19459

bb:                                               ; preds = %dec_label_pc_19416
  %v1_19457 = call i32 @function_1945e()
  br label %dec_label_pc_19459

dec_label_pc_19459:                               ; preds = %bb, %dec_label_pc_19416
  %v2_19457 = phi i32 [ %v1_19457, %bb ], [ %v1_19448, %dec_label_pc_19416 ]
  ret i32 %v2_19457

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1945e() local_unnamed_addr {
dec_label_pc_1945e:
  %v0_1945f = load i32, i32* @eax, align 4
  ret i32 %v0_1945f
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19460:
  %v2_19480 = load i32, i32* %arg1, align 4
  store i32 %v2_19480, i32* @ecx, align 4
  %v2_1948b = mul i32 %arg2, 12
  %v2_1948e = add i32 %v2_19480, %v2_1948b
  store i32 %v2_1948e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1949c

bb:                                               ; preds = %dec_label_pc_19460
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_1949a = call i32 @function_194a1(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_1949c

dec_label_pc_1949c:                               ; preds = %bb, %dec_label_pc_19460
  %v4_1949a = phi i32 [ %v3_1949a, %bb ], [ %v2_1948e, %dec_label_pc_19460 ]
  ret i32 %v4_1949a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_194a1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194a1:
  %v0_194a2 = load i32, i32* @eax, align 4
  ret i32 %v0_194a2
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEixEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194a4:
  %v2_194c4 = load i32, i32* %arg1, align 4
  store i32 %v2_194c4, i32* @ecx, align 4
  %v2_194cf = mul i32 %arg2, 12
  %v2_194d2 = add i32 %v2_194c4, %v2_194cf
  store i32 %v2_194d2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_194e0

bb:                                               ; preds = %dec_label_pc_194a4
  %tmp6 = ptrtoint i32* %arg1 to i32
  %v3_194de = call i32 @function_194e5(i32 %arg2, i32 %tmp6)
  br label %dec_label_pc_194e0

dec_label_pc_194e0:                               ; preds = %bb, %dec_label_pc_194a4
  %v4_194de = phi i32 [ %v3_194de, %bb ], [ %v2_194d2, %dec_label_pc_194a4 ]
  ret i32 %v4_194de

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_194e5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194e5:
  %v0_194e6 = load i32, i32* @eax, align 4
  ret i32 %v0_194e6
}

define i32 @_ZN5boost14static_visitorIbEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_194e8:
  store i32 %arg1, i32* @eax, align 4
  %v1_19505 = call i32 @function_2dee8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19516

bb:                                               ; preds = %dec_label_pc_194e8
  %v1_19514 = call i32 @function_1951b()
  br label %dec_label_pc_19516

dec_label_pc_19516:                               ; preds = %bb, %dec_label_pc_194e8
  %v2_19514 = phi i32 [ %v1_19514, %bb ], [ 0, %dec_label_pc_194e8 ]
  ret i32 %v2_19514

; uselistorder directives
  uselistorder i32 (i32)* @function_2dee8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1951b() local_unnamed_addr {
dec_label_pc_1951b:
  %v0_1951c = load i32, i32* @eax, align 4
  ret i32 %v0_1951c
}

define i32 @_ZN5boost14static_visitorIbED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1951e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19541

bb:                                               ; preds = %dec_label_pc_1951e
  %v2_1953f = call i32 @function_19546(i32 %arg1)
  br label %dec_label_pc_19541

dec_label_pc_19541:                               ; preds = %bb, %dec_label_pc_1951e
  %v3_1953f = phi i32 [ %v2_1953f, %bb ], [ 0, %dec_label_pc_1951e ]
  ret i32 %v3_1953f
}

define i32 @function_19546(i32 %arg1) local_unnamed_addr {
dec_label_pc_19546:
  %v0_19547 = load i32, i32* @eax, align 4
  ret i32 %v0_19547
}

define i32 @_ZN5boost13apply_visitorI22CKeyStoreIsMineVisitorKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENT_11result_typeERKSB_RT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19548:
  store i32 %arg2, i32* @eax, align 4
  %v2_19572 = call i32 @function_389c4(i32 %arg2, i32 %arg1)
  store i32 %v2_19572, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19583

bb:                                               ; preds = %dec_label_pc_19548
  %v1_19581 = call i32 @function_19588()
  br label %dec_label_pc_19583

dec_label_pc_19583:                               ; preds = %bb, %dec_label_pc_19548
  %v2_19581 = phi i32 [ %v1_19581, %bb ], [ %v2_19572, %dec_label_pc_19548 ]
  ret i32 %v2_19581

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_19588() local_unnamed_addr {
dec_label_pc_19588:
  %v0_19589 = load i32, i32* @eax, align 4
  ret i32 %v0_19589
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1958a:
  %v2_195b4 = call i32 @function_3751a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_195c8

bb:                                               ; preds = %dec_label_pc_1958a
  %v1_195c6 = call i32 @function_195cd()
  br label %dec_label_pc_195c8

dec_label_pc_195c8:                               ; preds = %bb, %dec_label_pc_1958a
  %v2_195c6 = phi i32 [ %v1_195c6, %bb ], [ %arg1, %dec_label_pc_1958a ]
  ret i32 %v2_195c6

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_195cd() local_unnamed_addr {
dec_label_pc_195cd:
  %v0_195ce = load i32, i32* @eax, align 4
  ret i32 %v0_195ce
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEplERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_195d2:
  %stack_var_-20 = alloca i32, align 4
  %v2_195f8 = load i32, i32* %arg2, align 4
  store i32 %v2_195f8, i32* @ecx, align 4
  %v1_195fd = inttoptr i32 %arg3 to i32*
  %v2_195fd = load i32, i32* %v1_195fd, align 4
  %v2_19607 = mul i32 %v2_195fd, 12
  %v2_1960a = add i32 %v2_19607, %v2_195f8
  store i32 %v2_1960a, i32* %stack_var_-20, align 4
  %v2_1960f = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @eax, align 4
  %v2_1961c = call i32 @function_37562(i32 %arg1, i32 %v2_1960f)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19630

bb:                                               ; preds = %dec_label_pc_195d2
  %v1_1962e = call i32 @function_19635()
  br label %dec_label_pc_19630

dec_label_pc_19630:                               ; preds = %bb, %dec_label_pc_195d2
  %v2_1962e = phi i32 [ %v1_1962e, %bb ], [ %arg1, %dec_label_pc_195d2 ]
  ret i32 %v2_1962e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_19635() local_unnamed_addr {
dec_label_pc_19635:
  %v0_19636 = load i32, i32* @eax, align 4
  ret i32 %v0_19636
}

define i32 @_ZNSaISt6vectorIhSaIhEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1963a:
  store i32 %arg1, i32* @eax, align 4
  %v1_19657 = call i32 @function_38b0a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19668

bb:                                               ; preds = %dec_label_pc_1963a
  %v1_19666 = call i32 @function_1966d()
  br label %dec_label_pc_19668

dec_label_pc_19668:                               ; preds = %bb, %dec_label_pc_1963a
  %v2_19666 = phi i32 [ %v1_19666, %bb ], [ 0, %dec_label_pc_1963a ]
  ret i32 %v2_19666

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1966d() local_unnamed_addr {
dec_label_pc_1966d:
  %v0_1966e = load i32, i32* @eax, align 4
  ret i32 %v0_1966e
}

define i32 @_ZNSaISt6vectorIhSaIhEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19670:
  %v1_1968d = call i32 @function_38b6a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1969e

bb:                                               ; preds = %dec_label_pc_19670
  %v1_1969c = call i32 @function_196a3()
  br label %dec_label_pc_1969e

dec_label_pc_1969e:                               ; preds = %bb, %dec_label_pc_19670
  %v2_1969c = phi i32 [ %v1_1969c, %bb ], [ 0, %dec_label_pc_19670 ]
  ret i32 %v2_1969c
}

define i32 @function_196a3() local_unnamed_addr {
dec_label_pc_196a3:
  %v0_196a4 = load i32, i32* @eax, align 4
  ret i32 %v0_196a4
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEC1IN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEET_S9_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_196a6:
  %v2_196dd = call i32 @unknown_38bca(i32 %arg1, i32 %arg4)
  %v0_196e2 = load i32, i32* @ebx, align 4
  %sext = mul i32 %v0_196e2, 16777216
  %v4_196fa = sdiv i32 %sext, 16777216
  %v5_196fa = call i32 @unknown_38c0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v4_196fa)
  %v0_196ff = call i32 @function_19718()
  ret i32 %v0_196ff

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19702() local_unnamed_addr {
dec_label_pc_19702:
  %eax.global-to-local = alloca i32, align 4
  %v0_19702 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19702
}

define i32 @function_19718() local_unnamed_addr {
dec_label_pc_19718:
  %v0_19718 = load i32, i32* @ebp, align 4
  %v1_19718 = add i32 %v0_19718, -12
  %v2_19718 = inttoptr i32 %v1_19718 to i32*
  %v3_19718 = load i32, i32* %v2_19718, align 4
  %v1_1971b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1971b = xor i32 %v1_1971b, %v3_19718
  %v3_1971b = icmp eq i32 %v2_1971b, 0
  store i32 %v2_1971b, i32* @eax, align 4
  br i1 %v3_1971b, label %bb, label %dec_label_pc_19724

bb:                                               ; preds = %dec_label_pc_19718
  %v1_19722 = call i32 @function_19729()
  br label %dec_label_pc_19724

dec_label_pc_19724:                               ; preds = %bb, %dec_label_pc_19718
  %v2_19722 = phi i32 [ %v1_19722, %bb ], [ %v2_1971b, %dec_label_pc_19718 ]
  ret i32 %v2_19722
}

define i32 @function_19729() local_unnamed_addr {
dec_label_pc_19729:
  %v0_1972e = load i32, i32* @eax, align 4
  ret i32 %v0_1972e
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EaSIS2_EERS7_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19730:
  %v2_1975a = call i32 @unknown_38d26(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1976e

bb:                                               ; preds = %dec_label_pc_19730
  %v1_1976c = call i32 @function_19773()
  br label %dec_label_pc_1976e

dec_label_pc_1976e:                               ; preds = %bb, %dec_label_pc_19730
  %v2_1976c = phi i32 [ %v1_1976c, %bb ], [ %arg1, %dec_label_pc_19730 ]
  ret i32 %v2_1976c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19773() local_unnamed_addr {
dec_label_pc_19773:
  %v0_19774 = load i32, i32* @eax, align 4
  ret i32 %v0_19774
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EaSIS3_EERS7_RKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19776:
  %v2_197a0 = call i32 @unknown_38e6c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_197b4

bb:                                               ; preds = %dec_label_pc_19776
  %v1_197b2 = call i32 @function_197b9()
  br label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %bb, %dec_label_pc_19776
  %v2_197b2 = phi i32 [ %v1_197b2, %bb ], [ %arg1, %dec_label_pc_19776 ]
  ret i32 %v2_197b2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_197b9() local_unnamed_addr {
dec_label_pc_197b9:
  %v0_197ba = load i32, i32* @eax, align 4
  ret i32 %v0_197ba
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE5clearEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_197bc:
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_197d6 = load i32, i32* %arg1, align 4
  %v2_197e2 = call i32 @unknown_38f7c(i32 %tmp5, i32 %v2_197d6)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_197f3

bb:                                               ; preds = %dec_label_pc_197bc
  %v1_197f1 = call i32 @function_197f8()
  br label %dec_label_pc_197f3

dec_label_pc_197f3:                               ; preds = %bb, %dec_label_pc_197bc
  %v2_197f1 = phi i32 [ %v1_197f1, %bb ], [ 0, %dec_label_pc_197bc ]
  ret i32 %v2_197f1
}

define i32 @function_197f8() local_unnamed_addr {
dec_label_pc_197f8:
  %v0_197f9 = load i32, i32* @eax, align 4
  ret i32 %v0_197f9
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EC1IS2_EERKT_() local_unnamed_addr {
dec_label_pc_197fa:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v1_1981b = add i32 %tmp7, 4
  %v1_19821 = call i32 @unknown_39042(i32 %v1_1981b)
  %v0_19826 = load i32, i32* @ebx, align 4
  %sext = mul i32 %v0_19826, 16777216
  %v4_1983f = sdiv i32 %sext, 16777216
  %v5_1983f = call i32 @unknown_390a2(i32 %tmp7, i32 %tmp5, i32 1, i32 %v4_1983f)
  %v0_19844 = call i32 @function_19860()
  ret i32 %v0_19844

; uselistorder directives
  uselistorder i32 %tmp7, { 1, 0 }
}

define i32 @function_19847() local_unnamed_addr {
dec_label_pc_19847:
  %eax.global-to-local = alloca i32, align 4
  %v0_19847 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19847
}

define i32 @function_19860() local_unnamed_addr {
dec_label_pc_19860:
  %v0_19860 = load i32, i32* @ebp, align 4
  %v1_19860 = add i32 %v0_19860, -12
  %v2_19860 = inttoptr i32 %v1_19860 to i32*
  %v3_19860 = load i32, i32* %v2_19860, align 4
  %v1_19863 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_19863 = xor i32 %v1_19863, %v3_19860
  %v3_19863 = icmp eq i32 %v2_19863, 0
  store i32 %v2_19863, i32* @eax, align 4
  br i1 %v3_19863, label %bb, label %dec_label_pc_1986c

bb:                                               ; preds = %dec_label_pc_19860
  %v1_1986a = call i32 @function_19871()
  br label %dec_label_pc_1986c

dec_label_pc_1986c:                               ; preds = %bb, %dec_label_pc_19860
  %v2_1986a = phi i32 [ %v1_1986a, %bb ], [ %v2_19863, %dec_label_pc_19860 ]
  ret i32 %v2_1986a
}

define i32 @function_19871() local_unnamed_addr {
dec_label_pc_19871:
  %v0_19876 = load i32, i32* @eax, align 4
  ret i32 %v0_19876
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19878:
  %v1_19896 = call i32 @unknown_3918a(i32 %arg1)
  %v1_1989e = add i32 %arg1, 4
  %v1_198a4 = call i32 @unknown_390f6(i32 %v1_1989e)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_198b5

bb:                                               ; preds = %dec_label_pc_19878
  %v1_198b3 = call i32 @function_198d6()
  store i32 %v1_198b3, i32* @eax, align 4
  br label %dec_label_pc_198b5

dec_label_pc_198b5:                               ; preds = %bb, %dec_label_pc_19878
  %v0_198b5 = call i32 @function_198d1()
  ret i32 %v0_198b5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_198b8() local_unnamed_addr {
dec_label_pc_198b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_198b8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_198b8
}

define i32 @function_198d1() local_unnamed_addr {
dec_label_pc_198d1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_198d6() local_unnamed_addr {
dec_label_pc_198d6:
  %v0_198db = load i32, i32* @eax, align 4
  ret i32 %v0_198db
}

define i32 @_ZN5boost6detail7variant9copy_intoD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_198dc:
  store i32 %arg1, i32* @eax, align 4
  %v1_198f9 = call i32 @function_2e33c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1990a

bb:                                               ; preds = %dec_label_pc_198dc
  %v1_19908 = call i32 @function_1990f()
  br label %dec_label_pc_1990a

dec_label_pc_1990a:                               ; preds = %bb, %dec_label_pc_198dc
  %v2_19908 = phi i32 [ %v1_19908, %bb ], [ 0, %dec_label_pc_198dc ]
  ret i32 %v2_19908

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1990f() local_unnamed_addr {
dec_label_pc_1990f:
  %v0_19910 = load i32, i32* @eax, align 4
  ret i32 %v0_19910
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EC1ERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19912:
  %stack_var_-20 = alloca i32, align 4
  %v1_19933 = add i32 %arg1, 4
  %v1_19939 = call i32 @unknown_3915a(i32 %v1_19933)
  %v1_19947 = call i32 @unknown_39294(i32 %v1_19933)
  %v2_19950 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_19950, i32* @eax, align 4
  %v2_19956 = call i32 @function_2313a(i32 %v2_19950, i32 %v1_19947)
  %v2_19968 = call i32 @unknown_392ca(i32 %arg2, i32 %v2_19950)
  %v1_19973 = call i32 @unknown_39370(i32 %arg2)
  %v2_19982 = call i32 @unknown_39338(i32 %arg1, i32 %v1_19973)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1999e

bb:                                               ; preds = %dec_label_pc_19912
  %v2_1999c = call i32 @function_199ce(i32 %v2_19950)
  store i32 %v2_1999c, i32* @eax, align 4
  br label %dec_label_pc_1999e

dec_label_pc_1999e:                               ; preds = %bb, %dec_label_pc_19912
  %v0_1999e = call i32 @function_199c9()
  ret i32 %v0_1999e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_199a0() local_unnamed_addr {
dec_label_pc_199a0:
  %eax.global-to-local = alloca i32, align 4
  %v0_199a0 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_199a0, i32* @ebx, align 4
  %v0_199a2 = load i32, i32* @ebp, align 4
  %v1_199a2 = add i32 %v0_199a2, -16
  store i32 %v1_199a2, i32* %eax.global-to-local, align 4
  %v1_199ad = call i32 @function_199b1(i32 %v1_199a2)
  store i32 %v1_199ad, i32* %eax.global-to-local, align 4
  ret i32 %v1_199ad
}

define i32 @function_199af() local_unnamed_addr {
dec_label_pc_199af:
  %eax.global-to-local = alloca i32, align 4
  %v0_199af = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_199af
}

define i32 @function_199b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_199b1:
  %v0_199b1 = load i32, i32* @ebp, align 4
  %v1_199b1 = add i32 %v0_199b1, -28
  %v2_199b1 = inttoptr i32 %v1_199b1 to i32*
  %v3_199b1 = load i32, i32* %v2_199b1, align 4
  %v1_199b4 = add i32 %v3_199b1, 4
  %v1_199ba = call i32 @unknown_39190(i32 %v1_199b4)
  %v0_199bf = load i32, i32* @ebx, align 4
  ret i32 %v0_199bf
}

define i32 @function_199c9() local_unnamed_addr {
dec_label_pc_199c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_199ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_199ce:
  %v0_199d3 = load i32, i32* @eax, align 4
  ret i32 %v0_199d3
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE9push_backERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_199d4:
  %stack_var_-20 = alloca i32, align 4
  %v1_199f4 = add i32 %arg1, 4
  %v2_199f4 = inttoptr i32 %v1_199f4 to i32*
  %v3_199f4 = load i32, i32* %v2_199f4, align 4
  %v1_199fa = add i32 %arg1, 8
  %v2_199fa = inttoptr i32 %v1_199fa to i32*
  %v3_199fa = load i32, i32* %v2_199fa, align 4
  %v12_199fd = icmp eq i32 %v3_199f4, %v3_199fa
  br i1 %v12_199fd, label %dec_label_pc_19a2e, label %dec_label_pc_19a01

dec_label_pc_19a01:                               ; preds = %dec_label_pc_199d4
  %v3_19a04 = load i32, i32* %v2_199f4, align 4
  %v3_19a18 = call i32 @unknown_3947a(i32 %arg1, i32 %v3_19a04, i32 %arg2)
  %v3_19a20 = load i32, i32* %v2_199f4, align 4
  %v1_19a23 = add i32 %v3_19a20, 24
  store i32 %v1_19a23, i32* %v2_199f4, align 4
  br label %dec_label_pc_19a5c

dec_label_pc_19a2e:                               ; preds = %dec_label_pc_199d4
  %v2_19a2e = ptrtoint i32* %stack_var_-20 to i32
  %v2_19a3b = call i32 @unknown_39812(i32 %v2_19a2e, i32 %arg1)
  %v3_19a4a = load i32, i32* %stack_var_-20, align 4
  %v3_19a57 = call i32 @unknown_394fc(i32 %arg1, i32 %v3_19a4a, i32 %arg2)
  br label %dec_label_pc_19a5c

dec_label_pc_19a5c:                               ; preds = %dec_label_pc_19a2e, %dec_label_pc_19a01
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19a68

bb:                                               ; preds = %dec_label_pc_19a5c
  %v1_19a66 = call i32 @function_19a6d()
  br label %dec_label_pc_19a68

dec_label_pc_19a68:                               ; preds = %bb, %dec_label_pc_19a5c
  %v2_19a66 = phi i32 [ %v1_19a66, %bb ], [ 0, %dec_label_pc_19a5c ]
  ret i32 %v2_19a66

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 4, 3 }
}

define i32 @function_19a6d() local_unnamed_addr {
dec_label_pc_19a6d:
  %v0_19a6e = load i32, i32* @eax, align 4
  ret i32 %v0_19a6e
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19a70:
  %v1_19a8b = add i32 %arg1, 4
  %v1_19a91 = call i32 @unknown_392b8(i32 %v1_19a8b)
  %v1_19a9f = call i32 @unknown_393f2(i32 %v1_19a8b)
  store i32 %v1_19a9f, i32* @eax, align 4
  %v2_19aaf = call i32 @function_2295c(i32 1, i32 %v1_19a9f)
  %v2_19ac4 = call i32 @unknown_39496(i32 %arg1, i32 0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19ad5

bb:                                               ; preds = %dec_label_pc_19a70
  %v1_19ad3 = call i32 @function_19af6()
  store i32 %v1_19ad3, i32* @eax, align 4
  br label %dec_label_pc_19ad5

dec_label_pc_19ad5:                               ; preds = %bb, %dec_label_pc_19a70
  %v0_19ad5 = call i32 @function_19af1()
  ret i32 %v0_19ad5

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_19ad8() local_unnamed_addr {
dec_label_pc_19ad8:
  %eax.global-to-local = alloca i32, align 4
  %v0_19ad8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19ad8
}

define i32 @function_19af1() local_unnamed_addr {
dec_label_pc_19af1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19af6() local_unnamed_addr {
dec_label_pc_19af6:
  %v0_19afb = load i32, i32* @eax, align 4
  ret i32 %v0_19afb
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_19afc:
  %v1_19b19 = call i32 @unknown_399ba(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b2a

bb:                                               ; preds = %dec_label_pc_19afc
  %v1_19b28 = call i32 @function_19b2f()
  br label %dec_label_pc_19b2a

dec_label_pc_19b2a:                               ; preds = %bb, %dec_label_pc_19afc
  %v2_19b28 = phi i32 [ %v1_19b28, %bb ], [ 0, %dec_label_pc_19afc ]
  ret i32 %v2_19b28
}

define i32 @function_19b2f() local_unnamed_addr {
dec_label_pc_19b2f:
  %v0_19b30 = load i32, i32* @eax, align 4
  ret i32 %v0_19b30
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_19b32:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_19b50 = call i32 @unknown_39ab0(i32 %tmp101)
  %v1_19b58 = add i32 %tmp101, 4
  %v2_19b58 = inttoptr i32 %v1_19b58 to i32*
  %v3_19b58 = load i32, i32* %v2_19b58, align 4
  %v2_19b5e = load i32, i32* %arg1, align 4
  %v3_19b6b = call i32 @unknown_39add(i32 %v2_19b5e, i32 %v3_19b58, i32 %v1_19b50)
  %v1_19b76 = call i32 @unknown_39a26(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19b87

bb:                                               ; preds = %dec_label_pc_19b32
  %v1_19b85 = call i32 @function_19ba5()
  store i32 %v1_19b85, i32* @eax, align 4
  br label %dec_label_pc_19b87

dec_label_pc_19b87:                               ; preds = %bb, %dec_label_pc_19b32
  %v0_19b87 = call i32 @function_19ba0()
  ret i32 %v0_19b87

; uselistorder directives
  uselistorder i32 %tmp101, { 2, 1, 0 }
}

define i32 @function_19b8a() local_unnamed_addr {
dec_label_pc_19b8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_19b8a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_19b8a
}

define i32 @function_19ba0() local_unnamed_addr {
dec_label_pc_19ba0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_19ba5() local_unnamed_addr {
dec_label_pc_19ba5:
  %v0_19baa = load i32, i32* @eax, align 4
  ret i32 %v0_19baa
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEENS0_8auto_anyIPT_EERSE_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19bab:
  %stack_var_-20 = alloca i32, align 4
  %v1_19bd4 = call i32 @unknown_39b9e(i32 %arg2)
  store i32 %v1_19bd4, i32* %stack_var_-20, align 4
  %v2_19bdc = ptrtoint i32* %stack_var_-20 to i32
  %v2_19be9 = call i32 @unknown_39bf5(i32 %arg1, i32 %v2_19bdc)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19bfd

bb:                                               ; preds = %dec_label_pc_19bab
  %v1_19bfb = call i32 @function_19c02()
  br label %dec_label_pc_19bfd

dec_label_pc_19bfd:                               ; preds = %bb, %dec_label_pc_19bab
  %v2_19bfb = phi i32 [ %v1_19bfb, %bb ], [ %arg1, %dec_label_pc_19bab ]
  ret i32 %v2_19bfb

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19c02() local_unnamed_addr {
dec_label_pc_19c02:
  %v0_19c03 = load i32, i32* @eax, align 4
  ret i32 %v0_19c03
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISI_SJ_EEPSF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19c06:
  %stack_var_-20 = alloca i32, align 4
  %v1_19c35 = call i32 @unknown_39c95(i32 %arg2)
  %v1_19c3a = inttoptr i32 %v1_19c35 to i32*
  %v2_19c3a = load i32, i32* %v1_19c3a, align 4
  %v1_19c3f = call i32 @unknown_39cc2(i32 %v2_19c3a)
  %v2_19c44 = ptrtoint i32* %stack_var_-20 to i32
  %v2_19c4e = call i32 @unknown_39cef(i32 %v2_19c44, i32 %v1_19c3f)
  %v2_19c63 = call i32 @unknown_39d3a(i32 %arg1, i32 %v2_19c44)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19c77

bb:                                               ; preds = %dec_label_pc_19c06
  %v1_19c75 = call i32 @function_19c7c()
  br label %dec_label_pc_19c77

dec_label_pc_19c77:                               ; preds = %bb, %dec_label_pc_19c06
  %v2_19c75 = phi i32 [ %v1_19c75, %bb ], [ %arg1, %dec_label_pc_19c06 ]
  ret i32 %v2_19c75

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19c7c() local_unnamed_addr {
dec_label_pc_19c7c:
  %v0_19c7d = load i32, i32* @eax, align 4
  ret i32 %v0_19c7d
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISI_SJ_EEPSF_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19c80:
  %stack_var_-20 = alloca i32, align 4
  %v1_19caf = call i32 @unknown_39d0f(i32 %arg2)
  %v1_19cb4 = inttoptr i32 %v1_19caf to i32*
  %v2_19cb4 = load i32, i32* %v1_19cb4, align 4
  %v1_19cb9 = call i32 @unknown_39d3c(i32 %v2_19cb4)
  %v2_19cbe = ptrtoint i32* %stack_var_-20 to i32
  %v2_19cc8 = call i32 @unknown_39df9(i32 %v2_19cbe, i32 %v1_19cb9)
  %v2_19cdd = call i32 @unknown_39db4(i32 %arg1, i32 %v2_19cbe)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19cf1

bb:                                               ; preds = %dec_label_pc_19c80
  %v1_19cef = call i32 @function_19cf6()
  br label %dec_label_pc_19cf1

dec_label_pc_19cf1:                               ; preds = %bb, %dec_label_pc_19c80
  %v2_19cef = phi i32 [ %v1_19cef, %bb ], [ %arg1, %dec_label_pc_19c80 ]
  ret i32 %v2_19cef

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19cf6() local_unnamed_addr {
dec_label_pc_19cf6:
  %v0_19cf7 = load i32, i32* @eax, align 4
  ret i32 %v0_19cf7
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESI_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19cfa:
  %v1_19d24 = call i32 @unknown_39ebd(i32 %arg2)
  %v1_19d31 = call i32 @unknown_39ebd(i32 %arg1)
  ret i32 %v1_19d31

; uselistorder directives
  uselistorder i32 (i32)* @unknown_39ebd, { 1, 0 }
}

define i32 @function_19d36(i32 %arg1) local_unnamed_addr {
dec_label_pc_19d36:
  %v0_19d36 = load i32, i32* @ebx, align 4
  %v0_19d3a = load i32, i32* @eax, align 4
  %v2_19d3d = call i32 @unknown_39eea(i32 %v0_19d3a, i32 %v0_19d36)
  store i32 %v2_19d3d, i32* @eax, align 4
  %v0_19d42 = load i32, i32* @ebp, align 4
  %v1_19d42 = add i32 %v0_19d42, -12
  %v2_19d42 = inttoptr i32 %v1_19d42 to i32*
  %v3_19d42 = load i32, i32* %v2_19d42, align 4
  %v1_19d45 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_19d45 = icmp eq i32 %v1_19d45, %v3_19d42
  br i1 %v3_19d45, label %bb, label %dec_label_pc_19d4e

bb:                                               ; preds = %dec_label_pc_19d36
  %v1_19d4c = call i32 @function_19d53()
  br label %dec_label_pc_19d4e

dec_label_pc_19d4e:                               ; preds = %bb, %dec_label_pc_19d36
  %v2_19d4c = phi i32 [ %v1_19d4c, %bb ], [ %v2_19d3d, %dec_label_pc_19d36 ]
  ret i32 %v2_19d4c
}

define i32 @function_19d53() local_unnamed_addr {
dec_label_pc_19d53:
  %v0_19d58 = load i32, i32* @eax, align 4
  ret i32 %v0_19d58
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d59:
  %v1_19d7c = call i32 @unknown_39f1c(i32 %arg1)
  %v1_19d84 = call i32 @unknown_39f9d(i32 %v1_19d7c)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19d95

bb:                                               ; preds = %dec_label_pc_19d59
  %v1_19d93 = call i32 @function_19d9a()
  br label %dec_label_pc_19d95

dec_label_pc_19d95:                               ; preds = %bb, %dec_label_pc_19d59
  %v2_19d93 = phi i32 [ %v1_19d93, %bb ], [ 0, %dec_label_pc_19d59 ]
  ret i32 %v2_19d93
}

define i32 @function_19d9a() local_unnamed_addr {
dec_label_pc_19d9a:
  %v0_19d9b = load i32, i32* @eax, align 4
  ret i32 %v0_19d9b
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISH_SI_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19d9c:
  %v1_19dbf = call i32 @unknown_39f5f(i32 %arg1)
  %v1_19dc7 = call i32 @unknown_3a01a(i32 %v1_19dbf)
  store i32 %v1_19dc7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19dd8

bb:                                               ; preds = %dec_label_pc_19d9c
  %v1_19dd6 = call i32 @function_19ddd()
  br label %dec_label_pc_19dd8

dec_label_pc_19dd8:                               ; preds = %bb, %dec_label_pc_19d9c
  %v2_19dd6 = phi i32 [ %v1_19dd6, %bb ], [ %v1_19dc7, %dec_label_pc_19d9c ]
  ret i32 %v2_19dd6
}

define i32 @function_19ddd() local_unnamed_addr {
dec_label_pc_19ddd:
  %v0_19dde = load i32, i32* @eax, align 4
  ret i32 %v0_19dde
}

define i32 @_ZN5boost13apply_visitorI20CAffectedKeysVisitorKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENT_11result_typeERSB_RT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19ddf:
  %v2_19e09 = call i32 @unknown_3a08d(i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19e1a

bb:                                               ; preds = %dec_label_pc_19ddf
  %v1_19e18 = call i32 @function_19e1f()
  br label %dec_label_pc_19e1a

dec_label_pc_19e1a:                               ; preds = %bb, %dec_label_pc_19ddf
  %v2_19e18 = phi i32 [ %v1_19e18, %bb ], [ 0, %dec_label_pc_19ddf ]
  ret i32 %v2_19e18
}

define i32 @function_19e1f() local_unnamed_addr {
dec_label_pc_19e1f:
  %v0_19e20 = load i32, i32* @eax, align 4
  ret i32 %v0_19e20
}

define i32 @_ZNSt6vectorI6CKeyIDSaIS0_EE9push_backERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19e22:
  %stack_var_-20 = alloca i32, align 4
  %v1_19e42 = add i32 %arg1, 4
  %v2_19e42 = inttoptr i32 %v1_19e42 to i32*
  %v3_19e42 = load i32, i32* %v2_19e42, align 4
  %v1_19e48 = add i32 %arg1, 8
  %v2_19e48 = inttoptr i32 %v1_19e48 to i32*
  %v3_19e48 = load i32, i32* %v2_19e48, align 4
  %v12_19e4b = icmp eq i32 %v3_19e42, %v3_19e48
  br i1 %v12_19e4b, label %dec_label_pc_19e7c, label %dec_label_pc_19e4f

dec_label_pc_19e4f:                               ; preds = %dec_label_pc_19e22
  %v3_19e52 = load i32, i32* %v2_19e42, align 4
  %v3_19e66 = call i32 @unknown_3a124(i32 %arg1, i32 %v3_19e52, i32 %arg2)
  %v3_19e6e = load i32, i32* %v2_19e42, align 4
  %v1_19e71 = add i32 %v3_19e6e, 20
  store i32 %v1_19e71, i32* %v2_19e42, align 4
  br label %dec_label_pc_19eaa

dec_label_pc_19e7c:                               ; preds = %dec_label_pc_19e22
  %v2_19e7c = ptrtoint i32* %stack_var_-20 to i32
  %v2_19e89 = call i32 @unknown_3a4a2(i32 %v2_19e7c, i32 %arg1)
  %v3_19e98 = load i32, i32* %stack_var_-20, align 4
  %v3_19ea5 = call i32 @unknown_3a190(i32 %arg1, i32 %v3_19e98, i32 %arg2)
  br label %dec_label_pc_19eaa

dec_label_pc_19eaa:                               ; preds = %dec_label_pc_19e7c, %dec_label_pc_19e4f
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_19eb6

bb:                                               ; preds = %dec_label_pc_19eaa
  %v1_19eb4 = call i32 @function_19ebb()
  br label %dec_label_pc_19eb6

dec_label_pc_19eb6:                               ; preds = %bb, %dec_label_pc_19eaa
  %v2_19eb4 = phi i32 [ %v1_19eb4, %bb ], [ 0, %dec_label_pc_19eaa ]
  ret i32 %v2_19eb4

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 4, 3 }
}

define i32 @function_19ebb() local_unnamed_addr {
dec_label_pc_19ebb:
  %v0_19ebc = load i32, i32* @eax, align 4
  ret i32 %v0_19ebc
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EEaSERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19ebe:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp26 = ptrtoint i32* %arg1 to i32
  %v15_19ee1 = icmp eq i32 %tmp26, %arg2
  br i1 %v15_19ee1, label %dec_label_pc_1a139, label %dec_label_pc_19eea

dec_label_pc_19eea:                               ; preds = %dec_label_pc_19ebe
  store i32 %arg2, i32* @eax, align 4
  %v1_19ef0 = call i32 @function_31b54(i32 %arg2)
  %v1_19efe = call i32 @unknown_3a588(i32 %tmp26)
  %v10_19f03 = icmp ult i32 %v1_19efe, %v1_19ef0
  %v5_19f09 = icmp eq i1 %v10_19f03, false
  br i1 %v5_19f09, label %dec_label_pc_19fe1, label %dec_label_pc_19f11

dec_label_pc_19f11:                               ; preds = %dec_label_pc_19eea
  %v2_19f11 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_19f11, i32* @eax, align 4
  %v2_19f1e = call i32 @function_37402(i32 %v2_19f11, i32 %arg2)
  %v2_19f26 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_19f26, i32* @eax, align 4
  %v2_19f33 = call i32 @function_37452(i32 %v2_19f26, i32 %arg2)
  %v3_19f3b = load i32, i32* %stack_var_-64, align 4
  %v3_19f42 = load i32, i32* %stack_var_-68, align 4
  %v4_19f56 = call i32 @unknown_3a5ce(i32 %tmp26, i32 %v1_19ef0, i32 %v3_19f42, i32 %v3_19f3b)
  store i32 %tmp26, i32* @eax, align 4
  %v1_19f64 = call i32 @function_3769e(i32 %tmp26)
  store i32 %v1_19f64, i32* @eax, align 4
  %v1_19f6c = add i32 %tmp26, 4
  %v2_19f6c = inttoptr i32 %v1_19f6c to i32*
  %v3_19f6c = load i32, i32* %v2_19f6c, align 4
  store i32 %v3_19f6c, i32* @ecx, align 4
  %v2_19f72 = load i32, i32* %arg1, align 4
  store i32 %v2_19f72, i32* @edx, align 4
  %v3_19f7f = call i32 @function_376cb(i32 %v2_19f72, i32 %v3_19f6c, i32 %v1_19f64)
  %v1_19f87 = add i32 %tmp26, 8
  %v2_19f87 = inttoptr i32 %v1_19f87 to i32*
  %v3_19f87 = load i32, i32* %v2_19f87, align 4
  %v2_19f8f = load i32, i32* %arg1, align 4
  %v2_19f93 = sub i32 %v3_19f87, %v2_19f8f
  %v2_19f97 = sdiv i32 %v2_19f93, 4
  %v3_19f9a = mul i32 %v2_19f97, -1431655765
  %v3_19fb5 = call i32 @unknown_3a688(i32 %tmp26, i32 %v2_19f8f, i32 %v3_19f9a)
  store i32 %v4_19f56, i32* %arg1, align 4
  %v2_19fd0 = mul i32 %v1_19ef0, 12
  %v3_19fd3 = add i32 %v4_19f56, %v2_19fd0
  store i32 %v3_19fd3, i32* %v2_19f87, align 4
  br label %dec_label_pc_1a11f

dec_label_pc_19fe1:                               ; preds = %dec_label_pc_19eea
  store i32 %tmp26, i32* @eax, align 4
  %v1_19fe7 = call i32 @function_31b54(i32 %tmp26)
  %v10_19fec = icmp ult i32 %v1_19fe7, %v1_19ef0
  %v1_19fef = icmp eq i1 %v10_19fec, false
  %v5_19ff2 = icmp eq i1 %v1_19fef, false
  store i32 %tmp26, i32* @eax, align 4
  br i1 %v5_19ff2, label %dec_label_pc_1a099, label %dec_label_pc_19ffa

dec_label_pc_19ffa:                               ; preds = %dec_label_pc_19fe1
  %v1_1a000 = call i32 @function_3769e(i32 %tmp26)
  store i32 %v1_1a000, i32* @ebx, align 4
  %v2_1a007 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a007, i32* @eax, align 4
  %v2_1a014 = call i32 @function_31dcc(i32 %v2_1a007, i32 %tmp26)
  %v2_1a01c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1a01c, i32* @eax, align 4
  %v2_1a029 = call i32 @function_33448(i32 %v2_1a01c, i32 %tmp26)
  %v2_1a031 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1a031, i32* @eax, align 4
  %v2_1a03e = call i32 @function_37402(i32 %v2_1a031, i32 %arg2)
  %v2_1a046 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_1a046, i32* @eax, align 4
  %v2_1a053 = call i32 @function_37452(i32 %v2_1a046, i32 %arg2)
  %v2_1a05b = ptrtoint i32* %stack_var_-48 to i32
  %v3_1a05e = load i32, i32* %stack_var_-52, align 4
  %v3_1a065 = load i32, i32* %stack_var_-56, align 4
  %v3_1a06c = load i32, i32* %stack_var_-60, align 4
  %v4_1a076 = call i32 @unknown_3a6dd(i32 %v2_1a05b, i32 %v3_1a06c, i32 %v3_1a065, i32 %v3_1a05e)
  %v0_1a07e = load i32, i32* @ebx, align 4
  %v3_1a082 = load i32, i32* %stack_var_-44, align 4
  %v3_1a089 = load i32, i32* %stack_var_-48, align 4
  %v3_1a08f = call i32 @unknown_3a76b(i32 %v3_1a089, i32 %v3_1a082, i32 %v0_1a07e)
  %.pre = add i32 %tmp26, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_1a11f

dec_label_pc_1a099:                               ; preds = %dec_label_pc_19fe1
  %v2_1a09c = load i32, i32* %arg1, align 4
  store i32 %v2_1a09c, i32* @ebx, align 4
  %v1_1a0a1 = inttoptr i32 %arg2 to i32*
  %v2_1a0a1 = load i32, i32* %v1_1a0a1, align 4
  store i32 %v2_1a0a1, i32* @esi, align 4
  store i32 %tmp26, i32* @eax, align 4
  %v1_1a0a9 = call i32 @function_31b54(i32 %tmp26)
  %v2_1a0b6 = mul i32 %v1_1a0a9, 12
  %v0_1a0b9 = load i32, i32* @esi, align 4
  %v3_1a0b9 = add i32 %v0_1a0b9, %v2_1a0b6
  store i32 %v3_1a0b9, i32* @edx, align 4
  %v2_1a0bf = load i32, i32* %v1_1a0a1, align 4
  %v0_1a0c1 = load i32, i32* @ebx, align 4
  %v3_1a0cc = call i32 @unknown_3a7b3(i32 %v2_1a0bf, i32 %v3_1a0b9, i32 %v0_1a0c1)
  store i32 %tmp26, i32* @eax, align 4
  %v1_1a0d7 = call i32 @function_3769e(i32 %tmp26)
  store i32 %v1_1a0d7, i32* @ebx, align 4
  %v1_1a0e1 = add i32 %tmp26, 4
  %v2_1a0e1 = inttoptr i32 %v1_1a0e1 to i32*
  %v3_1a0e1 = load i32, i32* %v2_1a0e1, align 4
  store i32 %v3_1a0e1, i32* @edi, align 4
  %v1_1a0e7 = add i32 %arg2, 4
  %v2_1a0e7 = inttoptr i32 %v1_1a0e7 to i32*
  %v3_1a0e7 = load i32, i32* %v2_1a0e7, align 4
  store i32 %v3_1a0e7, i32* @esi, align 4
  %v2_1a0ed = load i32, i32* %v1_1a0a1, align 4
  store i32 %tmp26, i32* @eax, align 4
  %v1_1a0f8 = call i32 @function_31b54(i32 %tmp26)
  %v2_1a105 = mul i32 %v1_1a0f8, 12
  %v5_1a108 = add i32 %v2_1a105, %v2_1a0ed
  %v0_1a10b = load i32, i32* @ebx, align 4
  %v0_1a10f = load i32, i32* @edi, align 4
  %v0_1a113 = load i32, i32* @esi, align 4
  %v4_1a11a = call i32 @unknown_3a819(i32 %v5_1a108, i32 %v0_1a113, i32 %v0_1a10f, i32 %v0_1a10b)
  br label %dec_label_pc_1a11f

dec_label_pc_1a11f:                               ; preds = %dec_label_pc_1a099, %dec_label_pc_19ffa, %dec_label_pc_19f11
  %v3_1a136.pre-phi = phi i32* [ %v2_1a0e1, %dec_label_pc_1a099 ], [ %.pre3, %dec_label_pc_19ffa ], [ %v2_19f6c, %dec_label_pc_19f11 ]
  %v2_1a122 = load i32, i32* %arg1, align 4
  store i32 %v2_1a122, i32* @ecx, align 4
  %v2_1a12d = mul i32 %v1_19ef0, 12
  %v3_1a130 = add i32 %v2_1a122, %v2_1a12d
  store i32 %v3_1a130, i32* %v3_1a136.pre-phi, align 4
  br label %dec_label_pc_1a139

dec_label_pc_1a139:                               ; preds = %dec_label_pc_1a11f, %dec_label_pc_19ebe
  store i32 %tmp26, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a148

bb:                                               ; preds = %dec_label_pc_1a139
  %v1_1a146 = call i32 @function_1a14d()
  br label %dec_label_pc_1a148

dec_label_pc_1a148:                               ; preds = %bb, %dec_label_pc_1a139
  %v2_1a146 = phi i32 [ %v1_1a146, %bb ], [ %tmp26, %dec_label_pc_1a139 ]
  ret i32 %v2_1a146

; uselistorder directives
  uselistorder i32 %v1_19ef0, { 0, 3, 1, 2, 4 }
  uselistorder i32 %tmp26, { 2, 23, 12, 11, 13, 15, 14, 17, 16, 1, 9, 10, 19, 18, 21, 20, 3, 4, 5, 7, 6, 8, 22, 0 }
  uselistorder i32 (i32)* @function_3769e, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_37452, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_37402, { 1, 0 }
  uselistorder i32 (i32)* @function_31b54, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 6, 3, 4, 1, 2, 8, 7, 0 }
  uselistorder i32* %arg1, { 1, 0, 2, 3, 4, 5 }
}

define i32 @function_1a14d() local_unnamed_addr {
dec_label_pc_1a14d:
  %v0_1a14d = load i32, i32* @ebp, align 4
  %v1_1a14d = add i32 %v0_1a14d, -12
  %v1_1a150 = inttoptr i32 %v1_1a14d to i32*
  %v2_1a150 = load i32, i32* %v1_1a150, align 4
  store i32 %v2_1a150, i32* @ebx, align 4
  %v3_1a151 = add i32 %v0_1a14d, -4
  %v1_1a152 = inttoptr i32 %v3_1a151 to i32*
  %v2_1a152 = load i32, i32* %v1_1a152, align 4
  store i32 %v2_1a152, i32* @edi, align 4
  %v1_1a153 = inttoptr i32 %v0_1a14d to i32*
  %v2_1a153 = load i32, i32* %v1_1a153, align 4
  store i32 %v2_1a153, i32* @ebp, align 4
  %v0_1a154 = load i32, i32* @eax, align 4
  ret i32 %v0_1a154
}

define i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a156:
  %v1_1a173 = call i32 @unknown_3ab06(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a184

bb:                                               ; preds = %dec_label_pc_1a156
  %v1_1a182 = call i32 @function_1a189()
  br label %dec_label_pc_1a184

dec_label_pc_1a184:                               ; preds = %bb, %dec_label_pc_1a156
  %v2_1a182 = phi i32 [ %v1_1a182, %bb ], [ 0, %dec_label_pc_1a156 ]
  ret i32 %v2_1a182
}

define i32 @function_1a189() local_unnamed_addr {
dec_label_pc_1a189:
  %v0_1a18a = load i32, i32* @eax, align 4
  ret i32 %v0_1a18a
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a18c:
  %v1_1a1a9 = call i32 @unknown_3ab72(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a1ba

bb:                                               ; preds = %dec_label_pc_1a18c
  %v1_1a1b8 = call i32 @function_1a1bf()
  br label %dec_label_pc_1a1ba

dec_label_pc_1a1ba:                               ; preds = %bb, %dec_label_pc_1a18c
  %v2_1a1b8 = phi i32 [ %v1_1a1b8, %bb ], [ 0, %dec_label_pc_1a18c ]
  ret i32 %v2_1a1b8
}

define i32 @function_1a1bf() local_unnamed_addr {
dec_label_pc_1a1bf:
  %v0_1a1c0 = load i32, i32* @eax, align 4
  ret i32 %v0_1a1c0
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a1c2:
  %v1_1a1e0 = call i32 @unknown_3ac5c(i32 %arg1)
  %v2_1a1ef = call i32 @unknown_3abde(i32 %arg1, i32 %v1_1a1e0)
  store i32 %arg1, i32* @eax, align 4
  %v1_1a1fa = call i32 @function_3434e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a20b

bb:                                               ; preds = %dec_label_pc_1a1c2
  %v1_1a209 = call i32 @function_1a229()
  store i32 %v1_1a209, i32* @eax, align 4
  br label %dec_label_pc_1a20b

dec_label_pc_1a20b:                               ; preds = %bb, %dec_label_pc_1a1c2
  %v0_1a20b = call i32 @function_1a224()
  ret i32 %v0_1a20b

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1a20e() local_unnamed_addr {
dec_label_pc_1a20e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a20e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a20e
}

define i32 @function_1a224() local_unnamed_addr {
dec_label_pc_1a224:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a229() local_unnamed_addr {
dec_label_pc_1a229:
  %v0_1a22e = load i32, i32* @eax, align 4
  ret i32 %v0_1a22e
}

define i32 @_ZN5boost15foreach_detail_7containISt6vectorIS2_IhSaIhEESaIS4_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a22f:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a258 = call i32 @unknown_3acf9(i32 %arg2)
  store i32 %v1_1a258, i32* %stack_var_-20, align 4
  %v2_1a260 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a26d = call i32 @unknown_3ad51(i32 %arg1, i32 %v2_1a260)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a281

bb:                                               ; preds = %dec_label_pc_1a22f
  %v1_1a27f = call i32 @function_1a286()
  br label %dec_label_pc_1a281

dec_label_pc_1a281:                               ; preds = %bb, %dec_label_pc_1a22f
  %v2_1a27f = phi i32 [ %v1_1a27f, %bb ], [ %arg1, %dec_label_pc_1a22f ]
  ret i32 %v2_1a27f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a286() local_unnamed_addr {
dec_label_pc_1a286:
  %v0_1a287 = load i32, i32* @eax, align 4
  ret i32 %v0_1a287
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a28a:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a2b9 = call i32 @unknown_3adf1(i32 %arg2)
  %v1_1a2be = inttoptr i32 %v1_1a2b9 to i32*
  %v2_1a2be = load i32, i32* %v1_1a2be, align 4
  %v1_1a2c3 = call i32 @unknown_3ae1e(i32 %v2_1a2be)
  %v2_1a2c8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a2d2 = call i32 @unknown_3ae4b(i32 %v2_1a2c8, i32 %v1_1a2c3)
  %v2_1a2e7 = call i32 @unknown_3ae96(i32 %arg1, i32 %v2_1a2c8)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a2fb

bb:                                               ; preds = %dec_label_pc_1a28a
  %v1_1a2f9 = call i32 @function_1a300()
  br label %dec_label_pc_1a2fb

dec_label_pc_1a2fb:                               ; preds = %bb, %dec_label_pc_1a28a
  %v2_1a2f9 = phi i32 [ %v1_1a2f9, %bb ], [ %arg1, %dec_label_pc_1a28a ]
  ret i32 %v2_1a2f9

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a300() local_unnamed_addr {
dec_label_pc_1a300:
  %v0_1a301 = load i32, i32* @eax, align 4
  ret i32 %v0_1a301
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISC_SD_EEPS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a304:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a333 = call i32 @unknown_3ae6b(i32 %arg2)
  %v1_1a338 = inttoptr i32 %v1_1a333 to i32*
  %v2_1a338 = load i32, i32* %v1_1a338, align 4
  %v1_1a33d = call i32 @unknown_3ae98(i32 %v2_1a338)
  %v2_1a342 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a34c = call i32 @unknown_3af55(i32 %v2_1a342, i32 %v1_1a33d)
  %v2_1a361 = call i32 @unknown_3af10(i32 %arg1, i32 %v2_1a342)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a375

bb:                                               ; preds = %dec_label_pc_1a304
  %v1_1a373 = call i32 @function_1a37a()
  br label %dec_label_pc_1a375

dec_label_pc_1a375:                               ; preds = %bb, %dec_label_pc_1a304
  %v2_1a373 = phi i32 [ %v1_1a373, %bb ], [ %arg1, %dec_label_pc_1a304 ]
  ret i32 %v2_1a373

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a37a() local_unnamed_addr {
dec_label_pc_1a37a:
  %v0_1a37b = load i32, i32* @eax, align 4
  ret i32 %v0_1a37b
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESC_PNS0_9type2typeIT_T0_EE() local_unnamed_addr {
dec_label_pc_1a37e:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v1_1a3a8 = call i32 @unknown_3b019(i32 %tmp6)
  store i32 %v1_1a3a8, i32* @ebx, align 4
  %v1_1a3b5 = call i32 @unknown_3b019(i32 %tmp8)
  store i32 %v1_1a3b5, i32* @eax, align 4
  %v0_1a3ba = load i32, i32* @ebx, align 4
  %v2_1a3c1 = call i32 @function_385b1(i32 %v1_1a3b5, i32 %v0_1a3ba)
  store i32 %v2_1a3c1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a3d2

bb:                                               ; preds = %dec_label_pc_1a37e
  %v1_1a3d0 = call i32 @function_1a3d7()
  br label %dec_label_pc_1a3d2

dec_label_pc_1a3d2:                               ; preds = %bb, %dec_label_pc_1a37e
  %v2_1a3d0 = phi i32 [ %v1_1a3d0, %bb ], [ %v2_1a3c1, %dec_label_pc_1a37e ]
  ret i32 %v2_1a3d0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3b019, { 1, 0 }
}

define i32 @function_1a3d7() local_unnamed_addr {
dec_label_pc_1a3d7:
  %v0_1a3dc = load i32, i32* @eax, align 4
  ret i32 %v0_1a3dc
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE() local_unnamed_addr {
dec_label_pc_1a3dd:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v1_1a400 = call i32 @unknown_3b078(i32 %tmp5)
  %v1_1a408 = call i32 @unknown_3b0a5(i32 %v1_1a400)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a419

bb:                                               ; preds = %dec_label_pc_1a3dd
  %v1_1a417 = call i32 @function_1a41e()
  br label %dec_label_pc_1a419

dec_label_pc_1a419:                               ; preds = %bb, %dec_label_pc_1a3dd
  %v2_1a417 = phi i32 [ %v1_1a417, %bb ], [ 0, %dec_label_pc_1a3dd ]
  ret i32 %v2_1a417
}

define i32 @function_1a41e() local_unnamed_addr {
dec_label_pc_1a41e:
  %v0_1a41f = load i32, i32* @eax, align 4
  ret i32 %v0_1a41f
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EE() local_unnamed_addr {
dec_label_pc_1a420:
  %stack_var_-4 = alloca i32, align 4
  %v4_1a420 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_1a420, i32* @ebp, align 4
  %v17_1a423 = load i32, i32* @eax, align 4
  ret i32 %v17_1a423
}

define i32 @function_1a428(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a428:
  %v0_1a428 = load i32, i32* @ecx, align 4
  %v1_1a428 = add i32 %v0_1a428, 1166795845
  %v2_1a428 = inttoptr i32 %v1_1a428 to i8*
  %v3_1a428 = load i8, i8* %v2_1a428, align 1
  %v5_1a428 = trunc i32 %v0_1a428 to i8
  %v6_1a428 = or i8 %v3_1a428, %v5_1a428
  store i8 %v6_1a428, i8* %v2_1a428, align 1
  %v0_1a430 = load i32, i32* @ebp, align 4
  %v1_1a430 = add i32 %v0_1a430, 1
  store i32 %v1_1a430, i32* @ebp, align 4
  %v0_1a433 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1a438 = add i32 %v0_1a430, -11
  %v3_1a438 = inttoptr i32 %v2_1a438 to i32*
  store i32 %v0_1a433, i32* %v3_1a438, align 4
  %v0_1a43d = load i32, i32* @ebp, align 4
  %v1_1a43d = add i32 %v0_1a43d, -28
  %v2_1a43d = inttoptr i32 %v1_1a43d to i32*
  %v3_1a43d = load i32, i32* %v2_1a43d, align 4
  %v1_1a443 = call i32 @unknown_3b0bb(i32 %v3_1a43d)
  %v1_1a44b = call i32 @unknown_3986c(i32 %v1_1a443)
  store i32 %v1_1a44b, i32* @eax, align 4
  %v0_1a450 = load i32, i32* @ebp, align 4
  %v1_1a450 = add i32 %v0_1a450, -12
  %v2_1a450 = inttoptr i32 %v1_1a450 to i32*
  %v3_1a450 = load i32, i32* %v2_1a450, align 4
  %v1_1a453 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1a453 = icmp eq i32 %v1_1a453, %v3_1a450
  br i1 %v3_1a453, label %bb, label %dec_label_pc_1a45c

bb:                                               ; preds = %dec_label_pc_1a428
  %v1_1a45a = call i32 @function_1a461()
  br label %dec_label_pc_1a45c

dec_label_pc_1a45c:                               ; preds = %bb, %dec_label_pc_1a428
  %v3_1a45a = phi i32 [ %v1_1a45a, %bb ], [ %v1_1a44b, %dec_label_pc_1a428 ]
  ret i32 %v3_1a45a
}

define i32 @function_1a461() local_unnamed_addr {
dec_label_pc_1a461:
  %v0_1a462 = load i32, i32* @eax, align 4
  ret i32 %v0_1a462
}

define i32 @_ZNSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE6insertERKS2_() local_unnamed_addr {
dec_label_pc_1a464:
  %stack_var_-28 = alloca i32, align 4
  %v2_1a48a = ptrtoint i32* %stack_var_-28 to i32
  ret i32 %v2_1a48a
}

define i32 @function_1a4e4() local_unnamed_addr {
dec_label_pc_1a4e4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1a4e4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1a4e4 = add i32 %v0_1a4e4, -1
  store i32 %v1_1a4e4, i32* %ecx.global-to-local, align 4
  %v0_1a4e6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a4e6
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a4ea:
  %v1_1a507 = call i32 @unknown_3b476(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a518

bb:                                               ; preds = %dec_label_pc_1a4ea
  %v1_1a516 = call i32 @function_1a51d()
  br label %dec_label_pc_1a518

dec_label_pc_1a518:                               ; preds = %bb, %dec_label_pc_1a4ea
  %v2_1a516 = phi i32 [ %v1_1a516, %bb ], [ 0, %dec_label_pc_1a4ea ]
  ret i32 %v2_1a516
}

define i32 @function_1a51d() local_unnamed_addr {
dec_label_pc_1a51d:
  %v0_1a51e = load i32, i32* @eax, align 4
  ret i32 %v0_1a51e
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE13_Rb_tree_implIS9_Lb0EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a520:
  %v1_1a53d = call i32 @unknown_3b4e2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a54e

bb:                                               ; preds = %dec_label_pc_1a520
  %v1_1a54c = call i32 @function_1a553()
  br label %dec_label_pc_1a54e

dec_label_pc_1a54e:                               ; preds = %bb, %dec_label_pc_1a520
  %v2_1a54c = phi i32 [ %v1_1a54c, %bb ], [ 0, %dec_label_pc_1a520 ]
  ret i32 %v2_1a54c
}

define i32 @function_1a553() local_unnamed_addr {
dec_label_pc_1a553:
  %v0_1a554 = load i32, i32* @eax, align 4
  ret i32 %v0_1a554
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a556:
  %v1_1a574 = call i32 @unknown_3b5cc(i32 %arg1)
  %v2_1a583 = call i32 @unknown_3b54e(i32 %arg1, i32 %v1_1a574)
  store i32 %arg1, i32* @eax, align 4
  %v1_1a58e = call i32 @function_34a76(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a59f

bb:                                               ; preds = %dec_label_pc_1a556
  %v1_1a59d = call i32 @function_1a5bd()
  store i32 %v1_1a59d, i32* @eax, align 4
  br label %dec_label_pc_1a59f

dec_label_pc_1a59f:                               ; preds = %bb, %dec_label_pc_1a556
  %v0_1a59f = call i32 @function_1a5b8()
  ret i32 %v0_1a59f

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1a5a2() local_unnamed_addr {
dec_label_pc_1a5a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a5a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a5a2
}

define i32 @function_1a5b8() local_unnamed_addr {
dec_label_pc_1a5b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a5bd() local_unnamed_addr {
dec_label_pc_1a5bd:
  %v0_1a5c2 = load i32, i32* @eax, align 4
  ret i32 %v0_1a5c2
}

define i32 @_ZN5boost15foreach_detail_7containISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS0_8auto_anyIPT_EERSB_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a5c3:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a5ec = call i32 @unknown_3b669(i32 %arg2)
  store i32 %v1_1a5ec, i32* %stack_var_-20, align 4
  %v2_1a5f4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a601 = call i32 @unknown_3b6c1(i32 %arg1, i32 %v2_1a5f4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a615

bb:                                               ; preds = %dec_label_pc_1a5c3
  %v1_1a613 = call i32 @function_1a61a()
  br label %dec_label_pc_1a615

dec_label_pc_1a615:                               ; preds = %bb, %dec_label_pc_1a5c3
  %v2_1a613 = phi i32 [ %v1_1a613, %bb ], [ %arg1, %dec_label_pc_1a5c3 ]
  ret i32 %v2_1a613

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a61a() local_unnamed_addr {
dec_label_pc_1a61a:
  %v0_1a61b = load i32, i32* @eax, align 4
  ret i32 %v0_1a61b
}

define i32 @_ZN5boost15foreach_detail_5beginISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a61e:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a64d = call i32 @unknown_3b761(i32 %arg2)
  %v1_1a652 = inttoptr i32 %v1_1a64d to i32*
  %v2_1a652 = load i32, i32* %v1_1a652, align 4
  %v1_1a657 = call i32 @unknown_3b78e(i32 %v2_1a652)
  %v2_1a65c = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a666 = call i32 @unknown_3b7bb(i32 %v2_1a65c, i32 %v1_1a657)
  %v2_1a67b = call i32 @unknown_3b806(i32 %arg1, i32 %v2_1a65c)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a68f

bb:                                               ; preds = %dec_label_pc_1a61e
  %v1_1a68d = call i32 @function_1a694()
  br label %dec_label_pc_1a68f

dec_label_pc_1a68f:                               ; preds = %bb, %dec_label_pc_1a61e
  %v2_1a68d = phi i32 [ %v1_1a68d, %bb ], [ %arg1, %dec_label_pc_1a61e ]
  ret i32 %v2_1a68d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a694() local_unnamed_addr {
dec_label_pc_1a694:
  %v0_1a695 = load i32, i32* @eax, align 4
  ret i32 %v0_1a695
}

define i32 @_ZN5boost15foreach_detail_3endISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISF_SG_EEPSC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a698:
  %stack_var_-20 = alloca i32, align 4
  %v1_1a6c7 = call i32 @unknown_3b7db(i32 %arg2)
  %v1_1a6cc = inttoptr i32 %v1_1a6c7 to i32*
  %v2_1a6cc = load i32, i32* %v1_1a6cc, align 4
  %v1_1a6d1 = call i32 @unknown_3b808(i32 %v2_1a6cc)
  %v2_1a6d6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1a6e0 = call i32 @unknown_3b8c5(i32 %v2_1a6d6, i32 %v1_1a6d1)
  %v2_1a6f5 = call i32 @unknown_3b880(i32 %arg1, i32 %v2_1a6d6)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a709

bb:                                               ; preds = %dec_label_pc_1a698
  %v1_1a707 = call i32 @function_1a70e()
  br label %dec_label_pc_1a709

dec_label_pc_1a709:                               ; preds = %bb, %dec_label_pc_1a698
  %v2_1a707 = phi i32 [ %v1_1a707, %bb ], [ %arg1, %dec_label_pc_1a698 ]
  ret i32 %v2_1a707

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1a70e() local_unnamed_addr {
dec_label_pc_1a70e:
  %v0_1a70f = load i32, i32* @eax, align 4
  ret i32 %v0_1a70f
}

define i32 @_ZN5boost15foreach_detail_4doneISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEEbRKNS0_13auto_any_baseESF_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1a712:
  %v1_1a73c = call i32 @unknown_3b989(i32 %arg2)
  store i32 %v1_1a73c, i32* @ebx, align 4
  %v1_1a749 = call i32 @unknown_3b989(i32 %arg1)
  %v0_1a74e = load i32, i32* @ebx, align 4
  %v2_1a755 = call i32 @unknown_3b9b6(i32 %v1_1a749, i32 %v0_1a74e)
  store i32 %v2_1a755, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a766

bb:                                               ; preds = %dec_label_pc_1a712
  %v1_1a764 = call i32 @function_1a76b()
  br label %dec_label_pc_1a766

dec_label_pc_1a766:                               ; preds = %bb, %dec_label_pc_1a712
  %v2_1a764 = phi i32 [ %v1_1a764, %bb ], [ %v2_1a755, %dec_label_pc_1a712 ]
  ret i32 %v2_1a764

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3b989, { 1, 0 }
}

define i32 @function_1a76b() local_unnamed_addr {
dec_label_pc_1a76b:
  %v0_1a770 = load i32, i32* @eax, align 4
  ret i32 %v0_1a770
}

define i32 @_ZN5boost15foreach_detail_4nextISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a771:
  %v1_1a794 = call i32 @unknown_3b9e8(i32 %arg1)
  %v1_1a79c = call i32 @unknown_3ba55(i32 %v1_1a794)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a7ad

bb:                                               ; preds = %dec_label_pc_1a771
  %v1_1a7ab = call i32 @function_1a7b2()
  br label %dec_label_pc_1a7ad

dec_label_pc_1a7ad:                               ; preds = %bb, %dec_label_pc_1a771
  %v2_1a7ab = phi i32 [ %v1_1a7ab, %bb ], [ 0, %dec_label_pc_1a771 ]
  ret i32 %v2_1a7ab
}

define i32 @function_1a7b2() local_unnamed_addr {
dec_label_pc_1a7b2:
  %v0_1a7b3 = load i32, i32* @eax, align 4
  ret i32 %v0_1a7b3
}

define i32 @_ZN5boost15foreach_detail_5derefISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISE_SF_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a7b4:
  %v1_1a7d7 = call i32 @unknown_3ba2b(i32 %arg1)
  %v1_1a7df = call i32 @unknown_3bad8(i32 %v1_1a7d7)
  store i32 %v1_1a7df, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a7f0

bb:                                               ; preds = %dec_label_pc_1a7b4
  %v1_1a7ee = call i32 @function_1a7f5()
  br label %dec_label_pc_1a7f0

dec_label_pc_1a7f0:                               ; preds = %bb, %dec_label_pc_1a7b4
  %v2_1a7ee = phi i32 [ %v1_1a7ee, %bb ], [ %v1_1a7df, %dec_label_pc_1a7b4 ]
  ret i32 %v2_1a7ee
}

define i32 @function_1a7f5() local_unnamed_addr {
dec_label_pc_1a7f5:
  %v0_1a7f6 = load i32, i32* @eax, align 4
  ret i32 %v0_1a7f6
}

define i32 @_ZNKSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE5countERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a7f8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_1a818 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1a822 = call i32 @unknown_3bb4e(i32 %v2_1a818, i32 %arg1)
  %v2_1a82d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg2, i32* @ecx, align 4
  %v3_1a83e = call i32 @unknown_3bb98(i32 %v2_1a82d, i32 %arg1, i32 %arg2)
  %v2_1a853 = call i32 @unknown_3bc84(i32 %v2_1a82d, i32 %v2_1a818)
  %v4_1a858 = trunc i32 %v2_1a853 to i8
  %v5_1a858 = icmp eq i8 %v4_1a858, 0
  %. = zext i1 %v5_1a858 to i32
  store i32 %., i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a874

bb:                                               ; preds = %dec_label_pc_1a7f8
  %v1_1a872 = call i32 @function_1a879()
  br label %dec_label_pc_1a874

dec_label_pc_1a874:                               ; preds = %bb, %dec_label_pc_1a7f8
  %v2_1a872 = phi i32 [ %v1_1a872, %bb ], [ %., %dec_label_pc_1a7f8 ]
  ret i32 %v2_1a872

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1a879() local_unnamed_addr {
dec_label_pc_1a879:
  %v0_1a87a = load i32, i32* @eax, align 4
  ret i32 %v0_1a87a
}

define i32 @_ZNSt4pairIKSt6vectorIhSaIhEES2_ED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a87c:
  %v1_1a897 = add i32 %arg1, 12
  store i32 %v1_1a897, i32* @eax, align 4
  %v1_1a89d = call i32 @function_2fd5e(i32 %v1_1a897)
  store i32 %arg1, i32* @eax, align 4
  %v1_1a8a8 = call i32 @function_2fd5e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1a8b9

bb:                                               ; preds = %dec_label_pc_1a87c
  %v1_1a8b7 = call i32 @function_1a8d7()
  store i32 %v1_1a8b7, i32* @eax, align 4
  br label %dec_label_pc_1a8b9

dec_label_pc_1a8b9:                               ; preds = %bb, %dec_label_pc_1a87c
  %v0_1a8b9 = call i32 @function_1a8d2()
  ret i32 %v0_1a8b9

; uselistorder directives
  uselistorder i32 (i32)* @function_2fd5e, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1a8bc() local_unnamed_addr {
dec_label_pc_1a8bc:
  %eax.global-to-local = alloca i32, align 4
  %v0_1a8bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1a8bc
}

define i32 @function_1a8d2() local_unnamed_addr {
dec_label_pc_1a8d2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a8d7() local_unnamed_addr {
dec_label_pc_1a8d7:
  %v0_1a8dc = load i32, i32* @eax, align 4
  ret i32 %v0_1a8dc
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEEixERS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a8de:
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_1a8fc = ptrtoint i32* %stack_var_-28 to i32
  %v3_1a910 = call i32 @unknown_3bdaa(i32 %v2_1a8fc, i32 %arg1, i32 %arg2)
  %v2_1a918 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @edx, align 4
  %v2_1a925 = call i32 @unknown_3bec6(i32 %v2_1a918, i32 %arg1)
  %v2_1a93a = call i32 @unknown_3bf10(i32 %v2_1a8fc, i32 %v2_1a918)
  %v4_1a93f = trunc i32 %v2_1a93a to i8
  %v5_1a93f = icmp eq i8 %v4_1a93f, 0
  %v1_1a941 = icmp eq i1 %v5_1a93f, false
  br i1 %v1_1a941, label %dec_label_pc_1a98b, label %dec_label_pc_1a943

dec_label_pc_1a943:                               ; preds = %dec_label_pc_1a8de
  %v1_1a949 = call i32 @unknown_3be4c(i32 %v2_1a8fc)
  store i32 %v1_1a949, i32* @ebx, align 4
  %v2_1a950 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %arg1, i32* @edx, align 4
  %v2_1a95d = call i32 @unknown_3be02(i32 %v2_1a950, i32 %arg1)
  %v0_1a965 = load i32, i32* @ebx, align 4
  %v2_1a970 = ptrtoint i32* %stack_var_-17 to i32
  %v3_1a976 = call i32 @unknown_3be7e(i32 %v2_1a970, i32 %arg2, i32 %v0_1a965)
  %v4_1a97b = trunc i32 %v3_1a976 to i8
  %v5_1a97b = icmp ne i8 %v4_1a97b, 0
  %phitmp28 = icmp eq i1 %v5_1a97b, false
  br label %dec_label_pc_1a98b

dec_label_pc_1a98b:                               ; preds = %dec_label_pc_1a943, %dec_label_pc_1a8de
  %storemerge = phi i1 [ false, %dec_label_pc_1a8de ], [ %phitmp28, %dec_label_pc_1a943 ]
  br i1 %storemerge, label %dec_label_pc_1a9f2, label %dec_label_pc_1a98f

dec_label_pc_1a98f:                               ; preds = %dec_label_pc_1a98b
  %v2_1a98f = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1a98f, i32* @eax, align 4
  %v1_1a992 = load i32, i32* @esp, align 4
  %v2_1a992 = inttoptr i32 %v1_1a992 to i32*
  store i32 %v2_1a98f, i32* %v2_1a992, align 4
  %v0_1a995 = call i32 @function_2fd8a()
  %v1_1a99d = load i32, i32* @esp, align 4
  %v2_1a99d = add i32 %v1_1a99d, 8
  %v3_1a99d = inttoptr i32 %v2_1a99d to i32*
  store i32 %v2_1a98f, i32* %v3_1a99d, align 4
  %v1_1a9a4 = load i32, i32* @esp, align 4
  %v2_1a9a4 = add i32 %v1_1a9a4, 4
  %v3_1a9a4 = inttoptr i32 %v2_1a9a4 to i32*
  store i32 %arg2, i32* %v3_1a9a4, align 4
  %v2_1a9a8 = ptrtoint i32* %stack_var_-64 to i32
  %v1_1a9ab = load i32, i32* @esp, align 4
  %v2_1a9ab = inttoptr i32 %v1_1a9ab to i32*
  store i32 %v2_1a9a8, i32* %v2_1a9ab, align 4
  %v0_1a9ae = call i32 @unknown_3bf50()
  %v2_1a9b3 = ptrtoint i32* %stack_var_-92 to i32
  %v1_1a9b9 = load i32, i32* @esp, align 4
  %v2_1a9b9 = add i32 %v1_1a9b9, 12
  %v3_1a9b9 = inttoptr i32 %v2_1a9b9 to i32*
  store i32 %v2_1a9a8, i32* %v3_1a9b9, align 4
  %v3_1a9bd = load i32, i32* %stack_var_-28, align 4
  %v1_1a9c0 = load i32, i32* @esp, align 4
  %v2_1a9c0 = add i32 %v1_1a9c0, 8
  %v3_1a9c0 = inttoptr i32 %v2_1a9c0 to i32*
  store i32 %v3_1a9bd, i32* %v3_1a9c0, align 4
  %v1_1a9c7 = load i32, i32* @esp, align 4
  %v2_1a9c7 = add i32 %v1_1a9c7, 4
  %v3_1a9c7 = inttoptr i32 %v2_1a9c7 to i32*
  store i32 %arg1, i32* %v3_1a9c7, align 4
  %v1_1a9cb = load i32, i32* @esp, align 4
  %v2_1a9cb = inttoptr i32 %v1_1a9cb to i32*
  store i32 %v2_1a9b3, i32* %v2_1a9cb, align 4
  %v0_1a9ce = call i32 @unknown_3bfcc()
  %v0_1a9d3 = load i32, i32* @esp, align 4
  %v1_1a9d3 = add i32 %v0_1a9d3, -4
  %v3_1a9d6 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_1a9d6, i32* %stack_var_-28, align 4
  store i32 %v2_1a9a8, i32* @eax, align 4
  %v2_1a9df = inttoptr i32 %v1_1a9d3 to i32*
  store i32 %v2_1a9a8, i32* %v2_1a9df, align 4
  %v0_1a9e2 = load i32, i32* %stack_var_-28, align 4
  %v1_1a9e2 = call i32 @function_3515a(i32 %v0_1a9e2)
  %v1_1a9ea = load i32, i32* @esp, align 4
  %v2_1a9ea = inttoptr i32 %v1_1a9ea to i32*
  store i32 %v2_1a98f, i32* %v2_1a9ea, align 4
  %v0_1a9ed = load i32, i32* %stack_var_-28, align 4
  %v1_1a9ed = call i32 @function_2fdc0(i32 %v0_1a9ed)
  br label %dec_label_pc_1a9f2

dec_label_pc_1a9f2:                               ; preds = %dec_label_pc_1a98f, %dec_label_pc_1a98b
  %v1_1a9f5 = load i32, i32* @esp, align 4
  %v2_1a9f5 = inttoptr i32 %v1_1a9f5 to i32*
  store i32 %v2_1a8fc, i32* %v2_1a9f5, align 4
  %v0_1a9f8 = load i32, i32* %stack_var_-28, align 4
  %v1_1a9f8 = call i32 @unknown_3be4c(i32 %v0_1a9f8)
  %v1_1a9fd = add i32 %v1_1a9f8, 12
  store i32 %v1_1a9fd, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aa0c

bb:                                               ; preds = %dec_label_pc_1a9f2
  %v1_1aa0a = call i32 @function_1aa39()
  store i32 %v1_1aa0a, i32* @eax, align 4
  br label %dec_label_pc_1aa0c

dec_label_pc_1aa0c:                               ; preds = %bb, %dec_label_pc_1a9f2
  %v0_1aa0c = call i32 @function_1aa34()
  ret i32 %v0_1aa0c

; uselistorder directives
  uselistorder i32 %v2_1a8fc, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @unknown_3be4c, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3, 5 }
}

define i32 @function_1aa0e() local_unnamed_addr {
dec_label_pc_1aa0e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa0e = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1aa0e, i32* @ebx, align 4
  %v0_1aa10 = load i32, i32* @ebp, align 4
  %v1_1aa10 = add i32 %v0_1aa10, -60
  store i32 %v1_1aa10, i32* @eax, align 4
  %v1_1aa16 = call i32 @function_3515a(i32 %v1_1aa10)
  store i32 %v1_1aa16, i32* %eax.global-to-local, align 4
  %v0_1aa1b = call i32 @function_1aa1f()
  store i32 %v0_1aa1b, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aa1b

; uselistorder directives
  uselistorder i32 (i32)* @function_3515a, { 1, 0 }
}

define i32 @function_1aa1d() local_unnamed_addr {
dec_label_pc_1aa1d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1aa1d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1aa1d
}

define i32 @function_1aa1f() local_unnamed_addr {
dec_label_pc_1aa1f:
  %v0_1aa1f = load i32, i32* @ebp, align 4
  %v1_1aa1f = add i32 %v0_1aa1f, -36
  %v1_1aa25 = call i32 @function_2fdc0(i32 %v1_1aa1f)
  %v0_1aa2a = load i32, i32* @ebx, align 4
  ret i32 %v0_1aa2a

; uselistorder directives
  uselistorder i32 (i32)* @function_2fdc0, { 1, 0 }
}

define i32 @function_1aa34() local_unnamed_addr {
dec_label_pc_1aa34:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1aa39() local_unnamed_addr {
dec_label_pc_1aa39:
  %v0_1aa39 = load i32, i32* @ebp, align 4
  %v1_1aa39 = add i32 %v0_1aa39, -4
  %v2_1aa39 = inttoptr i32 %v1_1aa39 to i32*
  %v3_1aa39 = load i32, i32* %v2_1aa39, align 4
  store i32 %v3_1aa39, i32* @ebx, align 4
  %v0_1aa3d = load i32, i32* @eax, align 4
  ret i32 %v0_1aa3d
}

define i32 @_ZNKSt6vectorIhSaIhEE2atEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa3e:
  %v2_1aa68 = call i32 @unknown_3c1a2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  %v2_1aa7a = call i32 @function_2fb36(i32 %arg1, i32 %arg2)
  store i32 %v2_1aa7a, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_1aa8b

bb:                                               ; preds = %dec_label_pc_1aa3e
  %v1_1aa89 = call i32 @function_1aa90()
  br label %dec_label_pc_1aa8b

dec_label_pc_1aa8b:                               ; preds = %bb, %dec_label_pc_1aa3e
  %v2_1aa89 = phi i32 [ %v1_1aa89, %bb ], [ %v2_1aa7a, %dec_label_pc_1aa3e ]
  ret i32 %v2_1aa89

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1aa90() local_unnamed_addr {
dec_label_pc_1aa90:
  %v0_1aa91 = load i32, i32* @eax, align 4
  ret i32 %v0_1aa91
}

define i32 @_ZN5boost13apply_visitorI14CScriptVisitorKNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEENT_11result_typeERKSB_RT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1aa92:
  %v2_1aabc = call i32 @unknown_3c248(i32 %arg2, i32 %arg1)
  store i32 %v2_1aabc, i32* @eax, align 4
  store i32 0, i32* @edx, align 4
  br i1 true, label %bb, label %dec_label_pc_1aacd

bb:                                               ; preds = %dec_label_pc_1aa92
  %v1_1aacb = call i32 @function_1aad2()
  br label %dec_label_pc_1aacd

dec_label_pc_1aacd:                               ; preds = %bb, %dec_label_pc_1aa92
  %v2_1aacb = phi i32 [ %v1_1aacb, %bb ], [ %v2_1aabc, %dec_label_pc_1aa92 ]
  ret i32 %v2_1aacb
}

define i32 @function_1aad2() local_unnamed_addr {
dec_label_pc_1aad2:
  %v0_1aad3 = load i32, i32* @eax, align 4
  ret i32 %v0_1aad3
}

define i32 @_ZN5boost15foreach_detail_7containIKSt6vectorI7CPubKeySaIS3_EEEENS0_8auto_anyIPT_EERS8_PN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1aad4:
  %stack_var_-20 = alloca i32, align 4
  %v1_1aafd = call i32 @unknown_3c2de(i32 %arg2)
  store i32 %v1_1aafd, i32* %stack_var_-20, align 4
  %v2_1ab05 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ab12 = call i32 @unknown_3c336(i32 %arg1, i32 %v2_1ab05)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ab26

bb:                                               ; preds = %dec_label_pc_1aad4
  %v1_1ab24 = call i32 @function_1ab2b()
  br label %dec_label_pc_1ab26

dec_label_pc_1ab26:                               ; preds = %bb, %dec_label_pc_1aad4
  %v2_1ab24 = phi i32 [ %v1_1ab24, %bb ], [ %arg1, %dec_label_pc_1aad4 ]
  ret i32 %v2_1ab24

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ab2b() local_unnamed_addr {
dec_label_pc_1ab2b:
  %v0_1ab2c = load i32, i32* @eax, align 4
  ret i32 %v0_1ab2c
}

define i32 @_ZN5boost15foreach_detail_5beginISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ab2f:
  %stack_var_-20 = alloca i32, align 4
  %v1_1ab5e = call i32 @unknown_3c3d6(i32 %arg2)
  %v1_1ab63 = inttoptr i32 %v1_1ab5e to i32*
  %v2_1ab63 = load i32, i32* %v1_1ab63, align 4
  %v1_1ab68 = call i32 @unknown_3c403(i32 %v2_1ab63)
  %v2_1ab6d = ptrtoint i32* %stack_var_-20 to i32
  %v2_1ab77 = call i32 @unknown_3c430(i32 %v2_1ab6d, i32 %v1_1ab68)
  %v2_1ab8c = call i32 @unknown_3c47b(i32 %arg1, i32 %v2_1ab6d)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aba0

bb:                                               ; preds = %dec_label_pc_1ab2f
  %v1_1ab9e = call i32 @function_1aba5()
  br label %dec_label_pc_1aba0

dec_label_pc_1aba0:                               ; preds = %bb, %dec_label_pc_1ab2f
  %v2_1ab9e = phi i32 [ %v1_1ab9e, %bb ], [ %arg1, %dec_label_pc_1ab2f ]
  ret i32 %v2_1ab9e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1aba5() local_unnamed_addr {
dec_label_pc_1aba5:
  %v0_1aba6 = load i32, i32* @eax, align 4
  ret i32 %v0_1aba6
}

define i32 @_ZN5boost15foreach_detail_3endISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_8auto_anyINS0_16foreach_iteratorIT_T0_E4typeEEERKNS0_13auto_any_baseEPNS0_9type2typeISB_SC_EEPNS7_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1aba9:
  %stack_var_-20 = alloca i32, align 4
  %v1_1abd8 = call i32 @unknown_3c450(i32 %arg2)
  %v1_1abdd = inttoptr i32 %v1_1abd8 to i32*
  %v2_1abdd = load i32, i32* %v1_1abdd, align 4
  %v1_1abe2 = call i32 @unknown_3c47d(i32 %v2_1abdd)
  %v2_1abe7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1abf1 = call i32 @unknown_3c53a(i32 %v2_1abe7, i32 %v1_1abe2)
  %v2_1ac06 = call i32 @unknown_3c4f5(i32 %arg1, i32 %v2_1abe7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ac1a

bb:                                               ; preds = %dec_label_pc_1aba9
  %v1_1ac18 = call i32 @function_1ac1f()
  br label %dec_label_pc_1ac1a

dec_label_pc_1ac1a:                               ; preds = %bb, %dec_label_pc_1aba9
  %v2_1ac18 = phi i32 [ %v1_1ac18, %bb ], [ %arg1, %dec_label_pc_1aba9 ]
  ret i32 %v2_1ac18

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ac1f() local_unnamed_addr {
dec_label_pc_1ac1f:
  %v0_1ac20 = load i32, i32* @eax, align 4
  ret i32 %v0_1ac20
}

define i32 @_ZN5boost15foreach_detail_4doneISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEEbRKNS0_13auto_any_baseESB_PNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ac23:
  %v1_1ac4d = call i32 @unknown_3c5fe(i32 %arg2)
  store i32 %v1_1ac4d, i32* @ebx, align 4
  %v1_1ac5a = call i32 @unknown_3c5fe(i32 %arg1)
  %v0_1ac5f = load i32, i32* @ebx, align 4
  %v2_1ac66 = call i32 @unknown_3c62b(i32 %v1_1ac5a, i32 %v0_1ac5f)
  store i32 %v2_1ac66, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ac77

bb:                                               ; preds = %dec_label_pc_1ac23
  %v1_1ac75 = call i32 @function_1ac7c()
  br label %dec_label_pc_1ac77

dec_label_pc_1ac77:                               ; preds = %bb, %dec_label_pc_1ac23
  %v2_1ac75 = phi i32 [ %v1_1ac75, %bb ], [ %v2_1ac66, %dec_label_pc_1ac23 ]
  ret i32 %v2_1ac75

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3c5fe, { 1, 0 }
}

define i32 @function_1ac7c() local_unnamed_addr {
dec_label_pc_1ac7c:
  %v0_1ac81 = load i32, i32* @eax, align 4
  ret i32 %v0_1ac81
}

define i32 @_ZN5boost15foreach_detail_4nextISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEEvRKNS0_13auto_any_baseEPNS0_9type2typeIT_T0_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ac82:
  %v1_1aca5 = call i32 @unknown_3c65d(i32 %arg1)
  %v1_1acad = call i32 @unknown_3c6de(i32 %v1_1aca5)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1acbe

bb:                                               ; preds = %dec_label_pc_1ac82
  %v1_1acbc = call i32 @function_1acc3()
  br label %dec_label_pc_1acbe

dec_label_pc_1acbe:                               ; preds = %bb, %dec_label_pc_1ac82
  %v2_1acbc = phi i32 [ %v1_1acbc, %bb ], [ 0, %dec_label_pc_1ac82 ]
  ret i32 %v2_1acbc
}

define i32 @function_1acc3() local_unnamed_addr {
dec_label_pc_1acc3:
  %v0_1acc4 = load i32, i32* @eax, align 4
  ret i32 %v0_1acc4
}

define i32 @_ZN5boost15foreach_detail_5derefISt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb1EEEEENS0_17foreach_referenceIT_T0_E4typeERKNS0_13auto_any_baseEPNS0_9type2typeISA_SB_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1acc5:
  %v1_1ace8 = call i32 @unknown_3c6a0(i32 %arg1)
  %v1_1acf0 = call i32 @unknown_3c75b(i32 %v1_1ace8)
  store i32 %v1_1acf0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ad01

bb:                                               ; preds = %dec_label_pc_1acc5
  %v1_1acff = call i32 @function_1ad06()
  br label %dec_label_pc_1ad01

dec_label_pc_1ad01:                               ; preds = %bb, %dec_label_pc_1acc5
  %v2_1acff = phi i32 [ %v1_1acff, %bb ], [ %v1_1acf0, %dec_label_pc_1acc5 ]
  ret i32 %v2_1acff
}

define i32 @function_1ad06() local_unnamed_addr {
dec_label_pc_1ad06:
  %v0_1ad07 = load i32, i32* @eax, align 4
  ret i32 %v0_1ad07
}

define i32 @_ZNKSt6vectorI7CPubKeySaIS0_EE4sizeEv() local_unnamed_addr {
dec_label_pc_1ad08:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v1_1ad22 = add i32 %tmp3, 4
  %v2_1ad22 = inttoptr i32 %v1_1ad22 to i32*
  %v3_1ad22 = load i32, i32* %v2_1ad22, align 4
  %v1_1ad2a = inttoptr i32 %tmp3 to i32*
  %v2_1ad2a = load i32, i32* %v1_1ad2a, align 4
  %v2_1ad2e = sub i32 %v3_1ad22, %v2_1ad2a
  %v3_1ad32 = mul i32 %v2_1ad2e, -1057222719
  store i32 %v3_1ad32, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ad44

bb:                                               ; preds = %dec_label_pc_1ad08
  %v2_1ad42 = call i32 @function_1ad49(i32 %tmp3)
  br label %dec_label_pc_1ad44

dec_label_pc_1ad44:                               ; preds = %bb, %dec_label_pc_1ad08
  %v3_1ad42 = phi i32 [ %v2_1ad42, %bb ], [ %v3_1ad32, %dec_label_pc_1ad08 ]
  ret i32 %v3_1ad42
}

define i32 @function_1ad49(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ad49:
  %v0_1ad4a = load i32, i32* @eax, align 4
  ret i32 %v0_1ad4a
}

define i32 @_ZN7CPubKey3SetIPhEEvT_S2_(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ad4c:
  %v5_1ad72 = ptrtoint i8* %arg2 to i32
  %v6_1ad72 = sub i32 %arg3, %v5_1ad72
  %v16_1ad72 = icmp eq i32 %v6_1ad72, 0
  br i1 %v16_1ad72, label %dec_label_pc_1ad8f, label %dec_label_pc_1ad77

dec_label_pc_1ad77:                               ; preds = %dec_label_pc_1ad4c
  %v2_1ad7a = load i8, i8* %arg2, align 1
  %v3_1ad7a = zext i8 %v2_1ad7a to i32
  store i32 %v3_1ad7a, i32* @eax, align 4
  %v1_1ad83 = call i32 @function_2ad22(i32 %v3_1ad7a)
  br label %dec_label_pc_1ad8f

dec_label_pc_1ad8f:                               ; preds = %dec_label_pc_1ad4c, %dec_label_pc_1ad77
  %storemerge = phi i32 [ %v1_1ad83, %dec_label_pc_1ad77 ], [ 0, %dec_label_pc_1ad4c ]
  %v10_1ad92 = icmp eq i32 %storemerge, 0
  br i1 %v10_1ad92, label %bb, label %dec_label_pc_1ad98

bb:                                               ; preds = %dec_label_pc_1ad8f
  %v2_1ad96 = call i32 @function_1adc4(i32 0)
  br label %dec_label_pc_1ad98

dec_label_pc_1ad98:                               ; preds = %bb, %dec_label_pc_1ad8f
  %v15_1ada4 = icmp eq i32 %v6_1ad72, %storemerge
  %v1_1ada7 = icmp eq i1 %v15_1ada4, false
  br i1 %v1_1ada7, label %bb17, label %dec_label_pc_1ada9

bb17:                                             ; preds = %dec_label_pc_1ad98
  %v3_1ada7 = call i32 @function_1adc4(i32 %storemerge)
  br label %dec_label_pc_1ada9

dec_label_pc_1ada9:                               ; preds = %bb17, %dec_label_pc_1ad98
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1adc4, { 1, 0 }
  uselistorder label %dec_label_pc_1ad8f, { 1, 0 }
}

define i32 @function_1adc2() local_unnamed_addr {
dec_label_pc_1adc2:
  %eax.global-to-local = alloca i32, align 4
  %v0_1adc2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1adc2
}

define i32 @function_1adc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adc4:
  %v0_1adc4 = load i32, i32* @ebp, align 4
  %v1_1adc4 = add i32 %v0_1adc4, -28
  %v2_1adc4 = inttoptr i32 %v1_1adc4 to i32*
  %v3_1adc4 = load i32, i32* %v2_1adc4, align 4
  store i32 %v3_1adc4, i32* @eax, align 4
  %v1_1adca = call i32 @function_2ad7e(i32 %v3_1adc4)
  %v0_1adcf = load i32, i32* @ebp, align 4
  %v1_1adcf = add i32 %v0_1adcf, -12
  %v2_1adcf = inttoptr i32 %v1_1adcf to i32*
  %v3_1adcf = load i32, i32* %v2_1adcf, align 4
  %v1_1add2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1add2 = xor i32 %v1_1add2, %v3_1adcf
  %v3_1add2 = icmp eq i32 %v2_1add2, 0
  store i32 %v2_1add2, i32* @eax, align 4
  br i1 %v3_1add2, label %bb, label %dec_label_pc_1addb

bb:                                               ; preds = %dec_label_pc_1adc4
  %v1_1add9 = call i32 @function_1ade0()
  br label %dec_label_pc_1addb

dec_label_pc_1addb:                               ; preds = %bb, %dec_label_pc_1adc4
  %v2_1add9 = phi i32 [ %v1_1add9, %bb ], [ %v2_1add2, %dec_label_pc_1adc4 ]
  ret i32 %v2_1add9
}

define i32 @function_1ade0() local_unnamed_addr {
dec_label_pc_1ade0:
  %v0_1ade1 = load i32, i32* @eax, align 4
  ret i32 %v0_1ade1
}

define i32 @_ZNSt6vectorIhSaIhEE6resizeEjh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ade2:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i8, align 1
  %tmp13 = ptrtoint i32* %arg1 to i32
  %sext = mul i32 %arg3, 16777216
  %v4_1ade9 = sdiv i32 %sext, 16777216
  %v1_1adf8 = trunc i32 %v4_1ade9 to i8
  store i8 %v1_1adf8, i8* %stack_var_-40, align 1
  store i32 %tmp13, i32* @eax, align 4
  %v1_1ae0c = call i32 @function_2fe9c(i32 %tmp13)
  %v10_1ae11 = icmp ult i32 %v1_1ae0c, %arg2
  %v5_1ae17 = icmp eq i1 %v10_1ae11, false
  store i32 %tmp13, i32* @eax, align 4
  %v1_1ae67 = call i32 @function_2fe9c(i32 %tmp13)
  br i1 %v5_1ae17, label %dec_label_pc_1ae61, label %dec_label_pc_1ae1b

dec_label_pc_1ae1b:                               ; preds = %dec_label_pc_1ade2
  %v2_1ae2b = sub i32 %arg2, %v1_1ae67
  %v7_1ae2b = icmp ugt i32 %v1_1ae67, %arg2
  store i1 %v7_1ae2b, i1* @cf, align 1
  %v2_1ae2d = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1ae2d, i32* @eax, align 4
  %v2_1ae3a = call i32 @function_316c4(i32 %v2_1ae2d, i32 %tmp13)
  %v2_1ae42 = ptrtoint i8* %stack_var_-40 to i32
  %v3_1ae4d = load i32, i32* %stack_var_-20, align 4
  %v4_1ae5a = call i32 @unknown_3c8a8(i32 %tmp13, i32 %v3_1ae4d, i32 %v2_1ae2b, i32 %v2_1ae42)
  br label %dec_label_pc_1ae8d

dec_label_pc_1ae61:                               ; preds = %dec_label_pc_1ade2
  %tmp20 = icmp ule i32 %v1_1ae67, %arg2
  %v3_1ae6f = icmp ne i1 %tmp20, true
  %v5_1ae72 = icmp eq i1 %v3_1ae6f, false
  br i1 %v5_1ae72, label %dec_label_pc_1ae8d, label %dec_label_pc_1ae76

dec_label_pc_1ae76:                               ; preds = %dec_label_pc_1ae61
  %v2_1ae79 = load i32, i32* %arg1, align 4
  %v5_1ae7b = add i32 %v2_1ae79, %arg2
  store i32 %tmp13, i32* @eax, align 4
  %v2_1ae88 = call i32 @function_3712c(i32 %tmp13, i32 %v5_1ae7b)
  br label %dec_label_pc_1ae8d

dec_label_pc_1ae8d:                               ; preds = %dec_label_pc_1ae76, %dec_label_pc_1ae61, %dec_label_pc_1ae1b
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ae99

bb:                                               ; preds = %dec_label_pc_1ae8d
  %v1_1ae97 = call i32 @function_1ae9e()
  br label %dec_label_pc_1ae99

dec_label_pc_1ae99:                               ; preds = %bb, %dec_label_pc_1ae8d
  %v2_1ae97 = phi i32 [ %v1_1ae97, %bb ], [ 0, %dec_label_pc_1ae8d ]
  ret i32 %v2_1ae97

; uselistorder directives
  uselistorder i32 %tmp13, { 3, 2, 0, 1, 5, 4, 7, 6 }
  uselistorder i32 (i32)* @function_2fe9c, { 1, 0 }
}

define i32 @function_1ae9e() local_unnamed_addr {
dec_label_pc_1ae9e:
  %v0_1aea2 = load i32, i32* @eax, align 4
  ret i32 %v0_1aea2
}

define i32 @_ZN7CPubKeyC1IPhEET_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1aea4:
  store i32 %arg1, i32* @eax, align 4
  %v3_1aedb = call i32 @function_35bf0(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1aeec

bb:                                               ; preds = %dec_label_pc_1aea4
  %v1_1aeea = call i32 @function_1aef1()
  br label %dec_label_pc_1aeec

dec_label_pc_1aeec:                               ; preds = %bb, %dec_label_pc_1aea4
  %v2_1aeea = phi i32 [ %v1_1aeea, %bb ], [ 0, %dec_label_pc_1aea4 ]
  ret i32 %v2_1aeea

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1aef1() local_unnamed_addr {
dec_label_pc_1aef1:
  %v0_1aef2 = load i32, i32* @eax, align 4
  ret i32 %v0_1aef2
}

define i32 @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aef3:
  %v1_1af10 = call i32 @unknown_3ca15(i32 %arg1)
  store i32 %v1_1af10, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1af21

bb:                                               ; preds = %dec_label_pc_1aef3
  %v1_1af1f = call i32 @function_1af26()
  br label %dec_label_pc_1af21

dec_label_pc_1af21:                               ; preds = %bb, %dec_label_pc_1aef3
  %v2_1af1f = phi i32 [ %v1_1af1f, %bb ], [ %v1_1af10, %dec_label_pc_1aef3 ]
  ret i32 %v2_1af1f
}

define i32 @function_1af26() local_unnamed_addr {
dec_label_pc_1af26:
  %v0_1af27 = load i32, i32* @eax, align 4
  ret i32 %v0_1af27
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7releaseEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1af28:
  %v2_1af42 = load i32, i32* %arg1, align 4
  %v1_1af44 = icmp eq i32 %v2_1af42, 0
  br i1 %v1_1af44, label %dec_label_pc_1af69, label %dec_label_pc_1af48

dec_label_pc_1af48:                               ; preds = %dec_label_pc_1af28
  %v2_1af57 = load i32, i32* %arg1, align 4
  %v4_1af5e = trunc i32 %v2_1af57 to i8
  %v5_1af5e = icmp eq i8 %v4_1af5e, 0
  br i1 %v5_1af5e, label %dec_label_pc_1af69, label %dec_label_pc_1af6e

dec_label_pc_1af69:                               ; preds = %dec_label_pc_1af48, %dec_label_pc_1af28
  br label %dec_label_pc_1af6e

dec_label_pc_1af6e:                               ; preds = %dec_label_pc_1af48, %dec_label_pc_1af69
  %storemerge = phi i1 [ true, %dec_label_pc_1af69 ], [ false, %dec_label_pc_1af48 ]
  br i1 %storemerge, label %dec_label_pc_1af7b, label %dec_label_pc_1af72

dec_label_pc_1af72:                               ; preds = %dec_label_pc_1af6e
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_1af7b

dec_label_pc_1af7b:                               ; preds = %dec_label_pc_1af72, %dec_label_pc_1af6e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1af87

bb:                                               ; preds = %dec_label_pc_1af7b
  %v1_1af85 = call i32 @function_1af8c()
  br label %dec_label_pc_1af87

dec_label_pc_1af87:                               ; preds = %bb, %dec_label_pc_1af7b
  %v2_1af85 = phi i32 [ %v1_1af85, %bb ], [ 0, %dec_label_pc_1af7b ]
  ret i32 %v2_1af85

; uselistorder directives
  uselistorder label %dec_label_pc_1af6e, { 1, 0 }
}

define i32 @function_1af8c() local_unnamed_addr {
dec_label_pc_1af8c:
  %v0_1af8d = load i32, i32* @eax, align 4
  ret i32 %v0_1af8d
}

define i32 @_ZN5boost17enable_error_infoINS_21thread_resource_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1af8e:
  %v2_1afb8 = call i32 @unknown_3cade(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1afcc

bb:                                               ; preds = %dec_label_pc_1af8e
  %v1_1afca = call i32 @function_1afd1()
  br label %dec_label_pc_1afcc

dec_label_pc_1afcc:                               ; preds = %bb, %dec_label_pc_1af8e
  %v2_1afca = phi i32 [ %v1_1afca, %bb ], [ %arg1, %dec_label_pc_1af8e ]
  ret i32 %v2_1afca

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1afd1() local_unnamed_addr {
dec_label_pc_1afd1:
  %v0_1afd2 = load i32, i32* @eax, align 4
  ret i32 %v0_1afd2
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1afd5:
  %eax.global-to-local = alloca i32, align 4
  %v0_1afda = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1afda
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32* %arg1) {
dec_label_pc_1afe0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_381d8_type* @global_var_381d8.2264 to i32), i32* %arg1, align 4
  %v1_1b003 = add i32 %tmp99, 8
  %v2_1b003 = inttoptr i32 %v1_1b003 to i32*
  store i32 ptrtoint (i32* @global_var_381ec.2265 to i32), i32* %v2_1b003, align 4
  store i32 %v1_1b003, i32* @eax, align 4
  %v1_1b013 = call i32 @function_24998(i32 %v1_1b003)
  store i32 %tmp99, i32* @eax, align 4
  %v1_1b01e = call i32 @function_29fc0(i32 %tmp99)
  %v1_1b02d = call i32 @function_1b03a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1b003, { 1, 0, 2 }
}

define i32 @function_1b03a() local_unnamed_addr {
dec_label_pc_1b03a:
  %v0_1b03a = load i32, i32* @ebp, align 4
  %v1_1b03a = add i32 %v0_1b03a, -12
  %v2_1b03a = inttoptr i32 %v1_1b03a to i32*
  %v3_1b03a = load i32, i32* %v2_1b03a, align 4
  %v1_1b03d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b03d = xor i32 %v1_1b03d, %v3_1b03a
  %v3_1b03d = icmp eq i32 %v2_1b03d, 0
  store i32 %v2_1b03d, i32* @eax, align 4
  br i1 %v3_1b03d, label %bb, label %dec_label_pc_1b046

bb:                                               ; preds = %dec_label_pc_1b03a
  %v1_1b044 = call i32 @function_1b04b()
  br label %dec_label_pc_1b046

dec_label_pc_1b046:                               ; preds = %bb, %dec_label_pc_1b03a
  %v2_1b044 = phi i32 [ %v1_1b044, %bb ], [ %v2_1b03d, %dec_label_pc_1b03a ]
  ret i32 %v2_1b044
}

define i32 @function_1b04b() local_unnamed_addr {
dec_label_pc_1b04b:
  %v0_1b04c = load i32, i32* @eax, align 4
  ret i32 %v0_1b04c
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b04e:
  %v4_1b04e = add i32 %arg1, -8
  %v1_1b053 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %v4_1b04e)
  ret i32 %v1_1b053
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) {
dec_label_pc_1b056:
  store i32 %arg1, i32* @eax, align 4
  %v1_1b073 = call i32 @function_3602e(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1b093() local_unnamed_addr {
dec_label_pc_1b093:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b093 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b093 = add i32 %v0_1b093, -1
  store i32 %v1_1b093, i32* %ecx.global-to-local, align 4
  %v0_1b095 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b095
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_21thread_resource_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b096:
  %v2_1b0c0 = call i32 @unknown_3cc4a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b0d4

bb:                                               ; preds = %dec_label_pc_1b096
  %v1_1b0d2 = call i32 @function_1b0d9()
  br label %dec_label_pc_1b0d4

dec_label_pc_1b0d4:                               ; preds = %bb, %dec_label_pc_1b096
  %v2_1b0d2 = phi i32 [ %v1_1b0d2, %bb ], [ %arg1, %dec_label_pc_1b096 ]
  ret i32 %v2_1b0d2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b0d9() local_unnamed_addr {
dec_label_pc_1b0d9:
  %v0_1b0da = load i32, i32* @eax, align 4
  ret i32 %v0_1b0da
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b0e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b0e2
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b0ec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b0ec
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_1b0f2:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38178_type* @global_var_38178.2266 to i32), i32* %arg1, align 4
  %v1_1b115 = add i32 %tmp99, 8
  %v2_1b115 = inttoptr i32 %v1_1b115 to i32*
  store i32 ptrtoint (i32* @global_var_38194.2267 to i32), i32* %v2_1b115, align 4
  %v1_1b11f = add i32 %tmp99, 28
  %v2_1b11f = inttoptr i32 %v1_1b11f to i32*
  store i32 ptrtoint (i32* @global_var_381a4.2268 to i32), i32* %v2_1b11f, align 4
  store i32 %v1_1b11f, i32* @eax, align 4
  %v1_1b12f = call i32 @function_25ed8(i32 %v1_1b11f)
  store i32 %tmp99, i32* @eax, align 4
  %v1_1b13a = call i32 @function_360d2(i32 %tmp99)
  %v1_1b149 = call i32 @function_1b156()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1b11f, { 1, 0, 2 }
}

define i32 @function_1b156() local_unnamed_addr {
dec_label_pc_1b156:
  %v0_1b156 = load i32, i32* @ebp, align 4
  %v1_1b156 = add i32 %v0_1b156, -12
  %v2_1b156 = inttoptr i32 %v1_1b156 to i32*
  %v3_1b156 = load i32, i32* %v2_1b156, align 4
  %v1_1b159 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b159 = xor i32 %v1_1b159, %v3_1b156
  %v3_1b159 = icmp eq i32 %v2_1b159, 0
  store i32 %v2_1b159, i32* @eax, align 4
  br i1 %v3_1b159, label %bb, label %dec_label_pc_1b162

bb:                                               ; preds = %dec_label_pc_1b156
  %v1_1b160 = call i32 @function_1b167()
  br label %dec_label_pc_1b162

dec_label_pc_1b162:                               ; preds = %bb, %dec_label_pc_1b156
  %v2_1b160 = phi i32 [ %v1_1b160, %bb ], [ %v2_1b159, %dec_label_pc_1b156 ]
  ret i32 %v2_1b160
}

define i32 @function_1b167() local_unnamed_addr {
dec_label_pc_1b167:
  %v0_1b168 = load i32, i32* @eax, align 4
  ret i32 %v0_1b168
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b16a:
  %v4_1b16a = add i32 %arg1, -28
  %v1_1b16f = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %v4_1b16a)
  ret i32 %v1_1b16f
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b171:
  %v4_1b171 = add i32 %arg1, -8
  %v1_1b176 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %v4_1b171)
  ret i32 %v1_1b176
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_1b178:
  store i32 %arg1, i32* @eax, align 4
  %v1_1b195 = call i32 @function_3625c(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1b1b5() local_unnamed_addr {
dec_label_pc_1b1b5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b1b5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b1b5 = add i32 %v0_1b1b5, -1
  store i32 %v1_1b1b5, i32* %ecx.global-to-local, align 4
  %v0_1b1b7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b1b7
}

define i32 @_ZN5boost17enable_error_infoINS_10lock_errorEEENS_16exception_detail29enable_error_info_return_typeIT_E4typeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b1b8:
  %v2_1b1e2 = call i32 @unknown_3ce1e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b1f6

bb:                                               ; preds = %dec_label_pc_1b1b8
  %v1_1b1f4 = call i32 @function_1b1fb()
  br label %dec_label_pc_1b1f6

dec_label_pc_1b1f6:                               ; preds = %bb, %dec_label_pc_1b1b8
  %v2_1b1f4 = phi i32 [ %v1_1b1f4, %bb ], [ %arg1, %dec_label_pc_1b1b8 ]
  ret i32 %v2_1b1f4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b1fb() local_unnamed_addr {
dec_label_pc_1b1fb:
  %v0_1b1fc = load i32, i32* @eax, align 4
  ret i32 %v0_1b1fc
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b1ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b204 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b204
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_1b20a:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38138_type* @global_var_38138.2270 to i32), i32* %arg1, align 4
  %v1_1b22d = add i32 %tmp99, 8
  %v2_1b22d = inttoptr i32 %v1_1b22d to i32*
  store i32 ptrtoint (i32* @global_var_3814c.2271 to i32), i32* %v2_1b22d, align 4
  store i32 %v1_1b22d, i32* @eax, align 4
  %v1_1b23d = call i32 @function_24bc2(i32 %v1_1b22d)
  store i32 %tmp99, i32* @eax, align 4
  %v1_1b248 = call i32 @function_26356(i32 %tmp99)
  %v1_1b257 = call i32 @function_1b264()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1b22d, { 1, 0, 2 }
}

define i32 @function_1b264() local_unnamed_addr {
dec_label_pc_1b264:
  %v0_1b264 = load i32, i32* @ebp, align 4
  %v1_1b264 = add i32 %v0_1b264, -12
  %v2_1b264 = inttoptr i32 %v1_1b264 to i32*
  %v3_1b264 = load i32, i32* %v2_1b264, align 4
  %v1_1b267 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b267 = xor i32 %v1_1b267, %v3_1b264
  %v3_1b267 = icmp eq i32 %v2_1b267, 0
  store i32 %v2_1b267, i32* @eax, align 4
  br i1 %v3_1b267, label %bb, label %dec_label_pc_1b270

bb:                                               ; preds = %dec_label_pc_1b264
  %v1_1b26e = call i32 @function_1b275()
  br label %dec_label_pc_1b270

dec_label_pc_1b270:                               ; preds = %bb, %dec_label_pc_1b264
  %v2_1b26e = phi i32 [ %v1_1b26e, %bb ], [ %v2_1b267, %dec_label_pc_1b264 ]
  ret i32 %v2_1b26e
}

define i32 @function_1b275() local_unnamed_addr {
dec_label_pc_1b275:
  %v0_1b276 = load i32, i32* @eax, align 4
  ret i32 %v0_1b276
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b278:
  %v4_1b278 = add i32 %arg1, -8
  %v1_1b27d = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %v4_1b278)
  ret i32 %v1_1b27d
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) {
dec_label_pc_1b280:
  store i32 %arg1, i32* @eax, align 4
  %v1_1b29d = call i32 @function_36482(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_1b2bd() local_unnamed_addr {
dec_label_pc_1b2bd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b2bd = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b2bd = add i32 %v0_1b2bd, -1
  store i32 %v1_1b2bd, i32* %ecx.global-to-local, align 4
  %v0_1b2bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b2bf
}

define i32 @_ZN5boost24enable_current_exceptionINS_16exception_detail19error_info_injectorINS_10lock_errorEEEEENS1_10clone_implIT_EERKS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b2c0:
  %v2_1b2ea = call i32 @unknown_3cf8a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b2fe

bb:                                               ; preds = %dec_label_pc_1b2c0
  %v1_1b2fc = call i32 @function_1b303()
  br label %dec_label_pc_1b2fe

dec_label_pc_1b2fe:                               ; preds = %bb, %dec_label_pc_1b2c0
  %v2_1b2fc = phi i32 [ %v1_1b2fc, %bb ], [ %arg1, %dec_label_pc_1b2c0 ]
  ret i32 %v2_1b2fc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b303() local_unnamed_addr {
dec_label_pc_1b303:
  %v0_1b304 = load i32, i32* @eax, align 4
  ret i32 %v0_1b304
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b307:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b30c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b30c
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b311:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b316 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b316
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_1b31c:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_380d8_type* @global_var_380d8.2272 to i32), i32* %arg1, align 4
  %v1_1b33f = add i32 %tmp99, 8
  %v2_1b33f = inttoptr i32 %v1_1b33f to i32*
  store i32 ptrtoint (i32* @global_var_380f4.2273 to i32), i32* %v2_1b33f, align 4
  %v1_1b349 = add i32 %tmp99, 28
  %v2_1b349 = inttoptr i32 %v1_1b349 to i32*
  store i32 ptrtoint (i32* @global_var_38104.2274 to i32), i32* %v2_1b349, align 4
  store i32 %tmp99, i32* @eax, align 4
  %v1_1b364 = call i32 @function_36526(i32 %tmp99)
  %v1_1b373 = call i32 @function_1b380()
  ret i32 %tmp99
}

define i32 @function_1b380() local_unnamed_addr {
dec_label_pc_1b380:
  %v0_1b380 = load i32, i32* @ebp, align 4
  %v1_1b380 = add i32 %v0_1b380, -12
  %v2_1b380 = inttoptr i32 %v1_1b380 to i32*
  %v3_1b380 = load i32, i32* %v2_1b380, align 4
  %v1_1b383 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1b383 = xor i32 %v1_1b383, %v3_1b380
  %v3_1b383 = icmp eq i32 %v2_1b383, 0
  store i32 %v2_1b383, i32* @eax, align 4
  br i1 %v3_1b383, label %bb, label %dec_label_pc_1b38c

bb:                                               ; preds = %dec_label_pc_1b380
  %v1_1b38a = call i32 @function_1b391()
  br label %dec_label_pc_1b38c

dec_label_pc_1b38c:                               ; preds = %bb, %dec_label_pc_1b380
  %v2_1b38a = phi i32 [ %v1_1b38a, %bb ], [ %v2_1b383, %dec_label_pc_1b380 ]
  ret i32 %v2_1b38a
}

define i32 @function_1b391() local_unnamed_addr {
dec_label_pc_1b391:
  %v0_1b392 = load i32, i32* @eax, align 4
  ret i32 %v0_1b392
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b394:
  %v4_1b394 = add i32 %arg1, -28
  %v1_1b399 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_1b394)
  ret i32 %v1_1b399
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b39b:
  %v4_1b39b = add i32 %arg1, -8
  %v1_1b3a0 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %v4_1b39b)
  ret i32 %v1_1b3a0
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) {
dec_label_pc_1b3a2:
  ret i32 %arg1
}

define i32 @function_1b3df() local_unnamed_addr {
dec_label_pc_1b3df:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1b3df = load i32, i32* %ecx.global-to-local, align 4
  %v1_1b3df = add i32 %v0_1b3df, -1
  store i32 %v1_1b3df, i32* %ecx.global-to-local, align 4
  %v0_1b3e1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b3e1
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b3e2:
  %v1_1b3fc = add i32 %arg1, 8
  %v2_1b3fc = inttoptr i32 %v1_1b3fc to i32*
  %v3_1b3fc = load i32, i32* %v2_1b3fc, align 4
  store i32 %v3_1b3fc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b40b

bb:                                               ; preds = %dec_label_pc_1b3e2
  %v2_1b409 = call i32 @function_1b410(i32 %arg1)
  br label %dec_label_pc_1b40b

dec_label_pc_1b40b:                               ; preds = %bb, %dec_label_pc_1b3e2
  %v3_1b409 = phi i32 [ %v2_1b409, %bb ], [ %v3_1b3fc, %dec_label_pc_1b3e2 ]
  ret i32 %v3_1b409
}

define i32 @function_1b410(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b410:
  %v0_1b411 = load i32, i32* @eax, align 4
  ret i32 %v0_1b411
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b412:
  %v1_1b432 = inttoptr i32 %arg2 to i32*
  %v2_1b432 = load i32, i32* %v1_1b432, align 4
  store i32 %v2_1b432, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b445

bb:                                               ; preds = %dec_label_pc_1b412
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1b443 = call i32 @function_1b44a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1b445

dec_label_pc_1b445:                               ; preds = %bb, %dec_label_pc_1b412
  %v4_1b443 = phi i32 [ %v3_1b443, %bb ], [ 0, %dec_label_pc_1b412 ]
  ret i32 %v4_1b443

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1b44a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b44a:
  %v0_1b44b = load i32, i32* @eax, align 4
  ret i32 %v0_1b44b
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b44c:
  store i32 %arg1, i32* @eax, align 4
  %v1_1b469 = call i32 @function_309de(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b47a

bb:                                               ; preds = %dec_label_pc_1b44c
  %v1_1b478 = call i32 @function_1b47f()
  br label %dec_label_pc_1b47a

dec_label_pc_1b47a:                               ; preds = %bb, %dec_label_pc_1b44c
  %v2_1b478 = phi i32 [ %v1_1b478, %bb ], [ 0, %dec_label_pc_1b44c ]
  ret i32 %v2_1b478

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b47f() local_unnamed_addr {
dec_label_pc_1b47f:
  %v0_1b480 = load i32, i32* @eax, align 4
  ret i32 %v0_1b480
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b482:
  %v1_1b49f = call i32 @unknown_3d2e4(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b4b0

bb:                                               ; preds = %dec_label_pc_1b482
  %v1_1b4ae = call i32 @function_1b4b5()
  br label %dec_label_pc_1b4b0

dec_label_pc_1b4b0:                               ; preds = %bb, %dec_label_pc_1b482
  %v2_1b4ae = phi i32 [ %v1_1b4ae, %bb ], [ 0, %dec_label_pc_1b482 ]
  ret i32 %v2_1b4ae
}

define i32 @function_1b4b5() local_unnamed_addr {
dec_label_pc_1b4b5:
  %v0_1b4b6 = load i32, i32* @eax, align 4
  ret i32 %v0_1b4b6
}

define i32 @_ZNSt12_Vector_baseIhSaIhEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b4b8:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1b4d3 = add i32 %tmp101, 8
  %v2_1b4d3 = inttoptr i32 %v1_1b4d3 to i32*
  %v3_1b4d3 = load i32, i32* %v2_1b4d3, align 4
  %v2_1b4db = load i32, i32* %arg1, align 4
  %v2_1b4df = sub i32 %v3_1b4d3, %v2_1b4db
  %v7_1b4df = icmp ult i32 %v3_1b4d3, %v2_1b4db
  store i1 %v7_1b4df, i1* @cf, align 1
  store i32 %v2_1b4df, i32* @ecx, align 4
  store i32 %v2_1b4df, i32* @edx, align 4
  %v2_1b4e8 = load i32, i32* %arg1, align 4
  store i32 %tmp101, i32* @eax, align 4
  %v3_1b4f8 = call i32 @function_36cb8(i32 %tmp101, i32 %v2_1b4e8, i32 %v2_1b4df)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b514

bb:                                               ; preds = %dec_label_pc_1b4b8
  %v2_1b512 = call i32 @function_1b532(i32 %tmp101)
  store i32 %v2_1b512, i32* @eax, align 4
  br label %dec_label_pc_1b514

dec_label_pc_1b514:                               ; preds = %bb, %dec_label_pc_1b4b8
  %v0_1b514 = call i32 @function_1b52d()
  ret i32 %v0_1b514

; uselistorder directives
  uselistorder i32 %v2_1b4db, { 1, 0 }
  uselistorder i32 %v3_1b4d3, { 1, 0 }
  uselistorder i32 %tmp101, { 0, 2, 3, 1 }
}

define i32 @function_1b517() local_unnamed_addr {
dec_label_pc_1b517:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b517 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b517
}

define i32 @function_1b52d() local_unnamed_addr {
dec_label_pc_1b52d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b532(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b532:
  %v0_1b537 = load i32, i32* @eax, align 4
  ret i32 %v0_1b537
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b538:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b55e

bb:                                               ; preds = %dec_label_pc_1b538
  %v2_1b55c = call i32 @function_1b563(i32 %arg1)
  br label %dec_label_pc_1b55e

dec_label_pc_1b55e:                               ; preds = %bb, %dec_label_pc_1b538
  %v3_1b55c = phi i32 [ %v2_1b55c, %bb ], [ %arg1, %dec_label_pc_1b538 ]
  ret i32 %v3_1b55c
}

define i32 @function_1b563(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b563:
  %v0_1b564 = load i32, i32* @eax, align 4
  ret i32 %v0_1b564
}

define i32 @_ZSt8_DestroyIPhhEvT_S1_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b565:
  %v2_1b595 = call i32 @unknown_3d419(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b5a6

bb:                                               ; preds = %dec_label_pc_1b565
  %v1_1b5a4 = call i32 @function_1b5ab()
  br label %dec_label_pc_1b5a6

dec_label_pc_1b5a6:                               ; preds = %bb, %dec_label_pc_1b565
  %v2_1b5a4 = phi i32 [ %v1_1b5a4, %bb ], [ 0, %dec_label_pc_1b565 ]
  ret i32 %v2_1b5a4
}

define i32 @function_1b5ab() local_unnamed_addr {
dec_label_pc_1b5ab:
  %v0_1b5ac = load i32, i32* @eax, align 4
  ret i32 %v0_1b5ac
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5ae:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b5d1

bb:                                               ; preds = %dec_label_pc_1b5ae
  %v2_1b5cf = call i32 @function_1b5d6(i32 %arg1)
  br label %dec_label_pc_1b5d1

dec_label_pc_1b5d1:                               ; preds = %bb, %dec_label_pc_1b5ae
  %v3_1b5cf = phi i32 [ %v2_1b5cf, %bb ], [ 0, %dec_label_pc_1b5ae ]
  ret i32 %v3_1b5cf
}

define i32 @function_1b5d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5d6:
  %v0_1b5d7 = load i32, i32* @eax, align 4
  ret i32 %v0_1b5d7
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b5d8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b5fb

bb:                                               ; preds = %dec_label_pc_1b5d8
  %v2_1b5f9 = call i32 @function_1b600(i32 %arg1)
  br label %dec_label_pc_1b5fb

dec_label_pc_1b5fb:                               ; preds = %bb, %dec_label_pc_1b5d8
  %v3_1b5f9 = phi i32 [ %v2_1b5f9, %bb ], [ 0, %dec_label_pc_1b5d8 ]
  ret i32 %v3_1b5f9
}

define i32 @function_1b600(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b600:
  %v0_1b601 = load i32, i32* @eax, align 4
  ret i32 %v0_1b601
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1EjRKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b602:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1b633 = call i32 @unknown_3d4f8(i32 %tmp104, i32 %arg3)
  %v2_1b645 = call i32 @unknown_3d558(i32 %tmp104, i32 %arg2)
  store i32 %v2_1b645, i32* %arg1, align 4
  %v2_1b659 = add i32 %tmp104, 4
  %v3_1b659 = inttoptr i32 %v2_1b659 to i32*
  store i32 %v2_1b645, i32* %v3_1b659, align 4
  %v2_1b65f = load i32, i32* %arg1, align 4
  %v5_1b663 = add i32 %v2_1b65f, %arg2
  %v2_1b669 = add i32 %tmp104, 8
  %v3_1b669 = inttoptr i32 %v2_1b669 to i32*
  store i32 %v5_1b663, i32* %v3_1b669, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b678

bb:                                               ; preds = %dec_label_pc_1b602
  %v1_1b676 = call i32 @function_1b696()
  store i32 %v1_1b676, i32* @eax, align 4
  br label %dec_label_pc_1b678

dec_label_pc_1b678:                               ; preds = %bb, %dec_label_pc_1b602
  %v0_1b678 = call i32 @function_1b691()
  ret i32 %v0_1b678

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_1b67b() local_unnamed_addr {
dec_label_pc_1b67b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b67b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b67b
}

define i32 @function_1b691() local_unnamed_addr {
dec_label_pc_1b691:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b696() local_unnamed_addr {
dec_label_pc_1b696:
  %v0_1b69b = load i32, i32* @eax, align 4
  ret i32 %v0_1b69b
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_fill_initializeEjRKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b69c:
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v2_1b6cd = load i32, i32* %arg1, align 4
  %v7_1b6e4 = call i32 @unknown_3d649(i32 %v2_1b6cd, i32 %arg2, i32 %arg3, i32 %tmp107, i32 %arg3, i32 %arg2, i32 %tmp107)
  %v1_1b6ec = add i32 %tmp107, 8
  %v2_1b6ec = inttoptr i32 %v1_1b6ec to i32*
  %v3_1b6ec = load i32, i32* %v2_1b6ec, align 4
  %v2_1b6f2 = add i32 %tmp107, 4
  %v3_1b6f2 = inttoptr i32 %v2_1b6f2 to i32*
  store i32 %v3_1b6ec, i32* %v3_1b6f2, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b701

bb:                                               ; preds = %dec_label_pc_1b69c
  %v1_1b6ff = call i32 @function_1b706()
  br label %dec_label_pc_1b701

dec_label_pc_1b701:                               ; preds = %bb, %dec_label_pc_1b69c
  %v2_1b6ff = phi i32 [ %v1_1b6ff, %bb ], [ 0, %dec_label_pc_1b69c ]
  ret i32 %v2_1b6ff

; uselistorder directives
  uselistorder i32 %tmp107, { 1, 3, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1b706() local_unnamed_addr {
dec_label_pc_1b706:
  %v0_1b707 = load i32, i32* @eax, align 4
  ret i32 %v0_1b707
}

define i32 @_ZNKSt6vectorIhSaIhEE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1b708:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_1b722 = add i32 %tmp100, 8
  %v2_1b722 = inttoptr i32 %v1_1b722 to i32*
  %v3_1b722 = load i32, i32* %v2_1b722, align 4
  %v2_1b72a = load i32, i32* %arg1, align 4
  %v2_1b72e = sub i32 %v3_1b722, %v2_1b72a
  store i32 %v2_1b72e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b73e

bb:                                               ; preds = %dec_label_pc_1b708
  %v2_1b73c = call i32 @function_1b743(i32 %tmp100)
  br label %dec_label_pc_1b73e

dec_label_pc_1b73e:                               ; preds = %bb, %dec_label_pc_1b708
  %v3_1b73c = phi i32 [ %v2_1b73c, %bb ], [ %v2_1b72e, %dec_label_pc_1b708 ]
  ret i32 %v3_1b73c
}

define i32 @function_1b743(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b743:
  %v0_1b744 = load i32, i32* @eax, align 4
  ret i32 %v0_1b744
}

define i32 @_ZNSt6vectorIhSaIhEE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEPhjT_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b746:
  %v2_1b77d = call i32 @unknown_3d69c(i32 %arg1, i32 %arg2)
  store i32 %v2_1b77d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b7bc

bb:                                               ; preds = %dec_label_pc_1b746
  %v5_1b7ba = call i32 @function_1b7fa(i32 %arg3, i32 %arg4, i32 %v2_1b77d, i32 %arg1)
  store i32 %v5_1b7ba, i32* @eax, align 4
  br label %dec_label_pc_1b7bc

dec_label_pc_1b7bc:                               ; preds = %bb, %dec_label_pc_1b746
  %v0_1b7bc = call i32 @function_1b7f5()
  ret i32 %v0_1b7bc
}

define i32 @function_1b7bf() local_unnamed_addr {
dec_label_pc_1b7bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b7bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b7bf
}

define i32 @function_1b7f5() local_unnamed_addr {
dec_label_pc_1b7f5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1b7fa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b7fa:
  %v0_1b7ff = load i32, i32* @eax, align 4
  ret i32 %v0_1b7ff
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b800:
  %v10_1b823 = icmp eq i32 %arg2, 0
  br i1 %v10_1b823, label %dec_label_pc_1b842, label %dec_label_pc_1b829

dec_label_pc_1b829:                               ; preds = %dec_label_pc_1b800
  %v3_1b83d = call i32 @unknown_3d802(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_1b842

dec_label_pc_1b842:                               ; preds = %dec_label_pc_1b829, %dec_label_pc_1b800
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b84e

bb:                                               ; preds = %dec_label_pc_1b842
  %v1_1b84c = call i32 @function_1b853()
  br label %dec_label_pc_1b84e

dec_label_pc_1b84e:                               ; preds = %bb, %dec_label_pc_1b842
  %v2_1b84c = phi i32 [ %v1_1b84c, %bb ], [ 0, %dec_label_pc_1b842 ]
  ret i32 %v2_1b84c
}

define i32 @function_1b853() local_unnamed_addr {
dec_label_pc_1b853:
  %v0_1b854 = load i32, i32* @eax, align 4
  ret i32 %v0_1b854
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b855:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1b87e = ptrtoint i32* %stack_var_-20 to i32
  %v2_1b88b = call i32 @unknown_3d898(i32 %v2_1b87e, i32 %arg3)
  %v2_1b893 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1b8a0 = call i32 @unknown_3d898(i32 %v2_1b893, i32 %arg2)
  %v3_1b8b2 = load i32, i32* %stack_var_-20, align 4
  %v3_1b8b9 = load i32, i32* %stack_var_-24, align 4
  %v4_1b8c3 = call i32 @unknown_3d8e2(i32 %arg1, i32 %v3_1b8b9, i32 %v3_1b8b2, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b8da

bb:                                               ; preds = %dec_label_pc_1b855
  %v1_1b8d8 = call i32 @function_1b8df()
  br label %dec_label_pc_1b8da

dec_label_pc_1b8da:                               ; preds = %bb, %dec_label_pc_1b855
  %v2_1b8d8 = phi i32 [ %v1_1b8d8, %bb ], [ %arg1, %dec_label_pc_1b855 ]
  ret i32 %v2_1b8d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3d898, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1b8df() local_unnamed_addr {
dec_label_pc_1b8df:
  %v0_1b8e0 = load i32, i32* @eax, align 4
  ret i32 %v0_1b8e0
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEhEvT_S7_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b8e3:
  %v2_1b913 = call i32 @unknown_3da02(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b924

bb:                                               ; preds = %dec_label_pc_1b8e3
  %v1_1b922 = call i32 @function_1b929()
  br label %dec_label_pc_1b924

dec_label_pc_1b924:                               ; preds = %bb, %dec_label_pc_1b8e3
  %v2_1b922 = phi i32 [ %v1_1b922, %bb ], [ 0, %dec_label_pc_1b8e3 ]
  ret i32 %v2_1b922
}

define i32 @function_1b929() local_unnamed_addr {
dec_label_pc_1b929:
  %v0_1b92a = load i32, i32* @eax, align 4
  ret i32 %v0_1b92a
}

define i32 @_ZSt4copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b92b:
  %v1_1b955 = call i32 @unknown_3da8c(i32 %arg2)
  %v1_1b962 = call i32 @unknown_3da8c(i32 %arg1)
  %v3_1b975 = call i32 @unknown_3dac1(i32 %v1_1b962, i32 %v1_1b955, i32 %arg3)
  store i32 %v3_1b975, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b986

bb:                                               ; preds = %dec_label_pc_1b92b
  %v1_1b984 = call i32 @function_1b98b()
  br label %dec_label_pc_1b986

dec_label_pc_1b986:                               ; preds = %bb, %dec_label_pc_1b92b
  %v2_1b984 = phi i32 [ %v1_1b984, %bb ], [ %v3_1b975, %dec_label_pc_1b92b ]
  ret i32 %v2_1b984

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3da8c, { 1, 0 }
}

define i32 @function_1b98b() local_unnamed_addr {
dec_label_pc_1b98b:
  %v0_1b990 = load i32, i32* @eax, align 4
  ret i32 %v0_1b990
}

define i32 @_ZSt22__uninitialized_copy_aIPhS0_hET0_T_S2_S1_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b991:
  %v7_1b9ce = call i32 @unknown_3db99(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1b9ce, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1b9df

bb:                                               ; preds = %dec_label_pc_1b991
  %v1_1b9dd = call i32 @function_1b9e4()
  br label %dec_label_pc_1b9df

dec_label_pc_1b9df:                               ; preds = %bb, %dec_label_pc_1b991
  %v2_1b9dd = phi i32 [ %v1_1b9dd, %bb ], [ %v7_1b9ce, %dec_label_pc_1b991 ]
  ret i32 %v2_1b9dd

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1b9e4() local_unnamed_addr {
dec_label_pc_1b9e4:
  %v0_1b9e5 = load i32, i32* @eax, align 4
  ret i32 %v0_1b9e5
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEE4findERS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b9e6:
  %v3_1ba1d = call i32 @unknown_3dc3e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ba34

bb:                                               ; preds = %dec_label_pc_1b9e6
  %v1_1ba32 = call i32 @function_1ba39()
  br label %dec_label_pc_1ba34

dec_label_pc_1ba34:                               ; preds = %bb, %dec_label_pc_1b9e6
  %v2_1ba32 = phi i32 [ %v1_1ba32, %bb ], [ %arg1, %dec_label_pc_1b9e6 ]
  ret i32 %v2_1ba32

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ba39() local_unnamed_addr {
dec_label_pc_1ba39:
  %v0_1ba3a = load i32, i32* @eax, align 4
  ret i32 %v0_1ba3a
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba3e:
  %v2_1ba68 = call i32 @unknown_3dd82(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ba7f

bb:                                               ; preds = %dec_label_pc_1ba3e
  %v1_1ba7d = call i32 @function_1ba84()
  br label %dec_label_pc_1ba7f

dec_label_pc_1ba7f:                               ; preds = %bb, %dec_label_pc_1ba3e
  %v2_1ba7d = phi i32 [ %v1_1ba7d, %bb ], [ %arg1, %dec_label_pc_1ba3e ]
  ret i32 %v2_1ba7d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ba84() local_unnamed_addr {
dec_label_pc_1ba84:
  %v0_1ba85 = load i32, i32* @eax, align 4
  ret i32 %v0_1ba85
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKjiEEeqERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ba88:
  %v2_1baa8 = load i32, i32* %arg1, align 4
  %v1_1baad = inttoptr i32 %arg2 to i32*
  %v2_1baad = load i32, i32* %v1_1baad, align 4
  %v12_1baaf = icmp eq i32 %v2_1baa8, %v2_1baad
  %v1_1bab1 = zext i1 %v12_1baaf to i32
  %v3_1bab1 = and i32 %v2_1baad, -256
  %v4_1bab1 = or i32 %v1_1bab1, %v3_1bab1
  store i32 %v4_1bab1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bac0

bb:                                               ; preds = %dec_label_pc_1ba88
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1babe = call i32 @function_1bac5(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1bac0

dec_label_pc_1bac0:                               ; preds = %bb, %dec_label_pc_1ba88
  %v4_1babe = phi i32 [ %v3_1babe, %bb ], [ %v4_1bab1, %dec_label_pc_1ba88 ]
  ret i32 %v4_1babe

; uselistorder directives
  uselistorder i32 %v2_1baad, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1bac5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bac5:
  %v0_1bac6 = load i32, i32* @eax, align 4
  ret i32 %v0_1bac6
}

define i32 @_ZSt9make_pairIjiESt4pairIT_T0_ES1_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bac7:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v2_1baea = ptrtoint i32* %stack_var_-40 to i32
  %v2_1baf1 = ptrtoint i32* %stack_var_-36 to i32
  %v3_1bafe = call i32 @unknown_3de55(i32 %arg1, i32 %v2_1baf1, i32 %v2_1baea)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bb12

bb:                                               ; preds = %dec_label_pc_1bac7
  %v1_1bb10 = call i32 @function_1bb17()
  br label %dec_label_pc_1bb12

dec_label_pc_1bb12:                               ; preds = %bb, %dec_label_pc_1bac7
  %v2_1bb10 = phi i32 [ %v1_1bb10, %bb ], [ %arg1, %dec_label_pc_1bac7 ]
  ret i32 %v2_1bb10

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1bb17() local_unnamed_addr {
dec_label_pc_1bb17:
  %v0_1bb18 = load i32, i32* @eax, align 4
  ret i32 %v0_1bb18
}

define i32 @_ZNSt4pairIKjiEC1IjiEERKS_IT_T0_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb1c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1bb3c = inttoptr i32 %arg2 to i32*
  %v2_1bb3c = load i32, i32* %v1_1bb3c, align 4
  store i32 %v2_1bb3c, i32* %arg1, align 4
  %v1_1bb46 = add i32 %arg2, 4
  %v2_1bb46 = inttoptr i32 %v1_1bb46 to i32*
  %v3_1bb46 = load i32, i32* %v2_1bb46, align 4
  %v2_1bb4c = add i32 %tmp102, 4
  %v3_1bb4c = inttoptr i32 %v2_1bb4c to i32*
  store i32 %v3_1bb46, i32* %v3_1bb4c, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bb5b

bb:                                               ; preds = %dec_label_pc_1bb1c
  %v3_1bb59 = call i32 @function_1bb60(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1bb5b

dec_label_pc_1bb5b:                               ; preds = %bb, %dec_label_pc_1bb1c
  %v4_1bb59 = phi i32 [ %v3_1bb59, %bb ], [ 0, %dec_label_pc_1bb1c ]
  ret i32 %v4_1bb59
}

define i32 @function_1bb60(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bb60:
  %v0_1bb61 = load i32, i32* @eax, align 4
  ret i32 %v0_1bb61
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEE6insertERKS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1bb62:
  %v3_1bb99 = call i32 @unknown_3df3c(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bbb0

bb:                                               ; preds = %dec_label_pc_1bb62
  %v1_1bbae = call i32 @function_1bbb5()
  br label %dec_label_pc_1bbb0

dec_label_pc_1bbb0:                               ; preds = %bb, %dec_label_pc_1bb62
  %v2_1bbae = phi i32 [ %v1_1bbae, %bb ], [ %arg1, %dec_label_pc_1bb62 ]
  ret i32 %v2_1bbae

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1bbb5() local_unnamed_addr {
dec_label_pc_1bbb5:
  %v0_1bbb6 = load i32, i32* @eax, align 4
  ret i32 %v0_1bbb6
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKjiEEptEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bbba:
  %v2_1bbd4 = load i32, i32* %arg1, align 4
  %v1_1bbd6 = add i32 %v2_1bbd4, 16
  %v1_1bbdc = call i32 @unknown_3e198(i32 %v1_1bbd6)
  store i32 %v1_1bbdc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bbed

bb:                                               ; preds = %dec_label_pc_1bbba
  %v1_1bbeb = call i32 @function_1bbf2()
  br label %dec_label_pc_1bbed

dec_label_pc_1bbed:                               ; preds = %bb, %dec_label_pc_1bbba
  %v2_1bbeb = phi i32 [ %v1_1bbeb, %bb ], [ %v1_1bbdc, %dec_label_pc_1bbba ]
  ret i32 %v2_1bbeb
}

define i32 @function_1bbf2() local_unnamed_addr {
dec_label_pc_1bbf2:
  %v0_1bbf3 = load i32, i32* @eax, align 4
  ret i32 %v0_1bbf3
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKjiEEneERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bbf4:
  %v2_1bc14 = load i32, i32* %arg1, align 4
  %v1_1bc19 = inttoptr i32 %arg2 to i32*
  %v2_1bc19 = load i32, i32* %v1_1bc19, align 4
  %v12_1bc1b = icmp eq i32 %v2_1bc14, %v2_1bc19
  %v1_1bc1d = icmp eq i1 %v12_1bc1b, false
  %v2_1bc1d = zext i1 %v1_1bc1d to i32
  %v4_1bc1d = and i32 %v2_1bc19, -256
  %v5_1bc1d = or i32 %v2_1bc1d, %v4_1bc1d
  store i32 %v5_1bc1d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bc2c

bb:                                               ; preds = %dec_label_pc_1bbf4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_1bc2a = call i32 @function_1bc31(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_1bc2c

dec_label_pc_1bc2c:                               ; preds = %bb, %dec_label_pc_1bbf4
  %v4_1bc2a = phi i32 [ %v3_1bc2a, %bb ], [ %v5_1bc1d, %dec_label_pc_1bbf4 ]
  ret i32 %v4_1bc2a

; uselistorder directives
  uselistorder i32 %v2_1bc19, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1bc31(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bc31:
  %v0_1bc32 = load i32, i32* @eax, align 4
  ret i32 %v0_1bc32
}

define i32 @_ZNSt3mapIjiSt4lessIjESaISt4pairIKjiEEE5eraseESt17_Rb_tree_iteratorIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bc34:
  %v2_1bc5e = call i32 @unknown_3e240(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bc6f

bb:                                               ; preds = %dec_label_pc_1bc34
  %v1_1bc6d = call i32 @function_1bc74()
  br label %dec_label_pc_1bc6f

dec_label_pc_1bc6f:                               ; preds = %bb, %dec_label_pc_1bc34
  %v2_1bc6d = phi i32 [ %v1_1bc6d, %bb ], [ 0, %dec_label_pc_1bc34 ]
  ret i32 %v2_1bc6d
}

define i32 @function_1bc74() local_unnamed_addr {
dec_label_pc_1bc74:
  %v0_1bc75 = load i32, i32* @eax, align 4
  ret i32 %v0_1bc75
}

define i32 @_ZNK5boost11unique_lockINS_5mutexEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bc76:
  %v1_1bc90 = add i32 %arg1, 4
  %v2_1bc90 = inttoptr i32 %v1_1bc90 to i8*
  %v3_1bc90 = load i8, i8* %v2_1bc90, align 1
  %v4_1bc90 = zext i8 %v3_1bc90 to i32
  store i32 %v4_1bc90, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bca0

bb:                                               ; preds = %dec_label_pc_1bc76
  %v2_1bc9e = call i32 @function_1bca5(i32 %arg1)
  br label %dec_label_pc_1bca0

dec_label_pc_1bca0:                               ; preds = %bb, %dec_label_pc_1bc76
  %v3_1bc9e = phi i32 [ %v2_1bc9e, %bb ], [ %v4_1bc90, %dec_label_pc_1bc76 ]
  ret i32 %v3_1bc9e
}

define i32 @function_1bca5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bca5:
  %v0_1bca6 = load i32, i32* @eax, align 4
  ret i32 %v0_1bca6
}

define i32 @_ZN5boost6detail7variant9destroyerC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bca8:
  store i32 %arg1, i32* @eax, align 4
  %v1_1bcc5 = call i32 @function_306d2(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bcd6

bb:                                               ; preds = %dec_label_pc_1bca8
  %v1_1bcd4 = call i32 @function_1bcdb()
  br label %dec_label_pc_1bcd6

dec_label_pc_1bcd6:                               ; preds = %bb, %dec_label_pc_1bca8
  %v2_1bcd4 = phi i32 [ %v1_1bcd4, %bb ], [ 0, %dec_label_pc_1bca8 ]
  ret i32 %v2_1bcd4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bcdb() local_unnamed_addr {
dec_label_pc_1bcdb:
  %v0_1bcdc = load i32, i32* @eax, align 4
  ret i32 %v0_1bcdc
}

define i32 @_ZN5boost6detail7variant9destroyerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bcde:
  store i32 %arg1, i32* @eax, align 4
  %v1_1bcfb = call i32 @function_3073e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bd0c

bb:                                               ; preds = %dec_label_pc_1bcde
  %v1_1bd0a = call i32 @function_1bd11()
  br label %dec_label_pc_1bd0c

dec_label_pc_1bd0c:                               ; preds = %bb, %dec_label_pc_1bcde
  %v2_1bd0a = phi i32 [ %v1_1bd0a, %bb ], [ 0, %dec_label_pc_1bcde ]
  ret i32 %v2_1bd0a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1bd11() local_unnamed_addr {
dec_label_pc_1bd11:
  %v0_1bd12 = load i32, i32* @eax, align 4
  ret i32 %v0_1bd12
}

define i32 @_ZN5boost11shared_lockINS_12shared_mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bd14:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v4_1bd37 = trunc i32 %tmp101 to i8
  store i1 false, i1* @cf, align 1
  %v5_1bd37 = icmp eq i8 %v4_1bd37, 0
  br i1 %v5_1bd37, label %dec_label_pc_1bd51, label %dec_label_pc_1bd3b

dec_label_pc_1bd3b:                               ; preds = %dec_label_pc_1bd14
  %v2_1bd3b = ptrtoint i32* %stack_var_-24 to i32
  %v1_1bd41 = call i32 @function_26dd6(i32 %v2_1bd3b)
  store i32 %v2_1bd3b, i32* @eax, align 4
  %v1_1bd4c = call i32 @function_30c51(i32 %v2_1bd3b)
  br label %dec_label_pc_1bd51

dec_label_pc_1bd51:                               ; preds = %dec_label_pc_1bd3b, %dec_label_pc_1bd14
  %v2_1bd54 = load i32, i32* %arg1, align 4
  store i32 %v2_1bd54, i32* @eax, align 4
  %v1_1bd59 = call i32 @function_2c840(i32 %v2_1bd54)
  %v1_1bd61 = add i32 %tmp101, 4
  %v2_1bd61 = inttoptr i32 %v1_1bd61 to i8*
  store i8 1, i8* %v2_1bd61, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bd71

bb:                                               ; preds = %dec_label_pc_1bd51
  %v1_1bd6f = call i32 @function_1bd8f()
  store i32 %v1_1bd6f, i32* @eax, align 4
  br label %dec_label_pc_1bd71

dec_label_pc_1bd71:                               ; preds = %bb, %dec_label_pc_1bd51
  %v0_1bd71 = call i32 @function_1bd8a()
  ret i32 %v0_1bd71
}

define i32 @function_1bd74() local_unnamed_addr {
dec_label_pc_1bd74:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bd74 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bd74
}

define i32 @function_1bd8a() local_unnamed_addr {
dec_label_pc_1bd8a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1bd8f() local_unnamed_addr {
dec_label_pc_1bd8f:
  %v0_1bd94 = load i32, i32* @eax, align 4
  ret i32 %v0_1bd94
}

define i32 @_ZNK5boost11shared_lockINS_12shared_mutexEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bd96:
  %v1_1bdb0 = add i32 %arg1, 4
  %v2_1bdb0 = inttoptr i32 %v1_1bdb0 to i8*
  %v3_1bdb0 = load i8, i8* %v2_1bdb0, align 1
  %v4_1bdb0 = zext i8 %v3_1bdb0 to i32
  store i32 %v4_1bdb0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1bdc0

bb:                                               ; preds = %dec_label_pc_1bd96
  %v2_1bdbe = call i32 @function_1bdc5(i32 %arg1)
  br label %dec_label_pc_1bdc0

dec_label_pc_1bdc0:                               ; preds = %bb, %dec_label_pc_1bd96
  %v3_1bdbe = phi i32 [ %v2_1bdbe, %bb ], [ %v4_1bdb0, %dec_label_pc_1bd96 ]
  ret i32 %v3_1bdbe
}

define i32 @function_1bdc5(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bdc5:
  %v0_1bdc6 = load i32, i32* @eax, align 4
  ret i32 %v0_1bdc6
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEE7add_refEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1bdc8:
  %v2_1bde2 = load i32, i32* %arg1, align 4
  %v1_1bde4 = icmp eq i32 %v2_1bde2, 0
  br i1 %v1_1bde4, label %dec_label_pc_1bdfe, label %dec_label_pc_1bde8

dec_label_pc_1bde8:                               ; preds = %dec_label_pc_1bdc8
  br label %dec_label_pc_1bdfe

dec_label_pc_1bdfe:                               ; preds = %dec_label_pc_1bde8, %dec_label_pc_1bdc8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1be0a

bb:                                               ; preds = %dec_label_pc_1bdfe
  %v1_1be08 = call i32 @function_1be0f()
  br label %dec_label_pc_1be0a

dec_label_pc_1be0a:                               ; preds = %bb, %dec_label_pc_1bdfe
  %v2_1be08 = phi i32 [ %v1_1be08, %bb ], [ 0, %dec_label_pc_1bdfe ]
  ret i32 %v2_1be08
}

define i32 @function_1be0f() local_unnamed_addr {
dec_label_pc_1be0f:
  %v0_1be10 = load i32, i32* @eax, align 4
  ret i32 %v0_1be10
}

define i32 @_ZN5boost16exception_detail10clone_baseC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1be12:
  store i32 ptrtoint (i32* @global_var_38368.2237 to i32), i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1be3e

bb:                                               ; preds = %dec_label_pc_1be12
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1be3c = call i32 @function_1be43(i32 %tmp100)
  br label %dec_label_pc_1be3e

dec_label_pc_1be3e:                               ; preds = %bb, %dec_label_pc_1be12
  %v3_1be3c = phi i32 [ %v2_1be3c, %bb ], [ 0, %dec_label_pc_1be12 ]
  ret i32 %v3_1be3c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1be43(i32 %arg1) local_unnamed_addr {
dec_label_pc_1be43:
  %v0_1be44 = load i32, i32* @eax, align 4
  ret i32 %v0_1be44
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1be46:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v2_1be71 = call i32 @function_31ffe(i32 %tmp102, i32 %arg2)
  %v1_1be79 = add i32 %tmp102, 24
  store i32 %v1_1be79, i32* @eax, align 4
  %v1_1be7f = call i32 @function_37c58(i32 %v1_1be79)
  store i32 ptrtoint (%vtable_38278_type* @global_var_38278.2278 to i32), i32* %arg1, align 4
  %v1_1be90 = add i32 %tmp102, 20
  %v2_1be90 = inttoptr i32 %v1_1be90 to i32*
  store i32 ptrtoint (i32* @global_var_38290.2279 to i32), i32* %v2_1be90, align 4
  %v2_1be9a = inttoptr i32 %v1_1be79 to i32*
  store i32 ptrtoint (i32* @global_var_382a4.2280 to i32), i32* %v2_1be9a, align 4
  store i32 %tmp102, i32* @eax, align 4
  %v2_1beae = call i32 @function_26cb6(i32 %tmp102, i32 %arg2)
  %v0_1beb3 = call i32 @function_1beda()
  ret i32 %v0_1beb3

; uselistorder directives
  uselistorder i32 %tmp102, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1beb6() local_unnamed_addr {
dec_label_pc_1beb6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1beb6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1beb6
}

define i32 @function_1beda() local_unnamed_addr {
dec_label_pc_1beda:
  %v0_1beda = load i32, i32* @ebp, align 4
  %v1_1beda = add i32 %v0_1beda, -12
  %v2_1beda = inttoptr i32 %v1_1beda to i32*
  %v3_1beda = load i32, i32* %v2_1beda, align 4
  %v1_1bedd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bedd = xor i32 %v1_1bedd, %v3_1beda
  %v3_1bedd = icmp eq i32 %v2_1bedd, 0
  store i32 %v2_1bedd, i32* @eax, align 4
  br i1 %v3_1bedd, label %bb, label %dec_label_pc_1bee6

bb:                                               ; preds = %dec_label_pc_1beda
  %v1_1bee4 = call i32 @function_1beeb()
  br label %dec_label_pc_1bee6

dec_label_pc_1bee6:                               ; preds = %bb, %dec_label_pc_1beda
  %v2_1bee4 = phi i32 [ %v1_1bee4, %bb ], [ %v2_1bedd, %dec_label_pc_1beda ]
  ret i32 %v2_1bee4
}

define i32 @function_1beeb() local_unnamed_addr {
dec_label_pc_1beeb:
  %v0_1bef0 = load i32, i32* @eax, align 4
  ret i32 %v0_1bef0
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bef1:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bef6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bef6
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1befb:
  %eax.global-to-local = alloca i32, align 4
  %v0_1bf00 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bf00
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_1bf06:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38278_type* @global_var_38278.2278 to i32), i32* %arg1, align 4
  %v1_1bf29 = add i32 %tmp99, 20
  %v2_1bf29 = inttoptr i32 %v1_1bf29 to i32*
  store i32 ptrtoint (i32* @global_var_38290.2279 to i32), i32* %v2_1bf29, align 4
  %v1_1bf33 = add i32 %tmp99, 24
  %v2_1bf33 = inttoptr i32 %v1_1bf33 to i32*
  store i32 ptrtoint (i32* @global_var_382a4.2280 to i32), i32* %v2_1bf33, align 4
  store i32 %v1_1bf33, i32* @eax, align 4
  %v1_1bf43 = call i32 @function_26cec(i32 %v1_1bf33)
  %v1_1bf4e = call i32 @__stack_chk_fail.1324(i32 %tmp99)
  %v1_1bf5d = call i32 @function_1bf6a()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 %v1_1bf33, { 1, 0, 2 }
  uselistorder i32 ptrtoint (%vtable_38278_type* @global_var_38278.2278 to i32), { 2, 1, 0 }
}

define i32 @function_1bf6a() local_unnamed_addr {
dec_label_pc_1bf6a:
  %v0_1bf6a = load i32, i32* @ebp, align 4
  %v1_1bf6a = add i32 %v0_1bf6a, -12
  %v2_1bf6a = inttoptr i32 %v1_1bf6a to i32*
  %v3_1bf6a = load i32, i32* %v2_1bf6a, align 4
  %v1_1bf6d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1bf6d = xor i32 %v1_1bf6d, %v3_1bf6a
  %v3_1bf6d = icmp eq i32 %v2_1bf6d, 0
  store i32 %v2_1bf6d, i32* @eax, align 4
  br i1 %v3_1bf6d, label %bb, label %dec_label_pc_1bf76

bb:                                               ; preds = %dec_label_pc_1bf6a
  %v1_1bf74 = call i32 @function_1bf7b()
  br label %dec_label_pc_1bf76

dec_label_pc_1bf76:                               ; preds = %bb, %dec_label_pc_1bf6a
  %v2_1bf74 = phi i32 [ %v1_1bf74, %bb ], [ %v2_1bf6d, %dec_label_pc_1bf6a ]
  ret i32 %v2_1bf74
}

define i32 @function_1bf7b() local_unnamed_addr {
dec_label_pc_1bf7b:
  %v0_1bf7c = load i32, i32* @eax, align 4
  ret i32 %v0_1bf7c
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf7e:
  %v4_1bf7e = add i32 %arg1, -24
  %v1_1bf83 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_1bf7e)
  ret i32 %v1_1bf83
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1bf85:
  %v4_1bf85 = add i32 %arg1, -20
  %v1_1bf8a = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %v4_1bf85)
  ret i32 %v1_1bf8a

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 2, 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) {
dec_label_pc_1bf8c:
  ret i32 %arg1
}

define i32 @function_1bfc9() local_unnamed_addr {
dec_label_pc_1bfc9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1bfc9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1bfc9 = add i32 %v0_1bfc9, -1
  store i32 %v1_1bfc9, i32* %ecx.global-to-local, align 4
  %v0_1bfcb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1bfcb
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_15throw_function_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1bfcc:
  %v2_1bff6 = call i32 @unknown_3e62c(i32 %arg1, i32 %arg2)
  store i32 %v2_1bff6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c007

bb:                                               ; preds = %dec_label_pc_1bfcc
  %v1_1c005 = call i32 @function_1c00c()
  br label %dec_label_pc_1c007

dec_label_pc_1c007:                               ; preds = %bb, %dec_label_pc_1bfcc
  %v2_1c005 = phi i32 [ %v1_1c005, %bb ], [ %v2_1bff6, %dec_label_pc_1bfcc ]
  ret i32 %v2_1c005
}

define i32 @function_1c00c() local_unnamed_addr {
dec_label_pc_1c00c:
  %v0_1c00d = load i32, i32* @eax, align 4
  ret i32 %v0_1c00d
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_file_EPKcEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKSA_E4typeESD_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c00e:
  %v2_1c038 = call i32 @unknown_3e6ac(i32 %arg1, i32 %arg2)
  store i32 %v2_1c038, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c049

bb:                                               ; preds = %dec_label_pc_1c00e
  %v1_1c047 = call i32 @function_1c04e()
  br label %dec_label_pc_1c049

dec_label_pc_1c049:                               ; preds = %bb, %dec_label_pc_1c00e
  %v2_1c047 = phi i32 [ %v1_1c047, %bb ], [ %v2_1c038, %dec_label_pc_1c00e ]
  ret i32 %v2_1c047
}

define i32 @function_1c04e() local_unnamed_addr {
dec_label_pc_1c04e:
  %v0_1c04f = load i32, i32* @eax, align 4
  ret i32 %v0_1c04f
}

define i32 @_ZN5boostlsINS_16exception_detail10clone_implINS1_10bad_alloc_EEENS_11throw_line_EiEENS_9enable_ifINS1_23derives_boost_exceptionIT_EERKS8_E4typeESB_RKNS_10error_infoIT0_T1_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c050:
  %v2_1c07a = call i32 @unknown_3e72c(i32 %arg1, i32 %arg2)
  store i32 %v2_1c07a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c08b

bb:                                               ; preds = %dec_label_pc_1c050
  %v1_1c089 = call i32 @function_1c090()
  br label %dec_label_pc_1c08b

dec_label_pc_1c08b:                               ; preds = %bb, %dec_label_pc_1c050
  %v2_1c089 = phi i32 [ %v1_1c089, %bb ], [ %v2_1c07a, %dec_label_pc_1c050 ]
  ret i32 %v2_1c089
}

define i32 @function_1c090() local_unnamed_addr {
dec_label_pc_1c090:
  %v0_1c091 = load i32, i32* @eax, align 4
  ret i32 %v0_1c091
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEEC1INS1_10clone_implINS1_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c092:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v10_1c0af = icmp eq i32 %arg2, 0
  br i1 %v10_1c0af, label %dec_label_pc_1c0c2, label %dec_label_pc_1c0b5

dec_label_pc_1c0b5:                               ; preds = %dec_label_pc_1c092
  %v1_1c0b8 = add i32 %arg2, 24
  br label %dec_label_pc_1c0c2

dec_label_pc_1c0c2:                               ; preds = %dec_label_pc_1c092, %dec_label_pc_1c0b5
  %storemerge = phi i32 [ %v1_1c0b8, %dec_label_pc_1c0b5 ], [ 0, %dec_label_pc_1c092 ]
  store i32 %storemerge, i32* %arg1, align 4
  %v1_1c0ca = add i32 %tmp104, 4
  %v2_1c0d7 = call i32 @unknown_3e7ac(i32 %v1_1c0ca, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c101

bb:                                               ; preds = %dec_label_pc_1c0c2
  %v4_1c0ff = call i32 @function_1c106(i32 %tmp104, i32 %arg2, i32 %arg2)
  br label %dec_label_pc_1c101

dec_label_pc_1c101:                               ; preds = %bb, %dec_label_pc_1c0c2
  %v5_1c0ff = phi i32 [ %v4_1c0ff, %bb ], [ 0, %dec_label_pc_1c0c2 ]
  ret i32 %v5_1c0ff

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1c0c2, { 1, 0 }
}

define i32 @function_1c106(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c106:
  %v0_1c107 = load i32, i32* @eax, align 4
  ret i32 %v0_1c107
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c108:
  %v1_1c128 = inttoptr i32 %arg2 to i32*
  %v2_1c128 = load i32, i32* %v1_1c128, align 4
  store i32 %v2_1c128, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c13b

bb:                                               ; preds = %dec_label_pc_1c108
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1c139 = call i32 @function_1c140(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1c13b

dec_label_pc_1c13b:                               ; preds = %bb, %dec_label_pc_1c108
  %v4_1c139 = phi i32 [ %v3_1c139, %bb ], [ 0, %dec_label_pc_1c108 ]
  ret i32 %v4_1c139

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c140(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c140:
  %v0_1c141 = load i32, i32* @eax, align 4
  ret i32 %v0_1c141
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c142:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c15c = load i32, i32* %arg1, align 4
  %v1_1c15e = add i32 %v2_1c15c, -1
  store i32 %v1_1c15e, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c175

bb:                                               ; preds = %dec_label_pc_1c142
  %v2_1c173 = call i32 @function_1c17a(i32 %tmp100)
  br label %dec_label_pc_1c175

dec_label_pc_1c175:                               ; preds = %bb, %dec_label_pc_1c142
  %v3_1c173 = phi i32 [ %v2_1c173, %bb ], [ %tmp100, %dec_label_pc_1c142 ]
  ret i32 %v3_1c173
}

define i32 @function_1c17a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c17a:
  %v0_1c17b = load i32, i32* @eax, align 4
  ret i32 %v0_1c17b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c17c:
  %v2_1c196 = load i32, i32* %arg1, align 4
  store i32 %v2_1c196, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c1a4

bb:                                               ; preds = %dec_label_pc_1c17c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c1a2 = call i32 @function_1c1a9(i32 %tmp100)
  br label %dec_label_pc_1c1a4

dec_label_pc_1c1a4:                               ; preds = %bb, %dec_label_pc_1c17c
  %v3_1c1a2 = phi i32 [ %v2_1c1a2, %bb ], [ %v2_1c196, %dec_label_pc_1c17c ]
  ret i32 %v3_1c1a2

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c1a9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c1a9:
  %v0_1c1aa = load i32, i32* @eax, align 4
  ret i32 %v0_1c1aa
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c1ac:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c1c6 = load i32, i32* %arg1, align 4
  %v1_1c1c8 = add i32 %v2_1c1c6, 1
  store i32 %v1_1c1c8, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c1df

bb:                                               ; preds = %dec_label_pc_1c1ac
  %v2_1c1dd = call i32 @function_1c1e4(i32 %tmp100)
  br label %dec_label_pc_1c1df

dec_label_pc_1c1df:                               ; preds = %bb, %dec_label_pc_1c1ac
  %v3_1c1dd = phi i32 [ %v2_1c1dd, %bb ], [ %tmp100, %dec_label_pc_1c1ac ]
  ret i32 %v3_1c1dd
}

define i32 @function_1c1e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c1e4:
  %v0_1c1e5 = load i32, i32* @eax, align 4
  ret i32 %v0_1c1e5
}

define i32 @_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c1e6:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c20c

bb:                                               ; preds = %dec_label_pc_1c1e6
  %v2_1c20a = call i32 @function_1c211(i32 %arg1)
  br label %dec_label_pc_1c20c

dec_label_pc_1c20c:                               ; preds = %bb, %dec_label_pc_1c1e6
  %v3_1c20a = phi i32 [ %v2_1c20a, %bb ], [ %arg1, %dec_label_pc_1c1e6 ]
  ret i32 %v3_1c20a
}

define i32 @function_1c211(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c211:
  %v0_1c212 = load i32, i32* @eax, align 4
  ret i32 %v0_1c212
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhhET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c213:
  %v7_1c250 = call i32 @unknown_3e9fe(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1c250, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c261

bb:                                               ; preds = %dec_label_pc_1c213
  %v1_1c25f = call i32 @function_1c266()
  br label %dec_label_pc_1c261

dec_label_pc_1c261:                               ; preds = %bb, %dec_label_pc_1c213
  %v2_1c25f = phi i32 [ %v1_1c25f, %bb ], [ %v7_1c250, %dec_label_pc_1c213 ]
  ret i32 %v2_1c25f

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c266() local_unnamed_addr {
dec_label_pc_1c266:
  %v0_1c267 = load i32, i32* @eax, align 4
  ret i32 %v0_1c267
}

define i32 @_ZN9__gnu_cxxneIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c268:
  store i32 %arg1, i32* @eax, align 4
  %v1_1c28c = call i32 @_ZTS12bignum_error(i32 %arg1)
  %v1_1c291 = inttoptr i32 %v1_1c28c to i32*
  %v2_1c291 = load i32, i32* %v1_1c291, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_1c299 = call i32 @_ZTS12bignum_error(i32 %arg2)
  %v1_1c29e = inttoptr i32 %v1_1c299 to i32*
  %v2_1c29e = load i32, i32* %v1_1c29e, align 4
  %v12_1c2a0 = icmp eq i32 %v2_1c291, %v2_1c29e
  %v1_1c2a2 = icmp eq i1 %v12_1c2a0, false
  %v2_1c2a2 = zext i1 %v1_1c2a2 to i32
  %v4_1c2a2 = and i32 %v2_1c29e, -256
  %v5_1c2a2 = or i32 %v2_1c2a2, %v4_1c2a2
  store i32 %v5_1c2a2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c2b1

bb:                                               ; preds = %dec_label_pc_1c268
  %v1_1c2af = call i32 @function_1c2b6()
  br label %dec_label_pc_1c2b1

dec_label_pc_1c2b1:                               ; preds = %bb, %dec_label_pc_1c268
  %v2_1c2af = phi i32 [ %v1_1c2af, %bb ], [ %v5_1c2a2, %dec_label_pc_1c268 ]
  ret i32 %v2_1c2af

; uselistorder directives
  uselistorder i32 %v2_1c29e, { 1, 0 }
  uselistorder i32 (i32)* @_ZTS12bignum_error, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1c2b6() local_unnamed_addr {
dec_label_pc_1c2b6:
  %v0_1c2bb = load i32, i32* @eax, align 4
  ret i32 %v0_1c2bb
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c2bc:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1c2e5 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1c2f2 = call i32 @unknown_3eaf6(i32 %v2_1c2e5, i32 %arg3)
  %v2_1c2fa = ptrtoint i32* %stack_var_-24 to i32
  %v2_1c307 = call i32 @unknown_3eaf6(i32 %v2_1c2fa, i32 %arg2)
  %v3_1c319 = load i32, i32* %stack_var_-20, align 4
  %v3_1c320 = load i32, i32* %stack_var_-24, align 4
  %v4_1c32a = call i32 @unknown_3eb40(i32 %arg1, i32 %v3_1c320, i32 %v3_1c319, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c341

bb:                                               ; preds = %dec_label_pc_1c2bc
  %v1_1c33f = call i32 @function_1c346()
  br label %dec_label_pc_1c341

dec_label_pc_1c341:                               ; preds = %bb, %dec_label_pc_1c2bc
  %v2_1c33f = phi i32 [ %v1_1c33f, %bb ], [ %arg1, %dec_label_pc_1c2bc ]
  ret i32 %v2_1c33f

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3eaf6, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c346() local_unnamed_addr {
dec_label_pc_1c346:
  %v0_1c347 = load i32, i32* @eax, align 4
  ret i32 %v0_1c347
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c34a:
  store i32 %arg1, i32* @eax, align 4
  %v1_1c36d = call i32 @function_37882(i32 %arg1)
  %v1_1c375 = add i32 %arg1, 4
  %v2_1c375 = inttoptr i32 %v1_1c375 to i32*
  %v3_1c375 = load i32, i32* %v2_1c375, align 4
  %v3_1c386 = call i32 @function_378af(i32 %arg2, i32 %v3_1c375, i32 %v1_1c36d)
  store i32 %arg2, i32* %v2_1c375, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c3a0

bb:                                               ; preds = %dec_label_pc_1c34a
  %v1_1c39e = call i32 @function_1c3a5()
  br label %dec_label_pc_1c3a0

dec_label_pc_1c3a0:                               ; preds = %bb, %dec_label_pc_1c34a
  %v2_1c39e = phi i32 [ %v1_1c39e, %bb ], [ 0, %dec_label_pc_1c34a ]
  ret i32 %v2_1c39e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @function_1c3a5() local_unnamed_addr {
dec_label_pc_1c3a5:
  %v0_1c3a6 = load i32, i32* @eax, align 4
  ret i32 %v0_1c3a6
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3a8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c3ce

bb:                                               ; preds = %dec_label_pc_1c3a8
  %v2_1c3cc = call i32 @function_1c3d3(i32 %arg1)
  br label %dec_label_pc_1c3ce

dec_label_pc_1c3ce:                               ; preds = %bb, %dec_label_pc_1c3a8
  %v3_1c3cc = phi i32 [ %v2_1c3cc, %bb ], [ %arg1, %dec_label_pc_1c3a8 ]
  ret i32 %v3_1c3cc
}

define i32 @function_1c3d3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c3d3:
  %v0_1c3d4 = load i32, i32* @eax, align 4
  ret i32 %v0_1c3d4
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c3d5:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c401

bb:                                               ; preds = %dec_label_pc_1c3d5
  %v3_1c3ff = call i32 @function_1c406(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1c401

dec_label_pc_1c401:                               ; preds = %bb, %dec_label_pc_1c3d5
  %v4_1c3ff = phi i32 [ %v3_1c3ff, %bb ], [ %arg1, %dec_label_pc_1c3d5 ]
  ret i32 %v4_1c3ff
}

define i32 @function_1c406(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c406:
  %v0_1c407 = load i32, i32* @eax, align 4
  ret i32 %v0_1c407
}

define i32 @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_1c40a:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_1c431 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1c435 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1c43b = call i32 @unknown_38fa5(i32 %v2_1c435, i32 %v4_1c431)
  %v4_1c440 = trunc i32 %v2_1c43b to i8
  %v5_1c440 = icmp eq i8 %v4_1c440, 0
  %v1_1c442 = icmp eq i1 %v5_1c440, false
  br i1 %v1_1c442, label %dec_label_pc_1c492, label %dec_label_pc_1c444

dec_label_pc_1c444:                               ; preds = %dec_label_pc_1c40a
  %v1_1c44a = call i32 @unknown_3ed20(i32 %v4_1c431)
  br label %dec_label_pc_1c479

dec_label_pc_1c451:                               ; preds = %dec_label_pc_1c479
  %v3_1c451 = load i32, i32* %stack_var_-36, align 4
  %v3_1c458 = load i32, i32* %stack_var_-32, align 4
  %v2_1c45e = call i32 @unknown_3edae(i32 %v3_1c458, i32 %v3_1c451)
  store i32 %v2_1c435, i32* @eax, align 4
  %v1_1c469 = call i32 @function_385b6(i32 %v2_1c435)
  %v1_1c474 = call i32 @unknown_3ed20(i32 %v4_1c431)
  br label %dec_label_pc_1c479

dec_label_pc_1c479:                               ; preds = %dec_label_pc_1c451, %dec_label_pc_1c444
  %v2_1c486 = call i32 @unknown_3ed5a(i32 %v2_1c435, i32 %v4_1c431)
  %v4_1c48b = trunc i32 %v2_1c486 to i8
  %v5_1c48b = icmp eq i8 %v4_1c48b, 0
  %v1_1c48d = icmp eq i1 %v5_1c48b, false
  br i1 %v1_1c48d, label %dec_label_pc_1c451, label %dec_label_pc_1c492

dec_label_pc_1c492:                               ; preds = %dec_label_pc_1c479, %dec_label_pc_1c40a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c49e

bb:                                               ; preds = %dec_label_pc_1c492
  %v1_1c49c = call i32 @function_1c4a3()
  br label %dec_label_pc_1c49e

dec_label_pc_1c49e:                               ; preds = %bb, %dec_label_pc_1c492
  %v2_1c49c = phi i32 [ %v1_1c49c, %bb ], [ 0, %dec_label_pc_1c492 ]
  ret i32 %v2_1c49c

; uselistorder directives
  uselistorder i32 %v2_1c435, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1c431, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @unknown_3ed20, { 1, 0 }
}

define i32 @function_1c4a3() local_unnamed_addr {
dec_label_pc_1c4a3:
  %v0_1c4a4 = load i32, i32* @eax, align 4
  ret i32 %v0_1c4a4
}

define i32 @_ZN5boost9addressofIKSt6vectorIS1_IhSaIhEESaIS3_EEEEPT_RS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4a5:
  %stack_var_-20 = alloca i32, align 4
  %v2_1c4c3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1c4c9 = call i32 @unknown_3ee8b(i32 %v2_1c4c3, i32 %arg1)
  %v1_1c4d4 = call i32 @unknown_3eec3(i32 %v2_1c4c3)
  %v2_1c4e4 = call i32 @unknown_3eef2(i32 %v1_1c4d4, i32 0)
  store i32 %v2_1c4e4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c4f5

bb:                                               ; preds = %dec_label_pc_1c4a5
  %v1_1c4f3 = call i32 @function_1c4fa()
  br label %dec_label_pc_1c4f5

dec_label_pc_1c4f5:                               ; preds = %bb, %dec_label_pc_1c4a5
  %v2_1c4f3 = phi i32 [ %v1_1c4f3, %bb ], [ %v2_1c4e4, %dec_label_pc_1c4a5 ]
  ret i32 %v2_1c4f3
}

define i32 @function_1c4fa() local_unnamed_addr {
dec_label_pc_1c4fa:
  %v0_1c4fb = load i32, i32* @eax, align 4
  ret i32 %v0_1c4fb
}

define i32 @_ZN5boost15foreach_detail_13auto_any_baseC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4fc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c51f

bb:                                               ; preds = %dec_label_pc_1c4fc
  %v2_1c51d = call i32 @function_1c524(i32 %arg1)
  br label %dec_label_pc_1c51f

dec_label_pc_1c51f:                               ; preds = %bb, %dec_label_pc_1c4fc
  %v3_1c51d = phi i32 [ %v2_1c51d, %bb ], [ 0, %dec_label_pc_1c4fc ]
  ret i32 %v3_1c51d
}

define i32 @function_1c524(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c524:
  %v0_1c525 = load i32, i32* @eax, align 4
  ret i32 %v0_1c525
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPKSt6vectorIS2_IhSaIhEESaIS4_EEEC1ERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c526:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v1_1c549 = call i32 @function_38a22(i32 %tmp102)
  %v1_1c551 = inttoptr i32 %arg2 to i32*
  %v2_1c551 = load i32, i32* %v1_1c551, align 4
  store i32 %v2_1c551, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c564

bb:                                               ; preds = %dec_label_pc_1c526
  %v1_1c562 = call i32 @function_1c569()
  br label %dec_label_pc_1c564

dec_label_pc_1c564:                               ; preds = %bb, %dec_label_pc_1c526
  %v2_1c562 = phi i32 [ %v1_1c562, %bb ], [ 0, %dec_label_pc_1c526 ]
  ret i32 %v2_1c562

; uselistorder directives
  uselistorder i32 %tmp102, { 1, 0 }
}

define i32 @function_1c569() local_unnamed_addr {
dec_label_pc_1c569:
  %v0_1c56a = load i32, i32* @eax, align 4
  ret i32 %v0_1c56a
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SF_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c56b:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c591

bb:                                               ; preds = %dec_label_pc_1c56b
  %v2_1c58f = call i32 @function_1c596(i32 %arg1)
  br label %dec_label_pc_1c591

dec_label_pc_1c591:                               ; preds = %bb, %dec_label_pc_1c56b
  %v3_1c58f = phi i32 [ %v2_1c58f, %bb ], [ %arg1, %dec_label_pc_1c56b ]
  ret i32 %v3_1c58f
}

define i32 @function_1c596(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c596:
  %v0_1c597 = load i32, i32* @eax, align 4
  ret i32 %v0_1c597
}

define i32 @_ZN5boost15foreach_detail_7derefofIKSt6vectorIS2_IhSaIhEESaIS4_EEEERT_PS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c598:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c5be

bb:                                               ; preds = %dec_label_pc_1c598
  %v2_1c5bc = call i32 @function_1c5c3(i32 %arg1)
  br label %dec_label_pc_1c5be

dec_label_pc_1c5be:                               ; preds = %bb, %dec_label_pc_1c598
  %v3_1c5bc = phi i32 [ %v2_1c5bc, %bb ], [ %arg1, %dec_label_pc_1c598 ]
  ret i32 %v3_1c5bc
}

define i32 @function_1c5c3(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5c3:
  %v0_1c5c4 = load i32, i32* @eax, align 4
  ret i32 %v0_1c5c4
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIKT_E4typeERS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c5c5:
  %v2_1c5ef = call i32 @unknown_3f045(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c606

bb:                                               ; preds = %dec_label_pc_1c5c5
  %v1_1c604 = call i32 @function_1c60b()
  br label %dec_label_pc_1c606

dec_label_pc_1c606:                               ; preds = %bb, %dec_label_pc_1c5c5
  %v2_1c604 = phi i32 [ %v1_1c604, %bb ], [ %arg1, %dec_label_pc_1c5c5 ]
  ret i32 %v2_1c604

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c60b() local_unnamed_addr {
dec_label_pc_1c60b:
  %v0_1c60c = load i32, i32* @eax, align 4
  ret i32 %v0_1c60c
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEEC1ERKSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c610:
  %v1_1c63e = inttoptr i32 %arg2 to i32*
  %v2_1c63e = load i32, i32* %v1_1c63e, align 4
  store i32 %v2_1c63e, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c64e

bb:                                               ; preds = %dec_label_pc_1c610
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_1c64c = call i32 @function_1c653(i32 %tmp102)
  br label %dec_label_pc_1c64e

dec_label_pc_1c64e:                               ; preds = %bb, %dec_label_pc_1c610
  %v3_1c64c = phi i32 [ %v2_1c64c, %bb ], [ 0, %dec_label_pc_1c610 ]
  ret i32 %v3_1c64c

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c653(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c653:
  %v0_1c654 = load i32, i32* @eax, align 4
  ret i32 %v0_1c654
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIKT_E4typeERS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c655:
  %v2_1c67f = call i32 @unknown_3f11f(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c696

bb:                                               ; preds = %dec_label_pc_1c655
  %v1_1c694 = call i32 @function_1c69b()
  br label %dec_label_pc_1c696

dec_label_pc_1c696:                               ; preds = %bb, %dec_label_pc_1c655
  %v2_1c694 = phi i32 [ %v1_1c694, %bb ], [ %arg1, %dec_label_pc_1c655 ]
  ret i32 %v2_1c694

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c69b() local_unnamed_addr {
dec_label_pc_1c69b:
  %v0_1c69c = load i32, i32* @eax, align 4
  ret i32 %v0_1c69c
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SI_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c69f:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c6c5

bb:                                               ; preds = %dec_label_pc_1c69f
  %v2_1c6c3 = call i32 @function_1c6ca(i32 %arg1)
  br label %dec_label_pc_1c6c5

dec_label_pc_1c6c5:                               ; preds = %bb, %dec_label_pc_1c69f
  %v3_1c6c3 = phi i32 [ %v2_1c6c3, %bb ], [ %arg1, %dec_label_pc_1c69f ]
  ret i32 %v3_1c6c3
}

define i32 @function_1c6ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c6ca:
  %v0_1c6cb = load i32, i32* @eax, align 4
  ret i32 %v0_1c6cb
}

define i32 @_ZN9__gnu_cxxeqIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1c6cc:
  %v1_1c6f0 = call i32 @unknown_3f1e0(i32 %arg1)
  %v1_1c6f5 = inttoptr i32 %v1_1c6f0 to i32*
  %v2_1c6f5 = load i32, i32* %v1_1c6f5, align 4
  %v1_1c6fd = call i32 @unknown_3f1e0(i32 %arg2)
  %v1_1c702 = inttoptr i32 %v1_1c6fd to i32*
  %v2_1c702 = load i32, i32* %v1_1c702, align 4
  %v12_1c704 = icmp eq i32 %v2_1c6f5, %v2_1c702
  %v1_1c706 = zext i1 %v12_1c704 to i32
  %v3_1c706 = and i32 %v2_1c702, -256
  %v4_1c706 = or i32 %v1_1c706, %v3_1c706
  store i32 %v4_1c706, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c715

bb:                                               ; preds = %dec_label_pc_1c6cc
  %v1_1c713 = call i32 @function_1c71a()
  br label %dec_label_pc_1c715

dec_label_pc_1c715:                               ; preds = %bb, %dec_label_pc_1c6cc
  %v2_1c713 = phi i32 [ %v1_1c713, %bb ], [ %v4_1c706, %dec_label_pc_1c6cc ]
  ret i32 %v2_1c713

; uselistorder directives
  uselistorder i32 %v2_1c702, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3f1e0, { 1, 0 }
}

define i32 @function_1c71a() local_unnamed_addr {
dec_label_pc_1c71a:
  %v0_1c71f = load i32, i32* @eax, align 4
  ret i32 %v0_1c71f
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c720:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c73a = load i32, i32* %arg1, align 4
  %v1_1c73c = add i32 %v2_1c73a, 12
  store i32 %v1_1c73c, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c753

bb:                                               ; preds = %dec_label_pc_1c720
  %v2_1c751 = call i32 @function_1c758(i32 %tmp100)
  br label %dec_label_pc_1c753

dec_label_pc_1c753:                               ; preds = %bb, %dec_label_pc_1c720
  %v3_1c751 = phi i32 [ %v2_1c751, %bb ], [ %tmp100, %dec_label_pc_1c720 ]
  ret i32 %v3_1c751
}

define i32 @function_1c758(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c758:
  %v0_1c759 = load i32, i32* @eax, align 4
  ret i32 %v0_1c759
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1c75a:
  %v2_1c774 = load i32, i32* %arg1, align 4
  store i32 %v2_1c774, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c782

bb:                                               ; preds = %dec_label_pc_1c75a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1c780 = call i32 @function_1c787(i32 %tmp100)
  br label %dec_label_pc_1c782

dec_label_pc_1c782:                               ; preds = %bb, %dec_label_pc_1c75a
  %v3_1c780 = phi i32 [ %v2_1c780, %bb ], [ %v2_1c774, %dec_label_pc_1c75a ]
  ret i32 %v3_1c780

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1c787(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c787:
  %v0_1c788 = load i32, i32* @eax, align 4
  ret i32 %v0_1c788
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE9constructEPhRKh(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_1c78a:
  store i32 %arg2, i32* @eax, align 4
  %v2_1c7bb = call i32 @function_25676(i32 1, i32 %arg2)
  %v2_1c7c0 = icmp eq i32 %v2_1c7bb, 0
  br i1 %v2_1c7c0, label %dec_label_pc_1c7cc, label %dec_label_pc_1c7c4

dec_label_pc_1c7c4:                               ; preds = %dec_label_pc_1c78a
  %v3_1c7bb = inttoptr i32 %v2_1c7bb to i8*
  %v2_1c7c7 = load i8, i8* %arg3, align 1
  store i8 %v2_1c7c7, i8* %v3_1c7bb, align 1
  br label %dec_label_pc_1c7cc

dec_label_pc_1c7cc:                               ; preds = %dec_label_pc_1c7c4, %dec_label_pc_1c78a
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1c7d8

bb:                                               ; preds = %dec_label_pc_1c7cc
  %v1_1c7d6 = call i32 @function_1c7dd()
  br label %dec_label_pc_1c7d8

dec_label_pc_1c7d8:                               ; preds = %bb, %dec_label_pc_1c7cc
  %v2_1c7d6 = phi i32 [ %v1_1c7d6, %bb ], [ 0, %dec_label_pc_1c7cc ]
  ret i32 %v2_1c7d6

; uselistorder directives
  uselistorder i32 %v2_1c7bb, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1c7dd() local_unnamed_addr {
dec_label_pc_1c7dd:
  %v0_1c7de = load i32, i32* @eax, align 4
  ret i32 %v0_1c7de
}

define i32 @_ZNSt6vectorIhSaIhEE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPhS1_EERKh(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c7e0:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_1c808 = add i32 %tmp117, 4
  %v2_1c808 = inttoptr i32 %v1_1c808 to i32*
  %v3_1c808 = load i32, i32* %v2_1c808, align 4
  %v1_1c80e = add i32 %tmp117, 8
  %v2_1c80e = inttoptr i32 %v1_1c80e to i32*
  %v3_1c80e = load i32, i32* %v2_1c80e, align 4
  %v12_1c811 = icmp eq i32 %v3_1c808, %v3_1c80e
  br i1 %v12_1c811, label %dec_label_pc_1c894, label %dec_label_pc_1c815

dec_label_pc_1c815:                               ; preds = %dec_label_pc_1c7e0
  %tmp122 = inttoptr i32 %arg3 to i8*
  %v3_1c818 = load i32, i32* %v2_1c808, align 4
  %v1_1c81b = add i32 %v3_1c818, -1
  %v4_1c832 = call i32 @unknown_38f6a(i32 %tmp117, i32 %v3_1c818, i32 %v1_1c81b)
  %v3_1c83a = load i32, i32* %v2_1c808, align 4
  %v1_1c83d = add i32 %v3_1c83a, 1
  store i32 %v1_1c83d, i32* %v2_1c808, align 4
  %v2_1c849 = load i8, i8* %tmp122, align 1
  store i32 %v3_1c83a, i32* %esi.global-to-local, align 4
  %v3_1c85b = load i32, i32* %v2_1c808, align 4
  %v1_1c85e = add i32 %v3_1c85b, -2
  store i32 %v1_1c85e, i32* %ebx.global-to-local, align 4
  %v2_1c861 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1c861, i32* @eax, align 4
  %v1_1c867 = call i32 @function_38b88(i32 %v2_1c861)
  %v1_1c86c = inttoptr i32 %v1_1c867 to i32*
  %v2_1c86c = load i32, i32* %v1_1c86c, align 4
  %v0_1c86e = load i32, i32* %esi.global-to-local, align 4
  %v0_1c872 = load i32, i32* %ebx.global-to-local, align 4
  %v4_1c879 = call i32 @unknown_3f321(i32 %v2_1c86c, i32 %v0_1c872, i32 %v0_1c86e)
  store i32 %v2_1c861, i32* @eax, align 4
  %v1_1c884 = call i32 @function_3895c(i32 %v2_1c861)
  %v3_1c88d = inttoptr i32 %v1_1c884 to i8*
  store i8 %v2_1c849, i8* %v3_1c88d, align 1
  %v0_1c88f = call i32 @function_1ca7f()
  ret i32 %v0_1c88f

dec_label_pc_1c894:                               ; preds = %dec_label_pc_1c7e0
  %v4_1c8aa = call i32 @unknown_3f388(i32 %tmp117, i32 1, i32 ptrtoint ([22 x i8]* @global_var_c5ba.2282 to i32))
  %v2_1c8b2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1c8b2, i32* @eax, align 4
  %v2_1c8bf = call i32 @function_32d9a(i32 %v2_1c8b2, i32 %tmp117)
  %v0_1c8c4 = load i32, i32* @esp, align 4
  %v5_1c8c4 = icmp ult i32 %v0_1c8c4, 4
  store i1 %v5_1c8c4, i1* @cf, align 1
  %v2_1c8ce = ptrtoint i32* %stack_var_-52 to i32
  %v2_1c8e9 = call i32 @unknown_3e736(i32 %tmp117, i32 %v4_1c8aa)
  %v3_1c8fd = add i32 %v2_1c8e9, %v2_1c8ce
  %v3_1c911 = call i32 @unknown_38f6a(i32 %tmp117, i32 %v3_1c8fd, i32 %arg3)
  store i32 %tmp117, i32* @eax, align 4
  %v1_1c923 = call i32 @function_37d18(i32 %tmp117)
  store i32 %v1_1c923, i32* @ebx, align 4
  store i32 %v2_1c8ce, i32* @eax, align 4
  %v1_1c930 = call i32 @function_38b88(i32 %v2_1c8ce)
  %v1_1c935 = inttoptr i32 %v1_1c930 to i32*
  %v2_1c935 = load i32, i32* %v1_1c935, align 4
  %v2_1c93a = load i32, i32* %arg1, align 4
  %v0_1c93c = load i32, i32* @ebx, align 4
  %v5_1c94e = call i32 @unknown_3f45a(i32 %v2_1c93a, i32 %v2_1c935, i32 %v2_1c8e9, i32 %v0_1c93c)
  %v4_1c956 = add i32 %v5_1c94e, 1
  %v8_1c956 = icmp eq i32 %v5_1c94e, -1
  store i1 %v8_1c956, i1* @cf, align 1
  store i32 %tmp117, i32* @eax, align 4
  %v1_1c960 = call i32 @function_37d18(i32 %tmp117)
  store i32 %v1_1c960, i32* @ebx, align 4
  %v3_1c96a = load i32, i32* %v2_1c808, align 4
  store i32 %v3_1c96a, i32* %esi.global-to-local, align 4
  store i32 %v2_1c8ce, i32* @eax, align 4
  %v1_1c973 = call i32 @function_38b88(i32 %v2_1c8ce)
  %v1_1c978 = inttoptr i32 %v1_1c973 to i32*
  %v2_1c978 = load i32, i32* %v1_1c978, align 4
  %v0_1c97a = load i32, i32* @ebx, align 4
  %v5_1c98c = call i32 @unknown_3f45a(i32 %v2_1c978, i32 %v3_1c96a, i32 %v4_1c956, i32 %v0_1c97a)
  store i32 %tmp117, i32* @eax, align 4
  %v1_1c99a = call i32 @function_37d18(i32 %tmp117)
  %v3_1c9bd = load i32, i32* %v2_1c80e, align 4
  %v2_1c9c5 = load i32, i32* %arg1, align 4
  %v2_1c9c9 = sub i32 %v3_1c9bd, %v2_1c9c5
  store i32 %v2_1c9c9, i32* @ecx, align 4
  %v2_1c9d2 = load i32, i32* %arg1, align 4
  store i32 %tmp117, i32* @eax, align 4
  %v3_1c9e2 = call i32 @function_37fe0(i32 %tmp117, i32 %v2_1c9d2, i32 %v2_1c9c9)
  store i32 %v2_1c8e9, i32* %arg1, align 4
  store i32 %v5_1c98c, i32* %v2_1c808, align 4
  %v2_1c9fe = add i32 %v2_1c8e9, %v4_1c8aa
  store i32 %v2_1c9fe, i32* %v2_1c80e, align 4
  %v0_1ca06 = call i32 @function_1ca7f()
  ret i32 %v0_1ca06

; uselistorder directives
  uselistorder i32 %v2_1c8e9, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1c8ce, { 1, 2, 3, 4, 0 }
  uselistorder i32* %v2_1c808, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32 %tmp117, { 2, 1, 4, 3, 6, 5, 8, 7, 9, 10, 11, 12, 0, 14, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_3f45a, { 1, 0 }
  uselistorder i32 ()* @function_1ca7f, { 1, 0 }
  uselistorder i32 (i32)* @function_38b88, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_38f6a, { 1, 0 }
}

define i32 @function_1ca09() local_unnamed_addr {
dec_label_pc_1ca09:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ca09 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ca09
}

define i32 @function_1ca20() local_unnamed_addr {
dec_label_pc_1ca20:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1ca20 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ca20 = add i32 %v0_1ca20, 1962991741
  %v2_1ca20 = inttoptr i32 %v1_1ca20 to i32*
  %v3_1ca20 = load i32, i32* %v2_1ca20, align 4
  %v4_1ca20 = add i32 %v3_1ca20, 1
  store i32 %v4_1ca20, i32* %v2_1ca20, align 4
  %v0_1ca26 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1ca26 = add i32 %v0_1ca26, 1435232325
  %v2_1ca26 = inttoptr i32 %v1_1ca26 to i32*
  %v3_1ca26 = load i32, i32* %v2_1ca26, align 4
  %v4_1ca26 = load i32, i32* @ecx, align 4
  %v5_1ca26 = load i1, i1* %cf.global-to-local, align 1
  %v6_1ca26 = zext i1 %v5_1ca26 to i32
  %v7_1ca26 = sub i32 %v3_1ca26, %v4_1ca26
  %v8_1ca26 = add i32 %v7_1ca26, %v6_1ca26
  store i32 %v8_1ca26, i32* %v2_1ca26, align 4
  %v0_1ca2d = load i32, i32* %edx.global-to-local, align 4
  %v1_1ca2d = load i32, i32* %eax.global-to-local, align 4
  %v2_1ca2d = add i32 %v1_1ca2d, %v0_1ca2d
  %v7_1ca2d = icmp ult i32 %v2_1ca2d, %v0_1ca2d
  store i1 %v7_1ca2d, i1* %cf.global-to-local, align 1
  store i32 %v2_1ca2d, i32* %edx.global-to-local, align 4
  %v0_1ca2f = load i32, i32* @ebp, align 4
  %v1_1ca2f = add i32 %v0_1ca2f, -44
  %v2_1ca2f = inttoptr i32 %v1_1ca2f to i32*
  %v3_1ca2f = load i32, i32* %v2_1ca2f, align 4
  store i32 %v3_1ca2f, i32* %eax.global-to-local, align 4
  %v2_1ca39 = call i32 @unknown_3b5a2(i32 %v3_1ca2f, i32 %v2_1ca2d)
  store i32 %v2_1ca39, i32* %eax.global-to-local, align 4
  %v0_1ca3e = call i32 @function_1ca61()
  store i32 %v0_1ca3e, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ca3e

; uselistorder directives
  uselistorder i32 %v0_1ca2d, { 1, 0 }
}

define i32 @function_1ca40() local_unnamed_addr {
dec_label_pc_1ca40:
  %v0_1ca40 = load i32, i32* @ebp, align 4
  %v1_1ca40 = add i32 %v0_1ca40, -44
  %v2_1ca40 = inttoptr i32 %v1_1ca40 to i32*
  %v3_1ca40 = load i32, i32* %v2_1ca40, align 4
  store i32 %v3_1ca40, i32* @eax, align 4
  %v1_1ca46 = call i32 @function_37d18(i32 %v3_1ca40)
  %v0_1ca4f = load i32, i32* @ebp, align 4
  %v1_1ca56 = add i32 %v0_1ca4f, -20
  %v2_1ca56 = inttoptr i32 %v1_1ca56 to i32*
  %v3_1ca56 = load i32, i32* %v2_1ca56, align 4
  ret i32 %v3_1ca56

; uselistorder directives
  uselistorder i32 (i32)* @function_37d18, { 3, 2, 1, 0 }
}

define i32 @function_1ca61() local_unnamed_addr {
dec_label_pc_1ca61:
  %v0_1ca61 = load i32, i32* @ebp, align 4
  %v1_1ca61 = add i32 %v0_1ca61, -44
  %v2_1ca61 = inttoptr i32 %v1_1ca61 to i32*
  %v3_1ca61 = load i32, i32* %v2_1ca61, align 4
  store i32 %v3_1ca61, i32* @eax, align 4
  %v1_1ca64 = add i32 %v0_1ca61, -28
  %v2_1ca64 = inttoptr i32 %v1_1ca64 to i32*
  %v3_1ca64 = load i32, i32* %v2_1ca64, align 4
  %v1_1ca6b = add i32 %v0_1ca61, -20
  %v2_1ca6b = inttoptr i32 %v1_1ca6b to i32*
  %v3_1ca6b = load i32, i32* %v2_1ca6b, align 4
  %v3_1ca75 = call i32 @function_37fe0(i32 %v3_1ca61, i32 %v3_1ca6b, i32 %v3_1ca64)
  ret i32 %v3_1ca75

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_37fe0, { 1, 0 }
}

define i32 @function_1ca7f() local_unnamed_addr {
dec_label_pc_1ca7f:
  %v0_1ca7f = load i32, i32* @ebp, align 4
  %v1_1ca7f = add i32 %v0_1ca7f, -12
  %v2_1ca7f = inttoptr i32 %v1_1ca7f to i32*
  %v3_1ca7f = load i32, i32* %v2_1ca7f, align 4
  %v1_1ca82 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ca82 = xor i32 %v1_1ca82, %v3_1ca7f
  %v3_1ca82 = icmp eq i32 %v2_1ca82, 0
  store i32 %v2_1ca82, i32* @eax, align 4
  br i1 %v3_1ca82, label %bb, label %dec_label_pc_1ca8b

bb:                                               ; preds = %dec_label_pc_1ca7f
  %v1_1ca89 = call i32 @function_1ca90()
  br label %dec_label_pc_1ca8b

dec_label_pc_1ca8b:                               ; preds = %bb, %dec_label_pc_1ca7f
  %v2_1ca89 = phi i32 [ %v1_1ca89, %bb ], [ %v2_1ca82, %dec_label_pc_1ca7f ]
  ret i32 %v2_1ca89
}

define i32 @function_1ca90() local_unnamed_addr {
dec_label_pc_1ca90:
  %v0_1ca96 = load i32, i32* @eax, align 4
  ret i32 %v0_1ca96
}

define i32 @_ZNSt12_Vector_baseIhSaIhEEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ca98:
  %v2_1cac2 = call i32 @unknown_3e98e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cad3

bb:                                               ; preds = %dec_label_pc_1ca98
  %v1_1cad1 = call i32 @function_1cad8()
  br label %dec_label_pc_1cad3

dec_label_pc_1cad3:                               ; preds = %bb, %dec_label_pc_1ca98
  %v2_1cad1 = phi i32 [ %v1_1cad1, %bb ], [ 0, %dec_label_pc_1ca98 ]
  ret i32 %v2_1cad1
}

define i32 @function_1cad8() local_unnamed_addr {
dec_label_pc_1cad8:
  %v0_1cad9 = load i32, i32* @eax, align 4
  ret i32 %v0_1cad9
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1cada:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cb04 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1cb04, 16777216
  %v8_1cb1c = sdiv i32 %sext, 16777216
  %v9_1cb1c = sext i8 %arg4 to i32
  %v10_1cb1c = call i32 @unknown_3f7b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_1cb1c, i32 %v9_1cb1c, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cb2d

bb:                                               ; preds = %dec_label_pc_1cada
  %v1_1cb2b = call i32 @function_1cb32()
  br label %dec_label_pc_1cb2d

dec_label_pc_1cb2d:                               ; preds = %bb, %dec_label_pc_1cada
  %v2_1cb2b = phi i32 [ %v1_1cb2b, %bb ], [ 0, %dec_label_pc_1cada ]
  ret i32 %v2_1cb2b

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cb32() local_unnamed_addr {
dec_label_pc_1cb32:
  %v0_1cb33 = load i32, i32* @eax, align 4
  ret i32 %v0_1cb33
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_insert_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1cb34:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cb64 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1cb64, 16777216
  %v5_1cb83 = sdiv i32 %sext, 16777216
  %v6_1cb83 = call i32 @unknown_3f8b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1cb83)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cb94

bb:                                               ; preds = %dec_label_pc_1cb34
  %v1_1cb92 = call i32 @function_1cb99()
  br label %dec_label_pc_1cb94

dec_label_pc_1cb94:                               ; preds = %bb, %dec_label_pc_1cb34
  %v2_1cb92 = phi i32 [ %v1_1cb92, %bb ], [ 0, %dec_label_pc_1cb34 ]
  ret i32 %v2_1cb92
}

define i32 @function_1cb99() local_unnamed_addr {
dec_label_pc_1cb99:
  %v0_1cb9a = load i32, i32* @eax, align 4
  ret i32 %v0_1cb9a
}

define i32 @_ZN9__gnu_cxxeqIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cb9b:
  %v1_1cbbf = call i32 @unknown_38f43(i32 %arg1)
  %v1_1cbc4 = inttoptr i32 %v1_1cbbf to i32*
  %v2_1cbc4 = load i32, i32* %v1_1cbc4, align 4
  %v1_1cbcc = call i32 @unknown_38f43(i32 %arg2)
  %v1_1cbd1 = inttoptr i32 %v1_1cbcc to i32*
  %v2_1cbd1 = load i32, i32* %v1_1cbd1, align 4
  %v12_1cbd3 = icmp eq i32 %v2_1cbc4, %v2_1cbd1
  %v1_1cbd5 = zext i1 %v12_1cbd3 to i32
  %v3_1cbd5 = and i32 %v2_1cbd1, -256
  %v4_1cbd5 = or i32 %v1_1cbd5, %v3_1cbd5
  store i32 %v4_1cbd5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cbe4

bb:                                               ; preds = %dec_label_pc_1cb9b
  %v1_1cbe2 = call i32 @function_1cbe9()
  br label %dec_label_pc_1cbe4

dec_label_pc_1cbe4:                               ; preds = %bb, %dec_label_pc_1cb9b
  %v2_1cbe2 = phi i32 [ %v1_1cbe2, %bb ], [ %v4_1cbd5, %dec_label_pc_1cb9b ]
  ret i32 %v2_1cbe2

; uselistorder directives
  uselistorder i32 %v2_1cbd1, { 1, 0 }
  uselistorder i32 (i32)* @unknown_38f43, { 1, 0 }
}

define i32 @function_1cbe9() local_unnamed_addr {
dec_label_pc_1cbe9:
  %v0_1cbee = load i32, i32* @eax, align 4
  ret i32 %v0_1cbee
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_insert_dispatchIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1cbf0:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cc20 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1cc20, 16777216
  %v5_1cc3f = sdiv i32 %sext, 16777216
  %v6_1cc3f = call i32 @unknown_3fd54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1cc3f)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cc50

bb:                                               ; preds = %dec_label_pc_1cbf0
  %v1_1cc4e = call i32 @function_1cc55()
  br label %dec_label_pc_1cc50

dec_label_pc_1cc50:                               ; preds = %bb, %dec_label_pc_1cbf0
  %v2_1cc4e = phi i32 [ %v1_1cc4e, %bb ], [ 0, %dec_label_pc_1cbf0 ]
  ret i32 %v2_1cc4e
}

define i32 @function_1cc55() local_unnamed_addr {
dec_label_pc_1cc55:
  %v0_1cc56 = load i32, i32* @eax, align 4
  ret i32 %v0_1cc56
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_insert_dispatchIPKhEEvN9__gnu_cxx17__normal_iteratorIPhS1_EET_S9_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_1cc58:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cc88 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1cc88, 16777216
  %v5_1cca7 = sdiv i32 %sext, 16777216
  %v6_1cca7 = call i32 @unknown_4018e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_1cca7)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ccb8

bb:                                               ; preds = %dec_label_pc_1cc58
  %v1_1ccb6 = call i32 @function_1ccbd()
  br label %dec_label_pc_1ccb8

dec_label_pc_1ccb8:                               ; preds = %bb, %dec_label_pc_1cc58
  %v2_1ccb6 = phi i32 [ %v1_1ccb6, %bb ], [ 0, %dec_label_pc_1cc58 ]
  ret i32 %v2_1ccb6
}

define i32 @function_1ccbd() local_unnamed_addr {
dec_label_pc_1ccbd:
  %v0_1ccbe = load i32, i32* @eax, align 4
  ret i32 %v0_1ccbe
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ccc0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cce6

bb:                                               ; preds = %dec_label_pc_1ccc0
  %v2_1cce4 = call i32 @function_1cceb(i32 %arg1)
  br label %dec_label_pc_1cce6

dec_label_pc_1cce6:                               ; preds = %bb, %dec_label_pc_1ccc0
  %v3_1cce4 = phi i32 [ %v2_1cce4, %bb ], [ %arg1, %dec_label_pc_1ccc0 ]
  ret i32 %v3_1cce4
}

define i32 @function_1cceb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cceb:
  %v0_1ccec = load i32, i32* @eax, align 4
  ret i32 %v0_1ccec
}

define i32 @_ZNSt6vectorIhSaIhEE18_M_assign_dispatchIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1ccee:
  %edx.global-to-local = alloca i32, align 4
  %v0_1cd18 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_1cd18, 16777216
  %v8_1cd30 = sdiv i32 %sext, 16777216
  %v9_1cd30 = sext i8 %arg4 to i32
  %v10_1cd30 = call i32 @unknown_405f6(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v8_1cd30, i32 %v9_1cd30, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cd41

bb:                                               ; preds = %dec_label_pc_1ccee
  %v1_1cd3f = call i32 @function_1cd46()
  br label %dec_label_pc_1cd41

dec_label_pc_1cd41:                               ; preds = %bb, %dec_label_pc_1ccee
  %v2_1cd3f = phi i32 [ %v1_1cd3f, %bb ], [ 0, %dec_label_pc_1ccee ]
  ret i32 %v2_1cd3f

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cd46() local_unnamed_addr {
dec_label_pc_1cd46:
  %v0_1cd47 = load i32, i32* @eax, align 4
  ret i32 %v0_1cd47
}

define i32 @_ZSt5equalIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_EbT_S8_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cd48:
  %v1_1cd73 = call i32 @unknown_40809(i32 %arg3)
  %v1_1cd80 = call i32 @unknown_40809(i32 %arg2)
  %v1_1cd8d = call i32 @unknown_40809(i32 %arg1)
  %v3_1cd9d = call i32 @unknown_4083e(i32 %v1_1cd8d, i32 %v1_1cd80, i32 %v1_1cd73)
  store i32 %v3_1cd9d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cdae

bb:                                               ; preds = %dec_label_pc_1cd48
  %v1_1cdac = call i32 @function_1cdb3()
  br label %dec_label_pc_1cdae

dec_label_pc_1cdae:                               ; preds = %bb, %dec_label_pc_1cd48
  %v2_1cdac = phi i32 [ %v1_1cdac, %bb ], [ %v3_1cd9d, %dec_label_pc_1cd48 ]
  ret i32 %v2_1cdac

; uselistorder directives
  uselistorder i32 (i32)* @unknown_40809, { 2, 1, 0 }
}

define i32 @function_1cdb3() local_unnamed_addr {
dec_label_pc_1cdb3:
  %v0_1cdb9 = load i32, i32* @eax, align 4
  ret i32 %v0_1cdb9
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cdba:
  %v1_1cdd7 = call i32 @unknown_40956(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cde8

bb:                                               ; preds = %dec_label_pc_1cdba
  %v1_1cde6 = call i32 @function_1cded()
  br label %dec_label_pc_1cde8

dec_label_pc_1cde8:                               ; preds = %bb, %dec_label_pc_1cdba
  %v2_1cde6 = phi i32 [ %v1_1cde6, %bb ], [ 0, %dec_label_pc_1cdba ]
  ret i32 %v2_1cde6
}

define i32 @function_1cded() local_unnamed_addr {
dec_label_pc_1cded:
  %v0_1cdee = load i32, i32* @eax, align 4
  ret i32 %v0_1cdee
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cdf0:
  %v1_1ce0d = call i32 @unknown_4093a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ce1e

bb:                                               ; preds = %dec_label_pc_1cdf0
  %v1_1ce1c = call i32 @function_1ce23()
  br label %dec_label_pc_1ce1e

dec_label_pc_1ce1e:                               ; preds = %bb, %dec_label_pc_1cdf0
  %v2_1ce1c = phi i32 [ %v1_1ce1c, %bb ], [ 0, %dec_label_pc_1cdf0 ]
  ret i32 %v2_1ce1c
}

define i32 @function_1ce23() local_unnamed_addr {
dec_label_pc_1ce23:
  %v0_1ce24 = load i32, i32* @eax, align 4
  ret i32 %v0_1ce24
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1ce26:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1ce41 = add i32 %tmp101, 8
  %v2_1ce41 = inttoptr i32 %v1_1ce41 to i32*
  %v3_1ce41 = load i32, i32* %v2_1ce41, align 4
  %v2_1ce49 = load i32, i32* %arg1, align 4
  %v2_1ce4d = sub i32 %v3_1ce41, %v2_1ce49
  %v2_1ce51 = sdiv i32 %v2_1ce4d, 4
  %v3_1ce54 = mul i32 %v2_1ce51, -991146299
  %v3_1ce6f = call i32 @unknown_409f8(i32 %tmp101, i32 %v2_1ce49, i32 %v3_1ce54)
  %v1_1ce7a = call i32 @unknown_39be0(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ce8b

bb:                                               ; preds = %dec_label_pc_1ce26
  %v1_1ce89 = call i32 @function_1cea9()
  store i32 %v1_1ce89, i32* @eax, align 4
  br label %dec_label_pc_1ce8b

dec_label_pc_1ce8b:                               ; preds = %bb, %dec_label_pc_1ce26
  %v0_1ce8b = call i32 @function_1cea4()
  ret i32 %v0_1ce8b

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1ce8e() local_unnamed_addr {
dec_label_pc_1ce8e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ce8e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ce8e
}

define i32 @function_1cea4() local_unnamed_addr {
dec_label_pc_1cea4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1cea9() local_unnamed_addr {
dec_label_pc_1cea9:
  %v0_1ceae = load i32, i32* @eax, align 4
  ret i32 %v0_1ceae
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ceb0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ced6

bb:                                               ; preds = %dec_label_pc_1ceb0
  %v2_1ced4 = call i32 @function_1cedb(i32 %arg1)
  br label %dec_label_pc_1ced6

dec_label_pc_1ced6:                               ; preds = %bb, %dec_label_pc_1ceb0
  %v3_1ced4 = phi i32 [ %v2_1ced4, %bb ], [ %arg1, %dec_label_pc_1ceb0 ]
  ret i32 %v3_1ced4
}

define i32 @function_1cedb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cedb:
  %v0_1cedc = load i32, i32* @eax, align 4
  ret i32 %v0_1cedc
}

define i32 @_ZSt8_DestroyIP5CTxInS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cedd:
  %v2_1cf0d = call i32 @unknown_40b04(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf1e

bb:                                               ; preds = %dec_label_pc_1cedd
  %v1_1cf1c = call i32 @function_1cf23()
  br label %dec_label_pc_1cf1e

dec_label_pc_1cf1e:                               ; preds = %bb, %dec_label_pc_1cedd
  %v2_1cf1c = phi i32 [ %v1_1cf1c, %bb ], [ 0, %dec_label_pc_1cedd ]
  ret i32 %v2_1cf1c
}

define i32 @function_1cf23() local_unnamed_addr {
dec_label_pc_1cf23:
  %v0_1cf24 = load i32, i32* @eax, align 4
  ret i32 %v0_1cf24
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf26:
  store i32 %arg1, i32* @eax, align 4
  %v1_1cf43 = call i32 @function_346d8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf54

bb:                                               ; preds = %dec_label_pc_1cf26
  %v1_1cf52 = call i32 @function_1cf59()
  br label %dec_label_pc_1cf54

dec_label_pc_1cf54:                               ; preds = %bb, %dec_label_pc_1cf26
  %v2_1cf52 = phi i32 [ %v1_1cf52, %bb ], [ 0, %dec_label_pc_1cf26 ]
  ret i32 %v2_1cf52

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1cf59() local_unnamed_addr {
dec_label_pc_1cf59:
  %v0_1cf5a = load i32, i32* @eax, align 4
  ret i32 %v0_1cf5a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cf5c:
  %v1_1cf79 = call i32 @unknown_40bc6(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cf8a

bb:                                               ; preds = %dec_label_pc_1cf5c
  %v1_1cf88 = call i32 @function_1cf8f()
  br label %dec_label_pc_1cf8a

dec_label_pc_1cf8a:                               ; preds = %bb, %dec_label_pc_1cf5c
  %v2_1cf88 = phi i32 [ %v1_1cf88, %bb ], [ 0, %dec_label_pc_1cf5c ]
  ret i32 %v2_1cf88
}

define i32 @function_1cf8f() local_unnamed_addr {
dec_label_pc_1cf8f:
  %v0_1cf90 = load i32, i32* @eax, align 4
  ret i32 %v0_1cf90
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1cf92:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1cfad = add i32 %tmp101, 8
  %v2_1cfad = inttoptr i32 %v1_1cfad to i32*
  %v3_1cfad = load i32, i32* %v2_1cfad, align 4
  %v2_1cfb5 = load i32, i32* %arg1, align 4
  %v2_1cfb9 = sub i32 %v3_1cfad, %v2_1cfb5
  %v2_1cfbd = sdiv i32 %v2_1cfb9, 4
  %v3_1cfc0 = mul i32 %v2_1cfbd, -858993459
  %v3_1cfdb = call i32 @unknown_40c4e(i32 %tmp101, i32 %v2_1cfb5, i32 %v3_1cfc0)
  %v1_1cfe6 = call i32 @unknown_39eb8(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1cff7

bb:                                               ; preds = %dec_label_pc_1cf92
  %v1_1cff5 = call i32 @function_1d015()
  store i32 %v1_1cff5, i32* @eax, align 4
  br label %dec_label_pc_1cff7

dec_label_pc_1cff7:                               ; preds = %bb, %dec_label_pc_1cf92
  %v0_1cff7 = call i32 @function_1d010()
  ret i32 %v0_1cff7

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1cffa() local_unnamed_addr {
dec_label_pc_1cffa:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cffa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cffa
}

define i32 @function_1d010() local_unnamed_addr {
dec_label_pc_1d010:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d015() local_unnamed_addr {
dec_label_pc_1d015:
  %v0_1d01a = load i32, i32* @eax, align 4
  ret i32 %v0_1d01a
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d01c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d042

bb:                                               ; preds = %dec_label_pc_1d01c
  %v2_1d040 = call i32 @function_1d047(i32 %arg1)
  br label %dec_label_pc_1d042

dec_label_pc_1d042:                               ; preds = %bb, %dec_label_pc_1d01c
  %v3_1d040 = phi i32 [ %v2_1d040, %bb ], [ %arg1, %dec_label_pc_1d01c ]
  ret i32 %v3_1d040
}

define i32 @function_1d047(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d047:
  %v0_1d048 = load i32, i32* @eax, align 4
  ret i32 %v0_1d048
}

define i32 @_ZSt8_DestroyIP6CTxOutS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d049:
  %v2_1d079 = call i32 @unknown_40d5a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d08a

bb:                                               ; preds = %dec_label_pc_1d049
  %v1_1d088 = call i32 @function_1d08f()
  br label %dec_label_pc_1d08a

dec_label_pc_1d08a:                               ; preds = %bb, %dec_label_pc_1d049
  %v2_1d088 = phi i32 [ %v1_1d088, %bb ], [ 0, %dec_label_pc_1d049 ]
  ret i32 %v2_1d088
}

define i32 @function_1d08f() local_unnamed_addr {
dec_label_pc_1d08f:
  %v0_1d090 = load i32, i32* @eax, align 4
  ret i32 %v0_1d090
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d092:
  %v1_1d0b5 = call i32 @unknown_39f42(i32 %arg1)
  %v1_1d0bd = add i32 %arg1, 4
  %v2_1d0bd = inttoptr i32 %v1_1d0bd to i32*
  %v3_1d0bd = load i32, i32* %v2_1d0bd, align 4
  %v3_1d0ce = call i32 @unknown_39f6f(i32 %arg2, i32 %v3_1d0bd, i32 %v1_1d0b5)
  store i32 %arg2, i32* %v2_1d0bd, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d0e8

bb:                                               ; preds = %dec_label_pc_1d092
  %v1_1d0e6 = call i32 @function_1d0ed()
  br label %dec_label_pc_1d0e8

dec_label_pc_1d0e8:                               ; preds = %bb, %dec_label_pc_1d092
  %v2_1d0e6 = phi i32 [ %v1_1d0e6, %bb ], [ 0, %dec_label_pc_1d092 ]
  ret i32 %v2_1d0e6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d0ed() local_unnamed_addr {
dec_label_pc_1d0ed:
  %v0_1d0ee = load i32, i32* @eax, align 4
  ret i32 %v0_1d0ee
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE15_M_erase_at_endEPS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d0f0:
  %v1_1d113 = call i32 @unknown_3a10c(i32 %arg1)
  %v1_1d11b = add i32 %arg1, 4
  %v2_1d11b = inttoptr i32 %v1_1d11b to i32*
  %v3_1d11b = load i32, i32* %v2_1d11b, align 4
  %v3_1d12c = call i32 @unknown_3a139(i32 %arg2, i32 %v3_1d11b, i32 %v1_1d113)
  store i32 %arg2, i32* %v2_1d11b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d146

bb:                                               ; preds = %dec_label_pc_1d0f0
  %v1_1d144 = call i32 @function_1d14b()
  br label %dec_label_pc_1d146

dec_label_pc_1d146:                               ; preds = %bb, %dec_label_pc_1d0f0
  %v2_1d144 = phi i32 [ %v1_1d144, %bb ], [ 0, %dec_label_pc_1d0f0 ]
  ret i32 %v2_1d144

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d14b() local_unnamed_addr {
dec_label_pc_1d14b:
  %v0_1d14c = load i32, i32* @eax, align 4
  ret i32 %v0_1d14c
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d14e:
  %stack_var_-20 = alloca i32, align 4
  %v1_1d16e = add i32 %arg2, 4
  %v2_1d16e = inttoptr i32 %v1_1d16e to i32*
  %v3_1d16e = load i32, i32* %v2_1d16e, align 4
  store i32 %v3_1d16e, i32* %stack_var_-20, align 4
  %v2_1d174 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d181 = call i32 @unknown_40ea2(i32 %arg1, i32 %v2_1d174)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d195

bb:                                               ; preds = %dec_label_pc_1d14e
  %v1_1d193 = call i32 @function_1d19a()
  br label %dec_label_pc_1d195

dec_label_pc_1d195:                               ; preds = %bb, %dec_label_pc_1d14e
  %v2_1d193 = phi i32 [ %v1_1d193, %bb ], [ %arg1, %dec_label_pc_1d14e ]
  ret i32 %v2_1d193

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d19a() local_unnamed_addr {
dec_label_pc_1d19a:
  %v0_1d19b = load i32, i32* @eax, align 4
  ret i32 %v0_1d19b
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d19e:
  %stack_var_-20 = alloca i32, align 4
  %v2_1d1be = load i32, i32* %arg2, align 4
  store i32 %v2_1d1be, i32* %stack_var_-20, align 4
  %v2_1d1c3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d1d0 = call i32 @unknown_40ef2(i32 %arg1, i32 %v2_1d1c3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d1e4

bb:                                               ; preds = %dec_label_pc_1d19e
  %v1_1d1e2 = call i32 @function_1d1e9()
  br label %dec_label_pc_1d1e4

dec_label_pc_1d1e4:                               ; preds = %bb, %dec_label_pc_1d19e
  %v2_1d1e2 = phi i32 [ %v1_1d1e2, %bb ], [ %arg1, %dec_label_pc_1d19e ]
  ret i32 %v2_1d1e2

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d1e9() local_unnamed_addr {
dec_label_pc_1d1e9:
  %v0_1d1ea = load i32, i32* @eax, align 4
  ret i32 %v0_1d1ea
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d1ee:
  %stack_var_-20 = alloca i32, align 4
  %v1_1d20e = add i32 %arg2, 4
  %v2_1d20e = inttoptr i32 %v1_1d20e to i32*
  %v3_1d20e = load i32, i32* %v2_1d20e, align 4
  store i32 %v3_1d20e, i32* %stack_var_-20, align 4
  %v2_1d214 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d221 = call i32 @unknown_40faa(i32 %arg1, i32 %v2_1d214)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d235

bb:                                               ; preds = %dec_label_pc_1d1ee
  %v1_1d233 = call i32 @function_1d23a()
  br label %dec_label_pc_1d235

dec_label_pc_1d235:                               ; preds = %bb, %dec_label_pc_1d1ee
  %v2_1d233 = phi i32 [ %v1_1d233, %bb ], [ %arg1, %dec_label_pc_1d1ee ]
  ret i32 %v2_1d233

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d23a() local_unnamed_addr {
dec_label_pc_1d23a:
  %v0_1d23b = load i32, i32* @eax, align 4
  ret i32 %v0_1d23b
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d23e:
  %stack_var_-20 = alloca i32, align 4
  %v2_1d25e = load i32, i32* %arg2, align 4
  store i32 %v2_1d25e, i32* %stack_var_-20, align 4
  %v2_1d263 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d270 = call i32 @unknown_40ffa(i32 %arg1, i32 %v2_1d263)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d284

bb:                                               ; preds = %dec_label_pc_1d23e
  %v1_1d282 = call i32 @function_1d289()
  br label %dec_label_pc_1d284

dec_label_pc_1d284:                               ; preds = %bb, %dec_label_pc_1d23e
  %v2_1d282 = phi i32 [ %v1_1d282, %bb ], [ %arg1, %dec_label_pc_1d23e ]
  ret i32 %v2_1d282

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d289() local_unnamed_addr {
dec_label_pc_1d289:
  %v0_1d28a = load i32, i32* @eax, align 4
  ret i32 %v0_1d28a
}

define i32 @_ZNKSt12_Vector_baseI6CTxOutSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d28e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d2b4

bb:                                               ; preds = %dec_label_pc_1d28e
  %v2_1d2b2 = call i32 @function_1d2b9(i32 %arg1)
  br label %dec_label_pc_1d2b4

dec_label_pc_1d2b4:                               ; preds = %bb, %dec_label_pc_1d28e
  %v3_1d2b2 = phi i32 [ %v2_1d2b2, %bb ], [ %arg1, %dec_label_pc_1d28e ]
  ret i32 %v3_1d2b2
}

define i32 @function_1d2b9(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d2b9:
  %v0_1d2ba = load i32, i32* @eax, align 4
  ret i32 %v0_1d2ba
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d2bc:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1d2ed = call i32 @unknown_410e0(i32 %tmp104, i32 %arg3)
  %v2_1d2ff = call i32 @unknown_41140(i32 %tmp104, i32 %arg2)
  store i32 %v2_1d2ff, i32* %arg1, align 4
  %v2_1d313 = add i32 %tmp104, 4
  %v3_1d313 = inttoptr i32 %v2_1d313 to i32*
  store i32 %v2_1d2ff, i32* %v3_1d313, align 4
  %v2_1d319 = load i32, i32* %arg1, align 4
  %v2_1d325 = mul i32 %arg2, 20
  %v3_1d328 = add i32 %v2_1d319, %v2_1d325
  %v2_1d32e = add i32 %tmp104, 8
  %v3_1d32e = inttoptr i32 %v2_1d32e to i32*
  store i32 %v3_1d328, i32* %v3_1d32e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d33d

bb:                                               ; preds = %dec_label_pc_1d2bc
  %v1_1d33b = call i32 @function_1d35b()
  store i32 %v1_1d33b, i32* @eax, align 4
  br label %dec_label_pc_1d33d

dec_label_pc_1d33d:                               ; preds = %bb, %dec_label_pc_1d2bc
  %v0_1d33d = call i32 @function_1d356()
  ret i32 %v0_1d33d

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_1d340() local_unnamed_addr {
dec_label_pc_1d340:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d340 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d340
}

define i32 @function_1d356() local_unnamed_addr {
dec_label_pc_1d356:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d35b() local_unnamed_addr {
dec_label_pc_1d35b:
  %v0_1d360 = load i32, i32* @eax, align 4
  ret i32 %v0_1d360
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d361:
  %v7_1d39e = call i32 @unknown_4123c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_1d39e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d3af

bb:                                               ; preds = %dec_label_pc_1d361
  %v1_1d3ad = call i32 @function_1d3b4()
  br label %dec_label_pc_1d3af

dec_label_pc_1d3af:                               ; preds = %bb, %dec_label_pc_1d361
  %v2_1d3ad = phi i32 [ %v1_1d3ad, %bb ], [ %v7_1d39e, %dec_label_pc_1d361 ]
  ret i32 %v2_1d3ad

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d3b4() local_unnamed_addr {
dec_label_pc_1d3b4:
  %v0_1d3b5 = load i32, i32* @eax, align 4
  ret i32 %v0_1d3b5
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d3b6:
  ret i32 %arg1
}

define i32 @function_1d3c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d3c2:
  %v0_1d3c2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1d3c8 = load i32, i32* @ebp, align 4
  %v2_1d3c8 = add i32 %v1_1d3c8, -12
  %v3_1d3c8 = inttoptr i32 %v2_1d3c8 to i32*
  store i32 %v0_1d3c2, i32* %v3_1d3c8, align 4
  %v0_1d3cd = load i32, i32* @ebp, align 4
  %v1_1d3cd = add i32 %v0_1d3cd, -12
  %v2_1d3cd = inttoptr i32 %v1_1d3cd to i32*
  %v3_1d3cd = load i32, i32* %v2_1d3cd, align 4
  %v1_1d3d0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d3d0 = xor i32 %v1_1d3d0, %v3_1d3cd
  %v3_1d3d0 = icmp eq i32 %v2_1d3d0, 0
  store i32 %v2_1d3d0, i32* @eax, align 4
  br i1 %v3_1d3d0, label %bb, label %dec_label_pc_1d3d9

bb:                                               ; preds = %dec_label_pc_1d3c2
  %v1_1d3d7 = call i32 @function_1d3de()
  br label %dec_label_pc_1d3d9

dec_label_pc_1d3d9:                               ; preds = %bb, %dec_label_pc_1d3c2
  %v2_1d3d7 = phi i32 [ %v1_1d3d7, %bb ], [ %v2_1d3d0, %dec_label_pc_1d3c2 ]
  ret i32 %v2_1d3d7
}

define i32 @function_1d3de() local_unnamed_addr {
dec_label_pc_1d3de:
  %v0_1d3df = load i32, i32* @eax, align 4
  ret i32 %v0_1d3df
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d3e0:
  ret i32 %arg1
}

define i32 @function_1d3f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d3f1:
  %v0_1d3f1 = load i32, i32* @ecx, align 4
  %v1_1d3f1 = add i32 %v0_1d3f1, -1070468027
  %v2_1d3f1 = inttoptr i32 %v1_1d3f1 to i8*
  %v3_1d3f1 = load i8, i8* %v2_1d3f1, align 1
  %v5_1d3f1 = trunc i32 %v0_1d3f1 to i8
  %v6_1d3f1 = add i8 %v3_1d3f1, %v5_1d3f1
  store i8 %v6_1d3f1, i8* %v2_1d3f1, align 1
  %v0_1d3f7 = load i32, i32* @ebp, align 4
  %v1_1d3f7 = add i32 %v0_1d3f7, -12
  %v2_1d3f7 = inttoptr i32 %v1_1d3f7 to i32*
  %v3_1d3f7 = load i32, i32* %v2_1d3f7, align 4
  %v1_1d3fa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d3fa = xor i32 %v1_1d3fa, %v3_1d3f7
  %v3_1d3fa = icmp eq i32 %v2_1d3fa, 0
  store i32 %v2_1d3fa, i32* @eax, align 4
  br i1 %v3_1d3fa, label %bb, label %dec_label_pc_1d403

bb:                                               ; preds = %dec_label_pc_1d3f1
  %v1_1d401 = call i32 @function_1d408()
  br label %dec_label_pc_1d403

dec_label_pc_1d403:                               ; preds = %bb, %dec_label_pc_1d3f1
  %v2_1d401 = phi i32 [ %v1_1d401, %bb ], [ %v2_1d3fa, %dec_label_pc_1d3f1 ]
  ret i32 %v2_1d401
}

define i32 @function_1d408() local_unnamed_addr {
dec_label_pc_1d408:
  %v0_1d409 = load i32, i32* @eax, align 4
  ret i32 %v0_1d409
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d40a:
  %v1_1d42a = add i32 %arg2, 4
  %v2_1d437 = call i32 @unknown_4138a(i32 %arg1, i32 %v1_1d42a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d44b

bb:                                               ; preds = %dec_label_pc_1d40a
  %v1_1d449 = call i32 @function_1d450()
  br label %dec_label_pc_1d44b

dec_label_pc_1d44b:                               ; preds = %bb, %dec_label_pc_1d40a
  %v2_1d449 = phi i32 [ %v1_1d449, %bb ], [ %arg1, %dec_label_pc_1d40a ]
  ret i32 %v2_1d449

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d450() local_unnamed_addr {
dec_label_pc_1d450:
  %v0_1d451 = load i32, i32* @eax, align 4
  ret i32 %v0_1d451
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d454:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1d46e = load i32, i32* %arg1, align 4
  %v1_1d470 = add i32 %v2_1d46e, 20
  store i32 %v1_1d470, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d487

bb:                                               ; preds = %dec_label_pc_1d454
  %v2_1d485 = call i32 @function_1d48c(i32 %tmp100)
  br label %dec_label_pc_1d487

dec_label_pc_1d487:                               ; preds = %bb, %dec_label_pc_1d454
  %v3_1d485 = phi i32 [ %v2_1d485, %bb ], [ %tmp100, %dec_label_pc_1d454 ]
  ret i32 %v3_1d485
}

define i32 @function_1d48c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d48c:
  %v0_1d48d = load i32, i32* @eax, align 4
  ret i32 %v0_1d48d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d48e:
  %v2_1d4a8 = load i32, i32* %arg1, align 4
  store i32 %v2_1d4a8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d4b6

bb:                                               ; preds = %dec_label_pc_1d48e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1d4b4 = call i32 @function_1d4bb(i32 %tmp100)
  br label %dec_label_pc_1d4b6

dec_label_pc_1d4b6:                               ; preds = %bb, %dec_label_pc_1d48e
  %v3_1d4b4 = phi i32 [ %v2_1d4b4, %bb ], [ %v2_1d4a8, %dec_label_pc_1d48e ]
  ret i32 %v3_1d4b4

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1d4bb(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d4bb:
  %v0_1d4bc = load i32, i32* @eax, align 4
  ret i32 %v0_1d4bc
}

define i32 @_ZNSt6vectorIhSaIhEE22_M_initialize_dispatchIiEEvT_S3_St11__true_type(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d4be:
  %stack_var_-17 = alloca i8, align 1
  %tmp109 = trunc i32 %arg3 to i8
  %tmp114 = ptrtoint i32* %arg1 to i32
  %v2_1d4f5 = call i32 @unknown_3f414(i32 %tmp114, i32 %arg2)
  store i32 %v2_1d4f5, i32* %arg1, align 4
  %v2_1d509 = add i32 %v2_1d4f5, %arg2
  %v2_1d50e = add i32 %tmp114, 8
  %v3_1d50e = inttoptr i32 %v2_1d50e to i32*
  store i32 %v2_1d509, i32* %v3_1d50e, align 4
  store i8 %tmp109, i8* %stack_var_-17, align 1
  %v2_1d51a = ptrtoint i8* %stack_var_-17 to i32
  store i32 %tmp114, i32* @eax, align 4
  %v3_1d52b = call i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %tmp114, i32 %arg2, i32 %v2_1d51a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d53c

bb:                                               ; preds = %dec_label_pc_1d4be
  %v1_1d53a = call i32 @function_1d541()
  br label %dec_label_pc_1d53c

dec_label_pc_1d53c:                               ; preds = %bb, %dec_label_pc_1d4be
  %v2_1d53a = phi i32 [ %v1_1d53a, %bb ], [ 0, %dec_label_pc_1d4be ]
  ret i32 %v2_1d53a

; uselistorder directives
  uselistorder i32 %tmp114, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
}

define i32 @function_1d541() local_unnamed_addr {
dec_label_pc_1d541:
  %v0_1d542 = load i32, i32* @eax, align 4
  ret i32 %v0_1d542
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d544:
  %stack_var_-20 = alloca i32, align 4
  %v1_1d564 = add i32 %arg2, 4
  %v2_1d564 = inttoptr i32 %v1_1d564 to i32*
  %v3_1d564 = load i32, i32* %v2_1d564, align 4
  store i32 %v3_1d564, i32* %stack_var_-20, align 4
  %v2_1d56a = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d577 = call i32 @unknown_414fe(i32 %arg1, i32 %v2_1d56a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d58b

bb:                                               ; preds = %dec_label_pc_1d544
  %v1_1d589 = call i32 @function_1d590()
  br label %dec_label_pc_1d58b

dec_label_pc_1d58b:                               ; preds = %bb, %dec_label_pc_1d544
  %v2_1d589 = phi i32 [ %v1_1d589, %bb ], [ %arg1, %dec_label_pc_1d544 ]
  ret i32 %v2_1d589

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d590() local_unnamed_addr {
dec_label_pc_1d590:
  %v0_1d591 = load i32, i32* @eax, align 4
  ret i32 %v0_1d591
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1d594:
  %stack_var_-20 = alloca i32, align 4
  %v2_1d5b4 = load i32, i32* %arg2, align 4
  store i32 %v2_1d5b4, i32* %stack_var_-20, align 4
  %v2_1d5b9 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1d5c6 = call i32 @unknown_4154e(i32 %arg1, i32 %v2_1d5b9)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d5da

bb:                                               ; preds = %dec_label_pc_1d594
  %v1_1d5d8 = call i32 @function_1d5df()
  br label %dec_label_pc_1d5da

dec_label_pc_1d5da:                               ; preds = %bb, %dec_label_pc_1d594
  %v2_1d5d8 = phi i32 [ %v1_1d5d8, %bb ], [ %arg1, %dec_label_pc_1d594 ]
  ret i32 %v2_1d5d8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1d5df() local_unnamed_addr {
dec_label_pc_1d5df:
  %v0_1d5e0 = load i32, i32* @eax, align 4
  ret i32 %v0_1d5e0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEE7destroyEPS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d5e4:
  store i1 false, i1* @cf, align 1
  store i1 true, i1* @zf, align 1
  store i32 %arg2, i32* @eax, align 4
  %v1_1d607 = call i32 @function_32ac6(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d618

bb:                                               ; preds = %dec_label_pc_1d5e4
  %v1_1d616 = call i32 @function_1d61d()
  br label %dec_label_pc_1d618

dec_label_pc_1d618:                               ; preds = %bb, %dec_label_pc_1d5e4
  %v2_1d616 = phi i32 [ %v1_1d616, %bb ], [ 0, %dec_label_pc_1d5e4 ]
  ret i32 %v2_1d616

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1d61d() local_unnamed_addr {
dec_label_pc_1d61d:
  %v0_1d61e = load i32, i32* @eax, align 4
  ret i32 %v0_1d61e
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d620:
  %v1_1d63d = call i32 @unknown_4166c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d64e

bb:                                               ; preds = %dec_label_pc_1d620
  %v1_1d64c = call i32 @function_1d653()
  br label %dec_label_pc_1d64e

dec_label_pc_1d64e:                               ; preds = %bb, %dec_label_pc_1d620
  %v2_1d64c = phi i32 [ %v1_1d64c, %bb ], [ 0, %dec_label_pc_1d620 ]
  ret i32 %v2_1d64c
}

define i32 @function_1d653() local_unnamed_addr {
dec_label_pc_1d653:
  %v0_1d654 = load i32, i32* @eax, align 4
  ret i32 %v0_1d654
}

define i32 @_ZNSt13_Bvector_baseISaIbEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d656:
  %v1_1d673 = call i32 @unknown_4164a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d684

bb:                                               ; preds = %dec_label_pc_1d656
  %v1_1d682 = call i32 @function_1d689()
  br label %dec_label_pc_1d684

dec_label_pc_1d684:                               ; preds = %bb, %dec_label_pc_1d656
  %v2_1d682 = phi i32 [ %v1_1d682, %bb ], [ 0, %dec_label_pc_1d656 ]
  ret i32 %v2_1d682
}

define i32 @function_1d689() local_unnamed_addr {
dec_label_pc_1d689:
  %v0_1d68a = load i32, i32* @eax, align 4
  ret i32 %v0_1d68a
}

define i32 @_ZNSt13_Bvector_baseISaIbEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d68c:
  %v1_1d6aa = call i32 @unknown_4170e(i32 %arg1)
  %v1_1d6b5 = call i32 @unknown_3acac(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d6c6

bb:                                               ; preds = %dec_label_pc_1d68c
  %v1_1d6c4 = call i32 @function_1d6e4()
  store i32 %v1_1d6c4, i32* @eax, align 4
  br label %dec_label_pc_1d6c6

dec_label_pc_1d6c6:                               ; preds = %bb, %dec_label_pc_1d68c
  %v0_1d6c6 = call i32 @function_1d6df()
  ret i32 %v0_1d6c6

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1d6c9() local_unnamed_addr {
dec_label_pc_1d6c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d6c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d6c9
}

define i32 @function_1d6df() local_unnamed_addr {
dec_label_pc_1d6df:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d6e4() local_unnamed_addr {
dec_label_pc_1d6e4:
  %v0_1d6e9 = load i32, i32* @eax, align 4
  ret i32 %v0_1d6e9
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d6ea:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d718

bb:                                               ; preds = %dec_label_pc_1d6ea
  %v2_1d716 = call i32 @function_1d71d(i32 %arg1)
  br label %dec_label_pc_1d718

dec_label_pc_1d718:                               ; preds = %bb, %dec_label_pc_1d6ea
  %v3_1d716 = phi i32 [ %v2_1d716, %bb ], [ 0, %dec_label_pc_1d6ea ]
  ret i32 %v3_1d716
}

define i32 @function_1d71d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d71d:
  %v0_1d71e = load i32, i32* @eax, align 4
  ret i32 %v0_1d71e
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d720:
  %v1_1d73d = call i32 @unknown_41806(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d74e

bb:                                               ; preds = %dec_label_pc_1d720
  %v1_1d74c = call i32 @function_1d753()
  br label %dec_label_pc_1d74e

dec_label_pc_1d74e:                               ; preds = %bb, %dec_label_pc_1d720
  %v2_1d74c = phi i32 [ %v1_1d74c, %bb ], [ 0, %dec_label_pc_1d720 ]
  ret i32 %v2_1d74c
}

define i32 @function_1d753() local_unnamed_addr {
dec_label_pc_1d753:
  %v0_1d754 = load i32, i32* @eax, align 4
  ret i32 %v0_1d754
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1d756:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1d771 = add i32 %tmp101, 8
  %v2_1d771 = inttoptr i32 %v1_1d771 to i32*
  %v3_1d771 = load i32, i32* %v2_1d771, align 4
  %v2_1d779 = load i32, i32* %arg1, align 4
  %v2_1d77d = sub i32 %v3_1d771, %v2_1d779
  %v2_1d781 = sdiv i32 %v2_1d77d, 4
  %v3_1d784 = mul i32 %v2_1d781, -1431655765
  %v3_1d79f = call i32 @unknown_3df20(i32 %tmp101, i32 %v2_1d779, i32 %v3_1d784)
  %v1_1d7aa = call i32 @unknown_3ae40(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d7bb

bb:                                               ; preds = %dec_label_pc_1d756
  %v1_1d7b9 = call i32 @function_1d7d9()
  store i32 %v1_1d7b9, i32* @eax, align 4
  br label %dec_label_pc_1d7bb

dec_label_pc_1d7bb:                               ; preds = %bb, %dec_label_pc_1d756
  %v0_1d7bb = call i32 @function_1d7d4()
  ret i32 %v0_1d7bb

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1d7be() local_unnamed_addr {
dec_label_pc_1d7be:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d7be = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d7be
}

define i32 @function_1d7d4() local_unnamed_addr {
dec_label_pc_1d7d4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1d7d9() local_unnamed_addr {
dec_label_pc_1d7d9:
  %v0_1d7de = load i32, i32* @eax, align 4
  ret i32 %v0_1d7de
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d7e0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d806

bb:                                               ; preds = %dec_label_pc_1d7e0
  %v2_1d804 = call i32 @function_1d80b(i32 %arg1)
  br label %dec_label_pc_1d806

dec_label_pc_1d806:                               ; preds = %bb, %dec_label_pc_1d7e0
  %v3_1d804 = phi i32 [ %v2_1d804, %bb ], [ %arg1, %dec_label_pc_1d7e0 ]
  ret i32 %v3_1d804
}

define i32 @function_1d80b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d80b:
  %v0_1d80c = load i32, i32* @eax, align 4
  ret i32 %v0_1d80c
}

define i32 @_ZSt8_DestroyIPSt6vectorIhSaIhEES2_EvT_S4_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d80d:
  %v2_1d83d = call i32 @unknown_41945(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1d84e

bb:                                               ; preds = %dec_label_pc_1d80d
  %v1_1d84c = call i32 @function_1d853()
  br label %dec_label_pc_1d84e

dec_label_pc_1d84e:                               ; preds = %bb, %dec_label_pc_1d80d
  %v2_1d84c = phi i32 [ %v1_1d84c, %bb ], [ 0, %dec_label_pc_1d80d ]
  ret i32 %v2_1d84c
}

define i32 @function_1d853() local_unnamed_addr {
dec_label_pc_1d853:
  %v0_1d854 = load i32, i32* @eax, align 4
  ret i32 %v0_1d854
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEE9constructEPS3_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d856:
  store i32 0, i32* @eax, align 4
  %v2_1d88a = call i32 @function_26742(i32 12, i32 %arg2)
  %v1_1d891 = icmp eq i32 %v2_1d88a, 0
  br i1 %v1_1d891, label %bb, label %dec_label_pc_1d895

bb:                                               ; preds = %dec_label_pc_1d856
  %v1_1d893 = call i32 @function_1d8be()
  br label %dec_label_pc_1d895

dec_label_pc_1d895:                               ; preds = %bb, %dec_label_pc_1d856
  store i32 %arg3, i32* @eax, align 4
  %v2_1d89f = call i32 @function_33f4e(i32 %v2_1d88a, i32 %arg3)
  %v0_1d8a4 = call i32 @function_1d8be()
  ret i32 %v0_1d8a4

; uselistorder directives
  uselistorder i32 ()* @function_1d8be, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1d8be() local_unnamed_addr {
dec_label_pc_1d8be:
  %v0_1d8be = load i32, i32* @ebp, align 4
  %v1_1d8be = add i32 %v0_1d8be, -28
  %v2_1d8be = inttoptr i32 %v1_1d8be to i32*
  %v3_1d8be = load i32, i32* %v2_1d8be, align 4
  %v1_1d8c1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1d8c1 = xor i32 %v1_1d8c1, %v3_1d8be
  %v3_1d8c1 = icmp eq i32 %v2_1d8c1, 0
  store i32 %v2_1d8c1, i32* @eax, align 4
  br i1 %v3_1d8c1, label %bb, label %dec_label_pc_1d8ca

bb:                                               ; preds = %dec_label_pc_1d8be
  %v1_1d8c8 = call i32 @function_1d8cf()
  br label %dec_label_pc_1d8ca

dec_label_pc_1d8ca:                               ; preds = %bb, %dec_label_pc_1d8be
  %v2_1d8c8 = phi i32 [ %v1_1d8c8, %bb ], [ %v2_1d8c1, %dec_label_pc_1d8be ]
  ret i32 %v2_1d8c8
}

define i32 @function_1d8cf() local_unnamed_addr {
dec_label_pc_1d8cf:
  %v0_1d8d6 = load i32, i32* @eax, align 4
  ret i32 %v0_1d8d6
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS1_S3_EERKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1d8d8:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %tmp113 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %stack_var_-68, align 4
  %v1_1d900 = add i32 %tmp113, 4
  %v2_1d900 = inttoptr i32 %v1_1d900 to i32*
  %v3_1d900 = load i32, i32* %v2_1d900, align 4
  %v1_1d906 = add i32 %tmp113, 8
  %v2_1d906 = inttoptr i32 %v1_1d906 to i32*
  %v3_1d906 = load i32, i32* %v2_1d906, align 4
  %v7_1d909 = icmp ult i32 %v3_1d900, %v3_1d906
  store i1 %v7_1d909, i1* @cf, align 1
  %v12_1d909 = icmp eq i32 %v3_1d900, %v3_1d906
  br i1 %v12_1d909, label %dec_label_pc_1d9ad, label %dec_label_pc_1d911

dec_label_pc_1d911:                               ; preds = %dec_label_pc_1d8d8
  %v3_1d914 = load i32, i32* %v2_1d900, align 4
  %v1_1d917 = add i32 %v3_1d914, -12
  store i32 %v1_1d917, i32* @ecx, align 4
  %v3_1d91d = load i32, i32* %v2_1d900, align 4
  %v4_1d92e = call i32 @unknown_3b12e(i32 %tmp113, i32 %v3_1d91d, i32 %v1_1d917)
  %v3_1d936 = load i32, i32* %v2_1d900, align 4
  %v1_1d939 = add i32 %v3_1d936, 12
  store i32 %v1_1d939, i32* @edx, align 4
  store i32 %v1_1d939, i32* %v2_1d900, align 4
  %v2_1d949 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1d949, i32* @eax, align 4
  %v2_1d94f = call i32 @function_33fd0(i32 %v2_1d949, i32 %arg3)
  %v3_1d957 = load i32, i32* %v2_1d900, align 4
  %v1_1d95a = add i32 %v3_1d957, -12
  store i32 %v1_1d95a, i32* %esi.global-to-local, align 4
  %v3_1d960 = load i32, i32* %v2_1d900, align 4
  %v1_1d963 = add i32 %v3_1d960, -24
  %v2_1d966 = ptrtoint i32* %stack_var_-68 to i32
  %v1_1d96c = call i32 @unknown_3ba42(i32 %v2_1d966)
  %v1_1d971 = inttoptr i32 %v1_1d96c to i32*
  %v2_1d971 = load i32, i32* %v1_1d971, align 4
  %v0_1d973 = load i32, i32* %esi.global-to-local, align 4
  %v4_1d97e = call i32 @unknown_41a52(i32 %v2_1d971, i32 %v1_1d963, i32 %v0_1d973)
  %v1_1d989 = call i32 @unknown_3cd24(i32 %v2_1d966)
  store i32 %v1_1d989, i32* @eax, align 4
  %v2_1d998 = call i32 @function_32f2c(i32 %v1_1d989, i32 %v2_1d949)
  store i32 %v2_1d949, i32* @eax, align 4
  %v1_1d9a3 = call i32 @function_32dba(i32 %v2_1d949)
  %v0_1d9a8 = call i32 @function_1dbd5()
  ret i32 %v0_1d9a8

dec_label_pc_1d9ad:                               ; preds = %dec_label_pc_1d8d8
  %v4_1d9c3 = call i32 @unknown_41ab8(i32 %tmp113, i32 1, i32 ptrtoint ([22 x i8]* @global_var_c5ba.2282 to i32))
  %v2_1d9cb = ptrtoint i32* %stack_var_-36 to i32
  %v2_1d9d8 = call i32 @function_36e62(i32 %v2_1d9cb, i32 %tmp113)
  %v2_1d9e7 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1d9ed = call i32 @unknown_3b9e1(i32 %v2_1d9e7, i32 %v2_1d9cb)
  %v2_1da02 = call i32 @unknown_41b8a(i32 %tmp113, i32 %v4_1d9c3)
  %v2_1da19 = mul i32 %v2_1d9ed, 12
  %v5_1da1e = add i32 %v2_1da02, %v2_1da19
  %v3_1da32 = call i32 @unknown_3b12e(i32 %tmp113, i32 %v5_1da1e, i32 %arg3)
  %v1_1da44 = call i32 @unknown_3b0b8(i32 %tmp113)
  %v1_1da51 = call i32 @unknown_3ba42(i32 %v2_1d9e7)
  %v1_1da56 = inttoptr i32 %v1_1da51 to i32*
  %v2_1da56 = load i32, i32* %v1_1da56, align 4
  %v2_1da5b = load i32, i32* %arg1, align 4
  %v5_1da6f = call i32 @unknown_41be1(i32 %v2_1da5b, i32 %v2_1da56, i32 %v2_1da02, i32 %v1_1da44)
  %v4_1da77 = add i32 %v5_1da6f, 12
  %v1_1da81 = call i32 @unknown_3b0b8(i32 %tmp113)
  %v3_1da8b = load i32, i32* %v2_1d900, align 4
  store i32 %v3_1da8b, i32* %esi.global-to-local, align 4
  %v1_1da94 = call i32 @unknown_3ba42(i32 %v2_1d9e7)
  %v1_1da99 = inttoptr i32 %v1_1da94 to i32*
  %v2_1da99 = load i32, i32* %v1_1da99, align 4
  %v5_1daad = call i32 @unknown_41be1(i32 %v2_1da99, i32 %v3_1da8b, i32 %v4_1da77, i32 %v1_1da81)
  %v1_1dabb = call i32 @unknown_3b0b8(i32 %tmp113)
  %v3_1dac3 = load i32, i32* %v2_1d900, align 4
  %v2_1dac9 = load i32, i32* %arg1, align 4
  %v3_1dad6 = call i32 @unknown_3b0e5(i32 %v2_1dac9, i32 %v3_1dac3, i32 %v1_1dabb)
  %v3_1dade = load i32, i32* %v2_1d906, align 4
  %v2_1dae6 = load i32, i32* %arg1, align 4
  %v2_1daea = sub i32 %v3_1dade, %v2_1dae6
  %v2_1daee = sdiv i32 %v2_1daea, 4
  %v3_1daf1 = mul i32 %v2_1daee, -1431655765
  %v3_1db0c = call i32 @unknown_3e0a2(i32 %tmp113, i32 %v2_1dae6, i32 %v3_1daf1)
  store i32 %v2_1da02, i32* %arg1, align 4
  store i32 %v5_1daad, i32* %v2_1d900, align 4
  %v2_1db2b = mul i32 %v4_1d9c3, 12
  %v5_1db30 = add i32 %v2_1da02, %v2_1db2b
  store i32 %v5_1db30, i32* %v2_1d906, align 4
  %v0_1db39 = call i32 @function_1dbd5()
  ret i32 %v0_1db39

; uselistorder directives
  uselistorder i32 %v2_1da02, { 0, 2, 3, 1 }
  uselistorder i32* %v2_1d900, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9 }
  uselistorder i32 %tmp113, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_41be1, { 1, 0 }
  uselistorder i32 ()* @function_1dbd5, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3ba42, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_3b12e, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_1db3f() local_unnamed_addr {
dec_label_pc_1db3f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1db3f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1db3f
}

define i32 @function_1db56() local_unnamed_addr {
dec_label_pc_1db56:
  %eax.global-to-local = alloca i32, align 4
  %v0_1db56 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1db56
}

define i32 @function_1db6d() local_unnamed_addr {
dec_label_pc_1db6d:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1db6d = load i32, i32* %ebx.global-to-local, align 4
  %v1_1db6d = add i32 %v0_1db6d, 1962992765
  %v2_1db6d = inttoptr i32 %v1_1db6d to i32*
  %v3_1db6d = load i32, i32* %v2_1db6d, align 4
  %v4_1db6d = add i32 %v3_1db6d, 1
  store i32 %v4_1db6d, i32* %v2_1db6d, align 4
  %v0_1db73 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1db73 = trunc i32 %v0_1db73 to i8
  %v2_1db73 = load i32, i32* %ebx.global-to-local, align 4
  %v3_1db73 = add i32 %v2_1db73, -796267435
  %v4_1db73 = inttoptr i32 %v3_1db73 to i8*
  %v5_1db73 = load i8, i8* %v4_1db73, align 1
  %v6_1db73 = and i8 %v5_1db73, %v1_1db73
  %v12_1db73 = zext i8 %v6_1db73 to i32
  %v14_1db73 = and i32 %v0_1db73, -256
  %v15_1db73 = or i32 %v12_1db73, %v14_1db73
  store i32 %v15_1db73, i32* %ecx.global-to-local, align 4
  %v0_1db79 = load i32, i32* %eax.global-to-local, align 4
  %v2_1db79 = mul i32 %v0_1db79, 2
  %v1_1db7b = load i32, i32* %edx.global-to-local, align 4
  %v2_1db7b = add i32 %v1_1db7b, %v2_1db79
  %v2_1db7d = mul i32 %v2_1db7b, 4
  store i32 %v2_1db7d, i32* %eax.global-to-local, align 4
  store i32 %v2_1db7d, i32* %edx.global-to-local, align 4
  %v1_1db82 = load i32, i32* @ebp, align 4
  %v2_1db82 = add i32 %v1_1db82, -16
  %v3_1db82 = inttoptr i32 %v2_1db82 to i32*
  %v4_1db82 = load i32, i32* %v3_1db82, align 4
  %v5_1db82 = add i32 %v4_1db82, %v2_1db7d
  store i32 %v5_1db82, i32* %edx.global-to-local, align 4
  %v1_1db85 = add i32 %v1_1db82, -60
  %v2_1db85 = inttoptr i32 %v1_1db85 to i32*
  %v3_1db85 = load i32, i32* %v2_1db85, align 4
  store i32 %v3_1db85, i32* %eax.global-to-local, align 4
  %v2_1db8f = call i32 @unknown_3aebc(i32 %v3_1db85, i32 %v5_1db82)
  store i32 %v2_1db8f, i32* %eax.global-to-local, align 4
  %v0_1db94 = call i32 @function_1dbb7()
  store i32 %v0_1db94, i32* %eax.global-to-local, align 4
  ret i32 %v0_1db94

; uselistorder directives
  uselistorder i32 %v2_1db7d, { 2, 1, 0 }
}

define i32 @function_1db96() local_unnamed_addr {
dec_label_pc_1db96:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1db96 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1db96 = add i32 %v0_1db96, -60
  %v2_1db96 = inttoptr i32 %v1_1db96 to i32*
  %v3_1db96 = load i32, i32* %v2_1db96, align 4
  %v1_1db9c = call i32 @unknown_3b0b8(i32 %v3_1db96)
  %v1_1dba5 = add i32 %v0_1db96, -28
  %v2_1dba5 = inttoptr i32 %v1_1dba5 to i32*
  %v3_1dba5 = load i32, i32* %v2_1dba5, align 4
  %v1_1dbac = add i32 %v0_1db96, -16
  %v2_1dbac = inttoptr i32 %v1_1dbac to i32*
  %v3_1dbac = load i32, i32* %v2_1dbac, align 4
  %v3_1dbb2 = call i32 @unknown_3b0e5(i32 %v3_1dbac, i32 %v3_1dba5, i32 %v1_1db9c)
  ret i32 %v3_1dbb2

; uselistorder directives
  uselistorder i32 %v0_1db96, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_3b0e5, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3b0b8, { 3, 2, 1, 0 }
}

define i32 @function_1dbb7() local_unnamed_addr {
dec_label_pc_1dbb7:
  %v0_1dbb7 = load i32, i32* @ebp, align 4
  %v1_1dbb7 = add i32 %v0_1dbb7, -60
  %v2_1dbb7 = inttoptr i32 %v1_1dbb7 to i32*
  %v3_1dbb7 = load i32, i32* %v2_1dbb7, align 4
  %v1_1dbba = add i32 %v0_1dbb7, -24
  %v2_1dbba = inttoptr i32 %v1_1dbba to i32*
  %v3_1dbba = load i32, i32* %v2_1dbba, align 4
  %v1_1dbc1 = add i32 %v0_1dbb7, -16
  %v2_1dbc1 = inttoptr i32 %v1_1dbc1 to i32*
  %v3_1dbc1 = load i32, i32* %v2_1dbc1, align 4
  %v3_1dbcb = call i32 @unknown_3e0a2(i32 %v3_1dbb7, i32 %v3_1dbc1, i32 %v3_1dbba)
  ret i32 %v3_1dbcb

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_3e0a2, { 1, 0 }
}

define i32 @function_1dbd5() local_unnamed_addr {
dec_label_pc_1dbd5:
  %v0_1dbd5 = load i32, i32* @ebp, align 4
  %v1_1dbd5 = add i32 %v0_1dbd5, -12
  %v2_1dbd5 = inttoptr i32 %v1_1dbd5 to i32*
  %v3_1dbd5 = load i32, i32* %v2_1dbd5, align 4
  %v1_1dbd8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dbd8 = xor i32 %v1_1dbd8, %v3_1dbd5
  %v3_1dbd8 = icmp eq i32 %v2_1dbd8, 0
  store i32 %v2_1dbd8, i32* @eax, align 4
  br i1 %v3_1dbd8, label %bb, label %dec_label_pc_1dbe1

bb:                                               ; preds = %dec_label_pc_1dbd5
  %v1_1dbdf = call i32 @function_1dbe6()
  br label %dec_label_pc_1dbe1

dec_label_pc_1dbe1:                               ; preds = %bb, %dec_label_pc_1dbd5
  %v2_1dbdf = phi i32 [ %v1_1dbdf, %bb ], [ %v2_1dbd8, %dec_label_pc_1dbd5 ]
  ret i32 %v2_1dbdf
}

define i32 @function_1dbe6() local_unnamed_addr {
dec_label_pc_1dbe6:
  %v0_1dbec = load i32, i32* @eax, align 4
  ret i32 %v0_1dbec
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE14_M_range_checkEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dbee:
  store i1 false, i1* @cf, align 1
  store i32 %arg1, i32* @eax, align 4
  %v2_1dc11 = call i32 @function_35884(i32 %arg1)
  %tmp107 = icmp ule i32 %v2_1dc11, %arg2
  %v3_1dc19 = zext i1 %tmp107 to i32
  %v5_1dc19 = and i32 %v2_1dc11, -256
  %v6_1dc19 = or i32 %v3_1dc19, %v5_1dc19
  %v5_1dc1c = icmp eq i1 %tmp107, false
  br i1 %v5_1dc1c, label %bb, label %dec_label_pc_1dc20

bb:                                               ; preds = %dec_label_pc_1dbee
  %v1_1dc1e = call i32 @function_1dc2c()
  br label %dec_label_pc_1dc20

dec_label_pc_1dc20:                               ; preds = %bb, %dec_label_pc_1dbee
  %v3_1dc20 = phi i32 [ %v1_1dc1e, %bb ], [ %v6_1dc19, %dec_label_pc_1dbee ]
  ret i32 %v3_1dc20

; uselistorder directives
  uselistorder i1 %tmp107, { 1, 0 }
  uselistorder i32 %v2_1dc11, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1dc2c() local_unnamed_addr {
dec_label_pc_1dc2c:
  %v0_1dc2c = load i32, i32* @ebp, align 4
  %v1_1dc2c = add i32 %v0_1dc2c, -12
  %v2_1dc2c = inttoptr i32 %v1_1dc2c to i32*
  %v3_1dc2c = load i32, i32* %v2_1dc2c, align 4
  %v1_1dc2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1dc2f = xor i32 %v1_1dc2f, %v3_1dc2c
  %v3_1dc2f = icmp eq i32 %v2_1dc2f, 0
  store i32 %v2_1dc2f, i32* @eax, align 4
  br i1 %v3_1dc2f, label %bb, label %dec_label_pc_1dc38

bb:                                               ; preds = %dec_label_pc_1dc2c
  %v1_1dc36 = call i32 @function_1dc3d()
  br label %dec_label_pc_1dc38

dec_label_pc_1dc38:                               ; preds = %bb, %dec_label_pc_1dc2c
  %v2_1dc36 = phi i32 [ %v1_1dc36, %bb ], [ %v2_1dc2f, %dec_label_pc_1dc2c ]
  ret i32 %v2_1dc36
}

define i32 @function_1dc3d() local_unnamed_addr {
dec_label_pc_1dc3d:
  %v0_1dc3e = load i32, i32* @eax, align 4
  ret i32 %v0_1dc3e
}

define i32 @_ZNSt6vectorIbSaIbEE13_M_insert_auxESt13_Bit_iteratorb(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dc40:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp108 = call i32 @__decompiler_undefined_function_0()
  %tmp109 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-148 = alloca i32, align 4
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %tmp116 = call i32 @__decompiler_undefined_function_0()
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %tmp119 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %tmp121 = call i32 @__decompiler_undefined_function_0()
  %tmp123 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %tmp134 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %tmp149 = ptrtoint i32* %arg1 to i32
  %sext6 = mul i32 %arg4, 16777216
  %v4_1dc4a = sdiv i32 %sext6, 16777216
  store i32 %arg2, i32* %stack_var_-136, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_1dc76 = add i32 %tmp149, 8
  %v2_1dc76 = inttoptr i32 %v1_1dc76 to i32*
  %v3_1dc76 = load i32, i32* %v2_1dc76, align 4
  store i32 %v3_1dc76, i32* %edx.global-to-local, align 4
  %v1_1dc7c = add i32 %tmp149, 16
  %v2_1dc7c = inttoptr i32 %v1_1dc7c to i32*
  %v3_1dc7c = load i32, i32* %v2_1dc7c, align 4
  %v12_1dc7f = icmp eq i32 %v3_1dc76, %v3_1dc7c
  br i1 %v12_1dc7f, label %dec_label_pc_1dd26, label %dec_label_pc_1dc87

dec_label_pc_1dc87:                               ; preds = %dec_label_pc_1dc40
  store i32 %v1_1dc76, i32* %edx.global-to-local, align 4
  %v2_1dc8d = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1dc8d, i32* @eax, align 4
  %v4_1dc9f = call i32 @function_27266(i32 %v2_1dc8d, i32 %v1_1dc76, i32 1)
  %v2_1dca7 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1dca7, i32* @ecx, align 4
  %v3_1dcaa = load i32, i32* %stack_var_-120, align 4
  %v1_1dcbb = add i32 %tmp149, 12
  %v2_1dcbb = inttoptr i32 %v1_1dcbb to i32*
  %v3_1dcbb = load i32, i32* %v2_1dcbb, align 4
  store i32 %v3_1dcbb, i32* %edx.global-to-local, align 4
  %v3_1dcbe = load i32, i32* %v2_1dc76, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v8_1dcdd = call i32 @unknown_41fa5(i32 %v2_1dca7, i32 %arg2, i32 %arg3, i32 %v3_1dcbe, i32 %v3_1dcbb, i32 %v3_1dcaa, i32 %tmp134)
  %v0_1dce2 = load i32, i32* @esp, align 4
  %v5_1dce2 = icmp ult i32 %v0_1dce2, 4
  store i1 %v5_1dce2, i1* @cf, align 1
  %v4_1dce5 = urem i32 %v4_1dc4a, 256
  store i32 %v4_1dce5, i32* @ebx, align 4
  %v2_1dcec = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1dcec, i32* @eax, align 4
  %v2_1dcef = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_1dcef, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v2_1dcec, 16777216
  %v1_1dcfc = sdiv i32 %sext, 16777216
  %v3_1dcfc = call i32 @function_270b6(i32 %v1_1dcfc, i32 %v2_1dcef)
  %v0_1dd04 = load i32, i32* @ebx, align 4
  store i32 %v2_1dcec, i32* @eax, align 4
  %sext3 = mul i32 %v0_1dd04, 16777216
  %v2_1dd0e = sdiv i32 %sext3, 16777216
  %v3_1dd0e = call i32 @function_26caa(i32 %v2_1dcec, i32 %v2_1dd0e)
  store i32 %v1_1dc76, i32* @eax, align 4
  %v1_1dd1c = call i32 @function_27112(i32 %v1_1dc76)
  br label %dec_label_pc_1dee8

dec_label_pc_1dd26:                               ; preds = %dec_label_pc_1dc40
  %v4_1dd3c = call i32 @unknown_42068(i32 %tmp149, i32 1, i32 ptrtoint ([28 x i8]* @global_var_c5e7.2284 to i32))
  store i32 %v4_1dd3c, i32* %edx.global-to-local, align 4
  %v2_1dd51 = call i32 @unknown_4213a(i32 %tmp149, i32 %v4_1dd3c)
  %v2_1dd68 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1dd68, i32* @eax, align 4
  %v4_1dd6e = call i32 @function_27066(i32 %v2_1dd68, i32 %v2_1dd51, i32 0)
  %v2_1ddaf = ptrtoint i32* %stack_var_-96 to i32
  %v3_1ddb2 = load i32, i32* %stack_var_-80, align 4
  %v9_1dde6 = call i32 @unknown_4218c(i32 %v2_1ddaf, i32 %tmp149, i32 %tmp121, i32 %tmp116, i32 %tmp123, i32 %tmp117, i32 %v3_1ddb2, i32 %tmp119)
  %v0_1ddeb = load i32, i32* @esp, align 4
  %v5_1ddeb = icmp ult i32 %v0_1ddeb, 4
  store i1 %v5_1ddeb, i1* @cf, align 1
  %v4_1ddee = urem i32 %v4_1dc4a, 256
  store i32 %v4_1ddee, i32* @ebx, align 4
  %v2_1ddf5 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1ddf5, i32* @eax, align 4
  store i32 %v2_1ddaf, i32* %edx.global-to-local, align 4
  %sext4 = mul i32 %v2_1ddf5, 16777216
  %v1_1de0a = sdiv i32 %sext4, 16777216
  %v4_1de0a = call i32 @function_2714a(i32 %v1_1de0a, i32 %v2_1ddaf, i32 0)
  %v0_1de0f = load i32, i32* @esp, align 4
  %v5_1de0f = icmp ult i32 %v0_1de0f, 4
  store i1 %v5_1de0f, i1* @cf, align 1
  %v2_1de12 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1de12, i32* @eax, align 4
  store i32 %v2_1ddf5, i32* %edx.global-to-local, align 4
  %v3_1de1f = call i32 @function_270b6(i32 %v2_1de12, i32 %v1_1de0a)
  %v0_1de27 = load i32, i32* @ebx, align 4
  store i32 %v2_1de12, i32* @eax, align 4
  %v2_1de31 = call i32 @function_26caa(i32 %v2_1de12, i32 %v0_1de27)
  store i32 %tmp149, i32* %ebx.global-to-local, align 4
  %v2_1de4e = ptrtoint i32* %stack_var_-148 to i32
  %v3_1de54 = load i32, i32* %stack_var_-96, align 4
  %v3_1de70 = load i32, i32* %stack_var_-136, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %sext8 = mul i32 %tmp112, 16777216
  %v4_1de84 = sdiv i32 %sext8, 16777216
  %v8_1de84 = call i32 @unknown_4226d(i32 %v2_1de4e, i32 %v3_1de70, i32 %arg3, i32 %v4_1de84, i32 %tmp108, i32 %v3_1de54, i32 %tmp109)
  %v3_1de8c = load i32, i32* %stack_var_-148, align 4
  %v1_1de98 = load i32, i32* %ebx.global-to-local, align 4
  %v2_1de98 = add i32 %v1_1de98, 8
  %v3_1de98 = inttoptr i32 %v2_1de98 to i32*
  store i32 %v3_1de8c, i32* %v3_1de98, align 4
  %v0_1de9b = load i32, i32* %edx.global-to-local, align 4
  %v1_1de9b = load i32, i32* %ebx.global-to-local, align 4
  %v2_1de9b = add i32 %v1_1de9b, 12
  %v3_1de9b = inttoptr i32 %v2_1de9b to i32*
  store i32 %v0_1de9b, i32* %v3_1de9b, align 4
  %v1_1dea4 = call i32 @unknown_41cc2(i32 %tmp149)
  %v1_1deac = add i32 %v4_1dd3c, 31
  %v2_1deaf = udiv i32 %v1_1deac, 32
  %v2_1deb2 = mul nuw nsw i32 %v2_1deaf, 4
  %v5_1deb7 = add i32 %v2_1dd51, %v2_1deb2
  store i32 %v5_1deb7, i32* %edx.global-to-local, align 4
  store i32 %v5_1deb7, i32* %v2_1dc7c, align 4
  %v2_1decf = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1decf, i32* @eax, align 4
  %v3_1ded5 = call i32 @function_27066(i32 %v2_1decf, i32 %v2_1dd51, i32 0)
  %v3_1dedd = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1dedd, i32* %arg1, align 4
  %v2_1dee5 = add i32 %tmp149, 4
  %v3_1dee5 = inttoptr i32 %v2_1dee5 to i32*
  br label %dec_label_pc_1dee8

dec_label_pc_1dee8:                               ; preds = %dec_label_pc_1dd26, %dec_label_pc_1dc87
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1def4

bb:                                               ; preds = %dec_label_pc_1dee8
  %v1_1def2 = call i32 @function_1def9()
  br label %dec_label_pc_1def4

dec_label_pc_1def4:                               ; preds = %bb, %dec_label_pc_1dee8
  %v2_1def2 = phi i32 [ %v1_1def2, %bb ], [ 0, %dec_label_pc_1dee8 ]
  ret i32 %v2_1def2

; uselistorder directives
  uselistorder i32 %v1_1de0a, { 1, 0 }
  uselistorder i32 %v2_1ddf5, { 1, 0, 2 }
  uselistorder i32 %v2_1dd51, { 1, 0, 2 }
  uselistorder i32 %v2_1dcec, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1dc76, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp149, { 0, 2, 3, 4, 6, 5, 1, 8, 7 }
  uselistorder i32 (i32, i32, i32)* @function_27066, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_26caa, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_270b6, { 1, 0 }
  uselistorder i32 %arg3, { 3, 2, 1, 0, 4 }
}

define i32 @function_1def9() local_unnamed_addr {
dec_label_pc_1def9:
  %v0_1defd = load i32, i32* @eax, align 4
  ret i32 %v0_1defd
}

define i32 @_ZNKSt6vectorIbSaIbEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1defe:
  %v1_1df1e = add i32 %arg2, 8
  store i32 %arg1, i32* @eax, align 4
  %v2_1df2b = call i32 @function_27644(i32 %arg1, i32 %v1_1df1e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1df3f

bb:                                               ; preds = %dec_label_pc_1defe
  %v1_1df3d = call i32 @function_1df44()
  br label %dec_label_pc_1df3f

dec_label_pc_1df3f:                               ; preds = %bb, %dec_label_pc_1defe
  %v2_1df3d = phi i32 [ %v1_1df3d, %bb ], [ %arg1, %dec_label_pc_1defe ]
  ret i32 %v2_1df3d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1df44() local_unnamed_addr {
dec_label_pc_1df44:
  %v0_1df45 = load i32, i32* @eax, align 4
  ret i32 %v0_1df45
}

define i32 @_ZNKSt6vectorIbSaIbEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1df48:
  store i32 %arg1, i32* @eax, align 4
  %v2_1df72 = call i32 @function_2768e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1df86

bb:                                               ; preds = %dec_label_pc_1df48
  %v1_1df84 = call i32 @function_1df8b()
  br label %dec_label_pc_1df86

dec_label_pc_1df86:                               ; preds = %bb, %dec_label_pc_1df48
  %v2_1df84 = phi i32 [ %v1_1df84, %bb ], [ %arg1, %dec_label_pc_1df48 ]
  ret i32 %v2_1df84

; uselistorder directives
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @function_1df8b() local_unnamed_addr {
dec_label_pc_1df8b:
  %v0_1df8c = load i32, i32* @eax, align 4
  ret i32 %v0_1df8c
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1df90:
  %v1_1dfb0 = inttoptr i32 %arg2 to i32*
  %v2_1dfb0 = load i32, i32* %v1_1dfb0, align 4
  store i32 %v2_1dfb0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1dfc3

bb:                                               ; preds = %dec_label_pc_1df90
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1dfc1 = call i32 @function_1dfc8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1dfc3

dec_label_pc_1dfc3:                               ; preds = %bb, %dec_label_pc_1df90
  %v4_1dfc1 = phi i32 [ %v3_1dfc1, %bb ], [ 0, %dec_label_pc_1df90 ]
  ret i32 %v4_1dfc1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1dfc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dfc8:
  %v0_1dfc9 = load i32, i32* @eax, align 4
  ret i32 %v0_1dfc9
}

define i32 @_ZN9__gnu_cxxneIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dfca:
  %v1_1dfee = call i32 @unknown_3c134(i32 %arg1)
  %v1_1dff3 = inttoptr i32 %v1_1dfee to i32*
  %v2_1dff3 = load i32, i32* %v1_1dff3, align 4
  %v1_1dffb = call i32 @unknown_3c134(i32 %arg2)
  %v1_1e000 = inttoptr i32 %v1_1dffb to i32*
  %v2_1e000 = load i32, i32* %v1_1e000, align 4
  %v12_1e002 = icmp eq i32 %v2_1dff3, %v2_1e000
  %v1_1e004 = icmp eq i1 %v12_1e002, false
  %v2_1e004 = zext i1 %v1_1e004 to i32
  %v4_1e004 = and i32 %v2_1e000, -256
  %v5_1e004 = or i32 %v2_1e004, %v4_1e004
  store i32 %v5_1e004, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e013

bb:                                               ; preds = %dec_label_pc_1dfca
  %v1_1e011 = call i32 @function_1e018()
  br label %dec_label_pc_1e013

dec_label_pc_1e013:                               ; preds = %bb, %dec_label_pc_1dfca
  %v2_1e011 = phi i32 [ %v1_1e011, %bb ], [ %v5_1e004, %dec_label_pc_1dfca ]
  ret i32 %v2_1e011

; uselistorder directives
  uselistorder i32 %v2_1e000, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3c134, { 1, 0 }
}

define i32 @function_1e016(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e016:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e018() local_unnamed_addr {
dec_label_pc_1e018:
  %v0_1e01d = load i32, i32* @eax, align 4
  ret i32 %v0_1e01d
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEES8_ET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e01e:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_1e047 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1e054 = call i32 @unknown_4270e(i32 %v2_1e047, i32 %arg3)
  %v2_1e05c = ptrtoint i32* %stack_var_-24 to i32
  %v2_1e069 = call i32 @unknown_4270e(i32 %v2_1e05c, i32 %arg2)
  %v3_1e07b = load i32, i32* %stack_var_-20, align 4
  %v3_1e082 = load i32, i32* %stack_var_-24, align 4
  %v4_1e08c = call i32 @unknown_42758(i32 %arg1, i32 %v3_1e082, i32 %v3_1e07b, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e0a3

bb:                                               ; preds = %dec_label_pc_1e01e
  %v1_1e0a1 = call i32 @function_1e0a8()
  br label %dec_label_pc_1e0a3

dec_label_pc_1e0a3:                               ; preds = %bb, %dec_label_pc_1e01e
  %v2_1e0a1 = phi i32 [ %v1_1e0a1, %bb ], [ %arg1, %dec_label_pc_1e01e ]
  ret i32 %v2_1e0a1

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4270e, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e0a8() local_unnamed_addr {
dec_label_pc_1e0a8:
  %v0_1e0a9 = load i32, i32* @eax, align 4
  ret i32 %v0_1e0a9
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE15_M_erase_at_endEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e0ac:
  %v1_1e0cf = call i32 @unknown_3b88c(i32 %arg1)
  %v1_1e0d7 = add i32 %arg1, 4
  %v2_1e0d7 = inttoptr i32 %v1_1e0d7 to i32*
  %v3_1e0d7 = load i32, i32* %v2_1e0d7, align 4
  %v3_1e0e8 = call i32 @unknown_3b8b9(i32 %arg2, i32 %v3_1e0d7, i32 %v1_1e0cf)
  store i32 %arg2, i32* %v2_1e0d7, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e102

bb:                                               ; preds = %dec_label_pc_1e0ac
  %v1_1e100 = call i32 @function_1e107()
  br label %dec_label_pc_1e102

dec_label_pc_1e102:                               ; preds = %bb, %dec_label_pc_1e0ac
  %v2_1e100 = phi i32 [ %v1_1e100, %bb ], [ 0, %dec_label_pc_1e0ac ]
  ret i32 %v2_1e100

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e107() local_unnamed_addr {
dec_label_pc_1e107:
  %v0_1e108 = load i32, i32* @eax, align 4
  ret i32 %v0_1e108
}

define i32 @_ZN9__gnu_cxxmiIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e109:
  %v1_1e12d = call i32 @unknown_3c273(i32 %arg1)
  %v1_1e132 = inttoptr i32 %v1_1e12d to i32*
  %v2_1e132 = load i32, i32* %v1_1e132, align 4
  %v1_1e13c = call i32 @unknown_3c273(i32 %arg2)
  %v1_1e141 = inttoptr i32 %v1_1e13c to i32*
  %v2_1e141 = load i32, i32* %v1_1e141, align 4
  %v2_1e145 = sub i32 %v2_1e132, %v2_1e141
  %v2_1e149 = sdiv i32 %v2_1e145, 4
  %v3_1e14c = mul i32 %v2_1e149, -1431655765
  store i32 %v3_1e14c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e15e

bb:                                               ; preds = %dec_label_pc_1e109
  %v1_1e15c = call i32 @function_1e163()
  br label %dec_label_pc_1e15e

dec_label_pc_1e15e:                               ; preds = %bb, %dec_label_pc_1e109
  %v2_1e15c = phi i32 [ %v1_1e15c, %bb ], [ %v3_1e14c, %dec_label_pc_1e109 ]
  ret i32 %v2_1e15c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3c273, { 1, 0 }
}

define i32 @function_1e163() local_unnamed_addr {
dec_label_pc_1e163:
  %v0_1e168 = load i32, i32* @eax, align 4
  ret i32 %v0_1e168
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e16a:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e190

bb:                                               ; preds = %dec_label_pc_1e16a
  %v2_1e18e = call i32 @function_1e195(i32 %arg1)
  br label %dec_label_pc_1e190

dec_label_pc_1e190:                               ; preds = %bb, %dec_label_pc_1e16a
  %v3_1e18e = phi i32 [ %v2_1e18e, %bb ], [ %arg1, %dec_label_pc_1e16a ]
  ret i32 %v3_1e18e
}

define i32 @function_1e195(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e195:
  %v0_1e196 = load i32, i32* @eax, align 4
  ret i32 %v0_1e196
}

define i32 @_ZNSt6vectorIhSaIhEE4swapERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e198:
  %v2_1e1c3 = call i32 @unknown_42964(i32 %arg1, i32 %arg2)
  %v1_1e1cb = add i32 %arg2, 4
  %v1_1e1d1 = add i32 %arg1, 4
  %v2_1e1db = call i32 @unknown_42964(i32 %v1_1e1d1, i32 %v1_1e1cb)
  %v1_1e1e3 = add i32 %arg2, 8
  %v1_1e1e9 = add i32 %arg1, 8
  %v2_1e1f3 = call i32 @unknown_42964(i32 %v1_1e1e9, i32 %v1_1e1e3)
  %v1_1e1fe = call i32 @unknown_396d0(i32 %arg2)
  %v1_1e20b = call i32 @unknown_396d0(i32 %arg1)
  %v2_1e217 = call i32 @unknown_429ae(i32 %v1_1e20b, i32 %v1_1e1fe)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e228

bb:                                               ; preds = %dec_label_pc_1e198
  %v1_1e226 = call i32 @function_1e22d()
  br label %dec_label_pc_1e228

dec_label_pc_1e228:                               ; preds = %bb, %dec_label_pc_1e198
  %v2_1e226 = phi i32 [ %v1_1e226, %bb ], [ 0, %dec_label_pc_1e198 ]
  ret i32 %v2_1e226

; uselistorder directives
  uselistorder i32 (i32)* @unknown_396d0, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_42964, { 2, 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1e22d() local_unnamed_addr {
dec_label_pc_1e22d:
  %v0_1e232 = load i32, i32* @eax, align 4
  ret i32 %v0_1e232
}

define i32 @_ZN9__gnu_cxxeqIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e233:
  ret i32 0
}

define i32 @function_1e252(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e252:
  %ebx.global-to-local = alloca i32, align 4
  %v0_1e252 = load i32, i32* @ebp, align 4
  %v1_1e252 = add i32 %v0_1e252, 1
  store i32 %v1_1e252, i32* @ebp, align 4
  %v1_1e257 = call i32 @unknown_3c39d(i32 ptrtoint (i32* @9 to i32))
  %v1_1e25c = inttoptr i32 %v1_1e257 to i32*
  %v2_1e25c = load i32, i32* %v1_1e25c, align 4
  store i32 %v2_1e25c, i32* %ebx.global-to-local, align 4
  %v0_1e25e = load i32, i32* @ebp, align 4
  %v1_1e25e = add i32 %v0_1e25e, -32
  %v2_1e25e = inttoptr i32 %v1_1e25e to i32*
  %v3_1e25e = load i32, i32* %v2_1e25e, align 4
  %v1_1e264 = call i32 @unknown_3c39d(i32 %v3_1e25e)
  %v1_1e269 = inttoptr i32 %v1_1e264 to i32*
  %v2_1e269 = load i32, i32* %v1_1e269, align 4
  %v0_1e26b = load i32, i32* %ebx.global-to-local, align 4
  %v12_1e26b = icmp eq i32 %v0_1e26b, %v2_1e269
  %v1_1e26d = zext i1 %v12_1e26b to i32
  %v3_1e26d = and i32 %v2_1e269, -256
  %v4_1e26d = or i32 %v1_1e26d, %v3_1e26d
  store i32 %v4_1e26d, i32* @eax, align 4
  %v0_1e270 = load i32, i32* @ebp, align 4
  %v1_1e270 = add i32 %v0_1e270, -12
  %v2_1e270 = inttoptr i32 %v1_1e270 to i32*
  %v3_1e270 = load i32, i32* %v2_1e270, align 4
  %v1_1e273 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e273 = icmp eq i32 %v1_1e273, %v3_1e270
  br i1 %v3_1e273, label %bb, label %dec_label_pc_1e27c

bb:                                               ; preds = %dec_label_pc_1e252
  %v1_1e27a = call i32 @function_1e281()
  br label %dec_label_pc_1e27c

dec_label_pc_1e27c:                               ; preds = %bb, %dec_label_pc_1e252
  %v2_1e27a = phi i32 [ %v1_1e27a, %bb ], [ %v4_1e26d, %dec_label_pc_1e252 ]
  ret i32 %v2_1e27a

; uselistorder directives
  uselistorder i32 %v2_1e269, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3c39d, { 1, 0 }
}

define i32 @function_1e281() local_unnamed_addr {
dec_label_pc_1e281:
  %v0_1e286 = load i32, i32* @eax, align 4
  ret i32 %v0_1e286
}

define i32 @_ZNKSt12_Vector_baseI5CTxInSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e288:
  ret i32 %arg1
}

define i32 @function_1e296(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e296:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e296 = load i32, i32* @eax, align 4
  %v1_1e296 = trunc i32 %v0_1e296 to i8
  %v2_1e296 = load i1, i1* @cf, align 1
  %v3_1e296 = zext i1 %v2_1e296 to i8
  %v4_1e296 = add i8 %v3_1e296, %v1_1e296
  %v22_1e296 = zext i8 %v4_1e296 to i32
  %v24_1e296 = and i32 %v0_1e296, -256
  %v25_1e296 = or i32 %v22_1e296, %v24_1e296
  store i32 %v25_1e296, i32* %eax.global-to-local, align 4
  %v1_1e298 = inttoptr i32 %v25_1e296 to i8*
  %v2_1e298 = load i8, i8* %v1_1e298, align 1
  %v5_1e298 = add i8 %v2_1e298, %v4_1e296
  store i8 %v5_1e298, i8* %v1_1e298, align 1
  %v0_1e29a = load i32, i32* %eax.global-to-local, align 4
  %v1_1e29a = load i32, i32* @ebp, align 4
  %v2_1e29a = add i32 %v1_1e29a, -12
  %v3_1e29a = inttoptr i32 %v2_1e29a to i32*
  store i32 %v0_1e29a, i32* %v3_1e29a, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1e29f = load i32, i32* @ebp, align 4
  %v1_1e29f = add i32 %v0_1e29f, -28
  %v2_1e29f = inttoptr i32 %v1_1e29f to i32*
  %v3_1e29f = load i32, i32* %v2_1e29f, align 4
  store i32 %v3_1e29f, i32* @eax, align 4
  %v1_1e2a2 = add i32 %v0_1e29f, -12
  %v2_1e2a2 = inttoptr i32 %v1_1e2a2 to i32*
  %v3_1e2a2 = load i32, i32* %v2_1e2a2, align 4
  %v1_1e2a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e2a5 = icmp eq i32 %v1_1e2a5, %v3_1e2a2
  br i1 %v3_1e2a5, label %bb, label %dec_label_pc_1e2ae

bb:                                               ; preds = %dec_label_pc_1e296
  %v1_1e2ac = call i32 @function_1e2b3()
  store i32 %v1_1e2ac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e2ae

dec_label_pc_1e2ae:                               ; preds = %bb, %dec_label_pc_1e296
  %v2_1e2ac = phi i32 [ %v1_1e2ac, %bb ], [ %v3_1e29f, %dec_label_pc_1e296 ]
  ret i32 %v2_1e2ac
}

define i32 @function_1e2b3() local_unnamed_addr {
dec_label_pc_1e2b3:
  %v0_1e2b4 = load i32, i32* @eax, align 4
  ret i32 %v0_1e2b4
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EEC1EjRKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e2b6:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_1e2e7 = call i32 @unknown_42afc(i32 %tmp104, i32 %arg3)
  %v2_1e2f9 = call i32 @unknown_42b5c(i32 %tmp104, i32 %arg2)
  store i32 %v2_1e2f9, i32* %arg1, align 4
  %v2_1e30d = add i32 %tmp104, 4
  %v3_1e30d = inttoptr i32 %v2_1e30d to i32*
  store i32 %v2_1e2f9, i32* %v3_1e30d, align 4
  ret i32 %tmp104

; uselistorder directives
  uselistorder i32 %tmp104, { 3, 2, 1, 0 }
}

define i32 @function_1e313(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e313:
  %v0_1e315 = load i32, i32* @ebp, align 4
  %v1_1e315 = add i32 %v0_1e315, -32
  %v2_1e315 = inttoptr i32 %v1_1e315 to i32*
  %v3_1e315 = load i32, i32* %v2_1e315, align 4
  %v3_1e318 = mul i32 %v3_1e315, 52
  ret i32 %v3_1e318
}

define i32 @function_1e31e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e31e:
  %stack_var_-4 = alloca i32, align 4
  %v0_1e321 = load i32, i32* @eax, align 4
  store i32 %v0_1e321, i32* %stack_var_-4, align 4
  %v0_1e322 = load i32, i32* @ebx, align 4
  %v1_1e322 = add i32 %v0_1e322, 862319685
  %v2_1e322 = inttoptr i32 %v1_1e322 to i8*
  %v3_1e322 = load i8, i8* %v2_1e322, align 1
  %v4_1e322 = load i32, i32* @ecx, align 4
  %v5_1e322 = trunc i32 %v4_1e322 to i8
  %v6_1e322 = or i8 %v5_1e322, %v3_1e322
  store i8 %v6_1e322, i8* %v2_1e322, align 1
  %v0_1e328 = load i32, i32* @eax, align 4
  %v1_1e328 = add i32 %v0_1e328, 20
  %v10_1e328 = icmp eq i32 %v1_1e328, 0
  store i32 %v1_1e328, i32* @eax, align 4
  br i1 %v10_1e328, label %bb, label %dec_label_pc_1e32f

bb:                                               ; preds = %dec_label_pc_1e31e
  %v1_1e32d = load i32, i32* %stack_var_-4, align 4
  %v2_1e32d = call i32 @function_1e34d(i32 %v1_1e32d)
  store i32 %v2_1e32d, i32* @eax, align 4
  br label %dec_label_pc_1e32f

dec_label_pc_1e32f:                               ; preds = %bb, %dec_label_pc_1e31e
  %v0_1e32f = call i32 @function_1e348()
  ret i32 %v0_1e32f
}

define i32 @function_1e332() local_unnamed_addr {
dec_label_pc_1e332:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e332 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e332
}

define i32 @function_1e348() local_unnamed_addr {
dec_label_pc_1e348:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e34d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e34d:
  %v0_1e352 = load i32, i32* @eax, align 4
  ret i32 %v0_1e352
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_S2_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e353:
  %v0_1e371 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1e371
}

define i32 @function_1e37b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e37b:
  %v0_1e37b = load i32, i32* @ebx, align 4
  %v1_1e37b = add i32 %v0_1e37b, 1149885509
  %v2_1e37b = inttoptr i32 %v1_1e37b to i8*
  %v3_1e37b = load i8, i8* %v2_1e37b, align 1
  %v4_1e37b = udiv i8 %v3_1e37b, 16
  %v5_1e37b = mul i8 %v3_1e37b, 16
  %v6_1e37b = or i8 %v4_1e37b, %v5_1e37b
  store i8 %v6_1e37b, i8* %v2_1e37b, align 1
  %v0_1e382 = load i32, i32* @ebx, align 4
  %v1_1e382 = add i32 %v0_1e382, 1149886533
  %v2_1e382 = inttoptr i32 %v1_1e382 to i8*
  %v3_1e382 = load i8, i8* %v2_1e382, align 1
  %v4_1e382 = load i32, i32* @ecx, align 4
  %v5_1e382 = trunc i32 %v4_1e382 to i8
  %v6_1e382 = or i8 %v5_1e382, %v3_1e382
  store i8 %v6_1e382, i8* %v2_1e382, align 1
  %v0_1e38a = load i32, i32* @ebp, align 4
  %v1_1e38a = add i32 %v0_1e38a, -28
  %v2_1e38a = inttoptr i32 %v1_1e38a to i32*
  %v3_1e38a = load i32, i32* %v2_1e38a, align 4
  %v1_1e390 = call i32 @unknown_42c50(i32 %v3_1e38a)
  store i32 %v1_1e390, i32* @eax, align 4
  %v0_1e395 = load i32, i32* @ebp, align 4
  %v1_1e395 = add i32 %v0_1e395, -12
  %v2_1e395 = inttoptr i32 %v1_1e395 to i32*
  %v3_1e395 = load i32, i32* %v2_1e395, align 4
  %v1_1e398 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1e398 = icmp eq i32 %v1_1e398, %v3_1e395
  br i1 %v3_1e398, label %bb, label %dec_label_pc_1e3a1

bb:                                               ; preds = %dec_label_pc_1e37b
  %v1_1e39f = call i32 @function_1e3a6()
  br label %dec_label_pc_1e3a1

dec_label_pc_1e3a1:                               ; preds = %bb, %dec_label_pc_1e37b
  %v2_1e39f = phi i32 [ %v1_1e39f, %bb ], [ %v1_1e390, %dec_label_pc_1e37b ]
  ret i32 %v2_1e39f

; uselistorder directives
  uselistorder i32 1149886533, { 1, 0 }
}

define i32 @function_1e3a6() local_unnamed_addr {
dec_label_pc_1e3a6:
  %v0_1e3a7 = load i32, i32* @eax, align 4
  ret i32 %v0_1e3a7
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e3a8:
  ret i32 %arg2
}

define i32 @function_1e3e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e3e2:
  %v0_1e3e2 = load i32, i32* @eax, align 4
  %v0_1e3e6 = load i32, i32* @ebp, align 4
  %v1_1e3e6 = add i32 %v0_1e3e6, -28
  %v2_1e3e6 = inttoptr i32 %v1_1e3e6 to i32*
  %v3_1e3e6 = load i32, i32* %v2_1e3e6, align 4
  %v2_1e3ec = call i32 @unknown_42cf4(i32 %v3_1e3e6, i32 %v0_1e3e2)
  %v0_1e3f1 = load i32, i32* @ebp, align 4
  %v1_1e3f1 = add i32 %v0_1e3f1, -12
  %v2_1e3f1 = inttoptr i32 %v1_1e3f1 to i32*
  %v3_1e3f1 = load i32, i32* %v2_1e3f1, align 4
  %v1_1e3f4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e3f4 = xor i32 %v1_1e3f4, %v3_1e3f1
  %v3_1e3f4 = icmp eq i32 %v2_1e3f4, 0
  store i32 %v2_1e3f4, i32* @eax, align 4
  br i1 %v3_1e3f4, label %bb, label %dec_label_pc_1e3fd

bb:                                               ; preds = %dec_label_pc_1e3e2
  %v1_1e3fb = call i32 @function_1e402()
  br label %dec_label_pc_1e3fd

dec_label_pc_1e3fd:                               ; preds = %bb, %dec_label_pc_1e3e2
  %v2_1e3fb = phi i32 [ %v1_1e3fb, %bb ], [ %v2_1e3f4, %dec_label_pc_1e3e2 ]
  ret i32 %v2_1e3fb
}

define i32 @function_1e402() local_unnamed_addr {
dec_label_pc_1e402:
  %v0_1e403 = load i32, i32* @eax, align 4
  ret i32 %v0_1e403
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE3endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e404:
  ret i32 %arg1
}

define i32 @function_1e411() local_unnamed_addr {
dec_label_pc_1e411:
  %eax.global-to-local = alloca i32, align 4
  %v15_1e411 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_1e411
}

define i32 @function_1e449() local_unnamed_addr {
dec_label_pc_1e449:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1e449 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e449 = add i32 %v0_1e449, -1
  store i32 %v1_1e449, i32* %ecx.global-to-local, align 4
  %v0_1e44b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e44b
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE6insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e44e:
  %v0_1e46c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1e46c
}

define i32 @function_1e476(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e476:
  %v0_1e476 = load i32, i32* @ebx, align 4
  %v1_1e476 = add i32 %v0_1e476, 1149884485
  %v2_1e476 = inttoptr i32 %v1_1e476 to i8*
  %v3_1e476 = load i8, i8* %v2_1e476, align 1
  %v4_1e476 = udiv i8 %v3_1e476, 16
  %v5_1e476 = mul i8 %v3_1e476, 16
  %v6_1e476 = or i8 %v4_1e476, %v5_1e476
  store i8 %v6_1e476, i8* %v2_1e476, align 1
  %v0_1e47f = load i32, i32* @ebp, align 4
  %v1_1e486 = add i32 %v0_1e47f, 2
  store i32 %v1_1e486, i32* @ebp, align 4
  %v1_1e48c = add i32 %v0_1e47f, -26
  %v2_1e48c = inttoptr i32 %v1_1e48c to i32*
  %v3_1e48c = load i32, i32* %v2_1e48c, align 4
  %v1_1e492 = call i32 @unknown_432b0(i32 %v3_1e48c)
  %v0_1e497 = load i32, i32* @ebp, align 4
  %v1_1e497 = add i32 %v0_1e497, -12
  %v2_1e497 = inttoptr i32 %v1_1e497 to i32*
  %v3_1e497 = load i32, i32* %v2_1e497, align 4
  %v1_1e49a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e49a = xor i32 %v1_1e49a, %v3_1e497
  %v3_1e49a = icmp eq i32 %v2_1e49a, 0
  store i32 %v2_1e49a, i32* @eax, align 4
  br i1 %v3_1e49a, label %bb, label %dec_label_pc_1e4a3

bb:                                               ; preds = %dec_label_pc_1e476
  %v1_1e4a1 = call i32 @function_1e4a8()
  br label %dec_label_pc_1e4a3

dec_label_pc_1e4a3:                               ; preds = %bb, %dec_label_pc_1e476
  %v3_1e4a1 = phi i32 [ %v1_1e4a1, %bb ], [ %v2_1e49a, %dec_label_pc_1e476 ]
  ret i32 %v3_1e4a1
}

define i32 @function_1e4a8() local_unnamed_addr {
dec_label_pc_1e4a8:
  %v0_1e4a9 = load i32, i32* @eax, align 4
  ret i32 %v0_1e4a9
}

define i32 @_Z9SerializeI11CHashWriter12CTransactionEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e4aa:
  %v8_1e4ee = call i32 @unknown_43794(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e4ff

bb:                                               ; preds = %dec_label_pc_1e4aa
  %v1_1e4fd = call i32 @function_1e504()
  br label %dec_label_pc_1e4ff

dec_label_pc_1e4ff:                               ; preds = %bb, %dec_label_pc_1e4aa
  %v2_1e4fd = phi i32 [ %v1_1e4fd, %bb ], [ 0, %dec_label_pc_1e4aa ]
  ret i32 %v2_1e4fd

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1e504() local_unnamed_addr {
dec_label_pc_1e504:
  %v0_1e505 = load i32, i32* @eax, align 4
  ret i32 %v0_1e505
}

define i32 @_Z9SerializeI11CHashWriterEvRT_iii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1e506:
  ret i32 %arg1
}

define i32 @function_1e544(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e544:
  %v0_1e544 = call i32 @function_2e268()
  %v0_1e549 = load i32, i32* @ebp, align 4
  %v1_1e549 = add i32 %v0_1e549, -12
  %v2_1e549 = inttoptr i32 %v1_1e549 to i32*
  %v3_1e549 = load i32, i32* %v2_1e549, align 4
  %v1_1e54c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e54c = xor i32 %v1_1e54c, %v3_1e549
  %v3_1e54c = icmp eq i32 %v2_1e54c, 0
  store i32 %v2_1e54c, i32* @eax, align 4
  br i1 %v3_1e54c, label %bb, label %dec_label_pc_1e555

bb:                                               ; preds = %dec_label_pc_1e544
  %v1_1e553 = call i32 @function_1e55a()
  br label %dec_label_pc_1e555

dec_label_pc_1e555:                               ; preds = %bb, %dec_label_pc_1e544
  %v3_1e553 = phi i32 [ %v1_1e553, %bb ], [ %v2_1e54c, %dec_label_pc_1e544 ]
  ret i32 %v3_1e553
}

define i32 @function_1e55a() local_unnamed_addr {
dec_label_pc_1e55a:
  %v0_1e55b = load i32, i32* @eax, align 4
  ret i32 %v0_1e55b
}

define i32 @_ZN5boost6tuples4consI7uint256NS1_ISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEEEC1IKS2_KS5_KS6_KS7_SF_SF_SF_SF_SF_SF_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1e55c:
  ret i32 %arg6
}

define i32 @function_1e584(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e584:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_1e584 = load i32, i32* @ebp, align 4
  %v1_1e584 = add i32 %v0_1e584, 1
  store i32 %v1_1e584, i32* %ebp.global-to-local, align 4
  %v0_1e585 = load i32, i32* @ebx, align 4
  %v1_1e585 = add i32 %v0_1e585, 1166614597
  %v2_1e585 = inttoptr i32 %v1_1e585 to i8*
  %v3_1e585 = load i8, i8* %v2_1e585, align 1
  %v4_1e585 = udiv i8 %v3_1e585, 2
  %v5_1e585 = shl i8 %v3_1e585, 7
  %v6_1e585 = or i8 %v4_1e585, %v5_1e585
  store i8 %v6_1e585, i8* %v2_1e585, align 1
  %v0_1e58c = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e58c = add i32 %v0_1e58c, 36
  %v2_1e58c = inttoptr i32 %v1_1e58c to i32*
  %v3_1e58c = load i32, i32* %v2_1e58c, align 4
  store i32 %v3_1e58c, i32* %eax.global-to-local, align 4
  %v2_1e58f = add i32 %v0_1e58c, -56
  %v3_1e58f = inttoptr i32 %v2_1e58f to i32*
  store i32 %v3_1e58c, i32* %v3_1e58f, align 4
  %v0_1e592 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e592 = add i32 %v0_1e592, 40
  %v2_1e592 = inttoptr i32 %v1_1e592 to i32*
  %v3_1e592 = load i32, i32* %v2_1e592, align 4
  store i32 %v3_1e592, i32* %eax.global-to-local, align 4
  %v2_1e595 = add i32 %v0_1e592, -60
  %v3_1e595 = inttoptr i32 %v2_1e595 to i32*
  store i32 %v3_1e592, i32* %v3_1e595, align 4
  %v0_1e598 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1e598 = add i32 %v0_1e598, 44
  %v2_1e598 = inttoptr i32 %v1_1e598 to i32*
  %v3_1e598 = load i32, i32* %v2_1e598, align 4
  store i32 %v3_1e598, i32* %eax.global-to-local, align 4
  %v2_1e59b = add i32 %v0_1e598, -64
  %v3_1e59b = inttoptr i32 %v2_1e59b to i32*
  store i32 %v3_1e598, i32* %v3_1e59b, align 4
  %v4_1e59b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_1e59b

; uselistorder directives
  uselistorder i8 %v3_1e585, { 1, 0 }
}

define i32 @function_1e5a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e5a0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1e5a0 = load i32, i32* @ecx, align 4
  %v1_1e5a0 = add i32 %v0_1e5a0, -1587168187
  %v2_1e5a0 = inttoptr i32 %v1_1e5a0 to i8*
  %v3_1e5a0 = load i8, i8* %v2_1e5a0, align 1
  %v5_1e5a0 = trunc i32 %v0_1e5a0 to i8
  %v6_1e5a0 = xor i8 %v3_1e5a0, %v5_1e5a0
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_1e5a0, i8* %v2_1e5a0, align 1
  %v0_1e5a6 = load i32, i32* @eax, align 4
  %v1_1e5a6 = trunc i32 %v0_1e5a6 to i8
  %v2_1e5a6 = load i1, i1* %cf.global-to-local, align 1
  %v3_1e5a6 = zext i1 %v2_1e5a6 to i8
  %v4_1e5a6 = add i8 %v3_1e5a6, %v1_1e5a6
  %v19_1e5a6 = icmp ule i8 %v4_1e5a6, %v1_1e5a6
  %v21_1e5a6 = icmp eq i1 %v2_1e5a6, %v19_1e5a6
  store i1 %v21_1e5a6, i1* %cf.global-to-local, align 1
  %v22_1e5a6 = zext i8 %v4_1e5a6 to i32
  %v24_1e5a6 = and i32 %v0_1e5a6, -256
  %v25_1e5a6 = or i32 %v22_1e5a6, %v24_1e5a6
  store i32 %v25_1e5a6, i32* %eax.global-to-local, align 4
  %v1_1e5a8 = inttoptr i32 %v25_1e5a6 to i8*
  %v2_1e5a8 = load i8, i8* %v1_1e5a8, align 1
  %v5_1e5a8 = add i8 %v2_1e5a8, %v4_1e5a6
  store i8 %v5_1e5a8, i8* %v1_1e5a8, align 1
  %v0_1e5aa = load i32, i32* %eax.global-to-local, align 4
  %v1_1e5aa = load i32, i32* @ebp, align 4
  %v2_1e5aa = add i32 %v1_1e5aa, -12
  %v3_1e5aa = inttoptr i32 %v2_1e5aa to i32*
  store i32 %v0_1e5aa, i32* %v3_1e5aa, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_1e5af = load i32, i32* @ebp, align 4
  %v1_1e5af = add i32 %v0_1e5af, -28
  %v2_1e5af = inttoptr i32 %v1_1e5af to i32*
  %v3_1e5af = load i32, i32* %v2_1e5af, align 4
  store i32 %v3_1e5af, i32* %eax.global-to-local, align 4
  %v1_1e5b2 = add i32 %v0_1e5af, -32
  %v2_1e5b2 = inttoptr i32 %v1_1e5b2 to i32*
  %v3_1e5b2 = load i32, i32* %v2_1e5b2, align 4
  store i32 %v3_1e5b2, i32* %edx.global-to-local, align 4
  %v1_1e5b5 = inttoptr i32 %v3_1e5b2 to i32*
  %v2_1e5b5 = load i32, i32* %v1_1e5b5, align 4
  %v2_1e5b7 = inttoptr i32 %v3_1e5af to i32*
  store i32 %v2_1e5b5, i32* %v2_1e5b7, align 4
  %v0_1e5b9 = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5b9 = add i32 %v0_1e5b9, 4
  %v2_1e5b9 = inttoptr i32 %v1_1e5b9 to i32*
  %v3_1e5b9 = load i32, i32* %v2_1e5b9, align 4
  %v1_1e5bc = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5bc = add i32 %v1_1e5bc, 4
  %v3_1e5bc = inttoptr i32 %v2_1e5bc to i32*
  store i32 %v3_1e5b9, i32* %v3_1e5bc, align 4
  %v0_1e5bf = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5bf = add i32 %v0_1e5bf, 8
  %v2_1e5bf = inttoptr i32 %v1_1e5bf to i32*
  %v3_1e5bf = load i32, i32* %v2_1e5bf, align 4
  %v1_1e5c2 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5c2 = add i32 %v1_1e5c2, 8
  %v3_1e5c2 = inttoptr i32 %v2_1e5c2 to i32*
  store i32 %v3_1e5bf, i32* %v3_1e5c2, align 4
  %v0_1e5c5 = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5c5 = add i32 %v0_1e5c5, 12
  %v2_1e5c5 = inttoptr i32 %v1_1e5c5 to i32*
  %v3_1e5c5 = load i32, i32* %v2_1e5c5, align 4
  %v1_1e5c8 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5c8 = add i32 %v1_1e5c8, 12
  %v3_1e5c8 = inttoptr i32 %v2_1e5c8 to i32*
  store i32 %v3_1e5c5, i32* %v3_1e5c8, align 4
  %v0_1e5cb = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5cb = add i32 %v0_1e5cb, 16
  %v2_1e5cb = inttoptr i32 %v1_1e5cb to i32*
  %v3_1e5cb = load i32, i32* %v2_1e5cb, align 4
  %v1_1e5ce = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5ce = add i32 %v1_1e5ce, 16
  %v3_1e5ce = inttoptr i32 %v2_1e5ce to i32*
  store i32 %v3_1e5cb, i32* %v3_1e5ce, align 4
  %v0_1e5d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5d1 = add i32 %v0_1e5d1, 20
  %v2_1e5d1 = inttoptr i32 %v1_1e5d1 to i32*
  %v3_1e5d1 = load i32, i32* %v2_1e5d1, align 4
  %v1_1e5d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5d4 = add i32 %v1_1e5d4, 20
  %v3_1e5d4 = inttoptr i32 %v2_1e5d4 to i32*
  store i32 %v3_1e5d1, i32* %v3_1e5d4, align 4
  %v0_1e5d7 = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5d7 = add i32 %v0_1e5d7, 24
  %v2_1e5d7 = inttoptr i32 %v1_1e5d7 to i32*
  %v3_1e5d7 = load i32, i32* %v2_1e5d7, align 4
  store i32 %v3_1e5d7, i32* @ecx, align 4
  %v1_1e5da = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5da = add i32 %v1_1e5da, 24
  %v3_1e5da = inttoptr i32 %v2_1e5da to i32*
  store i32 %v3_1e5d7, i32* %v3_1e5da, align 4
  %v0_1e5dd = load i32, i32* %edx.global-to-local, align 4
  %v1_1e5dd = add i32 %v0_1e5dd, 28
  %v2_1e5dd = inttoptr i32 %v1_1e5dd to i32*
  %v3_1e5dd = load i32, i32* %v2_1e5dd, align 4
  store i32 %v3_1e5dd, i32* %edx.global-to-local, align 4
  %v1_1e5e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_1e5e0 = add i32 %v1_1e5e0, 28
  %v3_1e5e0 = inttoptr i32 %v2_1e5e0 to i32*
  store i32 %v3_1e5dd, i32* %v3_1e5e0, align 4
  %v0_1e5e3 = load i32, i32* @ebp, align 4
  %v1_1e5e3 = add i32 %v0_1e5e3, -69
  store i32 %v1_1e5e3, i32* @eax, align 4
  %v1_1e5e9 = call i32 @function_27510(i32 %v1_1e5e3)
  store i32 %v1_1e5e9, i32* %eax.global-to-local, align 4
  %v0_1e5ee = load i32, i32* @esp, align 4
  %v5_1e5ee = icmp ult i32 %v0_1e5ee, 4
  store i1 %v5_1e5ee, i1* %cf.global-to-local, align 1
  %v0_1e5f1 = load i32, i32* @ebp, align 4
  %v1_1e5f1 = add i32 %v0_1e5f1, -28
  %v2_1e5f1 = inttoptr i32 %v1_1e5f1 to i32*
  %v3_1e5f1 = load i32, i32* %v2_1e5f1, align 4
  %v1_1e5f4 = add i32 %v3_1e5f1, 32
  store i32 %v1_1e5f4, i32* %edx.global-to-local, align 4
  %v1_1e5f7 = add i32 %v0_1e5f1, -13
  store i32 %v1_1e5f7, i32* %eax.global-to-local, align 4
  %v1_1e5fe = add i32 %v0_1e5f1, -68
  %v2_1e5fe = inttoptr i32 %v1_1e5fe to i32*
  %v3_1e5fe = load i32, i32* %v2_1e5fe, align 4
  store i32 %v3_1e5fe, i32* %eax.global-to-local, align 4
  %v1_1e605 = add i32 %v0_1e5f1, -64
  %v2_1e605 = inttoptr i32 %v1_1e605 to i32*
  %v3_1e605 = load i32, i32* %v2_1e605, align 4
  store i32 %v3_1e605, i32* %eax.global-to-local, align 4
  %v1_1e60c = add i32 %v0_1e5f1, -60
  %v2_1e60c = inttoptr i32 %v1_1e60c to i32*
  %v3_1e60c = load i32, i32* %v2_1e60c, align 4
  store i32 %v3_1e60c, i32* %eax.global-to-local, align 4
  %v1_1e613 = add i32 %v0_1e5f1, -56
  %v2_1e613 = inttoptr i32 %v1_1e613 to i32*
  %v3_1e613 = load i32, i32* %v2_1e613, align 4
  store i32 %v3_1e613, i32* %eax.global-to-local, align 4
  %v1_1e61a = add i32 %v0_1e5f1, -52
  %v2_1e61a = inttoptr i32 %v1_1e61a to i32*
  %v3_1e61a = load i32, i32* %v2_1e61a, align 4
  store i32 %v3_1e61a, i32* %eax.global-to-local, align 4
  %v1_1e621 = add i32 %v0_1e5f1, -48
  %v2_1e621 = inttoptr i32 %v1_1e621 to i32*
  %v3_1e621 = load i32, i32* %v2_1e621, align 4
  store i32 %v3_1e621, i32* %eax.global-to-local, align 4
  %v1_1e628 = add i32 %v0_1e5f1, -44
  %v2_1e628 = inttoptr i32 %v1_1e628 to i32*
  %v3_1e628 = load i32, i32* %v2_1e628, align 4
  store i32 %v3_1e628, i32* %eax.global-to-local, align 4
  %v1_1e62f = add i32 %v0_1e5f1, -40
  %v2_1e62f = inttoptr i32 %v1_1e62f to i32*
  %v3_1e62f = load i32, i32* %v2_1e62f, align 4
  store i32 %v3_1e62f, i32* %eax.global-to-local, align 4
  %v1_1e636 = add i32 %v0_1e5f1, -36
  %v2_1e636 = inttoptr i32 %v1_1e636 to i32*
  %v3_1e636 = load i32, i32* %v2_1e636, align 4
  store i32 %v3_1e636, i32* %eax.global-to-local, align 4
  %v11_1e640 = call i32 @unknown_43950(i32 %v1_1e5f4, i32 %v3_1e636, i32 %v3_1e62f, i32 %v3_1e628, i32 %v3_1e621, i32 %v3_1e61a, i32 %v3_1e613, i32 %v3_1e60c, i32 %v3_1e605, i32 %v3_1e5fe, i32 %v1_1e5f7)
  store i32 %v11_1e640, i32* %eax.global-to-local, align 4
  %v0_1e645 = load i32, i32* @ebp, align 4
  %v1_1e645 = add i32 %v0_1e645, -12
  %v2_1e645 = inttoptr i32 %v1_1e645 to i32*
  %v3_1e645 = load i32, i32* %v2_1e645, align 4
  store i32 %v3_1e645, i32* %eax.global-to-local, align 4
  %v1_1e648 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1e648 = xor i32 %v1_1e648, %v3_1e645
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_1e648 = icmp eq i32 %v2_1e648, 0
  store i32 %v2_1e648, i32* @eax, align 4
  br i1 %v3_1e648, label %bb, label %dec_label_pc_1e651

bb:                                               ; preds = %dec_label_pc_1e5a0
  %v1_1e64f = call i32 @function_1e656()
  store i32 %v1_1e64f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1e651

dec_label_pc_1e651:                               ; preds = %bb, %dec_label_pc_1e5a0
  %v2_1e64f = phi i32 [ %v1_1e64f, %bb ], [ %v2_1e648, %dec_label_pc_1e5a0 ]
  ret i32 %v2_1e64f

; uselistorder directives
  uselistorder i32 %v0_1e5f1, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
  uselistorder i8 %v4_1e5a6, { 0, 2, 1 }
  uselistorder i8 %v1_1e5a6, { 1, 0 }
}

define i32 @function_1e656() local_unnamed_addr {
dec_label_pc_1e656:
  %v0_1e657 = load i32, i32* @eax, align 4
  ret i32 %v0_1e657
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE4findERKS9_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e658:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v1_1e682 = call i32 @unknown_43b26(i32 %arg2)
  %v1_1e68f = call i32 @unknown_3d38c(i32 %arg2)
  %v2_1e694 = ptrtoint i32* %stack_var_-24 to i32
  %v5_1e6b0 = call i32 @unknown_43b56(i32 %v2_1e694, i32 %arg2, i32 %v1_1e68f, i32 %v1_1e682, i32 %arg3)
  %v2_1e6b8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1e6c5 = call i32 @unknown_43c0a(i32 %v2_1e6b8, i32 %arg2)
  %v2_1e6da = call i32 @unknown_43ce0(i32 %v2_1e694, i32 %v2_1e6b8)
  %v4_1e6df = trunc i32 %v2_1e6da to i8
  %v5_1e6df = icmp eq i8 %v4_1e6df, 0
  %v1_1e6e1 = icmp eq i1 %v5_1e6df, false
  br i1 %v1_1e6e1, label %dec_label_pc_1e70a, label %dec_label_pc_1e6e3

dec_label_pc_1e6e3:                               ; preds = %dec_label_pc_1e658
  %v3_1e6e3 = load i32, i32* %stack_var_-24, align 4
  %v1_1e6e9 = call i32 @unknown_43c54(i32 %v3_1e6e3)
  %v3_1e701 = call i32 @unknown_43c98(i32 %arg2, i32 %arg3, i32 %v1_1e6e9)
  %v4_1e706 = trunc i32 %v3_1e701 to i8
  %v5_1e706 = icmp eq i8 %v4_1e706, 0
  br i1 %v5_1e706, label %dec_label_pc_1e721, label %dec_label_pc_1e70a

dec_label_pc_1e70a:                               ; preds = %dec_label_pc_1e6e3, %dec_label_pc_1e658
  %v2_1e717 = call i32 @unknown_43c0a(i32 %tmp115, i32 %arg2)
  br label %dec_label_pc_1e729

dec_label_pc_1e721:                               ; preds = %dec_label_pc_1e6e3
  %v3_1e724 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1e724, i32* %arg1, align 4
  br label %dec_label_pc_1e729

dec_label_pc_1e729:                               ; preds = %dec_label_pc_1e721, %dec_label_pc_1e70a
  store i32 %tmp115, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e738

bb:                                               ; preds = %dec_label_pc_1e729
  %v1_1e736 = call i32 @function_1e73d()
  br label %dec_label_pc_1e738

dec_label_pc_1e738:                               ; preds = %bb, %dec_label_pc_1e729
  %v2_1e736 = phi i32 [ %v1_1e736, %bb ], [ %tmp115, %dec_label_pc_1e729 ]
  ret i32 %v2_1e736

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_43c0a, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 5, 4 }
}

define i32 @function_1e73d() local_unnamed_addr {
dec_label_pc_1e73d:
  %v0_1e741 = load i32, i32* @eax, align 4
  ret i32 %v0_1e741
}

define i32 @_ZNSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEC1ERKSt17_Rb_tree_iteratorIS9_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e744:
  %v1_1e764 = inttoptr i32 %arg2 to i32*
  %v2_1e764 = load i32, i32* %v1_1e764, align 4
  store i32 %v2_1e764, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e777

bb:                                               ; preds = %dec_label_pc_1e744
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1e775 = call i32 @function_1e77c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1e777

dec_label_pc_1e777:                               ; preds = %bb, %dec_label_pc_1e744
  %v4_1e775 = phi i32 [ %v3_1e775, %bb ], [ 0, %dec_label_pc_1e744 ]
  ret i32 %v4_1e775

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1e77c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e77c:
  %v0_1e77d = load i32, i32* @eax, align 4
  ret i32 %v0_1e77d
}

define i32 @_ZNKSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e77e:
  %v1_1e79e = add i32 %arg2, 4
  %v2_1e7ab = call i32 @unknown_43e46(i32 %arg1, i32 %v1_1e79e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e7bf

bb:                                               ; preds = %dec_label_pc_1e77e
  %v1_1e7bd = call i32 @function_1e7c4()
  br label %dec_label_pc_1e7bf

dec_label_pc_1e7bf:                               ; preds = %bb, %dec_label_pc_1e77e
  %v2_1e7bd = phi i32 [ %v1_1e7bd, %bb ], [ %arg1, %dec_label_pc_1e77e ]
  ret i32 %v2_1e7bd

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e7c4() local_unnamed_addr {
dec_label_pc_1e7c4:
  %v0_1e7c5 = load i32, i32* @eax, align 4
  ret i32 %v0_1e7c5
}

define i32 @_ZN5boost11unique_lockINS_12shared_mutexEE4lockEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1e7c8:
  %stack_var_-24 = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1e7e6 = call i32 @unknown_3d012(i32 %tmp101)
  %v4_1e7eb = trunc i32 %v1_1e7e6 to i8
  %v5_1e7eb = icmp eq i8 %v4_1e7eb, 0
  br i1 %v5_1e7eb, label %dec_label_pc_1e805, label %dec_label_pc_1e7ef

dec_label_pc_1e7ef:                               ; preds = %dec_label_pc_1e7c8
  %v2_1e7ef = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1e7ef, i32* @eax, align 4
  %v1_1e7f5 = call i32 @function_2988a(i32 %v2_1e7ef)
  store i32 %v2_1e7ef, i32* @eax, align 4
  %v1_1e800 = call i32 @function_33705(i32 %v2_1e7ef)
  br label %dec_label_pc_1e805

dec_label_pc_1e805:                               ; preds = %dec_label_pc_1e7ef, %dec_label_pc_1e7c8
  %v2_1e808 = load i32, i32* %arg1, align 4
  %v1_1e80d = call i32 @function_2f474(i32 %v2_1e808)
  %v1_1e815 = add i32 %tmp101, 4
  %v2_1e815 = inttoptr i32 %v1_1e815 to i8*
  store i8 1, i8* %v2_1e815, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e825

bb:                                               ; preds = %dec_label_pc_1e805
  %v1_1e823 = call i32 @function_1e843()
  store i32 %v1_1e823, i32* @eax, align 4
  br label %dec_label_pc_1e825

dec_label_pc_1e825:                               ; preds = %bb, %dec_label_pc_1e805
  %v0_1e825 = call i32 @function_1e83e()
  ret i32 %v0_1e825
}

define i32 @function_1e828() local_unnamed_addr {
dec_label_pc_1e828:
  %eax.global-to-local = alloca i32, align 4
  %v0_1e828 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1e828
}

define i32 @function_1e83e() local_unnamed_addr {
dec_label_pc_1e83e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e843() local_unnamed_addr {
dec_label_pc_1e843:
  %v0_1e848 = load i32, i32* @eax, align 4
  ret i32 %v0_1e848
}

define i32 @_ZNK5boost11unique_lockINS_12shared_mutexEE9owns_lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e84a:
  %v1_1e864 = add i32 %arg1, 4
  %v2_1e864 = inttoptr i32 %v1_1e864 to i8*
  %v3_1e864 = load i8, i8* %v2_1e864, align 1
  %v4_1e864 = zext i8 %v3_1e864 to i32
  store i32 %v4_1e864, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e874

bb:                                               ; preds = %dec_label_pc_1e84a
  %v2_1e872 = call i32 @function_1e879(i32 %arg1)
  br label %dec_label_pc_1e874

dec_label_pc_1e874:                               ; preds = %bb, %dec_label_pc_1e84a
  %v3_1e872 = phi i32 [ %v2_1e872, %bb ], [ %v4_1e864, %dec_label_pc_1e84a ]
  ret i32 %v3_1e872
}

define i32 @function_1e879(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e879:
  %v0_1e87a = load i32, i32* @eax, align 4
  ret i32 %v0_1e87a
}

define i32 @_ZNKSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e87c:
  %v1_1e896 = add i32 %arg1, 20
  %v2_1e896 = inttoptr i32 %v1_1e896 to i32*
  %v3_1e896 = load i32, i32* %v2_1e896, align 4
  store i32 %v3_1e896, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e8a5

bb:                                               ; preds = %dec_label_pc_1e87c
  %v2_1e8a3 = call i32 @function_1e8aa(i32 %arg1)
  br label %dec_label_pc_1e8a5

dec_label_pc_1e8a5:                               ; preds = %bb, %dec_label_pc_1e87c
  %v3_1e8a3 = phi i32 [ %v2_1e8a3, %bb ], [ %v3_1e896, %dec_label_pc_1e87c ]
  ret i32 %v3_1e8a3
}

define i32 @function_1e8aa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e8aa:
  %v0_1e8ab = load i32, i32* @eax, align 4
  ret i32 %v0_1e8ab
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE11lower_boundERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e8ac:
  %v1_1e8d6 = call i32 @unknown_43d7a(i32 %arg2)
  %v1_1e8e3 = call i32 @unknown_3d5e0(i32 %arg2)
  %v5_1e904 = call i32 @unknown_43daa(i32 %arg1, i32 %arg2, i32 %v1_1e8e3, i32 %v1_1e8d6, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e91b

bb:                                               ; preds = %dec_label_pc_1e8ac
  %v1_1e919 = call i32 @function_1e920()
  br label %dec_label_pc_1e91b

dec_label_pc_1e91b:                               ; preds = %bb, %dec_label_pc_1e8ac
  %v2_1e919 = phi i32 [ %v1_1e919, %bb ], [ %arg1, %dec_label_pc_1e8ac ]
  ret i32 %v2_1e919

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e920() local_unnamed_addr {
dec_label_pc_1e920:
  %v0_1e924 = load i32, i32* @eax, align 4
  ret i32 %v0_1e924
}

define i32 @_ZNKSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e928:
  %v1_1e948 = add i32 %arg2, 12
  %v2_1e948 = inttoptr i32 %v1_1e948 to i32*
  %v3_1e948 = load i32, i32* %v2_1e948, align 4
  %v2_1e955 = call i32 @unknown_43ff0(i32 %arg1, i32 %v3_1e948)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e969

bb:                                               ; preds = %dec_label_pc_1e928
  %v1_1e967 = call i32 @function_1e96e()
  br label %dec_label_pc_1e969

dec_label_pc_1e969:                               ; preds = %bb, %dec_label_pc_1e928
  %v2_1e967 = phi i32 [ %v1_1e967, %bb ], [ %arg1, %dec_label_pc_1e928 ]
  ret i32 %v2_1e967

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1e96e() local_unnamed_addr {
dec_label_pc_1e96e:
  %v0_1e96f = load i32, i32* @eax, align 4
  ret i32 %v0_1e96f
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5eraseERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1e972:
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-28 = alloca i32, align 4
  %v2_1e98f = ptrtoint i32* %stack_var_-28 to i32
  %v3_1e9a3 = call i32 @unknown_44072(i32 %v2_1e98f, i32 %arg1, i32 %arg2)
  %v1_1e9b1 = call i32 @unknown_3d1ee(i32 %arg1)
  %v3_1e9c0 = load i32, i32* %stack_var_-28, align 4
  %v3_1e9cd = call i32 @unknown_44232(i32 %arg1, i32 %v3_1e9c0, i32 %tmp97)
  %v1_1e9d8 = call i32 @unknown_3d1ee(i32 %arg1)
  %v2_1e9e2 = sub i32 %v1_1e9b1, %v1_1e9d8
  store i32 %v2_1e9e2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1e9f2

bb:                                               ; preds = %dec_label_pc_1e972
  %v1_1e9f0 = call i32 @function_1e9f7()
  br label %dec_label_pc_1e9f2

dec_label_pc_1e9f2:                               ; preds = %bb, %dec_label_pc_1e972
  %v2_1e9f0 = phi i32 [ %v1_1e9f0, %bb ], [ %v2_1e9e2, %dec_label_pc_1e972 ]
  ret i32 %v2_1e9f0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3d1ee, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1e9f7() local_unnamed_addr {
dec_label_pc_1e9f7:
  %v0_1e9f8 = load i32, i32* @eax, align 4
  ret i32 %v0_1e9f8
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE16_M_insert_uniqueERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1e9fa:
  %v1_1ea24 = call i32 @unknown_3d72e(i32 %arg2)
  %v1_1ea32 = call i32 @unknown_43ec8(i32 %arg2)
  ret i32 %v1_1ea32

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1ea52() local_unnamed_addr {
dec_label_pc_1ea52:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ea52 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ea52
}

define i32 @function_1ea62(i8* %arg1) local_unnamed_addr {
dec_label_pc_1ea62:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i8*, align 4
  store i8* %arg1, i8** %stack_var_0, align 4
  %v3_1ea62 = ptrtoint i8* %arg1 to i32
  store i32 %v3_1ea62, i32* %eax.global-to-local, align 4
  %v1_1ea63 = trunc i32 %v3_1ea62 to i8
  %v4_1ea63 = load i8, i8* %arg1, align 1
  %v5_1ea63 = add i8 %v4_1ea63, %v1_1ea63
  %v20_1ea63 = zext i8 %v5_1ea63 to i32
  %v22_1ea63 = and i32 %v3_1ea62, -256
  %v23_1ea63 = or i32 %v20_1ea63, %v22_1ea63
  store i32 %v23_1ea63, i32* %eax.global-to-local, align 4
  %v0_1ea65 = load i32, i32* @ebp, align 4
  %v1_1ea65 = add i32 %v0_1ea65, -64
  %v2_1ea65 = inttoptr i32 %v1_1ea65 to i32*
  %v3_1ea65 = load i32, i32* %v2_1ea65, align 4
  store i32 %v3_1ea65, i32* %edx.global-to-local, align 4
  %v0_1ea68 = load i32, i32* @ebx, align 4
  store i32 %v3_1ea65, i32* %stack_var_4, align 4
  %v3_1ea73 = call i32 @unknown_4403a(i32 %v3_1ea65, i32 %v23_1ea63, i32 %v0_1ea68)
  store i32 %v3_1ea73, i32* %eax.global-to-local, align 4
  %v1_1ea78 = trunc i32 %v3_1ea73 to i8
  %v2_1ea78 = load i32, i32* @ebp, align 4
  %v3_1ea78 = add i32 %v2_1ea78, -13
  %v4_1ea78 = inttoptr i32 %v3_1ea78 to i8*
  store i8 %v1_1ea78, i8* %v4_1ea78, align 1
  %v0_1ea7b = load i32, i32* @ebp, align 4
  %v1_1ea7b = add i32 %v0_1ea7b, -13
  %v2_1ea7b = inttoptr i32 %v1_1ea7b to i8*
  %v3_1ea7b = load i8, i8* %v2_1ea7b, align 1
  %v10_1ea7b = icmp eq i8 %v3_1ea7b, 0
  %v1_1ea8e = add i32 %v0_1ea7b, -28
  %v2_1ea8e = inttoptr i32 %v1_1ea8e to i32*
  %v3_1ea8e = load i32, i32* %v2_1ea8e, align 4
  store i32 %v3_1ea8e, i32* %eax.global-to-local, align 4
  store i32 %v3_1ea8e, i32* %stack_var_4, align 4
  br i1 %v10_1ea7b, label %dec_label_pc_1ea8e, label %dec_label_pc_1ea81

dec_label_pc_1ea81:                               ; preds = %dec_label_pc_1ea62
  %v1_1ea87 = call i32 @unknown_443d5(i32 %v3_1ea8e)
  br label %dec_label_pc_1ea99

dec_label_pc_1ea8e:                               ; preds = %dec_label_pc_1ea62
  %v1_1ea94 = call i32 @unknown_443a5(i32 %v3_1ea8e)
  br label %dec_label_pc_1ea99

dec_label_pc_1ea99:                               ; preds = %dec_label_pc_1ea8e, %dec_label_pc_1ea81
  %storemerge = phi i32 [ %v1_1ea94, %dec_label_pc_1ea8e ], [ %v1_1ea87, %dec_label_pc_1ea81 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_1ea99 = load i32, i32* @ebp, align 4
  %v2_1ea99 = add i32 %v1_1ea99, -28
  %v3_1ea99 = inttoptr i32 %v2_1ea99 to i32*
  store i32 %storemerge, i32* %v3_1ea99, align 4
  %v0_1ea9c = load i32, i32* @ebp, align 4
  %v1_1ea9c = add i32 %v0_1ea9c, -28
  %v2_1ea9c = inttoptr i32 %v1_1ea9c to i32*
  %v3_1ea9c = load i32, i32* %v2_1ea9c, align 4
  %v10_1ea9c = icmp eq i32 %v3_1ea9c, 0
  %v1_1eaa0 = icmp eq i1 %v10_1ea9c, false
  %v2_1eaa0 = zext i1 %v1_1eaa0 to i32
  %v3_1eaa0 = load i32, i32* %eax.global-to-local, align 4
  %v4_1eaa0 = and i32 %v3_1eaa0, -256
  %v5_1eaa0 = or i32 %v2_1eaa0, %v4_1eaa0
  store i32 %v5_1eaa0, i32* %eax.global-to-local, align 4
  %v1_1eaa7 = add i32 %v0_1ea9c, -24
  %v2_1eaa7 = inttoptr i32 %v1_1eaa7 to i32*
  %v3_1eaa7 = load i32, i32* %v2_1eaa7, align 4
  %v1_1eaae = add i32 %v0_1ea9c, -44
  store i32 %v1_1eaae, i32* %eax.global-to-local, align 4
  store i32 %v1_1eaae, i32* %stack_var_4, align 4
  %v2_1eab4 = call i32 @unknown_44406(i32 %v1_1eaae, i32 %v3_1eaa7)
  store i32 %v2_1eab4, i32* %eax.global-to-local, align 4
  %v0_1eab9 = load i32, i32* @ebp, align 4
  %v1_1eab9 = add i32 %v0_1eab9, -13
  %v2_1eab9 = inttoptr i32 %v1_1eab9 to i8*
  %v3_1eab9 = load i8, i8* %v2_1eab9, align 1
  %v10_1eab9 = icmp eq i8 %v3_1eab9, 0
  br i1 %v10_1eab9, label %dec_label_pc_1eb45, label %dec_label_pc_1eac3

dec_label_pc_1eac3:                               ; preds = %dec_label_pc_1ea99
  %v1_1eac3 = add i32 %v0_1eab9, -40
  store i32 %v1_1eac3, i32* %eax.global-to-local, align 4
  %v1_1eac6 = add i32 %v0_1eab9, -64
  %v2_1eac6 = inttoptr i32 %v1_1eac6 to i32*
  %v3_1eac6 = load i32, i32* %v2_1eac6, align 4
  store i32 %v3_1eac6, i32* %edx.global-to-local, align 4
  store i32 %v1_1eac3, i32* %stack_var_4, align 4
  %v2_1ead0 = call i32 @unknown_4443e(i32 %v1_1eac3, i32 %v3_1eac6)
  %v0_1ead8 = load i32, i32* @ebp, align 4
  %v1_1ead8 = add i32 %v0_1ead8, -40
  store i32 %v1_1ead8, i32* %stack_var_4, align 4
  %v1_1eadf = add i32 %v0_1ead8, -44
  store i32 %v1_1eadf, i32* %eax.global-to-local, align 4
  %v3_1eae2 = inttoptr i32 %v1_1eadf to i8*
  store i8* %v3_1eae2, i8** %stack_var_0, align 4
  %v3_1eae5 = call i32 @unknown_44082(i32 %v1_1eadf, i32 %v1_1ead8)
  store i32 %v3_1eae5, i32* %eax.global-to-local, align 4
  %v4_1eaea = trunc i32 %v3_1eae5 to i8
  %v5_1eaea = icmp eq i8 %v4_1eaea, 0
  %v0_1eb3a = load i32, i32* @ebp, align 4
  br i1 %v5_1eaea, label %dec_label_pc_1eb3a, label %dec_label_pc_1eaee

dec_label_pc_1eaee:                               ; preds = %dec_label_pc_1eac3
  %v1_1eaee = add i32 %v0_1eb3a, -17
  %v2_1eaee = inttoptr i32 %v1_1eaee to i8*
  store i8 1, i8* %v2_1eaee, align 1
  %v0_1eaf2 = load i32, i32* @ebp, align 4
  %v1_1eaf2 = add i32 %v0_1eaf2, -36
  store i32 %v1_1eaf2, i32* %eax.global-to-local, align 4
  %v1_1eaf5 = add i32 %v0_1eaf2, -68
  %v2_1eaf5 = inttoptr i32 %v1_1eaf5 to i32*
  %v3_1eaf5 = load i32, i32* %v2_1eaf5, align 4
  store i32 %v3_1eaf5, i32* %edx.global-to-local, align 4
  %v1_1eafc = add i32 %v0_1eaf2, -24
  %v2_1eafc = inttoptr i32 %v1_1eafc to i32*
  %v3_1eafc = load i32, i32* %v2_1eafc, align 4
  store i32 %v3_1eafc, i32* %edx.global-to-local, align 4
  %v1_1eb03 = add i32 %v0_1eaf2, -28
  %v2_1eb03 = inttoptr i32 %v1_1eb03 to i32*
  %v3_1eb03 = load i32, i32* %v2_1eb03, align 4
  store i32 %v3_1eb03, i32* %edx.global-to-local, align 4
  %v1_1eb0a = add i32 %v0_1eaf2, -64
  %v2_1eb0a = inttoptr i32 %v1_1eb0a to i32*
  %v3_1eb0a = load i32, i32* %v2_1eb0a, align 4
  store i32 %v3_1eb0a, i32* %edx.global-to-local, align 4
  store i32 %v3_1eb0a, i32* %stack_var_4, align 4
  %v3_1eb11 = inttoptr i32 %v1_1eaf2 to i8*
  store i8* %v3_1eb11, i8** %stack_var_0, align 4
  %v6_1eb14 = call i32 @unknown_44488(i32 %v1_1eaf2, i32 %v3_1eb0a, i32 %v3_1eb03, i32 %v3_1eafc, i32 %v3_1eaf5)
  %v0_1eb1c = load i32, i32* @ebp, align 4
  %v1_1eb1c = add i32 %v0_1eb1c, -17
  store i32 %v1_1eb1c, i32* %stack_var_4, align 4
  %v1_1eb23 = add i32 %v0_1eb1c, -36
  store i32 %v1_1eb23, i32* %eax.global-to-local, align 4
  %v4_1eb26 = inttoptr i32 %v1_1eb23 to i8*
  store i8* %v4_1eb26, i8** %stack_var_0, align 4
  %v1_1eb2a = add i32 %v0_1eb1c, -60
  %v2_1eb2a = inttoptr i32 %v1_1eb2a to i32*
  %v3_1eb2a = load i32, i32* %v2_1eb2a, align 4
  store i32 %v3_1eb2a, i32* %eax.global-to-local, align 4
  %v4_1eb30 = call i32 @unknown_4458a(i32 %v3_1eb2a, i32 %v1_1eb23, i32 %v1_1eb1c)
  store i32 %v4_1eb30, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ebe3

dec_label_pc_1eb3a:                               ; preds = %dec_label_pc_1eac3
  %v1_1eb3a = add i32 %v0_1eb3a, -44
  store i32 %v1_1eb3a, i32* %eax.global-to-local, align 4
  %v3_1eb3d = inttoptr i32 %v1_1eb3a to i8*
  store i8* %v3_1eb3d, i8** %stack_var_0, align 4
  %v2_1eb40 = call i32 @unknown_445d6(i32 %v1_1eb3a)
  store i32 %v2_1eb40, i32* %eax.global-to-local, align 4
  %v0_1eb45.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1eb45

dec_label_pc_1eb45:                               ; preds = %dec_label_pc_1eb3a, %dec_label_pc_1ea99
  %v0_1eb45 = phi i32 [ %v0_1eab9, %dec_label_pc_1ea99 ], [ %v0_1eb45.pre, %dec_label_pc_1eb3a ]
  %stack_var_8.0 = phi i32 [ %v3_1eaa7, %dec_label_pc_1ea99 ], [ %v3_1eac6, %dec_label_pc_1eb3a ]
  %v1_1eb45 = add i32 %v0_1eb45, -68
  %v2_1eb45 = inttoptr i32 %v1_1eb45 to i32*
  %v3_1eb45 = load i32, i32* %v2_1eb45, align 4
  %v1_1eb48 = load i32, i32* @esp, align 4
  %v2_1eb48 = add i32 %v1_1eb48, 4
  %v3_1eb48 = inttoptr i32 %v2_1eb48 to i32*
  store i32 %v3_1eb45, i32* %v3_1eb48, align 4
  %v0_1eb4c = load i32, i32* @ebp, align 4
  %v1_1eb4c = add i32 %v0_1eb4c, -16
  store i32 %v1_1eb4c, i32* %eax.global-to-local, align 4
  %v1_1eb4f = load i32, i32* @esp, align 4
  %v2_1eb4f = inttoptr i32 %v1_1eb4f to i32*
  store i32 %v1_1eb4c, i32* %v2_1eb4f, align 4
  %v0_1eb52 = call i32 @unknown_4432e()
  store i32 %v0_1eb52, i32* %eax.global-to-local, align 4
  store i32 %v0_1eb52, i32* %ebx.global-to-local, align 4
  %v0_1eb59 = load i32, i32* @ebp, align 4
  %v1_1eb59 = add i32 %v0_1eb59, -44
  %v2_1eb59 = inttoptr i32 %v1_1eb59 to i32*
  %v3_1eb59 = load i32, i32* %v2_1eb59, align 4
  store i32 %v3_1eb59, i32* %eax.global-to-local, align 4
  %v1_1eb5c = load i32, i32* @esp, align 4
  %v2_1eb5c = inttoptr i32 %v1_1eb5c to i32*
  store i32 %v3_1eb59, i32* %v2_1eb5c, align 4
  %v0_1eb5f = call i32 @unknown_43ff6()
  store i32 %v0_1eb5f, i32* %eax.global-to-local, align 4
  store i32 %v0_1eb5f, i32* %edx.global-to-local, align 4
  %v0_1eb66 = load i32, i32* @ebp, align 4
  %v1_1eb66 = add i32 %v0_1eb66, -64
  %v2_1eb66 = inttoptr i32 %v1_1eb66 to i32*
  %v3_1eb66 = load i32, i32* %v2_1eb66, align 4
  store i32 %v3_1eb66, i32* %eax.global-to-local, align 4
  %v0_1eb69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1eb69 = load i32, i32* @esp, align 4
  %v2_1eb69 = add i32 %v1_1eb69, 8
  %v3_1eb69 = inttoptr i32 %v2_1eb69 to i32*
  store i32 %v0_1eb69, i32* %v3_1eb69, align 4
  %v0_1eb6d = load i32, i32* %edx.global-to-local, align 4
  %v1_1eb6d = load i32, i32* @esp, align 4
  %v2_1eb6d = add i32 %v1_1eb6d, 4
  %v3_1eb6d = inttoptr i32 %v2_1eb6d to i32*
  store i32 %v0_1eb6d, i32* %v3_1eb6d, align 4
  %v0_1eb71 = load i32, i32* %eax.global-to-local, align 4
  %v1_1eb71 = load i32, i32* @esp, align 4
  %v2_1eb71 = inttoptr i32 %v1_1eb71 to i32*
  store i32 %v0_1eb71, i32* %v2_1eb71, align 4
  %v0_1eb74 = load i8*, i8** %stack_var_0, align 4
  %v1_1eb74 = ptrtoint i8* %v0_1eb74 to i32
  %v2_1eb74 = load i32, i32* %stack_var_4, align 4
  %v4_1eb74 = call i32 @unknown_4403a(i32 %v1_1eb74, i32 %v2_1eb74, i32 %stack_var_8.0)
  store i32 %v4_1eb74, i32* %eax.global-to-local, align 4
  %v4_1eb79 = trunc i32 %v4_1eb74 to i8
  %v5_1eb79 = icmp eq i8 %v4_1eb79, 0
  %v0_1ebc6 = load i32, i32* @ebp, align 4
  br i1 %v5_1eb79, label %dec_label_pc_1ebc6, label %dec_label_pc_1eb7d

dec_label_pc_1eb7d:                               ; preds = %dec_label_pc_1eb45
  %v1_1eb7d = add i32 %v0_1ebc6, -15
  %v2_1eb7d = inttoptr i32 %v1_1eb7d to i8*
  store i8 1, i8* %v2_1eb7d, align 1
  %v0_1eb81 = load i32, i32* @ebp, align 4
  %v1_1eb81 = add i32 %v0_1eb81, -32
  store i32 %v1_1eb81, i32* %eax.global-to-local, align 4
  %v1_1eb84 = add i32 %v0_1eb81, -68
  %v2_1eb84 = inttoptr i32 %v1_1eb84 to i32*
  %v3_1eb84 = load i32, i32* %v2_1eb84, align 4
  store i32 %v3_1eb84, i32* %edx.global-to-local, align 4
  %v1_1eb87 = load i32, i32* @esp, align 4
  %v2_1eb87 = add i32 %v1_1eb87, 16
  %v3_1eb87 = inttoptr i32 %v2_1eb87 to i32*
  store i32 %v3_1eb84, i32* %v3_1eb87, align 4
  %v0_1eb8b = load i32, i32* @ebp, align 4
  %v1_1eb8b = add i32 %v0_1eb8b, -24
  %v2_1eb8b = inttoptr i32 %v1_1eb8b to i32*
  %v3_1eb8b = load i32, i32* %v2_1eb8b, align 4
  store i32 %v3_1eb8b, i32* %edx.global-to-local, align 4
  %v1_1eb8e = load i32, i32* @esp, align 4
  %v2_1eb8e = add i32 %v1_1eb8e, 12
  %v3_1eb8e = inttoptr i32 %v2_1eb8e to i32*
  store i32 %v3_1eb8b, i32* %v3_1eb8e, align 4
  %v0_1eb92 = load i32, i32* @ebp, align 4
  %v1_1eb92 = add i32 %v0_1eb92, -28
  %v2_1eb92 = inttoptr i32 %v1_1eb92 to i32*
  %v3_1eb92 = load i32, i32* %v2_1eb92, align 4
  store i32 %v3_1eb92, i32* %edx.global-to-local, align 4
  %v1_1eb95 = load i32, i32* @esp, align 4
  %v2_1eb95 = add i32 %v1_1eb95, 8
  %v3_1eb95 = inttoptr i32 %v2_1eb95 to i32*
  store i32 %v3_1eb92, i32* %v3_1eb95, align 4
  %v0_1eb99 = load i32, i32* @ebp, align 4
  %v1_1eb99 = add i32 %v0_1eb99, -64
  %v2_1eb99 = inttoptr i32 %v1_1eb99 to i32*
  %v3_1eb99 = load i32, i32* %v2_1eb99, align 4
  store i32 %v3_1eb99, i32* %edx.global-to-local, align 4
  %v1_1eb9c = load i32, i32* @esp, align 4
  %v2_1eb9c = add i32 %v1_1eb9c, 4
  %v3_1eb9c = inttoptr i32 %v2_1eb9c to i32*
  store i32 %v3_1eb99, i32* %v3_1eb9c, align 4
  %v0_1eba0 = load i32, i32* %eax.global-to-local, align 4
  %v1_1eba0 = load i32, i32* @esp, align 4
  %v2_1eba0 = inttoptr i32 %v1_1eba0 to i32*
  store i32 %v0_1eba0, i32* %v2_1eba0, align 4
  %v0_1eba3 = load i8*, i8** %stack_var_0, align 4
  %v1_1eba3 = ptrtoint i8* %v0_1eba3 to i32
  %v2_1eba3 = load i32, i32* %stack_var_4, align 4
  %v6_1eba3 = call i32 @unknown_44488(i32 %v1_1eba3, i32 %v2_1eba3, i32 %stack_var_8.0, i32 %v0_1ea68, i32 %tmp6)
  %v0_1eba8 = load i32, i32* @esp, align 4
  %v0_1ebab = load i32, i32* @ebp, align 4
  %v1_1ebab = add i32 %v0_1ebab, -15
  %v2_1ebae = add i32 %v0_1eba8, 4
  %v3_1ebae = inttoptr i32 %v2_1ebae to i32*
  store i32 %v1_1ebab, i32* %v3_1ebae, align 4
  %v0_1ebb2 = load i32, i32* @ebp, align 4
  %v1_1ebb2 = add i32 %v0_1ebb2, -32
  store i32 %v1_1ebb2, i32* %eax.global-to-local, align 4
  %v1_1ebb5 = load i32, i32* @esp, align 4
  %v2_1ebb5 = add i32 %v1_1ebb5, 4
  %v3_1ebb5 = inttoptr i32 %v2_1ebb5 to i32*
  store i32 %v1_1ebb2, i32* %v3_1ebb5, align 4
  %v0_1ebb9 = load i32, i32* @ebp, align 4
  %v1_1ebb9 = add i32 %v0_1ebb9, -60
  %v2_1ebb9 = inttoptr i32 %v1_1ebb9 to i32*
  %v3_1ebb9 = load i32, i32* %v2_1ebb9, align 4
  store i32 %v3_1ebb9, i32* %eax.global-to-local, align 4
  %v1_1ebbc = load i32, i32* @esp, align 4
  %v2_1ebbc = inttoptr i32 %v1_1ebbc to i32*
  store i32 %v3_1ebb9, i32* %v2_1ebbc, align 4
  %v0_1ebbf = load i8*, i8** %stack_var_0, align 4
  %v1_1ebbf = ptrtoint i8* %v0_1ebbf to i32
  %v2_1ebbf = load i32, i32* %stack_var_4, align 4
  %v4_1ebbf = call i32 @unknown_4458a(i32 %v1_1ebbf, i32 %v2_1ebbf, i32 %stack_var_8.0)
  store i32 %v4_1ebbf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ebe3

dec_label_pc_1ebc6:                               ; preds = %dec_label_pc_1eb45
  %v1_1ebc6 = add i32 %v0_1ebc6, -14
  %v2_1ebc6 = inttoptr i32 %v1_1ebc6 to i8*
  store i8 0, i8* %v2_1ebc6, align 1
  %v0_1ebca = load i32, i32* @ebp, align 4
  %v1_1ebca = add i32 %v0_1ebca, -14
  %v1_1ebcd = load i32, i32* @esp, align 4
  %v2_1ebcd = add i32 %v1_1ebcd, 8
  %v3_1ebcd = inttoptr i32 %v2_1ebcd to i32*
  store i32 %v1_1ebca, i32* %v3_1ebcd, align 4
  %v0_1ebd1 = load i32, i32* @ebp, align 4
  %v1_1ebd1 = add i32 %v0_1ebd1, -44
  store i32 %v1_1ebd1, i32* %eax.global-to-local, align 4
  %v1_1ebd4 = load i32, i32* @esp, align 4
  %v2_1ebd4 = add i32 %v1_1ebd4, 4
  %v3_1ebd4 = inttoptr i32 %v2_1ebd4 to i32*
  store i32 %v1_1ebd1, i32* %v3_1ebd4, align 4
  %v0_1ebd8 = load i32, i32* @ebp, align 4
  %v1_1ebd8 = add i32 %v0_1ebd8, -60
  %v2_1ebd8 = inttoptr i32 %v1_1ebd8 to i32*
  %v3_1ebd8 = load i32, i32* %v2_1ebd8, align 4
  store i32 %v3_1ebd8, i32* %eax.global-to-local, align 4
  %v1_1ebdb = load i32, i32* @esp, align 4
  %v2_1ebdb = inttoptr i32 %v1_1ebdb to i32*
  store i32 %v3_1ebd8, i32* %v2_1ebdb, align 4
  %v0_1ebde = load i8*, i8** %stack_var_0, align 4
  %v1_1ebde = ptrtoint i8* %v0_1ebde to i32
  %v2_1ebde = load i32, i32* %stack_var_4, align 4
  %v4_1ebde = call i32 @unknown_4458a(i32 %v1_1ebde, i32 %v2_1ebde, i32 %stack_var_8.0)
  store i32 %v4_1ebde, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ebe3

dec_label_pc_1ebe3:                               ; preds = %dec_label_pc_1ebc6, %dec_label_pc_1eb7d, %dec_label_pc_1eaee
  %v0_1ebe3 = load i32, i32* @ebp, align 4
  %v1_1ebe3 = add i32 %v0_1ebe3, -60
  %v2_1ebe3 = inttoptr i32 %v1_1ebe3 to i32*
  %v3_1ebe3 = load i32, i32* %v2_1ebe3, align 4
  store i32 %v3_1ebe3, i32* @eax, align 4
  %v1_1ebe6 = add i32 %v0_1ebe3, -12
  %v2_1ebe6 = inttoptr i32 %v1_1ebe6 to i32*
  %v3_1ebe6 = load i32, i32* %v2_1ebe6, align 4
  store i32 %v3_1ebe6, i32* %edx.global-to-local, align 4
  %v1_1ebe9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1ebe9 = xor i32 %v1_1ebe9, %v3_1ebe6
  %v3_1ebe9 = icmp eq i32 %v2_1ebe9, 0
  store i32 %v2_1ebe9, i32* %edx.global-to-local, align 4
  br i1 %v3_1ebe9, label %bb, label %dec_label_pc_1ebf2

bb:                                               ; preds = %dec_label_pc_1ebe3
  %v1_1ebf0 = call i32 @function_1ebf7()
  store i32 %v1_1ebf0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1ebf2

dec_label_pc_1ebf2:                               ; preds = %bb, %dec_label_pc_1ebe3
  %v2_1ebf0 = phi i32 [ %v1_1ebf0, %bb ], [ %v3_1ebe3, %dec_label_pc_1ebe3 ]
  ret i32 %v2_1ebf0

; uselistorder directives
  uselistorder i32 %v0_1ebc6, { 1, 0 }
  uselistorder i32 %stack_var_8.0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1eaf2, { 1, 0, 2 }
  uselistorder i32 %v0_1eaf2, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1eb3a, { 1, 0 }
  uselistorder i32 %v0_1eab9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1ea9c, { 1, 0, 2 }
  uselistorder i32 %v3_1ea8e, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_0, { 8, 7, 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7, 8, 30, 31, 32, 33 }
  uselistorder i32 (i32, i32, i32)* @unknown_4458a, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_44488, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4403a, { 1, 0 }
}

define i32 @function_1ebf7() local_unnamed_addr {
dec_label_pc_1ebf7:
  %v0_1ebfb = load i32, i32* @eax, align 4
  ret i32 %v0_1ebfb
}

define i32 @_ZNSt4pairISt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEEbEC1ERKSB_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ebfe:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_1ec27 = inttoptr i32 %arg2 to i32*
  %v2_1ec27 = load i32, i32* %v1_1ec27, align 4
  store i32 %v2_1ec27, i32* %arg1, align 4
  %v2_1ec2e = load i8, i8* %tmp104, align 1
  %v3_1ec34 = add i32 %tmp109, 4
  %v4_1ec34 = inttoptr i32 %v3_1ec34 to i8*
  store i8 %v2_1ec2e, i8* %v4_1ec34, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ec43

bb:                                               ; preds = %dec_label_pc_1ebfe
  %v5_1ec41 = call i32 @function_1ec48(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_1ec43

dec_label_pc_1ec43:                               ; preds = %bb, %dec_label_pc_1ebfe
  %v6_1ec41 = phi i32 [ %v5_1ec41, %bb ], [ 0, %dec_label_pc_1ebfe ]
  ret i32 %v6_1ec41
}

define i32 @function_1ec48(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ec48:
  %v0_1ec49 = load i32, i32* @eax, align 4
  ret i32 %v0_1ec49
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec4a:
  %v1_1ec67 = call i32 @unknown_44866(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ec78

bb:                                               ; preds = %dec_label_pc_1ec4a
  %v1_1ec76 = call i32 @function_1ec7d()
  br label %dec_label_pc_1ec78

dec_label_pc_1ec78:                               ; preds = %bb, %dec_label_pc_1ec4a
  %v2_1ec76 = phi i32 [ %v1_1ec76, %bb ], [ 0, %dec_label_pc_1ec4a ]
  ret i32 %v2_1ec76
}

define i32 @function_1ec7d() local_unnamed_addr {
dec_label_pc_1ec7d:
  %v0_1ec7e = load i32, i32* @eax, align 4
  ret i32 %v0_1ec7e
}

define i32 @_ZNSaISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ec80:
  %v1_1ec9d = call i32 @unknown_4490e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ecae

bb:                                               ; preds = %dec_label_pc_1ec80
  %v1_1ecac = call i32 @function_1ecb3()
  br label %dec_label_pc_1ecae

dec_label_pc_1ecae:                               ; preds = %bb, %dec_label_pc_1ec80
  %v2_1ecac = phi i32 [ %v1_1ecac, %bb ], [ 0, %dec_label_pc_1ec80 ]
  ret i32 %v2_1ecac
}

define i32 @function_1ecb3() local_unnamed_addr {
dec_label_pc_1ecb3:
  %v0_1ecb4 = load i32, i32* @eax, align 4
  ret i32 %v0_1ecb4
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE8_M_eraseEPSt13_Rb_tree_nodeIS9_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ecb6:
  %v10_1ed15106 = icmp eq i32 %arg2, 0
  %v1_1ed19107 = icmp eq i1 %v10_1ed15106, false
  %v5_1ed1c109 = icmp eq i1 %v1_1ed19107, false
  %v1_1ed1e110 = icmp eq i1 %v5_1ed1c109, false
  br i1 %v1_1ed1e110, label %dec_label_pc_1ecd5, label %dec_label_pc_1ed20

dec_label_pc_1ecd5:                               ; preds = %dec_label_pc_1ecb6, %dec_label_pc_1ecd5
  %stack_var_-36.0111 = phi i32 [ %v1_1ecf5, %dec_label_pc_1ecd5 ], [ %arg2, %dec_label_pc_1ecb6 ]
  %v1_1ecdb = call i32 @unknown_44661(i32 %stack_var_-36.0111)
  %v2_1ecea = call i32 @unknown_3d96c(i32 %arg1, i32 %v1_1ecdb)
  %v1_1ecf5 = call i32 @unknown_44691(i32 %stack_var_-36.0111)
  %v2_1ed0a = call i32 @unknown_4496e(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_1ed15 = icmp eq i32 %v1_1ecf5, 0
  %v1_1ed19 = icmp eq i1 %v10_1ed15, false
  %v5_1ed1c = icmp eq i1 %v1_1ed19, false
  %v1_1ed1e = icmp eq i1 %v5_1ed1c, false
  br i1 %v1_1ed1e, label %dec_label_pc_1ecd5, label %dec_label_pc_1ed20

dec_label_pc_1ed20:                               ; preds = %dec_label_pc_1ecd5, %dec_label_pc_1ecb6
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ed2c

bb:                                               ; preds = %dec_label_pc_1ed20
  %v1_1ed2a = call i32 @function_1ed31()
  br label %dec_label_pc_1ed2c

dec_label_pc_1ed2c:                               ; preds = %bb, %dec_label_pc_1ed20
  %v2_1ed2a = phi i32 [ %v1_1ed2a, %bb ], [ 0, %dec_label_pc_1ed20 ]
  ret i32 %v2_1ed2a

; uselistorder directives
  uselistorder i32 %v1_1ecf5, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ecd5, { 1, 0 }
}

define i32 @function_1ed31() local_unnamed_addr {
dec_label_pc_1ed31:
  %v0_1ed32 = load i32, i32* @eax, align 4
  ret i32 %v0_1ed32
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed34:
  %v1_1ed4e = add i32 %arg1, 8
  %v2_1ed4e = inttoptr i32 %v1_1ed4e to i32*
  %v3_1ed4e = load i32, i32* %v2_1ed4e, align 4
  store i32 %v3_1ed4e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ed5d

bb:                                               ; preds = %dec_label_pc_1ed34
  %v2_1ed5b = call i32 @function_1ed62(i32 %arg1)
  br label %dec_label_pc_1ed5d

dec_label_pc_1ed5d:                               ; preds = %bb, %dec_label_pc_1ed34
  %v3_1ed5b = phi i32 [ %v2_1ed5b, %bb ], [ %v3_1ed4e, %dec_label_pc_1ed34 ]
  ret i32 %v3_1ed5b
}

define i32 @function_1ed62(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ed62:
  %v0_1ed63 = load i32, i32* @eax, align 4
  ret i32 %v0_1ed63
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmiERKi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ed64:
  %stack_var_-20 = alloca i32, align 4
  %v2_1ed8a = load i32, i32* %arg2, align 4
  %v1_1ed8f = inttoptr i32 %arg3 to i32*
  %v2_1ed8f = load i32, i32* %v1_1ed8f, align 4
  %v2_1ed93 = sub i32 %v2_1ed8a, %v2_1ed8f
  store i32 %v2_1ed93, i32* %stack_var_-20, align 4
  %v2_1ed98 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1eda5 = call i32 @unknown_3ae6c(i32 %arg1, i32 %v2_1ed98)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1edb9

bb:                                               ; preds = %dec_label_pc_1ed64
  %v1_1edb7 = call i32 @function_1edbe()
  br label %dec_label_pc_1edb9

dec_label_pc_1edb9:                               ; preds = %bb, %dec_label_pc_1ed64
  %v2_1edb7 = phi i32 [ %v1_1edb7, %bb ], [ %arg1, %dec_label_pc_1ed64 ]
  ret i32 %v2_1edb7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1edbe() local_unnamed_addr {
dec_label_pc_1edbe:
  %v0_1edbf = load i32, i32* @eax, align 4
  ret i32 %v0_1edbf
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE7destroyEPh(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1edc2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1edeb

bb:                                               ; preds = %dec_label_pc_1edc2
  %v3_1ede9 = call i32 @function_1edf0(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_1edeb

dec_label_pc_1edeb:                               ; preds = %bb, %dec_label_pc_1edc2
  %v4_1ede9 = phi i32 [ %v3_1ede9, %bb ], [ 0, %dec_label_pc_1edc2 ]
  ret i32 %v4_1ede9
}

define i32 @function_1edf0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1edf0:
  %v0_1edf1 = load i32, i32* @eax, align 4
  ret i32 %v0_1edf1
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1edf2:
  %v1_1ee0f = call i32 @unknown_44b48(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ee20

bb:                                               ; preds = %dec_label_pc_1edf2
  %v1_1ee1e = call i32 @function_1ee25()
  br label %dec_label_pc_1ee20

dec_label_pc_1ee20:                               ; preds = %bb, %dec_label_pc_1edf2
  %v2_1ee1e = phi i32 [ %v1_1ee1e, %bb ], [ 0, %dec_label_pc_1edf2 ]
  ret i32 %v2_1ee1e
}

define i32 @function_1ee25() local_unnamed_addr {
dec_label_pc_1ee25:
  %v0_1ee26 = load i32, i32* @eax, align 4
  ret i32 %v0_1ee26
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ee28:
  %v1_1ee45 = call i32 @unknown_44bf0(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ee56

bb:                                               ; preds = %dec_label_pc_1ee28
  %v1_1ee54 = call i32 @function_1ee5b()
  br label %dec_label_pc_1ee56

dec_label_pc_1ee56:                               ; preds = %bb, %dec_label_pc_1ee28
  %v2_1ee54 = phi i32 [ %v1_1ee54, %bb ], [ 0, %dec_label_pc_1ee28 ]
  ret i32 %v2_1ee54
}

define i32 @function_1ee5b() local_unnamed_addr {
dec_label_pc_1ee5b:
  %v0_1ee5c = load i32, i32* @eax, align 4
  ret i32 %v0_1ee5c
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ee5e:
  %v10_1eebd106 = icmp eq i32 %arg2, 0
  %v1_1eec1107 = icmp eq i1 %v10_1eebd106, false
  %v5_1eec4109 = icmp eq i1 %v1_1eec1107, false
  %v1_1eec6110 = icmp eq i1 %v5_1eec4109, false
  br i1 %v1_1eec6110, label %dec_label_pc_1ee7d, label %dec_label_pc_1eec8

dec_label_pc_1ee7d:                               ; preds = %dec_label_pc_1ee5e, %dec_label_pc_1ee7d
  %stack_var_-36.0111 = phi i32 [ %v1_1ee9d, %dec_label_pc_1ee7d ], [ %arg2, %dec_label_pc_1ee5e ]
  %v1_1ee83 = call i32 @unknown_44c50(i32 %stack_var_-36.0111)
  %v2_1ee92 = call i32 @unknown_3dcbc(i32 %arg1, i32 %v1_1ee83)
  %v1_1ee9d = call i32 @unknown_44c80(i32 %stack_var_-36.0111)
  %v2_1eeb2 = call i32 @unknown_44cb0(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_1eebd = icmp eq i32 %v1_1ee9d, 0
  %v1_1eec1 = icmp eq i1 %v10_1eebd, false
  %v5_1eec4 = icmp eq i1 %v1_1eec1, false
  %v1_1eec6 = icmp eq i1 %v5_1eec4, false
  br i1 %v1_1eec6, label %dec_label_pc_1ee7d, label %dec_label_pc_1eec8

dec_label_pc_1eec8:                               ; preds = %dec_label_pc_1ee7d, %dec_label_pc_1ee5e
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1eed4

bb:                                               ; preds = %dec_label_pc_1eec8
  %v1_1eed2 = call i32 @function_1eed9()
  br label %dec_label_pc_1eed4

dec_label_pc_1eed4:                               ; preds = %bb, %dec_label_pc_1eec8
  %v2_1eed2 = phi i32 [ %v1_1eed2, %bb ], [ 0, %dec_label_pc_1eec8 ]
  ret i32 %v2_1eed2

; uselistorder directives
  uselistorder i32 %v1_1ee9d, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1ee7d, { 1, 0 }
}

define i32 @function_1eed9() local_unnamed_addr {
dec_label_pc_1eed9:
  %v0_1eeda = load i32, i32* @eax, align 4
  ret i32 %v0_1eeda
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1eedc:
  %v1_1eef6 = add i32 %arg1, 8
  %v2_1eef6 = inttoptr i32 %v1_1eef6 to i32*
  %v3_1eef6 = load i32, i32* %v2_1eef6, align 4
  ret i32 %v3_1eef6
}

define i32 @function_1ef04(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef04:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ef09() local_unnamed_addr {
dec_label_pc_1ef09:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ef09 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ef09 = add i32 %v0_1ef09, -1
  store i32 %v1_1ef09, i32* %ecx.global-to-local, align 4
  %v0_1ef0b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ef0b
}

define i32 @_ZNKSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE5emptyEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef0c:
  %v1_1ef26 = add i32 %arg1, 20
  %v2_1ef26 = inttoptr i32 %v1_1ef26 to i32*
  %v3_1ef26 = load i32, i32* %v2_1ef26, align 4
  %v1_1ef29 = icmp eq i32 %v3_1ef26, 0
  %v1_1ef2b = zext i1 %v1_1ef29 to i32
  %v3_1ef2b = and i32 %v3_1ef26, -256
  %v4_1ef2b = or i32 %v1_1ef2b, %v3_1ef2b
  store i32 %v4_1ef2b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ef3a

bb:                                               ; preds = %dec_label_pc_1ef0c
  %v2_1ef38 = call i32 @function_1ef3f(i32 %arg1)
  br label %dec_label_pc_1ef3a

dec_label_pc_1ef3a:                               ; preds = %bb, %dec_label_pc_1ef0c
  %v3_1ef38 = phi i32 [ %v2_1ef38, %bb ], [ %v4_1ef2b, %dec_label_pc_1ef0c ]
  ret i32 %v3_1ef38
}

define i32 @function_1ef3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ef3f:
  %v0_1ef40 = load i32, i32* @eax, align 4
  ret i32 %v0_1ef40
}

define i32 @_ZNSt4pairI10txnouttype7CScriptEC1ERKS0_RKS1_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ef42:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_1ef68 = inttoptr i32 %arg2 to i32*
  %v2_1ef68 = load i32, i32* %v1_1ef68, align 4
  store i32 %v2_1ef68, i32* %arg1, align 4
  %v1_1ef72 = add i32 %tmp105, 4
  %v2_1ef7f = call i32 @function_315fa(i32 %v1_1ef72, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ef90

bb:                                               ; preds = %dec_label_pc_1ef42
  %v1_1ef8e = call i32 @function_1ef95()
  br label %dec_label_pc_1ef90

dec_label_pc_1ef90:                               ; preds = %bb, %dec_label_pc_1ef42
  %v2_1ef8e = phi i32 [ %v1_1ef8e, %bb ], [ 0, %dec_label_pc_1ef42 ]
  ret i32 %v2_1ef8e
}

define i32 @function_1ef95() local_unnamed_addr {
dec_label_pc_1ef95:
  %v0_1ef96 = load i32, i32* @eax, align 4
  ret i32 %v0_1ef96
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ef98:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-18 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-19 = alloca i8, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1efc2 = call i32 @unknown_3de74(i32 %arg2)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_1efd0 = call i32 @unknown_44e88(i32 %arg2)
  %v2_1eff8 = ptrtoint i32* %stack_var_-22 to i32
  %v10_1f03a129 = icmp eq i32 %v1_1efc2, 0
  %v1_1f03e130 = icmp eq i1 %v10_1f03a129, false
  %v2_1f03e131 = zext i1 %v1_1f03e130 to i32
  %v4_1f03e132 = and i32 %v1_1efd0, -256
  %v5_1f03e133 = or i32 %v2_1f03e131, %v4_1f03e132
  store i32 %v5_1f03e133, i32* %eax.global-to-local, align 4
  %v5_1f041134 = icmp eq i1 %v1_1f03e130, false
  %v1_1f043135 = icmp eq i1 %v5_1f041134, false
  br i1 %v1_1f043135, label %dec_label_pc_1efde, label %dec_label_pc_1f045

dec_label_pc_1efde:                               ; preds = %dec_label_pc_1ef98, %dec_label_pc_1f03a.backedge
  %stack_var_-32.0136 = phi i32 [ %storemerge3.be, %dec_label_pc_1f03a.backedge ], [ %v1_1efc2, %dec_label_pc_1ef98 ]
  store i32 %stack_var_-32.0136, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-32.0136, i32* %stack_var_-108, align 4
  %v1_1efea = call i32 @unknown_44eeb(i32 %stack_var_-32.0136)
  store i32 %v1_1efea, i32* %ebx.global-to-local, align 4
  store i32 %v2_1eff8, i32* %eax.global-to-local, align 4
  store i32 %v2_1eff8, i32* %stack_var_-108, align 4
  %v2_1effe = call i32 @unknown_44eb8(i32 %v2_1eff8, i32 %arg3)
  store i32 %v2_1effe, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v3_1f011 = call i32 @unknown_44f30(i32 %arg2, i32 %v2_1effe, i32 %v1_1efea)
  %v1_1f016 = trunc i32 %v3_1f011 to i8
  %v10_1f019 = icmp eq i8 %v1_1f016, 0
  store i32 %stack_var_-32.0136, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-32.0136, i32* %stack_var_-108, align 4
  br i1 %v10_1f019, label %dec_label_pc_1f02c, label %dec_label_pc_1f01f

dec_label_pc_1f01f:                               ; preds = %dec_label_pc_1efde
  %v1_1f025 = call i32 @unknown_44dba(i32 %stack_var_-32.0136)
  br label %dec_label_pc_1f03a.backedge

dec_label_pc_1f02c:                               ; preds = %dec_label_pc_1efde
  %v1_1f032 = call i32 @unknown_44d8a(i32 %stack_var_-32.0136)
  br label %dec_label_pc_1f03a.backedge

dec_label_pc_1f03a.backedge:                      ; preds = %dec_label_pc_1f02c, %dec_label_pc_1f01f
  %storemerge3.be = phi i32 [ %v1_1f032, %dec_label_pc_1f02c ], [ %v1_1f025, %dec_label_pc_1f01f ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_1f02c ], [ %v1_1f016, %dec_label_pc_1f01f ]
  %v10_1f03a = icmp eq i32 %storemerge3.be, 0
  %v1_1f03e = icmp eq i1 %v10_1f03a, false
  %v2_1f03e = zext i1 %v1_1f03e to i32
  %v4_1f03e = and i32 %storemerge3.be, -256
  %v5_1f03e = or i32 %v2_1f03e, %v4_1f03e
  store i32 %v5_1f03e, i32* %eax.global-to-local, align 4
  %v5_1f041 = icmp eq i1 %v1_1f03e, false
  %v1_1f043 = icmp eq i1 %v5_1f041, false
  br i1 %v1_1f043, label %dec_label_pc_1efde, label %dec_label_pc_1f045

dec_label_pc_1f045:                               ; preds = %dec_label_pc_1f03a.backedge, %dec_label_pc_1ef98
  %stack_var_-32.0.lcssa = phi i32 [ %v1_1efc2, %dec_label_pc_1ef98 ], [ %storemerge3.be, %dec_label_pc_1f03a.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_1efd0, %dec_label_pc_1ef98 ], [ %stack_var_-32.0136, %dec_label_pc_1f03a.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_1ef98 ], [ %stack_var_-17.0.be, %dec_label_pc_1f03a.backedge ]
  %v2_1f04c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1f04c, i32* %eax.global-to-local, align 4
  store i32 %v2_1f04c, i32* %stack_var_-108, align 4
  %v2_1f052 = call i32 @unknown_44f78(i32 %v2_1f04c, i32 %stack_var_-28.0.lcssa)
  store i32 %v2_1f052, i32* %eax.global-to-local, align 4
  %v10_1f057 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_1f057, label %dec_label_pc_1f0e3, label %dec_label_pc_1f061

dec_label_pc_1f061:                               ; preds = %dec_label_pc_1f045
  %v2_1f061 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1f061, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v2_1f061, i32* %stack_var_-108, align 4
  %v2_1f06e = call i32 @unknown_44fb0(i32 %v2_1f061, i32 %arg2)
  store i32 %v2_1f061, i32* %stack_var_-108, align 4
  store i32 %v2_1f04c, i32* %eax.global-to-local, align 4
  store i32 %v2_1f04c, i32* %stack_var_-112, align 4
  %v2_1f083 = call i32 @unknown_3e332(i32 %v2_1f04c, i32 %v2_1f061)
  store i32 %v2_1f083, i32* %eax.global-to-local, align 4
  %v4_1f088 = trunc i32 %v2_1f083 to i8
  %v5_1f088 = icmp eq i8 %v4_1f088, 0
  br i1 %v5_1f088, label %dec_label_pc_1f0d8, label %dec_label_pc_1f08c

dec_label_pc_1f08c:                               ; preds = %dec_label_pc_1f061
  store i8 1, i8* %stack_var_-21, align 1
  %v2_1f090 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1f090, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_1f090, i32* %stack_var_-112, align 4
  %v1_1f0b2 = call i32 @unknown_44ffa(i32 %v2_1f090)
  %v2_1f0ba = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_1f0ba, i32* %stack_var_-108, align 4
  store i32 %v2_1f090, i32* %stack_var_-112, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_1f0ce = call i32 @unknown_450fc(i32 %arg1)
  store i32 %v1_1f0ce, i32* %eax.global-to-local, align 4
  ret i32 %v1_1f0ce

dec_label_pc_1f0d8:                               ; preds = %dec_label_pc_1f061
  store i32 %v2_1f04c, i32* %eax.global-to-local, align 4
  store i32 %v2_1f04c, i32* %stack_var_-112, align 4
  %v1_1f0de = call i32 @unknown_45148(i32 %v2_1f04c)
  store i32 %v1_1f0de, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1f0e3

dec_label_pc_1f0e3:                               ; preds = %dec_label_pc_1f0d8, %dec_label_pc_1f045
  %stack_var_-104.0 = phi i32 [ %stack_var_-28.0.lcssa, %dec_label_pc_1f045 ], [ %arg2, %dec_label_pc_1f0d8 ]
  %v1_1f0e6 = load i32, i32* @esp, align 4
  %v2_1f0e6 = add i32 %v1_1f0e6, 4
  %v3_1f0e6 = inttoptr i32 %v2_1f0e6 to i32*
  store i32 %arg3, i32* %v3_1f0e6, align 4
  %v2_1f0ea = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_1f0ea, i32* %eax.global-to-local, align 4
  %v1_1f0ed = load i32, i32* @esp, align 4
  %v2_1f0ed = inttoptr i32 %v1_1f0ed to i32*
  store i32 %v2_1f0ea, i32* %v2_1f0ed, align 4
  %v0_1f0f0 = load i32, i32* %stack_var_-112, align 4
  %v1_1f0f0 = load i32, i32* %stack_var_-108, align 4
  %v2_1f0f0 = call i32 @unknown_44eb8(i32 %v0_1f0f0, i32 %v1_1f0f0)
  store i32 %v2_1f0f0, i32* %ebx.global-to-local, align 4
  %v3_1f0f7 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1f0f7, i32* %eax.global-to-local, align 4
  %v1_1f0fa = load i32, i32* @esp, align 4
  %v2_1f0fa = inttoptr i32 %v1_1f0fa to i32*
  store i32 %v3_1f0f7, i32* %v2_1f0fa, align 4
  %v0_1f0fd = call i32 @unknown_45187()
  store i32 %v0_1f0fd, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_1f107 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1f107 = load i32, i32* @esp, align 4
  %v2_1f107 = add i32 %v1_1f107, 8
  %v3_1f107 = inttoptr i32 %v2_1f107 to i32*
  store i32 %v0_1f107, i32* %v3_1f107, align 4
  %v0_1f10b = load i32, i32* %edx.global-to-local, align 4
  %v1_1f10b = load i32, i32* @esp, align 4
  %v2_1f10b = add i32 %v1_1f10b, 4
  %v3_1f10b = inttoptr i32 %v2_1f10b to i32*
  store i32 %v0_1f10b, i32* %v3_1f10b, align 4
  %v0_1f10f = load i32, i32* %eax.global-to-local, align 4
  %v1_1f10f = load i32, i32* @esp, align 4
  %v2_1f10f = inttoptr i32 %v1_1f10f to i32*
  store i32 %v0_1f10f, i32* %v2_1f10f, align 4
  %v0_1f112 = load i32, i32* %stack_var_-112, align 4
  %v1_1f112 = load i32, i32* %stack_var_-108, align 4
  %v3_1f112 = call i32 @unknown_44f30(i32 %v0_1f112, i32 %v1_1f112, i32 %stack_var_-104.0)
  store i32 %v3_1f112, i32* %eax.global-to-local, align 4
  %v4_1f117 = trunc i32 %v3_1f112 to i8
  %v5_1f117 = icmp eq i8 %v4_1f117, 0
  br i1 %v5_1f117, label %dec_label_pc_1f164, label %dec_label_pc_1f11b

dec_label_pc_1f11b:                               ; preds = %dec_label_pc_1f0e3
  store i8 1, i8* %stack_var_-19, align 1
  %v2_1f11f = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1f11f, i32* %eax.global-to-local, align 4
  %v1_1f125 = load i32, i32* @esp, align 4
  %v2_1f125 = add i32 %v1_1f125, 16
  %v3_1f125 = inttoptr i32 %v2_1f125 to i32*
  store i32 %arg3, i32* %v3_1f125, align 4
  %v1_1f12c = load i32, i32* @esp, align 4
  %v2_1f12c = add i32 %v1_1f12c, 12
  %v3_1f12c = inttoptr i32 %v2_1f12c to i32*
  store i32 %stack_var_-28.0.lcssa, i32* %v3_1f12c, align 4
  %v1_1f133 = load i32, i32* @esp, align 4
  %v2_1f133 = add i32 %v1_1f133, 8
  %v3_1f133 = inttoptr i32 %v2_1f133 to i32*
  store i32 %stack_var_-32.0.lcssa, i32* %v3_1f133, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_1f13a = load i32, i32* @esp, align 4
  %v2_1f13a = add i32 %v1_1f13a, 4
  %v3_1f13a = inttoptr i32 %v2_1f13a to i32*
  store i32 %arg2, i32* %v3_1f13a, align 4
  %v1_1f13e = load i32, i32* @esp, align 4
  %v2_1f13e = inttoptr i32 %v1_1f13e to i32*
  store i32 %v2_1f11f, i32* %v2_1f13e, align 4
  %v2_1f141 = call i32 @unknown_44ffa(i32 1)
  %v0_1f146 = load i32, i32* @esp, align 4
  %v2_1f149 = ptrtoint i8* %stack_var_-19 to i32
  %v2_1f14c = add i32 %v0_1f146, 4
  %v3_1f14c = inttoptr i32 %v2_1f14c to i32*
  store i32 %v2_1f149, i32* %v3_1f14c, align 4
  %v1_1f153 = load i32, i32* @esp, align 4
  %v2_1f153 = add i32 %v1_1f153, 4
  %v3_1f153 = inttoptr i32 %v2_1f153 to i32*
  store i32 %v2_1f11f, i32* %v3_1f153, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_1f15a = load i32, i32* @esp, align 4
  %v2_1f15a = inttoptr i32 %v1_1f15a to i32*
  store i32 %arg1, i32* %v2_1f15a, align 4
  %v2_1f15d = call i32 @unknown_450fc(i32 1)
  store i32 %v2_1f15d, i32* %eax.global-to-local, align 4
  ret i32 %v2_1f15d

dec_label_pc_1f164:                               ; preds = %dec_label_pc_1f0e3
  %v2_1f168 = ptrtoint i8* %stack_var_-18 to i32
  store i32 %v2_1f168, i32* %eax.global-to-local, align 4
  ret i32 %v2_1f168

; uselistorder directives
  uselistorder i32 %v2_1f090, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1f061, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1f04c, { 1, 0, 2, 4, 3, 5, 7, 6, 8 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 2, 1, 0 }
  uselistorder i32 %storemerge3.be, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0136, { 0, 5, 4, 6, 7, 1, 2, 3 }
  uselistorder i32 %v2_1eff8, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 11, 12, 13, 14, 26, 24, 25 }
  uselistorder i32 (i32)* @unknown_44ffa, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_44f30, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_44eb8, { 1, 0 }
  uselistorder i32 %arg2, { 6, 5, 7, 2, 1, 0, 4, 3, 10, 9, 8, 16, 15, 14, 13, 12, 11 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1efde, { 1, 0 }
}

define i32 @function_1f16e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f16e:
  %v0_1f16e = load i32, i32* @ebp, align 4
  %v1_1f16e = add i32 %v0_1f16e, 1149883461
  %v2_1f16e = inttoptr i32 %v1_1f16e to i8*
  %v3_1f16e = load i8, i8* %v2_1f16e, align 1
  %v4_1f16e = load i32, i32* @ecx, align 4
  %v5_1f16e = trunc i32 %v4_1f16e to i8
  %v6_1f16e = or i8 %v5_1f16e, %v3_1f16e
  store i8 %v6_1f16e, i8* %v2_1f16e, align 1
  %v0_1f176 = load i32, i32* @ebp, align 4
  %v1_1f176 = add i32 %v0_1f176, -60
  %v2_1f176 = inttoptr i32 %v1_1f176 to i32*
  %v3_1f176 = load i32, i32* %v2_1f176, align 4
  %v1_1f17c = call i32 @unknown_450fc(i32 %v3_1f176)
  %v0_1f181 = load i32, i32* @ebp, align 4
  %v1_1f181 = add i32 %v0_1f181, -60
  %v2_1f181 = inttoptr i32 %v1_1f181 to i32*
  %v3_1f181 = load i32, i32* %v2_1f181, align 4
  store i32 %v3_1f181, i32* @eax, align 4
  %v1_1f184 = add i32 %v0_1f181, -12
  %v2_1f184 = inttoptr i32 %v1_1f184 to i32*
  %v3_1f184 = load i32, i32* %v2_1f184, align 4
  %v1_1f187 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f187 = icmp eq i32 %v1_1f187, %v3_1f184
  br i1 %v3_1f187, label %bb, label %dec_label_pc_1f190

bb:                                               ; preds = %dec_label_pc_1f16e
  %v1_1f18e = call i32 @function_1f195()
  br label %dec_label_pc_1f190

dec_label_pc_1f190:                               ; preds = %bb, %dec_label_pc_1f16e
  %v2_1f18e = phi i32 [ %v1_1f18e, %bb ], [ %v3_1f181, %dec_label_pc_1f16e ]
  ret i32 %v2_1f18e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_450fc, { 0, 2, 1 }
}

define i32 @function_1f195() local_unnamed_addr {
dec_label_pc_1f195:
  %v0_1f199 = load i32, i32* @eax, align 4
  ret i32 %v0_1f199
}

define i32 @_ZN5boost9addressofISt3mapI10txnouttype7CScriptSt4lessIS2_ESaISt4pairIKS2_S3_EEEEEPT_RSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f19c:
  %stack_var_-20 = alloca i32, align 4
  %v2_1f1ba = ptrtoint i32* %stack_var_-20 to i32
  %v2_1f1c0 = call i32 @unknown_453d0(i32 %v2_1f1ba, i32 %arg1)
  ret i32 %v2_1f1ba
}

define i32 @function_1f1c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f1c8:
  %v0_1f1c8 = load i32, i32* @eax, align 4
  %v1_1f1cb = call i32 @unknown_45408(i32 %v0_1f1c8)
  %v2_1f1db = call i32 @unknown_45437(i32 %v1_1f1cb, i32 0)
  store i32 %v2_1f1db, i32* @eax, align 4
  %v0_1f1e0 = load i32, i32* @ebp, align 4
  %v1_1f1e0 = add i32 %v0_1f1e0, -12
  %v2_1f1e0 = inttoptr i32 %v1_1f1e0 to i32*
  %v3_1f1e0 = load i32, i32* %v2_1f1e0, align 4
  %v1_1f1e3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f1e3 = icmp eq i32 %v1_1f1e3, %v3_1f1e0
  br i1 %v3_1f1e3, label %bb, label %dec_label_pc_1f1ec

bb:                                               ; preds = %dec_label_pc_1f1c8
  %v1_1f1ea = call i32 @function_1f1f1()
  br label %dec_label_pc_1f1ec

dec_label_pc_1f1ec:                               ; preds = %bb, %dec_label_pc_1f1c8
  %v2_1f1ea = phi i32 [ %v1_1f1ea, %bb ], [ %v2_1f1db, %dec_label_pc_1f1c8 ]
  ret i32 %v2_1f1ea
}

define i32 @function_1f1f1() local_unnamed_addr {
dec_label_pc_1f1f1:
  %v0_1f1f2 = load i32, i32* @eax, align 4
  ret i32 %v0_1f1f2
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEC1ERKSC_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f1f4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1f217 = call i32 @unknown_3b6f0(i32 %tmp102)
  %v1_1f21f = inttoptr i32 %arg2 to i32*
  %v2_1f21f = load i32, i32* %v1_1f21f, align 4
  store i32 %v2_1f21f, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f232

bb:                                               ; preds = %dec_label_pc_1f1f4
  %v1_1f230 = call i32 @function_1f237()
  br label %dec_label_pc_1f232

dec_label_pc_1f232:                               ; preds = %bb, %dec_label_pc_1f1f4
  %v2_1f230 = phi i32 [ %v1_1f230, %bb ], [ 0, %dec_label_pc_1f1f4 ]
  ret i32 %v2_1f230
}

define i32 @function_1f237() local_unnamed_addr {
dec_label_pc_1f237:
  %v0_1f238 = load i32, i32* @eax, align 4
  ret i32 %v0_1f238
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SJ_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f239:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f25f

bb:                                               ; preds = %dec_label_pc_1f239
  %v2_1f25d = call i32 @function_1f264(i32 %arg1)
  br label %dec_label_pc_1f25f

dec_label_pc_1f25f:                               ; preds = %bb, %dec_label_pc_1f239
  %v3_1f25d = phi i32 [ %v2_1f25d, %bb ], [ %arg1, %dec_label_pc_1f239 ]
  ret i32 %v3_1f25d
}

define i32 @function_1f264(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f264:
  %v0_1f265 = load i32, i32* @eax, align 4
  ret i32 %v0_1f265
}

define i32 @_ZN5boost15foreach_detail_7derefofISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEERT_PSC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f266:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f28c

bb:                                               ; preds = %dec_label_pc_1f266
  %v2_1f28a = call i32 @function_1f291(i32 %arg1)
  br label %dec_label_pc_1f28c

dec_label_pc_1f28c:                               ; preds = %bb, %dec_label_pc_1f266
  %v3_1f28a = phi i32 [ %v2_1f28a, %bb ], [ %arg1, %dec_label_pc_1f266 ]
  ret i32 %v3_1f28a
}

define i32 @function_1f291(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f291:
  %v0_1f292 = load i32, i32* @eax, align 4
  ret i32 %v0_1f292
}

define i32 @_ZN5boost17range_adl_barrier5beginISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS_14range_iteratorIT_E4typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f293:
  ret i32 %arg1
}

define i32 @function_1f2c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f2c0:
  %v0_1f2c5 = load i32, i32* @ebp, align 4
  %v1_1f2c5 = add i32 %v0_1f2c5, -28
  %v2_1f2c5 = inttoptr i32 %v1_1f2c5 to i32*
  %v3_1f2c5 = load i32, i32* %v2_1f2c5, align 4
  store i32 %v3_1f2c5, i32* @eax, align 4
  %v1_1f2c8 = add i32 %v0_1f2c5, -12
  %v2_1f2c8 = inttoptr i32 %v1_1f2c8 to i32*
  %v3_1f2c8 = load i32, i32* %v2_1f2c8, align 4
  %v1_1f2cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f2cb = icmp eq i32 %v1_1f2cb, %v3_1f2c8
  br i1 %v3_1f2cb, label %bb, label %dec_label_pc_1f2d4

bb:                                               ; preds = %dec_label_pc_1f2c0
  %v1_1f2d2 = call i32 @function_1f2d9()
  br label %dec_label_pc_1f2d4

dec_label_pc_1f2d4:                               ; preds = %bb, %dec_label_pc_1f2c0
  %v2_1f2d2 = phi i32 [ %v1_1f2d2, %bb ], [ %v3_1f2c5, %dec_label_pc_1f2c0 ]
  ret i32 %v2_1f2d2
}

define i32 @function_1f2d9() local_unnamed_addr {
dec_label_pc_1f2d9:
  %v0_1f2da = load i32, i32* @eax, align 4
  ret i32 %v0_1f2da
}

define i32 @_ZN5boost15foreach_detail_8auto_anyISt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEEC1ERKS8_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f2de:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_1f301 = call i32 @unknown_3b7da(i32 %tmp102)
  %v1_1f30c = inttoptr i32 %arg2 to i32*
  %v2_1f30c = load i32, i32* %v1_1f30c, align 4
  store i32 %v2_1f30c, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f31c

bb:                                               ; preds = %dec_label_pc_1f2de
  %v1_1f31a = call i32 @function_1f321()
  br label %dec_label_pc_1f31c

dec_label_pc_1f31c:                               ; preds = %bb, %dec_label_pc_1f2de
  %v2_1f31a = phi i32 [ %v1_1f31a, %bb ], [ 0, %dec_label_pc_1f2de ]
  ret i32 %v2_1f31a
}

define i32 @function_1f321() local_unnamed_addr {
dec_label_pc_1f321:
  %v0_1f322 = load i32, i32* @eax, align 4
  ret i32 %v0_1f322
}

define i32 @_ZN5boost17range_adl_barrier3endISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS_14range_iteratorIT_E4typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f323:
  %v2_1f34d = call i32 @unknown_4563b(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f364

bb:                                               ; preds = %dec_label_pc_1f323
  %v1_1f362 = call i32 @function_1f369()
  br label %dec_label_pc_1f364

dec_label_pc_1f364:                               ; preds = %bb, %dec_label_pc_1f323
  %v2_1f362 = phi i32 [ %v1_1f362, %bb ], [ %arg1, %dec_label_pc_1f323 ]
  ret i32 %v2_1f362

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1f369() local_unnamed_addr {
dec_label_pc_1f369:
  %v0_1f36a = load i32, i32* @eax, align 4
  ret i32 %v0_1f36a
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castISt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SF_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f36d:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f393

bb:                                               ; preds = %dec_label_pc_1f36d
  %v2_1f391 = call i32 @function_1f398(i32 %arg1)
  br label %dec_label_pc_1f393

dec_label_pc_1f393:                               ; preds = %bb, %dec_label_pc_1f36d
  %v3_1f391 = phi i32 [ %v2_1f391, %bb ], [ %arg1, %dec_label_pc_1f36d ]
  ret i32 %v3_1f391
}

define i32 @function_1f398(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f398:
  %v0_1f399 = load i32, i32* @eax, align 4
  ret i32 %v0_1f399
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEeqERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f39a:
  %v1_1f3bf = inttoptr i32 %arg2 to i32*
  %v2_1f3bf = load i32, i32* %v1_1f3bf, align 4
  ret i32 %v2_1f3bf
}

define i32 @function_1f3c4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f3c4:
  %stack_var_0 = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v2_1f3c4 = ptrtoint i32* %stack_var_0 to i32
  %v1_1f3cc = trunc i32 %v2_1f3c4 to i8
  store i32 %v2_1f3c4, i32* @eax, align 4
  %v1_1f3ce = bitcast i32* %stack_var_0 to i8*
  %tmp2 = trunc i32 %tmp to i8
  %v5_1f3ce = add i8 %tmp2, %v1_1f3cc
  %v15_1f3ce = icmp eq i8 %v5_1f3ce, 0
  store i8 %v5_1f3ce, i8* %v1_1f3ce, align 4
  br i1 %v15_1f3ce, label %bb, label %dec_label_pc_1f3d2

bb:                                               ; preds = %dec_label_pc_1f3c4
  %v1_1f3d0 = call i32 @function_1f3d7()
  br label %dec_label_pc_1f3d2

dec_label_pc_1f3d2:                               ; preds = %dec_label_pc_1f3c4, %bb
  %v2_1f3d0 = phi i32 [ %v1_1f3d0, %bb ], [ %v2_1f3c4, %dec_label_pc_1f3c4 ]
  ret i32 %v2_1f3d0

; uselistorder directives
  uselistorder label %dec_label_pc_1f3d2, { 1, 0 }
}

define i32 @function_1f3d7() local_unnamed_addr {
dec_label_pc_1f3d7:
  %v0_1f3d8 = load i32, i32* @eax, align 4
  ret i32 %v0_1f3d8
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f3da:
  %v2_1f3f4 = load i32, i32* %arg1, align 4
  ret i32 %v2_1f3f4
}

define i32 @function_1f416() local_unnamed_addr {
dec_label_pc_1f416:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f416 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f416 = add i32 %v0_1f416, -1
  store i32 %v1_1f416, i32* %ecx.global-to-local, align 4
  %v0_1f418 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f418
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f41a:
  %v2_1f434 = load i32, i32* %arg1, align 4
  %v1_1f436 = add i32 %v2_1f434, 16
  store i32 %v1_1f436, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f445

bb:                                               ; preds = %dec_label_pc_1f41a
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f443 = call i32 @function_1f44a(i32 %tmp100)
  br label %dec_label_pc_1f445

dec_label_pc_1f445:                               ; preds = %bb, %dec_label_pc_1f41a
  %v3_1f443 = phi i32 [ %v2_1f443, %bb ], [ %v1_1f436, %dec_label_pc_1f41a ]
  ret i32 %v3_1f443

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f44a(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f44a:
  %v0_1f44b = load i32, i32* @eax, align 4
  ret i32 %v0_1f44b
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1f44c:
  %v2_1f466 = load i32, i32* %arg1, align 4
  store i32 %v2_1f466, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f474

bb:                                               ; preds = %dec_label_pc_1f44c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_1f472 = call i32 @function_1f479(i32 %tmp100)
  br label %dec_label_pc_1f474

dec_label_pc_1f474:                               ; preds = %bb, %dec_label_pc_1f44c
  %v3_1f472 = phi i32 [ %v2_1f472, %bb ], [ %v2_1f466, %dec_label_pc_1f44c ]
  ret i32 %v3_1f472

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1f479(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f479:
  %v0_1f47a = load i32, i32* @eax, align 4
  ret i32 %v0_1f47a
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E13apply_visitorIK22CKeyStoreIsMineVisitorEENT_11result_typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f47c:
  %stack_var_-20 = alloca i32, align 4
  %v2_1f4a0 = ptrtoint i32* %stack_var_-20 to i32
  %v2_1f4a6 = call i32 @unknown_457de(i32 %v2_1f4a0, i32 %arg2)
  %v2_1f4b8 = call i32 @unknown_45816(i32 %arg1, i32 %v2_1f4a0)
  store i32 %v2_1f4b8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f4c9

bb:                                               ; preds = %dec_label_pc_1f47c
  %v1_1f4c7 = call i32 @function_1f4ce()
  br label %dec_label_pc_1f4c9

dec_label_pc_1f4c9:                               ; preds = %bb, %dec_label_pc_1f47c
  %v2_1f4c7 = phi i32 [ %v1_1f4c7, %bb ], [ %v2_1f4b8, %dec_label_pc_1f47c ]
  ret i32 %v2_1f4c7
}

define i32 @function_1f4ce() local_unnamed_addr {
dec_label_pc_1f4ce:
  %v0_1f4cf = load i32, i32* @eax, align 4
  ret i32 %v0_1f4cf
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4d0:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f4f3

bb:                                               ; preds = %dec_label_pc_1f4d0
  %v2_1f4f1 = call i32 @function_1f4f8(i32 %arg1)
  br label %dec_label_pc_1f4f3

dec_label_pc_1f4f3:                               ; preds = %bb, %dec_label_pc_1f4d0
  %v3_1f4f1 = phi i32 [ %v2_1f4f1, %bb ], [ 0, %dec_label_pc_1f4d0 ]
  ret i32 %v3_1f4f1
}

define i32 @function_1f4f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4f8:
  %v0_1f4f9 = load i32, i32* @eax, align 4
  ret i32 %v0_1f4f9
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f4fa:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f51d

bb:                                               ; preds = %dec_label_pc_1f4fa
  %v2_1f51b = call i32 @function_1f522(i32 %arg1)
  br label %dec_label_pc_1f51d

dec_label_pc_1f51d:                               ; preds = %bb, %dec_label_pc_1f4fa
  %v3_1f51b = phi i32 [ %v2_1f51b, %bb ], [ 0, %dec_label_pc_1f4fa ]
  ret i32 %v3_1f51b
}

define i32 @function_1f522(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f522:
  %v0_1f523 = load i32, i32* @eax, align 4
  ret i32 %v0_1f523
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EEC1ERKS3_() local_unnamed_addr {
dec_label_pc_1f524:
  %eax.global-to-local = alloca i32, align 4
  %v2_1f525 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_1f525
}

define i32 @function_1f563() local_unnamed_addr {
dec_label_pc_1f563:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1f563 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1f563 = add i32 %v0_1f563, -1
  store i32 %v1_1f563, i32* %ecx.global-to-local, align 4
  %v0_1f565 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f565
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE22_M_initialize_dispatchIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvT_S9_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1f566:
  ret i32 0
}

define i32 @function_1f596(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f596:
  %v0_1f59c = load i32, i32* @ebp, align 4
  %v1_1f59c = add i32 %v0_1f59c, 1
  store i32 %v1_1f59c, i32* @ebp, align 4
  %v1_1f5a2 = add i32 %v0_1f59c, -27
  %v2_1f5a2 = inttoptr i32 %v1_1f5a2 to i32*
  %v3_1f5a2 = load i32, i32* %v2_1f5a2, align 4
  %v1_1f5a8 = call i32 @unknown_459ce(i32 %v3_1f5a2)
  %v0_1f5ad = load i32, i32* @ebp, align 4
  %v1_1f5ad = add i32 %v0_1f5ad, -12
  %v2_1f5ad = inttoptr i32 %v1_1f5ad to i32*
  %v3_1f5ad = load i32, i32* %v2_1f5ad, align 4
  %v1_1f5b0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f5b0 = xor i32 %v1_1f5b0, %v3_1f5ad
  %v3_1f5b0 = icmp eq i32 %v2_1f5b0, 0
  store i32 %v2_1f5b0, i32* @eax, align 4
  br i1 %v3_1f5b0, label %bb, label %dec_label_pc_1f5b9

bb:                                               ; preds = %dec_label_pc_1f596
  %v1_1f5b7 = call i32 @function_1f5be()
  br label %dec_label_pc_1f5b9

dec_label_pc_1f5b9:                               ; preds = %bb, %dec_label_pc_1f596
  %v3_1f5b7 = phi i32 [ %v1_1f5b7, %bb ], [ %v2_1f5b0, %dec_label_pc_1f596 ]
  ret i32 %v3_1f5b7
}

define i32 @function_1f5be() local_unnamed_addr {
dec_label_pc_1f5be:
  %v0_1f5bf = load i32, i32* @eax, align 4
  ret i32 %v0_1f5bf
}

define i32 @_ZN5boost6detail7variant15direct_assignerI6CKeyIDED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5c0:
  %v1_1f5dd = call i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f5ee

bb:                                               ; preds = %dec_label_pc_1f5c0
  %v1_1f5ec = call i32 @function_1f5f3()
  br label %dec_label_pc_1f5ee

dec_label_pc_1f5ee:                               ; preds = %bb, %dec_label_pc_1f5c0
  %v2_1f5ec = phi i32 [ %v1_1f5ec, %bb ], [ 0, %dec_label_pc_1f5c0 ]
  ret i32 %v2_1f5ec
}

define i32 @function_1f5f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f5f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f5f3() local_unnamed_addr {
dec_label_pc_1f5f3:
  %v0_1f5f4 = load i32, i32* @eax, align 4
  ret i32 %v0_1f5f4
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E6assignIS2_EEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f5f6:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_1f61b = ptrtoint i32* %stack_var_-44 to i32
  %v2_1f621 = call i32 @unknown_45b16(i32 %v2_1f61b, i32 %arg2)
  %v2_1f633 = call i32 @unknown_45b5a(i32 %arg1, i32 %v2_1f61b)
  %v1_1f638 = xor i32 %v2_1f633, 1
  %v4_1f638 = trunc i32 %v1_1f638 to i8
  %v5_1f63b = icmp eq i8 %v4_1f638, 0
  br i1 %v5_1f63b, label %dec_label_pc_1f676, label %dec_label_pc_1f63f

dec_label_pc_1f63f:                               ; preds = %dec_label_pc_1f5f6
  %v2_1f646 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1f64c = call i32 @unknown_38df0(i32 %v2_1f646, i32 %arg2)
  %v1_1f657 = call i32 @unknown_45d07(i32 %v2_1f646)
  %v2_1f666 = call i32 @unknown_45bae(i32 %arg1, i32 %v1_1f657)
  %v1_1f671 = call i32 @unknown_38e6e(i32 %v2_1f646)
  br label %dec_label_pc_1f676

dec_label_pc_1f676:                               ; preds = %dec_label_pc_1f63f, %dec_label_pc_1f5f6
  %v1_1f67c = call i32 @unknown_3ebb6(i32 %v2_1f61b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f68d

bb:                                               ; preds = %dec_label_pc_1f676
  %v1_1f68b = call i32 @function_1f6ba()
  store i32 %v1_1f68b, i32* @eax, align 4
  br label %dec_label_pc_1f68d

dec_label_pc_1f68d:                               ; preds = %bb, %dec_label_pc_1f676
  %v0_1f68d = call i32 @function_1f6b5()
  ret i32 %v0_1f68d
}

define i32 @function_1f68f() local_unnamed_addr {
dec_label_pc_1f68f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f68f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1f68f, i32* @ebx, align 4
  %v0_1f691 = load i32, i32* @ebp, align 4
  %v1_1f691 = add i32 %v0_1f691, -36
  store i32 %v1_1f691, i32* %eax.global-to-local, align 4
  %v1_1f697 = call i32 @unknown_38e6e(i32 %v1_1f691)
  store i32 %v1_1f697, i32* %eax.global-to-local, align 4
  %v0_1f69c = call i32 @function_1f6a0()
  store i32 %v0_1f69c, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f69c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_38e6e, { 1, 0 }
}

define i32 @function_1f69e() local_unnamed_addr {
dec_label_pc_1f69e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f69e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f69e
}

define i32 @function_1f6a0() local_unnamed_addr {
dec_label_pc_1f6a0:
  %v0_1f6a0 = load i32, i32* @ebp, align 4
  %v1_1f6a0 = add i32 %v0_1f6a0, -40
  %v1_1f6a6 = call i32 @unknown_3ebb6(i32 %v1_1f6a0)
  %v0_1f6ab = load i32, i32* @ebx, align 4
  ret i32 %v0_1f6ab

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3ebb6, { 1, 0 }
}

define i32 @function_1f6b5() local_unnamed_addr {
dec_label_pc_1f6b5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f6ba() local_unnamed_addr {
dec_label_pc_1f6ba:
  %v0_1f6bf = load i32, i32* @eax, align 4
  ret i32 %v0_1f6bf
}

define i32 @_ZN5boost6detail7variant15direct_assignerI9CScriptIDED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f6c0:
  store i32 %arg1, i32* @eax, align 4
  %v1_1f6dd = call i32 @function_38bde(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f6ee

bb:                                               ; preds = %dec_label_pc_1f6c0
  %v1_1f6ec = call i32 @function_1f6f3()
  br label %dec_label_pc_1f6ee

dec_label_pc_1f6ee:                               ; preds = %bb, %dec_label_pc_1f6c0
  %v2_1f6ec = phi i32 [ %v1_1f6ec, %bb ], [ 0, %dec_label_pc_1f6c0 ]
  ret i32 %v2_1f6ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f6f3() local_unnamed_addr {
dec_label_pc_1f6f3:
  %v0_1f6f4 = load i32, i32* @eax, align 4
  ret i32 %v0_1f6f4
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E6assignIS3_EEvRKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f6f6:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_1f71b = ptrtoint i32* %stack_var_-44 to i32
  %v2_1f721 = call i32 @unknown_45e34(i32 %v2_1f71b, i32 %arg2)
  %v2_1f733 = call i32 @unknown_45e78(i32 %arg1, i32 %v2_1f71b)
  %v1_1f738 = xor i32 %v2_1f733, 1
  %v4_1f738 = trunc i32 %v1_1f738 to i8
  %v5_1f73b = icmp eq i8 %v4_1f738, 0
  br i1 %v5_1f73b, label %dec_label_pc_1f776, label %dec_label_pc_1f73f

dec_label_pc_1f73f:                               ; preds = %dec_label_pc_1f6f6
  %v2_1f746 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1f74c = call i32 @unknown_45ecc(i32 %v2_1f746, i32 %arg2)
  %v1_1f757 = call i32 @unknown_45e07(i32 %v2_1f746)
  %v2_1f766 = call i32 @unknown_45cae(i32 %arg1, i32 %v1_1f757)
  %v1_1f771 = call i32 @unknown_38f6e(i32 %v2_1f746)
  br label %dec_label_pc_1f776

dec_label_pc_1f776:                               ; preds = %dec_label_pc_1f73f, %dec_label_pc_1f6f6
  %v1_1f77c = call i32 @unknown_3edb6(i32 %v2_1f71b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f78d

bb:                                               ; preds = %dec_label_pc_1f776
  %v1_1f78b = call i32 @function_1f7ba()
  store i32 %v1_1f78b, i32* @eax, align 4
  br label %dec_label_pc_1f78d

dec_label_pc_1f78d:                               ; preds = %bb, %dec_label_pc_1f776
  %v0_1f78d = call i32 @function_1f7b5()
  ret i32 %v0_1f78d
}

define i32 @function_1f78f() local_unnamed_addr {
dec_label_pc_1f78f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f78f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1f78f, i32* @ebx, align 4
  %v0_1f791 = load i32, i32* @ebp, align 4
  %v1_1f791 = add i32 %v0_1f791, -36
  store i32 %v1_1f791, i32* %eax.global-to-local, align 4
  %v1_1f797 = call i32 @unknown_38f6e(i32 %v1_1f791)
  store i32 %v1_1f797, i32* %eax.global-to-local, align 4
  %v0_1f79c = call i32 @function_1f7a0()
  store i32 %v0_1f79c, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f79c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_38f6e, { 1, 0 }
}

define i32 @function_1f79e() local_unnamed_addr {
dec_label_pc_1f79e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f79e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f79e
}

define i32 @function_1f7a0() local_unnamed_addr {
dec_label_pc_1f7a0:
  %v0_1f7a0 = load i32, i32* @ebp, align 4
  %v1_1f7a0 = add i32 %v0_1f7a0, -40
  %v1_1f7a6 = call i32 @unknown_3edb6(i32 %v1_1f7a0)
  %v0_1f7ab = load i32, i32* @ebx, align 4
  ret i32 %v0_1f7ab

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3edb6, { 1, 0 }
}

define i32 @function_1f7b5() local_unnamed_addr {
dec_label_pc_1f7b5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f7ba() local_unnamed_addr {
dec_label_pc_1f7ba:
  %v0_1f7bf = load i32, i32* @eax, align 4
  ret i32 %v0_1f7bf
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE15_M_erase_at_endEPS8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f7c0:
  ret i32 %arg1
}

define i32 @function_1f7cc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f7cc:
  %v0_1f7cc = load i32, i32* @ebp, align 4
  %v1_1f7cc = add i32 %v0_1f7cc, 12
  %v2_1f7cc = inttoptr i32 %v1_1f7cc to i32*
  %v3_1f7cc = load i32, i32* %v2_1f7cc, align 4
  %v2_1f7cf = add i32 %v0_1f7cc, -32
  %v3_1f7cf = inttoptr i32 %v2_1f7cf to i32*
  store i32 %v3_1f7cc, i32* %v3_1f7cf, align 4
  %v0_1f7d2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_1f7d8 = load i32, i32* @ebp, align 4
  %v2_1f7d8 = add i32 %v1_1f7d8, -12
  %v3_1f7d8 = inttoptr i32 %v2_1f7d8 to i32*
  store i32 %v0_1f7d2, i32* %v3_1f7d8, align 4
  %v0_1f7dd = load i32, i32* @ebp, align 4
  %v1_1f7dd = add i32 %v0_1f7dd, -28
  %v2_1f7dd = inttoptr i32 %v1_1f7dd to i32*
  %v3_1f7dd = load i32, i32* %v2_1f7dd, align 4
  %v1_1f7e3 = call i32 @unknown_3f73e(i32 %v3_1f7dd)
  %v0_1f7e8 = load i32, i32* @ebp, align 4
  %v1_1f7e8 = add i32 %v0_1f7e8, -28
  %v2_1f7e8 = inttoptr i32 %v1_1f7e8 to i32*
  %v3_1f7e8 = load i32, i32* %v2_1f7e8, align 4
  %v1_1f7eb = add i32 %v3_1f7e8, 4
  %v2_1f7eb = inttoptr i32 %v1_1f7eb to i32*
  %v3_1f7eb = load i32, i32* %v2_1f7eb, align 4
  %v1_1f7f6 = add i32 %v0_1f7e8, -32
  %v2_1f7f6 = inttoptr i32 %v1_1f7f6 to i32*
  %v3_1f7f6 = load i32, i32* %v2_1f7f6, align 4
  %v3_1f7fc = call i32 @unknown_3f76b(i32 %v3_1f7f6, i32 %v3_1f7eb, i32 %v1_1f7e3)
  %v0_1f801 = load i32, i32* @ebp, align 4
  %v1_1f801 = add i32 %v0_1f801, -28
  %v2_1f801 = inttoptr i32 %v1_1f801 to i32*
  %v3_1f801 = load i32, i32* %v2_1f801, align 4
  %v1_1f804 = add i32 %v0_1f801, -32
  %v2_1f804 = inttoptr i32 %v1_1f804 to i32*
  %v3_1f804 = load i32, i32* %v2_1f804, align 4
  %v2_1f807 = add i32 %v3_1f801, 4
  %v3_1f807 = inttoptr i32 %v2_1f807 to i32*
  store i32 %v3_1f804, i32* %v3_1f807, align 4
  %v0_1f80a = load i32, i32* @ebp, align 4
  %v1_1f80a = add i32 %v0_1f80a, -12
  %v2_1f80a = inttoptr i32 %v1_1f80a to i32*
  %v3_1f80a = load i32, i32* %v2_1f80a, align 4
  %v1_1f80d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f80d = xor i32 %v1_1f80d, %v3_1f80a
  %v3_1f80d = icmp eq i32 %v2_1f80d, 0
  store i32 %v2_1f80d, i32* @eax, align 4
  br i1 %v3_1f80d, label %bb, label %dec_label_pc_1f816

bb:                                               ; preds = %dec_label_pc_1f7cc
  %v1_1f814 = call i32 @function_1f81b()
  br label %dec_label_pc_1f816

dec_label_pc_1f816:                               ; preds = %bb, %dec_label_pc_1f7cc
  %v2_1f814 = phi i32 [ %v1_1f814, %bb ], [ %v2_1f80d, %dec_label_pc_1f7cc ]
  ret i32 %v2_1f814
}

define i32 @function_1f81b() local_unnamed_addr {
dec_label_pc_1f81b:
  %v0_1f81c = load i32, i32* @eax, align 4
  ret i32 %v0_1f81c
}

define i32 @_ZN5boost6detail15aligned_storage19aligned_storage_impILj20ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f81e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1f841

bb:                                               ; preds = %dec_label_pc_1f81e
  %v2_1f83f = call i32 @function_1f846(i32 %arg1)
  br label %dec_label_pc_1f841

dec_label_pc_1f841:                               ; preds = %bb, %dec_label_pc_1f81e
  %v3_1f83f = phi i32 [ %v2_1f83f, %bb ], [ 0, %dec_label_pc_1f81e ]
  ret i32 %v3_1f83f
}

define i32 @function_1f846(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f846:
  %v0_1f847 = load i32, i32* @eax, align 4
  ret i32 %v0_1f847
}

define i32 @_ZN5boost15aligned_storageILj20ELj4EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f848:
  ret i32 %arg1
}

define i32 @function_1f864(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f864:
  %v0_1f864 = load i32, i32* @eax, align 4
  %v11_1f864 = and i32 %v0_1f864, -24
  %v1_1f86d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f86d = xor i32 %v1_1f86d, %v11_1f864
  %v3_1f86d = icmp eq i32 %v2_1f86d, 0
  store i32 %v2_1f86d, i32* @eax, align 4
  br i1 %v3_1f86d, label %bb, label %dec_label_pc_1f876

bb:                                               ; preds = %dec_label_pc_1f864
  %v1_1f874 = call i32 @function_1f87b()
  br label %dec_label_pc_1f876

dec_label_pc_1f876:                               ; preds = %bb, %dec_label_pc_1f864
  %v2_1f874 = phi i32 [ %v1_1f874, %bb ], [ %v2_1f86d, %dec_label_pc_1f864 ]
  ret i32 %v2_1f874
}

define i32 @function_1f87b() local_unnamed_addr {
dec_label_pc_1f87b:
  %v0_1f87c = load i32, i32* @eax, align 4
  ret i32 %v0_1f87c
}

define i32 @_ZN5boost15aligned_storageILj20ELj4EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f87e:
  %v0_1f88a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1f88a
}

define i32 @function_1f894(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f894:
  %zf.global-to-local = alloca i1, align 1
  %v0_1f894 = load i32, i32* @ebx, align 4
  %v1_1f894 = add i32 %v0_1f894, 862319685
  %v2_1f894 = inttoptr i32 %v1_1f894 to i8*
  %v3_1f894 = load i8, i8* %v2_1f894, align 1
  %v4_1f894 = udiv i8 %v3_1f894, 32
  %v5_1f894 = mul i8 %v3_1f894, 8
  %v6_1f894 = or i8 %v4_1f894, %v5_1f894
  store i8 %v6_1f894, i8* %v2_1f894, align 1
  %v10_1f894 = and i8 %v3_1f894, 16
  %v11_1f894 = icmp ne i8 %v10_1f894, 0
  %v0_1f89b = load i32, i32* @eax, align 4
  %v1_1f89b = trunc i32 %v0_1f89b to i8
  %v3_1f89b = zext i1 %v11_1f894 to i8
  %v4_1f89b = add i8 %v1_1f89b, %v3_1f89b
  %v13_1f89b = icmp eq i8 %v4_1f89b, 0
  store i1 %v13_1f89b, i1* %zf.global-to-local, align 1
  %v22_1f89b = zext i8 %v4_1f89b to i32
  %v24_1f89b = and i32 %v0_1f89b, -256
  %v25_1f89b = or i32 %v22_1f89b, %v24_1f89b
  store i32 %v25_1f89b, i32* @eax, align 4
  %v1_1f89d = inttoptr i32 %v25_1f89b to i8*
  %v2_1f89d = load i8, i8* %v1_1f89d, align 1
  %v5_1f89d = add i8 %v2_1f89d, %v4_1f89b
  %v15_1f89d = icmp eq i8 %v5_1f89d, 0
  store i1 %v15_1f89d, i1* %zf.global-to-local, align 1
  store i8 %v5_1f89d, i8* %v1_1f89d, align 1
  %v0_1f89f = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_1f89f, label %bb, label %dec_label_pc_1f894.dec_label_pc_1f8a1_crit_edge

dec_label_pc_1f894.dec_label_pc_1f8a1_crit_edge:  ; preds = %dec_label_pc_1f894
  %v2_1f89f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1f8a1

bb:                                               ; preds = %dec_label_pc_1f894
  %v1_1f89f = call i32 @function_1f8a6()
  br label %dec_label_pc_1f8a1

dec_label_pc_1f8a1:                               ; preds = %dec_label_pc_1f894.dec_label_pc_1f8a1_crit_edge, %bb
  %v2_1f89f = phi i32 [ %v2_1f89f.pre, %dec_label_pc_1f894.dec_label_pc_1f8a1_crit_edge ], [ %v1_1f89f, %bb ]
  ret i32 %v2_1f89f

; uselistorder directives
  uselistorder i8 %v3_1f894, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1f8a1, { 1, 0 }
}

define i32 @function_1f8a6() local_unnamed_addr {
dec_label_pc_1f8a6:
  %v0_1f8a7 = load i32, i32* @eax, align 4
  ret i32 %v0_1f8a7
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E17convert_constructIKS2_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_1f8a8:
  %v1_1f8d5 = add i32 %arg1, 4
  %v1_1f8db = call i32 @unknown_3f22a(i32 %v1_1f8d5)
  %v2_1f8ea = call i32 @unknown_460fb(i32 %v1_1f8db, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f8fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f8fa:
  %v2_1f8fc = load i32, i32* @eax, align 4
  %v4_1f8fc = mul i32 %v2_1f8fc, 2
  %v21_1f8fc = inttoptr i32 %v2_1f8fc to i32*
  store i32 %v4_1f8fc, i32* %v21_1f8fc, align 4
  %v0_1f8fe = load i32, i32* @ebp, align 4
  %v1_1f8fe = add i32 %v0_1f8fe, -12
  %v2_1f8fe = inttoptr i32 %v1_1f8fe to i32*
  %v3_1f8fe = load i32, i32* %v2_1f8fe, align 4
  %v1_1f901 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f901 = xor i32 %v1_1f901, %v3_1f8fe
  %v3_1f901 = icmp eq i32 %v2_1f901, 0
  store i32 %v2_1f901, i32* @eax, align 4
  br i1 %v3_1f901, label %bb, label %dec_label_pc_1f90a

bb:                                               ; preds = %dec_label_pc_1f8fa
  %v1_1f908 = call i32 @function_1f90f()
  br label %dec_label_pc_1f90a

dec_label_pc_1f90a:                               ; preds = %bb, %dec_label_pc_1f8fa
  %v2_1f908 = phi i32 [ %v1_1f908, %bb ], [ %v2_1f901, %dec_label_pc_1f8fa ]
  ret i32 %v2_1f908

; uselistorder directives
  uselistorder i32 %v2_1f8fc, { 1, 0 }
}

define i32 @function_1f90f() local_unnamed_addr {
dec_label_pc_1f90f:
  %v0_1f910 = load i32, i32* @eax, align 4
  ret i32 %v0_1f910
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E15destroy_contentEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f912:
  %stack_var_-17 = alloca i32, align 4
  %v2_1f92a = ptrtoint i32* %stack_var_-17 to i32
  ret i32 %v2_1f92a
}

define i32 @function_1f92e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f92e:
  %v0_1f930 = call i32 @unknown_3b5ba()
  %v0_1f935 = load i32, i32* @ebp, align 4
  %v1_1f935 = add i32 %v0_1f935, -13
  %v1_1f93c = add i32 %v0_1f935, -28
  %v2_1f93c = inttoptr i32 %v1_1f93c to i32*
  %v3_1f93c = load i32, i32* %v2_1f93c, align 4
  %v2_1f942 = call i32 @unknown_461d0(i32 %v3_1f93c, i32 %v1_1f935)
  %v0_1f947 = load i32, i32* @ebp, align 4
  %v1_1f947 = add i32 %v0_1f947, -13
  %v1_1f94d = call i32 @unknown_3b5f0(i32 %v1_1f947)
  %v0_1f952 = load i32, i32* @ebp, align 4
  %v1_1f952 = add i32 %v0_1f952, -12
  %v2_1f952 = inttoptr i32 %v1_1f952 to i32*
  %v3_1f952 = load i32, i32* %v2_1f952, align 4
  %v1_1f955 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1f955 = xor i32 %v1_1f955, %v3_1f952
  %v3_1f955 = icmp eq i32 %v2_1f955, 0
  store i32 %v2_1f955, i32* @eax, align 4
  br i1 %v3_1f955, label %bb, label %dec_label_pc_1f95e

bb:                                               ; preds = %dec_label_pc_1f92e
  %v1_1f95c = call i32 @function_1f97c()
  store i32 %v1_1f95c, i32* @eax, align 4
  br label %dec_label_pc_1f95e

dec_label_pc_1f95e:                               ; preds = %bb, %dec_label_pc_1f92e
  %v0_1f95e = call i32 @function_1f977()
  ret i32 %v0_1f95e
}

define i32 @function_1f961() local_unnamed_addr {
dec_label_pc_1f961:
  %eax.global-to-local = alloca i32, align 4
  %v0_1f961 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1f961
}

define i32 @function_1f964(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f964:
  %v0_1f964 = load i32, i32* @eax, align 4
  %v1_1f968 = call i32 @unknown_3b5f0(i32 %v0_1f964)
  %v0_1f96d = load i32, i32* @ebx, align 4
  ret i32 %v0_1f96d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3b5f0, { 1, 0 }
}

define i32 @function_1f977() local_unnamed_addr {
dec_label_pc_1f977:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1f97c() local_unnamed_addr {
dec_label_pc_1f97c:
  %v0_1f981 = load i32, i32* @eax, align 4
  ret i32 %v0_1f981
}

define i32 @_ZN5boost15aligned_storageILj20ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f982:
  %v0_1f98e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_1f98e
}

define i32 @function_1f994(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1f994:
  %v0_1f994 = load i32, i32* @eax, align 4
  %v1_1f994 = load i32, i32* @ebp, align 4
  %v2_1f994 = add i32 %v1_1f994, -12
  %v3_1f994 = inttoptr i32 %v2_1f994 to i32*
  store i32 %v0_1f994, i32* %v3_1f994, align 4
  %v0_1f999 = load i32, i32* @ebp, align 4
  %v1_1f999 = add i32 %v0_1f999, -28
  %v2_1f999 = inttoptr i32 %v1_1f999 to i32*
  %v3_1f999 = load i32, i32* %v2_1f999, align 4
  %v1_1f99f = call i32 @unknown_462ae(i32 %v3_1f999)
  store i32 %v1_1f99f, i32* @eax, align 4
  %v0_1f9a4 = load i32, i32* @ebp, align 4
  %v1_1f9a4 = add i32 %v0_1f9a4, -12
  %v2_1f9a4 = inttoptr i32 %v1_1f9a4 to i32*
  %v3_1f9a4 = load i32, i32* %v2_1f9a4, align 4
  %v1_1f9a7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_1f9a7 = icmp eq i32 %v1_1f9a7, %v3_1f9a4
  br i1 %v3_1f9a7, label %bb, label %dec_label_pc_1f9b0

bb:                                               ; preds = %dec_label_pc_1f994
  %v1_1f9ae = call i32 @function_1f9b5()
  br label %dec_label_pc_1f9b0

dec_label_pc_1f9b0:                               ; preds = %bb, %dec_label_pc_1f994
  %v2_1f9ae = phi i32 [ %v1_1f9ae, %bb ], [ %v1_1f99f, %dec_label_pc_1f994 ]
  ret i32 %v2_1f9ae
}

define i32 @function_1f9b5() local_unnamed_addr {
dec_label_pc_1f9b5:
  %v0_1f9b6 = load i32, i32* @eax, align 4
  ret i32 %v0_1f9b6
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_9copy_intoEEENT_11result_typeERSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f9b8:
  %v1_1f9d9 = add i32 %arg1, 4
  %v1_1f9df = call i32 @unknown_46312(i32 %v1_1f9d9)
  ret i32 %v1_1f9df
}

define i32 @function_1f9e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_1f9e6:
  %v0_1f9e6 = load i32, i32* @ebp, align 4
  %v1_1f9e6 = add i32 %v0_1f9e6, -28
  %v2_1f9e6 = inttoptr i32 %v1_1f9e6 to i32*
  %v3_1f9e6 = load i32, i32* %v2_1f9e6, align 4
  %v1_1f9ec = call i32 @unknown_3f416(i32 %v3_1f9e6)
  %v0_1f9f3 = load i32, i32* @ebp, align 4
  %v1_1f9f3 = add i32 %v0_1f9f3, -28
  %v2_1f9f3 = inttoptr i32 %v1_1f9f3 to i32*
  %v3_1f9f3 = load i32, i32* %v2_1f9f3, align 4
  %v1_1f9f6 = inttoptr i32 %v3_1f9f3 to i32*
  %v2_1f9f6 = load i32, i32* %v1_1f9f6, align 4
  %v0_1f9f8 = load i32, i32* @ebx, align 4
  %v1_1f9fc = add i32 %v0_1f9f3, -32
  %v2_1f9fc = inttoptr i32 %v1_1f9fc to i32*
  %v3_1f9fc = load i32, i32* %v2_1f9fc, align 4
  %v4_1fa0a = call i32 @unknown_46347(i32 %v2_1f9f6, i32 %v1_1f9ec, i32 %v3_1f9fc, i32 %v0_1f9f8)
  %v0_1fa0f = load i32, i32* @ebp, align 4
  %v1_1fa0f = add i32 %v0_1fa0f, -12
  %v2_1fa0f = inttoptr i32 %v1_1fa0f to i32*
  %v3_1fa0f = load i32, i32* %v2_1fa0f, align 4
  %v1_1fa12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fa12 = xor i32 %v1_1fa12, %v3_1fa0f
  %v3_1fa12 = icmp eq i32 %v2_1fa12, 0
  store i32 %v2_1fa12, i32* @eax, align 4
  br i1 %v3_1fa12, label %bb, label %dec_label_pc_1fa1b

bb:                                               ; preds = %dec_label_pc_1f9e6
  %v1_1fa19 = call i32 @function_1fa20()
  br label %dec_label_pc_1fa1b

dec_label_pc_1fa1b:                               ; preds = %bb, %dec_label_pc_1f9e6
  %v2_1fa19 = phi i32 [ %v1_1fa19, %bb ], [ %v2_1fa12, %dec_label_pc_1f9e6 ]
  ret i32 %v2_1fa19
}

define i32 @function_1fa20() local_unnamed_addr {
dec_label_pc_1fa20:
  %v0_1fa25 = load i32, i32* @eax, align 4
  ret i32 %v0_1fa25
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E14indicate_whichEi(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa26:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1fa57

bb:                                               ; preds = %dec_label_pc_1fa26
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_1fa55 = call i32 @function_1fa5c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_1fa57

dec_label_pc_1fa57:                               ; preds = %bb, %dec_label_pc_1fa26
  %v4_1fa55 = phi i32 [ %v3_1fa55, %bb ], [ 0, %dec_label_pc_1fa26 ]
  ret i32 %v4_1fa55

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_1fa5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fa5c:
  %v0_1fa5d = load i32, i32* @eax, align 4
  ret i32 %v0_1fa5d
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E5whichEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fa5e:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1fa7b = call i32 @unknown_46462(i32 %tmp101)
  %v4_1fa80 = trunc i32 %v1_1fa7b to i8
  %v2_1fa90 = load i32, i32* %arg1, align 4
  %not.v0_1fa82 = icmp ne i8 %v4_1fa80, 0
  %v1_1fa89 = sext i1 %not.v0_1fa82 to i32
  %storemerge = xor i32 %v1_1fa89, %v2_1fa90
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1fa9e

bb:                                               ; preds = %dec_label_pc_1fa5e
  %v1_1fa9c = call i32 @function_1faa3()
  br label %dec_label_pc_1fa9e

dec_label_pc_1fa9e:                               ; preds = %bb, %dec_label_pc_1fa5e
  %v2_1fa9c = phi i32 [ %v1_1fa9c, %bb ], [ %storemerge, %dec_label_pc_1fa5e ]
  ret i32 %v2_1fa9c
}

define i32 @function_1faa3() local_unnamed_addr {
dec_label_pc_1faa3:
  %v0_1faa4 = load i32, i32* @eax, align 4
  ret i32 %v0_1faa4
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE9constructEPS9_RKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1faa6:
  store i32 0, i32* @eax, align 4
  %v2_1fada = call i32 @function_28992(i32 24, i32 %arg2)
  %v1_1fae1 = icmp eq i32 %v2_1fada, 0
  br i1 %v1_1fae1, label %bb, label %dec_label_pc_1fae5

bb:                                               ; preds = %dec_label_pc_1faa6
  %v1_1fae3 = call i32 @function_1fb0e()
  br label %dec_label_pc_1fae5

dec_label_pc_1fae5:                               ; preds = %bb, %dec_label_pc_1faa6
  %v2_1faef = call i32 @unknown_393b8(i32 %v2_1fada, i32 %arg3)
  %v0_1faf4 = call i32 @function_1fb0e()
  ret i32 %v0_1faf4

; uselistorder directives
  uselistorder i32 ()* @function_1fb0e, { 1, 0 }
}

define i32 @function_1fb0e() local_unnamed_addr {
dec_label_pc_1fb0e:
  %v0_1fb0e = load i32, i32* @ebp, align 4
  %v1_1fb0e = add i32 %v0_1fb0e, -28
  %v2_1fb0e = inttoptr i32 %v1_1fb0e to i32*
  %v3_1fb0e = load i32, i32* %v2_1fb0e, align 4
  %v1_1fb11 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fb11 = xor i32 %v1_1fb11, %v3_1fb0e
  %v3_1fb11 = icmp eq i32 %v2_1fb11, 0
  store i32 %v2_1fb11, i32* @eax, align 4
  br i1 %v3_1fb11, label %bb, label %dec_label_pc_1fb1a

bb:                                               ; preds = %dec_label_pc_1fb0e
  %v1_1fb18 = call i32 @function_1fb1f()
  br label %dec_label_pc_1fb1a

dec_label_pc_1fb1a:                               ; preds = %bb, %dec_label_pc_1fb0e
  %v2_1fb18 = phi i32 [ %v1_1fb18, %bb ], [ %v2_1fb11, %dec_label_pc_1fb0e ]
  ret i32 %v2_1fb18
}

define i32 @function_1fb1f() local_unnamed_addr {
dec_label_pc_1fb1f:
  %v0_1fb26 = load i32, i32* @eax, align 4
  ret i32 %v0_1fb26
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS8_SA_EERKS8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1fb28:
  ret i32 %arg1
}

define i32 @function_1fb50(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fb50:
  %v0_1fb50 = load i32, i32* @eax, align 4
  %v1_1fb50 = add i32 %v0_1fb50, 4
  %v2_1fb50 = inttoptr i32 %v1_1fb50 to i32*
  %v3_1fb50 = load i32, i32* %v2_1fb50, align 4
  %v0_1fb53 = load i32, i32* @ebp, align 4
  %v1_1fb53 = add i32 %v0_1fb53, -60
  %v2_1fb53 = inttoptr i32 %v1_1fb53 to i32*
  %v3_1fb53 = load i32, i32* %v2_1fb53, align 4
  %v1_1fb56 = add i32 %v3_1fb53, 8
  %v2_1fb56 = inttoptr i32 %v1_1fb56 to i32*
  %v3_1fb56 = load i32, i32* %v2_1fb56, align 4
  %v12_1fb59 = icmp eq i32 %v3_1fb50, %v3_1fb56
  br i1 %v12_1fb59, label %bb, label %dec_label_pc_1fb61

bb:                                               ; preds = %dec_label_pc_1fb50
  %v1_1fb5b = call i32 @function_1fbfd()
  %v0_1fb61.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_1fb61

dec_label_pc_1fb61:                               ; preds = %bb, %dec_label_pc_1fb50
  %v0_1fb70 = phi i32 [ %v0_1fb61.pre, %bb ], [ %v0_1fb53, %dec_label_pc_1fb50 ]
  %v1_1fb61 = add i32 %v0_1fb70, -60
  %v2_1fb61 = inttoptr i32 %v1_1fb61 to i32*
  %v3_1fb61 = load i32, i32* %v2_1fb61, align 4
  %v1_1fb64 = add i32 %v3_1fb61, 4
  %v2_1fb64 = inttoptr i32 %v1_1fb64 to i32*
  %v3_1fb64 = load i32, i32* %v2_1fb64, align 4
  %v1_1fb67 = add i32 %v3_1fb64, -24
  store i32 %v1_1fb67, i32* @ecx, align 4
  %v3_1fb6a = load i32, i32* %v2_1fb61, align 4
  %v1_1fb6d = add i32 %v3_1fb6a, 4
  %v2_1fb6d = inttoptr i32 %v1_1fb6d to i32*
  %v3_1fb6d = load i32, i32* %v2_1fb6d, align 4
  %v3_1fb7e = call i32 @unknown_3f5ce(i32 %v3_1fb6a, i32 %v3_1fb6d, i32 %v1_1fb67)
  %v0_1fb83 = load i32, i32* @ebp, align 4
  %v1_1fb83 = add i32 %v0_1fb83, -60
  %v2_1fb83 = inttoptr i32 %v1_1fb83 to i32*
  %v3_1fb83 = load i32, i32* %v2_1fb83, align 4
  ret i32 %v3_1fb83
}

define i32 @function_1fb88(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fb88:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1fb88 = load i32, i32* @eax, align 4
  %v1_1fb88 = trunc i32 %v0_1fb88 to i8
  %v2_1fb88 = add i8 %v1_1fb88, ptrtoint (i8* @global_var_8d.2244 to i8)
  %v6_1fb88 = icmp ult i8 %v2_1fb88, %v1_1fb88
  %v16_1fb88 = zext i8 %v2_1fb88 to i32
  %v18_1fb88 = and i32 %v0_1fb88, -256
  %v19_1fb88 = or i32 %v16_1fb88, %v18_1fb88
  store i32 %v19_1fb88, i32* %eax.global-to-local, align 4
  store i32 %v19_1fb88, i32* %stack_var_-4, align 4
  %v0_1fb8b = load i32, i32* @ebx, align 4
  %v1_1fb8b = add i32 %v0_1fb8b, 1351205957
  %v2_1fb8b = inttoptr i32 %v1_1fb8b to i8*
  %v3_1fb8b = load i8, i8* %v2_1fb8b, align 1
  %v4_1fb8b = load i32, i32* @ecx, align 4
  %v5_1fb8b = trunc i32 %v4_1fb8b to i8
  %v7_1fb8b = zext i1 %v6_1fb88 to i8
  %v8_1fb8b = add i8 %v3_1fb8b, %v7_1fb8b
  %v9_1fb8b = sub i8 %v8_1fb8b, %v5_1fb8b
  store i8 %v9_1fb8b, i8* %v2_1fb8b, align 1
  %v0_1fb93 = load i32, i32* @ebp, align 4
  %v1_1fb93 = add i32 %v0_1fb93, 1
  store i32 %v1_1fb93, i32* @ebp, align 4
  %v1_1fb99 = add i32 %v0_1fb93, -35
  store i32 %v1_1fb99, i32* %eax.global-to-local, align 4
  store i32 %v1_1fb99, i32* inttoptr (i32 69485705 to i32*), align 4
  %v0_1fb9f = load i32, i32* %stack_var_-4, align 4
  %v1_1fb9f = call i32 @unknown_3943a(i32 %v0_1fb9f)
  store i32 %v1_1fb9f, i32* %eax.global-to-local, align 4
  %v0_1fba4 = load i32, i32* @ebp, align 4
  %v1_1fba4 = add i32 %v0_1fba4, -60
  %v2_1fba4 = inttoptr i32 %v1_1fba4 to i32*
  %v3_1fba4 = load i32, i32* %v2_1fba4, align 4
  store i32 %v3_1fba4, i32* %eax.global-to-local, align 4
  %v1_1fba7 = add i32 %v3_1fba4, 4
  %v2_1fba7 = inttoptr i32 %v1_1fba7 to i32*
  %v3_1fba7 = load i32, i32* %v2_1fba7, align 4
  store i32 %v3_1fba7, i32* %eax.global-to-local, align 4
  %v1_1fbaa = add i32 %v3_1fba7, -24
  store i32 %v1_1fbaa, i32* %esi.global-to-local, align 4
  %v3_1fbad = load i32, i32* %v2_1fba4, align 4
  store i32 %v3_1fbad, i32* %eax.global-to-local, align 4
  %v1_1fbb0 = add i32 %v3_1fbad, 4
  %v2_1fbb0 = inttoptr i32 %v1_1fbb0 to i32*
  %v3_1fbb0 = load i32, i32* %v2_1fbb0, align 4
  %v1_1fbb3 = add i32 %v3_1fbb0, -48
  store i32 %v1_1fbb3, i32* @ebx, align 4
  %v1_1fbb6 = add i32 %v0_1fba4, -64
  store i32 %v1_1fbb6, i32* %eax.global-to-local, align 4
  %v1_1fbb9 = load i32, i32* @esp, align 4
  %v2_1fbb9 = inttoptr i32 %v1_1fbb9 to i32*
  store i32 %v1_1fbb6, i32* %v2_1fbb9, align 4
  %v0_1fbbc = load i32, i32* %stack_var_-4, align 4
  %v1_1fbbc = call i32 @unknown_4655e(i32 %v0_1fbbc)
  store i32 %v1_1fbbc, i32* %eax.global-to-local, align 4
  %v1_1fbc1 = inttoptr i32 %v1_1fbbc to i32*
  %v2_1fbc1 = load i32, i32* %v1_1fbc1, align 4
  store i32 %v2_1fbc1, i32* %eax.global-to-local, align 4
  %v0_1fbc3 = load i32, i32* %esi.global-to-local, align 4
  %v1_1fbc3 = load i32, i32* @esp, align 4
  %v2_1fbc3 = add i32 %v1_1fbc3, 8
  %v3_1fbc3 = inttoptr i32 %v2_1fbc3 to i32*
  store i32 %v0_1fbc3, i32* %v3_1fbc3, align 4
  %v0_1fbc7 = load i32, i32* @ebx, align 4
  %v1_1fbc7 = load i32, i32* @esp, align 4
  %v2_1fbc7 = add i32 %v1_1fbc7, 4
  %v3_1fbc7 = inttoptr i32 %v2_1fbc7 to i32*
  store i32 %v0_1fbc7, i32* %v3_1fbc7, align 4
  %v0_1fbcb = load i32, i32* %eax.global-to-local, align 4
  %v1_1fbcb = load i32, i32* @esp, align 4
  %v2_1fbcb = inttoptr i32 %v1_1fbcb to i32*
  store i32 %v0_1fbcb, i32* %v2_1fbcb, align 4
  %v0_1fbce = call i32 @unknown_4658b()
  %v0_1fbd3 = load i32, i32* @ebp, align 4
  %v1_1fbd3 = add i32 %v0_1fbd3, -64
  store i32 %v1_1fbd3, i32* %eax.global-to-local, align 4
  %v1_1fbd6 = load i32, i32* @esp, align 4
  %v2_1fbd6 = inttoptr i32 %v1_1fbd6 to i32*
  store i32 %v1_1fbd3, i32* %v2_1fbd6, align 4
  %v0_1fbd9 = call i32 @unknown_3fda6()
  store i32 %v0_1fbd9, i32* %eax.global-to-local, align 4
  %v0_1fbde = load i32, i32* @ebp, align 4
  %v1_1fbde = add i32 %v0_1fbde, -36
  %v1_1fbe1 = load i32, i32* @esp, align 4
  %v2_1fbe1 = add i32 %v1_1fbe1, 4
  %v3_1fbe1 = inttoptr i32 %v2_1fbe1 to i32*
  store i32 %v1_1fbde, i32* %v3_1fbe1, align 4
  %v0_1fbe5 = load i32, i32* %eax.global-to-local, align 4
  %v1_1fbe5 = load i32, i32* @esp, align 4
  %v2_1fbe5 = inttoptr i32 %v1_1fbe5 to i32*
  store i32 %v0_1fbe5, i32* %v2_1fbe5, align 4
  %v0_1fbe8 = call i32 @unknown_465f2()
  %v0_1fbed = load i32, i32* @ebp, align 4
  %v1_1fbed = add i32 %v0_1fbed, -36
  store i32 %v1_1fbed, i32* %eax.global-to-local, align 4
  %v1_1fbf0 = load i32, i32* @esp, align 4
  %v2_1fbf0 = inttoptr i32 %v1_1fbf0 to i32*
  store i32 %v1_1fbed, i32* %v2_1fbf0, align 4
  %v0_1fbf3 = call i32 @unknown_393a0()
  store i32 %v0_1fbf3, i32* %eax.global-to-local, align 4
  %v0_1fbf8 = call i32 @function_1fe25()
  store i32 %v0_1fbf8, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fbf8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
}

define i32 @function_1fbfd() local_unnamed_addr {
dec_label_pc_1fbfd:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1fc0d = load i32, i32* @ebp, align 4
  %v1_1fc0d = add i32 %v0_1fc0d, -60
  %v2_1fc0d = inttoptr i32 %v1_1fc0d to i32*
  %v3_1fc0d = load i32, i32* %v2_1fc0d, align 4
  %v4_1fc13 = call i32 @unknown_46638(i32 %v3_1fc0d, i32 1, i32 ptrtoint ([22 x i8]* @global_var_c5ba.2282 to i32))
  %v1_1fc18 = load i32, i32* @ebp, align 4
  %v2_1fc18 = add i32 %v1_1fc18, -48
  %v3_1fc18 = inttoptr i32 %v2_1fc18 to i32*
  store i32 %v4_1fc13, i32* %v3_1fc18, align 4
  %v0_1fc1b = load i32, i32* @ebp, align 4
  %v1_1fc1b = add i32 %v0_1fc1b, -56
  %v1_1fc1e = add i32 %v0_1fc1b, -60
  %v2_1fc1e = inttoptr i32 %v1_1fc1e to i32*
  %v3_1fc1e = load i32, i32* %v2_1fc1e, align 4
  %v2_1fc28 = call i32 @unknown_4670a(i32 %v1_1fc1b, i32 %v3_1fc1e)
  %v0_1fc30 = load i32, i32* @ebp, align 4
  %v1_1fc30 = add i32 %v0_1fc30, -56
  %v1_1fc37 = add i32 %v0_1fc30, -64
  %v2_1fc3d = call i32 @unknown_46751(i32 %v1_1fc37, i32 %v1_1fc30)
  %v1_1fc42 = load i32, i32* @ebp, align 4
  %v2_1fc42 = add i32 %v1_1fc42, -44
  %v3_1fc42 = inttoptr i32 %v2_1fc42 to i32*
  store i32 %v2_1fc3d, i32* %v3_1fc42, align 4
  %v0_1fc45 = load i32, i32* @ebp, align 4
  %v1_1fc45 = add i32 %v0_1fc45, -60
  %v2_1fc45 = inttoptr i32 %v1_1fc45 to i32*
  %v3_1fc45 = load i32, i32* %v2_1fc45, align 4
  %v1_1fc48 = add i32 %v0_1fc45, -48
  %v2_1fc48 = inttoptr i32 %v1_1fc48 to i32*
  %v3_1fc48 = load i32, i32* %v2_1fc48, align 4
  %v2_1fc52 = call i32 @unknown_467b2(i32 %v3_1fc45, i32 %v3_1fc48)
  %v1_1fc57 = load i32, i32* @ebp, align 4
  %v2_1fc57 = add i32 %v1_1fc57, -40
  %v3_1fc57 = inttoptr i32 %v2_1fc57 to i32*
  store i32 %v2_1fc52, i32* %v3_1fc57, align 4
  %v0_1fc5a = load i32, i32* @ebp, align 4
  %v1_1fc5a = add i32 %v0_1fc5a, -40
  %v2_1fc5a = inttoptr i32 %v1_1fc5a to i32*
  %v3_1fc5a = load i32, i32* %v2_1fc5a, align 4
  %v2_1fc5d = add i32 %v0_1fc5a, -52
  %v3_1fc5d = inttoptr i32 %v2_1fc5d to i32*
  store i32 %v3_1fc5a, i32* %v3_1fc5d, align 4
  %v0_1fc60 = load i32, i32* @ebp, align 4
  %v1_1fc60 = add i32 %v0_1fc60, -44
  %v2_1fc60 = inttoptr i32 %v1_1fc60 to i32*
  %v3_1fc60 = load i32, i32* %v2_1fc60, align 4
  %v2_1fc69 = mul i32 %v3_1fc60, 24
  %v2_1fc6e = add i32 %v0_1fc60, -40
  %v3_1fc6e = inttoptr i32 %v2_1fc6e to i32*
  %v4_1fc6e = load i32, i32* %v3_1fc6e, align 4
  %v5_1fc6e = add i32 %v4_1fc6e, %v2_1fc69
  %v1_1fc71 = add i32 %v0_1fc60, -60
  %v2_1fc71 = inttoptr i32 %v1_1fc71 to i32*
  %v3_1fc71 = load i32, i32* %v2_1fc71, align 4
  %v1_1fc74 = add i32 %v0_1fc60, -68
  %v2_1fc74 = inttoptr i32 %v1_1fc74 to i32*
  %v3_1fc74 = load i32, i32* %v2_1fc74, align 4
  %v3_1fc82 = call i32 @unknown_3f5ce(i32 %v3_1fc71, i32 %v5_1fc6e, i32 %v3_1fc74)
  %v0_1fc87 = load i32, i32* @ebp, align 4
  %v1_1fc87 = add i32 %v0_1fc87, -52
  %v2_1fc87 = inttoptr i32 %v1_1fc87 to i32*
  store i32 0, i32* %v2_1fc87, align 4
  %v0_1fc8e = load i32, i32* @ebp, align 4
  %v1_1fc8e = add i32 %v0_1fc8e, -60
  %v2_1fc8e = inttoptr i32 %v1_1fc8e to i32*
  %v3_1fc8e = load i32, i32* %v2_1fc8e, align 4
  %v1_1fc94 = call i32 @unknown_3faa6(i32 %v3_1fc8e)
  store i32 %v1_1fc94, i32* %ebx.global-to-local, align 4
  %v0_1fc9b = load i32, i32* @ebp, align 4
  %v1_1fc9b = add i32 %v0_1fc9b, -64
  %v1_1fca1 = call i32 @unknown_4655e(i32 %v1_1fc9b)
  %v1_1fca6 = inttoptr i32 %v1_1fca1 to i32*
  %v2_1fca6 = load i32, i32* %v1_1fca6, align 4
  %v0_1fca8 = load i32, i32* @ebp, align 4
  %v1_1fca8 = add i32 %v0_1fca8, -60
  %v2_1fca8 = inttoptr i32 %v1_1fca8 to i32*
  %v3_1fca8 = load i32, i32* %v2_1fca8, align 4
  %v1_1fcab = inttoptr i32 %v3_1fca8 to i32*
  %v2_1fcab = load i32, i32* %v1_1fcab, align 4
  %v0_1fcad = load i32, i32* %ebx.global-to-local, align 4
  %v1_1fcb1 = add i32 %v0_1fca8, -40
  %v2_1fcb1 = inttoptr i32 %v1_1fcb1 to i32*
  %v3_1fcb1 = load i32, i32* %v2_1fcb1, align 4
  %v5_1fcbf = call i32 @unknown_46809(i32 %v2_1fcab, i32 %v2_1fca6, i32 %v3_1fcb1, i32 %v0_1fcad)
  %v1_1fcc4 = load i32, i32* @ebp, align 4
  %v2_1fcc4 = add i32 %v1_1fcc4, -52
  %v3_1fcc4 = inttoptr i32 %v2_1fcc4 to i32*
  store i32 %v5_1fcbf, i32* %v3_1fcc4, align 4
  %v0_1fcc7 = load i32, i32* @ebp, align 4
  %v1_1fcc7 = add i32 %v0_1fcc7, -52
  %v2_1fcc7 = inttoptr i32 %v1_1fcc7 to i32*
  %v3_1fcc7 = load i32, i32* %v2_1fcc7, align 4
  %v4_1fcc7 = add i32 %v3_1fcc7, 24
  store i32 %v4_1fcc7, i32* %v2_1fcc7, align 4
  %v0_1fccb = load i32, i32* @ebp, align 4
  %v1_1fccb = add i32 %v0_1fccb, -60
  %v2_1fccb = inttoptr i32 %v1_1fccb to i32*
  %v3_1fccb = load i32, i32* %v2_1fccb, align 4
  %v1_1fcd1 = call i32 @unknown_3faa6(i32 %v3_1fccb)
  store i32 %v1_1fcd1, i32* @ebx, align 4
  %v0_1fcd8 = load i32, i32* @ebp, align 4
  %v1_1fcd8 = add i32 %v0_1fcd8, -60
  %v2_1fcd8 = inttoptr i32 %v1_1fcd8 to i32*
  %v3_1fcd8 = load i32, i32* %v2_1fcd8, align 4
  %v1_1fcdb = add i32 %v3_1fcd8, 4
  %v2_1fcdb = inttoptr i32 %v1_1fcdb to i32*
  %v3_1fcdb = load i32, i32* %v2_1fcdb, align 4
  store i32 %v3_1fcdb, i32* %esi.global-to-local, align 4
  %v1_1fcde = add i32 %v0_1fcd8, -64
  %v1_1fce4 = call i32 @unknown_4655e(i32 %v1_1fcde)
  %v1_1fce9 = inttoptr i32 %v1_1fce4 to i32*
  %v2_1fce9 = load i32, i32* %v1_1fce9, align 4
  %v0_1fceb = load i32, i32* @ebx, align 4
  %v0_1fcef = load i32, i32* @ebp, align 4
  %v1_1fcef = add i32 %v0_1fcef, -52
  %v2_1fcef = inttoptr i32 %v1_1fcef to i32*
  %v3_1fcef = load i32, i32* %v2_1fcef, align 4
  %v0_1fcf6 = load i32, i32* %esi.global-to-local, align 4
  %v5_1fcfd = call i32 @unknown_46809(i32 %v2_1fce9, i32 %v0_1fcf6, i32 %v3_1fcef, i32 %v0_1fceb)
  %v1_1fd02 = load i32, i32* @ebp, align 4
  %v2_1fd02 = add i32 %v1_1fd02, -52
  %v3_1fd02 = inttoptr i32 %v2_1fd02 to i32*
  store i32 %v5_1fcfd, i32* %v3_1fd02, align 4
  %v0_1fd05 = load i32, i32* @ebp, align 4
  %v1_1fd05 = add i32 %v0_1fd05, -60
  %v2_1fd05 = inttoptr i32 %v1_1fd05 to i32*
  %v3_1fd05 = load i32, i32* %v2_1fd05, align 4
  %v1_1fd0b = call i32 @unknown_3faa6(i32 %v3_1fd05)
  %v0_1fd10 = load i32, i32* @ebp, align 4
  %v1_1fd10 = add i32 %v0_1fd10, -60
  %v2_1fd10 = inttoptr i32 %v1_1fd10 to i32*
  %v3_1fd10 = load i32, i32* %v2_1fd10, align 4
  %v1_1fd13 = add i32 %v3_1fd10, 4
  %v2_1fd13 = inttoptr i32 %v1_1fd13 to i32*
  %v3_1fd13 = load i32, i32* %v2_1fd13, align 4
  %v1_1fd19 = inttoptr i32 %v3_1fd10 to i32*
  %v2_1fd19 = load i32, i32* %v1_1fd19, align 4
  %v3_1fd26 = call i32 @unknown_3fad3(i32 %v2_1fd19, i32 %v3_1fd13, i32 %v1_1fd0b)
  %v0_1fd2b = load i32, i32* @ebp, align 4
  %v1_1fd2b = add i32 %v0_1fd2b, -60
  %v2_1fd2b = inttoptr i32 %v1_1fd2b to i32*
  %v3_1fd2b = load i32, i32* %v2_1fd2b, align 4
  %v1_1fd2e = add i32 %v3_1fd2b, 8
  %v2_1fd2e = inttoptr i32 %v1_1fd2e to i32*
  %v3_1fd2e = load i32, i32* %v2_1fd2e, align 4
  %v1_1fd36 = inttoptr i32 %v3_1fd2b to i32*
  %v2_1fd36 = load i32, i32* %v1_1fd36, align 4
  %v2_1fd3a = sub i32 %v3_1fd2e, %v2_1fd36
  %v2_1fd3e = sdiv i32 %v2_1fd3a, 8
  %v3_1fd41 = mul i32 %v2_1fd3e, -1431655765
  %v3_1fd49 = load i32, i32* %v2_1fd2b, align 4
  %v1_1fd4c = inttoptr i32 %v3_1fd49 to i32*
  %v2_1fd4c = load i32, i32* %v1_1fd4c, align 4
  %v3_1fd5c = call i32 @unknown_468a2(i32 %v3_1fd49, i32 %v2_1fd4c, i32 %v3_1fd41)
  %v0_1fd61 = load i32, i32* @ebp, align 4
  %v1_1fd61 = add i32 %v0_1fd61, -60
  %v2_1fd61 = inttoptr i32 %v1_1fd61 to i32*
  %v3_1fd61 = load i32, i32* %v2_1fd61, align 4
  %v1_1fd64 = add i32 %v0_1fd61, -40
  %v2_1fd64 = inttoptr i32 %v1_1fd64 to i32*
  %v3_1fd64 = load i32, i32* %v2_1fd64, align 4
  %v2_1fd67 = inttoptr i32 %v3_1fd61 to i32*
  store i32 %v3_1fd64, i32* %v2_1fd67, align 4
  %v0_1fd69 = load i32, i32* @ebp, align 4
  %v1_1fd69 = add i32 %v0_1fd69, -60
  %v2_1fd69 = inttoptr i32 %v1_1fd69 to i32*
  %v3_1fd69 = load i32, i32* %v2_1fd69, align 4
  %v1_1fd6c = add i32 %v0_1fd69, -52
  %v2_1fd6c = inttoptr i32 %v1_1fd6c to i32*
  %v3_1fd6c = load i32, i32* %v2_1fd6c, align 4
  %v2_1fd6f = add i32 %v3_1fd69, 4
  %v3_1fd6f = inttoptr i32 %v2_1fd6f to i32*
  store i32 %v3_1fd6c, i32* %v3_1fd6f, align 4
  %v0_1fd72 = load i32, i32* @ebp, align 4
  %v1_1fd72 = add i32 %v0_1fd72, -48
  %v2_1fd72 = inttoptr i32 %v1_1fd72 to i32*
  %v3_1fd72 = load i32, i32* %v2_1fd72, align 4
  %v2_1fd7b = mul i32 %v3_1fd72, 24
  %v2_1fd80 = add i32 %v0_1fd72, -40
  %v3_1fd80 = inttoptr i32 %v2_1fd80 to i32*
  %v4_1fd80 = load i32, i32* %v3_1fd80, align 4
  %v5_1fd80 = add i32 %v4_1fd80, %v2_1fd7b
  %v1_1fd83 = add i32 %v0_1fd72, -60
  %v2_1fd83 = inttoptr i32 %v1_1fd83 to i32*
  %v3_1fd83 = load i32, i32* %v2_1fd83, align 4
  %v2_1fd86 = add i32 %v3_1fd83, 8
  %v3_1fd86 = inttoptr i32 %v2_1fd86 to i32*
  store i32 %v5_1fd80, i32* %v3_1fd86, align 4
  %v0_1fd89 = call i32 @function_1fe25()
  ret i32 %v0_1fd89

; uselistorder directives
  uselistorder i32 %v0_1fc60, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_46809, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4655e, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_3f5ce, { 1, 0 }
}

define i32 @function_1fd46(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fd46:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1fd8f() local_unnamed_addr {
dec_label_pc_1fd8f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fd8f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fd8f
}

define i32 @function_1fda6() local_unnamed_addr {
dec_label_pc_1fda6:
  %eax.global-to-local = alloca i32, align 4
  %v0_1fda6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1fda6
}

define i32 @function_1fdc4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fdc4:
  %v0_1fdc4 = load i32, i32* @ebp, align 4
  %v1_1fdc4 = add i32 %v0_1fdc4, -44
  %v2_1fdc4 = inttoptr i32 %v1_1fdc4 to i32*
  %v3_1fdc4 = load i32, i32* %v2_1fdc4, align 4
  %v2_1fdcd = mul i32 %v3_1fdc4, 24
  %v2_1fdd2 = add i32 %v0_1fdc4, -40
  %v3_1fdd2 = inttoptr i32 %v2_1fdd2 to i32*
  %v4_1fdd2 = load i32, i32* %v3_1fdd2, align 4
  %v5_1fdd2 = add i32 %v4_1fdd2, %v2_1fdcd
  %v1_1fdd5 = add i32 %v0_1fdc4, -60
  %v2_1fdd5 = inttoptr i32 %v1_1fdd5 to i32*
  %v3_1fdd5 = load i32, i32* %v2_1fdd5, align 4
  %v2_1fddf = call i32 @unknown_46866(i32 %v3_1fdd5, i32 %v5_1fdd2)
  %v0_1fde4 = call i32 @function_1fe07()
  ret i32 %v0_1fde4
}

define i32 @function_1fde6() local_unnamed_addr {
dec_label_pc_1fde6:
  %ebp.global-to-local = alloca i32, align 4
  %v0_1fde6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1fde6 = add i32 %v0_1fde6, -60
  %v2_1fde6 = inttoptr i32 %v1_1fde6 to i32*
  %v3_1fde6 = load i32, i32* %v2_1fde6, align 4
  %v1_1fdec = call i32 @unknown_3faa6(i32 %v3_1fde6)
  %v1_1fdf5 = add i32 %v0_1fde6, -52
  %v2_1fdf5 = inttoptr i32 %v1_1fdf5 to i32*
  %v3_1fdf5 = load i32, i32* %v2_1fdf5, align 4
  %v1_1fdfc = add i32 %v0_1fde6, -40
  %v2_1fdfc = inttoptr i32 %v1_1fdfc to i32*
  %v3_1fdfc = load i32, i32* %v2_1fdfc, align 4
  %v3_1fe02 = call i32 @unknown_3fad3(i32 %v3_1fdfc, i32 %v3_1fdf5, i32 %v1_1fdec)
  ret i32 %v3_1fe02

; uselistorder directives
  uselistorder i32 %v0_1fde6, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_3fad3, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3faa6, { 3, 2, 1, 0 }
}

define i32 @function_1fe07() local_unnamed_addr {
dec_label_pc_1fe07:
  %v0_1fe07 = load i32, i32* @ebp, align 4
  %v1_1fe07 = add i32 %v0_1fe07, -60
  %v2_1fe07 = inttoptr i32 %v1_1fe07 to i32*
  %v3_1fe07 = load i32, i32* %v2_1fe07, align 4
  %v1_1fe0a = add i32 %v0_1fe07, -48
  %v2_1fe0a = inttoptr i32 %v1_1fe0a to i32*
  %v3_1fe0a = load i32, i32* %v2_1fe0a, align 4
  %v1_1fe11 = add i32 %v0_1fe07, -40
  %v2_1fe11 = inttoptr i32 %v1_1fe11 to i32*
  %v3_1fe11 = load i32, i32* %v2_1fe11, align 4
  %v3_1fe1b = call i32 @unknown_468a2(i32 %v3_1fe07, i32 %v3_1fe11, i32 %v3_1fe0a)
  ret i32 %v3_1fe1b

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_468a2, { 1, 0 }
}

define i32 @function_1fe25() local_unnamed_addr {
dec_label_pc_1fe25:
  %v0_1fe25 = load i32, i32* @ebp, align 4
  %v1_1fe25 = add i32 %v0_1fe25, -12
  %v2_1fe25 = inttoptr i32 %v1_1fe25 to i32*
  %v3_1fe25 = load i32, i32* %v2_1fe25, align 4
  %v1_1fe28 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fe28 = xor i32 %v1_1fe28, %v3_1fe25
  %v3_1fe28 = icmp eq i32 %v2_1fe28, 0
  store i32 %v2_1fe28, i32* @eax, align 4
  br i1 %v3_1fe28, label %bb, label %dec_label_pc_1fe31

bb:                                               ; preds = %dec_label_pc_1fe25
  %v1_1fe2f = call i32 @function_1fe36()
  br label %dec_label_pc_1fe31

dec_label_pc_1fe31:                               ; preds = %bb, %dec_label_pc_1fe25
  %v2_1fe2f = phi i32 [ %v1_1fe2f, %bb ], [ %v2_1fe28, %dec_label_pc_1fe25 ]
  ret i32 %v2_1fe2f
}

define i32 @function_1fe36() local_unnamed_addr {
dec_label_pc_1fe36:
  %v0_1fe36 = load i32, i32* @ebp, align 4
  %v1_1fe36 = add i32 %v0_1fe36, -8
  %v1_1fe39 = inttoptr i32 %v1_1fe36 to i32*
  %v2_1fe39 = load i32, i32* %v1_1fe39, align 4
  store i32 %v2_1fe39, i32* @ebx, align 4
  %v1_1fe3b = inttoptr i32 %v0_1fe36 to i32*
  %v2_1fe3b = load i32, i32* %v1_1fe3b, align 4
  store i32 %v2_1fe3b, i32* @ebp, align 4
  %v0_1fe3c = load i32, i32* @eax, align 4
  ret i32 %v0_1fe3c
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1fe3e:
  %v1_1fe5e = add i32 %arg2, 4
  %v2_1fe6b = call i32 @unknown_46c0e(i32 %arg1, i32 %v1_1fe5e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1fe7f

bb:                                               ; preds = %dec_label_pc_1fe3e
  %v1_1fe7d = call i32 @function_1fe84()
  br label %dec_label_pc_1fe7f

dec_label_pc_1fe7f:                               ; preds = %bb, %dec_label_pc_1fe3e
  %v2_1fe7d = phi i32 [ %v1_1fe7d, %bb ], [ %arg1, %dec_label_pc_1fe3e ]
  ret i32 %v2_1fe7d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1fe84() local_unnamed_addr {
dec_label_pc_1fe84:
  %v0_1fe85 = load i32, i32* @eax, align 4
  ret i32 %v0_1fe85
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE12_Vector_implD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fe88:
  ret i32 %arg1
}

define i32 @function_1fea8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fea8:
  %v0_1feaa = load i32, i32* @ebp, align 4
  %v1_1feaa = add i32 %v0_1feaa, -12
  %v2_1feaa = inttoptr i32 %v1_1feaa to i32*
  %v3_1feaa = load i32, i32* %v2_1feaa, align 4
  %v1_1fead = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_1fead = xor i32 %v1_1fead, %v3_1feaa
  %v3_1fead = icmp eq i32 %v2_1fead, 0
  store i32 %v2_1fead, i32* @eax, align 4
  br i1 %v3_1fead, label %bb, label %dec_label_pc_1feb6

bb:                                               ; preds = %dec_label_pc_1fea8
  %v1_1feb4 = call i32 @function_1febb()
  br label %dec_label_pc_1feb6

dec_label_pc_1feb6:                               ; preds = %bb, %dec_label_pc_1fea8
  %v2_1feb4 = phi i32 [ %v1_1feb4, %bb ], [ %v2_1fead, %dec_label_pc_1fea8 ]
  ret i32 %v2_1feb4
}

define i32 @function_1febb() local_unnamed_addr {
dec_label_pc_1febb:
  %v0_1febc = load i32, i32* @eax, align 4
  ret i32 %v0_1febc
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_1febe:
  %v1_1fedb = call i32 @unknown_46cc8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1feec

bb:                                               ; preds = %dec_label_pc_1febe
  %v1_1feea = call i32 @function_1fef1()
  br label %dec_label_pc_1feec

dec_label_pc_1feec:                               ; preds = %bb, %dec_label_pc_1febe
  %v2_1feea = phi i32 [ %v1_1feea, %bb ], [ 0, %dec_label_pc_1febe ]
  ret i32 %v2_1feea
}

define i32 @function_1fef1() local_unnamed_addr {
dec_label_pc_1fef1:
  %v0_1fef2 = load i32, i32* @eax, align 4
  ret i32 %v0_1fef2
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_1fef4:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_1ff0f = add i32 %tmp101, 8
  %v2_1ff0f = inttoptr i32 %v1_1ff0f to i32*
  %v3_1ff0f = load i32, i32* %v2_1ff0f, align 4
  %v2_1ff17 = load i32, i32* %arg1, align 4
  %v2_1ff1b = sub i32 %v3_1ff0f, %v2_1ff17
  %v2_1ff1f = sdiv i32 %v2_1ff1b, 8
  %v3_1ff22 = mul i32 %v2_1ff1f, -1431655765
  %v3_1ff3d = call i32 @unknown_46c6e(i32 %tmp101, i32 %v2_1ff17, i32 %v3_1ff22)
  %v1_1ff48 = call i32 @unknown_3fd7c(i32 %tmp101)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ff59

bb:                                               ; preds = %dec_label_pc_1fef4
  %v1_1ff57 = call i32 @function_1ff77()
  store i32 %v1_1ff57, i32* @eax, align 4
  br label %dec_label_pc_1ff59

dec_label_pc_1ff59:                               ; preds = %bb, %dec_label_pc_1fef4
  %v0_1ff59 = call i32 @function_1ff72()
  ret i32 %v0_1ff59

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 2, 0 }
}

define i32 @function_1ff5c() local_unnamed_addr {
dec_label_pc_1ff5c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1ff5c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ff5c
}

define i32 @function_1ff72() local_unnamed_addr {
dec_label_pc_1ff72:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ff77() local_unnamed_addr {
dec_label_pc_1ff77:
  %v0_1ff7c = load i32, i32* @eax, align 4
  ret i32 %v0_1ff7c
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ff7e:
  ret i32 %arg1
}

define i32 @function_1ffa2(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ffa2:
  %v0_1ffa2 = load i1, i1* @zf, align 1
  br i1 %v0_1ffa2, label %bb, label %dec_label_pc_1ffa2.dec_label_pc_1ffa4_crit_edge

dec_label_pc_1ffa2.dec_label_pc_1ffa4_crit_edge:  ; preds = %dec_label_pc_1ffa2
  %v2_1ffa2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1ffa4

bb:                                               ; preds = %dec_label_pc_1ffa2
  %v1_1ffa2 = call i32 @function_1ffa9()
  br label %dec_label_pc_1ffa4

dec_label_pc_1ffa4:                               ; preds = %dec_label_pc_1ffa2.dec_label_pc_1ffa4_crit_edge, %bb
  %v2_1ffa2 = phi i32 [ %v2_1ffa2.pre, %dec_label_pc_1ffa2.dec_label_pc_1ffa4_crit_edge ], [ %v1_1ffa2, %bb ]
  ret i32 %v2_1ffa2

; uselistorder directives
  uselistorder label %dec_label_pc_1ffa4, { 1, 0 }
}

define i32 @function_1ffa9() local_unnamed_addr {
dec_label_pc_1ffa9:
  %v0_1ffaa = load i32, i32* @eax, align 4
  ret i32 %v0_1ffaa
}

define i32 @_ZSt8_DestroyIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES8_EvT_SA_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1ffab:
  %v2_1ffdb = call i32 @unknown_46e3c(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_1ffec

bb:                                               ; preds = %dec_label_pc_1ffab
  %v1_1ffea = call i32 @function_1fff1()
  br label %dec_label_pc_1ffec

dec_label_pc_1ffec:                               ; preds = %bb, %dec_label_pc_1ffab
  %v2_1ffea = phi i32 [ %v1_1ffea, %bb ], [ 0, %dec_label_pc_1ffab ]
  ret i32 %v2_1ffea
}

define i32 @function_1fff1() local_unnamed_addr {
dec_label_pc_1fff1:
  %v0_1fff2 = load i32, i32* @eax, align 4
  ret i32 %v0_1fff2
}

define i32 @_ZN5boost9addressofISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESaIS9_EEEEPT_RSC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_1fff3:
  %stack_var_-20 = alloca i32, align 4
  %v2_20011 = ptrtoint i32* %stack_var_-20 to i32
  %v2_20017 = call i32 @unknown_46ec7(i32 %v2_20011, i32 %arg1)
  %v1_20022 = call i32 @unknown_46eff(i32 %v2_20011)
  %v2_20032 = call i32 @unknown_46f2e(i32 %v1_20022, i32 0)
  store i32 %v2_20032, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20043

bb:                                               ; preds = %dec_label_pc_1fff3
  %v1_20041 = call i32 @function_20048()
  br label %dec_label_pc_20043

dec_label_pc_20043:                               ; preds = %bb, %dec_label_pc_1fff3
  %v3_20041 = phi i32 [ %v1_20041, %bb ], [ %v2_20032, %dec_label_pc_1fff3 ]
  ret i32 %v3_20041
}

define i32 @function_20048() local_unnamed_addr {
dec_label_pc_20048:
  %v0_20049 = load i32, i32* @eax, align 4
  ret i32 %v0_20049
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEC1ERKSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2004a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2006d = call i32 @unknown_3c546(i32 %tmp102)
  %v1_20075 = inttoptr i32 %arg2 to i32*
  %v2_20075 = load i32, i32* %v1_20075, align 4
  store i32 %v2_20075, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20088

bb:                                               ; preds = %dec_label_pc_2004a
  %v1_20086 = call i32 @function_2008d()
  br label %dec_label_pc_20088

dec_label_pc_20088:                               ; preds = %bb, %dec_label_pc_2004a
  %v2_20086 = phi i32 [ %v1_20086, %bb ], [ 0, %dec_label_pc_2004a ]
  ret i32 %v2_20086
}

define i32 @function_2008d() local_unnamed_addr {
dec_label_pc_2008d:
  %v0_2008e = load i32, i32* @eax, align 4
  ret i32 %v0_2008e
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SK_E4typeERKNS0_13auto_any_baseE() local_unnamed_addr {
dec_label_pc_2008f:
  %eax.global-to-local = alloca i32, align 4
  %v2_20090 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_20090
}

define i32 @function_20094(i32 %arg1) local_unnamed_addr {
dec_label_pc_20094:
  %v0_20094 = load i32, i32* @ebx, align 4
  %v1_20094 = add i32 %v0_20094, 1166608453
  %v2_20094 = inttoptr i32 %v1_20094 to i8*
  %v3_20094 = load i8, i8* %v2_20094, align 1
  %v4_20094 = load i32, i32* @ecx, align 4
  %v5_20094 = trunc i32 %v4_20094 to i8
  %v6_20094 = sub i8 %v3_20094, %v5_20094
  store i8 %v6_20094, i8* %v2_20094, align 1
  %v0_2009c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_200a1 = load i32, i32* @ebp, align 4
  %v2_200a1 = add i32 %v1_200a1, -12
  %v3_200a1 = inttoptr i32 %v2_200a1 to i32*
  store i32 %v0_2009c, i32* %v3_200a1, align 4
  %v0_200a6 = load i32, i32* @ebp, align 4
  %v1_200a6 = add i32 %v0_200a6, -28
  %v2_200a6 = inttoptr i32 %v1_200a6 to i32*
  %v3_200a6 = load i32, i32* %v2_200a6, align 4
  store i32 %v3_200a6, i32* @eax, align 4
  %v1_200a9 = add i32 %v0_200a6, -12
  %v2_200a9 = inttoptr i32 %v1_200a9 to i32*
  %v3_200a9 = load i32, i32* %v2_200a9, align 4
  %v1_200ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_200ac = icmp eq i32 %v1_200ac, %v3_200a9
  br i1 %v3_200ac, label %bb, label %dec_label_pc_200b5

bb:                                               ; preds = %dec_label_pc_20094
  %v1_200b3 = call i32 @function_200ba()
  br label %dec_label_pc_200b5

dec_label_pc_200b5:                               ; preds = %bb, %dec_label_pc_20094
  %v2_200b3 = phi i32 [ %v1_200b3, %bb ], [ %v3_200a6, %dec_label_pc_20094 ]
  ret i32 %v2_200b3
}

define i32 @function_200ba() local_unnamed_addr {
dec_label_pc_200ba:
  %v0_200bb = load i32, i32* @eax, align 4
  ret i32 %v0_200bb
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEERT_PSD_(i32 %arg1) local_unnamed_addr {
dec_label_pc_200bc:
  ret i32 %arg1
}

define i32 @function_200e2(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_200e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_200e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_200e7() local_unnamed_addr {
dec_label_pc_200e7:
  %eax.global-to-local = alloca i32, align 4
  %v0_200e8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_200e8
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEENS_14range_iteratorIT_E4typeERSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_200e9:
  %v2_20113 = call i32 @unknown_47057(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2012a

bb:                                               ; preds = %dec_label_pc_200e9
  %v1_20128 = call i32 @function_2012f()
  br label %dec_label_pc_2012a

dec_label_pc_2012a:                               ; preds = %bb, %dec_label_pc_200e9
  %v2_20128 = phi i32 [ %v1_20128, %bb ], [ %arg1, %dec_label_pc_200e9 ]
  ret i32 %v2_20128

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2012f() local_unnamed_addr {
dec_label_pc_2012f:
  %v0_20130 = load i32, i32* @eax, align 4
  ret i32 %v0_20130
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEEEC1ERKSG_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20134:
  %v1_20157 = call i32 @unknown_3c630(i32 %arg1)
  ret i32 %v1_20157
}

define i32 @function_2015c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2015c:
  %v0_2015c = load i32, i32* @ebp, align 4
  %v1_2015c = add i32 %v0_2015c, -28
  %v2_2015c = inttoptr i32 %v1_2015c to i32*
  %v3_2015c = load i32, i32* %v2_2015c, align 4
  %v1_2015f = add i32 %v0_2015c, -32
  %v2_2015f = inttoptr i32 %v1_2015f to i32*
  %v3_2015f = load i32, i32* %v2_2015f, align 4
  %v1_20162 = inttoptr i32 %v3_2015f to i32*
  %v2_20162 = load i32, i32* %v1_20162, align 4
  %v2_20164 = inttoptr i32 %v3_2015c to i32*
  store i32 %v2_20162, i32* %v2_20164, align 4
  %v0_20166 = load i32, i32* @ebp, align 4
  %v1_20166 = add i32 %v0_20166, -12
  %v2_20166 = inttoptr i32 %v1_20166 to i32*
  %v3_20166 = load i32, i32* %v2_20166, align 4
  %v1_20169 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20169 = xor i32 %v1_20169, %v3_20166
  %v3_20169 = icmp eq i32 %v2_20169, 0
  store i32 %v2_20169, i32* @eax, align 4
  br i1 %v3_20169, label %bb, label %dec_label_pc_20172

bb:                                               ; preds = %dec_label_pc_2015c
  %v1_20170 = call i32 @function_20177()
  br label %dec_label_pc_20172

dec_label_pc_20172:                               ; preds = %bb, %dec_label_pc_2015c
  %v2_20170 = phi i32 [ %v1_20170, %bb ], [ %v2_20169, %dec_label_pc_2015c ]
  ret i32 %v2_20170
}

define i32 @function_20177() local_unnamed_addr {
dec_label_pc_20177:
  %v0_20178 = load i32, i32* @eax, align 4
  ret i32 %v0_20178
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEENS_14range_iteratorIT_E4typeERSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20179:
  ret i32 %arg2
}

define i32 @function_2018e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2018e:
  %v2_2018e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2018e = load i32, i32* @eax, align 4
  %v4_2018e = trunc i32 %v3_2018e to i8
  %v5_2018e = add i8 %v4_2018e, %v2_2018e
  %v21_2018e = inttoptr i32 %v3_2018e to i8*
  store i8 %v5_2018e, i8* %v21_2018e, align 1
  %v0_20190 = load i32, i32* @ecx, align 4
  %v1_20190 = add i32 %v0_20190, -1070468027
  %v2_20190 = inttoptr i32 %v1_20190 to i8*
  %v3_20190 = load i8, i8* %v2_20190, align 1
  %v5_20190 = trunc i32 %v0_20190 to i8
  %v6_20190 = add i8 %v3_20190, %v5_20190
  store i8 %v6_20190, i8* %v2_20190, align 1
  %v0_20196 = load i32, i32* @ebp, align 4
  %v1_20196 = add i32 %v0_20196, -28
  %v2_20196 = inttoptr i32 %v1_20196 to i32*
  %v3_20196 = load i32, i32* %v2_20196, align 4
  %v1_20199 = add i32 %v0_20196, -32
  %v2_20199 = inttoptr i32 %v1_20199 to i32*
  %v3_20199 = load i32, i32* %v2_20199, align 4
  %v2_201a3 = call i32 @unknown_47131(i32 %v3_20196, i32 %v3_20199)
  %v0_201ab = load i32, i32* @ebp, align 4
  %v1_201ab = add i32 %v0_201ab, -28
  %v2_201ab = inttoptr i32 %v1_201ab to i32*
  %v3_201ab = load i32, i32* %v2_201ab, align 4
  store i32 %v3_201ab, i32* @eax, align 4
  %v1_201ae = add i32 %v0_201ab, -12
  %v2_201ae = inttoptr i32 %v1_201ae to i32*
  %v3_201ae = load i32, i32* %v2_201ae, align 4
  %v1_201b1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_201b1 = icmp eq i32 %v1_201b1, %v3_201ae
  br i1 %v3_201b1, label %bb, label %dec_label_pc_201ba

bb:                                               ; preds = %dec_label_pc_2018e
  %v1_201b8 = call i32 @function_201bf()
  br label %dec_label_pc_201ba

dec_label_pc_201ba:                               ; preds = %bb, %dec_label_pc_2018e
  %v2_201b8 = phi i32 [ %v1_201b8, %bb ], [ %v3_201ab, %dec_label_pc_2018e ]
  ret i32 %v2_201b8
}

define i32 @function_201bf() local_unnamed_addr {
dec_label_pc_201bf:
  %v0_201c0 = load i32, i32* @eax, align 4
  ret i32 %v0_201c0
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPNS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESt6vectorISB_SaISB_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SN_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_201c3:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_201e9

bb:                                               ; preds = %dec_label_pc_201c3
  %v2_201e7 = call i32 @function_201ee(i32 %arg1)
  br label %dec_label_pc_201e9

dec_label_pc_201e9:                               ; preds = %bb, %dec_label_pc_201c3
  %v3_201e7 = phi i32 [ %v2_201e7, %bb ], [ %arg1, %dec_label_pc_201c3 ]
  ret i32 %v3_201e7
}

define i32 @function_201ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_201ee:
  %v0_201ef = load i32, i32* @eax, align 4
  ret i32 %v0_201ef
}

define i32 @_ZN9__gnu_cxxeqIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEEEbRKNS_17__normal_iteratorIT_T0_EESJ_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_201f0:
  ret i32 %arg2
}

define i32 @function_20206(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20206:
  %ebx.global-to-local = alloca i32, align 4
  %v2_20206 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_20206 = load i32, i32* @eax, align 4
  %v4_20206 = trunc i32 %v3_20206 to i8
  %v5_20206 = add i8 %v4_20206, %v2_20206
  %v21_20206 = inttoptr i32 %v3_20206 to i8*
  store i8 %v5_20206, i8* %v21_20206, align 1
  %v0_20208 = load i32, i32* @ecx, align 4
  %v1_20208 = add i32 %v0_20208, -1070468027
  %v2_20208 = inttoptr i32 %v1_20208 to i8*
  %v3_20208 = load i8, i8* %v2_20208, align 1
  %v5_20208 = trunc i32 %v0_20208 to i8
  %v6_20208 = add i8 %v3_20208, %v5_20208
  store i8 %v6_20208, i8* %v2_20208, align 1
  %v0_2020e = load i32, i32* @ebp, align 4
  %v1_2020e = add i32 %v0_2020e, -28
  %v2_2020e = inttoptr i32 %v1_2020e to i32*
  %v3_2020e = load i32, i32* %v2_2020e, align 4
  %v1_20214 = call i32 @unknown_46c26(i32 %v3_2020e)
  %v1_20219 = inttoptr i32 %v1_20214 to i32*
  %v2_20219 = load i32, i32* %v1_20219, align 4
  store i32 %v2_20219, i32* %ebx.global-to-local, align 4
  %v0_2021b = load i32, i32* @ebp, align 4
  %v1_2021b = add i32 %v0_2021b, -32
  %v2_2021b = inttoptr i32 %v1_2021b to i32*
  %v3_2021b = load i32, i32* %v2_2021b, align 4
  %v1_20221 = call i32 @unknown_46c26(i32 %v3_2021b)
  %v1_20226 = inttoptr i32 %v1_20221 to i32*
  %v2_20226 = load i32, i32* %v1_20226, align 4
  %v0_20228 = load i32, i32* %ebx.global-to-local, align 4
  %v12_20228 = icmp eq i32 %v0_20228, %v2_20226
  %v1_2022a = zext i1 %v12_20228 to i32
  %v3_2022a = and i32 %v2_20226, -256
  %v4_2022a = or i32 %v1_2022a, %v3_2022a
  store i32 %v4_2022a, i32* @eax, align 4
  %v0_2022d = load i32, i32* @ebp, align 4
  %v1_2022d = add i32 %v0_2022d, -12
  %v2_2022d = inttoptr i32 %v1_2022d to i32*
  %v3_2022d = load i32, i32* %v2_2022d, align 4
  %v1_20230 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20230 = icmp eq i32 %v1_20230, %v3_2022d
  br i1 %v3_20230, label %bb, label %dec_label_pc_20239

bb:                                               ; preds = %dec_label_pc_20206
  %v1_20237 = call i32 @function_2023e()
  br label %dec_label_pc_20239

dec_label_pc_20239:                               ; preds = %bb, %dec_label_pc_20206
  %v2_20237 = phi i32 [ %v1_20237, %bb ], [ %v4_2022a, %dec_label_pc_20206 ]
  ret i32 %v2_20237

; uselistorder directives
  uselistorder i32 %v2_20226, { 1, 0 }
  uselistorder i32 (i32)* @unknown_46c26, { 1, 0 }
}

define i32 @function_2023e() local_unnamed_addr {
dec_label_pc_2023e:
  %v0_20243 = load i32, i32* @eax, align 4
  ret i32 %v0_20243
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20244:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2025e = load i32, i32* %arg1, align 4
  %v1_20260 = add i32 %v2_2025e, 24
  store i32 %v1_20260, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20277

bb:                                               ; preds = %dec_label_pc_20244
  %v2_20275 = call i32 @function_2027c(i32 %tmp100)
  br label %dec_label_pc_20277

dec_label_pc_20277:                               ; preds = %bb, %dec_label_pc_20244
  %v3_20275 = phi i32 [ %v2_20275, %bb ], [ %tmp100, %dec_label_pc_20244 ]
  ret i32 %v3_20275
}

define i32 @function_2027c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2027c:
  %v0_2027d = load i32, i32* @eax, align 4
  ret i32 %v0_2027d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEEdeEv() local_unnamed_addr {
dec_label_pc_2027e:
  %eax.global-to-local = alloca i32, align 4
  %v2_2027f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2027f
}

define i32 @function_20282(i32 %arg1) local_unnamed_addr {
dec_label_pc_20282:
  %v0_20283 = load i32, i32* @ebx, align 4
  %v1_20283 = add i32 %v0_20283, 1166608453
  %v2_20283 = inttoptr i32 %v1_20283 to i8*
  %v3_20283 = load i8, i8* %v2_20283, align 1
  %v4_20283 = load i32, i32* @ecx, align 4
  %v5_20283 = trunc i32 %v4_20283 to i8
  %v6_20283 = sub i8 %v3_20283, %v5_20283
  store i8 %v6_20283, i8* %v2_20283, align 1
  %v0_2028b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20290 = load i32, i32* @ebp, align 4
  %v2_20290 = add i32 %v1_20290, -12
  %v3_20290 = inttoptr i32 %v2_20290 to i32*
  store i32 %v0_2028b, i32* %v3_20290, align 4
  %v0_20295 = load i32, i32* @ebp, align 4
  %v1_20295 = add i32 %v0_20295, -28
  %v2_20295 = inttoptr i32 %v1_20295 to i32*
  %v3_20295 = load i32, i32* %v2_20295, align 4
  %v1_20298 = inttoptr i32 %v3_20295 to i32*
  %v2_20298 = load i32, i32* %v1_20298, align 4
  store i32 %v2_20298, i32* @eax, align 4
  %v1_2029a = add i32 %v0_20295, -12
  %v2_2029a = inttoptr i32 %v1_2029a to i32*
  %v3_2029a = load i32, i32* %v2_2029a, align 4
  %v1_2029d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2029d = icmp eq i32 %v1_2029d, %v3_2029a
  br i1 %v3_2029d, label %bb, label %dec_label_pc_202a6

bb:                                               ; preds = %dec_label_pc_20282
  %v1_202a4 = call i32 @function_202ab()
  br label %dec_label_pc_202a6

dec_label_pc_202a6:                               ; preds = %bb, %dec_label_pc_20282
  %v2_202a4 = phi i32 [ %v1_202a4, %bb ], [ %v2_20298, %dec_label_pc_20282 ]
  ret i32 %v2_202a4
}

define i32 @function_202ab() local_unnamed_addr {
dec_label_pc_202ab:
  %v0_202ac = load i32, i32* @eax, align 4
  ret i32 %v0_202ac
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E13apply_visitorI20CAffectedKeysVisitorEENT_11result_typeERSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_202ae:
  %stack_var_-20 = alloca i32, align 4
  %v2_202d2 = ptrtoint i32* %stack_var_-20 to i32
  %v2_202d8 = call i32 @unknown_472b0(i32 %v2_202d2, i32 %arg2)
  %v2_202ea = call i32 @unknown_472e8(i32 %arg1, i32 %v2_202d2)
  ret i32 0
}

define i32 @function_202fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_202fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_202ff() local_unnamed_addr {
dec_label_pc_202ff:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_202ff = load i32, i32* %ecx.global-to-local, align 4
  %v1_202ff = add i32 %v0_202ff, -1
  store i32 %v1_202ff, i32* %ecx.global-to-local, align 4
  %v0_20301 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_20301
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CKeyIDE9constructEPS1_RKS1_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20302:
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg2 to i32
  %v1_20338 = icmp eq i32* %arg2, null
  br i1 %v1_20338, label %dec_label_pc_2035b, label %dec_label_pc_2033c

dec_label_pc_2033c:                               ; preds = %dec_label_pc_20302
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v1_2033f = inttoptr i32 %arg3 to i32*
  %v2_2033f = load i32, i32* %v1_2033f, align 4
  store i32 %v2_2033f, i32* %arg2, align 4
  %v1_20343 = add i32 %arg3, 4
  %v2_20343 = inttoptr i32 %v1_20343 to i32*
  %v3_20343 = load i32, i32* %v2_20343, align 4
  %v2_20346 = add i32 %tmp104, 4
  %v3_20346 = inttoptr i32 %v2_20346 to i32*
  store i32 %v3_20343, i32* %v3_20346, align 4
  %v0_20349 = load i32, i32* %edx.global-to-local, align 4
  %v1_20349 = add i32 %v0_20349, 8
  %v2_20349 = inttoptr i32 %v1_20349 to i32*
  %v3_20349 = load i32, i32* %v2_20349, align 4
  %v2_2034c = add i32 %tmp104, 8
  %v3_2034c = inttoptr i32 %v2_2034c to i32*
  store i32 %v3_20349, i32* %v3_2034c, align 4
  %v0_2034f = load i32, i32* %edx.global-to-local, align 4
  %v1_2034f = add i32 %v0_2034f, 12
  %v2_2034f = inttoptr i32 %v1_2034f to i32*
  %v3_2034f = load i32, i32* %v2_2034f, align 4
  %v2_20352 = add i32 %tmp104, 12
  %v3_20352 = inttoptr i32 %v2_20352 to i32*
  store i32 %v3_2034f, i32* %v3_20352, align 4
  %v0_20355 = load i32, i32* %edx.global-to-local, align 4
  %v1_20355 = add i32 %v0_20355, 16
  %v2_20355 = inttoptr i32 %v1_20355 to i32*
  %v3_20355 = load i32, i32* %v2_20355, align 4
  store i32 %v3_20355, i32* %edx.global-to-local, align 4
  %v2_20358 = add i32 %tmp104, 16
  %v3_20358 = inttoptr i32 %v2_20358 to i32*
  store i32 %v3_20355, i32* %v3_20358, align 4
  br label %dec_label_pc_2035b

dec_label_pc_2035b:                               ; preds = %dec_label_pc_2033c, %dec_label_pc_20302
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20367

bb:                                               ; preds = %dec_label_pc_2035b
  %v1_20365 = call i32 @function_2036c()
  br label %dec_label_pc_20367

dec_label_pc_20367:                               ; preds = %bb, %dec_label_pc_2035b
  %v2_20365 = phi i32 [ %v1_20365, %bb ], [ 0, %dec_label_pc_2035b ]
  ret i32 %v2_20365

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
}

define i32 @function_2036c() local_unnamed_addr {
dec_label_pc_2036c:
  %v0_2036d = load i32, i32* @eax, align 4
  ret i32 %v0_2036d
}

define i32 @_ZNSt6vectorI6CKeyIDSaIS0_EE13_M_insert_auxEN9__gnu_cxx17__normal_iteratorIPS0_S2_EERKS0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2036e:
  ret i32 %arg1
}

define i32 @function_2037c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2037c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2037c = load i32, i32* @ebp, align 4
  %v1_2037c = add i32 %v0_2037c, 12
  %v2_2037c = inttoptr i32 %v1_2037c to i32*
  %v3_2037c = load i32, i32* %v2_2037c, align 4
  store i32 %v3_2037c, i32* %eax.global-to-local, align 4
  %v2_2037f = add i32 %v0_2037c, -64
  %v3_2037f = inttoptr i32 %v2_2037f to i32*
  store i32 %v3_2037c, i32* %v3_2037f, align 4
  %v0_20382 = load i32, i32* @ebp, align 4
  %v1_20382 = add i32 %v0_20382, 16
  %v2_20382 = inttoptr i32 %v1_20382 to i32*
  %v3_20382 = load i32, i32* %v2_20382, align 4
  store i32 %v3_20382, i32* %eax.global-to-local, align 4
  %v2_20385 = add i32 %v0_20382, -68
  %v3_20385 = inttoptr i32 %v2_20385 to i32*
  store i32 %v3_20382, i32* %v3_20385, align 4
  %v0_20388 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2038e = load i32, i32* @ebp, align 4
  %v2_2038e = add i32 %v1_2038e, -12
  %v3_2038e = inttoptr i32 %v2_2038e to i32*
  store i32 %v0_20388, i32* %v3_2038e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_20393 = load i32, i32* @ebp, align 4
  %v1_20393 = add i32 %v0_20393, -60
  %v2_20393 = inttoptr i32 %v1_20393 to i32*
  %v3_20393 = load i32, i32* %v2_20393, align 4
  store i32 %v3_20393, i32* %eax.global-to-local, align 4
  %v1_20396 = add i32 %v3_20393, 4
  %v2_20396 = inttoptr i32 %v1_20396 to i32*
  %v3_20396 = load i32, i32* %v2_20396, align 4
  %v3_20399 = load i32, i32* %v2_20393, align 4
  store i32 %v3_20399, i32* %eax.global-to-local, align 4
  %v1_2039c = add i32 %v3_20399, 8
  %v2_2039c = inttoptr i32 %v1_2039c to i32*
  %v3_2039c = load i32, i32* %v2_2039c, align 4
  store i32 %v3_2039c, i32* %eax.global-to-local, align 4
  %v12_2039f = icmp eq i32 %v3_20396, %v3_2039c
  br i1 %v12_2039f, label %bb, label %dec_label_pc_203a7

bb:                                               ; preds = %dec_label_pc_2037c
  %v1_203a1 = call i32 @function_20454()
  store i32 %v1_203a1, i32* %eax.global-to-local, align 4
  %v0_203a7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_203a7

dec_label_pc_203a7:                               ; preds = %bb, %dec_label_pc_2037c
  %v0_203b6 = phi i32 [ %v0_203a7.pre, %bb ], [ %v0_20393, %dec_label_pc_2037c ]
  %v1_203a7 = add i32 %v0_203b6, -60
  %v2_203a7 = inttoptr i32 %v1_203a7 to i32*
  %v3_203a7 = load i32, i32* %v2_203a7, align 4
  store i32 %v3_203a7, i32* %eax.global-to-local, align 4
  %v1_203aa = add i32 %v3_203a7, 4
  %v2_203aa = inttoptr i32 %v1_203aa to i32*
  %v3_203aa = load i32, i32* %v2_203aa, align 4
  store i32 %v3_203aa, i32* %eax.global-to-local, align 4
  %v1_203ad = add i32 %v3_203aa, -20
  %v3_203b0 = load i32, i32* %v2_203a7, align 4
  store i32 %v3_203b0, i32* %eax.global-to-local, align 4
  %v1_203b3 = add i32 %v3_203b0, 4
  %v2_203b3 = inttoptr i32 %v1_203b3 to i32*
  %v3_203b3 = load i32, i32* %v2_203b3, align 4
  %v3_203b6 = load i32, i32* %v2_203a7, align 4
  store i32 %v3_203b6, i32* %eax.global-to-local, align 4
  %v3_203c4 = call i32 @unknown_40670(i32 %v3_203b6, i32 %v3_203b3, i32 %v1_203ad)
  store i32 %v3_203c4, i32* %eax.global-to-local, align 4
  %v0_203c9 = load i32, i32* @ebp, align 4
  %v1_203c9 = add i32 %v0_203c9, -60
  %v2_203c9 = inttoptr i32 %v1_203c9 to i32*
  %v3_203c9 = load i32, i32* %v2_203c9, align 4
  store i32 %v3_203c9, i32* %eax.global-to-local, align 4
  %v1_203cc = add i32 %v3_203c9, 4
  %v2_203cc = inttoptr i32 %v1_203cc to i32*
  %v3_203cc = load i32, i32* %v2_203cc, align 4
  store i32 %v3_203cc, i32* %eax.global-to-local, align 4
  %v1_203cf = add i32 %v3_203cc, 20
  %v3_203d2 = load i32, i32* %v2_203c9, align 4
  store i32 %v3_203d2, i32* %eax.global-to-local, align 4
  %v2_203d5 = add i32 %v3_203d2, 4
  %v3_203d5 = inttoptr i32 %v2_203d5 to i32*
  store i32 %v1_203cf, i32* %v3_203d5, align 4
  %v0_203d8 = load i32, i32* @ebp, align 4
  %v1_203d8 = add i32 %v0_203d8, -68
  %v2_203d8 = inttoptr i32 %v1_203d8 to i32*
  %v3_203d8 = load i32, i32* %v2_203d8, align 4
  store i32 %v3_203d8, i32* %eax.global-to-local, align 4
  %v1_203db = inttoptr i32 %v3_203d8 to i32*
  %v2_203db = load i32, i32* %v1_203db, align 4
  %v2_203dd = add i32 %v0_203d8, -32
  %v3_203dd = inttoptr i32 %v2_203dd to i32*
  store i32 %v2_203db, i32* %v3_203dd, align 4
  %v0_203e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_203e0 = add i32 %v0_203e0, 4
  %v2_203e0 = inttoptr i32 %v1_203e0 to i32*
  %v3_203e0 = load i32, i32* %v2_203e0, align 4
  %v1_203e3 = load i32, i32* @ebp, align 4
  %v2_203e3 = add i32 %v1_203e3, -28
  %v3_203e3 = inttoptr i32 %v2_203e3 to i32*
  store i32 %v3_203e0, i32* %v3_203e3, align 4
  %v0_203e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_203e6 = add i32 %v0_203e6, 8
  %v2_203e6 = inttoptr i32 %v1_203e6 to i32*
  %v3_203e6 = load i32, i32* %v2_203e6, align 4
  %v1_203e9 = load i32, i32* @ebp, align 4
  %v2_203e9 = add i32 %v1_203e9, -24
  %v3_203e9 = inttoptr i32 %v2_203e9 to i32*
  store i32 %v3_203e6, i32* %v3_203e9, align 4
  %v0_203ec = load i32, i32* %eax.global-to-local, align 4
  %v1_203ec = add i32 %v0_203ec, 12
  %v2_203ec = inttoptr i32 %v1_203ec to i32*
  %v3_203ec = load i32, i32* %v2_203ec, align 4
  %v1_203ef = load i32, i32* @ebp, align 4
  %v2_203ef = add i32 %v1_203ef, -20
  %v3_203ef = inttoptr i32 %v2_203ef to i32*
  store i32 %v3_203ec, i32* %v3_203ef, align 4
  %v4_203ef = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_203ef

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19 }
}

define i32 @function_203f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_203f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_203f2 = load i32, i32* @eax, align 4
  %v1_203f2 = add i32 %v0_203f2, 16
  %v2_203f2 = inttoptr i32 %v1_203f2 to i32*
  %v3_203f2 = load i32, i32* %v2_203f2, align 4
  store i32 %v3_203f2, i32* %eax.global-to-local, align 4
  %v1_203f5 = load i32, i32* @ebp, align 4
  %v2_203f5 = add i32 %v1_203f5, -16
  %v3_203f5 = inttoptr i32 %v2_203f5 to i32*
  store i32 %v3_203f2, i32* %v3_203f5, align 4
  %v0_203f8 = load i32, i32* @ebp, align 4
  %v1_203f8 = add i32 %v0_203f8, -60
  %v2_203f8 = inttoptr i32 %v1_203f8 to i32*
  %v3_203f8 = load i32, i32* %v2_203f8, align 4
  store i32 %v3_203f8, i32* %eax.global-to-local, align 4
  %v1_203fb = add i32 %v3_203f8, 4
  %v2_203fb = inttoptr i32 %v1_203fb to i32*
  %v3_203fb = load i32, i32* %v2_203fb, align 4
  store i32 %v3_203fb, i32* %eax.global-to-local, align 4
  %v1_203fe = add i32 %v3_203fb, -20
  store i32 %v1_203fe, i32* @esi, align 4
  %v3_20401 = load i32, i32* %v2_203f8, align 4
  store i32 %v3_20401, i32* %eax.global-to-local, align 4
  %v1_20404 = add i32 %v3_20401, 4
  %v2_20404 = inttoptr i32 %v1_20404 to i32*
  %v3_20404 = load i32, i32* %v2_20404, align 4
  %v1_20407 = add i32 %v3_20404, -40
  store i32 %v1_20407, i32* @ebx, align 4
  %v1_2040a = add i32 %v0_203f8, -64
  store i32 %v1_2040a, i32* %eax.global-to-local, align 4
  %v1_20410 = call i32 @unknown_47416(i32 %v1_2040a)
  store i32 %v1_20410, i32* %eax.global-to-local, align 4
  %v1_20415 = inttoptr i32 %v1_20410 to i32*
  %v2_20415 = load i32, i32* %v1_20415, align 4
  store i32 %v2_20415, i32* %eax.global-to-local, align 4
  %v0_20417 = load i32, i32* @esi, align 4
  %v0_2041b = load i32, i32* @ebx, align 4
  %v3_20422 = call i32 @unknown_47443(i32 %v2_20415, i32 %v0_2041b, i32 %v0_20417)
  %v0_20427 = load i32, i32* @ebp, align 4
  %v1_20427 = add i32 %v0_20427, -64
  store i32 %v1_20427, i32* %eax.global-to-local, align 4
  %v1_2042d = call i32 @unknown_474aa(i32 %v1_20427)
  store i32 %v1_2042d, i32* %eax.global-to-local, align 4
  %v0_20432 = load i32, i32* @ebp, align 4
  %v1_20432 = add i32 %v0_20432, -32
  %v2_20432 = inttoptr i32 %v1_20432 to i32*
  %v3_20432 = load i32, i32* %v2_20432, align 4
  %v2_20435 = inttoptr i32 %v1_2042d to i32*
  store i32 %v3_20432, i32* %v2_20435, align 4
  %v0_20437 = load i32, i32* @ebp, align 4
  %v1_20437 = add i32 %v0_20437, -28
  %v2_20437 = inttoptr i32 %v1_20437 to i32*
  %v3_20437 = load i32, i32* %v2_20437, align 4
  %v1_2043a = load i32, i32* %eax.global-to-local, align 4
  %v2_2043a = add i32 %v1_2043a, 4
  %v3_2043a = inttoptr i32 %v2_2043a to i32*
  store i32 %v3_20437, i32* %v3_2043a, align 4
  %v0_2043d = load i32, i32* @ebp, align 4
  %v1_2043d = add i32 %v0_2043d, -24
  %v2_2043d = inttoptr i32 %v1_2043d to i32*
  %v3_2043d = load i32, i32* %v2_2043d, align 4
  %v1_20440 = load i32, i32* %eax.global-to-local, align 4
  %v2_20440 = add i32 %v1_20440, 8
  %v3_20440 = inttoptr i32 %v2_20440 to i32*
  store i32 %v3_2043d, i32* %v3_20440, align 4
  %v0_20443 = load i32, i32* @ebp, align 4
  %v1_20443 = add i32 %v0_20443, -20
  %v2_20443 = inttoptr i32 %v1_20443 to i32*
  %v3_20443 = load i32, i32* %v2_20443, align 4
  %v1_20446 = load i32, i32* %eax.global-to-local, align 4
  %v2_20446 = add i32 %v1_20446, 12
  %v3_20446 = inttoptr i32 %v2_20446 to i32*
  store i32 %v3_20443, i32* %v3_20446, align 4
  %v0_20449 = load i32, i32* @ebp, align 4
  %v1_20449 = add i32 %v0_20449, -16
  %v2_20449 = inttoptr i32 %v1_20449 to i32*
  %v3_20449 = load i32, i32* %v2_20449, align 4
  %v1_2044c = load i32, i32* %eax.global-to-local, align 4
  %v2_2044c = add i32 %v1_2044c, 16
  %v3_2044c = inttoptr i32 %v2_2044c to i32*
  store i32 %v3_20449, i32* %v3_2044c, align 4
  %v0_2044f = call i32 @function_20668()
  store i32 %v0_2044f, i32* %eax.global-to-local, align 4
  ret i32 %v0_2044f
}

define i32 @function_20454() local_unnamed_addr {
dec_label_pc_20454:
  %ebx.global-to-local = alloca i32, align 4
  %v0_20464 = load i32, i32* @ebp, align 4
  %v1_20464 = add i32 %v0_20464, -60
  %v2_20464 = inttoptr i32 %v1_20464 to i32*
  %v3_20464 = load i32, i32* %v2_20464, align 4
  %v4_2046a = call i32 @unknown_474da(i32 %v3_20464, i32 1, i32 ptrtoint ([22 x i8]* @global_var_c5ba.2282 to i32))
  %v1_2046f = load i32, i32* @ebp, align 4
  %v2_2046f = add i32 %v1_2046f, -44
  %v3_2046f = inttoptr i32 %v2_2046f to i32*
  store i32 %v4_2046a, i32* %v3_2046f, align 4
  %v0_20472 = load i32, i32* @ebp, align 4
  %v1_20472 = add i32 %v0_20472, -52
  %v1_20475 = add i32 %v0_20472, -60
  %v2_20475 = inttoptr i32 %v1_20475 to i32*
  %v3_20475 = load i32, i32* %v2_20475, align 4
  %v2_2047f = call i32 @unknown_475ac(i32 %v1_20472, i32 %v3_20475)
  %v0_20487 = load i32, i32* @ebp, align 4
  %v1_20487 = add i32 %v0_20487, -52
  %v1_2048e = add i32 %v0_20487, -64
  %v2_20494 = call i32 @unknown_475f3(i32 %v1_2048e, i32 %v1_20487)
  %v1_20499 = load i32, i32* @ebp, align 4
  %v2_20499 = add i32 %v1_20499, -40
  %v3_20499 = inttoptr i32 %v2_20499 to i32*
  store i32 %v2_20494, i32* %v3_20499, align 4
  %v0_2049c = load i32, i32* @ebp, align 4
  %v1_2049c = add i32 %v0_2049c, -60
  %v2_2049c = inttoptr i32 %v1_2049c to i32*
  %v3_2049c = load i32, i32* %v2_2049c, align 4
  %v1_2049f = add i32 %v0_2049c, -44
  %v2_2049f = inttoptr i32 %v1_2049f to i32*
  %v3_2049f = load i32, i32* %v2_2049f, align 4
  %v2_204a9 = call i32 @unknown_47654(i32 %v3_2049c, i32 %v3_2049f)
  %v1_204ae = load i32, i32* @ebp, align 4
  %v2_204ae = add i32 %v1_204ae, -36
  %v3_204ae = inttoptr i32 %v2_204ae to i32*
  store i32 %v2_204a9, i32* %v3_204ae, align 4
  %v0_204b1 = load i32, i32* @ebp, align 4
  %v1_204b1 = add i32 %v0_204b1, -36
  %v2_204b1 = inttoptr i32 %v1_204b1 to i32*
  %v3_204b1 = load i32, i32* %v2_204b1, align 4
  %v2_204b4 = add i32 %v0_204b1, -48
  %v3_204b4 = inttoptr i32 %v2_204b4 to i32*
  store i32 %v3_204b1, i32* %v3_204b4, align 4
  %v0_204b7 = load i32, i32* @ebp, align 4
  %v1_204b7 = add i32 %v0_204b7, -40
  %v2_204b7 = inttoptr i32 %v1_204b7 to i32*
  %v3_204b7 = load i32, i32* %v2_204b7, align 4
  %v2_204c1 = mul i32 %v3_204b7, 20
  %v2_204c6 = add i32 %v0_204b7, -36
  %v3_204c6 = inttoptr i32 %v2_204c6 to i32*
  %v4_204c6 = load i32, i32* %v3_204c6, align 4
  %v5_204c6 = add i32 %v4_204c6, %v2_204c1
  %v1_204c9 = add i32 %v0_204b7, -60
  %v2_204c9 = inttoptr i32 %v1_204c9 to i32*
  %v3_204c9 = load i32, i32* %v2_204c9, align 4
  %v1_204cc = add i32 %v0_204b7, -68
  %v2_204cc = inttoptr i32 %v1_204cc to i32*
  %v3_204cc = load i32, i32* %v2_204cc, align 4
  %v3_204da = call i32 @unknown_40670(i32 %v3_204c9, i32 %v5_204c6, i32 %v3_204cc)
  %v0_204df = load i32, i32* @ebp, align 4
  %v1_204df = add i32 %v0_204df, -48
  %v2_204df = inttoptr i32 %v1_204df to i32*
  store i32 0, i32* %v2_204df, align 4
  %v0_204e6 = load i32, i32* @ebp, align 4
  %v1_204e6 = add i32 %v0_204e6, -60
  %v2_204e6 = inttoptr i32 %v1_204e6 to i32*
  %v3_204e6 = load i32, i32* %v2_204e6, align 4
  %v1_204ec = call i32 @unknown_476ac(i32 %v3_204e6)
  store i32 %v1_204ec, i32* %ebx.global-to-local, align 4
  %v0_204f3 = load i32, i32* @ebp, align 4
  %v1_204f3 = add i32 %v0_204f3, -64
  %v1_204f9 = call i32 @unknown_47416(i32 %v1_204f3)
  %v1_204fe = inttoptr i32 %v1_204f9 to i32*
  %v2_204fe = load i32, i32* %v1_204fe, align 4
  %v0_20500 = load i32, i32* @ebp, align 4
  %v1_20500 = add i32 %v0_20500, -60
  %v2_20500 = inttoptr i32 %v1_20500 to i32*
  %v3_20500 = load i32, i32* %v2_20500, align 4
  %v1_20503 = inttoptr i32 %v3_20500 to i32*
  %v2_20503 = load i32, i32* %v1_20503, align 4
  %v0_20505 = load i32, i32* %ebx.global-to-local, align 4
  %v1_20509 = add i32 %v0_20500, -36
  %v2_20509 = inttoptr i32 %v1_20509 to i32*
  %v3_20509 = load i32, i32* %v2_20509, align 4
  %v5_20517 = call i32 @unknown_476d9(i32 %v2_20503, i32 %v2_204fe, i32 %v3_20509, i32 %v0_20505)
  %v1_2051c = load i32, i32* @ebp, align 4
  %v2_2051c = add i32 %v1_2051c, -48
  %v3_2051c = inttoptr i32 %v2_2051c to i32*
  store i32 %v5_20517, i32* %v3_2051c, align 4
  %v0_2051f = load i32, i32* @ebp, align 4
  %v1_2051f = add i32 %v0_2051f, -48
  %v2_2051f = inttoptr i32 %v1_2051f to i32*
  %v3_2051f = load i32, i32* %v2_2051f, align 4
  %v4_2051f = add i32 %v3_2051f, 20
  store i32 %v4_2051f, i32* %v2_2051f, align 4
  %v0_20523 = load i32, i32* @ebp, align 4
  %v1_20523 = add i32 %v0_20523, -60
  %v2_20523 = inttoptr i32 %v1_20523 to i32*
  %v3_20523 = load i32, i32* %v2_20523, align 4
  %v1_20529 = call i32 @unknown_476ac(i32 %v3_20523)
  store i32 %v1_20529, i32* @ebx, align 4
  %v0_20530 = load i32, i32* @ebp, align 4
  %v1_20530 = add i32 %v0_20530, -60
  %v2_20530 = inttoptr i32 %v1_20530 to i32*
  %v3_20530 = load i32, i32* %v2_20530, align 4
  %v1_20533 = add i32 %v3_20530, 4
  %v2_20533 = inttoptr i32 %v1_20533 to i32*
  %v3_20533 = load i32, i32* %v2_20533, align 4
  store i32 %v3_20533, i32* @esi, align 4
  %v1_20536 = add i32 %v0_20530, -64
  %v1_2053c = call i32 @unknown_47416(i32 %v1_20536)
  %v1_20541 = inttoptr i32 %v1_2053c to i32*
  %v2_20541 = load i32, i32* %v1_20541, align 4
  %v0_20543 = load i32, i32* @ebx, align 4
  %v0_20547 = load i32, i32* @ebp, align 4
  %v1_20547 = add i32 %v0_20547, -48
  %v2_20547 = inttoptr i32 %v1_20547 to i32*
  %v3_20547 = load i32, i32* %v2_20547, align 4
  %v0_2054e = load i32, i32* @esi, align 4
  %v5_20555 = call i32 @unknown_476d9(i32 %v2_20541, i32 %v0_2054e, i32 %v3_20547, i32 %v0_20543)
  %v1_2055a = load i32, i32* @ebp, align 4
  %v2_2055a = add i32 %v1_2055a, -48
  %v3_2055a = inttoptr i32 %v2_2055a to i32*
  store i32 %v5_20555, i32* %v3_2055a, align 4
  %v0_2055d = load i32, i32* @ebp, align 4
  %v1_2055d = add i32 %v0_2055d, -60
  %v2_2055d = inttoptr i32 %v1_2055d to i32*
  %v3_2055d = load i32, i32* %v2_2055d, align 4
  %v1_20563 = call i32 @unknown_476ac(i32 %v3_2055d)
  %v0_20568 = load i32, i32* @ebp, align 4
  %v1_20568 = add i32 %v0_20568, -60
  %v2_20568 = inttoptr i32 %v1_20568 to i32*
  %v3_20568 = load i32, i32* %v2_20568, align 4
  %v1_2056b = add i32 %v3_20568, 4
  %v2_2056b = inttoptr i32 %v1_2056b to i32*
  %v3_2056b = load i32, i32* %v2_2056b, align 4
  %v1_20571 = inttoptr i32 %v3_20568 to i32*
  %v2_20571 = load i32, i32* %v1_20571, align 4
  %v3_2057e = call i32 @unknown_4779b(i32 %v2_20571, i32 %v3_2056b, i32 %v1_20563)
  %v0_20583 = load i32, i32* @ebp, align 4
  %v1_20583 = add i32 %v0_20583, -60
  %v2_20583 = inttoptr i32 %v1_20583 to i32*
  %v3_20583 = load i32, i32* %v2_20583, align 4
  %v1_20586 = add i32 %v3_20583, 8
  %v2_20586 = inttoptr i32 %v1_20586 to i32*
  %v3_20586 = load i32, i32* %v2_20586, align 4
  %v1_2058e = inttoptr i32 %v3_20583 to i32*
  %v2_2058e = load i32, i32* %v1_2058e, align 4
  %v2_20592 = sub i32 %v3_20586, %v2_2058e
  %v2_20596 = sdiv i32 %v2_20592, 4
  %v3_20599 = mul i32 %v2_20596, -858993459
  %v3_205a1 = load i32, i32* %v2_20583, align 4
  %v1_205a4 = inttoptr i32 %v3_205a1 to i32*
  %v2_205a4 = load i32, i32* %v1_205a4, align 4
  %v3_205b4 = call i32 @unknown_477e4(i32 %v3_205a1, i32 %v2_205a4, i32 %v3_20599)
  %v0_205b9 = load i32, i32* @ebp, align 4
  %v1_205b9 = add i32 %v0_205b9, -60
  %v2_205b9 = inttoptr i32 %v1_205b9 to i32*
  %v3_205b9 = load i32, i32* %v2_205b9, align 4
  %v1_205bc = add i32 %v0_205b9, -36
  %v2_205bc = inttoptr i32 %v1_205bc to i32*
  %v3_205bc = load i32, i32* %v2_205bc, align 4
  %v2_205bf = inttoptr i32 %v3_205b9 to i32*
  store i32 %v3_205bc, i32* %v2_205bf, align 4
  %v0_205c1 = load i32, i32* @ebp, align 4
  %v1_205c1 = add i32 %v0_205c1, -60
  %v2_205c1 = inttoptr i32 %v1_205c1 to i32*
  %v3_205c1 = load i32, i32* %v2_205c1, align 4
  %v1_205c4 = add i32 %v0_205c1, -48
  %v2_205c4 = inttoptr i32 %v1_205c4 to i32*
  %v3_205c4 = load i32, i32* %v2_205c4, align 4
  %v2_205c7 = add i32 %v3_205c1, 4
  %v3_205c7 = inttoptr i32 %v2_205c7 to i32*
  store i32 %v3_205c4, i32* %v3_205c7, align 4
  %v0_205ca = load i32, i32* @ebp, align 4
  %v1_205ca = add i32 %v0_205ca, -44
  %v2_205ca = inttoptr i32 %v1_205ca to i32*
  %v3_205ca = load i32, i32* %v2_205ca, align 4
  %v2_205d4 = mul i32 %v3_205ca, 20
  %v2_205d9 = add i32 %v0_205ca, -36
  %v3_205d9 = inttoptr i32 %v2_205d9 to i32*
  %v4_205d9 = load i32, i32* %v3_205d9, align 4
  %v5_205d9 = add i32 %v4_205d9, %v2_205d4
  %v1_205dc = add i32 %v0_205ca, -60
  %v2_205dc = inttoptr i32 %v1_205dc to i32*
  %v3_205dc = load i32, i32* %v2_205dc, align 4
  %v2_205df = add i32 %v3_205dc, 8
  %v3_205df = inttoptr i32 %v2_205df to i32*
  store i32 %v5_205d9, i32* %v3_205df, align 4
  %v0_205e2 = call i32 @function_20668()
  ret i32 %v0_205e2

; uselistorder directives
  uselistorder i32 %v0_204b7, { 1, 0, 2, 3 }
  uselistorder i32 ()* @function_20668, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_476d9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_47416, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_40670, { 1, 0 }
}

define i32 @function_205e8() local_unnamed_addr {
dec_label_pc_205e8:
  %eax.global-to-local = alloca i32, align 4
  %v0_205e8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_205e8
}

define i32 @function_205ff() local_unnamed_addr {
dec_label_pc_205ff:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_205ff = load i32, i32* %ebx.global-to-local, align 4
  %v1_205ff = add i32 %v0_205ff, 1962987645
  %v2_205ff = inttoptr i32 %v1_205ff to i32*
  %v3_205ff = load i32, i32* %v2_205ff, align 4
  %v4_205ff = add i32 %v3_205ff, 1
  store i32 %v4_205ff, i32* %v2_205ff, align 4
  %v0_20605 = load i32, i32* %ecx.global-to-local, align 4
  %v1_20605 = load i32, i32* %ebx.global-to-local, align 4
  %v2_20605 = add i32 %v1_20605, -796272555
  %v3_20605 = inttoptr i32 %v2_20605 to i32*
  %v4_20605 = load i32, i32* %v3_20605, align 4
  %v5_20605 = and i32 %v4_20605, %v0_20605
  store i32 %v5_20605, i32* %ecx.global-to-local, align 4
  %v0_2060b = load i32, i32* %eax.global-to-local, align 4
  %v2_2060b = mul i32 %v0_2060b, 4
  %v1_2060e = load i32, i32* %edx.global-to-local, align 4
  %v2_2060e = add i32 %v1_2060e, %v2_2060b
  %v2_20610 = mul i32 %v2_2060e, 4
  store i32 %v2_20610, i32* %eax.global-to-local, align 4
  store i32 %v2_20610, i32* %edx.global-to-local, align 4
  %v1_20615 = load i32, i32* @ebp, align 4
  %v2_20615 = add i32 %v1_20615, -36
  %v3_20615 = inttoptr i32 %v2_20615 to i32*
  %v4_20615 = load i32, i32* %v3_20615, align 4
  %v5_20615 = add i32 %v4_20615, %v2_20610
  store i32 %v5_20615, i32* %edx.global-to-local, align 4
  %v1_20618 = add i32 %v1_20615, -60
  %v2_20618 = inttoptr i32 %v1_20618 to i32*
  %v3_20618 = load i32, i32* %v2_20618, align 4
  store i32 %v3_20618, i32* %eax.global-to-local, align 4
  %v2_20622 = call i32 @unknown_47760(i32 %v3_20618, i32 %v5_20615)
  store i32 %v2_20622, i32* %eax.global-to-local, align 4
  %v0_20627 = call i32 @function_2064a()
  store i32 %v0_20627, i32* %eax.global-to-local, align 4
  ret i32 %v0_20627

; uselistorder directives
  uselistorder i32 %v2_20610, { 2, 1, 0 }
}

define i32 @function_20629() local_unnamed_addr {
dec_label_pc_20629:
  %ebp.global-to-local = alloca i32, align 4
  %v0_20629 = load i32, i32* %ebp.global-to-local, align 4
  %v1_20629 = add i32 %v0_20629, -60
  %v2_20629 = inttoptr i32 %v1_20629 to i32*
  %v3_20629 = load i32, i32* %v2_20629, align 4
  %v1_2062f = call i32 @unknown_476ac(i32 %v3_20629)
  %v1_20638 = add i32 %v0_20629, -48
  %v2_20638 = inttoptr i32 %v1_20638 to i32*
  %v3_20638 = load i32, i32* %v2_20638, align 4
  %v1_2063f = add i32 %v0_20629, -36
  %v2_2063f = inttoptr i32 %v1_2063f to i32*
  %v3_2063f = load i32, i32* %v2_2063f, align 4
  %v3_20645 = call i32 @unknown_4779b(i32 %v3_2063f, i32 %v3_20638, i32 %v1_2062f)
  ret i32 %v3_20645

; uselistorder directives
  uselistorder i32 %v0_20629, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_4779b, { 1, 0 }
  uselistorder i32 (i32)* @unknown_476ac, { 3, 2, 1, 0 }
}

define i32 @function_2064a() local_unnamed_addr {
dec_label_pc_2064a:
  %v0_2064a = load i32, i32* @ebp, align 4
  %v1_2064a = add i32 %v0_2064a, -60
  %v2_2064a = inttoptr i32 %v1_2064a to i32*
  %v3_2064a = load i32, i32* %v2_2064a, align 4
  %v1_2064d = add i32 %v0_2064a, -44
  %v2_2064d = inttoptr i32 %v1_2064d to i32*
  %v3_2064d = load i32, i32* %v2_2064d, align 4
  %v1_20654 = add i32 %v0_2064a, -36
  %v2_20654 = inttoptr i32 %v1_20654 to i32*
  %v3_20654 = load i32, i32* %v2_20654, align 4
  %v3_2065e = call i32 @unknown_477e4(i32 %v3_2064a, i32 %v3_20654, i32 %v3_2064d)
  ret i32 %v3_2065e

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_477e4, { 1, 0 }
}

define i32 @function_20668() local_unnamed_addr {
dec_label_pc_20668:
  %v0_20668 = load i32, i32* @ebp, align 4
  %v1_20668 = add i32 %v0_20668, -12
  %v2_20668 = inttoptr i32 %v1_20668 to i32*
  %v3_20668 = load i32, i32* %v2_20668, align 4
  %v1_2066b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2066b = xor i32 %v1_2066b, %v3_20668
  %v3_2066b = icmp eq i32 %v2_2066b, 0
  store i32 %v2_2066b, i32* @eax, align 4
  br i1 %v3_2066b, label %bb, label %dec_label_pc_20674

bb:                                               ; preds = %dec_label_pc_20668
  %v1_20672 = call i32 @function_20679()
  br label %dec_label_pc_20674

dec_label_pc_20674:                               ; preds = %bb, %dec_label_pc_20668
  %v2_20672 = phi i32 [ %v1_20672, %bb ], [ %v2_2066b, %dec_label_pc_20668 ]
  ret i32 %v2_20672
}

define i32 @function_20679() local_unnamed_addr {
dec_label_pc_20679:
  %v0_20679 = load i32, i32* @ebp, align 4
  %v1_20679 = add i32 %v0_20679, -8
  %v1_2067c = inttoptr i32 %v1_20679 to i32*
  %v2_2067c = load i32, i32* %v1_2067c, align 4
  store i32 %v2_2067c, i32* @ebx, align 4
  %v3_2067c = add i32 %v0_20679, -4
  %v1_2067d = inttoptr i32 %v3_2067c to i32*
  %v2_2067d = load i32, i32* %v1_2067d, align 4
  store i32 %v2_2067d, i32* @esi, align 4
  %v1_2067e = inttoptr i32 %v0_20679 to i32*
  %v2_2067e = load i32, i32* %v1_2067e, align 4
  store i32 %v2_2067e, i32* @ebp, align 4
  %v0_2067f = load i32, i32* @eax, align 4
  ret i32 %v0_2067f
}

define i32 @_ZNSt6vectorI6CKeyIDSaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20680:
  %v1_206a0 = add i32 %arg2, 4
  %v2_206ad = call i32 @unknown_47b4c(i32 %arg1, i32 %v1_206a0)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_206c1

bb:                                               ; preds = %dec_label_pc_20680
  %v1_206bf = call i32 @function_206c6()
  br label %dec_label_pc_206c1

dec_label_pc_206c1:                               ; preds = %bb, %dec_label_pc_20680
  %v2_206bf = phi i32 [ %v1_206bf, %bb ], [ %arg1, %dec_label_pc_20680 ]
  ret i32 %v2_206bf

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_206c6() local_unnamed_addr {
dec_label_pc_206c6:
  %v0_206c7 = load i32, i32* @eax, align 4
  ret i32 %v0_206c7
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE8capacityEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_206ca:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_206e4 = add i32 %tmp100, 8
  %v2_206e4 = inttoptr i32 %v1_206e4 to i32*
  %v3_206e4 = load i32, i32* %v2_206e4, align 4
  %v2_206ec = load i32, i32* %arg1, align 4
  %v2_206f0 = sub i32 %v3_206e4, %v2_206ec
  %v2_206f4 = sdiv i32 %v2_206f0, 4
  %v3_206f7 = mul i32 %v2_206f4, -1431655765
  store i32 %v3_206f7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20709

bb:                                               ; preds = %dec_label_pc_206ca
  %v2_20707 = call i32 @function_2070e(i32 %tmp100)
  br label %dec_label_pc_20709

dec_label_pc_20709:                               ; preds = %bb, %dec_label_pc_206ca
  %v3_20707 = phi i32 [ %v2_20707, %bb ], [ %v3_206f7, %dec_label_pc_206ca ]
  ret i32 %v3_20707
}

define i32 @function_2070e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2070e:
  %v0_2070f = load i32, i32* @eax, align 4
  ret i32 %v0_2070f
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_jT_SB_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_20710:
  %v2_20747 = call i32 @unknown_449c2(i32 %arg1, i32 %arg2)
  %v1_20755 = call i32 @unknown_3def0(i32 %arg1)
  %v4_20772 = call i32 @unknown_47c16(i32 %arg3, i32 %arg4, i32 %v2_20747, i32 %v1_20755)
  store i32 %v2_20747, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20786

bb:                                               ; preds = %dec_label_pc_20710
  %v1_20784 = call i32 @function_207c4()
  store i32 %v1_20784, i32* @eax, align 4
  br label %dec_label_pc_20786

dec_label_pc_20786:                               ; preds = %bb, %dec_label_pc_20710
  %v0_20786 = call i32 @function_207bf()
  ret i32 %v0_20786

; uselistorder directives
  uselistorder i32 %v2_20747, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_20789() local_unnamed_addr {
dec_label_pc_20789:
  %eax.global-to-local = alloca i32, align 4
  %v0_20789 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_20789
}

define i32 @function_207bf() local_unnamed_addr {
dec_label_pc_207bf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_207c4() local_unnamed_addr {
dec_label_pc_207c4:
  %v0_207c9 = load i32, i32* @eax, align 4
  ret i32 %v0_207c9
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE13_M_deallocateEPS2_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_207ca:
  %v10_207ed = icmp eq i32 %arg2, 0
  br i1 %v10_207ed, label %dec_label_pc_2080c, label %dec_label_pc_207f3

dec_label_pc_207f3:                               ; preds = %dec_label_pc_207ca
  %v3_20807 = call i32 @unknown_47d26(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_2080c

dec_label_pc_2080c:                               ; preds = %dec_label_pc_207f3, %dec_label_pc_207ca
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20818

bb:                                               ; preds = %dec_label_pc_2080c
  %v1_20816 = call i32 @function_2081d()
  br label %dec_label_pc_20818

dec_label_pc_20818:                               ; preds = %bb, %dec_label_pc_2080c
  %v2_20816 = phi i32 [ %v1_20816, %bb ], [ 0, %dec_label_pc_2080c ]
  ret i32 %v2_20816
}

define i32 @function_2081d() local_unnamed_addr {
dec_label_pc_2081d:
  %v0_2081e = load i32, i32* @eax, align 4
  ret i32 %v0_2081e
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEENS1_IPS4_S8_EEET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2081f:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_20848 = ptrtoint i32* %stack_var_-20 to i32
  %v2_20855 = call i32 @unknown_47dbc(i32 %v2_20848, i32 %arg3)
  %v2_2085d = ptrtoint i32* %stack_var_-24 to i32
  %v2_2086a = call i32 @unknown_47dbc(i32 %v2_2085d, i32 %arg2)
  %v3_2087c = load i32, i32* %stack_var_-20, align 4
  %v3_20883 = load i32, i32* %stack_var_-24, align 4
  %v4_2088d = call i32 @unknown_47e06(i32 %arg1, i32 %v3_20883, i32 %v3_2087c, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_208a4

bb:                                               ; preds = %dec_label_pc_2081f
  %v1_208a2 = call i32 @function_208a9()
  br label %dec_label_pc_208a4

dec_label_pc_208a4:                               ; preds = %bb, %dec_label_pc_2081f
  %v2_208a2 = phi i32 [ %v1_208a2, %bb ], [ %arg1, %dec_label_pc_2081f ]
  ret i32 %v2_208a2

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_47dbc, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_208a9() local_unnamed_addr {
dec_label_pc_208a9:
  %v0_208aa = load i32, i32* @eax, align 4
  ret i32 %v0_208aa
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEES4_EvT_S9_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_208ad:
  %v2_208dd = call i32 @unknown_47f26(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_208ee

bb:                                               ; preds = %dec_label_pc_208ad
  %v1_208ec = call i32 @function_208f3()
  br label %dec_label_pc_208ee

dec_label_pc_208ee:                               ; preds = %bb, %dec_label_pc_208ad
  %v2_208ec = phi i32 [ %v1_208ec, %bb ], [ 0, %dec_label_pc_208ad ]
  ret i32 %v2_208ec
}

define i32 @function_208f3() local_unnamed_addr {
dec_label_pc_208f3:
  %v0_208f4 = load i32, i32* @eax, align 4
  ret i32 %v0_208f4
}

define i32 @_ZSt4copyIPSt6vectorIhSaIhEES3_ET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_208f5:
  %v1_2091f = call i32 @unknown_47fb0(i32 %arg2)
  %v1_2092c = call i32 @unknown_47fb0(i32 %arg1)
  %v3_2093f = call i32 @unknown_47fe5(i32 %v1_2092c, i32 %v1_2091f, i32 %arg3)
  store i32 %v3_2093f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20950

bb:                                               ; preds = %dec_label_pc_208f5
  %v1_2094e = call i32 @function_20955()
  br label %dec_label_pc_20950

dec_label_pc_20950:                               ; preds = %bb, %dec_label_pc_208f5
  %v2_2094e = phi i32 [ %v1_2094e, %bb ], [ %v3_2093f, %dec_label_pc_208f5 ]
  ret i32 %v2_2094e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_47fb0, { 1, 0 }
}

define i32 @function_20955() local_unnamed_addr {
dec_label_pc_20955:
  %v0_2095a = load i32, i32* @eax, align 4
  ret i32 %v0_2095a
}

define i32 @_ZSt22__uninitialized_copy_aIPSt6vectorIhSaIhEES3_S2_ET0_T_S5_S4_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2095b:
  %v7_20998 = call i32 @unknown_480bd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_20998, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_209a9

bb:                                               ; preds = %dec_label_pc_2095b
  %v1_209a7 = call i32 @function_209ae()
  br label %dec_label_pc_209a9

dec_label_pc_209a9:                               ; preds = %bb, %dec_label_pc_2095b
  %v2_209a7 = phi i32 [ %v1_209a7, %bb ], [ %v7_20998, %dec_label_pc_2095b ]
  ret i32 %v2_209a7

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_209ae() local_unnamed_addr {
dec_label_pc_209ae:
  %v0_209af = load i32, i32* @eax, align 4
  ret i32 %v0_209af
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_209b0:
  %v1_209cd = call i32 @unknown_48162(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_209de

bb:                                               ; preds = %dec_label_pc_209b0
  %v1_209dc = call i32 @function_209e3()
  br label %dec_label_pc_209de

dec_label_pc_209de:                               ; preds = %bb, %dec_label_pc_209b0
  %v2_209dc = phi i32 [ %v1_209dc, %bb ], [ 0, %dec_label_pc_209b0 ]
  ret i32 %v2_209dc
}

define i32 @function_209e3() local_unnamed_addr {
dec_label_pc_209e3:
  %v0_209e4 = load i32, i32* @eax, align 4
  ret i32 %v0_209e4
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt6vectorIhSaIhEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_209e6:
  %v1_20a03 = call i32 @unknown_4820a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20a14

bb:                                               ; preds = %dec_label_pc_209e6
  %v1_20a12 = call i32 @function_20a19()
  br label %dec_label_pc_20a14

dec_label_pc_20a14:                               ; preds = %bb, %dec_label_pc_209e6
  %v2_20a12 = phi i32 [ %v1_20a12, %bb ], [ 0, %dec_label_pc_209e6 ]
  ret i32 %v2_20a12
}

define i32 @function_20a19() local_unnamed_addr {
dec_label_pc_20a19:
  %v0_20a1a = load i32, i32* @eax, align 4
  ret i32 %v0_20a1a
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20a1c:
  %v10_20a7b106 = icmp eq i32 %arg2, 0
  %v1_20a7f107 = icmp eq i1 %v10_20a7b106, false
  %v5_20a82109 = icmp eq i1 %v1_20a7f107, false
  %v1_20a84110 = icmp eq i1 %v5_20a82109, false
  br i1 %v1_20a84110, label %dec_label_pc_20a3b, label %dec_label_pc_20a86

dec_label_pc_20a3b:                               ; preds = %dec_label_pc_20a1c, %dec_label_pc_20a3b
  %stack_var_-36.0111 = phi i32 [ %v1_20a5b, %dec_label_pc_20a3b ], [ %arg2, %dec_label_pc_20a1c ]
  %v1_20a41 = call i32 @unknown_4826a(i32 %stack_var_-36.0111)
  %v2_20a50 = call i32 @unknown_41438(i32 %arg1, i32 %v1_20a41)
  %v1_20a5b = call i32 @unknown_4829a(i32 %stack_var_-36.0111)
  %v2_20a70 = call i32 @unknown_482ca(i32 %arg1, i32 %stack_var_-36.0111)
  %v10_20a7b = icmp eq i32 %v1_20a5b, 0
  %v1_20a7f = icmp eq i1 %v10_20a7b, false
  %v5_20a82 = icmp eq i1 %v1_20a7f, false
  %v1_20a84 = icmp eq i1 %v5_20a82, false
  br i1 %v1_20a84, label %dec_label_pc_20a3b, label %dec_label_pc_20a86

dec_label_pc_20a86:                               ; preds = %dec_label_pc_20a3b, %dec_label_pc_20a1c
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20a92

bb:                                               ; preds = %dec_label_pc_20a86
  %v1_20a90 = call i32 @function_20a97()
  br label %dec_label_pc_20a92

dec_label_pc_20a92:                               ; preds = %bb, %dec_label_pc_20a86
  %v2_20a90 = phi i32 [ %v1_20a90, %bb ], [ 0, %dec_label_pc_20a86 ]
  ret i32 %v2_20a90

; uselistorder directives
  uselistorder i32 %v1_20a5b, { 1, 0 }
  uselistorder i32 %stack_var_-36.0111, { 1, 2, 0 }
  uselistorder label %dec_label_pc_20a3b, { 1, 0 }
}

define i32 @function_20a97() local_unnamed_addr {
dec_label_pc_20a97:
  %v0_20a98 = load i32, i32* @eax, align 4
  ret i32 %v0_20a98
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_20a9a:
  %v1_20ab4 = add i32 %arg1, 8
  %v2_20ab4 = inttoptr i32 %v1_20ab4 to i32*
  %v3_20ab4 = load i32, i32* %v2_20ab4, align 4
  store i32 %v3_20ab4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20ac3

bb:                                               ; preds = %dec_label_pc_20a9a
  %v2_20ac1 = call i32 @function_20ac8(i32 %arg1)
  br label %dec_label_pc_20ac3

dec_label_pc_20ac3:                               ; preds = %bb, %dec_label_pc_20a9a
  %v4_20ac1 = phi i32 [ %v2_20ac1, %bb ], [ %v3_20ab4, %dec_label_pc_20a9a ]
  ret i32 %v4_20ac1
}

define i32 @function_20ac8(i32 %arg1) local_unnamed_addr {
dec_label_pc_20ac8:
  %v0_20ac9 = load i32, i32* @eax, align 4
  ret i32 %v0_20ac9
}

define i32 @_ZN5boost9addressofISt6vectorIS1_IhSaIhEESaIS3_EEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20aca:
  %stack_var_-20 = alloca i32, align 4
  %v2_20ae8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_20aee = call i32 @unknown_48416(i32 %v2_20ae8, i32 %arg1)
  %v1_20af9 = call i32 @unknown_4844e(i32 %v2_20ae8)
  %v2_20b09 = call i32 @unknown_4847d(i32 %v1_20af9, i32 0)
  store i32 %v2_20b09, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20b1a

bb:                                               ; preds = %dec_label_pc_20aca
  %v1_20b18 = call i32 @function_20b1f()
  br label %dec_label_pc_20b1a

dec_label_pc_20b1a:                               ; preds = %bb, %dec_label_pc_20aca
  %v2_20b18 = phi i32 [ %v1_20b18, %bb ], [ %v2_20b09, %dec_label_pc_20aca ]
  ret i32 %v2_20b18
}

define i32 @function_20b1f() local_unnamed_addr {
dec_label_pc_20b1f:
  %v0_20b20 = load i32, i32* @eax, align 4
  ret i32 %v0_20b20
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt6vectorIS2_IhSaIhEESaIS4_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20b22:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_20b45 = call i32 @unknown_3d01e(i32 %tmp102)
  %v1_20b4d = inttoptr i32 %arg2 to i32*
  %v2_20b4d = load i32, i32* %v1_20b4d, align 4
  store i32 %v2_20b4d, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20b60

bb:                                               ; preds = %dec_label_pc_20b22
  %v1_20b5e = call i32 @function_20b65()
  br label %dec_label_pc_20b60

dec_label_pc_20b60:                               ; preds = %bb, %dec_label_pc_20b22
  %v2_20b5e = phi i32 [ %v1_20b5e, %bb ], [ 0, %dec_label_pc_20b22 ]
  ret i32 %v2_20b5e
}

define i32 @function_20b65() local_unnamed_addr {
dec_label_pc_20b65:
  %v0_20b66 = load i32, i32* @eax, align 4
  ret i32 %v0_20b66
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt6vectorIS2_IhSaIhEESaIS4_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b67:
  ret i32 %arg1
}

define i32 @function_20b84() local_unnamed_addr {
dec_label_pc_20b84:
  %v0_20b84 = load i32, i32* @edx, align 4
  %v1_20b84 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20b84 = icmp eq i32 %v1_20b84, %v0_20b84
  br i1 %v3_20b84, label %bb, label %dec_label_pc_20b84.dec_label_pc_20b8d_crit_edge

dec_label_pc_20b84.dec_label_pc_20b8d_crit_edge:  ; preds = %dec_label_pc_20b84
  %v2_20b8b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_20b8d

bb:                                               ; preds = %dec_label_pc_20b84
  %v1_20b8b = call i32 @function_20b92()
  br label %dec_label_pc_20b8d

dec_label_pc_20b8d:                               ; preds = %dec_label_pc_20b84.dec_label_pc_20b8d_crit_edge, %bb
  %v2_20b8b = phi i32 [ %v2_20b8b.pre, %dec_label_pc_20b84.dec_label_pc_20b8d_crit_edge ], [ %v1_20b8b, %bb ]
  ret i32 %v2_20b8b

; uselistorder directives
  uselistorder label %dec_label_pc_20b8d, { 1, 0 }
}

define i32 @function_20b92() local_unnamed_addr {
dec_label_pc_20b92:
  %v0_20b93 = load i32, i32* @eax, align 4
  ret i32 %v0_20b93
}

define i32 @_ZN5boost15foreach_detail_7derefofISt6vectorIS2_IhSaIhEESaIS4_EEEERT_PS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_20b94:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20bba

bb:                                               ; preds = %dec_label_pc_20b94
  %v2_20bb8 = call i32 @function_20bbf(i32 %arg1)
  br label %dec_label_pc_20bba

dec_label_pc_20bba:                               ; preds = %bb, %dec_label_pc_20b94
  %v3_20bb8 = phi i32 [ %v2_20bb8, %bb ], [ %arg1, %dec_label_pc_20b94 ]
  ret i32 %v3_20bb8
}

define i32 @function_20bbf(i32 %arg1) local_unnamed_addr {
dec_label_pc_20bbf:
  %v0_20bc0 = load i32, i32* @eax, align 4
  ret i32 %v0_20bc0
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20bc1:
  %v2_20beb = call i32 @unknown_485a7(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20c02

bb:                                               ; preds = %dec_label_pc_20bc1
  %v1_20c00 = call i32 @function_20c07()
  br label %dec_label_pc_20c02

dec_label_pc_20c02:                               ; preds = %bb, %dec_label_pc_20bc1
  %v2_20c00 = phi i32 [ %v1_20c00, %bb ], [ %arg1, %dec_label_pc_20bc1 ]
  ret i32 %v2_20c00

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_20c07() local_unnamed_addr {
dec_label_pc_20c07:
  %v0_20c08 = load i32, i32* @eax, align 4
  ret i32 %v0_20c08
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20c0c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_20c2f = call i32 @unknown_3d108(i32 %tmp102)
  %v1_20c3a = inttoptr i32 %arg2 to i32*
  %v2_20c3a = load i32, i32* %v1_20c3a, align 4
  store i32 %v2_20c3a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20c4a

bb:                                               ; preds = %dec_label_pc_20c0c
  %v1_20c48 = call i32 @function_20c4f()
  br label %dec_label_pc_20c4a

dec_label_pc_20c4a:                               ; preds = %bb, %dec_label_pc_20c0c
  %v2_20c48 = phi i32 [ %v1_20c48, %bb ], [ 0, %dec_label_pc_20c0c ]
  ret i32 %v2_20c48
}

define i32 @function_20c4f() local_unnamed_addr {
dec_label_pc_20c4f:
  %v0_20c50 = load i32, i32* @eax, align 4
  ret i32 %v0_20c50
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20c51:
  %v2_20c7b = call i32 @unknown_48681(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20c92

bb:                                               ; preds = %dec_label_pc_20c51
  %v1_20c90 = call i32 @function_20c97()
  br label %dec_label_pc_20c92

dec_label_pc_20c92:                               ; preds = %bb, %dec_label_pc_20c51
  %v2_20c90 = phi i32 [ %v1_20c90, %bb ], [ %arg1, %dec_label_pc_20c51 ]
  ret i32 %v2_20c90

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_20c97() local_unnamed_addr {
dec_label_pc_20c97:
  %v0_20c98 = load i32, i32* @eax, align 4
  ret i32 %v0_20c98
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_20c9b:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20cc1

bb:                                               ; preds = %dec_label_pc_20c9b
  %v2_20cbf = call i32 @function_20cc6(i32 %arg1)
  br label %dec_label_pc_20cc1

dec_label_pc_20cc1:                               ; preds = %bb, %dec_label_pc_20c9b
  %v3_20cbf = phi i32 [ %v2_20cbf, %bb ], [ %arg1, %dec_label_pc_20c9b ]
  ret i32 %v3_20cbf
}

define i32 @function_20cc6(i32 %arg1) local_unnamed_addr {
dec_label_pc_20cc6:
  %v0_20cc7 = load i32, i32* @eax, align 4
  ret i32 %v0_20cc7
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES1_IS3_SaIS3_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_20cc8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_20ce2 = load i32, i32* %arg1, align 4
  %v1_20ce4 = add i32 %v2_20ce2, 12
  store i32 %v1_20ce4, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20cfb

bb:                                               ; preds = %dec_label_pc_20cc8
  %v2_20cf9 = call i32 @function_20d00(i32 %tmp100)
  br label %dec_label_pc_20cfb

dec_label_pc_20cfb:                               ; preds = %bb, %dec_label_pc_20cc8
  %v3_20cf9 = phi i32 [ %v2_20cf9, %bb ], [ %tmp100, %dec_label_pc_20cc8 ]
  ret i32 %v3_20cf9
}

define i32 @function_20d00(i32 %arg1) local_unnamed_addr {
dec_label_pc_20d00:
  %v0_20d01 = load i32, i32* @eax, align 4
  ret i32 %v0_20d01
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20d02:
  %v1_20d2c = call i32 @unknown_4179c(i32 %arg2)
  %v1_20d3a = call i32 @unknown_4877c(i32 %arg2)
  ret i32 %v1_20d3a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_20d54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20d54:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_20d54 = call i32 @unknown_487df()
  store i32 %v0_20d54, i32* %eax.global-to-local, align 4
  store i32 %v0_20d54, i32* %ebx.global-to-local, align 4
  %v0_20d5b = load i32, i32* @ebp, align 4
  %v1_20d5b = add i32 %v0_20d5b, -68
  %v2_20d5b = inttoptr i32 %v1_20d5b to i32*
  %v3_20d5b = load i32, i32* %v2_20d5b, align 4
  %v1_20d62 = add i32 %v0_20d5b, -18
  store i32 %v1_20d62, i32* %eax.global-to-local, align 4
  %v2_20d68 = call i32 @unknown_487ac(i32 %v1_20d62, i32 %v3_20d5b)
  store i32 %v2_20d68, i32* %eax.global-to-local, align 4
  %v0_20d6d = load i32, i32* @ebp, align 4
  %v1_20d6d = add i32 %v0_20d6d, -64
  %v2_20d6d = inttoptr i32 %v1_20d6d to i32*
  %v3_20d6d = load i32, i32* %v2_20d6d, align 4
  %v0_20d70 = load i32, i32* %ebx.global-to-local, align 4
  %v3_20d7b = call i32 @unknown_422a2(i32 %v3_20d6d, i32 %v2_20d68, i32 %v0_20d70)
  store i32 %v3_20d7b, i32* %eax.global-to-local, align 4
  %v1_20d80 = trunc i32 %v3_20d7b to i8
  %v2_20d80 = load i32, i32* @ebp, align 4
  %v3_20d80 = add i32 %v2_20d80, -13
  %v4_20d80 = inttoptr i32 %v3_20d80 to i8*
  store i8 %v1_20d80, i8* %v4_20d80, align 1
  %v0_20d83 = load i32, i32* @ebp, align 4
  %v1_20d83 = add i32 %v0_20d83, -13
  %v2_20d83 = inttoptr i32 %v1_20d83 to i8*
  %v3_20d83 = load i8, i8* %v2_20d83, align 1
  %v10_20d83 = icmp eq i8 %v3_20d83, 0
  %v1_20d96 = add i32 %v0_20d83, -28
  %v2_20d96 = inttoptr i32 %v1_20d96 to i32*
  %v3_20d96 = load i32, i32* %v2_20d96, align 4
  store i32 %v3_20d96, i32* %eax.global-to-local, align 4
  br i1 %v10_20d83, label %dec_label_pc_20d96, label %dec_label_pc_20d89

dec_label_pc_20d89:                               ; preds = %dec_label_pc_20d54
  %v1_20d8f = call i32 @unknown_48580(i32 %v3_20d96)
  br label %dec_label_pc_20da1

dec_label_pc_20d96:                               ; preds = %dec_label_pc_20d54
  %v1_20d9c = call i32 @unknown_48550(i32 %v3_20d96)
  br label %dec_label_pc_20da1

dec_label_pc_20da1:                               ; preds = %dec_label_pc_20d96, %dec_label_pc_20d89
  %storemerge = phi i32 [ %v1_20d9c, %dec_label_pc_20d96 ], [ %v1_20d8f, %dec_label_pc_20d89 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_20da1 = load i32, i32* @ebp, align 4
  %v2_20da1 = add i32 %v1_20da1, -28
  %v3_20da1 = inttoptr i32 %v2_20da1 to i32*
  store i32 %storemerge, i32* %v3_20da1, align 4
  %v0_20da4 = load i32, i32* @ebp, align 4
  %v1_20da4 = add i32 %v0_20da4, -28
  %v2_20da4 = inttoptr i32 %v1_20da4 to i32*
  %v3_20da4 = load i32, i32* %v2_20da4, align 4
  %v10_20da4 = icmp eq i32 %v3_20da4, 0
  %v1_20da8 = icmp eq i1 %v10_20da4, false
  %v2_20da8 = zext i1 %v1_20da8 to i32
  %v3_20da8 = load i32, i32* %eax.global-to-local, align 4
  %v4_20da8 = and i32 %v3_20da8, -256
  %v5_20da8 = or i32 %v2_20da8, %v4_20da8
  store i32 %v5_20da8, i32* %eax.global-to-local, align 4
  %v1_20daf = add i32 %v0_20da4, -24
  %v2_20daf = inttoptr i32 %v1_20daf to i32*
  %v3_20daf = load i32, i32* %v2_20daf, align 4
  %v1_20db6 = add i32 %v0_20da4, -44
  store i32 %v1_20db6, i32* %eax.global-to-local, align 4
  %v2_20dbc = call i32 @unknown_48824(i32 %v1_20db6, i32 %v3_20daf)
  store i32 %v2_20dbc, i32* %eax.global-to-local, align 4
  %v0_20dc1 = load i32, i32* @ebp, align 4
  %v1_20dc1 = add i32 %v0_20dc1, -13
  %v2_20dc1 = inttoptr i32 %v1_20dc1 to i8*
  %v3_20dc1 = load i8, i8* %v2_20dc1, align 1
  %v10_20dc1 = icmp eq i8 %v3_20dc1, 0
  br i1 %v10_20dc1, label %dec_label_pc_20e4d, label %dec_label_pc_20dcb

dec_label_pc_20dcb:                               ; preds = %dec_label_pc_20da1
  %v1_20dcb = add i32 %v0_20dc1, -40
  store i32 %v1_20dcb, i32* %eax.global-to-local, align 4
  %v1_20dce = add i32 %v0_20dc1, -64
  %v2_20dce = inttoptr i32 %v1_20dce to i32*
  %v3_20dce = load i32, i32* %v2_20dce, align 4
  %v2_20dd8 = call i32 @unknown_4885c(i32 %v1_20dcb, i32 %v3_20dce)
  %v0_20de0 = load i32, i32* @ebp, align 4
  %v1_20de0 = add i32 %v0_20de0, -40
  %v1_20de7 = add i32 %v0_20de0, -44
  store i32 %v1_20de7, i32* %eax.global-to-local, align 4
  %v2_20ded = call i32 @unknown_488a6(i32 %v1_20de7, i32 %v1_20de0)
  store i32 %v2_20ded, i32* %eax.global-to-local, align 4
  %v4_20df2 = trunc i32 %v2_20ded to i8
  %v5_20df2 = icmp eq i8 %v4_20df2, 0
  %v0_20e42 = load i32, i32* @ebp, align 4
  br i1 %v5_20df2, label %dec_label_pc_20e42, label %dec_label_pc_20df6

dec_label_pc_20df6:                               ; preds = %dec_label_pc_20dcb
  %v1_20df6 = add i32 %v0_20e42, -17
  %v2_20df6 = inttoptr i32 %v1_20df6 to i8*
  store i8 1, i8* %v2_20df6, align 1
  %v0_20dfa = load i32, i32* @ebp, align 4
  %v1_20dfa = add i32 %v0_20dfa, -36
  store i32 %v1_20dfa, i32* %eax.global-to-local, align 4
  %v1_20dfd = add i32 %v0_20dfa, -68
  %v2_20dfd = inttoptr i32 %v1_20dfd to i32*
  %v3_20dfd = load i32, i32* %v2_20dfd, align 4
  %v1_20e04 = add i32 %v0_20dfa, -24
  %v2_20e04 = inttoptr i32 %v1_20e04 to i32*
  %v3_20e04 = load i32, i32* %v2_20e04, align 4
  %v1_20e0b = add i32 %v0_20dfa, -28
  %v2_20e0b = inttoptr i32 %v1_20e0b to i32*
  %v3_20e0b = load i32, i32* %v2_20e0b, align 4
  %v1_20e12 = add i32 %v0_20dfa, -64
  %v2_20e12 = inttoptr i32 %v1_20e12 to i32*
  %v3_20e12 = load i32, i32* %v2_20e12, align 4
  %v5_20e1c = call i32 @unknown_488e6(i32 %v1_20dfa, i32 %v3_20e12, i32 %v3_20e0b, i32 %v3_20e04, i32 %v3_20dfd)
  %v0_20e24 = load i32, i32* @ebp, align 4
  %v1_20e24 = add i32 %v0_20e24, -17
  %v1_20e2b = add i32 %v0_20e24, -36
  store i32 %v1_20e2b, i32* %eax.global-to-local, align 4
  %v1_20e32 = add i32 %v0_20e24, -60
  %v2_20e32 = inttoptr i32 %v1_20e32 to i32*
  %v3_20e32 = load i32, i32* %v2_20e32, align 4
  store i32 %v3_20e32, i32* %eax.global-to-local, align 4
  %v3_20e38 = call i32 @unknown_489e8(i32 %v3_20e32, i32 %v1_20e2b, i32 %v1_20e24)
  store i32 %v3_20e38, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20eeb

dec_label_pc_20e42:                               ; preds = %dec_label_pc_20dcb
  %v1_20e42 = add i32 %v0_20e42, -44
  store i32 %v1_20e42, i32* %eax.global-to-local, align 4
  %v1_20e48 = call i32 @unknown_48a34(i32 %v1_20e42)
  store i32 %v1_20e48, i32* %eax.global-to-local, align 4
  %v0_20e4d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_20e4d

dec_label_pc_20e4d:                               ; preds = %dec_label_pc_20e42, %dec_label_pc_20da1
  %v0_20e4d = phi i32 [ %v0_20e4d.pre, %dec_label_pc_20e42 ], [ %v0_20dc1, %dec_label_pc_20da1 ]
  %v1_20e4d = add i32 %v0_20e4d, -68
  %v2_20e4d = inttoptr i32 %v1_20e4d to i32*
  %v3_20e4d = load i32, i32* %v2_20e4d, align 4
  %v1_20e54 = add i32 %v0_20e4d, -16
  store i32 %v1_20e54, i32* %eax.global-to-local, align 4
  %v2_20e5a = call i32 @unknown_487ac(i32 %v1_20e54, i32 %v3_20e4d)
  store i32 %v2_20e5a, i32* %eax.global-to-local, align 4
  store i32 %v2_20e5a, i32* %ebx.global-to-local, align 4
  %v0_20e61 = load i32, i32* @ebp, align 4
  %v1_20e61 = add i32 %v0_20e61, -44
  %v2_20e61 = inttoptr i32 %v1_20e61 to i32*
  %v3_20e61 = load i32, i32* %v2_20e61, align 4
  store i32 %v3_20e61, i32* %eax.global-to-local, align 4
  %v1_20e67 = call i32 @unknown_48a73(i32 %v3_20e61)
  store i32 %v1_20e67, i32* %eax.global-to-local, align 4
  %v0_20e6e = load i32, i32* @ebp, align 4
  %v1_20e6e = add i32 %v0_20e6e, -64
  %v2_20e6e = inttoptr i32 %v1_20e6e to i32*
  %v3_20e6e = load i32, i32* %v2_20e6e, align 4
  store i32 %v3_20e6e, i32* %eax.global-to-local, align 4
  %v0_20e71 = load i32, i32* %ebx.global-to-local, align 4
  %v3_20e7c = call i32 @unknown_422a2(i32 %v3_20e6e, i32 %v1_20e67, i32 %v0_20e71)
  store i32 %v3_20e7c, i32* %eax.global-to-local, align 4
  %v4_20e81 = trunc i32 %v3_20e7c to i8
  %v5_20e81 = icmp eq i8 %v4_20e81, 0
  %v0_20ece = load i32, i32* @ebp, align 4
  br i1 %v5_20e81, label %dec_label_pc_20ece, label %dec_label_pc_20e85

dec_label_pc_20e85:                               ; preds = %dec_label_pc_20e4d
  %v1_20e85 = add i32 %v0_20ece, -15
  %v2_20e85 = inttoptr i32 %v1_20e85 to i8*
  store i8 1, i8* %v2_20e85, align 1
  %v0_20e89 = load i32, i32* @ebp, align 4
  %v1_20e89 = add i32 %v0_20e89, -32
  store i32 %v1_20e89, i32* %eax.global-to-local, align 4
  %v1_20e8c = add i32 %v0_20e89, -68
  %v2_20e8c = inttoptr i32 %v1_20e8c to i32*
  %v3_20e8c = load i32, i32* %v2_20e8c, align 4
  %v1_20e93 = add i32 %v0_20e89, -24
  %v2_20e93 = inttoptr i32 %v1_20e93 to i32*
  %v3_20e93 = load i32, i32* %v2_20e93, align 4
  %v1_20e9a = add i32 %v0_20e89, -28
  %v2_20e9a = inttoptr i32 %v1_20e9a to i32*
  %v3_20e9a = load i32, i32* %v2_20e9a, align 4
  %v1_20ea1 = add i32 %v0_20e89, -64
  %v2_20ea1 = inttoptr i32 %v1_20ea1 to i32*
  %v3_20ea1 = load i32, i32* %v2_20ea1, align 4
  %v5_20eab = call i32 @unknown_488e6(i32 %v1_20e89, i32 %v3_20ea1, i32 %v3_20e9a, i32 %v3_20e93, i32 %v3_20e8c)
  %v0_20eb3 = load i32, i32* @ebp, align 4
  %v1_20eb3 = add i32 %v0_20eb3, -15
  %v1_20eba = add i32 %v0_20eb3, -32
  store i32 %v1_20eba, i32* %eax.global-to-local, align 4
  %v1_20ec1 = add i32 %v0_20eb3, -60
  %v2_20ec1 = inttoptr i32 %v1_20ec1 to i32*
  %v3_20ec1 = load i32, i32* %v2_20ec1, align 4
  store i32 %v3_20ec1, i32* %eax.global-to-local, align 4
  %v3_20ec7 = call i32 @unknown_489e8(i32 %v3_20ec1, i32 %v1_20eba, i32 %v1_20eb3)
  store i32 %v3_20ec7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20eeb

dec_label_pc_20ece:                               ; preds = %dec_label_pc_20e4d
  %v1_20ece = add i32 %v0_20ece, -14
  %v2_20ece = inttoptr i32 %v1_20ece to i8*
  store i8 0, i8* %v2_20ece, align 1
  %v0_20ed2 = load i32, i32* @ebp, align 4
  %v1_20ed2 = add i32 %v0_20ed2, -14
  %v1_20ed9 = add i32 %v0_20ed2, -44
  store i32 %v1_20ed9, i32* %eax.global-to-local, align 4
  %v1_20ee0 = add i32 %v0_20ed2, -60
  %v2_20ee0 = inttoptr i32 %v1_20ee0 to i32*
  %v3_20ee0 = load i32, i32* %v2_20ee0, align 4
  store i32 %v3_20ee0, i32* %eax.global-to-local, align 4
  %v3_20ee6 = call i32 @unknown_489e8(i32 %v3_20ee0, i32 %v1_20ed9, i32 %v1_20ed2)
  store i32 %v3_20ee6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20eeb

dec_label_pc_20eeb:                               ; preds = %dec_label_pc_20ece, %dec_label_pc_20e85, %dec_label_pc_20df6
  %v0_20eeb = load i32, i32* @ebp, align 4
  %v1_20eeb = add i32 %v0_20eeb, -60
  %v2_20eeb = inttoptr i32 %v1_20eeb to i32*
  %v3_20eeb = load i32, i32* %v2_20eeb, align 4
  store i32 %v3_20eeb, i32* @eax, align 4
  %v1_20eee = add i32 %v0_20eeb, -12
  %v2_20eee = inttoptr i32 %v1_20eee to i32*
  %v3_20eee = load i32, i32* %v2_20eee, align 4
  %v1_20ef1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_20ef1 = icmp eq i32 %v1_20ef1, %v3_20eee
  br i1 %v3_20ef1, label %bb, label %dec_label_pc_20efa

bb:                                               ; preds = %dec_label_pc_20eeb
  %v1_20ef8 = call i32 @function_20eff()
  store i32 %v1_20ef8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20efa

dec_label_pc_20efa:                               ; preds = %bb, %dec_label_pc_20eeb
  %v2_20ef8 = phi i32 [ %v1_20ef8, %bb ], [ %v3_20eeb, %dec_label_pc_20eeb ]
  ret i32 %v2_20ef8

; uselistorder directives
  uselistorder i32 %v0_20e89, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_20ece, { 1, 0 }
  uselistorder i32 %v0_20e4d, { 1, 0 }
  uselistorder i32 %v0_20dfa, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_20e42, { 1, 0 }
  uselistorder i32 %v0_20dc1, { 0, 2, 1, 3 }
  uselistorder i32 %v0_20da4, { 1, 0, 2 }
  uselistorder i32 %v3_20d96, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 27, 28, 29, 30, 31, 32, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 2, 22, 23, 24, 25, 26 }
  uselistorder i32 (i32, i32, i32)* @unknown_489e8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_488e6, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_422a2, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_487ac, { 1, 0 }
}

define i32 @function_20eff() local_unnamed_addr {
dec_label_pc_20eff:
  %v0_20f03 = load i32, i32* @eax, align 4
  ret i32 %v0_20f03
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEC1ERKSt17_Rb_tree_iteratorIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20f06:
  %v1_20f26 = inttoptr i32 %arg2 to i32*
  %v2_20f26 = load i32, i32* %v1_20f26, align 4
  store i32 %v2_20f26, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20f39

bb:                                               ; preds = %dec_label_pc_20f06
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_20f37 = call i32 @function_20f3e(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_20f39

dec_label_pc_20f39:                               ; preds = %bb, %dec_label_pc_20f06
  %v5_20f37 = phi i32 [ %v3_20f37, %bb ], [ 0, %dec_label_pc_20f06 ]
  ret i32 %v5_20f37

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_20f3e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20f3e:
  %v0_20f3f = load i32, i32* @eax, align 4
  ret i32 %v0_20f3f
}

define i32 @_ZNSt4pairISt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEbEC1ERKS4_RKb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_20f40:
  ret i32 %arg3
}

define i32 @function_20f56(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f56:
  %eax.global-to-local = alloca i32, align 4
  %v0_20f56 = load i32, i32* @ebp, align 4
  %v1_20f56 = add i32 %v0_20f56, 1
  store i32 %v1_20f56, i32* @ebp, align 4
  %v2_20f57 = add i32 %v0_20f56, -94
  %v3_20f57 = inttoptr i32 %v2_20f57 to double*
  %v4_20f57 = load double, double* %v3_20f57, align 4
  %v5_20f57 = fpext double %v4_20f57 to x86_fp80
  %v6_20f57 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_20f57 = fsub x86_fp80 %v5_20f57, %v6_20f57
  store x86_fp80 %v7_20f57, x86_fp80* @st0, align 4
  %v0_20f5a = load i32, i32* @eax, align 4
  %v1_20f5a = trunc i32 %v0_20f5a to i8
  %v2_20f5a = load i1, i1* @cf, align 1
  %v3_20f5a = zext i1 %v2_20f5a to i8
  %v4_20f5a = add i8 %v3_20f5a, %v1_20f5a
  %v22_20f5a = zext i8 %v4_20f5a to i32
  %v24_20f5a = and i32 %v0_20f5a, -256
  %v25_20f5a = or i32 %v22_20f5a, %v24_20f5a
  store i32 %v25_20f5a, i32* %eax.global-to-local, align 4
  %v1_20f5c = inttoptr i32 %v25_20f5a to i8*
  %v2_20f5c = load i8, i8* %v1_20f5c, align 1
  %v5_20f5c = add i8 %v2_20f5c, %v4_20f5a
  store i8 %v5_20f5c, i8* %v1_20f5c, align 1
  %v0_20f5e = load i32, i32* %eax.global-to-local, align 4
  %v1_20f5e = load i32, i32* @ebp, align 4
  %v2_20f5e = add i32 %v1_20f5e, -12
  %v3_20f5e = inttoptr i32 %v2_20f5e to i32*
  store i32 %v0_20f5e, i32* %v3_20f5e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_20f63 = load i32, i32* @ebp, align 4
  %v1_20f63 = add i32 %v0_20f63, -28
  %v2_20f63 = inttoptr i32 %v1_20f63 to i32*
  %v3_20f63 = load i32, i32* %v2_20f63, align 4
  store i32 %v3_20f63, i32* %eax.global-to-local, align 4
  %v1_20f66 = add i32 %v0_20f63, -32
  %v2_20f66 = inttoptr i32 %v1_20f66 to i32*
  %v3_20f66 = load i32, i32* %v2_20f66, align 4
  %v1_20f69 = inttoptr i32 %v3_20f66 to i32*
  %v2_20f69 = load i32, i32* %v1_20f69, align 4
  %v2_20f6b = inttoptr i32 %v3_20f63 to i32*
  store i32 %v2_20f69, i32* %v2_20f6b, align 4
  %v0_20f6d = load i32, i32* @ebp, align 4
  %v1_20f6d = add i32 %v0_20f6d, -36
  %v2_20f6d = inttoptr i32 %v1_20f6d to i32*
  %v3_20f6d = load i32, i32* %v2_20f6d, align 4
  store i32 %v3_20f6d, i32* %eax.global-to-local, align 4
  %v1_20f70 = inttoptr i32 %v3_20f6d to i8*
  %v2_20f70 = load i8, i8* %v1_20f70, align 1
  %v1_20f73 = add i32 %v0_20f6d, -28
  %v2_20f73 = inttoptr i32 %v1_20f73 to i32*
  %v3_20f73 = load i32, i32* %v2_20f73, align 4
  store i32 %v3_20f73, i32* %eax.global-to-local, align 4
  %v3_20f76 = add i32 %v3_20f73, 4
  %v4_20f76 = inttoptr i32 %v3_20f76 to i8*
  store i8 %v2_20f70, i8* %v4_20f76, align 1
  %v0_20f79 = load i32, i32* @ebp, align 4
  %v1_20f79 = add i32 %v0_20f79, -12
  %v2_20f79 = inttoptr i32 %v1_20f79 to i32*
  %v3_20f79 = load i32, i32* %v2_20f79, align 4
  store i32 %v3_20f79, i32* %eax.global-to-local, align 4
  %v1_20f7c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20f7c = xor i32 %v1_20f7c, %v3_20f79
  %v3_20f7c = icmp eq i32 %v2_20f7c, 0
  store i32 %v2_20f7c, i32* @eax, align 4
  br i1 %v3_20f7c, label %bb, label %dec_label_pc_20f85

bb:                                               ; preds = %dec_label_pc_20f56
  %v1_20f83 = call i32 @function_20f8a()
  store i32 %v1_20f83, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_20f85

dec_label_pc_20f85:                               ; preds = %bb, %dec_label_pc_20f56
  %v2_20f83 = phi i32 [ %v1_20f83, %bb ], [ %v2_20f7c, %dec_label_pc_20f56 ]
  ret i32 %v2_20f83
}

define i32 @function_20f8a() local_unnamed_addr {
dec_label_pc_20f8a:
  %v0_20f8b = load i32, i32* @eax, align 4
  ret i32 %v0_20f8b
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20f8c:
  %v1_20fa9 = call i32 @unknown_48d42(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_20fba

bb:                                               ; preds = %dec_label_pc_20f8c
  %v1_20fb8 = call i32 @function_20fbf()
  br label %dec_label_pc_20fba

dec_label_pc_20fba:                               ; preds = %bb, %dec_label_pc_20f8c
  %v2_20fb8 = phi i32 [ %v1_20fb8, %bb ], [ 0, %dec_label_pc_20f8c ]
  ret i32 %v2_20fb8
}

define i32 @function_20fbf() local_unnamed_addr {
dec_label_pc_20fbf:
  %v0_20fc0 = load i32, i32* @eax, align 4
  ret i32 %v0_20fc0
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES3_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_20fc2:
  ret i32 %arg1
}

define i32 @function_20fce() local_unnamed_addr {
dec_label_pc_20fce:
  %v0_20fce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_20fd4 = load i32, i32* @ebp, align 4
  %v2_20fd4 = add i32 %v1_20fd4, -12
  %v3_20fd4 = inttoptr i32 %v2_20fd4 to i32*
  store i32 %v0_20fce, i32* %v3_20fd4, align 4
  %v0_20fd9 = load i32, i32* @ebp, align 4
  %v1_20fd9 = add i32 %v0_20fd9, -28
  %v2_20fd9 = inttoptr i32 %v1_20fd9 to i32*
  %v3_20fd9 = load i32, i32* %v2_20fd9, align 4
  %v1_20fdf = call i32 @unknown_48dea(i32 %v3_20fd9)
  %v0_20fe4 = load i32, i32* @ebp, align 4
  %v1_20fe4 = add i32 %v0_20fe4, -12
  %v2_20fe4 = inttoptr i32 %v1_20fe4 to i32*
  %v3_20fe4 = load i32, i32* %v2_20fe4, align 4
  %v1_20fe7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_20fe7 = xor i32 %v1_20fe7, %v3_20fe4
  %v3_20fe7 = icmp eq i32 %v2_20fe7, 0
  store i32 %v2_20fe7, i32* @eax, align 4
  br i1 %v3_20fe7, label %bb, label %dec_label_pc_20ff0

bb:                                               ; preds = %dec_label_pc_20fce
  %v1_20fee = call i32 @function_20ff5()
  br label %dec_label_pc_20ff0

dec_label_pc_20ff0:                               ; preds = %bb, %dec_label_pc_20fce
  %v2_20fee = phi i32 [ %v1_20fee, %bb ], [ %v2_20fe7, %dec_label_pc_20fce ]
  ret i32 %v2_20fee
}

define i32 @function_20ff5() local_unnamed_addr {
dec_label_pc_20ff5:
  %v0_20ff6 = load i32, i32* @eax, align 4
  ret i32 %v0_20ff6
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_20ff8:
  ret i32 0
}

define i32 @function_2102a() local_unnamed_addr {
dec_label_pc_2102a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2102a = load i32, i32* @eax, align 4
  %v2_2102a = add i32 %v0_2102a, 36
  %v16_2102a = and i32 %v2_2102a, 255
  %v18_2102a = and i32 %v0_2102a, -256
  %v19_2102a = or i32 %v16_2102a, %v18_2102a
  store i32 %v19_2102a, i32* %eax.global-to-local, align 4
  %v0_2102c = call i32 @unknown_41ff0()
  store i32 %v0_2102c, i32* %eax.global-to-local, align 4
  %v0_21031 = load i32, i32* @ebp, align 4
  %v1_21031 = add i32 %v0_21031, -32
  %v2_21031 = inttoptr i32 %v1_21031 to i32*
  %v3_21031 = load i32, i32* %v2_21031, align 4
  store i32 %v3_21031, i32* %eax.global-to-local, align 4
  %v1_21037 = call i32 @unknown_48e7a(i32 %v3_21031)
  store i32 %v1_21037, i32* %eax.global-to-local, align 4
  %v1_2103c = load i32, i32* @ebp, align 4
  %v2_2103c = add i32 %v1_2103c, -16
  %v3_2103c = inttoptr i32 %v2_2103c to i32*
  store i32 %v1_21037, i32* %v3_2103c, align 4
  %v0_2103f = load i32, i32* @ebp, align 4
  %v1_2103f = add i32 %v0_2103f, -32
  %v2_2103f = inttoptr i32 %v1_2103f to i32*
  %v3_2103f = load i32, i32* %v2_2103f, align 4
  store i32 %v3_2103f, i32* %eax.global-to-local, align 4
  %v1_21046 = add i32 %v0_2103f, -28
  %v2_21046 = inttoptr i32 %v1_21046 to i32*
  %v3_21046 = load i32, i32* %v2_21046, align 4
  store i32 %v3_21046, i32* %eax.global-to-local, align 4
  %v2_2104c = call i32 @unknown_48eaa(i32 %v3_21046, i32 %v3_2103f)
  store i32 %v2_2104c, i32* %eax.global-to-local, align 4
  %v0_21051 = load i32, i32* @ebp, align 4
  %v1_21051 = add i32 %v0_21051, -16
  %v2_21051 = inttoptr i32 %v1_21051 to i32*
  %v3_21051 = load i32, i32* %v2_21051, align 4
  store i32 %v3_21051, i32* %eax.global-to-local, align 4
  %v2_21054 = add i32 %v0_21051, -32
  %v3_21054 = inttoptr i32 %v2_21054 to i32*
  store i32 %v3_21051, i32* %v3_21054, align 4
  %v0_21057 = load i32, i32* @ebp, align 4
  %v1_21057 = add i32 %v0_21057, -32
  %v2_21057 = inttoptr i32 %v1_21057 to i32*
  %v3_21057 = load i32, i32* %v2_21057, align 4
  %v10_21057 = icmp eq i32 %v3_21057, 0
  %v1_2105b = icmp eq i1 %v10_21057, false
  %v2_2105b = zext i1 %v1_2105b to i32
  %v3_2105b = load i32, i32* %eax.global-to-local, align 4
  %v4_2105b = and i32 %v3_2105b, -256
  %v5_2105b = or i32 %v2_2105b, %v4_2105b
  store i32 %v5_2105b, i32* %eax.global-to-local, align 4
  %v1_21062 = add i32 %v0_21057, -12
  %v2_21062 = inttoptr i32 %v1_21062 to i32*
  %v3_21062 = load i32, i32* %v2_21062, align 4
  store i32 %v3_21062, i32* %eax.global-to-local, align 4
  %v1_21065 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21065 = xor i32 %v1_21065, %v3_21062
  %v3_21065 = icmp eq i32 %v2_21065, 0
  store i32 %v2_21065, i32* @eax, align 4
  br i1 %v3_21065, label %bb, label %dec_label_pc_2106e

bb:                                               ; preds = %dec_label_pc_2102a
  %v1_2106c = call i32 @function_21073()
  store i32 %v1_2106c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2106e

dec_label_pc_2106e:                               ; preds = %bb, %dec_label_pc_2102a
  %v3_2106c = phi i32 [ %v1_2106c, %bb ], [ %v2_21065, %dec_label_pc_2102a ]
  ret i32 %v3_2106c

; uselistorder directives
  uselistorder i32 %v0_2102a, { 1, 0 }
}

define i32 @function_21073() local_unnamed_addr {
dec_label_pc_21073:
  %v0_21074 = load i32, i32* @eax, align 4
  ret i32 %v0_21074
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_21076:
  %v1_21090 = add i32 %arg1, 8
  %v2_21090 = inttoptr i32 %v1_21090 to i32*
  %v3_21090 = load i32, i32* %v2_21090, align 4
  store i32 %v3_21090, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2109f

bb:                                               ; preds = %dec_label_pc_21076
  %v2_2109d = call i32 @function_210a4(i32 %arg1)
  br label %dec_label_pc_2109f

dec_label_pc_2109f:                               ; preds = %bb, %dec_label_pc_21076
  %v3_2109d = phi i32 [ %v2_2109d, %bb ], [ %v3_21090, %dec_label_pc_21076 ]
  ret i32 %v3_2109d
}

define i32 @function_210a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_210a4:
  %v0_210a5 = load i32, i32* @eax, align 4
  ret i32 %v0_210a5
}

define i32 @_ZN5boost9addressofISt3setISt6vectorIhSaIhEESt4lessIS4_ESaIS4_EEEEPT_RS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_210a6:
  %stack_var_-20 = alloca i32, align 4
  %v2_210c4 = ptrtoint i32* %stack_var_-20 to i32
  %v2_210ca = call i32 @unknown_48ff6(i32 %v2_210c4, i32 %arg1)
  ret i32 %v2_210c4
}

define i32 @function_210d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_210d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_210d7 = load i1, i1* @zf, align 1
  %v1_210d7 = load i1, i1* @sf, align 1
  %v2_210d7 = load i1, i1* @of, align 1
  %v3_210d7 = icmp eq i1 %v1_210d7, %v2_210d7
  %v4_210d7 = icmp eq i1 %v0_210d7, false
  %v5_210d7 = icmp eq i1 %v3_210d7, %v4_210d7
  br i1 %v5_210d7, label %dec_label_pc_210d6.dec_label_pc_210db_crit_edge, label %dec_label_pc_210d9

dec_label_pc_210d6.dec_label_pc_210db_crit_edge:  ; preds = %dec_label_pc_210d6
  br label %dec_label_pc_210db

dec_label_pc_210d9:                               ; preds = %dec_label_pc_210d6
  br label %dec_label_pc_210db

dec_label_pc_210db:                               ; preds = %dec_label_pc_210d6.dec_label_pc_210db_crit_edge, %dec_label_pc_210d9
  %v9_210dc = load i32, i32* @eax, align 4
  %v1_210dc = trunc i32 %v9_210dc to i8
  %v2_210dc = and i8 %v1_210dc, 4
  %v8_210dc = zext i8 %v2_210dc to i32
  %v10_210dc = and i32 %v9_210dc, -256
  %v11_210dc = or i32 %v8_210dc, %v10_210dc
  store i32 %v11_210dc, i32* %eax.global-to-local, align 4
  %v1_210de = inttoptr i32 %v11_210dc to i8*
  %v2_210de = load i8, i8* %v1_210de, align 4
  %v5_210de = add i8 %v2_210de, %v2_210dc
  store i8 %v5_210de, i8* %v1_210de, align 4
  %v0_210e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_210e0 = inttoptr i32 %v0_210e0 to i8*
  %v2_210e0 = load i8, i8* %v1_210e0, align 1
  %v4_210e0 = trunc i32 %v0_210e0 to i8
  %v5_210e0 = add i8 %v2_210e0, %v4_210e0
  store i8 %v5_210e0, i8* %v1_210e0, align 1
  %v0_210e2 = load i32, i32* %eax.global-to-local, align 4
  %v1_210e5 = call i32 @unknown_4905d(i32 %v0_210e2)
  store i32 %v1_210e5, i32* @eax, align 4
  %v0_210ea = load i32, i32* @ebp, align 4
  %v1_210ea = add i32 %v0_210ea, -12
  %v2_210ea = inttoptr i32 %v1_210ea to i32*
  %v3_210ea = load i32, i32* %v2_210ea, align 4
  %v1_210ed = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_210ed = icmp eq i32 %v1_210ed, %v3_210ea
  br i1 %v3_210ed, label %bb, label %dec_label_pc_210f6

bb:                                               ; preds = %dec_label_pc_210db
  %v1_210f4 = call i32 @function_210fb()
  store i32 %v1_210f4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_210f6

dec_label_pc_210f6:                               ; preds = %bb, %dec_label_pc_210db
  %v2_210f4 = phi i32 [ %v1_210f4, %bb ], [ %v1_210e5, %dec_label_pc_210db ]
  ret i32 %v2_210f4

; uselistorder directives
  uselistorder i32 %v9_210dc, { 1, 0 }
  uselistorder label %dec_label_pc_210db, { 1, 0 }
}

define i32 @function_210fb() local_unnamed_addr {
dec_label_pc_210fb:
  %v0_210fc = load i32, i32* @eax, align 4
  ret i32 %v0_210fc
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPSt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_210fe:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_21121 = call i32 @unknown_3d5fa(i32 %tmp102)
  %v1_21129 = inttoptr i32 %arg2 to i32*
  %v2_21129 = load i32, i32* %v1_21129, align 4
  store i32 %v2_21129, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2113c

bb:                                               ; preds = %dec_label_pc_210fe
  %v1_2113a = call i32 @function_21141()
  br label %dec_label_pc_2113c

dec_label_pc_2113c:                               ; preds = %bb, %dec_label_pc_210fe
  %v2_2113a = phi i32 [ %v1_2113a, %bb ], [ 0, %dec_label_pc_210fe ]
  ret i32 %v2_2113a
}

define i32 @function_21141() local_unnamed_addr {
dec_label_pc_21141:
  %v0_21142 = load i32, i32* @eax, align 4
  ret i32 %v0_21142
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPSt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_21143:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21169

bb:                                               ; preds = %dec_label_pc_21143
  %v2_21167 = call i32 @function_2116e(i32 %arg1)
  br label %dec_label_pc_21169

dec_label_pc_21169:                               ; preds = %bb, %dec_label_pc_21143
  %v3_21167 = phi i32 [ %v2_21167, %bb ], [ %arg1, %dec_label_pc_21143 ]
  ret i32 %v3_21167
}

define i32 @function_2116e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2116e:
  %v0_2116f = load i32, i32* @eax, align 4
  ret i32 %v0_2116f
}

define i32 @_ZN5boost15foreach_detail_7derefofISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEERT_PSA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21170:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21196

bb:                                               ; preds = %dec_label_pc_21170
  %v2_21194 = call i32 @function_2119b(i32 %arg1)
  br label %dec_label_pc_21196

dec_label_pc_21196:                               ; preds = %bb, %dec_label_pc_21170
  %v3_21194 = phi i32 [ %v2_21194, %bb ], [ %arg1, %dec_label_pc_21170 ]
  ret i32 %v3_21194
}

define i32 @function_2119b(i32 %arg1) local_unnamed_addr {
dec_label_pc_2119b:
  %v0_2119c = load i32, i32* @eax, align 4
  ret i32 %v0_2119c
}

define i32 @_ZN5boost17range_adl_barrier5beginISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2119d:
  ret i32 %arg1
}

define i32 @function_211a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_211a6:
  %v0_211a6 = load i32, i32* @eax, align 4
  %v1_211a6 = load i32, i32* @ebp, align 4
  %v2_211a6 = add i32 %v1_211a6, -28
  %v3_211a6 = inttoptr i32 %v2_211a6 to i32*
  store i32 %v0_211a6, i32* %v3_211a6, align 4
  %v0_211a9 = load i32, i32* @ebp, align 4
  %v1_211a9 = add i32 %v0_211a9, 12
  %v2_211a9 = inttoptr i32 %v1_211a9 to i32*
  %v3_211a9 = load i32, i32* %v2_211a9, align 4
  %v2_211ac = add i32 %v0_211a9, -32
  %v3_211ac = inttoptr i32 %v2_211ac to i32*
  store i32 %v3_211a9, i32* %v3_211ac, align 4
  %v0_211af = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_211b5 = load i32, i32* @ebp, align 4
  %v2_211b5 = add i32 %v1_211b5, -12
  %v3_211b5 = inttoptr i32 %v2_211b5 to i32*
  store i32 %v0_211af, i32* %v3_211b5, align 4
  %v0_211ba = load i32, i32* @ebp, align 4
  %v1_211ba = add i32 %v0_211ba, -28
  %v2_211ba = inttoptr i32 %v1_211ba to i32*
  %v3_211ba = load i32, i32* %v2_211ba, align 4
  %v1_211bd = add i32 %v0_211ba, -32
  %v2_211bd = inttoptr i32 %v1_211bd to i32*
  %v3_211bd = load i32, i32* %v2_211bd, align 4
  %v2_211c7 = call i32 @unknown_49187(i32 %v3_211ba, i32 %v3_211bd)
  %v0_211cf = load i32, i32* @ebp, align 4
  %v1_211cf = add i32 %v0_211cf, -28
  %v2_211cf = inttoptr i32 %v1_211cf to i32*
  %v3_211cf = load i32, i32* %v2_211cf, align 4
  store i32 %v3_211cf, i32* @eax, align 4
  %v1_211d2 = add i32 %v0_211cf, -12
  %v2_211d2 = inttoptr i32 %v1_211d2 to i32*
  %v3_211d2 = load i32, i32* %v2_211d2, align 4
  %v1_211d5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_211d5 = icmp eq i32 %v1_211d5, %v3_211d2
  br i1 %v3_211d5, label %bb, label %dec_label_pc_211de

bb:                                               ; preds = %dec_label_pc_211a6
  %v1_211dc = call i32 @function_211e3()
  br label %dec_label_pc_211de

dec_label_pc_211de:                               ; preds = %bb, %dec_label_pc_211a6
  %v2_211dc = phi i32 [ %v1_211dc, %bb ], [ %v3_211cf, %dec_label_pc_211a6 ]
  ret i32 %v2_211dc
}

define i32 @function_211e3() local_unnamed_addr {
dec_label_pc_211e3:
  %v0_211e4 = load i32, i32* @eax, align 4
  ret i32 %v0_211e4
}

define i32 @_ZN5boost15foreach_detail_8auto_anyISt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEEC1ERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_211e8:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2120b = call i32 @unknown_3d6e4(i32 %tmp102)
  %v1_21216 = inttoptr i32 %arg2 to i32*
  %v2_21216 = load i32, i32* %v1_21216, align 4
  store i32 %v2_21216, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21226

bb:                                               ; preds = %dec_label_pc_211e8
  %v1_21224 = call i32 @function_2122b()
  br label %dec_label_pc_21226

dec_label_pc_21226:                               ; preds = %bb, %dec_label_pc_211e8
  %v2_21224 = phi i32 [ %v1_21224, %bb ], [ 0, %dec_label_pc_211e8 ]
  ret i32 %v2_21224
}

define i32 @function_2122b() local_unnamed_addr {
dec_label_pc_2122b:
  %v0_2122c = load i32, i32* @eax, align 4
  ret i32 %v0_2122c
}

define i32 @_ZN5boost17range_adl_barrier3endISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2122d:
  ret i32 %arg1
}

define i32 @function_2123a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2123a:
  %v0_2123a = load i32, i32* @ebp, align 4
  %v1_2123d = add i32 %v0_2123a, 2
  store i32 %v1_2123d, i32* @ebp, align 4
  %v0_21240 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21245 = add i32 %v0_2123a, -10
  %v3_21245 = inttoptr i32 %v2_21245 to i32*
  store i32 %v0_21240, i32* %v3_21245, align 4
  %v0_2124a = load i32, i32* @ebp, align 4
  %v1_2124a = add i32 %v0_2124a, -28
  %v2_2124a = inttoptr i32 %v1_2124a to i32*
  %v3_2124a = load i32, i32* %v2_2124a, align 4
  %v1_2124d = add i32 %v0_2124a, -32
  %v2_2124d = inttoptr i32 %v1_2124d to i32*
  %v3_2124d = load i32, i32* %v2_2124d, align 4
  %v2_21257 = call i32 @unknown_49261(i32 %v3_2124a, i32 %v3_2124d)
  %v0_2125f = load i32, i32* @ebp, align 4
  %v1_2125f = add i32 %v0_2125f, -28
  %v2_2125f = inttoptr i32 %v1_2125f to i32*
  %v3_2125f = load i32, i32* %v2_2125f, align 4
  store i32 %v3_2125f, i32* @eax, align 4
  %v1_21262 = add i32 %v0_2125f, -12
  %v2_21262 = inttoptr i32 %v1_21262 to i32*
  %v3_21262 = load i32, i32* %v2_21262, align 4
  %v1_21265 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21265 = icmp eq i32 %v1_21265, %v3_21262
  br i1 %v3_21265, label %bb, label %dec_label_pc_2126e

bb:                                               ; preds = %dec_label_pc_2123a
  %v1_2126c = call i32 @function_21273()
  br label %dec_label_pc_2126e

dec_label_pc_2126e:                               ; preds = %bb, %dec_label_pc_2123a
  %v3_2126c = phi i32 [ %v1_2126c, %bb ], [ %v3_2125f, %dec_label_pc_2123a ]
  ret i32 %v3_2126c
}

define i32 @function_21273() local_unnamed_addr {
dec_label_pc_21273:
  %v4_21273 = load i32, i32* @eax, align 4
  ret i32 %v4_21273
}

define i32 @function_21274(i32 %arg1) local_unnamed_addr {
dec_label_pc_21274:
  %v0_21274 = load i32, i32* @eax, align 4
  ret i32 %v0_21274
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castISt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SD_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_21277:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2129d

bb:                                               ; preds = %dec_label_pc_21277
  %v2_2129b = call i32 @function_212a2(i32 %arg1)
  br label %dec_label_pc_2129d

dec_label_pc_2129d:                               ; preds = %bb, %dec_label_pc_21277
  %v3_2129b = phi i32 [ %v2_2129b, %bb ], [ %arg1, %dec_label_pc_21277 ]
  ret i32 %v3_2129b
}

define i32 @function_212a2(i32 %arg1) local_unnamed_addr {
dec_label_pc_212a2:
  %v0_212a3 = load i32, i32* @eax, align 4
  ret i32 %v0_212a3
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEeqERKS3_() local_unnamed_addr {
dec_label_pc_212a4:
  %eax.global-to-local = alloca i32, align 4
  %v5_212a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_212a4
}

define i32 @function_212c0() local_unnamed_addr {
dec_label_pc_212c0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_212c8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_212c8 = add i32 %v0_212c8, -1
  store i32 %v1_212c8, i32* %ecx.global-to-local, align 4
  %v1_212ca = inttoptr i32 %v1_212c8 to i8*
  %v2_212ca = load i8, i8* %v1_212ca, align 1
  %v3_212ca = load i32, i32* %ebx.global-to-local, align 4
  %v4_212ca = udiv i32 %v3_212ca, 256
  %v5_212ca = trunc i32 %v4_212ca to i8
  %v6_212ca = add i8 %v5_212ca, %v2_212ca
  store i8 %v6_212ca, i8* %v1_212ca, align 1
  %v0_212cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_212cc
}

define i32 @function_212d0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_212d0:
  %v0_212d0 = load i32, i32* @ebp, align 4
  %v1_212d0 = add i32 %v0_212d0, -12
  %v2_212d0 = inttoptr i32 %v1_212d0 to i32*
  %v3_212d0 = load i32, i32* %v2_212d0, align 4
  %v1_212d3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_212d3 = icmp eq i32 %v1_212d3, %v3_212d0
  br i1 %v3_212d3, label %bb, label %dec_label_pc_212d0.dec_label_pc_212dc_crit_edge

dec_label_pc_212d0.dec_label_pc_212dc_crit_edge:  ; preds = %dec_label_pc_212d0
  %v2_212da.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_212dc

bb:                                               ; preds = %dec_label_pc_212d0
  %v1_212da = call i32 @function_212e1()
  br label %dec_label_pc_212dc

dec_label_pc_212dc:                               ; preds = %dec_label_pc_212d0.dec_label_pc_212dc_crit_edge, %bb
  %v2_212da = phi i32 [ %v2_212da.pre, %dec_label_pc_212d0.dec_label_pc_212dc_crit_edge ], [ %v1_212da, %bb ]
  ret i32 %v2_212da

; uselistorder directives
  uselistorder label %dec_label_pc_212dc, { 1, 0 }
}

define i32 @function_212e1() local_unnamed_addr {
dec_label_pc_212e1:
  %v0_212e2 = load i32, i32* @eax, align 4
  ret i32 %v0_212e2
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_212e4:
  ret i32 %arg1
}

define i32 @function_212f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_212f2:
  %eax.global-to-local = alloca i32, align 4
  %v0_212f2 = load i32, i32* @eax, align 4
  %v1_212f2 = trunc i32 %v0_212f2 to i8
  %v2_212f2 = load i1, i1* @cf, align 1
  %v3_212f2 = zext i1 %v2_212f2 to i8
  %v4_212f2 = add i8 %v3_212f2, %v1_212f2
  %v22_212f2 = zext i8 %v4_212f2 to i32
  %v24_212f2 = and i32 %v0_212f2, -256
  %v25_212f2 = or i32 %v22_212f2, %v24_212f2
  store i32 %v25_212f2, i32* %eax.global-to-local, align 4
  %v1_212f4 = inttoptr i32 %v25_212f2 to i8*
  %v2_212f4 = load i8, i8* %v1_212f4, align 1
  %v5_212f4 = add i8 %v2_212f4, %v4_212f2
  store i8 %v5_212f4, i8* %v1_212f4, align 1
  %v0_212f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_212f6 = load i32, i32* @ebp, align 4
  %v2_212f6 = add i32 %v1_212f6, -12
  %v3_212f6 = inttoptr i32 %v2_212f6 to i32*
  store i32 %v0_212f6, i32* %v3_212f6, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_212fb = load i32, i32* @ebp, align 4
  %v1_212fb = add i32 %v0_212fb, -28
  %v2_212fb = inttoptr i32 %v1_212fb to i32*
  %v3_212fb = load i32, i32* %v2_212fb, align 4
  store i32 %v3_212fb, i32* %eax.global-to-local, align 4
  %v1_212fe = inttoptr i32 %v3_212fb to i32*
  %v2_212fe = load i32, i32* %v1_212fe, align 4
  store i32 %v2_212fe, i32* %eax.global-to-local, align 4
  ret i32 %v2_212fe
}

define i32 @function_21320() local_unnamed_addr {
dec_label_pc_21320:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_21320 = load i32, i32* %ecx.global-to-local, align 4
  %v1_21320 = add i32 %v0_21320, -1
  store i32 %v1_21320, i32* %ecx.global-to-local, align 4
  %v0_21322 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21322
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21324:
  %v2_2133e = load i32, i32* %arg1, align 4
  %v1_21340 = add i32 %v2_2133e, 16
  store i32 %v1_21340, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2134f

bb:                                               ; preds = %dec_label_pc_21324
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_2134d = call i32 @function_21354(i32 %tmp100)
  br label %dec_label_pc_2134f

dec_label_pc_2134f:                               ; preds = %bb, %dec_label_pc_21324
  %v3_2134d = phi i32 [ %v2_2134d, %bb ], [ %v1_21340, %dec_label_pc_21324 ]
  ret i32 %v3_2134d

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21354(i32 %arg1) local_unnamed_addr {
dec_label_pc_21354:
  %v0_21355 = load i32, i32* @eax, align 4
  ret i32 %v0_21355
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21356:
  %v1_21376 = add i32 %arg2, 4
  %v2_21383 = call i32 @unknown_493d4(i32 %arg1, i32 %v1_21376)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21397

bb:                                               ; preds = %dec_label_pc_21356
  %v1_21395 = call i32 @function_2139c()
  br label %dec_label_pc_21397

dec_label_pc_21397:                               ; preds = %bb, %dec_label_pc_21356
  %v2_21395 = phi i32 [ %v1_21395, %bb ], [ %arg1, %dec_label_pc_21356 ]
  ret i32 %v2_21395

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2139c() local_unnamed_addr {
dec_label_pc_2139c:
  %v0_2139d = load i32, i32* @eax, align 4
  ret i32 %v0_2139d
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE4findERS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_213a0:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_213ca = call i32 @unknown_49486(i32 %arg2)
  %v1_213d7 = call i32 @unknown_49456(i32 %arg2)
  %v2_213dc = ptrtoint i32* %stack_var_-24 to i32
  %v5_213f8 = call i32 @unknown_494b6(i32 %v2_213dc, i32 %arg2, i32 %v1_213d7, i32 %v1_213ca, i32 %arg3)
  %v2_21400 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2140d = call i32 @unknown_426f6(i32 %v2_21400, i32 %arg2)
  %v2_21422 = call i32 @unknown_4282c(i32 %v2_213dc, i32 %v2_21400)
  %v3_2142b = load i32, i32* %stack_var_-24, align 4
  %v1_21431 = call i32 @unknown_4956a(i32 %v3_2142b)
  ret i32 %v1_21431

; uselistorder directives
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
}

define i32 @function_21436(i32 %arg1) local_unnamed_addr {
dec_label_pc_21436:
  %v0_21436 = load i32, i32* @eax, align 4
  %v0_21438 = load i32, i32* @ebp, align 4
  %v1_21438 = add i32 %v0_21438, -32
  %v2_21438 = inttoptr i32 %v1_21438 to i32*
  %v3_21438 = load i32, i32* %v2_21438, align 4
  %v1_2143f = add i32 %v0_21438, -36
  %v2_2143f = inttoptr i32 %v1_2143f to i32*
  %v3_2143f = load i32, i32* %v2_2143f, align 4
  %v3_21449 = call i32 @unknown_42940(i32 %v3_21438, i32 %v3_2143f, i32 %v0_21436)
  %v4_2144e = trunc i32 %v3_21449 to i8
  %v5_2144e = icmp eq i8 %v4_2144e, 0
  %v0_21469 = load i32, i32* @ebp, align 4
  %v1_21469 = add i32 %v0_21469, -28
  %v2_21469 = inttoptr i32 %v1_21469 to i32*
  %v3_21469 = load i32, i32* %v2_21469, align 4
  br i1 %v5_2144e, label %dec_label_pc_21469, label %dec_label_pc_21452

dec_label_pc_21452:                               ; preds = %dec_label_pc_21436
  %v1_21455 = add i32 %v0_21469, -32
  %v2_21455 = inttoptr i32 %v1_21455 to i32*
  %v3_21455 = load i32, i32* %v2_21455, align 4
  %v2_2145f = call i32 @unknown_426f6(i32 %v3_21469, i32 %v3_21455)
  br label %dec_label_pc_21471

dec_label_pc_21469:                               ; preds = %dec_label_pc_21436
  %v1_2146c = add i32 %v0_21469, -20
  %v2_2146c = inttoptr i32 %v1_2146c to i32*
  %v3_2146c = load i32, i32* %v2_2146c, align 4
  %v2_2146f = inttoptr i32 %v3_21469 to i32*
  store i32 %v3_2146c, i32* %v2_2146f, align 4
  br label %dec_label_pc_21471

dec_label_pc_21471:                               ; preds = %dec_label_pc_21469, %dec_label_pc_21452
  %v0_21471 = load i32, i32* @ebp, align 4
  %v1_21471 = add i32 %v0_21471, -28
  %v2_21471 = inttoptr i32 %v1_21471 to i32*
  %v3_21471 = load i32, i32* %v2_21471, align 4
  ret i32 %v3_21471

; uselistorder directives
  uselistorder i32 %v3_21469, { 1, 0 }
  uselistorder i32 %v0_21469, { 1, 0, 2 }
}

define i32 @function_21474(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21474:
  %v0_21474 = load i32, i32* @ebp, align 4
  %v1_21474 = add i32 %v0_21474, -12
  %v2_21474 = inttoptr i32 %v1_21474 to i32*
  %v3_21474 = load i32, i32* %v2_21474, align 4
  %v1_21477 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21477 = icmp eq i32 %v1_21477, %v3_21474
  br i1 %v3_21477, label %bb, label %dec_label_pc_21474.dec_label_pc_21480_crit_edge

dec_label_pc_21474.dec_label_pc_21480_crit_edge:  ; preds = %dec_label_pc_21474
  %v2_2147e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_21480

bb:                                               ; preds = %dec_label_pc_21474
  %v1_2147e = call i32 @function_21485()
  br label %dec_label_pc_21480

dec_label_pc_21480:                               ; preds = %dec_label_pc_21474.dec_label_pc_21480_crit_edge, %bb
  %v2_2147e = phi i32 [ %v2_2147e.pre, %dec_label_pc_21474.dec_label_pc_21480_crit_edge ], [ %v1_2147e, %bb ]
  ret i32 %v2_2147e

; uselistorder directives
  uselistorder label %dec_label_pc_21480, { 1, 0 }
}

define i32 @function_21485() local_unnamed_addr {
dec_label_pc_21485:
  %v0_21489 = load i32, i32* @eax, align 4
  ret i32 %v0_21489
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2148c:
  %v2_214ac = load i32, i32* %arg1, align 4
  %v1_214b1 = inttoptr i32 %arg2 to i32*
  %v2_214b1 = load i32, i32* %v1_214b1, align 4
  %v12_214b3 = icmp eq i32 %v2_214ac, %v2_214b1
  %v1_214b5 = zext i1 %v12_214b3 to i32
  %v3_214b5 = and i32 %v2_214b1, -256
  %v4_214b5 = or i32 %v1_214b5, %v3_214b5
  ret i32 %v4_214b5

; uselistorder directives
  uselistorder i32 %v2_214b1, { 1, 0 }
}

define i32 @function_214c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_214c0:
  %zf.global-to-local = alloca i1, align 1
  %v2_214c0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_214c0 = load i32, i32* @eax, align 4
  %v4_214c0 = trunc i32 %v3_214c0 to i8
  %v5_214c0 = add i8 %v4_214c0, %v2_214c0
  %v15_214c0 = icmp eq i8 %v5_214c0, 0
  store i1 %v15_214c0, i1* %zf.global-to-local, align 1
  %v21_214c0 = inttoptr i32 %v3_214c0 to i8*
  store i8 %v5_214c0, i8* %v21_214c0, align 1
  %v0_214c2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_214c2, label %bb, label %dec_label_pc_214c0.dec_label_pc_214c4_crit_edge

dec_label_pc_214c0.dec_label_pc_214c4_crit_edge:  ; preds = %dec_label_pc_214c0
  %v2_214c2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_214c4

bb:                                               ; preds = %dec_label_pc_214c0
  %v1_214c2 = call i32 @function_214c9()
  br label %dec_label_pc_214c4

dec_label_pc_214c4:                               ; preds = %dec_label_pc_214c0.dec_label_pc_214c4_crit_edge, %bb
  %v2_214c2 = phi i32 [ %v2_214c2.pre, %dec_label_pc_214c0.dec_label_pc_214c4_crit_edge ], [ %v1_214c2, %bb ]
  ret i32 %v2_214c2

; uselistorder directives
  uselistorder label %dec_label_pc_214c4, { 1, 0 }
}

define i32 @function_214c9() local_unnamed_addr {
dec_label_pc_214c9:
  %v0_214ca = load i32, i32* @eax, align 4
  ret i32 %v0_214ca
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE11lower_boundERS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_214cc:
  ret i32 %arg3
}

define i32 @function_214e8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_214e8:
  %v2_214e8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_214e8 = load i32, i32* @eax, align 4
  %v4_214e8 = trunc i32 %v3_214e8 to i8
  %v5_214e8 = add i8 %v4_214e8, %v2_214e8
  %v21_214e8 = inttoptr i32 %v3_214e8 to i8*
  store i8 %v5_214e8, i8* %v21_214e8, align 1
  %v0_214ea = load i32, i32* @eax, align 4
  %v1_214ea = load i32, i32* @ebp, align 4
  %v2_214ea = add i32 %v1_214ea, -12
  %v3_214ea = inttoptr i32 %v2_214ea to i32*
  store i32 %v0_214ea, i32* %v3_214ea, align 4
  %v0_214ef = load i32, i32* @ebp, align 4
  %v1_214ef = add i32 %v0_214ef, -32
  %v2_214ef = inttoptr i32 %v1_214ef to i32*
  %v3_214ef = load i32, i32* %v2_214ef, align 4
  %v1_214f2 = add i32 %v0_214ef, -28
  %v2_214f2 = inttoptr i32 %v1_214f2 to i32*
  %v3_214f2 = load i32, i32* %v2_214f2, align 4
  %v1_214f5 = add i32 %v0_214ef, -36
  %v2_214f5 = inttoptr i32 %v1_214f5 to i32*
  %v3_214f5 = load i32, i32* %v2_214f5, align 4
  %v3_21503 = call i32 @unknown_496da(i32 %v3_214f2, i32 %v3_214ef, i32 %v3_214f5)
  %v0_2150b = load i32, i32* @ebp, align 4
  %v1_2150b = add i32 %v0_2150b, -28
  %v2_2150b = inttoptr i32 %v1_2150b to i32*
  %v3_2150b = load i32, i32* %v2_2150b, align 4
  ret i32 %v3_2150b
}

define i32 @function_21512(i32 %arg1) local_unnamed_addr {
dec_label_pc_21512:
  %v0_21512 = load i32, i32* @edx, align 4
  %v1_21512 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21512 = icmp eq i32 %v1_21512, %v0_21512
  br i1 %v3_21512, label %bb, label %dec_label_pc_21512.dec_label_pc_2151a_crit_edge

dec_label_pc_21512.dec_label_pc_2151a_crit_edge:  ; preds = %dec_label_pc_21512
  %v2_21518.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2151a

bb:                                               ; preds = %dec_label_pc_21512
  %v1_21518 = call i32 @function_2151f()
  br label %dec_label_pc_2151a

dec_label_pc_2151a:                               ; preds = %dec_label_pc_21512.dec_label_pc_2151a_crit_edge, %bb
  %v2_21518 = phi i32 [ %v2_21518.pre, %dec_label_pc_21512.dec_label_pc_2151a_crit_edge ], [ %v1_21518, %bb ]
  ret i32 %v2_21518

; uselistorder directives
  uselistorder label %dec_label_pc_2151a, { 1, 0 }
}

define i32 @function_2151f() local_unnamed_addr {
dec_label_pc_2151f:
  %v0_21520 = load i32, i32* @eax, align 4
  ret i32 %v0_21520
}

define i32 @_ZNKSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21524:
  %v2_2154e = call i32 @unknown_497ae(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21565

bb:                                               ; preds = %dec_label_pc_21524
  %v1_21563 = call i32 @function_2156a()
  br label %dec_label_pc_21565

dec_label_pc_21565:                               ; preds = %bb, %dec_label_pc_21524
  %v2_21563 = phi i32 [ %v1_21563, %bb ], [ %arg1, %dec_label_pc_21524 ]
  ret i32 %v2_21563

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2156a() local_unnamed_addr {
dec_label_pc_2156a:
  %v0_2156b = load i32, i32* @eax, align 4
  ret i32 %v0_2156b
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2156e:
  %v2_21588 = load i32, i32* %arg1, align 4
  %v1_2158a = add i32 %v2_21588, 16
  ret i32 %v1_2158a
}

define i32 @function_21596(i32 %arg1) local_unnamed_addr {
dec_label_pc_21596:
  %v0_21596 = load i32, i32* @ebp, align 4
  %v1_21596 = load i32, i32* @eax, align 4
  %v3_21596 = add i32 %v0_21596, -24
  %v4_21596 = add i32 %v3_21596, %v1_21596
  %v5_21596 = inttoptr i32 %v4_21596 to i8*
  %v6_21596 = load i8, i8* %v5_21596, align 1
  %v7_21596 = load i32, i32* @edx, align 4
  %v8_21596 = udiv i32 %v7_21596, 256
  %v9_21596 = trunc i32 %v8_21596 to i8
  %v10_21596 = add i8 %v9_21596, %v6_21596
  %v15_21596 = icmp ult i8 %v10_21596, %v6_21596
  store i1 %v15_21596, i1* @cf, align 1
  store i8 %v10_21596, i8* %v5_21596, align 1
  %v31_21596 = load i32, i32* @eax, align 4
  ret i32 %v31_21596

; uselistorder directives
  uselistorder i8 %v6_21596, { 1, 0 }
}

define i32 @function_2159d() local_unnamed_addr {
dec_label_pc_2159d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2159d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2159d = add i32 %v0_2159d, -1
  store i32 %v1_2159d, i32* %ecx.global-to-local, align 4
  %v0_2159f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2159f
}

define i32 @_ZNKSt4lessISt6vectorIhSaIhEEEclERKS2_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_215a0:
  ret i32 %arg3
}

define i32 @function_215bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_215bc:
  %v2_215bc = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_215bc = load i32, i32* @eax, align 4
  %v4_215bc = trunc i32 %v3_215bc to i8
  %v5_215bc = add i8 %v4_215bc, %v2_215bc
  %v21_215bc = inttoptr i32 %v3_215bc to i8*
  store i8 %v5_215bc, i8* %v21_215bc, align 1
  %v0_215be = load i32, i32* @eax, align 4
  %v1_215be = load i32, i32* @ebp, align 4
  %v2_215be = add i32 %v1_215be, -12
  %v3_215be = inttoptr i32 %v2_215be to i32*
  store i32 %v0_215be, i32* %v3_215be, align 4
  %v0_215c3 = load i32, i32* @ebp, align 4
  %v1_215c3 = add i32 %v0_215c3, -36
  %v2_215c3 = inttoptr i32 %v1_215c3 to i32*
  %v3_215c3 = load i32, i32* %v2_215c3, align 4
  %v1_215ca = add i32 %v0_215c3, -32
  %v2_215ca = inttoptr i32 %v1_215ca to i32*
  %v3_215ca = load i32, i32* %v2_215ca, align 4
  %v2_215d0 = call i32 @unknown_4985f(i32 %v3_215ca, i32 %v3_215c3)
  store i32 %v2_215d0, i32* @eax, align 4
  %v0_215d5 = load i32, i32* @ebp, align 4
  %v1_215d5 = add i32 %v0_215d5, -12
  %v2_215d5 = inttoptr i32 %v1_215d5 to i32*
  %v3_215d5 = load i32, i32* %v2_215d5, align 4
  %v1_215d8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_215d8 = icmp eq i32 %v1_215d8, %v3_215d5
  br i1 %v3_215d8, label %bb, label %dec_label_pc_215e1

bb:                                               ; preds = %dec_label_pc_215bc
  %v1_215df = call i32 @function_215e6()
  br label %dec_label_pc_215e1

dec_label_pc_215e1:                               ; preds = %bb, %dec_label_pc_215bc
  %v2_215df = phi i32 [ %v1_215df, %bb ], [ %v2_215d0, %dec_label_pc_215bc ]
  ret i32 %v2_215df
}

define i32 @function_215e6() local_unnamed_addr {
dec_label_pc_215e6:
  %v0_215e7 = load i32, i32* @eax, align 4
  ret i32 %v0_215e7
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_215e8:
  %v2_21612 = call i32 @unknown_4994c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21629

bb:                                               ; preds = %dec_label_pc_215e8
  %v1_21627 = call i32 @function_2162e()
  br label %dec_label_pc_21629

dec_label_pc_21629:                               ; preds = %bb, %dec_label_pc_215e8
  %v2_21627 = phi i32 [ %v1_21627, %bb ], [ %arg1, %dec_label_pc_215e8 ]
  ret i32 %v2_21627

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2162e() local_unnamed_addr {
dec_label_pc_2162e:
  %v0_2162f = load i32, i32* @eax, align 4
  ret i32 %v0_2162f
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEeqERKS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21632:
  %v2_21652 = load i32, i32* %arg1, align 4
  %v1_21657 = inttoptr i32 %arg2 to i32*
  %v2_21657 = load i32, i32* %v1_21657, align 4
  %v12_21659 = icmp eq i32 %v2_21652, %v2_21657
  %v1_2165b = zext i1 %v12_21659 to i32
  %v3_2165b = and i32 %v2_21657, -256
  %v4_2165b = or i32 %v1_2165b, %v3_2165b
  store i32 %v4_2165b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2166a

bb:                                               ; preds = %dec_label_pc_21632
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_21668 = call i32 @function_2166f(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2166a

dec_label_pc_2166a:                               ; preds = %bb, %dec_label_pc_21632
  %v4_21668 = phi i32 [ %v3_21668, %bb ], [ %v4_2165b, %dec_label_pc_21632 ]
  ret i32 %v4_21668

; uselistorder directives
  uselistorder i32 %v2_21657, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2166f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2166f:
  %v0_21670 = load i32, i32* @eax, align 4
  ret i32 %v0_21670
}

define i32 @_ZNSt4pairIKSt6vectorIhSaIhEES2_EC1ERS3_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_21672:
  %v1_216ab = add i32 %arg1, 12
  %v2_216bd = call i32 @function_216d6(i32 %v1_216ab, i32 %arg3)
  ret i32 %v2_216bd
}

define i32 @function_216c0() local_unnamed_addr {
dec_label_pc_216c0:
  %eax.global-to-local = alloca i32, align 4
  %v0_216c0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_216c0
}

define i32 @function_216d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_216d6:
  %v0_216d6 = load i32, i32* @ebp, align 4
  %v1_216d6 = add i32 %v0_216d6, -12
  %v2_216d6 = inttoptr i32 %v1_216d6 to i32*
  %v3_216d6 = load i32, i32* %v2_216d6, align 4
  %v1_216d9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_216d9 = xor i32 %v1_216d9, %v3_216d6
  %v3_216d9 = icmp eq i32 %v2_216d9, 0
  store i32 %v2_216d9, i32* @eax, align 4
  br i1 %v3_216d9, label %bb, label %dec_label_pc_216e2

bb:                                               ; preds = %dec_label_pc_216d6
  %v1_216e0 = call i32 @function_216e7()
  br label %dec_label_pc_216e2

dec_label_pc_216e2:                               ; preds = %bb, %dec_label_pc_216d6
  %v2_216e0 = phi i32 [ %v1_216e0, %bb ], [ %v2_216d9, %dec_label_pc_216d6 ]
  ret i32 %v2_216e0
}

define i32 @function_216e7() local_unnamed_addr {
dec_label_pc_216e7:
  %v0_216ec = load i32, i32* @eax, align 4
  ret i32 %v0_216ec
}

define i32 @_ZNSt3mapISt6vectorIhSaIhEES2_St4lessIS2_ESaISt4pairIKS2_S2_EEE6insertESt17_Rb_tree_iteratorIS7_ERKS7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_216ee:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_2171a = ptrtoint i32* %stack_var_-40 to i32
  %v2_2171e = ptrtoint i32* %stack_var_-20 to i32
  %v2_21724 = call i32 @unknown_49a9c(i32 %v2_2171e, i32 %v4_2171a)
  ret i32 %arg1
}

define i32 @function_2173a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2173a:
  %v0_2173b = load i32, i32* @eax, align 4
  %v11_2173b = and i32 %v0_2173b, -248
  %v0_2173d = load i32, i32* @edx, align 4
  %v2_21744 = call i32 @unknown_49ad6(i32 %v11_2173b, i32 %v0_2173d)
  %v0_2174c = load i32, i32* @ebp, align 4
  %v1_2174c = add i32 %v0_2174c, -28
  %v2_2174c = inttoptr i32 %v1_2174c to i32*
  %v3_2174c = load i32, i32* %v2_2174c, align 4
  store i32 %v3_2174c, i32* @eax, align 4
  %v1_2174f = add i32 %v0_2174c, -12
  %v2_2174f = inttoptr i32 %v1_2174f to i32*
  %v3_2174f = load i32, i32* %v2_2174f, align 4
  %v1_21752 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_21752 = icmp eq i32 %v1_21752, %v3_2174f
  br i1 %v3_21752, label %bb, label %dec_label_pc_2175b

bb:                                               ; preds = %dec_label_pc_2173a
  %v1_21759 = call i32 @function_21760()
  br label %dec_label_pc_2175b

dec_label_pc_2175b:                               ; preds = %bb, %dec_label_pc_2173a
  %v2_21759 = phi i32 [ %v1_21759, %bb ], [ %v3_2174c, %dec_label_pc_2173a ]
  ret i32 %v2_21759
}

define i32 @function_21760() local_unnamed_addr {
dec_label_pc_21760:
  %v0_21761 = load i32, i32* @eax, align 4
  ret i32 %v0_21761
}

define i32 @_ZNKSt6vectorIhSaIhEE14_M_range_checkEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21764:
  ret i32 %arg2
}

define i32 @function_2177a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2177a:
  %v2_2177a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2177a = load i32, i32* @eax, align 4
  %v4_2177a = trunc i32 %v3_2177a to i8
  %v5_2177a = add i8 %v4_2177a, %v2_2177a
  %v21_2177a = inttoptr i32 %v3_2177a to i8*
  store i8 %v5_2177a, i8* %v21_2177a, align 1
  %v0_2177c = load i32, i32* @eax, align 4
  %v1_2177c = load i32, i32* @ebp, align 4
  %v2_2177c = add i32 %v1_2177c, -12
  %v3_2177c = inttoptr i32 %v2_2177c to i32*
  store i32 %v0_2177c, i32* %v3_2177c, align 4
  %v0_21781 = load i32, i32* @ebp, align 4
  %v1_21781 = add i32 %v0_21781, -28
  %v2_21781 = inttoptr i32 %v1_21781 to i32*
  %v3_21781 = load i32, i32* %v2_21781, align 4
  %v2_21787 = call i32 @function_3681e(i32 %v3_21781)
  %v1_2178c = load i32, i32* @ebp, align 4
  %v2_2178c = add i32 %v1_2178c, -32
  %v3_2178c = inttoptr i32 %v2_2178c to i32*
  %v4_2178c = load i32, i32* %v3_2178c, align 4
  %tmp5 = icmp ule i32 %v2_21787, %v4_2178c
  %v3_2178f = zext i1 %tmp5 to i32
  %v5_2178f = and i32 %v2_21787, -256
  %v6_2178f = or i32 %v3_2178f, %v5_2178f
  %v5_21792 = icmp eq i1 %tmp5, false
  br i1 %v5_21792, label %bb, label %dec_label_pc_21796

bb:                                               ; preds = %dec_label_pc_2177a
  %v1_21794 = call i32 @function_217a2()
  br label %dec_label_pc_21796

dec_label_pc_21796:                               ; preds = %bb, %dec_label_pc_2177a
  %v3_21796 = phi i32 [ %v1_21794, %bb ], [ %v6_2178f, %dec_label_pc_2177a ]
  ret i32 %v3_21796

; uselistorder directives
  uselistorder i1 %tmp5, { 1, 0 }
  uselistorder i32 %v2_21787, { 1, 0 }
}

define i32 @function_217a2() local_unnamed_addr {
dec_label_pc_217a2:
  %v0_217a2 = load i32, i32* @ebp, align 4
  %v1_217a2 = add i32 %v0_217a2, -12
  %v2_217a2 = inttoptr i32 %v1_217a2 to i32*
  %v3_217a2 = load i32, i32* %v2_217a2, align 4
  %v1_217a5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_217a5 = xor i32 %v1_217a5, %v3_217a2
  %v3_217a5 = icmp eq i32 %v2_217a5, 0
  store i32 %v2_217a5, i32* @eax, align 4
  br i1 %v3_217a5, label %bb, label %dec_label_pc_217ae

bb:                                               ; preds = %dec_label_pc_217a2
  %v1_217ac = call i32 @function_217b3()
  br label %dec_label_pc_217ae

dec_label_pc_217ae:                               ; preds = %bb, %dec_label_pc_217a2
  %v2_217ac = phi i32 [ %v1_217ac, %bb ], [ %v2_217a5, %dec_label_pc_217a2 ]
  ret i32 %v2_217ac
}

define i32 @function_217b3() local_unnamed_addr {
dec_label_pc_217b3:
  %v0_217b4 = load i32, i32* @eax, align 4
  ret i32 %v0_217b4
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E13apply_visitorIK14CScriptVisitorEENT_11result_typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_217b6:
  %stack_var_-20 = alloca i32, align 4
  %v2_217da = ptrtoint i32* %stack_var_-20 to i32
  %v2_217e0 = call i32 @unknown_49fba(i32 %v2_217da, i32 %arg2)
  %v2_217f2 = call i32 @unknown_49ff2(i32 %arg1, i32 %v2_217da)
  store i32 %v2_217f2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21803

bb:                                               ; preds = %dec_label_pc_217b6
  %v1_21801 = call i32 @function_21808()
  br label %dec_label_pc_21803

dec_label_pc_21803:                               ; preds = %bb, %dec_label_pc_217b6
  %v2_21801 = phi i32 [ %v1_21801, %bb ], [ %v2_217f2, %dec_label_pc_217b6 ]
  ret i32 %v2_21801
}

define i32 @function_21808() local_unnamed_addr {
dec_label_pc_21808:
  %v0_21809 = load i32, i32* @eax, align 4
  ret i32 %v0_21809
}

define i32 @_ZN5boost9addressofIKSt6vectorI7CPubKeySaIS2_EEEEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2180a:
  %stack_var_-20 = alloca i32, align 4
  %v2_21828 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2182e = call i32 @unknown_4a0b4(i32 %v2_21828, i32 %arg1)
  %v1_21839 = call i32 @unknown_4a0ec(i32 %v2_21828)
  %v2_21849 = call i32 @unknown_4a11b(i32 %v1_21839, i32 0)
  store i32 %v2_21849, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2185a

bb:                                               ; preds = %dec_label_pc_2180a
  %v1_21858 = call i32 @function_2185f()
  br label %dec_label_pc_2185a

dec_label_pc_2185a:                               ; preds = %bb, %dec_label_pc_2180a
  %v2_21858 = phi i32 [ %v1_21858, %bb ], [ %v2_21849, %dec_label_pc_2180a ]
  ret i32 %v2_21858
}

define i32 @function_2185f() local_unnamed_addr {
dec_label_pc_2185f:
  %v0_21860 = load i32, i32* @eax, align 4
  ret i32 %v0_21860
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIPKSt6vectorI7CPubKeySaIS3_EEEC1ERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21862:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_21885 = call i32 @unknown_3dd5e(i32 %tmp102)
  %v1_2188d = inttoptr i32 %arg2 to i32*
  %v2_2188d = load i32, i32* %v1_2188d, align 4
  store i32 %v2_2188d, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_218a0

bb:                                               ; preds = %dec_label_pc_21862
  %v1_2189e = call i32 @function_218a5()
  br label %dec_label_pc_218a0

dec_label_pc_218a0:                               ; preds = %bb, %dec_label_pc_21862
  %v2_2189e = phi i32 [ %v1_2189e, %bb ], [ 0, %dec_label_pc_21862 ]
  ret i32 %v2_2189e
}

define i32 @function_218a5() local_unnamed_addr {
dec_label_pc_218a5:
  %v0_218a6 = load i32, i32* @eax, align 4
  ret i32 %v0_218a6
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIPKSt6vectorI7CPubKeySaIS3_EEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SE_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_218a7:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_218cd

bb:                                               ; preds = %dec_label_pc_218a7
  %v2_218cb = call i32 @function_218d2(i32 %arg1)
  br label %dec_label_pc_218cd

dec_label_pc_218cd:                               ; preds = %bb, %dec_label_pc_218a7
  %v3_218cb = phi i32 [ %v2_218cb, %bb ], [ %arg1, %dec_label_pc_218a7 ]
  ret i32 %v3_218cb
}

define i32 @function_218d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_218d2:
  %v0_218d3 = load i32, i32* @eax, align 4
  ret i32 %v0_218d3
}

define i32 @_ZN5boost15foreach_detail_7derefofIKSt6vectorI7CPubKeySaIS3_EEEERT_PS7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_218d4:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_218fa

bb:                                               ; preds = %dec_label_pc_218d4
  %v2_218f8 = call i32 @function_218ff(i32 %arg1)
  br label %dec_label_pc_218fa

dec_label_pc_218fa:                               ; preds = %bb, %dec_label_pc_218d4
  %v3_218f8 = phi i32 [ %v2_218f8, %bb ], [ %arg1, %dec_label_pc_218d4 ]
  ret i32 %v3_218f8
}

define i32 @function_218ff(i32 %arg1) local_unnamed_addr {
dec_label_pc_218ff:
  %v0_21900 = load i32, i32* @eax, align 4
  ret i32 %v0_21900
}

define i32 @_ZN5boost17range_adl_barrier5beginISt6vectorI7CPubKeySaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21901:
  %v2_2192b = call i32 @unknown_4a245(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21942

bb:                                               ; preds = %dec_label_pc_21901
  %v1_21940 = call i32 @function_21947()
  br label %dec_label_pc_21942

dec_label_pc_21942:                               ; preds = %bb, %dec_label_pc_21901
  %v2_21940 = phi i32 [ %v1_21940, %bb ], [ %arg1, %dec_label_pc_21901 ]
  ret i32 %v2_21940

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_21947() local_unnamed_addr {
dec_label_pc_21947:
  %v0_21948 = load i32, i32* @eax, align 4
  ret i32 %v0_21948
}

define i32 @_ZN5boost15foreach_detail_8auto_anyIN9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS4_SaIS4_EEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2194c:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_2196f = call i32 @unknown_3de48(i32 %tmp102)
  %v1_2197a = inttoptr i32 %arg2 to i32*
  %v2_2197a = load i32, i32* %v1_2197a, align 4
  store i32 %v2_2197a, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2198a

bb:                                               ; preds = %dec_label_pc_2194c
  %v1_21988 = call i32 @function_2198f()
  br label %dec_label_pc_2198a

dec_label_pc_2198a:                               ; preds = %bb, %dec_label_pc_2194c
  %v2_21988 = phi i32 [ %v1_21988, %bb ], [ 0, %dec_label_pc_2194c ]
  ret i32 %v2_21988
}

define i32 @function_2198f() local_unnamed_addr {
dec_label_pc_2198f:
  %v0_21990 = load i32, i32* @eax, align 4
  ret i32 %v0_21990
}

define i32 @_ZN5boost17range_adl_barrier3endISt6vectorI7CPubKeySaIS3_EEEENS_14range_iteratorIKT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21991:
  %v2_219bb = call i32 @unknown_4a31f(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_219d2

bb:                                               ; preds = %dec_label_pc_21991
  %v1_219d0 = call i32 @function_219d7()
  br label %dec_label_pc_219d2

dec_label_pc_219d2:                               ; preds = %bb, %dec_label_pc_21991
  %v2_219d0 = phi i32 [ %v1_219d0, %bb ], [ %arg1, %dec_label_pc_21991 ]
  ret i32 %v2_219d0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_219d7() local_unnamed_addr {
dec_label_pc_219d7:
  %v0_219d8 = load i32, i32* @eax, align 4
  ret i32 %v0_219d8
}

define i32 @_ZN5boost15foreach_detail_13auto_any_castIN9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS4_SaIS4_EEEEN4mpl_5bool_ILb0EEEEERNS_3mpl3if_IT0_KT_SH_E4typeERKNS0_13auto_any_baseE(i32 %arg1) local_unnamed_addr {
dec_label_pc_219db:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21a01

bb:                                               ; preds = %dec_label_pc_219db
  %v2_219ff = call i32 @function_21a06(i32 %arg1)
  br label %dec_label_pc_21a01

dec_label_pc_21a01:                               ; preds = %bb, %dec_label_pc_219db
  %v3_219ff = phi i32 [ %v2_219ff, %bb ], [ %arg1, %dec_label_pc_219db ]
  ret i32 %v3_219ff
}

define i32 @function_21a06(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a06:
  %v0_21a07 = load i32, i32* @eax, align 4
  ret i32 %v0_21a07
}

define i32 @_ZN9__gnu_cxxeqIPK7CPubKeySt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21a08:
  %v1_21a2c = call i32 @unknown_4a3e0(i32 %arg1)
  %v1_21a31 = inttoptr i32 %v1_21a2c to i32*
  %v2_21a31 = load i32, i32* %v1_21a31, align 4
  %v1_21a39 = call i32 @unknown_4a3e0(i32 %arg2)
  %v1_21a3e = inttoptr i32 %v1_21a39 to i32*
  %v2_21a3e = load i32, i32* %v1_21a3e, align 4
  %v12_21a40 = icmp eq i32 %v2_21a31, %v2_21a3e
  %v1_21a42 = zext i1 %v12_21a40 to i32
  %v3_21a42 = and i32 %v2_21a3e, -256
  %v4_21a42 = or i32 %v1_21a42, %v3_21a42
  store i32 %v4_21a42, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21a51

bb:                                               ; preds = %dec_label_pc_21a08
  %v1_21a4f = call i32 @function_21a56()
  br label %dec_label_pc_21a51

dec_label_pc_21a51:                               ; preds = %bb, %dec_label_pc_21a08
  %v2_21a4f = phi i32 [ %v1_21a4f, %bb ], [ %v4_21a42, %dec_label_pc_21a08 ]
  ret i32 %v2_21a4f

; uselistorder directives
  uselistorder i32 %v2_21a3e, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4a3e0, { 1, 0 }
}

define i32 @function_21a56() local_unnamed_addr {
dec_label_pc_21a56:
  %v0_21a5b = load i32, i32* @eax, align 4
  ret i32 %v0_21a5b
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS1_SaIS1_EEEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21a5c:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_21a76 = load i32, i32* %arg1, align 4
  %v1_21a78 = add i32 %v2_21a76, 65
  store i32 %v1_21a78, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21a8f

bb:                                               ; preds = %dec_label_pc_21a5c
  %v2_21a8d = call i32 @function_21a94(i32 %tmp100)
  br label %dec_label_pc_21a8f

dec_label_pc_21a8f:                               ; preds = %bb, %dec_label_pc_21a5c
  %v3_21a8d = phi i32 [ %v2_21a8d, %bb ], [ %tmp100, %dec_label_pc_21a5c ]
  ret i32 %v3_21a8d
}

define i32 @function_21a94(i32 %arg1) local_unnamed_addr {
dec_label_pc_21a94:
  %v0_21a95 = load i32, i32* @eax, align 4
  ret i32 %v0_21a95
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_21a96:
  %v2_21ab0 = load i32, i32* %arg1, align 4
  store i32 %v2_21ab0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21abe

bb:                                               ; preds = %dec_label_pc_21a96
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_21abc = call i32 @function_21ac3(i32 %tmp100)
  br label %dec_label_pc_21abe

dec_label_pc_21abe:                               ; preds = %bb, %dec_label_pc_21a96
  %v3_21abc = phi i32 [ %v2_21abc, %bb ], [ %v2_21ab0, %dec_label_pc_21a96 ]
  ret i32 %v3_21abc

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_21ac3(i32 %arg1) local_unnamed_addr {
dec_label_pc_21ac3:
  %v0_21ac4 = load i32, i32* @eax, align 4
  ret i32 %v0_21ac4
}

define i32 @_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21ac6:
  %v8_21b0a = call i32 @unknown_4a4cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21b1b

bb:                                               ; preds = %dec_label_pc_21ac6
  %v1_21b19 = call i32 @function_21b20()
  br label %dec_label_pc_21b1b

dec_label_pc_21b1b:                               ; preds = %bb, %dec_label_pc_21ac6
  %v2_21b19 = phi i32 [ %v1_21b19, %bb ], [ 0, %dec_label_pc_21ac6 ]
  ret i32 %v2_21b19

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_21b20() local_unnamed_addr {
dec_label_pc_21b20:
  %v0_21b21 = load i32, i32* @eax, align 4
  ret i32 %v0_21b21
}

define i32 @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b22:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21b48

bb:                                               ; preds = %dec_label_pc_21b22
  %v2_21b46 = call i32 @function_21b4d(i32 %arg1)
  br label %dec_label_pc_21b48

dec_label_pc_21b48:                               ; preds = %bb, %dec_label_pc_21b22
  %v3_21b46 = phi i32 [ %v2_21b46, %bb ], [ %arg1, %dec_label_pc_21b22 ]
  ret i32 %v3_21b46
}

define i32 @function_21b4d(i32 %arg1) local_unnamed_addr {
dec_label_pc_21b4d:
  %v0_21b4e = load i32, i32* @eax, align 4
  ret i32 %v0_21b4e
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21b50:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_21b7a = call i32 @function_3674e(i32 %tmp103, i32 %arg2)
  %v1_21b82 = add i32 %tmp103, 8
  store i32 %v1_21b82, i32* @eax, align 4
  %v1_21b88 = call i32 @function_2b4a8(i32 %v1_21b82)
  store i32 ptrtoint (%vtable_381d8_type* @global_var_381d8.2264 to i32), i32* %arg1, align 4
  %v2_21b99 = inttoptr i32 %v1_21b82 to i32*
  store i32 ptrtoint (i32* @global_var_381ec.2265 to i32), i32* %v2_21b99, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21bac

bb:                                               ; preds = %dec_label_pc_21b50
  %v1_21baa = call i32 @function_21bb1()
  br label %dec_label_pc_21bac

dec_label_pc_21bac:                               ; preds = %bb, %dec_label_pc_21b50
  %v2_21baa = phi i32 [ %v1_21baa, %bb ], [ 0, %dec_label_pc_21b50 ]
  ret i32 %v2_21baa

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_381d8_type* @global_var_381d8.2264 to i32), { 2, 1, 0 }
}

define i32 @function_21bb1() local_unnamed_addr {
dec_label_pc_21bb1:
  %v0_21bb2 = load i32, i32* @eax, align 4
  ret i32 %v0_21bb2
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21bb4:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v2_21bdf = call i32 @function_367fe(i32 %tmp102, i32 %arg2)
  %v1_21be7 = add i32 %tmp102, 28
  %v1_21bed = call i32 @unknown_3d9c6(i32 %v1_21be7)
  store i32 ptrtoint (%vtable_38178_type* @global_var_38178.2266 to i32), i32* %arg1, align 4
  %v1_21bfe = add i32 %tmp102, 8
  %v2_21bfe = inttoptr i32 %v1_21bfe to i32*
  store i32 ptrtoint (i32* @global_var_38194.2267 to i32), i32* %v2_21bfe, align 4
  %v2_21c08 = inttoptr i32 %v1_21be7 to i32*
  store i32 ptrtoint (i32* @global_var_381a4.2268 to i32), i32* %v2_21c08, align 4
  %v1_21c12 = add i32 %arg2, 8
  store i32 %v1_21c12, i32* @edx, align 4
  store i32 %v1_21bfe, i32* @eax, align 4
  %v2_21c22 = call i32 @function_2ca24(i32 %v1_21bfe, i32 %v1_21c12)
  %v0_21c27 = call i32 @function_21c4e()
  ret i32 %v0_21c27

; uselistorder directives
  uselistorder i32 %v1_21bfe, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38178_type* @global_var_38178.2266 to i32), { 2, 1, 0 }
}

define i32 @function_21c2a() local_unnamed_addr {
dec_label_pc_21c2a:
  %eax.global-to-local = alloca i32, align 4
  %v0_21c2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21c2a
}

define i32 @function_21c4e() local_unnamed_addr {
dec_label_pc_21c4e:
  %v0_21c4e = load i32, i32* @ebp, align 4
  %v1_21c4e = add i32 %v0_21c4e, -12
  %v2_21c4e = inttoptr i32 %v1_21c4e to i32*
  %v3_21c4e = load i32, i32* %v2_21c4e, align 4
  %v1_21c51 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21c51 = xor i32 %v1_21c51, %v3_21c4e
  %v3_21c51 = icmp eq i32 %v2_21c51, 0
  store i32 %v2_21c51, i32* @eax, align 4
  br i1 %v3_21c51, label %bb, label %dec_label_pc_21c5a

bb:                                               ; preds = %dec_label_pc_21c4e
  %v1_21c58 = call i32 @function_21c5f()
  br label %dec_label_pc_21c5a

dec_label_pc_21c5a:                               ; preds = %bb, %dec_label_pc_21c4e
  %v2_21c58 = phi i32 [ %v1_21c58, %bb ], [ %v2_21c51, %dec_label_pc_21c4e ]
  ret i32 %v2_21c58
}

define i32 @function_21c5f() local_unnamed_addr {
dec_label_pc_21c5f:
  %v0_21c64 = load i32, i32* @eax, align 4
  ret i32 %v0_21c64
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21c66:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_21c98 = add i32 %tmp103, 8
  store i32 %v1_21c98, i32* @eax, align 4
  %v2_21c9e = call i32 @function_2b5be(i32 %v1_21c98, i32 %arg2)
  store i32 ptrtoint (%vtable_38138_type* @global_var_38138.2270 to i32), i32* %arg1, align 4
  %v2_21caf = inttoptr i32 %v1_21c98 to i32*
  store i32 ptrtoint (i32* @global_var_3814c.2271 to i32), i32* %v2_21caf, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21cc2

bb:                                               ; preds = %dec_label_pc_21c66
  %v1_21cc0 = call i32 @function_21cc7()
  br label %dec_label_pc_21cc2

dec_label_pc_21cc2:                               ; preds = %bb, %dec_label_pc_21c66
  %v2_21cc0 = phi i32 [ %v1_21cc0, %bb ], [ 0, %dec_label_pc_21c66 ]
  ret i32 %v2_21cc0

; uselistorder directives
  uselistorder i32 (i32)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_38138_type* @global_var_38138.2270 to i32), { 2, 1, 0 }
}

define i32 @function_21cc7() local_unnamed_addr {
dec_label_pc_21cc7:
  %v0_21cc8 = load i32, i32* @eax, align 4
  ret i32 %v0_21cc8
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEEC1ERKS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21cca:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* @eax, align 4
  %v2_21cf5 = call i32 @function_36b04(i32 %tmp102, i32 %arg2)
  %v1_21cfd = add i32 %tmp102, 28
  %v1_21d03 = call i32 @unknown_3dadc(i32 %v1_21cfd)
  store i32 ptrtoint (%vtable_380d8_type* @global_var_380d8.2272 to i32), i32* %arg1, align 4
  %v1_21d14 = add i32 %tmp102, 8
  %v2_21d14 = inttoptr i32 %v1_21d14 to i32*
  store i32 ptrtoint (i32* @global_var_380f4.2273 to i32), i32* %v2_21d14, align 4
  %v2_21d1e = inttoptr i32 %v1_21cfd to i32*
  store i32 ptrtoint (i32* @global_var_38104.2274 to i32), i32* %v2_21d1e, align 4
  %v1_21d28 = add i32 %arg2, 8
  %v5_21d2e = icmp ugt i32* %arg1, inttoptr (i32 -9 to i32*)
  store i1 %v5_21d2e, i1* @cf, align 1
  store i32 %v1_21d14, i32* @eax, align 4
  %v2_21d38 = call i32 @function_2cb3a(i32 %v1_21d14, i32 %v1_21d28)
  %v0_21d3d = call i32 @function_21d64()
  ret i32 %v0_21d3d

; uselistorder directives
  uselistorder i32 %v1_21d14, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_380d8_type* @global_var_380d8.2272 to i32), { 2, 1, 0 }
}

define i32 @function_21d40() local_unnamed_addr {
dec_label_pc_21d40:
  %eax.global-to-local = alloca i32, align 4
  %v0_21d40 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_21d40
}

define i32 @function_21d64() local_unnamed_addr {
dec_label_pc_21d64:
  %v0_21d64 = load i32, i32* @ebp, align 4
  %v1_21d64 = add i32 %v0_21d64, -12
  %v2_21d64 = inttoptr i32 %v1_21d64 to i32*
  %v3_21d64 = load i32, i32* %v2_21d64, align 4
  %v1_21d67 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21d67 = xor i32 %v1_21d67, %v3_21d64
  %v3_21d67 = icmp eq i32 %v2_21d67, 0
  store i32 %v2_21d67, i32* @eax, align 4
  br i1 %v3_21d67, label %bb, label %dec_label_pc_21d70

bb:                                               ; preds = %dec_label_pc_21d64
  %v1_21d6e = call i32 @function_21d75()
  br label %dec_label_pc_21d70

dec_label_pc_21d70:                               ; preds = %bb, %dec_label_pc_21d64
  %v2_21d6e = phi i32 [ %v1_21d6e, %bb ], [ %v2_21d67, %dec_label_pc_21d64 ]
  ret i32 %v2_21d6e
}

define i32 @function_21d75() local_unnamed_addr {
dec_label_pc_21d75:
  %v0_21d7a = load i32, i32* @eax, align 4
  ret i32 %v0_21d7a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_21d7b:
  %v1_21d95 = add i32 %arg1, 12
  %v2_21d95 = inttoptr i32 %v1_21d95 to i32*
  %v3_21d95 = load i32, i32* %v2_21d95, align 4
  store i32 %v3_21d95, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21da4

bb:                                               ; preds = %dec_label_pc_21d7b
  %v2_21da2 = call i32 @function_21da9(i32 %arg1)
  br label %dec_label_pc_21da4

dec_label_pc_21da4:                               ; preds = %bb, %dec_label_pc_21d7b
  %v3_21da2 = phi i32 [ %v2_21da2, %bb ], [ %v3_21d95, %dec_label_pc_21d7b ]
  ret i32 %v3_21da2
}

define i32 @function_21da9(i32 %arg1) local_unnamed_addr {
dec_label_pc_21da9:
  %v0_21daa = load i32, i32* @eax, align 4
  ret i32 %v0_21daa
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_21dab:
  %v1_21dc5 = add i32 %arg1, 8
  %v2_21dc5 = inttoptr i32 %v1_21dc5 to i32*
  %v3_21dc5 = load i32, i32* %v2_21dc5, align 4
  store i32 %v3_21dc5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21dd4

bb:                                               ; preds = %dec_label_pc_21dab
  %v2_21dd2 = call i32 @function_21dd9(i32 %arg1)
  br label %dec_label_pc_21dd4

dec_label_pc_21dd4:                               ; preds = %bb, %dec_label_pc_21dab
  %v3_21dd2 = phi i32 [ %v2_21dd2, %bb ], [ %v3_21dc5, %dec_label_pc_21dab ]
  ret i32 %v3_21dd2
}

define i32 @function_21dd9(i32 %arg1) local_unnamed_addr {
dec_label_pc_21dd9:
  %v0_21dda = load i32, i32* @eax, align 4
  ret i32 %v0_21dda
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21ddc:
  %stack_var_-17 = alloca i32, align 4
  %v1_21dfd = add i32 %arg2, 16
  %v1_21e03 = call i32 @unknown_443ba(i32 %v1_21dfd)
  %v2_21e0a = ptrtoint i32* %stack_var_-17 to i32
  %v2_21e17 = call i32 @unknown_4ac0c(i32 %v2_21e0a, i32 %arg1)
  ret i32 %v2_21e17
}

define i32 @function_21e22(i32 %arg1) local_unnamed_addr {
dec_label_pc_21e22:
  %v0_21e22 = load i32, i32* @eax, align 4
  %v2_21e22 = add i32 %v0_21e22, zext (i8 ptrtoint (i8* @global_var_8d.2244 to i8) to i32)
  %v16_21e22 = and i32 %v2_21e22, 255
  %v18_21e22 = and i32 %v0_21e22, -256
  %v19_21e22 = or i32 %v16_21e22, %v18_21e22
  %v0_21e24 = load i32, i32* @ebp, align 4
  %v1_21e24 = add i32 %v0_21e24, 1
  store i32 %v1_21e24, i32* @ebp, align 4
  %v1_21e29 = call i32 @unknown_4acbc(i32 %v19_21e22)
  %v0_21e2e = load i32, i32* @ebp, align 4
  %v1_21e2e = add i32 %v0_21e2e, -13
  %v1_21e34 = call i32 @unknown_4ac5c(i32 %v1_21e2e)
  %v0_21e39 = load i32, i32* @ebp, align 4
  %v1_21e39 = add i32 %v0_21e39, -32
  %v2_21e39 = inttoptr i32 %v1_21e39 to i32*
  %v3_21e39 = load i32, i32* %v2_21e39, align 4
  %v1_21e40 = add i32 %v0_21e39, -28
  %v2_21e40 = inttoptr i32 %v1_21e40 to i32*
  %v3_21e40 = load i32, i32* %v2_21e40, align 4
  %v2_21e46 = call i32 @unknown_4acf8(i32 %v3_21e40, i32 %v3_21e39)
  %v0_21e4b = load i32, i32* @ebp, align 4
  %v1_21e4b = add i32 %v0_21e4b, -12
  %v2_21e4b = inttoptr i32 %v1_21e4b to i32*
  %v3_21e4b = load i32, i32* %v2_21e4b, align 4
  %v1_21e4e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_21e4e = xor i32 %v1_21e4e, %v3_21e4b
  %v3_21e4e = icmp eq i32 %v2_21e4e, 0
  store i32 %v2_21e4e, i32* @eax, align 4
  br i1 %v3_21e4e, label %bb, label %dec_label_pc_21e57

bb:                                               ; preds = %dec_label_pc_21e22
  %v1_21e55 = call i32 @function_21e5c()
  br label %dec_label_pc_21e57

dec_label_pc_21e57:                               ; preds = %bb, %dec_label_pc_21e22
  %v2_21e55 = phi i32 [ %v1_21e55, %bb ], [ %v2_21e4e, %dec_label_pc_21e22 ]
  ret i32 %v2_21e55

; uselistorder directives
  uselistorder i32 %v0_21e22, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_8d.2244 to i8), { 1, 0 }
}

define i32 @function_21e5c() local_unnamed_addr {
dec_label_pc_21e5c:
  %v0_21e60 = load i32, i32* @eax, align 4
  ret i32 %v0_21e60
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_21e62:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_21e7f = call i32 @function_373be(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_21e90 = add i32 %tmp100, 4
  %v2_21e90 = inttoptr i32 %v1_21e90 to i32*
  store i32 0, i32* %v2_21e90, align 4
  %v1_21e9a = add i32 %tmp100, 8
  %v2_21e9a = inttoptr i32 %v1_21e9a to i32*
  store i32 0, i32* %v2_21e9a, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21ead

bb:                                               ; preds = %dec_label_pc_21e62
  %v1_21eab = call i32 @function_21eb2()
  br label %dec_label_pc_21ead

dec_label_pc_21ead:                               ; preds = %bb, %dec_label_pc_21e62
  %v2_21eab = phi i32 [ %v1_21eab, %bb ], [ 0, %dec_label_pc_21e62 ]
  ret i32 %v2_21eab

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_21eb2() local_unnamed_addr {
dec_label_pc_21eb2:
  %v0_21eb3 = load i32, i32* @eax, align 4
  ret i32 %v0_21eb3
}

define i32 @_ZSt8_DestroyIPhEvT_S1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21eb4:
  %v2_21ede = call i32 @unknown_4ae60(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21eef

bb:                                               ; preds = %dec_label_pc_21eb4
  %v1_21eed = call i32 @function_21ef4()
  br label %dec_label_pc_21eef

dec_label_pc_21eef:                               ; preds = %bb, %dec_label_pc_21eb4
  %v2_21eed = phi i32 [ %v1_21eed, %bb ], [ 0, %dec_label_pc_21eb4 ]
  ret i32 %v2_21eed
}

define i32 @function_21ef4() local_unnamed_addr {
dec_label_pc_21ef4:
  %v0_21ef5 = load i32, i32* @eax, align 4
  ret i32 %v0_21ef5
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE12_Vector_implC1ERKS0_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21ef6:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_21f20 = call i32 @unknown_4aed2(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_21f31 = add i32 %tmp103, 4
  %v2_21f31 = inttoptr i32 %v1_21f31 to i32*
  store i32 0, i32* %v2_21f31, align 4
  %v1_21f3b = add i32 %tmp103, 8
  %v2_21f3b = inttoptr i32 %v1_21f3b to i32*
  store i32 0, i32* %v2_21f3b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21f4e

bb:                                               ; preds = %dec_label_pc_21ef6
  %v1_21f4c = call i32 @function_21f53()
  br label %dec_label_pc_21f4e

dec_label_pc_21f4e:                               ; preds = %bb, %dec_label_pc_21ef6
  %v2_21f4c = phi i32 [ %v1_21f4c, %bb ], [ 0, %dec_label_pc_21ef6 ]
  ret i32 %v2_21f4c

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_21f53() local_unnamed_addr {
dec_label_pc_21f53:
  %v0_21f54 = load i32, i32* @eax, align 4
  ret i32 %v0_21f54
}

define i32 @_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_21f56:
  %v10_21f73 = icmp eq i32 %arg2, 0
  br i1 %v10_21f73, label %dec_label_pc_21f9a, label %dec_label_pc_21f79

dec_label_pc_21f79:                               ; preds = %dec_label_pc_21f56
  %v3_21f8e = call i32 @unknown_4af74(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_21f9a

dec_label_pc_21f9a:                               ; preds = %dec_label_pc_21f56, %dec_label_pc_21f79
  %storemerge = phi i32 [ %v3_21f8e, %dec_label_pc_21f79 ], [ 0, %dec_label_pc_21f56 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21fa6

bb:                                               ; preds = %dec_label_pc_21f9a
  %v1_21fa4 = call i32 @function_21fab()
  br label %dec_label_pc_21fa6

dec_label_pc_21fa6:                               ; preds = %bb, %dec_label_pc_21f9a
  %v2_21fa4 = phi i32 [ %v1_21fa4, %bb ], [ %storemerge, %dec_label_pc_21f9a ]
  ret i32 %v2_21fa4

; uselistorder directives
  uselistorder label %dec_label_pc_21f9a, { 1, 0 }
}

define i32 @function_21fab() local_unnamed_addr {
dec_label_pc_21fab:
  %v0_21fac = load i32, i32* @eax, align 4
  ret i32 %v0_21fac
}

define i32 @_ZSt24__uninitialized_fill_n_aIPhjhhEvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_21fad:
  %v7_21fea = call i32 @unknown_4b026(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_21ffb

bb:                                               ; preds = %dec_label_pc_21fad
  %v1_21ff9 = call i32 @function_22000()
  br label %dec_label_pc_21ffb

dec_label_pc_21ffb:                               ; preds = %bb, %dec_label_pc_21fad
  %v2_21ff9 = phi i32 [ %v1_21ff9, %bb ], [ 0, %dec_label_pc_21fad ]
  ret i32 %v2_21ff9

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22000() local_unnamed_addr {
dec_label_pc_22000:
  %v0_22001 = load i32, i32* @eax, align 4
  ret i32 %v0_22001
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22002:
  ret i32 %arg2
}

define i32 @function_22040() local_unnamed_addr {
dec_label_pc_22040:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_22040 = load i32, i32* %ecx.global-to-local, align 4
  %v1_22040 = add i32 %v0_22040, -1
  store i32 %v1_22040, i32* %ecx.global-to-local, align 4
  %v0_22042 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22042
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22043:
  %v2_2206d = call i32 @unknown_4b10b(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22084

bb:                                               ; preds = %dec_label_pc_22043
  %v1_22082 = call i32 @function_22089()
  br label %dec_label_pc_22084

dec_label_pc_22084:                               ; preds = %bb, %dec_label_pc_22043
  %v2_22082 = phi i32 [ %v1_22082, %bb ], [ %arg1, %dec_label_pc_22043 ]
  ret i32 %v2_22082

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22089() local_unnamed_addr {
dec_label_pc_22089:
  %v0_2208a = load i32, i32* @eax, align 4
  ret i32 %v0_2208a
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEENS1_IPhS6_EEET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2208d:
  %v1_220be = call i32 @unknown_4b192(i32 %arg4)
  %v1_220cb = call i32 @unknown_45b4e(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_220d8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_220d8:
  %v1_220d8 = call i32 @unknown_45b4e(i32 ptrtoint (i32* @9 to i32))
  %v0_220dd = load i32, i32* @esi, align 4
  %v0_220e1 = load i32, i32* @ebx, align 4
  %v3_220e8 = call i32 @unknown_4b1c7(i32 %v1_220d8, i32 %v0_220e1, i32 %v0_220dd)
  %v1_220ed = load i32, i32* @ebp, align 4
  %v2_220ed = add i32 %v1_220ed, -16
  %v3_220ed = inttoptr i32 %v2_220ed to i32*
  store i32 %v3_220e8, i32* %v3_220ed, align 4
  %v0_220f0 = load i32, i32* @ebp, align 4
  %v1_220f0 = add i32 %v0_220f0, -16
  %v1_220f7 = add i32 %v0_220f0, -28
  %v2_220f7 = inttoptr i32 %v1_220f7 to i32*
  %v3_220f7 = load i32, i32* %v2_220f7, align 4
  %v2_220fd = call i32 @unknown_3e195(i32 %v3_220f7, i32 %v1_220f0)
  %v0_22102 = load i32, i32* @ebp, align 4
  %v1_22102 = add i32 %v0_22102, -28
  %v2_22102 = inttoptr i32 %v1_22102 to i32*
  %v3_22102 = load i32, i32* %v2_22102, align 4
  ret i32 %v3_22102
}

define i32 @function_22110(i32 %arg1) local_unnamed_addr {
dec_label_pc_22110:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22115(i32 %arg1) local_unnamed_addr {
dec_label_pc_22115:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_22115 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22115 = add i32 %v0_22115, 1583034564
  %v2_22115 = inttoptr i32 %v1_22115 to i32*
  %v3_22115 = load i32, i32* %v2_22115, align 4
  %v4_22115 = add i32 %v3_22115, 1
  store i32 %v4_22115, i32* %v2_22115, align 4
  %v0_2211c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2211c
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEvT_S7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2211f:
  %v2_22149 = call i32 @unknown_4b2ac(i32 %arg1, i32 %arg2)
  ret i32 0
}

define i32 @function_2215e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2215e:
  %v0_22160 = load i32, i32* @eax, align 4
  ret i32 %v0_22160
}

define i32 @_ZSt12__miter_baseIPhENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22161:
  %v0_2216d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2216d
}

define i32 @function_22173(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22173:
  %v0_22173 = load i32, i32* @eax, align 4
  %v1_22173 = load i32, i32* @ebp, align 4
  %v2_22173 = add i32 %v1_22173, -12
  %v3_22173 = inttoptr i32 %v2_22173 to i32*
  store i32 %v0_22173, i32* %v3_22173, align 4
  %v0_22178 = load i32, i32* @ebp, align 4
  %v1_22178 = add i32 %v0_22178, -28
  %v2_22178 = inttoptr i32 %v1_22178 to i32*
  %v3_22178 = load i32, i32* %v2_22178, align 4
  %v1_2217e = call i32 @unknown_4b31e(i32 %v3_22178)
  store i32 %v1_2217e, i32* @eax, align 4
  %v0_22183 = load i32, i32* @ebp, align 4
  %v1_22183 = add i32 %v0_22183, -12
  %v2_22183 = inttoptr i32 %v1_22183 to i32*
  %v3_22183 = load i32, i32* %v2_22183, align 4
  %v1_22186 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22186 = icmp eq i32 %v1_22186, %v3_22183
  br i1 %v3_22186, label %bb, label %dec_label_pc_2218f

bb:                                               ; preds = %dec_label_pc_22173
  %v1_2218d = call i32 @function_22194()
  br label %dec_label_pc_2218f

dec_label_pc_2218f:                               ; preds = %bb, %dec_label_pc_22173
  %v2_2218d = phi i32 [ %v1_2218d, %bb ], [ %v1_2217e, %dec_label_pc_22173 ]
  ret i32 %v2_2218d
}

define i32 @function_22194() local_unnamed_addr {
dec_label_pc_22194:
  %v0_22195 = load i32, i32* @eax, align 4
  ret i32 %v0_22195
}

define i32 @_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22196:
  %v1_221c1 = call i32 @unknown_4b380(i32 %arg3)
  %v1_221ce = call i32 @unknown_4b380(i32 %arg2)
  %v1_221db = call i32 @unknown_4b380(i32 %arg1)
  %v3_221eb = call i32 @unknown_4b3b5(i32 %v1_221db, i32 %v1_221ce, i32 %v1_221c1)
  ret i32 %v3_221eb

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4b380, { 2, 1, 0 }
}

define i32 @function_22200(i32 %arg1) local_unnamed_addr {
dec_label_pc_22200:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_22200 = load i32, i32* %ebx.global-to-local, align 4
  %v1_22200 = add i32 %v0_22200, 1583034564
  %v2_22200 = inttoptr i32 %v1_22200 to i32*
  %v3_22200 = load i32, i32* %v2_22200, align 4
  %v4_22200 = add i32 %v3_22200, 1
  store i32 %v4_22200, i32* %v2_22200, align 4
  %v0_22207 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22207
}

define i32 @_ZSt18uninitialized_copyIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22208:
  ret i32 %arg2
}

define i32 @function_2223a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2223a:
  %v0_2223a = load i32, i32* @ebp, align 4
  %v1_2223a = add i32 %v0_2223a, 1
  store i32 %v1_2223a, i32* @ebp, align 4
  %v0_2223f = call i32 @unknown_4b47a()
  store i32 %v0_2223f, i32* @eax, align 4
  %v0_22244 = load i32, i32* @ebp, align 4
  %v1_22244 = add i32 %v0_22244, -12
  %v2_22244 = inttoptr i32 %v1_22244 to i32*
  %v3_22244 = load i32, i32* %v2_22244, align 4
  %v1_22247 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22247 = icmp eq i32 %v1_22247, %v3_22244
  br i1 %v3_22247, label %bb, label %dec_label_pc_22250

bb:                                               ; preds = %dec_label_pc_2223a
  %v1_2224e = call i32 @function_22255()
  br label %dec_label_pc_22250

dec_label_pc_22250:                               ; preds = %bb, %dec_label_pc_2223a
  %v2_2224e = phi i32 [ %v1_2224e, %bb ], [ %v0_2223f, %dec_label_pc_2223a ]
  ret i32 %v2_2224e
}

define i32 @function_22255() local_unnamed_addr {
dec_label_pc_22255:
  %v0_22256 = load i32, i32* @eax, align 4
  ret i32 %v0_22256
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE4findERS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22258:
  ret i32 %arg2
}

define i32 @function_2226a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2226a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2226a = load i32, i32* @ecx, align 4
  %v1_2226a = add i32 %v0_2226a, 255
  %v0_2226c = load i32, i32* @ebp, align 4
  %v1_2226c = add i32 %v0_2226c, 1
  store i32 %v1_2226c, i32* @ebp, align 4
  %v1_2226d = add i32 %v0_2226a, -1587159996
  %v2_2226d = inttoptr i32 %v1_2226d to i8*
  %v3_2226d = load i8, i8* %v2_2226d, align 1
  %v5_2226d = trunc i32 %v1_2226a to i8
  %v6_2226d = load i1, i1* @cf, align 1
  %v7_2226d = zext i1 %v6_2226d to i8
  %v8_2226d = add i8 %v3_2226d, %v5_2226d
  %v9_2226d = add i8 %v7_2226d, %v8_2226d
  %v27_2226d = icmp ule i8 %v9_2226d, %v3_2226d
  %v28_2226d = icmp ult i8 %v8_2226d, %v3_2226d
  %v29_2226d = select i1 %v6_2226d, i1 %v27_2226d, i1 %v28_2226d
  store i1 %v29_2226d, i1* %cf.global-to-local, align 1
  store i8 %v9_2226d, i8* %v2_2226d, align 1
  %v0_22273 = load i32, i32* @eax, align 4
  %v1_22273 = trunc i32 %v0_22273 to i8
  %v2_22273 = load i1, i1* %cf.global-to-local, align 1
  %v3_22273 = zext i1 %v2_22273 to i8
  %v4_22273 = add i8 %v3_22273, %v1_22273
  %v19_22273 = icmp ule i8 %v4_22273, %v1_22273
  %v21_22273 = icmp eq i1 %v2_22273, %v19_22273
  store i1 %v21_22273, i1* %cf.global-to-local, align 1
  %v22_22273 = zext i8 %v4_22273 to i32
  %v24_22273 = and i32 %v0_22273, -256
  %v25_22273 = or i32 %v22_22273, %v24_22273
  store i32 %v25_22273, i32* %eax.global-to-local, align 4
  %v1_22275 = inttoptr i32 %v25_22273 to i8*
  %v2_22275 = load i8, i8* %v1_22275, align 1
  %v5_22275 = add i8 %v2_22275, %v4_22273
  store i8 %v5_22275, i8* %v1_22275, align 1
  %v0_22277 = load i32, i32* %eax.global-to-local, align 4
  %v1_22277 = load i32, i32* @ebp, align 4
  %v2_22277 = add i32 %v1_22277, -12
  %v3_22277 = inttoptr i32 %v2_22277 to i32*
  store i32 %v0_22277, i32* %v3_22277, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2227c = load i32, i32* @ebp, align 4
  %v1_2227c = add i32 %v0_2227c, -32
  %v2_2227c = inttoptr i32 %v1_2227c to i32*
  %v3_2227c = load i32, i32* %v2_2227c, align 4
  store i32 %v3_2227c, i32* %eax.global-to-local, align 4
  %v1_22282 = call i32 @unknown_4b51a(i32 %v3_2227c)
  store i32 %v1_22282, i32* %eax.global-to-local, align 4
  store i32 %v1_22282, i32* %ebx.global-to-local, align 4
  %v0_22289 = load i32, i32* @ebp, align 4
  %v1_22289 = add i32 %v0_22289, -32
  %v2_22289 = inttoptr i32 %v1_22289 to i32*
  %v3_22289 = load i32, i32* %v2_22289, align 4
  store i32 %v3_22289, i32* %eax.global-to-local, align 4
  %v1_2228f = call i32 @unknown_3d63a(i32 %v3_22289)
  store i32 %v1_2228f, i32* %eax.global-to-local, align 4
  %v0_22294 = load i32, i32* @ebp, align 4
  %v1_22294 = add i32 %v0_22294, -20
  %v1_22297 = add i32 %v0_22294, -36
  %v2_22297 = inttoptr i32 %v1_22297 to i32*
  %v3_22297 = load i32, i32* %v2_22297, align 4
  store i32 %v3_22297, i32* @ecx, align 4
  %v0_2229e = load i32, i32* %ebx.global-to-local, align 4
  %v1_222a6 = add i32 %v0_22294, -32
  %v2_222a6 = inttoptr i32 %v1_222a6 to i32*
  %v3_222a6 = load i32, i32* %v2_222a6, align 4
  store i32 %v3_222a6, i32* %eax.global-to-local, align 4
  %v5_222b0 = call i32 @unknown_4b54a(i32 %v1_22294, i32 %v3_222a6, i32 %v1_2228f, i32 %v0_2229e, i32 %v3_22297)
  %v0_222b5 = load i32, i32* @esp, align 4
  %v5_222b5 = icmp ult i32 %v0_222b5, 4
  store i1 %v5_222b5, i1* %cf.global-to-local, align 1
  %v0_222b8 = load i32, i32* @ebp, align 4
  %v1_222b8 = add i32 %v0_222b8, -16
  store i32 %v1_222b8, i32* %eax.global-to-local, align 4
  %v1_222bb = add i32 %v0_222b8, -32
  %v2_222bb = inttoptr i32 %v1_222bb to i32*
  %v3_222bb = load i32, i32* %v2_222bb, align 4
  %v2_222c5 = call i32 @unknown_4459c(i32 %v1_222b8, i32 %v3_222bb)
  %v0_222ca = load i32, i32* @esp, align 4
  %v5_222ca = icmp ult i32 %v0_222ca, 4
  store i1 %v5_222ca, i1* %cf.global-to-local, align 1
  %v0_222cd = load i32, i32* @ebp, align 4
  %v1_222cd = add i32 %v0_222cd, -16
  %v1_222d4 = add i32 %v0_222cd, -20
  store i32 %v1_222d4, i32* %eax.global-to-local, align 4
  %v2_222da = call i32 @unknown_3dce0(i32 %v1_222d4, i32 %v1_222cd)
  store i32 %v2_222da, i32* %eax.global-to-local, align 4
  %v4_222df = trunc i32 %v2_222da to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_222df = icmp eq i8 %v4_222df, 0
  %v1_222e1 = icmp eq i1 %v5_222df, false
  br i1 %v1_222e1, label %dec_label_pc_2230a, label %dec_label_pc_222e3

dec_label_pc_222e3:                               ; preds = %dec_label_pc_2226a
  %v0_222e3 = load i32, i32* @ebp, align 4
  %v1_222e3 = add i32 %v0_222e3, -20
  %v2_222e3 = inttoptr i32 %v1_222e3 to i32*
  %v3_222e3 = load i32, i32* %v2_222e3, align 4
  store i32 %v3_222e3, i32* %eax.global-to-local, align 4
  %v1_222e9 = call i32 @unknown_4b5fe(i32 %v3_222e3)
  store i32 %v1_222e9, i32* %eax.global-to-local, align 4
  %v0_222f0 = load i32, i32* @ebp, align 4
  %v1_222f0 = add i32 %v0_222f0, -32
  %v2_222f0 = inttoptr i32 %v1_222f0 to i32*
  %v3_222f0 = load i32, i32* %v2_222f0, align 4
  store i32 %v3_222f0, i32* %eax.global-to-local, align 4
  %v1_222f7 = add i32 %v0_222f0, -36
  %v2_222f7 = inttoptr i32 %v1_222f7 to i32*
  %v3_222f7 = load i32, i32* %v2_222f7, align 4
  %v3_22301 = call i32 @unknown_4b642(i32 %v3_222f0, i32 %v3_222f7, i32 %v1_222e9)
  store i32 %v3_22301, i32* %eax.global-to-local, align 4
  %v4_22306 = trunc i32 %v3_22301 to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_22306 = icmp eq i8 %v4_22306, 0
  br i1 %v5_22306, label %dec_label_pc_22321, label %dec_label_pc_2230a

dec_label_pc_2230a:                               ; preds = %dec_label_pc_222e3, %dec_label_pc_2226a
  %v0_2230a = load i32, i32* @ebp, align 4
  %v1_2230a = add i32 %v0_2230a, -28
  %v2_2230a = inttoptr i32 %v1_2230a to i32*
  %v3_2230a = load i32, i32* %v2_2230a, align 4
  store i32 %v3_2230a, i32* %eax.global-to-local, align 4
  %v1_2230d = add i32 %v0_2230a, -32
  %v2_2230d = inttoptr i32 %v1_2230d to i32*
  %v3_2230d = load i32, i32* %v2_2230d, align 4
  %v2_22317 = call i32 @unknown_4459c(i32 %v3_2230a, i32 %v3_2230d)
  store i32 %v2_22317, i32* %eax.global-to-local, align 4
  %v0_2231c = load i32, i32* @esp, align 4
  %v5_2231c = icmp ult i32 %v0_2231c, 4
  store i1 %v5_2231c, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_22329

dec_label_pc_22321:                               ; preds = %dec_label_pc_222e3
  %v0_22321 = load i32, i32* @ebp, align 4
  %v1_22321 = add i32 %v0_22321, -28
  %v2_22321 = inttoptr i32 %v1_22321 to i32*
  %v3_22321 = load i32, i32* %v2_22321, align 4
  store i32 %v3_22321, i32* %eax.global-to-local, align 4
  %v1_22324 = add i32 %v0_22321, -20
  %v2_22324 = inttoptr i32 %v1_22324 to i32*
  %v3_22324 = load i32, i32* %v2_22324, align 4
  %v2_22327 = inttoptr i32 %v3_22321 to i32*
  store i32 %v3_22324, i32* %v2_22327, align 4
  br label %dec_label_pc_22329

dec_label_pc_22329:                               ; preds = %dec_label_pc_22321, %dec_label_pc_2230a
  %v0_22329 = load i32, i32* @ebp, align 4
  %v1_22329 = add i32 %v0_22329, -28
  %v2_22329 = inttoptr i32 %v1_22329 to i32*
  %v3_22329 = load i32, i32* %v2_22329, align 4
  store i32 %v3_22329, i32* @eax, align 4
  %v1_2232c = add i32 %v0_22329, -12
  %v2_2232c = inttoptr i32 %v1_2232c to i32*
  %v3_2232c = load i32, i32* %v2_2232c, align 4
  %v1_2232f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2232f = icmp eq i32 %v1_2232f, %v3_2232c
  br i1 %v3_2232f, label %bb, label %dec_label_pc_22338

bb:                                               ; preds = %dec_label_pc_22329
  %v1_22336 = call i32 @function_2233d()
  store i32 %v1_22336, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_22338

dec_label_pc_22338:                               ; preds = %bb, %dec_label_pc_22329
  %v2_22336 = phi i32 [ %v1_22336, %bb ], [ %v3_22329, %dec_label_pc_22329 ]
  ret i32 %v2_22336

; uselistorder directives
  uselistorder i8 %v4_22273, { 0, 2, 1 }
  uselistorder i8 %v1_22273, { 1, 0 }
  uselistorder i8 %v9_2226d, { 1, 0 }
  uselistorder i8 %v8_2226d, { 1, 0 }
  uselistorder i8 %v3_2226d, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @unknown_4459c, { 1, 0 }
}

define i32 @function_2233d() local_unnamed_addr {
dec_label_pc_2233d:
  %v0_22341 = load i32, i32* @eax, align 4
  ret i32 %v0_22341
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22344:
  %v1_22364 = add i32 %arg2, 4
  %v2_22371 = call i32 @unknown_4b774(i32 %arg1, i32 %v1_22364)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22385

bb:                                               ; preds = %dec_label_pc_22344
  %v1_22383 = call i32 @function_2238a()
  br label %dec_label_pc_22385

dec_label_pc_22385:                               ; preds = %bb, %dec_label_pc_22344
  %v2_22383 = phi i32 [ %v1_22383, %bb ], [ %arg1, %dec_label_pc_22344 ]
  ret i32 %v2_22383

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2238a() local_unnamed_addr {
dec_label_pc_2238a:
  %v0_2238b = load i32, i32* @eax, align 4
  ret i32 %v0_2238b
}

define i32 @_ZNSt4pairIjiEC1ERKjRKi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2238e:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_223b4 = inttoptr i32 %arg2 to i32*
  %v2_223b4 = load i32, i32* %v1_223b4, align 4
  store i32 %v2_223b4, i32* %arg1, align 4
  %v1_223be = inttoptr i32 %arg3 to i32*
  %v2_223be = load i32, i32* %v1_223be, align 4
  %v2_223c3 = add i32 %tmp104, 4
  %v3_223c3 = inttoptr i32 %v2_223c3 to i32*
  store i32 %v2_223be, i32* %v3_223c3, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_223d2

bb:                                               ; preds = %dec_label_pc_2238e
  %v4_223d0 = call i32 @function_223d7(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_223d2

dec_label_pc_223d2:                               ; preds = %bb, %dec_label_pc_2238e
  %v5_223d0 = phi i32 [ %v4_223d0, %bb ], [ 0, %dec_label_pc_2238e ]
  ret i32 %v5_223d0
}

define i32 @function_223d7(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_223d7:
  %v0_223d8 = load i32, i32* @eax, align 4
  ret i32 %v0_223d8
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_223da:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-21 = alloca i8, align 1
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_22404 = call i32 @unknown_3d7bc(i32 %arg2)
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v1_22412 = call i32 @unknown_4b69c(i32 %arg2)
  %v2_2243a = ptrtoint i32* %stack_var_-22 to i32
  %v10_2247c124 = icmp eq i32 %v1_22404, 0
  %v1_22480125 = icmp eq i1 %v10_2247c124, false
  %v5_22483129 = icmp eq i1 %v1_22480125, false
  %v1_22485130 = icmp eq i1 %v5_22483129, false
  br i1 %v1_22485130, label %dec_label_pc_22420, label %dec_label_pc_22487

dec_label_pc_22420:                               ; preds = %dec_label_pc_223da, %dec_label_pc_2247c.backedge
  %stack_var_-32.0131 = phi i32 [ %storemerge2.be, %dec_label_pc_2247c.backedge ], [ %v1_22404, %dec_label_pc_223da ]
  store i32 %stack_var_-32.0131, i32* %stack_var_-108, align 4
  %v1_2242c = call i32 @unknown_4b875(i32 %stack_var_-32.0131)
  store i32 %v2_2243a, i32* %stack_var_-108, align 4
  %v2_22440 = call i32 @unknown_4b842(i32 %v2_2243a, i32 %arg3)
  store i32 %arg2, i32* %stack_var_-108, align 4
  %v3_22453 = call i32 @unknown_4b7c4(i32 %arg2, i32 %v2_22440, i32 %v1_2242c)
  %v1_22458 = trunc i32 %v3_22453 to i8
  %v10_2245b = icmp eq i8 %v1_22458, 0
  store i32 %stack_var_-32.0131, i32* %stack_var_-108, align 4
  br i1 %v10_2245b, label %dec_label_pc_2246e, label %dec_label_pc_22461

dec_label_pc_22461:                               ; preds = %dec_label_pc_22420
  %v1_22467 = call i32 @unknown_44185(i32 %stack_var_-32.0131)
  br label %dec_label_pc_2247c.backedge

dec_label_pc_2246e:                               ; preds = %dec_label_pc_22420
  %v1_22474 = call i32 @unknown_44155(i32 %stack_var_-32.0131)
  br label %dec_label_pc_2247c.backedge

dec_label_pc_2247c.backedge:                      ; preds = %dec_label_pc_2246e, %dec_label_pc_22461
  %storemerge2.be = phi i32 [ %v1_22474, %dec_label_pc_2246e ], [ %v1_22467, %dec_label_pc_22461 ]
  %stack_var_-17.0.be = phi i8 [ 0, %dec_label_pc_2246e ], [ %v1_22458, %dec_label_pc_22461 ]
  %v10_2247c = icmp eq i32 %storemerge2.be, 0
  %v1_22480 = icmp eq i1 %v10_2247c, false
  %v5_22483 = icmp eq i1 %v1_22480, false
  %v1_22485 = icmp eq i1 %v5_22483, false
  br i1 %v1_22485, label %dec_label_pc_22420, label %dec_label_pc_22487

dec_label_pc_22487:                               ; preds = %dec_label_pc_2247c.backedge, %dec_label_pc_223da
  %stack_var_-32.0.lcssa = phi i32 [ %v1_22404, %dec_label_pc_223da ], [ %storemerge2.be, %dec_label_pc_2247c.backedge ]
  %stack_var_-28.0.lcssa = phi i32 [ %v1_22412, %dec_label_pc_223da ], [ %stack_var_-32.0131, %dec_label_pc_2247c.backedge ]
  %stack_var_-17.0.lcssa = phi i8 [ 1, %dec_label_pc_223da ], [ %stack_var_-17.0.be, %dec_label_pc_2247c.backedge ]
  %v2_2248e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_2248e, i32* %stack_var_-108, align 4
  %v2_22494 = call i32 @unknown_4b80a(i32 %v2_2248e, i32 %stack_var_-28.0.lcssa)
  %v10_22499 = icmp eq i8 %stack_var_-17.0.lcssa, 0
  br i1 %v10_22499, label %dec_label_pc_22525, label %dec_label_pc_224a3

dec_label_pc_224a3:                               ; preds = %dec_label_pc_22487
  %v2_224a3 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_224a3, i32* %stack_var_-108, align 4
  %v2_224b0 = call i32 @unknown_4b8ba(i32 %v2_224a3, i32 %arg2)
  store i32 %v2_224a3, i32* %stack_var_-108, align 4
  store i32 %v2_2248e, i32* %stack_var_-112, align 4
  %v2_224c5 = call i32 @unknown_3de62(i32 %v2_2248e, i32 %v2_224a3)
  %v4_224ca = trunc i32 %v2_224c5 to i8
  %v5_224ca = icmp eq i8 %v4_224ca, 0
  br i1 %v5_224ca, label %dec_label_pc_2251a, label %dec_label_pc_224ce

dec_label_pc_224ce:                               ; preds = %dec_label_pc_224a3
  store i8 1, i8* %stack_var_-21, align 1
  %v2_224d2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* %stack_var_-108, align 4
  store i32 %v2_224d2, i32* %stack_var_-112, align 4
  %v5_224f4 = call i32 @unknown_4b904(i32 %v2_224d2, i32 %arg2, i32 %stack_var_-32.0.lcssa, i32 %stack_var_-28.0.lcssa, i32 %arg3)
  %v2_224fc = ptrtoint i8* %stack_var_-21 to i32
  store i32 %v2_224fc, i32* %stack_var_-108, align 4
  store i32 %v2_224d2, i32* %stack_var_-112, align 4
  %v3_22510 = call i32 @unknown_4ba06(i32 %arg1, i32 %v2_224d2, i32 %v2_224fc)
  %v0_22515 = call i32 @function_225c3()
  ret i32 %v0_22515

dec_label_pc_2251a:                               ; preds = %dec_label_pc_224a3
  store i32 %v2_2248e, i32* %stack_var_-112, align 4
  %v1_22520 = call i32 @unknown_4ba52(i32 %v2_2248e)
  br label %dec_label_pc_22525

dec_label_pc_22525:                               ; preds = %dec_label_pc_2251a, %dec_label_pc_22487
  %v1_22528 = load i32, i32* @esp, align 4
  %v2_22528 = add i32 %v1_22528, 4
  %v3_22528 = inttoptr i32 %v2_22528 to i32*
  store i32 %arg3, i32* %v3_22528, align 4
  %v2_2252c = ptrtoint i32* %stack_var_-20 to i32
  %v1_2252f = load i32, i32* @esp, align 4
  %v2_2252f = inttoptr i32 %v1_2252f to i32*
  store i32 %v2_2252c, i32* %v2_2252f, align 4
  %v0_22532 = load i32, i32* %stack_var_-112, align 4
  %v1_22532 = load i32, i32* %stack_var_-108, align 4
  %v2_22532 = call i32 @unknown_4b842(i32 %v0_22532, i32 %v1_22532)
  ret i32 %v2_22532

; uselistorder directives
  uselistorder i32 %v2_224d2, { 1, 0, 3, 2 }
  uselistorder i32 %v2_224a3, { 1, 0, 3, 2 }
  uselistorder i32 %v2_2248e, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %storemerge2.be, { 2, 0, 1 }
  uselistorder i32 %stack_var_-32.0131, { 0, 4, 3, 5, 1, 2 }
  uselistorder i32 %v2_2243a, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4b842, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2, 4, 3, 8, 7, 6, 5 }
  uselistorder label %dec_label_pc_22420, { 1, 0 }
}

define i32 @function_22538(i32 %arg1) local_unnamed_addr {
dec_label_pc_22538:
  %v0_22538 = load i32, i32* @eax, align 4
  ret i32 %v0_22538
}

define i32 @function_22539() local_unnamed_addr {
dec_label_pc_22539:
  %ebx.global-to-local = alloca i32, align 4
  %v0_22539 = load i32, i32* @ebp, align 4
  %v1_22539 = add i32 %v0_22539, -44
  %v2_22539 = inttoptr i32 %v1_22539 to i32*
  %v3_22539 = load i32, i32* %v2_22539, align 4
  %v1_2253f = call i32 @unknown_4b780(i32 %v3_22539)
  %v0_22546 = load i32, i32* @ebp, align 4
  %v1_22546 = add i32 %v0_22546, -64
  %v2_22546 = inttoptr i32 %v1_22546 to i32*
  %v3_22546 = load i32, i32* %v2_22546, align 4
  %v0_22549 = load i32, i32* %ebx.global-to-local, align 4
  %v3_22554 = call i32 @unknown_4b7c4(i32 %v3_22546, i32 %v1_2253f, i32 %v0_22549)
  %v4_22559 = trunc i32 %v3_22554 to i8
  %v5_22559 = icmp eq i8 %v4_22559, 0
  %v0_225a6 = load i32, i32* @ebp, align 4
  br i1 %v5_22559, label %dec_label_pc_225a6, label %dec_label_pc_2255d

dec_label_pc_2255d:                               ; preds = %dec_label_pc_22539
  %v1_2255d = add i32 %v0_225a6, -15
  %v2_2255d = inttoptr i32 %v1_2255d to i8*
  store i8 1, i8* %v2_2255d, align 1
  %v0_22561 = load i32, i32* @ebp, align 4
  %v1_22561 = add i32 %v0_22561, -32
  %v1_22564 = add i32 %v0_22561, -68
  %v2_22564 = inttoptr i32 %v1_22564 to i32*
  %v3_22564 = load i32, i32* %v2_22564, align 4
  %v1_2256b = add i32 %v0_22561, -24
  %v2_2256b = inttoptr i32 %v1_2256b to i32*
  %v3_2256b = load i32, i32* %v2_2256b, align 4
  %v1_22572 = add i32 %v0_22561, -28
  %v2_22572 = inttoptr i32 %v1_22572 to i32*
  %v3_22572 = load i32, i32* %v2_22572, align 4
  %v1_22579 = add i32 %v0_22561, -64
  %v2_22579 = inttoptr i32 %v1_22579 to i32*
  %v3_22579 = load i32, i32* %v2_22579, align 4
  %v5_22583 = call i32 @unknown_4b904(i32 %v1_22561, i32 %v3_22579, i32 %v3_22572, i32 %v3_2256b, i32 %v3_22564)
  %v0_2258b = load i32, i32* @ebp, align 4
  %v1_2258b = add i32 %v0_2258b, -15
  %v1_22592 = add i32 %v0_2258b, -32
  %v1_22599 = add i32 %v0_2258b, -60
  %v2_22599 = inttoptr i32 %v1_22599 to i32*
  %v3_22599 = load i32, i32* %v2_22599, align 4
  %v3_2259f = call i32 @unknown_4ba06(i32 %v3_22599, i32 %v1_22592, i32 %v1_2258b)
  %v0_225a4 = call i32 @function_225c3()
  ret i32 %v0_225a4

dec_label_pc_225a6:                               ; preds = %dec_label_pc_22539
  %v1_225a6 = add i32 %v0_225a6, -14
  %v2_225a6 = inttoptr i32 %v1_225a6 to i8*
  store i8 0, i8* %v2_225a6, align 1
  %v0_225aa = load i32, i32* @ebp, align 4
  %v1_225aa = add i32 %v0_225aa, -14
  %v1_225b1 = add i32 %v0_225aa, -44
  %v1_225b8 = add i32 %v0_225aa, -60
  %v2_225b8 = inttoptr i32 %v1_225b8 to i32*
  %v3_225b8 = load i32, i32* %v2_225b8, align 4
  %v3_225be = call i32 @unknown_4ba06(i32 %v3_225b8, i32 %v1_225b1, i32 %v1_225aa)
  ret i32 %v3_225be

; uselistorder directives
  uselistorder i32 %v0_22561, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_225a6, { 1, 0 }
  uselistorder i32 ()* @function_225c3, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4ba06, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_4b904, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4b7c4, { 1, 0 }
}

define i32 @function_225c3() local_unnamed_addr {
dec_label_pc_225c3:
  %v0_225c3 = load i32, i32* @ebp, align 4
  %v1_225c3 = add i32 %v0_225c3, -60
  %v2_225c3 = inttoptr i32 %v1_225c3 to i32*
  %v3_225c3 = load i32, i32* %v2_225c3, align 4
  store i32 %v3_225c3, i32* @eax, align 4
  %v1_225c6 = add i32 %v0_225c3, -12
  %v2_225c6 = inttoptr i32 %v1_225c6 to i32*
  %v3_225c6 = load i32, i32* %v2_225c6, align 4
  %v1_225c9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_225c9 = icmp eq i32 %v1_225c9, %v3_225c6
  br i1 %v3_225c9, label %bb, label %dec_label_pc_225d2

bb:                                               ; preds = %dec_label_pc_225c3
  %v1_225d0 = call i32 @function_225d7()
  br label %dec_label_pc_225d2

dec_label_pc_225d2:                               ; preds = %bb, %dec_label_pc_225c3
  %v2_225d0 = phi i32 [ %v1_225d0, %bb ], [ %v3_225c3, %dec_label_pc_225c3 ]
  ret i32 %v2_225d0
}

define i32 @function_225d7() local_unnamed_addr {
dec_label_pc_225d7:
  %v0_225db = load i32, i32* @eax, align 4
  ret i32 %v0_225db
}

define i32 @_ZSt11__addressofISt4pairIKjiEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_225de:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22604

bb:                                               ; preds = %dec_label_pc_225de
  %v2_22602 = call i32 @function_22609(i32 %arg1)
  br label %dec_label_pc_22604

dec_label_pc_22604:                               ; preds = %bb, %dec_label_pc_225de
  %v3_22602 = phi i32 [ %v2_22602, %bb ], [ %arg1, %dec_label_pc_225de ]
  ret i32 %v3_22602
}

define i32 @function_22609(i32 %arg1) local_unnamed_addr {
dec_label_pc_22609:
  %v0_2260a = load i32, i32* @eax, align 4
  ret i32 %v0_2260a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE5eraseESt17_Rb_tree_iteratorIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2260c:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2262c = ptrtoint i32* %stack_var_-36 to i32
  %v2_22630 = ptrtoint i32* %stack_var_-20 to i32
  %v2_22636 = call i32 @unknown_4bcc4(i32 %v2_22630, i32 %v4_2262c)
  %v3_2263b = load i32, i32* %stack_var_-20, align 4
  %v2_22648 = call i32 @unknown_4bcfe(i32 %arg1, i32 %v3_2263b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22659

bb:                                               ; preds = %dec_label_pc_2260c
  %v1_22657 = call i32 @function_2265e()
  br label %dec_label_pc_22659

dec_label_pc_22659:                               ; preds = %bb, %dec_label_pc_2260c
  %v2_22657 = phi i32 [ %v1_22657, %bb ], [ 0, %dec_label_pc_2260c ]
  ret i32 %v2_22657
}

define i32 @function_2265e() local_unnamed_addr {
dec_label_pc_2265e:
  %v0_2265f = load i32, i32* @eax, align 4
  ret i32 %v0_2265f
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_15throw_function_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_22660:
  %v2_22680 = load i32, i32* %arg2, align 4
  %v2_22685 = add i32 %arg1, 8
  %v3_22685 = inttoptr i32 %v2_22685 to i32*
  store i32 %v2_22680, i32* %v3_22685, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22697

bb:                                               ; preds = %dec_label_pc_22660
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_22695 = call i32 @function_2269c(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_22697

dec_label_pc_22697:                               ; preds = %bb, %dec_label_pc_22660
  %v4_22695 = phi i32 [ %v3_22695, %bb ], [ %arg1, %dec_label_pc_22660 ]
  ret i32 %v4_22695

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_2269c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2269c:
  %v0_2269d = load i32, i32* @eax, align 4
  ret i32 %v0_2269d
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_file_EPKcEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2269e:
  %v2_226be = load i32, i32* %arg2, align 4
  %v2_226c3 = add i32 %arg1, 12
  %v3_226c3 = inttoptr i32 %v2_226c3 to i32*
  store i32 %v2_226be, i32* %v3_226c3, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_226d5

bb:                                               ; preds = %dec_label_pc_2269e
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_226d3 = call i32 @function_226da(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_226d5

dec_label_pc_226d5:                               ; preds = %bb, %dec_label_pc_2269e
  %v4_226d3 = phi i32 [ %v3_226d3, %bb ], [ %arg1, %dec_label_pc_2269e ]
  ret i32 %v4_226d3

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_226da(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_226da:
  %v0_226db = load i32, i32* @eax, align 4
  ret i32 %v0_226db
}

define i32 @_ZN5boost16exception_detail8set_infoINS0_10clone_implINS0_10bad_alloc_EEEEERKT_S7_RKNS_10error_infoINS_11throw_line_EiEE(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_226dc:
  %v2_226fc = load i32, i32* %arg2, align 4
  %v2_22701 = add i32 %arg1, 16
  %v3_22701 = inttoptr i32 %v2_22701 to i32*
  store i32 %v2_226fc, i32* %v3_22701, align 4
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22713

bb:                                               ; preds = %dec_label_pc_226dc
  %tmp100 = ptrtoint i32* %arg2 to i32
  %v3_22711 = call i32 @function_22718(i32 %tmp100, i32 %arg1)
  br label %dec_label_pc_22713

dec_label_pc_22713:                               ; preds = %bb, %dec_label_pc_226dc
  %v4_22711 = phi i32 [ %v3_22711, %bb ], [ %arg1, %dec_label_pc_226dc ]
  ret i32 %v4_22711

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_22718(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22718:
  %v0_22719 = load i32, i32* @eax, align 4
  ret i32 %v0_22719
}

define i32 @_ZN5boost6detail12shared_countC1INS_16exception_detail10clone_implINS3_10bad_alloc_EEEEEPT_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2271a:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2274c() local_unnamed_addr {
dec_label_pc_2274c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2274c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2274c = add i32 %v0_2274c, -532313149
  %v2_2274c = inttoptr i32 %v1_2274c to i32*
  %v3_2274c = load i32, i32* %v2_2274c, align 4
  %v4_2274c = add i32 %v3_2274c, -1
  store i32 %v4_2274c, i32* %v2_2274c, align 4
  %v0_22752 = load i32, i32* %eax.global-to-local, align 4
  %v0_22756 = load i32, i32* %ebx.global-to-local, align 4
  %v2_22759 = call i32 @unknown_4be76(i32 %v0_22756, i32 %v0_22752)
  store i32 %v2_22759, i32* %eax.global-to-local, align 4
  %v0_2275e = load i32, i32* %ebp.global-to-local, align 4
  %v1_2275e = add i32 %v0_2275e, -28
  %v2_2275e = inttoptr i32 %v1_2275e to i32*
  %v3_2275e = load i32, i32* %v2_2275e, align 4
  store i32 %v3_2275e, i32* %eax.global-to-local, align 4
  %v0_22761 = load i32, i32* %ebx.global-to-local, align 4
  %v2_22761 = inttoptr i32 %v3_2275e to i32*
  store i32 %v0_22761, i32* %v2_22761, align 4
  %v0_22763 = load i32, i32* %ebp.global-to-local, align 4
  %v1_22763 = add i32 %v0_22763, -12
  %v2_22763 = inttoptr i32 %v1_22763 to i32*
  %v3_22763 = load i32, i32* %v2_22763, align 4
  store i32 %v3_22763, i32* %eax.global-to-local, align 4
  %v1_22766 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22766 = xor i32 %v1_22766, %v3_22763
  %v3_22766 = icmp eq i32 %v2_22766, 0
  store i32 %v2_22766, i32* @eax, align 4
  br i1 %v3_22766, label %bb, label %dec_label_pc_2276f

bb:                                               ; preds = %dec_label_pc_2274c
  %v1_2276d = call i32 @function_2279f()
  store i32 %v1_2276d, i32* @eax, align 4
  br label %dec_label_pc_2276f

dec_label_pc_2276f:                               ; preds = %bb, %dec_label_pc_2274c
  %v0_2276f = call i32 @function_2279a()
  store i32 %v0_2276f, i32* %eax.global-to-local, align 4
  ret i32 %v0_2276f
}

define i32 @function_22772() local_unnamed_addr {
dec_label_pc_22772:
  %eax.global-to-local = alloca i32, align 4
  %v0_22772 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_22772
}

define i32 @function_2279a() local_unnamed_addr {
dec_label_pc_2279a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2279f() local_unnamed_addr {
dec_label_pc_2279f:
  %v0_227a4 = load i32, i32* @eax, align 4
  ret i32 %v0_227a4
}

define i32 @_ZSt3minIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_227a5:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_227c5 = inttoptr i32 %arg2 to i32*
  %v2_227c5 = load i32, i32* %v1_227c5, align 4
  %v2_227ca = load i32, i32* %arg1, align 4
  %v7_227cc = icmp ult i32 %v2_227c5, %v2_227ca
  %v1_227ce = icmp eq i1 %v7_227cc, false
  %storemerge = select i1 %v1_227ce, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_227e4

bb:                                               ; preds = %dec_label_pc_227a5
  %v1_227e2 = call i32 @function_227e9()
  br label %dec_label_pc_227e4

dec_label_pc_227e4:                               ; preds = %bb, %dec_label_pc_227a5
  %v2_227e2 = phi i32 [ %v1_227e2, %bb ], [ %storemerge, %dec_label_pc_227a5 ]
  ret i32 %v2_227e2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_227e9() local_unnamed_addr {
dec_label_pc_227e9:
  %v0_227ea = load i32, i32* @eax, align 4
  ret i32 %v0_227ea
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_227eb:
  %v3_22822 = call i32 @unknown_4bfd6(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_22822, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22833

bb:                                               ; preds = %dec_label_pc_227eb
  %v1_22831 = call i32 @function_22838()
  br label %dec_label_pc_22833

dec_label_pc_22833:                               ; preds = %bb, %dec_label_pc_227eb
  %v2_22831 = phi i32 [ %v1_22831, %bb ], [ %v3_22822, %dec_label_pc_227eb ]
  ret i32 %v2_22831
}

define i32 @function_22838() local_unnamed_addr {
dec_label_pc_22838:
  %v0_22839 = load i32, i32* @eax, align 4
  ret i32 %v0_22839
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2283a:
  %v2_22864 = call i32 @unknown_4c074(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2287b

bb:                                               ; preds = %dec_label_pc_2283a
  %v1_22879 = call i32 @function_22880()
  br label %dec_label_pc_2287b

dec_label_pc_2287b:                               ; preds = %bb, %dec_label_pc_2283a
  %v2_22879 = phi i32 [ %v1_22879, %bb ], [ %arg1, %dec_label_pc_2283a ]
  ret i32 %v2_22879

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22880() local_unnamed_addr {
dec_label_pc_22880:
  %v0_22881 = load i32, i32* @eax, align 4
  ret i32 %v0_22881
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_ET1_T0_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_22884:
  %stack_var_-20 = alloca i32, align 4
  %v1_228b5 = call i32 @unknown_4b989(i32 %arg4)
  %v1_228c2 = call i32 @unknown_4b989(i32 %arg3)
  %v1_228cf = call i32 @unknown_4b989(i32 %arg2)
  %v3_228df = call i32 @unknown_4baa3(i32 %v1_228cf, i32 %v1_228c2, i32 %v1_228b5)
  store i32 %v3_228df, i32* %stack_var_-20, align 4
  %v2_228e7 = ptrtoint i32* %stack_var_-20 to i32
  %v2_228f4 = call i32 @unknown_3e98c(i32 %arg1, i32 %v2_228e7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22908

bb:                                               ; preds = %dec_label_pc_22884
  %v1_22906 = call i32 @function_2290d()
  br label %dec_label_pc_22908

dec_label_pc_22908:                               ; preds = %bb, %dec_label_pc_22884
  %v2_22906 = phi i32 [ %v1_22906, %bb ], [ %arg1, %dec_label_pc_22884 ]
  ret i32 %v2_22906

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4b989, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2290d() local_unnamed_addr {
dec_label_pc_2290d:
  %v0_22913 = load i32, i32* @eax, align 4
  ret i32 %v0_22913
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_22916:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22930 = load i32, i32* %arg1, align 4
  %v1_22932 = add i32 %v2_22930, -1
  store i32 %v1_22932, i32* %arg1, align 4
  store i32 %tmp100, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22949

bb:                                               ; preds = %dec_label_pc_22916
  %v2_22947 = call i32 @function_2294e(i32 %tmp100)
  br label %dec_label_pc_22949

dec_label_pc_22949:                               ; preds = %bb, %dec_label_pc_22916
  %v3_22947 = phi i32 [ %v2_22947, %bb ], [ %tmp100, %dec_label_pc_22916 ]
  ret i32 %v3_22947
}

define i32 @function_2294e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2294e:
  %v0_2294f = load i32, i32* @eax, align 4
  ret i32 %v0_2294f
}

define i32 @_ZN9__gnu_cxxltIPhSt6vectorIhSaIhEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_22950:
  ret i32 %arg1
}

define i32 @function_2295c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2295c:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2295e = load i32, i32* @ebp, align 4
  %v1_22961 = add i32 %v0_2295e, 2
  store i32 %v1_22961, i32* @ebp, align 4
  %v0_22962 = load i32, i32* @ecx, align 4
  %v1_22962 = add i32 %v0_22962, -1
  store i32 %v1_22962, i32* @ecx, align 4
  %v0_22964 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22969 = add i32 %v0_2295e, -10
  %v3_22969 = inttoptr i32 %v2_22969 to i32*
  store i32 %v0_22964, i32* %v3_22969, align 4
  %v0_2296e = load i32, i32* @ebp, align 4
  %v1_2296e = add i32 %v0_2296e, -28
  %v2_2296e = inttoptr i32 %v1_2296e to i32*
  %v3_2296e = load i32, i32* %v2_2296e, align 4
  %v1_22974 = call i32 @unknown_3ecf8(i32 %v3_2296e)
  %v1_22979 = inttoptr i32 %v1_22974 to i32*
  %v2_22979 = load i32, i32* %v1_22979, align 4
  store i32 %v2_22979, i32* %ebx.global-to-local, align 4
  %v0_2297b = load i32, i32* @ebp, align 4
  %v1_2297b = add i32 %v0_2297b, -32
  %v2_2297b = inttoptr i32 %v1_2297b to i32*
  %v3_2297b = load i32, i32* %v2_2297b, align 4
  %v1_22981 = call i32 @unknown_3ecf8(i32 %v3_2297b)
  %v1_22986 = inttoptr i32 %v1_22981 to i32*
  %v2_22986 = load i32, i32* %v1_22986, align 4
  %v0_22988 = load i32, i32* %ebx.global-to-local, align 4
  %v7_22988 = icmp ult i32 %v0_22988, %v2_22986
  %v1_2298a = zext i1 %v7_22988 to i32
  %v3_2298a = and i32 %v2_22986, -256
  %v4_2298a = or i32 %v1_2298a, %v3_2298a
  store i32 %v4_2298a, i32* @eax, align 4
  %v0_2298d = load i32, i32* @ebp, align 4
  %v1_2298d = add i32 %v0_2298d, -12
  %v2_2298d = inttoptr i32 %v1_2298d to i32*
  %v3_2298d = load i32, i32* %v2_2298d, align 4
  %v1_22990 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22990 = icmp eq i32 %v1_22990, %v3_2298d
  br i1 %v3_22990, label %bb, label %dec_label_pc_22999

bb:                                               ; preds = %dec_label_pc_2295c
  %v1_22997 = call i32 @function_2299e()
  br label %dec_label_pc_22999

dec_label_pc_22999:                               ; preds = %bb, %dec_label_pc_2295c
  %v3_22997 = phi i32 [ %v1_22997, %bb ], [ %v4_2298a, %dec_label_pc_2295c ]
  ret i32 %v3_22997

; uselistorder directives
  uselistorder i32 (i32)* @unknown_3ecf8, { 1, 0 }
}

define i32 @function_2299e() local_unnamed_addr {
dec_label_pc_2299e:
  %v0_229a3 = load i32, i32* @eax, align 4
  ret i32 %v0_229a3
}

define i32 @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES6_EvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229a4:
  ret i32 %arg2
}

define i32 @function_229e3() local_unnamed_addr {
dec_label_pc_229e3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_229e3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_229e3 = add i32 %v0_229e3, -1
  store i32 %v1_229e3, i32* %ecx.global-to-local, align 4
  %v0_229e5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_229e5
}

define i32 @_ZN5boost6detail13addr_impl_refIKSt6vectorIS2_IhSaIhEESaIS4_EEEC1ERS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_229e6:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22a17

bb:                                               ; preds = %dec_label_pc_229e6
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_22a15 = call i32 @function_22a1c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_22a17

dec_label_pc_22a17:                               ; preds = %bb, %dec_label_pc_229e6
  %v4_22a15 = phi i32 [ %v3_22a15, %bb ], [ 0, %dec_label_pc_229e6 ]
  ret i32 %v4_22a15

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22a1c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a1c:
  %v0_22a1d = load i32, i32* @eax, align 4
  ret i32 %v0_22a1d
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSt6vectorIS2_IhSaIhEESaIS4_EEEcvRS7_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22a1e:
  %v2_22a38 = load i32, i32* %arg1, align 4
  store i32 %v2_22a38, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22a46

bb:                                               ; preds = %dec_label_pc_22a1e
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_22a44 = call i32 @function_22a4b(i32 %tmp100)
  br label %dec_label_pc_22a46

dec_label_pc_22a46:                               ; preds = %bb, %dec_label_pc_22a1e
  %v3_22a44 = phi i32 [ %v2_22a44, %bb ], [ %v2_22a38, %dec_label_pc_22a1e ]
  ret i32 %v3_22a44

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_22a4b(i32 %arg1) local_unnamed_addr {
dec_label_pc_22a4b:
  %v0_22a4c = load i32, i32* @eax, align 4
  ret i32 %v0_22a4c
}

define i32 @_ZN5boost6detail14addressof_implIKSt6vectorIS2_IhSaIhEESaIS4_EEE1fERS7_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a4d:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22a79

bb:                                               ; preds = %dec_label_pc_22a4d
  %v3_22a77 = call i32 @function_22a7e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_22a79

dec_label_pc_22a79:                               ; preds = %bb, %dec_label_pc_22a4d
  %v4_22a77 = phi i32 [ %v3_22a77, %bb ], [ %arg1, %dec_label_pc_22a4d ]
  ret i32 %v4_22a77
}

define i32 @function_22a7e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a7e:
  %v0_22a7f = load i32, i32* @eax, align 4
  ret i32 %v0_22a7f
}

define i32 @_ZN5boost12range_detail11range_beginIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22a80:
  %v2_22aaa = call i32 @unknown_40014(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22ac1

bb:                                               ; preds = %dec_label_pc_22a80
  %v1_22abf = call i32 @function_22ac6()
  br label %dec_label_pc_22ac1

dec_label_pc_22ac1:                               ; preds = %bb, %dec_label_pc_22a80
  %v2_22abf = phi i32 [ %v1_22abf, %bb ], [ %arg1, %dec_label_pc_22a80 ]
  ret i32 %v2_22abf

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22ac6() local_unnamed_addr {
dec_label_pc_22ac6:
  %v0_22ac7 = load i32, i32* @eax, align 4
  ret i32 %v0_22ac7
}

define i32 @_ZN5boost12range_detail9range_endIKSt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_22aca:
  %v2_22af4 = call i32 @unknown_4000e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22b0b

bb:                                               ; preds = %dec_label_pc_22aca
  %v1_22b09 = call i32 @function_22b10()
  br label %dec_label_pc_22b0b

dec_label_pc_22b0b:                               ; preds = %bb, %dec_label_pc_22aca
  %v2_22b09 = phi i32 [ %v1_22b09, %bb ], [ %arg1, %dec_label_pc_22aca ]
  ret i32 %v2_22b09

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_22b10() local_unnamed_addr {
dec_label_pc_22b10:
  %v0_22b11 = load i32, i32* @eax, align 4
  ret i32 %v0_22b11
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b14:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_22b3a

bb:                                               ; preds = %dec_label_pc_22b14
  %v2_22b38 = call i32 @function_22b3f(i32 %arg1)
  br label %dec_label_pc_22b3a

dec_label_pc_22b3a:                               ; preds = %bb, %dec_label_pc_22b14
  %v3_22b38 = phi i32 [ %v2_22b38, %bb ], [ %arg1, %dec_label_pc_22b14 ]
  ret i32 %v3_22b38
}

define i32 @function_22b3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_22b3f:
  %v0_22b40 = load i32, i32* @eax, align 4
  ret i32 %v0_22b40
}

define i32 @_ZSt13copy_backwardIPhS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22b41:
  %v1_22b6b = call i32 @unknown_44ca2(i32 %arg2)
  %v1_22b78 = call i32 @unknown_44ca2(i32 %arg1)
  ret i32 %v1_22b78

; uselistorder directives
  uselistorder i32 (i32)* @unknown_44ca2, { 1, 0 }
}

define i32 @function_22b8b() local_unnamed_addr {
dec_label_pc_22b8b:
  %v0_22b8b = call i32 @unknown_4c411()
  store i32 %v0_22b8b, i32* @eax, align 4
  %v0_22b90 = load i32, i32* @ebp, align 4
  %v1_22b90 = add i32 %v0_22b90, -12
  %v2_22b90 = inttoptr i32 %v1_22b90 to i32*
  %v3_22b90 = load i32, i32* %v2_22b90, align 4
  %v1_22b93 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22b93 = icmp eq i32 %v1_22b93, %v3_22b90
  br i1 %v3_22b93, label %bb, label %dec_label_pc_22b9c

bb:                                               ; preds = %dec_label_pc_22b8b
  %v1_22b9a = call i32 @function_22ba1()
  br label %dec_label_pc_22b9c

dec_label_pc_22b9c:                               ; preds = %bb, %dec_label_pc_22b8b
  %v2_22b9a = phi i32 [ %v1_22b9a, %bb ], [ %v0_22b8b, %dec_label_pc_22b8b ]
  ret i32 %v2_22b9a
}

define i32 @function_22ba1() local_unnamed_addr {
dec_label_pc_22ba1:
  %v0_22ba6 = load i32, i32* @eax, align 4
  ret i32 %v0_22ba6
}

define i32 @function_22ba7() local_unnamed_addr {
dec_label_pc_22ba7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNKSt6vectorIhSaIhEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22ba8:
  %v1_22bd2 = call i32 @unknown_4c4ea(i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_22be0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22be0:
  %v0_22be0 = load i1, i1* @zf, align 1
  %v1_22be0 = load i1, i1* @sf, align 1
  %v2_22be0 = load i1, i1* @of, align 1
  %v3_22be0 = icmp ne i1 %v1_22be0, %v2_22be0
  %v4_22be0 = or i1 %v0_22be0, %v3_22be0
  br i1 %v4_22be0, label %bb, label %dec_label_pc_22be0.dec_label_pc_22be2_crit_edge

dec_label_pc_22be0.dec_label_pc_22be2_crit_edge:  ; preds = %dec_label_pc_22be0
  %v2_22be2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_22be2

bb:                                               ; preds = %dec_label_pc_22be0
  %v5_22be0 = call i32 @function_22c32()
  store i32 %v5_22be0, i32* @eax, align 4
  br label %dec_label_pc_22be2

dec_label_pc_22be2:                               ; preds = %dec_label_pc_22be0.dec_label_pc_22be2_crit_edge, %bb
  %v20_22be2 = phi i32 [ %v2_22be2.pre, %dec_label_pc_22be0.dec_label_pc_22be2_crit_edge ], [ %v5_22be0, %bb ]
  %v4_22be2 = mul i32 %v20_22be2, 2
  %v21_22be2 = inttoptr i32 %v20_22be2 to i32*
  store i32 %v4_22be2, i32* %v21_22be2, align 4
  %v0_22be4 = load i32, i32* @ebx, align 4
  %v1_22be6 = load i32, i32* @eax, align 4
  %v2_22be6 = sub i32 %v0_22be4, %v1_22be6
  store i32 %v2_22be6, i32* @edx, align 4
  %v0_22be8 = load i32, i32* @ebp, align 4
  %v1_22be8 = add i32 %v0_22be8, -32
  %v2_22be8 = inttoptr i32 %v1_22be8 to i32*
  %v3_22be8 = load i32, i32* %v2_22be8, align 4
  %v7_22beb = icmp ult i32 %v2_22be6, %v3_22be8
  %v5_22bf0 = icmp eq i1 %v7_22beb, false
  br i1 %v5_22bf0, label %bb4, label %dec_label_pc_22bf4

bb4:                                              ; preds = %dec_label_pc_22be2
  %v1_22bf2 = call i32 @function_22bff()
  %v0_22bf4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_22bf4

dec_label_pc_22bf4:                               ; preds = %bb4, %dec_label_pc_22be2
  %v0_22bf4 = phi i32 [ %v0_22bf4.pre, %bb4 ], [ %v0_22be8, %dec_label_pc_22be2 ]
  %v1_22bf4 = add i32 %v0_22bf4, -36
  %v2_22bf4 = inttoptr i32 %v1_22bf4 to i32*
  %v3_22bf4 = load i32, i32* %v2_22bf4, align 4
  ret i32 %v3_22bf4

; uselistorder directives
  uselistorder i32 %v20_22be2, { 1, 0 }
  uselistorder label %dec_label_pc_22be2, { 1, 0 }
}

define i32 @function_22bff() local_unnamed_addr {
dec_label_pc_22bff:
  %eax.global-to-local = alloca i32, align 4
  %v0_22bff = load i32, i32* @ebp, align 4
  %v1_22bff = add i32 %v0_22bff, -28
  %v2_22bff = inttoptr i32 %v1_22bff to i32*
  %v3_22bff = load i32, i32* %v2_22bff, align 4
  store i32 %v3_22bff, i32* @eax, align 4
  %v1_22c05 = call i32 @function_37c62(i32 %v3_22bff)
  store i32 %v1_22c05, i32* %eax.global-to-local, align 4
  store i32 %v1_22c05, i32* @ebx, align 4
  %v0_22c0c = load i32, i32* @ebp, align 4
  %v1_22c0c = add i32 %v0_22c0c, -28
  %v2_22c0c = inttoptr i32 %v1_22c0c to i32*
  %v3_22c0c = load i32, i32* %v2_22c0c, align 4
  store i32 %v3_22c0c, i32* @eax, align 4
  %v1_22c12 = call i32 @function_37c62(i32 %v3_22c0c)
  store i32 %v1_22c12, i32* %eax.global-to-local, align 4
  %v1_22c17 = load i32, i32* @ebp, align 4
  %v2_22c17 = add i32 %v1_22c17, -20
  %v3_22c17 = inttoptr i32 %v2_22c17 to i32*
  store i32 %v1_22c12, i32* %v3_22c17, align 4
  %v4_22c17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_22c17

; uselistorder directives
  uselistorder i32 (i32)* @function_37c62, { 1, 0 }
}

define i32 @function_22c1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c1c:
  %v0_22c1c = load i32, i32* @ecx, align 4
  %v2_22c1c = icmp eq i32 %v0_22c1c, 1
  %v3_22c1c = load i1, i1* @zf, align 1
  %v4_22c1c = or i1 %v2_22c1c, %v3_22c1c
  br i1 %v4_22c1c, label %dec_label_pc_22c1c.dec_label_pc_22c1e_crit_edge, label %bb

dec_label_pc_22c1c.dec_label_pc_22c1e_crit_edge:  ; preds = %dec_label_pc_22c1c
  br label %dec_label_pc_22c1e

bb:                                               ; preds = %dec_label_pc_22c1c
  %v6_22c1c = call i32 @function_22ba7()
  br label %dec_label_pc_22c1e

dec_label_pc_22c1e:                               ; preds = %dec_label_pc_22c1c.dec_label_pc_22c1e_crit_edge, %bb
  %v0_22c21 = load i32, i32* @ebp, align 4
  %v1_22c21 = add i32 %v0_22c21, -20
  %v1_22c27 = call i32 @unknown_4bb0e(i32 %v1_22c21)
  %v1_22c2c = inttoptr i32 %v1_22c27 to i32*
  %v2_22c2c = load i32, i32* %v1_22c2c, align 4
  %v1_22c2e = load i32, i32* @ebx, align 4
  %v2_22c2e = add i32 %v1_22c2e, %v2_22c2c
  ret i32 %v2_22c2e

; uselistorder directives
  uselistorder label %dec_label_pc_22c1e, { 1, 0 }
}

define i32 @function_22c32() local_unnamed_addr {
dec_label_pc_22c32:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_22c4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_22c4a:
  %v0_22c4c = load i32, i32* @eax, align 4
  %v5_22c4c = mul i32 %v0_22c4c, 2
  %v20_22c4c = and i32 %v5_22c4c, 254
  %v22_22c4c = and i32 %v0_22c4c, -256
  %v23_22c4c = or i32 %v20_22c4c, %v22_22c4c
  %v1_22c4e = load i32, i32* @ebp, align 4
  %v2_22c4e = add i32 %v1_22c4e, -16
  %v3_22c4e = inttoptr i32 %v2_22c4e to i32*
  %v4_22c4e = load i32, i32* %v3_22c4e, align 4
  %v10_22c4e = icmp ult i32 %v23_22c4c, %v4_22c4e
  %v1_22c51 = icmp eq i1 %v10_22c4e, false
  br i1 %v1_22c51, label %dec_label_pc_22c63, label %dec_label_pc_22c53

dec_label_pc_22c53:                               ; preds = %dec_label_pc_22c4a
  %v1_22c53 = add i32 %v1_22c4e, -28
  %v2_22c53 = inttoptr i32 %v1_22c53 to i32*
  %v3_22c53 = load i32, i32* %v2_22c53, align 4
  %v1_22c59 = call i32 @unknown_4c4ea(i32 %v3_22c53)
  %v0_22c63.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_22c63

dec_label_pc_22c63:                               ; preds = %dec_label_pc_22c4a, %dec_label_pc_22c53
  %v0_22c63 = phi i32 [ %v0_22c63.pre, %dec_label_pc_22c53 ], [ %v1_22c4e, %dec_label_pc_22c4a ]
  %storemerge = phi i32 [ %v1_22c59, %dec_label_pc_22c53 ], [ %v4_22c4e, %dec_label_pc_22c4a ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_22c63 = add i32 %v0_22c63, -12
  %v2_22c63 = inttoptr i32 %v1_22c63 to i32*
  %v3_22c63 = load i32, i32* %v2_22c63, align 4
  %v1_22c66 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_22c66 = icmp eq i32 %v1_22c66, %v3_22c63
  store i1 %v3_22c66, i1* @zf, align 1
  br i1 %v3_22c66, label %bb, label %dec_label_pc_22c6f

bb:                                               ; preds = %dec_label_pc_22c63
  %v1_22c6d = call i32 @function_22c74()
  br label %dec_label_pc_22c6f

dec_label_pc_22c6f:                               ; preds = %bb, %dec_label_pc_22c63
  %v2_22c6d = phi i32 [ %v1_22c6d, %bb ], [ %storemerge, %dec_label_pc_22c63 ]
  ret i32 %v2_22c6d

; uselistorder directives
  uselistorder i1 %v3_22c66, { 1, 0 }
  uselistorder i32 %v0_22c4c, { 1, 0 }
  uselistorder label %dec_label_pc_22c63, { 1, 0 }
}

define i32 @function_22c74() local_unnamed_addr {
dec_label_pc_22c74:
  %v0_22c74 = load i32, i32* @esp, align 4
  %v10_22c74 = icmp eq i32 %v0_22c74, -52
  store i1 %v10_22c74, i1* @zf, align 1
  %v0_22c79 = load i32, i32* @eax, align 4
  ret i32 %v0_22c79
}

define i32 @_ZSt22__uninitialized_move_aIPhS0_SaIhEET0_T_S3_S2_RT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22c7a:
  ret i32 %arg3
}

define i32 @function_22c93() local_unnamed_addr {
dec_label_pc_22c93:
  %eax.global-to-local = alloca i32, align 4
  %v15_22c93 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_22c93
}

define i32 @function_22cc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_22cc2:
  %cf.global-to-local = alloca i1, align 1
  %v0_22cc2 = load i32, i32* @ebx, align 4
  %v1_22cc2 = add i32 %v0_22cc2, 862319701
  %v2_22cc2 = inttoptr i32 %v1_22cc2 to i8*
  %v3_22cc2 = load i8, i8* %v2_22cc2, align 1
  %v4_22cc2 = load i32, i32* @ecx, align 4
  %v5_22cc2 = trunc i32 %v4_22cc2 to i8
  %v6_22cc2 = add i8 %v5_22cc2, %v3_22cc2
  %v11_22cc2 = icmp ult i8 %v6_22cc2, %v3_22cc2
  store i1 %v11_22cc2, i1* %cf.global-to-local, align 1
  store i8 %v6_22cc2, i8* %v2_22cc2, align 1
  %v0_22cc8 = load i32, i32* @eax, align 4
  %v1_22cc8 = load i1, i1* %cf.global-to-local, align 1
  %v2_22cc8 = zext i1 %v1_22cc8 to i32
  %v3_22cc8 = add i32 %v0_22cc8, 20
  %v4_22cc8 = add i32 %v3_22cc8, %v2_22cc8
  %v14_22cc8 = icmp eq i32 %v4_22cc8, 0
  %v22_22cc8 = icmp ule i32 %v4_22cc8, %v0_22cc8
  %v23_22cc8 = icmp ugt i32 %v0_22cc8, -21
  %v24_22cc8 = select i1 %v1_22cc8, i1 %v22_22cc8, i1 %v23_22cc8
  store i1 %v24_22cc8, i1* %cf.global-to-local, align 1
  store i32 %v4_22cc8, i32* @eax, align 4
  br i1 %v14_22cc8, label %bb, label %dec_label_pc_22ccf

bb:                                               ; preds = %dec_label_pc_22cc2
  %v1_22ccd = call i32 @function_22cd4()
  br label %dec_label_pc_22ccf

dec_label_pc_22ccf:                               ; preds = %bb, %dec_label_pc_22cc2
  %v2_22ccd = phi i32 [ %v1_22ccd, %bb ], [ %v4_22cc8, %dec_label_pc_22cc2 ]
  ret i32 %v2_22ccd

; uselistorder directives
  uselistorder i32 %v4_22cc8, { 0, 2, 1, 3 }
  uselistorder i8 %v3_22cc2, { 1, 0 }
}

define i32 @function_22cd4() local_unnamed_addr {
dec_label_pc_22cd4:
  %v0_22cd5 = load i32, i32* @eax, align 4
  ret i32 %v0_22cd5
}

define i32 @_ZNSt6vectorIhSaIhEE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_22cd6:
  ret i32 0
}

define i32 @function_22d02(i32 %arg1) local_unnamed_addr {
dec_label_pc_22d02:
  %v0_22d08 = load i32, i32* @ebp, align 4
  %v1_22d08 = add i32 %v0_22d08, 1
  store i32 %v1_22d08, i32* @ebp, align 4
  %v0_22d0d = call i32 @unknown_4c655()
  %v1_22d12 = load i32, i32* @ebp, align 4
  %v2_22d12 = add i32 %v1_22d12, -16
  %v3_22d12 = inttoptr i32 %v2_22d12 to i32*
  store i32 %v0_22d0d, i32* %v3_22d12, align 4
  %v0_22d15 = load i32, i32* @ebp, align 4
  %v1_22d15 = add i32 %v0_22d15, -28
  %v2_22d15 = inttoptr i32 %v1_22d15 to i32*
  %v3_22d15 = load i32, i32* %v2_22d15, align 4
  %v1_22d18 = add i32 %v0_22d15, -16
  %v2_22d18 = inttoptr i32 %v1_22d18 to i32*
  %v3_22d18 = load i32, i32* %v2_22d18, align 4
  %v2_22d22 = call i32 @unknown_44c2c(i32 %v3_22d15, i32 %v3_22d18)
  %v0_22d29 = load i32, i32* @ebp, align 4
  %v1_22d29 = add i32 %v0_22d29, -28
  %v2_22d29 = inttoptr i32 %v1_22d29 to i32*
  %v3_22d29 = load i32, i32* %v2_22d29, align 4
  %v2_22d2c = inttoptr i32 %v3_22d29 to i32*
  store i32 %v2_22d22, i32* %v2_22d2c, align 4
  %v0_22d2e = load i32, i32* @ebp, align 4
  %v1_22d2e = add i32 %v0_22d2e, -28
  %v2_22d2e = inttoptr i32 %v1_22d2e to i32*
  %v3_22d2e = load i32, i32* %v2_22d2e, align 4
  %v1_22d31 = inttoptr i32 %v3_22d2e to i32*
  %v2_22d31 = load i32, i32* %v1_22d31, align 4
  %v2_22d35 = add i32 %v0_22d2e, -16
  %v3_22d35 = inttoptr i32 %v2_22d35 to i32*
  %v4_22d35 = load i32, i32* %v3_22d35, align 4
  %v5_22d35 = add i32 %v4_22d35, %v2_22d31
  %v3_22d38 = load i32, i32* %v2_22d2e, align 4
  %v2_22d3b = add i32 %v3_22d38, 8
  %v3_22d3b = inttoptr i32 %v2_22d3b to i32*
  store i32 %v5_22d35, i32* %v3_22d3b, align 4
  %v0_22d3e = load i32, i32* @ebp, align 4
  %v1_22d3e = add i32 %v0_22d3e, -28
  %v2_22d3e = inttoptr i32 %v1_22d3e to i32*
  %v3_22d3e = load i32, i32* %v2_22d3e, align 4
  %v1_22d44 = call i32 @unknown_3e20e(i32 %v3_22d3e)
  %v0_22d49 = load i32, i32* @ebp, align 4
  %v1_22d49 = add i32 %v0_22d49, -28
  %v2_22d49 = inttoptr i32 %v1_22d49 to i32*
  %v3_22d49 = load i32, i32* %v2_22d49, align 4
  %v1_22d4c = inttoptr i32 %v3_22d49 to i32*
  %v2_22d4c = load i32, i32* %v1_22d4c, align 4
  %v1_22d56 = add i32 %v0_22d49, -36
  %v2_22d56 = inttoptr i32 %v1_22d56 to i32*
  %v3_22d56 = load i32, i32* %v2_22d56, align 4
  %v1_22d5d = add i32 %v0_22d49, -32
  %v2_22d5d = inttoptr i32 %v1_22d5d to i32*
  %v3_22d5d = load i32, i32* %v2_22d5d, align 4
  %v4_22d63 = call i32 @unknown_3eee9(i32 %v3_22d5d, i32 %v3_22d56, i32 %v2_22d4c, i32 %v1_22d44)
  %v0_22d6a = load i32, i32* @ebp, align 4
  %v1_22d6a = add i32 %v0_22d6a, -28
  %v2_22d6a = inttoptr i32 %v1_22d6a to i32*
  %v3_22d6a = load i32, i32* %v2_22d6a, align 4
  %v2_22d6d = add i32 %v3_22d6a, 4
  %v3_22d6d = inttoptr i32 %v2_22d6d to i32*
  store i32 %v4_22d63, i32* %v3_22d6d, align 4
  %v0_22d70 = load i32, i32* @ebp, align 4
  %v1_22d70 = add i32 %v0_22d70, -12
  %v2_22d70 = inttoptr i32 %v1_22d70 to i32*
  %v3_22d70 = load i32, i32* %v2_22d70, align 4
  %v1_22d73 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_22d73 = xor i32 %v1_22d73, %v3_22d70
  %v3_22d73 = icmp eq i32 %v2_22d73, 0
  store i32 %v2_22d73, i32* @eax, align 4
  br i1 %v3_22d73, label %bb, label %dec_label_pc_22d7c

bb:                                               ; preds = %dec_label_pc_22d02
  %v1_22d7a = call i32 @function_22d81()
  br label %dec_label_pc_22d7c

dec_label_pc_22d7c:                               ; preds = %bb, %dec_label_pc_22d02
  %v3_22d7a = phi i32 [ %v1_22d7a, %bb ], [ %v2_22d73, %dec_label_pc_22d02 ]
  ret i32 %v3_22d7a

; uselistorder directives
  uselistorder i32 %v0_22d49, { 1, 0, 2 }
}

define i32 @function_22d81() local_unnamed_addr {
dec_label_pc_22d81:
  %v0_22d82 = load i32, i32* @eax, align 4
  ret i32 %v0_22d82
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvNS4_IPhS1_EET_SA_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_22d84:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v2_22db6 = ptrtoint i32* %stack_var_-76 to i32
  %v2_22dbd = ptrtoint i32* %stack_var_-72 to i32
  %v2_22dc3 = call i32 @unknown_3a0a4(i32 %v2_22dbd, i32 %v2_22db6)
  store i32 %v2_22dc3, i32* @eax, align 4
  %v4_22dc8 = trunc i32 %v2_22dc3 to i8
  %v5_22dc8 = icmp eq i8 %v4_22dc8, 0
  br i1 %v5_22dc8, label %bb, label %dec_label_pc_22dd0

bb:                                               ; preds = %dec_label_pc_22d84
  %v1_22dca = call i32 @function_2314b()
  br label %dec_label_pc_22dd0

dec_label_pc_22dd0:                               ; preds = %bb, %dec_label_pc_22d84
  %v3_22dd0 = load i32, i32* %stack_var_-76, align 4
  %v3_22dd7 = load i32, i32* %stack_var_-72, align 4
  %v2_22ddd = call i32 @unknown_4c703(i32 %v3_22dd7, i32 %v3_22dd0)
  %v1_22de8 = add i32 %arg1, 8
  %v2_22de8 = inttoptr i32 %v1_22de8 to i32*
  %v3_22de8 = load i32, i32* %v2_22de8, align 4
  %v1_22df0 = add i32 %arg1, 4
  %v2_22df0 = inttoptr i32 %v1_22df0 to i32*
  %v3_22df0 = load i32, i32* %v2_22df0, align 4
  %v2_22df5 = sub i32 %v3_22de8, %v3_22df0
  %v10_22df9 = icmp ult i32 %v2_22df5, %v2_22ddd
  br i1 %v10_22df9, label %bb122, label %dec_label_pc_22e02

bb122:                                            ; preds = %dec_label_pc_22dd0
  %v2_22dfc = call i32 @function_22fa9(i32 %v2_22ddd)
  br label %dec_label_pc_22e02

dec_label_pc_22e02:                               ; preds = %bb122, %dec_label_pc_22dd0
  %v2_22e02 = ptrtoint i32* %stack_var_-56 to i32
  %v2_22e0f = call i32 @unknown_39666(i32 %v2_22e02, i32 %arg1)
  %v2_22e17 = ptrtoint i32* %stack_var_-68 to i32
  %v2_22e24 = call i32 @unknown_3a010(i32 %v2_22e02, i32 %v2_22e17)
  %v3_22e2f = load i32, i32* %v2_22df0, align 4
  %tmp125 = icmp ult i32 %v2_22ddd, %v2_22e24
  br i1 %tmp125, label %dec_label_pc_22e41, label %dec_label_pc_22edc

dec_label_pc_22e41:                               ; preds = %dec_label_pc_22e02
  %v1_22e47 = call i32 @unknown_3e2bc(i32 %arg1)
  %v3_22e4f = load i32, i32* %v2_22df0, align 4
  %v2_22e63 = sub i32 %v3_22e4f, %v2_22ddd
  %v4_22e74 = call i32 @unknown_459fe(i32 %v2_22e63, i32 %v3_22e4f, i32 %v3_22e4f, i32 %v1_22e47)
  %v3_22e7c = load i32, i32* %v2_22df0, align 4
  %v5_22e81 = add i32 %v3_22e7c, %v2_22ddd
  store i32 %v5_22e81, i32* %v2_22df0, align 4
  %v5_22e91 = sub i32 %v3_22e2f, %v2_22ddd
  %v1_22e9a = call i32 @unknown_3f12c(i32 %v2_22e17)
  %v1_22e9f = inttoptr i32 %v1_22e9a to i32*
  %v2_22e9f = load i32, i32* %v1_22e9f, align 4
  %v3_22eaf = call i32 @unknown_458c5(i32 %v2_22e9f, i32 %v5_22e91, i32 %v3_22e2f)
  %v2_22eb4 = ptrtoint i32* %stack_var_-52 to i32
  %v3_22eb7 = load i32, i32* %stack_var_-68, align 4
  %v3_22ebe = load i32, i32* %stack_var_-76, align 4
  %v3_22ec5 = load i32, i32* %stack_var_-72, align 4
  %v4_22ecf = call i32 @unknown_3e5d9(i32 %v2_22eb4, i32 %v3_22ec5, i32 %v3_22ebe, i32 %v3_22eb7)
  store i32 %v4_22ecf, i32* @eax, align 4
  %v0_22ed7 = call i32 @function_2314b()
  ret i32 %v0_22ed7

dec_label_pc_22edc:                               ; preds = %dec_label_pc_22e02
  %v3_22edc = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_22edc, i32* %stack_var_-48, align 4
  %v2_22ee9 = ptrtoint i32* %stack_var_-48 to i32
  %v2_22eef = call i32 @unknown_4c816(i32 %v2_22ee9, i32 %v2_22e24)
  %v1_22efa = call i32 @unknown_3e2bc(i32 %arg1)
  %v3_22f02 = load i32, i32* %v2_22df0, align 4
  %v3_22f0d = load i32, i32* %stack_var_-76, align 4
  %v3_22f14 = load i32, i32* %stack_var_-48, align 4
  %v4_22f1a = call i32 @unknown_3ef97(i32 %v3_22f14, i32 %v3_22f0d, i32 %v3_22f02, i32 %v1_22efa)
  %v3_22f22 = load i32, i32* %v2_22df0, align 4
  %v2_22f2d = sub i32 %v2_22ddd, %v2_22e24
  %v2_22f31 = add i32 %v3_22f22, %v2_22f2d
  store i32 %v2_22f31, i32* %v2_22df0, align 4
  %v1_22f3f = call i32 @unknown_3e2bc(i32 %arg1)
  ret i32 %v1_22f3f

; uselistorder directives
  uselistorder i32 %v3_22e4f, { 2, 1, 0 }
  uselistorder i32 %v2_22e24, { 1, 2, 0 }
  uselistorder i32* %v2_22df0, { 3, 4, 5, 0, 1, 2, 6, 7 }
  uselistorder i32 %v2_22ddd, { 4, 2, 1, 3, 0, 5, 6 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4, 5 }
}

define i32 @function_22f44(i32 %arg1) local_unnamed_addr {
dec_label_pc_22f44:
  %ebx.global-to-local = alloca i32, align 4
  %v0_22f44 = load i32, i32* @eax, align 4
  store i32 %v0_22f44, i32* %ebx.global-to-local, align 4
  %v0_22f46 = load i32, i32* @ebp, align 4
  %v1_22f46 = add i32 %v0_22f46, -60
  %v2_22f46 = inttoptr i32 %v1_22f46 to i32*
  %v3_22f46 = load i32, i32* %v2_22f46, align 4
  %v1_22f49 = add i32 %v3_22f46, 4
  %v2_22f49 = inttoptr i32 %v1_22f49 to i32*
  %v3_22f49 = load i32, i32* %v2_22f49, align 4
  store i32 %v3_22f49, i32* @esi, align 4
  %v1_22f4c = add i32 %v0_22f46, -64
  %v1_22f52 = call i32 @unknown_3f12c(i32 %v1_22f4c)
  %v1_22f57 = inttoptr i32 %v1_22f52 to i32*
  %v2_22f57 = load i32, i32* %v1_22f57, align 4
  %v0_22f59 = load i32, i32* %ebx.global-to-local, align 4
  %v0_22f5d = load i32, i32* @esi, align 4
  %v0_22f61 = load i32, i32* @ebp, align 4
  %v1_22f61 = add i32 %v0_22f61, -24
  %v2_22f61 = inttoptr i32 %v1_22f61 to i32*
  %v3_22f61 = load i32, i32* %v2_22f61, align 4
  %v4_22f6b = call i32 @unknown_459fe(i32 %v2_22f57, i32 %v3_22f61, i32 %v0_22f5d, i32 %v0_22f59)
  %v0_22f70 = load i32, i32* @ebp, align 4
  %v1_22f70 = add i32 %v0_22f70, -60
  %v2_22f70 = inttoptr i32 %v1_22f70 to i32*
  %v3_22f70 = load i32, i32* %v2_22f70, align 4
  %v1_22f73 = add i32 %v3_22f70, 4
  %v2_22f73 = inttoptr i32 %v1_22f73 to i32*
  %v3_22f73 = load i32, i32* %v2_22f73, align 4
  %v2_22f78 = add i32 %v0_22f70, -28
  %v3_22f78 = inttoptr i32 %v2_22f78 to i32*
  %v4_22f78 = load i32, i32* %v3_22f78, align 4
  %v5_22f78 = add i32 %v4_22f78, %v3_22f73
  %v3_22f7b = load i32, i32* %v2_22f70, align 4
  %v2_22f7e = add i32 %v3_22f7b, 4
  %v3_22f7e = inttoptr i32 %v2_22f7e to i32*
  store i32 %v5_22f78, i32* %v3_22f7e, align 4
  %v0_22f81 = load i32, i32* @ebp, align 4
  %v1_22f81 = add i32 %v0_22f81, -40
  %v1_22f84 = add i32 %v0_22f81, -64
  %v2_22f84 = inttoptr i32 %v1_22f84 to i32*
  %v3_22f84 = load i32, i32* %v2_22f84, align 4
  %v1_22f8b = add i32 %v0_22f81, -44
  %v2_22f8b = inttoptr i32 %v1_22f8b to i32*
  %v3_22f8b = load i32, i32* %v2_22f8b, align 4
  %v1_22f92 = add i32 %v0_22f81, -68
  %v2_22f92 = inttoptr i32 %v1_22f92 to i32*
  %v3_22f92 = load i32, i32* %v2_22f92, align 4
  %v4_22f9c = call i32 @unknown_3e5d9(i32 %v1_22f81, i32 %v3_22f92, i32 %v3_22f8b, i32 %v3_22f84)
  store i32 %v4_22f9c, i32* @eax, align 4
  %v0_22fa4 = call i32 @function_2314b()
  ret i32 %v0_22fa4

; uselistorder directives
  uselistorder i32 %v0_22f81, { 1, 0, 2, 3 }
}

define i32 @function_22fa9(i32 %arg1) local_unnamed_addr {
dec_label_pc_22fa9:
  %v0_22fb1 = load i32, i32* @ebp, align 4
  %v1_22fb8 = add i32 %v0_22fb1, -60
  %v2_22fb8 = inttoptr i32 %v1_22fb8 to i32*
  %v3_22fb8 = load i32, i32* %v2_22fb8, align 4
  ret i32 %v3_22fb8
}

define i32 @function_22fc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_22fc0:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v2_22fc0 = load i32, i32* @edx, align 4
  %v3_22fc0 = load i32, i32* @eax, align 4
  %v4_22fc0 = sub i32 %v2_22fc0, %v3_22fc0
  %v21_22fc0 = inttoptr i32 %v2_22fc0 to i32*
  store i32 %v4_22fc0, i32* %v21_22fc0, align 4
  %v0_22fc2 = load i32, i32* @ecx, align 4
  %v1_22fc2 = add i32 %v0_22fc2, 1166797893
  %v2_22fc2 = inttoptr i32 %v1_22fc2 to i8*
  %v3_22fc2 = load i8, i8* %v2_22fc2, align 1
  %v5_22fc2 = trunc i32 %v0_22fc2 to i8
  %v6_22fc2 = add i8 %v3_22fc2, %v5_22fc2
  store i8 %v6_22fc2, i8* %v2_22fc2, align 1
  %v0_22fce = load i32, i32* @eax, align 4
  %v11_22fce = and i32 %v0_22fce, -252
  %v1_22fd3 = call i32 @unknown_44cda(i32 %v11_22fce)
  %v1_22fd8 = load i32, i32* @ebp, align 4
  %v2_22fd8 = add i32 %v1_22fd8, -16
  %v3_22fd8 = inttoptr i32 %v2_22fd8 to i32*
  store i32 %v1_22fd3, i32* %v3_22fd8, align 4
  %v0_22fdb = load i32, i32* @ebp, align 4
  %v1_22fdb = add i32 %v0_22fdb, -16
  %v2_22fdb = inttoptr i32 %v1_22fdb to i32*
  %v3_22fdb = load i32, i32* %v2_22fdb, align 4
  %v2_22fde = add i32 %v0_22fdb, -36
  %v3_22fde = inttoptr i32 %v2_22fde to i32*
  store i32 %v3_22fdb, i32* %v3_22fde, align 4
  %v0_22fe1 = load i32, i32* @ebp, align 4
  %v1_22fe1 = add i32 %v0_22fe1, -60
  %v2_22fe1 = inttoptr i32 %v1_22fe1 to i32*
  %v3_22fe1 = load i32, i32* %v2_22fe1, align 4
  %v1_22fe7 = call i32 @unknown_3e2bc(i32 %v3_22fe1)
  store i32 %v1_22fe7, i32* %ebx.global-to-local, align 4
  %v0_22fee = load i32, i32* @ebp, align 4
  %v1_22fee = add i32 %v0_22fee, -64
  %v1_22ff4 = call i32 @unknown_3f12c(i32 %v1_22fee)
  %v1_22ff9 = inttoptr i32 %v1_22ff4 to i32*
  %v2_22ff9 = load i32, i32* %v1_22ff9, align 4
  %v0_22ffb = load i32, i32* @ebp, align 4
  %v1_22ffb = add i32 %v0_22ffb, -60
  %v2_22ffb = inttoptr i32 %v1_22ffb to i32*
  %v3_22ffb = load i32, i32* %v2_22ffb, align 4
  %v1_22ffe = inttoptr i32 %v3_22ffb to i32*
  %v2_22ffe = load i32, i32* %v1_22ffe, align 4
  %v0_23000 = load i32, i32* %ebx.global-to-local, align 4
  %v1_23004 = add i32 %v0_22ffb, -16
  %v2_23004 = inttoptr i32 %v1_23004 to i32*
  %v3_23004 = load i32, i32* %v2_23004, align 4
  %v4_23012 = call i32 @unknown_459fe(i32 %v2_22ffe, i32 %v2_22ff9, i32 %v3_23004, i32 %v0_23000)
  %v1_23017 = load i32, i32* @ebp, align 4
  %v2_23017 = add i32 %v1_23017, -36
  %v3_23017 = inttoptr i32 %v2_23017 to i32*
  store i32 %v4_23012, i32* %v3_23017, align 4
  %v0_2301a = load i32, i32* @ebp, align 4
  %v1_2301a = add i32 %v0_2301a, -60
  %v2_2301a = inttoptr i32 %v1_2301a to i32*
  %v3_2301a = load i32, i32* %v2_2301a, align 4
  %v1_23020 = call i32 @unknown_3e2bc(i32 %v3_2301a)
  %v0_23029 = load i32, i32* @ebp, align 4
  %v1_23029 = add i32 %v0_23029, -36
  %v2_23029 = inttoptr i32 %v1_23029 to i32*
  %v3_23029 = load i32, i32* %v2_23029, align 4
  %v1_23030 = add i32 %v0_23029, -72
  %v2_23030 = inttoptr i32 %v1_23030 to i32*
  %v3_23030 = load i32, i32* %v2_23030, align 4
  %v1_23037 = add i32 %v0_23029, -68
  %v2_23037 = inttoptr i32 %v1_23037 to i32*
  %v3_23037 = load i32, i32* %v2_23037, align 4
  %v4_2303d = call i32 @unknown_3ef97(i32 %v3_23037, i32 %v3_23030, i32 %v3_23029, i32 %v1_23020)
  %v1_23042 = load i32, i32* @ebp, align 4
  %v2_23042 = add i32 %v1_23042, -36
  %v3_23042 = inttoptr i32 %v2_23042 to i32*
  store i32 %v4_2303d, i32* %v3_23042, align 4
  %v0_23045 = load i32, i32* @ebp, align 4
  %v1_23045 = add i32 %v0_23045, -60
  %v2_23045 = inttoptr i32 %v1_23045 to i32*
  %v3_23045 = load i32, i32* %v2_23045, align 4
  %v1_2304b = call i32 @unknown_3e2bc(i32 %v3_23045)
  store i32 %v1_2304b, i32* %ebx.global-to-local, align 4
  %v0_23052 = load i32, i32* @ebp, align 4
  %v1_23052 = add i32 %v0_23052, -60
  %v2_23052 = inttoptr i32 %v1_23052 to i32*
  %v3_23052 = load i32, i32* %v2_23052, align 4
  %v1_23055 = add i32 %v3_23052, 4
  %v2_23055 = inttoptr i32 %v1_23055 to i32*
  %v3_23055 = load i32, i32* %v2_23055, align 4
  store i32 %v3_23055, i32* %esi.global-to-local, align 4
  %v1_23058 = add i32 %v0_23052, -64
  %v1_2305e = call i32 @unknown_3f12c(i32 %v1_23058)
  %v1_23063 = inttoptr i32 %v1_2305e to i32*
  %v2_23063 = load i32, i32* %v1_23063, align 4
  %v0_23065 = load i32, i32* %ebx.global-to-local, align 4
  %v0_23069 = load i32, i32* @ebp, align 4
  %v1_23069 = add i32 %v0_23069, -36
  %v2_23069 = inttoptr i32 %v1_23069 to i32*
  %v3_23069 = load i32, i32* %v2_23069, align 4
  %v0_23070 = load i32, i32* %esi.global-to-local, align 4
  %v4_23077 = call i32 @unknown_459fe(i32 %v2_23063, i32 %v0_23070, i32 %v3_23069, i32 %v0_23065)
  %v1_2307c = load i32, i32* @ebp, align 4
  %v2_2307c = add i32 %v1_2307c, -36
  %v3_2307c = inttoptr i32 %v2_2307c to i32*
  store i32 %v4_23077, i32* %v3_2307c, align 4
  %v0_2307f = load i32, i32* @ebp, align 4
  %v1_2307f = add i32 %v0_2307f, -60
  %v2_2307f = inttoptr i32 %v1_2307f to i32*
  %v3_2307f = load i32, i32* %v2_2307f, align 4
  %v1_23085 = call i32 @unknown_3e2bc(i32 %v3_2307f)
  %v0_2308a = load i32, i32* @ebp, align 4
  %v1_2308a = add i32 %v0_2308a, -60
  %v2_2308a = inttoptr i32 %v1_2308a to i32*
  %v3_2308a = load i32, i32* %v2_2308a, align 4
  %v1_2308d = add i32 %v3_2308a, 4
  %v2_2308d = inttoptr i32 %v1_2308d to i32*
  %v3_2308d = load i32, i32* %v2_2308d, align 4
  %v1_23093 = inttoptr i32 %v3_2308a to i32*
  %v2_23093 = load i32, i32* %v1_23093, align 4
  %v3_230a0 = call i32 @unknown_3e2e9(i32 %v2_23093, i32 %v3_2308d, i32 %v1_23085)
  %v0_230a5 = load i32, i32* @ebp, align 4
  %v1_230a5 = add i32 %v0_230a5, -60
  %v2_230a5 = inttoptr i32 %v1_230a5 to i32*
  %v3_230ba = load i32, i32* %v2_230a5, align 4
  %v1_230bd = inttoptr i32 %v3_230ba to i32*
  %v2_230bd = load i32, i32* %v1_230bd, align 4
  %v2_230cd = call i32 @unknown_3e584(i32 %v3_230ba, i32 %v2_230bd)
  %v0_230d2 = load i32, i32* @ebp, align 4
  %v1_230d2 = add i32 %v0_230d2, -60
  %v2_230d2 = inttoptr i32 %v1_230d2 to i32*
  %v3_230d2 = load i32, i32* %v2_230d2, align 4
  %v1_230d5 = add i32 %v0_230d2, -16
  %v2_230d5 = inttoptr i32 %v1_230d5 to i32*
  %v3_230d5 = load i32, i32* %v2_230d5, align 4
  %v2_230d8 = inttoptr i32 %v3_230d2 to i32*
  store i32 %v3_230d5, i32* %v2_230d8, align 4
  %v0_230da = load i32, i32* @ebp, align 4
  %v1_230da = add i32 %v0_230da, -60
  %v2_230da = inttoptr i32 %v1_230da to i32*
  %v3_230da = load i32, i32* %v2_230da, align 4
  %v1_230dd = add i32 %v0_230da, -36
  %v2_230dd = inttoptr i32 %v1_230dd to i32*
  %v3_230dd = load i32, i32* %v2_230dd, align 4
  %v2_230e0 = add i32 %v3_230da, 4
  %v3_230e0 = inttoptr i32 %v2_230e0 to i32*
  store i32 %v3_230dd, i32* %v3_230e0, align 4
  %v0_230e3 = load i32, i32* @ebp, align 4
  %v1_230e3 = add i32 %v0_230e3, -20
  %v2_230e3 = inttoptr i32 %v1_230e3 to i32*
  %v3_230e3 = load i32, i32* %v2_230e3, align 4
  %v1_230e6 = add i32 %v0_230e3, -16
  %v2_230e6 = inttoptr i32 %v1_230e6 to i32*
  %v3_230e6 = load i32, i32* %v2_230e6, align 4
  %v2_230e9 = add i32 %v3_230e6, %v3_230e3
  %v1_230eb = add i32 %v0_230e3, -60
  %v2_230eb = inttoptr i32 %v1_230eb to i32*
  %v3_230eb = load i32, i32* %v2_230eb, align 4
  store i32 %v3_230eb, i32* @eax, align 4
  %v2_230ee = add i32 %v3_230eb, 8
  %v3_230ee = inttoptr i32 %v2_230ee to i32*
  store i32 %v2_230e9, i32* %v3_230ee, align 4
  %v0_230f1 = call i32 @function_2314b()
  ret i32 %v0_230f1

; uselistorder directives
  uselistorder i32 ()* @function_2314b, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_459fe, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_3f12c, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_3e2bc, { 3, 2, 1, 0, 6, 5, 4 }
}

define i32 @function_23018(i32 %arg1) local_unnamed_addr {
dec_label_pc_23018:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_230f4() local_unnamed_addr {
dec_label_pc_230f4:
  %eax.global-to-local = alloca i32, align 4
  %v0_230f4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_230f4
}

define i32 @function_2313a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2313a:
  %v0_2313a = load i32, i32* @edx, align 4
  %v0_2313e = load i32, i32* @eax, align 4
  %v2_23141 = call i32 @unknown_3e584(i32 %v0_2313e, i32 %v0_2313a)
  ret i32 %v2_23141

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3e584, { 1, 0 }
}

define i32 @function_2314b() local_unnamed_addr {
dec_label_pc_2314b:
  %v0_2314b = load i32, i32* @ebp, align 4
  %v1_2314b = add i32 %v0_2314b, -12
  %v2_2314b = inttoptr i32 %v1_2314b to i32*
  %v3_2314b = load i32, i32* %v2_2314b, align 4
  %v1_2314e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2314e = xor i32 %v1_2314e, %v3_2314b
  %v3_2314e = icmp eq i32 %v2_2314e, 0
  store i32 %v2_2314e, i32* @ebx, align 4
  br i1 %v3_2314e, label %bb, label %dec_label_pc_2314b.dec_label_pc_23157_crit_edge

dec_label_pc_2314b.dec_label_pc_23157_crit_edge:  ; preds = %dec_label_pc_2314b
  %v2_23155.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_23157

bb:                                               ; preds = %dec_label_pc_2314b
  %v1_23155 = call i32 @function_2315c()
  br label %dec_label_pc_23157

dec_label_pc_23157:                               ; preds = %dec_label_pc_2314b.dec_label_pc_23157_crit_edge, %bb
  %v2_23155 = phi i32 [ %v2_23155.pre, %dec_label_pc_2314b.dec_label_pc_23157_crit_edge ], [ %v1_23155, %bb ]
  ret i32 %v2_23155

; uselistorder directives
  uselistorder label %dec_label_pc_23157, { 1, 0 }
}

define i32 @function_2315c() local_unnamed_addr {
dec_label_pc_2315c:
  %v0_2315c = load i32, i32* @ebp, align 4
  %v1_2315c = add i32 %v0_2315c, -8
  %v1_2315f = inttoptr i32 %v1_2315c to i32*
  %v2_2315f = load i32, i32* %v1_2315f, align 4
  store i32 %v2_2315f, i32* @ebx, align 4
  %v3_2315f = add i32 %v0_2315c, -4
  %v1_23160 = inttoptr i32 %v3_2315f to i32*
  %v2_23160 = load i32, i32* %v1_23160, align 4
  store i32 %v2_23160, i32* @esi, align 4
  %v1_23161 = inttoptr i32 %v0_2315c to i32*
  %v2_23161 = load i32, i32* %v1_23161, align 4
  store i32 %v2_23161, i32* @ebp, align 4
  %v0_23162 = load i32, i32* @eax, align 4
  ret i32 %v0_23162
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIPhEEvN9__gnu_cxx17__normal_iteratorIS3_S1_EET_S7_St20forward_iterator_tag(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23164:
  ret i32 %arg2
}

define i32 @function_2317a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2317a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2317a = load i32, i32* @ecx, align 4
  %v1_2317a = add i32 %v0_2317a, 1166785605
  %v2_2317a = inttoptr i32 %v1_2317a to i8*
  %v3_2317a = load i8, i8* %v2_2317a, align 1
  %v5_2317a = trunc i32 %v0_2317a to i8
  %v6_2317a = load i1, i1* @cf, align 1
  %v7_2317a = zext i1 %v6_2317a to i8
  %v8_2317a = add i8 %v3_2317a, %v5_2317a
  %v9_2317a = add i8 %v8_2317a, %v7_2317a
  store i8 %v9_2317a, i8* %v2_2317a, align 1
  %v0_23182 = load i32, i32* @ebp, align 4
  %v1_23182 = add i32 %v0_23182, 1
  store i32 %v1_23182, i32* @ebp, align 4
  %v3_23188 = add i32 %v0_23182, -72
  %v4_23188 = inttoptr i32 %v3_23188 to i8*
  store i8 15, i8* %v4_23188, align 1
  %v0_2318b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_23191 = load i32, i32* @ebp, align 4
  %v2_23191 = add i32 %v1_23191, -12
  %v3_23191 = inttoptr i32 %v2_23191 to i32*
  store i32 %v0_2318b, i32* %v3_23191, align 4
  %v0_23196 = load i32, i32* @ebp, align 4
  %v1_23196 = add i32 %v0_23196, -68
  %v2_23196 = inttoptr i32 %v1_23196 to i32*
  %v3_23196 = load i32, i32* %v2_23196, align 4
  store i32 %v3_23196, i32* @eax, align 4
  %v2_23199 = add i32 %v0_23196, -72
  %v3_23199 = inttoptr i32 %v2_23199 to i32*
  %v4_23199 = load i32, i32* %v3_23199, align 4
  %v15_23199 = icmp eq i32 %v3_23196, %v4_23199
  br i1 %v15_23199, label %bb, label %dec_label_pc_231a2

bb:                                               ; preds = %dec_label_pc_2317a
  %v1_2319c = call i32 @function_2351d()
  %v0_231a2.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_231a2

dec_label_pc_231a2:                               ; preds = %bb, %dec_label_pc_2317a
  %v0_231a2 = phi i32 [ %v0_231a2.pre, %bb ], [ %v0_23196, %dec_label_pc_2317a ]
  %v1_231a2 = add i32 %v0_231a2, -72
  %v2_231a2 = inttoptr i32 %v1_231a2 to i32*
  %v3_231a2 = load i32, i32* %v2_231a2, align 4
  %v1_231a9 = add i32 %v0_231a2, -68
  %v2_231a9 = inttoptr i32 %v1_231a9 to i32*
  %v3_231a9 = load i32, i32* %v2_231a9, align 4
  %v2_231af = call i32 @unknown_4cc5b(i32 %v3_231a9, i32 %v3_231a2)
  %v1_231b4 = load i32, i32* @ebp, align 4
  %v2_231b4 = add i32 %v1_231b4, -32
  %v3_231b4 = inttoptr i32 %v2_231b4 to i32*
  store i32 %v2_231af, i32* %v3_231b4, align 4
  %v0_231b7 = load i32, i32* @ebp, align 4
  %v1_231b7 = add i32 %v0_231b7, -60
  %v2_231b7 = inttoptr i32 %v1_231b7 to i32*
  %v3_231b7 = load i32, i32* %v2_231b7, align 4
  %v1_231ba = add i32 %v3_231b7, 8
  %v2_231ba = inttoptr i32 %v1_231ba to i32*
  %v3_231ba = load i32, i32* %v2_231ba, align 4
  %v1_231c2 = add i32 %v3_231b7, 4
  %v2_231c2 = inttoptr i32 %v1_231c2 to i32*
  %v3_231c2 = load i32, i32* %v2_231c2, align 4
  %v2_231c7 = sub i32 %v3_231ba, %v3_231c2
  %v2_231cb = add i32 %v0_231b7, -32
  %v3_231cb = inttoptr i32 %v2_231cb to i32*
  %v4_231cb = load i32, i32* %v3_231cb, align 4
  %v10_231cb = icmp ult i32 %v2_231c7, %v4_231cb
  br i1 %v10_231cb, label %bb7, label %dec_label_pc_231d4

bb7:                                              ; preds = %dec_label_pc_231a2
  %v1_231ce = call i32 @function_2337b()
  %v0_231d4.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_231d4

dec_label_pc_231d4:                               ; preds = %bb7, %dec_label_pc_231a2
  %v0_231d4 = phi i32 [ %v0_231d4.pre, %bb7 ], [ %v0_231b7, %dec_label_pc_231a2 ]
  %v1_231d4 = add i32 %v0_231d4, -52
  %v1_231d7 = add i32 %v0_231d4, -60
  %v2_231d7 = inttoptr i32 %v1_231d7 to i32*
  %v3_231d7 = load i32, i32* %v2_231d7, align 4
  %v2_231e1 = call i32 @unknown_39a46(i32 %v1_231d4, i32 %v3_231d7)
  %v0_231e9 = load i32, i32* @ebp, align 4
  %v1_231e9 = add i32 %v0_231e9, -64
  %v1_231f0 = add i32 %v0_231e9, -52
  %v2_231f6 = call i32 @unknown_3a3f0(i32 %v1_231f0, i32 %v1_231e9)
  %v1_231fb = load i32, i32* @ebp, align 4
  %v2_231fb = add i32 %v1_231fb, -28
  %v3_231fb = inttoptr i32 %v2_231fb to i32*
  store i32 %v2_231f6, i32* %v3_231fb, align 4
  %v0_231fe = load i32, i32* @ebp, align 4
  %v1_231fe = add i32 %v0_231fe, -60
  %v2_231fe = inttoptr i32 %v1_231fe to i32*
  %v3_231fe = load i32, i32* %v2_231fe, align 4
  %v1_23201 = add i32 %v3_231fe, 4
  %v2_23201 = inttoptr i32 %v1_23201 to i32*
  %v3_23201 = load i32, i32* %v2_23201, align 4
  %v2_23204 = add i32 %v0_231fe, -24
  %v3_23204 = inttoptr i32 %v2_23204 to i32*
  store i32 %v3_23201, i32* %v3_23204, align 4
  %v0_23207 = load i32, i32* @ebp, align 4
  %v1_23207 = add i32 %v0_23207, -28
  %v2_23207 = inttoptr i32 %v1_23207 to i32*
  %v3_23207 = load i32, i32* %v2_23207, align 4
  %v2_2320a = add i32 %v0_23207, -32
  %v3_2320a = inttoptr i32 %v2_2320a to i32*
  %v4_2320a = load i32, i32* %v3_2320a, align 4
  %tmp10 = icmp ugt i32 %v3_23207, %v4_2320a
  br i1 %tmp10, label %dec_label_pc_23213, label %dec_label_pc_232ae

dec_label_pc_23213:                               ; preds = %dec_label_pc_231d4
  %v1_23213 = add i32 %v0_23207, -60
  %v2_23213 = inttoptr i32 %v1_23213 to i32*
  %v3_23213 = load i32, i32* %v2_23213, align 4
  %v1_23219 = call i32 @unknown_3e69c(i32 %v3_23213)
  %v0_2321e = load i32, i32* @ebp, align 4
  %v1_2321e = add i32 %v0_2321e, -60
  %v2_2321e = inttoptr i32 %v1_2321e to i32*
  %v3_2321e = load i32, i32* %v2_2321e, align 4
  %v1_23221 = add i32 %v3_2321e, 4
  %v2_23221 = inttoptr i32 %v1_23221 to i32*
  %v3_23221 = load i32, i32* %v2_23221, align 4
  %v1_23227 = add i32 %v3_2321e, 4
  %v2_23227 = inttoptr i32 %v1_23227 to i32*
  %v3_23227 = load i32, i32* %v2_23227, align 4
  %v3_2322a = load i32, i32* %v2_2321e, align 4
  store i32 %v3_2322a, i32* %ebx.global-to-local, align 4
  %v1_2322d = add i32 %v3_2322a, 4
  %v2_2322d = inttoptr i32 %v1_2322d to i32*
  %v3_2322d = load i32, i32* %v2_2322d, align 4
  store i32 %v3_2322d, i32* %ebx.global-to-local, align 4
  %v1_23230 = add i32 %v0_2321e, -32
  %v2_23230 = inttoptr i32 %v1_23230 to i32*
  %v3_23230 = load i32, i32* %v2_23230, align 4
  %v2_23235 = sub i32 %v3_2322d, %v3_23230
  store i32 %v2_23235, i32* %ebx.global-to-local, align 4
  %v4_23246 = call i32 @unknown_45dde(i32 %v2_23235, i32 %v3_23227, i32 %v3_23221, i32 %v1_23219)
  %v0_2324b = load i32, i32* @ebp, align 4
  %v1_2324b = add i32 %v0_2324b, -60
  %v2_2324b = inttoptr i32 %v1_2324b to i32*
  %v3_2324b = load i32, i32* %v2_2324b, align 4
  %v1_2324e = add i32 %v3_2324b, 4
  %v2_2324e = inttoptr i32 %v1_2324e to i32*
  %v3_2324e = load i32, i32* %v2_2324e, align 4
  %v2_23253 = add i32 %v0_2324b, -32
  %v3_23253 = inttoptr i32 %v2_23253 to i32*
  %v4_23253 = load i32, i32* %v3_23253, align 4
  %v5_23253 = add i32 %v4_23253, %v3_2324e
  %v3_23256 = load i32, i32* %v2_2324b, align 4
  %v2_23259 = add i32 %v3_23256, 4
  %v3_23259 = inttoptr i32 %v2_23259 to i32*
  store i32 %v5_23253, i32* %v3_23259, align 4
  %v0_2325c = load i32, i32* @ebp, align 4
  %v1_2325c = add i32 %v0_2325c, -32
  %v2_2325c = inttoptr i32 %v1_2325c to i32*
  %v3_2325c = load i32, i32* %v2_2325c, align 4
  %v1_2325f = sub i32 0, %v3_2325c
  store i32 %v1_2325f, i32* %ebx.global-to-local, align 4
  %v2_23263 = add i32 %v0_2325c, -24
  %v3_23263 = inttoptr i32 %v2_23263 to i32*
  %v4_23263 = load i32, i32* %v3_23263, align 4
  %v5_23263 = sub i32 %v4_23263, %v3_2325c
  store i32 %v5_23263, i32* %ebx.global-to-local, align 4
  %v1_23266 = add i32 %v0_2325c, -64
  %v1_2326c = call i32 @unknown_3f50c(i32 %v1_23266)
  %v1_23271 = inttoptr i32 %v1_2326c to i32*
  %v2_23271 = load i32, i32* %v1_23271, align 4
  %v0_23273 = load i32, i32* @ebp, align 4
  %v1_23273 = add i32 %v0_23273, -24
  %v2_23273 = inttoptr i32 %v1_23273 to i32*
  %v3_23273 = load i32, i32* %v2_23273, align 4
  %v0_2327a = load i32, i32* %ebx.global-to-local, align 4
  %v3_23281 = call i32 @unknown_45ca5(i32 %v2_23271, i32 %v0_2327a, i32 %v3_23273)
  %v0_23286 = load i32, i32* @ebp, align 4
  %v1_23286 = add i32 %v0_23286, -48
  %v1_23289 = add i32 %v0_23286, -64
  %v2_23289 = inttoptr i32 %v1_23289 to i32*
  %v3_23289 = load i32, i32* %v2_23289, align 4
  %v1_23290 = add i32 %v0_23286, -72
  %v2_23290 = inttoptr i32 %v1_23290 to i32*
  %v3_23290 = load i32, i32* %v2_23290, align 4
  %v1_23297 = add i32 %v0_23286, -68
  %v2_23297 = inttoptr i32 %v1_23297 to i32*
  %v3_23297 = load i32, i32* %v2_23297, align 4
  %v4_232a1 = call i32 @unknown_4ccba(i32 %v1_23286, i32 %v3_23297, i32 %v3_23290, i32 %v3_23289)
  store i32 %v4_232a1, i32* @eax, align 4
  %v0_232a9 = call i32 @function_2351d()
  ret i32 %v0_232a9

dec_label_pc_232ae:                               ; preds = %dec_label_pc_231d4
  %v1_232ae = add i32 %v0_23207, -68
  %v2_232ae = inttoptr i32 %v1_232ae to i32*
  %v3_232ae = load i32, i32* %v2_232ae, align 4
  %v2_232b1 = add i32 %v0_23207, -44
  %v3_232b1 = inttoptr i32 %v2_232b1 to i32*
  store i32 %v3_232ae, i32* %v3_232b1, align 4
  %v0_232b4 = load i32, i32* @ebp, align 4
  %v1_232b4 = add i32 %v0_232b4, -28
  %v2_232b4 = inttoptr i32 %v1_232b4 to i32*
  %v3_232b4 = load i32, i32* %v2_232b4, align 4
  %v1_232bb = add i32 %v0_232b4, -44
  %v2_232c1 = call i32 @unknown_4cd36(i32 %v1_232bb, i32 %v3_232b4)
  %v0_232c6 = load i32, i32* @ebp, align 4
  %v1_232c6 = add i32 %v0_232c6, -60
  %v2_232c6 = inttoptr i32 %v1_232c6 to i32*
  %v3_232c6 = load i32, i32* %v2_232c6, align 4
  %v1_232cc = call i32 @unknown_3e69c(i32 %v3_232c6)
  %v0_232d1 = load i32, i32* @ebp, align 4
  %v1_232d1 = add i32 %v0_232d1, -60
  %v2_232d1 = inttoptr i32 %v1_232d1 to i32*
  %v3_232d1 = load i32, i32* %v2_232d1, align 4
  %v1_232d4 = add i32 %v3_232d1, 4
  %v2_232d4 = inttoptr i32 %v1_232d4 to i32*
  %v3_232d4 = load i32, i32* %v2_232d4, align 4
  %v1_232d7 = add i32 %v0_232d1, -44
  %v2_232d7 = inttoptr i32 %v1_232d7 to i32*
  %v3_232d7 = load i32, i32* %v2_232d7, align 4
  %v1_232e2 = add i32 %v0_232d1, -72
  %v2_232e2 = inttoptr i32 %v1_232e2 to i32*
  %v3_232e2 = load i32, i32* %v2_232e2, align 4
  %v4_232ec = call i32 @unknown_3eaf5(i32 %v3_232d7, i32 %v3_232e2, i32 %v3_232d4, i32 %v1_232cc)
  %v0_232f1 = load i32, i32* @ebp, align 4
  %v1_232f1 = add i32 %v0_232f1, -60
  %v2_232f1 = inttoptr i32 %v1_232f1 to i32*
  %v3_232f1 = load i32, i32* %v2_232f1, align 4
  %v1_232f4 = add i32 %v3_232f1, 4
  %v2_232f4 = inttoptr i32 %v1_232f4 to i32*
  %v3_232f4 = load i32, i32* %v2_232f4, align 4
  %v1_232f7 = add i32 %v0_232f1, -28
  %v2_232f7 = inttoptr i32 %v1_232f7 to i32*
  %v3_232f7 = load i32, i32* %v2_232f7, align 4
  %v1_232fa = add i32 %v0_232f1, -32
  %v2_232fa = inttoptr i32 %v1_232fa to i32*
  %v3_232fa = load i32, i32* %v2_232fa, align 4
  %v2_232ff = sub i32 %v3_232fa, %v3_232f7
  store i32 %v2_232ff, i32* %ebx.global-to-local, align 4
  %v2_23303 = add i32 %v2_232ff, %v3_232f4
  %v3_23305 = load i32, i32* %v2_232f1, align 4
  %v2_23308 = add i32 %v3_23305, 4
  %v3_23308 = inttoptr i32 %v2_23308 to i32*
  store i32 %v2_23303, i32* %v3_23308, align 4
  %v0_2330b = load i32, i32* @ebp, align 4
  %v1_2330b = add i32 %v0_2330b, -60
  %v2_2330b = inttoptr i32 %v1_2330b to i32*
  %v3_2330b = load i32, i32* %v2_2330b, align 4
  %v1_23311 = call i32 @unknown_3e69c(i32 %v3_2330b)
  store i32 %v1_23311, i32* %ebx.global-to-local, align 4
  %v0_23318 = load i32, i32* @ebp, align 4
  %v1_23318 = add i32 %v0_23318, -60
  %v2_23318 = inttoptr i32 %v1_23318 to i32*
  %v3_23318 = load i32, i32* %v2_23318, align 4
  ret i32 %v3_23318

; uselistorder directives
  uselistorder i32 %v0_232f1, { 1, 0, 2 }
  uselistorder i32 %v0_23286, { 1, 0, 2, 3 }
  uselistorder i32 %v0_23207, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_231d4, { 1, 0 }
  uselistorder i32 %v0_231a2, { 1, 0 }
}

define i32 @function_2331c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2331c:
  %v0_2331c = load i1, i1* @of, align 1
  br i1 %v0_2331c, label %dec_label_pc_23322, label %dec_label_pc_2331e

dec_label_pc_2331e:                               ; preds = %dec_label_pc_2331c
  %v0_2331e = load i32, i32* @ebp, align 4
  %v1_2331e = add i32 %v0_2331e, -64
  ret i32 %v1_2331e

dec_label_pc_23322:                               ; preds = %dec_label_pc_2331c
  %v1_23324 = call i32 @unknown_3f50c(i32 ptrtoint (i32* @9 to i32))
  %v1_23329 = inttoptr i32 %v1_23324 to i32*
  %v2_23329 = load i32, i32* %v1_23329, align 4
  %v0_2332b = load i32, i32* @ebx, align 4
  %v0_2332f = load i32, i32* @esi, align 4
  %v0_23333 = load i32, i32* @ebp, align 4
  %v1_23333 = add i32 %v0_23333, -24
  %v2_23333 = inttoptr i32 %v1_23333 to i32*
  %v3_23333 = load i32, i32* %v2_23333, align 4
  %v4_2333d = call i32 @unknown_45dde(i32 %v2_23329, i32 %v3_23333, i32 %v0_2332f, i32 %v0_2332b)
  %v0_23342 = load i32, i32* @ebp, align 4
  %v1_23342 = add i32 %v0_23342, -60
  %v2_23342 = inttoptr i32 %v1_23342 to i32*
  %v3_23342 = load i32, i32* %v2_23342, align 4
  %v1_23345 = add i32 %v3_23342, 4
  %v2_23345 = inttoptr i32 %v1_23345 to i32*
  %v3_23345 = load i32, i32* %v2_23345, align 4
  %v2_2334a = add i32 %v0_23342, -28
  %v3_2334a = inttoptr i32 %v2_2334a to i32*
  %v4_2334a = load i32, i32* %v3_2334a, align 4
  %v5_2334a = add i32 %v4_2334a, %v3_23345
  %v3_2334d = load i32, i32* %v2_23342, align 4
  %v2_23350 = add i32 %v3_2334d, 4
  %v3_23350 = inttoptr i32 %v2_23350 to i32*
  store i32 %v5_2334a, i32* %v3_23350, align 4
  %v0_23353 = load i32, i32* @ebp, align 4
  %v1_23353 = add i32 %v0_23353, -44
  %v2_23353 = inttoptr i32 %v1_23353 to i32*
  %v3_23353 = load i32, i32* %v2_23353, align 4
  %v1_23356 = add i32 %v0_23353, -40
  %v1_23359 = add i32 %v0_23353, -64
  %v2_23359 = inttoptr i32 %v1_23359 to i32*
  %v3_23359 = load i32, i32* %v2_23359, align 4
  %v1_23364 = add i32 %v0_23353, -68
  %v2_23364 = inttoptr i32 %v1_23364 to i32*
  %v3_23364 = load i32, i32* %v2_23364, align 4
  %v4_2336e = call i32 @unknown_4ccba(i32 %v1_23356, i32 %v3_23364, i32 %v3_23353, i32 %v3_23359)
  store i32 %v4_2336e, i32* @eax, align 4
  %v0_23376 = call i32 @function_2351d()
  ret i32 %v0_23376

; uselistorder directives
  uselistorder i32 %v0_23353, { 1, 0, 2, 3 }
}

define i32 @function_2337b() local_unnamed_addr {
dec_label_pc_2337b:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23383 = load i32, i32* @ebp, align 4
  %v1_23383 = add i32 %v0_23383, -32
  %v2_23383 = inttoptr i32 %v1_23383 to i32*
  %v3_23383 = load i32, i32* %v2_23383, align 4
  %v1_2338a = add i32 %v0_23383, -60
  %v2_2338a = inttoptr i32 %v1_2338a to i32*
  %v3_2338a = load i32, i32* %v2_2338a, align 4
  %v4_23390 = call i32 @unknown_45d0c(i32 %v3_2338a, i32 %v3_23383, i32 ptrtoint ([24 x i8]* @global_var_c603.2285 to i32))
  %v1_23395 = load i32, i32* @ebp, align 4
  %v2_23395 = add i32 %v1_23395, -20
  %v3_23395 = inttoptr i32 %v2_23395 to i32*
  store i32 %v4_23390, i32* %v3_23395, align 4
  %v0_23398 = load i32, i32* @ebp, align 4
  %v1_23398 = add i32 %v0_23398, -60
  %v2_23398 = inttoptr i32 %v1_23398 to i32*
  %v3_23398 = load i32, i32* %v2_23398, align 4
  %v1_2339b = add i32 %v0_23398, -20
  %v2_2339b = inttoptr i32 %v1_2339b to i32*
  %v3_2339b = load i32, i32* %v2_2339b, align 4
  %v2_233a5 = call i32 @unknown_450ba(i32 %v3_23398, i32 %v3_2339b)
  %v1_233aa = load i32, i32* @ebp, align 4
  %v2_233aa = add i32 %v1_233aa, -16
  %v3_233aa = inttoptr i32 %v2_233aa to i32*
  store i32 %v2_233a5, i32* %v3_233aa, align 4
  %v0_233ad = load i32, i32* @ebp, align 4
  %v1_233ad = add i32 %v0_233ad, -16
  %v2_233ad = inttoptr i32 %v1_233ad to i32*
  %v3_233ad = load i32, i32* %v2_233ad, align 4
  %v2_233b0 = add i32 %v0_233ad, -36
  %v3_233b0 = inttoptr i32 %v2_233b0 to i32*
  store i32 %v3_233ad, i32* %v3_233b0, align 4
  %v0_233b3 = load i32, i32* @ebp, align 4
  %v1_233b3 = add i32 %v0_233b3, -60
  %v2_233b3 = inttoptr i32 %v1_233b3 to i32*
  %v3_233b3 = load i32, i32* %v2_233b3, align 4
  %v1_233b9 = call i32 @unknown_3e69c(i32 %v3_233b3)
  store i32 %v1_233b9, i32* %ebx.global-to-local, align 4
  %v0_233c0 = load i32, i32* @ebp, align 4
  %v1_233c0 = add i32 %v0_233c0, -64
  %v1_233c6 = call i32 @unknown_3f50c(i32 %v1_233c0)
  %v1_233cb = inttoptr i32 %v1_233c6 to i32*
  %v2_233cb = load i32, i32* %v1_233cb, align 4
  %v0_233cd = load i32, i32* @ebp, align 4
  %v1_233cd = add i32 %v0_233cd, -60
  %v2_233cd = inttoptr i32 %v1_233cd to i32*
  %v3_233cd = load i32, i32* %v2_233cd, align 4
  %v1_233d0 = inttoptr i32 %v3_233cd to i32*
  %v2_233d0 = load i32, i32* %v1_233d0, align 4
  %v0_233d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_233d6 = add i32 %v0_233cd, -16
  %v2_233d6 = inttoptr i32 %v1_233d6 to i32*
  %v3_233d6 = load i32, i32* %v2_233d6, align 4
  %v5_233e4 = call i32 @unknown_45dde(i32 %v2_233d0, i32 %v2_233cb, i32 %v3_233d6, i32 %v0_233d2)
  %v1_233e9 = load i32, i32* @ebp, align 4
  %v2_233e9 = add i32 %v1_233e9, -36
  %v3_233e9 = inttoptr i32 %v2_233e9 to i32*
  store i32 %v5_233e4, i32* %v3_233e9, align 4
  %v0_233ec = load i32, i32* @ebp, align 4
  %v1_233ec = add i32 %v0_233ec, -60
  %v2_233ec = inttoptr i32 %v1_233ec to i32*
  %v3_233ec = load i32, i32* %v2_233ec, align 4
  %v1_233f2 = call i32 @unknown_3e69c(i32 %v3_233ec)
  %v0_233fb = load i32, i32* @ebp, align 4
  %v1_233fb = add i32 %v0_233fb, -36
  %v2_233fb = inttoptr i32 %v1_233fb to i32*
  %v3_233fb = load i32, i32* %v2_233fb, align 4
  %v1_23402 = add i32 %v0_233fb, -72
  %v2_23402 = inttoptr i32 %v1_23402 to i32*
  %v3_23402 = load i32, i32* %v2_23402, align 4
  %v1_23409 = add i32 %v0_233fb, -68
  %v2_23409 = inttoptr i32 %v1_23409 to i32*
  %v3_23409 = load i32, i32* %v2_23409, align 4
  %v5_2340f = call i32 @unknown_3eaf5(i32 %v3_23409, i32 %v3_23402, i32 %v3_233fb, i32 %v1_233f2)
  %v1_23414 = load i32, i32* @ebp, align 4
  %v2_23414 = add i32 %v1_23414, -36
  %v3_23414 = inttoptr i32 %v2_23414 to i32*
  store i32 %v5_2340f, i32* %v3_23414, align 4
  %v0_23417 = load i32, i32* @ebp, align 4
  %v1_23417 = add i32 %v0_23417, -60
  %v2_23417 = inttoptr i32 %v1_23417 to i32*
  %v3_23417 = load i32, i32* %v2_23417, align 4
  %v1_2341d = call i32 @unknown_3e69c(i32 %v3_23417)
  store i32 %v1_2341d, i32* %ebx.global-to-local, align 4
  %v0_23424 = load i32, i32* @ebp, align 4
  %v1_23424 = add i32 %v0_23424, -60
  %v2_23424 = inttoptr i32 %v1_23424 to i32*
  %v3_23424 = load i32, i32* %v2_23424, align 4
  %v1_23427 = add i32 %v3_23424, 4
  %v2_23427 = inttoptr i32 %v1_23427 to i32*
  %v3_23427 = load i32, i32* %v2_23427, align 4
  store i32 %v3_23427, i32* %esi.global-to-local, align 4
  %v1_2342a = add i32 %v0_23424, -64
  %v1_23430 = call i32 @unknown_3f50c(i32 %v1_2342a)
  %v1_23435 = inttoptr i32 %v1_23430 to i32*
  %v2_23435 = load i32, i32* %v1_23435, align 4
  %v0_23437 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2343b = load i32, i32* @ebp, align 4
  %v1_2343b = add i32 %v0_2343b, -36
  %v2_2343b = inttoptr i32 %v1_2343b to i32*
  %v3_2343b = load i32, i32* %v2_2343b, align 4
  %v0_23442 = load i32, i32* %esi.global-to-local, align 4
  %v5_23449 = call i32 @unknown_45dde(i32 %v2_23435, i32 %v0_23442, i32 %v3_2343b, i32 %v0_23437)
  %v1_2344e = load i32, i32* @ebp, align 4
  %v2_2344e = add i32 %v1_2344e, -36
  %v3_2344e = inttoptr i32 %v2_2344e to i32*
  store i32 %v5_23449, i32* %v3_2344e, align 4
  %v0_23451 = load i32, i32* @ebp, align 4
  %v1_23451 = add i32 %v0_23451, -60
  %v2_23451 = inttoptr i32 %v1_23451 to i32*
  %v3_23451 = load i32, i32* %v2_23451, align 4
  %v1_23457 = call i32 @unknown_3e69c(i32 %v3_23451)
  %v0_2345c = load i32, i32* @ebp, align 4
  %v1_2345c = add i32 %v0_2345c, -60
  %v2_2345c = inttoptr i32 %v1_2345c to i32*
  %v3_2345c = load i32, i32* %v2_2345c, align 4
  %v1_2345f = add i32 %v3_2345c, 4
  %v2_2345f = inttoptr i32 %v1_2345f to i32*
  %v3_2345f = load i32, i32* %v2_2345f, align 4
  %v1_23465 = inttoptr i32 %v3_2345c to i32*
  %v2_23465 = load i32, i32* %v1_23465, align 4
  %v4_23472 = call i32 @unknown_3e6c9(i32 %v2_23465, i32 %v3_2345f, i32 %v1_23457)
  %v0_23477 = load i32, i32* @ebp, align 4
  %v1_23477 = add i32 %v0_23477, -60
  %v2_23477 = inttoptr i32 %v1_23477 to i32*
  %v3_23477 = load i32, i32* %v2_23477, align 4
  %v1_2347a = add i32 %v3_23477, 8
  %v2_2347a = inttoptr i32 %v1_2347a to i32*
  %v3_2347a = load i32, i32* %v2_2347a, align 4
  ret i32 %v3_2347a

; uselistorder directives
  uselistorder i32 %v0_233fb, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_3eaf5, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_45dde, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_3f50c, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_3e69c, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_23480(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23480:
  %v0_23480 = load i32, i32* @ebp, align 4
  %v1_23480 = add i32 %v0_23480, 1
  store i32 %v1_23480, i32* @ebp, align 4
  %v0_23481 = load i32, i32* @ebx, align 4
  %v1_23481 = add i32 %v0_23481, 701597952
  %v2_23481 = inttoptr i32 %v1_23481 to i32*
  %v3_23481 = load i32, i32* %v2_23481, align 4
  %v1_23487 = add i32 %v3_23481, -1950250552
  %v2_23487 = inttoptr i32 %v1_23487 to i32*
  %v3_23487 = load i32, i32* %v2_23487, align 4
  %v4_23487 = udiv i32 %v3_23487, 32
  %v5_23487 = mul i32 %v3_23487, 134217728
  %v6_23487 = or i32 %v4_23487, %v5_23487
  store i32 %v6_23487, i32* %v2_23487, align 4
  %v0_2348e = load i32, i32* @ebx, align 4
  %v1_2348e = add i32 %v0_2348e, -1002075376
  %v2_2348e = inttoptr i32 %v1_2348e to i32*
  %v3_2348e = load i32, i32* %v2_2348e, align 4
  %v0_23498 = load i32, i32* @edx, align 4
  %v0_2349c = load i32, i32* @eax, align 4
  %v3_2349f = call i32 @unknown_3e964(i32 %v0_2349c, i32 %v0_23498, i32 %v3_2348e)
  %v0_234a4 = load i32, i32* @ebp, align 4
  %v1_234a4 = add i32 %v0_234a4, -60
  %v2_234a4 = inttoptr i32 %v1_234a4 to i32*
  %v3_234a4 = load i32, i32* %v2_234a4, align 4
  %v1_234a7 = add i32 %v0_234a4, -16
  %v2_234a7 = inttoptr i32 %v1_234a7 to i32*
  %v3_234a7 = load i32, i32* %v2_234a7, align 4
  %v2_234aa = inttoptr i32 %v3_234a4 to i32*
  store i32 %v3_234a7, i32* %v2_234aa, align 4
  %v0_234ac = load i32, i32* @ebp, align 4
  %v1_234ac = add i32 %v0_234ac, -60
  %v2_234ac = inttoptr i32 %v1_234ac to i32*
  %v3_234ac = load i32, i32* %v2_234ac, align 4
  %v1_234af = add i32 %v0_234ac, -36
  %v2_234af = inttoptr i32 %v1_234af to i32*
  %v3_234af = load i32, i32* %v2_234af, align 4
  %v2_234b2 = add i32 %v3_234ac, 4
  %v3_234b2 = inttoptr i32 %v2_234b2 to i32*
  store i32 %v3_234af, i32* %v3_234b2, align 4
  %v0_234b5 = load i32, i32* @ebp, align 4
  %v1_234b5 = add i32 %v0_234b5, -20
  %v2_234b5 = inttoptr i32 %v1_234b5 to i32*
  %v3_234b5 = load i32, i32* %v2_234b5, align 4
  %v1_234b8 = add i32 %v0_234b5, -16
  %v2_234b8 = inttoptr i32 %v1_234b8 to i32*
  %v3_234b8 = load i32, i32* %v2_234b8, align 4
  %v2_234bb = add i32 %v3_234b8, %v3_234b5
  %v1_234bd = add i32 %v0_234b5, -60
  %v2_234bd = inttoptr i32 %v1_234bd to i32*
  %v3_234bd = load i32, i32* %v2_234bd, align 4
  store i32 %v3_234bd, i32* @eax, align 4
  %v2_234c0 = add i32 %v3_234bd, 8
  %v3_234c0 = inttoptr i32 %v2_234c0 to i32*
  store i32 %v2_234bb, i32* %v3_234c0, align 4
  %v0_234c3 = call i32 @function_2351d()
  ret i32 %v0_234c3

; uselistorder directives
  uselistorder i32 ()* @function_2351d, { 1, 0, 3, 2 }
}

define i32 @function_234c6() local_unnamed_addr {
dec_label_pc_234c6:
  %eax.global-to-local = alloca i32, align 4
  %v0_234c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_234c6
}

declare i32 @__cxa_end_catch.1849(i32) local_unnamed_addr

define i32 @function_234f9(i16 %arg1) local_unnamed_addr {
dec_label_pc_234f9:
  %eax.global-to-local = alloca i32, align 4
  %v0_234f9 = load i32, i32* %eax.global-to-local, align 4
  %v11_234f9 = and i32 %v0_234f9, -24
  store i32 %v11_234f9, i32* %eax.global-to-local, align 4
  ret i32 %v11_234f9

; uselistorder directives
  uselistorder i32 %v11_234f9, { 1, 0 }
}

define i32 @function_2351d() local_unnamed_addr {
dec_label_pc_2351d:
  %v0_2351d = load i32, i32* @ebp, align 4
  %v1_2351d = add i32 %v0_2351d, -12
  %v2_2351d = inttoptr i32 %v1_2351d to i32*
  %v3_2351d = load i32, i32* %v2_2351d, align 4
  %v1_23520 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23520 = xor i32 %v1_23520, %v3_2351d
  %v3_23520 = icmp eq i32 %v2_23520, 0
  store i32 %v2_23520, i32* @ebx, align 4
  br i1 %v3_23520, label %bb, label %dec_label_pc_2351d.dec_label_pc_23529_crit_edge

dec_label_pc_2351d.dec_label_pc_23529_crit_edge:  ; preds = %dec_label_pc_2351d
  %v2_23527.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_23529

bb:                                               ; preds = %dec_label_pc_2351d
  %v1_23527 = call i32 @function_2352e()
  br label %dec_label_pc_23529

dec_label_pc_23529:                               ; preds = %dec_label_pc_2351d.dec_label_pc_23529_crit_edge, %bb
  %v2_23527 = phi i32 [ %v2_23527.pre, %dec_label_pc_2351d.dec_label_pc_23529_crit_edge ], [ %v1_23527, %bb ]
  ret i32 %v2_23527

; uselistorder directives
  uselistorder label %dec_label_pc_23529, { 1, 0 }
}

define i32 @function_2352e() local_unnamed_addr {
dec_label_pc_2352e:
  %v0_2352e = load i32, i32* @ebp, align 4
  %v1_2352e = add i32 %v0_2352e, -8
  %v1_23531 = inttoptr i32 %v1_2352e to i32*
  %v2_23531 = load i32, i32* %v1_23531, align 4
  store i32 %v2_23531, i32* @ebx, align 4
  %v1_23533 = inttoptr i32 %v0_2352e to i32*
  %v2_23533 = load i32, i32* %v1_23533, align 4
  store i32 %v2_23533, i32* @ebp, align 4
  %v0_23534 = load i32, i32* @eax, align 4
  ret i32 %v0_23534
}

define i32 @_ZNSt6vectorIhSaIhEE15_M_range_insertIPKhEEvN9__gnu_cxx17__normal_iteratorIPhS1_EET_S9_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_23536:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-68, align 4
  store i32 %arg3, i32* @eax, align 4
  %v15_2356b = icmp eq i32 %arg3, %arg4
  br i1 %v15_2356b, label %bb, label %dec_label_pc_23574

bb:                                               ; preds = %dec_label_pc_23536
  %v2_2356e = sext i8 %arg5 to i32
  %v3_2356e = call i32 @function_238ef(i32 %v2_2356e)
  br label %dec_label_pc_23574

dec_label_pc_23574:                               ; preds = %bb, %dec_label_pc_23536
  %v2_23581 = call i32 @unknown_4cf14(i32 %arg3, i32 %arg4)
  %v1_2358c = add i32 %arg1, 8
  %v2_2358c = inttoptr i32 %v1_2358c to i32*
  %v3_2358c = load i32, i32* %v2_2358c, align 4
  %v1_23594 = add i32 %arg1, 4
  %v2_23594 = inttoptr i32 %v1_23594 to i32*
  %v3_23594 = load i32, i32* %v2_23594, align 4
  %v2_23599 = sub i32 %v3_2358c, %v3_23594
  %v10_2359d = icmp ult i32 %v2_23599, %v2_23581
  br i1 %v10_2359d, label %bb121, label %dec_label_pc_235a6

bb121:                                            ; preds = %dec_label_pc_23574
  %v2_235a0 = call i32 @function_2374d(i32 %v2_23581)
  br label %dec_label_pc_235a6

dec_label_pc_235a6:                               ; preds = %bb121, %dec_label_pc_23574
  %v2_235a6 = ptrtoint i32* %stack_var_-56 to i32
  %v2_235b3 = call i32 @unknown_39e18(i32 %v2_235a6, i32 %arg1)
  %v2_235bb = ptrtoint i32* %stack_var_-68 to i32
  %v2_235c8 = call i32 @unknown_3a7c2(i32 %v2_235a6, i32 %v2_235bb)
  %v3_235d3 = load i32, i32* %v2_23594, align 4
  %tmp124 = icmp ugt i32 %v2_235c8, %v2_23581
  br i1 %tmp124, label %dec_label_pc_235e5, label %dec_label_pc_23680

dec_label_pc_235e5:                               ; preds = %dec_label_pc_235a6
  %v1_235eb = call i32 @unknown_3ea6e(i32 %arg1)
  %v3_235f3 = load i32, i32* %v2_23594, align 4
  %v2_23607 = sub i32 %v3_235f3, %v2_23581
  %v4_23618 = call i32 @unknown_461b0(i32 %v2_23607, i32 %v3_235f3, i32 %v3_235f3, i32 %v1_235eb)
  %v3_23620 = load i32, i32* %v2_23594, align 4
  %v5_23625 = add i32 %v3_23620, %v2_23581
  store i32 %v5_23625, i32* %v2_23594, align 4
  %v5_23635 = sub i32 %v3_235d3, %v2_23581
  %v1_2363e = call i32 @unknown_3f8de(i32 %v2_235bb)
  %v1_23643 = inttoptr i32 %v1_2363e to i32*
  %v2_23643 = load i32, i32* %v1_23643, align 4
  %v3_23653 = call i32 @unknown_46077(i32 %v2_23643, i32 %v5_23635, i32 %v3_235d3)
  %v2_23658 = ptrtoint i32* %stack_var_-52 to i32
  %v3_2365b = load i32, i32* %stack_var_-68, align 4
  %v4_23673 = call i32 @unknown_4d16d(i32 %v2_23658, i32 %arg3, i32 %arg4, i32 %v3_2365b)
  store i32 %v4_23673, i32* @eax, align 4
  %v1_2367b = call i32 @function_238ef(i32 %v2_23658)
  ret i32 %v1_2367b

dec_label_pc_23680:                               ; preds = %dec_label_pc_235a6
  store i32 %arg3, i32* %stack_var_-48, align 4
  %v2_2368d = ptrtoint i32* %stack_var_-48 to i32
  %v2_23693 = call i32 @unknown_4d1e9(i32 %v2_2368d, i32 %v2_235c8)
  %v1_2369e = call i32 @unknown_3ea6e(i32 %arg1)
  ret i32 %v1_2369e

; uselistorder directives
  uselistorder i32 %v3_235f3, { 2, 1, 0 }
  uselistorder i32 %v2_235c8, { 1, 0 }
  uselistorder i32 %v2_23581, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %arg4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 2, 1, 3, 0, 4 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_236b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_236b4:
  %ebx.global-to-local = alloca i32, align 4
  %v0_236b4 = load i32, i32* @ebp, align 4
  %v1_236b4 = add i32 %v0_236b4, -72
  %v2_236b4 = inttoptr i32 %v1_236b4 to i32*
  %v3_236b4 = load i32, i32* %v2_236b4, align 4
  %v0_236bb = load i32, i32* @edx, align 4
  %v2_236be = call i32 @unknown_4cf73(i32 %v0_236bb, i32 %v3_236b4)
  %v0_236c3 = load i32, i32* @ebp, align 4
  %v1_236c3 = add i32 %v0_236c3, -60
  %v2_236c3 = inttoptr i32 %v1_236c3 to i32*
  %v3_236c3 = load i32, i32* %v2_236c3, align 4
  %v1_236c6 = add i32 %v3_236c3, 4
  %v2_236c6 = inttoptr i32 %v1_236c6 to i32*
  %v3_236c6 = load i32, i32* %v2_236c6, align 4
  %v1_236c9 = add i32 %v0_236c3, -28
  %v2_236c9 = inttoptr i32 %v1_236c9 to i32*
  %v3_236c9 = load i32, i32* %v2_236c9, align 4
  %v1_236cc = add i32 %v0_236c3, -32
  %v2_236cc = inttoptr i32 %v1_236cc to i32*
  %v3_236cc = load i32, i32* %v2_236cc, align 4
  %v2_236d1 = sub i32 %v3_236cc, %v3_236c9
  store i32 %v2_236d1, i32* %ebx.global-to-local, align 4
  %v2_236d5 = add i32 %v2_236d1, %v3_236c6
  %v3_236d7 = load i32, i32* %v2_236c3, align 4
  %v2_236da = add i32 %v3_236d7, 4
  %v3_236da = inttoptr i32 %v2_236da to i32*
  store i32 %v2_236d5, i32* %v3_236da, align 4
  %v0_236dd = load i32, i32* @ebp, align 4
  %v1_236dd = add i32 %v0_236dd, -60
  %v2_236dd = inttoptr i32 %v1_236dd to i32*
  %v3_236dd = load i32, i32* %v2_236dd, align 4
  %v1_236e3 = call i32 @unknown_3ea6e(i32 %v3_236dd)
  store i32 %v1_236e3, i32* %ebx.global-to-local, align 4
  %v0_236ea = load i32, i32* @ebp, align 4
  %v1_236ea = add i32 %v0_236ea, -60
  %v2_236ea = inttoptr i32 %v1_236ea to i32*
  %v3_236ea = load i32, i32* %v2_236ea, align 4
  %v1_236ed = add i32 %v3_236ea, 4
  %v2_236ed = inttoptr i32 %v1_236ed to i32*
  %v3_236ed = load i32, i32* %v2_236ed, align 4
  %v1_236f0 = add i32 %v0_236ea, -64
  %v1_236f6 = call i32 @unknown_3f8de(i32 %v1_236f0)
  %v1_236fb = inttoptr i32 %v1_236f6 to i32*
  %v2_236fb = load i32, i32* %v1_236fb, align 4
  %v0_236fd = load i32, i32* %ebx.global-to-local, align 4
  %v0_23705 = load i32, i32* @ebp, align 4
  %v1_23705 = add i32 %v0_23705, -24
  %v2_23705 = inttoptr i32 %v1_23705 to i32*
  %v3_23705 = load i32, i32* %v2_23705, align 4
  %v4_2370f = call i32 @unknown_461b0(i32 %v2_236fb, i32 %v3_23705, i32 %v3_236ed, i32 %v0_236fd)
  %v0_23714 = load i32, i32* @ebp, align 4
  %v1_23714 = add i32 %v0_23714, -60
  %v2_23714 = inttoptr i32 %v1_23714 to i32*
  %v3_23714 = load i32, i32* %v2_23714, align 4
  %v1_23717 = add i32 %v3_23714, 4
  %v2_23717 = inttoptr i32 %v1_23717 to i32*
  %v3_23717 = load i32, i32* %v2_23717, align 4
  %v2_2371c = add i32 %v0_23714, -28
  %v3_2371c = inttoptr i32 %v2_2371c to i32*
  %v4_2371c = load i32, i32* %v3_2371c, align 4
  %v5_2371c = add i32 %v4_2371c, %v3_23717
  %v3_2371f = load i32, i32* %v2_23714, align 4
  %v2_23722 = add i32 %v3_2371f, 4
  %v3_23722 = inttoptr i32 %v2_23722 to i32*
  store i32 %v5_2371c, i32* %v3_23722, align 4
  %v0_23725 = load i32, i32* @ebp, align 4
  %v1_23725 = add i32 %v0_23725, -44
  %v2_23725 = inttoptr i32 %v1_23725 to i32*
  %v3_23725 = load i32, i32* %v2_23725, align 4
  %v1_23728 = add i32 %v0_23725, -40
  %v1_2372b = add i32 %v0_23725, -64
  %v2_2372b = inttoptr i32 %v1_2372b to i32*
  %v3_2372b = load i32, i32* %v2_2372b, align 4
  %v1_23736 = add i32 %v0_23725, -68
  %v2_23736 = inttoptr i32 %v1_23736 to i32*
  %v3_23736 = load i32, i32* %v2_23736, align 4
  %v4_23740 = call i32 @unknown_4d16d(i32 %v1_23728, i32 %v3_23736, i32 %v3_23725, i32 %v3_2372b)
  store i32 %v4_23740, i32* @eax, align 4
  %v1_23748 = call i32 @function_238ef(i32 %v1_23728)
  ret i32 %v1_23748

; uselistorder directives
  uselistorder i32 %v1_23728, { 1, 0 }
  uselistorder i32 %v0_23725, { 1, 0, 2, 3 }
  uselistorder i32 %v0_236c3, { 1, 0, 2 }
}

define i32 @function_2374d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2374d:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_23755 = load i32, i32* @ebp, align 4
  %v1_23755 = add i32 %v0_23755, -32
  %v2_23755 = inttoptr i32 %v1_23755 to i32*
  %v3_23755 = load i32, i32* %v2_23755, align 4
  %v1_2375c = add i32 %v0_23755, -60
  %v2_2375c = inttoptr i32 %v1_2375c to i32*
  %v3_2375c = load i32, i32* %v2_2375c, align 4
  %v4_23762 = call i32 @unknown_460de(i32 %v3_2375c, i32 %v3_23755, i32 ptrtoint ([24 x i8]* @global_var_c603.2285 to i32))
  %v1_23767 = load i32, i32* @ebp, align 4
  %v2_23767 = add i32 %v1_23767, -20
  %v3_23767 = inttoptr i32 %v2_23767 to i32*
  store i32 %v4_23762, i32* %v3_23767, align 4
  %v0_2376a = load i32, i32* @ebp, align 4
  %v1_2376a = add i32 %v0_2376a, -60
  %v2_2376a = inttoptr i32 %v1_2376a to i32*
  %v3_2376a = load i32, i32* %v2_2376a, align 4
  %v1_2376d = add i32 %v0_2376a, -20
  %v2_2376d = inttoptr i32 %v1_2376d to i32*
  %v3_2376d = load i32, i32* %v2_2376d, align 4
  %v2_23777 = call i32 @unknown_4548c(i32 %v3_2376a, i32 %v3_2376d)
  %v1_2377c = load i32, i32* @ebp, align 4
  %v2_2377c = add i32 %v1_2377c, -16
  %v3_2377c = inttoptr i32 %v2_2377c to i32*
  store i32 %v2_23777, i32* %v3_2377c, align 4
  %v0_2377f = load i32, i32* @ebp, align 4
  %v1_2377f = add i32 %v0_2377f, -16
  %v2_2377f = inttoptr i32 %v1_2377f to i32*
  %v3_2377f = load i32, i32* %v2_2377f, align 4
  %v2_23782 = add i32 %v0_2377f, -36
  %v3_23782 = inttoptr i32 %v2_23782 to i32*
  store i32 %v3_2377f, i32* %v3_23782, align 4
  %v0_23785 = load i32, i32* @ebp, align 4
  %v1_23785 = add i32 %v0_23785, -60
  %v2_23785 = inttoptr i32 %v1_23785 to i32*
  %v3_23785 = load i32, i32* %v2_23785, align 4
  %v1_2378b = call i32 @unknown_3ea6e(i32 %v3_23785)
  store i32 %v1_2378b, i32* %ebx.global-to-local, align 4
  %v0_23792 = load i32, i32* @ebp, align 4
  %v1_23792 = add i32 %v0_23792, -64
  %v1_23798 = call i32 @unknown_3f8de(i32 %v1_23792)
  %v1_2379d = inttoptr i32 %v1_23798 to i32*
  %v2_2379d = load i32, i32* %v1_2379d, align 4
  %v0_2379f = load i32, i32* @ebp, align 4
  %v1_2379f = add i32 %v0_2379f, -60
  %v2_2379f = inttoptr i32 %v1_2379f to i32*
  %v3_2379f = load i32, i32* %v2_2379f, align 4
  %v1_237a2 = inttoptr i32 %v3_2379f to i32*
  %v2_237a2 = load i32, i32* %v1_237a2, align 4
  %v0_237a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_237a8 = add i32 %v0_2379f, -16
  %v2_237a8 = inttoptr i32 %v1_237a8 to i32*
  %v3_237a8 = load i32, i32* %v2_237a8, align 4
  %v5_237b6 = call i32 @unknown_461b0(i32 %v2_237a2, i32 %v2_2379d, i32 %v3_237a8, i32 %v0_237a4)
  %v1_237bb = load i32, i32* @ebp, align 4
  %v2_237bb = add i32 %v1_237bb, -36
  %v3_237bb = inttoptr i32 %v2_237bb to i32*
  store i32 %v5_237b6, i32* %v3_237bb, align 4
  %v0_237be = load i32, i32* @ebp, align 4
  %v1_237be = add i32 %v0_237be, -60
  %v2_237be = inttoptr i32 %v1_237be to i32*
  %v3_237be = load i32, i32* %v2_237be, align 4
  %v1_237c4 = call i32 @unknown_3ea6e(i32 %v3_237be)
  %v0_237cd = load i32, i32* @ebp, align 4
  %v1_237d4 = add i32 %v0_237cd, -72
  %v2_237d4 = inttoptr i32 %v1_237d4 to i32*
  %v3_237d4 = load i32, i32* %v2_237d4, align 4
  %v1_237db = add i32 %v0_237cd, -68
  %v2_237db = inttoptr i32 %v1_237db to i32*
  %v3_237db = load i32, i32* %v2_237db, align 4
  %v2_237e1 = call i32 @unknown_4cf73(i32 %v3_237db, i32 %v3_237d4)
  %v1_237e6 = load i32, i32* @ebp, align 4
  %v2_237e6 = add i32 %v1_237e6, -36
  %v3_237e6 = inttoptr i32 %v2_237e6 to i32*
  store i32 %v2_237e1, i32* %v3_237e6, align 4
  %v0_237e9 = load i32, i32* @ebp, align 4
  %v1_237e9 = add i32 %v0_237e9, -60
  %v2_237e9 = inttoptr i32 %v1_237e9 to i32*
  %v3_237e9 = load i32, i32* %v2_237e9, align 4
  %v1_237ef = call i32 @unknown_3ea6e(i32 %v3_237e9)
  store i32 %v1_237ef, i32* %ebx.global-to-local, align 4
  %v0_237f6 = load i32, i32* @ebp, align 4
  %v1_237f6 = add i32 %v0_237f6, -60
  %v2_237f6 = inttoptr i32 %v1_237f6 to i32*
  %v3_237f6 = load i32, i32* %v2_237f6, align 4
  %v1_237f9 = add i32 %v3_237f6, 4
  %v2_237f9 = inttoptr i32 %v1_237f9 to i32*
  %v3_237f9 = load i32, i32* %v2_237f9, align 4
  store i32 %v3_237f9, i32* %esi.global-to-local, align 4
  %v1_237fc = add i32 %v0_237f6, -64
  %v1_23802 = call i32 @unknown_3f8de(i32 %v1_237fc)
  %v1_23807 = inttoptr i32 %v1_23802 to i32*
  %v2_23807 = load i32, i32* %v1_23807, align 4
  %v0_23809 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2380d = load i32, i32* @ebp, align 4
  %v1_2380d = add i32 %v0_2380d, -36
  %v2_2380d = inttoptr i32 %v1_2380d to i32*
  %v3_2380d = load i32, i32* %v2_2380d, align 4
  %v0_23814 = load i32, i32* %esi.global-to-local, align 4
  %v5_2381b = call i32 @unknown_461b0(i32 %v2_23807, i32 %v0_23814, i32 %v3_2380d, i32 %v0_23809)
  %v1_23820 = load i32, i32* @ebp, align 4
  %v2_23820 = add i32 %v1_23820, -36
  %v3_23820 = inttoptr i32 %v2_23820 to i32*
  store i32 %v5_2381b, i32* %v3_23820, align 4
  %v0_23823 = load i32, i32* @ebp, align 4
  %v1_23823 = add i32 %v0_23823, -60
  %v2_23823 = inttoptr i32 %v1_23823 to i32*
  %v3_23823 = load i32, i32* %v2_23823, align 4
  %v1_23829 = call i32 @unknown_3ea6e(i32 %v3_23823)
  %v0_2382e = load i32, i32* @ebp, align 4
  %v1_2382e = add i32 %v0_2382e, -60
  %v2_2382e = inttoptr i32 %v1_2382e to i32*
  %v3_2382e = load i32, i32* %v2_2382e, align 4
  %v1_23831 = add i32 %v3_2382e, 4
  %v2_23831 = inttoptr i32 %v1_23831 to i32*
  %v3_23831 = load i32, i32* %v2_23831, align 4
  %v1_23837 = inttoptr i32 %v3_2382e to i32*
  %v2_23837 = load i32, i32* %v1_23837, align 4
  %v4_23844 = call i32 @unknown_3ea9b(i32 %v2_23837, i32 %v3_23831, i32 %v1_23829)
  %v0_23849 = load i32, i32* @ebp, align 4
  %v1_23849 = add i32 %v0_23849, -60
  %v2_23849 = inttoptr i32 %v1_23849 to i32*
  %v3_23849 = load i32, i32* %v2_23849, align 4
  %v1_2384c = add i32 %v3_23849, 8
  %v2_2384c = inttoptr i32 %v1_2384c to i32*
  %v3_2384c = load i32, i32* %v2_2384c, align 4
  %v1_23854 = inttoptr i32 %v3_23849 to i32*
  %v2_23854 = load i32, i32* %v1_23854, align 4
  %v2_23858 = sub i32 %v3_2384c, %v2_23854
  %v3_2385e = load i32, i32* %v2_23849, align 4
  %v1_23861 = inttoptr i32 %v3_2385e to i32*
  %v2_23861 = load i32, i32* %v1_23861, align 4
  %v4_23871 = call i32 @unknown_3ed36(i32 %v3_2385e, i32 %v2_23861, i32 %v2_23858)
  %v0_23876 = load i32, i32* @ebp, align 4
  %v1_23876 = add i32 %v0_23876, -60
  %v2_23876 = inttoptr i32 %v1_23876 to i32*
  %v3_23876 = load i32, i32* %v2_23876, align 4
  %v1_23879 = add i32 %v0_23876, -16
  %v2_23879 = inttoptr i32 %v1_23879 to i32*
  %v3_23879 = load i32, i32* %v2_23879, align 4
  %v2_2387c = inttoptr i32 %v3_23876 to i32*
  store i32 %v3_23879, i32* %v2_2387c, align 4
  %v0_2387e = load i32, i32* @ebp, align 4
  %v1_2387e = add i32 %v0_2387e, -60
  %v2_2387e = inttoptr i32 %v1_2387e to i32*
  %v3_2387e = load i32, i32* %v2_2387e, align 4
  ret i32 %v3_2387e

; uselistorder directives
  uselistorder i32 %v0_237cd, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4cf73, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_461b0, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_3f8de, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_3ea6e, { 6, 5, 4, 3, 0, 2, 1 }
}

define i32 @function_23885(i32 %arg1) local_unnamed_addr {
dec_label_pc_23885:
  %stack_var_-4 = alloca i32, align 4
  %v0_23885 = load i32, i32* @eax, align 4
  store i32 %v0_23885, i32* %stack_var_-4, align 4
  %v2_23886 = add i32 %v0_23885, zext (i8 ptrtoint (i8* @global_var_8b.2199 to i8) to i32)
  %v16_23886 = urem i32 %v2_23886, 256
  %v18_23886 = and i32 %v0_23885, -256
  %v19_23886 = or i32 %v16_23886, %v18_23886
  %v0_23888 = load i32, i32* @ebp, align 4
  %v1_23888 = add i32 %v0_23888, 1
  store i32 %v1_23888, i32* @ebp, align 4
  %v1_2388a = add i32 %v0_23888, -15
  %v2_2388a = inttoptr i32 %v1_2388a to i32*
  %v3_2388a = load i32, i32* %v2_2388a, align 4
  %v2_2388d = add i32 %v3_2388a, %v19_23886
  %v1_2388f = add i32 %v0_23888, -59
  %v2_2388f = inttoptr i32 %v1_2388f to i32*
  %v3_2388f = load i32, i32* %v2_2388f, align 4
  store i32 %v3_2388f, i32* @eax, align 4
  %v2_23892 = add i32 %v3_2388f, 8
  %v3_23892 = inttoptr i32 %v2_23892 to i32*
  store i32 %v2_2388d, i32* %v3_23892, align 4
  %v0_23895 = load i32, i32* %stack_var_-4, align 4
  %v1_23895 = call i32 @function_238ef(i32 %v0_23895)
  ret i32 %v1_23895

; uselistorder directives
  uselistorder i32 %v0_23885, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_238ef, { 1, 0, 3, 2 }
}

define i32 @function_23898() local_unnamed_addr {
dec_label_pc_23898:
  %eax.global-to-local = alloca i32, align 4
  %v0_23898 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_23898
}

define i32 @function_238cb(i16 %arg1) local_unnamed_addr {
dec_label_pc_238cb:
  %eax.global-to-local = alloca i32, align 4
  %v0_238cb = load i32, i32* %eax.global-to-local, align 4
  %v11_238cb = and i32 %v0_238cb, -24
  store i32 %v11_238cb, i32* %eax.global-to-local, align 4
  ret i32 %v11_238cb

; uselistorder directives
  uselistorder i32 %v11_238cb, { 1, 0 }
}

define i32 @function_238ef(i32 %arg1) local_unnamed_addr {
dec_label_pc_238ef:
  %v0_238ef = load i32, i32* @ebp, align 4
  %v1_238ef = add i32 %v0_238ef, -12
  %v2_238ef = inttoptr i32 %v1_238ef to i32*
  %v3_238ef = load i32, i32* %v2_238ef, align 4
  %v1_238f2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_238f2 = icmp eq i32 %v1_238f2, %v3_238ef
  br i1 %v3_238f2, label %bb, label %dec_label_pc_238ef.dec_label_pc_238fb_crit_edge

dec_label_pc_238ef.dec_label_pc_238fb_crit_edge:  ; preds = %dec_label_pc_238ef
  %v2_238f9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_238fb

bb:                                               ; preds = %dec_label_pc_238ef
  %v1_238f9 = call i32 @function_23900()
  br label %dec_label_pc_238fb

dec_label_pc_238fb:                               ; preds = %dec_label_pc_238ef.dec_label_pc_238fb_crit_edge, %bb
  %v2_238f9 = phi i32 [ %v2_238f9.pre, %dec_label_pc_238ef.dec_label_pc_238fb_crit_edge ], [ %v1_238f9, %bb ]
  ret i32 %v2_238f9

; uselistorder directives
  uselistorder label %dec_label_pc_238fb, { 1, 0 }
}

define i32 @function_23900() local_unnamed_addr {
dec_label_pc_23900:
  %v0_23900 = load i32, i32* @ebp, align 4
  %v1_23905 = inttoptr i32 %v0_23900 to i32*
  %v2_23905 = load i32, i32* %v1_23905, align 4
  store i32 %v2_23905, i32* @ebp, align 4
  %v0_23906 = load i32, i32* @eax, align 4
  ret i32 %v0_23906
}

define i32 @_ZNSt6vectorIhSaIhEE13_M_assign_auxIN9__gnu_cxx17__normal_iteratorIPKhS1_EEEEvT_S8_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_23908:
  %v2_2393f = call i32 @unknown_4d287(i32 %arg2, i32 %arg3)
  %v1_2394d = call i32 @unknown_3f010(i32 %arg1)
  ret i32 %v1_2394d
}

define i32 @function_23952(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23952:
  %eax.global-to-local = alloca i32, align 4
  %v0_23952 = load i32, i32* @eax, align 4
  %v1_23952 = load i32, i32* @ebp, align 4
  %v2_23952 = add i32 %v1_23952, -20
  %v3_23952 = inttoptr i32 %v2_23952 to i32*
  %v4_23952 = load i32, i32* %v3_23952, align 4
  %v10_23952 = icmp ult i32 %v0_23952, %v4_23952
  %v1_23955 = zext i1 %v10_23952 to i32
  %v3_23955 = and i32 %v0_23952, -256
  %v4_23955 = or i32 %v1_23955, %v3_23955
  store i32 %v4_23955, i32* %eax.global-to-local, align 4
  %v5_23958 = icmp eq i1 %v10_23952, false
  br i1 %v5_23958, label %dec_label_pc_239ff, label %dec_label_pc_23960

dec_label_pc_23960:                               ; preds = %dec_label_pc_23952
  %v1_23960 = add i32 %v1_23952, -36
  %v2_23960 = inttoptr i32 %v1_23960 to i32*
  %v3_23960 = load i32, i32* %v2_23960, align 4
  store i32 %v3_23960, i32* %eax.global-to-local, align 4
  %v1_23967 = add i32 %v1_23952, -32
  %v2_23967 = inttoptr i32 %v1_23967 to i32*
  %v3_23967 = load i32, i32* %v2_23967, align 4
  store i32 %v3_23967, i32* %eax.global-to-local, align 4
  %v3_2396e = load i32, i32* %v3_23952, align 4
  store i32 %v3_2396e, i32* %eax.global-to-local, align 4
  %v1_23975 = add i32 %v1_23952, -28
  %v2_23975 = inttoptr i32 %v1_23975 to i32*
  %v3_23975 = load i32, i32* %v2_23975, align 4
  store i32 %v3_23975, i32* %eax.global-to-local, align 4
  %v4_2397b = call i32 @unknown_3f04e(i32 %v3_23975, i32 %v3_2396e, i32 %v3_23967, i32 %v3_23960)
  store i32 %v4_2397b, i32* %eax.global-to-local, align 4
  %v1_23980 = load i32, i32* @ebp, align 4
  %v2_23980 = add i32 %v1_23980, -16
  %v3_23980 = inttoptr i32 %v2_23980 to i32*
  store i32 %v4_2397b, i32* %v3_23980, align 4
  %v0_23983 = load i32, i32* @ebp, align 4
  %v1_23983 = add i32 %v0_23983, -28
  %v2_23983 = inttoptr i32 %v1_23983 to i32*
  %v3_23983 = load i32, i32* %v2_23983, align 4
  store i32 %v3_23983, i32* %eax.global-to-local, align 4
  %v1_23989 = call i32 @unknown_3ee40(i32 %v3_23983)
  store i32 %v1_23989, i32* %eax.global-to-local, align 4
  %v0_2398e = load i32, i32* @ebp, align 4
  %v1_2398e = add i32 %v0_2398e, -28
  %v2_2398e = inttoptr i32 %v1_2398e to i32*
  %v3_2398e = load i32, i32* %v2_2398e, align 4
  %v1_23991 = add i32 %v3_2398e, 4
  %v2_23991 = inttoptr i32 %v1_23991 to i32*
  %v3_23991 = load i32, i32* %v2_23991, align 4
  %v1_23997 = inttoptr i32 %v3_2398e to i32*
  %v2_23997 = load i32, i32* %v1_23997, align 4
  %v3_239a4 = call i32 @unknown_3ee6d(i32 %v2_23997, i32 %v3_23991, i32 %v1_23989)
  store i32 %v3_239a4, i32* %eax.global-to-local, align 4
  %v0_239a9 = load i32, i32* @ebp, align 4
  %v1_239a9 = add i32 %v0_239a9, -28
  %v2_239a9 = inttoptr i32 %v1_239a9 to i32*
  %v3_239a9 = load i32, i32* %v2_239a9, align 4
  store i32 %v3_239a9, i32* %eax.global-to-local, align 4
  %v1_239ac = add i32 %v3_239a9, 8
  %v2_239ac = inttoptr i32 %v1_239ac to i32*
  %v3_239ac = load i32, i32* %v2_239ac, align 4
  store i32 %v3_239ac, i32* %eax.global-to-local, align 4
  %v3_239b1 = load i32, i32* %v2_239a9, align 4
  store i32 %v3_239b1, i32* %eax.global-to-local, align 4
  %v1_239b4 = inttoptr i32 %v3_239b1 to i32*
  %v2_239b4 = load i32, i32* %v1_239b4, align 4
  %v2_239b8 = sub i32 %v3_239ac, %v2_239b4
  store i32 %v2_239b8, i32* %eax.global-to-local, align 4
  %v3_239be = load i32, i32* %v2_239a9, align 4
  store i32 %v3_239be, i32* %eax.global-to-local, align 4
  %v1_239c1 = inttoptr i32 %v3_239be to i32*
  %v2_239c1 = load i32, i32* %v1_239c1, align 4
  %v3_239c3 = load i32, i32* %v2_239a9, align 4
  store i32 %v3_239c3, i32* %eax.global-to-local, align 4
  %v3_239d1 = call i32 @unknown_3f108(i32 %v3_239c3, i32 %v2_239c1, i32 %v2_239b8)
  store i32 %v3_239d1, i32* %eax.global-to-local, align 4
  %v0_239d6 = load i32, i32* @ebp, align 4
  %v1_239d6 = add i32 %v0_239d6, -28
  %v2_239d6 = inttoptr i32 %v1_239d6 to i32*
  %v3_239d6 = load i32, i32* %v2_239d6, align 4
  store i32 %v3_239d6, i32* %eax.global-to-local, align 4
  %v1_239d9 = add i32 %v0_239d6, -16
  %v2_239d9 = inttoptr i32 %v1_239d9 to i32*
  %v3_239d9 = load i32, i32* %v2_239d9, align 4
  %v2_239dc = inttoptr i32 %v3_239d6 to i32*
  store i32 %v3_239d9, i32* %v2_239dc, align 4
  %v0_239de = load i32, i32* @ebp, align 4
  %v1_239de = add i32 %v0_239de, -28
  %v2_239de = inttoptr i32 %v1_239de to i32*
  %v3_239de = load i32, i32* %v2_239de, align 4
  store i32 %v3_239de, i32* %eax.global-to-local, align 4
  %v1_239e1 = inttoptr i32 %v3_239de to i32*
  %v2_239e1 = load i32, i32* %v1_239e1, align 4
  store i32 %v2_239e1, i32* %eax.global-to-local, align 4
  %v2_239e5 = add i32 %v0_239de, -20
  %v3_239e5 = inttoptr i32 %v2_239e5 to i32*
  %v4_239e5 = load i32, i32* %v3_239e5, align 4
  %v5_239e5 = add i32 %v4_239e5, %v2_239e1
  %v3_239e8 = load i32, i32* %v2_239de, align 4
  store i32 %v3_239e8, i32* %eax.global-to-local, align 4
  %v2_239eb = add i32 %v3_239e8, 4
  %v3_239eb = inttoptr i32 %v2_239eb to i32*
  store i32 %v5_239e5, i32* %v3_239eb, align 4
  %v0_239ee = load i32, i32* @ebp, align 4
  %v1_239ee = add i32 %v0_239ee, -28
  %v2_239ee = inttoptr i32 %v1_239ee to i32*
  %v3_239ee = load i32, i32* %v2_239ee, align 4
  store i32 %v3_239ee, i32* %eax.global-to-local, align 4
  %v1_239f1 = add i32 %v3_239ee, 4
  %v2_239f1 = inttoptr i32 %v1_239f1 to i32*
  %v3_239f1 = load i32, i32* %v2_239f1, align 4
  %v3_239f4 = load i32, i32* %v2_239ee, align 4
  store i32 %v3_239f4, i32* %eax.global-to-local, align 4
  %v2_239f7 = add i32 %v3_239f4, 8
  %v3_239f7 = inttoptr i32 %v2_239f7 to i32*
  store i32 %v3_239f1, i32* %v3_239f7, align 4
  %v0_239fa = call i32 @function_23aae()
  store i32 %v0_239fa, i32* %eax.global-to-local, align 4
  ret i32 %v0_239fa

dec_label_pc_239ff:                               ; preds = %dec_label_pc_23952
  %v1_239ff = add i32 %v1_23952, -28
  %v2_239ff = inttoptr i32 %v1_239ff to i32*
  %v3_239ff = load i32, i32* %v2_239ff, align 4
  store i32 %v3_239ff, i32* @eax, align 4
  %v1_23a05 = call i32 @function_389c2(i32 %v3_239ff)
  store i32 %v1_23a05, i32* %eax.global-to-local, align 4
  %v1_23a0a = load i32, i32* @ebp, align 4
  %v2_23a0a = add i32 %v1_23a0a, -20
  %v3_23a0a = inttoptr i32 %v2_23a0a to i32*
  %v4_23a0a = load i32, i32* %v3_23a0a, align 4
  %v10_23a0a = icmp ult i32 %v1_23a05, %v4_23a0a
  %v1_23a0d = icmp eq i1 %v10_23a0a, false
  %v2_23a0d = zext i1 %v1_23a0d to i32
  %v4_23a0d = and i32 %v1_23a05, -256
  %v5_23a0d = or i32 %v2_23a0d, %v4_23a0d
  store i32 %v5_23a0d, i32* %eax.global-to-local, align 4
  %v5_23a10 = icmp eq i1 %v1_23a0d, false
  br i1 %v5_23a10, label %dec_label_pc_23a40, label %dec_label_pc_23a14

dec_label_pc_23a14:                               ; preds = %dec_label_pc_239ff
  %v1_23a14 = add i32 %v1_23a0a, -28
  %v2_23a14 = inttoptr i32 %v1_23a14 to i32*
  %v3_23a14 = load i32, i32* %v2_23a14, align 4
  store i32 %v3_23a14, i32* %eax.global-to-local, align 4
  %v1_23a17 = inttoptr i32 %v3_23a14 to i32*
  %v2_23a17 = load i32, i32* %v1_23a17, align 4
  store i32 %v2_23a17, i32* %eax.global-to-local, align 4
  %v1_23a1d = add i32 %v1_23a0a, -36
  %v2_23a1d = inttoptr i32 %v1_23a1d to i32*
  %v3_23a1d = load i32, i32* %v2_23a1d, align 4
  store i32 %v3_23a1d, i32* %eax.global-to-local, align 4
  %v1_23a24 = add i32 %v1_23a0a, -32
  %v2_23a24 = inttoptr i32 %v1_23a24 to i32*
  %v3_23a24 = load i32, i32* %v2_23a24, align 4
  store i32 %v3_23a24, i32* %eax.global-to-local, align 4
  %v3_23a2a = call i32 @unknown_4d620(i32 %v3_23a24, i32 %v3_23a1d, i32 %v2_23a17)
  store i32 %v3_23a2a, i32* %eax.global-to-local, align 4
  %v0_23a33 = load i32, i32* @ebp, align 4
  %v1_23a33 = add i32 %v0_23a33, -28
  %v2_23a33 = inttoptr i32 %v1_23a33 to i32*
  %v3_23a33 = load i32, i32* %v2_23a33, align 4
  store i32 %v3_23a33, i32* %eax.global-to-local, align 4
  %v2_23a39 = call i32 @unknown_3fc52(i32 %v3_23a33, i32 %v3_23a2a)
  store i32 %v2_23a39, i32* %eax.global-to-local, align 4
  %v0_23a3e = call i32 @function_23aae()
  store i32 %v0_23a3e, i32* %eax.global-to-local, align 4
  ret i32 %v0_23a3e

dec_label_pc_23a40:                               ; preds = %dec_label_pc_239ff
  %v1_23a40 = add i32 %v1_23a0a, -32
  %v2_23a40 = inttoptr i32 %v1_23a40 to i32*
  %v3_23a40 = load i32, i32* %v2_23a40, align 4
  store i32 %v3_23a40, i32* %eax.global-to-local, align 4
  %v2_23a43 = add i32 %v1_23a0a, -24
  %v3_23a43 = inttoptr i32 %v2_23a43 to i32*
  store i32 %v3_23a40, i32* %v3_23a43, align 4
  %v4_23a43 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_23a43

; uselistorder directives
  uselistorder i32 %v1_23a0a, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v10_23952, { 1, 0 }
  uselistorder i32 %v1_23952, { 1, 0, 2, 3, 4 }
  uselistorder i32 ()* @function_23aae, { 1, 0 }
}

define i32 @function_23a48(i32 %arg1) local_unnamed_addr {
dec_label_pc_23a48:
  %eax.global-to-local = alloca i32, align 4
  %v0_23a4a = load i32, i32* @eax, align 4
  %v2_23a4a = add i32 %v0_23a4a, 36
  %v16_23a4a = and i32 %v2_23a4a, 255
  %v18_23a4a = and i32 %v0_23a4a, -256
  %v19_23a4a = or i32 %v16_23a4a, %v18_23a4a
  store i32 %v19_23a4a, i32* @eax, align 4
  %v1_23a4c = call i32 @function_389c2(i32 ptrtoint (i32* @9 to i32))
  %v0_23a55 = load i32, i32* @ebp, align 4
  %v1_23a55 = add i32 %v0_23a55, -24
  store i32 %v1_23a55, i32* %eax.global-to-local, align 4
  %v2_23a5b = call i32 @unknown_4d39a(i32 %v1_23a55, i32 %v1_23a4c)
  store i32 %v2_23a5b, i32* %eax.global-to-local, align 4
  %v0_23a60 = load i32, i32* @ebp, align 4
  %v1_23a60 = add i32 %v0_23a60, -28
  %v2_23a60 = inttoptr i32 %v1_23a60 to i32*
  %v3_23a60 = load i32, i32* %v2_23a60, align 4
  store i32 %v3_23a60, i32* %eax.global-to-local, align 4
  %v1_23a63 = inttoptr i32 %v3_23a60 to i32*
  %v2_23a63 = load i32, i32* %v1_23a63, align 4
  store i32 %v2_23a63, i32* %eax.global-to-local, align 4
  %v1_23a69 = add i32 %v0_23a60, -24
  %v2_23a69 = inttoptr i32 %v1_23a69 to i32*
  %v3_23a69 = load i32, i32* %v2_23a69, align 4
  store i32 %v3_23a69, i32* %eax.global-to-local, align 4
  %v1_23a70 = add i32 %v0_23a60, -32
  %v2_23a70 = inttoptr i32 %v1_23a70 to i32*
  %v3_23a70 = load i32, i32* %v2_23a70, align 4
  store i32 %v3_23a70, i32* %eax.global-to-local, align 4
  %v3_23a76 = call i32 @unknown_4d620(i32 %v3_23a70, i32 %v3_23a69, i32 %v2_23a63)
  store i32 %v3_23a76, i32* %eax.global-to-local, align 4
  %v0_23a7b = load i32, i32* @ebp, align 4
  %v1_23a7b = add i32 %v0_23a7b, -28
  %v2_23a7b = inttoptr i32 %v1_23a7b to i32*
  %v3_23a7b = load i32, i32* %v2_23a7b, align 4
  store i32 %v3_23a7b, i32* %eax.global-to-local, align 4
  %v1_23a81 = call i32 @unknown_3ee40(i32 %v3_23a7b)
  store i32 %v1_23a81, i32* %eax.global-to-local, align 4
  %v0_23a86 = load i32, i32* @ebp, align 4
  %v1_23a86 = add i32 %v0_23a86, -28
  %v2_23a86 = inttoptr i32 %v1_23a86 to i32*
  %v3_23a86 = load i32, i32* %v2_23a86, align 4
  %v1_23a89 = add i32 %v3_23a86, 4
  %v2_23a89 = inttoptr i32 %v1_23a89 to i32*
  %v3_23a89 = load i32, i32* %v2_23a89, align 4
  %v1_23a94 = add i32 %v0_23a86, -36
  %v2_23a94 = inttoptr i32 %v1_23a94 to i32*
  %v3_23a94 = load i32, i32* %v2_23a94, align 4
  store i32 %v3_23a94, i32* %eax.global-to-local, align 4
  %v1_23a9b = add i32 %v0_23a86, -24
  %v2_23a9b = inttoptr i32 %v1_23a9b to i32*
  %v3_23a9b = load i32, i32* %v2_23a9b, align 4
  store i32 %v3_23a9b, i32* %eax.global-to-local, align 4
  %v4_23aa1 = call i32 @unknown_3fb1b(i32 %v3_23a9b, i32 %v3_23a94, i32 %v3_23a89, i32 %v1_23a81)
  store i32 %v4_23aa1, i32* %eax.global-to-local, align 4
  %v0_23aa8 = load i32, i32* @ebp, align 4
  %v1_23aa8 = add i32 %v0_23aa8, -28
  %v2_23aa8 = inttoptr i32 %v1_23aa8 to i32*
  %v3_23aa8 = load i32, i32* %v2_23aa8, align 4
  store i32 %v3_23aa8, i32* %eax.global-to-local, align 4
  %v2_23aab = add i32 %v3_23aa8, 4
  %v3_23aab = inttoptr i32 %v2_23aab to i32*
  store i32 %v4_23aa1, i32* %v3_23aab, align 4
  %v4_23aab = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_23aab

; uselistorder directives
  uselistorder i32 %v0_23a86, { 1, 0, 2 }
  uselistorder i32 %v0_23a60, { 1, 0, 2 }
  uselistorder i32 %v0_23a4a, { 1, 0 }
  uselistorder i32 (i32)* @unknown_3ee40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4d620, { 1, 0 }
  uselistorder i32 (i32)* @function_389c2, { 1, 0 }
}

define i32 @function_23aae() local_unnamed_addr {
dec_label_pc_23aae:
  %v0_23aae = load i32, i32* @ebp, align 4
  %v1_23aae = add i32 %v0_23aae, -12
  %v2_23aae = inttoptr i32 %v1_23aae to i32*
  %v3_23aae = load i32, i32* %v2_23aae, align 4
  %v1_23ab1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_23ab1 = xor i32 %v1_23ab1, %v3_23aae
  %v3_23ab1 = icmp eq i32 %v2_23ab1, 0
  store i32 %v2_23ab1, i32* @eax, align 4
  br i1 %v3_23ab1, label %bb, label %dec_label_pc_23aba

bb:                                               ; preds = %dec_label_pc_23aae
  %v1_23ab8 = call i32 @function_23abf()
  br label %dec_label_pc_23aba

dec_label_pc_23aba:                               ; preds = %bb, %dec_label_pc_23aae
  %v2_23ab8 = phi i32 [ %v1_23ab8, %bb ], [ %v2_23ab1, %dec_label_pc_23aae ]
  ret i32 %v2_23ab8
}

define i32 @function_23abf() local_unnamed_addr {
dec_label_pc_23abf:
  %v0_23ac0 = load i32, i32* @eax, align 4
  ret i32 %v0_23ac0
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ac1:
  %v1_23ade = call i32 @unknown_4d852(i32 %arg1)
  store i32 %v1_23ade, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23aef

bb:                                               ; preds = %dec_label_pc_23ac1
  %v1_23aed = call i32 @function_23af4()
  br label %dec_label_pc_23aef

dec_label_pc_23aef:                               ; preds = %bb, %dec_label_pc_23ac1
  %v3_23aed = phi i32 [ %v1_23aed, %bb ], [ %v1_23ade, %dec_label_pc_23ac1 ]
  ret i32 %v3_23aed
}

define i32 @function_23af4() local_unnamed_addr {
dec_label_pc_23af4:
  %v0_23af5 = load i32, i32* @eax, align 4
  ret i32 %v0_23af5
}

define i32 @_ZSt11__equal_auxIPKhS1_EbT_S2_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23af6:
  ret i32 %arg3
}

define i32 @function_23b0d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23b0d:
  %eax.global-to-local = alloca i32, align 4
  %v0_23b10 = load i32, i32* @eax, align 4
  %v1_23b10 = trunc i32 %v0_23b10 to i8
  %v2_23b10 = load i1, i1* @cf, align 1
  %v3_23b10 = zext i1 %v2_23b10 to i8
  %v4_23b10 = add i8 %v3_23b10, %v1_23b10
  %v22_23b10 = zext i8 %v4_23b10 to i32
  %v24_23b10 = and i32 %v0_23b10, -256
  %v25_23b10 = or i32 %v22_23b10, %v24_23b10
  store i32 %v25_23b10, i32* %eax.global-to-local, align 4
  %v1_23b12 = inttoptr i32 %v25_23b10 to i8*
  %v2_23b12 = load i8, i8* %v1_23b12, align 1
  %v5_23b12 = add i8 %v2_23b12, %v4_23b10
  store i8 %v5_23b12, i8* %v1_23b12, align 1
  %v0_23b14 = load i32, i32* %eax.global-to-local, align 4
  %v1_23b14 = load i32, i32* @ebp, align 4
  %v2_23b14 = add i32 %v1_23b14, -12
  %v3_23b14 = inttoptr i32 %v2_23b14 to i32*
  store i32 %v0_23b14, i32* %v3_23b14, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_23b19 = load i32, i32* @ebp, align 4
  %v1_23b19 = add i32 %v0_23b19, -13
  %v2_23b19 = inttoptr i32 %v1_23b19 to i8*
  store i8 1, i8* %v2_23b19, align 1
  %v0_23b1d = load i32, i32* @ebp, align 4
  %v1_23b1d = add i32 %v0_23b1d, -36
  %v2_23b1d = inttoptr i32 %v1_23b1d to i32*
  %v3_23b1d = load i32, i32* %v2_23b1d, align 4
  store i32 %v3_23b1d, i32* %eax.global-to-local, align 4
  %v1_23b24 = add i32 %v0_23b1d, -32
  %v2_23b24 = inttoptr i32 %v1_23b24 to i32*
  %v3_23b24 = load i32, i32* %v2_23b24, align 4
  store i32 %v3_23b24, i32* %eax.global-to-local, align 4
  %v1_23b2b = add i32 %v0_23b1d, -28
  %v2_23b2b = inttoptr i32 %v1_23b2b to i32*
  %v3_23b2b = load i32, i32* %v2_23b2b, align 4
  store i32 %v3_23b2b, i32* %eax.global-to-local, align 4
  %v3_23b31 = call i32 @unknown_4d8be(i32 %v3_23b2b, i32 %v3_23b24, i32 %v3_23b1d)
  store i32 %v3_23b31, i32* @eax, align 4
  %v0_23b36 = load i32, i32* @ebp, align 4
  %v1_23b36 = add i32 %v0_23b36, -12
  %v2_23b36 = inttoptr i32 %v1_23b36 to i32*
  %v3_23b36 = load i32, i32* %v2_23b36, align 4
  %v1_23b39 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_23b39 = icmp eq i32 %v1_23b39, %v3_23b36
  br i1 %v3_23b39, label %bb, label %dec_label_pc_23b42

bb:                                               ; preds = %dec_label_pc_23b0d
  %v1_23b40 = call i32 @function_23b47()
  store i32 %v1_23b40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_23b42

dec_label_pc_23b42:                               ; preds = %bb, %dec_label_pc_23b0d
  %v2_23b40 = phi i32 [ %v1_23b40, %bb ], [ %v3_23b31, %dec_label_pc_23b0d ]
  ret i32 %v2_23b40
}

define i32 @function_23b47() local_unnamed_addr {
dec_label_pc_23b47:
  %v0_23b48 = load i32, i32* @eax, align 4
  ret i32 %v0_23b48
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_23b4a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_23b67 = call i32 @unknown_4d970(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_23b78 = add i32 %tmp100, 4
  %v2_23b78 = inttoptr i32 %v1_23b78 to i32*
  store i32 0, i32* %v2_23b78, align 4
  %v1_23b82 = add i32 %tmp100, 8
  %v2_23b82 = inttoptr i32 %v1_23b82 to i32*
  store i32 0, i32* %v2_23b82, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23b95

bb:                                               ; preds = %dec_label_pc_23b4a
  %v1_23b93 = call i32 @function_23b9a()
  br label %dec_label_pc_23b95

dec_label_pc_23b95:                               ; preds = %bb, %dec_label_pc_23b4a
  %v2_23b93 = phi i32 [ %v1_23b93, %bb ], [ 0, %dec_label_pc_23b4a ]
  ret i32 %v2_23b93

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_23b9a() local_unnamed_addr {
dec_label_pc_23b9a:
  %v0_23b9b = load i32, i32* @eax, align 4
  ret i32 %v0_23b9b
}

define i32 @_ZNSaI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23b9c:
  %v1_23bb9 = call i32 @unknown_4d9f8(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23bca

bb:                                               ; preds = %dec_label_pc_23b9c
  %v1_23bc8 = call i32 @function_23bcf()
  br label %dec_label_pc_23bca

dec_label_pc_23bca:                               ; preds = %bb, %dec_label_pc_23b9c
  %v2_23bc8 = phi i32 [ %v1_23bc8, %bb ], [ 0, %dec_label_pc_23b9c ]
  ret i32 %v2_23bc8
}

define i32 @function_23bcf() local_unnamed_addr {
dec_label_pc_23bcf:
  %v0_23bd0 = load i32, i32* @eax, align 4
  ret i32 %v0_23bd0
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23bd2:
  %v10_23bf5 = icmp eq i32 %arg2, 0
  br i1 %v10_23bf5, label %dec_label_pc_23c14, label %dec_label_pc_23bfb

dec_label_pc_23bfb:                               ; preds = %dec_label_pc_23bd2
  %v3_23c0f = call i32 @unknown_4da58(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_23c14

dec_label_pc_23c14:                               ; preds = %dec_label_pc_23bfb, %dec_label_pc_23bd2
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23c20

bb:                                               ; preds = %dec_label_pc_23c14
  %v1_23c1e = call i32 @function_23c25()
  br label %dec_label_pc_23c20

dec_label_pc_23c20:                               ; preds = %bb, %dec_label_pc_23c14
  %v2_23c1e = phi i32 [ %v1_23c1e, %bb ], [ 0, %dec_label_pc_23c14 ]
  ret i32 %v2_23c1e
}

define i32 @function_23c25() local_unnamed_addr {
dec_label_pc_23c25:
  %v0_23c26 = load i32, i32* @eax, align 4
  ret i32 %v0_23c26
}

define i32 @_ZSt8_DestroyIP5CTxInEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23c27:
  %v2_23c51 = call i32 @unknown_4daee(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23c62

bb:                                               ; preds = %dec_label_pc_23c27
  %v1_23c60 = call i32 @function_23c67()
  br label %dec_label_pc_23c62

dec_label_pc_23c62:                               ; preds = %bb, %dec_label_pc_23c27
  %v2_23c60 = phi i32 [ %v1_23c60, %bb ], [ 0, %dec_label_pc_23c27 ]
  ret i32 %v2_23c60
}

define i32 @function_23c67() local_unnamed_addr {
dec_label_pc_23c67:
  %v0_23c68 = load i32, i32* @eax, align 4
  ret i32 %v0_23c68
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_23c6a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_23c87 = call i32 @unknown_3b3e6(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_23c98 = add i32 %tmp100, 4
  %v2_23c98 = inttoptr i32 %v1_23c98 to i32*
  store i32 0, i32* %v2_23c98, align 4
  %v1_23ca2 = add i32 %tmp100, 8
  %v2_23ca2 = inttoptr i32 %v1_23ca2 to i32*
  store i32 0, i32* %v2_23ca2, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23cb5

bb:                                               ; preds = %dec_label_pc_23c6a
  %v1_23cb3 = call i32 @function_23cba()
  br label %dec_label_pc_23cb5

dec_label_pc_23cb5:                               ; preds = %bb, %dec_label_pc_23c6a
  %v2_23cb3 = phi i32 [ %v1_23cb3, %bb ], [ 0, %dec_label_pc_23c6a ]
  ret i32 %v2_23cb3

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_23cba() local_unnamed_addr {
dec_label_pc_23cba:
  %v0_23cbb = load i32, i32* @eax, align 4
  ret i32 %v0_23cbb
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23cbc:
  %v10_23cdf = icmp eq i32 %arg2, 0
  br i1 %v10_23cdf, label %dec_label_pc_23cfe, label %dec_label_pc_23ce5

dec_label_pc_23ce5:                               ; preds = %dec_label_pc_23cbc
  %v3_23cf9 = call i32 @unknown_4dbda(i32 %arg1, i32 %arg2, i32 %arg3)
  br label %dec_label_pc_23cfe

dec_label_pc_23cfe:                               ; preds = %dec_label_pc_23ce5, %dec_label_pc_23cbc
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d0a

bb:                                               ; preds = %dec_label_pc_23cfe
  %v1_23d08 = call i32 @function_23d0f()
  br label %dec_label_pc_23d0a

dec_label_pc_23d0a:                               ; preds = %bb, %dec_label_pc_23cfe
  %v2_23d08 = phi i32 [ %v1_23d08, %bb ], [ 0, %dec_label_pc_23cfe ]
  ret i32 %v2_23d08
}

define i32 @function_23d0f() local_unnamed_addr {
dec_label_pc_23d0f:
  %v0_23d10 = load i32, i32* @eax, align 4
  ret i32 %v0_23d10
}

define i32 @_ZSt8_DestroyIP6CTxOutEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d11:
  %v2_23d3b = call i32 @unknown_4dc70(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d4c

bb:                                               ; preds = %dec_label_pc_23d11
  %v1_23d4a = call i32 @function_23d51()
  br label %dec_label_pc_23d4c

dec_label_pc_23d4c:                               ; preds = %bb, %dec_label_pc_23d11
  %v2_23d4a = phi i32 [ %v1_23d4a, %bb ], [ 0, %dec_label_pc_23d11 ]
  ret i32 %v2_23d4a
}

define i32 @function_23d51() local_unnamed_addr {
dec_label_pc_23d51:
  %v0_23d52 = load i32, i32* @eax, align 4
  ret i32 %v0_23d52
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d54:
  %v1_23d74 = inttoptr i32 %arg2 to i32*
  %v2_23d74 = load i32, i32* %v1_23d74, align 4
  store i32 %v2_23d74, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23d87

bb:                                               ; preds = %dec_label_pc_23d54
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_23d85 = call i32 @function_23d8c(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_23d87

dec_label_pc_23d87:                               ; preds = %bb, %dec_label_pc_23d54
  %v4_23d85 = phi i32 [ %v3_23d85, %bb ], [ 0, %dec_label_pc_23d54 ]
  ret i32 %v4_23d85

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23d8c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23d8c:
  %v0_23d8d = load i32, i32* @eax, align 4
  ret i32 %v0_23d8d
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23d8e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23db4

bb:                                               ; preds = %dec_label_pc_23d8e
  %v2_23db2 = call i32 @function_23db9(i32 %arg1)
  br label %dec_label_pc_23db4

dec_label_pc_23db4:                               ; preds = %bb, %dec_label_pc_23d8e
  %v3_23db2 = phi i32 [ %v2_23db2, %bb ], [ %arg1, %dec_label_pc_23d8e ]
  ret i32 %v3_23db2
}

define i32 @function_23db9(i32 %arg1) local_unnamed_addr {
dec_label_pc_23db9:
  %v0_23dba = load i32, i32* @eax, align 4
  ret i32 %v0_23dba
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23dbc:
  %v1_23ddc = inttoptr i32 %arg2 to i32*
  %v2_23ddc = load i32, i32* %v1_23ddc, align 4
  store i32 %v2_23ddc, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23def

bb:                                               ; preds = %dec_label_pc_23dbc
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_23ded = call i32 @function_23df4(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_23def

dec_label_pc_23def:                               ; preds = %bb, %dec_label_pc_23dbc
  %v4_23ded = phi i32 [ %v3_23ded, %bb ], [ 0, %dec_label_pc_23dbc ]
  ret i32 %v4_23ded

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23df4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23df4:
  %v0_23df5 = load i32, i32* @eax, align 4
  ret i32 %v0_23df5
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_23df6:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23e1c

bb:                                               ; preds = %dec_label_pc_23df6
  %v2_23e1a = call i32 @function_23e21(i32 %arg1)
  br label %dec_label_pc_23e1c

dec_label_pc_23e1c:                               ; preds = %bb, %dec_label_pc_23df6
  %v3_23e1a = phi i32 [ %v2_23e1a, %bb ], [ %arg1, %dec_label_pc_23df6 ]
  ret i32 %v3_23e1a
}

define i32 @function_23e21(i32 %arg1) local_unnamed_addr {
dec_label_pc_23e21:
  %v0_23e22 = load i32, i32* @eax, align 4
  ret i32 %v0_23e22
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e24:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_23e4e = call i32 @unknown_4deec(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_23e5f = add i32 %tmp103, 4
  %v2_23e5f = inttoptr i32 %v1_23e5f to i32*
  store i32 0, i32* %v2_23e5f, align 4
  %v1_23e69 = add i32 %tmp103, 8
  %v2_23e69 = inttoptr i32 %v1_23e69 to i32*
  store i32 0, i32* %v2_23e69, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23e7c

bb:                                               ; preds = %dec_label_pc_23e24
  %v1_23e7a = call i32 @function_23e81()
  br label %dec_label_pc_23e7c

dec_label_pc_23e7c:                               ; preds = %bb, %dec_label_pc_23e24
  %v2_23e7a = phi i32 [ %v1_23e7a, %bb ], [ 0, %dec_label_pc_23e24 ]
  ret i32 %v2_23e7a

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_23e81() local_unnamed_addr {
dec_label_pc_23e81:
  %v0_23e82 = load i32, i32* @eax, align 4
  ret i32 %v0_23e82
}

define i32 @_ZNSt12_Vector_baseI6CTxOutSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23e84:
  %v10_23ea1 = icmp eq i32 %arg2, 0
  br i1 %v10_23ea1, label %dec_label_pc_23ec8, label %dec_label_pc_23ea7

dec_label_pc_23ea7:                               ; preds = %dec_label_pc_23e84
  %v3_23ebc = call i32 @unknown_4df8e(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_23ec8

dec_label_pc_23ec8:                               ; preds = %dec_label_pc_23e84, %dec_label_pc_23ea7
  %storemerge = phi i32 [ %v3_23ebc, %dec_label_pc_23ea7 ], [ 0, %dec_label_pc_23e84 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23ed4

bb:                                               ; preds = %dec_label_pc_23ec8
  %v1_23ed2 = call i32 @function_23ed9()
  br label %dec_label_pc_23ed4

dec_label_pc_23ed4:                               ; preds = %bb, %dec_label_pc_23ec8
  %v2_23ed2 = phi i32 [ %v1_23ed2, %bb ], [ %storemerge, %dec_label_pc_23ec8 ]
  ret i32 %v2_23ed2

; uselistorder directives
  uselistorder label %dec_label_pc_23ec8, { 1, 0 }
}

define i32 @function_23ed9() local_unnamed_addr {
dec_label_pc_23ed9:
  %v0_23eda = load i32, i32* @eax, align 4
  ret i32 %v0_23eda
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23edb:
  %v3_23f12 = call i32 @unknown_4e04a(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_23f12, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23f23

bb:                                               ; preds = %dec_label_pc_23edb
  %v1_23f21 = call i32 @function_23f28()
  br label %dec_label_pc_23f23

dec_label_pc_23f23:                               ; preds = %bb, %dec_label_pc_23edb
  %v2_23f21 = phi i32 [ %v1_23f21, %bb ], [ %v3_23f12, %dec_label_pc_23edb ]
  ret i32 %v2_23f21
}

define i32 @function_23f28() local_unnamed_addr {
dec_label_pc_23f28:
  %v0_23f29 = load i32, i32* @eax, align 4
  ret i32 %v0_23f29
}

define i32 @_ZSt24__uninitialized_fill_n_aIP6CTxOutjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_23f2a:
  %v7_23f67 = call i32 @unknown_4e15a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23f78

bb:                                               ; preds = %dec_label_pc_23f2a
  %v1_23f76 = call i32 @function_23f7d()
  br label %dec_label_pc_23f78

dec_label_pc_23f78:                               ; preds = %bb, %dec_label_pc_23f2a
  %v2_23f76 = phi i32 [ %v1_23f76, %bb ], [ 0, %dec_label_pc_23f2a ]
  ret i32 %v2_23f76

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_23f7d() local_unnamed_addr {
dec_label_pc_23f7d:
  %v0_23f7e = load i32, i32* @eax, align 4
  ret i32 %v0_23f7e
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23f80:
  %v1_23fa0 = inttoptr i32 %arg2 to i32*
  %v2_23fa0 = load i32, i32* %v1_23fa0, align 4
  store i32 %v2_23fa0, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23fb3

bb:                                               ; preds = %dec_label_pc_23f80
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_23fb1 = call i32 @function_23fb8(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_23fb3

dec_label_pc_23fb3:                               ; preds = %bb, %dec_label_pc_23f80
  %v4_23fb1 = phi i32 [ %v3_23fb1, %bb ], [ 0, %dec_label_pc_23f80 ]
  ret i32 %v4_23fb1

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23fb8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23fb8:
  %v0_23fb9 = load i32, i32* @eax, align 4
  ret i32 %v0_23fb9
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEEC1ERKS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23fba:
  %v1_23fda = inttoptr i32 %arg2 to i32*
  %v2_23fda = load i32, i32* %v1_23fda, align 4
  store i32 %v2_23fda, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_23fed

bb:                                               ; preds = %dec_label_pc_23fba
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_23feb = call i32 @function_23ff2(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_23fed

dec_label_pc_23fed:                               ; preds = %bb, %dec_label_pc_23fba
  %v4_23feb = phi i32 [ %v3_23feb, %bb ], [ 0, %dec_label_pc_23fba ]
  ret i32 %v4_23feb

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_23ff2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_23ff2:
  %v0_23ff3 = load i32, i32* @eax, align 4
  ret i32 %v0_23ff3
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_Bvector_implC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_23ff4:
  %v1_24011 = call i32 @unknown_4e274(i32 %arg1)
  %v1_2401c = call i32 @function_2d3d4(i32 %arg1)
  %v1_24024 = add i32 %arg1, 8
  %v1_2402a = call i32 @function_2d3d4(i32 %v1_24024)
  %v1_24032 = add i32 %arg1, 16
  %v2_24032 = inttoptr i32 %v1_24032 to i32*
  store i32 0, i32* %v2_24032, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24045

bb:                                               ; preds = %dec_label_pc_23ff4
  %v1_24043 = call i32 @function_2404a()
  br label %dec_label_pc_24045

dec_label_pc_24045:                               ; preds = %bb, %dec_label_pc_23ff4
  %v2_24043 = phi i32 [ %v1_24043, %bb ], [ 0, %dec_label_pc_23ff4 ]
  ret i32 %v2_24043

; uselistorder directives
  uselistorder i32 (i32)* @function_2d3d4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_2404a() local_unnamed_addr {
dec_label_pc_2404a:
  %v0_2404b = load i32, i32* @eax, align 4
  ret i32 %v0_2404b
}

define i32 @_ZNSaImED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2404c:
  %v1_24069 = call i32 @unknown_4e302(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2407a

bb:                                               ; preds = %dec_label_pc_2404c
  %v1_24078 = call i32 @function_2407f()
  br label %dec_label_pc_2407a

dec_label_pc_2407a:                               ; preds = %bb, %dec_label_pc_2404c
  %v2_24078 = phi i32 [ %v1_24078, %bb ], [ 0, %dec_label_pc_2404c ]
  ret i32 %v2_24078
}

define i32 @function_2407f() local_unnamed_addr {
dec_label_pc_2407f:
  %v0_24080 = load i32, i32* @eax, align 4
  ret i32 %v0_24080
}

define i32 @_ZNSt13_Bvector_baseISaIbEE13_M_deallocateEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_24082:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_2409c = load i32, i32* %arg1, align 4
  %v1_2409e = icmp eq i32 %v2_2409c, 0
  br i1 %v1_2409e, label %dec_label_pc_240d2, label %dec_label_pc_240a2

dec_label_pc_240a2:                               ; preds = %dec_label_pc_24082
  %v1_240a5 = add i32 %tmp103, 16
  %v2_240a5 = inttoptr i32 %v1_240a5 to i32*
  %v3_240a5 = load i32, i32* %v2_240a5, align 4
  %v2_240ad = load i32, i32* %arg1, align 4
  %v2_240b1 = sub i32 %v3_240a5, %v2_240ad
  %v2_240b5 = sdiv i32 %v2_240b1, 4
  %v3_240cd = call i32 @unknown_4e362(i32 %tmp103, i32 %v2_240ad, i32 %v2_240b5)
  br label %dec_label_pc_240d2

dec_label_pc_240d2:                               ; preds = %dec_label_pc_240a2, %dec_label_pc_24082
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_240de

bb:                                               ; preds = %dec_label_pc_240d2
  %v1_240dc = call i32 @function_240e3()
  br label %dec_label_pc_240de

dec_label_pc_240de:                               ; preds = %bb, %dec_label_pc_240d2
  %v2_240dc = phi i32 [ %v1_240dc, %bb ], [ 0, %dec_label_pc_240d2 ]
  ret i32 %v2_240dc
}

define i32 @function_240e3() local_unnamed_addr {
dec_label_pc_240e3:
  %v0_240e4 = load i32, i32* @eax, align 4
  ret i32 %v0_240e4
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_240e6:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_24103 = call i32 @unknown_3d720(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_24114 = add i32 %tmp100, 4
  %v2_24114 = inttoptr i32 %v1_24114 to i32*
  store i32 0, i32* %v2_24114, align 4
  %v1_2411e = add i32 %tmp100, 8
  %v2_2411e = inttoptr i32 %v1_2411e to i32*
  store i32 0, i32* %v2_2411e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24131

bb:                                               ; preds = %dec_label_pc_240e6
  %v1_2412f = call i32 @function_24136()
  br label %dec_label_pc_24131

dec_label_pc_24131:                               ; preds = %bb, %dec_label_pc_240e6
  %v2_2412f = phi i32 [ %v1_2412f, %bb ], [ 0, %dec_label_pc_240e6 ]
  ret i32 %v2_2412f

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_24136() local_unnamed_addr {
dec_label_pc_24136:
  %v0_24137 = load i32, i32* @eax, align 4
  ret i32 %v0_24137
}

define i32 @_ZSt8_DestroyIPSt6vectorIhSaIhEEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24138:
  %v2_24162 = call i32 @unknown_4e459(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24173

bb:                                               ; preds = %dec_label_pc_24138
  %v1_24171 = call i32 @function_24178()
  br label %dec_label_pc_24173

dec_label_pc_24173:                               ; preds = %bb, %dec_label_pc_24138
  %v2_24171 = phi i32 [ %v1_24171, %bb ], [ 0, %dec_label_pc_24138 ]
  ret i32 %v2_24171
}

define i32 @function_24178() local_unnamed_addr {
dec_label_pc_24178:
  %v0_24179 = load i32, i32* @eax, align 4
  ret i32 %v0_24179
}

define i32 @_ZSt13copy_backwardIPSt6vectorIhSaIhEES3_ET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2417a:
  %v1_241a4 = call i32 @unknown_4b835(i32 %arg2)
  %v1_241b1 = call i32 @unknown_4b835(i32 %arg1)
  %v3_241c4 = call i32 @unknown_4e4f1(i32 %v1_241b1, i32 %v1_241a4, i32 %arg3)
  store i32 %v3_241c4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_241d5

bb:                                               ; preds = %dec_label_pc_2417a
  %v1_241d3 = call i32 @function_241da()
  br label %dec_label_pc_241d5

dec_label_pc_241d5:                               ; preds = %bb, %dec_label_pc_2417a
  %v2_241d3 = phi i32 [ %v1_241d3, %bb ], [ %v3_241c4, %dec_label_pc_2417a ]
  ret i32 %v2_241d3

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4b835, { 1, 0 }
}

define i32 @function_241da() local_unnamed_addr {
dec_label_pc_241da:
  %v0_241df = load i32, i32* @eax, align 4
  ret i32 %v0_241df
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_241e0:
  %v1_2420a = call i32 @unknown_4e5ca(i32 %arg1)
  %v1_24217 = call i32 @unknown_3be76(i32 %arg1)
  %v2_2421e = sub i32 %v1_2420a, %v1_24217
  %v7_24223 = icmp ult i32 %v2_2421e, %arg2
  %v5_24228 = icmp eq i1 %v7_24223, false
  br i1 %v5_24228, label %bb, label %dec_label_pc_2422c

bb:                                               ; preds = %dec_label_pc_241e0
  %v1_2422a = call i32 @function_24237()
  br label %dec_label_pc_2422c

dec_label_pc_2422c:                               ; preds = %bb, %dec_label_pc_241e0
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24237() local_unnamed_addr {
dec_label_pc_24237:
  %ebx.global-to-local = alloca i32, align 4
  %v0_24237 = load i32, i32* @ebp, align 4
  %v1_24237 = add i32 %v0_24237, -28
  %v2_24237 = inttoptr i32 %v1_24237 to i32*
  %v3_24237 = load i32, i32* %v2_24237, align 4
  %v1_2423d = call i32 @unknown_3be76(i32 %v3_24237)
  store i32 %v1_2423d, i32* %ebx.global-to-local, align 4
  %v0_24244 = load i32, i32* @ebp, align 4
  %v1_24244 = add i32 %v0_24244, -28
  %v2_24244 = inttoptr i32 %v1_24244 to i32*
  %v3_24244 = load i32, i32* %v2_24244, align 4
  %v1_2424a = call i32 @unknown_3be76(i32 %v3_24244)
  %v1_2424f = load i32, i32* @ebp, align 4
  %v2_2424f = add i32 %v1_2424f, -20
  %v3_2424f = inttoptr i32 %v2_2424f to i32*
  store i32 %v1_2424a, i32* %v3_2424f, align 4
  %v0_24252 = load i32, i32* @ebp, align 4
  %v1_24252 = add i32 %v0_24252, -32
  %v1_24259 = add i32 %v0_24252, -20
  %v2_2425f = call i32 @unknown_4d146(i32 %v1_24259, i32 %v1_24252)
  %v1_24264 = inttoptr i32 %v2_2425f to i32*
  %v2_24264 = load i32, i32* %v1_24264, align 4
  %v1_24266 = load i32, i32* %ebx.global-to-local, align 4
  %v2_24266 = add i32 %v1_24266, %v2_24264
  %v1_24268 = load i32, i32* @ebp, align 4
  %v2_24268 = add i32 %v1_24268, -16
  %v3_24268 = inttoptr i32 %v2_24268 to i32*
  store i32 %v2_24266, i32* %v3_24268, align 4
  %v0_2426b = load i32, i32* @ebp, align 4
  %v1_2426b = add i32 %v0_2426b, -28
  %v2_2426b = inttoptr i32 %v1_2426b to i32*
  %v3_2426b = load i32, i32* %v2_2426b, align 4
  %v1_24271 = call i32 @unknown_3be76(i32 %v3_2426b)
  %v1_24276 = load i32, i32* @ebp, align 4
  %v2_24276 = add i32 %v1_24276, -16
  %v3_24276 = inttoptr i32 %v2_24276 to i32*
  %v4_24276 = load i32, i32* %v3_24276, align 4
  %tmp5 = icmp ugt i32 %v1_24271, %v4_24276
  br i1 %tmp5, label %dec_label_pc_2428b, label %dec_label_pc_2427b

dec_label_pc_2427b:                               ; preds = %dec_label_pc_24237
  %v1_2427b = add i32 %v1_24276, -28
  %v2_2427b = inttoptr i32 %v1_2427b to i32*
  %v3_2427b = load i32, i32* %v2_2427b, align 4
  %v1_24281 = call i32 @unknown_4e5ca(i32 %v3_2427b)
  %v1_24286 = load i32, i32* @ebp, align 4
  %v2_24286 = add i32 %v1_24286, -16
  %v3_24286 = inttoptr i32 %v2_24286 to i32*
  %v4_24286 = load i32, i32* %v3_24286, align 4
  %v10_24286 = icmp ult i32 %v1_24281, %v4_24286
  %v1_24289 = icmp eq i1 %v10_24286, false
  br i1 %v1_24289, label %dec_label_pc_2429b, label %dec_label_pc_2428b

dec_label_pc_2428b:                               ; preds = %dec_label_pc_24237, %dec_label_pc_2427b
  %v0_2428b = phi i32 [ %v1_24276, %dec_label_pc_24237 ], [ %v1_24286, %dec_label_pc_2427b ]
  %v1_2428b = add i32 %v0_2428b, -28
  %v2_2428b = inttoptr i32 %v1_2428b to i32*
  %v3_2428b = load i32, i32* %v2_2428b, align 4
  %v1_24291 = call i32 @unknown_4e5ca(i32 %v3_2428b)
  %v0_2429b.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2429b

dec_label_pc_2429b:                               ; preds = %dec_label_pc_2427b, %dec_label_pc_2428b
  %v0_2429b = phi i32 [ %v0_2429b.pre, %dec_label_pc_2428b ], [ %v1_24286, %dec_label_pc_2427b ]
  %storemerge = phi i32 [ %v1_24291, %dec_label_pc_2428b ], [ %v4_24286, %dec_label_pc_2427b ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_2429b = add i32 %v0_2429b, -12
  %v2_2429b = inttoptr i32 %v1_2429b to i32*
  %v3_2429b = load i32, i32* %v2_2429b, align 4
  %v1_2429e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2429e = icmp eq i32 %v1_2429e, %v3_2429b
  br i1 %v3_2429e, label %bb, label %dec_label_pc_242a7

bb:                                               ; preds = %dec_label_pc_2429b
  %v1_242a5 = call i32 @function_242ac()
  br label %dec_label_pc_242a7

dec_label_pc_242a7:                               ; preds = %bb, %dec_label_pc_2429b
  %v2_242a5 = phi i32 [ %v1_242a5, %bb ], [ %storemerge, %dec_label_pc_2429b ]
  ret i32 %v2_242a5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4e5ca, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_3be76, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2429b, { 1, 0 }
  uselistorder label %dec_label_pc_2428b, { 1, 0 }
}

define i32 @function_242ac() local_unnamed_addr {
dec_label_pc_242ac:
  %v0_242b1 = load i32, i32* @eax, align 4
  ret i32 %v0_242b1
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242b2:
  %v10_242cf = icmp eq i32 %arg2, 0
  br i1 %v10_242cf, label %bb, label %dec_label_pc_242d5

bb:                                               ; preds = %dec_label_pc_242b2
  %v3_242d3 = call i32 @function_242f1(i32 0, i32 %arg1)
  br label %dec_label_pc_242d5

dec_label_pc_242d5:                               ; preds = %bb, %dec_label_pc_242b2
  %v3_242ea = call i32 @unknown_4e6da(i32 %arg1, i32 %arg2, i32 0)
  ret i32 %v3_242ea

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_242f1, { 1, 0 }
}

define i32 @function_242f1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_242f1:
  store i32 0, i32* @eax, align 4
  %v0_242f6 = load i32, i32* @ebp, align 4
  %v1_242f6 = add i32 %v0_242f6, -12
  %v2_242f6 = inttoptr i32 %v1_242f6 to i32*
  %v3_242f6 = load i32, i32* %v2_242f6, align 4
  %v1_242f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_242f9 = icmp eq i32 %v1_242f9, %v3_242f6
  br i1 %v3_242f9, label %bb, label %dec_label_pc_24302

bb:                                               ; preds = %dec_label_pc_242f1
  %v1_24300 = call i32 @function_24307()
  br label %dec_label_pc_24302

dec_label_pc_24302:                               ; preds = %bb, %dec_label_pc_242f1
  %v2_24300 = phi i32 [ %v1_24300, %bb ], [ 0, %dec_label_pc_242f1 ]
  ret i32 %v2_24300
}

define i32 @function_24307() local_unnamed_addr {
dec_label_pc_24307:
  %v0_24308 = load i32, i32* @eax, align 4
  ret i32 %v0_24308
}

define i32 @_ZSt22__uninitialized_move_aIPSt6vectorIhSaIhEES3_SaIS2_EET0_T_S6_S5_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24309:
  %v8_2434d = call i32 @unknown_44c64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_2434d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2435e

bb:                                               ; preds = %dec_label_pc_24309
  %v1_2435c = call i32 @function_24363()
  br label %dec_label_pc_2435e

dec_label_pc_2435e:                               ; preds = %bb, %dec_label_pc_24309
  %v2_2435c = phi i32 [ %v1_2435c, %bb ], [ %v8_2434d, %dec_label_pc_24309 ]
  ret i32 %v2_2435c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_24363() local_unnamed_addr {
dec_label_pc_24363:
  %v0_24364 = load i32, i32* @eax, align 4
  ret i32 %v0_24364
}

define i32 @_ZSt13copy_backwardISt13_Bit_iteratorS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_24365:
  %tmp96 = call i32 @__decompiler_undefined_function_0()
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_243a0 = ptrtoint i32* %stack_var_-24 to i32
  %v3_243b4 = call i32 @unknown_4e7f1(i32 %v2_243a0, i32 %arg4, i32 %arg5)
  %v2_243bc = ptrtoint i32* %stack_var_-32 to i32
  %v3_243d0 = call i32 @unknown_4e7f1(i32 %v2_243bc, i32 %arg2, i32 %arg3)
  %v3_243e9 = load i32, i32* %stack_var_-24, align 4
  %v3_243f7 = load i32, i32* %stack_var_-32, align 4
  %v7_24408 = call i32 @unknown_4e848(i32 %arg1, i32 %v3_243f7, i32 %tmp96, i32 %v3_243e9, i32 %tmp97, i32 %arg6, i32 %arg7)
  ret i32 %v7_24408

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_4e7f1, { 1, 0 }
}

define i32 @function_2440e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2440e:
  %v0_2440f = load i32, i32* @eax, align 4
  %v1_2440f = trunc i32 %v0_2440f to i8
  %v2_2440f = add i8 %v1_2440f, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v0_24411 = load i32, i32* @ebp, align 4
  %v1_24411 = add i32 %v0_24411, 1
  store i32 %v1_24411, i32* @ebp, align 4
  %not. = icmp ugt i8 %v2_2440f, -118
  %v3_24412 = urem i8 %v2_2440f, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v4_24412 = zext i8 %v3_24412 to i32
  %v6_24412 = and i32 %v0_2440f, -65536
  %v10_24412 = select i1 %not., i32 256, i32 0
  %v11_24412 = or i32 %v4_24412, %v6_24412
  %v12_24412 = or i32 %v11_24412, %v10_24412
  store i32 %v12_24412, i32* @eax, align 4
  %v0_24416 = load i32, i32* @edx, align 4
  %v1_24416 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_24416 = icmp eq i32 %v1_24416, %v0_24416
  br i1 %v3_24416, label %bb, label %dec_label_pc_2441f

bb:                                               ; preds = %dec_label_pc_2440e
  %v1_2441d = call i32 @function_24424()
  br label %dec_label_pc_2441f

dec_label_pc_2441f:                               ; preds = %bb, %dec_label_pc_2440e
  %v2_2441d = phi i32 [ %v1_2441d, %bb ], [ %v12_24412, %dec_label_pc_2440e ]
  ret i32 %v2_2441d

; uselistorder directives
  uselistorder i8 %v2_2440f, { 1, 0 }
}

define i32 @function_24424() local_unnamed_addr {
dec_label_pc_24424:
  %v0_24425 = load i32, i32* @eax, align 4
  ret i32 %v0_24425
}

define i32 @_ZNKSt6vectorIbSaIbEE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24428:
  %v1_24452 = call i32 @unknown_4ea50(i32 %arg1)
  %v1_2445f = call i32 @unknown_4e9ea(i32 %arg1)
  %v2_24466 = sub i32 %v1_24452, %v1_2445f
  %v7_2446b = icmp ult i32 %v2_24466, %arg2
  %v5_24470 = icmp eq i1 %v7_2446b, false
  br i1 %v5_24470, label %bb, label %dec_label_pc_24474

bb:                                               ; preds = %dec_label_pc_24428
  %v1_24472 = call i32 @function_2447f()
  br label %dec_label_pc_24474

dec_label_pc_24474:                               ; preds = %bb, %dec_label_pc_24428
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2447f() local_unnamed_addr {
dec_label_pc_2447f:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2447f = load i32, i32* @ebp, align 4
  %v1_2447f = add i32 %v0_2447f, -28
  %v2_2447f = inttoptr i32 %v1_2447f to i32*
  %v3_2447f = load i32, i32* %v2_2447f, align 4
  %v1_24485 = call i32 @unknown_4e9ea(i32 %v3_2447f)
  store i32 %v1_24485, i32* %ebx.global-to-local, align 4
  %v0_2448c = load i32, i32* @ebp, align 4
  %v1_2448c = add i32 %v0_2448c, -28
  %v2_2448c = inttoptr i32 %v1_2448c to i32*
  %v3_2448c = load i32, i32* %v2_2448c, align 4
  %v1_24492 = call i32 @unknown_4e9ea(i32 %v3_2448c)
  %v1_24497 = load i32, i32* @ebp, align 4
  %v2_24497 = add i32 %v1_24497, -20
  %v3_24497 = inttoptr i32 %v2_24497 to i32*
  store i32 %v1_24492, i32* %v3_24497, align 4
  %v0_2449a = load i32, i32* @ebp, align 4
  %v1_2449a = add i32 %v0_2449a, -32
  %v1_244a1 = add i32 %v0_2449a, -20
  %v2_244a7 = call i32 @unknown_4d38e(i32 %v1_244a1, i32 %v1_2449a)
  %v1_244ac = inttoptr i32 %v2_244a7 to i32*
  %v2_244ac = load i32, i32* %v1_244ac, align 4
  %v1_244ae = load i32, i32* %ebx.global-to-local, align 4
  %v2_244ae = add i32 %v1_244ae, %v2_244ac
  %v1_244b0 = load i32, i32* @ebp, align 4
  %v2_244b0 = add i32 %v1_244b0, -16
  %v3_244b0 = inttoptr i32 %v2_244b0 to i32*
  store i32 %v2_244ae, i32* %v3_244b0, align 4
  %v0_244b3 = load i32, i32* @ebp, align 4
  %v1_244b3 = add i32 %v0_244b3, -28
  %v2_244b3 = inttoptr i32 %v1_244b3 to i32*
  %v3_244b3 = load i32, i32* %v2_244b3, align 4
  ret i32 %v3_244b3
}

define i32 @function_244b9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_244b9:
  %v1_244b9 = call i32 @unknown_4e9ea(i32 ptrtoint (i32* @9 to i32))
  %v1_244be = load i32, i32* @ebp, align 4
  %v2_244be = add i32 %v1_244be, -16
  %v3_244be = inttoptr i32 %v2_244be to i32*
  %v4_244be = load i32, i32* %v3_244be, align 4
  %tmp4 = icmp ugt i32 %v1_244b9, %v4_244be
  br i1 %tmp4, label %dec_label_pc_244d3, label %dec_label_pc_244c3

dec_label_pc_244c3:                               ; preds = %dec_label_pc_244b9
  %v1_244c3 = add i32 %v1_244be, -28
  %v2_244c3 = inttoptr i32 %v1_244c3 to i32*
  %v3_244c3 = load i32, i32* %v2_244c3, align 4
  %v1_244c9 = call i32 @unknown_4ea50(i32 %v3_244c3)
  %v1_244ce = load i32, i32* @ebp, align 4
  %v2_244ce = add i32 %v1_244ce, -16
  %v3_244ce = inttoptr i32 %v2_244ce to i32*
  %v4_244ce = load i32, i32* %v3_244ce, align 4
  %v10_244ce = icmp ult i32 %v1_244c9, %v4_244ce
  %v1_244d1 = icmp eq i1 %v10_244ce, false
  br i1 %v1_244d1, label %dec_label_pc_244e3, label %dec_label_pc_244d3

dec_label_pc_244d3:                               ; preds = %dec_label_pc_244b9, %dec_label_pc_244c3
  %v0_244d3 = phi i32 [ %v1_244be, %dec_label_pc_244b9 ], [ %v1_244ce, %dec_label_pc_244c3 ]
  %v1_244d3 = add i32 %v0_244d3, -28
  %v2_244d3 = inttoptr i32 %v1_244d3 to i32*
  %v3_244d3 = load i32, i32* %v2_244d3, align 4
  %v1_244d9 = call i32 @unknown_4ea50(i32 %v3_244d3)
  %v0_244e3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_244e3

dec_label_pc_244e3:                               ; preds = %dec_label_pc_244c3, %dec_label_pc_244d3
  %v0_244e3 = phi i32 [ %v0_244e3.pre, %dec_label_pc_244d3 ], [ %v1_244ce, %dec_label_pc_244c3 ]
  %storemerge = phi i32 [ %v1_244d9, %dec_label_pc_244d3 ], [ %v4_244ce, %dec_label_pc_244c3 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_244e3 = add i32 %v0_244e3, -12
  %v2_244e3 = inttoptr i32 %v1_244e3 to i32*
  %v3_244e3 = load i32, i32* %v2_244e3, align 4
  %v1_244e6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_244e6 = icmp eq i32 %v1_244e6, %v3_244e3
  br i1 %v3_244e6, label %bb, label %dec_label_pc_244ef

bb:                                               ; preds = %dec_label_pc_244e3
  %v1_244ed = call i32 @function_244f4()
  br label %dec_label_pc_244ef

dec_label_pc_244ef:                               ; preds = %bb, %dec_label_pc_244e3
  %v2_244ed = phi i32 [ %v1_244ed, %bb ], [ %storemerge, %dec_label_pc_244e3 ]
  ret i32 %v2_244ed

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4ea50, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_4e9ea, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_244e3, { 1, 0 }
  uselistorder label %dec_label_pc_244d3, { 1, 0 }
}

define i32 @function_244f4() local_unnamed_addr {
dec_label_pc_244f4:
  %v0_244f9 = load i32, i32* @eax, align 4
  ret i32 %v0_244f9
}

define i32 @_ZNSt13_Bvector_baseISaIbEE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_244fa:
  %v1_2451a = add i32 %arg2, 31
  %v2_2451f = udiv i32 %v1_2451a, 32
  %v3_24534 = call i32 @unknown_4eb80(i32 %arg1, i32 %v2_2451f, i32 0)
  store i32 %v3_24534, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24545

bb:                                               ; preds = %dec_label_pc_244fa
  %v1_24543 = call i32 @function_2454a()
  br label %dec_label_pc_24545

dec_label_pc_24545:                               ; preds = %bb, %dec_label_pc_244fa
  %v2_24543 = phi i32 [ %v1_24543, %bb ], [ %v3_24534, %dec_label_pc_244fa ]
  ret i32 %v2_24543

; uselistorder directives
  uselistorder i32 31, { 1, 2, 3, 4, 5, 0 }
}

define i32 @function_2454a() local_unnamed_addr {
dec_label_pc_2454a:
  %v0_2454b = load i32, i32* @eax, align 4
  ret i32 %v0_2454b
}

define i32 @_ZNSt6vectorIbSaIbEE15_M_copy_alignedESt19_Bit_const_iteratorS2_St13_Bit_iterator(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_2454c:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_245a1 = call i32 @unknown_4ec30(i32 %arg3, i32 %arg5, i32 %arg7)
  %v2_245b8 = ptrtoint i32* %stack_var_-28 to i32
  %v3_245be = call i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_leftmostEv(i32 %v2_245b8, i32 %v3_245a1, i32 0)
  %v2_245d2 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_245d2, i32* @eax, align 4
  %v3_245d8 = call i32 @function_2dc42(i32 %v2_245d2, i32 %arg5, i32 0)
  %v3_245e0 = load i32, i32* %stack_var_-28, align 4
  %v3_245fc = load i32, i32* %stack_var_-36, align 4
  %v7_2460d = call i32 @unknown_4ec96(i32 %arg1, i32 %v3_245fc, i32 %tmp98, i32 %arg5, i32 %arg6, i32 %v3_245e0, i32 %tmp103)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24624

bb:                                               ; preds = %dec_label_pc_2454c
  %v1_24622 = call i32 @function_24629()
  br label %dec_label_pc_24624

dec_label_pc_24624:                               ; preds = %bb, %dec_label_pc_2454c
  %v2_24622 = phi i32 [ %v1_24622, %bb ], [ %arg1, %dec_label_pc_2454c ]
  ret i32 %v2_24622

; uselistorder directives
  uselistorder i32 %arg5, { 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_24629() local_unnamed_addr {
dec_label_pc_24629:
  %v0_2462a = load i32, i32* @eax, align 4
  ret i32 %v0_2462a
}

define i32 @_ZSt4copyISt13_Bit_iteratorS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2462d:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_24668 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2467c = call i32 @unknown_4eab9(i32 %v2_24668, i32 %arg4, i32 %arg5)
  %v2_24684 = ptrtoint i32* %stack_var_-32 to i32
  %v3_24698 = call i32 @unknown_4eab9(i32 %v2_24684, i32 %arg2, i32 %arg3)
  %v3_246b1 = load i32, i32* %stack_var_-24, align 4
  %v3_246bf = load i32, i32* %stack_var_-32, align 4
  %v7_246d0 = call i32 @unknown_4ee3a(i32 %arg1, i32 %v3_246bf, i32 %tmp98, i32 %v3_246b1, i32 %tmp99, i32 %arg6, i32 %arg7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_246e7

bb:                                               ; preds = %dec_label_pc_2462d
  %v1_246e5 = call i32 @function_246ec()
  br label %dec_label_pc_246e7

dec_label_pc_246e7:                               ; preds = %bb, %dec_label_pc_2462d
  %v2_246e5 = phi i32 [ %v1_246e5, %bb ], [ %arg1, %dec_label_pc_2462d ]
  ret i32 %v2_246e5

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_4eab9, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_246ec() local_unnamed_addr {
dec_label_pc_246ec:
  %v0_246ed = load i32, i32* @eax, align 4
  ret i32 %v0_246ed
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_246f0:
  %v2_2471a = call i32 @unknown_4efdc(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24731

bb:                                               ; preds = %dec_label_pc_246f0
  %v1_2472f = call i32 @function_24736()
  br label %dec_label_pc_24731

dec_label_pc_24731:                               ; preds = %bb, %dec_label_pc_246f0
  %v2_2472f = phi i32 [ %v1_2472f, %bb ], [ %arg1, %dec_label_pc_246f0 ]
  ret i32 %v2_2472f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_24736() local_unnamed_addr {
dec_label_pc_24736:
  %v0_24737 = load i32, i32* @eax, align 4
  ret i32 %v0_24737
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEES8_ET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2473a:
  %stack_var_-20 = alloca i32, align 4
  %v1_2476b = call i32 @unknown_4f063(i32 %arg4)
  %v1_24778 = call i32 @unknown_4f063(i32 %arg3)
  %v1_24785 = call i32 @unknown_4f063(i32 %arg2)
  %v3_24795 = call i32 @unknown_4f098(i32 %v1_24785, i32 %v1_24778, i32 %v1_2476b)
  store i32 %v3_24795, i32* %stack_var_-20, align 4
  %v2_2479d = ptrtoint i32* %stack_var_-20 to i32
  %v2_247aa = call i32 @unknown_426ca(i32 %arg1, i32 %v2_2479d)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_247be

bb:                                               ; preds = %dec_label_pc_2473a
  %v1_247bc = call i32 @function_247c3()
  br label %dec_label_pc_247be

dec_label_pc_247be:                               ; preds = %bb, %dec_label_pc_2473a
  %v2_247bc = phi i32 [ %v1_247bc, %bb ], [ %arg1, %dec_label_pc_2473a ]
  ret i32 %v2_247bc

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4f063, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_247c3() local_unnamed_addr {
dec_label_pc_247c3:
  %v0_247c9 = load i32, i32* @eax, align 4
  ret i32 %v0_247c9
}

define i32 @_ZSt4swapIPhEvRT_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_247cc:
  %v2_247ec = load i32, i32* %arg1, align 4
  %v1_247f4 = inttoptr i32 %arg2 to i32*
  %v2_247f4 = load i32, i32* %v1_247f4, align 4
  store i32 %v2_247f4, i32* %arg1, align 4
  store i32 %v2_247ec, i32* %v1_247f4, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2480f

bb:                                               ; preds = %dec_label_pc_247cc
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v3_2480d = call i32 @function_24814(i32 %arg2, i32 %tmp103)
  br label %dec_label_pc_2480f

dec_label_pc_2480f:                               ; preds = %bb, %dec_label_pc_247cc
  %v4_2480d = phi i32 [ %v3_2480d, %bb ], [ 0, %dec_label_pc_247cc ]
  ret i32 %v4_2480d

; uselistorder directives
  uselistorder i32* %arg1, { 2, 0, 1 }
}

define i32 @function_24814(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24814:
  %v0_24815 = load i32, i32* @eax, align 4
  ret i32 %v0_24815
}

define i32 @_ZNSt12__alloc_swapISaIhELb1EE8_S_do_itERS0_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24816:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2483f

bb:                                               ; preds = %dec_label_pc_24816
  %v3_2483d = call i32 @function_24844(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2483f

dec_label_pc_2483f:                               ; preds = %bb, %dec_label_pc_24816
  %v4_2483d = phi i32 [ %v3_2483d, %bb ], [ 0, %dec_label_pc_24816 ]
  ret i32 %v4_2483d
}

define i32 @function_24844(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24844:
  %v0_24845 = load i32, i32* @eax, align 4
  ret i32 %v0_24845
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE12_Vector_implC1ERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24846:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v2_24870 = call i32 @unknown_4f1f8(i32 %tmp103, i32 %arg2)
  store i32 0, i32* %arg1, align 4
  %v1_24881 = add i32 %tmp103, 4
  %v2_24881 = inttoptr i32 %v1_24881 to i32*
  store i32 0, i32* %v2_24881, align 4
  %v1_2488b = add i32 %tmp103, 8
  %v2_2488b = inttoptr i32 %v1_2488b to i32*
  store i32 0, i32* %v2_2488b, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2489e

bb:                                               ; preds = %dec_label_pc_24846
  %v1_2489c = call i32 @function_248a3()
  br label %dec_label_pc_2489e

dec_label_pc_2489e:                               ; preds = %bb, %dec_label_pc_24846
  %v2_2489c = phi i32 [ %v1_2489c, %bb ], [ 0, %dec_label_pc_24846 ]
  ret i32 %v2_2489c

; uselistorder directives
  uselistorder i32 %tmp103, { 2, 1, 0 }
}

define i32 @function_248a3() local_unnamed_addr {
dec_label_pc_248a3:
  %v0_248a4 = load i32, i32* @eax, align 4
  ret i32 %v0_248a4
}

define i32 @_ZNSt12_Vector_baseI5CTxInSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_248a6:
  %v10_248c3 = icmp eq i32 %arg2, 0
  br i1 %v10_248c3, label %dec_label_pc_248ea, label %dec_label_pc_248c9

dec_label_pc_248c9:                               ; preds = %dec_label_pc_248a6
  %v3_248de = call i32 @unknown_4f29a(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_248ea

dec_label_pc_248ea:                               ; preds = %dec_label_pc_248a6, %dec_label_pc_248c9
  %storemerge = phi i32 [ %v3_248de, %dec_label_pc_248c9 ], [ 0, %dec_label_pc_248a6 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_248f6

bb:                                               ; preds = %dec_label_pc_248ea
  %v1_248f4 = call i32 @function_248fb()
  br label %dec_label_pc_248f6

dec_label_pc_248f6:                               ; preds = %bb, %dec_label_pc_248ea
  %v2_248f4 = phi i32 [ %v1_248f4, %bb ], [ %storemerge, %dec_label_pc_248ea ]
  ret i32 %v2_248f4

; uselistorder directives
  uselistorder label %dec_label_pc_248ea, { 1, 0 }
}

define i32 @function_248fb() local_unnamed_addr {
dec_label_pc_248fb:
  %v0_248fc = load i32, i32* @eax, align 4
  ret i32 %v0_248fc
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS2_SaIS2_EEEEPS2_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_248fd:
  %v3_24934 = call i32 @unknown_4f34f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_24934, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_24945

bb:                                               ; preds = %dec_label_pc_248fd
  %v1_24943 = call i32 @function_2494a()
  br label %dec_label_pc_24945

dec_label_pc_24945:                               ; preds = %bb, %dec_label_pc_248fd
  %v2_24943 = phi i32 [ %v1_24943, %bb ], [ %v3_24934, %dec_label_pc_248fd ]
  ret i32 %v2_24943
}

define i32 @function_2494a() local_unnamed_addr {
dec_label_pc_2494a:
  %v0_2494b = load i32, i32* @eax, align 4
  ret i32 %v0_2494b
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2494c:
  %v10_24978 = icmp eq i32 %arg3, 0
  br i1 %v10_24978, label %bb, label %dec_label_pc_24982

bb:                                               ; preds = %dec_label_pc_2494c
  %v5_2497c = call i32 @function_24e0e(i32 %arg4, i32 0, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_24982

dec_label_pc_24982:                               ; preds = %bb, %dec_label_pc_2494c
  %v1_24985 = add i32 %arg1, 8
  %v2_24985 = inttoptr i32 %v1_24985 to i32*
  %v3_24985 = load i32, i32* %v2_24985, align 4
  %v1_2498d = add i32 %arg1, 4
  %v2_2498d = inttoptr i32 %v1_2498d to i32*
  %v3_2498d = load i32, i32* %v2_2498d, align 4
  %v2_24992 = sub i32 %v3_24985, %v3_2498d
  ret i32 %v2_24992
}

define i32 @function_24998(i32 %arg1) local_unnamed_addr {
dec_label_pc_24998:
  %ebx.global-to-local = alloca i32, align 4
  %v0_24998 = load i32, i32* @ecx, align 4
  %v1_24998 = udiv i32 %v0_24998, 256
  %v2_24998 = trunc i32 %v1_24998 to i8
  %v4_24998 = add i32 %v0_24998, -64
  %v5_24998 = inttoptr i32 %v4_24998 to i8*
  %v6_24998 = load i8, i8* %v5_24998, align 1
  %v7_24998 = add i8 %v2_24998, %v6_24998
  %v22_24998 = zext i8 %v7_24998 to i32
  %v24_24998 = mul nuw nsw i32 %v22_24998, 256
  %v25_24998 = and i32 %v0_24998, -65281
  %v26_24998 = or i32 %v24_24998, %v25_24998
  store i32 %v26_24998, i32* @ecx, align 4
  %v0_2499f = load i32, i32* @eax, align 4
  %v1_2499f = load i32, i32* @ebp, align 4
  %v2_2499f = add i32 %v1_2499f, -100
  %v3_2499f = inttoptr i32 %v2_2499f to i32*
  %v4_2499f = load i32, i32* %v3_2499f, align 4
  %v10_2499f = icmp ult i32 %v0_2499f, %v4_2499f
  br i1 %v10_2499f, label %bb, label %dec_label_pc_249a8

bb:                                               ; preds = %dec_label_pc_24998
  %v1_249a2 = call i32 @function_24ba6()
  %v0_249a8.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_249a8

dec_label_pc_249a8:                               ; preds = %bb, %dec_label_pc_24998
  %v0_249a8 = phi i32 [ %v0_249a8.pre, %bb ], [ %v1_2499f, %dec_label_pc_24998 ]
  %v1_249a8 = add i32 %v0_249a8, -104
  %v2_249a8 = inttoptr i32 %v1_249a8 to i32*
  %v3_249a8 = load i32, i32* %v2_249a8, align 4
  %v1_249af = add i32 %v0_249a8, -80
  store i32 %v1_249af, i32* @eax, align 4
  %v2_249b5 = call i32 @function_38286(i32 %v1_249af, i32 %v3_249a8)
  %v0_249ba = load i32, i32* @ebp, align 4
  %v1_249ba = add i32 %v0_249ba, -60
  %v1_249bd = add i32 %v0_249ba, -92
  %v2_249bd = inttoptr i32 %v1_249bd to i32*
  %v3_249bd = load i32, i32* %v2_249bd, align 4
  %v2_249c7 = call i32 @unknown_41d56(i32 %v1_249ba, i32 %v3_249bd)
  %v0_249cf = load i32, i32* @ebp, align 4
  %v1_249cf = add i32 %v0_249cf, -96
  %v1_249d6 = add i32 %v0_249cf, -60
  %v2_249dc = call i32 @unknown_4f45f(i32 %v1_249d6, i32 %v1_249cf)
  %v1_249e1 = load i32, i32* @ebp, align 4
  %v2_249e1 = add i32 %v1_249e1, -48
  %v3_249e1 = inttoptr i32 %v2_249e1 to i32*
  store i32 %v2_249dc, i32* %v3_249e1, align 4
  %v0_249e4 = load i32, i32* @ebp, align 4
  %v1_249e4 = add i32 %v0_249e4, -92
  %v2_249e4 = inttoptr i32 %v1_249e4 to i32*
  %v3_249e4 = load i32, i32* %v2_249e4, align 4
  %v1_249e7 = add i32 %v3_249e4, 4
  %v2_249e7 = inttoptr i32 %v1_249e7 to i32*
  %v3_249e7 = load i32, i32* %v2_249e7, align 4
  %v2_249ea = add i32 %v0_249e4, -44
  %v3_249ea = inttoptr i32 %v2_249ea to i32*
  store i32 %v3_249e7, i32* %v3_249ea, align 4
  %v0_249ed = load i32, i32* @ebp, align 4
  %v1_249ed = add i32 %v0_249ed, -48
  %v2_249ed = inttoptr i32 %v1_249ed to i32*
  %v3_249ed = load i32, i32* %v2_249ed, align 4
  %v2_249f0 = add i32 %v0_249ed, -100
  %v3_249f0 = inttoptr i32 %v2_249f0 to i32*
  %v4_249f0 = load i32, i32* %v3_249f0, align 4
  %tmp7 = icmp ugt i32 %v3_249ed, %v4_249f0
  %v1_24acf = add i32 %v0_249ed, -92
  %v2_24acf = inttoptr i32 %v1_24acf to i32*
  %v3_24acf = load i32, i32* %v2_24acf, align 4
  br i1 %tmp7, label %dec_label_pc_249f9, label %dec_label_pc_24acf

dec_label_pc_249f9:                               ; preds = %dec_label_pc_249a8
  %v1_249ff = call i32 @unknown_41968(i32 %v3_24acf)
  %v0_24a06 = load i32, i32* @ebp, align 4
  %v1_24a06 = add i32 %v0_24a06, -92
  %v2_24a06 = inttoptr i32 %v1_24a06 to i32*
  %v3_24a06 = load i32, i32* %v2_24a06, align 4
  %v1_24a09 = add i32 %v3_24a06, 4
  %v2_24a09 = inttoptr i32 %v1_24a09 to i32*
  %v3_24a09 = load i32, i32* %v2_24a09, align 4
  %v1_24a0f = add i32 %v3_24a06, 4
  %v2_24a0f = inttoptr i32 %v1_24a0f to i32*
  %v3_24a0f = load i32, i32* %v2_24a0f, align 4
  store i32 %v3_24a0f, i32* %ebx.global-to-local, align 4
  %v3_24a12 = load i32, i32* %v2_24a06, align 4
  %v1_24a15 = add i32 %v3_24a12, 4
  %v2_24a15 = inttoptr i32 %v1_24a15 to i32*
  %v3_24a15 = load i32, i32* %v2_24a15, align 4
  %v1_24a18 = add i32 %v0_24a06, -100
  %v2_24a18 = inttoptr i32 %v1_24a18 to i32*
  %v3_24a18 = load i32, i32* %v2_24a18, align 4
  %tmp8 = mul i32 %v3_24a18, -20
  %v2_24a27 = add i32 %v3_24a15, %tmp8
  %v3_24a38 = call i32 @unknown_4f4bf(i32 %v2_24a27, i32 %v3_24a0f, i32 %v3_24a09)
  %v0_24a3d = load i32, i32* @ebp, align 4
  %v1_24a3d = add i32 %v0_24a3d, -92
  %v2_24a3d = inttoptr i32 %v1_24a3d to i32*
  %v3_24a3d = load i32, i32* %v2_24a3d, align 4
  %v1_24a40 = add i32 %v3_24a3d, 4
  %v2_24a40 = inttoptr i32 %v1_24a40 to i32*
  %v3_24a40 = load i32, i32* %v2_24a40, align 4
  %v1_24a43 = add i32 %v0_24a3d, -100
  %v2_24a43 = inttoptr i32 %v1_24a43 to i32*
  %v3_24a43 = load i32, i32* %v2_24a43, align 4
  %v2_24a4d = mul i32 %v3_24a43, 20
  %v3_24a50 = add i32 %v2_24a4d, %v3_24a40
  %v3_24a53 = load i32, i32* %v2_24a3d, align 4
  %v2_24a56 = add i32 %v3_24a53, 4
  %v3_24a56 = inttoptr i32 %v2_24a56 to i32*
  store i32 %v3_24a50, i32* %v3_24a56, align 4
  %v0_24a59 = load i32, i32* @ebp, align 4
  %v1_24a59 = add i32 %v0_24a59, -100
  %v2_24a59 = inttoptr i32 %v1_24a59 to i32*
  %v3_24a59 = load i32, i32* %v2_24a59, align 4
  %v2_24a63 = mul i32 %v3_24a59, 20
  %v1_24a66 = sub i32 0, %v2_24a63
  store i32 %v1_24a66, i32* %ebx.global-to-local, align 4
  %v2_24a6a = add i32 %v0_24a59, -44
  %v3_24a6a = inttoptr i32 %v2_24a6a to i32*
  %v4_24a6a = load i32, i32* %v3_24a6a, align 4
  %v5_24a6a = sub i32 %v4_24a6a, %v2_24a63
  store i32 %v5_24a6a, i32* %ebx.global-to-local, align 4
  %v1_24a6d = add i32 %v0_24a59, -96
  %v1_24a73 = call i32 @unknown_4f51c(i32 %v1_24a6d)
  %v1_24a78 = inttoptr i32 %v1_24a73 to i32*
  %v2_24a78 = load i32, i32* %v1_24a78, align 4
  %v0_24a7a = load i32, i32* @ebp, align 4
  %v1_24a7a = add i32 %v0_24a7a, -44
  %v2_24a7a = inttoptr i32 %v1_24a7a to i32*
  %v3_24a7a = load i32, i32* %v2_24a7a, align 4
  %v0_24a81 = load i32, i32* %ebx.global-to-local, align 4
  %v3_24a88 = call i32 @unknown_4f549(i32 %v2_24a78, i32 %v0_24a81, i32 %v3_24a7a)
  %v0_24a8d = load i32, i32* @ebp, align 4
  %v1_24a8d = add i32 %v0_24a8d, -96
  %v1_24a93 = call i32 @unknown_4f51c(i32 %v1_24a8d)
  %v1_24a98 = inttoptr i32 %v1_24a93 to i32*
  %v2_24a98 = load i32, i32* %v1_24a98, align 4
  store i32 %v2_24a98, i32* @ecx, align 4
  %v0_24a9a = load i32, i32* @ebp, align 4
  %v1_24a9a = add i32 %v0_24a9a, -100
  %v2_24a9a = inttoptr i32 %v1_24a9a to i32*
  %v3_24a9a = load i32, i32* %v2_24a9a, align 4
  %v2_24aa4 = mul i32 %v3_24a9a, 20
  %v3_24aa7 = add i32 %v2_24aa4, %v2_24a98
  store i32 %v3_24aa7, i32* %ebx.global-to-local, align 4
  %v1_24aaa = add i32 %v0_24a9a, -96
  %v1_24ab0 = call i32 @unknown_4f51c(i32 %v1_24aaa)
  %v1_24ab5 = inttoptr i32 %v1_24ab0 to i32*
  %v2_24ab5 = load i32, i32* %v1_24ab5, align 4
  %v0_24ab7 = load i32, i32* @ebp, align 4
  %v1_24ab7 = add i32 %v0_24ab7, -80
  %v0_24abe = load i32, i32* %ebx.global-to-local, align 4
  %v3_24ac5 = call i32 @unknown_4f5af(i32 %v2_24ab5, i32 %v0_24abe, i32 %v1_24ab7)
  store i32 %v3_24ac5, i32* @eax, align 4
  %v0_24aca = call i32 @function_24b96()
  ret i32 %v0_24aca

dec_label_pc_24acf:                               ; preds = %dec_label_pc_249a8
  ret i32 %v3_24acf

; uselistorder directives
  uselistorder i32 %v3_24acf, { 1, 0 }
  uselistorder i32 %v0_249a8, { 1, 0 }
  uselistorder i32 %v0_24998, { 1, 2, 0 }
}

define i32 @function_24ad8(i32 %arg1) local_unnamed_addr {
dec_label_pc_24ad8:
  %v2_24ad8 = load i32, i32* @eax, align 4
  %v4_24ad8 = mul i32 %v2_24ad8, 2
  %v21_24ad8 = inttoptr i32 %v2_24ad8 to i32*
  store i32 %v4_24ad8, i32* %v21_24ad8, align 4
  %v0_24ada = load i32, i32* @ebp, align 4
  %v1_24ada = add i32 %v0_24ada, -48
  %v2_24ada = inttoptr i32 %v1_24ada to i32*
  %v3_24ada = load i32, i32* %v2_24ada, align 4
  %v1_24add = add i32 %v0_24ada, -100
  %v2_24add = inttoptr i32 %v1_24add to i32*
  %v3_24add = load i32, i32* %v2_24add, align 4
  %v2_24ae0 = sub i32 %v3_24add, %v3_24ada
  %v1_24ae2 = add i32 %v0_24ada, -92
  %v2_24ae2 = inttoptr i32 %v1_24ae2 to i32*
  %v3_24ae2 = load i32, i32* %v2_24ae2, align 4
  %v1_24ae5 = add i32 %v3_24ae2, 4
  %v2_24ae5 = inttoptr i32 %v1_24ae5 to i32*
  %v3_24ae5 = load i32, i32* %v2_24ae5, align 4
  %v0_24ae8 = load i32, i32* @eax, align 4
  %v1_24aec = add i32 %v0_24ada, -80
  %v4_24afa = call i32 @unknown_48876(i32 %v3_24ae5, i32 %v2_24ae0, i32 %v1_24aec, i32 %v0_24ae8)
  %v0_24aff = load i32, i32* @ebp, align 4
  %v1_24aff = add i32 %v0_24aff, -92
  %v2_24aff = inttoptr i32 %v1_24aff to i32*
  %v3_24aff = load i32, i32* %v2_24aff, align 4
  %v1_24b02 = add i32 %v3_24aff, 4
  %v2_24b02 = inttoptr i32 %v1_24b02 to i32*
  %v3_24b02 = load i32, i32* %v2_24b02, align 4
  store i32 %v3_24b02, i32* @ecx, align 4
  %v1_24b05 = add i32 %v0_24aff, -48
  %v2_24b05 = inttoptr i32 %v1_24b05 to i32*
  %v3_24b05 = load i32, i32* %v2_24b05, align 4
  %v1_24b08 = add i32 %v0_24aff, -100
  %v2_24b08 = inttoptr i32 %v1_24b08 to i32*
  %v3_24b08 = load i32, i32* %v2_24b08, align 4
  %v2_24b0b = sub i32 %v3_24b08, %v3_24b05
  store i32 %v2_24b0b, i32* @edx, align 4
  %v2_24b12 = mul i32 %v2_24b0b, 5
  ret i32 %v2_24b12

; uselistorder directives
  uselistorder i32 %v0_24aff, { 1, 0, 2 }
  uselistorder i32 %v2_24ad8, { 1, 0 }
}

define i32 @function_24b16(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24b16:
  %v2_24b1c = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_24b1c = load i32, i32* @edi, align 4
  %v4_24b1c = inttoptr i32 %v3_24b1c to i8*
  store i8 %v2_24b1c, i8* %v4_24b1c, align 1
  %v5_24b1c = load i32, i32* @edi, align 4
  %v7_24b1c = load i1, i1* @df, align 1
  %v8_24b1c = select i1 %v7_24b1c, i32 -1, i32 1
  %v9_24b1c = add i32 %v8_24b1c, %v5_24b1c
  store i32 %v9_24b1c, i32* @edi, align 4
  %v0_24b1d = load i32, i32* @edx, align 4
  %v1_24b1d = load i32, i32* @eax, align 4
  %v2_24b1d = add i32 %v1_24b1d, 4
  %v3_24b1d = inttoptr i32 %v2_24b1d to i32*
  store i32 %v0_24b1d, i32* %v3_24b1d, align 4
  %v0_24b20 = load i32, i32* @ebp, align 4
  %v1_24b20 = add i32 %v0_24b20, -92
  %v2_24b20 = inttoptr i32 %v1_24b20 to i32*
  %v3_24b20 = load i32, i32* %v2_24b20, align 4
  %v1_24b26 = call i32 @unknown_41968(i32 %v3_24b20)
  store i32 %v1_24b26, i32* @ebx, align 4
  %v0_24b2d = load i32, i32* @ebp, align 4
  %v1_24b2d = add i32 %v0_24b2d, -92
  %v2_24b2d = inttoptr i32 %v1_24b2d to i32*
  %v3_24b2d = load i32, i32* %v2_24b2d, align 4
  %v1_24b30 = add i32 %v3_24b2d, 4
  %v2_24b30 = inttoptr i32 %v1_24b30 to i32*
  %v3_24b30 = load i32, i32* %v2_24b30, align 4
  store i32 %v3_24b30, i32* @esi, align 4
  %v1_24b33 = add i32 %v0_24b2d, -96
  %v1_24b39 = call i32 @unknown_4f51c(i32 %v1_24b33)
  %v1_24b3e = inttoptr i32 %v1_24b39 to i32*
  %v2_24b3e = load i32, i32* %v1_24b3e, align 4
  %v0_24b40 = load i32, i32* @ebx, align 4
  %v0_24b44 = load i32, i32* @esi, align 4
  %v0_24b48 = load i32, i32* @ebp, align 4
  %v1_24b48 = add i32 %v0_24b48, -44
  %v2_24b48 = inttoptr i32 %v1_24b48 to i32*
  %v3_24b48 = load i32, i32* %v2_24b48, align 4
  %v3_24b52 = call i32 @unknown_4f4bf(i32 %v2_24b3e, i32 %v3_24b48, i32 %v0_24b44)
  %v0_24b57 = load i32, i32* @ebp, align 4
  %v1_24b57 = add i32 %v0_24b57, -92
  %v2_24b57 = inttoptr i32 %v1_24b57 to i32*
  %v3_24b57 = load i32, i32* %v2_24b57, align 4
  %v1_24b5a = add i32 %v3_24b57, 4
  %v2_24b5a = inttoptr i32 %v1_24b5a to i32*
  %v3_24b5a = load i32, i32* %v2_24b5a, align 4
  %v1_24b5d = add i32 %v0_24b57, -48
  %v2_24b5d = inttoptr i32 %v1_24b5d to i32*
  %v3_24b5d = load i32, i32* %v2_24b5d, align 4
  %v2_24b67 = mul i32 %v3_24b5d, 20
  %v3_24b6a = add i32 %v2_24b67, %v3_24b5a
  %v3_24b6d = load i32, i32* %v2_24b57, align 4
  %v2_24b70 = add i32 %v3_24b6d, 4
  %v3_24b70 = inttoptr i32 %v2_24b70 to i32*
  store i32 %v3_24b6a, i32* %v3_24b70, align 4
  %v0_24b73 = load i32, i32* @ebp, align 4
  %v1_24b73 = add i32 %v0_24b73, -96
  %v1_24b79 = call i32 @unknown_4f51c(i32 %v1_24b73)
  %v1_24b7e = inttoptr i32 %v1_24b79 to i32*
  %v2_24b7e = load i32, i32* %v1_24b7e, align 4
  %v0_24b80 = load i32, i32* @ebp, align 4
  %v1_24b80 = add i32 %v0_24b80, -80
  %v1_24b87 = add i32 %v0_24b80, -44
  %v2_24b87 = inttoptr i32 %v1_24b87 to i32*
  %v3_24b87 = load i32, i32* %v2_24b87, align 4
  %v3_24b91 = call i32 @unknown_4f5af(i32 %v2_24b7e, i32 %v3_24b87, i32 %v1_24b80)
  %v0_24b96 = load i32, i32* @ebp, align 4
  %v1_24b96 = add i32 %v0_24b96, -80
  store i32 %v1_24b96, i32* @eax, align 4
  %v1_24b9c = call i32 @function_3824e(i32 %v1_24b96)
  %v4_24ba1 = call i32 @function_24e0e(i32 %v1_24b96, i32 %v3_24b87, i32 %v1_24b80, i32 %v0_24b40)
  ret i32 %v4_24ba1

; uselistorder directives
  uselistorder i32 %v1_24b80, { 1, 0 }
}

define i32 @function_24b86(i32 %arg1) local_unnamed_addr {
dec_label_pc_24b86:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24b96() local_unnamed_addr {
dec_label_pc_24b96:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24ba6() local_unnamed_addr {
dec_label_pc_24ba6:
  %v0_24bae = load i32, i32* @ebp, align 4
  %v1_24bae = add i32 %v0_24bae, -100
  %v2_24bae = inttoptr i32 %v1_24bae to i32*
  %v3_24bae = load i32, i32* %v2_24bae, align 4
  %v1_24bb5 = add i32 %v0_24bae, -92
  %v2_24bb5 = inttoptr i32 %v1_24bb5 to i32*
  %v3_24bb5 = load i32, i32* %v2_24bb5, align 4
  %v4_24bbb = call i32 @unknown_4f616(i32 %v3_24bb5, i32 %v3_24bae, i32 ptrtoint ([23 x i8]* @global_var_c61b.2286 to i32))
  %v1_24bc0 = load i32, i32* @ebp, align 4
  %v2_24bc0 = add i32 %v1_24bc0, -40
  %v3_24bc0 = inttoptr i32 %v2_24bc0 to i32*
  store i32 %v4_24bbb, i32* %v3_24bc0, align 4
  %v0_24bc3 = load i32, i32* @ebp, align 4
  %v1_24bc3 = add i32 %v0_24bc3, -56
  %v1_24bc6 = add i32 %v0_24bc3, -92
  %v2_24bc6 = inttoptr i32 %v1_24bc6 to i32*
  %v3_24bc6 = load i32, i32* %v2_24bc6, align 4
  %v2_24bd0 = call i32 @unknown_4f6e8(i32 %v1_24bc3, i32 %v3_24bc6)
  %v0_24bd8 = load i32, i32* @ebp, align 4
  %v1_24bd8 = add i32 %v0_24bd8, -56
  %v1_24bdf = add i32 %v0_24bd8, -96
  %v2_24be5 = call i32 @unknown_4f45f(i32 %v1_24bdf, i32 %v1_24bd8)
  %v1_24bea = load i32, i32* @ebp, align 4
  %v2_24bea = add i32 %v1_24bea, -36
  %v3_24bea = inttoptr i32 %v2_24bea to i32*
  store i32 %v2_24be5, i32* %v3_24bea, align 4
  %v0_24bed = load i32, i32* @ebp, align 4
  %v1_24bed = add i32 %v0_24bed, -92
  %v2_24bed = inttoptr i32 %v1_24bed to i32*
  %v3_24bed = load i32, i32* %v2_24bed, align 4
  %v1_24bf0 = add i32 %v0_24bed, -40
  %v2_24bf0 = inttoptr i32 %v1_24bf0 to i32*
  %v3_24bf0 = load i32, i32* %v2_24bf0, align 4
  %v2_24bfa = call i32 @unknown_487d0(i32 %v3_24bed, i32 %v3_24bf0)
  %v1_24bff = load i32, i32* @ebp, align 4
  %v2_24bff = add i32 %v1_24bff, -32
  %v3_24bff = inttoptr i32 %v2_24bff to i32*
  store i32 %v2_24bfa, i32* %v3_24bff, align 4
  %v0_24c02 = load i32, i32* @ebp, align 4
  %v1_24c02 = add i32 %v0_24c02, -32
  %v2_24c02 = inttoptr i32 %v1_24c02 to i32*
  %v3_24c02 = load i32, i32* %v2_24c02, align 4
  %v2_24c05 = add i32 %v0_24c02, -52
  %v3_24c05 = inttoptr i32 %v2_24c05 to i32*
  store i32 %v3_24c02, i32* %v3_24c05, align 4
  %v0_24c08 = load i32, i32* @ebp, align 4
  %v1_24c08 = add i32 %v0_24c08, -92
  %v2_24c08 = inttoptr i32 %v1_24c08 to i32*
  %v3_24c08 = load i32, i32* %v2_24c08, align 4
  %v1_24c0e = call i32 @unknown_41968(i32 %v3_24c08)
  %v0_24c15 = load i32, i32* @ebp, align 4
  %v1_24c15 = add i32 %v0_24c15, -36
  %v2_24c15 = inttoptr i32 %v1_24c15 to i32*
  %v3_24c15 = load i32, i32* %v2_24c15, align 4
  %v2_24c1f = mul i32 %v3_24c15, 20
  %v2_24c22 = add i32 %v0_24c15, -32
  %v3_24c22 = inttoptr i32 %v2_24c22 to i32*
  %v4_24c22 = load i32, i32* %v3_24c22, align 4
  %v5_24c22 = add i32 %v4_24c22, %v2_24c1f
  %v1_24c29 = add i32 %v0_24c15, -104
  %v2_24c29 = inttoptr i32 %v1_24c29 to i32*
  %v3_24c29 = load i32, i32* %v2_24c29, align 4
  %v1_24c30 = add i32 %v0_24c15, -100
  %v2_24c30 = inttoptr i32 %v1_24c30 to i32*
  %v3_24c30 = load i32, i32* %v2_24c30, align 4
  %v5_24c3a = call i32 @unknown_48876(i32 %v5_24c22, i32 %v3_24c30, i32 %v3_24c29, i32 %v1_24c0e)
  %v0_24c3f = load i32, i32* @ebp, align 4
  %v1_24c3f = add i32 %v0_24c3f, -52
  %v2_24c3f = inttoptr i32 %v1_24c3f to i32*
  store i32 0, i32* %v2_24c3f, align 4
  %v0_24c46 = load i32, i32* @ebp, align 4
  %v1_24c46 = add i32 %v0_24c46, -92
  %v2_24c46 = inttoptr i32 %v1_24c46 to i32*
  %v3_24c46 = load i32, i32* %v2_24c46, align 4
  %v1_24c4c = call i32 @unknown_41968(i32 %v3_24c46)
  %v0_24c53 = load i32, i32* @ebp, align 4
  %v1_24c53 = add i32 %v0_24c53, -96
  %v1_24c59 = call i32 @unknown_4f51c(i32 %v1_24c53)
  %v1_24c5e = inttoptr i32 %v1_24c59 to i32*
  %v2_24c5e = load i32, i32* %v1_24c5e, align 4
  %v0_24c60 = load i32, i32* @ebp, align 4
  %v1_24c60 = add i32 %v0_24c60, -92
  %v2_24c60 = inttoptr i32 %v1_24c60 to i32*
  %v3_24c60 = load i32, i32* %v2_24c60, align 4
  %v1_24c63 = inttoptr i32 %v3_24c60 to i32*
  %v2_24c63 = load i32, i32* %v1_24c63, align 4
  %v1_24c69 = add i32 %v0_24c60, -32
  %v2_24c69 = inttoptr i32 %v1_24c69 to i32*
  %v3_24c69 = load i32, i32* %v2_24c69, align 4
  store i32 %v3_24c69, i32* @ecx, align 4
  %v3_24c77 = call i32 @unknown_4f4bf(i32 %v2_24c63, i32 %v2_24c5e, i32 %v3_24c69)
  %v1_24c7c = load i32, i32* @ebp, align 4
  %v2_24c7c = add i32 %v1_24c7c, -52
  %v3_24c7c = inttoptr i32 %v2_24c7c to i32*
  store i32 %v3_24c77, i32* %v3_24c7c, align 4
  %v0_24c7f = load i32, i32* @ebp, align 4
  %v1_24c7f = add i32 %v0_24c7f, -100
  %v2_24c7f = inttoptr i32 %v1_24c7f to i32*
  %v3_24c7f = load i32, i32* %v2_24c7f, align 4
  %v2_24c89 = mul i32 %v3_24c7f, 20
  %v1_24c8c = add i32 %v0_24c7f, -52
  %v2_24c8c = inttoptr i32 %v1_24c8c to i32*
  %v3_24c8c = load i32, i32* %v2_24c8c, align 4
  %v5_24c8c = add i32 %v3_24c8c, %v2_24c89
  store i32 %v5_24c8c, i32* %v2_24c8c, align 4
  %v0_24c8f = load i32, i32* @ebp, align 4
  %v1_24c8f = add i32 %v0_24c8f, -92
  %v2_24c8f = inttoptr i32 %v1_24c8f to i32*
  %v3_24c8f = load i32, i32* %v2_24c8f, align 4
  ret i32 %v3_24c8f

; uselistorder directives
  uselistorder i32 %v0_24c15, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_48876, { 1, 0 }
  uselistorder i32 -104, { 4, 5, 6, 7, 0, 8, 9, 1, 10, 11, 2, 3 }
  uselistorder i32 (i32, i32)* @unknown_4f45f, { 1, 0 }
}

define i32 @function_24bc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_24bc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24c98(i32 %arg1) local_unnamed_addr {
dec_label_pc_24c98:
  %v2_24c98 = load i32, i32* @eax, align 4
  %v4_24c98 = mul i32 %v2_24c98, 2
  %v21_24c98 = inttoptr i32 %v2_24c98 to i32*
  store i32 %v4_24c98, i32* %v21_24c98, align 4
  %v0_24c9c = load i32, i32* @ebp, align 4
  %v1_24ca2 = add i32 %v0_24c9c, -96
  %v1_24ca8 = call i32 @unknown_4f51c(i32 %v1_24ca2)
  %v1_24cad = inttoptr i32 %v1_24ca8 to i32*
  %v2_24cad = load i32, i32* %v1_24cad, align 4
  ret i32 %v2_24cad

; uselistorder directives
  uselistorder i32 %v2_24c98, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4f51c, { 2, 6, 1, 0, 5, 4, 3 }
}

define i32 @function_24cb2(i32 %arg1) local_unnamed_addr {
dec_label_pc_24cb2:
  %stack_var_-4 = alloca i32, align 4
  %v0_24cb2 = load i32, i32* @eax, align 4
  %v2_24cb2 = or i32 %v0_24cb2, zext (i8 ptrtoint (i8* @global_var_8b.2199 to i8) to i32)
  %v0_24cb6 = load i32, i32* @edx, align 4
  %v0_24cba = load i32, i32* @esi, align 4
  store i32 %v2_24cb2, i32* %stack_var_-4, align 4
  %v3_24cc1 = call i32 @unknown_4f4bf(i32 %v2_24cb2, i32 %v0_24cba, i32 %v0_24cb6)
  %v1_24cc6 = load i32, i32* @ebp, align 4
  %v2_24cc6 = add i32 %v1_24cc6, -52
  %v3_24cc6 = inttoptr i32 %v2_24cc6 to i32*
  store i32 %v3_24cc1, i32* %v3_24cc6, align 4
  %v0_24cc9 = load i32, i32* @ebp, align 4
  %v1_24cc9 = add i32 %v0_24cc9, -92
  %v2_24cc9 = inttoptr i32 %v1_24cc9 to i32*
  %v3_24cc9 = load i32, i32* %v2_24cc9, align 4
  store i32 %v3_24cc9, i32* %stack_var_-4, align 4
  %v1_24ccf = call i32 @unknown_41968(i32 %v3_24cc9)
  %v0_24cd4 = load i32, i32* @ebp, align 4
  %v1_24cd4 = add i32 %v0_24cd4, -92
  %v2_24cd4 = inttoptr i32 %v1_24cd4 to i32*
  %v3_24cd4 = load i32, i32* %v2_24cd4, align 4
  %v1_24cd7 = add i32 %v3_24cd4, 4
  %v2_24cd7 = inttoptr i32 %v1_24cd7 to i32*
  %v3_24cd7 = load i32, i32* %v2_24cd7, align 4
  %v1_24cdd = inttoptr i32 %v3_24cd4 to i32*
  %v2_24cdd = load i32, i32* %v1_24cdd, align 4
  store i32 %v2_24cdd, i32* %stack_var_-4, align 4
  %v3_24cea = call i32 @unknown_41995(i32 %v2_24cdd, i32 %v3_24cd7, i32 %v1_24ccf)
  %v0_24cef = load i32, i32* @ebp, align 4
  %v1_24cef = add i32 %v0_24cef, -92
  %v2_24cef = inttoptr i32 %v1_24cef to i32*
  %v3_24cef = load i32, i32* %v2_24cef, align 4
  %v1_24cf2 = add i32 %v3_24cef, 8
  %v2_24cf2 = inttoptr i32 %v1_24cf2 to i32*
  %v3_24cf2 = load i32, i32* %v2_24cf2, align 4
  %v1_24cfa = inttoptr i32 %v3_24cef to i32*
  %v2_24cfa = load i32, i32* %v1_24cfa, align 4
  %v2_24cfe = sub i32 %v3_24cf2, %v2_24cfa
  %v2_24d02 = sdiv i32 %v2_24cfe, 4
  %v3_24d05 = mul i32 %v2_24d02, -858993459
  %v3_24d0d = load i32, i32* %v2_24cef, align 4
  %v1_24d10 = inttoptr i32 %v3_24d0d to i32*
  %v2_24d10 = load i32, i32* %v1_24d10, align 4
  store i32 %v3_24d0d, i32* %stack_var_-4, align 4
  %v3_24d20 = call i32 @unknown_48608(i32 %v3_24d0d, i32 %v2_24d10, i32 %v3_24d05)
  %v0_24d25 = load i32, i32* @ebp, align 4
  %v1_24d25 = add i32 %v0_24d25, -92
  %v2_24d25 = inttoptr i32 %v1_24d25 to i32*
  %v3_24d25 = load i32, i32* %v2_24d25, align 4
  %v1_24d28 = add i32 %v0_24d25, -32
  %v2_24d28 = inttoptr i32 %v1_24d28 to i32*
  %v3_24d28 = load i32, i32* %v2_24d28, align 4
  %v2_24d2b = inttoptr i32 %v3_24d25 to i32*
  store i32 %v3_24d28, i32* %v2_24d2b, align 4
  %v0_24d2d = load i32, i32* @ebp, align 4
  %v1_24d2d = add i32 %v0_24d2d, -92
  %v2_24d2d = inttoptr i32 %v1_24d2d to i32*
  %v3_24d2d = load i32, i32* %v2_24d2d, align 4
  %v1_24d30 = add i32 %v0_24d2d, -52
  %v2_24d30 = inttoptr i32 %v1_24d30 to i32*
  %v3_24d30 = load i32, i32* %v2_24d30, align 4
  %v2_24d33 = add i32 %v3_24d2d, 4
  %v3_24d33 = inttoptr i32 %v2_24d33 to i32*
  store i32 %v3_24d30, i32* %v3_24d33, align 4
  %v0_24d36 = load i32, i32* @ebp, align 4
  %v1_24d36 = add i32 %v0_24d36, -40
  %v2_24d36 = inttoptr i32 %v1_24d36 to i32*
  %v3_24d36 = load i32, i32* %v2_24d36, align 4
  %v2_24d40 = mul i32 %v3_24d36, 20
  %v2_24d45 = add i32 %v0_24d36, -32
  %v3_24d45 = inttoptr i32 %v2_24d45 to i32*
  %v4_24d45 = load i32, i32* %v3_24d45, align 4
  %v5_24d45 = add i32 %v4_24d45, %v2_24d40
  %v1_24d48 = add i32 %v0_24d36, -92
  %v2_24d48 = inttoptr i32 %v1_24d48 to i32*
  %v3_24d48 = load i32, i32* %v2_24d48, align 4
  %v2_24d4b = add i32 %v3_24d48, 8
  %v3_24d4b = inttoptr i32 %v2_24d4b to i32*
  store i32 %v5_24d45, i32* %v3_24d4b, align 4
  %v0_24d4e = load i32, i32* %stack_var_-4, align 4
  %v4_24d4e = call i32 @function_24e0e(i32 %v0_24d4e, i32 %v2_24d10, i32 %v3_24d05, i32 ptrtoint (i32* @9 to i32))
  ret i32 %v4_24d4e

; uselistorder directives
  uselistorder i32 %v2_24d10, { 1, 0 }
  uselistorder i32 %v3_24d0d, { 1, 0, 2 }
  uselistorder i32 %v3_24d05, { 1, 0 }
  uselistorder i32 %v2_24cb2, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_24e0e, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_4f4bf, { 1, 3, 0, 2 }
}

define i32 @function_24d54() local_unnamed_addr {
dec_label_pc_24d54:
  %eax.global-to-local = alloca i32, align 4
  %v0_24d54 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24d54
}

define i32 @function_24d62(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24d62:
  %v3_24d62 = load i32, i32* @eax, align 4
  ret i32 %v3_24d62
}

define i32 @function_24d6b() local_unnamed_addr {
dec_label_pc_24d6b:
  %eax.global-to-local = alloca i32, align 4
  %v0_24d6b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_24d6b
}

define i32 @function_24d82() local_unnamed_addr {
dec_label_pc_24d82:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_24d82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_24d82 = add i32 %v0_24d82, 1962986621
  %v2_24d82 = inttoptr i32 %v1_24d82 to i32*
  %v3_24d82 = load i32, i32* %v2_24d82, align 4
  %v4_24d82 = add i32 %v3_24d82, 1
  store i32 %v4_24d82, i32* %v2_24d82, align 4
  %v0_24d88 = load i32, i32* %esi.global-to-local, align 4
  %v1_24d88 = add i32 %v0_24d88, 1
  store i32 %v1_24d88, i32* %esi.global-to-local, align 4
  %v0_24d89 = load i32, i32* @ebp, align 4
  %v1_24d89 = add i32 %v0_24d89, -92
  %v2_24d89 = inttoptr i32 %v1_24d89 to i32*
  %v3_24d89 = load i32, i32* %v2_24d89, align 4
  %v1_24d8f = call i32 @unknown_41968(i32 %v3_24d89)
  %v0_24d96 = load i32, i32* @ebp, align 4
  %v1_24d96 = add i32 %v0_24d96, -100
  %v2_24d96 = inttoptr i32 %v1_24d96 to i32*
  %v3_24d96 = load i32, i32* %v2_24d96, align 4
  %v1_24d99 = add i32 %v0_24d96, -36
  %v2_24d99 = inttoptr i32 %v1_24d99 to i32*
  %v3_24d99 = load i32, i32* %v2_24d99, align 4
  %v2_24d9c = add i32 %v3_24d99, %v3_24d96
  %v2_24da5 = mul i32 %v2_24d9c, 20
  store i32 %v2_24da5, i32* %ebx.global-to-local, align 4
  %v2_24daa = add i32 %v0_24d96, -32
  %v3_24daa = inttoptr i32 %v2_24daa to i32*
  %v4_24daa = load i32, i32* %v3_24daa, align 4
  %v5_24daa = add i32 %v4_24daa, %v2_24da5
  store i32 %v5_24daa, i32* %ebx.global-to-local, align 4
  %v3_24dad = load i32, i32* %v2_24d99, align 4
  %v2_24db7 = mul i32 %v3_24dad, 20
  %v4_24dba = load i32, i32* %v3_24daa, align 4
  %v5_24dba = add i32 %v4_24dba, %v2_24db7
  %v3_24dc8 = call i32 @unknown_41995(i32 %v5_24dba, i32 %v5_24daa, i32 %v1_24d8f)
  %v0_24dcd = call i32 @function_24df0()
  ret i32 %v0_24dcd

; uselistorder directives
  uselistorder i32 -100, { 0, 3, 4, 5, 15, 16, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 1, 2 }
}

define i32 @function_24dcf() local_unnamed_addr {
dec_label_pc_24dcf:
  %ebp.global-to-local = alloca i32, align 4
  %v0_24dcf = load i32, i32* %ebp.global-to-local, align 4
  %v1_24dcf = add i32 %v0_24dcf, -92
  %v2_24dcf = inttoptr i32 %v1_24dcf to i32*
  %v3_24dcf = load i32, i32* %v2_24dcf, align 4
  %v1_24dd5 = call i32 @unknown_41968(i32 %v3_24dcf)
  %v1_24dde = add i32 %v0_24dcf, -52
  %v2_24dde = inttoptr i32 %v1_24dde to i32*
  %v3_24dde = load i32, i32* %v2_24dde, align 4
  %v1_24de5 = add i32 %v0_24dcf, -32
  %v2_24de5 = inttoptr i32 %v1_24de5 to i32*
  %v3_24de5 = load i32, i32* %v2_24de5, align 4
  %v3_24deb = call i32 @unknown_41995(i32 %v3_24de5, i32 %v3_24dde, i32 %v1_24dd5)
  ret i32 %v3_24deb

; uselistorder directives
  uselistorder i32 %v0_24dcf, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_41995, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_41968, { 6, 5, 1, 4, 3, 0, 2 }
}

define i32 @function_24df0() local_unnamed_addr {
dec_label_pc_24df0:
  %v0_24df0 = load i32, i32* @ebp, align 4
  %v1_24df0 = add i32 %v0_24df0, -92
  %v2_24df0 = inttoptr i32 %v1_24df0 to i32*
  %v3_24df0 = load i32, i32* %v2_24df0, align 4
  %v1_24df3 = add i32 %v0_24df0, -40
  %v2_24df3 = inttoptr i32 %v1_24df3 to i32*
  %v3_24df3 = load i32, i32* %v2_24df3, align 4
  %v1_24dfa = add i32 %v0_24df0, -32
  %v2_24dfa = inttoptr i32 %v1_24dfa to i32*
  %v3_24dfa = load i32, i32* %v2_24dfa, align 4
  %v3_24e04 = call i32 @unknown_48608(i32 %v3_24df0, i32 %v3_24dfa, i32 %v3_24df3)
  ret i32 %v3_24e04

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_48608, { 1, 0 }
}

define i32 @function_24e09(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e09:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_24e0e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24e0e:
  %v0_24e0e = load i32, i32* @ebp, align 4
  %v1_24e0e = add i32 %v0_24e0e, -28
  %v2_24e0e = inttoptr i32 %v1_24e0e to i32*
  %v3_24e0e = load i32, i32* %v2_24e0e, align 4
  %v1_24e11 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24e11 = xor i32 %v1_24e11, %v3_24e0e
  %v3_24e11 = icmp eq i32 %v2_24e11, 0
  store i32 %v2_24e11, i32* @eax, align 4
  br i1 %v3_24e11, label %bb, label %dec_label_pc_24e1a

bb:                                               ; preds = %dec_label_pc_24e0e
  %v1_24e18 = call i32 @function_24e1f()
  br label %dec_label_pc_24e1a

dec_label_pc_24e1a:                               ; preds = %bb, %dec_label_pc_24e0e
  %v2_24e18 = phi i32 [ %v1_24e18, %bb ], [ %v2_24e11, %dec_label_pc_24e0e ]
  ret i32 %v2_24e18
}

define i32 @function_24e1f() local_unnamed_addr {
dec_label_pc_24e1f:
  %v0_24e1f = load i32, i32* @ebp, align 4
  %v1_24e1f = add i32 %v0_24e1f, -12
  %v1_24e22 = inttoptr i32 %v1_24e1f to i32*
  %v2_24e22 = load i32, i32* %v1_24e22, align 4
  store i32 %v2_24e22, i32* @ebx, align 4
  %v3_24e22 = add i32 %v0_24e1f, -8
  %v1_24e23 = inttoptr i32 %v3_24e22 to i32*
  %v2_24e23 = load i32, i32* %v1_24e23, align 4
  store i32 %v2_24e23, i32* @esi, align 4
  %v3_24e23 = add i32 %v0_24e1f, -4
  %v1_24e24 = inttoptr i32 %v3_24e23 to i32*
  %v2_24e24 = load i32, i32* %v1_24e24, align 4
  store i32 %v2_24e24, i32* @edi, align 4
  %v1_24e25 = inttoptr i32 %v0_24e1f to i32*
  %v2_24e25 = load i32, i32* %v1_24e25, align 4
  store i32 %v2_24e25, i32* @ebp, align 4
  %v0_24e26 = load i32, i32* @eax, align 4
  ret i32 %v0_24e26
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e28:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v1_24e48 = inttoptr i32 %arg2 to i32*
  %v2_24e48 = load i32, i32* %v1_24e48, align 4
  store i32 %v2_24e48, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_24e51(i32 %arg1) local_unnamed_addr {
dec_label_pc_24e51:
  %v0_24e52 = load i32, i32* @eax, align 4
  %v1_24e52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_24e52 = xor i32 %v1_24e52, %v0_24e52
  %v3_24e52 = icmp eq i32 %v2_24e52, 0
  store i32 %v2_24e52, i32* @eax, align 4
  br i1 %v3_24e52, label %bb, label %dec_label_pc_24e5b

bb:                                               ; preds = %dec_label_pc_24e51
  %v1_24e59 = call i32 @function_24e60()
  br label %dec_label_pc_24e5b

dec_label_pc_24e5b:                               ; preds = %bb, %dec_label_pc_24e51
  %v2_24e59 = phi i32 [ %v1_24e59, %bb ], [ %v2_24e52, %dec_label_pc_24e51 ]
  ret i32 %v2_24e59
}

define i32 @function_24e60() local_unnamed_addr {
dec_label_pc_24e60:
  %v0_24e61 = load i32, i32* @eax, align 4
  ret i32 %v0_24e61
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS0_S2_EEjRKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_24e62:
  ret i32 0
}

define i32 @function_24e95(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_24e95:
  %ebx.global-to-local = alloca i32, align 4
  %v2_24e95 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_24e95 = load i32, i32* @eax, align 4
  %v4_24e95 = trunc i32 %v3_24e95 to i8
  %v5_24e95 = add i8 %v4_24e95, %v2_24e95
  %v21_24e95 = inttoptr i32 %v3_24e95 to i8*
  store i8 %v5_24e95, i8* %v21_24e95, align 1
  %v0_24e97 = load i32, i32* @ebp, align 4
  %v1_24e97 = add i32 %v0_24e97, -108
  %v2_24e97 = inttoptr i32 %v1_24e97 to i32*
  %v3_24e97 = load i32, i32* %v2_24e97, align 4
  %v1_24e9a = add i32 %v3_24e97, 8
  %v2_24e9a = inttoptr i32 %v1_24e9a to i32*
  %v3_24e9a = load i32, i32* %v2_24e9a, align 4
  %v1_24ea2 = add i32 %v3_24e97, 4
  %v2_24ea2 = inttoptr i32 %v1_24ea2 to i32*
  %v3_24ea2 = load i32, i32* %v2_24ea2, align 4
  %v2_24ea7 = sub i32 %v3_24e9a, %v3_24ea2
  store i32 %v2_24ea7, i32* @ecx, align 4
  %v2_24eab = sdiv i32 %v2_24ea7, 4
  %v3_24eae = mul i32 %v2_24eab, -991146299
  %v2_24eb4 = add i32 %v0_24e97, -116
  %v3_24eb4 = inttoptr i32 %v2_24eb4 to i32*
  %v4_24eb4 = load i32, i32* %v3_24eb4, align 4
  %v10_24eb4 = icmp ult i32 %v3_24eae, %v4_24eb4
  br i1 %v10_24eb4, label %bb, label %dec_label_pc_24ebd

bb:                                               ; preds = %dec_label_pc_24e95
  %v1_24eb7 = call i32 @function_25090()
  %v0_24ebd.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_24ebd

dec_label_pc_24ebd:                               ; preds = %bb, %dec_label_pc_24e95
  %v0_24ebd = phi i32 [ %v0_24ebd.pre, %bb ], [ %v0_24e97, %dec_label_pc_24e95 ]
  %v1_24ebd = add i32 %v0_24ebd, -120
  %v2_24ebd = inttoptr i32 %v1_24ebd to i32*
  %v3_24ebd = load i32, i32* %v2_24ebd, align 4
  %v1_24ec4 = add i32 %v0_24ebd, -64
  %v2_24eca = call i32 @function_38a04(i32 %v1_24ec4, i32 %v3_24ebd)
  %v0_24ecf = load i32, i32* @ebp, align 4
  %v1_24ecf = add i32 %v0_24ecf, -96
  %v1_24ed2 = add i32 %v0_24ecf, -108
  %v2_24ed2 = inttoptr i32 %v1_24ed2 to i32*
  %v3_24ed2 = load i32, i32* %v2_24ed2, align 4
  %v2_24edc = call i32 @unknown_43266(i32 %v1_24ecf, i32 %v3_24ed2)
  %v0_24ee4 = load i32, i32* @ebp, align 4
  %v1_24ee4 = add i32 %v0_24ee4, -112
  %v1_24eeb = add i32 %v0_24ee4, -96
  %v2_24ef1 = call i32 @unknown_4fc45(i32 %v1_24eeb, i32 %v1_24ee4)
  %v1_24ef6 = load i32, i32* @ebp, align 4
  %v2_24ef6 = add i32 %v1_24ef6, -84
  %v3_24ef6 = inttoptr i32 %v2_24ef6 to i32*
  store i32 %v2_24ef1, i32* %v3_24ef6, align 4
  %v0_24ef9 = load i32, i32* @ebp, align 4
  %v1_24ef9 = add i32 %v0_24ef9, -108
  %v2_24ef9 = inttoptr i32 %v1_24ef9 to i32*
  %v3_24ef9 = load i32, i32* %v2_24ef9, align 4
  %v1_24efc = add i32 %v3_24ef9, 4
  %v2_24efc = inttoptr i32 %v1_24efc to i32*
  %v3_24efc = load i32, i32* %v2_24efc, align 4
  %v2_24eff = add i32 %v0_24ef9, -80
  %v3_24eff = inttoptr i32 %v2_24eff to i32*
  store i32 %v3_24efc, i32* %v3_24eff, align 4
  %v0_24f02 = load i32, i32* @ebp, align 4
  %v1_24f02 = add i32 %v0_24f02, -84
  %v2_24f02 = inttoptr i32 %v1_24f02 to i32*
  %v3_24f02 = load i32, i32* %v2_24f02, align 4
  %v2_24f05 = add i32 %v0_24f02, -116
  %v3_24f05 = inttoptr i32 %v2_24f05 to i32*
  %v4_24f05 = load i32, i32* %v3_24f05, align 4
  %tmp6 = icmp ugt i32 %v3_24f02, %v4_24f05
  %v1_24fc5 = add i32 %v0_24f02, -108
  %v2_24fc5 = inttoptr i32 %v1_24fc5 to i32*
  %v3_24fc5 = load i32, i32* %v2_24fc5, align 4
  %v1_24fcb = call i32 @unknown_41d12(i32 %v3_24fc5)
  %v0_24fd0 = load i32, i32* @ebp, align 4
  br i1 %tmp6, label %dec_label_pc_24f0e, label %dec_label_pc_24fc5

dec_label_pc_24f0e:                               ; preds = %dec_label_pc_24ebd
  %v1_24f19 = add i32 %v0_24fd0, -108
  %v2_24f19 = inttoptr i32 %v1_24f19 to i32*
  %v3_24f19 = load i32, i32* %v2_24f19, align 4
  %v1_24f1c = add i32 %v3_24f19, 4
  %v2_24f1c = inttoptr i32 %v1_24f1c to i32*
  %v3_24f1c = load i32, i32* %v2_24f1c, align 4
  %v1_24f22 = add i32 %v3_24f19, 4
  %v2_24f22 = inttoptr i32 %v1_24f22 to i32*
  %v3_24f22 = load i32, i32* %v2_24f22, align 4
  %v3_24f25 = load i32, i32* %v2_24f19, align 4
  store i32 %v3_24f25, i32* %ebx.global-to-local, align 4
  %v1_24f28 = add i32 %v3_24f25, 4
  %v2_24f28 = inttoptr i32 %v1_24f28 to i32*
  %v3_24f28 = load i32, i32* %v2_24f28, align 4
  store i32 %v3_24f28, i32* %ebx.global-to-local, align 4
  %v1_24f2b = add i32 %v0_24fd0, -116
  %v2_24f2b = inttoptr i32 %v1_24f2b to i32*
  %v3_24f2b = load i32, i32* %v2_24f2b, align 4
  %tmp7 = mul i32 %v3_24f2b, -52
  %v2_24f33 = add i32 %v3_24f28, %tmp7
  store i32 %v2_24f33, i32* %ebx.global-to-local, align 4
  %v4_24f44 = call i32 @unknown_4fca5(i32 %v2_24f33, i32 %v3_24f22, i32 %v3_24f1c, i32 %v1_24fcb)
  %v0_24f49 = load i32, i32* @ebp, align 4
  %v1_24f49 = add i32 %v0_24f49, -108
  %v2_24f49 = inttoptr i32 %v1_24f49 to i32*
  %v3_24f49 = load i32, i32* %v2_24f49, align 4
  %v1_24f4c = add i32 %v3_24f49, 4
  %v2_24f4c = inttoptr i32 %v1_24f4c to i32*
  %v3_24f4c = load i32, i32* %v2_24f4c, align 4
  %v1_24f4f = add i32 %v0_24f49, -116
  %v2_24f4f = inttoptr i32 %v1_24f4f to i32*
  %v3_24f4f = load i32, i32* %v2_24f4f, align 4
  %v3_24f52 = mul i32 %v3_24f4f, 52
  %v2_24f55 = add i32 %v3_24f52, %v3_24f4c
  %v3_24f57 = load i32, i32* %v2_24f49, align 4
  %v2_24f5a = add i32 %v3_24f57, 4
  %v3_24f5a = inttoptr i32 %v2_24f5a to i32*
  store i32 %v2_24f55, i32* %v3_24f5a, align 4
  %v0_24f5d = load i32, i32* @ebp, align 4
  %v1_24f5d = add i32 %v0_24f5d, -116
  %v2_24f5d = inttoptr i32 %v1_24f5d to i32*
  %v3_24f5d = load i32, i32* %v2_24f5d, align 4
  %v3_24f60 = mul i32 %v3_24f5d, 52
  %v1_24f63 = sub i32 0, %v3_24f60
  store i32 %v1_24f63, i32* %ebx.global-to-local, align 4
  %v2_24f67 = add i32 %v0_24f5d, -80
  %v3_24f67 = inttoptr i32 %v2_24f67 to i32*
  %v4_24f67 = load i32, i32* %v3_24f67, align 4
  %v5_24f67 = sub i32 %v4_24f67, %v3_24f60
  store i32 %v5_24f67, i32* %ebx.global-to-local, align 4
  %v1_24f6a = add i32 %v0_24f5d, -112
  %v1_24f70 = call i32 @unknown_4fd02(i32 %v1_24f6a)
  %v1_24f75 = inttoptr i32 %v1_24f70 to i32*
  %v2_24f75 = load i32, i32* %v1_24f75, align 4
  %v0_24f77 = load i32, i32* @ebp, align 4
  %v1_24f77 = add i32 %v0_24f77, -80
  %v2_24f77 = inttoptr i32 %v1_24f77 to i32*
  %v3_24f77 = load i32, i32* %v2_24f77, align 4
  %v0_24f7e = load i32, i32* %ebx.global-to-local, align 4
  %v3_24f85 = call i32 @unknown_4fd2f(i32 %v2_24f75, i32 %v0_24f7e, i32 %v3_24f77)
  %v0_24f8a = load i32, i32* @ebp, align 4
  %v1_24f8a = add i32 %v0_24f8a, -112
  %v1_24f90 = call i32 @unknown_4fd02(i32 %v1_24f8a)
  %v1_24f95 = inttoptr i32 %v1_24f90 to i32*
  %v2_24f95 = load i32, i32* %v1_24f95, align 4
  %v0_24f97 = load i32, i32* @ebp, align 4
  %v1_24f97 = add i32 %v0_24f97, -116
  %v2_24f97 = inttoptr i32 %v1_24f97 to i32*
  %v3_24f97 = load i32, i32* %v2_24f97, align 4
  %v3_24f9a = mul i32 %v3_24f97, 52
  %v3_24f9d = add i32 %v3_24f9a, %v2_24f95
  store i32 %v3_24f9d, i32* %ebx.global-to-local, align 4
  %v1_24fa0 = add i32 %v0_24f97, -112
  %v1_24fa6 = call i32 @unknown_4fd02(i32 %v1_24fa0)
  %v1_24fab = inttoptr i32 %v1_24fa6 to i32*
  %v2_24fab = load i32, i32* %v1_24fab, align 4
  %v1_24fbb = call i32 @unknown_4fd95(i32 %v2_24fab)
  ret i32 %v1_24fbb

dec_label_pc_24fc5:                               ; preds = %dec_label_pc_24ebd
  ret i32 %v1_24fcb

; uselistorder directives
  uselistorder i32 %v3_24f60, { 1, 0 }
  uselistorder i32 %v2_24f33, { 1, 0 }
  uselistorder i32 %v0_24ebd, { 1, 0 }
  uselistorder i32 -96, { 27, 28, 18, 12, 13, 32, 33, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 29, 30, 31, 34, 35, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
}

define i32 @function_24fe3(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_24fe3:
  %ebx.global-to-local = alloca i32, align 4
  %v0_24fe3 = load i32, i32* @ebp, align 4
  %v1_24fe3 = add i32 %v0_24fe3, 1
  store i32 %v1_24fe3, i32* @ebp, align 4
  %v0_24fed = load i32, i32* @edx, align 4
  %v1_24ff0 = call i32 @unknown_4fdfb(i32 %v0_24fed)
  %v0_24ff5 = load i32, i32* @ebp, align 4
  %v1_24ff5 = add i32 %v0_24ff5, -108
  %v2_24ff5 = inttoptr i32 %v1_24ff5 to i32*
  %v3_24ff5 = load i32, i32* %v2_24ff5, align 4
  %v1_24ff8 = add i32 %v3_24ff5, 4
  %v2_24ff8 = inttoptr i32 %v1_24ff8 to i32*
  %v3_24ff8 = load i32, i32* %v2_24ff8, align 4
  %v1_24ffb = add i32 %v0_24ff5, -84
  %v2_24ffb = inttoptr i32 %v1_24ffb to i32*
  %v3_24ffb = load i32, i32* %v2_24ffb, align 4
  %v1_24ffe = add i32 %v0_24ff5, -116
  %v2_24ffe = inttoptr i32 %v1_24ffe to i32*
  %v3_24ffe = load i32, i32* %v2_24ffe, align 4
  %v2_25003 = sub i32 %v3_24ffe, %v3_24ffb
  store i32 %v2_25003, i32* %ebx.global-to-local, align 4
  %v3_25007 = mul i32 %v2_25003, 52
  %v2_2500a = add i32 %v3_25007, %v3_24ff8
  %v3_2500c = load i32, i32* %v2_24ff5, align 4
  %v2_2500f = add i32 %v3_2500c, 4
  %v3_2500f = inttoptr i32 %v2_2500f to i32*
  store i32 %v2_2500a, i32* %v3_2500f, align 4
  %v0_25012 = load i32, i32* @ebp, align 4
  %v1_25012 = add i32 %v0_25012, -108
  %v2_25012 = inttoptr i32 %v1_25012 to i32*
  %v3_25012 = load i32, i32* %v2_25012, align 4
  %v1_25018 = call i32 @unknown_41d12(i32 %v3_25012)
  store i32 %v1_25018, i32* %ebx.global-to-local, align 4
  %v0_2501f = load i32, i32* @ebp, align 4
  %v1_2501f = add i32 %v0_2501f, -108
  %v2_2501f = inttoptr i32 %v1_2501f to i32*
  %v3_2501f = load i32, i32* %v2_2501f, align 4
  %v1_25022 = add i32 %v3_2501f, 4
  %v2_25022 = inttoptr i32 %v1_25022 to i32*
  %v3_25022 = load i32, i32* %v2_25022, align 4
  %v1_25025 = add i32 %v0_2501f, -112
  %v1_2502b = call i32 @unknown_4fd02(i32 %v1_25025)
  %v1_25030 = inttoptr i32 %v1_2502b to i32*
  %v2_25030 = load i32, i32* %v1_25030, align 4
  %v0_25032 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2503a = load i32, i32* @ebp, align 4
  %v1_2503a = add i32 %v0_2503a, -80
  %v2_2503a = inttoptr i32 %v1_2503a to i32*
  %v3_2503a = load i32, i32* %v2_2503a, align 4
  %v4_25044 = call i32 @unknown_4fca5(i32 %v2_25030, i32 %v3_2503a, i32 %v3_25022, i32 %v0_25032)
  %v0_25049 = load i32, i32* @ebp, align 4
  %v1_25049 = add i32 %v0_25049, -108
  %v2_25049 = inttoptr i32 %v1_25049 to i32*
  %v3_25049 = load i32, i32* %v2_25049, align 4
  %v1_2504c = add i32 %v3_25049, 4
  %v2_2504c = inttoptr i32 %v1_2504c to i32*
  %v3_2504c = load i32, i32* %v2_2504c, align 4
  %v1_2504f = add i32 %v0_25049, -84
  %v2_2504f = inttoptr i32 %v1_2504f to i32*
  %v3_2504f = load i32, i32* %v2_2504f, align 4
  %v3_25052 = mul i32 %v3_2504f, 52
  %v2_25055 = add i32 %v3_25052, %v3_2504c
  %v3_25057 = load i32, i32* %v2_25049, align 4
  %v2_2505a = add i32 %v3_25057, 4
  %v3_2505a = inttoptr i32 %v2_2505a to i32*
  store i32 %v2_25055, i32* %v3_2505a, align 4
  %v0_2505d = load i32, i32* @ebp, align 4
  %v1_2505d = add i32 %v0_2505d, -112
  %v1_25063 = call i32 @unknown_4fd02(i32 %v1_2505d)
  %v1_25068 = inttoptr i32 %v1_25063 to i32*
  %v2_25068 = load i32, i32* %v1_25068, align 4
  ret i32 %v2_25068

; uselistorder directives
  uselistorder i32 %v0_24ff5, { 1, 0, 2 }
  uselistorder i32 -84, { 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2 }
}

define i32 @function_25006() local_unnamed_addr {
dec_label_pc_25006:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25076(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25076:
  %v0_25076 = load i32, i32* @eax, align 4
  %v11_25076 = and i32 %v0_25076, -252
  %v1_2507b = call i32 @unknown_4fd95(i32 %v11_25076)
  %v0_25080 = load i32, i32* @ebp, align 4
  %v1_25080 = add i32 %v0_25080, -64
  store i32 %v1_25080, i32* @eax, align 4
  %v1_25086 = call i32 @function_389cc(i32 %v1_25080)
  store i32 %v1_25086, i32* @eax, align 4
  %v0_2508b = call i32 @function_252d1()
  ret i32 %v0_2508b
}

define i32 @function_25090() local_unnamed_addr {
dec_label_pc_25090:
  %v0_25098 = load i32, i32* @ebp, align 4
  %v1_25098 = add i32 %v0_25098, -116
  %v2_25098 = inttoptr i32 %v1_25098 to i32*
  %v3_25098 = load i32, i32* %v2_25098, align 4
  %v1_2509f = add i32 %v0_25098, -108
  %v2_2509f = inttoptr i32 %v1_2509f to i32*
  %v3_2509f = load i32, i32* %v2_2509f, align 4
  %v4_250a5 = call i32 @unknown_4fe50(i32 %v3_2509f, i32 %v3_25098, i32 ptrtoint ([23 x i8]* @global_var_c61b.2286 to i32))
  %v1_250aa = load i32, i32* @ebp, align 4
  %v2_250aa = add i32 %v1_250aa, -76
  %v3_250aa = inttoptr i32 %v2_250aa to i32*
  store i32 %v4_250a5, i32* %v3_250aa, align 4
  %v0_250ad = load i32, i32* @ebp, align 4
  %v1_250ad = add i32 %v0_250ad, -92
  %v1_250b0 = add i32 %v0_250ad, -108
  %v2_250b0 = inttoptr i32 %v1_250b0 to i32*
  %v3_250b0 = load i32, i32* %v2_250b0, align 4
  %v2_250ba = call i32 @unknown_4ff22(i32 %v1_250ad, i32 %v3_250b0)
  %v0_250c2 = load i32, i32* @ebp, align 4
  %v1_250c2 = add i32 %v0_250c2, -92
  %v1_250c9 = add i32 %v0_250c2, -112
  %v2_250cf = call i32 @unknown_4fc45(i32 %v1_250c9, i32 %v1_250c2)
  %v1_250d4 = load i32, i32* @ebp, align 4
  %v2_250d4 = add i32 %v1_250d4, -72
  %v3_250d4 = inttoptr i32 %v2_250d4 to i32*
  store i32 %v2_250cf, i32* %v3_250d4, align 4
  %v0_250d7 = load i32, i32* @ebp, align 4
  %v1_250d7 = add i32 %v0_250d7, -108
  %v2_250d7 = inttoptr i32 %v1_250d7 to i32*
  %v3_250d7 = load i32, i32* %v2_250d7, align 4
  %v1_250da = add i32 %v0_250d7, -76
  %v2_250da = inttoptr i32 %v1_250da to i32*
  %v3_250da = load i32, i32* %v2_250da, align 4
  %v2_250e4 = call i32 @unknown_49708(i32 %v3_250d7, i32 %v3_250da)
  %v1_250e9 = load i32, i32* @ebp, align 4
  %v2_250e9 = add i32 %v1_250e9, -68
  %v3_250e9 = inttoptr i32 %v2_250e9 to i32*
  store i32 %v2_250e4, i32* %v3_250e9, align 4
  %v0_250ec = load i32, i32* @ebp, align 4
  %v1_250ec = add i32 %v0_250ec, -68
  %v2_250ec = inttoptr i32 %v1_250ec to i32*
  %v3_250ec = load i32, i32* %v2_250ec, align 4
  %v2_250ef = add i32 %v0_250ec, -88
  %v3_250ef = inttoptr i32 %v2_250ef to i32*
  store i32 %v3_250ec, i32* %v3_250ef, align 4
  %v0_250f2 = load i32, i32* @ebp, align 4
  %v1_250f2 = add i32 %v0_250f2, -108
  %v2_250f2 = inttoptr i32 %v1_250f2 to i32*
  %v3_250f2 = load i32, i32* %v2_250f2, align 4
  ret i32 %v3_250f2

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4fc45, { 1, 0 }
  uselistorder i32 -92, { 30, 31, 1, 0, 2, 21, 22, 23, 24, 25, 26, 9, 10, 11, 12, 13, 14, 15, 38, 39, 40, 41, 42, 17, 18, 16, 19, 20, 3, 32, 33, 27, 28, 29, 4, 35, 34, 36, 37, 43, 44, 5, 6, 7, 8 }
}

define i32 @function_25102(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25102:
  %v0_25104 = load i32, i32* @ebp, align 4
  %v1_2510a = add i32 %v0_25104, -120
  %v2_2510a = inttoptr i32 %v1_2510a to i32*
  %v3_2510a = load i32, i32* %v2_2510a, align 4
  store i32 %v3_2510a, i32* inttoptr (i32 203703441 to i32*), align 4
  %v0_25111 = load i32, i32* @ebp, align 4
  %v1_25111 = add i32 %v0_25111, -116
  %v2_25111 = inttoptr i32 %v1_25111 to i32*
  %v3_25111 = load i32, i32* %v2_25111, align 4
  %v1_25114 = load i32, i32* @esp, align 4
  %v2_25114 = add i32 %v1_25114, 4
  %v3_25114 = inttoptr i32 %v2_25114 to i32*
  store i32 %v3_25111, i32* %v3_25114, align 4
  %v0_25118 = load i32, i32* @edx, align 4
  %v1_25118 = load i32, i32* @esp, align 4
  %v2_25118 = inttoptr i32 %v1_25118 to i32*
  store i32 %v0_25118, i32* %v2_25118, align 4
  %v1_2511b = call i32 @unknown_4fdfb(i32 %v0_25104)
  ret i32 %v1_2511b

; uselistorder directives
  uselistorder i32 -120, { 10, 8, 0, 9, 3, 1, 2, 4, 5, 6, 7 }
}

define i32 @function_25124(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25124:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v2_25124 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_25124 = load i32, i32* @eax, align 4
  %v4_25124 = trunc i32 %v3_25124 to i8
  %v5_25124 = add i8 %v4_25124, %v2_25124
  %v21_25124 = inttoptr i32 %v3_25124 to i8*
  store i8 %v5_25124, i8* %v21_25124, align 1
  %v0_25126 = load i32, i32* @ebx, align 4
  %v1_25126 = add i32 %v0_25126, 76125253
  %v2_25126 = inttoptr i32 %v1_25126 to i8*
  %v3_25126 = load i8, i8* %v2_25126, align 1
  %v4_25126 = load i32, i32* @ecx, align 4
  %v5_25126 = trunc i32 %v4_25126 to i8
  %v6_25126 = add i8 %v5_25126, %v3_25126
  store i8 %v6_25126, i8* %v2_25126, align 1
  %v0_2512c = load i32, i32* @eax, align 4
  %v11_2512c = and i32 %v0_2512c, -24
  store i32 %v11_2512c, i32* %eax.global-to-local, align 4
  %v1_25130 = inttoptr i32 %v11_2512c to i32*
  %v2_25130 = load i32, i32* %v1_25130, align 8
  %v4_25130 = add i32 %v2_25130, %v11_2512c
  store i32 %v4_25130, i32* %v1_25130, align 8
  %v0_25132 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_25132, i32* %ebx.global-to-local, align 4
  %v0_25134 = load i32, i32* @ebp, align 4
  %v1_25134 = add i32 %v0_25134, -112
  store i32 %v1_25134, i32* %eax.global-to-local, align 4
  %v1_2513a = call i32 @unknown_4fd02(i32 %v1_25134)
  store i32 %v1_2513a, i32* %eax.global-to-local, align 4
  %v1_2513f = inttoptr i32 %v1_2513a to i32*
  %v2_2513f = load i32, i32* %v1_2513f, align 4
  %v0_25141 = load i32, i32* @ebp, align 4
  %v1_25141 = add i32 %v0_25141, -108
  %v2_25141 = inttoptr i32 %v1_25141 to i32*
  %v3_25141 = load i32, i32* %v2_25141, align 4
  store i32 %v3_25141, i32* %eax.global-to-local, align 4
  %v1_25144 = inttoptr i32 %v3_25141 to i32*
  %v2_25144 = load i32, i32* %v1_25144, align 4
  store i32 %v2_25144, i32* %eax.global-to-local, align 4
  %v0_25146 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2514a = add i32 %v0_25141, -68
  %v2_2514a = inttoptr i32 %v1_2514a to i32*
  %v3_2514a = load i32, i32* %v2_2514a, align 4
  %v4_25158 = call i32 @unknown_4fca5(i32 %v2_25144, i32 %v2_2513f, i32 %v3_2514a, i32 %v0_25146)
  store i32 %v4_25158, i32* %eax.global-to-local, align 4
  %v1_2515d = load i32, i32* @ebp, align 4
  %v2_2515d = add i32 %v1_2515d, -88
  %v3_2515d = inttoptr i32 %v2_2515d to i32*
  store i32 %v4_25158, i32* %v3_2515d, align 4
  %v0_25160 = load i32, i32* @ebp, align 4
  %v1_25160 = add i32 %v0_25160, -116
  %v2_25160 = inttoptr i32 %v1_25160 to i32*
  %v3_25160 = load i32, i32* %v2_25160, align 4
  %v3_25163 = mul i32 %v3_25160, 52
  store i32 %v3_25163, i32* %eax.global-to-local, align 4
  %v1_25166 = add i32 %v0_25160, -88
  %v2_25166 = inttoptr i32 %v1_25166 to i32*
  %v3_25166 = load i32, i32* %v2_25166, align 4
  %v5_25166 = add i32 %v3_25166, %v3_25163
  store i32 %v5_25166, i32* %v2_25166, align 4
  %v0_25169 = load i32, i32* @ebp, align 4
  %v1_25169 = add i32 %v0_25169, -108
  %v2_25169 = inttoptr i32 %v1_25169 to i32*
  %v3_25169 = load i32, i32* %v2_25169, align 4
  store i32 %v3_25169, i32* %eax.global-to-local, align 4
  %v1_2516f = call i32 @unknown_41d12(i32 %v3_25169)
  store i32 %v1_2516f, i32* %eax.global-to-local, align 4
  store i32 %v1_2516f, i32* %ebx.global-to-local, align 4
  %v0_25176 = load i32, i32* @ebp, align 4
  %v1_25176 = add i32 %v0_25176, -108
  %v2_25176 = inttoptr i32 %v1_25176 to i32*
  %v3_25176 = load i32, i32* %v2_25176, align 4
  store i32 %v3_25176, i32* %eax.global-to-local, align 4
  %v1_25179 = add i32 %v3_25176, 4
  %v2_25179 = inttoptr i32 %v1_25179 to i32*
  %v3_25179 = load i32, i32* %v2_25179, align 4
  store i32 %v3_25179, i32* %esi.global-to-local, align 4
  %v1_2517c = add i32 %v0_25176, -112
  store i32 %v1_2517c, i32* %eax.global-to-local, align 4
  %v1_25182 = call i32 @unknown_4fd02(i32 %v1_2517c)
  store i32 %v1_25182, i32* %eax.global-to-local, align 4
  %v1_25187 = inttoptr i32 %v1_25182 to i32*
  %v2_25187 = load i32, i32* %v1_25187, align 4
  store i32 %v2_25187, i32* %eax.global-to-local, align 4
  %v0_25189 = load i32, i32* %ebx.global-to-local, align 4
  %v0_2518d = load i32, i32* @ebp, align 4
  %v1_2518d = add i32 %v0_2518d, -88
  %v2_2518d = inttoptr i32 %v1_2518d to i32*
  %v3_2518d = load i32, i32* %v2_2518d, align 4
  %v0_25194 = load i32, i32* %esi.global-to-local, align 4
  %v4_2519b = call i32 @unknown_4fca5(i32 %v2_25187, i32 %v0_25194, i32 %v3_2518d, i32 %v0_25189)
  store i32 %v4_2519b, i32* %eax.global-to-local, align 4
  %v1_251a0 = load i32, i32* @ebp, align 4
  %v2_251a0 = add i32 %v1_251a0, -88
  %v3_251a0 = inttoptr i32 %v2_251a0 to i32*
  store i32 %v4_2519b, i32* %v3_251a0, align 4
  %v0_251a3 = load i32, i32* @ebp, align 4
  %v1_251a3 = add i32 %v0_251a3, -108
  %v2_251a3 = inttoptr i32 %v1_251a3 to i32*
  %v3_251a3 = load i32, i32* %v2_251a3, align 4
  store i32 %v3_251a3, i32* %eax.global-to-local, align 4
  %v1_251a9 = call i32 @unknown_41d12(i32 %v3_251a3)
  store i32 %v1_251a9, i32* %eax.global-to-local, align 4
  %v0_251ae = load i32, i32* @ebp, align 4
  %v1_251ae = add i32 %v0_251ae, -108
  %v2_251ae = inttoptr i32 %v1_251ae to i32*
  %v3_251ae = load i32, i32* %v2_251ae, align 4
  %v1_251b1 = add i32 %v3_251ae, 4
  %v2_251b1 = inttoptr i32 %v1_251b1 to i32*
  %v3_251b1 = load i32, i32* %v2_251b1, align 4
  %v1_251b7 = inttoptr i32 %v3_251ae to i32*
  %v2_251b7 = load i32, i32* %v1_251b7, align 4
  %v3_251c4 = call i32 @unknown_41d3f(i32 %v2_251b7, i32 %v3_251b1, i32 %v1_251a9)
  store i32 %v3_251c4, i32* %eax.global-to-local, align 4
  %v0_251c9 = load i32, i32* @ebp, align 4
  %v1_251c9 = add i32 %v0_251c9, -108
  %v2_251c9 = inttoptr i32 %v1_251c9 to i32*
  %v3_251c9 = load i32, i32* %v2_251c9, align 4
  store i32 %v3_251c9, i32* %eax.global-to-local, align 4
  %v1_251cc = add i32 %v3_251c9, 8
  %v2_251cc = inttoptr i32 %v1_251cc to i32*
  %v3_251cc = load i32, i32* %v2_251cc, align 4
  store i32 %v3_251cc, i32* %eax.global-to-local, align 4
  %v3_251d1 = load i32, i32* %v2_251c9, align 4
  store i32 %v3_251d1, i32* %eax.global-to-local, align 4
  %v1_251d4 = inttoptr i32 %v3_251d1 to i32*
  %v2_251d4 = load i32, i32* %v1_251d4, align 4
  %v2_251d8 = sub i32 %v3_251cc, %v2_251d4
  %v2_251dc = sdiv i32 %v2_251d8, 4
  %v3_251df = mul i32 %v2_251dc, -991146299
  store i32 %v3_251df, i32* %eax.global-to-local, align 4
  %v3_251e7 = load i32, i32* %v2_251c9, align 4
  store i32 %v3_251e7, i32* %eax.global-to-local, align 4
  %v3_251ec = load i32, i32* %v2_251c9, align 4
  store i32 %v3_251ec, i32* %eax.global-to-local, align 4
  %v1_251fa = call i32 @unknown_48a34(i32 %v3_251ec)
  store i32 %v1_251fa, i32* %eax.global-to-local, align 4
  %v0_251ff = load i32, i32* @ebp, align 4
  %v1_251ff = add i32 %v0_251ff, -108
  %v2_251ff = inttoptr i32 %v1_251ff to i32*
  %v3_251ff = load i32, i32* %v2_251ff, align 4
  store i32 %v3_251ff, i32* %eax.global-to-local, align 4
  %v1_25202 = add i32 %v0_251ff, -68
  %v2_25202 = inttoptr i32 %v1_25202 to i32*
  %v3_25202 = load i32, i32* %v2_25202, align 4
  %v2_25205 = inttoptr i32 %v3_251ff to i32*
  store i32 %v3_25202, i32* %v2_25205, align 4
  %v0_25207 = load i32, i32* @ebp, align 4
  %v1_25207 = add i32 %v0_25207, -108
  %v2_25207 = inttoptr i32 %v1_25207 to i32*
  %v3_25207 = load i32, i32* %v2_25207, align 4
  store i32 %v3_25207, i32* %eax.global-to-local, align 4
  %v1_2520a = add i32 %v0_25207, -88
  %v2_2520a = inttoptr i32 %v1_2520a to i32*
  %v3_2520a = load i32, i32* %v2_2520a, align 4
  %v2_2520d = add i32 %v3_25207, 4
  %v3_2520d = inttoptr i32 %v2_2520d to i32*
  store i32 %v3_2520a, i32* %v3_2520d, align 4
  %v0_25210 = load i32, i32* @ebp, align 4
  %v1_25210 = add i32 %v0_25210, -76
  %v2_25210 = inttoptr i32 %v1_25210 to i32*
  %v3_25210 = load i32, i32* %v2_25210, align 4
  %v3_25213 = mul i32 %v3_25210, 52
  store i32 %v3_25213, i32* %eax.global-to-local, align 4
  %v2_25218 = add i32 %v0_25210, -68
  %v3_25218 = inttoptr i32 %v2_25218 to i32*
  %v4_25218 = load i32, i32* %v3_25218, align 4
  %v5_25218 = add i32 %v4_25218, %v3_25213
  %v1_2521b = add i32 %v0_25210, -108
  %v2_2521b = inttoptr i32 %v1_2521b to i32*
  %v3_2521b = load i32, i32* %v2_2521b, align 4
  store i32 %v3_2521b, i32* @eax, align 4
  %v2_2521e = add i32 %v3_2521b, 8
  %v3_2521e = inttoptr i32 %v2_2521e to i32*
  store i32 %v5_25218, i32* %v3_2521e, align 4
  %v0_25221 = call i32 @function_252d1()
  store i32 %v0_25221, i32* %eax.global-to-local, align 4
  ret i32 %v0_25221

; uselistorder directives
  uselistorder i32 %v11_2512c, { 0, 2, 1 }
  uselistorder i32 -116, { 14, 13, 6, 5, 7, 8, 9, 10, 11, 12, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4fca5, { 1, 0, 3, 2 }
  uselistorder i32 (i32)* @unknown_4fd02, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 -112, { 12, 13, 6, 4, 5, 7, 8, 9, 10, 11, 2, 0, 1, 3 }
}

define i32 @function_25227() local_unnamed_addr {
dec_label_pc_25227:
  %eax.global-to-local = alloca i32, align 4
  %v0_25227 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25227
}

define i32 @function_2523e() local_unnamed_addr {
dec_label_pc_2523e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2523e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2523e
}

define i32 @function_2525c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2525c:
  %v0_2525c = load i32, i32* @ebp, align 4
  %v1_2525c = add i32 %v0_2525c, -108
  %v2_2525c = inttoptr i32 %v1_2525c to i32*
  %v3_2525c = load i32, i32* %v2_2525c, align 4
  %v1_25262 = call i32 @unknown_41d12(i32 %v3_2525c)
  ret i32 %v1_25262
}

define i32 @function_2526c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2526c:
  %eax.global-to-local = alloca i32, align 4
  store i32 or (i32 zext (i8 xor (i8 ptrtoint (i8* @global_var_89.2254 to i8), i8 1) to i32), i32 -764687872), i32* %eax.global-to-local, align 4
  %v2_25273 = load i32, i32* @ebx, align 4
  %v3_25273 = mul i32 %v2_25273, 2
  %tmp = icmp slt i32 %v2_25273, 0
  %v4_25273 = zext i1 %tmp to i32
  %v5_25273 = or i32 %v4_25273, %v3_25273
  %v7_25273 = inttoptr i32 %v2_25273 to i32*
  store i32 %v5_25273, i32* %v7_25273, align 4
  %v0_25275 = load i32, i32* @ebp, align 4
  %v1_25275 = add i32 %v0_25275, -1
  store i32 %v1_25275, i32* @ebp, align 4
  %v0_2527b = load i32, i32* @ebx, align 4
  %v1_2527b = load i32, i32* %eax.global-to-local, align 4
  %v3_2527b = add i32 %v1_2527b, %v0_2527b
  %v4_2527b = inttoptr i32 %v3_2527b to i8*
  %v6_2527b = load i32, i32* @ecx, align 4
  %v7_2527b = trunc i32 %v6_2527b to i8
  %v8_2527b = urem i8 %v7_2527b, 32
  %v10_2527b = icmp eq i8 %v8_2527b, 0
  br i1 %v10_2527b, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_2526c
  %v5_2527b = load i8, i8* %v4_2527b, align 1
  %v11_2527b = shl i8 %v5_2527b, %v8_2527b
  store i8 %v11_2527b, i8* %v4_2527b, align 1
  %v0_2527e.pre = load i32, i32* @ebp, align 4
  %v1_2527e.pre = load i32, i32* @esp, align 4
  %phitmp = add i32 %v1_2527e.pre, -4
  %phitmp3 = inttoptr i32 %phitmp to i32*
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_2526c, %bb
  %v1_2527e = phi i32* [ inttoptr (i32 1807242631 to i32*), %dec_label_pc_2526c ], [ %phitmp3, %bb ]
  %v0_2527e = phi i32 [ %v1_25275, %dec_label_pc_2526c ], [ %v0_2527e.pre, %bb ]
  store i32 %v0_2527e, i32* %v1_2527e, align 4
  %v0_25284 = load i32, i32* @ecx, align 4
  store i32 %v0_25284, i32* inttoptr (i32 136594573 to i32*), align 4
  %v0_25288 = load i32, i32* @edx, align 4
  %v1_25288 = load i32, i32* @esp, align 4
  %v2_25288 = inttoptr i32 %v1_25288 to i32*
  store i32 %v0_25288, i32* %v2_25288, align 4
  %v3_2528b = call i32 @unknown_41d3f(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  store i32 %v3_2528b, i32* %eax.global-to-local, align 4
  %v0_25290 = call i32 @function_252b3()
  store i32 %v0_25290, i32* %eax.global-to-local, align 4
  ret i32 %v0_25290

; uselistorder directives
  uselistorder i8 %v8_2527b, { 1, 0 }
  uselistorder i32 %v2_25273, { 2, 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_25292() local_unnamed_addr {
dec_label_pc_25292:
  %ebp.global-to-local = alloca i32, align 4
  %v0_25292 = load i32, i32* %ebp.global-to-local, align 4
  %v1_25292 = add i32 %v0_25292, -108
  %v2_25292 = inttoptr i32 %v1_25292 to i32*
  %v3_25292 = load i32, i32* %v2_25292, align 4
  %v1_25298 = call i32 @unknown_41d12(i32 %v3_25292)
  %v1_252a1 = add i32 %v0_25292, -88
  %v2_252a1 = inttoptr i32 %v1_252a1 to i32*
  %v3_252a1 = load i32, i32* %v2_252a1, align 4
  %v1_252a8 = add i32 %v0_25292, -68
  %v2_252a8 = inttoptr i32 %v1_252a8 to i32*
  %v3_252a8 = load i32, i32* %v2_252a8, align 4
  %v3_252ae = call i32 @unknown_41d3f(i32 %v3_252a8, i32 %v3_252a1, i32 %v1_25298)
  ret i32 %v3_252ae

; uselistorder directives
  uselistorder i32 %v0_25292, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_41d3f, { 2, 1, 0 }
  uselistorder i32 -88, { 0, 12, 13, 14, 15, 16, 4, 6, 7, 5, 8, 9, 10, 11, 1, 2, 3 }
  uselistorder i32 (i32)* @unknown_41d12, { 5, 4, 1, 0, 3, 2 }
}

define i32 @function_252b3() local_unnamed_addr {
dec_label_pc_252b3:
  %v0_252b3 = load i32, i32* @ebp, align 4
  %v1_252b3 = add i32 %v0_252b3, -108
  %v2_252b3 = inttoptr i32 %v1_252b3 to i32*
  %v3_252b3 = load i32, i32* %v2_252b3, align 4
  %v1_252c7 = call i32 @unknown_48a34(i32 %v3_252b3)
  ret i32 %v1_252c7

; uselistorder directives
  uselistorder i32 (i32)* @unknown_48a34, { 1, 0, 2 }
  uselistorder i32 -108, { 18, 0, 3, 20, 21, 22, 23, 24, 25, 26, 27, 28, 8, 9, 10, 11, 4, 5, 6, 7, 13, 14, 12, 15, 16, 17, 19, 1, 2 }
}

define i32 @function_252b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_252b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_252d1() local_unnamed_addr {
dec_label_pc_252d1:
  %v0_252d1 = load i32, i32* @ebp, align 4
  %v1_252d1 = add i32 %v0_252d1, -12
  %v2_252d1 = inttoptr i32 %v1_252d1 to i32*
  %v3_252d1 = load i32, i32* %v2_252d1, align 4
  %v1_252d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_252d4 = xor i32 %v1_252d4, %v3_252d1
  %v3_252d4 = icmp eq i32 %v2_252d4, 0
  store i32 %v2_252d4, i32* @ebx, align 4
  br i1 %v3_252d4, label %bb, label %dec_label_pc_252d1.dec_label_pc_252dd_crit_edge

dec_label_pc_252d1.dec_label_pc_252dd_crit_edge:  ; preds = %dec_label_pc_252d1
  %v2_252db.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_252dd

bb:                                               ; preds = %dec_label_pc_252d1
  %v1_252db = call i32 @function_252e2()
  br label %dec_label_pc_252dd

dec_label_pc_252dd:                               ; preds = %dec_label_pc_252d1.dec_label_pc_252dd_crit_edge, %bb
  %v2_252db = phi i32 [ %v2_252db.pre, %dec_label_pc_252d1.dec_label_pc_252dd_crit_edge ], [ %v1_252db, %bb ]
  ret i32 %v2_252db

; uselistorder directives
  uselistorder label %dec_label_pc_252dd, { 1, 0 }
}

define i32 @function_252e2() local_unnamed_addr {
dec_label_pc_252e2:
  %v0_252e2 = load i32, i32* @ebp, align 4
  %v1_252e2 = add i32 %v0_252e2, -8
  %v1_252e5 = inttoptr i32 %v1_252e2 to i32*
  %v2_252e5 = load i32, i32* %v1_252e5, align 4
  store i32 %v2_252e5, i32* @ebx, align 4
  %v3_252e5 = add i32 %v0_252e2, -4
  %v1_252e6 = inttoptr i32 %v3_252e5 to i32*
  %v2_252e6 = load i32, i32* %v1_252e6, align 4
  store i32 %v2_252e6, i32* @esi, align 4
  %v1_252e7 = inttoptr i32 %v0_252e2 to i32*
  %v2_252e7 = load i32, i32* %v1_252e7, align 4
  store i32 %v2_252e7, i32* @ebp, align 4
  %v0_252e8 = load i32, i32* @eax, align 4
  ret i32 %v0_252e8

; uselistorder directives
  uselistorder i32 -8, { 15, 0, 7, 8, 13, 9, 1, 2, 3, 4, 10, 5, 16, 11, 12, 14, 6 }
}

define i32 @_ZNK12CTransaction9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_252ea:
  ret i32 0
}

define i32 @function_2531e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2531e:
  %v0_2531e = load i32, i32* @ebp, align 4
  %v1_2531e = add i32 %v0_2531e, -29
  %v2_2531e = inttoptr i32 %v1_2531e to i8*
  store i8 0, i8* %v2_2531e, align 1
  %v0_25322 = load i32, i32* @ebp, align 4
  %v1_25322 = add i32 %v0_25322, -36
  %v2_25322 = inttoptr i32 %v1_25322 to i32*
  store i32 0, i32* %v2_25322, align 4
  %v0_25329 = load i32, i32* @ebp, align 4
  %v1_25329 = add i32 %v0_25329, -44
  %v2_25329 = inttoptr i32 %v1_25329 to i32*
  %v3_25329 = load i32, i32* %v2_25329, align 4
  %v0_2532c = load i32, i32* @edx, align 4
  %v1_25330 = add i32 %v0_25329, -56
  %v2_25330 = inttoptr i32 %v1_25330 to i32*
  %v3_25330 = load i32, i32* %v2_25330, align 4
  %v1_25337 = add i32 %v0_25329, -52
  %v2_25337 = inttoptr i32 %v1_25337 to i32*
  %v3_25337 = load i32, i32* %v2_25337, align 4
  %v1_25342 = add i32 %v0_25329, -48
  %v2_25342 = inttoptr i32 %v1_25342 to i32*
  %v3_25342 = load i32, i32* %v2_25342, align 4
  %sext = mul i32 %v0_2532c, 16777216
  %v5_25348 = sdiv i32 %sext, 16777216
  %v6_25348 = call i32 @unknown_503f1(i32 %v3_25342, i32 %v3_25329, i32 %v3_25337, i32 %v3_25330, i32 %v5_25348)
  %v0_2534d = load i32, i32* @ebp, align 4
  %v1_2534d = add i32 %v0_2534d, -36
  %v2_2534d = inttoptr i32 %v1_2534d to i32*
  %v3_2534d = load i32, i32* %v2_2534d, align 4
  %v5_2534d = add i32 %v3_2534d, %v6_25348
  store i32 %v5_2534d, i32* %v2_2534d, align 4
  %v0_25350 = load i32, i32* @ebp, align 4
  %v1_25350 = add i32 %v0_25350, -44
  %v2_25350 = inttoptr i32 %v1_25350 to i32*
  %v3_25350 = load i32, i32* %v2_25350, align 4
  %v1_25353 = inttoptr i32 %v3_25350 to i32*
  %v2_25353 = load i32, i32* %v1_25353, align 4
  %v2_25355 = add i32 %v0_25350, -56
  %v3_25355 = inttoptr i32 %v2_25355 to i32*
  store i32 %v2_25353, i32* %v3_25355, align 4
  %v0_25358 = load i32, i32* @ebp, align 4
  %v1_25358 = add i32 %v0_25358, -44
  %v2_25358 = inttoptr i32 %v1_25358 to i32*
  %v3_25358 = load i32, i32* %v2_25358, align 4
  %v1_2535b = add i32 %v3_25358, 4
  %v0_2535e = load i32, i32* @edi, align 4
  %v1_25364 = add i32 %v0_25358, -56
  %v2_25364 = inttoptr i32 %v1_25364 to i32*
  %v3_25364 = load i32, i32* %v2_25364, align 4
  %v1_2536b = add i32 %v0_25358, -52
  %v2_2536b = inttoptr i32 %v1_2536b to i32*
  %v3_2536b = load i32, i32* %v2_2536b, align 4
  %v1_25376 = add i32 %v0_25358, -48
  %v2_25376 = inttoptr i32 %v1_25376 to i32*
  %v3_25376 = load i32, i32* %v2_25376, align 4
  %sext1 = mul i32 %v0_2535e, 16777216
  %v5_2537c = sdiv i32 %sext1, 16777216
  %v6_2537c = call i32 @unknown_5045b(i32 %v3_25376, i32 %v1_2535b, i32 %v3_2536b, i32 %v3_25364, i32 %v5_2537c)
  %v0_25381 = load i32, i32* @ebp, align 4
  %v1_25381 = add i32 %v0_25381, -36
  %v2_25381 = inttoptr i32 %v1_25381 to i32*
  %v3_25381 = load i32, i32* %v2_25381, align 4
  %v5_25381 = add i32 %v3_25381, %v6_2537c
  store i32 %v5_25381, i32* %v2_25381, align 4
  %v0_25384 = load i32, i32* @ebp, align 4
  %v1_25384 = add i32 %v0_25384, -44
  %v2_25384 = inttoptr i32 %v1_25384 to i32*
  %v3_25384 = load i32, i32* %v2_25384, align 4
  %v1_25387 = add i32 %v3_25384, 16
  %v0_2538a = load i32, i32* @esi, align 4
  %v1_25390 = add i32 %v0_25384, -56
  %v2_25390 = inttoptr i32 %v1_25390 to i32*
  %v3_25390 = load i32, i32* %v2_25390, align 4
  %v1_25397 = add i32 %v0_25384, -52
  %v2_25397 = inttoptr i32 %v1_25397 to i32*
  %v3_25397 = load i32, i32* %v2_25397, align 4
  %v1_253a2 = add i32 %v0_25384, -48
  %v2_253a2 = inttoptr i32 %v1_253a2 to i32*
  %v3_253a2 = load i32, i32* %v2_253a2, align 4
  %sext2 = mul i32 %v0_2538a, 16777216
  %v5_253a8 = sdiv i32 %sext2, 16777216
  %v6_253a8 = call i32 @unknown_504c3(i32 %v3_253a2, i32 %v1_25387, i32 %v3_25397, i32 %v3_25390, i32 %v5_253a8)
  %v0_253ad = load i32, i32* @ebp, align 4
  %v1_253ad = add i32 %v0_253ad, -36
  %v2_253ad = inttoptr i32 %v1_253ad to i32*
  %v3_253ad = load i32, i32* %v2_253ad, align 4
  %v5_253ad = add i32 %v3_253ad, %v6_253a8
  store i32 %v5_253ad, i32* %v2_253ad, align 4
  %v0_253b0 = load i32, i32* @ebp, align 4
  %v1_253b0 = add i32 %v0_253b0, -44
  %v2_253b0 = inttoptr i32 %v1_253b0 to i32*
  %v3_253b0 = load i32, i32* %v2_253b0, align 4
  %v1_253b3 = add i32 %v3_253b0, 28
  %v0_253b6 = load i32, i32* @ebx, align 4
  %v1_253ba = add i32 %v0_253b0, -56
  %v2_253ba = inttoptr i32 %v1_253ba to i32*
  %v3_253ba = load i32, i32* %v2_253ba, align 4
  %v1_253c1 = add i32 %v0_253b0, -52
  %v2_253c1 = inttoptr i32 %v1_253c1 to i32*
  %v3_253c1 = load i32, i32* %v2_253c1, align 4
  %v1_253cc = add i32 %v0_253b0, -48
  %v2_253cc = inttoptr i32 %v1_253cc to i32*
  %v3_253cc = load i32, i32* %v2_253cc, align 4
  %sext3 = mul i32 %v0_253b6, 16777216
  %v5_253d2 = sdiv i32 %sext3, 16777216
  %v6_253d2 = call i32 @unknown_5052b(i32 %v3_253cc, i32 %v1_253b3, i32 %v3_253c1, i32 %v3_253ba, i32 %v5_253d2)
  %v0_253d7 = load i32, i32* @ebp, align 4
  %v1_253d7 = add i32 %v0_253d7, -36
  %v2_253d7 = inttoptr i32 %v1_253d7 to i32*
  %v3_253d7 = load i32, i32* %v2_253d7, align 4
  %v5_253d7 = add i32 %v3_253d7, %v6_253d2
  store i32 %v5_253d7, i32* %v2_253d7, align 4
  %v0_253da = load i32, i32* @ebp, align 4
  %v1_253da = add i32 %v0_253da, -28
  %v2_253da = inttoptr i32 %v1_253da to i32*
  %v3_253da = load i32, i32* %v2_253da, align 4
  %v1_253dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_253dd = xor i32 %v1_253dd, %v3_253da
  %v3_253dd = icmp eq i32 %v2_253dd, 0
  store i32 %v2_253dd, i32* @eax, align 4
  br i1 %v3_253dd, label %bb, label %dec_label_pc_253e6

bb:                                               ; preds = %dec_label_pc_2531e
  %v1_253e4 = call i32 @function_253eb()
  br label %dec_label_pc_253e6

dec_label_pc_253e6:                               ; preds = %bb, %dec_label_pc_2531e
  %v3_253e4 = phi i32 [ %v1_253e4, %bb ], [ %v2_253dd, %dec_label_pc_2531e ]
  ret i32 %v3_253e4

; uselistorder directives
  uselistorder i32 %v0_253b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_25384, { 0, 2, 1, 3 }
  uselistorder i32 %v0_25358, { 0, 2, 1, 3 }
  uselistorder i32 %v0_25329, { 0, 2, 1, 3 }
}

define i32 @function_253eb() local_unnamed_addr {
dec_label_pc_253eb:
  %v0_253f2 = load i32, i32* @eax, align 4
  ret i32 %v0_253f2
}

define i32 @_ZN5boost6tuples4consISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEC1IKS4_KS5_KS6_SC_SC_SC_SC_SC_SC_SC_EERT_RT0_RT1_RT2_RT3_RT4_RT5_RT6_RT7_RT8_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_253f4:
  %stack_var_-73 = alloca i32, align 4
  %v2_25454 = call i32 @unknown_3baec(i32 %arg1, i32 %arg2)
  %v2_25459 = ptrtoint i32* %stack_var_-73 to i32
  store i32 %v2_25459, i32* @eax, align 4
  %v1_2545f = call i32 @function_2e3a8(i32 %v2_25459)
  ret i32 %v1_2545f
}

define i32 @function_25464(i32 %arg1) local_unnamed_addr {
dec_label_pc_25464:
  %v0_25467 = load i32, i32* @ebp, align 4
  %v1_25467 = add i32 %v0_25467, -28
  %v2_25467 = inttoptr i32 %v1_25467 to i32*
  %v3_25467 = load i32, i32* %v2_25467, align 4
  %v1_2546a = add i32 %v3_25467, 12
  %v1_2546d = add i32 %v0_25467, -13
  %v1_25474 = add i32 %v0_25467, -68
  %v2_25474 = inttoptr i32 %v1_25474 to i32*
  %v3_25474 = load i32, i32* %v2_25474, align 4
  %v1_2547b = add i32 %v0_25467, -64
  %v2_2547b = inttoptr i32 %v1_2547b to i32*
  %v3_2547b = load i32, i32* %v2_2547b, align 4
  %v1_25482 = add i32 %v0_25467, -60
  %v2_25482 = inttoptr i32 %v1_25482 to i32*
  %v3_25482 = load i32, i32* %v2_25482, align 4
  %v1_25489 = add i32 %v0_25467, -56
  %v2_25489 = inttoptr i32 %v1_25489 to i32*
  %v3_25489 = load i32, i32* %v2_25489, align 4
  %v1_25490 = add i32 %v0_25467, -52
  %v2_25490 = inttoptr i32 %v1_25490 to i32*
  %v3_25490 = load i32, i32* %v2_25490, align 4
  %v1_25497 = add i32 %v0_25467, -48
  %v2_25497 = inttoptr i32 %v1_25497 to i32*
  %v3_25497 = load i32, i32* %v2_25497, align 4
  %v1_2549e = add i32 %v0_25467, -44
  %v2_2549e = inttoptr i32 %v1_2549e to i32*
  %v3_2549e = load i32, i32* %v2_2549e, align 4
  %v1_254a5 = add i32 %v0_25467, -40
  %v2_254a5 = inttoptr i32 %v1_254a5 to i32*
  %v3_254a5 = load i32, i32* %v2_254a5, align 4
  %v1_254ac = add i32 %v0_25467, -36
  %v2_254ac = inttoptr i32 %v1_254ac to i32*
  %v3_254ac = load i32, i32* %v2_254ac, align 4
  %v11_254b6 = call i32 @unknown_506a0(i32 %v1_2546a, i32 %v3_254ac, i32 %v3_254a5, i32 %v3_2549e, i32 %v3_25497, i32 %v3_25490, i32 %v3_25489, i32 %v3_25482, i32 %v3_2547b, i32 %v3_25474, i32 %v1_2546d)
  %v0_254bb = load i32, i32* @ebp, align 4
  %v1_254bb = add i32 %v0_254bb, -12
  %v2_254bb = inttoptr i32 %v1_254bb to i32*
  %v3_254bb = load i32, i32* %v2_254bb, align 4
  %v1_254be = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_254be = xor i32 %v1_254be, %v3_254bb
  %v3_254be = icmp eq i32 %v2_254be, 0
  store i32 %v2_254be, i32* @eax, align 4
  br i1 %v3_254be, label %bb, label %dec_label_pc_254c7

bb:                                               ; preds = %dec_label_pc_25464
  %v1_254c5 = call i32 @function_254cc()
  br label %dec_label_pc_254c7

dec_label_pc_254c7:                               ; preds = %bb, %dec_label_pc_25464
  %v2_254c5 = phi i32 [ %v1_254c5, %bb ], [ %v2_254be, %dec_label_pc_25464 ]
  ret i32 %v2_254c5

; uselistorder directives
  uselistorder i32 %v0_25467, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10 }
}

define i32 @function_254cc() local_unnamed_addr {
dec_label_pc_254cc:
  %v0_254cd = load i32, i32* @eax, align 4
  ret i32 %v0_254cd
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_254ce:
  %v1_254e8 = add i32 %arg1, 4
  store i32 %v1_254e8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_254f7

bb:                                               ; preds = %dec_label_pc_254ce
  %v2_254f5 = call i32 @function_254fc(i32 %arg1)
  br label %dec_label_pc_254f7

dec_label_pc_254f7:                               ; preds = %bb, %dec_label_pc_254ce
  %v3_254f5 = phi i32 [ %v2_254f5, %bb ], [ %v1_254e8, %dec_label_pc_254ce ]
  ret i32 %v3_254f5
}

define i32 @function_254fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_254fc:
  %v0_254fd = load i32, i32* @eax, align 4
  ret i32 %v0_254fd
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS9_ESI_RKS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_254fe:
  %v10_2557d117126 = icmp eq i32 %arg3, 0
  %v1_25581118127 = icmp eq i1 %v10_2557d117126, false
  %v5_25584122129 = icmp eq i1 %v1_25581118127, false
  %v1_25586123130 = icmp eq i1 %v5_25584122129, false
  br i1 %v1_25586123130, label %dec_label_pc_2552f.lr.ph, label %dec_label_pc_25588

dec_label_pc_2552f.lr.ph:                         ; preds = %dec_label_pc_254fe, %dec_label_pc_25559
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_25559 ], [ %arg4, %dec_label_pc_254fe ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_25565, %dec_label_pc_25559 ], [ %arg3, %dec_label_pc_254fe ]
  br label %dec_label_pc_2552f

dec_label_pc_2552f:                               ; preds = %dec_label_pc_2552f.lr.ph, %dec_label_pc_2556f
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_2552f.lr.ph ], [ %v1_25575, %dec_label_pc_2556f ]
  %v1_25535 = call i32 @unknown_4ae65(i32 %stack_var_-40.0124)
  %v3_2554d = call i32 @unknown_4ab3e(i32 %arg2, i32 %v1_25535, i32 %arg5)
  %v1_25552 = xor i32 %v3_2554d, 1
  %v4_25552 = trunc i32 %v1_25552 to i8
  %v5_25555 = icmp eq i8 %v4_25552, 0
  br i1 %v5_25555, label %dec_label_pc_2556f, label %dec_label_pc_25559

dec_label_pc_25559:                               ; preds = %dec_label_pc_2552f
  %v1_25565 = call i32 @unknown_4aed9(i32 %stack_var_-40.0124)
  %v10_2557d117 = icmp eq i32 %v1_25565, 0
  %v1_25581118 = icmp eq i1 %v10_2557d117, false
  %v5_25584122 = icmp eq i1 %v1_25581118, false
  %v1_25586123 = icmp eq i1 %v5_25584122, false
  br i1 %v1_25586123, label %dec_label_pc_2552f.lr.ph, label %dec_label_pc_25588

dec_label_pc_2556f:                               ; preds = %dec_label_pc_2552f
  %v1_25575 = call i32 @unknown_4aea9(i32 %stack_var_-40.0124)
  %v10_2557d = icmp eq i32 %v1_25575, 0
  %v1_25581 = icmp eq i1 %v10_2557d, false
  %v5_25584 = icmp eq i1 %v1_25581, false
  %v1_25586 = icmp eq i1 %v5_25584, false
  br i1 %v1_25586, label %dec_label_pc_2552f, label %dec_label_pc_25588

dec_label_pc_25588:                               ; preds = %dec_label_pc_2556f, %dec_label_pc_254fe, %dec_label_pc_25559
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_254fe ], [ %stack_var_-40.0124, %dec_label_pc_25559 ], [ %stack_var_-44.0.ph132, %dec_label_pc_2556f ]
  %v2_25595 = call i32 @unknown_4af0a(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_255a9

bb:                                               ; preds = %dec_label_pc_25588
  %v1_255a7 = call i32 @function_255ae()
  br label %dec_label_pc_255a9

dec_label_pc_255a9:                               ; preds = %bb, %dec_label_pc_25588
  %v2_255a7 = phi i32 [ %v1_255a7, %bb ], [ %arg1, %dec_label_pc_25588 ]
  ret i32 %v2_255a7

; uselistorder directives
  uselistorder i32 %v1_25565, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_25588, { 0, 2, 1 }
  uselistorder label %dec_label_pc_2552f, { 1, 0 }
  uselistorder label %dec_label_pc_2552f.lr.ph, { 1, 0 }
}

define i32 @function_255ae() local_unnamed_addr {
dec_label_pc_255ae:
  %v0_255af = load i32, i32* @eax, align 4
  ret i32 %v0_255af
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_255b2:
  ret i32 %arg1
}

define i32 @function_255e1(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_255e1:
  store i32 %arg1, i32* @ecx, align 4
  %v0_255e4 = load i32, i32* @ebp, align 4
  %v1_255e4 = add i32 %v0_255e4, -28
  %v2_255e4 = inttoptr i32 %v1_255e4 to i32*
  %v3_255e4 = load i32, i32* %v2_255e4, align 4
  store i32 %v3_255e4, i32* @eax, align 4
  %v1_255e7 = add i32 %v0_255e4, -12
  %v2_255e7 = inttoptr i32 %v1_255e7 to i32*
  %v3_255e7 = load i32, i32* %v2_255e7, align 4
  %v1_255ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_255ea = icmp eq i32 %v1_255ea, %v3_255e7
  br i1 %v3_255ea, label %bb, label %dec_label_pc_255f3

bb:                                               ; preds = %dec_label_pc_255e1
  %v1_255f1 = call i32 @function_255f8()
  br label %dec_label_pc_255f3

dec_label_pc_255f3:                               ; preds = %bb, %dec_label_pc_255e1
  %v2_255f1 = phi i32 [ %v1_255f1, %bb ], [ %v3_255e4, %dec_label_pc_255e1 ]
  ret i32 %v2_255f1
}

define i32 @function_255f8() local_unnamed_addr {
dec_label_pc_255f8:
  %v0_255f9 = load i32, i32* @eax, align 4
  ret i32 %v0_255f9
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_255fc:
  %stack_var_-17 = alloca i32, align 4
  %v1_25619 = call i32 @unknown_50987(i32 %arg1)
  %v2_25622 = ptrtoint i32* %stack_var_-17 to i32
  %v2_25628 = call i32 @unknown_4af30(i32 %v2_25622, i32 %v1_25619)
  store i32 %v2_25628, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25639

bb:                                               ; preds = %dec_label_pc_255fc
  %v1_25637 = call i32 @function_2563e()
  br label %dec_label_pc_25639

dec_label_pc_25639:                               ; preds = %bb, %dec_label_pc_255fc
  %v2_25637 = phi i32 [ %v1_25637, %bb ], [ %v2_25628, %dec_label_pc_255fc ]
  ret i32 %v2_25637
}

define i32 @function_2563e() local_unnamed_addr {
dec_label_pc_2563e:
  %v0_2563f = load i32, i32* @eax, align 4
  ret i32 %v0_2563f
}

define i32 @_ZNKSt4lessIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEclERKS9_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25640:
  %v2_25670 = call i32 @unknown_509fb(i32 %arg2, i32 %arg3)
  ret i32 %v2_25670
}

define i32 @function_25676(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25676:
  %v0_25678 = load i32, i32* @edx, align 4
  %v1_25678 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25678 = icmp eq i32 %v1_25678, %v0_25678
  br i1 %v3_25678, label %bb, label %dec_label_pc_25676.dec_label_pc_25681_crit_edge

dec_label_pc_25676.dec_label_pc_25681_crit_edge:  ; preds = %dec_label_pc_25676
  %v2_2567f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25681

bb:                                               ; preds = %dec_label_pc_25676
  %v1_2567f = call i32 @function_25686()
  br label %dec_label_pc_25681

dec_label_pc_25681:                               ; preds = %dec_label_pc_25676.dec_label_pc_25681_crit_edge, %bb
  %v2_2567f = phi i32 [ %v2_2567f.pre, %dec_label_pc_25676.dec_label_pc_25681_crit_edge ], [ %v1_2567f, %bb ]
  ret i32 %v2_2567f

; uselistorder directives
  uselistorder label %dec_label_pc_25681, { 1, 0 }
}

define i32 @function_25686() local_unnamed_addr {
dec_label_pc_25686:
  %v0_25687 = load i32, i32* @eax, align 4
  ret i32 %v0_25687
}

define i32 @_ZNKSt17_Rb_tree_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEeqERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25688:
  %v2_256a8 = load i32, i32* %arg1, align 4
  %v1_256ad = inttoptr i32 %arg2 to i32*
  %v2_256ad = load i32, i32* %v1_256ad, align 4
  %v12_256af = icmp eq i32 %v2_256a8, %v2_256ad
  %v1_256b1 = zext i1 %v12_256af to i32
  %v3_256b1 = and i32 %v2_256ad, -256
  %v4_256b1 = or i32 %v1_256b1, %v3_256b1
  store i32 %v4_256b1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_256c0

bb:                                               ; preds = %dec_label_pc_25688
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v3_256be = call i32 @function_256c5(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_256c0

dec_label_pc_256c0:                               ; preds = %bb, %dec_label_pc_25688
  %v4_256be = phi i32 [ %v3_256be, %bb ], [ %v4_256b1, %dec_label_pc_25688 ]
  ret i32 %v4_256be

; uselistorder directives
  uselistorder i32 %v2_256ad, { 1, 0 }
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_256c5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_256c5:
  %v0_256c6 = load i32, i32* @eax, align 4
  ret i32 %v0_256c6
}

define i32 @_ZNSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEC1EPKSt13_Rb_tree_nodeIS9_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_256c8:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_256f9

bb:                                               ; preds = %dec_label_pc_256c8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_256f7 = call i32 @function_256fe(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_256f9

dec_label_pc_256f9:                               ; preds = %bb, %dec_label_pc_256c8
  %v4_256f7 = phi i32 [ %v3_256f7, %bb ], [ 0, %dec_label_pc_256c8 ]
  ret i32 %v4_256f7

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_256fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_256fe:
  %v0_256ff = load i32, i32* @eax, align 4
  ret i32 %v0_256ff
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE11equal_rangeERKS9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25700:
  %v1_25729 = call i32 @unknown_44434(i32 %arg2)
  ret i32 %v1_25729
}

define i32 @function_2572f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2572f:
  %v0_2572f = load i32, i32* @ebp, align 4
  %v1_25732 = add i32 %v0_2572f, 2
  store i32 %v1_25732, i32* @ebp, align 4
  %v0_2573a = load i32, i32* @eax, align 4
  %v5_2573a = mul i32 %v0_2573a, 2
  %v20_2573a = and i32 %v5_2573a, 254
  %v22_2573a = and i32 %v0_2573a, -256
  %v23_2573a = or i32 %v20_2573a, %v22_2573a
  store i32 %v23_2573a, i32* @eax, align 4
  %v2_2573c = add i32 %v0_2572f, -22
  %v3_2573c = inttoptr i32 %v2_2573c to i32*
  store i32 %v23_2573a, i32* %v3_2573c, align 4
  %v0_2573f = call i32 @function_2585b()
  ret i32 %v0_2573f

; uselistorder directives
  uselistorder i32 %v0_2573a, { 1, 0 }
}

define i32 @function_25744() local_unnamed_addr {
dec_label_pc_25744:
  %v0_25744 = load i32, i32* @ebp, align 4
  %v1_25744 = add i32 %v0_25744, -28
  %v2_25744 = inttoptr i32 %v1_25744 to i32*
  %v3_25744 = load i32, i32* %v2_25744, align 4
  %v1_2574a = call i32 @unknown_4b067(i32 %v3_25744)
  %v0_25751 = load i32, i32* @ebp, align 4
  %v1_25751 = add i32 %v0_25751, -64
  %v2_25751 = inttoptr i32 %v1_25751 to i32*
  %v3_25751 = load i32, i32* %v2_25751, align 4
  %v1_25754 = add i32 %v0_25751, -68
  %v2_25754 = inttoptr i32 %v1_25754 to i32*
  %v3_25754 = load i32, i32* %v2_25754, align 4
  store i32 %v3_25754, i32* @ecx, align 4
  %v3_25762 = call i32 @unknown_4ad40(i32 %v3_25751, i32 %v1_2574a, i32 %v3_25754)
  %v4_25767 = trunc i32 %v3_25762 to i8
  %v5_25767 = icmp eq i8 %v4_25767, 0
  %v0_2577e = load i32, i32* @ebp, align 4
  %v1_2577e = add i32 %v0_2577e, -28
  %v2_2577e = inttoptr i32 %v1_2577e to i32*
  %v3_2577e = load i32, i32* %v2_2577e, align 4
  br i1 %v5_25767, label %dec_label_pc_2577e, label %dec_label_pc_2576b

dec_label_pc_2576b:                               ; preds = %dec_label_pc_25744
  %v1_25771 = call i32 @unknown_4b0ab(i32 %v3_2577e)
  store i32 %v1_25771, i32* @eax, align 4
  %v1_25776 = load i32, i32* @ebp, align 4
  %v2_25776 = add i32 %v1_25776, -28
  %v3_25776 = inttoptr i32 %v2_25776 to i32*
  store i32 %v1_25771, i32* %v3_25776, align 4
  %v0_25779 = call i32 @function_2585b()
  ret i32 %v0_25779

dec_label_pc_2577e:                               ; preds = %dec_label_pc_25744
  %v1_25784 = call i32 @unknown_4b067(i32 %v3_2577e)
  %v0_2578b = load i32, i32* @ebp, align 4
  %v1_2578b = add i32 %v0_2578b, -64
  %v2_2578b = inttoptr i32 %v1_2578b to i32*
  %v3_2578b = load i32, i32* %v2_2578b, align 4
  %v1_25792 = add i32 %v0_2578b, -68
  %v2_25792 = inttoptr i32 %v1_25792 to i32*
  %v3_25792 = load i32, i32* %v2_25792, align 4
  %v3_2579c = call i32 @unknown_4ad40(i32 %v3_2578b, i32 %v3_25792, i32 %v1_25784)
  %v4_257a1 = trunc i32 %v3_2579c to i8
  %v5_257a1 = icmp eq i8 %v4_257a1, 0
  br i1 %v5_257a1, label %bb, label %dec_label_pc_257a5

bb:                                               ; preds = %dec_label_pc_2577e
  %v1_257a3 = call i32 @function_257be()
  br label %dec_label_pc_257a5

dec_label_pc_257a5:                               ; preds = %bb, %dec_label_pc_2577e
  %v0_257a5 = load i32, i32* @ebp, align 4
  %v1_257a5 = add i32 %v0_257a5, -28
  %v2_257a5 = inttoptr i32 %v1_257a5 to i32*
  %v3_257a5 = load i32, i32* %v2_257a5, align 4
  %v2_257a8 = add i32 %v0_257a5, -24
  %v3_257a8 = inttoptr i32 %v2_257a8 to i32*
  store i32 %v3_257a5, i32* %v3_257a8, align 4
  %v0_257ab = load i32, i32* @ebp, align 4
  %v1_257ab = add i32 %v0_257ab, -28
  %v2_257ab = inttoptr i32 %v1_257ab to i32*
  %v3_257ab = load i32, i32* %v2_257ab, align 4
  ret i32 %v3_257ab

; uselistorder directives
  uselistorder i32 %v3_2577e, { 1, 0 }
  uselistorder i32 ()* @function_2585b, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_4ad40, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4b067, { 1, 0 }
}

define i32 @function_257b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_257b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_257b2 = load i32, i32* @eax, align 4
  %v1_257b2 = and i32 %v0_257b2, -1996488103
  %v4_257b2 = trunc i32 %v1_257b2 to i8
  store i32 %v1_257b2, i32* %eax.global-to-local, align 4
  %v0_257b7 = load i32, i32* @ebp, align 4
  %v1_257b7 = add i32 %v0_257b7, 1
  store i32 %v1_257b7, i32* @ebp, align 4
  %v10_257ba = and i32 %arg1, 256
  %v11_257ba = and i32 %arg1, 512
  %v12_257ba = and i32 %arg1, 1024
  %v14_257ba = and i32 %arg1, 16384
  %v20_257ba = icmp ne i32 %v10_257ba, 0
  %v21_257ba = icmp ne i32 %v11_257ba, 0
  %v22_257ba = icmp ne i32 %v12_257ba, 0
  %v24_257ba = icmp ne i32 %v14_257ba, 0
  store i1 %v20_257ba, i1* @tf, align 1
  store i1 %v21_257ba, i1* @if, align 1
  store i1 %v22_257ba, i1* @df, align 1
  store i1 %v24_257ba, i1* @nt, align 1
  %v1_257bb = inttoptr i32 %v1_257b2 to i8*
  %v2_257bb = load i8, i8* %v1_257bb, align 1
  %v5_257bb = add i8 %v2_257bb, %v4_257b2
  store i8 %v5_257bb, i8* %v1_257bb, align 1
  %v22_257bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_257bb
}

define i32 @function_257be() local_unnamed_addr {
dec_label_pc_257be:
  %v0_257be = load i32, i32* @ebp, align 4
  %v1_257be = add i32 %v0_257be, -28
  %v2_257be = inttoptr i32 %v1_257be to i32*
  %v3_257be = load i32, i32* %v2_257be, align 4
  %v2_257c1 = add i32 %v0_257be, -20
  %v3_257c1 = inttoptr i32 %v2_257c1 to i32*
  store i32 %v3_257be, i32* %v3_257c1, align 4
  %v0_257c4 = load i32, i32* @ebp, align 4
  %v1_257c4 = add i32 %v0_257c4, -24
  %v2_257c4 = inttoptr i32 %v1_257c4 to i32*
  %v3_257c4 = load i32, i32* %v2_257c4, align 4
  %v2_257c7 = add i32 %v0_257c4, -16
  %v3_257c7 = inttoptr i32 %v2_257c7 to i32*
  store i32 %v3_257c4, i32* %v3_257c7, align 4
  %v0_257ca = load i32, i32* @ebp, align 4
  %v1_257ca = add i32 %v0_257ca, -28
  %v2_257ca = inttoptr i32 %v1_257ca to i32*
  %v3_257ca = load i32, i32* %v2_257ca, align 4
  %v2_257cd = add i32 %v0_257ca, -24
  %v3_257cd = inttoptr i32 %v2_257cd to i32*
  store i32 %v3_257ca, i32* %v3_257cd, align 4
  %v0_257d0 = load i32, i32* @ebp, align 4
  %v1_257d0 = add i32 %v0_257d0, -28
  %v2_257d0 = inttoptr i32 %v1_257d0 to i32*
  %v3_257d0 = load i32, i32* %v2_257d0, align 4
  %v1_257d6 = call i32 @unknown_4b0db(i32 %v3_257d0)
  %v1_257db = load i32, i32* @ebp, align 4
  %v2_257db = add i32 %v1_257db, -28
  %v3_257db = inttoptr i32 %v2_257db to i32*
  store i32 %v1_257d6, i32* %v3_257db, align 4
  %v0_257de = load i32, i32* @ebp, align 4
  %v1_257de = add i32 %v0_257de, -20
  %v2_257de = inttoptr i32 %v1_257de to i32*
  %v3_257de = load i32, i32* %v2_257de, align 4
  %v1_257e4 = call i32 @unknown_4b0ab(i32 %v3_257de)
  %v1_257e9 = load i32, i32* @ebp, align 4
  %v2_257e9 = add i32 %v1_257e9, -20
  %v3_257e9 = inttoptr i32 %v2_257e9 to i32*
  store i32 %v1_257e4, i32* %v3_257e9, align 4
  %v0_257ec = load i32, i32* @ebp, align 4
  %v1_257ec = add i32 %v0_257ec, -40
  %v1_257ef = add i32 %v0_257ec, -68
  %v2_257ef = inttoptr i32 %v1_257ef to i32*
  %v3_257ef = load i32, i32* %v2_257ef, align 4
  %v1_257f6 = add i32 %v0_257ec, -16
  %v2_257f6 = inttoptr i32 %v1_257f6 to i32*
  %v3_257f6 = load i32, i32* %v2_257f6, align 4
  %v1_257fd = add i32 %v0_257ec, -20
  %v2_257fd = inttoptr i32 %v1_257fd to i32*
  %v3_257fd = load i32, i32* %v2_257fd, align 4
  %v1_25804 = add i32 %v0_257ec, -64
  %v2_25804 = inttoptr i32 %v1_25804 to i32*
  %v3_25804 = load i32, i32* %v2_25804, align 4
  %v5_2580e = call i32 @unknown_50afe(i32 %v1_257ec, i32 %v3_25804, i32 %v3_257fd, i32 %v3_257f6, i32 %v3_257ef)
  %v0_25816 = load i32, i32* @ebp, align 4
  %v1_25816 = add i32 %v0_25816, -44
  %v1_25819 = add i32 %v0_25816, -68
  %v2_25819 = inttoptr i32 %v1_25819 to i32*
  %v3_25819 = load i32, i32* %v2_25819, align 4
  %v1_25820 = add i32 %v0_25816, -24
  %v2_25820 = inttoptr i32 %v1_25820 to i32*
  %v3_25820 = load i32, i32* %v2_25820, align 4
  %v1_25827 = add i32 %v0_25816, -28
  %v2_25827 = inttoptr i32 %v1_25827 to i32*
  %v3_25827 = load i32, i32* %v2_25827, align 4
  %v1_2582e = add i32 %v0_25816, -64
  %v2_2582e = inttoptr i32 %v1_2582e to i32*
  %v3_2582e = load i32, i32* %v2_2582e, align 4
  %v5_25838 = call i32 @unknown_4abfe(i32 %v1_25816, i32 %v3_2582e, i32 %v3_25827, i32 %v3_25820, i32 %v3_25819)
  %v0_25840 = load i32, i32* @ebp, align 4
  %v1_25840 = add i32 %v0_25840, -40
  %v1_25847 = add i32 %v0_25840, -44
  %v1_2584e = add i32 %v0_25840, -60
  %v2_2584e = inttoptr i32 %v1_2584e to i32*
  %v3_2584e = load i32, i32* %v2_2584e, align 4
  %v3_25854 = call i32 @unknown_50bb0(i32 %v3_2584e, i32 %v1_25847, i32 %v1_25840)
  ret i32 %v3_25854

; uselistorder directives
  uselistorder i32 %v0_25816, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_257ec, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32)* @unknown_4b0ab, { 1, 0 }
}

define i32 @function_2585b() local_unnamed_addr {
dec_label_pc_2585b:
  %v0_2585b = load i32, i32* @ebp, align 4
  %v1_2585b = add i32 %v0_2585b, -28
  %v2_2585b = inttoptr i32 %v1_2585b to i32*
  %v3_2585b = load i32, i32* %v2_2585b, align 4
  %v10_2585b = icmp eq i32 %v3_2585b, 0
  %v1_2585f = icmp eq i1 %v10_2585b, false
  %v5_25862 = icmp eq i1 %v1_2585f, false
  %v1_25864 = icmp eq i1 %v5_25862, false
  br i1 %v1_25864, label %bb, label %dec_label_pc_2586a

bb:                                               ; preds = %dec_label_pc_2585b
  %v2_25864 = call i32 @function_25744()
  %v0_2586a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2586a

dec_label_pc_2586a:                               ; preds = %bb, %dec_label_pc_2585b
  %v0_2586a = phi i32 [ %v0_2586a.pre, %bb ], [ %v0_2585b, %dec_label_pc_2585b ]
  %v1_2586a = add i32 %v0_2586a, -24
  %v2_2586a = inttoptr i32 %v1_2586a to i32*
  %v3_2586a = load i32, i32* %v2_2586a, align 4
  %v1_25871 = add i32 %v0_2586a, -32
  %v2_25877 = call i32 @unknown_4b10c(i32 %v1_25871, i32 %v3_2586a)
  %v0_2587c = load i32, i32* @ebp, align 4
  %v1_2587c = add i32 %v0_2587c, -24
  %v2_2587c = inttoptr i32 %v1_2587c to i32*
  %v3_2587c = load i32, i32* %v2_2587c, align 4
  %v1_25883 = add i32 %v0_2587c, -36
  %v2_25889 = call i32 @unknown_4b10c(i32 %v1_25883, i32 %v3_2587c)
  %v0_2588e = load i32, i32* @ebp, align 4
  %v1_2588e = add i32 %v0_2588e, -32
  %v1_25895 = add i32 %v0_2588e, -36
  %v1_2589c = add i32 %v0_2588e, -60
  %v2_2589c = inttoptr i32 %v1_2589c to i32*
  %v3_2589c = load i32, i32* %v2_2589c, align 4
  %v3_258a2 = call i32 @unknown_50bb0(i32 %v3_2589c, i32 %v1_25895, i32 %v1_2588e)
  %v0_258a7 = load i32, i32* @ebp, align 4
  %v1_258a7 = add i32 %v0_258a7, -60
  %v2_258a7 = inttoptr i32 %v1_258a7 to i32*
  %v3_258a7 = load i32, i32* %v2_258a7, align 4
  store i32 %v3_258a7, i32* @eax, align 4
  %v1_258aa = add i32 %v0_258a7, -12
  %v2_258aa = inttoptr i32 %v1_258aa to i32*
  %v3_258aa = load i32, i32* %v2_258aa, align 4
  %v1_258ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_258ad = icmp eq i32 %v1_258ad, %v3_258aa
  br i1 %v3_258ad, label %bb5, label %dec_label_pc_258b6

bb5:                                              ; preds = %dec_label_pc_2586a
  %v1_258b4 = call i32 @function_258bb()
  br label %dec_label_pc_258b6

dec_label_pc_258b6:                               ; preds = %bb5, %dec_label_pc_2586a
  %v2_258b4 = phi i32 [ %v1_258b4, %bb5 ], [ %v3_258a7, %dec_label_pc_2586a ]
  ret i32 %v2_258b4

; uselistorder directives
  uselistorder i32 %v0_2586a, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_4b10c, { 1, 0 }
}

define i32 @function_258bb() local_unnamed_addr {
dec_label_pc_258bb:
  %v0_258bc = load i32, i32* @eax, align 4
  ret i32 %v0_258bc
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5eraseESt17_Rb_tree_iteratorIS9_ESH_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_258c0:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-40, align 4
  %v4_258e6 = ptrtoint i32* %stack_var_-40 to i32
  %v2_258ea = ptrtoint i32* %stack_var_-20 to i32
  %v2_258f0 = call i32 @unknown_44004(i32 %v2_258ea, i32 %v4_258e6)
  %v4_258f8 = ptrtoint i32* %stack_var_-36 to i32
  %v2_258fc = ptrtoint i32* %stack_var_-24 to i32
  %v2_25902 = call i32 @unknown_44004(i32 %v2_258fc, i32 %v4_258f8)
  %v3_25907 = load i32, i32* %stack_var_-20, align 4
  %v3_2590e = load i32, i32* %stack_var_-24, align 4
  %v3_2591b = call i32 @unknown_50dbc(i32 %arg1, i32 %v3_2590e, i32 %v3_25907)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2592c

bb:                                               ; preds = %dec_label_pc_258c0
  %v1_2592a = call i32 @function_25931()
  br label %dec_label_pc_2592c

dec_label_pc_2592c:                               ; preds = %bb, %dec_label_pc_258c0
  %v2_2592a = phi i32 [ %v1_2592a, %bb ], [ 0, %dec_label_pc_258c0 ]
  ret i32 %v2_2592a

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_44004, { 1, 0 }
}

define i32 @function_25931() local_unnamed_addr {
dec_label_pc_25931:
  %v0_25932 = load i32, i32* @eax, align 4
  ret i32 %v0_25932
}

define i32 @_ZNKSt9_IdentityIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEclERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25934:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25960

bb:                                               ; preds = %dec_label_pc_25934
  %v3_2595e = call i32 @function_25965(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_25960

dec_label_pc_25960:                               ; preds = %bb, %dec_label_pc_25934
  %v4_2595e = phi i32 [ %v3_2595e, %bb ], [ %arg2, %dec_label_pc_25934 ]
  ret i32 %v4_2595e
}

define i32 @function_25965(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25965:
  %v0_25966 = load i32, i32* @eax, align 4
  ret i32 %v0_25966
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE6_S_keyEPKSt13_Rb_tree_nodeIS9_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_25967:
  %stack_var_-17 = alloca i32, align 4
  %v1_25984 = call i32 @unknown_50f75(i32 %arg1)
  %v2_2598d = ptrtoint i32* %stack_var_-17 to i32
  %v2_25993 = call i32 @unknown_4b29b(i32 %v2_2598d, i32 %v1_25984)
  store i32 %v2_25993, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_259a4

bb:                                               ; preds = %dec_label_pc_25967
  %v1_259a2 = call i32 @function_259a9()
  br label %dec_label_pc_259a4

dec_label_pc_259a4:                               ; preds = %bb, %dec_label_pc_25967
  %v2_259a2 = phi i32 [ %v1_259a2, %bb ], [ %v2_25993, %dec_label_pc_25967 ]
  ret i32 %v2_259a2
}

define i32 @function_259a9() local_unnamed_addr {
dec_label_pc_259a9:
  %v0_259aa = load i32, i32* @eax, align 4
  ret i32 %v0_259aa
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_259ab:
  %v1_259c5 = add i32 %arg1, 12
  %v2_259c5 = inttoptr i32 %v1_259c5 to i32*
  %v3_259c5 = load i32, i32* %v2_259c5, align 4
  ret i32 %v3_259c5
}

define i32 @function_259d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_259d4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_259d9() local_unnamed_addr {
dec_label_pc_259d9:
  %eax.global-to-local = alloca i32, align 4
  %v0_259da = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_259da
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_259db:
  %v1_259f5 = add i32 %arg1, 8
  %v2_259f5 = inttoptr i32 %v1_259f5 to i32*
  %v3_259f5 = load i32, i32* %v2_259f5, align 4
  store i32 %v3_259f5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25a04

bb:                                               ; preds = %dec_label_pc_259db
  %v2_25a02 = call i32 @function_25a09(i32 %arg1)
  br label %dec_label_pc_25a04

dec_label_pc_25a04:                               ; preds = %bb, %dec_label_pc_259db
  %v3_25a02 = phi i32 [ %v2_25a02, %bb ], [ %v3_259f5, %dec_label_pc_259db ]
  ret i32 %v3_25a02
}

define i32 @function_25a09(i32 %arg1) local_unnamed_addr {
dec_label_pc_25a09:
  %v0_25a0a = load i32, i32* @eax, align 4
  ret i32 %v0_25a0a
}

define i32 @_ZNSt17_Rb_tree_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEC1EPSt13_Rb_tree_nodeIS9_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25a0c:
  ret i32 %arg1
}

define i32 @function_25a30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25a30:
  %v0_25a30 = load i32, i32* @ebx, align 4
  %v1_25a30 = add i32 %v0_25a30, 862319685
  %v2_25a30 = inttoptr i32 %v1_25a30 to i8*
  %v3_25a30 = load i8, i8* %v2_25a30, align 1
  %v4_25a30 = load i32, i32* @ecx, align 4
  %v5_25a30 = trunc i32 %v4_25a30 to i8
  %v6_25a30 = load i1, i1* @cf, align 1
  %v7_25a30 = zext i1 %v6_25a30 to i8
  %v8_25a30 = add i8 %v5_25a30, %v3_25a30
  %v9_25a30 = add i8 %v8_25a30, %v7_25a30
  store i8 %v9_25a30, i8* %v2_25a30, align 1
  %v0_25a36 = load i32, i32* @eax, align 4
  %v1_25a36 = add i32 %v0_25a36, 20
  %v10_25a36 = icmp eq i32 %v1_25a36, 0
  store i32 %v1_25a36, i32* @eax, align 4
  br i1 %v10_25a36, label %bb, label %dec_label_pc_25a3d

bb:                                               ; preds = %dec_label_pc_25a30
  %v1_25a3b = call i32 @function_25a42()
  br label %dec_label_pc_25a3d

dec_label_pc_25a3d:                               ; preds = %bb, %dec_label_pc_25a30
  %v2_25a3b = phi i32 [ %v1_25a3b, %bb ], [ %v1_25a36, %dec_label_pc_25a30 ]
  ret i32 %v2_25a3b
}

define i32 @function_25a42() local_unnamed_addr {
dec_label_pc_25a42:
  %v0_25a43 = load i32, i32* @eax, align 4
  ret i32 %v0_25a43
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25a44:
  %v1_25a64 = add i32 %arg2, 12
  %v2_25a64 = inttoptr i32 %v1_25a64 to i32*
  %v3_25a64 = load i32, i32* %v2_25a64, align 4
  %v2_25a71 = call i32 @unknown_4b450(i32 %arg1, i32 %v3_25a64)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25a85

bb:                                               ; preds = %dec_label_pc_25a44
  %v1_25a83 = call i32 @function_25a8a()
  br label %dec_label_pc_25a85

dec_label_pc_25a85:                               ; preds = %bb, %dec_label_pc_25a44
  %v2_25a83 = phi i32 [ %v1_25a83, %bb ], [ %arg1, %dec_label_pc_25a44 ]
  ret i32 %v2_25a83

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_25a8a() local_unnamed_addr {
dec_label_pc_25a8a:
  %v0_25a8b = load i32, i32* @eax, align 4
  ret i32 %v0_25a8b
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE10_M_insert_EPKSt18_Rb_tree_node_baseSI_RKS9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_25a8e:
  %stack_var_-18 = alloca i32, align 4
  %v10_25abe = icmp eq i32 %arg3, 0
  %v1_25ac2 = icmp eq i1 %v10_25abe, false
  br i1 %v1_25ac2, label %dec_label_pc_25b16, label %dec_label_pc_25ac4

dec_label_pc_25ac4:                               ; preds = %dec_label_pc_25a8e
  %v1_25aca = call i32 @unknown_4af5c(i32 %arg2)
  %v15_25acf = icmp eq i32 %v1_25aca, %arg4
  br i1 %v15_25acf, label %dec_label_pc_25b16, label %dec_label_pc_25ad4

dec_label_pc_25ad4:                               ; preds = %dec_label_pc_25ac4
  %v1_25ada = call i32 @unknown_4b08a(i32 %arg4)
  %v2_25ae8 = ptrtoint i32* %stack_var_-18 to i32
  %v2_25aee = call i32 @unknown_4b3c2(i32 %v2_25ae8, i32 %arg5)
  %v3_25b01 = call i32 @unknown_4b0ce(i32 %arg2, i32 %v2_25aee, i32 %v1_25ada)
  %v4_25b06 = trunc i32 %v3_25b01 to i8
  %v5_25b06 = icmp ne i8 %v4_25b06, 0
  %phitmp = zext i1 %v5_25b06 to i32
  br label %dec_label_pc_25b16

dec_label_pc_25b16:                               ; preds = %dec_label_pc_25ad4, %dec_label_pc_25a8e, %dec_label_pc_25ac4
  %storemerge = phi i32 [ 1, %dec_label_pc_25ac4 ], [ 1, %dec_label_pc_25a8e ], [ %phitmp, %dec_label_pc_25ad4 ]
  %v2_25b26 = call i32 @unknown_510cc(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_25b16, { 0, 2, 1 }
}

define i32 @function_25b42(i32 %arg1) local_unnamed_addr {
dec_label_pc_25b42:
  %v0_25b42 = load i32, i32* @ebx, align 4
  %v1_25b42 = add i32 %v0_25b42, 1418325077
  %v2_25b42 = inttoptr i32 %v1_25b42 to i8*
  %v3_25b42 = load i8, i8* %v2_25b42, align 1
  %v4_25b42 = load i32, i32* @ecx, align 4
  %v5_25b42 = trunc i32 %v4_25b42 to i8
  %v6_25b42 = or i8 %v5_25b42, %v3_25b42
  store i8 %v6_25b42, i8* %v2_25b42, align 1
  %v0_25b48 = load i32, i32* @eax, align 4
  %v11_25b48 = and i32 %v0_25b48, -252
  ret i32 %v11_25b48
}

declare i32 @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i32) local_unnamed_addr

define i32 @function_25b86() local_unnamed_addr {
dec_label_pc_25b86:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_25b86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_25b86 = add i32 %v0_25b86, 1566262468
  %v2_25b86 = inttoptr i32 %v1_25b86 to i32*
  %v3_25b86 = load i32, i32* %v2_25b86, align 4
  %v4_25b86 = add i32 %v3_25b86, 1
  store i32 %v4_25b86, i32* %v2_25b86, align 4
  %v0_25b8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25b8c
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEEbEC1ERKSB_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25b90:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_25bb9 = inttoptr i32 %arg2 to i32*
  %v2_25bb9 = load i32, i32* %v1_25bb9, align 4
  store i32 %v2_25bb9, i32* %arg1, align 4
  %v2_25bc0 = load i8, i8* %tmp104, align 1
  %v3_25bc6 = add i32 %tmp109, 4
  %v4_25bc6 = inttoptr i32 %v3_25bc6 to i8*
  store i8 %v2_25bc0, i8* %v4_25bc6, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25bd5

bb:                                               ; preds = %dec_label_pc_25b90
  %v5_25bd3 = call i32 @function_25bda(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_25bd5

dec_label_pc_25bd5:                               ; preds = %bb, %dec_label_pc_25b90
  %v6_25bd3 = phi i32 [ %v5_25bd3, %bb ], [ 0, %dec_label_pc_25b90 ]
  ret i32 %v6_25bd3
}

define i32 @function_25bda(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25bda:
  %v0_25bdb = load i32, i32* @eax, align 4
  ret i32 %v0_25bdb
}

define i32 @_ZNSt17_Rb_tree_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_25bdc:
  %v2_25bf6 = load i32, i32* %arg1, align 4
  ret i32 %v2_25bf6
}

define i32 @function_25c18() local_unnamed_addr {
dec_label_pc_25c18:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25c18 = load i32, i32* %ecx.global-to-local, align 4
  %v1_25c18 = add i32 %v0_25c18, -1
  store i32 %v1_25c18, i32* %ecx.global-to-local, align 4
  %v0_25c1a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25c1a
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE13_Rb_tree_implISD_Lb0EEC1Ev() local_unnamed_addr {
dec_label_pc_25c1c:
  %eax.global-to-local = alloca i32, align 4
  %v2_25c1d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_25c1d
}

define i32 @function_25c20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25c20:
  %v0_25c29 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_25c2e = load i32, i32* @ebp, align 4
  %v2_25c2e = add i32 %v1_25c2e, -12
  %v3_25c2e = inttoptr i32 %v2_25c2e to i32*
  store i32 %v0_25c29, i32* %v3_25c2e, align 4
  %v0_25c33 = load i32, i32* @ebp, align 4
  %v1_25c33 = add i32 %v0_25c33, -28
  %v2_25c33 = inttoptr i32 %v1_25c33 to i32*
  %v3_25c33 = load i32, i32* %v2_25c33, align 4
  %v1_25c39 = call i32 @unknown_51328(i32 %v3_25c33)
  %v0_25c3e = load i32, i32* @ebp, align 4
  %v1_25c3e = add i32 %v0_25c3e, -28
  %v2_25c3e = inttoptr i32 %v1_25c3e to i32*
  %v3_25c3e = load i32, i32* %v2_25c3e, align 4
  %v1_25c41 = add i32 %v3_25c3e, 4
  %v2_25c41 = inttoptr i32 %v1_25c41 to i32*
  store i32 0, i32* %v2_25c41, align 4
  %v0_25c48 = load i32, i32* @ebp, align 4
  %v1_25c48 = add i32 %v0_25c48, -28
  %v2_25c48 = inttoptr i32 %v1_25c48 to i32*
  %v3_25c48 = load i32, i32* %v2_25c48, align 4
  %v1_25c4b = add i32 %v3_25c48, 8
  %v2_25c4b = inttoptr i32 %v1_25c4b to i32*
  store i32 0, i32* %v2_25c4b, align 4
  %v0_25c52 = load i32, i32* @ebp, align 4
  %v1_25c52 = add i32 %v0_25c52, -28
  %v2_25c52 = inttoptr i32 %v1_25c52 to i32*
  %v3_25c52 = load i32, i32* %v2_25c52, align 4
  %v1_25c55 = add i32 %v3_25c52, 12
  %v2_25c55 = inttoptr i32 %v1_25c55 to i32*
  store i32 0, i32* %v2_25c55, align 4
  %v0_25c5c = load i32, i32* @ebp, align 4
  %v1_25c5c = add i32 %v0_25c5c, -28
  %v2_25c5c = inttoptr i32 %v1_25c5c to i32*
  %v3_25c5c = load i32, i32* %v2_25c5c, align 4
  %v1_25c5f = add i32 %v3_25c5c, 16
  %v2_25c5f = inttoptr i32 %v1_25c5f to i32*
  store i32 0, i32* %v2_25c5f, align 4
  %v0_25c66 = load i32, i32* @ebp, align 4
  %v1_25c66 = add i32 %v0_25c66, -28
  %v2_25c66 = inttoptr i32 %v1_25c66 to i32*
  %v3_25c66 = load i32, i32* %v2_25c66, align 4
  %v1_25c69 = add i32 %v3_25c66, 20
  %v2_25c69 = inttoptr i32 %v1_25c69 to i32*
  store i32 0, i32* %v2_25c69, align 4
  %v0_25c70 = load i32, i32* @ebp, align 4
  %v1_25c70 = add i32 %v0_25c70, -28
  %v2_25c70 = inttoptr i32 %v1_25c70 to i32*
  %v3_25c70 = load i32, i32* %v2_25c70, align 4
  %v1_25c76 = call i32 @unknown_5135e(i32 %v3_25c70)
  %v0_25c7b = load i32, i32* @ebp, align 4
  %v1_25c7b = add i32 %v0_25c7b, -12
  %v2_25c7b = inttoptr i32 %v1_25c7b to i32*
  %v3_25c7b = load i32, i32* %v2_25c7b, align 4
  %v1_25c7e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25c7e = xor i32 %v1_25c7e, %v3_25c7b
  %v3_25c7e = icmp eq i32 %v2_25c7e, 0
  store i32 %v2_25c7e, i32* @eax, align 4
  br i1 %v3_25c7e, label %bb, label %dec_label_pc_25c87

bb:                                               ; preds = %dec_label_pc_25c20
  %v1_25c85 = call i32 @function_25c8c()
  br label %dec_label_pc_25c87

dec_label_pc_25c87:                               ; preds = %bb, %dec_label_pc_25c20
  %v2_25c85 = phi i32 [ %v1_25c85, %bb ], [ %v2_25c7e, %dec_label_pc_25c20 ]
  ret i32 %v2_25c85
}

define i32 @function_25c8c() local_unnamed_addr {
dec_label_pc_25c8c:
  %v0_25c8d = load i32, i32* @eax, align 4
  ret i32 %v0_25c8d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS3_9null_typeESA_SA_SA_SA_SA_SA_EEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25c8e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25cb1

bb:                                               ; preds = %dec_label_pc_25c8e
  %v2_25caf = call i32 @function_25cb6(i32 %arg1)
  br label %dec_label_pc_25cb1

dec_label_pc_25cb1:                               ; preds = %bb, %dec_label_pc_25c8e
  %v3_25caf = phi i32 [ %v2_25caf, %bb ], [ 0, %dec_label_pc_25c8e ]
  ret i32 %v3_25caf
}

define i32 @function_25cb6(i32 %arg1) local_unnamed_addr {
dec_label_pc_25cb6:
  %v0_25cb7 = load i32, i32* @eax, align 4
  ret i32 %v0_25cb7
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS9_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25cb8:
  %stack_var_-17 = alloca i32, align 4
  %v1_25cd9 = add i32 %arg2, 16
  %v1_25cdf = call i32 @unknown_514d5(i32 %v1_25cd9)
  %v2_25ce6 = ptrtoint i32* %stack_var_-17 to i32
  %v2_25cf3 = call i32 @unknown_51450(i32 %v2_25ce6, i32 %arg1)
  %v2_25d05 = call i32 @unknown_51502(i32 %v2_25ce6, i32 %v1_25cdf)
  %v1_25d10 = call i32 @unknown_514a0(i32 %v2_25ce6)
  %v2_25d22 = call i32 @unknown_5153e(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25d33

bb:                                               ; preds = %dec_label_pc_25cb8
  %v1_25d31 = call i32 @function_25d51()
  store i32 %v1_25d31, i32* @eax, align 4
  br label %dec_label_pc_25d33

dec_label_pc_25d33:                               ; preds = %bb, %dec_label_pc_25cb8
  %v0_25d33 = call i32 @function_25d4c()
  ret i32 %v0_25d33

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_25d36() local_unnamed_addr {
dec_label_pc_25d36:
  %eax.global-to-local = alloca i32, align 4
  %v0_25d36 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25d36
}

define i32 @function_25d4c() local_unnamed_addr {
dec_label_pc_25d4c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25d51() local_unnamed_addr {
dec_label_pc_25d51:
  %v0_25d55 = load i32, i32* @eax, align 4
  ret i32 %v0_25d55
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE13_Rb_tree_implIS8_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25d56:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_25d73 = call i32 @unknown_51626(i32 %arg1)
  %v1_25d7b = add i32 %arg1, 4
  %v2_25d7b = inttoptr i32 %v1_25d7b to i32*
  store i32 0, i32* %v2_25d7b, align 4
  %v1_25d85 = add i32 %arg1, 8
  %v2_25d85 = inttoptr i32 %v1_25d85 to i32*
  store i32 0, i32* %v2_25d85, align 4
  %v1_25d8f = add i32 %arg1, 12
  %v2_25d8f = inttoptr i32 %v1_25d8f to i32*
  store i32 0, i32* %v2_25d8f, align 4
  %v1_25d99 = add i32 %arg1, 16
  %v2_25d99 = inttoptr i32 %v1_25d99 to i32*
  store i32 0, i32* %v2_25d99, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_25da3 = add i32 %arg1, 20
  %v2_25da3 = inttoptr i32 %v1_25da3 to i32*
  store i32 0, i32* %v2_25da3, align 4
  %v3_25da3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_25da3
}

define i32 @function_25dac(i32 %arg1) local_unnamed_addr {
dec_label_pc_25dac:
  %v0_25db0 = call i32 @unknown_5165c()
  %v0_25db5 = load i32, i32* @ebp, align 4
  %v1_25db5 = add i32 %v0_25db5, -12
  %v2_25db5 = inttoptr i32 %v1_25db5 to i32*
  %v3_25db5 = load i32, i32* %v2_25db5, align 4
  %v1_25db8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25db8 = xor i32 %v1_25db8, %v3_25db5
  %v3_25db8 = icmp eq i32 %v2_25db8, 0
  store i32 %v2_25db8, i32* @eax, align 4
  br i1 %v3_25db8, label %bb, label %dec_label_pc_25dc1

bb:                                               ; preds = %dec_label_pc_25dac
  %v1_25dbf = call i32 @function_25dc6()
  br label %dec_label_pc_25dc1

dec_label_pc_25dc1:                               ; preds = %bb, %dec_label_pc_25dac
  %v2_25dbf = phi i32 [ %v1_25dbf, %bb ], [ %v2_25db8, %dec_label_pc_25dac ]
  ret i32 %v2_25dbf
}

define i32 @function_25dc6() local_unnamed_addr {
dec_label_pc_25dc6:
  %v0_25dc7 = load i32, i32* @eax, align 4
  ret i32 %v0_25dc7
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_25dc8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25deb

bb:                                               ; preds = %dec_label_pc_25dc8
  %v2_25de9 = call i32 @function_25df0(i32 %arg1)
  br label %dec_label_pc_25deb

dec_label_pc_25deb:                               ; preds = %bb, %dec_label_pc_25dc8
  %v3_25de9 = phi i32 [ %v2_25de9, %bb ], [ 0, %dec_label_pc_25dc8 ]
  ret i32 %v3_25de9
}

define i32 @function_25df0(i32 %arg1) local_unnamed_addr {
dec_label_pc_25df0:
  %v0_25df1 = load i32, i32* @eax, align 4
  ret i32 %v0_25df1
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base() local_unnamed_addr {
dec_label_pc_25df2:
  %eax.global-to-local = alloca i32, align 4
  %v17_25df5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_25df5
}

define i32 @function_25dfa(i32 %arg1) local_unnamed_addr {
dec_label_pc_25dfa:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_25dfa = load i32, i32* @ecx, align 4
  %v1_25dfa = add i32 %v0_25dfa, -1587157947
  %v2_25dfa = inttoptr i32 %v1_25dfa to i8*
  %v3_25dfa = load i8, i8* %v2_25dfa, align 1
  %v5_25dfa = trunc i32 %v0_25dfa to i8
  %v6_25dfa = or i8 %v3_25dfa, %v5_25dfa
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_25dfa, i8* %v2_25dfa, align 1
  %v0_25e00 = load i32, i32* @eax, align 4
  %v1_25e00 = trunc i32 %v0_25e00 to i8
  %v2_25e00 = load i1, i1* %cf.global-to-local, align 1
  %v3_25e00 = zext i1 %v2_25e00 to i8
  %v4_25e00 = add i8 %v3_25e00, %v1_25e00
  %v19_25e00 = icmp ule i8 %v4_25e00, %v1_25e00
  %v21_25e00 = icmp eq i1 %v2_25e00, %v19_25e00
  store i1 %v21_25e00, i1* %cf.global-to-local, align 1
  %v22_25e00 = zext i8 %v4_25e00 to i32
  %v24_25e00 = and i32 %v0_25e00, -256
  %v25_25e00 = or i32 %v22_25e00, %v24_25e00
  store i32 %v25_25e00, i32* %eax.global-to-local, align 4
  %v1_25e02 = inttoptr i32 %v25_25e00 to i8*
  %v2_25e02 = load i8, i8* %v1_25e02, align 1
  %v5_25e02 = add i8 %v2_25e02, %v4_25e00
  store i8 %v5_25e02, i8* %v1_25e02, align 1
  %v0_25e04 = load i32, i32* %eax.global-to-local, align 4
  %v1_25e04 = load i32, i32* @ebp, align 4
  %v2_25e04 = add i32 %v1_25e04, -12
  %v3_25e04 = inttoptr i32 %v2_25e04 to i32*
  store i32 %v0_25e04, i32* %v3_25e04, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_25e09 = load i32, i32* @ebp, align 4
  %v1_25e09 = add i32 %v0_25e09, -28
  %v2_25e09 = inttoptr i32 %v1_25e09 to i32*
  %v3_25e09 = load i32, i32* %v2_25e09, align 4
  store i32 %v3_25e09, i32* %eax.global-to-local, align 4
  %v1_25e0c = add i32 %v3_25e09, 12
  %v2_25e0c = inttoptr i32 %v1_25e0c to i32*
  %v3_25e0c = load i32, i32* %v2_25e0c, align 4
  store i32 %v3_25e0c, i32* @eax, align 4
  %v1_25e0f = add i32 %v0_25e09, -12
  %v2_25e0f = inttoptr i32 %v1_25e0f to i32*
  %v3_25e0f = load i32, i32* %v2_25e0f, align 4
  %v1_25e12 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_25e12 = icmp eq i32 %v1_25e12, %v3_25e0f
  br i1 %v3_25e12, label %bb, label %dec_label_pc_25e1b

bb:                                               ; preds = %dec_label_pc_25dfa
  %v1_25e19 = call i32 @function_25e20()
  store i32 %v1_25e19, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_25e1b

dec_label_pc_25e1b:                               ; preds = %bb, %dec_label_pc_25dfa
  %v2_25e19 = phi i32 [ %v1_25e19, %bb ], [ %v3_25e0c, %dec_label_pc_25dfa ]
  ret i32 %v2_25e19

; uselistorder directives
  uselistorder i8 %v4_25e00, { 0, 2, 1 }
  uselistorder i8 %v1_25e00, { 1, 0 }
}

define i32 @function_25e20() local_unnamed_addr {
dec_label_pc_25e20:
  %v0_25e21 = load i32, i32* @eax, align 4
  ret i32 %v0_25e21
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_25e22:
  ret i32 %arg1
}

define i32 @function_25e4f() local_unnamed_addr {
dec_label_pc_25e4f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_25e4f = load i32, i32* %ecx.global-to-local, align 4
  %v1_25e4f = add i32 %v0_25e4f, -1
  store i32 %v1_25e4f, i32* %ecx.global-to-local, align 4
  %v0_25e51 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25e51
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25e52:
  %stack_var_-17 = alloca i32, align 4
  %v1_25e73 = add i32 %arg2, 16
  %v1_25e79 = call i32 @unknown_51833(i32 %v1_25e73)
  %v2_25e80 = ptrtoint i32* %stack_var_-17 to i32
  %v2_25e8d = call i32 @unknown_517ae(i32 %v2_25e80, i32 %arg1)
  %v2_25e9f = call i32 @unknown_51860(i32 %v2_25e80, i32 %v1_25e79)
  ret i32 %v2_25e80
}

define i32 @function_25eac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_25eac:
  store i32 1166737409, i32* @ecx, align 4
  %v0_25eb6 = load i32, i32* @ebp, align 4
  %v1_25eb6 = add i32 %v0_25eb6, -28
  %v2_25eb6 = inttoptr i32 %v1_25eb6 to i32*
  %v3_25eb6 = load i32, i32* %v2_25eb6, align 4
  %v1_25ebc = call i32 @unknown_5189c(i32 %v3_25eb6)
  %v0_25ec1 = load i32, i32* @ebp, align 4
  %v1_25ec1 = add i32 %v0_25ec1, -12
  %v2_25ec1 = inttoptr i32 %v1_25ec1 to i32*
  %v3_25ec1 = load i32, i32* %v2_25ec1, align 4
  %v1_25ec4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_25ec4 = xor i32 %v1_25ec4, %v3_25ec1
  %v3_25ec4 = icmp eq i32 %v2_25ec4, 0
  store i32 %v2_25ec4, i32* @eax, align 4
  br i1 %v3_25ec4, label %bb, label %dec_label_pc_25ecd

bb:                                               ; preds = %dec_label_pc_25eac
  %v1_25ecb = call i32 @function_25eeb()
  store i32 %v1_25ecb, i32* @eax, align 4
  br label %dec_label_pc_25ecd

dec_label_pc_25ecd:                               ; preds = %bb, %dec_label_pc_25eac
  %v0_25ecd = call i32 @function_25ee6()
  ret i32 %v0_25ecd
}

define i32 @function_25ed0() local_unnamed_addr {
dec_label_pc_25ed0:
  %eax.global-to-local = alloca i32, align 4
  %v0_25ed0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_25ed0
}

define i32 @function_25ed8(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ed8:
  %v3_25ede = load i32, i32* @eax, align 4
  ret i32 %v3_25ede
}

define i32 @function_25ee6() local_unnamed_addr {
dec_label_pc_25ee6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_25eeb() local_unnamed_addr {
dec_label_pc_25eeb:
  %v0_25eef = load i32, i32* @eax, align 4
  ret i32 %v0_25eef
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_25ef0:
  %v1_25f0a = add i32 %arg1, 4
  store i32 %v1_25f0a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25f19

bb:                                               ; preds = %dec_label_pc_25ef0
  %v2_25f17 = call i32 @function_25f1e(i32 %arg1)
  br label %dec_label_pc_25f19

dec_label_pc_25f19:                               ; preds = %bb, %dec_label_pc_25ef0
  %v3_25f17 = phi i32 [ %v2_25f17, %bb ], [ %v1_25f0a, %dec_label_pc_25ef0 ]
  ret i32 %v3_25f17
}

define i32 @function_25f1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f1e:
  %v0_25f1f = load i32, i32* @eax, align 4
  ret i32 %v0_25f1f
}

define i32 @_ZNKSt10_Select1stISt4pairIK10txnouttype7CScriptEEclERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25f20:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25f4c

bb:                                               ; preds = %dec_label_pc_25f20
  %v3_25f4a = call i32 @function_25f51(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_25f4c

dec_label_pc_25f4c:                               ; preds = %bb, %dec_label_pc_25f20
  %v4_25f4a = phi i32 [ %v3_25f4a, %bb ], [ %arg2, %dec_label_pc_25f20 ]
  ret i32 %v4_25f4a
}

define i32 @function_25f51(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_25f51:
  %v0_25f52 = load i32, i32* @eax, align 4
  ret i32 %v0_25f52
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_25f53:
  %stack_var_-17 = alloca i32, align 4
  %v1_25f70 = call i32 @unknown_519e7(i32 %arg1)
  %v2_25f79 = ptrtoint i32* %stack_var_-17 to i32
  %v2_25f7f = call i32 @unknown_4be73(i32 %v2_25f79, i32 %v1_25f70)
  ret i32 %v2_25f7f
}

define i32 @function_25f84(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_25f84:
  %v0_25f84 = load i32, i32* @ebp, align 4
  %v1_25f84 = add i32 %v0_25f84, -12
  %v2_25f84 = inttoptr i32 %v1_25f84 to i32*
  %v3_25f84 = load i32, i32* %v2_25f84, align 4
  %v1_25f87 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_25f87 = icmp eq i32 %v1_25f87, %v3_25f84
  br i1 %v3_25f87, label %bb, label %dec_label_pc_25f84.dec_label_pc_25f90_crit_edge

dec_label_pc_25f84.dec_label_pc_25f90_crit_edge:  ; preds = %dec_label_pc_25f84
  %v2_25f8e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_25f90

bb:                                               ; preds = %dec_label_pc_25f84
  %v1_25f8e = call i32 @function_25f95()
  br label %dec_label_pc_25f90

dec_label_pc_25f90:                               ; preds = %dec_label_pc_25f84.dec_label_pc_25f90_crit_edge, %bb
  %v2_25f8e = phi i32 [ %v2_25f8e.pre, %dec_label_pc_25f84.dec_label_pc_25f90_crit_edge ], [ %v1_25f8e, %bb ]
  ret i32 %v2_25f8e

; uselistorder directives
  uselistorder label %dec_label_pc_25f90, { 1, 0 }
}

define i32 @function_25f95() local_unnamed_addr {
dec_label_pc_25f95:
  %v0_25f96 = load i32, i32* @eax, align 4
  ret i32 %v0_25f96
}

define i32 @_ZNKSt4lessI10txnouttypeEclERKS0_S3_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25f98:
  %v2_25fbe = load i32, i32* %arg2, align 4
  %v1_25fc5 = inttoptr i32 %arg3 to i32*
  %v2_25fc5 = load i32, i32* %v1_25fc5, align 4
  %v2_25fc7 = sub i32 %v2_25fbe, %v2_25fc5
  %v8_25fc7 = xor i32 %v2_25fc5, %v2_25fbe
  %v9_25fc7 = xor i32 %v2_25fc7, %v2_25fbe
  %v10_25fc7 = and i32 %v9_25fc7, %v8_25fc7
  %v11_25fc7 = icmp slt i32 %v10_25fc7, 0
  %v13_25fc7 = icmp slt i32 %v2_25fc7, 0
  %v2_25fc9 = icmp ne i1 %v13_25fc7, %v11_25fc7
  %v3_25fc9 = zext i1 %v2_25fc9 to i32
  %v5_25fc9 = and i32 %v2_25fc5, -256
  %v6_25fc9 = or i32 %v3_25fc9, %v5_25fc9
  store i32 %v6_25fc9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_25fd8

bb:                                               ; preds = %dec_label_pc_25f98
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v4_25fd6 = call i32 @function_25fdd(i32 %arg3, i32 %tmp102, i32 %arg1)
  br label %dec_label_pc_25fd8

dec_label_pc_25fd8:                               ; preds = %bb, %dec_label_pc_25f98
  %v5_25fd6 = phi i32 [ %v4_25fd6, %bb ], [ %v6_25fc9, %dec_label_pc_25f98 ]
  ret i32 %v5_25fd6

; uselistorder directives
  uselistorder i32 %v2_25fc7, { 1, 0 }
  uselistorder i32 %v2_25fc5, { 1, 0, 2 }
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_25fdd(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_25fdd:
  %v0_25fde = load i32, i32* @eax, align 4
  ret i32 %v0_25fde
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEC1EPSt13_Rb_tree_nodeIS4_E(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_25fe0:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26011

bb:                                               ; preds = %dec_label_pc_25fe0
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v3_2600f = call i32 @function_26016(i32 %arg2, i32 %tmp8)
  br label %dec_label_pc_26011

dec_label_pc_26011:                               ; preds = %bb, %dec_label_pc_25fe0
  %v4_2600f = phi i32 [ %v3_2600f, %bb ], [ 0, %dec_label_pc_25fe0 ]
  ret i32 %v4_2600f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26016(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26016:
  %v0_26017 = load i32, i32* @eax, align 4
  ret i32 %v0_26017
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26018:
  %v1_26038 = add i32 %arg2, 12
  %v2_26038 = inttoptr i32 %v1_26038 to i32*
  %v3_26038 = load i32, i32* %v2_26038, align 4
  %v2_26045 = call i32 @unknown_4bff8(i32 %arg1, i32 %v3_26038)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26059

bb:                                               ; preds = %dec_label_pc_26018
  %v1_26057 = call i32 @function_2605e()
  br label %dec_label_pc_26059

dec_label_pc_26059:                               ; preds = %bb, %dec_label_pc_26018
  %v2_26057 = phi i32 [ %v1_26057, %bb ], [ %arg1, %dec_label_pc_26018 ]
  ret i32 %v2_26057

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2605e() local_unnamed_addr {
dec_label_pc_2605e:
  %v0_2605f = load i32, i32* @eax, align 4
  ret i32 %v0_2605f
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_26062:
  %stack_var_-18 = alloca i32, align 4
  %v10_26092 = icmp eq i32 %arg3, 0
  %v1_26096 = icmp eq i1 %v10_26092, false
  br i1 %v1_26096, label %dec_label_pc_260ea, label %dec_label_pc_26098

dec_label_pc_26098:                               ; preds = %dec_label_pc_26062
  %v1_2609e = call i32 @unknown_4bf52(i32 %arg2)
  %v15_260a3 = icmp eq i32 %v1_2609e, %arg4
  br i1 %v15_260a3, label %dec_label_pc_260ea, label %dec_label_pc_260a8

dec_label_pc_260a8:                               ; preds = %dec_label_pc_26098
  %v1_260ae = call i32 @unknown_4c251(i32 %arg4)
  %v2_260bc = ptrtoint i32* %stack_var_-18 to i32
  %v2_260c2 = call i32 @unknown_4bf82(i32 %v2_260bc, i32 %arg5)
  %v3_260d5 = call i32 @unknown_4bffa(i32 %arg2, i32 %v2_260c2, i32 %v1_260ae)
  br label %dec_label_pc_260ea

dec_label_pc_260ea:                               ; preds = %dec_label_pc_260a8, %dec_label_pc_26062, %dec_label_pc_26098
  ret i32 %arg5

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_260ea, { 0, 2, 1 }
}

define i32 @function_260f2(i32 %arg1) local_unnamed_addr {
dec_label_pc_260f2:
  %v0_260f4 = load i32, i32* @ebp, align 4
  %v1_260f4 = add i32 %v0_260f4, -32
  %v2_260f4 = inttoptr i32 %v1_260f4 to i32*
  %v3_260f4 = load i32, i32* %v2_260f4, align 4
  %v1_260fa = call i32 @unknown_51b26(i32 %v3_260f4)
  %v1_260ff = load i32, i32* @ebp, align 4
  %v2_260ff = add i32 %v1_260ff, -20
  %v3_260ff = inttoptr i32 %v2_260ff to i32*
  store i32 %v1_260fa, i32* %v3_260ff, align 4
  %v0_26102 = load i32, i32* @ebp, align 4
  %v1_26108 = add i32 %v0_26102, -13
  %v2_26108 = inttoptr i32 %v1_26108 to i8*
  %v3_26108 = load i8, i8* %v2_26108, align 1
  %v4_26108 = zext i8 %v3_26108 to i32
  ret i32 %v4_26108
}

define i32 @function_2615a() local_unnamed_addr {
dec_label_pc_2615a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2615a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2615a = add i32 %v0_2615a, 1566262468
  %v2_2615a = inttoptr i32 %v1_2615a to i32*
  %v3_2615a = load i32, i32* %v2_2615a, align 4
  %v4_2615a = add i32 %v3_2615a, 1
  store i32 %v4_2615a, i32* %v2_2615a, align 4
  %v0_26160 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26160
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IK10txnouttype7CScriptEEbEC1ERKS5_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26164:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_2618d = inttoptr i32 %arg2 to i32*
  %v2_2618d = load i32, i32* %v1_2618d, align 4
  store i32 %v2_2618d, i32* %arg1, align 4
  %v2_26194 = load i8, i8* %tmp104, align 1
  %v3_2619a = add i32 %tmp109, 4
  %v4_2619a = inttoptr i32 %v3_2619a to i8*
  store i8 %v2_26194, i8* %v4_2619a, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_261a9

bb:                                               ; preds = %dec_label_pc_26164
  %v5_261a7 = call i32 @function_261ae(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_261a9

dec_label_pc_261a9:                               ; preds = %bb, %dec_label_pc_26164
  %v7_261a7 = phi i32 [ %v5_261a7, %bb ], [ 0, %dec_label_pc_26164 ]
  ret i32 %v7_261a7
}

define i32 @function_261ae(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_261ae:
  %v0_261af = load i32, i32* @eax, align 4
  ret i32 %v0_261af
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIK10txnouttype7CScriptEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_261b0:
  %v2_261ca = load i32, i32* %arg1, align 4
  ret i32 %v2_261ca
}

define i32 @function_261ec() local_unnamed_addr {
dec_label_pc_261ec:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_261ec = load i32, i32* %ecx.global-to-local, align 4
  %v1_261ec = add i32 %v0_261ec, -1
  store i32 %v1_261ec, i32* %ecx.global-to-local, align 4
  %v0_261ee = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_261ee
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_261ef:
  %stack_var_-17 = alloca i32, align 4
  %v1_2620c = call i32 @unknown_51d7f(i32 %arg1)
  %v2_26215 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2621b = call i32 @unknown_4c10f(i32 %v2_26215, i32 %v1_2620c)
  store i32 %v2_2621b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2622c

bb:                                               ; preds = %dec_label_pc_261ef
  %v1_2622a = call i32 @function_26231()
  br label %dec_label_pc_2622c

dec_label_pc_2622c:                               ; preds = %bb, %dec_label_pc_261ef
  %v2_2622a = phi i32 [ %v1_2622a, %bb ], [ %v2_2621b, %dec_label_pc_261ef ]
  ret i32 %v2_2622a
}

define i32 @function_26231() local_unnamed_addr {
dec_label_pc_26231:
  %v0_26232 = load i32, i32* @eax, align 4
  ret i32 %v0_26232
}

define i32 @_ZN5boost6detail13addr_impl_refISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEC1ERSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26234:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_2625a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2625a:
  %v0_2625a = load i32, i32* @ebp, align 4
  %v1_2625a = add i32 %v0_2625a, 1
  store i32 %v1_2625a, i32* @ebp, align 4
  %v0_2625c = load i32, i32* @eax, align 4
  %v1_2625c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2625c = xor i32 %v1_2625c, %v0_2625c
  %v3_2625c = icmp eq i32 %v2_2625c, 0
  store i32 %v2_2625c, i32* @eax, align 4
  br i1 %v3_2625c, label %bb, label %dec_label_pc_26265

bb:                                               ; preds = %dec_label_pc_2625a
  %v1_26263 = call i32 @function_2626a()
  br label %dec_label_pc_26265

dec_label_pc_26265:                               ; preds = %bb, %dec_label_pc_2625a
  %v2_26263 = phi i32 [ %v1_26263, %bb ], [ %v2_2625c, %dec_label_pc_2625a ]
  ret i32 %v2_26263
}

define i32 @function_2626a() local_unnamed_addr {
dec_label_pc_2626a:
  %v0_2626b = load i32, i32* @eax, align 4
  ret i32 %v0_2626b
}

define i32 @_ZNK5boost6detail13addr_impl_refISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEcvRSB_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2626c:
  %v2_26286 = load i32, i32* %arg1, align 4
  store i32 %v2_26286, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26294

bb:                                               ; preds = %dec_label_pc_2626c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26292 = call i32 @function_26299(i32 %tmp100)
  br label %dec_label_pc_26294

dec_label_pc_26294:                               ; preds = %bb, %dec_label_pc_2626c
  %v3_26292 = phi i32 [ %v2_26292, %bb ], [ %v2_26286, %dec_label_pc_2626c ]
  ret i32 %v3_26292

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26299(i32 %arg1) local_unnamed_addr {
dec_label_pc_26299:
  %v0_2629a = load i32, i32* @eax, align 4
  ret i32 %v0_2629a
}

define i32 @_ZN5boost6detail14addressof_implISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEE1fERSB_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2629b:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_262c7

bb:                                               ; preds = %dec_label_pc_2629b
  %v3_262c5 = call i32 @function_262cc(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_262c7

dec_label_pc_262c7:                               ; preds = %bb, %dec_label_pc_2629b
  %v4_262c5 = phi i32 [ %v3_262c5, %bb ], [ %arg1, %dec_label_pc_2629b ]
  ret i32 %v4_262c5
}

define i32 @function_262cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262cc:
  %v0_262cd = load i32, i32* @eax, align 4
  ret i32 %v0_262cd
}

define i32 @_ZN5boost12range_detail11range_beginISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS_14range_iteratorIT_E4typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_262ce:
  %v2_262f8 = call i32 @unknown_51e8e(i32 %arg1, i32 %arg2)
  ret i32 %v2_262f8
}

define i32 @function_26302(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26302:
  %v0_26306 = load i32, i32* @edx, align 4
  %v1_26306 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26306 = icmp eq i32 %v1_26306, %v0_26306
  br i1 %v3_26306, label %bb, label %dec_label_pc_26302.dec_label_pc_2630f_crit_edge

dec_label_pc_26302.dec_label_pc_2630f_crit_edge:  ; preds = %dec_label_pc_26302
  %v2_2630d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2630f

bb:                                               ; preds = %dec_label_pc_26302
  %v1_2630d = call i32 @function_26314()
  br label %dec_label_pc_2630f

dec_label_pc_2630f:                               ; preds = %dec_label_pc_26302.dec_label_pc_2630f_crit_edge, %bb
  %v2_2630d = phi i32 [ %v2_2630d.pre, %dec_label_pc_26302.dec_label_pc_2630f_crit_edge ], [ %v1_2630d, %bb ]
  ret i32 %v2_2630d

; uselistorder directives
  uselistorder label %dec_label_pc_2630f, { 1, 0 }
}

define i32 @function_26314() local_unnamed_addr {
dec_label_pc_26314:
  %v0_26315 = load i32, i32* @eax, align 4
  ret i32 %v0_26315
}

define i32 @_ZN5boost12range_detail9range_endISt3mapI10txnouttype7CScriptSt4lessIS3_ESaISt4pairIKS3_S4_EEEEENS_14range_iteratorIT_E4typeERSD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26318:
  %v2_26342 = call i32 @unknown_51f22(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26356(i32 %arg1) local_unnamed_addr {
dec_label_pc_26356:
  %v0_26356 = load i32, i32* @ebp, align 4
  %v1_26356 = load i32, i32* @eax, align 4
  %v3_26356 = add i32 %v0_26356, -24
  %v4_26356 = add i32 %v3_26356, %v1_26356
  %v5_26356 = inttoptr i32 %v4_26356 to i8*
  %v6_26356 = load i8, i8* %v5_26356, align 1
  %v7_26356 = load i32, i32* @edx, align 4
  %v8_26356 = udiv i32 %v7_26356, 256
  %v9_26356 = trunc i32 %v8_26356 to i8
  %v10_26356 = add i8 %v9_26356, %v6_26356
  store i8 %v10_26356, i8* %v5_26356, align 1
  %v31_26356 = load i32, i32* @eax, align 4
  ret i32 %v31_26356
}

declare i32 @__stack_chk_fail.844(i32) local_unnamed_addr

define i32 @function_2635d() local_unnamed_addr {
dec_label_pc_2635d:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2635d = load i32, i32* %ecx.global-to-local, align 4
  %v1_2635d = add i32 %v0_2635d, -1
  store i32 %v1_2635d, i32* %ecx.global-to-local, align 4
  %v0_2635f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2635f
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK22CKeyStoreIsMineVisitorEC1ERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26362:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26393

bb:                                               ; preds = %dec_label_pc_26362
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_26391 = call i32 @function_26398(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_26393

dec_label_pc_26393:                               ; preds = %bb, %dec_label_pc_26362
  %v4_26391 = phi i32 [ %v3_26391, %bb ], [ 0, %dec_label_pc_26362 ]
  ret i32 %v4_26391

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26398(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26398:
  %v0_26399 = load i32, i32* @eax, align 4
  ret i32 %v0_26399
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14invoke_visitorIK22CKeyStoreIsMineVisitorEEEENT_11result_typeERSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2639a:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_263bb = add i32 %tmp105, 4
  %v1_263c1 = call i32 @unknown_4ccf4(i32 %v1_263bb)
  %v1_263ce = call i32 @unknown_45df8(i32 %tmp105)
  %v2_263d8 = load i32, i32* %arg1, align 4
  %v4_263ec = call i32 @unknown_51fee(i32 %v2_263d8, i32 %v1_263ce, i32 %arg2, i32 %v1_263c1)
  store i32 %v4_263ec, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_263fd

bb:                                               ; preds = %dec_label_pc_2639a
  %v1_263fb = call i32 @function_26402()
  br label %dec_label_pc_263fd

dec_label_pc_263fd:                               ; preds = %bb, %dec_label_pc_2639a
  %v2_263fb = phi i32 [ %v1_263fb, %bb ], [ %v4_263ec, %dec_label_pc_2639a ]
  ret i32 %v2_263fb

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_26402() local_unnamed_addr {
dec_label_pc_26402:
  %v0_26407 = load i32, i32* @eax, align 4
  ret i32 %v0_26407
}

define i32 @_ZNSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE12_Vector_implC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26408:
  %v2_26432 = call i32 @unknown_520d0(i32 %arg1, i32 %arg2)
  ret i32 %v2_26432
}

define i32 @function_26438(i32 %arg1) local_unnamed_addr {
dec_label_pc_26438:
  %v0_26438 = load i32, i32* @ebp, align 4
  %v1_26438 = add i32 %v0_26438, 1
  store i32 %v1_26438, i32* @ebp, align 4
  %v2_2643b = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2643b = load i32, i32* @eax, align 4
  %v4_2643b = trunc i32 %v3_2643b to i8
  %v5_2643b = add i8 %v4_2643b, %v2_2643b
  %v21_2643b = inttoptr i32 %v3_2643b to i8*
  store i8 %v5_2643b, i8* %v21_2643b, align 1
  %v2_2643d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2643d = load i32, i32* @eax, align 4
  %v4_2643d = trunc i32 %v3_2643d to i8
  %v5_2643d = add i8 %v4_2643d, %v2_2643d
  %v21_2643d = inttoptr i32 %v3_2643d to i8*
  store i8 %v5_2643d, i8* %v21_2643d, align 1
  %v0_2643f = load i32, i32* @ebx, align 4
  %v1_2643f = add i32 %v0_2643f, 1086841925
  %v2_2643f = inttoptr i32 %v1_2643f to i8*
  %v3_2643f = load i8, i8* %v2_2643f, align 1
  %v4_2643f = load i32, i32* @ecx, align 4
  %v5_2643f = trunc i32 %v4_2643f to i8
  %v6_2643f = add i8 %v5_2643f, %v3_2643f
  store i8 %v6_2643f, i8* %v2_2643f, align 1
  %v0_26445 = load i32, i32* @eax, align 4
  %v1_26445 = trunc i32 %v0_26445 to i8
  %v1_26447 = inttoptr i32 %v0_26445 to i8*
  %v2_26447 = load i8, i8* %v1_26447, align 1
  %v5_26447 = add i8 %v2_26447, %v1_26445
  store i8 %v5_26447, i8* %v1_26447, align 1
  %v0_26449 = load i32, i32* @ebx, align 4
  %v1_26449 = add i32 %v0_26449, 1086841925
  %v2_26449 = inttoptr i32 %v1_26449 to i8*
  %v3_26449 = load i8, i8* %v2_26449, align 1
  %v4_26449 = load i32, i32* @ecx, align 4
  %v5_26449 = trunc i32 %v4_26449 to i8
  %v6_26449 = add i8 %v5_26449, %v3_26449
  store i8 %v6_26449, i8* %v2_26449, align 1
  %v0_2644f = load i32, i32* @eax, align 4
  %v1_2644f = inttoptr i32 %v0_2644f to i8*
  %v2_2644f = load i8, i8* %v1_2644f, align 1
  %v4_2644f = trunc i32 %v0_2644f to i8
  %v5_2644f = or i8 %v2_2644f, %v4_2644f
  store i8 %v5_2644f, i8* %v1_2644f, align 1
  %v0_26451 = load i32, i32* @eax, align 4
  %v1_26451 = inttoptr i32 %v0_26451 to i8*
  %v2_26451 = load i8, i8* %v1_26451, align 1
  %v4_26451 = trunc i32 %v0_26451 to i8
  %v5_26451 = add i8 %v2_26451, %v4_26451
  store i8 %v5_26451, i8* %v1_26451, align 1
  %v0_26453 = load i32, i32* @ebx, align 4
  %v1_26453 = add i32 %v0_26453, 862319685
  %v2_26453 = inttoptr i32 %v1_26453 to i8*
  %v3_26453 = load i8, i8* %v2_26453, align 1
  %v4_26453 = load i32, i32* @ecx, align 4
  %v5_26453 = trunc i32 %v4_26453 to i8
  %v6_26453 = add i8 %v5_26453, %v3_26453
  store i8 %v6_26453, i8* %v2_26453, align 1
  %v0_26459 = load i32, i32* @eax, align 4
  %v1_26459 = add i32 %v0_26459, 20
  %v10_26459 = icmp eq i32 %v1_26459, 0
  store i32 %v1_26459, i32* @eax, align 4
  br i1 %v10_26459, label %bb, label %dec_label_pc_26460

bb:                                               ; preds = %dec_label_pc_26438
  %v1_2645e = call i32 @function_26465()
  br label %dec_label_pc_26460

dec_label_pc_26460:                               ; preds = %bb, %dec_label_pc_26438
  %v2_2645e = phi i32 [ %v1_2645e, %bb ], [ %v1_26459, %dec_label_pc_26438 ]
  ret i32 %v2_2645e
}

define i32 @function_26465() local_unnamed_addr {
dec_label_pc_26465:
  %v0_26466 = load i32, i32* @eax, align 4
  ret i32 %v0_26466
}

define i32 @_ZNSt6vectorIS_IhSaIhEESaIS1_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPS1_S3_EEEEvT_S9_St20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_26468:
  %v2_2649f = call i32 @unknown_52172(i32 %arg2, i32 %arg3)
  ret i32 %arg1
}

define i32 @function_264ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_264ac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_264ba() local_unnamed_addr {
dec_label_pc_264ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_264ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_264ba
}

define i32 @function_26505() local_unnamed_addr {
dec_label_pc_26505:
  %eax.global-to-local = alloca i32, align 4
  %v0_26505 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26505
}

define i32 @function_2651c() local_unnamed_addr {
dec_label_pc_2651c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2651c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2651c = add i32 %v0_2651c, -1
  store i32 %v1_2651c, i32* %ecx.global-to-local, align 4
  %v0_2651e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2651e
}

define i32 @_ZN5boost6detail7variant15direct_assignerI6CKeyIDEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26520:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v1_26543 = call i32 @unknown_3fa08(i32 %tmp102)
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2655c

bb:                                               ; preds = %dec_label_pc_26520
  %v1_2655a = call i32 @function_26561()
  br label %dec_label_pc_2655c

dec_label_pc_2655c:                               ; preds = %bb, %dec_label_pc_26520
  %v2_2655a = phi i32 [ %v1_2655a, %bb ], [ 0, %dec_label_pc_26520 ]
  ret i32 %v2_2655a
}

define i32 @function_26561() local_unnamed_addr {
dec_label_pc_26561:
  %v0_26562 = load i32, i32* @eax, align 4
  ret i32 %v0_26562
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E13apply_visitorINS5_15direct_assignerIS2_EEEENT_11result_typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26564:
  %stack_var_-20 = alloca i32, align 4
  %v2_26588 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2658e = call i32 @unknown_52322(i32 %v2_26588, i32 %arg2)
  %v2_265a0 = call i32 @unknown_5235a(i32 %arg1, i32 %v2_26588)
  store i32 %v2_265a0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_265b1

bb:                                               ; preds = %dec_label_pc_26564
  %v1_265af = call i32 @function_265b6()
  br label %dec_label_pc_265b1

dec_label_pc_265b1:                               ; preds = %bb, %dec_label_pc_26564
  %v2_265af = phi i32 [ %v1_265af, %bb ], [ %v2_265a0, %dec_label_pc_26564 ]
  ret i32 %v2_265af

; uselistorder directives
  uselistorder i32 ()* @function_265b6, { 1, 0 }
}

define i32 @function_265b6() local_unnamed_addr {
dec_label_pc_265b6:
  %v0_265b7 = load i32, i32* @eax, align 4
  ret i32 %v0_265b7
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E14variant_assignERKS7_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_265b8:
  %stack_var_-24 = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v2_265d9 = load i32, i32* %arg1, align 4
  %v1_265de = inttoptr i32 %arg2 to i32*
  %v2_265de = load i32, i32* %v1_265de, align 4
  %v12_265e0 = icmp eq i32 %v2_265d9, %v2_265de
  %v1_265e2 = icmp eq i1 %v12_265e0, false
  br i1 %v1_265e2, label %dec_label_pc_26620, label %dec_label_pc_265e4

dec_label_pc_265e4:                               ; preds = %dec_label_pc_265b8
  %v1_265e7 = add i32 %arg2, 4
  %v1_265ed = call i32 @unknown_4cf12(i32 %v1_265e7)
  %v2_265f6 = ptrtoint i32* %stack_var_-24 to i32
  %v2_265fc = call i32 @function_2fe24(i32 %v2_265f6, i32 %v1_265ed)
  %v2_2660e = call i32 @unknown_5241c(i32 %tmp104, i32 %v2_265f6)
  %v1_26619 = call i32 @unknown_4cc5e(i32 %v2_265f6)
  %v0_2661e = call i32 @function_2668e()
  ret i32 %v0_2661e

dec_label_pc_26620:                               ; preds = %dec_label_pc_265b8
  %v1_26626 = call i32 @unknown_46016(i32 %arg2)
  %v2_26636 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2663c = call i32 @unknown_5248a(i32 %v2_26636, i32 %tmp104, i32 %v1_26626)
  %v2_2664e = call i32 @unknown_524dc(i32 %arg2, i32 %v2_26636)
  %v1_26659 = call i32 @unknown_4cc94(i32 %v2_26636)
  %v0_2665e = call i32 @function_2668e()
  ret i32 %v0_2665e

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
  uselistorder i32 ()* @function_2668e, { 1, 0 }
}

define i32 @function_26661() local_unnamed_addr {
dec_label_pc_26661:
  %eax.global-to-local = alloca i32, align 4
  %v0_26661 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26661
}

define i32 @function_26678() local_unnamed_addr {
dec_label_pc_26678:
  %eax.global-to-local = alloca i32, align 4
  %v0_26678 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26678
}

define i32 @function_2668e() local_unnamed_addr {
dec_label_pc_2668e:
  %v0_2668e = load i32, i32* @ebp, align 4
  %v1_2668e = add i32 %v0_2668e, -12
  %v2_2668e = inttoptr i32 %v1_2668e to i32*
  %v3_2668e = load i32, i32* %v2_2668e, align 4
  %v1_26691 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26691 = xor i32 %v1_26691, %v3_2668e
  %v3_26691 = icmp eq i32 %v2_26691, 0
  store i32 %v2_26691, i32* @eax, align 4
  br i1 %v3_26691, label %bb, label %dec_label_pc_2669a

bb:                                               ; preds = %dec_label_pc_2668e
  %v1_26698 = call i32 @function_2669f()
  br label %dec_label_pc_2669a

dec_label_pc_2669a:                               ; preds = %bb, %dec_label_pc_2668e
  %v2_26698 = phi i32 [ %v1_26698, %bb ], [ %v2_26691, %dec_label_pc_2668e ]
  ret i32 %v2_26698
}

define i32 @function_2669f() local_unnamed_addr {
dec_label_pc_2669f:
  %v0_266a4 = load i32, i32* @eax, align 4
  ret i32 %v0_266a4
}

define i32 @_ZN5boost6detail7variant14assign_storageD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_266a6:
  %v1_266c3 = call i32 @unknown_3b106(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_266d4

bb:                                               ; preds = %dec_label_pc_266a6
  %v1_266d2 = call i32 @function_266d9()
  br label %dec_label_pc_266d4

dec_label_pc_266d4:                               ; preds = %bb, %dec_label_pc_266a6
  %v2_266d2 = phi i32 [ %v1_266d2, %bb ], [ 0, %dec_label_pc_266a6 ]
  ret i32 %v2_266d2
}

define i32 @function_266d9() local_unnamed_addr {
dec_label_pc_266d9:
  %v0_266da = load i32, i32* @eax, align 4
  ret i32 %v0_266da
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assignerD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_266dc:
  %v1_266f9 = call i32 @unknown_3b13c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2670a

bb:                                               ; preds = %dec_label_pc_266dc
  %v1_26708 = call i32 @function_2670f()
  br label %dec_label_pc_2670a

dec_label_pc_2670a:                               ; preds = %bb, %dec_label_pc_266dc
  %v2_26708 = phi i32 [ %v1_26708, %bb ], [ 0, %dec_label_pc_266dc ]
  ret i32 %v2_26708
}

define i32 @function_2670f() local_unnamed_addr {
dec_label_pc_2670f:
  %v0_26710 = load i32, i32* @eax, align 4
  ret i32 %v0_26710
}

define i32 @_ZN5boost6detail7variant4moveINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEEENS1_6detail9move_typeIT_E4typeERSB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_26711:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26737

bb:                                               ; preds = %dec_label_pc_26711
  %v2_26735 = call i32 @function_2673c(i32 %arg1)
  br label %dec_label_pc_26737

dec_label_pc_26737:                               ; preds = %bb, %dec_label_pc_26711
  %v3_26735 = phi i32 [ %v2_26735, %bb ], [ %arg1, %dec_label_pc_26711 ]
  ret i32 %v3_26735
}

define i32 @function_2673c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2673c:
  %v0_2673d = load i32, i32* @eax, align 4
  ret i32 %v0_2673d
}

define i32 @_ZN5boost6detail7variant15direct_assignerI9CScriptIDEC1ERKS3_() local_unnamed_addr {
dec_label_pc_2673e:
  %eax.global-to-local = alloca i32, align 4
  %v2_2673f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2673f
}

define i32 @function_26742(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26742:
  %v0_2674b = load i32, i32* @ebp, align 4
  %v1_2674e = add i32 %v0_2674b, 2
  store i32 %v1_2674e, i32* @ebp, align 4
  %v0_26751 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26756 = add i32 %v0_2674b, -10
  %v3_26756 = inttoptr i32 %v2_26756 to i32*
  store i32 %v0_26751, i32* %v3_26756, align 4
  %v0_2675b = load i32, i32* @ebp, align 4
  %v1_2675b = add i32 %v0_2675b, -28
  %v2_2675b = inttoptr i32 %v1_2675b to i32*
  %v3_2675b = load i32, i32* %v2_2675b, align 4
  %v1_26761 = call i32 @unknown_3fc26(i32 %v3_2675b)
  %v0_26766 = load i32, i32* @ebp, align 4
  %v1_26766 = add i32 %v0_26766, -28
  %v2_26766 = inttoptr i32 %v1_26766 to i32*
  %v3_26766 = load i32, i32* %v2_26766, align 4
  %v1_26769 = add i32 %v0_26766, -32
  %v2_26769 = inttoptr i32 %v1_26769 to i32*
  %v3_26769 = load i32, i32* %v2_26769, align 4
  %v2_2676c = inttoptr i32 %v3_26766 to i32*
  store i32 %v3_26769, i32* %v2_2676c, align 4
  %v0_2676e = load i32, i32* @ebp, align 4
  %v1_2676e = add i32 %v0_2676e, -12
  %v2_2676e = inttoptr i32 %v1_2676e to i32*
  %v3_2676e = load i32, i32* %v2_2676e, align 4
  %v1_26771 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26771 = xor i32 %v1_26771, %v3_2676e
  %v3_26771 = icmp eq i32 %v2_26771, 0
  store i32 %v2_26771, i32* @eax, align 4
  br i1 %v3_26771, label %bb, label %dec_label_pc_2677a

bb:                                               ; preds = %dec_label_pc_26742
  %v1_26778 = call i32 @function_2677f()
  br label %dec_label_pc_2677a

dec_label_pc_2677a:                               ; preds = %bb, %dec_label_pc_26742
  %v3_26778 = phi i32 [ %v1_26778, %bb ], [ %v2_26771, %dec_label_pc_26742 ]
  ret i32 %v3_26778
}

define i32 @function_2677f() local_unnamed_addr {
dec_label_pc_2677f:
  %v0_26780 = load i32, i32* @eax, align 4
  ret i32 %v0_26780
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E13apply_visitorINS5_15direct_assignerIS3_EEEENT_11result_typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26782:
  %stack_var_-20 = alloca i32, align 4
  %v2_267a6 = ptrtoint i32* %stack_var_-20 to i32
  %v2_267ac = call i32 @unknown_52714(i32 %v2_267a6, i32 %arg2)
  ret i32 %v2_267a6
}

define i32 @function_267b5() local_unnamed_addr {
dec_label_pc_267b5:
  %eax.global-to-local = alloca i32, align 4
  %v16_267b5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v16_267b5
}

define i32 @function_267d3() local_unnamed_addr {
dec_label_pc_267d3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_267d3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_267d3 = add i32 %v0_267d3, -1
  store i32 %v1_267d3, i32* %ecx.global-to-local, align 4
  %v0_267d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_267d5
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EC1IS3_EERKT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_267d6:
  %v1_267f7 = add i32 %arg1, 4
  %v1_267fd = call i32 @unknown_4601e(i32 %v1_267f7)
  %v2_2681b = call i32 @unknown_5280e(i32 %arg1, i32 %arg2)
  %v0_26820 = call i32 @function_2683c()
  ret i32 %v0_26820

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26823() local_unnamed_addr {
dec_label_pc_26823:
  %eax.global-to-local = alloca i32, align 4
  %v0_26823 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_26823
}

define i32 @function_2683c() local_unnamed_addr {
dec_label_pc_2683c:
  %v0_2683c = load i32, i32* @ebp, align 4
  %v1_2683c = add i32 %v0_2683c, -12
  %v2_2683c = inttoptr i32 %v1_2683c to i32*
  %v3_2683c = load i32, i32* %v2_2683c, align 4
  %v1_2683f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2683f = xor i32 %v1_2683f, %v3_2683c
  %v3_2683f = icmp eq i32 %v2_2683f, 0
  store i32 %v2_2683f, i32* @eax, align 4
  br i1 %v3_2683f, label %bb, label %dec_label_pc_26848

bb:                                               ; preds = %dec_label_pc_2683c
  %v1_26846 = call i32 @function_2684d()
  br label %dec_label_pc_26848

dec_label_pc_26848:                               ; preds = %bb, %dec_label_pc_2683c
  %v2_26846 = phi i32 [ %v1_26846, %bb ], [ %v2_2683f, %dec_label_pc_2683c ]
  ret i32 %v2_26846
}

define i32 @function_2684d() local_unnamed_addr {
dec_label_pc_2684d:
  %v0_26852 = load i32, i32* @eax, align 4
  ret i32 %v0_26852
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list3I14CNoDestination6CKeyID9CScriptIDEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list2ISE_SF_EEEEE16initializer_node10initializeEPvRKSE_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_26853:
  %edx.global-to-local = alloca i32, align 4
  %v2_2687e = call i32 @function_2f73f(i32 20, i32 %arg1)
  %v1_26883 = icmp eq i32 %v2_2687e, 0
  br i1 %v1_26883, label %dec_label_pc_268a6, label %dec_label_pc_26887

dec_label_pc_26887:                               ; preds = %dec_label_pc_26853
  %tmp102 = ptrtoint i32* %arg2 to i32
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_2688a = load i32, i32* %arg2, align 4
  %v2_2688c = inttoptr i32 %v2_2687e to i32*
  store i32 %v2_2688a, i32* %v2_2688c, align 4
  %v0_2688e = load i32, i32* %edx.global-to-local, align 4
  %v1_2688e = add i32 %v0_2688e, 4
  %v2_2688e = inttoptr i32 %v1_2688e to i32*
  %v3_2688e = load i32, i32* %v2_2688e, align 4
  %v2_26891 = add i32 %v2_2687e, 4
  %v3_26891 = inttoptr i32 %v2_26891 to i32*
  store i32 %v3_2688e, i32* %v3_26891, align 4
  %v0_26894 = load i32, i32* %edx.global-to-local, align 4
  %v1_26894 = add i32 %v0_26894, 8
  %v2_26894 = inttoptr i32 %v1_26894 to i32*
  %v3_26894 = load i32, i32* %v2_26894, align 4
  %v2_26897 = add i32 %v2_2687e, 8
  %v3_26897 = inttoptr i32 %v2_26897 to i32*
  store i32 %v3_26894, i32* %v3_26897, align 4
  %v0_2689a = load i32, i32* %edx.global-to-local, align 4
  %v1_2689a = add i32 %v0_2689a, 12
  %v2_2689a = inttoptr i32 %v1_2689a to i32*
  %v3_2689a = load i32, i32* %v2_2689a, align 4
  %v2_2689d = add i32 %v2_2687e, 12
  %v3_2689d = inttoptr i32 %v2_2689d to i32*
  store i32 %v3_2689a, i32* %v3_2689d, align 4
  %v0_268a0 = load i32, i32* %edx.global-to-local, align 4
  %v1_268a0 = add i32 %v0_268a0, 16
  %v2_268a0 = inttoptr i32 %v1_268a0 to i32*
  %v3_268a0 = load i32, i32* %v2_268a0, align 4
  store i32 %v3_268a0, i32* %edx.global-to-local, align 4
  %v2_268a3 = add i32 %v2_2687e, 16
  %v3_268a3 = inttoptr i32 %v2_268a3 to i32*
  store i32 %v3_268a0, i32* %v3_268a3, align 4
  br label %dec_label_pc_268a6

dec_label_pc_268a6:                               ; preds = %dec_label_pc_26887, %dec_label_pc_26853
  store i32 1, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_268b7

bb:                                               ; preds = %dec_label_pc_268a6
  %v1_268b5 = call i32 @function_268bc()
  br label %dec_label_pc_268b7

dec_label_pc_268b7:                               ; preds = %bb, %dec_label_pc_268a6
  %v2_268b5 = phi i32 [ %v1_268b5, %bb ], [ 1, %dec_label_pc_268a6 ]
  ret i32 %v2_268b5
}

define i32 @function_268bc() local_unnamed_addr {
dec_label_pc_268bc:
  %v0_268bd = load i32, i32* @eax, align 4
  ret i32 %v0_268bd
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_9destroyerEEENT_11result_typeERSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_268be:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_268df = add i32 %tmp105, 4
  %v1_268e5 = call i32 @unknown_46240(i32 %v1_268df)
  %v1_268f2 = call i32 @unknown_4631c(i32 %tmp105)
  %v2_268fc = load i32, i32* %arg1, align 4
  %v4_26910 = call i32 @unknown_5295f(i32 %v2_268fc, i32 %v1_268f2, i32 %arg2, i32 %v1_268e5)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26921

bb:                                               ; preds = %dec_label_pc_268be
  %v1_2691f = call i32 @function_26926()
  br label %dec_label_pc_26921

dec_label_pc_26921:                               ; preds = %bb, %dec_label_pc_268be
  %v2_2691f = phi i32 [ %v1_2691f, %bb ], [ 0, %dec_label_pc_268be ]
  ret i32 %v2_2691f

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_26926() local_unnamed_addr {
dec_label_pc_26926:
  %v0_2692b = load i32, i32* @eax, align 4
  ret i32 %v0_2692b
}

define i32 @_ZNK5boost6detail15aligned_storage19aligned_storage_impILj20ELj4EE7addressEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2692c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26952

bb:                                               ; preds = %dec_label_pc_2692c
  %v2_26950 = call i32 @function_26957(i32 %arg1)
  br label %dec_label_pc_26952

dec_label_pc_26952:                               ; preds = %bb, %dec_label_pc_2692c
  %v3_26950 = phi i32 [ %v2_26950, %bb ], [ %arg1, %dec_label_pc_2692c ]
  ret i32 %v3_26950
}

define i32 @function_26957(i32 %arg1) local_unnamed_addr {
dec_label_pc_26957:
  %v0_26958 = load i32, i32* @eax, align 4
  ret i32 %v0_26958
}

define i32 @_ZNK5boost15aligned_storageILj20ELj4EE7addressEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2695a:
  ret i32 %arg1
}

define i32 @function_26976(i32 %arg1) local_unnamed_addr {
dec_label_pc_26976:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_26976 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_26976 = and i32 %v0_26976, -24
  store i32 %v11_26976, i32* %eax.global-to-local, align 4
  %v0_26978 = load i32, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_2697b = load i32, i32* @ebx, align 4
  %v1_2697b = add i32 %v0_2697b, 862319701
  %v2_2697b = inttoptr i32 %v1_2697b to i8*
  %v3_2697b = load i8, i8* %v2_2697b, align 1
  %v5_2697b = trunc i32 %v0_26978 to i8
  %v6_2697b = add i8 %v3_2697b, %v5_2697b
  %v11_2697b = icmp ult i8 %v6_2697b, %v3_2697b
  store i1 %v11_2697b, i1* %cf.global-to-local, align 1
  store i8 %v6_2697b, i8* %v2_2697b, align 1
  %v0_26981 = load i32, i32* %eax.global-to-local, align 4
  %v1_26981 = load i1, i1* %cf.global-to-local, align 1
  %v2_26981 = zext i1 %v1_26981 to i32
  %v3_26981 = add i32 %v0_26981, 20
  %v4_26981 = add i32 %v3_26981, %v2_26981
  %v14_26981 = icmp eq i32 %v4_26981, 0
  %v22_26981 = icmp ule i32 %v4_26981, %v0_26981
  %v23_26981 = icmp ugt i32 %v0_26981, -21
  %v24_26981 = select i1 %v1_26981, i1 %v22_26981, i1 %v23_26981
  store i1 %v24_26981, i1* %cf.global-to-local, align 1
  store i32 %v4_26981, i32* @eax, align 4
  br i1 %v14_26981, label %bb, label %dec_label_pc_26988

bb:                                               ; preds = %dec_label_pc_26976
  %v1_26986 = call i32 @function_2698d()
  store i32 %v1_26986, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26988

dec_label_pc_26988:                               ; preds = %bb, %dec_label_pc_26976
  %v2_26986 = phi i32 [ %v1_26986, %bb ], [ %v4_26981, %dec_label_pc_26976 ]
  ret i32 %v2_26986

; uselistorder directives
  uselistorder i32 %v4_26981, { 0, 2, 1, 3 }
  uselistorder i8 %v3_2697b, { 1, 0 }
}

define i32 @function_2698d() local_unnamed_addr {
dec_label_pc_2698d:
  %v0_2698e = load i32, i32* @eax, align 4
  ret i32 %v0_2698e
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_9copy_intoEPKvEENT_11result_typeEiiRSC_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2698f:
  ret i32 %arg4
}

define i32 @function_269d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_269d4:
  %v0_269d7 = load i32, i32* @ebp, align 4
  %v1_269d7 = add i32 %v0_269d7, -36
  %v2_269d7 = inttoptr i32 %v1_269d7 to i32*
  %v3_269d7 = load i32, i32* %v2_269d7, align 4
  %v1_269de = add i32 %v0_269d7, -32
  %v2_269de = inttoptr i32 %v1_269de to i32*
  %v3_269de = load i32, i32* %v2_269de, align 4
  %v1_269e5 = add i32 %v0_269d7, -28
  %v2_269e5 = inttoptr i32 %v1_269e5 to i32*
  %v3_269e5 = load i32, i32* %v2_269e5, align 4
  %v3_269eb = call i32 @unknown_52aa4(i32 %v3_269e5, i32 %v3_269de, i32 %v3_269d7)
  %v0_269f0 = load i32, i32* @ebp, align 4
  %v1_269f0 = add i32 %v0_269f0, -12
  %v2_269f0 = inttoptr i32 %v1_269f0 to i32*
  %v3_269f0 = load i32, i32* %v2_269f0, align 4
  %v1_269f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_269f3 = xor i32 %v1_269f3, %v3_269f0
  %v3_269f3 = icmp eq i32 %v2_269f3, 0
  store i32 %v2_269f3, i32* @eax, align 4
  br i1 %v3_269f3, label %bb, label %dec_label_pc_269fc

bb:                                               ; preds = %dec_label_pc_269d4
  %v1_269fa = call i32 @function_26a01()
  br label %dec_label_pc_269fc

dec_label_pc_269fc:                               ; preds = %bb, %dec_label_pc_269d4
  %v2_269fa = phi i32 [ %v1_269fa, %bb ], [ %v2_269f3, %dec_label_pc_269d4 ]
  ret i32 %v2_269fa
}

define i32 @function_26a01() local_unnamed_addr {
dec_label_pc_26a01:
  %v0_26a02 = load i32, i32* @eax, align 4
  ret i32 %v0_26a02
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E12using_backupEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a04:
  ret i32 %arg1
}

define i32 @function_26a1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a1e:
  %v0_26a20 = load i32, i32* @eax, align 4
  %tmp = icmp slt i32 %v0_26a20, 0
  %v2_26a20 = zext i1 %tmp to i32
  store i32 %v2_26a20, i32* @eax, align 4
  %v0_26a23 = load i32, i32* @ebp, align 4
  %v1_26a23 = add i32 %v0_26a23, -12
  %v2_26a23 = inttoptr i32 %v1_26a23 to i32*
  %v3_26a23 = load i32, i32* %v2_26a23, align 4
  %v1_26a26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26a26 = icmp eq i32 %v1_26a26, %v3_26a23
  br i1 %v3_26a26, label %bb, label %dec_label_pc_26a2f

bb:                                               ; preds = %dec_label_pc_26a1e
  %v1_26a2d = call i32 @function_26a34()
  br label %dec_label_pc_26a2f

dec_label_pc_26a2f:                               ; preds = %bb, %dec_label_pc_26a1e
  %v2_26a2d = phi i32 [ %v1_26a2d, %bb ], [ %v2_26a20, %dec_label_pc_26a1e ]
  ret i32 %v2_26a2d

; uselistorder directives
  uselistorder i32 %v2_26a20, { 1, 0 }
}

define i32 @function_26a34() local_unnamed_addr {
dec_label_pc_26a34:
  %v0_26a35 = load i32, i32* @eax, align 4
  ret i32 %v0_26a35
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a36:
  ret i32 %arg1
}

define i32 @function_26a54(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a54:
  %v0_26a54 = load i32, i32* @edx, align 4
  %v1_26a54 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26a54 = icmp eq i32 %v1_26a54, %v0_26a54
  br i1 %v3_26a54, label %bb, label %dec_label_pc_26a54.dec_label_pc_26a5c_crit_edge

dec_label_pc_26a54.dec_label_pc_26a5c_crit_edge:  ; preds = %dec_label_pc_26a54
  %v2_26a5a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26a5c

bb:                                               ; preds = %dec_label_pc_26a54
  %v1_26a5a = call i32 @function_26a61()
  br label %dec_label_pc_26a5c

dec_label_pc_26a5c:                               ; preds = %dec_label_pc_26a54.dec_label_pc_26a5c_crit_edge, %bb
  %v2_26a5a = phi i32 [ %v2_26a5a.pre, %dec_label_pc_26a54.dec_label_pc_26a5c_crit_edge ], [ %v1_26a5a, %bb ]
  ret i32 %v2_26a5a

; uselistorder directives
  uselistorder label %dec_label_pc_26a5c, { 1, 0 }
}

define i32 @function_26a61() local_unnamed_addr {
dec_label_pc_26a61:
  %v0_26a62 = load i32, i32* @eax, align 4
  ret i32 %v0_26a62
}

define i32 @_ZSt13copy_backwardIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26a63:
  ret i32 %arg2
}

define i32 @function_26a8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a8c:
  %v0_26a8c = load i32, i32* @eax, align 4
  %v1_26a8c = trunc i32 %v0_26a8c to i8
  %v2_26a8c = and i8 %v1_26a8c, -24
  %v8_26a8c = zext i8 %v2_26a8c to i32
  %v10_26a8c = and i32 %v0_26a8c, -256
  %v11_26a8c = or i32 %v8_26a8c, %v10_26a8c
  %v0_26a8e = load i32, i32* @esi, align 4
  %v4_26a8e = add i32 %v11_26a8c, %v0_26a8e
  store i32 %v4_26a8e, i32* @esi, align 4
  %v3_26a90 = inttoptr i32 %v11_26a8c to i8*
  %v4_26a90 = load i8, i8* %v3_26a90, align 8
  %v5_26a90 = add i8 %v4_26a90, %v2_26a8c
  %v20_26a90 = zext i8 %v5_26a90 to i32
  %v23_26a90 = or i32 %v20_26a90, %v10_26a8c
  store i32 %v23_26a90, i32* @ebx, align 4
  %v0_26a94 = load i32, i32* @ebp, align 4
  %v1_26a94 = add i32 %v0_26a94, -28
  %v2_26a94 = inttoptr i32 %v1_26a94 to i32*
  %v3_26a94 = load i32, i32* %v2_26a94, align 4
  %v1_26a9a = call i32 @unknown_530a3(i32 %v3_26a94)
  %v0_26a9f = load i32, i32* @ebp, align 4
  %v1_26a9f = add i32 %v0_26a9f, -36
  %v2_26a9f = inttoptr i32 %v1_26a9f to i32*
  %v3_26a9f = load i32, i32* %v2_26a9f, align 4
  %v0_26aa6 = load i32, i32* @ebx, align 4
  %v3_26aad = call i32 @unknown_530d8(i32 %v1_26a9a, i32 %v0_26aa6, i32 %v3_26a9f)
  store i32 %v3_26aad, i32* @eax, align 4
  %v0_26ab2 = load i32, i32* @ebp, align 4
  %v1_26ab2 = add i32 %v0_26ab2, -12
  %v2_26ab2 = inttoptr i32 %v1_26ab2 to i32*
  %v3_26ab2 = load i32, i32* %v2_26ab2, align 4
  %v1_26ab5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26ab5 = xor i32 %v1_26ab5, %v3_26ab2
  %v3_26ab5 = icmp eq i32 %v2_26ab5, 0
  store i32 %v2_26ab5, i32* @edx, align 4
  br i1 %v3_26ab5, label %bb, label %dec_label_pc_26abe

bb:                                               ; preds = %dec_label_pc_26a8c
  %v1_26abc = call i32 @function_26ac3()
  br label %dec_label_pc_26abe

dec_label_pc_26abe:                               ; preds = %bb, %dec_label_pc_26a8c
  %v2_26abc = phi i32 [ %v1_26abc, %bb ], [ %v3_26aad, %dec_label_pc_26a8c ]
  ret i32 %v2_26abc

; uselistorder directives
  uselistorder i32 %v11_26a8c, { 1, 0 }
}

define i32 @function_26ac3() local_unnamed_addr {
dec_label_pc_26ac3:
  %v0_26ac8 = load i32, i32* @eax, align 4
  ret i32 %v0_26ac8
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EaSERKS7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26aca:
  ret i32 %arg1
}

define i32 @function_26af4(i32 %arg1) local_unnamed_addr {
dec_label_pc_26af4:
  %v0_26af4 = call i32 @unknown_4d082()
  %v0_26af9 = load i32, i32* @ebp, align 4
  %v1_26af9 = add i32 %v0_26af9, -28
  %v2_26af9 = inttoptr i32 %v1_26af9 to i32*
  %v3_26af9 = load i32, i32* %v2_26af9, align 4
  store i32 %v3_26af9, i32* @eax, align 4
  %v1_26afc = add i32 %v0_26af9, -12
  %v2_26afc = inttoptr i32 %v1_26afc to i32*
  %v3_26afc = load i32, i32* %v2_26afc, align 4
  %v1_26aff = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26aff = icmp eq i32 %v1_26aff, %v3_26afc
  br i1 %v3_26aff, label %bb, label %dec_label_pc_26b08

bb:                                               ; preds = %dec_label_pc_26af4
  %v1_26b06 = call i32 @function_26b0d()
  br label %dec_label_pc_26b08

dec_label_pc_26b08:                               ; preds = %bb, %dec_label_pc_26af4
  %v2_26b06 = phi i32 [ %v1_26b06, %bb ], [ %v3_26af9, %dec_label_pc_26af4 ]
  ret i32 %v2_26b06
}

define i32 @function_26b0d() local_unnamed_addr {
dec_label_pc_26b0d:
  %v0_26b0e = load i32, i32* @eax, align 4
  ret i32 %v0_26b0e
}

define i32 @_ZNKSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26b10:
  %v1_26b3a = call i32 @unknown_5323e(i32 %arg1)
  %v1_26b47 = call i32 @unknown_531f8(i32 %arg1)
  %v2_26b4e = sub i32 %v1_26b3a, %v1_26b47
  %v7_26b53 = icmp ult i32 %v2_26b4e, %arg2
  %v5_26b58 = icmp eq i1 %v7_26b53, false
  br i1 %v5_26b58, label %bb, label %dec_label_pc_26b5c

bb:                                               ; preds = %dec_label_pc_26b10
  %v1_26b5a = call i32 @function_26b67()
  br label %dec_label_pc_26b5c

dec_label_pc_26b5c:                               ; preds = %bb, %dec_label_pc_26b10
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_26b67() local_unnamed_addr {
dec_label_pc_26b67:
  %v0_26b67 = load i32, i32* @ebp, align 4
  %v1_26b67 = add i32 %v0_26b67, -28
  %v2_26b67 = inttoptr i32 %v1_26b67 to i32*
  %v3_26b67 = load i32, i32* %v2_26b67, align 4
  %v1_26b6d = call i32 @unknown_531f8(i32 %v3_26b67)
  %v0_26b74 = load i32, i32* @ebp, align 4
  %v1_26b74 = add i32 %v0_26b74, -28
  %v2_26b74 = inttoptr i32 %v1_26b74 to i32*
  %v3_26b74 = load i32, i32* %v2_26b74, align 4
  %v1_26b7a = call i32 @unknown_531f8(i32 %v3_26b74)
  ret i32 %v1_26b7a
}

define i32 @function_26b80(i32 %arg1) local_unnamed_addr {
dec_label_pc_26b80:
  %ebp.global-to-local = alloca i32, align 4
  %v0_26b80 = load i32, i32* @ebp, align 4
  %v1_26b80 = add i32 %v0_26b80, 1
  store i32 %v1_26b80, i32* %ebp.global-to-local, align 4
  %v1_26b82 = add i32 %v0_26b80, -31
  %v1_26b89 = add i32 %v0_26b80, -19
  %v2_26b8f = call i32 @unknown_4fa76(i32 %v1_26b89, i32 %v1_26b82)
  %v1_26b94 = inttoptr i32 %v2_26b8f to i32*
  %v2_26b94 = load i32, i32* %v1_26b94, align 4
  %v1_26b96 = load i32, i32* @ebx, align 4
  %v2_26b96 = add i32 %v1_26b96, %v2_26b94
  %v1_26b98 = load i32, i32* %ebp.global-to-local, align 4
  %v2_26b98 = add i32 %v1_26b98, -16
  %v3_26b98 = inttoptr i32 %v2_26b98 to i32*
  store i32 %v2_26b96, i32* %v3_26b98, align 4
  %v0_26b9b = load i32, i32* %ebp.global-to-local, align 4
  %v1_26b9b = add i32 %v0_26b9b, -28
  %v2_26b9b = inttoptr i32 %v1_26b9b to i32*
  %v3_26b9b = load i32, i32* %v2_26b9b, align 4
  %v1_26ba1 = call i32 @unknown_531f8(i32 %v3_26b9b)
  %v2_26ba6 = add i32 %v0_26b9b, -16
  %v3_26ba6 = inttoptr i32 %v2_26ba6 to i32*
  %v4_26ba6 = load i32, i32* %v3_26ba6, align 4
  %tmp6 = icmp ugt i32 %v1_26ba1, %v4_26ba6
  br i1 %tmp6, label %dec_label_pc_26bbb, label %dec_label_pc_26bab

dec_label_pc_26bab:                               ; preds = %dec_label_pc_26b80
  %v1_26bab = add i32 %v0_26b9b, -28
  %v2_26bab = inttoptr i32 %v1_26bab to i32*
  %v3_26bab = load i32, i32* %v2_26bab, align 4
  %v1_26bb1 = call i32 @unknown_5323e(i32 %v3_26bab)
  %v1_26bb6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_26bb6 = add i32 %v1_26bb6, -16
  %v3_26bb6 = inttoptr i32 %v2_26bb6 to i32*
  %v4_26bb6 = load i32, i32* %v3_26bb6, align 4
  %v10_26bb6 = icmp ult i32 %v1_26bb1, %v4_26bb6
  %v1_26bb9 = icmp eq i1 %v10_26bb6, false
  br i1 %v1_26bb9, label %dec_label_pc_26bcb, label %dec_label_pc_26bbb

dec_label_pc_26bbb:                               ; preds = %dec_label_pc_26b80, %dec_label_pc_26bab
  %v0_26bbb = phi i32 [ %v0_26b9b, %dec_label_pc_26b80 ], [ %v1_26bb6, %dec_label_pc_26bab ]
  %v1_26bbb = add i32 %v0_26bbb, -28
  %v2_26bbb = inttoptr i32 %v1_26bbb to i32*
  %v3_26bbb = load i32, i32* %v2_26bbb, align 4
  %v1_26bc1 = call i32 @unknown_5323e(i32 %v3_26bbb)
  %v0_26bcb.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_26bcb

dec_label_pc_26bcb:                               ; preds = %dec_label_pc_26bab, %dec_label_pc_26bbb
  %v0_26bcb = phi i32 [ %v0_26bcb.pre, %dec_label_pc_26bbb ], [ %v1_26bb6, %dec_label_pc_26bab ]
  %storemerge = phi i32 [ %v1_26bc1, %dec_label_pc_26bbb ], [ %v4_26bb6, %dec_label_pc_26bab ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_26bcb = add i32 %v0_26bcb, -12
  %v2_26bcb = inttoptr i32 %v1_26bcb to i32*
  %v3_26bcb = load i32, i32* %v2_26bcb, align 4
  %v1_26bce = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26bce = icmp eq i32 %v1_26bce, %v3_26bcb
  br i1 %v3_26bce, label %bb, label %dec_label_pc_26bd7

bb:                                               ; preds = %dec_label_pc_26bcb
  %v1_26bd5 = call i32 @function_26bdc()
  br label %dec_label_pc_26bd7

dec_label_pc_26bd7:                               ; preds = %bb, %dec_label_pc_26bcb
  %v2_26bd5 = phi i32 [ %v1_26bd5, %bb ], [ %storemerge, %dec_label_pc_26bcb ]
  ret i32 %v2_26bd5

; uselistorder directives
  uselistorder i32 %v0_26b9b, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @unknown_5323e, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_531f8, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_26bcb, { 1, 0 }
  uselistorder label %dec_label_pc_26bbb, { 1, 0 }
}

define i32 @function_26bdc() local_unnamed_addr {
dec_label_pc_26bdc:
  %v0_26be1 = load i32, i32* @eax, align 4
  ret i32 %v0_26be1
}

define i32 @_ZNSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26be2:
  %v2_26c0c = call i32 @unknown_4d9b2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26c20

bb:                                               ; preds = %dec_label_pc_26be2
  %v1_26c1e = call i32 @function_26c25()
  br label %dec_label_pc_26c20

dec_label_pc_26c20:                               ; preds = %bb, %dec_label_pc_26be2
  %v2_26c1e = phi i32 [ %v1_26c1e, %bb ], [ %arg1, %dec_label_pc_26be2 ]
  ret i32 %v2_26c1e

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26c25() local_unnamed_addr {
dec_label_pc_26c25:
  %v0_26c26 = load i32, i32* @eax, align 4
  ret i32 %v0_26c26
}

define i32 @_ZN9__gnu_cxxmiIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSH_SK_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c29:
  %v1_26c4d = call i32 @unknown_4d65f(i32 %arg1)
  %v1_26c52 = inttoptr i32 %v1_26c4d to i32*
  %v2_26c52 = load i32, i32* %v1_26c52, align 4
  %v1_26c5c = call i32 @unknown_4d65f(i32 %arg2)
  %v1_26c61 = inttoptr i32 %v1_26c5c to i32*
  %v2_26c61 = load i32, i32* %v1_26c61, align 4
  %v2_26c65 = sub i32 %v2_26c52, %v2_26c61
  %v2_26c69 = sdiv i32 %v2_26c65, 8
  %v3_26c6c = mul i32 %v2_26c69, -1431655765
  store i32 %v3_26c6c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26c7e

bb:                                               ; preds = %dec_label_pc_26c29
  %v1_26c7c = call i32 @function_26c83()
  br label %dec_label_pc_26c7e

dec_label_pc_26c7e:                               ; preds = %bb, %dec_label_pc_26c29
  %v2_26c7c = phi i32 [ %v1_26c7c, %bb ], [ %v3_26c6c, %dec_label_pc_26c29 ]
  ret i32 %v2_26c7c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4d65f, { 1, 0 }
}

declare i32 @__stack_chk_fail.869() local_unnamed_addr

define i32 @function_26c83() local_unnamed_addr {
dec_label_pc_26c83:
  %v0_26c88 = load i32, i32* @eax, align 4
  ret i32 %v0_26c88
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26c8a:
  ret i32 0
}

define i32 @function_26caa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26caa:
  %eax.global-to-local = alloca i32, align 4
  %v0_26caa = load i32, i32* @esp, align 4
  %v1_26caa = load i32, i32* @ebx, align 4
  %v3_26caa = add i32 %v0_26caa, -117
  %v4_26caa = add i32 %v3_26caa, %v1_26caa
  %v5_26caa = inttoptr i32 %v4_26caa to i8*
  %v6_26caa = load i8, i8* %v5_26caa, align 1
  %v7_26caa = load i32, i32* @edx, align 4
  %v8_26caa = udiv i32 %v7_26caa, 256
  %v9_26caa = trunc i32 %v8_26caa to i8
  %v10_26caa = add i8 %v9_26caa, %v6_26caa
  store i8 %v10_26caa, i8* %v5_26caa, align 1
  %v0_26cae = load i32, i32* @ebp, align 4
  %v1_26cae = add i32 %v0_26cae, 1
  store i32 %v1_26cae, i32* @ebp, align 4
  %v0_26cb2 = load i32, i32* @eax, align 4
  %v1_26cb2 = trunc i32 %v0_26cb2 to i8
  %v2_26cb2 = and i8 %v1_26cb2, 8
  %v8_26cb2 = zext i8 %v2_26cb2 to i32
  %v10_26cb2 = and i32 %v0_26cb2, -256
  %v11_26cb2 = or i32 %v8_26cb2, %v10_26cb2
  store i32 %v11_26cb2, i32* %eax.global-to-local, align 4
  %v1_26cb4 = inttoptr i32 %v11_26cb2 to i8*
  %v2_26cb4 = load i8, i8* %v1_26cb4, align 8
  %v5_26cb4 = add i8 %v2_26cb4, %v2_26cb2
  store i8 %v5_26cb4, i8* %v1_26cb4, align 8
  %v22_26cb4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_26cb4

; uselistorder directives
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 -117, { 5, 0, 1, 2, 3, 4 }
}

define i32 @function_26cb6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26cb6:
  %v2_26cb6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26cb6 = load i32, i32* @eax, align 4
  %v4_26cb6 = trunc i32 %v3_26cb6 to i8
  %v5_26cb6 = add i8 %v4_26cb6, %v2_26cb6
  %v21_26cb6 = inttoptr i32 %v3_26cb6 to i8*
  store i8 %v5_26cb6, i8* %v21_26cb6, align 1
  %v3_26cbf = load i32, i32* @eax, align 4
  ret i32 %v3_26cbf
}

define i32 @function_26cc6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26cc6:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_26cc6 = load i32, i32* @ebx, align 4
  %v2_26cc6 = load i32, i32* @ecx, align 4
  %v3_26cc6 = udiv i32 %v2_26cc6, 256
  %v5_26cc6 = add i32 %v3_26cc6, %v0_26cc6
  %v20_26cc6 = urem i32 %v5_26cc6, 256
  %v22_26cc6 = and i32 %v0_26cc6, -256
  %v23_26cc6 = or i32 %v20_26cc6, %v22_26cc6
  store i32 %v23_26cc6, i32* @ebx, align 4
  %v0_26cc8 = load i32, i32* @eax, align 4
  %v1_26cc8 = add i32 %v0_26cc8, 184
  %v5_26cc8 = icmp ugt i32 %v0_26cc8, -185
  store i1 %v5_26cc8, i1* %cf.global-to-local, align 1
  store i32 %v1_26cc8, i32* %eax.global-to-local, align 4
  %v1_26ccd = add i32 %v23_26cc6, 862319701
  %v2_26ccd = inttoptr i32 %v1_26ccd to i8*
  %v3_26ccd = load i8, i8* %v2_26ccd, align 1
  %v5_26ccd = trunc i32 %v2_26cc6 to i8
  %v6_26ccd = add i8 %v3_26ccd, %v5_26ccd
  %v11_26ccd = icmp ult i8 %v6_26ccd, %v3_26ccd
  store i1 %v11_26ccd, i1* %cf.global-to-local, align 1
  store i8 %v6_26ccd, i8* %v2_26ccd, align 1
  %v0_26cd3 = load i32, i32* %eax.global-to-local, align 4
  %v1_26cd3 = load i1, i1* %cf.global-to-local, align 1
  %v2_26cd3 = zext i1 %v1_26cd3 to i32
  %v3_26cd3 = add i32 %v0_26cd3, 20
  %v4_26cd3 = add i32 %v3_26cd3, %v2_26cd3
  %v14_26cd3 = icmp eq i32 %v4_26cd3, 0
  %v22_26cd3 = icmp ule i32 %v4_26cd3, %v0_26cd3
  %v23_26cd3 = icmp ugt i32 %v0_26cd3, -21
  %v24_26cd3 = select i1 %v1_26cd3, i1 %v22_26cd3, i1 %v23_26cd3
  store i1 %v24_26cd3, i1* %cf.global-to-local, align 1
  store i32 %v4_26cd3, i32* @eax, align 4
  br i1 %v14_26cd3, label %bb, label %dec_label_pc_26cda

bb:                                               ; preds = %dec_label_pc_26cc6
  %v1_26cd8 = call i32 @function_26cdf()
  store i32 %v1_26cd8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26cda

dec_label_pc_26cda:                               ; preds = %bb, %dec_label_pc_26cc6
  %v2_26cd8 = phi i32 [ %v1_26cd8, %bb ], [ %v4_26cd3, %dec_label_pc_26cc6 ]
  ret i32 %v2_26cd8

; uselistorder directives
  uselistorder i32 %v4_26cd3, { 0, 2, 1, 3 }
  uselistorder i8 %v3_26ccd, { 1, 0 }
  uselistorder i32 %v2_26cc6, { 1, 0 }
  uselistorder i32 %v0_26cc6, { 1, 0 }
}

define i32 @function_26cdf() local_unnamed_addr {
dec_label_pc_26cdf:
  %v0_26ce0 = load i32, i32* @eax, align 4
  ret i32 %v0_26ce0
}

define i32 @_ZSt22__uninitialized_move_aIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_SaIS8_EET0_T_SC_SB_RT1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_26ce1:
  ret i32 %arg1
}

define i32 @function_26cec(i32 %arg1) local_unnamed_addr {
dec_label_pc_26cec:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_26cee = load i32, i32* @ebp, align 4
  %v0_26cef = load i32, i32* @eax, align 4
  %v2_26cef = or i32 %v0_26cef, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_26cef, i32* %eax.global-to-local, align 4
  %v1_26cf1 = add i32 %v0_26cee, 2
  %v9_26cf1 = icmp eq i32 %v1_26cf1, 0
  store i32 %v1_26cf1, i32* %ebp.global-to-local, align 4
  %v0_26cf2 = load i32, i32* @ecx, align 4
  %v1_26cf2 = add i32 %v0_26cf2, -1
  store i32 %v1_26cf2, i32* %ecx.global-to-local, align 4
  %v2_26cf2 = icmp eq i32 %v1_26cf2, 0
  %v4_26cf2 = or i1 %v9_26cf1, %v2_26cf2
  br i1 %v4_26cf2, label %dec_label_pc_26cf4, label %bb

bb:                                               ; preds = %dec_label_pc_26cec
  %v6_26cf2 = call i32 @__stack_chk_fail.869()
  store i32 %v6_26cf2, i32* %eax.global-to-local, align 4
  %v0_26cf4.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_26cf5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_26cf5.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_26cf4

dec_label_pc_26cf4:                               ; preds = %dec_label_pc_26cec, %bb
  %v6_26cf5 = phi i1 [ false, %dec_label_pc_26cec ], [ %v6_26cf5.pre, %bb ]
  %v30_26cf5 = phi i32 [ %v1_26cf2, %dec_label_pc_26cec ], [ %v0_26cf5.pre, %bb ]
  %v0_26cf4 = phi i32 [ %v1_26cf1, %dec_label_pc_26cec ], [ %v0_26cf4.pre, %bb ]
  %v1_26cf4 = add i32 %v0_26cf4, 1
  store i32 %v1_26cf4, i32* %ebp.global-to-local, align 4
  %v1_26cf5 = add i32 %v30_26cf5, 1166793797
  %v2_26cf5 = inttoptr i32 %v1_26cf5 to i8*
  %v3_26cf5 = load i8, i8* %v2_26cf5, align 1
  %v5_26cf5 = trunc i32 %v30_26cf5 to i8
  %v7_26cf5 = zext i1 %v6_26cf5 to i8
  %v8_26cf5 = add i8 %v3_26cf5, %v5_26cf5
  %v9_26cf5 = add i8 %v8_26cf5, %v7_26cf5
  %v27_26cf5 = icmp ule i8 %v9_26cf5, %v3_26cf5
  %v28_26cf5 = icmp ult i8 %v8_26cf5, %v3_26cf5
  %v29_26cf5 = select i1 %v6_26cf5, i1 %v27_26cf5, i1 %v28_26cf5
  store i1 %v29_26cf5, i1* %cf.global-to-local, align 1
  store i8 %v9_26cf5, i8* %v2_26cf5, align 1
  %v0_26cfb = load i32, i32* %eax.global-to-local, align 4
  %v1_26cfb = trunc i32 %v0_26cfb to i8
  %v2_26cfb = load i1, i1* %cf.global-to-local, align 1
  %v3_26cfb = zext i1 %v2_26cfb to i8
  %v4_26cfb = add i8 %v1_26cfb, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_26cfb = add i8 %v4_26cfb, %v3_26cfb
  %v20_26cfb = add i8 %v1_26cfb, -119
  %v21_26cfb = add i8 %v20_26cfb, %v3_26cfb
  %v22_26cfb = icmp ule i8 %v21_26cfb, %v1_26cfb
  %v23_26cfb = icmp ugt i8 %v1_26cfb, 118
  %v24_26cfb = select i1 %v2_26cfb, i1 %v22_26cfb, i1 %v23_26cfb
  %v25_26cfb = zext i8 %v5_26cfb to i32
  %v27_26cfb = and i32 %v0_26cfb, -256
  %v28_26cfb = or i32 %v25_26cfb, %v27_26cfb
  store i32 %v28_26cfb, i32* %eax.global-to-local, align 4
  %v0_26cfd = load i32, i32* %ebp.global-to-local, align 4
  %v1_26cfd = add i32 %v0_26cfd, 1
  store i32 %v1_26cfd, i32* @ebp, align 4
  %v3_26d01 = zext i1 %v24_26cfb to i8
  %v4_26d01 = add i8 %v3_26d01, %v5_26cfb
  %v19_26d01 = icmp ule i8 %v4_26d01, %v5_26cfb
  %v21_26d01 = icmp eq i1 %v24_26cfb, %v19_26d01
  store i1 %v21_26d01, i1* %cf.global-to-local, align 1
  %v22_26d01 = zext i8 %v4_26d01 to i32
  %v25_26d01 = or i32 %v22_26d01, %v27_26cfb
  store i32 %v25_26d01, i32* %eax.global-to-local, align 4
  %v1_26d03 = inttoptr i32 %v25_26d01 to i8*
  %v2_26d03 = load i8, i8* %v1_26d03, align 1
  %v5_26d03 = add i8 %v2_26d03, %v4_26d01
  store i8 %v5_26d03, i8* %v1_26d03, align 1
  %v0_26d05 = load i32, i32* %eax.global-to-local, align 4
  %v1_26d05 = load i32, i32* @ebp, align 4
  %v2_26d05 = add i32 %v1_26d05, -12
  %v3_26d05 = inttoptr i32 %v2_26d05 to i32*
  store i32 %v0_26d05, i32* %v3_26d05, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_26d0a = load i32, i32* @ebp, align 4
  %v1_26d0a = add i32 %v0_26d0a, -40
  %v2_26d0a = inttoptr i32 %v1_26d0a to i32*
  %v3_26d0a = load i32, i32* %v2_26d0a, align 4
  store i32 %v3_26d0a, i32* %eax.global-to-local, align 4
  %v1_26d11 = add i32 %v0_26d0a, -36
  %v2_26d11 = inttoptr i32 %v1_26d11 to i32*
  %v3_26d11 = load i32, i32* %v2_26d11, align 4
  store i32 %v3_26d11, i32* %eax.global-to-local, align 4
  %v1_26d18 = add i32 %v0_26d0a, -32
  %v2_26d18 = inttoptr i32 %v1_26d18 to i32*
  %v3_26d18 = load i32, i32* %v2_26d18, align 4
  store i32 %v3_26d18, i32* %eax.global-to-local, align 4
  %v1_26d1f = add i32 %v0_26d0a, -28
  %v2_26d1f = inttoptr i32 %v1_26d1f to i32*
  %v3_26d1f = load i32, i32* %v2_26d1f, align 4
  store i32 %v3_26d1f, i32* %eax.global-to-local, align 4
  %v4_26d25 = call i32 @unknown_534b1(i32 %v3_26d1f, i32 %v3_26d18, i32 %v3_26d11, i32 %v3_26d0a)
  store i32 %v4_26d25, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  ret i32 %v4_26d25

; uselistorder directives
  uselistorder i32 %v0_26d0a, { 1, 0, 2, 3 }
  uselistorder i8 %v4_26d01, { 0, 2, 1 }
  uselistorder i8 %v5_26cfb, { 1, 0, 2 }
  uselistorder i8 %v9_26cf5, { 1, 0 }
  uselistorder i8 %v8_26cf5, { 1, 0 }
  uselistorder i8 %v3_26cf5, { 1, 2, 0 }
  uselistorder i32 %v30_26cf5, { 1, 0 }
  uselistorder i1 %v6_26cf5, { 1, 0 }
  uselistorder i32 %v1_26cf2, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder label %dec_label_pc_26cf4, { 1, 0 }
}

define i32 @function_26d3a() local_unnamed_addr {
dec_label_pc_26d3a:
  %v0_26d3a = load i32, i32* @ecx, align 4
  %v1_26d3a = add i32 %v0_26d3a, -1
  store i32 %v1_26d3a, i32* @ecx, align 4
  %v0_26d3c = load i32, i32* @eax, align 4
  ret i32 %v0_26d3c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE7destroyEPS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d3e:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v4_26d3e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_26d3e, i32* @ebp, align 4
  ret i32 %tmp1
}

define i32 @function_26d52(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26d52:
  %eax.global-to-local = alloca i32, align 4
  %v0_26d52 = load i32, i32* @eax, align 4
  %v1_26d52 = trunc i32 %v0_26d52 to i8
  %v2_26d52 = load i1, i1* @cf, align 1
  %v3_26d52 = zext i1 %v2_26d52 to i8
  %v4_26d52 = add i8 %v3_26d52, %v1_26d52
  %v22_26d52 = zext i8 %v4_26d52 to i32
  %v24_26d52 = and i32 %v0_26d52, -256
  %v25_26d52 = or i32 %v22_26d52, %v24_26d52
  store i32 %v25_26d52, i32* %eax.global-to-local, align 4
  %v1_26d54 = inttoptr i32 %v25_26d52 to i8*
  %v2_26d54 = load i8, i8* %v1_26d54, align 1
  %v5_26d54 = add i8 %v2_26d54, %v4_26d52
  store i8 %v5_26d54, i8* %v1_26d54, align 1
  %v0_26d56 = load i32, i32* %eax.global-to-local, align 4
  %v1_26d56 = load i32, i32* @ebp, align 4
  %v2_26d56 = add i32 %v1_26d56, -12
  %v3_26d56 = inttoptr i32 %v2_26d56 to i32*
  store i32 %v0_26d56, i32* %v3_26d56, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_26d5b = load i32, i32* @ebp, align 4
  %v1_26d5b = add i32 %v0_26d5b, -32
  %v2_26d5b = inttoptr i32 %v1_26d5b to i32*
  %v3_26d5b = load i32, i32* %v2_26d5b, align 4
  store i32 %v3_26d5b, i32* %eax.global-to-local, align 4
  %v1_26d61 = call i32 @unknown_405b6(i32 %v3_26d5b)
  store i32 %v1_26d61, i32* %eax.global-to-local, align 4
  %v0_26d66 = load i32, i32* @ebp, align 4
  %v1_26d66 = add i32 %v0_26d66, -12
  %v2_26d66 = inttoptr i32 %v1_26d66 to i32*
  %v3_26d66 = load i32, i32* %v2_26d66, align 4
  store i32 %v3_26d66, i32* %eax.global-to-local, align 4
  %v1_26d69 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26d69 = xor i32 %v1_26d69, %v3_26d66
  %v3_26d69 = icmp eq i32 %v2_26d69, 0
  store i32 %v2_26d69, i32* @eax, align 4
  br i1 %v3_26d69, label %bb, label %dec_label_pc_26d72

bb:                                               ; preds = %dec_label_pc_26d52
  %v1_26d70 = call i32 @function_26d77()
  store i32 %v1_26d70, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_26d72

dec_label_pc_26d72:                               ; preds = %bb, %dec_label_pc_26d52
  %v2_26d70 = phi i32 [ %v1_26d70, %bb ], [ %v2_26d69, %dec_label_pc_26d52 ]
  ret i32 %v2_26d70
}

define i32 @function_26d74(i32 %arg1) local_unnamed_addr {
dec_label_pc_26d74:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_26d77() local_unnamed_addr {
dec_label_pc_26d77:
  %v0_26d78 = load i32, i32* @eax, align 4
  ret i32 %v0_26d78
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE13_M_deallocateEPS8_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_26d7a:
  ret i32 0
}

define i32 @function_26da2(i32 %arg1) local_unnamed_addr {
dec_label_pc_26da2:
  %v0_26da2 = load i32, i32* @ebx, align 4
  %v1_26da2 = add i32 %v0_26da2, 1435231301
  %v2_26da2 = inttoptr i32 %v1_26da2 to i32*
  %v3_26da2 = load i32, i32* %v2_26da2, align 4
  %v4_26da2 = load i32, i32* @ecx, align 4
  %v5_26da2 = load i1, i1* @cf, align 1
  %v6_26da2 = zext i1 %v5_26da2 to i32
  %v7_26da2 = sub i32 %v3_26da2, %v4_26da2
  %v8_26da2 = add i32 %v6_26da2, %v7_26da2
  %v31_26da2 = icmp eq i32 %v8_26da2, 0
  store i32 %v8_26da2, i32* %v2_26da2, align 4
  %v1_26da8 = load i32, i32* @ecx, align 4
  %v2_26da8 = add i32 %v1_26da8, -1962400684
  %v3_26da8 = inttoptr i32 %v2_26da8 to double*
  %v4_26da8 = load double, double* %v3_26da8, align 4
  %v5_26da8 = fpext double %v4_26da8 to x86_fp80
  %v6_26da8 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_26da8 = fmul x86_fp80 %v5_26da8, %v6_26da8
  store x86_fp80 %v7_26da8, x86_fp80* @st0, align 4
  %v1_26daf = add i32 %v1_26da8, -1
  store i32 %v1_26daf, i32* @ecx, align 4
  %v2_26daf = icmp eq i32 %v1_26daf, 0
  %v4_26daf = or i1 %v31_26da2, %v2_26daf
  br i1 %v4_26daf, label %dec_label_pc_26da2.dec_label_pc_26db1_crit_edge, label %bb

dec_label_pc_26da2.dec_label_pc_26db1_crit_edge:  ; preds = %dec_label_pc_26da2
  %v0_26db2.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26db1

bb:                                               ; preds = %dec_label_pc_26da2
  %v6_26daf = call i32 @function_26d3a()
  br label %dec_label_pc_26db1

dec_label_pc_26db1:                               ; preds = %dec_label_pc_26da2.dec_label_pc_26db1_crit_edge, %bb
  %v9_26db2 = phi i32 [ %v0_26db2.pre, %dec_label_pc_26da2.dec_label_pc_26db1_crit_edge ], [ %v6_26daf, %bb ]
  %v11_26db2 = and i32 %v9_26db2, -252
  %v1_26db7 = call i32 @unknown_535a0(i32 %v11_26db2)
  %v0_26dbc = load i32, i32* @ebp, align 4
  %v1_26dbc = add i32 %v0_26dbc, -12
  %v2_26dbc = inttoptr i32 %v1_26dbc to i32*
  %v3_26dbc = load i32, i32* %v2_26dbc, align 4
  ret i32 %v3_26dbc

; uselistorder directives
  uselistorder i32 %v1_26daf, { 1, 0 }
  uselistorder label %dec_label_pc_26db1, { 1, 0 }
}

define i32 @function_26dc4(i32 %arg1) local_unnamed_addr {
dec_label_pc_26dc4:
  %zf.global-to-local = alloca i1, align 1
  %v2_26dc4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_26dc4 = load i32, i32* @eax, align 4
  %v4_26dc4 = trunc i32 %v3_26dc4 to i8
  %v5_26dc4 = add i8 %v4_26dc4, %v2_26dc4
  %v15_26dc4 = icmp eq i8 %v5_26dc4, 0
  store i1 %v15_26dc4, i1* %zf.global-to-local, align 1
  %v21_26dc4 = inttoptr i32 %v3_26dc4 to i8*
  store i8 %v5_26dc4, i8* %v21_26dc4, align 1
  %v0_26dc6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_26dc6, label %bb, label %dec_label_pc_26dc4.dec_label_pc_26dc8_crit_edge

dec_label_pc_26dc4.dec_label_pc_26dc8_crit_edge:  ; preds = %dec_label_pc_26dc4
  %v2_26dc6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26dc8

bb:                                               ; preds = %dec_label_pc_26dc4
  %v1_26dc6 = call i32 @function_26dcd()
  br label %dec_label_pc_26dc8

dec_label_pc_26dc8:                               ; preds = %dec_label_pc_26dc4.dec_label_pc_26dc8_crit_edge, %bb
  %v2_26dc6 = phi i32 [ %v2_26dc6.pre, %dec_label_pc_26dc4.dec_label_pc_26dc8_crit_edge ], [ %v1_26dc6, %bb ]
  ret i32 %v2_26dc6

; uselistorder directives
  uselistorder label %dec_label_pc_26dc8, { 1, 0 }
}

define i32 @function_26dcd() local_unnamed_addr {
dec_label_pc_26dcd:
  %v0_26dce = load i32, i32* @eax, align 4
  ret i32 %v0_26dce
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESt6vectorIS9_SaIS9_EEEC1ERKSA_() local_unnamed_addr {
dec_label_pc_26dd0:
  %eax.global-to-local = alloca i32, align 4
  %v17_26dd3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_26dd3
}

define i32 @function_26dd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_26dd6:
  %v0_26dd6 = load i32, i32* @ebp, align 4
  %v1_26dd6 = add i32 %v0_26dd6, 8
  %v2_26dd6 = inttoptr i32 %v1_26dd6 to i32*
  %v3_26dd6 = load i32, i32* %v2_26dd6, align 4
  %v2_26dd9 = add i32 %v0_26dd6, -28
  %v3_26dd9 = inttoptr i32 %v2_26dd9 to i32*
  store i32 %v3_26dd6, i32* %v3_26dd9, align 4
  %v0_26ddc = load i32, i32* @ebp, align 4
  %v1_26ddc = add i32 %v0_26ddc, 12
  %v2_26ddc = inttoptr i32 %v1_26ddc to i32*
  %v3_26ddc = load i32, i32* %v2_26ddc, align 4
  %v2_26ddf = add i32 %v0_26ddc, -32
  %v3_26ddf = inttoptr i32 %v2_26ddf to i32*
  store i32 %v3_26ddc, i32* %v3_26ddf, align 4
  %v0_26de2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_26de8 = load i32, i32* @ebp, align 4
  %v2_26de8 = add i32 %v1_26de8, -12
  %v3_26de8 = inttoptr i32 %v2_26de8 to i32*
  store i32 %v0_26de2, i32* %v3_26de8, align 4
  %v0_26ded = load i32, i32* @ebp, align 4
  %v1_26df2 = add i32 %v0_26ded, -28
  %v2_26df2 = inttoptr i32 %v1_26df2 to i32*
  %v3_26df2 = load i32, i32* %v2_26df2, align 4
  ret i32 %v3_26df2
}

define i32 @function_26df6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26df6:
  %v0_26df6 = load i32, i32* @ebx, align 4
  %v1_26df6 = add i32 %v0_26df6, 862319685
  %v2_26df6 = inttoptr i32 %v1_26df6 to i8*
  %v3_26df6 = load i8, i8* %v2_26df6, align 1
  %v4_26df6 = load i32, i32* @ecx, align 4
  %v5_26df6 = trunc i32 %v4_26df6 to i8
  %v6_26df6 = load i1, i1* @cf, align 1
  %v7_26df6 = zext i1 %v6_26df6 to i8
  %v8_26df6 = add i8 %v5_26df6, %v3_26df6
  %v9_26df6 = add i8 %v8_26df6, %v7_26df6
  store i8 %v9_26df6, i8* %v2_26df6, align 1
  %v0_26dfc = load i32, i32* @eax, align 4
  %v1_26dfc = add i32 %v0_26dfc, 20
  %v10_26dfc = icmp eq i32 %v1_26dfc, 0
  store i32 %v1_26dfc, i32* @eax, align 4
  br i1 %v10_26dfc, label %bb, label %dec_label_pc_26e03

bb:                                               ; preds = %dec_label_pc_26df6
  %v1_26e01 = call i32 @function_26e08()
  br label %dec_label_pc_26e03

dec_label_pc_26e03:                               ; preds = %bb, %dec_label_pc_26df6
  %v2_26e01 = phi i32 [ %v1_26e01, %bb ], [ %v1_26dfc, %dec_label_pc_26df6 ]
  ret i32 %v2_26e01
}

define i32 @function_26e08() local_unnamed_addr {
dec_label_pc_26e08:
  %v0_26e09 = load i32, i32* @eax, align 4
  ret i32 %v0_26e09
}

define i32 @_ZNSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE12_Vector_implC1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_26e0a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_26e27 = call i32 @unknown_53672(i32 %tmp100)
  store i32 0, i32* %arg1, align 4
  %v1_26e38 = add i32 %tmp100, 4
  %v2_26e38 = inttoptr i32 %v1_26e38 to i32*
  store i32 0, i32* %v2_26e38, align 4
  %v1_26e42 = add i32 %tmp100, 8
  %v2_26e42 = inttoptr i32 %v1_26e42 to i32*
  store i32 0, i32* %v2_26e42, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26e55

bb:                                               ; preds = %dec_label_pc_26e0a
  %v1_26e53 = call i32 @function_26e5a()
  br label %dec_label_pc_26e55

dec_label_pc_26e55:                               ; preds = %bb, %dec_label_pc_26e0a
  %v2_26e53 = phi i32 [ %v1_26e53, %bb ], [ 0, %dec_label_pc_26e0a ]
  ret i32 %v2_26e53

; uselistorder directives
  uselistorder i32 %tmp100, { 2, 1, 0 }
}

define i32 @function_26e5a() local_unnamed_addr {
dec_label_pc_26e5a:
  %v0_26e5b = load i32, i32* @eax, align 4
  ret i32 %v0_26e5b
}

define i32 @_ZNSaIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e5c:
  %v1_26e79 = call i32 @unknown_536fa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26e8a

bb:                                               ; preds = %dec_label_pc_26e5c
  %v1_26e88 = call i32 @function_26e8f()
  br label %dec_label_pc_26e8a

dec_label_pc_26e8a:                               ; preds = %bb, %dec_label_pc_26e5c
  %v2_26e88 = phi i32 [ %v1_26e88, %bb ], [ 0, %dec_label_pc_26e5c ]
  ret i32 %v2_26e88
}

define i32 @function_26e8f() local_unnamed_addr {
dec_label_pc_26e8f:
  %v0_26e90 = load i32, i32* @eax, align 4
  ret i32 %v0_26e90
}

define i32 @_ZSt8_DestroyIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEEvT_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26e91:
  %v0_26ea3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_26ea3
}

define i32 @function_26eac(i32 %arg1) local_unnamed_addr {
dec_label_pc_26eac:
  %v0_26eae = load i32, i32* @ebp, align 4
  %v1_26eae = add i32 %v0_26eae, -32
  %v2_26eae = inttoptr i32 %v1_26eae to i32*
  %v3_26eae = load i32, i32* %v2_26eae, align 4
  %v1_26eb5 = add i32 %v0_26eae, -28
  %v2_26eb5 = inttoptr i32 %v1_26eb5 to i32*
  %v3_26eb5 = load i32, i32* %v2_26eb5, align 4
  %v2_26ebb = call i32 @unknown_53759(i32 %v3_26eb5, i32 %v3_26eae)
  %v0_26ec0 = load i32, i32* @ebp, align 4
  %v1_26ec0 = add i32 %v0_26ec0, -12
  %v2_26ec0 = inttoptr i32 %v1_26ec0 to i32*
  %v3_26ec0 = load i32, i32* %v2_26ec0, align 4
  %v1_26ec3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_26ec3 = xor i32 %v1_26ec3, %v3_26ec0
  %v3_26ec3 = icmp eq i32 %v2_26ec3, 0
  store i32 %v2_26ec3, i32* @eax, align 4
  br i1 %v3_26ec3, label %bb, label %dec_label_pc_26ecc

bb:                                               ; preds = %dec_label_pc_26eac
  %v1_26eca = call i32 @function_26ed1()
  br label %dec_label_pc_26ecc

dec_label_pc_26ecc:                               ; preds = %bb, %dec_label_pc_26eac
  %v2_26eca = phi i32 [ %v1_26eca, %bb ], [ %v2_26ec3, %dec_label_pc_26eac ]
  ret i32 %v2_26eca
}

define i32 @function_26ed1() local_unnamed_addr {
dec_label_pc_26ed1:
  %v0_26ed2 = load i32, i32* @eax, align 4
  ret i32 %v0_26ed2
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESaIS9_EEEC1ERSB_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26ed4:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26f05

bb:                                               ; preds = %dec_label_pc_26ed4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_26f03 = call i32 @function_26f0a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_26f05

dec_label_pc_26f05:                               ; preds = %bb, %dec_label_pc_26ed4
  %v4_26f03 = phi i32 [ %v3_26f03, %bb ], [ 0, %dec_label_pc_26ed4 ]
  ret i32 %v4_26f03

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26f0a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f0a:
  %v0_26f0b = load i32, i32* @eax, align 4
  ret i32 %v0_26f0b
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESaIS9_EEEcvRSB_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_26f0c:
  %v2_26f26 = load i32, i32* %arg1, align 4
  store i32 %v2_26f26, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26f34

bb:                                               ; preds = %dec_label_pc_26f0c
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_26f32 = call i32 @function_26f39(i32 %tmp100)
  br label %dec_label_pc_26f34

dec_label_pc_26f34:                               ; preds = %bb, %dec_label_pc_26f0c
  %v3_26f32 = phi i32 [ %v2_26f32, %bb ], [ %v2_26f26, %dec_label_pc_26f0c ]
  ret i32 %v3_26f32

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_26f39(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f39:
  %v0_26f3a = load i32, i32* @eax, align 4
  ret i32 %v0_26f3a
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS0_7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EESaIS9_EEE1fERSB_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f3b:
  %v0_26f4d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_26f4d
}

define i32 @function_26f54(i32 %arg1) local_unnamed_addr {
dec_label_pc_26f54:
  %v0_26f54 = load i32, i32* @ebp, align 4
  %v1_26f54 = add i32 %v0_26f54, 1
  store i32 %v1_26f54, i32* @ebp, align 4
  %v1_26f58 = add i32 %v0_26f54, -27
  %v2_26f58 = inttoptr i32 %v1_26f58 to i32*
  %v3_26f58 = load i32, i32* %v2_26f58, align 4
  store i32 %v3_26f58, i32* @eax, align 4
  %v1_26f5b = add i32 %v0_26f54, -11
  %v2_26f5b = inttoptr i32 %v1_26f5b to i32*
  %v3_26f5b = load i32, i32* %v2_26f5b, align 4
  %v1_26f5e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26f5e = icmp eq i32 %v1_26f5e, %v3_26f5b
  br i1 %v3_26f5e, label %bb, label %dec_label_pc_26f67

bb:                                               ; preds = %dec_label_pc_26f54
  %v1_26f65 = call i32 @function_26f6c()
  br label %dec_label_pc_26f67

dec_label_pc_26f67:                               ; preds = %bb, %dec_label_pc_26f54
  %v2_26f65 = phi i32 [ %v1_26f65, %bb ], [ %v3_26f58, %dec_label_pc_26f54 ]
  ret i32 %v2_26f65
}

define i32 @function_26f6c() local_unnamed_addr {
dec_label_pc_26f6c:
  %v0_26f6d = load i32, i32* @eax, align 4
  ret i32 %v0_26f6d
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEENS_14range_iteratorIT_E4typeERSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f6e:
  %v2_26f98 = call i32 @unknown_4db50(i32 %arg1, i32 %arg2)
  ret i32 %v2_26f98
}

define i32 @function_26f9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26f9e:
  %v0_26f9f = load i32, i32* @eax, align 4
  %v2_26f9f = add i32 %v0_26f9f, zext (i8 ptrtoint (i8* @global_var_8b.2199 to i8) to i32)
  %v16_26f9f = urem i32 %v2_26f9f, 256
  %v18_26f9f = and i32 %v0_26f9f, -256
  %v19_26f9f = or i32 %v16_26f9f, %v18_26f9f
  store i32 %v19_26f9f, i32* @eax, align 4
  %v0_26fa1 = load i32, i32* @ebp, align 4
  %v1_26fa1 = add i32 %v0_26fa1, 1
  store i32 %v1_26fa1, i32* @ebp, align 4
  %v0_26fa6 = load i32, i32* @edx, align 4
  %v1_26fa6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_26fa6 = icmp eq i32 %v1_26fa6, %v0_26fa6
  br i1 %v3_26fa6, label %bb, label %dec_label_pc_26faf

bb:                                               ; preds = %dec_label_pc_26f9e
  %v1_26fad = call i32 @function_26fb4()
  br label %dec_label_pc_26faf

dec_label_pc_26faf:                               ; preds = %bb, %dec_label_pc_26f9e
  %v2_26fad = phi i32 [ %v1_26fad, %bb ], [ %v19_26f9f, %dec_label_pc_26f9e ]
  ret i32 %v2_26fad

; uselistorder directives
  uselistorder i32 %v0_26f9f, { 1, 0 }
}

define i32 @function_26fb4() local_unnamed_addr {
dec_label_pc_26fb4:
  %v0_26fb5 = load i32, i32* @eax, align 4
  ret i32 %v0_26fb5
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorINS_7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESaISA_EEEENS_14range_iteratorIT_E4typeERSE_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_26fb8:
  %v2_26fe2 = call i32 @unknown_46df6(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_26ff9

bb:                                               ; preds = %dec_label_pc_26fb8
  %v1_26ff7 = call i32 @function_26ffe()
  br label %dec_label_pc_26ff9

dec_label_pc_26ff9:                               ; preds = %bb, %dec_label_pc_26fb8
  %v2_26ff7 = phi i32 [ %v1_26ff7, %bb ], [ %arg1, %dec_label_pc_26fb8 ]
  ret i32 %v2_26ff7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_26ffe() local_unnamed_addr {
dec_label_pc_26ffe:
  %v0_26fff = load i32, i32* @eax, align 4
  ret i32 %v0_26fff
}

define i32 @_ZN5boost6detail7variant14invoke_visitorI20CAffectedKeysVisitorEC1ERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27002:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27033

bb:                                               ; preds = %dec_label_pc_27002
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_27031 = call i32 @function_27038(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_27033

dec_label_pc_27033:                               ; preds = %bb, %dec_label_pc_27002
  %v4_27031 = phi i32 [ %v3_27031, %bb ], [ 0, %dec_label_pc_27002 ]
  ret i32 %v4_27031

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27038(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27038:
  %v0_27039 = load i32, i32* @eax, align 4
  ret i32 %v0_27039
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14invoke_visitorI20CAffectedKeysVisitorEEEENT_11result_typeERSC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2703a:
  %v1_2705b = add i32 %arg1, 4
  %v1_27061 = call i32 @unknown_4d994(i32 %v1_2705b)
  ret i32 %v1_27061
}

define i32 @function_27066(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27066:
  %ebx.global-to-local = alloca i32, align 4
  %v0_27066 = load i32, i32* @eax, align 4
  store i32 %v0_27066, i32* %ebx.global-to-local, align 4
  %v0_27068 = load i32, i32* @ebp, align 4
  %v1_27068 = add i32 %v0_27068, -28
  %v2_27068 = inttoptr i32 %v1_27068 to i32*
  %v3_27068 = load i32, i32* %v2_27068, align 4
  %v1_2706e = call i32 @unknown_46a98(i32 %v3_27068)
  %v0_27075 = load i32, i32* @ebp, align 4
  %v1_27075 = add i32 %v0_27075, -28
  %v2_27075 = inttoptr i32 %v1_27075 to i32*
  %v3_27075 = load i32, i32* %v2_27075, align 4
  %v1_27078 = inttoptr i32 %v3_27075 to i32*
  %v2_27078 = load i32, i32* %v1_27078, align 4
  %v0_2707a = load i32, i32* %ebx.global-to-local, align 4
  %v1_2707e = add i32 %v0_27075, -32
  %v2_2707e = inttoptr i32 %v1_2707e to i32*
  %v3_2707e = load i32, i32* %v2_2707e, align 4
  %v4_2708c = call i32 @unknown_53958(i32 %v2_27078, i32 %v1_2706e, i32 %v3_2707e, i32 %v0_2707a)
  %v0_27091 = load i32, i32* @ebp, align 4
  %v1_27091 = add i32 %v0_27091, -12
  %v2_27091 = inttoptr i32 %v1_27091 to i32*
  %v3_27091 = load i32, i32* %v2_27091, align 4
  %v1_27094 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27094 = xor i32 %v1_27094, %v3_27091
  %v3_27094 = icmp eq i32 %v2_27094, 0
  store i32 %v2_27094, i32* @eax, align 4
  br i1 %v3_27094, label %bb, label %dec_label_pc_2709d

bb:                                               ; preds = %dec_label_pc_27066
  %v1_2709b = call i32 @function_270a2()
  br label %dec_label_pc_2709d

dec_label_pc_2709d:                               ; preds = %bb, %dec_label_pc_27066
  %v2_2709b = phi i32 [ %v1_2709b, %bb ], [ %v2_27094, %dec_label_pc_27066 ]
  ret i32 %v2_2709b
}

define i32 @function_270a2() local_unnamed_addr {
dec_label_pc_270a2:
  %v0_270a7 = load i32, i32* @eax, align 4
  ret i32 %v0_270a7
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CKeyIDSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_270a8:
  ret i32 %arg1
}

define i32 @function_270b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_270b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_270b6 = load i32, i32* @eax, align 4
  %v1_270b6 = trunc i32 %v0_270b6 to i8
  %v2_270b6 = load i1, i1* @cf, align 1
  %v3_270b6 = zext i1 %v2_270b6 to i8
  %v4_270b6 = add i8 %v3_270b6, %v1_270b6
  %v22_270b6 = zext i8 %v4_270b6 to i32
  %v24_270b6 = and i32 %v0_270b6, -256
  %v25_270b6 = or i32 %v22_270b6, %v24_270b6
  store i32 %v25_270b6, i32* %eax.global-to-local, align 4
  %v1_270b8 = inttoptr i32 %v25_270b6 to i8*
  %v2_270b8 = load i8, i8* %v1_270b8, align 1
  %v5_270b8 = add i8 %v2_270b8, %v4_270b6
  store i8 %v5_270b8, i8* %v1_270b8, align 1
  %v0_270ba = load i32, i32* %eax.global-to-local, align 4
  %v1_270ba = load i32, i32* @ebp, align 4
  %v2_270ba = add i32 %v1_270ba, -12
  %v3_270ba = inttoptr i32 %v2_270ba to i32*
  store i32 %v0_270ba, i32* %v3_270ba, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_270bf = load i32, i32* @ebp, align 4
  %v1_270bf = add i32 %v0_270bf, -28
  %v2_270bf = inttoptr i32 %v1_270bf to i32*
  %v3_270bf = load i32, i32* %v2_270bf, align 4
  store i32 %v3_270bf, i32* %eax.global-to-local, align 4
  %v1_270c2 = add i32 %v0_270bf, -12
  %v2_270c2 = inttoptr i32 %v1_270c2 to i32*
  %v3_270c2 = load i32, i32* %v2_270c2, align 4
  %v1_270c5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_270c5 = xor i32 %v1_270c5, %v3_270c2
  store i32 %v2_270c5, i32* @edx, align 4
  ret i32 %v3_270bf
}

define i32 @function_270cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_270cc:
  %v0_270cc = load i1, i1* @zf, align 1
  br i1 %v0_270cc, label %bb, label %dec_label_pc_270cc.dec_label_pc_270ce_crit_edge

dec_label_pc_270cc.dec_label_pc_270ce_crit_edge:  ; preds = %dec_label_pc_270cc
  %v2_270cc.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_270ce

bb:                                               ; preds = %dec_label_pc_270cc
  %v1_270cc = call i32 @function_270d3()
  br label %dec_label_pc_270ce

dec_label_pc_270ce:                               ; preds = %dec_label_pc_270cc.dec_label_pc_270ce_crit_edge, %bb
  %v2_270cc = phi i32 [ %v2_270cc.pre, %dec_label_pc_270cc.dec_label_pc_270ce_crit_edge ], [ %v1_270cc, %bb ]
  ret i32 %v2_270cc

; uselistorder directives
  uselistorder label %dec_label_pc_270ce, { 1, 0 }
}

define i32 @function_270d3() local_unnamed_addr {
dec_label_pc_270d3:
  %v0_270d4 = load i32, i32* @eax, align 4
  ret i32 %v0_270d4
}

define i32 @_ZSt13copy_backwardIP6CKeyIDS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_270d5:
  %v1_270ff = call i32 @unknown_53a67(i32 %arg2)
  %v1_2710c = call i32 @unknown_53a67(i32 %arg1)
  ret i32 %v1_2710c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_53a67, { 1, 0 }
}

define i32 @function_27112(i32 %arg1) local_unnamed_addr {
dec_label_pc_27112:
  %v0_2711a = load i32, i32* @eax, align 4
  %v11_2711a = and i32 %v0_2711a, -252
  %v1_2711f = call i32 @unknown_53a9c(i32 %v11_2711a)
  ret i32 %v1_2711f
}

define i32 @function_27134() local_unnamed_addr {
dec_label_pc_27134:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_27134 = load i32, i32* %ebx.global-to-local, align 4
  %v1_27134 = add i32 %v0_27134, 1566258372
  %v2_27134 = inttoptr i32 %v1_27134 to i32*
  %v3_27134 = load i32, i32* %v2_27134, align 4
  %v4_27134 = add i32 %v3_27134, 1
  store i32 %v4_27134, i32* %v2_27134, align 4
  %v0_2713a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2713a
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CKeyIDSt6vectorIS1_SaIS1_EEEdeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2713c:
  ret i32 %arg1
}

define i32 @function_2714a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2714a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2714a = load i32, i32* @eax, align 4
  %v1_2714a = trunc i32 %v0_2714a to i8
  %v2_2714a = load i1, i1* @cf, align 1
  %v3_2714a = zext i1 %v2_2714a to i8
  %v4_2714a = add i8 %v3_2714a, %v1_2714a
  %v22_2714a = zext i8 %v4_2714a to i32
  %v24_2714a = and i32 %v0_2714a, -256
  %v25_2714a = or i32 %v22_2714a, %v24_2714a
  store i32 %v25_2714a, i32* %eax.global-to-local, align 4
  %v1_2714c = inttoptr i32 %v25_2714a to i8*
  %v2_2714c = load i8, i8* %v1_2714c, align 1
  %v5_2714c = add i8 %v2_2714c, %v4_2714a
  store i8 %v5_2714c, i8* %v1_2714c, align 1
  %v0_2714e = load i32, i32* %eax.global-to-local, align 4
  %v1_2714e = load i32, i32* @ebp, align 4
  %v2_2714e = add i32 %v1_2714e, -12
  %v3_2714e = inttoptr i32 %v2_2714e to i32*
  store i32 %v0_2714e, i32* %v3_2714e, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_27153 = load i32, i32* @ebp, align 4
  %v1_27153 = add i32 %v0_27153, -28
  %v2_27153 = inttoptr i32 %v1_27153 to i32*
  %v3_27153 = load i32, i32* %v2_27153, align 4
  store i32 %v3_27153, i32* %eax.global-to-local, align 4
  %v1_27156 = inttoptr i32 %v3_27153 to i32*
  %v2_27156 = load i32, i32* %v1_27156, align 4
  store i32 %v2_27156, i32* @eax, align 4
  %v1_27158 = add i32 %v0_27153, -12
  %v2_27158 = inttoptr i32 %v1_27158 to i32*
  %v3_27158 = load i32, i32* %v2_27158, align 4
  %v1_2715b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2715b = icmp eq i32 %v1_2715b, %v3_27158
  br i1 %v3_2715b, label %bb, label %dec_label_pc_27164

bb:                                               ; preds = %dec_label_pc_2714a
  %v1_27162 = call i32 @function_27169()
  store i32 %v1_27162, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27164

dec_label_pc_27164:                               ; preds = %bb, %dec_label_pc_2714a
  %v2_27162 = phi i32 [ %v1_27162, %bb ], [ %v2_27156, %dec_label_pc_2714a ]
  ret i32 %v2_27162
}

define i32 @function_27169() local_unnamed_addr {
dec_label_pc_27169:
  %v0_2716a = load i32, i32* @eax, align 4
  ret i32 %v0_2716a
}

define i32 @_ZNKSt6vectorI6CKeyIDSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2716c:
  %v1_27196 = call i32 @unknown_53bec(i32 %arg1)
  %v1_271a3 = call i32 @unknown_53ba6(i32 %arg1)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_271b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_271b0:
  %v0_271b0 = load i32, i32* @eax, align 4
  ret i32 %v0_271b0
}

define i32 @function_271ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_271ca:
  %v0_271cc = load i32, i32* @eax, align 4
  %v5_271cc = mul i32 %v0_271cc, 2
  %v20_271cc = and i32 %v5_271cc, 254
  %v22_271cc = and i32 %v0_271cc, -256
  %v23_271cc = or i32 %v20_271cc, %v22_271cc
  store i32 %v23_271cc, i32* @ebx, align 4
  %v0_271d0 = load i32, i32* @ebp, align 4
  %v1_271d0 = add i32 %v0_271d0, -28
  %v2_271d0 = inttoptr i32 %v1_271d0 to i32*
  %v3_271d0 = load i32, i32* %v2_271d0, align 4
  %v1_271d6 = call i32 @unknown_53ba6(i32 %v3_271d0)
  %v1_271db = load i32, i32* @ebp, align 4
  %v2_271db = add i32 %v1_271db, -20
  %v3_271db = inttoptr i32 %v2_271db to i32*
  store i32 %v1_271d6, i32* %v3_271db, align 4
  %v0_271de = load i32, i32* @ebp, align 4
  %v1_271de = add i32 %v0_271de, -32
  %v1_271e5 = add i32 %v0_271de, -20
  %v2_271eb = call i32 @unknown_500d2(i32 %v1_271e5, i32 %v1_271de)
  %v1_271f0 = inttoptr i32 %v2_271eb to i32*
  %v2_271f0 = load i32, i32* %v1_271f0, align 4
  %v1_271f2 = load i32, i32* @ebx, align 4
  %v2_271f2 = add i32 %v1_271f2, %v2_271f0
  %v1_271f4 = load i32, i32* @ebp, align 4
  %v2_271f4 = add i32 %v1_271f4, -16
  %v3_271f4 = inttoptr i32 %v2_271f4 to i32*
  store i32 %v2_271f2, i32* %v3_271f4, align 4
  %v0_271f7 = load i32, i32* @ebp, align 4
  %v1_271f7 = add i32 %v0_271f7, -28
  %v2_271f7 = inttoptr i32 %v1_271f7 to i32*
  %v3_271f7 = load i32, i32* %v2_271f7, align 4
  %v1_271fd = call i32 @unknown_53ba6(i32 %v3_271f7)
  %v1_27202 = load i32, i32* @ebp, align 4
  %v2_27202 = add i32 %v1_27202, -16
  %v3_27202 = inttoptr i32 %v2_27202 to i32*
  %v4_27202 = load i32, i32* %v3_27202, align 4
  %tmp5 = icmp ugt i32 %v1_271fd, %v4_27202
  br i1 %tmp5, label %dec_label_pc_27217, label %dec_label_pc_27207

dec_label_pc_27207:                               ; preds = %dec_label_pc_271ca
  %v1_27207 = add i32 %v1_27202, -28
  %v2_27207 = inttoptr i32 %v1_27207 to i32*
  %v3_27207 = load i32, i32* %v2_27207, align 4
  %v1_2720d = call i32 @unknown_53bec(i32 %v3_27207)
  %v1_27212 = load i32, i32* @ebp, align 4
  %v2_27212 = add i32 %v1_27212, -16
  %v3_27212 = inttoptr i32 %v2_27212 to i32*
  %v4_27212 = load i32, i32* %v3_27212, align 4
  %v10_27212 = icmp ult i32 %v1_2720d, %v4_27212
  %v1_27215 = icmp eq i1 %v10_27212, false
  br i1 %v1_27215, label %dec_label_pc_27227, label %dec_label_pc_27217

dec_label_pc_27217:                               ; preds = %dec_label_pc_271ca, %dec_label_pc_27207
  %v0_27217 = phi i32 [ %v1_27202, %dec_label_pc_271ca ], [ %v1_27212, %dec_label_pc_27207 ]
  %v1_27217 = add i32 %v0_27217, -28
  %v2_27217 = inttoptr i32 %v1_27217 to i32*
  %v3_27217 = load i32, i32* %v2_27217, align 4
  %v1_2721d = call i32 @unknown_53bec(i32 %v3_27217)
  %v0_27227.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27227

dec_label_pc_27227:                               ; preds = %dec_label_pc_27207, %dec_label_pc_27217
  %v0_27227 = phi i32 [ %v0_27227.pre, %dec_label_pc_27217 ], [ %v1_27212, %dec_label_pc_27207 ]
  %storemerge = phi i32 [ %v1_2721d, %dec_label_pc_27217 ], [ %v4_27212, %dec_label_pc_27207 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_27227 = add i32 %v0_27227, -12
  %v2_27227 = inttoptr i32 %v1_27227 to i32*
  %v3_27227 = load i32, i32* %v2_27227, align 4
  %v1_2722a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2722a = icmp eq i32 %v1_2722a, %v3_27227
  br i1 %v3_2722a, label %bb, label %dec_label_pc_27233

bb:                                               ; preds = %dec_label_pc_27227
  %v1_27231 = call i32 @function_27238()
  br label %dec_label_pc_27233

dec_label_pc_27233:                               ; preds = %bb, %dec_label_pc_27227
  %v2_27231 = phi i32 [ %v1_27231, %bb ], [ %storemerge, %dec_label_pc_27227 ]
  ret i32 %v2_27231

; uselistorder directives
  uselistorder i32 %v0_271cc, { 1, 0 }
  uselistorder i32 (i32)* @unknown_53bec, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_53ba6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_27227, { 1, 0 }
  uselistorder label %dec_label_pc_27217, { 1, 0 }
}

define i32 @function_27238() local_unnamed_addr {
dec_label_pc_27238:
  %v0_2723d = load i32, i32* @eax, align 4
  ret i32 %v0_2723d
}

define i32 @_ZNSt6vectorI6CKeyIDSaIS0_EE5beginEv() local_unnamed_addr {
dec_label_pc_2723e:
  %eax.global-to-local = alloca i32, align 4
  %v17_27241 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_27241
}

define i32 @function_27244(i32 %arg1) local_unnamed_addr {
dec_label_pc_27244:
  %v0_27244 = load i32, i32* @ebp, align 4
  %v1_27244 = add i32 %v0_27244, 8
  %v2_27244 = inttoptr i32 %v1_27244 to i32*
  %v3_27244 = load i32, i32* %v2_27244, align 4
  %v2_27247 = add i32 %v0_27244, -28
  %v3_27247 = inttoptr i32 %v2_27247 to i32*
  store i32 %v3_27244, i32* %v3_27247, align 4
  %v0_2724a = load i32, i32* @ebp, align 4
  %v1_2724a = add i32 %v0_2724a, 12
  %v2_2724a = inttoptr i32 %v1_2724a to i32*
  %v3_2724a = load i32, i32* %v2_2724a, align 4
  %v2_2724d = add i32 %v0_2724a, -32
  %v3_2724d = inttoptr i32 %v2_2724d to i32*
  store i32 %v3_2724a, i32* %v3_2724d, align 4
  %v0_27250 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27256 = load i32, i32* @ebp, align 4
  %v2_27256 = add i32 %v1_27256, -12
  %v3_27256 = inttoptr i32 %v2_27256 to i32*
  store i32 %v0_27250, i32* %v3_27256, align 4
  %v0_2725b = load i32, i32* @ebp, align 4
  %v1_2725b = add i32 %v0_2725b, -32
  %v2_2725b = inttoptr i32 %v1_2725b to i32*
  %v3_2725b = load i32, i32* %v2_2725b, align 4
  %v1_27262 = add i32 %v0_2725b, -28
  %v2_27262 = inttoptr i32 %v1_27262 to i32*
  %v3_27262 = load i32, i32* %v2_27262, align 4
  %v2_27268 = call i32 @unknown_4e70a(i32 %v3_27262, i32 %v3_2725b)
  %v0_2726d = load i32, i32* @ebp, align 4
  %v1_2726d = add i32 %v0_2726d, -28
  %v2_2726d = inttoptr i32 %v1_2726d to i32*
  %v3_2726d = load i32, i32* %v2_2726d, align 4
  store i1 false, i1* @cf, align 1
  ret i32 %v3_2726d
}

define i32 @function_2724c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2724c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27266(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27266:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2727a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2727a:
  %v0_2727a = load i1, i1* @zf, align 1
  br i1 %v0_2727a, label %bb, label %dec_label_pc_2727a.dec_label_pc_2727c_crit_edge

dec_label_pc_2727a.dec_label_pc_2727c_crit_edge:  ; preds = %dec_label_pc_2727a
  %v2_2727a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2727c

bb:                                               ; preds = %dec_label_pc_2727a
  %v1_2727a = call i32 @function_27281()
  br label %dec_label_pc_2727c

dec_label_pc_2727c:                               ; preds = %dec_label_pc_2727a.dec_label_pc_2727c_crit_edge, %bb
  %v2_2727a = phi i32 [ %v2_2727a.pre, %dec_label_pc_2727a.dec_label_pc_2727c_crit_edge ], [ %v1_2727a, %bb ]
  ret i32 %v2_2727a

; uselistorder directives
  uselistorder label %dec_label_pc_2727c, { 1, 0 }
}

define i32 @function_27281() local_unnamed_addr {
dec_label_pc_27281:
  %v0_27282 = load i32, i32* @eax, align 4
  ret i32 %v0_27282
}

define i32 @_ZN9__gnu_cxxmiIP6CKeyIDSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27285:
  %v1_272a9 = call i32 @unknown_4e32d(i32 %arg1)
  %v1_272ae = inttoptr i32 %v1_272a9 to i32*
  %v2_272ae = load i32, i32* %v1_272ae, align 4
  ret i32 %v2_272ae
}

define i32 @function_272b0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_272b0:
  %v0_272b0 = load i32, i32* @eax, align 4
  store i32 %v0_272b0, i32* @ebx, align 4
  %v0_272b2 = load i32, i32* @ebp, align 4
  %v1_272b2 = add i32 %v0_272b2, -32
  %v2_272b2 = inttoptr i32 %v1_272b2 to i32*
  %v3_272b2 = load i32, i32* %v2_272b2, align 4
  %v1_272b8 = call i32 @unknown_4e32d(i32 %v3_272b2)
  %v1_272bd = inttoptr i32 %v1_272b8 to i32*
  %v2_272bd = load i32, i32* %v1_272bd, align 4
  %v0_272bf = load i32, i32* @ebx, align 4
  %v2_272c1 = sub i32 %v0_272bf, %v2_272bd
  %v2_272c5 = sdiv i32 %v2_272c1, 4
  %v3_272c8 = mul i32 %v2_272c5, -858993459
  store i32 %v3_272c8, i32* @eax, align 4
  %v0_272ce = load i32, i32* @ebp, align 4
  %v1_272ce = add i32 %v0_272ce, -12
  %v2_272ce = inttoptr i32 %v1_272ce to i32*
  %v3_272ce = load i32, i32* %v2_272ce, align 4
  %v1_272d1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_272d1 = xor i32 %v1_272d1, %v3_272ce
  store i1 false, i1* @cf, align 1
  %v3_272d1 = icmp eq i32 %v2_272d1, 0
  store i1 %v3_272d1, i1* @zf, align 1
  store i32 %v2_272d1, i32* @edx, align 4
  br i1 %v3_272d1, label %bb, label %dec_label_pc_272da

bb:                                               ; preds = %dec_label_pc_272b0
  %v1_272d8 = call i32 @function_272df()
  br label %dec_label_pc_272da

dec_label_pc_272da:                               ; preds = %bb, %dec_label_pc_272b0
  %v2_272d8 = phi i32 [ %v1_272d8, %bb ], [ %v3_272c8, %dec_label_pc_272b0 ]
  ret i32 %v2_272d8
}

define i32 @function_272df() local_unnamed_addr {
dec_label_pc_272df:
  %v0_272df = load i32, i32* @esp, align 4
  %v5_272df = icmp ugt i32 %v0_272df, -53
  store i1 %v5_272df, i1* @cf, align 1
  %v10_272df = icmp eq i32 %v0_272df, -52
  store i1 %v10_272df, i1* @zf, align 1
  %v0_272e4 = load i32, i32* @eax, align 4
  ret i32 %v0_272e4
}

define i32 @_ZNSt12_Vector_baseI6CKeyIDSaIS0_EE11_M_allocateEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_272e6:
  %v10_27303 = icmp eq i32 %arg2, 0
  br i1 %v10_27303, label %dec_label_pc_2732a, label %dec_label_pc_27309

dec_label_pc_27309:                               ; preds = %dec_label_pc_272e6
  %v3_2731e = call i32 @unknown_53da4(i32 %arg1, i32 %arg2, i32 0)
  br label %dec_label_pc_2732a

dec_label_pc_2732a:                               ; preds = %dec_label_pc_272e6, %dec_label_pc_27309
  %storemerge = phi i32 [ %v3_2731e, %dec_label_pc_27309 ], [ 0, %dec_label_pc_272e6 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27336

bb:                                               ; preds = %dec_label_pc_2732a
  %v1_27334 = call i32 @function_2733b()
  br label %dec_label_pc_27336

dec_label_pc_27336:                               ; preds = %bb, %dec_label_pc_2732a
  %v2_27334 = phi i32 [ %v1_27334, %bb ], [ %storemerge, %dec_label_pc_2732a ]
  ret i32 %v2_27334

; uselistorder directives
  uselistorder label %dec_label_pc_2732a, { 1, 0 }
}

define i32 @function_2733b() local_unnamed_addr {
dec_label_pc_2733b:
  %v0_2733c = load i32, i32* @eax, align 4
  ret i32 %v0_2733c
}

define i32 @_ZNSt12_Vector_baseI6CKeyIDSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2733e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27364

bb:                                               ; preds = %dec_label_pc_2733e
  %v2_27362 = call i32 @function_27369(i32 %arg1)
  br label %dec_label_pc_27364

dec_label_pc_27364:                               ; preds = %bb, %dec_label_pc_2733e
  %v3_27362 = phi i32 [ %v2_27362, %bb ], [ %arg1, %dec_label_pc_2733e ]
  ret i32 %v3_27362
}

define i32 @function_27369(i32 %arg1) local_unnamed_addr {
dec_label_pc_27369:
  %v0_2736a = load i32, i32* @eax, align 4
  ret i32 %v0_2736a
}

define i32 @_ZSt22__uninitialized_move_aIP6CKeyIDS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2736b:
  ret i32 %arg1
}

define i32 @function_27376(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27376:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_27378 = load i32, i32* @ebp, align 4
  %v0_27379 = load i32, i32* @eax, align 4
  %v2_27379 = or i32 %v0_27379, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_27379, i32* %eax.global-to-local, align 4
  %v0_2737c = load i32, i32* @ecx, align 4
  %v1_2737c = add i32 %v0_2737c, 255
  %v1_2737e = add i32 %v0_27378, 3
  store i32 %v1_2737e, i32* %ebp.global-to-local, align 4
  %v1_2737f = add i32 %v0_2737c, 1166793796
  %v2_2737f = inttoptr i32 %v1_2737f to i8*
  %v3_2737f = load i8, i8* %v2_2737f, align 1
  %v5_2737f = trunc i32 %v1_2737c to i8
  %v8_2737f = add i8 %v3_2737f, %v5_2737f
  %v28_2737f = icmp ult i8 %v8_2737f, %v3_2737f
  store i1 %v28_2737f, i1* %cf.global-to-local, align 1
  store i8 %v8_2737f, i8* %v2_2737f, align 1
  %v0_27385 = load i32, i32* %eax.global-to-local, align 4
  %v1_27385 = trunc i32 %v0_27385 to i8
  %v2_27385 = load i1, i1* %cf.global-to-local, align 1
  %v3_27385 = zext i1 %v2_27385 to i8
  %v4_27385 = add i8 %v1_27385, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_27385 = add i8 %v4_27385, %v3_27385
  %v20_27385 = add i8 %v1_27385, -119
  %v21_27385 = add i8 %v20_27385, %v3_27385
  %v22_27385 = icmp ule i8 %v21_27385, %v1_27385
  %v23_27385 = icmp ugt i8 %v1_27385, 118
  %v24_27385 = select i1 %v2_27385, i1 %v22_27385, i1 %v23_27385
  %v25_27385 = zext i8 %v5_27385 to i32
  %v27_27385 = and i32 %v0_27385, -256
  %v28_27385 = or i32 %v25_27385, %v27_27385
  store i32 %v28_27385, i32* %eax.global-to-local, align 4
  %v0_27387 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27387 = add i32 %v0_27387, 1
  store i32 %v1_27387, i32* @ebp, align 4
  %v3_2738b = zext i1 %v24_27385 to i8
  %v4_2738b = add i8 %v3_2738b, %v5_27385
  %v19_2738b = icmp ule i8 %v4_2738b, %v5_27385
  %v21_2738b = icmp eq i1 %v24_27385, %v19_2738b
  store i1 %v21_2738b, i1* %cf.global-to-local, align 1
  %v22_2738b = zext i8 %v4_2738b to i32
  %v25_2738b = or i32 %v22_2738b, %v27_27385
  store i32 %v25_2738b, i32* %eax.global-to-local, align 4
  %v1_2738d = inttoptr i32 %v25_2738b to i8*
  %v2_2738d = load i8, i8* %v1_2738d, align 1
  %v5_2738d = add i8 %v2_2738d, %v4_2738b
  store i8 %v5_2738d, i8* %v1_2738d, align 1
  %v0_2738f = load i32, i32* %eax.global-to-local, align 4
  %v1_2738f = load i32, i32* @ebp, align 4
  %v2_2738f = add i32 %v1_2738f, -12
  %v3_2738f = inttoptr i32 %v2_2738f to i32*
  store i32 %v0_2738f, i32* %v3_2738f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_27394 = load i32, i32* @ebp, align 4
  %v1_27394 = add i32 %v0_27394, -40
  %v2_27394 = inttoptr i32 %v1_27394 to i32*
  %v3_27394 = load i32, i32* %v2_27394, align 4
  store i32 %v3_27394, i32* %eax.global-to-local, align 4
  %v1_2739b = add i32 %v0_27394, -36
  %v2_2739b = inttoptr i32 %v1_2739b to i32*
  %v3_2739b = load i32, i32* %v2_2739b, align 4
  store i32 %v3_2739b, i32* %eax.global-to-local, align 4
  %v1_273a2 = add i32 %v0_27394, -32
  %v2_273a2 = inttoptr i32 %v1_273a2 to i32*
  %v3_273a2 = load i32, i32* %v2_273a2, align 4
  store i32 %v3_273a2, i32* %eax.global-to-local, align 4
  %v1_273a9 = add i32 %v0_27394, -28
  %v2_273a9 = inttoptr i32 %v1_273a9 to i32*
  %v3_273a9 = load i32, i32* %v2_273a9, align 4
  store i32 %v3_273a9, i32* %eax.global-to-local, align 4
  %v4_273af = call i32 @unknown_53e8e(i32 %v3_273a9, i32 %v3_273a2, i32 %v3_2739b, i32 %v3_27394)
  store i32 %v4_273af, i32* @eax, align 4
  %v0_273b4 = load i32, i32* @ebp, align 4
  %v1_273b4 = add i32 %v0_273b4, -12
  %v2_273b4 = inttoptr i32 %v1_273b4 to i32*
  %v3_273b4 = load i32, i32* %v2_273b4, align 4
  %v1_273b7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_273b7 = icmp eq i32 %v1_273b7, %v3_273b4
  br i1 %v3_273b7, label %bb, label %dec_label_pc_273c0

bb:                                               ; preds = %dec_label_pc_27376
  %v1_273be = call i32 @function_273c5()
  store i32 %v1_273be, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_273c0

dec_label_pc_273c0:                               ; preds = %bb, %dec_label_pc_27376
  %v5_273be = phi i32 [ %v1_273be, %bb ], [ %v4_273af, %dec_label_pc_27376 ]
  ret i32 %v5_273be

; uselistorder directives
  uselistorder i32 %v0_27394, { 1, 0, 2, 3 }
  uselistorder i8 %v4_2738b, { 0, 2, 1 }
  uselistorder i8 %v5_27385, { 1, 0, 2 }
  uselistorder i8 %v3_2737f, { 1, 0 }
}

define i32 @function_273c5() local_unnamed_addr {
dec_label_pc_273c5:
  %v0_273c6 = load i32, i32* @eax, align 4
  ret i32 %v0_273c6
}

define i32 @_ZN6CKeyIDD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_273c8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_273eb

bb:                                               ; preds = %dec_label_pc_273c8
  %v2_273e9 = call i32 @function_273f0(i32 %arg1)
  br label %dec_label_pc_273eb

dec_label_pc_273eb:                               ; preds = %bb, %dec_label_pc_273c8
  %v3_273e9 = phi i32 [ %v2_273e9, %bb ], [ 0, %dec_label_pc_273c8 ]
  ret i32 %v3_273e9
}

define i32 @function_273f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_273f0:
  %v0_273f1 = load i32, i32* @eax, align 4
  ret i32 %v0_273f1
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CKeyIDE7destroyEPS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_273f2:
  %v1_27415 = call i32 @unknown_4e7ba(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27426

bb:                                               ; preds = %dec_label_pc_273f2
  %v1_27424 = call i32 @function_2742b()
  br label %dec_label_pc_27426

dec_label_pc_27426:                               ; preds = %bb, %dec_label_pc_273f2
  %v2_27424 = phi i32 [ %v1_27424, %bb ], [ 0, %dec_label_pc_273f2 ]
  ret i32 %v2_27424
}

define i32 @function_2742a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2742a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2742b() local_unnamed_addr {
dec_label_pc_2742b:
  %v0_2742c = load i32, i32* @eax, align 4
  ret i32 %v0_2742c
}

define i32 @_ZSt8_DestroyIP6CKeyIDS0_EvT_S2_RSaIT0_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2742d:
  %v2_2745d = call i32 @unknown_53fa5(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2746e

bb:                                               ; preds = %dec_label_pc_2742d
  %v1_2746c = call i32 @function_27473()
  br label %dec_label_pc_2746e

dec_label_pc_2746e:                               ; preds = %bb, %dec_label_pc_2742d
  %v3_2746c = phi i32 [ %v1_2746c, %bb ], [ 0, %dec_label_pc_2742d ]
  ret i32 %v3_2746c
}

define i32 @function_27473() local_unnamed_addr {
dec_label_pc_27473:
  %v0_27474 = load i32, i32* @eax, align 4
  ret i32 %v0_27474
}

define i32 @_ZNSt12_Vector_baseI6CKeyIDSaIS0_EE13_M_deallocateEPS0_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27476:
  %v10_27499 = icmp eq i32 %arg2, 0
  br i1 %v10_27499, label %dec_label_pc_274b8, label %dec_label_pc_2749f

dec_label_pc_2749f:                               ; preds = %dec_label_pc_27476
  ret i32 %arg1

dec_label_pc_274b8:                               ; preds = %dec_label_pc_27476
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_274c4

bb:                                               ; preds = %dec_label_pc_274b8
  %v1_274c2 = call i32 @function_274c9()
  br label %dec_label_pc_274c4

dec_label_pc_274c4:                               ; preds = %bb, %dec_label_pc_274b8
  %v2_274c2 = phi i32 [ %v1_274c2, %bb ], [ 0, %dec_label_pc_274b8 ]
  ret i32 %v2_274c2
}

define i32 @function_274c9() local_unnamed_addr {
dec_label_pc_274c9:
  %v0_274ca = load i32, i32* @eax, align 4
  ret i32 %v0_274ca
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIP6CKeyIDSt6vectorIS1_SaIS1_EEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_274cc:
  %v0_274de = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_274ec = inttoptr i32 %arg2 to i32*
  %v2_274ec = load i32, i32* %v1_274ec, align 4
  store i32 %v2_274ec, i32* %arg1, align 4
  ret i32 %v0_274de
}

define i32 @function_27503() local_unnamed_addr {
dec_label_pc_27503:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27503 = load i32, i32* %ecx.global-to-local, align 4
  %v1_27503 = add i32 %v0_27503, -1
  store i32 %v1_27503, i32* %ecx.global-to-local, align 4
  %v0_27505 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27505
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEPS4_S4_ET0_T_SC_SB_RSaIT1_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_27506:
  ret i32 %arg1
}

define i32 @function_27510(i32 %arg1) local_unnamed_addr {
dec_label_pc_27510:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_27510 = load i32, i32* @ebp, align 4
  %v0_27514 = load i32, i32* @eax, align 4
  %v2_27514 = or i32 %v0_27514, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_27514, i32* %eax.global-to-local, align 4
  %v0_27517 = load i32, i32* @ecx, align 4
  %v1_27517 = add i32 %v0_27517, 255
  %v1_27519 = add i32 %v0_27510, 4
  store i32 %v1_27519, i32* %ebp.global-to-local, align 4
  %v1_2751a = add i32 %v0_27517, 1166793796
  %v2_2751a = inttoptr i32 %v1_2751a to i8*
  %v3_2751a = load i8, i8* %v2_2751a, align 1
  %v5_2751a = trunc i32 %v1_27517 to i8
  %v8_2751a = add i8 %v3_2751a, %v5_2751a
  %v28_2751a = icmp ult i8 %v8_2751a, %v3_2751a
  store i1 %v28_2751a, i1* %cf.global-to-local, align 1
  store i8 %v8_2751a, i8* %v2_2751a, align 1
  %v0_27520 = load i32, i32* %eax.global-to-local, align 4
  %v1_27520 = trunc i32 %v0_27520 to i8
  %v2_27520 = load i1, i1* %cf.global-to-local, align 1
  %v3_27520 = zext i1 %v2_27520 to i8
  %v4_27520 = add i8 %v1_27520, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_27520 = add i8 %v4_27520, %v3_27520
  %v20_27520 = add i8 %v1_27520, -119
  %v21_27520 = add i8 %v20_27520, %v3_27520
  %v22_27520 = icmp ule i8 %v21_27520, %v1_27520
  %v23_27520 = icmp ugt i8 %v1_27520, 118
  %v24_27520 = select i1 %v2_27520, i1 %v22_27520, i1 %v23_27520
  %v25_27520 = zext i8 %v5_27520 to i32
  %v27_27520 = and i32 %v0_27520, -256
  %v28_27520 = or i32 %v25_27520, %v27_27520
  store i32 %v28_27520, i32* %eax.global-to-local, align 4
  %v0_27522 = load i32, i32* %ebp.global-to-local, align 4
  %v1_27522 = add i32 %v0_27522, 1
  store i32 %v1_27522, i32* @ebp, align 4
  %v3_27526 = zext i1 %v24_27520 to i8
  %v4_27526 = add i8 %v3_27526, %v5_27520
  %v19_27526 = icmp ule i8 %v4_27526, %v5_27520
  %v21_27526 = icmp eq i1 %v24_27520, %v19_27526
  store i1 %v21_27526, i1* %cf.global-to-local, align 1
  %v22_27526 = zext i8 %v4_27526 to i32
  %v25_27526 = or i32 %v22_27526, %v27_27520
  store i32 %v25_27526, i32* %eax.global-to-local, align 4
  %v1_27528 = inttoptr i32 %v25_27526 to i8*
  %v2_27528 = load i8, i8* %v1_27528, align 1
  %v5_27528 = add i8 %v2_27528, %v4_27526
  store i8 %v5_27528, i8* %v1_27528, align 1
  %v0_2752a = load i32, i32* %eax.global-to-local, align 4
  %v1_2752a = load i32, i32* @ebp, align 4
  %v2_2752a = add i32 %v1_2752a, -12
  %v3_2752a = inttoptr i32 %v2_2752a to i32*
  store i32 %v0_2752a, i32* %v3_2752a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2752f = load i32, i32* @ebp, align 4
  %v1_2752f = add i32 %v0_2752f, -36
  %v2_2752f = inttoptr i32 %v1_2752f to i32*
  %v3_2752f = load i32, i32* %v2_2752f, align 4
  store i32 %v3_2752f, i32* %eax.global-to-local, align 4
  %v1_27536 = add i32 %v0_2752f, -32
  %v2_27536 = inttoptr i32 %v1_27536 to i32*
  %v3_27536 = load i32, i32* %v2_27536, align 4
  store i32 %v3_27536, i32* %eax.global-to-local, align 4
  %v1_2753d = add i32 %v0_2752f, -28
  %v2_2753d = inttoptr i32 %v1_2753d to i32*
  %v3_2753d = load i32, i32* %v2_2753d, align 4
  store i32 %v3_2753d, i32* %eax.global-to-local, align 4
  %v3_27543 = call i32 @unknown_54101(i32 %v3_2753d, i32 %v3_27536, i32 %v3_2752f)
  store i32 %v3_27543, i32* @eax, align 4
  %v0_27548 = load i32, i32* @ebp, align 4
  %v1_27548 = add i32 %v0_27548, -12
  %v2_27548 = inttoptr i32 %v1_27548 to i32*
  %v3_27548 = load i32, i32* %v2_27548, align 4
  %v1_2754b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2754b = icmp eq i32 %v1_2754b, %v3_27548
  br i1 %v3_2754b, label %bb, label %dec_label_pc_27554

bb:                                               ; preds = %dec_label_pc_27510
  %v1_27552 = call i32 @function_27559()
  store i32 %v1_27552, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_27554

dec_label_pc_27554:                               ; preds = %bb, %dec_label_pc_27510
  %v3_27552 = phi i32 [ %v1_27552, %bb ], [ %v3_27543, %dec_label_pc_27510 ]
  ret i32 %v3_27552

; uselistorder directives
  uselistorder i8 %v4_27526, { 0, 2, 1 }
  uselistorder i8 %v5_27520, { 1, 0, 2 }
  uselistorder i8 %v3_2751a, { 1, 0 }
}

define i32 @function_27559() local_unnamed_addr {
dec_label_pc_27559:
  %v0_2755a = load i32, i32* @eax, align 4
  ret i32 %v0_2755a
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEE10deallocateEPS3_j(i32 %arg1) local_unnamed_addr {
dec_label_pc_2755c:
  ret i32 %arg1
}

define i32 @function_2756a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2756a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2756a = load i32, i32* @eax, align 4
  %v2_2756a = or i32 %v0_2756a, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2756a, i32* %eax.global-to-local, align 4
  %v0_2756c = load i32, i32* @ebp, align 4
  %v0_2756d = load i32, i32* @ecx, align 4
  %v1_2756d = add i32 %v0_2756d, 255
  %v1_2756f = add i32 %v0_2756c, 2
  store i32 %v1_2756f, i32* @ebp, align 4
  %v1_27570 = add i32 %v0_2756d, -1587159996
  %v2_27570 = inttoptr i32 %v1_27570 to i8*
  %v3_27570 = load i8, i8* %v2_27570, align 1
  %v5_27570 = trunc i32 %v1_2756d to i8
  %v8_27570 = add i8 %v3_27570, %v5_27570
  %v28_27570 = icmp ult i8 %v8_27570, %v3_27570
  store i1 %v28_27570, i1* %cf.global-to-local, align 1
  store i8 %v8_27570, i8* %v2_27570, align 1
  %v0_27576 = load i32, i32* %eax.global-to-local, align 4
  %v1_27576 = trunc i32 %v0_27576 to i8
  %v2_27576 = load i1, i1* %cf.global-to-local, align 1
  %v3_27576 = zext i1 %v2_27576 to i8
  %v4_27576 = add i8 %v3_27576, %v1_27576
  %v19_27576 = icmp ule i8 %v4_27576, %v1_27576
  %v21_27576 = icmp eq i1 %v2_27576, %v19_27576
  store i1 %v21_27576, i1* %cf.global-to-local, align 1
  %v22_27576 = zext i8 %v4_27576 to i32
  %v24_27576 = and i32 %v0_27576, -256
  %v25_27576 = or i32 %v22_27576, %v24_27576
  store i32 %v25_27576, i32* %eax.global-to-local, align 4
  %v1_27578 = inttoptr i32 %v25_27576 to i8*
  %v2_27578 = load i8, i8* %v1_27578, align 1
  %v5_27578 = add i8 %v2_27578, %v4_27576
  store i8 %v5_27578, i8* %v1_27578, align 1
  %v0_2757a = load i32, i32* %eax.global-to-local, align 4
  %v1_2757a = load i32, i32* @ebp, align 4
  %v2_2757a = add i32 %v1_2757a, -12
  %v3_2757a = inttoptr i32 %v2_2757a to i32*
  store i32 %v0_2757a, i32* %v3_2757a, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2757f = load i32, i32* @ebp, align 4
  %v1_2757f = add i32 %v0_2757f, -32
  %v2_2757f = inttoptr i32 %v1_2757f to i32*
  %v3_2757f = load i32, i32* %v2_2757f, align 4
  store i32 %v3_2757f, i32* %eax.global-to-local, align 4
  ret i32 %v3_2757f

; uselistorder directives
  uselistorder i8 %v4_27576, { 0, 2, 1 }
  uselistorder i8 %v1_27576, { 1, 0 }
  uselistorder i8 %v3_27570, { 1, 0 }
}

define i32 @function_2759a() local_unnamed_addr {
dec_label_pc_2759a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2759a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2759a = add i32 %v0_2759a, -1
  store i32 %v1_2759a, i32* %ecx.global-to-local, align 4
  %v0_2759c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2759c
}

define i32 @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2759d:
  %v2_275c7 = call i32 @unknown_541e7(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_275de

bb:                                               ; preds = %dec_label_pc_2759d
  %v1_275dc = call i32 @function_275e3()
  br label %dec_label_pc_275de

dec_label_pc_275de:                               ; preds = %bb, %dec_label_pc_2759d
  %v2_275dc = phi i32 [ %v1_275dc, %bb ], [ %arg1, %dec_label_pc_2759d ]
  ret i32 %v2_275dc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_275e3() local_unnamed_addr {
dec_label_pc_275e3:
  %v0_275e4 = load i32, i32* @eax, align 4
  ret i32 %v0_275e4
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEENS1_IPS4_S8_EEET1_T0_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_275e7:
  %v1_27618 = call i32 @unknown_51f10(i32 %arg4)
  %v1_27625 = call i32 @unknown_5426e(i32 %arg3)
  %v1_27632 = call i32 @unknown_5426e(i32 %arg2)
  ret i32 %v1_27632

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5426e, { 1, 0 }
}

define i32 @function_27644(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27644:
  %v0_27645 = load i32, i32* @eax, align 4
  %v5_27645 = mul i32 %v0_27645, 2
  %v20_27645 = and i32 %v5_27645, 254
  %v22_27645 = and i32 %v0_27645, -256
  %v23_27645 = or i32 %v20_27645, %v22_27645
  %v1_27647 = load i32, i32* @ebp, align 4
  %v2_27647 = add i32 %v1_27647, -16
  %v3_27647 = inttoptr i32 %v2_27647 to i32*
  store i32 %v23_27645, i32* %v3_27647, align 4
  %v0_2764a = load i32, i32* @ebp, align 4
  %v1_2764a = add i32 %v0_2764a, -16
  %v1_27651 = add i32 %v0_2764a, -28
  %v2_27651 = inttoptr i32 %v1_27651 to i32*
  %v3_27651 = load i32, i32* %v2_27651, align 4
  %v2_27657 = call i32 @unknown_45577(i32 %v3_27651, i32 %v1_2764a)
  %v0_2765c = load i32, i32* @ebp, align 4
  %v1_2765c = add i32 %v0_2765c, -28
  %v2_2765c = inttoptr i32 %v1_2765c to i32*
  %v3_2765c = load i32, i32* %v2_2765c, align 4
  store i32 %v3_2765c, i32* @eax, align 4
  %v1_2765f = add i32 %v0_2765c, -12
  %v2_2765f = inttoptr i32 %v1_2765f to i32*
  %v3_2765f = load i32, i32* %v2_2765f, align 4
  %v1_27662 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_27662 = icmp eq i32 %v1_27662, %v3_2765f
  br i1 %v3_27662, label %bb, label %dec_label_pc_2766b

bb:                                               ; preds = %dec_label_pc_27644
  %v1_27669 = call i32 @function_27670()
  br label %dec_label_pc_2766b

dec_label_pc_2766b:                               ; preds = %bb, %dec_label_pc_27644
  %v2_27669 = phi i32 [ %v1_27669, %bb ], [ %v3_2765c, %dec_label_pc_27644 ]
  ret i32 %v2_27669

; uselistorder directives
  uselistorder i32 %v0_27645, { 1, 0 }
}

define i32 @function_27670() local_unnamed_addr {
dec_label_pc_27670:
  %v0_27676 = load i32, i32* @eax, align 4
  ret i32 %v0_27676
}

define i32 @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEEvT_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27679:
  ret i32 %arg2
}

define i32 @function_2768e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2768e:
  %v2_2768e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2768e = load i32, i32* @eax, align 4
  %v4_2768e = trunc i32 %v3_2768e to i8
  %v5_2768e = add i8 %v4_2768e, %v2_2768e
  %v21_2768e = inttoptr i32 %v3_2768e to i8*
  store i8 %v5_2768e, i8* %v21_2768e, align 1
  %v0_27690 = load i32, i32* @ecx, align 4
  %v1_27690 = add i32 %v0_27690, -1070468027
  %v2_27690 = inttoptr i32 %v1_27690 to i8*
  %v3_27690 = load i8, i8* %v2_27690, align 1
  %v5_27690 = trunc i32 %v0_27690 to i8
  %v6_27690 = add i8 %v3_27690, %v5_27690
  store i8 %v6_27690, i8* %v2_27690, align 1
  %v24_27690 = load i32, i32* @eax, align 4
  ret i32 %v24_27690
}

define i32 @function_27696(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27696:
  %v0_27696 = load i32, i32* @ebp, align 4
  %v1_27696 = add i32 %v0_27696, -32
  %v2_27696 = inttoptr i32 %v1_27696 to i32*
  %v3_27696 = load i32, i32* %v2_27696, align 4
  %v1_2769d = add i32 %v0_27696, -28
  %v2_2769d = inttoptr i32 %v1_2769d to i32*
  %v3_2769d = load i32, i32* %v2_2769d, align 4
  %v2_276a3 = call i32 @unknown_54388(i32 %v3_2769d, i32 %v3_27696)
  %v0_276a8 = load i32, i32* @ebp, align 4
  %v1_276a8 = add i32 %v0_276a8, -12
  %v2_276a8 = inttoptr i32 %v1_276a8 to i32*
  %v3_276a8 = load i32, i32* %v2_276a8, align 4
  %v1_276ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_276ab = xor i32 %v1_276ab, %v3_276a8
  %v3_276ab = icmp eq i32 %v2_276ab, 0
  store i32 %v2_276ab, i32* @eax, align 4
  br i1 %v3_276ab, label %bb, label %dec_label_pc_276b4

bb:                                               ; preds = %dec_label_pc_27696
  %v1_276b2 = call i32 @function_276b9()
  br label %dec_label_pc_276b4

dec_label_pc_276b4:                               ; preds = %bb, %dec_label_pc_27696
  %v2_276b2 = phi i32 [ %v1_276b2, %bb ], [ %v2_276ab, %dec_label_pc_27696 ]
  ret i32 %v2_276b2
}

define i32 @function_276b9() local_unnamed_addr {
dec_label_pc_276b9:
  %v0_276ba = load i32, i32* @eax, align 4
  ret i32 %v0_276ba
}

define i32 @_ZSt12__miter_baseIPSt6vectorIhSaIhEEENSt11_Miter_baseIT_E13iterator_typeES5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_276bb:
  %v1_276d8 = call i32 @unknown_54438(i32 %arg1)
  store i32 %v1_276d8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_276e9

bb:                                               ; preds = %dec_label_pc_276bb
  %v1_276e7 = call i32 @function_276ee()
  br label %dec_label_pc_276e9

dec_label_pc_276e9:                               ; preds = %bb, %dec_label_pc_276bb
  %v2_276e7 = phi i32 [ %v1_276e7, %bb ], [ %v1_276d8, %dec_label_pc_276bb ]
  ret i32 %v2_276e7
}

define i32 @function_276ee() local_unnamed_addr {
dec_label_pc_276ee:
  %v0_276ef = load i32, i32* @eax, align 4
  ret i32 %v0_276ef
}

define i32 @_ZSt14__copy_move_a2ILb0EPSt6vectorIhSaIhEES3_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_276f0:
  %v1_2771b = call i32 @unknown_5449a(i32 %arg3)
  ret i32 %v1_2771b
}

define i32 @function_27722(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27722:
  %v0_27722 = load i32, i32* @ebp, align 4
  %v1_27722 = add i32 %v0_27722, -32
  %v2_27722 = inttoptr i32 %v1_27722 to i32*
  %v3_27722 = load i32, i32* %v2_27722, align 4
  %v1_27728 = call i32 @unknown_5449a(i32 %v3_27722)
  store i32 %v1_27728, i32* @ebx, align 4
  %v0_2772f = load i32, i32* @ebp, align 4
  %v1_2772f = add i32 %v0_2772f, -28
  %v2_2772f = inttoptr i32 %v1_2772f to i32*
  %v3_2772f = load i32, i32* %v2_2772f, align 4
  %v1_27735 = call i32 @unknown_5449a(i32 %v3_2772f)
  %v0_2773a = load i32, i32* @esi, align 4
  %v0_2773e = load i32, i32* @ebx, align 4
  %v3_27745 = call i32 @unknown_5204e(i32 %v1_27735, i32 %v0_2773e, i32 %v0_2773a)
  store i32 %v3_27745, i32* @eax, align 4
  %v0_2774a = load i32, i32* @ebp, align 4
  %v1_2774a = add i32 %v0_2774a, -12
  %v2_2774a = inttoptr i32 %v1_2774a to i32*
  %v3_2774a = load i32, i32* %v2_2774a, align 4
  %v1_2774d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2774d = icmp eq i32 %v1_2774d, %v3_2774a
  br i1 %v3_2774d, label %bb, label %dec_label_pc_27756

bb:                                               ; preds = %dec_label_pc_27722
  %v1_27754 = call i32 @function_2775b()
  br label %dec_label_pc_27756

dec_label_pc_27756:                               ; preds = %bb, %dec_label_pc_27722
  %v2_27754 = phi i32 [ %v1_27754, %bb ], [ %v3_27745, %dec_label_pc_27722 ]
  ret i32 %v2_27754

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5449a, { 1, 0, 2 }
}

define i32 @function_2775b() local_unnamed_addr {
dec_label_pc_2775b:
  %v0_27761 = load i32, i32* @eax, align 4
  ret i32 %v0_27761
}

define i32 @_ZSt18uninitialized_copyIPSt6vectorIhSaIhEES3_ET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_27762:
  %v3_27799 = call i32 @unknown_54541(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_27799, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_277aa

bb:                                               ; preds = %dec_label_pc_27762
  %v1_277a8 = call i32 @function_277af()
  br label %dec_label_pc_277aa

dec_label_pc_277aa:                               ; preds = %bb, %dec_label_pc_27762
  %v2_277a8 = phi i32 [ %v1_277a8, %bb ], [ %v3_27799, %dec_label_pc_27762 ]
  ret i32 %v2_277a8
}

define i32 @function_277af() local_unnamed_addr {
dec_label_pc_277af:
  %v0_277b0 = load i32, i32* @eax, align 4
  ret i32 %v0_277b0
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_277b2:
  %v1_277cf = call i32 @unknown_54638(i32 %arg1)
  %v1_277d7 = add i32 %arg1, 4
  %v2_277d7 = inttoptr i32 %v1_277d7 to i32*
  store i32 0, i32* %v2_277d7, align 4
  %v1_277e1 = add i32 %arg1, 8
  %v2_277e1 = inttoptr i32 %v1_277e1 to i32*
  store i32 0, i32* %v2_277e1, align 4
  %v1_277eb = add i32 %arg1, 12
  %v2_277eb = inttoptr i32 %v1_277eb to i32*
  store i32 0, i32* %v2_277eb, align 4
  %v1_277f5 = add i32 %arg1, 16
  %v2_277f5 = inttoptr i32 %v1_277f5 to i32*
  store i32 0, i32* %v2_277f5, align 4
  %v1_277ff = add i32 %arg1, 20
  %v2_277ff = inttoptr i32 %v1_277ff to i32*
  store i32 0, i32* %v2_277ff, align 4
  %v1_2780c = call i32 @unknown_5466e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2781d

bb:                                               ; preds = %dec_label_pc_277b2
  %v1_2781b = call i32 @function_27822()
  br label %dec_label_pc_2781d

dec_label_pc_2781d:                               ; preds = %bb, %dec_label_pc_277b2
  %v2_2781b = phi i32 [ %v1_2781b, %bb ], [ 0, %dec_label_pc_277b2 ]
  ret i32 %v2_2781b

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_27822() local_unnamed_addr {
dec_label_pc_27822:
  %v0_27823 = load i32, i32* @eax, align 4
  ret i32 %v0_27823
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIhSaIhEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27824:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27847

bb:                                               ; preds = %dec_label_pc_27824
  %v2_27845 = call i32 @function_2784c(i32 %arg1)
  br label %dec_label_pc_27847

dec_label_pc_27847:                               ; preds = %bb, %dec_label_pc_27824
  %v3_27845 = phi i32 [ %v2_27845, %bb ], [ 0, %dec_label_pc_27824 ]
  ret i32 %v3_27845
}

define i32 @function_2784c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2784c:
  %v0_2784d = load i32, i32* @eax, align 4
  ret i32 %v0_2784d
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2784e:
  %v1_27868 = add i32 %arg1, 12
  %v2_27868 = inttoptr i32 %v1_27868 to i32*
  %v3_27868 = load i32, i32* %v2_27868, align 4
  store i32 %v3_27868, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27877

bb:                                               ; preds = %dec_label_pc_2784e
  %v2_27875 = call i32 @function_2787c(i32 %arg1)
  br label %dec_label_pc_27877

dec_label_pc_27877:                               ; preds = %bb, %dec_label_pc_2784e
  %v3_27875 = phi i32 [ %v2_27875, %bb ], [ %v3_27868, %dec_label_pc_2784e ]
  ret i32 %v3_27875
}

define i32 @function_2787c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2787c:
  %v0_2787d = load i32, i32* @eax, align 4
  ret i32 %v0_2787d
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2787e:
  ret i32 0
}

define i32 @function_27896(i32 %arg1) local_unnamed_addr {
dec_label_pc_27896:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_27896 = load i32, i32* @ebp, align 4
  %v1_27896 = add i32 %v0_27896, 1
  store i32 %v1_27896, i32* @ebp, align 4
  %v0_27899 = load i32, i32* @eax, align 4
  %v1_27899 = add i32 %v0_27899, 1
  store i32 %v1_27899, i32* %eax.global-to-local, align 4
  %v0_2789a = load i32, i32* @ebx, align 4
  %v1_2789a = add i32 %v0_2789a, 862319701
  %v2_2789a = inttoptr i32 %v1_2789a to i8*
  %v3_2789a = load i8, i8* %v2_2789a, align 1
  %v4_2789a = load i32, i32* @ecx, align 4
  %v5_2789a = trunc i32 %v4_2789a to i8
  %v6_2789a = or i8 %v5_2789a, %v3_2789a
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2789a, i8* %v2_2789a, align 1
  %v0_278a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_278a0 = load i1, i1* %cf.global-to-local, align 1
  %v2_278a0 = zext i1 %v1_278a0 to i32
  %v3_278a0 = add i32 %v0_278a0, 20
  %v4_278a0 = add i32 %v3_278a0, %v2_278a0
  %v14_278a0 = icmp eq i32 %v4_278a0, 0
  %v22_278a0 = icmp ule i32 %v4_278a0, %v0_278a0
  %v23_278a0 = icmp ugt i32 %v0_278a0, -21
  %v24_278a0 = select i1 %v1_278a0, i1 %v22_278a0, i1 %v23_278a0
  store i1 %v24_278a0, i1* %cf.global-to-local, align 1
  store i32 %v4_278a0, i32* @eax, align 4
  br i1 %v14_278a0, label %bb, label %dec_label_pc_278a7

bb:                                               ; preds = %dec_label_pc_27896
  %v1_278a5 = call i32 @function_278ac()
  store i32 %v1_278a5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_278a7

dec_label_pc_278a7:                               ; preds = %bb, %dec_label_pc_27896
  %v2_278a5 = phi i32 [ %v1_278a5, %bb ], [ %v4_278a0, %dec_label_pc_27896 ]
  ret i32 %v2_278a5

; uselistorder directives
  uselistorder i32 %v4_278a0, { 0, 2, 1, 3 }
}

define i32 @function_278ac() local_unnamed_addr {
dec_label_pc_278ac:
  %v0_278ad = load i32, i32* @eax, align 4
  ret i32 %v0_278ad
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_278ae:
  %stack_var_-17 = alloca i32, align 4
  %v1_278cf = add i32 %arg2, 16
  %v1_278d5 = call i32 @unknown_5480f(i32 %v1_278cf)
  %v2_278dc = ptrtoint i32* %stack_var_-17 to i32
  %v2_278e9 = call i32 @unknown_547c0(i32 %v2_278dc, i32 %arg1)
  %v2_278fb = call i32 @unknown_44e92(i32 %v2_278dc, i32 %v1_278d5)
  ret i32 %v2_278dc
}

define i32 @function_27904(i32 %arg1) local_unnamed_addr {
dec_label_pc_27904:
  %v0_27906 = call i32 @unknown_40f1e()
  %v0_2790b = load i32, i32* @ebp, align 4
  %v1_2790b = add i32 %v0_2790b, -32
  %v2_2790b = inttoptr i32 %v1_2790b to i32*
  %v3_2790b = load i32, i32* %v2_2790b, align 4
  %v1_27912 = add i32 %v0_2790b, -28
  %v2_27912 = inttoptr i32 %v1_27912 to i32*
  %v3_27912 = load i32, i32* %v2_27912, align 4
  %v2_27918 = call i32 @unknown_5483c(i32 %v3_27912, i32 %v3_2790b)
  %v0_2791d = load i32, i32* @ebp, align 4
  %v1_2791d = add i32 %v0_2791d, -12
  %v2_2791d = inttoptr i32 %v1_2791d to i32*
  %v3_2791d = load i32, i32* %v2_2791d, align 4
  %v1_27920 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27920 = xor i32 %v1_27920, %v3_2791d
  %v3_27920 = icmp eq i32 %v2_27920, 0
  store i32 %v2_27920, i32* @eax, align 4
  br i1 %v3_27920, label %bb, label %dec_label_pc_27929

bb:                                               ; preds = %dec_label_pc_27904
  %v1_27927 = call i32 @function_27947()
  store i32 %v1_27927, i32* @eax, align 4
  br label %dec_label_pc_27929

dec_label_pc_27929:                               ; preds = %bb, %dec_label_pc_27904
  %v0_27929 = call i32 @function_27942()
  ret i32 %v0_27929
}

define i32 @function_2792c() local_unnamed_addr {
dec_label_pc_2792c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2792c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2792c
}

define i32 @function_27942() local_unnamed_addr {
dec_label_pc_27942:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27947() local_unnamed_addr {
dec_label_pc_27947:
  %v0_2794b = load i32, i32* @eax, align 4
  ret i32 %v0_2794b
}

define i32 @_ZN5boost6detail13addr_impl_refISt6vectorIS2_IhSaIhEESaIS4_EEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2794c:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %tmp101
}

define i32 @function_27972(i32 %arg1) local_unnamed_addr {
dec_label_pc_27972:
  %v0_27972 = load i32, i32* @ebp, align 4
  %v1_27972 = add i32 %v0_27972, 1
  store i32 %v1_27972, i32* @ebp, align 4
  %v0_27974 = load i32, i32* @eax, align 4
  %v1_27974 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27974 = xor i32 %v1_27974, %v0_27974
  %v3_27974 = icmp eq i32 %v2_27974, 0
  store i32 %v2_27974, i32* @eax, align 4
  br i1 %v3_27974, label %bb, label %dec_label_pc_2797d

bb:                                               ; preds = %dec_label_pc_27972
  %v1_2797b = call i32 @function_27982()
  br label %dec_label_pc_2797d

dec_label_pc_2797d:                               ; preds = %bb, %dec_label_pc_27972
  %v2_2797b = phi i32 [ %v1_2797b, %bb ], [ %v2_27974, %dec_label_pc_27972 ]
  ret i32 %v2_2797b
}

define i32 @function_27982() local_unnamed_addr {
dec_label_pc_27982:
  %v0_27983 = load i32, i32* @eax, align 4
  ret i32 %v0_27983
}

define i32 @_ZNK5boost6detail13addr_impl_refISt6vectorIS2_IhSaIhEESaIS4_EEEcvRS6_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_27984:
  %v2_2799e = load i32, i32* %arg1, align 4
  store i32 %v2_2799e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_279ac

bb:                                               ; preds = %dec_label_pc_27984
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_279aa = call i32 @function_279b1(i32 %tmp100)
  br label %dec_label_pc_279ac

dec_label_pc_279ac:                               ; preds = %bb, %dec_label_pc_27984
  %v3_279aa = phi i32 [ %v2_279aa, %bb ], [ %v2_2799e, %dec_label_pc_27984 ]
  ret i32 %v3_279aa

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_279b1(i32 %arg1) local_unnamed_addr {
dec_label_pc_279b1:
  %v0_279b2 = load i32, i32* @eax, align 4
  ret i32 %v0_279b2
}

define i32 @_ZN5boost6detail14addressof_implISt6vectorIS2_IhSaIhEESaIS4_EEE1fERS6_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_279b3:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_279df

bb:                                               ; preds = %dec_label_pc_279b3
  %v3_279dd = call i32 @function_279e4(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_279df

dec_label_pc_279df:                               ; preds = %bb, %dec_label_pc_279b3
  %v4_279dd = phi i32 [ %v3_279dd, %bb ], [ %arg1, %dec_label_pc_279b3 ]
  ret i32 %v4_279dd
}

define i32 @function_279e4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_279e4:
  %v0_279e5 = load i32, i32* @eax, align 4
  ret i32 %v0_279e5
}

define i32 @_ZN5boost12range_detail11range_beginISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_279e6:
  %v2_27a10 = call i32 @unknown_40f70(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27a27

bb:                                               ; preds = %dec_label_pc_279e6
  %v1_27a25 = call i32 @function_27a2c()
  br label %dec_label_pc_27a27

dec_label_pc_27a27:                               ; preds = %bb, %dec_label_pc_279e6
  %v2_27a25 = phi i32 [ %v1_27a25, %bb ], [ %arg1, %dec_label_pc_279e6 ]
  ret i32 %v2_27a25

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_27a2c() local_unnamed_addr {
dec_label_pc_27a2c:
  %v0_27a2d = load i32, i32* @eax, align 4
  ret i32 %v0_27a2d
}

define i32 @_ZN5boost12range_detail9range_endISt6vectorIS2_IhSaIhEESaIS4_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27a30:
  %v2_27a5a = call i32 @unknown_3f93e(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27a71

bb:                                               ; preds = %dec_label_pc_27a30
  %v1_27a6f = call i32 @function_27a76()
  br label %dec_label_pc_27a71

dec_label_pc_27a71:                               ; preds = %bb, %dec_label_pc_27a30
  %v2_27a6f = phi i32 [ %v1_27a6f, %bb ], [ %arg1, %dec_label_pc_27a30 ]
  ret i32 %v2_27a6f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_27a76() local_unnamed_addr {
dec_label_pc_27a76:
  %v0_27a77 = load i32, i32* @eax, align 4
  ret i32 %v0_27a77
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_27a7a:
  %v1_27a94 = add i32 %arg1, 4
  store i32 %v1_27a94, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27aa3

bb:                                               ; preds = %dec_label_pc_27a7a
  %v2_27aa1 = call i32 @function_27aa8(i32 %arg1)
  br label %dec_label_pc_27aa3

dec_label_pc_27aa3:                               ; preds = %bb, %dec_label_pc_27a7a
  %v3_27aa1 = phi i32 [ %v2_27aa1, %bb ], [ %v1_27a94, %dec_label_pc_27a7a ]
  ret i32 %v3_27aa1
}

define i32 @function_27aa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_27aa8:
  %v0_27aa9 = load i32, i32* @eax, align 4
  ret i32 %v0_27aa9
}

define i32 @_ZNKSt9_IdentityISt6vectorIhSaIhEEEclERKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27aaa:
  store i32 %arg2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27ad6

bb:                                               ; preds = %dec_label_pc_27aaa
  %v3_27ad4 = call i32 @function_27adb(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_27ad6

dec_label_pc_27ad6:                               ; preds = %bb, %dec_label_pc_27aaa
  %v4_27ad4 = phi i32 [ %v3_27ad4, %bb ], [ %arg2, %dec_label_pc_27aaa ]
  ret i32 %v4_27ad4
}

define i32 @function_27adb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27adb:
  %v0_27adc = load i32, i32* @eax, align 4
  ret i32 %v0_27adc
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_27add:
  %stack_var_-17 = alloca i32, align 4
  %v1_27afa = call i32 @unknown_54ab5(i32 %arg1)
  %v2_27b03 = ptrtoint i32* %stack_var_-17 to i32
  %v2_27b09 = call i32 @unknown_4f587(i32 %v2_27b03, i32 %v1_27afa)
  store i32 %v2_27b09, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27b1a

bb:                                               ; preds = %dec_label_pc_27add
  %v1_27b18 = call i32 @function_27b1f()
  br label %dec_label_pc_27b1a

dec_label_pc_27b1a:                               ; preds = %bb, %dec_label_pc_27add
  %v2_27b18 = phi i32 [ %v1_27b18, %bb ], [ %v2_27b09, %dec_label_pc_27add ]
  ret i32 %v2_27b18
}

define i32 @function_27b1f() local_unnamed_addr {
dec_label_pc_27b1f:
  %v0_27b20 = load i32, i32* @eax, align 4
  ret i32 %v0_27b20
}

define i32 @_ZNSt17_Rb_tree_iteratorISt6vectorIhSaIhEEEC1EPSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b22:
  ret i32 %arg1
}

define i32 @function_27b2e(i32 %arg1) local_unnamed_addr {
dec_label_pc_27b2e:
  %v0_27b2e = load i32, i32* @ebp, align 4
  %v1_27b2e = add i32 %v0_27b2e, 12
  %v2_27b2e = inttoptr i32 %v1_27b2e to i32*
  %v3_27b2e = load i32, i32* %v2_27b2e, align 4
  %v2_27b31 = add i32 %v0_27b2e, -32
  %v3_27b31 = inttoptr i32 %v2_27b31 to i32*
  store i32 %v3_27b2e, i32* %v3_27b31, align 4
  %v0_27b34 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27b3a = load i32, i32* @ebp, align 4
  %v2_27b3a = add i32 %v1_27b3a, -12
  %v3_27b3a = inttoptr i32 %v2_27b3a to i32*
  store i32 %v0_27b34, i32* %v3_27b3a, align 4
  %v0_27b3f = load i32, i32* @ebp, align 4
  %v1_27b3f = add i32 %v0_27b3f, -28
  %v2_27b3f = inttoptr i32 %v1_27b3f to i32*
  %v3_27b3f = load i32, i32* %v2_27b3f, align 4
  %v1_27b42 = add i32 %v0_27b3f, -32
  %v2_27b42 = inttoptr i32 %v1_27b42 to i32*
  %v3_27b42 = load i32, i32* %v2_27b42, align 4
  %v2_27b45 = inttoptr i32 %v3_27b3f to i32*
  store i32 %v3_27b42, i32* %v2_27b45, align 4
  %v0_27b47 = load i32, i32* @ebp, align 4
  %v1_27b47 = add i32 %v0_27b47, -12
  %v2_27b47 = inttoptr i32 %v1_27b47 to i32*
  %v3_27b47 = load i32, i32* %v2_27b47, align 4
  %v1_27b4a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27b4a = xor i32 %v1_27b4a, %v3_27b47
  %v3_27b4a = icmp eq i32 %v2_27b4a, 0
  store i32 %v2_27b4a, i32* @eax, align 4
  br i1 %v3_27b4a, label %bb, label %dec_label_pc_27b53

bb:                                               ; preds = %dec_label_pc_27b2e
  %v1_27b51 = call i32 @function_27b58()
  br label %dec_label_pc_27b53

dec_label_pc_27b53:                               ; preds = %bb, %dec_label_pc_27b2e
  %v2_27b51 = phi i32 [ %v1_27b51, %bb ], [ %v2_27b4a, %dec_label_pc_27b2e ]
  ret i32 %v2_27b51
}

define i32 @function_27b58() local_unnamed_addr {
dec_label_pc_27b58:
  %v0_27b59 = load i32, i32* @eax, align 4
  ret i32 %v0_27b59
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27b5a:
  %v1_27b7a = add i32 %arg2, 12
  %v2_27b7a = inttoptr i32 %v1_27b7a to i32*
  %v3_27b7a = load i32, i32* %v2_27b7a, align 4
  %v2_27b87 = call i32 @unknown_4f67c(i32 %arg1, i32 %v3_27b7a)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27b9b

bb:                                               ; preds = %dec_label_pc_27b5a
  %v1_27b99 = call i32 @function_27ba0()
  br label %dec_label_pc_27b9b

dec_label_pc_27b9b:                               ; preds = %bb, %dec_label_pc_27b5a
  %v2_27b99 = phi i32 [ %v1_27b99, %bb ], [ %arg1, %dec_label_pc_27b5a ]
  ret i32 %v2_27b99

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_27ba0() local_unnamed_addr {
dec_label_pc_27ba0:
  %v0_27ba1 = load i32, i32* @eax, align 4
  ret i32 %v0_27ba1
}

define i32 @_ZNKSt17_Rb_tree_iteratorISt6vectorIhSaIhEEEeqERKS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_27ba4:
  ret i32 %arg1
}

define i32 @function_27bb0() local_unnamed_addr {
dec_label_pc_27bb0:
  %v0_27bb0 = load i32, i32* @ebp, align 4
  %v1_27bb0 = add i32 %v0_27bb0, 12
  %v2_27bb0 = inttoptr i32 %v1_27bb0 to i32*
  %v3_27bb0 = load i32, i32* %v2_27bb0, align 4
  %v2_27bb3 = add i32 %v0_27bb0, -32
  %v3_27bb3 = inttoptr i32 %v2_27bb3 to i32*
  store i32 %v3_27bb0, i32* %v3_27bb3, align 4
  %v0_27bb6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27bbc = load i32, i32* @ebp, align 4
  %v2_27bbc = add i32 %v1_27bbc, -12
  %v3_27bbc = inttoptr i32 %v2_27bbc to i32*
  store i32 %v0_27bb6, i32* %v3_27bbc, align 4
  %v0_27bc1 = load i32, i32* @ebp, align 4
  %v1_27bc1 = add i32 %v0_27bc1, -28
  %v2_27bc1 = inttoptr i32 %v1_27bc1 to i32*
  %v3_27bc1 = load i32, i32* %v2_27bc1, align 4
  %v1_27bc4 = inttoptr i32 %v3_27bc1 to i32*
  %v2_27bc4 = load i32, i32* %v1_27bc4, align 4
  %v1_27bc6 = add i32 %v0_27bc1, -32
  %v2_27bc6 = inttoptr i32 %v1_27bc6 to i32*
  %v3_27bc6 = load i32, i32* %v2_27bc6, align 4
  %v1_27bc9 = inttoptr i32 %v3_27bc6 to i32*
  %v2_27bc9 = load i32, i32* %v1_27bc9, align 4
  %v12_27bcb = icmp eq i32 %v2_27bc4, %v2_27bc9
  %v1_27bcd = zext i1 %v12_27bcb to i32
  %v3_27bcd = and i32 %v2_27bc9, -256
  %v4_27bcd = or i32 %v1_27bcd, %v3_27bcd
  ret i32 %v4_27bcd

; uselistorder directives
  uselistorder i32 %v2_27bc9, { 1, 0 }
}

define i32 @function_27be0() local_unnamed_addr {
dec_label_pc_27be0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27be0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_27be0 = add i32 %v0_27be0, -1
  store i32 %v1_27be0, i32* %ecx.global-to-local, align 4
  %v0_27be2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27be2
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_27be4:
  ret i32 0
}

define i32 @function_27c14(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c14:
  %v0_27c14 = load i32, i32* @ebp, align 4
  %v1_27c14 = add i32 %v0_27c14, -36
  %v2_27c14 = inttoptr i32 %v1_27c14 to i32*
  %v3_27c14 = load i32, i32* %v2_27c14, align 4
  %v10_27c14 = icmp eq i32 %v3_27c14, 0
  %v1_27c18 = icmp eq i1 %v10_27c14, false
  br i1 %v1_27c18, label %bb, label %dec_label_pc_27c1a

bb:                                               ; preds = %dec_label_pc_27c14
  %v2_27c18 = call i32 @function_27c60()
  %v0_27c1a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27c1a

dec_label_pc_27c1a:                               ; preds = %bb, %dec_label_pc_27c14
  %v0_27c1a = phi i32 [ %v0_27c1a.pre, %bb ], [ %v0_27c14, %dec_label_pc_27c14 ]
  %v1_27c1a = add i32 %v0_27c1a, -32
  %v2_27c1a = inttoptr i32 %v1_27c1a to i32*
  %v3_27c1a = load i32, i32* %v2_27c1a, align 4
  %v1_27c20 = call i32 @unknown_4f65e(i32 %v3_27c1a)
  %v1_27c25 = load i32, i32* @ebp, align 4
  %v2_27c25 = add i32 %v1_27c25, -40
  %v3_27c25 = inttoptr i32 %v2_27c25 to i32*
  %v4_27c25 = load i32, i32* %v3_27c25, align 4
  %v15_27c25 = icmp eq i32 %v1_27c20, %v4_27c25
  br i1 %v15_27c25, label %bb4, label %dec_label_pc_27c2a

bb4:                                              ; preds = %dec_label_pc_27c1a
  %v1_27c28 = call i32 @function_27c60()
  %v0_27c2a.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_27c2a

dec_label_pc_27c2a:                               ; preds = %bb4, %dec_label_pc_27c1a
  %v0_27c2a = phi i32 [ %v0_27c2a.pre, %bb4 ], [ %v1_27c25, %dec_label_pc_27c1a ]
  %v1_27c2a = add i32 %v0_27c2a, -40
  %v2_27c2a = inttoptr i32 %v1_27c2a to i32*
  %v3_27c2a = load i32, i32* %v2_27c2a, align 4
  %v1_27c30 = call i32 @unknown_4f955(i32 %v3_27c2a)
  %v0_27c37 = load i32, i32* @ebp, align 4
  %v1_27c37 = add i32 %v0_27c37, -44
  %v2_27c37 = inttoptr i32 %v1_27c37 to i32*
  %v3_27c37 = load i32, i32* %v2_27c37, align 4
  %v1_27c3e = add i32 %v0_27c37, -14
  %v2_27c44 = call i32 @unknown_4f68e(i32 %v1_27c3e, i32 %v3_27c37)
  ret i32 %v2_27c44

; uselistorder directives
  uselistorder i32 ()* @function_27c60, { 1, 0 }
}

define i32 @function_27c3c() local_unnamed_addr {
dec_label_pc_27c3c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27c4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c4a:
  %v0_27c4b = load i32, i32* @ecx, align 4
  %v1_27c4b = add i32 %v0_27c4b, -1
  store i32 %v1_27c4b, i32* @ecx, align 4
  %v0_27c4e = load i32, i32* @eax, align 4
  %v11_27c4e = and i32 %v0_27c4e, -248
  %v0_27c54 = load i32, i32* @edx, align 4
  %v2_27c57 = call i32 @unknown_49184(i32 %v0_27c54, i32 %v11_27c4e)
  ret i32 %v2_27c57
}

define i32 @function_27c60() local_unnamed_addr {
dec_label_pc_27c60:
  store i32 1, i32* @eax, align 4
  %v0_27c65 = call i32 @function_27c6c()
  ret i32 %v0_27c65
}

define i32 @function_27c67() local_unnamed_addr {
dec_label_pc_27c67:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_27c6c() local_unnamed_addr {
dec_label_pc_27c6c:
  %v0_27c6c = load i32, i32* @eax, align 4
  %v1_27c6c = trunc i32 %v0_27c6c to i8
  %v2_27c6c = load i32, i32* @ebp, align 4
  %v3_27c6c = add i32 %v2_27c6c, -13
  %v4_27c6c = inttoptr i32 %v3_27c6c to i8*
  store i8 %v1_27c6c, i8* %v4_27c6c, align 1
  %v0_27c6f = load i32, i32* @ebp, align 4
  %v1_27c6f = add i32 %v0_27c6f, -44
  %v2_27c6f = inttoptr i32 %v1_27c6f to i32*
  %v3_27c6f = load i32, i32* %v2_27c6f, align 4
  %v1_27c76 = add i32 %v0_27c6f, -32
  %v2_27c76 = inttoptr i32 %v1_27c76 to i32*
  %v3_27c76 = load i32, i32* %v2_27c76, align 4
  %v2_27c7c = call i32 @unknown_54bec(i32 %v3_27c76, i32 %v3_27c6f)
  %v1_27c81 = load i32, i32* @ebp, align 4
  %v2_27c81 = add i32 %v1_27c81, -20
  %v3_27c81 = inttoptr i32 %v2_27c81 to i32*
  store i32 %v2_27c7c, i32* %v3_27c81, align 4
  %v0_27c84 = load i32, i32* @ebp, align 4
  %v1_27c8a = add i32 %v0_27c84, -13
  %v2_27c8a = inttoptr i32 %v1_27c8a to i8*
  %v3_27c8a = load i8, i8* %v2_27c8a, align 1
  %v4_27c8a = zext i8 %v3_27c8a to i32
  ret i32 %v4_27c8a
}

define i32 @function_27c8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_27c8c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27cc2(i32 %arg1) local_unnamed_addr {
dec_label_pc_27cc2:
  %v0_27cc4 = call i32 @unknown_4f706()
  %v0_27cc9 = load i32, i32* @ebp, align 4
  %v1_27cc9 = add i32 %v0_27cc9, -28
  %v2_27cc9 = inttoptr i32 %v1_27cc9 to i32*
  %v3_27cc9 = load i32, i32* %v2_27cc9, align 4
  ret i32 %v3_27cc9
}

define i32 @function_27cd2(i32 %arg1) local_unnamed_addr {
dec_label_pc_27cd2:
  %zf.global-to-local = alloca i1, align 1
  %v0_27cd2 = load i32, i32* @eax, align 4
  %v1_27cd2 = trunc i32 %v0_27cd2 to i8
  %v2_27cd2 = load i1, i1* @cf, align 1
  %v3_27cd2 = zext i1 %v2_27cd2 to i8
  %v4_27cd2 = add i8 %v3_27cd2, %v1_27cd2
  %v13_27cd2 = icmp eq i8 %v4_27cd2, 0
  store i1 %v13_27cd2, i1* %zf.global-to-local, align 1
  %v22_27cd2 = zext i8 %v4_27cd2 to i32
  %v24_27cd2 = and i32 %v0_27cd2, -256
  %v25_27cd2 = or i32 %v22_27cd2, %v24_27cd2
  store i32 %v25_27cd2, i32* @eax, align 4
  %v1_27cd4 = inttoptr i32 %v25_27cd2 to i8*
  %v2_27cd4 = load i8, i8* %v1_27cd4, align 1
  %v5_27cd4 = add i8 %v2_27cd4, %v4_27cd2
  %v15_27cd4 = icmp eq i8 %v5_27cd4, 0
  store i1 %v15_27cd4, i1* %zf.global-to-local, align 1
  store i8 %v5_27cd4, i8* %v1_27cd4, align 1
  %v0_27cd6 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_27cd6, label %bb, label %dec_label_pc_27cd2.dec_label_pc_27cd8_crit_edge

dec_label_pc_27cd2.dec_label_pc_27cd8_crit_edge:  ; preds = %dec_label_pc_27cd2
  %v2_27cd6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27cd8

bb:                                               ; preds = %dec_label_pc_27cd2
  %v1_27cd6 = call i32 @function_27cdd()
  br label %dec_label_pc_27cd8

dec_label_pc_27cd8:                               ; preds = %dec_label_pc_27cd2.dec_label_pc_27cd8_crit_edge, %bb
  %v2_27cd6 = phi i32 [ %v2_27cd6.pre, %dec_label_pc_27cd2.dec_label_pc_27cd8_crit_edge ], [ %v1_27cd6, %bb ]
  ret i32 %v2_27cd6

; uselistorder directives
  uselistorder label %dec_label_pc_27cd8, { 1, 0 }
}

define i32 @function_27cdd() local_unnamed_addr {
dec_label_pc_27cdd:
  %v0_27ce2 = load i32, i32* @eax, align 4
  ret i32 %v0_27ce2
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorISt6vectorIhSaIhEEEbEC1ERKS4_RKb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27ce6:
  ret i32 %arg2
}

define i32 @function_27cf8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_27cf8:
  %v0_27cf8 = load i32, i32* @ebp, align 4
  %v1_27cf8 = add i32 %v0_27cf8, 16
  %v2_27cf8 = inttoptr i32 %v1_27cf8 to i32*
  %v3_27cf8 = load i32, i32* %v2_27cf8, align 4
  %v2_27cfb = add i32 %v0_27cf8, -36
  %v3_27cfb = inttoptr i32 %v2_27cfb to i32*
  store i32 %v3_27cf8, i32* %v3_27cfb, align 4
  %v0_27cfe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27d04 = load i32, i32* @ebp, align 4
  %v2_27d04 = add i32 %v1_27d04, -12
  %v3_27d04 = inttoptr i32 %v2_27d04 to i32*
  store i32 %v0_27cfe, i32* %v3_27d04, align 4
  %v0_27d09 = load i32, i32* @ebp, align 4
  %v1_27d09 = add i32 %v0_27d09, -28
  %v2_27d09 = inttoptr i32 %v1_27d09 to i32*
  %v3_27d09 = load i32, i32* %v2_27d09, align 4
  %v1_27d0c = add i32 %v0_27d09, -32
  %v2_27d0c = inttoptr i32 %v1_27d0c to i32*
  %v3_27d0c = load i32, i32* %v2_27d0c, align 4
  %v1_27d0f = inttoptr i32 %v3_27d0c to i32*
  %v2_27d0f = load i32, i32* %v1_27d0f, align 4
  %v2_27d11 = inttoptr i32 %v3_27d09 to i32*
  store i32 %v2_27d0f, i32* %v2_27d11, align 4
  %v0_27d13 = load i32, i32* @ebp, align 4
  %v1_27d13 = add i32 %v0_27d13, -36
  %v2_27d13 = inttoptr i32 %v1_27d13 to i32*
  %v3_27d13 = load i32, i32* %v2_27d13, align 4
  %v1_27d16 = inttoptr i32 %v3_27d13 to i8*
  %v2_27d16 = load i8, i8* %v1_27d16, align 1
  %v1_27d19 = add i32 %v0_27d13, -28
  %v2_27d19 = inttoptr i32 %v1_27d19 to i32*
  %v3_27d19 = load i32, i32* %v2_27d19, align 4
  %v3_27d1c = add i32 %v3_27d19, 4
  %v4_27d1c = inttoptr i32 %v3_27d1c to i8*
  store i8 %v2_27d16, i8* %v4_27d1c, align 1
  %v0_27d1f = load i32, i32* @ebp, align 4
  %v1_27d1f = add i32 %v0_27d1f, -12
  %v2_27d1f = inttoptr i32 %v1_27d1f to i32*
  %v3_27d1f = load i32, i32* %v2_27d1f, align 4
  %v1_27d22 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27d22 = xor i32 %v1_27d22, %v3_27d1f
  %v3_27d22 = icmp eq i32 %v2_27d22, 0
  store i32 %v2_27d22, i32* @eax, align 4
  br i1 %v3_27d22, label %bb, label %dec_label_pc_27d2b

bb:                                               ; preds = %dec_label_pc_27cf8
  %v1_27d29 = call i32 @function_27d30()
  br label %dec_label_pc_27d2b

dec_label_pc_27d2b:                               ; preds = %bb, %dec_label_pc_27cf8
  %v2_27d29 = phi i32 [ %v1_27d29, %bb ], [ %v2_27d22, %dec_label_pc_27cf8 ]
  ret i32 %v2_27d29
}

define i32 @function_27d30() local_unnamed_addr {
dec_label_pc_27d30:
  %v0_27d31 = load i32, i32* @eax, align 4
  ret i32 %v0_27d31
}

define i32 @_ZNSt17_Rb_tree_iteratorISt6vectorIhSaIhEEEmmEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d32:
  ret i32 %arg1
}

define i32 @function_27d3e(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d3e:
  %v0_27d3e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_27d44 = load i32, i32* @ebp, align 4
  %v2_27d44 = add i32 %v1_27d44, -12
  %v3_27d44 = inttoptr i32 %v2_27d44 to i32*
  store i32 %v0_27d3e, i32* %v3_27d44, align 4
  %v0_27d49 = load i32, i32* @ebp, align 4
  %v1_27d49 = add i32 %v0_27d49, -28
  %v2_27d49 = inttoptr i32 %v1_27d49 to i32*
  %v3_27d49 = load i32, i32* %v2_27d49, align 4
  %v1_27d4c = inttoptr i32 %v3_27d49 to i32*
  %v2_27d4c = load i32, i32* %v1_27d4c, align 4
  ret i32 %v2_27d4c
}

define i32 @function_27d6e() local_unnamed_addr {
dec_label_pc_27d6e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_27d6e = load i32, i32* %ecx.global-to-local, align 4
  %v1_27d6e = add i32 %v0_27d6e, -1
  store i32 %v1_27d6e, i32* %ecx.global-to-local, align 4
  %v0_27d70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27d70
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_27d71:
  %stack_var_-17 = alloca i32, align 4
  %v1_27d8e = call i32 @unknown_54e45(i32 %arg1)
  %v2_27d97 = ptrtoint i32* %stack_var_-17 to i32
  %v2_27d9d = call i32 @unknown_4f81b(i32 %v2_27d97, i32 %v1_27d8e)
  store i32 %v2_27d9d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27dae

bb:                                               ; preds = %dec_label_pc_27d71
  %v1_27dac = call i32 @function_27db3()
  br label %dec_label_pc_27dae

dec_label_pc_27dae:                               ; preds = %bb, %dec_label_pc_27d71
  %v2_27dac = phi i32 [ %v1_27dac, %bb ], [ %v2_27d9d, %dec_label_pc_27d71 ]
  ret i32 %v2_27dac
}

define i32 @function_27db3() local_unnamed_addr {
dec_label_pc_27db3:
  %v0_27db4 = load i32, i32* @eax, align 4
  ret i32 %v0_27db4
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE13_Rb_tree_implIS9_Lb0EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27db6:
  %v1_27dd3 = call i32 @unknown_54eba(i32 %arg1)
  %v1_27ddb = add i32 %arg1, 4
  %v2_27ddb = inttoptr i32 %v1_27ddb to i32*
  store i32 0, i32* %v2_27ddb, align 4
  %v1_27de5 = add i32 %arg1, 8
  %v2_27de5 = inttoptr i32 %v1_27de5 to i32*
  store i32 0, i32* %v2_27de5, align 4
  %v1_27def = add i32 %arg1, 12
  %v2_27def = inttoptr i32 %v1_27def to i32*
  store i32 0, i32* %v2_27def, align 4
  %v1_27df9 = add i32 %arg1, 16
  %v2_27df9 = inttoptr i32 %v1_27df9 to i32*
  store i32 0, i32* %v2_27df9, align 4
  %v1_27e03 = add i32 %arg1, 20
  %v2_27e03 = inttoptr i32 %v1_27e03 to i32*
  store i32 0, i32* %v2_27e03, align 4
  %v1_27e10 = call i32 @unknown_54ef0(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27e21

bb:                                               ; preds = %dec_label_pc_27db6
  %v1_27e1f = call i32 @function_27e26()
  br label %dec_label_pc_27e21

dec_label_pc_27e21:                               ; preds = %bb, %dec_label_pc_27db6
  %v2_27e1f = phi i32 [ %v1_27e1f, %bb ], [ 0, %dec_label_pc_27db6 ]
  ret i32 %v2_27e1f

; uselistorder directives
  uselistorder i32 %arg1, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_27e26() local_unnamed_addr {
dec_label_pc_27e26:
  %v0_27e27 = load i32, i32* @eax, align 4
  ret i32 %v0_27e27
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES5_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e28:
  ret i32 %arg1
}

define i32 @function_27e32(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e32:
  %v0_27e32 = load i32, i32* @ebp, align 4
  %v1_27e32 = add i32 %v0_27e32, 1
  store i32 %v1_27e32, i32* @ebp, align 4
  %v0_27e35 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27e3a = add i32 %v0_27e32, -11
  %v3_27e3a = inttoptr i32 %v2_27e3a to i32*
  store i32 %v0_27e35, i32* %v3_27e3a, align 4
  %v0_27e3f = load i32, i32* @ebp, align 4
  %v1_27e3f = add i32 %v0_27e3f, -12
  %v2_27e3f = inttoptr i32 %v1_27e3f to i32*
  %v3_27e3f = load i32, i32* %v2_27e3f, align 4
  %v1_27e42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_27e42 = xor i32 %v1_27e42, %v3_27e3f
  %v3_27e42 = icmp eq i32 %v2_27e42, 0
  store i32 %v2_27e42, i32* @eax, align 4
  br i1 %v3_27e42, label %bb, label %dec_label_pc_27e4b

bb:                                               ; preds = %dec_label_pc_27e32
  %v1_27e49 = call i32 @function_27e50()
  br label %dec_label_pc_27e4b

dec_label_pc_27e4b:                               ; preds = %bb, %dec_label_pc_27e32
  %v2_27e49 = phi i32 [ %v1_27e49, %bb ], [ %v2_27e42, %dec_label_pc_27e32 ]
  ret i32 %v2_27e49
}

define i32 @function_27e50() local_unnamed_addr {
dec_label_pc_27e50:
  %v0_27e51 = load i32, i32* @eax, align 4
  ret i32 %v0_27e51
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e52:
  %v1_27e6c = add i32 %arg1, 12
  %v2_27e6c = inttoptr i32 %v1_27e6c to i32*
  %v3_27e6c = load i32, i32* %v2_27e6c, align 4
  store i32 %v3_27e6c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27e7b

bb:                                               ; preds = %dec_label_pc_27e52
  %v2_27e79 = call i32 @function_27e80(i32 %arg1)
  br label %dec_label_pc_27e7b

dec_label_pc_27e7b:                               ; preds = %bb, %dec_label_pc_27e52
  %v3_27e79 = phi i32 [ %v2_27e79, %bb ], [ %v3_27e6c, %dec_label_pc_27e52 ]
  ret i32 %v3_27e79
}

define i32 @function_27e80(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e80:
  %v0_27e81 = load i32, i32* @eax, align 4
  ret i32 %v0_27e81
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e82:
  %v1_27e9c = add i32 %arg1, 8
  %v2_27e9c = inttoptr i32 %v1_27e9c to i32*
  %v3_27e9c = load i32, i32* %v2_27e9c, align 4
  store i32 %v3_27e9c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27eab

bb:                                               ; preds = %dec_label_pc_27e82
  %v2_27ea9 = call i32 @function_27eb0(i32 %arg1)
  br label %dec_label_pc_27eab

dec_label_pc_27eab:                               ; preds = %bb, %dec_label_pc_27e82
  %v3_27ea9 = phi i32 [ %v2_27ea9, %bb ], [ %v3_27e9c, %dec_label_pc_27e82 ]
  ret i32 %v3_27ea9
}

define i32 @function_27eb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_27eb0:
  %v0_27eb1 = load i32, i32* @eax, align 4
  ret i32 %v0_27eb1
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27eb2:
  %stack_var_-17 = alloca i32, align 4
  %v1_27ed3 = add i32 %arg2, 16
  %v1_27ed9 = call i32 @unknown_550c7(i32 %v1_27ed3)
  %v2_27ee0 = ptrtoint i32* %stack_var_-17 to i32
  %v2_27eed = call i32 @unknown_55042(i32 %v2_27ee0, i32 %arg1)
  %v2_27eff = call i32 @unknown_550f4(i32 %v2_27ee0, i32 %v1_27ed9)
  %v1_27f0a = call i32 @unknown_55092(i32 %v2_27ee0)
  %v2_27f1c = call i32 @unknown_55130(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27f2d

bb:                                               ; preds = %dec_label_pc_27eb2
  %v1_27f2b = call i32 @function_27f4b()
  store i32 %v1_27f2b, i32* @eax, align 4
  br label %dec_label_pc_27f2d

dec_label_pc_27f2d:                               ; preds = %bb, %dec_label_pc_27eb2
  %v0_27f2d = call i32 @function_27f46()
  ret i32 %v0_27f2d

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_27f30() local_unnamed_addr {
dec_label_pc_27f30:
  %eax.global-to-local = alloca i32, align 4
  %v0_27f30 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_27f30
}

define i32 @function_27f46() local_unnamed_addr {
dec_label_pc_27f46:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_27f4b() local_unnamed_addr {
dec_label_pc_27f4b:
  %v0_27f4f = load i32, i32* @eax, align 4
  ret i32 %v0_27f4f
}

define i32 @_ZN5boost6detail13addr_impl_refISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEC1ERS9_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f50:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27f81

bb:                                               ; preds = %dec_label_pc_27f50
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_27f7f = call i32 @function_27f86(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_27f81

dec_label_pc_27f81:                               ; preds = %bb, %dec_label_pc_27f50
  %v4_27f7f = phi i32 [ %v3_27f7f, %bb ], [ 0, %dec_label_pc_27f50 ]
  ret i32 %v4_27f7f

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27f86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f86:
  %v0_27f87 = load i32, i32* @eax, align 4
  ret i32 %v0_27f87
}

define i32 @_ZNK5boost6detail13addr_impl_refISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEcvRS9_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_27f88:
  %v2_27fa2 = load i32, i32* %arg1, align 4
  store i32 %v2_27fa2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27fb0

bb:                                               ; preds = %dec_label_pc_27f88
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_27fae = call i32 @function_27fb5(i32 %tmp100)
  br label %dec_label_pc_27fb0

dec_label_pc_27fb0:                               ; preds = %bb, %dec_label_pc_27f88
  %v3_27fae = phi i32 [ %v2_27fae, %bb ], [ %v2_27fa2, %dec_label_pc_27f88 ]
  ret i32 %v3_27fae

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_27fb5(i32 %arg1) local_unnamed_addr {
dec_label_pc_27fb5:
  %v0_27fb6 = load i32, i32* @eax, align 4
  ret i32 %v0_27fb6
}

define i32 @_ZN5boost6detail14addressof_implISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEE1fERS9_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27fb7:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_27fe3

bb:                                               ; preds = %dec_label_pc_27fb7
  %v3_27fe1 = call i32 @function_27fe8(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_27fe3

dec_label_pc_27fe3:                               ; preds = %bb, %dec_label_pc_27fb7
  %v4_27fe1 = phi i32 [ %v3_27fe1, %bb ], [ %arg1, %dec_label_pc_27fb7 ]
  ret i32 %v4_27fe1
}

define i32 @function_27fe8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27fe8:
  %v0_27fe9 = load i32, i32* @eax, align 4
  ret i32 %v0_27fe9
}

define i32 @_ZN5boost12range_detail11range_beginISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27fea:
  %v2_28014 = call i32 @unknown_552b2(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2802b

bb:                                               ; preds = %dec_label_pc_27fea
  %v1_28029 = call i32 @function_28030()
  br label %dec_label_pc_2802b

dec_label_pc_2802b:                               ; preds = %bb, %dec_label_pc_27fea
  %v2_28029 = phi i32 [ %v1_28029, %bb ], [ %arg1, %dec_label_pc_27fea ]
  ret i32 %v2_28029

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_28030() local_unnamed_addr {
dec_label_pc_28030:
  %v0_28031 = load i32, i32* @eax, align 4
  ret i32 %v0_28031
}

define i32 @_ZN5boost12range_detail9range_endISt3setISt6vectorIhSaIhEESt4lessIS5_ESaIS5_EEEENS_14range_iteratorIT_E4typeERSB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28034:
  ret i32 %arg2
}

define i32 @function_2804a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2804a:
  %v2_2804a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2804a = load i32, i32* @eax, align 4
  %v4_2804a = trunc i32 %v3_2804a to i8
  %v5_2804a = add i8 %v4_2804a, %v2_2804a
  %v21_2804a = inttoptr i32 %v3_2804a to i8*
  store i8 %v5_2804a, i8* %v21_2804a, align 1
  %v0_2804c = load i32, i32* @eax, align 4
  %v1_2804c = load i32, i32* @ebp, align 4
  %v2_2804c = add i32 %v1_2804c, -12
  %v3_2804c = inttoptr i32 %v2_2804c to i32*
  store i32 %v0_2804c, i32* %v3_2804c, align 4
  %v0_28051 = load i32, i32* @ebp, align 4
  %v1_28051 = add i32 %v0_28051, -28
  %v2_28051 = inttoptr i32 %v1_28051 to i32*
  %v3_28051 = load i32, i32* %v2_28051, align 4
  %v1_28054 = add i32 %v0_28051, -32
  %v2_28054 = inttoptr i32 %v1_28054 to i32*
  %v3_28054 = load i32, i32* %v2_28054, align 4
  %v2_2805e = call i32 @unknown_55346(i32 %v3_28051, i32 %v3_28054)
  %v0_28066 = load i32, i32* @ebp, align 4
  %v1_28066 = add i32 %v0_28066, -28
  %v2_28066 = inttoptr i32 %v1_28066 to i32*
  %v3_28066 = load i32, i32* %v2_28066, align 4
  store i32 %v3_28066, i32* @eax, align 4
  %v1_28069 = add i32 %v0_28066, -12
  %v2_28069 = inttoptr i32 %v1_28069 to i32*
  %v3_28069 = load i32, i32* %v2_28069, align 4
  %v1_2806c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2806c = icmp eq i32 %v1_2806c, %v3_28069
  br i1 %v3_2806c, label %bb, label %dec_label_pc_28075

bb:                                               ; preds = %dec_label_pc_2804a
  %v1_28073 = call i32 @function_2807a()
  br label %dec_label_pc_28075

dec_label_pc_28075:                               ; preds = %bb, %dec_label_pc_2804a
  %v2_28073 = phi i32 [ %v1_28073, %bb ], [ %v3_28066, %dec_label_pc_2804a ]
  ret i32 %v2_28073
}

define i32 @function_2807a() local_unnamed_addr {
dec_label_pc_2807a:
  %v0_2807b = load i32, i32* @eax, align 4
  ret i32 %v0_2807b
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEC1EPKSt13_Rb_tree_nodeIS5_E() local_unnamed_addr {
dec_label_pc_2807e:
  %eax.global-to-local = alloca i32, align 4
  %v17_28081 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_28081
}

define i32 @function_28086(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28086:
  %v0_28086 = load i32, i32* @ecx, align 4
  %v1_28086 = add i32 %v0_28086, 1166795845
  %v2_28086 = inttoptr i32 %v1_28086 to i8*
  %v3_28086 = load i8, i8* %v2_28086, align 1
  %v5_28086 = trunc i32 %v0_28086 to i8
  %v6_28086 = or i8 %v3_28086, %v5_28086
  store i8 %v6_28086, i8* %v2_28086, align 1
  %v0_2808e = load i32, i32* @ebp, align 4
  %v1_2808e = add i32 %v0_2808e, 1
  store i32 %v1_2808e, i32* @ebp, align 4
  %v0_2808f = load i32, i32* @ecx, align 4
  %v1_2808f = add i32 %v0_2808f, -1
  store i32 %v1_2808f, i32* @ecx, align 4
  %v0_28091 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28096 = add i32 %v0_2808e, -11
  %v3_28096 = inttoptr i32 %v2_28096 to i32*
  store i32 %v0_28091, i32* %v3_28096, align 4
  %v0_2809b = load i32, i32* @ebp, align 4
  %v1_2809b = add i32 %v0_2809b, -28
  %v2_2809b = inttoptr i32 %v1_2809b to i32*
  %v3_2809b = load i32, i32* %v2_2809b, align 4
  %v1_2809e = add i32 %v0_2809b, -32
  %v2_2809e = inttoptr i32 %v1_2809e to i32*
  %v3_2809e = load i32, i32* %v2_2809e, align 4
  %v2_280a1 = inttoptr i32 %v3_2809b to i32*
  store i32 %v3_2809e, i32* %v2_280a1, align 4
  %v0_280a3 = load i32, i32* @ebp, align 4
  %v1_280a3 = add i32 %v0_280a3, -12
  %v2_280a3 = inttoptr i32 %v1_280a3 to i32*
  %v3_280a3 = load i32, i32* %v2_280a3, align 4
  %v1_280a6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_280a6 = xor i32 %v1_280a6, %v3_280a3
  %v3_280a6 = icmp eq i32 %v2_280a6, 0
  store i32 %v2_280a6, i32* @eax, align 4
  br i1 %v3_280a6, label %bb, label %dec_label_pc_280af

bb:                                               ; preds = %dec_label_pc_28086
  %v1_280ad = call i32 @function_280b4()
  br label %dec_label_pc_280af

dec_label_pc_280af:                               ; preds = %bb, %dec_label_pc_28086
  %v3_280ad = phi i32 [ %v1_280ad, %bb ], [ %v2_280a6, %dec_label_pc_28086 ]
  ret i32 %v3_280ad
}

define i32 @function_280b4() local_unnamed_addr {
dec_label_pc_280b4:
  %v0_280b5 = load i32, i32* @eax, align 4
  ret i32 %v0_280b5
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_M_beginEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_280b6:
  %v1_280d0 = add i32 %arg1, 8
  %v2_280d0 = inttoptr i32 %v1_280d0 to i32*
  %v3_280d0 = load i32, i32* %v2_280d0, align 4
  store i32 %v3_280d0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_280df

bb:                                               ; preds = %dec_label_pc_280b6
  %v2_280dd = call i32 @function_280e4(i32 %arg1)
  br label %dec_label_pc_280df

dec_label_pc_280df:                               ; preds = %bb, %dec_label_pc_280b6
  %v3_280dd = phi i32 [ %v2_280dd, %bb ], [ %v3_280d0, %dec_label_pc_280b6 ]
  ret i32 %v3_280dd
}

define i32 @function_280e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_280e4:
  %v0_280e5 = load i32, i32* @eax, align 4
  ret i32 %v0_280e5
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_280e6:
  ret i32 %arg1
}

define i32 @function_280f4() local_unnamed_addr {
dec_label_pc_280f4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_280f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_280f4 = trunc i32 %v0_280f4 to i8
  %v2_280f4 = load i1, i1* %cf.global-to-local, align 1
  %v3_280f4 = zext i1 %v2_280f4 to i8
  %v4_280f4 = add i8 %v3_280f4, %v1_280f4
  %v19_280f4 = icmp ule i8 %v4_280f4, %v1_280f4
  %v21_280f4 = icmp eq i1 %v2_280f4, %v19_280f4
  store i1 %v21_280f4, i1* %cf.global-to-local, align 1
  %v22_280f4 = zext i8 %v4_280f4 to i32
  %v24_280f4 = and i32 %v0_280f4, -256
  %v25_280f4 = or i32 %v22_280f4, %v24_280f4
  store i32 %v25_280f4, i32* %eax.global-to-local, align 4
  ret i32 %v25_280f4

; uselistorder directives
  uselistorder i8 %v4_280f4, { 1, 0 }
  uselistorder i8 %v1_280f4, { 1, 0 }
}

define i32 @function_28113() local_unnamed_addr {
dec_label_pc_28113:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_28113 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28113 = add i32 %v0_28113, -1
  store i32 %v1_28113, i32* %ecx.global-to-local, align 4
  %v0_28115 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28115
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS5_ESF_RS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_28116:
  %v10_28195117126 = icmp eq i32 %arg3, 0
  %v1_28199118127 = icmp eq i1 %v10_28195117126, false
  %v5_2819c122129 = icmp eq i1 %v1_28199118127, false
  %v1_2819e123130 = icmp eq i1 %v5_2819c122129, false
  br i1 %v1_2819e123130, label %dec_label_pc_28147.lr.ph, label %dec_label_pc_281a0

dec_label_pc_28147.lr.ph:                         ; preds = %dec_label_pc_28116, %dec_label_pc_28171
  %stack_var_-44.0.ph132 = phi i32 [ %stack_var_-40.0124, %dec_label_pc_28171 ], [ %arg4, %dec_label_pc_28116 ]
  %stack_var_-40.0.ph131 = phi i32 [ %v1_2817d, %dec_label_pc_28171 ], [ %arg3, %dec_label_pc_28116 ]
  br label %dec_label_pc_28147

dec_label_pc_28147:                               ; preds = %dec_label_pc_28147.lr.ph, %dec_label_pc_28187
  %stack_var_-40.0124 = phi i32 [ %stack_var_-40.0.ph131, %dec_label_pc_28147.lr.ph ], [ %v1_2818d, %dec_label_pc_28187 ]
  %v1_2814d = call i32 @unknown_55472(i32 %stack_var_-40.0124)
  %v3_28165 = call i32 @unknown_496b6(i32 %arg2, i32 %v1_2814d, i32 %arg5)
  %v1_2816a = xor i32 %v3_28165, 1
  %v4_2816a = trunc i32 %v1_2816a to i8
  %v5_2816d = icmp eq i8 %v4_2816a, 0
  br i1 %v5_2816d, label %dec_label_pc_28187, label %dec_label_pc_28171

dec_label_pc_28171:                               ; preds = %dec_label_pc_28147
  %v1_2817d = call i32 @unknown_554b6(i32 %stack_var_-40.0124)
  %v10_28195117 = icmp eq i32 %v1_2817d, 0
  %v1_28199118 = icmp eq i1 %v10_28195117, false
  %v5_2819c122 = icmp eq i1 %v1_28199118, false
  %v1_2819e123 = icmp eq i1 %v5_2819c122, false
  br i1 %v1_2819e123, label %dec_label_pc_28147.lr.ph, label %dec_label_pc_281a0

dec_label_pc_28187:                               ; preds = %dec_label_pc_28147
  %v1_2818d = call i32 @unknown_554e6(i32 %stack_var_-40.0124)
  %v10_28195 = icmp eq i32 %v1_2818d, 0
  %v1_28199 = icmp eq i1 %v10_28195, false
  %v5_2819c = icmp eq i1 %v1_28199, false
  %v1_2819e = icmp eq i1 %v5_2819c, false
  br i1 %v1_2819e, label %dec_label_pc_28147, label %dec_label_pc_281a0

dec_label_pc_281a0:                               ; preds = %dec_label_pc_28187, %dec_label_pc_28116, %dec_label_pc_28171
  %stack_var_-44.0.ph.lcssa = phi i32 [ %arg4, %dec_label_pc_28116 ], [ %stack_var_-40.0124, %dec_label_pc_28171 ], [ %stack_var_-44.0.ph132, %dec_label_pc_28187 ]
  %v2_281ad = call i32 @unknown_50194(i32 %arg1, i32 %stack_var_-44.0.ph.lcssa)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_281c1

bb:                                               ; preds = %dec_label_pc_281a0
  %v1_281bf = call i32 @function_281c6()
  br label %dec_label_pc_281c1

dec_label_pc_281c1:                               ; preds = %bb, %dec_label_pc_281a0
  %v2_281bf = phi i32 [ %v1_281bf, %bb ], [ %arg1, %dec_label_pc_281a0 ]
  ret i32 %v2_281bf

; uselistorder directives
  uselistorder i32 %v1_2817d, { 1, 0 }
  uselistorder i32 %stack_var_-40.0124, { 0, 4, 2, 3, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_281a0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_28147, { 1, 0 }
  uselistorder label %dec_label_pc_28147.lr.ph, { 1, 0 }
}

define i32 @function_281c6() local_unnamed_addr {
dec_label_pc_281c6:
  %v0_281c7 = load i32, i32* @eax, align 4
  ret i32 %v0_281c7
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_281ca:
  %stack_var_-17 = alloca i32, align 4
  %v1_281e7 = call i32 @unknown_555ca(i32 %arg1)
  %v2_281f0 = ptrtoint i32* %stack_var_-17 to i32
  %v2_281f6 = call i32 @unknown_555fa(i32 %v2_281f0, i32 %v1_281e7)
  store i32 %v2_281f6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28207

bb:                                               ; preds = %dec_label_pc_281ca
  %v1_28205 = call i32 @function_2820c()
  br label %dec_label_pc_28207

dec_label_pc_28207:                               ; preds = %bb, %dec_label_pc_281ca
  %v2_28205 = phi i32 [ %v1_28205, %bb ], [ %v2_281f6, %dec_label_pc_281ca ]
  ret i32 %v2_28205
}

define i32 @function_2820c() local_unnamed_addr {
dec_label_pc_2820c:
  %v0_2820d = load i32, i32* @eax, align 4
  ret i32 %v0_2820d
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11lower_boundERS4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2820e:
  %v1_28238 = call i32 @unknown_55672(i32 %arg2)
  %v1_28245 = call i32 @unknown_49284(i32 %arg2)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_2826a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2826a:
  %v0_2826a = load i32, i32* @ebx, align 4
  %v1_2826a = add i32 %v0_2826a, 1166738668
  %v2_2826a = inttoptr i32 %v1_2826a to i8*
  %v3_2826a = load i8, i8* %v2_2826a, align 1
  %v4_2826a = load i32, i32* @eax, align 4
  %v5_2826a = trunc i32 %v4_2826a to i8
  %v6_2826a = add i8 %v5_2826a, %v3_2826a
  store i8 %v6_2826a, i8* %v2_2826a, align 1
  %v0_28274 = load i32, i32* @edx, align 4
  %v1_28274 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28274 = icmp eq i32 %v1_28274, %v0_28274
  br i1 %v3_28274, label %bb, label %dec_label_pc_2826a.dec_label_pc_2827d_crit_edge

dec_label_pc_2826a.dec_label_pc_2827d_crit_edge:  ; preds = %dec_label_pc_2826a
  %v2_2827b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2827d

bb:                                               ; preds = %dec_label_pc_2826a
  %v1_2827b = call i32 @function_28282()
  br label %dec_label_pc_2827d

dec_label_pc_2827d:                               ; preds = %dec_label_pc_2826a.dec_label_pc_2827d_crit_edge, %bb
  %v2_2827b = phi i32 [ %v2_2827b.pre, %dec_label_pc_2826a.dec_label_pc_2827d_crit_edge ], [ %v1_2827b, %bb ]
  ret i32 %v2_2827b

; uselistorder directives
  uselistorder label %dec_label_pc_2827d, { 1, 0 }
}

define i32 @function_28282() local_unnamed_addr {
dec_label_pc_28282:
  %v0_28282 = load i32, i32* @ebp, align 4
  %v1_28282 = add i32 %v0_28282, -4
  %v2_28282 = inttoptr i32 %v1_28282 to i32*
  %v3_28282 = load i32, i32* %v2_28282, align 4
  store i32 %v3_28282, i32* @ebx, align 4
  %v0_28286 = load i32, i32* @eax, align 4
  ret i32 %v0_28286
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8key_compEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2828a:
  %v0_2829c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2829c
}

define i32 @function_282a2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_282a2:
  %v0_282a2 = load i32, i32* @eax, align 4
  %v1_282a2 = load i32, i32* @ebp, align 4
  %v2_282a2 = add i32 %v1_282a2, -12
  %v3_282a2 = inttoptr i32 %v2_282a2 to i32*
  store i32 %v0_282a2, i32* %v3_282a2, align 4
  %v0_282a7 = load i32, i32* @ebp, align 4
  %v1_282a7 = add i32 %v0_282a7, -28
  %v2_282a7 = inttoptr i32 %v1_282a7 to i32*
  %v3_282a7 = load i32, i32* %v2_282a7, align 4
  store i32 %v3_282a7, i32* @eax, align 4
  %v1_282aa = add i32 %v0_282a7, -12
  %v2_282aa = inttoptr i32 %v1_282aa to i32*
  %v3_282aa = load i32, i32* %v2_282aa, align 4
  %v1_282ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_282ad = icmp eq i32 %v1_282ad, %v3_282aa
  br i1 %v3_282ad, label %bb, label %dec_label_pc_282b6

bb:                                               ; preds = %dec_label_pc_282a2
  %v1_282b4 = call i32 @function_282bb()
  br label %dec_label_pc_282b6

dec_label_pc_282b6:                               ; preds = %bb, %dec_label_pc_282a2
  %v2_282b4 = phi i32 [ %v1_282b4, %bb ], [ %v3_282a7, %dec_label_pc_282a2 ]
  ret i32 %v2_282b4
}

define i32 @function_282bb() local_unnamed_addr {
dec_label_pc_282bb:
  %v0_282bc = load i32, i32* @eax, align 4
  ret i32 %v0_282bc
}

define i32 @_ZStltIhSaIhEEbRKSt6vectorIT_T0_ES6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_282bf:
  %stack_var_-20 = alloca i32, align 4
  %v2_282dc = ptrtoint i32* %stack_var_-20 to i32
  ret i32 %v2_282dc
}

define i32 @function_282ea(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_282ea:
  %v1_282ea = load i32, i32* @eax, align 4
  %v0_282ed = load i32, i32* @ebx, align 4
  %v1_282ed = add i32 %v0_282ed, 1166869740
  %v2_282ed = inttoptr i32 %v1_282ed to i8*
  %v3_282ed = load i8, i8* %v2_282ed, align 1
  %v5_282ed = trunc i32 %v1_282ea to i8
  %v6_282ed = add i8 %v3_282ed, %v5_282ed
  store i8 %v6_282ed, i8* %v2_282ed, align 1
  %v0_282f4 = load i32, i32* @ebp, align 4
  %v1_282f4 = add i32 %v0_282f4, -48
  %v2_282f4 = inttoptr i32 %v1_282f4 to i32*
  %v3_282f4 = load i32, i32* %v2_282f4, align 4
  %v0_282fb = load i32, i32* @eax, align 4
  %v2_282fe = call i32 @unknown_3d29d(i32 %v0_282fb, i32 %v3_282f4)
  %v0_28306 = load i32, i32* @ebp, align 4
  %v1_28306 = add i32 %v0_28306, -24
  %v1_28309 = add i32 %v0_28306, -44
  %v2_28309 = inttoptr i32 %v1_28309 to i32*
  %v3_28309 = load i32, i32* %v2_28309, align 4
  %v2_28313 = call i32 @unknown_3d329(i32 %v1_28306, i32 %v3_28309)
  %v0_2831b = load i32, i32* @ebp, align 4
  %v1_2831b = add i32 %v0_2831b, -28
  %v1_2831e = add i32 %v0_2831b, -44
  %v2_2831e = inttoptr i32 %v1_2831e to i32*
  %v3_2831e = load i32, i32* %v2_2831e, align 4
  %v2_28328 = call i32 @unknown_3d29d(i32 %v1_2831b, i32 %v3_2831e)
  %v0_28330 = load i32, i32* @ebp, align 4
  %v1_2833e = add i32 %v0_28330, -24
  %v2_2833e = inttoptr i32 %v1_2833e to i32*
  %v3_2833e = load i32, i32* %v2_2833e, align 4
  ret i32 %v3_2833e

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_3d29d, { 1, 0 }
}

define i32 @function_2833c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2833c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_28346(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28346:
  %v0_28346 = load i32, i32* @ebp, align 4
  %v1_28346 = add i32 %v0_28346, 1
  store i32 %v1_28346, i32* @ebp, align 4
  %v0_2834b = call i32 @unknown_55807()
  store i32 %v0_2834b, i32* @eax, align 4
  %v0_28350 = load i32, i32* @ebp, align 4
  %v1_28350 = add i32 %v0_28350, -12
  %v2_28350 = inttoptr i32 %v1_28350 to i32*
  %v3_28350 = load i32, i32* %v2_28350, align 4
  %v1_28353 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_28353 = xor i32 %v1_28353, %v3_28350
  %v3_28353 = icmp eq i32 %v2_28353, 0
  store i32 %v2_28353, i32* @edx, align 4
  br i1 %v3_28353, label %bb, label %dec_label_pc_2835c

bb:                                               ; preds = %dec_label_pc_28346
  %v1_2835a = call i32 @function_28361()
  br label %dec_label_pc_2835c

dec_label_pc_2835c:                               ; preds = %bb, %dec_label_pc_28346
  %v2_2835a = phi i32 [ %v1_2835a, %bb ], [ %v0_2834b, %dec_label_pc_28346 ]
  ret i32 %v2_2835a
}

define i32 @function_28361() local_unnamed_addr {
dec_label_pc_28361:
  %v0_28362 = load i32, i32* @eax, align 4
  ret i32 %v0_28362
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28364:
  %v1_28391 = call i32 @unknown_55938(i32 %arg1)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_283a5

bb:                                               ; preds = %dec_label_pc_28364
  %v1_283a3 = call i32 @function_283aa()
  br label %dec_label_pc_283a5

dec_label_pc_283a5:                               ; preds = %bb, %dec_label_pc_28364
  %v2_283a3 = phi i32 [ %v1_283a3, %bb ], [ %arg1, %dec_label_pc_28364 ]
  ret i32 %v2_283a3

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_283aa() local_unnamed_addr {
dec_label_pc_283aa:
  %v0_283ab = load i32, i32* @eax, align 4
  ret i32 %v0_283ab
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEC1ERKSt17_Rb_tree_iteratorIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_283ae:
  %v1_283ce = inttoptr i32 %arg2 to i32*
  %v2_283ce = load i32, i32* %v1_283ce, align 4
  store i32 %v2_283ce, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_283e1

bb:                                               ; preds = %dec_label_pc_283ae
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_283df = call i32 @function_283e6(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_283e1

dec_label_pc_283e1:                               ; preds = %bb, %dec_label_pc_283ae
  %v4_283df = phi i32 [ %v3_283df, %bb ], [ 0, %dec_label_pc_283ae ]
  ret i32 %v4_283df

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_283e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_283e6:
  %v0_283e7 = load i32, i32* @eax, align 4
  ret i32 %v0_283e7
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS5_ERKS5_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_283e8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-21 = alloca i32, align 4
  %tmp119 = ptrtoint i32* %arg1 to i32
  %v1_2841b = call i32 @unknown_5584c(i32 %arg2)
  %v12_28420 = icmp eq i32 %v1_2841b, %arg3
  %v5_28425 = icmp eq i1 %v12_28420, false
  br i1 %v5_28425, label %dec_label_pc_284f1, label %dec_label_pc_2842d

dec_label_pc_2842d:                               ; preds = %dec_label_pc_283e8
  %v1_28433 = call i32 @unknown_55a24(i32 %arg2)
  %v1_28438 = icmp eq i32 %v1_28433, 0
  br i1 %v1_28438, label %dec_label_pc_28485, label %dec_label_pc_2843c

dec_label_pc_2843c:                               ; preds = %dec_label_pc_2842d
  %v2_28443 = ptrtoint i32* %stack_var_-21 to i32
  %v2_28449 = call i32 @unknown_55818(i32 %v2_28443, i32 %arg4)
  %v1_28456 = call i32 @unknown_559f4(i32 %arg2)
  %v1_2845b = inttoptr i32 %v1_28456 to i32*
  %v2_2845b = load i32, i32* %v1_2845b, align 4
  %v1_28460 = call i32 @unknown_505b2(i32 %v2_2845b)
  %v3_28475 = call i32 @unknown_49988(i32 %arg2, i32 %v1_28460, i32 %v2_28449)
  %v4_2847a = trunc i32 %v3_28475 to i8
  %v5_2847a = icmp eq i8 %v4_2847a, 0
  br i1 %v5_2847a, label %dec_label_pc_28485, label %dec_label_pc_2848a

dec_label_pc_28485:                               ; preds = %dec_label_pc_2843c, %dec_label_pc_2842d
  br label %dec_label_pc_2848a

dec_label_pc_2848a:                               ; preds = %dec_label_pc_2843c, %dec_label_pc_28485
  %storemerge = phi i1 [ true, %dec_label_pc_28485 ], [ false, %dec_label_pc_2843c ]
  br i1 %storemerge, label %dec_label_pc_284c8, label %dec_label_pc_2848e

dec_label_pc_2848e:                               ; preds = %dec_label_pc_2848a
  %v1_28494 = call i32 @unknown_559f4(i32 %arg2)
  %v1_28499 = inttoptr i32 %v1_28494 to i32*
  %v2_28499 = load i32, i32* %v1_28499, align 4
  %v5_284bb = call i32 @unknown_55a54(i32 %tmp119, i32 %arg2, i32 0, i32 %v2_28499, i32 %arg4)
  %v0_284c3 = call i32 @function_287e8()
  ret i32 %v0_284c3

dec_label_pc_284c8:                               ; preds = %dec_label_pc_2848a
  %v2_284c8 = ptrtoint i32* %stack_var_-52 to i32
  %v3_284dc = call i32 @unknown_55b56(i32 %v2_284c8, i32 %arg2, i32 %arg4)
  %v3_284e7 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_284e7, i32* %arg1, align 4
  %v0_284ec = call i32 @function_287e8()
  ret i32 %v0_284ec

dec_label_pc_284f1:                               ; preds = %dec_label_pc_283e8
  %v1_284f7 = call i32 @unknown_505b2(i32 %arg3)
  %v2_28505 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2850b = call i32 @unknown_55818(i32 %v2_28505, i32 %arg4)
  %v3_2851e = call i32 @unknown_49988(i32 %arg2, i32 %v2_2850b, i32 %v1_284f7)
  %v4_28523 = trunc i32 %v3_2851e to i8
  %v5_28523 = icmp eq i8 %v4_28523, 0
  br i1 %v5_28523, label %bb, label %dec_label_pc_2852b

bb:                                               ; preds = %dec_label_pc_284f1
  %v1_28525 = call i32 @function_2866b()
  br label %dec_label_pc_2852b

dec_label_pc_2852b:                               ; preds = %bb, %dec_label_pc_284f1
  %v2_28525 = phi i32 [ %v1_28525, %bb ], [ %v3_2851e, %dec_label_pc_284f1 ]
  ret i32 %v2_28525

; uselistorder directives
  uselistorder i32 %arg4, { 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 6, 4, 2, 3, 0, 1, 5, 7 }
  uselistorder label %dec_label_pc_2848a, { 1, 0 }
}

define i32 @function_2852c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2852c:
  %v2_28532 = load i32, i32* inttoptr (i32 -1947712119 to i32*), align 4
  store i32 %v2_28532, i32* @ebp, align 4
  %v0_2853a = call i32 @unknown_55d5a()
  %v1_2853f = inttoptr i32 %v0_2853a to i32*
  %v2_2853f = load i32, i32* %v1_2853f, align 4
  %v0_28541 = load i32, i32* @ebx, align 4
  %v12_28541 = icmp eq i32 %v0_28541, %v2_2853f
  %v5_28546 = icmp eq i1 %v12_28541, false
  br i1 %v5_28546, label %bb, label %dec_label_pc_2854a

bb:                                               ; preds = %dec_label_pc_2852c
  %v1_28548 = call i32 @function_2858d()
  br label %dec_label_pc_2854a

dec_label_pc_2854a:                               ; preds = %bb, %dec_label_pc_2852c
  %v0_2854a = load i32, i32* @ebp, align 4
  %v1_2854a = add i32 %v0_2854a, -64
  %v2_2854a = inttoptr i32 %v1_2854a to i32*
  %v3_2854a = load i32, i32* %v2_2854a, align 4
  %v1_2854d = load i32, i32* @esp, align 4
  %v2_2854d = inttoptr i32 %v1_2854d to i32*
  store i32 %v3_2854a, i32* %v2_2854d, align 4
  %v0_28550 = call i32 @unknown_55d5a()
  %v1_28555 = inttoptr i32 %v0_28550 to i32*
  %v2_28555 = load i32, i32* %v1_28555, align 4
  store i32 %v2_28555, i32* @ebx, align 4
  %v0_28557 = load i32, i32* @ebp, align 4
  %v1_28557 = add i32 %v0_28557, -64
  %v2_28557 = inttoptr i32 %v1_28557 to i32*
  %v3_28557 = load i32, i32* %v2_28557, align 4
  %v1_2855a = load i32, i32* @esp, align 4
  %v2_2855a = inttoptr i32 %v1_2855a to i32*
  store i32 %v3_28557, i32* %v2_2855a, align 4
  %v0_2855d = call i32 @unknown_55d5a()
  %v1_28562 = inttoptr i32 %v0_2855d to i32*
  %v2_28562 = load i32, i32* %v1_28562, align 4
  store i32 %v2_28562, i32* @edx, align 4
  %v0_28564 = load i32, i32* @ebp, align 4
  %v1_28564 = add i32 %v0_28564, -60
  %v2_28564 = inttoptr i32 %v1_28564 to i32*
  %v3_28564 = load i32, i32* %v2_28564, align 4
  %v1_28567 = add i32 %v0_28564, -72
  %v2_28567 = inttoptr i32 %v1_28567 to i32*
  %v3_28567 = load i32, i32* %v2_28567, align 4
  store i32 %v3_28567, i32* @ecx, align 4
  ret i32 %v3_28564

; uselistorder directives
  uselistorder i32 ()* @unknown_55d5a, { 2, 1, 0 }
}

define i32 @function_2856a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2856a:
  %v0_2856a = load i32, i32* @ecx, align 4
  %v0_2856e = load i32, i32* @ebx, align 4
  %v0_28572 = load i32, i32* @edx, align 4
  %v0_28576 = load i32, i32* @ebp, align 4
  %v1_28576 = add i32 %v0_28576, -64
  %v2_28576 = inttoptr i32 %v1_28576 to i32*
  %v3_28576 = load i32, i32* %v2_28576, align 4
  %v0_2857d = load i32, i32* @eax, align 4
  %v5_28580 = call i32 @unknown_55a54(i32 %v0_2857d, i32 %v3_28576, i32 %v0_28572, i32 %v0_2856e, i32 %v0_2856a)
  %v0_28588 = call i32 @function_287e8()
  ret i32 %v0_28588
}

define i32 @function_2858d() local_unnamed_addr {
dec_label_pc_2858d:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2858d = load i32, i32* @ebp, align 4
  %v1_2858d = add i32 %v0_2858d, -72
  %v2_2858d = inttoptr i32 %v1_2858d to i32*
  %v3_2858d = load i32, i32* %v2_2858d, align 4
  %v1_28594 = add i32 %v0_2858d, -15
  %v2_2859a = call i32 @unknown_55818(i32 %v1_28594, i32 %v3_2858d)
  store i32 %v2_2859a, i32* %ebx.global-to-local, align 4
  %v0_285a1 = load i32, i32* @ebp, align 4
  %v1_285a1 = add i32 %v0_285a1, -24
  %v1_285a7 = call i32 @unknown_55d8a(i32 %v1_285a1)
  %v1_285ac = inttoptr i32 %v1_285a7 to i32*
  %v2_285ac = load i32, i32* %v1_285ac, align 4
  %v1_285b1 = call i32 @unknown_505b2(i32 %v2_285ac)
  %v0_285b8 = load i32, i32* @ebp, align 4
  %v1_285b8 = add i32 %v0_285b8, -64
  %v2_285b8 = inttoptr i32 %v1_285b8 to i32*
  %v3_285b8 = load i32, i32* %v2_285b8, align 4
  %v0_285bb = load i32, i32* %ebx.global-to-local, align 4
  %v3_285c6 = call i32 @unknown_49988(i32 %v3_285b8, i32 %v1_285b1, i32 %v0_285bb)
  %v4_285cb = trunc i32 %v3_285c6 to i8
  %v5_285cb = icmp eq i8 %v4_285cb, 0
  %v0_28642 = load i32, i32* @ebp, align 4
  br i1 %v5_285cb, label %dec_label_pc_28642, label %dec_label_pc_285cf

dec_label_pc_285cf:                               ; preds = %dec_label_pc_2858d
  %v1_285cf = add i32 %v0_28642, -24
  %v2_285cf = inttoptr i32 %v1_285cf to i32*
  %v3_285cf = load i32, i32* %v2_285cf, align 4
  %v1_285d5 = call i32 @unknown_557b8(i32 %v3_285cf)
  %v1_285da = icmp eq i32 %v1_285d5, 0
  %v5_285df = icmp eq i1 %v1_285da, false
  %v0_28613 = load i32, i32* @ebp, align 4
  br i1 %v5_285df, label %dec_label_pc_28613, label %dec_label_pc_285e3

dec_label_pc_285e3:                               ; preds = %dec_label_pc_285cf
  %v1_285e3 = add i32 %v0_28613, -24
  %v2_285e3 = inttoptr i32 %v1_285e3 to i32*
  %v3_285e3 = load i32, i32* %v2_285e3, align 4
  %v1_285e6 = add i32 %v0_28613, -60
  %v2_285e6 = inttoptr i32 %v1_285e6 to i32*
  %v3_285e6 = load i32, i32* %v2_285e6, align 4
  %v1_285e9 = add i32 %v0_28613, -72
  %v2_285e9 = inttoptr i32 %v1_285e9 to i32*
  %v3_285e9 = load i32, i32* %v2_285e9, align 4
  %v1_285fc = add i32 %v0_28613, -64
  %v2_285fc = inttoptr i32 %v1_285fc to i32*
  %v3_285fc = load i32, i32* %v2_285fc, align 4
  %v5_28606 = call i32 @unknown_55a54(i32 %v3_285e6, i32 %v3_285fc, i32 0, i32 %v3_285e3, i32 %v3_285e9)
  %v0_2860e = call i32 @function_287e8()
  ret i32 %v0_2860e

dec_label_pc_28613:                               ; preds = %dec_label_pc_285cf
  %v1_28613 = add i32 %v0_28613, -68
  %v2_28613 = inttoptr i32 %v1_28613 to i32*
  %v3_28613 = load i32, i32* %v2_28613, align 4
  %v1_28619 = add i32 %v0_28613, -60
  %v2_28619 = inttoptr i32 %v1_28619 to i32*
  %v3_28619 = load i32, i32* %v2_28619, align 4
  %v1_2861c = add i32 %v0_28613, -72
  %v2_2861c = inttoptr i32 %v1_2861c to i32*
  %v3_2861c = load i32, i32* %v2_2861c, align 4
  store i32 %v3_2861c, i32* %ebx.global-to-local, align 4
  %v1_2862b = add i32 %v0_28613, -64
  %v2_2862b = inttoptr i32 %v1_2862b to i32*
  %v3_2862b = load i32, i32* %v2_2862b, align 4
  %v5_28635 = call i32 @unknown_55a54(i32 %v3_28619, i32 %v3_2862b, i32 %v3_28613, i32 %v3_28613, i32 %v3_2861c)
  %v0_2863d = call i32 @function_287e8()
  ret i32 %v0_2863d

dec_label_pc_28642:                               ; preds = %dec_label_pc_2858d
  %v1_28642 = add i32 %v0_28642, -40
  %v1_28645 = add i32 %v0_28642, -72
  %v2_28645 = inttoptr i32 %v1_28645 to i32*
  %v3_28645 = load i32, i32* %v2_28645, align 4
  %v1_2864c = add i32 %v0_28642, -64
  %v2_2864c = inttoptr i32 %v1_2864c to i32*
  %v3_2864c = load i32, i32* %v2_2864c, align 4
  %v3_28656 = call i32 @unknown_55b56(i32 %v1_28642, i32 %v3_2864c, i32 %v3_28645)
  %v0_2865e = load i32, i32* @ebp, align 4
  %v1_2865e = add i32 %v0_2865e, -60
  %v2_2865e = inttoptr i32 %v1_2865e to i32*
  %v3_2865e = load i32, i32* %v2_2865e, align 4
  %v1_28661 = add i32 %v0_2865e, -40
  %v2_28661 = inttoptr i32 %v1_28661 to i32*
  %v3_28661 = load i32, i32* %v2_28661, align 4
  %v2_28664 = inttoptr i32 %v3_2865e to i32*
  store i32 %v3_28661, i32* %v2_28664, align 4
  %v0_28666 = call i32 @function_287e8()
  ret i32 %v0_28666

; uselistorder directives
  uselistorder i32 %v3_28613, { 1, 0 }
  uselistorder i32 %v0_28613, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_28642, { 0, 2, 3, 1 }
}

define i32 @function_2865c() local_unnamed_addr {
dec_label_pc_2865c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2866b() local_unnamed_addr {
dec_label_pc_2866b:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2866b = load i32, i32* @ebp, align 4
  %v1_2866b = add i32 %v0_2866b, -72
  %v2_2866b = inttoptr i32 %v1_2866b to i32*
  %v3_2866b = load i32, i32* %v2_2866b, align 4
  %v1_28672 = add i32 %v0_2866b, -14
  %v2_28678 = call i32 @unknown_55818(i32 %v1_28672, i32 %v3_2866b)
  store i32 %v2_28678, i32* %ebx.global-to-local, align 4
  %v0_2867f = load i32, i32* @ebp, align 4
  %v1_2867f = add i32 %v0_2867f, -68
  %v2_2867f = inttoptr i32 %v1_2867f to i32*
  %v3_2867f = load i32, i32* %v2_2867f, align 4
  %v1_28685 = call i32 @unknown_505b2(i32 %v3_2867f)
  %v0_2868c = load i32, i32* @ebp, align 4
  %v1_2868c = add i32 %v0_2868c, -64
  %v2_2868c = inttoptr i32 %v1_2868c to i32*
  %v3_2868c = load i32, i32* %v2_2868c, align 4
  %v0_2868f = load i32, i32* %ebx.global-to-local, align 4
  %v3_2869a = call i32 @unknown_49988(i32 %v3_2868c, i32 %v1_28685, i32 %v0_2868f)
  %v4_2869f = trunc i32 %v3_2869a to i8
  %v5_2869f = icmp eq i8 %v4_2869f, 0
  %v0_287d3 = load i32, i32* @ebp, align 4
  br i1 %v5_2869f, label %dec_label_pc_287d3, label %dec_label_pc_286a7

dec_label_pc_286a7:                               ; preds = %dec_label_pc_2866b
  %v1_286a7 = add i32 %v0_287d3, -68
  %v2_286a7 = inttoptr i32 %v1_286a7 to i32*
  %v3_286a7 = load i32, i32* %v2_286a7, align 4
  %v2_286aa = add i32 %v0_287d3, -24
  %v3_286aa = inttoptr i32 %v2_286aa to i32*
  store i32 %v3_286a7, i32* %v3_286aa, align 4
  %v0_286ad = load i32, i32* @ebp, align 4
  %v1_286ad = add i32 %v0_286ad, -68
  %v2_286ad = inttoptr i32 %v1_286ad to i32*
  %v3_286ad = load i32, i32* %v2_286ad, align 4
  store i32 %v3_286ad, i32* %ebx.global-to-local, align 4
  %v1_286b0 = add i32 %v0_286ad, -64
  %v2_286b0 = inttoptr i32 %v1_286b0 to i32*
  %v3_286b0 = load i32, i32* %v2_286b0, align 4
  %v1_286b6 = call i32 @unknown_559f4(i32 %v3_286b0)
  %v1_286bb = inttoptr i32 %v1_286b6 to i32*
  %v2_286bb = load i32, i32* %v1_286bb, align 4
  %v0_286bd = load i32, i32* %ebx.global-to-local, align 4
  %v12_286bd = icmp eq i32 %v0_286bd, %v2_286bb
  %v5_286c2 = icmp eq i1 %v12_286bd, false
  %v0_28700 = load i32, i32* @ebp, align 4
  br i1 %v5_286c2, label %dec_label_pc_28700, label %dec_label_pc_286c6

dec_label_pc_286c6:                               ; preds = %dec_label_pc_286a7
  %v1_286c6 = add i32 %v0_28700, -64
  %v2_286c6 = inttoptr i32 %v1_286c6 to i32*
  %v3_286c6 = load i32, i32* %v2_286c6, align 4
  %v1_286cc = call i32 @unknown_559f4(i32 %v3_286c6)
  %v1_286d1 = inttoptr i32 %v1_286cc to i32*
  %v2_286d1 = load i32, i32* %v1_286d1, align 4
  %v0_286d3 = load i32, i32* @ebp, align 4
  %v1_286d3 = add i32 %v0_286d3, -60
  %v2_286d3 = inttoptr i32 %v1_286d3 to i32*
  %v3_286d3 = load i32, i32* %v2_286d3, align 4
  %v1_286d6 = add i32 %v0_286d3, -72
  %v2_286d6 = inttoptr i32 %v1_286d6 to i32*
  %v3_286d6 = load i32, i32* %v2_286d6, align 4
  %v1_286e9 = add i32 %v0_286d3, -64
  %v2_286e9 = inttoptr i32 %v1_286e9 to i32*
  %v3_286e9 = load i32, i32* %v2_286e9, align 4
  %v5_286f3 = call i32 @unknown_55a54(i32 %v3_286d3, i32 %v3_286e9, i32 0, i32 %v2_286d1, i32 %v3_286d6)
  %v0_286fb = call i32 @function_287e8()
  ret i32 %v0_286fb

dec_label_pc_28700:                               ; preds = %dec_label_pc_286a7
  %v1_28700 = add i32 %v0_28700, -24
  %v1_28706 = call i32 @unknown_55dca(i32 %v1_28700)
  %v1_2870b = inttoptr i32 %v1_28706 to i32*
  %v2_2870b = load i32, i32* %v1_2870b, align 4
  %v1_28710 = call i32 @unknown_505b2(i32 %v2_2870b)
  store i32 %v1_28710, i32* %ebx.global-to-local, align 4
  %v0_28717 = load i32, i32* @ebp, align 4
  %v1_28717 = add i32 %v0_28717, -72
  %v2_28717 = inttoptr i32 %v1_28717 to i32*
  %v3_28717 = load i32, i32* %v2_28717, align 4
  %v1_2871e = add i32 %v0_28717, -13
  %v2_28724 = call i32 @unknown_55818(i32 %v1_2871e, i32 %v3_28717)
  %v0_28729 = load i32, i32* @ebp, align 4
  %v1_28729 = add i32 %v0_28729, -64
  %v2_28729 = inttoptr i32 %v1_28729 to i32*
  %v3_28729 = load i32, i32* %v2_28729, align 4
  %v0_2872c = load i32, i32* %ebx.global-to-local, align 4
  %v3_28737 = call i32 @unknown_49988(i32 %v3_28729, i32 %v2_28724, i32 %v0_2872c)
  %v4_2873c = trunc i32 %v3_28737 to i8
  %v5_2873c = icmp eq i8 %v4_2873c, 0
  %v0_287ad = load i32, i32* @ebp, align 4
  br i1 %v5_2873c, label %dec_label_pc_287ad, label %dec_label_pc_28740

dec_label_pc_28740:                               ; preds = %dec_label_pc_28700
  %v1_28740 = add i32 %v0_287ad, -68
  %v2_28740 = inttoptr i32 %v1_28740 to i32*
  %v3_28740 = load i32, i32* %v2_28740, align 4
  %v1_28746 = call i32 @unknown_557b8(i32 %v3_28740)
  %v1_2874b = icmp eq i32 %v1_28746, 0
  %v5_28750 = icmp eq i1 %v1_2874b, false
  %v0_28781 = load i32, i32* @ebp, align 4
  br i1 %v5_28750, label %dec_label_pc_28781, label %dec_label_pc_28754

dec_label_pc_28754:                               ; preds = %dec_label_pc_28740
  %v1_28754 = add i32 %v0_28781, -68
  %v2_28754 = inttoptr i32 %v1_28754 to i32*
  %v3_28754 = load i32, i32* %v2_28754, align 4
  %v1_28757 = add i32 %v0_28781, -60
  %v2_28757 = inttoptr i32 %v1_28757 to i32*
  %v3_28757 = load i32, i32* %v2_28757, align 4
  %v1_2875a = add i32 %v0_28781, -72
  %v2_2875a = inttoptr i32 %v1_2875a to i32*
  %v3_2875a = load i32, i32* %v2_2875a, align 4
  %v1_2876d = add i32 %v0_28781, -64
  %v2_2876d = inttoptr i32 %v1_2876d to i32*
  %v3_2876d = load i32, i32* %v2_2876d, align 4
  %v5_28777 = call i32 @unknown_55a54(i32 %v3_28757, i32 %v3_2876d, i32 0, i32 %v3_28754, i32 %v3_2875a)
  %v0_2877f = call i32 @function_287e8()
  ret i32 %v0_2877f

dec_label_pc_28781:                               ; preds = %dec_label_pc_28740
  %v1_28781 = add i32 %v0_28781, -24
  %v2_28781 = inttoptr i32 %v1_28781 to i32*
  %v3_28781 = load i32, i32* %v2_28781, align 4
  %v1_28787 = add i32 %v0_28781, -60
  %v2_28787 = inttoptr i32 %v1_28787 to i32*
  %v3_28787 = load i32, i32* %v2_28787, align 4
  %v1_2878a = add i32 %v0_28781, -72
  %v2_2878a = inttoptr i32 %v1_2878a to i32*
  %v3_2878a = load i32, i32* %v2_2878a, align 4
  store i32 %v3_2878a, i32* %ebx.global-to-local, align 4
  %v1_28799 = add i32 %v0_28781, -64
  %v2_28799 = inttoptr i32 %v1_28799 to i32*
  %v3_28799 = load i32, i32* %v2_28799, align 4
  %v5_287a3 = call i32 @unknown_55a54(i32 %v3_28787, i32 %v3_28799, i32 %v3_28781, i32 %v3_28781, i32 %v3_2878a)
  %v0_287ab = call i32 @function_287e8()
  ret i32 %v0_287ab

dec_label_pc_287ad:                               ; preds = %dec_label_pc_28700
  %v1_287ad = add i32 %v0_287ad, -32
  %v1_287b0 = add i32 %v0_287ad, -72
  %v2_287b0 = inttoptr i32 %v1_287b0 to i32*
  %v3_287b0 = load i32, i32* %v2_287b0, align 4
  %v1_287b7 = add i32 %v0_287ad, -64
  %v2_287b7 = inttoptr i32 %v1_287b7 to i32*
  %v3_287b7 = load i32, i32* %v2_287b7, align 4
  %v3_287c1 = call i32 @unknown_55b56(i32 %v1_287ad, i32 %v3_287b7, i32 %v3_287b0)
  %v0_287c9 = load i32, i32* @ebp, align 4
  %v1_287c9 = add i32 %v0_287c9, -60
  %v2_287c9 = inttoptr i32 %v1_287c9 to i32*
  %v3_287c9 = load i32, i32* %v2_287c9, align 4
  %v1_287cc = add i32 %v0_287c9, -32
  %v2_287cc = inttoptr i32 %v1_287cc to i32*
  %v3_287cc = load i32, i32* %v2_287cc, align 4
  %v2_287cf = inttoptr i32 %v3_287c9 to i32*
  store i32 %v3_287cc, i32* %v2_287cf, align 4
  %v0_287d1 = call i32 @function_287e8()
  ret i32 %v0_287d1

dec_label_pc_287d3:                               ; preds = %dec_label_pc_2866b
  %v1_287d3 = add i32 %v0_287d3, -60
  %v2_287d3 = inttoptr i32 %v1_287d3 to i32*
  %v3_287d3 = load i32, i32* %v2_287d3, align 4
  %v1_287d6 = add i32 %v0_287d3, -68
  %v2_287e0 = call i32 @unknown_55e0a(i32 %v3_287d3, i32 %v1_287d6)
  ret i32 %v2_287e0

; uselistorder directives
  uselistorder i32 %v3_28781, { 1, 0 }
  uselistorder i32 %v0_28781, { 0, 2, 1, 7, 4, 3, 6, 5 }
  uselistorder i32 %v0_287ad, { 0, 2, 3, 1 }
  uselistorder i32 %v0_28700, { 1, 0 }
  uselistorder i32 %v0_287d3, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_55b56, { 2, 0, 1 }
  uselistorder i32 (i32)* @unknown_557b8, { 1, 0 }
  uselistorder i32 ()* @function_287e8, { 9, 8, 7, 6, 2, 1, 0, 3, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_55a54, { 6, 5, 4, 1, 0, 2, 3 }
  uselistorder i32 (i32)* @unknown_559f4, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @unknown_49988, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32)* @unknown_505b2, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32)* @unknown_55818, { 4, 3, 0, 2, 1 }
}

define i32 @function_287e8() local_unnamed_addr {
dec_label_pc_287e8:
  %v0_287e8 = load i32, i32* @ebp, align 4
  %v1_287e8 = add i32 %v0_287e8, -60
  %v2_287e8 = inttoptr i32 %v1_287e8 to i32*
  %v3_287e8 = load i32, i32* %v2_287e8, align 4
  store i32 %v3_287e8, i32* @eax, align 4
  %v1_287eb = add i32 %v0_287e8, -12
  %v2_287eb = inttoptr i32 %v1_287eb to i32*
  %v3_287eb = load i32, i32* %v2_287eb, align 4
  %v1_287ee = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_287ee = icmp eq i32 %v1_287ee, %v3_287eb
  br i1 %v3_287ee, label %bb, label %dec_label_pc_287f7

bb:                                               ; preds = %dec_label_pc_287e8
  %v1_287f5 = call i32 @function_287fc()
  br label %dec_label_pc_287f7

dec_label_pc_287f7:                               ; preds = %bb, %dec_label_pc_287e8
  %v2_287f5 = phi i32 [ %v1_287f5, %bb ], [ %v3_287e8, %dec_label_pc_287e8 ]
  ret i32 %v2_287f5
}

define i32 @function_287fa(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_287fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_287fc() local_unnamed_addr {
dec_label_pc_287fc:
  %v0_28800 = load i32, i32* @eax, align 4
  ret i32 %v0_28800
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK14CScriptVisitorEC1ERS4_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28804:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28835

bb:                                               ; preds = %dec_label_pc_28804
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_28833 = call i32 @function_2883a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_28835

dec_label_pc_28835:                               ; preds = %bb, %dec_label_pc_28804
  %v4_28833 = phi i32 [ %v3_28833, %bb ], [ 0, %dec_label_pc_28804 ]
  ret i32 %v4_28833

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2883a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2883a:
  %v0_2883b = load i32, i32* @eax, align 4
  ret i32 %v0_2883b
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14invoke_visitorIK14CScriptVisitorEEEENT_11result_typeERSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2883c:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2885d = add i32 %tmp105, 4
  %v1_28863 = call i32 @unknown_4f196(i32 %v1_2885d)
  %v1_28870 = call i32 @unknown_4829a(i32 %tmp105)
  %v2_2887a = load i32, i32* %arg1, align 4
  %v4_2888e = call i32 @unknown_562a7(i32 %v2_2887a, i32 %v1_28870, i32 %arg2, i32 %v1_28863)
  store i32 %v4_2888e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2889f

bb:                                               ; preds = %dec_label_pc_2883c
  %v1_2889d = call i32 @function_288a4()
  br label %dec_label_pc_2889f

dec_label_pc_2889f:                               ; preds = %bb, %dec_label_pc_2883c
  %v2_2889d = phi i32 [ %v1_2889d, %bb ], [ %v4_2888e, %dec_label_pc_2883c ]
  ret i32 %v2_2889d

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4829a, { 1, 0 }
}

define i32 @function_288a4() local_unnamed_addr {
dec_label_pc_288a4:
  %v0_288a9 = load i32, i32* @eax, align 4
  ret i32 %v0_288a9
}

define i32 @_ZN5boost6detail13addr_impl_refIKSt6vectorI7CPubKeySaIS3_EEEC1ERS6_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288aa:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_288db

bb:                                               ; preds = %dec_label_pc_288aa
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_288d9 = call i32 @function_288e0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_288db

dec_label_pc_288db:                               ; preds = %bb, %dec_label_pc_288aa
  %v4_288d9 = phi i32 [ %v3_288d9, %bb ], [ 0, %dec_label_pc_288aa ]
  ret i32 %v4_288d9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_288e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_288e0:
  %v0_288e1 = load i32, i32* @eax, align 4
  ret i32 %v0_288e1
}

define i32 @_ZNK5boost6detail13addr_impl_refIKSt6vectorI7CPubKeySaIS3_EEEcvRS6_Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_288e2:
  %v2_288fc = load i32, i32* %arg1, align 4
  store i32 %v2_288fc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2890a

bb:                                               ; preds = %dec_label_pc_288e2
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v2_28908 = call i32 @function_2890f(i32 %tmp100)
  br label %dec_label_pc_2890a

dec_label_pc_2890a:                               ; preds = %bb, %dec_label_pc_288e2
  %v3_28908 = phi i32 [ %v2_28908, %bb ], [ %v2_288fc, %dec_label_pc_288e2 ]
  ret i32 %v3_28908

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2890f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2890f:
  %v0_28910 = load i32, i32* @eax, align 4
  ret i32 %v0_28910
}

define i32 @_ZN5boost6detail14addressof_implIKSt6vectorI7CPubKeySaIS3_EEE1fERS6_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28911:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2893d

bb:                                               ; preds = %dec_label_pc_28911
  %v3_2893b = call i32 @function_28942(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2893d

dec_label_pc_2893d:                               ; preds = %bb, %dec_label_pc_28911
  %v4_2893b = phi i32 [ %v3_2893b, %bb ], [ %arg1, %dec_label_pc_28911 ]
  ret i32 %v4_2893b
}

define i32 @function_28942(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28942:
  %v0_28943 = load i32, i32* @eax, align 4
  ret i32 %v0_28943
}

define i32 @_ZN5boost12range_detail11range_beginIKSt6vectorI7CPubKeySaIS3_EEEENS_14range_iteratorIT_E4typeERS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28944:
  %v2_2896e = call i32 @unknown_56424(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28985

bb:                                               ; preds = %dec_label_pc_28944
  %v1_28983 = call i32 @function_2898a()
  br label %dec_label_pc_28985

dec_label_pc_28985:                               ; preds = %bb, %dec_label_pc_28944
  %v2_28983 = phi i32 [ %v1_28983, %bb ], [ %arg1, %dec_label_pc_28944 ]
  ret i32 %v2_28983

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2898a() local_unnamed_addr {
dec_label_pc_2898a:
  %v0_2898b = load i32, i32* @eax, align 4
  ret i32 %v0_2898b
}

define i32 @_ZN5boost12range_detail9range_endIKSt6vectorI7CPubKeySaIS3_EEEENS_14range_iteratorIT_E4typeERS8_() local_unnamed_addr {
dec_label_pc_2898e:
  %eax.global-to-local = alloca i32, align 4
  %v2_2898f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2898f
}

define i32 @function_28992(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28992:
  %v4_28993 = load i32, i32* @ecx, align 4
  %v0_2899b = load i32, i32* @ebp, align 4
  %v1_2899e = add i32 %v0_2899b, 2
  %v9_2899e = icmp eq i32 %v1_2899e, 0
  store i32 %v1_2899e, i32* @ebp, align 4
  %v2_2899f = icmp eq i32 %v4_28993, 1
  %v4_2899f = or i1 %v2_2899f, %v9_2899e
  br i1 %v4_2899f, label %dec_label_pc_289a1, label %bb

bb:                                               ; preds = %dec_label_pc_28992
  %v6_2899f = call i32 @_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh()
  %v1_289a6.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_289a1

dec_label_pc_289a1:                               ; preds = %dec_label_pc_28992, %bb
  %v1_289a6 = phi i32 [ %v1_2899e, %dec_label_pc_28992 ], [ %v1_289a6.pre, %bb ]
  %v0_289a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_289a6 = add i32 %v1_289a6, -12
  %v3_289a6 = inttoptr i32 %v2_289a6 to i32*
  store i32 %v0_289a1, i32* %v3_289a6, align 4
  %v0_289ab = load i32, i32* @ebp, align 4
  %v1_289ab = add i32 %v0_289ab, -28
  %v2_289ab = inttoptr i32 %v1_289ab to i32*
  %v3_289ab = load i32, i32* %v2_289ab, align 4
  %v1_289ae = add i32 %v0_289ab, -32
  %v2_289ae = inttoptr i32 %v1_289ae to i32*
  %v3_289ae = load i32, i32* %v2_289ae, align 4
  %v2_289b8 = call i32 @unknown_564be(i32 %v3_289ab, i32 %v3_289ae)
  %v0_289c0 = load i32, i32* @ebp, align 4
  %v1_289c0 = add i32 %v0_289c0, -28
  %v2_289c0 = inttoptr i32 %v1_289c0 to i32*
  %v3_289c0 = load i32, i32* %v2_289c0, align 4
  store i32 %v3_289c0, i32* @eax, align 4
  %v1_289c3 = add i32 %v0_289c0, -12
  %v2_289c3 = inttoptr i32 %v1_289c3 to i32*
  %v3_289c3 = load i32, i32* %v2_289c3, align 4
  %v1_289c6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_289c6 = icmp eq i32 %v1_289c6, %v3_289c3
  br i1 %v3_289c6, label %bb6, label %dec_label_pc_289cf

bb6:                                              ; preds = %dec_label_pc_289a1
  %v1_289cd = call i32 @function_289d4()
  br label %dec_label_pc_289cf

dec_label_pc_289cf:                               ; preds = %bb6, %dec_label_pc_289a1
  %v2_289cd = phi i32 [ %v1_289cd, %bb6 ], [ %v3_289c0, %dec_label_pc_289a1 ]
  ret i32 %v2_289cd

; uselistorder directives
  uselistorder label %dec_label_pc_289a1, { 1, 0 }
}

define i32 @function_289d4() local_unnamed_addr {
dec_label_pc_289d4:
  %v0_289d5 = load i32, i32* @eax, align 4
  ret i32 %v0_289d5
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_289d8:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_289fe

bb:                                               ; preds = %dec_label_pc_289d8
  %v2_289fc = call i32 @function_28a03(i32 %arg1)
  br label %dec_label_pc_289fe

dec_label_pc_289fe:                               ; preds = %bb, %dec_label_pc_289d8
  %v3_289fc = phi i32 [ %v2_289fc, %bb ], [ %arg1, %dec_label_pc_289d8 ]
  ret i32 %v3_289fc
}

define i32 @function_28a03(i32 %arg1) local_unnamed_addr {
dec_label_pc_28a03:
  %v0_28a04 = load i32, i32* @eax, align 4
  ret i32 %v0_28a04
}

define i32 @_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEjRKh() local_unnamed_addr {
dec_label_pc_28a06:
  %stack_var_-52 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-68 = alloca i32, align 4
  %tmp15 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 4
  %v10_28a31 = icmp eq i32 %tmp13, 0
  br i1 %v10_28a31, label %bb, label %dec_label_pc_28a3b

bb:                                               ; preds = %dec_label_pc_28a06
  %v6_28a35 = call i32 @function_28e18(i32 %tmp11, i32 0, i32 %tmp15, i32 %tmp17)
  br label %dec_label_pc_28a3b

dec_label_pc_28a3b:                               ; preds = %bb, %dec_label_pc_28a06
  %v1_28a3e = add i32 %tmp17, 8
  %v2_28a3e = inttoptr i32 %v1_28a3e to i32*
  %v3_28a3e = load i32, i32* %v2_28a3e, align 4
  %v1_28a46 = add i32 %tmp17, 4
  %v2_28a46 = inttoptr i32 %v1_28a46 to i32*
  %v3_28a46 = load i32, i32* %v2_28a46, align 4
  %v2_28a4b = sub i32 %v3_28a3e, %v3_28a46
  %v10_28a4f = icmp ult i32 %v2_28a4b, %tmp13
  br i1 %v10_28a4f, label %bb22, label %dec_label_pc_28a58

bb22:                                             ; preds = %dec_label_pc_28a3b
  %v1_28a52 = call i32 @function_28c04()
  br label %dec_label_pc_28a58

dec_label_pc_28a58:                               ; preds = %bb22, %dec_label_pc_28a3b
  %v2_28a61 = ptrtoint i32* %stack_var_-52 to i32
  %v2_28a6e = call i32 @unknown_3f2e8(i32 %v2_28a61, i32 %tmp17)
  %v2_28a76 = ptrtoint i32* %stack_var_-68 to i32
  %v2_28a83 = call i32 @unknown_3fc92(i32 %v2_28a61, i32 %v2_28a76)
  %v3_28a8e = load i32, i32* %v2_28a46, align 4
  %tmp25 = icmp ugt i32 %v2_28a83, %tmp13
  br i1 %tmp25, label %dec_label_pc_28aa0, label %bb24

bb24:                                             ; preds = %dec_label_pc_28a58
  %v5_28a9a = call i32 @function_28b4a(i32 %v2_28a83, i32 %v3_28a8e)
  br label %dec_label_pc_28aa0

dec_label_pc_28aa0:                               ; preds = %dec_label_pc_28a58, %bb24
  %v1_28aa6 = call i32 @unknown_43f3e(i32 %tmp17)
  %v3_28aae = load i32, i32* %v2_28a46, align 4
  %v2_28ac2 = sub i32 %v3_28aae, %tmp13
  %v4_28ad3 = call i32 @unknown_4b680(i32 %v2_28ac2, i32 %v3_28aae, i32 %v3_28aae, i32 %v1_28aa6)
  %v3_28adb = load i32, i32* %v2_28a46, align 4
  %v5_28ae0 = add i32 %v3_28adb, %tmp13
  store i32 %v5_28ae0, i32* %v2_28a46, align 4
  %v5_28af0 = sub i32 %v3_28a8e, %tmp13
  %v1_28af9 = call i32 @unknown_44dae(i32 %v2_28a76)
  %v1_28afe = inttoptr i32 %v1_28af9 to i32*
  %v2_28afe = load i32, i32* %v1_28afe, align 4
  %v3_28b0e = call i32 @unknown_4b547(i32 %v2_28afe, i32 %v5_28af0, i32 %v3_28a8e)
  %v1_28b19 = call i32 @unknown_44dae(i32 %v2_28a76)
  ret i32 %v2_28a76

; uselistorder directives
  uselistorder i32 %v3_28aae, { 2, 1, 0 }
  uselistorder i32 %v2_28a83, { 1, 0 }
  uselistorder i32 %tmp13, { 2, 1, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_28aa0, { 1, 0 }
}

define i32 @function_28b2e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_28b2e:
  %v2_28b2e = load i32, i32* @eax, align 4
  %v4_28b2e = mul i32 %v2_28b2e, 2
  %v21_28b2e = inttoptr i32 %v2_28b2e to i32*
  store i32 %v4_28b2e, i32* %v21_28b2e, align 4
  %v0_28b32 = load i32, i32* @ebp, align 4
  %v1_28b32 = add i32 %v0_28b32, -13
  %v0_28b39 = load i32, i32* @ebx, align 4
  %v0_28b3d = load i32, i32* @eax, align 4
  %v3_28b40 = call i32 @unknown_56586(i32 %v0_28b3d, i32 %v0_28b39, i32 %v1_28b32)
  store i32 %v3_28b40, i32* @eax, align 4
  %v4_28b45 = call i32 @function_28e18(i32 %v0_28b3d, i32 %v0_28b39, i32 %v1_28b32, i32 ptrtoint (i32* @9 to i32))
  ret i32 %v4_28b45

; uselistorder directives
  uselistorder i32 %v2_28b2e, { 1, 0 }
}

define i32 @function_28b4a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28b4a:
  %ebx.global-to-local = alloca i32, align 4
  %v0_28b4a = load i32, i32* @ebp, align 4
  %v1_28b4a = add i32 %v0_28b4a, -60
  %v2_28b4a = inttoptr i32 %v1_28b4a to i32*
  %v3_28b4a = load i32, i32* %v2_28b4a, align 4
  %v1_28b50 = call i32 @unknown_43f3e(i32 %v3_28b4a)
  %v0_28b55 = load i32, i32* @ebp, align 4
  %v1_28b55 = add i32 %v0_28b55, -36
  %v2_28b55 = inttoptr i32 %v1_28b55 to i32*
  %v3_28b55 = load i32, i32* %v2_28b55, align 4
  %v1_28b58 = add i32 %v0_28b55, -68
  %v2_28b58 = inttoptr i32 %v1_28b58 to i32*
  %v3_28b58 = load i32, i32* %v2_28b58, align 4
  %v2_28b5b = sub i32 %v3_28b58, %v3_28b55
  %v1_28b5d = add i32 %v0_28b55, -60
  %v2_28b5d = inttoptr i32 %v1_28b5d to i32*
  %v3_28b5d = load i32, i32* %v2_28b5d, align 4
  %v1_28b60 = add i32 %v3_28b5d, 4
  %v2_28b60 = inttoptr i32 %v1_28b60 to i32*
  %v3_28b60 = load i32, i32* %v2_28b60, align 4
  %v1_28b67 = add i32 %v0_28b55, -13
  %v4_28b75 = call i32 @unknown_4a9b3(i32 %v3_28b60, i32 %v2_28b5b, i32 %v1_28b67, i32 %v1_28b50)
  %v0_28b7a = load i32, i32* @ebp, align 4
  %v1_28b7a = add i32 %v0_28b7a, -60
  %v2_28b7a = inttoptr i32 %v1_28b7a to i32*
  %v3_28b7a = load i32, i32* %v2_28b7a, align 4
  %v1_28b7d = add i32 %v3_28b7a, 4
  %v2_28b7d = inttoptr i32 %v1_28b7d to i32*
  %v3_28b7d = load i32, i32* %v2_28b7d, align 4
  %v1_28b80 = add i32 %v0_28b7a, -36
  %v2_28b80 = inttoptr i32 %v1_28b80 to i32*
  %v3_28b80 = load i32, i32* %v2_28b80, align 4
  %v1_28b83 = add i32 %v0_28b7a, -68
  %v2_28b83 = inttoptr i32 %v1_28b83 to i32*
  %v3_28b83 = load i32, i32* %v2_28b83, align 4
  %v2_28b88 = sub i32 %v3_28b83, %v3_28b80
  store i32 %v2_28b88, i32* %ebx.global-to-local, align 4
  %v2_28b8c = add i32 %v2_28b88, %v3_28b7d
  %v3_28b8e = load i32, i32* %v2_28b7a, align 4
  %v2_28b91 = add i32 %v3_28b8e, 4
  %v3_28b91 = inttoptr i32 %v2_28b91 to i32*
  store i32 %v2_28b8c, i32* %v3_28b91, align 4
  %v0_28b94 = load i32, i32* @ebp, align 4
  %v1_28b94 = add i32 %v0_28b94, -60
  %v2_28b94 = inttoptr i32 %v1_28b94 to i32*
  %v3_28b94 = load i32, i32* %v2_28b94, align 4
  %v1_28b9a = call i32 @unknown_43f3e(i32 %v3_28b94)
  store i32 %v1_28b9a, i32* %ebx.global-to-local, align 4
  %v0_28ba1 = load i32, i32* @ebp, align 4
  %v1_28ba1 = add i32 %v0_28ba1, -60
  %v2_28ba1 = inttoptr i32 %v1_28ba1 to i32*
  %v3_28ba1 = load i32, i32* %v2_28ba1, align 4
  %v1_28ba4 = add i32 %v3_28ba1, 4
  %v2_28ba4 = inttoptr i32 %v1_28ba4 to i32*
  %v3_28ba4 = load i32, i32* %v2_28ba4, align 4
  %v1_28ba7 = add i32 %v0_28ba1, -64
  %v1_28bad = call i32 @unknown_44dae(i32 %v1_28ba7)
  %v1_28bb2 = inttoptr i32 %v1_28bad to i32*
  %v2_28bb2 = load i32, i32* %v1_28bb2, align 4
  %v0_28bb4 = load i32, i32* %ebx.global-to-local, align 4
  %v0_28bbc = load i32, i32* @ebp, align 4
  %v1_28bbc = add i32 %v0_28bbc, -32
  %v2_28bbc = inttoptr i32 %v1_28bbc to i32*
  %v3_28bbc = load i32, i32* %v2_28bbc, align 4
  %v4_28bc6 = call i32 @unknown_4b680(i32 %v2_28bb2, i32 %v3_28bbc, i32 %v3_28ba4, i32 %v0_28bb4)
  %v0_28bcb = load i32, i32* @ebp, align 4
  %v1_28bcb = add i32 %v0_28bcb, -60
  %v2_28bcb = inttoptr i32 %v1_28bcb to i32*
  %v3_28bcb = load i32, i32* %v2_28bcb, align 4
  %v1_28bce = add i32 %v3_28bcb, 4
  %v2_28bce = inttoptr i32 %v1_28bce to i32*
  %v3_28bce = load i32, i32* %v2_28bce, align 4
  %v2_28bd3 = add i32 %v0_28bcb, -36
  %v3_28bd3 = inttoptr i32 %v2_28bd3 to i32*
  %v4_28bd3 = load i32, i32* %v3_28bd3, align 4
  %v5_28bd3 = add i32 %v4_28bd3, %v3_28bce
  %v3_28bd6 = load i32, i32* %v2_28bcb, align 4
  %v2_28bd9 = add i32 %v3_28bd6, 4
  %v3_28bd9 = inttoptr i32 %v2_28bd9 to i32*
  store i32 %v5_28bd3, i32* %v3_28bd9, align 4
  %v0_28bdc = load i32, i32* @ebp, align 4
  %v1_28bdc = add i32 %v0_28bdc, -64
  %v1_28be2 = call i32 @unknown_44dae(i32 %v1_28bdc)
  %v1_28be7 = inttoptr i32 %v1_28be2 to i32*
  %v2_28be7 = load i32, i32* %v1_28be7, align 4
  %v0_28be9 = load i32, i32* @ebp, align 4
  %v1_28be9 = add i32 %v0_28be9, -13
  %v1_28bf0 = add i32 %v0_28be9, -32
  %v2_28bf0 = inttoptr i32 %v1_28bf0 to i32*
  %v3_28bf0 = load i32, i32* %v2_28bf0, align 4
  %v3_28bfa = call i32 @unknown_56586(i32 %v2_28be7, i32 %v3_28bf0, i32 %v1_28be9)
  store i32 %v3_28bfa, i32* @eax, align 4
  %v4_28bff = call i32 @function_28e18(i32 %v2_28be7, i32 %v3_28bf0, i32 %v1_28be9, i32 %v0_28bb4)
  ret i32 %v4_28bff

; uselistorder directives
  uselistorder i32 %v1_28be9, { 1, 0 }
  uselistorder i32 %v2_28be7, { 1, 0 }
  uselistorder i32 %v0_28b7a, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_56586, { 1, 0 }
}

define i32 @function_28c04() local_unnamed_addr {
dec_label_pc_28c04:
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_28c0c = load i32, i32* @ebp, align 4
  %v1_28c0c = add i32 %v0_28c0c, -68
  %v2_28c0c = inttoptr i32 %v1_28c0c to i32*
  %v3_28c0c = load i32, i32* %v2_28c0c, align 4
  %v1_28c13 = add i32 %v0_28c0c, -60
  %v2_28c13 = inttoptr i32 %v1_28c13 to i32*
  %v3_28c13 = load i32, i32* %v2_28c13, align 4
  %v4_28c19 = call i32 @unknown_4b5ae(i32 %v3_28c13, i32 %v3_28c0c, i32 ptrtoint ([23 x i8]* @global_var_c61b.2286 to i32))
  %v1_28c1e = load i32, i32* @ebp, align 4
  %v2_28c1e = add i32 %v1_28c1e, -28
  %v3_28c1e = inttoptr i32 %v2_28c1e to i32*
  store i32 %v4_28c19, i32* %v3_28c1e, align 4
  %v0_28c21 = load i32, i32* @ebp, align 4
  %v1_28c21 = add i32 %v0_28c21, -44
  %v1_28c24 = add i32 %v0_28c21, -60
  %v2_28c24 = inttoptr i32 %v1_28c24 to i32*
  %v3_28c24 = load i32, i32* %v2_28c24, align 4
  %v2_28c2e = call i32 @unknown_3efc0(i32 %v1_28c21, i32 %v3_28c24)
  %v0_28c36 = load i32, i32* @ebp, align 4
  %v1_28c36 = add i32 %v0_28c36, -44
  %v1_28c3d = add i32 %v0_28c36, -64
  store i32 %v1_28c3d, i32* %stack_var_-4, align 4
  %v2_28c43 = call i32 @unknown_3fc92(i32 %v1_28c3d, i32 %v1_28c36)
  %v1_28c48 = load i32, i32* @ebp, align 4
  %v2_28c48 = add i32 %v1_28c48, -24
  %v3_28c48 = inttoptr i32 %v2_28c48 to i32*
  store i32 %v2_28c43, i32* %v3_28c48, align 4
  %v0_28c4b = load i32, i32* @ebp, align 4
  %v1_28c4b = add i32 %v0_28c4b, -60
  %v2_28c4b = inttoptr i32 %v1_28c4b to i32*
  %v3_28c4b = load i32, i32* %v2_28c4b, align 4
  %v1_28c4e = add i32 %v0_28c4b, -28
  %v2_28c4e = inttoptr i32 %v1_28c4e to i32*
  %v3_28c4e = load i32, i32* %v2_28c4e, align 4
  store i32 %v3_28c4b, i32* %stack_var_-4, align 4
  %v2_28c58 = call i32 @unknown_4a95c(i32 %v3_28c4b, i32 %v3_28c4e)
  %v1_28c5d = load i32, i32* @ebp, align 4
  %v2_28c5d = add i32 %v1_28c5d, -20
  %v3_28c5d = inttoptr i32 %v2_28c5d to i32*
  store i32 %v2_28c58, i32* %v3_28c5d, align 4
  %v0_28c60 = load i32, i32* @ebp, align 4
  %v1_28c60 = add i32 %v0_28c60, -20
  %v2_28c60 = inttoptr i32 %v1_28c60 to i32*
  %v3_28c60 = load i32, i32* %v2_28c60, align 4
  %v2_28c63 = add i32 %v0_28c60, -40
  %v3_28c63 = inttoptr i32 %v2_28c63 to i32*
  store i32 %v3_28c60, i32* %v3_28c63, align 4
  %v0_28c66 = load i32, i32* @ebp, align 4
  %v1_28c66 = add i32 %v0_28c66, -60
  %v2_28c66 = inttoptr i32 %v1_28c66 to i32*
  %v3_28c66 = load i32, i32* %v2_28c66, align 4
  store i32 %v3_28c66, i32* %stack_var_-4, align 4
  %v1_28c6c = call i32 @unknown_43f3e(i32 %v3_28c66)
  %v0_28c71 = load i32, i32* @ebp, align 4
  %v1_28c71 = add i32 %v0_28c71, -24
  %v2_28c71 = inttoptr i32 %v1_28c71 to i32*
  %v3_28c71 = load i32, i32* %v2_28c71, align 4
  %v1_28c74 = add i32 %v0_28c71, -20
  %v2_28c74 = inttoptr i32 %v1_28c74 to i32*
  %v3_28c74 = load i32, i32* %v2_28c74, align 4
  %v2_28c77 = add i32 %v3_28c74, %v3_28c71
  %v1_28c7d = add i32 %v0_28c71, -72
  %v2_28c7d = inttoptr i32 %v1_28c7d to i32*
  %v3_28c7d = load i32, i32* %v2_28c7d, align 4
  %v1_28c84 = add i32 %v0_28c71, -68
  %v2_28c84 = inttoptr i32 %v1_28c84 to i32*
  %v3_28c84 = load i32, i32* %v2_28c84, align 4
  store i32 %v2_28c77, i32* %stack_var_-4, align 4
  %v5_28c8e = call i32 @unknown_4a9b3(i32 %v2_28c77, i32 %v3_28c84, i32 %v3_28c7d, i32 %v1_28c6c)
  %v0_28c93 = load i32, i32* @ebp, align 4
  %v1_28c93 = add i32 %v0_28c93, -40
  %v2_28c93 = inttoptr i32 %v1_28c93 to i32*
  store i32 0, i32* %v2_28c93, align 4
  %v0_28c9a = load i32, i32* @ebp, align 4
  %v1_28c9a = add i32 %v0_28c9a, -60
  %v2_28c9a = inttoptr i32 %v1_28c9a to i32*
  %v3_28c9a = load i32, i32* %v2_28c9a, align 4
  store i32 %v3_28c9a, i32* %stack_var_-4, align 4
  %v1_28ca0 = call i32 @unknown_43f3e(i32 %v3_28c9a)
  store i32 %v1_28ca0, i32* %ebx.global-to-local, align 4
  %v0_28ca7 = load i32, i32* @ebp, align 4
  %v1_28ca7 = add i32 %v0_28ca7, -64
  store i32 %v1_28ca7, i32* %stack_var_-4, align 4
  %v1_28cad = call i32 @unknown_44dae(i32 %v1_28ca7)
  %v1_28cb2 = inttoptr i32 %v1_28cad to i32*
  %v2_28cb2 = load i32, i32* %v1_28cb2, align 4
  %v0_28cb4 = load i32, i32* @ebp, align 4
  %v1_28cb4 = add i32 %v0_28cb4, -60
  %v2_28cb4 = inttoptr i32 %v1_28cb4 to i32*
  %v3_28cb4 = load i32, i32* %v2_28cb4, align 4
  %v1_28cb7 = inttoptr i32 %v3_28cb4 to i32*
  %v2_28cb7 = load i32, i32* %v1_28cb7, align 4
  %v0_28cb9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_28cbd = add i32 %v0_28cb4, -20
  %v2_28cbd = inttoptr i32 %v1_28cbd to i32*
  %v3_28cbd = load i32, i32* %v2_28cbd, align 4
  store i32 %v2_28cb7, i32* %stack_var_-4, align 4
  %v5_28ccb = call i32 @unknown_4b680(i32 %v2_28cb7, i32 %v2_28cb2, i32 %v3_28cbd, i32 %v0_28cb9)
  %v1_28cd0 = load i32, i32* @ebp, align 4
  %v2_28cd0 = add i32 %v1_28cd0, -40
  %v3_28cd0 = inttoptr i32 %v2_28cd0 to i32*
  store i32 %v5_28ccb, i32* %v3_28cd0, align 4
  %v0_28cd3 = load i32, i32* @ebp, align 4
  %v1_28cd3 = add i32 %v0_28cd3, -68
  %v2_28cd3 = inttoptr i32 %v1_28cd3 to i32*
  %v3_28cd3 = load i32, i32* %v2_28cd3, align 4
  %v1_28cd6 = add i32 %v0_28cd3, -40
  %v2_28cd6 = inttoptr i32 %v1_28cd6 to i32*
  %v3_28cd6 = load i32, i32* %v2_28cd6, align 4
  %v5_28cd6 = add i32 %v3_28cd6, %v3_28cd3
  store i32 %v5_28cd6, i32* %v2_28cd6, align 4
  %v0_28cd9 = load i32, i32* @ebp, align 4
  %v1_28cd9 = add i32 %v0_28cd9, -60
  %v2_28cd9 = inttoptr i32 %v1_28cd9 to i32*
  %v3_28cd9 = load i32, i32* %v2_28cd9, align 4
  store i32 %v3_28cd9, i32* %stack_var_-4, align 4
  %v1_28cdf = call i32 @unknown_43f3e(i32 %v3_28cd9)
  store i32 %v1_28cdf, i32* %ebx.global-to-local, align 4
  %v0_28ce6 = load i32, i32* @ebp, align 4
  %v1_28ce6 = add i32 %v0_28ce6, -60
  %v2_28ce6 = inttoptr i32 %v1_28ce6 to i32*
  %v3_28ce6 = load i32, i32* %v2_28ce6, align 4
  %v1_28ce9 = add i32 %v3_28ce6, 4
  %v2_28ce9 = inttoptr i32 %v1_28ce9 to i32*
  %v3_28ce9 = load i32, i32* %v2_28ce9, align 4
  store i32 %v3_28ce9, i32* %esi.global-to-local, align 4
  %v1_28cec = add i32 %v0_28ce6, -64
  store i32 %v1_28cec, i32* %stack_var_-4, align 4
  %v1_28cf2 = call i32 @unknown_44dae(i32 %v1_28cec)
  %v1_28cf7 = inttoptr i32 %v1_28cf2 to i32*
  %v2_28cf7 = load i32, i32* %v1_28cf7, align 4
  %v0_28cf9 = load i32, i32* %ebx.global-to-local, align 4
  %v0_28cfd = load i32, i32* @ebp, align 4
  %v1_28cfd = add i32 %v0_28cfd, -40
  %v2_28cfd = inttoptr i32 %v1_28cfd to i32*
  %v3_28cfd = load i32, i32* %v2_28cfd, align 4
  %v0_28d04 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_28cf7, i32* %stack_var_-4, align 4
  %v5_28d0b = call i32 @unknown_4b680(i32 %v2_28cf7, i32 %v0_28d04, i32 %v3_28cfd, i32 %v0_28cf9)
  %v1_28d10 = load i32, i32* @ebp, align 4
  %v2_28d10 = add i32 %v1_28d10, -40
  %v3_28d10 = inttoptr i32 %v2_28d10 to i32*
  store i32 %v5_28d0b, i32* %v3_28d10, align 4
  %v0_28d13 = load i32, i32* @ebp, align 4
  %v1_28d13 = add i32 %v0_28d13, -60
  %v2_28d13 = inttoptr i32 %v1_28d13 to i32*
  %v3_28d13 = load i32, i32* %v2_28d13, align 4
  store i32 %v3_28d13, i32* %stack_var_-4, align 4
  %v1_28d19 = call i32 @unknown_43f3e(i32 %v3_28d13)
  %v0_28d1e = load i32, i32* @ebp, align 4
  %v1_28d1e = add i32 %v0_28d1e, -60
  %v2_28d1e = inttoptr i32 %v1_28d1e to i32*
  %v3_28d1e = load i32, i32* %v2_28d1e, align 4
  %v1_28d21 = add i32 %v3_28d1e, 4
  %v2_28d21 = inttoptr i32 %v1_28d21 to i32*
  %v3_28d21 = load i32, i32* %v2_28d21, align 4
  %v1_28d27 = inttoptr i32 %v3_28d1e to i32*
  %v2_28d27 = load i32, i32* %v1_28d27, align 4
  store i32 %v2_28d27, i32* %stack_var_-4, align 4
  %v3_28d34 = call i32 @unknown_43f6b(i32 %v2_28d27, i32 %v3_28d21, i32 %v1_28d19)
  %v0_28d39 = load i32, i32* @ebp, align 4
  %v1_28d39 = add i32 %v0_28d39, -60
  %v2_28d39 = inttoptr i32 %v1_28d39 to i32*
  %v3_28d39 = load i32, i32* %v2_28d39, align 4
  %v1_28d3c = add i32 %v3_28d39, 8
  %v2_28d3c = inttoptr i32 %v1_28d3c to i32*
  %v3_28d3c = load i32, i32* %v2_28d3c, align 4
  %v1_28d44 = inttoptr i32 %v3_28d39 to i32*
  %v2_28d44 = load i32, i32* %v1_28d44, align 4
  %v2_28d48 = sub i32 %v3_28d3c, %v2_28d44
  %v3_28d4e = load i32, i32* %v2_28d39, align 4
  %v1_28d51 = inttoptr i32 %v3_28d4e to i32*
  %v2_28d51 = load i32, i32* %v1_28d51, align 4
  store i32 %v3_28d4e, i32* %stack_var_-4, align 4
  %v3_28d61 = call i32 @unknown_44206(i32 %v3_28d4e, i32 %v2_28d51, i32 %v2_28d48)
  %v0_28d66 = load i32, i32* @ebp, align 4
  %v1_28d66 = add i32 %v0_28d66, -60
  %v2_28d66 = inttoptr i32 %v1_28d66 to i32*
  %v3_28d66 = load i32, i32* %v2_28d66, align 4
  %v1_28d69 = add i32 %v0_28d66, -20
  %v2_28d69 = inttoptr i32 %v1_28d69 to i32*
  %v3_28d69 = load i32, i32* %v2_28d69, align 4
  %v2_28d6c = inttoptr i32 %v3_28d66 to i32*
  store i32 %v3_28d69, i32* %v2_28d6c, align 4
  %v0_28d6e = load i32, i32* @ebp, align 4
  %v1_28d6e = add i32 %v0_28d6e, -60
  %v2_28d6e = inttoptr i32 %v1_28d6e to i32*
  %v3_28d6e = load i32, i32* %v2_28d6e, align 4
  %v1_28d71 = add i32 %v0_28d6e, -40
  %v2_28d71 = inttoptr i32 %v1_28d71 to i32*
  %v3_28d71 = load i32, i32* %v2_28d71, align 4
  %v2_28d74 = add i32 %v3_28d6e, 4
  %v3_28d74 = inttoptr i32 %v2_28d74 to i32*
  store i32 %v3_28d71, i32* %v3_28d74, align 4
  %v0_28d77 = load i32, i32* @ebp, align 4
  %v1_28d77 = add i32 %v0_28d77, -28
  %v2_28d77 = inttoptr i32 %v1_28d77 to i32*
  %v3_28d77 = load i32, i32* %v2_28d77, align 4
  %v1_28d7a = add i32 %v0_28d77, -20
  %v2_28d7a = inttoptr i32 %v1_28d7a to i32*
  %v3_28d7a = load i32, i32* %v2_28d7a, align 4
  %v2_28d7d = add i32 %v3_28d7a, %v3_28d77
  %v1_28d7f = add i32 %v0_28d77, -60
  %v2_28d7f = inttoptr i32 %v1_28d7f to i32*
  %v3_28d7f = load i32, i32* %v2_28d7f, align 4
  store i32 %v3_28d7f, i32* @eax, align 4
  %v2_28d82 = add i32 %v3_28d7f, 8
  %v3_28d82 = inttoptr i32 %v2_28d82 to i32*
  store i32 %v2_28d7d, i32* %v3_28d82, align 4
  %v0_28d85 = load i32, i32* %stack_var_-4, align 4
  %v5_28d85 = call i32 @function_28e18(i32 %v0_28d85, i32 %v2_28d51, i32 %v2_28d48, i32 %v0_28cf9)
  ret i32 %v5_28d85

; uselistorder directives
  uselistorder i32 %v2_28d51, { 1, 0 }
  uselistorder i32 %v3_28d4e, { 1, 0, 2 }
  uselistorder i32 %v2_28d48, { 1, 0 }
  uselistorder i32 %v2_28cf7, { 1, 0 }
  uselistorder i32 %v2_28cb7, { 1, 0 }
  uselistorder i32 %v2_28c77, { 1, 0 }
  uselistorder i32 %v0_28c71, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @function_28e18, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4b680, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_44dae, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_4a9b3, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3fc92, { 1, 0 }
}

define i32 @function_28d8b() local_unnamed_addr {
dec_label_pc_28d8b:
  %eax.global-to-local = alloca i32, align 4
  %v0_28d8b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_28d8b
}

define i32 @function_28da2() local_unnamed_addr {
dec_label_pc_28da2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28da2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_28da2 = add i32 %v0_28da2, 1962989693
  %v2_28da2 = inttoptr i32 %v1_28da2 to i32*
  %v3_28da2 = load i32, i32* %v2_28da2, align 4
  %v4_28da2 = add i32 %v3_28da2, 1
  store i32 %v4_28da2, i32* %v2_28da2, align 4
  %v0_28da8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_28da8 = add i32 %v0_28da8, 76137541
  %v2_28da8 = inttoptr i32 %v1_28da8 to i8*
  %v3_28da8 = load i8, i8* %v2_28da8, align 1
  %v4_28da8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_28da8 = trunc i32 %v4_28da8 to i8
  %v6_28da8 = xor i8 %v5_28da8, %v3_28da8
  store i8 %v6_28da8, i8* %v2_28da8, align 1
  %v0_28dae = load i32, i32* %eax.global-to-local, align 4
  %v11_28dae = and i32 %v0_28dae, -24
  store i32 %v11_28dae, i32* %eax.global-to-local, align 4
  %v0_28db0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_28db0 = add i32 %v0_28db0, 1435172865
  %v2_28db0 = inttoptr i32 %v1_28db0 to i8*
  %v3_28db0 = load i8, i8* %v2_28db0, align 1
  %v4_28db0 = zext i8 %v3_28db0 to i32
  %v5_28db0 = load i32, i32* %edx.global-to-local, align 4
  %v6_28db0 = mul nuw nsw i32 %v4_28db0, 256
  %v7_28db0 = and i32 %v5_28db0, -65281
  %v8_28db0 = or i32 %v7_28db0, %v6_28db0
  store i32 %v8_28db0, i32* %edx.global-to-local, align 4
  ret i32 %v11_28dae

; uselistorder directives
  uselistorder i32 %v11_28dae, { 1, 0 }
}

define i32 @function_28dbe() local_unnamed_addr {
dec_label_pc_28dbe:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_28dbf = load i32, i32* @ebp, align 4
  %v1_28dbf = add i32 %v0_28dbf, -24
  %v2_28dbf = inttoptr i32 %v1_28dbf to i32*
  %v3_28dbf = load i32, i32* %v2_28dbf, align 4
  %v1_28dc2 = add i32 %v0_28dbf, -20
  %v2_28dc2 = inttoptr i32 %v1_28dc2 to i32*
  %v3_28dc2 = load i32, i32* %v2_28dc2, align 4
  %v2_28dc5 = add i32 %v3_28dc2, %v3_28dbf
  %v0_28dc7 = load i32, i32* %eax.global-to-local, align 4
  %v0_28dcb = load i32, i32* %edx.global-to-local, align 4
  %v3_28dd2 = call i32 @unknown_43f6b(i32 %v2_28dc5, i32 %v0_28dcb, i32 %v0_28dc7)
  store i32 %v3_28dd2, i32* %eax.global-to-local, align 4
  %v0_28dd7 = call i32 @function_28dfa()
  store i32 %v0_28dd7, i32* %eax.global-to-local, align 4
  ret i32 %v0_28dd7
}

define i32 @function_28dd9() local_unnamed_addr {
dec_label_pc_28dd9:
  %ebp.global-to-local = alloca i32, align 4
  %v0_28dd9 = load i32, i32* %ebp.global-to-local, align 4
  %v1_28dd9 = add i32 %v0_28dd9, -60
  %v2_28dd9 = inttoptr i32 %v1_28dd9 to i32*
  %v3_28dd9 = load i32, i32* %v2_28dd9, align 4
  %v1_28ddf = call i32 @unknown_43f3e(i32 %v3_28dd9)
  %v1_28de8 = add i32 %v0_28dd9, -40
  %v2_28de8 = inttoptr i32 %v1_28de8 to i32*
  %v3_28de8 = load i32, i32* %v2_28de8, align 4
  %v1_28def = add i32 %v0_28dd9, -20
  %v2_28def = inttoptr i32 %v1_28def to i32*
  %v3_28def = load i32, i32* %v2_28def, align 4
  %v3_28df5 = call i32 @unknown_43f6b(i32 %v3_28def, i32 %v3_28de8, i32 %v1_28ddf)
  ret i32 %v3_28df5

; uselistorder directives
  uselistorder i32 %v0_28dd9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @unknown_43f6b, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_43f3e, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_28dfa() local_unnamed_addr {
dec_label_pc_28dfa:
  %v0_28dfa = load i32, i32* @ebp, align 4
  %v1_28dfa = add i32 %v0_28dfa, -60
  %v2_28dfa = inttoptr i32 %v1_28dfa to i32*
  %v3_28dfa = load i32, i32* %v2_28dfa, align 4
  %v1_28dfd = add i32 %v0_28dfa, -28
  %v2_28dfd = inttoptr i32 %v1_28dfd to i32*
  %v3_28dfd = load i32, i32* %v2_28dfd, align 4
  %v1_28e04 = add i32 %v0_28dfa, -20
  %v2_28e04 = inttoptr i32 %v1_28e04 to i32*
  %v3_28e04 = load i32, i32* %v2_28e04, align 4
  %v3_28e0e = call i32 @unknown_44206(i32 %v3_28dfa, i32 %v3_28e04, i32 %v3_28dfd)
  ret i32 %v3_28e0e

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_44206, { 1, 0 }
}

define i32 @function_28e18(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_28e18:
  %v0_28e18 = load i32, i32* @ebp, align 4
  %v1_28e18 = add i32 %v0_28e18, -12
  %v2_28e18 = inttoptr i32 %v1_28e18 to i32*
  %v3_28e18 = load i32, i32* %v2_28e18, align 4
  %v1_28e1b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28e1b = icmp eq i32 %v1_28e1b, %v3_28e18
  br i1 %v3_28e1b, label %bb, label %dec_label_pc_28e18.dec_label_pc_28e24_crit_edge

dec_label_pc_28e18.dec_label_pc_28e24_crit_edge:  ; preds = %dec_label_pc_28e18
  %v2_28e22.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_28e24

bb:                                               ; preds = %dec_label_pc_28e18
  %v1_28e22 = call i32 @function_28e29()
  br label %dec_label_pc_28e24

dec_label_pc_28e24:                               ; preds = %dec_label_pc_28e18.dec_label_pc_28e24_crit_edge, %bb
  %v2_28e22 = phi i32 [ %v2_28e22.pre, %dec_label_pc_28e18.dec_label_pc_28e24_crit_edge ], [ %v1_28e22, %bb ]
  ret i32 %v2_28e22

; uselistorder directives
  uselistorder label %dec_label_pc_28e24, { 1, 0 }
}

define i32 @function_28e29() local_unnamed_addr {
dec_label_pc_28e29:
  %v0_28e29 = load i32, i32* @ebp, align 4
  %v1_28e2e = inttoptr i32 %v0_28e29 to i32*
  %v2_28e2e = load i32, i32* %v1_28e2e, align 4
  store i32 %v2_28e2e, i32* @ebp, align 4
  %v0_28e2f = load i32, i32* @eax, align 4
  ret i32 %v0_28e2f
}

define i32 @_ZNKSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28e30:
  %v0_28e42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_28e42
}

define i32 @function_28e4a(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e4a:
  %v0_28e4d = load i32, i32* @ebp, align 4
  %v1_28e4d = add i32 %v0_28e4d, -32
  %v2_28e4d = inttoptr i32 %v1_28e4d to i32*
  %v3_28e4d = load i32, i32* %v2_28e4d, align 4
  %v1_28e53 = call i32 @unknown_56a16(i32 %v3_28e4d)
  %v0_28e5c = load i32, i32* @ebp, align 4
  %v1_28e5c = add i32 %v0_28e5c, -28
  %v2_28e5c = inttoptr i32 %v1_28e5c to i32*
  %v3_28e5c = load i32, i32* %v2_28e5c, align 4
  %v2_28e62 = call i32 @unknown_56a44(i32 %v3_28e5c, i32 %v1_28e53)
  %v0_28e67 = load i32, i32* @ebp, align 4
  %v1_28e67 = add i32 %v0_28e67, -28
  %v2_28e67 = inttoptr i32 %v1_28e67 to i32*
  %v3_28e67 = load i32, i32* %v2_28e67, align 4
  store i32 %v3_28e67, i32* @eax, align 4
  %v1_28e6a = add i32 %v0_28e67, -12
  %v2_28e6a = inttoptr i32 %v1_28e6a to i32*
  %v3_28e6a = load i32, i32* %v2_28e6a, align 4
  %v1_28e6d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_28e6d = icmp eq i32 %v1_28e6d, %v3_28e6a
  br i1 %v3_28e6d, label %bb, label %dec_label_pc_28e76

bb:                                               ; preds = %dec_label_pc_28e4a
  %v1_28e74 = call i32 @function_28e7b()
  br label %dec_label_pc_28e76

dec_label_pc_28e76:                               ; preds = %bb, %dec_label_pc_28e4a
  %v2_28e74 = phi i32 [ %v1_28e74, %bb ], [ %v3_28e67, %dec_label_pc_28e4a ]
  ret i32 %v2_28e74
}

define i32 @function_28e7b() local_unnamed_addr {
dec_label_pc_28e7b:
  %v0_28e7c = load i32, i32* @eax, align 4
  ret i32 %v0_28e7c
}

define i32 @_ZNSaISt4pairIKjiEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28e80:
  %v1_28e9d = call i32 @unknown_56ad0(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28eae

bb:                                               ; preds = %dec_label_pc_28e80
  %v1_28eac = call i32 @function_28eb3()
  br label %dec_label_pc_28eae

dec_label_pc_28eae:                               ; preds = %bb, %dec_label_pc_28e80
  %v2_28eac = phi i32 [ %v1_28eac, %bb ], [ 0, %dec_label_pc_28e80 ]
  ret i32 %v2_28eac
}

define i32 @function_28eb3() local_unnamed_addr {
dec_label_pc_28eb3:
  %v0_28eb4 = load i32, i32* @eax, align 4
  ret i32 %v0_28eb4
}

define i32 @_ZNSt4pairIKjiED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_28eb6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28ed9

bb:                                               ; preds = %dec_label_pc_28eb6
  %v2_28ed7 = call i32 @function_28ede(i32 %arg1)
  br label %dec_label_pc_28ed9

dec_label_pc_28ed9:                               ; preds = %bb, %dec_label_pc_28eb6
  %v3_28ed7 = phi i32 [ %v2_28ed7, %bb ], [ 0, %dec_label_pc_28eb6 ]
  ret i32 %v3_28ed7
}

define i32 @function_28ede(i32 %arg1) local_unnamed_addr {
dec_label_pc_28ede:
  %v0_28edf = load i32, i32* @eax, align 4
  ret i32 %v0_28edf
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEE7destroyEPS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28ee0:
  %v1_28f03 = call i32 @unknown_51d96(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28f14

bb:                                               ; preds = %dec_label_pc_28ee0
  %v1_28f12 = call i32 @function_28f19()
  br label %dec_label_pc_28f14

dec_label_pc_28f14:                               ; preds = %bb, %dec_label_pc_28ee0
  %v2_28f12 = phi i32 [ %v1_28f12, %bb ], [ 0, %dec_label_pc_28ee0 ]
  ret i32 %v2_28f12
}

define i32 @function_28f19() local_unnamed_addr {
dec_label_pc_28f19:
  %v0_28f1a = load i32, i32* @eax, align 4
  ret i32 %v0_28f1a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28f1c:
  %v3_28f4e = call i32 @unknown_56b96(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28f5f

bb:                                               ; preds = %dec_label_pc_28f1c
  %v1_28f5d = call i32 @function_28f64()
  br label %dec_label_pc_28f5f

dec_label_pc_28f5f:                               ; preds = %bb, %dec_label_pc_28f1c
  %v2_28f5d = phi i32 [ %v1_28f5d, %bb ], [ 0, %dec_label_pc_28f1c ]
  ret i32 %v2_28f5d
}

define i32 @function_28f64() local_unnamed_addr {
dec_label_pc_28f64:
  %v0_28f65 = load i32, i32* @eax, align 4
  ret i32 %v0_28f65
}

define i32 @_ZSt3maxIjERKT_S2_S2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28f66:
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v2_28f86 = load i32, i32* %arg1, align 4
  %v1_28f8b = inttoptr i32 %arg2 to i32*
  %v2_28f8b = load i32, i32* %v1_28f8b, align 4
  %v7_28f8d = icmp ult i32 %v2_28f86, %v2_28f8b
  %v1_28f8f = icmp eq i1 %v7_28f8d, false
  %storemerge = select i1 %v1_28f8f, i32 %tmp102, i32 %arg2
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28fa5

bb:                                               ; preds = %dec_label_pc_28f66
  %v1_28fa3 = call i32 @function_28faa()
  br label %dec_label_pc_28fa5

dec_label_pc_28fa5:                               ; preds = %bb, %dec_label_pc_28f66
  %v2_28fa3 = phi i32 [ %v1_28fa3, %bb ], [ %storemerge, %dec_label_pc_28f66 ]
  ret i32 %v2_28fa3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_28faa() local_unnamed_addr {
dec_label_pc_28faa:
  %v0_28fab = load i32, i32* @eax, align 4
  ret i32 %v0_28fab
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIPhEEvT_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28fac:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_28fd5

bb:                                               ; preds = %dec_label_pc_28fac
  %v3_28fd3 = call i32 @function_28fda(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_28fd5

dec_label_pc_28fd5:                               ; preds = %bb, %dec_label_pc_28fac
  %v4_28fd3 = phi i32 [ %v3_28fd3, %bb ], [ 0, %dec_label_pc_28fac ]
  ret i32 %v4_28fd3
}

define i32 @function_28fda(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28fda:
  %v0_28fdb = load i32, i32* @eax, align 4
  ret i32 %v0_28fdb
}

define i32 @_ZNSaIhEC1ERKS_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_28fdc:
  %v2_29006 = call i32 @unknown_56c98(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29017

bb:                                               ; preds = %dec_label_pc_28fdc
  %v1_29015 = call i32 @function_2901c()
  br label %dec_label_pc_29017

dec_label_pc_29017:                               ; preds = %bb, %dec_label_pc_28fdc
  %v2_29015 = phi i32 [ %v1_29015, %bb ], [ 0, %dec_label_pc_28fdc ]
  ret i32 %v2_29015
}

define i32 @function_2901c() local_unnamed_addr {
dec_label_pc_2901c:
  %v0_2901d = load i32, i32* @eax, align 4
  ret i32 %v0_2901d
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2901e:
  %v1_29047 = call i32 @unknown_56d0a(i32 %arg1)
  %v10_2904c = icmp ult i32 %v1_29047, %arg2
  %v1_2904f = zext i1 %v10_2904c to i32
  %v3_2904f = and i32 %v1_29047, -256
  %v4_2904f = or i32 %v1_2904f, %v3_2904f
  %v5_29052 = icmp eq i1 %v10_2904c, false
  br i1 %v5_29052, label %bb, label %dec_label_pc_29056

bb:                                               ; preds = %dec_label_pc_2901e
  %v1_29054 = call i32 @function_2905b()
  br label %dec_label_pc_29056

dec_label_pc_29056:                               ; preds = %bb, %dec_label_pc_2901e
  %v2_29054 = phi i32 [ %v1_29054, %bb ], [ %v4_2904f, %dec_label_pc_2901e ]
  ret i32 %v2_29054

; uselistorder directives
  uselistorder i1 %v10_2904c, { 1, 0 }
}

define i32 @function_2905b() local_unnamed_addr {
dec_label_pc_2905b:
  %v0_2905b = load i32, i32* @ebp, align 4
  %v1_2905b = add i32 %v0_2905b, -32
  %v2_2905b = inttoptr i32 %v1_2905b to i32*
  %v3_2905b = load i32, i32* %v2_2905b, align 4
  ret i32 %v3_2905b
}

define i32 @function_29075() local_unnamed_addr {
dec_label_pc_29075:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_29076() local_unnamed_addr {
dec_label_pc_29076:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29076 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29076 = add i32 %v0_29076, -1
  store i32 %v1_29076, i32* %ecx.global-to-local, align 4
  %v0_29078 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29078
}

define i32 @_ZSt20uninitialized_fill_nIPhjhEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29079:
  %v3_290b0 = call i32 @unknown_56d94(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_290c1

bb:                                               ; preds = %dec_label_pc_29079
  %v1_290bf = call i32 @function_290c6()
  br label %dec_label_pc_290c1

dec_label_pc_290c1:                               ; preds = %bb, %dec_label_pc_29079
  %v2_290bf = phi i32 [ %v1_290bf, %bb ], [ 0, %dec_label_pc_29079 ]
  ret i32 %v2_290bf
}

define i32 @function_290c6() local_unnamed_addr {
dec_label_pc_290c6:
  %v0_290c7 = load i32, i32* @eax, align 4
  ret i32 %v0_290c7
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb0EE7_S_baseES7_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290c8:
  ret i32 0
}

define i32 @function_290e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_290e6:
  %ecx.global-to-local = alloca i32, align 4
  %v0_290e6 = load i32, i32* @ebp, align 4
  %v1_290e6 = add i32 %v0_290e6, 1
  %v9_290e6 = icmp eq i32 %v1_290e6, 0
  store i32 %v1_290e6, i32* @ebp, align 4
  %v0_290ea = load i32, i32* @ecx, align 4
  %v1_290ea = add i32 %v0_290ea, -1
  store i32 %v1_290ea, i32* %ecx.global-to-local, align 4
  %v2_290ea = icmp eq i32 %v1_290ea, 0
  %v4_290ea = or i1 %v9_290e6, %v2_290ea
  br i1 %v4_290ea, label %dec_label_pc_290ec, label %bb

bb:                                               ; preds = %dec_label_pc_290e6
  %v6_290ea = call i32 @function_29075()
  store i32 %v6_290ea, i32* @eax, align 4
  %v4_290ec.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_290ec

dec_label_pc_290ec:                               ; preds = %dec_label_pc_290e6, %bb
  %v4_290ec = phi i32 [ %v1_290ea, %dec_label_pc_290e6 ], [ %v4_290ec.pre, %bb ]
  %v0_290ec = load i32, i32* @ebx, align 4
  %v1_290ec = add i32 %v0_290ec, 1435231301
  %v2_290ec = inttoptr i32 %v1_290ec to i8*
  %v3_290ec = load i8, i8* %v2_290ec, align 1
  %v5_290ec = trunc i32 %v4_290ec to i8
  %v6_290ec = load i1, i1* @cf, align 1
  %v7_290ec = zext i1 %v6_290ec to i8
  %v8_290ec = add i8 %v3_290ec, %v5_290ec
  %v9_290ec = add i8 %v8_290ec, %v7_290ec
  store i8 %v9_290ec, i8* %v2_290ec, align 1
  %v0_290f3 = load i32, i32* @edx, align 4
  %v1_290f3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_290f3 = icmp eq i32 %v1_290f3, %v0_290f3
  br i1 %v3_290f3, label %bb4, label %dec_label_pc_290ec.dec_label_pc_290fc_crit_edge

dec_label_pc_290ec.dec_label_pc_290fc_crit_edge:  ; preds = %dec_label_pc_290ec
  %v2_290fa.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_290fc

bb4:                                              ; preds = %dec_label_pc_290ec
  %v1_290fa = call i32 @function_29101()
  br label %dec_label_pc_290fc

dec_label_pc_290fc:                               ; preds = %dec_label_pc_290ec.dec_label_pc_290fc_crit_edge, %bb4
  %v2_290fa = phi i32 [ %v2_290fa.pre, %dec_label_pc_290ec.dec_label_pc_290fc_crit_edge ], [ %v1_290fa, %bb4 ]
  ret i32 %v2_290fa

; uselistorder directives
  uselistorder i32 %v1_290ea, { 0, 2, 1 }
  uselistorder i32 1435231301, { 1, 0 }
  uselistorder label %dec_label_pc_290fc, { 1, 0 }
  uselistorder label %dec_label_pc_290ec, { 1, 0 }
}

define i32 @function_29101() local_unnamed_addr {
dec_label_pc_29101:
  %v0_29102 = load i32, i32* @eax, align 4
  ret i32 %v0_29102
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29105:
  ret i32 %arg1
}

define i32 @function_29112(i32 %arg1) local_unnamed_addr {
dec_label_pc_29112:
  %v0_29112 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29117 = load i32, i32* @ebp, align 4
  %v2_29117 = add i32 %v1_29117, -12
  %v3_29117 = inttoptr i32 %v2_29117 to i32*
  store i32 %v0_29112, i32* %v3_29117, align 4
  %v0_2911c = load i32, i32* @ebp, align 4
  %v1_2911c = add i32 %v0_2911c, -28
  %v2_2911c = inttoptr i32 %v1_2911c to i32*
  %v3_2911c = load i32, i32* %v2_2911c, align 4
  %v1_29122 = call i32 @unknown_56e6f(i32 %v3_2911c)
  store i32 %v1_29122, i32* @eax, align 4
  %v0_29127 = load i32, i32* @ebp, align 4
  %v1_29127 = add i32 %v0_29127, -12
  %v2_29127 = inttoptr i32 %v1_29127 to i32*
  %v3_29127 = load i32, i32* %v2_29127, align 4
  %v1_2912a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2912a = icmp eq i32 %v1_2912a, %v3_29127
  br i1 %v3_2912a, label %bb, label %dec_label_pc_29133

bb:                                               ; preds = %dec_label_pc_29112
  %v1_29131 = call i32 @function_29138()
  br label %dec_label_pc_29133

dec_label_pc_29133:                               ; preds = %bb, %dec_label_pc_29112
  %v2_29131 = phi i32 [ %v1_29131, %bb ], [ %v1_29122, %dec_label_pc_29112 ]
  ret i32 %v2_29131
}

define i32 @function_29138() local_unnamed_addr {
dec_label_pc_29138:
  %v0_29139 = load i32, i32* @eax, align 4
  ret i32 %v0_29139
}

define i32 @_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2913a:
  %v3_29175 = call i32 @unknown_56edb(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_29175, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29186

bb:                                               ; preds = %dec_label_pc_2913a
  %v1_29184 = call i32 @function_2918b()
  br label %dec_label_pc_29186

dec_label_pc_29186:                               ; preds = %bb, %dec_label_pc_2913a
  %v2_29184 = phi i32 [ %v1_29184, %bb ], [ %v3_29175, %dec_label_pc_2913a ]
  ret i32 %v2_29184
}

define i32 @function_2918b() local_unnamed_addr {
dec_label_pc_2918b:
  %v0_2918c = load i32, i32* @eax, align 4
  ret i32 %v0_2918c
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEEEvT_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2918d:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_291b6

bb:                                               ; preds = %dec_label_pc_2918d
  %v3_291b4 = call i32 @function_291bb(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_291b6

dec_label_pc_291b6:                               ; preds = %bb, %dec_label_pc_2918d
  %v4_291b4 = phi i32 [ %v3_291b4, %bb ], [ 0, %dec_label_pc_2918d ]
  ret i32 %v4_291b4
}

define i32 @function_291bb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_291bb:
  %v0_291bc = load i32, i32* @eax, align 4
  ret i32 %v0_291bc
}

define i32 @_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_291bd:
  ret i32 %arg1
}

define i32 @function_291e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_291e0:
  %v0_291e0 = load i32, i32* @ebp, align 4
  %v1_291e0 = load i32, i32* @eax, align 4
  %v3_291e0 = add i32 %v0_291e0, -24
  %v4_291e0 = add i32 %v3_291e0, %v1_291e0
  %v5_291e0 = inttoptr i32 %v4_291e0 to i8*
  %v6_291e0 = load i8, i8* %v5_291e0, align 1
  %v7_291e0 = load i32, i32* @edx, align 4
  %v8_291e0 = udiv i32 %v7_291e0, 256
  %v9_291e0 = trunc i32 %v8_291e0 to i8
  %v10_291e0 = add i8 %v9_291e0, %v6_291e0
  store i8 %v10_291e0, i8* %v5_291e0, align 1
  %v31_291e0 = load i32, i32* @eax, align 4
  ret i32 %v31_291e0
}

define i32 @function_291e7() local_unnamed_addr {
dec_label_pc_291e7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_291e7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_291e7 = add i32 %v0_291e7, -1
  store i32 %v1_291e7, i32* %ecx.global-to-local, align 4
  %v0_291e9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_291e9
}

define i32 @_ZSt12__niter_baseIPhENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_291ea:
  %v1_29207 = call i32 @unknown_523a7(i32 %arg1)
  store i32 %v1_29207, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29218

bb:                                               ; preds = %dec_label_pc_291ea
  %v1_29216 = call i32 @function_2921d()
  br label %dec_label_pc_29218

dec_label_pc_29218:                               ; preds = %bb, %dec_label_pc_291ea
  %v3_29216 = phi i32 [ %v1_29216, %bb ], [ %v1_29207, %dec_label_pc_291ea ]
  ret i32 %v3_29216
}

define i32 @function_2921d() local_unnamed_addr {
dec_label_pc_2921d:
  %v0_2921e = load i32, i32* @eax, align 4
  ret i32 %v0_2921e
}

define i32 @_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2921f:
  %v3_2925a = call i32 @unknown_56fc0(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2925a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2926b

bb:                                               ; preds = %dec_label_pc_2921f
  %v1_29269 = call i32 @function_29270()
  br label %dec_label_pc_2926b

dec_label_pc_2926b:                               ; preds = %bb, %dec_label_pc_2921f
  %v2_29269 = phi i32 [ %v1_29269, %bb ], [ %v3_2925a, %dec_label_pc_2921f ]
  ret i32 %v2_29269
}

define i32 @function_29270() local_unnamed_addr {
dec_label_pc_29270:
  %v0_29271 = load i32, i32* @eax, align 4
  ret i32 %v0_29271
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPhS2_EET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29272:
  %v3_292a9 = call i32 @unknown_44b9d(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_292a9, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_292ba

bb:                                               ; preds = %dec_label_pc_29272
  %v1_292b8 = call i32 @function_292bf()
  br label %dec_label_pc_292ba

dec_label_pc_292ba:                               ; preds = %bb, %dec_label_pc_29272
  %v2_292b8 = phi i32 [ %v1_292b8, %bb ], [ %v3_292a9, %dec_label_pc_29272 ]
  ret i32 %v2_292b8
}

define i32 @function_292bf() local_unnamed_addr {
dec_label_pc_292bf:
  %v0_292c0 = load i32, i32* @eax, align 4
  ret i32 %v0_292c0
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_292c2:
  %v1_292dc = add i32 %arg1, 4
  store i32 %v1_292dc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_292eb

bb:                                               ; preds = %dec_label_pc_292c2
  %v2_292e9 = call i32 @function_292f0(i32 %arg1)
  br label %dec_label_pc_292eb

dec_label_pc_292eb:                               ; preds = %bb, %dec_label_pc_292c2
  %v3_292e9 = phi i32 [ %v2_292e9, %bb ], [ %v1_292dc, %dec_label_pc_292c2 ]
  ret i32 %v3_292e9
}

define i32 @function_292ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_292ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_292f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_292f0:
  %v0_292f1 = load i32, i32* @eax, align 4
  ret i32 %v0_292f1
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_292f2:
  ret i32 %arg3
}

define i32 @function_2930a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2930a:
  %v0_2930a = load i32, i32* @ebp, align 4
  %v1_2930a = add i32 %v0_2930a, 20
  %v2_2930a = inttoptr i32 %v1_2930a to i32*
  %v3_2930a = load i32, i32* %v2_2930a, align 4
  %v2_2930d = add i32 %v0_2930a, -40
  %v3_2930d = inttoptr i32 %v2_2930d to i32*
  store i32 %v3_2930a, i32* %v3_2930d, align 4
  %v0_29310 = load i32, i32* @ebp, align 4
  %v1_29310 = add i32 %v0_29310, 24
  %v2_29310 = inttoptr i32 %v1_29310 to i32*
  %v3_29310 = load i32, i32* %v2_29310, align 4
  ret i32 %v3_29310
}

define i32 @function_29314(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29314:
  %eax.global-to-local = alloca i32, align 4
  %v0_29314 = load i32, i32* @ebp, align 4
  %v1_29314 = add i32 %v0_29314, 1
  store i32 %v1_29314, i32* @ebp, align 4
  %v0_29315 = load i32, i32* @eax, align 4
  %v1_29315 = trunc i32 %v0_29315 to i8
  %v2_29315 = udiv i8 %v1_29315, 101
  %v3_29315 = urem i8 %v1_29315, 101
  %v4_29315 = zext i8 %v3_29315 to i32
  %v6_29315 = and i32 %v0_29315, -65536
  %v8_29315 = zext i8 %v2_29315 to i32
  %v10_29315 = mul nuw nsw i32 %v8_29315, 256
  %v11_29315 = or i32 %v4_29315, %v6_29315
  %v12_29315 = or i32 %v11_29315, %v10_29315
  store i32 %v12_29315, i32* %eax.global-to-local, align 4
  %v0_29317 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2931c = add i32 %v0_29314, -11
  %v3_2931c = inttoptr i32 %v2_2931c to i32*
  store i32 %v0_29317, i32* %v3_2931c, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29371

dec_label_pc_29323:                               ; preds = %dec_label_pc_29371
  %v3_29323 = load i32, i32* %v2_29371, align 4
  store i32 %v3_29323, i32* %eax.global-to-local, align 4
  %v1_29329 = call i32 @unknown_5278d(i32 %v3_29323)
  store i32 %v1_29329, i32* %eax.global-to-local, align 4
  %v0_29330 = load i32, i32* @ebp, align 4
  %v1_29330 = add i32 %v0_29330, -32
  %v2_29330 = inttoptr i32 %v1_29330 to i32*
  %v3_29330 = load i32, i32* %v2_29330, align 4
  store i32 %v3_29330, i32* %eax.global-to-local, align 4
  %v1_29333 = add i32 %v0_29330, -44
  %v2_29333 = inttoptr i32 %v1_29333 to i32*
  %v3_29333 = load i32, i32* %v2_29333, align 4
  store i32 %v3_29333, i32* @ecx, align 4
  %v3_29341 = call i32 @unknown_526dc(i32 %v3_29330, i32 %v1_29329, i32 %v3_29333)
  %v1_29346 = xor i32 %v3_29341, 1
  %v4_29346 = trunc i32 %v1_29346 to i8
  store i32 %v1_29346, i32* %eax.global-to-local, align 4
  %v5_29349 = icmp eq i8 %v4_29346, 0
  %v0_29363 = load i32, i32* @ebp, align 4
  %v1_29363 = add i32 %v0_29363, -36
  %v2_29363 = inttoptr i32 %v1_29363 to i32*
  %v3_29363 = load i32, i32* %v2_29363, align 4
  store i32 %v3_29363, i32* %eax.global-to-local, align 4
  br i1 %v5_29349, label %dec_label_pc_29363, label %dec_label_pc_2934d

dec_label_pc_2934d:                               ; preds = %dec_label_pc_29323
  %v2_29350 = add i32 %v0_29363, -40
  %v3_29350 = inttoptr i32 %v2_29350 to i32*
  store i32 %v3_29363, i32* %v3_29350, align 4
  %v0_29353 = load i32, i32* @ebp, align 4
  %v1_29353 = add i32 %v0_29353, -36
  %v2_29353 = inttoptr i32 %v1_29353 to i32*
  %v3_29353 = load i32, i32* %v2_29353, align 4
  store i32 %v3_29353, i32* %eax.global-to-local, align 4
  %v1_29359 = call i32 @unknown_4b09d(i32 %v3_29353)
  store i32 %v1_29359, i32* %eax.global-to-local, align 4
  %v1_2935e = load i32, i32* @ebp, align 4
  %v2_2935e = add i32 %v1_2935e, -36
  %v3_2935e = inttoptr i32 %v2_2935e to i32*
  store i32 %v1_29359, i32* %v3_2935e, align 4
  br label %dec_label_pc_29371.backedge

dec_label_pc_29371.backedge:                      ; preds = %dec_label_pc_2934d, %dec_label_pc_29363
  %v3_29375.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_29371

dec_label_pc_29363:                               ; preds = %dec_label_pc_29323
  %v1_29369 = call i32 @unknown_4b06d(i32 %v3_29363)
  store i32 %v1_29369, i32* %eax.global-to-local, align 4
  %v1_2936e = load i32, i32* @ebp, align 4
  %v2_2936e = add i32 %v1_2936e, -36
  %v3_2936e = inttoptr i32 %v2_2936e to i32*
  store i32 %v1_29369, i32* %v3_2936e, align 4
  br label %dec_label_pc_29371.backedge

dec_label_pc_29371:                               ; preds = %dec_label_pc_29371.backedge, %dec_label_pc_29314
  %v3_29375 = phi i32 [ %v3_29375.pre, %dec_label_pc_29371.backedge ], [ 0, %dec_label_pc_29314 ]
  %v0_29371 = load i32, i32* @ebp, align 4
  %v1_29371 = add i32 %v0_29371, -36
  %v2_29371 = inttoptr i32 %v1_29371 to i32*
  %v3_29371 = load i32, i32* %v2_29371, align 4
  %v10_29371 = icmp eq i32 %v3_29371, 0
  %v1_29375 = icmp eq i1 %v10_29371, false
  %v2_29375 = zext i1 %v1_29375 to i32
  %v4_29375 = and i32 %v3_29375, -256
  %v5_29375 = or i32 %v2_29375, %v4_29375
  store i32 %v5_29375, i32* %eax.global-to-local, align 4
  %v5_29378 = icmp eq i1 %v1_29375, false
  %v1_2937a = icmp eq i1 %v5_29378, false
  br i1 %v1_2937a, label %dec_label_pc_29323, label %dec_label_pc_2937c

dec_label_pc_2937c:                               ; preds = %dec_label_pc_29371
  %v1_2937c = add i32 %v0_29371, -40
  %v2_2937c = inttoptr i32 %v1_2937c to i32*
  %v3_2937c = load i32, i32* %v2_2937c, align 4
  store i32 %v3_2937c, i32* %eax.global-to-local, align 4
  %v1_29383 = add i32 %v0_29371, -28
  %v2_29383 = inttoptr i32 %v1_29383 to i32*
  %v3_29383 = load i32, i32* %v2_29383, align 4
  store i32 %v3_29383, i32* %eax.global-to-local, align 4
  %v2_29389 = call i32 @unknown_52722(i32 %v3_29383, i32 %v3_2937c)
  store i32 %v2_29389, i32* %eax.global-to-local, align 4
  %v0_2938e = load i32, i32* @ebp, align 4
  %v1_2938e = add i32 %v0_2938e, -28
  %v2_2938e = inttoptr i32 %v1_2938e to i32*
  %v3_2938e = load i32, i32* %v2_2938e, align 4
  store i32 %v3_2938e, i32* @eax, align 4
  %v1_29391 = add i32 %v0_2938e, -12
  %v2_29391 = inttoptr i32 %v1_29391 to i32*
  %v3_29391 = load i32, i32* %v2_29391, align 4
  %v1_29394 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29394 = xor i32 %v1_29394, %v3_29391
  %v3_29394 = icmp eq i32 %v2_29394, 0
  store i32 %v2_29394, i32* @edx, align 4
  br i1 %v3_29394, label %bb, label %dec_label_pc_2939d

bb:                                               ; preds = %dec_label_pc_2937c
  %v1_2939b = call i32 @function_293a2()
  store i32 %v1_2939b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2939d

dec_label_pc_2939d:                               ; preds = %bb, %dec_label_pc_2937c
  %v2_2939b = phi i32 [ %v1_2939b, %bb ], [ %v3_2938e, %dec_label_pc_2937c ]
  ret i32 %v2_2939b

; uselistorder directives
  uselistorder i32* %v2_29371, { 1, 0 }
  uselistorder i32 %v0_29371, { 1, 0, 2 }
  uselistorder i32 %v3_29363, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 10, 11, 12, 13, 1, 3, 4, 5, 2, 6, 7, 8, 9, 14, 15 }
  uselistorder label %dec_label_pc_29371.backedge, { 1, 0 }
}

define i32 @function_293a2() local_unnamed_addr {
dec_label_pc_293a2:
  %v0_293a3 = load i32, i32* @eax, align 4
  ret i32 %v0_293a3
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_293a6:
  ret i32 %arg1
}

define i32 @function_293b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_293b6:
  %v2_293b6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_293b6 = load i32, i32* @eax, align 4
  %v4_293b6 = trunc i32 %v3_293b6 to i8
  %v5_293b6 = add i8 %v4_293b6, %v2_293b6
  %v21_293b6 = inttoptr i32 %v3_293b6 to i8*
  store i8 %v5_293b6, i8* %v21_293b6, align 1
  %v0_293b8 = load i32, i32* @eax, align 4
  %v1_293b8 = load i32, i32* @ebp, align 4
  %v2_293b8 = add i32 %v1_293b8, -12
  %v3_293b8 = inttoptr i32 %v2_293b8 to i32*
  store i32 %v0_293b8, i32* %v3_293b8, align 4
  %v0_293bd = load i32, i32* @ebp, align 4
  %v1_293bd = add i32 %v0_293bd, -28
  %v2_293bd = inttoptr i32 %v1_293bd to i32*
  %v3_293bd = load i32, i32* %v2_293bd, align 4
  %v1_293c3 = call i32 @unknown_571b1(i32 %v3_293bd)
  %v0_293cc = load i32, i32* @ebp, align 4
  %v1_293cc = add i32 %v0_293cc, -13
  %v2_293d2 = call i32 @unknown_5280e(i32 %v1_293cc, i32 %v1_293c3)
  store i32 %v2_293d2, i32* @eax, align 4
  %v0_293d7 = load i32, i32* @ebp, align 4
  %v1_293d7 = add i32 %v0_293d7, -12
  %v2_293d7 = inttoptr i32 %v1_293d7 to i32*
  %v3_293d7 = load i32, i32* %v2_293d7, align 4
  %v1_293da = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_293da = icmp eq i32 %v1_293da, %v3_293d7
  br i1 %v3_293da, label %bb, label %dec_label_pc_293e3

bb:                                               ; preds = %dec_label_pc_293b6
  %v1_293e1 = call i32 @function_293e8()
  br label %dec_label_pc_293e3

dec_label_pc_293e3:                               ; preds = %bb, %dec_label_pc_293b6
  %v3_293e1 = phi i32 [ %v1_293e1, %bb ], [ %v2_293d2, %dec_label_pc_293b6 ]
  ret i32 %v3_293e1
}

define i32 @function_293e8() local_unnamed_addr {
dec_label_pc_293e8:
  %v0_293e9 = load i32, i32* @eax, align 4
  ret i32 %v0_293e9
}

define i32 @_ZNKSt4lessIjEclERKjS2_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_293ea:
  %v2_29410 = load i32, i32* %arg2, align 4
  %v1_29415 = inttoptr i32 %arg3 to i32*
  %v2_29415 = load i32, i32* %v1_29415, align 4
  %v7_29417 = icmp ult i32 %v2_29410, %v2_29415
  %v1_29419 = zext i1 %v7_29417 to i32
  %v3_29419 = and i32 %v2_29415, -256
  %v4_29419 = or i32 %v1_29419, %v3_29419
  store i32 %v4_29419, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29428

bb:                                               ; preds = %dec_label_pc_293ea
  %tmp102 = ptrtoint i32* %arg2 to i32
  %v4_29426 = call i32 @function_2942d(i32 %arg3, i32 %tmp102, i32 %arg1)
  br label %dec_label_pc_29428

dec_label_pc_29428:                               ; preds = %bb, %dec_label_pc_293ea
  %v5_29426 = phi i32 [ %v4_29426, %bb ], [ %v4_29419, %dec_label_pc_293ea ]
  ret i32 %v5_29426

; uselistorder directives
  uselistorder i32* %arg2, { 1, 0 }
}

define i32 @function_2942a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2942a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2942d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2942d:
  %v0_2942e = load i32, i32* @eax, align 4
  ret i32 %v0_2942e
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKjiEEC1EPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29430:
  %v0_29442 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_29442
}

define i32 @function_2944a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2944a:
  %v0_2944d = load i32, i32* @ebp, align 4
  %v1_2944d = add i32 %v0_2944d, -28
  %v2_2944d = inttoptr i32 %v1_2944d to i32*
  %v3_2944d = load i32, i32* %v2_2944d, align 4
  %v1_29450 = add i32 %v0_2944d, -32
  %v2_29450 = inttoptr i32 %v1_29450 to i32*
  %v3_29450 = load i32, i32* %v2_29450, align 4
  %v2_29453 = inttoptr i32 %v3_2944d to i32*
  store i32 %v3_29450, i32* %v2_29453, align 4
  %v0_29455 = load i32, i32* @ebp, align 4
  %v1_29455 = add i32 %v0_29455, -12
  %v2_29455 = inttoptr i32 %v1_29455 to i32*
  %v3_29455 = load i32, i32* %v2_29455, align 4
  %v1_29458 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29458 = xor i32 %v1_29458, %v3_29455
  %v3_29458 = icmp eq i32 %v2_29458, 0
  store i32 %v2_29458, i32* @eax, align 4
  br i1 %v3_29458, label %bb, label %dec_label_pc_29461

bb:                                               ; preds = %dec_label_pc_2944a
  %v1_2945f = call i32 @function_29466()
  br label %dec_label_pc_29461

dec_label_pc_29461:                               ; preds = %bb, %dec_label_pc_2944a
  %v2_2945f = phi i32 [ %v1_2945f, %bb ], [ %v2_29458, %dec_label_pc_2944a ]
  ret i32 %v2_2945f
}

define i32 @function_29466() local_unnamed_addr {
dec_label_pc_29466:
  %v0_29467 = load i32, i32* @eax, align 4
  ret i32 %v0_29467
}

define i32 @_ZNKSt10_Select1stISt4pairIKjiEEclERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29468:
  ret i32 %arg2
}

define i32 @function_29492(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29492:
  %v0_29492 = load i1, i1* @zf, align 1
  br i1 %v0_29492, label %bb, label %dec_label_pc_29492.dec_label_pc_29494_crit_edge

dec_label_pc_29492.dec_label_pc_29494_crit_edge:  ; preds = %dec_label_pc_29492
  %v2_29492.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29494

bb:                                               ; preds = %dec_label_pc_29492
  %v1_29492 = call i32 @function_29499()
  br label %dec_label_pc_29494

dec_label_pc_29494:                               ; preds = %dec_label_pc_29492.dec_label_pc_29494_crit_edge, %bb
  %v2_29492 = phi i32 [ %v2_29492.pre, %dec_label_pc_29492.dec_label_pc_29494_crit_edge ], [ %v1_29492, %bb ]
  ret i32 %v2_29492

; uselistorder directives
  uselistorder label %dec_label_pc_29494, { 1, 0 }
}

define i32 @function_29499() local_unnamed_addr {
dec_label_pc_29499:
  %v0_2949a = load i32, i32* @eax, align 4
  ret i32 %v0_2949a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2949b:
  ret i32 0
}

define i32 @function_294b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_294b4:
  %v0_294b8 = call i32 @unknown_572d6()
  %v0_294c1 = load i32, i32* @ebp, align 4
  %v1_294c1 = add i32 %v0_294c1, -13
  %v2_294c7 = call i32 @unknown_52903(i32 %v1_294c1, i32 %v0_294b8)
  store i32 %v2_294c7, i32* @eax, align 4
  %v0_294cc = load i32, i32* @ebp, align 4
  %v1_294cc = add i32 %v0_294cc, -12
  %v2_294cc = inttoptr i32 %v1_294cc to i32*
  %v3_294cc = load i32, i32* %v2_294cc, align 4
  %v1_294cf = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_294cf = icmp eq i32 %v1_294cf, %v3_294cc
  br i1 %v3_294cf, label %bb, label %dec_label_pc_294d8

bb:                                               ; preds = %dec_label_pc_294b4
  %v1_294d6 = call i32 @function_294dd()
  br label %dec_label_pc_294d8

dec_label_pc_294d8:                               ; preds = %bb, %dec_label_pc_294b4
  %v2_294d6 = phi i32 [ %v1_294d6, %bb ], [ %v2_294c7, %dec_label_pc_294b4 ]
  ret i32 %v2_294d6
}

define i32 @function_294dd() local_unnamed_addr {
dec_label_pc_294dd:
  %v0_294de = load i32, i32* @eax, align 4
  ret i32 %v0_294de
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_294e0:
  %v1_29500 = add i32 %arg2, 12
  %v2_29500 = inttoptr i32 %v1_29500 to i32*
  %v3_29500 = load i32, i32* %v2_29500, align 4
  %v2_2950d = call i32 @unknown_52910(i32 %arg1, i32 %v3_29500)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29521

bb:                                               ; preds = %dec_label_pc_294e0
  %v1_2951f = call i32 @function_29526()
  br label %dec_label_pc_29521

dec_label_pc_29521:                               ; preds = %bb, %dec_label_pc_294e0
  %v2_2951f = phi i32 [ %v1_2951f, %bb ], [ %arg1, %dec_label_pc_294e0 ]
  ret i32 %v2_2951f

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_29526() local_unnamed_addr {
dec_label_pc_29526:
  %v0_29527 = load i32, i32* @eax, align 4
  ret i32 %v0_29527
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2952a:
  %stack_var_-18 = alloca i32, align 4
  %v10_2955a = icmp eq i32 %arg3, 0
  %v1_2955e = icmp eq i1 %v10_2955a, false
  br i1 %v1_2955e, label %dec_label_pc_295b2, label %dec_label_pc_29560

dec_label_pc_29560:                               ; preds = %dec_label_pc_2952a
  %v1_29566 = call i32 @unknown_527ec(i32 %arg2)
  %v15_2956b = icmp eq i32 %v1_29566, %arg4
  br i1 %v15_2956b, label %dec_label_pc_295b2, label %dec_label_pc_29570

dec_label_pc_29570:                               ; preds = %dec_label_pc_29560
  %v1_29576 = call i32 @unknown_528d0(i32 %arg4)
  %v2_29584 = ptrtoint i32* %stack_var_-18 to i32
  %v2_2958a = call i32 @unknown_52992(i32 %v2_29584, i32 %arg5)
  %v3_2959d = call i32 @unknown_52914(i32 %arg2, i32 %v2_2958a, i32 %v1_29576)
  %v4_295a2 = trunc i32 %v3_2959d to i8
  %v5_295a2 = icmp ne i8 %v4_295a2, 0
  %phitmp = zext i1 %v5_295a2 to i32
  br label %dec_label_pc_295b2

dec_label_pc_295b2:                               ; preds = %dec_label_pc_29570, %dec_label_pc_2952a, %dec_label_pc_29560
  %storemerge = phi i32 [ 1, %dec_label_pc_29560 ], [ 1, %dec_label_pc_2952a ], [ %phitmp, %dec_label_pc_29570 ]
  %v2_295c2 = call i32 @unknown_57396(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_295b2, { 0, 2, 1 }
}

define i32 @function_29622() local_unnamed_addr {
dec_label_pc_29622:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_29622 = load i32, i32* %ebx.global-to-local, align 4
  %v1_29622 = add i32 %v0_29622, 1566262468
  %v2_29622 = inttoptr i32 %v1_29622 to i32*
  %v3_29622 = load i32, i32* %v2_29622, align 4
  %v4_29622 = add i32 %v3_29622, 1
  store i32 %v4_29622, i32* %v2_29622, align 4
  %v0_29628 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29628
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKjiEEbEC1ERKS3_RKb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2962c:
  ret i32 %arg3
}

define i32 @function_29644(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29644:
  %v0_29644 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2964a = load i32, i32* @ebp, align 4
  %v2_2964a = add i32 %v1_2964a, -12
  %v3_2964a = inttoptr i32 %v2_2964a to i32*
  store i32 %v0_29644, i32* %v3_2964a, align 4
  %v0_2964f = load i32, i32* @ebp, align 4
  %v1_2964f = add i32 %v0_2964f, -28
  %v2_2964f = inttoptr i32 %v1_2964f to i32*
  %v3_2964f = load i32, i32* %v2_2964f, align 4
  %v1_29652 = add i32 %v0_2964f, -32
  %v2_29652 = inttoptr i32 %v1_29652 to i32*
  %v3_29652 = load i32, i32* %v2_29652, align 4
  %v1_29655 = inttoptr i32 %v3_29652 to i32*
  %v2_29655 = load i32, i32* %v1_29655, align 4
  %v2_29657 = inttoptr i32 %v3_2964f to i32*
  store i32 %v2_29655, i32* %v2_29657, align 4
  %v0_29659 = load i32, i32* @ebp, align 4
  %v1_29659 = add i32 %v0_29659, -36
  %v2_29659 = inttoptr i32 %v1_29659 to i32*
  %v3_29659 = load i32, i32* %v2_29659, align 4
  %v1_2965c = inttoptr i32 %v3_29659 to i8*
  %v2_2965c = load i8, i8* %v1_2965c, align 1
  %v1_2965f = add i32 %v0_29659, -28
  %v2_2965f = inttoptr i32 %v1_2965f to i32*
  %v3_2965f = load i32, i32* %v2_2965f, align 4
  %v3_29662 = add i32 %v3_2965f, 4
  %v4_29662 = inttoptr i32 %v3_29662 to i8*
  store i8 %v2_2965c, i8* %v4_29662, align 1
  %v0_29665 = load i32, i32* @ebp, align 4
  %v1_29665 = add i32 %v0_29665, -12
  %v2_29665 = inttoptr i32 %v1_29665 to i32*
  %v3_29665 = load i32, i32* %v2_29665, align 4
  %v1_29668 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29668 = xor i32 %v1_29668, %v3_29665
  %v3_29668 = icmp eq i32 %v2_29668, 0
  store i32 %v2_29668, i32* @eax, align 4
  br i1 %v3_29668, label %bb, label %dec_label_pc_29671

bb:                                               ; preds = %dec_label_pc_29644
  %v1_2966f = call i32 @function_29676()
  br label %dec_label_pc_29671

dec_label_pc_29671:                               ; preds = %bb, %dec_label_pc_29644
  %v2_2966f = phi i32 [ %v1_2966f, %bb ], [ %v2_29668, %dec_label_pc_29644 ]
  ret i32 %v2_2966f
}

define i32 @function_29676() local_unnamed_addr {
dec_label_pc_29676:
  %v0_29677 = load i32, i32* @eax, align 4
  ret i32 %v0_29677
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKjiEEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_29678:
  %v2_29692 = load i32, i32* %arg1, align 4
  ret i32 %v2_29692
}

define i32 @function_296b4() local_unnamed_addr {
dec_label_pc_296b4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_296b4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_296b4 = add i32 %v0_296b4, -1
  store i32 %v1_296b4, i32* %ecx.global-to-local, align 4
  %v0_296b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_296b6
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKjiEEC1ERKSt17_Rb_tree_iteratorIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_296b8:
  %v1_296d8 = inttoptr i32 %arg2 to i32*
  %v2_296d8 = load i32, i32* %v1_296d8, align 4
  store i32 %v2_296d8, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_296eb

bb:                                               ; preds = %dec_label_pc_296b8
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_296e9 = call i32 @function_296f0(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_296eb

dec_label_pc_296eb:                               ; preds = %bb, %dec_label_pc_296b8
  %v4_296e9 = phi i32 [ %v3_296e9, %bb ], [ 0, %dec_label_pc_296b8 ]
  ret i32 %v4_296e9

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_296f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_296f0:
  %v0_296f1 = load i32, i32* @eax, align 4
  ret i32 %v0_296f1
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_296f2:
  ret i32 %arg2
}

define i32 @function_29758() local_unnamed_addr {
dec_label_pc_29758:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29758 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29758 = add i32 %v0_29758, -1
  store i32 %v1_29758, i32* %ecx.global-to-local, align 4
  %v0_2975a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2975a
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEC1EPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2975c:
  ret i32 %arg2
}

define i32 @function_2976e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2976e:
  %v0_2976e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29774 = load i32, i32* @ebp, align 4
  %v2_29774 = add i32 %v1_29774, -12
  %v3_29774 = inttoptr i32 %v2_29774 to i32*
  store i32 %v0_2976e, i32* %v3_29774, align 4
  %v0_29779 = load i32, i32* @ebp, align 4
  %v1_29779 = add i32 %v0_29779, -28
  %v2_29779 = inttoptr i32 %v1_29779 to i32*
  %v3_29779 = load i32, i32* %v2_29779, align 4
  store i32 %v3_29779, i32* @eax, align 4
  %v1_2977f = call i32 @function_3887e(i32 %v3_29779)
  %v0_29784 = load i32, i32* @ebp, align 4
  %v1_29784 = add i32 %v0_29784, -28
  %v2_29784 = inttoptr i32 %v1_29784 to i32*
  %v3_29784 = load i32, i32* %v2_29784, align 4
  %v1_29787 = inttoptr i32 %v3_29784 to i32*
  store i32 ptrtoint (%vtable_38020_type* @global_var_38020.2287 to i32), i32* %v1_29787, align 4
  %v0_2978d = load i32, i32* @ebp, align 4
  %v1_2978d = add i32 %v0_2978d, -28
  %v2_2978d = inttoptr i32 %v1_2978d to i32*
  %v3_2978d = load i32, i32* %v2_2978d, align 4
  %v1_29790 = add i32 %v0_2978d, -32
  %v2_29790 = inttoptr i32 %v1_29790 to i32*
  %v3_29790 = load i32, i32* %v2_29790, align 4
  %v2_29793 = add i32 %v3_2978d, 12
  %v3_29793 = inttoptr i32 %v2_29793 to i32*
  store i32 %v3_29790, i32* %v3_29793, align 4
  %v0_29796 = load i32, i32* @ebp, align 4
  %v1_29796 = add i32 %v0_29796, -12
  %v2_29796 = inttoptr i32 %v1_29796 to i32*
  %v3_29796 = load i32, i32* %v2_29796, align 4
  %v1_29799 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29799 = xor i32 %v1_29799, %v3_29796
  %v3_29799 = icmp eq i32 %v2_29799, 0
  store i32 %v2_29799, i32* @eax, align 4
  br i1 %v3_29799, label %bb, label %dec_label_pc_297a2

bb:                                               ; preds = %dec_label_pc_2976e
  %v1_297a0 = call i32 @function_297a7()
  br label %dec_label_pc_297a2

dec_label_pc_297a2:                               ; preds = %bb, %dec_label_pc_2976e
  %v3_297a0 = phi i32 [ %v1_297a0, %bb ], [ %v2_29799, %dec_label_pc_2976e ]
  ret i32 %v3_297a0
}

define i32 @function_297a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_297a4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_297a7() local_unnamed_addr {
dec_label_pc_297a7:
  %v0_297a8 = load i32, i32* @eax, align 4
  ret i32 %v0_297a8
}

define i32 @_ZN5boost14checked_deleteINS_16exception_detail10clone_implINS1_10bad_alloc_EEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_297a9:
  %v10_297c0 = icmp eq i32* %arg1, null
  br i1 %v10_297c0, label %dec_label_pc_297d8, label %dec_label_pc_297c6

dec_label_pc_297c6:                               ; preds = %dec_label_pc_297a9
  br label %dec_label_pc_297d8

dec_label_pc_297d8:                               ; preds = %dec_label_pc_297c6, %dec_label_pc_297a9
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_297e4

bb:                                               ; preds = %dec_label_pc_297d8
  %v1_297e2 = call i32 @function_297e9()
  br label %dec_label_pc_297e4

dec_label_pc_297e4:                               ; preds = %bb, %dec_label_pc_297d8
  %v2_297e2 = phi i32 [ %v1_297e2, %bb ], [ 0, %dec_label_pc_297d8 ]
  ret i32 %v2_297e2
}

define i32 @function_297e9() local_unnamed_addr {
dec_label_pc_297e9:
  %v0_297ea = load i32, i32* @eax, align 4
  ret i32 %v0_297ea
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhEET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_297eb:
  ret i32 %arg2
}

define i32 @function_2981a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2981a:
  %v0_2981c = load i32, i32* @ebp, align 4
  %v1_2981c = add i32 %v0_2981c, -28
  %v2_2981c = inttoptr i32 %v1_2981c to i32*
  %v3_2981c = load i32, i32* %v2_2981c, align 4
  %v1_29822 = call i32 @unknown_53503(i32 %v3_2981c)
  store i32 %v1_29822, i32* @eax, align 4
  %v0_29827 = load i32, i32* @ebp, align 4
  %v1_29827 = add i32 %v0_29827, -12
  %v2_29827 = inttoptr i32 %v1_29827 to i32*
  %v3_29827 = load i32, i32* %v2_29827, align 4
  %v1_2982a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2982a = icmp eq i32 %v1_2982a, %v3_29827
  br i1 %v3_2982a, label %bb, label %dec_label_pc_29833

bb:                                               ; preds = %dec_label_pc_2981a
  %v1_29831 = call i32 @function_29838()
  br label %dec_label_pc_29833

dec_label_pc_29833:                               ; preds = %bb, %dec_label_pc_2981a
  %v2_29831 = phi i32 [ %v1_29831, %bb ], [ %v1_29822, %dec_label_pc_2981a ]
  ret i32 %v2_29831
}

define i32 @function_29838() local_unnamed_addr {
dec_label_pc_29838:
  %v0_29839 = load i32, i32* @eax, align 4
  ret i32 %v0_29839
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb0EE7_S_baseES6_() local_unnamed_addr {
dec_label_pc_2983a:
  %eax.global-to-local = alloca i32, align 4
  %v17_2983d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2983d
}

define i32 @function_29842(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29842:
  %v0_29842 = load i32, i32* @ecx, align 4
  %v1_29842 = add i32 %v0_29842, 1166795845
  %v2_29842 = inttoptr i32 %v1_29842 to i8*
  %v3_29842 = load i8, i8* %v2_29842, align 1
  %v5_29842 = trunc i32 %v0_29842 to i8
  %v6_29842 = or i8 %v3_29842, %v5_29842
  store i8 %v6_29842, i8* %v2_29842, align 1
  %v15_29842 = load i32, i32* @eax, align 4
  ret i32 %v15_29842
}

define i32 @function_29848(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29848:
  %v0_2984a = load i32, i32* @ebp, align 4
  %v1_2984a = add i32 %v0_2984a, 1
  store i32 %v1_2984a, i32* @ebp, align 4
  %v0_2984b = load i32, i32* @ecx, align 4
  %v1_2984b = add i32 %v0_2984b, -1
  store i32 %v1_2984b, i32* @ecx, align 4
  %v0_2984d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29852 = add i32 %v0_2984a, -11
  %v3_29852 = inttoptr i32 %v2_29852 to i32*
  store i32 %v0_2984d, i32* %v3_29852, align 4
  %v0_29857 = load i32, i32* @ebp, align 4
  %v1_29857 = add i32 %v0_29857, -28
  %v2_29857 = inttoptr i32 %v1_29857 to i32*
  %v3_29857 = load i32, i32* %v2_29857, align 4
  %v1_2985a = add i32 %v0_29857, -32
  %v2_2985a = inttoptr i32 %v1_2985a to i32*
  %v3_2985a = load i32, i32* %v2_2985a, align 4
  %v2_2985d = inttoptr i32 %v3_29857 to i32*
  store i32 %v3_2985a, i32* %v2_2985d, align 4
  %v0_2985f = load i32, i32* @ebp, align 4
  %v1_2985f = add i32 %v0_2985f, -28
  %v2_2985f = inttoptr i32 %v1_2985f to i32*
  %v3_2985f = load i32, i32* %v2_2985f, align 4
  store i32 %v3_2985f, i32* @eax, align 4
  %v1_29862 = add i32 %v0_2985f, -12
  %v2_29862 = inttoptr i32 %v1_29862 to i32*
  %v3_29862 = load i32, i32* %v2_29862, align 4
  %v1_29865 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29865 = icmp eq i32 %v1_29865, %v3_29862
  br i1 %v3_29865, label %bb, label %dec_label_pc_2986e

bb:                                               ; preds = %dec_label_pc_29848
  %v1_2986c = call i32 @function_29873()
  br label %dec_label_pc_2986e

dec_label_pc_2986e:                               ; preds = %bb, %dec_label_pc_29848
  %v3_2986c = phi i32 [ %v1_2986c, %bb ], [ %v3_2985f, %dec_label_pc_29848 ]
  ret i32 %v3_2986c
}

define i32 @function_29873() local_unnamed_addr {
dec_label_pc_29873:
  %v0_29874 = load i32, i32* @eax, align 4
  ret i32 %v0_29874
}

define i32 @_ZNSt11__iter_swapILb1EE9iter_swapIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEES8_EEvT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29877:
  ret i32 %arg2
}

define i32 @function_29888(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29888:
  %ebp.global-to-local = alloca i32, align 4
  %v0_29888 = load i32, i32* @ebp, align 4
  %v1_29888 = add i32 %v0_29888, 1
  store i32 %v1_29888, i32* %ebp.global-to-local, align 4
  %v0_2988b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29890 = add i32 %v0_29888, -11
  %v3_29890 = inttoptr i32 %v2_29890 to i32*
  store i32 %v0_2988b, i32* %v3_29890, align 4
  %v0_29895 = load i32, i32* %ebp.global-to-local, align 4
  %v1_29895 = add i32 %v0_29895, -32
  %v1_2989b = call i32 @unknown_459f3(i32 %v1_29895)
  %v1_298a2 = add i32 %v0_29895, -28
  %v1_298a8 = call i32 @unknown_459f3(i32 %v1_298a2)
  ret i32 %v1_298a8

; uselistorder directives
  uselistorder i32 (i32)* @unknown_459f3, { 1, 0 }
}

define i32 @function_2988a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2988a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_298b8() local_unnamed_addr {
dec_label_pc_298b8:
  %v0_298b8 = load i32, i32* @ebx, align 4
  %v1_298b8 = add i32 %v0_298b8, 862319685
  %v2_298b8 = inttoptr i32 %v1_298b8 to i8*
  %v3_298b8 = load i8, i8* %v2_298b8, align 1
  %v4_298b8 = load i32, i32* @ecx, align 4
  %v5_298b8 = trunc i32 %v4_298b8 to i8
  %v6_298b8 = add i8 %v5_298b8, %v3_298b8
  store i8 %v6_298b8, i8* %v2_298b8, align 1
  %v0_298be = load i32, i32* @eax, align 4
  %v1_298be = add i32 %v0_298be, 20
  %v10_298be = icmp eq i32 %v1_298be, 0
  store i32 %v1_298be, i32* @eax, align 4
  br i1 %v10_298be, label %bb, label %dec_label_pc_298c5

bb:                                               ; preds = %dec_label_pc_298b8
  %v1_298c3 = call i32 @function_298ca()
  br label %dec_label_pc_298c5

dec_label_pc_298c5:                               ; preds = %bb, %dec_label_pc_298b8
  %v2_298c3 = phi i32 [ %v1_298c3, %bb ], [ %v1_298be, %dec_label_pc_298b8 ]
  ret i32 %v2_298c3
}

define i32 @function_298ca() local_unnamed_addr {
dec_label_pc_298ca:
  %v0_298cf = load i32, i32* @eax, align 4
  ret i32 %v0_298cf
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_298d0:
  %v0_298ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_298ea
}

define i32 @function_2990e() local_unnamed_addr {
dec_label_pc_2990e:
  %eax.global-to-local = alloca i32, align 4
  %v0_2990e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2990e
}

define i32 @function_29918(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29918:
  %v0_29918 = load i32, i32* @eax, align 4
  %v5_29918 = mul i32 %v0_29918, 2
  %v20_29918 = and i32 %v5_29918, 254
  %v22_29918 = and i32 %v0_29918, -256
  %v23_29918 = or i32 %v20_29918, %v22_29918
  %v0_2991a = load i32, i32* @esi, align 4
  %v0_2991e = load i32, i32* @ebx, align 4
  %v3_29925 = call i32 @unknown_57841(i32 %v23_29918, i32 %v0_2991e, i32 %v0_2991a)
  store i32 %v3_29925, i32* @eax, align 4
  %v0_2992a = load i32, i32* @ebp, align 4
  %v1_2992a = add i32 %v0_2992a, -12
  %v2_2992a = inttoptr i32 %v1_2992a to i32*
  %v3_2992a = load i32, i32* %v2_2992a, align 4
  %v1_2992d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2992d = icmp eq i32 %v1_2992d, %v3_2992a
  br i1 %v3_2992d, label %bb, label %dec_label_pc_29936

bb:                                               ; preds = %dec_label_pc_29918
  %v1_29934 = call i32 @function_2993b()
  br label %dec_label_pc_29936

dec_label_pc_29936:                               ; preds = %bb, %dec_label_pc_29918
  %v3_29934 = phi i32 [ %v1_29934, %bb ], [ %v3_29925, %dec_label_pc_29918 ]
  ret i32 %v3_29934

; uselistorder directives
  uselistorder i32 %v0_29918, { 1, 0 }
}

define i32 @function_2993b() local_unnamed_addr {
dec_label_pc_2993b:
  %v0_29941 = load i32, i32* @eax, align 4
  ret i32 %v0_29941
}

define i32 @_ZNKSt6vectorIhSaIhEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_29942:
  %v1_2995f = call i32 @unknown_45b28(i32 %arg1)
  %v1_29967 = call i32 @unknown_5762e(i32 %v1_2995f)
  store i32 %v1_29967, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29978

bb:                                               ; preds = %dec_label_pc_29942
  %v1_29976 = call i32 @function_2997d()
  br label %dec_label_pc_29978

dec_label_pc_29978:                               ; preds = %bb, %dec_label_pc_29942
  %v2_29976 = phi i32 [ %v1_29976, %bb ], [ %v1_29967, %dec_label_pc_29942 ]
  ret i32 %v2_29976
}

define i32 @function_2997d() local_unnamed_addr {
dec_label_pc_2997d:
  %v0_2997e = load i32, i32* @eax, align 4
  ret i32 %v0_2997e
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2997f:
  ret i32 %arg2
}

define i32 @function_29994(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29994:
  %eax.global-to-local = alloca i32, align 4
  %v0_29994 = load i32, i32* @eax, align 4
  %v1_29994 = trunc i32 %v0_29994 to i8
  %v2_29994 = load i1, i1* @cf, align 1
  %v3_29994 = zext i1 %v2_29994 to i8
  %v4_29994 = add i8 %v3_29994, %v1_29994
  %v22_29994 = zext i8 %v4_29994 to i32
  %v24_29994 = and i32 %v0_29994, -256
  %v25_29994 = or i32 %v22_29994, %v24_29994
  store i32 %v25_29994, i32* %eax.global-to-local, align 4
  %v1_29996 = inttoptr i32 %v25_29994 to i8*
  %v2_29996 = load i8, i8* %v1_29996, align 1
  %v5_29996 = add i8 %v2_29996, %v4_29994
  store i8 %v5_29996, i8* %v1_29996, align 1
  %v0_29998 = load i32, i32* %eax.global-to-local, align 4
  %v1_29998 = load i32, i32* @ebp, align 4
  %v2_29998 = add i32 %v1_29998, -12
  %v3_29998 = inttoptr i32 %v2_29998 to i32*
  store i32 %v0_29998, i32* %v3_29998, align 4
  %v0_2999d = load i32, i32* @ebp, align 4
  %v1_2999d = add i32 %v0_2999d, -33
  store i32 %v1_2999d, i32* %eax.global-to-local, align 4
  %v1_299a0 = add i32 %v0_2999d, -28
  %v2_299aa = call i32 @unknown_57943(i32 %v1_2999d, i32 %v1_299a0)
  store i32 %v2_299aa, i32* %eax.global-to-local, align 4
  %v0_299b2 = load i32, i32* @ebx, align 4
  %v0_299b6 = load i32, i32* @ebp, align 4
  %v1_299b6 = add i32 %v0_299b6, -32
  %v2_299b6 = inttoptr i32 %v1_299b6 to i32*
  %v3_299b6 = load i32, i32* %v2_299b6, align 4
  store i32 %v3_299b6, i32* %eax.global-to-local, align 4
  %v1_299bd = add i32 %v0_299b6, -28
  %v2_299bd = inttoptr i32 %v1_299bd to i32*
  %v3_299bd = load i32, i32* %v2_299bd, align 4
  store i32 %v3_299bd, i32* %eax.global-to-local, align 4
  %v3_299c3 = call i32 @unknown_57978(i32 %v3_299bd, i32 %v3_299b6, i32 %v0_299b2)
  store i32 %v3_299c3, i32* @eax, align 4
  %v0_299c8 = load i32, i32* @ebp, align 4
  %v1_299c8 = add i32 %v0_299c8, -12
  %v2_299c8 = inttoptr i32 %v1_299c8 to i32*
  %v3_299c8 = load i32, i32* %v2_299c8, align 4
  %v1_299cb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_299cb = icmp eq i32 %v1_299cb, %v3_299c8
  br i1 %v3_299cb, label %bb, label %dec_label_pc_299d4

bb:                                               ; preds = %dec_label_pc_29994
  %v1_299d2 = call i32 @function_299d9()
  store i32 %v1_299d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_299d4

dec_label_pc_299d4:                               ; preds = %bb, %dec_label_pc_29994
  %v2_299d2 = phi i32 [ %v1_299d2, %bb ], [ %v3_299c3, %dec_label_pc_29994 ]
  ret i32 %v2_299d2
}

define i32 @function_299d9() local_unnamed_addr {
dec_label_pc_299d9:
  %v0_299dd = load i32, i32* @eax, align 4
  ret i32 %v0_299dd
}

define i32 @_ZSt8distanceIPKhENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_299de:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_299fc = ptrtoint i32* %stack_var_-37 to i32
  %v2_299ff = ptrtoint i32* %stack_var_-32 to i32
  %v2_29a09 = call i32 @unknown_57a20(i32 %v2_299fc, i32 %v2_299ff)
  %v3_29a11 = load i32, i32* %stack_var_-32, align 4
  %v0_29a14 = load i32, i32* %ebx.global-to-local, align 4
  %v3_29a22 = call i32 @unknown_57a55(i32 %v3_29a11, i32 %arg2, i32 %v0_29a14)
  ret i32 %v3_29a22
}

define i32 @function_29a2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29a2c:
  %v0_29a2c = load i32, i32* @eax, align 4
  %v1_29a2c = load i1, i1* @cf, align 1
  %v2_29a2c = zext i1 %v1_29a2c to i32
  %v3_29a2c = add i32 %v0_29a2c, 20
  %v4_29a2c = add i32 %v3_29a2c, %v2_29a2c
  %v14_29a2c = icmp eq i32 %v4_29a2c, 0
  store i32 %v4_29a2c, i32* @eax, align 4
  br i1 %v14_29a2c, label %bb, label %dec_label_pc_29a33

bb:                                               ; preds = %dec_label_pc_29a2c
  %v1_29a31 = call i32 @function_29a38()
  br label %dec_label_pc_29a33

dec_label_pc_29a33:                               ; preds = %bb, %dec_label_pc_29a2c
  %v3_29a31 = phi i32 [ %v1_29a31, %bb ], [ %v4_29a2c, %dec_label_pc_29a2c ]
  ret i32 %v3_29a31
}

define i32 @function_29a38() local_unnamed_addr {
dec_label_pc_29a38:
  %v0_29a3c = load i32, i32* @eax, align 4
  ret i32 %v0_29a3c
}

define i32 @_ZSt22__uninitialized_copy_aIPKhPhhET0_T_S4_S3_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29a3d:
  %v7_29a7a = call i32 @unknown_57af7(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_29a7a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29a8b

bb:                                               ; preds = %dec_label_pc_29a3d
  %v1_29a89 = call i32 @function_29a90()
  br label %dec_label_pc_29a8b

dec_label_pc_29a8b:                               ; preds = %bb, %dec_label_pc_29a3d
  %v2_29a89 = phi i32 [ %v1_29a89, %bb ], [ %v7_29a7a, %dec_label_pc_29a3d ]
  ret i32 %v2_29a89

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29a90() local_unnamed_addr {
dec_label_pc_29a90:
  %v0_29a91 = load i32, i32* @eax, align 4
  ret i32 %v0_29a91
}

define i32 @_ZSt7advanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29a92:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %v2_29ab6 = ptrtoint i32* %stack_var_-37 to i32
  %v2_29ac3 = call i32 @unknown_57a56(i32 %v2_29ab6, i32 %arg1)
  %v0_29acb = load i32, i32* %ebx.global-to-local, align 4
  %v3_29adc = call i32 @unknown_57b9b(i32 %arg1, i32 %arg2, i32 %v0_29acb)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29aed

bb:                                               ; preds = %dec_label_pc_29a92
  %v1_29aeb = call i32 @function_29af2()
  br label %dec_label_pc_29aed

dec_label_pc_29aed:                               ; preds = %bb, %dec_label_pc_29a92
  %v2_29aeb = phi i32 [ %v1_29aeb, %bb ], [ 0, %dec_label_pc_29a92 ]
  ret i32 %v2_29aeb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29af2() local_unnamed_addr {
dec_label_pc_29af2:
  %v0_29af6 = load i32, i32* @eax, align 4
  ret i32 %v0_29af6
}

define i32 @_ZSt8distanceIPhENSt15iterator_traitsIT_E15difference_typeES2_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29af7:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_29b15 = ptrtoint i32* %stack_var_-37 to i32
  %v2_29b18 = ptrtoint i32* %stack_var_-32 to i32
  %v2_29b22 = call i32 @unknown_57c49(i32 %v2_29b15, i32 %v2_29b18)
  %v3_29b2a = load i32, i32* %stack_var_-32, align 4
  %v0_29b2d = load i32, i32* %ebx.global-to-local, align 4
  %v3_29b3b = call i32 @unknown_57c7e(i32 %v3_29b2a, i32 %arg2, i32 %v0_29b2d)
  store i32 %v3_29b3b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29b4c

bb:                                               ; preds = %dec_label_pc_29af7
  %v1_29b4a = call i32 @function_29b51()
  br label %dec_label_pc_29b4c

dec_label_pc_29b4c:                               ; preds = %bb, %dec_label_pc_29af7
  %v2_29b4a = phi i32 [ %v1_29b4a, %bb ], [ %v3_29b3b, %dec_label_pc_29af7 ]
  ret i32 %v2_29b4a
}

define i32 @function_29b51() local_unnamed_addr {
dec_label_pc_29b51:
  %v0_29b55 = load i32, i32* @eax, align 4
  ret i32 %v0_29b55
}

define i32 @_ZSt4copyIPhN9__gnu_cxx17__normal_iteratorIS0_St6vectorIhSaIhEEEEET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_29b56:
  %v1_29b86 = call i32 @unknown_4bcb7(i32 %arg3)
  %v1_29b93 = call i32 @unknown_4bcb7(i32 %arg2)
  %v4_29baf = call i32 @unknown_57d20(i32 %arg1, i32 %v1_29b93, i32 %v1_29b86, i32 %arg4)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29bc6

bb:                                               ; preds = %dec_label_pc_29b56
  %v1_29bc4 = call i32 @function_29bcb()
  br label %dec_label_pc_29bc6

dec_label_pc_29bc6:                               ; preds = %bb, %dec_label_pc_29b56
  %v2_29bc4 = phi i32 [ %v1_29bc4, %bb ], [ %arg1, %dec_label_pc_29b56 ]
  ret i32 %v2_29bc4

; uselistorder directives
  uselistorder i32 (i32)* @unknown_4bcb7, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_29bcb() local_unnamed_addr {
dec_label_pc_29bcb:
  %v0_29bcf = load i32, i32* @eax, align 4
  ret i32 %v0_29bcf
}

define i32 @_ZSt7advanceIPhjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29bd2:
  %stack_var_-37 = alloca i32, align 4
  %v2_29bf6 = ptrtoint i32* %stack_var_-37 to i32
  ret i32 %v2_29bf6
}

define i32 @function_29c06(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29c06:
  %v0_29c0b = load i32, i32* @ebx, align 4
  %v0_29c0f = load i32, i32* @ebp, align 4
  %v1_29c0f = add i32 %v0_29c0f, -16
  %v2_29c0f = inttoptr i32 %v1_29c0f to i32*
  %v3_29c0f = load i32, i32* %v2_29c0f, align 4
  %v1_29c16 = add i32 %v0_29c0f, -28
  %v2_29c16 = inttoptr i32 %v1_29c16 to i32*
  %v3_29c16 = load i32, i32* %v2_29c16, align 4
  %sext = mul i32 %v0_29c0b, 16777216
  %v3_29c1c = sdiv i32 %sext, 16777216
  %v4_29c1c = call i32 @unknown_57e2e(i32 %v3_29c16, i32 %v3_29c0f, i32 %v3_29c1c)
  %v0_29c21 = load i32, i32* @ebp, align 4
  %v1_29c21 = add i32 %v0_29c21, -12
  %v2_29c21 = inttoptr i32 %v1_29c21 to i32*
  %v3_29c21 = load i32, i32* %v2_29c21, align 4
  %v1_29c24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29c24 = xor i32 %v1_29c24, %v3_29c21
  %v3_29c24 = icmp eq i32 %v2_29c24, 0
  store i32 %v2_29c24, i32* @eax, align 4
  br i1 %v3_29c24, label %bb, label %dec_label_pc_29c2d

bb:                                               ; preds = %dec_label_pc_29c06
  %v1_29c2b = call i32 @function_29c32()
  br label %dec_label_pc_29c2d

dec_label_pc_29c2d:                               ; preds = %bb, %dec_label_pc_29c06
  %v3_29c2b = phi i32 [ %v1_29c2b, %bb ], [ %v2_29c24, %dec_label_pc_29c06 ]
  ret i32 %v3_29c2b
}

define i32 @function_29c32() local_unnamed_addr {
dec_label_pc_29c32:
  %v0_29c36 = load i32, i32* @eax, align 4
  ret i32 %v0_29c36
}

define i32 @_ZSt4copyIPKhN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29c37:
  ret i32 %arg3
}

define i32 @function_29c50(i32 %arg1) local_unnamed_addr {
dec_label_pc_29c50:
  %v0_29c50 = load i32, i32* @ebp, align 4
  %v1_29c50 = add i32 %v0_29c50, 20
  %v2_29c50 = inttoptr i32 %v1_29c50 to i32*
  %v3_29c50 = load i32, i32* %v2_29c50, align 4
  %v2_29c53 = add i32 %v0_29c50, -40
  %v3_29c53 = inttoptr i32 %v2_29c53 to i32*
  store i32 %v3_29c50, i32* %v3_29c53, align 4
  %v0_29c56 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_29c5c = load i32, i32* @ebp, align 4
  %v2_29c5c = add i32 %v1_29c5c, -12
  %v3_29c5c = inttoptr i32 %v2_29c5c to i32*
  store i32 %v0_29c56, i32* %v3_29c5c, align 4
  %v0_29c61 = load i32, i32* @ebp, align 4
  %v1_29c61 = add i32 %v0_29c61, -36
  %v2_29c61 = inttoptr i32 %v1_29c61 to i32*
  %v3_29c61 = load i32, i32* %v2_29c61, align 4
  %v1_29c67 = call i32 @unknown_57ed9(i32 %v3_29c61)
  store i32 %v1_29c67, i32* @ebx, align 4
  %v0_29c6e = load i32, i32* @ebp, align 4
  %v1_29c6e = add i32 %v0_29c6e, -32
  %v2_29c6e = inttoptr i32 %v1_29c6e to i32*
  %v3_29c6e = load i32, i32* %v2_29c6e, align 4
  %v1_29c74 = call i32 @unknown_57ed9(i32 %v3_29c6e)
  %v0_29c7b = load i32, i32* @ebp, align 4
  %v1_29c7b = add i32 %v0_29c7b, -28
  %v2_29c7b = inttoptr i32 %v1_29c7b to i32*
  %v3_29c7b = load i32, i32* %v2_29c7b, align 4
  %v1_29c7e = add i32 %v0_29c7b, -40
  %v2_29c7e = inttoptr i32 %v1_29c7e to i32*
  %v3_29c7e = load i32, i32* %v2_29c7e, align 4
  %v0_29c85 = load i32, i32* @ebx, align 4
  %v4_29c90 = call i32 @unknown_57f0e(i32 %v3_29c7b, i32 %v1_29c74, i32 %v0_29c85, i32 %v3_29c7e)
  %v0_29c98 = load i32, i32* @ebp, align 4
  %v1_29c98 = add i32 %v0_29c98, -28
  %v2_29c98 = inttoptr i32 %v1_29c98 to i32*
  %v3_29c98 = load i32, i32* %v2_29c98, align 4
  store i32 %v3_29c98, i32* @eax, align 4
  %v1_29c9b = add i32 %v0_29c98, -12
  %v2_29c9b = inttoptr i32 %v1_29c9b to i32*
  %v3_29c9b = load i32, i32* %v2_29c9b, align 4
  %v1_29c9e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29c9e = icmp eq i32 %v1_29c9e, %v3_29c9b
  br i1 %v3_29c9e, label %bb, label %dec_label_pc_29ca7

bb:                                               ; preds = %dec_label_pc_29c50
  %v1_29ca5 = call i32 @function_29cac()
  br label %dec_label_pc_29ca7

dec_label_pc_29ca7:                               ; preds = %bb, %dec_label_pc_29c50
  %v2_29ca5 = phi i32 [ %v1_29ca5, %bb ], [ %v3_29c98, %dec_label_pc_29c50 ]
  ret i32 %v2_29ca5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_57ed9, { 1, 0 }
}

define i32 @function_29cac() local_unnamed_addr {
dec_label_pc_29cac:
  %v0_29cac = load i32, i32* @ebp, align 4
  %v1_29cac = add i32 %v0_29cac, -4
  %v2_29cac = inttoptr i32 %v1_29cac to i32*
  %v3_29cac = load i32, i32* %v2_29cac, align 4
  store i32 %v3_29cac, i32* @ebx, align 4
  %v0_29cb0 = load i32, i32* @eax, align 4
  ret i32 %v0_29cb0
}

define i32 @_ZSt7advanceIPKhjEvRT_T0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29cb3:
  %stack_var_-37 = alloca i32, align 4
  %v2_29cd7 = ptrtoint i32* %stack_var_-37 to i32
  %v2_29ce4 = call i32 @unknown_57cf5(i32 %v2_29cd7, i32 %arg1)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_29d00(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d00:
  %v0_29d02 = load i32, i32* @ebp, align 4
  %v1_29d02 = add i32 %v0_29d02, -12
  %v2_29d02 = inttoptr i32 %v1_29d02 to i32*
  %v3_29d02 = load i32, i32* %v2_29d02, align 4
  %v1_29d05 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29d05 = xor i32 %v1_29d05, %v3_29d02
  %v3_29d05 = icmp eq i32 %v2_29d05, 0
  store i32 %v2_29d05, i32* @eax, align 4
  br i1 %v3_29d05, label %bb, label %dec_label_pc_29d0e

bb:                                               ; preds = %dec_label_pc_29d00
  %v1_29d0c = call i32 @function_29d13()
  br label %dec_label_pc_29d0e

dec_label_pc_29d0e:                               ; preds = %bb, %dec_label_pc_29d00
  %v2_29d0c = phi i32 [ %v1_29d0c, %bb ], [ %v2_29d05, %dec_label_pc_29d00 ]
  ret i32 %v2_29d0c
}

define i32 @function_29d13() local_unnamed_addr {
dec_label_pc_29d13:
  %v0_29d17 = load i32, i32* @eax, align 4
  ret i32 %v0_29d17
}

define i32 @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29d18:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v2_29d3b = ptrtoint i32* %stack_var_-20 to i32
  %v1_29d48 = call i32 @unknown_4bd5b(i32 %v2_29d3b)
  %v2_29d50 = ptrtoint i32* %stack_var_-24 to i32
  ret i32 %v2_29d50
}

define i32 @function_29d54(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29d54:
  %v0_29d58 = load i32, i32* @eax, align 4
  %v11_29d58 = and i32 %v0_29d58, -252
  %v1_29d5d = call i32 @unknown_4bd5b(i32 %v11_29d58)
  %v0_29d65 = load i32, i32* @ebp, align 4
  %v1_29d65 = add i32 %v0_29d65, -36
  %v2_29d65 = inttoptr i32 %v1_29d65 to i32*
  %v3_29d65 = load i32, i32* %v2_29d65, align 4
  %v1_29d6c = add i32 %v0_29d65, -16
  %v2_29d6c = inttoptr i32 %v1_29d6c to i32*
  %v3_29d6c = load i32, i32* %v2_29d6c, align 4
  %v1_29d73 = add i32 %v0_29d65, -20
  %v2_29d73 = inttoptr i32 %v1_29d73 to i32*
  %v3_29d73 = load i32, i32* %v2_29d73, align 4
  %v3_29d79 = call i32 @unknown_580c7(i32 %v3_29d73, i32 %v3_29d6c, i32 %v3_29d65)
  store i32 %v3_29d79, i32* @eax, align 4
  %v0_29d7e = load i32, i32* @ebp, align 4
  %v1_29d7e = add i32 %v0_29d7e, -12
  %v2_29d7e = inttoptr i32 %v1_29d7e to i32*
  %v3_29d7e = load i32, i32* %v2_29d7e, align 4
  %v1_29d81 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29d81 = icmp eq i32 %v1_29d81, %v3_29d7e
  br i1 %v3_29d81, label %bb, label %dec_label_pc_29d8a

bb:                                               ; preds = %dec_label_pc_29d54
  %v1_29d88 = call i32 @function_29d8f()
  br label %dec_label_pc_29d8a

dec_label_pc_29d8a:                               ; preds = %bb, %dec_label_pc_29d54
  %v2_29d88 = phi i32 [ %v1_29d88, %bb ], [ %v3_29d79, %dec_label_pc_29d54 ]
  ret i32 %v2_29d88
}

define i32 @function_29d8f() local_unnamed_addr {
dec_label_pc_29d8f:
  %v0_29d90 = load i32, i32* @eax, align 4
  ret i32 %v0_29d90
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEELb1EE7_S_baseES7_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29d91:
  %stack_var_-32 = alloca i32, align 4
  %v2_29da8 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_29da8
}

define i32 @function_29db0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29db0:
  %v2_29db1 = load i32, i32* @eax, align 4
  %v4_29db1 = mul i32 %v2_29db1, 2
  %v21_29db1 = inttoptr i32 %v2_29db1 to i32*
  store i32 %v4_29db1, i32* %v21_29db1, align 4
  %v0_29db5 = load i32, i32* @ebp, align 4
  %v1_29db5 = add i32 %v0_29db5, -12
  %v2_29db5 = inttoptr i32 %v1_29db5 to i32*
  %v3_29db5 = load i32, i32* %v2_29db5, align 4
  %v1_29db8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29db8 = icmp eq i32 %v1_29db8, %v3_29db5
  br i1 %v3_29db8, label %bb, label %dec_label_pc_29db0.dec_label_pc_29dc1_crit_edge

dec_label_pc_29db0.dec_label_pc_29dc1_crit_edge:  ; preds = %dec_label_pc_29db0
  %v2_29dbf.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_29dc1

bb:                                               ; preds = %dec_label_pc_29db0
  %v1_29dbf = call i32 @function_29dc6()
  br label %dec_label_pc_29dc1

dec_label_pc_29dc1:                               ; preds = %dec_label_pc_29db0.dec_label_pc_29dc1_crit_edge, %bb
  %v2_29dbf = phi i32 [ %v2_29dbf.pre, %dec_label_pc_29db0.dec_label_pc_29dc1_crit_edge ], [ %v1_29dbf, %bb ]
  ret i32 %v2_29dbf

; uselistorder directives
  uselistorder i32 %v2_29db1, { 1, 0 }
  uselistorder label %dec_label_pc_29dc1, { 1, 0 }
}

define i32 @function_29dc6() local_unnamed_addr {
dec_label_pc_29dc6:
  %v0_29dc7 = load i32, i32* @eax, align 4
  ret i32 %v0_29dc7
}

define i32 @_ZNSt7__equalILb1EE5equalIhEEbPKT_S4_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29dc8:
  ret i32 %arg1
}

define i32 @function_29df2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29df2:
  %v2_29df2 = load i32, i32* @ecx, align 4
  %v4_29df2 = udiv i32 %v2_29df2, 2
  %v12_29df2 = inttoptr i32 %v2_29df2 to i32*
  store i32 %v4_29df2, i32* %v12_29df2, align 4
  %v0_29df4 = load i32, i32* @ecx, align 4
  %v1_29df4 = add i32 %v0_29df4, 608471496
  %v2_29df4 = inttoptr i32 %v1_29df4 to i32*
  %v3_29df4 = load i32, i32* %v2_29df4, align 4
  %v4_29df4 = udiv i32 %v3_29df4, 256
  %v5_29df4 = mul i32 %v3_29df4, 16777216
  %v6_29df4 = or i32 %v4_29df4, %v5_29df4
  store i32 %v6_29df4, i32* %v2_29df4, align 4
  %v0_29dfb = load i32, i32* @ebp, align 4
  %v1_29e02 = add i32 %v0_29dfb, -28
  %v2_29e02 = inttoptr i32 %v1_29e02 to i32*
  %v3_29e02 = load i32, i32* %v2_29e02, align 4
  ret i32 %v3_29e02

; uselistorder directives
  uselistorder i32 %v2_29df2, { 1, 0 }
}

define i32 @function_29e22() local_unnamed_addr {
dec_label_pc_29e22:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29e22 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29e22 = add i32 %v0_29e22, -1
  store i32 %v1_29e22, i32* %ecx.global-to-local, align 4
  %v0_29e24 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29e24
}

define i32 @_ZNSaI5CTxInEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e26:
  %v1_29e43 = call i32 @unknown_58248(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29e54

bb:                                               ; preds = %dec_label_pc_29e26
  %v1_29e52 = call i32 @function_29e59()
  br label %dec_label_pc_29e54

dec_label_pc_29e54:                               ; preds = %bb, %dec_label_pc_29e26
  %v2_29e52 = phi i32 [ %v1_29e52, %bb ], [ 0, %dec_label_pc_29e26 ]
  ret i32 %v2_29e52
}

define i32 @function_29e59() local_unnamed_addr {
dec_label_pc_29e59:
  %v0_29e5a = load i32, i32* @eax, align 4
  ret i32 %v0_29e5a
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e5c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29e7f

bb:                                               ; preds = %dec_label_pc_29e5c
  %v2_29e7d = call i32 @function_29e84(i32 %arg1)
  br label %dec_label_pc_29e7f

dec_label_pc_29e7f:                               ; preds = %bb, %dec_label_pc_29e5c
  %v3_29e7d = phi i32 [ %v2_29e7d, %bb ], [ 0, %dec_label_pc_29e5c ]
  ret i32 %v3_29e7d
}

define i32 @function_29e84(i32 %arg1) local_unnamed_addr {
dec_label_pc_29e84:
  %v0_29e85 = load i32, i32* @eax, align 4
  ret i32 %v0_29e85
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29e86:
  ret i32 %arg2
}

define i32 @function_29ec4() local_unnamed_addr {
dec_label_pc_29ec4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29ec4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_29ec4 = add i32 %v0_29ec4, -1
  store i32 %v1_29ec4, i32* %ecx.global-to-local, align 4
  %v0_29ec6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29ec6
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP5CTxInEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29ec7:
  %v15_29f00105 = icmp eq i32 %arg1, %arg2
  %v1_29f03106 = icmp eq i1 %v15_29f00105, false
  %v5_29f06110 = icmp eq i1 %v1_29f03106, false
  %v1_29f08111 = icmp eq i1 %v5_29f06110, false
  br i1 %v1_29f08111, label %dec_label_pc_29ee6, label %dec_label_pc_29f0a

dec_label_pc_29ee6:                               ; preds = %dec_label_pc_29ec7, %dec_label_pc_29ee6
  %stack_var_-32.0112 = phi i32 [ %v4_29ef9, %dec_label_pc_29ee6 ], [ %arg1, %dec_label_pc_29ec7 ]
  %v1_29eec = call i32 @unknown_58313(i32 %stack_var_-32.0112)
  %v1_29ef4 = call i32 @unknown_58340(i32 %v1_29eec)
  %v4_29ef9 = add i32 %stack_var_-32.0112, 52
  %v15_29f00 = icmp eq i32 %v4_29ef9, %arg2
  %v1_29f03 = icmp eq i1 %v15_29f00, false
  %v5_29f06 = icmp eq i1 %v1_29f03, false
  %v1_29f08 = icmp eq i1 %v5_29f06, false
  br i1 %v1_29f08, label %dec_label_pc_29ee6, label %dec_label_pc_29f0a

dec_label_pc_29f0a:                               ; preds = %dec_label_pc_29ee6, %dec_label_pc_29ec7
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29f16

bb:                                               ; preds = %dec_label_pc_29f0a
  %v1_29f14 = call i32 @function_29f1b()
  br label %dec_label_pc_29f16

dec_label_pc_29f16:                               ; preds = %bb, %dec_label_pc_29f0a
  %v2_29f14 = phi i32 [ %v1_29f14, %bb ], [ 0, %dec_label_pc_29f0a ]
  ret i32 %v2_29f14

; uselistorder directives
  uselistorder i32 %v4_29ef9, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_29ee6, { 1, 0 }
}

define i32 @function_29f1b() local_unnamed_addr {
dec_label_pc_29f1b:
  %v0_29f1c = load i32, i32* @eax, align 4
  ret i32 %v0_29f1c
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_29f1e:
  ret i32 %arg2
}

define i32 @function_29f5c() local_unnamed_addr {
dec_label_pc_29f5c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_29f5c = load i32, i32* %ecx.global-to-local, align 4
  %v1_29f5c = add i32 %v0_29f5c, -1
  store i32 %v1_29f5c, i32* %ecx.global-to-local, align 4
  %v0_29f5e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_29f5e
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIP6CTxOutEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_29f5f:
  %v15_29f98105 = icmp eq i32 %arg1, %arg2
  %v1_29f9b106 = icmp eq i1 %v15_29f98105, false
  %v5_29f9e110 = icmp eq i1 %v1_29f9b106, false
  %v1_29fa0111 = icmp eq i1 %v5_29f9e110, false
  br i1 %v1_29fa0111, label %dec_label_pc_29f7e, label %dec_label_pc_29fa2

dec_label_pc_29f7e:                               ; preds = %dec_label_pc_29f5f, %dec_label_pc_29f7e
  %stack_var_-32.0112 = phi i32 [ %v4_29f91, %dec_label_pc_29f7e ], [ %arg1, %dec_label_pc_29f5f ]
  %v1_29f84 = call i32 @unknown_5840d(i32 %stack_var_-32.0112)
  %v1_29f8c = call i32 @unknown_5843a(i32 %v1_29f84)
  %v4_29f91 = add i32 %stack_var_-32.0112, 20
  %v15_29f98 = icmp eq i32 %v4_29f91, %arg2
  %v1_29f9b = icmp eq i1 %v15_29f98, false
  %v5_29f9e = icmp eq i1 %v1_29f9b, false
  %v1_29fa0 = icmp eq i1 %v5_29f9e, false
  br i1 %v1_29fa0, label %dec_label_pc_29f7e, label %dec_label_pc_29fa2

dec_label_pc_29fa2:                               ; preds = %dec_label_pc_29f7e, %dec_label_pc_29f5f
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_29fae

bb:                                               ; preds = %dec_label_pc_29fa2
  %v1_29fac = call i32 @function_29fb3()
  br label %dec_label_pc_29fae

dec_label_pc_29fae:                               ; preds = %bb, %dec_label_pc_29fa2
  %v2_29fac = phi i32 [ %v1_29fac, %bb ], [ 0, %dec_label_pc_29fa2 ]
  ret i32 %v2_29fac

; uselistorder directives
  uselistorder i32 %v4_29f91, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_29f7e, { 1, 0 }
}

define i32 @function_29fb3() local_unnamed_addr {
dec_label_pc_29fb3:
  %v0_29fb4 = load i32, i32* @eax, align 4
  ret i32 %v0_29fb4
}

define i32 @_ZN9__gnu_cxxneIPK5CTxInSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fb5:
  ret i32 %arg1
}

define i32 @function_29fc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fc0:
  %v0_29fc0 = load i32, i32* @ebp, align 4
  %v1_29fc6 = add i32 %v0_29fc0, 3
  store i32 %v1_29fc6, i32* @ebp, align 4
  %v0_29fc9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_29fce = add i32 %v0_29fc0, -9
  %v3_29fce = inttoptr i32 %v2_29fce to i32*
  store i32 %v0_29fc9, i32* %v3_29fce, align 4
  %v0_29fd3 = load i32, i32* @ebp, align 4
  %v1_29fd3 = add i32 %v0_29fd3, -28
  %v2_29fd3 = inttoptr i32 %v1_29fd3 to i32*
  %v3_29fd3 = load i32, i32* %v2_29fd3, align 4
  ret i32 %v3_29fd3
}

define i32 @function_29fd6(i32 %arg1) local_unnamed_addr {
dec_label_pc_29fd6:
  %v0_29fd6 = load i32, i32* @eax, align 4
  %v1_29fd9 = call i32 @unknown_4dd43(i32 %v0_29fd6)
  %v1_29fde = inttoptr i32 %v1_29fd9 to i32*
  %v2_29fde = load i32, i32* %v1_29fde, align 4
  store i32 %v2_29fde, i32* @ebx, align 4
  %v0_29fe0 = load i32, i32* @ebp, align 4
  %v1_29fe0 = add i32 %v0_29fe0, -32
  %v2_29fe0 = inttoptr i32 %v1_29fe0 to i32*
  %v3_29fe0 = load i32, i32* %v2_29fe0, align 4
  %v1_29fe6 = call i32 @unknown_4dd43(i32 %v3_29fe0)
  %v1_29feb = inttoptr i32 %v1_29fe6 to i32*
  %v2_29feb = load i32, i32* %v1_29feb, align 4
  %v0_29fed = load i32, i32* @ebx, align 4
  %v12_29fed = icmp eq i32 %v0_29fed, %v2_29feb
  %v1_29fef = icmp eq i1 %v12_29fed, false
  %v2_29fef = zext i1 %v1_29fef to i32
  %v4_29fef = and i32 %v2_29feb, -256
  %v5_29fef = or i32 %v2_29fef, %v4_29fef
  store i32 %v5_29fef, i32* @eax, align 4
  %v0_29ff2 = load i32, i32* @ebp, align 4
  %v1_29ff2 = add i32 %v0_29ff2, -12
  %v2_29ff2 = inttoptr i32 %v1_29ff2 to i32*
  %v3_29ff2 = load i32, i32* %v2_29ff2, align 4
  %v1_29ff5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_29ff5 = icmp eq i32 %v1_29ff5, %v3_29ff2
  br i1 %v3_29ff5, label %bb, label %dec_label_pc_29ffe

bb:                                               ; preds = %dec_label_pc_29fd6
  %v1_29ffc = call i32 @function_2a003()
  br label %dec_label_pc_29ffe

dec_label_pc_29ffe:                               ; preds = %bb, %dec_label_pc_29fd6
  %v2_29ffc = phi i32 [ %v1_29ffc, %bb ], [ %v5_29fef, %dec_label_pc_29fd6 ]
  ret i32 %v2_29ffc

; uselistorder directives
  uselistorder i32 %v2_29feb, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4dd43, { 1, 0 }
}

define i32 @function_2a003() local_unnamed_addr {
dec_label_pc_2a003:
  %v0_2a008 = load i32, i32* @eax, align 4
  ret i32 %v0_2a008
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEppEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a00a:
  ret i32 %arg1
}

define i32 @function_2a014(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a014:
  %v0_2a014 = load i32, i32* @ebp, align 4
  %v1_2a014 = add i32 %v0_2a014, 1
  store i32 %v1_2a014, i32* @ebp, align 4
  %v0_2a017 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a01c = add i32 %v0_2a014, -11
  %v3_2a01c = inttoptr i32 %v2_2a01c to i32*
  store i32 %v0_2a017, i32* %v3_2a01c, align 4
  %v0_2a021 = load i32, i32* @ebp, align 4
  %v1_2a021 = add i32 %v0_2a021, -28
  %v2_2a021 = inttoptr i32 %v1_2a021 to i32*
  %v3_2a021 = load i32, i32* %v2_2a021, align 4
  %v1_2a024 = inttoptr i32 %v3_2a021 to i32*
  %v2_2a024 = load i32, i32* %v1_2a024, align 4
  %v1_2a026 = add i32 %v2_2a024, 52
  %v2_2a02c = inttoptr i32 %v3_2a021 to i32*
  store i32 %v1_2a026, i32* %v2_2a02c, align 4
  %v0_2a02e = load i32, i32* @ebp, align 4
  %v1_2a02e = add i32 %v0_2a02e, -28
  %v2_2a02e = inttoptr i32 %v1_2a02e to i32*
  %v3_2a02e = load i32, i32* %v2_2a02e, align 4
  store i32 %v3_2a02e, i32* @eax, align 4
  %v1_2a031 = add i32 %v0_2a02e, -12
  %v2_2a031 = inttoptr i32 %v1_2a031 to i32*
  %v3_2a031 = load i32, i32* %v2_2a031, align 4
  %v1_2a034 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a034 = icmp eq i32 %v1_2a034, %v3_2a031
  br i1 %v3_2a034, label %bb, label %dec_label_pc_2a03d

bb:                                               ; preds = %dec_label_pc_2a014
  %v1_2a03b = call i32 @function_2a042()
  br label %dec_label_pc_2a03d

dec_label_pc_2a03d:                               ; preds = %bb, %dec_label_pc_2a014
  %v2_2a03b = phi i32 [ %v1_2a03b, %bb ], [ %v3_2a02e, %dec_label_pc_2a014 ]
  ret i32 %v2_2a03b
}

define i32 @function_2a042() local_unnamed_addr {
dec_label_pc_2a042:
  %v0_2a043 = load i32, i32* @eax, align 4
  ret i32 %v0_2a043
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS1_SaIS1_EEEdeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2a044:
  %v2_2a05e = load i32, i32* %arg1, align 4
  ret i32 %v2_2a05e
}

define i32 @function_2a068(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a068:
  %zf.global-to-local = alloca i1, align 1
  %v2_2a068 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2a068 = load i32, i32* @eax, align 4
  %v4_2a068 = trunc i32 %v3_2a068 to i8
  %v5_2a068 = add i8 %v4_2a068, %v2_2a068
  %v15_2a068 = icmp eq i8 %v5_2a068, 0
  store i1 %v15_2a068, i1* %zf.global-to-local, align 1
  %v21_2a068 = inttoptr i32 %v3_2a068 to i8*
  store i8 %v5_2a068, i8* %v21_2a068, align 1
  %v0_2a06a = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2a06a, label %bb, label %dec_label_pc_2a068.dec_label_pc_2a06c_crit_edge

dec_label_pc_2a068.dec_label_pc_2a06c_crit_edge:  ; preds = %dec_label_pc_2a068
  %v2_2a06a.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2a06c

bb:                                               ; preds = %dec_label_pc_2a068
  %v1_2a06a = call i32 @function_2a071()
  br label %dec_label_pc_2a06c

dec_label_pc_2a06c:                               ; preds = %dec_label_pc_2a068.dec_label_pc_2a06c_crit_edge, %bb
  %v2_2a06a = phi i32 [ %v2_2a06a.pre, %dec_label_pc_2a068.dec_label_pc_2a06c_crit_edge ], [ %v1_2a06a, %bb ]
  ret i32 %v2_2a06a

; uselistorder directives
  uselistorder label %dec_label_pc_2a06c, { 1, 0 }
}

define i32 @function_2a071() local_unnamed_addr {
dec_label_pc_2a071:
  %v0_2a072 = load i32, i32* @eax, align 4
  ret i32 %v0_2a072
}

define i32 @_ZN9__gnu_cxxneIPK6CTxOutSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a073:
  %v1_2a097 = call i32 @unknown_4de69(i32 %arg1)
  %v1_2a09c = inttoptr i32 %v1_2a097 to i32*
  %v2_2a09c = load i32, i32* %v1_2a09c, align 4
  %v1_2a0a4 = call i32 @unknown_4de69(i32 %arg2)
  %v1_2a0a9 = inttoptr i32 %v1_2a0a4 to i32*
  %v2_2a0a9 = load i32, i32* %v1_2a0a9, align 4
  %v12_2a0ab = icmp eq i32 %v2_2a09c, %v2_2a0a9
  %v1_2a0ad = icmp eq i1 %v12_2a0ab, false
  %v2_2a0ad = zext i1 %v1_2a0ad to i32
  %v4_2a0ad = and i32 %v2_2a0a9, -256
  %v5_2a0ad = or i32 %v2_2a0ad, %v4_2a0ad
  ret i32 %v5_2a0ad

; uselistorder directives
  uselistorder i32 %v2_2a0a9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4de69, { 1, 0 }
}

define i32 @function_2a0c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a0c0:
  %v0_2a0c0 = load i32, i32* @ebx, align 4
  %v1_2a0c0 = add i32 %v0_2a0c0, 1566258372
  %v2_2a0c0 = inttoptr i32 %v1_2a0c0 to i32*
  %v3_2a0c0 = load i32, i32* %v2_2a0c0, align 4
  %v4_2a0c0 = add i32 %v3_2a0c0, 1
  store i32 %v4_2a0c0, i32* %v2_2a0c0, align 4
  %v0_2a0c6 = load i32, i32* @eax, align 4
  ret i32 %v0_2a0c6
}

define i32 @_ZNSaI6CTxOutEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a0c8:
  %v2_2a0f2 = call i32 @unknown_585d8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a103

bb:                                               ; preds = %dec_label_pc_2a0c8
  %v1_2a101 = call i32 @function_2a108()
  br label %dec_label_pc_2a103

dec_label_pc_2a103:                               ; preds = %bb, %dec_label_pc_2a0c8
  %v2_2a101 = phi i32 [ %v1_2a101, %bb ], [ 0, %dec_label_pc_2a0c8 ]
  ret i32 %v2_2a101
}

define i32 @function_2a108() local_unnamed_addr {
dec_label_pc_2a108:
  %v0_2a109 = load i32, i32* @eax, align 4
  ret i32 %v0_2a109
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutE8allocateEjPKv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a10a:
  ret i32 %arg2
}

define i32 @function_2a11e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a11e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2a11e = load i32, i32* @ecx, align 4
  %v1_2a11e = add i32 %v0_2a11e, -1587159995
  %v2_2a11e = inttoptr i32 %v1_2a11e to i8*
  %v3_2a11e = load i8, i8* %v2_2a11e, align 1
  %v5_2a11e = trunc i32 %v0_2a11e to i8
  %v6_2a11e = load i1, i1* @cf, align 1
  %v7_2a11e = zext i1 %v6_2a11e to i8
  %v8_2a11e = add i8 %v3_2a11e, %v5_2a11e
  %v9_2a11e = add i8 %v7_2a11e, %v8_2a11e
  %v27_2a11e = icmp ule i8 %v9_2a11e, %v3_2a11e
  %v28_2a11e = icmp ult i8 %v8_2a11e, %v3_2a11e
  %v29_2a11e = select i1 %v6_2a11e, i1 %v27_2a11e, i1 %v28_2a11e
  store i1 %v29_2a11e, i1* %cf.global-to-local, align 1
  store i8 %v9_2a11e, i8* %v2_2a11e, align 1
  %v0_2a124 = load i32, i32* @eax, align 4
  %v1_2a124 = trunc i32 %v0_2a124 to i8
  %v2_2a124 = load i1, i1* %cf.global-to-local, align 1
  %v3_2a124 = zext i1 %v2_2a124 to i8
  %v4_2a124 = add i8 %v3_2a124, %v1_2a124
  %v19_2a124 = icmp ule i8 %v4_2a124, %v1_2a124
  %v21_2a124 = icmp eq i1 %v2_2a124, %v19_2a124
  store i1 %v21_2a124, i1* %cf.global-to-local, align 1
  %v22_2a124 = zext i8 %v4_2a124 to i32
  %v24_2a124 = and i32 %v0_2a124, -256
  %v25_2a124 = or i32 %v22_2a124, %v24_2a124
  store i32 %v25_2a124, i32* %eax.global-to-local, align 4
  %v1_2a126 = inttoptr i32 %v25_2a124 to i8*
  %v2_2a126 = load i8, i8* %v1_2a126, align 1
  %v5_2a126 = add i8 %v2_2a126, %v4_2a124
  store i8 %v5_2a126, i8* %v1_2a126, align 1
  %v0_2a128 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a128 = load i32, i32* @ebp, align 4
  %v2_2a128 = add i32 %v1_2a128, -12
  %v3_2a128 = inttoptr i32 %v2_2a128 to i32*
  store i32 %v0_2a128, i32* %v3_2a128, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2a12d = load i32, i32* @ebp, align 4
  %v1_2a12d = add i32 %v0_2a12d, -28
  %v2_2a12d = inttoptr i32 %v1_2a12d to i32*
  %v3_2a12d = load i32, i32* %v2_2a12d, align 4
  store i32 %v3_2a12d, i32* %eax.global-to-local, align 4
  %v1_2a133 = call i32 @unknown_5864a(i32 %v3_2a12d)
  store i32 %v1_2a133, i32* %eax.global-to-local, align 4
  %v1_2a138 = load i32, i32* @ebp, align 4
  %v2_2a138 = add i32 %v1_2a138, -32
  %v3_2a138 = inttoptr i32 %v2_2a138 to i32*
  %v4_2a138 = load i32, i32* %v3_2a138, align 4
  %v10_2a138 = icmp ult i32 %v1_2a133, %v4_2a138
  %v1_2a13b = zext i1 %v10_2a138 to i32
  %v3_2a13b = and i32 %v1_2a133, -256
  %v4_2a13b = or i32 %v1_2a13b, %v3_2a13b
  store i32 %v4_2a13b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2a13e = icmp eq i1 %v10_2a138, false
  br i1 %v5_2a13e, label %bb, label %dec_label_pc_2a142

bb:                                               ; preds = %dec_label_pc_2a11e
  %v1_2a140 = call i32 @function_2a147()
  store i32 %v1_2a140, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a142

dec_label_pc_2a142:                               ; preds = %bb, %dec_label_pc_2a11e
  %v2_2a140 = phi i32 [ %v1_2a140, %bb ], [ %v4_2a13b, %dec_label_pc_2a11e ]
  ret i32 %v2_2a140

; uselistorder directives
  uselistorder i1 %v10_2a138, { 1, 0 }
  uselistorder i8 %v4_2a124, { 0, 2, 1 }
  uselistorder i8 %v1_2a124, { 1, 0 }
  uselistorder i8 %v9_2a11e, { 1, 0 }
  uselistorder i8 %v8_2a11e, { 1, 0 }
}

define i32 @function_2a147() local_unnamed_addr {
dec_label_pc_2a147:
  %v0_2a147 = load i32, i32* @ebp, align 4
  %v1_2a147 = add i32 %v0_2a147, -32
  %v2_2a147 = inttoptr i32 %v1_2a147 to i32*
  %v3_2a147 = load i32, i32* %v2_2a147, align 4
  ret i32 %v3_2a147
}

define i32 @function_2a14e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a14e:
  %v0_2a14e = load i32, i32* @eax, align 4
  %v1_2a14e = trunc i32 %v0_2a14e to i8
  %v4_2a14e = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v5_2a14e = add i8 %v1_2a14e, %v4_2a14e
  %v15_2a14e = icmp eq i8 %v5_2a14e, 0
  %v22_2a14e = and i32 %v0_2a14e, -256
  %v0_2a150 = load i32, i32* @ecx, align 4
  %v1_2a150 = trunc i32 %v0_2a150 to i8
  %v2_2a150 = mul i8 %v1_2a150, 2
  %v3_2a150 = lshr i8 %v1_2a150, 7
  %v4_2a150 = or i8 %v3_2a150, %v2_2a150
  %v5_2a150 = zext i8 %v4_2a150 to i32
  %v7_2a150 = and i32 %v0_2a150, -256
  %v8_2a150 = or i32 %v5_2a150, %v7_2a150
  %v1_2a152 = add i32 %v8_2a150, -1
  store i32 %v1_2a152, i32* @ecx, align 4
  %v2_2a152 = icmp eq i32 %v1_2a152, 0
  %v4_2a152 = or i1 %v15_2a14e, %v2_2a152
  br i1 %v4_2a152, label %dec_label_pc_2a154, label %dec_label_pc_2a156

dec_label_pc_2a154:                               ; preds = %dec_label_pc_2a14e
  %v20_2a14e = zext i8 %v5_2a14e to i32
  %v23_2a14e = or i32 %v20_2a14e, %v22_2a14e
  ret i32 %v23_2a14e

dec_label_pc_2a156:                               ; preds = %dec_label_pc_2a14e
  %v2_2a156 = and i8 %v5_2a14e, -24
  %v8_2a156 = zext i8 %v2_2a156 to i32
  %v11_2a156 = or i32 %v8_2a156, %v22_2a14e
  ret i32 %v11_2a156

; uselistorder directives
  uselistorder i32 %v1_2a152, { 1, 0 }
  uselistorder i8 %v1_2a150, { 1, 0 }
}

define i32 @function_2a16c() local_unnamed_addr {
dec_label_pc_2a16c:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a16c = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a16c = add i32 %v0_2a16c, -1
  store i32 %v1_2a16c, i32* %ecx.global-to-local, align 4
  %v0_2a16e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a16e
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK6CTxOutSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a16f:
  %v0_2a188 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2a188
}

define i32 @function_2a192() local_unnamed_addr {
dec_label_pc_2a192:
  br label %dec_label_pc_2a1ce

dec_label_pc_2a19b:                               ; preds = %dec_label_pc_2a1ce
  %v1_2a19b = add i32 %v0_2a19b, -28
  %v1_2a1a1 = call i32 @unknown_475fd(i32 %v1_2a19b)
  %v0_2a1a8 = load i32, i32* @ebp, align 4
  %v1_2a1a8 = add i32 %v0_2a1a8, -16
  %v2_2a1a8 = inttoptr i32 %v1_2a1a8 to i32*
  %v3_2a1a8 = load i32, i32* %v2_2a1a8, align 4
  %v1_2a1ae = call i32 @unknown_5861d(i32 %v3_2a1a8)
  %v2_2a1ba = call i32 @unknown_586de(i32 %v1_2a1ae, i32 %v1_2a1a1)
  %v0_2a1bf = load i32, i32* @ebp, align 4
  %v1_2a1bf = add i32 %v0_2a1bf, -28
  %v1_2a1c5 = call i32 @unknown_475c3(i32 %v1_2a1bf)
  %v0_2a1ca = load i32, i32* @ebp, align 4
  %v1_2a1ca = add i32 %v0_2a1ca, -16
  %v2_2a1ca = inttoptr i32 %v1_2a1ca to i32*
  %v3_2a1ca = load i32, i32* %v2_2a1ca, align 4
  %v4_2a1ca = add i32 %v3_2a1ca, 20
  store i32 %v4_2a1ca, i32* %v2_2a1ca, align 4
  br label %dec_label_pc_2a1ce

dec_label_pc_2a1ce:                               ; preds = %dec_label_pc_2a19b, %dec_label_pc_2a192
  %v0_2a1ce = load i32, i32* @ebp, align 4
  %v1_2a1ce = add i32 %v0_2a1ce, -32
  %v1_2a1d5 = add i32 %v0_2a1ce, -28
  %v2_2a1db = call i32 @unknown_541e2(i32 %v1_2a1d5, i32 %v1_2a1ce)
  %v4_2a1e0 = trunc i32 %v2_2a1db to i8
  %v5_2a1e0 = icmp eq i8 %v4_2a1e0, 0
  %v1_2a1e2 = icmp eq i1 %v5_2a1e0, false
  %v0_2a19b = load i32, i32* @ebp, align 4
  br i1 %v1_2a1e2, label %dec_label_pc_2a19b, label %dec_label_pc_2a1e4

dec_label_pc_2a1e4:                               ; preds = %dec_label_pc_2a1ce
  %v1_2a1e4 = add i32 %v0_2a19b, -16
  %v2_2a1e4 = inttoptr i32 %v1_2a1e4 to i32*
  %v3_2a1e4 = load i32, i32* %v2_2a1e4, align 4
  %v1_2a1e7 = add i32 %v0_2a19b, -12
  %v2_2a1e7 = inttoptr i32 %v1_2a1e7 to i32*
  %v3_2a1e7 = load i32, i32* %v2_2a1e7, align 4
  store i32 %v3_2a1e7, i32* @edx, align 4
  ret i32 %v3_2a1e4

; uselistorder directives
  uselistorder i32 %v0_2a19b, { 1, 0, 2 }
}

define i32 @function_2a1e6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a1e6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2a1ee() local_unnamed_addr {
dec_label_pc_2a1ee:
  %v2_2a1ee = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2a1ee = load i32, i32* @eax, align 4
  %v4_2a1ee = trunc i32 %v3_2a1ee to i8
  %v5_2a1ee = add i8 %v4_2a1ee, %v2_2a1ee
  %v21_2a1ee = inttoptr i32 %v3_2a1ee to i8*
  store i8 %v5_2a1ee, i8* %v21_2a1ee, align 1
  %v0_2a1f0 = load i32, i32* @edi, align 4
  %v1_2a1f0 = load i32, i32* @esi, align 4
  %v3_2a1f0 = add i32 %v0_2a1f0, -21
  %v4_2a1f0 = add i32 %v3_2a1f0, %v1_2a1f0
  %v5_2a1f0 = inttoptr i32 %v4_2a1f0 to i8*
  %v6_2a1f0 = load i8, i8* %v5_2a1f0, align 1
  %v7_2a1f0 = load i32, i32* @edx, align 4
  %v8_2a1f0 = udiv i32 %v7_2a1f0, 256
  %v9_2a1f0 = trunc i32 %v8_2a1f0 to i8
  %v10_2a1f0 = add i8 %v9_2a1f0, %v6_2a1f0
  store i8 %v10_2a1f0, i8* %v5_2a1f0, align 1
  %v31_2a1f0 = load i32, i32* @eax, align 4
  ret i32 %v31_2a1f0
}

define i32 @function_2a1f6() local_unnamed_addr {
dec_label_pc_2a1f6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2a1f6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a1f6
}

define i32 @function_2a229() local_unnamed_addr {
dec_label_pc_2a229:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2a229 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2a229 = add i32 %v0_2a229, 1566258372
  %v2_2a229 = inttoptr i32 %v1_2a229 to i32*
  %v3_2a229 = load i32, i32* %v2_2a229, align 4
  %v4_2a229 = add i32 %v3_2a229, 1
  store i32 %v4_2a229, i32* %v2_2a229, align 4
  %v0_2a22f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a22f
}

define i32 @_ZSt20uninitialized_fill_nIP6CTxOutjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a230:
  %v3_2a267 = call i32 @unknown_5881a(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a278

bb:                                               ; preds = %dec_label_pc_2a230
  %v1_2a276 = call i32 @function_2a27d()
  br label %dec_label_pc_2a278

dec_label_pc_2a278:                               ; preds = %bb, %dec_label_pc_2a230
  %v2_2a276 = phi i32 [ %v1_2a276, %bb ], [ 0, %dec_label_pc_2a230 ]
  ret i32 %v2_2a276
}

define i32 @function_2a27d() local_unnamed_addr {
dec_label_pc_2a27d:
  %v0_2a27e = load i32, i32* @eax, align 4
  ret i32 %v0_2a27e
}

define i32 @_ZNSaImEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a280:
  %v1_2a29d = call i32 @unknown_5890c(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a2ae

bb:                                               ; preds = %dec_label_pc_2a280
  %v1_2a2ac = call i32 @function_2a2b3()
  br label %dec_label_pc_2a2ae

dec_label_pc_2a2ae:                               ; preds = %bb, %dec_label_pc_2a280
  %v2_2a2ac = phi i32 [ %v1_2a2ac, %bb ], [ 0, %dec_label_pc_2a280 ]
  ret i32 %v2_2a2ac
}

define i32 @function_2a2b3() local_unnamed_addr {
dec_label_pc_2a2b3:
  %v4_2a2b3 = load i32, i32* @eax, align 4
  ret i32 %v4_2a2b3
}

define i32 @function_2a2b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a2b4:
  %v0_2a2b4 = load i32, i32* @eax, align 4
  ret i32 %v0_2a2b4
}

define i32 @_ZN9__gnu_cxx13new_allocatorImED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2b6:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a2d9

bb:                                               ; preds = %dec_label_pc_2a2b6
  %v2_2a2d7 = call i32 @function_2a2de(i32 %arg1)
  br label %dec_label_pc_2a2d9

dec_label_pc_2a2d9:                               ; preds = %bb, %dec_label_pc_2a2b6
  %v3_2a2d7 = phi i32 [ %v2_2a2d7, %bb ], [ 0, %dec_label_pc_2a2b6 ]
  ret i32 %v3_2a2d7
}

define i32 @function_2a2de(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a2de:
  %v0_2a2df = load i32, i32* @eax, align 4
  ret i32 %v0_2a2df
}

define i32 @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmj(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a2e0:
  ret i32 %arg2
}

define i32 @function_2a31e() local_unnamed_addr {
dec_label_pc_2a31e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a31e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a31e = add i32 %v0_2a31e, -1
  store i32 %v1_2a31e, i32* %ecx.global-to-local, align 4
  %v0_2a320 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a320
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIhSaIhEEEEvT_S6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a321:
  %v15_2a35a105 = icmp eq i32 %arg1, %arg2
  %v1_2a35d106 = icmp eq i1 %v15_2a35a105, false
  %v5_2a360110 = icmp eq i1 %v1_2a35d106, false
  %v1_2a362111 = icmp eq i1 %v5_2a360110, false
  br i1 %v1_2a362111, label %dec_label_pc_2a340, label %dec_label_pc_2a364

dec_label_pc_2a340:                               ; preds = %dec_label_pc_2a321, %dec_label_pc_2a340
  %stack_var_-32.0112 = phi i32 [ %v4_2a353, %dec_label_pc_2a340 ], [ %arg1, %dec_label_pc_2a321 ]
  %v1_2a346 = call i32 @unknown_57282(i32 %stack_var_-32.0112)
  %v1_2a34e = call i32 @unknown_589d7(i32 %v1_2a346)
  %v4_2a353 = add i32 %stack_var_-32.0112, 12
  %v15_2a35a = icmp eq i32 %v4_2a353, %arg2
  %v1_2a35d = icmp eq i1 %v15_2a35a, false
  %v5_2a360 = icmp eq i1 %v1_2a35d, false
  %v1_2a362 = icmp eq i1 %v5_2a360, false
  br i1 %v1_2a362, label %dec_label_pc_2a340, label %dec_label_pc_2a364

dec_label_pc_2a364:                               ; preds = %dec_label_pc_2a340, %dec_label_pc_2a321
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a370

bb:                                               ; preds = %dec_label_pc_2a364
  %v1_2a36e = call i32 @function_2a375()
  br label %dec_label_pc_2a370

dec_label_pc_2a370:                               ; preds = %bb, %dec_label_pc_2a364
  %v2_2a36e = phi i32 [ %v1_2a36e, %bb ], [ 0, %dec_label_pc_2a364 ]
  ret i32 %v2_2a36e

; uselistorder directives
  uselistorder i32 %v4_2a353, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2a340, { 1, 0 }
}

define i32 @function_2a375() local_unnamed_addr {
dec_label_pc_2a375:
  %v0_2a376 = load i32, i32* @eax, align 4
  ret i32 %v0_2a376
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPSt6vectorIhSaIhEES3_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a377:
  %v1_2a3a2 = call i32 @unknown_57121(i32 %arg3)
  %v1_2a3af = call i32 @unknown_57121(i32 %arg2)
  %v1_2a3bc = call i32 @unknown_57121(i32 %arg1)
  %v3_2a3cc = call i32 @unknown_58a62(i32 %v1_2a3bc, i32 %v1_2a3af, i32 %v1_2a3a2)
  store i32 %v3_2a3cc, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a3dd

bb:                                               ; preds = %dec_label_pc_2a377
  %v1_2a3db = call i32 @function_2a3e2()
  br label %dec_label_pc_2a3dd

dec_label_pc_2a3dd:                               ; preds = %bb, %dec_label_pc_2a377
  %v2_2a3db = phi i32 [ %v1_2a3db, %bb ], [ %v3_2a3cc, %dec_label_pc_2a377 ]
  ret i32 %v2_2a3db

; uselistorder directives
  uselistorder i32 (i32)* @unknown_57121, { 2, 1, 0 }
}

define i32 @function_2a3e2() local_unnamed_addr {
dec_label_pc_2a3e2:
  %v0_2a3e8 = load i32, i32* @eax, align 4
  ret i32 %v0_2a3e8
}

define i32 @_ZNKSt6vectorIS_IhSaIhEESaIS1_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a3ea:
  %v1_2a407 = call i32 @unknown_58b28(i32 %arg1)
  %v1_2a40f = call i32 @unknown_58b56(i32 %v1_2a407)
  store i32 %v1_2a40f, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a420

bb:                                               ; preds = %dec_label_pc_2a3ea
  %v1_2a41e = call i32 @function_2a425()
  br label %dec_label_pc_2a420

dec_label_pc_2a420:                               ; preds = %bb, %dec_label_pc_2a3ea
  %v2_2a41e = phi i32 [ %v1_2a41e, %bb ], [ %v1_2a40f, %dec_label_pc_2a3ea ]
  ret i32 %v2_2a41e
}

define i32 @function_2a425() local_unnamed_addr {
dec_label_pc_2a425:
  %v0_2a426 = load i32, i32* @eax, align 4
  ret i32 %v0_2a426
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a428:
  %v1_2a451 = call i32 @unknown_58b94(i32 %arg1)
  %v10_2a456 = icmp ult i32 %v1_2a451, %arg2
  %v1_2a459 = zext i1 %v10_2a456 to i32
  %v3_2a459 = and i32 %v1_2a451, -256
  %v4_2a459 = or i32 %v1_2a459, %v3_2a459
  %v5_2a45c = icmp eq i1 %v10_2a456, false
  br i1 %v5_2a45c, label %bb, label %dec_label_pc_2a460

bb:                                               ; preds = %dec_label_pc_2a428
  %v1_2a45e = call i32 @function_2a465()
  br label %dec_label_pc_2a460

dec_label_pc_2a460:                               ; preds = %bb, %dec_label_pc_2a428
  %v2_2a45e = phi i32 [ %v1_2a45e, %bb ], [ %v4_2a459, %dec_label_pc_2a428 ]
  ret i32 %v2_2a45e

; uselistorder directives
  uselistorder i1 %v10_2a456, { 1, 0 }
}

define i32 @function_2a465() local_unnamed_addr {
dec_label_pc_2a465:
  %v0_2a465 = load i32, i32* @ebp, align 4
  %v1_2a465 = add i32 %v0_2a465, -32
  %v2_2a465 = inttoptr i32 %v1_2a465 to i32*
  %v3_2a465 = load i32, i32* %v2_2a465, align 4
  %v2_2a46e = mul i32 %v3_2a465, 12
  ret i32 %v2_2a46e
}

define i32 @function_2a489() local_unnamed_addr {
dec_label_pc_2a489:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a489 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a489 = add i32 %v0_2a489, -1
  store i32 %v1_2a489, i32* %ecx.global-to-local, align 4
  %v0_2a48b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a48b
}

define i32 @_ZSt12__miter_baseISt13_Bit_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a48c:
  %v3_2a4c3 = call i32 @unknown_58c27(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a4da

bb:                                               ; preds = %dec_label_pc_2a48c
  %v1_2a4d8 = call i32 @function_2a4df()
  br label %dec_label_pc_2a4da

dec_label_pc_2a4da:                               ; preds = %bb, %dec_label_pc_2a48c
  %v2_2a4d8 = phi i32 [ %v1_2a4d8, %bb ], [ %arg1, %dec_label_pc_2a48c ]
  ret i32 %v2_2a4d8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a4df() local_unnamed_addr {
dec_label_pc_2a4df:
  %v0_2a4e0 = load i32, i32* @eax, align 4
  ret i32 %v0_2a4e0
}

define i32 @_ZSt23__copy_move_backward_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2a4e3:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_2a51e = ptrtoint i32* %stack_var_-24 to i32
  %v3_2a532 = call i32 @unknown_58cc7(i32 %v2_2a51e, i32 %arg6, i32 %arg7)
  %v2_2a53a = ptrtoint i32* %stack_var_-32 to i32
  %v3_2a54e = call i32 @unknown_58cc7(i32 %v2_2a53a, i32 %arg4, i32 %arg5)
  %v2_2a556 = ptrtoint i32* %stack_var_-40 to i32
  %v3_2a56a = call i32 @unknown_58cc7(i32 %v2_2a556, i32 %arg2, i32 %arg3)
  %v3_2a575 = load i32, i32* %stack_var_-24, align 4
  %v3_2a583 = load i32, i32* %stack_var_-32, align 4
  %v3_2a591 = load i32, i32* %stack_var_-40, align 4
  %v7_2a5a2 = call i32 @unknown_58d1e(i32 %arg1, i32 %v3_2a591, i32 %tmp98, i32 %v3_2a583, i32 %tmp99, i32 %v3_2a575, i32 %tmp101)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a5b9

bb:                                               ; preds = %dec_label_pc_2a4e3
  %v1_2a5b7 = call i32 @function_2a5be()
  br label %dec_label_pc_2a5b9

dec_label_pc_2a5b9:                               ; preds = %bb, %dec_label_pc_2a4e3
  %v2_2a5b7 = phi i32 [ %v1_2a5b7, %bb ], [ %arg1, %dec_label_pc_2a4e3 ]
  ret i32 %v2_2a5b7

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_58cc7, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a5be() local_unnamed_addr {
dec_label_pc_2a5be:
  %v0_2a5bf = load i32, i32* @eax, align 4
  ret i32 %v0_2a5bf
}

define i32 @_ZNKSt6vectorIbSaIbEE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a5c2:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_2a5d9 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2a5e6 = call i32 @unknown_4850a(i32 %v2_2a5d9, i32 %arg1)
  %v2_2a5ee = ptrtoint i32* %stack_var_-24 to i32
  %v2_2a5fb = call i32 @unknown_484c0(i32 %v2_2a5ee, i32 %arg1)
  store i32 %v2_2a5ee, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a621

bb:                                               ; preds = %dec_label_pc_2a5c2
  %v3_2a61f = call i32 @function_2a626(i32 %v2_2a5ee, i32 %v2_2a5d9)
  br label %dec_label_pc_2a621

dec_label_pc_2a621:                               ; preds = %bb, %dec_label_pc_2a5c2
  %v4_2a61f = phi i32 [ %v3_2a61f, %bb ], [ %v2_2a5ee, %dec_label_pc_2a5c2 ]
  ret i32 %v4_2a61f

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2a626(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a626:
  %v0_2a627 = load i32, i32* @eax, align 4
  ret i32 %v0_2a627
}

define i32 @_ZNKSt6vectorIbSaIbEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a628:
  ret i32 %arg1
}

define i32 @function_2a632(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a632:
  %v0_2a632 = load i32, i32* @ebp, align 4
  %v1_2a632 = add i32 %v0_2a632, 1
  store i32 %v1_2a632, i32* @ebp, align 4
  %v0_2a635 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2a63a = add i32 %v0_2a632, -11
  %v3_2a63a = inttoptr i32 %v2_2a63a to i32*
  store i32 %v0_2a635, i32* %v3_2a63a, align 4
  %v0_2a63f = load i32, i32* @ebp, align 4
  %v1_2a63f = add i32 %v0_2a63f, -20
  %v2_2a63f = inttoptr i32 %v1_2a63f to i32*
  store i32 2147483616, i32* %v2_2a63f, align 4
  %v0_2a646 = load i32, i32* @ebp, align 4
  %v1_2a646 = add i32 %v0_2a646, -28
  %v2_2a646 = inttoptr i32 %v1_2a646 to i32*
  %v3_2a646 = load i32, i32* %v2_2a646, align 4
  %v1_2a64c = call i32 @unknown_58ef2(i32 %v3_2a646)
  %v1_2a654 = call i32 @unknown_58f20(i32 %v1_2a64c)
  %v1_2a659 = load i32, i32* @ebp, align 4
  %v2_2a659 = add i32 %v1_2a659, -16
  %v3_2a659 = inttoptr i32 %v2_2a659 to i32*
  store i32 %v1_2a654, i32* %v3_2a659, align 4
  %v0_2a65c = load i32, i32* @ebp, align 4
  %v1_2a65c = add i32 %v0_2a65c, -16
  %v2_2a65c = inttoptr i32 %v1_2a65c to i32*
  %v3_2a65c = load i32, i32* %v2_2a65c, align 4
  %tmp5 = icmp ult i32 %v3_2a65c, 67108864
  br i1 %tmp5, label %dec_label_pc_2a665, label %dec_label_pc_2a66d

dec_label_pc_2a665:                               ; preds = %dec_label_pc_2a632
  %v2_2a668 = mul i32 %v3_2a65c, 32
  br label %dec_label_pc_2a672

dec_label_pc_2a66d:                               ; preds = %dec_label_pc_2a632
  br label %dec_label_pc_2a672

dec_label_pc_2a672:                               ; preds = %dec_label_pc_2a66d, %dec_label_pc_2a665
  %storemerge = phi i32 [ 2147483616, %dec_label_pc_2a66d ], [ %v2_2a668, %dec_label_pc_2a665 ]
  %v2_2a67c2 = phi i32 [ 2147483616, %dec_label_pc_2a66d ], [ %v2_2a668, %dec_label_pc_2a665 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_2a672 = add i32 %v0_2a65c, -12
  %v2_2a672 = inttoptr i32 %v1_2a672 to i32*
  %v3_2a672 = load i32, i32* %v2_2a672, align 4
  %v1_2a675 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a675 = icmp eq i32 %v1_2a675, %v3_2a672
  br i1 %v3_2a675, label %bb, label %dec_label_pc_2a67e

bb:                                               ; preds = %dec_label_pc_2a672
  %v1_2a67c = call i32 @function_2a683()
  br label %dec_label_pc_2a67e

dec_label_pc_2a67e:                               ; preds = %bb, %dec_label_pc_2a672
  %v2_2a67c = phi i32 [ %v1_2a67c, %bb ], [ %v2_2a67c2, %dec_label_pc_2a672 ]
  ret i32 %v2_2a67c

; uselistorder directives
  uselistorder i32 %v2_2a668, { 1, 0 }
  uselistorder i32 %v3_2a65c, { 1, 0 }
  uselistorder i32 2147483616, { 1, 0, 2 }
}

define i32 @function_2a683() local_unnamed_addr {
dec_label_pc_2a683:
  %v0_2a684 = load i32, i32* @eax, align 4
  ret i32 %v0_2a684
}

define i32 @_ZN9__gnu_cxx13new_allocatorImE8allocateEjPKv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a686:
  ret i32 %arg2
}

define i32 @function_2a698(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a698:
  %v0_2a698 = load i32, i32* @ebp, align 4
  %v1_2a698 = add i32 %v0_2a698, 16
  %v2_2a698 = inttoptr i32 %v1_2a698 to i32*
  %v3_2a698 = load i32, i32* %v2_2a698, align 4
  %v2_2a69b = add i32 %v0_2a698, -36
  %v3_2a69b = inttoptr i32 %v2_2a69b to i32*
  store i32 %v3_2a698, i32* %v3_2a69b, align 4
  %v0_2a69e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a6a4 = load i32, i32* @ebp, align 4
  %v2_2a6a4 = add i32 %v1_2a6a4, -12
  %v3_2a6a4 = inttoptr i32 %v2_2a6a4 to i32*
  store i32 %v0_2a69e, i32* %v3_2a6a4, align 4
  %v0_2a6a9 = load i32, i32* @ebp, align 4
  %v1_2a6a9 = add i32 %v0_2a6a9, -28
  %v2_2a6a9 = inttoptr i32 %v1_2a6a9 to i32*
  %v3_2a6a9 = load i32, i32* %v2_2a6a9, align 4
  %v1_2a6af = call i32 @unknown_58f7e(i32 %v3_2a6a9)
  %v1_2a6b4 = load i32, i32* @ebp, align 4
  %v2_2a6b4 = add i32 %v1_2a6b4, -32
  %v3_2a6b4 = inttoptr i32 %v2_2a6b4 to i32*
  %v4_2a6b4 = load i32, i32* %v3_2a6b4, align 4
  %v10_2a6b4 = icmp ult i32 %v1_2a6af, %v4_2a6b4
  %v1_2a6b7 = zext i1 %v10_2a6b4 to i32
  %v3_2a6b7 = and i32 %v1_2a6af, -256
  %v4_2a6b7 = or i32 %v1_2a6b7, %v3_2a6b7
  %v5_2a6ba = icmp eq i1 %v10_2a6b4, false
  br i1 %v5_2a6ba, label %bb, label %dec_label_pc_2a6be

bb:                                               ; preds = %dec_label_pc_2a698
  %v1_2a6bc = call i32 @function_2a6c3()
  br label %dec_label_pc_2a6be

dec_label_pc_2a6be:                               ; preds = %bb, %dec_label_pc_2a698
  %v2_2a6bc = phi i32 [ %v1_2a6bc, %bb ], [ %v4_2a6b7, %dec_label_pc_2a698 ]
  ret i32 %v2_2a6bc

; uselistorder directives
  uselistorder i1 %v10_2a6b4, { 1, 0 }
}

define i32 @function_2a6c3() local_unnamed_addr {
dec_label_pc_2a6c3:
  %v0_2a6c3 = load i32, i32* @ebp, align 4
  %v1_2a6c3 = add i32 %v0_2a6c3, -32
  %v2_2a6c3 = inttoptr i32 %v1_2a6c3 to i32*
  %v3_2a6c3 = load i32, i32* %v2_2a6c3, align 4
  %v2_2a6c6 = mul i32 %v3_2a6c3, 4
  ret i32 %v2_2a6c6
}

define i32 @function_2a6e1() local_unnamed_addr {
dec_label_pc_2a6e1:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a6e1 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a6e1 = add i32 %v0_2a6e1, -1
  store i32 %v1_2a6e1, i32* %ecx.global-to-local, align 4
  %v0_2a6e3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a6e3
}

define i32 @_ZSt4copyIPmS0_ET0_T_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a6e4:
  ret i32 %arg3
}

define i32 @function_2a6fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a6fe:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2a6fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a703 = load i32, i32* @ebp, align 4
  %v2_2a703 = add i32 %v1_2a703, -12
  %v3_2a703 = inttoptr i32 %v2_2a703 to i32*
  store i32 %v0_2a6fe, i32* %v3_2a703, align 4
  %v0_2a708 = load i32, i32* @ebp, align 4
  %v1_2a708 = add i32 %v0_2a708, -32
  %v2_2a708 = inttoptr i32 %v1_2a708 to i32*
  %v3_2a708 = load i32, i32* %v2_2a708, align 4
  %v1_2a70e = call i32 @unknown_5900b(i32 %v3_2a708)
  store i32 %v1_2a70e, i32* %ebx.global-to-local, align 4
  %v0_2a715 = load i32, i32* @ebp, align 4
  %v1_2a715 = add i32 %v0_2a715, -28
  %v2_2a715 = inttoptr i32 %v1_2a715 to i32*
  %v3_2a715 = load i32, i32* %v2_2a715, align 4
  %v1_2a71b = call i32 @unknown_5900b(i32 %v3_2a715)
  %v0_2a720 = load i32, i32* @ebp, align 4
  %v1_2a720 = add i32 %v0_2a720, -36
  %v2_2a720 = inttoptr i32 %v1_2a720 to i32*
  %v3_2a720 = load i32, i32* %v2_2a720, align 4
  %v0_2a727 = load i32, i32* %ebx.global-to-local, align 4
  %v3_2a72e = call i32 @unknown_59040(i32 %v1_2a71b, i32 %v0_2a727, i32 %v3_2a720)
  store i32 %v3_2a72e, i32* @eax, align 4
  %v0_2a733 = load i32, i32* @ebp, align 4
  %v1_2a733 = add i32 %v0_2a733, -12
  %v2_2a733 = inttoptr i32 %v1_2a733 to i32*
  %v3_2a733 = load i32, i32* %v2_2a733, align 4
  %v1_2a736 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a736 = icmp eq i32 %v1_2a736, %v3_2a733
  br i1 %v3_2a736, label %bb, label %dec_label_pc_2a73f

bb:                                               ; preds = %dec_label_pc_2a6fe
  %v1_2a73d = call i32 @function_2a744()
  br label %dec_label_pc_2a73f

dec_label_pc_2a73f:                               ; preds = %bb, %dec_label_pc_2a6fe
  %v2_2a73d = phi i32 [ %v1_2a73d, %bb ], [ %v3_2a72e, %dec_label_pc_2a6fe ]
  ret i32 %v2_2a73d

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5900b, { 1, 0 }
}

define i32 @function_2a744() local_unnamed_addr {
dec_label_pc_2a744:
  %v0_2a749 = load i32, i32* @eax, align 4
  ret i32 %v0_2a749
}

define i32 @_ZSt4copyISt19_Bit_const_iteratorSt13_Bit_iteratorET0_T_S3_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a74a:
  ret i32 %arg1
}

define i32 @function_2a756(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a756:
  %v0_2a756 = load i32, i32* @ebp, align 4
  %v1_2a756 = add i32 %v0_2a756, 12
  %v2_2a756 = inttoptr i32 %v1_2a756 to i32*
  %v3_2a756 = load i32, i32* %v2_2a756, align 4
  %v2_2a759 = add i32 %v0_2a756, -52
  %v3_2a759 = inttoptr i32 %v2_2a759 to i32*
  store i32 %v3_2a756, i32* %v3_2a759, align 4
  %v0_2a75c = load i32, i32* @ebp, align 4
  %v1_2a75c = add i32 %v0_2a75c, 16
  %v2_2a75c = inttoptr i32 %v1_2a75c to i32*
  %v3_2a75c = load i32, i32* %v2_2a75c, align 4
  %v2_2a75f = add i32 %v0_2a75c, -48
  %v3_2a75f = inttoptr i32 %v2_2a75f to i32*
  store i32 %v3_2a75c, i32* %v3_2a75f, align 4
  %v0_2a762 = load i32, i32* @ebp, align 4
  %v1_2a762 = add i32 %v0_2a762, 20
  %v2_2a762 = inttoptr i32 %v1_2a762 to i32*
  %v3_2a762 = load i32, i32* %v2_2a762, align 4
  %v2_2a765 = add i32 %v0_2a762, -60
  %v3_2a765 = inttoptr i32 %v2_2a765 to i32*
  store i32 %v3_2a762, i32* %v3_2a765, align 4
  %v0_2a768 = load i32, i32* @ebp, align 4
  %v1_2a768 = add i32 %v0_2a768, 24
  %v2_2a768 = inttoptr i32 %v1_2a768 to i32*
  %v3_2a768 = load i32, i32* %v2_2a768, align 4
  %v2_2a76b = add i32 %v0_2a768, -56
  %v3_2a76b = inttoptr i32 %v2_2a76b to i32*
  store i32 %v3_2a768, i32* %v3_2a76b, align 4
  %v0_2a76e = load i32, i32* @ebp, align 4
  %v1_2a76e = add i32 %v0_2a76e, 28
  %v2_2a76e = inttoptr i32 %v1_2a76e to i32*
  %v3_2a76e = load i32, i32* %v2_2a76e, align 4
  %v2_2a771 = add i32 %v0_2a76e, -68
  %v3_2a771 = inttoptr i32 %v2_2a771 to i32*
  store i32 %v3_2a76e, i32* %v3_2a771, align 4
  %v0_2a774 = load i32, i32* @ebp, align 4
  %v1_2a774 = add i32 %v0_2a774, 32
  %v2_2a774 = inttoptr i32 %v1_2a774 to i32*
  %v3_2a774 = load i32, i32* %v2_2a774, align 4
  %v2_2a777 = add i32 %v0_2a774, -64
  %v3_2a777 = inttoptr i32 %v2_2a777 to i32*
  store i32 %v3_2a774, i32* %v3_2a777, align 4
  %v0_2a77a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2a780 = load i32, i32* @ebp, align 4
  %v2_2a780 = add i32 %v1_2a780, -12
  %v3_2a780 = inttoptr i32 %v2_2a780 to i32*
  store i32 %v0_2a77a, i32* %v3_2a780, align 4
  %v0_2a785 = load i32, i32* @ebp, align 4
  %v1_2a785 = add i32 %v0_2a785, -20
  store i32 %v1_2a785, i32* @ecx, align 4
  %v1_2a788 = add i32 %v0_2a785, -60
  %v2_2a788 = inttoptr i32 %v1_2a788 to i32*
  %v3_2a788 = load i32, i32* %v2_2a788, align 4
  ret i32 %v3_2a788
}

define i32 @function_2a796(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a796:
  %v0_2a796 = load i32, i32* @ecx, align 4
  %v1_2a799 = call i32 @unknown_59118(i32 %v0_2a796)
  %v0_2a7a1 = load i32, i32* @ebp, align 4
  %v1_2a7a1 = add i32 %v0_2a7a1, -28
  %v1_2a7b5 = call i32 @unknown_59118(i32 %v1_2a7a1)
  %v0_2a7bd = load i32, i32* @ebp, align 4
  %v1_2a7bd = add i32 %v0_2a7bd, -44
  %v2_2a7bd = inttoptr i32 %v1_2a7bd to i32*
  %v3_2a7bd = load i32, i32* %v2_2a7bd, align 4
  %v1_2a7c0 = add i32 %v0_2a7bd, -68
  %v2_2a7c0 = inttoptr i32 %v1_2a7c0 to i32*
  %v3_2a7c0 = load i32, i32* %v2_2a7c0, align 4
  %v1_2a7c3 = add i32 %v0_2a7bd, -64
  %v2_2a7c3 = inttoptr i32 %v1_2a7c3 to i32*
  %v3_2a7c3 = load i32, i32* %v2_2a7c3, align 4
  %v1_2a7ce = add i32 %v0_2a7bd, -20
  %v2_2a7ce = inttoptr i32 %v1_2a7ce to i32*
  %v3_2a7ce = load i32, i32* %v2_2a7ce, align 4
  %v1_2a7d1 = add i32 %v0_2a7bd, -16
  %v2_2a7d1 = inttoptr i32 %v1_2a7d1 to i32*
  %v3_2a7d1 = load i32, i32* %v2_2a7d1, align 4
  %v1_2a7dc = add i32 %v0_2a7bd, -28
  %v2_2a7dc = inttoptr i32 %v1_2a7dc to i32*
  %v3_2a7dc = load i32, i32* %v2_2a7dc, align 4
  %v1_2a7df = add i32 %v0_2a7bd, -24
  %v2_2a7df = inttoptr i32 %v1_2a7df to i32*
  %v3_2a7df = load i32, i32* %v2_2a7df, align 4
  %v7_2a7ed = call i32 @unknown_5916f(i32 %v3_2a7bd, i32 %v3_2a7dc, i32 %v3_2a7df, i32 %v3_2a7ce, i32 %v3_2a7d1, i32 %v3_2a7c0, i32 %v3_2a7c3)
  %v0_2a7f5 = load i32, i32* @ebp, align 4
  %v1_2a7f5 = add i32 %v0_2a7f5, -44
  %v2_2a7f5 = inttoptr i32 %v1_2a7f5 to i32*
  %v3_2a7f5 = load i32, i32* %v2_2a7f5, align 4
  store i32 %v3_2a7f5, i32* @eax, align 4
  %v1_2a7f8 = add i32 %v0_2a7f5, -12
  %v2_2a7f8 = inttoptr i32 %v1_2a7f8 to i32*
  %v3_2a7f8 = load i32, i32* %v2_2a7f8, align 4
  %v1_2a7fb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2a7fb = icmp eq i32 %v1_2a7fb, %v3_2a7f8
  br i1 %v3_2a7fb, label %bb, label %dec_label_pc_2a804

bb:                                               ; preds = %dec_label_pc_2a796
  %v1_2a802 = call i32 @function_2a809()
  br label %dec_label_pc_2a804

dec_label_pc_2a804:                               ; preds = %bb, %dec_label_pc_2a796
  %v2_2a802 = phi i32 [ %v1_2a802, %bb ], [ %v3_2a7f5, %dec_label_pc_2a796 ]
  ret i32 %v2_2a802

; uselistorder directives
  uselistorder i32 %v0_2a7bd, { 1, 0, 3, 4, 2, 5, 6 }
  uselistorder i32 (i32)* @unknown_59118, { 1, 0 }
}

define i32 @function_2a809() local_unnamed_addr {
dec_label_pc_2a809:
  %v0_2a80a = load i32, i32* @eax, align 4
  ret i32 %v0_2a80a
}

define i32 @_ZSt14__copy_move_a2ILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2a80d:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_2a848 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2a85c = call i32 @unknown_58ff1(i32 %v2_2a848, i32 %arg6, i32 %arg7)
  %v2_2a864 = ptrtoint i32* %stack_var_-32 to i32
  %v3_2a878 = call i32 @unknown_58ff1(i32 %v2_2a864, i32 %arg4, i32 %arg5)
  %v2_2a880 = ptrtoint i32* %stack_var_-40 to i32
  %v3_2a894 = call i32 @unknown_58ff1(i32 %v2_2a880, i32 %arg2, i32 %arg3)
  %v3_2a89f = load i32, i32* %stack_var_-24, align 4
  %v3_2a8ad = load i32, i32* %stack_var_-32, align 4
  %v3_2a8bb = load i32, i32* %stack_var_-40, align 4
  %v7_2a8cc = call i32 @unknown_59311(i32 %arg1, i32 %v3_2a8bb, i32 %tmp98, i32 %v3_2a8ad, i32 %tmp99, i32 %v3_2a89f, i32 %tmp101)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a8e3

bb:                                               ; preds = %dec_label_pc_2a80d
  %v1_2a8e1 = call i32 @function_2a8e8()
  br label %dec_label_pc_2a8e3

dec_label_pc_2a8e3:                               ; preds = %bb, %dec_label_pc_2a80d
  %v2_2a8e1 = phi i32 [ %v1_2a8e1, %bb ], [ %arg1, %dec_label_pc_2a80d ]
  ret i32 %v2_2a8e1

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_58ff1, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2a8e8() local_unnamed_addr {
dec_label_pc_2a8e8:
  %v0_2a8e9 = load i32, i32* @eax, align 4
  ret i32 %v0_2a8e9
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEELb0EE7_S_baseES8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a8ec:
  ret i32 %arg2
}

define i32 @function_2a924() local_unnamed_addr {
dec_label_pc_2a924:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2a924 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2a924 = add i32 %v0_2a924, -1
  store i32 %v1_2a924, i32* %ecx.global-to-local, align 4
  %v0_2a926 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2a926
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2a929:
  %v1_2a946 = call i32 @unknown_594bc(i32 %arg1)
  store i32 %v1_2a946, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a957

bb:                                               ; preds = %dec_label_pc_2a929
  %v1_2a955 = call i32 @function_2a95c()
  br label %dec_label_pc_2a957

dec_label_pc_2a957:                               ; preds = %bb, %dec_label_pc_2a929
  %v2_2a955 = phi i32 [ %v1_2a955, %bb ], [ %v1_2a946, %dec_label_pc_2a929 ]
  ret i32 %v2_2a955
}

define i32 @function_2a95c() local_unnamed_addr {
dec_label_pc_2a95c:
  %v0_2a95d = load i32, i32* @eax, align 4
  ret i32 %v0_2a95d
}

define i32 @_ZSt13__copy_move_aILb0EPSt6vectorIhSaIhEES3_ET1_T0_S5_S4_() local_unnamed_addr {
dec_label_pc_2a95e:
  %eax.global-to-local = alloca i32, align 4
  %v17_2a961 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2a961
}

define i32 @function_2a966() local_unnamed_addr {
dec_label_pc_2a966:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2a966 = load i32, i32* @ecx, align 4
  %v1_2a966 = add i32 %v0_2a966, 1166795845
  %v2_2a966 = inttoptr i32 %v1_2a966 to i8*
  %v3_2a966 = load i8, i8* %v2_2a966, align 1
  %v5_2a966 = trunc i32 %v0_2a966 to i8
  %v6_2a966 = or i8 %v3_2a966, %v5_2a966
  store i8 %v6_2a966, i8* %v2_2a966, align 1
  %v0_2a96c = load i32, i32* @eax, align 4
  %v2_2a96c = or i32 %v0_2a96c, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2a96c, i32* %eax.global-to-local, align 4
  %v0_2a96e = load i32, i32* @ebp, align 4
  %v0_2a96f = load i32, i32* @ecx, align 4
  %v1_2a96f = add i32 %v0_2a96f, -1
  store i32 %v1_2a96f, i32* @ecx, align 4
  %v1_2a971 = add i32 %v0_2a96e, 2
  store i32 %v1_2a971, i32* @ebp, align 4
  %v1_2a972 = add i32 %v0_2a96f, -1587159996
  %v2_2a972 = inttoptr i32 %v1_2a972 to i8*
  %v3_2a972 = load i8, i8* %v2_2a972, align 1
  %v5_2a972 = trunc i32 %v1_2a96f to i8
  %v8_2a972 = add i8 %v3_2a972, %v5_2a972
  %v28_2a972 = icmp ult i8 %v8_2a972, %v3_2a972
  store i1 %v28_2a972, i1* %cf.global-to-local, align 1
  store i8 %v8_2a972, i8* %v2_2a972, align 1
  %v0_2a978 = load i32, i32* %eax.global-to-local, align 4
  %v1_2a978 = trunc i32 %v0_2a978 to i8
  %v2_2a978 = load i1, i1* %cf.global-to-local, align 1
  %v3_2a978 = zext i1 %v2_2a978 to i8
  %v4_2a978 = add i8 %v3_2a978, %v1_2a978
  %v19_2a978 = icmp ule i8 %v4_2a978, %v1_2a978
  %v21_2a978 = icmp eq i1 %v2_2a978, %v19_2a978
  store i1 %v21_2a978, i1* %cf.global-to-local, align 1
  %v22_2a978 = zext i8 %v4_2a978 to i32
  %v24_2a978 = and i32 %v0_2a978, -256
  %v25_2a978 = or i32 %v22_2a978, %v24_2a978
  store i32 %v25_2a978, i32* %eax.global-to-local, align 4
  %v1_2a97a = inttoptr i32 %v25_2a978 to i8*
  %v2_2a97a = load i8, i8* %v1_2a97a, align 1
  %v5_2a97a = add i8 %v2_2a97a, %v4_2a978
  store i8 %v5_2a97a, i8* %v1_2a97a, align 1
  %v0_2a97c = load i32, i32* %eax.global-to-local, align 4
  %v1_2a97c = load i32, i32* @ebp, align 4
  %v2_2a97c = add i32 %v1_2a97c, -12
  %v3_2a97c = inttoptr i32 %v2_2a97c to i32*
  store i32 %v0_2a97c, i32* %v3_2a97c, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2a981 = load i32, i32* @ebp, align 4
  %v1_2a981 = add i32 %v0_2a981, -13
  %v2_2a981 = inttoptr i32 %v1_2a981 to i8*
  store i8 0, i8* %v2_2a981, align 1
  %v0_2a985 = load i32, i32* @ebp, align 4
  %v1_2a985 = add i32 %v0_2a985, -36
  %v2_2a985 = inttoptr i32 %v1_2a985 to i32*
  %v3_2a985 = load i32, i32* %v2_2a985, align 4
  store i32 %v3_2a985, i32* %eax.global-to-local, align 4
  %v1_2a98c = add i32 %v0_2a985, -32
  %v2_2a98c = inttoptr i32 %v1_2a98c to i32*
  %v3_2a98c = load i32, i32* %v2_2a98c, align 4
  store i32 %v3_2a98c, i32* %eax.global-to-local, align 4
  %v1_2a993 = add i32 %v0_2a985, -28
  %v2_2a993 = inttoptr i32 %v1_2a993 to i32*
  %v3_2a993 = load i32, i32* %v2_2a993, align 4
  store i32 %v3_2a993, i32* %eax.global-to-local, align 4
  %v3_2a999 = call i32 @unknown_59528(i32 %v3_2a993, i32 %v3_2a98c, i32 %v3_2a985)
  store i32 %v3_2a999, i32* @eax, align 4
  %v0_2a99e = load i32, i32* @ebp, align 4
  %v1_2a99e = add i32 %v0_2a99e, -12
  %v2_2a99e = inttoptr i32 %v1_2a99e to i32*
  %v3_2a99e = load i32, i32* %v2_2a99e, align 4
  %v1_2a9a1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2a9a1 = icmp eq i32 %v1_2a9a1, %v3_2a99e
  br i1 %v3_2a9a1, label %bb, label %dec_label_pc_2a9aa

bb:                                               ; preds = %dec_label_pc_2a966
  %v1_2a9a8 = call i32 @function_2a9af()
  store i32 %v1_2a9a8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2a9aa

dec_label_pc_2a9aa:                               ; preds = %bb, %dec_label_pc_2a966
  %v3_2a9a8 = phi i32 [ %v1_2a9a8, %bb ], [ %v3_2a999, %dec_label_pc_2a966 ]
  ret i32 %v3_2a9a8

; uselistorder directives
  uselistorder i8 %v4_2a978, { 0, 2, 1 }
  uselistorder i8 %v1_2a978, { 1, 0 }
  uselistorder i8 %v3_2a972, { 1, 0 }
}

define i32 @function_2a9af() local_unnamed_addr {
dec_label_pc_2a9af:
  %v0_2a9b0 = load i32, i32* @eax, align 4
  ret i32 %v0_2a9b0
}

define i32 @_ZNSaI5CTxInEC1ERKS0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2a9b2:
  %v2_2a9dc = call i32 @unknown_595f8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2a9ed

bb:                                               ; preds = %dec_label_pc_2a9b2
  %v1_2a9eb = call i32 @function_2a9f2()
  br label %dec_label_pc_2a9ed

dec_label_pc_2a9ed:                               ; preds = %bb, %dec_label_pc_2a9b2
  %v2_2a9eb = phi i32 [ %v1_2a9eb, %bb ], [ 0, %dec_label_pc_2a9b2 ]
  ret i32 %v2_2a9eb
}

define i32 @function_2a9f2() local_unnamed_addr {
dec_label_pc_2a9f2:
  %v0_2a9f3 = load i32, i32* @eax, align 4
  ret i32 %v0_2a9f3
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2a9f4:
  %v1_2aa1d = call i32 @unknown_5966a(i32 %arg1)
  %v10_2aa22 = icmp ult i32 %v1_2aa1d, %arg2
  %v1_2aa25 = zext i1 %v10_2aa22 to i32
  %v3_2aa25 = and i32 %v1_2aa1d, -256
  %v4_2aa25 = or i32 %v1_2aa25, %v3_2aa25
  %v5_2aa28 = icmp eq i1 %v10_2aa22, false
  br i1 %v5_2aa28, label %bb, label %dec_label_pc_2aa2c

bb:                                               ; preds = %dec_label_pc_2a9f4
  %v1_2aa2a = call i32 @function_2aa31()
  br label %dec_label_pc_2aa2c

dec_label_pc_2aa2c:                               ; preds = %bb, %dec_label_pc_2a9f4
  %v2_2aa2a = phi i32 [ %v1_2aa2a, %bb ], [ %v4_2aa25, %dec_label_pc_2a9f4 ]
  ret i32 %v2_2aa2a

; uselistorder directives
  uselistorder i1 %v10_2aa22, { 1, 0 }
}

define i32 @function_2aa31() local_unnamed_addr {
dec_label_pc_2aa31:
  %v0_2aa31 = load i32, i32* @ebp, align 4
  %v1_2aa31 = add i32 %v0_2aa31, -32
  %v2_2aa31 = inttoptr i32 %v1_2aa31 to i32*
  %v3_2aa31 = load i32, i32* %v2_2aa31, align 4
  %v3_2aa34 = mul i32 %v3_2aa31, 52
  ret i32 %v3_2aa34
}

define i32 @function_2aa4f() local_unnamed_addr {
dec_label_pc_2aa4f:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2aa4f = load i32, i32* %ecx.global-to-local, align 4
  %v1_2aa4f = add i32 %v0_2aa4f, -1
  store i32 %v1_2aa4f, i32* %ecx.global-to-local, align 4
  %v0_2aa51 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2aa51
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPK5CTxInSt6vectorIS4_SaIS4_EEEEPS4_EET0_T_SD_SC_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2aa52:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2aab4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2aab8 = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_2aab1

dec_label_pc_2aa7e:                               ; preds = %dec_label_pc_2aab1
  %v1_2aa84 = call i32 @unknown_54a96(i32 %v2_2aab8)
  %v1_2aa91 = call i32 @unknown_58e9e(i32 %storemerge)
  %v2_2aa9d = call i32 @unknown_596f7(i32 %v1_2aa91, i32 %v1_2aa84)
  %v1_2aaa8 = call i32 @unknown_54a5c(i32 %v2_2aab8)
  %v4_2aaad = add i32 %storemerge, 52
  br label %dec_label_pc_2aab1

dec_label_pc_2aab1:                               ; preds = %dec_label_pc_2aa7e, %dec_label_pc_2aa52
  %storemerge = phi i32 [ %v4_2aaad, %dec_label_pc_2aa7e ], [ %arg3, %dec_label_pc_2aa52 ]
  %v2_2aabe = call i32 @unknown_54a07(i32 %v2_2aab8, i32 %v4_2aab4)
  %v4_2aac3 = trunc i32 %v2_2aabe to i8
  %v5_2aac3 = icmp eq i8 %v4_2aac3, 0
  %v1_2aac5 = icmp eq i1 %v5_2aac3, false
  br i1 %v1_2aac5, label %dec_label_pc_2aa7e, label %dec_label_pc_2aac7

dec_label_pc_2aac7:                               ; preds = %dec_label_pc_2aab1
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2aad6

bb:                                               ; preds = %dec_label_pc_2aac7
  %v1_2aad4 = call i32 @function_2ab0d()
  store i32 %v1_2aad4, i32* @eax, align 4
  br label %dec_label_pc_2aad6

dec_label_pc_2aad6:                               ; preds = %bb, %dec_label_pc_2aac7
  %v0_2aad6 = call i32 @function_2ab08()
  ret i32 %v0_2aad6

; uselistorder directives
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v2_2aab8, { 2, 0, 1 }
}

define i32 @function_2aad9() local_unnamed_addr {
dec_label_pc_2aad9:
  %eax.global-to-local = alloca i32, align 4
  %v0_2aad9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2aad9
}

define i32 @function_2aae6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aae6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ab08() local_unnamed_addr {
dec_label_pc_2ab08:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ab0d() local_unnamed_addr {
dec_label_pc_2ab0d:
  %v0_2ab12 = load i32, i32* @eax, align 4
  ret i32 %v0_2ab12
}

define i32 @_ZN9__gnu_cxxmiIP6CTxOutSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ab13:
  %v1_2ab37 = call i32 @unknown_556e3(i32 %arg1)
  %v1_2ab3c = inttoptr i32 %v1_2ab37 to i32*
  %v2_2ab3c = load i32, i32* %v1_2ab3c, align 4
  %v1_2ab46 = call i32 @unknown_556e3(i32 %arg2)
  %v1_2ab4b = inttoptr i32 %v1_2ab46 to i32*
  %v2_2ab4b = load i32, i32* %v1_2ab4b, align 4
  %v2_2ab4f = sub i32 %v2_2ab3c, %v2_2ab4b
  %v2_2ab53 = sdiv i32 %v2_2ab4f, 4
  %v3_2ab56 = mul i32 %v2_2ab53, -858993459
  store i32 %v3_2ab56, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ab68

bb:                                               ; preds = %dec_label_pc_2ab13
  %v1_2ab66 = call i32 @function_2ab6d()
  br label %dec_label_pc_2ab68

dec_label_pc_2ab68:                               ; preds = %bb, %dec_label_pc_2ab13
  %v2_2ab66 = phi i32 [ %v1_2ab66, %bb ], [ %v3_2ab56, %dec_label_pc_2ab13 ]
  ret i32 %v2_2ab66

; uselistorder directives
  uselistorder i32 (i32)* @unknown_556e3, { 1, 0 }
}

define i32 @function_2ab6d() local_unnamed_addr {
dec_label_pc_2ab6d:
  %v0_2ab72 = load i32, i32* @eax, align 4
  ret i32 %v0_2ab72
}

define i32 @_ZSt22__uninitialized_move_aIP6CTxOutS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ab73:
  %v8_2abb7 = call i32 @unknown_59893(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v8_2abb7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2abc8

bb:                                               ; preds = %dec_label_pc_2ab73
  %v1_2abc6 = call i32 @function_2abcd()
  br label %dec_label_pc_2abc8

dec_label_pc_2abc8:                               ; preds = %bb, %dec_label_pc_2ab73
  %v2_2abc6 = phi i32 [ %v1_2abc6, %bb ], [ %v8_2abb7, %dec_label_pc_2ab73 ]
  ret i32 %v2_2abc6

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2abcd() local_unnamed_addr {
dec_label_pc_2abcd:
  %v0_2abce = load i32, i32* @eax, align 4
  ret i32 %v0_2abce
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP6CTxOutSt6vectorIS1_SaIS1_EEE4baseEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2abd0:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2abf6

bb:                                               ; preds = %dec_label_pc_2abd0
  %v2_2abf4 = call i32 @function_2abfb(i32 %arg1)
  br label %dec_label_pc_2abf6

dec_label_pc_2abf6:                               ; preds = %bb, %dec_label_pc_2abd0
  %v3_2abf4 = phi i32 [ %v2_2abf4, %bb ], [ %arg1, %dec_label_pc_2abd0 ]
  ret i32 %v3_2abf4
}

define i32 @function_2abfb(i32 %arg1) local_unnamed_addr {
dec_label_pc_2abfb:
  %v0_2abfc = load i32, i32* @eax, align 4
  ret i32 %v0_2abfc
}

define i32 @_ZSt13copy_backwardIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2abfd:
  %v1_2ac27 = call i32 @unknown_59972(i32 %arg2)
  %v1_2ac34 = call i32 @unknown_59972(i32 %arg1)
  %v3_2ac47 = call i32 @unknown_599a7(i32 %v1_2ac34, i32 %v1_2ac27, i32 %arg3)
  store i32 %v3_2ac47, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ac58

bb:                                               ; preds = %dec_label_pc_2abfd
  %v1_2ac56 = call i32 @function_2ac5d()
  br label %dec_label_pc_2ac58

dec_label_pc_2ac58:                               ; preds = %bb, %dec_label_pc_2abfd
  %v2_2ac56 = phi i32 [ %v1_2ac56, %bb ], [ %v3_2ac47, %dec_label_pc_2abfd ]
  ret i32 %v2_2ac56

; uselistorder directives
  uselistorder i32 (i32)* @unknown_59972, { 1, 0 }
}

define i32 @function_2ac5d() local_unnamed_addr {
dec_label_pc_2ac5d:
  %v0_2ac62 = load i32, i32* @eax, align 4
  ret i32 %v0_2ac62
}

define i32 @_ZSt4fillIP6CTxOutS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ac63:
  %v1_2ac8d = call i32 @unknown_59a7f(i32 %arg2)
  %v1_2ac9a = call i32 @unknown_59a7f(i32 %arg1)
  ret i32 %v1_2ac9a

; uselistorder directives
  uselistorder i32 (i32)* @unknown_59a7f, { 1, 0 }
}

define i32 @function_2aca4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aca4:
  %v0_2aca4 = load i32, i32* @eax, align 4
  %v11_2aca4 = and i32 %v0_2aca4, -248
  %v0_2aca6 = load i32, i32* @ebx, align 4
  %v2_2acad = call i32 @unknown_59ab4(i32 %v11_2aca4, i32 %v0_2aca6)
  %v0_2acb2 = load i32, i32* @ebp, align 4
  %v1_2acb2 = add i32 %v0_2acb2, -12
  %v2_2acb2 = inttoptr i32 %v1_2acb2 to i32*
  %v3_2acb2 = load i32, i32* %v2_2acb2, align 4
  %v1_2acb5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2acb5 = xor i32 %v1_2acb5, %v3_2acb2
  %v3_2acb5 = icmp eq i32 %v2_2acb5, 0
  store i32 %v2_2acb5, i32* @eax, align 4
  br i1 %v3_2acb5, label %bb, label %dec_label_pc_2acbe

bb:                                               ; preds = %dec_label_pc_2aca4
  %v1_2acbc = call i32 @function_2acc3()
  br label %dec_label_pc_2acbe

dec_label_pc_2acbe:                               ; preds = %bb, %dec_label_pc_2aca4
  %v2_2acbc = phi i32 [ %v1_2acbc, %bb ], [ %v2_2acb5, %dec_label_pc_2aca4 ]
  ret i32 %v2_2acbc
}

define i32 @function_2acc3() local_unnamed_addr {
dec_label_pc_2acc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2acc5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2acc5:
  %eax.global-to-local = alloca i32, align 4
  %v0_2acc5 = load i32, i32* %eax.global-to-local, align 4
  %v11_2acc5 = xor i32 %v0_2acc5, 91
  store i32 %v11_2acc5, i32* %eax.global-to-local, align 4
  ret i32 %v11_2acc5

; uselistorder directives
  uselistorder i32 %v11_2acc5, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2acca:
  %v1_2acf4 = call i32 @unknown_59bd2(i32 %arg1)
  %v1_2ad01 = call i32 @unknown_424b2(i32 %arg1)
  %v2_2ad08 = sub i32 %v1_2acf4, %v1_2ad01
  %v7_2ad0d = icmp ult i32 %v2_2ad08, %arg2
  %v1_2ad0f = zext i1 %v7_2ad0d to i32
  %v3_2ad0f = and i32 %arg2, -256
  %v4_2ad0f = or i32 %v1_2ad0f, %v3_2ad0f
  store i32 %v4_2ad0f, i32* @eax, align 4
  %v5_2ad12 = icmp eq i1 %v7_2ad0d, false
  br i1 %v5_2ad12, label %bb, label %dec_label_pc_2ad16

bb:                                               ; preds = %dec_label_pc_2acca
  %v1_2ad14 = call i32 @function_2ad21()
  br label %dec_label_pc_2ad16

dec_label_pc_2ad16:                               ; preds = %bb, %dec_label_pc_2acca
  ret i32 %arg3

; uselistorder directives
  uselistorder i1 %v7_2ad0d, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ad21() local_unnamed_addr {
dec_label_pc_2ad21:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ad22(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad22:
  %ebx.global-to-local = alloca i32, align 4
  %v0_2ad22 = load i32, i32* @ebp, align 4
  %v1_2ad22 = add i32 %v0_2ad22, 1
  store i32 %v1_2ad22, i32* @ebp, align 4
  %v1_2ad27 = call i32 @unknown_424b2(i32 ptrtoint (i32* @9 to i32))
  store i32 %v1_2ad27, i32* %ebx.global-to-local, align 4
  %v0_2ad2e = load i32, i32* @ebp, align 4
  %v1_2ad2e = add i32 %v0_2ad2e, -28
  %v2_2ad2e = inttoptr i32 %v1_2ad2e to i32*
  %v3_2ad2e = load i32, i32* %v2_2ad2e, align 4
  %v1_2ad34 = call i32 @unknown_424b2(i32 %v3_2ad2e)
  %v1_2ad39 = load i32, i32* @ebp, align 4
  %v2_2ad39 = add i32 %v1_2ad39, -20
  %v3_2ad39 = inttoptr i32 %v2_2ad39 to i32*
  store i32 %v1_2ad34, i32* %v3_2ad39, align 4
  %v0_2ad3c = load i32, i32* @ebp, align 4
  %v1_2ad3c = add i32 %v0_2ad3c, -32
  %v1_2ad43 = add i32 %v0_2ad3c, -20
  %v2_2ad49 = call i32 @unknown_53c30(i32 %v1_2ad43, i32 %v1_2ad3c)
  %v1_2ad4e = inttoptr i32 %v2_2ad49 to i32*
  %v2_2ad4e = load i32, i32* %v1_2ad4e, align 4
  %v1_2ad50 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2ad50 = add i32 %v1_2ad50, %v2_2ad4e
  ret i32 %v2_2ad50

; uselistorder directives
  uselistorder i32 (i32)* @unknown_424b2, { 1, 0, 2 }
}

define i32 @function_2ad54(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad54:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ad7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ad7e:
  %v0_2ad7e = load i32, i32* @eax, align 4
  %v5_2ad7e = mul i32 %v0_2ad7e, 2
  %v20_2ad7e = and i32 %v5_2ad7e, 254
  %v22_2ad7e = and i32 %v0_2ad7e, -256
  %v23_2ad7e = or i32 %v20_2ad7e, %v22_2ad7e
  store i32 %v23_2ad7e, i32* @eax, align 4
  %v0_2ad80 = call i32 @function_2ad85()
  ret i32 %v0_2ad80

; uselistorder directives
  uselistorder i32 %v0_2ad7e, { 1, 0 }
}

define i32 @function_2ad82() local_unnamed_addr {
dec_label_pc_2ad82:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_2ad82 = add i32 %tmp91, -16
  %v2_2ad82 = inttoptr i32 %v1_2ad82 to i32*
  %v3_2ad82 = load i32, i32* %v2_2ad82, align 4
  ret i32 %v3_2ad82
}

define i32 @function_2ad85() local_unnamed_addr {
dec_label_pc_2ad85:
  %v0_2ad85 = load i32, i32* @ebp, align 4
  %v1_2ad85 = add i32 %v0_2ad85, -12
  %v2_2ad85 = inttoptr i32 %v1_2ad85 to i32*
  %v3_2ad85 = load i32, i32* %v2_2ad85, align 4
  %v1_2ad88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ad88 = icmp eq i32 %v1_2ad88, %v3_2ad85
  br i1 %v3_2ad88, label %bb, label %dec_label_pc_2ad85.dec_label_pc_2ad91_crit_edge

dec_label_pc_2ad85.dec_label_pc_2ad91_crit_edge:  ; preds = %dec_label_pc_2ad85
  %v3_2ad8f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2ad91

bb:                                               ; preds = %dec_label_pc_2ad85
  %v1_2ad8f = call i32 @function_2ad96()
  br label %dec_label_pc_2ad91

dec_label_pc_2ad91:                               ; preds = %dec_label_pc_2ad85.dec_label_pc_2ad91_crit_edge, %bb
  %v3_2ad8f = phi i32 [ %v3_2ad8f.pre, %dec_label_pc_2ad85.dec_label_pc_2ad91_crit_edge ], [ %v1_2ad8f, %bb ]
  ret i32 %v3_2ad8f

; uselistorder directives
  uselistorder label %dec_label_pc_2ad91, { 1, 0 }
}

declare i32 @__stack_chk_fail.1047(i32, i32) local_unnamed_addr

define i32 @function_2ad96() local_unnamed_addr {
dec_label_pc_2ad96:
  %v0_2ad9b = load i32, i32* @eax, align 4
  ret i32 %v0_2ad9b
}

define i32 @_ZNSt6vectorI6CTxOutSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ad9c:
  %v2_2adc6 = call i32 @unknown_4ed1c(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2adda

bb:                                               ; preds = %dec_label_pc_2ad9c
  %v1_2add8 = call i32 @function_2addf()
  br label %dec_label_pc_2adda

dec_label_pc_2adda:                               ; preds = %bb, %dec_label_pc_2ad9c
  %v2_2add8 = phi i32 [ %v1_2add8, %bb ], [ %arg1, %dec_label_pc_2ad9c ]
  ret i32 %v2_2add8

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2addf() local_unnamed_addr {
dec_label_pc_2addf:
  %v0_2ade0 = load i32, i32* @eax, align 4
  ret i32 %v0_2ade0
}

define i32 @_ZN9__gnu_cxxmiIP5CTxInSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ade3:
  %v1_2ae07 = call i32 @unknown_55c83(i32 %arg1)
  %v1_2ae0c = inttoptr i32 %v1_2ae07 to i32*
  %v2_2ae0c = load i32, i32* %v1_2ae0c, align 4
  %v1_2ae16 = call i32 @unknown_55c83(i32 %arg2)
  %v1_2ae1b = inttoptr i32 %v1_2ae16 to i32*
  %v2_2ae1b = load i32, i32* %v1_2ae1b, align 4
  %v2_2ae1f = sub i32 %v2_2ae0c, %v2_2ae1b
  %v2_2ae23 = sdiv i32 %v2_2ae1f, 4
  %v3_2ae26 = mul i32 %v2_2ae23, -991146299
  store i32 %v3_2ae26, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ae38

bb:                                               ; preds = %dec_label_pc_2ade3
  %v1_2ae36 = call i32 @function_2ae3d()
  br label %dec_label_pc_2ae38

dec_label_pc_2ae38:                               ; preds = %bb, %dec_label_pc_2ade3
  %v2_2ae36 = phi i32 [ %v1_2ae36, %bb ], [ %v3_2ae26, %dec_label_pc_2ade3 ]
  ret i32 %v2_2ae36

; uselistorder directives
  uselistorder i32 (i32)* @unknown_55c83, { 1, 0 }
}

define i32 @function_2ae3d() local_unnamed_addr {
dec_label_pc_2ae3d:
  %v0_2ae42 = load i32, i32* @eax, align 4
  ret i32 %v0_2ae42
}

define i32 @_ZSt22__uninitialized_move_aIP5CTxInS1_SaIS0_EET0_T_S4_S3_RT1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ae43:
  ret i32 %arg1
}

define i32 @function_2ae88(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ae88:
  %v0_2ae8a = load i32, i32* @eax, align 4
  %v5_2ae8a = mul i32 %v0_2ae8a, 2
  %v20_2ae8a = and i32 %v5_2ae8a, 254
  %v22_2ae8a = and i32 %v0_2ae8a, -256
  %v23_2ae8a = or i32 %v20_2ae8a, %v22_2ae8a
  store i32 %v23_2ae8a, i32* @eax, align 4
  %v0_2ae8c = load i32, i32* @ebp, align 4
  %v1_2ae8c = add i32 %v0_2ae8c, -12
  %v2_2ae8c = inttoptr i32 %v1_2ae8c to i32*
  %v3_2ae8c = load i32, i32* %v2_2ae8c, align 4
  %v1_2ae8f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ae8f = icmp eq i32 %v1_2ae8f, %v3_2ae8c
  br i1 %v3_2ae8f, label %bb, label %dec_label_pc_2ae98

bb:                                               ; preds = %dec_label_pc_2ae88
  %v1_2ae96 = call i32 @function_2ae9d()
  br label %dec_label_pc_2ae98

dec_label_pc_2ae98:                               ; preds = %bb, %dec_label_pc_2ae88
  %v2_2ae96 = phi i32 [ %v1_2ae96, %bb ], [ %v23_2ae8a, %dec_label_pc_2ae88 ]
  ret i32 %v2_2ae96

; uselistorder directives
  uselistorder i32 %v0_2ae8a, { 1, 0 }
  uselistorder i32 254, { 6, 0, 1, 2, 3, 4, 7, 5, 8, 9 }
}

define i32 @function_2ae9d() local_unnamed_addr {
dec_label_pc_2ae9d:
  %v0_2ae9e = load i32, i32* @eax, align 4
  ret i32 %v0_2ae9e
}

define i32 @_ZNK9__gnu_cxx17__normal_iteratorIP5CTxInSt6vectorIS1_SaIS1_EEE4baseEv() local_unnamed_addr {
dec_label_pc_2aea0:
  %eax.global-to-local = alloca i32, align 4
  %v17_2aea3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2aea3
}

define i32 @function_2aea8() local_unnamed_addr {
dec_label_pc_2aea8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2aea8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2aea8 = add i32 %v0_2aea8, -1587157947
  %v2_2aea8 = inttoptr i32 %v1_2aea8 to i8*
  %v3_2aea8 = load i8, i8* %v2_2aea8, align 1
  %v5_2aea8 = trunc i32 %v0_2aea8 to i8
  %v6_2aea8 = or i8 %v3_2aea8, %v5_2aea8
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v6_2aea8, i8* %v2_2aea8, align 1
  %v0_2aeae = load i32, i32* %eax.global-to-local, align 4
  %v1_2aeae = trunc i32 %v0_2aeae to i8
  %v2_2aeae = load i1, i1* %cf.global-to-local, align 1
  %v3_2aeae = zext i1 %v2_2aeae to i8
  %v4_2aeae = add i8 %v3_2aeae, %v1_2aeae
  %v19_2aeae = icmp ule i8 %v4_2aeae, %v1_2aeae
  %v21_2aeae = icmp eq i1 %v2_2aeae, %v19_2aeae
  store i1 %v21_2aeae, i1* %cf.global-to-local, align 1
  %v22_2aeae = zext i8 %v4_2aeae to i32
  %v24_2aeae = and i32 %v0_2aeae, -256
  %v25_2aeae = or i32 %v22_2aeae, %v24_2aeae
  store i32 %v25_2aeae, i32* %eax.global-to-local, align 4
  %v1_2aeb0 = inttoptr i32 %v25_2aeae to i8*
  %v2_2aeb0 = load i8, i8* %v1_2aeb0, align 1
  %v5_2aeb0 = add i8 %v2_2aeb0, %v4_2aeae
  store i8 %v5_2aeb0, i8* %v1_2aeb0, align 1
  %v0_2aeb2 = load i32, i32* %eax.global-to-local, align 4
  %v1_2aeb2 = load i32, i32* @ebp, align 4
  %v2_2aeb2 = add i32 %v1_2aeb2, -12
  %v3_2aeb2 = inttoptr i32 %v2_2aeb2 to i32*
  store i32 %v0_2aeb2, i32* %v3_2aeb2, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2aeb7 = load i32, i32* @ebp, align 4
  %v1_2aeb7 = add i32 %v0_2aeb7, -28
  %v2_2aeb7 = inttoptr i32 %v1_2aeb7 to i32*
  %v3_2aeb7 = load i32, i32* %v2_2aeb7, align 4
  store i32 %v3_2aeb7, i32* @eax, align 4
  %v1_2aeba = add i32 %v0_2aeb7, -12
  %v2_2aeba = inttoptr i32 %v1_2aeba to i32*
  %v3_2aeba = load i32, i32* %v2_2aeba, align 4
  %v1_2aebd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2aebd = icmp eq i32 %v1_2aebd, %v3_2aeba
  br i1 %v3_2aebd, label %bb, label %dec_label_pc_2aec6

bb:                                               ; preds = %dec_label_pc_2aea8
  %v1_2aec4 = call i32 @function_2aecb()
  store i32 %v1_2aec4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2aec6

dec_label_pc_2aec6:                               ; preds = %bb, %dec_label_pc_2aea8
  %v2_2aec4 = phi i32 [ %v1_2aec4, %bb ], [ %v3_2aeb7, %dec_label_pc_2aea8 ]
  ret i32 %v2_2aec4

; uselistorder directives
  uselistorder i8 %v4_2aeae, { 0, 2, 1 }
  uselistorder i8 %v1_2aeae, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder i32 -1587157947, { 1, 0 }
}

define i32 @function_2aecb() local_unnamed_addr {
dec_label_pc_2aecb:
  %v0_2aecc = load i32, i32* @eax, align 4
  ret i32 %v0_2aecc
}

define i32 @_ZSt13copy_backwardIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2aecd:
  ret i32 %arg2
}

define i32 @function_2aee0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2aee0:
  %v0_2aee0 = load i32, i32* @ebp, align 4
  %v1_2aee0 = add i32 %v0_2aee0, 16
  %v2_2aee0 = inttoptr i32 %v1_2aee0 to i32*
  %v3_2aee0 = load i32, i32* %v2_2aee0, align 4
  %v2_2aee3 = add i32 %v0_2aee0, -36
  %v3_2aee3 = inttoptr i32 %v2_2aee3 to i32*
  store i32 %v3_2aee0, i32* %v3_2aee3, align 4
  %v0_2aee6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2aeec = load i32, i32* @ebp, align 4
  %v2_2aeec = add i32 %v1_2aeec, -12
  %v3_2aeec = inttoptr i32 %v2_2aeec to i32*
  store i32 %v0_2aee6, i32* %v3_2aeec, align 4
  %v0_2aef1 = load i32, i32* @ebp, align 4
  %v1_2aef1 = add i32 %v0_2aef1, -32
  %v2_2aef1 = inttoptr i32 %v1_2aef1 to i32*
  %v3_2aef1 = load i32, i32* %v2_2aef1, align 4
  %v1_2aef7 = call i32 @unknown_59e67(i32 %v3_2aef1)
  store i32 %v1_2aef7, i32* @ebx, align 4
  %v0_2aefe = load i32, i32* @ebp, align 4
  %v1_2aefe = add i32 %v0_2aefe, -28
  %v2_2aefe = inttoptr i32 %v1_2aefe to i32*
  %v3_2aefe = load i32, i32* %v2_2aefe, align 4
  %v1_2af04 = call i32 @unknown_59e67(i32 %v3_2aefe)
  %v0_2af09 = load i32, i32* @ebp, align 4
  %v1_2af09 = add i32 %v0_2af09, -36
  %v2_2af09 = inttoptr i32 %v1_2af09 to i32*
  %v3_2af09 = load i32, i32* %v2_2af09, align 4
  %v0_2af10 = load i32, i32* @ebx, align 4
  %v3_2af17 = call i32 @unknown_59e9c(i32 %v1_2af04, i32 %v0_2af10, i32 %v3_2af09)
  store i32 %v3_2af17, i32* @eax, align 4
  %v0_2af1c = load i32, i32* @ebp, align 4
  %v1_2af1c = add i32 %v0_2af1c, -12
  %v2_2af1c = inttoptr i32 %v1_2af1c to i32*
  %v3_2af1c = load i32, i32* %v2_2af1c, align 4
  %v1_2af1f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2af1f = icmp eq i32 %v1_2af1f, %v3_2af1c
  br i1 %v3_2af1f, label %bb, label %dec_label_pc_2af28

bb:                                               ; preds = %dec_label_pc_2aee0
  %v1_2af26 = call i32 @function_2af2d()
  br label %dec_label_pc_2af28

dec_label_pc_2af28:                               ; preds = %bb, %dec_label_pc_2aee0
  %v2_2af26 = phi i32 [ %v1_2af26, %bb ], [ %v3_2af17, %dec_label_pc_2aee0 ]
  ret i32 %v2_2af26

; uselistorder directives
  uselistorder i32 (i32)* @unknown_59e67, { 1, 0 }
}

define i32 @function_2af2d() local_unnamed_addr {
dec_label_pc_2af2d:
  %v0_2af32 = load i32, i32* @eax, align 4
  ret i32 %v0_2af32
}

define i32 @_ZSt4fillIP5CTxInS0_EvT_S2_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2af33:
  %v1_2af5d = call i32 @unknown_59f74(i32 %arg2)
  %v1_2af6a = call i32 @unknown_59f74(i32 %arg1)
  %v3_2af7d = call i32 @unknown_59fa9(i32 %v1_2af6a, i32 %v1_2af5d, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2af8e

bb:                                               ; preds = %dec_label_pc_2af33
  %v1_2af8c = call i32 @function_2af93()
  br label %dec_label_pc_2af8e

dec_label_pc_2af8e:                               ; preds = %bb, %dec_label_pc_2af33
  %v2_2af8c = phi i32 [ %v1_2af8c, %bb ], [ 0, %dec_label_pc_2af33 ]
  ret i32 %v2_2af8c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_59f74, { 1, 0 }
}

define i32 @function_2af90(i32 %arg1) local_unnamed_addr {
dec_label_pc_2af90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2af93() local_unnamed_addr {
dec_label_pc_2af93:
  %v0_2af98 = load i32, i32* @eax, align 4
  ret i32 %v0_2af98
}

define i32 @_ZSt24__uninitialized_fill_n_aIP5CTxInjS0_S0_EvT_T0_RKT1_RSaIT2_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2af99:
  %v7_2afd6 = call i32 @unknown_5a06a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2afe7

bb:                                               ; preds = %dec_label_pc_2af99
  %v1_2afe5 = call i32 @function_2afec()
  br label %dec_label_pc_2afe7

dec_label_pc_2afe7:                               ; preds = %bb, %dec_label_pc_2af99
  %v2_2afe5 = phi i32 [ %v1_2afe5, %bb ], [ 0, %dec_label_pc_2af99 ]
  ret i32 %v2_2afe5

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2afec() local_unnamed_addr {
dec_label_pc_2afec:
  %v0_2afed = load i32, i32* @eax, align 4
  ret i32 %v0_2afed
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE12_M_check_lenEjPKc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2afee:
  %v1_2b018 = call i32 @unknown_5a10e(i32 %arg1)
  %v1_2b025 = call i32 @unknown_4264a(i32 %arg1)
  ret i32 %arg2

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2b034(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b034:
  %v1_2b034 = load i32, i32* @edx, align 4
  ret i32 %v1_2b034
}

define i32 @function_2b044() local_unnamed_addr {
dec_label_pc_2b044:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2b044 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2b044 = add i32 %v0_2b044, 76145733
  %v2_2b044 = inttoptr i32 %v1_2b044 to i32*
  %v3_2b044 = load i32, i32* %v2_2b044, align 4
  %v4_2b044 = add i32 %v3_2b044, -1
  store i32 %v4_2b044, i32* %v2_2b044, align 4
  %v0_2b04a = load i32, i32* %eax.global-to-local, align 4
  %v1_2b04a = trunc i32 %v0_2b04a to i8
  %v2_2b04a = and i8 %v1_2b04a, -24
  %v3_2b04a = icmp eq i8 %v2_2b04a, 0
  %v8_2b04a = zext i8 %v2_2b04a to i32
  %v10_2b04a = and i32 %v0_2b04a, -256
  %v11_2b04a = or i32 %v8_2b04a, %v10_2b04a
  store i32 %v11_2b04a, i32* %eax.global-to-local, align 4
  %v1_2b04d = icmp eq i1 %v3_2b04a, false
  br i1 %v1_2b04d, label %dec_label_pc_2b050, label %dec_label_pc_2b04f

dec_label_pc_2b04f:                               ; preds = %dec_label_pc_2b0a9, %bb, %dec_label_pc_2b044
  %merge = phi i32 [ %v11_2b04a, %dec_label_pc_2b044 ], [ %v1_2b0b3, %bb ], [ %storemerge, %dec_label_pc_2b0a9 ]
  ret i32 %merge

dec_label_pc_2b050:                               ; preds = %dec_label_pc_2b044
  store i32 %v11_2b04a, i32* %ebx.global-to-local, align 4
  %v0_2b052 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b052 = add i32 %v0_2b052, -28
  %v2_2b052 = inttoptr i32 %v1_2b052 to i32*
  %v3_2b052 = load i32, i32* %v2_2b052, align 4
  store i32 %v3_2b052, i32* %eax.global-to-local, align 4
  %v1_2b058 = call i32 @unknown_4264a(i32 %v3_2b052)
  %v2_2b05d = add i32 %v0_2b052, -20
  %v3_2b05d = inttoptr i32 %v2_2b05d to i32*
  store i32 %v1_2b058, i32* %v3_2b05d, align 4
  %v0_2b060 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b060 = add i32 %v0_2b060, -32
  %v1_2b067 = add i32 %v0_2b060, -20
  store i32 %v1_2b067, i32* %eax.global-to-local, align 4
  %v2_2b06d = call i32 @unknown_53f54(i32 %v1_2b067, i32 %v1_2b060)
  store i32 %v2_2b06d, i32* %eax.global-to-local, align 4
  %v1_2b072 = inttoptr i32 %v2_2b06d to i32*
  %v2_2b072 = load i32, i32* %v1_2b072, align 4
  %v1_2b074 = load i32, i32* %ebx.global-to-local, align 4
  %v2_2b074 = add i32 %v1_2b074, %v2_2b072
  store i32 %v2_2b074, i32* %eax.global-to-local, align 4
  %v1_2b076 = load i32, i32* %ebp.global-to-local, align 4
  %v2_2b076 = add i32 %v1_2b076, -16
  %v3_2b076 = inttoptr i32 %v2_2b076 to i32*
  store i32 %v2_2b074, i32* %v3_2b076, align 4
  %v0_2b079 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b079 = add i32 %v0_2b079, -28
  %v2_2b079 = inttoptr i32 %v1_2b079 to i32*
  %v3_2b079 = load i32, i32* %v2_2b079, align 4
  store i32 %v3_2b079, i32* %eax.global-to-local, align 4
  %v1_2b07f = call i32 @unknown_4264a(i32 %v3_2b079)
  store i32 %v1_2b07f, i32* %eax.global-to-local, align 4
  %v1_2b084 = load i32, i32* %ebp.global-to-local, align 4
  %v2_2b084 = add i32 %v1_2b084, -16
  %v3_2b084 = inttoptr i32 %v2_2b084 to i32*
  %v4_2b084 = load i32, i32* %v3_2b084, align 4
  %tmp101 = icmp ugt i32 %v1_2b07f, %v4_2b084
  br i1 %tmp101, label %dec_label_pc_2b099, label %dec_label_pc_2b089

dec_label_pc_2b089:                               ; preds = %dec_label_pc_2b050
  %v1_2b089 = add i32 %v1_2b084, -28
  %v2_2b089 = inttoptr i32 %v1_2b089 to i32*
  %v3_2b089 = load i32, i32* %v2_2b089, align 4
  store i32 %v3_2b089, i32* %eax.global-to-local, align 4
  %v1_2b08f = call i32 @unknown_5a10e(i32 %v3_2b089)
  store i32 %v1_2b08f, i32* %eax.global-to-local, align 4
  %v1_2b094 = load i32, i32* %ebp.global-to-local, align 4
  %v2_2b094 = add i32 %v1_2b094, -16
  %v3_2b094 = inttoptr i32 %v2_2b094 to i32*
  %v4_2b094 = load i32, i32* %v3_2b094, align 4
  %v10_2b094 = icmp ult i32 %v1_2b08f, %v4_2b094
  %v1_2b097 = icmp eq i1 %v10_2b094, false
  br i1 %v1_2b097, label %dec_label_pc_2b0a9, label %dec_label_pc_2b099

dec_label_pc_2b099:                               ; preds = %dec_label_pc_2b050, %dec_label_pc_2b089
  %v0_2b099 = phi i32 [ %v1_2b084, %dec_label_pc_2b050 ], [ %v1_2b094, %dec_label_pc_2b089 ]
  %v1_2b099 = add i32 %v0_2b099, -28
  %v2_2b099 = inttoptr i32 %v1_2b099 to i32*
  %v3_2b099 = load i32, i32* %v2_2b099, align 4
  store i32 %v3_2b099, i32* %eax.global-to-local, align 4
  %v1_2b09f = call i32 @unknown_5a10e(i32 %v3_2b099)
  %v0_2b0a9.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_2b0a9

dec_label_pc_2b0a9:                               ; preds = %dec_label_pc_2b089, %dec_label_pc_2b099
  %v0_2b0a9 = phi i32 [ %v0_2b0a9.pre, %dec_label_pc_2b099 ], [ %v1_2b094, %dec_label_pc_2b089 ]
  %storemerge = phi i32 [ %v1_2b09f, %dec_label_pc_2b099 ], [ %v4_2b094, %dec_label_pc_2b089 ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_2b0a9 = add i32 %v0_2b0a9, -12
  %v2_2b0a9 = inttoptr i32 %v1_2b0a9 to i32*
  %v3_2b0a9 = load i32, i32* %v2_2b0a9, align 4
  %v1_2b0ac = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b0ac = icmp eq i32 %v1_2b0ac, %v3_2b0a9
  br i1 %v3_2b0ac, label %bb, label %dec_label_pc_2b04f

bb:                                               ; preds = %dec_label_pc_2b0a9
  %v1_2b0b3 = call i32 @function_2b0ba()
  store i32 %v1_2b0b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b04f

; uselistorder directives
  uselistorder i32 %v1_2b0b3, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v11_2b04a, { 1, 0, 2 }
  uselistorder i32 (i32)* @unknown_5a10e, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_4264a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_2b0a9, { 1, 0 }
  uselistorder label %dec_label_pc_2b099, { 1, 0 }
  uselistorder label %dec_label_pc_2b04f, { 1, 0, 2 }
}

define i32 @function_2b0ba() local_unnamed_addr {
dec_label_pc_2b0ba:
  %v0_2b0bf = load i32, i32* @eax, align 4
  ret i32 %v0_2b0bf
}

define i32 @_ZNSt6vectorI5CTxInSaIS0_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b0c0:
  %v2_2b0ea = call i32 @unknown_4fee8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b0fe

bb:                                               ; preds = %dec_label_pc_2b0c0
  %v1_2b0fc = call i32 @function_2b103()
  br label %dec_label_pc_2b0fe

dec_label_pc_2b0fe:                               ; preds = %bb, %dec_label_pc_2b0c0
  %v2_2b0fc = phi i32 [ %v1_2b0fc, %bb ], [ %arg1, %dec_label_pc_2b0c0 ]
  ret i32 %v2_2b0fc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2b103() local_unnamed_addr {
dec_label_pc_2b103:
  %v0_2b104 = load i32, i32* @eax, align 4
  ret i32 %v0_2b104
}

define i32 @_Z12SerReadWriteI11CHashWriteriEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2b107:
  %v2_2b13a = load i32, i32* %arg2, align 4
  %v4_2b154 = call i32 @unknown_4960d(i32 %arg1, i32 %v2_2b13a, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b16a

bb:                                               ; preds = %dec_label_pc_2b107
  %v1_2b168 = call i32 @function_2b16f()
  br label %dec_label_pc_2b16a

dec_label_pc_2b16a:                               ; preds = %bb, %dec_label_pc_2b107
  %v2_2b168 = phi i32 [ %v1_2b168, %bb ], [ 0, %dec_label_pc_2b107 ]
  ret i32 %v2_2b168
}

define i32 @function_2b16f() local_unnamed_addr {
dec_label_pc_2b16f:
  %v0_2b170 = load i32, i32* @eax, align 4
  ret i32 %v0_2b170
}

define i32 @_Z12SerReadWriteI11CHashWriterSt6vectorI5CTxInSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2b171:
  %v4_2b1bc = call i32 @unknown_5a2ce(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b1d2

bb:                                               ; preds = %dec_label_pc_2b171
  %v1_2b1d0 = call i32 @function_2b1d7()
  br label %dec_label_pc_2b1d2

dec_label_pc_2b1d2:                               ; preds = %bb, %dec_label_pc_2b171
  %v2_2b1d0 = phi i32 [ %v1_2b1d0, %bb ], [ 0, %dec_label_pc_2b171 ]
  ret i32 %v2_2b1d0
}

define i32 @function_2b1d7() local_unnamed_addr {
dec_label_pc_2b1d7:
  %v0_2b1d8 = load i32, i32* @eax, align 4
  ret i32 %v0_2b1d8
}

define i32 @_Z12SerReadWriteI11CHashWriterSt6vectorI6CTxOutSaIS2_EEEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_2b1d9:
  %v4_2b224 = call i32 @unknown_5a399(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b23a

bb:                                               ; preds = %dec_label_pc_2b1d9
  %v1_2b238 = call i32 @function_2b23f()
  br label %dec_label_pc_2b23a

dec_label_pc_2b23a:                               ; preds = %bb, %dec_label_pc_2b1d9
  %v2_2b238 = phi i32 [ %v1_2b238, %bb ], [ 0, %dec_label_pc_2b1d9 ]
  ret i32 %v2_2b238
}

define i32 @function_2b23f() local_unnamed_addr {
dec_label_pc_2b23f:
  %v0_2b240 = load i32, i32* @eax, align 4
  ret i32 %v0_2b240
}

define i32 @_Z12SerReadWriteI11CHashWriterjEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2b241:
  %v2_2b274 = load i32, i32* %arg2, align 4
  %v4_2b28e = call i32 @unknown_5a464(i32 %arg1, i32 %v2_2b274, i32 %arg3, i32 %arg4)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b2a4

bb:                                               ; preds = %dec_label_pc_2b241
  %v1_2b2a2 = call i32 @function_2b2a9()
  br label %dec_label_pc_2b2a4

dec_label_pc_2b2a4:                               ; preds = %bb, %dec_label_pc_2b241
  %v2_2b2a2 = phi i32 [ %v1_2b2a2, %bb ], [ 0, %dec_label_pc_2b241 ]
  ret i32 %v2_2b2a2
}

define i32 @function_2b2a9() local_unnamed_addr {
dec_label_pc_2b2a9:
  %v0_2b2aa = load i32, i32* @eax, align 4
  ret i32 %v0_2b2aa
}

define i32 @_ZN5boost6tuples4consI7CPubKeyNS0_9null_typeEEC1IKS2_EERT_RKS3_SA_SA_SA_SA_SA_SA_SA_SA_(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_2b2ac:
  %df.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  store i32 %arg11, i32* %eax.global-to-local, align 4
  %v0_2b2f7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v4_2b302 = ptrtoint i16* %arg1 to i32
  store i32 %v4_2b302, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 65, i32* %ebx.global-to-local, align 4
  %v1_2b30f = urem i32 %v4_2b302, 2
  %v2_2b30f = icmp eq i32 %v1_2b30f, 0
  store i32 %v1_2b30f, i32* %ecx.global-to-local, align 4
  br i1 %v2_2b30f, label %dec_label_pc_2b324, label %dec_label_pc_2b316

dec_label_pc_2b316:                               ; preds = %dec_label_pc_2b2ac
  %v1_2b316 = inttoptr i32 %arg2 to i8*
  %v2_2b316 = load i8, i8* %v1_2b316, align 1
  %v3_2b316 = zext i8 %v2_2b316 to i32
  store i32 %v3_2b316, i32* %ecx.global-to-local, align 4
  %v3_2b319 = bitcast i16* %arg1 to i8*
  store i8 %v2_2b316, i8* %v3_2b319, align 1
  %v0_2b31b = load i32, i32* %eax.global-to-local, align 4
  %v1_2b31b = add i32 %v0_2b31b, 1
  store i32 %v1_2b31b, i32* %eax.global-to-local, align 4
  %v0_2b31e = load i32, i32* %edx.global-to-local, align 4
  %v1_2b31e = add i32 %v0_2b31e, 1
  store i32 %v1_2b31e, i32* %edx.global-to-local, align 4
  %v0_2b321 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2b321 = add i32 %v0_2b321, -1
  store i32 %v1_2b321, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2b324

dec_label_pc_2b324:                               ; preds = %dec_label_pc_2b316, %dec_label_pc_2b2ac
  %v0_2b33c7 = phi i32 [ %v1_2b321, %dec_label_pc_2b316 ], [ 65, %dec_label_pc_2b2ac ]
  %v0_2b32d = phi i32 [ %v1_2b31e, %dec_label_pc_2b316 ], [ %arg2, %dec_label_pc_2b2ac ]
  %v2_2b330 = phi i32 [ %v1_2b31b, %dec_label_pc_2b316 ], [ %v4_2b302, %dec_label_pc_2b2ac ]
  %v1_2b326 = and i32 %v2_2b330, 2
  %v2_2b326 = icmp eq i32 %v1_2b326, 0
  store i32 %v1_2b326, i32* %ecx.global-to-local, align 4
  br i1 %v2_2b326, label %dec_label_pc_2b33c, label %dec_label_pc_2b32d

dec_label_pc_2b32d:                               ; preds = %dec_label_pc_2b324
  %v1_2b32d = inttoptr i32 %v0_2b32d to i16*
  %v2_2b32d = load i16, i16* %v1_2b32d, align 2
  %v3_2b32d = zext i16 %v2_2b32d to i32
  store i32 %v3_2b32d, i32* %ecx.global-to-local, align 4
  %v3_2b330 = inttoptr i32 %v2_2b330 to i16*
  store i16 %v2_2b32d, i16* %v3_2b330, align 2
  %v0_2b333 = load i32, i32* %eax.global-to-local, align 4
  %v1_2b333 = add i32 %v0_2b333, 2
  store i32 %v1_2b333, i32* %eax.global-to-local, align 4
  %v0_2b336 = load i32, i32* %edx.global-to-local, align 4
  %v1_2b336 = add i32 %v0_2b336, 2
  store i32 %v1_2b336, i32* %edx.global-to-local, align 4
  %v0_2b339 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2b339 = add i32 %v0_2b339, -2
  store i32 %v1_2b339, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2b33c

dec_label_pc_2b33c:                               ; preds = %dec_label_pc_2b32d, %dec_label_pc_2b324
  %v0_2b343 = phi i32 [ %v1_2b336, %dec_label_pc_2b32d ], [ %v0_2b32d, %dec_label_pc_2b324 ]
  %v0_2b341 = phi i32 [ %v1_2b333, %dec_label_pc_2b32d ], [ %v2_2b330, %dec_label_pc_2b324 ]
  %v0_2b33c = phi i32 [ %v1_2b339, %dec_label_pc_2b32d ], [ %v0_2b33c7, %dec_label_pc_2b324 ]
  %v2_2b33e = udiv i32 %v0_2b33c, 4
  store i32 %v2_2b33e, i32* %ecx.global-to-local, align 4
  %tmp152 = inttoptr i32 %v0_2b343 to i8*
  %tmp153 = inttoptr i32 %v0_2b341 to i8*
  call void @__asm_rep_movsd_memcpy(i8* %tmp153, i8* %tmp152, i32 %v2_2b33e)
  %v7_2b345 = load i1, i1* %df.global-to-local, align 1
  %v8_2b345 = select i1 %v7_2b345, i32 -4, i32 4
  %v9_2b345 = mul i32 %v8_2b345, %v2_2b33e
  %v10_2b345 = add i32 %v9_2b345, %v0_2b341
  store i32 %v10_2b345, i32* %edx.global-to-local, align 4
  store i32 %v10_2b345, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_2b350 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2b352 = and i32 %v0_2b350, 2
  %v2_2b352 = icmp eq i32 %v1_2b352, 0
  br i1 %v2_2b352, label %dec_label_pc_2b364, label %dec_label_pc_2b359

dec_label_pc_2b359:                               ; preds = %dec_label_pc_2b33c
  %v0_2b361 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b361 = add i32 %v0_2b361, 2
  store i32 %v1_2b361, i32* %ecx.global-to-local, align 4
  %v0_2b364.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_2b364

dec_label_pc_2b364:                               ; preds = %dec_label_pc_2b359, %dec_label_pc_2b33c
  %v3_2b36f = phi i32 [ %v1_2b361, %dec_label_pc_2b359 ], [ 0, %dec_label_pc_2b33c ]
  %v0_2b364 = phi i32 [ %v0_2b364.pre, %dec_label_pc_2b359 ], [ %v0_2b350, %dec_label_pc_2b33c ]
  %v1_2b364 = urem i32 %v0_2b364, 2
  %v2_2b364 = icmp eq i32 %v1_2b364, 0
  store i32 %v1_2b364, i32* %ebx.global-to-local, align 4
  br i1 %v2_2b364, label %dec_label_pc_2b372, label %dec_label_pc_2b36b

dec_label_pc_2b36b:                               ; preds = %dec_label_pc_2b364
  %v0_2b36b = load i32, i32* %edx.global-to-local, align 4
  %v3_2b36b = add i32 %v0_2b36b, %v3_2b36f
  %v4_2b36b = inttoptr i32 %v3_2b36b to i8*
  %v5_2b36b = load i8, i8* %v4_2b36b, align 1
  %v6_2b36b = zext i8 %v5_2b36b to i32
  store i32 %v6_2b36b, i32* %edx.global-to-local, align 4
  %v2_2b36f = load i32, i32* %eax.global-to-local, align 4
  %v5_2b36f = add i32 %v2_2b36f, %v3_2b36f
  %v6_2b36f = inttoptr i32 %v5_2b36f to i8*
  store i8 %v5_2b36b, i8* %v6_2b36f, align 1
  br label %dec_label_pc_2b372

dec_label_pc_2b372:                               ; preds = %dec_label_pc_2b36b, %dec_label_pc_2b364
  store i32 %v0_2b2f7, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b37e

bb:                                               ; preds = %dec_label_pc_2b372
  %v1_2b37c = call i32 @function_2b383()
  store i32 %v1_2b37c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b37e

dec_label_pc_2b37e:                               ; preds = %bb, %dec_label_pc_2b372
  %v2_2b37c = phi i32 [ %v1_2b37c, %bb ], [ 0, %dec_label_pc_2b372 ]
  ret i32 %v2_2b37c

; uselistorder directives
  uselistorder i32 %v1_2b364, { 1, 0 }
  uselistorder i32 %v2_2b33e, { 2, 1, 0 }
  uselistorder i32 %v1_2b30f, { 1, 0 }
  uselistorder i32 %v4_2b302, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32* %ebx.global-to-local, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32 -2, { 0, 17, 1, 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 65, { 2, 4, 5, 3, 6, 0, 1 }
}

define i32 @function_2b383() local_unnamed_addr {
dec_label_pc_2b383:
  %v0_2b38a = load i32, i32* @eax, align 4
  ret i32 %v0_2b38a
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE8_S_valueEPKSt18_Rb_tree_node_base() local_unnamed_addr {
dec_label_pc_2b38b:
  %eax.global-to-local = alloca i32, align 4
  %v5_2b38b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2b38b
}

define i32 @function_2b38d(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b38d:
  %v0_2b390 = load i32, i32* @ebx, align 4
  %v1_2b390 = add i32 %v0_2b390, 1166608453
  %v2_2b390 = inttoptr i32 %v1_2b390 to i8*
  %v3_2b390 = load i8, i8* %v2_2b390, align 1
  %v4_2b390 = load i32, i32* @ecx, align 4
  %v5_2b390 = trunc i32 %v4_2b390 to i8
  %v6_2b390 = sub i8 %v3_2b390, %v5_2b390
  store i8 %v6_2b390, i8* %v2_2b390, align 1
  %v0_2b398 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b39d = load i32, i32* @ebp, align 4
  %v2_2b39d = add i32 %v1_2b39d, -12
  %v3_2b39d = inttoptr i32 %v2_2b39d to i32*
  store i32 %v0_2b398, i32* %v3_2b39d, align 4
  %v0_2b3a2 = load i32, i32* @ebp, align 4
  %v1_2b3a2 = add i32 %v0_2b3a2, -28
  %v2_2b3a2 = inttoptr i32 %v1_2b3a2 to i32*
  %v3_2b3a2 = load i32, i32* %v2_2b3a2, align 4
  %v1_2b3a5 = add i32 %v3_2b3a2, 16
  store i32 %v1_2b3a5, i32* @eax, align 4
  %v1_2b3a8 = add i32 %v0_2b3a2, -12
  %v2_2b3a8 = inttoptr i32 %v1_2b3a8 to i32*
  %v3_2b3a8 = load i32, i32* %v2_2b3a8, align 4
  %v1_2b3ab = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b3ab = icmp eq i32 %v1_2b3ab, %v3_2b3a8
  br i1 %v3_2b3ab, label %bb, label %dec_label_pc_2b3b4

bb:                                               ; preds = %dec_label_pc_2b38d
  %v1_2b3b2 = call i32 @function_2b3b9()
  br label %dec_label_pc_2b3b4

dec_label_pc_2b3b4:                               ; preds = %bb, %dec_label_pc_2b38d
  %v2_2b3b2 = phi i32 [ %v1_2b3b2, %bb ], [ %v1_2b3a5, %dec_label_pc_2b38d ]
  ret i32 %v2_2b3b2
}

define i32 @function_2b3b9() local_unnamed_addr {
dec_label_pc_2b3b9:
  %v0_2b3ba = load i32, i32* @eax, align 4
  ret i32 %v0_2b3ba
}

define i32 @_ZN5boost6tuplesltI7uint256NS0_4consISt6vectorIhSaIhEENS3_I7CPubKeyNS0_9null_typeEEEEES2_SA_EEbRKNS3_IT_T0_EERKNS3_IT1_T2_EE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b3bb:
  %v2_2b3e5 = call i32 @unknown_5a634(i32 %arg1, i32 %arg2)
  store i32 %v2_2b3e5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b3f6

bb:                                               ; preds = %dec_label_pc_2b3bb
  %v1_2b3f4 = call i32 @function_2b3fb()
  br label %dec_label_pc_2b3f6

dec_label_pc_2b3f6:                               ; preds = %bb, %dec_label_pc_2b3bb
  %v2_2b3f4 = phi i32 [ %v1_2b3f4, %bb ], [ %v2_2b3e5, %dec_label_pc_2b3bb ]
  ret i32 %v2_2b3f4
}

define i32 @function_2b3fb() local_unnamed_addr {
dec_label_pc_2b3fb:
  %v0_2b3fc = load i32, i32* @eax, align 4
  ret i32 %v0_2b3fc
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS9_ESI_RKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b3fe:
  ret i32 %arg2
}

define i32 @function_2b411(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b411:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2b411 = load i32, i32* @ebp, align 4
  %v1_2b411 = add i32 %v0_2b411, 1
  store i32 %v1_2b411, i32* %ebp.global-to-local, align 4
  %v0_2b412 = load i32, i32* @ecx, align 4
  %v1_2b412 = add i32 %v0_2b412, 1166793797
  %v2_2b412 = inttoptr i32 %v1_2b412 to i8*
  %v3_2b412 = load i8, i8* %v2_2b412, align 1
  %v5_2b412 = trunc i32 %v0_2b412 to i8
  %v6_2b412 = load i1, i1* @cf, align 1
  %v7_2b412 = zext i1 %v6_2b412 to i8
  %v8_2b412 = add i8 %v3_2b412, %v5_2b412
  %v9_2b412 = add i8 %v7_2b412, %v8_2b412
  %v27_2b412 = icmp ule i8 %v9_2b412, %v3_2b412
  %v28_2b412 = icmp ult i8 %v8_2b412, %v3_2b412
  %v29_2b412 = select i1 %v6_2b412, i1 %v27_2b412, i1 %v28_2b412
  store i1 %v29_2b412, i1* %cf.global-to-local, align 1
  store i8 %v9_2b412, i8* %v2_2b412, align 1
  %v0_2b418 = load i32, i32* @eax, align 4
  %v1_2b418 = trunc i32 %v0_2b418 to i8
  %v2_2b418 = load i1, i1* %cf.global-to-local, align 1
  %v3_2b418 = zext i1 %v2_2b418 to i8
  %v4_2b418 = add i8 %v1_2b418, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_2b418 = add i8 %v4_2b418, %v3_2b418
  %v25_2b418 = zext i8 %v5_2b418 to i32
  %v27_2b418 = and i32 %v0_2b418, -256
  %v28_2b418 = or i32 %v25_2b418, %v27_2b418
  store i32 %v28_2b418, i32* %eax.global-to-local, align 4
  %v0_2b41a = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b41a = add i32 %v0_2b41a, 1
  store i32 %v1_2b41a, i32* @ebp, align 4
  %v2_2b421 = udiv i8 %v5_2b418, 101
  %v3_2b421 = urem i8 %v5_2b418, 101
  %v4_2b421 = zext i8 %v3_2b421 to i32
  %v6_2b421 = and i32 %v0_2b418, -65536
  %v8_2b421 = zext i8 %v2_2b421 to i32
  %v10_2b421 = mul nuw nsw i32 %v8_2b421, 256
  %v11_2b421 = or i32 %v4_2b421, %v6_2b421
  %v12_2b421 = or i32 %v11_2b421, %v10_2b421
  store i32 %v12_2b421, i32* %eax.global-to-local, align 4
  %v0_2b423 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b428 = add i32 %v0_2b41a, -11
  %v3_2b428 = inttoptr i32 %v2_2b428 to i32*
  store i32 %v0_2b423, i32* %v3_2b428, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b47a

dec_label_pc_2b42f:                               ; preds = %dec_label_pc_2b47a
  %v3_2b42f = load i32, i32* %v2_2b47a, align 4
  store i32 %v3_2b42f, i32* %eax.global-to-local, align 4
  %v1_2b435 = call i32 @unknown_50d65(i32 %v3_2b42f)
  store i32 %v1_2b435, i32* %eax.global-to-local, align 4
  %v0_2b43c = load i32, i32* @ebp, align 4
  %v1_2b43c = add i32 %v0_2b43c, -32
  %v2_2b43c = inttoptr i32 %v1_2b43c to i32*
  %v3_2b43c = load i32, i32* %v2_2b43c, align 4
  store i32 %v3_2b43c, i32* %eax.global-to-local, align 4
  %v1_2b443 = add i32 %v0_2b43c, -44
  %v2_2b443 = inttoptr i32 %v1_2b443 to i32*
  %v3_2b443 = load i32, i32* %v2_2b443, align 4
  %v3_2b44d = call i32 @unknown_50a3e(i32 %v3_2b43c, i32 %v3_2b443, i32 %v1_2b435)
  store i32 %v3_2b44d, i32* %eax.global-to-local, align 4
  %v4_2b452 = trunc i32 %v3_2b44d to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2b452 = icmp eq i8 %v4_2b452, 0
  %v0_2b46c = load i32, i32* @ebp, align 4
  %v1_2b46c = add i32 %v0_2b46c, -36
  %v2_2b46c = inttoptr i32 %v1_2b46c to i32*
  %v3_2b46c = load i32, i32* %v2_2b46c, align 4
  store i32 %v3_2b46c, i32* %eax.global-to-local, align 4
  br i1 %v5_2b452, label %dec_label_pc_2b46c, label %dec_label_pc_2b456

dec_label_pc_2b456:                               ; preds = %dec_label_pc_2b42f
  %v2_2b459 = add i32 %v0_2b46c, -40
  %v3_2b459 = inttoptr i32 %v2_2b459 to i32*
  store i32 %v3_2b46c, i32* %v3_2b459, align 4
  %v0_2b45c = load i32, i32* @ebp, align 4
  %v1_2b45c = add i32 %v0_2b45c, -36
  %v2_2b45c = inttoptr i32 %v1_2b45c to i32*
  %v3_2b45c = load i32, i32* %v2_2b45c, align 4
  store i32 %v3_2b45c, i32* %eax.global-to-local, align 4
  %v1_2b462 = call i32 @unknown_50dd9(i32 %v3_2b45c)
  store i32 %v1_2b462, i32* %eax.global-to-local, align 4
  %v1_2b467 = load i32, i32* @ebp, align 4
  %v2_2b467 = add i32 %v1_2b467, -36
  %v3_2b467 = inttoptr i32 %v2_2b467 to i32*
  store i32 %v1_2b462, i32* %v3_2b467, align 4
  br label %dec_label_pc_2b47a.backedge

dec_label_pc_2b47a.backedge:                      ; preds = %dec_label_pc_2b456, %dec_label_pc_2b46c
  %v3_2b47e.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b47a

dec_label_pc_2b46c:                               ; preds = %dec_label_pc_2b42f
  %v1_2b472 = call i32 @unknown_50da9(i32 %v3_2b46c)
  store i32 %v1_2b472, i32* %eax.global-to-local, align 4
  %v1_2b477 = load i32, i32* @ebp, align 4
  %v2_2b477 = add i32 %v1_2b477, -36
  %v3_2b477 = inttoptr i32 %v2_2b477 to i32*
  store i32 %v1_2b472, i32* %v3_2b477, align 4
  br label %dec_label_pc_2b47a.backedge

dec_label_pc_2b47a:                               ; preds = %dec_label_pc_2b47a.backedge, %dec_label_pc_2b411
  %v3_2b47e = phi i32 [ %v3_2b47e.pre, %dec_label_pc_2b47a.backedge ], [ 0, %dec_label_pc_2b411 ]
  %v0_2b47a = load i32, i32* @ebp, align 4
  %v1_2b47a = add i32 %v0_2b47a, -36
  %v2_2b47a = inttoptr i32 %v1_2b47a to i32*
  %v3_2b47a = load i32, i32* %v2_2b47a, align 4
  %v10_2b47a = icmp eq i32 %v3_2b47a, 0
  %v1_2b47e = icmp eq i1 %v10_2b47a, false
  %v2_2b47e = zext i1 %v1_2b47e to i32
  %v4_2b47e = and i32 %v3_2b47e, -256
  %v5_2b47e = or i32 %v2_2b47e, %v4_2b47e
  store i32 %v5_2b47e, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2b481 = icmp eq i1 %v1_2b47e, false
  %v1_2b483 = icmp eq i1 %v5_2b481, false
  br i1 %v1_2b483, label %dec_label_pc_2b42f, label %dec_label_pc_2b485

dec_label_pc_2b485:                               ; preds = %dec_label_pc_2b47a
  %v1_2b485 = add i32 %v0_2b47a, -40
  %v2_2b485 = inttoptr i32 %v1_2b485 to i32*
  %v3_2b485 = load i32, i32* %v2_2b485, align 4
  store i32 %v3_2b485, i32* %eax.global-to-local, align 4
  %v1_2b48c = add i32 %v0_2b47a, -28
  %v2_2b48c = inttoptr i32 %v1_2b48c to i32*
  %v3_2b48c = load i32, i32* %v2_2b48c, align 4
  store i32 %v3_2b48c, i32* %eax.global-to-local, align 4
  %v2_2b492 = call i32 @unknown_50e0a(i32 %v3_2b48c, i32 %v3_2b485)
  store i32 %v2_2b492, i32* %eax.global-to-local, align 4
  %v0_2b497 = load i32, i32* @ebp, align 4
  %v1_2b497 = add i32 %v0_2b497, -28
  %v2_2b497 = inttoptr i32 %v1_2b497 to i32*
  %v3_2b497 = load i32, i32* %v2_2b497, align 4
  store i32 %v3_2b497, i32* @eax, align 4
  %v1_2b49a = add i32 %v0_2b497, -12
  %v2_2b49a = inttoptr i32 %v1_2b49a to i32*
  %v3_2b49a = load i32, i32* %v2_2b49a, align 4
  %v1_2b49d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2b49d = icmp eq i32 %v1_2b49d, %v3_2b49a
  br i1 %v3_2b49d, label %bb, label %dec_label_pc_2b4a6

bb:                                               ; preds = %dec_label_pc_2b485
  %v1_2b4a4 = call i32 @function_2b4ab()
  store i32 %v1_2b4a4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b4a6

dec_label_pc_2b4a6:                               ; preds = %bb, %dec_label_pc_2b485
  %v2_2b4a4 = phi i32 [ %v1_2b4a4, %bb ], [ %v3_2b497, %dec_label_pc_2b485 ]
  ret i32 %v2_2b4a4

; uselistorder directives
  uselistorder i32* %v2_2b47a, { 1, 0 }
  uselistorder i32 %v0_2b47a, { 1, 0, 2 }
  uselistorder i32 %v3_2b46c, { 1, 0, 2 }
  uselistorder i8 %v9_2b412, { 1, 0 }
  uselistorder i8 %v8_2b412, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 10, 11, 12, 13, 1, 3, 4, 5, 2, 6, 7, 8, 9, 14, 15, 16 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_2b47a.backedge, { 1, 0 }
}

define i32 @function_2b4a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b4a8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b4ab() local_unnamed_addr {
dec_label_pc_2b4ab:
  %v0_2b4ac = load i32, i32* @eax, align 4
  ret i32 %v0_2b4ac
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEESB_EC1ERKSB_SE_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b4b0:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_2b4d9 = inttoptr i32 %arg2 to i32*
  %v2_2b4d9 = load i32, i32* %v1_2b4d9, align 4
  store i32 %v2_2b4d9, i32* %arg1, align 4
  %v1_2b4e3 = inttoptr i32 %arg3 to i32*
  %v2_2b4e3 = load i32, i32* %v1_2b4e3, align 4
  %v2_2b4e5 = add i32 %tmp104, 4
  %v3_2b4e5 = inttoptr i32 %v2_2b4e5 to i32*
  store i32 %v2_2b4e3, i32* %v3_2b4e5, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b4f4

bb:                                               ; preds = %dec_label_pc_2b4b0
  %v4_2b4f2 = call i32 @function_2b4f9(i32 %arg3, i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2b4f4

dec_label_pc_2b4f4:                               ; preds = %bb, %dec_label_pc_2b4b0
  %v5_2b4f2 = phi i32 [ %v4_2b4f2, %bb ], [ 0, %dec_label_pc_2b4b0 ]
  ret i32 %v5_2b4f2
}

define i32 @function_2b4f9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b4f9:
  %v0_2b4fa = load i32, i32* @eax, align 4
  ret i32 %v0_2b4fa
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_ESH_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b4fc:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  store i32 %arg3, i32* %stack_var_-56, align 4
  %v2_2b51f = ptrtoint i32* %stack_var_-28 to i32
  %v2_2b52c = call i32 @unknown_50f40(i32 %v2_2b51f, i32 %arg1)
  %v2_2b53b = ptrtoint i32* %stack_var_-24 to i32
  %v2_2b541 = call i32 @unknown_49c40(i32 %v2_2b53b, i32 %v2_2b51f)
  %v2_2b54d = ptrtoint i32* %stack_var_-52 to i32
  %v2_2b553 = call i32 @unknown_43fd6(i32 %v2_2b54d, i32 %v2_2b53b)
  %v4_2b558 = trunc i32 %v2_2b553 to i8
  %v5_2b558 = icmp eq i8 %v4_2b558, 0
  br i1 %v5_2b558, label %dec_label_pc_2b5a0, label %dec_label_pc_2b55c

dec_label_pc_2b55c:                               ; preds = %dec_label_pc_2b4fc
  %v2_2b55c = ptrtoint i32* %stack_var_-36 to i32
  %v2_2b569 = call i32 @unknown_50aae(i32 %v2_2b55c, i32 %arg1)
  %v2_2b578 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2b57e = call i32 @unknown_49c40(i32 %v2_2b578, i32 %v2_2b55c)
  %v2_2b58a = ptrtoint i32* %stack_var_-56 to i32
  %v2_2b590 = call i32 @unknown_43fd6(i32 %v2_2b58a, i32 %v2_2b578)
  %v4_2b595 = trunc i32 %v2_2b590 to i8
  %v5_2b595 = icmp eq i8 %v4_2b595, 0
  br i1 %v5_2b595, label %dec_label_pc_2b5a0, label %dec_label_pc_2b5a5

dec_label_pc_2b5a0:                               ; preds = %dec_label_pc_2b55c, %dec_label_pc_2b4fc
  br label %dec_label_pc_2b5a5

dec_label_pc_2b5a5:                               ; preds = %dec_label_pc_2b55c, %dec_label_pc_2b5a0
  %v1_2b5ac = load i32, i32* @esp, align 4
  %v2_2b5ac = inttoptr i32 %v1_2b5ac to i32*
  store i32 %arg1, i32* %v2_2b5ac, align 4
  %v0_2b5af = call i32 @unknown_5a832()
  ret i32 %v0_2b5af

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_43fd6, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_49c40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_2b5a5, { 1, 0 }
}

define i32 @function_2b5be(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b5be:
  %v2_2b5be = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2b5be = load i32, i32* @eax, align 4
  %v4_2b5be = trunc i32 %v3_2b5be to i8
  %v5_2b5be = add i8 %v4_2b5be, %v2_2b5be
  %v21_2b5be = inttoptr i32 %v3_2b5be to i8*
  store i8 %v5_2b5be, i8* %v21_2b5be, align 1
  %v0_2b5c0 = load i32, i32* @ebp, align 4
  %v1_2b5c0 = add i32 %v0_2b5c0, 1418317909
  %v2_2b5c0 = inttoptr i32 %v1_2b5c0 to i8*
  %v3_2b5c0 = load i8, i8* %v2_2b5c0, align 1
  %v4_2b5c0 = load i32, i32* @ecx, align 4
  %v5_2b5c0 = trunc i32 %v4_2b5c0 to i8
  %v6_2b5c0 = add i8 %v5_2b5c0, %v3_2b5c0
  store i8 %v6_2b5c0, i8* %v2_2b5c0, align 1
  %v0_2b5c6 = load i32, i32* @eax, align 4
  %v11_2b5c6 = and i32 %v0_2b5c6, -252
  %v1_2b5cb = call i32 @unknown_5a8ca(i32 %v11_2b5c6)
  %v0_2b5d3 = load i32, i32* @ebp, align 4
  %v1_2b5da = add i32 %v0_2b5d3, -44
  %v2_2b5da = inttoptr i32 %v1_2b5da to i32*
  %v3_2b5da = load i32, i32* %v2_2b5da, align 4
  ret i32 %v3_2b5da
}

define i32 @function_2b5de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b5de:
  %v0_2b5e0 = call i32 @unknown_5a922()
  %v0_2b5e5 = load i32, i32* @ebp, align 4
  %v1_2b5e5 = add i32 %v0_2b5e5, -52
  %v1_2b5ec = add i32 %v0_2b5e5, -48
  %v2_2b5f2 = call i32 @unknown_43e66(i32 %v1_2b5ec, i32 %v1_2b5e5)
  %v0_2b5fb = load i32, i32* @ebp, align 4
  %v1_2b5fb = add i32 %v0_2b5fb, -12
  %v2_2b5fb = inttoptr i32 %v1_2b5fb to i32*
  %v3_2b5fb = load i32, i32* %v2_2b5fb, align 4
  %v1_2b5fe = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b5fe = xor i32 %v1_2b5fe, %v3_2b5fb
  %v3_2b5fe = icmp eq i32 %v2_2b5fe, 0
  store i32 %v2_2b5fe, i32* @eax, align 4
  br i1 %v3_2b5fe, label %bb, label %dec_label_pc_2b607

bb:                                               ; preds = %dec_label_pc_2b5de
  %v1_2b605 = call i32 @function_2b60c()
  br label %dec_label_pc_2b607

dec_label_pc_2b607:                               ; preds = %bb, %dec_label_pc_2b5de
  %v3_2b605 = phi i32 [ %v1_2b605, %bb ], [ %v2_2b5fe, %dec_label_pc_2b5de ]
  ret i32 %v3_2b605
}

define i32 @function_2b60c() local_unnamed_addr {
dec_label_pc_2b60c:
  %v0_2b60d = load i32, i32* @eax, align 4
  ret i32 %v0_2b60d
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE8_S_valueEPKSt13_Rb_tree_nodeIS9_E() local_unnamed_addr {
dec_label_pc_2b60e:
  %eax.global-to-local = alloca i32, align 4
  %v5_2b60e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2b60e
}

define i32 @function_2b610(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b610:
  %v0_2b613 = load i32, i32* @ebx, align 4
  %v1_2b613 = add i32 %v0_2b613, 1166608453
  %v2_2b613 = inttoptr i32 %v1_2b613 to i8*
  %v3_2b613 = load i8, i8* %v2_2b613, align 1
  %v4_2b613 = load i32, i32* @ecx, align 4
  %v5_2b613 = trunc i32 %v4_2b613 to i8
  %v6_2b613 = sub i8 %v3_2b613, %v5_2b613
  store i8 %v6_2b613, i8* %v2_2b613, align 1
  %v0_2b61b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b620 = load i32, i32* @ebp, align 4
  %v2_2b620 = add i32 %v1_2b620, -12
  %v3_2b620 = inttoptr i32 %v2_2b620 to i32*
  store i32 %v0_2b61b, i32* %v3_2b620, align 4
  %v0_2b625 = load i32, i32* @ebp, align 4
  %v1_2b625 = add i32 %v0_2b625, -28
  %v2_2b625 = inttoptr i32 %v1_2b625 to i32*
  %v3_2b625 = load i32, i32* %v2_2b625, align 4
  %v1_2b628 = add i32 %v3_2b625, 16
  store i32 %v1_2b628, i32* @eax, align 4
  %v1_2b62b = add i32 %v0_2b625, -12
  %v2_2b62b = inttoptr i32 %v1_2b62b to i32*
  %v3_2b62b = load i32, i32* %v2_2b62b, align 4
  %v1_2b62e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b62e = icmp eq i32 %v1_2b62e, %v3_2b62b
  br i1 %v3_2b62e, label %bb, label %dec_label_pc_2b637

bb:                                               ; preds = %dec_label_pc_2b610
  %v1_2b635 = call i32 @function_2b63c()
  br label %dec_label_pc_2b637

dec_label_pc_2b637:                               ; preds = %bb, %dec_label_pc_2b610
  %v2_2b635 = phi i32 [ %v1_2b635, %bb ], [ %v1_2b628, %dec_label_pc_2b610 ]
  ret i32 %v2_2b635
}

define i32 @function_2b63c() local_unnamed_addr {
dec_label_pc_2b63c:
  %v0_2b63d = load i32, i32* @eax, align 4
  ret i32 %v0_2b63d
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE14_M_create_nodeERKS9_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b63e:
  %stack_var_-17 = alloca i32, align 4
  %v1_2b662 = call i32 @unknown_5aaa6(i32 %arg1)
  %v1_2b66d = add i32 %v1_2b662, 16
  %v1_2b673 = call i32 @unknown_56e5b(i32 %v1_2b66d)
  %v2_2b67a = ptrtoint i32* %stack_var_-17 to i32
  %v2_2b687 = call i32 @unknown_56dd6(i32 %v2_2b67a, i32 %arg1)
  %v3_2b6a0 = call i32 @unknown_5ac1a(i32 %v2_2b67a, i32 %v1_2b673, i32 %arg2)
  %v1_2b6ab = call i32 @unknown_56e26(i32 %v2_2b67a)
  store i32 %v1_2b662, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b6bf

bb:                                               ; preds = %dec_label_pc_2b63e
  %v1_2b6bd = call i32 @function_2b707()
  store i32 %v1_2b6bd, i32* @eax, align 4
  br label %dec_label_pc_2b6bf

dec_label_pc_2b6bf:                               ; preds = %bb, %dec_label_pc_2b63e
  %v0_2b6bf = call i32 @function_2b702()
  ret i32 %v0_2b6bf

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2b6c1() local_unnamed_addr {
dec_label_pc_2b6c1:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2b6c1 = load i32, i32* %eax.global-to-local, align 4
  %v0_2b6c3 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2b6c3 = add i32 %v0_2b6c3, -13
  store i32 %v1_2b6c3, i32* %eax.global-to-local, align 4
  %v1_2b6c9 = call i32 @unknown_56e26(i32 %v1_2b6c3)
  store i32 %v0_2b6c1, i32* @eax, align 4
  %v0_2b6d0 = call i32 @function_2b6e3()
  store i32 %v0_2b6d0, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b6d0

; uselistorder directives
  uselistorder i32 (i32)* @unknown_56e26, { 1, 0 }
}

define i32 @function_2b6d3() local_unnamed_addr {
dec_label_pc_2b6d3:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b6d3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b6d3
}

define i32 @function_2b6d6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b6d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b6e3() local_unnamed_addr {
dec_label_pc_2b6e3:
  %v3_2b6e3 = load i32, i32* @eax, align 4
  ret i32 %v3_2b6e3
}

define i32 @function_2b702() local_unnamed_addr {
dec_label_pc_2b702:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2b707() local_unnamed_addr {
dec_label_pc_2b707:
  %v0_2b70b = load i32, i32* @eax, align 4
  ret i32 %v0_2b70b
}

define i32 @_ZNSaISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b70c:
  %v1_2b729 = call i32 @unknown_5ad6a(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b73a

bb:                                               ; preds = %dec_label_pc_2b70c
  %v1_2b738 = call i32 @function_2b73f()
  br label %dec_label_pc_2b73a

dec_label_pc_2b73a:                               ; preds = %bb, %dec_label_pc_2b70c
  %v2_2b738 = phi i32 [ %v1_2b738, %bb ], [ 0, %dec_label_pc_2b70c ]
  ret i32 %v2_2b738
}

define i32 @function_2b73f() local_unnamed_addr {
dec_label_pc_2b73f:
  %v0_2b740 = load i32, i32* @eax, align 4
  ret i32 %v0_2b740
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE13_Rb_tree_implISD_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b742:
  ret i32 %arg1
}

define i32 @function_2b762(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b762:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_2b762 = load i32, i32* @ebx, align 4
  %v1_2b762 = add i32 %v0_2b762, 1086841925
  %v2_2b762 = inttoptr i32 %v1_2b762 to i8*
  %v3_2b762 = load i8, i8* %v2_2b762, align 1
  %v4_2b762 = load i32, i32* @ecx, align 4
  %v5_2b762 = trunc i32 %v4_2b762 to i8
  %v6_2b762 = add i8 %v5_2b762, %v3_2b762
  store i8 %v6_2b762, i8* %v2_2b762, align 1
  %v2_2b768 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2b768 = load i32, i32* @eax, align 4
  %v4_2b768 = trunc i32 %v3_2b768 to i8
  %v5_2b768 = or i8 %v4_2b768, %v2_2b768
  %v12_2b768 = inttoptr i32 %v3_2b768 to i8*
  store i8 %v5_2b768, i8* %v12_2b768, align 1
  %v2_2b76a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2b76a = load i32, i32* @eax, align 4
  %v4_2b76a = trunc i32 %v3_2b76a to i8
  %v5_2b76a = add i8 %v4_2b76a, %v2_2b76a
  %v21_2b76a = inttoptr i32 %v3_2b76a to i8*
  store i8 %v5_2b76a, i8* %v21_2b76a, align 1
  %v0_2b76c = load i32, i32* @ebx, align 4
  %v1_2b76c = add i32 %v0_2b76c, 1351476293
  %v2_2b76c = inttoptr i32 %v1_2b76c to i8*
  %v3_2b76c = load i8, i8* %v2_2b76c, align 1
  %v4_2b76c = load i32, i32* @ecx, align 4
  %v5_2b76c = trunc i32 %v4_2b76c to i8
  %v6_2b76c = add i8 %v5_2b76c, %v3_2b76c
  store i8 %v6_2b76c, i8* %v2_2b76c, align 1
  %v0_2b772 = load i32, i32* @eax, align 4
  %v1_2b772 = trunc i32 %v0_2b772 to i8
  %v2_2b772 = add i8 %v1_2b772, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v18_2b772 = and i32 %v0_2b772, -256
  %v0_2b774 = load i32, i32* @ebp, align 4
  %v2_2b778 = or i8 %v2_2b772, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v2_2b77e = add i8 %v2_2b778, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v6_2b77e = icmp ult i8 %v2_2b77e, %v2_2b778
  %v16_2b77e = zext i8 %v2_2b77e to i32
  %v19_2b77e = or i32 %v16_2b77e, %v18_2b772
  store i32 %v19_2b77e, i32* %eax.global-to-local, align 4
  %v1_2b780 = add i32 %v0_2b774, 3
  store i32 %v1_2b780, i32* @ebp, align 4
  store i32 %v19_2b77e, i32* %stack_var_-12, align 4
  %v0_2b784 = load i32, i32* @ebx, align 4
  %v1_2b784 = add i32 %v0_2b784, 862319685
  %v2_2b784 = inttoptr i32 %v1_2b784 to i8*
  %v3_2b784 = load i8, i8* %v2_2b784, align 1
  %v4_2b784 = load i32, i32* @ecx, align 4
  %v5_2b784 = trunc i32 %v4_2b784 to i8
  %v7_2b784 = zext i1 %v6_2b77e to i8
  %v8_2b784 = add i8 %v3_2b784, %v7_2b784
  %v9_2b784 = add i8 %v8_2b784, %v5_2b784
  store i8 %v9_2b784, i8* %v2_2b784, align 1
  %v0_2b78a = load i32, i32* %eax.global-to-local, align 4
  %v1_2b78a = add i32 %v0_2b78a, 20
  %v10_2b78a = icmp eq i32 %v1_2b78a, 0
  store i32 %v1_2b78a, i32* @eax, align 4
  br i1 %v10_2b78a, label %bb, label %dec_label_pc_2b791

bb:                                               ; preds = %dec_label_pc_2b762
  %v8_2b778 = zext i8 %v2_2b778 to i32
  %v11_2b778 = or i32 %v8_2b778, %v18_2b772
  %v16_2b772 = zext i8 %v2_2b772 to i32
  %v19_2b772 = or i32 %v16_2b772, %v18_2b772
  %v1_2b78f = load i32, i32* %stack_var_-12, align 4
  %v4_2b78f = call i32 @function_2b796(i32 %v1_2b78f, i32 %v11_2b778, i32 %v19_2b772)
  store i32 %v4_2b78f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2b791

dec_label_pc_2b791:                               ; preds = %bb, %dec_label_pc_2b762
  %v6_2b78f = phi i32 [ %v4_2b78f, %bb ], [ %v1_2b78a, %dec_label_pc_2b762 ]
  ret i32 %v6_2b78f

; uselistorder directives
  uselistorder i8 %v2_2b778, { 2, 0, 1 }
  uselistorder i8 %v2_2b772, { 1, 0 }
  uselistorder i32 1086841925, { 2, 0, 1 }
}

define i32 @function_2b796(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2b796:
  %v0_2b797 = load i32, i32* @eax, align 4
  ret i32 %v0_2b797
}

define i32 @_ZNKSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b798:
  %v0_2b7aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2b7aa
}

define i32 @function_2b7b2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b7b2:
  %v0_2b7b5 = load i32, i32* @ebp, align 4
  %v1_2b7b5 = add i32 %v0_2b7b5, -32
  %v2_2b7b5 = inttoptr i32 %v1_2b7b5 to i32*
  %v3_2b7b5 = load i32, i32* %v2_2b7b5, align 4
  %v1_2b7bb = call i32 @unknown_5ae20(i32 %v3_2b7b5)
  %v0_2b7c4 = load i32, i32* @ebp, align 4
  %v1_2b7c4 = add i32 %v0_2b7c4, -28
  %v2_2b7c4 = inttoptr i32 %v1_2b7c4 to i32*
  %v3_2b7c4 = load i32, i32* %v2_2b7c4, align 4
  %v2_2b7ca = call i32 @unknown_5ae4e(i32 %v3_2b7c4, i32 %v1_2b7bb)
  %v0_2b7cf = load i32, i32* @ebp, align 4
  %v1_2b7cf = add i32 %v0_2b7cf, -28
  %v2_2b7cf = inttoptr i32 %v1_2b7cf to i32*
  %v3_2b7cf = load i32, i32* %v2_2b7cf, align 4
  store i32 %v3_2b7cf, i32* @eax, align 4
  %v1_2b7d2 = add i32 %v0_2b7cf, -12
  %v2_2b7d2 = inttoptr i32 %v1_2b7d2 to i32*
  %v3_2b7d2 = load i32, i32* %v2_2b7d2, align 4
  %v1_2b7d5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b7d5 = icmp eq i32 %v1_2b7d5, %v3_2b7d2
  br i1 %v3_2b7d5, label %bb, label %dec_label_pc_2b7de

bb:                                               ; preds = %dec_label_pc_2b7b2
  %v1_2b7dc = call i32 @function_2b7e3()
  br label %dec_label_pc_2b7de

dec_label_pc_2b7de:                               ; preds = %bb, %dec_label_pc_2b7b2
  %v3_2b7dc = phi i32 [ %v1_2b7dc, %bb ], [ %v3_2b7cf, %dec_label_pc_2b7b2 ]
  ret i32 %v3_2b7dc
}

define i32 @function_2b7e3() local_unnamed_addr {
dec_label_pc_2b7e3:
  %v0_2b7e4 = load i32, i32* @eax, align 4
  ret i32 %v0_2b7e4
}

define i32 @_ZNSaIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS0_9null_typeES7_S7_S7_S7_S7_S7_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b7e8:
  %v1_2b805 = call i32 @unknown_5aeda(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b816

bb:                                               ; preds = %dec_label_pc_2b7e8
  %v1_2b814 = call i32 @function_2b81b()
  br label %dec_label_pc_2b816

dec_label_pc_2b816:                               ; preds = %bb, %dec_label_pc_2b7e8
  %v2_2b814 = phi i32 [ %v1_2b814, %bb ], [ 0, %dec_label_pc_2b7e8 ]
  ret i32 %v2_2b814
}

define i32 @function_2b81b() local_unnamed_addr {
dec_label_pc_2b81b:
  %v0_2b81c = load i32, i32* @eax, align 4
  ret i32 %v0_2b81c
}

define i32 @_ZSt11__addressofIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEPT_RSA_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b81d:
  ret i32 %arg1
}

define i32 @function_2b82a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b82a:
  %v0_2b82a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b82f = load i32, i32* @ebp, align 4
  %v2_2b82f = add i32 %v1_2b82f, -12
  %v3_2b82f = inttoptr i32 %v2_2b82f to i32*
  store i32 %v0_2b82a, i32* %v3_2b82f, align 4
  %v0_2b834 = load i32, i32* @ebp, align 4
  %v1_2b834 = add i32 %v0_2b834, -28
  %v2_2b834 = inttoptr i32 %v1_2b834 to i32*
  %v3_2b834 = load i32, i32* %v2_2b834, align 4
  store i32 %v3_2b834, i32* @eax, align 4
  %v1_2b837 = add i32 %v0_2b834, -12
  %v2_2b837 = inttoptr i32 %v1_2b837 to i32*
  %v3_2b837 = load i32, i32* %v2_2b837, align 4
  %v1_2b83a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2b83a = icmp eq i32 %v1_2b83a, %v3_2b837
  br i1 %v3_2b83a, label %bb, label %dec_label_pc_2b843

bb:                                               ; preds = %dec_label_pc_2b82a
  %v1_2b841 = call i32 @function_2b848()
  br label %dec_label_pc_2b843

dec_label_pc_2b843:                               ; preds = %bb, %dec_label_pc_2b82a
  %v2_2b841 = phi i32 [ %v1_2b841, %bb ], [ %v3_2b834, %dec_label_pc_2b82a ]
  ret i32 %v2_2b841
}

define i32 @function_2b848() local_unnamed_addr {
dec_label_pc_2b848:
  %v0_2b849 = load i32, i32* @eax, align 4
  ret i32 %v0_2b849
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEE7destroyEPSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b84a:
  ret i32 %arg2
}

define i32 @function_2b86c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b86c:
  %v0_2b86c = load i32, i32* @eax, align 4
  %v11_2b86c = and i32 %v0_2b86c, -24
  %v1_2b870 = inttoptr i32 %v11_2b86c to i32*
  %v2_2b870 = load i32, i32* %v1_2b870, align 8
  %v4_2b870 = add i32 %v2_2b870, %v11_2b86c
  store i32 %v4_2b870, i32* %v1_2b870, align 8
  %v0_2b872 = load i32, i32* @ebp, align 4
  %v1_2b872 = add i32 %v0_2b872, -12
  %v2_2b872 = inttoptr i32 %v1_2b872 to i32*
  %v3_2b872 = load i32, i32* %v2_2b872, align 4
  %v1_2b875 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b875 = xor i32 %v1_2b875, %v3_2b872
  %v3_2b875 = icmp eq i32 %v2_2b875, 0
  store i32 %v2_2b875, i32* @eax, align 4
  br i1 %v3_2b875, label %bb, label %dec_label_pc_2b87e

bb:                                               ; preds = %dec_label_pc_2b86c
  %v1_2b87c = call i32 @function_2b883()
  br label %dec_label_pc_2b87e

dec_label_pc_2b87e:                               ; preds = %bb, %dec_label_pc_2b86c
  %v3_2b87c = phi i32 [ %v1_2b87c, %bb ], [ %v2_2b875, %dec_label_pc_2b86c ]
  ret i32 %v3_2b87c
}

define i32 @function_2b883() local_unnamed_addr {
dec_label_pc_2b883:
  %v0_2b884 = load i32, i32* @eax, align 4
  ret i32 %v0_2b884
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS9_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b886:
  ret i32 %arg1
}

define i32 @function_2b8a7() local_unnamed_addr {
dec_label_pc_2b8a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_2b8a8 = load i32, i32* %eax.global-to-local, align 4
  %v11_2b8a8 = and i32 %v0_2b8a8, -248
  store i32 %v11_2b8a8, i32* %eax.global-to-local, align 4
  %v1_2b8aa = inttoptr i32 %v11_2b8a8 to i32*
  %v2_2b8aa = load i32, i32* %v1_2b8aa, align 8
  %v4_2b8aa = add i32 %v2_2b8aa, %v11_2b8a8
  store i32 %v4_2b8aa, i32* %v1_2b8aa, align 8
  %v22_2b8aa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_2b8aa

; uselistorder directives
  uselistorder i32 %v11_2b8a8, { 0, 2, 1 }
}

define i32 @function_2b8cd() local_unnamed_addr {
dec_label_pc_2b8cd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2b8cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_2b8cd = add i32 %v0_2b8cd, -1
  store i32 %v1_2b8cd, i32* %ecx.global-to-local, align 4
  %v0_2b8cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2b8cf
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b8d0:
  ret i32 %arg1
}

define i32 @function_2b8ee(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b8ee:
  %v0_2b8f2 = load i32, i32* @ebp, align 4
  %v1_2b8f2 = add i32 %v0_2b8f2, -12
  %v2_2b8f2 = inttoptr i32 %v1_2b8f2 to i32*
  %v3_2b8f2 = load i32, i32* %v2_2b8f2, align 4
  %v1_2b8f5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b8f5 = xor i32 %v1_2b8f5, %v3_2b8f2
  %v3_2b8f5 = icmp eq i32 %v2_2b8f5, 0
  store i32 %v2_2b8f5, i32* @eax, align 4
  br i1 %v3_2b8f5, label %bb, label %dec_label_pc_2b8fe

bb:                                               ; preds = %dec_label_pc_2b8ee
  %v1_2b8fc = call i32 @function_2b903()
  br label %dec_label_pc_2b8fe

dec_label_pc_2b8fe:                               ; preds = %bb, %dec_label_pc_2b8ee
  %v2_2b8fc = phi i32 [ %v1_2b8fc, %bb ], [ %v2_2b8f5, %dec_label_pc_2b8ee ]
  ret i32 %v2_2b8fc
}

define i32 @function_2b903() local_unnamed_addr {
dec_label_pc_2b903:
  %v0_2b904 = load i32, i32* @eax, align 4
  ret i32 %v0_2b904
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE13_Rb_tree_implIS8_Lb0EE13_M_initializeEv() local_unnamed_addr {
dec_label_pc_2b906:
  %eax.global-to-local = alloca i32, align 4
  %v5_2b906 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2b906
}

define i32 @function_2b908(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b908:
  %v0_2b90b = load i32, i32* @ebx, align 4
  %v1_2b90b = add i32 %v0_2b90b, 1166608453
  %v2_2b90b = inttoptr i32 %v1_2b90b to i8*
  %v3_2b90b = load i8, i8* %v2_2b90b, align 1
  %v4_2b90b = load i32, i32* @ecx, align 4
  %v5_2b90b = trunc i32 %v4_2b90b to i8
  %v6_2b90b = sub i8 %v3_2b90b, %v5_2b90b
  store i8 %v6_2b90b, i8* %v2_2b90b, align 1
  %v0_2b913 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2b918 = load i32, i32* @ebp, align 4
  %v2_2b918 = add i32 %v1_2b918, -12
  %v3_2b918 = inttoptr i32 %v2_2b918 to i32*
  store i32 %v0_2b913, i32* %v3_2b918, align 4
  %v0_2b91d = load i32, i32* @ebp, align 4
  %v1_2b91d = add i32 %v0_2b91d, -28
  %v2_2b91d = inttoptr i32 %v1_2b91d to i32*
  %v3_2b91d = load i32, i32* %v2_2b91d, align 4
  %v1_2b920 = add i32 %v3_2b91d, 4
  %v2_2b920 = inttoptr i32 %v1_2b920 to i32*
  store i32 0, i32* %v2_2b920, align 4
  %v0_2b927 = load i32, i32* @ebp, align 4
  %v1_2b927 = add i32 %v0_2b927, -28
  %v2_2b927 = inttoptr i32 %v1_2b927 to i32*
  %v3_2b927 = load i32, i32* %v2_2b927, align 4
  %v1_2b92a = add i32 %v3_2b927, 8
  %v2_2b92a = inttoptr i32 %v1_2b92a to i32*
  store i32 0, i32* %v2_2b92a, align 4
  %v0_2b931 = load i32, i32* @ebp, align 4
  %v1_2b931 = add i32 %v0_2b931, -28
  %v2_2b931 = inttoptr i32 %v1_2b931 to i32*
  %v3_2b931 = load i32, i32* %v2_2b931, align 4
  %v1_2b934 = add i32 %v3_2b931, 4
  %v2_2b93a = add i32 %v3_2b931, 12
  %v3_2b93a = inttoptr i32 %v2_2b93a to i32*
  store i32 %v1_2b934, i32* %v3_2b93a, align 4
  %v0_2b93d = load i32, i32* @ebp, align 4
  %v1_2b93d = add i32 %v0_2b93d, -28
  %v2_2b93d = inttoptr i32 %v1_2b93d to i32*
  %v3_2b93d = load i32, i32* %v2_2b93d, align 4
  %v1_2b940 = add i32 %v3_2b93d, 4
  %v2_2b946 = add i32 %v3_2b93d, 16
  %v3_2b946 = inttoptr i32 %v2_2b946 to i32*
  store i32 %v1_2b940, i32* %v3_2b946, align 4
  %v0_2b949 = load i32, i32* @ebp, align 4
  %v1_2b949 = add i32 %v0_2b949, -12
  %v2_2b949 = inttoptr i32 %v1_2b949 to i32*
  %v3_2b949 = load i32, i32* %v2_2b949, align 4
  %v1_2b94c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2b94c = xor i32 %v1_2b94c, %v3_2b949
  %v3_2b94c = icmp eq i32 %v2_2b94c, 0
  store i32 %v2_2b94c, i32* @eax, align 4
  br i1 %v3_2b94c, label %bb, label %dec_label_pc_2b955

bb:                                               ; preds = %dec_label_pc_2b908
  %v1_2b953 = call i32 @function_2b95a()
  br label %dec_label_pc_2b955

dec_label_pc_2b955:                               ; preds = %bb, %dec_label_pc_2b908
  %v2_2b953 = phi i32 [ %v1_2b953, %bb ], [ %v2_2b94c, %dec_label_pc_2b908 ]
  ret i32 %v2_2b953
}

define i32 @function_2b95a() local_unnamed_addr {
dec_label_pc_2b95a:
  %v0_2b95b = load i32, i32* @eax, align 4
  ret i32 %v0_2b95b
}

define i32 @_ZNKSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2b95c:
  %v1_2b97f = call i32 @unknown_5b0e4(i32 %arg2)
  %v2_2b98e = call i32 @unknown_5b112(i32 %arg1, i32 %v1_2b97f)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b9a2

bb:                                               ; preds = %dec_label_pc_2b95c
  %v1_2b9a0 = call i32 @function_2b9a7()
  br label %dec_label_pc_2b9a2

dec_label_pc_2b9a2:                               ; preds = %bb, %dec_label_pc_2b95c
  %v2_2b9a0 = phi i32 [ %v1_2b9a0, %bb ], [ %arg1, %dec_label_pc_2b95c ]
  ret i32 %v2_2b9a0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2b9a7() local_unnamed_addr {
dec_label_pc_2b9a7:
  %v0_2b9a8 = load i32, i32* @eax, align 4
  ret i32 %v0_2b9a8
}

define i32 @_ZNSaISt4pairIK10txnouttype7CScriptEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9ac:
  %v1_2b9c9 = call i32 @unknown_5b19e(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2b9da

bb:                                               ; preds = %dec_label_pc_2b9ac
  %v1_2b9d8 = call i32 @function_2b9df()
  br label %dec_label_pc_2b9da

dec_label_pc_2b9da:                               ; preds = %bb, %dec_label_pc_2b9ac
  %v2_2b9d8 = phi i32 [ %v1_2b9d8, %bb ], [ 0, %dec_label_pc_2b9ac ]
  ret i32 %v2_2b9d8
}

define i32 @function_2b9df() local_unnamed_addr {
dec_label_pc_2b9df:
  %v0_2b9e0 = load i32, i32* @eax, align 4
  ret i32 %v0_2b9e0
}

define i32 @_ZSt11__addressofISt4pairIK10txnouttype7CScriptEEPT_RS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2b9e1:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ba07

bb:                                               ; preds = %dec_label_pc_2b9e1
  %v2_2ba05 = call i32 @function_2ba0c(i32 %arg1)
  br label %dec_label_pc_2ba07

dec_label_pc_2ba07:                               ; preds = %bb, %dec_label_pc_2b9e1
  %v3_2ba05 = phi i32 [ %v2_2ba05, %bb ], [ %arg1, %dec_label_pc_2b9e1 ]
  ret i32 %v3_2ba05
}

define i32 @function_2ba0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ba0c:
  %v0_2ba0d = load i32, i32* @eax, align 4
  ret i32 %v0_2ba0d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK10txnouttype7CScriptEE7destroyEPS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba0e:
  %v1_2ba31 = call i32 @unknown_3fcaa(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ba42

bb:                                               ; preds = %dec_label_pc_2ba0e
  %v1_2ba40 = call i32 @function_2ba47()
  br label %dec_label_pc_2ba42

dec_label_pc_2ba42:                               ; preds = %bb, %dec_label_pc_2ba0e
  %v2_2ba40 = phi i32 [ %v1_2ba40, %bb ], [ 0, %dec_label_pc_2ba0e ]
  ret i32 %v2_2ba40
}

define i32 @function_2ba47() local_unnamed_addr {
dec_label_pc_2ba47:
  %v0_2ba48 = load i32, i32* @eax, align 4
  ret i32 %v0_2ba48
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ba4a:
  %v3_2ba7c = call i32 @unknown_5b266(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ba8d

bb:                                               ; preds = %dec_label_pc_2ba4a
  %v1_2ba8b = call i32 @function_2ba92()
  br label %dec_label_pc_2ba8d

dec_label_pc_2ba8d:                               ; preds = %bb, %dec_label_pc_2ba4a
  %v2_2ba8b = phi i32 [ %v1_2ba8b, %bb ], [ 0, %dec_label_pc_2ba4a ]
  ret i32 %v2_2ba8b
}

define i32 @function_2ba92() local_unnamed_addr {
dec_label_pc_2ba92:
  %v0_2ba93 = load i32, i32* @eax, align 4
  ret i32 %v0_2ba93
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_S_valueEPKSt13_Rb_tree_nodeIS4_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ba94:
  %v1_2baae = add i32 %arg1, 16
  store i32 %v1_2baae, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2babd

bb:                                               ; preds = %dec_label_pc_2ba94
  %v2_2babb = call i32 @function_2bac2(i32 %arg1)
  br label %dec_label_pc_2babd

dec_label_pc_2babd:                               ; preds = %bb, %dec_label_pc_2ba94
  %v3_2babb = phi i32 [ %v2_2babb, %bb ], [ %v1_2baae, %dec_label_pc_2ba94 ]
  ret i32 %v3_2babb
}

define i32 @function_2bac2(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bac2:
  %v0_2bac3 = load i32, i32* @eax, align 4
  ret i32 %v0_2bac3
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE14_M_create_nodeERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bac4:
  %stack_var_-17 = alloca i32, align 4
  %v1_2bae8 = call i32 @unknown_5b322(i32 %arg1)
  %v1_2baf3 = add i32 %v1_2bae8, 16
  %v1_2baf9 = call i32 @unknown_574a5(i32 %v1_2baf3)
  %v2_2bb00 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2bb0d = call i32 @unknown_57420(i32 %v2_2bb00, i32 %arg1)
  %v3_2bb26 = call i32 @unknown_5b3ba(i32 %v2_2bb00, i32 %v1_2baf9, i32 %arg2)
  %v1_2bb31 = call i32 @unknown_57470(i32 %v2_2bb00)
  store i32 %v1_2bae8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bb45

bb:                                               ; preds = %dec_label_pc_2bac4
  %v1_2bb43 = call i32 @function_2bb8b()
  store i32 %v1_2bb43, i32* @eax, align 4
  br label %dec_label_pc_2bb45

dec_label_pc_2bb45:                               ; preds = %bb, %dec_label_pc_2bac4
  %v0_2bb45 = call i32 @function_2bb86()
  ret i32 %v0_2bb45

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bb48() local_unnamed_addr {
dec_label_pc_2bb48:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bb48 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bb48
}

define i32 @function_2bb76() local_unnamed_addr {
dec_label_pc_2bb76:
  %eax.global-to-local = alloca i32, align 4
  %v0_2bb76 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bb76
}

define i32 @function_2bb86() local_unnamed_addr {
dec_label_pc_2bb86:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2bb8b() local_unnamed_addr {
dec_label_pc_2bb8b:
  %v0_2bb8f = load i32, i32* @eax, align 4
  ret i32 %v0_2bb8f
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bb90:
  %v1_2bbaa = add i32 %arg1, 16
  store i32 %v1_2bbaa, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bbb9

bb:                                               ; preds = %dec_label_pc_2bb90
  %v2_2bbb7 = call i32 @function_2bbbe(i32 %arg1)
  br label %dec_label_pc_2bbb9

dec_label_pc_2bbb9:                               ; preds = %bb, %dec_label_pc_2bb90
  %v3_2bbb7 = phi i32 [ %v2_2bbb7, %bb ], [ %v1_2bbaa, %dec_label_pc_2bb90 ]
  ret i32 %v3_2bbb7
}

define i32 @function_2bbbe(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bbbe:
  %v0_2bbbf = load i32, i32* @eax, align 4
  ret i32 %v0_2bbbf
}

define i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bbc0:
  %v2_2bbea = call i32 @unknown_51bd8(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bc01

bb:                                               ; preds = %dec_label_pc_2bbc0
  %v1_2bbff = call i32 @function_2bc06()
  br label %dec_label_pc_2bc01

dec_label_pc_2bc01:                               ; preds = %bb, %dec_label_pc_2bbc0
  %v2_2bbff = phi i32 [ %v1_2bbff, %bb ], [ %arg1, %dec_label_pc_2bbc0 ]
  ret i32 %v2_2bbff

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2bc06() local_unnamed_addr {
dec_label_pc_2bc06:
  %v0_2bc07 = load i32, i32* @eax, align 4
  ret i32 %v0_2bc07
}

define i32 @_ZNSt3mapI10txnouttype7CScriptSt4lessIS0_ESaISt4pairIKS0_S1_EEE3endEv() local_unnamed_addr {
dec_label_pc_2bc0a:
  %eax.global-to-local = alloca i32, align 4
  %v2_2bc0b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2bc0b
}

define i32 @function_2bc0e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bc0e:
  %v4_2bc0f = load i32, i32* @ecx, align 4
  %v0_2bc17 = load i32, i32* @ebp, align 4
  %v1_2bc1a = add i32 %v0_2bc17, 2
  store i32 %v1_2bc1a, i32* @ebp, align 4
  %v1_2bc1b = add i32 %v4_2bc0f, -1
  store i32 %v1_2bc1b, i32* @ecx, align 4
  %v0_2bc1d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2bc22 = add i32 %v0_2bc17, -10
  %v3_2bc22 = inttoptr i32 %v2_2bc22 to i32*
  store i32 %v0_2bc1d, i32* %v3_2bc22, align 4
  %v0_2bc27 = load i32, i32* @ebp, align 4
  %v1_2bc27 = add i32 %v0_2bc27, -32
  %v2_2bc27 = inttoptr i32 %v1_2bc27 to i32*
  %v3_2bc27 = load i32, i32* %v2_2bc27, align 4
  %v1_2bc2a = add i32 %v0_2bc27, -28
  %v2_2bc2a = inttoptr i32 %v1_2bc2a to i32*
  %v3_2bc2a = load i32, i32* %v2_2bc2a, align 4
  %v2_2bc34 = call i32 @unknown_5b582(i32 %v3_2bc2a, i32 %v3_2bc27)
  %v0_2bc3c = load i32, i32* @ebp, align 4
  %v1_2bc3c = add i32 %v0_2bc3c, -28
  %v2_2bc3c = inttoptr i32 %v1_2bc3c to i32*
  %v3_2bc3c = load i32, i32* %v2_2bc3c, align 4
  store i32 %v3_2bc3c, i32* @eax, align 4
  %v1_2bc3f = add i32 %v0_2bc3c, -12
  %v2_2bc3f = inttoptr i32 %v1_2bc3f to i32*
  %v3_2bc3f = load i32, i32* %v2_2bc3f, align 4
  %v1_2bc42 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2bc42 = icmp eq i32 %v1_2bc42, %v3_2bc3f
  br i1 %v3_2bc42, label %bb, label %dec_label_pc_2bc4b

bb:                                               ; preds = %dec_label_pc_2bc0e
  %v1_2bc49 = call i32 @function_2bc50()
  br label %dec_label_pc_2bc4b

dec_label_pc_2bc4b:                               ; preds = %bb, %dec_label_pc_2bc0e
  %v3_2bc49 = phi i32 [ %v1_2bc49, %bb ], [ %v3_2bc3c, %dec_label_pc_2bc0e ]
  ret i32 %v3_2bc49
}

define i32 @function_2bc50() local_unnamed_addr {
dec_label_pc_2bc50:
  %v0_2bc51 = load i32, i32* @eax, align 4
  ret i32 %v0_2bc51
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKvEENT_11result_typeEiiRSF_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2bc54:
  ret i32 0
}

define i32 @function_2bc80() local_unnamed_addr {
dec_label_pc_2bc80:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_2bc80 = load i32, i32* %eax.global-to-local, align 4
  %v2_2bc80 = load i1, i1* %cf.global-to-local, align 1
  %v3_2bc80 = zext i1 %v2_2bc80 to i32
  %v4_2bc80 = add i32 %v3_2bc80, %v0_2bc80
  %v29_2bc80 = and i32 %v4_2bc80, 255
  %v31_2bc80 = and i32 %v0_2bc80, -256
  %v32_2bc80 = or i32 %v29_2bc80, %v31_2bc80
  store i32 %v32_2bc80, i32* %eax.global-to-local, align 4
  ret i32 %v32_2bc80

; uselistorder directives
  uselistorder i32 %v0_2bc80, { 1, 0 }
}

define i32 @function_2bcc5() local_unnamed_addr {
dec_label_pc_2bcc5:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bcc5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bcc5 = add i32 %v0_2bcc5, -1
  store i32 %v1_2bcc5, i32* %ecx.global-to-local, align 4
  %v0_2bcc7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bcc7
}

define i32 @_ZNSaISt6vectorIhSaIhEEEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bcc8:
  %v2_2bcf2 = call i32 @unknown_5bbb4(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bd03

bb:                                               ; preds = %dec_label_pc_2bcc8
  %v1_2bd01 = call i32 @function_2bd08()
  br label %dec_label_pc_2bd03

dec_label_pc_2bd03:                               ; preds = %bb, %dec_label_pc_2bcc8
  %v2_2bd01 = phi i32 [ %v1_2bd01, %bb ], [ 0, %dec_label_pc_2bcc8 ]
  ret i32 %v2_2bd01
}

define i32 @function_2bd08() local_unnamed_addr {
dec_label_pc_2bd08:
  %v0_2bd09 = load i32, i32* @eax, align 4
  ret i32 %v0_2bd09
}

define i32 @_ZSt8distanceIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bd0a:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-37 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2bd28 = ptrtoint i32* %stack_var_-37 to i32
  %v2_2bd2b = ptrtoint i32* %stack_var_-32 to i32
  %v2_2bd35 = call i32 @unknown_5bc26(i32 %v2_2bd28, i32 %v2_2bd2b)
  %v0_2bd3d = load i32, i32* %ebx.global-to-local, align 4
  %v3_2bd48 = load i32, i32* %stack_var_-32, align 4
  %v3_2bd4e = call i32 @unknown_5bc5b(i32 %v3_2bd48, i32 %arg2, i32 %v0_2bd3d)
  store i32 %v3_2bd4e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bd5f

bb:                                               ; preds = %dec_label_pc_2bd0a
  %v1_2bd5d = call i32 @function_2bd64()
  br label %dec_label_pc_2bd5f

dec_label_pc_2bd5f:                               ; preds = %bb, %dec_label_pc_2bd0a
  %v2_2bd5d = phi i32 [ %v1_2bd5d, %bb ], [ %v3_2bd4e, %dec_label_pc_2bd0a ]
  ret i32 %v2_2bd5d
}

define i32 @function_2bd64() local_unnamed_addr {
dec_label_pc_2bd64:
  %v0_2bd68 = load i32, i32* @eax, align 4
  ret i32 %v0_2bd68
}

define i32 @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEES5_S4_ET0_T_SA_S9_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2bd69:
  %v7_2bda6 = call i32 @unknown_5bd03(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 %v7_2bda6

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2bdb2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bdb2:
  %v2_2bdb2 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2bdb2 = load i32, i32* @eax, align 4
  %v4_2bdb2 = trunc i32 %v3_2bdb2 to i8
  %v5_2bdb2 = add i8 %v4_2bdb2, %v2_2bdb2
  %v21_2bdb2 = inttoptr i32 %v3_2bdb2 to i8*
  store i8 %v5_2bdb2, i8* %v21_2bdb2, align 1
  %v0_2bdb4 = load i32, i32* @ebp, align 4
  %v1_2bdb4 = load i32, i32* @eax, align 4
  %v3_2bdb4 = add i32 %v0_2bdb4, -24
  %v4_2bdb4 = add i32 %v3_2bdb4, %v1_2bdb4
  %v5_2bdb4 = inttoptr i32 %v4_2bdb4 to i8*
  %v6_2bdb4 = load i8, i8* %v5_2bdb4, align 1
  %v7_2bdb4 = load i32, i32* @edx, align 4
  %v8_2bdb4 = udiv i32 %v7_2bdb4, 256
  %v9_2bdb4 = trunc i32 %v8_2bdb4 to i8
  %v10_2bdb4 = add i8 %v9_2bdb4, %v6_2bdb4
  store i8 %v10_2bdb4, i8* %v5_2bdb4, align 1
  %v31_2bdb4 = load i32, i32* @eax, align 4
  ret i32 %v31_2bdb4
}

define i32 @function_2bdbb() local_unnamed_addr {
dec_label_pc_2bdbb:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bdbb = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bdbb = add i32 %v0_2bdbb, -1
  store i32 %v1_2bdbb, i32* %ecx.global-to-local, align 4
  %v0_2bdbd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bdbd
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEC1ERS5_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bdbe:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bdef

bb:                                               ; preds = %dec_label_pc_2bdbe
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2bded = call i32 @function_2bdf4(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2bdef

dec_label_pc_2bdef:                               ; preds = %bb, %dec_label_pc_2bdbe
  %v4_2bded = phi i32 [ %v3_2bded, %bb ], [ 0, %dec_label_pc_2bdbe ]
  ret i32 %v4_2bded

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2bdf4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bdf4:
  %v0_2bdf5 = load i32, i32* @eax, align 4
  ret i32 %v0_2bdf5
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14invoke_visitorINS5_15direct_assignerIS2_EEEEEENT_11result_typeERSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bdf6:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2be17 = add i32 %tmp105, 4
  %v1_2be1d = call i32 @unknown_4b778(i32 %v1_2be17)
  %v1_2be2a = call i32 @unknown_4b854(i32 %tmp105)
  %v2_2be34 = load i32, i32* %arg1, align 4
  %v4_2be48 = call i32 @unknown_5bddf(i32 %v2_2be34, i32 %v1_2be2a, i32 %arg2, i32 %v1_2be1d)
  store i32 %v4_2be48, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2be59

bb:                                               ; preds = %dec_label_pc_2bdf6
  %v1_2be57 = call i32 @function_2be5e()
  br label %dec_label_pc_2be59

dec_label_pc_2be59:                               ; preds = %bb, %dec_label_pc_2bdf6
  %v2_2be57 = phi i32 [ %v1_2be57, %bb ], [ %v4_2be48, %dec_label_pc_2bdf6 ]
  ret i32 %v2_2be57

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2be5e() local_unnamed_addr {
dec_label_pc_2be5e:
  %v0_2be63 = load i32, i32* @eax, align 4
  ret i32 %v0_2be63
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14assign_storageEEENT_11result_typeERSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2be64:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2be85 = add i32 %tmp105, 4
  %v1_2be8b = call i32 @unknown_4b7e6(i32 %v1_2be85)
  %v1_2be98 = call i32 @unknown_4b8c2(i32 %tmp105)
  %v2_2bea2 = load i32, i32* %arg1, align 4
  %v4_2beb6 = call i32 @unknown_5bec1(i32 %v2_2bea2, i32 %v1_2be98, i32 %arg2, i32 %v1_2be8b)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bec7

bb:                                               ; preds = %dec_label_pc_2be64
  %v1_2bec5 = call i32 @function_2becc()
  br label %dec_label_pc_2bec7

dec_label_pc_2bec7:                               ; preds = %bb, %dec_label_pc_2be64
  %v2_2bec5 = phi i32 [ %v1_2bec5, %bb ], [ 0, %dec_label_pc_2be64 ]
  ret i32 %v2_2bec5

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2becc() local_unnamed_addr {
dec_label_pc_2becc:
  %v0_2bed1 = load i32, i32* @eax, align 4
  ret i32 %v0_2bed1
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assignerC1ERS7_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2bed2:
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v1_2befb = call i32 @unknown_408fc(i32 %tmp104)
  store i32 %arg2, i32* %arg1, align 4
  %v2_2bf0e = add i32 %tmp104, 4
  %v3_2bf0e = inttoptr i32 %v2_2bf0e to i32*
  store i32 %arg3, i32* %v3_2bf0e, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2bf1d

bb:                                               ; preds = %dec_label_pc_2bed2
  %v1_2bf1b = call i32 @function_2bf22()
  br label %dec_label_pc_2bf1d

dec_label_pc_2bf1d:                               ; preds = %bb, %dec_label_pc_2bed2
  %v2_2bf1b = phi i32 [ %v1_2bf1b, %bb ], [ 0, %dec_label_pc_2bed2 ]
  ret i32 %v2_2bf1b

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 0 }
}

define i32 @function_2bf22() local_unnamed_addr {
dec_label_pc_2bf22:
  %v0_2bf23 = load i32, i32* @eax, align 4
  ret i32 %v0_2bf23
}

define i32 @_ZNK5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS7_8assignerEEENT_11result_typeERSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bf24:
  ret i32 %arg2
}

define i32 @function_2bf36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bf36:
  %v0_2bf38 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2bf3d = load i32, i32* @ebp, align 4
  %v2_2bf3d = add i32 %v1_2bf3d, -12
  %v3_2bf3d = inttoptr i32 %v2_2bf3d to i32*
  store i32 %v0_2bf38, i32* %v3_2bf3d, align 4
  %v0_2bf42 = load i32, i32* @ebp, align 4
  %v1_2bf42 = add i32 %v0_2bf42, -28
  %v2_2bf42 = inttoptr i32 %v1_2bf42 to i32*
  %v3_2bf42 = load i32, i32* %v2_2bf42, align 4
  %v1_2bf45 = add i32 %v3_2bf42, 4
  %v1_2bf4b = call i32 @unknown_5287e(i32 %v1_2bf45)
  store i32 %v1_2bf4b, i32* @ebx, align 4
  %v0_2bf52 = load i32, i32* @ebp, align 4
  %v1_2bf52 = add i32 %v0_2bf52, -28
  %v2_2bf52 = inttoptr i32 %v1_2bf52 to i32*
  %v3_2bf52 = load i32, i32* %v2_2bf52, align 4
  %v1_2bf58 = call i32 @unknown_4b982(i32 %v3_2bf52)
  %v0_2bf5f = load i32, i32* @ebp, align 4
  %v1_2bf5f = add i32 %v0_2bf5f, -28
  %v2_2bf5f = inttoptr i32 %v1_2bf5f to i32*
  %v3_2bf5f = load i32, i32* %v2_2bf5f, align 4
  %v1_2bf62 = inttoptr i32 %v3_2bf5f to i32*
  %v2_2bf62 = load i32, i32* %v1_2bf62, align 4
  %v0_2bf64 = load i32, i32* @ebx, align 4
  %v1_2bf68 = add i32 %v0_2bf5f, -32
  %v2_2bf68 = inttoptr i32 %v1_2bf68 to i32*
  %v3_2bf68 = load i32, i32* %v2_2bf68, align 4
  store i32 %v3_2bf68, i32* @ecx, align 4
  %v4_2bf76 = call i32 @unknown_5bff5(i32 %v2_2bf62, i32 %v1_2bf58, i32 %v3_2bf68, i32 %v0_2bf64)
  %v0_2bf7b = load i32, i32* @ebp, align 4
  %v1_2bf7b = add i32 %v0_2bf7b, -12
  %v2_2bf7b = inttoptr i32 %v1_2bf7b to i32*
  %v3_2bf7b = load i32, i32* %v2_2bf7b, align 4
  %v1_2bf7e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2bf7e = xor i32 %v1_2bf7e, %v3_2bf7b
  %v3_2bf7e = icmp eq i32 %v2_2bf7e, 0
  store i32 %v2_2bf7e, i32* @eax, align 4
  br i1 %v3_2bf7e, label %bb, label %dec_label_pc_2bf87

bb:                                               ; preds = %dec_label_pc_2bf36
  %v1_2bf85 = call i32 @function_2bf8c()
  br label %dec_label_pc_2bf87

dec_label_pc_2bf87:                               ; preds = %bb, %dec_label_pc_2bf36
  %v3_2bf85 = phi i32 [ %v1_2bf85, %bb ], [ %v2_2bf7e, %dec_label_pc_2bf36 ]
  ret i32 %v3_2bf85
}

define i32 @function_2bf8c() local_unnamed_addr {
dec_label_pc_2bf8c:
  %v0_2bf91 = load i32, i32* @eax, align 4
  ret i32 %v0_2bf91
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEC1ERS5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2bf92:
  ret i32 %arg1
}

define i32 @function_2bf9c() local_unnamed_addr {
dec_label_pc_2bf9c:
  %eax.global-to-local = alloca i32, align 4
  %v15_2bf9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_2bf9c
}

define i32 @function_2bfc7() local_unnamed_addr {
dec_label_pc_2bfc7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2bfc7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2bfc7 = add i32 %v0_2bfc7, -1
  store i32 %v1_2bfc7, i32* %ecx.global-to-local, align 4
  %v0_2bfc9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2bfc9
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E22internal_apply_visitorINS5_14invoke_visitorINS5_15direct_assignerIS3_EEEEEENT_11result_typeERSD_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2bfca:
  %tmp105 = ptrtoint i32* %arg1 to i32
  %v1_2bfeb = add i32 %tmp105, 4
  %v1_2bff1 = call i32 @unknown_4b94c(i32 %v1_2bfeb)
  %v1_2bffe = call i32 @unknown_4ba28(i32 %tmp105)
  %v2_2c008 = load i32, i32* %arg1, align 4
  %v4_2c01c = call i32 @unknown_5c10f(i32 %v2_2c008, i32 %v1_2bffe, i32 %arg2, i32 %v1_2bff1)
  store i32 %v4_2c01c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c02d

bb:                                               ; preds = %dec_label_pc_2bfca
  %v1_2c02b = call i32 @function_2c032()
  br label %dec_label_pc_2c02d

dec_label_pc_2c02d:                               ; preds = %bb, %dec_label_pc_2bfca
  %v2_2c02b = phi i32 [ %v1_2c02b, %bb ], [ %v4_2c01c, %dec_label_pc_2bfca ]
  ret i32 %v2_2c02b

; uselistorder directives
  uselistorder i32 %tmp105, { 1, 0 }
}

define i32 @function_2c032() local_unnamed_addr {
dec_label_pc_2c032:
  %v0_2c037 = load i32, i32* @eax, align 4
  ret i32 %v0_2c037
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E17convert_constructIKS3_EEvRT_iN4mpl_5bool_ILb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i8 %arg4) local_unnamed_addr {
dec_label_pc_2c038:
  %v1_2c065 = add i32 %arg1, 4
  %v1_2c06b = call i32 @unknown_4b9ba(i32 %v1_2c065)
  %v2_2c07a = call i32 @unknown_5c1f1(i32 %v1_2c06b, i32 %arg2)
  %v2_2c089 = call i32 @unknown_4ba5e(i32 %arg1, i32 %v2_2c07a)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c09a

bb:                                               ; preds = %dec_label_pc_2c038
  %v1_2c098 = call i32 @function_2c09f()
  br label %dec_label_pc_2c09a

dec_label_pc_2c09a:                               ; preds = %bb, %dec_label_pc_2c038
  %v2_2c098 = phi i32 [ %v1_2c098, %bb ], [ 0, %dec_label_pc_2c038 ]
  ret i32 %v2_2c098

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c09f() local_unnamed_addr {
dec_label_pc_2c09f:
  %v0_2c0a0 = load i32, i32* @eax, align 4
  ret i32 %v0_2c0a0
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_9destroyerEPvEENT_11result_typeEiiRSB_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c0a1:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2c0da = load i32, i32* %ecx.global-to-local, align 4
  %v0_2c0de = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2c0de, 16777216
  %v12_2c0fd = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2c0da, 16777216
  %v13_2c0fd = sdiv i32 %sext1, 16777216
  %v14_2c0fd = call i32 @unknown_5c2c5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_2c0fd, i32 %v13_2c0fd, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c10e

bb:                                               ; preds = %dec_label_pc_2c0a1
  %v1_2c10c = call i32 @function_2c113()
  br label %dec_label_pc_2c10e

dec_label_pc_2c10e:                               ; preds = %bb, %dec_label_pc_2c0a1
  %v2_2c10c = phi i32 [ %v1_2c10c, %bb ], [ 0, %dec_label_pc_2c0a1 ]
  ret i32 %v2_2c10c

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c113() local_unnamed_addr {
dec_label_pc_2c113:
  %v0_2c114 = load i32, i32* @eax, align 4
  ret i32 %v0_2c114
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_9copy_intoEPKvNS_7variantISC_SE_SG_NS1_5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_E18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c115:
  ret i32 %arg4
}

define i32 @function_2c134(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c134:
  %cf.global-to-local = alloca i1, align 1
  %stack_var_-2 = alloca i32, align 4
  %v0_2c139 = load i32, i32* @eax, align 4
  %v1_2c139 = add i32 %v0_2c139, -1240479931
  %v2_2c139 = inttoptr i32 %v1_2c139 to i8*
  %v3_2c139 = load i8, i8* %v2_2c139, align 1
  %v4_2c139 = load i32, i32* @ecx, align 4
  %v5_2c139 = trunc i32 %v4_2c139 to i8
  %v6_2c139 = load i1, i1* @cf, align 1
  %v7_2c139 = zext i1 %v6_2c139 to i8
  %v8_2c139 = sub i8 %v3_2c139, %v5_2c139
  %v9_2c139 = add i8 %v8_2c139, %v7_2c139
  %v19_2c139 = sub i8 %v8_2c139, %v7_2c139
  %v20_2c139 = icmp ult i8 %v3_2c139, %v19_2c139
  %v21_2c139 = icmp ne i8 %v5_2c139, -1
  %v22_2c139 = or i1 %v21_2c139, %v20_2c139
  %v23_2c139 = icmp ult i8 %v3_2c139, %v5_2c139
  %v24_2c139 = select i1 %v6_2c139, i1 %v22_2c139, i1 %v23_2c139
  store i1 %v24_2c139, i1* %cf.global-to-local, align 1
  store i8 %v9_2c139, i8* %v2_2c139, align 1
  %v0_2c140 = load i32, i32* @eax, align 4
  %v1_2c140 = trunc i32 %v0_2c140 to i8
  %v2_2c140 = load i1, i1* %cf.global-to-local, align 1
  %v3_2c140 = zext i1 %v2_2c140 to i32
  %v4_2c140 = add i32 %v0_2c140, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_88.2212 to i8) to i32))
  %v5_2c140 = add i32 %v4_2c140, %v3_2c140
  %v17_2c140 = icmp ult i8 %v1_2c140, -120
  %v18_2c140 = or i1 %v2_2c140, %v17_2c140
  store i1 %v18_2c140, i1* %cf.global-to-local, align 1
  %v31_2c140 = urem i32 %v5_2c140, 256
  %v33_2c140 = and i32 %v0_2c140, -256
  %v34_2c140 = or i32 %v31_2c140, %v33_2c140
  %v15_2c142 = ptrtoint i32* %stack_var_-2 to i32
  store i32 %v15_2c142, i32* @ebp, align 4
  ret i32 %v34_2c140

; uselistorder directives
  uselistorder i1 %v2_2c140, { 1, 0 }
  uselistorder i32 %v0_2c140, { 1, 0, 2 }
  uselistorder i8 %v5_2c139, { 1, 0, 2 }
}

define i32 @function_2c144() local_unnamed_addr {
dec_label_pc_2c144:
  %v0_2c144 = load i32, i32* @ebp, align 4
  %v1_2c144 = add i32 %v0_2c144, 32
  %v2_2c144 = inttoptr i32 %v1_2c144 to i32*
  %v3_2c144 = load i32, i32* %v2_2c144, align 4
  %v2_2c147 = add i32 %v0_2c144, -64
  %v3_2c147 = inttoptr i32 %v2_2c147 to i32*
  store i32 %v3_2c144, i32* %v3_2c147, align 4
  %v0_2c14a = load i32, i32* @ebp, align 4
  %v1_2c14a = add i32 %v0_2c14a, 36
  %v2_2c14a = inttoptr i32 %v1_2c14a to i32*
  %v3_2c14a = load i32, i32* %v2_2c14a, align 4
  %v2_2c14d = add i32 %v0_2c14a, -68
  %v3_2c14d = inttoptr i32 %v2_2c14d to i32*
  store i32 %v3_2c14a, i32* %v3_2c14d, align 4
  %v0_2c150 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2c156 = load i32, i32* @ebp, align 4
  %v2_2c156 = add i32 %v1_2c156, -28
  %v3_2c156 = inttoptr i32 %v2_2c156 to i32*
  store i32 %v0_2c150, i32* %v3_2c156, align 4
  %v0_2c15b = load i32, i32* @ebp, align 4
  %v1_2c15b = add i32 %v0_2c15b, -48
  %v2_2c15b = inttoptr i32 %v1_2c15b to i32*
  %v3_2c15b = load i32, i32* %v2_2c15b, align 4
  %tmp100 = icmp ult i32 %v3_2c15b, 20
  br i1 %tmp100, label %dec_label_pc_2c165, label %bb

bb:                                               ; preds = %dec_label_pc_2c144
  %v4_2c15f = call i32 @function_2c59e()
  %v0_2c165.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2c165

dec_label_pc_2c165:                               ; preds = %dec_label_pc_2c144, %bb
  %v0_2c165 = phi i32 [ %v0_2c15b, %dec_label_pc_2c144 ], [ %v0_2c165.pre, %bb ]
  %v1_2c165 = add i32 %v0_2c165, -48
  %v2_2c165 = inttoptr i32 %v1_2c165 to i32*
  %v3_2c165 = load i32, i32* %v2_2c165, align 4
  %v2_2c168 = mul i32 %v3_2c165, 4
  %v1_2c16b = add i32 %v2_2c168, ptrtoint (i32* @global_var_2c5f0.2288 to i32)
  %v1_2c170 = inttoptr i32 %v1_2c16b to i32*
  %v2_2c170 = load i32, i32* %v1_2c170, align 4
  ret i32 %v2_2c170

; uselistorder directives
  uselistorder label %dec_label_pc_2c165, { 1, 0 }
}

define i32 @function_2c178(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c178:
  %v2_2c178 = load i32, i32* @eax, align 4
  %v4_2c178 = mul i32 %v2_2c178, 2
  %v21_2c178 = inttoptr i32 %v2_2c178 to i32*
  store i32 %v4_2c178, i32* %v21_2c178, align 4
  %v2_2c17a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2c17a = load i32, i32* @eax, align 4
  %v4_2c17a = trunc i32 %v3_2c17a to i8
  %v5_2c17a = add i8 %v4_2c17a, %v2_2c17a
  %v21_2c17a = inttoptr i32 %v3_2c17a to i8*
  store i8 %v5_2c17a, i8* %v21_2c17a, align 1
  %v0_2c17c = load i32, i32* @ebp, align 4
  %v1_2c17c = add i32 %v0_2c17c, -83
  %v2_2c17c = inttoptr i32 %v1_2c17c to i8*
  %v3_2c17c = load i8, i8* %v2_2c17c, align 1
  %v1_2c18c = add i32 %v0_2c17c, -56
  %v2_2c18c = inttoptr i32 %v1_2c18c to i32*
  %v3_2c18c = load i32, i32* %v2_2c18c, align 4
  %v1_2c193 = add i32 %v0_2c17c, -52
  %v2_2c193 = inttoptr i32 %v1_2c193 to i32*
  %v3_2c193 = load i32, i32* %v2_2c193, align 4
  %v1_2c19a = add i32 %v0_2c17c, -44
  %v2_2c19a = inttoptr i32 %v1_2c19a to i32*
  %v3_2c19a = load i32, i32* %v2_2c19a, align 4
  %v5_2c1a0 = sext i8 %v3_2c17c to i32
  %v6_2c1a0 = call i32 @unknown_5c865(i32 %v3_2c19a, i32 %v3_2c193, i32 %v3_2c18c, i32 0, i32 %v5_2c1a0)
  %v0_2c1a5 = call i32 @function_2c5d6()
  ret i32 %v0_2c1a5

; uselistorder directives
  uselistorder i32 %v0_2c17c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_2c178, { 1, 0 }
}

define i32 @function_2c1da(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c1da:
  %eax.global-to-local = alloca i32, align 4
  %v3_2c1df = load i32, i32* @eax, align 4
  %v11_2c1e2 = and i32 %v3_2c1df, -236
  store i32 %v11_2c1e2, i32* %eax.global-to-local, align 4
  %v1_2c1e4 = inttoptr i32 %v11_2c1e2 to i32*
  %v2_2c1e4 = load i32, i32* %v1_2c1e4, align 4
  %v4_2c1e4 = add i32 %v2_2c1e4, %v11_2c1e2
  store i32 %v4_2c1e4, i32* %v1_2c1e4, align 4
  %v0_2c1e6 = load i32, i32* %eax.global-to-local, align 4
  %v1_2c1e6 = inttoptr i32 %v0_2c1e6 to i8*
  %v2_2c1e6 = load i8, i8* %v1_2c1e6, align 1
  %v4_2c1e6 = trunc i32 %v0_2c1e6 to i8
  %v5_2c1e6 = add i8 %v2_2c1e6, %v4_2c1e6
  store i8 %v5_2c1e6, i8* %v1_2c1e6, align 1
  %v0_2c1e8 = load i32, i32* @ebp, align 4
  %v1_2c1e8 = add i32 %v0_2c1e8, -81
  %v2_2c1e8 = inttoptr i32 %v1_2c1e8 to i8*
  %v3_2c1e8 = load i8, i8* %v2_2c1e8, align 1
  %v4_2c1e8 = zext i8 %v3_2c1e8 to i32
  store i32 %v4_2c1e8, i32* %eax.global-to-local, align 4
  %v1_2c1f8 = add i32 %v0_2c1e8, -56
  %v2_2c1f8 = inttoptr i32 %v1_2c1f8 to i32*
  %v3_2c1f8 = load i32, i32* %v2_2c1f8, align 4
  store i32 %v3_2c1f8, i32* %eax.global-to-local, align 4
  ret i32 %v3_2c1f8

; uselistorder directives
  uselistorder i32 %v11_2c1e2, { 0, 2, 1 }
}

define i32 @function_2c1fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c1fc:
  %v0_2c1ff = load i32, i32* @ebp, align 4
  %v1_2c1ff = add i32 %v0_2c1ff, -52
  %v2_2c1ff = inttoptr i32 %v1_2c1ff to i32*
  %v3_2c1ff = load i32, i32* %v2_2c1ff, align 4
  ret i32 %v3_2c1ff
}

define i32 @function_2c204(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c204:
  %v0_2c206 = load i32, i32* @ebp, align 4
  %v1_2c206 = add i32 %v0_2c206, -44
  %v2_2c206 = inttoptr i32 %v1_2c206 to i32*
  %v3_2c206 = load i32, i32* %v2_2c206, align 4
  %v1_2c20c = call i32 @unknown_5c93f(i32 %v3_2c206)
  %v0_2c211 = call i32 @function_2c5d6()
  ret i32 %v0_2c211
}

define i32 @function_2c216() local_unnamed_addr {
dec_label_pc_2c216:
  %v0_2c21e = load i32, i32* @ebp, align 4
  %v1_2c23c = add i32 %v0_2c21e, -44
  %v2_2c23c = inttoptr i32 %v1_2c23c to i32*
  %v3_2c23c = load i32, i32* %v2_2c23c, align 4
  %v1_2c242 = call i32 @unknown_5c9ac(i32 %v3_2c23c)
  %v0_2c247 = call i32 @function_2c5d6()
  ret i32 %v0_2c247
}

define i32 @function_2c24c() local_unnamed_addr {
dec_label_pc_2c24c:
  %v0_2c254 = load i32, i32* @ebp, align 4
  %v1_2c272 = add i32 %v0_2c254, -44
  %v2_2c272 = inttoptr i32 %v1_2c272 to i32*
  %v3_2c272 = load i32, i32* %v2_2c272, align 4
  %v1_2c278 = call i32 @unknown_5c9ac(i32 %v3_2c272)
  %v0_2c27d = call i32 @function_2c5d6()
  ret i32 %v0_2c27d
}

define i32 @function_2c290(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c290:
  %v0_2c29a = load i32, i32* @ebp, align 4
  %v1_2c2a8 = add i32 %v0_2c29a, -44
  %v2_2c2a8 = inttoptr i32 %v1_2c2a8 to i32*
  %v3_2c2a8 = load i32, i32* %v2_2c2a8, align 4
  %v1_2c2ae = call i32 @unknown_5c9ac(i32 %v3_2c2a8)
  %v0_2c2b3 = call i32 @function_2c5d6()
  ret i32 %v0_2c2b3
}

define i32 @function_2c2d2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c2d2:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_2c2d6 = load i32, i32* @ebx, align 4
  %v1_2c2d6 = add i32 %v0_2c2d6, 1149881413
  %v2_2c2d6 = inttoptr i32 %v1_2c2d6 to i8*
  %v3_2c2d6 = load i8, i8* %v2_2c2d6, align 1
  %v4_2c2d6 = load i32, i32* @ecx, align 4
  %v5_2c2d6 = trunc i32 %v4_2c2d6 to i8
  %v6_2c2d6 = or i8 %v5_2c2d6, %v3_2c2d6
  store i8 %v6_2c2d6, i8* %v2_2c2d6, align 1
  %v1_2c2e4 = call i32 @unknown_5c9ac(i32 %tmp)
  %v0_2c2e9 = call i32 @function_2c5d6()
  ret i32 %v0_2c2e9
}

define i32 @function_2c2ee() local_unnamed_addr {
dec_label_pc_2c2ee:
  %v0_2c2f6 = load i32, i32* @ebp, align 4
  %v1_2c314 = add i32 %v0_2c2f6, -44
  %v2_2c314 = inttoptr i32 %v1_2c314 to i32*
  %v3_2c314 = load i32, i32* %v2_2c314, align 4
  %v1_2c31a = call i32 @unknown_5c9ac(i32 %v3_2c314)
  %v0_2c31f = call i32 @function_2c5d6()
  ret i32 %v0_2c31f
}

define i32 @function_2c324(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c324:
  %v0_2c32c = load i32, i32* @ebp, align 4
  %v1_2c34a = add i32 %v0_2c32c, -44
  %v2_2c34a = inttoptr i32 %v1_2c34a to i32*
  %v3_2c34a = load i32, i32* %v2_2c34a, align 4
  %v1_2c350 = call i32 @unknown_5c9ac(i32 %v3_2c34a)
  ret i32 %v1_2c350
}

define i32 @function_2c356(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c356:
  %v0_2c356 = load i1, i1* @sf, align 1
  %v1_2c356 = load i1, i1* @of, align 1
  %v2_2c356 = icmp eq i1 %v0_2c356, %v1_2c356
  br i1 %v2_2c356, label %dec_label_pc_2c358, label %dec_label_pc_2c35a

dec_label_pc_2c358:                               ; preds = %dec_label_pc_2c356
  %v2_2c358 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2c358 = load i32, i32* @eax, align 4
  %v4_2c358 = trunc i32 %v3_2c358 to i8
  %v5_2c358 = add i8 %v4_2c358, %v2_2c358
  %v21_2c358 = inttoptr i32 %v3_2c358 to i8*
  store i8 %v5_2c358, i8* %v21_2c358, align 1
  br label %dec_label_pc_2c35a

dec_label_pc_2c35a:                               ; preds = %dec_label_pc_2c356, %dec_label_pc_2c358
  %v0_2c362 = load i32, i32* @ebp, align 4
  %v1_2c380 = add i32 %v0_2c362, -44
  %v2_2c380 = inttoptr i32 %v1_2c380 to i32*
  %v3_2c380 = load i32, i32* %v2_2c380, align 4
  %v1_2c386 = call i32 @unknown_5c9ac(i32 %v3_2c380)
  %v0_2c38b = call i32 @function_2c5d6()
  ret i32 %v0_2c38b

; uselistorder directives
  uselistorder label %dec_label_pc_2c35a, { 1, 0 }
}

define i32 @function_2c3a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c3a6:
  %v2_2c3a6 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2c3a6 = load i32, i32* @eax, align 4
  %v4_2c3a6 = trunc i32 %v3_2c3a6 to i8
  %v5_2c3a6 = add i8 %v4_2c3a6, %v2_2c3a6
  %v21_2c3a6 = inttoptr i32 %v3_2c3a6 to i8*
  store i8 %v5_2c3a6, i8* %v21_2c3a6, align 1
  %v0_2c3a8 = load i32, i32* @ebp, align 4
  %v1_2c3b6 = add i32 %v0_2c3a8, -44
  %v2_2c3b6 = inttoptr i32 %v1_2c3b6 to i32*
  %v3_2c3b6 = load i32, i32* %v2_2c3b6, align 4
  %v1_2c3bc = call i32 @unknown_5c9ac(i32 %v3_2c3b6)
  %v0_2c3c1 = call i32 @function_2c5d6()
  ret i32 %v0_2c3c1
}

define i32 @function_2c3de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c3de:
  %v0_2c3de = load i32, i32* @ebp, align 4
  %v1_2c3ec = add i32 %v0_2c3de, -44
  %v2_2c3ec = inttoptr i32 %v1_2c3ec to i32*
  %v3_2c3ec = load i32, i32* %v2_2c3ec, align 4
  %v1_2c3f2 = call i32 @unknown_5c9ac(i32 %v3_2c3ec)
  %v0_2c3f7 = call i32 @function_2c5d6()
  ret i32 %v0_2c3f7
}

define i32 @function_2c3fc() local_unnamed_addr {
dec_label_pc_2c3fc:
  %v0_2c404 = load i32, i32* @ebp, align 4
  %v1_2c422 = add i32 %v0_2c404, -44
  %v2_2c422 = inttoptr i32 %v1_2c422 to i32*
  %v3_2c422 = load i32, i32* %v2_2c422, align 4
  %v1_2c428 = call i32 @unknown_5c9ac(i32 %v3_2c422)
  %v0_2c42d = call i32 @function_2c5d6()
  ret i32 %v0_2c42d
}

define i32 @function_2c432(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c432:
  %v0_2c43a = load i32, i32* @ebp, align 4
  %v1_2c458 = add i32 %v0_2c43a, -44
  %v2_2c458 = inttoptr i32 %v1_2c458 to i32*
  %v3_2c458 = load i32, i32* %v2_2c458, align 4
  %v1_2c45e = call i32 @unknown_5c9ac(i32 %v3_2c458)
  %v0_2c463 = call i32 @function_2c5d6()
  ret i32 %v0_2c463
}

define i32 @function_2c482(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c482:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_2c486 = load i32, i32* @ebx, align 4
  %v1_2c486 = add i32 %v0_2c486, 1149881413
  %v2_2c486 = inttoptr i32 %v1_2c486 to i8*
  %v3_2c486 = load i8, i8* %v2_2c486, align 1
  %v4_2c486 = load i32, i32* @ecx, align 4
  %v5_2c486 = trunc i32 %v4_2c486 to i8
  %v6_2c486 = or i8 %v5_2c486, %v3_2c486
  store i8 %v6_2c486, i8* %v2_2c486, align 1
  %v1_2c494 = call i32 @unknown_5c9ac(i32 %tmp)
  ret i32 %v1_2c494
}

define i32 @function_2c49a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c49a:
  %v3_2c49a = load i32, i32* @eax, align 4
  %v4_2c49a = trunc i32 %v3_2c49a to i8
  %v5_2c49c = mul i8 %v4_2c49a, 2
  %v21_2c49c = inttoptr i32 %v3_2c49a to i8*
  store i8 %v5_2c49c, i8* %v21_2c49c, align 1
  %v0_2c4a6 = load i32, i32* @ebp, align 4
  %v1_2c4c4 = add i32 %v0_2c4a6, -44
  %v2_2c4c4 = inttoptr i32 %v1_2c4c4 to i32*
  %v3_2c4c4 = load i32, i32* %v2_2c4c4, align 4
  %v1_2c4ca = call i32 @unknown_5c9ac(i32 %v3_2c4c4)
  %v0_2c4cf = call i32 @function_2c5d6()
  ret i32 %v0_2c4cf
}

define i32 @function_2c4c6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c4c6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c4d4() local_unnamed_addr {
dec_label_pc_2c4d4:
  %v0_2c4dc = load i32, i32* @ebp, align 4
  %v1_2c4fa = add i32 %v0_2c4dc, -44
  %v2_2c4fa = inttoptr i32 %v1_2c4fa to i32*
  %v3_2c4fa = load i32, i32* %v2_2c4fa, align 4
  %v1_2c500 = call i32 @unknown_5c9ac(i32 %v3_2c4fa)
  %v0_2c505 = call i32 @function_2c5d6()
  ret i32 %v0_2c505
}

define i32 @function_2c50a() local_unnamed_addr {
dec_label_pc_2c50a:
  %v0_2c520 = load i32, i32* @ebp, align 4
  %v1_2c52e = add i32 %v0_2c520, -44
  %v2_2c52e = inttoptr i32 %v1_2c52e to i32*
  %v3_2c52e = load i32, i32* %v2_2c52e, align 4
  %v1_2c534 = call i32 @unknown_5c9ac(i32 %v3_2c52e)
  %v0_2c539 = call i32 @function_2c5d6()
  ret i32 %v0_2c539
}

define i32 @function_2c53e() local_unnamed_addr {
dec_label_pc_2c53e:
  %v0_2c554 = load i32, i32* @ebp, align 4
  %v1_2c562 = add i32 %v0_2c554, -44
  %v2_2c562 = inttoptr i32 %v1_2c562 to i32*
  %v3_2c562 = load i32, i32* %v2_2c562, align 4
  %v1_2c568 = call i32 @unknown_5c9ac(i32 %v3_2c562)
  %v0_2c56d = call i32 @function_2c5d6()
  ret i32 %v0_2c56d
}

define i32 @function_2c58a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c58a:
  %v0_2c58a = load i32, i32* @ebp, align 4
  %v1_2c591 = add i32 %v0_2c58a, -44
  %v2_2c591 = inttoptr i32 %v1_2c591 to i32*
  %v3_2c591 = load i32, i32* %v2_2c591, align 4
  %v1_2c597 = call i32 @unknown_5c9ac(i32 %v3_2c591)
  %v0_2c59c = call i32 @function_2c5d6()
  ret i32 %v0_2c59c

; uselistorder directives
  uselistorder i32 ()* @function_2c5d6, { 4, 16, 15, 14, 3, 9, 13, 7, 8, 0, 12, 5, 2, 11, 10, 1, 6 }
  uselistorder i32 (i32)* @unknown_5c9ac, { 3, 16, 15, 14, 2, 9, 8, 13, 6, 7, 0, 5, 12, 4, 1, 11, 10 }
}

define i32 @function_2c59e() local_unnamed_addr {
dec_label_pc_2c59e:
  %v0_2c5b6 = load i32, i32* @ebp, align 4
  %v1_2c5cb = add i32 %v0_2c5b6, -44
  %v2_2c5cb = inttoptr i32 %v1_2c5cb to i32*
  %v3_2c5cb = load i32, i32* %v2_2c5cb, align 4
  ret i32 %v3_2c5cb
}

define i32 @function_2c5d2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c5d2:
  %v0_2c5d2 = load i32, i32* @ebx, align 4
  %v1_2c5d2 = load i32, i32* @eax, align 4
  %v3_2c5d2 = add i32 %v1_2c5d2, %v0_2c5d2
  %v4_2c5d2 = inttoptr i32 %v3_2c5d2 to i8*
  %v5_2c5d2 = load i8, i8* %v4_2c5d2, align 1
  %v7_2c5d2 = trunc i32 %v1_2c5d2 to i8
  %v8_2c5d2 = xor i8 %v5_2c5d2, %v7_2c5d2
  store i8 %v8_2c5d2, i8* %v4_2c5d2, align 1
  %v19_2c5d2 = load i32, i32* @eax, align 4
  ret i32 %v19_2c5d2

; uselistorder directives
  uselistorder i32 %v1_2c5d2, { 1, 0 }
}

define i32 @function_2c5d6() local_unnamed_addr {
dec_label_pc_2c5d6:
  %v0_2c5d6 = load i32, i32* @ebp, align 4
  %v1_2c5d6 = add i32 %v0_2c5d6, -28
  %v2_2c5d6 = inttoptr i32 %v1_2c5d6 to i32*
  %v3_2c5d6 = load i32, i32* %v2_2c5d6, align 4
  %v1_2c5d9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2c5d9 = xor i32 %v1_2c5d9, %v3_2c5d6
  %v3_2c5d9 = icmp eq i32 %v2_2c5d9, 0
  store i32 %v2_2c5d9, i32* @eax, align 4
  br i1 %v3_2c5d9, label %bb, label %dec_label_pc_2c5e2

bb:                                               ; preds = %dec_label_pc_2c5d6
  %v1_2c5e0 = call i32 @function_2c5e7()
  br label %dec_label_pc_2c5e2

dec_label_pc_2c5e2:                               ; preds = %bb, %dec_label_pc_2c5d6
  %v2_2c5e0 = phi i32 [ %v1_2c5e0, %bb ], [ %v2_2c5d9, %dec_label_pc_2c5d6 ]
  ret i32 %v2_2c5e0
}

define i32 @function_2c5e7() local_unnamed_addr {
dec_label_pc_2c5e7:
  %v0_2c5ee = load i32, i32* @eax, align 4
  ret i32 %v0_2c5ee
}

define i32 @function_2c5f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c5f4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c63e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c63e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt12__miter_baseIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEENSt11_Miter_baseIT_E13iterator_typeESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c640:
  %v1_2c65d = call i32 @unknown_5cf98(i32 %arg1)
  store i32 %v1_2c65d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c66e

bb:                                               ; preds = %dec_label_pc_2c640
  %v1_2c66c = call i32 @function_2c673()
  br label %dec_label_pc_2c66e

dec_label_pc_2c66e:                               ; preds = %bb, %dec_label_pc_2c640
  %v2_2c66c = phi i32 [ %v1_2c66c, %bb ], [ %v1_2c65d, %dec_label_pc_2c640 ]
  ret i32 %v2_2c66c
}

define i32 @function_2c673() local_unnamed_addr {
dec_label_pc_2c673:
  %v0_2c674 = load i32, i32* @eax, align 4
  ret i32 %v0_2c674
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_ET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c675:
  %v1_2c6a0 = call i32 @unknown_5cffa(i32 %arg3)
  %v1_2c6ad = call i32 @unknown_5cffa(i32 %arg2)
  %v1_2c6ba = call i32 @unknown_5cffa(i32 %arg1)
  %v3_2c6ca = call i32 @unknown_5d02f(i32 %v1_2c6ba, i32 %v1_2c6ad, i32 %v1_2c6a0)
  store i32 %v3_2c6ca, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c6db

bb:                                               ; preds = %dec_label_pc_2c675
  %v1_2c6d9 = call i32 @function_2c6e0()
  br label %dec_label_pc_2c6db

dec_label_pc_2c6db:                               ; preds = %bb, %dec_label_pc_2c675
  %v2_2c6d9 = phi i32 [ %v1_2c6d9, %bb ], [ %v3_2c6ca, %dec_label_pc_2c675 ]
  ret i32 %v2_2c6d9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5cffa, { 2, 1, 0 }
}

define i32 @function_2c6e0() local_unnamed_addr {
dec_label_pc_2c6e0:
  %v0_2c6e6 = load i32, i32* @eax, align 4
  ret i32 %v0_2c6e6
}

define i32 @_ZNKSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2c6e8:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2c702 = add i32 %tmp100, 4
  %v2_2c702 = inttoptr i32 %v1_2c702 to i32*
  %v3_2c702 = load i32, i32* %v2_2c702, align 4
  %v2_2c70a = load i32, i32* %arg1, align 4
  %v2_2c70e = sub i32 %v3_2c702, %v2_2c70a
  %v2_2c712 = sdiv i32 %v2_2c70e, 8
  %v3_2c715 = mul i32 %v2_2c712, -1431655765
  store i32 %v3_2c715, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c727

bb:                                               ; preds = %dec_label_pc_2c6e8
  %v2_2c725 = call i32 @function_2c72c(i32 %tmp100)
  br label %dec_label_pc_2c727

dec_label_pc_2c727:                               ; preds = %bb, %dec_label_pc_2c6e8
  %v3_2c725 = phi i32 [ %v2_2c725, %bb ], [ %v3_2c715, %dec_label_pc_2c6e8 ]
  ret i32 %v3_2c725
}

define i32 @function_2c72c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c72c:
  %v0_2c72d = load i32, i32* @eax, align 4
  ret i32 %v0_2c72d
}

define i32 @_ZNKSt6vectorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c72e:
  %v1_2c74b = call i32 @unknown_5d13c(i32 %arg1)
  %v1_2c753 = call i32 @unknown_5d16a(i32 %v1_2c74b)
  store i32 %v1_2c753, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c764

bb:                                               ; preds = %dec_label_pc_2c72e
  %v1_2c762 = call i32 @function_2c769()
  br label %dec_label_pc_2c764

dec_label_pc_2c764:                               ; preds = %bb, %dec_label_pc_2c72e
  %v2_2c762 = phi i32 [ %v1_2c762, %bb ], [ %v1_2c753, %dec_label_pc_2c72e ]
  ret i32 %v2_2c762
}

define i32 @function_2c769() local_unnamed_addr {
dec_label_pc_2c769:
  %v0_2c76a = load i32, i32* @eax, align 4
  ret i32 %v0_2c76a
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c76c:
  %v1_2c795 = call i32 @unknown_5d1a8(i32 %arg1)
  %v10_2c79a = icmp ult i32 %v1_2c795, %arg2
  %v1_2c79d = zext i1 %v10_2c79a to i32
  %v3_2c79d = and i32 %v1_2c795, -256
  %v4_2c79d = or i32 %v1_2c79d, %v3_2c79d
  %v5_2c7a0 = icmp eq i1 %v10_2c79a, false
  br i1 %v5_2c7a0, label %bb, label %dec_label_pc_2c7a4

bb:                                               ; preds = %dec_label_pc_2c76c
  %v1_2c7a2 = call i32 @function_2c7a9()
  br label %dec_label_pc_2c7a4

dec_label_pc_2c7a4:                               ; preds = %bb, %dec_label_pc_2c76c
  %v2_2c7a2 = phi i32 [ %v1_2c7a2, %bb ], [ %v4_2c79d, %dec_label_pc_2c76c ]
  ret i32 %v2_2c7a2

; uselistorder directives
  uselistorder i1 %v10_2c79a, { 1, 0 }
}

define i32 @function_2c7a9() local_unnamed_addr {
dec_label_pc_2c7a9:
  %v0_2c7a9 = load i32, i32* @ebp, align 4
  %v1_2c7a9 = add i32 %v0_2c7a9, -32
  %v2_2c7a9 = inttoptr i32 %v1_2c7a9 to i32*
  %v3_2c7a9 = load i32, i32* %v2_2c7a9, align 4
  %v2_2c7b2 = mul i32 %v3_2c7a9, 24
  ret i32 %v2_2c7b2
}

define i32 @function_2c7b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c7b6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c7cd() local_unnamed_addr {
dec_label_pc_2c7cd:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c7cd = load i32, i32* %ecx.global-to-local, align 4
  %v1_2c7cd = add i32 %v0_2c7cd, -1
  store i32 %v1_2c7cd, i32* %ecx.global-to-local, align 4
  %v0_2c7cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2c7cf
}

define i32 @_ZSt22__uninitialized_copy_aIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_S8_ET0_T_SB_SA_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c7d0:
  %v7_2c80d = call i32 @unknown_5d23b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_2c80d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c81e

bb:                                               ; preds = %dec_label_pc_2c7d0
  %v1_2c81c = call i32 @function_2c823()
  br label %dec_label_pc_2c81e

dec_label_pc_2c81e:                               ; preds = %bb, %dec_label_pc_2c7d0
  %v2_2c81c = phi i32 [ %v1_2c81c, %bb ], [ %v7_2c80d, %dec_label_pc_2c7d0 ]
  ret i32 %v2_2c81c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c823() local_unnamed_addr {
dec_label_pc_2c823:
  %v0_2c824 = load i32, i32* @eax, align 4
  ret i32 %v0_2c824
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE10deallocateEPS9_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c826:
  ret i32 %arg3
}

define i32 @function_2c840(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c840:
  %eax.global-to-local = alloca i32, align 4
  %v0_2c840 = load i32, i32* @eax, align 4
  %v1_2c840 = trunc i32 %v0_2c840 to i8
  %v2_2c840 = load i1, i1* @cf, align 1
  %v3_2c840 = zext i1 %v2_2c840 to i8
  %v4_2c840 = add i8 %v3_2c840, %v1_2c840
  %v22_2c840 = zext i8 %v4_2c840 to i32
  %v24_2c840 = and i32 %v0_2c840, -256
  %v25_2c840 = or i32 %v22_2c840, %v24_2c840
  store i32 %v25_2c840, i32* %eax.global-to-local, align 4
  %v1_2c842 = inttoptr i32 %v25_2c840 to i8*
  %v2_2c842 = load i8, i8* %v1_2c842, align 1
  %v5_2c842 = add i8 %v2_2c842, %v4_2c840
  store i8 %v5_2c842, i8* %v1_2c842, align 1
  %v0_2c844 = load i32, i32* %eax.global-to-local, align 4
  %v1_2c844 = load i32, i32* @ebp, align 4
  %v2_2c844 = add i32 %v1_2c844, -12
  %v3_2c844 = inttoptr i32 %v2_2c844 to i32*
  store i32 %v0_2c844, i32* %v3_2c844, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2c849 = load i32, i32* @ebp, align 4
  %v1_2c849 = add i32 %v0_2c849, -32
  %v2_2c849 = inttoptr i32 %v1_2c849 to i32*
  %v3_2c849 = load i32, i32* %v2_2c849, align 4
  store i32 %v3_2c849, i32* %eax.global-to-local, align 4
  ret i32 %v3_2c849
}

define i32 @function_2c846(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c846:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2c864() local_unnamed_addr {
dec_label_pc_2c864:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2c864 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2c864 = add i32 %v0_2c864, -1
  store i32 %v1_2c864, i32* %ecx.global-to-local, align 4
  %v0_2c866 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2c866
}

define i32 @_ZNSaIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c868:
  %v1_2c885 = call i32 @unknown_5d322(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c896

bb:                                               ; preds = %dec_label_pc_2c868
  %v1_2c894 = call i32 @function_2c89b()
  br label %dec_label_pc_2c896

dec_label_pc_2c896:                               ; preds = %bb, %dec_label_pc_2c868
  %v2_2c894 = phi i32 [ %v1_2c894, %bb ], [ 0, %dec_label_pc_2c868 ]
  ret i32 %v2_2c894
}

define i32 @function_2c89b() local_unnamed_addr {
dec_label_pc_2c89b:
  %v0_2c89c = load i32, i32* @eax, align 4
  ret i32 %v0_2c89c
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c89e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c8c1

bb:                                               ; preds = %dec_label_pc_2c89e
  %v2_2c8bf = call i32 @function_2c8c6(i32 %arg1)
  br label %dec_label_pc_2c8c1

dec_label_pc_2c8c1:                               ; preds = %bb, %dec_label_pc_2c89e
  %v3_2c8bf = phi i32 [ %v2_2c8bf, %bb ], [ 0, %dec_label_pc_2c89e ]
  ret i32 %v3_2c8bf
}

define i32 @function_2c8c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c8c6:
  %v0_2c8c7 = load i32, i32* @eax, align 4
  ret i32 %v0_2c8c7
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS2_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EEEEvT_SC_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2c8c8:
  %v15_2c901105 = icmp eq i32 %arg1, %arg2
  %v1_2c904106 = icmp eq i1 %v15_2c901105, false
  %v5_2c907110 = icmp eq i1 %v1_2c904106, false
  %v1_2c909111 = icmp eq i1 %v5_2c907110, false
  br i1 %v1_2c909111, label %dec_label_pc_2c8e7, label %dec_label_pc_2c90b

dec_label_pc_2c8e7:                               ; preds = %dec_label_pc_2c8c8, %dec_label_pc_2c8e7
  %stack_var_-32.0112 = phi i32 [ %v4_2c8fa, %dec_label_pc_2c8e7 ], [ %arg1, %dec_label_pc_2c8c8 ]
  %v1_2c8ed = call i32 @unknown_5d3ac(i32 %stack_var_-32.0112)
  %v1_2c8f5 = call i32 @unknown_5d3d9(i32 %v1_2c8ed)
  %v4_2c8fa = add i32 %stack_var_-32.0112, 24
  %v15_2c901 = icmp eq i32 %v4_2c8fa, %arg2
  %v1_2c904 = icmp eq i1 %v15_2c901, false
  %v5_2c907 = icmp eq i1 %v1_2c904, false
  %v1_2c909 = icmp eq i1 %v5_2c907, false
  br i1 %v1_2c909, label %dec_label_pc_2c8e7, label %dec_label_pc_2c90b

dec_label_pc_2c90b:                               ; preds = %dec_label_pc_2c8e7, %dec_label_pc_2c8c8
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c917

bb:                                               ; preds = %dec_label_pc_2c90b
  %v1_2c915 = call i32 @function_2c91c()
  br label %dec_label_pc_2c917

dec_label_pc_2c917:                               ; preds = %bb, %dec_label_pc_2c90b
  %v2_2c915 = phi i32 [ %v1_2c915, %bb ], [ 0, %dec_label_pc_2c90b ]
  ret i32 %v2_2c915

; uselistorder directives
  uselistorder i32 %v4_2c8fa, { 1, 0 }
  uselistorder i32 %stack_var_-32.0112, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2c8e7, { 1, 0 }
}

define i32 @function_2c91c() local_unnamed_addr {
dec_label_pc_2c91c:
  %v0_2c91d = load i32, i32* @eax, align 4
  ret i32 %v0_2c91d
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14invoke_visitorI20CAffectedKeysVisitorEEPKvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2c91e:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2c957 = load i32, i32* %ecx.global-to-local, align 4
  %v0_2c95b = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2c95b, 16777216
  %v12_2c97a = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2c957, 16777216
  %v13_2c97a = sdiv i32 %sext1, 16777216
  %v14_2c97a = call i32 @unknown_5d464(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_2c97a, i32 %v13_2c97a, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c98b

bb:                                               ; preds = %dec_label_pc_2c91e
  %v1_2c989 = call i32 @function_2c990()
  br label %dec_label_pc_2c98b

dec_label_pc_2c98b:                               ; preds = %bb, %dec_label_pc_2c91e
  %v2_2c989 = phi i32 [ %v1_2c989, %bb ], [ 0, %dec_label_pc_2c91e ]
  ret i32 %v2_2c989

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2c990() local_unnamed_addr {
dec_label_pc_2c990:
  %v0_2c991 = load i32, i32* @eax, align 4
  ret i32 %v0_2c991
}

define i32 @_ZSt12__miter_baseIP6CKeyIDENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2c992:
  %v1_2c9af = call i32 @unknown_5da02(i32 %arg1)
  store i32 %v1_2c9af, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2c9c0

bb:                                               ; preds = %dec_label_pc_2c992
  %v1_2c9be = call i32 @function_2c9c5()
  br label %dec_label_pc_2c9c0

dec_label_pc_2c9c0:                               ; preds = %bb, %dec_label_pc_2c992
  %v2_2c9be = phi i32 [ %v1_2c9be, %bb ], [ %v1_2c9af, %dec_label_pc_2c992 ]
  ret i32 %v2_2c9be
}

define i32 @function_2c9c5() local_unnamed_addr {
dec_label_pc_2c9c5:
  %v0_2c9c6 = load i32, i32* @eax, align 4
  ret i32 %v0_2c9c6
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP6CKeyIDS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2c9c7:
  %v1_2c9f2 = call i32 @unknown_5da64(i32 %arg3)
  %v1_2c9ff = call i32 @unknown_5da64(i32 %arg2)
  %v1_2ca0c = call i32 @unknown_5da64(i32 %arg1)
  %v3_2ca1c = call i32 @unknown_5da99(i32 %v1_2ca0c, i32 %v1_2c9ff, i32 %v1_2c9f2)
  ret i32 %v3_2ca1c

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5da64, { 2, 1, 0 }
}

define i32 @function_2ca24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ca24:
  %v0_2ca24 = load i32, i32* @edx, align 4
  %v1_2ca24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ca24 = icmp eq i32 %v1_2ca24, %v0_2ca24
  br i1 %v3_2ca24, label %bb, label %dec_label_pc_2ca24.dec_label_pc_2ca2d_crit_edge

dec_label_pc_2ca24.dec_label_pc_2ca2d_crit_edge:  ; preds = %dec_label_pc_2ca24
  %v2_2ca2b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2ca2d

bb:                                               ; preds = %dec_label_pc_2ca24
  %v1_2ca2b = call i32 @function_2ca32()
  br label %dec_label_pc_2ca2d

dec_label_pc_2ca2d:                               ; preds = %dec_label_pc_2ca24.dec_label_pc_2ca2d_crit_edge, %bb
  %v2_2ca2b = phi i32 [ %v2_2ca2b.pre, %dec_label_pc_2ca24.dec_label_pc_2ca2d_crit_edge ], [ %v1_2ca2b, %bb ]
  ret i32 %v2_2ca2b

; uselistorder directives
  uselistorder label %dec_label_pc_2ca2d, { 1, 0 }
}

define i32 @function_2ca32() local_unnamed_addr {
dec_label_pc_2ca32:
  %v0_2ca38 = load i32, i32* @eax, align 4
  ret i32 %v0_2ca38
}

define i32 @_ZNKSt6vectorI6CKeyIDSaIS0_EE4sizeEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2ca3a:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v1_2ca54 = add i32 %tmp100, 4
  %v2_2ca54 = inttoptr i32 %v1_2ca54 to i32*
  %v3_2ca54 = load i32, i32* %v2_2ca54, align 4
  %v2_2ca5c = load i32, i32* %arg1, align 4
  %v2_2ca60 = sub i32 %v3_2ca54, %v2_2ca5c
  %v2_2ca64 = sdiv i32 %v2_2ca60, 4
  %v3_2ca67 = mul i32 %v2_2ca64, -858993459
  store i32 %v3_2ca67, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ca79

bb:                                               ; preds = %dec_label_pc_2ca3a
  %v2_2ca77 = call i32 @function_2ca7e(i32 %tmp100)
  br label %dec_label_pc_2ca79

dec_label_pc_2ca79:                               ; preds = %bb, %dec_label_pc_2ca3a
  %v3_2ca77 = phi i32 [ %v2_2ca77, %bb ], [ %v3_2ca67, %dec_label_pc_2ca3a ]
  ret i32 %v3_2ca77
}

define i32 @function_2ca7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca7e:
  %v0_2ca7f = load i32, i32* @eax, align 4
  ret i32 %v0_2ca7f
}

define i32 @_ZNKSt6vectorI6CKeyIDSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ca80:
  %v1_2ca9d = call i32 @unknown_5dba6(i32 %arg1)
  %v1_2caa5 = call i32 @unknown_5dbd4(i32 %v1_2ca9d)
  store i32 %v1_2caa5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cab6

bb:                                               ; preds = %dec_label_pc_2ca80
  %v1_2cab4 = call i32 @function_2cabb()
  br label %dec_label_pc_2cab6

dec_label_pc_2cab6:                               ; preds = %bb, %dec_label_pc_2ca80
  %v2_2cab4 = phi i32 [ %v1_2cab4, %bb ], [ %v1_2caa5, %dec_label_pc_2ca80 ]
  ret i32 %v2_2cab4
}

define i32 @function_2cabb() local_unnamed_addr {
dec_label_pc_2cabb:
  %v0_2cabc = load i32, i32* @eax, align 4
  ret i32 %v0_2cabc
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CKeyIDE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cabe:
  %v1_2cae7 = call i32 @unknown_5dc12(i32 %arg1)
  %v10_2caec = icmp ult i32 %v1_2cae7, %arg2
  %v1_2caef = zext i1 %v10_2caec to i32
  %v3_2caef = and i32 %v1_2cae7, -256
  %v4_2caef = or i32 %v1_2caef, %v3_2caef
  %v5_2caf2 = icmp eq i1 %v10_2caec, false
  br i1 %v5_2caf2, label %bb, label %dec_label_pc_2caf6

bb:                                               ; preds = %dec_label_pc_2cabe
  %v1_2caf4 = call i32 @function_2cafb()
  br label %dec_label_pc_2caf6

dec_label_pc_2caf6:                               ; preds = %bb, %dec_label_pc_2cabe
  %v2_2caf4 = phi i32 [ %v1_2caf4, %bb ], [ %v4_2caef, %dec_label_pc_2cabe ]
  ret i32 %v2_2caf4

; uselistorder directives
  uselistorder i1 %v10_2caec, { 1, 0 }
}

define i32 @function_2cafb() local_unnamed_addr {
dec_label_pc_2cafb:
  %v0_2cafb = load i32, i32* @ebp, align 4
  %v1_2cafb = add i32 %v0_2cafb, -32
  %v2_2cafb = inttoptr i32 %v1_2cafb to i32*
  %v3_2cafb = load i32, i32* %v2_2cafb, align 4
  %v2_2cb05 = mul i32 %v3_2cafb, 20
  ret i32 %v2_2cb05
}

define i32 @function_2cb20() local_unnamed_addr {
dec_label_pc_2cb20:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2cb20 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2cb20 = add i32 %v0_2cb20, -1
  store i32 %v1_2cb20, i32* %ecx.global-to-local, align 4
  %v0_2cb22 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2cb22
}

define i32 @_ZSt22__uninitialized_copy_aIP6CKeyIDS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cb23:
  ret i32 %arg3
}

define i32 @function_2cb3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb3a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cb43 = load i32, i32* @eax, align 4
  %v1_2cb43 = trunc i32 %v0_2cb43 to i8
  %v2_2cb43 = load i1, i1* @cf, align 1
  %v3_2cb43 = zext i1 %v2_2cb43 to i8
  %v4_2cb43 = add i8 %v3_2cb43, %v1_2cb43
  %v22_2cb43 = zext i8 %v4_2cb43 to i32
  %v24_2cb43 = and i32 %v0_2cb43, -256
  %v25_2cb43 = or i32 %v22_2cb43, %v24_2cb43
  store i32 %v25_2cb43, i32* %eax.global-to-local, align 4
  %v1_2cb45 = inttoptr i32 %v25_2cb43 to i8*
  %v2_2cb45 = load i8, i8* %v1_2cb45, align 1
  %v5_2cb45 = add i8 %v2_2cb45, %v4_2cb43
  store i8 %v5_2cb45, i8* %v1_2cb45, align 1
  %v0_2cb47 = load i32, i32* %eax.global-to-local, align 4
  %v1_2cb47 = load i32, i32* @ebp, align 4
  %v2_2cb47 = add i32 %v1_2cb47, -12
  %v3_2cb47 = inttoptr i32 %v2_2cb47 to i32*
  store i32 %v0_2cb47, i32* %v3_2cb47, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2cb4c = load i32, i32* @ebp, align 4
  %v1_2cb4c = add i32 %v0_2cb4c, -36
  %v2_2cb4c = inttoptr i32 %v1_2cb4c to i32*
  %v3_2cb4c = load i32, i32* %v2_2cb4c, align 4
  store i32 %v3_2cb4c, i32* %eax.global-to-local, align 4
  %v1_2cb53 = add i32 %v0_2cb4c, -32
  %v2_2cb53 = inttoptr i32 %v1_2cb53 to i32*
  %v3_2cb53 = load i32, i32* %v2_2cb53, align 4
  store i32 %v3_2cb53, i32* %eax.global-to-local, align 4
  %v1_2cb5a = add i32 %v0_2cb4c, -28
  %v2_2cb5a = inttoptr i32 %v1_2cb5a to i32*
  %v3_2cb5a = load i32, i32* %v2_2cb5a, align 4
  store i32 %v3_2cb5a, i32* %eax.global-to-local, align 4
  %v3_2cb60 = call i32 @unknown_5dca6(i32 %v3_2cb5a, i32 %v3_2cb53, i32 %v3_2cb4c)
  store i32 %v3_2cb60, i32* @eax, align 4
  %v0_2cb65 = load i32, i32* @ebp, align 4
  %v1_2cb65 = add i32 %v0_2cb65, -12
  %v2_2cb65 = inttoptr i32 %v1_2cb65 to i32*
  %v3_2cb65 = load i32, i32* %v2_2cb65, align 4
  %v1_2cb68 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2cb68 = icmp eq i32 %v1_2cb68, %v3_2cb65
  br i1 %v3_2cb68, label %bb, label %dec_label_pc_2cb71

bb:                                               ; preds = %dec_label_pc_2cb3a
  %v1_2cb6f = call i32 @function_2cb76()
  store i32 %v1_2cb6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2cb71

dec_label_pc_2cb71:                               ; preds = %bb, %dec_label_pc_2cb3a
  %v2_2cb6f = phi i32 [ %v1_2cb6f, %bb ], [ %v3_2cb60, %dec_label_pc_2cb3a ]
  ret i32 %v2_2cb6f
}

define i32 @function_2cb76() local_unnamed_addr {
dec_label_pc_2cb76:
  %v0_2cb77 = load i32, i32* @eax, align 4
  ret i32 %v0_2cb77
}

define i32 @_ZSt8_DestroyIP6CKeyIDEvT_S2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cb78:
  %v2_2cba2 = call i32 @unknown_5dd4a(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cbb3

bb:                                               ; preds = %dec_label_pc_2cb78
  %v1_2cbb1 = call i32 @function_2cbb8()
  br label %dec_label_pc_2cbb3

dec_label_pc_2cbb3:                               ; preds = %bb, %dec_label_pc_2cb78
  %v2_2cbb1 = phi i32 [ %v1_2cbb1, %bb ], [ 0, %dec_label_pc_2cb78 ]
  ret i32 %v2_2cbb1
}

define i32 @function_2cbb8() local_unnamed_addr {
dec_label_pc_2cbb8:
  %v0_2cbb9 = load i32, i32* @eax, align 4
  ret i32 %v0_2cbb9
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CKeyIDE10deallocateEPS1_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cbba:
  ret i32 %arg2
}

define i32 @function_2cbf8() local_unnamed_addr {
dec_label_pc_2cbf8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2cbf8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2cbf8 = add i32 %v0_2cbf8, -1
  store i32 %v1_2cbf8, i32* %ecx.global-to-local, align 4
  %v0_2cbfa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2cbfa
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEPS4_ET0_T_SC_SB_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2cbfb:
  %v3_2cc32 = call i32 @unknown_5ddfd(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2cc32, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cc43

bb:                                               ; preds = %dec_label_pc_2cbfb
  %v1_2cc41 = call i32 @function_2cc48()
  br label %dec_label_pc_2cc43

dec_label_pc_2cc43:                               ; preds = %bb, %dec_label_pc_2cbfb
  %v2_2cc41 = phi i32 [ %v1_2cc41, %bb ], [ %v3_2cc32, %dec_label_pc_2cbfb ]
  ret i32 %v2_2cc41
}

define i32 @function_2cc48() local_unnamed_addr {
dec_label_pc_2cc48:
  %v0_2cc49 = load i32, i32* @eax, align 4
  ret i32 %v0_2cc49
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEELb0EE7_S_baseES9_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cc4a:
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  store i32 %tmp102, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cc7e

bb:                                               ; preds = %dec_label_pc_2cc4a
  %v3_2cc7c = call i32 @function_2cc83(i32 %arg2, i32 %tmp102)
  br label %dec_label_pc_2cc7e

dec_label_pc_2cc7e:                               ; preds = %bb, %dec_label_pc_2cc4a
  %v4_2cc7c = phi i32 [ %v3_2cc7c, %bb ], [ %tmp102, %dec_label_pc_2cc4a ]
  ret i32 %v4_2cc7c
}

define i32 @function_2cc83(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cc83:
  %v0_2cc84 = load i32, i32* @eax, align 4
  ret i32 %v0_2cc84
}

define i32 @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cc87:
  %v1_2cca4 = call i32 @unknown_5df4a(i32 %arg1)
  store i32 %v1_2cca4, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ccb5

bb:                                               ; preds = %dec_label_pc_2cc87
  %v1_2ccb3 = call i32 @function_2ccba()
  br label %dec_label_pc_2ccb5

dec_label_pc_2ccb5:                               ; preds = %bb, %dec_label_pc_2cc87
  %v2_2ccb3 = phi i32 [ %v1_2ccb3, %bb ], [ %v1_2cca4, %dec_label_pc_2cc87 ]
  ret i32 %v2_2ccb3
}

define i32 @function_2ccba() local_unnamed_addr {
dec_label_pc_2ccba:
  %v0_2ccbb = load i32, i32* @eax, align 4
  ret i32 %v0_2ccbb
}

define i32 @_ZSt13__copy_move_aILb0EPKSt6vectorIhSaIhEEPS2_ET1_T0_S7_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ccbc:
  %v3_2ccf7 = call i32 @unknown_5dfb6(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2ccf7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cd08

bb:                                               ; preds = %dec_label_pc_2ccbc
  %v1_2cd06 = call i32 @function_2cd0d()
  br label %dec_label_pc_2cd08

dec_label_pc_2cd08:                               ; preds = %bb, %dec_label_pc_2ccbc
  %v2_2cd06 = phi i32 [ %v1_2cd06, %bb ], [ %v3_2ccf7, %dec_label_pc_2ccbc ]
  ret i32 %v2_2cd06
}

define i32 @function_2cd0d() local_unnamed_addr {
dec_label_pc_2cd0d:
  %v0_2cd0e = load i32, i32* @eax, align 4
  ret i32 %v0_2cd0e
}

define i32 @_ZNSt12_Destroy_auxILb0EE9__destroyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEEEvT_SB_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cd0f:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2cd57 = ptrtoint i32* %stack_var_-36 to i32
  %v2_2cd5b = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_2cd54

dec_label_pc_2cd2e:                               ; preds = %dec_label_pc_2cd54
  %v1_2cd34 = call i32 @unknown_4c15b(i32 %v2_2cd5b)
  %v1_2cd3c = call i32 @unknown_59c70(i32 %v1_2cd34)
  %v1_2cd44 = call i32 @unknown_5b3c5(i32 %v1_2cd3c)
  %v1_2cd4f = call i32 @unknown_4d9d7(i32 %v2_2cd5b)
  br label %dec_label_pc_2cd54

dec_label_pc_2cd54:                               ; preds = %dec_label_pc_2cd2e, %dec_label_pc_2cd0f
  %v2_2cd61 = call i32 @unknown_4acd9(i32 %v2_2cd5b, i32 %v4_2cd57)
  %v4_2cd66 = trunc i32 %v2_2cd61 to i8
  %v5_2cd66 = icmp eq i8 %v4_2cd66, 0
  %v1_2cd68 = icmp eq i1 %v5_2cd66, false
  br i1 %v1_2cd68, label %dec_label_pc_2cd2e, label %dec_label_pc_2cd6a

dec_label_pc_2cd6a:                               ; preds = %dec_label_pc_2cd54
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cd76

bb:                                               ; preds = %dec_label_pc_2cd6a
  %v1_2cd74 = call i32 @function_2cd7b()
  br label %dec_label_pc_2cd76

dec_label_pc_2cd76:                               ; preds = %bb, %dec_label_pc_2cd6a
  %v2_2cd74 = phi i32 [ %v1_2cd74, %bb ], [ 0, %dec_label_pc_2cd6a ]
  ret i32 %v2_2cd74

; uselistorder directives
  uselistorder i32 %v2_2cd5b, { 2, 0, 1 }
}

define i32 @function_2cd7b() local_unnamed_addr {
dec_label_pc_2cd7b:
  %v0_2cd7c = load i32, i32* @eax, align 4
  ret i32 %v0_2cd7c
}

define i32 @_ZNSt10_Iter_baseIPSt6vectorIhSaIhEELb0EE7_S_baseES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cd7d:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cda3

bb:                                               ; preds = %dec_label_pc_2cd7d
  %v2_2cda1 = call i32 @function_2cda8(i32 %arg1)
  br label %dec_label_pc_2cda3

dec_label_pc_2cda3:                               ; preds = %bb, %dec_label_pc_2cd7d
  %v3_2cda1 = phi i32 [ %v2_2cda1, %bb ], [ %arg1, %dec_label_pc_2cd7d ]
  ret i32 %v3_2cda1
}

define i32 @function_2cda8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cda8:
  %v0_2cda9 = load i32, i32* @eax, align 4
  ret i32 %v0_2cda9
}

define i32 @_ZSt12__niter_baseIPSt6vectorIhSaIhEEENSt11_Niter_baseIT_E13iterator_typeES5_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cdaa:
  %v1_2cdc7 = call i32 @unknown_59b27(i32 %arg1)
  store i32 %v1_2cdc7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cdd8

bb:                                               ; preds = %dec_label_pc_2cdaa
  %v1_2cdd6 = call i32 @function_2cddd()
  br label %dec_label_pc_2cdd8

dec_label_pc_2cdd8:                               ; preds = %bb, %dec_label_pc_2cdaa
  %v2_2cdd6 = phi i32 [ %v1_2cdd6, %bb ], [ %v1_2cdc7, %dec_label_pc_2cdaa ]
  ret i32 %v2_2cdd6
}

define i32 @function_2cddd() local_unnamed_addr {
dec_label_pc_2cddd:
  %v0_2cdde = load i32, i32* @eax, align 4
  ret i32 %v0_2cdde
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt6vectorIhSaIhEES5_EET0_T_S7_S6_() local_unnamed_addr {
dec_label_pc_2cddf:
  %eax.global-to-local = alloca i32, align 4
  %v17_2cde3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_2cde3
}

define i32 @function_2cde6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cde6:
  %eax.global-to-local = alloca i32, align 4
  %v0_2cde6 = load i32, i32* @ebp, align 4
  %v1_2cde6 = add i32 %v0_2cde6, 8
  %v2_2cde6 = inttoptr i32 %v1_2cde6 to i32*
  %v3_2cde6 = load i32, i32* %v2_2cde6, align 4
  store i32 %v3_2cde6, i32* %eax.global-to-local, align 4
  %v2_2cde9 = add i32 %v0_2cde6, -28
  %v3_2cde9 = inttoptr i32 %v2_2cde9 to i32*
  store i32 %v3_2cde6, i32* %v3_2cde9, align 4
  %v0_2cdec = load i32, i32* @ebp, align 4
  %v1_2cdec = add i32 %v0_2cdec, 12
  %v2_2cdec = inttoptr i32 %v1_2cdec to i32*
  %v3_2cdec = load i32, i32* %v2_2cdec, align 4
  store i32 %v3_2cdec, i32* %eax.global-to-local, align 4
  %v2_2cdef = add i32 %v0_2cdec, -32
  %v3_2cdef = inttoptr i32 %v2_2cdef to i32*
  store i32 %v3_2cdec, i32* %v3_2cdef, align 4
  %v0_2cdf2 = load i32, i32* @ebp, align 4
  %v1_2cdf2 = add i32 %v0_2cdf2, 16
  %v2_2cdf2 = inttoptr i32 %v1_2cdf2 to i32*
  %v3_2cdf2 = load i32, i32* %v2_2cdf2, align 4
  store i32 %v3_2cdf2, i32* %eax.global-to-local, align 4
  %v2_2cdf5 = add i32 %v0_2cdf2, -36
  %v3_2cdf5 = inttoptr i32 %v2_2cdf5 to i32*
  store i32 %v3_2cdf2, i32* %v3_2cdf5, align 4
  %v0_2cdf8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2cdfe = load i32, i32* @ebp, align 4
  %v2_2cdfe = add i32 %v1_2cdfe, -12
  %v3_2cdfe = inttoptr i32 %v2_2cdfe to i32*
  store i32 %v0_2cdf8, i32* %v3_2cdfe, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_2ce03 = load i32, i32* @ebp, align 4
  %v1_2ce03 = add i32 %v0_2ce03, -36
  %v2_2ce03 = inttoptr i32 %v1_2ce03 to i32*
  %v3_2ce03 = load i32, i32* %v2_2ce03, align 4
  store i32 %v3_2ce03, i32* %eax.global-to-local, align 4
  %v2_2ce06 = add i32 %v0_2ce03, -16
  %v3_2ce06 = inttoptr i32 %v2_2ce06 to i32*
  store i32 %v3_2ce03, i32* %v3_2ce06, align 4
  %v0_2ce09 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ce09
}

define i32 @function_2ce1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce1c:
  %v0_2ce20 = call i32 @unknown_5e155()
  %v0_2ce25 = load i32, i32* @ebp, align 4
  %v1_2ce25 = add i32 %v0_2ce25, -28
  %v2_2ce25 = inttoptr i32 %v1_2ce25 to i32*
  %v3_2ce25 = load i32, i32* %v2_2ce25, align 4
  %v4_2ce25 = add i32 %v3_2ce25, 12
  store i32 %v4_2ce25, i32* %v2_2ce25, align 4
  %v0_2ce29 = load i32, i32* @ebp, align 4
  %v1_2ce29 = add i32 %v0_2ce29, -16
  %v2_2ce29 = inttoptr i32 %v1_2ce29 to i32*
  %v3_2ce29 = load i32, i32* %v2_2ce29, align 4
  %v4_2ce29 = add i32 %v3_2ce29, 12
  store i32 %v4_2ce29, i32* %v2_2ce29, align 4
  %v0_2ce2d = load i32, i32* @ebp, align 4
  %v1_2ce3a = add i32 %v0_2ce2d, -16
  %v2_2ce3a = inttoptr i32 %v1_2ce3a to i32*
  %v3_2ce3a = load i32, i32* %v2_2ce3a, align 4
  store i32 %v3_2ce3a, i32* @eax, align 4
  %v1_2ce3d = add i32 %v0_2ce2d, -12
  %v2_2ce3d = inttoptr i32 %v1_2ce3d to i32*
  %v3_2ce3d = load i32, i32* %v2_2ce3d, align 4
  %v1_2ce40 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ce40 = icmp eq i32 %v1_2ce40, %v3_2ce3d
  br i1 %v3_2ce40, label %bb, label %dec_label_pc_2ce49

bb:                                               ; preds = %dec_label_pc_2ce1c
  %v1_2ce47 = call i32 @function_2ce80()
  store i32 %v1_2ce47, i32* @eax, align 4
  br label %dec_label_pc_2ce49

dec_label_pc_2ce49:                               ; preds = %bb, %dec_label_pc_2ce1c
  %v0_2ce49 = call i32 @function_2ce7b()
  ret i32 %v0_2ce49

; uselistorder directives
  uselistorder i32 %v0_2ce2d, { 1, 0 }
}

define i32 @function_2ce4c() local_unnamed_addr {
dec_label_pc_2ce4c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2ce4c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ce4c
}

define i32 @function_2ce7b() local_unnamed_addr {
dec_label_pc_2ce7b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2ce80() local_unnamed_addr {
dec_label_pc_2ce80:
  %v0_2ce85 = load i32, i32* @eax, align 4
  ret i32 %v0_2ce85
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt6vectorIhSaIhEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ce86:
  %v1_2cea3 = call i32 @unknown_5e278(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ceb4

bb:                                               ; preds = %dec_label_pc_2ce86
  %v1_2ceb2 = call i32 @function_2ceb9()
  br label %dec_label_pc_2ceb4

dec_label_pc_2ceb4:                               ; preds = %bb, %dec_label_pc_2ce86
  %v2_2ceb2 = phi i32 [ %v1_2ceb2, %bb ], [ 0, %dec_label_pc_2ce86 ]
  ret i32 %v2_2ceb2
}

define i32 @function_2ceb9() local_unnamed_addr {
dec_label_pc_2ceb9:
  %v0_2ceba = load i32, i32* @eax, align 4
  ret i32 %v0_2ceba
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cebc:
  %v1_2ced6 = add i32 %arg1, 4
  %v2_2ced6 = inttoptr i32 %v1_2ced6 to i32*
  store i32 0, i32* %v2_2ced6, align 4
  %v1_2cee0 = add i32 %arg1, 8
  %v2_2cee0 = inttoptr i32 %v1_2cee0 to i32*
  store i32 0, i32* %v2_2cee0, align 4
  %v2_2cef0 = add i32 %arg1, 12
  %v3_2cef0 = inttoptr i32 %v2_2cef0 to i32*
  store i32 %v1_2ced6, i32* %v3_2cef0, align 4
  %v2_2cefc = add i32 %arg1, 16
  %v3_2cefc = inttoptr i32 %v2_2cefc to i32*
  store i32 %v1_2ced6, i32* %v3_2cefc, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cf0b

bb:                                               ; preds = %dec_label_pc_2cebc
  %v2_2cf09 = call i32 @function_2cf10(i32 %arg1)
  br label %dec_label_pc_2cf0b

dec_label_pc_2cf0b:                               ; preds = %bb, %dec_label_pc_2cebc
  %v3_2cf09 = phi i32 [ %v2_2cf09, %bb ], [ 0, %dec_label_pc_2cebc ]
  ret i32 %v3_2cf09
}

define i32 @function_2cf10(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cf10:
  %v0_2cf11 = load i32, i32* @eax, align 4
  ret i32 %v0_2cf11
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf12:
  %v1_2cf35 = call i32 @unknown_5e32e(i32 %arg2)
  %v2_2cf44 = call i32 @unknown_5e35c(i32 %arg1, i32 %v1_2cf35)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cf58

bb:                                               ; preds = %dec_label_pc_2cf12
  %v1_2cf56 = call i32 @function_2cf5d()
  br label %dec_label_pc_2cf58

dec_label_pc_2cf58:                               ; preds = %bb, %dec_label_pc_2cf12
  %v2_2cf56 = phi i32 [ %v1_2cf56, %bb ], [ %arg1, %dec_label_pc_2cf12 ]
  ret i32 %v2_2cf56

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2cf5d() local_unnamed_addr {
dec_label_pc_2cf5d:
  %v0_2cf5e = load i32, i32* @eax, align 4
  ret i32 %v0_2cf5e
}

define i32 @_ZSt11__addressofISt6vectorIhSaIhEEEPT_RS3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cf61:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cf87

bb:                                               ; preds = %dec_label_pc_2cf61
  %v2_2cf85 = call i32 @function_2cf8c(i32 %arg1)
  br label %dec_label_pc_2cf87

dec_label_pc_2cf87:                               ; preds = %bb, %dec_label_pc_2cf61
  %v3_2cf85 = phi i32 [ %v2_2cf85, %bb ], [ %arg1, %dec_label_pc_2cf61 ]
  ret i32 %v3_2cf85
}

define i32 @function_2cf8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cf8c:
  %v0_2cf8d = load i32, i32* @eax, align 4
  ret i32 %v0_2cf8d
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2cf8e:
  %v3_2cfc0 = call i32 @unknown_5e414(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2cfd1

bb:                                               ; preds = %dec_label_pc_2cf8e
  %v1_2cfcf = call i32 @function_2cfd6()
  br label %dec_label_pc_2cfd1

dec_label_pc_2cfd1:                               ; preds = %bb, %dec_label_pc_2cf8e
  %v2_2cfcf = phi i32 [ %v1_2cfcf, %bb ], [ 0, %dec_label_pc_2cf8e ]
  ret i32 %v2_2cfcf
}

define i32 @function_2cfd6() local_unnamed_addr {
dec_label_pc_2cfd6:
  %v0_2cfd7 = load i32, i32* @eax, align 4
  ret i32 %v0_2cfd7
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2cfd8:
  %v1_2cff2 = add i32 %arg1, 16
  store i32 %v1_2cff2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d001

bb:                                               ; preds = %dec_label_pc_2cfd8
  %v2_2cfff = call i32 @function_2d006(i32 %arg1)
  br label %dec_label_pc_2d001

dec_label_pc_2d001:                               ; preds = %bb, %dec_label_pc_2cfd8
  %v3_2cfff = phi i32 [ %v2_2cfff, %bb ], [ %v1_2cff2, %dec_label_pc_2cfd8 ]
  ret i32 %v3_2cfff
}

define i32 @function_2d006(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d006:
  %v0_2d007 = load i32, i32* @eax, align 4
  ret i32 %v0_2d007
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d008:
  %stack_var_-17 = alloca i32, align 4
  %v1_2d02c = call i32 @unknown_5e4d0(i32 %arg1)
  %v1_2d037 = add i32 %v1_2d02c, 16
  %v1_2d03d = call i32 @unknown_59f69(i32 %v1_2d037)
  %v2_2d044 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2d051 = call i32 @unknown_59f1a(i32 %v2_2d044, i32 %arg1)
  %v3_2d06a = call i32 @unknown_4a85e(i32 %v2_2d044, i32 %v1_2d03d, i32 %arg2)
  %v1_2d075 = call i32 @unknown_46678(i32 %v2_2d044)
  store i32 %v1_2d02c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d089

bb:                                               ; preds = %dec_label_pc_2d008
  %v1_2d087 = call i32 @function_2d0cf()
  store i32 %v1_2d087, i32* @eax, align 4
  br label %dec_label_pc_2d089

dec_label_pc_2d089:                               ; preds = %bb, %dec_label_pc_2d008
  %v0_2d089 = call i32 @function_2d0ca()
  ret i32 %v0_2d089

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2d08c() local_unnamed_addr {
dec_label_pc_2d08c:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d08c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d08c
}

define i32 @function_2d08e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d08e:
  %v0_2d08e = load i32, i32* @ebp, align 4
  %v1_2d08e = add i32 %v0_2d08e, 1
  store i32 %v1_2d08e, i32* @ebp, align 4
  %v0_2d08f = load i32, i32* @eax, align 4
  %v1_2d093 = call i32 @unknown_46678(i32 %v0_2d08f)
  %v0_2d098 = load i32, i32* @ebx, align 4
  ret i32 %v0_2d098
}

define i32 @function_2d0b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d0b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d0ba() local_unnamed_addr {
dec_label_pc_2d0ba:
  %eax.global-to-local = alloca i32, align 4
  %v0_2d0ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d0ba
}

define i32 @function_2d0ca() local_unnamed_addr {
dec_label_pc_2d0ca:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d0cf() local_unnamed_addr {
dec_label_pc_2d0cf:
  %v0_2d0d3 = load i32, i32* @eax, align 4
  ret i32 %v0_2d0d3
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d0d4:
  %v1_2d0ee = add i32 %arg1, 16
  store i32 %v1_2d0ee, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d0fd

bb:                                               ; preds = %dec_label_pc_2d0d4
  %v2_2d0fb = call i32 @function_2d102(i32 %arg1)
  br label %dec_label_pc_2d0fd

dec_label_pc_2d0fd:                               ; preds = %bb, %dec_label_pc_2d0d4
  %v3_2d0fb = phi i32 [ %v2_2d0fb, %bb ], [ %v1_2d0ee, %dec_label_pc_2d0d4 ]
  ret i32 %v3_2d0fb
}

define i32 @function_2d102(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d102:
  %v0_2d103 = load i32, i32* @eax, align 4
  ret i32 %v0_2d103
}

define i32 @_ZNSaISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES3_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d104:
  %v1_2d121 = call i32 @unknown_5e612(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d132

bb:                                               ; preds = %dec_label_pc_2d104
  %v1_2d130 = call i32 @function_2d137()
  br label %dec_label_pc_2d132

dec_label_pc_2d132:                               ; preds = %bb, %dec_label_pc_2d104
  %v2_2d130 = phi i32 [ %v1_2d130, %bb ], [ 0, %dec_label_pc_2d104 ]
  ret i32 %v2_2d130
}

define i32 @function_2d137() local_unnamed_addr {
dec_label_pc_2d137:
  %v0_2d138 = load i32, i32* @eax, align 4
  ret i32 %v0_2d138
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE13_Rb_tree_implIS9_Lb0EE13_M_initializeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d13a:
  %v1_2d154 = add i32 %arg1, 4
  %v2_2d154 = inttoptr i32 %v1_2d154 to i32*
  store i32 0, i32* %v2_2d154, align 4
  %v1_2d15e = add i32 %arg1, 8
  %v2_2d15e = inttoptr i32 %v1_2d15e to i32*
  store i32 0, i32* %v2_2d15e, align 4
  %v2_2d16e = add i32 %arg1, 12
  %v3_2d16e = inttoptr i32 %v2_2d16e to i32*
  store i32 %v1_2d154, i32* %v3_2d16e, align 4
  %v2_2d17a = add i32 %arg1, 16
  %v3_2d17a = inttoptr i32 %v2_2d17a to i32*
  store i32 %v1_2d154, i32* %v3_2d17a, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d189

bb:                                               ; preds = %dec_label_pc_2d13a
  %v2_2d187 = call i32 @function_2d18e(i32 %arg1)
  br label %dec_label_pc_2d189

dec_label_pc_2d189:                               ; preds = %bb, %dec_label_pc_2d13a
  %v3_2d187 = phi i32 [ %v2_2d187, %bb ], [ 0, %dec_label_pc_2d13a ]
  ret i32 %v3_2d187
}

define i32 @function_2d18e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d18e:
  %v0_2d18f = load i32, i32* @eax, align 4
  ret i32 %v0_2d18f
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE13get_allocatorEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d190:
  %v1_2d1b3 = call i32 @unknown_5e6c8(i32 %arg2)
  %v2_2d1c2 = call i32 @unknown_5e6f6(i32 %arg1, i32 %v1_2d1b3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d1d6

bb:                                               ; preds = %dec_label_pc_2d190
  %v1_2d1d4 = call i32 @function_2d1db()
  br label %dec_label_pc_2d1d6

dec_label_pc_2d1d6:                               ; preds = %bb, %dec_label_pc_2d190
  %v2_2d1d4 = phi i32 [ %v1_2d1d4, %bb ], [ %arg1, %dec_label_pc_2d190 ]
  ret i32 %v2_2d1d4

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d1db() local_unnamed_addr {
dec_label_pc_2d1db:
  %v0_2d1dc = load i32, i32* @eax, align 4
  ret i32 %v0_2d1dc
}

define i32 @_ZNSaISt4pairIKSt6vectorIhSaIhEES2_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d1e0:
  %v1_2d1fd = call i32 @unknown_5e782(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d20e

bb:                                               ; preds = %dec_label_pc_2d1e0
  %v1_2d20c = call i32 @function_2d213()
  br label %dec_label_pc_2d20e

dec_label_pc_2d20e:                               ; preds = %bb, %dec_label_pc_2d1e0
  %v2_2d20c = phi i32 [ %v1_2d20c, %bb ], [ 0, %dec_label_pc_2d1e0 ]
  ret i32 %v2_2d20c
}

define i32 @function_2d213() local_unnamed_addr {
dec_label_pc_2d213:
  %v0_2d214 = load i32, i32* @eax, align 4
  ret i32 %v0_2d214
}

define i32 @_ZSt11__addressofISt4pairIKSt6vectorIhSaIhEES3_EEPT_RS6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d215:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d23b

bb:                                               ; preds = %dec_label_pc_2d215
  %v2_2d239 = call i32 @function_2d240(i32 %arg1)
  br label %dec_label_pc_2d23b

dec_label_pc_2d23b:                               ; preds = %bb, %dec_label_pc_2d215
  %v3_2d239 = phi i32 [ %v2_2d239, %bb ], [ %arg1, %dec_label_pc_2d215 ]
  ret i32 %v3_2d239
}

define i32 @function_2d240(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d240:
  %v0_2d241 = load i32, i32* @eax, align 4
  ret i32 %v0_2d241
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSt6vectorIhSaIhEES4_EE7destroyEPS6_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d242:
  %v1_2d265 = call i32 @unknown_47abe(i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d276

bb:                                               ; preds = %dec_label_pc_2d242
  %v1_2d274 = call i32 @function_2d27b()
  br label %dec_label_pc_2d276

dec_label_pc_2d276:                               ; preds = %bb, %dec_label_pc_2d242
  %v2_2d274 = phi i32 [ %v1_2d274, %bb ], [ 0, %dec_label_pc_2d242 ]
  ret i32 %v2_2d274
}

define i32 @function_2d27b() local_unnamed_addr {
dec_label_pc_2d27b:
  %v0_2d27c = load i32, i32* @eax, align 4
  ret i32 %v0_2d27c
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d27e:
  %v3_2d2b0 = call i32 @unknown_5e84a(i32 %arg1, i32 %arg2, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d2c1

bb:                                               ; preds = %dec_label_pc_2d27e
  %v1_2d2bf = call i32 @function_2d2c6()
  br label %dec_label_pc_2d2c1

dec_label_pc_2d2c1:                               ; preds = %bb, %dec_label_pc_2d27e
  %v2_2d2bf = phi i32 [ %v1_2d2bf, %bb ], [ 0, %dec_label_pc_2d27e ]
  ret i32 %v2_2d2bf
}

define i32 @function_2d2c6() local_unnamed_addr {
dec_label_pc_2d2c6:
  %v0_2d2c7 = load i32, i32* @eax, align 4
  ret i32 %v0_2d2c7
}

define i32 @_ZNKSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d2c8:
  %v2_2d2f2 = call i32 @unknown_5e8d6(i32 %arg1, i32 %arg2)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2d300(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d300:
  %v0_2d300 = load i32, i32* @edx, align 4
  %v1_2d300 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2d300 = icmp eq i32 %v1_2d300, %v0_2d300
  br i1 %v3_2d300, label %bb, label %dec_label_pc_2d300.dec_label_pc_2d309_crit_edge

dec_label_pc_2d300.dec_label_pc_2d309_crit_edge:  ; preds = %dec_label_pc_2d300
  %v2_2d307.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2d309

bb:                                               ; preds = %dec_label_pc_2d300
  %v1_2d307 = call i32 @function_2d30e()
  br label %dec_label_pc_2d309

dec_label_pc_2d309:                               ; preds = %dec_label_pc_2d300.dec_label_pc_2d309_crit_edge, %bb
  %v2_2d307 = phi i32 [ %v2_2d307.pre, %dec_label_pc_2d300.dec_label_pc_2d309_crit_edge ], [ %v1_2d307, %bb ]
  ret i32 %v2_2d307

; uselistorder directives
  uselistorder label %dec_label_pc_2d309, { 1, 0 }
}

define i32 @function_2d30e() local_unnamed_addr {
dec_label_pc_2d30e:
  %v0_2d30f = load i32, i32* @eax, align 4
  ret i32 %v0_2d30f
}

define i32 @_ZNKSt3setISt6vectorIhSaIhEESt4lessIS2_ESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d312:
  %v2_2d33c = call i32 @unknown_5e96a(i32 %arg1, i32 %arg2)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d353

bb:                                               ; preds = %dec_label_pc_2d312
  %v1_2d351 = call i32 @function_2d358()
  br label %dec_label_pc_2d353

dec_label_pc_2d353:                               ; preds = %bb, %dec_label_pc_2d312
  %v2_2d351 = phi i32 [ %v1_2d351, %bb ], [ %arg1, %dec_label_pc_2d312 ]
  ret i32 %v2_2d351

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2d358() local_unnamed_addr {
dec_label_pc_2d358:
  %v0_2d359 = load i32, i32* @eax, align 4
  ret i32 %v0_2d359
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d35c:
  %stack_var_-17 = alloca i32, align 4
  %v1_2d379 = call i32 @unknown_5e9fe(i32 %arg1)
  %v2_2d382 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2d388 = call i32 @unknown_5a78c(i32 %v2_2d382, i32 %v1_2d379)
  store i32 %v2_2d388, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d399

bb:                                               ; preds = %dec_label_pc_2d35c
  %v1_2d397 = call i32 @function_2d39e()
  br label %dec_label_pc_2d399

dec_label_pc_2d399:                               ; preds = %bb, %dec_label_pc_2d35c
  %v2_2d397 = phi i32 [ %v1_2d397, %bb ], [ %v2_2d388, %dec_label_pc_2d35c ]
  ret i32 %v2_2d397
}

define i32 @function_2d39e() local_unnamed_addr {
dec_label_pc_2d39e:
  %v0_2d39f = load i32, i32* @eax, align 4
  ret i32 %v0_2d39f
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE7_S_leftEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d3a0:
  %v1_2d3ba = add i32 %arg1, 8
  %v2_2d3ba = inttoptr i32 %v1_2d3ba to i32*
  %v3_2d3ba = load i32, i32* %v2_2d3ba, align 4
  store i32 %v3_2d3ba, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d3c9

bb:                                               ; preds = %dec_label_pc_2d3a0
  %v2_2d3c7 = call i32 @function_2d3ce(i32 %arg1)
  br label %dec_label_pc_2d3c9

dec_label_pc_2d3c9:                               ; preds = %bb, %dec_label_pc_2d3a0
  %v3_2d3c7 = phi i32 [ %v2_2d3c7, %bb ], [ %v3_2d3ba, %dec_label_pc_2d3a0 ]
  ret i32 %v3_2d3c7
}

define i32 @function_2d3ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d3ce:
  %v0_2d3cf = load i32, i32* @eax, align 4
  ret i32 %v0_2d3cf
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_S_rightEPKSt18_Rb_tree_node_base() local_unnamed_addr {
dec_label_pc_2d3d0:
  %eax.global-to-local = alloca i32, align 4
  %v2_2d3d1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2d3d1
}

define i32 @function_2d3d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d3d4:
  %v0_2d3d5 = load i32, i32* @ebx, align 4
  %v1_2d3d5 = add i32 %v0_2d3d5, 1166608453
  %v2_2d3d5 = inttoptr i32 %v1_2d3d5 to i8*
  %v3_2d3d5 = load i8, i8* %v2_2d3d5, align 1
  %v4_2d3d5 = load i32, i32* @ecx, align 4
  %v5_2d3d5 = trunc i32 %v4_2d3d5 to i8
  %v6_2d3d5 = sub i8 %v3_2d3d5, %v5_2d3d5
  store i8 %v6_2d3d5, i8* %v2_2d3d5, align 1
  %v0_2d3dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2d3e2 = load i32, i32* @ebp, align 4
  %v2_2d3e2 = add i32 %v1_2d3e2, -12
  %v3_2d3e2 = inttoptr i32 %v2_2d3e2 to i32*
  store i32 %v0_2d3dd, i32* %v3_2d3e2, align 4
  %v0_2d3e7 = load i32, i32* @ebp, align 4
  %v1_2d3e7 = add i32 %v0_2d3e7, -28
  %v2_2d3e7 = inttoptr i32 %v1_2d3e7 to i32*
  %v3_2d3e7 = load i32, i32* %v2_2d3e7, align 4
  %v1_2d3ea = add i32 %v3_2d3e7, 12
  %v2_2d3ea = inttoptr i32 %v1_2d3ea to i32*
  %v3_2d3ea = load i32, i32* %v2_2d3ea, align 4
  store i32 %v3_2d3ea, i32* @eax, align 4
  %v1_2d3ed = add i32 %v0_2d3e7, -12
  %v2_2d3ed = inttoptr i32 %v1_2d3ed to i32*
  %v3_2d3ed = load i32, i32* %v2_2d3ed, align 4
  %v1_2d3f0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2d3f0 = icmp eq i32 %v1_2d3f0, %v3_2d3ed
  br i1 %v3_2d3f0, label %bb, label %dec_label_pc_2d3f9

bb:                                               ; preds = %dec_label_pc_2d3d4
  %v1_2d3f7 = call i32 @function_2d3fe()
  br label %dec_label_pc_2d3f9

dec_label_pc_2d3f9:                               ; preds = %bb, %dec_label_pc_2d3d4
  %v2_2d3f7 = phi i32 [ %v1_2d3f7, %bb ], [ %v3_2d3ea, %dec_label_pc_2d3d4 ]
  ret i32 %v2_2d3f7
}

define i32 @function_2d3fe() local_unnamed_addr {
dec_label_pc_2d3fe:
  %v0_2d3ff = load i32, i32* @eax, align 4
  ret i32 %v0_2d3ff
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d400:
  %v1_2d41a = add i32 %arg1, 16
  store i32 %v1_2d41a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d429

bb:                                               ; preds = %dec_label_pc_2d400
  %v2_2d427 = call i32 @function_2d42e(i32 %arg1)
  br label %dec_label_pc_2d429

dec_label_pc_2d429:                               ; preds = %bb, %dec_label_pc_2d400
  %v3_2d427 = phi i32 [ %v2_2d427, %bb ], [ %v1_2d41a, %dec_label_pc_2d400 ]
  ret i32 %v3_2d427
}

define i32 @function_2d42e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d42e:
  %v0_2d42f = load i32, i32* @eax, align 4
  ret i32 %v0_2d42f
}

define i32 @_ZNKSt10_Select1stISt4pairIKSt6vectorIhSaIhEES3_EEclERKS5_() local_unnamed_addr {
dec_label_pc_2d430:
  %eax.global-to-local = alloca i32, align 4
  %v5_2d430 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2d430
}

define i32 @function_2d460() local_unnamed_addr {
dec_label_pc_2d460:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d460 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d460 = add i32 %v0_2d460, -1
  store i32 %v1_2d460, i32* %ecx.global-to-local, align 4
  %v0_2d462 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d462
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE6_M_endEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d464:
  %v1_2d47e = add i32 %arg1, 4
  store i32 %v1_2d47e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d48d

bb:                                               ; preds = %dec_label_pc_2d464
  %v2_2d48b = call i32 @function_2d492(i32 %arg1)
  br label %dec_label_pc_2d48d

dec_label_pc_2d48d:                               ; preds = %bb, %dec_label_pc_2d464
  %v3_2d48b = phi i32 [ %v2_2d48b, %bb ], [ %v1_2d47e, %dec_label_pc_2d464 ]
  ret i32 %v3_2d48b
}

define i32 @function_2d492(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d492:
  %v0_2d493 = load i32, i32* @eax, align 4
  ret i32 %v0_2d493
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_ESE_RS4_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d494:
  ret i32 %arg1
}

define i32 @function_2d4a2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d4a2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_2d4a2 = load i32, i32* @eax, align 4
  %v2_2d4a2 = or i32 %v0_2d4a2, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_2d4a2, i32* %eax.global-to-local, align 4
  %v0_2d4a4 = load i32, i32* @ebp, align 4
  %v0_2d4a5 = load i32, i32* @ecx, align 4
  %v1_2d4a5 = add i32 %v0_2d4a5, -1
  store i32 %v1_2d4a5, i32* @ecx, align 4
  %v1_2d4a7 = add i32 %v0_2d4a4, 2
  store i32 %v1_2d4a7, i32* %ebp.global-to-local, align 4
  %v1_2d4a8 = add i32 %v0_2d4a5, 1166793796
  %v2_2d4a8 = inttoptr i32 %v1_2d4a8 to i8*
  %v3_2d4a8 = load i8, i8* %v2_2d4a8, align 1
  %v5_2d4a8 = trunc i32 %v1_2d4a5 to i8
  %v8_2d4a8 = add i8 %v3_2d4a8, %v5_2d4a8
  %v28_2d4a8 = icmp ult i8 %v8_2d4a8, %v3_2d4a8
  store i1 %v28_2d4a8, i1* %cf.global-to-local, align 1
  store i8 %v8_2d4a8, i8* %v2_2d4a8, align 1
  %v0_2d4ae = load i32, i32* %eax.global-to-local, align 4
  %v1_2d4ae = trunc i32 %v0_2d4ae to i8
  %v2_2d4ae = load i1, i1* %cf.global-to-local, align 1
  %v3_2d4ae = zext i1 %v2_2d4ae to i8
  %v4_2d4ae = add i8 %v1_2d4ae, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_2d4ae = add i8 %v4_2d4ae, %v3_2d4ae
  %v25_2d4ae = zext i8 %v5_2d4ae to i32
  %v27_2d4ae = and i32 %v0_2d4ae, -256
  %v28_2d4ae = or i32 %v25_2d4ae, %v27_2d4ae
  store i32 %v28_2d4ae, i32* %eax.global-to-local, align 4
  %v0_2d4b0 = load i32, i32* %ebp.global-to-local, align 4
  %v1_2d4b0 = add i32 %v0_2d4b0, 1
  store i32 %v1_2d4b0, i32* @ebp, align 4
  %v2_2d4b7 = udiv i8 %v5_2d4ae, 101
  %v3_2d4b7 = urem i8 %v5_2d4ae, 101
  %v4_2d4b7 = zext i8 %v3_2d4b7 to i32
  %v6_2d4b7 = and i32 %v0_2d4ae, -65536
  %v8_2d4b7 = zext i8 %v2_2d4b7 to i32
  %v10_2d4b7 = mul nuw nsw i32 %v8_2d4b7, 256
  %v11_2d4b7 = or i32 %v4_2d4b7, %v6_2d4b7
  %v12_2d4b7 = or i32 %v11_2d4b7, %v10_2d4b7
  store i32 %v12_2d4b7, i32* %eax.global-to-local, align 4
  %v0_2d4b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2d4be = add i32 %v0_2d4b0, -11
  %v3_2d4be = inttoptr i32 %v2_2d4be to i32*
  store i32 %v0_2d4b9, i32* %v3_2d4be, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2d513

dec_label_pc_2d4c5:                               ; preds = %dec_label_pc_2d513
  %v3_2d4c5 = load i32, i32* %v2_2d513, align 4
  store i32 %v3_2d4c5, i32* %eax.global-to-local, align 4
  %v1_2d4cb = call i32 @unknown_5a7f0(i32 %v3_2d4c5)
  store i32 %v1_2d4cb, i32* %eax.global-to-local, align 4
  %v0_2d4d2 = load i32, i32* @ebp, align 4
  %v1_2d4d2 = add i32 %v0_2d4d2, -32
  %v2_2d4d2 = inttoptr i32 %v1_2d4d2 to i32*
  %v3_2d4d2 = load i32, i32* %v2_2d4d2, align 4
  store i32 %v3_2d4d2, i32* %eax.global-to-local, align 4
  %v1_2d4d5 = add i32 %v0_2d4d2, -44
  %v2_2d4d5 = inttoptr i32 %v1_2d4d5 to i32*
  %v3_2d4d5 = load i32, i32* %v2_2d4d5, align 4
  store i32 %v3_2d4d5, i32* @ecx, align 4
  %v3_2d4e3 = call i32 @unknown_4ea34(i32 %v3_2d4d2, i32 %v1_2d4cb, i32 %v3_2d4d5)
  %v1_2d4e8 = xor i32 %v3_2d4e3, 1
  %v4_2d4e8 = trunc i32 %v1_2d4e8 to i8
  store i32 %v1_2d4e8, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2d4eb = icmp eq i8 %v4_2d4e8, 0
  %v0_2d505 = load i32, i32* @ebp, align 4
  %v1_2d505 = add i32 %v0_2d505, -36
  %v2_2d505 = inttoptr i32 %v1_2d505 to i32*
  %v3_2d505 = load i32, i32* %v2_2d505, align 4
  store i32 %v3_2d505, i32* %eax.global-to-local, align 4
  br i1 %v5_2d4eb, label %dec_label_pc_2d505, label %dec_label_pc_2d4ef

dec_label_pc_2d4ef:                               ; preds = %dec_label_pc_2d4c5
  %v2_2d4f2 = add i32 %v0_2d505, -40
  %v3_2d4f2 = inttoptr i32 %v2_2d4f2 to i32*
  store i32 %v3_2d505, i32* %v3_2d4f2, align 4
  %v0_2d4f5 = load i32, i32* @ebp, align 4
  %v1_2d4f5 = add i32 %v0_2d4f5, -36
  %v2_2d4f5 = inttoptr i32 %v1_2d4f5 to i32*
  %v3_2d4f5 = load i32, i32* %v2_2d4f5, align 4
  store i32 %v3_2d4f5, i32* %eax.global-to-local, align 4
  %v1_2d4fb = call i32 @unknown_55316(i32 %v3_2d4f5)
  store i32 %v1_2d4fb, i32* %eax.global-to-local, align 4
  %v1_2d500 = load i32, i32* @ebp, align 4
  %v2_2d500 = add i32 %v1_2d500, -36
  %v3_2d500 = inttoptr i32 %v2_2d500 to i32*
  store i32 %v1_2d4fb, i32* %v3_2d500, align 4
  br label %dec_label_pc_2d513.backedge

dec_label_pc_2d513.backedge:                      ; preds = %dec_label_pc_2d4ef, %dec_label_pc_2d505
  %v3_2d517.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2d513

dec_label_pc_2d505:                               ; preds = %dec_label_pc_2d4c5
  %v1_2d50b = call i32 @unknown_552e6(i32 %v3_2d505)
  store i32 %v1_2d50b, i32* %eax.global-to-local, align 4
  %v1_2d510 = load i32, i32* @ebp, align 4
  %v2_2d510 = add i32 %v1_2d510, -36
  %v3_2d510 = inttoptr i32 %v2_2d510 to i32*
  store i32 %v1_2d50b, i32* %v3_2d510, align 4
  br label %dec_label_pc_2d513.backedge

dec_label_pc_2d513:                               ; preds = %dec_label_pc_2d513.backedge, %dec_label_pc_2d4a2
  %v3_2d517 = phi i32 [ %v3_2d517.pre, %dec_label_pc_2d513.backedge ], [ 0, %dec_label_pc_2d4a2 ]
  %v0_2d513 = load i32, i32* @ebp, align 4
  %v1_2d513 = add i32 %v0_2d513, -36
  %v2_2d513 = inttoptr i32 %v1_2d513 to i32*
  %v3_2d513 = load i32, i32* %v2_2d513, align 4
  %v10_2d513 = icmp eq i32 %v3_2d513, 0
  %v1_2d517 = icmp eq i1 %v10_2d513, false
  %v2_2d517 = zext i1 %v1_2d517 to i32
  %v4_2d517 = and i32 %v3_2d517, -256
  %v5_2d517 = or i32 %v2_2d517, %v4_2d517
  store i32 %v5_2d517, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_2d51a = icmp eq i1 %v1_2d517, false
  %v1_2d51c = icmp eq i1 %v5_2d51a, false
  br i1 %v1_2d51c, label %dec_label_pc_2d4c5, label %dec_label_pc_2d51e

dec_label_pc_2d51e:                               ; preds = %dec_label_pc_2d513
  %v1_2d51e = add i32 %v0_2d513, -40
  %v2_2d51e = inttoptr i32 %v1_2d51e to i32*
  %v3_2d51e = load i32, i32* %v2_2d51e, align 4
  store i32 %v3_2d51e, i32* %eax.global-to-local, align 4
  %v1_2d525 = add i32 %v0_2d513, -28
  %v2_2d525 = inttoptr i32 %v1_2d525 to i32*
  %v3_2d525 = load i32, i32* %v2_2d525, align 4
  store i32 %v3_2d525, i32* %eax.global-to-local, align 4
  %v2_2d52b = call i32 @unknown_5aa68(i32 %v3_2d525, i32 %v3_2d51e)
  store i32 %v2_2d52b, i32* %eax.global-to-local, align 4
  %v0_2d530 = load i32, i32* @ebp, align 4
  %v1_2d530 = add i32 %v0_2d530, -28
  %v2_2d530 = inttoptr i32 %v1_2d530 to i32*
  %v3_2d530 = load i32, i32* %v2_2d530, align 4
  store i32 %v3_2d530, i32* @eax, align 4
  %v1_2d533 = add i32 %v0_2d530, -12
  %v2_2d533 = inttoptr i32 %v1_2d533 to i32*
  %v3_2d533 = load i32, i32* %v2_2d533, align 4
  %v1_2d536 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2d536 = xor i32 %v1_2d536, %v3_2d533
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_2d536 = icmp eq i32 %v2_2d536, 0
  store i32 %v2_2d536, i32* @edx, align 4
  br i1 %v3_2d536, label %bb, label %dec_label_pc_2d53f

bb:                                               ; preds = %dec_label_pc_2d51e
  %v1_2d53d = call i32 @function_2d544()
  store i32 %v1_2d53d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2d53f

dec_label_pc_2d53f:                               ; preds = %bb, %dec_label_pc_2d51e
  %v2_2d53d = phi i32 [ %v1_2d53d, %bb ], [ %v3_2d530, %dec_label_pc_2d51e ]
  ret i32 %v2_2d53d

; uselistorder directives
  uselistorder i32* %v2_2d513, { 1, 0 }
  uselistorder i32 %v0_2d513, { 1, 0, 2 }
  uselistorder i32 %v3_2d505, { 1, 0, 2 }
  uselistorder i8 %v3_2d4a8, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 10, 11, 12, 13, 1, 3, 4, 5, 2, 6, 7, 8, 9, 14, 15, 16, 17, 18 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_2d513.backedge, { 1, 0 }
}

define i32 @function_2d544() local_unnamed_addr {
dec_label_pc_2d544:
  %v0_2d545 = load i32, i32* @eax, align 4
  ret i32 %v0_2d545
}

define i32 @_ZSt23lexicographical_compareIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEES7_EbT_S8_T0_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2d548:
  %v1_2d57a = call i32 @unknown_51009(i32 %arg4)
  %v1_2d587 = call i32 @unknown_51009(i32 %arg3)
  %v1_2d594 = call i32 @unknown_51009(i32 %arg2)
  %v1_2d5a1 = call i32 @unknown_51009(i32 %arg1)
  %v4_2d5b5 = call i32 @unknown_5ec1a(i32 %v1_2d5a1, i32 %v1_2d594, i32 %v1_2d587, i32 %v1_2d57a)
  store i32 %v4_2d5b5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d5c6

bb:                                               ; preds = %dec_label_pc_2d548
  %v1_2d5c4 = call i32 @function_2d5cb()
  br label %dec_label_pc_2d5c6

dec_label_pc_2d5c6:                               ; preds = %bb, %dec_label_pc_2d548
  %v2_2d5c4 = phi i32 [ %v1_2d5c4, %bb ], [ %v4_2d5b5, %dec_label_pc_2d548 ]
  ret i32 %v2_2d5c4

; uselistorder directives
  uselistorder i32 (i32)* @unknown_51009, { 3, 2, 1, 0 }
}

define i32 @function_2d5cb() local_unnamed_addr {
dec_label_pc_2d5cb:
  %v0_2d5d2 = load i32, i32* @eax, align 4
  ret i32 %v0_2d5d2
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEC1EPSt13_Rb_tree_nodeIS5_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d5d4:
  store i32 %arg2, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d605

bb:                                               ; preds = %dec_label_pc_2d5d4
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_2d603 = call i32 @function_2d60a(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_2d605

dec_label_pc_2d605:                               ; preds = %bb, %dec_label_pc_2d5d4
  %v4_2d603 = phi i32 [ %v3_2d603, %bb ], [ 0, %dec_label_pc_2d5d4 ]
  ret i32 %v4_2d603

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_2d60a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d60a:
  %v0_2d60b = load i32, i32* @eax, align 4
  ret i32 %v0_2d60b
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d60c:
  ret i32 %arg1
}

define i32 @function_2d628(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d628:
  %cf.global-to-local = alloca i1, align 1
  %v0_2d628 = load i32, i32* @ebx, align 4
  %v1_2d628 = add i32 %v0_2d628, 862319701
  %v2_2d628 = inttoptr i32 %v1_2d628 to i8*
  %v3_2d628 = load i8, i8* %v2_2d628, align 1
  %v4_2d628 = load i32, i32* @ecx, align 4
  %v5_2d628 = trunc i32 %v4_2d628 to i8
  %v6_2d628 = load i1, i1* @cf, align 1
  %v7_2d628 = zext i1 %v6_2d628 to i8
  %v8_2d628 = add i8 %v5_2d628, %v3_2d628
  %v9_2d628 = add i8 %v8_2d628, %v7_2d628
  %v27_2d628 = icmp ule i8 %v9_2d628, %v3_2d628
  %v28_2d628 = icmp ult i8 %v8_2d628, %v3_2d628
  %v29_2d628 = select i1 %v6_2d628, i1 %v27_2d628, i1 %v28_2d628
  store i1 %v29_2d628, i1* %cf.global-to-local, align 1
  store i8 %v9_2d628, i8* %v2_2d628, align 1
  %v0_2d62e = load i32, i32* @eax, align 4
  %v1_2d62e = load i1, i1* %cf.global-to-local, align 1
  %v2_2d62e = zext i1 %v1_2d62e to i32
  %v3_2d62e = add i32 %v0_2d62e, 20
  %v4_2d62e = add i32 %v3_2d62e, %v2_2d62e
  %v14_2d62e = icmp eq i32 %v4_2d62e, 0
  %v22_2d62e = icmp ule i32 %v4_2d62e, %v0_2d62e
  %v23_2d62e = icmp ugt i32 %v0_2d62e, -21
  %v24_2d62e = select i1 %v1_2d62e, i1 %v22_2d62e, i1 %v23_2d62e
  store i1 %v24_2d62e, i1* %cf.global-to-local, align 1
  store i32 %v4_2d62e, i32* @eax, align 4
  br i1 %v14_2d62e, label %bb, label %dec_label_pc_2d635

bb:                                               ; preds = %dec_label_pc_2d628
  %v1_2d633 = call i32 @function_2d63a()
  br label %dec_label_pc_2d635

dec_label_pc_2d635:                               ; preds = %bb, %dec_label_pc_2d628
  %v2_2d633 = phi i32 [ %v1_2d633, %bb ], [ %v4_2d62e, %dec_label_pc_2d628 ]
  ret i32 %v2_2d633

; uselistorder directives
  uselistorder i32 %v4_2d62e, { 0, 2, 1, 3 }
  uselistorder i8 %v9_2d628, { 1, 0 }
  uselistorder i8 %v3_2d628, { 1, 2, 0 }
}

define i32 @function_2d63a() local_unnamed_addr {
dec_label_pc_2d63a:
  %v0_2d63b = load i32, i32* @eax, align 4
  ret i32 %v0_2d63b
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE4sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d63c:
  %v1_2d656 = add i32 %arg1, 20
  %v2_2d656 = inttoptr i32 %v1_2d656 to i32*
  %v3_2d656 = load i32, i32* %v2_2d656, align 4
  store i32 %v3_2d656, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2d665

bb:                                               ; preds = %dec_label_pc_2d63c
  %v2_2d663 = call i32 @function_2d66a(i32 %arg1)
  br label %dec_label_pc_2d665

dec_label_pc_2d665:                               ; preds = %bb, %dec_label_pc_2d63c
  %v3_2d663 = phi i32 [ %v2_2d663, %bb ], [ %v3_2d656, %dec_label_pc_2d63c ]
  ret i32 %v3_2d663
}

define i32 @function_2d66a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d66a:
  %v0_2d66b = load i32, i32* @eax, align 4
  ret i32 %v0_2d66b
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE10_M_insert_EPKSt18_Rb_tree_node_baseSE_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_2d66c:
  %stack_var_-18 = alloca i32, align 4
  %v10_2d69c = icmp eq i32 %arg3, 0
  %v1_2d6a0 = icmp eq i1 %v10_2d69c, false
  br i1 %v1_2d6a0, label %dec_label_pc_2d6f4, label %dec_label_pc_2d6a2

dec_label_pc_2d6a2:                               ; preds = %dec_label_pc_2d66c
  %v1_2d6a8 = call i32 @unknown_5aad0(i32 %arg2)
  %v15_2d6ad = icmp eq i32 %v1_2d6a8, %arg4
  br i1 %v15_2d6ad, label %dec_label_pc_2d6f4, label %dec_label_pc_2d6b2

dec_label_pc_2d6b2:                               ; preds = %dec_label_pc_2d6a2
  %v1_2d6b8 = call i32 @unknown_55836(i32 %arg4)
  %v2_2d6c6 = ptrtoint i32* %stack_var_-18 to i32
  %v2_2d6cc = call i32 @unknown_5aa9c(i32 %v2_2d6c6, i32 %arg5)
  %v3_2d6df = call i32 @unknown_4ec0c(i32 %arg2, i32 %v2_2d6cc, i32 %v1_2d6b8)
  %v4_2d6e4 = trunc i32 %v3_2d6df to i8
  %v5_2d6e4 = icmp ne i8 %v4_2d6e4, 0
  %phitmp = zext i1 %v5_2d6e4 to i32
  br label %dec_label_pc_2d6f4

dec_label_pc_2d6f4:                               ; preds = %dec_label_pc_2d6b2, %dec_label_pc_2d66c, %dec_label_pc_2d6a2
  %storemerge = phi i32 [ 1, %dec_label_pc_2d6a2 ], [ 1, %dec_label_pc_2d66c ], [ %phitmp, %dec_label_pc_2d6b2 ]
  %v2_2d704 = call i32 @unknown_5ed9e(i32 %arg2, i32 %arg5)
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_2d6f4, { 0, 2, 1 }
}

define i32 @function_2d760(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d760:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2d764() local_unnamed_addr {
dec_label_pc_2d764:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2d764 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2d764 = add i32 %v0_2d764, 1566262468
  %v2_2d764 = inttoptr i32 %v1_2d764 to i32*
  %v3_2d764 = load i32, i32* %v2_2d764, align 4
  %v4_2d764 = add i32 %v3_2d764, 1
  store i32 %v4_2d764, i32* %v2_2d764, align 4
  %v0_2d76a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d76a
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE16_M_insert_uniqueERKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d76e:
  %v1_2d798 = call i32 @unknown_4e7e4(i32 %arg2)
  %v1_2d7a6 = call i32 @unknown_5abd2(i32 %arg2)
  ret i32 %v1_2d7a6

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2d7bc(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d7bc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2d7be = load i32, i32* @eax, align 4
  %v2_2d7be = add i32 %v0_2d7be, 36
  %v16_2d7be = and i32 %v2_2d7be, 255
  %v18_2d7be = and i32 %v0_2d7be, -256
  %v19_2d7be = or i32 %v16_2d7be, %v18_2d7be
  store i32 %v19_2d7be, i32* %eax.global-to-local, align 4
  %v0_2d7c0 = call i32 @unknown_5aaca()
  store i32 %v0_2d7c0, i32* %eax.global-to-local, align 4
  store i32 %v0_2d7c0, i32* %ebx.global-to-local, align 4
  %v0_2d7c7 = load i32, i32* @ebp, align 4
  %v1_2d7c7 = add i32 %v0_2d7c7, -68
  %v2_2d7c7 = inttoptr i32 %v1_2d7c7 to i32*
  %v3_2d7c7 = load i32, i32* %v2_2d7c7, align 4
  %v1_2d7ce = add i32 %v0_2d7c7, -18
  store i32 %v1_2d7ce, i32* %eax.global-to-local, align 4
  %v2_2d7d4 = call i32 @unknown_5ab9e(i32 %v1_2d7ce, i32 %v3_2d7c7)
  store i32 %v2_2d7d4, i32* %eax.global-to-local, align 4
  %v0_2d7d9 = load i32, i32* @ebp, align 4
  %v1_2d7d9 = add i32 %v0_2d7d9, -64
  %v2_2d7d9 = inttoptr i32 %v1_2d7d9 to i32*
  %v3_2d7d9 = load i32, i32* %v2_2d7d9, align 4
  %v0_2d7dc = load i32, i32* %ebx.global-to-local, align 4
  %v3_2d7e7 = call i32 @unknown_4ed0e(i32 %v3_2d7d9, i32 %v2_2d7d4, i32 %v0_2d7dc)
  store i32 %v3_2d7e7, i32* %eax.global-to-local, align 4
  %v1_2d7ec = trunc i32 %v3_2d7e7 to i8
  %v2_2d7ec = load i32, i32* @ebp, align 4
  %v3_2d7ec = add i32 %v2_2d7ec, -13
  %v4_2d7ec = inttoptr i32 %v3_2d7ec to i8*
  store i8 %v1_2d7ec, i8* %v4_2d7ec, align 1
  %v0_2d7ef = load i32, i32* @ebp, align 4
  %v1_2d7ef = add i32 %v0_2d7ef, -13
  %v2_2d7ef = inttoptr i32 %v1_2d7ef to i8*
  %v3_2d7ef = load i8, i8* %v2_2d7ef, align 1
  %v10_2d7ef = icmp eq i8 %v3_2d7ef, 0
  %v1_2d802 = add i32 %v0_2d7ef, -28
  %v2_2d802 = inttoptr i32 %v1_2d802 to i32*
  %v3_2d802 = load i32, i32* %v2_2d802, align 4
  store i32 %v3_2d802, i32* %eax.global-to-local, align 4
  br i1 %v10_2d7ef, label %dec_label_pc_2d802, label %dec_label_pc_2d7f5

dec_label_pc_2d7f5:                               ; preds = %dec_label_pc_2d7bc
  %v1_2d7fb = call i32 @unknown_555f0(i32 %v3_2d802)
  br label %dec_label_pc_2d80d

dec_label_pc_2d802:                               ; preds = %dec_label_pc_2d7bc
  %v1_2d808 = call i32 @unknown_555c0(i32 %v3_2d802)
  br label %dec_label_pc_2d80d

dec_label_pc_2d80d:                               ; preds = %dec_label_pc_2d802, %dec_label_pc_2d7f5
  %storemerge = phi i32 [ %v1_2d808, %dec_label_pc_2d802 ], [ %v1_2d7fb, %dec_label_pc_2d7f5 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_2d80d = load i32, i32* @ebp, align 4
  %v2_2d80d = add i32 %v1_2d80d, -28
  %v3_2d80d = inttoptr i32 %v2_2d80d to i32*
  store i32 %storemerge, i32* %v3_2d80d, align 4
  %v0_2d810 = load i32, i32* @ebp, align 4
  %v1_2d810 = add i32 %v0_2d810, -28
  %v2_2d810 = inttoptr i32 %v1_2d810 to i32*
  %v3_2d810 = load i32, i32* %v2_2d810, align 4
  %v10_2d810 = icmp eq i32 %v3_2d810, 0
  %v1_2d814 = icmp eq i1 %v10_2d810, false
  %v2_2d814 = zext i1 %v1_2d814 to i32
  %v3_2d814 = load i32, i32* %eax.global-to-local, align 4
  %v4_2d814 = and i32 %v3_2d814, -256
  %v5_2d814 = or i32 %v2_2d814, %v4_2d814
  store i32 %v5_2d814, i32* %eax.global-to-local, align 4
  %v1_2d81b = add i32 %v0_2d810, -24
  %v2_2d81b = inttoptr i32 %v1_2d81b to i32*
  %v3_2d81b = load i32, i32* %v2_2d81b, align 4
  %v1_2d822 = add i32 %v0_2d810, -44
  store i32 %v1_2d822, i32* %eax.global-to-local, align 4
  %v2_2d828 = call i32 @unknown_5ad42(i32 %v1_2d822, i32 %v3_2d81b)
  store i32 %v2_2d828, i32* %eax.global-to-local, align 4
  %v0_2d82d = load i32, i32* @ebp, align 4
  %v1_2d82d = add i32 %v0_2d82d, -13
  %v2_2d82d = inttoptr i32 %v1_2d82d to i8*
  %v3_2d82d = load i8, i8* %v2_2d82d, align 1
  %v10_2d82d = icmp eq i8 %v3_2d82d, 0
  br i1 %v10_2d82d, label %dec_label_pc_2d8b9, label %dec_label_pc_2d837

dec_label_pc_2d837:                               ; preds = %dec_label_pc_2d80d
  %v1_2d837 = add i32 %v0_2d82d, -40
  store i32 %v1_2d837, i32* %eax.global-to-local, align 4
  %v1_2d83a = add i32 %v0_2d82d, -64
  %v2_2d83a = inttoptr i32 %v1_2d83a to i32*
  %v3_2d83a = load i32, i32* %v2_2d83a, align 4
  %v2_2d844 = call i32 @unknown_5ef6c(i32 %v1_2d837, i32 %v3_2d83a)
  %v0_2d84c = load i32, i32* @ebp, align 4
  %v1_2d84c = add i32 %v0_2d84c, -40
  %v1_2d853 = add i32 %v0_2d84c, -44
  store i32 %v1_2d853, i32* %eax.global-to-local, align 4
  %v2_2d859 = call i32 @unknown_4eda0(i32 %v1_2d853, i32 %v1_2d84c)
  store i32 %v2_2d859, i32* %eax.global-to-local, align 4
  %v4_2d85e = trunc i32 %v2_2d859 to i8
  %v5_2d85e = icmp eq i8 %v4_2d85e, 0
  %v0_2d8ae = load i32, i32* @ebp, align 4
  br i1 %v5_2d85e, label %dec_label_pc_2d8ae, label %dec_label_pc_2d862

dec_label_pc_2d862:                               ; preds = %dec_label_pc_2d837
  %v1_2d862 = add i32 %v0_2d8ae, -17
  %v2_2d862 = inttoptr i32 %v1_2d862 to i8*
  store i8 1, i8* %v2_2d862, align 1
  %v0_2d866 = load i32, i32* @ebp, align 4
  %v1_2d866 = add i32 %v0_2d866, -36
  store i32 %v1_2d866, i32* %eax.global-to-local, align 4
  %v1_2d87e = add i32 %v0_2d866, -64
  %v2_2d87e = inttoptr i32 %v1_2d87e to i32*
  %v3_2d87e = load i32, i32* %v2_2d87e, align 4
  %v2_2d888 = call i32 @unknown_5adda(i32 %v1_2d866, i32 %v3_2d87e)
  %v0_2d890 = load i32, i32* @ebp, align 4
  %v1_2d890 = add i32 %v0_2d890, -17
  %v1_2d897 = add i32 %v0_2d890, -36
  store i32 %v1_2d897, i32* %eax.global-to-local, align 4
  %v1_2d89e = add i32 %v0_2d890, -60
  %v2_2d89e = inttoptr i32 %v1_2d89e to i32*
  %v3_2d89e = load i32, i32* %v2_2d89e, align 4
  store i32 %v3_2d89e, i32* %eax.global-to-local, align 4
  %v3_2d8a4 = call i32 @unknown_5efb6(i32 %v3_2d89e, i32 %v1_2d897, i32 %v1_2d890)
  store i32 %v3_2d8a4, i32* %eax.global-to-local, align 4
  %v0_2d8a9 = call i32 @function_2d957()
  store i32 %v0_2d8a9, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d8a9

dec_label_pc_2d8ae:                               ; preds = %dec_label_pc_2d837
  %v1_2d8ae = add i32 %v0_2d8ae, -44
  store i32 %v1_2d8ae, i32* %eax.global-to-local, align 4
  %v1_2d8b4 = call i32 @unknown_5f002(i32 %v1_2d8ae)
  store i32 %v1_2d8b4, i32* %eax.global-to-local, align 4
  %v0_2d8b9.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2d8b9

dec_label_pc_2d8b9:                               ; preds = %dec_label_pc_2d8ae, %dec_label_pc_2d80d
  %v0_2d8b9 = phi i32 [ %v0_2d8b9.pre, %dec_label_pc_2d8ae ], [ %v0_2d82d, %dec_label_pc_2d80d ]
  %v1_2d8b9 = add i32 %v0_2d8b9, -68
  %v2_2d8b9 = inttoptr i32 %v1_2d8b9 to i32*
  %v3_2d8b9 = load i32, i32* %v2_2d8b9, align 4
  %v1_2d8c0 = add i32 %v0_2d8b9, -16
  store i32 %v1_2d8c0, i32* %eax.global-to-local, align 4
  %v2_2d8c6 = call i32 @unknown_5ab9e(i32 %v1_2d8c0, i32 %v3_2d8b9)
  store i32 %v2_2d8c6, i32* %eax.global-to-local, align 4
  store i32 %v2_2d8c6, i32* %ebx.global-to-local, align 4
  %v0_2d8cd = load i32, i32* @ebp, align 4
  %v1_2d8cd = add i32 %v0_2d8cd, -44
  %v2_2d8cd = inttoptr i32 %v1_2d8cd to i32*
  %v3_2d8cd = load i32, i32* %v2_2d8cd, align 4
  store i32 %v3_2d8cd, i32* %eax.global-to-local, align 4
  %v1_2d8d3 = call i32 @unknown_55938(i32 %v3_2d8cd)
  store i32 %v1_2d8d3, i32* %eax.global-to-local, align 4
  %v0_2d8da = load i32, i32* @ebp, align 4
  %v1_2d8da = add i32 %v0_2d8da, -64
  %v2_2d8da = inttoptr i32 %v1_2d8da to i32*
  %v3_2d8da = load i32, i32* %v2_2d8da, align 4
  store i32 %v3_2d8da, i32* %eax.global-to-local, align 4
  %v0_2d8dd = load i32, i32* %ebx.global-to-local, align 4
  %v3_2d8e8 = call i32 @unknown_4ed0e(i32 %v3_2d8da, i32 %v1_2d8d3, i32 %v0_2d8dd)
  store i32 %v3_2d8e8, i32* %eax.global-to-local, align 4
  %v4_2d8ed = trunc i32 %v3_2d8e8 to i8
  %v5_2d8ed = icmp eq i8 %v4_2d8ed, 0
  br i1 %v5_2d8ed, label %bb, label %dec_label_pc_2d8f1

bb:                                               ; preds = %dec_label_pc_2d8b9
  %v1_2d8ef = call i32 @function_2d93a()
  store i32 %v1_2d8ef, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2d8f1

dec_label_pc_2d8f1:                               ; preds = %bb, %dec_label_pc_2d8b9
  %v0_2d8f1 = load i32, i32* @ebp, align 4
  %v1_2d8f1 = add i32 %v0_2d8f1, -15
  %v2_2d8f1 = inttoptr i32 %v1_2d8f1 to i8*
  store i8 1, i8* %v2_2d8f1, align 1
  %v0_2d8f5 = load i32, i32* @ebp, align 4
  %v1_2d8f5 = add i32 %v0_2d8f5, -32
  store i32 %v1_2d8f5, i32* %eax.global-to-local, align 4
  ret i32 %v1_2d8f5

; uselistorder directives
  uselistorder i32 %v0_2d8b9, { 1, 0 }
  uselistorder i32 %v0_2d8ae, { 1, 0 }
  uselistorder i32 %v0_2d82d, { 0, 2, 1, 3 }
  uselistorder i32 %v0_2d810, { 1, 0, 2 }
  uselistorder i32 %v3_2d802, { 1, 0, 2 }
  uselistorder i32 %v0_2d7be, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 2, 3, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 -17, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 (i32, i32, i32)* @unknown_4ed0e, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5ab9e, { 1, 0 }
  uselistorder i32 -18, { 1, 0, 6, 3, 4, 2, 5, 7 }
}

define i32 @function_2d908(i32 %arg1) local_unnamed_addr {
dec_label_pc_2d908:
  %v0_2d90b = load i32, i32* @eax, align 4
  %v11_2d90b = and i32 %v0_2d90b, -248
  %v0_2d90d = load i32, i32* @ebp, align 4
  %v1_2d90d = add i32 %v0_2d90d, -64
  %v2_2d90d = inttoptr i32 %v1_2d90d to i32*
  %v3_2d90d = load i32, i32* %v2_2d90d, align 4
  %v2_2d917 = call i32 @unknown_5adda(i32 %v11_2d90b, i32 %v3_2d90d)
  %v0_2d91f = load i32, i32* @ebp, align 4
  %v1_2d91f = add i32 %v0_2d91f, -15
  %v1_2d926 = add i32 %v0_2d91f, -32
  %v1_2d92d = add i32 %v0_2d91f, -60
  %v2_2d92d = inttoptr i32 %v1_2d92d to i32*
  %v3_2d92d = load i32, i32* %v2_2d92d, align 4
  %v3_2d933 = call i32 @unknown_5efb6(i32 %v3_2d92d, i32 %v1_2d926, i32 %v1_2d91f)
  %v0_2d938 = call i32 @function_2d957()
  ret i32 %v0_2d938

; uselistorder directives
  uselistorder i32 ()* @function_2d957, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5adda, { 1, 0 }
}

define i32 @function_2d93a() local_unnamed_addr {
dec_label_pc_2d93a:
  %v0_2d93a = load i32, i32* @ebp, align 4
  %v1_2d93a = add i32 %v0_2d93a, -14
  %v2_2d93a = inttoptr i32 %v1_2d93a to i8*
  store i8 0, i8* %v2_2d93a, align 1
  %v0_2d93e = load i32, i32* @ebp, align 4
  %v1_2d93e = add i32 %v0_2d93e, -14
  %v1_2d945 = add i32 %v0_2d93e, -44
  %v1_2d94c = add i32 %v0_2d93e, -60
  %v2_2d94c = inttoptr i32 %v1_2d94c to i32*
  %v3_2d94c = load i32, i32* %v2_2d94c, align 4
  %v3_2d952 = call i32 @unknown_5efb6(i32 %v3_2d94c, i32 %v1_2d945, i32 %v1_2d93e)
  ret i32 %v3_2d952

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_5efb6, { 1, 2, 0 }
}

define i32 @function_2d957() local_unnamed_addr {
dec_label_pc_2d957:
  %v0_2d957 = load i32, i32* @ebp, align 4
  %v1_2d957 = add i32 %v0_2d957, -60
  %v2_2d957 = inttoptr i32 %v1_2d957 to i32*
  %v3_2d957 = load i32, i32* %v2_2d957, align 4
  store i32 %v3_2d957, i32* @eax, align 4
  %v1_2d95a = add i32 %v0_2d957, -12
  %v2_2d95a = inttoptr i32 %v1_2d95a to i32*
  %v3_2d95a = load i32, i32* %v2_2d95a, align 4
  %v1_2d95d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2d95d = icmp eq i32 %v1_2d95d, %v3_2d95a
  br i1 %v3_2d95d, label %bb, label %dec_label_pc_2d966

bb:                                               ; preds = %dec_label_pc_2d957
  %v1_2d964 = call i32 @function_2d96b()
  br label %dec_label_pc_2d966

dec_label_pc_2d966:                               ; preds = %bb, %dec_label_pc_2d957
  %v2_2d964 = phi i32 [ %v1_2d964, %bb ], [ %v3_2d957, %dec_label_pc_2d957 ]
  ret i32 %v2_2d964
}

define i32 @function_2d96b() local_unnamed_addr {
dec_label_pc_2d96b:
  %v0_2d96b = load i32, i32* @ebp, align 4
  %v1_2d96b = add i32 %v0_2d96b, -4
  %v2_2d96b = inttoptr i32 %v1_2d96b to i32*
  %v3_2d96b = load i32, i32* %v2_2d96b, align 4
  store i32 %v3_2d96b, i32* @ebx, align 4
  %v0_2d96f = load i32, i32* @eax, align 4
  ret i32 %v0_2d96f
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_leftmostEv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2d972:
  %stack_var_-4 = alloca i32, align 4
  %v4_2d972 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_2d972, i32* @ebp, align 4
  %v5_2d975 = icmp ult i32* %stack_var_-4, inttoptr (i32 40 to i32*)
  store i1 %v5_2d975, i1* @cf, align 1
  ret i32 %arg1
}

define i32 @function_2d97e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2d97e:
  %v0_2d97e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2d984 = load i32, i32* @ebp, align 4
  %v2_2d984 = add i32 %v1_2d984, -12
  %v3_2d984 = inttoptr i32 %v2_2d984 to i32*
  store i32 %v0_2d97e, i32* %v3_2d984, align 4
  %v0_2d989 = load i32, i32* @ebp, align 4
  %v1_2d989 = add i32 %v0_2d989, -28
  %v2_2d989 = inttoptr i32 %v1_2d989 to i32*
  %v3_2d989 = load i32, i32* %v2_2d989, align 4
  %v1_2d98c = add i32 %v3_2d989, 12
  store i32 %v1_2d98c, i32* @eax, align 4
  %v1_2d98f = add i32 %v0_2d989, -12
  %v2_2d98f = inttoptr i32 %v1_2d98f to i32*
  %v3_2d98f = load i32, i32* %v2_2d98f, align 4
  %v1_2d992 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2d992 = icmp eq i32 %v1_2d992, %v3_2d98f
  br i1 %v3_2d992, label %bb, label %dec_label_pc_2d99b

bb:                                               ; preds = %dec_label_pc_2d97e
  %v1_2d999 = call i32 @function_2d9a0()
  br label %dec_label_pc_2d99b

dec_label_pc_2d99b:                               ; preds = %bb, %dec_label_pc_2d97e
  %v2_2d999 = phi i32 [ %v1_2d999, %bb ], [ %v1_2d98c, %dec_label_pc_2d97e ]
  ret i32 %v2_2d999
}

define i32 @function_2d9a0() local_unnamed_addr {
dec_label_pc_2d9a0:
  %v0_2d9a1 = load i32, i32* @eax, align 4
  ret i32 %v0_2d9a1
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2d9a2:
  %v2_2d9bc = load i32, i32* %arg1, align 4
  ret i32 %v2_2d9bc
}

define i32 @function_2d9de() local_unnamed_addr {
dec_label_pc_2d9de:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2d9de = load i32, i32* %ecx.global-to-local, align 4
  %v1_2d9de = add i32 %v0_2d9de, -1
  store i32 %v1_2d9de, i32* %ecx.global-to-local, align 4
  %v0_2d9e0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2d9e0
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_2d9e2:
  %v2_2d9fc = load i32, i32* %arg1, align 4
  ret i32 %v2_2d9fc
}

define i32 @function_2da1e() local_unnamed_addr {
dec_label_pc_2da1e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2da1e = load i32, i32* %ecx.global-to-local, align 4
  %v1_2da1e = add i32 %v0_2da1e, -1
  store i32 %v1_2da1e, i32* %ecx.global-to-local, align 4
  %v0_2da20 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2da20
}

define i32 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSt6vectorIhSaIhEES3_EE13_M_const_castEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2da22:
  %v2_2da42 = load i32, i32* %arg2, align 4
  %v2_2da4e = call i32 @unknown_5aff6(i32 %arg1, i32 %v2_2da42)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2da5e() local_unnamed_addr {
dec_label_pc_2da5e:
  %zf.global-to-local = alloca i1, align 1
  %v2_2da5e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2da5e = load i32, i32* @eax, align 4
  %v4_2da5e = trunc i32 %v3_2da5e to i8
  %v5_2da5e = add i8 %v4_2da5e, %v2_2da5e
  %v15_2da5e = icmp eq i8 %v5_2da5e, 0
  store i1 %v15_2da5e, i1* %zf.global-to-local, align 1
  %v21_2da5e = inttoptr i32 %v3_2da5e to i8*
  store i8 %v5_2da5e, i8* %v21_2da5e, align 1
  %v0_2da60 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2da60, label %bb, label %dec_label_pc_2da5e.dec_label_pc_2da62_crit_edge

dec_label_pc_2da5e.dec_label_pc_2da62_crit_edge:  ; preds = %dec_label_pc_2da5e
  %v2_2da60.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2da62

bb:                                               ; preds = %dec_label_pc_2da5e
  %v1_2da60 = call i32 @function_2da67()
  br label %dec_label_pc_2da62

dec_label_pc_2da62:                               ; preds = %dec_label_pc_2da5e.dec_label_pc_2da62_crit_edge, %bb
  %v2_2da60 = phi i32 [ %v2_2da60.pre, %dec_label_pc_2da5e.dec_label_pc_2da62_crit_edge ], [ %v1_2da60, %bb ]
  ret i32 %v2_2da60

; uselistorder directives
  uselistorder label %dec_label_pc_2da62, { 1, 0 }
}

define i32 @function_2da67() local_unnamed_addr {
dec_label_pc_2da67:
  %v0_2da68 = load i32, i32* @eax, align 4
  ret i32 %v0_2da68
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14invoke_visitorIK14CScriptVisitorEEPKvEENT_11result_typeEiiRSF_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2da6b:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_2daa4 = load i32, i32* %ecx.global-to-local, align 4
  %v0_2daa8 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_2daa8, 16777216
  %v12_2dac7 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2daa4, 16777216
  %v13_2dac7 = sdiv i32 %sext1, 16777216
  %v14_2dac7 = call i32 @unknown_5f33e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_2dac7, i32 %v13_2dac7, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_2dac7, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_2dad8

bb:                                               ; preds = %dec_label_pc_2da6b
  %v1_2dad6 = call i32 @function_2dadd()
  br label %dec_label_pc_2dad8

dec_label_pc_2dad8:                               ; preds = %bb, %dec_label_pc_2da6b
  %v2_2dad6 = phi i32 [ %v1_2dad6, %bb ], [ %v14_2dac7, %dec_label_pc_2da6b ]
  ret i32 %v2_2dad6

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2dadd() local_unnamed_addr {
dec_label_pc_2dadd:
  %v0_2dade = load i32, i32* @eax, align 4
  ret i32 %v0_2dade
}

define i32 @_ZNKSt6vectorI7CPubKeySaIS0_EE5beginEv(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_2dae0:
  %stack_var_-20 = alloca i32, align 4
  %v2_2db00 = load i32, i32* %arg2, align 4
  store i32 %v2_2db00, i32* %stack_var_-20, align 4
  %v2_2db05 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2db12 = call i32 @unknown_5f8e0(i32 %arg1, i32 %v2_2db05)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2db26

bb:                                               ; preds = %dec_label_pc_2dae0
  %v1_2db24 = call i32 @function_2db2b()
  br label %dec_label_pc_2db26

dec_label_pc_2db26:                               ; preds = %bb, %dec_label_pc_2dae0
  %v2_2db24 = phi i32 [ %v1_2db24, %bb ], [ %arg1, %dec_label_pc_2dae0 ]
  ret i32 %v2_2db24

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2db2b() local_unnamed_addr {
dec_label_pc_2db2b:
  %v0_2db2c = load i32, i32* @eax, align 4
  ret i32 %v0_2db2c
}

define i32 @_ZNKSt6vectorI7CPubKeySaIS0_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2db30:
  %stack_var_-20 = alloca i32, align 4
  %v1_2db50 = add i32 %arg2, 4
  %v2_2db50 = inttoptr i32 %v1_2db50 to i32*
  %v3_2db50 = load i32, i32* %v2_2db50, align 4
  store i32 %v3_2db50, i32* %stack_var_-20, align 4
  %v2_2db56 = ptrtoint i32* %stack_var_-20 to i32
  %v2_2db63 = call i32 @unknown_5f930(i32 %arg1, i32 %v2_2db56)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2db77

bb:                                               ; preds = %dec_label_pc_2db30
  %v1_2db75 = call i32 @function_2db7c()
  br label %dec_label_pc_2db77

dec_label_pc_2db77:                               ; preds = %bb, %dec_label_pc_2db30
  %v2_2db75 = phi i32 [ %v1_2db75, %bb ], [ %arg1, %dec_label_pc_2db30 ]
  ret i32 %v2_2db75

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2db7c() local_unnamed_addr {
dec_label_pc_2db7c:
  %v0_2db7d = load i32, i32* @eax, align 4
  ret i32 %v0_2db7d
}

define i32 @_ZSt4fillIPhhEvT_S1_RKT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2db80:
  %v1_2dbaa = call i32 @unknown_56d6a(i32 %arg2)
  %v1_2dbb7 = call i32 @unknown_56d6a(i32 %arg1)
  %v3_2dbca = call i32 @unknown_5f9ba(i32 %v1_2dbb7, i32 %v1_2dbaa, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dbdb

bb:                                               ; preds = %dec_label_pc_2db80
  %v1_2dbd9 = call i32 @function_2dbe0()
  br label %dec_label_pc_2dbdb

dec_label_pc_2dbdb:                               ; preds = %bb, %dec_label_pc_2db80
  %v2_2dbd9 = phi i32 [ %v1_2dbd9, %bb ], [ 0, %dec_label_pc_2db80 ]
  ret i32 %v2_2dbd9

; uselistorder directives
  uselistorder i32 (i32)* @unknown_56d6a, { 1, 0 }
}

define i32 @function_2dbe0() local_unnamed_addr {
dec_label_pc_2dbe0:
  %v0_2dbe5 = load i32, i32* @eax, align 4
  ret i32 %v0_2dbe5
}

define i32 @_ZNKSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dbe6:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dc0c

bb:                                               ; preds = %dec_label_pc_2dbe6
  %v2_2dc0a = call i32 @function_2dc11(i32 %arg1)
  br label %dec_label_pc_2dc0c

dec_label_pc_2dc0c:                               ; preds = %bb, %dec_label_pc_2dbe6
  %v3_2dc0a = phi i32 [ %v2_2dc0a, %bb ], [ %arg1, %dec_label_pc_2dbe6 ]
  ret i32 %v3_2dc0a
}

define i32 @function_2dc11(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dc11:
  %v0_2dc12 = load i32, i32* @eax, align 4
  ret i32 %v0_2dc12
}

define i32 @_ZNSaISt4pairIKjiEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dc14:
  %v0_2dc26 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2dc37 = call i32 @unknown_5fab2(i32 %arg1)
  ret i32 %v0_2dc26
}

define i32 @function_2dc42(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dc42:
  %zf.global-to-local = alloca i1, align 1
  %v0_2dc42 = load i32, i32* @eax, align 4
  %v1_2dc42 = trunc i32 %v0_2dc42 to i8
  %v2_2dc42 = load i1, i1* @cf, align 1
  %v3_2dc42 = zext i1 %v2_2dc42 to i8
  %v4_2dc42 = add i8 %v3_2dc42, %v1_2dc42
  %v13_2dc42 = icmp eq i8 %v4_2dc42, 0
  store i1 %v13_2dc42, i1* %zf.global-to-local, align 1
  %v22_2dc42 = zext i8 %v4_2dc42 to i32
  %v24_2dc42 = and i32 %v0_2dc42, -256
  %v25_2dc42 = or i32 %v22_2dc42, %v24_2dc42
  store i32 %v25_2dc42, i32* @eax, align 4
  %v1_2dc44 = inttoptr i32 %v25_2dc42 to i8*
  %v2_2dc44 = load i8, i8* %v1_2dc44, align 1
  %v5_2dc44 = add i8 %v2_2dc44, %v4_2dc42
  %v15_2dc44 = icmp eq i8 %v5_2dc44, 0
  store i1 %v15_2dc44, i1* %zf.global-to-local, align 1
  store i8 %v5_2dc44, i8* %v1_2dc44, align 1
  %v0_2dc46 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_2dc46, label %bb, label %dec_label_pc_2dc42.dec_label_pc_2dc48_crit_edge

dec_label_pc_2dc42.dec_label_pc_2dc48_crit_edge:  ; preds = %dec_label_pc_2dc42
  %v2_2dc46.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2dc48

bb:                                               ; preds = %dec_label_pc_2dc42
  %v1_2dc46 = call i32 @function_2dc4d()
  br label %dec_label_pc_2dc48

dec_label_pc_2dc48:                               ; preds = %dec_label_pc_2dc42.dec_label_pc_2dc48_crit_edge, %bb
  %v2_2dc46 = phi i32 [ %v2_2dc46.pre, %dec_label_pc_2dc42.dec_label_pc_2dc48_crit_edge ], [ %v1_2dc46, %bb ]
  ret i32 %v2_2dc46

; uselistorder directives
  uselistorder label %dec_label_pc_2dc48, { 1, 0 }
}

define i32 @function_2dc4d() local_unnamed_addr {
dec_label_pc_2dc4d:
  %v0_2dc4e = load i32, i32* @eax, align 4
  ret i32 %v0_2dc4e
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dc50:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dc73

bb:                                               ; preds = %dec_label_pc_2dc50
  %v2_2dc71 = call i32 @function_2dc78(i32 %arg1)
  br label %dec_label_pc_2dc73

dec_label_pc_2dc73:                               ; preds = %bb, %dec_label_pc_2dc50
  %v3_2dc71 = phi i32 [ %v2_2dc71, %bb ], [ 0, %dec_label_pc_2dc50 ]
  ret i32 %v3_2dc71
}

define i32 @function_2dc78(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dc78:
  %v0_2dc79 = load i32, i32* @eax, align 4
  ret i32 %v0_2dc79
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dc7a:
  ret i32 %arg2
}

define i32 @function_2dcb8() local_unnamed_addr {
dec_label_pc_2dcb8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2dcb8 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2dcb8 = add i32 %v0_2dcb8, -1
  store i32 %v1_2dcb8, i32* %ecx.global-to-local, align 4
  %v0_2dcba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2dcba
}

define i32 @_ZN9__gnu_cxx13new_allocatorIhEC1ERKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dcbc:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dce5

bb:                                               ; preds = %dec_label_pc_2dcbc
  %v3_2dce3 = call i32 @function_2dcea(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2dce5

dec_label_pc_2dce5:                               ; preds = %bb, %dec_label_pc_2dcbc
  %v4_2dce3 = phi i32 [ %v3_2dce3, %bb ], [ 0, %dec_label_pc_2dcbc ]
  ret i32 %v4_2dce3
}

define i32 @function_2dcea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dcea:
  %v0_2dceb = load i32, i32* @eax, align 4
  ret i32 %v0_2dceb
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dcec:
  ret i32 -1
}

define i32 @function_2dd14(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dd14:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2dd19() local_unnamed_addr {
dec_label_pc_2dd19:
  %eax.global-to-local = alloca i32, align 4
  %v0_2dd1a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2dd1a
}

define i32 @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPhjhEEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dd1b:
  %v3_2dd52 = call i32 @unknown_5fbe3(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dd63

bb:                                               ; preds = %dec_label_pc_2dd1b
  %v1_2dd61 = call i32 @function_2dd68()
  br label %dec_label_pc_2dd63

dec_label_pc_2dd63:                               ; preds = %bb, %dec_label_pc_2dd1b
  %v2_2dd61 = phi i32 [ %v1_2dd61, %bb ], [ 0, %dec_label_pc_2dd1b ]
  ret i32 %v2_2dd61
}

define i32 @function_2dd68() local_unnamed_addr {
dec_label_pc_2dd68:
  %v0_2dd69 = load i32, i32* @eax, align 4
  ret i32 %v0_2dd69
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEELb1EE7_S_baseES6_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dd6a:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2dd81 = ptrtoint i32* %stack_var_-32 to i32
  %v1_2dd87 = call i32 @unknown_4a112(i32 %v2_2dd81)
  %v1_2dd8c = inttoptr i32 %v1_2dd87 to i32*
  %v2_2dd8c = load i32, i32* %v1_2dd8c, align 4
  store i32 %v2_2dd8c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2dd9a

bb:                                               ; preds = %dec_label_pc_2dd6a
  %v1_2dd98 = call i32 @function_2dd9f()
  br label %dec_label_pc_2dd9a

dec_label_pc_2dd9a:                               ; preds = %bb, %dec_label_pc_2dd6a
  %v2_2dd98 = phi i32 [ %v1_2dd98, %bb ], [ %v2_2dd8c, %dec_label_pc_2dd6a ]
  ret i32 %v2_2dd98
}

define i32 @function_2dd9f() local_unnamed_addr {
dec_label_pc_2dd9f:
  %v0_2dda0 = load i32, i32* @eax, align 4
  ret i32 %v0_2dda0
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2dda1:
  %v12_2ddcc = icmp eq i32 %arg2, %arg1
  br i1 %v12_2ddcc, label %bb, label %dec_label_pc_2ddd9

bb:                                               ; preds = %dec_label_pc_2dda1
  %v4_2ddd7 = call i32 @function_2ddf2(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ddd9

dec_label_pc_2ddd9:                               ; preds = %bb, %dec_label_pc_2dda1
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ddf2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ddf2:
  %v0_2ddf2 = load i32, i32* @ebp, align 4
  %v1_2ddf2 = add i32 %v0_2ddf2, -16
  %v2_2ddf2 = inttoptr i32 %v1_2ddf2 to i32*
  %v3_2ddf2 = load i32, i32* %v2_2ddf2, align 4
  %v2_2ddf5 = add i32 %v0_2ddf2, -36
  %v3_2ddf5 = inttoptr i32 %v2_2ddf5 to i32*
  %v4_2ddf5 = load i32, i32* %v3_2ddf5, align 4
  %v5_2ddf5 = add i32 %v4_2ddf5, %v3_2ddf2
  store i32 %v5_2ddf5, i32* @eax, align 4
  %v1_2ddf8 = add i32 %v0_2ddf2, -12
  %v2_2ddf8 = inttoptr i32 %v1_2ddf8 to i32*
  %v3_2ddf8 = load i32, i32* %v2_2ddf8, align 4
  %v1_2ddfb = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ddfb = icmp eq i32 %v1_2ddfb, %v3_2ddf8
  br i1 %v3_2ddfb, label %bb, label %dec_label_pc_2de04

bb:                                               ; preds = %dec_label_pc_2ddf2
  %v1_2de02 = call i32 @function_2de09()
  br label %dec_label_pc_2de04

dec_label_pc_2de04:                               ; preds = %bb, %dec_label_pc_2ddf2
  %v2_2de02 = phi i32 [ %v1_2de02, %bb ], [ %v5_2ddf5, %dec_label_pc_2ddf2 ]
  ret i32 %v2_2de02
}

define i32 @function_2de09() local_unnamed_addr {
dec_label_pc_2de09:
  %v0_2de0a = load i32, i32* @eax, align 4
  ret i32 %v0_2de0a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de0b:
  %v1_2de25 = add i32 %arg1, 16
  store i32 %v1_2de25, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2de34

bb:                                               ; preds = %dec_label_pc_2de0b
  %v2_2de32 = call i32 @function_2de39(i32 %arg1)
  br label %dec_label_pc_2de34

dec_label_pc_2de34:                               ; preds = %bb, %dec_label_pc_2de0b
  %v3_2de32 = phi i32 [ %v2_2de32, %bb ], [ %v1_2de25, %dec_label_pc_2de0b ]
  ret i32 %v3_2de32
}

define i32 @function_2de39(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de39:
  %v0_2de3a = load i32, i32* @eax, align 4
  ret i32 %v0_2de3a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de3b:
  %v1_2de55 = add i32 %arg1, 16
  store i32 %v1_2de55, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2de64

bb:                                               ; preds = %dec_label_pc_2de3b
  %v2_2de62 = call i32 @function_2de69(i32 %arg1)
  br label %dec_label_pc_2de64

dec_label_pc_2de64:                               ; preds = %bb, %dec_label_pc_2de3b
  %v3_2de62 = phi i32 [ %v2_2de62, %bb ], [ %v1_2de55, %dec_label_pc_2de3b ]
  ret i32 %v3_2de62
}

define i32 @function_2de69(i32 %arg1) local_unnamed_addr {
dec_label_pc_2de69:
  %v0_2de6a = load i32, i32* @eax, align 4
  ret i32 %v0_2de6a
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE14_M_create_nodeERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2de6c:
  %stack_var_-17 = alloca i32, align 4
  %v1_2de90 = call i32 @unknown_5fd8c(i32 %arg1)
  %v1_2de9b = add i32 %v1_2de90, 16
  %v1_2dea1 = call i32 @unknown_5044a(i32 %v1_2de9b)
  %v2_2dea8 = ptrtoint i32* %stack_var_-17 to i32
  %v2_2deb5 = call i32 @unknown_56c9c(i32 %v2_2dea8, i32 %arg1)
  %v3_2dece = call i32 @unknown_5fdd2(i32 %v2_2dea8, i32 %v1_2dea1, i32 %arg2)
  %v1_2ded9 = call i32 @unknown_56cec(i32 %v2_2dea8)
  ret i32 %v1_2de90

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2dee8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dee8:
  %v2_2dee8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_2dee8 = load i32, i32* @eax, align 4
  %v4_2dee8 = trunc i32 %v3_2dee8 to i8
  %v5_2dee8 = add i8 %v4_2dee8, %v2_2dee8
  %v21_2dee8 = inttoptr i32 %v3_2dee8 to i8*
  store i8 %v5_2dee8, i8* %v21_2dee8, align 1
  %v0_2deea = load i32, i32* @ebp, align 4
  %v1_2deea = load i32, i32* @eax, align 4
  %v3_2deea = add i32 %v0_2deea, -24
  %v4_2deea = add i32 %v3_2deea, %v1_2deea
  %v5_2deea = inttoptr i32 %v4_2deea to i8*
  %v6_2deea = load i8, i8* %v5_2deea, align 1
  %v7_2deea = load i32, i32* @edx, align 4
  %v8_2deea = udiv i32 %v7_2deea, 256
  %v9_2deea = trunc i32 %v8_2deea to i8
  %v10_2deea = add i8 %v9_2deea, %v6_2deea
  store i8 %v10_2deea, i8* %v5_2deea, align 1
  %v31_2deea = load i32, i32* @eax, align 4
  ret i32 %v31_2deea
}

define i32 @function_2def2() local_unnamed_addr {
dec_label_pc_2def2:
  %eax.global-to-local = alloca i32, align 4
  %v0_2def6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2def6
}

define i32 @_ZSt11__addressofI6CKeyIDEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2def7:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2df1d

bb:                                               ; preds = %dec_label_pc_2def7
  %v2_2df1b = call i32 @function_2df22(i32 %arg1)
  br label %dec_label_pc_2df1d

dec_label_pc_2df1d:                               ; preds = %bb, %dec_label_pc_2def7
  %v3_2df1b = phi i32 [ %v2_2df1b, %bb ], [ %arg1, %dec_label_pc_2def7 ]
  ret i32 %v3_2df1b
}

define i32 @function_2df22(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df22:
  %v0_2df23 = load i32, i32* @eax, align 4
  ret i32 %v0_2df23
}

define i32 @_ZSt4swapIhEvRT_S1_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2df24:
  %tmp104 = inttoptr i32 %arg2 to i8*
  %v2_2df44 = load i8, i8* %arg1, align 1
  %v2_2df4d = load i8, i8* %tmp104, align 1
  store i8 %v2_2df4d, i8* %arg1, align 1
  store i8 %v2_2df44, i8* %tmp104, align 1
  ret i32 0
}

define i32 @function_2df6e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2df6e:
  %v0_2df6e = load i32, i32* @ecx, align 4
  %v1_2df6e = add i32 %v0_2df6e, -1
  store i32 %v1_2df6e, i32* @ecx, align 4
  %v0_2df70 = load i32, i32* @eax, align 4
  ret i32 %v0_2df70
}

define i32 @_ZSt22__copy_move_backward_aILb0EPhS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2df71:
  ret i32 %arg2
}

define i32 @function_2dfa4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfa4:
  %v0_2dfa6 = load i32, i32* @ebp, align 4
  %v1_2dfa6 = add i32 %v0_2dfa6, -28
  %v2_2dfa6 = inttoptr i32 %v1_2dfa6 to i32*
  %v3_2dfa6 = load i32, i32* %v2_2dfa6, align 4
  %v1_2dfac = call i32 @unknown_5ff33(i32 %v3_2dfa6)
  store i32 %v1_2dfac, i32* @eax, align 4
  %v0_2dfb1 = load i32, i32* @ebp, align 4
  %v1_2dfb1 = add i32 %v0_2dfb1, -12
  %v2_2dfb1 = inttoptr i32 %v1_2dfb1 to i32*
  %v3_2dfb1 = load i32, i32* %v2_2dfb1, align 4
  %v1_2dfb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2dfb4 = icmp eq i32 %v1_2dfb4, %v3_2dfb1
  br i1 %v3_2dfb4, label %bb, label %dec_label_pc_2dfbd

bb:                                               ; preds = %dec_label_pc_2dfa4
  %v1_2dfbb = call i32 @function_2dfc2()
  br label %dec_label_pc_2dfbd

dec_label_pc_2dfbd:                               ; preds = %bb, %dec_label_pc_2dfa4
  %v2_2dfbb = phi i32 [ %v1_2dfbb, %bb ], [ %v1_2dfac, %dec_label_pc_2dfa4 ]
  ret i32 %v2_2dfbb
}

define i32 @function_2dfc2() local_unnamed_addr {
dec_label_pc_2dfc2:
  %v0_2dfc3 = load i32, i32* @eax, align 4
  ret i32 %v0_2dfc3
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2dfc4:
  ret i32 %arg1
}

define i32 @function_2dfd2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2dfd2:
  %v0_2dfd4 = load i32, i32* @ebp, align 4
  %v1_2dfd4 = add i32 %v0_2dfd4, 1
  %v9_2dfd4 = icmp eq i32 %v1_2dfd4, 0
  store i32 %v1_2dfd4, i32* @ebp, align 4
  %v0_2dfd5 = load i32, i32* @ecx, align 4
  %v1_2dfd5 = add i32 %v0_2dfd5, -1
  store i32 %v1_2dfd5, i32* @ecx, align 4
  %v2_2dfd5 = icmp eq i32 %v1_2dfd5, 0
  %v4_2dfd5 = or i1 %v9_2dfd4, %v2_2dfd5
  br i1 %v4_2dfd5, label %dec_label_pc_2dfd7, label %bb

bb:                                               ; preds = %dec_label_pc_2dfd2
  %v6_2dfd5 = call i32 @__stack_chk_fail.1183()
  %v1_2dfdc.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2dfd7

dec_label_pc_2dfd7:                               ; preds = %dec_label_pc_2dfd2, %bb
  %v1_2dfdc = phi i32 [ %v1_2dfd4, %dec_label_pc_2dfd2 ], [ %v1_2dfdc.pre, %bb ]
  %v0_2dfd7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2dfdc = add i32 %v1_2dfdc, -12
  %v3_2dfdc = inttoptr i32 %v2_2dfdc to i32*
  store i32 %v0_2dfd7, i32* %v3_2dfdc, align 4
  %v0_2dfe1 = load i32, i32* @ebp, align 4
  %v1_2dfe1 = add i32 %v0_2dfe1, -28
  %v2_2dfe1 = inttoptr i32 %v1_2dfe1 to i32*
  %v3_2dfe1 = load i32, i32* %v2_2dfe1, align 4
  store i32 %v3_2dfe1, i32* @eax, align 4
  %v1_2dfe4 = add i32 %v0_2dfe1, -12
  %v2_2dfe4 = inttoptr i32 %v1_2dfe4 to i32*
  %v3_2dfe4 = load i32, i32* %v2_2dfe4, align 4
  %v1_2dfe7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2dfe7 = icmp eq i32 %v1_2dfe7, %v3_2dfe4
  br i1 %v3_2dfe7, label %bb3, label %dec_label_pc_2dff0

bb3:                                              ; preds = %dec_label_pc_2dfd7
  %v1_2dfee = call i32 @function_2dff5()
  br label %dec_label_pc_2dff0

dec_label_pc_2dff0:                               ; preds = %bb3, %dec_label_pc_2dfd7
  %v2_2dfee = phi i32 [ %v1_2dfee, %bb3 ], [ %v3_2dfe1, %dec_label_pc_2dfd7 ]
  ret i32 %v2_2dfee

; uselistorder directives
  uselistorder i32 %v1_2dfd5, { 1, 0 }
  uselistorder label %dec_label_pc_2dfd7, { 1, 0 }
}

define i32 @function_2dff5() local_unnamed_addr {
dec_label_pc_2dff5:
  %v0_2dff6 = load i32, i32* @eax, align 4
  ret i32 %v0_2dff6
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEENSt15iterator_traitsIT_E15difference_typeES9_S9_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2dff9:
  ret i32 0
}

define i32 @function_2e01d(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e01d:
  %v0_2e01d = load i32, i32* @ebp, align 4
  %v1_2e01d = add i32 %v0_2e01d, -28
  %v1_2e024 = add i32 %v0_2e01d, -32
  %v2_2e02a = call i32 @unknown_45045(i32 %v1_2e024, i32 %v1_2e01d)
  store i32 %v2_2e02a, i32* @eax, align 4
  %v0_2e02f = load i32, i32* @ebp, align 4
  %v1_2e02f = add i32 %v0_2e02f, -12
  %v2_2e02f = inttoptr i32 %v1_2e02f to i32*
  %v3_2e02f = load i32, i32* %v2_2e02f, align 4
  %v1_2e032 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e032 = icmp eq i32 %v1_2e032, %v3_2e02f
  br i1 %v3_2e032, label %bb, label %dec_label_pc_2e03b

bb:                                               ; preds = %dec_label_pc_2e01d
  %v1_2e039 = call i32 @function_2e040()
  br label %dec_label_pc_2e03b

dec_label_pc_2e03b:                               ; preds = %bb, %dec_label_pc_2e01d
  %v2_2e039 = phi i32 [ %v1_2e039, %bb ], [ %v2_2e02a, %dec_label_pc_2e01d ]
  ret i32 %v2_2e039
}

declare i32 @__stack_chk_fail.1183() local_unnamed_addr

define i32 @function_2e040() local_unnamed_addr {
dec_label_pc_2e040:
  %v0_2e041 = load i32, i32* @eax, align 4
  ret i32 %v0_2e041
}

define i32 @_ZSt19__iterator_categoryIPKhENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e042:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e06e

bb:                                               ; preds = %dec_label_pc_2e042
  %v3_2e06c = call i32 @function_2e073(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2e06e

dec_label_pc_2e06e:                               ; preds = %bb, %dec_label_pc_2e042
  %v4_2e06c = phi i32 [ %v3_2e06c, %bb ], [ %arg1, %dec_label_pc_2e042 ]
  ret i32 %v4_2e06c
}

define i32 @function_2e073(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e073:
  %v0_2e074 = load i32, i32* @eax, align 4
  ret i32 %v0_2e074
}

define i32 @_ZSt10__distanceIPKhENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag() local_unnamed_addr {
dec_label_pc_2e077:
  %eax.global-to-local = alloca i32, align 4
  %v5_2e077 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2e077
}

define i32 @function_2e078(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e078:
  %stack_var_0 = alloca i32, align 4
  %v1_2e078 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_2e078, i32* @ebp, align 4
  %v2_2e0a3 = sub i32 %arg2, %arg1
  store i32 %v2_2e0a3, i32* @ecx, align 4
  store i32 %v2_2e0a3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e0b3

bb:                                               ; preds = %dec_label_pc_2e078
  %v4_2e0b1 = sext i8 %arg3 to i32
  %v5_2e0b1 = call i32 @function_2e0b8(i32 %v4_2e0b1, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2e0b3

dec_label_pc_2e0b3:                               ; preds = %bb, %dec_label_pc_2e078
  %v6_2e0b1 = phi i32 [ %v5_2e0b1, %bb ], [ %v2_2e0a3, %dec_label_pc_2e078 ]
  ret i32 %v6_2e0b1
}

define i32 @function_2e0b8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e0b8:
  %v0_2e0b9 = load i32, i32* @eax, align 4
  ret i32 %v0_2e0b9
}

define i32 @_ZSt18uninitialized_copyIPKhPhET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e0ba:
  ret i32 %arg1
}

define i32 @function_2e0f2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e0f2:
  %v2_2e0f2 = load i32, i32* @edi, align 4
  %v3_2e0f2 = sub i32 0, %v2_2e0f2
  %v15_2e0f2 = inttoptr i32 %v2_2e0f2 to i32*
  store i32 %v3_2e0f2, i32* %v15_2e0f2, align 4
  %v0_2e0f4 = load i32, i32* @eax, align 4
  %v4_2e0f4 = mul i32 %v0_2e0f4, 2
  store i32 %v4_2e0f4, i32* @eax, align 4
  %v0_2e0f6 = load i32, i32* @ebp, align 4
  %v1_2e0f6 = add i32 %v0_2e0f6, -12
  %v2_2e0f6 = inttoptr i32 %v1_2e0f6 to i32*
  %v3_2e0f6 = load i32, i32* %v2_2e0f6, align 4
  %v1_2e0f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e0f9 = icmp eq i32 %v1_2e0f9, %v3_2e0f6
  br i1 %v3_2e0f9, label %bb, label %dec_label_pc_2e102

bb:                                               ; preds = %dec_label_pc_2e0f2
  %v1_2e100 = call i32 @function_2e107()
  br label %dec_label_pc_2e102

dec_label_pc_2e102:                               ; preds = %bb, %dec_label_pc_2e0f2
  %v2_2e100 = phi i32 [ %v1_2e100, %bb ], [ %v4_2e0f4, %dec_label_pc_2e0f2 ]
  ret i32 %v2_2e100

; uselistorder directives
  uselistorder i32 %v4_2e0f4, { 1, 0 }
}

define i32 @function_2e107() local_unnamed_addr {
dec_label_pc_2e107:
  %v0_2e108 = load i32, i32* @eax, align 4
  ret i32 %v0_2e108
}

define i32 @_ZSt9__advanceIN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEiEvRT_T0_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2e109:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_2e12d = ptrtoint i32* %stack_var_-36 to i32
  %v2_2e13a = call i32 @unknown_4523b(i32 %arg1, i32 %v2_2e12d)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e14b

bb:                                               ; preds = %dec_label_pc_2e109
  %v1_2e149 = call i32 @function_2e150()
  br label %dec_label_pc_2e14b

dec_label_pc_2e14b:                               ; preds = %bb, %dec_label_pc_2e109
  %v2_2e149 = phi i32 [ %v1_2e149, %bb ], [ 0, %dec_label_pc_2e109 ]
  ret i32 %v2_2e149
}

define i32 @function_2e150() local_unnamed_addr {
dec_label_pc_2e150:
  %v0_2e151 = load i32, i32* @eax, align 4
  ret i32 %v0_2e151
}

define i32 @_ZSt19__iterator_categoryIPhENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e152:
  %v0_2e164 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_2e164
}

define i32 @function_2e16c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e16c:
  %v0_2e16f = load i32, i32* @ebp, align 4
  %v1_2e16f = add i32 %v0_2e16f, -28
  %v2_2e16f = inttoptr i32 %v1_2e16f to i32*
  %v3_2e16f = load i32, i32* %v2_2e16f, align 4
  store i32 %v3_2e16f, i32* @eax, align 4
  %v1_2e172 = add i32 %v0_2e16f, -12
  %v2_2e172 = inttoptr i32 %v1_2e172 to i32*
  %v3_2e172 = load i32, i32* %v2_2e172, align 4
  %v1_2e175 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e175 = icmp eq i32 %v1_2e175, %v3_2e172
  br i1 %v3_2e175, label %bb, label %dec_label_pc_2e17e

bb:                                               ; preds = %dec_label_pc_2e16c
  %v1_2e17c = call i32 @function_2e183()
  br label %dec_label_pc_2e17e

dec_label_pc_2e17e:                               ; preds = %bb, %dec_label_pc_2e16c
  %v2_2e17c = phi i32 [ %v1_2e17c, %bb ], [ %v3_2e16f, %dec_label_pc_2e16c ]
  ret i32 %v2_2e17c
}

define i32 @function_2e183() local_unnamed_addr {
dec_label_pc_2e183:
  %v0_2e184 = load i32, i32* @eax, align 4
  ret i32 %v0_2e184
}

define i32 @_ZSt10__distanceIPhENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2e187:
  %v2_2e1b3 = sub i32 %arg2, %arg1
  store i32 %v2_2e1b3, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e1c3

bb:                                               ; preds = %dec_label_pc_2e187
  %v4_2e1c1 = sext i8 %arg3 to i32
  %v5_2e1c1 = call i32 @function_2e1c8(i32 %v4_2e1c1, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2e1c3

dec_label_pc_2e1c3:                               ; preds = %bb, %dec_label_pc_2e187
  %v6_2e1c1 = phi i32 [ %v5_2e1c1, %bb ], [ %v2_2e1b3, %dec_label_pc_2e187 ]
  ret i32 %v6_2e1c1
}

define i32 @function_2e1c8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e1c8:
  %v0_2e1c9 = load i32, i32* @eax, align 4
  ret i32 %v0_2e1c9
}

define i32 @_ZSt14__copy_move_a2ILb0EPhN9__gnu_cxx17__normal_iteratorIS0_St6vectorIhSaIhEEEEET1_T0_S8_S7_() local_unnamed_addr {
dec_label_pc_2e1ca:
  %eax.global-to-local = alloca i32, align 4
  %v5_2e1ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2e1ca
}

define i32 @function_2e1cb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e1cb:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_2e1cb = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_2e1cb, i32* @ebp, align 4
  %v1_2e1fb = call i32 @unknown_572cf(i32 %tmp2)
  %v1_2e208 = call i32 @unknown_573b4(i32 %tmp4)
  ret i32 %v1_2e208
}

define i32 @function_2e20e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e20e:
  %v0_2e20e = load i32, i32* @eax, align 4
  ret i32 %v0_2e20e
}

define i32 @function_2e251(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e251:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e252(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e252:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e252 = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e252 = add i32 %v0_2e252, 1583034564
  %v2_2e252 = inttoptr i32 %v1_2e252 to i32*
  %v3_2e252 = load i32, i32* %v2_2e252, align 4
  %v4_2e252 = add i32 %v3_2e252, 1
  store i32 %v4_2e252, i32* %v2_2e252, align 4
  %v0_2e259 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e259
}

define i32 @_ZSt9__advanceIPhiEvRT_T0_St26random_access_iterator_tag(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e25c:
  ret i32 %arg1
}

define i32 @function_2e268() local_unnamed_addr {
dec_label_pc_2e268:
  %v0_2e268 = load i32, i32* @ebp, align 4
  %v1_2e268 = add i32 %v0_2e268, 12
  %v2_2e268 = inttoptr i32 %v1_2e268 to i32*
  %v3_2e268 = load i32, i32* %v2_2e268, align 4
  %v2_2e26b = add i32 %v0_2e268, -32
  %v3_2e26b = inttoptr i32 %v2_2e26b to i32*
  store i32 %v3_2e268, i32* %v3_2e26b, align 4
  %v0_2e26e = load i32, i32* @ebp, align 4
  %v1_2e26e = add i32 %v0_2e26e, 16
  %v2_2e26e = inttoptr i32 %v1_2e26e to i8*
  %v3_2e26e = load i8, i8* %v2_2e26e, align 1
  %v3_2e272 = add i32 %v0_2e26e, -33
  %v4_2e272 = inttoptr i32 %v3_2e272 to i8*
  store i8 %v3_2e26e, i8* %v4_2e272, align 1
  %v0_2e275 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2e27b = load i32, i32* @ebp, align 4
  %v2_2e27b = add i32 %v1_2e27b, -12
  %v3_2e27b = inttoptr i32 %v2_2e27b to i32*
  store i32 %v0_2e275, i32* %v3_2e27b, align 4
  %v0_2e280 = load i32, i32* @ebp, align 4
  %v1_2e280 = add i32 %v0_2e280, -28
  %v2_2e280 = inttoptr i32 %v1_2e280 to i32*
  %v3_2e280 = load i32, i32* %v2_2e280, align 4
  %v1_2e283 = inttoptr i32 %v3_2e280 to i32*
  %v2_2e283 = load i32, i32* %v1_2e283, align 4
  %v1_2e285 = add i32 %v0_2e280, -32
  %v2_2e285 = inttoptr i32 %v1_2e285 to i32*
  %v3_2e285 = load i32, i32* %v2_2e285, align 4
  %v2_2e288 = add i32 %v3_2e285, %v2_2e283
  %v3_2e28a = load i32, i32* %v2_2e280, align 4
  %v2_2e28d = inttoptr i32 %v3_2e28a to i32*
  store i32 %v2_2e288, i32* %v2_2e28d, align 4
  %v0_2e28f = load i32, i32* @ebp, align 4
  %v1_2e28f = add i32 %v0_2e28f, -12
  %v2_2e28f = inttoptr i32 %v1_2e28f to i32*
  %v3_2e28f = load i32, i32* %v2_2e28f, align 4
  %v1_2e292 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e292 = xor i32 %v1_2e292, %v3_2e28f
  %v3_2e292 = icmp eq i32 %v2_2e292, 0
  store i32 %v2_2e292, i32* @eax, align 4
  br i1 %v3_2e292, label %bb, label %dec_label_pc_2e29b

bb:                                               ; preds = %dec_label_pc_2e268
  %v1_2e299 = call i32 @function_2e2a0()
  br label %dec_label_pc_2e29b

dec_label_pc_2e29b:                               ; preds = %bb, %dec_label_pc_2e268
  %v2_2e299 = phi i32 [ %v1_2e299, %bb ], [ %v2_2e292, %dec_label_pc_2e268 ]
  ret i32 %v2_2e299
}

define i32 @function_2e2a0() local_unnamed_addr {
dec_label_pc_2e2a0:
  %v0_2e2a1 = load i32, i32* @eax, align 4
  ret i32 %v0_2e2a1
}

define i32 @_ZSt12__miter_baseIPKhENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e2a2:
  %v1_2e2bf = call i32 @unknown_60324(i32 %arg1)
  store i32 %v1_2e2bf, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e2d0

bb:                                               ; preds = %dec_label_pc_2e2a2
  %v1_2e2ce = call i32 @function_2e2d5()
  br label %dec_label_pc_2e2d0

dec_label_pc_2e2d0:                               ; preds = %bb, %dec_label_pc_2e2a2
  %v2_2e2ce = phi i32 [ %v1_2e2ce, %bb ], [ %v1_2e2bf, %dec_label_pc_2e2a2 ]
  ret i32 %v2_2e2ce
}

define i32 @function_2e2d5() local_unnamed_addr {
dec_label_pc_2e2d5:
  %v0_2e2d6 = load i32, i32* @eax, align 4
  ret i32 %v0_2e2d6
}

define i32 @_ZSt14__copy_move_a2ILb0EPKhN9__gnu_cxx17__normal_iteratorIPhSt6vectorIhSaIhEEEEET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2e2d7:
  %v1_2e308 = call i32 @unknown_573dc(i32 %arg4)
  %v1_2e315 = call i32 @unknown_60386(i32 %arg3)
  %v1_2e322 = call i32 @unknown_60386(i32 %arg2)
  %v3_2e332 = call i32 @unknown_57411(i32 %v1_2e322, i32 %v1_2e315, i32 %v1_2e308)
  ret i32 %v3_2e332

; uselistorder directives
  uselistorder i32 (i32)* @unknown_60386, { 1, 0 }
}

define i32 @function_2e33c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e33c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e35f(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e35f:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_2e35f = load i32, i32* %ebx.global-to-local, align 4
  %v1_2e35f = add i32 %v0_2e35f, 1583034564
  %v2_2e35f = inttoptr i32 %v1_2e35f to i32*
  %v3_2e35f = load i32, i32* %v2_2e35f, align 4
  %v4_2e35f = add i32 %v3_2e35f, 1
  store i32 %v4_2e35f, i32* %v2_2e35f, align 4
  %v0_2e366 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e366
}

define i32 @_ZSt9__advanceIPKhiEvRT_T0_St26random_access_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e369:
  %v2_2e390 = load i32, i32* %arg1, align 4
  %v2_2e395 = add i32 %v2_2e390, %arg2
  store i32 %v2_2e395, i32* %arg1, align 4
  ret i32 0
}

define i32 @function_2e3a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e3a8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2e3ad() local_unnamed_addr {
dec_label_pc_2e3ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e3ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e3ae
}

define i32 @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKhSt6vectorIhSaIhEEEEPhET1_T0_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e3af:
  %v1_2e3da = call i32 @unknown_57599(i32 %arg3)
  %v1_2e3e7 = call i32 @unknown_51e70(i32 %arg2)
  %v1_2e3f4 = call i32 @unknown_51e70(i32 %arg1)
  %v3_2e404 = call i32 @unknown_574e9(i32 %v1_2e3f4, i32 %v1_2e3e7, i32 %v1_2e3da)
  store i32 %v3_2e404, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e415

bb:                                               ; preds = %dec_label_pc_2e3af
  %v1_2e413 = call i32 @function_2e41a()
  br label %dec_label_pc_2e415

dec_label_pc_2e415:                               ; preds = %bb, %dec_label_pc_2e3af
  %v2_2e413 = phi i32 [ %v1_2e413, %bb ], [ %v3_2e404, %dec_label_pc_2e3af ]
  ret i32 %v2_2e413

; uselistorder directives
  uselistorder i32 (i32)* @unknown_51e70, { 1, 0 }
}

define i32 @function_2e41a() local_unnamed_addr {
dec_label_pc_2e41a:
  %v0_2e420 = load i32, i32* @eax, align 4
  ret i32 %v0_2e420
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e422:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e445

bb:                                               ; preds = %dec_label_pc_2e422
  %v2_2e443 = call i32 @function_2e44a(i32 %arg1)
  br label %dec_label_pc_2e445

dec_label_pc_2e445:                               ; preds = %bb, %dec_label_pc_2e422
  %v3_2e443 = phi i32 [ %v2_2e443, %bb ], [ 0, %dec_label_pc_2e422 ]
  ret i32 %v3_2e443
}

define i32 @function_2e44a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e44a:
  %v0_2e44b = load i32, i32* @eax, align 4
  ret i32 %v0_2e44b
}

define i32 @_ZSt11__addressofI5CTxInEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e44c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e472

bb:                                               ; preds = %dec_label_pc_2e44c
  %v2_2e470 = call i32 @function_2e477(i32 %arg1)
  br label %dec_label_pc_2e472

dec_label_pc_2e472:                               ; preds = %bb, %dec_label_pc_2e44c
  %v3_2e470 = phi i32 [ %v2_2e470, %bb ], [ %arg1, %dec_label_pc_2e44c ]
  ret i32 %v3_2e470
}

define i32 @function_2e477(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e477:
  %v4_2e477 = load i32, i32* @eax, align 4
  ret i32 %v4_2e477
}

define i32 @function_2e478(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e478:
  %v0_2e478 = load i32, i32* @eax, align 4
  ret i32 %v0_2e478
}

define i32 @_ZSt8_DestroyI5CTxInEvPT_() local_unnamed_addr {
dec_label_pc_2e479:
  %eax.global-to-local = alloca i32, align 4
  %v2_2e47a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_2e47a
}

define i32 @function_2e47e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e47e:
  %v0_2e486 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2e48b = load i32, i32* @ebp, align 4
  %v2_2e48b = add i32 %v1_2e48b, -12
  %v3_2e48b = inttoptr i32 %v2_2e48b to i32*
  store i32 %v0_2e486, i32* %v3_2e48b, align 4
  %v0_2e490 = load i32, i32* @ebp, align 4
  %v1_2e490 = add i32 %v0_2e490, -28
  %v2_2e490 = inttoptr i32 %v1_2e490 to i32*
  %v3_2e490 = load i32, i32* %v2_2e490, align 4
  %v1_2e496 = call i32 @unknown_41fe3(i32 %v3_2e490)
  %v0_2e49b = load i32, i32* @ebp, align 4
  %v1_2e49b = add i32 %v0_2e49b, -12
  %v2_2e49b = inttoptr i32 %v1_2e49b to i32*
  %v3_2e49b = load i32, i32* %v2_2e49b, align 4
  %v1_2e49e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e49e = xor i32 %v1_2e49e, %v3_2e49b
  %v3_2e49e = icmp eq i32 %v2_2e49e, 0
  store i32 %v2_2e49e, i32* @eax, align 4
  br i1 %v3_2e49e, label %bb, label %dec_label_pc_2e4a7

bb:                                               ; preds = %dec_label_pc_2e47e
  %v1_2e4a5 = call i32 @function_2e4ac()
  br label %dec_label_pc_2e4a7

dec_label_pc_2e4a7:                               ; preds = %bb, %dec_label_pc_2e47e
  %v2_2e4a5 = phi i32 [ %v1_2e4a5, %bb ], [ %v2_2e49e, %dec_label_pc_2e47e ]
  ret i32 %v2_2e4a5
}

define i32 @function_2e4ac() local_unnamed_addr {
dec_label_pc_2e4ac:
  %v0_2e4ad = load i32, i32* @eax, align 4
  ret i32 %v0_2e4ad
}

define i32 @_ZSt11__addressofI6CTxOutEPT_RS1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4ae:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e4d4

bb:                                               ; preds = %dec_label_pc_2e4ae
  %v2_2e4d2 = call i32 @function_2e4d9(i32 %arg1)
  br label %dec_label_pc_2e4d4

dec_label_pc_2e4d4:                               ; preds = %bb, %dec_label_pc_2e4ae
  %v3_2e4d2 = phi i32 [ %v2_2e4d2, %bb ], [ %arg1, %dec_label_pc_2e4ae ]
  ret i32 %v3_2e4d2
}

define i32 @function_2e4d9(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4d9:
  %v0_2e4da = load i32, i32* @eax, align 4
  ret i32 %v0_2e4da
}

define i32 @_ZSt8_DestroyI6CTxOutEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e4db:
  %v1_2e4f8 = call i32 @unknown_41ddd(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e509

bb:                                               ; preds = %dec_label_pc_2e4db
  %v1_2e507 = call i32 @function_2e50e()
  br label %dec_label_pc_2e509

dec_label_pc_2e509:                               ; preds = %bb, %dec_label_pc_2e4db
  %v2_2e507 = phi i32 [ %v1_2e507, %bb ], [ 0, %dec_label_pc_2e4db ]
  ret i32 %v2_2e507
}

define i32 @function_2e50e() local_unnamed_addr {
dec_label_pc_2e50e:
  %v0_2e50f = load i32, i32* @eax, align 4
  ret i32 %v0_2e50f
}

define i32 @_ZN9__gnu_cxx13new_allocatorI6CTxOutEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e510:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e539

bb:                                               ; preds = %dec_label_pc_2e510
  %v3_2e537 = call i32 @function_2e53e(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2e539

dec_label_pc_2e539:                               ; preds = %bb, %dec_label_pc_2e510
  %v4_2e537 = phi i32 [ %v3_2e537, %bb ], [ 0, %dec_label_pc_2e510 ]
  ret i32 %v4_2e537
}

define i32 @function_2e53e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e53e:
  %v0_2e53f = load i32, i32* @eax, align 4
  ret i32 %v0_2e53f
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CTxOutE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e540:
  ret i32 %arg1
}

define i32 @function_2e54c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e54c:
  %v0_2e54c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2e552 = load i32, i32* @ebp, align 4
  %v2_2e552 = add i32 %v1_2e552, -12
  %v3_2e552 = inttoptr i32 %v2_2e552 to i32*
  store i32 %v0_2e54c, i32* %v3_2e552, align 4
  store i32 214748364, i32* @eax, align 4
  %v0_2e55c = load i32, i32* @ebp, align 4
  %v1_2e55c = add i32 %v0_2e55c, -12
  %v2_2e55c = inttoptr i32 %v1_2e55c to i32*
  %v3_2e55c = load i32, i32* %v2_2e55c, align 4
  %v1_2e55f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e55f = icmp eq i32 %v1_2e55f, %v3_2e55c
  br i1 %v3_2e55f, label %bb, label %dec_label_pc_2e568

bb:                                               ; preds = %dec_label_pc_2e54c
  %v1_2e566 = call i32 @function_2e56d()
  br label %dec_label_pc_2e568

dec_label_pc_2e568:                               ; preds = %bb, %dec_label_pc_2e54c
  %v2_2e566 = phi i32 [ %v1_2e566, %bb ], [ 214748364, %dec_label_pc_2e54c ]
  ret i32 %v2_2e566
}

define i32 @function_2e56d() local_unnamed_addr {
dec_label_pc_2e56d:
  %v0_2e56e = load i32, i32* @eax, align 4
  ret i32 %v0_2e56e
}

define i32 @_ZSt10_ConstructI6CTxOutS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e56f:
  %v3_2e5a6 = call i32 @function_2e5d1(i32 20, i32 %arg1)
  %v2_2e5b2 = call i32 @unknown_41ea9(i32 0, i32 %arg2)
  %v2_2e5b7 = call i32 @function_2e5d1(i32 0, i32 %arg2)
  ret i32 %v2_2e5b7

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2e5d1, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2e5d1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2e5d1:
  %v0_2e5d1 = load i32, i32* @ebp, align 4
  %v1_2e5d1 = add i32 %v0_2e5d1, -28
  %v2_2e5d1 = inttoptr i32 %v1_2e5d1 to i32*
  %v3_2e5d1 = load i32, i32* %v2_2e5d1, align 4
  %v1_2e5d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e5d4 = xor i32 %v1_2e5d4, %v3_2e5d1
  %v3_2e5d4 = icmp eq i32 %v2_2e5d4, 0
  store i32 %v2_2e5d4, i32* @eax, align 4
  br i1 %v3_2e5d4, label %bb, label %dec_label_pc_2e5dd

bb:                                               ; preds = %dec_label_pc_2e5d1
  %v1_2e5db = call i32 @function_2e5e2()
  br label %dec_label_pc_2e5dd

dec_label_pc_2e5dd:                               ; preds = %bb, %dec_label_pc_2e5d1
  %v2_2e5db = phi i32 [ %v1_2e5db, %bb ], [ %v2_2e5d4, %dec_label_pc_2e5d1 ]
  ret i32 %v2_2e5db
}

define i32 @function_2e5e2() local_unnamed_addr {
dec_label_pc_2e5e2:
  %v0_2e5e9 = load i32, i32* @eax, align 4
  ret i32 %v0_2e5e9
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP6CTxOutjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e5ea:
  %v10_2e638110 = icmp eq i32 %arg2, 0
  %v1_2e63c111 = icmp eq i1 %v10_2e638110, false
  %v5_2e63f115 = icmp eq i1 %v1_2e63c111, false
  %v1_2e641116 = icmp eq i1 %v5_2e63f115, false
  br i1 %v1_2e641116, label %dec_label_pc_2e616, label %dec_label_pc_2e643

dec_label_pc_2e616:                               ; preds = %dec_label_pc_2e5ea, %dec_label_pc_2e616
  %storemerge118 = phi i32 [ %v4_2e634, %dec_label_pc_2e616 ], [ %arg1, %dec_label_pc_2e5ea ]
  %stack_var_-36.0117 = phi i32 [ %v4_2e630, %dec_label_pc_2e616 ], [ %arg2, %dec_label_pc_2e5ea ]
  %v1_2e61c = call i32 @unknown_5ca98(i32 %storemerge118)
  %v2_2e62b = call i32 @unknown_5cb59(i32 %v1_2e61c, i32 %arg3)
  %v4_2e630 = add i32 %stack_var_-36.0117, -1
  %v4_2e634 = add i32 %storemerge118, 20
  %v10_2e638 = icmp eq i32 %v4_2e630, 0
  %v1_2e63c = icmp eq i1 %v10_2e638, false
  %v5_2e63f = icmp eq i1 %v1_2e63c, false
  %v1_2e641 = icmp eq i1 %v5_2e63f, false
  br i1 %v1_2e641, label %dec_label_pc_2e616, label %dec_label_pc_2e643

dec_label_pc_2e643:                               ; preds = %dec_label_pc_2e616, %dec_label_pc_2e5ea
  %v0_2e643 = call i32 @function_2e675()
  ret i32 %v0_2e643

; uselistorder directives
  uselistorder i32 %v4_2e630, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder label %dec_label_pc_2e616, { 1, 0 }
}

define i32 @function_2e646() local_unnamed_addr {
dec_label_pc_2e646:
  %eax.global-to-local = alloca i32, align 4
  %v0_2e646 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2e646
}

define i32 @function_2e675() local_unnamed_addr {
dec_label_pc_2e675:
  %v0_2e675 = load i32, i32* @ebp, align 4
  %v1_2e675 = add i32 %v0_2e675, -12
  %v2_2e675 = inttoptr i32 %v1_2e675 to i32*
  %v3_2e675 = load i32, i32* %v2_2e675, align 4
  %v1_2e678 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2e678 = xor i32 %v1_2e678, %v3_2e675
  %v3_2e678 = icmp eq i32 %v2_2e678, 0
  store i32 %v2_2e678, i32* @eax, align 4
  br i1 %v3_2e678, label %bb, label %dec_label_pc_2e681

bb:                                               ; preds = %dec_label_pc_2e675
  %v1_2e67f = call i32 @function_2e686()
  br label %dec_label_pc_2e681

dec_label_pc_2e681:                               ; preds = %bb, %dec_label_pc_2e675
  %v2_2e67f = phi i32 [ %v1_2e67f, %bb ], [ %v2_2e678, %dec_label_pc_2e675 ]
  ret i32 %v2_2e67f
}

define i32 @function_2e686() local_unnamed_addr {
dec_label_pc_2e686:
  %v0_2e68b = load i32, i32* @eax, align 4
  ret i32 %v0_2e68b
}

define i32 @_ZN9__gnu_cxx13new_allocatorImEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e68c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e6af

bb:                                               ; preds = %dec_label_pc_2e68c
  %v2_2e6ad = call i32 @function_2e6b4(i32 %arg1)
  br label %dec_label_pc_2e6af

dec_label_pc_2e6af:                               ; preds = %bb, %dec_label_pc_2e68c
  %v3_2e6ad = phi i32 [ %v2_2e6ad, %bb ], [ 0, %dec_label_pc_2e68c ]
  ret i32 %v3_2e6ad
}

define i32 @function_2e6b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e6b4:
  %v0_2e6b5 = load i32, i32* @eax, align 4
  ret i32 %v0_2e6b5
}

define i32 @_ZSt8_DestroyISt6vectorIhSaIhEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e6b6:
  %v1_2e6d3 = call i32 @unknown_43b98(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e6e4

bb:                                               ; preds = %dec_label_pc_2e6b6
  %v1_2e6e2 = call i32 @function_2e6e9()
  br label %dec_label_pc_2e6e4

dec_label_pc_2e6e4:                               ; preds = %bb, %dec_label_pc_2e6b6
  %v2_2e6e2 = phi i32 [ %v1_2e6e2, %bb ], [ 0, %dec_label_pc_2e6b6 ]
  ret i32 %v2_2e6e2
}

define i32 @function_2e6e9() local_unnamed_addr {
dec_label_pc_2e6e9:
  %v0_2e6ea = load i32, i32* @eax, align 4
  ret i32 %v0_2e6ea
}

define i32 @_ZSt22__copy_move_backward_aILb0EPSt6vectorIhSaIhEES3_ET1_T0_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e6eb:
  %v3_2e726 = call i32 @unknown_607cf(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_2e726, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e737

bb:                                               ; preds = %dec_label_pc_2e6eb
  %v1_2e735 = call i32 @function_2e73c()
  br label %dec_label_pc_2e737

dec_label_pc_2e737:                               ; preds = %bb, %dec_label_pc_2e6eb
  %v2_2e735 = phi i32 [ %v1_2e735, %bb ], [ %v3_2e726, %dec_label_pc_2e6eb ]
  ret i32 %v2_2e735
}

define i32 @function_2e73c() local_unnamed_addr {
dec_label_pc_2e73c:
  %v0_2e73d = load i32, i32* @eax, align 4
  ret i32 %v0_2e73d
}

define i32 @_ZNKSt12_Vector_baseISt6vectorIhSaIhEESaIS2_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e73e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e764

bb:                                               ; preds = %dec_label_pc_2e73e
  %v2_2e762 = call i32 @function_2e769(i32 %arg1)
  br label %dec_label_pc_2e764

dec_label_pc_2e764:                               ; preds = %bb, %dec_label_pc_2e73e
  %v3_2e762 = phi i32 [ %v2_2e762, %bb ], [ %arg1, %dec_label_pc_2e73e ]
  ret i32 %v3_2e762
}

define i32 @function_2e769(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e769:
  %v0_2e76a = load i32, i32* @eax, align 4
  ret i32 %v0_2e76a
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e76c:
  store i32 357913941, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e794

bb:                                               ; preds = %dec_label_pc_2e76c
  %v2_2e792 = call i32 @function_2e799(i32 %arg1)
  br label %dec_label_pc_2e794

dec_label_pc_2e794:                               ; preds = %bb, %dec_label_pc_2e76c
  %v3_2e792 = phi i32 [ %v2_2e792, %bb ], [ 357913941, %dec_label_pc_2e76c ]
  ret i32 %v3_2e792
}

define i32 @function_2e799(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e799:
  %v0_2e79a = load i32, i32* @eax, align 4
  ret i32 %v0_2e79a
}

define i32 @_ZNSt10_Iter_baseISt13_Bit_iteratorLb0EE7_S_baseES0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e79b:
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v2_2e7c9 = add i32 %tmp104, 4
  %v3_2e7c9 = inttoptr i32 %v2_2e7c9 to i32*
  store i32 %arg3, i32* %v3_2e7c9, align 4
  store i32 %tmp104, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e7db

bb:                                               ; preds = %dec_label_pc_2e79b
  %v4_2e7d9 = call i32 @function_2e7e0(i32 %arg2, i32 %arg3, i32 %tmp104)
  br label %dec_label_pc_2e7db

dec_label_pc_2e7db:                               ; preds = %bb, %dec_label_pc_2e79b
  %v5_2e7d9 = phi i32 [ %v4_2e7d9, %bb ], [ %tmp104, %dec_label_pc_2e79b ]
  ret i32 %v5_2e7d9

; uselistorder directives
  uselistorder i32 %tmp104, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
}

define i32 @function_2e7e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e7e0:
  %v0_2e7e1 = load i32, i32* @eax, align 4
  ret i32 %v0_2e7e1
}

define i32 @_ZSt12__niter_baseISt13_Bit_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e7e4:
  %v3_2e81b = call i32 @unknown_5cf7f(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e832

bb:                                               ; preds = %dec_label_pc_2e7e4
  %v1_2e830 = call i32 @function_2e837()
  br label %dec_label_pc_2e832

dec_label_pc_2e832:                               ; preds = %bb, %dec_label_pc_2e7e4
  %v2_2e830 = phi i32 [ %v1_2e830, %bb ], [ %arg1, %dec_label_pc_2e7e4 ]
  ret i32 %v2_2e830

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e837() local_unnamed_addr {
dec_label_pc_2e837:
  %v0_2e838 = load i32, i32* @eax, align 4
  ret i32 %v0_2e838
}

define i32 @_ZSt22__copy_move_backward_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2e83b:
  %v7_2e8aa = call i32 @unknown_6099b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e8c1

bb:                                               ; preds = %dec_label_pc_2e83b
  %v1_2e8bf = call i32 @function_2e8c6()
  br label %dec_label_pc_2e8c1

dec_label_pc_2e8c1:                               ; preds = %bb, %dec_label_pc_2e83b
  %v2_2e8bf = phi i32 [ %v1_2e8bf, %bb ], [ %arg1, %dec_label_pc_2e83b ]
  ret i32 %v2_2e8bf

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2e8c6() local_unnamed_addr {
dec_label_pc_2e8c6:
  %v0_2e8c7 = load i32, i32* @eax, align 4
  ret i32 %v0_2e8c7
}

define i32 @_ZNKSt13_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8ca:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e8f0

bb:                                               ; preds = %dec_label_pc_2e8ca
  %v2_2e8ee = call i32 @function_2e8f5(i32 %arg1)
  br label %dec_label_pc_2e8f0

dec_label_pc_2e8f0:                               ; preds = %bb, %dec_label_pc_2e8ca
  %v3_2e8ee = phi i32 [ %v2_2e8ee, %bb ], [ %arg1, %dec_label_pc_2e8ca ]
  ret i32 %v3_2e8ee
}

define i32 @function_2e8f5(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8f5:
  %v0_2e8f6 = load i32, i32* @eax, align 4
  ret i32 %v0_2e8f6
}

define i32 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e8f8:
  store i32 1073741823, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e920

bb:                                               ; preds = %dec_label_pc_2e8f8
  %v2_2e91e = call i32 @function_2e925(i32 %arg1)
  br label %dec_label_pc_2e920

dec_label_pc_2e920:                               ; preds = %bb, %dec_label_pc_2e8f8
  %v3_2e91e = phi i32 [ %v2_2e91e, %bb ], [ 1073741823, %dec_label_pc_2e8f8 ]
  ret i32 %v3_2e91e
}

define i32 @function_2e925(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e925:
  %v0_2e926 = load i32, i32* @eax, align 4
  ret i32 %v0_2e926
}

define i32 @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e927:
  %v1_2e944 = call i32 @unknown_50449(i32 %arg1)
  store i32 %v1_2e944, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2e955

bb:                                               ; preds = %dec_label_pc_2e927
  %v1_2e953 = call i32 @function_2e95a()
  br label %dec_label_pc_2e955

dec_label_pc_2e955:                               ; preds = %bb, %dec_label_pc_2e927
  %v2_2e953 = phi i32 [ %v1_2e953, %bb ], [ %v1_2e944, %dec_label_pc_2e927 ]
  ret i32 %v2_2e953
}

define i32 @function_2e95a() local_unnamed_addr {
dec_label_pc_2e95a:
  %v0_2e95b = load i32, i32* @eax, align 4
  ret i32 %v0_2e95b
}

define i32 @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e95c:
  ret i32 0
}

define i32 @function_2e982(i32 %arg1) local_unnamed_addr {
dec_label_pc_2e982:
  %v0_2e982 = load i32, i32* @ebp, align 4
  %v1_2e982 = add i32 %v0_2e982, 1
  store i32 %v1_2e982, i32* @ebp, align 4
  %v1_2e983 = load i32, i32* @ecx, align 4
  %v2_2e983 = add i32 %v1_2e983, -1008196604
  %v3_2e983 = inttoptr i32 %v2_2e983 to double*
  %v4_2e983 = load double, double* %v3_2e983, align 4
  %v5_2e983 = fpext double %v4_2e983 to x86_fp80
  %v6_2e983 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_2e983 = fmul x86_fp80 %v5_2e983, %v6_2e983
  store x86_fp80 %v7_2e983, x86_fp80* @st0, align 4
  %v0_2e989 = load i32, i32* @eax, align 4
  %v20_2e989 = load i32, i32* @edi, align 4
  %v21_2e989 = load i1, i1* @df, align 1
  %v22_2e989 = select i1 %v21_2e989, i32 -1, i32 1
  %v23_2e989 = add i32 %v22_2e989, %v20_2e989
  store i32 %v23_2e989, i32* @edi, align 4
  %v4_2e98a = mul i32 %v0_2e989, 2
  %v21_2e98a = inttoptr i32 %v0_2e989 to i32*
  store i32 %v4_2e98a, i32* %v21_2e98a, align 4
  %v0_2e98c = load i32, i32* @eax, align 4
  store i32 %v0_2e98c, i32* @esi, align 4
  %v0_2e98e = load i32, i32* @ebp, align 4
  %v1_2e98e = add i32 %v0_2e98e, -32
  %v2_2e98e = inttoptr i32 %v1_2e98e to i32*
  %v3_2e98e = load i32, i32* %v2_2e98e, align 4
  %v1_2e994 = call i32 @unknown_4984f(i32 %v3_2e98e)
  store i32 %v1_2e994, i32* @ebx, align 4
  %v0_2e99b = load i32, i32* @ebp, align 4
  %v1_2e99b = add i32 %v0_2e99b, -28
  %v2_2e99b = inttoptr i32 %v1_2e99b to i32*
  %v3_2e99b = load i32, i32* %v2_2e99b, align 4
  %v1_2e9a1 = call i32 @unknown_4984f(i32 %v3_2e99b)
  %v0_2e9a6 = load i32, i32* @esi, align 4
  %v0_2e9aa = load i32, i32* @ebx, align 4
  %v3_2e9b1 = call i32 @unknown_60b8f(i32 %v1_2e9a1, i32 %v0_2e9aa, i32 %v0_2e9a6)
  store i32 %v3_2e9b1, i32* @eax, align 4
  %v0_2e9b6 = load i32, i32* @ebp, align 4
  %v1_2e9b6 = add i32 %v0_2e9b6, -12
  %v2_2e9b6 = inttoptr i32 %v1_2e9b6 to i32*
  %v3_2e9b6 = load i32, i32* %v2_2e9b6, align 4
  %v1_2e9b9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2e9b9 = icmp eq i32 %v1_2e9b9, %v3_2e9b6
  br i1 %v3_2e9b9, label %bb, label %dec_label_pc_2e9c2

bb:                                               ; preds = %dec_label_pc_2e982
  %v1_2e9c0 = call i32 @function_2e9c7()
  br label %dec_label_pc_2e9c2

dec_label_pc_2e9c2:                               ; preds = %bb, %dec_label_pc_2e982
  %v2_2e9c0 = phi i32 [ %v1_2e9c0, %bb ], [ %v3_2e9b1, %dec_label_pc_2e982 ]
  ret i32 %v2_2e9c0

; uselistorder directives
  uselistorder i32 %v0_2e989, { 1, 0 }
  uselistorder i32 (i32)* @unknown_4984f, { 1, 0 }
  uselistorder i1* @df, { 0, 2, 1 }
}

define i32 @function_2e9c7() local_unnamed_addr {
dec_label_pc_2e9c7:
  %v0_2e9cd = load i32, i32* @eax, align 4
  ret i32 %v0_2e9cd
}

define i32 @_ZSt12__miter_baseISt19_Bit_const_iteratorENSt11_Miter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2e9ce:
  %v3_2ea05 = call i32 @unknown_60c54(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ea1c

bb:                                               ; preds = %dec_label_pc_2e9ce
  %v1_2ea1a = call i32 @function_2ea21()
  br label %dec_label_pc_2ea1c

dec_label_pc_2ea1c:                               ; preds = %bb, %dec_label_pc_2e9ce
  %v2_2ea1a = phi i32 [ %v1_2ea1a, %bb ], [ %arg1, %dec_label_pc_2e9ce ]
  ret i32 %v2_2ea1a

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2ea21() local_unnamed_addr {
dec_label_pc_2ea21:
  %v0_2ea22 = load i32, i32* @eax, align 4
  ret i32 %v0_2ea22
}

define i32 @_ZSt14__copy_move_a2ILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2ea25:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_2ea60 = ptrtoint i32* %stack_var_-24 to i32
  %v3_2ea74 = call i32 @unknown_5d209(i32 %v2_2ea60, i32 %arg6, i32 %arg7)
  %v2_2ea7c = ptrtoint i32* %stack_var_-32 to i32
  %v3_2ea90 = call i32 @unknown_60cf4(i32 %v2_2ea7c, i32 %arg4, i32 %arg5)
  %v2_2ea98 = ptrtoint i32* %stack_var_-40 to i32
  %v3_2eaac = call i32 @unknown_60cf4(i32 %v2_2ea98, i32 %arg2, i32 %arg3)
  %v3_2eab7 = load i32, i32* %stack_var_-24, align 4
  %v3_2eac5 = load i32, i32* %stack_var_-32, align 4
  %v3_2ead3 = load i32, i32* %stack_var_-40, align 4
  %v7_2eae4 = call i32 @unknown_60d4b(i32 %arg1, i32 %v3_2ead3, i32 %tmp98, i32 %v3_2eac5, i32 %tmp99, i32 %v3_2eab7, i32 %tmp101)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2eafb

bb:                                               ; preds = %dec_label_pc_2ea25
  %v1_2eaf9 = call i32 @function_2eb00()
  br label %dec_label_pc_2eafb

dec_label_pc_2eafb:                               ; preds = %bb, %dec_label_pc_2ea25
  %v2_2eaf9 = phi i32 [ %v1_2eaf9, %bb ], [ %arg1, %dec_label_pc_2ea25 ]
  ret i32 %v2_2eaf9

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_60cf4, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2eb00() local_unnamed_addr {
dec_label_pc_2eb00:
  %v0_2eb01 = load i32, i32* @eax, align 4
  ret i32 %v0_2eb01
}

define i32 @_ZSt13__copy_move_aILb0ESt13_Bit_iteratorS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_2eb04:
  %v7_2eb73 = call i32 @unknown_60eb9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2eb8a

bb:                                               ; preds = %dec_label_pc_2eb04
  %v1_2eb88 = call i32 @function_2eb8f()
  br label %dec_label_pc_2eb8a

dec_label_pc_2eb8a:                               ; preds = %bb, %dec_label_pc_2eb04
  %v2_2eb88 = phi i32 [ %v1_2eb88, %bb ], [ %arg1, %dec_label_pc_2eb04 ]
  ret i32 %v2_2eb88

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2eb8f() local_unnamed_addr {
dec_label_pc_2eb8f:
  %v0_2eb90 = load i32, i32* @eax, align 4
  ret i32 %v0_2eb90
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEELb1EE7_S_baseES8_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eb93:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_2ebaa = ptrtoint i32* %stack_var_-32 to i32
  %v1_2ebb0 = call i32 @unknown_4ccfd(i32 %v2_2ebaa)
  %v1_2ebb5 = inttoptr i32 %v1_2ebb0 to i32*
  %v2_2ebb5 = load i32, i32* %v1_2ebb5, align 4
  store i32 %v2_2ebb5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ebc3

bb:                                               ; preds = %dec_label_pc_2eb93
  %v1_2ebc1 = call i32 @function_2ebc8()
  br label %dec_label_pc_2ebc3

dec_label_pc_2ebc3:                               ; preds = %bb, %dec_label_pc_2eb93
  %v2_2ebc1 = phi i32 [ %v1_2ebc1, %bb ], [ %v2_2ebb5, %dec_label_pc_2eb93 ]
  ret i32 %v2_2ebc1
}

define i32 @function_2ebc8() local_unnamed_addr {
dec_label_pc_2ebc8:
  %v0_2ebc9 = load i32, i32* @eax, align 4
  ret i32 %v0_2ebc9
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPSt6vectorIhSaIhEES6_EET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ebca:
  %v2_2ebf5 = sub i32 %arg2, %arg1
  %v2_2ebf9 = sdiv i32 %v2_2ebf5, 4
  %v3_2ebfc = mul i32 %v2_2ebf9, -1431655765
  %v10_2ec25110 = icmp eq i32 %v3_2ebfc, 0
  %v11_2ec25111 = icmp slt i32 %v3_2ebfc, 0
  %v3_2ec29112 = icmp eq i1 %v11_2ec25111, false
  %v4_2ec29113 = icmp eq i1 %v10_2ec25110, false
  %v5_2ec29114 = icmp eq i1 %v3_2ec29112, %v4_2ec29113
  %v5_2ec2c115 = icmp eq i1 %v5_2ec29114, false
  %v1_2ec2e116 = icmp eq i1 %v5_2ec2c115, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_2ec2e116, label %dec_label_pc_2ec07, label %dec_label_pc_2ec30

dec_label_pc_2ec07:                               ; preds = %dec_label_pc_2ebca, %dec_label_pc_2ec07
  %storemerge119 = phi i32 [ %v4_2ec21, %dec_label_pc_2ec07 ], [ %v3_2ebfc, %dec_label_pc_2ebca ]
  %stack_var_-40.0118 = phi i32 [ %v4_2ec1d, %dec_label_pc_2ec07 ], [ %arg3, %dec_label_pc_2ebca ]
  %stack_var_-32.0117 = phi i32 [ %v4_2ec19, %dec_label_pc_2ec07 ], [ %arg1, %dec_label_pc_2ebca ]
  %v2_2ec14 = call i32 @unknown_4421e(i32 %stack_var_-40.0118, i32 %stack_var_-32.0117)
  %v4_2ec19 = add i32 %stack_var_-32.0117, 12
  %v4_2ec1d = add i32 %stack_var_-40.0118, 12
  %v4_2ec21 = add i32 %storemerge119, -1
  %v13_2ec21 = icmp eq i32 %v4_2ec21, 0
  %v14_2ec21 = icmp slt i32 %v4_2ec21, 0
  %v3_2ec29 = icmp eq i1 %v14_2ec21, false
  %v4_2ec29 = icmp eq i1 %v13_2ec21, false
  %v5_2ec29 = icmp eq i1 %v3_2ec29, %v4_2ec29
  %v5_2ec2c = icmp eq i1 %v5_2ec29, false
  %v1_2ec2e = icmp eq i1 %v5_2ec2c, false
  store i32 %v4_2ec1d, i32* @eax, align 4
  br i1 %v1_2ec2e, label %dec_label_pc_2ec07, label %dec_label_pc_2ec30

dec_label_pc_2ec30:                               ; preds = %dec_label_pc_2ec07, %dec_label_pc_2ebca
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_2ebca ], [ %v4_2ec1d, %dec_label_pc_2ec07 ]
  br i1 true, label %bb, label %dec_label_pc_2ec3f

bb:                                               ; preds = %dec_label_pc_2ec30
  %v1_2ec3d = call i32 @function_2ec44()
  br label %dec_label_pc_2ec3f

dec_label_pc_2ec3f:                               ; preds = %bb, %dec_label_pc_2ec30
  %v2_2ec3d = phi i32 [ %v1_2ec3d, %bb ], [ %stack_var_-40.0.lcssa, %dec_label_pc_2ec30 ]
  ret i32 %v2_2ec3d

; uselistorder directives
  uselistorder i32 %v4_2ec21, { 2, 1, 0 }
  uselistorder i32 %v4_2ec1d, { 0, 2, 1 }
  uselistorder i32 %stack_var_-32.0117, { 1, 0 }
  uselistorder i32 %stack_var_-40.0118, { 1, 0 }
  uselistorder label %dec_label_pc_2ec07, { 1, 0 }
}

define i32 @function_2ec44() local_unnamed_addr {
dec_label_pc_2ec44:
  %v0_2ec45 = load i32, i32* @eax, align 4
  ret i32 %v0_2ec45
}

define i32 @_ZN9__gnu_cxx13new_allocatorI5CTxInEC1ERKS2_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ec46:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ec6f

bb:                                               ; preds = %dec_label_pc_2ec46
  %v3_2ec6d = call i32 @function_2ec74(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ec6f

dec_label_pc_2ec6f:                               ; preds = %bb, %dec_label_pc_2ec46
  %v4_2ec6d = phi i32 [ %v3_2ec6d, %bb ], [ 0, %dec_label_pc_2ec46 ]
  ret i32 %v4_2ec6d
}

define i32 @function_2ec74(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ec74:
  %v0_2ec75 = load i32, i32* @eax, align 4
  ret i32 %v0_2ec75
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI5CTxInE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ec76:
  store i32 82595524, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ec9e

bb:                                               ; preds = %dec_label_pc_2ec76
  %v2_2ec9c = call i32 @function_2eca3(i32 %arg1)
  br label %dec_label_pc_2ec9e

dec_label_pc_2ec9e:                               ; preds = %bb, %dec_label_pc_2ec76
  %v3_2ec9c = phi i32 [ %v2_2ec9c, %bb ], [ 82595524, %dec_label_pc_2ec76 ]
  ret i32 %v3_2ec9c
}

define i32 @function_2eca3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2eca3:
  %v0_2eca4 = load i32, i32* @eax, align 4
  ret i32 %v0_2eca4
}

define i32 @_ZSt10_ConstructI5CTxInS0_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eca5:
  %v3_2ecdc = call i32 @function_2ed07(i32 52, i32 %arg1)
  %v2_2ece8 = call i32 @unknown_42847(i32 0, i32 %arg2)
  %v2_2eced = call i32 @function_2ed07(i32 0, i32 %arg2)
  ret i32 %v2_2eced

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_2ed07, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2ed07(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ed07:
  %v0_2ed07 = load i32, i32* @ebp, align 4
  %v1_2ed07 = add i32 %v0_2ed07, -28
  %v2_2ed07 = inttoptr i32 %v1_2ed07 to i32*
  %v3_2ed07 = load i32, i32* %v2_2ed07, align 4
  %v1_2ed0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ed0a = xor i32 %v1_2ed0a, %v3_2ed07
  %v3_2ed0a = icmp eq i32 %v2_2ed0a, 0
  store i32 %v2_2ed0a, i32* @eax, align 4
  br i1 %v3_2ed0a, label %bb, label %dec_label_pc_2ed13

bb:                                               ; preds = %dec_label_pc_2ed07
  %v1_2ed11 = call i32 @function_2ed18()
  br label %dec_label_pc_2ed13

dec_label_pc_2ed13:                               ; preds = %bb, %dec_label_pc_2ed07
  %v2_2ed11 = phi i32 [ %v1_2ed11, %bb ], [ %v2_2ed0a, %dec_label_pc_2ed07 ]
  ret i32 %v2_2ed11
}

define i32 @function_2ed18() local_unnamed_addr {
dec_label_pc_2ed18:
  %v0_2ed1f = load i32, i32* @eax, align 4
  ret i32 %v0_2ed1f
}

define i32 @_ZSt22__uninitialized_copy_aIP6CTxOutS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ed20:
  ret i32 %arg3
}

define i32 @function_2ed4c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed4c:
  %v0_2ed4c = load i32, i32* @eax, align 4
  %v0_2ed50 = load i32, i32* @ebp, align 4
  %v1_2ed50 = add i32 %v0_2ed50, -32
  %v2_2ed50 = inttoptr i32 %v1_2ed50 to i32*
  %v3_2ed50 = load i32, i32* %v2_2ed50, align 4
  %v1_2ed57 = add i32 %v0_2ed50, -28
  %v2_2ed57 = inttoptr i32 %v1_2ed57 to i32*
  %v3_2ed57 = load i32, i32* %v2_2ed57, align 4
  %v3_2ed5d = call i32 @unknown_611ae(i32 %v3_2ed57, i32 %v3_2ed50, i32 %v0_2ed4c)
  store i32 %v3_2ed5d, i32* @eax, align 4
  %v0_2ed62 = load i32, i32* @ebp, align 4
  %v1_2ed62 = add i32 %v0_2ed62, -12
  %v2_2ed62 = inttoptr i32 %v1_2ed62 to i32*
  %v3_2ed62 = load i32, i32* %v2_2ed62, align 4
  %v1_2ed65 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2ed65 = icmp eq i32 %v1_2ed65, %v3_2ed62
  br i1 %v3_2ed65, label %bb, label %dec_label_pc_2ed6e

bb:                                               ; preds = %dec_label_pc_2ed4c
  %v1_2ed6c = call i32 @function_2ed73()
  br label %dec_label_pc_2ed6e

dec_label_pc_2ed6e:                               ; preds = %bb, %dec_label_pc_2ed4c
  %v2_2ed6c = phi i32 [ %v1_2ed6c, %bb ], [ %v3_2ed5d, %dec_label_pc_2ed4c ]
  ret i32 %v2_2ed6c
}

define i32 @function_2ed73() local_unnamed_addr {
dec_label_pc_2ed73:
  %v0_2ed74 = load i32, i32* @eax, align 4
  ret i32 %v0_2ed74
}

define i32 @_ZSt12__miter_baseIP6CTxOutENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ed75:
  %v1_2ed92 = call i32 @unknown_61252(i32 %arg1)
  store i32 %v1_2ed92, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2eda3

bb:                                               ; preds = %dec_label_pc_2ed75
  %v1_2eda1 = call i32 @function_2eda8()
  br label %dec_label_pc_2eda3

dec_label_pc_2eda3:                               ; preds = %bb, %dec_label_pc_2ed75
  %v2_2eda1 = phi i32 [ %v1_2eda1, %bb ], [ %v1_2ed92, %dec_label_pc_2ed75 ]
  ret i32 %v2_2eda1
}

define i32 @function_2eda8() local_unnamed_addr {
dec_label_pc_2eda8:
  %v0_2eda9 = load i32, i32* @eax, align 4
  ret i32 %v0_2eda9
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2edaa:
  %v1_2edd5 = call i32 @unknown_5dbc6(i32 %arg3)
  %v1_2ede2 = call i32 @unknown_5dbc6(i32 %arg2)
  %v1_2edef = call i32 @unknown_5dbc6(i32 %arg1)
  %v3_2edff = call i32 @unknown_612b4(i32 %v1_2edef, i32 %v1_2ede2, i32 %v1_2edd5)
  store i32 %v3_2edff, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ee10

bb:                                               ; preds = %dec_label_pc_2edaa
  %v1_2ee0e = call i32 @function_2ee15()
  br label %dec_label_pc_2ee10

dec_label_pc_2ee10:                               ; preds = %bb, %dec_label_pc_2edaa
  %v2_2ee0e = phi i32 [ %v1_2ee0e, %bb ], [ %v3_2edff, %dec_label_pc_2edaa ]
  ret i32 %v2_2ee0e

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5dbc6, { 2, 1, 0 }
}

define i32 @function_2ee15() local_unnamed_addr {
dec_label_pc_2ee15:
  %v0_2ee1b = load i32, i32* @eax, align 4
  ret i32 %v0_2ee1b
}

define i32 @_ZSt12__niter_baseIP6CTxOutENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee1c:
  %v1_2ee39 = call i32 @unknown_612f9(i32 %arg1)
  store i32 %v1_2ee39, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ee4a

bb:                                               ; preds = %dec_label_pc_2ee1c
  %v1_2ee48 = call i32 @function_2ee4f()
  br label %dec_label_pc_2ee4a

dec_label_pc_2ee4a:                               ; preds = %bb, %dec_label_pc_2ee1c
  %v2_2ee48 = phi i32 [ %v1_2ee48, %bb ], [ %v1_2ee39, %dec_label_pc_2ee1c ]
  ret i32 %v2_2ee48
}

define i32 @function_2ee4f() local_unnamed_addr {
dec_label_pc_2ee4f:
  %v0_2ee50 = load i32, i32* @eax, align 4
  ret i32 %v0_2ee50
}

define i32 @_ZSt8__fill_aIP6CTxOutS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ee51:
  ret i32 0
}

define i32 @function_2ee8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ee8a:
  %v0_2ee8c = load i32, i32* @ebp, align 4
  %v1_2ee99 = add i32 %v0_2ee8c, -12
  %v2_2ee99 = inttoptr i32 %v1_2ee99 to i32*
  %v3_2ee99 = load i32, i32* %v2_2ee99, align 4
  %v1_2ee9c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2ee9c = xor i32 %v1_2ee9c, %v3_2ee99
  %v3_2ee9c = icmp eq i32 %v2_2ee9c, 0
  store i32 %v2_2ee9c, i32* @eax, align 4
  br i1 %v3_2ee9c, label %bb, label %dec_label_pc_2eea5

bb:                                               ; preds = %dec_label_pc_2ee8a
  %v1_2eea3 = call i32 @function_2eeaa()
  br label %dec_label_pc_2eea5

dec_label_pc_2eea5:                               ; preds = %bb, %dec_label_pc_2ee8a
  %v3_2eea3 = phi i32 [ %v1_2eea3, %bb ], [ %v2_2ee9c, %dec_label_pc_2ee8a ]
  ret i32 %v3_2eea3
}

define i32 @function_2eeaa() local_unnamed_addr {
dec_label_pc_2eeaa:
  %v0_2eeab = load i32, i32* @eax, align 4
  ret i32 %v0_2eeab
}

define i32 @_ZN6CTxOutaSERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2eeac:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_2eecc = add i32 %arg2, 4
  %v2_2eecc = inttoptr i32 %v1_2eecc to i32*
  %v3_2eecc = load i32, i32* %v2_2eecc, align 4
  %v1_2eecf = inttoptr i32 %arg2 to i32*
  %v2_2eecf = load i32, i32* %v1_2eecf, align 4
  store i32 %v2_2eecf, i32* %arg1, align 4
  %v2_2eed6 = add i32 %tmp103, 4
  %v3_2eed6 = inttoptr i32 %v2_2eed6 to i32*
  store i32 %v3_2eecc, i32* %v3_2eed6, align 4
  %v1_2eedc = add i32 %arg2, 8
  %v1_2eee2 = add i32 %tmp103, 8
  %v2_2eeec = call i32 @unknown_4293e(i32 %v1_2eee2, i32 %v1_2eedc)
  store i32 %tmp103, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ef00

bb:                                               ; preds = %dec_label_pc_2eeac
  %v1_2eefe = call i32 @function_2ef05()
  br label %dec_label_pc_2ef00

dec_label_pc_2ef00:                               ; preds = %bb, %dec_label_pc_2eeac
  %v2_2eefe = phi i32 [ %v1_2eefe, %bb ], [ %tmp103, %dec_label_pc_2eeac ]
  ret i32 %v2_2eefe

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_2ef05() local_unnamed_addr {
dec_label_pc_2ef05:
  %v0_2ef06 = load i32, i32* @eax, align 4
  ret i32 %v0_2ef06
}

define i32 @_ZNKSt6vectorI6CTxOutSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef08:
  %v1_2ef25 = call i32 @unknown_4c196(i32 %arg1)
  %v1_2ef2d = call i32 @unknown_5d448(i32 %v1_2ef25)
  store i32 %v1_2ef2d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ef3e

bb:                                               ; preds = %dec_label_pc_2ef08
  %v1_2ef3c = call i32 @function_2ef43()
  br label %dec_label_pc_2ef3e

dec_label_pc_2ef3e:                               ; preds = %bb, %dec_label_pc_2ef08
  %v2_2ef3c = phi i32 [ %v1_2ef3c, %bb ], [ %v1_2ef2d, %dec_label_pc_2ef08 ]
  ret i32 %v2_2ef3c
}

define i32 @function_2ef43() local_unnamed_addr {
dec_label_pc_2ef43:
  %v0_2ef44 = load i32, i32* @eax, align 4
  ret i32 %v0_2ef44
}

define i32 @_ZSt22__uninitialized_copy_aIP5CTxInS1_S0_ET0_T_S3_S2_RSaIT1_E(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ef45:
  %v7_2ef82 = call i32 @unknown_614a2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v7_2ef82, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ef93

bb:                                               ; preds = %dec_label_pc_2ef45
  %v1_2ef91 = call i32 @function_2ef98()
  br label %dec_label_pc_2ef93

dec_label_pc_2ef93:                               ; preds = %bb, %dec_label_pc_2ef45
  %v2_2ef91 = phi i32 [ %v1_2ef91, %bb ], [ %v7_2ef82, %dec_label_pc_2ef45 ]
  ret i32 %v2_2ef91

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2ef98() local_unnamed_addr {
dec_label_pc_2ef98:
  %v0_2ef99 = load i32, i32* @eax, align 4
  ret i32 %v0_2ef99
}

define i32 @_ZSt12__miter_baseIP5CTxInENSt11_Miter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2ef9a:
  %v1_2efb7 = call i32 @unknown_61546(i32 %arg1)
  store i32 %v1_2efb7, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2efc8

bb:                                               ; preds = %dec_label_pc_2ef9a
  %v1_2efc6 = call i32 @function_2efcd()
  br label %dec_label_pc_2efc8

dec_label_pc_2efc8:                               ; preds = %bb, %dec_label_pc_2ef9a
  %v2_2efc6 = phi i32 [ %v1_2efc6, %bb ], [ %v1_2efb7, %dec_label_pc_2ef9a ]
  ret i32 %v2_2efc6
}

define i32 @function_2efcd() local_unnamed_addr {
dec_label_pc_2efcd:
  %v0_2efce = load i32, i32* @eax, align 4
  ret i32 %v0_2efce
}

define i32 @_ZSt23__copy_move_backward_a2ILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2efcf:
  %v1_2effa = call i32 @unknown_5e010(i32 %arg3)
  %v1_2f007 = call i32 @unknown_5e010(i32 %arg2)
  %v1_2f014 = call i32 @unknown_5e010(i32 %arg1)
  %v3_2f024 = call i32 @unknown_615a8(i32 %v1_2f014, i32 %v1_2f007, i32 %v1_2effa)
  store i32 %v3_2f024, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f035

bb:                                               ; preds = %dec_label_pc_2efcf
  %v1_2f033 = call i32 @function_2f03a()
  br label %dec_label_pc_2f035

dec_label_pc_2f035:                               ; preds = %bb, %dec_label_pc_2efcf
  %v2_2f033 = phi i32 [ %v1_2f033, %bb ], [ %v3_2f024, %dec_label_pc_2efcf ]
  ret i32 %v2_2f033

; uselistorder directives
  uselistorder i32 (i32)* @unknown_5e010, { 2, 1, 0 }
}

define i32 @function_2f03a() local_unnamed_addr {
dec_label_pc_2f03a:
  %v0_2f040 = load i32, i32* @eax, align 4
  ret i32 %v0_2f040
}

define i32 @_ZSt12__niter_baseIP5CTxInENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f041:
  %v1_2f05e = call i32 @unknown_615ed(i32 %arg1)
  store i32 %v1_2f05e, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f06f

bb:                                               ; preds = %dec_label_pc_2f041
  %v1_2f06d = call i32 @function_2f074()
  br label %dec_label_pc_2f06f

dec_label_pc_2f06f:                               ; preds = %bb, %dec_label_pc_2f041
  %v2_2f06d = phi i32 [ %v1_2f06d, %bb ], [ %v1_2f05e, %dec_label_pc_2f041 ]
  ret i32 %v2_2f06d
}

define i32 @function_2f074() local_unnamed_addr {
dec_label_pc_2f074:
  %v0_2f075 = load i32, i32* @eax, align 4
  ret i32 %v0_2f075
}

define i32 @_ZSt8__fill_aIP5CTxInS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f076:
  %v15_2f0b4108 = icmp eq i32 %arg1, %arg2
  %v1_2f0b7109 = icmp eq i1 %v15_2f0b4108, false
  %v5_2f0ba113 = icmp eq i1 %v1_2f0b7109, false
  %v1_2f0bc114 = icmp eq i1 %v5_2f0ba113, false
  br i1 %v1_2f0bc114, label %dec_label_pc_2f09b, label %dec_label_pc_2f0be

dec_label_pc_2f09b:                               ; preds = %dec_label_pc_2f076, %dec_label_pc_2f09b
  %stack_var_-32.0115 = phi i32 [ %v4_2f0ad, %dec_label_pc_2f09b ], [ %arg1, %dec_label_pc_2f076 ]
  %v2_2f0a8 = call i32 @unknown_42b4e(i32 %stack_var_-32.0115, i32 %arg3)
  %v4_2f0ad = add i32 %stack_var_-32.0115, 52
  %v15_2f0b4 = icmp eq i32 %v4_2f0ad, %arg2
  %v1_2f0b7 = icmp eq i1 %v15_2f0b4, false
  %v5_2f0ba = icmp eq i1 %v1_2f0b7, false
  %v1_2f0bc = icmp eq i1 %v5_2f0ba, false
  br i1 %v1_2f0bc, label %dec_label_pc_2f09b, label %dec_label_pc_2f0be

dec_label_pc_2f0be:                               ; preds = %dec_label_pc_2f09b, %dec_label_pc_2f076
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f0ca

bb:                                               ; preds = %dec_label_pc_2f0be
  %v1_2f0c8 = call i32 @function_2f0cf()
  br label %dec_label_pc_2f0ca

dec_label_pc_2f0ca:                               ; preds = %bb, %dec_label_pc_2f0be
  %v2_2f0c8 = phi i32 [ %v1_2f0c8, %bb ], [ 0, %dec_label_pc_2f0be ]
  ret i32 %v2_2f0c8

; uselistorder directives
  uselistorder i32 %v4_2f0ad, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_2f09b, { 1, 0 }
}

define i32 @function_2f0cf() local_unnamed_addr {
dec_label_pc_2f0cf:
  %v0_2f0d0 = load i32, i32* @eax, align 4
  ret i32 %v0_2f0d0
}

define i32 @_ZSt20uninitialized_fill_nIP5CTxInjS0_EvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f0d1:
  %v3_2f108 = call i32 @unknown_616fd(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f119

bb:                                               ; preds = %dec_label_pc_2f0d1
  %v1_2f117 = call i32 @function_2f11e()
  br label %dec_label_pc_2f119

dec_label_pc_2f119:                               ; preds = %bb, %dec_label_pc_2f0d1
  %v2_2f117 = phi i32 [ %v1_2f117, %bb ], [ 0, %dec_label_pc_2f0d1 ]
  ret i32 %v2_2f117
}

define i32 @function_2f11e() local_unnamed_addr {
dec_label_pc_2f11e:
  %v0_2f11f = load i32, i32* @eax, align 4
  ret i32 %v0_2f11f
}

define i32 @_ZNKSt6vectorI5CTxInSaIS0_EE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f120:
  %v1_2f13d = call i32 @unknown_4d3a8(i32 %arg1)
  %v1_2f145 = call i32 @unknown_5dd96(i32 %v1_2f13d)
  store i32 %v1_2f145, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f156

bb:                                               ; preds = %dec_label_pc_2f120
  %v1_2f154 = call i32 @function_2f15b()
  br label %dec_label_pc_2f156

dec_label_pc_2f156:                               ; preds = %bb, %dec_label_pc_2f120
  %v2_2f154 = phi i32 [ %v1_2f154, %bb ], [ %v1_2f145, %dec_label_pc_2f120 ]
  ret i32 %v2_2f154
}

define i32 @function_2f15b() local_unnamed_addr {
dec_label_pc_2f15b:
  %v0_2f15c = load i32, i32* @eax, align 4
  ret i32 %v0_2f15c
}

define i32 @_Z9SerializeI11CHashWriter5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f15d:
  %stack_var_-17 = alloca i32, align 4
  %v2_2f186 = ptrtoint i32* %stack_var_-17 to i32
  %v5_2f1a8 = call i32 @unknown_6182b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2f186)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f1b9

bb:                                               ; preds = %dec_label_pc_2f15d
  %v1_2f1b7 = call i32 @function_2f1be()
  br label %dec_label_pc_2f1b9

dec_label_pc_2f1b9:                               ; preds = %bb, %dec_label_pc_2f15d
  %v2_2f1b7 = phi i32 [ %v1_2f1b7, %bb ], [ 0, %dec_label_pc_2f15d ]
  ret i32 %v2_2f1b7
}

define i32 @function_2f1be() local_unnamed_addr {
dec_label_pc_2f1be:
  %v0_2f1bf = load i32, i32* @eax, align 4
  ret i32 %v0_2f1bf
}

define i32 @_Z9SerializeI11CHashWriter6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_Eii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f1c0:
  %stack_var_-17 = alloca i32, align 4
  %v2_2f1e9 = ptrtoint i32* %stack_var_-17 to i32
  %v5_2f20b = call i32 @unknown_61968(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v2_2f1e9)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f21c

bb:                                               ; preds = %dec_label_pc_2f1c0
  %v1_2f21a = call i32 @function_2f221()
  br label %dec_label_pc_2f21c

dec_label_pc_2f21c:                               ; preds = %bb, %dec_label_pc_2f1c0
  %v2_2f21a = phi i32 [ %v1_2f21a, %bb ], [ 0, %dec_label_pc_2f1c0 ]
  ret i32 %v2_2f21a
}

define i32 @function_2f221() local_unnamed_addr {
dec_label_pc_2f221:
  %v0_2f222 = load i32, i32* @eax, align 4
  ret i32 %v0_2f222
}

define i32 @_Z9SerializeI11CHashWriterEvRT_jii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f223:
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v2_2f254 = ptrtoint i32* %stack_var_-36 to i32
  %v7_2f261 = call i32 @unknown_3ef85(i32 %arg1, i32 %v2_2f254, i32 4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f272

bb:                                               ; preds = %dec_label_pc_2f223
  %v1_2f270 = call i32 @function_2f277()
  br label %dec_label_pc_2f272

dec_label_pc_2f272:                               ; preds = %bb, %dec_label_pc_2f223
  %v2_2f270 = phi i32 [ %v1_2f270, %bb ], [ 0, %dec_label_pc_2f223 ]
  ret i32 %v2_2f270

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_2f277() local_unnamed_addr {
dec_label_pc_2f277:
  %v0_2f278 = load i32, i32* @eax, align 4
  ret i32 %v0_2f278
}

define i32 @_ZN5boost6tuples6detail2ltINS0_4consI7uint256NS3_ISt6vectorIhSaIhEENS3_I7CPubKeyNS0_9null_typeEEEEEEESC_EEbRKT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f279:
  %v1_2f29d = call i32 @unknown_61be7(i32 %arg2)
  %v1_2f2aa = call i32 @unknown_61be7(i32 %arg1)
  %v2_2f2b6 = call i32 @unknown_3eeab(i32 %v1_2f2aa, i32 %v1_2f29d)
  %v4_2f2bb = trunc i32 %v2_2f2b6 to i8
  %v5_2f2bb = icmp eq i8 %v4_2f2bb, 0
  %v1_2f2bd = icmp eq i1 %v5_2f2bb, false
  br i1 %v1_2f2bd, label %dec_label_pc_2f31e, label %dec_label_pc_2f2bf

dec_label_pc_2f2bf:                               ; preds = %dec_label_pc_2f279
  %v1_2f2c5 = call i32 @unknown_61be7(i32 %arg1)
  %v1_2f2d2 = call i32 @unknown_61be7(i32 %arg2)
  %v2_2f2de = call i32 @unknown_3eeab(i32 %v1_2f2d2, i32 %v1_2f2c5)
  %v1_2f2e3 = xor i32 %v2_2f2de, 1
  %v4_2f2e3 = trunc i32 %v1_2f2e3 to i8
  %v5_2f2e6 = icmp eq i8 %v4_2f2e3, 0
  br i1 %v5_2f2e6, label %dec_label_pc_2f319, label %dec_label_pc_2f2ea

dec_label_pc_2f2ea:                               ; preds = %dec_label_pc_2f2bf
  %v1_2f2f0 = call i32 @unknown_61afb(i32 %arg2)
  %v1_2f2fd = call i32 @unknown_61afb(i32 %arg1)
  %v2_2f309 = call i32 @unknown_61b2b(i32 %v1_2f2fd, i32 %v1_2f2f0)
  %v4_2f30e = trunc i32 %v2_2f309 to i8
  %v5_2f30e = icmp eq i8 %v4_2f30e, 0
  br i1 %v5_2f30e, label %dec_label_pc_2f319, label %dec_label_pc_2f31e

dec_label_pc_2f319:                               ; preds = %dec_label_pc_2f2ea, %dec_label_pc_2f2bf
  br label %dec_label_pc_2f31e

dec_label_pc_2f31e:                               ; preds = %dec_label_pc_2f279, %dec_label_pc_2f2ea, %dec_label_pc_2f319
  %storemerge = phi i32 [ 0, %dec_label_pc_2f319 ], [ 1, %dec_label_pc_2f2ea ], [ 1, %dec_label_pc_2f279 ]
  store i32 %storemerge, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f32a

bb:                                               ; preds = %dec_label_pc_2f31e
  %v1_2f328 = call i32 @function_2f32f()
  br label %dec_label_pc_2f32a

dec_label_pc_2f32a:                               ; preds = %bb, %dec_label_pc_2f31e
  %v2_2f328 = phi i32 [ %v1_2f328, %bb ], [ %storemerge, %dec_label_pc_2f31e ]
  ret i32 %v2_2f328

; uselistorder directives
  uselistorder i32 (i32)* @unknown_61afb, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_3eeab, { 1, 0 }
  uselistorder i32 (i32)* @unknown_61be7, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_2f31e, { 2, 1, 0 }
}

define i32 @function_2f32f() local_unnamed_addr {
dec_label_pc_2f32f:
  %v0_2f334 = load i32, i32* @eax, align 4
  ret i32 %v0_2f334
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5clearEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f336:
  %v1_2f354 = call i32 @unknown_4e06a(i32 %arg1)
  %v2_2f363 = call i32 @unknown_4dfec(i32 %arg1, i32 %v1_2f354)
  %v1_2f36e = call i32 @unknown_61cd2(i32 %arg1)
  %v1_2f37b = call i32 @unknown_54804(i32 %arg1)
  %v2_2f380 = inttoptr i32 %v1_2f36e to i32*
  store i32 %v1_2f37b, i32* %v2_2f380, align 4
  %v1_2f388 = call i32 @unknown_61d02(i32 %arg1)
  %v1_2f38d = inttoptr i32 %v1_2f388 to i32*
  store i32 0, i32* %v1_2f38d, align 4
  %v1_2f399 = call i32 @unknown_61d32(i32 %arg1)
  %v1_2f3a6 = call i32 @unknown_54804(i32 %arg1)
  %v2_2f3ab = inttoptr i32 %v1_2f399 to i32*
  store i32 %v1_2f3a6, i32* %v2_2f3ab, align 4
  %v1_2f3b0 = add i32 %arg1, 20
  %v2_2f3b0 = inttoptr i32 %v1_2f3b0 to i32*
  store i32 0, i32* %v2_2f3b0, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f3c3

bb:                                               ; preds = %dec_label_pc_2f336
  %v1_2f3c1 = call i32 @function_2f3c8()
  br label %dec_label_pc_2f3c3

dec_label_pc_2f3c3:                               ; preds = %bb, %dec_label_pc_2f336
  %v2_2f3c1 = phi i32 [ %v1_2f3c1, %bb ], [ 0, %dec_label_pc_2f336 ]
  ret i32 %v2_2f3c1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_54804, { 1, 0 }
  uselistorder i32 %arg1, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_2f3c8() local_unnamed_addr {
dec_label_pc_2f3c8:
  %v0_2f3cd = load i32, i32* @eax, align 4
  ret i32 %v0_2f3cd
}

define i32 @_ZNSt23_Rb_tree_const_iteratorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EEEppEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f3ce:
  %v1_2f3f7 = inttoptr i32 %arg2 to i32*
  %v2_2f3f7 = load i32, i32* %v1_2f3f7, align 4
  store i32 %v2_2f3f7, i32* %arg1, align 4
  %v2_2f3fe = load i32, i32* %v1_2f3f7, align 4
  ret i32 %v2_2f3fe
}

define i32 @function_2f420() local_unnamed_addr {
dec_label_pc_2f420:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2f420 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2f420 = add i32 %v0_2f420, -1
  store i32 %v1_2f420, i32* %ecx.global-to-local, align 4
  %v0_2f422 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f422
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE5eraseESt23_Rb_tree_const_iteratorIS9_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f426:
  %v2_2f450 = call i32 @unknown_61e52(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f461

bb:                                               ; preds = %dec_label_pc_2f426
  %v1_2f45f = call i32 @function_2f466()
  br label %dec_label_pc_2f461

dec_label_pc_2f461:                               ; preds = %bb, %dec_label_pc_2f426
  %v2_2f45f = phi i32 [ %v1_2f45f, %bb ], [ 0, %dec_label_pc_2f426 ]
  ret i32 %v2_2f45f
}

define i32 @function_2f466() local_unnamed_addr {
dec_label_pc_2f466:
  %v0_2f467 = load i32, i32* @eax, align 4
  ret i32 %v0_2f467
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f468:
  ret i32 %arg1
}

define i32 @function_2f474(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f474:
  %v0_2f474 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2f47a = load i32, i32* @ebp, align 4
  %v2_2f47a = add i32 %v1_2f47a, -12
  %v3_2f47a = inttoptr i32 %v2_2f47a to i32*
  store i32 %v0_2f474, i32* %v3_2f47a, align 4
  %v0_2f47f = load i32, i32* @ebp, align 4
  %v1_2f47f = add i32 %v0_2f47f, -28
  %v2_2f47f = inttoptr i32 %v1_2f47f to i32*
  %v3_2f47f = load i32, i32* %v2_2f47f, align 4
  %v3_2f495 = call i32 @unknown_61efe(i32 %v3_2f47f, i32 1, i32 0)
  store i32 %v3_2f495, i32* @eax, align 4
  %v0_2f49a = load i32, i32* @ebp, align 4
  %v1_2f49a = add i32 %v0_2f49a, -12
  %v2_2f49a = inttoptr i32 %v1_2f49a to i32*
  %v3_2f49a = load i32, i32* %v2_2f49a, align 4
  %v1_2f49d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_2f49d = icmp eq i32 %v1_2f49d, %v3_2f49a
  br i1 %v3_2f49d, label %bb, label %dec_label_pc_2f4a6

bb:                                               ; preds = %dec_label_pc_2f474
  %v1_2f4a4 = call i32 @function_2f4ab()
  br label %dec_label_pc_2f4a6

dec_label_pc_2f4a6:                               ; preds = %bb, %dec_label_pc_2f474
  %v2_2f4a4 = phi i32 [ %v1_2f4a4, %bb ], [ %v3_2f495, %dec_label_pc_2f474 ]
  ret i32 %v2_2f4a4
}

define i32 @function_2f4ab() local_unnamed_addr {
dec_label_pc_2f4ab:
  %v0_2f4ac = load i32, i32* @eax, align 4
  ret i32 %v0_2f4ac
}

define i32 @_ZN5boost6tuples4consISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEC1ERKS8_(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f4ae:
  %v4_2f4d0 = ptrtoint i8* %arg1 to i32
  %v4_2f4da = call i32 @unknown_45ba6(i32 %v4_2f4d0, i32 %arg2)
  %v1_2f4e5 = add i32 %v4_2f4d0, 12
  %v1_2f4e8 = add i32 %arg2, 12
  %v1_2f4f0 = inttoptr i32 %v1_2f4e5 to i8*
  %v1_2f4f2 = inttoptr i32 %v1_2f4e8 to i8*
  call void @__asm_rep_movsd_memcpy(i8* %v1_2f4f0, i8* %v1_2f4f2, i32 16)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f511

bb:                                               ; preds = %dec_label_pc_2f4ae
  %v1_2f50f = call i32 @function_2f516()
  br label %dec_label_pc_2f511

dec_label_pc_2f511:                               ; preds = %bb, %dec_label_pc_2f4ae
  %v2_2f50f = phi i32 [ %v1_2f50f, %bb ], [ 0, %dec_label_pc_2f4ae ]
  ret i32 %v2_2f50f
}

define i32 @function_2f516() local_unnamed_addr {
dec_label_pc_2f516:
  %v0_2f51c = load i32, i32* @eax, align 4
  ret i32 %v0_2f51c
}

define i32 @_ZN5boost6tuples4consI7uint256NS1_ISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEEEC1ERKSA_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f51e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_2f530 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp103, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_2f541 = inttoptr i32 %arg2 to i32*
  %v2_2f541 = load i32, i32* %v1_2f541, align 4
  store i32 %v2_2f541, i32* %arg1, align 4
  %v1_2f545 = add i32 %arg2, 4
  %v2_2f545 = inttoptr i32 %v1_2f545 to i32*
  %v3_2f545 = load i32, i32* %v2_2f545, align 4
  %v1_2f548 = load i32, i32* %eax.global-to-local, align 4
  %v2_2f548 = add i32 %v1_2f548, 4
  %v3_2f548 = inttoptr i32 %v2_2f548 to i32*
  store i32 %v3_2f545, i32* %v3_2f548, align 4
  %v0_2f54b = load i32, i32* %edx.global-to-local, align 4
  %v1_2f54b = add i32 %v0_2f54b, 8
  %v2_2f54b = inttoptr i32 %v1_2f54b to i32*
  %v3_2f54b = load i32, i32* %v2_2f54b, align 4
  %v1_2f54e = load i32, i32* %eax.global-to-local, align 4
  %v2_2f54e = add i32 %v1_2f54e, 8
  %v3_2f54e = inttoptr i32 %v2_2f54e to i32*
  store i32 %v3_2f54b, i32* %v3_2f54e, align 4
  %v0_2f551 = load i32, i32* %edx.global-to-local, align 4
  %v1_2f551 = add i32 %v0_2f551, 12
  %v2_2f551 = inttoptr i32 %v1_2f551 to i32*
  %v3_2f551 = load i32, i32* %v2_2f551, align 4
  %v1_2f554 = load i32, i32* %eax.global-to-local, align 4
  %v2_2f554 = add i32 %v1_2f554, 12
  %v3_2f554 = inttoptr i32 %v2_2f554 to i32*
  store i32 %v3_2f551, i32* %v3_2f554, align 4
  %v0_2f557 = load i32, i32* %edx.global-to-local, align 4
  %v1_2f557 = add i32 %v0_2f557, 16
  %v2_2f557 = inttoptr i32 %v1_2f557 to i32*
  %v3_2f557 = load i32, i32* %v2_2f557, align 4
  %v1_2f55a = load i32, i32* %eax.global-to-local, align 4
  %v2_2f55a = add i32 %v1_2f55a, 16
  %v3_2f55a = inttoptr i32 %v2_2f55a to i32*
  store i32 %v3_2f557, i32* %v3_2f55a, align 4
  %v0_2f55d = load i32, i32* %edx.global-to-local, align 4
  %v1_2f55d = add i32 %v0_2f55d, 20
  %v2_2f55d = inttoptr i32 %v1_2f55d to i32*
  %v3_2f55d = load i32, i32* %v2_2f55d, align 4
  %v1_2f560 = load i32, i32* %eax.global-to-local, align 4
  %v2_2f560 = add i32 %v1_2f560, 20
  %v3_2f560 = inttoptr i32 %v2_2f560 to i32*
  store i32 %v3_2f55d, i32* %v3_2f560, align 4
  %v0_2f563 = load i32, i32* %edx.global-to-local, align 4
  %v1_2f563 = add i32 %v0_2f563, 24
  %v2_2f563 = inttoptr i32 %v1_2f563 to i32*
  %v3_2f563 = load i32, i32* %v2_2f563, align 4
  %v1_2f566 = load i32, i32* %eax.global-to-local, align 4
  %v2_2f566 = add i32 %v1_2f566, 24
  %v3_2f566 = inttoptr i32 %v2_2f566 to i32*
  store i32 %v3_2f563, i32* %v3_2f566, align 4
  %v0_2f569 = load i32, i32* %edx.global-to-local, align 4
  %v1_2f569 = add i32 %v0_2f569, 28
  %v2_2f569 = inttoptr i32 %v1_2f569 to i32*
  %v3_2f569 = load i32, i32* %v2_2f569, align 4
  %v1_2f56c = load i32, i32* %eax.global-to-local, align 4
  %v2_2f56c = add i32 %v1_2f56c, 28
  %v3_2f56c = inttoptr i32 %v2_2f56c to i32*
  store i32 %v3_2f569, i32* %v3_2f56c, align 4
  %v1_2f572 = add i32 %arg2, 32
  store i32 %v1_2f572, i32* %edx.global-to-local, align 4
  %v1_2f578 = add i32 %tmp103, 32
  store i32 %v1_2f578, i32* %eax.global-to-local, align 4
  %v2_2f582 = call i32 @unknown_5e9cc(i32 %v1_2f578, i32 %v1_2f572)
  store i32 %v0_2f530, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f593

bb:                                               ; preds = %dec_label_pc_2f51e
  %v1_2f591 = call i32 @function_2f598()
  store i32 %v1_2f591, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_2f593

dec_label_pc_2f593:                               ; preds = %bb, %dec_label_pc_2f51e
  %v2_2f591 = phi i32 [ %v1_2f591, %bb ], [ 0, %dec_label_pc_2f51e ]
  ret i32 %v2_2f591

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 2, 1, 4 }
}

define i32 @function_2f598() local_unnamed_addr {
dec_label_pc_2f598:
  %v0_2f599 = load i32, i32* @eax, align 4
  ret i32 %v0_2f599
}

define i32 @_ZN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS0_9null_typeES7_S7_S7_S7_S7_S7_EC1ERKS8_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f59a:
  %v2_2f5c4 = call i32 @unknown_5eab8(i32 %arg1, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f5d5

bb:                                               ; preds = %dec_label_pc_2f59a
  %v1_2f5d3 = call i32 @function_2f5da()
  br label %dec_label_pc_2f5d5

dec_label_pc_2f5d5:                               ; preds = %bb, %dec_label_pc_2f59a
  %v2_2f5d3 = phi i32 [ %v1_2f5d3, %bb ], [ 0, %dec_label_pc_2f59a ]
  ret i32 %v2_2f5d3
}

define i32 @function_2f5da() local_unnamed_addr {
dec_label_pc_2f5da:
  %v0_2f5db = load i32, i32* @eax, align 4
  ret i32 %v0_2f5db
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEE9constructEPSA_RKSA_() local_unnamed_addr {
dec_label_pc_2f5dc:
  %eax.global-to-local = alloca i32, align 4
  %v5_2f5dc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_2f5dc
}

define i32 @function_2f5de(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f5de:
  %v0_2f5e5 = load i32, i32* @ebp, align 4
  %v1_2f5e5 = add i32 %v0_2f5e5, 8
  %v2_2f5e5 = inttoptr i32 %v1_2f5e5 to i32*
  %v3_2f5e5 = load i32, i32* %v2_2f5e5, align 4
  %v2_2f5e8 = add i32 %v0_2f5e5, -44
  %v3_2f5e8 = inttoptr i32 %v2_2f5e8 to i32*
  store i32 %v3_2f5e5, i32* %v3_2f5e8, align 4
  %v0_2f5eb = load i32, i32* @ebp, align 4
  %v1_2f5eb = add i32 %v0_2f5eb, 12
  %v2_2f5eb = inttoptr i32 %v1_2f5eb to i32*
  %v3_2f5eb = load i32, i32* %v2_2f5eb, align 4
  %v2_2f5ee = add i32 %v0_2f5eb, -48
  %v3_2f5ee = inttoptr i32 %v2_2f5ee to i32*
  store i32 %v3_2f5eb, i32* %v3_2f5ee, align 4
  %v0_2f5f1 = load i32, i32* @ebp, align 4
  %v1_2f5f1 = add i32 %v0_2f5f1, 16
  %v2_2f5f1 = inttoptr i32 %v1_2f5f1 to i32*
  %v3_2f5f1 = load i32, i32* %v2_2f5f1, align 4
  %v2_2f5f4 = add i32 %v0_2f5f1, -52
  %v3_2f5f4 = inttoptr i32 %v2_2f5f4 to i32*
  store i32 %v3_2f5f1, i32* %v3_2f5f4, align 4
  %v0_2f5f7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2f5fd = load i32, i32* @ebp, align 4
  %v2_2f5fd = add i32 %v1_2f5fd, -28
  %v3_2f5fd = inttoptr i32 %v2_2f5fd to i32*
  store i32 %v0_2f5f7, i32* %v3_2f5fd, align 4
  store i32 0, i32* @eax, align 4
  %v0_2f602 = load i32, i32* @ebp, align 4
  %v1_2f602 = add i32 %v0_2f602, -48
  %v2_2f602 = inttoptr i32 %v1_2f602 to i32*
  %v3_2f602 = load i32, i32* %v2_2f602, align 4
  store i32 %v3_2f602, i32* @esi, align 4
  %v2_2f610 = call i32 @function_384c8(i32 112, i32 %v3_2f602)
  store i1 false, i1* @cf, align 1
  ret i32 %v2_2f610
}

define i32 @function_2f61a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f61a:
  %v0_2f61a = load i32, i32* @ebx, align 4
  %v1_2f61a = add i32 %v0_2f61a, 1149881413
  %v2_2f61a = inttoptr i32 %v1_2f61a to i32*
  %v3_2f61a = load i32, i32* %v2_2f61a, align 4
  %v4_2f61a = load i32, i32* @ecx, align 4
  %v5_2f61a = sub i32 %v3_2f61a, %v4_2f61a
  store i32 %v5_2f61a, i32* %v2_2f61a, align 4
  %v0_2f622 = load i32, i32* @ebx, align 4
  %v1_2f625 = call i32 @unknown_5eb76(i32 %v0_2f622)
  %v0_2f62a = call i32 @function_2f644()
  ret i32 %v0_2f62a
}

define i32 @function_2f636(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f636:
  %v0_2f636 = load i32, i32* @esi, align 4
  %v1_2f636 = add i32 %v0_2f636, -125239296
  %v2_2f636 = inttoptr i32 %v1_2f636 to i32*
  %v3_2f636 = load i32, i32* %v2_2f636, align 4
  %v4_2f636 = udiv i32 %v3_2f636, 512
  %v5_2f636 = mul i32 %v3_2f636, 8388608
  %v6_2f636 = or i32 %v4_2f636, %v5_2f636
  store i32 %v6_2f636, i32* %v2_2f636, align 4
  %v0_2f63d = load i32, i32* @eax, align 4
  %v2_2f63d = add i32 %v0_2f63d, 36
  %v16_2f63d = and i32 %v2_2f63d, 255
  %v18_2f63d = and i32 %v0_2f63d, -256
  %v19_2f63d = or i32 %v16_2f63d, %v18_2f63d
  ret i32 %v19_2f63d

; uselistorder directives
  uselistorder i32 %v0_2f63d, { 1, 0 }
}

define i32 @function_2f644() local_unnamed_addr {
dec_label_pc_2f644:
  %v0_2f644 = load i32, i32* @ebp, align 4
  %v1_2f644 = add i32 %v0_2f644, -28
  %v2_2f644 = inttoptr i32 %v1_2f644 to i32*
  %v3_2f644 = load i32, i32* %v2_2f644, align 4
  %v1_2f647 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f647 = xor i32 %v1_2f647, %v3_2f644
  %v3_2f647 = icmp eq i32 %v2_2f647, 0
  store i32 %v2_2f647, i32* @eax, align 4
  br i1 %v3_2f647, label %bb, label %dec_label_pc_2f650

bb:                                               ; preds = %dec_label_pc_2f644
  %v1_2f64e = call i32 @function_2f655()
  br label %dec_label_pc_2f650

dec_label_pc_2f650:                               ; preds = %bb, %dec_label_pc_2f644
  %v2_2f64e = phi i32 [ %v1_2f64e, %bb ], [ %v2_2f647, %dec_label_pc_2f644 ]
  ret i32 %v2_2f64e
}

define i32 @function_2f655() local_unnamed_addr {
dec_label_pc_2f655:
  %v0_2f65c = load i32, i32* @eax, align 4
  ret i32 %v0_2f65c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS3_9null_typeESA_SA_SA_SA_SA_SA_EEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f65e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f681

bb:                                               ; preds = %dec_label_pc_2f65e
  %v2_2f67f = call i32 @function_2f686(i32 %arg1)
  br label %dec_label_pc_2f681

dec_label_pc_2f681:                               ; preds = %bb, %dec_label_pc_2f65e
  %v3_2f67f = phi i32 [ %v2_2f67f, %bb ], [ 0, %dec_label_pc_2f65e ]
  ret i32 %v3_2f67f
}

define i32 @function_2f686(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f686:
  %v0_2f687 = load i32, i32* @eax, align 4
  ret i32 %v0_2f687
}

define i32 @_ZNKSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f688:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f6ae

bb:                                               ; preds = %dec_label_pc_2f688
  %v2_2f6ac = call i32 @function_2f6b3(i32 %arg1)
  br label %dec_label_pc_2f6ae

dec_label_pc_2f6ae:                               ; preds = %bb, %dec_label_pc_2f688
  %v3_2f6ac = phi i32 [ %v2_2f6ac, %bb ], [ %arg1, %dec_label_pc_2f688 ]
  ret i32 %v3_2f6ac
}

define i32 @function_2f6b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f6b3:
  %v0_2f6b4 = load i32, i32* @eax, align 4
  ret i32 %v0_2f6b4
}

define i32 @_ZNSaIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS0_9null_typeES7_S7_S7_S7_S7_S7_EEEC1ISt13_Rb_tree_nodeIS8_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f6b6:
  %v1_2f6d9 = call i32 @unknown_621aa(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f6ea

bb:                                               ; preds = %dec_label_pc_2f6b6
  %v1_2f6e8 = call i32 @function_2f6ef()
  br label %dec_label_pc_2f6ea

dec_label_pc_2f6ea:                               ; preds = %bb, %dec_label_pc_2f6b6
  %v2_2f6e8 = phi i32 [ %v1_2f6e8, %bb ], [ 0, %dec_label_pc_2f6b6 ]
  ret i32 %v2_2f6e8
}

define i32 @function_2f6ef() local_unnamed_addr {
dec_label_pc_2f6ef:
  %v0_2f6f0 = load i32, i32* @eax, align 4
  ret i32 %v0_2f6f0
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f6f2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f715

bb:                                               ; preds = %dec_label_pc_2f6f2
  %v2_2f713 = call i32 @function_2f71a(i32 %arg1)
  br label %dec_label_pc_2f715

dec_label_pc_2f715:                               ; preds = %bb, %dec_label_pc_2f6f2
  %v3_2f713 = phi i32 [ %v2_2f713, %bb ], [ 0, %dec_label_pc_2f6f2 ]
  ret i32 %v3_2f713
}

define i32 @function_2f71a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f71a:
  %v0_2f71b = load i32, i32* @eax, align 4
  ret i32 %v0_2f71b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS3_9null_typeESA_SA_SA_SA_SA_SA_EEEE10deallocateEPSC_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f71c:
  ret i32 0
}

define i32 @function_2f73f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f73f:
  %v0_2f73f = load i32, i32* @ebp, align 4
  %v1_2f73f = add i32 %v0_2f73f, -32
  %v2_2f73f = inttoptr i32 %v1_2f73f to i32*
  %v3_2f73f = load i32, i32* %v2_2f73f, align 4
  ret i32 %v3_2f73f
}

define i32 @function_2f75a() local_unnamed_addr {
dec_label_pc_2f75a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2f75a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2f75a = add i32 %v0_2f75a, -1
  store i32 %v1_2f75a, i32* %ecx.global-to-local, align 4
  %v0_2f75c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f75c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f75e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f781

bb:                                               ; preds = %dec_label_pc_2f75e
  %v2_2f77f = call i32 @function_2f786(i32 %arg1)
  br label %dec_label_pc_2f781

dec_label_pc_2f781:                               ; preds = %bb, %dec_label_pc_2f75e
  %v3_2f77f = phi i32 [ %v2_2f77f, %bb ], [ 0, %dec_label_pc_2f75e ]
  ret i32 %v3_2f77f
}

define i32 @function_2f786(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f786:
  %v0_2f787 = load i32, i32* @eax, align 4
  ret i32 %v0_2f787
}

define i32 @_ZNKSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f788:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f7ae

bb:                                               ; preds = %dec_label_pc_2f788
  %v2_2f7ac = call i32 @function_2f7b3(i32 %arg1)
  br label %dec_label_pc_2f7ae

dec_label_pc_2f7ae:                               ; preds = %bb, %dec_label_pc_2f788
  %v3_2f7ac = phi i32 [ %v2_2f7ac, %bb ], [ %arg1, %dec_label_pc_2f788 ]
  ret i32 %v3_2f7ac
}

define i32 @function_2f7b3(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7b3:
  %v0_2f7b4 = load i32, i32* @eax, align 4
  ret i32 %v0_2f7b4
}

define i32 @_ZNSaISt4pairIK10txnouttype7CScriptEEC1ISt13_Rb_tree_nodeIS3_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f7b6:
  %v1_2f7d9 = call i32 @unknown_622d4(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f7ea

bb:                                               ; preds = %dec_label_pc_2f7b6
  %v1_2f7e8 = call i32 @function_2f7ef()
  br label %dec_label_pc_2f7ea

dec_label_pc_2f7ea:                               ; preds = %bb, %dec_label_pc_2f7b6
  %v2_2f7e8 = phi i32 [ %v1_2f7e8, %bb ], [ 0, %dec_label_pc_2f7b6 ]
  ret i32 %v2_2f7e8
}

define i32 @function_2f7ef() local_unnamed_addr {
dec_label_pc_2f7ef:
  %v0_2f7f0 = load i32, i32* @eax, align 4
  ret i32 %v0_2f7f0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK10txnouttype7CScriptEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f7f2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f815

bb:                                               ; preds = %dec_label_pc_2f7f2
  %v2_2f813 = call i32 @function_2f81a(i32 %arg1)
  br label %dec_label_pc_2f815

dec_label_pc_2f815:                               ; preds = %bb, %dec_label_pc_2f7f2
  %v3_2f813 = phi i32 [ %v2_2f813, %bb ], [ 0, %dec_label_pc_2f7f2 ]
  ret i32 %v3_2f813
}

define i32 @function_2f81a(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f81a:
  %v0_2f81b = load i32, i32* @eax, align 4
  ret i32 %v0_2f81b
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEE10deallocateEPS7_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f81c:
  ret i32 %arg2
}

define i32 @function_2f842(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f842:
  %v3_2f842 = load i32, i32* @eax, align 4
  ret i32 %v3_2f842
}

define i32 @function_2f85a() local_unnamed_addr {
dec_label_pc_2f85a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2f85a = load i32, i32* %ecx.global-to-local, align 4
  %v1_2f85a = add i32 %v0_2f85a, -1
  store i32 %v1_2f85a, i32* %ecx.global-to-local, align 4
  %v0_2f85c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f85c
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f85e:
  %v3_2f88b = call i32 @unknown_623a6(i32 %arg1, i32 1, i32 0)
  store i32 %v3_2f88b, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f89c

bb:                                               ; preds = %dec_label_pc_2f85e
  %v1_2f89a = call i32 @function_2f8a1()
  br label %dec_label_pc_2f89c

dec_label_pc_2f89c:                               ; preds = %bb, %dec_label_pc_2f85e
  %v2_2f89a = phi i32 [ %v1_2f89a, %bb ], [ %v3_2f88b, %dec_label_pc_2f85e ]
  ret i32 %v2_2f89a
}

define i32 @function_2f8a1() local_unnamed_addr {
dec_label_pc_2f8a1:
  %v0_2f8a2 = load i32, i32* @eax, align 4
  ret i32 %v0_2f8a2
}

define i32 @_ZNSt4pairIK10txnouttype7CScriptEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f8a4:
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_2f8c4 = inttoptr i32 %arg2 to i32*
  %v2_2f8c4 = load i32, i32* %v1_2f8c4, align 4
  store i32 %v2_2f8c4, i32* %arg1, align 4
  %v1_2f8ce = add i32 %arg2, 4
  %v1_2f8d4 = add i32 %tmp103, 4
  %v2_2f8de = call i32 @unknown_41f5c(i32 %v1_2f8d4, i32 %v1_2f8ce)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f8ef

bb:                                               ; preds = %dec_label_pc_2f8a4
  %v1_2f8ed = call i32 @function_2f8f4()
  br label %dec_label_pc_2f8ef

dec_label_pc_2f8ef:                               ; preds = %bb, %dec_label_pc_2f8a4
  %v2_2f8ed = phi i32 [ %v1_2f8ed, %bb ], [ 0, %dec_label_pc_2f8a4 ]
  ret i32 %v2_2f8ed

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_2f8f4() local_unnamed_addr {
dec_label_pc_2f8f4:
  %v0_2f8f5 = load i32, i32* @eax, align 4
  ret i32 %v0_2f8f5
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK10txnouttype7CScriptEE9constructEPS5_RKS5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2f8f6:
  store i32 0, i32* @eax, align 4
  %v2_2f92a = call i32 @function_387e2(i32 16, i32 %arg2)
  %v1_2f931 = icmp eq i32 %v2_2f92a, 0
  br i1 %v1_2f931, label %bb, label %dec_label_pc_2f935

bb:                                               ; preds = %dec_label_pc_2f8f6
  %v1_2f933 = call i32 @function_2f95e()
  br label %dec_label_pc_2f935

dec_label_pc_2f935:                               ; preds = %bb, %dec_label_pc_2f8f6
  %v2_2f93f = call i32 @unknown_5f19a(i32 %v2_2f92a, i32 %arg3)
  %v0_2f944 = call i32 @function_2f95e()
  ret i32 %v0_2f944

; uselistorder directives
  uselistorder i32 ()* @function_2f95e, { 1, 0 }
}

define i32 @function_2f95e() local_unnamed_addr {
dec_label_pc_2f95e:
  %v0_2f95e = load i32, i32* @ebp, align 4
  %v1_2f95e = add i32 %v0_2f95e, -28
  %v2_2f95e = inttoptr i32 %v1_2f95e to i32*
  %v3_2f95e = load i32, i32* %v2_2f95e, align 4
  %v1_2f961 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_2f961 = xor i32 %v1_2f961, %v3_2f95e
  %v3_2f961 = icmp eq i32 %v2_2f961, 0
  store i32 %v2_2f961, i32* @eax, align 4
  br i1 %v3_2f961, label %bb, label %dec_label_pc_2f96a

bb:                                               ; preds = %dec_label_pc_2f95e
  %v1_2f968 = call i32 @function_2f96f()
  br label %dec_label_pc_2f96a

dec_label_pc_2f96a:                               ; preds = %bb, %dec_label_pc_2f95e
  %v2_2f968 = phi i32 [ %v1_2f968, %bb ], [ %v2_2f961, %dec_label_pc_2f95e ]
  ret i32 %v2_2f968
}

define i32 @function_2f96c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f96c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2f96f() local_unnamed_addr {
dec_label_pc_2f96f:
  %v0_2f976 = load i32, i32* @eax, align 4
  ret i32 %v0_2f976
}

define i32 @_ZNSt8_Rb_treeI10txnouttypeSt4pairIKS0_7CScriptESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2f978:
  %v1_2f998 = add i32 %arg2, 4
  %v2_2f9a5 = call i32 @unknown_55958(i32 %arg1, i32 %v1_2f998)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2f9b9

bb:                                               ; preds = %dec_label_pc_2f978
  %v1_2f9b7 = call i32 @function_2f9be()
  br label %dec_label_pc_2f9b9

dec_label_pc_2f9b9:                               ; preds = %bb, %dec_label_pc_2f978
  %v2_2f9b7 = phi i32 [ %v1_2f9b7, %bb ], [ %arg1, %dec_label_pc_2f978 ]
  ret i32 %v2_2f9b7

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_2f9be() local_unnamed_addr {
dec_label_pc_2f9be:
  %v0_2f9bf = load i32, i32* @eax, align 4
  ret i32 %v0_2f9bf
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKvNS_7variantISC_SE_SG_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2f9c2:
  ret i32 %arg4
}

define i32 @function_2f9e6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f9e6:
  %cf.global-to-local = alloca i1, align 1
  %v0_2f9e6 = load i32, i32* @eax, align 4
  %v1_2f9e6 = add i32 %v0_2f9e6, -1240479931
  %v2_2f9e6 = inttoptr i32 %v1_2f9e6 to i8*
  %v3_2f9e6 = load i8, i8* %v2_2f9e6, align 1
  %v4_2f9e6 = load i32, i32* @ecx, align 4
  %v5_2f9e6 = trunc i32 %v4_2f9e6 to i8
  %v6_2f9e6 = load i1, i1* @cf, align 1
  %v7_2f9e6 = zext i1 %v6_2f9e6 to i8
  %v8_2f9e6 = sub i8 %v3_2f9e6, %v5_2f9e6
  %v9_2f9e6 = add i8 %v8_2f9e6, %v7_2f9e6
  %v19_2f9e6 = sub i8 %v8_2f9e6, %v7_2f9e6
  %v20_2f9e6 = icmp ult i8 %v3_2f9e6, %v19_2f9e6
  %v21_2f9e6 = icmp ne i8 %v5_2f9e6, -1
  %v22_2f9e6 = or i1 %v21_2f9e6, %v20_2f9e6
  %v23_2f9e6 = icmp ult i8 %v3_2f9e6, %v5_2f9e6
  %v24_2f9e6 = select i1 %v6_2f9e6, i1 %v22_2f9e6, i1 %v23_2f9e6
  store i1 %v24_2f9e6, i1* %cf.global-to-local, align 1
  store i8 %v9_2f9e6, i8* %v2_2f9e6, align 1
  %v0_2f9ec = load i32, i32* @ebp, align 4
  %v0_2f9ed = load i32, i32* @eax, align 4
  %v1_2f9ed = trunc i32 %v0_2f9ed to i8
  %v2_2f9ed = load i1, i1* %cf.global-to-local, align 1
  %v3_2f9ed = zext i1 %v2_2f9ed to i32
  %v4_2f9ed = add i32 %v0_2f9ed, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_88.2212 to i8) to i32))
  %v5_2f9ed = add i32 %v4_2f9ed, %v3_2f9ed
  %v17_2f9ed = icmp ult i8 %v1_2f9ed, -120
  %v18_2f9ed = or i1 %v2_2f9ed, %v17_2f9ed
  store i1 %v18_2f9ed, i1* %cf.global-to-local, align 1
  %v31_2f9ed = urem i32 %v5_2f9ed, 256
  %v33_2f9ed = and i32 %v0_2f9ed, -256
  %v34_2f9ed = or i32 %v31_2f9ed, %v33_2f9ed
  %v1_2f9ef = add i32 %v0_2f9ec, 2
  store i32 %v1_2f9ef, i32* @ebp, align 4
  ret i32 %v34_2f9ed

; uselistorder directives
  uselistorder i1 %v2_2f9ed, { 1, 0 }
  uselistorder i32 %v0_2f9ed, { 1, 0, 2 }
  uselistorder i8 %v5_2f9e6, { 1, 0, 2 }
}

define i32 @function_2f9f1() local_unnamed_addr {
dec_label_pc_2f9f1:
  %v0_2f9f1 = load i32, i32* @ebp, align 4
  %v1_2f9f1 = add i32 %v0_2f9f1, 32
  %v2_2f9f1 = inttoptr i32 %v1_2f9f1 to i32*
  %v3_2f9f1 = load i32, i32* %v2_2f9f1, align 4
  %v2_2f9f4 = add i32 %v0_2f9f1, -64
  %v3_2f9f4 = inttoptr i32 %v2_2f9f4 to i32*
  store i32 %v3_2f9f1, i32* %v3_2f9f4, align 4
  %v0_2f9f7 = load i32, i32* @ebp, align 4
  %v1_2f9f7 = add i32 %v0_2f9f7, 36
  %v2_2f9f7 = inttoptr i32 %v1_2f9f7 to i32*
  %v3_2f9f7 = load i32, i32* %v2_2f9f7, align 4
  %v2_2f9fa = add i32 %v0_2f9f7, -68
  %v3_2f9fa = inttoptr i32 %v2_2f9fa to i32*
  store i32 %v3_2f9f7, i32* %v3_2f9fa, align 4
  %v0_2f9fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_2fa03 = load i32, i32* @ebp, align 4
  %v2_2fa03 = add i32 %v1_2fa03, -28
  %v3_2fa03 = inttoptr i32 %v2_2fa03 to i32*
  store i32 %v0_2f9fd, i32* %v3_2fa03, align 4
  %v0_2fa08 = load i32, i32* @ebp, align 4
  %v1_2fa08 = add i32 %v0_2fa08, -48
  %v2_2fa08 = inttoptr i32 %v1_2fa08 to i32*
  %v3_2fa08 = load i32, i32* %v2_2fa08, align 4
  %tmp100 = icmp ult i32 %v3_2fa08, 20
  br i1 %tmp100, label %dec_label_pc_2fa12, label %bb

bb:                                               ; preds = %dec_label_pc_2f9f1
  %v4_2fa0c = call i32 @function_2fe4b()
  %v0_2fa12.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_2fa12

dec_label_pc_2fa12:                               ; preds = %dec_label_pc_2f9f1, %bb
  %v0_2fa12 = phi i32 [ %v0_2fa08, %dec_label_pc_2f9f1 ], [ %v0_2fa12.pre, %bb ]
  %v1_2fa12 = add i32 %v0_2fa12, -48
  %v2_2fa12 = inttoptr i32 %v1_2fa12 to i32*
  %v3_2fa12 = load i32, i32* %v2_2fa12, align 4
  %v2_2fa15 = mul i32 %v3_2fa12, 4
  %v1_2fa18 = add i32 %v2_2fa15, ptrtoint (i32* @global_var_2fe9c.2289 to i32)
  %v1_2fa1d = inttoptr i32 %v1_2fa18 to i32*
  %v2_2fa1d = load i32, i32* %v1_2fa1d, align 4
  ret i32 %v2_2fa1d

; uselistorder directives
  uselistorder label %dec_label_pc_2fa12, { 1, 0 }
}

define i32 @function_2fa21() local_unnamed_addr {
dec_label_pc_2fa21:
  %v0_2fa29 = load i32, i32* @ebp, align 4
  %v1_2fa29 = add i32 %v0_2fa29, -83
  %v2_2fa29 = inttoptr i32 %v1_2fa29 to i8*
  %v3_2fa29 = load i8, i8* %v2_2fa29, align 1
  %v1_2fa39 = add i32 %v0_2fa29, -56
  %v2_2fa39 = inttoptr i32 %v1_2fa39 to i32*
  %v3_2fa39 = load i32, i32* %v2_2fa39, align 4
  %v1_2fa40 = add i32 %v0_2fa29, -52
  %v2_2fa40 = inttoptr i32 %v1_2fa40 to i32*
  %v3_2fa40 = load i32, i32* %v2_2fa40, align 4
  %v1_2fa47 = add i32 %v0_2fa29, -44
  %v2_2fa47 = inttoptr i32 %v1_2fa47 to i32*
  %v3_2fa47 = load i32, i32* %v2_2fa47, align 4
  %v6_2fa4d = sext i8 %v3_2fa29 to i32
  %v7_2fa4d = call i32 @unknown_62568(i32 %v3_2fa47, i32 %v3_2fa40, i32 %v3_2fa39, i32 0, i32 %v6_2fa4d, i32 1)
  store i32 %v7_2fa4d, i32* @eax, align 4
  %v0_2fa52 = call i32 @function_2fe83()
  ret i32 %v0_2fa52

; uselistorder directives
  uselistorder i32 %v0_2fa29, { 0, 2, 1, 3 }
}

define i32 @function_2fa7c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fa7c:
  %v0_2fa7e = load i32, i32* @ebp, align 4
  %v1_2fa7e = add i32 %v0_2fa7e, 1
  store i32 %v1_2fa7e, i32* @ebp, align 4
  %v0_2fa83 = call i32 @unknown_625d5()
  store i32 %v0_2fa83, i32* @eax, align 4
  %v0_2fa88 = call i32 @function_2fe83()
  ret i32 %v0_2fa88
}

define i32 @function_2fa8d() local_unnamed_addr {
dec_label_pc_2fa8d:
  %v0_2fa95 = load i32, i32* @ebp, align 4
  %v1_2fa95 = add i32 %v0_2fa95, -81
  %v2_2fa95 = inttoptr i32 %v1_2fa95 to i8*
  %v3_2fa95 = load i8, i8* %v2_2fa95, align 1
  %v1_2faa5 = add i32 %v0_2fa95, -56
  %v2_2faa5 = inttoptr i32 %v1_2faa5 to i32*
  %v3_2faa5 = load i32, i32* %v2_2faa5, align 4
  %v1_2faac = add i32 %v0_2fa95, -52
  %v2_2faac = inttoptr i32 %v1_2faac to i32*
  %v3_2faac = load i32, i32* %v2_2faac, align 4
  %v1_2fab3 = add i32 %v0_2fa95, -44
  %v2_2fab3 = inttoptr i32 %v1_2fab3 to i32*
  %v3_2fab3 = load i32, i32* %v2_2fab3, align 4
  %v6_2fab9 = sext i8 %v3_2fa95 to i32
  %v7_2fab9 = call i32 @unknown_62642(i32 %v3_2fab3, i32 %v3_2faac, i32 %v3_2faa5, i32 0, i32 %v6_2fab9, i32 1)
  store i32 %v7_2fab9, i32* @eax, align 4
  %v0_2fabe = call i32 @function_2fe83()
  ret i32 %v0_2fabe

; uselistorder directives
  uselistorder i32 %v0_2fa95, { 0, 2, 1, 3 }
}

define i32 @function_2fac3() local_unnamed_addr {
dec_label_pc_2fac3:
  %v0_2facb = load i32, i32* @ebp, align 4
  %v1_2fae2 = add i32 %v0_2facb, -52
  %v2_2fae2 = inttoptr i32 %v1_2fae2 to i32*
  %v3_2fae2 = load i32, i32* %v2_2fae2, align 4
  %v1_2fae9 = add i32 %v0_2facb, -44
  %v2_2fae9 = inttoptr i32 %v1_2fae9 to i32*
  %v3_2fae9 = load i32, i32* %v2_2fae9, align 4
  %v2_2faef = call i32 @unknown_626af(i32 %v3_2fae9, i32 %v3_2fae2)
  store i32 %v2_2faef, i32* @eax, align 4
  %v0_2faf4 = call i32 @function_2fe83()
  ret i32 %v0_2faf4

; uselistorder directives
  uselistorder i32 %v0_2facb, { 1, 0 }
}

define i32 @function_2fb08(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fb08:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fb08 = load i32, i32* @ebx, align 4
  %v1_2fb08 = udiv i32 %v0_2fb08, 256
  %v3_2fb08 = load i32, i32* @eax, align 4
  %v4_2fb08 = trunc i32 %v3_2fb08 to i8
  %v5_2fb08 = load i1, i1* @cf, align 1
  %v6_2fb08 = zext i1 %v5_2fb08 to i32
  %v7_2fb08 = add i32 %v1_2fb08, %v3_2fb08
  %v8_2fb08 = add i32 %v7_2fb08, %v6_2fb08
  %v29_2fb08 = mul i32 %v8_2fb08, 256
  %v31_2fb08 = and i32 %v29_2fb08, 65280
  %v32_2fb08 = and i32 %v0_2fb08, -65281
  %v33_2fb08 = or i32 %v31_2fb08, %v32_2fb08
  store i32 %v33_2fb08, i32* @ebx, align 4
  %v2_2fb0b = and i8 %v4_2fb08, 12
  %v8_2fb0b = zext i8 %v2_2fb0b to i32
  %v10_2fb0b = and i32 %v3_2fb08, -256
  %v11_2fb0b = or i32 %v8_2fb0b, %v10_2fb0b
  store i32 %v11_2fb0b, i32* %eax.global-to-local, align 4
  %v1_2fb0d = inttoptr i32 %v11_2fb0b to i8*
  %v2_2fb0d = load i8, i8* %v1_2fb0d, align 4
  %v5_2fb0d = add i8 %v2_2fb0d, %v2_2fb0b
  store i8 %v5_2fb0d, i8* %v1_2fb0d, align 4
  %v0_2fb0f = load i32, i32* %eax.global-to-local, align 4
  %v1_2fb0f = inttoptr i32 %v0_2fb0f to i8*
  %v2_2fb0f = load i8, i8* %v1_2fb0f, align 1
  %v4_2fb0f = trunc i32 %v0_2fb0f to i8
  %v5_2fb0f = add i8 %v2_2fb0f, %v4_2fb0f
  store i8 %v5_2fb0f, i8* %v1_2fb0f, align 1
  %v0_2fb11 = load i32, i32* @ebp, align 4
  %v1_2fb11 = add i32 %v0_2fb11, -56
  %v2_2fb11 = inttoptr i32 %v1_2fb11 to i32*
  %v3_2fb11 = load i32, i32* %v2_2fb11, align 4
  store i32 %v3_2fb11, i32* %eax.global-to-local, align 4
  %v1_2fb18 = add i32 %v0_2fb11, -52
  %v2_2fb18 = inttoptr i32 %v1_2fb18 to i32*
  %v3_2fb18 = load i32, i32* %v2_2fb18, align 4
  store i32 %v3_2fb18, i32* %eax.global-to-local, align 4
  %v1_2fb1f = add i32 %v0_2fb11, -44
  %v2_2fb1f = inttoptr i32 %v1_2fb1f to i32*
  %v3_2fb1f = load i32, i32* %v2_2fb1f, align 4
  store i32 %v3_2fb1f, i32* %eax.global-to-local, align 4
  %v2_2fb25 = call i32 @unknown_626af(i32 %v3_2fb1f, i32 %v3_2fb18)
  store i32 %v2_2fb25, i32* @eax, align 4
  %v0_2fb2a = call i32 @function_2fe83()
  store i32 %v0_2fb2a, i32* %eax.global-to-local, align 4
  ret i32 %v0_2fb2a

; uselistorder directives
  uselistorder i32 %v3_2fb08, { 1, 0, 2 }
  uselistorder i32 %v0_2fb08, { 1, 0 }
}

define i32 @function_2fb36(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fb36:
  %v2_2fb36 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_2fb36 = load i32, i32* @ecx, align 4
  %v4_2fb36 = trunc i32 %v3_2fb36 to i8
  %v5_2fb36 = add i8 %v4_2fb36, %v2_2fb36
  %v20_2fb36 = load i32, i32* @edi, align 4
  %v21_2fb36 = inttoptr i32 %v20_2fb36 to i8*
  store i8 %v5_2fb36, i8* %v21_2fb36, align 1
  %v0_2fb47 = load i32, i32* @ebp, align 4
  %v1_2fb4e = add i32 %v0_2fb47, -52
  %v2_2fb4e = inttoptr i32 %v1_2fb4e to i32*
  %v3_2fb4e = load i32, i32* %v2_2fb4e, align 4
  %v1_2fb55 = add i32 %v0_2fb47, -44
  %v2_2fb55 = inttoptr i32 %v1_2fb55 to i32*
  %v3_2fb55 = load i32, i32* %v2_2fb55, align 4
  %v2_2fb5b = call i32 @unknown_626af(i32 %v3_2fb55, i32 %v3_2fb4e)
  store i32 %v2_2fb5b, i32* @eax, align 4
  %v0_2fb60 = call i32 @function_2fe83()
  ret i32 %v0_2fb60
}

define i32 @function_2fb65() local_unnamed_addr {
dec_label_pc_2fb65:
  %v0_2fb6d = load i32, i32* @ebp, align 4
  %v1_2fb84 = add i32 %v0_2fb6d, -52
  %v2_2fb84 = inttoptr i32 %v1_2fb84 to i32*
  %v3_2fb84 = load i32, i32* %v2_2fb84, align 4
  %v1_2fb8b = add i32 %v0_2fb6d, -44
  %v2_2fb8b = inttoptr i32 %v1_2fb8b to i32*
  %v3_2fb8b = load i32, i32* %v2_2fb8b, align 4
  %v2_2fb91 = call i32 @unknown_626af(i32 %v3_2fb8b, i32 %v3_2fb84)
  store i32 %v2_2fb91, i32* @eax, align 4
  %v0_2fb96 = call i32 @function_2fe83()
  ret i32 %v0_2fb96

; uselistorder directives
  uselistorder i32 %v0_2fb6d, { 1, 0 }
}

define i32 @function_2fb9b() local_unnamed_addr {
dec_label_pc_2fb9b:
  %v0_2fba3 = load i32, i32* @ebp, align 4
  %v1_2fbba = add i32 %v0_2fba3, -52
  %v2_2fbba = inttoptr i32 %v1_2fbba to i32*
  %v3_2fbba = load i32, i32* %v2_2fbba, align 4
  %v1_2fbc1 = add i32 %v0_2fba3, -44
  %v2_2fbc1 = inttoptr i32 %v1_2fbc1 to i32*
  %v3_2fbc1 = load i32, i32* %v2_2fbc1, align 4
  %v2_2fbc7 = call i32 @unknown_626af(i32 %v3_2fbc1, i32 %v3_2fbba)
  store i32 %v2_2fbc7, i32* @eax, align 4
  %v0_2fbcc = call i32 @function_2fe83()
  ret i32 %v0_2fbcc

; uselistorder directives
  uselistorder i32 %v0_2fba3, { 1, 0 }
}

define i32 @function_2fbd1() local_unnamed_addr {
dec_label_pc_2fbd1:
  %v0_2fbd9 = load i32, i32* @ebp, align 4
  %v1_2fbf0 = add i32 %v0_2fbd9, -52
  %v2_2fbf0 = inttoptr i32 %v1_2fbf0 to i32*
  %v3_2fbf0 = load i32, i32* %v2_2fbf0, align 4
  %v1_2fbf7 = add i32 %v0_2fbd9, -44
  %v2_2fbf7 = inttoptr i32 %v1_2fbf7 to i32*
  %v3_2fbf7 = load i32, i32* %v2_2fbf7, align 4
  %v2_2fbfd = call i32 @unknown_626af(i32 %v3_2fbf7, i32 %v3_2fbf0)
  store i32 %v2_2fbfd, i32* @eax, align 4
  %v0_2fc02 = call i32 @function_2fe83()
  ret i32 %v0_2fc02

; uselistorder directives
  uselistorder i32 %v0_2fbd9, { 1, 0 }
}

define i32 @function_2fc07() local_unnamed_addr {
dec_label_pc_2fc07:
  %v0_2fc0f = load i32, i32* @ebp, align 4
  %v1_2fc26 = add i32 %v0_2fc0f, -52
  %v2_2fc26 = inttoptr i32 %v1_2fc26 to i32*
  %v3_2fc26 = load i32, i32* %v2_2fc26, align 4
  %v1_2fc2d = add i32 %v0_2fc0f, -44
  %v2_2fc2d = inttoptr i32 %v1_2fc2d to i32*
  %v3_2fc2d = load i32, i32* %v2_2fc2d, align 4
  %v2_2fc33 = call i32 @unknown_626af(i32 %v3_2fc2d, i32 %v3_2fc26)
  store i32 %v2_2fc33, i32* @eax, align 4
  %v0_2fc38 = call i32 @function_2fe83()
  ret i32 %v0_2fc38

; uselistorder directives
  uselistorder i32 %v0_2fc0f, { 1, 0 }
}

define i32 @function_2fc3d() local_unnamed_addr {
dec_label_pc_2fc3d:
  %v0_2fc45 = load i32, i32* @ebp, align 4
  %v1_2fc5c = add i32 %v0_2fc45, -52
  %v2_2fc5c = inttoptr i32 %v1_2fc5c to i32*
  %v3_2fc5c = load i32, i32* %v2_2fc5c, align 4
  %v1_2fc63 = add i32 %v0_2fc45, -44
  %v2_2fc63 = inttoptr i32 %v1_2fc63 to i32*
  %v3_2fc63 = load i32, i32* %v2_2fc63, align 4
  %v2_2fc69 = call i32 @unknown_626af(i32 %v3_2fc63, i32 %v3_2fc5c)
  store i32 %v2_2fc69, i32* @eax, align 4
  %v0_2fc6e = call i32 @function_2fe83()
  ret i32 %v0_2fc6e

; uselistorder directives
  uselistorder i32 %v0_2fc45, { 1, 0 }
}

define i32 @function_2fca6(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fca6:
  %eax.global-to-local = alloca i32, align 4
  %v2_2fca6 = load i32, i32* @eax, align 4
  %v4_2fca6 = mul i32 %v2_2fca6, 2
  %v21_2fca6 = inttoptr i32 %v2_2fca6 to i32*
  store i32 %v4_2fca6, i32* %v21_2fca6, align 4
  %v0_2fca8 = load i32, i32* @ebx, align 4
  %v3_2fca8 = load i32, i32* @eax, align 4
  %v5_2fca81 = mul i32 %v3_2fca8, 256
  %v1_2fca82 = add i32 %v5_2fca81, %v0_2fca8
  %v22_2fca8 = and i32 %v1_2fca82, 65280
  %v23_2fca8 = and i32 %v0_2fca8, -65281
  %v24_2fca8 = or i32 %v22_2fca8, %v23_2fca8
  store i32 %v24_2fca8, i32* @ebx, align 4
  %v11_2fcab = and i32 %v3_2fca8, -236
  store i32 %v11_2fcab, i32* %eax.global-to-local, align 4
  %v1_2fcad = inttoptr i32 %v11_2fcab to i32*
  %v2_2fcad = load i32, i32* %v1_2fcad, align 4
  %v4_2fcad = add i32 %v2_2fcad, %v11_2fcab
  store i32 %v4_2fcad, i32* %v1_2fcad, align 4
  %v0_2fcaf = load i32, i32* %eax.global-to-local, align 4
  %v1_2fcaf = inttoptr i32 %v0_2fcaf to i8*
  %v2_2fcaf = load i8, i8* %v1_2fcaf, align 1
  %v4_2fcaf = trunc i32 %v0_2fcaf to i8
  %v5_2fcaf = add i8 %v2_2fcaf, %v4_2fcaf
  store i8 %v5_2fcaf, i8* %v1_2fcaf, align 1
  %v0_2fcb1 = load i32, i32* @ebp, align 4
  %v1_2fcc1 = add i32 %v0_2fcb1, -56
  %v2_2fcc1 = inttoptr i32 %v1_2fcc1 to i32*
  %v3_2fcc1 = load i32, i32* %v2_2fcc1, align 4
  store i32 %v3_2fcc1, i32* %eax.global-to-local, align 4
  %v1_2fcc8 = add i32 %v0_2fcb1, -52
  %v2_2fcc8 = inttoptr i32 %v1_2fcc8 to i32*
  %v3_2fcc8 = load i32, i32* %v2_2fcc8, align 4
  store i32 %v3_2fcc8, i32* %eax.global-to-local, align 4
  %v1_2fccf = add i32 %v0_2fcb1, -44
  %v2_2fccf = inttoptr i32 %v1_2fccf to i32*
  %v3_2fccf = load i32, i32* %v2_2fccf, align 4
  store i32 %v3_2fccf, i32* %eax.global-to-local, align 4
  %v2_2fcd5 = call i32 @unknown_626af(i32 %v3_2fccf, i32 %v3_2fcc8)
  store i32 %v2_2fcd5, i32* @eax, align 4
  %v0_2fcda = call i32 @function_2fe83()
  store i32 %v0_2fcda, i32* %eax.global-to-local, align 4
  ret i32 %v0_2fcda

; uselistorder directives
  uselistorder i32 %v0_2fcb1, { 1, 0, 2 }
  uselistorder i32 %v11_2fcab, { 0, 2, 1 }
  uselistorder i32 %v3_2fca8, { 1, 0 }
  uselistorder i32 %v0_2fca8, { 1, 0 }
  uselistorder i32 %v2_2fca6, { 1, 0 }
}

define i32 @function_2fcdb(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fcdb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fcdf() local_unnamed_addr {
dec_label_pc_2fcdf:
  %v0_2fce7 = load i32, i32* @ebp, align 4
  %v1_2fcfe = add i32 %v0_2fce7, -52
  %v2_2fcfe = inttoptr i32 %v1_2fcfe to i32*
  %v3_2fcfe = load i32, i32* %v2_2fcfe, align 4
  %v1_2fd05 = add i32 %v0_2fce7, -44
  %v2_2fd05 = inttoptr i32 %v1_2fd05 to i32*
  %v3_2fd05 = load i32, i32* %v2_2fd05, align 4
  %v2_2fd0b = call i32 @unknown_626af(i32 %v3_2fd05, i32 %v3_2fcfe)
  store i32 %v2_2fd0b, i32* @eax, align 4
  %v0_2fd10 = call i32 @function_2fe83()
  ret i32 %v0_2fd10

; uselistorder directives
  uselistorder i32 %v0_2fce7, { 1, 0 }
}

define i32 @function_2fd20(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd20:
  store i32 270816392, i32* @ebx, align 4
  %v0_2fd2d = load i32, i32* @ebp, align 4
  %v1_2fd34 = add i32 %v0_2fd2d, -52
  %v2_2fd34 = inttoptr i32 %v1_2fd34 to i32*
  %v3_2fd34 = load i32, i32* %v2_2fd34, align 4
  %v1_2fd3b = add i32 %v0_2fd2d, -44
  %v2_2fd3b = inttoptr i32 %v1_2fd3b to i32*
  %v3_2fd3b = load i32, i32* %v2_2fd3b, align 4
  %v2_2fd41 = call i32 @unknown_626af(i32 %v3_2fd3b, i32 %v3_2fd34)
  store i32 %v2_2fd41, i32* @eax, align 4
  %v0_2fd46 = call i32 @function_2fe83()
  ret i32 %v0_2fd46
}

define i32 @function_2fd5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fd5e:
  %v0_2fd5e = load i32, i32* @eax, align 4
  %v1_2fd5e = trunc i32 %v0_2fd5e to i8
  %v1_2fd60 = inttoptr i32 %v0_2fd5e to i8*
  %v2_2fd60 = load i8, i8* %v1_2fd60, align 1
  %v5_2fd60 = add i8 %v2_2fd60, %v1_2fd5e
  store i8 %v5_2fd60, i8* %v1_2fd60, align 1
  %v0_2fd62 = load i32, i32* @ebx, align 4
  %v1_2fd62 = add i32 %v0_2fd62, 1149880389
  %v2_2fd62 = inttoptr i32 %v1_2fd62 to i8*
  %v3_2fd62 = load i8, i8* %v2_2fd62, align 1
  %v4_2fd62 = load i32, i32* @ecx, align 4
  %v5_2fd62 = trunc i32 %v4_2fd62 to i8
  %v6_2fd62 = add i8 %v5_2fd62, %v3_2fd62
  store i8 %v6_2fd62, i8* %v2_2fd62, align 1
  %v0_2fd6a = load i32, i32* @ebp, align 4
  %v1_2fd6a = add i32 %v0_2fd6a, -52
  %v2_2fd6a = inttoptr i32 %v1_2fd6a to i32*
  %v3_2fd6a = load i32, i32* %v2_2fd6a, align 4
  %v1_2fd71 = add i32 %v0_2fd6a, -44
  %v2_2fd71 = inttoptr i32 %v1_2fd71 to i32*
  %v3_2fd71 = load i32, i32* %v2_2fd71, align 4
  %v2_2fd77 = call i32 @unknown_626af(i32 %v3_2fd71, i32 %v3_2fd6a)
  store i32 %v2_2fd77, i32* @eax, align 4
  %v0_2fd7c = call i32 @function_2fe83()
  ret i32 %v0_2fd7c
}

define i32 @function_2fd8a() local_unnamed_addr {
dec_label_pc_2fd8a:
  %eax.global-to-local = alloca i32, align 4
  %v0_2fd8c = load i32, i32* @eax, align 4
  %v1_2fd8c = add i32 %v0_2fd8c, -955243436
  %v2_2fd8c = inttoptr i32 %v1_2fd8c to i32*
  %v3_2fd8c = load i32, i32* %v2_2fd8c, align 4
  store i32 %v3_2fd8c, i32* @ecx, align 4
  %v1_2fd93 = trunc i32 %v0_2fd8c to i8
  %v2_2fd93 = and i8 %v1_2fd93, 12
  %v8_2fd93 = zext i8 %v2_2fd93 to i32
  %v10_2fd93 = and i32 %v0_2fd8c, -256
  %v11_2fd93 = or i32 %v8_2fd93, %v10_2fd93
  store i32 %v11_2fd93, i32* %eax.global-to-local, align 4
  %v1_2fd95 = inttoptr i32 %v11_2fd93 to i8*
  %v2_2fd95 = load i8, i8* %v1_2fd95, align 4
  %v5_2fd95 = add i8 %v2_2fd95, %v2_2fd93
  store i8 %v5_2fd95, i8* %v1_2fd95, align 4
  %v0_2fd97 = load i32, i32* %eax.global-to-local, align 4
  %v1_2fd97 = inttoptr i32 %v0_2fd97 to i8*
  %v2_2fd97 = load i8, i8* %v1_2fd97, align 1
  %v4_2fd97 = trunc i32 %v0_2fd97 to i8
  %v5_2fd97 = add i8 %v2_2fd97, %v4_2fd97
  store i8 %v5_2fd97, i8* %v1_2fd97, align 1
  %v0_2fd99 = load i32, i32* @ebp, align 4
  %v1_2fd99 = add i32 %v0_2fd99, -56
  %v2_2fd99 = inttoptr i32 %v1_2fd99 to i32*
  %v3_2fd99 = load i32, i32* %v2_2fd99, align 4
  store i32 %v3_2fd99, i32* %eax.global-to-local, align 4
  %v1_2fda0 = add i32 %v0_2fd99, -52
  %v2_2fda0 = inttoptr i32 %v1_2fda0 to i32*
  %v3_2fda0 = load i32, i32* %v2_2fda0, align 4
  store i32 %v3_2fda0, i32* %eax.global-to-local, align 4
  %v1_2fda7 = add i32 %v0_2fd99, -44
  %v2_2fda7 = inttoptr i32 %v1_2fda7 to i32*
  %v3_2fda7 = load i32, i32* %v2_2fda7, align 4
  store i32 %v3_2fda7, i32* %eax.global-to-local, align 4
  %v2_2fdad = call i32 @unknown_626af(i32 %v3_2fda7, i32 %v3_2fda0)
  store i32 %v2_2fdad, i32* @eax, align 4
  %v0_2fdb2 = call i32 @function_2fe83()
  store i32 %v0_2fdb2, i32* %eax.global-to-local, align 4
  ret i32 %v0_2fdb2
}

define i32 @function_2fdc0(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fdc0:
  %v0_2fdcd = load i32, i32* @ebp, align 4
  %v1_2fdd4 = add i32 %v0_2fdcd, -52
  %v2_2fdd4 = inttoptr i32 %v1_2fdd4 to i32*
  %v3_2fdd4 = load i32, i32* %v2_2fdd4, align 4
  %v1_2fddb = add i32 %v0_2fdcd, -44
  %v2_2fddb = inttoptr i32 %v1_2fddb to i32*
  %v3_2fddb = load i32, i32* %v2_2fddb, align 4
  %v2_2fde1 = call i32 @unknown_626af(i32 %v3_2fddb, i32 %v3_2fdd4)
  store i32 %v2_2fde1, i32* @eax, align 4
  %v0_2fde6 = call i32 @function_2fe83()
  ret i32 %v0_2fde6
}

define i32 @function_2fde3(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fde3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fdeb() local_unnamed_addr {
dec_label_pc_2fdeb:
  %v0_2fe01 = load i32, i32* @ebp, align 4
  %v1_2fe08 = add i32 %v0_2fe01, -52
  %v2_2fe08 = inttoptr i32 %v1_2fe08 to i32*
  %v3_2fe08 = load i32, i32* %v2_2fe08, align 4
  %v1_2fe0f = add i32 %v0_2fe01, -44
  %v2_2fe0f = inttoptr i32 %v1_2fe0f to i32*
  %v3_2fe0f = load i32, i32* %v2_2fe0f, align 4
  %v2_2fe15 = call i32 @unknown_626af(i32 %v3_2fe0f, i32 %v3_2fe08)
  store i32 %v2_2fe15, i32* @eax, align 4
  %v0_2fe1a = call i32 @function_2fe83()
  ret i32 %v0_2fe1a
}

define i32 @function_2fe24(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fe24:
  %v0_2fe30 = load i32, i32* @ebp, align 4
  %v1_2fe37 = add i32 %v0_2fe30, -52
  %v2_2fe37 = inttoptr i32 %v1_2fe37 to i32*
  %v3_2fe37 = load i32, i32* %v2_2fe37, align 4
  %v1_2fe3e = add i32 %v0_2fe30, -44
  %v2_2fe3e = inttoptr i32 %v1_2fe3e to i32*
  %v3_2fe3e = load i32, i32* %v2_2fe3e, align 4
  %v2_2fe44 = call i32 @unknown_626af(i32 %v3_2fe3e, i32 %v3_2fe37)
  store i32 %v2_2fe44, i32* @eax, align 4
  %v0_2fe49 = call i32 @function_2fe83()
  ret i32 %v0_2fe49

; uselistorder directives
  uselistorder i32 ()* @function_2fe83, { 8, 18, 5, 4, 7, 1, 17, 0, 16, 15, 14, 13, 12, 3, 2, 11, 10, 6, 9 }
  uselistorder i32 (i32, i32)* @unknown_626af, { 7, 15, 5, 4, 6, 1, 14, 0, 13, 12, 11, 10, 9, 3, 2, 8 }
}

define i32 @function_2fe4b() local_unnamed_addr {
dec_label_pc_2fe4b:
  %v0_2fe5b = load i32, i32* @ecx, align 4
  %v0_2fe5f = load i32, i32* @edx, align 4
  %v0_2fe63 = load i32, i32* @ebp, align 4
  %v1_2fe63 = add i32 %v0_2fe63, -56
  %v2_2fe63 = inttoptr i32 %v1_2fe63 to i32*
  %v3_2fe63 = load i32, i32* %v2_2fe63, align 4
  %v1_2fe6a = add i32 %v0_2fe63, -52
  %v2_2fe6a = inttoptr i32 %v1_2fe6a to i32*
  %v3_2fe6a = load i32, i32* %v2_2fe6a, align 4
  %v1_2fe71 = add i32 %v0_2fe63, -48
  %v2_2fe71 = inttoptr i32 %v1_2fe71 to i32*
  %v3_2fe71 = load i32, i32* %v2_2fe71, align 4
  %v1_2fe78 = add i32 %v0_2fe63, -44
  %v2_2fe78 = inttoptr i32 %v1_2fe78 to i32*
  %v3_2fe78 = load i32, i32* %v2_2fe78, align 4
  %sext = mul i32 %v0_2fe5f, 16777216
  %v8_2fe7e = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_2fe5b, 16777216
  %v9_2fe7e = sdiv i32 %sext1, 16777216
  %v10_2fe7e = call i32 @unknown_62709(i32 %v3_2fe78, i32 %v3_2fe71, i32 %v3_2fe6a, i32 %v3_2fe63, i32 %v8_2fe7e, i32 %v9_2fe7e, i32 0, i32 0)
  ret i32 %v10_2fe7e

; uselistorder directives
  uselistorder i32 %v0_2fe63, { 1, 0, 2, 3 }
}

define i32 @function_2fe83() local_unnamed_addr {
dec_label_pc_2fe83:
  %v0_2fe83 = load i32, i32* @ebp, align 4
  %v1_2fe83 = add i32 %v0_2fe83, -28
  %v2_2fe83 = inttoptr i32 %v1_2fe83 to i32*
  %v3_2fe83 = load i32, i32* %v2_2fe83, align 4
  %v1_2fe86 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_2fe86 = icmp eq i32 %v1_2fe86, %v3_2fe83
  br i1 %v3_2fe86, label %bb, label %dec_label_pc_2fe83.dec_label_pc_2fe8f_crit_edge

dec_label_pc_2fe83.dec_label_pc_2fe8f_crit_edge:  ; preds = %dec_label_pc_2fe83
  %v2_2fe8d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2fe8f

bb:                                               ; preds = %dec_label_pc_2fe83
  %v1_2fe8d = call i32 @function_2fe94()
  br label %dec_label_pc_2fe8f

dec_label_pc_2fe8f:                               ; preds = %dec_label_pc_2fe83.dec_label_pc_2fe8f_crit_edge, %bb
  %v2_2fe8d = phi i32 [ %v2_2fe8d.pre, %dec_label_pc_2fe83.dec_label_pc_2fe8f_crit_edge ], [ %v1_2fe8d, %bb ]
  ret i32 %v2_2fe8d

; uselistorder directives
  uselistorder label %dec_label_pc_2fe8f, { 1, 0 }
}

define i32 @function_2fe94() local_unnamed_addr {
dec_label_pc_2fe94:
  %v0_2fe94 = load i32, i32* @esp, align 4
  %v5_2fe94 = icmp ugt i32 %v0_2fe94, -109
  store i1 %v5_2fe94, i1* @cf, align 1
  %v0_2fe9b = load i32, i32* @eax, align 4
  ret i32 %v0_2fe9b
}

define i32 @function_2fe9c(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fe9c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_2fed0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2fed0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt6vectorIhSaIhEEEC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2feec:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ff15

bb:                                               ; preds = %dec_label_pc_2feec
  %v3_2ff13 = call i32 @function_2ff1a(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ff15

dec_label_pc_2ff15:                               ; preds = %bb, %dec_label_pc_2feec
  %v4_2ff13 = phi i32 [ %v3_2ff13, %bb ], [ 0, %dec_label_pc_2feec ]
  ret i32 %v4_2ff13
}

define i32 @function_2ff1a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff1a:
  %v0_2ff1b = load i32, i32* @eax, align 4
  ret i32 %v0_2ff1b
}

define i32 @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSA_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff1c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ff48

bb:                                               ; preds = %dec_label_pc_2ff1c
  %v3_2ff46 = call i32 @function_2ff4d(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_2ff48

dec_label_pc_2ff48:                               ; preds = %bb, %dec_label_pc_2ff1c
  %v4_2ff46 = phi i32 [ %v3_2ff46, %bb ], [ %arg1, %dec_label_pc_2ff1c ]
  ret i32 %v4_2ff46
}

define i32 @function_2ff4d(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_2ff4d:
  %v0_2ff4e = load i32, i32* @eax, align 4
  ret i32 %v0_2ff4e
}

define i32 @_ZSt10__distanceIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEEENSt15iterator_traitsIT_E15difference_typeESA_SA_St26random_access_iterator_tag(i32 %arg1, i32 %arg2, i8 %arg3) local_unnamed_addr {
dec_label_pc_2ff51:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v4_2ff78 = ptrtoint i32* %stack_var_-32 to i32
  %v2_2ff7c = ptrtoint i32* %stack_var_-36 to i32
  %v2_2ff82 = call i32 @unknown_4e05a(i32 %v2_2ff7c, i32 %v4_2ff78)
  store i32 %v2_2ff82, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_2ff93

bb:                                               ; preds = %dec_label_pc_2ff51
  %v1_2ff91 = call i32 @function_2ff98()
  br label %dec_label_pc_2ff93

dec_label_pc_2ff93:                               ; preds = %bb, %dec_label_pc_2ff51
  %v2_2ff91 = phi i32 [ %v1_2ff91, %bb ], [ %v2_2ff82, %dec_label_pc_2ff51 ]
  ret i32 %v2_2ff91
}

define i32 @function_2ff98() local_unnamed_addr {
dec_label_pc_2ff98:
  %v0_2ff99 = load i32, i32* @eax, align 4
  ret i32 %v0_2ff99
}

define i32 @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES2_IS4_SaIS4_EEEES5_ET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2ff9a:
  ret i32 %arg3
}

define i32 @function_2ffe6() local_unnamed_addr {
dec_label_pc_2ffe6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_2ffe6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_2ffe6 = add i32 %v0_2ffe6, -1
  store i32 %v1_2ffe6, i32* %ecx.global-to-local, align 4
  %v0_2ffe8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2ffe8
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14invoke_visitorINS5_15direct_assignerIS2_EEEEPvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_2ffe9:
  ret i32 0
}

define i32 @function_3002c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3002c:
  %v1_3002c = load i32, i32* @ecx, align 4
  %v2_3002c = add i32 %v1_3002c, -1962138556
  %v3_3002c = inttoptr i32 %v2_3002c to float*
  %v4_3002c = load float, float* %v3_3002c, align 4
  %v5_3002c = fpext float %v4_3002c to x86_fp80
  %v6_3002c = load x86_fp80, x86_fp80* @st0, align 4
  %v7_3002c = fmul x86_fp80 %v5_3002c, %v6_3002c
  %v0_30032 = load i32, i32* @ebp, align 4
  %v2_30033 = add i32 %v1_3002c, -1962400700
  %v3_30033 = inttoptr i32 %v2_30033 to double*
  %v4_30033 = load double, double* %v3_30033, align 4
  %v5_30033 = fpext double %v4_30033 to x86_fp80
  %v7_30033 = fmul x86_fp80 %v7_3002c, %v5_30033
  store x86_fp80 %v7_30033, x86_fp80* @st0, align 4
  %v1_30039 = add i32 %v0_30032, 2
  store i32 %v1_30039, i32* @ebp, align 4
  %v1_3003a = add i32 %v1_3002c, -1
  store i32 %v1_3003a, i32* @ecx, align 4
  %v1_3003f = add i32 %v0_30032, -26
  %v2_3003f = inttoptr i32 %v1_3003f to i32*
  %v3_3003f = load i32, i32* %v2_3003f, align 4
  %v1_30045 = call i32 @unknown_62e58(i32 %v3_3003f)
  store i32 %v1_30045, i32* @eax, align 4
  %v0_3004a = load i32, i32* @ebp, align 4
  %v1_3004a = add i32 %v0_3004a, -12
  %v2_3004a = inttoptr i32 %v1_3004a to i32*
  %v3_3004a = load i32, i32* %v2_3004a, align 4
  %v1_3004d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3004d = icmp eq i32 %v1_3004d, %v3_3004a
  br i1 %v3_3004d, label %bb, label %dec_label_pc_30056

bb:                                               ; preds = %dec_label_pc_3002c
  %v1_30054 = call i32 @function_3005b()
  br label %dec_label_pc_30056

dec_label_pc_30056:                               ; preds = %bb, %dec_label_pc_3002c
  %v3_30054 = phi i32 [ %v1_30054, %bb ], [ %v1_30045, %dec_label_pc_3002c ]
  ret i32 %v3_30054
}

define i32 @function_3005b() local_unnamed_addr {
dec_label_pc_3005b:
  %v0_3005c = load i32, i32* @eax, align 4
  ret i32 %v0_3005c
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14assign_storageEPvEENT_11result_typeEiiRSB_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3005d:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_30096 = load i32, i32* %ecx.global-to-local, align 4
  %v0_3009a = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3009a, 16777216
  %v12_300b9 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_30096, 16777216
  %v13_300b9 = sdiv i32 %sext1, 16777216
  %v14_300b9 = call i32 @unknown_633f9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_300b9, i32 %v13_300b9, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_300ca

bb:                                               ; preds = %dec_label_pc_3005d
  %v1_300c8 = call i32 @function_300cf()
  br label %dec_label_pc_300ca

dec_label_pc_300ca:                               ; preds = %bb, %dec_label_pc_3005d
  %v2_300c8 = phi i32 [ %v1_300c8, %bb ], [ 0, %dec_label_pc_3005d ]
  ret i32 %v2_300c8

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_300cf() local_unnamed_addr {
dec_label_pc_300cf:
  %v0_300d0 = load i32, i32* @eax, align 4
  ret i32 %v0_300d0
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS7_8assignerEPKvEENT_11result_typeEiiRSC_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_300d1:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3010a = load i32, i32* %ecx.global-to-local, align 4
  %v0_3010e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_3010e, 16777216
  %v12_3012d = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_3010a, 16777216
  %v13_3012d = sdiv i32 %sext1, 16777216
  %v14_3012d = call i32 @unknown_63999(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_3012d, i32 %v13_3012d, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3013c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3013c:
  %v0_3013c = load i1, i1* @zf, align 1
  br i1 %v0_3013c, label %bb, label %dec_label_pc_3013c.dec_label_pc_3013e_crit_edge

dec_label_pc_3013c.dec_label_pc_3013e_crit_edge:  ; preds = %dec_label_pc_3013c
  %v2_3013c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_3013e

bb:                                               ; preds = %dec_label_pc_3013c
  %v1_3013c = call i32 @function_30143()
  br label %dec_label_pc_3013e

dec_label_pc_3013e:                               ; preds = %dec_label_pc_3013c.dec_label_pc_3013e_crit_edge, %bb
  %v2_3013c = phi i32 [ %v2_3013c.pre, %dec_label_pc_3013c.dec_label_pc_3013e_crit_edge ], [ %v1_3013c, %bb ]
  ret i32 %v2_3013c

; uselistorder directives
  uselistorder label %dec_label_pc_3013e, { 1, 0 }
}

define i32 @function_30143() local_unnamed_addr {
dec_label_pc_30143:
  %v0_30144 = load i32, i32* @eax, align 4
  ret i32 %v0_30144
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E27internal_apply_visitor_implINS5_14invoke_visitorINS5_15direct_assignerIS3_EEEEPvEENT_11result_typeEiiRSE_T0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30145:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3017e = load i32, i32* %ecx.global-to-local, align 4
  %v0_30182 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_30182, 16777216
  %v12_301a1 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_3017e, 16777216
  %v13_301a1 = sdiv i32 %sext1, 16777216
  %v14_301a1 = call i32 @unknown_63f39(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v12_301a1, i32 %v13_301a1, i32 0, i32 0, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 %v14_301a1, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_301b2

bb:                                               ; preds = %dec_label_pc_30145
  %v1_301b0 = call i32 @function_301b7()
  br label %dec_label_pc_301b2

dec_label_pc_301b2:                               ; preds = %bb, %dec_label_pc_30145
  %v3_301b0 = phi i32 [ %v1_301b0, %bb ], [ %v14_301a1, %dec_label_pc_30145 ]
  ret i32 %v3_301b0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_301b7() local_unnamed_addr {
dec_label_pc_301b7:
  %v0_301b8 = load i32, i32* @eax, align 4
  ret i32 %v0_301b8
}

define i32 @_ZN5boost6detail7variant21make_initializer_node5applyINS_3mpl4pairINS3_INS5_INS3_INS5_INS1_16initializer_rootEN4mpl_4int_ILi0EEEEENS4_6l_iterINS4_5list3I14CNoDestination6CKeyID9CScriptIDEEEEE16initializer_nodeENS8_ILi1EEEEENSB_INS4_5list2ISE_SF_EEEEE16initializer_nodeENS8_ILi2EEEEENSB_INS4_5list1ISF_EEEEE16initializer_node10initializeEPvRKSF_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_301b9:
  %edx.global-to-local = alloca i32, align 4
  %v2_301e4 = call i32 @unknown_390a5(i32 20, i32 %arg1)
  %v1_301e9 = icmp eq i32 %v2_301e4, 0
  br i1 %v1_301e9, label %dec_label_pc_3020c, label %dec_label_pc_301ed

dec_label_pc_301ed:                               ; preds = %dec_label_pc_301b9
  %tmp102 = ptrtoint i32* %arg2 to i32
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_301f0 = load i32, i32* %arg2, align 4
  %v2_301f2 = inttoptr i32 %v2_301e4 to i32*
  store i32 %v2_301f0, i32* %v2_301f2, align 4
  %v0_301f4 = load i32, i32* %edx.global-to-local, align 4
  %v1_301f4 = add i32 %v0_301f4, 4
  %v2_301f4 = inttoptr i32 %v1_301f4 to i32*
  %v3_301f4 = load i32, i32* %v2_301f4, align 4
  %v2_301f7 = add i32 %v2_301e4, 4
  %v3_301f7 = inttoptr i32 %v2_301f7 to i32*
  store i32 %v3_301f4, i32* %v3_301f7, align 4
  %v0_301fa = load i32, i32* %edx.global-to-local, align 4
  %v1_301fa = add i32 %v0_301fa, 8
  %v2_301fa = inttoptr i32 %v1_301fa to i32*
  %v3_301fa = load i32, i32* %v2_301fa, align 4
  %v2_301fd = add i32 %v2_301e4, 8
  %v3_301fd = inttoptr i32 %v2_301fd to i32*
  store i32 %v3_301fa, i32* %v3_301fd, align 4
  %v0_30200 = load i32, i32* %edx.global-to-local, align 4
  %v1_30200 = add i32 %v0_30200, 12
  %v2_30200 = inttoptr i32 %v1_30200 to i32*
  %v3_30200 = load i32, i32* %v2_30200, align 4
  %v2_30203 = add i32 %v2_301e4, 12
  %v3_30203 = inttoptr i32 %v2_30203 to i32*
  store i32 %v3_30200, i32* %v3_30203, align 4
  %v0_30206 = load i32, i32* %edx.global-to-local, align 4
  %v1_30206 = add i32 %v0_30206, 16
  %v2_30206 = inttoptr i32 %v1_30206 to i32*
  %v3_30206 = load i32, i32* %v2_30206, align 4
  store i32 %v3_30206, i32* %edx.global-to-local, align 4
  %v2_30209 = add i32 %v2_301e4, 16
  %v3_30209 = inttoptr i32 %v2_30209 to i32*
  store i32 %v3_30206, i32* %v3_30209, align 4
  br label %dec_label_pc_3020c

dec_label_pc_3020c:                               ; preds = %dec_label_pc_301ed, %dec_label_pc_301b9
  store i32 2, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_3021d

bb:                                               ; preds = %dec_label_pc_3020c
  %v1_3021b = call i32 @function_30222()
  br label %dec_label_pc_3021d

dec_label_pc_3021d:                               ; preds = %bb, %dec_label_pc_3020c
  %v2_3021b = phi i32 [ %v1_3021b, %bb ], [ 2, %dec_label_pc_3020c ]
  ret i32 %v2_3021b
}

define i32 @function_30222() local_unnamed_addr {
dec_label_pc_30222:
  %v0_30223 = load i32, i32* @eax, align 4
  ret i32 %v0_30223
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_9destroyerEPvNS_7variantISC_SE_SG_NS1_5void_ESR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_E18has_fallback_type_EEENT1_11result_typeEiiRSU_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_30224:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_30274, label %bb

bb:                                               ; preds = %dec_label_pc_30224
  %sext = mul i32 %arg6, 16777216
  %v12_3026e = sdiv i32 %sext, 16777216
  %v13_3026e = sext i8 %arg5 to i32
  %v14_3026e = call i32 @function_306ad(i32 %arg8, i32 %arg7, i32 %v12_3026e, i32 %v13_3026e, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_30274

dec_label_pc_30274:                               ; preds = %dec_label_pc_30224, %bb
  %v2_30277 = mul i32 %arg2, 4
  %v1_3027a = add i32 %v2_30277, ptrtoint (i32* @global_var_30700.2290 to i32)
  %v1_3027f = inttoptr i32 %v1_3027a to i32*
  %v2_3027f = load i32, i32* %v1_3027f, align 4
  ret i32 %v2_3027f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_30274, { 1, 0 }
}

define i32 @function_30283() local_unnamed_addr {
dec_label_pc_30283:
  %v0_3028b = load i32, i32* @ebp, align 4
  %v1_3028b = add i32 %v0_3028b, -83
  %v2_3028b = inttoptr i32 %v1_3028b to i8*
  %v3_3028b = load i8, i8* %v2_3028b, align 1
  %v1_3029b = add i32 %v0_3028b, -56
  %v2_3029b = inttoptr i32 %v1_3029b to i32*
  %v3_3029b = load i32, i32* %v2_3029b, align 4
  %v1_302a2 = add i32 %v0_3028b, -52
  %v2_302a2 = inttoptr i32 %v1_302a2 to i32*
  %v3_302a2 = load i32, i32* %v2_302a2, align 4
  %v1_302a9 = add i32 %v0_3028b, -44
  %v2_302a9 = inttoptr i32 %v1_302a9 to i32*
  %v3_302a9 = load i32, i32* %v2_302a9, align 4
  %v6_302af = sext i8 %v3_3028b to i32
  %v7_302af = call i32 @unknown_64544(i32 %v3_302a9, i32 %v3_302a2, i32 %v3_3029b, i32 0, i32 %v6_302af, i32 1)
  %v0_302b4 = call i32 @function_306e5()
  ret i32 %v0_302b4

; uselistorder directives
  uselistorder i32 %v0_3028b, { 0, 2, 1, 3 }
}

define i32 @function_302b9() local_unnamed_addr {
dec_label_pc_302b9:
  %v0_302c1 = load i32, i32* @ebp, align 4
  %v1_302c1 = add i32 %v0_302c1, -82
  %v2_302c1 = inttoptr i32 %v1_302c1 to i8*
  %v3_302c1 = load i8, i8* %v2_302c1, align 1
  %v1_302d1 = add i32 %v0_302c1, -56
  %v2_302d1 = inttoptr i32 %v1_302d1 to i32*
  %v3_302d1 = load i32, i32* %v2_302d1, align 4
  %v1_302d8 = add i32 %v0_302c1, -52
  %v2_302d8 = inttoptr i32 %v1_302d8 to i32*
  %v3_302d8 = load i32, i32* %v2_302d8, align 4
  %v1_302df = add i32 %v0_302c1, -44
  %v2_302df = inttoptr i32 %v1_302df to i32*
  %v3_302df = load i32, i32* %v2_302df, align 4
  %v6_302e5 = sext i8 %v3_302c1 to i32
  %v7_302e5 = call i32 @unknown_645b1(i32 %v3_302df, i32 %v3_302d8, i32 %v3_302d1, i32 0, i32 %v6_302e5, i32 1)
  %v0_302ea = call i32 @function_306e5()
  ret i32 %v0_302ea

; uselistorder directives
  uselistorder i32 %v0_302c1, { 0, 2, 1, 3 }
}

define i32 @function_302ef() local_unnamed_addr {
dec_label_pc_302ef:
  %v0_302f7 = load i32, i32* @ebp, align 4
  %v1_302f7 = add i32 %v0_302f7, -81
  %v2_302f7 = inttoptr i32 %v1_302f7 to i8*
  %v3_302f7 = load i8, i8* %v2_302f7, align 1
  %v1_30307 = add i32 %v0_302f7, -56
  %v2_30307 = inttoptr i32 %v1_30307 to i32*
  %v3_30307 = load i32, i32* %v2_30307, align 4
  %v1_3030e = add i32 %v0_302f7, -52
  %v2_3030e = inttoptr i32 %v1_3030e to i32*
  %v3_3030e = load i32, i32* %v2_3030e, align 4
  %v1_30315 = add i32 %v0_302f7, -44
  %v2_30315 = inttoptr i32 %v1_30315 to i32*
  %v3_30315 = load i32, i32* %v2_30315, align 4
  %v6_3031b = sext i8 %v3_302f7 to i32
  %v7_3031b = call i32 @unknown_6461e(i32 %v3_30315, i32 %v3_3030e, i32 %v3_30307, i32 0, i32 %v6_3031b, i32 1)
  %v0_30320 = call i32 @function_306e5()
  ret i32 %v0_30320

; uselistorder directives
  uselistorder i32 %v0_302f7, { 0, 2, 1, 3 }
}

define i32 @function_30325() local_unnamed_addr {
dec_label_pc_30325:
  %v0_3032d = load i32, i32* @ebp, align 4
  %v1_3034b = add i32 %v0_3032d, -44
  %v2_3034b = inttoptr i32 %v1_3034b to i32*
  %v3_3034b = load i32, i32* %v2_3034b, align 4
  %v1_30351 = call i32 @unknown_6468b(i32 %v3_3034b)
  %v0_30356 = call i32 @function_306e5()
  ret i32 %v0_30356
}

define i32 @function_3035b() local_unnamed_addr {
dec_label_pc_3035b:
  %v0_30363 = load i32, i32* @ebp, align 4
  %v1_30381 = add i32 %v0_30363, -44
  %v2_30381 = inttoptr i32 %v1_30381 to i32*
  %v3_30381 = load i32, i32* %v2_30381, align 4
  %v1_30387 = call i32 @unknown_6468b(i32 %v3_30381)
  %v0_3038c = call i32 @function_306e5()
  ret i32 %v0_3038c
}

define i32 @function_30391() local_unnamed_addr {
dec_label_pc_30391:
  %v0_30399 = load i32, i32* @ebp, align 4
  %v1_303b7 = add i32 %v0_30399, -44
  %v2_303b7 = inttoptr i32 %v1_303b7 to i32*
  %v3_303b7 = load i32, i32* %v2_303b7, align 4
  %v1_303bd = call i32 @unknown_6468b(i32 %v3_303b7)
  %v0_303c2 = call i32 @function_306e5()
  ret i32 %v0_303c2
}

define i32 @function_303f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_303f0:
  %v0_303f0 = load i32, i32* @eax, align 4
  %v1_303f3 = call i32 @unknown_6468b(i32 %v0_303f0)
  %v0_303f8 = call i32 @function_306e5()
  ret i32 %v0_303f8
}

define i32 @function_303fd() local_unnamed_addr {
dec_label_pc_303fd:
  %v0_30405 = load i32, i32* @ebp, align 4
  %v1_30423 = add i32 %v0_30405, -44
  %v2_30423 = inttoptr i32 %v1_30423 to i32*
  %v3_30423 = load i32, i32* %v2_30423, align 4
  %v1_30429 = call i32 @unknown_6468b(i32 %v3_30423)
  %v0_3042e = call i32 @function_306e5()
  ret i32 %v0_3042e
}

define i32 @function_30433() local_unnamed_addr {
dec_label_pc_30433:
  %v0_3043b = load i32, i32* @ebp, align 4
  %v1_30459 = add i32 %v0_3043b, -44
  %v2_30459 = inttoptr i32 %v1_30459 to i32*
  %v3_30459 = load i32, i32* %v2_30459, align 4
  %v1_3045f = call i32 @unknown_6468b(i32 %v3_30459)
  %v0_30464 = call i32 @function_306e5()
  ret i32 %v0_30464
}

define i32 @function_3047c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3047c:
  %v0_3047c = load i32, i32* @eax, align 4
  %v1_3047c = trunc i32 %v0_3047c to i8
  %v1_3047e = inttoptr i32 %v0_3047c to i8*
  %v2_3047e = load i8, i8* %v1_3047e, align 1
  %v5_3047e = add i8 %v2_3047e, %v1_3047c
  store i8 %v5_3047e, i8* %v1_3047e, align 1
  %v0_30480 = load i32, i32* @ebx, align 4
  %v1_30480 = add i32 %v0_30480, 1149880389
  %v2_30480 = inttoptr i32 %v1_30480 to i8*
  %v3_30480 = load i8, i8* %v2_30480, align 1
  %v4_30480 = load i32, i32* @ecx, align 4
  %v5_30480 = trunc i32 %v4_30480 to i8
  %v6_30480 = add i8 %v5_30480, %v3_30480
  store i8 %v6_30480, i8* %v2_30480, align 1
  %v0_30488 = load i32, i32* @ebp, align 4
  %v1_3048f = add i32 %v0_30488, -44
  %v2_3048f = inttoptr i32 %v1_3048f to i32*
  %v3_3048f = load i32, i32* %v2_3048f, align 4
  %v1_30495 = call i32 @unknown_6468b(i32 %v3_3048f)
  %v0_3049a = call i32 @function_306e5()
  ret i32 %v0_3049a
}

define i32 @function_3049f() local_unnamed_addr {
dec_label_pc_3049f:
  %v0_304a7 = load i32, i32* @ebp, align 4
  %v1_304c5 = add i32 %v0_304a7, -44
  %v2_304c5 = inttoptr i32 %v1_304c5 to i32*
  %v3_304c5 = load i32, i32* %v2_304c5, align 4
  %v1_304cb = call i32 @unknown_6468b(i32 %v3_304c5)
  %v0_304d0 = call i32 @function_306e5()
  ret i32 %v0_304d0
}

define i32 @function_304ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_304ec:
  %v0_304ec = load i32, i32* @ebx, align 4
  %v1_304ec = add i32 %v0_304ec, 1149880389
  %v2_304ec = inttoptr i32 %v1_304ec to i8*
  %v3_304ec = load i8, i8* %v2_304ec, align 1
  %v4_304ec = load i32, i32* @ecx, align 4
  %v5_304ec = trunc i32 %v4_304ec to i8
  %v6_304ec = add i8 %v5_304ec, %v3_304ec
  store i8 %v6_304ec, i8* %v2_304ec, align 1
  %v0_304f4 = load i32, i32* @ebp, align 4
  %v1_304fb = add i32 %v0_304f4, -44
  %v2_304fb = inttoptr i32 %v1_304fb to i32*
  %v3_304fb = load i32, i32* %v2_304fb, align 4
  %v1_30501 = call i32 @unknown_6468b(i32 %v3_304fb)
  %v0_30506 = call i32 @function_306e5()
  ret i32 %v0_30506
}

define i32 @function_3050b() local_unnamed_addr {
dec_label_pc_3050b:
  %v0_30513 = load i32, i32* @ebp, align 4
  %v1_30531 = add i32 %v0_30513, -44
  %v2_30531 = inttoptr i32 %v1_30531 to i32*
  %v3_30531 = load i32, i32* %v2_30531, align 4
  %v1_30537 = call i32 @unknown_6468b(i32 %v3_30531)
  %v0_3053c = call i32 @function_306e5()
  ret i32 %v0_3053c
}

define i32 @function_30541() local_unnamed_addr {
dec_label_pc_30541:
  %v0_30549 = load i32, i32* @ebp, align 4
  %v1_30567 = add i32 %v0_30549, -44
  %v2_30567 = inttoptr i32 %v1_30567 to i32*
  %v3_30567 = load i32, i32* %v2_30567, align 4
  %v1_3056d = call i32 @unknown_6468b(i32 %v3_30567)
  %v0_30572 = call i32 @function_306e5()
  ret i32 %v0_30572
}

define i32 @function_30577() local_unnamed_addr {
dec_label_pc_30577:
  %v0_3057f = load i32, i32* @ebp, align 4
  %v1_3059d = add i32 %v0_3057f, -44
  %v2_3059d = inttoptr i32 %v1_3059d to i32*
  %v3_3059d = load i32, i32* %v2_3059d, align 4
  %v1_305a3 = call i32 @unknown_6468b(i32 %v3_3059d)
  %v0_305a8 = call i32 @function_306e5()
  ret i32 %v0_305a8
}

define i32 @function_305ad() local_unnamed_addr {
dec_label_pc_305ad:
  %v0_305b5 = load i32, i32* @ebp, align 4
  %v1_305d3 = add i32 %v0_305b5, -44
  %v2_305d3 = inttoptr i32 %v1_305d3 to i32*
  %v3_305d3 = load i32, i32* %v2_305d3, align 4
  %v1_305d9 = call i32 @unknown_6468b(i32 %v3_305d3)
  %v0_305de = call i32 @function_306e5()
  ret i32 %v0_305de
}

define i32 @function_305e3() local_unnamed_addr {
dec_label_pc_305e3:
  %v0_305eb = load i32, i32* @ebp, align 4
  %v1_30609 = add i32 %v0_305eb, -44
  %v2_30609 = inttoptr i32 %v1_30609 to i32*
  %v3_30609 = load i32, i32* %v2_30609, align 4
  %v1_3060f = call i32 @unknown_6468b(i32 %v3_30609)
  %v0_30614 = call i32 @function_306e5()
  ret i32 %v0_30614
}

define i32 @function_30619() local_unnamed_addr {
dec_label_pc_30619:
  %v0_3062f = load i32, i32* @ebp, align 4
  %v1_3063d = add i32 %v0_3062f, -44
  %v2_3063d = inttoptr i32 %v1_3063d to i32*
  %v3_3063d = load i32, i32* %v2_3063d, align 4
  %v1_30643 = call i32 @unknown_6468b(i32 %v3_3063d)
  %v0_30648 = call i32 @function_306e5()
  ret i32 %v0_30648
}

define i32 @function_3064d() local_unnamed_addr {
dec_label_pc_3064d:
  %v0_30663 = load i32, i32* @ebp, align 4
  %v1_30671 = add i32 %v0_30663, -44
  %v2_30671 = inttoptr i32 %v1_30671 to i32*
  %v3_30671 = load i32, i32* %v2_30671, align 4
  %v1_30677 = call i32 @unknown_6468b(i32 %v3_30671)
  %v0_3067c = call i32 @function_306e5()
  ret i32 %v0_3067c
}

define i32 @function_3067e() local_unnamed_addr {
dec_label_pc_3067e:
  %v0_30692 = load i32, i32* @ebp, align 4
  %v1_306a0 = add i32 %v0_30692, -44
  %v2_306a0 = inttoptr i32 %v1_306a0 to i32*
  %v3_306a0 = load i32, i32* %v2_306a0, align 4
  %v1_306a6 = call i32 @unknown_6468b(i32 %v3_306a0)
  %v0_306ab = call i32 @function_306e5()
  ret i32 %v0_306ab

; uselistorder directives
  uselistorder i32 ()* @function_306e5, { 19, 18, 17, 16, 15, 14, 13, 12, 2, 11, 1, 10, 9, 0, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32)* @unknown_6468b, { 16, 15, 14, 13, 12, 11, 10, 9, 2, 8, 1, 7, 6, 0, 5, 4, 3 }
}

define i32 @function_306ad(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_306ad:
  %v0_306c5 = load i32, i32* @ebp, align 4
  %v1_306cc = add i32 %v0_306c5, -52
  %v2_306cc = inttoptr i32 %v1_306cc to i32*
  %v3_306cc = load i32, i32* %v2_306cc, align 4
  ret i32 %v3_306cc
}

define i32 @function_306d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_306d2:
  %v0_306d2 = load i32, i32* @ebx, align 4
  %v1_306d2 = add i32 %v0_306d2, 1149882437
  %v2_306d2 = inttoptr i32 %v1_306d2 to i8*
  %v3_306d2 = load i8, i8* %v2_306d2, align 1
  %v4_306d2 = load i32, i32* @ecx, align 4
  %v5_306d2 = trunc i32 %v4_306d2 to i8
  %v6_306d2 = or i8 %v5_306d2, %v3_306d2
  store i8 %v6_306d2, i8* %v2_306d2, align 1
  %v0_306da = load i32, i32* @ebp, align 4
  %v1_306da = add i32 %v0_306da, -44
  %v2_306da = inttoptr i32 %v1_306da to i32*
  %v3_306da = load i32, i32* %v2_306da, align 4
  %v1_306e0 = call i32 @unknown_646e5(i32 %v3_306da)
  ret i32 %v1_306e0
}

define i32 @function_306e5() local_unnamed_addr {
dec_label_pc_306e5:
  %v0_306e5 = load i32, i32* @ebp, align 4
  %v1_306e5 = add i32 %v0_306e5, -28
  %v2_306e5 = inttoptr i32 %v1_306e5 to i32*
  %v3_306e5 = load i32, i32* %v2_306e5, align 4
  %v1_306e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_306e8 = xor i32 %v1_306e8, %v3_306e5
  %v3_306e8 = icmp eq i32 %v2_306e8, 0
  store i32 %v2_306e8, i32* @eax, align 4
  br i1 %v3_306e8, label %bb, label %dec_label_pc_306f1

bb:                                               ; preds = %dec_label_pc_306e5
  %v1_306ef = call i32 @function_306f6()
  br label %dec_label_pc_306f1

dec_label_pc_306f1:                               ; preds = %bb, %dec_label_pc_306e5
  %v2_306ef = phi i32 [ %v1_306ef, %bb ], [ %v2_306e8, %dec_label_pc_306e5 ]
  ret i32 %v2_306ef
}

define i32 @function_306f6() local_unnamed_addr {
dec_label_pc_306f6:
  %v0_306fd = load i32, i32* @eax, align 4
  ret i32 %v0_306fd
}

define i32 @function_30725() local_unnamed_addr {
dec_label_pc_30725:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3073e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3073e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKv14CNoDestinationNS_7variantIS6_6CKeyID9CScriptIDNS1_5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_E18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_30750:
  ret i32 %arg3
}

define i32 @function_30799(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_30799:
  %v0_30799 = load i32, i32* @ebp, align 4
  %v1_30799 = add i32 %v0_30799, 1
  %v9_30799 = icmp eq i32 %v1_30799, 0
  store i32 %v1_30799, i32* @ebp, align 4
  %v0_3079a = load i32, i32* @ecx, align 4
  %v1_3079a = add i32 %v0_3079a, -1
  store i32 %v1_3079a, i32* @ecx, align 4
  %v2_3079a = icmp eq i32 %v1_3079a, 0
  %v4_3079a = or i1 %v9_30799, %v2_3079a
  br i1 %v4_3079a, label %dec_label_pc_30799.dec_label_pc_3079c_crit_edge, label %bb

dec_label_pc_30799.dec_label_pc_3079c_crit_edge:  ; preds = %dec_label_pc_30799
  br label %dec_label_pc_3079c

bb:                                               ; preds = %dec_label_pc_30799
  %v6_3079a = call i32 @function_30725()
  %v0_3079f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_3079c

dec_label_pc_3079c:                               ; preds = %dec_label_pc_30799.dec_label_pc_3079c_crit_edge, %bb
  %v0_3079f = phi i32 [ %v1_30799, %dec_label_pc_30799.dec_label_pc_3079c_crit_edge ], [ %v0_3079f.pre, %bb ]
  %v1_3079f = add i32 %v0_3079f, -28
  %v2_3079f = inttoptr i32 %v1_3079f to i32*
  %v3_3079f = load i32, i32* %v2_3079f, align 4
  %v1_307a5 = call i32 @unknown_64c78(i32 %v3_3079f)
  %v0_307aa = load i32, i32* @ebp, align 4
  %v1_307aa = add i32 %v0_307aa, -12
  %v2_307aa = inttoptr i32 %v1_307aa to i32*
  %v3_307aa = load i32, i32* %v2_307aa, align 4
  %v1_307ad = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_307ad = xor i32 %v1_307ad, %v3_307aa
  %v3_307ad = icmp eq i32 %v2_307ad, 0
  store i32 %v2_307ad, i32* @eax, align 4
  br i1 %v3_307ad, label %bb5, label %dec_label_pc_307b6

bb5:                                              ; preds = %dec_label_pc_3079c
  %v1_307b4 = call i32 @function_307bb()
  br label %dec_label_pc_307b6

dec_label_pc_307b6:                               ; preds = %bb5, %dec_label_pc_3079c
  %v2_307b4 = phi i32 [ %v1_307b4, %bb5 ], [ %v2_307ad, %dec_label_pc_3079c ]
  ret i32 %v2_307b4

; uselistorder directives
  uselistorder i32 %v1_3079a, { 1, 0 }
  uselistorder label %dec_label_pc_3079c, { 1, 0 }
}

define i32 @function_307bb() local_unnamed_addr {
dec_label_pc_307bb:
  %v0_307bc = load i32, i32* @eax, align 4
  ret i32 %v0_307bc
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKv6CKeyIDNS_7variantI14CNoDestinationS6_9CScriptIDNS1_5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_E18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_307bd:
  %edx.global-to-local = alloca i32, align 4
  %v0_307f3 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_307f3, 16777216
  %v5_30812 = sdiv i32 %sext, 16777216
  %v6_30812 = call i32 @unknown_64d4a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_30812)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30823

bb:                                               ; preds = %dec_label_pc_307bd
  %v1_30821 = call i32 @function_30828()
  br label %dec_label_pc_30823

dec_label_pc_30823:                               ; preds = %bb, %dec_label_pc_307bd
  %v2_30821 = phi i32 [ %v1_30821, %bb ], [ 0, %dec_label_pc_307bd ]
  ret i32 %v2_30821
}

define i32 @function_30828() local_unnamed_addr {
dec_label_pc_30828:
  %v0_30829 = load i32, i32* @eax, align 4
  ret i32 %v0_30829
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS6_NS1_5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_E18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3082a:
  %edx.global-to-local = alloca i32, align 4
  %v0_30860 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_30860, 16777216
  %v5_3087f = sdiv i32 %sext, 16777216
  %v6_3087f = call i32 @unknown_64e1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_3087f)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30890

bb:                                               ; preds = %dec_label_pc_3082a
  %v1_3088e = call i32 @function_30895()
  br label %dec_label_pc_30890

dec_label_pc_30890:                               ; preds = %bb, %dec_label_pc_3082a
  %v2_3088e = phi i32 [ %v1_3088e, %bb ], [ 0, %dec_label_pc_3082a ]
  ret i32 %v2_3088e
}

define i32 @function_30895() local_unnamed_addr {
dec_label_pc_30895:
  %v0_30896 = load i32, i32* @eax, align 4
  ret i32 %v0_30896
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9copy_intoEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_E18has_fallback_type_EEENT_11result_typeEiRSD_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_30897:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9copy_intoEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_SJ_E18has_fallback_type_EEENT1_11result_typeEiiRSM_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_308f1:
  ret i32 %arg8
}

define i32 @function_3092e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3092e:
  %v0_3092e = load i32, i32* @ecx, align 4
  %v1_3092e = add i32 %v0_3092e, -1070468027
  %v2_3092e = inttoptr i32 %v1_3092e to i8*
  %v3_3092e = load i8, i8* %v2_3092e, align 1
  %v5_3092e = trunc i32 %v0_3092e to i8
  %v6_3092e = add i8 %v3_3092e, %v5_3092e
  store i8 %v6_3092e, i8* %v2_3092e, align 1
  %v3_3094c = load i32, i32* @eax, align 4
  ret i32 %v3_3094c
}

define i32 @_ZNSt10_Iter_baseIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EELb0EE7_S_baseES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_30958:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3097e

bb:                                               ; preds = %dec_label_pc_30958
  %v2_3097c = call i32 @function_30983(i32 %arg1)
  br label %dec_label_pc_3097e

dec_label_pc_3097e:                               ; preds = %bb, %dec_label_pc_30958
  %v3_3097c = phi i32 [ %v2_3097c, %bb ], [ %arg1, %dec_label_pc_30958 ]
  ret i32 %v3_3097c
}

define i32 @function_30983(i32 %arg1) local_unnamed_addr {
dec_label_pc_30983:
  %v0_30984 = load i32, i32* @eax, align 4
  ret i32 %v0_30984
}

define i32 @_ZSt12__niter_baseIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEENSt11_Niter_baseIT_E13iterator_typeESB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_30985:
  %v0_30991 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_30991
}

define i32 @function_3099a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3099a:
  %v0_3099c = load i32, i32* @ebp, align 4
  %v1_3099c = add i32 %v0_3099c, -28
  %v2_3099c = inttoptr i32 %v1_3099c to i32*
  %v3_3099c = load i32, i32* %v2_3099c, align 4
  %v1_309a2 = call i32 @unknown_612dd(i32 %v3_3099c)
  store i32 %v1_309a2, i32* @eax, align 4
  %v0_309a7 = load i32, i32* @ebp, align 4
  %v1_309a7 = add i32 %v0_309a7, -12
  %v2_309a7 = inttoptr i32 %v1_309a7 to i32*
  %v3_309a7 = load i32, i32* %v2_309a7, align 4
  %v1_309aa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_309aa = xor i32 %v1_309aa, %v3_309a7
  %v3_309aa = icmp eq i32 %v2_309aa, 0
  store i32 %v2_309aa, i32* @edx, align 4
  br i1 %v3_309aa, label %bb, label %dec_label_pc_309b3

bb:                                               ; preds = %dec_label_pc_3099a
  %v1_309b1 = call i32 @function_309b8()
  br label %dec_label_pc_309b3

dec_label_pc_309b3:                               ; preds = %bb, %dec_label_pc_3099a
  %v2_309b1 = phi i32 [ %v1_309b1, %bb ], [ %v1_309a2, %dec_label_pc_3099a ]
  ret i32 %v2_309b1
}

define i32 @function_309b8() local_unnamed_addr {
dec_label_pc_309b8:
  %v0_309b9 = load i32, i32* @eax, align 4
  ret i32 %v0_309b9
}

define i32 @_ZSt22__copy_move_backward_aILb0EPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_ET1_T0_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_309ba:
  ret i32 0
}

define i32 @function_309de(i32 %arg1) local_unnamed_addr {
dec_label_pc_309de:
  %v0_309de = load i32, i32* @ebp, align 4
  %v1_309de = add i32 %v0_309de, 1
  store i32 %v1_309de, i32* @ebp, align 4
  %v0_309df = load i32, i32* @ebx, align 4
  %v1_309df = add i32 %v0_309df, 1149885509
  %v2_309df = inttoptr i32 %v1_309df to i8*
  %v3_309df = load i8, i8* %v2_309df, align 1
  %v4_309df = load i32, i32* @ecx, align 4
  %v5_309df = trunc i32 %v4_309df to i8
  %v6_309df = add i8 %v5_309df, %v3_309df
  store i8 %v6_309df, i8* %v2_309df, align 1
  %v0_309e8 = load i32, i32* @ebp, align 4
  %v1_309e8 = add i32 %v0_309e8, -32
  %v2_309e8 = inttoptr i32 %v1_309e8 to i32*
  %v3_309e8 = load i32, i32* %v2_309e8, align 4
  %v1_309ef = add i32 %v0_309e8, -28
  %v2_309ef = inttoptr i32 %v1_309ef to i32*
  %v3_309ef = load i32, i32* %v2_309ef, align 4
  %v2_309f5 = call i32 @unknown_65011(i32 %v3_309ef, i32 %v3_309e8)
  store i32 %v2_309f5, i32* @eax, align 4
  %v0_309fa = load i32, i32* @ebp, align 4
  %v1_309fa = add i32 %v0_309fa, -12
  %v2_309fa = inttoptr i32 %v1_309fa to i32*
  %v3_309fa = load i32, i32* %v2_309fa, align 4
  %v1_309fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_309fd = icmp eq i32 %v1_309fd, %v3_309fa
  br i1 %v3_309fd, label %bb, label %dec_label_pc_30a06

bb:                                               ; preds = %dec_label_pc_309de
  %v1_30a04 = call i32 @function_30a0b()
  br label %dec_label_pc_30a06

dec_label_pc_30a06:                               ; preds = %bb, %dec_label_pc_309de
  %v2_30a04 = phi i32 [ %v1_30a04, %bb ], [ %v2_309f5, %dec_label_pc_309de ]
  ret i32 %v2_30a04
}

define i32 @function_30a0b() local_unnamed_addr {
dec_label_pc_30a0b:
  %v0_30a0c = load i32, i32* @eax, align 4
  ret i32 %v0_30a0c
}

define i32 @_ZNKSt12_Vector_baseIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EESaIS8_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30a0e:
  ret i32 %arg1
}

define i32 @function_30a1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_30a1a:
  %v0_30a1a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_30a20 = load i32, i32* @ebp, align 4
  %v2_30a20 = add i32 %v1_30a20, -12
  %v3_30a20 = inttoptr i32 %v2_30a20 to i32*
  store i32 %v0_30a1a, i32* %v3_30a20, align 4
  %v0_30a25 = load i32, i32* @ebp, align 4
  %v1_30a25 = add i32 %v0_30a25, -28
  %v2_30a25 = inttoptr i32 %v1_30a25 to i32*
  %v3_30a25 = load i32, i32* %v2_30a25, align 4
  store i32 %v3_30a25, i32* @eax, align 4
  %v1_30a28 = add i32 %v0_30a25, -12
  %v2_30a28 = inttoptr i32 %v1_30a28 to i32*
  %v3_30a28 = load i32, i32* %v2_30a28, align 4
  %v1_30a2b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_30a2b = icmp eq i32 %v1_30a2b, %v3_30a28
  br i1 %v3_30a2b, label %bb, label %dec_label_pc_30a34

bb:                                               ; preds = %dec_label_pc_30a1a
  %v1_30a32 = call i32 @function_30a39()
  br label %dec_label_pc_30a34

dec_label_pc_30a34:                               ; preds = %bb, %dec_label_pc_30a1a
  %v2_30a32 = phi i32 [ %v1_30a32, %bb ], [ %v3_30a25, %dec_label_pc_30a1a ]
  ret i32 %v2_30a32
}

define i32 @function_30a39() local_unnamed_addr {
dec_label_pc_30a39:
  %v0_30a3a = load i32, i32* @eax, align 4
  ret i32 %v0_30a3a
}

define i32 @_ZNK9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_30a3c:
  ret i32 %arg1
}

define i32 @function_30a47(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30a47:
  %v0_30a49 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_30a4e = load i32, i32* @ebp, align 4
  %v2_30a4e = add i32 %v1_30a4e, -12
  %v3_30a4e = inttoptr i32 %v2_30a4e to i32*
  store i32 %v0_30a49, i32* %v3_30a4e, align 4
  store i32 178956970, i32* @eax, align 4
  %v0_30a58 = load i32, i32* @ebp, align 4
  %v1_30a58 = add i32 %v0_30a58, -12
  %v2_30a58 = inttoptr i32 %v1_30a58 to i32*
  %v3_30a58 = load i32, i32* %v2_30a58, align 4
  %v1_30a5b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_30a5b = icmp eq i32 %v1_30a5b, %v3_30a58
  br i1 %v3_30a5b, label %bb, label %dec_label_pc_30a64

bb:                                               ; preds = %dec_label_pc_30a47
  %v1_30a62 = call i32 @function_30a69()
  br label %dec_label_pc_30a64

dec_label_pc_30a64:                               ; preds = %bb, %dec_label_pc_30a47
  %v2_30a62 = phi i32 [ %v1_30a62, %bb ], [ 178956970, %dec_label_pc_30a47 ]
  ret i32 %v2_30a62
}

define i32 @function_30a69() local_unnamed_addr {
dec_label_pc_30a69:
  %v0_30a6a = load i32, i32* @eax, align 4
  ret i32 %v0_30a6a
}

define i32 @_ZSt18uninitialized_copyIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES9_ET0_T_SB_SA_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30a6b:
  %v3_30aa2 = call i32 @unknown_6513e(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_30aa2, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30ab3

bb:                                               ; preds = %dec_label_pc_30a6b
  %v1_30ab1 = call i32 @function_30ab8()
  br label %dec_label_pc_30ab3

dec_label_pc_30ab3:                               ; preds = %bb, %dec_label_pc_30a6b
  %v2_30ab1 = phi i32 [ %v1_30ab1, %bb ], [ %v3_30aa2, %dec_label_pc_30a6b ]
  ret i32 %v2_30ab1
}

define i32 @function_30ab8() local_unnamed_addr {
dec_label_pc_30ab8:
  %v0_30ab9 = load i32, i32* @eax, align 4
  ret i32 %v0_30ab9
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS1_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_30aba:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30add

bb:                                               ; preds = %dec_label_pc_30aba
  %v2_30adb = call i32 @function_30ae2(i32 %arg1)
  br label %dec_label_pc_30add

dec_label_pc_30add:                               ; preds = %bb, %dec_label_pc_30aba
  %v3_30adb = phi i32 [ %v2_30adb, %bb ], [ 0, %dec_label_pc_30aba ]
  ret i32 %v3_30adb
}

define i32 @function_30ae2(i32 %arg1) local_unnamed_addr {
dec_label_pc_30ae2:
  %v0_30ae3 = load i32, i32* @eax, align 4
  ret i32 %v0_30ae3
}

define i32 @_ZSt11__addressofIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEEPT_RS9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_30ae4:
  ret i32 %arg1
}

define i32 @function_30b0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_30b0a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_30b0f() local_unnamed_addr {
dec_label_pc_30b0f:
  %eax.global-to-local = alloca i32, align 4
  %v0_30b10 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_30b10
}

define i32 @_ZSt8_DestroyIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_30b11:
  %v1_30b2e = call i32 @unknown_4a389(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_30b3f

bb:                                               ; preds = %dec_label_pc_30b11
  %v1_30b3d = call i32 @function_30b44()
  br label %dec_label_pc_30b3f

dec_label_pc_30b3f:                               ; preds = %bb, %dec_label_pc_30b11
  %v2_30b3d = phi i32 [ %v1_30b3d, %bb ], [ 0, %dec_label_pc_30b11 ]
  ret i32 %v2_30b3d
}

define i32 @function_30b44() local_unnamed_addr {
dec_label_pc_30b44:
  %v0_30b45 = load i32, i32* @eax, align 4
  ret i32 %v0_30b45
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14invoke_visitorI20CAffectedKeysVisitorEEPKvNS_7variantISC_SE_SG_NS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30b46:
  ret i32 %arg4
}

define i32 @function_30b6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_30b6a:
  %cf.global-to-local = alloca i1, align 1
  %v0_30b6a = load i32, i32* @eax, align 4
  %v1_30b6a = add i32 %v0_30b6a, -1240479931
  %v2_30b6a = inttoptr i32 %v1_30b6a to i8*
  %v3_30b6a = load i8, i8* %v2_30b6a, align 1
  %v4_30b6a = load i32, i32* @ecx, align 4
  %v5_30b6a = trunc i32 %v4_30b6a to i8
  %v6_30b6a = load i1, i1* @cf, align 1
  %v7_30b6a = zext i1 %v6_30b6a to i8
  %v8_30b6a = sub i8 %v3_30b6a, %v5_30b6a
  %v9_30b6a = add i8 %v8_30b6a, %v7_30b6a
  %v19_30b6a = sub i8 %v8_30b6a, %v7_30b6a
  %v20_30b6a = icmp ult i8 %v3_30b6a, %v19_30b6a
  %v21_30b6a = icmp ne i8 %v5_30b6a, -1
  %v22_30b6a = or i1 %v21_30b6a, %v20_30b6a
  %v23_30b6a = icmp ult i8 %v3_30b6a, %v5_30b6a
  %v24_30b6a = select i1 %v6_30b6a, i1 %v22_30b6a, i1 %v23_30b6a
  store i1 %v24_30b6a, i1* %cf.global-to-local, align 1
  store i8 %v9_30b6a, i8* %v2_30b6a, align 1
  %v0_30b70 = load i32, i32* @ebp, align 4
  %v0_30b71 = load i32, i32* @eax, align 4
  %v1_30b71 = trunc i32 %v0_30b71 to i8
  %v2_30b71 = load i1, i1* %cf.global-to-local, align 1
  %v3_30b71 = zext i1 %v2_30b71 to i32
  %v4_30b71 = add i32 %v0_30b71, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_88.2212 to i8) to i32))
  %v5_30b71 = add i32 %v4_30b71, %v3_30b71
  %v17_30b71 = icmp ult i8 %v1_30b71, -120
  %v18_30b71 = or i1 %v2_30b71, %v17_30b71
  store i1 %v18_30b71, i1* %cf.global-to-local, align 1
  %v31_30b71 = urem i32 %v5_30b71, 256
  %v33_30b71 = and i32 %v0_30b71, -256
  %v34_30b71 = or i32 %v31_30b71, %v33_30b71
  %v1_30b73 = add i32 %v0_30b70, 2
  store i32 %v1_30b73, i32* @ebp, align 4
  ret i32 %v34_30b71

; uselistorder directives
  uselistorder i1 %v2_30b71, { 1, 0 }
  uselistorder i32 %v0_30b71, { 1, 0, 2 }
  uselistorder i8 %v5_30b6a, { 1, 0, 2 }
  uselistorder i32 -1240479931, { 2, 1, 0 }
}

define i32 @function_30b8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_30b8c:
  %v0_30b8c = load i32, i32* @ebp, align 4
  %v1_30b8c = add i32 %v0_30b8c, -48
  %v2_30b8c = inttoptr i32 %v1_30b8c to i32*
  %v3_30b8c = load i32, i32* %v2_30b8c, align 4
  %tmp = icmp ult i32 %v3_30b8c, 20
  br i1 %tmp, label %dec_label_pc_30b96, label %bb

bb:                                               ; preds = %dec_label_pc_30b8c
  %v4_30b90 = call i32 @function_30fcf()
  %v0_30b96.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_30b96

dec_label_pc_30b96:                               ; preds = %dec_label_pc_30b8c, %bb
  %v0_30b96 = phi i32 [ %v0_30b8c, %dec_label_pc_30b8c ], [ %v0_30b96.pre, %bb ]
  %v1_30b96 = add i32 %v0_30b96, -48
  %v2_30b96 = inttoptr i32 %v1_30b96 to i32*
  %v3_30b96 = load i32, i32* %v2_30b96, align 4
  %v2_30b99 = mul i32 %v3_30b96, 4
  %v1_30b9c = add i32 %v2_30b99, ptrtoint (i32* @global_var_31020.2295 to i32)
  %v1_30ba1 = inttoptr i32 %v1_30b9c to i32*
  %v2_30ba1 = load i32, i32* %v1_30ba1, align 4
  ret i32 %v2_30ba1

; uselistorder directives
  uselistorder label %dec_label_pc_30b96, { 1, 0 }
}

define i32 @function_30bb9(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30bb9:
  %v2_30bb9 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_30bb9 = load i32, i32* @eax, align 4
  %v4_30bb9 = trunc i32 %v3_30bb9 to i8
  %v5_30bb9 = add i8 %v4_30bb9, %v2_30bb9
  %v21_30bb9 = inttoptr i32 %v3_30bb9 to i8*
  store i8 %v5_30bb9, i8* %v21_30bb9, align 1
  %v2_30bbb = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_30bbb = load i32, i32* @eax, align 4
  %v4_30bbb = trunc i32 %v3_30bbb to i8
  %v5_30bbb = add i8 %v4_30bbb, %v2_30bbb
  %v21_30bbb = inttoptr i32 %v3_30bbb to i8*
  store i8 %v5_30bbb, i8* %v21_30bbb, align 1
  %v0_30bbd = load i32, i32* @ebp, align 4
  %v1_30bc4 = add i32 %v0_30bbd, -52
  %v2_30bc4 = inttoptr i32 %v1_30bc4 to i32*
  %v3_30bc4 = load i32, i32* %v2_30bc4, align 4
  ret i32 %v3_30bc4
}

define i32 @function_30bca(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_30bca:
  %v0_30bcc = load i32, i32* @ebp, align 4
  %v1_30bcc = add i32 %v0_30bcc, 1
  store i32 %v1_30bcc, i32* @ebp, align 4
  %v0_30bd1 = call i32 @unknown_652c0()
  %v0_30bd6 = call i32 @function_31007()
  ret i32 %v0_30bd6
}

define i32 @function_30bdb() local_unnamed_addr {
dec_label_pc_30bdb:
  %v0_30be3 = load i32, i32* @ebp, align 4
  %v1_30be3 = add i32 %v0_30be3, -82
  %v2_30be3 = inttoptr i32 %v1_30be3 to i8*
  %v3_30be3 = load i8, i8* %v2_30be3, align 1
  %v1_30bf3 = add i32 %v0_30be3, -56
  %v2_30bf3 = inttoptr i32 %v1_30bf3 to i32*
  %v3_30bf3 = load i32, i32* %v2_30bf3, align 4
  %v1_30bfa = add i32 %v0_30be3, -52
  %v2_30bfa = inttoptr i32 %v1_30bfa to i32*
  %v3_30bfa = load i32, i32* %v2_30bfa, align 4
  %v1_30c01 = add i32 %v0_30be3, -44
  %v2_30c01 = inttoptr i32 %v1_30c01 to i32*
  %v3_30c01 = load i32, i32* %v2_30c01, align 4
  %v6_30c07 = sext i8 %v3_30be3 to i32
  %v7_30c07 = call i32 @unknown_6532d(i32 %v3_30c01, i32 %v3_30bfa, i32 %v3_30bf3, i32 0, i32 %v6_30c07, i32 1)
  %v0_30c0c = call i32 @function_31007()
  ret i32 %v0_30c0c

; uselistorder directives
  uselistorder i32 %v0_30be3, { 0, 2, 1, 3 }
}

define i32 @function_30c11() local_unnamed_addr {
dec_label_pc_30c11:
  %v0_30c19 = load i32, i32* @ebp, align 4
  %v1_30c19 = add i32 %v0_30c19, -81
  %v2_30c19 = inttoptr i32 %v1_30c19 to i8*
  %v3_30c19 = load i8, i8* %v2_30c19, align 1
  %v1_30c29 = add i32 %v0_30c19, -56
  %v2_30c29 = inttoptr i32 %v1_30c29 to i32*
  %v3_30c29 = load i32, i32* %v2_30c29, align 4
  %v1_30c30 = add i32 %v0_30c19, -52
  %v2_30c30 = inttoptr i32 %v1_30c30 to i32*
  %v3_30c30 = load i32, i32* %v2_30c30, align 4
  %v1_30c37 = add i32 %v0_30c19, -44
  %v2_30c37 = inttoptr i32 %v1_30c37 to i32*
  %v3_30c37 = load i32, i32* %v2_30c37, align 4
  %v6_30c3d = sext i8 %v3_30c19 to i32
  %v7_30c3d = call i32 @unknown_6539a(i32 %v3_30c37, i32 %v3_30c30, i32 %v3_30c29, i32 0, i32 %v6_30c3d, i32 1)
  %v0_30c42 = call i32 @function_31007()
  ret i32 %v0_30c42

; uselistorder directives
  uselistorder i32 %v0_30c19, { 0, 2, 1, 3 }
}

define i32 @function_30c51(i32 %arg1) local_unnamed_addr {
dec_label_pc_30c51:
  %v0_30c51 = load i32, i32* @ebp, align 4
  %v1_30c51 = add i32 %v0_30c51, 1
  store i32 %v1_30c51, i32* @ebp, align 4
  store i1 false, i1* @cf, align 1
  %v1_30c5f = add i32 %v0_30c51, -55
  %v2_30c5f = inttoptr i32 %v1_30c5f to i32*
  %v3_30c5f = load i32, i32* %v2_30c5f, align 4
  ret i32 %v3_30c5f
}

define i32 @function_30c64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30c64:
  %v0_30c66 = load i32, i32* @ebp, align 4
  %v1_30c66 = add i32 %v0_30c66, -52
  %v2_30c66 = inttoptr i32 %v1_30c66 to i32*
  %v3_30c66 = load i32, i32* %v2_30c66, align 4
  %v1_30c6d = add i32 %v0_30c66, -44
  %v2_30c6d = inttoptr i32 %v1_30c6d to i32*
  %v3_30c6d = load i32, i32* %v2_30c6d, align 4
  %v2_30c73 = call i32 @unknown_65407(i32 %v3_30c6d, i32 %v3_30c66)
  %v0_30c78 = call i32 @function_31007()
  ret i32 %v0_30c78
}

define i32 @function_30c7d() local_unnamed_addr {
dec_label_pc_30c7d:
  %v0_30c85 = load i32, i32* @ebp, align 4
  %v1_30c9c = add i32 %v0_30c85, -52
  %v2_30c9c = inttoptr i32 %v1_30c9c to i32*
  %v3_30c9c = load i32, i32* %v2_30c9c, align 4
  %v1_30ca3 = add i32 %v0_30c85, -44
  %v2_30ca3 = inttoptr i32 %v1_30ca3 to i32*
  %v3_30ca3 = load i32, i32* %v2_30ca3, align 4
  %v2_30ca9 = call i32 @unknown_65407(i32 %v3_30ca3, i32 %v3_30c9c)
  %v0_30cae = call i32 @function_31007()
  ret i32 %v0_30cae

; uselistorder directives
  uselistorder i32 %v0_30c85, { 1, 0 }
}

define i32 @function_30cb3() local_unnamed_addr {
dec_label_pc_30cb3:
  %v0_30cbb = load i32, i32* @ebp, align 4
  %v1_30cd2 = add i32 %v0_30cbb, -52
  %v2_30cd2 = inttoptr i32 %v1_30cd2 to i32*
  %v3_30cd2 = load i32, i32* %v2_30cd2, align 4
  %v1_30cd9 = add i32 %v0_30cbb, -44
  %v2_30cd9 = inttoptr i32 %v1_30cd9 to i32*
  %v3_30cd9 = load i32, i32* %v2_30cd9, align 4
  %v2_30cdf = call i32 @unknown_65407(i32 %v3_30cd9, i32 %v3_30cd2)
  %v0_30ce4 = call i32 @function_31007()
  ret i32 %v0_30ce4

; uselistorder directives
  uselistorder i32 %v0_30cbb, { 1, 0 }
}

define i32 @function_30ce9() local_unnamed_addr {
dec_label_pc_30ce9:
  %v0_30cf1 = load i32, i32* @ebp, align 4
  %v1_30d08 = add i32 %v0_30cf1, -52
  %v2_30d08 = inttoptr i32 %v1_30d08 to i32*
  %v3_30d08 = load i32, i32* %v2_30d08, align 4
  %v1_30d0f = add i32 %v0_30cf1, -44
  %v2_30d0f = inttoptr i32 %v1_30d0f to i32*
  %v3_30d0f = load i32, i32* %v2_30d0f, align 4
  %v2_30d15 = call i32 @unknown_65407(i32 %v3_30d0f, i32 %v3_30d08)
  %v0_30d1a = call i32 @function_31007()
  ret i32 %v0_30d1a

; uselistorder directives
  uselistorder i32 %v0_30cf1, { 1, 0 }
}

define i32 @function_30d1f() local_unnamed_addr {
dec_label_pc_30d1f:
  %v0_30d27 = load i32, i32* @ebp, align 4
  %v1_30d3e = add i32 %v0_30d27, -52
  %v2_30d3e = inttoptr i32 %v1_30d3e to i32*
  %v3_30d3e = load i32, i32* %v2_30d3e, align 4
  %v1_30d45 = add i32 %v0_30d27, -44
  %v2_30d45 = inttoptr i32 %v1_30d45 to i32*
  %v3_30d45 = load i32, i32* %v2_30d45, align 4
  %v2_30d4b = call i32 @unknown_65407(i32 %v3_30d45, i32 %v3_30d3e)
  %v0_30d50 = call i32 @function_31007()
  ret i32 %v0_30d50

; uselistorder directives
  uselistorder i32 %v0_30d27, { 1, 0 }
}

define i32 @function_30d5c(i32 %arg1) local_unnamed_addr {
dec_label_pc_30d5c:
  %v2_30d5c = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_30d5c = load i32, i32* @ecx, align 4
  %v4_30d5c = trunc i32 %v3_30d5c to i8
  %v5_30d5c = add i8 %v4_30d5c, %v2_30d5c
  %v20_30d5c = load i32, i32* @edi, align 4
  %v21_30d5c = inttoptr i32 %v20_30d5c to i8*
  store i8 %v5_30d5c, i8* %v21_30d5c, align 1
  %v0_30d60 = load i32, i32* @ecx, align 4
  %v1_30d60 = and i32 %v0_30d60, -65281
  %v2_30d60 = or i32 %v1_30d60, ptrtoint (i8* @global_var_8800.2296 to i32)
  store i32 %v2_30d60, i32* @ecx, align 4
  %v0_30d6d = load i32, i32* @ebp, align 4
  %v1_30d74 = add i32 %v0_30d6d, -52
  %v2_30d74 = inttoptr i32 %v1_30d74 to i32*
  %v3_30d74 = load i32, i32* %v2_30d74, align 4
  %v1_30d7b = add i32 %v0_30d6d, -44
  %v2_30d7b = inttoptr i32 %v1_30d7b to i32*
  %v3_30d7b = load i32, i32* %v2_30d7b, align 4
  %v2_30d81 = call i32 @unknown_65407(i32 %v3_30d7b, i32 %v3_30d74)
  %v0_30d86 = call i32 @function_31007()
  ret i32 %v0_30d86
}

define i32 @function_30d9a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30d9a:
  %eax.global-to-local = alloca i32, align 4
  %v0_30d9a = load i32, i32* @ebx, align 4
  %v1_30d9a = udiv i32 %v0_30d9a, 256
  %v3_30d9a = load i32, i32* @eax, align 4
  %v4_30d9a = trunc i32 %v3_30d9a to i8
  %v5_30d9a = load i1, i1* @cf, align 1
  %v6_30d9a = zext i1 %v5_30d9a to i32
  %v7_30d9a = add i32 %v1_30d9a, %v3_30d9a
  %v8_30d9a = add i32 %v7_30d9a, %v6_30d9a
  %v29_30d9a = mul i32 %v8_30d9a, 256
  %v31_30d9a = and i32 %v29_30d9a, 65280
  %v32_30d9a = and i32 %v0_30d9a, -65281
  %v33_30d9a = or i32 %v31_30d9a, %v32_30d9a
  store i32 %v33_30d9a, i32* @ebx, align 4
  %v2_30d9d = and i8 %v4_30d9a, 12
  %v8_30d9d = zext i8 %v2_30d9d to i32
  %v10_30d9d = and i32 %v3_30d9a, -256
  %v11_30d9d = or i32 %v8_30d9d, %v10_30d9d
  store i32 %v11_30d9d, i32* %eax.global-to-local, align 4
  %v1_30d9f = inttoptr i32 %v11_30d9d to i8*
  %v2_30d9f = load i8, i8* %v1_30d9f, align 4
  %v5_30d9f = add i8 %v2_30d9f, %v2_30d9d
  store i8 %v5_30d9f, i8* %v1_30d9f, align 4
  %v0_30da1 = load i32, i32* %eax.global-to-local, align 4
  %v1_30da1 = inttoptr i32 %v0_30da1 to i8*
  %v2_30da1 = load i8, i8* %v1_30da1, align 1
  %v4_30da1 = trunc i32 %v0_30da1 to i8
  %v5_30da1 = add i8 %v2_30da1, %v4_30da1
  store i8 %v5_30da1, i8* %v1_30da1, align 1
  %v0_30da3 = load i32, i32* @ebp, align 4
  %v1_30da3 = add i32 %v0_30da3, -56
  %v2_30da3 = inttoptr i32 %v1_30da3 to i32*
  %v3_30da3 = load i32, i32* %v2_30da3, align 4
  store i32 %v3_30da3, i32* %eax.global-to-local, align 4
  %v1_30daa = add i32 %v0_30da3, -52
  %v2_30daa = inttoptr i32 %v1_30daa to i32*
  %v3_30daa = load i32, i32* %v2_30daa, align 4
  store i32 %v3_30daa, i32* %eax.global-to-local, align 4
  %v1_30db1 = add i32 %v0_30da3, -44
  %v2_30db1 = inttoptr i32 %v1_30db1 to i32*
  %v3_30db1 = load i32, i32* %v2_30db1, align 4
  store i32 %v3_30db1, i32* %eax.global-to-local, align 4
  %v2_30db7 = call i32 @unknown_65407(i32 %v3_30db1, i32 %v3_30daa)
  store i32 %v2_30db7, i32* %eax.global-to-local, align 4
  %v0_30dbc = call i32 @function_31007()
  store i32 %v0_30dbc, i32* %eax.global-to-local, align 4
  ret i32 %v0_30dbc

; uselistorder directives
  uselistorder i32 %v3_30d9a, { 1, 0, 2 }
  uselistorder i32 %v0_30d9a, { 1, 0 }
}

define i32 @function_30dc1() local_unnamed_addr {
dec_label_pc_30dc1:
  %v0_30dc9 = load i32, i32* @ebp, align 4
  %v1_30de0 = add i32 %v0_30dc9, -52
  %v2_30de0 = inttoptr i32 %v1_30de0 to i32*
  %v3_30de0 = load i32, i32* %v2_30de0, align 4
  %v1_30de7 = add i32 %v0_30dc9, -44
  %v2_30de7 = inttoptr i32 %v1_30de7 to i32*
  %v3_30de7 = load i32, i32* %v2_30de7, align 4
  %v2_30ded = call i32 @unknown_65407(i32 %v3_30de7, i32 %v3_30de0)
  %v0_30df2 = call i32 @function_31007()
  ret i32 %v0_30df2

; uselistorder directives
  uselistorder i32 %v0_30dc9, { 1, 0 }
}

define i32 @function_30df7() local_unnamed_addr {
dec_label_pc_30df7:
  %v0_30dff = load i32, i32* @ebp, align 4
  %v1_30e16 = add i32 %v0_30dff, -52
  %v2_30e16 = inttoptr i32 %v1_30e16 to i32*
  %v3_30e16 = load i32, i32* %v2_30e16, align 4
  %v1_30e1d = add i32 %v0_30dff, -44
  %v2_30e1d = inttoptr i32 %v1_30e1d to i32*
  %v3_30e1d = load i32, i32* %v2_30e1d, align 4
  %v2_30e23 = call i32 @unknown_65407(i32 %v3_30e1d, i32 %v3_30e16)
  %v0_30e28 = call i32 @function_31007()
  ret i32 %v0_30e28

; uselistorder directives
  uselistorder i32 %v0_30dff, { 1, 0 }
}

define i32 @function_30e54(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30e54:
  %v0_30e54 = load i32, i32* @ebp, align 4
  %v1_30e54 = add i32 %v0_30e54, 1
  store i32 %v1_30e54, i32* @ebp, align 4
  %v2_30e59 = call i32 @unknown_65407(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  %v0_30e5e = call i32 @function_31007()
  ret i32 %v0_30e5e
}

define i32 @function_30e63() local_unnamed_addr {
dec_label_pc_30e63:
  %v0_30e6b = load i32, i32* @ebp, align 4
  %v1_30e82 = add i32 %v0_30e6b, -52
  %v2_30e82 = inttoptr i32 %v1_30e82 to i32*
  %v3_30e82 = load i32, i32* %v2_30e82, align 4
  %v1_30e89 = add i32 %v0_30e6b, -44
  %v2_30e89 = inttoptr i32 %v1_30e89 to i32*
  %v3_30e89 = load i32, i32* %v2_30e89, align 4
  %v2_30e8f = call i32 @unknown_65407(i32 %v3_30e89, i32 %v3_30e82)
  %v0_30e94 = call i32 @function_31007()
  ret i32 %v0_30e94

; uselistorder directives
  uselistorder i32 %v0_30e6b, { 1, 0 }
}

define i32 @function_30ea9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_30ea9:
  %v0_30eb1 = load i32, i32* @ebp, align 4
  %v1_30eb8 = add i32 %v0_30eb1, -52
  %v2_30eb8 = inttoptr i32 %v1_30eb8 to i32*
  %v3_30eb8 = load i32, i32* %v2_30eb8, align 4
  %v1_30ebf = add i32 %v0_30eb1, -44
  %v2_30ebf = inttoptr i32 %v1_30ebf to i32*
  %v3_30ebf = load i32, i32* %v2_30ebf, align 4
  %v2_30ec5 = call i32 @unknown_65407(i32 %v3_30ebf, i32 %v3_30eb8)
  %v0_30eca = call i32 @function_31007()
  ret i32 %v0_30eca
}

define i32 @function_30eea(i32 %arg1) local_unnamed_addr {
dec_label_pc_30eea:
  %v0_30eee = load i32, i32* @ebp, align 4
  %v1_30eee = add i32 %v0_30eee, -52
  %v2_30eee = inttoptr i32 %v1_30eee to i32*
  %v3_30eee = load i32, i32* %v2_30eee, align 4
  %v1_30ef5 = add i32 %v0_30eee, -44
  %v2_30ef5 = inttoptr i32 %v1_30ef5 to i32*
  %v3_30ef5 = load i32, i32* %v2_30ef5, align 4
  %v2_30efb = call i32 @unknown_65407(i32 %v3_30ef5, i32 %v3_30eee)
  %v0_30f00 = call i32 @function_31007()
  ret i32 %v0_30f00
}

define i32 @function_30f37(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30f37:
  %eax.global-to-local = alloca i32, align 4
  %v2_30f38 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_30f38 = load i32, i32* @eax, align 4
  %v4_30f38 = trunc i32 %v3_30f38 to i8
  %v5_30f38 = add i8 %v4_30f38, %v2_30f38
  %v21_30f38 = inttoptr i32 %v3_30f38 to i8*
  store i8 %v5_30f38, i8* %v21_30f38, align 1
  %v0_30f3a = load i32, i32* @ebx, align 4
  %v3_30f3a = load i32, i32* @eax, align 4
  %v5_30f3a1 = mul i32 %v3_30f3a, 256
  %v1_30f3a2 = add i32 %v5_30f3a1, %v0_30f3a
  %v22_30f3a = and i32 %v1_30f3a2, 65280
  %v23_30f3a = and i32 %v0_30f3a, -65281
  %v24_30f3a = or i32 %v22_30f3a, %v23_30f3a
  store i32 %v24_30f3a, i32* @ebx, align 4
  %v11_30f3d = and i32 %v3_30f3a, -236
  store i32 %v11_30f3d, i32* %eax.global-to-local, align 4
  %v1_30f3f = inttoptr i32 %v11_30f3d to i32*
  %v2_30f3f = load i32, i32* %v1_30f3f, align 4
  %v4_30f3f = add i32 %v2_30f3f, %v11_30f3d
  store i32 %v4_30f3f, i32* %v1_30f3f, align 4
  %v0_30f41 = load i32, i32* %eax.global-to-local, align 4
  %v1_30f41 = inttoptr i32 %v0_30f41 to i8*
  %v2_30f41 = load i8, i8* %v1_30f41, align 1
  %v4_30f41 = trunc i32 %v0_30f41 to i8
  %v5_30f41 = add i8 %v2_30f41, %v4_30f41
  store i8 %v5_30f41, i8* %v1_30f41, align 1
  %v0_30f43 = load i32, i32* @edi, align 4
  store i32 %v0_30f43, i32* %eax.global-to-local, align 4
  %v0_30f51 = load i32, i32* @ebp, align 4
  %v1_30f51 = add i32 %v0_30f51, -56
  %v2_30f51 = inttoptr i32 %v1_30f51 to i32*
  %v3_30f51 = load i32, i32* %v2_30f51, align 4
  store i32 %v3_30f51, i32* %eax.global-to-local, align 4
  %v1_30f58 = add i32 %v0_30f51, -52
  %v2_30f58 = inttoptr i32 %v1_30f58 to i32*
  %v3_30f58 = load i32, i32* %v2_30f58, align 4
  store i32 %v3_30f58, i32* %eax.global-to-local, align 4
  %v1_30f5f = add i32 %v0_30f51, -44
  %v2_30f5f = inttoptr i32 %v1_30f5f to i32*
  %v3_30f5f = load i32, i32* %v2_30f5f, align 4
  store i32 %v3_30f5f, i32* %eax.global-to-local, align 4
  %v2_30f65 = call i32 @unknown_65407(i32 %v3_30f5f, i32 %v3_30f58)
  store i32 %v2_30f65, i32* %eax.global-to-local, align 4
  %v0_30f6a = call i32 @function_31007()
  store i32 %v0_30f6a, i32* %eax.global-to-local, align 4
  ret i32 %v0_30f6a

; uselistorder directives
  uselistorder i32 %v11_30f3d, { 0, 2, 1 }
  uselistorder i32 %v3_30f3a, { 1, 0 }
  uselistorder i32 %v0_30f3a, { 1, 0 }
}

define i32 @function_30f7f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_30f7f:
  %eax.global-to-local = alloca i32, align 4
  %v0_30f7f = load i32, i32* @eax, align 4
  %v1_30f7f = trunc i32 %v0_30f7f to i8
  %v2_30f7f = and i8 %v1_30f7f, 12
  %v8_30f7f = zext i8 %v2_30f7f to i32
  %v10_30f7f = and i32 %v0_30f7f, -256
  %v11_30f7f = or i32 %v8_30f7f, %v10_30f7f
  store i32 %v11_30f7f, i32* %eax.global-to-local, align 4
  %v1_30f81 = inttoptr i32 %v11_30f7f to i8*
  %v2_30f81 = load i8, i8* %v1_30f81, align 4
  %v5_30f81 = add i8 %v2_30f81, %v2_30f7f
  store i8 %v5_30f81, i8* %v1_30f81, align 4
  %v0_30f83 = load i32, i32* %eax.global-to-local, align 4
  %v1_30f83 = inttoptr i32 %v0_30f83 to i8*
  %v2_30f83 = load i8, i8* %v1_30f83, align 1
  %v4_30f83 = trunc i32 %v0_30f83 to i8
  %v5_30f83 = add i8 %v2_30f83, %v4_30f83
  store i8 %v5_30f83, i8* %v1_30f83, align 1
  %v0_30f85 = load i32, i32* @ebp, align 4
  %v1_30f85 = add i32 %v0_30f85, -56
  %v2_30f85 = inttoptr i32 %v1_30f85 to i32*
  %v3_30f85 = load i32, i32* %v2_30f85, align 4
  store i32 %v3_30f85, i32* %eax.global-to-local, align 4
  %v1_30f8c = add i32 %v0_30f85, -52
  %v2_30f8c = inttoptr i32 %v1_30f8c to i32*
  %v3_30f8c = load i32, i32* %v2_30f8c, align 4
  store i32 %v3_30f8c, i32* %eax.global-to-local, align 4
  %v1_30f93 = add i32 %v0_30f85, -44
  %v2_30f93 = inttoptr i32 %v1_30f93 to i32*
  %v3_30f93 = load i32, i32* %v2_30f93, align 4
  store i32 %v3_30f93, i32* %eax.global-to-local, align 4
  %v2_30f99 = call i32 @unknown_65407(i32 %v3_30f93, i32 %v3_30f8c)
  store i32 %v2_30f99, i32* %eax.global-to-local, align 4
  %v0_30f9e = call i32 @function_31007()
  store i32 %v0_30f9e, i32* %eax.global-to-local, align 4
  ret i32 %v0_30f9e
}

define i32 @function_30fa0() local_unnamed_addr {
dec_label_pc_30fa0:
  %v0_30fb4 = load i32, i32* @ebp, align 4
  %v1_30fbb = add i32 %v0_30fb4, -52
  %v2_30fbb = inttoptr i32 %v1_30fbb to i32*
  %v3_30fbb = load i32, i32* %v2_30fbb, align 4
  %v1_30fc2 = add i32 %v0_30fb4, -44
  %v2_30fc2 = inttoptr i32 %v1_30fc2 to i32*
  %v3_30fc2 = load i32, i32* %v2_30fc2, align 4
  %v2_30fc8 = call i32 @unknown_65407(i32 %v3_30fc2, i32 %v3_30fbb)
  %v0_30fcd = call i32 @function_31007()
  ret i32 %v0_30fcd

; uselistorder directives
  uselistorder i32 ()* @function_31007, { 18, 7, 6, 8, 5, 17, 4, 16, 15, 3, 2, 14, 13, 12, 11, 1, 10, 9, 0 }
  uselistorder i32 (i32, i32)* @unknown_65407, { 15, 6, 5, 7, 4, 14, 3, 13, 12, 2, 1, 11, 10, 9, 8, 0 }
}

define i32 @function_30fcf() local_unnamed_addr {
dec_label_pc_30fcf:
  %v5_30fdf = load i32, i32* @eax, align 4
  ret i32 %v5_30fdf
}

define i32 @function_30fe5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_30fe5:
  %v0_30fe7 = load i32, i32* @ebp, align 4
  %v1_30fe7 = add i32 %v0_30fe7, -56
  %v2_30fe7 = inttoptr i32 %v1_30fe7 to i32*
  %v3_30fe7 = load i32, i32* %v2_30fe7, align 4
  %v1_30fee = add i32 %v0_30fe7, -52
  %v2_30fee = inttoptr i32 %v1_30fee to i32*
  %v3_30fee = load i32, i32* %v2_30fee, align 4
  %v1_30ff5 = add i32 %v0_30fe7, -48
  %v2_30ff5 = inttoptr i32 %v1_30ff5 to i32*
  %v3_30ff5 = load i32, i32* %v2_30ff5, align 4
  %v1_30ffc = add i32 %v0_30fe7, -44
  %v2_30ffc = inttoptr i32 %v1_30ffc to i32*
  %v3_30ffc = load i32, i32* %v2_30ffc, align 4
  %v4_31002 = call i32 @unknown_65461(i32 %v3_30ffc, i32 %v3_30ff5, i32 %v3_30fee, i32 %v3_30fe7)
  ret i32 %v4_31002

; uselistorder directives
  uselistorder i32 %v0_30fe7, { 1, 0, 2, 3 }
}

define i32 @function_31007() local_unnamed_addr {
dec_label_pc_31007:
  %v0_31007 = load i32, i32* @ebp, align 4
  %v1_31007 = add i32 %v0_31007, -28
  %v2_31007 = inttoptr i32 %v1_31007 to i32*
  %v3_31007 = load i32, i32* %v2_31007, align 4
  %v1_3100a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3100a = xor i32 %v1_3100a, %v3_31007
  %v3_3100a = icmp eq i32 %v2_3100a, 0
  store i32 %v2_3100a, i32* @eax, align 4
  br i1 %v3_3100a, label %bb, label %dec_label_pc_31013

bb:                                               ; preds = %dec_label_pc_31007
  %v1_31011 = call i32 @function_31018()
  br label %dec_label_pc_31013

dec_label_pc_31013:                               ; preds = %bb, %dec_label_pc_31007
  %v2_31011 = phi i32 [ %v1_31011, %bb ], [ %v2_3100a, %dec_label_pc_31007 ]
  ret i32 %v2_31011
}

define i32 @function_31018() local_unnamed_addr {
dec_label_pc_31018:
  %v0_3101f = load i32, i32* @eax, align 4
  ret i32 %v0_3101f
}

define i32 @_ZNSt10_Iter_baseIP6CKeyIDLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_31070:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31096

bb:                                               ; preds = %dec_label_pc_31070
  %v2_31094 = call i32 @function_3109b(i32 %arg1)
  br label %dec_label_pc_31096

dec_label_pc_31096:                               ; preds = %bb, %dec_label_pc_31070
  %v3_31094 = phi i32 [ %v2_31094, %bb ], [ %arg1, %dec_label_pc_31070 ]
  ret i32 %v3_31094
}

define i32 @function_3109b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3109b:
  %v0_3109c = load i32, i32* @eax, align 4
  ret i32 %v0_3109c
}

define i32 @_ZSt12__niter_baseIP6CKeyIDENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3109d:
  %v1_310ba = call i32 @unknown_6210d(i32 %arg1)
  store i32 %v1_310ba, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_310cb

bb:                                               ; preds = %dec_label_pc_3109d
  %v1_310c9 = call i32 @function_310d0()
  br label %dec_label_pc_310cb

dec_label_pc_310cb:                               ; preds = %bb, %dec_label_pc_3109d
  %v2_310c9 = phi i32 [ %v1_310c9, %bb ], [ %v1_310ba, %dec_label_pc_3109d ]
  ret i32 %v2_310c9
}

define i32 @function_310d0() local_unnamed_addr {
dec_label_pc_310d0:
  %v0_310d1 = load i32, i32* @eax, align 4
  ret i32 %v0_310d1
}

define i32 @_ZSt22__copy_move_backward_aILb0EP6CKeyIDS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_310d2:
  %v3_3110d = call i32 @unknown_65a54(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3110d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3111e

bb:                                               ; preds = %dec_label_pc_310d2
  %v1_3111c = call i32 @function_31123()
  br label %dec_label_pc_3111e

dec_label_pc_3111e:                               ; preds = %bb, %dec_label_pc_310d2
  %v2_3111c = phi i32 [ %v1_3111c, %bb ], [ %v3_3110d, %dec_label_pc_310d2 ]
  ret i32 %v2_3111c
}

define i32 @function_31123() local_unnamed_addr {
dec_label_pc_31123:
  %v0_31124 = load i32, i32* @eax, align 4
  ret i32 %v0_31124
}

define i32 @_ZNKSt12_Vector_baseI6CKeyIDSaIS0_EE19_M_get_Tp_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31126:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3114c

bb:                                               ; preds = %dec_label_pc_31126
  %v2_3114a = call i32 @function_31151(i32 %arg1)
  br label %dec_label_pc_3114c

dec_label_pc_3114c:                               ; preds = %bb, %dec_label_pc_31126
  %v3_3114a = phi i32 [ %v2_3114a, %bb ], [ %arg1, %dec_label_pc_31126 ]
  ret i32 %v3_3114a
}

define i32 @function_31151(i32 %arg1) local_unnamed_addr {
dec_label_pc_31151:
  %v0_31152 = load i32, i32* @eax, align 4
  ret i32 %v0_31152
}

define i32 @_ZNK9__gnu_cxx13new_allocatorI6CKeyIDE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31154:
  ret i32 214748364
}

define i32 @function_31180(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31180:
  %v0_31180 = load i32, i32* @ecx, align 4
  %v1_31180 = add i32 %v0_31180, -1
  store i32 %v1_31180, i32* @ecx, align 4
  %v0_31182 = load i32, i32* @eax, align 4
  ret i32 %v0_31182
}

define i32 @_ZSt18uninitialized_copyIP6CKeyIDS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31183:
  %v3_311ba = call i32 @unknown_65b91(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_311ba, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_311cb

bb:                                               ; preds = %dec_label_pc_31183
  %v1_311c9 = call i32 @function_311d0()
  br label %dec_label_pc_311cb

dec_label_pc_311cb:                               ; preds = %bb, %dec_label_pc_31183
  %v2_311c9 = phi i32 [ %v1_311c9, %bb ], [ %v3_311ba, %dec_label_pc_31183 ]
  ret i32 %v2_311c9
}

define i32 @function_311d0() local_unnamed_addr {
dec_label_pc_311d0:
  %v0_311d1 = load i32, i32* @eax, align 4
  ret i32 %v0_311d1
}

define i32 @_ZNSt12_Destroy_auxILb1EE9__destroyIP6CKeyIDEEvT_S4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_311d2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_311fb

bb:                                               ; preds = %dec_label_pc_311d2
  %v3_311f9 = call i32 @function_31200(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_311fb

dec_label_pc_311fb:                               ; preds = %bb, %dec_label_pc_311d2
  %v4_311f9 = phi i32 [ %v3_311f9, %bb ], [ 0, %dec_label_pc_311d2 ]
  ret i32 %v4_311f9
}

define i32 @function_31200(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31200:
  %v0_31201 = load i32, i32* @eax, align 4
  ret i32 %v0_31201
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES4_IS6_SaIS6_EEEEPS6_EET0_T_SE_SD_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31202:
  %stack_var_-32 = alloca i32, align 4
  %v2_31268 = ptrtoint i32* %stack_var_-32 to i32
  ret i32 %v2_31268
}

define i32 @function_31272(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31272:
  %v0_31272 = load i32, i32* @eax, align 4
  %v2_31272 = mul i32 %v0_31272, 8
  %v3_31272 = add i32 %v0_31272, 1166784373
  %v4_31272 = add i32 %v3_31272, %v2_31272
  %v5_31272 = inttoptr i32 %v4_31272 to i8*
  %v6_31272 = load i8, i8* %v5_31272, align 1
  %v8_31272 = trunc i32 %v0_31272 to i8
  %v9_31272 = add i8 %v6_31272, %v8_31272
  store i8 %v9_31272, i8* %v5_31272, align 1
  %v30_31272 = load i32, i32* @eax, align 4
  ret i32 %v30_31272

; uselistorder directives
  uselistorder i32 %v0_31272, { 0, 2, 1 }
}

define i32 @function_3127a() local_unnamed_addr {
dec_label_pc_3127a:
  %v0_31286 = call i32 @function_312b8()
  ret i32 %v0_31286
}

define i32 @function_31289() local_unnamed_addr {
dec_label_pc_31289:
  %eax.global-to-local = alloca i32, align 4
  %v0_31289 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_31289
}

define i32 @function_3129c() local_unnamed_addr {
dec_label_pc_3129c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_312b8() local_unnamed_addr {
dec_label_pc_312b8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_312bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_312bc:
  %v0_312bc = load i32, i32* @ebx, align 4
  %v1_312bc = add i32 %v0_312bc, 1566258372
  %v2_312bc = inttoptr i32 %v1_312bc to i32*
  %v3_312bc = load i32, i32* %v2_312bc, align 4
  %v4_312bc = add i32 %v3_312bc, 1
  store i32 %v4_312bc, i32* %v2_312bc, align 4
  %v0_312c2 = load i32, i32* @eax, align 4
  ret i32 %v0_312c2
}

define i32 @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKSt6vectorIhSaIhEES2_IS4_SaIS4_EEEELb1EE7_S_baseES9_(i32 %arg1) local_unnamed_addr {
dec_label_pc_312c3:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  %v2_312da = ptrtoint i32* %stack_var_-32 to i32
  %v1_312e0 = call i32 @unknown_53dd7(i32 %v2_312da)
  %v1_312e5 = inttoptr i32 %v1_312e0 to i32*
  %v2_312e5 = load i32, i32* %v1_312e5, align 4
  store i32 %v2_312e5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_312f3

bb:                                               ; preds = %dec_label_pc_312c3
  %v1_312f1 = call i32 @function_312f8()
  br label %dec_label_pc_312f3

dec_label_pc_312f3:                               ; preds = %bb, %dec_label_pc_312c3
  %v2_312f1 = phi i32 [ %v1_312f1, %bb ], [ %v2_312e5, %dec_label_pc_312c3 ]
  ret i32 %v2_312f1
}

declare i32 @__stack_chk_fail.1297() local_unnamed_addr

define i32 @function_312f8() local_unnamed_addr {
dec_label_pc_312f8:
  %v0_312f9 = load i32, i32* @eax, align 4
  ret i32 %v0_312f9
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKSt6vectorIhSaIhEEPS5_EET0_T_SA_S9_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_312fa:
  %v2_31325 = sub i32 %arg2, %arg1
  %v2_31329 = sdiv i32 %v2_31325, 4
  %v3_3132c = mul i32 %v2_31329, -1431655765
  ret i32 %v3_3132c
}

define i32 @function_3133e() local_unnamed_addr {
dec_label_pc_3133e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3133e = load i32, i32* @ebp, align 4
  %v1_3133e = add i32 %v0_3133e, -36
  %v2_3133e = inttoptr i32 %v1_3133e to i32*
  %v3_3133e = load i32, i32* %v2_3133e, align 4
  store i32 %v3_3133e, i32* %eax.global-to-local, align 4
  %v1_31344 = call i32 @unknown_4694e(i32 %v3_3133e)
  store i32 %v1_31344, i32* %eax.global-to-local, align 4
  %v0_31349 = load i32, i32* @ebp, align 4
  %v1_31349 = add i32 %v0_31349, -28
  %v2_31349 = inttoptr i32 %v1_31349 to i32*
  %v3_31349 = load i32, i32* %v2_31349, align 4
  %v4_31349 = add i32 %v3_31349, 12
  store i32 %v4_31349, i32* %v2_31349, align 4
  %v0_3134d = load i32, i32* @ebp, align 4
  %v1_3134d = add i32 %v0_3134d, -36
  %v2_3134d = inttoptr i32 %v1_3134d to i32*
  %v3_3134d = load i32, i32* %v2_3134d, align 4
  %v4_3134d = add i32 %v3_3134d, 12
  store i32 %v4_3134d, i32* %v2_3134d, align 4
  %v0_31351 = load i32, i32* @ebp, align 4
  %v1_31351 = add i32 %v0_31351, -16
  %v2_31351 = inttoptr i32 %v1_31351 to i32*
  %v3_31351 = load i32, i32* %v2_31351, align 4
  %v4_31351 = add i32 %v3_31351, -1
  store i32 %v4_31351, i32* %v2_31351, align 4
  %v0_31355 = load i32, i32* @ebp, align 4
  %v1_31355 = add i32 %v0_31355, -16
  %v2_31355 = inttoptr i32 %v1_31355 to i32*
  %v3_31355 = load i32, i32* %v2_31355, align 4
  %v10_31355 = icmp eq i32 %v3_31355, 0
  %v11_31355 = icmp slt i32 %v3_31355, 0
  %v3_31359 = icmp eq i1 %v11_31355, false
  %v4_31359 = icmp eq i1 %v10_31355, false
  %v5_31359 = icmp eq i1 %v3_31359, %v4_31359
  %v6_31359 = zext i1 %v5_31359 to i32
  %v7_31359 = load i32, i32* %eax.global-to-local, align 4
  %v8_31359 = and i32 %v7_31359, -256
  %v9_31359 = or i32 %v6_31359, %v8_31359
  store i32 %v9_31359, i32* %eax.global-to-local, align 4
  %v1_31360 = add i32 %v0_31355, -36
  %v2_31360 = inttoptr i32 %v1_31360 to i32*
  %v3_31360 = load i32, i32* %v2_31360, align 4
  store i32 %v3_31360, i32* @eax, align 4
  %v1_31363 = add i32 %v0_31355, -12
  %v2_31363 = inttoptr i32 %v1_31363 to i32*
  %v3_31363 = load i32, i32* %v2_31363, align 4
  %v1_31366 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_31366 = icmp eq i32 %v1_31366, %v3_31363
  br i1 %v3_31366, label %bb, label %dec_label_pc_3136f

bb:                                               ; preds = %dec_label_pc_3133e
  %v1_3136d = call i32 @function_31374()
  store i32 %v1_3136d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3136f

dec_label_pc_3136f:                               ; preds = %bb, %dec_label_pc_3133e
  %v3_3136d = phi i32 [ %v1_3136d, %bb ], [ %v3_31360, %dec_label_pc_3133e ]
  ret i32 %v3_3136d

; uselistorder directives
  uselistorder i32 %v3_31355, { 1, 0 }
  uselistorder i32 %v0_31355, { 1, 0, 2 }
}

define i32 @function_31374() local_unnamed_addr {
dec_label_pc_31374:
  %v0_31375 = load i32, i32* @eax, align 4
  ret i32 %v0_31375
}

define i32 @_ZSt10_ConstructISt6vectorIhSaIhEES2_EvPT_RKT0_() local_unnamed_addr {
dec_label_pc_31376:
  %eax.global-to-local = alloca i32, align 4
  %v5_3137b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_3137b
}

define i32 @function_3137d() local_unnamed_addr {
dec_label_pc_3137d:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_31380 = load i32, i32* @ebp, align 4
  %v1_31380 = add i32 %v0_31380, 1
  store i32 %v1_31380, i32* %ebp.global-to-local, align 4
  %v0_31381 = load i32, i32* @ecx, align 4
  %v1_31381 = add i32 %v0_31381, 1166791749
  %v2_31381 = inttoptr i32 %v1_31381 to i8*
  %v3_31381 = load i8, i8* %v2_31381, align 1
  %v5_31381 = trunc i32 %v0_31381 to i8
  %v6_31381 = or i8 %v3_31381, %v5_31381
  store i8 %v6_31381, i8* %v2_31381, align 1
  %v0_31387 = load i32, i32* @eax, align 4
  %v2_31387 = or i32 %v0_31387, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i32 %v2_31387, i32* %eax.global-to-local, align 4
  %v0_31389 = load i32, i32* %ebp.global-to-local, align 4
  %v1_31389 = add i32 %v0_31389, 1
  store i32 %v1_31389, i32* @ebp, align 4
  %v1_3138a = add i32 %v0_31389, -94
  %v2_3138a = inttoptr i32 %v1_3138a to i8*
  %v3_3138a = load i8, i8* %v2_3138a, align 1
  %v5_3138a = mul i8 %v3_3138a, 2
  store i8 %v5_3138a, i8* %v2_3138a, align 1
  %v16_3138a = icmp slt i8 %v3_3138a, 0
  %v0_3138d = load i32, i32* %eax.global-to-local, align 4
  %v1_3138d = trunc i32 %v0_3138d to i8
  %v3_3138d = zext i1 %v16_3138a to i8
  %v4_3138d = add i8 %v1_3138d, %v3_3138d
  %v22_3138d = zext i8 %v4_3138d to i32
  %v24_3138d = and i32 %v0_3138d, -256
  %v25_3138d = or i32 %v22_3138d, %v24_3138d
  store i32 %v25_3138d, i32* %eax.global-to-local, align 4
  %v1_3138f = inttoptr i32 %v25_3138d to i8*
  %v2_3138f = load i8, i8* %v1_3138f, align 1
  %v5_3138f = add i8 %v2_3138f, %v4_3138d
  store i8 %v5_3138f, i8* %v1_3138f, align 1
  %v0_31391 = load i32, i32* %eax.global-to-local, align 4
  %v1_31391 = load i32, i32* @ebp, align 4
  %v2_31391 = add i32 %v1_31391, -28
  %v3_31391 = inttoptr i32 %v2_31391 to i32*
  store i32 %v0_31391, i32* %v3_31391, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_31396 = load i32, i32* @ebp, align 4
  %v1_31396 = add i32 %v0_31396, -44
  %v2_31396 = inttoptr i32 %v1_31396 to i32*
  %v3_31396 = load i32, i32* %v2_31396, align 4
  %v2_313a4 = call i32 @unknown_3a262(i32 12, i32 %v3_31396)
  store i32 %v2_313a4, i32* %eax.global-to-local, align 4
  %v1_313ab = icmp eq i32 %v2_313a4, 0
  br i1 %v1_313ab, label %bb, label %dec_label_pc_313af

bb:                                               ; preds = %dec_label_pc_3137d
  %v1_313ad = call i32 @function_313d8()
  store i32 %v1_313ad, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_313af

dec_label_pc_313af:                               ; preds = %bb, %dec_label_pc_3137d
  %v0_313af = load i32, i32* @ebp, align 4
  %v1_313af = add i32 %v0_313af, -48
  %v2_313af = inttoptr i32 %v1_313af to i32*
  %v3_313af = load i32, i32* %v2_313af, align 4
  store i32 %v3_313af, i32* %eax.global-to-local, align 4
  %v2_313b9 = call i32 @unknown_47a6e(i32 %v2_313a4, i32 %v3_313af)
  store i32 %v2_313b9, i32* %eax.global-to-local, align 4
  %v0_313be = call i32 @function_313d8()
  store i32 %v0_313be, i32* %eax.global-to-local, align 4
  ret i32 %v0_313be

; uselistorder directives
  uselistorder i8 %v3_3138a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 ()* @function_313d8, { 1, 0 }
}

define i32 @function_313d2() local_unnamed_addr {
dec_label_pc_313d2:
  %v0_313d2 = load i32, i32* @eax, align 4
  %v11_313d2 = and i32 %v0_313d2, -24
  ret i32 %v11_313d2
}

define i32 @function_313d8() local_unnamed_addr {
dec_label_pc_313d8:
  %v0_313d8 = load i32, i32* @ebp, align 4
  %v1_313d8 = add i32 %v0_313d8, -28
  %v2_313d8 = inttoptr i32 %v1_313d8 to i32*
  %v3_313d8 = load i32, i32* %v2_313d8, align 4
  %v1_313db = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_313db = xor i32 %v1_313db, %v3_313d8
  %v3_313db = icmp eq i32 %v2_313db, 0
  store i32 %v2_313db, i32* @eax, align 4
  br i1 %v3_313db, label %bb, label %dec_label_pc_313e4

bb:                                               ; preds = %dec_label_pc_313d8
  %v1_313e2 = call i32 @function_313e9()
  br label %dec_label_pc_313e4

dec_label_pc_313e4:                               ; preds = %bb, %dec_label_pc_313d8
  %v2_313e2 = phi i32 [ %v1_313e2, %bb ], [ %v2_313db, %dec_label_pc_313d8 ]
  ret i32 %v2_313e2
}

define i32 @function_313e9() local_unnamed_addr {
dec_label_pc_313e9:
  %v0_313f0 = load i32, i32* @eax, align 4
  ret i32 %v0_313f0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIhSaIhEEEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_313f2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31415

bb:                                               ; preds = %dec_label_pc_313f2
  %v2_31413 = call i32 @function_3141a(i32 %arg1)
  br label %dec_label_pc_31415

dec_label_pc_31415:                               ; preds = %bb, %dec_label_pc_313f2
  %v3_31413 = phi i32 [ %v2_31413, %bb ], [ 0, %dec_label_pc_313f2 ]
  ret i32 %v3_31413
}

define i32 @function_31418() local_unnamed_addr {
dec_label_pc_31418:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3141a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3141a:
  %v0_3141b = load i32, i32* @eax, align 4
  ret i32 %v0_3141b
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3141c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31442

bb:                                               ; preds = %dec_label_pc_3141c
  %v2_31440 = call i32 @function_31447(i32 %arg1)
  br label %dec_label_pc_31442

dec_label_pc_31442:                               ; preds = %bb, %dec_label_pc_3141c
  %v3_31440 = phi i32 [ %v2_31440, %bb ], [ %arg1, %dec_label_pc_3141c ]
  ret i32 %v3_31440
}

define i32 @function_31447(i32 %arg1) local_unnamed_addr {
dec_label_pc_31447:
  %v0_31448 = load i32, i32* @eax, align 4
  ret i32 %v0_31448
}

define i32 @_ZNSaISt6vectorIhSaIhEEEC1ISt13_Rb_tree_nodeIS1_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3144a:
  ret i32 %arg1
}

define i32 @function_31470() local_unnamed_addr {
dec_label_pc_31470:
  %v2_31470 = load i32, i32* @eax, align 4
  %v4_31470 = mul i32 %v2_31470, 2
  %v21_31470 = inttoptr i32 %v2_31470 to i32*
  store i32 %v4_31470, i32* %v21_31470, align 4
  %v0_31472 = load i32, i32* @ebp, align 4
  %v1_31472 = add i32 %v0_31472, -12
  %v2_31472 = inttoptr i32 %v1_31472 to i32*
  %v3_31472 = load i32, i32* %v2_31472, align 4
  %v1_31475 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31475 = xor i32 %v1_31475, %v3_31472
  %v3_31475 = icmp eq i32 %v2_31475, 0
  store i32 %v2_31475, i32* @eax, align 4
  br i1 %v3_31475, label %bb, label %dec_label_pc_3147e

bb:                                               ; preds = %dec_label_pc_31470
  %v1_3147c = call i32 @function_31483()
  br label %dec_label_pc_3147e

dec_label_pc_3147e:                               ; preds = %bb, %dec_label_pc_31470
  %v2_3147c = phi i32 [ %v1_3147c, %bb ], [ %v2_31475, %dec_label_pc_31470 ]
  ret i32 %v2_3147c

; uselistorder directives
  uselistorder i32 %v2_31470, { 1, 0 }
}

define i32 @function_31483() local_unnamed_addr {
dec_label_pc_31483:
  %v0_31484 = load i32, i32* @eax, align 4
  ret i32 %v0_31484
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIhSaIhEEEE10deallocateEPS5_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31486:
  ret i32 %arg2
}

define i32 @function_314c4() local_unnamed_addr {
dec_label_pc_314c4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_314c4 = load i32, i32* %ecx.global-to-local, align 4
  %v1_314c4 = add i32 %v0_314c4, -1
  store i32 %v1_314c4, i32* %ecx.global-to-local, align 4
  %v0_314c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_314c6
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_314c8:
  %v3_314f5 = call i32 @unknown_65f9a(i32 %arg1, i32 1, i32 0)
  store i32 %v3_314f5, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31506

bb:                                               ; preds = %dec_label_pc_314c8
  %v1_31504 = call i32 @function_3150b()
  br label %dec_label_pc_31506

dec_label_pc_31506:                               ; preds = %bb, %dec_label_pc_314c8
  %v2_31504 = phi i32 [ %v1_31504, %bb ], [ %v3_314f5, %dec_label_pc_314c8 ]
  ret i32 %v2_31504
}

define i32 @function_3150b() local_unnamed_addr {
dec_label_pc_3150b:
  %v0_3150c = load i32, i32* @eax, align 4
  ret i32 %v0_3150c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES5_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3150e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31531

bb:                                               ; preds = %dec_label_pc_3150e
  %v2_3152f = call i32 @function_31536(i32 %arg1)
  br label %dec_label_pc_31531

dec_label_pc_31531:                               ; preds = %bb, %dec_label_pc_3150e
  %v3_3152f = phi i32 [ %v2_3152f, %bb ], [ 0, %dec_label_pc_3150e ]
  ret i32 %v3_3152f
}

define i32 @function_31536(i32 %arg1) local_unnamed_addr {
dec_label_pc_31536:
  %v0_31537 = load i32, i32* @eax, align 4
  ret i32 %v0_31537
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE21_M_get_Node_allocatorEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31538:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3155e

bb:                                               ; preds = %dec_label_pc_31538
  %v2_3155c = call i32 @function_31563(i32 %arg1)
  br label %dec_label_pc_3155e

dec_label_pc_3155e:                               ; preds = %bb, %dec_label_pc_31538
  %v3_3155c = phi i32 [ %v2_3155c, %bb ], [ %arg1, %dec_label_pc_31538 ]
  ret i32 %v3_3155c
}

define i32 @function_31563(i32 %arg1) local_unnamed_addr {
dec_label_pc_31563:
  %v0_31564 = load i32, i32* @eax, align 4
  ret i32 %v0_31564
}

define i32 @_ZNSaISt4pairIKSt6vectorIhSaIhEES2_EEC1ISt13_Rb_tree_nodeIS4_EEERKSaIT_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31566:
  %v1_31589 = call i32 @unknown_660a4(i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3159a

bb:                                               ; preds = %dec_label_pc_31566
  %v1_31598 = call i32 @function_3159f()
  br label %dec_label_pc_3159a

dec_label_pc_3159a:                               ; preds = %bb, %dec_label_pc_31566
  %v2_31598 = phi i32 [ %v1_31598, %bb ], [ 0, %dec_label_pc_31566 ]
  ret i32 %v2_31598
}

define i32 @function_3159f() local_unnamed_addr {
dec_label_pc_3159f:
  %v0_315a0 = load i32, i32* @eax, align 4
  ret i32 %v0_315a0
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSt6vectorIhSaIhEES4_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_315a2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_315c5

bb:                                               ; preds = %dec_label_pc_315a2
  %v2_315c3 = call i32 @function_315ca(i32 %arg1)
  br label %dec_label_pc_315c5

dec_label_pc_315c5:                               ; preds = %bb, %dec_label_pc_315a2
  %v3_315c3 = phi i32 [ %v2_315c3, %bb ], [ 0, %dec_label_pc_315a2 ]
  ret i32 %v3_315c3
}

define i32 @function_315ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_315ca:
  %v0_315cb = load i32, i32* @eax, align 4
  ret i32 %v0_315cb
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES5_EEE10deallocateEPS8_j(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_315cc:
  ret i32 %arg2
}

define i32 @function_315fa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_315fa:
  %v0_315fa = load i32, i32* @ebp, align 4
  %v1_315fa = add i32 %v0_315fa, -12
  %v2_315fa = inttoptr i32 %v1_315fa to i32*
  %v3_315fa = load i32, i32* %v2_315fa, align 4
  %v1_315fd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_315fd = xor i32 %v1_315fd, %v3_315fa
  %v3_315fd = icmp eq i32 %v2_315fd, 0
  store i32 %v2_315fd, i32* @eax, align 4
  br i1 %v3_315fd, label %bb, label %dec_label_pc_31606

bb:                                               ; preds = %dec_label_pc_315fa
  %v1_31604 = call i32 @function_3160b()
  br label %dec_label_pc_31606

dec_label_pc_31606:                               ; preds = %bb, %dec_label_pc_315fa
  %v2_31604 = phi i32 [ %v1_31604, %bb ], [ %v2_315fd, %dec_label_pc_315fa ]
  ret i32 %v2_31604
}

define i32 @function_3160b() local_unnamed_addr {
dec_label_pc_3160b:
  %v0_3160c = load i32, i32* @eax, align 4
  ret i32 %v0_3160c
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3160e:
  %v1_3162e = add i32 %arg2, 12
  %v2_3162e = inttoptr i32 %v1_3162e to i32*
  %v3_3162e = load i32, i32* %v2_3162e, align 4
  %v2_3163b = call i32 @unknown_66176(i32 %arg1, i32 %v3_3162e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3164f

bb:                                               ; preds = %dec_label_pc_3160e
  %v1_3164d = call i32 @function_31654()
  br label %dec_label_pc_3164f

dec_label_pc_3164f:                               ; preds = %bb, %dec_label_pc_3160e
  %v2_3164d = phi i32 [ %v1_3164d, %bb ], [ %arg1, %dec_label_pc_3160e ]
  ret i32 %v2_3164d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_31654() local_unnamed_addr {
dec_label_pc_31654:
  %v0_31655 = load i32, i32* @eax, align 4
  ret i32 %v0_31655
}

define i32 @_ZNKSt8_Rb_treeISt6vectorIhSaIhEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE3endEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31658:
  %v1_31678 = add i32 %arg2, 4
  %v2_31685 = call i32 @unknown_661c0(i32 %arg1, i32 %v1_31678)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31699

bb:                                               ; preds = %dec_label_pc_31658
  %v1_31697 = call i32 @function_3169e()
  br label %dec_label_pc_31699

dec_label_pc_31699:                               ; preds = %bb, %dec_label_pc_31658
  %v2_31697 = phi i32 [ %v1_31697, %bb ], [ %arg1, %dec_label_pc_31658 ]
  ret i32 %v2_31697

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_3169e() local_unnamed_addr {
dec_label_pc_3169e:
  %v0_3169f = load i32, i32* @eax, align 4
  ret i32 %v0_3169f
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_316a2:
  %v1_316bc = add i32 %arg1, 16
  ret i32 %v1_316bc
}

define i32 @function_316c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_316c4:
  %v0_316c4 = load i32, i32* @eax, align 4
  %v1_316c4 = load i1, i1* @cf, align 1
  %v2_316c4 = zext i1 %v1_316c4 to i32
  %v3_316c4 = add i32 %v0_316c4, 20
  %v4_316c4 = add i32 %v3_316c4, %v2_316c4
  %v14_316c4 = icmp eq i32 %v4_316c4, 0
  store i32 %v4_316c4, i32* @eax, align 4
  br i1 %v14_316c4, label %bb, label %dec_label_pc_316cb

bb:                                               ; preds = %dec_label_pc_316c4
  %v1_316c9 = call i32 @function_316d0()
  br label %dec_label_pc_316cb

dec_label_pc_316cb:                               ; preds = %bb, %dec_label_pc_316c4
  %v2_316c9 = phi i32 [ %v1_316c9, %bb ], [ %v4_316c4, %dec_label_pc_316c4 ]
  ret i32 %v2_316c9
}

define i32 @function_316d0() local_unnamed_addr {
dec_label_pc_316d0:
  %v0_316d1 = load i32, i32* @eax, align 4
  ret i32 %v0_316d1
}

define i32 @_ZSt29__lexicographical_compare_auxIPKhS1_EbT_S2_T0_S3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_316d2:
  ret i32 %arg4
}

define i32 @function_316f0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_316f0:
  %v0_316f0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_316f6 = load i32, i32* @ebp, align 4
  %v2_316f6 = add i32 %v1_316f6, -12
  %v3_316f6 = inttoptr i32 %v2_316f6 to i32*
  store i32 %v0_316f0, i32* %v3_316f6, align 4
  %v0_316fb = load i32, i32* @ebp, align 4
  %v1_316fb = add i32 %v0_316fb, -13
  %v2_316fb = inttoptr i32 %v1_316fb to i8*
  store i8 1, i8* %v2_316fb, align 1
  %v0_316ff = load i32, i32* @ebp, align 4
  %v1_316ff = add i32 %v0_316ff, -40
  %v2_316ff = inttoptr i32 %v1_316ff to i32*
  %v3_316ff = load i32, i32* %v2_316ff, align 4
  %v1_31706 = add i32 %v0_316ff, -36
  %v2_31706 = inttoptr i32 %v1_31706 to i32*
  %v3_31706 = load i32, i32* %v2_31706, align 4
  %v1_3170d = add i32 %v0_316ff, -32
  %v2_3170d = inttoptr i32 %v1_3170d to i32*
  %v3_3170d = load i32, i32* %v2_3170d, align 4
  %v1_31714 = add i32 %v0_316ff, -28
  %v2_31714 = inttoptr i32 %v1_31714 to i32*
  %v3_31714 = load i32, i32* %v2_31714, align 4
  %v4_3171a = call i32 @unknown_66272(i32 %v3_31714, i32 %v3_3170d, i32 %v3_31706, i32 %v3_316ff)
  store i32 %v4_3171a, i32* @eax, align 4
  %v0_3171f = load i32, i32* @ebp, align 4
  %v1_3171f = add i32 %v0_3171f, -12
  %v2_3171f = inttoptr i32 %v1_3171f to i32*
  %v3_3171f = load i32, i32* %v2_3171f, align 4
  %v1_31722 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_31722 = icmp eq i32 %v1_31722, %v3_3171f
  br i1 %v3_31722, label %bb, label %dec_label_pc_3172b

bb:                                               ; preds = %dec_label_pc_316f0
  %v1_31729 = call i32 @function_31730()
  br label %dec_label_pc_3172b

dec_label_pc_3172b:                               ; preds = %bb, %dec_label_pc_316f0
  %v2_31729 = phi i32 [ %v1_31729, %bb ], [ %v4_3171a, %dec_label_pc_316f0 ]
  ret i32 %v2_31729

; uselistorder directives
  uselistorder i32 %v0_316ff, { 1, 0, 2, 3 }
}

define i32 @function_31730() local_unnamed_addr {
dec_label_pc_31730:
  %v0_31731 = load i32, i32* @eax, align 4
  ret i32 %v0_31731
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE14_M_create_nodeERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31732:
  %stack_var_-17 = alloca i32, align 4
  %v1_31756 = call i32 @unknown_66372(i32 %arg1)
  %v1_31761 = add i32 %v1_31756, 16
  %v1_31767 = call i32 @unknown_5e947(i32 %v1_31761)
  %v2_3176e = ptrtoint i32* %stack_var_-17 to i32
  %v2_3177b = call i32 @unknown_5e8c2(i32 %v2_3176e, i32 %arg1)
  %v3_31794 = call i32 @unknown_66430(i32 %v2_3176e, i32 %v1_31767, i32 %arg2)
  %v1_3179f = call i32 @unknown_5e912(i32 %v2_3176e)
  store i32 %v1_31756, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_317b3

bb:                                               ; preds = %dec_label_pc_31732
  %v1_317b1 = call i32 @function_317f9()
  store i32 %v1_317b1, i32* @eax, align 4
  br label %dec_label_pc_317b3

dec_label_pc_317b3:                               ; preds = %bb, %dec_label_pc_31732
  %v0_317b3 = call i32 @function_317f4()
  ret i32 %v0_317b3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_317b6() local_unnamed_addr {
dec_label_pc_317b6:
  %eax.global-to-local = alloca i32, align 4
  %v0_317b6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_317b6
}

define i32 @function_317b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_317b8:
  %v0_317b8 = load i32, i32* @ebp, align 4
  %v1_317b8 = add i32 %v0_317b8, 1
  store i32 %v1_317b8, i32* @ebp, align 4
  %v0_317b9 = load i32, i32* @eax, align 4
  %v1_317bd = call i32 @unknown_5e912(i32 %v0_317b9)
  %v0_317c2 = load i32, i32* @ebx, align 4
  ret i32 %v0_317c2
}

define i32 @function_317e4() local_unnamed_addr {
dec_label_pc_317e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_317e4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_317e4
}

define i32 @function_317f4() local_unnamed_addr {
dec_label_pc_317f4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_317f9() local_unnamed_addr {
dec_label_pc_317f9:
  %v0_317fd = load i32, i32* @eax, align 4
  ret i32 %v0_317fd
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE5beginEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_317fe:
  %v1_3181e = add i32 %arg2, 12
  %v2_3181e = inttoptr i32 %v1_3181e to i32*
  %v3_3181e = load i32, i32* %v2_3181e, align 4
  %v2_3182b = call i32 @unknown_5edd2(i32 %arg1, i32 %v3_3181e)
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3183f

bb:                                               ; preds = %dec_label_pc_317fe
  %v1_3183d = call i32 @function_31844()
  br label %dec_label_pc_3183f

dec_label_pc_3183f:                               ; preds = %bb, %dec_label_pc_317fe
  %v2_3183d = phi i32 [ %v1_3183d, %bb ], [ %arg1, %dec_label_pc_317fe ]
  ret i32 %v2_3183d

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_31844() local_unnamed_addr {
dec_label_pc_31844:
  %v0_31845 = load i32, i32* @eax, align 4
  ret i32 %v0_31845
}

define i32 @_ZNSt4pairISt17_Rb_tree_iteratorIS_IKSt6vectorIhSaIhEES3_EEbEC1ERKS6_RKb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31848:
  %tmp104 = inttoptr i32 %arg3 to i8*
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v1_31871 = inttoptr i32 %arg2 to i32*
  %v2_31871 = load i32, i32* %v1_31871, align 4
  store i32 %v2_31871, i32* %arg1, align 4
  %v2_31878 = load i8, i8* %tmp104, align 1
  %v3_3187e = add i32 %tmp109, 4
  %v4_3187e = inttoptr i32 %v3_3187e to i8*
  store i8 %v2_31878, i8* %v4_3187e, align 1
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3188d

bb:                                               ; preds = %dec_label_pc_31848
  %v5_3188b = call i32 @function_31892(i32 %arg3, i32 %arg2, i32 %tmp109)
  br label %dec_label_pc_3188d

dec_label_pc_3188d:                               ; preds = %bb, %dec_label_pc_31848
  %v6_3188b = phi i32 [ %v5_3188b, %bb ], [ 0, %dec_label_pc_31848 ]
  ret i32 %v6_3188b
}

define i32 @function_31892(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31892:
  %v0_31893 = load i32, i32* @eax, align 4
  ret i32 %v0_31893
}

define i32 @_ZNSt17_Rb_tree_iteratorISt4pairIKSt6vectorIhSaIhEES3_EEmmEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_31894:
  %v2_318ae = load i32, i32* %arg1, align 4
  ret i32 %v2_318ae
}

define i32 @function_318d0() local_unnamed_addr {
dec_label_pc_318d0:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_318d0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_318d0 = add i32 %v0_318d0, -1
  store i32 %v1_318d0, i32* %ecx.global-to-local, align 4
  %v0_318d2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_318d2
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14invoke_visitorIK14CScriptVisitorEEPKvNS_7variantISC_SE_SG_NS1_5void_ESV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_SV_E18has_fallback_type_EEENT1_11result_typeEiiRSY_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_318d3:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_31923, label %bb

bb:                                               ; preds = %dec_label_pc_318d3
  %sext = mul i32 %arg6, 16777216
  %v12_3191d = sdiv i32 %sext, 16777216
  %v13_3191d = sext i8 %arg5 to i32
  %v14_3191d = call i32 @function_31d5c(i32 %arg8, i32 %arg7, i32 %v12_3191d, i32 %v13_3191d, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_31923

dec_label_pc_31923:                               ; preds = %dec_label_pc_318d3, %bb
  %v2_31926 = mul i32 %arg2, 4
  %v1_31929 = add i32 %v2_31926, ptrtoint (i32* @global_var_31db0.2297 to i32)
  %v1_3192e = inttoptr i32 %v1_31929 to i32*
  %v2_3192e = load i32, i32* %v1_3192e, align 4
  ret i32 %v2_3192e

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_31923, { 1, 0 }
}

define i32 @function_3195e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3195e:
  %v0_3195e = call i32 @unknown_66652()
  store i32 %v0_3195e, i32* @eax, align 4
  %v0_31963 = call i32 @function_31d94()
  ret i32 %v0_31963
}

define i32 @function_31968() local_unnamed_addr {
dec_label_pc_31968:
  %v0_31970 = load i32, i32* @ebp, align 4
  %v1_31970 = add i32 %v0_31970, -82
  %v2_31970 = inttoptr i32 %v1_31970 to i8*
  %v3_31970 = load i8, i8* %v2_31970, align 1
  %v1_31980 = add i32 %v0_31970, -56
  %v2_31980 = inttoptr i32 %v1_31980 to i32*
  %v3_31980 = load i32, i32* %v2_31980, align 4
  %v1_31987 = add i32 %v0_31970, -52
  %v2_31987 = inttoptr i32 %v1_31987 to i32*
  %v3_31987 = load i32, i32* %v2_31987, align 4
  %v1_3198e = add i32 %v0_31970, -44
  %v2_3198e = inttoptr i32 %v1_3198e to i32*
  %v3_3198e = load i32, i32* %v2_3198e, align 4
  %v6_31994 = sext i8 %v3_31970 to i32
  %v7_31994 = call i32 @unknown_666bf(i32 %v3_3198e, i32 %v3_31987, i32 %v3_31980, i32 0, i32 %v6_31994, i32 1)
  store i32 %v7_31994, i32* @eax, align 4
  %v0_31999 = call i32 @function_31d94()
  ret i32 %v0_31999

; uselistorder directives
  uselistorder i32 %v0_31970, { 0, 2, 1, 3 }
}

define i32 @function_3199e() local_unnamed_addr {
dec_label_pc_3199e:
  %v0_319a6 = load i32, i32* @ebp, align 4
  %v1_319a6 = add i32 %v0_319a6, -81
  %v2_319a6 = inttoptr i32 %v1_319a6 to i8*
  %v3_319a6 = load i8, i8* %v2_319a6, align 1
  %v1_319b6 = add i32 %v0_319a6, -56
  %v2_319b6 = inttoptr i32 %v1_319b6 to i32*
  %v3_319b6 = load i32, i32* %v2_319b6, align 4
  %v1_319bd = add i32 %v0_319a6, -52
  %v2_319bd = inttoptr i32 %v1_319bd to i32*
  %v3_319bd = load i32, i32* %v2_319bd, align 4
  %v1_319c4 = add i32 %v0_319a6, -44
  %v2_319c4 = inttoptr i32 %v1_319c4 to i32*
  %v3_319c4 = load i32, i32* %v2_319c4, align 4
  %v6_319ca = sext i8 %v3_319a6 to i32
  %v7_319ca = call i32 @unknown_6672c(i32 %v3_319c4, i32 %v3_319bd, i32 %v3_319b6, i32 0, i32 %v6_319ca, i32 1)
  store i32 %v7_319ca, i32* @eax, align 4
  %v0_319cf = call i32 @function_31d94()
  ret i32 %v0_319cf

; uselistorder directives
  uselistorder i32 %v0_319a6, { 0, 2, 1, 3 }
}

define i32 @function_319e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_319e8:
  %v2_319e8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_319e8 = load i32, i32* @eax, align 4
  %v4_319e8 = trunc i32 %v3_319e8 to i8
  %v5_319e8 = add i8 %v4_319e8, %v2_319e8
  %v21_319e8 = inttoptr i32 %v3_319e8 to i8*
  store i8 %v5_319e8, i8* %v21_319e8, align 1
  %v2_319ea = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_319ea = load i32, i32* @eax, align 4
  %v4_319ea = trunc i32 %v3_319ea to i8
  %v5_319ea = add i8 %v4_319ea, %v2_319ea
  %v21_319ea = inttoptr i32 %v3_319ea to i8*
  store i8 %v5_319ea, i8* %v21_319ea, align 1
  %v0_319ec = load i32, i32* @ebp, align 4
  %v1_319ec = add i32 %v0_319ec, -56
  %v2_319ec = inttoptr i32 %v1_319ec to i32*
  %v3_319ec = load i32, i32* %v2_319ec, align 4
  %v1_319f3 = add i32 %v0_319ec, -52
  %v2_319f3 = inttoptr i32 %v1_319f3 to i32*
  %v3_319f3 = load i32, i32* %v2_319f3, align 4
  %v1_319fa = add i32 %v0_319ec, -44
  %v2_319fa = inttoptr i32 %v1_319fa to i32*
  %v3_319fa = load i32, i32* %v2_319fa, align 4
  %v3_31a00 = call i32 @unknown_66799(i32 %v3_319fa, i32 %v3_319f3, i32 %v3_319ec)
  store i32 %v3_31a00, i32* @eax, align 4
  %v0_31a05 = call i32 @function_31d94()
  ret i32 %v0_31a05
}

define i32 @function_31a0a() local_unnamed_addr {
dec_label_pc_31a0a:
  %v0_31a12 = load i32, i32* @ebp, align 4
  %v1_31a22 = add i32 %v0_31a12, -56
  %v2_31a22 = inttoptr i32 %v1_31a22 to i32*
  %v3_31a22 = load i32, i32* %v2_31a22, align 4
  %v1_31a29 = add i32 %v0_31a12, -52
  %v2_31a29 = inttoptr i32 %v1_31a29 to i32*
  %v3_31a29 = load i32, i32* %v2_31a29, align 4
  %v1_31a30 = add i32 %v0_31a12, -44
  %v2_31a30 = inttoptr i32 %v1_31a30 to i32*
  %v3_31a30 = load i32, i32* %v2_31a30, align 4
  %v3_31a36 = call i32 @unknown_66799(i32 %v3_31a30, i32 %v3_31a29, i32 %v3_31a22)
  store i32 %v3_31a36, i32* @eax, align 4
  %v0_31a3b = call i32 @function_31d94()
  ret i32 %v0_31a3b

; uselistorder directives
  uselistorder i32 %v0_31a12, { 1, 0, 2 }
}

define i32 @function_31a40() local_unnamed_addr {
dec_label_pc_31a40:
  %v0_31a48 = load i32, i32* @ebp, align 4
  %v1_31a58 = add i32 %v0_31a48, -56
  %v2_31a58 = inttoptr i32 %v1_31a58 to i32*
  %v3_31a58 = load i32, i32* %v2_31a58, align 4
  %v1_31a5f = add i32 %v0_31a48, -52
  %v2_31a5f = inttoptr i32 %v1_31a5f to i32*
  %v3_31a5f = load i32, i32* %v2_31a5f, align 4
  %v1_31a66 = add i32 %v0_31a48, -44
  %v2_31a66 = inttoptr i32 %v1_31a66 to i32*
  %v3_31a66 = load i32, i32* %v2_31a66, align 4
  %v3_31a6c = call i32 @unknown_66799(i32 %v3_31a66, i32 %v3_31a5f, i32 %v3_31a58)
  store i32 %v3_31a6c, i32* @eax, align 4
  %v0_31a71 = call i32 @function_31d94()
  ret i32 %v0_31a71

; uselistorder directives
  uselistorder i32 %v0_31a48, { 1, 0, 2 }
}

define i32 @function_31a76() local_unnamed_addr {
dec_label_pc_31a76:
  %v0_31a7e = load i32, i32* @ebp, align 4
  %v1_31a8e = add i32 %v0_31a7e, -56
  %v2_31a8e = inttoptr i32 %v1_31a8e to i32*
  %v3_31a8e = load i32, i32* %v2_31a8e, align 4
  %v1_31a95 = add i32 %v0_31a7e, -52
  %v2_31a95 = inttoptr i32 %v1_31a95 to i32*
  %v3_31a95 = load i32, i32* %v2_31a95, align 4
  %v1_31a9c = add i32 %v0_31a7e, -44
  %v2_31a9c = inttoptr i32 %v1_31a9c to i32*
  %v3_31a9c = load i32, i32* %v2_31a9c, align 4
  %v3_31aa2 = call i32 @unknown_66799(i32 %v3_31a9c, i32 %v3_31a95, i32 %v3_31a8e)
  store i32 %v3_31aa2, i32* @eax, align 4
  %v0_31aa7 = call i32 @function_31d94()
  ret i32 %v0_31aa7

; uselistorder directives
  uselistorder i32 %v0_31a7e, { 1, 0, 2 }
}

define i32 @function_31aac() local_unnamed_addr {
dec_label_pc_31aac:
  %v0_31ab4 = load i32, i32* @ebp, align 4
  %v1_31ac4 = add i32 %v0_31ab4, -56
  %v2_31ac4 = inttoptr i32 %v1_31ac4 to i32*
  %v3_31ac4 = load i32, i32* %v2_31ac4, align 4
  %v1_31acb = add i32 %v0_31ab4, -52
  %v2_31acb = inttoptr i32 %v1_31acb to i32*
  %v3_31acb = load i32, i32* %v2_31acb, align 4
  %v1_31ad2 = add i32 %v0_31ab4, -44
  %v2_31ad2 = inttoptr i32 %v1_31ad2 to i32*
  %v3_31ad2 = load i32, i32* %v2_31ad2, align 4
  %v3_31ad8 = call i32 @unknown_66799(i32 %v3_31ad2, i32 %v3_31acb, i32 %v3_31ac4)
  store i32 %v3_31ad8, i32* @eax, align 4
  %v0_31add = call i32 @function_31d94()
  ret i32 %v0_31add

; uselistorder directives
  uselistorder i32 %v0_31ab4, { 1, 0, 2 }
}

define i32 @function_31ae2() local_unnamed_addr {
dec_label_pc_31ae2:
  %v0_31aea = load i32, i32* @ebp, align 4
  %v1_31afa = add i32 %v0_31aea, -56
  %v2_31afa = inttoptr i32 %v1_31afa to i32*
  %v3_31afa = load i32, i32* %v2_31afa, align 4
  %v1_31b01 = add i32 %v0_31aea, -52
  %v2_31b01 = inttoptr i32 %v1_31b01 to i32*
  %v3_31b01 = load i32, i32* %v2_31b01, align 4
  %v1_31b08 = add i32 %v0_31aea, -44
  %v2_31b08 = inttoptr i32 %v1_31b08 to i32*
  %v3_31b08 = load i32, i32* %v2_31b08, align 4
  %v3_31b0e = call i32 @unknown_66799(i32 %v3_31b08, i32 %v3_31b01, i32 %v3_31afa)
  store i32 %v3_31b0e, i32* @eax, align 4
  %v0_31b13 = call i32 @function_31d94()
  ret i32 %v0_31b13

; uselistorder directives
  uselistorder i32 %v0_31aea, { 1, 0, 2 }
}

define i32 @function_31b18() local_unnamed_addr {
dec_label_pc_31b18:
  %v0_31b20 = load i32, i32* @ebp, align 4
  %v1_31b30 = add i32 %v0_31b20, -56
  %v2_31b30 = inttoptr i32 %v1_31b30 to i32*
  %v3_31b30 = load i32, i32* %v2_31b30, align 4
  %v1_31b37 = add i32 %v0_31b20, -52
  %v2_31b37 = inttoptr i32 %v1_31b37 to i32*
  %v3_31b37 = load i32, i32* %v2_31b37, align 4
  %v1_31b3e = add i32 %v0_31b20, -44
  %v2_31b3e = inttoptr i32 %v1_31b3e to i32*
  %v3_31b3e = load i32, i32* %v2_31b3e, align 4
  %v3_31b44 = call i32 @unknown_66799(i32 %v3_31b3e, i32 %v3_31b37, i32 %v3_31b30)
  store i32 %v3_31b44, i32* @eax, align 4
  %v0_31b49 = call i32 @function_31d94()
  ret i32 %v0_31b49

; uselistorder directives
  uselistorder i32 %v0_31b20, { 1, 0, 2 }
}

define i32 @function_31b54(i32 %arg1) local_unnamed_addr {
dec_label_pc_31b54:
  %v2_31b54 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_31b54 = load i32, i32* @eax, align 4
  %v4_31b54 = trunc i32 %v3_31b54 to i8
  %v5_31b54 = add i8 %v4_31b54, %v2_31b54
  %v21_31b54 = inttoptr i32 %v3_31b54 to i8*
  store i8 %v5_31b54, i8* %v21_31b54, align 1
  %v0_31b56 = load i32, i32* @ebp, align 4
  %v1_31b66 = add i32 %v0_31b56, -56
  %v2_31b66 = inttoptr i32 %v1_31b66 to i32*
  %v3_31b66 = load i32, i32* %v2_31b66, align 4
  %v1_31b6d = add i32 %v0_31b56, -52
  %v2_31b6d = inttoptr i32 %v1_31b6d to i32*
  %v3_31b6d = load i32, i32* %v2_31b6d, align 4
  %v1_31b74 = add i32 %v0_31b56, -44
  %v2_31b74 = inttoptr i32 %v1_31b74 to i32*
  %v3_31b74 = load i32, i32* %v2_31b74, align 4
  %v3_31b7a = call i32 @unknown_66799(i32 %v3_31b74, i32 %v3_31b6d, i32 %v3_31b66)
  store i32 %v3_31b7a, i32* @eax, align 4
  %v0_31b7f = call i32 @function_31d94()
  ret i32 %v0_31b7f

; uselistorder directives
  uselistorder i32 %v0_31b56, { 1, 0, 2 }
}

define i32 @function_31bb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_31bb0:
  %v3_31bb0 = call i32 @unknown_66799(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  store i32 %v3_31bb0, i32* @eax, align 4
  %v0_31bb5 = call i32 @function_31d94()
  ret i32 %v0_31bb5
}

define i32 @function_31bba() local_unnamed_addr {
dec_label_pc_31bba:
  %v0_31bc2 = load i32, i32* @ebp, align 4
  %v1_31bd2 = add i32 %v0_31bc2, -56
  %v2_31bd2 = inttoptr i32 %v1_31bd2 to i32*
  %v3_31bd2 = load i32, i32* %v2_31bd2, align 4
  %v1_31bd9 = add i32 %v0_31bc2, -52
  %v2_31bd9 = inttoptr i32 %v1_31bd9 to i32*
  %v3_31bd9 = load i32, i32* %v2_31bd9, align 4
  %v1_31be0 = add i32 %v0_31bc2, -44
  %v2_31be0 = inttoptr i32 %v1_31be0 to i32*
  %v3_31be0 = load i32, i32* %v2_31be0, align 4
  %v3_31be6 = call i32 @unknown_66799(i32 %v3_31be0, i32 %v3_31bd9, i32 %v3_31bd2)
  store i32 %v3_31be6, i32* @eax, align 4
  %v0_31beb = call i32 @function_31d94()
  ret i32 %v0_31beb

; uselistorder directives
  uselistorder i32 %v0_31bc2, { 1, 0, 2 }
}

define i32 @function_31bf0() local_unnamed_addr {
dec_label_pc_31bf0:
  %v0_31bf8 = load i32, i32* @ebp, align 4
  %v1_31c08 = add i32 %v0_31bf8, -56
  %v2_31c08 = inttoptr i32 %v1_31c08 to i32*
  %v3_31c08 = load i32, i32* %v2_31c08, align 4
  %v1_31c0f = add i32 %v0_31bf8, -52
  %v2_31c0f = inttoptr i32 %v1_31c0f to i32*
  %v3_31c0f = load i32, i32* %v2_31c0f, align 4
  %v1_31c16 = add i32 %v0_31bf8, -44
  %v2_31c16 = inttoptr i32 %v1_31c16 to i32*
  %v3_31c16 = load i32, i32* %v2_31c16, align 4
  %v3_31c1c = call i32 @unknown_66799(i32 %v3_31c16, i32 %v3_31c0f, i32 %v3_31c08)
  store i32 %v3_31c1c, i32* @eax, align 4
  %v0_31c21 = call i32 @function_31d94()
  ret i32 %v0_31c21

; uselistorder directives
  uselistorder i32 %v0_31bf8, { 1, 0, 2 }
}

define i32 @function_31c30(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c30:
  %v0_31c30 = load i32, i32* @ebp, align 4
  %v1_31c3e = add i32 %v0_31c30, -56
  %v2_31c3e = inttoptr i32 %v1_31c3e to i32*
  %v3_31c3e = load i32, i32* %v2_31c3e, align 4
  %v1_31c45 = add i32 %v0_31c30, -52
  %v2_31c45 = inttoptr i32 %v1_31c45 to i32*
  %v3_31c45 = load i32, i32* %v2_31c45, align 4
  %v1_31c4c = add i32 %v0_31c30, -44
  %v2_31c4c = inttoptr i32 %v1_31c4c to i32*
  %v3_31c4c = load i32, i32* %v2_31c4c, align 4
  %v3_31c52 = call i32 @unknown_66799(i32 %v3_31c4c, i32 %v3_31c45, i32 %v3_31c3e)
  store i32 %v3_31c52, i32* @eax, align 4
  %v0_31c57 = call i32 @function_31d94()
  ret i32 %v0_31c57

; uselistorder directives
  uselistorder i32 %v0_31c30, { 1, 0, 2 }
}

define i32 @function_31c46(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c46:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31c8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31c8a:
  %v0_31c8b = load i32, i32* @eax, align 4
  %v4_31c8b = mul i32 %v0_31c8b, 2
  store i32 %v4_31c8b, i32* @eax, align 4
  %v0_31c8d = call i32 @function_31d94()
  ret i32 %v0_31c8d
}

define i32 @function_31c92() local_unnamed_addr {
dec_label_pc_31c92:
  %v0_31c9a = load i32, i32* @ebp, align 4
  %v1_31caa = add i32 %v0_31c9a, -56
  %v2_31caa = inttoptr i32 %v1_31caa to i32*
  %v3_31caa = load i32, i32* %v2_31caa, align 4
  %v1_31cb1 = add i32 %v0_31c9a, -52
  %v2_31cb1 = inttoptr i32 %v1_31cb1 to i32*
  %v3_31cb1 = load i32, i32* %v2_31cb1, align 4
  %v1_31cb8 = add i32 %v0_31c9a, -44
  %v2_31cb8 = inttoptr i32 %v1_31cb8 to i32*
  %v3_31cb8 = load i32, i32* %v2_31cb8, align 4
  %v3_31cbe = call i32 @unknown_66799(i32 %v3_31cb8, i32 %v3_31cb1, i32 %v3_31caa)
  store i32 %v3_31cbe, i32* @eax, align 4
  %v0_31cc3 = call i32 @function_31d94()
  ret i32 %v0_31cc3

; uselistorder directives
  uselistorder i32 %v0_31c9a, { 1, 0, 2 }
}

define i32 @function_31cfa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31cfa:
  %v2_31cfa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_31cfa = load i32, i32* @eax, align 4
  %v4_31cfa = trunc i32 %v3_31cfa to i8
  %v5_31cfa = add i8 %v4_31cfa, %v2_31cfa
  %v21_31cfa = inttoptr i32 %v3_31cfa to i8*
  store i8 %v5_31cfa, i8* %v21_31cfa, align 1
  %v0_31d12 = load i32, i32* @ebp, align 4
  %v1_31d12 = add i32 %v0_31d12, -56
  %v2_31d12 = inttoptr i32 %v1_31d12 to i32*
  %v3_31d12 = load i32, i32* %v2_31d12, align 4
  %v1_31d19 = add i32 %v0_31d12, -52
  %v2_31d19 = inttoptr i32 %v1_31d19 to i32*
  %v3_31d19 = load i32, i32* %v2_31d19, align 4
  %v1_31d20 = add i32 %v0_31d12, -44
  %v2_31d20 = inttoptr i32 %v1_31d20 to i32*
  %v3_31d20 = load i32, i32* %v2_31d20, align 4
  %v3_31d26 = call i32 @unknown_66799(i32 %v3_31d20, i32 %v3_31d19, i32 %v3_31d12)
  store i32 %v3_31d26, i32* @eax, align 4
  %v0_31d2b = call i32 @function_31d94()
  ret i32 %v0_31d2b
}

define i32 @function_31d2d() local_unnamed_addr {
dec_label_pc_31d2d:
  %v0_31d41 = load i32, i32* @ebp, align 4
  %v1_31d41 = add i32 %v0_31d41, -56
  %v2_31d41 = inttoptr i32 %v1_31d41 to i32*
  %v3_31d41 = load i32, i32* %v2_31d41, align 4
  %v1_31d48 = add i32 %v0_31d41, -52
  %v2_31d48 = inttoptr i32 %v1_31d48 to i32*
  %v3_31d48 = load i32, i32* %v2_31d48, align 4
  %v1_31d4f = add i32 %v0_31d41, -44
  %v2_31d4f = inttoptr i32 %v1_31d4f to i32*
  %v3_31d4f = load i32, i32* %v2_31d4f, align 4
  %v3_31d55 = call i32 @unknown_66799(i32 %v3_31d4f, i32 %v3_31d48, i32 %v3_31d41)
  store i32 %v3_31d55, i32* @eax, align 4
  %v0_31d5a = call i32 @function_31d94()
  ret i32 %v0_31d5a

; uselistorder directives
  uselistorder i32 ()* @function_31d94, { 18, 2, 17, 5, 1, 16, 15, 6, 0, 14, 13, 12, 11, 10, 9, 3, 8, 7, 4 }
  uselistorder i32 (i32, i32, i32)* @unknown_66799, { 14, 2, 13, 1, 12, 11, 4, 0, 10, 9, 8, 7, 6, 5, 3 }
}

define i32 @function_31d5c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_31d5c:
  %v0_31d74 = load i32, i32* @ebp, align 4
  %v1_31d82 = add i32 %v0_31d74, -48
  %v2_31d82 = inttoptr i32 %v1_31d82 to i32*
  %v3_31d82 = load i32, i32* %v2_31d82, align 4
  ret i32 %v3_31d82
}

define i32 @function_31d8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_31d8a:
  %v0_31d8a = load i32, i32* @ebp, align 4
  %v1_31d8a = add i32 %v0_31d8a, 1
  store i32 %v1_31d8a, i32* @ebp, align 4
  %v0_31d8f = call i32 @unknown_667f3()
  ret i32 %v0_31d8f
}

define i32 @function_31d94() local_unnamed_addr {
dec_label_pc_31d94:
  %v0_31d94 = load i32, i32* @ebp, align 4
  %v1_31d94 = add i32 %v0_31d94, -28
  %v2_31d94 = inttoptr i32 %v1_31d94 to i32*
  %v3_31d94 = load i32, i32* %v2_31d94, align 4
  %v1_31d97 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_31d97 = xor i32 %v1_31d97, %v3_31d94
  %v3_31d97 = icmp eq i32 %v2_31d97, 0
  store i32 %v2_31d97, i32* @edx, align 4
  br i1 %v3_31d97, label %bb, label %dec_label_pc_31d94.dec_label_pc_31da0_crit_edge

dec_label_pc_31d94.dec_label_pc_31da0_crit_edge:  ; preds = %dec_label_pc_31d94
  %v2_31d9e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_31da0

bb:                                               ; preds = %dec_label_pc_31d94
  %v1_31d9e = call i32 @function_31da5()
  br label %dec_label_pc_31da0

dec_label_pc_31da0:                               ; preds = %dec_label_pc_31d94.dec_label_pc_31da0_crit_edge, %bb
  %v2_31d9e = phi i32 [ %v2_31d9e.pre, %dec_label_pc_31d94.dec_label_pc_31da0_crit_edge ], [ %v1_31d9e, %bb ]
  ret i32 %v2_31d9e

; uselistorder directives
  uselistorder label %dec_label_pc_31da0, { 1, 0 }
}

define i32 @function_31da5() local_unnamed_addr {
dec_label_pc_31da5:
  %v0_31dac = load i32, i32* @eax, align 4
  ret i32 %v0_31dac
}

define i32 @function_31dcc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31dcc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_31dd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_31dd8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN9__gnu_cxx17__normal_iteratorIPK7CPubKeySt6vectorIS1_SaIS1_EEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31e00:
  %v1_31e20 = inttoptr i32 %arg2 to i32*
  %v2_31e20 = load i32, i32* %v1_31e20, align 4
  store i32 %v2_31e20, i32* %arg1, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31e33

bb:                                               ; preds = %dec_label_pc_31e00
  %tmp104 = ptrtoint i32* %arg1 to i32
  %v3_31e31 = call i32 @function_31e38(i32 %arg2, i32 %tmp104)
  br label %dec_label_pc_31e33

dec_label_pc_31e33:                               ; preds = %bb, %dec_label_pc_31e00
  %v4_31e31 = phi i32 [ %v3_31e31, %bb ], [ 0, %dec_label_pc_31e00 ]
  ret i32 %v4_31e31

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
}

define i32 @function_31e38(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31e38:
  %v0_31e39 = load i32, i32* @eax, align 4
  ret i32 %v0_31e39
}

define i32 @_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_31e3a:
  ret i32 %arg1
}

define i32 @function_31e9b() local_unnamed_addr {
dec_label_pc_31e9b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_31e9b = load i32, i32* %ecx.global-to-local, align 4
  %v1_31e9b = add i32 %v0_31e9b, -1
  store i32 %v1_31e9b, i32* %ecx.global-to-local, align 4
  %v0_31e9d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_31e9d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_31e9e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31ec1

bb:                                               ; preds = %dec_label_pc_31e9e
  %v2_31ebf = call i32 @function_31ec6(i32 %arg1)
  br label %dec_label_pc_31ec1

dec_label_pc_31ec1:                               ; preds = %bb, %dec_label_pc_31e9e
  %v3_31ebf = phi i32 [ %v2_31ebf, %bb ], [ 0, %dec_label_pc_31e9e ]
  ret i32 %v3_31ebf
}

define i32 @function_31ec6(i32 %arg1) local_unnamed_addr {
dec_label_pc_31ec6:
  %v0_31ec7 = load i32, i32* @eax, align 4
  ret i32 %v0_31ec7
}

define i32 @_ZSt6fill_nIPhjhET_S1_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31ec8:
  %v1_31ef1 = call i32 @unknown_5b0b2(i32 %arg1)
  %v3_31f07 = call i32 @unknown_66e4f(i32 %v1_31ef1, i32 %arg2, i32 %arg3)
  store i32 %v3_31f07, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31f18

bb:                                               ; preds = %dec_label_pc_31ec8
  %v1_31f16 = call i32 @function_31f1d()
  br label %dec_label_pc_31f18

dec_label_pc_31f18:                               ; preds = %bb, %dec_label_pc_31ec8
  %v2_31f16 = phi i32 [ %v1_31f16, %bb ], [ %v3_31f07, %dec_label_pc_31ec8 ]
  ret i32 %v2_31f16
}

define i32 @function_31f1d() local_unnamed_addr {
dec_label_pc_31f1d:
  %v0_31f1e = load i32, i32* @eax, align 4
  ret i32 %v0_31f1e
}

define i32 @_ZNSt8_Rb_treeIjSt4pairIKjiESt10_Select1stIS2_ESt4lessIjESaIS2_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_31f20:
  %v3_31f4d = call i32 @unknown_66f04(i32 %arg1, i32 1, i32 0)
  store i32 %v3_31f4d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31f5e

bb:                                               ; preds = %dec_label_pc_31f20
  %v1_31f5c = call i32 @function_31f63()
  br label %dec_label_pc_31f5e

dec_label_pc_31f5e:                               ; preds = %bb, %dec_label_pc_31f20
  %v2_31f5c = phi i32 [ %v1_31f5c, %bb ], [ %v3_31f4d, %dec_label_pc_31f20 ]
  ret i32 %v2_31f5c
}

define i32 @function_31f63() local_unnamed_addr {
dec_label_pc_31f63:
  %v0_31f64 = load i32, i32* @eax, align 4
  ret i32 %v0_31f64
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKjiEE9constructEPS3_RKS3_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_31f66:
  %edx.global-to-local = alloca i32, align 4
  %v2_31f97 = call i32 @unknown_3ae52(i32 8, i32 %arg2)
  %v1_31f9e = icmp eq i32 %v2_31f97, 0
  br i1 %v1_31f9e, label %dec_label_pc_31faf, label %dec_label_pc_31fa2

dec_label_pc_31fa2:                               ; preds = %dec_label_pc_31f66
  %tmp102 = ptrtoint i32* %arg3 to i32
  %v1_31fa5 = add i32 %tmp102, 4
  %v2_31fa5 = inttoptr i32 %v1_31fa5 to i32*
  %v3_31fa5 = load i32, i32* %v2_31fa5, align 4
  store i32 %v3_31fa5, i32* %edx.global-to-local, align 4
  %v2_31fa8 = load i32, i32* %arg3, align 4
  %v2_31faa = inttoptr i32 %v2_31f97 to i32*
  store i32 %v2_31fa8, i32* %v2_31faa, align 4
  %v0_31fac = load i32, i32* %edx.global-to-local, align 4
  %v2_31fac = add i32 %v2_31f97, 4
  %v3_31fac = inttoptr i32 %v2_31fac to i32*
  store i32 %v0_31fac, i32* %v3_31fac, align 4
  br label %dec_label_pc_31faf

dec_label_pc_31faf:                               ; preds = %dec_label_pc_31fa2, %dec_label_pc_31f66
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_31fbb

bb:                                               ; preds = %dec_label_pc_31faf
  %v1_31fb9 = call i32 @function_31fc0()
  br label %dec_label_pc_31fbb

dec_label_pc_31fbb:                               ; preds = %bb, %dec_label_pc_31faf
  %v2_31fb9 = phi i32 [ %v1_31fb9, %bb ], [ 0, %dec_label_pc_31faf ]
  ret i32 %v2_31fb9
}

declare i32 @__stack_chk_fail.1324(i32) local_unnamed_addr

define i32 @function_31fc0() local_unnamed_addr {
dec_label_pc_31fc0:
  %v0_31fc1 = load i32, i32* @eax, align 4
  ret i32 %v0_31fc1
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIhEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_31fc2:
  %v2_31fed = sub i32 %arg2, %arg1
  %v12_31fed = icmp eq i32 %v2_31fed, 0
  br i1 %v12_31fed, label %bb, label %dec_label_pc_31ffa

bb:                                               ; preds = %dec_label_pc_31fc2
  %v4_31ff8 = call i32 @function_32018(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_31ffa

dec_label_pc_31ffa:                               ; preds = %bb, %dec_label_pc_31fc2
  %v4_31ffa = phi i32 [ %v4_31ff8, %bb ], [ %v2_31fed, %dec_label_pc_31fc2 ]
  ret i32 %v4_31ffa
}

define i32 @function_31ffe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_31ffe:
  %v0_31ffe = load i32, i32* @ebp, align 4
  %v1_31ffe = add i32 %v0_31ffe, 1
  store i32 %v1_31ffe, i32* @ebp, align 4
  %v15_31ffe = load i32, i32* @eax, align 4
  ret i32 %v15_31ffe
}

define i32 @function_32018(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32018:
  %v0_32018 = load i32, i32* @ebp, align 4
  %v1_32018 = add i32 %v0_32018, -16
  %v2_32018 = inttoptr i32 %v1_32018 to i32*
  %v3_32018 = load i32, i32* %v2_32018, align 4
  %v2_3201d = add i32 %v0_32018, -36
  %v3_3201d = inttoptr i32 %v2_3201d to i32*
  %v4_3201d = load i32, i32* %v3_3201d, align 4
  %v5_3201d = sub i32 %v4_3201d, %v3_32018
  store i32 %v5_3201d, i32* @eax, align 4
  %v1_32020 = add i32 %v0_32018, -12
  %v2_32020 = inttoptr i32 %v1_32020 to i32*
  %v3_32020 = load i32, i32* %v2_32020, align 4
  %v1_32023 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32023 = icmp eq i32 %v1_32023, %v3_32020
  br i1 %v3_32023, label %bb, label %dec_label_pc_3202c

bb:                                               ; preds = %dec_label_pc_32018
  %v1_3202a = call i32 @function_32031()
  br label %dec_label_pc_3202c

dec_label_pc_3202c:                               ; preds = %bb, %dec_label_pc_32018
  %v2_3202a = phi i32 [ %v1_3202a, %bb ], [ %v5_3201d, %dec_label_pc_32018 ]
  ret i32 %v2_3202a
}

define i32 @function_32031() local_unnamed_addr {
dec_label_pc_32031:
  %v0_32032 = load i32, i32* @eax, align 4
  ret i32 %v0_32032
}

define i32 @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKhPhEET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32033:
  %v3_3206a = call i32 @unknown_6707b(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_3206a, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3207b

bb:                                               ; preds = %dec_label_pc_32033
  %v1_32079 = call i32 @function_32080()
  br label %dec_label_pc_3207b

dec_label_pc_3207b:                               ; preds = %bb, %dec_label_pc_32033
  %v2_32079 = phi i32 [ %v1_32079, %bb ], [ %v3_3206a, %dec_label_pc_32033 ]
  ret i32 %v2_32079
}

define i32 @function_32080() local_unnamed_addr {
dec_label_pc_32080:
  %v0_32081 = load i32, i32* @eax, align 4
  ret i32 %v0_32081
}

define i32 @_ZNSt10_Iter_baseIPKhLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32082:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_320a8

bb:                                               ; preds = %dec_label_pc_32082
  %v2_320a6 = call i32 @function_320ad(i32 %arg1)
  br label %dec_label_pc_320a8

dec_label_pc_320a8:                               ; preds = %bb, %dec_label_pc_32082
  %v3_320a6 = phi i32 [ %v2_320a6, %bb ], [ %arg1, %dec_label_pc_32082 ]
  ret i32 %v3_320a6
}

define i32 @function_320ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_320ad:
  %v0_320ae = load i32, i32* @eax, align 4
  ret i32 %v0_320ae
}

define i32 @_ZSt12__niter_baseIPKhENSt11_Niter_baseIT_E13iterator_typeES3_(i32 %arg1) local_unnamed_addr {
dec_label_pc_320af:
  ret i32 0
}

define i32 @function_320c6(i32 %arg1) local_unnamed_addr {
dec_label_pc_320c6:
  %v0_320c6 = load i32, i32* @ebp, align 4
  %v1_320c6 = add i32 %v0_320c6, -28
  %v2_320c6 = inttoptr i32 %v1_320c6 to i32*
  %v3_320c6 = load i32, i32* %v2_320c6, align 4
  %v1_320cc = call i32 @unknown_64131(i32 %v3_320c6)
  store i32 %v1_320cc, i32* @eax, align 4
  %v0_320d1 = load i32, i32* @ebp, align 4
  %v1_320d1 = add i32 %v0_320d1, -12
  %v2_320d1 = inttoptr i32 %v1_320d1 to i32*
  %v3_320d1 = load i32, i32* %v2_320d1, align 4
  %v1_320d4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_320d4 = xor i32 %v1_320d4, %v3_320d1
  %v3_320d4 = icmp eq i32 %v2_320d4, 0
  store i32 %v2_320d4, i32* @edx, align 4
  br i1 %v3_320d4, label %bb, label %dec_label_pc_320dd

bb:                                               ; preds = %dec_label_pc_320c6
  %v1_320db = call i32 @function_320e2()
  br label %dec_label_pc_320dd

dec_label_pc_320dd:                               ; preds = %bb, %dec_label_pc_320c6
  %v2_320db = phi i32 [ %v1_320db, %bb ], [ %v1_320cc, %dec_label_pc_320c6 ]
  ret i32 %v2_320db
}

define i32 @function_320e2() local_unnamed_addr {
dec_label_pc_320e2:
  %v0_320e3 = load i32, i32* @eax, align 4
  ret i32 %v0_320e3
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIhSaIhEES6_EET0_T_S8_S7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_320e4:
  %v2_3210f = sub i32 %arg2, %arg1
  %v2_32113 = sdiv i32 %v2_3210f, 4
  %v3_32116 = mul i32 %v2_32113, -1431655765
  %v10_3213f = icmp eq i32 %v3_32116, 0
  %v11_3213f = icmp slt i32 %v3_32116, 0
  %v3_32143 = icmp eq i1 %v11_3213f, false
  %v4_32143 = icmp eq i1 %v10_3213f, false
  %v5_32143 = icmp eq i1 %v3_32143, %v4_32143
  %v6_32143 = zext i1 %v5_32143 to i32
  %v8_32143 = and i32 %v3_32116, -256
  %v9_32143 = or i32 %v6_32143, %v8_32143
  ret i32 %v9_32143

; uselistorder directives
  uselistorder i32 %v3_32116, { 0, 2, 1 }
}

define i32 @function_3214a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3214a:
  %v0_3214a = load i32, i32* @ebp, align 4
  %v1_3214a = add i32 %v0_3214a, -36
  %v2_3214a = inttoptr i32 %v1_3214a to i32*
  %v3_3214a = load i32, i32* %v2_3214a, align 4
  store i32 %v3_3214a, i32* @eax, align 4
  %v1_3214d = add i32 %v0_3214a, -12
  %v2_3214d = inttoptr i32 %v1_3214d to i32*
  %v3_3214d = load i32, i32* %v2_3214d, align 4
  %v1_32150 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32150 = xor i32 %v1_32150, %v3_3214d
  %v3_32150 = icmp eq i32 %v2_32150, 0
  store i32 %v2_32150, i32* @edx, align 4
  br i1 %v3_32150, label %bb, label %dec_label_pc_32159

bb:                                               ; preds = %dec_label_pc_3214a
  %v1_32157 = call i32 @function_3215e()
  br label %dec_label_pc_32159

dec_label_pc_32159:                               ; preds = %bb, %dec_label_pc_3214a
  %v2_32157 = phi i32 [ %v1_32157, %bb ], [ %v3_3214a, %dec_label_pc_3214a ]
  ret i32 %v2_32157
}

define i32 @function_3215e() local_unnamed_addr {
dec_label_pc_3215e:
  %v0_3215f = load i32, i32* @eax, align 4
  ret i32 %v0_3215f
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bISt13_Bit_iteratorS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_32160:
  %stack_var_-64 = alloca i32, align 4
  %v2_321a2 = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_321a2
}

define i32 @function_321a6(i32 %arg1) local_unnamed_addr {
dec_label_pc_321a6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_321a6 = load i32, i32* @eax, align 4
  %v2_321a6 = add i32 %v0_321a6, 36
  %v16_321a6 = and i32 %v2_321a6, 255
  %v18_321a6 = and i32 %v0_321a6, -256
  %v19_321a6 = or i32 %v16_321a6, %v18_321a6
  store i32 %v19_321a6, i32* %eax.global-to-local, align 4
  %v0_321a8 = call i32 @unknown_3b4e1()
  store i32 %v0_321a8, i32* %eax.global-to-local, align 4
  %v1_321ad = load i32, i32* @ebp, align 4
  %v2_321ad = add i32 %v1_321ad, -16
  %v3_321ad = inttoptr i32 %v2_321ad to i32*
  store i32 %v0_321a8, i32* %v3_321ad, align 4
  br label %dec_label_pc_32202

dec_label_pc_321b2:                               ; preds = %dec_label_pc_32202
  %v1_321b2 = add i32 %v0_32202, -60
  store i32 %v1_321b2, i32* %eax.global-to-local, align 4
  %v1_321b5 = load i32, i32* @esp, align 4
  %v2_321b5 = inttoptr i32 %v1_321b5 to i32*
  store i32 %v1_321b2, i32* %v2_321b5, align 4
  %v0_321b8 = call i32 @unknown_3b6c0()
  store i32 %v0_321b8, i32* %eax.global-to-local, align 4
  %v0_321bd = load i32, i32* @ebp, align 4
  %v1_321bd = add i32 %v0_321bd, -32
  store i32 %v1_321bd, i32* %edx.global-to-local, align 4
  %v1_321c0 = load i32, i32* @esp, align 4
  %v2_321c0 = add i32 %v1_321c0, 4
  %v3_321c0 = inttoptr i32 %v2_321c0 to i32*
  store i32 %v0_321b8, i32* %v3_321c0, align 4
  %v0_321c4 = load i32, i32* %edx.global-to-local, align 4
  %v1_321c4 = load i32, i32* @esp, align 4
  %v2_321c4 = inttoptr i32 %v1_321c4 to i32*
  store i32 %v0_321c4, i32* %v2_321c4, align 4
  %v0_321c7 = call i32 @unknown_3b5d6()
  %v0_321cc = load i32, i32* @esp, align 4
  %v1_321cc = add i32 %v0_321cc, -4
  %v0_321cf = load i32, i32* @ebp, align 4
  %v1_321cf = add i32 %v0_321cf, -68
  store i32 %v1_321cf, i32* %eax.global-to-local, align 4
  %v2_321d2 = inttoptr i32 %v1_321cc to i32*
  store i32 %v1_321cf, i32* %v2_321d2, align 4
  %v0_321d5 = call i32 @unknown_3b6c0()
  store i32 %v0_321d5, i32* %eax.global-to-local, align 4
  %v0_321da = load i32, i32* @ebp, align 4
  %v1_321da = add i32 %v0_321da, -24
  store i32 %v1_321da, i32* %edx.global-to-local, align 4
  %v1_321dd = load i32, i32* @esp, align 4
  %v2_321dd = add i32 %v1_321dd, 4
  %v3_321dd = inttoptr i32 %v2_321dd to i32*
  store i32 %v0_321d5, i32* %v3_321dd, align 4
  %v0_321e1 = load i32, i32* %edx.global-to-local, align 4
  %v1_321e1 = load i32, i32* @esp, align 4
  %v2_321e1 = inttoptr i32 %v1_321e1 to i32*
  store i32 %v0_321e1, i32* %v2_321e1, align 4
  %v0_321e4 = call i32 @unknown_3b5d6()
  %v0_321e9 = load i32, i32* @esp, align 4
  %v0_321ec = load i32, i32* @ebp, align 4
  %v1_321ec = add i32 %v0_321ec, -32
  %v3_321ef = inttoptr i32 %v0_321e9 to i32*
  store i32 %v1_321ec, i32* %v3_321ef, align 4
  %v0_321f3 = load i32, i32* @ebp, align 4
  %v1_321f3 = add i32 %v0_321f3, -24
  store i32 %v1_321f3, i32* %eax.global-to-local, align 4
  %v1_321f6 = load i32, i32* @esp, align 4
  %v2_321f6 = inttoptr i32 %v1_321f6 to i32*
  store i32 %v1_321f3, i32* %v2_321f6, align 4
  %v0_321f9 = call i32 @unknown_3b234()
  store i32 %v0_321f9, i32* %eax.global-to-local, align 4
  %v0_321fe = load i32, i32* @ebp, align 4
  %v1_321fe = add i32 %v0_321fe, -16
  %v2_321fe = inttoptr i32 %v1_321fe to i32*
  %v3_321fe = load i32, i32* %v2_321fe, align 4
  %v4_321fe = add i32 %v3_321fe, -1
  store i32 %v4_321fe, i32* %v2_321fe, align 4
  br label %dec_label_pc_32202

dec_label_pc_32202:                               ; preds = %dec_label_pc_321b2, %dec_label_pc_321a6
  %v0_32202 = load i32, i32* @ebp, align 4
  %v1_32202 = add i32 %v0_32202, -16
  %v2_32202 = inttoptr i32 %v1_32202 to i32*
  %v3_32202 = load i32, i32* %v2_32202, align 4
  %v10_32202 = icmp eq i32 %v3_32202, 0
  %v11_32202 = icmp slt i32 %v3_32202, 0
  %v3_32206 = icmp eq i1 %v11_32202, false
  %v4_32206 = icmp eq i1 %v10_32202, false
  %v5_32206 = icmp eq i1 %v3_32206, %v4_32206
  %v6_32206 = zext i1 %v5_32206 to i32
  %v7_32206 = load i32, i32* %eax.global-to-local, align 4
  %v8_32206 = and i32 %v7_32206, -256
  %v9_32206 = or i32 %v6_32206, %v8_32206
  store i32 %v9_32206, i32* %eax.global-to-local, align 4
  %v5_32209 = icmp eq i1 %v5_32206, false
  %v1_3220b = icmp eq i1 %v5_32209, false
  br i1 %v1_3220b, label %dec_label_pc_321b2, label %dec_label_pc_3220d

dec_label_pc_3220d:                               ; preds = %dec_label_pc_32202
  %v1_3220d = add i32 %v0_32202, -44
  %v2_3220d = inttoptr i32 %v1_3220d to i32*
  %v3_3220d = load i32, i32* %v2_3220d, align 4
  store i32 %v3_3220d, i32* %ecx.global-to-local, align 4
  %v1_32210 = add i32 %v0_32202, -68
  %v2_32210 = inttoptr i32 %v1_32210 to i32*
  %v3_32210 = load i32, i32* %v2_32210, align 4
  store i32 %v3_32210, i32* %eax.global-to-local, align 4
  %v1_32213 = add i32 %v0_32202, -64
  %v2_32213 = inttoptr i32 %v1_32213 to i32*
  %v3_32213 = load i32, i32* %v2_32213, align 4
  store i32 %v3_32213, i32* %edx.global-to-local, align 4
  %v2_32216 = inttoptr i32 %v3_3220d to i32*
  store i32 %v3_32210, i32* %v2_32216, align 4
  %v0_32218 = load i32, i32* %edx.global-to-local, align 4
  %v1_32218 = load i32, i32* %ecx.global-to-local, align 4
  %v2_32218 = add i32 %v1_32218, 4
  %v3_32218 = inttoptr i32 %v2_32218 to i32*
  store i32 %v0_32218, i32* %v3_32218, align 4
  %v0_3221b = load i32, i32* @ebp, align 4
  %v1_3221b = add i32 %v0_3221b, -44
  %v2_3221b = inttoptr i32 %v1_3221b to i32*
  %v3_3221b = load i32, i32* %v2_3221b, align 4
  store i32 %v3_3221b, i32* @eax, align 4
  %v1_3221e = add i32 %v0_3221b, -12
  %v2_3221e = inttoptr i32 %v1_3221e to i32*
  %v3_3221e = load i32, i32* %v2_3221e, align 4
  store i32 %v3_3221e, i32* %edx.global-to-local, align 4
  %v1_32221 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32221 = xor i32 %v1_32221, %v3_3221e
  store i1 false, i1* @of, align 1
  %v3_32221 = icmp eq i32 %v2_32221, 0
  %v4_32221 = icmp slt i32 %v2_32221, 0
  store i1 %v4_32221, i1* @sf, align 1
  store i32 %v2_32221, i32* %edx.global-to-local, align 4
  br i1 %v3_32221, label %bb, label %dec_label_pc_3222a

bb:                                               ; preds = %dec_label_pc_3220d
  %v1_32228 = call i32 @function_3222f()
  store i32 %v1_32228, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3222a

dec_label_pc_3222a:                               ; preds = %bb, %dec_label_pc_3220d
  %v2_32228 = phi i32 [ %v1_32228, %bb ], [ %v3_3221b, %dec_label_pc_3220d ]
  ret i32 %v2_32228

; uselistorder directives
  uselistorder i32 %v3_32202, { 1, 0 }
  uselistorder i32 %v0_32202, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v0_321a6, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 1, 2, 3, 4, 5, 6, 10, 11 }
  uselistorder i1* @sf, { 6, 7, 0, 4, 5, 1, 2, 3 }
  uselistorder i32 ()* @unknown_3b5d6, { 1, 0 }
  uselistorder i32 ()* @unknown_3b6c0, { 1, 0 }
}

define i32 @function_3222f() local_unnamed_addr {
dec_label_pc_3222f:
  %v0_32230 = load i32, i32* @eax, align 4
  ret i32 %v0_32230
}

define i32 @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32233:
  ret i32 %arg1
}

define i32 @function_3226c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3226c:
  %v0_3226e = call i32 @unknown_672e1()
  store i32 %v0_3226e, i32* @eax, align 4
  %v0_32273 = load i32, i32* @ebp, align 4
  %v1_32273 = add i32 %v0_32273, -12
  %v2_32273 = inttoptr i32 %v1_32273 to i32*
  %v3_32273 = load i32, i32* %v2_32273, align 4
  %v1_32276 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32276 = icmp eq i32 %v1_32276, %v3_32273
  br i1 %v3_32276, label %bb, label %dec_label_pc_3227f

bb:                                               ; preds = %dec_label_pc_3226c
  %v1_3227d = call i32 @function_32284()
  br label %dec_label_pc_3227f

dec_label_pc_3227f:                               ; preds = %bb, %dec_label_pc_3226c
  %v2_3227d = phi i32 [ %v1_3227d, %bb ], [ %v0_3226e, %dec_label_pc_3226c ]
  ret i32 %v2_3227d
}

define i32 @function_32284() local_unnamed_addr {
dec_label_pc_32284:
  %v0_32285 = load i32, i32* @eax, align 4
  ret i32 %v0_32285
}

define i32 @_ZNSt10_Iter_baseISt19_Bit_const_iteratorLb0EE7_S_baseES0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32286:
  ret i32 0
}

define i32 @function_322ae(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_322ae:
  %v0_322b4 = load i32, i32* @edx, align 4
  %v1_322b4 = load i32, i32* @ecx, align 4
  %v2_322b4 = add i32 %v1_322b4, 4
  %v3_322b4 = inttoptr i32 %v2_322b4 to i32*
  store i32 %v0_322b4, i32* %v3_322b4, align 4
  %v0_322b7 = load i32, i32* @ebp, align 4
  %v1_322b7 = add i32 %v0_322b7, -28
  %v2_322b7 = inttoptr i32 %v1_322b7 to i32*
  %v3_322b7 = load i32, i32* %v2_322b7, align 4
  store i32 %v3_322b7, i32* @eax, align 4
  %v1_322ba = add i32 %v0_322b7, -12
  %v2_322ba = inttoptr i32 %v1_322ba to i32*
  %v3_322ba = load i32, i32* %v2_322ba, align 4
  %v1_322bd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_322bd = icmp eq i32 %v1_322bd, %v3_322ba
  br i1 %v3_322bd, label %bb, label %dec_label_pc_322c6

bb:                                               ; preds = %dec_label_pc_322ae
  %v1_322c4 = call i32 @function_322cb()
  br label %dec_label_pc_322c6

dec_label_pc_322c6:                               ; preds = %bb, %dec_label_pc_322ae
  %v2_322c4 = phi i32 [ %v1_322c4, %bb ], [ %v3_322b7, %dec_label_pc_322ae ]
  ret i32 %v2_322c4
}

define i32 @function_322cb() local_unnamed_addr {
dec_label_pc_322cb:
  %v0_322cc = load i32, i32* @eax, align 4
  ret i32 %v0_322cc
}

define i32 @_ZSt12__niter_baseISt19_Bit_const_iteratorENSt11_Niter_baseIT_E13iterator_typeES2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_322cf:
  %v0_322e7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_322e7
}

define i32 @function_322f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_322f0:
  %v0_322f2 = load i32, i32* @ebp, align 4
  %v1_322f2 = add i32 %v0_322f2, -28
  %v2_322f2 = inttoptr i32 %v1_322f2 to i32*
  %v3_322f2 = load i32, i32* %v2_322f2, align 4
  %v1_322f5 = add i32 %v0_322f2, -36
  %v2_322f5 = inttoptr i32 %v1_322f5 to i32*
  %v3_322f5 = load i32, i32* %v2_322f5, align 4
  %v1_322f8 = add i32 %v0_322f2, -32
  %v2_322f8 = inttoptr i32 %v1_322f8 to i32*
  %v3_322f8 = load i32, i32* %v2_322f8, align 4
  %v3_32306 = call i32 @unknown_64555(i32 %v3_322f2, i32 %v3_322f5, i32 %v3_322f8)
  %v0_3230e = load i32, i32* @ebp, align 4
  %v1_3230e = add i32 %v0_3230e, -28
  %v2_3230e = inttoptr i32 %v1_3230e to i32*
  %v3_3230e = load i32, i32* %v2_3230e, align 4
  store i32 %v3_3230e, i32* @eax, align 4
  %v1_32311 = add i32 %v0_3230e, -12
  %v2_32311 = inttoptr i32 %v1_32311 to i32*
  %v3_32311 = load i32, i32* %v2_32311, align 4
  %v1_32314 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_32314 = icmp eq i32 %v1_32314, %v3_32311
  br i1 %v3_32314, label %bb, label %dec_label_pc_3231d

bb:                                               ; preds = %dec_label_pc_322f0
  %v1_3231b = call i32 @function_32322()
  br label %dec_label_pc_3231d

dec_label_pc_3231d:                               ; preds = %bb, %dec_label_pc_322f0
  %v2_3231b = phi i32 [ %v1_3231b, %bb ], [ %v3_3230e, %dec_label_pc_322f0 ]
  ret i32 %v2_3231b
}

define i32 @function_32322() local_unnamed_addr {
dec_label_pc_32322:
  %v0_32323 = load i32, i32* @eax, align 4
  ret i32 %v0_32323
}

define i32 @_ZSt13__copy_move_aILb0ESt19_Bit_const_iteratorSt13_Bit_iteratorET1_T0_S3_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32326:
  ret i32 %arg1
}

define i32 @function_32332(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32332:
  %v0_32332 = load i32, i32* @ebp, align 4
  %v1_32332 = add i32 %v0_32332, 12
  %v2_32332 = inttoptr i32 %v1_32332 to i32*
  %v3_32332 = load i32, i32* %v2_32332, align 4
  %v2_32335 = add i32 %v0_32332, -36
  %v3_32335 = inttoptr i32 %v2_32335 to i32*
  store i32 %v3_32332, i32* %v3_32335, align 4
  %v0_32338 = load i32, i32* @ebp, align 4
  %v1_32338 = add i32 %v0_32338, 16
  %v2_32338 = inttoptr i32 %v1_32338 to i32*
  %v3_32338 = load i32, i32* %v2_32338, align 4
  %v2_3233b = add i32 %v0_32338, -32
  %v3_3233b = inttoptr i32 %v2_3233b to i32*
  store i32 %v3_32338, i32* %v3_3233b, align 4
  %v0_3233e = load i32, i32* @ebp, align 4
  %v1_3233e = add i32 %v0_3233e, 20
  %v2_3233e = inttoptr i32 %v1_3233e to i32*
  %v3_3233e = load i32, i32* %v2_3233e, align 4
  %v2_32341 = add i32 %v0_3233e, -44
  %v3_32341 = inttoptr i32 %v2_32341 to i32*
  store i32 %v3_3233e, i32* %v3_32341, align 4
  %v0_32344 = load i32, i32* @ebp, align 4
  %v1_32344 = add i32 %v0_32344, 24
  %v2_32344 = inttoptr i32 %v1_32344 to i32*
  %v3_32344 = load i32, i32* %v2_32344, align 4
  %v2_32347 = add i32 %v0_32344, -40
  %v3_32347 = inttoptr i32 %v2_32347 to i32*
  store i32 %v3_32344, i32* %v3_32347, align 4
  %v0_3234a = load i32, i32* @ebp, align 4
  %v1_3234a = add i32 %v0_3234a, 28
  %v2_3234a = inttoptr i32 %v1_3234a to i32*
  %v3_3234a = load i32, i32* %v2_3234a, align 4
  %v2_3234d = add i32 %v0_3234a, -52
  %v3_3234d = inttoptr i32 %v2_3234d to i32*
  store i32 %v3_3234a, i32* %v3_3234d, align 4
  %v0_32350 = load i32, i32* @ebp, align 4
  %v1_32350 = add i32 %v0_32350, 32
  %v2_32350 = inttoptr i32 %v1_32350 to i32*
  %v3_32350 = load i32, i32* %v2_32350, align 4
  %v2_32353 = add i32 %v0_32350, -48
  %v3_32353 = inttoptr i32 %v2_32353 to i32*
  store i32 %v3_32350, i32* %v3_32353, align 4
  %v0_32356 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3235c = load i32, i32* @ebp, align 4
  %v2_3235c = add i32 %v1_3235c, -12
  %v3_3235c = inttoptr i32 %v2_3235c to i32*
  store i32 %v0_32356, i32* %v3_3235c, align 4
  %v0_32361 = load i32, i32* @ebp, align 4
  %v1_32361 = add i32 %v0_32361, -13
  %v2_32361 = inttoptr i32 %v1_32361 to i8*
  store i8 0, i8* %v2_32361, align 1
  %v0_32365 = load i32, i32* @ebp, align 4
  %v1_32365 = add i32 %v0_32365, -28
  %v2_32365 = inttoptr i32 %v1_32365 to i32*
  %v3_32365 = load i32, i32* %v2_32365, align 4
  %v1_32368 = add i32 %v0_32365, -52
  %v2_32368 = inttoptr i32 %v1_32368 to i32*
  %v3_32368 = load i32, i32* %v2_32368, align 4
  %v1_3236b = add i32 %v0_32365, -48
  %v2_3236b = inttoptr i32 %v1_3236b to i32*
  %v3_3236b = load i32, i32* %v2_3236b, align 4
  %v1_32376 = add i32 %v0_32365, -44
  %v2_32376 = inttoptr i32 %v1_32376 to i32*
  %v3_32376 = load i32, i32* %v2_32376, align 4
  %v1_32379 = add i32 %v0_32365, -40
  %v2_32379 = inttoptr i32 %v1_32379 to i32*
  %v3_32379 = load i32, i32* %v2_32379, align 4
  %v1_32384 = add i32 %v0_32365, -36
  %v2_32384 = inttoptr i32 %v1_32384 to i32*
  %v3_32384 = load i32, i32* %v2_32384, align 4
  %v1_32387 = add i32 %v0_32365, -32
  %v2_32387 = inttoptr i32 %v1_32387 to i32*
  %v3_32387 = load i32, i32* %v2_32387, align 4
  %v7_32395 = call i32 @unknown_67447(i32 %v3_32365, i32 %v3_32384, i32 %v3_32387, i32 %v3_32376, i32 %v3_32379, i32 %v3_32368, i32 %v3_3236b)
  %v0_3239d = load i32, i32* @ebp, align 4
  %v1_3239d = add i32 %v0_3239d, -28
  %v2_3239d = inttoptr i32 %v1_3239d to i32*
  %v3_3239d = load i32, i32* %v2_3239d, align 4
  store i32 %v3_3239d, i32* @eax, align 4
  %v1_323a0 = add i32 %v0_3239d, -12
  %v2_323a0 = inttoptr i32 %v1_323a0 to i32*
  %v3_323a0 = load i32, i32* %v2_323a0, align 4
  %v1_323a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_323a3 = icmp eq i32 %v1_323a3, %v3_323a0
  br i1 %v3_323a3, label %bb, label %dec_label_pc_323ac

bb:                                               ; preds = %dec_label_pc_32332
  %v1_323aa = call i32 @function_323b1()
  br label %dec_label_pc_323ac

dec_label_pc_323ac:                               ; preds = %bb, %dec_label_pc_32332
  %v2_323aa = phi i32 [ %v1_323aa, %bb ], [ %v3_3239d, %dec_label_pc_32332 ]
  ret i32 %v2_323aa

; uselistorder directives
  uselistorder i32 %v0_32365, { 1, 0, 3, 4, 2, 5, 6 }
}

define i32 @function_323b1() local_unnamed_addr {
dec_label_pc_323b1:
  %v0_323b2 = load i32, i32* @eax, align 4
  ret i32 %v0_323b2
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt13_Bit_iteratorS3_EET0_T_S5_S4_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_323b5:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  store i32 %arg4, i32* %stack_var_-64, align 4
  store i32 %arg6, i32* %stack_var_-72, align 4
  %v4_323f3 = ptrtoint i32* %stack_var_-56 to i32
  %v2_323f7 = ptrtoint i32* %stack_var_-64 to i32
  %v2_323fd = call i32 @unknown_3b736(i32 %v2_323f7, i32 %v4_323f3)
  %v2_32407 = ptrtoint i32* %stack_var_-36 to i32
  %v2_3241c = ptrtoint i32* %stack_var_-28 to i32
  %v2_3241f = ptrtoint i32* %stack_var_-72 to i32
  br label %dec_label_pc_3245d

dec_label_pc_32407:                               ; preds = %dec_label_pc_3245d
  %v1_3240d = load i32, i32* @esp, align 4
  %v2_3240d = add i32 %v1_3240d, 4
  %v3_3240d = inttoptr i32 %v2_3240d to i32*
  store i32 %v4_323f3, i32* %v3_3240d, align 4
  %v1_32411 = load i32, i32* @esp, align 4
  %v2_32411 = inttoptr i32 %v1_32411 to i32*
  store i32 %v2_32407, i32* %v2_32411, align 4
  %v0_32414 = call i32 @unknown_3b82b()
  %v0_32419 = load i32, i32* @esp, align 4
  %v3_32422 = inttoptr i32 %v0_32419 to i32*
  store i32 %v2_3241f, i32* %v3_32422, align 4
  %v1_32426 = load i32, i32* @esp, align 4
  %v2_32426 = inttoptr i32 %v1_32426 to i32*
  store i32 %v2_3241c, i32* %v2_32426, align 4
  %v0_32429 = call i32 @unknown_3b82b()
  %v0_3242e = load i32, i32* @esp, align 4
  %v3_32434 = inttoptr i32 %v0_3242e to i32*
  store i32 %v2_32407, i32* %v3_32434, align 4
  %v1_3243b = load i32, i32* @esp, align 4
  %v2_3243b = inttoptr i32 %v1_3243b to i32*
  store i32 %v2_3241c, i32* %v2_3243b, align 4
  %v0_3243e = call i32 @unknown_3b489()
  %v1_32446 = load i32, i32* @esp, align 4
  %v2_32446 = inttoptr i32 %v1_32446 to i32*
  store i32 %v4_323f3, i32* %v2_32446, align 4
  %v0_32449 = call i32 @unknown_3b887()
  %v1_32451 = load i32, i32* @esp, align 4
  %v2_32451 = inttoptr i32 %v1_32451 to i32*
  store i32 %v2_3241f, i32* %v2_32451, align 4
  %v0_32454 = call i32 @unknown_3b887()
  %v4_32459 = add i32 %storemerge, -1
  br label %dec_label_pc_3245d

dec_label_pc_3245d:                               ; preds = %dec_label_pc_32407, %dec_label_pc_323b5
  %storemerge = phi i32 [ %v4_32459, %dec_label_pc_32407 ], [ %v2_323fd, %dec_label_pc_323b5 ]
  %v10_3245d = icmp eq i32 %storemerge, 0
  %v11_3245d = icmp slt i32 %storemerge, 0
  %v3_32461 = icmp eq i1 %v11_3245d, false
  %v4_32461 = icmp eq i1 %v10_3245d, false
  %v5_32461 = icmp eq i1 %v3_32461, %v4_32461
  %v5_32464 = icmp eq i1 %v5_32461, false
  %v1_32466 = icmp eq i1 %v5_32464, false
  br i1 %v1_32466, label %dec_label_pc_32407, label %dec_label_pc_32468

dec_label_pc_32468:                               ; preds = %dec_label_pc_3245d
  %tmp122 = ptrtoint i32* %arg1 to i32
  %v3_3246b = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_3246b, i32* %arg1, align 4
  %v2_32473 = add i32 %tmp122, 4
  %v3_32473 = inttoptr i32 %v2_32473 to i32*
  store i32 %arg7, i32* %v3_32473, align 4
  store i32 %tmp122, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32485

bb:                                               ; preds = %dec_label_pc_32468
  %v1_32483 = call i32 @function_3248a()
  br label %dec_label_pc_32485

dec_label_pc_32485:                               ; preds = %bb, %dec_label_pc_32468
  %v2_32483 = phi i32 [ %v1_32483, %bb ], [ %tmp122, %dec_label_pc_32468 ]
  ret i32 %v2_32483

; uselistorder directives
  uselistorder i32 %tmp122, { 1, 2, 0 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 ()* @unknown_3b887, { 1, 0 }
  uselistorder i32 ()* @unknown_3b82b, { 1, 0 }
}

define i32 @function_3248a() local_unnamed_addr {
dec_label_pc_3248a:
  %v0_3248b = load i32, i32* @eax, align 4
  ret i32 %v0_3248b
}

define i32 @_ZSt18uninitialized_copyIP6CTxOutS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3248e:
  ret i32 %arg3
}

define i32 @function_324b6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_324b6:
  %v0_324b8 = load i32, i32* @ebp, align 4
  %v1_324b8 = add i32 %v0_324b8, -32
  %v2_324b8 = inttoptr i32 %v1_324b8 to i32*
  %v3_324b8 = load i32, i32* %v2_324b8, align 4
  %v1_324bf = add i32 %v0_324b8, -28
  %v2_324bf = inttoptr i32 %v1_324bf to i32*
  %v3_324bf = load i32, i32* %v2_324bf, align 4
  %v2_324c5 = call i32 @unknown_67682(i32 %v3_324bf, i32 %v3_324b8)
  store i32 %v2_324c5, i32* @eax, align 4
  %v0_324ca = load i32, i32* @ebp, align 4
  %v1_324ca = add i32 %v0_324ca, -12
  %v2_324ca = inttoptr i32 %v1_324ca to i32*
  %v3_324ca = load i32, i32* %v2_324ca, align 4
  %v1_324cd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_324cd = icmp eq i32 %v1_324cd, %v3_324ca
  br i1 %v3_324cd, label %bb, label %dec_label_pc_324d6

bb:                                               ; preds = %dec_label_pc_324b6
  %v1_324d4 = call i32 @function_324db()
  br label %dec_label_pc_324d6

dec_label_pc_324d6:                               ; preds = %bb, %dec_label_pc_324b6
  %v2_324d4 = phi i32 [ %v1_324d4, %bb ], [ %v2_324c5, %dec_label_pc_324b6 ]
  ret i32 %v2_324d4
}

define i32 @function_324db() local_unnamed_addr {
dec_label_pc_324db:
  %v0_324dc = load i32, i32* @eax, align 4
  ret i32 %v0_324dc
}

define i32 @_ZNSt10_Iter_baseIP6CTxOutLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_324dd:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32503

bb:                                               ; preds = %dec_label_pc_324dd
  %v2_32501 = call i32 @function_32508(i32 %arg1)
  br label %dec_label_pc_32503

dec_label_pc_32503:                               ; preds = %bb, %dec_label_pc_324dd
  %v3_32501 = phi i32 [ %v2_32501, %bb ], [ %arg1, %dec_label_pc_324dd ]
  ret i32 %v3_32501
}

define i32 @function_32508(i32 %arg1) local_unnamed_addr {
dec_label_pc_32508:
  %v0_32509 = load i32, i32* @eax, align 4
  ret i32 %v0_32509
}

define i32 @_ZSt22__copy_move_backward_aILb0EP6CTxOutS1_ET1_T0_S3_S2_(i32 %arg1) local_unnamed_addr {
dec_label_pc_3250a:
  ret i32 %arg1
}

define i32 @function_3255a() local_unnamed_addr {
dec_label_pc_3255a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3255a = load i32, i32* %ecx.global-to-local, align 4
  %v1_3255a = add i32 %v0_3255a, -1
  store i32 %v1_3255a, i32* %ecx.global-to-local, align 4
  %v0_3255c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3255c
}

define i32 @_ZSt18uninitialized_copyIP5CTxInS1_ET0_T_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3255d:
  ret i32 %arg3
}

define i32 @function_32588(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32588:
  %v0_32588 = load i32, i32* @ebp, align 4
  %v1_32588 = add i32 %v0_32588, 1
  store i32 %v1_32588, i32* @ebp, align 4
  %v0_32589 = load i32, i32* @ecx, align 4
  %v1_32589 = add i32 %v0_32589, -1
  store i32 %v1_32589, i32* @ecx, align 4
  %v1_3258e = add i32 %v0_32588, -27
  %v2_3258e = inttoptr i32 %v1_3258e to i32*
  %v3_3258e = load i32, i32* %v2_3258e, align 4
  %v1_32594 = call i32 @unknown_67874(i32 %v3_3258e)
  store i32 %v1_32594, i32* @eax, align 4
  %v0_32599 = load i32, i32* @ebp, align 4
  %v1_32599 = add i32 %v0_32599, -12
  %v2_32599 = inttoptr i32 %v1_32599 to i32*
  %v3_32599 = load i32, i32* %v2_32599, align 4
  %v1_3259c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3259c = icmp eq i32 %v1_3259c, %v3_32599
  br i1 %v3_3259c, label %bb, label %dec_label_pc_325a5

bb:                                               ; preds = %dec_label_pc_32588
  %v1_325a3 = call i32 @function_325aa()
  br label %dec_label_pc_325a5

dec_label_pc_325a5:                               ; preds = %bb, %dec_label_pc_32588
  %v3_325a3 = phi i32 [ %v1_325a3, %bb ], [ %v1_32594, %dec_label_pc_32588 ]
  ret i32 %v3_325a3
}

define i32 @function_325aa() local_unnamed_addr {
dec_label_pc_325aa:
  %v0_325ab = load i32, i32* @eax, align 4
  ret i32 %v0_325ab
}

define i32 @_ZNSt10_Iter_baseIP5CTxInLb0EE7_S_baseES1_(i32 %arg1) local_unnamed_addr {
dec_label_pc_325ac:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_325d2

bb:                                               ; preds = %dec_label_pc_325ac
  %v2_325d0 = call i32 @function_325d7(i32 %arg1)
  br label %dec_label_pc_325d2

dec_label_pc_325d2:                               ; preds = %bb, %dec_label_pc_325ac
  %v3_325d0 = phi i32 [ %v2_325d0, %bb ], [ %arg1, %dec_label_pc_325ac ]
  ret i32 %v3_325d0
}

define i32 @function_325d7(i32 %arg1) local_unnamed_addr {
dec_label_pc_325d7:
  %v0_325d8 = load i32, i32* @eax, align 4
  ret i32 %v0_325d8
}

define i32 @_ZSt22__copy_move_backward_aILb0EP5CTxInS1_ET1_T0_S3_S2_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_325d9:
  %v3_32614 = call i32 @unknown_67997(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_32614, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32625

bb:                                               ; preds = %dec_label_pc_325d9
  %v1_32623 = call i32 @function_3262a()
  br label %dec_label_pc_32625

dec_label_pc_32625:                               ; preds = %bb, %dec_label_pc_325d9
  %v2_32623 = phi i32 [ %v1_32623, %bb ], [ %v3_32614, %dec_label_pc_325d9 ]
  ret i32 %v2_32623
}

define i32 @function_3262a() local_unnamed_addr {
dec_label_pc_3262a:
  %v0_3262b = load i32, i32* @eax, align 4
  ret i32 %v0_3262b
}

define i32 @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP5CTxInjS2_EEvT_T0_RKT1_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3262c:
  %v10_3267a110 = icmp eq i32 %arg2, 0
  %v1_3267e111 = icmp eq i1 %v10_3267a110, false
  %v5_32681115 = icmp eq i1 %v1_3267e111, false
  %v1_32683116 = icmp eq i1 %v5_32681115, false
  br i1 %v1_32683116, label %dec_label_pc_32658, label %dec_label_pc_32685

dec_label_pc_32658:                               ; preds = %dec_label_pc_3262c, %dec_label_pc_32658
  %storemerge118 = phi i32 [ %v4_32676, %dec_label_pc_32658 ], [ %arg1, %dec_label_pc_3262c ]
  %stack_var_-36.0117 = phi i32 [ %v4_32672, %dec_label_pc_32658 ], [ %arg2, %dec_label_pc_3262c ]
  %v1_3265e = call i32 @unknown_60a78(i32 %storemerge118)
  %v2_3266d = call i32 @unknown_612d1(i32 %v1_3265e, i32 %arg3)
  %v4_32672 = add i32 %stack_var_-36.0117, -1
  %v4_32676 = add i32 %storemerge118, 52
  %v10_3267a = icmp eq i32 %v4_32672, 0
  %v1_3267e = icmp eq i1 %v10_3267a, false
  %v5_32681 = icmp eq i1 %v1_3267e, false
  %v1_32683 = icmp eq i1 %v5_32681, false
  br i1 %v1_32683, label %dec_label_pc_32658, label %dec_label_pc_32685

dec_label_pc_32685:                               ; preds = %dec_label_pc_32658, %dec_label_pc_3262c
  %v0_32685 = call i32 @function_326b7()
  ret i32 %v0_32685

; uselistorder directives
  uselistorder i32 %v4_32672, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder label %dec_label_pc_32658, { 1, 0 }
}

define i32 @function_32688() local_unnamed_addr {
dec_label_pc_32688:
  %eax.global-to-local = alloca i32, align 4
  %v0_32688 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32688
}

define i32 @function_326b7() local_unnamed_addr {
dec_label_pc_326b7:
  %v0_326b7 = load i32, i32* @ebp, align 4
  %v1_326b7 = add i32 %v0_326b7, -12
  %v2_326b7 = inttoptr i32 %v1_326b7 to i32*
  %v3_326b7 = load i32, i32* %v2_326b7, align 4
  %v1_326ba = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_326ba = xor i32 %v1_326ba, %v3_326b7
  ret i32 %v2_326ba
}

define i32 @function_326c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_326c2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_326c7() local_unnamed_addr {
dec_label_pc_326c7:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_326c7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_326c7 = add i32 %v0_326c7, 1566258372
  %v2_326c7 = inttoptr i32 %v1_326c7 to i32*
  %v3_326c7 = load i32, i32* %v2_326c7, align 4
  %v4_326c7 = add i32 %v3_326c7, 1
  store i32 %v4_326c7, i32* %v2_326c7, align 4
  %v0_326cd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_326cd

; uselistorder directives
  uselistorder i32 1566258372, { 0, 4, 1, 3, 5, 2 }
}

define i32 @_Z14Serialize_implI11CHashWriter5CTxInSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_326ce:
  %v1_32703 = call i32 @unknown_49d2a(i32 %arg2)
  ret i32 %v1_32703
}

define i32 @function_3270a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3270a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_3270a = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_3270a = load i32, i32* @eax, align 4
  %v4_3270a = trunc i32 %v3_3270a to i8
  %v5_3270a = add i8 %v4_3270a, %v2_3270a
  %v21_3270a = inttoptr i32 %v3_3270a to i8*
  store i8 %v5_3270a, i8* %v21_3270a, align 1
  %v0_3270c = load i32, i32* @ecx, align 4
  %v1_3270c = add i32 %v0_3270c, -1996217276
  %v2_3270c = inttoptr i32 %v1_3270c to i8*
  %v3_3270c = load i8, i8* %v2_3270c, align 1
  %v5_3270c = trunc i32 %v0_3270c to i8
  %v6_3270c = add i8 %v3_3270c, %v5_3270c
  store i8 %v6_3270c, i8* %v2_3270c, align 1
  %v0_32713 = load i32, i32* @eax, align 4
  %v11_32713 = and i32 %v0_32713, -248
  store i32 %v11_32713, i32* %eax.global-to-local, align 4
  %v0_32715 = load i32, i32* @ebp, align 4
  %v1_32715 = add i32 %v0_32715, -28
  %v2_32715 = inttoptr i32 %v1_32715 to i32*
  %v3_32715 = load i32, i32* %v2_32715, align 4
  store i32 %v3_32715, i32* %eax.global-to-local, align 4
  %v1_3271b = call i32 @unknown_67b08(i32 %v3_32715)
  %v0_32720 = load i32, i32* @ebp, align 4
  %v1_32720 = add i32 %v0_32720, -20
  store i32 %v1_32720, i32* %eax.global-to-local, align 4
  %v1_32723 = add i32 %v0_32720, -32
  %v2_32723 = inttoptr i32 %v1_32723 to i32*
  %v3_32723 = load i32, i32* %v2_32723, align 4
  %v2_3272d = call i32 @unknown_4f86c(i32 %v1_32720, i32 %v3_32723)
  store i32 %v2_3272d, i32* %eax.global-to-local, align 4
  %v16_32732 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_3276a

dec_label_pc_32737:                               ; preds = %dec_label_pc_3276a
  %v1_32737 = add i32 %v0_32737, -20
  store i32 %v1_32737, i32* %eax.global-to-local, align 4
  %v1_3273a = load i32, i32* @esp, align 4
  %v2_3273a = inttoptr i32 %v1_3273a to i32*
  store i32 %v1_32737, i32* %v2_3273a, align 4
  %v0_3273d = call i32 @unknown_5c712()
  store i32 %v0_3273d, i32* %eax.global-to-local, align 4
  %v0_32742 = load i32, i32* @ebp, align 4
  %v1_32742 = add i32 %v0_32742, -40
  %v2_32742 = inttoptr i32 %v1_32742 to i32*
  %v3_32742 = load i32, i32* %v2_32742, align 4
  %v1_32745 = load i32, i32* @esp, align 4
  %v2_32745 = add i32 %v1_32745, 12
  %v3_32745 = inttoptr i32 %v2_32745 to i32*
  store i32 %v3_32742, i32* %v3_32745, align 4
  %v0_32749 = load i32, i32* @ebp, align 4
  %v1_32749 = add i32 %v0_32749, -36
  %v2_32749 = inttoptr i32 %v1_32749 to i32*
  %v3_32749 = load i32, i32* %v2_32749, align 4
  %v1_3274c = load i32, i32* @esp, align 4
  %v2_3274c = add i32 %v1_3274c, 8
  %v3_3274c = inttoptr i32 %v2_3274c to i32*
  store i32 %v3_32749, i32* %v3_3274c, align 4
  %v0_32750 = load i32, i32* %eax.global-to-local, align 4
  %v1_32750 = load i32, i32* @esp, align 4
  %v2_32750 = add i32 %v1_32750, 4
  %v3_32750 = inttoptr i32 %v2_32750 to i32*
  store i32 %v0_32750, i32* %v3_32750, align 4
  %v0_32754 = load i32, i32* @ebp, align 4
  %v1_32754 = add i32 %v0_32754, -28
  %v2_32754 = inttoptr i32 %v1_32754 to i32*
  %v3_32754 = load i32, i32* %v2_32754, align 4
  store i32 %v3_32754, i32* %eax.global-to-local, align 4
  %v1_32757 = load i32, i32* @esp, align 4
  %v2_32757 = inttoptr i32 %v1_32757 to i32*
  store i32 %v3_32754, i32* %v2_32757, align 4
  %v0_3275a = call i32 @unknown_67c93()
  %v0_3275f = load i32, i32* @ebp, align 4
  %v1_3275f = add i32 %v0_3275f, -20
  store i32 %v1_3275f, i32* %eax.global-to-local, align 4
  %v1_32762 = load i32, i32* @esp, align 4
  %v2_32762 = inttoptr i32 %v1_32762 to i32*
  store i32 %v1_3275f, i32* %v2_32762, align 4
  %v0_32765 = call i32 @unknown_5c6d8()
  store i32 %v0_32765, i32* %eax.global-to-local, align 4
  %v1_32770.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_3276a

dec_label_pc_3276a:                               ; preds = %dec_label_pc_32737, %dec_label_pc_3270a
  %v1_32770 = phi i32 [ %v1_32770.pre, %dec_label_pc_32737 ], [ %v16_32732, %dec_label_pc_3270a ]
  %v0_3276a = load i32, i32* @ebp, align 4
  %v1_3276a = add i32 %v0_3276a, -16
  store i32 %v1_3276a, i32* %eax.global-to-local, align 4
  %v1_3276d = add i32 %v0_3276a, -32
  %v2_3276d = inttoptr i32 %v1_3276d to i32*
  %v3_3276d = load i32, i32* %v2_3276d, align 4
  %v2_32770 = add i32 %v1_32770, 4
  %v3_32770 = inttoptr i32 %v2_32770 to i32*
  store i32 %v3_3276d, i32* %v3_32770, align 4
  %v0_32774 = load i32, i32* %eax.global-to-local, align 4
  %v1_32774 = load i32, i32* @esp, align 4
  %v2_32774 = inttoptr i32 %v1_32774 to i32*
  store i32 %v0_32774, i32* %v2_32774, align 4
  %v0_32777 = call i32 @unknown_4f81c()
  %v0_3277c = load i32, i32* @esp, align 4
  %v0_3277f = load i32, i32* @ebp, align 4
  %v1_3277f = add i32 %v0_3277f, -16
  %v3_32782 = inttoptr i32 %v0_3277c to i32*
  store i32 %v1_3277f, i32* %v3_32782, align 4
  %v0_32786 = load i32, i32* @ebp, align 4
  %v1_32786 = add i32 %v0_32786, -20
  store i32 %v1_32786, i32* %eax.global-to-local, align 4
  %v1_32789 = load i32, i32* @esp, align 4
  %v2_32789 = inttoptr i32 %v1_32789 to i32*
  store i32 %v1_32786, i32* %v2_32789, align 4
  %v0_3278c = call i32 @unknown_5c683()
  store i32 %v0_3278c, i32* %eax.global-to-local, align 4
  %v4_32791 = trunc i32 %v0_3278c to i8
  %v5_32791 = icmp eq i8 %v4_32791, 0
  %v1_32793 = icmp eq i1 %v5_32791, false
  %v0_32737 = load i32, i32* @ebp, align 4
  br i1 %v1_32793, label %dec_label_pc_32737, label %dec_label_pc_32795

dec_label_pc_32795:                               ; preds = %dec_label_pc_3276a
  %v1_32795 = add i32 %v0_32737, -12
  %v2_32795 = inttoptr i32 %v1_32795 to i32*
  %v3_32795 = load i32, i32* %v2_32795, align 4
  store i32 %v3_32795, i32* %eax.global-to-local, align 4
  %v1_32798 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32798 = xor i32 %v1_32798, %v3_32795
  %v3_32798 = icmp eq i32 %v2_32798, 0
  store i32 %v2_32798, i32* @eax, align 4
  br i1 %v3_32798, label %bb, label %dec_label_pc_327a1

bb:                                               ; preds = %dec_label_pc_32795
  %v1_3279f = call i32 @function_327a6()
  store i32 %v1_3279f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_327a1

dec_label_pc_327a1:                               ; preds = %bb, %dec_label_pc_32795
  %v3_3279f = phi i32 [ %v1_3279f, %bb ], [ %v2_32798, %dec_label_pc_32795 ]
  ret i32 %v3_3279f

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 12, 13, 14, 15 }
  uselistorder i32 -248, { 0, 1, 5, 2, 3, 4, 6, 8, 9, 10, 7, 11 }
}

define i32 @function_327a6() local_unnamed_addr {
dec_label_pc_327a6:
  %v0_327a7 = load i32, i32* @eax, align 4
  ret i32 %v0_327a7
}

define i32 @_Z14Serialize_implI11CHashWriter6CTxOutSaIS1_EEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_327a8:
  ret i32 %arg2
}

define i32 @function_327da(i32 %arg1) local_unnamed_addr {
dec_label_pc_327da:
  %v0_327da = load i32, i32* @eax, align 4
  %v1_327dd = call i32 @unknown_49f90(i32 %v0_327da)
  %v0_327ef = load i32, i32* @ebp, align 4
  %v1_327ef = add i32 %v0_327ef, -28
  %v2_327ef = inttoptr i32 %v1_327ef to i32*
  %v3_327ef = load i32, i32* %v2_327ef, align 4
  %v3_327f5 = call i32 @unknown_67be2(i32 %v3_327ef, i32 %v1_327dd, i32 0)
  %v0_327fa = load i32, i32* @ebp, align 4
  %v1_327fa = add i32 %v0_327fa, -20
  ret i32 %v1_327fa
}

define i32 @function_3280a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3280a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v2_3280a = load i32, i32* @eax, align 4
  %v4_3280a = mul i32 %v2_3280a, 2
  %v21_3280a = inttoptr i32 %v2_3280a to i32*
  store i32 %v4_3280a, i32* %v21_3280a, align 4
  %v16_3280c = ptrtoint i32* %stack_var_-4 to i32
  br label %dec_label_pc_32844

dec_label_pc_32811:                               ; preds = %dec_label_pc_32844
  %v1_32811 = add i32 %v0_32811, -20
  store i32 %v1_32811, i32* %eax.global-to-local, align 4
  %v1_32814 = load i32, i32* @esp, align 4
  %v2_32814 = inttoptr i32 %v1_32814 to i32*
  store i32 %v1_32811, i32* %v2_32814, align 4
  %v0_32817 = call i32 @unknown_4fc36()
  store i32 %v0_32817, i32* %eax.global-to-local, align 4
  %v0_3281c = load i32, i32* @ebp, align 4
  %v1_3281c = add i32 %v0_3281c, -40
  %v2_3281c = inttoptr i32 %v1_3281c to i32*
  %v3_3281c = load i32, i32* %v2_3281c, align 4
  %v1_3281f = load i32, i32* @esp, align 4
  %v2_3281f = add i32 %v1_3281f, 12
  %v3_3281f = inttoptr i32 %v2_3281f to i32*
  store i32 %v3_3281c, i32* %v3_3281f, align 4
  %v0_32823 = load i32, i32* @ebp, align 4
  %v1_32823 = add i32 %v0_32823, -36
  %v2_32823 = inttoptr i32 %v1_32823 to i32*
  %v3_32823 = load i32, i32* %v2_32823, align 4
  %v1_32826 = load i32, i32* @esp, align 4
  %v2_32826 = add i32 %v1_32826, 8
  %v3_32826 = inttoptr i32 %v2_32826 to i32*
  store i32 %v3_32823, i32* %v3_32826, align 4
  %v0_3282a = load i32, i32* %eax.global-to-local, align 4
  %v1_3282a = load i32, i32* @esp, align 4
  %v2_3282a = add i32 %v1_3282a, 4
  %v3_3282a = inttoptr i32 %v2_3282a to i32*
  store i32 %v0_3282a, i32* %v3_3282a, align 4
  %v0_3282e = load i32, i32* @ebp, align 4
  %v1_3282e = add i32 %v0_3282e, -28
  %v2_3282e = inttoptr i32 %v1_3282e to i32*
  %v3_3282e = load i32, i32* %v2_3282e, align 4
  store i32 %v3_3282e, i32* %eax.global-to-local, align 4
  %v1_32831 = load i32, i32* @esp, align 4
  %v2_32831 = inttoptr i32 %v1_32831 to i32*
  store i32 %v3_3282e, i32* %v2_32831, align 4
  %v0_32834 = call i32 @unknown_67dc9()
  %v0_32839 = load i32, i32* @ebp, align 4
  %v1_32839 = add i32 %v0_32839, -20
  store i32 %v1_32839, i32* %eax.global-to-local, align 4
  %v1_3283c = load i32, i32* @esp, align 4
  %v2_3283c = inttoptr i32 %v1_3283c to i32*
  store i32 %v1_32839, i32* %v2_3283c, align 4
  %v0_3283f = call i32 @unknown_4fbfc()
  store i32 %v0_3283f, i32* %eax.global-to-local, align 4
  %v1_3284a.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_32844

dec_label_pc_32844:                               ; preds = %dec_label_pc_32811, %dec_label_pc_3280a
  %v1_3284a = phi i32 [ %v1_3284a.pre, %dec_label_pc_32811 ], [ %v16_3280c, %dec_label_pc_3280a ]
  %v0_32844 = load i32, i32* @ebp, align 4
  %v1_32844 = add i32 %v0_32844, -16
  store i32 %v1_32844, i32* %eax.global-to-local, align 4
  %v1_32847 = add i32 %v0_32844, -32
  %v2_32847 = inttoptr i32 %v1_32847 to i32*
  %v3_32847 = load i32, i32* %v2_32847, align 4
  %v2_3284a = add i32 %v1_3284a, 4
  %v3_3284a = inttoptr i32 %v2_3284a to i32*
  store i32 %v3_32847, i32* %v3_3284a, align 4
  %v0_3284e = load i32, i32* %eax.global-to-local, align 4
  %v1_3284e = load i32, i32* @esp, align 4
  %v2_3284e = inttoptr i32 %v1_3284e to i32*
  store i32 %v0_3284e, i32* %v2_3284e, align 4
  %v0_32851 = call i32 @unknown_4f996()
  %v0_32856 = load i32, i32* @esp, align 4
  %v0_32859 = load i32, i32* @ebp, align 4
  %v1_32859 = add i32 %v0_32859, -16
  %v3_3285c = inttoptr i32 %v0_32856 to i32*
  store i32 %v1_32859, i32* %v3_3285c, align 4
  %v0_32860 = load i32, i32* @ebp, align 4
  %v1_32860 = add i32 %v0_32860, -20
  store i32 %v1_32860, i32* %eax.global-to-local, align 4
  %v1_32863 = load i32, i32* @esp, align 4
  %v2_32863 = inttoptr i32 %v1_32863 to i32*
  store i32 %v1_32860, i32* %v2_32863, align 4
  %v0_32866 = call i32 @unknown_5c81b()
  store i32 %v0_32866, i32* %eax.global-to-local, align 4
  %v4_3286b = trunc i32 %v0_32866 to i8
  %v5_3286b = icmp eq i8 %v4_3286b, 0
  %v1_3286d = icmp eq i1 %v5_3286b, false
  %v0_32811 = load i32, i32* @ebp, align 4
  br i1 %v1_3286d, label %dec_label_pc_32811, label %dec_label_pc_3286f

dec_label_pc_3286f:                               ; preds = %dec_label_pc_32844
  %v1_3286f = add i32 %v0_32811, -12
  %v2_3286f = inttoptr i32 %v1_3286f to i32*
  %v3_3286f = load i32, i32* %v2_3286f, align 4
  store i32 %v3_3286f, i32* %eax.global-to-local, align 4
  %v1_32872 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32872 = xor i32 %v1_32872, %v3_3286f
  %v3_32872 = icmp eq i32 %v2_32872, 0
  store i32 %v2_32872, i32* @eax, align 4
  br i1 %v3_32872, label %bb, label %dec_label_pc_3287b

bb:                                               ; preds = %dec_label_pc_3286f
  %v1_32879 = call i32 @function_32880()
  store i32 %v1_32879, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3287b

dec_label_pc_3287b:                               ; preds = %bb, %dec_label_pc_3286f
  %v2_32879 = phi i32 [ %v1_32879, %bb ], [ %v2_32872, %dec_label_pc_3286f ]
  ret i32 %v2_32879

; uselistorder directives
  uselistorder i32 %v2_3280a, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 7, 8, 9, 10, 11, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* @esp, { 88, 89, 90, 0, 82, 83, 84, 85, 86, 87, 97, 98, 99, 1, 91, 92, 93, 94, 95, 96, 15, 16, 17, 18, 19, 20, 21, 22, 414, 415, 416, 417, 418, 419, 420, 421, 410, 23, 411, 412, 165, 40, 164, 2, 407, 408, 309, 24, 25, 131, 132, 133, 152, 153, 154, 155, 156, 157, 158, 159, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 41, 42, 43, 44, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 409, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 413, 66, 3, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 4, 160, 119, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 215, 291, 288, 289, 290, 5, 285, 286, 287, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 276, 277, 278, 279, 280, 281, 282, 283, 284, 310, 311, 166, 167, 161, 162, 163, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 174, 175, 176, 177, 201, 202, 203, 6, 197, 198, 199, 200, 218, 219, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 242, 243, 244, 245, 246, 247, 248, 249, 237, 238, 233, 234, 235, 236, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 254, 255, 250, 251, 252, 253, 256, 257, 258, 292, 293, 294, 306, 307, 308, 301, 302, 295, 296, 297, 298, 299, 300, 303, 304, 305, 312, 331, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 403, 404, 405, 406, 395, 396, 397, 332, 333, 7, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 363, 364, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 9, 10, 11, 12, 13, 14, 8 }
}

define i32 @function_32880() local_unnamed_addr {
dec_label_pc_32880:
  %v0_32881 = load i32, i32* @eax, align 4
  ret i32 %v0_32881
}

define i32 @_ZNK5boost6tuples4consI7uint256NS1_ISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEEE8get_tailEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32882:
  %v1_3289c = add i32 %arg1, 32
  ret i32 %v1_3289c
}

define i32 @function_328a4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_328a4:
  %v0_328a4 = load i32, i32* @eax, align 4
  %v1_328a4 = load i1, i1* @cf, align 1
  %v2_328a4 = zext i1 %v1_328a4 to i32
  %v3_328a4 = add i32 %v0_328a4, 20
  %v4_328a4 = add i32 %v3_328a4, %v2_328a4
  %v14_328a4 = icmp eq i32 %v4_328a4, 0
  store i32 %v4_328a4, i32* @eax, align 4
  br i1 %v14_328a4, label %bb, label %dec_label_pc_328ab

bb:                                               ; preds = %dec_label_pc_328a4
  %v1_328a9 = call i32 @function_328b0()
  br label %dec_label_pc_328ab

dec_label_pc_328ab:                               ; preds = %bb, %dec_label_pc_328a4
  %v2_328a9 = phi i32 [ %v1_328a9, %bb ], [ %v4_328a4, %dec_label_pc_328a4 ]
  ret i32 %v2_328a9
}

define i32 @function_328b0() local_unnamed_addr {
dec_label_pc_328b0:
  %v0_328b1 = load i32, i32* @eax, align 4
  ret i32 %v0_328b1
}

define i32 @_ZN5boost6tuples6detail2ltINS0_4consISt6vectorIhSaIhEENS3_I7CPubKeyNS0_9null_typeEEEEESA_EEbRKT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_328b2:
  %v1_328d6 = call i32 @unknown_68034(i32 %arg2)
  ret i32 %v1_328d6
}

define i32 @function_328de(i32 %arg1) local_unnamed_addr {
dec_label_pc_328de:
  %v0_328de = load i32, i32* @ebp, align 4
  %v1_328de = add i32 %v0_328de, 1
  store i32 %v1_328de, i32* @ebp, align 4
  %v1_328e3 = call i32 @unknown_68034(i32 ptrtoint (i32* @9 to i32))
  %v0_328e8 = load i32, i32* @ebx, align 4
  %v2_328ef = call i32 @unknown_5ab71(i32 %v1_328e3, i32 %v0_328e8)
  %v4_328f4 = trunc i32 %v2_328ef to i8
  %v5_328f4 = icmp eq i8 %v4_328f4, 0
  %v1_328f6 = icmp eq i1 %v5_328f4, false
  br i1 %v1_328f6, label %bb, label %dec_label_pc_328f8

bb:                                               ; preds = %dec_label_pc_328de
  %v2_328f6 = call i32 @function_3294b()
  br label %dec_label_pc_328f8

dec_label_pc_328f8:                               ; preds = %bb, %dec_label_pc_328de
  %v0_328f8 = load i32, i32* @ebp, align 4
  %v1_328f8 = add i32 %v0_328f8, -28
  %v2_328f8 = inttoptr i32 %v1_328f8 to i32*
  %v3_328f8 = load i32, i32* %v2_328f8, align 4
  %v1_328fe = call i32 @unknown_68034(i32 %v3_328f8)
  %v0_32905 = load i32, i32* @ebp, align 4
  %v1_32905 = add i32 %v0_32905, -32
  %v2_32905 = inttoptr i32 %v1_32905 to i32*
  %v3_32905 = load i32, i32* %v2_32905, align 4
  ret i32 %v3_32905
}

define i32 @function_3290b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3290b:
  %v1_3290b = call i32 @unknown_68034(i32 ptrtoint (i32* @9 to i32))
  %v0_32910 = load i32, i32* @ebx, align 4
  %v2_32917 = call i32 @unknown_5ab71(i32 %v1_3290b, i32 %v0_32910)
  %v1_3291c = xor i32 %v2_32917, 1
  %v4_3291c = trunc i32 %v1_3291c to i8
  %v5_3291f = icmp eq i8 %v4_3291c, 0
  br i1 %v5_3291f, label %bb, label %dec_label_pc_32923

bb:                                               ; preds = %dec_label_pc_3290b
  %v1_32921 = call i32 @function_32952()
  br label %dec_label_pc_32923

dec_label_pc_32923:                               ; preds = %bb, %dec_label_pc_3290b
  %v0_32923 = load i32, i32* @ebp, align 4
  %v1_32923 = add i32 %v0_32923, -32
  %v2_32923 = inttoptr i32 %v1_32923 to i32*
  %v3_32923 = load i32, i32* %v2_32923, align 4
  %v1_32929 = call i32 @unknown_67f30(i32 %v3_32923)
  store i32 %v1_32929, i32* @ebx, align 4
  %v0_32930 = load i32, i32* @ebp, align 4
  %v1_32930 = add i32 %v0_32930, -28
  %v2_32930 = inttoptr i32 %v1_32930 to i32*
  %v3_32930 = load i32, i32* %v2_32930, align 4
  %v1_32936 = call i32 @unknown_67f30(i32 %v3_32930)
  %v0_3293b = load i32, i32* @ebx, align 4
  %v2_32942 = call i32 @unknown_67f60(i32 %v1_32936, i32 %v0_3293b)
  ret i32 %v2_32942

; uselistorder directives
  uselistorder i32 (i32)* @unknown_67f30, { 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_5ab71, { 1, 0 }
  uselistorder i32 (i32)* @unknown_68034, { 2, 1, 0, 3 }
}

define i32 @function_3294b() local_unnamed_addr {
dec_label_pc_3294b:
  store i32 1, i32* @eax, align 4
  %v0_32950 = call i32 @function_32957()
  ret i32 %v0_32950
}

define i32 @function_32952() local_unnamed_addr {
dec_label_pc_32952:
  ret i32 0
}

define i32 @function_32957() local_unnamed_addr {
dec_label_pc_32957:
  %v0_32957 = load i32, i32* @ebp, align 4
  %v1_32957 = add i32 %v0_32957, -12
  %v2_32957 = inttoptr i32 %v1_32957 to i32*
  %v3_32957 = load i32, i32* %v2_32957, align 4
  %v1_3295a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3295a = icmp eq i32 %v1_3295a, %v3_32957
  br i1 %v3_3295a, label %bb, label %dec_label_pc_32957.dec_label_pc_32963_crit_edge

dec_label_pc_32957.dec_label_pc_32963_crit_edge:  ; preds = %dec_label_pc_32957
  %v2_32961.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_32963

bb:                                               ; preds = %dec_label_pc_32957
  %v1_32961 = call i32 @function_32968()
  br label %dec_label_pc_32963

dec_label_pc_32963:                               ; preds = %dec_label_pc_32957.dec_label_pc_32963_crit_edge, %bb
  %v2_32961 = phi i32 [ %v2_32961.pre, %dec_label_pc_32957.dec_label_pc_32963_crit_edge ], [ %v1_32961, %bb ]
  ret i32 %v2_32961

; uselistorder directives
  uselistorder label %dec_label_pc_32963, { 1, 0 }
}

define i32 @function_32968() local_unnamed_addr {
dec_label_pc_32968:
  %v0_3296d = load i32, i32* @eax, align 4
  ret i32 %v0_3296d
}

define i32 @_ZNK5boost6tuples4consI7uint256NS1_ISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEEEE8get_headEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3296e:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32994

bb:                                               ; preds = %dec_label_pc_3296e
  %v2_32992 = call i32 @function_32999(i32 %arg1)
  br label %dec_label_pc_32994

dec_label_pc_32994:                               ; preds = %bb, %dec_label_pc_3296e
  %v3_32992 = phi i32 [ %v2_32992, %bb ], [ %arg1, %dec_label_pc_3296e ]
  ret i32 %v3_32992
}

define i32 @function_32999(i32 %arg1) local_unnamed_addr {
dec_label_pc_32999:
  %v0_3299a = load i32, i32* @eax, align 4
  ret i32 %v0_3299a
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE11_M_leftmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3299c:
  %v1_329b6 = add i32 %arg1, 12
  store i32 %v1_329b6, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_329c5

bb:                                               ; preds = %dec_label_pc_3299c
  %v2_329c3 = call i32 @function_329ca(i32 %arg1)
  br label %dec_label_pc_329c5

dec_label_pc_329c5:                               ; preds = %bb, %dec_label_pc_3299c
  %v3_329c3 = phi i32 [ %v2_329c3, %bb ], [ %v1_329b6, %dec_label_pc_3299c ]
  ret i32 %v3_329c3
}

define i32 @function_329ca(i32 %arg1) local_unnamed_addr {
dec_label_pc_329ca:
  %v0_329cb = load i32, i32* @eax, align 4
  ret i32 %v0_329cb
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE7_M_rootEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_329cc:
  %v1_329e6 = add i32 %arg1, 8
  ret i32 %v1_329e6
}

define i32 @function_329ea(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_329ea:
  %v0_329ec = load i32, i32* @edx, align 4
  %v1_329ec = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_329ec = icmp eq i32 %v1_329ec, %v0_329ec
  br i1 %v3_329ec, label %bb, label %dec_label_pc_329ea.dec_label_pc_329f5_crit_edge

dec_label_pc_329ea.dec_label_pc_329f5_crit_edge:  ; preds = %dec_label_pc_329ea
  %v2_329f3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_329f5

bb:                                               ; preds = %dec_label_pc_329ea
  %v1_329f3 = call i32 @function_329fa()
  br label %dec_label_pc_329f5

dec_label_pc_329f5:                               ; preds = %dec_label_pc_329ea.dec_label_pc_329f5_crit_edge, %bb
  %v2_329f3 = phi i32 [ %v2_329f3.pre, %dec_label_pc_329ea.dec_label_pc_329f5_crit_edge ], [ %v1_329f3, %bb ]
  ret i32 %v2_329f3

; uselistorder directives
  uselistorder label %dec_label_pc_329f5, { 1, 0 }
}

define i32 @function_329fa() local_unnamed_addr {
dec_label_pc_329fa:
  %v0_329fb = load i32, i32* @eax, align 4
  ret i32 %v0_329fb
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE12_M_rightmostEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_329fc:
  %v1_32a16 = add i32 %arg1, 16
  store i32 %v1_32a16, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32a25

bb:                                               ; preds = %dec_label_pc_329fc
  %v2_32a23 = call i32 @function_32a2a(i32 %arg1)
  br label %dec_label_pc_32a25

dec_label_pc_32a25:                               ; preds = %bb, %dec_label_pc_329fc
  %v3_32a23 = phi i32 [ %v2_32a23, %bb ], [ %v1_32a16, %dec_label_pc_329fc ]
  ret i32 %v3_32a23
}

define i32 @function_32a2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_32a2a:
  %v0_32a2b = load i32, i32* @eax, align 4
  ret i32 %v0_32a2b
}

define i32 @_ZNSt8_Rb_treeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS1_9null_typeES8_S8_S8_S8_S8_S8_EES9_St9_IdentityIS9_ESt4lessIS9_ESaIS9_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS9_E(i32 %arg1) local_unnamed_addr {
dec_label_pc_32a2c:
  ret i32 %arg1
}

define i32 @function_32a3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32a3a:
  %v0_32a3c = load i32, i32* @ebp, align 4
  %v1_32a3c = add i32 %v0_32a3c, 1
  store i32 %v1_32a3c, i32* @ebp, align 4
  %v0_32a3d = load i32, i32* @ecx, align 4
  %v1_32a3d = add i32 %v0_32a3d, -1
  store i32 %v1_32a3d, i32* @ecx, align 4
  %v0_32a3f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_32a44 = add i32 %v0_32a3c, -11
  %v3_32a44 = inttoptr i32 %v2_32a44 to i32*
  store i32 %v0_32a3f, i32* %v3_32a44, align 4
  %v0_32a49 = load i32, i32* @ebp, align 4
  %v1_32a49 = add i32 %v0_32a49, -28
  %v2_32a49 = inttoptr i32 %v1_32a49 to i32*
  %v3_32a49 = load i32, i32* %v2_32a49, align 4
  %v1_32a4c = add i32 %v3_32a49, 4
  store i32 %v1_32a4c, i32* @edx, align 4
  %v1_32a4f = add i32 %v0_32a49, -32
  %v2_32a4f = inttoptr i32 %v1_32a4f to i32*
  %v3_32a4f = load i32, i32* %v2_32a4f, align 4
  ret i32 %v3_32a4f

; uselistorder directives
  uselistorder i32 -11, { 4, 0, 1, 5, 6, 7, 8, 2, 9, 10, 3, 11 }
}

define i32 @function_32a8e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_32a8e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32a92() local_unnamed_addr {
dec_label_pc_32a92:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32a92 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32a92 = add i32 %v0_32a92, -1
  store i32 %v1_32a92, i32* %ecx.global-to-local, align 4
  %v0_32a94 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32a94
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS3_9null_typeESA_SA_SA_SA_SA_SA_EEEE8allocateEjPKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_32a96:
  ret i32 %arg1
}

define i32 @function_32aa3() local_unnamed_addr {
dec_label_pc_32aa3:
  %eax.global-to-local = alloca i32, align 4
  %v15_32aa3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v15_32aa3
}

define i32 @function_32ac6(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ac6:
  %v0_32ac6 = load i32, i32* @ecx, align 4
  %v1_32ac6 = add i32 %v0_32ac6, -1
  store i32 %v1_32ac6, i32* @ecx, align 4
  %v2_32ac6 = icmp eq i32 %v1_32ac6, 0
  %v3_32ac6 = load i1, i1* @zf, align 1
  %v4_32ac6 = or i1 %v2_32ac6, %v3_32ac6
  br i1 %v4_32ac6, label %dec_label_pc_32ac6.dec_label_pc_32ac8_crit_edge, label %bb

dec_label_pc_32ac6.dec_label_pc_32ac8_crit_edge:  ; preds = %dec_label_pc_32ac6
  br label %dec_label_pc_32ac8

bb:                                               ; preds = %dec_label_pc_32ac6
  %v6_32ac6 = call i32 @function_32ad7()
  br label %dec_label_pc_32ac8

dec_label_pc_32ac8:                               ; preds = %dec_label_pc_32ac6.dec_label_pc_32ac8_crit_edge, %bb
  %v1_32ac8 = load i32, i32* @edx, align 4
  ret i32 %v1_32ac8

; uselistorder directives
  uselistorder i32 %v1_32ac6, { 1, 0 }
  uselistorder label %dec_label_pc_32ac8, { 1, 0 }
}

define i32 @function_32ad7() local_unnamed_addr {
dec_label_pc_32ad7:
  %v0_32ad7 = load i32, i32* @ecx, align 4
  %v2_32ad7 = icmp eq i32 %v0_32ad7, 1
  %v3_32ad7 = load i1, i1* @zf, align 1
  %v4_32ad7 = or i1 %v2_32ad7, %v3_32ad7
  br i1 %v4_32ad7, label %dec_label_pc_32ad7.dec_label_pc_32ad9_crit_edge, label %bb

dec_label_pc_32ad7.dec_label_pc_32ad9_crit_edge:  ; preds = %dec_label_pc_32ad7
  %v3_32ad9.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_32ad9

bb:                                               ; preds = %dec_label_pc_32ad7
  %v6_32ad7 = call i32 @function_32ae0()
  br label %dec_label_pc_32ad9

dec_label_pc_32ad9:                               ; preds = %dec_label_pc_32ad7.dec_label_pc_32ad9_crit_edge, %bb
  %v3_32ad9 = phi i32 [ %v3_32ad9.pre, %dec_label_pc_32ad7.dec_label_pc_32ad9_crit_edge ], [ %v6_32ad7, %bb ]
  ret i32 %v3_32ad9

; uselistorder directives
  uselistorder label %dec_label_pc_32ad9, { 1, 0 }
}

define i32 @function_32ae0() local_unnamed_addr {
dec_label_pc_32ae0:
  %v0_32ae0 = load i32, i32* @ebx, align 4
  %v1_32ae0 = add i32 %v0_32ae0, 862319701
  %v2_32ae0 = inttoptr i32 %v1_32ae0 to i32*
  %v3_32ae0 = load i32, i32* %v2_32ae0, align 4
  %v4_32ae0 = add i32 %v3_32ae0, -1
  store i32 %v4_32ae0, i32* %v2_32ae0, align 4
  %v0_32ae6 = load i32, i32* @eax, align 4
  %v1_32ae6 = load i1, i1* @cf, align 1
  %v2_32ae6 = zext i1 %v1_32ae6 to i32
  %v3_32ae6 = add i32 %v0_32ae6, 20
  %v4_32ae6 = add i32 %v3_32ae6, %v2_32ae6
  %v14_32ae6 = icmp eq i32 %v4_32ae6, 0
  store i32 %v4_32ae6, i32* @eax, align 4
  br i1 %v14_32ae6, label %bb, label %dec_label_pc_32aed

bb:                                               ; preds = %dec_label_pc_32ae0
  %v1_32aeb = call i32 @function_32af2()
  br label %dec_label_pc_32aed

dec_label_pc_32aed:                               ; preds = %bb, %dec_label_pc_32ae0
  %v2_32aeb = phi i32 [ %v1_32aeb, %bb ], [ %v4_32ae6, %dec_label_pc_32ae0 ]
  ret i32 %v2_32aeb
}

define i32 @function_32af2() local_unnamed_addr {
dec_label_pc_32af2:
  %v0_32af3 = load i32, i32* @eax, align 4
  ret i32 %v0_32af3
}

define i32 @_ZN9__gnu_cxx13new_allocatorIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS2_9null_typeES9_S9_S9_S9_S9_S9_EEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32af4:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32b17

bb:                                               ; preds = %dec_label_pc_32af4
  %v2_32b15 = call i32 @function_32b1c(i32 %arg1)
  br label %dec_label_pc_32b17

dec_label_pc_32b17:                               ; preds = %bb, %dec_label_pc_32af4
  %v3_32b15 = phi i32 [ %v2_32b15, %bb ], [ 0, %dec_label_pc_32af4 ]
  ret i32 %v3_32b15

; uselistorder directives
  uselistorder i32 (i32)* @function_32b1c, { 1, 0 }
}

define i32 @function_32b1c(i32 %arg1) local_unnamed_addr {
dec_label_pc_32b1c:
  %v0_32b1d = load i32, i32* @eax, align 4
  ret i32 %v0_32b1d
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIK10txnouttype7CScriptEEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_32b1e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_32b41

bb:                                               ; preds = %dec_label_pc_32b1e
  %v2_32b3f = call i32 @function_32b46(i32 %arg1)
  br label %dec_label_pc_32b41

dec_label_pc_32b41:                               ; preds = %bb, %dec_label_pc_32b1e
  %v3_32b3f = phi i32 [ %v2_32b3f, %bb ], [ 0, %dec_label_pc_32b1e ]
  ret i32 %v3_32b3f
}

define i32 @function_32b46(i32 %arg1) local_unnamed_addr {
dec_label_pc_32b46:
  %v0_32b47 = load i32, i32* @eax, align 4
  ret i32 %v0_32b47
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32b48:
  %v1_32b71 = call i32 @unknown_68328(i32 %arg1)
  ret i32 %v1_32b71
}

define i32 @function_32b7a() local_unnamed_addr {
dec_label_pc_32b7a:
  %v1_32b7a = load i32, i32* @edx, align 4
  ret i32 %v1_32b7a
}

define i32 @function_32ba3() local_unnamed_addr {
dec_label_pc_32ba3:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_32ba3 = load i32, i32* %ecx.global-to-local, align 4
  %v1_32ba3 = add i32 %v0_32ba3, -1
  store i32 %v1_32ba3, i32* %ecx.global-to-local, align 4
  %v0_32ba5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32ba5
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv14CNoDestinationNS_7variantIS9_6CKeyID9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32ba6:
  %edx.global-to-local = alloca i32, align 4
  %v0_32bdc = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_32bdc, 16777216
  %v5_32bfb = sdiv i32 %sext, 16777216
  %v6_32bfb = call i32 @unknown_683b5(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_32bfb)
  store i32 %v6_32bfb, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_32c0c

bb:                                               ; preds = %dec_label_pc_32ba6
  %v1_32c0a = call i32 @function_32c11()
  br label %dec_label_pc_32c0c

dec_label_pc_32c0c:                               ; preds = %bb, %dec_label_pc_32ba6
  %v2_32c0a = phi i32 [ %v1_32c0a, %bb ], [ %v6_32bfb, %dec_label_pc_32ba6 ]
  ret i32 %v2_32c0a
}

define i32 @function_32c11() local_unnamed_addr {
dec_label_pc_32c11:
  %v0_32c12 = load i32, i32* @eax, align 4
  ret i32 %v0_32c12
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv6CKeyIDNS_7variantI14CNoDestinationS9_9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32c13:
  %edx.global-to-local = alloca i32, align 4
  %v0_32c49 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_32c49, 16777216
  %v5_32c68 = sdiv i32 %sext, 16777216
  %v6_32c68 = call i32 @unknown_68487(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_32c68)
  store i32 %v6_32c68, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_32c79

bb:                                               ; preds = %dec_label_pc_32c13
  %v1_32c77 = call i32 @function_32c7e()
  br label %dec_label_pc_32c79

dec_label_pc_32c79:                               ; preds = %bb, %dec_label_pc_32c13
  %v2_32c77 = phi i32 [ %v1_32c77, %bb ], [ %v6_32c68, %dec_label_pc_32c13 ]
  ret i32 %v2_32c77
}

define i32 @function_32c7e() local_unnamed_addr {
dec_label_pc_32c7e:
  %v0_32c7f = load i32, i32* @eax, align 4
  ret i32 %v0_32c7f
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS9_NS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_32c80:
  %edx.global-to-local = alloca i32, align 4
  %v0_32cb6 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_32cb6, 16777216
  %v5_32cd5 = sdiv i32 %sext, 16777216
  %v6_32cd5 = call i32 @unknown_68559(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_32cd5)
  store i32 %v6_32cd5, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_32ce6

bb:                                               ; preds = %dec_label_pc_32c80
  %v1_32ce4 = call i32 @function_32ceb()
  br label %dec_label_pc_32ce6

dec_label_pc_32ce6:                               ; preds = %bb, %dec_label_pc_32c80
  %v2_32ce4 = phi i32 [ %v1_32ce4, %bb ], [ %v6_32cd5, %dec_label_pc_32c80 ]
  ret i32 %v2_32ce4
}

define i32 @function_32ceb() local_unnamed_addr {
dec_label_pc_32ceb:
  %v0_32cec = load i32, i32* @eax, align 4
  ret i32 %v0_32cec
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ced:
  ret i32 %arg2
}

define i32 @function_32d01(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32d01:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_32d01 = load i32, i32* @ecx, align 4
  %v1_32d01 = add i32 %v0_32d01, 1166793797
  %v2_32d01 = inttoptr i32 %v1_32d01 to i8*
  %v3_32d01 = load i8, i8* %v2_32d01, align 1
  %v5_32d01 = trunc i32 %v0_32d01 to i8
  %v6_32d01 = load i1, i1* @cf, align 1
  %v7_32d01 = zext i1 %v6_32d01 to i8
  %v8_32d01 = add i8 %v3_32d01, %v5_32d01
  %v9_32d01 = add i8 %v7_32d01, %v8_32d01
  %v27_32d01 = icmp ule i8 %v9_32d01, %v3_32d01
  %v28_32d01 = icmp ult i8 %v8_32d01, %v3_32d01
  %v29_32d01 = select i1 %v6_32d01, i1 %v27_32d01, i1 %v28_32d01
  store i1 %v29_32d01, i1* %cf.global-to-local, align 1
  store i8 %v9_32d01, i8* %v2_32d01, align 1
  %v0_32d07 = load i32, i32* @eax, align 4
  %v1_32d07 = trunc i32 %v0_32d07 to i8
  %v2_32d07 = load i1, i1* %cf.global-to-local, align 1
  %v3_32d07 = zext i1 %v2_32d07 to i8
  %v4_32d07 = add i8 %v1_32d07, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_32d07 = add i8 %v4_32d07, %v3_32d07
  %v20_32d07 = add i8 %v1_32d07, -119
  %v21_32d07 = add i8 %v20_32d07, %v3_32d07
  %v22_32d07 = icmp ule i8 %v21_32d07, %v1_32d07
  %v23_32d07 = icmp ugt i8 %v1_32d07, 118
  %v24_32d07 = select i1 %v2_32d07, i1 %v22_32d07, i1 %v23_32d07
  store i1 %v24_32d07, i1* %cf.global-to-local, align 1
  %v25_32d07 = zext i8 %v5_32d07 to i32
  %v27_32d07 = and i32 %v0_32d07, -256
  %v28_32d07 = or i32 %v25_32d07, %v27_32d07
  store i32 %v28_32d07, i32* %eax.global-to-local, align 4
  %v0_32d09 = load i32, i32* @ebp, align 4
  %v1_32d09 = add i32 %v0_32d09, 1
  store i32 %v1_32d09, i32* %ebp.global-to-local, align 4
  %v1_32d0e = add i32 %v28_32d07, 1166792517
  %v2_32d0e = inttoptr i32 %v1_32d0e to i8*
  %v3_32d0e = load i8, i8* %v2_32d0e, align 1
  %v4_32d0e = load i32, i32* @ecx, align 4
  %v5_32d0e = trunc i32 %v4_32d0e to i8
  %v7_32d0e = zext i1 %v24_32d07 to i8
  %v8_32d0e = sub i8 %v3_32d0e, %v5_32d0e
  %v9_32d0e = add i8 %v8_32d0e, %v7_32d0e
  %v19_32d0e = sub i8 %v8_32d0e, %v7_32d0e
  %v20_32d0e = icmp ult i8 %v3_32d0e, %v19_32d0e
  %v21_32d0e = icmp ne i8 %v5_32d0e, -1
  %v22_32d0e = or i1 %v21_32d0e, %v20_32d0e
  %v23_32d0e = icmp ult i8 %v3_32d0e, %v5_32d0e
  %v24_32d0e = select i1 %v24_32d07, i1 %v22_32d0e, i1 %v23_32d0e
  store i1 %v24_32d0e, i1* %cf.global-to-local, align 1
  store i8 %v9_32d0e, i8* %v2_32d0e, align 1
  %v0_32d14 = load i32, i32* %eax.global-to-local, align 4
  %v1_32d14 = trunc i32 %v0_32d14 to i8
  %v2_32d14 = load i1, i1* %cf.global-to-local, align 1
  %v3_32d14 = zext i1 %v2_32d14 to i32
  %v4_32d14 = add i32 %v0_32d14, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32))
  %v5_32d14 = add i32 %v4_32d14, %v3_32d14
  %v17_32d14 = icmp ult i8 %v1_32d14, -119
  %v18_32d14 = or i1 %v2_32d14, %v17_32d14
  store i1 %v18_32d14, i1* %cf.global-to-local, align 1
  %v31_32d14 = urem i32 %v5_32d14, 256
  %v33_32d14 = and i32 %v0_32d14, -256
  %v34_32d14 = or i32 %v31_32d14, %v33_32d14
  store i32 %v34_32d14, i32* %eax.global-to-local, align 4
  %v0_32d16 = load i32, i32* %ebp.global-to-local, align 4
  %v1_32d16 = add i32 %v0_32d16, 1
  store i32 %v1_32d16, i32* %ebp.global-to-local, align 4
  %v1_32d17 = add i32 %v0_32d16, -94
  %v2_32d17 = inttoptr i32 %v1_32d17 to i8*
  %v3_32d17 = load i8, i8* %v2_32d17, align 1
  %v5_32d17 = mul i8 %v3_32d17, 2
  store i8 %v5_32d17, i8* %v2_32d17, align 1
  %v16_32d17 = icmp slt i8 %v3_32d17, 0
  %v0_32d1a = load i32, i32* %eax.global-to-local, align 4
  %v1_32d1a = trunc i32 %v0_32d1a to i8
  %v3_32d1a = zext i1 %v16_32d17 to i8
  %v4_32d1a = add i8 %v1_32d1a, %v3_32d1a
  %v19_32d1a = icmp ule i8 %v4_32d1a, %v1_32d1a
  %v21_32d1a = icmp eq i1 %v16_32d17, %v19_32d1a
  store i1 %v21_32d1a, i1* %cf.global-to-local, align 1
  %v22_32d1a = zext i8 %v4_32d1a to i32
  %v24_32d1a = and i32 %v0_32d1a, -256
  %v25_32d1a = or i32 %v22_32d1a, %v24_32d1a
  store i32 %v25_32d1a, i32* %eax.global-to-local, align 4
  %v1_32d1c = inttoptr i32 %v25_32d1a to i8*
  %v2_32d1c = load i8, i8* %v1_32d1c, align 1
  %v5_32d1c = add i8 %v2_32d1c, %v4_32d1a
  store i8 %v5_32d1c, i8* %v1_32d1c, align 1
  %v0_32d1e = load i32, i32* %eax.global-to-local, align 4
  %v1_32d1e = load i32, i32* %ebp.global-to-local, align 4
  %v2_32d1e = add i32 %v1_32d1e, -12
  %v3_32d1e = inttoptr i32 %v2_32d1e to i32*
  store i32 %v0_32d1e, i32* %v3_32d1e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_32d1a, { 0, 2, 1 }
  uselistorder i8 %v1_32d1a, { 1, 0 }
  uselistorder i8 %v3_32d17, { 1, 0 }
  uselistorder i1 %v2_32d14, { 1, 0 }
  uselistorder i32 %v0_32d14, { 1, 0, 2 }
  uselistorder i8 %v8_32d0e, { 1, 0 }
  uselistorder i8 %v7_32d0e, { 1, 0 }
  uselistorder i8 %v5_32d0e, { 1, 0, 2 }
  uselistorder i1 %v24_32d07, { 1, 0, 2 }
  uselistorder i8 %v9_32d01, { 1, 0 }
  uselistorder i8 %v8_32d01, { 1, 0 }
}

define i32 @function_32d2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_32d2a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32d36(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_32d36:
  %eax.global-to-local = alloca i32, align 4
  %v0_32d36 = load i32, i32* @eax, align 4
  %v2_32d36 = add i32 %v0_32d36, 52
  %v16_32d36 = and i32 %v2_32d36, 255
  %v18_32d36 = and i32 %v0_32d36, -256
  %v19_32d36 = or i32 %v16_32d36, %v18_32d36
  store i32 %v19_32d36, i32* %eax.global-to-local, align 4
  %v1_32d38 = inttoptr i32 %v19_32d36 to i8*
  store i8 0, i8* %v1_32d38, align 1
  %v3_32d3b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_32d3b

; uselistorder directives
  uselistorder i32 %v0_32d36, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT1_11result_typeEiiRSP_T2_NS3_5bool_ILb1EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_32d47:
  %eax.global-to-local = alloca i32, align 4
  %v17_32d4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_32d4a
}

define i32 @function_32d8d() local_unnamed_addr {
dec_label_pc_32d8d:
  %eax.global-to-local = alloca i32, align 4
  %v0_32d8d = load i32, i32* %eax.global-to-local, align 4
  %v11_32d8d = or i32 %v0_32d8d, 208
  store i32 %v11_32d8d, i32* @eax, align 4
  %v0_32d8f = call i32 @function_44ca2d94()
  store i32 %v0_32d8f, i32* %eax.global-to-local, align 4
  ret i32 %v0_32d8f
}

define i32 @function_32d9a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32d9a:
  %v3_32da2 = load i32, i32* @eax, align 4
  ret i32 %v3_32da2
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPSt6vectorIhSaIhEES4_IS6_SaIS6_EEEES7_EET0_T_SC_SB_(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dae:
  ret i32 %arg1
}

define i32 @function_32dba(i32 %arg1) local_unnamed_addr {
dec_label_pc_32dba:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_32dbc = load i32, i32* @ebp, align 4
  %v0_32dbd = load i32, i32* @eax, align 4
  %v2_32dbd = or i32 %v0_32dbd, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_32dbd, i32* %eax.global-to-local, align 4
  %v0_32dc0 = load i32, i32* @ecx, align 4
  %v1_32dc0 = add i32 %v0_32dc0, 255
  %v1_32dc2 = add i32 %v0_32dbc, 3
  store i32 %v1_32dc2, i32* @ebp, align 4
  %v1_32dc3 = add i32 %v0_32dc0, -1587159996
  %v2_32dc3 = inttoptr i32 %v1_32dc3 to i8*
  %v3_32dc3 = load i8, i8* %v2_32dc3, align 1
  %v5_32dc3 = trunc i32 %v1_32dc0 to i8
  %v8_32dc3 = add i8 %v3_32dc3, %v5_32dc3
  %v28_32dc3 = icmp ult i8 %v8_32dc3, %v3_32dc3
  store i1 %v28_32dc3, i1* %cf.global-to-local, align 1
  store i8 %v8_32dc3, i8* %v2_32dc3, align 1
  %v0_32dc9 = load i32, i32* %eax.global-to-local, align 4
  %v1_32dc9 = trunc i32 %v0_32dc9 to i8
  %v2_32dc9 = load i1, i1* %cf.global-to-local, align 1
  %v3_32dc9 = zext i1 %v2_32dc9 to i8
  %v4_32dc9 = add i8 %v3_32dc9, %v1_32dc9
  %v19_32dc9 = icmp ule i8 %v4_32dc9, %v1_32dc9
  %v21_32dc9 = icmp eq i1 %v2_32dc9, %v19_32dc9
  store i1 %v21_32dc9, i1* %cf.global-to-local, align 1
  %v22_32dc9 = zext i8 %v4_32dc9 to i32
  %v24_32dc9 = and i32 %v0_32dc9, -256
  %v25_32dc9 = or i32 %v22_32dc9, %v24_32dc9
  store i32 %v25_32dc9, i32* %eax.global-to-local, align 4
  %v1_32dcb = inttoptr i32 %v25_32dc9 to i8*
  %v2_32dcb = load i8, i8* %v1_32dcb, align 1
  %v5_32dcb = add i8 %v2_32dcb, %v4_32dc9
  store i8 %v5_32dcb, i8* %v1_32dcb, align 1
  %v0_32dcd = load i32, i32* %eax.global-to-local, align 4
  %v1_32dcd = load i32, i32* @ebp, align 4
  %v2_32dcd = add i32 %v1_32dcd, -12
  %v3_32dcd = inttoptr i32 %v2_32dcd to i32*
  store i32 %v0_32dcd, i32* %v3_32dcd, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_32dd2 = load i32, i32* @ebp, align 4
  %v1_32dd2 = add i32 %v0_32dd2, -36
  %v2_32dd2 = inttoptr i32 %v1_32dd2 to i32*
  %v3_32dd2 = load i32, i32* %v2_32dd2, align 4
  store i32 %v3_32dd2, i32* %eax.global-to-local, align 4
  %v2_32dd5 = add i32 %v0_32dd2, -16
  %v3_32dd5 = inttoptr i32 %v2_32dd5 to i32*
  store i32 %v3_32dd2, i32* %v3_32dd5, align 4
  br label %dec_label_pc_32e0d

dec_label_pc_32dda:                               ; preds = %dec_label_pc_32e0d
  %v1_32dda = add i32 %v0_32dda, -28
  store i32 %v1_32dda, i32* %eax.global-to-local, align 4
  %v1_32de0 = call i32 @unknown_521fa(i32 %v1_32dda)
  store i32 %v1_32de0, i32* %eax.global-to-local, align 4
  store i32 %v1_32de0, i32* %ebx.global-to-local, align 4
  %v0_32de7 = load i32, i32* @ebp, align 4
  %v1_32de7 = add i32 %v0_32de7, -16
  %v2_32de7 = inttoptr i32 %v1_32de7 to i32*
  %v3_32de7 = load i32, i32* %v2_32de7, align 4
  store i32 %v3_32de7, i32* %eax.global-to-local, align 4
  %v1_32ded = call i32 @unknown_5fd0f(i32 %v3_32de7)
  store i32 %v1_32ded, i32* %eax.global-to-local, align 4
  %v0_32df2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_32df9 = call i32 @unknown_64124(i32 %v1_32ded, i32 %v0_32df2)
  %v0_32dfe = load i32, i32* @ebp, align 4
  %v1_32dfe = add i32 %v0_32dfe, -28
  store i32 %v1_32dfe, i32* %eax.global-to-local, align 4
  %v1_32e04 = call i32 @unknown_53a76(i32 %v1_32dfe)
  store i32 %v1_32e04, i32* %eax.global-to-local, align 4
  %v0_32e09 = load i32, i32* @ebp, align 4
  %v1_32e09 = add i32 %v0_32e09, -16
  %v2_32e09 = inttoptr i32 %v1_32e09 to i32*
  %v3_32e09 = load i32, i32* %v2_32e09, align 4
  %v4_32e09 = add i32 %v3_32e09, 12
  %v8_32e09 = icmp ugt i32 %v3_32e09, -13
  store i1 %v8_32e09, i1* %cf.global-to-local, align 1
  store i32 %v4_32e09, i32* %v2_32e09, align 4
  br label %dec_label_pc_32e0d

dec_label_pc_32e0d:                               ; preds = %dec_label_pc_32dda, %dec_label_pc_32dba
  %v0_32e0d = load i32, i32* @ebp, align 4
  %v1_32e0d = add i32 %v0_32e0d, -32
  %v1_32e14 = add i32 %v0_32e0d, -28
  store i32 %v1_32e14, i32* %eax.global-to-local, align 4
  %v2_32e1a = call i32 @unknown_50d78(i32 %v1_32e14, i32 %v1_32e0d)
  store i32 %v2_32e1a, i32* %eax.global-to-local, align 4
  %v4_32e1f = trunc i32 %v2_32e1a to i8
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_32e1f = icmp eq i8 %v4_32e1f, 0
  %v1_32e21 = icmp eq i1 %v5_32e1f, false
  %v0_32dda = load i32, i32* @ebp, align 4
  br i1 %v1_32e21, label %dec_label_pc_32dda, label %dec_label_pc_32e23

dec_label_pc_32e23:                               ; preds = %dec_label_pc_32e0d
  %v1_32e23 = add i32 %v0_32dda, -16
  %v2_32e23 = inttoptr i32 %v1_32e23 to i32*
  %v3_32e23 = load i32, i32* %v2_32e23, align 4
  store i32 %v3_32e23, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  ret i32 %v3_32e23

; uselistorder directives
  uselistorder i8 %v4_32dc9, { 0, 2, 1 }
  uselistorder i8 %v1_32dc9, { 1, 0 }
  uselistorder i8 %v3_32dc3, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14 }
  uselistorder i1* %cf.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
}

define i32 @function_32e30(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e30:
  %v0_32e30 = load i1, i1* @zf, align 1
  br i1 %v0_32e30, label %bb, label %dec_label_pc_32e32

bb:                                               ; preds = %dec_label_pc_32e30
  %v1_32e30 = call i32 @function_32e69()
  store i32 %v1_32e30, i32* @eax, align 4
  br label %dec_label_pc_32e32

dec_label_pc_32e32:                               ; preds = %bb, %dec_label_pc_32e30
  %v0_32e32 = call i32 @function_32e64()
  ret i32 %v0_32e32

; uselistorder directives
  uselistorder i1* @zf, { 14, 0, 1, 3, 5, 9, 10, 11, 12, 16, 17, 18, 19, 23, 7, 2, 4, 24, 15, 13, 6, 20, 21, 22, 8 }
}

define i32 @function_32e35() local_unnamed_addr {
dec_label_pc_32e35:
  %eax.global-to-local = alloca i32, align 4
  %v0_32e35 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_32e35
}

define i32 @function_32e4e(i32 %arg1) local_unnamed_addr {
dec_label_pc_32e4e:
  %v15_32e4e = load i32, i32* @eax, align 4
  ret i32 %v15_32e4e
}

define i32 @function_32e64() local_unnamed_addr {
dec_label_pc_32e64:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32e69() local_unnamed_addr {
dec_label_pc_32e69:
  %v0_32e6e = load i32, i32* @eax, align 4
  ret i32 %v0_32e6e
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14invoke_visitorINS1_15direct_assignerISE_EEEEPvNS_7variantISC_SE_SG_NS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_32e6f:
  %v0_32eaa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_32eaa
}

define i32 @function_32eb1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32eb1:
  %v0_32eb1 = load i32, i32* @ebp, align 4
  %v1_32eb1 = add i32 %v0_32eb1, 1
  store i32 %v1_32eb1, i32* @ebp, align 4
  %v0_32eb4 = load i32, i32* @ebx, align 4
  %v1_32eb4 = add i32 %v0_32eb4, 252956797
  %v2_32eb4 = inttoptr i32 %v1_32eb4 to i8*
  %v3_32eb4 = load i8, i8* %v2_32eb4, align 1
  %v4_32eb4 = shl i8 %v3_32eb4, 7
  %v5_32eb4 = udiv i8 %v3_32eb4, 2
  %v6_32eb4 = or i8 %v5_32eb4, %v4_32eb4
  store i8 %v6_32eb4, i8* %v2_32eb4, align 1
  %v0_32ebe = load i32, i32* @ebx, align 4
  %v1_32ebe = add i32 %v0_32ebe, -524169147
  %v2_32ebe = inttoptr i32 %v1_32ebe to i8*
  %v3_32ebe = load i8, i8* %v2_32ebe, align 1
  %v4_32ebe = load i32, i32* @ecx, align 4
  %v5_32ebe = trunc i32 %v4_32ebe to i8
  %v6_32ebe = add i8 %v5_32ebe, %v3_32ebe
  store i8 %v6_32ebe, i8* %v2_32ebe, align 1
  %v0_32ec4 = load i32, i32* @eax, align 4
  %v3_32ec4 = add i32 %v0_32ec4, 206
  %v18_32ec4 = and i32 %v3_32ec4, 255
  %v20_32ec4 = and i32 %v0_32ec4, -256
  %v21_32ec4 = or i32 %v18_32ec4, %v20_32ec4
  %v1_32eca = inttoptr i32 %v21_32ec4 to i32*
  %v2_32eca = load i32, i32* %v1_32eca, align 4
  ret i32 %v2_32eca

; uselistorder directives
  uselistorder i32 %v0_32ec4, { 1, 0 }
  uselistorder i8 7, { 3, 1, 2, 0 }
}

define i32 @function_32ece() local_unnamed_addr {
dec_label_pc_32ece:
  %ebp.global-to-local = alloca i32, align 4
  %v0_32ed6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_32ed6 = add i32 %v0_32ed6, -83
  %v2_32ed6 = inttoptr i32 %v1_32ed6 to i8*
  %v3_32ed6 = load i8, i8* %v2_32ed6, align 1
  %v1_32ee6 = add i32 %v0_32ed6, -56
  %v2_32ee6 = inttoptr i32 %v1_32ee6 to i32*
  %v3_32ee6 = load i32, i32* %v2_32ee6, align 4
  %v1_32eed = add i32 %v0_32ed6, -52
  %v2_32eed = inttoptr i32 %v1_32eed to i32*
  %v3_32eed = load i32, i32* %v2_32eed, align 4
  %v1_32ef4 = add i32 %v0_32ed6, -44
  %v2_32ef4 = inttoptr i32 %v1_32ef4 to i32*
  %v3_32ef4 = load i32, i32* %v2_32ef4, align 4
  %v6_32efa = sext i8 %v3_32ed6 to i32
  %v7_32efa = call i32 @unknown_687ad(i32 %v3_32ef4, i32 %v3_32eed, i32 %v3_32ee6, i32 0, i32 %v6_32efa, i32 1)
  ret i32 %v7_32efa

; uselistorder directives
  uselistorder i32 %v0_32ed6, { 0, 2, 1, 3 }
}

define i32 @function_32f2c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32f2c:
  %v0_32f30 = call i32 @unknown_6881a()
  ret i32 %v0_32f30
}

define i32 @function_32f51(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f51:
  %v0_32f51 = load i32, i32* @ebx, align 4
  %v1_32f51 = add i32 %v0_32f51, 1149880389
  %v2_32f51 = inttoptr i32 %v1_32f51 to i8*
  %v3_32f51 = load i8, i8* %v2_32f51, align 1
  %v4_32f51 = load i32, i32* @ecx, align 4
  %v5_32f51 = trunc i32 %v4_32f51 to i8
  %v6_32f51 = add i8 %v5_32f51, %v3_32f51
  store i8 %v6_32f51, i8* %v2_32f51, align 1
  %v0_32f59 = load i32, i32* @ebp, align 4
  %v1_32f59 = add i32 %v0_32f59, -52
  %v2_32f59 = inttoptr i32 %v1_32f59 to i32*
  %v3_32f59 = load i32, i32* %v2_32f59, align 4
  %v1_32f60 = add i32 %v0_32f59, -44
  %v2_32f60 = inttoptr i32 %v1_32f60 to i32*
  %v3_32f60 = load i32, i32* %v2_32f60, align 4
  %v2_32f66 = call i32 @unknown_68887(i32 %v3_32f60, i32 %v3_32f59)
  ret i32 %v2_32f66
}

define i32 @function_32f7e(i32 %arg1) local_unnamed_addr {
dec_label_pc_32f7e:
  %v0_32f88 = load i32, i32* @ebp, align 4
  %v1_32f96 = add i32 %v0_32f88, -44
  %v2_32f96 = inttoptr i32 %v1_32f96 to i32*
  %v3_32f96 = load i32, i32* %v2_32f96, align 4
  %v1_32f9c = call i32 @unknown_688f4(i32 %v3_32f96)
  ret i32 %v1_32f9c
}

define i32 @function_32fab(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32fab:
  %v2_32fab = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_32fab = load i32, i32* @eax, align 4
  %v4_32fab = trunc i32 %v3_32fab to i8
  %v5_32fab = add i8 %v4_32fab, %v2_32fab
  %v21_32fab = inttoptr i32 %v3_32fab to i8*
  store i8 %v5_32fab, i8* %v21_32fab, align 1
  %v2_32fad = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_32fad = load i32, i32* @ecx, align 4
  %v4_32fad = trunc i32 %v3_32fad to i8
  %v5_32fad = add i8 %v4_32fad, %v2_32fad
  %v20_32fad = load i32, i32* @edi, align 4
  %v21_32fad = inttoptr i32 %v20_32fad to i8*
  store i8 %v5_32fad, i8* %v21_32fad, align 1
  %v0_32fb1 = load i32, i32* @ecx, align 4
  %v1_32fb1 = and i32 %v0_32fb1, -256
  %v2_32fb1 = or i32 %v1_32fb1, ptrtoint (i8* @global_var_88.2212 to i32)
  store i32 %v2_32fb1, i32* @ecx, align 4
  %v0_32fbe = load i32, i32* @ebp, align 4
  %v1_32fc5 = add i32 %v0_32fbe, -52
  %v2_32fc5 = inttoptr i32 %v1_32fc5 to i32*
  %v3_32fc5 = load i32, i32* %v2_32fc5, align 4
  ret i32 %v3_32fc5

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_88.2212 to i32), { 1, 0 }
}

define i32 @function_32fcb(i32 %arg1) local_unnamed_addr {
dec_label_pc_32fcb:
  %v0_32fcd = load i32, i32* @ebp, align 4
  %v1_32fcd = add i32 %v0_32fcd, 1
  store i32 %v1_32fcd, i32* @ebp, align 4
  %v1_32fd2 = call i32 @unknown_688f4(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_32fd2
}

define i32 @function_32ff6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_32ff6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_32ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_32ff8:
  %v0_32ffb = load i32, i32* @ebp, align 4
  %v1_33002 = add i32 %v0_32ffb, -44
  %v2_33002 = inttoptr i32 %v1_33002 to i32*
  %v3_33002 = load i32, i32* %v2_33002, align 4
  %v1_33008 = call i32 @unknown_688f4(i32 %v3_33002)
  ret i32 %v1_33008
}

define i32 @function_33012() local_unnamed_addr {
dec_label_pc_33012:
  %ebp.global-to-local = alloca i32, align 4
  %v0_3301a = load i32, i32* %ebp.global-to-local, align 4
  %v1_33038 = add i32 %v0_3301a, -44
  %v2_33038 = inttoptr i32 %v1_33038 to i32*
  %v3_33038 = load i32, i32* %v2_33038, align 4
  %v1_3303e = call i32 @unknown_688f4(i32 %v3_33038)
  ret i32 %v1_3303e
}

define i32 @function_33070(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33070:
  %v1_33074 = call i32 @unknown_688f4(i32 ptrtoint (i32* @9 to i32))
  ret i32 %v1_33074
}

define i32 @function_3307e() local_unnamed_addr {
dec_label_pc_3307e:
  %ebp.global-to-local = alloca i32, align 4
  %v0_33086 = load i32, i32* %ebp.global-to-local, align 4
  %v1_330a4 = add i32 %v0_33086, -44
  %v2_330a4 = inttoptr i32 %v1_330a4 to i32*
  %v3_330a4 = load i32, i32* %v2_330a4, align 4
  %v1_330aa = call i32 @unknown_688f4(i32 %v3_330a4)
  ret i32 %v1_330aa
}

define i32 @function_330b5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_330b5:
  %eax.global-to-local = alloca i32, align 4
  %v0_330b6 = load i32, i32* @eax, align 4
  %v11_330b6 = and i32 %v0_330b6, -236
  store i32 %v11_330b6, i32* %eax.global-to-local, align 4
  %v1_330b8 = inttoptr i32 %v11_330b6 to i32*
  %v2_330b8 = load i32, i32* %v1_330b8, align 4
  %v4_330b8 = add i32 %v2_330b8, %v11_330b6
  store i32 %v4_330b8, i32* %v1_330b8, align 4
  %v0_330ba = load i32, i32* %eax.global-to-local, align 4
  %v1_330ba = inttoptr i32 %v0_330ba to i8*
  %v2_330ba = load i8, i8* %v1_330ba, align 1
  %v4_330ba = trunc i32 %v0_330ba to i8
  %v5_330ba = add i8 %v2_330ba, %v4_330ba
  store i8 %v5_330ba, i8* %v1_330ba, align 1
  %v0_330bc = load i32, i32* @ebp, align 4
  %v1_330bc = add i32 %v0_330bc, -74
  %v2_330bc = inttoptr i32 %v1_330bc to i8*
  %v3_330bc = load i8, i8* %v2_330bc, align 1
  %v4_330bc = zext i8 %v3_330bc to i32
  store i32 %v4_330bc, i32* %eax.global-to-local, align 4
  %v1_330cc = add i32 %v0_330bc, -56
  %v2_330cc = inttoptr i32 %v1_330cc to i32*
  %v3_330cc = load i32, i32* %v2_330cc, align 4
  store i32 %v3_330cc, i32* %eax.global-to-local, align 4
  %v1_330d3 = add i32 %v0_330bc, -52
  %v2_330d3 = inttoptr i32 %v1_330d3 to i32*
  %v3_330d3 = load i32, i32* %v2_330d3, align 4
  store i32 %v3_330d3, i32* %eax.global-to-local, align 4
  %v1_330da = add i32 %v0_330bc, -44
  %v2_330da = inttoptr i32 %v1_330da to i32*
  %v3_330da = load i32, i32* %v2_330da, align 4
  store i32 %v3_330da, i32* %eax.global-to-local, align 4
  %v1_330e0 = call i32 @unknown_688f4(i32 %v3_330da)
  store i32 %v1_330e0, i32* %eax.global-to-local, align 4
  ret i32 %v1_330e0

; uselistorder directives
  uselistorder i32 %v0_330bc, { 1, 0, 2, 3 }
  uselistorder i32 %v11_330b6, { 0, 2, 1 }
}

define i32 @function_330ea() local_unnamed_addr {
dec_label_pc_330ea:
  %ebp.global-to-local = alloca i32, align 4
  %v0_330f2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_33110 = add i32 %v0_330f2, -44
  %v2_33110 = inttoptr i32 %v1_33110 to i32*
  %v3_33110 = load i32, i32* %v2_33110, align 4
  %v1_33116 = call i32 @unknown_688f4(i32 %v3_33110)
  ret i32 %v1_33116
}

define i32 @function_33120() local_unnamed_addr {
dec_label_pc_33120:
  %ebp.global-to-local = alloca i32, align 4
  %v0_33128 = load i32, i32* %ebp.global-to-local, align 4
  %v1_33146 = add i32 %v0_33128, -44
  %v2_33146 = inttoptr i32 %v1_33146 to i32*
  %v3_33146 = load i32, i32* %v2_33146, align 4
  %v1_3314c = call i32 @unknown_688f4(i32 %v3_33146)
  ret i32 %v1_3314c
}

define i32 @function_33179(i32 %arg1) local_unnamed_addr {
dec_label_pc_33179:
  %v0_3317c = load i32, i32* @ebp, align 4
  %v1_3317c = add i32 %v0_3317c, -44
  %v2_3317c = inttoptr i32 %v1_3317c to i32*
  %v3_3317c = load i32, i32* %v2_3317c, align 4
  %v1_33182 = call i32 @unknown_688f4(i32 %v3_3317c)
  ret i32 %v1_33182
}

define i32 @function_331a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_331a6:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_331aa = load i32, i32* @ebx, align 4
  %v1_331aa = add i32 %v0_331aa, 1149881413
  %v2_331aa = inttoptr i32 %v1_331aa to i8*
  %v3_331aa = load i8, i8* %v2_331aa, align 1
  %v4_331aa = load i32, i32* @ecx, align 4
  %v5_331aa = trunc i32 %v4_331aa to i8
  %v6_331aa = or i8 %v5_331aa, %v3_331aa
  store i8 %v6_331aa, i8* %v2_331aa, align 1
  %v1_331b8 = call i32 @unknown_688f4(i32 %tmp)
  ret i32 %v1_331b8

; uselistorder directives
  uselistorder i32 1149881413, { 2, 3, 0, 1 }
}

define i32 @function_331d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_331d8:
  %v2_331d8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_331d8 = load i32, i32* @eax, align 4
  %v4_331d8 = trunc i32 %v3_331d8 to i8
  %v5_331d8 = add i8 %v4_331d8, %v2_331d8
  %v21_331d8 = inttoptr i32 %v3_331d8 to i8*
  store i8 %v5_331d8, i8* %v21_331d8, align 1
  %v0_331da = load i32, i32* @ebp, align 4
  %v1_331e8 = add i32 %v0_331da, -44
  %v2_331e8 = inttoptr i32 %v1_331e8 to i32*
  %v3_331e8 = load i32, i32* %v2_331e8, align 4
  %v1_331ee = call i32 @unknown_688f4(i32 %v3_331e8)
  ret i32 %v1_331ee
}

define i32 @function_3321b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3321b:
  %v0_3321e = load i32, i32* @ebp, align 4
  %v1_3321e = add i32 %v0_3321e, -44
  %v2_3321e = inttoptr i32 %v1_3321e to i32*
  %v3_3321e = load i32, i32* %v2_3321e, align 4
  %v1_33224 = call i32 @unknown_688f4(i32 %v3_3321e)
  ret i32 %v1_33224
}

define i32 @function_33259(i32 %arg1) local_unnamed_addr {
dec_label_pc_33259:
  %v0_33259 = load i32, i32* @eax, align 4
  %v11_33259 = and i32 %v0_33259, -24
  %v1_3325b = load i32, i32* @ebp, align 4
  store i32 %v11_33259, i32* @ebp, align 4
  %v4_3325d = add i32 %v1_3325b, %v11_33259
  ret i32 %v4_3325d

; uselistorder directives
  uselistorder i32 %v11_33259, { 1, 0 }
}

define i32 @function_33264() local_unnamed_addr {
dec_label_pc_33264:
  %ebp.global-to-local = alloca i32, align 4
  %v0_3327a = load i32, i32* %ebp.global-to-local, align 4
  %v1_33288 = add i32 %v0_3327a, -44
  %v2_33288 = inttoptr i32 %v1_33288 to i32*
  %v3_33288 = load i32, i32* %v2_33288, align 4
  %v1_3328e = call i32 @unknown_688f4(i32 %v3_33288)
  ret i32 %v1_3328e
}

define i32 @function_332c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_332c8:
  %v0_332c8 = load i32, i32* @esi, align 4
  %v2_332c8 = add i32 %v0_332c8, 36
  %tmp = urem i32 %v2_332c8, 65536
  %v3_332c8 = inttoptr i32 %tmp to i32*
  store i32 276, i32* %v3_332c8, align 4
  %v0_332d0 = load i32, i32* @eax, align 4
  %v1_332d0 = add i32 %v0_332d0, -955243428
  %v2_332d0 = inttoptr i32 %v1_332d0 to i8*
  %v3_332d0 = load i8, i8* %v2_332d0, align 1
  %v4_332d0 = load i32, i32* @ecx, align 4
  %v5_332d0 = trunc i32 %v4_332d0 to i8
  %v6_332d0 = add i8 %v5_332d0, %v3_332d0
  store i8 %v6_332d0, i8* %v2_332d0, align 1
  %v24_332d0 = load i32, i32* @eax, align 4
  ret i32 %v24_332d0
}

define i32 @function_332d6(i32 %arg1) local_unnamed_addr {
dec_label_pc_332d6:
  %eax.global-to-local = alloca i32, align 4
  %v0_332d7 = load i32, i32* @eax, align 4
  %v1_332d7 = trunc i32 %v0_332d7 to i8
  %v2_332d7 = and i8 %v1_332d7, 12
  %v8_332d7 = zext i8 %v2_332d7 to i32
  %v10_332d7 = and i32 %v0_332d7, -256
  %v11_332d7 = or i32 %v8_332d7, %v10_332d7
  store i32 %v11_332d7, i32* %eax.global-to-local, align 4
  %v1_332d9 = inttoptr i32 %v11_332d7 to i8*
  %v2_332d9 = load i8, i8* %v1_332d9, align 4
  %v5_332d9 = add i8 %v2_332d9, %v2_332d7
  store i8 %v5_332d9, i8* %v1_332d9, align 4
  %v0_332db = load i32, i32* %eax.global-to-local, align 4
  %v1_332db = inttoptr i32 %v0_332db to i8*
  %v2_332db = load i8, i8* %v1_332db, align 1
  %v4_332db = trunc i32 %v0_332db to i8
  %v5_332db = add i8 %v2_332db, %v4_332db
  store i8 %v5_332db, i8* %v1_332db, align 1
  %v0_332dd = load i32, i32* @ebp, align 4
  %v1_332dd = add i32 %v0_332dd, -56
  %v2_332dd = inttoptr i32 %v1_332dd to i32*
  %v3_332dd = load i32, i32* %v2_332dd, align 4
  store i32 %v3_332dd, i32* %eax.global-to-local, align 4
  %v1_332e4 = add i32 %v0_332dd, -52
  %v2_332e4 = inttoptr i32 %v1_332e4 to i32*
  %v3_332e4 = load i32, i32* %v2_332e4, align 4
  store i32 %v3_332e4, i32* %eax.global-to-local, align 4
  %v1_332eb = add i32 %v0_332dd, -44
  %v2_332eb = inttoptr i32 %v1_332eb to i32*
  %v3_332eb = load i32, i32* %v2_332eb, align 4
  store i32 %v3_332eb, i32* %eax.global-to-local, align 4
  %v1_332f1 = call i32 @unknown_688f4(i32 %v3_332eb)
  store i32 %v1_332f1, i32* %eax.global-to-local, align 4
  ret i32 %v1_332f1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_688f4, { 9, 14, 8, 7, 6, 5, 13, 12, 4, 11, 3, 10, 2, 1, 0 }
}

define i32 @function_33304(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33304:
  %v2_33304 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_33304 = load i32, i32* @eax, align 4
  %v4_33304 = trunc i32 %v3_33304 to i8
  %v5_33304 = add i8 %v4_33304, %v2_33304
  %v21_33304 = inttoptr i32 %v3_33304 to i8*
  store i8 %v5_33304, i8* %v21_33304, align 1
  %v2_33306 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_33306 = load i32, i32* @eax, align 4
  %v4_33306 = trunc i32 %v3_33306 to i8
  %v5_33306 = add i8 %v4_33306, %v2_33306
  %v21_33306 = inttoptr i32 %v3_33306 to i8*
  store i8 %v5_33306, i8* %v21_33306, align 1
  %v0_33308 = load i32, i32* @ecx, align 4
  %v0_3330c = load i32, i32* @edx, align 4
  %v0_33310 = load i32, i32* @ebp, align 4
  %v1_33310 = add i32 %v0_33310, -56
  %v2_33310 = inttoptr i32 %v1_33310 to i32*
  %v3_33310 = load i32, i32* %v2_33310, align 4
  %v1_33317 = add i32 %v0_33310, -52
  %v2_33317 = inttoptr i32 %v1_33317 to i32*
  %v3_33317 = load i32, i32* %v2_33317, align 4
  %v1_3331e = add i32 %v0_33310, -48
  %v2_3331e = inttoptr i32 %v1_3331e to i32*
  %v3_3331e = load i32, i32* %v2_3331e, align 4
  %v1_33325 = add i32 %v0_33310, -44
  %v2_33325 = inttoptr i32 %v1_33325 to i32*
  %v3_33325 = load i32, i32* %v2_33325, align 4
  %sext = mul i32 %v0_3330c, 16777216
  %v6_3332b = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_33308, 16777216
  %v7_3332b = sdiv i32 %sext1, 16777216
  %v8_3332b = call i32 @unknown_6894e(i32 %v3_33325, i32 %v3_3331e, i32 %v3_33317, i32 %v3_33310, i32 %v6_3332b, i32 %v7_3332b)
  store i32 %v8_3332b, i32* @eax, align 4
  %v0_33330 = load i32, i32* @ebp, align 4
  %v1_33330 = add i32 %v0_33330, -28
  %v2_33330 = inttoptr i32 %v1_33330 to i32*
  %v3_33330 = load i32, i32* %v2_33330, align 4
  %v1_33333 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_33333 = icmp eq i32 %v1_33333, %v3_33330
  br i1 %v3_33333, label %bb, label %dec_label_pc_3333c

bb:                                               ; preds = %dec_label_pc_33304
  %v1_3333a = call i32 @function_33341()
  br label %dec_label_pc_3333c

dec_label_pc_3333c:                               ; preds = %bb, %dec_label_pc_33304
  %v3_3333a = phi i32 [ %v1_3333a, %bb ], [ %v8_3332b, %dec_label_pc_33304 ]
  ret i32 %v3_3333a

; uselistorder directives
  uselistorder i32 %v0_33310, { 1, 0, 2, 3 }
}

define i32 @function_33341() local_unnamed_addr {
dec_label_pc_33341:
  %v0_33348 = load i32, i32* @eax, align 4
  ret i32 %v0_33348
}

declare i32 @unknown_3334a(i32, i32, i32) local_unnamed_addr

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14assign_storageEPvNS_7variantISC_SE_SG_NS1_5void_ESR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_SR_E18has_fallback_type_EEENT1_11result_typeEiiRSU_T2_NS3_5bool_ILb0EEET3_PT_PT0_() local_unnamed_addr {
dec_label_pc_3339c:
  %eax.global-to-local = alloca i32, align 4
  %v5_3339f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_3339f
}

define i32 @function_333a0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_333a0:
  %stack_var_-8 = alloca i32, align 4
  %v0_333a0 = load i32, i32* @esi, align 4
  %v0_333a1 = load i32, i32* @ebx, align 4
  store i32 %v0_333a1, i32* %stack_var_-8, align 4
  %v0_333a5 = load i32, i32* @ebp, align 4
  %v1_333a5 = add i32 %v0_333a5, 8
  %v2_333a5 = inttoptr i32 %v1_333a5 to i32*
  %v3_333a5 = load i32, i32* %v2_333a5, align 4
  %v2_333a8 = add i32 %v0_333a5, -44
  %v3_333a8 = inttoptr i32 %v2_333a8 to i32*
  store i32 %v3_333a5, i32* %v3_333a8, align 4
  %v0_333ab = load i32, i32* @ebp, align 4
  %v1_333ab = add i32 %v0_333ab, 12
  %v2_333ab = inttoptr i32 %v1_333ab to i32*
  %v3_333ab = load i32, i32* %v2_333ab, align 4
  %v2_333ae = add i32 %v0_333ab, -48
  %v3_333ae = inttoptr i32 %v2_333ae to i32*
  store i32 %v3_333ab, i32* %v3_333ae, align 4
  %v0_333b1 = load i32, i32* @ebp, align 4
  %v1_333b1 = add i32 %v0_333b1, 16
  %v2_333b1 = inttoptr i32 %v1_333b1 to i32*
  %v3_333b1 = load i32, i32* %v2_333b1, align 4
  %v2_333b4 = add i32 %v0_333b1, -52
  %v3_333b4 = inttoptr i32 %v2_333b4 to i32*
  store i32 %v3_333b1, i32* %v3_333b4, align 4
  %v0_333b7 = load i32, i32* @ebp, align 4
  %v1_333b7 = add i32 %v0_333b7, 20
  %v2_333b7 = inttoptr i32 %v1_333b7 to i32*
  %v3_333b7 = load i32, i32* %v2_333b7, align 4
  %v2_333ba = add i32 %v0_333b7, -56
  %v3_333ba = inttoptr i32 %v2_333ba to i32*
  store i32 %v3_333b7, i32* %v3_333ba, align 4
  %v0_333bd = load i32, i32* @ebp, align 4
  %v1_333bd = add i32 %v0_333bd, 24
  %v2_333bd = inttoptr i32 %v1_333bd to i8*
  %v3_333bd = load i8, i8* %v2_333bd, align 1
  %v3_333c1 = add i32 %v0_333bd, -57
  %v4_333c1 = inttoptr i32 %v3_333c1 to i8*
  store i8 %v3_333bd, i8* %v4_333c1, align 1
  %v0_333c4 = load i32, i32* @ebp, align 4
  %v1_333c4 = add i32 %v0_333c4, 28
  %v2_333c4 = inttoptr i32 %v1_333c4 to i8*
  %v3_333c4 = load i8, i8* %v2_333c4, align 1
  %v3_333c8 = add i32 %v0_333c4, -58
  %v4_333c8 = inttoptr i32 %v3_333c8 to i8*
  store i8 %v3_333c4, i8* %v4_333c8, align 1
  %v0_333cb = load i32, i32* @ebp, align 4
  %v1_333cb = add i32 %v0_333cb, 32
  %v2_333cb = inttoptr i32 %v1_333cb to i32*
  %v3_333cb = load i32, i32* %v2_333cb, align 4
  %v2_333ce = add i32 %v0_333cb, -64
  %v3_333ce = inttoptr i32 %v2_333ce to i32*
  store i32 %v3_333cb, i32* %v3_333ce, align 4
  %v0_333d1 = load i32, i32* @ebp, align 4
  %v1_333d1 = add i32 %v0_333d1, 36
  %v2_333d1 = inttoptr i32 %v1_333d1 to i32*
  %v3_333d1 = load i32, i32* %v2_333d1, align 4
  %v2_333d4 = add i32 %v0_333d1, -68
  %v3_333d4 = inttoptr i32 %v2_333d4 to i32*
  store i32 %v3_333d1, i32* %v3_333d4, align 4
  %v0_333d7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_333dd = load i32, i32* @ebp, align 4
  %v2_333dd = add i32 %v1_333dd, -28
  %v3_333dd = inttoptr i32 %v2_333dd to i32*
  store i32 %v0_333d7, i32* %v3_333dd, align 4
  %v0_333e2 = load i32, i32* @ebp, align 4
  %v1_333e2 = add i32 %v0_333e2, -48
  %v2_333e2 = inttoptr i32 %v1_333e2 to i32*
  %v3_333e2 = load i32, i32* %v2_333e2, align 4
  %tmp8 = icmp ult i32 %v3_333e2, 20
  br i1 %tmp8, label %dec_label_pc_333ec, label %bb

bb:                                               ; preds = %dec_label_pc_333a0
  %v4_333e6 = load i32, i32* %stack_var_-8, align 4
  %v6_333e6 = call i32 @function_33825(i32 %v4_333e6, i32 %v0_333a0)
  %v0_333ec.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_333ec

dec_label_pc_333ec:                               ; preds = %dec_label_pc_333a0, %bb
  %v0_333ec = phi i32 [ %v0_333e2, %dec_label_pc_333a0 ], [ %v0_333ec.pre, %bb ]
  %v1_333ec = add i32 %v0_333ec, -48
  %v2_333ec = inttoptr i32 %v1_333ec to i32*
  %v3_333ec = load i32, i32* %v2_333ec, align 4
  %v2_333ef = mul i32 %v3_333ec, 4
  %v1_333f2 = add i32 %v2_333ef, ptrtoint (i32* @global_var_33878.2300 to i32)
  %v1_333f7 = inttoptr i32 %v1_333f2 to i32*
  %v2_333f7 = load i32, i32* %v1_333f7, align 4
  ret i32 %v2_333f7

; uselistorder directives
  uselistorder label %dec_label_pc_333ec, { 1, 0 }
}

define i32 @function_333fb() local_unnamed_addr {
dec_label_pc_333fb:
  %v0_33403 = load i32, i32* @ebp, align 4
  %v1_33403 = add i32 %v0_33403, -83
  %v2_33403 = inttoptr i32 %v1_33403 to i8*
  %v3_33403 = load i8, i8* %v2_33403, align 1
  %v1_33413 = add i32 %v0_33403, -56
  %v2_33413 = inttoptr i32 %v1_33413 to i32*
  %v3_33413 = load i32, i32* %v2_33413, align 4
  %v1_3341a = add i32 %v0_33403, -52
  %v2_3341a = inttoptr i32 %v1_3341a to i32*
  %v3_3341a = load i32, i32* %v2_3341a, align 4
  %v1_33421 = add i32 %v0_33403, -44
  %v2_33421 = inttoptr i32 %v1_33421 to i32*
  %v3_33421 = load i32, i32* %v2_33421, align 4
  %v6_33427 = sext i8 %v3_33403 to i32
  %v7_33427 = call i32 @unknown_68ee2(i32 %v3_33421, i32 %v3_3341a, i32 %v3_33413, i32 0, i32 %v6_33427, i32 1)
  %v0_3342c = call i32 @function_3385d()
  ret i32 %v0_3342c

; uselistorder directives
  uselistorder i32 %v0_33403, { 0, 2, 1, 3 }
}

define i32 @function_33448(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33448:
  %v0_33448 = load i32, i32* @ebx, align 4
  %v1_33448 = add i32 %v0_33448, 1149880389
  %v2_33448 = inttoptr i32 %v1_33448 to i8*
  %v3_33448 = load i8, i8* %v2_33448, align 1
  %v4_33448 = load i32, i32* @ecx, align 4
  %v5_33448 = trunc i32 %v4_33448 to i8
  %v6_33448 = add i8 %v5_33448, %v3_33448
  store i8 %v6_33448, i8* %v2_33448, align 1
  %v0_33450 = load i32, i32* @ebp, align 4
  %v1_33450 = add i32 %v0_33450, -52
  %v2_33450 = inttoptr i32 %v1_33450 to i32*
  %v3_33450 = load i32, i32* %v2_33450, align 4
  %v1_33457 = add i32 %v0_33450, -44
  %v2_33457 = inttoptr i32 %v1_33457 to i32*
  %v3_33457 = load i32, i32* %v2_33457, align 4
  %v2_3345d = call i32 @unknown_68f4f(i32 %v3_33457, i32 %v3_33450)
  %v0_33462 = call i32 @function_3385d()
  ret i32 %v0_33462
}

define i32 @function_33467() local_unnamed_addr {
dec_label_pc_33467:
  %v0_3346f = load i32, i32* @ebp, align 4
  %v1_3346f = add i32 %v0_3346f, -81
  %v2_3346f = inttoptr i32 %v1_3346f to i8*
  %v3_3346f = load i8, i8* %v2_3346f, align 1
  %v1_3347f = add i32 %v0_3346f, -56
  %v2_3347f = inttoptr i32 %v1_3347f to i32*
  %v3_3347f = load i32, i32* %v2_3347f, align 4
  %v1_33486 = add i32 %v0_3346f, -52
  %v2_33486 = inttoptr i32 %v1_33486 to i32*
  %v3_33486 = load i32, i32* %v2_33486, align 4
  %v1_3348d = add i32 %v0_3346f, -44
  %v2_3348d = inttoptr i32 %v1_3348d to i32*
  %v3_3348d = load i32, i32* %v2_3348d, align 4
  %v6_33493 = sext i8 %v3_3346f to i32
  %v7_33493 = call i32 @unknown_68fbc(i32 %v3_3348d, i32 %v3_33486, i32 %v3_3347f, i32 0, i32 %v6_33493, i32 1)
  %v0_33498 = call i32 @function_3385d()
  ret i32 %v0_33498

; uselistorder directives
  uselistorder i32 %v0_3346f, { 0, 2, 1, 3 }
}

define i32 @function_334d0() local_unnamed_addr {
dec_label_pc_334d0:
  %eax.global-to-local = alloca i32, align 4
  %v0_334d0 = load i32, i32* @eax, align 4
  %v4_334d0 = mul i32 %v0_334d0, 2
  %v11_334d5 = and i32 %v4_334d0, -236
  store i32 %v11_334d5, i32* %eax.global-to-local, align 4
  %v1_334d7 = inttoptr i32 %v11_334d5 to i32*
  %v2_334d7 = load i32, i32* %v1_334d7, align 4
  %v4_334d7 = add i32 %v2_334d7, %v11_334d5
  store i32 %v4_334d7, i32* %v1_334d7, align 4
  %v0_334d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_334d9 = inttoptr i32 %v0_334d9 to i8*
  %v2_334d9 = load i8, i8* %v1_334d9, align 1
  %v4_334d9 = trunc i32 %v0_334d9 to i8
  %v5_334d9 = add i8 %v2_334d9, %v4_334d9
  store i8 %v5_334d9, i8* %v1_334d9, align 1
  %v0_334db = load i32, i32* @ebp, align 4
  %v1_334db = add i32 %v0_334db, -79
  %v2_334db = inttoptr i32 %v1_334db to i8*
  %v3_334db = load i8, i8* %v2_334db, align 1
  %v4_334db = zext i8 %v3_334db to i32
  store i32 %v4_334db, i32* %eax.global-to-local, align 4
  %v1_334eb = add i32 %v0_334db, -56
  %v2_334eb = inttoptr i32 %v1_334eb to i32*
  %v3_334eb = load i32, i32* %v2_334eb, align 4
  store i32 %v3_334eb, i32* %eax.global-to-local, align 4
  %v1_334f2 = add i32 %v0_334db, -52
  %v2_334f2 = inttoptr i32 %v1_334f2 to i32*
  %v3_334f2 = load i32, i32* %v2_334f2, align 4
  store i32 %v3_334f2, i32* %eax.global-to-local, align 4
  %v1_334f9 = add i32 %v0_334db, -44
  %v2_334f9 = inttoptr i32 %v1_334f9 to i32*
  %v3_334f9 = load i32, i32* %v2_334f9, align 4
  store i32 %v3_334f9, i32* %eax.global-to-local, align 4
  %v2_334ff = call i32 @unknown_69029(i32 %v3_334f9, i32 %v3_334f2)
  store i32 %v2_334ff, i32* %eax.global-to-local, align 4
  %v0_33504 = call i32 @function_3385d()
  store i32 %v0_33504, i32* %eax.global-to-local, align 4
  ret i32 %v0_33504

; uselistorder directives
  uselistorder i32 %v0_334db, { 1, 0, 2, 3 }
  uselistorder i32 %v11_334d5, { 0, 2, 1 }
}

define i32 @function_33526() local_unnamed_addr {
dec_label_pc_33526:
  %v0_33528 = load i32, i32* @ebp, align 4
  %v1_33528 = add i32 %v0_33528, -52
  %v2_33528 = inttoptr i32 %v1_33528 to i32*
  %v3_33528 = load i32, i32* %v2_33528, align 4
  %v1_3352f = add i32 %v0_33528, -44
  %v2_3352f = inttoptr i32 %v1_3352f to i32*
  %v3_3352f = load i32, i32* %v2_3352f, align 4
  %v2_33535 = call i32 @unknown_69029(i32 %v3_3352f, i32 %v3_33528)
  %v0_3353a = call i32 @function_3385d()
  ret i32 %v0_3353a
}

define i32 @function_3353f() local_unnamed_addr {
dec_label_pc_3353f:
  %v0_33547 = load i32, i32* @ebp, align 4
  %v1_3355e = add i32 %v0_33547, -52
  %v2_3355e = inttoptr i32 %v1_3355e to i32*
  %v3_3355e = load i32, i32* %v2_3355e, align 4
  %v1_33565 = add i32 %v0_33547, -44
  %v2_33565 = inttoptr i32 %v1_33565 to i32*
  %v3_33565 = load i32, i32* %v2_33565, align 4
  %v2_3356b = call i32 @unknown_69029(i32 %v3_33565, i32 %v3_3355e)
  %v0_33570 = call i32 @function_3385d()
  ret i32 %v0_33570

; uselistorder directives
  uselistorder i32 %v0_33547, { 1, 0 }
}

define i32 @function_33575() local_unnamed_addr {
dec_label_pc_33575:
  %v0_3357d = load i32, i32* @ebp, align 4
  %v1_33594 = add i32 %v0_3357d, -52
  %v2_33594 = inttoptr i32 %v1_33594 to i32*
  %v3_33594 = load i32, i32* %v2_33594, align 4
  %v1_3359b = add i32 %v0_3357d, -44
  %v2_3359b = inttoptr i32 %v1_3359b to i32*
  %v3_3359b = load i32, i32* %v2_3359b, align 4
  %v2_335a1 = call i32 @unknown_69029(i32 %v3_3359b, i32 %v3_33594)
  %v0_335a6 = call i32 @function_3385d()
  ret i32 %v0_335a6

; uselistorder directives
  uselistorder i32 %v0_3357d, { 1, 0 }
}

define i32 @function_335ab() local_unnamed_addr {
dec_label_pc_335ab:
  %v0_335b3 = load i32, i32* @ebp, align 4
  %v1_335ca = add i32 %v0_335b3, -52
  %v2_335ca = inttoptr i32 %v1_335ca to i32*
  %v3_335ca = load i32, i32* %v2_335ca, align 4
  %v1_335d1 = add i32 %v0_335b3, -44
  %v2_335d1 = inttoptr i32 %v1_335d1 to i32*
  %v3_335d1 = load i32, i32* %v2_335d1, align 4
  %v2_335d7 = call i32 @unknown_69029(i32 %v3_335d1, i32 %v3_335ca)
  %v0_335dc = call i32 @function_3385d()
  ret i32 %v0_335dc

; uselistorder directives
  uselistorder i32 %v0_335b3, { 1, 0 }
}

define i32 @function_335e1() local_unnamed_addr {
dec_label_pc_335e1:
  %v0_335e9 = load i32, i32* @ebp, align 4
  %v1_33600 = add i32 %v0_335e9, -52
  %v2_33600 = inttoptr i32 %v1_33600 to i32*
  %v3_33600 = load i32, i32* %v2_33600, align 4
  %v1_33607 = add i32 %v0_335e9, -44
  %v2_33607 = inttoptr i32 %v1_33607 to i32*
  %v3_33607 = load i32, i32* %v2_33607, align 4
  %v2_3360d = call i32 @unknown_69029(i32 %v3_33607, i32 %v3_33600)
  %v0_33612 = call i32 @function_3385d()
  ret i32 %v0_33612

; uselistorder directives
  uselistorder i32 %v0_335e9, { 1, 0 }
}

define i32 @function_33634(i32 %arg1) local_unnamed_addr {
dec_label_pc_33634:
  %v0_33636 = load i32, i32* @ebp, align 4
  %v1_33636 = add i32 %v0_33636, -52
  %v2_33636 = inttoptr i32 %v1_33636 to i32*
  %v3_33636 = load i32, i32* %v2_33636, align 4
  %v1_3363d = add i32 %v0_33636, -44
  %v2_3363d = inttoptr i32 %v1_3363d to i32*
  %v3_3363d = load i32, i32* %v2_3363d, align 4
  %v2_33643 = call i32 @unknown_69029(i32 %v3_3363d, i32 %v3_33636)
  %v0_33648 = call i32 @function_3385d()
  ret i32 %v0_33648
}

define i32 @function_3364d() local_unnamed_addr {
dec_label_pc_3364d:
  %v0_33655 = load i32, i32* @ebp, align 4
  %v1_3366c = add i32 %v0_33655, -52
  %v2_3366c = inttoptr i32 %v1_3366c to i32*
  %v3_3366c = load i32, i32* %v2_3366c, align 4
  %v1_33673 = add i32 %v0_33655, -44
  %v2_33673 = inttoptr i32 %v1_33673 to i32*
  %v3_33673 = load i32, i32* %v2_33673, align 4
  %v2_33679 = call i32 @unknown_69029(i32 %v3_33673, i32 %v3_3366c)
  %v0_3367e = call i32 @function_3385d()
  ret i32 %v0_3367e

; uselistorder directives
  uselistorder i32 %v0_33655, { 1, 0 }
}

define i32 @function_33683() local_unnamed_addr {
dec_label_pc_33683:
  %v0_3368b = load i32, i32* @ebp, align 4
  %v1_336a2 = add i32 %v0_3368b, -52
  %v2_336a2 = inttoptr i32 %v1_336a2 to i32*
  %v3_336a2 = load i32, i32* %v2_336a2, align 4
  %v1_336a9 = add i32 %v0_3368b, -44
  %v2_336a9 = inttoptr i32 %v1_336a9 to i32*
  %v3_336a9 = load i32, i32* %v2_336a9, align 4
  %v2_336af = call i32 @unknown_69029(i32 %v3_336a9, i32 %v3_336a2)
  %v0_336b4 = call i32 @function_3385d()
  ret i32 %v0_336b4

; uselistorder directives
  uselistorder i32 %v0_3368b, { 1, 0 }
}

define i32 @function_336b9() local_unnamed_addr {
dec_label_pc_336b9:
  %v0_336c1 = load i32, i32* @ebp, align 4
  %v1_336d8 = add i32 %v0_336c1, -52
  %v2_336d8 = inttoptr i32 %v1_336d8 to i32*
  %v3_336d8 = load i32, i32* %v2_336d8, align 4
  %v1_336df = add i32 %v0_336c1, -44
  %v2_336df = inttoptr i32 %v1_336df to i32*
  %v3_336df = load i32, i32* %v2_336df, align 4
  %v2_336e5 = call i32 @unknown_69029(i32 %v3_336df, i32 %v3_336d8)
  %v0_336ea = call i32 @function_3385d()
  ret i32 %v0_336ea

; uselistorder directives
  uselistorder i32 %v0_336c1, { 1, 0 }
}

define i32 @function_336f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_336f4:
  %v2_336f4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_336f4 = load i32, i32* @eax, align 4
  %v4_336f4 = trunc i32 %v3_336f4 to i8
  %v5_336f4 = add i8 %v4_336f4, %v2_336f4
  %v21_336f4 = inttoptr i32 %v3_336f4 to i8*
  store i8 %v5_336f4, i8* %v21_336f4, align 1
  %v2_336f6 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_336f6 = load i32, i32* @ecx, align 4
  %v4_336f6 = trunc i32 %v3_336f6 to i8
  %v5_336f6 = add i8 %v4_336f6, %v2_336f6
  %v20_336f6 = load i32, i32* @edi, align 4
  %v21_336f6 = inttoptr i32 %v20_336f6 to i8*
  store i8 %v5_336f6, i8* %v21_336f6, align 1
  store i32 270812296, i32* @ebx, align 4
  %v0_33707 = load i32, i32* @ebp, align 4
  %v1_3370e = add i32 %v0_33707, -52
  %v2_3370e = inttoptr i32 %v1_3370e to i32*
  %v3_3370e = load i32, i32* %v2_3370e, align 4
  %v1_33715 = add i32 %v0_33707, -44
  %v2_33715 = inttoptr i32 %v1_33715 to i32*
  %v3_33715 = load i32, i32* %v2_33715, align 4
  %v2_3371b = call i32 @unknown_69029(i32 %v3_33715, i32 %v3_3370e)
  %v0_33720 = call i32 @function_3385d()
  ret i32 %v0_33720
}

define i32 @function_33705(i32 %arg1) local_unnamed_addr {
dec_label_pc_33705:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_33736(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_33736:
  %eax.global-to-local = alloca i32, align 4
  %v0_33737 = load i32, i32* @eax, align 4
  %v1_33737 = trunc i32 %v0_33737 to i8
  %v2_33737 = and i8 %v1_33737, 12
  %v8_33737 = zext i8 %v2_33737 to i32
  %v10_33737 = and i32 %v0_33737, -256
  %v11_33737 = or i32 %v8_33737, %v10_33737
  store i32 %v11_33737, i32* %eax.global-to-local, align 4
  %v1_33739 = inttoptr i32 %v11_33737 to i8*
  %v2_33739 = load i8, i8* %v1_33739, align 4
  %v5_33739 = add i8 %v2_33739, %v2_33737
  store i8 %v5_33739, i8* %v1_33739, align 4
  %v0_3373b = load i32, i32* %eax.global-to-local, align 4
  %v1_3373b = inttoptr i32 %v0_3373b to i8*
  %v2_3373b = load i8, i8* %v1_3373b, align 1
  %v4_3373b = trunc i32 %v0_3373b to i8
  %v5_3373b = add i8 %v2_3373b, %v4_3373b
  store i8 %v5_3373b, i8* %v1_3373b, align 1
  %v0_3373d = load i32, i32* @ebp, align 4
  %v1_3373d = add i32 %v0_3373d, -56
  %v2_3373d = inttoptr i32 %v1_3373d to i32*
  %v3_3373d = load i32, i32* %v2_3373d, align 4
  store i32 %v3_3373d, i32* %eax.global-to-local, align 4
  %v1_33744 = add i32 %v0_3373d, -52
  %v2_33744 = inttoptr i32 %v1_33744 to i32*
  %v3_33744 = load i32, i32* %v2_33744, align 4
  store i32 %v3_33744, i32* %eax.global-to-local, align 4
  %v1_3374b = add i32 %v0_3373d, -44
  %v2_3374b = inttoptr i32 %v1_3374b to i32*
  %v3_3374b = load i32, i32* %v2_3374b, align 4
  store i32 %v3_3374b, i32* %eax.global-to-local, align 4
  %v2_33751 = call i32 @unknown_69029(i32 %v3_3374b, i32 %v3_33744)
  store i32 %v2_33751, i32* %eax.global-to-local, align 4
  %v0_33756 = call i32 @function_3385d()
  store i32 %v0_33756, i32* %eax.global-to-local, align 4
  ret i32 %v0_33756

; uselistorder directives
  uselistorder i8 12, { 4, 3, 0, 1, 2, 5 }
}

define i32 @function_3375b() local_unnamed_addr {
dec_label_pc_3375b:
  %v0_33763 = load i32, i32* @ebp, align 4
  %v1_3377a = add i32 %v0_33763, -52
  %v2_3377a = inttoptr i32 %v1_3377a to i32*
  %v3_3377a = load i32, i32* %v2_3377a, align 4
  %v1_33781 = add i32 %v0_33763, -44
  %v2_33781 = inttoptr i32 %v1_33781 to i32*
  %v3_33781 = load i32, i32* %v2_33781, align 4
  %v2_33787 = call i32 @unknown_69029(i32 %v3_33781, i32 %v3_3377a)
  %v0_3378c = call i32 @function_3385d()
  ret i32 %v0_3378c

; uselistorder directives
  uselistorder i32 %v0_33763, { 1, 0 }
}

define i32 @function_33791() local_unnamed_addr {
dec_label_pc_33791:
  %v0_337a7 = load i32, i32* @ebp, align 4
  %v1_337ae = add i32 %v0_337a7, -52
  %v2_337ae = inttoptr i32 %v1_337ae to i32*
  %v3_337ae = load i32, i32* %v2_337ae, align 4
  %v1_337b5 = add i32 %v0_337a7, -44
  %v2_337b5 = inttoptr i32 %v1_337b5 to i32*
  %v3_337b5 = load i32, i32* %v2_337b5, align 4
  %v2_337bb = call i32 @unknown_69029(i32 %v3_337b5, i32 %v3_337ae)
  %v0_337c0 = call i32 @function_3385d()
  ret i32 %v0_337c0
}

define i32 @function_337c5() local_unnamed_addr {
dec_label_pc_337c5:
  %v0_337db = load i32, i32* @ebp, align 4
  %v1_337e2 = add i32 %v0_337db, -52
  %v2_337e2 = inttoptr i32 %v1_337e2 to i32*
  %v3_337e2 = load i32, i32* %v2_337e2, align 4
  %v1_337e9 = add i32 %v0_337db, -44
  %v2_337e9 = inttoptr i32 %v1_337e9 to i32*
  %v3_337e9 = load i32, i32* %v2_337e9, align 4
  %v2_337ef = call i32 @unknown_69029(i32 %v3_337e9, i32 %v3_337e2)
  %v0_337f4 = call i32 @function_3385d()
  ret i32 %v0_337f4
}

define i32 @function_3381a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_3381a:
  %v2_3381e = call i32 @unknown_69029(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  %v0_33823 = call i32 @function_3385d()
  ret i32 %v0_33823

; uselistorder directives
  uselistorder i32 ()* @function_3385d, { 3, 18, 17, 16, 1, 0, 15, 14, 13, 6, 12, 11, 10, 9, 5, 4, 8, 2, 7 }
  uselistorder i32 (i32, i32)* @unknown_69029, { 2, 15, 14, 13, 1, 0, 12, 11, 10, 5, 9, 8, 7, 6, 4, 3 }
}

define i32 @function_33825(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33825:
  %v0_33835 = load i32, i32* @ecx, align 4
  %v0_33839 = load i32, i32* @edx, align 4
  %v0_3383d = load i32, i32* @ebp, align 4
  %v1_3383d = add i32 %v0_3383d, -56
  %v2_3383d = inttoptr i32 %v1_3383d to i32*
  %v3_3383d = load i32, i32* %v2_3383d, align 4
  %v1_33844 = add i32 %v0_3383d, -52
  %v2_33844 = inttoptr i32 %v1_33844 to i32*
  %v3_33844 = load i32, i32* %v2_33844, align 4
  %v1_3384b = add i32 %v0_3383d, -48
  %v2_3384b = inttoptr i32 %v1_3384b to i32*
  %v3_3384b = load i32, i32* %v2_3384b, align 4
  %v1_33852 = add i32 %v0_3383d, -44
  %v2_33852 = inttoptr i32 %v1_33852 to i32*
  %v3_33852 = load i32, i32* %v2_33852, align 4
  %sext = mul i32 %v0_33839, 16777216
  %v8_33858 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_33835, 16777216
  %v9_33858 = sdiv i32 %sext1, 16777216
  %v10_33858 = call i32 @unknown_69083(i32 %v3_33852, i32 %v3_3384b, i32 %v3_33844, i32 %v3_3383d, i32 %v8_33858, i32 %v9_33858, i32 0, i32 0)
  ret i32 %v10_33858

; uselistorder directives
  uselistorder i32 %v0_3383d, { 1, 0, 2, 3 }
}

define i32 @function_3385d() local_unnamed_addr {
dec_label_pc_3385d:
  %v0_3385d = load i32, i32* @ebp, align 4
  %v1_3385d = add i32 %v0_3385d, -28
  %v2_3385d = inttoptr i32 %v1_3385d to i32*
  %v3_3385d = load i32, i32* %v2_3385d, align 4
  %v1_33860 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33860 = xor i32 %v1_33860, %v3_3385d
  %v3_33860 = icmp eq i32 %v2_33860, 0
  store i32 %v2_33860, i32* @eax, align 4
  br i1 %v3_33860, label %bb, label %dec_label_pc_33869

bb:                                               ; preds = %dec_label_pc_3385d
  %v1_33867 = call i32 @function_3386e()
  br label %dec_label_pc_33869

dec_label_pc_33869:                               ; preds = %bb, %dec_label_pc_3385d
  %v2_33867 = phi i32 [ %v1_33867, %bb ], [ %v2_33860, %dec_label_pc_3385d ]
  ret i32 %v2_33867
}

define i32 @function_3386e() local_unnamed_addr {
dec_label_pc_3386e:
  %v0_33875 = load i32, i32* @eax, align 4
  ret i32 %v0_33875
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS_7variantISC_SE_SG_NS1_5void_ESP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_SP_E8assignerEPKvNSQ_18has_fallback_type_EEENT1_11result_typeEiiRSV_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_338c8:
  ret i32 %arg3
}

define i32 @function_338e1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_338e1:
  %v0_338e1 = load i32, i32* @ebp, align 4
  %v1_338e1 = add i32 %v0_338e1, 1
  store i32 %v1_338e1, i32* @ebp, align 4
  %v1_338e3 = add i32 %v0_338e1, 21
  %v2_338e3 = inttoptr i32 %v1_338e3 to i32*
  %v3_338e3 = load i32, i32* %v2_338e3, align 4
  %v2_338e6 = add i32 %v0_338e1, -55
  %v3_338e6 = inttoptr i32 %v2_338e6 to i32*
  store i32 %v3_338e3, i32* %v3_338e6, align 4
  %v0_338e9 = load i32, i32* @ebp, align 4
  %v1_338e9 = add i32 %v0_338e9, 24
  %v2_338e9 = inttoptr i32 %v1_338e9 to i8*
  %v3_338e9 = load i8, i8* %v2_338e9, align 1
  %v3_338ed = add i32 %v0_338e9, -57
  %v4_338ed = inttoptr i32 %v3_338ed to i8*
  store i8 %v3_338e9, i8* %v4_338ed, align 1
  %v0_338f0 = load i32, i32* @ebp, align 4
  %v1_338f0 = add i32 %v0_338f0, 28
  %v2_338f0 = inttoptr i32 %v1_338f0 to i8*
  %v3_338f0 = load i8, i8* %v2_338f0, align 1
  %v3_338f4 = add i32 %v0_338f0, -58
  %v4_338f4 = inttoptr i32 %v3_338f4 to i8*
  store i8 %v3_338f0, i8* %v4_338f4, align 1
  %v0_338f7 = load i32, i32* @ebp, align 4
  %v1_338f7 = add i32 %v0_338f7, 32
  %v2_338f7 = inttoptr i32 %v1_338f7 to i32*
  %v3_338f7 = load i32, i32* %v2_338f7, align 4
  %v2_338fa = add i32 %v0_338f7, -64
  %v3_338fa = inttoptr i32 %v2_338fa to i32*
  store i32 %v3_338f7, i32* %v3_338fa, align 4
  %v0_338fd = load i32, i32* @ebp, align 4
  %v1_338fd = add i32 %v0_338fd, 36
  %v2_338fd = inttoptr i32 %v1_338fd to i32*
  %v3_338fd = load i32, i32* %v2_338fd, align 4
  %v2_33900 = add i32 %v0_338fd, -68
  %v3_33900 = inttoptr i32 %v2_33900 to i32*
  store i32 %v3_338fd, i32* %v3_33900, align 4
  %v0_33903 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_33909 = load i32, i32* @ebp, align 4
  %v2_33909 = add i32 %v1_33909, -28
  %v3_33909 = inttoptr i32 %v2_33909 to i32*
  store i32 %v0_33903, i32* %v3_33909, align 4
  %v0_3390e = load i32, i32* @ebp, align 4
  %v1_3390e = add i32 %v0_3390e, -48
  %v2_3390e = inttoptr i32 %v1_3390e to i32*
  %v3_3390e = load i32, i32* %v2_3390e, align 4
  store i32 %v3_3390e, i32* @6, align 4
  switch i32 %v3_3390e, label %dec_label_pc_33d51 [
    i32 0, label %dec_label_pc_33927
    i32 1, label %dec_label_pc_3395d
    i32 2, label %dec_label_pc_33993
    i32 3, label %dec_label_pc_339c9
    i32 4, label %dec_label_pc_339ff
    i32 5, label %dec_label_pc_33a35
    i32 6, label %dec_label_pc_33a6b
    i32 7, label %dec_label_pc_33aa1
    i32 8, label %dec_label_pc_33ad7
    i32 9, label %dec_label_pc_33b0d
    i32 10, label %dec_label_pc_33b43
    i32 11, label %dec_label_pc_33b79
    i32 12, label %dec_label_pc_33baf
    i32 13, label %dec_label_pc_33be5
    i32 14, label %dec_label_pc_33c1b
    i32 15, label %dec_label_pc_33c51
    i32 16, label %dec_label_pc_33c87
    i32 17, label %dec_label_pc_33cbd
    i32 18, label %dec_label_pc_33cf1
    i32 19, label %dec_label_pc_33d22
  ]

dec_label_pc_33927:                               ; preds = %dec_label_pc_338e1
  %v1_3392f = add i32 %v0_3390e, -83
  %v2_3392f = inttoptr i32 %v1_3392f to i8*
  %v3_3392f = load i8, i8* %v2_3392f, align 1
  %v1_3393f = add i32 %v0_3390e, -56
  %v2_3393f = inttoptr i32 %v1_3393f to i32*
  %v3_3393f = load i32, i32* %v2_3393f, align 4
  %v1_33946 = add i32 %v0_3390e, -52
  %v2_33946 = inttoptr i32 %v1_33946 to i32*
  %v3_33946 = load i32, i32* %v2_33946, align 4
  %v1_3394d = add i32 %v0_3390e, -44
  %v2_3394d = inttoptr i32 %v1_3394d to i32*
  %v3_3394d = load i32, i32* %v2_3394d, align 4
  %v6_33953 = sext i8 %v3_3392f to i32
  %v7_33953 = call i32 @unknown_69616(i32 %v3_3394d, i32 %v3_33946, i32 %v3_3393f, i32 0, i32 %v6_33953, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_3395d:                               ; preds = %dec_label_pc_338e1
  %v1_33965 = add i32 %v0_3390e, -82
  %v2_33965 = inttoptr i32 %v1_33965 to i8*
  %v3_33965 = load i8, i8* %v2_33965, align 1
  %v1_33975 = add i32 %v0_3390e, -56
  %v2_33975 = inttoptr i32 %v1_33975 to i32*
  %v3_33975 = load i32, i32* %v2_33975, align 4
  %v1_3397c = add i32 %v0_3390e, -52
  %v2_3397c = inttoptr i32 %v1_3397c to i32*
  %v3_3397c = load i32, i32* %v2_3397c, align 4
  %v1_33983 = add i32 %v0_3390e, -44
  %v2_33983 = inttoptr i32 %v1_33983 to i32*
  %v3_33983 = load i32, i32* %v2_33983, align 4
  %v6_33989 = sext i8 %v3_33965 to i32
  %v7_33989 = call i32 @unknown_69683(i32 %v3_33983, i32 %v3_3397c, i32 %v3_33975, i32 0, i32 %v6_33989, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33993:                               ; preds = %dec_label_pc_338e1
  %v1_3399b = add i32 %v0_3390e, -81
  %v2_3399b = inttoptr i32 %v1_3399b to i8*
  %v3_3399b = load i8, i8* %v2_3399b, align 1
  %v1_339ab = add i32 %v0_3390e, -56
  %v2_339ab = inttoptr i32 %v1_339ab to i32*
  %v3_339ab = load i32, i32* %v2_339ab, align 4
  %v1_339b2 = add i32 %v0_3390e, -52
  %v2_339b2 = inttoptr i32 %v1_339b2 to i32*
  %v3_339b2 = load i32, i32* %v2_339b2, align 4
  %v1_339b9 = add i32 %v0_3390e, -44
  %v2_339b9 = inttoptr i32 %v1_339b9 to i32*
  %v3_339b9 = load i32, i32* %v2_339b9, align 4
  %v6_339bf = sext i8 %v3_3399b to i32
  %v7_339bf = call i32 @unknown_696f0(i32 %v3_339b9, i32 %v3_339b2, i32 %v3_339ab, i32 0, i32 %v6_339bf, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_339c9:                               ; preds = %dec_label_pc_338e1
  %v1_339d1 = add i32 %v0_3390e, -80
  %v2_339d1 = inttoptr i32 %v1_339d1 to i8*
  %v3_339d1 = load i8, i8* %v2_339d1, align 1
  %v1_339e1 = add i32 %v0_3390e, -56
  %v2_339e1 = inttoptr i32 %v1_339e1 to i32*
  %v3_339e1 = load i32, i32* %v2_339e1, align 4
  %v1_339e8 = add i32 %v0_3390e, -52
  %v2_339e8 = inttoptr i32 %v1_339e8 to i32*
  %v3_339e8 = load i32, i32* %v2_339e8, align 4
  %v1_339ef = add i32 %v0_3390e, -44
  %v2_339ef = inttoptr i32 %v1_339ef to i32*
  %v3_339ef = load i32, i32* %v2_339ef, align 4
  %v6_339f5 = sext i8 %v3_339d1 to i32
  %v7_339f5 = call i32 @unknown_6975d(i32 %v3_339ef, i32 %v3_339e8, i32 %v3_339e1, i32 0, i32 %v6_339f5, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_339ff:                               ; preds = %dec_label_pc_338e1
  %v1_33a07 = add i32 %v0_3390e, -79
  %v2_33a07 = inttoptr i32 %v1_33a07 to i8*
  %v3_33a07 = load i8, i8* %v2_33a07, align 1
  %v1_33a17 = add i32 %v0_3390e, -56
  %v2_33a17 = inttoptr i32 %v1_33a17 to i32*
  %v3_33a17 = load i32, i32* %v2_33a17, align 4
  %v1_33a1e = add i32 %v0_3390e, -52
  %v2_33a1e = inttoptr i32 %v1_33a1e to i32*
  %v3_33a1e = load i32, i32* %v2_33a1e, align 4
  %v1_33a25 = add i32 %v0_3390e, -44
  %v2_33a25 = inttoptr i32 %v1_33a25 to i32*
  %v3_33a25 = load i32, i32* %v2_33a25, align 4
  %v6_33a2b = sext i8 %v3_33a07 to i32
  %v7_33a2b = call i32 @unknown_6975d(i32 %v3_33a25, i32 %v3_33a1e, i32 %v3_33a17, i32 0, i32 %v6_33a2b, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33a35:                               ; preds = %dec_label_pc_338e1
  %v1_33a3d = add i32 %v0_3390e, -78
  %v2_33a3d = inttoptr i32 %v1_33a3d to i8*
  %v3_33a3d = load i8, i8* %v2_33a3d, align 1
  %v1_33a4d = add i32 %v0_3390e, -56
  %v2_33a4d = inttoptr i32 %v1_33a4d to i32*
  %v3_33a4d = load i32, i32* %v2_33a4d, align 4
  %v1_33a54 = add i32 %v0_3390e, -52
  %v2_33a54 = inttoptr i32 %v1_33a54 to i32*
  %v3_33a54 = load i32, i32* %v2_33a54, align 4
  %v1_33a5b = add i32 %v0_3390e, -44
  %v2_33a5b = inttoptr i32 %v1_33a5b to i32*
  %v3_33a5b = load i32, i32* %v2_33a5b, align 4
  %v6_33a61 = sext i8 %v3_33a3d to i32
  %v7_33a61 = call i32 @unknown_6975d(i32 %v3_33a5b, i32 %v3_33a54, i32 %v3_33a4d, i32 0, i32 %v6_33a61, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33a6b:                               ; preds = %dec_label_pc_338e1
  %v1_33a73 = add i32 %v0_3390e, -77
  %v2_33a73 = inttoptr i32 %v1_33a73 to i8*
  %v3_33a73 = load i8, i8* %v2_33a73, align 1
  %v1_33a83 = add i32 %v0_3390e, -56
  %v2_33a83 = inttoptr i32 %v1_33a83 to i32*
  %v3_33a83 = load i32, i32* %v2_33a83, align 4
  %v1_33a8a = add i32 %v0_3390e, -52
  %v2_33a8a = inttoptr i32 %v1_33a8a to i32*
  %v3_33a8a = load i32, i32* %v2_33a8a, align 4
  %v1_33a91 = add i32 %v0_3390e, -44
  %v2_33a91 = inttoptr i32 %v1_33a91 to i32*
  %v3_33a91 = load i32, i32* %v2_33a91, align 4
  %v6_33a97 = sext i8 %v3_33a73 to i32
  %v7_33a97 = call i32 @unknown_6975d(i32 %v3_33a91, i32 %v3_33a8a, i32 %v3_33a83, i32 0, i32 %v6_33a97, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33aa1:                               ; preds = %dec_label_pc_338e1
  %v1_33aa9 = add i32 %v0_3390e, -76
  %v2_33aa9 = inttoptr i32 %v1_33aa9 to i8*
  %v3_33aa9 = load i8, i8* %v2_33aa9, align 1
  %v1_33ab9 = add i32 %v0_3390e, -56
  %v2_33ab9 = inttoptr i32 %v1_33ab9 to i32*
  %v3_33ab9 = load i32, i32* %v2_33ab9, align 4
  %v1_33ac0 = add i32 %v0_3390e, -52
  %v2_33ac0 = inttoptr i32 %v1_33ac0 to i32*
  %v3_33ac0 = load i32, i32* %v2_33ac0, align 4
  %v1_33ac7 = add i32 %v0_3390e, -44
  %v2_33ac7 = inttoptr i32 %v1_33ac7 to i32*
  %v3_33ac7 = load i32, i32* %v2_33ac7, align 4
  %v6_33acd = sext i8 %v3_33aa9 to i32
  %v7_33acd = call i32 @unknown_6975d(i32 %v3_33ac7, i32 %v3_33ac0, i32 %v3_33ab9, i32 0, i32 %v6_33acd, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33ad7:                               ; preds = %dec_label_pc_338e1
  %v1_33adf = add i32 %v0_3390e, -75
  %v2_33adf = inttoptr i32 %v1_33adf to i8*
  %v3_33adf = load i8, i8* %v2_33adf, align 1
  %v1_33aef = add i32 %v0_3390e, -56
  %v2_33aef = inttoptr i32 %v1_33aef to i32*
  %v3_33aef = load i32, i32* %v2_33aef, align 4
  %v1_33af6 = add i32 %v0_3390e, -52
  %v2_33af6 = inttoptr i32 %v1_33af6 to i32*
  %v3_33af6 = load i32, i32* %v2_33af6, align 4
  %v1_33afd = add i32 %v0_3390e, -44
  %v2_33afd = inttoptr i32 %v1_33afd to i32*
  %v3_33afd = load i32, i32* %v2_33afd, align 4
  %v6_33b03 = sext i8 %v3_33adf to i32
  %v7_33b03 = call i32 @unknown_6975d(i32 %v3_33afd, i32 %v3_33af6, i32 %v3_33aef, i32 0, i32 %v6_33b03, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33b0d:                               ; preds = %dec_label_pc_338e1
  %v1_33b15 = add i32 %v0_3390e, -74
  %v2_33b15 = inttoptr i32 %v1_33b15 to i8*
  %v3_33b15 = load i8, i8* %v2_33b15, align 1
  %v1_33b25 = add i32 %v0_3390e, -56
  %v2_33b25 = inttoptr i32 %v1_33b25 to i32*
  %v3_33b25 = load i32, i32* %v2_33b25, align 4
  %v1_33b2c = add i32 %v0_3390e, -52
  %v2_33b2c = inttoptr i32 %v1_33b2c to i32*
  %v3_33b2c = load i32, i32* %v2_33b2c, align 4
  %v1_33b33 = add i32 %v0_3390e, -44
  %v2_33b33 = inttoptr i32 %v1_33b33 to i32*
  %v3_33b33 = load i32, i32* %v2_33b33, align 4
  %v6_33b39 = sext i8 %v3_33b15 to i32
  %v7_33b39 = call i32 @unknown_6975d(i32 %v3_33b33, i32 %v3_33b2c, i32 %v3_33b25, i32 0, i32 %v6_33b39, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33b43:                               ; preds = %dec_label_pc_338e1
  %v1_33b4b = add i32 %v0_3390e, -73
  %v2_33b4b = inttoptr i32 %v1_33b4b to i8*
  %v3_33b4b = load i8, i8* %v2_33b4b, align 1
  %v1_33b5b = add i32 %v0_3390e, -56
  %v2_33b5b = inttoptr i32 %v1_33b5b to i32*
  %v3_33b5b = load i32, i32* %v2_33b5b, align 4
  %v1_33b62 = add i32 %v0_3390e, -52
  %v2_33b62 = inttoptr i32 %v1_33b62 to i32*
  %v3_33b62 = load i32, i32* %v2_33b62, align 4
  %v1_33b69 = add i32 %v0_3390e, -44
  %v2_33b69 = inttoptr i32 %v1_33b69 to i32*
  %v3_33b69 = load i32, i32* %v2_33b69, align 4
  %v6_33b6f = sext i8 %v3_33b4b to i32
  %v7_33b6f = call i32 @unknown_6975d(i32 %v3_33b69, i32 %v3_33b62, i32 %v3_33b5b, i32 0, i32 %v6_33b6f, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33b79:                               ; preds = %dec_label_pc_338e1
  %v1_33b81 = add i32 %v0_3390e, -72
  %v2_33b81 = inttoptr i32 %v1_33b81 to i8*
  %v3_33b81 = load i8, i8* %v2_33b81, align 1
  %v1_33b91 = add i32 %v0_3390e, -56
  %v2_33b91 = inttoptr i32 %v1_33b91 to i32*
  %v3_33b91 = load i32, i32* %v2_33b91, align 4
  %v1_33b98 = add i32 %v0_3390e, -52
  %v2_33b98 = inttoptr i32 %v1_33b98 to i32*
  %v3_33b98 = load i32, i32* %v2_33b98, align 4
  %v1_33b9f = add i32 %v0_3390e, -44
  %v2_33b9f = inttoptr i32 %v1_33b9f to i32*
  %v3_33b9f = load i32, i32* %v2_33b9f, align 4
  %v6_33ba5 = sext i8 %v3_33b81 to i32
  %v7_33ba5 = call i32 @unknown_6975d(i32 %v3_33b9f, i32 %v3_33b98, i32 %v3_33b91, i32 0, i32 %v6_33ba5, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33baf:                               ; preds = %dec_label_pc_338e1
  %v1_33bb7 = add i32 %v0_3390e, -71
  %v2_33bb7 = inttoptr i32 %v1_33bb7 to i8*
  %v3_33bb7 = load i8, i8* %v2_33bb7, align 1
  %v1_33bc7 = add i32 %v0_3390e, -56
  %v2_33bc7 = inttoptr i32 %v1_33bc7 to i32*
  %v3_33bc7 = load i32, i32* %v2_33bc7, align 4
  %v1_33bce = add i32 %v0_3390e, -52
  %v2_33bce = inttoptr i32 %v1_33bce to i32*
  %v3_33bce = load i32, i32* %v2_33bce, align 4
  %v1_33bd5 = add i32 %v0_3390e, -44
  %v2_33bd5 = inttoptr i32 %v1_33bd5 to i32*
  %v3_33bd5 = load i32, i32* %v2_33bd5, align 4
  %v6_33bdb = sext i8 %v3_33bb7 to i32
  %v7_33bdb = call i32 @unknown_6975d(i32 %v3_33bd5, i32 %v3_33bce, i32 %v3_33bc7, i32 0, i32 %v6_33bdb, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33be5:                               ; preds = %dec_label_pc_338e1
  %v1_33bed = add i32 %v0_3390e, -70
  %v2_33bed = inttoptr i32 %v1_33bed to i8*
  %v3_33bed = load i8, i8* %v2_33bed, align 1
  %v1_33bfd = add i32 %v0_3390e, -56
  %v2_33bfd = inttoptr i32 %v1_33bfd to i32*
  %v3_33bfd = load i32, i32* %v2_33bfd, align 4
  %v1_33c04 = add i32 %v0_3390e, -52
  %v2_33c04 = inttoptr i32 %v1_33c04 to i32*
  %v3_33c04 = load i32, i32* %v2_33c04, align 4
  %v1_33c0b = add i32 %v0_3390e, -44
  %v2_33c0b = inttoptr i32 %v1_33c0b to i32*
  %v3_33c0b = load i32, i32* %v2_33c0b, align 4
  %v6_33c11 = sext i8 %v3_33bed to i32
  %v7_33c11 = call i32 @unknown_6975d(i32 %v3_33c0b, i32 %v3_33c04, i32 %v3_33bfd, i32 0, i32 %v6_33c11, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33c1b:                               ; preds = %dec_label_pc_338e1
  %v1_33c23 = add i32 %v0_3390e, -69
  %v2_33c23 = inttoptr i32 %v1_33c23 to i8*
  %v3_33c23 = load i8, i8* %v2_33c23, align 1
  %v1_33c33 = add i32 %v0_3390e, -56
  %v2_33c33 = inttoptr i32 %v1_33c33 to i32*
  %v3_33c33 = load i32, i32* %v2_33c33, align 4
  %v1_33c3a = add i32 %v0_3390e, -52
  %v2_33c3a = inttoptr i32 %v1_33c3a to i32*
  %v3_33c3a = load i32, i32* %v2_33c3a, align 4
  %v1_33c41 = add i32 %v0_3390e, -44
  %v2_33c41 = inttoptr i32 %v1_33c41 to i32*
  %v3_33c41 = load i32, i32* %v2_33c41, align 4
  %v6_33c47 = sext i8 %v3_33c23 to i32
  %v7_33c47 = call i32 @unknown_6975d(i32 %v3_33c41, i32 %v3_33c3a, i32 %v3_33c33, i32 0, i32 %v6_33c47, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33c51:                               ; preds = %dec_label_pc_338e1
  %v1_33c59 = add i32 %v0_3390e, -60
  %v2_33c59 = inttoptr i32 %v1_33c59 to i8*
  %v3_33c59 = load i8, i8* %v2_33c59, align 1
  %v1_33c69 = add i32 %v0_3390e, -56
  %v2_33c69 = inttoptr i32 %v1_33c69 to i32*
  %v3_33c69 = load i32, i32* %v2_33c69, align 4
  %v1_33c70 = add i32 %v0_3390e, -52
  %v2_33c70 = inttoptr i32 %v1_33c70 to i32*
  %v3_33c70 = load i32, i32* %v2_33c70, align 4
  %v1_33c77 = add i32 %v0_3390e, -44
  %v2_33c77 = inttoptr i32 %v1_33c77 to i32*
  %v3_33c77 = load i32, i32* %v2_33c77, align 4
  %v6_33c7d = sext i8 %v3_33c59 to i32
  %v7_33c7d = call i32 @unknown_6975d(i32 %v3_33c77, i32 %v3_33c70, i32 %v3_33c69, i32 0, i32 %v6_33c7d, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33c87:                               ; preds = %dec_label_pc_338e1
  %v1_33c8f = add i32 %v0_3390e, -59
  %v2_33c8f = inttoptr i32 %v1_33c8f to i8*
  %v3_33c8f = load i8, i8* %v2_33c8f, align 1
  %v1_33c9f = add i32 %v0_3390e, -56
  %v2_33c9f = inttoptr i32 %v1_33c9f to i32*
  %v3_33c9f = load i32, i32* %v2_33c9f, align 4
  %v1_33ca6 = add i32 %v0_3390e, -52
  %v2_33ca6 = inttoptr i32 %v1_33ca6 to i32*
  %v3_33ca6 = load i32, i32* %v2_33ca6, align 4
  %v1_33cad = add i32 %v0_3390e, -44
  %v2_33cad = inttoptr i32 %v1_33cad to i32*
  %v3_33cad = load i32, i32* %v2_33cad, align 4
  %v6_33cb3 = sext i8 %v3_33c8f to i32
  %v7_33cb3 = call i32 @unknown_6975d(i32 %v3_33cad, i32 %v3_33ca6, i32 %v3_33c9f, i32 0, i32 %v6_33cb3, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33cbd:                               ; preds = %dec_label_pc_338e1
  %v0_33cc5 = load i32, i32* @edi, align 4
  %v1_33cd3 = add i32 %v0_3390e, -56
  %v2_33cd3 = inttoptr i32 %v1_33cd3 to i32*
  %v3_33cd3 = load i32, i32* %v2_33cd3, align 4
  %v1_33cda = add i32 %v0_3390e, -52
  %v2_33cda = inttoptr i32 %v1_33cda to i32*
  %v3_33cda = load i32, i32* %v2_33cda, align 4
  %v1_33ce1 = add i32 %v0_3390e, -44
  %v2_33ce1 = inttoptr i32 %v1_33ce1 to i32*
  %v3_33ce1 = load i32, i32* %v2_33ce1, align 4
  %sext2 = mul i32 %v0_33cc5, 16777216
  %v6_33ce7 = sdiv i32 %sext2, 16777216
  %v7_33ce7 = call i32 @unknown_6975d(i32 %v3_33ce1, i32 %v3_33cda, i32 %v3_33cd3, i32 0, i32 %v6_33ce7, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33cf1:                               ; preds = %dec_label_pc_338e1
  %v0_33cf9 = load i32, i32* @esi, align 4
  %v1_33d07 = add i32 %v0_3390e, -56
  %v2_33d07 = inttoptr i32 %v1_33d07 to i32*
  %v3_33d07 = load i32, i32* %v2_33d07, align 4
  %v1_33d0e = add i32 %v0_3390e, -52
  %v2_33d0e = inttoptr i32 %v1_33d0e to i32*
  %v3_33d0e = load i32, i32* %v2_33d0e, align 4
  %v1_33d15 = add i32 %v0_3390e, -44
  %v2_33d15 = inttoptr i32 %v1_33d15 to i32*
  %v3_33d15 = load i32, i32* %v2_33d15, align 4
  %sext1 = mul i32 %v0_33cf9, 16777216
  %v6_33d1b = sdiv i32 %sext1, 16777216
  %v7_33d1b = call i32 @unknown_6975d(i32 %v3_33d15, i32 %v3_33d0e, i32 %v3_33d07, i32 0, i32 %v6_33d1b, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33d22:                               ; preds = %dec_label_pc_338e1
  %v0_33d2a = load i32, i32* @ebx, align 4
  %v1_33d36 = add i32 %v0_3390e, -56
  %v2_33d36 = inttoptr i32 %v1_33d36 to i32*
  %v3_33d36 = load i32, i32* %v2_33d36, align 4
  %v1_33d3d = add i32 %v0_3390e, -52
  %v2_33d3d = inttoptr i32 %v1_33d3d to i32*
  %v3_33d3d = load i32, i32* %v2_33d3d, align 4
  %v1_33d44 = add i32 %v0_3390e, -44
  %v2_33d44 = inttoptr i32 %v1_33d44 to i32*
  %v3_33d44 = load i32, i32* %v2_33d44, align 4
  %sext = mul i32 %v0_33d2a, 16777216
  %v6_33d4a = sdiv i32 %sext, 16777216
  %v7_33d4a = call i32 @unknown_6975d(i32 %v3_33d44, i32 %v3_33d3d, i32 %v3_33d36, i32 0, i32 %v6_33d4a, i32 1)
  br label %dec_label_pc_33d89

dec_label_pc_33d51:                               ; preds = %dec_label_pc_338e1
  %v0_33d61 = load i32, i32* @ecx, align 4
  %v0_33d65 = load i32, i32* @edx, align 4
  %v1_33d69 = add i32 %v0_3390e, -56
  %v2_33d69 = inttoptr i32 %v1_33d69 to i32*
  %v3_33d69 = load i32, i32* %v2_33d69, align 4
  %v1_33d70 = add i32 %v0_3390e, -52
  %v2_33d70 = inttoptr i32 %v1_33d70 to i32*
  %v3_33d70 = load i32, i32* %v2_33d70, align 4
  %v3_33d77 = load i32, i32* %v2_3390e, align 4
  %v1_33d7e = add i32 %v0_3390e, -44
  %v2_33d7e = inttoptr i32 %v1_33d7e to i32*
  %v3_33d7e = load i32, i32* %v2_33d7e, align 4
  %sext3 = mul i32 %v0_33d65, 16777216
  %v8_33d84 = sdiv i32 %sext3, 16777216
  %v9_33d84 = call i32 @unknown_697b7(i32 %v3_33d7e, i32 %v3_33d77, i32 %v3_33d70, i32 %v3_33d69, i32 %v8_33d84, i32 %v0_33d61, i32 0, i32 0)
  br label %dec_label_pc_33d89

dec_label_pc_33d89:                               ; preds = %dec_label_pc_33d22, %dec_label_pc_33cf1, %dec_label_pc_33cbd, %dec_label_pc_33c87, %dec_label_pc_33c51, %dec_label_pc_33c1b, %dec_label_pc_33be5, %dec_label_pc_33baf, %dec_label_pc_33b79, %dec_label_pc_33b43, %dec_label_pc_33b0d, %dec_label_pc_33ad7, %dec_label_pc_33aa1, %dec_label_pc_33a6b, %dec_label_pc_33a35, %dec_label_pc_339ff, %dec_label_pc_339c9, %dec_label_pc_33993, %dec_label_pc_3395d, %dec_label_pc_33927, %dec_label_pc_33d51
  %v0_33d89 = load i32, i32* @ebp, align 4
  %v1_33d89 = add i32 %v0_33d89, -28
  %v2_33d89 = inttoptr i32 %v1_33d89 to i32*
  %v3_33d89 = load i32, i32* %v2_33d89, align 4
  %v1_33d8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_33d8c = xor i32 %v1_33d8c, %v3_33d89
  %v3_33d8c = icmp eq i32 %v2_33d8c, 0
  store i32 %v2_33d8c, i32* @eax, align 4
  br i1 %v3_33d8c, label %bb, label %dec_label_pc_33d95

bb:                                               ; preds = %dec_label_pc_33d89
  %v1_33d93 = call i32 @function_33d9a()
  br label %dec_label_pc_33d95

dec_label_pc_33d95:                               ; preds = %bb, %dec_label_pc_33d89
  %v2_33d93 = phi i32 [ %v1_33d93, %bb ], [ %v2_33d8c, %dec_label_pc_33d89 ]
  ret i32 %v2_33d93

; uselistorder directives
  uselistorder i32 %v0_3390e, { 0, 2, 1, 77, 79, 78, 74, 76, 75, 71, 73, 72, 67, 69, 70, 68, 63, 65, 66, 64, 59, 61, 62, 60, 55, 57, 58, 56, 51, 53, 54, 52, 47, 49, 50, 48, 43, 45, 46, 44, 39, 41, 42, 40, 35, 37, 38, 36, 31, 33, 34, 32, 27, 29, 30, 28, 23, 25, 26, 24, 19, 21, 22, 20, 15, 17, 18, 16, 11, 13, 14, 12, 7, 9, 10, 8, 3, 5, 6, 4, 80 }
  uselistorder i32 -59, { 1, 0 }
  uselistorder i32 -60, { 66, 182, 145, 146, 144, 147, 173, 174, 1, 0, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 175, 25, 26, 27, 28, 29, 176, 177, 178, 179, 166, 167, 165, 141, 64, 65, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 88, 89, 90, 91, 103, 104, 105, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 106, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 42, 107, 108, 43, 2, 3, 111, 112, 113, 114, 5, 4, 6, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 172, 162, 163, 164, 109, 7, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 123, 138, 139, 140, 115, 116, 118, 119, 120, 121, 122, 117, 9, 8, 10, 11, 180, 12, 13, 142, 14, 143, 15, 16, 17, 18, 168, 169, 170, 171, 19, 20, 21, 22, 23, 24, 181 }
  uselistorder i32 -69, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -71, { 2, 0, 1 }
  uselistorder i32 -72, { 9, 8, 1, 2, 3, 4, 5, 6, 25, 26, 27, 28, 29, 21, 7, 19, 10, 11, 12, 13, 14, 0, 20, 15, 16, 17, 18, 22, 23, 24 }
  uselistorder i32 -75, { 1, 0 }
  uselistorder i32 -76, { 4, 11, 5, 6, 0, 7, 8, 9, 10, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @unknown_6975d, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -80, { 9, 10, 11, 12, 13, 17, 18, 19, 7, 8, 0, 2, 15, 14, 16, 3, 20, 21, 4, 5, 6, 1 }
  uselistorder i32 17, { 1, 0 }
  uselistorder i32 15, { 1, 2, 0 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 0 }
  uselistorder i32 11, { 1, 0 }
  uselistorder i32 10, { 1, 0 }
  uselistorder i32 9, { 2, 1, 0 }
  uselistorder i32 6, { 6, 2, 7, 8, 9, 3, 0, 4, 5, 1, 10 }
  uselistorder i32 5, { 8, 3, 9, 1, 2, 4, 5, 6, 0, 7, 10, 11 }
  uselistorder i32 -68, { 22, 23, 65, 64, 0, 46, 47, 1, 58, 59, 17, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 60, 51, 52, 53, 54, 44, 2, 61, 62, 63, 37, 38, 16, 29, 24, 31, 25, 26, 27, 28, 30, 32, 3, 33, 34, 35, 36, 48, 49, 50, 43, 39, 40, 41, 42, 4, 45, 55, 56, 57, 5, 6, 7, 8, 9 }
  uselistorder i32 -64, { 26, 27, 97, 0, 64, 65, 66, 67, 68, 1, 84, 85, 20, 21, 22, 23, 24, 10, 11, 12, 13, 14, 15, 16, 17, 87, 88, 89, 90, 86, 91, 92, 73, 74, 75, 76, 59, 81, 46, 25, 18, 19, 33, 34, 28, 29, 37, 38, 30, 31, 32, 35, 36, 39, 40, 2, 3, 41, 42, 43, 44, 45, 69, 70, 71, 82, 83, 72, 56, 57, 58, 54, 55, 48, 49, 50, 51, 52, 53, 47, 4, 5, 60, 61, 62, 6, 7, 63, 77, 78, 79, 80, 8, 93, 94, 95, 9, 96 }
  uselistorder i32 -55, { 1, 0 }
  uselistorder label %dec_label_pc_33d89, { 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
}

define i32 @function_33d9a() local_unnamed_addr {
dec_label_pc_33d9a:
  %v0_33da1 = load i32, i32* @eax, align 4
  ret i32 %v0_33da1
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi0EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_6l_itemINS3_5long_ILl3EEE14CNoDestinationNS9_INSA_ILl2EEE6CKeyIDNS9_INSA_ILl1EEE9CScriptIDNS7_5l_endEEEEEEEEENS8_ISH_EEEENS1_14invoke_visitorINS1_15direct_assignerISG_EEEEPvNS_7variantISC_SE_SG_NS1_5void_ESU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_SU_E18has_fallback_type_EEENT1_11result_typeEiiRSX_T2_NS3_5bool_ILb0EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_33df4:
  %tmp121 = icmp ult i32 %arg2, 20
  br i1 %tmp121, label %dec_label_pc_33e44, label %bb

bb:                                               ; preds = %dec_label_pc_33df4
  %sext = mul i32 %arg6, 16777216
  %v12_33e3e = sdiv i32 %sext, 16777216
  %v13_33e3e = sext i8 %arg5 to i32
  %v14_33e3e = call i32 @function_3427d(i32 %arg8, i32 %arg7, i32 %v12_33e3e, i32 %v13_33e3e, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_33e44

dec_label_pc_33e44:                               ; preds = %dec_label_pc_33df4, %bb
  %v2_33e47 = mul i32 %arg2, 4
  %v1_33e4a = add i32 %v2_33e47, ptrtoint (i32* @global_var_342d0.2303 to i32)
  %v1_33e4f = inttoptr i32 %v1_33e4a to i32*
  %v2_33e4f = load i32, i32* %v1_33e4f, align 4
  ret i32 %v2_33e4f

; uselistorder directives
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_33e44, { 1, 0 }
}

define i32 @function_33e53() local_unnamed_addr {
dec_label_pc_33e53:
  %v0_33e5b = load i32, i32* @ebp, align 4
  %v1_33e5b = add i32 %v0_33e5b, -83
  %v2_33e5b = inttoptr i32 %v1_33e5b to i8*
  %v3_33e5b = load i8, i8* %v2_33e5b, align 1
  %v1_33e6b = add i32 %v0_33e5b, -56
  %v2_33e6b = inttoptr i32 %v1_33e6b to i32*
  %v3_33e6b = load i32, i32* %v2_33e6b, align 4
  %v1_33e72 = add i32 %v0_33e5b, -52
  %v2_33e72 = inttoptr i32 %v1_33e72 to i32*
  %v3_33e72 = load i32, i32* %v2_33e72, align 4
  %v1_33e79 = add i32 %v0_33e5b, -44
  %v2_33e79 = inttoptr i32 %v1_33e79 to i32*
  %v3_33e79 = load i32, i32* %v2_33e79, align 4
  %v6_33e7f = sext i8 %v3_33e5b to i32
  %v7_33e7f = call i32 @unknown_69d4a(i32 %v3_33e79, i32 %v3_33e72, i32 %v3_33e6b, i32 0, i32 %v6_33e7f, i32 1)
  store i32 %v7_33e7f, i32* @eax, align 4
  %v0_33e84 = call i32 @function_342b5()
  ret i32 %v0_33e84

; uselistorder directives
  uselistorder i32 %v0_33e5b, { 0, 2, 1, 3 }
  uselistorder i32 -83, { 0, 5, 1, 2, 3, 4, 6 }
}

define i32 @function_33e89() local_unnamed_addr {
dec_label_pc_33e89:
  %v0_33e91 = load i32, i32* @ebp, align 4
  %v1_33e91 = add i32 %v0_33e91, -82
  %v2_33e91 = inttoptr i32 %v1_33e91 to i8*
  %v3_33e91 = load i8, i8* %v2_33e91, align 1
  %v1_33ea1 = add i32 %v0_33e91, -56
  %v2_33ea1 = inttoptr i32 %v1_33ea1 to i32*
  %v3_33ea1 = load i32, i32* %v2_33ea1, align 4
  %v1_33ea8 = add i32 %v0_33e91, -52
  %v2_33ea8 = inttoptr i32 %v1_33ea8 to i32*
  %v3_33ea8 = load i32, i32* %v2_33ea8, align 4
  %v1_33eaf = add i32 %v0_33e91, -44
  %v2_33eaf = inttoptr i32 %v1_33eaf to i32*
  %v3_33eaf = load i32, i32* %v2_33eaf, align 4
  %v6_33eb5 = sext i8 %v3_33e91 to i32
  %v7_33eb5 = call i32 @unknown_69db7(i32 %v3_33eaf, i32 %v3_33ea8, i32 %v3_33ea1, i32 0, i32 %v6_33eb5, i32 1)
  store i32 %v7_33eb5, i32* @eax, align 4
  %v0_33eba = call i32 @function_342b5()
  ret i32 %v0_33eba

; uselistorder directives
  uselistorder i32 %v0_33e91, { 0, 2, 1, 3 }
  uselistorder i32 -82, { 0, 4, 1, 2, 3 }
}

define i32 @function_33ec0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_33ec0:
  %eax.global-to-local = alloca i32, align 4
  %v0_33ec1 = load i32, i32* @eax, align 4
  %v11_33ec1 = and i32 %v0_33ec1, -236
  store i32 %v11_33ec1, i32* %eax.global-to-local, align 4
  %v1_33ec3 = inttoptr i32 %v11_33ec1 to i32*
  %v2_33ec3 = load i32, i32* %v1_33ec3, align 4
  %v4_33ec3 = add i32 %v2_33ec3, %v11_33ec1
  store i32 %v4_33ec3, i32* %v1_33ec3, align 4
  %v0_33ec5 = load i32, i32* %eax.global-to-local, align 4
  %v1_33ec5 = inttoptr i32 %v0_33ec5 to i8*
  %v2_33ec5 = load i8, i8* %v1_33ec5, align 1
  %v4_33ec5 = trunc i32 %v0_33ec5 to i8
  %v5_33ec5 = add i8 %v2_33ec5, %v4_33ec5
  store i8 %v5_33ec5, i8* %v1_33ec5, align 1
  %v0_33ec7 = load i32, i32* @ebp, align 4
  %v1_33ec7 = add i32 %v0_33ec7, -81
  %v2_33ec7 = inttoptr i32 %v1_33ec7 to i8*
  %v3_33ec7 = load i8, i8* %v2_33ec7, align 1
  %v1_33ed7 = add i32 %v0_33ec7, -56
  %v2_33ed7 = inttoptr i32 %v1_33ed7 to i32*
  %v3_33ed7 = load i32, i32* %v2_33ed7, align 4
  store i32 %v3_33ed7, i32* %eax.global-to-local, align 4
  %v1_33ede = add i32 %v0_33ec7, -52
  %v2_33ede = inttoptr i32 %v1_33ede to i32*
  %v3_33ede = load i32, i32* %v2_33ede, align 4
  store i32 %v3_33ede, i32* %eax.global-to-local, align 4
  %v1_33ee5 = add i32 %v0_33ec7, -44
  %v2_33ee5 = inttoptr i32 %v1_33ee5 to i32*
  %v3_33ee5 = load i32, i32* %v2_33ee5, align 4
  store i32 %v3_33ee5, i32* %eax.global-to-local, align 4
  %v5_33eeb = sext i8 %v3_33ec7 to i32
  %v6_33eeb = call i32 @unknown_69e24(i32 %v3_33ee5, i32 %v3_33ede, i32 %v3_33ed7, i32 0, i32 %v5_33eeb)
  store i32 %v6_33eeb, i32* @eax, align 4
  %v0_33ef0 = call i32 @function_342b5()
  store i32 %v0_33ef0, i32* %eax.global-to-local, align 4
  ret i32 %v0_33ef0

; uselistorder directives
  uselistorder i32 %v0_33ec7, { 0, 2, 1, 3 }
  uselistorder i32 %v11_33ec1, { 0, 2, 1 }
  uselistorder i32 -81, { 5, 6, 0, 1, 2, 3, 4, 7 }
}

define i32 @function_33ef5() local_unnamed_addr {
dec_label_pc_33ef5:
  %v0_33efd = load i32, i32* @ebp, align 4
  %v1_33f1b = add i32 %v0_33efd, -44
  %v2_33f1b = inttoptr i32 %v1_33f1b to i32*
  %v3_33f1b = load i32, i32* %v2_33f1b, align 4
  %v1_33f21 = call i32 @unknown_69e91(i32 %v3_33f1b)
  store i32 %v1_33f21, i32* @eax, align 4
  %v0_33f26 = call i32 @function_342b5()
  ret i32 %v0_33f26
}

define i32 @function_33f4e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33f4e:
  %v0_33f51 = load i32, i32* @ebp, align 4
  %v1_33f51 = add i32 %v0_33f51, -44
  %v2_33f51 = inttoptr i32 %v1_33f51 to i32*
  %v3_33f51 = load i32, i32* %v2_33f51, align 4
  %v1_33f57 = call i32 @unknown_69e91(i32 %v3_33f51)
  store i32 %v1_33f57, i32* @eax, align 4
  %v0_33f5c = call i32 @function_342b5()
  ret i32 %v0_33f5c
}

define i32 @function_33f61() local_unnamed_addr {
dec_label_pc_33f61:
  %v0_33f69 = load i32, i32* @ebp, align 4
  %v1_33f87 = add i32 %v0_33f69, -44
  %v2_33f87 = inttoptr i32 %v1_33f87 to i32*
  %v3_33f87 = load i32, i32* %v2_33f87, align 4
  %v1_33f8d = call i32 @unknown_69e91(i32 %v3_33f87)
  store i32 %v1_33f8d, i32* @eax, align 4
  %v0_33f92 = call i32 @function_342b5()
  ret i32 %v0_33f92
}

define i32 @function_33fc8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33fc8:
  %v0_33fc8 = call i32 @function_342b5()
  ret i32 %v0_33fc8
}

define i32 @function_33fd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_33fd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_33fd0 = load i32, i32* @eax, align 4
  %v1_33fd0 = trunc i32 %v0_33fd0 to i8
  %v2_33fd0 = load i1, i1* @cf, align 1
  %v3_33fd0 = zext i1 %v2_33fd0 to i8
  %v4_33fd0 = add i8 %v1_33fd0, 1
  %v5_33fd0 = add i8 %v4_33fd0, %v3_33fd0
  %v25_33fd0 = zext i8 %v5_33fd0 to i32
  %v27_33fd0 = and i32 %v0_33fd0, -256
  %v28_33fd0 = or i32 %v25_33fd0, %v27_33fd0
  store i32 %v28_33fd0, i32* %eax.global-to-local, align 4
  %v1_33fd2 = inttoptr i32 %v28_33fd0 to i8*
  %v2_33fd2 = load i8, i8* %v1_33fd2, align 1
  %v5_33fd2 = add i8 %v2_33fd2, %v5_33fd0
  store i8 %v5_33fd2, i8* %v1_33fd2, align 1
  %v2_33fd4 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_33fd4 = load i32, i32* @ecx, align 4
  %v4_33fd4 = trunc i32 %v3_33fd4 to i8
  %v5_33fd4 = add i8 %v4_33fd4, %v2_33fd4
  %v20_33fd4 = load i32, i32* @edi, align 4
  %v21_33fd4 = inttoptr i32 %v20_33fd4 to i8*
  store i8 %v5_33fd4, i8* %v21_33fd4, align 1
  %v0_33fd8 = load i32, i32* %eax.global-to-local, align 4
  %v1_33fd8 = and i32 %v0_33fd8, -65520
  %v11_33fdb = or i32 %v1_33fd8, and (i32 ptrtoint (i8* @global_var_8800.2296 to i32), i32 -240)
  store i32 %v11_33fdb, i32* %eax.global-to-local, align 4
  ret i32 %v11_33fdb

; uselistorder directives
  uselistorder i32 -240, { 0, 1, 4, 2, 3 }
}

define i32 @function_33fe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_33fe0:
  %v0_33fe0 = load i32, i32* @eax, align 4
  %v1_33fe0 = trunc i32 %v0_33fe0 to i8
  %v1_33fe2 = inttoptr i32 %v0_33fe0 to i8*
  %v2_33fe2 = load i8, i8* %v1_33fe2, align 1
  %v5_33fe2 = add i8 %v2_33fe2, %v1_33fe0
  store i8 %v5_33fe2, i8* %v1_33fe2, align 1
  %v0_33fe4 = load i32, i32* @ebx, align 4
  %v1_33fe4 = add i32 %v0_33fe4, 1149880389
  %v2_33fe4 = inttoptr i32 %v1_33fe4 to i8*
  %v3_33fe4 = load i8, i8* %v2_33fe4, align 1
  %v4_33fe4 = load i32, i32* @ecx, align 4
  %v5_33fe4 = trunc i32 %v4_33fe4 to i8
  %v6_33fe4 = add i8 %v5_33fe4, %v3_33fe4
  store i8 %v6_33fe4, i8* %v2_33fe4, align 1
  %v0_33fec = load i32, i32* @ebp, align 4
  %v1_33ff3 = add i32 %v0_33fec, -44
  %v2_33ff3 = inttoptr i32 %v1_33ff3 to i32*
  %v3_33ff3 = load i32, i32* %v2_33ff3, align 4
  %v1_33ff9 = call i32 @unknown_69e91(i32 %v3_33ff3)
  store i32 %v1_33ff9, i32* @eax, align 4
  %v0_33ffe = call i32 @function_342b5()
  ret i32 %v0_33ffe

; uselistorder directives
  uselistorder i32 1149880389, { 1, 2, 3, 4, 5, 0 }
}

define i32 @function_34034(i32 %arg1) local_unnamed_addr {
dec_label_pc_34034:
  %v0_34034 = call i32 @function_342b5()
  ret i32 %v0_34034
}

define i32 @function_34039() local_unnamed_addr {
dec_label_pc_34039:
  %v0_34041 = load i32, i32* @ebp, align 4
  %v1_3405f = add i32 %v0_34041, -44
  %v2_3405f = inttoptr i32 %v1_3405f to i32*
  %v3_3405f = load i32, i32* %v2_3405f, align 4
  %v1_34065 = call i32 @unknown_69e91(i32 %v3_3405f)
  store i32 %v1_34065, i32* @eax, align 4
  %v0_3406a = call i32 @function_342b5()
  ret i32 %v0_3406a
}

define i32 @function_3406f() local_unnamed_addr {
dec_label_pc_3406f:
  %v0_34077 = load i32, i32* @ebp, align 4
  %v1_34095 = add i32 %v0_34077, -44
  %v2_34095 = inttoptr i32 %v1_34095 to i32*
  %v3_34095 = load i32, i32* %v2_34095, align 4
  %v1_3409b = call i32 @unknown_69e91(i32 %v3_34095)
  store i32 %v1_3409b, i32* @eax, align 4
  %v0_340a0 = call i32 @function_342b5()
  ret i32 %v0_340a0
}

define i32 @function_340a5() local_unnamed_addr {
dec_label_pc_340a5:
  %v0_340ad = load i32, i32* @ebp, align 4
  %v1_340cb = add i32 %v0_340ad, -44
  %v2_340cb = inttoptr i32 %v1_340cb to i32*
  %v3_340cb = load i32, i32* %v2_340cb, align 4
  %v1_340d1 = call i32 @unknown_69e91(i32 %v3_340cb)
  store i32 %v1_340d1, i32* @eax, align 4
  %v0_340d6 = call i32 @function_342b5()
  ret i32 %v0_340d6
}

define i32 @function_34110(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34110:
  %eax.global-to-local = alloca i32, align 4
  %v3_34110 = load i32, i32* @eax, align 4
  %v11_34113 = and i32 %v3_34110, -236
  store i32 %v11_34113, i32* %eax.global-to-local, align 4
  %v1_34115 = inttoptr i32 %v11_34113 to i32*
  %v2_34115 = load i32, i32* %v1_34115, align 4
  %v4_34115 = add i32 %v2_34115, %v11_34113
  store i32 %v4_34115, i32* %v1_34115, align 4
  %v0_34117 = load i32, i32* %eax.global-to-local, align 4
  %v1_34117 = inttoptr i32 %v0_34117 to i8*
  %v2_34117 = load i8, i8* %v1_34117, align 1
  %v4_34117 = trunc i32 %v0_34117 to i8
  %v5_34117 = add i8 %v2_34117, %v4_34117
  store i8 %v5_34117, i8* %v1_34117, align 1
  %v0_34119 = load i32, i32* @ebp, align 4
  %v1_34119 = add i32 %v0_34119, -70
  %v2_34119 = inttoptr i32 %v1_34119 to i8*
  %v3_34119 = load i8, i8* %v2_34119, align 1
  %v4_34119 = zext i8 %v3_34119 to i32
  store i32 %v4_34119, i32* %eax.global-to-local, align 4
  %v1_34129 = add i32 %v0_34119, -56
  %v2_34129 = inttoptr i32 %v1_34129 to i32*
  %v3_34129 = load i32, i32* %v2_34129, align 4
  store i32 %v3_34129, i32* %eax.global-to-local, align 4
  %v1_34130 = add i32 %v0_34119, -52
  %v2_34130 = inttoptr i32 %v1_34130 to i32*
  %v3_34130 = load i32, i32* %v2_34130, align 4
  store i32 %v3_34130, i32* %eax.global-to-local, align 4
  %v1_34137 = add i32 %v0_34119, -44
  %v2_34137 = inttoptr i32 %v1_34137 to i32*
  %v3_34137 = load i32, i32* %v2_34137, align 4
  store i32 %v3_34137, i32* %eax.global-to-local, align 4
  %v1_3413d = call i32 @unknown_69e91(i32 %v3_34137)
  store i32 %v1_3413d, i32* @eax, align 4
  %v0_34142 = call i32 @function_342b5()
  store i32 %v0_34142, i32* %eax.global-to-local, align 4
  ret i32 %v0_34142

; uselistorder directives
  uselistorder i32 %v0_34119, { 1, 0, 2, 3 }
  uselistorder i32 %v11_34113, { 0, 2, 1 }
  uselistorder i32 -70, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 -236, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 7, 16, 17, 18, 8, 9, 10 }
}

define i32 @function_34147() local_unnamed_addr {
dec_label_pc_34147:
  %v0_3414f = load i32, i32* @ebp, align 4
  %v1_3416d = add i32 %v0_3414f, -44
  %v2_3416d = inttoptr i32 %v1_3416d to i32*
  %v3_3416d = load i32, i32* %v2_3416d, align 4
  %v1_34173 = call i32 @unknown_69e91(i32 %v3_3416d)
  store i32 %v1_34173, i32* @eax, align 4
  %v0_34178 = call i32 @function_342b5()
  ret i32 %v0_34178
}

define i32 @function_3417d() local_unnamed_addr {
dec_label_pc_3417d:
  %v0_34185 = load i32, i32* @ebp, align 4
  %v1_341a3 = add i32 %v0_34185, -44
  %v2_341a3 = inttoptr i32 %v1_341a3 to i32*
  %v3_341a3 = load i32, i32* %v2_341a3, align 4
  %v1_341a9 = call i32 @unknown_69e91(i32 %v3_341a3)
  store i32 %v1_341a9, i32* @eax, align 4
  %v0_341ae = call i32 @function_342b5()
  ret i32 %v0_341ae
}

define i32 @function_341b3() local_unnamed_addr {
dec_label_pc_341b3:
  %v0_341bb = load i32, i32* @ebp, align 4
  %v1_341d9 = add i32 %v0_341bb, -44
  %v2_341d9 = inttoptr i32 %v1_341d9 to i32*
  %v3_341d9 = load i32, i32* %v2_341d9, align 4
  %v1_341df = call i32 @unknown_69e91(i32 %v3_341d9)
  store i32 %v1_341df, i32* @eax, align 4
  %v0_341e4 = call i32 @function_342b5()
  ret i32 %v0_341e4
}

define i32 @function_341e9() local_unnamed_addr {
dec_label_pc_341e9:
  %v0_341ff = load i32, i32* @ebp, align 4
  %v1_3420d = add i32 %v0_341ff, -44
  %v2_3420d = inttoptr i32 %v1_3420d to i32*
  %v3_3420d = load i32, i32* %v2_3420d, align 4
  %v1_34213 = call i32 @unknown_69e91(i32 %v3_3420d)
  store i32 %v1_34213, i32* @eax, align 4
  %v0_34218 = call i32 @function_342b5()
  ret i32 %v0_34218
}

define i32 @function_3421d() local_unnamed_addr {
dec_label_pc_3421d:
  %v0_34233 = load i32, i32* @ebp, align 4
  %v1_34241 = add i32 %v0_34233, -44
  %v2_34241 = inttoptr i32 %v1_34241 to i32*
  %v3_34241 = load i32, i32* %v2_34241, align 4
  %v1_34247 = call i32 @unknown_69e91(i32 %v3_34241)
  store i32 %v1_34247, i32* @eax, align 4
  %v0_3424c = call i32 @function_342b5()
  ret i32 %v0_3424c
}

define i32 @function_34270(i32 %arg1) local_unnamed_addr {
dec_label_pc_34270:
  %v0_34270 = load i32, i32* @ebp, align 4
  %v1_34270 = add i32 %v0_34270, -44
  %v2_34270 = inttoptr i32 %v1_34270 to i32*
  %v3_34270 = load i32, i32* %v2_34270, align 4
  %v1_34276 = call i32 @unknown_69e91(i32 %v3_34270)
  store i32 %v1_34276, i32* @eax, align 4
  %v0_3427b = call i32 @function_342b5()
  ret i32 %v0_3427b

; uselistorder directives
  uselistorder i32 ()* @function_342b5, { 5, 18, 17, 16, 15, 14, 4, 13, 12, 11, 1, 3, 0, 10, 6, 9, 2, 8, 7 }
  uselistorder i32 (i32)* @unknown_69e91, { 2, 13, 12, 11, 10, 9, 1, 8, 7, 6, 0, 5, 3, 4 }
}

define i32 @function_3427d(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_3427d:
  %v0_3428d = load i32, i32* @ecx, align 4
  %v0_34291 = load i32, i32* @edx, align 4
  %v0_34295 = load i32, i32* @ebp, align 4
  %v1_34295 = add i32 %v0_34295, -56
  %v2_34295 = inttoptr i32 %v1_34295 to i32*
  %v3_34295 = load i32, i32* %v2_34295, align 4
  %v1_3429c = add i32 %v0_34295, -52
  %v2_3429c = inttoptr i32 %v1_3429c to i32*
  %v3_3429c = load i32, i32* %v2_3429c, align 4
  %v1_342a3 = add i32 %v0_34295, -48
  %v2_342a3 = inttoptr i32 %v1_342a3 to i32*
  %v3_342a3 = load i32, i32* %v2_342a3, align 4
  %v1_342aa = add i32 %v0_34295, -44
  %v2_342aa = inttoptr i32 %v1_342aa to i32*
  %v3_342aa = load i32, i32* %v2_342aa, align 4
  %sext = mul i32 %v0_34291, 16777216
  %v8_342b0 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_3428d, 16777216
  %v9_342b0 = sdiv i32 %sext1, 16777216
  %v10_342b0 = call i32 @unknown_69eeb(i32 %v3_342aa, i32 %v3_342a3, i32 %v3_3429c, i32 %v3_34295, i32 %v8_342b0, i32 %v9_342b0, i32 0, i32 0)
  ret i32 %v10_342b0

; uselistorder directives
  uselistorder i32 %v0_34295, { 1, 0, 2, 3 }
}

define i32 @function_342b5() local_unnamed_addr {
dec_label_pc_342b5:
  %v0_342cd = load i32, i32* @eax, align 4
  ret i32 %v0_342cd
}

define i32 @function_342dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_342dc:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3430a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3430a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPv14CNoDestinationNS_7variantIS5_6CKeyID9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34320:
  ret i32 %arg6
}

define i32 @function_3434e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3434e:
  %v2_3434e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_3434e = load i32, i32* @eax, align 4
  %v4_3434e = trunc i32 %v3_3434e to i8
  %v5_3434e = add i8 %v4_3434e, %v2_3434e
  %v21_3434e = inttoptr i32 %v3_3434e to i8*
  store i8 %v5_3434e, i8* %v21_3434e, align 1
  %v0_34350 = load i32, i32* @ecx, align 4
  %v1_34350 = add i32 %v0_34350, -1070468027
  %v2_34350 = inttoptr i32 %v1_34350 to i8*
  %v3_34350 = load i8, i8* %v2_34350, align 1
  %v5_34350 = trunc i32 %v0_34350 to i8
  %v6_34350 = add i8 %v3_34350, %v5_34350
  store i8 %v6_34350, i8* %v2_34350, align 1
  %v0_3435a = load i32, i32* @ebp, align 4
  %v1_34361 = add i32 %v0_3435a, -36
  %v2_34361 = inttoptr i32 %v1_34361 to i32*
  %v3_34361 = load i32, i32* %v2_34361, align 4
  ret i32 %v3_34361
}

define i32 @function_34366(i32 %arg1) local_unnamed_addr {
dec_label_pc_34366:
  %v0_34368 = load i32, i32* @ebp, align 4
  %v1_34368 = add i32 %v0_34368, -32
  %v2_34368 = inttoptr i32 %v1_34368 to i32*
  %v3_34368 = load i32, i32* %v2_34368, align 4
  %v1_3436f = add i32 %v0_34368, -28
  %v2_3436f = inttoptr i32 %v1_3436f to i32*
  %v3_3436f = load i32, i32* %v2_3436f, align 4
  %v2_34375 = call i32 @unknown_6a47e(i32 %v3_3436f, i32 %v3_34368)
  %v0_3437a = load i32, i32* @ebp, align 4
  %v1_3437a = add i32 %v0_3437a, -12
  %v2_3437a = inttoptr i32 %v1_3437a to i32*
  %v3_3437a = load i32, i32* %v2_3437a, align 4
  %v1_3437d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3437d = xor i32 %v1_3437d, %v3_3437a
  %v3_3437d = icmp eq i32 %v2_3437d, 0
  store i32 %v2_3437d, i32* @eax, align 4
  br i1 %v3_3437d, label %bb, label %dec_label_pc_34386

bb:                                               ; preds = %dec_label_pc_34366
  %v1_34384 = call i32 @function_3438b()
  br label %dec_label_pc_34386

dec_label_pc_34386:                               ; preds = %bb, %dec_label_pc_34366
  %v2_34384 = phi i32 [ %v1_34384, %bb ], [ %v2_3437d, %dec_label_pc_34366 ]
  ret i32 %v2_34384
}

define i32 @function_3438b() local_unnamed_addr {
dec_label_pc_3438b:
  %v0_3438c = load i32, i32* @eax, align 4
  ret i32 %v0_3438c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPv6CKeyIDNS_7variantI14CNoDestinationS5_9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_3438d:
  %eax.global-to-local = alloca i32, align 4
  %v17_34390 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_34390
}

define i32 @function_34393(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34393:
  %v0_34393 = load i32, i32* @ebp, align 4
  %v1_34393 = add i32 %v0_34393, 8
  %v2_34393 = inttoptr i32 %v1_34393 to i32*
  %v3_34393 = load i32, i32* %v2_34393, align 4
  %v2_34396 = add i32 %v0_34393, -28
  %v3_34396 = inttoptr i32 %v2_34396 to i32*
  store i32 %v3_34393, i32* %v3_34396, align 4
  %v0_34399 = load i32, i32* @ebp, align 4
  %v1_34399 = add i32 %v0_34399, 12
  %v2_34399 = inttoptr i32 %v1_34399 to i32*
  %v3_34399 = load i32, i32* %v2_34399, align 4
  %v2_3439c = add i32 %v0_34399, -32
  %v3_3439c = inttoptr i32 %v2_3439c to i32*
  store i32 %v3_34399, i32* %v3_3439c, align 4
  %v0_3439f = load i32, i32* @ebp, align 4
  %v1_3439f = add i32 %v0_3439f, 16
  %v2_3439f = inttoptr i32 %v1_3439f to i32*
  %v3_3439f = load i32, i32* %v2_3439f, align 4
  %v2_343a2 = add i32 %v0_3439f, -36
  %v3_343a2 = inttoptr i32 %v2_343a2 to i32*
  store i32 %v3_3439f, i32* %v3_343a2, align 4
  %v0_343a5 = load i32, i32* @ebp, align 4
  %v1_343a5 = add i32 %v0_343a5, 20
  %v2_343a5 = inttoptr i32 %v1_343a5 to i32*
  %v3_343a5 = load i32, i32* %v2_343a5, align 4
  %v2_343a8 = add i32 %v0_343a5, -40
  %v3_343a8 = inttoptr i32 %v2_343a8 to i32*
  store i32 %v3_343a5, i32* %v3_343a8, align 4
  %v0_343ab = load i32, i32* @ebp, align 4
  %v1_343ab = add i32 %v0_343ab, 24
  %v2_343ab = inttoptr i32 %v1_343ab to i8*
  %v3_343ab = load i8, i8* %v2_343ab, align 1
  %v3_343af = add i32 %v0_343ab, -41
  %v4_343af = inttoptr i32 %v3_343af to i8*
  store i8 %v3_343ab, i8* %v4_343af, align 1
  %v0_343b2 = load i32, i32* @ebp, align 4
  %v1_343b2 = add i32 %v0_343b2, 28
  %v2_343b2 = inttoptr i32 %v1_343b2 to i32*
  %v3_343b2 = load i32, i32* %v2_343b2, align 4
  %v2_343b5 = add i32 %v0_343b2, -48
  %v3_343b5 = inttoptr i32 %v2_343b5 to i32*
  store i32 %v3_343b2, i32* %v3_343b5, align 4
  %v0_343b8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_343be = load i32, i32* @ebp, align 4
  %v2_343be = add i32 %v1_343be, -12
  %v3_343be = inttoptr i32 %v2_343be to i32*
  store i32 %v0_343b8, i32* %v3_343be, align 4
  %v0_343c3 = load i32, i32* @edx, align 4
  %v0_343c7 = load i32, i32* @ebp, align 4
  %v1_343c7 = add i32 %v0_343c7, -40
  %v2_343c7 = inttoptr i32 %v1_343c7 to i32*
  %v3_343c7 = load i32, i32* %v2_343c7, align 4
  %v1_343ce = add i32 %v0_343c7, -36
  %v2_343ce = inttoptr i32 %v1_343ce to i32*
  %v3_343ce = load i32, i32* %v2_343ce, align 4
  %v1_343d5 = add i32 %v0_343c7, -32
  %v2_343d5 = inttoptr i32 %v1_343d5 to i32*
  %v3_343d5 = load i32, i32* %v2_343d5, align 4
  %v1_343dc = add i32 %v0_343c7, -28
  %v2_343dc = inttoptr i32 %v1_343dc to i32*
  %v3_343dc = load i32, i32* %v2_343dc, align 4
  %sext = mul i32 %v0_343c3, 16777216
  %v5_343e2 = sdiv i32 %sext, 16777216
  %v6_343e2 = call i32 @unknown_6a550(i32 %v3_343dc, i32 %v3_343d5, i32 %v3_343ce, i32 %v3_343c7, i32 %v5_343e2)
  %v0_343e7 = load i32, i32* @ebp, align 4
  %v1_343e7 = add i32 %v0_343e7, -12
  %v2_343e7 = inttoptr i32 %v1_343e7 to i32*
  %v3_343e7 = load i32, i32* %v2_343e7, align 4
  %v1_343ea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_343ea = xor i32 %v1_343ea, %v3_343e7
  %v3_343ea = icmp eq i32 %v2_343ea, 0
  store i32 %v2_343ea, i32* @eax, align 4
  br i1 %v3_343ea, label %bb, label %dec_label_pc_343f3

bb:                                               ; preds = %dec_label_pc_34393
  %v1_343f1 = call i32 @function_343f8()
  br label %dec_label_pc_343f3

dec_label_pc_343f3:                               ; preds = %bb, %dec_label_pc_34393
  %v2_343f1 = phi i32 [ %v1_343f1, %bb ], [ %v2_343ea, %dec_label_pc_34393 ]
  ret i32 %v2_343f1

; uselistorder directives
  uselistorder i32 %v0_343c7, { 1, 0, 2, 3 }
}

define i32 @function_343f8() local_unnamed_addr {
dec_label_pc_343f8:
  %v0_343f9 = load i32, i32* @eax, align 4
  ret i32 %v0_343f9
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS5_NS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_343fa:
  %edx.global-to-local = alloca i32, align 4
  %v0_34430 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34430, 16777216
  %v5_3444f = sdiv i32 %sext, 16777216
  %v6_3444f = call i32 @unknown_6a622(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_3444f)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34460

bb:                                               ; preds = %dec_label_pc_343fa
  %v1_3445e = call i32 @function_34465()
  br label %dec_label_pc_34460

dec_label_pc_34460:                               ; preds = %bb, %dec_label_pc_343fa
  %v2_3445e = phi i32 [ %v1_3445e, %bb ], [ 0, %dec_label_pc_343fa ]
  ret i32 %v2_3445e
}

define i32 @function_34465() local_unnamed_addr {
dec_label_pc_34465:
  %v0_34466 = load i32, i32* @eax, align 4
  ret i32 %v0_34466
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_9destroyerEPvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34467:
  %v4_34485 = zext i8 %arg5 to i32
  ret i32 %v4_34485
}

define i32 @function_3448c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3448c:
  %v0_3448c = load i32, i32* @ebp, align 4
  %v1_3448c = add i32 %v0_3448c, 28
  %v2_3448c = inttoptr i32 %v1_3448c to i32*
  %v3_3448c = load i32, i32* %v2_3448c, align 4
  %v2_3448f = add i32 %v0_3448c, -48
  %v3_3448f = inttoptr i32 %v2_3448f to i32*
  store i32 %v3_3448c, i32* %v3_3448f, align 4
  %v0_34492 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_34498 = load i32, i32* @ebp, align 4
  %v2_34498 = add i32 %v1_34498, -12
  %v3_34498 = inttoptr i32 %v2_34498 to i32*
  store i32 %v0_34492, i32* %v3_34498, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_9destroyerEPvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E18has_fallback_type_EEENT1_11result_typeEiiRSL_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_344c1:
  ret i32 %arg8
}

define i32 @function_344f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_344f8:
  %v0_344f9 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_344ff = load i32, i32* @ebp, align 4
  %v2_344ff = add i32 %v1_344ff, -12
  %v3_344ff = inttoptr i32 %v2_344ff to i32*
  store i32 %v0_344f9, i32* %v3_344ff, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKv14CNoDestinationEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34528:
  %v0_3454d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3455e = call i32 @unknown_6a7b5(i32 %arg3)
  %v3_34575 = call i32 @unknown_6a7e2(i32 %arg2, i32 %v1_3455e, i32 1)
  ret i32 %v0_3454d
}

define i32 @function_34582(i32 %arg1) local_unnamed_addr {
dec_label_pc_34582:
  %zf.global-to-local = alloca i1, align 1
  %v2_34582 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_34582 = load i32, i32* @eax, align 4
  %v4_34582 = trunc i32 %v3_34582 to i8
  %v5_34582 = add i8 %v4_34582, %v2_34582
  %v15_34582 = icmp eq i8 %v5_34582, 0
  store i1 %v15_34582, i1* %zf.global-to-local, align 1
  %v21_34582 = inttoptr i32 %v3_34582 to i8*
  store i8 %v5_34582, i8* %v21_34582, align 1
  %v0_34584 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_34584, label %bb, label %dec_label_pc_34582.dec_label_pc_34586_crit_edge

dec_label_pc_34582.dec_label_pc_34586_crit_edge:  ; preds = %dec_label_pc_34582
  %v2_34584.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_34586

bb:                                               ; preds = %dec_label_pc_34582
  %v1_34584 = call i32 @function_3458b()
  br label %dec_label_pc_34586

dec_label_pc_34586:                               ; preds = %dec_label_pc_34582.dec_label_pc_34586_crit_edge, %bb
  %v2_34584 = phi i32 [ %v2_34584.pre, %dec_label_pc_34582.dec_label_pc_34586_crit_edge ], [ %v1_34584, %bb ]
  ret i32 %v2_34584

; uselistorder directives
  uselistorder label %dec_label_pc_34586, { 1, 0 }
}

define i32 @function_3458b() local_unnamed_addr {
dec_label_pc_3458b:
  %v0_3458c = load i32, i32* @eax, align 4
  ret i32 %v0_3458c
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKv6CKeyIDEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3458d:
  %v4_345ab = zext i8 %arg5 to i32
  ret i32 %v4_345ab
}

define i32 @function_345af(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_345af:
  %v0_345af = load i32, i32* @eax, align 4
  %v1_345af = trunc i32 %v0_345af to i8
  %v2_345af = load i32, i32* @ebp, align 4
  %v3_345af = add i32 %v2_345af, -41
  %v4_345af = inttoptr i32 %v3_345af to i8*
  store i8 %v1_345af, i8* %v4_345af, align 1
  %v0_345b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_345b8 = load i32, i32* @ebp, align 4
  %v2_345b8 = add i32 %v1_345b8, -12
  %v3_345b8 = inttoptr i32 %v2_345b8 to i32*
  store i32 %v0_345b2, i32* %v3_345b8, align 4
  %v0_345bd = load i32, i32* @ebp, align 4
  %v1_345bd = add i32 %v0_345bd, -36
  %v2_345bd = inttoptr i32 %v1_345bd to i32*
  %v3_345bd = load i32, i32* %v2_345bd, align 4
  %v1_345c3 = call i32 @unknown_6a894(i32 %v3_345bd)
  %v0_345d4 = load i32, i32* @ebp, align 4
  %v1_345d4 = add i32 %v0_345d4, -32
  %v2_345d4 = inttoptr i32 %v1_345d4 to i32*
  %v3_345d4 = load i32, i32* %v2_345d4, align 4
  %v3_345da = call i32 @unknown_6a8c1(i32 %v3_345d4, i32 %v1_345c3, i32 1)
  %v0_345df = load i32, i32* @ebp, align 4
  %v1_345df = add i32 %v0_345df, -12
  %v2_345df = inttoptr i32 %v1_345df to i32*
  %v3_345df = load i32, i32* %v2_345df, align 4
  %v1_345e2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_345e2 = xor i32 %v1_345e2, %v3_345df
  %v3_345e2 = icmp eq i32 %v2_345e2, 0
  store i32 %v2_345e2, i32* @eax, align 4
  br i1 %v3_345e2, label %bb, label %dec_label_pc_345eb

bb:                                               ; preds = %dec_label_pc_345af
  %v1_345e9 = call i32 @function_345f0()
  br label %dec_label_pc_345eb

dec_label_pc_345eb:                               ; preds = %bb, %dec_label_pc_345af
  %v2_345e9 = phi i32 [ %v1_345e9, %bb ], [ %v2_345e2, %dec_label_pc_345af ]
  ret i32 %v2_345e9
}

define i32 @function_345f0() local_unnamed_addr {
dec_label_pc_345f0:
  %v0_345f1 = load i32, i32* @eax, align 4
  ret i32 %v0_345f1
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9copy_intoEPKv9CScriptIDEENT_11result_typeEiRS7_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_345f2:
  %v1_34628 = call i32 @unknown_6a994(i32 %arg3)
  %v3_3463f = call i32 @unknown_6a9c2(i32 %arg2, i32 %v1_34628, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34650

bb:                                               ; preds = %dec_label_pc_345f2
  %v1_3464e = call i32 @function_34655()
  br label %dec_label_pc_34650

dec_label_pc_34650:                               ; preds = %bb, %dec_label_pc_345f2
  %v2_3464e = phi i32 [ %v1_3464e, %bb ], [ 0, %dec_label_pc_345f2 ]
  ret i32 %v2_3464e
}

define i32 @function_34655() local_unnamed_addr {
dec_label_pc_34655:
  %v0_34656 = load i32, i32* @eax, align 4
  ret i32 %v0_34656
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS3_6detail7variant5void_ESA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_SA_EESC_EET0_T_SE_SD_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34657:
  ret i32 %arg3
}

define i32 @function_34672(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34672:
  %eax.global-to-local = alloca i32, align 4
  %v2_34672 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_34672 = load i32, i32* @eax, align 4
  %v4_34672 = trunc i32 %v3_34672 to i8
  %v5_34672 = add i8 %v4_34672, %v2_34672
  %v21_34672 = inttoptr i32 %v3_34672 to i8*
  store i8 %v5_34672, i8* %v21_34672, align 1
  %v0_34674 = load i32, i32* @ecx, align 4
  %v1_34674 = add i32 %v0_34674, -1070468027
  %v2_34674 = inttoptr i32 %v1_34674 to i8*
  %v3_34674 = load i8, i8* %v2_34674, align 1
  %v5_34674 = trunc i32 %v0_34674 to i8
  %v6_34674 = add i8 %v3_34674, %v5_34674
  store i8 %v6_34674, i8* %v2_34674, align 1
  %v0_3467a = load i32, i32* @ebp, align 4
  %v1_3467a = add i32 %v0_3467a, -32
  %v2_3467a = inttoptr i32 %v1_3467a to i32*
  %v3_3467a = load i32, i32* %v2_3467a, align 4
  %v1_3467d = add i32 %v0_3467a, -28
  %v2_3467d = inttoptr i32 %v1_3467d to i32*
  %v3_3467d = load i32, i32* %v2_3467d, align 4
  %v2_34682 = sub i32 %v3_3467a, %v3_3467d
  store i32 %v2_34682, i32* @ecx, align 4
  %v2_34686 = sdiv i32 %v2_34682, 8
  %v3_34689 = mul i32 %v2_34686, -1431655765
  store i32 %v3_34689, i32* %eax.global-to-local, align 4
  %v2_3468f = add i32 %v0_3467a, -16
  %v3_3468f = inttoptr i32 %v2_3468f to i32*
  store i32 %v3_34689, i32* %v3_3468f, align 4
  br label %dec_label_pc_346b2

dec_label_pc_34694:                               ; preds = %dec_label_pc_346b2
  %v1_34694 = add i32 %v0_346b2, -32
  %v2_34694 = inttoptr i32 %v1_34694 to i32*
  %v3_34694 = load i32, i32* %v2_34694, align 4
  %v4_34694 = add i32 %v3_34694, -24
  store i32 %v4_34694, i32* %v2_34694, align 4
  %v0_34698 = load i32, i32* @ebp, align 4
  %v1_34698 = add i32 %v0_34698, -36
  %v2_34698 = inttoptr i32 %v1_34698 to i32*
  %v3_34698 = load i32, i32* %v2_34698, align 4
  %v4_34698 = add i32 %v3_34698, -24
  store i32 %v4_34698, i32* %v2_34698, align 4
  %v0_3469c = load i32, i32* @ebp, align 4
  %v1_3469c = add i32 %v0_3469c, -32
  %v2_3469c = inttoptr i32 %v1_3469c to i32*
  %v3_3469c = load i32, i32* %v2_3469c, align 4
  store i32 %v3_3469c, i32* %eax.global-to-local, align 4
  %v1_346a3 = add i32 %v0_3469c, -36
  %v2_346a3 = inttoptr i32 %v1_346a3 to i32*
  %v3_346a3 = load i32, i32* %v2_346a3, align 4
  store i32 %v3_346a3, i32* %eax.global-to-local, align 4
  %v2_346a9 = call i32 @unknown_5b121(i32 %v3_346a3, i32 %v3_3469c)
  store i32 %v2_346a9, i32* %eax.global-to-local, align 4
  %v0_346ae = load i32, i32* @ebp, align 4
  %v1_346ae = add i32 %v0_346ae, -16
  %v2_346ae = inttoptr i32 %v1_346ae to i32*
  %v3_346ae = load i32, i32* %v2_346ae, align 4
  %v4_346ae = add i32 %v3_346ae, -1
  store i32 %v4_346ae, i32* %v2_346ae, align 4
  br label %dec_label_pc_346b2

dec_label_pc_346b2:                               ; preds = %dec_label_pc_34694, %dec_label_pc_34672
  %v0_346b2 = load i32, i32* @ebp, align 4
  %v1_346b2 = add i32 %v0_346b2, -16
  %v2_346b2 = inttoptr i32 %v1_346b2 to i32*
  %v3_346b2 = load i32, i32* %v2_346b2, align 4
  %v10_346b2 = icmp eq i32 %v3_346b2, 0
  %v11_346b2 = icmp slt i32 %v3_346b2, 0
  %v3_346b6 = icmp eq i1 %v11_346b2, false
  %v4_346b6 = icmp eq i1 %v10_346b2, false
  %v5_346b6 = icmp eq i1 %v3_346b6, %v4_346b6
  %v6_346b6 = zext i1 %v5_346b6 to i32
  %v7_346b6 = load i32, i32* %eax.global-to-local, align 4
  %v8_346b6 = and i32 %v7_346b6, -256
  %v9_346b6 = or i32 %v6_346b6, %v8_346b6
  store i32 %v9_346b6, i32* %eax.global-to-local, align 4
  %v5_346b9 = icmp eq i1 %v5_346b6, false
  %v1_346bb = icmp eq i1 %v5_346b9, false
  br i1 %v1_346bb, label %dec_label_pc_34694, label %dec_label_pc_346bd

dec_label_pc_346bd:                               ; preds = %dec_label_pc_346b2
  %v1_346bd = add i32 %v0_346b2, -36
  %v2_346bd = inttoptr i32 %v1_346bd to i32*
  %v3_346bd = load i32, i32* %v2_346bd, align 4
  store i32 %v3_346bd, i32* @eax, align 4
  %v1_346c0 = add i32 %v0_346b2, -12
  %v2_346c0 = inttoptr i32 %v1_346c0 to i32*
  %v3_346c0 = load i32, i32* %v2_346c0, align 4
  %v1_346c3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_346c3 = icmp eq i32 %v1_346c3, %v3_346c0
  br i1 %v3_346c3, label %bb, label %dec_label_pc_346cc

bb:                                               ; preds = %dec_label_pc_346bd
  %v1_346ca = call i32 @function_346d1()
  store i32 %v1_346ca, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_346cc

dec_label_pc_346cc:                               ; preds = %bb, %dec_label_pc_346bd
  %v3_346ca = phi i32 [ %v1_346ca, %bb ], [ %v3_346bd, %dec_label_pc_346bd ]
  ret i32 %v3_346ca

; uselistorder directives
  uselistorder i32 %v3_346b2, { 1, 0 }
  uselistorder i32 %v0_346b2, { 1, 0, 3, 2 }
  uselistorder i32 %v3_34689, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 1, 2, 3, 6 }
}

define i32 @function_346d1() local_unnamed_addr {
dec_label_pc_346d1:
  %v0_346d2 = load i32, i32* @eax, align 4
  ret i32 %v0_346d2
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS2_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EESB_EET0_T_SD_SC_() local_unnamed_addr {
dec_label_pc_346d3:
  %eax.global-to-local = alloca i32, align 4
  %v5_346d6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_346d6
}

define i32 @function_346d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_346d8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_346d9 = load i32, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v11_346d9 = xor i32 %v0_346d9, zext (i8 ptrtoint (i8* @global_var_8b.2199 to i8) to i32)
  store i32 %v11_346d9, i32* %eax.global-to-local, align 4
  %v0_346db = load i32, i32* @ebp, align 4
  %v1_346db = add i32 %v0_346db, 1
  store i32 %v1_346db, i32* %ebp.global-to-local, align 4
  %v0_346dc = load i32, i32* @ecx, align 4
  %v1_346dc = add i32 %v0_346dc, 1166795845
  %v2_346dc = inttoptr i32 %v1_346dc to i8*
  %v3_346dc = load i8, i8* %v2_346dc, align 1
  %v5_346dc = trunc i32 %v0_346dc to i8
  %v6_346dc = or i8 %v3_346dc, %v5_346dc
  store i8 %v6_346dc, i8* %v2_346dc, align 1
  %v0_346e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_346e2 = or i32 %v0_346e2, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_346e2, i32* @eax, align 4
  %v0_346e4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_346e4 = add i32 %v0_346e4, 1
  %v9_346e4 = icmp eq i32 %v1_346e4, 0
  store i32 %v1_346e4, i32* @ebp, align 4
  %v0_346e5 = load i32, i32* @ecx, align 4
  %v1_346e5 = add i32 %v0_346e5, -1
  store i32 %v1_346e5, i32* @ecx, align 4
  %v2_346e5 = icmp eq i32 %v1_346e5, 0
  %v4_346e5 = or i1 %v9_346e4, %v2_346e5
  br i1 %v4_346e5, label %dec_label_pc_346e7, label %bb

bb:                                               ; preds = %dec_label_pc_346d8
  %v8_346e5 = call i32 @function_34672(i32 ptrtoint (i32* @9 to i32), i32 ptrtoint (i32* @9 to i32))
  store i32 %v8_346e5, i32* @eax, align 4
  %v0_346e7.pre = load i32, i32* @ebp, align 4
  %v0_346e8.pre = load i32, i32* @ecx, align 4
  %v6_346e8.pre = load i1, i1* @cf, align 1
  br label %dec_label_pc_346e7

dec_label_pc_346e7:                               ; preds = %dec_label_pc_346d8, %bb
  %v6_346e8 = phi i1 [ false, %dec_label_pc_346d8 ], [ %v6_346e8.pre, %bb ]
  %v30_346e8 = phi i32 [ %v1_346e5, %dec_label_pc_346d8 ], [ %v0_346e8.pre, %bb ]
  %v0_346e7 = phi i32 [ %v1_346e4, %dec_label_pc_346d8 ], [ %v0_346e7.pre, %bb ]
  %v1_346e7 = add i32 %v0_346e7, 1
  store i32 %v1_346e7, i32* @ebp, align 4
  %v1_346e8 = add i32 %v30_346e8, -1587159995
  %v2_346e8 = inttoptr i32 %v1_346e8 to i8*
  %v3_346e8 = load i8, i8* %v2_346e8, align 1
  %v5_346e8 = trunc i32 %v30_346e8 to i8
  %v7_346e8 = zext i1 %v6_346e8 to i8
  %v8_346e8 = add i8 %v3_346e8, %v5_346e8
  %v9_346e8 = add i8 %v8_346e8, %v7_346e8
  %v27_346e8 = icmp ule i8 %v9_346e8, %v3_346e8
  %v28_346e8 = icmp ult i8 %v8_346e8, %v3_346e8
  %v29_346e8 = select i1 %v6_346e8, i1 %v27_346e8, i1 %v28_346e8
  store i1 %v29_346e8, i1* %cf.global-to-local, align 1
  store i8 %v9_346e8, i8* %v2_346e8, align 1
  %v0_346ee = load i32, i32* @eax, align 4
  %v1_346ee = trunc i32 %v0_346ee to i8
  %v2_346ee = load i1, i1* %cf.global-to-local, align 1
  %v3_346ee = zext i1 %v2_346ee to i8
  %v4_346ee = add i8 %v3_346ee, %v1_346ee
  %v19_346ee = icmp ule i8 %v4_346ee, %v1_346ee
  %v21_346ee = icmp eq i1 %v2_346ee, %v19_346ee
  store i1 %v21_346ee, i1* %cf.global-to-local, align 1
  %v22_346ee = zext i8 %v4_346ee to i32
  %v24_346ee = and i32 %v0_346ee, -256
  %v25_346ee = or i32 %v22_346ee, %v24_346ee
  store i32 %v25_346ee, i32* %eax.global-to-local, align 4
  %v1_346f0 = inttoptr i32 %v25_346ee to i8*
  %v2_346f0 = load i8, i8* %v1_346f0, align 1
  %v5_346f0 = add i8 %v2_346f0, %v4_346ee
  store i8 %v5_346f0, i8* %v1_346f0, align 1
  %v0_346f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_346f2 = load i32, i32* @ebp, align 4
  %v2_346f2 = add i32 %v1_346f2, -12
  %v3_346f2 = inttoptr i32 %v2_346f2 to i32*
  store i32 %v0_346f2, i32* %v3_346f2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_346f7 = load i32, i32* @ebp, align 4
  %v1_346f7 = add i32 %v0_346f7, -36
  %v2_346f7 = inttoptr i32 %v1_346f7 to i32*
  %v3_346f7 = load i32, i32* %v2_346f7, align 4
  store i32 %v3_346f7, i32* %eax.global-to-local, align 4
  %v2_346fa = add i32 %v0_346f7, -16
  %v3_346fa = inttoptr i32 %v2_346fa to i32*
  store i32 %v3_346f7, i32* %v3_346fa, align 4
  %v0_346fd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_346fd

; uselistorder directives
  uselistorder i8 %v4_346ee, { 0, 2, 1 }
  uselistorder i8 %v1_346ee, { 1, 0 }
  uselistorder i8 %v9_346e8, { 1, 0 }
  uselistorder i8 %v8_346e8, { 1, 0 }
  uselistorder i8 %v3_346e8, { 1, 2, 0 }
  uselistorder i32 %v30_346e8, { 1, 0 }
  uselistorder i1 %v6_346e8, { 1, 0 }
  uselistorder i32 %v1_346e5, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @function_34672, { 1, 0 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_8b.2199 to i8) to i32), { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_346e7, { 1, 0 }
}

define i32 @function_3470e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3470e:
  %v0_3470f = load i32, i32* @eax, align 4
  %v11_3470f = and i32 %v0_3470f, -252
  %v1_34714 = call i32 @unknown_6ab11(i32 %v11_3470f)
  %v0_34719 = load i32, i32* @ebp, align 4
  %v1_34719 = add i32 %v0_34719, -28
  %v2_34719 = inttoptr i32 %v1_34719 to i32*
  %v3_34719 = load i32, i32* %v2_34719, align 4
  %v4_34719 = add i32 %v3_34719, 24
  store i32 %v4_34719, i32* %v2_34719, align 4
  %v0_3471d = load i32, i32* @ebp, align 4
  %v1_3471d = add i32 %v0_3471d, -16
  %v2_3471d = inttoptr i32 %v1_3471d to i32*
  %v3_3471d = load i32, i32* %v2_3471d, align 4
  %v4_3471d = add i32 %v3_3471d, 24
  store i32 %v4_3471d, i32* %v2_3471d, align 4
  %v0_34721 = load i32, i32* @ebp, align 4
  %v1_3472e = add i32 %v0_34721, -16
  %v2_3472e = inttoptr i32 %v1_3472e to i32*
  %v3_3472e = load i32, i32* %v2_3472e, align 4
  store i32 %v3_3472e, i32* @eax, align 4
  %v1_34731 = add i32 %v0_34721, -12
  %v2_34731 = inttoptr i32 %v1_34731 to i32*
  %v3_34731 = load i32, i32* %v2_34731, align 4
  %v1_34734 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34734 = icmp eq i32 %v1_34734, %v3_34731
  br i1 %v3_34734, label %bb, label %dec_label_pc_3473d

bb:                                               ; preds = %dec_label_pc_3470e
  %v1_3473b = call i32 @function_34774()
  store i32 %v1_3473b, i32* @eax, align 4
  br label %dec_label_pc_3473d

dec_label_pc_3473d:                               ; preds = %bb, %dec_label_pc_3470e
  %v0_3473d = call i32 @function_3476f()
  ret i32 %v0_3473d

; uselistorder directives
  uselistorder i32 %v0_34721, { 1, 0 }
}

define i32 @function_34740() local_unnamed_addr {
dec_label_pc_34740:
  %eax.global-to-local = alloca i32, align 4
  %v0_34740 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34740
}

define i32 @function_3476f() local_unnamed_addr {
dec_label_pc_3476f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34774() local_unnamed_addr {
dec_label_pc_34774:
  %v0_34779 = load i32, i32* @eax, align 4
  ret i32 %v0_34779
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv14CNoDestinationNS_7variantIS8_6CKeyID9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3477a:
  %edx.global-to-local = alloca i32, align 4
  %v0_347b0 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_347b0, 16777216
  %v5_347cf = sdiv i32 %sext, 16777216
  %v6_347cf = call i32 @unknown_6ac33(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_347cf)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_347e0

bb:                                               ; preds = %dec_label_pc_3477a
  %v1_347de = call i32 @function_347e5()
  br label %dec_label_pc_347e0

dec_label_pc_347e0:                               ; preds = %bb, %dec_label_pc_3477a
  %v2_347de = phi i32 [ %v1_347de, %bb ], [ 0, %dec_label_pc_3477a ]
  ret i32 %v2_347de
}

define i32 @function_347e5() local_unnamed_addr {
dec_label_pc_347e5:
  %v0_347e6 = load i32, i32* @eax, align 4
  ret i32 %v0_347e6
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv6CKeyIDNS_7variantI14CNoDestinationS8_9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_347e7:
  ret i32 %arg4
}

define i32 @function_34851() local_unnamed_addr {
dec_label_pc_34851:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34851 = load i32, i32* %ecx.global-to-local, align 4
  %v1_34851 = add i32 %v0_34851, -1
  store i32 %v1_34851, i32* %ecx.global-to-local, align 4
  %v0_34853 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34853
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS8_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34854:
  ret i32 0
}

define i32 @function_34890(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34890:
  %ebp.global-to-local = alloca i32, align 4
  %v1_34890 = load i32, i32* @ecx, align 4
  %v0_34896 = load i32, i32* @ebp, align 4
  %v1_3489d = add i32 %v0_34896, 2
  store i32 %v1_3489d, i32* %ebp.global-to-local, align 4
  %v1_3489e = add i32 %v1_34890, -1
  store i32 %v1_3489e, i32* @ecx, align 4
  %v1_348a3 = add i32 %v0_34896, -26
  %v2_348a3 = inttoptr i32 %v1_348a3 to i32*
  %v3_348a3 = load i32, i32* %v2_348a3, align 4
  %v1_348a9 = call i32 @unknown_6add7(i32 %v3_348a3)
  %v0_348ae = load i32, i32* %ebp.global-to-local, align 4
  %v1_348ae = add i32 %v0_348ae, -12
  %v2_348ae = inttoptr i32 %v1_348ae to i32*
  %v3_348ae = load i32, i32* %v2_348ae, align 4
  %v1_348b1 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_348b1 = xor i32 %v1_348b1, %v3_348ae
  %v1_348bf = inttoptr i32 %v0_348ae to i32*
  %v2_348bf = load i32, i32* %v1_348bf, align 4
  store i32 %v2_348bf, i32* @ebp, align 4
  ret i32 %v2_348b1
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_348c1:
  ret i32 %arg4
}

define i32 @function_348e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_348e0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_348e2 = load i32, i32* @eax, align 4
  %v1_348e2 = add i32 %v0_348e2, 1166792517
  %v2_348e2 = inttoptr i32 %v1_348e2 to i8*
  %v3_348e2 = load i8, i8* %v2_348e2, align 1
  %v4_348e2 = load i32, i32* @ecx, align 4
  %v5_348e2 = trunc i32 %v4_348e2 to i8
  %v6_348e2 = load i1, i1* @cf, align 1
  %v7_348e2 = zext i1 %v6_348e2 to i8
  %v8_348e2 = sub i8 %v3_348e2, %v5_348e2
  %v9_348e2 = add i8 %v8_348e2, %v7_348e2
  %v19_348e2 = sub i8 %v8_348e2, %v7_348e2
  %v20_348e2 = icmp ult i8 %v3_348e2, %v19_348e2
  %v21_348e2 = icmp ne i8 %v5_348e2, -1
  %v22_348e2 = or i1 %v21_348e2, %v20_348e2
  %v23_348e2 = icmp ult i8 %v3_348e2, %v5_348e2
  %v24_348e2 = select i1 %v6_348e2, i1 %v22_348e2, i1 %v23_348e2
  store i1 %v24_348e2, i1* %cf.global-to-local, align 1
  store i8 %v9_348e2, i8* %v2_348e2, align 1
  %v0_348e8 = load i32, i32* @eax, align 4
  %v1_348e8 = trunc i32 %v0_348e8 to i8
  %v2_348e8 = load i1, i1* %cf.global-to-local, align 1
  %v3_348e8 = zext i1 %v2_348e8 to i32
  %v4_348e8 = add i32 %v0_348e8, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32))
  %v5_348e8 = add i32 %v4_348e8, %v3_348e8
  %v17_348e8 = icmp ult i8 %v1_348e8, -119
  %v18_348e8 = or i1 %v2_348e8, %v17_348e8
  store i1 %v18_348e8, i1* %cf.global-to-local, align 1
  %v31_348e8 = urem i32 %v5_348e8, 256
  %v33_348e8 = and i32 %v0_348e8, -256
  %v34_348e8 = or i32 %v31_348e8, %v33_348e8
  store i32 %v34_348e8, i32* %eax.global-to-local, align 4
  %v0_348ea = load i32, i32* @ebp, align 4
  %v1_348ea = add i32 %v0_348ea, 1
  store i32 %v1_348ea, i32* @ebp, align 4
  %v1_348eb = add i32 %v0_348ea, -94
  %v2_348eb = inttoptr i32 %v1_348eb to i8*
  %v3_348eb = load i8, i8* %v2_348eb, align 1
  %v5_348eb = mul i8 %v3_348eb, 2
  store i8 %v5_348eb, i8* %v2_348eb, align 1
  %v16_348eb = icmp slt i8 %v3_348eb, 0
  %v0_348ee = load i32, i32* %eax.global-to-local, align 4
  %v1_348ee = trunc i32 %v0_348ee to i8
  %v3_348ee = zext i1 %v16_348eb to i8
  %v4_348ee = add i8 %v1_348ee, %v3_348ee
  %v19_348ee = icmp ule i8 %v4_348ee, %v1_348ee
  %v21_348ee = icmp eq i1 %v16_348eb, %v19_348ee
  store i1 %v21_348ee, i1* %cf.global-to-local, align 1
  %v22_348ee = zext i8 %v4_348ee to i32
  %v24_348ee = and i32 %v0_348ee, -256
  %v25_348ee = or i32 %v22_348ee, %v24_348ee
  store i32 %v25_348ee, i32* %eax.global-to-local, align 4
  %v1_348f0 = inttoptr i32 %v25_348ee to i8*
  %v2_348f0 = load i8, i8* %v1_348f0, align 1
  %v5_348f0 = add i8 %v2_348f0, %v4_348ee
  store i8 %v5_348f0, i8* %v1_348f0, align 1
  %v0_348f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_348f2 = load i32, i32* @ebp, align 4
  %v2_348f2 = add i32 %v1_348f2, -12
  %v3_348f2 = inttoptr i32 %v2_348f2 to i32*
  store i32 %v0_348f2, i32* %v3_348f2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v4_348ee, { 0, 2, 1 }
  uselistorder i8 %v1_348ee, { 1, 0 }
  uselistorder i8 %v3_348eb, { 1, 0 }
  uselistorder i1 %v2_348e8, { 1, 0 }
  uselistorder i32 %v0_348e8, { 1, 0, 2 }
  uselistorder i8 %v5_348e2, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorI20CAffectedKeysVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3491b:
  ret i32 %arg3
}

define i32 @function_34930(i32 %arg1) local_unnamed_addr {
dec_label_pc_34930:
  %v0_34930 = load i32, i32* @eax, align 4
  %v1_34930 = load i32, i32* @ebp, align 4
  %v2_34930 = add i32 %v1_34930, -36
  %v3_34930 = inttoptr i32 %v2_34930 to i32*
  store i32 %v0_34930, i32* %v3_34930, align 4
  %v0_34933 = load i32, i32* @ebp, align 4
  %v1_34933 = add i32 %v0_34933, 20
  %v2_34933 = inttoptr i32 %v1_34933 to i32*
  %v3_34933 = load i32, i32* %v2_34933, align 4
  %v2_34936 = add i32 %v0_34933, -40
  %v3_34936 = inttoptr i32 %v2_34936 to i32*
  store i32 %v3_34933, i32* %v3_34936, align 4
  %v0_34939 = load i32, i32* @ebp, align 4
  %v1_34939 = add i32 %v0_34939, 24
  %v2_34939 = inttoptr i32 %v1_34939 to i8*
  %v3_34939 = load i8, i8* %v2_34939, align 1
  %v3_3493d = add i32 %v0_34939, -41
  %v4_3493d = inttoptr i32 %v3_3493d to i8*
  store i8 %v3_34939, i8* %v4_3493d, align 1
  %v0_34940 = load i32, i32* @ebp, align 4
  %v1_34940 = add i32 %v0_34940, 28
  %v2_34940 = inttoptr i32 %v1_34940 to i8*
  %v3_34940 = load i8, i8* %v2_34940, align 1
  %v3_34944 = add i32 %v0_34940, -42
  %v4_34944 = inttoptr i32 %v3_34944 to i8*
  store i8 %v3_34940, i8* %v4_34944, align 1
  %v0_34947 = load i32, i32* @ebp, align 4
  %v1_34947 = add i32 %v0_34947, 32
  %v2_34947 = inttoptr i32 %v1_34947 to i32*
  %v3_34947 = load i32, i32* %v2_34947, align 4
  %v2_3494a = add i32 %v0_34947, -48
  %v3_3494a = inttoptr i32 %v2_3494a to i32*
  store i32 %v3_34947, i32* %v3_3494a, align 4
  %v0_3494d = load i32, i32* @ebp, align 4
  %v1_3494d = add i32 %v0_3494d, 36
  %v2_3494d = inttoptr i32 %v1_3494d to i32*
  %v3_3494d = load i32, i32* %v2_3494d, align 4
  %v2_34950 = add i32 %v0_3494d, -52
  %v3_34950 = inttoptr i32 %v2_34950 to i32*
  store i32 %v3_3494d, i32* %v3_34950, align 4
  %v0_34953 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_34959 = load i32, i32* @ebp, align 4
  %v2_34959 = add i32 %v1_34959, -12
  %v3_34959 = inttoptr i32 %v2_34959 to i32*
  store i32 %v0_34953, i32* %v3_34959, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 32, { 18, 19, 20, 15, 30, 12, 16, 17, 13, 36, 0, 1, 2, 29, 3, 21, 22, 23, 24, 25, 37, 38, 26, 27, 14, 28, 4, 5, 6, 31, 8, 7, 32, 33, 34, 35, 9, 10, 11 }
}

define i32 @function_3495e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3495e:
  %v3_34976 = load i32, i32* @eax, align 4
  ret i32 %v3_34976
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6CKeyIDS4_EET0_T_S6_S5_(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34982:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_3499a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp104, i32* %edx.global-to-local, align 4
  %v2_349ad = sub i32 %tmp104, %arg1
  %v2_349b1 = sdiv i32 %v2_349ad, 4
  %v3_349b4 = mul i32 %v2_349b1, -858993459
  %v10_349ed109 = icmp eq i32 %v3_349b4, 0
  %v11_349ed110 = icmp slt i32 %v3_349b4, 0
  %v3_349f1111 = icmp eq i1 %v11_349ed110, false
  %v4_349f1112 = icmp eq i1 %v10_349ed109, false
  %v5_349f1113 = icmp eq i1 %v3_349f1111, %v4_349f1112
  %v6_349f1114 = zext i1 %v5_349f1113 to i32
  %v8_349f1115 = and i32 %v3_349b4, -256
  %v9_349f1116 = or i32 %v6_349f1114, %v8_349f1115
  store i32 %v9_349f1116, i32* %eax.global-to-local, align 4
  %v5_349f4117 = icmp eq i1 %v5_349f1113, false
  %v1_349f6118 = icmp eq i1 %v5_349f4117, false
  br i1 %v1_349f6118, label %dec_label_pc_349bf, label %dec_label_pc_349f8

dec_label_pc_349bf:                               ; preds = %dec_label_pc_34982, %dec_label_pc_349bf
  %storemerge121 = phi i32 [ %v4_349e9, %dec_label_pc_349bf ], [ %v3_349b4, %dec_label_pc_34982 ]
  %stack_var_-40.0120 = phi i32 [ %v4_349bf, %dec_label_pc_349bf ], [ %arg3, %dec_label_pc_34982 ]
  %stack_var_-36.0119 = phi i32 [ %v4_349c6, %dec_label_pc_349bf ], [ %tmp104, %dec_label_pc_34982 ]
  %v4_349bf = add i32 %stack_var_-40.0120, -20
  store i32 %v4_349bf, i32* %eax.global-to-local, align 4
  %v4_349c6 = add i32 %stack_var_-36.0119, -20
  store i32 %v4_349c6, i32* %edx.global-to-local, align 4
  %v1_349cd = inttoptr i32 %v4_349c6 to i32*
  %v2_349cd = load i32, i32* %v1_349cd, align 4
  %v2_349cf = inttoptr i32 %v4_349bf to i32*
  store i32 %v2_349cd, i32* %v2_349cf, align 4
  %v0_349d1 = load i32, i32* %edx.global-to-local, align 4
  %v1_349d1 = add i32 %v0_349d1, 4
  %v2_349d1 = inttoptr i32 %v1_349d1 to i32*
  %v3_349d1 = load i32, i32* %v2_349d1, align 4
  %v1_349d4 = load i32, i32* %eax.global-to-local, align 4
  %v2_349d4 = add i32 %v1_349d4, 4
  %v3_349d4 = inttoptr i32 %v2_349d4 to i32*
  store i32 %v3_349d1, i32* %v3_349d4, align 4
  %v0_349d7 = load i32, i32* %edx.global-to-local, align 4
  %v1_349d7 = add i32 %v0_349d7, 8
  %v2_349d7 = inttoptr i32 %v1_349d7 to i32*
  %v3_349d7 = load i32, i32* %v2_349d7, align 4
  %v1_349da = load i32, i32* %eax.global-to-local, align 4
  %v2_349da = add i32 %v1_349da, 8
  %v3_349da = inttoptr i32 %v2_349da to i32*
  store i32 %v3_349d7, i32* %v3_349da, align 4
  %v0_349dd = load i32, i32* %edx.global-to-local, align 4
  %v1_349dd = add i32 %v0_349dd, 12
  %v2_349dd = inttoptr i32 %v1_349dd to i32*
  %v3_349dd = load i32, i32* %v2_349dd, align 4
  %v1_349e0 = load i32, i32* %eax.global-to-local, align 4
  %v2_349e0 = add i32 %v1_349e0, 12
  %v3_349e0 = inttoptr i32 %v2_349e0 to i32*
  store i32 %v3_349dd, i32* %v3_349e0, align 4
  %v0_349e3 = load i32, i32* %edx.global-to-local, align 4
  %v1_349e3 = add i32 %v0_349e3, 16
  %v2_349e3 = inttoptr i32 %v1_349e3 to i32*
  %v3_349e3 = load i32, i32* %v2_349e3, align 4
  store i32 %v3_349e3, i32* %edx.global-to-local, align 4
  %v1_349e6 = load i32, i32* %eax.global-to-local, align 4
  %v2_349e6 = add i32 %v1_349e6, 16
  %v3_349e6 = inttoptr i32 %v2_349e6 to i32*
  store i32 %v3_349e3, i32* %v3_349e6, align 4
  %v4_349e9 = add i32 %storemerge121, -1
  %v7_349f1.pre = load i32, i32* %eax.global-to-local, align 4
  %v10_349ed = icmp eq i32 %v4_349e9, 0
  %v11_349ed = icmp slt i32 %v4_349e9, 0
  %v3_349f1 = icmp eq i1 %v11_349ed, false
  %v4_349f1 = icmp eq i1 %v10_349ed, false
  %v5_349f1 = icmp eq i1 %v3_349f1, %v4_349f1
  %v6_349f1 = zext i1 %v5_349f1 to i32
  %v8_349f1 = and i32 %v7_349f1.pre, -256
  %v9_349f1 = or i32 %v6_349f1, %v8_349f1
  store i32 %v9_349f1, i32* %eax.global-to-local, align 4
  %v5_349f4 = icmp eq i1 %v5_349f1, false
  %v1_349f6 = icmp eq i1 %v5_349f4, false
  br i1 %v1_349f6, label %dec_label_pc_349bf, label %dec_label_pc_349f8

dec_label_pc_349f8:                               ; preds = %dec_label_pc_349bf, %dec_label_pc_34982
  %stack_var_-40.0.lcssa = phi i32 [ %arg3, %dec_label_pc_34982 ], [ %v4_349bf, %dec_label_pc_349bf ]
  store i32 %stack_var_-40.0.lcssa, i32* %eax.global-to-local, align 4
  store i32 %v0_3499a, i32* %edx.global-to-local, align 4
  ret i32 %stack_var_-40.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v4_349e9, { 1, 2, 0 }
  uselistorder i32 %v4_349c6, { 1, 2, 0 }
  uselistorder i32 %v4_349bf, { 0, 2, 3, 1 }
  uselistorder i32 %tmp104, { 0, 2, 1 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i32* %eax.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5, 9, 8 }
  uselistorder label %dec_label_pc_349bf, { 1, 0 }
}

define i32 @function_34a03(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34a03:
  %zf.global-to-local = alloca i1, align 1
  %v2_34a03 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_34a03 = load i32, i32* @eax, align 4
  %v4_34a03 = trunc i32 %v3_34a03 to i8
  %v5_34a03 = add i8 %v4_34a03, %v2_34a03
  %v15_34a03 = icmp eq i8 %v5_34a03, 0
  store i1 %v15_34a03, i1* %zf.global-to-local, align 1
  %v21_34a03 = inttoptr i32 %v3_34a03 to i8*
  store i8 %v5_34a03, i8* %v21_34a03, align 1
  %v0_34a05 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_34a05, label %bb, label %dec_label_pc_34a03.dec_label_pc_34a07_crit_edge

dec_label_pc_34a03.dec_label_pc_34a07_crit_edge:  ; preds = %dec_label_pc_34a03
  %v2_34a05.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_34a07

bb:                                               ; preds = %dec_label_pc_34a03
  %v1_34a05 = call i32 @function_34a0c()
  br label %dec_label_pc_34a07

dec_label_pc_34a07:                               ; preds = %dec_label_pc_34a03.dec_label_pc_34a07_crit_edge, %bb
  %v2_34a05 = phi i32 [ %v2_34a05.pre, %dec_label_pc_34a03.dec_label_pc_34a07_crit_edge ], [ %v1_34a05, %bb ]
  ret i32 %v2_34a05

; uselistorder directives
  uselistorder label %dec_label_pc_34a07, { 1, 0 }
}

define i32 @function_34a0c() local_unnamed_addr {
dec_label_pc_34a0c:
  %v0_34a0d = load i32, i32* @eax, align 4
  ret i32 %v0_34a0d
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6CKeyIDS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34a0e:
  %v15_34a5e108 = icmp eq i32 %arg1, %arg2
  %v1_34a61109 = icmp eq i1 %v15_34a5e108, false
  %v5_34a64110 = icmp eq i1 %v1_34a61109, false
  %v1_34a66111 = icmp eq i1 %v5_34a64110, false
  br i1 %v1_34a66111, label %dec_label_pc_34a39, label %dec_label_pc_34a68

dec_label_pc_34a39:                               ; preds = %dec_label_pc_34a0e, %dec_label_pc_34a39
  %v9_34a6e113 = phi i32 [ %v4_34a57, %dec_label_pc_34a39 ], [ %arg3, %dec_label_pc_34a0e ]
  %stack_var_-32.0112 = phi i32 [ %v4_34a53, %dec_label_pc_34a39 ], [ %arg1, %dec_label_pc_34a0e ]
  %v1_34a3f = call i32 @unknown_62905(i32 %v9_34a6e113)
  %v2_34a4e = call i32 @unknown_6aff6(i32 %v1_34a3f, i32 %stack_var_-32.0112)
  %v4_34a53 = add i32 %stack_var_-32.0112, 20
  %v4_34a57 = add i32 %v9_34a6e113, 20
  %v15_34a5e = icmp eq i32 %v4_34a53, %arg2
  %v1_34a61 = icmp eq i1 %v15_34a5e, false
  %v5_34a64 = icmp eq i1 %v1_34a61, false
  %v1_34a66 = icmp eq i1 %v5_34a64, false
  br i1 %v1_34a66, label %dec_label_pc_34a39, label %dec_label_pc_34a68

dec_label_pc_34a68:                               ; preds = %dec_label_pc_34a39, %dec_label_pc_34a0e
  %v9_34a6e.lcssa = phi i32 [ %arg3, %dec_label_pc_34a0e ], [ %v4_34a57, %dec_label_pc_34a39 ]
  ret i32 %v9_34a6e.lcssa

; uselistorder directives
  uselistorder i32 %v4_34a53, { 1, 0 }
  uselistorder i32 %v9_34a6e113, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_34a39, { 1, 0 }
}

define i32 @function_34a76(i32 %arg1) local_unnamed_addr {
dec_label_pc_34a76:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_34a7b() local_unnamed_addr {
dec_label_pc_34a7b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_34a7b = load i32, i32* %ecx.global-to-local, align 4
  %v1_34a7b = add i32 %v0_34a7b, -1
  store i32 %v1_34a7b, i32* %ecx.global-to-local, align 4
  %v0_34a7d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34a7d
}

define i32 @_ZN9__gnu_cxxneIPKSt6vectorIhSaIhEES1_IS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34a7e:
  %v1_34aa2 = call i32 @unknown_57592(i32 %arg1)
  %v1_34aa7 = inttoptr i32 %v1_34aa2 to i32*
  %v2_34aa7 = load i32, i32* %v1_34aa7, align 4
  %v1_34aaf = call i32 @unknown_57592(i32 %arg2)
  %v1_34ab4 = inttoptr i32 %v1_34aaf to i32*
  %v2_34ab4 = load i32, i32* %v1_34ab4, align 4
  %v12_34ab6 = icmp eq i32 %v2_34aa7, %v2_34ab4
  %v1_34ab8 = icmp eq i1 %v12_34ab6, false
  %v2_34ab8 = zext i1 %v1_34ab8 to i32
  %v4_34ab8 = and i32 %v2_34ab4, -256
  %v5_34ab8 = or i32 %v2_34ab8, %v4_34ab8
  store i32 %v5_34ab8, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34ac7

bb:                                               ; preds = %dec_label_pc_34a7e
  %v1_34ac5 = call i32 @function_34acc()
  br label %dec_label_pc_34ac7

dec_label_pc_34ac7:                               ; preds = %bb, %dec_label_pc_34a7e
  %v2_34ac5 = phi i32 [ %v1_34ac5, %bb ], [ %v5_34ab8, %dec_label_pc_34a7e ]
  ret i32 %v2_34ac5

; uselistorder directives
  uselistorder i32 %v2_34ab4, { 1, 0 }
  uselistorder i32 (i32)* @unknown_57592, { 1, 0 }
}

define i32 @function_34acc() local_unnamed_addr {
dec_label_pc_34acc:
  %v0_34ad1 = load i32, i32* @eax, align 4
  ret i32 %v0_34ad1
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIhSaIhEEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34ad2:
  %v1_34afb = call i32 @unknown_6b120(i32 %arg1)
  %v10_34b00 = icmp ult i32 %v1_34afb, %arg2
  %v1_34b03 = zext i1 %v10_34b00 to i32
  %v3_34b03 = and i32 %v1_34afb, -256
  %v4_34b03 = or i32 %v1_34b03, %v3_34b03
  %v5_34b06 = icmp eq i1 %v10_34b00, false
  br i1 %v5_34b06, label %bb, label %dec_label_pc_34b0a

bb:                                               ; preds = %dec_label_pc_34ad2
  %v1_34b08 = call i32 @function_34b0f()
  br label %dec_label_pc_34b0a

dec_label_pc_34b0a:                               ; preds = %bb, %dec_label_pc_34ad2
  %v2_34b08 = phi i32 [ %v1_34b08, %bb ], [ %v4_34b03, %dec_label_pc_34ad2 ]
  ret i32 %v2_34b08

; uselistorder directives
  uselistorder i1 %v10_34b00, { 1, 0 }
}

define i32 @function_34b0f() local_unnamed_addr {
dec_label_pc_34b0f:
  %v0_34b0f = load i32, i32* @ebp, align 4
  %v1_34b0f = add i32 %v0_34b0f, -32
  %v2_34b0f = inttoptr i32 %v1_34b0f to i32*
  %v3_34b0f = load i32, i32* %v2_34b0f, align 4
  %v2_34b1e = mul i32 %v3_34b0f, 28
  ret i32 %v2_34b1e
}

define i32 @function_34b32(i32 %arg1) local_unnamed_addr {
dec_label_pc_34b32:
  %zf.global-to-local = alloca i1, align 1
  %v2_34b32 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_34b32 = load i32, i32* @eax, align 4
  %v4_34b32 = trunc i32 %v3_34b32 to i8
  %v5_34b32 = add i8 %v4_34b32, %v2_34b32
  %v15_34b32 = icmp eq i8 %v5_34b32, 0
  store i1 %v15_34b32, i1* %zf.global-to-local, align 1
  %v21_34b32 = inttoptr i32 %v3_34b32 to i8*
  store i8 %v5_34b32, i8* %v21_34b32, align 1
  %v0_34b34 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_34b34, label %bb, label %dec_label_pc_34b32.dec_label_pc_34b36_crit_edge

dec_label_pc_34b32.dec_label_pc_34b36_crit_edge:  ; preds = %dec_label_pc_34b32
  %v2_34b34.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_34b36

bb:                                               ; preds = %dec_label_pc_34b32
  %v1_34b34 = call i32 @function_34b3b()
  br label %dec_label_pc_34b36

dec_label_pc_34b36:                               ; preds = %dec_label_pc_34b32.dec_label_pc_34b36_crit_edge, %bb
  %v2_34b34 = phi i32 [ %v2_34b34.pre, %dec_label_pc_34b32.dec_label_pc_34b36_crit_edge ], [ %v1_34b34, %bb ]
  ret i32 %v2_34b34

; uselistorder directives
  uselistorder label %dec_label_pc_34b36, { 1, 0 }
}

define i32 @function_34b3b() local_unnamed_addr {
dec_label_pc_34b3b:
  %v0_34b3c = load i32, i32* @eax, align 4
  ret i32 %v0_34b3c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSt6vectorIhSaIhEES4_EEC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_34b3e:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34b61

bb:                                               ; preds = %dec_label_pc_34b3e
  %v2_34b5f = call i32 @function_34b66(i32 %arg1)
  br label %dec_label_pc_34b61

dec_label_pc_34b61:                               ; preds = %bb, %dec_label_pc_34b3e
  %v3_34b5f = phi i32 [ %v2_34b5f, %bb ], [ 0, %dec_label_pc_34b3e ]
  ret i32 %v3_34b5f
}

define i32 @function_34b66(i32 %arg1) local_unnamed_addr {
dec_label_pc_34b66:
  %v0_34b67 = load i32, i32* @eax, align 4
  ret i32 %v0_34b67
}

define i32 @_ZNSt23_Rb_tree_const_iteratorISt6vectorIhSaIhEEEC1EPKSt13_Rb_tree_nodeIS2_E(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34b68:
  %v0_34b7a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %arg2, i32* %arg1, align 4
  ret i32 %v0_34b7a
}

define i32 @function_34b92(i32 %arg1) local_unnamed_addr {
dec_label_pc_34b92:
  %v0_34b92 = load i32, i32* @eax, align 4
  %v1_34b92 = add i32 %v0_34b92, 20
  %v10_34b92 = icmp eq i32 %v1_34b92, 0
  store i32 %v1_34b92, i32* @eax, align 4
  br i1 %v10_34b92, label %bb, label %dec_label_pc_34b99

bb:                                               ; preds = %dec_label_pc_34b92
  %v1_34b97 = call i32 @function_34b9e()
  br label %dec_label_pc_34b99

dec_label_pc_34b99:                               ; preds = %bb, %dec_label_pc_34b92
  %v2_34b97 = phi i32 [ %v1_34b97, %bb ], [ %v1_34b92, %dec_label_pc_34b92 ]
  ret i32 %v2_34b97
}

define i32 @function_34b9e() local_unnamed_addr {
dec_label_pc_34b9e:
  %v0_34b9f = load i32, i32* @eax, align 4
  ret i32 %v0_34b9f
}

define i32 @_ZNSt25__lexicographical_compareILb1EE4__lcIhhEEbPKT_S4_PKT0_S7_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34ba0:
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_34bd1 = sub i32 %arg2, %arg1
  store i32 %v2_34bd1, i32* %stack_var_-28, align 4
  %v2_34be0 = sub i32 %arg4, %arg3
  store i32 %v2_34be0, i32* %stack_var_-24, align 4
  %v4_34bea = ptrtoint i32* %stack_var_-24 to i32
  %v2_34bee = ptrtoint i32* %stack_var_-28 to i32
  %v2_34bf4 = call i32 @unknown_57345(i32 %v2_34bee, i32 %v4_34bea)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34c11() local_unnamed_addr {
dec_label_pc_34c11:
  %eax.global-to-local = alloca i32, align 4
  %v0_34c11 = load i32, i32* %eax.global-to-local, align 4
  %v1_34c11 = load i32, i32* @ebp, align 4
  %v2_34c11 = add i32 %v1_34c11, -16
  %v3_34c11 = inttoptr i32 %v2_34c11 to i32*
  store i32 %v0_34c11, i32* %v3_34c11, align 4
  %v0_34c14 = load i32, i32* @ebp, align 4
  %v1_34c14 = add i32 %v0_34c14, -16
  %v2_34c14 = inttoptr i32 %v1_34c14 to i32*
  %v3_34c14 = load i32, i32* %v2_34c14, align 4
  %v10_34c14 = icmp eq i32 %v3_34c14, 0
  br i1 %v10_34c14, label %dec_label_pc_34c22, label %dec_label_pc_34c1a

dec_label_pc_34c1a:                               ; preds = %dec_label_pc_34c11
  %tmp98 = icmp slt i32 %v3_34c14, 0
  %v2_34c1d = zext i1 %tmp98 to i32
  br label %dec_label_pc_34c2d

dec_label_pc_34c22:                               ; preds = %dec_label_pc_34c11
  %v1_34c22 = add i32 %v0_34c14, -24
  %v2_34c22 = inttoptr i32 %v1_34c22 to i32*
  %v3_34c22 = load i32, i32* %v2_34c22, align 4
  %v1_34c25 = add i32 %v0_34c14, -20
  %v2_34c25 = inttoptr i32 %v1_34c25 to i32*
  %v3_34c25 = load i32, i32* %v2_34c25, align 4
  %v7_34c28 = icmp ult i32 %v3_34c22, %v3_34c25
  %v1_34c2a = zext i1 %v7_34c28 to i32
  %v3_34c2a = and i32 %v3_34c25, -256
  %v4_34c2a = or i32 %v1_34c2a, %v3_34c2a
  br label %dec_label_pc_34c2d

dec_label_pc_34c2d:                               ; preds = %dec_label_pc_34c22, %dec_label_pc_34c1a
  %storemerge = phi i32 [ %v4_34c2a, %dec_label_pc_34c22 ], [ %v2_34c1d, %dec_label_pc_34c1a ]
  %v2_34c372 = phi i32 [ %v4_34c2a, %dec_label_pc_34c22 ], [ %v2_34c1d, %dec_label_pc_34c1a ]
  store i32 %storemerge, i32* @eax, align 4
  %v1_34c2d = add i32 %v0_34c14, -12
  %v2_34c2d = inttoptr i32 %v1_34c2d to i32*
  %v3_34c2d = load i32, i32* %v2_34c2d, align 4
  %v1_34c30 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34c30 = icmp eq i32 %v1_34c30, %v3_34c2d
  br i1 %v3_34c30, label %bb, label %dec_label_pc_34c39

bb:                                               ; preds = %dec_label_pc_34c2d
  %v1_34c37 = call i32 @function_34c3e()
  store i32 %v1_34c37, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_34c39

dec_label_pc_34c39:                               ; preds = %bb, %dec_label_pc_34c2d
  %v2_34c37 = phi i32 [ %v1_34c37, %bb ], [ %v2_34c372, %dec_label_pc_34c2d ]
  ret i32 %v2_34c37

; uselistorder directives
  uselistorder i32 %v4_34c2a, { 1, 0 }
  uselistorder i32 %v2_34c1d, { 1, 0 }
  uselistorder i32 %v0_34c14, { 0, 2, 1, 3 }
}

define i32 @function_34c3e() local_unnamed_addr {
dec_label_pc_34c3e:
  %v0_34c3f = load i32, i32* @eax, align 4
  ret i32 %v0_34c3f
}

define i32 @_ZNSt8_Rb_treeISt6vectorIhSaIhEESt4pairIKS2_S2_ESt10_Select1stIS5_ESt4lessIS2_ESaIS5_EE11_M_get_nodeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_34c40:
  %v3_34c6d = call i32 @unknown_6b2be(i32 %arg1, i32 1, i32 0)
  store i32 %v3_34c6d, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34c7e

bb:                                               ; preds = %dec_label_pc_34c40
  %v1_34c7c = call i32 @function_34c83()
  br label %dec_label_pc_34c7e

dec_label_pc_34c7e:                               ; preds = %bb, %dec_label_pc_34c40
  %v2_34c7c = phi i32 [ %v1_34c7c, %bb ], [ %v3_34c6d, %dec_label_pc_34c40 ]
  ret i32 %v2_34c7c
}

define i32 @function_34c83() local_unnamed_addr {
dec_label_pc_34c83:
  %v0_34c84 = load i32, i32* @eax, align 4
  ret i32 %v0_34c84
}

define i32 @_ZNSt4pairIKSt6vectorIhSaIhEES2_EC1ERKS4_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34c86:
  %v2_34cb1 = call i32 @unknown_4b37e(i32 %arg1, i32 %arg2)
  %v1_34cb9 = add i32 %arg2, 12
  %v1_34cbf = add i32 %arg1, 12
  %v2_34cc9 = call i32 @unknown_4b37e(i32 %v1_34cbf, i32 %v1_34cb9)
  %v0_34cce = call i32 @function_34ce7()
  ret i32 %v0_34cce

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_4b37e, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34cd1() local_unnamed_addr {
dec_label_pc_34cd1:
  %eax.global-to-local = alloca i32, align 4
  %v0_34cd1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_34cd1
}

define i32 @function_34ce7() local_unnamed_addr {
dec_label_pc_34ce7:
  %v0_34ce7 = load i32, i32* @ebp, align 4
  %v1_34ce7 = add i32 %v0_34ce7, -12
  %v2_34ce7 = inttoptr i32 %v1_34ce7 to i32*
  %v3_34ce7 = load i32, i32* %v2_34ce7, align 4
  %v1_34cea = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34cea = xor i32 %v1_34cea, %v3_34ce7
  %v3_34cea = icmp eq i32 %v2_34cea, 0
  store i32 %v2_34cea, i32* @eax, align 4
  br i1 %v3_34cea, label %bb, label %dec_label_pc_34cf3

bb:                                               ; preds = %dec_label_pc_34ce7
  %v1_34cf1 = call i32 @function_34cf8()
  br label %dec_label_pc_34cf3

dec_label_pc_34cf3:                               ; preds = %bb, %dec_label_pc_34ce7
  %v2_34cf1 = phi i32 [ %v1_34cf1, %bb ], [ %v2_34cea, %dec_label_pc_34ce7 ]
  ret i32 %v2_34cf1
}

define i32 @function_34cf8() local_unnamed_addr {
dec_label_pc_34cf8:
  %v0_34cfd = load i32, i32* @eax, align 4
  ret i32 %v0_34cfd
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt4pairIKSt6vectorIhSaIhEES4_EE9constructEPS6_RKS6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34cfe:
  ret i32 0
}

define i32 @function_34d30(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_34d30:
  %v2_34d30 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_34d30 = load i32, i32* @eax, align 4
  %v4_34d30 = trunc i32 %v3_34d30 to i8
  %v5_34d30 = add i8 %v4_34d30, %v2_34d30
  %v21_34d30 = inttoptr i32 %v3_34d30 to i8*
  store i8 %v5_34d30, i8* %v21_34d30, align 1
  %v0_34d32 = call i32 @unknown_3dbea()
  %v1_34d39 = icmp eq i32 %v0_34d32, 0
  br i1 %v1_34d39, label %bb, label %dec_label_pc_34d3d

bb:                                               ; preds = %dec_label_pc_34d30
  %v1_34d3b = call i32 @function_34d66()
  br label %dec_label_pc_34d3d

dec_label_pc_34d3d:                               ; preds = %bb, %dec_label_pc_34d30
  %v0_34d3d = load i32, i32* @ebp, align 4
  %v1_34d3d = add i32 %v0_34d3d, -52
  %v2_34d3d = inttoptr i32 %v1_34d3d to i32*
  %v3_34d3d = load i32, i32* %v2_34d3d, align 4
  %v2_34d47 = call i32 @unknown_69984(i32 %v0_34d32, i32 %v3_34d3d)
  %v0_34d4c = call i32 @function_34d66()
  ret i32 %v0_34d4c

; uselistorder directives
  uselistorder i32 ()* @function_34d66, { 1, 0 }
}

define i32 @function_34d66() local_unnamed_addr {
dec_label_pc_34d66:
  %v0_34d66 = load i32, i32* @ebp, align 4
  %v1_34d66 = add i32 %v0_34d66, -28
  %v2_34d66 = inttoptr i32 %v1_34d66 to i32*
  %v3_34d66 = load i32, i32* %v2_34d66, align 4
  %v1_34d69 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_34d69 = xor i32 %v1_34d69, %v3_34d66
  %v3_34d69 = icmp eq i32 %v2_34d69, 0
  store i32 %v2_34d69, i32* @eax, align 4
  br i1 %v3_34d69, label %bb, label %dec_label_pc_34d72

bb:                                               ; preds = %dec_label_pc_34d66
  %v1_34d70 = call i32 @function_34d77()
  br label %dec_label_pc_34d72

dec_label_pc_34d72:                               ; preds = %bb, %dec_label_pc_34d66
  %v2_34d70 = phi i32 [ %v1_34d70, %bb ], [ %v2_34d69, %dec_label_pc_34d66 ]
  ret i32 %v2_34d70
}

define i32 @function_34d77() local_unnamed_addr {
dec_label_pc_34d77:
  %v0_34d7e = load i32, i32* @eax, align 4
  ret i32 %v0_34d7e
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK14CScriptVisitorEEPKv14CNoDestinationNS_7variantIS9_6CKeyID9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34d7f:
  %edx.global-to-local = alloca i32, align 4
  %v0_34db5 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_34db5, 16777216
  %v5_34dd4 = sdiv i32 %sext, 16777216
  %v6_34dd4 = call i32 @unknown_6b462(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_34dd4)
  store i32 %v6_34dd4, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_34de5

bb:                                               ; preds = %dec_label_pc_34d7f
  %v1_34de3 = call i32 @function_34dea()
  br label %dec_label_pc_34de5

dec_label_pc_34de5:                               ; preds = %bb, %dec_label_pc_34d7f
  %v2_34de3 = phi i32 [ %v1_34de3, %bb ], [ %v6_34dd4, %dec_label_pc_34d7f ]
  ret i32 %v2_34de3
}

define i32 @function_34dea() local_unnamed_addr {
dec_label_pc_34dea:
  %v0_34deb = load i32, i32* @eax, align 4
  ret i32 %v0_34deb
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK14CScriptVisitorEEPKv6CKeyIDNS_7variantI14CNoDestinationS9_9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34dec:
  ret i32 %arg1
}

define i32 @function_34e40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34e40:
  %v0_34e40 = load i32, i32* @eax, align 4
  %v11_34e40 = and i32 %v0_34e40, -24
  %v1_34e43 = trunc i32 %v11_34e40 to i16
  %v3_34e43 = inttoptr i32 %v11_34e40 to i16*
  %v4_34e43 = load i16, i16* %v3_34e43, align 8
  %v5_34e43 = add i16 %v1_34e43, %v4_34e43
  %v21_34e43 = zext i16 %v5_34e43 to i32
  %v23_34e43 = and i32 %v0_34e40, -65536
  %v24_34e43 = or i32 %v21_34e43, %v23_34e43
  store i32 %v24_34e43, i32* @eax, align 4
  %v0_34e46 = load i32, i32* @ebp, align 4
  %v1_34e46 = add i32 %v0_34e46, -12
  %v2_34e46 = inttoptr i32 %v1_34e46 to i32*
  %v3_34e46 = load i32, i32* %v2_34e46, align 4
  %v1_34e49 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34e49 = icmp eq i32 %v1_34e49, %v3_34e46
  br i1 %v3_34e49, label %bb, label %dec_label_pc_34e52

bb:                                               ; preds = %dec_label_pc_34e40
  %v1_34e50 = call i32 @function_34e57()
  br label %dec_label_pc_34e52

dec_label_pc_34e52:                               ; preds = %bb, %dec_label_pc_34e40
  %v2_34e50 = phi i32 [ %v1_34e50, %bb ], [ %v24_34e43, %dec_label_pc_34e40 ]
  ret i32 %v2_34e50

; uselistorder directives
  uselistorder i32 %v11_34e40, { 1, 0 }
  uselistorder i32 %v0_34e40, { 1, 0 }
}

define i32 @function_34e57() local_unnamed_addr {
dec_label_pc_34e57:
  %v0_34e58 = load i32, i32* @eax, align 4
  ret i32 %v0_34e58
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK14CScriptVisitorEEPKv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS9_NS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_34e59:
  ret i32 0
}

define i32 @function_34e90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34e90:
  %v0_34e93 = load i32, i32* @ebp, align 4
  %v1_34e93 = add i32 %v0_34e93, -40
  %v2_34e93 = inttoptr i32 %v1_34e93 to i32*
  %v3_34e93 = load i32, i32* %v2_34e93, align 4
  %v1_34e9a = add i32 %v0_34e93, -36
  %v2_34e9a = inttoptr i32 %v1_34e9a to i32*
  %v3_34e9a = load i32, i32* %v2_34e9a, align 4
  %v1_34ea1 = add i32 %v0_34e93, -32
  %v2_34ea1 = inttoptr i32 %v1_34ea1 to i32*
  %v3_34ea1 = load i32, i32* %v2_34ea1, align 4
  %v1_34ea8 = add i32 %v0_34e93, -28
  %v2_34ea8 = inttoptr i32 %v1_34ea8 to i32*
  %v3_34ea8 = load i32, i32* %v2_34ea8, align 4
  %v4_34eae = call i32 @unknown_6b606(i32 %v3_34ea8, i32 %v3_34ea1, i32 %v3_34e9a, i32 %v3_34e93)
  store i32 %v4_34eae, i32* @eax, align 4
  %v0_34eb3 = load i32, i32* @ebp, align 4
  %v1_34eb3 = add i32 %v0_34eb3, -12
  %v2_34eb3 = inttoptr i32 %v1_34eb3 to i32*
  %v3_34eb3 = load i32, i32* %v2_34eb3, align 4
  %v1_34eb6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_34eb6 = icmp eq i32 %v1_34eb6, %v3_34eb3
  br i1 %v3_34eb6, label %bb, label %dec_label_pc_34ebf

bb:                                               ; preds = %dec_label_pc_34e90
  %v1_34ebd = call i32 @function_34ec4()
  br label %dec_label_pc_34ebf

dec_label_pc_34ebf:                               ; preds = %bb, %dec_label_pc_34e90
  %v3_34ebd = phi i32 [ %v1_34ebd, %bb ], [ %v4_34eae, %dec_label_pc_34e90 ]
  ret i32 %v3_34ebd

; uselistorder directives
  uselistorder i32 %v0_34e93, { 1, 0, 2, 3 }
}

define i32 @function_34ec4() local_unnamed_addr {
dec_label_pc_34ec4:
  %v0_34ec5 = load i32, i32* @eax, align 4
  ret i32 %v0_34ec5
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorIK14CScriptVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_SD_E18has_fallback_type_EEENT_11result_typeEiRSG_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34ec6:
  %v4_34ee4 = zext i8 %arg5 to i32
  ret i32 %v4_34ee4
}

define i32 @function_34eed(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34eed:
  %eax.global-to-local = alloca i32, align 4
  %v0_34eed = load i32, i32* @eax, align 4
  %v2_34eed = load i1, i1* @cf, align 1
  %v3_34eed = zext i1 %v2_34eed to i32
  %v4_34eed = add i32 %v0_34eed, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32))
  %v5_34eed = add i32 %v4_34eed, %v3_34eed
  %v31_34eed = urem i32 %v5_34eed, 256
  %v33_34eed = and i32 %v0_34eed, -256
  %v34_34eed = or i32 %v31_34eed, %v33_34eed
  store i32 %v34_34eed, i32* %eax.global-to-local, align 4
  %v0_34eef = load i32, i32* @ebp, align 4
  %v1_34eef = add i32 %v0_34eef, 1
  store i32 %v1_34eef, i32* @ebp, align 4
  %v1_34ef0 = add i32 %v0_34eef, -94
  %v2_34ef0 = inttoptr i32 %v1_34ef0 to i8*
  %v3_34ef0 = load i8, i8* %v2_34ef0, align 1
  %v5_34ef0 = mul i8 %v3_34ef0, 2
  store i8 %v5_34ef0, i8* %v2_34ef0, align 1
  %v16_34ef0 = icmp slt i8 %v3_34ef0, 0
  %v0_34ef3 = load i32, i32* %eax.global-to-local, align 4
  %v1_34ef3 = trunc i32 %v0_34ef3 to i8
  %v3_34ef3 = zext i1 %v16_34ef0 to i8
  %v4_34ef3 = add i8 %v1_34ef3, %v3_34ef3
  %v22_34ef3 = zext i8 %v4_34ef3 to i32
  %v24_34ef3 = and i32 %v0_34ef3, -256
  %v25_34ef3 = or i32 %v22_34ef3, %v24_34ef3
  store i32 %v25_34ef3, i32* %eax.global-to-local, align 4
  %v1_34ef5 = inttoptr i32 %v25_34ef3 to i8*
  %v2_34ef5 = load i8, i8* %v1_34ef5, align 1
  %v5_34ef5 = add i8 %v2_34ef5, %v4_34ef3
  store i8 %v5_34ef5, i8* %v1_34ef5, align 1
  %v0_34ef7 = load i32, i32* %eax.global-to-local, align 4
  %v1_34ef7 = load i32, i32* @ebp, align 4
  %v2_34ef7 = add i32 %v1_34ef7, -12
  %v3_34ef7 = inttoptr i32 %v2_34ef7 to i32*
  store i32 %v0_34ef7, i32* %v3_34ef7, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v3_34ef0, { 1, 0 }
  uselistorder i32 %v0_34eed, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorIK14CScriptVisitorEEPKvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_SM_E18has_fallback_type_EEENT1_11result_typeEiiRSP_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_34f20:
  %v4_34f3e = zext i8 %arg5 to i32
  ret i32 %v4_34f3e
}

define i32 @function_34f46(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_34f46:
  %v0_34f4a = load i32, i32* @ebp, align 4
  %v1_34f4a = add i32 %v0_34f4a, 1
  store i32 %v1_34f4a, i32* @ebp, align 4
  %v1_34f4c = add i32 %v0_34f4a, 33
  %v2_34f4c = inttoptr i32 %v1_34f4c to i32*
  %v3_34f4c = load i32, i32* %v2_34f4c, align 4
  %v2_34f4f = add i32 %v0_34f4a, -47
  %v3_34f4f = inttoptr i32 %v2_34f4f to i32*
  store i32 %v3_34f4c, i32* %v3_34f4f, align 4
  %v0_34f52 = load i32, i32* @ebp, align 4
  %v1_34f52 = add i32 %v0_34f52, 36
  %v2_34f52 = inttoptr i32 %v1_34f52 to i32*
  %v3_34f52 = load i32, i32* %v2_34f52, align 4
  %v2_34f55 = add i32 %v0_34f52, -52
  %v3_34f55 = inttoptr i32 %v2_34f55 to i32*
  store i32 %v3_34f52, i32* %v3_34f55, align 4
  %v0_34f58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_34f5e = load i32, i32* @ebp, align 4
  %v2_34f5e = add i32 %v1_34f5e, -12
  %v3_34f5e = inttoptr i32 %v2_34f5e to i32*
  store i32 %v0_34f58, i32* %v3_34f5e, align 4
  ret i32 0
}

define i32 @_ZSt10__fill_n_aIjhEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT0_E7__valueEPS3_E6__typeES5_T_RKS3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34f87:
  %v2_34fb0 = add i32 %arg2, %arg1
  %v3_34fc3 = call i32 @unknown_66dc1(i32 %arg1, i32 %v2_34fb0, i32 %arg3)
  store i32 %v2_34fb0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_34fdc

bb:                                               ; preds = %dec_label_pc_34f87
  %v1_34fda = call i32 @function_34fe1()
  br label %dec_label_pc_34fdc

dec_label_pc_34fdc:                               ; preds = %bb, %dec_label_pc_34f87
  %v2_34fda = phi i32 [ %v1_34fda, %bb ], [ %v2_34fb0, %dec_label_pc_34f87 ]
  ret i32 %v2_34fda

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_34fe1() local_unnamed_addr {
dec_label_pc_34fe1:
  %v0_34fe2 = load i32, i32* @eax, align 4
  ret i32 %v0_34fe2
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_34fe4:
  %v0_34ffc = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_34ffc
}

define i32 @function_35006(i32 %arg1) local_unnamed_addr {
dec_label_pc_35006:
  %v0_35006 = load i32, i32* @ebx, align 4
  %v1_35006 = add i32 %v0_35006, 76145733
  %v2_35006 = inttoptr i32 %v1_35006 to i8*
  %v3_35006 = load i8, i8* %v2_35006, align 1
  %v4_35006 = udiv i8 %v3_35006, 16
  %v5_35006 = mul i8 %v3_35006, 16
  %v6_35006 = or i8 %v4_35006, %v5_35006
  store i8 %v6_35006, i8* %v2_35006, align 1
  %v0_3500d = call i32 @unknown_6b7f6()
  %v1_35012 = load i32, i32* @ebp, align 4
  %v2_35012 = add i32 %v1_35012, -32
  %v3_35012 = inttoptr i32 %v2_35012 to i32*
  %v4_35012 = load i32, i32* %v3_35012, align 4
  %v10_35012 = icmp ult i32 %v0_3500d, %v4_35012
  %v1_35015 = zext i1 %v10_35012 to i32
  %v3_35015 = and i32 %v0_3500d, -256
  %v4_35015 = or i32 %v1_35015, %v3_35015
  %v5_35018 = icmp eq i1 %v10_35012, false
  br i1 %v5_35018, label %bb, label %dec_label_pc_3501c

bb:                                               ; preds = %dec_label_pc_35006
  %v1_3501a = call i32 @function_35021()
  br label %dec_label_pc_3501c

dec_label_pc_3501c:                               ; preds = %bb, %dec_label_pc_35006
  %v2_3501a = phi i32 [ %v1_3501a, %bb ], [ %v4_35015, %dec_label_pc_35006 ]
  ret i32 %v2_3501a

; uselistorder directives
  uselistorder i1 %v10_35012, { 1, 0 }
  uselistorder i32 76145733, { 1, 0 }
}

define i32 @function_35021() local_unnamed_addr {
dec_label_pc_35021:
  %v0_35021 = load i32, i32* @ebp, align 4
  %v1_35021 = add i32 %v0_35021, -32
  %v2_35021 = inttoptr i32 %v1_35021 to i32*
  %v3_35021 = load i32, i32* %v2_35021, align 4
  %v2_3502a = mul i32 %v3_35021, 24
  ret i32 %v2_3502a
}

define i32 @function_35045() local_unnamed_addr {
dec_label_pc_35045:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35045 = load i32, i32* %ecx.global-to-local, align 4
  %v1_35045 = add i32 %v0_35045, -1
  store i32 %v1_35045, i32* %ecx.global-to-local, align 4
  %v0_35047 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35047
}

define i32 @_ZSt4copyIPKhPhET0_T_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35048:
  ret i32 %arg2
}

define i32 @function_35072(i32 %arg1) local_unnamed_addr {
dec_label_pc_35072:
  %v1_35072 = call i32 @unknown_632ea(i32 ptrtoint (i32* @9 to i32))
  store i32 %v1_35072, i32* @ebx, align 4
  %v0_35079 = load i32, i32* @ebp, align 4
  %v1_35079 = add i32 %v0_35079, -28
  %v2_35079 = inttoptr i32 %v1_35079 to i32*
  %v3_35079 = load i32, i32* %v2_35079, align 4
  %v1_3507f = call i32 @unknown_632ea(i32 %v3_35079)
  %v0_35084 = load i32, i32* @ebp, align 4
  %v1_35084 = add i32 %v0_35084, -36
  %v2_35084 = inttoptr i32 %v1_35084 to i32*
  %v3_35084 = load i32, i32* %v2_35084, align 4
  %v0_3508b = load i32, i32* @ebx, align 4
  %v3_35092 = call i32 @unknown_6b889(i32 %v1_3507f, i32 %v0_3508b, i32 %v3_35084)
  store i32 %v3_35092, i32* @eax, align 4
  %v0_35097 = load i32, i32* @ebp, align 4
  %v1_35097 = add i32 %v0_35097, -12
  %v2_35097 = inttoptr i32 %v1_35097 to i32*
  %v3_35097 = load i32, i32* %v2_35097, align 4
  %v1_3509a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3509a = icmp eq i32 %v1_3509a, %v3_35097
  br i1 %v3_3509a, label %bb, label %dec_label_pc_350a3

bb:                                               ; preds = %dec_label_pc_35072
  %v1_350a1 = call i32 @function_350a8()
  br label %dec_label_pc_350a3

dec_label_pc_350a3:                               ; preds = %bb, %dec_label_pc_35072
  %v2_350a1 = phi i32 [ %v1_350a1, %bb ], [ %v3_35092, %dec_label_pc_35072 ]
  ret i32 %v2_350a1

; uselistorder directives
  uselistorder i32 (i32)* @unknown_632ea, { 1, 0 }
}

define i32 @function_350a8() local_unnamed_addr {
dec_label_pc_350a8:
  %v0_350ad = load i32, i32* @eax, align 4
  ret i32 %v0_350ad
}

define i32 @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_350ae:
  %v2_350d9 = sub i32 %arg2, %arg1
  %v2_350d9.off = add i32 %v2_350d9, 3
  %tmp110 = icmp ult i32 %v2_350d9.off, 7
  br i1 %tmp110, label %bb, label %dec_label_pc_350e9

bb:                                               ; preds = %dec_label_pc_350ae
  %v4_350e7 = call i32 @function_35105(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_350e9

dec_label_pc_350e9:                               ; preds = %bb, %dec_label_pc_350ae
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 7, { 0, 10, 3, 2, 1, 5, 4, 7, 6, 8, 9, 11 }
}

define i32 @function_35105(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35105:
  %v0_35105 = load i32, i32* @ebp, align 4
  %v1_35105 = add i32 %v0_35105, -16
  %v2_35105 = inttoptr i32 %v1_35105 to i32*
  %v3_35105 = load i32, i32* %v2_35105, align 4
  %v2_35108 = mul i32 %v3_35105, 4
  %v2_3510b = add i32 %v0_35105, -36
  %v3_3510b = inttoptr i32 %v2_3510b to i32*
  %v4_3510b = load i32, i32* %v3_3510b, align 4
  %v5_3510b = add i32 %v4_3510b, %v2_35108
  store i32 %v5_3510b, i32* @eax, align 4
  %v1_3510e = add i32 %v0_35105, -12
  %v2_3510e = inttoptr i32 %v1_3510e to i32*
  %v3_3510e = load i32, i32* %v2_3510e, align 4
  %v1_35111 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @of, align 1
  %v3_35111 = icmp eq i32 %v1_35111, %v3_3510e
  br i1 %v3_35111, label %bb, label %dec_label_pc_3511a

bb:                                               ; preds = %dec_label_pc_35105
  %v1_35118 = call i32 @function_3511f()
  br label %dec_label_pc_3511a

dec_label_pc_3511a:                               ; preds = %bb, %dec_label_pc_35105
  %v2_35118 = phi i32 [ %v1_35118, %bb ], [ %v5_3510b, %dec_label_pc_35105 ]
  ret i32 %v2_35118

; uselistorder directives
  uselistorder i1* @of, { 0, 9, 10, 1, 3, 7, 8, 4, 5, 6, 2 }
}

define i32 @function_3511f() local_unnamed_addr {
dec_label_pc_3511f:
  %v0_35120 = load i32, i32* @eax, align 4
  ret i32 %v0_35120
}

define i32 @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mISt19_Bit_const_iteratorSt13_Bit_iteratorEET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35121:
  ret i32 %arg3
}

define i32 @function_3513c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3513c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_3513c = load i32, i32* @eax, align 4
  %v1_3513c = trunc i32 %v0_3513c to i8
  %v2_3513c = load i1, i1* @cf, align 1
  %v3_3513c = zext i1 %v2_3513c to i8
  %v4_3513c = add i8 %v1_3513c, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_3513c = add i8 %v4_3513c, %v3_3513c
  %v20_3513c = add i8 %v1_3513c, -119
  %v21_3513c = add i8 %v20_3513c, %v3_3513c
  %v22_3513c = icmp ule i8 %v21_3513c, %v1_3513c
  %v23_3513c = icmp ugt i8 %v1_3513c, 118
  %v24_3513c = select i1 %v2_3513c, i1 %v22_3513c, i1 %v23_3513c
  store i1 %v24_3513c, i1* %cf.global-to-local, align 1
  %v0_3513e = load i32, i32* @ebp, align 4
  %not. = icmp ugt i8 %v5_3513c, -118
  %v3_3513f = urem i8 %v5_3513c, ptrtoint (i8* @global_var_8b.2199 to i8)
  %v4_3513f = zext i8 %v3_3513f to i32
  %v6_3513f = and i32 %v0_3513c, -65536
  %v10_3513f = select i1 %not., i32 256, i32 0
  %v11_3513f = or i32 %v4_3513f, %v6_3513f
  %v12_3513f = or i32 %v11_3513f, %v10_3513f
  store i32 %v12_3513f, i32* %eax.global-to-local, align 4
  %v1_35141 = add i32 %v0_3513e, 2
  store i32 %v1_35141, i32* %ebp.global-to-local, align 4
  %v0_35142 = load i32, i32* @ecx, align 4
  %v1_35142 = add i32 %v0_35142, 1166792773
  %v2_35142 = inttoptr i32 %v1_35142 to i8*
  %v3_35142 = load i8, i8* %v2_35142, align 1
  %v5_35142 = trunc i32 %v0_35142 to i8
  %v7_35142 = zext i1 %v24_3513c to i8
  %v8_35142 = sub i8 %v3_35142, %v5_35142
  %v9_35142 = add i8 %v8_35142, %v7_35142
  %v19_35142 = sub i8 %v8_35142, %v7_35142
  %v20_35142 = icmp ult i8 %v3_35142, %v19_35142
  %v21_35142 = icmp ne i8 %v5_35142, -1
  %v22_35142 = or i1 %v21_35142, %v20_35142
  %v23_35142 = icmp ult i8 %v3_35142, %v5_35142
  %v24_35142 = select i1 %v24_3513c, i1 %v22_35142, i1 %v23_35142
  store i1 %v24_35142, i1* %cf.global-to-local, align 1
  store i8 %v9_35142, i8* %v2_35142, align 1
  %v0_35148 = load i32, i32* %eax.global-to-local, align 4
  %v2_35148 = load i1, i1* %cf.global-to-local, align 1
  %v3_35148 = zext i1 %v2_35148 to i32
  %v4_35148 = add i32 %v0_35148, 119
  %v5_35148 = add i32 %v4_35148, %v3_35148
  %v31_35148 = urem i32 %v5_35148, 256
  %v33_35148 = and i32 %v0_35148, -256
  %v34_35148 = or i32 %v31_35148, %v33_35148
  store i32 %v34_35148, i32* %eax.global-to-local, align 4
  %v0_3514a = load i32, i32* %ebp.global-to-local, align 4
  %v1_3514a = add i32 %v0_3514a, 1
  store i32 %v1_3514a, i32* @ebp, align 4
  %v1_3514c = add i32 %v0_3514a, 33
  %v2_3514c = inttoptr i32 %v1_3514c to i32*
  %v3_3514c = load i32, i32* %v2_3514c, align 4
  store i32 %v3_3514c, i32* %eax.global-to-local, align 4
  %v2_3514f = add i32 %v0_3514a, -47
  %v3_3514f = inttoptr i32 %v2_3514f to i32*
  store i32 %v3_3514c, i32* %v3_3514f, align 4
  %v0_35152 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_35158 = load i32, i32* @ebp, align 4
  %v2_35158 = add i32 %v1_35158, -12
  %v3_35158 = inttoptr i32 %v2_35158 to i32*
  store i32 %v0_35152, i32* %v3_35158, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_3515d = load i32, i32* @ebp, align 4
  %v1_3515d = add i32 %v0_3515d, -36
  %v1_35164 = add i32 %v0_3515d, -44
  store i32 %v1_35164, i32* %eax.global-to-local, align 4
  %v2_3516a = call i32 @unknown_3e4a2(i32 %v1_35164, i32 %v1_3515d)
  store i32 %v2_3516a, i32* @eax, align 4
  %v1_3516f = load i32, i32* @ebp, align 4
  %v2_3516f = add i32 %v1_3516f, -16
  %v3_3516f = inttoptr i32 %v2_3516f to i32*
  store i32 %v2_3516a, i32* %v3_3516f, align 4
  %v0_35172 = call i32 @function_351c0()
  store i32 %v0_35172, i32* %eax.global-to-local, align 4
  ret i32 %v0_35172

; uselistorder directives
  uselistorder i32 %v0_35148, { 1, 0 }
  uselistorder i8 %v8_35142, { 1, 0 }
  uselistorder i8 %v7_35142, { 1, 0 }
  uselistorder i8 %v5_35142, { 1, 0, 2 }
  uselistorder i1 %v24_3513c, { 1, 0, 2 }
  uselistorder i8 %v5_3513c, { 1, 0 }
  uselistorder i32 -47, { 1, 0, 2, 3 }
  uselistorder i32 33, { 6, 4, 5, 8, 7, 0, 1, 2, 3 }
  uselistorder i32 119, { 1, 0, 2 }
  uselistorder i32 -65536, { 0, 1, 2, 3, 5, 4 }
  uselistorder i8* @global_var_8b.2199, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_8b.2199 to i8), { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_3515a(i32 %arg1) local_unnamed_addr {
dec_label_pc_3515a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35174() local_unnamed_addr {
dec_label_pc_35174:
  %v0_35174 = load i32, i32* @ebp, align 4
  %v1_35174 = add i32 %v0_35174, -36
  %v1_3517a = call i32 @unknown_3e8b5(i32 %v1_35174)
  %v1_3517f = urem i32 %v1_3517a, 256
  %v0_35182 = load i32, i32* @ebp, align 4
  %v1_35182 = add i32 %v0_35182, -24
  %v1_35185 = add i32 %v0_35182, -52
  %v2_3518f = call i32 @unknown_3e597(i32 %v1_35182, i32 %v1_35185)
  %v0_3519b = load i32, i32* @ebp, align 4
  %v1_3519b = add i32 %v0_3519b, -24
  %v2_351a1 = call i32 @unknown_3e18b(i32 %v1_3519b, i32 %v1_3517f)
  ret i32 %v2_351a1
}

define i32 @function_351a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_351a8:
  %eax.global-to-local = alloca i32, align 4
  %v1_351a8 = load i32, i32* @ecx, align 4
  %v2_351a8 = add i32 %v1_351a8, 1625826308
  %v3_351a8 = inttoptr i32 %v2_351a8 to double*
  %v4_351a8 = load double, double* %v3_351a8, align 4
  %v5_351a8 = fpext double %v4_351a8 to x86_fp80
  %v6_351a8 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_351a8 = fmul x86_fp80 %v5_351a8, %v6_351a8
  store x86_fp80 %v7_351a8, x86_fp80* @st0, align 4
  %v0_351ae = load i32, i32* @eax, align 4
  %v1_351ae = load i32, i32* @edi, align 4
  store i32 %v0_351ae, i32* @edi, align 4
  %tmp1 = trunc i32 %v0_351ae to i8
  %v4_351af = trunc i32 %v1_351ae to i8
  %v5_351af = add i8 %v4_351af, %tmp1
  %v21_351af = inttoptr i32 %v1_351ae to i8*
  store i8 %v5_351af, i8* %v21_351af, align 1
  %v0_351b1 = load i32, i32* @ebp, align 4
  %v1_351b1 = add i32 %v0_351b1, -52
  store i32 %v1_351b1, i32* %eax.global-to-local, align 4
  %v1_351b7 = call i32 @unknown_3e5f3(i32 %v1_351b1)
  store i32 %v1_351b7, i32* %eax.global-to-local, align 4
  %v0_351bc = load i32, i32* @ebp, align 4
  %v1_351bc = add i32 %v0_351bc, -16
  %v2_351bc = inttoptr i32 %v1_351bc to i32*
  %v3_351bc = load i32, i32* %v2_351bc, align 4
  %v4_351bc = add i32 %v3_351bc, -1
  store i32 %v4_351bc, i32* %v2_351bc, align 4
  %v22_351bc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_351bc
}

define i32 @function_351c0() local_unnamed_addr {
dec_label_pc_351c0:
  %edx.global-to-local = alloca i32, align 4
  %v0_351c0 = load i32, i32* @ebp, align 4
  %v1_351c0 = add i32 %v0_351c0, -16
  %v2_351c0 = inttoptr i32 %v1_351c0 to i32*
  %v3_351c0 = load i32, i32* %v2_351c0, align 4
  %v10_351c0 = icmp eq i32 %v3_351c0, 0
  %v11_351c0 = icmp slt i32 %v3_351c0, 0
  %v3_351c4 = icmp eq i1 %v11_351c0, false
  %v4_351c4 = icmp eq i1 %v10_351c0, false
  %v5_351c4 = icmp eq i1 %v3_351c4, %v4_351c4
  %v5_351c7 = icmp eq i1 %v5_351c4, false
  %v1_351c9 = icmp eq i1 %v5_351c7, false
  br i1 %v1_351c9, label %bb, label %dec_label_pc_351cb

bb:                                               ; preds = %dec_label_pc_351c0
  %v2_351c9 = call i32 @function_35174()
  %v0_351cb.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_351cb

dec_label_pc_351cb:                               ; preds = %bb, %dec_label_pc_351c0
  %v0_351d1 = phi i32 [ %v0_351cb.pre, %bb ], [ %v0_351c0, %dec_label_pc_351c0 ]
  %v1_351cb = add i32 %v0_351d1, -28
  %v2_351cb = inttoptr i32 %v1_351cb to i32*
  %v3_351cb = load i32, i32* %v2_351cb, align 4
  store i32 %v3_351cb, i32* @ecx, align 4
  %v1_351ce = add i32 %v0_351d1, -52
  %v2_351ce = inttoptr i32 %v1_351ce to i32*
  %v3_351ce = load i32, i32* %v2_351ce, align 4
  %v1_351d1 = add i32 %v0_351d1, -48
  %v2_351d1 = inttoptr i32 %v1_351d1 to i32*
  %v3_351d1 = load i32, i32* %v2_351d1, align 4
  store i32 %v3_351d1, i32* %edx.global-to-local, align 4
  %v2_351d4 = inttoptr i32 %v3_351cb to i32*
  store i32 %v3_351ce, i32* %v2_351d4, align 4
  %v0_351d6 = load i32, i32* %edx.global-to-local, align 4
  %v1_351d6 = load i32, i32* @ecx, align 4
  %v2_351d6 = add i32 %v1_351d6, 4
  %v3_351d6 = inttoptr i32 %v2_351d6 to i32*
  store i32 %v0_351d6, i32* %v3_351d6, align 4
  %v0_351d9 = load i32, i32* @ebp, align 4
  %v1_351d9 = add i32 %v0_351d9, -28
  %v2_351d9 = inttoptr i32 %v1_351d9 to i32*
  %v3_351d9 = load i32, i32* %v2_351d9, align 4
  %v1_351dc = add i32 %v0_351d9, -12
  %v2_351dc = inttoptr i32 %v1_351dc to i32*
  %v3_351dc = load i32, i32* %v2_351dc, align 4
  store i32 %v3_351dc, i32* %edx.global-to-local, align 4
  %v1_351df = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_351df = xor i32 %v1_351df, %v3_351dc
  store i32 %v2_351df, i32* %edx.global-to-local, align 4
  %v1_351ed = add i32 %v0_351d9, -4
  %v2_351ed = inttoptr i32 %v1_351ed to i32*
  %v3_351ed = load i32, i32* %v2_351ed, align 4
  store i32 %v3_351ed, i32* @ebx, align 4
  ret i32 %v3_351d9

; uselistorder directives
  uselistorder i32 %v0_351d1, { 0, 2, 1 }
  uselistorder i32 %v3_351c0, { 1, 0 }
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP6CTxOutS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_351f4:
  ret i32 %arg3
}

define i32 @function_35232(i32 %arg1) local_unnamed_addr {
dec_label_pc_35232:
  %v0_35232 = load i32, i32* @eax, align 4
  %v1_35235 = call i32 @unknown_63763(i32 %v0_35232)
  %v0_3523a = load i32, i32* @ebp, align 4
  %v1_3523a = add i32 %v0_3523a, -28
  %v2_3523a = inttoptr i32 %v1_3523a to i32*
  %v3_3523a = load i32, i32* %v2_3523a, align 4
  %v4_3523a = add i32 %v3_3523a, 20
  store i32 %v4_3523a, i32* %v2_3523a, align 4
  %v0_3523e = load i32, i32* @ebp, align 4
  %v1_3523e = add i32 %v0_3523e, -16
  %v2_3523e = inttoptr i32 %v1_3523e to i32*
  %v3_3523e = load i32, i32* %v2_3523e, align 4
  %v4_3523e = add i32 %v3_3523e, 20
  store i32 %v4_3523e, i32* %v2_3523e, align 4
  %v0_35242 = load i32, i32* @ebp, align 4
  %v1_3524f = add i32 %v0_35242, -16
  %v2_3524f = inttoptr i32 %v1_3524f to i32*
  %v3_3524f = load i32, i32* %v2_3524f, align 4
  store i32 %v3_3524f, i32* @eax, align 4
  %v1_35252 = add i32 %v0_35242, -12
  %v2_35252 = inttoptr i32 %v1_35252 to i32*
  %v3_35252 = load i32, i32* %v2_35252, align 4
  %v1_35255 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35255 = icmp eq i32 %v1_35255, %v3_35252
  br i1 %v3_35255, label %bb, label %dec_label_pc_3525e

bb:                                               ; preds = %dec_label_pc_35232
  %v1_3525c = call i32 @function_35295()
  br label %dec_label_pc_3525e

dec_label_pc_3525e:                               ; preds = %bb, %dec_label_pc_35232
  %v3_3525c = phi i32 [ %v1_3525c, %bb ], [ %v3_3524f, %dec_label_pc_35232 ]
  ret i32 %v3_3525c

; uselistorder directives
  uselistorder i32 %v0_35242, { 1, 0 }
}

define i32 @function_3525f(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3525f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_35261() local_unnamed_addr {
dec_label_pc_35261:
  %eax.global-to-local = alloca i32, align 4
  %v0_35261 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35261
}

define i32 @function_35295() local_unnamed_addr {
dec_label_pc_35295:
  %v0_3529a = load i32, i32* @eax, align 4
  ret i32 %v0_3529a
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP6CTxOutS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3529b:
  %v2_352c6 = sub i32 %arg2, %arg1
  %v2_352ca = sdiv i32 %v2_352c6, 4
  ret i32 %v2_352ca
}

define i32 @function_352d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_352d0:
  %v0_352d3 = load i32, i32* @eax, align 4
  %v1_352d3 = load i32, i32* @ebp, align 4
  %v2_352d3 = add i32 %v1_352d3, -16
  %v3_352d3 = inttoptr i32 %v2_352d3 to i32*
  store i32 %v0_352d3, i32* %v3_352d3, align 4
  br label %dec_label_pc_352f6

dec_label_pc_352d8:                               ; preds = %dec_label_pc_352f6
  %v1_352d8 = add i32 %v0_352f6, -32
  %v2_352d8 = inttoptr i32 %v1_352d8 to i32*
  %v3_352d8 = load i32, i32* %v2_352d8, align 4
  %v4_352d8 = add i32 %v3_352d8, -20
  store i32 %v4_352d8, i32* %v2_352d8, align 4
  %v0_352dc = load i32, i32* @ebp, align 4
  %v1_352dc = add i32 %v0_352dc, -36
  %v2_352dc = inttoptr i32 %v1_352dc to i32*
  %v3_352dc = load i32, i32* %v2_352dc, align 4
  %v4_352dc = add i32 %v3_352dc, -20
  store i32 %v4_352dc, i32* %v2_352dc, align 4
  %v0_352e0 = load i32, i32* @ebp, align 4
  %v1_352e0 = add i32 %v0_352e0, -32
  %v2_352e0 = inttoptr i32 %v1_352e0 to i32*
  %v3_352e0 = load i32, i32* %v2_352e0, align 4
  %v1_352e7 = add i32 %v0_352e0, -36
  %v2_352e7 = inttoptr i32 %v1_352e7 to i32*
  %v3_352e7 = load i32, i32* %v2_352e7, align 4
  %v2_352ed = call i32 @unknown_64147(i32 %v3_352e7, i32 %v3_352e0)
  store i32 %v2_352ed, i32* @eax, align 4
  %v0_352f2 = load i32, i32* @ebp, align 4
  %v1_352f2 = add i32 %v0_352f2, -16
  %v2_352f2 = inttoptr i32 %v1_352f2 to i32*
  %v3_352f2 = load i32, i32* %v2_352f2, align 4
  %v4_352f2 = add i32 %v3_352f2, -1
  store i32 %v4_352f2, i32* %v2_352f2, align 4
  br label %dec_label_pc_352f6

dec_label_pc_352f6:                               ; preds = %dec_label_pc_352d8, %dec_label_pc_352d0
  %v0_352f6 = load i32, i32* @ebp, align 4
  %v1_352f6 = add i32 %v0_352f6, -16
  %v2_352f6 = inttoptr i32 %v1_352f6 to i32*
  %v3_352f6 = load i32, i32* %v2_352f6, align 4
  %v10_352f6 = icmp eq i32 %v3_352f6, 0
  %v11_352f6 = icmp slt i32 %v3_352f6, 0
  %v3_352fa = icmp eq i1 %v11_352f6, false
  %v4_352fa = icmp eq i1 %v10_352f6, false
  %v5_352fa = icmp eq i1 %v3_352fa, %v4_352fa
  %v5_352fd = icmp eq i1 %v5_352fa, false
  %v1_352ff = icmp eq i1 %v5_352fd, false
  br i1 %v1_352ff, label %dec_label_pc_352d8, label %dec_label_pc_35301

dec_label_pc_35301:                               ; preds = %dec_label_pc_352f6
  %v1_35301 = add i32 %v0_352f6, -36
  %v2_35301 = inttoptr i32 %v1_35301 to i32*
  %v3_35301 = load i32, i32* %v2_35301, align 4
  store i32 %v3_35301, i32* @eax, align 4
  %v1_35304 = add i32 %v0_352f6, -12
  %v2_35304 = inttoptr i32 %v1_35304 to i32*
  %v3_35304 = load i32, i32* %v2_35304, align 4
  %v1_35307 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_35307 = icmp eq i32 %v1_35307, %v3_35304
  br i1 %v3_35307, label %bb, label %dec_label_pc_35310

bb:                                               ; preds = %dec_label_pc_35301
  %v1_3530e = call i32 @function_35315()
  br label %dec_label_pc_35310

dec_label_pc_35310:                               ; preds = %bb, %dec_label_pc_35301
  %v2_3530e = phi i32 [ %v1_3530e, %bb ], [ %v3_35301, %dec_label_pc_35301 ]
  ret i32 %v2_3530e

; uselistorder directives
  uselistorder i32 %v3_352f6, { 1, 0 }
  uselistorder i32 %v0_352f6, { 1, 0, 3, 2 }
  uselistorder i32 -16, { 38, 37, 39, 108, 109, 111, 110, 112, 19, 0, 1, 103, 104, 36, 43, 42, 44, 34, 32, 33, 35, 45, 46, 47, 48, 114, 113, 115, 20, 53, 54, 21, 93, 56, 57, 55, 2, 3, 4, 5, 105, 86, 87, 63, 61, 62, 106, 100, 30, 31, 10, 11, 12, 49, 50, 51, 95, 96, 66, 67, 22, 23, 24, 25, 68, 69, 26, 27, 28, 29, 75, 76, 58, 59, 60, 70, 71, 72, 73, 74, 77, 78, 79, 94, 80, 81, 82, 83, 40, 41, 84, 101, 102, 85, 7, 6, 8, 9, 52, 107, 64, 65, 13, 14, 15, 16, 17, 88, 89, 90, 91, 92, 18, 97, 98, 99 }
}

define i32 @function_35315() local_unnamed_addr {
dec_label_pc_35315:
  %v0_35316 = load i32, i32* @eax, align 4
  ret i32 %v0_35316
}

define i32 @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIP5CTxInS3_EET0_T_S5_S4_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35317:
  %v15_35368109 = icmp eq i32 %arg1, %arg2
  %v1_3536b110 = icmp eq i1 %v15_35368109, false
  %v5_3536e111 = icmp eq i1 %v1_3536b110, false
  %v1_35370112 = icmp eq i1 %v5_3536e111, false
  store i32 %arg3, i32* @eax, align 4
  br i1 %v1_35370112, label %dec_label_pc_35343, label %dec_label_pc_35372

dec_label_pc_35343:                               ; preds = %dec_label_pc_35317, %dec_label_pc_35343
  %storemerge114 = phi i32 [ %v4_35361, %dec_label_pc_35343 ], [ %arg3, %dec_label_pc_35317 ]
  %stack_var_-32.0113 = phi i32 [ %v4_3535d, %dec_label_pc_35343 ], [ %arg1, %dec_label_pc_35317 ]
  %v1_35349 = call i32 @unknown_63763(i32 %storemerge114)
  %v2_35358 = call i32 @unknown_63fbc(i32 %v1_35349, i32 %stack_var_-32.0113)
  %v4_3535d = add i32 %stack_var_-32.0113, 52
  %v4_35361 = add i32 %storemerge114, 52
  %v15_35368 = icmp eq i32 %v4_3535d, %arg2
  %v1_3536b = icmp eq i1 %v15_35368, false
  %v5_3536e = icmp eq i1 %v1_3536b, false
  %v1_35370 = icmp eq i1 %v5_3536e, false
  store i32 %v4_35361, i32* @eax, align 4
  br i1 %v1_35370, label %dec_label_pc_35343, label %dec_label_pc_35372

dec_label_pc_35372:                               ; preds = %dec_label_pc_35343, %dec_label_pc_35317
  br i1 true, label %bb, label %dec_label_pc_35381

bb:                                               ; preds = %dec_label_pc_35372
  %v1_3537f = call i32 @function_353b8()
  store i32 %v1_3537f, i32* @eax, align 4
  br label %dec_label_pc_35381

dec_label_pc_35381:                               ; preds = %bb, %dec_label_pc_35372
  %v0_35381 = call i32 @function_353b3()
  ret i32 %v0_35381

; uselistorder directives
  uselistorder i32 %v4_35361, { 1, 0 }
  uselistorder i32 %v4_3535d, { 1, 0 }
  uselistorder i32 %storemerge114, { 1, 0 }
  uselistorder i32 52, { 13, 14, 0, 15, 16, 1, 17, 4, 19, 18, 5, 6, 7, 8, 11, 9, 10, 12, 2, 3 }
  uselistorder i32 (i32)* @unknown_63763, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_35343, { 1, 0 }
}

define i32 @function_35384() local_unnamed_addr {
dec_label_pc_35384:
  %eax.global-to-local = alloca i32, align 4
  %v0_35384 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35384
}

define i32 @function_353b3() local_unnamed_addr {
dec_label_pc_353b3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_353b8() local_unnamed_addr {
dec_label_pc_353b8:
  %v0_353bd = load i32, i32* @eax, align 4
  ret i32 %v0_353bd
}

define i32 @_ZNSt20__copy_move_backwardILb0ELb0ESt26random_access_iterator_tagE13__copy_move_bIP5CTxInS4_EET0_T_S6_S5_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_353be:
  %v2_353e9 = sub i32 %arg2, %arg1
  %v2_353ed = sdiv i32 %v2_353e9, 4
  %v3_353f0 = mul i32 %v2_353ed, -991146299
  br label %dec_label_pc_35419

dec_label_pc_353fb:                               ; preds = %dec_label_pc_35419
  %v4_353fb = add i32 %stack_var_-36.0, -52
  %v4_353ff = add i32 %stack_var_-40.0, -52
  %v2_35410 = call i32 @unknown_48e96(i32 %v4_353ff, i32 %v4_353fb)
  %v4_35415 = add i32 %storemerge, -1
  br label %dec_label_pc_35419

dec_label_pc_35419:                               ; preds = %dec_label_pc_353fb, %dec_label_pc_353be
  %stack_var_-36.0 = phi i32 [ %arg2, %dec_label_pc_353be ], [ %v4_353fb, %dec_label_pc_353fb ]
  %stack_var_-40.0 = phi i32 [ %arg3, %dec_label_pc_353be ], [ %v4_353ff, %dec_label_pc_353fb ]
  %storemerge = phi i32 [ %v3_353f0, %dec_label_pc_353be ], [ %v4_35415, %dec_label_pc_353fb ]
  %v10_35419 = icmp eq i32 %storemerge, 0
  %v11_35419 = icmp slt i32 %storemerge, 0
  %v3_3541d = icmp eq i1 %v11_35419, false
  %v4_3541d = icmp eq i1 %v10_35419, false
  %v5_3541d = icmp eq i1 %v3_3541d, %v4_3541d
  %v5_35420 = icmp eq i1 %v5_3541d, false
  %v1_35422 = icmp eq i1 %v5_35420, false
  br i1 %v1_35422, label %dec_label_pc_353fb, label %dec_label_pc_35424

dec_label_pc_35424:                               ; preds = %dec_label_pc_35419
  store i32 %stack_var_-40.0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35433

bb:                                               ; preds = %dec_label_pc_35424
  %v1_35431 = call i32 @function_35438()
  br label %dec_label_pc_35433

dec_label_pc_35433:                               ; preds = %bb, %dec_label_pc_35424
  %v2_35431 = phi i32 [ %v1_35431, %bb ], [ %stack_var_-40.0, %dec_label_pc_35424 ]
  ret i32 %v2_35431

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 1, 0 }
}

define i32 @function_35438() local_unnamed_addr {
dec_label_pc_35438:
  %v0_35439 = load i32, i32* @eax, align 4
  ret i32 %v0_35439
}

define i32 @_Z16WriteCompactSizeI11CHashWriterEvRT_y(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3543a:
  ret i32 %arg3
}

define i32 @function_35450(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35450:
  %eax.global-to-local = alloca i32, align 4
  %v0_35450 = load i32, i32* @ebp, align 4
  %v1_35450 = add i32 %v0_35450, 1
  store i32 %v1_35450, i32* @ebp, align 4
  %v2_35451 = add i32 %v0_35450, -94
  %v3_35451 = inttoptr i32 %v2_35451 to double*
  %v4_35451 = load double, double* %v3_35451, align 4
  %v5_35451 = fpext double %v4_35451 to x86_fp80
  %v6_35451 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_35451 = fsub x86_fp80 %v5_35451, %v6_35451
  store x86_fp80 %v7_35451, x86_fp80* @st0, align 4
  %v0_35454 = load i32, i32* @eax, align 4
  %v1_35454 = trunc i32 %v0_35454 to i8
  %v2_35454 = load i1, i1* @cf, align 1
  %v3_35454 = zext i1 %v2_35454 to i8
  %v4_35454 = add i8 %v3_35454, %v1_35454
  %v22_35454 = zext i8 %v4_35454 to i32
  %v24_35454 = and i32 %v0_35454, -256
  %v25_35454 = or i32 %v22_35454, %v24_35454
  store i32 %v25_35454, i32* %eax.global-to-local, align 4
  %v1_35456 = inttoptr i32 %v25_35454 to i8*
  %v2_35456 = load i8, i8* %v1_35456, align 1
  %v5_35456 = add i8 %v2_35456, %v4_35454
  store i8 %v5_35456, i8* %v1_35456, align 1
  %v0_35458 = load i32, i32* %eax.global-to-local, align 4
  %v1_35458 = load i32, i32* @ebp, align 4
  %v2_35458 = add i32 %v1_35458, -12
  %v3_35458 = inttoptr i32 %v2_35458 to i32*
  store i32 %v0_35458, i32* %v3_35458, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_3545d = load i32, i32* @ebp, align 4
  %v1_3545d = add i32 %v0_3545d, -36
  %v2_3545d = inttoptr i32 %v1_3545d to i32*
  %v3_3545d = load i32, i32* %v2_3545d, align 4
  %v10_3545d = icmp eq i32 %v3_3545d, 0
  br i1 %v10_3545d, label %dec_label_pc_35469, label %dec_label_pc_354b0

dec_label_pc_35469:                               ; preds = %dec_label_pc_35450
  %v1_35469 = add i32 %v0_3545d, -40
  %v2_35469 = inttoptr i32 %v1_35469 to i32*
  %v3_35469 = load i32, i32* %v2_35469, align 4
  %tmp9 = icmp ult i32 %v3_35469, 253
  br i1 %tmp9, label %dec_label_pc_35472, label %dec_label_pc_354b0

dec_label_pc_35472:                               ; preds = %dec_label_pc_35469
  %v1_35475 = trunc i32 %v3_35469 to i8
  %v3_35475 = add i32 %v0_3545d, -13
  %v4_35475 = inttoptr i32 %v3_35475 to i8*
  store i8 %v1_35475, i8* %v4_35475, align 1
  %v0_35480 = load i32, i32* @ebp, align 4
  %v1_35480 = add i32 %v0_35480, -13
  store i32 %v1_35480, i32* %eax.global-to-local, align 4
  %v1_35487 = add i32 %v0_35480, -28
  %v2_35487 = inttoptr i32 %v1_35487 to i32*
  %v3_35487 = load i32, i32* %v2_35487, align 4
  store i32 %v3_35487, i32* %eax.global-to-local, align 4
  %v2_3548d = call i32 @unknown_4519c(i32 %v3_35487, i32 %v1_35480)
  store i32 %v2_3548d, i32* %eax.global-to-local, align 4
  %v0_35492 = call i32 @function_355b2()
  store i32 %v0_35492, i32* %eax.global-to-local, align 4
  ret i32 %v0_35492

dec_label_pc_354b0:                               ; preds = %dec_label_pc_35450, %dec_label_pc_35469
  %v0_35497 = call i32 @unknown_44820()
  %v1_3549e = urem i32 %v0_35497, 65536
  store i32 %v1_3549e, i32* %eax.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v1_354ab = load i32, i32* @ebp, align 4
  %v2_354ab = add i32 %v1_354ab, -36
  %v3_354ab = inttoptr i32 %v2_354ab to i32*
  %v4_354ab = load i32, i32* %v3_354ab, align 4
  %v10_354b0 = icmp eq i32 %v4_354ab, 0
  br i1 %v10_354b0, label %dec_label_pc_354b5, label %bb

dec_label_pc_354b5:                               ; preds = %dec_label_pc_354b0
  %v2_354b5 = add i32 %v1_354ab, -40
  %v3_354b5 = inttoptr i32 %v2_354b5 to i32*
  %v4_354b5 = load i32, i32* %v3_354b5, align 4
  %v10_354b5 = icmp ult i32 %v1_3549e, %v4_354b5
  %v1_354b8 = icmp eq i1 %v10_354b5, false
  br i1 %v1_354b8, label %dec_label_pc_354bf, label %bb

dec_label_pc_354bf:                               ; preds = %dec_label_pc_354b5
  br label %dec_label_pc_354c3

bb:                                               ; preds = %dec_label_pc_354b0, %dec_label_pc_354b5
  %v1_354c1 = call i32 @function_35507()
  store i32 %v1_354c1, i32* %eax.global-to-local, align 4
  %v0_354c3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_354c3

dec_label_pc_354c3:                               ; preds = %dec_label_pc_354bf, %bb
  %v0_354c3 = phi i32 [ %v0_354c3.pre, %bb ], [ %v1_354ab, %dec_label_pc_354bf ]
  %v1_354c3 = add i32 %v0_354c3, -13
  %v2_354c3 = inttoptr i32 %v1_354c3 to i8*
  store i8 ptrtoint (i32* @global_var_fd.2211 to i8), i8* %v2_354c3, align 1
  %v0_354c7 = load i32, i32* @ebp, align 4
  %v1_354c7 = add i32 %v0_354c7, -40
  %v2_354c7 = inttoptr i32 %v1_354c7 to i32*
  %v3_354c7 = load i32, i32* %v2_354c7, align 4
  store i32 %v3_354c7, i32* %eax.global-to-local, align 4
  %v1_354ca = trunc i32 %v3_354c7 to i16
  %v3_354ca = add i32 %v0_354c7, -24
  %v4_354ca = inttoptr i32 %v3_354ca to i16*
  store i16 %v1_354ca, i16* %v4_354ca, align 2
  %v5_354ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_354ca

; uselistorder directives
  uselistorder i32 %v1_3549e, { 1, 0 }
  uselistorder i32 %v3_35469, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 65536, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_354c3, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_354b0, { 1, 0 }
}

define i32 @function_354d2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_354d2:
  %v2_354d2 = load i32, i32* @eax, align 4
  %v4_354d2 = mul i32 %v2_354d2, 2
  %v21_354d2 = inttoptr i32 %v2_354d2 to i32*
  store i32 %v4_354d2, i32* %v21_354d2, align 4
  %v2_354d4 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_354d4 = load i32, i32* @eax, align 4
  %v4_354d4 = trunc i32 %v3_354d4 to i8
  %v5_354d4 = add i8 %v4_354d4, %v2_354d4
  %v21_354d4 = inttoptr i32 %v3_354d4 to i8*
  store i8 %v5_354d4, i8* %v21_354d4, align 1
  %v0_354d6 = load i32, i32* @ebp, align 4
  %v1_354d6 = add i32 %v0_354d6, -13
  %v1_354dd = add i32 %v0_354d6, -28
  %v2_354dd = inttoptr i32 %v1_354dd to i32*
  %v3_354dd = load i32, i32* %v2_354dd, align 4
  %v2_354e3 = call i32 @unknown_4519c(i32 %v3_354dd, i32 %v1_354d6)
  %v0_354f0 = load i32, i32* @ebp, align 4
  %v1_354f0 = add i32 %v0_354f0, -24
  %v1_354f7 = add i32 %v0_354f0, -28
  %v2_354f7 = inttoptr i32 %v1_354f7 to i32*
  %v3_354f7 = load i32, i32* %v2_354f7, align 4
  %v2_354fd = call i32 @unknown_4519c(i32 %v3_354f7, i32 %v1_354f0)
  %v0_35502 = call i32 @function_355b2()
  ret i32 %v0_35502

; uselistorder directives
  uselistorder i32 %v2_354d2, { 1, 0 }
}

define i32 @function_35507() local_unnamed_addr {
dec_label_pc_3551b:
  %edx.global-to-local = alloca i32, align 4
  %v0_35507 = call i32 @unknown_4489b()
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 1, i32* @ecx, align 4
  %v1_35516 = load i32, i32* @ebp, align 4
  %v2_35516 = add i32 %v1_35516, -36
  %v3_35516 = inttoptr i32 %v2_35516 to i32*
  %v4_35516 = load i32, i32* %v3_35516, align 4
  %v10_3551b = icmp eq i32 %v4_35516, 0
  br i1 %v10_3551b, label %dec_label_pc_35520, label %dec_label_pc_35525

dec_label_pc_35520:                               ; preds = %dec_label_pc_3551b
  %v2_35520 = add i32 %v1_35516, -40
  %v3_35520 = inttoptr i32 %v2_35520 to i32*
  %v4_35520 = load i32, i32* %v3_35520, align 4
  %v10_35520 = icmp ult i32 %v0_35507, %v4_35520
  %v1_35523 = icmp eq i1 %v10_35520, false
  br i1 %v1_35523, label %dec_label_pc_3552a, label %dec_label_pc_35525

dec_label_pc_35525:                               ; preds = %dec_label_pc_3551b, %dec_label_pc_35520
  store i32 0, i32* @ecx, align 4
  br label %dec_label_pc_3552a

dec_label_pc_3552a:                               ; preds = %dec_label_pc_35525, %dec_label_pc_35520
  %v0_3552a = phi i1 [ true, %dec_label_pc_35525 ], [ false, %dec_label_pc_35520 ]
  %v1_3556e = add i32 %v1_35516, -13
  %v2_3556e = inttoptr i32 %v1_3556e to i8*
  br i1 %v0_3552a, label %dec_label_pc_3556e, label %dec_label_pc_3552e

dec_label_pc_3552e:                               ; preds = %dec_label_pc_3552a
  store i8 -2, i8* %v2_3556e, align 1
  %v0_35532 = load i32, i32* @ebp, align 4
  %v1_35532 = add i32 %v0_35532, -40
  %v2_35532 = inttoptr i32 %v1_35532 to i32*
  %v3_35532 = load i32, i32* %v2_35532, align 4
  %v2_35535 = add i32 %v0_35532, -24
  %v3_35535 = inttoptr i32 %v2_35535 to i32*
  store i32 %v3_35532, i32* %v3_35535, align 4
  %v0_35540 = load i32, i32* @ebp, align 4
  %v1_35540 = add i32 %v0_35540, -13
  %v1_35547 = add i32 %v0_35540, -28
  %v2_35547 = inttoptr i32 %v1_35547 to i32*
  %v3_35547 = load i32, i32* %v2_35547, align 4
  %v2_3554d = call i32 @unknown_4519c(i32 %v3_35547, i32 %v1_35540)
  %v0_3555a = load i32, i32* @ebp, align 4
  %v1_3555a = add i32 %v0_3555a, -24
  %v1_35561 = add i32 %v0_3555a, -28
  %v2_35561 = inttoptr i32 %v1_35561 to i32*
  %v3_35561 = load i32, i32* %v2_35561, align 4
  %v2_35567 = call i32 @unknown_4519c(i32 %v3_35561, i32 %v1_3555a)
  %v0_3556c = call i32 @function_355b2()
  ret i32 %v0_3556c

dec_label_pc_3556e:                               ; preds = %dec_label_pc_3552a
  store i8 -1, i8* %v2_3556e, align 1
  %v0_35572 = load i32, i32* @ebp, align 4
  %v1_35572 = add i32 %v0_35572, -40
  %v2_35572 = inttoptr i32 %v1_35572 to i32*
  %v3_35572 = load i32, i32* %v2_35572, align 4
  %v1_35575 = add i32 %v0_35572, -36
  %v2_35575 = inttoptr i32 %v1_35575 to i32*
  %v3_35575 = load i32, i32* %v2_35575, align 4
  store i32 %v3_35575, i32* %edx.global-to-local, align 4
  %v2_35578 = add i32 %v0_35572, -24
  %v3_35578 = inttoptr i32 %v2_35578 to i32*
  store i32 %v3_35572, i32* %v3_35578, align 4
  %v0_3557b = load i32, i32* %edx.global-to-local, align 4
  %v1_3557b = load i32, i32* @ebp, align 4
  %v2_3557b = add i32 %v1_3557b, -20
  %v3_3557b = inttoptr i32 %v2_3557b to i32*
  store i32 %v0_3557b, i32* %v3_3557b, align 4
  %v0_35586 = load i32, i32* @ebp, align 4
  %v1_35586 = add i32 %v0_35586, -13
  %v1_3558d = add i32 %v0_35586, -28
  %v2_3558d = inttoptr i32 %v1_3558d to i32*
  %v3_3558d = load i32, i32* %v2_3558d, align 4
  %v2_35593 = call i32 @unknown_4519c(i32 %v3_3558d, i32 %v1_35586)
  %v0_355a0 = load i32, i32* @ebp, align 4
  %v1_355a0 = add i32 %v0_355a0, -24
  %v1_355a7 = add i32 %v0_355a0, -28
  %v2_355a7 = inttoptr i32 %v1_355a7 to i32*
  %v3_355a7 = load i32, i32* %v2_355a7, align 4
  %v2_355ad = call i32 @unknown_4519c(i32 %v3_355a7, i32 %v1_355a0)
  ret i32 %v2_355ad

; uselistorder directives
  uselistorder i8* %v2_3556e, { 1, 0 }
  uselistorder i32 ()* @function_355b2, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @unknown_4519c, { 4, 3, 2, 1, 6, 5, 0 }
  uselistorder label %dec_label_pc_35525, { 1, 0 }
}

define i32 @function_355b2() local_unnamed_addr {
dec_label_pc_355b2:
  %v0_355b2 = load i32, i32* @ebp, align 4
  %v1_355b2 = add i32 %v0_355b2, -12
  %v2_355b2 = inttoptr i32 %v1_355b2 to i32*
  %v3_355b2 = load i32, i32* %v2_355b2, align 4
  %v1_355b5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_355b5 = xor i32 %v1_355b5, %v3_355b2
  %v3_355b5 = icmp eq i32 %v2_355b5, 0
  store i32 %v2_355b5, i32* @eax, align 4
  br i1 %v3_355b5, label %bb, label %dec_label_pc_355be

bb:                                               ; preds = %dec_label_pc_355b2
  %v1_355bc = call i32 @function_355c3()
  br label %dec_label_pc_355be

dec_label_pc_355be:                               ; preds = %bb, %dec_label_pc_355b2
  %v2_355bc = phi i32 [ %v1_355bc, %bb ], [ %v2_355b5, %dec_label_pc_355b2 ]
  ret i32 %v2_355bc
}

declare i32 @__stack_chk_fail.1394() local_unnamed_addr

define i32 @function_355c3() local_unnamed_addr {
dec_label_pc_355c3:
  %v0_355c4 = load i32, i32* @eax, align 4
  ret i32 %v0_355c4
}

define i32 @_Z9SerializeI11CHashWriter5CTxInEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_355c5:
  %v8_35609 = call i32 @unknown_6be79(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3561a

bb:                                               ; preds = %dec_label_pc_355c5
  %v1_35618 = call i32 @function_3561f()
  br label %dec_label_pc_3561a

dec_label_pc_3561a:                               ; preds = %bb, %dec_label_pc_355c5
  %v2_35618 = phi i32 [ %v1_35618, %bb ], [ 0, %dec_label_pc_355c5 ]
  ret i32 %v2_35618

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_3561f() local_unnamed_addr {
dec_label_pc_3561f:
  %v0_35620 = load i32, i32* @eax, align 4
  ret i32 %v0_35620
}

define i32 @_Z9SerializeI11CHashWriter6CTxOutEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_35621:
  %eax.global-to-local = alloca i32, align 4
  %v17_35624 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_35624
}

define i32 @function_35628(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35628:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35628 = load i32, i32* @ebp, align 4
  %v1_35628 = add i32 %v0_35628, 1
  store i32 %v1_35628, i32* %ebp.global-to-local, align 4
  %v0_35629 = load i32, i32* @ecx, align 4
  %v1_35629 = add i32 %v0_35629, 1166795845
  %v2_35629 = inttoptr i32 %v1_35629 to i8*
  %v3_35629 = load i8, i8* %v2_35629, align 1
  %v5_35629 = trunc i32 %v0_35629 to i8
  %v6_35629 = or i8 %v3_35629, %v5_35629
  store i8 %v6_35629, i8* %v2_35629, align 1
  %v0_3562f = load i32, i32* @eax, align 4
  %v2_3562f = or i32 %v0_3562f, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_3562f, i32* %eax.global-to-local, align 4
  %v0_35631 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35631 = add i32 %v0_35631, 1
  %v9_35631 = icmp eq i32 %v1_35631, 0
  store i32 %v1_35631, i32* %ebp.global-to-local, align 4
  %v0_35632 = load i32, i32* @ecx, align 4
  %v1_35632 = add i32 %v0_35632, -1
  store i32 %v1_35632, i32* %ecx.global-to-local, align 4
  %v2_35632 = icmp eq i32 %v1_35632, 0
  %v4_35632 = or i1 %v9_35631, %v2_35632
  br i1 %v4_35632, label %dec_label_pc_35634, label %bb

bb:                                               ; preds = %dec_label_pc_35628
  %v6_35632 = call i32 @__stack_chk_fail.1394()
  store i32 %v6_35632, i32* %eax.global-to-local, align 4
  %v0_35634.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_35635.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_35635.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_35634

dec_label_pc_35634:                               ; preds = %dec_label_pc_35628, %bb
  %v6_35635 = phi i1 [ false, %dec_label_pc_35628 ], [ %v6_35635.pre, %bb ]
  %v30_35635 = phi i32 [ %v1_35632, %dec_label_pc_35628 ], [ %v0_35635.pre, %bb ]
  %v0_35634 = phi i32 [ %v1_35631, %dec_label_pc_35628 ], [ %v0_35634.pre, %bb ]
  %v1_35634 = add i32 %v0_35634, 1
  store i32 %v1_35634, i32* %ebp.global-to-local, align 4
  %v1_35635 = add i32 %v30_35635, 1166793797
  %v2_35635 = inttoptr i32 %v1_35635 to i8*
  %v3_35635 = load i8, i8* %v2_35635, align 1
  %v5_35635 = trunc i32 %v30_35635 to i8
  %v7_35635 = zext i1 %v6_35635 to i8
  %v8_35635 = add i8 %v3_35635, %v5_35635
  %v9_35635 = add i8 %v8_35635, %v7_35635
  %v27_35635 = icmp ule i8 %v9_35635, %v3_35635
  %v28_35635 = icmp ult i8 %v8_35635, %v3_35635
  %v29_35635 = select i1 %v6_35635, i1 %v27_35635, i1 %v28_35635
  store i1 %v29_35635, i1* %cf.global-to-local, align 1
  store i8 %v9_35635, i8* %v2_35635, align 1
  %v0_3563b = load i32, i32* %eax.global-to-local, align 4
  %v1_3563b = trunc i32 %v0_3563b to i8
  %v2_3563b = load i1, i1* %cf.global-to-local, align 1
  %v3_3563b = zext i1 %v2_3563b to i8
  %v4_3563b = add i8 %v1_3563b, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_3563b = add i8 %v4_3563b, %v3_3563b
  %v20_3563b = add i8 %v1_3563b, -119
  %v21_3563b = add i8 %v20_3563b, %v3_3563b
  %v22_3563b = icmp ule i8 %v21_3563b, %v1_3563b
  %v23_3563b = icmp ugt i8 %v1_3563b, 118
  %v24_3563b = select i1 %v2_3563b, i1 %v22_3563b, i1 %v23_3563b
  %v25_3563b = zext i8 %v5_3563b to i32
  %v27_3563b = and i32 %v0_3563b, -256
  %v28_3563b = or i32 %v25_3563b, %v27_3563b
  store i32 %v28_3563b, i32* %eax.global-to-local, align 4
  %v0_3563d = load i32, i32* %ebp.global-to-local, align 4
  %v1_3563d = add i32 %v0_3563d, 1
  store i32 %v1_3563d, i32* @ebp, align 4
  %v2_3563e = add i32 %v0_3563d, -94
  %v3_3563e = inttoptr i32 %v2_3563e to float*
  %v4_3563e = load float, float* %v3_3563e, align 4
  %v5_3563e = fpext float %v4_3563e to x86_fp80
  %v6_3563e = load x86_fp80, x86_fp80* @st0, align 4
  %v7_3563e = fsub x86_fp80 %v5_3563e, %v6_3563e
  store x86_fp80 %v7_3563e, x86_fp80* @st0, align 4
  %v3_35641 = zext i1 %v24_3563b to i8
  %v4_35641 = add i8 %v3_35641, %v5_3563b
  %v19_35641 = icmp ule i8 %v4_35641, %v5_3563b
  %v21_35641 = icmp eq i1 %v24_3563b, %v19_35641
  store i1 %v21_35641, i1* %cf.global-to-local, align 1
  %v22_35641 = zext i8 %v4_35641 to i32
  %v25_35641 = or i32 %v22_35641, %v27_3563b
  store i32 %v25_35641, i32* %eax.global-to-local, align 4
  %v1_35643 = inttoptr i32 %v25_35641 to i8*
  %v2_35643 = load i8, i8* %v1_35643, align 1
  %v5_35643 = add i8 %v2_35643, %v4_35641
  store i8 %v5_35643, i8* %v1_35643, align 1
  %v0_35645 = load i32, i32* %eax.global-to-local, align 4
  %v1_35645 = load i32, i32* @ebp, align 4
  %v2_35645 = add i32 %v1_35645, -12
  %v3_35645 = inttoptr i32 %v2_35645 to i32*
  store i32 %v0_35645, i32* %v3_35645, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_3564a = load i32, i32* @ebp, align 4
  %v1_3564a = add i32 %v0_3564a, -40
  %v2_3564a = inttoptr i32 %v1_3564a to i32*
  %v3_3564a = load i32, i32* %v2_3564a, align 4
  store i32 %v3_3564a, i32* %eax.global-to-local, align 4
  %v1_35651 = add i32 %v0_3564a, -36
  %v2_35651 = inttoptr i32 %v1_35651 to i32*
  %v3_35651 = load i32, i32* %v2_35651, align 4
  store i32 %v3_35651, i32* %eax.global-to-local, align 4
  %v1_35658 = add i32 %v0_3564a, -28
  %v2_35658 = inttoptr i32 %v1_35658 to i32*
  %v3_35658 = load i32, i32* %v2_35658, align 4
  store i32 %v3_35658, i32* %eax.global-to-local, align 4
  %v1_3565f = add i32 %v0_3564a, -32
  %v2_3565f = inttoptr i32 %v1_3565f to i32*
  %v3_3565f = load i32, i32* %v2_3565f, align 4
  store i32 %v3_3565f, i32* %eax.global-to-local, align 4
  %v4_35665 = call i32 @unknown_6bfa9(i32 %v3_3565f, i32 %v3_35658, i32 %v3_35651, i32 %v3_3564a)
  store i32 %v4_35665, i32* %eax.global-to-local, align 4
  %v0_3566a = load i32, i32* @ebp, align 4
  %v1_3566a = add i32 %v0_3566a, -12
  %v2_3566a = inttoptr i32 %v1_3566a to i32*
  %v3_3566a = load i32, i32* %v2_3566a, align 4
  store i32 %v3_3566a, i32* %eax.global-to-local, align 4
  %v1_3566d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3566d = xor i32 %v1_3566d, %v3_3566a
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3566d = icmp eq i32 %v2_3566d, 0
  store i32 %v2_3566d, i32* @eax, align 4
  br i1 %v3_3566d, label %bb12, label %dec_label_pc_35676

bb12:                                             ; preds = %dec_label_pc_35634
  %v1_35674 = call i32 @function_3567b()
  store i32 %v1_35674, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_35676

dec_label_pc_35676:                               ; preds = %bb12, %dec_label_pc_35634
  %v2_35674 = phi i32 [ %v1_35674, %bb12 ], [ %v2_3566d, %dec_label_pc_35634 ]
  ret i32 %v2_35674

; uselistorder directives
  uselistorder i32 %v0_3564a, { 1, 0, 2, 3 }
  uselistorder i8 %v4_35641, { 0, 2, 1 }
  uselistorder i8 %v5_3563b, { 1, 0, 2 }
  uselistorder i8 %v9_35635, { 1, 0 }
  uselistorder i8 %v8_35635, { 1, 0 }
  uselistorder i8 %v3_35635, { 1, 2, 0 }
  uselistorder i32 %v30_35635, { 1, 0 }
  uselistorder i1 %v6_35635, { 1, 0 }
  uselistorder i32 %v1_35632, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 13 }
  uselistorder label %dec_label_pc_35634, { 1, 0 }
}

define i32 @function_3567b() local_unnamed_addr {
dec_label_pc_3567b:
  %v0_3567c = load i32, i32* @eax, align 4
  ret i32 %v0_3567c
}

define i32 @_ZNK5boost6tuples4consISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEE8get_tailEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3567e:
  %v1_35698 = add i32 %arg1, 12
  store i32 %v1_35698, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_356a7

bb:                                               ; preds = %dec_label_pc_3567e
  %v2_356a5 = call i32 @function_356ac(i32 %arg1)
  br label %dec_label_pc_356a7

dec_label_pc_356a7:                               ; preds = %bb, %dec_label_pc_3567e
  %v3_356a5 = phi i32 [ %v2_356a5, %bb ], [ %v1_35698, %dec_label_pc_3567e ]
  ret i32 %v3_356a5
}

define i32 @function_356ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_356ac:
  %v0_356ad = load i32, i32* @eax, align 4
  ret i32 %v0_356ad
}

define i32 @_ZN5boost6tuples6detail2ltINS0_4consI7CPubKeyNS0_9null_typeEEES6_EEbRKT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_356ae:
  %v1_356d2 = call i32 @unknown_6c112(i32 %arg2)
  ret i32 %arg1
}

define i32 @function_356dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_356dc:
  %v0_356dc = load i32, i32* @eax, align 4
  %v1_356df = call i32 @unknown_6c112(i32 %v0_356dc)
  %v0_356e4 = load i32, i32* @ebx, align 4
  %v2_356eb = call i32 @unknown_4589c(i32 %v1_356df, i32 %v0_356e4)
  %v4_356f0 = trunc i32 %v2_356eb to i8
  %v5_356f0 = icmp eq i8 %v4_356f0, 0
  %v1_356f2 = icmp eq i1 %v5_356f0, false
  br i1 %v1_356f2, label %dec_label_pc_3576b, label %dec_label_pc_356f4

dec_label_pc_356f4:                               ; preds = %dec_label_pc_356dc
  %v0_356f4 = load i32, i32* @ebp, align 4
  %v1_356f4 = add i32 %v0_356f4, -28
  %v2_356f4 = inttoptr i32 %v1_356f4 to i32*
  %v3_356f4 = load i32, i32* %v2_356f4, align 4
  %v1_356fa = call i32 @unknown_6c112(i32 %v3_356f4)
  store i32 %v1_356fa, i32* @ebx, align 4
  %v0_35701 = load i32, i32* @ebp, align 4
  %v1_35701 = add i32 %v0_35701, -32
  %v2_35701 = inttoptr i32 %v1_35701 to i32*
  %v3_35701 = load i32, i32* %v2_35701, align 4
  %v1_35707 = call i32 @unknown_6c112(i32 %v3_35701)
  %v0_3570c = load i32, i32* @ebx, align 4
  %v2_35713 = call i32 @unknown_4589c(i32 %v1_35707, i32 %v0_3570c)
  %v1_35718 = xor i32 %v2_35713, 1
  %v4_35718 = trunc i32 %v1_35718 to i8
  %v5_3571b = icmp eq i8 %v4_35718, 0
  br i1 %v5_3571b, label %dec_label_pc_35766, label %dec_label_pc_3571f

dec_label_pc_3571f:                               ; preds = %dec_label_pc_356f4
  %v0_3571f = load i32, i32* @ebp, align 4
  %v1_3571f = add i32 %v0_3571f, -33
  %v1_35722 = add i32 %v0_3571f, -32
  %v2_35722 = inttoptr i32 %v1_35722 to i32*
  %v3_35722 = load i32, i32* %v2_35722, align 4
  %v2_3572c = call i32 @unknown_6c0dc(i32 %v1_3571f, i32 %v3_35722)
  %v0_35734 = load i32, i32* @ebp, align 4
  %v1_35734 = add i32 %v0_35734, -33
  %v1_35737 = add i32 %v0_35734, -28
  %v2_35737 = inttoptr i32 %v1_35737 to i32*
  %v3_35737 = load i32, i32* %v2_35737, align 4
  %v2_35741 = call i32 @unknown_6c0dc(i32 %v1_35734, i32 %v3_35737)
  %v0_35749 = load i32, i32* @ebp, align 4
  %v1_35749 = add i32 %v0_35749, -13
  %v1_35750 = add i32 %v0_35749, -14
  %v2_35756 = call i32 @unknown_44e99(i32 %v1_35750, i32 %v1_35749)
  %v4_3575b = trunc i32 %v2_35756 to i8
  %v5_3575b = icmp eq i8 %v4_3575b, 0
  br i1 %v5_3575b, label %dec_label_pc_35766, label %dec_label_pc_3576b

dec_label_pc_35766:                               ; preds = %dec_label_pc_3571f, %dec_label_pc_356f4
  br label %dec_label_pc_3576b

dec_label_pc_3576b:                               ; preds = %dec_label_pc_356dc, %dec_label_pc_3571f, %dec_label_pc_35766
  %storemerge = phi i32 [ 0, %dec_label_pc_35766 ], [ 1, %dec_label_pc_3571f ], [ 1, %dec_label_pc_356dc ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_3576b = load i32, i32* @ebp, align 4
  %v1_3576b = add i32 %v0_3576b, -12
  %v2_3576b = inttoptr i32 %v1_3576b to i32*
  %v3_3576b = load i32, i32* %v2_3576b, align 4
  %v1_3576e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3576e = icmp eq i32 %v1_3576e, %v3_3576b
  br i1 %v3_3576e, label %bb, label %dec_label_pc_35777

bb:                                               ; preds = %dec_label_pc_3576b
  %v1_35775 = call i32 @function_3577c()
  br label %dec_label_pc_35777

dec_label_pc_35777:                               ; preds = %bb, %dec_label_pc_3576b
  %v2_35775 = phi i32 [ %v1_35775, %bb ], [ %storemerge, %dec_label_pc_3576b ]
  ret i32 %v2_35775

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_6c0dc, { 1, 0 }
  uselistorder i32 -33, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @unknown_4589c, { 1, 0 }
  uselistorder i32 (i32)* @unknown_6c112, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_3576b, { 2, 1, 0 }
}

define i32 @function_3577c() local_unnamed_addr {
dec_label_pc_3577c:
  %v0_3577c = load i32, i32* @ebp, align 4
  %v1_3577c = add i32 %v0_3577c, -4
  %v2_3577c = inttoptr i32 %v1_3577c to i32*
  %v3_3577c = load i32, i32* %v2_3577c, align 4
  store i32 %v3_3577c, i32* @ebx, align 4
  %v0_35780 = load i32, i32* @eax, align 4
  ret i32 %v0_35780

; uselistorder directives
  uselistorder i32 -4, { 42, 46, 1, 37, 27, 40, 31, 2, 0, 3, 4, 5, 33, 6, 7, 43, 44, 28, 8, 9, 10, 11, 12, 13, 14, 15, 16, 41, 39, 29, 30, 26, 32, 34, 17, 18, 19, 35, 36, 38, 20, 21, 22, 45, 23, 24, 25 }
}

define i32 @_ZNK5boost6tuples4consISt6vectorIhSaIhEENS1_I7CPubKeyNS0_9null_typeEEEE8get_headEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_35782:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_357a8

bb:                                               ; preds = %dec_label_pc_35782
  %v2_357a6 = call i32 @function_357ad(i32 %arg1)
  br label %dec_label_pc_357a8

dec_label_pc_357a8:                               ; preds = %bb, %dec_label_pc_35782
  %v3_357a6 = phi i32 [ %v2_357a6, %bb ], [ %arg1, %dec_label_pc_35782 ]
  ret i32 %v3_357a6
}

define i32 @function_357ad(i32 %arg1) local_unnamed_addr {
dec_label_pc_357ad:
  %v0_357ae = load i32, i32* @eax, align 4
  ret i32 %v0_357ae
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6tuples5tupleI7uint256St6vectorIhSaIhEE7CPubKeyNS3_9null_typeESA_SA_SA_SA_SA_SA_EEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_357b0:
  store i32 33554431, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_357d8

bb:                                               ; preds = %dec_label_pc_357b0
  %v2_357d6 = call i32 @function_357dd(i32 %arg1)
  br label %dec_label_pc_357d8

dec_label_pc_357d8:                               ; preds = %bb, %dec_label_pc_357b0
  %v3_357d6 = phi i32 [ %v2_357d6, %bb ], [ 33554431, %dec_label_pc_357b0 ]
  ret i32 %v3_357d6
}

define i32 @function_357dd(i32 %arg1) local_unnamed_addr {
dec_label_pc_357dd:
  %v0_357de = load i32, i32* @eax, align 4
  ret i32 %v0_357de
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIK10txnouttype7CScriptEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_357e0:
  store i32 134217727, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35808

bb:                                               ; preds = %dec_label_pc_357e0
  %v2_35806 = call i32 @function_3580d(i32 %arg1)
  br label %dec_label_pc_35808

dec_label_pc_35808:                               ; preds = %bb, %dec_label_pc_357e0
  %v3_35806 = phi i32 [ %v2_35806, %bb ], [ 134217727, %dec_label_pc_357e0 ]
  ret i32 %v3_35806
}

define i32 @function_3580d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3580d:
  %v0_3580e = load i32, i32* @eax, align 4
  ret i32 %v0_3580e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv14CNoDestinationEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_3580f:
  %eax.global-to-local = alloca i32, align 4
  %v2_35810 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_35810
}

define i32 @function_35871() local_unnamed_addr {
dec_label_pc_35871:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35871 = load i32, i32* %ecx.global-to-local, align 4
  %v1_35871 = add i32 %v0_35871, -1
  store i32 %v1_35871, i32* %ecx.global-to-local, align 4
  %v0_35873 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35873
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv6CKeyIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35874:
  ret i32 %arg2
}

define i32 @function_35884(i32 %arg1) local_unnamed_addr {
dec_label_pc_35884:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35884 = load i32, i32* @ebp, align 4
  %v0_35885 = load i32, i32* @ecx, align 4
  %v1_35885 = add i32 %v0_35885, -1
  store i32 %v1_35885, i32* %ecx.global-to-local, align 4
  %v1_35887 = add i32 %v0_35884, 2
  store i32 %v1_35887, i32* %ebp.global-to-local, align 4
  %v1_35888 = add i32 %v0_35885, 1166793796
  %v2_35888 = inttoptr i32 %v1_35888 to i8*
  %v3_35888 = load i8, i8* %v2_35888, align 1
  %v5_35888 = trunc i32 %v1_35885 to i8
  %v6_35888 = load i1, i1* @cf, align 1
  %v7_35888 = zext i1 %v6_35888 to i8
  %v8_35888 = add i8 %v3_35888, %v5_35888
  %v9_35888 = add i8 %v7_35888, %v8_35888
  %v27_35888 = icmp ule i8 %v9_35888, %v3_35888
  %v28_35888 = icmp ult i8 %v8_35888, %v3_35888
  %v29_35888 = select i1 %v6_35888, i1 %v27_35888, i1 %v28_35888
  store i1 %v29_35888, i1* %cf.global-to-local, align 1
  store i8 %v9_35888, i8* %v2_35888, align 1
  %v0_3588e = load i32, i32* @eax, align 4
  %v1_3588e = trunc i32 %v0_3588e to i8
  %v2_3588e = load i1, i1* %cf.global-to-local, align 1
  %v3_3588e = zext i1 %v2_3588e to i8
  %v4_3588e = add i8 %v1_3588e, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_3588e = add i8 %v4_3588e, %v3_3588e
  %v20_3588e = add i8 %v1_3588e, -119
  %v21_3588e = add i8 %v20_3588e, %v3_3588e
  %v22_3588e = icmp ule i8 %v21_3588e, %v1_3588e
  %v23_3588e = icmp ugt i8 %v1_3588e, 118
  %v24_3588e = select i1 %v2_3588e, i1 %v22_3588e, i1 %v23_3588e
  store i1 %v24_3588e, i1* %cf.global-to-local, align 1
  %v25_3588e = zext i8 %v5_3588e to i32
  %v27_3588e = and i32 %v0_3588e, -256
  %v28_3588e = or i32 %v25_3588e, %v27_3588e
  store i32 %v28_3588e, i32* %eax.global-to-local, align 4
  %v0_35890 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35890 = add i32 %v0_35890, 1
  store i32 %v1_35890, i32* @ebp, align 4
  %v1_35895 = add i32 %v28_3588e, -1587161275
  %v2_35895 = inttoptr i32 %v1_35895 to i8*
  %v3_35895 = load i8, i8* %v2_35895, align 1
  %v4_35895 = load i32, i32* %ecx.global-to-local, align 4
  %v5_35895 = trunc i32 %v4_35895 to i8
  %v7_35895 = zext i1 %v24_3588e to i8
  %v8_35895 = sub i8 %v3_35895, %v5_35895
  %v9_35895 = add i8 %v8_35895, %v7_35895
  %v19_35895 = sub i8 %v8_35895, %v7_35895
  %v20_35895 = icmp ult i8 %v3_35895, %v19_35895
  %v21_35895 = icmp ne i8 %v5_35895, -1
  %v22_35895 = or i1 %v21_35895, %v20_35895
  %v23_35895 = icmp ult i8 %v3_35895, %v5_35895
  %v24_35895 = select i1 %v24_3588e, i1 %v22_35895, i1 %v23_35895
  store i1 %v24_35895, i1* %cf.global-to-local, align 1
  store i8 %v9_35895, i8* %v2_35895, align 1
  %v0_3589b = load i32, i32* %eax.global-to-local, align 4
  %v1_3589b = trunc i32 %v0_3589b to i8
  %v2_3589b = load i1, i1* %cf.global-to-local, align 1
  %v3_3589b = zext i1 %v2_3589b to i8
  %v4_3589b = add i8 %v3_3589b, %v1_3589b
  %v19_3589b = icmp ule i8 %v4_3589b, %v1_3589b
  %v21_3589b = icmp eq i1 %v2_3589b, %v19_3589b
  store i1 %v21_3589b, i1* %cf.global-to-local, align 1
  %v22_3589b = zext i8 %v4_3589b to i32
  %v24_3589b = and i32 %v0_3589b, -256
  %v25_3589b = or i32 %v22_3589b, %v24_3589b
  store i32 %v25_3589b, i32* %eax.global-to-local, align 4
  %v1_3589d = inttoptr i32 %v25_3589b to i8*
  %v2_3589d = load i8, i8* %v1_3589d, align 1
  %v5_3589d = add i8 %v2_3589d, %v4_3589b
  store i8 %v5_3589d, i8* %v1_3589d, align 1
  %v0_3589f = load i32, i32* %eax.global-to-local, align 4
  %v1_3589f = load i32, i32* @ebp, align 4
  %v2_3589f = add i32 %v1_3589f, -12
  %v3_3589f = inttoptr i32 %v2_3589f to i32*
  store i32 %v0_3589f, i32* %v3_3589f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_358a4 = load i32, i32* @ebp, align 4
  %v1_358a4 = add i32 %v0_358a4, -36
  %v2_358a4 = inttoptr i32 %v1_358a4 to i32*
  %v3_358a4 = load i32, i32* %v2_358a4, align 4
  store i32 %v3_358a4, i32* %eax.global-to-local, align 4
  %v1_358aa = call i32 @unknown_6bb7b(i32 %v3_358a4)
  store i32 %v1_358aa, i32* %eax.global-to-local, align 4
  %v0_358bb = load i32, i32* @ebp, align 4
  %v1_358bb = add i32 %v0_358bb, -32
  %v2_358bb = inttoptr i32 %v1_358bb to i32*
  %v3_358bb = load i32, i32* %v2_358bb, align 4
  store i32 %v3_358bb, i32* %eax.global-to-local, align 4
  %v3_358c1 = call i32 @unknown_6c350(i32 %v3_358bb, i32 %v1_358aa, i32 1)
  store i32 %v3_358c1, i32* %eax.global-to-local, align 4
  ret i32 %v3_358c1

; uselistorder directives
  uselistorder i8 %v4_3589b, { 0, 2, 1 }
  uselistorder i8 %v1_3589b, { 1, 0 }
  uselistorder i8 %v8_35895, { 1, 0 }
  uselistorder i8 %v7_35895, { 1, 0 }
  uselistorder i8 %v5_35895, { 1, 0, 2 }
  uselistorder i1 %v24_3588e, { 1, 0, 2 }
  uselistorder i8 %v9_35888, { 1, 0 }
  uselistorder i8 %v8_35888, { 1, 0 }
  uselistorder i8 %v3_35888, { 1, 2, 0 }
}

define i32 @function_358ca(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_358ca:
  %v0_358ca = load i32, i32* @edx, align 4
  %v1_358ca = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_358ca = icmp eq i32 %v1_358ca, %v0_358ca
  br i1 %v3_358ca, label %bb, label %dec_label_pc_358ca.dec_label_pc_358d2_crit_edge

dec_label_pc_358ca.dec_label_pc_358d2_crit_edge:  ; preds = %dec_label_pc_358ca
  %v2_358d0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_358d2

bb:                                               ; preds = %dec_label_pc_358ca
  %v1_358d0 = call i32 @function_358d7()
  br label %dec_label_pc_358d2

dec_label_pc_358d2:                               ; preds = %dec_label_pc_358ca.dec_label_pc_358d2_crit_edge, %bb
  %v2_358d0 = phi i32 [ %v2_358d0.pre, %dec_label_pc_358ca.dec_label_pc_358d2_crit_edge ], [ %v1_358d0, %bb ]
  ret i32 %v2_358d0

; uselistorder directives
  uselistorder label %dec_label_pc_358d2, { 1, 0 }
}

define i32 @function_358d7() local_unnamed_addr {
dec_label_pc_358d7:
  %v0_358d8 = load i32, i32* @eax, align 4
  ret i32 %v0_358d8
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK22CKeyStoreIsMineVisitorEEPKv9CScriptIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_358d9:
  %v1_3590f = call i32 @unknown_6bc7b(i32 %arg3)
  %v3_35926 = call i32 @unknown_6c3ff(i32 %arg2, i32 %v1_3590f, i32 1)
  store i32 %v3_35926, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35937

bb:                                               ; preds = %dec_label_pc_358d9
  %v1_35935 = call i32 @function_3593c()
  br label %dec_label_pc_35937

dec_label_pc_35937:                               ; preds = %bb, %dec_label_pc_358d9
  %v2_35935 = phi i32 [ %v1_35935, %bb ], [ %v3_35926, %dec_label_pc_358d9 ]
  ret i32 %v2_35935
}

define i32 @function_3593c() local_unnamed_addr {
dec_label_pc_3593c:
  %v0_3593d = load i32, i32* @eax, align 4
  ret i32 %v0_3593d
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPv14CNoDestinationNS_7variantIS9_S5_9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i() local_unnamed_addr {
dec_label_pc_3593e:
  %eax.global-to-local = alloca i32, align 4
  %v2_3593f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_3593f
}

define i32 @function_35942(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35942:
  %v0_35944 = load i32, i32* @ebp, align 4
  %v1_35944 = add i32 %v0_35944, 8
  %v2_35944 = inttoptr i32 %v1_35944 to i32*
  %v3_35944 = load i32, i32* %v2_35944, align 4
  %v2_35947 = add i32 %v0_35944, -28
  %v3_35947 = inttoptr i32 %v2_35947 to i32*
  store i32 %v3_35944, i32* %v3_35947, align 4
  %v0_3594a = load i32, i32* @ebp, align 4
  %v1_3594a = add i32 %v0_3594a, 12
  %v2_3594a = inttoptr i32 %v1_3594a to i32*
  %v3_3594a = load i32, i32* %v2_3594a, align 4
  %v2_3594d = add i32 %v0_3594a, -32
  %v3_3594d = inttoptr i32 %v2_3594d to i32*
  store i32 %v3_3594a, i32* %v3_3594d, align 4
  %v0_35950 = load i32, i32* @ebp, align 4
  %v1_35950 = add i32 %v0_35950, 16
  %v2_35950 = inttoptr i32 %v1_35950 to i32*
  %v3_35950 = load i32, i32* %v2_35950, align 4
  %v2_35953 = add i32 %v0_35950, -36
  %v3_35953 = inttoptr i32 %v2_35953 to i32*
  store i32 %v3_35950, i32* %v3_35953, align 4
  %v0_35956 = load i32, i32* @ebp, align 4
  %v1_35956 = add i32 %v0_35956, 20
  %v2_35956 = inttoptr i32 %v1_35956 to i32*
  %v3_35956 = load i32, i32* %v2_35956, align 4
  %v2_35959 = add i32 %v0_35956, -40
  %v3_35959 = inttoptr i32 %v2_35959 to i32*
  store i32 %v3_35956, i32* %v3_35959, align 4
  %v0_3595c = load i32, i32* @ebp, align 4
  %v1_3595c = add i32 %v0_3595c, 24
  %v2_3595c = inttoptr i32 %v1_3595c to i8*
  %v3_3595c = load i8, i8* %v2_3595c, align 1
  %v3_35960 = add i32 %v0_3595c, -41
  %v4_35960 = inttoptr i32 %v3_35960 to i8*
  store i8 %v3_3595c, i8* %v4_35960, align 1
  %v0_35963 = load i32, i32* @ebp, align 4
  %v1_35963 = add i32 %v0_35963, 28
  %v2_35963 = inttoptr i32 %v1_35963 to i32*
  %v3_35963 = load i32, i32* %v2_35963, align 4
  %v2_35966 = add i32 %v0_35963, -48
  %v3_35966 = inttoptr i32 %v2_35966 to i32*
  store i32 %v3_35963, i32* %v3_35966, align 4
  %v0_35969 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3596f = load i32, i32* @ebp, align 4
  %v2_3596f = add i32 %v1_3596f, -12
  %v3_3596f = inttoptr i32 %v2_3596f to i32*
  store i32 %v0_35969, i32* %v3_3596f, align 4
  %v0_35974 = load i32, i32* @edx, align 4
  %v0_35978 = load i32, i32* @ebp, align 4
  %v1_35978 = add i32 %v0_35978, -40
  %v2_35978 = inttoptr i32 %v1_35978 to i32*
  %v3_35978 = load i32, i32* %v2_35978, align 4
  %v1_3597f = add i32 %v0_35978, -36
  %v2_3597f = inttoptr i32 %v1_3597f to i32*
  %v3_3597f = load i32, i32* %v2_3597f, align 4
  %v1_35986 = add i32 %v0_35978, -32
  %v2_35986 = inttoptr i32 %v1_35986 to i32*
  %v3_35986 = load i32, i32* %v2_35986, align 4
  %v1_3598d = add i32 %v0_35978, -28
  %v2_3598d = inttoptr i32 %v1_3598d to i32*
  %v3_3598d = load i32, i32* %v2_3598d, align 4
  %sext = mul i32 %v0_35974, 16777216
  %v5_35993 = sdiv i32 %sext, 16777216
  %v6_35993 = call i32 @unknown_6c4ae(i32 %v3_3598d, i32 %v3_35986, i32 %v3_3597f, i32 %v3_35978, i32 %v5_35993)
  store i32 %v6_35993, i32* @eax, align 4
  %v0_35998 = load i32, i32* @ebp, align 4
  %v1_35998 = add i32 %v0_35998, -12
  %v2_35998 = inttoptr i32 %v1_35998 to i32*
  %v3_35998 = load i32, i32* %v2_35998, align 4
  %v1_3599b = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3599b = xor i32 %v1_3599b, %v3_35998
  %v3_3599b = icmp eq i32 %v2_3599b, 0
  store i32 %v2_3599b, i32* @edx, align 4
  br i1 %v3_3599b, label %bb, label %dec_label_pc_359a4

bb:                                               ; preds = %dec_label_pc_35942
  %v1_359a2 = call i32 @function_359a9()
  br label %dec_label_pc_359a4

dec_label_pc_359a4:                               ; preds = %bb, %dec_label_pc_35942
  %v3_359a2 = phi i32 [ %v1_359a2, %bb ], [ %v6_35993, %dec_label_pc_35942 ]
  ret i32 %v3_359a2

; uselistorder directives
  uselistorder i32 %v0_35978, { 1, 0, 2, 3 }
}

define i32 @function_359a9() local_unnamed_addr {
dec_label_pc_359a9:
  %v0_359aa = load i32, i32* @eax, align 4
  ret i32 %v0_359aa
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPvS5_NS_7variantI14CNoDestinationS5_9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_359ab:
  %edx.global-to-local = alloca i32, align 4
  %v0_359e1 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_359e1, 16777216
  %v5_35a00 = sdiv i32 %sext, 16777216
  %v6_35a00 = call i32 @unknown_6c580(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35a00)
  store i32 0, i32* %edx.global-to-local, align 4
  ret i32 %v6_35a00
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPv9CScriptIDNS_7variantI14CNoDestinationS5_S9_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35a18:
  %edx.global-to-local = alloca i32, align 4
  %v0_35a4e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_35a4e, 16777216
  %v5_35a6d = sdiv i32 %sext, 16777216
  %v6_35a6d = call i32 @unknown_6c652(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35a6d)
  store i32 %v6_35a6d, i32* @eax, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br i1 true, label %bb, label %dec_label_pc_35a7e

bb:                                               ; preds = %dec_label_pc_35a18
  %v1_35a7c = call i32 @function_35a83()
  br label %dec_label_pc_35a7e

dec_label_pc_35a7e:                               ; preds = %bb, %dec_label_pc_35a18
  %v2_35a7c = phi i32 [ %v1_35a7c, %bb ], [ %v6_35a6d, %dec_label_pc_35a18 ]
  ret i32 %v2_35a7c
}

define i32 @function_35a83() local_unnamed_addr {
dec_label_pc_35a83:
  %v4_35a83 = load i32, i32* @eax, align 4
  ret i32 %v4_35a83
}

define i32 @function_35a84() local_unnamed_addr {
dec_label_pc_35a84:
  %v0_35a84 = load i32, i32* @eax, align 4
  ret i32 %v0_35a84
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPvNS_7variantI14CNoDestinationS5_9CScriptIDNS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35a85:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPvNS_7variantI14CNoDestinationSE_9CScriptIDNS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_35adf:
  %v4_35afd = zext i8 %arg5 to i32
  ret i32 %v4_35afd
}

define i32 @function_35b06() local_unnamed_addr {
dec_label_pc_35b06:
  %v0_35b06 = load i32, i32* @ebp, align 4
  %v1_35b09 = add i32 %v0_35b06, 2
  store i32 %v1_35b09, i32* @ebp, align 4
  %v1_35b0b = add i32 %v0_35b06, 34
  %v2_35b0b = inttoptr i32 %v1_35b0b to i32*
  %v3_35b0b = load i32, i32* %v2_35b0b, align 4
  %v2_35b0e = add i32 %v0_35b06, -46
  %v3_35b0e = inttoptr i32 %v2_35b0e to i32*
  store i32 %v3_35b0b, i32* %v3_35b0e, align 4
  %v0_35b11 = load i32, i32* @ebp, align 4
  %v1_35b11 = add i32 %v0_35b11, 36
  %v2_35b11 = inttoptr i32 %v1_35b11 to i32*
  %v3_35b11 = load i32, i32* %v2_35b11, align 4
  %v2_35b14 = add i32 %v0_35b11, -52
  %v3_35b14 = inttoptr i32 %v2_35b14 to i32*
  store i32 %v3_35b11, i32* %v3_35b14, align 4
  %v0_35b17 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_35b1d = load i32, i32* @ebp, align 4
  %v2_35b1d = add i32 %v1_35b1d, -12
  %v3_35b1d = inttoptr i32 %v2_35b1d to i32*
  store i32 %v0_35b17, i32* %v3_35b1d, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPv14CNoDestinationNS_7variantIS5_6CKeyID9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35b46:
  ret i32 %arg6
}

define i32 @function_35b70(i32 %arg1) local_unnamed_addr {
dec_label_pc_35b70:
  %eax.global-to-local = alloca i32, align 4
  %v0_35b70 = load i32, i32* @ebp, align 4
  %v1_35b70 = add i32 %v0_35b70, -95
  %v2_35b70 = inttoptr i32 %v1_35b70 to i8*
  %v3_35b70 = load i8, i8* %v2_35b70, align 1
  %v5_35b70 = mul i8 %v3_35b70, 2
  store i8 %v5_35b70, i8* %v2_35b70, align 1
  %v16_35b70 = icmp slt i8 %v3_35b70, 0
  %v0_35b73 = load i32, i32* @eax, align 4
  %v1_35b73 = trunc i32 %v0_35b73 to i8
  %v3_35b73 = zext i1 %v16_35b70 to i8
  %v4_35b73 = add i8 %v1_35b73, %v3_35b73
  %v22_35b73 = zext i8 %v4_35b73 to i32
  %v24_35b73 = and i32 %v0_35b73, -256
  %v25_35b73 = or i32 %v22_35b73, %v24_35b73
  store i32 %v25_35b73, i32* %eax.global-to-local, align 4
  %v1_35b75 = inttoptr i32 %v25_35b73 to i8*
  %v2_35b75 = load i8, i8* %v1_35b75, align 1
  %v5_35b75 = add i8 %v2_35b75, %v4_35b73
  store i8 %v5_35b75, i8* %v1_35b75, align 1
  %v0_35b77 = load i32, i32* %eax.global-to-local, align 4
  %v1_35b77 = load i32, i32* @ebp, align 4
  %v2_35b77 = add i32 %v1_35b77, -12
  %v3_35b77 = inttoptr i32 %v2_35b77 to i32*
  store i32 %v0_35b77, i32* %v3_35b77, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_35b7c = load i32, i32* @edx, align 4
  %v0_35b80 = load i32, i32* @ebp, align 4
  %v1_35b80 = add i32 %v0_35b80, -40
  %v2_35b80 = inttoptr i32 %v1_35b80 to i32*
  %v3_35b80 = load i32, i32* %v2_35b80, align 4
  store i32 %v3_35b80, i32* %eax.global-to-local, align 4
  %v1_35b87 = add i32 %v0_35b80, -36
  %v2_35b87 = inttoptr i32 %v1_35b87 to i32*
  %v3_35b87 = load i32, i32* %v2_35b87, align 4
  store i32 %v3_35b87, i32* %eax.global-to-local, align 4
  %v1_35b8e = add i32 %v0_35b80, -32
  %v2_35b8e = inttoptr i32 %v1_35b8e to i32*
  %v3_35b8e = load i32, i32* %v2_35b8e, align 4
  store i32 %v3_35b8e, i32* %eax.global-to-local, align 4
  %v1_35b95 = add i32 %v0_35b80, -28
  %v2_35b95 = inttoptr i32 %v1_35b95 to i32*
  %v3_35b95 = load i32, i32* %v2_35b95, align 4
  store i32 %v3_35b95, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_35b7c, 16777216
  %v5_35b9b = sdiv i32 %sext, 16777216
  %v6_35b9b = call i32 @unknown_6c7e5(i32 %v3_35b95, i32 %v3_35b8e, i32 %v3_35b87, i32 %v3_35b80, i32 %v5_35b9b)
  store i32 %v6_35b9b, i32* %eax.global-to-local, align 4
  %v0_35ba0 = load i32, i32* @ebp, align 4
  %v1_35ba0 = add i32 %v0_35ba0, -12
  %v2_35ba0 = inttoptr i32 %v1_35ba0 to i32*
  %v3_35ba0 = load i32, i32* %v2_35ba0, align 4
  store i32 %v3_35ba0, i32* %eax.global-to-local, align 4
  %v1_35ba3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_35ba3 = xor i32 %v1_35ba3, %v3_35ba0
  %v3_35ba3 = icmp eq i32 %v2_35ba3, 0
  store i32 %v2_35ba3, i32* @eax, align 4
  br i1 %v3_35ba3, label %bb, label %dec_label_pc_35bac

bb:                                               ; preds = %dec_label_pc_35b70
  %v1_35baa = call i32 @function_35bb1()
  store i32 %v1_35baa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_35bac

dec_label_pc_35bac:                               ; preds = %bb, %dec_label_pc_35b70
  %v2_35baa = phi i32 [ %v1_35baa, %bb ], [ %v2_35ba3, %dec_label_pc_35b70 ]
  ret i32 %v2_35baa

; uselistorder directives
  uselistorder i32 %v0_35b80, { 1, 0, 2, 3 }
  uselistorder i8 %v3_35b70, { 1, 0 }
}

define i32 @function_35bb1() local_unnamed_addr {
dec_label_pc_35bb1:
  %v0_35bb2 = load i32, i32* @eax, align 4
  ret i32 %v0_35bb2
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPv6CKeyIDNS_7variantI14CNoDestinationS5_9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35bb3:
  ret i32 %arg4
}

define i32 @function_35bf0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_35bf0:
  %v0_35bf0 = load i32, i32* @eax, align 4
  %v0_35bf4 = load i32, i32* @ebp, align 4
  %v1_35bf4 = add i32 %v0_35bf4, -36
  %v2_35bf4 = inttoptr i32 %v1_35bf4 to i32*
  %v3_35bf4 = load i32, i32* %v2_35bf4, align 4
  %v1_35bfb = add i32 %v0_35bf4, -32
  %v2_35bfb = inttoptr i32 %v1_35bfb to i32*
  %v3_35bfb = load i32, i32* %v2_35bfb, align 4
  %v1_35c02 = add i32 %v0_35bf4, -28
  %v2_35c02 = inttoptr i32 %v1_35c02 to i32*
  %v3_35c02 = load i32, i32* %v2_35c02, align 4
  %v4_35c08 = call i32 @unknown_6c8b7(i32 %v3_35c02, i32 %v3_35bfb, i32 %v3_35bf4, i32 %v0_35bf0)
  %v0_35c0d = load i32, i32* @ebp, align 4
  %v1_35c0d = add i32 %v0_35c0d, -12
  %v2_35c0d = inttoptr i32 %v1_35c0d to i32*
  %v3_35c0d = load i32, i32* %v2_35c0d, align 4
  %v1_35c10 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_35c10 = xor i32 %v1_35c10, %v3_35c0d
  %v3_35c10 = icmp eq i32 %v2_35c10, 0
  store i32 %v2_35c10, i32* @eax, align 4
  br i1 %v3_35c10, label %bb, label %dec_label_pc_35c19

bb:                                               ; preds = %dec_label_pc_35bf0
  %v1_35c17 = call i32 @function_35c1e()
  br label %dec_label_pc_35c19

dec_label_pc_35c19:                               ; preds = %bb, %dec_label_pc_35bf0
  %v2_35c17 = phi i32 [ %v1_35c17, %bb ], [ %v2_35c10, %dec_label_pc_35bf0 ]
  ret i32 %v2_35c17
}

define i32 @function_35c1e() local_unnamed_addr {
dec_label_pc_35c1e:
  %v0_35c1f = load i32, i32* @eax, align 4
  ret i32 %v0_35c1f
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPv9CScriptIDNS_7variantI14CNoDestination6CKeyIDS5_NS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35c20:
  %edx.global-to-local = alloca i32, align 4
  %v0_35c56 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_35c56, 16777216
  %v5_35c75 = sdiv i32 %sext, 16777216
  %v6_35c75 = call i32 @unknown_6c989(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35c75)
  ret i32 0
}

define i32 @function_35c8a() local_unnamed_addr {
dec_label_pc_35c8a:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_35c8a = load i32, i32* %ecx.global-to-local, align 4
  %v1_35c8a = add i32 %v0_35c8a, -1
  store i32 %v1_35c8a, i32* %ecx.global-to-local, align 4
  %v0_35c8c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_35c8c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14assign_storageEPvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_E18has_fallback_type_EEENT_11result_typeEiRSC_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35c8d:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14assign_storageEPvNS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_SI_E18has_fallback_type_EEENT1_11result_typeEiiRSL_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1) local_unnamed_addr {
dec_label_pc_35ce7:
  ret i32 %arg1
}

define i32 @function_35cf2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35cf2:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_35cf4 = load i32, i32* @ebp, align 4
  %v0_35cf5 = load i32, i32* @eax, align 4
  %v2_35cf5 = or i32 %v0_35cf5, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_35cf5, i32* %eax.global-to-local, align 4
  %v0_35cf8 = load i32, i32* @ecx, align 4
  %v1_35cf8 = add i32 %v0_35cf8, -1
  store i32 %v1_35cf8, i32* @ecx, align 4
  %v1_35cfa = add i32 %v0_35cf4, 3
  store i32 %v1_35cfa, i32* %ebp.global-to-local, align 4
  %v1_35cfb = add i32 %v0_35cf8, 1166793796
  %v2_35cfb = inttoptr i32 %v1_35cfb to i8*
  %v3_35cfb = load i8, i8* %v2_35cfb, align 1
  %v5_35cfb = trunc i32 %v1_35cf8 to i8
  %v8_35cfb = add i8 %v3_35cfb, %v5_35cfb
  %v28_35cfb = icmp ult i8 %v8_35cfb, %v3_35cfb
  store i1 %v28_35cfb, i1* %cf.global-to-local, align 1
  store i8 %v8_35cfb, i8* %v2_35cfb, align 1
  %v0_35d01 = load i32, i32* %eax.global-to-local, align 4
  %v1_35d01 = trunc i32 %v0_35d01 to i8
  %v2_35d01 = load i1, i1* %cf.global-to-local, align 1
  %v3_35d01 = zext i1 %v2_35d01 to i8
  %v4_35d01 = add i8 %v1_35d01, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_35d01 = add i8 %v4_35d01, %v3_35d01
  %v20_35d01 = add i8 %v1_35d01, -119
  %v21_35d01 = add i8 %v20_35d01, %v3_35d01
  %v22_35d01 = icmp ule i8 %v21_35d01, %v1_35d01
  %v23_35d01 = icmp ugt i8 %v1_35d01, 118
  %v24_35d01 = select i1 %v2_35d01, i1 %v22_35d01, i1 %v23_35d01
  store i1 %v24_35d01, i1* %cf.global-to-local, align 1
  %v25_35d01 = zext i8 %v5_35d01 to i32
  %v27_35d01 = and i32 %v0_35d01, -256
  %v28_35d01 = or i32 %v25_35d01, %v27_35d01
  store i32 %v28_35d01, i32* %eax.global-to-local, align 4
  %v0_35d03 = load i32, i32* %ebp.global-to-local, align 4
  %v1_35d03 = add i32 %v0_35d03, 1
  store i32 %v1_35d03, i32* %ebp.global-to-local, align 4
  %v3_35d04 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_35d04 = fpext float %v3_35d04 to x86_fp80
  %v5_35d04 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_35d04 = fmul x86_fp80 %v4_35d04, %v5_35d04
  store x86_fp80 %v6_35d04, x86_fp80* @st0, align 4
  %v1_35d08 = add i32 %v28_35d01, -1240475835
  %v2_35d08 = inttoptr i32 %v1_35d08 to i8*
  %v3_35d08 = load i8, i8* %v2_35d08, align 1
  %v4_35d08 = load i32, i32* @ecx, align 4
  %v5_35d08 = trunc i32 %v4_35d08 to i8
  %v7_35d08 = zext i1 %v24_35d01 to i8
  %v8_35d08 = sub i8 %v3_35d08, %v5_35d08
  %v9_35d08 = add i8 %v8_35d08, %v7_35d08
  %v19_35d08 = sub i8 %v8_35d08, %v7_35d08
  %v20_35d08 = icmp ult i8 %v3_35d08, %v19_35d08
  %v21_35d08 = icmp ne i8 %v5_35d08, -1
  %v22_35d08 = or i1 %v21_35d08, %v20_35d08
  %v23_35d08 = icmp ult i8 %v3_35d08, %v5_35d08
  %v24_35d08 = select i1 %v24_35d01, i1 %v22_35d08, i1 %v23_35d08
  store i1 %v24_35d08, i1* %cf.global-to-local, align 1
  store i8 %v9_35d08, i8* %v2_35d08, align 1
  %v0_35d0e = load i32, i32* %ebp.global-to-local, align 4
  %v0_35d0f = load i32, i32* %eax.global-to-local, align 4
  %v1_35d0f = trunc i32 %v0_35d0f to i8
  %v2_35d0f = load i1, i1* %cf.global-to-local, align 1
  %v17_35d0f = icmp ult i8 %v1_35d0f, -120
  %v18_35d0f = or i1 %v2_35d0f, %v17_35d0f
  %v1_35d11 = add i32 %v0_35d0e, 2
  store i32 %v1_35d11, i32* @ebp, align 4
  %v3_35d12 = select i1 %v18_35d0f, i32 255, i32 0
  %v5_35d12 = and i32 %v0_35d0f, -256
  %v6_35d12 = or i32 %v3_35d12, %v5_35d12
  store i32 %v6_35d12, i32* %eax.global-to-local, align 4
  %v1_35d13 = add i32 %v0_35d0e, 34
  %v2_35d13 = inttoptr i32 %v1_35d13 to i32*
  %v3_35d13 = load i32, i32* %v2_35d13, align 4
  store i32 %v3_35d13, i32* %eax.global-to-local, align 4
  %v2_35d16 = add i32 %v0_35d0e, -46
  %v3_35d16 = inttoptr i32 %v2_35d16 to i32*
  store i32 %v3_35d13, i32* %v3_35d16, align 4
  %v0_35d19 = load i32, i32* @ebp, align 4
  %v1_35d19 = add i32 %v0_35d19, 36
  %v2_35d19 = inttoptr i32 %v1_35d19 to i32*
  %v3_35d19 = load i32, i32* %v2_35d19, align 4
  store i32 %v3_35d19, i32* %eax.global-to-local, align 4
  %v2_35d1c = add i32 %v0_35d19, -52
  %v3_35d1c = inttoptr i32 %v2_35d1c to i32*
  store i32 %v3_35d19, i32* %v3_35d1c, align 4
  %v0_35d1f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_35d25 = load i32, i32* @ebp, align 4
  %v2_35d25 = add i32 %v1_35d25, -12
  %v3_35d25 = inttoptr i32 %v2_35d25 to i32*
  store i32 %v0_35d1f, i32* %v3_35d25, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v8_35d08, { 1, 0 }
  uselistorder i8 %v7_35d08, { 1, 0 }
  uselistorder i8 %v5_35d08, { 1, 0, 2 }
  uselistorder i1 %v24_35d01, { 1, 0, 2 }
  uselistorder i8 %v3_35cfb, { 1, 0 }
}

define i32 @function_35d3c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35d3c:
  %eax.global-to-local = alloca i32, align 4
  %v0_35d3c = load i32, i32* @eax, align 4
  %v1_35d3c = trunc i32 %v0_35d3c to i8
  %v2_35d3c = and i8 %v1_35d3c, 4
  %v2_35d3e = xor i8 %v2_35d3c, -58
  %v8_35d3e = zext i8 %v2_35d3e to i32
  %v10_35d3e = and i32 %v0_35d3c, -256
  %v11_35d3e = or i32 %v8_35d3e, %v10_35d3e
  store i32 %v11_35d3e, i32* %eax.global-to-local, align 4
  %v1_35d40 = inttoptr i32 %v11_35d3e to i8*
  %v2_35d40 = load i8, i8* %v1_35d40, align 2
  %v5_35d40 = add i8 %v2_35d40, %v2_35d3e
  store i8 %v5_35d40, i8* %v1_35d40, align 2
  %v3_35d42 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_35d42

; uselistorder directives
  uselistorder i8 4, { 8, 9, 0, 3, 4, 7, 1, 2, 5, 6 }
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS4_NS8_18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35d4e:
  %edx.global-to-local = alloca i32, align 4
  %v0_35d84 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_35d84, 16777216
  %v5_35da3 = sdiv i32 %sext, 16777216
  %v6_35da3 = call i32 @unknown_6cb1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35da3)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35db4

bb:                                               ; preds = %dec_label_pc_35d4e
  %v1_35db2 = call i32 @function_35db9()
  br label %dec_label_pc_35db4

dec_label_pc_35db4:                               ; preds = %bb, %dec_label_pc_35d4e
  %v2_35db2 = phi i32 [ %v1_35db2, %bb ], [ 0, %dec_label_pc_35d4e ]
  ret i32 %v2_35db2
}

define i32 @function_35db9() local_unnamed_addr {
dec_label_pc_35db9:
  %v0_35dba = load i32, i32* @eax, align 4
  ret i32 %v0_35dba
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS5_NS8_18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35dbb:
  %edx.global-to-local = alloca i32, align 4
  %v0_35df1 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_35df1, 16777216
  %v5_35e10 = sdiv i32 %sext, 16777216
  %v6_35e10 = call i32 @unknown_6cbee(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35e10)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35e21

bb:                                               ; preds = %dec_label_pc_35dbb
  %v1_35e1f = call i32 @function_35e26()
  br label %dec_label_pc_35e21

dec_label_pc_35e21:                               ; preds = %bb, %dec_label_pc_35dbb
  %v2_35e1f = phi i32 [ %v1_35e1f, %bb ], [ 0, %dec_label_pc_35dbb ]
  ret i32 %v2_35e1f
}

define i32 @function_35e26() local_unnamed_addr {
dec_label_pc_35e26:
  %v0_35e27 = load i32, i32* @eax, align 4
  ret i32 %v0_35e27
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS6_NS8_18has_fallback_type_EEENT_11result_typeEiRSD_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35e28:
  %edx.global-to-local = alloca i32, align 4
  %v0_35e5e = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_35e5e, 16777216
  %v5_35e7d = sdiv i32 %sext, 16777216
  %v6_35e7d = call i32 @unknown_6ccc0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %v5_35e7d)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_35e8e

bb:                                               ; preds = %dec_label_pc_35e28
  %v1_35e8c = call i32 @function_35e93()
  br label %dec_label_pc_35e8e

dec_label_pc_35e8e:                               ; preds = %bb, %dec_label_pc_35e28
  %v2_35e8c = phi i32 [ %v1_35e8c, %bb ], [ 0, %dec_label_pc_35e28 ]
  ret i32 %v2_35e8c
}

define i32 @function_35e93() local_unnamed_addr {
dec_label_pc_35e93:
  %v0_35e94 = load i32, i32* @eax, align 4
  ret i32 %v0_35e94
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvNS8_18has_fallback_type_EEENT_11result_typeEiRSD_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1) local_unnamed_addr {
dec_label_pc_35e95:
  ret i32 %arg1
}

define i32 @function_35e9e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35e9e:
  %v0_35e9e = load i32, i32* @eax, align 4
  %v1_35e9e = load i32, i32* @ebp, align 4
  %v2_35e9e = add i32 %v1_35e9e, -28
  %v3_35e9e = inttoptr i32 %v2_35e9e to i32*
  store i32 %v0_35e9e, i32* %v3_35e9e, align 4
  %v0_35ea1 = load i32, i32* @ebp, align 4
  %v1_35ea1 = add i32 %v0_35ea1, 12
  %v2_35ea1 = inttoptr i32 %v1_35ea1 to i32*
  %v3_35ea1 = load i32, i32* %v2_35ea1, align 4
  %v2_35ea4 = add i32 %v0_35ea1, -32
  %v3_35ea4 = inttoptr i32 %v2_35ea4 to i32*
  store i32 %v3_35ea1, i32* %v3_35ea4, align 4
  %v0_35ea7 = load i32, i32* @ebp, align 4
  %v1_35ea7 = add i32 %v0_35ea7, 16
  %v2_35ea7 = inttoptr i32 %v1_35ea7 to i32*
  %v3_35ea7 = load i32, i32* %v2_35ea7, align 4
  %v2_35eaa = add i32 %v0_35ea7, -36
  %v3_35eaa = inttoptr i32 %v2_35eaa to i32*
  store i32 %v3_35ea7, i32* %v3_35eaa, align 4
  %v0_35ead = load i32, i32* @ebp, align 4
  %v1_35ead = add i32 %v0_35ead, 20
  %v2_35ead = inttoptr i32 %v1_35ead to i32*
  %v3_35ead = load i32, i32* %v2_35ead, align 4
  %v2_35eb0 = add i32 %v0_35ead, -40
  %v3_35eb0 = inttoptr i32 %v2_35eb0 to i32*
  store i32 %v3_35ead, i32* %v3_35eb0, align 4
  %v0_35eb3 = load i32, i32* @ebp, align 4
  %v1_35eb3 = add i32 %v0_35eb3, 24
  %v2_35eb3 = inttoptr i32 %v1_35eb3 to i8*
  %v3_35eb3 = load i8, i8* %v2_35eb3, align 1
  %v3_35eb7 = add i32 %v0_35eb3, -41
  %v4_35eb7 = inttoptr i32 %v3_35eb7 to i8*
  store i8 %v3_35eb3, i8* %v4_35eb7, align 1
  %v0_35eba = load i32, i32* @ebp, align 4
  %v1_35eba = add i32 %v0_35eba, 28
  %v2_35eba = inttoptr i32 %v1_35eba to i32*
  %v3_35eba = load i32, i32* %v2_35eba, align 4
  %v2_35ebd = add i32 %v0_35eba, -48
  %v3_35ebd = inttoptr i32 %v2_35ebd to i32*
  store i32 %v3_35eba, i32* %v3_35ebd, align 4
  %v0_35ec0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_35ec6 = load i32, i32* @ebp, align 4
  %v2_35ec6 = add i32 %v1_35ec6, -12
  %v3_35ec6 = inttoptr i32 %v2_35ec6 to i32*
  store i32 %v0_35ec0, i32* %v3_35ec6, align 4
  ret i32 0
}

define i32 @function_35ee8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_35ee8:
  %v2_35ee8 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_35ee8 = load i32, i32* @eax, align 4
  %v4_35ee8 = trunc i32 %v3_35ee8 to i8
  %v5_35ee8 = add i8 %v4_35ee8, %v2_35ee8
  %v21_35ee8 = inttoptr i32 %v3_35ee8 to i8*
  store i8 %v5_35ee8, i8* %v21_35ee8, align 1
  %v22_35ee8 = load i32, i32* @eax, align 4
  ret i32 %v22_35ee8
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ESG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_SG_E8assignerEPKvNSH_18has_fallback_type_EEENT1_11result_typeEiiRSM_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_35eef:
  ret i32 0
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPv14CNoDestinationNS_7variantIS9_6CKeyIDS5_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_35f56:
  ret i32 %arg6
}

define i32 @function_35f86(i32 %arg1) local_unnamed_addr {
dec_label_pc_35f86:
  %v0_35f86 = load i32, i32* @ecx, align 4
  %v1_35f86 = add i32 %v0_35f86, -1070468027
  %v2_35f86 = inttoptr i32 %v1_35f86 to i8*
  %v3_35f86 = load i8, i8* %v2_35f86, align 1
  %v5_35f86 = trunc i32 %v0_35f86 to i8
  %v6_35f86 = add i8 %v3_35f86, %v5_35f86
  store i8 %v6_35f86, i8* %v2_35f86, align 1
  %v0_35f8c = load i32, i32* @edx, align 4
  %v0_35f90 = load i32, i32* @ebp, align 4
  %v1_35f90 = add i32 %v0_35f90, -40
  %v2_35f90 = inttoptr i32 %v1_35f90 to i32*
  %v3_35f90 = load i32, i32* %v2_35f90, align 4
  %v1_35f97 = add i32 %v0_35f90, -36
  %v2_35f97 = inttoptr i32 %v1_35f97 to i32*
  %v3_35f97 = load i32, i32* %v2_35f97, align 4
  %v1_35f9e = add i32 %v0_35f90, -32
  %v2_35f9e = inttoptr i32 %v1_35f9e to i32*
  %v3_35f9e = load i32, i32* %v2_35f9e, align 4
  %v1_35fa5 = add i32 %v0_35f90, -28
  %v2_35fa5 = inttoptr i32 %v1_35fa5 to i32*
  %v3_35fa5 = load i32, i32* %v2_35fa5, align 4
  %sext = mul i32 %v0_35f8c, 16777216
  %v5_35fab = sdiv i32 %sext, 16777216
  %v6_35fab = call i32 @unknown_6ce53(i32 %v3_35fa5, i32 %v3_35f9e, i32 %v3_35f97, i32 %v3_35f90, i32 %v5_35fab)
  store i32 %v6_35fab, i32* @eax, align 4
  %v0_35fb0 = load i32, i32* @ebp, align 4
  %v1_35fb0 = add i32 %v0_35fb0, -12
  %v2_35fb0 = inttoptr i32 %v1_35fb0 to i32*
  %v3_35fb0 = load i32, i32* %v2_35fb0, align 4
  %v1_35fb3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_35fb3 = xor i32 %v1_35fb3, %v3_35fb0
  %v3_35fb3 = icmp eq i32 %v2_35fb3, 0
  store i32 %v2_35fb3, i32* @edx, align 4
  br i1 %v3_35fb3, label %bb, label %dec_label_pc_35fbc

bb:                                               ; preds = %dec_label_pc_35f86
  %v1_35fba = call i32 @function_35fc1()
  br label %dec_label_pc_35fbc

dec_label_pc_35fbc:                               ; preds = %bb, %dec_label_pc_35f86
  %v2_35fba = phi i32 [ %v1_35fba, %bb ], [ %v6_35fab, %dec_label_pc_35f86 ]
  ret i32 %v2_35fba

; uselistorder directives
  uselistorder i32 %v0_35f90, { 1, 0, 2, 3 }
}

define i32 @function_35fc1() local_unnamed_addr {
dec_label_pc_35fc1:
  %v0_35fc2 = load i32, i32* @eax, align 4
  ret i32 %v0_35fc2
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPv6CKeyIDNS_7variantI14CNoDestinationS9_S5_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_35fc3:
  ret i32 %arg4
}

define i32 @function_35fe0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_35fe0:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v3_35fe0 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_35fe0 = fpext float %v3_35fe0 to x86_fp80
  %v5_35fe0 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_35fe0 = fmul x86_fp80 %v4_35fe0, %v5_35fe0
  store x86_fp80 %v6_35fe0, x86_fp80* @st0, align 4
  %v0_35fe2 = load i32, i32* @edx, align 4
  %v1_35fe2 = and i32 %v0_35fe2, -65281
  %v2_35fe2 = or i32 %v1_35fe2, 17664
  store i32 %v2_35fe2, i32* %edx.global-to-local, align 4
  %v0_35fe4 = load i32, i32* @eax, align 4
  %v1_35fe4 = add i32 %v0_35fe4, 1166792517
  %v2_35fe4 = inttoptr i32 %v1_35fe4 to i8*
  %v3_35fe4 = load i8, i8* %v2_35fe4, align 1
  %v4_35fe4 = load i32, i32* @ecx, align 4
  %v5_35fe4 = trunc i32 %v4_35fe4 to i8
  %v6_35fe4 = load i1, i1* @cf, align 1
  %v7_35fe4 = zext i1 %v6_35fe4 to i8
  %v8_35fe4 = sub i8 %v3_35fe4, %v5_35fe4
  %v9_35fe4 = add i8 %v8_35fe4, %v7_35fe4
  %v19_35fe4 = sub i8 %v8_35fe4, %v7_35fe4
  %v20_35fe4 = icmp ult i8 %v3_35fe4, %v19_35fe4
  %v21_35fe4 = icmp ne i8 %v5_35fe4, -1
  %v22_35fe4 = or i1 %v21_35fe4, %v20_35fe4
  %v23_35fe4 = icmp ult i8 %v3_35fe4, %v5_35fe4
  %v24_35fe4 = select i1 %v6_35fe4, i1 %v22_35fe4, i1 %v23_35fe4
  store i1 %v24_35fe4, i1* %cf.global-to-local, align 1
  store i8 %v9_35fe4, i8* %v2_35fe4, align 1
  %v0_35fea = load i32, i32* @eax, align 4
  %v1_35fea = trunc i32 %v0_35fea to i8
  %v2_35fea = load i1, i1* %cf.global-to-local, align 1
  %v3_35fea = zext i1 %v2_35fea to i32
  %v4_35fea = add i32 %v0_35fea, sub (i32 0, i32 zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32))
  %v5_35fea = add i32 %v4_35fea, %v3_35fea
  %v17_35fea = icmp ult i8 %v1_35fea, -119
  %v18_35fea = or i1 %v2_35fea, %v17_35fea
  store i1 %v18_35fea, i1* %cf.global-to-local, align 1
  %v31_35fea = urem i32 %v5_35fea, 256
  %v33_35fea = and i32 %v0_35fea, -256
  %v34_35fea = or i32 %v31_35fea, %v33_35fea
  store i32 %v34_35fea, i32* %eax.global-to-local, align 4
  %v0_35fec = load i32, i32* @ebp, align 4
  %v1_35fec = add i32 %v0_35fec, 1
  store i32 %v1_35fec, i32* @ebp, align 4
  %v1_35fed = add i32 %v0_35fec, -94
  %v2_35fed = inttoptr i32 %v1_35fed to i8*
  %v3_35fed = load i8, i8* %v2_35fed, align 1
  %v5_35fed = mul i8 %v3_35fed, 2
  store i8 %v5_35fed, i8* %v2_35fed, align 1
  %v16_35fed = icmp slt i8 %v3_35fed, 0
  %v0_35ff0 = load i32, i32* %eax.global-to-local, align 4
  %v1_35ff0 = trunc i32 %v0_35ff0 to i8
  %v3_35ff0 = zext i1 %v16_35fed to i8
  %v4_35ff0 = add i8 %v1_35ff0, %v3_35ff0
  %v19_35ff0 = icmp ule i8 %v4_35ff0, %v1_35ff0
  %v21_35ff0 = icmp eq i1 %v16_35fed, %v19_35ff0
  store i1 %v21_35ff0, i1* %cf.global-to-local, align 1
  %v22_35ff0 = zext i8 %v4_35ff0 to i32
  %v24_35ff0 = and i32 %v0_35ff0, -256
  %v25_35ff0 = or i32 %v22_35ff0, %v24_35ff0
  store i32 %v25_35ff0, i32* %eax.global-to-local, align 4
  %v1_35ff2 = inttoptr i32 %v25_35ff0 to i8*
  %v2_35ff2 = load i8, i8* %v1_35ff2, align 1
  %v5_35ff2 = add i8 %v2_35ff2, %v4_35ff0
  store i8 %v5_35ff2, i8* %v1_35ff2, align 1
  %v0_35ff4 = load i32, i32* %eax.global-to-local, align 4
  %v1_35ff4 = load i32, i32* @ebp, align 4
  %v2_35ff4 = add i32 %v1_35ff4, -12
  %v3_35ff4 = inttoptr i32 %v2_35ff4 to i32*
  store i32 %v0_35ff4, i32* %v3_35ff4, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_35ff9 = load i32, i32* %edx.global-to-local, align 4
  %v0_35ffd = load i32, i32* @ebp, align 4
  %v1_35ffd = add i32 %v0_35ffd, -40
  %v2_35ffd = inttoptr i32 %v1_35ffd to i32*
  %v3_35ffd = load i32, i32* %v2_35ffd, align 4
  store i32 %v3_35ffd, i32* %eax.global-to-local, align 4
  %v1_36004 = add i32 %v0_35ffd, -36
  %v2_36004 = inttoptr i32 %v1_36004 to i32*
  %v3_36004 = load i32, i32* %v2_36004, align 4
  store i32 %v3_36004, i32* %eax.global-to-local, align 4
  %v1_3600b = add i32 %v0_35ffd, -32
  %v2_3600b = inttoptr i32 %v1_3600b to i32*
  %v3_3600b = load i32, i32* %v2_3600b, align 4
  store i32 %v3_3600b, i32* %eax.global-to-local, align 4
  %v1_36012 = add i32 %v0_35ffd, -28
  %v2_36012 = inttoptr i32 %v1_36012 to i32*
  %v3_36012 = load i32, i32* %v2_36012, align 4
  store i32 %v3_36012, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_35ff9, 16777216
  %v5_36018 = sdiv i32 %sext, 16777216
  %v6_36018 = call i32 @unknown_6cf25(i32 %v3_36012, i32 %v3_3600b, i32 %v3_36004, i32 %v3_35ffd, i32 %v5_36018)
  store i32 %v6_36018, i32* @eax, align 4
  %v0_3601d = load i32, i32* @ebp, align 4
  %v1_3601d = add i32 %v0_3601d, -12
  %v2_3601d = inttoptr i32 %v1_3601d to i32*
  %v3_3601d = load i32, i32* %v2_3601d, align 4
  store i32 %v3_3601d, i32* %edx.global-to-local, align 4
  %v1_36020 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36020 = xor i32 %v1_36020, %v3_3601d
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_36020 = icmp eq i32 %v2_36020, 0
  store i32 %v2_36020, i32* %edx.global-to-local, align 4
  br i1 %v3_36020, label %bb, label %dec_label_pc_36029

bb:                                               ; preds = %dec_label_pc_35fe0
  %v2_36027 = call i32 @function_3602e(i32 %v3_36012)
  store i32 %v2_36027, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_36029

dec_label_pc_36029:                               ; preds = %bb, %dec_label_pc_35fe0
  %v3_36027 = phi i32 [ %v2_36027, %bb ], [ %v6_36018, %dec_label_pc_35fe0 ]
  ret i32 %v3_36027

; uselistorder directives
  uselistorder i32 %v0_35ffd, { 1, 0, 2, 3 }
  uselistorder i8 %v4_35ff0, { 0, 2, 1 }
  uselistorder i8 %v1_35ff0, { 1, 0 }
  uselistorder i8 %v3_35fed, { 1, 0 }
  uselistorder i1 %v2_35fea, { 1, 0 }
  uselistorder i32 %v0_35fea, { 1, 0, 2 }
  uselistorder i8 %v5_35fe4, { 1, 0, 2 }
}

define i32 @function_3602e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3602e:
  %v0_3602f = load i32, i32* @eax, align 4
  ret i32 %v0_3602f
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPvS5_NS_7variantI14CNoDestination6CKeyIDS5_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PT1_T2_i(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_36030:
  ret i32 %arg4
}

define i32 @function_3606e() local_unnamed_addr {
dec_label_pc_3606e:
  %v0_36071 = load i32, i32* @ebp, align 4
  %v1_36071 = add i32 %v0_36071, -36
  %v2_36071 = inttoptr i32 %v1_36071 to i32*
  %v3_36071 = load i32, i32* %v2_36071, align 4
  %v1_36078 = add i32 %v0_36071, -32
  %v2_36078 = inttoptr i32 %v1_36078 to i32*
  %v3_36078 = load i32, i32* %v2_36078, align 4
  %v1_3607f = add i32 %v0_36071, -28
  %v2_3607f = inttoptr i32 %v1_3607f to i32*
  %v3_3607f = load i32, i32* %v2_3607f, align 4
  %v3_36085 = call i32 @unknown_6cff7(i32 %v3_3607f, i32 %v3_36078, i32 %v3_36071)
  store i32 %v3_36085, i32* @eax, align 4
  %v0_3608a = load i32, i32* @ebp, align 4
  %v1_3608a = add i32 %v0_3608a, -12
  %v2_3608a = inttoptr i32 %v1_3608a to i32*
  %v3_3608a = load i32, i32* %v2_3608a, align 4
  %v1_3608d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3608d = icmp eq i32 %v1_3608d, %v3_3608a
  br i1 %v3_3608d, label %bb, label %dec_label_pc_36096

bb:                                               ; preds = %dec_label_pc_3606e
  %v1_36094 = call i32 @function_3609b()
  br label %dec_label_pc_36096

dec_label_pc_36096:                               ; preds = %bb, %dec_label_pc_3606e
  %v2_36094 = phi i32 [ %v1_36094, %bb ], [ %v3_36085, %dec_label_pc_3606e ]
  ret i32 %v2_36094
}

define i32 @function_3609b() local_unnamed_addr {
dec_label_pc_3609b:
  %v0_3609c = load i32, i32* @eax, align 4
  ret i32 %v0_3609c
}

define i32 @_ZN5boost6detail7variant22visitation_impl_invokeINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPvNS_7variantI14CNoDestination6CKeyIDS5_NS1_5void_ESC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_SC_E18has_fallback_type_EEENT_11result_typeEiRSF_T0_PNS1_22apply_visitor_unrolledET1_l(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_3609d:
  ret i32 %arg6
}

define i32 @function_360cb() local_unnamed_addr {
dec_label_pc_360cb:
  %v2_360cb = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_360cb = load i32, i32* @eax, align 4
  %v4_360cb = trunc i32 %v3_360cb to i8
  %v5_360cb = add i8 %v4_360cb, %v2_360cb
  %v21_360cb = inttoptr i32 %v3_360cb to i8*
  store i8 %v5_360cb, i8* %v21_360cb, align 1
  %v0_360cd = load i32, i32* @ecx, align 4
  %v1_360cd = add i32 %v0_360cd, -1070468027
  %v2_360cd = inttoptr i32 %v1_360cd to i8*
  %v3_360cd = load i8, i8* %v2_360cd, align 1
  %v5_360cd = trunc i32 %v0_360cd to i8
  %v6_360cd = add i8 %v3_360cd, %v5_360cd
  store i8 %v6_360cd, i8* %v2_360cd, align 1
  %v3_360eb = load i32, i32* @eax, align 4
  ret i32 %v3_360eb
}

define i32 @function_360d2(i32 %arg1) local_unnamed_addr {
dec_label_pc_360d2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_360e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_360e8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant15visitation_implIN4mpl_4int_ILi20EEENS1_20visitation_impl_stepINS_3mpl6l_iterINS7_5l_endEEESA_EENS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPvNS_7variantI14CNoDestination6CKeyIDSE_NS1_5void_ESL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_SL_E18has_fallback_type_EEENT1_11result_typeEiiRSO_T2_NS3_5bool_ILb1EEET3_PT_PT0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_360f7:
  ret i32 %arg8
}

define i32 @function_3612c() local_unnamed_addr {
dec_label_pc_3612c:
  %v0_3612c = load i32, i32* @eax, align 4
  %v1_3612c = load i32, i32* @ebp, align 4
  %v2_3612c = add i32 %v1_3612c, -52
  %v3_3612c = inttoptr i32 %v2_3612c to i32*
  store i32 %v0_3612c, i32* %v3_3612c, align 4
  %v0_3612f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36135 = load i32, i32* @ebp, align 4
  %v2_36135 = add i32 %v1_36135, -12
  %v3_36135 = inttoptr i32 %v2_36135 to i32*
  store i32 %v0_3612f, i32* %v3_36135, align 4
  ret i32 0
}

define i32 @function_3613c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_3613c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPv14CNoDestinationEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_3615e:
  %v1_36194 = call i32 @unknown_6d18a(i32 %arg3)
  %v3_361ab = call i32 @unknown_6d1e2(i32 %arg2, i32 %v1_36194, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_361bc

bb:                                               ; preds = %dec_label_pc_3615e
  %v1_361ba = call i32 @function_361c1()
  br label %dec_label_pc_361bc

dec_label_pc_361bc:                               ; preds = %bb, %dec_label_pc_3615e
  %v2_361ba = phi i32 [ %v1_361ba, %bb ], [ 0, %dec_label_pc_3615e ]
  ret i32 %v2_361ba
}

define i32 @function_361be(i32 %arg1) local_unnamed_addr {
dec_label_pc_361be:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_361c1() local_unnamed_addr {
dec_label_pc_361c1:
  %v0_361c2 = load i32, i32* @eax, align 4
  ret i32 %v0_361c2
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPv6CKeyIDEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_361c3:
  %v1_361f9 = call i32 @unknown_6d288(i32 %arg3)
  %v3_36210 = call i32 @unknown_6d2b5(i32 %arg2, i32 %v1_361f9, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36221

bb:                                               ; preds = %dec_label_pc_361c3
  %v1_3621f = call i32 @function_36226()
  br label %dec_label_pc_36221

dec_label_pc_36221:                               ; preds = %bb, %dec_label_pc_361c3
  %v2_3621f = phi i32 [ %v1_3621f, %bb ], [ 0, %dec_label_pc_361c3 ]
  ret i32 %v2_3621f
}

define i32 @function_36226() local_unnamed_addr {
dec_label_pc_36226:
  %v0_36227 = load i32, i32* @eax, align 4
  ret i32 %v0_36227
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_9destroyerEPv9CScriptIDEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36228:
  ret i32 %arg3
}

define i32 @function_3625c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3625c:
  %v0_3625e = call i32 @unknown_6d35b()
  %v0_3626f = load i32, i32* @ebp, align 4
  %v1_3626f = add i32 %v0_3626f, -32
  %v2_3626f = inttoptr i32 %v1_3626f to i32*
  %v3_3626f = load i32, i32* %v2_3626f, align 4
  ret i32 %v3_3626f
}

define i32 @function_36274(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36274:
  %eax.global-to-local = alloca i32, align 4
  %v0_36274 = load i32, i32* @eax, align 4
  %v11_36274 = and i32 %v0_36274, -24
  store i32 %v11_36274, i32* %eax.global-to-local, align 4
  %v0_36276 = load i32, i32* @ecx, align 4
  %v0_36279 = load i32, i32* @ebx, align 4
  %v1_36279 = add i32 %v0_36279, 862319685
  %v2_36279 = inttoptr i32 %v1_36279 to i8*
  %v3_36279 = load i8, i8* %v2_36279, align 1
  %v5_36279 = trunc i32 %v0_36276 to i8
  %v6_36279 = add i8 %v3_36279, %v5_36279
  store i8 %v6_36279, i8* %v2_36279, align 1
  %v0_3627f = load i32, i32* %eax.global-to-local, align 4
  %v1_3627f = add i32 %v0_3627f, 20
  %v10_3627f = icmp eq i32 %v1_3627f, 0
  store i32 %v1_3627f, i32* @eax, align 4
  br i1 %v10_3627f, label %bb, label %dec_label_pc_36286

bb:                                               ; preds = %dec_label_pc_36274
  %v1_36284 = call i32 @function_3628b()
  store i32 %v1_36284, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_36286

dec_label_pc_36286:                               ; preds = %bb, %dec_label_pc_36274
  %v2_36284 = phi i32 [ %v1_36284, %bb ], [ %v1_3627f, %dec_label_pc_36274 ]
  ret i32 %v2_36284
}

define i32 @function_3628b() local_unnamed_addr {
dec_label_pc_3628b:
  %v0_3628c = load i32, i32* @eax, align 4
  ret i32 %v0_3628c
}

define i32 @_ZN5boost6detail7variant12cast_storageI14CNoDestinationEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3628d:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_362b3

bb:                                               ; preds = %dec_label_pc_3628d
  %v2_362b1 = call i32 @function_362b8(i32 %arg1)
  br label %dec_label_pc_362b3

dec_label_pc_362b3:                               ; preds = %bb, %dec_label_pc_3628d
  %v3_362b1 = phi i32 [ %v2_362b1, %bb ], [ %arg1, %dec_label_pc_3628d ]
  ret i32 %v3_362b1
}

define i32 @function_362b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_362b8:
  %v0_362b9 = load i32, i32* @eax, align 4
  ret i32 %v0_362b9
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitI14CNoDestinationEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_362ba:
  %v2_362e0 = load i32, i32* %arg1, align 4
  %v2_362ed = call i32 @unknown_3f1a6(i32 1, i32 %v2_362e0)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36300

bb:                                               ; preds = %dec_label_pc_362ba
  %v1_362fe = call i32 @function_36305()
  br label %dec_label_pc_36300

dec_label_pc_36300:                               ; preds = %bb, %dec_label_pc_362ba
  %v2_362fe = phi i32 [ %v1_362fe, %bb ], [ 0, %dec_label_pc_362ba ]
  ret i32 %v2_362fe
}

define i32 @function_36305() local_unnamed_addr {
dec_label_pc_36305:
  %v0_36306 = load i32, i32* @eax, align 4
  ret i32 %v0_36306
}

define i32 @_ZN5boost6detail7variant12cast_storageI6CKeyIDEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36307:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3632d

bb:                                               ; preds = %dec_label_pc_36307
  %v2_3632b = call i32 @function_36332(i32 %arg1)
  br label %dec_label_pc_3632d

dec_label_pc_3632d:                               ; preds = %bb, %dec_label_pc_36307
  %v3_3632b = phi i32 [ %v2_3632b, %bb ], [ %arg1, %dec_label_pc_36307 ]
  ret i32 %v3_3632b
}

define i32 @function_36332(i32 %arg1) local_unnamed_addr {
dec_label_pc_36332:
  %v0_36333 = load i32, i32* @eax, align 4
  ret i32 %v0_36333
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitI6CKeyIDEEvRKT_i() local_unnamed_addr {
dec_label_pc_36334:
  %eax.global-to-local = alloca i32, align 4
  %v2_36335 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_36335
}

define i32 @function_36337(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36337:
  %edx.global-to-local = alloca i32, align 4
  %v0_3633a = load i32, i32* @ebp, align 4
  %v1_3633a = add i32 %v0_3633a, 8
  %v2_3633a = inttoptr i32 %v1_3633a to i32*
  %v3_3633a = load i32, i32* %v2_3633a, align 4
  %v2_3633d = add i32 %v0_3633a, -28
  %v3_3633d = inttoptr i32 %v2_3633d to i32*
  store i32 %v3_3633a, i32* %v3_3633d, align 4
  %v0_36340 = load i32, i32* @ebp, align 4
  %v1_36340 = add i32 %v0_36340, 12
  %v2_36340 = inttoptr i32 %v1_36340 to i32*
  %v3_36340 = load i32, i32* %v2_36340, align 4
  %v2_36343 = add i32 %v0_36340, -32
  %v3_36343 = inttoptr i32 %v2_36343 to i32*
  store i32 %v3_36340, i32* %v3_36343, align 4
  %v0_36346 = load i32, i32* @ebp, align 4
  %v1_36346 = add i32 %v0_36346, 16
  %v2_36346 = inttoptr i32 %v1_36346 to i32*
  %v3_36346 = load i32, i32* %v2_36346, align 4
  %v2_36349 = add i32 %v0_36346, -36
  %v3_36349 = inttoptr i32 %v2_36349 to i32*
  store i32 %v3_36346, i32* %v3_36349, align 4
  %v0_3634c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36352 = load i32, i32* @ebp, align 4
  %v2_36352 = add i32 %v1_36352, -12
  %v3_36352 = inttoptr i32 %v2_36352 to i32*
  store i32 %v0_3634c, i32* %v3_36352, align 4
  %v0_36357 = load i32, i32* @ebp, align 4
  %v1_36357 = add i32 %v0_36357, -28
  %v2_36357 = inttoptr i32 %v1_36357 to i32*
  %v3_36357 = load i32, i32* %v2_36357, align 4
  %v1_3635a = inttoptr i32 %v3_36357 to i32*
  %v2_3635a = load i32, i32* %v1_3635a, align 4
  %v2_36367 = call i32 @unknown_3f220(i32 20, i32 %v2_3635a)
  %v1_3636c = icmp eq i32 %v2_36367, 0
  br i1 %v1_3636c, label %dec_label_pc_3638f, label %dec_label_pc_36370

dec_label_pc_36370:                               ; preds = %dec_label_pc_36337
  %v0_36370 = load i32, i32* @ebp, align 4
  %v1_36370 = add i32 %v0_36370, -32
  %v2_36370 = inttoptr i32 %v1_36370 to i32*
  %v3_36370 = load i32, i32* %v2_36370, align 4
  store i32 %v3_36370, i32* %edx.global-to-local, align 4
  %v1_36373 = inttoptr i32 %v3_36370 to i32*
  %v2_36373 = load i32, i32* %v1_36373, align 4
  %v2_36375 = inttoptr i32 %v2_36367 to i32*
  store i32 %v2_36373, i32* %v2_36375, align 4
  %v0_36377 = load i32, i32* %edx.global-to-local, align 4
  %v1_36377 = add i32 %v0_36377, 4
  %v2_36377 = inttoptr i32 %v1_36377 to i32*
  %v3_36377 = load i32, i32* %v2_36377, align 4
  %v2_3637a = add i32 %v2_36367, 4
  %v3_3637a = inttoptr i32 %v2_3637a to i32*
  store i32 %v3_36377, i32* %v3_3637a, align 4
  %v0_3637d = load i32, i32* %edx.global-to-local, align 4
  %v1_3637d = add i32 %v0_3637d, 8
  %v2_3637d = inttoptr i32 %v1_3637d to i32*
  %v3_3637d = load i32, i32* %v2_3637d, align 4
  %v2_36380 = add i32 %v2_36367, 8
  %v3_36380 = inttoptr i32 %v2_36380 to i32*
  store i32 %v3_3637d, i32* %v3_36380, align 4
  %v0_36383 = load i32, i32* %edx.global-to-local, align 4
  %v1_36383 = add i32 %v0_36383, 12
  %v2_36383 = inttoptr i32 %v1_36383 to i32*
  %v3_36383 = load i32, i32* %v2_36383, align 4
  %v2_36386 = add i32 %v2_36367, 12
  %v3_36386 = inttoptr i32 %v2_36386 to i32*
  store i32 %v3_36383, i32* %v3_36386, align 4
  %v0_36389 = load i32, i32* %edx.global-to-local, align 4
  %v1_36389 = add i32 %v0_36389, 16
  %v2_36389 = inttoptr i32 %v1_36389 to i32*
  %v3_36389 = load i32, i32* %v2_36389, align 4
  store i32 %v3_36389, i32* %edx.global-to-local, align 4
  %v2_3638c = add i32 %v2_36367, 16
  %v3_3638c = inttoptr i32 %v2_3638c to i32*
  store i32 %v3_36389, i32* %v3_3638c, align 4
  br label %dec_label_pc_3638f

dec_label_pc_3638f:                               ; preds = %dec_label_pc_36370, %dec_label_pc_36337
  %v0_3638f = load i32, i32* @ebp, align 4
  %v1_3638f = add i32 %v0_3638f, -12
  %v2_3638f = inttoptr i32 %v1_3638f to i32*
  %v3_3638f = load i32, i32* %v2_3638f, align 4
  %v1_36392 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36392 = xor i32 %v1_36392, %v3_3638f
  ret i32 %v2_36392
}

define i32 @_ZN5boost6detail7variant12cast_storageI9CScriptIDEERKT_PKv(i32 %arg1) local_unnamed_addr {
dec_label_pc_363a2:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_363c8

bb:                                               ; preds = %dec_label_pc_363a2
  %v2_363c6 = call i32 @function_363cd(i32 %arg1)
  br label %dec_label_pc_363c8

dec_label_pc_363c8:                               ; preds = %bb, %dec_label_pc_363a2
  %v3_363c6 = phi i32 [ %v2_363c6, %bb ], [ %arg1, %dec_label_pc_363a2 ]
  ret i32 %v3_363c6
}

define i32 @function_363cd(i32 %arg1) local_unnamed_addr {
dec_label_pc_363cd:
  %v0_363ce = load i32, i32* @eax, align 4
  ret i32 %v0_363ce
}

define i32 @_ZNK5boost6detail7variant9copy_into14internal_visitI9CScriptIDEEvRKT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_363d0:
  %v2_363f6 = load i32, i32* %arg1, align 4
  %v2_36403 = call i32 @unknown_3f2bc(i32 20, i32 %v2_363f6)
  ret i32 %v2_36403
}

define i32 @function_3643c() local_unnamed_addr {
dec_label_pc_3643c:
  %v0_3643d = load i32, i32* @eax, align 4
  ret i32 %v0_3643d
}

define i32 @_ZSt10_ConstructIN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS0_6detail7variant5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_EES8_EvPT_RKT0_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3643e:
  ret i32 0
}

define i32 @function_36461(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36461:
  %v0_36461 = load i32, i32* @esi, align 4
  %v2_3646c = call i32 @unknown_3f32a(i32 24, i32 %v0_36461)
  %v1_36473 = icmp eq i32 %v2_3646c, 0
  br i1 %v1_36473, label %bb, label %dec_label_pc_36477

bb:                                               ; preds = %dec_label_pc_36461
  %v1_36475 = call i32 @function_364a0()
  br label %dec_label_pc_36477

dec_label_pc_36477:                               ; preds = %bb, %dec_label_pc_36461
  %v0_36477 = load i32, i32* @ebp, align 4
  %v1_36477 = add i32 %v0_36477, -48
  %v2_36477 = inttoptr i32 %v1_36477 to i32*
  %v3_36477 = load i32, i32* %v2_36477, align 4
  %v2_36481 = call i32 @unknown_4fd50(i32 %v2_3646c, i32 %v3_36477)
  %v0_36486 = call i32 @function_364a0()
  ret i32 %v0_36486

; uselistorder directives
  uselistorder i32 ()* @function_364a0, { 1, 0 }
}

define i32 @function_36482(i32 %arg1) local_unnamed_addr {
dec_label_pc_36482:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_364a0() local_unnamed_addr {
dec_label_pc_364a0:
  %v0_364a0 = load i32, i32* @ebp, align 4
  %v1_364a0 = add i32 %v0_364a0, -28
  %v2_364a0 = inttoptr i32 %v1_364a0 to i32*
  %v3_364a0 = load i32, i32* %v2_364a0, align 4
  %v1_364a3 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_364a3 = xor i32 %v1_364a3, %v3_364a0
  %v3_364a3 = icmp eq i32 %v2_364a3, 0
  store i32 %v2_364a3, i32* @eax, align 4
  br i1 %v3_364a3, label %bb, label %dec_label_pc_364ac

bb:                                               ; preds = %dec_label_pc_364a0
  %v1_364aa = call i32 @function_364b1()
  br label %dec_label_pc_364ac

dec_label_pc_364ac:                               ; preds = %bb, %dec_label_pc_364a0
  %v2_364aa = phi i32 [ %v1_364aa, %bb ], [ %v2_364a3, %dec_label_pc_364a0 ]
  ret i32 %v2_364aa
}

define i32 @function_364b1() local_unnamed_addr {
dec_label_pc_364b1:
  %v0_364b8 = load i32, i32* @eax, align 4
  ret i32 %v0_364b8
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv14CNoDestinationEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_364b9:
  %eax.global-to-local = alloca i32, align 4
  %v2_364ba = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_364ba
}

define i32 @function_3651b() local_unnamed_addr {
dec_label_pc_3651b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_3651b = load i32, i32* %ecx.global-to-local, align 4
  %v1_3651b = add i32 %v0_3651b, -1
  store i32 %v1_3651b, i32* %ecx.global-to-local, align 4
  %v0_3651d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3651d
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv6CKeyIDEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_3651e:
  %eax.global-to-local = alloca i32, align 4
  %v17_36521 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_36521
}

define i32 @function_36526(i32 %arg1) local_unnamed_addr {
dec_label_pc_36526:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36526 = load i32, i32* @ecx, align 4
  %v1_36526 = add i32 %v0_36526, 1166795845
  %v2_36526 = inttoptr i32 %v1_36526 to i8*
  %v3_36526 = load i8, i8* %v2_36526, align 1
  %v5_36526 = trunc i32 %v0_36526 to i8
  %v6_36526 = or i8 %v3_36526, %v5_36526
  store i8 %v6_36526, i8* %v2_36526, align 1
  %v0_3652c = load i32, i32* @eax, align 4
  %v2_3652c = or i32 %v0_3652c, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_3652c, i32* %eax.global-to-local, align 4
  %v0_3652e = load i32, i32* @ebp, align 4
  %v0_3652f = load i32, i32* @ecx, align 4
  %v1_3652f = add i32 %v0_3652f, -1
  store i32 %v1_3652f, i32* %ecx.global-to-local, align 4
  %v1_36531 = add i32 %v0_3652e, 2
  store i32 %v1_36531, i32* %ebp.global-to-local, align 4
  %v1_36532 = add i32 %v0_3652f, 1166793796
  %v2_36532 = inttoptr i32 %v1_36532 to i8*
  %v3_36532 = load i8, i8* %v2_36532, align 1
  %v5_36532 = trunc i32 %v1_3652f to i8
  %v8_36532 = add i8 %v3_36532, %v5_36532
  %v28_36532 = icmp ult i8 %v8_36532, %v3_36532
  store i1 %v28_36532, i1* %cf.global-to-local, align 1
  store i8 %v8_36532, i8* %v2_36532, align 1
  %v0_36538 = load i32, i32* %eax.global-to-local, align 4
  %v1_36538 = trunc i32 %v0_36538 to i8
  %v2_36538 = load i1, i1* %cf.global-to-local, align 1
  %v3_36538 = zext i1 %v2_36538 to i8
  %v4_36538 = add i8 %v1_36538, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_36538 = add i8 %v4_36538, %v3_36538
  %v20_36538 = add i8 %v1_36538, -119
  %v21_36538 = add i8 %v20_36538, %v3_36538
  %v22_36538 = icmp ule i8 %v21_36538, %v1_36538
  %v23_36538 = icmp ugt i8 %v1_36538, 118
  %v24_36538 = select i1 %v2_36538, i1 %v22_36538, i1 %v23_36538
  store i1 %v24_36538, i1* %cf.global-to-local, align 1
  %v25_36538 = zext i8 %v5_36538 to i32
  %v27_36538 = and i32 %v0_36538, -256
  %v28_36538 = or i32 %v25_36538, %v27_36538
  store i32 %v28_36538, i32* %eax.global-to-local, align 4
  %v0_3653a = load i32, i32* %ebp.global-to-local, align 4
  %v1_3653a = add i32 %v0_3653a, 1
  store i32 %v1_3653a, i32* @ebp, align 4
  %v1_3653f = add i32 %v28_36538, -1587161275
  %v2_3653f = inttoptr i32 %v1_3653f to i8*
  %v3_3653f = load i8, i8* %v2_3653f, align 1
  %v4_3653f = load i32, i32* %ecx.global-to-local, align 4
  %v5_3653f = trunc i32 %v4_3653f to i8
  %v7_3653f = zext i1 %v24_36538 to i8
  %v8_3653f = sub i8 %v3_3653f, %v5_3653f
  %v9_3653f = add i8 %v8_3653f, %v7_3653f
  %v19_3653f = sub i8 %v8_3653f, %v7_3653f
  %v20_3653f = icmp ult i8 %v3_3653f, %v19_3653f
  %v21_3653f = icmp ne i8 %v5_3653f, -1
  %v22_3653f = or i1 %v21_3653f, %v20_3653f
  %v23_3653f = icmp ult i8 %v3_3653f, %v5_3653f
  %v24_3653f = select i1 %v24_36538, i1 %v22_3653f, i1 %v23_3653f
  store i1 %v24_3653f, i1* %cf.global-to-local, align 1
  store i8 %v9_3653f, i8* %v2_3653f, align 1
  %v0_36545 = load i32, i32* %eax.global-to-local, align 4
  %v1_36545 = trunc i32 %v0_36545 to i8
  %v2_36545 = load i1, i1* %cf.global-to-local, align 1
  %v3_36545 = zext i1 %v2_36545 to i8
  %v4_36545 = add i8 %v3_36545, %v1_36545
  %v19_36545 = icmp ule i8 %v4_36545, %v1_36545
  %v21_36545 = icmp eq i1 %v2_36545, %v19_36545
  store i1 %v21_36545, i1* %cf.global-to-local, align 1
  %v22_36545 = zext i8 %v4_36545 to i32
  %v24_36545 = and i32 %v0_36545, -256
  %v25_36545 = or i32 %v22_36545, %v24_36545
  store i32 %v25_36545, i32* %eax.global-to-local, align 4
  %v1_36547 = inttoptr i32 %v25_36545 to i8*
  %v2_36547 = load i8, i8* %v1_36547, align 1
  %v5_36547 = add i8 %v2_36547, %v4_36545
  store i8 %v5_36547, i8* %v1_36547, align 1
  %v0_36549 = load i32, i32* %eax.global-to-local, align 4
  %v1_36549 = load i32, i32* @ebp, align 4
  %v2_36549 = add i32 %v1_36549, -12
  %v3_36549 = inttoptr i32 %v2_36549 to i32*
  store i32 %v0_36549, i32* %v3_36549, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_3654e = load i32, i32* @ebp, align 4
  %v1_3654e = add i32 %v0_3654e, -36
  %v2_3654e = inttoptr i32 %v1_3654e to i32*
  %v3_3654e = load i32, i32* %v2_3654e, align 4
  store i32 %v3_3654e, i32* %eax.global-to-local, align 4
  %v1_36554 = call i32 @unknown_6c825(i32 %v3_3654e)
  store i32 %v1_36554, i32* %eax.global-to-local, align 4
  %v0_36565 = load i32, i32* @ebp, align 4
  %v1_36565 = add i32 %v0_36565, -32
  %v2_36565 = inttoptr i32 %v1_36565 to i32*
  %v3_36565 = load i32, i32* %v2_36565, align 4
  store i32 %v3_36565, i32* %eax.global-to-local, align 4
  %v3_3656b = call i32 @unknown_6d734(i32 %v3_36565, i32 %v1_36554, i32 1)
  store i32 %v3_3656b, i32* %eax.global-to-local, align 4
  %v0_36570 = load i32, i32* @ebp, align 4
  %v1_36570 = add i32 %v0_36570, -12
  %v2_36570 = inttoptr i32 %v1_36570 to i32*
  %v3_36570 = load i32, i32* %v2_36570, align 4
  store i32 %v3_36570, i32* %eax.global-to-local, align 4
  %v1_36573 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36573 = xor i32 %v1_36573, %v3_36570
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_36573 = icmp eq i32 %v2_36573, 0
  store i32 %v2_36573, i32* @eax, align 4
  br i1 %v3_36573, label %bb, label %dec_label_pc_3657c

bb:                                               ; preds = %dec_label_pc_36526
  %v1_3657a = call i32 @function_36581()
  store i32 %v1_3657a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3657c

dec_label_pc_3657c:                               ; preds = %bb, %dec_label_pc_36526
  %v3_3657a = phi i32 [ %v1_3657a, %bb ], [ %v2_36573, %dec_label_pc_36526 ]
  ret i32 %v3_3657a

; uselistorder directives
  uselistorder i8 %v4_36545, { 0, 2, 1 }
  uselistorder i8 %v1_36545, { 1, 0 }
  uselistorder i8 %v8_3653f, { 1, 0 }
  uselistorder i8 %v7_3653f, { 1, 0 }
  uselistorder i8 %v5_3653f, { 1, 0, 2 }
  uselistorder i1 %v24_36538, { 1, 0, 2 }
  uselistorder i8 %v3_36532, { 1, 0 }
}

define i32 @function_36581() local_unnamed_addr {
dec_label_pc_36581:
  %v0_36582 = load i32, i32* @eax, align 4
  ret i32 %v0_36582
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorI20CAffectedKeysVisitorEEPKv9CScriptIDEENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36583:
  %v1_365b9 = call i32 @unknown_6c925(i32 %arg3)
  %v3_365d0 = call i32 @unknown_6d7e3(i32 %arg2, i32 %v1_365b9, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_365e1

bb:                                               ; preds = %dec_label_pc_36583
  %v1_365df = call i32 @function_365e6()
  br label %dec_label_pc_365e1

dec_label_pc_365e1:                               ; preds = %bb, %dec_label_pc_36583
  %v2_365df = phi i32 [ %v1_365df, %bb ], [ 0, %dec_label_pc_36583 ]
  ret i32 %v2_365df
}

define i32 @function_365e6() local_unnamed_addr {
dec_label_pc_365e6:
  %v0_365e7 = load i32, i32* @eax, align 4
  ret i32 %v0_365e7
}

define i32 @_ZSt10_ConstructI6CKeyIDS0_EvPT_RKT0_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_365e8:
  %edx.global-to-local = alloca i32, align 4
  %v2_36613 = call i32 @unknown_3f4d4(i32 20, i32 %arg1)
  %v1_36618 = icmp eq i32 %v2_36613, 0
  br i1 %v1_36618, label %dec_label_pc_3663b, label %dec_label_pc_3661c

dec_label_pc_3661c:                               ; preds = %dec_label_pc_365e8
  %tmp102 = ptrtoint i32* %arg2 to i32
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_3661f = load i32, i32* %arg2, align 4
  %v2_36621 = inttoptr i32 %v2_36613 to i32*
  store i32 %v2_3661f, i32* %v2_36621, align 4
  %v0_36623 = load i32, i32* %edx.global-to-local, align 4
  %v1_36623 = add i32 %v0_36623, 4
  %v2_36623 = inttoptr i32 %v1_36623 to i32*
  %v3_36623 = load i32, i32* %v2_36623, align 4
  %v2_36626 = add i32 %v2_36613, 4
  %v3_36626 = inttoptr i32 %v2_36626 to i32*
  store i32 %v3_36623, i32* %v3_36626, align 4
  %v0_36629 = load i32, i32* %edx.global-to-local, align 4
  %v1_36629 = add i32 %v0_36629, 8
  %v2_36629 = inttoptr i32 %v1_36629 to i32*
  %v3_36629 = load i32, i32* %v2_36629, align 4
  %v2_3662c = add i32 %v2_36613, 8
  %v3_3662c = inttoptr i32 %v2_3662c to i32*
  store i32 %v3_36629, i32* %v3_3662c, align 4
  %v0_3662f = load i32, i32* %edx.global-to-local, align 4
  %v1_3662f = add i32 %v0_3662f, 12
  %v2_3662f = inttoptr i32 %v1_3662f to i32*
  %v3_3662f = load i32, i32* %v2_3662f, align 4
  %v2_36632 = add i32 %v2_36613, 12
  %v3_36632 = inttoptr i32 %v2_36632 to i32*
  store i32 %v3_3662f, i32* %v3_36632, align 4
  %v0_36635 = load i32, i32* %edx.global-to-local, align 4
  %v1_36635 = add i32 %v0_36635, 16
  %v2_36635 = inttoptr i32 %v1_36635 to i32*
  %v3_36635 = load i32, i32* %v2_36635, align 4
  store i32 %v3_36635, i32* %edx.global-to-local, align 4
  %v2_36638 = add i32 %v2_36613, 16
  %v3_36638 = inttoptr i32 %v2_36638 to i32*
  store i32 %v3_36635, i32* %v3_36638, align 4
  br label %dec_label_pc_3663b

dec_label_pc_3663b:                               ; preds = %dec_label_pc_365e8, %dec_label_pc_3661c
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36647

bb:                                               ; preds = %dec_label_pc_3663b
  %v1_36645 = call i32 @function_3664c()
  br label %dec_label_pc_36647

dec_label_pc_36647:                               ; preds = %bb, %dec_label_pc_3663b
  %v2_36645 = phi i32 [ %v1_36645, %bb ], [ 0, %dec_label_pc_3663b ]
  ret i32 %v2_36645

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_3663b, { 1, 0 }
}

define i32 @function_3664c() local_unnamed_addr {
dec_label_pc_3664c:
  %v0_3664d = load i32, i32* @eax, align 4
  ret i32 %v0_3664d
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIhSaIhEEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3664e:
  store i32 153391689, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36676

bb:                                               ; preds = %dec_label_pc_3664e
  %v2_36674 = call i32 @function_3667b(i32 %arg1)
  br label %dec_label_pc_36676

dec_label_pc_36676:                               ; preds = %bb, %dec_label_pc_3664e
  %v3_36674 = phi i32 [ %v2_36674, %bb ], [ 153391689, %dec_label_pc_3664e ]
  ret i32 %v3_36674
}

define i32 @function_3667b(i32 %arg1) local_unnamed_addr {
dec_label_pc_3667b:
  %v0_3667c = load i32, i32* @eax, align 4
  ret i32 %v0_3667c
}

define i32 @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES5_EEE8allocateEjPKv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3667e:
  ret i32 %arg1
}

define i32 @function_366a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_366a8:
  %v0_366aa = load i32, i32* @eax, align 4
  %v4_366aa = mul i32 %v0_366aa, 2
  %v1_366ac = load i32, i32* @ebp, align 4
  %v2_366ac = add i32 %v1_366ac, -32
  %v3_366ac = inttoptr i32 %v2_366ac to i32*
  %v4_366ac = load i32, i32* %v3_366ac, align 4
  %v10_366ac = icmp ult i32 %v4_366aa, %v4_366ac
  %v1_366af = zext i1 %v10_366ac to i32
  %v3_366af = and i32 %v4_366aa, -256
  %v4_366af = or i32 %v1_366af, %v3_366af
  %v5_366b2 = icmp eq i1 %v10_366ac, false
  br i1 %v5_366b2, label %bb, label %dec_label_pc_366b6

bb:                                               ; preds = %dec_label_pc_366a8
  %v1_366b4 = call i32 @function_366bb()
  br label %dec_label_pc_366b6

dec_label_pc_366b6:                               ; preds = %bb, %dec_label_pc_366a8
  %v4_366b4 = phi i32 [ %v1_366b4, %bb ], [ %v4_366af, %dec_label_pc_366a8 ]
  ret i32 %v4_366b4

; uselistorder directives
  uselistorder i1 %v10_366ac, { 1, 0 }
  uselistorder i32 %v4_366aa, { 1, 0 }
}

define i32 @function_366bb() local_unnamed_addr {
dec_label_pc_366bb:
  %v0_366bb = load i32, i32* @ebp, align 4
  %v1_366bb = add i32 %v0_366bb, -32
  %v2_366bb = inttoptr i32 %v1_366bb to i32*
  %v3_366bb = load i32, i32* %v2_366bb, align 4
  %v2_366c5 = mul i32 %v3_366bb, 40
  ret i32 %v2_366c5

; uselistorder directives
  uselistorder i32 40, { 0, 2, 3, 4, 1 }
}

define i32 @function_366d6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_366d6:
  %zf.global-to-local = alloca i1, align 1
  %v0_366d6 = load i32, i32* @eax, align 4
  %v1_366d6 = trunc i32 %v0_366d6 to i8
  %v2_366d6 = load i1, i1* @cf, align 1
  %v3_366d6 = zext i1 %v2_366d6 to i8
  %v4_366d6 = add i8 %v3_366d6, %v1_366d6
  %v13_366d6 = icmp eq i8 %v4_366d6, 0
  store i1 %v13_366d6, i1* %zf.global-to-local, align 1
  %v22_366d6 = zext i8 %v4_366d6 to i32
  %v24_366d6 = and i32 %v0_366d6, -256
  %v25_366d6 = or i32 %v22_366d6, %v24_366d6
  store i32 %v25_366d6, i32* @eax, align 4
  %v1_366d8 = inttoptr i32 %v25_366d6 to i8*
  %v2_366d8 = load i8, i8* %v1_366d8, align 1
  %v5_366d8 = add i8 %v2_366d8, %v4_366d6
  %v15_366d8 = icmp eq i8 %v5_366d8, 0
  store i1 %v15_366d8, i1* %zf.global-to-local, align 1
  store i8 %v5_366d8, i8* %v1_366d8, align 1
  %v0_366da = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_366da, label %bb, label %dec_label_pc_366d6.dec_label_pc_366dc_crit_edge

dec_label_pc_366d6.dec_label_pc_366dc_crit_edge:  ; preds = %dec_label_pc_366d6
  %v2_366da.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_366dc

bb:                                               ; preds = %dec_label_pc_366d6
  %v1_366da = call i32 @function_366e1()
  br label %dec_label_pc_366dc

dec_label_pc_366dc:                               ; preds = %dec_label_pc_366d6.dec_label_pc_366dc_crit_edge, %bb
  %v2_366da = phi i32 [ %v2_366da.pre, %dec_label_pc_366d6.dec_label_pc_366dc_crit_edge ], [ %v1_366da, %bb ]
  ret i32 %v2_366da

; uselistorder directives
  uselistorder label %dec_label_pc_366dc, { 1, 0 }
}

define i32 @function_366e1() local_unnamed_addr {
dec_label_pc_366e1:
  %v0_366e2 = load i32, i32* @eax, align 4
  ret i32 %v0_366e2
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK14CScriptVisitorEEPKv14CNoDestinationEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_366e3:
  ret i32 %arg3
}

define i32 @function_36745() local_unnamed_addr {
dec_label_pc_36745:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36745 = load i32, i32* %ecx.global-to-local, align 4
  %v1_36745 = add i32 %v0_36745, -1
  store i32 %v1_36745, i32* %ecx.global-to-local, align 4
  %v0_36747 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_36747
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK14CScriptVisitorEEPKv6CKeyIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_36748:
  %eax.global-to-local = alloca i32, align 4
  %v17_3674b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_3674b
}

define i32 @function_3674e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3674e:
  %v0_3674e = load i32, i32* @ebp, align 4
  %v1_3674e = add i32 %v0_3674e, 8
  %v2_3674e = inttoptr i32 %v1_3674e to i32*
  %v3_3674e = load i32, i32* %v2_3674e, align 4
  %v2_36751 = add i32 %v0_3674e, -28
  %v3_36751 = inttoptr i32 %v2_36751 to i32*
  store i32 %v3_3674e, i32* %v3_36751, align 4
  %v0_36754 = load i32, i32* @ebp, align 4
  %v1_36754 = add i32 %v0_36754, 12
  %v2_36754 = inttoptr i32 %v1_36754 to i32*
  %v3_36754 = load i32, i32* %v2_36754, align 4
  %v2_36757 = add i32 %v0_36754, -32
  %v3_36757 = inttoptr i32 %v2_36757 to i32*
  store i32 %v3_36754, i32* %v3_36757, align 4
  %v0_3675a = load i32, i32* @ebp, align 4
  %v1_3675a = add i32 %v0_3675a, 16
  %v2_3675a = inttoptr i32 %v1_3675a to i32*
  %v3_3675a = load i32, i32* %v2_3675a, align 4
  %v2_3675d = add i32 %v0_3675a, -36
  %v3_3675d = inttoptr i32 %v2_3675d to i32*
  store i32 %v3_3675a, i32* %v3_3675d, align 4
  %v0_36760 = load i32, i32* @ebp, align 4
  %v1_36760 = add i32 %v0_36760, 20
  %v2_36760 = inttoptr i32 %v1_36760 to i32*
  %v3_36760 = load i32, i32* %v2_36760, align 4
  %v2_36763 = add i32 %v0_36760, -40
  %v3_36763 = inttoptr i32 %v2_36763 to i32*
  store i32 %v3_36760, i32* %v3_36763, align 4
  %v0_36766 = load i32, i32* @ebp, align 4
  %v1_36766 = add i32 %v0_36766, 24
  %v2_36766 = inttoptr i32 %v1_36766 to i8*
  %v3_36766 = load i8, i8* %v2_36766, align 1
  %v3_3676a = add i32 %v0_36766, -41
  %v4_3676a = inttoptr i32 %v3_3676a to i8*
  store i8 %v3_36766, i8* %v4_3676a, align 1
  %v0_3676d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3676d
}

define i32 @function_36773(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36773:
  %v0_36773 = load i32, i32* @eax, align 4
  %v1_36773 = load i32, i32* @ebp, align 4
  %v2_36773 = add i32 %v1_36773, -12
  %v3_36773 = inttoptr i32 %v2_36773 to i32*
  store i32 %v0_36773, i32* %v3_36773, align 4
  %v0_36778 = load i32, i32* @ebp, align 4
  %v1_36778 = add i32 %v0_36778, -36
  %v2_36778 = inttoptr i32 %v1_36778 to i32*
  %v3_36778 = load i32, i32* %v2_36778, align 4
  %v1_3677e = call i32 @unknown_6ca4f(i32 %v3_36778)
  %v0_3678f = load i32, i32* @ebp, align 4
  %v1_3678f = add i32 %v0_3678f, -32
  %v2_3678f = inttoptr i32 %v1_3678f to i32*
  %v3_3678f = load i32, i32* %v2_3678f, align 4
  %v3_36795 = call i32 @unknown_6da6c(i32 %v3_3678f, i32 %v1_3677e, i32 1)
  store i32 %v3_36795, i32* @eax, align 4
  %v0_3679a = load i32, i32* @ebp, align 4
  %v1_3679a = add i32 %v0_3679a, -12
  %v2_3679a = inttoptr i32 %v1_3679a to i32*
  %v3_3679a = load i32, i32* %v2_3679a, align 4
  %v1_3679d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3679d = icmp eq i32 %v1_3679d, %v3_3679a
  br i1 %v3_3679d, label %bb, label %dec_label_pc_367a6

bb:                                               ; preds = %dec_label_pc_36773
  %v1_367a4 = call i32 @function_367ab()
  br label %dec_label_pc_367a6

dec_label_pc_367a6:                               ; preds = %bb, %dec_label_pc_36773
  %v2_367a4 = phi i32 [ %v1_367a4, %bb ], [ %v3_36795, %dec_label_pc_36773 ]
  ret i32 %v2_367a4
}

define i32 @function_367ab() local_unnamed_addr {
dec_label_pc_367ab:
  %v0_367ac = load i32, i32* @eax, align 4
  ret i32 %v0_367ac
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorIK14CScriptVisitorEEPKv9CScriptIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_367ad:
  %v1_367e3 = call i32 @unknown_6cb4f(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_367fe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_367fe:
  %cf.global-to-local = alloca i1, align 1
  %v0_367fe = load i32, i32* @ebx, align 4
  %v1_367fe = add i32 %v0_367fe, 862319701
  %v2_367fe = inttoptr i32 %v1_367fe to i8*
  %v3_367fe = load i8, i8* %v2_367fe, align 1
  %v4_367fe = load i32, i32* @ecx, align 4
  %v5_367fe = trunc i32 %v4_367fe to i8
  %v6_367fe = add i8 %v5_367fe, %v3_367fe
  %v11_367fe = icmp ult i8 %v6_367fe, %v3_367fe
  store i1 %v11_367fe, i1* %cf.global-to-local, align 1
  store i8 %v6_367fe, i8* %v2_367fe, align 1
  %v0_36804 = load i32, i32* @eax, align 4
  %v1_36804 = load i1, i1* %cf.global-to-local, align 1
  %v2_36804 = zext i1 %v1_36804 to i32
  %v3_36804 = add i32 %v0_36804, 20
  %v4_36804 = add i32 %v3_36804, %v2_36804
  %v14_36804 = icmp eq i32 %v4_36804, 0
  %v22_36804 = icmp ule i32 %v4_36804, %v0_36804
  %v23_36804 = icmp ugt i32 %v0_36804, -21
  %v24_36804 = select i1 %v1_36804, i1 %v22_36804, i1 %v23_36804
  store i1 %v24_36804, i1* %cf.global-to-local, align 1
  store i32 %v4_36804, i32* @eax, align 4
  br i1 %v14_36804, label %bb, label %dec_label_pc_3680b

bb:                                               ; preds = %dec_label_pc_367fe
  %v1_36809 = call i32 @function_36810()
  br label %dec_label_pc_3680b

dec_label_pc_3680b:                               ; preds = %bb, %dec_label_pc_367fe
  %v2_36809 = phi i32 [ %v1_36809, %bb ], [ %v4_36804, %dec_label_pc_367fe ]
  ret i32 %v2_36809

; uselistorder directives
  uselistorder i32 %v4_36804, { 0, 2, 1, 3 }
  uselistorder i8 %v3_367fe, { 1, 0 }
}

define i32 @function_36810() local_unnamed_addr {
dec_label_pc_36810:
  %v0_36811 = load i32, i32* @eax, align 4
  ret i32 %v0_36811
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKjiEEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36812:
  ret i32 %arg1
}

define i32 @function_3681e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3681e:
  %v0_3681e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36824 = load i32, i32* @ebp, align 4
  %v2_36824 = add i32 %v1_36824, -12
  %v3_36824 = inttoptr i32 %v2_36824 to i32*
  store i32 %v0_3681e, i32* %v3_36824, align 4
  store i32 178956970, i32* @eax, align 4
  %v0_3682e = load i32, i32* @ebp, align 4
  %v1_3682e = add i32 %v0_3682e, -12
  %v2_3682e = inttoptr i32 %v1_3682e to i32*
  %v3_3682e = load i32, i32* %v2_3682e, align 4
  %v1_36831 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36831 = icmp eq i32 %v1_36831, %v3_3682e
  br i1 %v3_36831, label %bb, label %dec_label_pc_3683a

bb:                                               ; preds = %dec_label_pc_3681e
  %v1_36838 = call i32 @function_3683f()
  br label %dec_label_pc_3683a

dec_label_pc_3683a:                               ; preds = %bb, %dec_label_pc_3681e
  %v2_36838 = phi i32 [ %v1_36838, %bb ], [ 178956970, %dec_label_pc_3681e ]
  ret i32 %v2_36838

; uselistorder directives
  uselistorder i32 178956970, { 0, 2, 1, 3 }
}

define i32 @function_3683f() local_unnamed_addr {
dec_label_pc_3683f:
  %v0_36840 = load i32, i32* @eax, align 4
  ret i32 %v0_36840
}

define i32 @_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36841:
  %v1_3686c = call i32 @unknown_5fa2b(i32 %arg3)
  %v1_36879 = call i32 @unknown_688f0(i32 %arg2)
  %v1_36886 = call i32 @unknown_688f0(i32 %arg1)
  %v3_36896 = call i32 @unknown_5f97b(i32 %v1_36886, i32 %v1_36879, i32 %v1_3686c)
  store i32 %v3_36896, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_368a7

bb:                                               ; preds = %dec_label_pc_36841
  %v1_368a5 = call i32 @function_368ac()
  br label %dec_label_pc_368a7

dec_label_pc_368a7:                               ; preds = %bb, %dec_label_pc_36841
  %v2_368a5 = phi i32 [ %v1_368a5, %bb ], [ %v3_36896, %dec_label_pc_36841 ]
  ret i32 %v2_368a5

; uselistorder directives
  uselistorder i32 (i32)* @unknown_688f0, { 1, 0 }
}

define i32 @function_368ac() local_unnamed_addr {
dec_label_pc_368ac:
  %v0_368b2 = load i32, i32* @eax, align 4
  ret i32 %v0_368b2
}

define i32 @_ZNK5CTxIn9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_368b4:
  ret i32 0
}

define i32 @function_368e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_368e0:
  %edx.global-to-local = alloca i32, align 4
  %v0_368e0 = load i32, i32* @ebp, align 4
  %v0_368e2 = load i32, i32* @edx, align 4
  %v3_368e2 = load i32, i32* @eax, align 4
  %v5_368e24 = mul i32 %v3_368e2, 256
  %v1_368e25 = add i32 %v5_368e24, %v0_368e2
  %v22_368e2 = and i32 %v1_368e25, 65280
  %v23_368e2 = and i32 %v0_368e2, -65281
  %v24_368e2 = or i32 %v22_368e2, %v23_368e2
  store i32 %v24_368e2, i32* %edx.global-to-local, align 4
  %v0_368e5 = load i32, i32* @esi, align 4
  %v2_368e5 = add i32 %v0_368e5, %v3_368e2
  store i32 %v2_368e5, i32* @esi, align 4
  %v0_368e9 = load i32, i32* @ebx, align 4
  %v1_368e97 = add i32 %v0_368e9, %v5_368e24
  %v22_368e9 = and i32 %v1_368e97, 65280
  %v23_368e9 = and i32 %v0_368e9, -65281
  %v24_368e9 = or i32 %v22_368e9, %v23_368e9
  store i32 %v24_368e9, i32* @ebx, align 4
  %v1_368ec = add i32 %v0_368e0, 4
  store i32 %v1_368ec, i32* @ebp, align 4
  %tmp12 = trunc i32 %v3_368e2 to i8
  %v5_368ee = mul i8 %tmp12, 2
  %v21_368ee = inttoptr i32 %v3_368e2 to i8*
  store i8 %v5_368ee, i8* %v21_368ee, align 1
  %v2_368f0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_368f0 = load i32, i32* @eax, align 4
  %v4_368f0 = trunc i32 %v3_368f0 to i8
  %v5_368f0 = add i8 %v4_368f0, %v2_368f0
  %v21_368f0 = inttoptr i32 %v3_368f0 to i8*
  store i8 %v5_368f0, i8* %v21_368f0, align 1
  %v0_368f2 = load i32, i32* @ebp, align 4
  %v1_368f2 = add i32 %v0_368f2, -28
  %v2_368f2 = inttoptr i32 %v1_368f2 to i32*
  %v3_368f2 = load i32, i32* %v2_368f2, align 4
  %v0_368f5 = load i32, i32* %edx.global-to-local, align 4
  %v1_368f9 = add i32 %v0_368f2, -40
  %v2_368f9 = inttoptr i32 %v1_368f9 to i32*
  %v3_368f9 = load i32, i32* %v2_368f9, align 4
  store i32 %v3_368f9, i32* %edx.global-to-local, align 4
  %v1_36900 = add i32 %v0_368f2, -36
  %v2_36900 = inttoptr i32 %v1_36900 to i32*
  %v3_36900 = load i32, i32* %v2_36900, align 4
  store i32 %v3_36900, i32* %edx.global-to-local, align 4
  %v1_3690b = add i32 %v0_368f2, -32
  %v2_3690b = inttoptr i32 %v1_3690b to i32*
  %v3_3690b = load i32, i32* %v2_3690b, align 4
  %sext = mul i32 %v0_368f5, 16777216
  %v5_36911 = sdiv i32 %sext, 16777216
  %v6_36911 = call i32 @unknown_6dc6c(i32 %v3_3690b, i32 %v3_368f2, i32 %v3_36900, i32 %v3_368f9, i32 %v5_36911)
  %v0_36916 = load i32, i32* @ebp, align 4
  %v1_36916 = add i32 %v0_36916, -20
  %v2_36916 = inttoptr i32 %v1_36916 to i32*
  %v3_36916 = load i32, i32* %v2_36916, align 4
  %v5_36916 = add i32 %v3_36916, %v6_36911
  store i32 %v5_36916, i32* %v2_36916, align 4
  %v0_36919 = load i32, i32* @ebp, align 4
  %v1_36919 = add i32 %v0_36919, -28
  %v2_36919 = inttoptr i32 %v1_36919 to i32*
  %v3_36919 = load i32, i32* %v2_36919, align 4
  %v1_3691c = add i32 %v3_36919, 36
  store i32 %v1_3691c, i32* %edx.global-to-local, align 4
  %v0_3691f = load i32, i32* @esi, align 4
  %v1_36925 = add i32 %v0_36919, -40
  %v2_36925 = inttoptr i32 %v1_36925 to i32*
  %v3_36925 = load i32, i32* %v2_36925, align 4
  %v1_3692c = add i32 %v0_36919, -36
  %v2_3692c = inttoptr i32 %v1_3692c to i32*
  %v3_3692c = load i32, i32* %v2_3692c, align 4
  %v1_36937 = add i32 %v0_36919, -32
  %v2_36937 = inttoptr i32 %v1_36937 to i32*
  %v3_36937 = load i32, i32* %v2_36937, align 4
  %sext1 = mul i32 %v0_3691f, 16777216
  %v5_3693d = sdiv i32 %sext1, 16777216
  %v6_3693d = call i32 @unknown_6dcd4(i32 %v3_36937, i32 %v1_3691c, i32 %v3_3692c, i32 %v3_36925, i32 %v5_3693d)
  %v0_36942 = load i32, i32* @ebp, align 4
  %v1_36942 = add i32 %v0_36942, -20
  %v2_36942 = inttoptr i32 %v1_36942 to i32*
  %v3_36942 = load i32, i32* %v2_36942, align 4
  %v5_36942 = add i32 %v3_36942, %v6_3693d
  store i32 %v5_36942, i32* %v2_36942, align 4
  %v0_36945 = load i32, i32* @ebp, align 4
  %v1_36945 = add i32 %v0_36945, -28
  %v2_36945 = inttoptr i32 %v1_36945 to i32*
  %v3_36945 = load i32, i32* %v2_36945, align 4
  %v1_36948 = add i32 %v3_36945, 48
  store i32 %v1_36948, i32* %edx.global-to-local, align 4
  %v0_3694b = load i32, i32* @ebx, align 4
  %v1_3694f = add i32 %v0_36945, -40
  %v2_3694f = inttoptr i32 %v1_3694f to i32*
  %v3_3694f = load i32, i32* %v2_3694f, align 4
  %v1_36956 = add i32 %v0_36945, -36
  %v2_36956 = inttoptr i32 %v1_36956 to i32*
  %v3_36956 = load i32, i32* %v2_36956, align 4
  %v1_36961 = add i32 %v0_36945, -32
  %v2_36961 = inttoptr i32 %v1_36961 to i32*
  %v3_36961 = load i32, i32* %v2_36961, align 4
  %sext2 = mul i32 %v0_3694b, 16777216
  %v5_36967 = sdiv i32 %sext2, 16777216
  %v6_36967 = call i32 @unknown_61af5(i32 %v3_36961, i32 %v1_36948, i32 %v3_36956, i32 %v3_3694f, i32 %v5_36967)
  %v0_3696c = load i32, i32* @ebp, align 4
  %v1_3696c = add i32 %v0_3696c, -20
  %v2_3696c = inttoptr i32 %v1_3696c to i32*
  %v3_3696c = load i32, i32* %v2_3696c, align 4
  %v5_3696c = add i32 %v3_3696c, %v6_36967
  store i32 %v5_3696c, i32* %v2_3696c, align 4
  %v0_3696f = load i32, i32* @ebp, align 4
  %v1_3696f = add i32 %v0_3696f, -12
  %v2_3696f = inttoptr i32 %v1_3696f to i32*
  %v3_3696f = load i32, i32* %v2_3696f, align 4
  %v1_36972 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36972 = xor i32 %v1_36972, %v3_3696f
  %v3_36972 = icmp eq i32 %v2_36972, 0
  store i32 %v2_36972, i32* @eax, align 4
  br i1 %v3_36972, label %bb, label %dec_label_pc_3697b

bb:                                               ; preds = %dec_label_pc_368e0
  %v1_36979 = call i32 @function_36980()
  br label %dec_label_pc_3697b

dec_label_pc_3697b:                               ; preds = %bb, %dec_label_pc_368e0
  %v3_36979 = phi i32 [ %v1_36979, %bb ], [ %v2_36972, %dec_label_pc_368e0 ]
  ret i32 %v3_36979

; uselistorder directives
  uselistorder i32 %v0_36945, { 0, 2, 1, 3 }
  uselistorder i32 %v0_36919, { 0, 2, 1, 3 }
  uselistorder i32 %v0_368f2, { 0, 2, 1, 3 }
  uselistorder i32 %v0_368e9, { 1, 0 }
  uselistorder i32 %v5_368e24, { 1, 0 }
  uselistorder i32 %v3_368e2, { 1, 2, 3, 0 }
  uselistorder i32 %v0_368e2, { 1, 0 }
  uselistorder i32 48, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 2, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20, 1, 2, 3, 4, 5 }
  uselistorder i32 -65281, { 8, 9, 3, 4, 5, 6, 10, 7, 1, 2, 0 }
  uselistorder i32 65280, { 1, 2, 3, 4, 5, 6, 0 }
}

define i32 @function_36980() local_unnamed_addr {
dec_label_pc_36980:
  %v0_36986 = load i32, i32* @eax, align 4
  ret i32 %v0_36986
}

define i32 @_ZNK6CTxOut9SerializeI11CHashWriterEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36988:
  ret i32 %arg4
}

define i32 @function_369aa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_369aa:
  %v2_369aa = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_369aa = load i32, i32* @eax, align 4
  %v4_369aa = trunc i32 %v3_369aa to i8
  %v5_369aa = add i8 %v4_369aa, %v2_369aa
  %v21_369aa = inttoptr i32 %v3_369aa to i8*
  store i8 %v5_369aa, i8* %v21_369aa, align 1
  %v0_369ac = load i32, i32* @ecx, align 4
  %v1_369ac = add i32 %v0_369ac, -1070468027
  %v2_369ac = inttoptr i32 %v1_369ac to i8*
  %v3_369ac = load i8, i8* %v2_369ac, align 1
  %v5_369ac = trunc i32 %v0_369ac to i8
  %v6_369ac = add i8 %v3_369ac, %v5_369ac
  store i8 %v6_369ac, i8* %v2_369ac, align 1
  %v0_369b2 = load i32, i32* @ebp, align 4
  %v1_369b2 = add i32 %v0_369b2, -15
  %v2_369b2 = inttoptr i32 %v1_369b2 to i8*
  store i8 0, i8* %v2_369b2, align 1
  %v0_369b6 = load i32, i32* @ebp, align 4
  %v1_369b6 = add i32 %v0_369b6, -14
  %v2_369b6 = inttoptr i32 %v1_369b6 to i8*
  store i8 1, i8* %v2_369b6, align 1
  %v0_369ba = load i32, i32* @ebp, align 4
  %v1_369ba = add i32 %v0_369ba, -13
  %v2_369ba = inttoptr i32 %v1_369ba to i8*
  store i8 0, i8* %v2_369ba, align 1
  %v0_369be = load i32, i32* @ebp, align 4
  %v1_369be = add i32 %v0_369be, -20
  %v2_369be = inttoptr i32 %v1_369be to i32*
  store i32 0, i32* %v2_369be, align 4
  %v0_369c5 = load i32, i32* @ebp, align 4
  %v1_369c5 = add i32 %v0_369c5, -28
  %v2_369c5 = inttoptr i32 %v1_369c5 to i32*
  %v3_369c5 = load i32, i32* %v2_369c5, align 4
  %v0_369c8 = load i32, i32* @edx, align 4
  %v1_369cc = add i32 %v0_369c5, -40
  %v2_369cc = inttoptr i32 %v1_369cc to i32*
  %v3_369cc = load i32, i32* %v2_369cc, align 4
  %v1_369d3 = add i32 %v0_369c5, -36
  %v2_369d3 = inttoptr i32 %v1_369d3 to i32*
  %v3_369d3 = load i32, i32* %v2_369d3, align 4
  %v1_369de = add i32 %v0_369c5, -32
  %v2_369de = inttoptr i32 %v1_369de to i32*
  %v3_369de = load i32, i32* %v2_369de, align 4
  %sext = mul i32 %v0_369c8, 16777216
  %v5_369e4 = sdiv i32 %sext, 16777216
  %v6_369e4 = call i32 @unknown_6de10(i32 %v3_369de, i32 %v3_369c5, i32 %v3_369d3, i32 %v3_369cc, i32 %v5_369e4)
  %v0_369e9 = load i32, i32* @ebp, align 4
  %v1_369e9 = add i32 %v0_369e9, -20
  %v2_369e9 = inttoptr i32 %v1_369e9 to i32*
  %v3_369e9 = load i32, i32* %v2_369e9, align 4
  %v5_369e9 = add i32 %v3_369e9, %v6_369e4
  store i32 %v5_369e9, i32* %v2_369e9, align 4
  %v0_369ec = load i32, i32* @ebp, align 4
  %v1_369ec = add i32 %v0_369ec, -28
  %v2_369ec = inttoptr i32 %v1_369ec to i32*
  %v3_369ec = load i32, i32* %v2_369ec, align 4
  %v1_369ef = add i32 %v3_369ec, 8
  store i32 %v1_369ef, i32* @edx, align 4
  %v0_369f2 = load i32, i32* @ebx, align 4
  %v1_369f6 = add i32 %v0_369ec, -40
  %v2_369f6 = inttoptr i32 %v1_369f6 to i32*
  %v3_369f6 = load i32, i32* %v2_369f6, align 4
  %v1_369fd = add i32 %v0_369ec, -36
  %v2_369fd = inttoptr i32 %v1_369fd to i32*
  %v3_369fd = load i32, i32* %v2_369fd, align 4
  %v1_36a08 = add i32 %v0_369ec, -32
  %v2_36a08 = inttoptr i32 %v1_36a08 to i32*
  %v3_36a08 = load i32, i32* %v2_36a08, align 4
  %sext1 = mul i32 %v0_369f2, 16777216
  %v5_36a0e = sdiv i32 %sext1, 16777216
  %v6_36a0e = call i32 @unknown_6dda8(i32 %v3_36a08, i32 %v1_369ef, i32 %v3_369fd, i32 %v3_369f6, i32 %v5_36a0e)
  %v0_36a13 = load i32, i32* @ebp, align 4
  %v1_36a13 = add i32 %v0_36a13, -20
  %v2_36a13 = inttoptr i32 %v1_36a13 to i32*
  %v3_36a13 = load i32, i32* %v2_36a13, align 4
  %v5_36a13 = add i32 %v3_36a13, %v6_36a0e
  store i32 %v5_36a13, i32* %v2_36a13, align 4
  %v0_36a16 = load i32, i32* @ebp, align 4
  %v1_36a16 = add i32 %v0_36a16, -12
  %v2_36a16 = inttoptr i32 %v1_36a16 to i32*
  %v3_36a16 = load i32, i32* %v2_36a16, align 4
  %v1_36a19 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36a19 = xor i32 %v1_36a19, %v3_36a16
  %v3_36a19 = icmp eq i32 %v2_36a19, 0
  store i32 %v2_36a19, i32* @eax, align 4
  br i1 %v3_36a19, label %bb, label %dec_label_pc_36a22

bb:                                               ; preds = %dec_label_pc_369aa
  %v1_36a20 = call i32 @function_36a27()
  br label %dec_label_pc_36a22

dec_label_pc_36a22:                               ; preds = %bb, %dec_label_pc_369aa
  %v2_36a20 = phi i32 [ %v1_36a20, %bb ], [ %v2_36a19, %dec_label_pc_369aa ]
  ret i32 %v2_36a20

; uselistorder directives
  uselistorder i32 %v0_369ec, { 0, 2, 1, 3 }
  uselistorder i32 %v0_369c5, { 0, 2, 1, 3 }
  uselistorder i32 -1070468027, { 7, 2, 8, 3, 1, 9, 0, 4, 5, 6 }
}

define i32 @function_36a27() local_unnamed_addr {
dec_label_pc_36a27:
  %v0_36a2c = load i32, i32* @eax, align 4
  ret i32 %v0_36a2c
}

define i32 @_ZNK5boost6tuples4consI7CPubKeyNS0_9null_typeEE8get_tailEv(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36a2e:
  ret i32 %arg1
}

define i32 @function_36a4e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36a4e:
  %v0_36a4e = load i32, i32* @ebp, align 4
  %v1_36a4e = add i32 %v0_36a4e, -12
  %v2_36a4e = inttoptr i32 %v1_36a4e to i32*
  %v3_36a4e = load i32, i32* %v2_36a4e, align 4
  %v1_36a51 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36a51 = icmp eq i32 %v1_36a51, %v3_36a4e
  br i1 %v3_36a51, label %bb, label %dec_label_pc_36a4e.dec_label_pc_36a5a_crit_edge

dec_label_pc_36a4e.dec_label_pc_36a5a_crit_edge:  ; preds = %dec_label_pc_36a4e
  %v3_36a58.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_36a5a

bb:                                               ; preds = %dec_label_pc_36a4e
  %v1_36a58 = call i32 @function_36a5f()
  br label %dec_label_pc_36a5a

dec_label_pc_36a5a:                               ; preds = %dec_label_pc_36a4e.dec_label_pc_36a5a_crit_edge, %bb
  %v3_36a58 = phi i32 [ %v3_36a58.pre, %dec_label_pc_36a4e.dec_label_pc_36a5a_crit_edge ], [ %v1_36a58, %bb ]
  ret i32 %v3_36a58

; uselistorder directives
  uselistorder label %dec_label_pc_36a5a, { 1, 0 }
}

define i32 @function_36a5f() local_unnamed_addr {
dec_label_pc_36a5f:
  %v0_36a60 = load i32, i32* @eax, align 4
  ret i32 %v0_36a60
}

define i32 @_ZNK5boost6tuples4consI7CPubKeyNS0_9null_typeEE8get_headEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_36a64:
  ret i32 %arg1
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK22CKeyStoreIsMineVisitorE14internal_visitIK14CNoDestinationEEbRT_i() local_unnamed_addr {
dec_label_pc_36a92:
  %eax.global-to-local = alloca i32, align 4
  %v17_36a95 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_36a95
}

define i32 @function_36a98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36a98:
  %v0_36a98 = load i32, i32* @ebp, align 4
  %v1_36a98 = add i32 %v0_36a98, 8
  %v2_36a98 = inttoptr i32 %v1_36a98 to i32*
  %v3_36a98 = load i32, i32* %v2_36a98, align 4
  %v2_36a9b = add i32 %v0_36a98, -28
  %v3_36a9b = inttoptr i32 %v2_36a9b to i32*
  store i32 %v3_36a98, i32* %v3_36a9b, align 4
  %v0_36a9e = load i32, i32* @ebp, align 4
  %v1_36a9e = add i32 %v0_36a9e, 12
  %v2_36a9e = inttoptr i32 %v1_36a9e to i32*
  %v3_36a9e = load i32, i32* %v2_36a9e, align 4
  %v2_36aa1 = add i32 %v0_36a9e, -32
  %v3_36aa1 = inttoptr i32 %v2_36aa1 to i32*
  store i32 %v3_36a9e, i32* %v3_36aa1, align 4
  %v0_36aa4 = load i32, i32* @ebp, align 4
  %v1_36aa4 = add i32 %v0_36aa4, 16
  %v2_36aa4 = inttoptr i32 %v1_36aa4 to i32*
  %v3_36aa4 = load i32, i32* %v2_36aa4, align 4
  %v2_36aa7 = add i32 %v0_36aa4, -36
  %v3_36aa7 = inttoptr i32 %v2_36aa7 to i32*
  store i32 %v3_36aa4, i32* %v3_36aa7, align 4
  %v0_36aaa = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36ab0 = load i32, i32* @ebp, align 4
  %v2_36ab0 = add i32 %v1_36ab0, -12
  %v3_36ab0 = inttoptr i32 %v2_36ab0 to i32*
  store i32 %v0_36aaa, i32* %v3_36ab0, align 4
  %v0_36ab5 = load i32, i32* @ebp, align 4
  %v1_36ab5 = add i32 %v0_36ab5, -28
  %v2_36ab5 = inttoptr i32 %v1_36ab5 to i32*
  %v3_36ab5 = load i32, i32* %v2_36ab5, align 4
  %v1_36ab8 = inttoptr i32 %v3_36ab5 to i32*
  %v2_36ab8 = load i32, i32* %v1_36ab8, align 4
  %v1_36aba = add i32 %v0_36ab5, -32
  %v2_36aba = inttoptr i32 %v1_36aba to i32*
  %v3_36aba = load i32, i32* %v2_36aba, align 4
  %v2_36ac4 = call i32 @unknown_4adaa(i32 %v2_36ab8, i32 %v3_36aba)
  ret i32 %v2_36ac4
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK22CKeyStoreIsMineVisitorE14internal_visitIK6CKeyIDEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36adc:
  %v2_36b02 = load i32, i32* %arg1, align 4
  ret i32 %v2_36b02
}

define i32 @function_36b04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36b04:
  %v0_36b04 = load i32, i32* @ebp, align 4
  %v1_36b04 = add i32 %v0_36b04, -32
  %v2_36b04 = inttoptr i32 %v1_36b04 to i32*
  %v3_36b04 = load i32, i32* %v2_36b04, align 4
  %v0_36b0b = load i32, i32* @eax, align 4
  %v2_36b0e = call i32 @unknown_4ae2a(i32 %v0_36b0b, i32 %v3_36b04)
  store i32 %v2_36b0e, i32* @eax, align 4
  %v0_36b13 = load i32, i32* @ebp, align 4
  %v1_36b13 = add i32 %v0_36b13, -12
  %v2_36b13 = inttoptr i32 %v1_36b13 to i32*
  %v3_36b13 = load i32, i32* %v2_36b13, align 4
  %v1_36b16 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36b16 = icmp eq i32 %v1_36b16, %v3_36b13
  br i1 %v3_36b16, label %bb, label %dec_label_pc_36b1f

bb:                                               ; preds = %dec_label_pc_36b04
  %v1_36b1d = call i32 @function_36b24()
  br label %dec_label_pc_36b1f

dec_label_pc_36b1f:                               ; preds = %bb, %dec_label_pc_36b04
  %v2_36b1d = phi i32 [ %v1_36b1d, %bb ], [ %v2_36b0e, %dec_label_pc_36b04 ]
  ret i32 %v2_36b1d
}

define i32 @function_36b24() local_unnamed_addr {
dec_label_pc_36b24:
  %v0_36b25 = load i32, i32* @eax, align 4
  ret i32 %v0_36b25
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK22CKeyStoreIsMineVisitorE14internal_visitIK9CScriptIDEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36b26:
  %v2_36b4c = load i32, i32* %arg1, align 4
  %v2_36b58 = call i32 @unknown_4aec2(i32 %v2_36b4c, i32 %arg2)
  store i32 %v2_36b58, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36b69

bb:                                               ; preds = %dec_label_pc_36b26
  %v1_36b67 = call i32 @function_36b6e()
  br label %dec_label_pc_36b69

dec_label_pc_36b69:                               ; preds = %bb, %dec_label_pc_36b26
  %v2_36b67 = phi i32 [ %v1_36b67, %bb ], [ %v2_36b58, %dec_label_pc_36b26 ]
  ret i32 %v2_36b67
}

define i32 @function_36b6e() local_unnamed_addr {
dec_label_pc_36b6e:
  %v0_36b6f = load i32, i32* @eax, align 4
  ret i32 %v0_36b6f
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPv14CNoDestinationEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36b70:
  %v1_36ba6 = call i32 @unknown_6db9c(i32 %arg3)
  ret i32 %arg2
}

define i32 @function_36bba(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36bba:
  %v0_36bba = load i32, i32* @eax, align 4
  %v1_36bbd = call i32 @unknown_6e06a(i32 %v0_36bba)
  store i32 %v1_36bbd, i32* @eax, align 4
  %v0_36bc2 = load i32, i32* @ebp, align 4
  %v1_36bc2 = add i32 %v0_36bc2, -12
  %v2_36bc2 = inttoptr i32 %v1_36bc2 to i32*
  %v3_36bc2 = load i32, i32* %v2_36bc2, align 4
  %v1_36bc5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36bc5 = icmp eq i32 %v1_36bc5, %v3_36bc2
  br i1 %v3_36bc5, label %bb, label %dec_label_pc_36bce

bb:                                               ; preds = %dec_label_pc_36bba
  %v1_36bcc = call i32 @function_36bd3()
  br label %dec_label_pc_36bce

dec_label_pc_36bce:                               ; preds = %bb, %dec_label_pc_36bba
  %v2_36bcc = phi i32 [ %v1_36bcc, %bb ], [ %v1_36bbd, %dec_label_pc_36bba ]
  ret i32 %v2_36bcc
}

define i32 @function_36bd3() local_unnamed_addr {
dec_label_pc_36bd3:
  %v0_36bd4 = load i32, i32* @eax, align 4
  ret i32 %v0_36bd4
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPvS5_EENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36bd5:
  %v1_36c0b = call i32 @unknown_6dc9a(i32 %arg3)
  %v3_36c22 = call i32 @unknown_6e119(i32 %arg2, i32 %v1_36c0b, i32 1)
  store i32 %v3_36c22, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36c33

bb:                                               ; preds = %dec_label_pc_36bd5
  %v1_36c31 = call i32 @function_36c38()
  br label %dec_label_pc_36c33

dec_label_pc_36c33:                               ; preds = %bb, %dec_label_pc_36bd5
  %v2_36c31 = phi i32 [ %v1_36c31, %bb ], [ %v3_36c22, %dec_label_pc_36bd5 ]
  ret i32 %v2_36c31
}

define i32 @function_36c38() local_unnamed_addr {
dec_label_pc_36c38:
  %v0_36c39 = load i32, i32* @eax, align 4
  ret i32 %v0_36c39
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI6CKeyIDEEEEPv9CScriptIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36c3a:
  ret i32 %arg3
}

define i32 @function_36c70(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36c70:
  %v0_36c70 = call i32 @unknown_6dd6d()
  %v0_36c81 = load i32, i32* @ebp, align 4
  %v1_36c81 = add i32 %v0_36c81, -32
  %v2_36c81 = inttoptr i32 %v1_36c81 to i32*
  %v3_36c81 = load i32, i32* %v2_36c81, align 4
  %v3_36c87 = call i32 @unknown_6e1c8(i32 %v3_36c81, i32 %v0_36c70, i32 1)
  store i32 %v3_36c87, i32* @eax, align 4
  %v0_36c8c = load i32, i32* @ebp, align 4
  %v1_36c8c = add i32 %v0_36c8c, -12
  %v2_36c8c = inttoptr i32 %v1_36c8c to i32*
  %v3_36c8c = load i32, i32* %v2_36c8c, align 4
  %v1_36c8f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_36c8f = icmp eq i32 %v1_36c8f, %v3_36c8c
  br i1 %v3_36c8f, label %bb, label %dec_label_pc_36c98

bb:                                               ; preds = %dec_label_pc_36c70
  %v1_36c96 = call i32 @function_36c9d()
  br label %dec_label_pc_36c98

dec_label_pc_36c98:                               ; preds = %bb, %dec_label_pc_36c70
  %v3_36c96 = phi i32 [ %v1_36c96, %bb ], [ %v3_36c87, %dec_label_pc_36c70 ]
  ret i32 %v3_36c96
}

define i32 @function_36c9d() local_unnamed_addr {
dec_label_pc_36c9d:
  %v0_36c9e = load i32, i32* @eax, align 4
  ret i32 %v0_36c9e
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPv14CNoDestinationEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36c9f:
  ret i32 %arg3
}

define i32 @function_36cb8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36cb8:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_36cb8 = load i32, i32* @ebp, align 4
  %v0_36cb9 = load i32, i32* @eax, align 4
  %v1_36cb9 = trunc i32 %v0_36cb9 to i8
  %v2_36cb9 = load i1, i1* @cf, align 1
  %v3_36cb9 = zext i1 %v2_36cb9 to i8
  %v4_36cb9 = add i8 %v1_36cb9, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_36cb9 = add i8 %v4_36cb9, %v3_36cb9
  %v20_36cb9 = add i8 %v1_36cb9, -119
  %v21_36cb9 = add i8 %v20_36cb9, %v3_36cb9
  %v22_36cb9 = icmp ule i8 %v21_36cb9, %v1_36cb9
  %v23_36cb9 = icmp ugt i8 %v1_36cb9, 118
  %v24_36cb9 = select i1 %v2_36cb9, i1 %v22_36cb9, i1 %v23_36cb9
  store i1 %v24_36cb9, i1* %cf.global-to-local, align 1
  %v25_36cb9 = zext i8 %v5_36cb9 to i32
  %v27_36cb9 = and i32 %v0_36cb9, -256
  %v28_36cb9 = or i32 %v25_36cb9, %v27_36cb9
  store i32 %v28_36cb9, i32* %eax.global-to-local, align 4
  %v1_36cbb = add i32 %v0_36cb8, 2
  store i32 %v1_36cbb, i32* @ebp, align 4
  %v1_36cc0 = add i32 %v28_36cb9, -1587161275
  %v2_36cc0 = inttoptr i32 %v1_36cc0 to i8*
  %v3_36cc0 = load i8, i8* %v2_36cc0, align 1
  %v4_36cc0 = load i32, i32* @ecx, align 4
  %v5_36cc0 = trunc i32 %v4_36cc0 to i8
  %v7_36cc0 = zext i1 %v24_36cb9 to i8
  %v8_36cc0 = sub i8 %v3_36cc0, %v5_36cc0
  %v9_36cc0 = add i8 %v8_36cc0, %v7_36cc0
  %v19_36cc0 = sub i8 %v8_36cc0, %v7_36cc0
  %v20_36cc0 = icmp ult i8 %v3_36cc0, %v19_36cc0
  %v21_36cc0 = icmp ne i8 %v5_36cc0, -1
  %v22_36cc0 = or i1 %v21_36cc0, %v20_36cc0
  %v23_36cc0 = icmp ult i8 %v3_36cc0, %v5_36cc0
  %v24_36cc0 = select i1 %v24_36cb9, i1 %v22_36cc0, i1 %v23_36cc0
  store i1 %v24_36cc0, i1* %cf.global-to-local, align 1
  store i8 %v9_36cc0, i8* %v2_36cc0, align 1
  %v0_36cc6 = load i32, i32* %eax.global-to-local, align 4
  %v1_36cc6 = trunc i32 %v0_36cc6 to i8
  %v2_36cc6 = load i1, i1* %cf.global-to-local, align 1
  %v3_36cc6 = zext i1 %v2_36cc6 to i8
  %v4_36cc6 = add i8 %v3_36cc6, %v1_36cc6
  %v19_36cc6 = icmp ule i8 %v4_36cc6, %v1_36cc6
  %v21_36cc6 = icmp eq i1 %v2_36cc6, %v19_36cc6
  store i1 %v21_36cc6, i1* %cf.global-to-local, align 1
  %v22_36cc6 = zext i8 %v4_36cc6 to i32
  %v24_36cc6 = and i32 %v0_36cc6, -256
  %v25_36cc6 = or i32 %v22_36cc6, %v24_36cc6
  store i32 %v25_36cc6, i32* %eax.global-to-local, align 4
  %v1_36cc8 = inttoptr i32 %v25_36cc6 to i8*
  %v2_36cc8 = load i8, i8* %v1_36cc8, align 1
  %v5_36cc8 = add i8 %v2_36cc8, %v4_36cc6
  store i8 %v5_36cc8, i8* %v1_36cc8, align 1
  %v0_36cca = load i32, i32* %eax.global-to-local, align 4
  %v1_36cca = load i32, i32* @ebp, align 4
  %v2_36cca = add i32 %v1_36cca, -12
  %v3_36cca = inttoptr i32 %v2_36cca to i32*
  store i32 %v0_36cca, i32* %v3_36cca, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_36ccf = load i32, i32* @ebp, align 4
  %v1_36ccf = add i32 %v0_36ccf, -36
  %v2_36ccf = inttoptr i32 %v1_36ccf to i32*
  %v3_36ccf = load i32, i32* %v2_36ccf, align 4
  store i32 %v3_36ccf, i32* %eax.global-to-local, align 4
  %v1_36cd5 = call i32 @unknown_6dccb(i32 %v3_36ccf)
  store i32 %v1_36cd5, i32* %eax.global-to-local, align 4
  %v0_36ce6 = load i32, i32* @ebp, align 4
  %v1_36ce6 = add i32 %v0_36ce6, -32
  %v2_36ce6 = inttoptr i32 %v1_36ce6 to i32*
  %v3_36ce6 = load i32, i32* %v2_36ce6, align 4
  store i32 %v3_36ce6, i32* %eax.global-to-local, align 4
  %v3_36cec = call i32 @unknown_6e277(i32 %v3_36ce6, i32 %v1_36cd5, i32 1)
  store i32 %v3_36cec, i32* %eax.global-to-local, align 4
  %v0_36cf1 = load i32, i32* @ebp, align 4
  %v1_36cf1 = add i32 %v0_36cf1, -12
  %v2_36cf1 = inttoptr i32 %v1_36cf1 to i32*
  %v3_36cf1 = load i32, i32* %v2_36cf1, align 4
  store i32 %v3_36cf1, i32* %eax.global-to-local, align 4
  %v1_36cf4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36cf4 = xor i32 %v1_36cf4, %v3_36cf1
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_36cf4 = icmp eq i32 %v2_36cf4, 0
  store i32 %v2_36cf4, i32* @eax, align 4
  br i1 %v3_36cf4, label %bb, label %dec_label_pc_36cfd

bb:                                               ; preds = %dec_label_pc_36cb8
  %v1_36cfb = call i32 @function_36d02()
  store i32 %v1_36cfb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_36cfd

dec_label_pc_36cfd:                               ; preds = %bb, %dec_label_pc_36cb8
  %v2_36cfb = phi i32 [ %v1_36cfb, %bb ], [ %v2_36cf4, %dec_label_pc_36cb8 ]
  ret i32 %v2_36cfb

; uselistorder directives
  uselistorder i8 %v4_36cc6, { 0, 2, 1 }
  uselistorder i8 %v1_36cc6, { 1, 0 }
  uselistorder i8 %v8_36cc0, { 1, 0 }
  uselistorder i8 %v7_36cc0, { 1, 0 }
  uselistorder i8 %v5_36cc0, { 1, 0, 2 }
  uselistorder i1 %v24_36cb9, { 1, 0, 2 }
}

define i32 @function_36d02() local_unnamed_addr {
dec_label_pc_36d02:
  %v0_36d03 = load i32, i32* @eax, align 4
  ret i32 %v0_36d03
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPv6CKeyIDEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_36d04:
  ret i32 %arg4
}

define i32 @function_36d22(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_36d22:
  %v0_36d22 = load i32, i32* @ebp, align 4
  %v1_36d22 = add i32 %v0_36d22, 24
  %v2_36d22 = inttoptr i32 %v1_36d22 to i8*
  %v3_36d22 = load i8, i8* %v2_36d22, align 1
  %v3_36d26 = add i32 %v0_36d22, -41
  %v4_36d26 = inttoptr i32 %v3_36d26 to i8*
  store i8 %v3_36d22, i8* %v4_36d26, align 1
  %v0_36d29 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_36d2f = load i32, i32* @ebp, align 4
  %v2_36d2f = add i32 %v1_36d2f, -12
  %v3_36d2f = inttoptr i32 %v2_36d2f to i32*
  store i32 %v0_36d29, i32* %v3_36d2f, align 4
  %v0_36d34 = load i32, i32* @ebp, align 4
  %v1_36d34 = add i32 %v0_36d34, -36
  %v2_36d34 = inttoptr i32 %v1_36d34 to i32*
  %v3_36d34 = load i32, i32* %v2_36d34, align 4
  %v1_36d3a = call i32 @unknown_6ddc9(i32 %v3_36d34)
  %v0_36d4b = load i32, i32* @ebp, align 4
  %v1_36d4b = add i32 %v0_36d4b, -32
  %v2_36d4b = inttoptr i32 %v1_36d4b to i32*
  %v3_36d4b = load i32, i32* %v2_36d4b, align 4
  %v3_36d51 = call i32 @unknown_6e312(i32 %v3_36d4b, i32 %v1_36d3a, i32 1)
  %v0_36d56 = load i32, i32* @ebp, align 4
  %v1_36d56 = add i32 %v0_36d56, -12
  %v2_36d56 = inttoptr i32 %v1_36d56 to i32*
  %v3_36d56 = load i32, i32* %v2_36d56, align 4
  %v1_36d59 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36d59 = xor i32 %v1_36d59, %v3_36d56
  %v3_36d59 = icmp eq i32 %v2_36d59, 0
  store i32 %v2_36d59, i32* @eax, align 4
  br i1 %v3_36d59, label %bb, label %dec_label_pc_36d62

bb:                                               ; preds = %dec_label_pc_36d22
  %v1_36d60 = call i32 @function_36d67()
  br label %dec_label_pc_36d62

dec_label_pc_36d62:                               ; preds = %bb, %dec_label_pc_36d22
  %v3_36d60 = phi i32 [ %v1_36d60, %bb ], [ %v2_36d59, %dec_label_pc_36d22 ]
  ret i32 %v3_36d60
}

define i32 @function_36d67() local_unnamed_addr {
dec_label_pc_36d67:
  %v0_36d68 = load i32, i32* @eax, align 4
  ret i32 %v0_36d68
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14assign_storageEPv9CScriptIDEENT_11result_typeEiRS6_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36d69:
  %v1_36d9f = call i32 @unknown_6de9c(i32 %arg3)
  %v3_36db6 = call i32 @unknown_6e3d1(i32 %arg2, i32 %v1_36d9f, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36dc7

bb:                                               ; preds = %dec_label_pc_36d69
  %v1_36dc5 = call i32 @function_36dcc()
  br label %dec_label_pc_36dc7

dec_label_pc_36dc7:                               ; preds = %bb, %dec_label_pc_36d69
  %v2_36dc5 = phi i32 [ %v1_36dc5, %bb ], [ 0, %dec_label_pc_36d69 ]
  ret i32 %v2_36dc5
}

define i32 @function_36dcc() local_unnamed_addr {
dec_label_pc_36dcc:
  %v0_36dcd = load i32, i32* @eax, align 4
  ret i32 %v0_36dcd
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS4_EENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36dce:
  %v1_36e04 = call i32 @unknown_6d05b(i32 %arg3)
  %v3_36e1b = call i32 @unknown_6e490(i32 %arg2, i32 %v1_36e04, i32 1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36e2c

bb:                                               ; preds = %dec_label_pc_36dce
  %v1_36e2a = call i32 @function_36e31()
  br label %dec_label_pc_36e2c

dec_label_pc_36e2c:                               ; preds = %bb, %dec_label_pc_36dce
  %v2_36e2a = phi i32 [ %v1_36e2a, %bb ], [ 0, %dec_label_pc_36dce ]
  ret i32 %v2_36e2a
}

define i32 @function_36e31() local_unnamed_addr {
dec_label_pc_36e31:
  %v0_36e32 = load i32, i32* @eax, align 4
  ret i32 %v0_36e32
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS5_EENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36e33:
  %v0_36e58 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_36e58
}

define i32 @function_36e62(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36e62:
  %v0_36e62 = load i32, i32* @ebx, align 4
  %v1_36e62 = add i32 %v0_36e62, 76143685
  %v2_36e62 = inttoptr i32 %v1_36e62 to i8*
  %v3_36e62 = load i8, i8* %v2_36e62, align 1
  %v4_36e62 = udiv i8 %v3_36e62, 16
  %v5_36e62 = mul i8 %v3_36e62, 16
  %v6_36e62 = or i8 %v4_36e62, %v5_36e62
  store i8 %v6_36e62, i8* %v2_36e62, align 1
  %v0_36e69 = call i32 @unknown_6d13a()
  %v0_36e7a = load i32, i32* @ebp, align 4
  %v1_36e7a = add i32 %v0_36e7a, -32
  %v2_36e7a = inttoptr i32 %v1_36e7a to i32*
  %v3_36e7a = load i32, i32* %v2_36e7a, align 4
  %v3_36e80 = call i32 @unknown_6e54f(i32 %v3_36e7a, i32 %v0_36e69, i32 1)
  %v0_36e85 = load i32, i32* @ebp, align 4
  %v1_36e85 = add i32 %v0_36e85, -12
  %v2_36e85 = inttoptr i32 %v1_36e85 to i32*
  %v3_36e85 = load i32, i32* %v2_36e85, align 4
  %v1_36e88 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_36e88 = xor i32 %v1_36e88, %v3_36e85
  %v3_36e88 = icmp eq i32 %v2_36e88, 0
  store i32 %v2_36e88, i32* @eax, align 4
  br i1 %v3_36e88, label %bb, label %dec_label_pc_36e91

bb:                                               ; preds = %dec_label_pc_36e62
  %v1_36e8f = call i32 @function_36e96()
  br label %dec_label_pc_36e91

dec_label_pc_36e91:                               ; preds = %bb, %dec_label_pc_36e62
  %v2_36e8f = phi i32 [ %v1_36e8f, %bb ], [ %v2_36e88, %dec_label_pc_36e62 ]
  ret i32 %v2_36e8f

; uselistorder directives
  uselistorder i8 16, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
}

define i32 @function_36e96() local_unnamed_addr {
dec_label_pc_36e96:
  %v0_36e97 = load i32, i32* @eax, align 4
  ret i32 %v0_36e97
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS_7variantI14CNoDestination6CKeyID9CScriptIDNS1_5void_ES7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_S7_E8assignerEPKvS6_EENT_11result_typeEiRSC_T0_PT1_N4mpl_5bool_ILb1EEE() local_unnamed_addr {
dec_label_pc_36e98:
  %eax.global-to-local = alloca i32, align 4
  %v2_36e99 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_36e99
}

define i32 @function_36efa() local_unnamed_addr {
dec_label_pc_36efa:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36efa = load i32, i32* %ecx.global-to-local, align 4
  %v1_36efa = add i32 %v0_36efa, -1
  store i32 %v1_36efa, i32* %ecx.global-to-local, align 4
  %v0_36efc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_36efc
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPv14CNoDestinationEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36efd:
  ret i32 %arg2
}

define i32 @function_36f0e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_36f0e:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_36f0e = load i32, i32* @ecx, align 4
  %v1_36f0e = add i32 %v0_36f0e, -1
  store i32 %v1_36f0e, i32* %ecx.global-to-local, align 4
  %v0_36f10 = load i32, i32* @ebp, align 4
  %v1_36f10 = add i32 %v0_36f10, 1
  store i32 %v1_36f10, i32* %ebp.global-to-local, align 4
  %v1_36f11 = add i32 %v0_36f0e, 1166793796
  %v2_36f11 = inttoptr i32 %v1_36f11 to i8*
  %v3_36f11 = load i8, i8* %v2_36f11, align 1
  %v5_36f11 = trunc i32 %v1_36f0e to i8
  %v6_36f11 = load i1, i1* @cf, align 1
  %v7_36f11 = zext i1 %v6_36f11 to i8
  %v8_36f11 = add i8 %v3_36f11, %v5_36f11
  %v9_36f11 = add i8 %v7_36f11, %v8_36f11
  %v27_36f11 = icmp ule i8 %v9_36f11, %v3_36f11
  %v28_36f11 = icmp ult i8 %v8_36f11, %v3_36f11
  %v29_36f11 = select i1 %v6_36f11, i1 %v27_36f11, i1 %v28_36f11
  store i1 %v29_36f11, i1* %cf.global-to-local, align 1
  store i8 %v9_36f11, i8* %v2_36f11, align 1
  %v0_36f17 = load i32, i32* @eax, align 4
  %v1_36f17 = trunc i32 %v0_36f17 to i8
  %v2_36f17 = load i1, i1* %cf.global-to-local, align 1
  %v3_36f17 = zext i1 %v2_36f17 to i8
  %v4_36f17 = add i8 %v1_36f17, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_36f17 = add i8 %v4_36f17, %v3_36f17
  %v20_36f17 = add i8 %v1_36f17, -119
  %v21_36f17 = add i8 %v20_36f17, %v3_36f17
  %v22_36f17 = icmp ule i8 %v21_36f17, %v1_36f17
  %v23_36f17 = icmp ugt i8 %v1_36f17, 118
  %v24_36f17 = select i1 %v2_36f17, i1 %v22_36f17, i1 %v23_36f17
  store i1 %v24_36f17, i1* %cf.global-to-local, align 1
  %v25_36f17 = zext i8 %v5_36f17 to i32
  %v27_36f17 = and i32 %v0_36f17, -256
  %v28_36f17 = or i32 %v25_36f17, %v27_36f17
  store i32 %v28_36f17, i32* %eax.global-to-local, align 4
  %v0_36f19 = load i32, i32* %ebp.global-to-local, align 4
  %v1_36f19 = add i32 %v0_36f19, 1
  store i32 %v1_36f19, i32* @ebp, align 4
  %v1_36f1e = add i32 %v28_36f17, -1587161275
  %v2_36f1e = inttoptr i32 %v1_36f1e to i8*
  %v3_36f1e = load i8, i8* %v2_36f1e, align 1
  %v4_36f1e = load i32, i32* %ecx.global-to-local, align 4
  %v5_36f1e = trunc i32 %v4_36f1e to i8
  %v7_36f1e = zext i1 %v24_36f17 to i8
  %v8_36f1e = sub i8 %v3_36f1e, %v5_36f1e
  %v9_36f1e = add i8 %v8_36f1e, %v7_36f1e
  %v19_36f1e = sub i8 %v8_36f1e, %v7_36f1e
  %v20_36f1e = icmp ult i8 %v3_36f1e, %v19_36f1e
  %v21_36f1e = icmp ne i8 %v5_36f1e, -1
  %v22_36f1e = or i1 %v21_36f1e, %v20_36f1e
  %v23_36f1e = icmp ult i8 %v3_36f1e, %v5_36f1e
  %v24_36f1e = select i1 %v24_36f17, i1 %v22_36f1e, i1 %v23_36f1e
  store i1 %v24_36f1e, i1* %cf.global-to-local, align 1
  store i8 %v9_36f1e, i8* %v2_36f1e, align 1
  %v0_36f24 = load i32, i32* %eax.global-to-local, align 4
  %v1_36f24 = trunc i32 %v0_36f24 to i8
  %v2_36f24 = load i1, i1* %cf.global-to-local, align 1
  %v3_36f24 = zext i1 %v2_36f24 to i8
  %v4_36f24 = add i8 %v3_36f24, %v1_36f24
  %v19_36f24 = icmp ule i8 %v4_36f24, %v1_36f24
  %v21_36f24 = icmp eq i1 %v2_36f24, %v19_36f24
  store i1 %v21_36f24, i1* %cf.global-to-local, align 1
  %v22_36f24 = zext i8 %v4_36f24 to i32
  %v24_36f24 = and i32 %v0_36f24, -256
  %v25_36f24 = or i32 %v22_36f24, %v24_36f24
  store i32 %v25_36f24, i32* %eax.global-to-local, align 4
  %v1_36f26 = inttoptr i32 %v25_36f24 to i8*
  %v2_36f26 = load i8, i8* %v1_36f26, align 1
  %v5_36f26 = add i8 %v2_36f26, %v4_36f24
  store i8 %v5_36f26, i8* %v1_36f26, align 1
  %v0_36f28 = load i32, i32* %eax.global-to-local, align 4
  %v1_36f28 = load i32, i32* @ebp, align 4
  %v2_36f28 = add i32 %v1_36f28, -12
  %v3_36f28 = inttoptr i32 %v2_36f28 to i32*
  store i32 %v0_36f28, i32* %v3_36f28, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_36f2d = load i32, i32* @ebp, align 4
  %v1_36f2d = add i32 %v0_36f2d, -36
  %v2_36f2d = inttoptr i32 %v1_36f2d to i32*
  %v3_36f2d = load i32, i32* %v2_36f2d, align 4
  store i32 %v3_36f2d, i32* %eax.global-to-local, align 4
  %v1_36f33 = call i32 @unknown_6df29(i32 %v3_36f2d)
  store i32 %v1_36f33, i32* %eax.global-to-local, align 4
  %v0_36f44 = load i32, i32* @ebp, align 4
  %v1_36f44 = add i32 %v0_36f44, -32
  %v2_36f44 = inttoptr i32 %v1_36f44 to i32*
  %v3_36f44 = load i32, i32* %v2_36f44, align 4
  store i32 %v3_36f44, i32* %eax.global-to-local, align 4
  %v3_36f4a = call i32 @unknown_6e6cd(i32 %v3_36f44, i32 %v1_36f33, i32 1)
  store i32 %v3_36f4a, i32* @eax, align 4
  %v0_36f4f = load i32, i32* @ebp, align 4
  %v1_36f4f = add i32 %v0_36f4f, -12
  %v2_36f4f = inttoptr i32 %v1_36f4f to i32*
  %v3_36f4f = load i32, i32* %v2_36f4f, align 4
  %v1_36f52 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_36f52 = icmp eq i32 %v1_36f52, %v3_36f4f
  br i1 %v3_36f52, label %bb, label %dec_label_pc_36f5b

bb:                                               ; preds = %dec_label_pc_36f0e
  %v1_36f59 = call i32 @function_36f60()
  store i32 %v1_36f59, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_36f5b

dec_label_pc_36f5b:                               ; preds = %bb, %dec_label_pc_36f0e
  %v3_36f59 = phi i32 [ %v1_36f59, %bb ], [ %v3_36f4a, %dec_label_pc_36f0e ]
  ret i32 %v3_36f59

; uselistorder directives
  uselistorder i8 %v4_36f24, { 0, 2, 1 }
  uselistorder i8 %v1_36f24, { 1, 0 }
  uselistorder i8 %v8_36f1e, { 1, 0 }
  uselistorder i8 %v7_36f1e, { 1, 0 }
  uselistorder i8 %v5_36f1e, { 1, 0, 2 }
  uselistorder i1 %v24_36f17, { 1, 0, 2 }
  uselistorder i8 %v9_36f11, { 1, 0 }
  uselistorder i8 %v8_36f11, { 1, 0 }
  uselistorder i8 %v3_36f11, { 1, 2, 0 }
}

define i32 @function_36f60() local_unnamed_addr {
dec_label_pc_36f60:
  %v0_36f61 = load i32, i32* @eax, align 4
  ret i32 %v0_36f61
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPv6CKeyIDEENT_11result_typeEiRSA_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36f62:
  %v1_36f98 = call i32 @unknown_6e027(i32 %arg3)
  %v3_36faf = call i32 @unknown_6e77c(i32 %arg2, i32 %v1_36f98, i32 1)
  store i32 %v3_36faf, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_36fc0

bb:                                               ; preds = %dec_label_pc_36f62
  %v1_36fbe = call i32 @function_36fc5()
  br label %dec_label_pc_36fc0

dec_label_pc_36fc0:                               ; preds = %bb, %dec_label_pc_36f62
  %v2_36fbe = phi i32 [ %v1_36fbe, %bb ], [ %v3_36faf, %dec_label_pc_36f62 ]
  ret i32 %v2_36fbe
}

define i32 @function_36fc5() local_unnamed_addr {
dec_label_pc_36fc5:
  %v0_36fc6 = load i32, i32* @eax, align 4
  ret i32 %v0_36fc6
}

define i32 @_ZN5boost6detail7variant27visitation_impl_invoke_implINS1_14invoke_visitorINS1_15direct_assignerI9CScriptIDEEEEPvS5_EENT_11result_typeEiRS9_T0_PT1_N4mpl_5bool_ILb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_36fc7:
  ret i32 %arg3
}

define i32 @function_36ffa(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_36ffa:
  %v0_36ffa = load i32, i32* @eax, align 4
  %v1_36ffd = call i32 @unknown_6e0fa(i32 %v0_36ffa)
  %v0_3700e = load i32, i32* @ebp, align 4
  %v1_3700e = add i32 %v0_3700e, -32
  %v2_3700e = inttoptr i32 %v1_3700e to i32*
  %v3_3700e = load i32, i32* %v2_3700e, align 4
  %v3_37014 = call i32 @unknown_6e82b(i32 %v3_3700e, i32 %v1_36ffd, i32 1)
  store i32 %v3_37014, i32* @eax, align 4
  %v0_37019 = load i32, i32* @ebp, align 4
  %v1_37019 = add i32 %v0_37019, -12
  %v2_37019 = inttoptr i32 %v1_37019 to i32*
  %v3_37019 = load i32, i32* %v2_37019, align 4
  %v1_3701c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3701c = icmp eq i32 %v1_3701c, %v3_37019
  br i1 %v3_3701c, label %bb, label %dec_label_pc_37025

bb:                                               ; preds = %dec_label_pc_36ffa
  %v1_37023 = call i32 @function_3702a()
  br label %dec_label_pc_37025

dec_label_pc_37025:                               ; preds = %bb, %dec_label_pc_36ffa
  %v2_37023 = phi i32 [ %v1_37023, %bb ], [ %v3_37014, %dec_label_pc_36ffa ]
  ret i32 %v2_37023
}

define i32 @function_3702a() local_unnamed_addr {
dec_label_pc_3702a:
  %v0_3702b = load i32, i32* @eax, align 4
  ret i32 %v0_3702b
}

define i32 @_ZN5boost6detail7variant12cast_storageI14CNoDestinationEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3702c:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37052

bb:                                               ; preds = %dec_label_pc_3702c
  %v2_37050 = call i32 @function_37057(i32 %arg1)
  br label %dec_label_pc_37052

dec_label_pc_37052:                               ; preds = %bb, %dec_label_pc_3702c
  %v3_37050 = phi i32 [ %v2_37050, %bb ], [ %arg1, %dec_label_pc_3702c ]
  ret i32 %v3_37050
}

define i32 @function_37057(i32 %arg1) local_unnamed_addr {
dec_label_pc_37057:
  %v0_37058 = load i32, i32* @eax, align 4
  ret i32 %v0_37058
}

define i32 @_ZN14CNoDestinationD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_3705a:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3707d

bb:                                               ; preds = %dec_label_pc_3705a
  %v2_3707b = call i32 @function_37082(i32 %arg1)
  br label %dec_label_pc_3707d

dec_label_pc_3707d:                               ; preds = %bb, %dec_label_pc_3705a
  %v3_3707b = phi i32 [ %v2_3707b, %bb ], [ 0, %dec_label_pc_3705a ]
  ret i32 %v3_3707b
}

define i32 @function_37082(i32 %arg1) local_unnamed_addr {
dec_label_pc_37082:
  %v0_37083 = load i32, i32* @eax, align 4
  ret i32 %v0_37083
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitI14CNoDestinationEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37084:
  ret i32 %arg3
}

define i32 @function_3709e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3709e:
  %eax.global-to-local = alloca i32, align 4
  %v0_3709e = load i32, i32* @eax, align 4
  %v1_3709e = trunc i32 %v0_3709e to i8
  %v2_3709e = load i1, i1* @cf, align 1
  %v3_3709e = zext i1 %v2_3709e to i8
  %v4_3709e = add i8 %v3_3709e, %v1_3709e
  %v22_3709e = zext i8 %v4_3709e to i32
  %v24_3709e = and i32 %v0_3709e, -256
  %v25_3709e = or i32 %v22_3709e, %v24_3709e
  store i32 %v25_3709e, i32* %eax.global-to-local, align 4
  %v1_370a0 = inttoptr i32 %v25_3709e to i8*
  %v2_370a0 = load i8, i8* %v1_370a0, align 1
  %v5_370a0 = add i8 %v2_370a0, %v4_3709e
  store i8 %v5_370a0, i8* %v1_370a0, align 1
  %v0_370a2 = load i32, i32* %eax.global-to-local, align 4
  %v1_370a2 = load i32, i32* @ebp, align 4
  %v2_370a2 = add i32 %v1_370a2, -12
  %v3_370a2 = inttoptr i32 %v2_370a2 to i32*
  store i32 %v0_370a2, i32* %v3_370a2, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_370a7 = load i32, i32* @ebp, align 4
  %v1_370a7 = add i32 %v0_370a7, -32
  %v2_370a7 = inttoptr i32 %v1_370a7 to i32*
  %v3_370a7 = load i32, i32* %v2_370a7, align 4
  store i32 %v3_370a7, i32* %eax.global-to-local, align 4
  %v1_370ad = call i32 @unknown_6e0de(i32 %v3_370a7)
  store i32 %v1_370ad, i32* %eax.global-to-local, align 4
  %v0_370b2 = load i32, i32* @ebp, align 4
  %v1_370b2 = add i32 %v0_370b2, -12
  %v2_370b2 = inttoptr i32 %v1_370b2 to i32*
  %v3_370b2 = load i32, i32* %v2_370b2, align 4
  store i32 %v3_370b2, i32* %eax.global-to-local, align 4
  %v1_370b5 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_370b5 = xor i32 %v1_370b5, %v3_370b2
  %v3_370b5 = icmp eq i32 %v2_370b5, 0
  store i32 %v2_370b5, i32* @eax, align 4
  br i1 %v3_370b5, label %bb, label %dec_label_pc_370be

bb:                                               ; preds = %dec_label_pc_3709e
  %v1_370bc = call i32 @function_370c3()
  store i32 %v1_370bc, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_370be

dec_label_pc_370be:                               ; preds = %bb, %dec_label_pc_3709e
  %v2_370bc = phi i32 [ %v1_370bc, %bb ], [ %v2_370b5, %dec_label_pc_3709e ]
  ret i32 %v2_370bc
}

define i32 @function_370c3() local_unnamed_addr {
dec_label_pc_370c3:
  %v0_370c4 = load i32, i32* @eax, align 4
  ret i32 %v0_370c4
}

define i32 @_ZN5boost6detail7variant12cast_storageI6CKeyIDEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_370c5:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_370eb

bb:                                               ; preds = %dec_label_pc_370c5
  %v2_370e9 = call i32 @function_370f0(i32 %arg1)
  br label %dec_label_pc_370eb

dec_label_pc_370eb:                               ; preds = %bb, %dec_label_pc_370c5
  %v3_370e9 = phi i32 [ %v2_370e9, %bb ], [ %arg1, %dec_label_pc_370c5 ]
  ret i32 %v3_370e9
}

define i32 @function_370f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_370f0:
  %v0_370f1 = load i32, i32* @eax, align 4
  ret i32 %v0_370f1
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitI6CKeyIDEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_370f2:
  %v1_3711b = call i32 @unknown_5e4ba(i32 %arg2)
  ret i32 0
}

define i32 @function_3712c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3712c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37131() local_unnamed_addr {
dec_label_pc_37131:
  %eax.global-to-local = alloca i32, align 4
  %v0_37132 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37132
}

define i32 @_ZN5boost6detail7variant12cast_storageI9CScriptIDEERT_Pv(i32 %arg1) local_unnamed_addr {
dec_label_pc_37133:
  store i32 %arg1, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37159

bb:                                               ; preds = %dec_label_pc_37133
  %v2_37157 = call i32 @function_3715e(i32 %arg1)
  br label %dec_label_pc_37159

dec_label_pc_37159:                               ; preds = %bb, %dec_label_pc_37133
  %v3_37157 = phi i32 [ %v2_37157, %bb ], [ %arg1, %dec_label_pc_37133 ]
  ret i32 %v3_37157
}

define i32 @function_3715e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3715e:
  %v0_3715f = load i32, i32* @eax, align 4
  ret i32 %v0_3715f
}

define i32 @_ZN9CScriptIDD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_37160:
  %v0_3716c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3716c
}

define i32 @function_37172(i32 %arg1) local_unnamed_addr {
dec_label_pc_37172:
  %v0_37172 = load i32, i32* @eax, align 4
  %v1_37172 = load i32, i32* @ebp, align 4
  %v2_37172 = add i32 %v1_37172, -12
  %v3_37172 = inttoptr i32 %v2_37172 to i32*
  store i32 %v0_37172, i32* %v3_37172, align 4
  %v0_37177 = load i32, i32* @ebp, align 4
  %v1_37177 = add i32 %v0_37177, -12
  %v2_37177 = inttoptr i32 %v1_37177 to i32*
  %v3_37177 = load i32, i32* %v2_37177, align 4
  %v1_3717a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_3717a = xor i32 %v1_3717a, %v3_37177
  %v3_3717a = icmp eq i32 %v2_3717a, 0
  store i32 %v2_3717a, i32* @eax, align 4
  br i1 %v3_3717a, label %bb, label %dec_label_pc_37183

bb:                                               ; preds = %dec_label_pc_37172
  %v1_37181 = call i32 @function_37188()
  br label %dec_label_pc_37183

dec_label_pc_37183:                               ; preds = %bb, %dec_label_pc_37172
  %v2_37181 = phi i32 [ %v1_37181, %bb ], [ %v2_3717a, %dec_label_pc_37172 ]
  ret i32 %v2_37181
}

define i32 @function_37188() local_unnamed_addr {
dec_label_pc_37188:
  %v0_37189 = load i32, i32* @eax, align 4
  ret i32 %v0_37189
}

define i32 @_ZNK5boost6detail7variant9destroyer14internal_visitI9CScriptIDEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3718a:
  ret i32 %arg2
}

define i32 @function_371b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_371b4:
  %v3_371b4 = load i32, i32* @ecx, align 4
  %v0_371b7 = load i32, i32* @ebx, align 4
  %v1_371b7 = add i32 %v0_371b7, 862319685
  %v2_371b7 = inttoptr i32 %v1_371b7 to i8*
  %v3_371b7 = load i8, i8* %v2_371b7, align 1
  %v5_371b7 = trunc i32 %v3_371b4 to i8
  %v6_371b7 = add i8 %v3_371b7, %v5_371b7
  store i8 %v6_371b7, i8* %v2_371b7, align 1
  %v0_371bd = load i32, i32* @eax, align 4
  %v1_371bd = add i32 %v0_371bd, 20
  %v10_371bd = icmp eq i32 %v1_371bd, 0
  store i32 %v1_371bd, i32* @eax, align 4
  br i1 %v10_371bd, label %bb, label %dec_label_pc_371c4

bb:                                               ; preds = %dec_label_pc_371b4
  %v1_371c2 = call i32 @function_371c9()
  br label %dec_label_pc_371c4

dec_label_pc_371c4:                               ; preds = %bb, %dec_label_pc_371b4
  %v2_371c2 = phi i32 [ %v1_371c2, %bb ], [ %v1_371bd, %dec_label_pc_371b4 ]
  ret i32 %v2_371c2

; uselistorder directives
  uselistorder i32 862319685, { 8, 9, 14, 15, 11, 12, 10, 16, 13, 1, 2, 3, 4, 5, 6, 7, 0 }
}

define i32 @function_371c9() local_unnamed_addr {
dec_label_pc_371c9:
  %v0_371ca = load i32, i32* @eax, align 4
  ret i32 %v0_371ca
}

define i32 @_ZN5boost6detail7variant14invoke_visitorI20CAffectedKeysVisitorE14internal_visitIK14CNoDestinationEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_371cc:
  %v2_371f2 = load i32, i32* %arg1, align 4
  %v2_371fe = call i32 @unknown_4b926(i32 %v2_371f2, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3720f

bb:                                               ; preds = %dec_label_pc_371cc
  %v1_3720d = call i32 @function_37214()
  br label %dec_label_pc_3720f

dec_label_pc_3720f:                               ; preds = %bb, %dec_label_pc_371cc
  %v2_3720d = phi i32 [ %v1_3720d, %bb ], [ 0, %dec_label_pc_371cc ]
  ret i32 %v2_3720d
}

define i32 @function_37214() local_unnamed_addr {
dec_label_pc_37214:
  %v0_37215 = load i32, i32* @eax, align 4
  ret i32 %v0_37215
}

define i32 @_ZN5boost6detail7variant14invoke_visitorI20CAffectedKeysVisitorE14internal_visitIK6CKeyIDEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37216:
  %v2_3723c = load i32, i32* %arg1, align 4
  ret i32 %v2_3723c
}

define i32 @function_3723e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3723e:
  %v0_3723e = load i32, i32* @ebp, align 4
  %v1_3723e = add i32 %v0_3723e, -32
  %v2_3723e = inttoptr i32 %v1_3723e to i32*
  %v3_3723e = load i32, i32* %v2_3723e, align 4
  %v0_37245 = load i32, i32* @eax, align 4
  %v2_37248 = call i32 @unknown_4b86c(i32 %v0_37245, i32 %v3_3723e)
  %v0_3724d = load i32, i32* @ebp, align 4
  %v1_3724d = add i32 %v0_3724d, -12
  %v2_3724d = inttoptr i32 %v1_3724d to i32*
  %v3_3724d = load i32, i32* %v2_3724d, align 4
  %v1_37250 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37250 = xor i32 %v1_37250, %v3_3724d
  %v3_37250 = icmp eq i32 %v2_37250, 0
  store i32 %v2_37250, i32* @eax, align 4
  br i1 %v3_37250, label %bb, label %dec_label_pc_37259

bb:                                               ; preds = %dec_label_pc_3723e
  %v1_37257 = call i32 @function_3725e()
  br label %dec_label_pc_37259

dec_label_pc_37259:                               ; preds = %bb, %dec_label_pc_3723e
  %v2_37257 = phi i32 [ %v1_37257, %bb ], [ %v2_37250, %dec_label_pc_3723e ]
  ret i32 %v2_37257
}

define i32 @function_3725e() local_unnamed_addr {
dec_label_pc_3725e:
  %v0_3725f = load i32, i32* @eax, align 4
  ret i32 %v0_3725f
}

define i32 @_ZN5boost6detail7variant14invoke_visitorI20CAffectedKeysVisitorE14internal_visitIK9CScriptIDEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37260:
  %v2_37286 = load i32, i32* %arg1, align 4
  %v2_37292 = call i32 @unknown_4b91c(i32 %v2_37286, i32 %arg2)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_372a3

bb:                                               ; preds = %dec_label_pc_37260
  %v1_372a1 = call i32 @function_372a8()
  br label %dec_label_pc_372a3

dec_label_pc_372a3:                               ; preds = %bb, %dec_label_pc_37260
  %v2_372a1 = phi i32 [ %v1_372a1, %bb ], [ 0, %dec_label_pc_37260 ]
  ret i32 %v2_372a1
}

define i32 @function_372a8() local_unnamed_addr {
dec_label_pc_372a8:
  %v0_372a9 = load i32, i32* @eax, align 4
  ret i32 %v0_372a9
}

define i32 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSt6vectorIhSaIhEES5_EEE8max_sizeEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_372aa:
  ret i32 %arg1
}

define i32 @function_372b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_372b6:
  %v0_372b6 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_372bc = load i32, i32* @ebp, align 4
  %v2_372bc = add i32 %v1_372bc, -12
  %v3_372bc = inttoptr i32 %v2_372bc to i32*
  store i32 %v0_372b6, i32* %v3_372bc, align 4
  ret i32 0
}

define i32 @function_372d6() local_unnamed_addr {
dec_label_pc_372d6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_372d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_372d6 = add i32 %v0_372d6, -1
  store i32 %v1_372d6, i32* %ecx.global-to-local, align 4
  %v0_372d8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_372d8
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK14CScriptVisitorE14internal_visitIK14CNoDestinationEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_372da:
  %v2_37300 = load i32, i32* %arg1, align 4
  %v2_3730c = call i32 @unknown_4bb4a(i32 %v2_37300, i32 %arg2)
  ret i32 %v2_3730c
}

define i32 @function_3731c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3731c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37321() local_unnamed_addr {
dec_label_pc_37321:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37321 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37321 = add i32 %v0_37321, -1
  store i32 %v1_37321, i32* %ecx.global-to-local, align 4
  %v0_37323 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37323
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK14CScriptVisitorE14internal_visitIK6CKeyIDEEbRT_i(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37324:
  ret i32 %arg2
}

define i32 @function_37334(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37334:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_37334 = load i32, i32* @ebp, align 4
  %v0_37335 = load i32, i32* @ecx, align 4
  %v1_37335 = add i32 %v0_37335, -1
  store i32 %v1_37335, i32* @ecx, align 4
  %v1_37337 = add i32 %v0_37334, 2
  store i32 %v1_37337, i32* @ebp, align 4
  %v1_37338 = add i32 %v0_37335, -1587159996
  %v2_37338 = inttoptr i32 %v1_37338 to i8*
  %v3_37338 = load i8, i8* %v2_37338, align 1
  %v5_37338 = trunc i32 %v1_37335 to i8
  %v6_37338 = load i1, i1* @cf, align 1
  %v7_37338 = zext i1 %v6_37338 to i8
  %v8_37338 = add i8 %v3_37338, %v5_37338
  %v9_37338 = add i8 %v7_37338, %v8_37338
  %v27_37338 = icmp ule i8 %v9_37338, %v3_37338
  %v28_37338 = icmp ult i8 %v8_37338, %v3_37338
  %v29_37338 = select i1 %v6_37338, i1 %v27_37338, i1 %v28_37338
  store i1 %v29_37338, i1* %cf.global-to-local, align 1
  store i8 %v9_37338, i8* %v2_37338, align 1
  %v0_3733e = load i32, i32* @eax, align 4
  %v1_3733e = trunc i32 %v0_3733e to i8
  %v2_3733e = load i1, i1* %cf.global-to-local, align 1
  %v3_3733e = zext i1 %v2_3733e to i8
  %v4_3733e = add i8 %v3_3733e, %v1_3733e
  %v19_3733e = icmp ule i8 %v4_3733e, %v1_3733e
  %v21_3733e = icmp eq i1 %v2_3733e, %v19_3733e
  store i1 %v21_3733e, i1* %cf.global-to-local, align 1
  %v22_3733e = zext i8 %v4_3733e to i32
  %v24_3733e = and i32 %v0_3733e, -256
  %v25_3733e = or i32 %v22_3733e, %v24_3733e
  store i32 %v25_3733e, i32* %eax.global-to-local, align 4
  %v1_37340 = inttoptr i32 %v25_3733e to i8*
  %v2_37340 = load i8, i8* %v1_37340, align 1
  %v5_37340 = add i8 %v2_37340, %v4_3733e
  store i8 %v5_37340, i8* %v1_37340, align 1
  %v0_37342 = load i32, i32* %eax.global-to-local, align 4
  %v1_37342 = load i32, i32* @ebp, align 4
  %v2_37342 = add i32 %v1_37342, -12
  %v3_37342 = inttoptr i32 %v2_37342 to i32*
  store i32 %v0_37342, i32* %v3_37342, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37347 = load i32, i32* @ebp, align 4
  %v1_37347 = add i32 %v0_37347, -28
  %v2_37347 = inttoptr i32 %v1_37347 to i32*
  %v3_37347 = load i32, i32* %v2_37347, align 4
  store i32 %v3_37347, i32* %eax.global-to-local, align 4
  %v1_3734a = inttoptr i32 %v3_37347 to i32*
  %v2_3734a = load i32, i32* %v1_3734a, align 4
  store i32 %v2_3734a, i32* %eax.global-to-local, align 4
  %v1_3734c = add i32 %v0_37347, -32
  %v2_3734c = inttoptr i32 %v1_3734c to i32*
  %v3_3734c = load i32, i32* %v2_3734c, align 4
  %v2_37356 = call i32 @unknown_4bbd6(i32 %v2_3734a, i32 %v3_3734c)
  store i32 %v2_37356, i32* @eax, align 4
  %v0_3735b = load i32, i32* @ebp, align 4
  %v1_3735b = add i32 %v0_3735b, -12
  %v2_3735b = inttoptr i32 %v1_3735b to i32*
  %v3_3735b = load i32, i32* %v2_3735b, align 4
  %v1_3735e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_3735e = icmp eq i32 %v1_3735e, %v3_3735b
  br i1 %v3_3735e, label %bb, label %dec_label_pc_37367

bb:                                               ; preds = %dec_label_pc_37334
  %v1_37365 = call i32 @function_3736c()
  store i32 %v1_37365, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37367

dec_label_pc_37367:                               ; preds = %bb, %dec_label_pc_37334
  %v3_37365 = phi i32 [ %v1_37365, %bb ], [ %v2_37356, %dec_label_pc_37334 ]
  ret i32 %v3_37365

; uselistorder directives
  uselistorder i8 %v4_3733e, { 0, 2, 1 }
  uselistorder i8 %v1_3733e, { 1, 0 }
  uselistorder i8 %v9_37338, { 1, 0 }
  uselistorder i8 %v8_37338, { 1, 0 }
  uselistorder i8 %v3_37338, { 1, 2, 0 }
}

define i32 @function_3736c() local_unnamed_addr {
dec_label_pc_3736c:
  %v0_3736d = load i32, i32* @eax, align 4
  ret i32 %v0_3736d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorIK14CScriptVisitorE14internal_visitIK9CScriptIDEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3736e:
  %v2_37394 = load i32, i32* %arg1, align 4
  %v2_373a0 = call i32 @unknown_4bcbc(i32 %v2_37394, i32 %arg2)
  store i32 %v2_373a0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_373b1

bb:                                               ; preds = %dec_label_pc_3736e
  %v1_373af = call i32 @function_373b6()
  br label %dec_label_pc_373b1

dec_label_pc_373b1:                               ; preds = %bb, %dec_label_pc_3736e
  %v2_373af = phi i32 [ %v1_373af, %bb ], [ %v2_373a0, %dec_label_pc_3736e ]
  ret i32 %v2_373af
}

define i32 @function_373b6() local_unnamed_addr {
dec_label_pc_373b6:
  %v0_373b7 = load i32, i32* @eax, align 4
  ret i32 %v0_373b7
}

define i32 @_Z12SerReadWriteI11CHashWriter9COutPointEjRT_RKT0_ii19CSerActionSerialize() local_unnamed_addr {
dec_label_pc_373b8:
  %eax.global-to-local = alloca i32, align 4
  %v17_373bb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_373bb
}

define i32 @function_373be(i32 %arg1) local_unnamed_addr {
dec_label_pc_373be:
  %v0_373be = load i32, i32* @ebp, align 4
  %v1_373be = add i32 %v0_373be, 8
  %v2_373be = inttoptr i32 %v1_373be to i32*
  %v3_373be = load i32, i32* %v2_373be, align 4
  %v2_373c1 = add i32 %v0_373be, -28
  %v3_373c1 = inttoptr i32 %v2_373c1 to i32*
  store i32 %v3_373be, i32* %v3_373c1, align 4
  %v0_373c4 = load i32, i32* @ebp, align 4
  %v1_373c4 = add i32 %v0_373c4, 12
  %v2_373c4 = inttoptr i32 %v1_373c4 to i32*
  %v3_373c4 = load i32, i32* %v2_373c4, align 4
  %v2_373c7 = add i32 %v0_373c4, -32
  %v3_373c7 = inttoptr i32 %v2_373c7 to i32*
  store i32 %v3_373c4, i32* %v3_373c7, align 4
  %v0_373ca = load i32, i32* @ebp, align 4
  %v1_373ca = add i32 %v0_373ca, 16
  %v2_373ca = inttoptr i32 %v1_373ca to i32*
  %v3_373ca = load i32, i32* %v2_373ca, align 4
  %v2_373cd = add i32 %v0_373ca, -36
  %v3_373cd = inttoptr i32 %v2_373cd to i32*
  store i32 %v3_373ca, i32* %v3_373cd, align 4
  %v0_373d0 = load i32, i32* @ebp, align 4
  %v1_373d0 = add i32 %v0_373d0, 20
  %v2_373d0 = inttoptr i32 %v1_373d0 to i32*
  %v3_373d0 = load i32, i32* %v2_373d0, align 4
  %v2_373d3 = add i32 %v0_373d0, -40
  %v3_373d3 = inttoptr i32 %v2_373d3 to i32*
  store i32 %v3_373d0, i32* %v3_373d3, align 4
  %v0_373d6 = load i32, i32* @ebp, align 4
  %v1_373d6 = add i32 %v0_373d6, 24
  %v2_373d6 = inttoptr i32 %v1_373d6 to i8*
  %v3_373d6 = load i8, i8* %v2_373d6, align 1
  %v3_373da = add i32 %v0_373d6, -41
  %v4_373da = inttoptr i32 %v3_373da to i8*
  store i8 %v3_373d6, i8* %v4_373da, align 1
  %v0_373dd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_373e3 = load i32, i32* @ebp, align 4
  %v2_373e3 = add i32 %v1_373e3, -12
  %v3_373e3 = inttoptr i32 %v2_373e3 to i32*
  store i32 %v0_373dd, i32* %v3_373e3, align 4
  %v0_373e8 = load i32, i32* @ebp, align 4
  %v1_373e8 = add i32 %v0_373e8, -40
  %v2_373e8 = inttoptr i32 %v1_373e8 to i32*
  %v3_373e8 = load i32, i32* %v2_373e8, align 4
  ret i32 %v3_373e8
}

define i32 @function_37402(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37402:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_37402 = load i32, i32* @eax, align 4
  %v1_37402 = trunc i32 %v0_37402 to i8
  %v2_37402 = and i8 %v1_37402, -24
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_37402 = icmp slt i8 %v2_37402, 0
  %v8_37402 = zext i8 %v2_37402 to i32
  %v10_37402 = and i32 %v0_37402, -256
  %v11_37402 = or i32 %v8_37402, %v10_37402
  store i32 %v11_37402, i32* %eax.global-to-local, align 4
  br i1 %v4_37402, label %dec_label_pc_3740a, label %dec_label_pc_37407

dec_label_pc_37407:                               ; preds = %dec_label_pc_3740a, %bb, %dec_label_pc_37402
  %merge = phi i32 [ %v11_37402, %dec_label_pc_37402 ], [ %v1_37417, %bb ], [ %v4_37412, %dec_label_pc_3740a ]
  ret i32 %merge

dec_label_pc_3740a:                               ; preds = %dec_label_pc_37402
  %v1_3740a = inttoptr i32 %v11_37402 to i8*
  %v2_3740a = load i8, i8* %v1_3740a, align 8
  %v5_3740a = add i8 %v2_3740a, %v2_37402
  %v10_3740a = icmp ult i8 %v5_3740a, %v2_3740a
  store i1 %v10_3740a, i1* %cf.global-to-local, align 1
  store i8 %v5_3740a, i8* %v1_3740a, align 8
  %v0_3740c = load i32, i32* @ebx, align 4
  %v1_3740c = add i32 %v0_3740c, 862319701
  %v2_3740c = inttoptr i32 %v1_3740c to i8*
  %v3_3740c = load i8, i8* %v2_3740c, align 1
  %v4_3740c = load i32, i32* @ecx, align 4
  %v5_3740c = trunc i32 %v4_3740c to i8
  %v6_3740c = add i8 %v5_3740c, %v3_3740c
  %v11_3740c = icmp ult i8 %v6_3740c, %v3_3740c
  store i1 %v11_3740c, i1* %cf.global-to-local, align 1
  store i8 %v6_3740c, i8* %v2_3740c, align 1
  %v0_37412 = load i32, i32* %eax.global-to-local, align 4
  %v1_37412 = load i1, i1* %cf.global-to-local, align 1
  %v2_37412 = zext i1 %v1_37412 to i32
  %v3_37412 = add i32 %v0_37412, 20
  %v4_37412 = add i32 %v3_37412, %v2_37412
  %v14_37412 = icmp eq i32 %v4_37412, 0
  %v22_37412 = icmp ule i32 %v4_37412, %v0_37412
  %v23_37412 = icmp ugt i32 %v0_37412, -21
  %v24_37412 = select i1 %v1_37412, i1 %v22_37412, i1 %v23_37412
  store i1 %v24_37412, i1* %cf.global-to-local, align 1
  store i32 %v4_37412, i32* @eax, align 4
  br i1 %v14_37412, label %bb, label %dec_label_pc_37407

bb:                                               ; preds = %dec_label_pc_3740a
  %v1_37417 = call i32 @function_3741e()
  store i32 %v1_37417, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37407

; uselistorder directives
  uselistorder i32 %v1_37417, { 1, 0 }
  uselistorder i32 %v4_37412, { 2, 1, 3, 0 }
  uselistorder i8 %v3_3740c, { 1, 0 }
  uselistorder i8 %v2_3740a, { 1, 0 }
  uselistorder i32 %v11_37402, { 1, 0, 2 }
  uselistorder i32 -21, { 0, 1, 2, 7, 3, 4, 5, 6 }
  uselistorder i32 862319701, { 7, 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i8 -24, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_37407, { 1, 0, 2 }
}

define i32 @function_3741e() local_unnamed_addr {
dec_label_pc_3741e:
  %v0_3741f = load i32, i32* @eax, align 4
  ret i32 %v0_3741f
}

define i32 @_Z12SerReadWriteI11CHashWriter7CScriptEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5) local_unnamed_addr {
dec_label_pc_37420:
  %v4_3743e = zext i8 %arg5 to i32
  ret i32 %v4_3743e
}

define i32 @function_37442(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37442:
  %v0_37442 = load i32, i32* @eax, align 4
  %v1_37442 = trunc i32 %v0_37442 to i8
  %v2_37442 = load i32, i32* @ebp, align 4
  %v3_37442 = add i32 %v2_37442, -41
  %v4_37442 = inttoptr i32 %v3_37442 to i8*
  store i8 %v1_37442, i8* %v4_37442, align 1
  %v0_37445 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_3744b = load i32, i32* @ebp, align 4
  %v2_3744b = add i32 %v1_3744b, -12
  %v3_3744b = inttoptr i32 %v2_3744b to i32*
  store i32 %v0_37445, i32* %v3_3744b, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 -41, { 2, 0, 3, 1, 4, 8, 5, 6, 7 }
}

define i32 @function_37452(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37452:
  %v1_37452 = load i32, i32* @ecx, align 4
  %v2_37452 = add i32 %v1_37452, -1962138556
  %v3_37452 = inttoptr i32 %v2_37452 to float*
  %v4_37452 = load float, float* %v3_37452, align 4
  %v5_37452 = fpext float %v4_37452 to x86_fp80
  %v6_37452 = load x86_fp80, x86_fp80* @st0, align 4
  %v7_37452 = fmul x86_fp80 %v5_37452, %v6_37452
  %v0_37458 = load i32, i32* @ebp, align 4
  %v2_37459 = add i32 %v1_37452, -1962400700
  %v3_37459 = inttoptr i32 %v2_37459 to double*
  %v4_37459 = load double, double* %v3_37459, align 4
  %v5_37459 = fpext double %v4_37459 to x86_fp80
  %v7_37459 = fmul x86_fp80 %v7_37452, %v5_37459
  store x86_fp80 %v7_37459, x86_fp80* @st0, align 4
  %v1_3745f = add i32 %v0_37458, 2
  store i32 %v1_3745f, i32* @ebp, align 4
  %v1_37460 = add i32 %v1_37452, -1
  store i32 %v1_37460, i32* @ecx, align 4
  %v1_37465 = add i32 %v0_37458, -26
  %v2_37465 = inttoptr i32 %v1_37465 to i32*
  %v3_37465 = load i32, i32* %v2_37465, align 4
  %v1_3746b = call i32 @unknown_6ed2a(i32 %v3_37465)
  store i32 0, i32* @eax, align 4
  %v0_37475 = load i32, i32* @ebp, align 4
  %v1_37475 = add i32 %v0_37475, -12
  %v2_37475 = inttoptr i32 %v1_37475 to i32*
  %v3_37475 = load i32, i32* %v2_37475, align 4
  %v1_37478 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37478 = xor i32 %v1_37478, %v3_37475
  %v3_37478 = icmp eq i32 %v2_37478, 0
  store i32 %v2_37478, i32* @edx, align 4
  br i1 %v3_37478, label %bb, label %dec_label_pc_37481

bb:                                               ; preds = %dec_label_pc_37452
  %v1_3747f = call i32 @function_37486()
  br label %dec_label_pc_37481

dec_label_pc_37481:                               ; preds = %bb, %dec_label_pc_37452
  %v4_3747f = phi i32 [ %v1_3747f, %bb ], [ 0, %dec_label_pc_37452 ]
  ret i32 %v4_3747f

; uselistorder directives
  uselistorder i32 -1962400700, { 1, 0 }
  uselistorder i32 -1962138556, { 1, 0 }
}

define i32 @function_37486() local_unnamed_addr {
dec_label_pc_37486:
  %v0_37487 = load i32, i32* @eax, align 4
  ret i32 %v0_37487
}

define i32 @_Z12SerReadWriteI11CHashWriterxEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37488:
  ret i32 %arg2
}

define i32 @function_374f6() local_unnamed_addr {
dec_label_pc_374f6:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_374f6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_374f6 = add i32 %v0_374f6, -1
  store i32 %v1_374f6, i32* %ecx.global-to-local, align 4
  %v0_374f8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_374f8
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI6CKeyIDEEE14internal_visitI14CNoDestinationEEbRT_i(i32 %arg1) local_unnamed_addr {
dec_label_pc_374fa:
  ret i32 %arg1
}

define i32 @function_37508(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37508:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_37508 = load i32, i32* @eax, align 4
  %v2_37508 = or i32 %v0_37508, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_37508, i32* %eax.global-to-local, align 4
  %v0_3750a = load i32, i32* @ebp, align 4
  %v0_3750b = load i32, i32* @ecx, align 4
  %v1_3750b = add i32 %v0_3750b, 255
  %v1_3750d = add i32 %v0_3750a, 2
  store i32 %v1_3750d, i32* @ebp, align 4
  %v1_3750e = add i32 %v0_3750b, -1587159996
  %v2_3750e = inttoptr i32 %v1_3750e to i8*
  %v3_3750e = load i8, i8* %v2_3750e, align 1
  %v5_3750e = trunc i32 %v1_3750b to i8
  %v8_3750e = add i8 %v3_3750e, %v5_3750e
  %v28_3750e = icmp ult i8 %v8_3750e, %v3_3750e
  store i1 %v28_3750e, i1* %cf.global-to-local, align 1
  store i8 %v8_3750e, i8* %v2_3750e, align 1
  %v0_37514 = load i32, i32* %eax.global-to-local, align 4
  %v1_37514 = trunc i32 %v0_37514 to i8
  %v2_37514 = load i1, i1* %cf.global-to-local, align 1
  %v3_37514 = zext i1 %v2_37514 to i8
  %v4_37514 = add i8 %v3_37514, %v1_37514
  %v19_37514 = icmp ule i8 %v4_37514, %v1_37514
  %v21_37514 = icmp eq i1 %v2_37514, %v19_37514
  store i1 %v21_37514, i1* %cf.global-to-local, align 1
  %v22_37514 = zext i8 %v4_37514 to i32
  %v24_37514 = and i32 %v0_37514, -256
  %v25_37514 = or i32 %v22_37514, %v24_37514
  store i32 %v25_37514, i32* %eax.global-to-local, align 4
  %v1_37516 = inttoptr i32 %v25_37514 to i8*
  %v2_37516 = load i8, i8* %v1_37516, align 1
  %v5_37516 = add i8 %v2_37516, %v4_37514
  %v10_37516 = icmp ult i8 %v5_37516, %v2_37516
  store i1 %v10_37516, i1* %cf.global-to-local, align 1
  store i8 %v5_37516, i8* %v1_37516, align 1
  %v22_37516 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_37516

; uselistorder directives
  uselistorder i8 %v2_37516, { 1, 0 }
  uselistorder i8 %v4_37514, { 0, 2, 1 }
  uselistorder i8 %v1_37514, { 1, 0 }
  uselistorder i8 %v3_3750e, { 1, 0 }
}

define i32 @function_3751a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3751a:
  %v0_3751d = load i32, i32* @ebp, align 4
  %v1_3751d = add i32 %v0_3751d, -28
  %v2_3751d = inttoptr i32 %v1_3751d to i32*
  %v3_3751d = load i32, i32* %v2_3751d, align 4
  %v1_37520 = inttoptr i32 %v3_3751d to i32*
  %v2_37520 = load i32, i32* %v1_37520, align 4
  %v1_37522 = add i32 %v0_3751d, -32
  %v2_37522 = inttoptr i32 %v1_37522 to i32*
  %v3_37522 = load i32, i32* %v2_37522, align 4
  %v2_3752c = call i32 @unknown_6eebc(i32 %v2_37520, i32 %v3_37522)
  store i32 %v2_3752c, i32* @eax, align 4
  %v0_37531 = load i32, i32* @ebp, align 4
  %v1_37531 = add i32 %v0_37531, -12
  %v2_37531 = inttoptr i32 %v1_37531 to i32*
  %v3_37531 = load i32, i32* %v2_37531, align 4
  %v1_37534 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37534 = icmp eq i32 %v1_37534, %v3_37531
  br i1 %v3_37534, label %bb, label %dec_label_pc_3753d

bb:                                               ; preds = %dec_label_pc_3751a
  %v1_3753b = call i32 @function_37542()
  br label %dec_label_pc_3753d

dec_label_pc_3753d:                               ; preds = %bb, %dec_label_pc_3751a
  %v2_3753b = phi i32 [ %v1_3753b, %bb ], [ %v2_3752c, %dec_label_pc_3751a ]
  ret i32 %v2_3753b
}

define i32 @function_37542() local_unnamed_addr {
dec_label_pc_37542:
  %v0_37543 = load i32, i32* @eax, align 4
  ret i32 %v0_37543
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI6CKeyIDEEE14internal_visitIS4_EEbRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37544:
  %v0_3755c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3755c
}

define i32 @function_37562(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37562:
  %v0_37562 = load i32, i32* @eax, align 4
  %v1_37562 = load i32, i32* @ebp, align 4
  %v2_37562 = add i32 %v1_37562, -12
  %v3_37562 = inttoptr i32 %v2_37562 to i32*
  store i32 %v0_37562, i32* %v3_37562, align 4
  %v0_37567 = load i32, i32* @ebp, align 4
  %v1_37567 = add i32 %v0_37567, -28
  %v2_37567 = inttoptr i32 %v1_37567 to i32*
  %v3_37567 = load i32, i32* %v2_37567, align 4
  %v1_3756a = inttoptr i32 %v3_37567 to i32*
  %v2_3756a = load i32, i32* %v1_3756a, align 4
  %v1_3756c = add i32 %v0_37567, -32
  %v2_3756c = inttoptr i32 %v1_3756c to i32*
  %v3_3756c = load i32, i32* %v2_3756c, align 4
  %v2_37576 = call i32 @unknown_6ef3c(i32 %v2_3756a, i32 %v3_3756c)
  store i32 %v2_37576, i32* @eax, align 4
  %v0_3757b = load i32, i32* @ebp, align 4
  %v1_3757b = add i32 %v0_3757b, -12
  %v2_3757b = inttoptr i32 %v1_3757b to i32*
  %v3_3757b = load i32, i32* %v2_3757b, align 4
  %v1_3757e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3757e = icmp eq i32 %v1_3757e, %v3_3757b
  br i1 %v3_3757e, label %bb, label %dec_label_pc_37587

bb:                                               ; preds = %dec_label_pc_37562
  %v1_37585 = call i32 @function_3758c()
  br label %dec_label_pc_37587

dec_label_pc_37587:                               ; preds = %bb, %dec_label_pc_37562
  %v2_37585 = phi i32 [ %v1_37585, %bb ], [ %v2_37576, %dec_label_pc_37562 ]
  ret i32 %v2_37585
}

define i32 @function_3758c() local_unnamed_addr {
dec_label_pc_3758c:
  %v0_3758d = load i32, i32* @eax, align 4
  ret i32 %v0_3758d
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI6CKeyIDEEE14internal_visitI9CScriptIDEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3758e:
  %v2_375b4 = load i32, i32* %arg1, align 4
  %v2_375c0 = call i32 @unknown_6efe0(i32 %v2_375b4, i32 %arg2)
  store i32 %v2_375c0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_375d1

bb:                                               ; preds = %dec_label_pc_3758e
  %v1_375cf = call i32 @function_375d6()
  br label %dec_label_pc_375d1

dec_label_pc_375d1:                               ; preds = %bb, %dec_label_pc_3758e
  %v2_375cf = phi i32 [ %v1_375cf, %bb ], [ %v2_375c0, %dec_label_pc_3758e ]
  ret i32 %v2_375cf
}

declare i32 @__stack_chk_fail.1473(i32, i32, i32) local_unnamed_addr

define i32 @function_375d6() local_unnamed_addr {
dec_label_pc_375d6:
  %v0_375d7 = load i32, i32* @eax, align 4
  ret i32 %v0_375d7
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitI14CNoDestinationEEvRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_375d8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37607

bb:                                               ; preds = %dec_label_pc_375d8
  %v4_37605 = call i32 @function_3760c(i32 %arg3, i32 %arg2, i32 %arg1)
  br label %dec_label_pc_37607

dec_label_pc_37607:                               ; preds = %bb, %dec_label_pc_375d8
  %v5_37605 = phi i32 [ %v4_37605, %bb ], [ 0, %dec_label_pc_375d8 ]
  ret i32 %v5_37605
}

define i32 @function_3760c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3760c:
  %v0_3760d = load i32, i32* @eax, align 4
  ret i32 %v0_3760d
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitI6CKeyIDEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3760e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v0_37626 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i32 %tmp104, i32* %eax.global-to-local, align 4
  %v2_37634 = load i32, i32* %arg1, align 4
  store i32 %v2_37634, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_37639 = inttoptr i32 %v2_37634 to i32*
  %v2_37639 = load i32, i32* %v1_37639, align 4
  %v2_3763b = inttoptr i32 %arg2 to i32*
  store i32 %v2_37639, i32* %v2_3763b, align 4
  %v0_3763d = load i32, i32* %edx.global-to-local, align 4
  %v1_3763d = add i32 %v0_3763d, 4
  %v2_3763d = inttoptr i32 %v1_3763d to i32*
  %v3_3763d = load i32, i32* %v2_3763d, align 4
  %v1_37640 = load i32, i32* %eax.global-to-local, align 4
  %v2_37640 = add i32 %v1_37640, 4
  %v3_37640 = inttoptr i32 %v2_37640 to i32*
  store i32 %v3_3763d, i32* %v3_37640, align 4
  %v0_37643 = load i32, i32* %edx.global-to-local, align 4
  %v1_37643 = add i32 %v0_37643, 8
  %v2_37643 = inttoptr i32 %v1_37643 to i32*
  %v3_37643 = load i32, i32* %v2_37643, align 4
  %v1_37646 = load i32, i32* %eax.global-to-local, align 4
  %v2_37646 = add i32 %v1_37646, 8
  %v3_37646 = inttoptr i32 %v2_37646 to i32*
  store i32 %v3_37643, i32* %v3_37646, align 4
  %v0_37649 = load i32, i32* %edx.global-to-local, align 4
  %v1_37649 = add i32 %v0_37649, 12
  %v2_37649 = inttoptr i32 %v1_37649 to i32*
  %v3_37649 = load i32, i32* %v2_37649, align 4
  %v1_3764c = load i32, i32* %eax.global-to-local, align 4
  %v2_3764c = add i32 %v1_3764c, 12
  %v3_3764c = inttoptr i32 %v2_3764c to i32*
  store i32 %v3_37649, i32* %v3_3764c, align 4
  %v0_3764f = load i32, i32* %edx.global-to-local, align 4
  %v1_3764f = add i32 %v0_3764f, 16
  %v2_3764f = inttoptr i32 %v1_3764f to i32*
  %v3_3764f = load i32, i32* %v2_3764f, align 4
  store i32 %v3_3764f, i32* %edx.global-to-local, align 4
  %v1_37652 = load i32, i32* %eax.global-to-local, align 4
  %v2_37652 = add i32 %v1_37652, 16
  %v3_37652 = inttoptr i32 %v2_37652 to i32*
  store i32 %v3_3764f, i32* %v3_37652, align 4
  store i32 %v0_37626, i32* %eax.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37661

bb:                                               ; preds = %dec_label_pc_3760e
  %v4_3765f = call i32 @function_37666(i32 %arg3, i32 %arg2, i32 %tmp104)
  store i32 %v4_3765f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37661

dec_label_pc_37661:                               ; preds = %bb, %dec_label_pc_3760e
  %v5_3765f = phi i32 [ %v4_3765f, %bb ], [ 0, %dec_label_pc_3760e ]
  ret i32 %v5_3765f

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_37666(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37666:
  %v0_37667 = load i32, i32* @eax, align 4
  ret i32 %v0_37667
}

define i32 @_ZNK5boost6detail7variant14assign_storage14internal_visitI9CScriptIDEEvRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37668:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  store i32 %tmp103, i32* %eax.global-to-local, align 4
  %v2_3768e = load i32, i32* %arg1, align 4
  store i32 %v2_3768e, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_37693 = inttoptr i32 %v2_3768e to i32*
  %v2_37693 = load i32, i32* %v1_37693, align 4
  %v2_37695 = inttoptr i32 %arg2 to i32*
  store i32 %v2_37693, i32* %v2_37695, align 4
  %v0_37697 = load i32, i32* %edx.global-to-local, align 4
  %v1_37697 = add i32 %v0_37697, 4
  %v2_37697 = inttoptr i32 %v1_37697 to i32*
  %v3_37697 = load i32, i32* %v2_37697, align 4
  %v1_3769a = load i32, i32* %eax.global-to-local, align 4
  %v2_3769a = add i32 %v1_3769a, 4
  %v3_3769a = inttoptr i32 %v2_3769a to i32*
  store i32 %v3_37697, i32* %v3_3769a, align 4
  %v4_3769a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_3769a

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_3769e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3769e:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_3769e = load i32, i32* @edx, align 4
  %v1_3769e = add i32 %v0_3769e, -1
  store i32 %v1_3769e, i32* %edx.global-to-local, align 4
  %v0_3769f = load i32, i32* @ecx, align 4
  %v1_3769f = add i32 %v0_3769f, 1250625608
  %v2_3769f = inttoptr i32 %v1_3769f to i8*
  %v3_3769f = load i8, i8* %v2_3769f, align 1
  %v5_3769f = trunc i32 %v0_3769f to i8
  %v6_3769f = or i8 %v3_3769f, %v5_3769f
  store i8 %v6_3769f, i8* %v2_3769f, align 1
  %v0_376a5 = load i32, i32* @eax, align 4
  %v2_376a5 = or i32 %v0_376a5, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  %v1_376a7 = add i32 %v2_376a5, -1
  %v11_376a8 = or i32 %v1_376a7, 139
  store i32 %v11_376a8, i32* %eax.global-to-local, align 4
  %v0_376aa = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_376aa, i32* %stack_var_-4, align 4
  %v0_376ab = load i32, i32* @ecx, align 4
  %v1_376ab = add i32 %v0_376ab, 1166741584
  %v2_376ab = inttoptr i32 %v1_376ab to i8*
  %v3_376ab = load i8, i8* %v2_376ab, align 1
  %v5_376ab = trunc i32 %v0_376ab to i8
  %v8_376ab = add i8 %v3_376ab, %v5_376ab
  store i8 %v8_376ab, i8* %v2_376ab, align 1
  %v0_376b2 = load i32, i32* %eax.global-to-local, align 4
  %v1_376b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_376b2 = xor i32 %v1_376b2, %v0_376b2
  %v3_376b2 = icmp eq i32 %v2_376b2, 0
  store i32 %v2_376b2, i32* @eax, align 4
  br i1 %v3_376b2, label %bb, label %dec_label_pc_376bb

bb:                                               ; preds = %dec_label_pc_3769e
  %v1_376b9 = load i32, i32* %stack_var_-4, align 4
  %v2_376b9 = call i32 @function_376c0(i32 %v1_376b9)
  store i32 %v2_376b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_376bb

dec_label_pc_376bb:                               ; preds = %bb, %dec_label_pc_3769e
  %v3_376b9 = phi i32 [ %v2_376b9, %bb ], [ %v2_376b2, %dec_label_pc_3769e ]
  ret i32 %v3_376b9
}

define i32 @function_376c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_376c0:
  %v0_376c1 = load i32, i32* @eax, align 4
  ret i32 %v0_376c1
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner14internal_visitIS1_EEvRKT_i() local_unnamed_addr {
dec_label_pc_376c2:
  %eax.global-to-local = alloca i32, align 4
  %v17_376c6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_376c6
}

define i32 @function_376cb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_376cb:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_376cb = load i32, i32* @ecx, align 4
  %v1_376cb = add i32 %v0_376cb, 1166795845
  %v2_376cb = inttoptr i32 %v1_376cb to i8*
  %v3_376cb = load i8, i8* %v2_376cb, align 1
  %v5_376cb = trunc i32 %v0_376cb to i8
  %v6_376cb = or i8 %v3_376cb, %v5_376cb
  store i8 %v6_376cb, i8* %v2_376cb, align 1
  %v0_376d1 = load i32, i32* @eax, align 4
  %v2_376d1 = or i32 %v0_376d1, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_376d1, i32* %eax.global-to-local, align 4
  %v0_376d3 = load i32, i32* @ebp, align 4
  %v0_376d4 = load i32, i32* @ecx, align 4
  %v1_376d4 = add i32 %v0_376d4, -1
  store i32 %v1_376d4, i32* %ecx.global-to-local, align 4
  %v1_376d6 = add i32 %v0_376d3, 2
  store i32 %v1_376d6, i32* @ebp, align 4
  %v1_376d7 = add i32 %v0_376d4, -1587159996
  %v2_376d7 = inttoptr i32 %v1_376d7 to i8*
  %v3_376d7 = load i8, i8* %v2_376d7, align 1
  %v5_376d7 = trunc i32 %v1_376d4 to i8
  %v8_376d7 = add i8 %v3_376d7, %v5_376d7
  %v28_376d7 = icmp ult i8 %v8_376d7, %v3_376d7
  store i1 %v28_376d7, i1* %cf.global-to-local, align 1
  store i8 %v8_376d7, i8* %v2_376d7, align 1
  %v0_376dd = load i32, i32* %eax.global-to-local, align 4
  %v1_376dd = trunc i32 %v0_376dd to i8
  %v2_376dd = load i1, i1* %cf.global-to-local, align 1
  %v3_376dd = zext i1 %v2_376dd to i8
  %v4_376dd = add i8 %v3_376dd, %v1_376dd
  %v19_376dd = icmp ule i8 %v4_376dd, %v1_376dd
  %v21_376dd = icmp eq i1 %v2_376dd, %v19_376dd
  store i1 %v21_376dd, i1* %cf.global-to-local, align 1
  %v22_376dd = zext i8 %v4_376dd to i32
  %v24_376dd = and i32 %v0_376dd, -256
  %v25_376dd = or i32 %v22_376dd, %v24_376dd
  store i32 %v25_376dd, i32* %eax.global-to-local, align 4
  %v1_376df = inttoptr i32 %v25_376dd to i8*
  %v2_376df = load i8, i8* %v1_376df, align 1
  %v5_376df = add i8 %v2_376df, %v4_376dd
  store i8 %v5_376df, i8* %v1_376df, align 1
  %v0_376e1 = load i32, i32* %eax.global-to-local, align 4
  %v1_376e1 = load i32, i32* @ebp, align 4
  %v2_376e1 = add i32 %v1_376e1, -12
  %v3_376e1 = inttoptr i32 %v2_376e1 to i32*
  store i32 %v0_376e1, i32* %v3_376e1, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_376e6 = load i32, i32* @ebx, align 4
  %v0_376ea = load i32, i32* %ecx.global-to-local, align 4
  %v0_376ee = load i32, i32* @edx, align 4
  %v0_376f2 = load i32, i32* @ebp, align 4
  %v1_376f2 = add i32 %v0_376f2, -32
  %v2_376f2 = inttoptr i32 %v1_376f2 to i32*
  %v3_376f2 = load i32, i32* %v2_376f2, align 4
  store i32 %v3_376f2, i32* %eax.global-to-local, align 4
  %v1_376f9 = add i32 %v0_376f2, -28
  %v2_376f9 = inttoptr i32 %v1_376f9 to i32*
  %v3_376f9 = load i32, i32* %v2_376f9, align 4
  store i32 %v3_376f9, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_376ee, 16777216
  %v5_376ff = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_376ea, 16777216
  %v6_376ff = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_376e6, 16777216
  %v7_376ff = sdiv i32 %sext2, 16777216
  %v8_376ff = call i32 @unknown_6f14a(i32 %v3_376f9, i32 %v3_376f2, i32 %v5_376ff, i32 %v6_376ff, i32 %v7_376ff)
  store i32 %v8_376ff, i32* %eax.global-to-local, align 4
  %v0_37704 = load i32, i32* @ebp, align 4
  %v1_37704 = add i32 %v0_37704, -12
  %v2_37704 = inttoptr i32 %v1_37704 to i32*
  %v3_37704 = load i32, i32* %v2_37704, align 4
  store i32 %v3_37704, i32* %eax.global-to-local, align 4
  %v1_37707 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37707 = xor i32 %v1_37707, %v3_37704
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37707 = icmp eq i32 %v2_37707, 0
  store i32 %v2_37707, i32* @eax, align 4
  br i1 %v3_37707, label %bb, label %dec_label_pc_37710

bb:                                               ; preds = %dec_label_pc_376cb
  %v1_3770e = call i32 @function_37715()
  store i32 %v1_3770e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37710

dec_label_pc_37710:                               ; preds = %bb, %dec_label_pc_376cb
  %v3_3770e = phi i32 [ %v1_3770e, %bb ], [ %v2_37707, %dec_label_pc_376cb ]
  ret i32 %v3_3770e

; uselistorder directives
  uselistorder i8 %v4_376dd, { 0, 2, 1 }
  uselistorder i8 %v1_376dd, { 1, 0 }
  uselistorder i8 %v3_376d7, { 1, 0 }
  uselistorder i32 1166795845, { 4, 1, 7, 0, 5, 2, 3, 6 }
}

define i32 @function_37715() local_unnamed_addr {
dec_label_pc_37715:
  %v0_3771a = load i32, i32* @eax, align 4
  ret i32 %v0_3771a
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner14internal_visitIS2_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3771c:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_3771f = load i32, i32* %ebx.global-to-local, align 4
  %v0_37744 = load i32, i32* %ecx.global-to-local, align 4
  %v0_37748 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_37748, 16777216
  %v5_37759 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_37744, 16777216
  %v6_37759 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_3771f, 16777216
  %v7_37759 = sdiv i32 %sext2, 16777216
  %v8_37759 = call i32 @unknown_6f230(i32 %arg1, i32 %arg2, i32 %v5_37759, i32 %v6_37759, i32 %v7_37759)
  store i32 %v0_3771f, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_3771f, { 1, 0 }
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner14internal_visitIS3_EEvRKT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37776:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_37779 = load i32, i32* %ebx.global-to-local, align 4
  %v0_3779e = load i32, i32* %ecx.global-to-local, align 4
  %v0_377a2 = load i32, i32* %edx.global-to-local, align 4
  %sext = mul i32 %v0_377a2, 16777216
  %v5_377b3 = sdiv i32 %sext, 16777216
  %sext1 = mul i32 %v0_3779e, 16777216
  %v6_377b3 = sdiv i32 %sext1, 16777216
  %sext2 = mul i32 %v0_37779, 16777216
  %v7_377b3 = sdiv i32 %sext2, 16777216
  %v8_377b3 = call i32 @unknown_6f336(i32 %arg1, i32 %arg2, i32 %v5_377b3, i32 %v6_377b3, i32 %v7_377b3)
  store i32 %v0_37779, i32* %ebx.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_37779, { 1, 0 }
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI9CScriptIDEEE14internal_visitI14CNoDestinationEEbRT_i() local_unnamed_addr {
dec_label_pc_377d0:
  %eax.global-to-local = alloca i32, align 4
  %v17_377d3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_377d3
}

define i32 @function_377d6(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_377d6:
  %v0_377d6 = load i32, i32* @ebp, align 4
  %v1_377d6 = add i32 %v0_377d6, 8
  %v2_377d6 = inttoptr i32 %v1_377d6 to i32*
  %v3_377d6 = load i32, i32* %v2_377d6, align 4
  %v2_377d9 = add i32 %v0_377d6, -28
  %v3_377d9 = inttoptr i32 %v2_377d9 to i32*
  store i32 %v3_377d6, i32* %v3_377d9, align 4
  %v0_377dc = load i32, i32* @ebp, align 4
  %v1_377dc = add i32 %v0_377dc, 12
  %v2_377dc = inttoptr i32 %v1_377dc to i32*
  %v3_377dc = load i32, i32* %v2_377dc, align 4
  %v2_377df = add i32 %v0_377dc, -32
  %v3_377df = inttoptr i32 %v2_377df to i32*
  store i32 %v3_377dc, i32* %v3_377df, align 4
  %v0_377e2 = load i32, i32* @ebp, align 4
  %v1_377e2 = add i32 %v0_377e2, 16
  %v2_377e2 = inttoptr i32 %v1_377e2 to i32*
  %v3_377e2 = load i32, i32* %v2_377e2, align 4
  %v2_377e5 = add i32 %v0_377e2, -36
  %v3_377e5 = inttoptr i32 %v2_377e5 to i32*
  store i32 %v3_377e2, i32* %v3_377e5, align 4
  %v0_377e8 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_377ee = load i32, i32* @ebp, align 4
  %v2_377ee = add i32 %v1_377ee, -12
  %v3_377ee = inttoptr i32 %v2_377ee to i32*
  store i32 %v0_377e8, i32* %v3_377ee, align 4
  %v0_377f3 = load i32, i32* @ebp, align 4
  %v1_377f3 = add i32 %v0_377f3, -28
  %v2_377f3 = inttoptr i32 %v1_377f3 to i32*
  %v3_377f3 = load i32, i32* %v2_377f3, align 4
  %v1_377f6 = inttoptr i32 %v3_377f3 to i32*
  %v2_377f6 = load i32, i32* %v1_377f6, align 4
  %v1_377f8 = add i32 %v0_377f3, -32
  %v2_377f8 = inttoptr i32 %v1_377f8 to i32*
  %v3_377f8 = load i32, i32* %v2_377f8, align 4
  %v2_37802 = call i32 @unknown_6f43c(i32 %v2_377f6, i32 %v3_377f8)
  store i32 %v2_37802, i32* @eax, align 4
  %v0_37807 = load i32, i32* @ebp, align 4
  %v1_37807 = add i32 %v0_37807, -12
  %v2_37807 = inttoptr i32 %v1_37807 to i32*
  %v3_37807 = load i32, i32* %v2_37807, align 4
  %v1_3780a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3780a = icmp eq i32 %v1_3780a, %v3_37807
  br i1 %v3_3780a, label %bb, label %dec_label_pc_37813

bb:                                               ; preds = %dec_label_pc_377d6
  %v1_37811 = call i32 @function_37818()
  br label %dec_label_pc_37813

dec_label_pc_37813:                               ; preds = %bb, %dec_label_pc_377d6
  %v2_37811 = phi i32 [ %v1_37811, %bb ], [ %v2_37802, %dec_label_pc_377d6 ]
  ret i32 %v2_37811
}

define i32 @function_37818() local_unnamed_addr {
dec_label_pc_37818:
  %v0_37819 = load i32, i32* @eax, align 4
  ret i32 %v0_37819
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI9CScriptIDEEE14internal_visitI6CKeyIDEEbRT_i(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3781a:
  %v2_37840 = load i32, i32* %arg1, align 4
  %v2_3784c = call i32 @unknown_6f4bc(i32 %v2_37840, i32 %arg2)
  store i32 %v2_3784c, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_3785d

bb:                                               ; preds = %dec_label_pc_3781a
  %v1_3785b = call i32 @function_37862()
  br label %dec_label_pc_3785d

dec_label_pc_3785d:                               ; preds = %bb, %dec_label_pc_3781a
  %v2_3785b = phi i32 [ %v1_3785b, %bb ], [ %v2_3784c, %dec_label_pc_3781a ]
  ret i32 %v2_3785b
}

define i32 @function_37862() local_unnamed_addr {
dec_label_pc_37862:
  %v0_37863 = load i32, i32* @eax, align 4
  ret i32 %v0_37863
}

define i32 @_ZN5boost6detail7variant14invoke_visitorINS1_15direct_assignerI9CScriptIDEEE14internal_visitIS4_EEbRT_i(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37864:
  %v0_3787c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_3787c
}

define i32 @function_37882(i32 %arg1) local_unnamed_addr {
dec_label_pc_37882:
  %v0_37882 = load i32, i32* @eax, align 4
  %v1_37882 = load i32, i32* @ebp, align 4
  %v2_37882 = add i32 %v1_37882, -12
  %v3_37882 = inttoptr i32 %v2_37882 to i32*
  store i32 %v0_37882, i32* %v3_37882, align 4
  %v0_37887 = load i32, i32* @ebp, align 4
  %v1_37887 = add i32 %v0_37887, -28
  %v2_37887 = inttoptr i32 %v1_37887 to i32*
  %v3_37887 = load i32, i32* %v2_37887, align 4
  %v1_3788a = inttoptr i32 %v3_37887 to i32*
  %v2_3788a = load i32, i32* %v1_3788a, align 4
  %v1_3788c = add i32 %v0_37887, -32
  %v2_3788c = inttoptr i32 %v1_3788c to i32*
  %v3_3788c = load i32, i32* %v2_3788c, align 4
  %v2_37896 = call i32 @unknown_6f53c(i32 %v2_3788a, i32 %v3_3788c)
  store i32 %v2_37896, i32* @eax, align 4
  %v0_3789b = load i32, i32* @ebp, align 4
  %v1_3789b = add i32 %v0_3789b, -12
  %v2_3789b = inttoptr i32 %v1_3789b to i32*
  %v3_3789b = load i32, i32* %v2_3789b, align 4
  %v1_3789e = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3789e = icmp eq i32 %v1_3789e, %v3_3789b
  br i1 %v3_3789e, label %bb, label %dec_label_pc_378a7

bb:                                               ; preds = %dec_label_pc_37882
  %v1_378a5 = call i32 @function_378ac()
  br label %dec_label_pc_378a7

dec_label_pc_378a7:                               ; preds = %bb, %dec_label_pc_37882
  %v2_378a5 = phi i32 [ %v1_378a5, %bb ], [ %v2_37896, %dec_label_pc_37882 ]
  ret i32 %v2_378a5
}

declare i32 @__stack_chk_fail.1480(i32) local_unnamed_addr

define i32 @function_378ac() local_unnamed_addr {
dec_label_pc_378ac:
  %v0_378ad = load i32, i32* @eax, align 4
  ret i32 %v0_378ad
}

define i32 @_Z9SerializeI11CHashWriter9COutPointEvRT_RKT0_li() local_unnamed_addr {
dec_label_pc_378ae:
  %eax.global-to-local = alloca i32, align 4
  %v5_378ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_378ae
}

define i32 @function_378af(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_378af:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %v1_378af = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_378af, i32* @ebp, align 4
  %v8_378f2 = call i32 @unknown_6f5e0(i32 %arg2, i32 %arg1, i32 %arg3, i32 %tmp6, i32 %tmp6, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37903

bb:                                               ; preds = %dec_label_pc_378af
  %v1_37901 = call i32 @function_37908()
  br label %dec_label_pc_37903

dec_label_pc_37903:                               ; preds = %bb, %dec_label_pc_378af
  %v2_37901 = phi i32 [ %v1_37901, %bb ], [ 0, %dec_label_pc_378af ]
  ret i32 %v2_37901

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 1, 68, 2, 69, 70, 71, 3, 72, 4, 5, 73, 6, 74, 75, 76, 77, 78, 79, 80, 81, 82, 7, 8 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37908() local_unnamed_addr {
dec_label_pc_37908:
  %v0_37909 = load i32, i32* @eax, align 4
  ret i32 %v0_37909
}

define i32 @_Z9SerializeI11CHashWriterEvRT_RK7CScriptii() local_unnamed_addr {
dec_label_pc_3790a:
  %eax.global-to-local = alloca i32, align 4
  %v17_3790d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_3790d
}

define i32 @function_37914(i32 %arg1) local_unnamed_addr {
dec_label_pc_37914:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37914 = load i32, i32* @ebp, align 4
  %v0_37918 = load i32, i32* @eax, align 4
  %v2_37918 = or i32 %v0_37918, zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 %v2_37918, i32* %eax.global-to-local, align 4
  %v1_3791a = add i32 %v0_37914, 3
  %v9_3791a = icmp eq i32 %v1_3791a, 0
  store i32 %v1_3791a, i32* %ebp.global-to-local, align 4
  %v0_3791b = load i32, i32* @ecx, align 4
  %v1_3791b = add i32 %v0_3791b, -1
  store i32 %v1_3791b, i32* %ecx.global-to-local, align 4
  %v2_3791b = icmp eq i32 %v1_3791b, 0
  %v4_3791b = or i1 %v9_3791a, %v2_3791b
  br i1 %v4_3791b, label %dec_label_pc_3791d, label %bb

bb:                                               ; preds = %dec_label_pc_37914
  %v7_3791b = call i32 @__stack_chk_fail.1480(i32 ptrtoint (i32* @9 to i32))
  store i32 %v7_3791b, i32* %eax.global-to-local, align 4
  %v0_3791d.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_3791e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v6_3791e.pre = load i1, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_3791d

dec_label_pc_3791d:                               ; preds = %dec_label_pc_37914, %bb
  %v6_3791e = phi i1 [ false, %dec_label_pc_37914 ], [ %v6_3791e.pre, %bb ]
  %v30_3791e = phi i32 [ %v1_3791b, %dec_label_pc_37914 ], [ %v0_3791e.pre, %bb ]
  %v0_3791d = phi i32 [ %v1_3791a, %dec_label_pc_37914 ], [ %v0_3791d.pre, %bb ]
  %v1_3791d = add i32 %v0_3791d, 1
  store i32 %v1_3791d, i32* %ebp.global-to-local, align 4
  %v1_3791e = add i32 %v30_3791e, 1166793797
  %v2_3791e = inttoptr i32 %v1_3791e to i8*
  %v3_3791e = load i8, i8* %v2_3791e, align 1
  %v5_3791e = trunc i32 %v30_3791e to i8
  %v7_3791e = zext i1 %v6_3791e to i8
  %v8_3791e = add i8 %v3_3791e, %v5_3791e
  %v9_3791e = add i8 %v8_3791e, %v7_3791e
  %v27_3791e = icmp ule i8 %v9_3791e, %v3_3791e
  %v28_3791e = icmp ult i8 %v8_3791e, %v3_3791e
  %v29_3791e = select i1 %v6_3791e, i1 %v27_3791e, i1 %v28_3791e
  store i1 %v29_3791e, i1* %cf.global-to-local, align 1
  store i8 %v9_3791e, i8* %v2_3791e, align 1
  %v0_37924 = load i32, i32* %eax.global-to-local, align 4
  %v1_37924 = trunc i32 %v0_37924 to i8
  %v2_37924 = load i1, i1* %cf.global-to-local, align 1
  %v3_37924 = zext i1 %v2_37924 to i8
  %v4_37924 = add i8 %v1_37924, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_37924 = add i8 %v4_37924, %v3_37924
  %v20_37924 = add i8 %v1_37924, -119
  %v21_37924 = add i8 %v20_37924, %v3_37924
  %v22_37924 = icmp ule i8 %v21_37924, %v1_37924
  %v23_37924 = icmp ugt i8 %v1_37924, 118
  %v24_37924 = select i1 %v2_37924, i1 %v22_37924, i1 %v23_37924
  %v25_37924 = zext i8 %v5_37924 to i32
  %v27_37924 = and i32 %v0_37924, -256
  %v28_37924 = or i32 %v25_37924, %v27_37924
  store i32 %v28_37924, i32* %eax.global-to-local, align 4
  %v0_37926 = load i32, i32* %ebp.global-to-local, align 4
  %v1_37926 = add i32 %v0_37926, 1
  store i32 %v1_37926, i32* @ebp, align 4
  %v3_3792a = zext i1 %v24_37924 to i8
  %v4_3792a = add i8 %v3_3792a, %v5_37924
  %v19_3792a = icmp ule i8 %v4_3792a, %v5_37924
  %v21_3792a = icmp eq i1 %v24_37924, %v19_3792a
  store i1 %v21_3792a, i1* %cf.global-to-local, align 1
  %v22_3792a = zext i8 %v4_3792a to i32
  %v25_3792a = or i32 %v22_3792a, %v27_37924
  store i32 %v25_3792a, i32* %eax.global-to-local, align 4
  %v1_3792c = inttoptr i32 %v25_3792a to i8*
  %v2_3792c = load i8, i8* %v1_3792c, align 1
  %v5_3792c = add i8 %v2_3792c, %v4_3792a
  store i8 %v5_3792c, i8* %v1_3792c, align 1
  %v0_3792e = load i32, i32* %eax.global-to-local, align 4
  %v1_3792e = load i32, i32* @ebp, align 4
  %v2_3792e = add i32 %v1_3792e, -12
  %v3_3792e = inttoptr i32 %v2_3792e to i32*
  store i32 %v0_3792e, i32* %v3_3792e, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37933 = load i32, i32* @ebp, align 4
  %v1_37933 = add i32 %v0_37933, -32
  %v2_37933 = inttoptr i32 %v1_37933 to i32*
  %v3_37933 = load i32, i32* %v2_37933, align 4
  store i32 %v3_37933, i32* %eax.global-to-local, align 4
  %v1_37936 = add i32 %v0_37933, -40
  %v2_37936 = inttoptr i32 %v1_37936 to i32*
  %v3_37936 = load i32, i32* %v2_37936, align 4
  %v1_3793d = add i32 %v0_37933, -36
  %v2_3793d = inttoptr i32 %v1_3793d to i32*
  %v3_3793d = load i32, i32* %v2_3793d, align 4
  %v1_37948 = add i32 %v0_37933, -28
  %v2_37948 = inttoptr i32 %v1_37948 to i32*
  %v3_37948 = load i32, i32* %v2_37948, align 4
  store i32 %v3_37948, i32* %eax.global-to-local, align 4
  %v4_3794e = call i32 @unknown_6f6db(i32 %v3_37948, i32 %v3_37933, i32 %v3_3793d, i32 %v3_37936)
  store i32 %v4_3794e, i32* %eax.global-to-local, align 4
  %v0_37953 = load i32, i32* @ebp, align 4
  %v1_37953 = add i32 %v0_37953, -12
  %v2_37953 = inttoptr i32 %v1_37953 to i32*
  %v3_37953 = load i32, i32* %v2_37953, align 4
  store i32 %v3_37953, i32* %eax.global-to-local, align 4
  %v1_37956 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37956 = xor i32 %v1_37956, %v3_37953
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37956 = icmp eq i32 %v2_37956, 0
  store i32 %v2_37956, i32* @eax, align 4
  br i1 %v3_37956, label %bb11, label %dec_label_pc_3795f

bb11:                                             ; preds = %dec_label_pc_3791d
  %v1_3795d = call i32 @function_37964()
  store i32 %v1_3795d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_3795f

dec_label_pc_3795f:                               ; preds = %bb11, %dec_label_pc_3791d
  %v3_3795d = phi i32 [ %v1_3795d, %bb11 ], [ %v2_37956, %dec_label_pc_3791d ]
  ret i32 %v3_3795d

; uselistorder directives
  uselistorder i32 %v0_37933, { 1, 0, 2, 3 }
  uselistorder i8 %v4_3792a, { 0, 2, 1 }
  uselistorder i8 %v5_37924, { 1, 0, 2 }
  uselistorder i8 %v9_3791e, { 1, 0 }
  uselistorder i8 %v8_3791e, { 1, 0 }
  uselistorder i8 %v3_3791e, { 1, 2, 0 }
  uselistorder i32 %v30_3791e, { 1, 0 }
  uselistorder i1 %v6_3791e, { 1, 0 }
  uselistorder i32 %v1_3791b, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 11 }
  uselistorder i32 1166793797, { 1, 4, 2, 3, 0 }
  uselistorder i32 (i32)* @__stack_chk_fail.1480, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @9 to i32), { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1, 40, 42, 41, 43, 44, 45, 50, 51, 48, 46, 47, 49, 53, 55, 52, 54, 56, 57, 58, 60, 0, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 3, { 6, 7, 0, 17, 8, 9, 10, 11, 12, 13, 14, 1, 15, 18, 19, 20, 21, 22, 2, 3, 4, 5, 16, 23 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_89.2254 to i8) to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_3791d, { 1, 0 }
}

define i32 @function_37964() local_unnamed_addr {
dec_label_pc_37964:
  %v0_37965 = load i32, i32* @eax, align 4
  ret i32 %v0_37965
}

define i32 @_Z9SerializeI11CHashWriterEvRT_xii(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37966:
  ret i32 %arg3
}

define i32 @function_37980(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37980:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_37980 = load i32, i32* @eax, align 4
  %v1_37980 = trunc i32 %v0_37980 to i8
  %v2_37980 = load i1, i1* @cf, align 1
  %v3_37980 = zext i1 %v2_37980 to i8
  %v4_37980 = add i8 %v1_37980, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_37980 = add i8 %v4_37980, %v3_37980
  %v20_37980 = add i8 %v1_37980, -119
  %v21_37980 = add i8 %v20_37980, %v3_37980
  %v22_37980 = icmp ule i8 %v21_37980, %v1_37980
  %v23_37980 = icmp ugt i8 %v1_37980, 118
  %v24_37980 = select i1 %v2_37980, i1 %v22_37980, i1 %v23_37980
  store i1 %v24_37980, i1* %cf.global-to-local, align 1
  %v25_37980 = zext i8 %v5_37980 to i32
  %v27_37980 = and i32 %v0_37980, -256
  %v28_37980 = or i32 %v25_37980, %v27_37980
  store i32 %v28_37980, i32* %eax.global-to-local, align 4
  %v0_37982 = load i32, i32* @ebp, align 4
  %v0_37983 = load i32, i32* @ecx, align 4
  %v1_37983 = add i32 %v0_37983, 255
  %v1_37985 = add i32 %v0_37982, 2
  store i32 %v1_37985, i32* @ebp, align 4
  %v1_37986 = add i32 %v0_37983, -1587162044
  %v2_37986 = inttoptr i32 %v1_37986 to i8*
  %v3_37986 = load i8, i8* %v2_37986, align 1
  %v5_37986 = trunc i32 %v1_37983 to i8
  %v7_37986 = zext i1 %v24_37980 to i8
  %v8_37986 = sub i8 %v3_37986, %v5_37986
  %v9_37986 = add i8 %v8_37986, %v7_37986
  %v19_37986 = sub i8 %v8_37986, %v7_37986
  %v20_37986 = icmp ult i8 %v3_37986, %v19_37986
  %v21_37986 = icmp ne i8 %v5_37986, -1
  %v22_37986 = or i1 %v21_37986, %v20_37986
  %v23_37986 = icmp ult i8 %v3_37986, %v5_37986
  %v24_37986 = select i1 %v24_37980, i1 %v22_37986, i1 %v23_37986
  store i1 %v24_37986, i1* %cf.global-to-local, align 1
  store i8 %v9_37986, i8* %v2_37986, align 1
  %v0_3798c = load i32, i32* %eax.global-to-local, align 4
  %v1_3798c = trunc i32 %v0_3798c to i8
  %v2_3798c = load i1, i1* %cf.global-to-local, align 1
  %v3_3798c = zext i1 %v2_3798c to i8
  %v4_3798c = add i8 %v3_3798c, %v1_3798c
  %v19_3798c = icmp ule i8 %v4_3798c, %v1_3798c
  %v21_3798c = icmp eq i1 %v2_3798c, %v19_3798c
  store i1 %v21_3798c, i1* %cf.global-to-local, align 1
  %v22_3798c = zext i8 %v4_3798c to i32
  %v24_3798c = and i32 %v0_3798c, -256
  %v25_3798c = or i32 %v22_3798c, %v24_3798c
  store i32 %v25_3798c, i32* %eax.global-to-local, align 4
  %v1_3798e = inttoptr i32 %v25_3798c to i8*
  %v2_3798e = load i8, i8* %v1_3798e, align 1
  %v5_3798e = add i8 %v2_3798e, %v4_3798c
  store i8 %v5_3798e, i8* %v1_3798e, align 1
  %v0_37990 = load i32, i32* %eax.global-to-local, align 4
  %v1_37990 = load i32, i32* @ebp, align 4
  %v2_37990 = add i32 %v1_37990, -12
  %v3_37990 = inttoptr i32 %v2_37990 to i32*
  store i32 %v0_37990, i32* %v3_37990, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_3799d = load i32, i32* @ebp, align 4
  %v1_3799d = add i32 %v0_3799d, -40
  store i32 %v1_3799d, i32* %eax.global-to-local, align 4
  %v1_379a4 = add i32 %v0_3799d, -28
  %v2_379a4 = inttoptr i32 %v1_379a4 to i32*
  %v3_379a4 = load i32, i32* %v2_379a4, align 4
  store i32 %v3_379a4, i32* %eax.global-to-local, align 4
  %v3_379aa = call i32 @unknown_476c8(i32 %v3_379a4, i32 %v1_3799d, i32 8)
  store i32 %v3_379aa, i32* %eax.global-to-local, align 4
  %v0_379af = load i32, i32* @ebp, align 4
  %v1_379af = add i32 %v0_379af, -12
  %v2_379af = inttoptr i32 %v1_379af to i32*
  %v3_379af = load i32, i32* %v2_379af, align 4
  store i32 %v3_379af, i32* %eax.global-to-local, align 4
  %v1_379b2 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_379b2 = xor i32 %v1_379b2, %v3_379af
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_379b2 = icmp eq i32 %v2_379b2, 0
  store i32 %v2_379b2, i32* @eax, align 4
  br i1 %v3_379b2, label %bb, label %dec_label_pc_379bb

bb:                                               ; preds = %dec_label_pc_37980
  %v1_379b9 = call i32 @function_379c0()
  store i32 %v1_379b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_379bb

dec_label_pc_379bb:                               ; preds = %bb, %dec_label_pc_37980
  %v3_379b9 = phi i32 [ %v1_379b9, %bb ], [ %v2_379b2, %dec_label_pc_37980 ]
  ret i32 %v3_379b9

; uselistorder directives
  uselistorder i8 %v4_3798c, { 0, 2, 1 }
  uselistorder i8 %v1_3798c, { 1, 0 }
  uselistorder i8 %v8_37986, { 1, 0 }
  uselistorder i8 %v7_37986, { 1, 0 }
  uselistorder i8 %v5_37986, { 1, 0, 2 }
  uselistorder i1 %v24_37980, { 1, 0, 2 }
  uselistorder i32 255, { 0, 1, 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 20, 17, 18, 19, 23 }
}

define i32 @function_379c0() local_unnamed_addr {
dec_label_pc_379c0:
  %v0_379c1 = load i32, i32* @eax, align 4
  ret i32 %v0_379c1
}

define i32 @_ZN5boost6detail7variant15direct_assignerI6CKeyIDEclI14CNoDestinationEEbRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_379c2:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_379f0

bb:                                               ; preds = %dec_label_pc_379c2
  %v3_379ee = call i32 @function_379f5(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_379f0

dec_label_pc_379f0:                               ; preds = %bb, %dec_label_pc_379c2
  %v4_379ee = phi i32 [ %v3_379ee, %bb ], [ 0, %dec_label_pc_379c2 ]
  ret i32 %v4_379ee
}

define i32 @function_379f5(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_379f5:
  %v0_379f6 = load i32, i32* @eax, align 4
  ret i32 %v0_379f6
}

define i32 @_ZN5boost6detail7variant15direct_assignerI6CKeyIDEclERS3_() local_unnamed_addr {
dec_label_pc_379f8:
  %eax.global-to-local = alloca i32, align 4
  %v17_379fb = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v17_379fb
}

define i32 @function_379fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_379fe:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_379fe = load i32, i32* @ebp, align 4
  %v1_379fe = add i32 %v0_379fe, 8
  %v2_379fe = inttoptr i32 %v1_379fe to i32*
  %v3_379fe = load i32, i32* %v2_379fe, align 4
  store i32 %v3_379fe, i32* %eax.global-to-local, align 4
  %v2_37a01 = add i32 %v0_379fe, -28
  %v3_37a01 = inttoptr i32 %v2_37a01 to i32*
  store i32 %v3_379fe, i32* %v3_37a01, align 4
  %v0_37a04 = load i32, i32* @ebp, align 4
  %v1_37a04 = add i32 %v0_37a04, 12
  %v2_37a04 = inttoptr i32 %v1_37a04 to i32*
  %v3_37a04 = load i32, i32* %v2_37a04, align 4
  store i32 %v3_37a04, i32* %eax.global-to-local, align 4
  %v2_37a07 = add i32 %v0_37a04, -32
  %v3_37a07 = inttoptr i32 %v2_37a07 to i32*
  store i32 %v3_37a04, i32* %v3_37a07, align 4
  %v0_37a0a = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37a10 = load i32, i32* @ebp, align 4
  %v2_37a10 = add i32 %v1_37a10, -12
  %v3_37a10 = inttoptr i32 %v2_37a10 to i32*
  store i32 %v0_37a0a, i32* %v3_37a10, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37a15 = load i32, i32* @ebp, align 4
  %v1_37a15 = add i32 %v0_37a15, -28
  %v2_37a15 = inttoptr i32 %v1_37a15 to i32*
  %v3_37a15 = load i32, i32* %v2_37a15, align 4
  store i32 %v3_37a15, i32* %eax.global-to-local, align 4
  %v1_37a18 = inttoptr i32 %v3_37a15 to i32*
  %v2_37a18 = load i32, i32* %v1_37a18, align 4
  store i32 %v2_37a18, i32* %edx.global-to-local, align 4
  %v1_37a1a = add i32 %v0_37a15, -32
  %v2_37a1a = inttoptr i32 %v1_37a1a to i32*
  %v3_37a1a = load i32, i32* %v2_37a1a, align 4
  store i32 %v3_37a1a, i32* %eax.global-to-local, align 4
  %v1_37a1d = inttoptr i32 %v2_37a18 to i32*
  %v2_37a1d = load i32, i32* %v1_37a1d, align 4
  %v2_37a1f = inttoptr i32 %v3_37a1a to i32*
  store i32 %v2_37a1d, i32* %v2_37a1f, align 4
  %v0_37a21 = load i32, i32* %edx.global-to-local, align 4
  %v1_37a21 = add i32 %v0_37a21, 4
  %v2_37a21 = inttoptr i32 %v1_37a21 to i32*
  %v3_37a21 = load i32, i32* %v2_37a21, align 4
  %v1_37a24 = load i32, i32* %eax.global-to-local, align 4
  %v2_37a24 = add i32 %v1_37a24, 4
  %v3_37a24 = inttoptr i32 %v2_37a24 to i32*
  store i32 %v3_37a21, i32* %v3_37a24, align 4
  %v0_37a27 = load i32, i32* %edx.global-to-local, align 4
  %v1_37a27 = add i32 %v0_37a27, 8
  %v2_37a27 = inttoptr i32 %v1_37a27 to i32*
  %v3_37a27 = load i32, i32* %v2_37a27, align 4
  %v1_37a2a = load i32, i32* %eax.global-to-local, align 4
  %v2_37a2a = add i32 %v1_37a2a, 8
  %v3_37a2a = inttoptr i32 %v2_37a2a to i32*
  store i32 %v3_37a27, i32* %v3_37a2a, align 4
  %v0_37a2d = load i32, i32* %edx.global-to-local, align 4
  %v1_37a2d = add i32 %v0_37a2d, 12
  %v2_37a2d = inttoptr i32 %v1_37a2d to i32*
  %v3_37a2d = load i32, i32* %v2_37a2d, align 4
  store i32 %v3_37a2d, i32* @ecx, align 4
  %v1_37a30 = load i32, i32* %eax.global-to-local, align 4
  %v2_37a30 = add i32 %v1_37a30, 12
  %v3_37a30 = inttoptr i32 %v2_37a30 to i32*
  store i32 %v3_37a2d, i32* %v3_37a30, align 4
  %v0_37a33 = load i32, i32* %edx.global-to-local, align 4
  %v1_37a33 = add i32 %v0_37a33, 16
  %v2_37a33 = inttoptr i32 %v1_37a33 to i32*
  %v3_37a33 = load i32, i32* %v2_37a33, align 4
  store i32 %v3_37a33, i32* %edx.global-to-local, align 4
  %v1_37a36 = load i32, i32* %eax.global-to-local, align 4
  %v2_37a36 = add i32 %v1_37a36, 16
  %v3_37a36 = inttoptr i32 %v2_37a36 to i32*
  store i32 %v3_37a33, i32* %v3_37a36, align 4
  store i32 1, i32* @eax, align 4
  %v0_37a3e = load i32, i32* @ebp, align 4
  %v1_37a3e = add i32 %v0_37a3e, -12
  %v2_37a3e = inttoptr i32 %v1_37a3e to i32*
  %v3_37a3e = load i32, i32* %v2_37a3e, align 4
  store i32 %v3_37a3e, i32* %edx.global-to-local, align 4
  %v1_37a41 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37a41 = xor i32 %v1_37a41, %v3_37a3e
  store i1 false, i1* @cf, align 1
  %v3_37a41 = icmp eq i32 %v2_37a41, 0
  store i32 %v2_37a41, i32* %edx.global-to-local, align 4
  br i1 %v3_37a41, label %bb, label %dec_label_pc_37a4a

bb:                                               ; preds = %dec_label_pc_379fe
  %v1_37a48 = call i32 @function_37a4f()
  store i32 %v1_37a48, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37a4a

dec_label_pc_37a4a:                               ; preds = %bb, %dec_label_pc_379fe
  %v2_37a48 = phi i32 [ %v1_37a48, %bb ], [ 1, %dec_label_pc_379fe ]
  ret i32 %v2_37a48
}

define i32 @function_37a4f() local_unnamed_addr {
dec_label_pc_37a4f:
  %v0_37a50 = load i32, i32* @eax, align 4
  ret i32 %v0_37a50
}

define i32 @_ZN5boost6detail7variant15direct_assignerI6CKeyIDEclI9CScriptIDEEbRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37a52:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37a80

bb:                                               ; preds = %dec_label_pc_37a52
  %v3_37a7e = call i32 @function_37a85(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_37a80

dec_label_pc_37a80:                               ; preds = %bb, %dec_label_pc_37a52
  %v4_37a7e = phi i32 [ %v3_37a7e, %bb ], [ 0, %dec_label_pc_37a52 ]
  ret i32 %v4_37a7e
}

define i32 @function_37a85(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37a85:
  %v0_37a86 = load i32, i32* @eax, align 4
  ret i32 %v0_37a86
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner11assign_implIS1_N4mpl_5bool_ILb1EEENS7_18has_fallback_type_EEEvRKT_SC_T0_T1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37a88:
  ret i32 %arg2
}

define i32 @function_37a9c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37a9c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_37a9c = load i32, i32* @ebp, align 4
  %v1_37a9c = add i32 %v0_37a9c, 1
  store i32 %v1_37a9c, i32* %ebp.global-to-local, align 4
  %v0_37a9d = load i32, i32* @eax, align 4
  %v1_37a9d = add i32 %v0_37a9d, -1240473787
  %v2_37a9d = inttoptr i32 %v1_37a9d to i8*
  %v3_37a9d = load i8, i8* %v2_37a9d, align 1
  %v4_37a9d = load i32, i32* @ecx, align 4
  %v5_37a9d = trunc i32 %v4_37a9d to i8
  %v6_37a9d = load i1, i1* @cf, align 1
  %v7_37a9d = zext i1 %v6_37a9d to i8
  %v8_37a9d = add i8 %v5_37a9d, %v3_37a9d
  %v9_37a9d = add i8 %v8_37a9d, %v7_37a9d
  %v27_37a9d = icmp ule i8 %v9_37a9d, %v3_37a9d
  %v28_37a9d = icmp ult i8 %v8_37a9d, %v3_37a9d
  %v29_37a9d = select i1 %v6_37a9d, i1 %v27_37a9d, i1 %v28_37a9d
  store i1 %v29_37a9d, i1* %cf.global-to-local, align 1
  store i8 %v9_37a9d, i8* %v2_37a9d, align 1
  %v0_37aa3 = load i32, i32* %ebp.global-to-local, align 4
  %v0_37aa4 = load i32, i32* @eax, align 4
  %v1_37aa4 = trunc i32 %v0_37aa4 to i8
  %v2_37aa4 = load i1, i1* %cf.global-to-local, align 1
  %v3_37aa4 = zext i1 %v2_37aa4 to i8
  %v4_37aa4 = add i8 %v1_37aa4, ptrtoint (i8* @global_var_88.2212 to i8)
  %v5_37aa4 = add i8 %v4_37aa4, %v3_37aa4
  %v20_37aa4 = add i8 %v1_37aa4, -120
  %v21_37aa4 = add i8 %v20_37aa4, %v3_37aa4
  %v22_37aa4 = icmp ule i8 %v21_37aa4, %v1_37aa4
  %v23_37aa4 = icmp ugt i8 %v1_37aa4, 119
  %v24_37aa4 = select i1 %v2_37aa4, i1 %v22_37aa4, i1 %v23_37aa4
  store i1 %v24_37aa4, i1* %cf.global-to-local, align 1
  %v25_37aa4 = zext i8 %v5_37aa4 to i32
  %v27_37aa4 = and i32 %v0_37aa4, -256
  %v28_37aa4 = or i32 %v25_37aa4, %v27_37aa4
  store i32 %v28_37aa4, i32* %eax.global-to-local, align 4
  %v1_37aa6 = add i32 %v0_37aa3, 2
  store i32 %v1_37aa6, i32* @ebp, align 4
  %v3_37aa7 = load i16, i16* bitcast (i32* @edi to i16*), align 4
  %v4_37aa7 = sitofp i16 %v3_37aa7 to x86_fp80
  %v5_37aa7 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_37aa7 = fmul x86_fp80 %v5_37aa7, %v4_37aa7
  store x86_fp80 %v6_37aa7, x86_fp80* @st0, align 4
  %v1_37aab = add i32 %v28_37aa4, -1587159739
  %v2_37aab = inttoptr i32 %v1_37aab to i8*
  %v3_37aab = load i8, i8* %v2_37aab, align 1
  %v4_37aab = load i32, i32* @ecx, align 4
  %v5_37aab = trunc i32 %v4_37aab to i8
  %v7_37aab = zext i1 %v24_37aa4 to i8
  %v8_37aab = sub i8 %v3_37aab, %v5_37aab
  %v9_37aab = add i8 %v8_37aab, %v7_37aab
  %v19_37aab = sub i8 %v8_37aab, %v7_37aab
  %v20_37aab = icmp ult i8 %v3_37aab, %v19_37aab
  %v21_37aab = icmp ne i8 %v5_37aab, -1
  %v22_37aab = or i1 %v21_37aab, %v20_37aab
  %v23_37aab = icmp ult i8 %v3_37aab, %v5_37aab
  %v24_37aab = select i1 %v24_37aa4, i1 %v22_37aab, i1 %v23_37aab
  store i1 %v24_37aab, i1* %cf.global-to-local, align 1
  store i8 %v9_37aab, i8* %v2_37aab, align 1
  %v0_37ab1 = load i32, i32* %eax.global-to-local, align 4
  %v1_37ab1 = trunc i32 %v0_37ab1 to i8
  %v2_37ab1 = load i1, i1* %cf.global-to-local, align 1
  %v3_37ab1 = zext i1 %v2_37ab1 to i8
  %v4_37ab1 = add i8 %v3_37ab1, %v1_37ab1
  %v19_37ab1 = icmp ule i8 %v4_37ab1, %v1_37ab1
  %v21_37ab1 = icmp eq i1 %v2_37ab1, %v19_37ab1
  store i1 %v21_37ab1, i1* %cf.global-to-local, align 1
  %v22_37ab1 = zext i8 %v4_37ab1 to i32
  %v24_37ab1 = and i32 %v0_37ab1, -256
  %v25_37ab1 = or i32 %v22_37ab1, %v24_37ab1
  store i32 %v25_37ab1, i32* %eax.global-to-local, align 4
  %v1_37ab3 = inttoptr i32 %v25_37ab1 to i8*
  %v2_37ab3 = load i8, i8* %v1_37ab3, align 1
  %v5_37ab3 = add i8 %v2_37ab3, %v4_37ab1
  store i8 %v5_37ab3, i8* %v1_37ab3, align 1
  %v0_37ab5 = load i32, i32* %eax.global-to-local, align 4
  %v1_37ab5 = load i32, i32* @ebp, align 4
  %v2_37ab5 = add i32 %v1_37ab5, -12
  %v3_37ab5 = inttoptr i32 %v2_37ab5 to i32*
  store i32 %v0_37ab5, i32* %v3_37ab5, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37aba = load i32, i32* @ebp, align 4
  %v1_37aba = add i32 %v0_37aba, -28
  %v2_37aba = inttoptr i32 %v1_37aba to i32*
  %v3_37aba = load i32, i32* %v2_37aba, align 4
  store i32 %v3_37aba, i32* %eax.global-to-local, align 4
  %v1_37abd = inttoptr i32 %v3_37aba to i32*
  %v2_37abd = load i32, i32* %v1_37abd, align 4
  store i32 %v2_37abd, i32* %eax.global-to-local, align 4
  %v1_37ac2 = call i32 @unknown_5739a(i32 %v2_37abd)
  store i32 %v1_37ac2, i32* %eax.global-to-local, align 4
  %v0_37ac7 = load i32, i32* @ebp, align 4
  %v1_37ac7 = add i32 %v0_37ac7, -28
  %v2_37ac7 = inttoptr i32 %v1_37ac7 to i32*
  %v3_37ac7 = load i32, i32* %v2_37ac7, align 4
  store i32 %v3_37ac7, i32* %eax.global-to-local, align 4
  %v1_37aca = inttoptr i32 %v3_37ac7 to i32*
  %v2_37aca = load i32, i32* %v1_37aca, align 4
  %v1_37acc = add i32 %v2_37aca, 4
  %v5_37acc = icmp ugt i32 %v2_37aca, -5
  store i1 %v5_37acc, i1* %cf.global-to-local, align 1
  store i32 %v1_37acc, i32* %eax.global-to-local, align 4
  %v1_37ad2 = call i32 @unknown_5740a(i32 %v1_37acc)
  store i32 %v1_37ad2, i32* %eax.global-to-local, align 4
  %v2_37ae2 = call i32 @unknown_40974(i32 1, i32 %v1_37ad2)
  store i32 %v2_37ae2, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_37ae9 = load i32, i32* @ebp, align 4
  %v1_37ae9 = add i32 %v0_37ae9, -28
  %v2_37ae9 = inttoptr i32 %v1_37ae9 to i32*
  %v3_37ae9 = load i32, i32* %v2_37ae9, align 4
  store i32 %v3_37ae9, i32* %eax.global-to-local, align 4
  %v1_37aec = add i32 %v3_37ae9, 4
  %v2_37aec = inttoptr i32 %v1_37aec to i32*
  %v3_37aec = load i32, i32* %v2_37aec, align 4
  %v3_37aef = load i32, i32* %v2_37ae9, align 4
  store i32 %v3_37aef, i32* %eax.global-to-local, align 4
  %v1_37af2 = inttoptr i32 %v3_37aef to i32*
  %v2_37af2 = load i32, i32* %v1_37af2, align 4
  store i32 %v2_37af2, i32* %eax.global-to-local, align 4
  %v2_37afb = call i32 @unknown_574ae(i32 %v2_37af2, i32 %v3_37aec)
  store i32 %v2_37afb, i32* %eax.global-to-local, align 4
  %v0_37b00 = load i32, i32* @ebp, align 4
  %v1_37b00 = add i32 %v0_37b00, -12
  %v2_37b00 = inttoptr i32 %v1_37b00 to i32*
  %v3_37b00 = load i32, i32* %v2_37b00, align 4
  store i32 %v3_37b00, i32* %eax.global-to-local, align 4
  %v1_37b03 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37b03 = xor i32 %v1_37b03, %v3_37b00
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37b03 = icmp eq i32 %v2_37b03, 0
  store i32 %v2_37b03, i32* @eax, align 4
  br i1 %v3_37b03, label %bb, label %dec_label_pc_37b0c

bb:                                               ; preds = %dec_label_pc_37a9c
  %v1_37b0a = call i32 @function_37b11()
  store i32 %v1_37b0a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37b0c

dec_label_pc_37b0c:                               ; preds = %bb, %dec_label_pc_37a9c
  %v3_37b0a = phi i32 [ %v1_37b0a, %bb ], [ %v2_37b03, %dec_label_pc_37a9c ]
  ret i32 %v3_37b0a

; uselistorder directives
  uselistorder i8 %v4_37ab1, { 0, 2, 1 }
  uselistorder i8 %v1_37ab1, { 1, 0 }
  uselistorder i8 %v8_37aab, { 1, 0 }
  uselistorder i8 %v7_37aab, { 1, 0 }
  uselistorder i8 %v5_37aab, { 1, 0, 2 }
  uselistorder i1 %v24_37aa4, { 1, 0, 2 }
  uselistorder i8 %v9_37a9d, { 1, 0 }
  uselistorder i8 %v3_37a9d, { 1, 2, 0 }
  uselistorder i32 2, { 62, 85, 86, 87, 63, 88, 64, 7, 89, 65, 66, 90, 8, 67, 68, 111, 9, 10, 11, 12, 69, 81, 105, 70, 13, 71, 14, 15, 91, 16, 72, 17, 106, 107, 108, 109, 110, 18, 19, 0, 92, 20, 21, 1, 22, 73, 2, 93, 3, 74, 75, 4, 94, 23, 24, 25, 26, 27, 76, 77, 28, 78, 61, 79, 29, 95, 80, 96, 117, 118, 57, 58, 59, 55, 60, 56, 30, 100, 101, 102, 31, 5, 97, 98, 32, 33, 84, 83, 112, 34, 35, 36, 37, 38, 39, 113, 40, 41, 82, 114, 115, 42, 116, 43, 44, 119, 99, 45, 46, 6, 103, 104, 47, 48, 49, 50, 51, 52, 53, 120, 54 }
  uselistorder i8 -120, { 5, 6, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_88.2212, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_88.2212 to i8), { 3, 0, 1, 2 }
}

define i32 @function_37b11() local_unnamed_addr {
dec_label_pc_37b11:
  %v0_37b12 = load i32, i32* @eax, align 4
  ret i32 %v0_37b12
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner11assign_implIS2_N4mpl_5bool_ILb1EEENS7_18has_fallback_type_EEEvRKT_SC_T0_T1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_37b14:
  %v2_37b49 = load i32, i32* %arg1, align 4
  %v1_37b4e = call i32 @unknown_57426(i32 %v2_37b49)
  %v2_37b56 = load i32, i32* %arg1, align 4
  %v1_37b58 = add i32 %v2_37b56, 4
  %v1_37b5e = call i32 @unknown_57496(i32 %v1_37b58)
  ret i32 %v1_37b5e
}

define i32 @function_37b68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37b68:
  %edx.global-to-local = alloca i32, align 4
  %v0_37b68 = load i32, i32* @eax, align 4
  %v1_37b68 = trunc i32 %v0_37b68 to i8
  %v2_37b68 = add i8 %v1_37b68, 36
  %v6_37b68 = icmp ugt i8 %v1_37b68, -37
  %v3_37b6a = zext i1 %v6_37b68 to i8
  %v4_37b6a = add i8 %v3_37b6a, %v2_37b68
  %v22_37b6a = zext i8 %v4_37b6a to i32
  %v24_37b6a = and i32 %v0_37b68, -256
  %v25_37b6a = or i32 %v22_37b6a, %v24_37b6a
  %v1_37b6c = inttoptr i32 %v25_37b6a to i8*
  %v2_37b6c = load i8, i8* %v1_37b6c, align 1
  %v5_37b6c = add i8 %v2_37b6c, %v4_37b6a
  store i8 %v5_37b6c, i8* %v1_37b6c, align 1
  %v0_37b6e = call i32 @unknown_40a00()
  %v1_37b73 = icmp eq i32 %v0_37b6e, 0
  br i1 %v1_37b73, label %dec_label_pc_37b96, label %dec_label_pc_37b77

dec_label_pc_37b77:                               ; preds = %dec_label_pc_37b68
  %v0_37b77 = load i32, i32* @ebp, align 4
  %v1_37b77 = add i32 %v0_37b77, -32
  %v2_37b77 = inttoptr i32 %v1_37b77 to i32*
  %v3_37b77 = load i32, i32* %v2_37b77, align 4
  store i32 %v3_37b77, i32* %edx.global-to-local, align 4
  %v1_37b7a = inttoptr i32 %v3_37b77 to i32*
  %v2_37b7a = load i32, i32* %v1_37b7a, align 4
  %v2_37b7c = inttoptr i32 %v0_37b6e to i32*
  store i32 %v2_37b7a, i32* %v2_37b7c, align 4
  %v0_37b7e = load i32, i32* %edx.global-to-local, align 4
  %v1_37b7e = add i32 %v0_37b7e, 4
  %v2_37b7e = inttoptr i32 %v1_37b7e to i32*
  %v3_37b7e = load i32, i32* %v2_37b7e, align 4
  %v2_37b81 = add i32 %v0_37b6e, 4
  %v3_37b81 = inttoptr i32 %v2_37b81 to i32*
  store i32 %v3_37b7e, i32* %v3_37b81, align 4
  %v0_37b84 = load i32, i32* %edx.global-to-local, align 4
  %v1_37b84 = add i32 %v0_37b84, 8
  %v2_37b84 = inttoptr i32 %v1_37b84 to i32*
  %v3_37b84 = load i32, i32* %v2_37b84, align 4
  %v2_37b87 = add i32 %v0_37b6e, 8
  %v3_37b87 = inttoptr i32 %v2_37b87 to i32*
  store i32 %v3_37b84, i32* %v3_37b87, align 4
  %v0_37b8a = load i32, i32* %edx.global-to-local, align 4
  %v1_37b8a = add i32 %v0_37b8a, 12
  %v2_37b8a = inttoptr i32 %v1_37b8a to i32*
  %v3_37b8a = load i32, i32* %v2_37b8a, align 4
  store i32 %v3_37b8a, i32* @ecx, align 4
  %v2_37b8d = add i32 %v0_37b6e, 12
  %v3_37b8d = inttoptr i32 %v2_37b8d to i32*
  store i32 %v3_37b8a, i32* %v3_37b8d, align 4
  %v0_37b90 = load i32, i32* %edx.global-to-local, align 4
  %v1_37b90 = add i32 %v0_37b90, 16
  %v2_37b90 = inttoptr i32 %v1_37b90 to i32*
  %v3_37b90 = load i32, i32* %v2_37b90, align 4
  store i32 %v3_37b90, i32* %edx.global-to-local, align 4
  %v2_37b93 = add i32 %v0_37b6e, 16
  %v3_37b93 = inttoptr i32 %v2_37b93 to i32*
  store i32 %v3_37b90, i32* %v3_37b93, align 4
  br label %dec_label_pc_37b96

dec_label_pc_37b96:                               ; preds = %dec_label_pc_37b77, %dec_label_pc_37b68
  %v0_37b96 = load i32, i32* @ebp, align 4
  %v1_37b96 = add i32 %v0_37b96, -28
  %v2_37b96 = inttoptr i32 %v1_37b96 to i32*
  %v3_37b96 = load i32, i32* %v2_37b96, align 4
  %v1_37b99 = add i32 %v3_37b96, 4
  %v2_37b99 = inttoptr i32 %v1_37b99 to i32*
  %v3_37b99 = load i32, i32* %v2_37b99, align 4
  store i32 %v3_37b99, i32* %edx.global-to-local, align 4
  %v3_37b9c = load i32, i32* %v2_37b96, align 4
  %v1_37b9f = inttoptr i32 %v3_37b9c to i32*
  %v2_37b9f = load i32, i32* %v1_37b9f, align 4
  %v2_37ba8 = call i32 @unknown_5753a(i32 %v2_37b9f, i32 %v3_37b99)
  %v0_37bad = load i32, i32* @ebp, align 4
  %v1_37bad = add i32 %v0_37bad, -12
  %v2_37bad = inttoptr i32 %v1_37bad to i32*
  %v3_37bad = load i32, i32* %v2_37bad, align 4
  %v1_37bb0 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37bb0 = xor i32 %v1_37bb0, %v3_37bad
  %v3_37bb0 = icmp eq i32 %v2_37bb0, 0
  store i32 %v2_37bb0, i32* @eax, align 4
  br i1 %v3_37bb0, label %bb, label %dec_label_pc_37bb9

bb:                                               ; preds = %dec_label_pc_37b96
  %v1_37bb7 = call i32 @function_37bbe()
  br label %dec_label_pc_37bb9

dec_label_pc_37bb9:                               ; preds = %bb, %dec_label_pc_37b96
  %v2_37bb7 = phi i32 [ %v1_37bb7, %bb ], [ %v2_37bb0, %dec_label_pc_37b96 ]
  ret i32 %v2_37bb7
}

define i32 @function_37bbe() local_unnamed_addr {
dec_label_pc_37bbe:
  %v0_37bbf = load i32, i32* @eax, align 4
  ret i32 %v0_37bbf
}

define i32 @_ZN5boost7variantI14CNoDestination6CKeyID9CScriptIDNS_6detail7variant5void_ES6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_S6_E8assigner11assign_implIS3_N4mpl_5bool_ILb1EEENS7_18has_fallback_type_EEEvRKT_SC_T0_T1_(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_37bc0:
  %v4_37be0 = urem i32 %arg5, 256
  ret i32 %v4_37be0
}

define i32 @function_37be6(i32 %arg1) local_unnamed_addr {
dec_label_pc_37be6:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_37be9 = load i32, i32* @eax, align 4
  %v1_37be9 = trunc i32 %v0_37be9 to i8
  %v2_37be9 = load i1, i1* @cf, align 1
  %v3_37be9 = zext i1 %v2_37be9 to i8
  %v4_37be9 = add i8 %v3_37be9, %v1_37be9
  %v22_37be9 = zext i8 %v4_37be9 to i32
  %v24_37be9 = and i32 %v0_37be9, -256
  %v25_37be9 = or i32 %v22_37be9, %v24_37be9
  store i32 %v25_37be9, i32* %eax.global-to-local, align 4
  %v1_37beb = inttoptr i32 %v25_37be9 to i8*
  %v2_37beb = load i8, i8* %v1_37beb, align 1
  %v5_37beb = add i8 %v2_37beb, %v4_37be9
  store i8 %v5_37beb, i8* %v1_37beb, align 1
  %v0_37bed = load i32, i32* %eax.global-to-local, align 4
  %v1_37bed = load i32, i32* @ebp, align 4
  %v2_37bed = add i32 %v1_37bed, -12
  %v3_37bed = inttoptr i32 %v2_37bed to i32*
  store i32 %v0_37bed, i32* %v3_37bed, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37bf2 = load i32, i32* @ebp, align 4
  %v1_37bf2 = add i32 %v0_37bf2, -28
  %v2_37bf2 = inttoptr i32 %v1_37bf2 to i32*
  %v3_37bf2 = load i32, i32* %v2_37bf2, align 4
  store i32 %v3_37bf2, i32* %eax.global-to-local, align 4
  %v1_37bf5 = inttoptr i32 %v3_37bf2 to i32*
  %v2_37bf5 = load i32, i32* %v1_37bf5, align 4
  store i32 %v2_37bf5, i32* %eax.global-to-local, align 4
  %v1_37bfa = call i32 @unknown_574d2(i32 %v2_37bf5)
  store i32 %v1_37bfa, i32* %eax.global-to-local, align 4
  %v0_37bff = load i32, i32* @ebp, align 4
  %v1_37bff = add i32 %v0_37bff, -28
  %v2_37bff = inttoptr i32 %v1_37bff to i32*
  %v3_37bff = load i32, i32* %v2_37bff, align 4
  store i32 %v3_37bff, i32* %eax.global-to-local, align 4
  %v1_37c02 = inttoptr i32 %v3_37bff to i32*
  %v2_37c02 = load i32, i32* %v1_37c02, align 4
  %v1_37c04 = add i32 %v2_37c02, 4
  store i32 %v1_37c04, i32* %eax.global-to-local, align 4
  %v1_37c0a = call i32 @unknown_57542(i32 %v1_37c04)
  store i32 %v1_37c0a, i32* %eax.global-to-local, align 4
  %v2_37c1a = call i32 @unknown_40aac(i32 20, i32 %v1_37c0a)
  store i32 %v2_37c1a, i32* %eax.global-to-local, align 4
  %v1_37c1f = icmp eq i32 %v2_37c1a, 0
  br i1 %v1_37c1f, label %dec_label_pc_37c42, label %dec_label_pc_37c23

dec_label_pc_37c23:                               ; preds = %dec_label_pc_37be6
  %v0_37c23 = load i32, i32* @ebp, align 4
  %v1_37c23 = add i32 %v0_37c23, -32
  %v2_37c23 = inttoptr i32 %v1_37c23 to i32*
  %v3_37c23 = load i32, i32* %v2_37c23, align 4
  store i32 %v3_37c23, i32* %edx.global-to-local, align 4
  %v1_37c26 = inttoptr i32 %v3_37c23 to i32*
  %v2_37c26 = load i32, i32* %v1_37c26, align 4
  %v2_37c28 = inttoptr i32 %v2_37c1a to i32*
  store i32 %v2_37c26, i32* %v2_37c28, align 4
  %v0_37c2a = load i32, i32* %edx.global-to-local, align 4
  %v1_37c2a = add i32 %v0_37c2a, 4
  %v2_37c2a = inttoptr i32 %v1_37c2a to i32*
  %v3_37c2a = load i32, i32* %v2_37c2a, align 4
  %v2_37c2d = add i32 %v2_37c1a, 4
  %v3_37c2d = inttoptr i32 %v2_37c2d to i32*
  store i32 %v3_37c2a, i32* %v3_37c2d, align 4
  %v0_37c30 = load i32, i32* %edx.global-to-local, align 4
  %v1_37c30 = add i32 %v0_37c30, 8
  %v2_37c30 = inttoptr i32 %v1_37c30 to i32*
  %v3_37c30 = load i32, i32* %v2_37c30, align 4
  %v2_37c33 = add i32 %v2_37c1a, 8
  %v3_37c33 = inttoptr i32 %v2_37c33 to i32*
  store i32 %v3_37c30, i32* %v3_37c33, align 4
  %v0_37c36 = load i32, i32* %edx.global-to-local, align 4
  %v1_37c36 = add i32 %v0_37c36, 12
  %v2_37c36 = inttoptr i32 %v1_37c36 to i32*
  %v3_37c36 = load i32, i32* %v2_37c36, align 4
  %v2_37c39 = add i32 %v2_37c1a, 12
  %v3_37c39 = inttoptr i32 %v2_37c39 to i32*
  store i32 %v3_37c36, i32* %v3_37c39, align 4
  %v0_37c3c = load i32, i32* %edx.global-to-local, align 4
  %v1_37c3c = add i32 %v0_37c3c, 16
  %v2_37c3c = inttoptr i32 %v1_37c3c to i32*
  %v3_37c3c = load i32, i32* %v2_37c3c, align 4
  store i32 %v3_37c3c, i32* %edx.global-to-local, align 4
  %v2_37c3f = add i32 %v2_37c1a, 16
  %v3_37c3f = inttoptr i32 %v2_37c3f to i32*
  store i32 %v3_37c3c, i32* %v3_37c3f, align 4
  br label %dec_label_pc_37c42

dec_label_pc_37c42:                               ; preds = %dec_label_pc_37c23, %dec_label_pc_37be6
  %v0_37c42 = load i32, i32* @ebp, align 4
  %v1_37c42 = add i32 %v0_37c42, -28
  %v2_37c42 = inttoptr i32 %v1_37c42 to i32*
  %v3_37c42 = load i32, i32* %v2_37c42, align 4
  store i32 %v3_37c42, i32* %eax.global-to-local, align 4
  %v1_37c45 = add i32 %v3_37c42, 4
  %v2_37c45 = inttoptr i32 %v1_37c45 to i32*
  %v3_37c45 = load i32, i32* %v2_37c45, align 4
  store i32 %v3_37c45, i32* %edx.global-to-local, align 4
  %v3_37c48 = load i32, i32* %v2_37c42, align 4
  store i32 %v3_37c48, i32* %eax.global-to-local, align 4
  %v1_37c4b = inttoptr i32 %v3_37c48 to i32*
  %v2_37c4b = load i32, i32* %v1_37c4b, align 4
  store i32 %v2_37c4b, i32* %eax.global-to-local, align 4
  %v2_37c54 = call i32 @unknown_575e6(i32 %v2_37c4b, i32 %v3_37c45)
  store i32 %v2_37c54, i32* %eax.global-to-local, align 4
  %v0_37c59 = load i32, i32* @ebp, align 4
  %v1_37c59 = add i32 %v0_37c59, -12
  %v2_37c59 = inttoptr i32 %v1_37c59 to i32*
  %v3_37c59 = load i32, i32* %v2_37c59, align 4
  store i32 %v3_37c59, i32* %eax.global-to-local, align 4
  ret i32 %v3_37c59
}

define i32 @function_37c52(i32 %arg1) local_unnamed_addr {
dec_label_pc_37c52:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37c58(i32 %arg1) local_unnamed_addr {
dec_label_pc_37c58:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37c62(i32 %arg1) local_unnamed_addr {
dec_label_pc_37c62:
  %v0_37c62 = load i32, i32* @ebp, align 4
  %v1_37c62 = load i32, i32* @eax, align 4
  %v3_37c62 = add i32 %v0_37c62, -24
  %v4_37c62 = add i32 %v3_37c62, %v1_37c62
  %v5_37c62 = inttoptr i32 %v4_37c62 to i8*
  %v6_37c62 = load i8, i8* %v5_37c62, align 1
  %v7_37c62 = load i32, i32* @edx, align 4
  %v8_37c62 = udiv i32 %v7_37c62, 256
  %v9_37c62 = trunc i32 %v8_37c62 to i8
  %v10_37c62 = add i8 %v9_37c62, %v6_37c62
  store i8 %v10_37c62, i8* %v5_37c62, align 1
  %v31_37c62 = load i32, i32* @eax, align 4
  ret i32 %v31_37c62
}

define i32 @function_37c69() local_unnamed_addr {
dec_label_pc_37c69:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_37c69 = load i32, i32* %ecx.global-to-local, align 4
  %v1_37c69 = add i32 %v0_37c69, -1
  store i32 %v1_37c69, i32* %ecx.global-to-local, align 4
  %v0_37c6b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_37c6b
}

define i32 @_ZN5boost6detail7variant15direct_assignerI9CScriptIDEclI14CNoDestinationEEbRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37c6c:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37c9a

bb:                                               ; preds = %dec_label_pc_37c6c
  %v3_37c98 = call i32 @function_37c9f(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_37c9a

dec_label_pc_37c9a:                               ; preds = %bb, %dec_label_pc_37c6c
  %v4_37c98 = phi i32 [ %v3_37c98, %bb ], [ 0, %dec_label_pc_37c6c ]
  ret i32 %v4_37c98
}

define i32 @function_37c9f(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37c9f:
  %v0_37ca0 = load i32, i32* @eax, align 4
  ret i32 %v0_37ca0
}

define i32 @_ZN5boost6detail7variant15direct_assignerI9CScriptIDEclI6CKeyIDEEbRT_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37ca2:
  %v0_37cb4 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  ret i32 %v0_37cb4
}

define i32 @function_37cbe(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37cbe:
  %v0_37cc7 = load i32, i32* @edx, align 4
  %v1_37cc7 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_37cc7 = icmp eq i32 %v1_37cc7, %v0_37cc7
  br i1 %v3_37cc7, label %bb, label %dec_label_pc_37cbe.dec_label_pc_37cd0_crit_edge

dec_label_pc_37cbe.dec_label_pc_37cd0_crit_edge:  ; preds = %dec_label_pc_37cbe
  %v2_37cce.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_37cd0

bb:                                               ; preds = %dec_label_pc_37cbe
  %v1_37cce = call i32 @function_37cd5()
  br label %dec_label_pc_37cd0

dec_label_pc_37cd0:                               ; preds = %dec_label_pc_37cbe.dec_label_pc_37cd0_crit_edge, %bb
  %v2_37cce = phi i32 [ %v2_37cce.pre, %dec_label_pc_37cbe.dec_label_pc_37cd0_crit_edge ], [ %v1_37cce, %bb ]
  ret i32 %v2_37cce

; uselistorder directives
  uselistorder label %dec_label_pc_37cd0, { 1, 0 }
}

define i32 @function_37cd5() local_unnamed_addr {
dec_label_pc_37cd5:
  %v0_37cd6 = load i32, i32* @eax, align 4
  ret i32 %v0_37cd6
}

define i32 @_ZN5boost6detail7variant15direct_assignerI9CScriptIDEclERS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37cd8:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* %eax.global-to-local, align 4
  %v2_37cf8 = load i32, i32* %arg1, align 4
  store i32 %v2_37cf8, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v1_37cfd = inttoptr i32 %v2_37cf8 to i32*
  %v2_37cfd = load i32, i32* %v1_37cfd, align 4
  %v2_37cff = inttoptr i32 %arg2 to i32*
  store i32 %v2_37cfd, i32* %v2_37cff, align 4
  %v0_37d01 = load i32, i32* %edx.global-to-local, align 4
  %v1_37d01 = add i32 %v0_37d01, 4
  %v2_37d01 = inttoptr i32 %v1_37d01 to i32*
  %v3_37d01 = load i32, i32* %v2_37d01, align 4
  %v1_37d04 = load i32, i32* %eax.global-to-local, align 4
  %v2_37d04 = add i32 %v1_37d04, 4
  %v3_37d04 = inttoptr i32 %v2_37d04 to i32*
  store i32 %v3_37d01, i32* %v3_37d04, align 4
  %v0_37d07 = load i32, i32* %edx.global-to-local, align 4
  %v1_37d07 = add i32 %v0_37d07, 8
  %v2_37d07 = inttoptr i32 %v1_37d07 to i32*
  %v3_37d07 = load i32, i32* %v2_37d07, align 4
  %v1_37d0a = load i32, i32* %eax.global-to-local, align 4
  %v2_37d0a = add i32 %v1_37d0a, 8
  %v3_37d0a = inttoptr i32 %v2_37d0a to i32*
  store i32 %v3_37d07, i32* %v3_37d0a, align 4
  %v0_37d0d = load i32, i32* %edx.global-to-local, align 4
  %v1_37d0d = add i32 %v0_37d0d, 12
  %v2_37d0d = inttoptr i32 %v1_37d0d to i32*
  %v3_37d0d = load i32, i32* %v2_37d0d, align 4
  %v1_37d10 = load i32, i32* %eax.global-to-local, align 4
  %v2_37d10 = add i32 %v1_37d10, 12
  %v3_37d10 = inttoptr i32 %v2_37d10 to i32*
  store i32 %v3_37d0d, i32* %v3_37d10, align 4
  %v0_37d13 = load i32, i32* %edx.global-to-local, align 4
  %v1_37d13 = add i32 %v0_37d13, 16
  %v2_37d13 = inttoptr i32 %v1_37d13 to i32*
  %v3_37d13 = load i32, i32* %v2_37d13, align 4
  store i32 %v3_37d13, i32* %edx.global-to-local, align 4
  %v4_37d13 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_37d13

; uselistorder directives
  uselistorder i32 4, { 81, 82, 216, 217, 218, 219, 540, 541, 542, 83, 543, 544, 220, 221, 84, 85, 86, 87, 48, 205, 206, 224, 225, 4, 5, 566, 6, 88, 89, 7, 8, 245, 9, 251, 255, 254, 257, 256, 91, 90, 376, 575, 573, 574, 10, 92, 93, 11, 94, 95, 12, 13, 14, 96, 97, 15, 98, 99, 100, 101, 102, 56, 103, 104, 16, 105, 106, 107, 108, 109, 17, 110, 111, 18, 112, 113, 432, 114, 115, 116, 273, 274, 275, 117, 118, 19, 20, 21, 22, 511, 119, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 120, 121, 465, 122, 123, 49, 23, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 270, 135, 136, 545, 552, 24, 553, 554, 546, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 25, 353, 277, 26, 278, 483, 484, 485, 486, 487, 488, 207, 208, 209, 210, 211, 212, 137, 138, 139, 27, 140, 141, 142, 302, 303, 304, 305, 306, 143, 144, 307, 308, 309, 310, 311, 145, 315, 284, 285, 316, 317, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 312, 313, 314, 318, 319, 320, 146, 321, 147, 148, 149, 322, 323, 324, 150, 151, 152, 338, 28, 153, 29, 44, 498, 30, 499, 500, 547, 548, 549, 501, 502, 503, 504, 505, 506, 154, 155, 156, 381, 382, 383, 377, 378, 379, 380, 384, 385, 386, 167, 168, 489, 490, 169, 57, 170, 171, 172, 173, 174, 363, 364, 58, 365, 366, 367, 175, 176, 177, 370, 371, 372, 178, 179, 180, 31, 181, 182, 32, 183, 184, 185, 33, 34, 186, 35, 187, 188, 189, 190, 191, 192, 193, 36, 37, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 418, 433, 434, 466, 467, 54, 38, 468, 213, 214, 472, 473, 63, 215, 474, 475, 512, 513, 514, 515, 550, 551, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 39, 516, 517, 237, 236, 238, 239, 240, 567, 571, 40, 555, 241, 242, 41, 556, 243, 244, 246, 247, 248, 249, 250, 430, 252, 253, 460, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 435, 436, 55, 437, 438, 568, 269, 572, 569, 271, 272, 276, 471, 518, 519, 279, 280, 557, 558, 559, 560, 561, 281, 282, 283, 429, 562, 470, 469, 296, 297, 59, 298, 299, 300, 301, 0, 461, 462, 491, 492, 64, 414, 415, 416, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 65, 339, 340, 341, 66, 67, 68, 493, 494, 495, 496, 354, 355, 563, 564, 356, 357, 358, 51, 50, 359, 360, 53, 52, 361, 362, 368, 369, 373, 374, 375, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 42, 404, 405, 45, 406, 407, 408, 409, 410, 411, 412, 413, 69, 1, 43, 2, 417, 419, 420, 422, 423, 424, 425, 426, 421, 428, 427, 431, 439, 440, 441, 442, 443, 444, 445, 449, 450, 447, 446, 448, 454, 455, 456, 457, 452, 451, 453, 458, 459, 463, 464, 476, 481, 479, 477, 478, 480, 482, 497, 507, 508, 509, 510, 539, 536, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 3, 532, 533, 534, 535, 537, 538, 60, 70, 61, 565, 71, 72, 73, 74, 75, 76, 78, 77, 79, 46, 80, 47, 62, 570 }
}

define i32 @function_37d18(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d18:
  %v0_37d18 = load i32, i32* @eax, align 4
  %v1_37d18 = add i32 %v0_37d18, 1
  %v2_37d18 = inttoptr i32 %v1_37d18 to i8*
  %v3_37d18 = load i8, i8* %v2_37d18, align 1
  %v4_37d18 = load i32, i32* @ebx, align 4
  %v5_37d18 = udiv i32 %v4_37d18, 256
  %v6_37d18 = trunc i32 %v5_37d18 to i8
  %v7_37d18 = load i1, i1* @cf, align 1
  %v8_37d18 = zext i1 %v7_37d18 to i8
  %v9_37d18 = add i8 %v6_37d18, %v3_37d18
  %v10_37d18 = add i8 %v9_37d18, %v8_37d18
  store i8 %v10_37d18, i8* %v2_37d18, align 1
  %v0_37d1e = load i32, i32* @ebp, align 4
  %v1_37d1e = add i32 %v0_37d1e, -12
  %v2_37d1e = inttoptr i32 %v1_37d1e to i32*
  %v3_37d1e = load i32, i32* %v2_37d1e, align 4
  %v1_37d21 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* @cf, align 1
  %v3_37d21 = icmp eq i32 %v1_37d21, %v3_37d1e
  br i1 %v3_37d21, label %bb, label %dec_label_pc_37d18.dec_label_pc_37d2a_crit_edge

dec_label_pc_37d18.dec_label_pc_37d2a_crit_edge:  ; preds = %dec_label_pc_37d18
  %v2_37d28.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_37d2a

bb:                                               ; preds = %dec_label_pc_37d18
  %v1_37d28 = call i32 @function_37d2f()
  br label %dec_label_pc_37d2a

dec_label_pc_37d2a:                               ; preds = %dec_label_pc_37d18.dec_label_pc_37d2a_crit_edge, %bb
  %v2_37d28 = phi i32 [ %v2_37d28.pre, %dec_label_pc_37d18.dec_label_pc_37d2a_crit_edge ], [ %v1_37d28, %bb ]
  ret i32 %v2_37d28

; uselistorder directives
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 57, 12, 13, 14, 58, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 60, 33, 34, 1, 35, 36, 37, 38, 39, 40, 59, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder label %dec_label_pc_37d2a, { 1, 0 }
}

define i32 @function_37d2f() local_unnamed_addr {
dec_label_pc_37d2f:
  %v0_37d30 = load i32, i32* @eax, align 4
  ret i32 %v0_37d30
}

define i32 @_ZNK9COutPoint9SerializeI11CHashWriterEEvRT_ii(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d32:
  ret i32 %arg1
}

define i32 @function_37d3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_37d3c:
  %v0_37d3c = load i32, i32* @eax, align 4
  %v1_37d3c = load i32, i32* @ebp, align 4
  %v2_37d3c = add i32 %v1_37d3c, -44
  %v3_37d3c = inttoptr i32 %v2_37d3c to i32*
  store i32 %v0_37d3c, i32* %v3_37d3c, align 4
  %v0_37d3f = load i32, i32* @ebp, align 4
  %v1_37d3f = add i32 %v0_37d3f, 12
  %v2_37d3f = inttoptr i32 %v1_37d3f to i32*
  %v3_37d3f = load i32, i32* %v2_37d3f, align 4
  %v2_37d42 = add i32 %v0_37d3f, -48
  %v3_37d42 = inttoptr i32 %v2_37d42 to i32*
  store i32 %v3_37d3f, i32* %v3_37d42, align 4
  %v0_37d45 = load i32, i32* @ebp, align 4
  %v1_37d45 = add i32 %v0_37d45, 16
  %v2_37d45 = inttoptr i32 %v1_37d45 to i32*
  %v3_37d45 = load i32, i32* %v2_37d45, align 4
  %v2_37d48 = add i32 %v0_37d45, -52
  %v3_37d48 = inttoptr i32 %v2_37d48 to i32*
  store i32 %v3_37d45, i32* %v3_37d48, align 4
  %v0_37d4b = load i32, i32* @ebp, align 4
  %v1_37d4b = add i32 %v0_37d4b, 20
  %v2_37d4b = inttoptr i32 %v1_37d4b to i32*
  %v3_37d4b = load i32, i32* %v2_37d4b, align 4
  %v2_37d4e = add i32 %v0_37d4b, -56
  %v3_37d4e = inttoptr i32 %v2_37d4e to i32*
  store i32 %v3_37d4b, i32* %v3_37d4e, align 4
  %v0_37d51 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37d57 = load i32, i32* @ebp, align 4
  %v2_37d57 = add i32 %v1_37d57, -12
  %v3_37d57 = inttoptr i32 %v2_37d57 to i32*
  store i32 %v0_37d51, i32* %v3_37d57, align 4
  %v0_37d5c = load i32, i32* @ebp, align 4
  %v1_37d5c = add i32 %v0_37d5c, -15
  %v2_37d5c = inttoptr i32 %v1_37d5c to i8*
  store i8 0, i8* %v2_37d5c, align 1
  %v0_37d60 = load i32, i32* @ebp, align 4
  %v1_37d60 = add i32 %v0_37d60, -14
  %v2_37d60 = inttoptr i32 %v1_37d60 to i8*
  store i8 1, i8* %v2_37d60, align 1
  %v0_37d64 = load i32, i32* @ebp, align 4
  %v1_37d64 = add i32 %v0_37d64, -13
  %v2_37d64 = inttoptr i32 %v1_37d64 to i8*
  store i8 0, i8* %v2_37d64, align 1
  %v0_37d68 = load i32, i32* @ebp, align 4
  %v1_37d68 = add i32 %v0_37d68, -20
  %v2_37d68 = inttoptr i32 %v1_37d68 to i32*
  store i32 0, i32* %v2_37d68, align 4
  %v0_37d6f = load i32, i32* @ebp, align 4
  %v1_37d6f = add i32 %v0_37d6f, -44
  %v2_37d6f = inttoptr i32 %v1_37d6f to i32*
  %v3_37d6f = load i32, i32* %v2_37d6f, align 4
  %v1_37d72 = add i32 %v3_37d6f, 36
  %v1_37d80 = add i32 %v0_37d6f, -28
  %v3_37d86 = call i32 @unknown_47552(i32 %v1_37d80, i32 %v3_37d6f, i32 %v1_37d72)
  %v0_37d8b = load i32, i32* @ebp, align 4
  %v1_37d8b = add i32 %v0_37d8b, -28
  %v1_37d91 = call i32 @unknown_4e287(i32 %v1_37d8b)
  %v0_37d96 = load i32, i32* @ebx, align 4
  %v0_37d9a = load i32, i32* @ebp, align 4
  %v1_37d9a = add i32 %v0_37d9a, -56
  %v2_37d9a = inttoptr i32 %v1_37d9a to i32*
  %v3_37d9a = load i32, i32* %v2_37d9a, align 4
  %v1_37da1 = add i32 %v0_37d9a, -52
  %v2_37da1 = inttoptr i32 %v1_37da1 to i32*
  %v3_37da1 = load i32, i32* %v2_37da1, align 4
  store i32 %v3_37da1, i32* @edx, align 4
  %v1_37dac = add i32 %v0_37d9a, -48
  %v2_37dac = inttoptr i32 %v1_37dac to i32*
  %v3_37dac = load i32, i32* %v2_37dac, align 4
  %sext = mul i32 %v0_37d96, 16777216
  %v5_37db2 = sdiv i32 %sext, 16777216
  %v6_37db2 = call i32 @unknown_6fb66(i32 %v3_37dac, i32 %v1_37d91, i32 %v3_37da1, i32 %v3_37d9a, i32 %v5_37db2)
  %v0_37db7 = load i32, i32* @ebp, align 4
  %v1_37db7 = add i32 %v0_37db7, -20
  %v2_37db7 = inttoptr i32 %v1_37db7 to i32*
  %v3_37db7 = load i32, i32* %v2_37db7, align 4
  %v5_37db7 = add i32 %v3_37db7, %v6_37db2
  store i32 %v5_37db7, i32* %v2_37db7, align 4
  %v0_37dba = load i32, i32* @ebp, align 4
  %v1_37dba = add i32 %v0_37dba, -12
  %v2_37dba = inttoptr i32 %v1_37dba to i32*
  %v3_37dba = load i32, i32* %v2_37dba, align 4
  %v1_37dbd = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37dbd = xor i32 %v1_37dbd, %v3_37dba
  %v3_37dbd = icmp eq i32 %v2_37dbd, 0
  store i32 %v2_37dbd, i32* @eax, align 4
  br i1 %v3_37dbd, label %bb, label %dec_label_pc_37dc6

bb:                                               ; preds = %dec_label_pc_37d3c
  %v1_37dc4 = call i32 @function_37dcb()
  br label %dec_label_pc_37dc6

dec_label_pc_37dc6:                               ; preds = %bb, %dec_label_pc_37d3c
  %v3_37dc4 = phi i32 [ %v1_37dc4, %bb ], [ %v2_37dbd, %dec_label_pc_37d3c ]
  ret i32 %v3_37dc4

; uselistorder directives
  uselistorder i32 16777216, { 1, 0, 5, 2, 6, 3, 7, 4, 11, 8, 12, 9, 13, 10, 17, 14, 18, 15, 19, 16, 22, 20, 23, 21, 27, 24, 28, 25, 29, 26, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50, 53, 52, 55, 54, 57, 56, 60, 58, 61, 59, 63, 62, 65, 64, 67, 66, 69, 68, 71, 70, 74, 72, 75, 73, 78, 76, 79, 77, 81, 80, 83, 82, 85, 84, 87, 86, 89, 88, 91, 90, 93, 92, 96, 94, 97, 95, 100, 98, 101, 99, 104, 102, 105, 103, 108, 106, 109, 107, 112, 110, 113, 111, 116, 114, 117, 115, 120, 118, 121, 119, 122, 124, 123, 129, 125, 130, 126, 131, 127, 132, 128, 135, 133, 136, 134, 139, 137, 140, 138, 142, 141, 144, 143, 146, 145, 148, 147, 150, 149, 152, 151, 154, 153, 156, 155, 158, 157, 160, 159, 162, 161, 164, 163, 166, 165, 168, 167, 170, 169, 171, 172, 173, 176, 174, 177, 175, 179, 178 }
  uselistorder i32* @edx, { 21, 22, 89, 82, 83, 84, 94, 95, 118, 25, 98, 99, 96, 119, 120, 27, 32, 10, 34, 38, 90, 41, 16, 42, 76, 61, 44, 46, 85, 131, 1, 73, 39, 35, 11, 121, 122, 53, 54, 111, 100, 123, 124, 125, 65, 66, 112, 67, 13, 48, 14, 101, 102, 19, 126, 17, 113, 63, 114, 59, 52, 91, 92, 50, 55, 56, 20, 0, 93, 12, 58, 45, 47, 29, 15, 18, 74, 103, 78, 79, 86, 87, 97, 104, 115, 23, 24, 127, 26, 132, 28, 105, 30, 134, 31, 33, 36, 37, 106, 88, 40, 43, 62, 49, 135, 133, 51, 128, 129, 130, 107, 64, 68, 69, 70, 71, 72, 57, 116, 117, 60, 75, 77, 80, 81, 108, 109, 110, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 36, { 8, 19, 26, 9, 27, 10, 11, 12, 5, 0, 6, 1, 2, 7, 3, 4, 16, 13, 14, 15, 20, 21, 22, 23, 17, 18, 25, 24 }
  uselistorder i32 -20, { 33, 34, 79, 80, 81, 93, 94, 95, 88, 1, 2, 7, 3, 4, 38, 36, 37, 39, 42, 40, 41, 43, 8, 9, 63, 64, 96, 97, 65, 98, 11, 10, 12, 27, 28, 29, 30, 31, 32, 90, 16, 17, 99, 84, 85, 86, 87, 0, 21, 22, 23, 24, 48, 49, 50, 25, 26, 52, 44, 45, 51, 75, 76, 53, 54, 55, 56, 35, 91, 92, 82, 83, 14, 13, 5, 6, 46, 47, 77, 78, 89, 15, 57, 58, 59, 60, 61, 62, 18, 19, 20, 66, 67, 68, 69, 70, 71, 72, 73, 74, 100, 101, 102, 103 }
  uselistorder i8 1, { 46, 62, 44, 47, 60, 61, 24, 57, 40, 25, 0, 52, 53, 26, 27, 1, 54, 55, 43, 45, 48, 3, 2, 28, 4, 29, 23, 50, 5, 49, 51, 6, 56, 19, 15, 30, 31, 7, 58, 59, 20, 16, 32, 33, 21, 17, 34, 35, 9, 8, 36, 10, 37, 22, 18, 38, 39, 63, 64, 41, 12, 13, 11, 14, 42 }
  uselistorder i32 -14, { 6, 14, 19, 12, 13, 5, 18, 0, 1, 7, 8, 9, 10, 2, 3, 4, 11, 15, 16, 17 }
  uselistorder i32 -15, { 3, 10, 8, 9, 13, 0, 1, 2, 4, 5, 6, 7, 11, 12 }
  uselistorder i32 -56, { 31, 32, 28, 33, 34, 0, 1, 55, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 86, 56, 2, 3, 58, 85, 83, 84, 4, 5, 80, 6, 81, 7, 8, 82, 9, 10, 11, 12, 13, 14, 60, 15, 16, 75, 76, 77, 78, 17, 18, 19, 20, 21, 24, 79, 97, 87, 22, 23, 59, 61, 98, 66, 92, 93, 94, 95, 96, 29, 30, 64, 65, 63, 62, 25, 67, 68, 69, 70, 71, 72, 73, 74, 26, 27, 88, 89, 90, 91 }
  uselistorder i32 -52, { 73, 74, 77, 162, 76, 3, 4, 165, 163, 164, 166, 78, 79, 65, 80, 82, 5, 6, 103, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 106, 7, 8, 9, 148, 149, 10, 11, 12, 81, 13, 14, 15, 16, 104, 105, 17, 139, 18, 107, 145, 141, 142, 143, 144, 19, 118, 119, 20, 137, 21, 138, 22, 23, 140, 24, 25, 26, 27, 28, 29, 109, 30, 31, 128, 32, 129, 130, 108, 131, 33, 34, 35, 132, 133, 36, 37, 38, 39, 150, 40, 41, 134, 66, 42, 43, 44, 55, 67, 45, 135, 136, 72, 159, 46, 160, 47, 48, 49, 50, 51, 151, 152, 52, 53, 54, 75, 110, 111, 112, 161, 0, 127, 155, 156, 157, 158, 1, 56, 113, 114, 68, 69, 70, 71, 115, 116, 2, 146, 147, 57, 120, 121, 122, 123, 124, 125, 126, 117, 58, 59, 60, 153, 154, 61, 62, 63, 64 }
  uselistorder i32 -48, { 12, 13, 16, 17, 69, 71, 18, 19, 20, 8, 21, 22, 23, 24, 25, 48, 33, 34, 9, 26, 41, 42, 43, 0, 1, 2, 14, 15, 3, 4, 27, 70, 40, 39, 65, 66, 67, 68, 49, 50, 51, 10, 11, 28, 5, 55, 56, 57, 58, 59, 60, 61, 31, 36, 37, 38, 35, 32, 29, 30, 52, 53, 54, 62, 6, 7, 44, 45, 46, 47, 63, 64 }
  uselistorder i32 -44, { 109, 110, 257, 98, 112, 1, 2, 3, 4, 5, 113, 6, 7, 8, 116, 9, 103, 10, 118, 11, 12, 139, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 13, 14, 15, 224, 225, 16, 17, 18, 117, 19, 20, 21, 22, 140, 141, 23, 196, 24, 143, 211, 203, 25, 204, 205, 206, 26, 27, 207, 28, 29, 208, 209, 210, 30, 173, 174, 270, 271, 31, 194, 32, 195, 33, 34, 197, 35, 36, 37, 38, 39, 40, 149, 41, 42, 152, 182, 43, 183, 184, 148, 185, 44, 45, 46, 186, 187, 47, 48, 49, 50, 226, 51, 52, 104, 53, 54, 55, 56, 57, 58, 59, 60, 237, 61, 258, 62, 63, 64, 65, 66, 67, 68, 69, 80, 99, 70, 188, 189, 108, 252, 71, 253, 72, 73, 74, 75, 76, 227, 228, 77, 78, 79, 111, 198, 199, 200, 201, 202, 144, 88, 238, 81, 82, 83, 239, 114, 84, 146, 115, 272, 147, 85, 240, 86, 87, 241, 150, 100, 145, 254, 255, 242, 101, 102, 178, 179, 243, 244, 222, 223, 177, 245, 246, 247, 248, 249, 212, 213, 105, 106, 107, 158, 159, 153, 154, 155, 160, 89, 90, 162, 163, 164, 165, 166, 91, 219, 220, 221, 161, 175, 176, 167, 168, 169, 170, 171, 172, 93, 92, 94, 151, 95, 96, 256, 156, 157, 214, 215, 216, 217, 218, 229, 230, 231, 180, 181, 0, 190, 191, 192, 193, 232, 233, 234, 235, 236, 97, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269 }
}

define i32 @function_37dcb() local_unnamed_addr {
dec_label_pc_37dcb:
  %v0_37dd0 = load i32, i32* @eax, align 4
  ret i32 %v0_37dd0
}

define i32 @_Z9SerializeI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_Eii() local_unnamed_addr {
dec_label_pc_37dd1:
  %eax.global-to-local = alloca i32, align 4
  %v5_37dd1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v5_37dd1
}

define i32 @function_37dda(i32 %arg1) local_unnamed_addr {
dec_label_pc_37dda:
  %v0_37dda = load i32, i32* @eax, align 4
  %v1_37dda = load i32, i32* @ebp, align 4
  %v2_37dda = add i32 %v1_37dda, -28
  %v3_37dda = inttoptr i32 %v2_37dda to i32*
  store i32 %v0_37dda, i32* %v3_37dda, align 4
  %v0_37ddd = load i32, i32* @ebp, align 4
  %v1_37ddd = add i32 %v0_37ddd, 12
  %v2_37ddd = inttoptr i32 %v1_37ddd to i32*
  %v3_37ddd = load i32, i32* %v2_37ddd, align 4
  %v2_37de0 = add i32 %v0_37ddd, -32
  %v3_37de0 = inttoptr i32 %v2_37de0 to i32*
  store i32 %v3_37ddd, i32* %v3_37de0, align 4
  %v0_37de3 = load i32, i32* @ebp, align 4
  %v1_37de3 = add i32 %v0_37de3, 16
  %v2_37de3 = inttoptr i32 %v1_37de3 to i32*
  %v3_37de3 = load i32, i32* %v2_37de3, align 4
  %v2_37de6 = add i32 %v0_37de3, -36
  %v3_37de6 = inttoptr i32 %v2_37de6 to i32*
  store i32 %v3_37de3, i32* %v3_37de6, align 4
  %v0_37de9 = load i32, i32* @ebp, align 4
  %v1_37de9 = add i32 %v0_37de9, 20
  %v2_37de9 = inttoptr i32 %v1_37de9 to i32*
  %v3_37de9 = load i32, i32* %v2_37de9, align 4
  %v2_37dec = add i32 %v0_37de9, -40
  %v3_37dec = inttoptr i32 %v2_37dec to i32*
  store i32 %v3_37de9, i32* %v3_37dec, align 4
  %v0_37def = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_37df5 = load i32, i32* @ebp, align 4
  %v2_37df5 = add i32 %v1_37df5, -12
  %v3_37df5 = inttoptr i32 %v2_37df5 to i32*
  store i32 %v0_37def, i32* %v3_37df5, align 4
  %v0_37dfa = load i32, i32* @ebp, align 4
  %v1_37dfa = add i32 %v0_37dfa, -13
  %v1_37e01 = add i32 %v0_37dfa, -40
  %v2_37e01 = inttoptr i32 %v1_37e01 to i32*
  %v3_37e01 = load i32, i32* %v2_37e01, align 4
  %v1_37e08 = add i32 %v0_37dfa, -36
  %v2_37e08 = inttoptr i32 %v1_37e08 to i32*
  %v3_37e08 = load i32, i32* %v2_37e08, align 4
  %v1_37e0f = add i32 %v0_37dfa, -32
  %v2_37e0f = inttoptr i32 %v1_37e0f to i32*
  %v3_37e0f = load i32, i32* %v2_37e0f, align 4
  %v1_37e16 = add i32 %v0_37dfa, -28
  %v2_37e16 = inttoptr i32 %v1_37e16 to i32*
  %v3_37e16 = load i32, i32* %v2_37e16, align 4
  %v5_37e1c = call i32 @unknown_6fc6d(i32 %v3_37e16, i32 %v3_37e0f, i32 %v3_37e08, i32 %v3_37e01, i32 %v1_37dfa)
  %v0_37e21 = load i32, i32* @ebp, align 4
  %v1_37e21 = add i32 %v0_37e21, -12
  %v2_37e21 = inttoptr i32 %v1_37e21 to i32*
  %v3_37e21 = load i32, i32* %v2_37e21, align 4
  %v1_37e24 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_37e24 = xor i32 %v1_37e24, %v3_37e21
  %v3_37e24 = icmp eq i32 %v2_37e24, 0
  store i32 %v2_37e24, i32* @eax, align 4
  br i1 %v3_37e24, label %bb, label %dec_label_pc_37e2d

bb:                                               ; preds = %dec_label_pc_37dda
  %v1_37e2b = call i32 @function_37e32()
  br label %dec_label_pc_37e2d

dec_label_pc_37e2d:                               ; preds = %bb, %dec_label_pc_37dda
  %v2_37e2b = phi i32 [ %v1_37e2b, %bb ], [ %v2_37e24, %dec_label_pc_37dda ]
  ret i32 %v2_37e2b

; uselistorder directives
  uselistorder i32 %v0_37dfa, { 0, 2, 1, 3, 4 }
  uselistorder i32 -13, { 50, 18, 49, 64, 52, 54, 53, 51, 55, 56, 57, 0, 29, 19, 43, 44, 45, 1, 42, 41, 46, 16, 17, 20, 15, 62, 63, 65, 32, 33, 21, 22, 23, 24, 30, 31, 25, 26, 27, 28, 47, 48, 58, 59, 2, 3, 4, 5, 6, 34, 7, 8, 9, 10, 11, 12, 39, 36, 37, 35, 38, 40, 60, 61, 66, 67, 13, 14 }
  uselistorder i32 16, { 107, 60, 10, 61, 62, 109, 110, 63, 64, 65, 11, 12, 47, 114, 49, 58, 59, 68, 69, 70, 71, 115, 13, 14, 73, 74, 75, 15, 90, 16, 17, 18, 19, 3, 67, 20, 21, 1, 89, 22, 23, 24, 25, 26, 27, 28, 29, 30, 79, 31, 32, 33, 78, 34, 108, 76, 116, 117, 118, 35, 36, 99, 37, 38, 39, 40, 41, 42, 43, 77, 111, 44, 45, 46, 48, 50, 51, 112, 113, 105, 52, 53, 54, 55, 86, 87, 88, 56, 57, 66, 72, 91, 80, 81, 119, 120, 121, 122, 123, 82, 4, 96, 2, 0, 83, 84, 85, 101, 102, 103, 104, 92, 93, 94, 95, 97, 98, 100, 106, 5, 6, 7, 8, 9 }
}

define i32 @function_37e32() local_unnamed_addr {
dec_label_pc_37e32:
  %v0_37e33 = load i32, i32* @eax, align 4
  ret i32 %v0_37e33
}

define i32 @_Z12SerReadWriteI11CHashWriter9CFlatDataEjRT_RKT0_ii19CSerActionSerialize(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_37e34:
  ret i32 %arg2
}

define i32 @function_37e45(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37e45:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_37e45 = load i32, i32* @ecx, align 4
  %v1_37e45 = add i32 %v0_37e45, -1
  store i32 %v1_37e45, i32* @ecx, align 4
  %v0_37e47 = load i32, i32* @ebp, align 4
  %v1_37e47 = add i32 %v0_37e47, 1
  store i32 %v1_37e47, i32* %ebp.global-to-local, align 4
  %v1_37e48 = add i32 %v0_37e45, 1166793796
  %v2_37e48 = inttoptr i32 %v1_37e48 to i8*
  %v3_37e48 = load i8, i8* %v2_37e48, align 1
  %v5_37e48 = trunc i32 %v1_37e45 to i8
  %v6_37e48 = load i1, i1* @cf, align 1
  %v7_37e48 = zext i1 %v6_37e48 to i8
  %v8_37e48 = add i8 %v3_37e48, %v5_37e48
  %v9_37e48 = add i8 %v7_37e48, %v8_37e48
  %v27_37e48 = icmp ule i8 %v9_37e48, %v3_37e48
  %v28_37e48 = icmp ult i8 %v8_37e48, %v3_37e48
  %v29_37e48 = select i1 %v6_37e48, i1 %v27_37e48, i1 %v28_37e48
  store i1 %v29_37e48, i1* %cf.global-to-local, align 1
  store i8 %v9_37e48, i8* %v2_37e48, align 1
  %v0_37e4e = load i32, i32* @eax, align 4
  %v1_37e4e = trunc i32 %v0_37e4e to i8
  %v2_37e4e = load i1, i1* %cf.global-to-local, align 1
  %v3_37e4e = zext i1 %v2_37e4e to i8
  %v4_37e4e = add i8 %v1_37e4e, ptrtoint (i8* @global_var_89.2254 to i8)
  %v5_37e4e = add i8 %v4_37e4e, %v3_37e4e
  %v20_37e4e = add i8 %v1_37e4e, -119
  %v21_37e4e = add i8 %v20_37e4e, %v3_37e4e
  %v22_37e4e = icmp ule i8 %v21_37e4e, %v1_37e4e
  %v23_37e4e = icmp ugt i8 %v1_37e4e, 118
  %v24_37e4e = select i1 %v2_37e4e, i1 %v22_37e4e, i1 %v23_37e4e
  store i1 %v24_37e4e, i1* %cf.global-to-local, align 1
  %v25_37e4e = zext i8 %v5_37e4e to i32
  %v27_37e4e = and i32 %v0_37e4e, -256
  %v28_37e4e = or i32 %v25_37e4e, %v27_37e4e
  store i32 %v28_37e4e, i32* %eax.global-to-local, align 4
  %v0_37e50 = load i32, i32* %ebp.global-to-local, align 4
  %v1_37e50 = add i32 %v0_37e50, 1
  store i32 %v1_37e50, i32* @ebp, align 4
  %v3_37e51 = load float, float* bitcast (i32* @edi to float*), align 4
  %v4_37e51 = fpext float %v3_37e51 to x86_fp80
  %v5_37e51 = load x86_fp80, x86_fp80* @st0, align 4
  %v6_37e51 = fmul x86_fp80 %v4_37e51, %v5_37e51
  store x86_fp80 %v6_37e51, x86_fp80* @st0, align 4
  %v1_37e55 = add i32 %v28_37e4e, -1587161275
  %v2_37e55 = inttoptr i32 %v1_37e55 to i8*
  %v3_37e55 = load i8, i8* %v2_37e55, align 1
  %v4_37e55 = load i32, i32* @ecx, align 4
  %v5_37e55 = trunc i32 %v4_37e55 to i8
  %v7_37e55 = zext i1 %v24_37e4e to i8
  %v8_37e55 = sub i8 %v3_37e55, %v5_37e55
  %v9_37e55 = add i8 %v8_37e55, %v7_37e55
  %v19_37e55 = sub i8 %v8_37e55, %v7_37e55
  %v20_37e55 = icmp ult i8 %v3_37e55, %v19_37e55
  %v21_37e55 = icmp ne i8 %v5_37e55, -1
  %v22_37e55 = or i1 %v21_37e55, %v20_37e55
  %v23_37e55 = icmp ult i8 %v3_37e55, %v5_37e55
  %v24_37e55 = select i1 %v24_37e4e, i1 %v22_37e55, i1 %v23_37e55
  store i1 %v24_37e55, i1* %cf.global-to-local, align 1
  store i8 %v9_37e55, i8* %v2_37e55, align 1
  %v0_37e5b = load i32, i32* %eax.global-to-local, align 4
  %v1_37e5b = trunc i32 %v0_37e5b to i8
  %v2_37e5b = load i1, i1* %cf.global-to-local, align 1
  %v3_37e5b = zext i1 %v2_37e5b to i8
  %v4_37e5b = add i8 %v3_37e5b, %v1_37e5b
  %v19_37e5b = icmp ule i8 %v4_37e5b, %v1_37e5b
  %v21_37e5b = icmp eq i1 %v2_37e5b, %v19_37e5b
  store i1 %v21_37e5b, i1* %cf.global-to-local, align 1
  %v22_37e5b = zext i8 %v4_37e5b to i32
  %v24_37e5b = and i32 %v0_37e5b, -256
  %v25_37e5b = or i32 %v22_37e5b, %v24_37e5b
  store i32 %v25_37e5b, i32* %eax.global-to-local, align 4
  %v1_37e5d = inttoptr i32 %v25_37e5b to i8*
  %v2_37e5d = load i8, i8* %v1_37e5d, align 1
  %v5_37e5d = add i8 %v2_37e5d, %v4_37e5b
  store i8 %v5_37e5d, i8* %v1_37e5d, align 1
  %v0_37e5f = load i32, i32* %eax.global-to-local, align 4
  %v1_37e5f = load i32, i32* @ebp, align 4
  %v2_37e5f = add i32 %v1_37e5f, -12
  %v3_37e5f = inttoptr i32 %v2_37e5f to i32*
  store i32 %v0_37e5f, i32* %v3_37e5f, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_37e64 = load i32, i32* @ebp, align 4
  %v1_37e64 = add i32 %v0_37e64, -40
  %v2_37e64 = inttoptr i32 %v1_37e64 to i32*
  %v3_37e64 = load i32, i32* %v2_37e64, align 4
  store i32 %v3_37e64, i32* %eax.global-to-local, align 4
  %v1_37e6b = add i32 %v0_37e64, -36
  %v2_37e6b = inttoptr i32 %v1_37e6b to i32*
  %v3_37e6b = load i32, i32* %v2_37e6b, align 4
  store i32 %v3_37e6b, i32* %eax.global-to-local, align 4
  %v1_37e72 = add i32 %v0_37e64, -32
  %v2_37e72 = inttoptr i32 %v1_37e72 to i32*
  %v3_37e72 = load i32, i32* %v2_37e72, align 4
  store i32 %v3_37e72, i32* %eax.global-to-local, align 4
  %v1_37e79 = add i32 %v0_37e64, -28
  %v2_37e79 = inttoptr i32 %v1_37e79 to i32*
  %v3_37e79 = load i32, i32* %v2_37e79, align 4
  store i32 %v3_37e79, i32* %eax.global-to-local, align 4
  %v4_37e7f = call i32 @unknown_6fd7f(i32 %v3_37e79, i32 %v3_37e72, i32 %v3_37e6b, i32 %v3_37e64)
  store i32 0, i32* @eax, align 4
  %v0_37e89 = load i32, i32* @ebp, align 4
  %v1_37e89 = add i32 %v0_37e89, -12
  %v2_37e89 = inttoptr i32 %v1_37e89 to i32*
  %v3_37e89 = load i32, i32* %v2_37e89, align 4
  %v1_37e8c = load i32, i32* inttoptr (i32 20 to i32*), align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v3_37e8c = icmp eq i32 %v1_37e8c, %v3_37e89
  br i1 %v3_37e8c, label %bb, label %dec_label_pc_37e95

bb:                                               ; preds = %dec_label_pc_37e45
  %v1_37e93 = call i32 @function_37e9a()
  store i32 %v1_37e93, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_37e95

dec_label_pc_37e95:                               ; preds = %bb, %dec_label_pc_37e45
  %v3_37e93 = phi i32 [ %v1_37e93, %bb ], [ 0, %dec_label_pc_37e45 ]
  ret i32 %v3_37e93

; uselistorder directives
  uselistorder i32 %v0_37e64, { 1, 0, 2, 3 }
  uselistorder i8 %v4_37e5b, { 0, 2, 1 }
  uselistorder i8 %v1_37e5b, { 1, 0 }
  uselistorder i8 %v8_37e55, { 1, 0 }
  uselistorder i8 %v7_37e55, { 1, 0 }
  uselistorder i8 %v5_37e55, { 1, 0, 2 }
  uselistorder i1 %v24_37e4e, { 1, 0, 2 }
  uselistorder i8 %v9_37e48, { 1, 0 }
  uselistorder i8 %v8_37e48, { 1, 0 }
  uselistorder i8 %v3_37e48, { 1, 2, 0 }
  uselistorder i32 -36, { 144, 145, 146, 34, 35, 18, 36, 37, 28, 171, 133, 134, 172, 173, 174, 38, 20, 29, 42, 44, 45, 147, 46, 32, 135, 175, 176, 24, 177, 148, 149, 150, 151, 41, 39, 40, 183, 184, 10, 185, 186, 49, 26, 52, 50, 51, 53, 54, 55, 33, 25, 61, 62, 107, 108, 109, 63, 11, 43, 70, 71, 72, 12, 130, 131, 60, 56, 58, 59, 57, 74, 75, 19, 68, 64, 66, 67, 65, 178, 179, 124, 180, 181, 182, 159, 152, 164, 160, 162, 163, 161, 21, 22, 23, 125, 126, 165, 105, 73, 27, 153, 98, 142, 143, 114, 166, 167, 168, 169, 170, 0, 30, 31, 115, 84, 85, 86, 13, 14, 15, 16, 17, 94, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 95, 132, 96, 97, 99, 48, 47, 100, 101, 102, 2, 1, 3, 136, 137, 138, 139, 140, 141, 110, 111, 4, 5, 103, 104, 106, 6, 112, 113, 69, 82, 83, 7, 116, 117, 8, 118, 119, 120, 121, 122, 123, 9, 127, 128, 129, 156, 154, 155, 157, 158 }
  uselistorder i32 -40, { 78, 79, 80, 23, 24, 10, 11, 71, 72, 99, 100, 101, 12, 26, 81, 27, 73, 102, 103, 104, 82, 83, 84, 85, 86, 87, 108, 28, 29, 30, 33, 34, 52, 53, 25, 69, 70, 32, 31, 36, 35, 92, 93, 95, 94, 41, 0, 13, 14, 15, 16, 17, 18, 19, 105, 106, 96, 97, 37, 20, 76, 77, 61, 1, 38, 21, 22, 42, 43, 44, 47, 48, 74, 75, 98, 45, 2, 46, 54, 55, 56, 57, 58, 59, 3, 4, 49, 50, 51, 60, 5, 6, 107, 39, 40, 7, 8, 62, 63, 9, 64, 65, 66, 67, 68, 88, 89, 90, 91 }
  uselistorder i32 -1587161275, { 4, 3, 1, 2, 0 }
  uselistorder i32* @edi, { 0, 1, 26, 27, 5, 6, 23, 18, 9, 10, 24, 2, 11, 12, 3, 7, 25, 19, 20, 21, 22, 15, 16, 17, 8, 13, 14, 4, 28 }
  uselistorder i32 -256, { 172, 173, 73, 6, 182, 183, 74, 75, 76, 158, 77, 159, 174, 80, 81, 82, 69, 70, 84, 85, 71, 72, 89, 90, 7, 8, 193, 169, 56, 57, 186, 175, 194, 195, 86, 87, 11, 30, 31, 32, 0, 94, 95, 61, 96, 59, 176, 164, 165, 166, 60, 101, 102, 103, 104, 206, 207, 33, 110, 111, 152, 153, 177, 154, 178, 112, 88, 44, 162, 163, 99, 100, 45, 34, 66, 35, 108, 12, 155, 105, 106, 13, 208, 114, 151, 36, 37, 160, 187, 38, 115, 116, 117, 118, 39, 119, 167, 156, 40, 184, 41, 14, 188, 157, 52, 189, 138, 113, 19, 53, 54, 107, 149, 65, 150, 55, 179, 42, 190, 171, 43, 144, 122, 123, 124, 120, 168, 161, 126, 128, 46, 83, 47, 48, 131, 196, 91, 92, 130, 132, 129, 140, 191, 49, 1, 50, 136, 137, 139, 142, 143, 51, 58, 15, 62, 63, 64, 67, 68, 180, 78, 79, 93, 197, 97, 98, 141, 9, 109, 16, 17, 145, 121, 18, 125, 10, 127, 185, 192, 2, 133, 3, 134, 4, 135, 5, 20, 21, 146, 147, 148, 22, 170, 181, 23, 24, 25, 26, 27, 28, 29, 198, 199, 200, 201, 202, 203, 204, 205 }
  uselistorder i8 118, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i8 -119, { 13, 4, 5, 6, 2, 3, 7, 15, 0, 14, 16, 8, 9, 10, 12, 11, 1 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 18, 0, 16, 17 }
  uselistorder i8 ptrtoint (i8* @global_var_89.2254 to i8), { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i1 false, { 586, 587, 375, 623, 624, 625, 391, 392, 393, 394, 395, 119, 396, 563, 564, 565, 397, 566, 588, 589, 400, 401, 385, 386, 135, 387, 388, 389, 407, 408, 652, 653, 364, 633, 634, 635, 120, 636, 118, 590, 591, 307, 136, 308, 121, 309, 137, 310, 45, 46, 47, 403, 138, 404, 122, 654, 139, 655, 123, 656, 311, 140, 141, 312, 313, 142, 314, 48, 49, 50, 315, 143, 316, 134, 51, 52, 53, 54, 411, 372, 124, 373, 374, 412, 413, 144, 414, 125, 366, 367, 368, 369, 370, 425, 562, 427, 429, 317, 145, 318, 55, 56, 57, 319, 146, 320, 126, 676, 677, 147, 678, 127, 321, 128, 438, 129, 382, 637, 405, 322, 323, 148, 324, 58, 59, 60, 325, 149, 326, 130, 61, 62, 63, 64, 327, 150, 328, 65, 66, 67, 576, 329, 419, 420, 151, 421, 422, 418, 423, 424, 330, 152, 331, 153, 332, 68, 69, 70, 154, 431, 432, 155, 433, 434, 430, 435, 279, 280, 679, 680, 156, 333, 157, 567, 568, 569, 158, 159, 334, 160, 335, 71, 72, 73, 450, 161, 451, 452, 336, 453, 337, 162, 338, 74, 75, 76, 339, 163, 340, 77, 78, 79, 341, 626, 164, 627, 165, 342, 166, 167, 168, 169, 0, 170, 343, 171, 344, 83, 84, 85, 80, 81, 82, 628, 448, 638, 639, 480, 481, 482, 445, 446, 447, 495, 459, 282, 379, 380, 131, 381, 436, 172, 473, 474, 345, 346, 640, 641, 347, 584, 173, 585, 348, 174, 349, 89, 90, 91, 86, 87, 88, 457, 175, 350, 176, 177, 458, 178, 582, 179, 351, 352, 180, 353, 92, 93, 94, 462, 463, 464, 465, 466, 181, 657, 409, 475, 354, 182, 355, 95, 96, 97, 356, 183, 357, 98, 99, 100, 358, 184, 359, 101, 102, 103, 360, 185, 361, 104, 105, 106, 479, 362, 483, 484, 485, 363, 186, 365, 371, 376, 377, 378, 383, 384, 1, 187, 188, 500, 3, 2, 534, 189, 570, 190, 592, 593, 594, 390, 398, 399, 402, 191, 192, 193, 194, 406, 4, 410, 195, 658, 671, 415, 416, 417, 5, 426, 428, 486, 437, 439, 196, 107, 108, 197, 535, 198, 595, 6, 440, 442, 7, 441, 443, 444, 8, 109, 572, 573, 574, 575, 9, 281, 642, 449, 571, 643, 519, 596, 199, 454, 200, 455, 201, 456, 202, 203, 204, 205, 206, 583, 644, 645, 490, 489, 207, 460, 133, 461, 283, 284, 208, 467, 468, 469, 470, 471, 472, 209, 285, 286, 629, 476, 477, 478, 210, 211, 212, 487, 488, 491, 492, 493, 494, 496, 497, 498, 499, 213, 10, 501, 502, 503, 504, 115, 116, 505, 506, 507, 508, 11, 509, 510, 511, 512, 12, 513, 514, 515, 516, 517, 518, 521, 110, 520, 522, 523, 524, 597, 598, 599, 600, 525, 529, 526, 527, 528, 214, 14, 13, 530, 16, 15, 531, 117, 532, 215, 533, 536, 219, 17, 538, 539, 218, 537, 18, 543, 542, 217, 540, 216, 541, 544, 545, 546, 547, 549, 112, 548, 551, 552, 553, 554, 111, 550, 555, 556, 557, 19, 113, 558, 559, 560, 561, 20, 21, 22, 23, 24, 25, 26, 27, 28, 578, 114, 577, 579, 580, 581, 29, 31, 30, 32, 33, 34, 220, 35, 618, 615, 616, 601, 602, 603, 221, 604, 605, 606, 607, 608, 610, 609, 611, 612, 613, 614, 617, 619, 620, 621, 622, 287, 222, 630, 631, 632, 646, 223, 647, 224, 225, 648, 649, 226, 650, 651, 227, 228, 229, 36, 288, 289, 290, 132, 292, 230, 231, 291, 293, 232, 233, 234, 235, 37, 294, 236, 237, 295, 238, 296, 297, 298, 299, 300, 301, 239, 240, 38, 241, 303, 302, 242, 243, 304, 244, 245, 246, 247, 248, 305, 40, 39, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 306, 265, 266, 659, 660, 661, 662, 663, 664, 267, 665, 268, 666, 269, 667, 270, 668, 271, 272, 41, 273, 669, 43, 42, 274, 670, 275, 276, 675, 278, 44, 672, 673, 277, 674, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690 }
  uselistorder i1* @cf, { 90, 16, 17, 25, 101, 27, 28, 91, 29, 31, 23, 33, 37, 10, 92, 112, 34, 39, 0, 41, 12, 44, 14, 93, 83, 85, 20, 94, 103, 104, 95, 53, 35, 1, 2, 42, 3, 21, 48, 46, 57, 105, 87, 106, 107, 77, 78, 60, 5, 6, 63, 79, 80, 51, 75, 55, 61, 4, 47, 69, 65, 73, 7, 8, 9, 11, 13, 15, 18, 19, 22, 24, 84, 96, 97, 98, 26, 102, 30, 32, 36, 38, 99, 113, 114, 40, 43, 45, 49, 71, 86, 100, 50, 52, 54, 108, 56, 109, 58, 59, 88, 89, 110, 111, 76, 81, 82, 62, 64, 66, 67, 68, 70, 72, 74 }
}

define i32 @function_37e9a() local_unnamed_addr {
dec_label_pc_37e9a:
  %v0_37e9b = load i32, i32* @eax, align 4
  ret i32 %v0_37e9b
}

define i32 @_Z14Serialize_implI11CHashWriterhSaIhEEvRT_RKSt6vectorIT0_T1_EiiRKN5boost17integral_constantIbLb1EEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_37e9c:
  %v1_37ed2 = call i32 @unknown_4cf56(i32 %arg2)
  %v3_37eea = call i32 @unknown_6d2d6(i32 %arg1, i32 %v1_37ed2, i32 0)
  %v1_37ef5 = call i32 @unknown_4f0c2(i32 %arg2)
  %v1_37efa = xor i32 %v1_37ef5, 1
  %v4_37efa = trunc i32 %v1_37efa to i8
  %v5_37efd = icmp eq i8 %v4_37efa, 0
  br i1 %v5_37efd, label %dec_label_pc_37f34, label %dec_label_pc_37f01

dec_label_pc_37f01:                               ; preds = %dec_label_pc_37e9c
  %v1_37f07 = call i32 @unknown_4cf56(i32 %arg2)
  %v2_37f1c = call i32 @unknown_4cf94(i32 %arg2, i32 0)
  %v3_37f2f = call i32 @unknown_47bfe(i32 %arg1, i32 %v2_37f1c, i32 %v1_37f07)
  br label %dec_label_pc_37f34

dec_label_pc_37f34:                               ; preds = %dec_label_pc_37f01, %dec_label_pc_37e9c
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37f40

bb:                                               ; preds = %dec_label_pc_37f34
  %v1_37f3e = call i32 @function_37f45()
  br label %dec_label_pc_37f40

dec_label_pc_37f40:                               ; preds = %bb, %dec_label_pc_37f34
  %v2_37f3e = phi i32 [ %v1_37f3e, %bb ], [ 0, %dec_label_pc_37f34 ]
  ret i32 %v2_37f3e

; uselistorder directives
  uselistorder i8 0, { 60, 97, 98, 228, 255, 256, 101, 102, 10, 11, 286, 287, 288, 12, 110, 111, 13, 112, 92, 116, 14, 226, 227, 120, 122, 168, 15, 61, 62, 63, 77, 78, 117, 240, 241, 242, 243, 244, 64, 115, 65, 66, 67, 123, 23, 68, 229, 136, 137, 138, 69, 280, 70, 71, 289, 72, 73, 74, 290, 291, 292, 75, 257, 258, 76, 281, 170, 79, 24, 25, 81, 82, 8, 80, 143, 144, 150, 108, 154, 155, 156, 157, 158, 16, 293, 294, 18, 83, 84, 253, 85, 87, 88, 9, 86, 162, 163, 164, 165, 166, 89, 90, 91, 93, 94, 95, 96, 192, 193, 194, 99, 100, 103, 104, 105, 106, 107, 109, 113, 114, 118, 119, 121, 124, 125, 126, 169, 127, 128, 129, 130, 131, 132, 133, 134, 135, 234, 235, 2, 232, 233, 236, 237, 19, 238, 239, 231, 230, 295, 139, 254, 26, 17, 140, 141, 142, 145, 146, 147, 148, 149, 151, 152, 153, 27, 28, 29, 159, 30, 31, 160, 161, 259, 167, 171, 172, 173, 261, 174, 177, 178, 3, 175, 176, 179, 180, 181, 183, 182, 20, 185, 184, 186, 187, 188, 189, 190, 191, 198, 199, 196, 195, 197, 200, 201, 202, 206, 207, 4, 204, 203, 205, 211, 212, 213, 214, 215, 5, 209, 208, 210, 216, 217, 218, 221, 222, 6, 219, 220, 223, 224, 225, 248, 249, 7, 246, 245, 247, 250, 251, 252, 260, 273, 274, 271, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 21, 278, 279, 282, 283, 284, 285, 296, 32, 33, 34, 38, 35, 36, 37, 39, 40, 41, 0, 42, 43, 1, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 297, 298, 299, 300, 301, 302, 303, 304, 305, 22 }
  uselistorder i32 (i32)* @unknown_4cf56, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_37f42(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37f42:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_37f45() local_unnamed_addr {
dec_label_pc_37f45:
  %v0_37f4a = load i32, i32* @eax, align 4
  ret i32 %v0_37f4a
}

define i32 @_Z9SerializeI11CHashWriter9CFlatDataEvRT_RKT0_li(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37f4b:
  %v8_37f8f = call i32 @unknown_6fef3(i32 %arg2, i32 %arg1, i32 %arg3, i32 %arg4, i32 %arg4, i32 %arg3, i32 %arg2, i32 %arg1)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_37fa0

bb:                                               ; preds = %dec_label_pc_37f4b
  %v1_37f9e = call i32 @function_37fa5()
  br label %dec_label_pc_37fa0

dec_label_pc_37fa0:                               ; preds = %bb, %dec_label_pc_37f4b
  %v2_37f9e = phi i32 [ %v1_37f9e, %bb ], [ 0, %dec_label_pc_37f4b ]
  ret i32 %v2_37f9e

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_37fa5() local_unnamed_addr {
dec_label_pc_37fa5:
  %v0_37fa6 = load i32, i32* @eax, align 4
  ret i32 %v0_37fa6
}

define i32 @_ZNK9CFlatData9SerializeI11CHashWriterEEvRT_ii(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_37fa8:
  %v2_37fdc = load i32, i32* %arg1, align 4
  ret i32 %v2_37fdc
}

define i32 @function_37fe0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_37fe0:
  %v0_37fe0 = load i32, i32* @ecx, align 4
  %v1_37fe0 = load i32, i32* @eax, align 4
  %v2_37fe0 = sub i32 %v0_37fe0, %v1_37fe0
  %v0_37fe6 = load i32, i32* @ebp, align 4
  %v1_37fe6 = add i32 %v0_37fe6, -28
  %v2_37fe6 = inttoptr i32 %v1_37fe6 to i32*
  %v3_37fe6 = load i32, i32* %v2_37fe6, align 4
  %v1_37fe9 = inttoptr i32 %v3_37fe6 to i32*
  %v2_37fe9 = load i32, i32* %v1_37fe9, align 4
  %v1_37ff3 = add i32 %v0_37fe6, -32
  %v2_37ff3 = inttoptr i32 %v1_37ff3 to i32*
  %v3_37ff3 = load i32, i32* %v2_37ff3, align 4
  %v3_37ff9 = call i32 @unknown_47d0a(i32 %v3_37ff3, i32 %v2_37fe9, i32 %v2_37fe0)
  %v0_37ffe = load i32, i32* @ebp, align 4
  %v1_37ffe = add i32 %v0_37ffe, -12
  %v2_37ffe = inttoptr i32 %v1_37ffe to i32*
  %v3_37ffe = load i32, i32* %v2_37ffe, align 4
  %v1_38001 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38001 = xor i32 %v1_38001, %v3_37ffe
  %v3_38001 = icmp eq i32 %v2_38001, 0
  store i32 %v2_38001, i32* @eax, align 4
  br i1 %v3_38001, label %bb, label %dec_label_pc_3800a

bb:                                               ; preds = %dec_label_pc_37fe0
  %v1_38008 = call i32 @function_3800f()
  br label %dec_label_pc_3800a

dec_label_pc_3800a:                               ; preds = %bb, %dec_label_pc_37fe0
  %v2_38008 = phi i32 [ %v1_38008, %bb ], [ %v2_38001, %dec_label_pc_37fe0 ]
  ret i32 %v2_38008

; uselistorder directives
  uselistorder i32 -32, { 37, 209, 210, 211, 51, 218, 52, 53, 54, 38, 55, 56, 187, 193, 194, 25, 212, 57, 58, 59, 60, 34, 61, 42, 226, 26, 227, 228, 202, 203, 229, 230, 231, 63, 28, 64, 65, 44, 68, 69, 45, 71, 72, 213, 73, 50, 204, 232, 233, 33, 234, 235, 236, 66, 67, 246, 247, 255, 13, 84, 85, 86, 87, 88, 89, 90, 35, 93, 182, 183, 94, 95, 96, 91, 153, 154, 155, 256, 257, 70, 43, 21, 171, 172, 150, 151, 190, 195, 196, 92, 103, 27, 14, 40, 15, 173, 174, 184, 97, 1, 237, 170, 16, 188, 238, 239, 240, 17, 113, 114, 115, 116, 219, 197, 122, 98, 123, 214, 121, 220, 18, 191, 29, 30, 31, 19, 20, 117, 118, 189, 221, 222, 185, 186, 241, 242, 104, 223, 224, 243, 148, 99, 166, 128, 129, 7, 32, 100, 41, 167, 39, 141, 36, 244, 207, 208, 3, 2, 4, 101, 102, 46, 47, 48, 49, 22, 23, 161, 124, 125, 126, 127, 24, 130, 105, 106, 107, 108, 109, 110, 111, 112, 131, 198, 192, 5, 6, 132, 133, 134, 135, 136, 137, 138, 62, 142, 76, 74, 75, 77, 78, 79, 80, 81, 82, 83, 143, 144, 145, 225, 205, 139, 140, 206, 245, 199, 200, 201, 146, 147, 149, 152, 160, 156, 157, 158, 159, 0, 119, 120, 164, 165, 162, 163, 168, 169, 8, 9, 10, 177, 175, 176, 178, 179, 180, 181, 215, 216, 217, 248, 249, 250, 251, 252, 253, 254, 11, 12 }
}

define i32 @function_3800f() local_unnamed_addr {
dec_label_pc_3800f:
  %v0_38010 = load i32, i32* @eax, align 4
  ret i32 %v0_38010
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_38034:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_38020_type* @global_var_38020.2287 to i32), i32* %arg1, align 4
  %v1_3805a = call i32 @unknown_4719e(i32 %tmp99)
  %v1_38069 = call i32 @function_38076()
  ret i32 %tmp99

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_38020_type* @global_var_38020.2287 to i32), { 1, 0 }
}

define i32 @function_38076() local_unnamed_addr {
dec_label_pc_38076:
  %v0_38076 = load i32, i32* @ebp, align 4
  %v1_38076 = add i32 %v0_38076, -12
  %v2_38076 = inttoptr i32 %v1_38076 to i32*
  %v3_38076 = load i32, i32* %v2_38076, align 4
  %v1_38079 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v2_38079 = xor i32 %v1_38079, %v3_38076
  %v3_38079 = icmp eq i32 %v2_38079, 0
  store i32 %v2_38079, i32* @eax, align 4
  br i1 %v3_38079, label %bb, label %dec_label_pc_38082

bb:                                               ; preds = %dec_label_pc_38076
  %v1_38080 = call i32 @function_38087()
  br label %dec_label_pc_38082

dec_label_pc_38082:                               ; preds = %bb, %dec_label_pc_38076
  %v2_38080 = phi i32 [ %v1_38080, %bb ], [ %v2_38079, %dec_label_pc_38076 ]
  ret i32 %v2_38080
}

define i32 @function_38087() local_unnamed_addr {
dec_label_pc_38087:
  %v0_38088 = load i32, i32* @eax, align 4
  ret i32 %v0_38088
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32 %arg1) {
dec_label_pc_3808a:
  %v1_380a7 = call i32 @unknown_700be(i32 %arg1)
  ret i32 %arg1
}

define i32 @function_380c7() local_unnamed_addr {
dec_label_pc_380c7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_380c7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_380c7 = add i32 %v0_380c7, -1
  store i32 %v1_380c7, i32* %ecx.global-to-local, align 4
  %v0_380c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_380c9
}

define i32 @function_3819d(i32 %arg1) local_unnamed_addr {
dec_label_pc_3819d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_381f5(i32, i32) local_unnamed_addr

define i32 @function_3824e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3824e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38286(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38286:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38295(i32 %arg1) local_unnamed_addr {
dec_label_pc_38295:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_382c2(i32) local_unnamed_addr

define i32 @function_382ef(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_382ef:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3830f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3830f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3833a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3833a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3833c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3833c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_383b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_383b4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_383f9(i32, i32) local_unnamed_addr

define i32 @function_384bd(i32 %arg1) local_unnamed_addr {
dec_label_pc_384bd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_384c8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_384c8:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_384ea(i32, i32) local_unnamed_addr

define i32 @function_3851c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3851c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3855f(i32 %arg1) local_unnamed_addr {
dec_label_pc_3855f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38589(i32 %arg1) local_unnamed_addr {
dec_label_pc_38589:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_385b1(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_385b1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_385b6(i32 %arg1) local_unnamed_addr {
dec_label_pc_385b6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3860c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3860c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZTS12bignum_error(i32 %arg1) local_unnamed_addr {
dec_label_pc_38610:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38766(i32 %arg1) local_unnamed_addr {
dec_label_pc_38766:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_387b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_387b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_387e2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_387e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3887e(i32 %arg1) local_unnamed_addr {
dec_label_pc_3887e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_388a0:
  %v1_388ba = add i32 %arg1, 12
  %v2_388ba = inttoptr i32 %v1_388ba to i32*
  %v3_388ba = load i32, i32* %v2_388ba, align 4
  %v1_388c0 = call i32 @unknown_62049(i32 %v3_388ba)
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_388d1

bb:                                               ; preds = %dec_label_pc_388a0
  %v1_388cf = call i32 @function_388d6()
  br label %dec_label_pc_388d1

dec_label_pc_388d1:                               ; preds = %bb, %dec_label_pc_388a0
  %v2_388cf = phi i32 [ %v1_388cf, %bb ], [ 0, %dec_label_pc_388a0 ]
  ret i32 %v2_388cf

; uselistorder directives
  uselistorder i32 12, { 19, 140, 76, 20, 21, 77, 78, 147, 148, 79, 80, 81, 82, 22, 23, 57, 150, 59, 73, 74, 84, 85, 86, 88, 151, 24, 25, 26, 27, 28, 91, 92, 93, 68, 29, 94, 96, 115, 30, 31, 12, 97, 98, 32, 33, 83, 34, 35, 36, 37, 38, 39, 114, 95, 55, 40, 41, 102, 103, 101, 100, 152, 0, 42, 106, 43, 44, 45, 131, 46, 153, 47, 48, 107, 72, 49, 50, 51, 154, 52, 99, 53, 54, 121, 56, 58, 60, 89, 61, 149, 137, 138, 62, 63, 132, 64, 111, 65, 112, 113, 66, 67, 1, 69, 2, 70, 13, 71, 126, 127, 75, 5, 3, 4, 6, 7, 8, 9, 10, 87, 11, 141, 90, 116, 117, 104, 105, 155, 156, 123, 122, 108, 109, 110, 133, 134, 135, 136, 118, 119, 120, 124, 125, 128, 129, 130, 139, 142, 143, 144, 145, 146, 14, 15, 16, 17, 18, 157 }
}

define i32 @function_388d6() local_unnamed_addr {
dec_label_pc_388d6:
  %v0_388d7 = load i32, i32* @eax, align 4
  ret i32 %v0_388d7
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info(i32 %arg1, i32 %arg2) {
dec_label_pc_388d8:
  store i32 0, i32* @eax, align 4
  br i1 true, label %bb, label %dec_label_pc_38906

bb:                                               ; preds = %dec_label_pc_388d8
  %v3_38904 = call i32 @function_3890b(i32 %arg2, i32 %arg1)
  br label %dec_label_pc_38906

dec_label_pc_38906:                               ; preds = %bb, %dec_label_pc_388d8
  %v4_38904 = phi i32 [ %v3_38904, %bb ], [ 0, %dec_label_pc_388d8 ]
  ret i32 %v4_38904
}

define i32 @function_3890b(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3890b:
  %v0_3890c = load i32, i32* @eax, align 4
  ret i32 %v0_3890c
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3890e:
  %v4_3890e = add i32 %arg1, -28
  %v1_38913 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.2054(i32 %v4_3890e)
  ret i32 %v1_38913

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.2054, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv.2054(i32 %arg1) {
dec_label_pc_38916:
  %v2_38947 = call i32 @unknown_4d7d4(i32 0, i32 %arg1)
  br i1 true, label %dec_label_pc_38957, label %dec_label_pc_38952

dec_label_pc_38952:                               ; preds = %dec_label_pc_38916
  ret i32 undef

dec_label_pc_38957:                               ; preds = %dec_label_pc_38916
  ret i32 0

; uselistorder directives
  uselistorder i1 true, {}
}

define i32 @function_38959() local_unnamed_addr {
dec_label_pc_38959:
  %eax.global-to-local = alloca i32, align 4
  %v2_38959 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_38959 = load i32, i32* %eax.global-to-local, align 4
  %v4_38959 = trunc i32 %v3_38959 to i8
  %v5_38959 = add i8 %v4_38959, %v2_38959
  %v21_38959 = inttoptr i32 %v3_38959 to i8*
  store i8 %v5_38959, i8* %v21_38959, align 1
  %v22_38959 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_38959
}

define i32 @function_3895c(i32 %arg1) local_unnamed_addr {
dec_label_pc_3895c:
  %v0_3895c = load i32, i32* @ebp, align 4
  %v1_3895c = add i32 %v0_3895c, -12
  %v2_3895c = inttoptr i32 %v1_3895c to i32*
  %v3_3895c = load i32, i32* %v2_3895c, align 4
  %v1_3895f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_3895f = icmp eq i32 %v1_3895f, %v3_3895c
  br i1 %v3_3895f, label %bb, label %dec_label_pc_38968

bb:                                               ; preds = %dec_label_pc_3895c
  %v1_38966 = call i32 @function_38983()
  store i32 %v1_38966, i32* @eax, align 4
  br label %dec_label_pc_38968

dec_label_pc_38968:                               ; preds = %bb, %dec_label_pc_3895c
  %v0_38968 = call i32 @function_3897e()
  ret i32 %v0_38968
}

define i32 @function_3897e() local_unnamed_addr {
dec_label_pc_3897e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38983() local_unnamed_addr {
dec_label_pc_38983:
  %v0_38989 = load i32, i32* @eax, align 4
  ret i32 %v0_38989
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3898a:
  %v4_3898a = add i32 %arg1, -28
  %v1_3898f = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_3898a)
  ret i32 %v1_3898f

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_38992:
  ret i32 0
}

define i32 @function_389b8() local_unnamed_addr {
dec_label_pc_389b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_389b8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_389b8
}

define i32 @function_389c2(i32 %arg1) local_unnamed_addr {
dec_label_pc_389c2:
  %v0_389c2 = load i32, i32* @eax, align 4
  %v11_389c2 = and i32 %v0_389c2, -24
  ret i32 %v11_389c2
}

define i32 @function_389c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_389c4:
  %v0_389c4 = load i32, i32* @ecx, align 4
  %v1_389c4 = trunc i32 %v0_389c4 to i8
  %v2_389c4 = load i32, i32* @esi, align 4
  %v3_389c4 = add i32 %v2_389c4, 1
  %v4_389c4 = inttoptr i32 %v3_389c4 to i8*
  store i8 %v1_389c4, i8* %v4_389c4, align 1
  %v5_389c4 = load i32, i32* @eax, align 4
  ret i32 %v5_389c4

; uselistorder directives
  uselistorder i32* @esi, { 35, 53, 54, 55, 12, 13, 14, 22, 10, 11, 23, 24, 16, 27, 47, 42, 43, 48, 56, 36, 15, 37, 38, 17, 18, 19, 20, 21, 49, 40, 41, 50, 51, 31, 32, 33, 34, 28, 29, 30, 1, 25, 26, 2, 3, 57, 58, 39, 44, 4, 5, 45, 46, 0, 52, 59, 6, 7, 8, 9 }
}

define i32 @function_389cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_389cc:
  %v0_389cc = load i32, i32* @ecx, align 4
  %v1_389cc = add i32 %v0_389cc, -955767740
  %v2_389cc = inttoptr i32 %v1_389cc to i8*
  %v3_389cc = load i8, i8* %v2_389cc, align 1
  %v5_389cc = trunc i32 %v0_389cc to i8
  %v6_389cc = add i8 %v3_389cc, %v5_389cc
  store i8 %v6_389cc, i8* %v2_389cc, align 1
  %v0_389d3 = load i32, i32* @eax, align 4
  %v11_389d3 = and i32 %v0_389d3, -252
  %v2_389d7 = inttoptr i32 %v11_389d3 to i32*
  %v3_389d7 = load i32, i32* %v2_389d7, align 4
  %v4_389d7 = add i32 %v3_389d7, %v11_389d3
  ret i32 %v4_389d7

; uselistorder directives
  uselistorder i32 -252, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 11 }
  uselistorder i32 -955767740, { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_389f6:
  %v4_389f6 = add i32 %arg1, -28
  %v1_389fb = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %v4_389f6)
  ret i32 %v1_389fb

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_389fe:
  %v5_38a02 = load i32, i32* @eax, align 4
  ret i32 %v5_38a02
}

define i32 @function_38a04(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_38a04:
  %v0_38a05 = load i32, i32* @ebx, align 4
  %v1_38a05 = add i32 %v0_38a05, 1166608453
  %v2_38a05 = inttoptr i32 %v1_38a05 to i8*
  %v3_38a05 = load i8, i8* %v2_38a05, align 1
  %v4_38a05 = load i32, i32* @ecx, align 4
  %v5_38a05 = trunc i32 %v4_38a05 to i8
  %v6_38a05 = xor i8 %v5_38a05, %v3_38a05
  store i8 %v6_38a05, i8* %v2_38a05, align 1
  %v0_38a0d = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_38a12 = load i32, i32* @ebp, align 4
  %v2_38a12 = add i32 %v1_38a12, -12
  %v3_38a12 = inttoptr i32 %v2_38a12 to i32*
  store i32 %v0_38a0d, i32* %v3_38a12, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 1166608453, { 4, 0, 2, 7, 1, 3, 6, 5 }
}

define i32 @function_38a22(i32 %arg1) local_unnamed_addr {
dec_label_pc_38a22:
  %v0_38a22 = load i32, i32* @ecx, align 4
  %v1_38a22 = add i32 %v0_38a22, -465204285
  %v2_38a22 = inttoptr i32 %v1_38a22 to i32*
  %v3_38a22 = load i32, i32* %v2_38a22, align 4
  %v4_38a22 = add i32 %v3_38a22, -1
  store i32 %v4_38a22, i32* %v2_38a22, align 4
  %v0_38a28 = load i32, i32* @eax, align 4
  %v0_38a2c = load i32, i32* @ebx, align 4
  %v2_38a2f = call i32 @unknown_4d6cc(i32 %v0_38a2c, i32 %v0_38a28)
  %v0_38a34 = load i32, i32* @ebx, align 4
  %v1_38a36 = icmp eq i32 %v0_38a34, 0
  br i1 %v1_38a36, label %dec_label_pc_38a44, label %dec_label_pc_38a3a

dec_label_pc_38a3a:                               ; preds = %dec_label_pc_38a22
  %v1_38a3a = add i32 %v0_38a34, 28
  br label %dec_label_pc_38a44

dec_label_pc_38a44:                               ; preds = %dec_label_pc_38a22, %dec_label_pc_38a3a
  %storemerge = phi i32 [ %v1_38a3a, %dec_label_pc_38a3a ], [ 0, %dec_label_pc_38a22 ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_38a44 = load i32, i32* @ebp, align 4
  %v1_38a44 = add i32 %v0_38a44, -12
  %v2_38a44 = inttoptr i32 %v1_38a44 to i32*
  %v3_38a44 = load i32, i32* %v2_38a44, align 4
  %v1_38a47 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38a47 = icmp eq i32 %v1_38a47, %v3_38a44
  br i1 %v3_38a47, label %bb, label %dec_label_pc_38a50

bb:                                               ; preds = %dec_label_pc_38a44
  %v1_38a4e = call i32 @function_38a6b()
  store i32 %v1_38a4e, i32* @eax, align 4
  br label %dec_label_pc_38a50

dec_label_pc_38a50:                               ; preds = %bb, %dec_label_pc_38a44
  %v0_38a50 = call i32 @function_38a66()
  ret i32 %v0_38a50

; uselistorder directives
  uselistorder i32 28, { 7, 10, 28, 0, 11, 12, 13, 14, 15, 25, 3, 4, 29, 27, 5, 6, 23, 24, 8, 9, 16, 17, 18, 19, 20, 21, 30, 31, 32, 33, 22, 26, 1, 2 }
  uselistorder label %dec_label_pc_38a44, { 1, 0 }
}

define i32 @function_38a66() local_unnamed_addr {
dec_label_pc_38a66:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38a6b() local_unnamed_addr {
dec_label_pc_38a6b:
  %v0_38a71 = load i32, i32* @eax, align 4
  ret i32 %v0_38a71
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_38a72:
  %v4_38a72 = add i32 %arg1, -28
  %v1_38a77 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %v4_38a72)
  ret i32 %v1_38a77

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_38a7a:
  ret i32 0
}

define i32 @function_38aa0() local_unnamed_addr {
dec_label_pc_38aa0:
  %eax.global-to-local = alloca i32, align 4
  %v0_38aa0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_38aa0

; uselistorder directives
  uselistorder i32 1, { 380, 2103, 381, 382, 383, 384, 1969, 2118, 2119, 279, 277, 278, 1094, 1983, 25, 26, 385, 386, 156, 157, 286, 1264, 2138, 289, 287, 288, 1178, 1993, 160, 161, 1095, 158, 159, 1994, 1995, 162, 163, 164, 165, 1096, 1328, 1097, 1099, 326, 327, 325, 329, 330, 328, 258, 259, 260, 1098, 1329, 262, 261, 27, 28, 29, 30, 166, 167, 387, 388, 263, 264, 1100, 275, 276, 389, 390, 391, 392, 1050, 168, 1265, 1266, 1267, 1996, 1997, 172, 171, 169, 170, 393, 394, 1101, 1268, 1269, 1270, 1271, 1272, 149, 150, 1273, 1274, 1102, 298, 127, 1275, 1103, 395, 396, 173, 31, 1276, 1277, 1992, 152, 151, 153, 154, 1104, 397, 398, 1105, 175, 1106, 1278, 176, 1279, 1280, 2002, 179, 177, 178, 32, 33, 34, 312, 2158, 313, 314, 315, 399, 400, 35, 272, 36, 37, 1107, 1281, 1282, 1979, 136, 135, 133, 134, 401, 402, 1108, 1235, 1236, 2145, 2146, 2147, 2148, 2149, 294, 297, 295, 296, 1109, 2120, 1078, 2121, 2122, 281, 403, 404, 1081, 316, 2159, 317, 318, 319, 405, 406, 2165, 1999, 174, 38, 407, 1283, 408, 1331, 1330, 180, 409, 410, 181, 39, 40, 2004, 182, 183, 184, 411, 412, 41, 413, 1980, 1981, 1982, 141, 142, 143, 1110, 185, 1284, 1285, 186, 1286, 42, 1111, 187, 140, 188, 1198, 1199, 1219, 1218, 1217, 1216, 1215, 1214, 1213, 1212, 1211, 1210, 1209, 1208, 1207, 1206, 1205, 1204, 1203, 1202, 1201, 1200, 2006, 2007, 282, 1062, 1220, 1221, 1332, 1112, 292, 414, 415, 416, 270, 417, 418, 2104, 1222, 419, 2105, 420, 137, 138, 139, 421, 1113, 193, 2013, 2014, 194, 195, 196, 43, 44, 45, 422, 423, 0, 424, 425, 426, 2015, 2097, 2096, 2098, 1333, 347, 1334, 348, 1914, 427, 428, 429, 2123, 430, 431, 1339, 1338, 1337, 1336, 1335, 321, 322, 323, 1340, 1989, 46, 1287, 432, 433, 2020, 1223, 1224, 434, 435, 436, 2001, 437, 1341, 1288, 438, 439, 2022, 2023, 1065, 1064, 1114, 1066, 1342, 2124, 440, 1343, 254, 255, 2079, 256, 1990, 1225, 1226, 2125, 283, 1051, 1991, 47, 48, 2126, 1227, 1228, 1229, 49, 331, 332, 333, 334, 335, 336, 441, 442, 1345, 1344, 1072, 293, 280, 1230, 1998, 1231, 203, 1289, 443, 444, 445, 446, 1115, 50, 51, 1290, 447, 448, 1237, 1238, 1970, 1346, 1347, 1348, 1349, 1352, 1351, 1350, 2080, 2081, 449, 1116, 1052, 1915, 105, 106, 1916, 107, 108, 1353, 1117, 1354, 1355, 1118, 2008, 450, 1356, 1357, 1053, 451, 452, 123, 1358, 1359, 337, 338, 1063, 453, 454, 455, 456, 1360, 266, 267, 1917, 457, 458, 1191, 1192, 1361, 189, 2010, 2011, 190, 191, 192, 459, 460, 1119, 1120, 1362, 1291, 461, 2031, 462, 1363, 1292, 463, 207, 1121, 1365, 1364, 464, 465, 126, 466, 467, 339, 340, 468, 469, 148, 470, 471, 200, 1366, 202, 341, 342, 472, 473, 474, 475, 476, 1368, 1367, 343, 477, 478, 479, 480, 1122, 481, 482, 1369, 1293, 1123, 483, 484, 485, 1370, 257, 486, 487, 488, 1371, 1124, 1377, 1376, 1375, 1374, 1373, 1372, 2016, 2017, 199, 197, 198, 1125, 1971, 1972, 53, 54, 52, 55, 56, 490, 489, 491, 1087, 1088, 1089, 1126, 2071, 253, 324, 492, 1379, 1378, 493, 494, 1074, 1075, 1127, 495, 496, 1382, 1381, 1380, 305, 497, 498, 2082, 1384, 1383, 1387, 1386, 1385, 499, 500, 501, 502, 1918, 503, 504, 505, 506, 507, 212, 213, 2037, 214, 2038, 508, 509, 510, 511, 512, 513, 1388, 1390, 1389, 1391, 1392, 1394, 1393, 345, 1395, 346, 1397, 1396, 344, 271, 514, 2040, 215, 2026, 1128, 515, 516, 517, 518, 1919, 519, 520, 1193, 1194, 1398, 2139, 2140, 290, 521, 522, 2150, 301, 523, 524, 1294, 525, 526, 527, 1920, 529, 530, 528, 531, 532, 1399, 1059, 1060, 128, 1401, 1400, 1, 1129, 1054, 1080, 1404, 1403, 1402, 2069, 1405, 1406, 1973, 533, 534, 535, 536, 2039, 1130, 537, 1407, 2000, 1408, 538, 539, 309, 1079, 2141, 540, 541, 1409, 2142, 542, 1410, 2032, 2033, 209, 208, 543, 544, 299, 300, 2061, 236, 237, 238, 545, 546, 2028, 204, 205, 206, 1131, 129, 2168, 1084, 1085, 132, 130, 2019, 2151, 1132, 304, 252, 1411, 1987, 1988, 144, 145, 146, 147, 250, 251, 1978, 131, 2021, 201, 227, 228, 1179, 1974, 57, 547, 548, 549, 550, 1412, 1133, 551, 552, 1413, 1414, 553, 554, 555, 556, 2051, 557, 558, 2034, 1415, 559, 560, 1921, 561, 562, 1416, 1417, 563, 1418, 564, 565, 302, 303, 1143, 369, 566, 1419, 1144, 567, 568, 1922, 569, 570, 1195, 1196, 1420, 1055, 1421, 1425, 1424, 1423, 1422, 2116, 274, 1426, 1975, 1427, 571, 246, 572, 573, 306, 307, 308, 2053, 232, 233, 574, 1923, 1924, 575, 576, 577, 578, 1428, 2112, 155, 1429, 1431, 1430, 1433, 1432, 1056, 2027, 1435, 1434, 1057, 249, 216, 217, 58, 579, 2041, 1436, 124, 125, 218, 1440, 1439, 1438, 1437, 59, 580, 2045, 1067, 1068, 2036, 210, 581, 219, 220, 221, 1446, 1445, 1444, 1443, 1442, 1441, 2046, 222, 582, 2, 1076, 583, 584, 265, 1447, 585, 588, 587, 586, 589, 1449, 1448, 590, 1457, 1456, 1455, 1454, 1453, 1452, 1451, 1450, 2047, 223, 224, 225, 2048, 1925, 109, 110, 1926, 111, 112, 591, 592, 2049, 1458, 593, 594, 1459, 1460, 1462, 1461, 595, 596, 597, 229, 1464, 1463, 598, 599, 269, 601, 600, 602, 1134, 311, 1465, 1061, 2050, 268, 230, 231, 1466, 1468, 1467, 603, 604, 1927, 606, 607, 605, 608, 609, 1295, 1077, 291, 273, 60, 610, 611, 1469, 1135, 226, 1058, 1136, 1470, 612, 613, 614, 615, 1296, 1069, 1070, 2065, 1471, 242, 243, 616, 1472, 310, 617, 618, 1976, 1474, 1473, 619, 620, 1977, 1476, 1475, 2055, 621, 622, 1137, 1477, 623, 624, 1478, 1479, 1180, 1181, 1490, 1489, 1488, 1487, 1486, 1485, 1484, 1483, 1482, 1481, 1480, 353, 352, 354, 625, 626, 1491, 1323, 1492, 62, 61, 63, 627, 1493, 628, 1494, 1496, 1495, 239, 240, 241, 2060, 235, 234, 629, 630, 631, 632, 1497, 247, 2066, 248, 1499, 1498, 1297, 1298, 1509, 1508, 1507, 1506, 1505, 1504, 1503, 1502, 1501, 1500, 65, 64, 633, 1928, 635, 636, 634, 637, 638, 639, 1299, 1512, 1511, 1510, 66, 640, 641, 1513, 1514, 1515, 642, 1516, 1517, 1518, 1519, 643, 644, 67, 68, 69, 70, 71, 1929, 646, 645, 647, 648, 649, 1984, 1300, 1985, 1521, 1520, 73, 72, 1301, 1522, 1524, 1523, 1526, 1525, 1986, 650, 651, 349, 350, 652, 653, 1527, 1529, 1528, 1531, 1530, 654, 655, 656, 657, 658, 375, 374, 659, 660, 372, 661, 662, 371, 370, 663, 664, 351, 1533, 1532, 665, 1534, 1535, 1536, 666, 667, 1543, 1542, 1541, 1540, 1539, 1538, 1537, 668, 1545, 1544, 1546, 1547, 1548, 669, 670, 671, 1549, 2100, 1550, 1551, 1552, 1553, 672, 1560, 1559, 1558, 1557, 1556, 1555, 1554, 1561, 1562, 1563, 1564, 673, 674, 1302, 1565, 675, 676, 1566, 677, 678, 1303, 679, 1567, 1568, 2127, 1571, 1572, 1570, 1569, 1573, 1574, 1575, 1576, 1577, 680, 1580, 1581, 1579, 1578, 681, 1584, 1583, 1582, 1585, 1586, 1594, 1593, 1592, 1591, 1590, 1589, 1588, 1587, 1595, 1596, 682, 1930, 683, 684, 1600, 1599, 1598, 1597, 1604, 1603, 1602, 1601, 74, 1607, 1611, 1614, 1613, 1612, 1610, 1609, 1608, 1606, 1605, 75, 1623, 1622, 1621, 1620, 1619, 1618, 1617, 1616, 1615, 1624, 1232, 1626, 1625, 1628, 1627, 1631, 1630, 1629, 1632, 2003, 1636, 1635, 1634, 1633, 76, 77, 78, 685, 1638, 1637, 355, 686, 1640, 1639, 79, 80, 687, 688, 690, 689, 691, 1239, 1643, 1642, 1641, 1645, 1644, 358, 1646, 81, 2005, 1647, 83, 82, 360, 361, 2009, 1651, 1650, 1649, 1648, 84, 359, 692, 2012, 1652, 1653, 1654, 1655, 1657, 1656, 363, 1666, 1665, 1664, 1663, 1662, 1661, 1660, 1659, 1658, 85, 693, 1668, 1667, 1671, 1670, 1669, 86, 1672, 1673, 694, 2018, 1674, 320, 1083, 695, 696, 697, 698, 699, 1138, 1086, 700, 701, 702, 703, 244, 1139, 1140, 1675, 87, 1676, 88, 704, 705, 706, 1677, 707, 2024, 2025, 1684, 1683, 1682, 1681, 1680, 1679, 1678, 356, 357, 1689, 1688, 1687, 1686, 1685, 708, 709, 710, 1090, 712, 711, 713, 1690, 714, 1694, 1693, 1692, 1691, 1931, 715, 716, 1698, 1697, 1696, 1695, 1182, 379, 1699, 89, 1700, 717, 718, 719, 720, 721, 724, 723, 722, 725, 90, 1183, 2029, 1184, 2030, 1141, 726, 1701, 727, 2101, 1709, 1708, 1707, 1706, 1705, 1704, 1703, 1702, 728, 729, 730, 731, 732, 733, 1932, 1933, 734, 245, 1713, 1712, 1711, 1710, 91, 92, 93, 94, 735, 2035, 1714, 736, 737, 738, 1185, 2099, 1718, 1717, 1716, 1715, 1934, 739, 1721, 1720, 1719, 3, 1240, 1723, 1722, 211, 1935, 1936, 740, 741, 1176, 1177, 1731, 1730, 1729, 1728, 1727, 1726, 1725, 1724, 1736, 1735, 1734, 1733, 1732, 95, 1760, 1759, 1758, 1757, 1756, 1755, 1754, 1753, 1752, 1751, 1750, 1749, 1748, 1747, 1746, 1745, 1744, 1743, 1742, 1741, 1740, 1739, 1738, 1737, 1764, 1763, 1762, 1761, 362, 742, 1765, 743, 744, 745, 1767, 1766, 746, 1770, 1769, 1768, 747, 748, 749, 750, 4, 1771, 1772, 1937, 751, 752, 1938, 113, 114, 753, 754, 755, 756, 757, 758, 759, 760, 1773, 761, 762, 763, 764, 1775, 1774, 766, 765, 767, 1776, 768, 769, 1304, 1777, 1939, 770, 771, 2042, 2043, 2044, 1779, 1778, 377, 1940, 772, 773, 115, 116, 774, 775, 777, 776, 778, 779, 781, 780, 782, 1941, 117, 118, 783, 784, 785, 786, 787, 788, 119, 120, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 1241, 1780, 367, 1242, 804, 805, 1781, 806, 1783, 1782, 1784, 807, 1942, 808, 1785, 809, 810, 811, 1786, 812, 813, 1787, 814, 815, 1788, 816, 817, 818, 819, 820, 1790, 1789, 821, 822, 823, 1943, 121, 122, 1243, 824, 825, 826, 96, 827, 828, 1944, 829, 830, 831, 832, 1791, 2052, 1793, 1792, 97, 98, 99, 100, 1795, 1794, 833, 834, 1796, 835, 836, 837, 838, 1798, 1797, 2054, 2152, 1145, 101, 2056, 1146, 376, 839, 2057, 2058, 1147, 102, 2059, 1148, 373, 1091, 840, 841, 842, 843, 844, 845, 1800, 1799, 847, 846, 848, 1945, 849, 850, 851, 1946, 852, 853, 854, 855, 1801, 856, 857, 858, 859, 1153, 1154, 860, 861, 2062, 2063, 2064, 862, 863, 864, 865, 866, 867, 868, 869, 1805, 1804, 1803, 1802, 368, 870, 871, 872, 873, 1186, 1305, 1806, 1808, 1807, 1810, 1809, 103, 1187, 1306, 2067, 1244, 104, 2068, 378, 1092, 1093, 1307, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 5, 6, 1947, 886, 887, 1308, 1948, 888, 1949, 893, 890, 889, 891, 892, 894, 7, 1950, 895, 896, 898, 897, 899, 8, 1951, 900, 901, 903, 902, 904, 9, 1952, 905, 906, 907, 10, 1953, 1954, 1245, 908, 909, 1309, 1310, 2070, 1311, 1814, 1813, 1812, 1811, 365, 1312, 1313, 2072, 1314, 1315, 1316, 11, 1317, 12, 1318, 1246, 2073, 1149, 1819, 1818, 1817, 1816, 1324, 1815, 364, 910, 1820, 1247, 1319, 911, 912, 913, 2075, 2074, 1320, 1326, 1829, 1325, 1828, 1827, 1826, 1825, 1824, 1823, 1822, 1821, 2076, 2077, 1833, 1832, 1831, 1830, 914, 915, 916, 917, 1840, 1839, 1838, 1837, 1836, 1835, 1834, 918, 919, 920, 921, 922, 923, 924, 2078, 1853, 1852, 1851, 1850, 1849, 1848, 1847, 1846, 1845, 1844, 1843, 1842, 1841, 925, 926, 2083, 2084, 2085, 2086, 2087, 2090, 2088, 2089, 1855, 1854, 13, 14, 1248, 2092, 2091, 1151, 1249, 2094, 2093, 1150, 1865, 1864, 1863, 1862, 1861, 1860, 1859, 1858, 1857, 1856, 1071, 927, 2095, 1870, 1869, 1868, 1867, 1866, 1073, 928, 929, 930, 931, 932, 933, 934, 935, 936, 1872, 1871, 937, 1873, 938, 939, 940, 941, 1876, 1875, 1874, 942, 1880, 1879, 1878, 1877, 943, 944, 945, 946, 2102, 1883, 1882, 1881, 1955, 947, 948, 949, 1884, 1250, 2107, 2106, 1152, 1890, 1889, 1888, 1887, 1886, 1885, 366, 950, 1892, 1891, 1188, 1189, 2108, 2109, 2110, 2111, 951, 2113, 1894, 1893, 1197, 2114, 2115, 1896, 1895, 952, 953, 1956, 2117, 1898, 1897, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 1256, 2136, 17, 1175, 2135, 15, 16, 2128, 1251, 2129, 1252, 2130, 1257, 2131, 2132, 2133, 2134, 1253, 1254, 1255, 1258, 2137, 1321, 1327, 1901, 1900, 1899, 284, 285, 971, 972, 18, 1957, 973, 2143, 2144, 974, 1234, 2153, 2154, 2155, 1233, 2156, 2157, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 2160, 2161, 1259, 1958, 1959, 1260, 1261, 1960, 1961, 1962, 1963, 1964, 1034, 1155, 1156, 1903, 1902, 1038, 1039, 1035, 1036, 1037, 1262, 1263, 1965, 1157, 1158, 1966, 1159, 1160, 1161, 1162, 1163, 1164, 1040, 1041, 1967, 1165, 1166, 1906, 1905, 1904, 1167, 1168, 1169, 1170, 1042, 1171, 1172, 1173, 1174, 1968, 1913, 1912, 1911, 1910, 1909, 1908, 1907, 19, 2162, 20, 21, 2163, 22, 23, 1322, 1082, 24, 2164, 1043, 1044, 1190, 2166, 2167, 1045, 1046, 1047, 1048, 1049, 1142 }
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_38ade:
  %v4_38ade = add i32 %arg1, -24
  %v1_38ae3 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_38ade)
  ret i32 %v1_38ae3

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_38ae6:
  ret i32 0
}

define i32 @function_38b0a(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b0a:
  %v0_38b0a = load i32, i32* @ecx, align 4
  %v1_38b0a = add i32 %v0_38b0a, -465204285
  %v2_38b0a = inttoptr i32 %v1_38b0a to i32*
  %v3_38b0a = load i32, i32* %v2_38b0a, align 4
  %v4_38b0a = add i32 %v3_38b0a, -1
  store i32 %v4_38b0a, i32* %v2_38b0a, align 4
  %v0_38b10 = load i32, i32* @eax, align 4
  %v0_38b14 = load i32, i32* @ebx, align 4
  %v2_38b17 = call i32 @unknown_4ed04(i32 %v0_38b14, i32 %v0_38b10)
  %v0_38b1c = load i32, i32* @ebx, align 4
  %v1_38b1e = icmp eq i32 %v0_38b1c, 0
  br i1 %v1_38b1e, label %dec_label_pc_38b2c, label %dec_label_pc_38b22

dec_label_pc_38b22:                               ; preds = %dec_label_pc_38b0a
  %v1_38b22 = add i32 %v0_38b1c, 24
  br label %dec_label_pc_38b2c

dec_label_pc_38b2c:                               ; preds = %dec_label_pc_38b0a, %dec_label_pc_38b22
  %storemerge = phi i32 [ %v1_38b22, %dec_label_pc_38b22 ], [ 0, %dec_label_pc_38b0a ]
  store i32 %storemerge, i32* @eax, align 4
  %v0_38b2c = load i32, i32* @ebp, align 4
  %v1_38b2c = add i32 %v0_38b2c, -12
  %v2_38b2c = inttoptr i32 %v1_38b2c to i32*
  %v3_38b2c = load i32, i32* %v2_38b2c, align 4
  %v1_38b2f = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v3_38b2f = icmp eq i32 %v1_38b2f, %v3_38b2c
  br i1 %v3_38b2f, label %bb, label %dec_label_pc_38b38

bb:                                               ; preds = %dec_label_pc_38b2c
  %v1_38b36 = call i32 @function_38b53()
  store i32 %v1_38b36, i32* @eax, align 4
  br label %dec_label_pc_38b38

dec_label_pc_38b38:                               ; preds = %bb, %dec_label_pc_38b2c
  %v0_38b38 = call i32 @function_38b4e()
  ret i32 %v0_38b38

; uselistorder directives
  uselistorder i32 24, { 43, 16, 22, 17, 5, 23, 46, 0, 24, 47, 48, 25, 26, 27, 40, 13, 14, 15, 1, 49, 34, 18, 2, 3, 41, 4, 6, 38, 39, 19, 20, 21, 42, 28, 29, 30, 31, 9, 45, 32, 33, 50, 51, 35, 36, 37, 10, 7, 8, 44, 11, 12 }
  uselistorder i32* @ebx, { 289, 290, 137, 138, 192, 142, 132, 269, 270, 143, 130, 318, 363, 364, 365, 124, 147, 366, 367, 368, 369, 397, 398, 399, 400, 154, 159, 326, 271, 161, 297, 298, 299, 300, 131, 253, 254, 255, 256, 146, 327, 231, 232, 233, 234, 140, 139, 345, 401, 141, 370, 371, 372, 328, 329, 346, 347, 235, 236, 294, 160, 123, 169, 17, 151, 165, 237, 238, 167, 257, 258, 259, 330, 162, 373, 374, 225, 171, 172, 173, 348, 349, 350, 351, 305, 260, 261, 375, 168, 376, 377, 378, 211, 212, 213, 170, 352, 353, 214, 215, 25, 26, 184, 216, 217, 218, 125, 164, 331, 332, 185, 186, 187, 188, 163, 166, 354, 379, 380, 206, 1, 381, 306, 307, 308, 176, 177, 174, 175, 178, 179, 180, 181, 309, 310, 311, 182, 355, 319, 320, 356, 357, 189, 312, 202, 203, 204, 199, 200, 201, 382, 205, 383, 2, 3, 4, 5, 195, 193, 209, 196, 197, 198, 126, 127, 128, 129, 133, 134, 135, 136, 220, 221, 239, 6, 7, 240, 241, 242, 243, 244, 245, 272, 273, 274, 275, 276, 277, 278, 183, 8, 9, 283, 291, 333, 334, 335, 336, 384, 385, 386, 387, 388, 389, 144, 145, 148, 149, 150, 152, 153, 402, 155, 156, 157, 158, 337, 301, 302, 262, 10, 11, 263, 264, 12, 13, 207, 246, 247, 248, 208, 15, 14, 16, 18, 358, 359, 360, 19, 20, 390, 391, 392, 393, 265, 266, 267, 268, 313, 314, 338, 279, 361, 21, 22, 23, 24, 210, 27, 219, 28, 29, 30, 31, 321, 322, 323, 190, 191, 194, 32, 33, 35, 34, 36, 0, 224, 222, 223, 38, 37, 226, 230, 41, 39, 40, 42, 227, 228, 229, 249, 43, 250, 251, 252, 45, 44, 47, 46, 48, 280, 281, 282, 51, 49, 50, 52, 284, 285, 286, 53, 54, 287, 288, 57, 55, 56, 58, 292, 293, 295, 296, 303, 304, 315, 316, 317, 59, 60, 324, 61, 325, 339, 62, 63, 64, 65, 66, 340, 343, 341, 342, 344, 362, 394, 67, 395, 396, 403, 68, 70, 69, 71, 73, 72, 74, 75, 76, 77, 78, 90, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 404, 405, 406, 407, 408, 409, 410, 411, 412, 122 }
  uselistorder i32 -1, { 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 232, 67, 68, 69, 0, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 236, 120, 121, 223, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 224, 225, 133, 134, 135, 136, 137, 138, 237, 139, 140, 5, 141, 142, 143, 144, 145, 238, 239, 226, 146, 147, 148, 149, 150, 1, 2, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 227, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 6, 228, 7, 229, 179, 180, 181, 182, 183, 184, 185, 186, 230, 231, 3, 187, 188, 189, 190, 191, 192, 193, 8, 9, 10, 235, 233, 234, 194, 197, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 4, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222 }
  uselistorder i32 -465204285, { 1, 0 }
  uselistorder i32* @ecx, { 173, 24, 110, 216, 176, 22, 195, 196, 197, 217, 218, 219, 38, 39, 40, 153, 154, 155, 156, 41, 157, 158, 159, 198, 199, 42, 44, 27, 191, 8, 30, 31, 48, 49, 50, 200, 241, 242, 243, 12, 225, 226, 201, 202, 203, 245, 246, 244, 247, 53, 54, 55, 0, 19, 20, 21, 56, 57, 37, 5, 59, 13, 60, 64, 204, 160, 183, 134, 177, 178, 179, 180, 181, 182, 14, 68, 69, 16, 17, 18, 70, 71, 72, 205, 206, 118, 77, 51, 52, 135, 136, 137, 207, 29, 248, 208, 209, 26, 220, 249, 46, 47, 3, 138, 36, 210, 84, 221, 139, 166, 61, 62, 167, 168, 63, 65, 66, 67, 6, 58, 79, 76, 140, 141, 142, 85, 145, 146, 147, 211, 7, 73, 74, 161, 162, 163, 227, 228, 89, 90, 1, 91, 95, 2, 148, 81, 82, 80, 222, 229, 9, 230, 231, 92, 93, 94, 223, 224, 87, 10, 232, 113, 86, 104, 130, 131, 132, 128, 129, 25, 133, 105, 106, 107, 108, 96, 233, 75, 83, 194, 192, 123, 124, 234, 111, 32, 184, 33, 34, 35, 88, 98, 99, 185, 171, 172, 100, 101, 109, 102, 103, 186, 119, 120, 112, 114, 115, 116, 117, 11, 15, 169, 4, 23, 28, 143, 170, 164, 165, 174, 187, 193, 212, 43, 45, 235, 236, 237, 175, 213, 214, 250, 238, 239, 125, 78, 144, 251, 252, 126, 121, 122, 240, 149, 150, 151, 152, 188, 97, 215, 127, 189, 190 }
  uselistorder label %dec_label_pc_38b2c, { 1, 0 }
}

define i32 @function_38b4e() local_unnamed_addr {
dec_label_pc_38b4e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_38b53() local_unnamed_addr {
dec_label_pc_38b53:
  %v0_38b59 = load i32, i32* @eax, align 4
  ret i32 %v0_38b59
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_38b5a:
  %v4_38b5a = add i32 %arg1, -24
  %v1_38b5f = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_38b5a)
  ret i32 %v1_38b5f

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 -24, { 19, 20, 0, 70, 1, 80, 81, 82, 83, 79, 84, 99, 100, 9, 24, 21, 22, 10, 106, 107, 2, 63, 69, 94, 11, 95, 85, 25, 3, 35, 36, 32, 33, 34, 96, 97, 98, 60, 61, 4, 38, 77, 78, 73, 74, 75, 76, 12, 45, 46, 47, 48, 5, 49, 6, 50, 40, 41, 42, 51, 26, 39, 52, 53, 54, 93, 72, 58, 59, 13, 55, 56, 57, 27, 37, 23, 43, 44, 71, 86, 87, 7, 28, 14, 15, 62, 29, 30, 16, 17, 31, 8, 64, 65, 66, 67, 68, 18, 88, 89, 90, 91, 92, 101, 102, 103, 104, 105 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_38b62:
  %v16_38b67 = load i32, i32* @eax, align 4
  ret i32 %v16_38b67
}

define i32 @function_38b6a(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b6a:
  %v0_38b6a = load i32, i32* @ebp, align 4
  %v1_38b6a = add i32 %v0_38b6a, 8
  %v2_38b6a = inttoptr i32 %v1_38b6a to i32*
  %v3_38b6a = load i32, i32* %v2_38b6a, align 4
  %v2_38b6d = add i32 %v0_38b6a, -28
  %v3_38b6d = inttoptr i32 %v2_38b6d to i32*
  store i32 %v3_38b6a, i32* %v3_38b6d, align 4
  %v0_38b70 = load i32, i32* inttoptr (i32 20 to i32*), align 4
  %v1_38b76 = load i32, i32* @ebp, align 4
  %v2_38b76 = add i32 %v1_38b76, -12
  %v3_38b76 = inttoptr i32 %v2_38b76 to i32*
  store i32 %v0_38b70, i32* %v3_38b76, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 -12, { 342, 343, 63, 237, 59, 19, 60, 370, 371, 372, 373, 81, 82, 61, 83, 84, 392, 393, 394, 85, 86, 87, 88, 89, 90, 64, 65, 91, 92, 322, 323, 344, 345, 346, 324, 93, 32, 374, 375, 94, 95, 96, 97, 98, 99, 100, 101, 102, 52, 103, 104, 71, 72, 403, 404, 33, 405, 406, 362, 407, 105, 106, 109, 110, 74, 75, 114, 115, 121, 122, 123, 124, 376, 125, 435, 80, 363, 364, 116, 408, 409, 50, 410, 411, 412, 377, 378, 111, 436, 437, 438, 20, 439, 449, 112, 450, 451, 21, 1, 134, 135, 136, 413, 58, 138, 139, 140, 141, 142, 143, 144, 145, 53, 150, 316, 151, 154, 22, 379, 146, 253, 254, 255, 256, 257, 454, 155, 157, 23, 117, 118, 41, 162, 163, 440, 441, 442, 443, 73, 444, 380, 119, 42, 43, 137, 306, 307, 24, 165, 166, 168, 169, 248, 249, 331, 332, 333, 147, 148, 334, 25, 152, 153, 348, 149, 29, 30, 186, 184, 34, 35, 69, 308, 309, 310, 175, 176, 381, 179, 180, 181, 317, 382, 383, 164, 156, 158, 159, 2, 414, 415, 455, 456, 190, 297, 303, 325, 326, 416, 417, 418, 419, 420, 311, 192, 193, 194, 195, 200, 421, 171, 395, 396, 397, 349, 350, 318, 174, 351, 203, 204, 384, 385, 319, 201, 352, 353, 398, 188, 189, 335, 182, 39, 40, 422, 287, 288, 289, 196, 197, 198, 113, 277, 327, 328, 320, 423, 424, 187, 399, 400, 44, 425, 243, 244, 177, 178, 290, 207, 7, 45, 46, 47, 48, 49, 183, 70, 291, 292, 293, 66, 160, 222, 386, 224, 225, 26, 57, 27, 387, 202, 426, 427, 428, 172, 173, 368, 365, 278, 429, 354, 205, 241, 28, 280, 281, 206, 208, 209, 191, 210, 211, 355, 430, 340, 3, 31, 212, 213, 214, 215, 216, 217, 36, 37, 107, 108, 223, 38, 227, 228, 126, 226, 231, 127, 128, 129, 130, 445, 131, 132, 133, 229, 230, 232, 401, 366, 235, 236, 220, 221, 367, 356, 357, 170, 258, 431, 264, 265, 266, 267, 358, 359, 238, 360, 239, 240, 242, 245, 246, 250, 271, 273, 247, 274, 275, 276, 51, 54, 55, 56, 336, 337, 338, 62, 67, 68, 76, 77, 78, 79, 298, 339, 329, 218, 341, 347, 120, 0, 452, 388, 259, 261, 262, 268, 161, 312, 389, 167, 270, 185, 4, 263, 304, 432, 302, 199, 390, 279, 433, 283, 284, 285, 286, 5, 282, 6, 8, 9, 10, 11, 446, 12, 13, 219, 14, 15, 16, 17, 233, 234, 361, 251, 252, 260, 269, 272, 294, 295, 296, 299, 300, 301, 305, 313, 314, 315, 321, 330, 369, 391, 402, 434, 447, 448, 453, 18 }
  uselistorder i32 20, { 110, 68, 30, 106, 58, 69, 59, 60, 31, 32, 33, 70, 71, 113, 118, 119, 72, 47, 48, 73, 74, 0, 1, 76, 63, 111, 95, 2, 102, 3, 4, 34, 5, 49, 50, 51, 52, 25, 53, 75, 9, 6, 104, 114, 85, 54, 112, 115, 105, 86, 55, 82, 56, 89, 100, 90, 35, 91, 57, 80, 81, 10, 11, 12, 13, 14, 15, 16, 17, 18, 88, 19, 107, 20, 108, 61, 62, 92, 93, 94, 64, 21, 65, 66, 67, 22, 23, 24, 77, 78, 79, 38, 96, 97, 98, 99, 83, 84, 116, 117, 87, 39, 40, 41, 42, 43, 7, 44, 101, 103, 109, 8, 26, 45, 46, 27, 28, 29, 120, 36, 37 }
  uselistorder i32* inttoptr (i32 20 to i32*), { 384, 385, 98, 271, 93, 22, 94, 411, 412, 413, 112, 113, 95, 114, 23, 433, 434, 115, 116, 117, 118, 99, 24, 119, 120, 363, 364, 25, 386, 26, 387, 365, 121, 65, 414, 122, 123, 124, 27, 125, 126, 127, 88, 28, 128, 129, 103, 447, 448, 66, 449, 450, 404, 451, 130, 131, 133, 71, 105, 138, 139, 140, 145, 146, 147, 415, 148, 481, 111, 405, 141, 452, 453, 154, 454, 455, 416, 134, 482, 483, 484, 29, 485, 30, 496, 497, 498, 160, 31, 0, 32, 33, 161, 162, 456, 164, 165, 166, 34, 167, 168, 169, 170, 171, 173, 174, 417, 178, 390, 35, 181, 344, 357, 182, 185, 36, 418, 172, 291, 292, 293, 37, 294, 295, 500, 186, 189, 38, 366, 142, 143, 78, 196, 197, 198, 419, 486, 487, 488, 489, 104, 490, 39, 420, 491, 144, 457, 1, 40, 435, 135, 41, 79, 80, 163, 346, 42, 347, 43, 44, 201, 202, 204, 205, 286, 287, 371, 45, 372, 373, 175, 176, 374, 46, 47, 183, 184, 389, 179, 180, 61, 62, 177, 223, 221, 67, 69, 501, 2, 348, 349, 350, 351, 213, 214, 421, 216, 217, 218, 358, 48, 422, 423, 199, 187, 188, 190, 191, 49, 3, 458, 459, 502, 229, 334, 342, 367, 460, 461, 462, 463, 464, 352, 353, 50, 231, 232, 233, 109, 238, 465, 207, 436, 437, 438, 391, 359, 51, 241, 210, 211, 392, 242, 243, 424, 425, 360, 239, 52, 393, 439, 440, 225, 226, 466, 375, 53, 219, 73, 74, 467, 324, 325, 54, 326, 234, 235, 236, 136, 137, 314, 368, 369, 361, 468, 469, 441, 224, 442, 443, 83, 283, 55, 215, 327, 246, 9, 84, 85, 86, 193, 470, 56, 220, 57, 102, 328, 194, 259, 426, 427, 261, 262, 58, 90, 91, 59, 471, 227, 428, 240, 472, 473, 208, 209, 409, 97, 406, 315, 444, 474, 200, 394, 244, 212, 276, 60, 317, 245, 247, 248, 230, 249, 250, 395, 475, 381, 382, 4, 63, 251, 252, 253, 64, 254, 68, 70, 132, 260, 72, 264, 192, 263, 149, 150, 151, 152, 153, 492, 155, 156, 157, 265, 266, 158, 445, 407, 269, 270, 257, 258, 408, 396, 397, 206, 296, 75, 476, 302, 76, 303, 304, 77, 332, 398, 399, 272, 400, 273, 274, 277, 284, 288, 309, 81, 311, 285, 82, 312, 313, 87, 89, 92, 376, 377, 378, 96, 100, 101, 106, 107, 108, 110, 335, 379, 380, 255, 383, 388, 159, 429, 297, 299, 300, 305, 195, 430, 5, 203, 307, 308, 222, 6, 301, 228, 343, 477, 339, 237, 431, 316, 478, 319, 320, 321, 322, 7, 318, 323, 8, 10, 11, 12, 13, 493, 14, 15, 16, 256, 17, 18, 19, 20, 267, 268, 401, 402, 479, 403, 275, 278, 279, 280, 281, 282, 289, 290, 298, 306, 310, 329, 330, 331, 333, 336, 337, 338, 340, 341, 345, 354, 355, 356, 362, 370, 410, 432, 446, 480, 494, 495, 499, 21 }
  uselistorder i32 -28, { 314, 0, 1, 2, 3, 80, 354, 355, 356, 88, 89, 90, 91, 92, 376, 377, 378, 379, 93, 94, 95, 96, 81, 97, 98, 301, 315, 316, 58, 357, 390, 391, 337, 338, 392, 393, 394, 60, 101, 102, 103, 105, 106, 358, 107, 87, 339, 395, 396, 397, 398, 399, 361, 362, 363, 364, 359, 360, 365, 411, 412, 413, 414, 423, 119, 400, 120, 121, 122, 123, 125, 126, 366, 128, 320, 76, 74, 75, 131, 296, 297, 132, 133, 135, 136, 124, 254, 255, 256, 257, 258, 139, 302, 104, 144, 145, 146, 367, 415, 85, 416, 368, 417, 401, 6, 44, 380, 100, 67, 284, 45, 285, 46, 148, 253, 307, 308, 127, 309, 134, 317, 318, 319, 129, 130, 57, 166, 165, 59, 425, 7, 286, 287, 288, 289, 290, 158, 159, 160, 161, 163, 298, 299, 369, 137, 138, 140, 8, 9, 10, 11, 402, 426, 281, 303, 403, 404, 405, 406, 291, 175, 173, 174, 176, 177, 178, 86, 184, 381, 382, 383, 321, 322, 187, 156, 157, 323, 188, 189, 190, 370, 371, 185, 324, 384, 385, 168, 310, 311, 12, 61, 62, 63, 64, 65, 277, 278, 179, 180, 181, 269, 304, 305, 306, 300, 407, 167, 386, 387, 68, 69, 249, 162, 208, 209, 210, 25, 26, 27, 28, 70, 71, 72, 73, 164, 83, 84, 82, 141, 142, 143, 47, 48, 231, 372, 233, 77, 78, 186, 408, 149, 150, 151, 152, 153, 154, 155, 353, 343, 344, 345, 346, 347, 348, 349, 351, 350, 352, 340, 270, 388, 325, 192, 193, 49, 50, 51, 52, 53, 54, 55, 56, 271, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 169, 170, 171, 172, 214, 215, 216, 217, 218, 219, 220, 326, 327, 328, 313, 13, 14, 221, 222, 223, 224, 225, 226, 227, 99, 232, 110, 111, 108, 109, 236, 112, 113, 114, 115, 116, 117, 118, 234, 235, 237, 238, 239, 240, 241, 389, 341, 243, 228, 229, 230, 342, 329, 66, 409, 410, 265, 266, 330, 331, 332, 333, 244, 245, 246, 247, 248, 250, 251, 267, 252, 268, 15, 79, 16, 4, 5, 282, 312, 17, 18, 19, 20, 259, 260, 261, 262, 263, 264, 21, 147, 22, 283, 182, 183, 334, 335, 275, 276, 23, 272, 273, 274, 191, 24, 279, 280, 29, 30, 31, 32, 33, 242, 34, 35, 36, 37, 38, 39, 40, 41, 42, 336, 43, 292, 293, 294, 295, 373, 374, 375, 418, 419, 420, 421, 422, 424 }
  uselistorder i32 8, { 203, 21, 22, 106, 107, 223, 224, 108, 109, 110, 9, 111, 23, 24, 58, 226, 209, 66, 100, 101, 113, 114, 115, 227, 25, 26, 0, 122, 123, 127, 27, 129, 130, 10, 215, 28, 29, 112, 30, 31, 32, 33, 34, 35, 36, 145, 1, 142, 74, 75, 76, 37, 38, 39, 40, 154, 41, 93, 2, 42, 43, 44, 136, 45, 228, 229, 166, 143, 144, 46, 47, 48, 49, 50, 51, 52, 152, 153, 151, 53, 54, 156, 148, 149, 155, 55, 157, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 210, 211, 225, 212, 213, 71, 72, 3, 73, 175, 4, 176, 174, 177, 77, 78, 79, 80, 167, 168, 169, 170, 171, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 102, 103, 104, 187, 188, 200, 105, 202, 116, 117, 118, 119, 120, 216, 121, 124, 125, 126, 128, 131, 132, 133, 134, 189, 135, 137, 138, 139, 140, 141, 178, 146, 147, 230, 231, 232, 233, 234, 201, 150, 199, 11, 182, 5, 158, 159, 160, 161, 162, 163, 164, 165, 14, 15, 205, 206, 207, 208, 6, 7, 8, 172, 173, 179, 180, 181, 183, 185, 184, 186, 191, 192, 190, 194, 195, 196, 197, 193, 198, 204, 214, 222, 217, 218, 219, 220, 221, 16, 17, 18, 19, 20, 235, 12, 13 }
  uselistorder i32* @ebp, {}
}

define i32 @function_38b88(i32 %arg1) local_unnamed_addr {
dec_label_pc_38b88:
  %v0_38b88 = load i32, i32* @eax, align 4
  ret i32 %v0_38b88
}

declare i32 @unknown_38bca(i32, i32) local_unnamed_addr

define i32 @function_38bde(i32 %arg1) local_unnamed_addr {
dec_label_pc_38bde:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_38c0c(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38d26(i32, i32) local_unnamed_addr

declare i32 @unknown_38df0(i32, i32) local_unnamed_addr

declare i32 @unknown_38e6c(i32, i32) local_unnamed_addr

declare i32 @unknown_38e6e(i32) local_unnamed_addr

declare i32 @unknown_38f43(i32) local_unnamed_addr

declare i32 @unknown_38f6a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_38f6e(i32) local_unnamed_addr

declare i32 @unknown_38f7c(i32, i32) local_unnamed_addr

declare i32 @unknown_38fa5(i32, i32) local_unnamed_addr

declare i32 @unknown_39042(i32) local_unnamed_addr

declare i32 @unknown_390a2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_390a5(i32, i32) local_unnamed_addr

declare i32 @unknown_390f6(i32) local_unnamed_addr

declare i32 @unknown_3915a(i32) local_unnamed_addr

declare i32 @unknown_3918a(i32) local_unnamed_addr

declare i32 @unknown_39190(i32) local_unnamed_addr

declare i32 @unknown_39294(i32) local_unnamed_addr

declare i32 @unknown_392b8(i32) local_unnamed_addr

declare i32 @unknown_392ca(i32, i32) local_unnamed_addr

declare i32 @unknown_39338(i32, i32) local_unnamed_addr

declare i32 @unknown_39370(i32) local_unnamed_addr

declare i32 @unknown_393a0() local_unnamed_addr

declare i32 @unknown_393b8(i32, i32) local_unnamed_addr

declare i32 @unknown_393f2(i32) local_unnamed_addr

declare i32 @unknown_3943a(i32) local_unnamed_addr

declare i32 @unknown_3947a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39496(i32, i32) local_unnamed_addr

declare i32 @unknown_394fc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39666(i32, i32) local_unnamed_addr

declare i32 @unknown_396d0(i32) local_unnamed_addr

declare i32 @unknown_39812(i32, i32) local_unnamed_addr

declare i32 @unknown_3986c(i32) local_unnamed_addr

declare i32 @unknown_399ba(i32) local_unnamed_addr

declare i32 @unknown_39a26(i32) local_unnamed_addr

declare i32 @unknown_39a46(i32, i32) local_unnamed_addr

declare i32 @unknown_39ab0(i32) local_unnamed_addr

declare i32 @unknown_39add(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39b9e(i32) local_unnamed_addr

declare i32 @unknown_39be0(i32) local_unnamed_addr

declare i32 @unknown_39bf5(i32, i32) local_unnamed_addr

declare i32 @unknown_39c95(i32) local_unnamed_addr

declare i32 @unknown_39cc2(i32) local_unnamed_addr

declare i32 @unknown_39cef(i32, i32) local_unnamed_addr

declare i32 @unknown_39d0f(i32) local_unnamed_addr

declare i32 @unknown_39d3a(i32, i32) local_unnamed_addr

declare i32 @unknown_39d3c(i32) local_unnamed_addr

declare i32 @unknown_39db4(i32, i32) local_unnamed_addr

declare i32 @unknown_39df9(i32, i32) local_unnamed_addr

declare i32 @unknown_39e18(i32, i32) local_unnamed_addr

declare i32 @unknown_39eb8(i32) local_unnamed_addr

declare i32 @unknown_39ebd(i32) local_unnamed_addr

declare i32 @unknown_39eea(i32, i32) local_unnamed_addr

declare i32 @unknown_39f1c(i32) local_unnamed_addr

declare i32 @unknown_39f42(i32) local_unnamed_addr

declare i32 @unknown_39f5f(i32) local_unnamed_addr

declare i32 @unknown_39f6f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_39f9d(i32) local_unnamed_addr

declare i32 @unknown_3a010(i32, i32) local_unnamed_addr

declare i32 @unknown_3a01a(i32) local_unnamed_addr

declare i32 @unknown_3a08d(i32, i32) local_unnamed_addr

declare i32 @unknown_3a0a4(i32, i32) local_unnamed_addr

declare i32 @unknown_3a10c(i32) local_unnamed_addr

declare i32 @unknown_3a124(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a139(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a190(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a262(i32, i32) local_unnamed_addr

declare i32 @unknown_3a3f0(i32, i32) local_unnamed_addr

declare i32 @unknown_3a4a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3a588(i32) local_unnamed_addr

declare i32 @unknown_3a5ce(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a688(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a6dd(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a76b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a7b3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3a7c2(i32, i32) local_unnamed_addr

declare i32 @unknown_3a819(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ab06(i32) local_unnamed_addr

declare i32 @unknown_3ab72(i32) local_unnamed_addr

declare i32 @unknown_3abde(i32, i32) local_unnamed_addr

declare i32 @unknown_3ac5c(i32) local_unnamed_addr

declare i32 @unknown_3acac(i32) local_unnamed_addr

declare i32 @unknown_3acf9(i32) local_unnamed_addr

declare i32 @unknown_3ad51(i32, i32) local_unnamed_addr

declare i32 @unknown_3adf1(i32) local_unnamed_addr

declare i32 @unknown_3ae1e(i32) local_unnamed_addr

declare i32 @unknown_3ae40(i32) local_unnamed_addr

declare i32 @unknown_3ae4b(i32, i32) local_unnamed_addr

declare i32 @unknown_3ae52(i32, i32) local_unnamed_addr

declare i32 @unknown_3ae6b(i32) local_unnamed_addr

declare i32 @unknown_3ae6c(i32, i32) local_unnamed_addr

declare i32 @unknown_3ae96(i32, i32) local_unnamed_addr

declare i32 @unknown_3ae98(i32) local_unnamed_addr

declare i32 @unknown_3aebc(i32, i32) local_unnamed_addr

declare i32 @unknown_3af10(i32, i32) local_unnamed_addr

declare i32 @unknown_3af55(i32, i32) local_unnamed_addr

declare i32 @unknown_3b019(i32) local_unnamed_addr

declare i32 @unknown_3b078(i32) local_unnamed_addr

declare i32 @unknown_3b0a5(i32) local_unnamed_addr

declare i32 @unknown_3b0b8(i32) local_unnamed_addr

declare i32 @unknown_3b0bb(i32) local_unnamed_addr

declare i32 @unknown_3b0e5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b106(i32) local_unnamed_addr

declare i32 @unknown_3b12e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b13c(i32) local_unnamed_addr

declare i32 @unknown_3b234() local_unnamed_addr

declare i32 @unknown_3b3e6(i32) local_unnamed_addr

declare i32 @unknown_3b476(i32) local_unnamed_addr

declare i32 @unknown_3b489() local_unnamed_addr

declare i32 @unknown_3b4e1() local_unnamed_addr

declare i32 @unknown_3b4e2(i32) local_unnamed_addr

declare i32 @unknown_3b54e(i32, i32) local_unnamed_addr

declare i32 @unknown_3b5a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3b5ba() local_unnamed_addr

declare i32 @unknown_3b5cc(i32) local_unnamed_addr

declare i32 @unknown_3b5d6() local_unnamed_addr

declare i32 @unknown_3b5f0(i32) local_unnamed_addr

declare i32 @unknown_3b669(i32) local_unnamed_addr

declare i32 @unknown_3b6c0() local_unnamed_addr

declare i32 @unknown_3b6c1(i32, i32) local_unnamed_addr

declare i32 @unknown_3b6f0(i32) local_unnamed_addr

declare i32 @unknown_3b736(i32, i32) local_unnamed_addr

declare i32 @unknown_3b761(i32) local_unnamed_addr

declare i32 @unknown_3b78e(i32) local_unnamed_addr

declare i32 @unknown_3b7bb(i32, i32) local_unnamed_addr

declare i32 @unknown_3b7da(i32) local_unnamed_addr

declare i32 @unknown_3b7db(i32) local_unnamed_addr

declare i32 @unknown_3b806(i32, i32) local_unnamed_addr

declare i32 @unknown_3b808(i32) local_unnamed_addr

declare i32 @unknown_3b82b() local_unnamed_addr

declare i32 @unknown_3b880(i32, i32) local_unnamed_addr

declare i32 @unknown_3b887() local_unnamed_addr

declare i32 @unknown_3b88c(i32) local_unnamed_addr

declare i32 @unknown_3b8b9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3b8c5(i32, i32) local_unnamed_addr

declare i32 @unknown_3b989(i32) local_unnamed_addr

declare i32 @unknown_3b9b6(i32, i32) local_unnamed_addr

declare i32 @unknown_3b9e1(i32, i32) local_unnamed_addr

declare i32 @unknown_3b9e8(i32) local_unnamed_addr

declare i32 @unknown_3ba2b(i32) local_unnamed_addr

declare i32 @unknown_3ba42(i32) local_unnamed_addr

declare i32 @unknown_3ba55(i32) local_unnamed_addr

declare i32 @unknown_3bad8(i32) local_unnamed_addr

declare i32 @unknown_3baec(i32, i32) local_unnamed_addr

declare i32 @unknown_3bb4e(i32, i32) local_unnamed_addr

declare i32 @unknown_3bb98(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3bc84(i32, i32) local_unnamed_addr

declare i32 @unknown_3bdaa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3be02(i32, i32) local_unnamed_addr

declare i32 @unknown_3be4c(i32) local_unnamed_addr

declare i32 @unknown_3be76(i32) local_unnamed_addr

declare i32 @unknown_3be7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3bec6(i32, i32) local_unnamed_addr

declare i32 @unknown_3bf10(i32, i32) local_unnamed_addr

declare i32 @unknown_3bf50() local_unnamed_addr

declare i32 @unknown_3bfcc() local_unnamed_addr

declare i32 @unknown_3c134(i32) local_unnamed_addr

declare i32 @unknown_3c1a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3c248(i32, i32) local_unnamed_addr

declare i32 @unknown_3c273(i32) local_unnamed_addr

declare i32 @unknown_3c2de(i32) local_unnamed_addr

declare i32 @unknown_3c336(i32, i32) local_unnamed_addr

declare i32 @unknown_3c39d(i32) local_unnamed_addr

declare i32 @unknown_3c3d6(i32) local_unnamed_addr

declare i32 @unknown_3c403(i32) local_unnamed_addr

declare i32 @unknown_3c430(i32, i32) local_unnamed_addr

declare i32 @unknown_3c450(i32) local_unnamed_addr

declare i32 @unknown_3c47b(i32, i32) local_unnamed_addr

declare i32 @unknown_3c47d(i32) local_unnamed_addr

declare i32 @unknown_3c4f5(i32, i32) local_unnamed_addr

declare i32 @unknown_3c53a(i32, i32) local_unnamed_addr

declare i32 @unknown_3c546(i32) local_unnamed_addr

declare i32 @unknown_3c5fe(i32) local_unnamed_addr

declare i32 @unknown_3c62b(i32, i32) local_unnamed_addr

declare i32 @unknown_3c630(i32) local_unnamed_addr

declare i32 @unknown_3c65d(i32) local_unnamed_addr

declare i32 @unknown_3c6a0(i32) local_unnamed_addr

declare i32 @unknown_3c6de(i32) local_unnamed_addr

declare i32 @unknown_3c75b(i32) local_unnamed_addr

declare i32 @unknown_3c8a8(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ca15(i32) local_unnamed_addr

declare i32 @unknown_3cade(i32, i32) local_unnamed_addr

declare i32 @unknown_3cc4a(i32, i32) local_unnamed_addr

declare i32 @unknown_3cd24(i32) local_unnamed_addr

declare i32 @unknown_3ce1e(i32, i32) local_unnamed_addr

declare i32 @unknown_3cf8a(i32, i32) local_unnamed_addr

declare i32 @unknown_3d012(i32) local_unnamed_addr

declare i32 @unknown_3d01e(i32) local_unnamed_addr

declare i32 @unknown_3d108(i32) local_unnamed_addr

declare i32 @unknown_3d1ee(i32) local_unnamed_addr

declare i32 @unknown_3d29d(i32, i32) local_unnamed_addr

declare i32 @unknown_3d2e4(i32) local_unnamed_addr

declare i32 @unknown_3d329(i32, i32) local_unnamed_addr

declare i32 @unknown_3d38c(i32) local_unnamed_addr

declare i32 @unknown_3d419(i32, i32) local_unnamed_addr

declare i32 @unknown_3d4f8(i32, i32) local_unnamed_addr

declare i32 @unknown_3d558(i32, i32) local_unnamed_addr

declare i32 @unknown_3d5e0(i32) local_unnamed_addr

declare i32 @unknown_3d5fa(i32) local_unnamed_addr

declare i32 @unknown_3d63a(i32) local_unnamed_addr

declare i32 @unknown_3d649(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d69c(i32, i32) local_unnamed_addr

declare i32 @unknown_3d6e4(i32) local_unnamed_addr

declare i32 @unknown_3d720(i32) local_unnamed_addr

declare i32 @unknown_3d72e(i32) local_unnamed_addr

declare i32 @unknown_3d7bc(i32) local_unnamed_addr

declare i32 @unknown_3d802(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d898(i32, i32) local_unnamed_addr

declare i32 @unknown_3d8e2(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3d96c(i32, i32) local_unnamed_addr

declare i32 @unknown_3d9c6(i32) local_unnamed_addr

declare i32 @unknown_3da02(i32, i32) local_unnamed_addr

declare i32 @unknown_3da8c(i32) local_unnamed_addr

declare i32 @unknown_3dac1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dadc(i32) local_unnamed_addr

declare i32 @unknown_3db99(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dbea() local_unnamed_addr

declare i32 @unknown_3dc3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3dcbc(i32, i32) local_unnamed_addr

declare i32 @unknown_3dce0(i32, i32) local_unnamed_addr

declare i32 @unknown_3dd5e(i32) local_unnamed_addr

declare i32 @unknown_3dd82(i32, i32) local_unnamed_addr

declare i32 @unknown_3de48(i32) local_unnamed_addr

declare i32 @unknown_3de55(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3de62(i32, i32) local_unnamed_addr

declare i32 @unknown_3de74(i32) local_unnamed_addr

declare i32 @unknown_3def0(i32) local_unnamed_addr

declare i32 @unknown_3df20(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3df3c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e0a2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e18b(i32, i32) local_unnamed_addr

declare i32 @unknown_3e195(i32, i32) local_unnamed_addr

declare i32 @unknown_3e198(i32) local_unnamed_addr

declare i32 @unknown_3e20e(i32) local_unnamed_addr

declare i32 @unknown_3e240(i32, i32) local_unnamed_addr

declare i32 @unknown_3e2bc(i32) local_unnamed_addr

declare i32 @unknown_3e2e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e332(i32, i32) local_unnamed_addr

declare i32 @unknown_3e4a2(i32, i32) local_unnamed_addr

declare i32 @unknown_3e584(i32, i32) local_unnamed_addr

declare i32 @unknown_3e597(i32, i32) local_unnamed_addr

declare i32 @unknown_3e5d9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e5f3(i32) local_unnamed_addr

declare i32 @unknown_3e62c(i32, i32) local_unnamed_addr

declare i32 @unknown_3e69c(i32) local_unnamed_addr

declare i32 @unknown_3e6ac(i32, i32) local_unnamed_addr

declare i32 @unknown_3e6c9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e72c(i32, i32) local_unnamed_addr

declare i32 @unknown_3e736(i32, i32) local_unnamed_addr

declare i32 @unknown_3e7ac(i32, i32) local_unnamed_addr

declare i32 @unknown_3e8b5(i32) local_unnamed_addr

declare i32 @unknown_3e964(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3e98c(i32, i32) local_unnamed_addr

declare i32 @unknown_3e98e(i32, i32) local_unnamed_addr

declare i32 @unknown_3e9fe(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ea6e(i32) local_unnamed_addr

declare i32 @unknown_3ea9b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eaf5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eaf6(i32, i32) local_unnamed_addr

declare i32 @unknown_3eb40(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ebb6(i32) local_unnamed_addr

declare i32 @unknown_3ecf8(i32) local_unnamed_addr

declare i32 @unknown_3ed20(i32) local_unnamed_addr

declare i32 @unknown_3ed36(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ed5a(i32, i32) local_unnamed_addr

declare i32 @unknown_3edae(i32, i32) local_unnamed_addr

declare i32 @unknown_3edb6(i32) local_unnamed_addr

declare i32 @unknown_3ee40(i32) local_unnamed_addr

declare i32 @unknown_3ee6d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ee8b(i32, i32) local_unnamed_addr

declare i32 @unknown_3eeab(i32, i32) local_unnamed_addr

declare i32 @unknown_3eec3(i32) local_unnamed_addr

declare i32 @unknown_3eee9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3eef2(i32, i32) local_unnamed_addr

declare i32 @unknown_3ef85(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3ef97(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3efc0(i32, i32) local_unnamed_addr

declare i32 @unknown_3f010(i32) local_unnamed_addr

declare i32 @unknown_3f045(i32, i32) local_unnamed_addr

declare i32 @unknown_3f04e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f108(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f11f(i32, i32) local_unnamed_addr

declare i32 @unknown_3f12c(i32) local_unnamed_addr

declare i32 @unknown_3f1a6(i32, i32) local_unnamed_addr

declare i32 @unknown_3f1e0(i32) local_unnamed_addr

declare i32 @unknown_3f220(i32, i32) local_unnamed_addr

declare i32 @unknown_3f22a(i32) local_unnamed_addr

declare i32 @unknown_3f2bc(i32, i32) local_unnamed_addr

declare i32 @unknown_3f2e8(i32, i32) local_unnamed_addr

declare i32 @unknown_3f321(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f32a(i32, i32) local_unnamed_addr

declare i32 @unknown_3f388(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f414(i32, i32) local_unnamed_addr

declare i32 @unknown_3f416(i32) local_unnamed_addr

declare i32 @unknown_3f45a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f4d4(i32, i32) local_unnamed_addr

declare i32 @unknown_3f50c(i32) local_unnamed_addr

declare i32 @unknown_3f5ce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f73e(i32) local_unnamed_addr

declare i32 @unknown_3f76b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f7b0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f8b8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3f8de(i32) local_unnamed_addr

declare i32 @unknown_3f93e(i32, i32) local_unnamed_addr

declare i32 @unknown_3fa08(i32) local_unnamed_addr

declare i32 @unknown_3faa6(i32) local_unnamed_addr

declare i32 @unknown_3fad3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fb1b(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fc26(i32) local_unnamed_addr

declare i32 @unknown_3fc52(i32, i32) local_unnamed_addr

declare i32 @unknown_3fc92(i32, i32) local_unnamed_addr

declare i32 @unknown_3fcaa(i32) local_unnamed_addr

declare i32 @unknown_3fd54(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_3fd7c(i32) local_unnamed_addr

declare i32 @unknown_3fda6() local_unnamed_addr

declare i32 @unknown_4000e(i32, i32) local_unnamed_addr

declare i32 @unknown_40014(i32, i32) local_unnamed_addr

declare i32 @unknown_4018e(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_405b6(i32) local_unnamed_addr

declare i32 @unknown_405f6(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40670(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40809(i32) local_unnamed_addr

declare i32 @unknown_4083e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_408fc(i32) local_unnamed_addr

declare i32 @unknown_4093a(i32) local_unnamed_addr

declare i32 @unknown_40956(i32) local_unnamed_addr

declare i32 @unknown_40974(i32, i32) local_unnamed_addr

declare i32 @unknown_409f8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40a00() local_unnamed_addr

declare i32 @unknown_40aac(i32, i32) local_unnamed_addr

declare i32 @unknown_40b04(i32, i32) local_unnamed_addr

declare i32 @unknown_40bc6(i32) local_unnamed_addr

declare i32 @unknown_40c4e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_40d5a(i32, i32) local_unnamed_addr

declare i32 @unknown_40ea2(i32, i32) local_unnamed_addr

declare i32 @unknown_40ef2(i32, i32) local_unnamed_addr

declare i32 @unknown_40f1e() local_unnamed_addr

declare i32 @unknown_40f70(i32, i32) local_unnamed_addr

declare i32 @unknown_40faa(i32, i32) local_unnamed_addr

declare i32 @unknown_40ffa(i32, i32) local_unnamed_addr

declare i32 @unknown_410e0(i32, i32) local_unnamed_addr

declare i32 @unknown_41140(i32, i32) local_unnamed_addr

declare i32 @unknown_4123c(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4138a(i32, i32) local_unnamed_addr

declare i32 @unknown_41438(i32, i32) local_unnamed_addr

declare i32 @unknown_414fe(i32, i32) local_unnamed_addr

declare i32 @unknown_4154e(i32, i32) local_unnamed_addr

declare i32 @unknown_4164a(i32) local_unnamed_addr

declare i32 @unknown_4166c(i32) local_unnamed_addr

declare i32 @unknown_4170e(i32) local_unnamed_addr

declare i32 @unknown_4179c(i32) local_unnamed_addr

declare i32 @unknown_41806(i32) local_unnamed_addr

declare i32 @unknown_41945(i32, i32) local_unnamed_addr

declare i32 @unknown_41968(i32) local_unnamed_addr

declare i32 @unknown_41995(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41a52(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41ab8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41b8a(i32, i32) local_unnamed_addr

declare i32 @unknown_41be1(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41cc2(i32) local_unnamed_addr

declare i32 @unknown_41d12(i32) local_unnamed_addr

declare i32 @unknown_41d3f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41d56(i32, i32) local_unnamed_addr

declare i32 @unknown_41ddd(i32) local_unnamed_addr

declare i32 @unknown_41ea9(i32, i32) local_unnamed_addr

declare i32 @unknown_41f5c(i32, i32) local_unnamed_addr

declare i32 @unknown_41fa5(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_41fe3(i32) local_unnamed_addr

declare i32 @unknown_41ff0() local_unnamed_addr

declare i32 @unknown_42068(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4213a(i32, i32) local_unnamed_addr

declare i32 @unknown_4218c(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4226d(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_422a2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_424b2(i32) local_unnamed_addr

declare i32 @unknown_4264a(i32) local_unnamed_addr

declare i32 @unknown_426ca(i32, i32) local_unnamed_addr

declare i32 @unknown_426f6(i32, i32) local_unnamed_addr

declare i32 @unknown_4270e(i32, i32) local_unnamed_addr

declare i32 @unknown_42758(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4282c(i32, i32) local_unnamed_addr

declare i32 @unknown_42847(i32, i32) local_unnamed_addr

declare i32 @unknown_4293e(i32, i32) local_unnamed_addr

declare i32 @unknown_42940(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_42964(i32, i32) local_unnamed_addr

declare i32 @unknown_429ae(i32, i32) local_unnamed_addr

declare i32 @unknown_42afc(i32, i32) local_unnamed_addr

declare i32 @unknown_42b4e(i32, i32) local_unnamed_addr

declare i32 @unknown_42b5c(i32, i32) local_unnamed_addr

declare i32 @unknown_42c50(i32) local_unnamed_addr

declare i32 @unknown_42cf4(i32, i32) local_unnamed_addr

declare i32 @unknown_43266(i32, i32) local_unnamed_addr

declare i32 @unknown_432b0(i32) local_unnamed_addr

declare i32 @unknown_43794(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43950(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43b26(i32) local_unnamed_addr

declare i32 @unknown_43b56(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43b98(i32) local_unnamed_addr

declare i32 @unknown_43c0a(i32, i32) local_unnamed_addr

declare i32 @unknown_43c54(i32) local_unnamed_addr

declare i32 @unknown_43c98(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43ce0(i32, i32) local_unnamed_addr

declare i32 @unknown_43d7a(i32) local_unnamed_addr

declare i32 @unknown_43daa(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43e46(i32, i32) local_unnamed_addr

declare i32 @unknown_43e66(i32, i32) local_unnamed_addr

declare i32 @unknown_43ec8(i32) local_unnamed_addr

declare i32 @unknown_43f3e(i32) local_unnamed_addr

declare i32 @unknown_43f6b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_43fd6(i32, i32) local_unnamed_addr

declare i32 @unknown_43ff0(i32, i32) local_unnamed_addr

declare i32 @unknown_43ff6() local_unnamed_addr

declare i32 @unknown_44004(i32, i32) local_unnamed_addr

declare i32 @unknown_4403a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44072(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44082(i32, i32) local_unnamed_addr

declare i32 @unknown_44155(i32) local_unnamed_addr

declare i32 @unknown_44185(i32) local_unnamed_addr

declare i32 @unknown_44206(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4421e(i32, i32) local_unnamed_addr

declare i32 @unknown_44232(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4432e() local_unnamed_addr

declare i32 @unknown_443a5(i32) local_unnamed_addr

declare i32 @unknown_443ba(i32) local_unnamed_addr

declare i32 @unknown_443d5(i32) local_unnamed_addr

declare i32 @unknown_44406(i32, i32) local_unnamed_addr

declare i32 @unknown_44434(i32) local_unnamed_addr

declare i32 @unknown_4443e(i32, i32) local_unnamed_addr

declare i32 @unknown_44488(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4458a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4459c(i32, i32) local_unnamed_addr

declare i32 @unknown_445d6(i32) local_unnamed_addr

declare i32 @unknown_44661(i32) local_unnamed_addr

declare i32 @unknown_44691(i32) local_unnamed_addr

declare i32 @unknown_44820() local_unnamed_addr

declare i32 @unknown_44866(i32) local_unnamed_addr

declare i32 @unknown_4489b() local_unnamed_addr

declare i32 @unknown_4490e(i32) local_unnamed_addr

declare i32 @unknown_4496e(i32, i32) local_unnamed_addr

declare i32 @unknown_449c2(i32, i32) local_unnamed_addr

declare i32 @unknown_44b48(i32) local_unnamed_addr

declare i32 @unknown_44b9d(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44bf0(i32) local_unnamed_addr

declare i32 @unknown_44c2c(i32, i32) local_unnamed_addr

declare i32 @unknown_44c50(i32) local_unnamed_addr

declare i32 @unknown_44c64(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44c80(i32) local_unnamed_addr

declare i32 @unknown_44ca2(i32) local_unnamed_addr

declare i32 @unknown_44cb0(i32, i32) local_unnamed_addr

declare i32 @unknown_44cda(i32) local_unnamed_addr

declare i32 @unknown_44d8a(i32) local_unnamed_addr

declare i32 @unknown_44dae(i32) local_unnamed_addr

declare i32 @unknown_44dba(i32) local_unnamed_addr

declare i32 @unknown_44e88(i32) local_unnamed_addr

declare i32 @unknown_44e92(i32, i32) local_unnamed_addr

declare i32 @unknown_44e99(i32, i32) local_unnamed_addr

declare i32 @unknown_44eb8(i32, i32) local_unnamed_addr

declare i32 @unknown_44eeb(i32) local_unnamed_addr

declare i32 @unknown_44f30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_44f78(i32, i32) local_unnamed_addr

declare i32 @unknown_44fb0(i32, i32) local_unnamed_addr

declare i32 @unknown_44ffa(i32) local_unnamed_addr

declare i32 @unknown_45045(i32, i32) local_unnamed_addr

declare i32 @unknown_450ba(i32, i32) local_unnamed_addr

declare i32 @unknown_450fc(i32) local_unnamed_addr

declare i32 @unknown_45148(i32) local_unnamed_addr

declare i32 @unknown_45187() local_unnamed_addr

declare i32 @unknown_4519c(i32, i32) local_unnamed_addr

declare i32 @unknown_4523b(i32, i32) local_unnamed_addr

declare i32 @unknown_453d0(i32, i32) local_unnamed_addr

declare i32 @unknown_45408(i32) local_unnamed_addr

declare i32 @unknown_45437(i32, i32) local_unnamed_addr

declare i32 @unknown_4548c(i32, i32) local_unnamed_addr

declare i32 @unknown_45577(i32, i32) local_unnamed_addr

declare i32 @unknown_4563b(i32, i32) local_unnamed_addr

declare i32 @unknown_457de(i32, i32) local_unnamed_addr

declare i32 @unknown_45816(i32, i32) local_unnamed_addr

declare i32 @unknown_4589c(i32, i32) local_unnamed_addr

declare i32 @unknown_458c5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_459ce(i32) local_unnamed_addr

declare i32 @unknown_459f3(i32) local_unnamed_addr

declare i32 @unknown_459fe(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45b16(i32, i32) local_unnamed_addr

declare i32 @unknown_45b28(i32) local_unnamed_addr

declare i32 @unknown_45b4e(i32) local_unnamed_addr

declare i32 @unknown_45b5a(i32, i32) local_unnamed_addr

declare i32 @unknown_45ba6(i32, i32) local_unnamed_addr

declare i32 @unknown_45bae(i32, i32) local_unnamed_addr

declare i32 @unknown_45ca5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45cae(i32, i32) local_unnamed_addr

declare i32 @unknown_45d07(i32) local_unnamed_addr

declare i32 @unknown_45d0c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45dde(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_45df8(i32) local_unnamed_addr

declare i32 @unknown_45e07(i32) local_unnamed_addr

declare i32 @unknown_45e34(i32, i32) local_unnamed_addr

declare i32 @unknown_45e78(i32, i32) local_unnamed_addr

declare i32 @unknown_45ecc(i32, i32) local_unnamed_addr

declare i32 @unknown_46016(i32) local_unnamed_addr

declare i32 @unknown_4601e(i32) local_unnamed_addr

declare i32 @unknown_46077(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_460de(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_460fb(i32, i32) local_unnamed_addr

declare i32 @unknown_461b0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_461d0(i32, i32) local_unnamed_addr

declare i32 @unknown_46240(i32) local_unnamed_addr

declare i32 @unknown_462ae(i32) local_unnamed_addr

declare i32 @unknown_46312(i32) local_unnamed_addr

declare i32 @unknown_4631c(i32) local_unnamed_addr

declare i32 @unknown_46347(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46462(i32) local_unnamed_addr

declare i32 @unknown_4655e(i32) local_unnamed_addr

declare i32 @unknown_4658b() local_unnamed_addr

declare i32 @unknown_465f2() local_unnamed_addr

declare i32 @unknown_46638(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46678(i32) local_unnamed_addr

declare i32 @unknown_4670a(i32, i32) local_unnamed_addr

declare i32 @unknown_46751(i32, i32) local_unnamed_addr

declare i32 @unknown_467b2(i32, i32) local_unnamed_addr

declare i32 @unknown_46809(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46866(i32, i32) local_unnamed_addr

declare i32 @unknown_468a2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4694e(i32) local_unnamed_addr

declare i32 @unknown_46a98(i32) local_unnamed_addr

declare i32 @unknown_46c0e(i32, i32) local_unnamed_addr

declare i32 @unknown_46c26(i32) local_unnamed_addr

declare i32 @unknown_46c6e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_46cc8(i32) local_unnamed_addr

declare i32 @unknown_46df6(i32, i32) local_unnamed_addr

declare i32 @unknown_46e3c(i32, i32) local_unnamed_addr

declare i32 @unknown_46ec7(i32, i32) local_unnamed_addr

declare i32 @unknown_46eff(i32) local_unnamed_addr

declare i32 @unknown_46f2e(i32, i32) local_unnamed_addr

declare i32 @unknown_47057(i32, i32) local_unnamed_addr

declare i32 @unknown_47131(i32, i32) local_unnamed_addr

declare i32 @unknown_4719e(i32) local_unnamed_addr

declare i32 @unknown_472b0(i32, i32) local_unnamed_addr

declare i32 @unknown_472e8(i32, i32) local_unnamed_addr

declare i32 @unknown_47416(i32) local_unnamed_addr

declare i32 @unknown_47443(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_474aa(i32) local_unnamed_addr

declare i32 @unknown_474da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47552(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_475ac(i32, i32) local_unnamed_addr

declare i32 @unknown_475c3(i32) local_unnamed_addr

declare i32 @unknown_475f3(i32, i32) local_unnamed_addr

declare i32 @unknown_475fd(i32) local_unnamed_addr

declare i32 @unknown_47654(i32, i32) local_unnamed_addr

declare i32 @unknown_476ac(i32) local_unnamed_addr

declare i32 @unknown_476c8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_476d9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47760(i32, i32) local_unnamed_addr

declare i32 @unknown_4779b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_477e4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47a6e(i32, i32) local_unnamed_addr

declare i32 @unknown_47abe(i32) local_unnamed_addr

declare i32 @unknown_47b4c(i32, i32) local_unnamed_addr

declare i32 @unknown_47bfe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47c16(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47d0a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47d26(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47dbc(i32, i32) local_unnamed_addr

declare i32 @unknown_47e06(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_47f26(i32, i32) local_unnamed_addr

declare i32 @unknown_47fb0(i32) local_unnamed_addr

declare i32 @unknown_47fe5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_480bd(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48162(i32) local_unnamed_addr

declare i32 @unknown_4820a(i32) local_unnamed_addr

declare i32 @unknown_4826a(i32) local_unnamed_addr

declare i32 @unknown_4829a(i32) local_unnamed_addr

declare i32 @unknown_482ca(i32, i32) local_unnamed_addr

declare i32 @unknown_48416(i32, i32) local_unnamed_addr

declare i32 @unknown_4844e(i32) local_unnamed_addr

declare i32 @unknown_4847d(i32, i32) local_unnamed_addr

declare i32 @unknown_484c0(i32, i32) local_unnamed_addr

declare i32 @unknown_4850a(i32, i32) local_unnamed_addr

declare i32 @unknown_48550(i32) local_unnamed_addr

declare i32 @unknown_48580(i32) local_unnamed_addr

declare i32 @unknown_485a7(i32, i32) local_unnamed_addr

declare i32 @unknown_48608(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48681(i32, i32) local_unnamed_addr

declare i32 @unknown_4877c(i32) local_unnamed_addr

declare i32 @unknown_487ac(i32, i32) local_unnamed_addr

declare i32 @unknown_487d0(i32, i32) local_unnamed_addr

declare i32 @unknown_487df() local_unnamed_addr

declare i32 @unknown_48824(i32, i32) local_unnamed_addr

declare i32 @unknown_4885c(i32, i32) local_unnamed_addr

declare i32 @unknown_48876(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_488a6(i32, i32) local_unnamed_addr

declare i32 @unknown_488e6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_489e8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_48a34(i32) local_unnamed_addr

declare i32 @unknown_48a73(i32) local_unnamed_addr

declare i32 @unknown_48d42(i32) local_unnamed_addr

declare i32 @unknown_48dea(i32) local_unnamed_addr

declare i32 @unknown_48e7a(i32) local_unnamed_addr

declare i32 @unknown_48e96(i32, i32) local_unnamed_addr

declare i32 @unknown_48eaa(i32, i32) local_unnamed_addr

declare i32 @unknown_48ff6(i32, i32) local_unnamed_addr

declare i32 @unknown_4905d(i32) local_unnamed_addr

declare i32 @unknown_49184(i32, i32) local_unnamed_addr

declare i32 @unknown_49187(i32, i32) local_unnamed_addr

declare i32 @unknown_49261(i32, i32) local_unnamed_addr

declare i32 @unknown_49284(i32) local_unnamed_addr

declare i32 @unknown_493d4(i32, i32) local_unnamed_addr

declare i32 @unknown_49456(i32) local_unnamed_addr

declare i32 @unknown_49486(i32) local_unnamed_addr

declare i32 @unknown_494b6(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4956a(i32) local_unnamed_addr

declare i32 @unknown_4960d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_496b6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_496da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49708(i32, i32) local_unnamed_addr

declare i32 @unknown_497ae(i32, i32) local_unnamed_addr

declare i32 @unknown_4984f(i32) local_unnamed_addr

declare i32 @unknown_4985f(i32, i32) local_unnamed_addr

declare i32 @unknown_4994c(i32, i32) local_unnamed_addr

declare i32 @unknown_49988(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_49a9c(i32, i32) local_unnamed_addr

declare i32 @unknown_49ad6(i32, i32) local_unnamed_addr

declare i32 @unknown_49c40(i32, i32) local_unnamed_addr

declare i32 @unknown_49d2a(i32) local_unnamed_addr

declare i32 @unknown_49f90(i32) local_unnamed_addr

declare i32 @unknown_49fba(i32, i32) local_unnamed_addr

declare i32 @unknown_49ff2(i32, i32) local_unnamed_addr

declare i32 @unknown_4a0b4(i32, i32) local_unnamed_addr

declare i32 @unknown_4a0ec(i32) local_unnamed_addr

declare i32 @unknown_4a112(i32) local_unnamed_addr

declare i32 @unknown_4a11b(i32, i32) local_unnamed_addr

declare i32 @unknown_4a245(i32, i32) local_unnamed_addr

declare i32 @unknown_4a31f(i32, i32) local_unnamed_addr

declare i32 @unknown_4a389(i32) local_unnamed_addr

declare i32 @unknown_4a3e0(i32) local_unnamed_addr

declare i32 @unknown_4a4cc(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a85e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4a95c(i32, i32) local_unnamed_addr

declare i32 @unknown_4a9b3(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ab3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4abfe(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ac0c(i32, i32) local_unnamed_addr

declare i32 @unknown_4ac5c(i32) local_unnamed_addr

declare i32 @unknown_4acbc(i32) local_unnamed_addr

declare i32 @unknown_4acd9(i32, i32) local_unnamed_addr

declare i32 @unknown_4acf8(i32, i32) local_unnamed_addr

declare i32 @unknown_4ad40(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4adaa(i32, i32) local_unnamed_addr

declare i32 @unknown_4ae2a(i32, i32) local_unnamed_addr

declare i32 @unknown_4ae60(i32, i32) local_unnamed_addr

declare i32 @unknown_4ae65(i32) local_unnamed_addr

declare i32 @unknown_4aea9(i32) local_unnamed_addr

declare i32 @unknown_4aec2(i32, i32) local_unnamed_addr

declare i32 @unknown_4aed2(i32, i32) local_unnamed_addr

declare i32 @unknown_4aed9(i32) local_unnamed_addr

declare i32 @unknown_4af0a(i32, i32) local_unnamed_addr

declare i32 @unknown_4af30(i32, i32) local_unnamed_addr

declare i32 @unknown_4af5c(i32) local_unnamed_addr

declare i32 @unknown_4af74(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b026(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b067(i32) local_unnamed_addr

declare i32 @unknown_4b06d(i32) local_unnamed_addr

declare i32 @unknown_4b08a(i32) local_unnamed_addr

declare i32 @unknown_4b09d(i32) local_unnamed_addr

declare i32 @unknown_4b0ab(i32) local_unnamed_addr

declare i32 @unknown_4b0ce(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b0db(i32) local_unnamed_addr

declare i32 @unknown_4b10b(i32, i32) local_unnamed_addr

declare i32 @unknown_4b10c(i32, i32) local_unnamed_addr

declare i32 @unknown_4b192(i32) local_unnamed_addr

declare i32 @unknown_4b1c7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b29b(i32, i32) local_unnamed_addr

declare i32 @unknown_4b2ac(i32, i32) local_unnamed_addr

declare i32 @unknown_4b31e(i32) local_unnamed_addr

declare i32 @unknown_4b37e(i32, i32) local_unnamed_addr

declare i32 @unknown_4b380(i32) local_unnamed_addr

declare i32 @unknown_4b3b5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b3c2(i32, i32) local_unnamed_addr

declare i32 @unknown_4b450(i32, i32) local_unnamed_addr

declare i32 @unknown_4b47a() local_unnamed_addr

declare i32 @unknown_4b51a(i32) local_unnamed_addr

declare i32 @unknown_4b547(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b54a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b5ae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b5fe(i32) local_unnamed_addr

declare i32 @unknown_4b642(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b680(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b69c(i32) local_unnamed_addr

declare i32 @unknown_4b774(i32, i32) local_unnamed_addr

declare i32 @unknown_4b778(i32) local_unnamed_addr

declare i32 @unknown_4b780(i32) local_unnamed_addr

declare i32 @unknown_4b7c4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b7e6(i32) local_unnamed_addr

declare i32 @unknown_4b80a(i32, i32) local_unnamed_addr

declare i32 @unknown_4b835(i32) local_unnamed_addr

declare i32 @unknown_4b842(i32, i32) local_unnamed_addr

declare i32 @unknown_4b854(i32) local_unnamed_addr

declare i32 @unknown_4b86c(i32, i32) local_unnamed_addr

declare i32 @unknown_4b875(i32) local_unnamed_addr

declare i32 @unknown_4b8ba(i32, i32) local_unnamed_addr

declare i32 @unknown_4b8c2(i32) local_unnamed_addr

declare i32 @unknown_4b904(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4b91c(i32, i32) local_unnamed_addr

declare i32 @unknown_4b926(i32, i32) local_unnamed_addr

declare i32 @unknown_4b94c(i32) local_unnamed_addr

declare i32 @unknown_4b982(i32) local_unnamed_addr

declare i32 @unknown_4b989(i32) local_unnamed_addr

declare i32 @unknown_4b9ba(i32) local_unnamed_addr

declare i32 @unknown_4ba06(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ba28(i32) local_unnamed_addr

declare i32 @unknown_4ba52(i32) local_unnamed_addr

declare i32 @unknown_4ba5e(i32, i32) local_unnamed_addr

declare i32 @unknown_4baa3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bb0e(i32) local_unnamed_addr

declare i32 @unknown_4bb4a(i32, i32) local_unnamed_addr

declare i32 @unknown_4bbd6(i32, i32) local_unnamed_addr

declare i32 @unknown_4bcb7(i32) local_unnamed_addr

declare i32 @unknown_4bcbc(i32, i32) local_unnamed_addr

declare i32 @unknown_4bcc4(i32, i32) local_unnamed_addr

declare i32 @unknown_4bcfe(i32, i32) local_unnamed_addr

declare i32 @unknown_4bd5b(i32) local_unnamed_addr

declare i32 @unknown_4be73(i32, i32) local_unnamed_addr

declare i32 @unknown_4be76(i32, i32) local_unnamed_addr

declare i32 @unknown_4bf52(i32) local_unnamed_addr

declare i32 @unknown_4bf82(i32, i32) local_unnamed_addr

declare i32 @unknown_4bfd6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4bff8(i32, i32) local_unnamed_addr

declare i32 @unknown_4bffa(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4c074(i32, i32) local_unnamed_addr

declare i32 @unknown_4c10f(i32, i32) local_unnamed_addr

declare i32 @unknown_4c15b(i32) local_unnamed_addr

declare i32 @unknown_4c196(i32) local_unnamed_addr

declare i32 @unknown_4c251(i32) local_unnamed_addr

declare i32 @unknown_4c411() local_unnamed_addr

declare i32 @unknown_4c4ea(i32) local_unnamed_addr

declare i32 @unknown_4c655() local_unnamed_addr

declare i32 @unknown_4c703(i32, i32) local_unnamed_addr

declare i32 @unknown_4c816(i32, i32) local_unnamed_addr

declare i32 @unknown_4cc5b(i32, i32) local_unnamed_addr

declare i32 @unknown_4cc5e(i32) local_unnamed_addr

declare i32 @unknown_4cc94(i32) local_unnamed_addr

declare i32 @unknown_4ccba(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ccf4(i32) local_unnamed_addr

declare i32 @unknown_4ccfd(i32) local_unnamed_addr

declare i32 @unknown_4cd36(i32, i32) local_unnamed_addr

declare i32 @unknown_4cf12(i32) local_unnamed_addr

declare i32 @unknown_4cf14(i32, i32) local_unnamed_addr

declare i32 @unknown_4cf56(i32) local_unnamed_addr

declare i32 @unknown_4cf73(i32, i32) local_unnamed_addr

declare i32 @unknown_4cf94(i32, i32) local_unnamed_addr

declare i32 @unknown_4d082() local_unnamed_addr

declare i32 @unknown_4d146(i32, i32) local_unnamed_addr

declare i32 @unknown_4d16d(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d1e9(i32, i32) local_unnamed_addr

declare i32 @unknown_4d287(i32, i32) local_unnamed_addr

declare i32 @unknown_4d38e(i32, i32) local_unnamed_addr

declare i32 @unknown_4d39a(i32, i32) local_unnamed_addr

declare i32 @unknown_4d3a8(i32) local_unnamed_addr

declare i32 @unknown_4d620(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d65f(i32) local_unnamed_addr

declare i32 @unknown_4d6cc(i32, i32) local_unnamed_addr

declare i32 @unknown_4d7d4(i32, i32) local_unnamed_addr

declare i32 @unknown_4d852(i32) local_unnamed_addr

declare i32 @unknown_4d8be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4d970(i32) local_unnamed_addr

declare i32 @unknown_4d994(i32) local_unnamed_addr

declare i32 @unknown_4d9b2(i32, i32) local_unnamed_addr

declare i32 @unknown_4d9d7(i32) local_unnamed_addr

declare i32 @unknown_4d9f8(i32) local_unnamed_addr

declare i32 @unknown_4da58(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4daee(i32, i32) local_unnamed_addr

declare i32 @unknown_4db50(i32, i32) local_unnamed_addr

declare i32 @unknown_4dbda(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4dc70(i32, i32) local_unnamed_addr

declare i32 @unknown_4dd43(i32) local_unnamed_addr

declare i32 @unknown_4de69(i32) local_unnamed_addr

declare i32 @unknown_4deec(i32, i32) local_unnamed_addr

declare i32 @unknown_4df8e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4dfec(i32, i32) local_unnamed_addr

declare i32 @unknown_4e04a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e05a(i32, i32) local_unnamed_addr

declare i32 @unknown_4e06a(i32) local_unnamed_addr

declare i32 @unknown_4e15a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e274(i32) local_unnamed_addr

declare i32 @unknown_4e287(i32) local_unnamed_addr

declare i32 @unknown_4e302(i32) local_unnamed_addr

declare i32 @unknown_4e32d(i32) local_unnamed_addr

declare i32 @unknown_4e362(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e459(i32, i32) local_unnamed_addr

declare i32 @unknown_4e4f1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e5ca(i32) local_unnamed_addr

declare i32 @unknown_4e6da(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e70a(i32, i32) local_unnamed_addr

declare i32 @unknown_4e7ba(i32) local_unnamed_addr

declare i32 @unknown_4e7e4(i32) local_unnamed_addr

declare i32 @unknown_4e7f1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e848(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4e9ea(i32) local_unnamed_addr

declare i32 @unknown_4ea34(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ea50(i32) local_unnamed_addr

declare i32 @unknown_4eab9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4eb80(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ec0c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ec30(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ec96(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ed04(i32, i32) local_unnamed_addr

declare i32 @unknown_4ed0e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4ed1c(i32, i32) local_unnamed_addr

declare i32 @unknown_4eda0(i32, i32) local_unnamed_addr

declare i32 @unknown_4ee3a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4efdc(i32, i32) local_unnamed_addr

declare i32 @unknown_4f063(i32) local_unnamed_addr

declare i32 @unknown_4f098(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f0c2(i32) local_unnamed_addr

declare i32 @unknown_4f196(i32) local_unnamed_addr

declare i32 @unknown_4f1f8(i32, i32) local_unnamed_addr

declare i32 @unknown_4f29a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f34f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f45f(i32, i32) local_unnamed_addr

declare i32 @unknown_4f4bf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f51c(i32) local_unnamed_addr

declare i32 @unknown_4f549(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f587(i32, i32) local_unnamed_addr

declare i32 @unknown_4f5af(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f616(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4f65e(i32) local_unnamed_addr

declare i32 @unknown_4f67c(i32, i32) local_unnamed_addr

declare i32 @unknown_4f68e(i32, i32) local_unnamed_addr

declare i32 @unknown_4f6e8(i32, i32) local_unnamed_addr

declare i32 @unknown_4f706() local_unnamed_addr

declare i32 @unknown_4f81b(i32, i32) local_unnamed_addr

declare i32 @unknown_4f81c() local_unnamed_addr

declare i32 @unknown_4f86c(i32, i32) local_unnamed_addr

declare i32 @unknown_4f955(i32) local_unnamed_addr

declare i32 @unknown_4f996() local_unnamed_addr

declare i32 @unknown_4fa76(i32, i32) local_unnamed_addr

declare i32 @unknown_4fbfc() local_unnamed_addr

declare i32 @unknown_4fc36() local_unnamed_addr

declare i32 @unknown_4fc45(i32, i32) local_unnamed_addr

declare i32 @unknown_4fca5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fd02(i32) local_unnamed_addr

declare i32 @unknown_4fd2f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fd50(i32, i32) local_unnamed_addr

declare i32 @unknown_4fd95(i32) local_unnamed_addr

declare i32 @unknown_4fdfb(i32) local_unnamed_addr

declare i32 @unknown_4fe50(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_4fee8(i32, i32) local_unnamed_addr

declare i32 @unknown_4ff22(i32, i32) local_unnamed_addr

declare i32 @unknown_500d2(i32, i32) local_unnamed_addr

declare i32 @unknown_50194(i32, i32) local_unnamed_addr

declare i32 @unknown_503f1(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50449(i32) local_unnamed_addr

declare i32 @unknown_5044a(i32) local_unnamed_addr

declare i32 @unknown_5045b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_504c3(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5052b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_505b2(i32) local_unnamed_addr

declare i32 @unknown_506a0(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50987(i32) local_unnamed_addr

declare i32 @unknown_509fb(i32, i32) local_unnamed_addr

declare i32 @unknown_50a3e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50aae(i32, i32) local_unnamed_addr

declare i32 @unknown_50afe(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50bb0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50d65(i32) local_unnamed_addr

declare i32 @unknown_50d78(i32, i32) local_unnamed_addr

declare i32 @unknown_50da9(i32) local_unnamed_addr

declare i32 @unknown_50dbc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_50dd9(i32) local_unnamed_addr

declare i32 @unknown_50e0a(i32, i32) local_unnamed_addr

declare i32 @unknown_50f40(i32, i32) local_unnamed_addr

declare i32 @unknown_50f75(i32) local_unnamed_addr

declare i32 @unknown_51009(i32) local_unnamed_addr

declare i32 @unknown_510cc(i32, i32) local_unnamed_addr

declare i32 @unknown_51328(i32) local_unnamed_addr

declare i32 @unknown_5135e(i32) local_unnamed_addr

declare i32 @unknown_51450(i32, i32) local_unnamed_addr

declare i32 @unknown_514a0(i32) local_unnamed_addr

declare i32 @unknown_514d5(i32) local_unnamed_addr

declare i32 @unknown_51502(i32, i32) local_unnamed_addr

declare i32 @unknown_5153e(i32, i32) local_unnamed_addr

declare i32 @unknown_51626(i32) local_unnamed_addr

declare i32 @unknown_5165c() local_unnamed_addr

declare i32 @unknown_517ae(i32, i32) local_unnamed_addr

declare i32 @unknown_51833(i32) local_unnamed_addr

declare i32 @unknown_51860(i32, i32) local_unnamed_addr

declare i32 @unknown_5189c(i32) local_unnamed_addr

declare i32 @unknown_519e7(i32) local_unnamed_addr

declare i32 @unknown_51b26(i32) local_unnamed_addr

declare i32 @unknown_51bd8(i32, i32) local_unnamed_addr

declare i32 @unknown_51d7f(i32) local_unnamed_addr

declare i32 @unknown_51d96(i32) local_unnamed_addr

declare i32 @unknown_51e70(i32) local_unnamed_addr

declare i32 @unknown_51e8e(i32, i32) local_unnamed_addr

declare i32 @unknown_51f10(i32) local_unnamed_addr

declare i32 @unknown_51f22(i32, i32) local_unnamed_addr

declare i32 @unknown_51fee(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5204e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_520d0(i32, i32) local_unnamed_addr

declare i32 @unknown_52172(i32, i32) local_unnamed_addr

declare i32 @unknown_521fa(i32) local_unnamed_addr

declare i32 @unknown_52322(i32, i32) local_unnamed_addr

declare i32 @unknown_5235a(i32, i32) local_unnamed_addr

declare i32 @unknown_523a7(i32) local_unnamed_addr

declare i32 @unknown_5241c(i32, i32) local_unnamed_addr

declare i32 @unknown_5248a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_524dc(i32, i32) local_unnamed_addr

declare i32 @unknown_526dc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52714(i32, i32) local_unnamed_addr

declare i32 @unknown_52722(i32, i32) local_unnamed_addr

declare i32 @unknown_5278d(i32) local_unnamed_addr

declare i32 @unknown_527ec(i32) local_unnamed_addr

declare i32 @unknown_5280e(i32, i32) local_unnamed_addr

declare i32 @unknown_5287e(i32) local_unnamed_addr

declare i32 @unknown_528d0(i32) local_unnamed_addr

declare i32 @unknown_52903(i32, i32) local_unnamed_addr

declare i32 @unknown_52910(i32, i32) local_unnamed_addr

declare i32 @unknown_52914(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5295f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_52992(i32, i32) local_unnamed_addr

declare i32 @unknown_52aa4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_530a3(i32) local_unnamed_addr

declare i32 @unknown_530d8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_531f8(i32) local_unnamed_addr

declare i32 @unknown_5323e(i32) local_unnamed_addr

declare i32 @unknown_534b1(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53503(i32) local_unnamed_addr

declare i32 @unknown_535a0(i32) local_unnamed_addr

declare i32 @unknown_53672(i32) local_unnamed_addr

declare i32 @unknown_536fa(i32) local_unnamed_addr

declare i32 @unknown_53759(i32, i32) local_unnamed_addr

declare i32 @unknown_53958(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53a67(i32) local_unnamed_addr

declare i32 @unknown_53a76(i32) local_unnamed_addr

declare i32 @unknown_53a9c(i32) local_unnamed_addr

declare i32 @unknown_53ba6(i32) local_unnamed_addr

declare i32 @unknown_53bec(i32) local_unnamed_addr

declare i32 @unknown_53c30(i32, i32) local_unnamed_addr

declare i32 @unknown_53da4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53dd7(i32) local_unnamed_addr

declare i32 @unknown_53e8e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_53f54(i32, i32) local_unnamed_addr

declare i32 @unknown_53fa5(i32, i32) local_unnamed_addr

declare i32 @unknown_54101(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_541e2(i32, i32) local_unnamed_addr

declare i32 @unknown_541e7(i32, i32) local_unnamed_addr

declare i32 @unknown_5426e(i32) local_unnamed_addr

declare i32 @unknown_54388(i32, i32) local_unnamed_addr

declare i32 @unknown_54438(i32) local_unnamed_addr

declare i32 @unknown_5449a(i32) local_unnamed_addr

declare i32 @unknown_54541(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_54638(i32) local_unnamed_addr

declare i32 @unknown_5466e(i32) local_unnamed_addr

declare i32 @unknown_547c0(i32, i32) local_unnamed_addr

declare i32 @unknown_54804(i32) local_unnamed_addr

declare i32 @unknown_5480f(i32) local_unnamed_addr

declare i32 @unknown_5483c(i32, i32) local_unnamed_addr

declare i32 @unknown_54a07(i32, i32) local_unnamed_addr

declare i32 @unknown_54a5c(i32) local_unnamed_addr

declare i32 @unknown_54a96(i32) local_unnamed_addr

declare i32 @unknown_54ab5(i32) local_unnamed_addr

declare i32 @unknown_54bec(i32, i32) local_unnamed_addr

declare i32 @unknown_54e45(i32) local_unnamed_addr

declare i32 @unknown_54eba(i32) local_unnamed_addr

declare i32 @unknown_54ef0(i32) local_unnamed_addr

declare i32 @unknown_55042(i32, i32) local_unnamed_addr

declare i32 @unknown_55092(i32) local_unnamed_addr

declare i32 @unknown_550c7(i32) local_unnamed_addr

declare i32 @unknown_550f4(i32, i32) local_unnamed_addr

declare i32 @unknown_55130(i32, i32) local_unnamed_addr

declare i32 @unknown_552b2(i32, i32) local_unnamed_addr

declare i32 @unknown_552e6(i32) local_unnamed_addr

declare i32 @unknown_55316(i32) local_unnamed_addr

declare i32 @unknown_55346(i32, i32) local_unnamed_addr

declare i32 @unknown_55472(i32) local_unnamed_addr

declare i32 @unknown_554b6(i32) local_unnamed_addr

declare i32 @unknown_554e6(i32) local_unnamed_addr

declare i32 @unknown_555c0(i32) local_unnamed_addr

declare i32 @unknown_555ca(i32) local_unnamed_addr

declare i32 @unknown_555f0(i32) local_unnamed_addr

declare i32 @unknown_555fa(i32, i32) local_unnamed_addr

declare i32 @unknown_55672(i32) local_unnamed_addr

declare i32 @unknown_556e3(i32) local_unnamed_addr

declare i32 @unknown_557b8(i32) local_unnamed_addr

declare i32 @unknown_55807() local_unnamed_addr

declare i32 @unknown_55818(i32, i32) local_unnamed_addr

declare i32 @unknown_55836(i32) local_unnamed_addr

declare i32 @unknown_5584c(i32) local_unnamed_addr

declare i32 @unknown_55938(i32) local_unnamed_addr

declare i32 @unknown_55958(i32, i32) local_unnamed_addr

declare i32 @unknown_559f4(i32) local_unnamed_addr

declare i32 @unknown_55a24(i32) local_unnamed_addr

declare i32 @unknown_55a54(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55b56(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_55c83(i32) local_unnamed_addr

declare i32 @unknown_55d5a() local_unnamed_addr

declare i32 @unknown_55d8a(i32) local_unnamed_addr

declare i32 @unknown_55dca(i32) local_unnamed_addr

declare i32 @unknown_55e0a(i32, i32) local_unnamed_addr

declare i32 @unknown_562a7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56424(i32, i32) local_unnamed_addr

declare i32 @unknown_564be(i32, i32) local_unnamed_addr

declare i32 @unknown_56586(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56a16(i32) local_unnamed_addr

declare i32 @unknown_56a44(i32, i32) local_unnamed_addr

declare i32 @unknown_56ad0(i32) local_unnamed_addr

declare i32 @unknown_56b96(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56c98(i32, i32) local_unnamed_addr

declare i32 @unknown_56c9c(i32, i32) local_unnamed_addr

declare i32 @unknown_56cec(i32) local_unnamed_addr

declare i32 @unknown_56d0a(i32) local_unnamed_addr

declare i32 @unknown_56d6a(i32) local_unnamed_addr

declare i32 @unknown_56d94(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56dd6(i32, i32) local_unnamed_addr

declare i32 @unknown_56e26(i32) local_unnamed_addr

declare i32 @unknown_56e5b(i32) local_unnamed_addr

declare i32 @unknown_56e6f(i32) local_unnamed_addr

declare i32 @unknown_56edb(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_56fc0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57121(i32) local_unnamed_addr

declare i32 @unknown_571b1(i32) local_unnamed_addr

declare i32 @unknown_57282(i32) local_unnamed_addr

declare i32 @unknown_572cf(i32) local_unnamed_addr

declare i32 @unknown_572d6() local_unnamed_addr

declare i32 @unknown_57345(i32, i32) local_unnamed_addr

declare i32 @unknown_57396(i32, i32) local_unnamed_addr

declare i32 @unknown_5739a(i32) local_unnamed_addr

declare i32 @unknown_573b4(i32) local_unnamed_addr

declare i32 @unknown_573dc(i32) local_unnamed_addr

declare i32 @unknown_5740a(i32) local_unnamed_addr

declare i32 @unknown_57411(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57420(i32, i32) local_unnamed_addr

declare i32 @unknown_57426(i32) local_unnamed_addr

declare i32 @unknown_57470(i32) local_unnamed_addr

declare i32 @unknown_57496(i32) local_unnamed_addr

declare i32 @unknown_574a5(i32) local_unnamed_addr

declare i32 @unknown_574ae(i32, i32) local_unnamed_addr

declare i32 @unknown_574d2(i32) local_unnamed_addr

declare i32 @unknown_574e9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5753a(i32, i32) local_unnamed_addr

declare i32 @unknown_57542(i32) local_unnamed_addr

declare i32 @unknown_57592(i32) local_unnamed_addr

declare i32 @unknown_57599(i32) local_unnamed_addr

declare i32 @unknown_575e6(i32, i32) local_unnamed_addr

declare i32 @unknown_5762e(i32) local_unnamed_addr

declare i32 @unknown_57841(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57943(i32, i32) local_unnamed_addr

declare i32 @unknown_57978(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57a20(i32, i32) local_unnamed_addr

declare i32 @unknown_57a55(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57a56(i32, i32) local_unnamed_addr

declare i32 @unknown_57af7(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57b9b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57c49(i32, i32) local_unnamed_addr

declare i32 @unknown_57c7e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57cf5(i32, i32) local_unnamed_addr

declare i32 @unknown_57d20(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57e2e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_57ed9(i32) local_unnamed_addr

declare i32 @unknown_57f0e(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_580c7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58248(i32) local_unnamed_addr

declare i32 @unknown_58313(i32) local_unnamed_addr

declare i32 @unknown_58340(i32) local_unnamed_addr

declare i32 @unknown_5840d(i32) local_unnamed_addr

declare i32 @unknown_5843a(i32) local_unnamed_addr

declare i32 @unknown_585d8(i32, i32) local_unnamed_addr

declare i32 @unknown_5861d(i32) local_unnamed_addr

declare i32 @unknown_5864a(i32) local_unnamed_addr

declare i32 @unknown_586de(i32, i32) local_unnamed_addr

declare i32 @unknown_5881a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5890c(i32) local_unnamed_addr

declare i32 @unknown_589d7(i32) local_unnamed_addr

declare i32 @unknown_58a62(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58b28(i32) local_unnamed_addr

declare i32 @unknown_58b56(i32) local_unnamed_addr

declare i32 @unknown_58b94(i32) local_unnamed_addr

declare i32 @unknown_58c27(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58cc7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58d1e(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_58e9e(i32) local_unnamed_addr

declare i32 @unknown_58ef2(i32) local_unnamed_addr

declare i32 @unknown_58f20(i32) local_unnamed_addr

declare i32 @unknown_58f7e(i32) local_unnamed_addr

declare i32 @unknown_58ff1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5900b(i32) local_unnamed_addr

declare i32 @unknown_59040(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59118(i32) local_unnamed_addr

declare i32 @unknown_5916f(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59311(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_594bc(i32) local_unnamed_addr

declare i32 @unknown_59528(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_595f8(i32, i32) local_unnamed_addr

declare i32 @unknown_5966a(i32) local_unnamed_addr

declare i32 @unknown_596f7(i32, i32) local_unnamed_addr

declare i32 @unknown_59893(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59972(i32) local_unnamed_addr

declare i32 @unknown_599a7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59a7f(i32) local_unnamed_addr

declare i32 @unknown_59ab4(i32, i32) local_unnamed_addr

declare i32 @unknown_59b27(i32) local_unnamed_addr

declare i32 @unknown_59bd2(i32) local_unnamed_addr

declare i32 @unknown_59c70(i32) local_unnamed_addr

declare i32 @unknown_59e67(i32) local_unnamed_addr

declare i32 @unknown_59e9c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_59f1a(i32, i32) local_unnamed_addr

declare i32 @unknown_59f69(i32) local_unnamed_addr

declare i32 @unknown_59f74(i32) local_unnamed_addr

declare i32 @unknown_59fa9(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a06a(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a10e(i32) local_unnamed_addr

declare i32 @unknown_5a2ce(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a399(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a464(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5a634(i32, i32) local_unnamed_addr

declare i32 @unknown_5a78c(i32, i32) local_unnamed_addr

declare i32 @unknown_5a7f0(i32) local_unnamed_addr

declare i32 @unknown_5a832() local_unnamed_addr

declare i32 @unknown_5a8ca(i32) local_unnamed_addr

declare i32 @unknown_5a922() local_unnamed_addr

declare i32 @unknown_5aa68(i32, i32) local_unnamed_addr

declare i32 @unknown_5aa9c(i32, i32) local_unnamed_addr

declare i32 @unknown_5aaa6(i32) local_unnamed_addr

declare i32 @unknown_5aaca() local_unnamed_addr

declare i32 @unknown_5aad0(i32) local_unnamed_addr

declare i32 @unknown_5ab71(i32, i32) local_unnamed_addr

declare i32 @unknown_5ab9e(i32, i32) local_unnamed_addr

declare i32 @unknown_5abd2(i32) local_unnamed_addr

declare i32 @unknown_5ac1a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ad42(i32, i32) local_unnamed_addr

declare i32 @unknown_5ad6a(i32) local_unnamed_addr

declare i32 @unknown_5adda(i32, i32) local_unnamed_addr

declare i32 @unknown_5ae20(i32) local_unnamed_addr

declare i32 @unknown_5ae4e(i32, i32) local_unnamed_addr

declare i32 @unknown_5aeda(i32) local_unnamed_addr

declare i32 @unknown_5aff6(i32, i32) local_unnamed_addr

declare i32 @unknown_5b0b2(i32) local_unnamed_addr

declare i32 @unknown_5b0e4(i32) local_unnamed_addr

declare i32 @unknown_5b112(i32, i32) local_unnamed_addr

declare i32 @unknown_5b121(i32, i32) local_unnamed_addr

declare i32 @unknown_5b19e(i32) local_unnamed_addr

declare i32 @unknown_5b266(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b322(i32) local_unnamed_addr

declare i32 @unknown_5b3ba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5b3c5(i32) local_unnamed_addr

declare i32 @unknown_5b582(i32, i32) local_unnamed_addr

declare i32 @unknown_5bbb4(i32, i32) local_unnamed_addr

declare i32 @unknown_5bc26(i32, i32) local_unnamed_addr

declare i32 @unknown_5bc5b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bd03(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bddf(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bec1(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5bff5(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c10f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c1f1(i32, i32) local_unnamed_addr

declare i32 @unknown_5c2c5(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c683() local_unnamed_addr

declare i32 @unknown_5c6d8() local_unnamed_addr

declare i32 @unknown_5c712() local_unnamed_addr

declare i32 @unknown_5c81b() local_unnamed_addr

declare i32 @unknown_5c865(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5c93f(i32) local_unnamed_addr

declare i32 @unknown_5c9ac(i32) local_unnamed_addr

declare i32 @unknown_5ca98(i32) local_unnamed_addr

declare i32 @unknown_5cb59(i32, i32) local_unnamed_addr

declare i32 @unknown_5cf7f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5cf98(i32) local_unnamed_addr

declare i32 @unknown_5cffa(i32) local_unnamed_addr

declare i32 @unknown_5d02f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d13c(i32) local_unnamed_addr

declare i32 @unknown_5d16a(i32) local_unnamed_addr

declare i32 @unknown_5d1a8(i32) local_unnamed_addr

declare i32 @unknown_5d209(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d23b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5d322(i32) local_unnamed_addr

declare i32 @unknown_5d3ac(i32) local_unnamed_addr

declare i32 @unknown_5d3d9(i32) local_unnamed_addr

declare i32 @unknown_5d448(i32) local_unnamed_addr

declare i32 @unknown_5d464(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5da02(i32) local_unnamed_addr

declare i32 @unknown_5da64(i32) local_unnamed_addr

declare i32 @unknown_5da99(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5dba6(i32) local_unnamed_addr

declare i32 @unknown_5dbc6(i32) local_unnamed_addr

declare i32 @unknown_5dbd4(i32) local_unnamed_addr

declare i32 @unknown_5dc12(i32) local_unnamed_addr

declare i32 @unknown_5dca6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5dd4a(i32, i32) local_unnamed_addr

declare i32 @unknown_5dd96(i32) local_unnamed_addr

declare i32 @unknown_5ddfd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5df4a(i32) local_unnamed_addr

declare i32 @unknown_5dfb6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e010(i32) local_unnamed_addr

declare i32 @unknown_5e155() local_unnamed_addr

declare i32 @unknown_5e278(i32) local_unnamed_addr

declare i32 @unknown_5e32e(i32) local_unnamed_addr

declare i32 @unknown_5e35c(i32, i32) local_unnamed_addr

declare i32 @unknown_5e414(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e4ba(i32) local_unnamed_addr

declare i32 @unknown_5e4d0(i32) local_unnamed_addr

declare i32 @unknown_5e612(i32) local_unnamed_addr

declare i32 @unknown_5e6c8(i32) local_unnamed_addr

declare i32 @unknown_5e6f6(i32, i32) local_unnamed_addr

declare i32 @unknown_5e782(i32) local_unnamed_addr

declare i32 @unknown_5e84a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5e8c2(i32, i32) local_unnamed_addr

declare i32 @unknown_5e8d6(i32, i32) local_unnamed_addr

declare i32 @unknown_5e912(i32) local_unnamed_addr

declare i32 @unknown_5e947(i32) local_unnamed_addr

declare i32 @unknown_5e96a(i32, i32) local_unnamed_addr

declare i32 @unknown_5e9cc(i32, i32) local_unnamed_addr

declare i32 @unknown_5e9fe(i32) local_unnamed_addr

declare i32 @unknown_5eab8(i32, i32) local_unnamed_addr

declare i32 @unknown_5eb76(i32) local_unnamed_addr

declare i32 @unknown_5ec1a(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ed9e(i32, i32) local_unnamed_addr

declare i32 @unknown_5edd2(i32, i32) local_unnamed_addr

declare i32 @unknown_5ef6c(i32, i32) local_unnamed_addr

declare i32 @unknown_5efb6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f002(i32) local_unnamed_addr

declare i32 @unknown_5f19a(i32, i32) local_unnamed_addr

declare i32 @unknown_5f33e(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f8e0(i32, i32) local_unnamed_addr

declare i32 @unknown_5f930(i32, i32) local_unnamed_addr

declare i32 @unknown_5f97b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5f9ba(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5fa2b(i32) local_unnamed_addr

declare i32 @unknown_5fab2(i32) local_unnamed_addr

declare i32 @unknown_5fbe3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5fd0f(i32) local_unnamed_addr

declare i32 @unknown_5fd8c(i32) local_unnamed_addr

declare i32 @unknown_5fdd2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_5ff33(i32) local_unnamed_addr

declare i32 @unknown_60324(i32) local_unnamed_addr

declare i32 @unknown_60386(i32) local_unnamed_addr

declare i32 @unknown_607cf(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6099b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60a78(i32) local_unnamed_addr

declare i32 @unknown_60b8f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60c54(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60cf4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60d4b(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_60eb9(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_611ae(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61252(i32) local_unnamed_addr

declare i32 @unknown_612b4(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_612d1(i32, i32) local_unnamed_addr

declare i32 @unknown_612dd(i32) local_unnamed_addr

declare i32 @unknown_612f9(i32) local_unnamed_addr

declare i32 @unknown_614a2(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61546(i32) local_unnamed_addr

declare i32 @unknown_615a8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_615ed(i32) local_unnamed_addr

declare i32 @unknown_616fd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6182b(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61968(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61af5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_61afb(i32) local_unnamed_addr

declare i32 @unknown_61b2b(i32, i32) local_unnamed_addr

declare i32 @unknown_61be7(i32) local_unnamed_addr

declare i32 @unknown_61cd2(i32) local_unnamed_addr

declare i32 @unknown_61d02(i32) local_unnamed_addr

declare i32 @unknown_61d32(i32) local_unnamed_addr

declare i32 @unknown_61e52(i32, i32) local_unnamed_addr

declare i32 @unknown_61efe(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62049(i32) local_unnamed_addr

declare i32 @unknown_6210d(i32) local_unnamed_addr

declare i32 @unknown_621aa(i32) local_unnamed_addr

declare i32 @unknown_622d4(i32) local_unnamed_addr

declare i32 @unknown_623a6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62568(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_625d5() local_unnamed_addr

declare i32 @unknown_62642(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_626af(i32, i32) local_unnamed_addr

declare i32 @unknown_62709(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_62905(i32) local_unnamed_addr

declare i32 @unknown_62e58(i32) local_unnamed_addr

declare i32 @unknown_632ea(i32) local_unnamed_addr

declare i32 @unknown_633f9(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63763(i32) local_unnamed_addr

declare i32 @unknown_63999(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63f39(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_63fbc(i32, i32) local_unnamed_addr

declare i32 @unknown_64124(i32, i32) local_unnamed_addr

declare i32 @unknown_64131(i32) local_unnamed_addr

declare i32 @unknown_64147(i32, i32) local_unnamed_addr

declare i32 @unknown_64544(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64555(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_645b1(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6461e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6468b(i32) local_unnamed_addr

declare i32 @unknown_646e5(i32) local_unnamed_addr

declare i32 @unknown_64c78(i32) local_unnamed_addr

declare i32 @unknown_64d4a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_64e1c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65011(i32, i32) local_unnamed_addr

declare i32 @unknown_6513e(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_652c0() local_unnamed_addr

declare i32 @unknown_6532d(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6539a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65407(i32, i32) local_unnamed_addr

declare i32 @unknown_65461(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65a54(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65b91(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_65f9a(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_660a4(i32) local_unnamed_addr

declare i32 @unknown_66176(i32, i32) local_unnamed_addr

declare i32 @unknown_661c0(i32, i32) local_unnamed_addr

declare i32 @unknown_66272(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66372(i32) local_unnamed_addr

declare i32 @unknown_66430(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66652() local_unnamed_addr

declare i32 @unknown_666bf(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6672c(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66799(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_667f3() local_unnamed_addr

declare i32 @unknown_66dc1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66e4f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_66f04(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6707b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_672e1() local_unnamed_addr

declare i32 @unknown_67447(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67682(i32, i32) local_unnamed_addr

declare i32 @unknown_67874(i32) local_unnamed_addr

declare i32 @unknown_67997(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67b08(i32) local_unnamed_addr

declare i32 @unknown_67be2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_67c93() local_unnamed_addr

declare i32 @unknown_67dc9() local_unnamed_addr

declare i32 @unknown_67f30(i32) local_unnamed_addr

declare i32 @unknown_67f60(i32, i32) local_unnamed_addr

declare i32 @unknown_68034(i32) local_unnamed_addr

declare i32 @unknown_68328(i32) local_unnamed_addr

declare i32 @unknown_683b5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68487(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68559(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_687ad(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6881a() local_unnamed_addr

declare i32 @unknown_68887(i32, i32) local_unnamed_addr

declare i32 @unknown_688f0(i32) local_unnamed_addr

declare i32 @unknown_688f4(i32) local_unnamed_addr

declare i32 @unknown_6894e(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68ee2(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_68f4f(i32, i32) local_unnamed_addr

declare i32 @unknown_68fbc(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69029(i32, i32) local_unnamed_addr

declare i32 @unknown_69083(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69616(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69683(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_696f0(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6975d(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_697b7(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69984(i32, i32) local_unnamed_addr

declare i32 @unknown_69d4a(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69db7(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69e24(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_69e91(i32) local_unnamed_addr

declare i32 @unknown_69eeb(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a47e(i32, i32) local_unnamed_addr

declare i32 @unknown_6a550(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a622(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a7b5(i32) local_unnamed_addr

declare i32 @unknown_6a7e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a894(i32) local_unnamed_addr

declare i32 @unknown_6a8c1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6a994(i32) local_unnamed_addr

declare i32 @unknown_6a9c2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ab11(i32) local_unnamed_addr

declare i32 @unknown_6ac33(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6add7(i32) local_unnamed_addr

declare i32 @unknown_6aff6(i32, i32) local_unnamed_addr

declare i32 @unknown_6b120(i32) local_unnamed_addr

declare i32 @unknown_6b2be(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b462(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b606(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6b7f6() local_unnamed_addr

declare i32 @unknown_6b889(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bb7b(i32) local_unnamed_addr

declare i32 @unknown_6bc7b(i32) local_unnamed_addr

declare i32 @unknown_6be79(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6bfa9(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c0dc(i32, i32) local_unnamed_addr

declare i32 @unknown_6c112(i32) local_unnamed_addr

declare i32 @unknown_6c350(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c3ff(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c4ae(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c580(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c652(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c7e5(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c825(i32) local_unnamed_addr

declare i32 @unknown_6c8b7(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6c925(i32) local_unnamed_addr

declare i32 @unknown_6c989(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ca4f(i32) local_unnamed_addr

declare i32 @unknown_6cb1c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6cb4f(i32) local_unnamed_addr

declare i32 @unknown_6cbee(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ccc0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ce53(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6cf25(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6cff7(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d05b(i32) local_unnamed_addr

declare i32 @unknown_6d13a() local_unnamed_addr

declare i32 @unknown_6d18a(i32) local_unnamed_addr

declare i32 @unknown_6d1e2(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d288(i32) local_unnamed_addr

declare i32 @unknown_6d2b5(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d2d6(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d35b() local_unnamed_addr

declare i32 @unknown_6d734(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6d7e3(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6da6c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6db9c(i32) local_unnamed_addr

declare i32 @unknown_6dc6c(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6dc9a(i32) local_unnamed_addr

declare i32 @unknown_6dccb(i32) local_unnamed_addr

declare i32 @unknown_6dcd4(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6dd6d() local_unnamed_addr

declare i32 @unknown_6dda8(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ddc9(i32) local_unnamed_addr

declare i32 @unknown_6de10(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6de9c(i32) local_unnamed_addr

declare i32 @unknown_6df29(i32) local_unnamed_addr

declare i32 @unknown_6e027(i32) local_unnamed_addr

declare i32 @unknown_6e06a(i32) local_unnamed_addr

declare i32 @unknown_6e0de(i32) local_unnamed_addr

declare i32 @unknown_6e0fa(i32) local_unnamed_addr

declare i32 @unknown_6e119(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e1c8(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e277(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e312(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e3d1(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e490(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e54f(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e6cd(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e77c(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6e82b(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6ed2a(i32) local_unnamed_addr

declare i32 @unknown_6eebc(i32, i32) local_unnamed_addr

declare i32 @unknown_6ef3c(i32, i32) local_unnamed_addr

declare i32 @unknown_6efe0(i32, i32) local_unnamed_addr

declare i32 @unknown_6f14a(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f230(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f336(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f43c(i32, i32) local_unnamed_addr

declare i32 @unknown_6f4bc(i32, i32) local_unnamed_addr

declare i32 @unknown_6f53c(i32, i32) local_unnamed_addr

declare i32 @unknown_6f5e0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6f6db(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fb66(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fc6d(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fd7f(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_6fef3(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_700be(i32) local_unnamed_addr

define i32 @function_4508901() local_unnamed_addr {
dec_label_pc_4508901:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_44ca2d94() local_unnamed_addr {
dec_label_pc_44ca2d94:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c7000141() local_unnamed_addr {
dec_label_pc_c7000141:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d8890000() local_unnamed_addr {
dec_label_pc_d8890000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, {}
  uselistorder i32* @eax, {}
}

declare i32 @unknown_e824fb3d() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

declare void @__asm_rep_movsd_memcpy(i8*, i8*, i32) local_unnamed_addr

declare void @__asm_rep_stosd_memset(i8*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

attributes #0 = { nounwind readnone }

source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%vtable_14720_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_14738_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_14750_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_14778_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_147b8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_14848_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_14878_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_148b8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_14958_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32*)*, i32 ()* }
%vtable_14998_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)* }
%vtable_149b0_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_149d8_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()* }
%vtable_14a18_type = type { i32 (i32*)*, i32 (i32*)*, i32 ()*, i32 (i32)*, i32 (i32)* }
%vtable_14ab8_type = type { i32 (i32*)*, i32 (i32*)* }
%vtable_14af8_type = type { i32 (i32*)*, i32 (i32*)*, i32 (i32)*, i32 (i32)* }
%has_fallback_type_ = type { i32 }
%has_fallback_type_.0 = type { i32 }
%has_fallback_type__1 = type { i32 }
%CSerActionSerialize = type { i32 }

@cf = internal unnamed_addr global i1 false
@zf = internal unnamed_addr global i1 false
@sf = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@fs = internal unnamed_addr global i16 0
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external local_unnamed_addr global i32
@global_var_8.813 = constant i32 608471296
@global_var_fe.827 = constant i32 -326959104
@global_var_54.830 = constant i32 -956301193
@global_var_38.831 = constant i32 666668288
@global_var_34.832 = constant i32 182
@global_var_10.833 = constant [6 x i8] c"D$\0Cps\00"
@global_var_7c.835 = constant i32 0
@global_var_64.837 = constant i32 -956301261
@global_var_1472c = external global i32
@global_var_ff.838 = constant i32 753697536
@global_var_24.839 = constant i32 -956301261
@global_var_40.840 = constant i32 1697442947
@global_var_44.841 = constant i32 5281
@global_var_30.842 = constant i32 -1912602625
@global_var_3c.843 = constant i32 0
@global_var_70.844 = constant i32 -1912602625
@global_var_74.845 = constant i32 182
@global_var_1c8.846 = constant i32 666668288
@global_var_c4.848 = constant i32 5281
@global_var_206d.849 = constant [10 x i8] c"alert.cpp\00"
@global_var_2077.850 = constant [13 x i8] c"cs_mapAlerts\00"
@global_var_1ef0.851 = constant [18 x i8] c"boost::lock_error\00"
@global_var_1f44.853 = constant [11 x i8] c"_unlock(m)\00"
@global_var_1f02.857 = constant [29 x i8] c"boost::thread_resource_error\00"
@global_var_147a0.858 = constant i32 0
@global_var_14938.859 = constant i32 8752
@global_var_146f8.860 = constant i32 8896
@global_var_104.864 = constant i32 5281
@global_var_108.865 = constant i32 608471296
@global_var_14b10.893 = constant i32 17392
@global_var_14b24.894 = constant i32 15632
@global_var_14768.896 = constant i32 0
@global_var_147d4.897 = constant i32 18624
@global_var_147e4.899 = constant i32 15792
@global_var_14a34.901 = constant i32 18256
@global_var_14a44.903 = constant i32 15984
@global_var_148d4.904 = constant i32 17760
@global_var_148e4.906 = constant i32 16464
@global_var_14ac8.912 = constant i32 16944
@global_var_149ec.914 = constant i32 17040
@global_var_1478c.916 = constant i32 17152
@global_var_1488c.918 = constant i32 17264
@global_var_12.919 = constant [4 x i8] c"\0Cps\00"
@global_var_78.922 = constant i32 666668288
@global_var_8af0.925 = constant [169 x i8] c"boost::exception_ptr boost::exception_detail::get_bad_alloc() [with int Dummy = 42, boost::exception_ptr = boost::shared_ptr<const boost::exception_detail::clone_base>]\00"
@global_var_3598.926 = constant [54 x i8] c"/usr/include/boost/exception/detail/exception_ptr.hpp\00"
@global_var_14e30.928 = constant i32 8
@global_var_153f0.929 = constant [90 x i8] c"N5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEEE\00"
@global_var_14d2c.930 = constant i32 8
@global_var_14e34.931 = local_unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([90 x i8], [90 x i8]* @global_var_153f0.929, i32 0, i32 0), i8* bitcast (i32* @global_var_14d2c.930 to i8*)]
@global_var_14e35.932 = constant i32 738197843
@global_var_80.933 = constant i32 1697442947
@global_var_84.934 = constant i32 5281
@global_var_94.939 = constant i32 -956301204
@global_var_90.940 = constant [6 x i8] c"D$\0CPl\00"
@global_var_bc.941 = constant i32 0
@global_var_b0.949 = constant i32 -1912602625
@global_var_9.953 = constant i32 472138889
@global_var_36f8.958 = constant [51 x i8] c"/usr/include/boost/signals2/detail/slot_groups.hpp\00"
@global_var_8370.970 = constant [901 x i8] c"boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>::grouped_list(const boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType>&) [with Group = int, GroupCompare = std::less<int>, ValueType = boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> >, boost::signals2::detail::grouped_list<Group, GroupCompare, ValueType> = boost::signals2::detail::grouped_list<int, std::less<int>, boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot2<void, const uint256&, ChangeType, boost::function<void(const uint256&, ChangeType)> >, boost::signals2::mutex> > >]\00"
@global_var_b6.976 = constant i32 -1929379840
@global_var_88.977 = constant i32 608471296
@1 = external global i32
@2 = internal constant [2 x i8] c"s\00"
@global_var_14.812 = constant i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@3 = internal constant [3 x i8] c"\A1\14\00"
@global_var_4.814 = constant i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0)
@global_var_33.815 = constant i8 -115
@4 = internal constant [6 x i8] c"\EC,e\A1\14\00"
@global_var_1.820 = constant i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i32 0, i32 0)
@global_var_48.821 = external constant i8*
@global_var_1f.822 = constant i64 56264141063367
@global_var_89.942 = constant i8 -119
@global_var_2a.943 = constant i64 -3401614090358
@global_var_39.944 = constant i8 -115
@global_var_31.945 = constant i8 -1
@global_var_f.946 = constant i8 -57
@5 = internal constant [5 x i8] c"\89\8C$\9C\00"
@global_var_b083.948 = constant i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i32 0, i32 0)
@global_var_14720.862 = constant %vtable_14720_type { i32 (i32*)* @_ZN5boost6system12system_errorD1Ev, i32 (i32*)* @_ZN5boost6system12system_errorD0Ev, i32 (i32)* @_ZNK5boost6system12system_error4whatEv }
@global_var_14738.863 = constant %vtable_14738_type { i32 (i32*)* @_ZN5boost16thread_exceptionD1Ev, i32 (i32*)* @_ZN5boost16thread_exceptionD0Ev, i32 ()* @cs_mapAlerts }
@global_var_14750.895 = constant %vtable_14750_type { i32 (i32*)* @_ZN5boost10lock_errorD1Ev, i32 (i32*)* @_ZN5boost10lock_errorD0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_14778.915 = constant %vtable_14778_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv }
@global_var_147b8.898 = constant %vtable_147b8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, i32 ()* @_ZNK5boost10lock_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv }
@global_var_14848.861 = constant %vtable_14848_type { i32 (i32*)* @_ZN5boost17bad_function_callD1Ev, i32 (i32*)* @_ZN5boost17bad_function_callD0Ev, i32 ()* @cs_mapAlerts }
@global_var_14878.917 = constant %vtable_14878_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, i32 ()* @cs_mapAlerts }
@global_var_148b8.905 = constant %vtable_148b8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, i32 ()* @cs_mapAlerts, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.811, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv }
@global_var_14958.969 = constant %vtable_14958_type { i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv, i32 (i32*)* @_ZN5boost6detail15sp_counted_base7destroyEv, i32 ()* @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info }
@global_var_14998.866 = constant %vtable_14998_type { i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED1Ev, i32 (i32*)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED0Ev, i32 (i32)* @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEE3runEv }
@global_var_149b0.900 = constant %vtable_149b0_type { i32 (i32*)* @_ZN5boost21thread_resource_errorD1Ev, i32 (i32*)* @_ZN5boost21thread_resource_errorD0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_149d8.913 = constant %vtable_149d8_type { i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv }
@global_var_14a18.902 = constant %vtable_14a18_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, i32 ()* @_ZNK5boost21thread_resource_error4whatEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv }
@global_var_14ab8.911 = constant %vtable_14ab8_type { i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D1Ev, i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev }
@global_var_14af8.892 = constant %vtable_14af8_type { i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev, i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv }

define i32 @cs_mapAlerts() {
dec_label_pc_0:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define void @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %this) local_unnamed_addr {
dec_label_pc_10:
  %eax.global-to-local = alloca i32, align 4
  %v0_11 = load i32, i32* %eax.global-to-local, align 4
  %v11_11 = and i32 %v0_11, -244
  store i32 %v11_11, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define void @"~clone_impl"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_20:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::copy_into, const void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_ %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_40:
  ret void
}

define void @"visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type_.0 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_80:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_9c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v2_9c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_9c = load i32, i32* %eax.global-to-local, align 4
  %v4_9c = trunc i32 %v3_9c to i8
  %v5_9c = add i8 %v4_9c, %v2_9c
  %v21_9c = inttoptr i32 %v3_9c to i8*
  store i8 %v5_9c, i8* %v21_9c, align 1
  %v0_9e = load i32, i32* %ebx.global-to-local, align 4
  %v1_9e = lshr i32 %v0_9e, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_9e = load i32, i32* %eax.global-to-local, align 4
  %v4_9e = trunc i32 %v3_9e to i8
  %v5_9e = add i32 %v1_9e, %v3_9e
  %v20_9e = mul i32 %v5_9e, 256
  %v22_9e = and i32 %v20_9e, 65280
  %v23_9e = and i32 %v0_9e, -65281
  %v24_9e = or i32 %v22_9e, %v23_9e
  store i32 %v24_9e, i32* %ebx.global-to-local, align 4
  %v2_a1 = and i8 %v4_9e, ptrtoint (i8** @global_var_4.814 to i8)
  %v2_a3 = sub i8 %v2_a1, ptrtoint (i8* @global_var_33.815 to i8)
  %v16_a3 = zext i8 %v2_a3 to i32
  %v18_a3 = and i32 %v3_9e, -256
  %v19_a3 = or i32 %v16_a3, %v18_a3
  store i32 %v19_a3, i32* %eax.global-to-local, align 4
  %v1_a5 = inttoptr i32 %v19_a3 to i8*
  %v2_a5 = load i8, i8* %v1_a5, align 1
  %v5_a5 = add i8 %v2_a5, %v2_a3
  store i8 %v5_a5, i8* %v1_a5, align 1
  ret void

; uselistorder directives
  uselistorder i32 %v3_9e, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 0 }
}

define void @"visitation_impl_invoke<boost::detail::variant::invoke_visitor<const boost::signals2::detail::expired_weak_ptr_visitor>, const void*, boost::variant<boost::weak_ptr<void>, boost::signals2::detail::foreign_void_weak_ptr>::has_fallback_type_>"(i32 %arg0, i32 %arg1, i8* %arg2, i32 %arg3, %has_fallback_type__1 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c0:
  ret void
}

define void @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_state17connection_bodiesEv(i32 %this) local_unnamed_addr {
dec_label_pc_d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_d1 = load i32, i32* %eax.global-to-local, align 4
  %v1_d1 = trunc i32 %v0_d1 to i8
  %v2_d1 = and i8 %v1_d1, 12
  %v8_d1 = zext i8 %v2_d1 to i32
  %v10_d1 = and i32 %v0_d1, -256
  %v11_d1 = or i32 %v8_d1, %v10_d1
  store i32 %v11_d1, i32* %eax.global-to-local, align 4
  %v1_d5.phi.trans.insert = inttoptr i32 %v11_d1 to i8*
  %v2_d5.pre = load i8, i8* %v1_d5.phi.trans.insert, align 4
  %v5_d5 = add i8 %v2_d5.pre, %v2_d1
  store i8 %v5_d5, i8* %v1_d5.phi.trans.insert, align 4
  ret void

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define void @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEEclES4_S5_(i32 %this, i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100:
  ret void
}

define void @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSC_SD_EEEEENS1_5mutexEEEEptEv(i32 %this) local_unnamed_addr {
dec_label_pc_104:
  ret void
}

define void @_ZN11CDataStream5writeEPKci(i32 %this, i8* %pch, i32 %nSize) local_unnamed_addr {
dec_label_pc_138:
  %v2_138 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_138 = load i32, i32* @eax, align 4
  %v4_138 = trunc i32 %v3_138 to i8
  %v5_138 = add i8 %v4_138, %v2_138
  %v21_138 = inttoptr i32 %v3_138 to i8*
  store i8 %v5_138, i8* %v21_138, align 1
  ret void
}

define void @"~CMutexLock"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_140:
  ret void
}

define void @"~auto_buffer"(i32 %this, i32 %__in_chrg) local_unnamed_addr {
dec_label_pc_16c:
  %eax.global-to-local = alloca i32, align 4
  %v2_16c = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_16c = load i32, i32* %eax.global-to-local, align 4
  %v4_16c = trunc i32 %v3_16c to i8
  %v5_16c = add i8 %v4_16c, %v2_16c
  %v21_16c = inttoptr i32 %v3_16c to i8*
  store i8 %v5_16c, i8* %v21_16c, align 1
  %v2_16e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_16e = load i32, i32* %eax.global-to-local, align 4
  %v4_16e = trunc i32 %v3_16e to i8
  %v5_16e = add i8 %v4_16e, %v2_16e
  %v21_16e = inttoptr i32 %v3_16e to i8*
  store i8 %v5_16e, i8* %v21_16e, align 1
  ret void
}

define i32 @function_18b() local_unnamed_addr {
dec_label_pc_18b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_(i32 %this, i32 %x) local_unnamed_addr {
dec_label_pc_1a0:
  ret void
}

define i32 @function_1a1() local_unnamed_addr {
dec_label_pc_1a1:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_1a1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_1a1 = add i32 %v0_1a1, -391023424
  %v2_1a1 = inttoptr i32 %v1_1a1 to i32*
  %v3_1a1 = load i32, i32* %v2_1a1, align 4
  %v4_1a1 = add i32 %v3_1a1, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_1a1, i32* %v2_1a1, align 4
  %v0_1a7 = load i32, i32* %esi.global-to-local, align 4
  %v3_1a7 = load i32, i32* %edi.global-to-local, align 4
  %v4_1a7 = and i32 %v3_1a7, %v0_1a7
  store i32 %v4_1a7, i32* %esi.global-to-local, align 4
  %v2_1a9 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1a9 = load i32, i32* @eax, align 4
  %v4_1a9 = trunc i32 %v3_1a9 to i8
  %v5_1a9 = add i8 %v4_1a9, %v2_1a9
  %v21_1a9 = inttoptr i32 %v3_1a9 to i8*
  store i8 %v5_1a9, i8* %v21_1a9, align 1
  %v0_1b0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_1b0 = add i32 %v0_1b0, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_1b0 = inttoptr i32 %v1_1b0 to i8*
  store i8 0, i8* %v2_1b0, align 1
  %v0_1b4 = call i32 @function_18b()
  ret i32 %v0_1b4
}

define void @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE14destroy_back_nEjRKNS_17integral_constantIbLb0EEE(i32 %this, i32 %n, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d0:
  ret void
}

define void @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_(i32 %this, i32 %key1, i32 %key2) local_unnamed_addr {
dec_label_pc_1d4:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1d4 = load i32, i32* %eax.global-to-local, align 4
  %v11_1d4 = xor i32 %v0_1d4, 101
  store i32 %v11_1d4, i32* @eax, align 4
  %v0_1e2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1e2 = icmp eq i32 %v0_1e2, 0
  br i1 %v1_1e2, label %bb, label %dec_label_pc_1ea

bb:                                               ; preds = %dec_label_pc_1d4
  %v3_1e4 = call i32 @function_2fa(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v3_1e4, i32* %eax.global-to-local, align 4
  %v0_1ee.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_1ea

dec_label_pc_1ea:                                 ; preds = %bb, %dec_label_pc_1d4
  %v0_1ee = phi i32 [ %v0_1ee.pre, %bb ], [ %v0_1e2, %dec_label_pc_1d4 ]
  %v0_1ec = phi i32 [ %v3_1e4, %bb ], [ %v11_1d4, %dec_label_pc_1d4 ]
  %v1_1ec = inttoptr i32 %v0_1ec to i32*
  %v2_1ec = load i32, i32* %v1_1ec, align 4
  %v2_1f1 = mul i32 %v0_1ee, 12
  %v3_1f1 = icmp eq i32 %v2_1f1, 0
  store i32 %v2_1f1, i32* %eax.global-to-local, align 4
  %v0_1f4 = load i32, i32* %edx.global-to-local, align 4
  %v2_1f4 = mul i32 %v0_1f4, 2
  %v3_1f4 = add i32 %v0_1f4, -3
  %v4_1f4 = add i32 %v3_1f4, %v2_1f4
  %v2_1f8 = mul i32 %v4_1f4, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1f8 = add i32 %v2_1f8, %v2_1ec
  store i32 %v3_1f8, i32* %edx.global-to-local, align 4
  %v2_1fd = sub i32 %v3_1f8, %v2_1f1
  %v7_1ff = icmp ult i32 %v3_1f8, %v2_1fd
  %v2_201 = or i1 %v3_1f1, %v7_1ff
  br i1 %v2_201, label %bb115, label %dec_label_pc_203

bb115:                                            ; preds = %dec_label_pc_1ea
  %v3_201 = call i32 @function_268()
  store i32 %v3_201, i32* %eax.global-to-local, align 4
  %v0_203.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_203

dec_label_pc_203:                                 ; preds = %bb115, %dec_label_pc_1ea
  %v0_203 = phi i32 [ %v0_203.pre, %bb115 ], [ %v3_1f8, %dec_label_pc_1ea ]
  %v1_203 = inttoptr i32 %v0_203 to i32*
  %v2_203 = load i32, i32* %v1_203, align 4
  store i32 %v2_203, i32* %ecx.global-to-local, align 4
  %v2_207 = ashr i32 %v2_203, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_20a = xor i32 %v2_207, %v2_203
  store i32 %v2_20a, i32* @eax, align 4
  %tmp118 = icmp ult i32 %v2_20a, 20
  br i1 %tmp118, label %bb117, label %dec_label_pc_211

bb117:                                            ; preds = %dec_label_pc_203
  %v3_20f = call i32 @function_280()
  store i32 %v3_20f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_211

dec_label_pc_211:                                 ; preds = %bb117, %dec_label_pc_203
  ret void

; uselistorder directives
  uselistorder i32 %v0_1f4, { 1, 0 }
  uselistorder i32 %v2_1f1, { 0, 2, 1 }
  uselistorder i32 %v11_1d4, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 2, 4 }
}

define i32 @function_259() local_unnamed_addr {
dec_label_pc_259:
  %ebx.global-to-local = alloca i32, align 4
  %v0_259 = load i32, i32* %ebx.global-to-local, align 4
  %v1_259 = add i32 %v0_259, -2095307692
  %v2_259 = inttoptr i32 %v1_259 to i32*
  %v3_259 = load i32, i32* %v2_259, align 4
  %v4_259 = sub i32 %v3_259, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_259, i32* %v2_259, align 4
  %v0_25f = call i32 @function_72d3390c()
  ret i32 %v0_25f
}

define i32 @function_268() local_unnamed_addr {
dec_label_pc_268:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_26c = xor i32 %tmp6, ptrtoint ([2 x i8]* @2 to i32)
  %v4_26c = icmp eq i32 %v3_26c, 0
  store i32 %v3_26c, i32* @eax, align 4
  %v1_273 = icmp eq i1 %v4_26c, false
  br i1 %v1_273, label %bb, label %dec_label_pc_279

bb:                                               ; preds = %dec_label_pc_268
  %v2_273 = call i32 @function_31e()
  br label %dec_label_pc_279

dec_label_pc_279:                                 ; preds = %bb, %dec_label_pc_268
  %v0_27e = phi i32 [ %v2_273, %bb ], [ %v3_26c, %dec_label_pc_268 ]
  ret i32 %v0_27e
}

define i32 @function_280() local_unnamed_addr {
dec_label_pc_280:
  %v0_280 = load i32, i32* @eax, align 4
  ret i32 %v0_280
}

define i32 @function_288() local_unnamed_addr {
dec_label_pc_288:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  call void @"visitation_impl_invoke<boost::detail::variant::destroyer, void*, boost::variant<boost::shared_ptr<void>, boost::signals2::detail::foreign_void_shared_ptr>::has_fallback_type_>"(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i8* bitcast (i32* @1 to i8*), i32 ptrtoint (i32* @1 to i32), %has_fallback_type_.0 { i32 ptrtoint (i32* @1 to i32) }, i32 ptrtoint (i32* @1 to i32))
  %v0_290 = load i32, i32* %ecx.global-to-local, align 4
  %v2_290 = icmp slt i32 %v0_290, 0
  %v0_2c8 = load i32, i32* %edx.global-to-local, align 4
  %v1_2c8 = add i32 %v0_2c8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_2c8 = inttoptr i32 %v1_2c8 to i32*
  %v3_2c8 = load i32, i32* %v2_2c8, align 4
  br i1 %v2_290, label %dec_label_pc_2c8, label %dec_label_pc_294

dec_label_pc_294:                                 ; preds = %dec_label_pc_288
  %v1_29b = inttoptr i32 %v3_2c8 to i32*
  %v2_29b = load i32, i32* %v1_29b, align 4
  store i32 %v2_29b, i32* %ecx.global-to-local, align 4
  ret i32 %v3_2c8

dec_label_pc_2c8:                                 ; preds = %dec_label_pc_288
  %v1_2cf = inttoptr i32 %v3_2c8 to i32*
  %v2_2cf = load i32, i32* %v1_2cf, align 4
  %v1_2d1 = icmp eq i32 %v2_2cf, 0
  br i1 %v1_2d1, label %dec_label_pc_2e5, label %dec_label_pc_2d5

dec_label_pc_2d5:                                 ; preds = %dec_label_pc_2c8
  %v1_2d5 = inttoptr i32 %v2_2cf to i32*
  %v2_2d5 = load i32, i32* %v1_2d5, align 4
  store i32 %v2_2d5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_2e5

dec_label_pc_2e5:                                 ; preds = %dec_label_pc_2d5, %dec_label_pc_2c8
  ret i32 %v2_2cf

; uselistorder directives
  uselistorder i32 %v2_2cf, { 1, 0, 2 }
  uselistorder i32 %v3_2c8, { 2, 1, 0 }
}

define i32 @function_2f1(i32 %arg1) local_unnamed_addr {
dec_label_pc_2f1:
  %eax.global-to-local = alloca i32, align 4
  %v0_2f5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2f5
}

define i32 @function_2fa(i32 %arg1) local_unnamed_addr {
dec_label_pc_2fa:
  %v3_312 = load i32, i32* @eax, align 4
  ret i32 %v3_312
}

define i32 @function_31e() local_unnamed_addr {
dec_label_pc_31e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define void @_ZNK14CUnsignedAlert8ToStringEv(i32 %this) local_unnamed_addr {
dec_label_pc_330:
  ret void
}

define i32 @function_3bd() local_unnamed_addr {
dec_label_pc_3bd:
  %eax.global-to-local = alloca i32, align 4
  %v0_3bd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3bd
}

define i32 @function_3c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c0:
  %eax.global-to-local = alloca i32, align 4
  %v3_3c4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_3c4
}

define i32 @function_4a5(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_4a5:
  ret i32 %arg2
}

define i32 @function_53e(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_53e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_53e = load i32, i32* %ebx.global-to-local, align 4
  %v1_53e = add i32 %v0_53e, -1956895676
  %v2_53e = inttoptr i32 %v1_53e to i32*
  %v3_53e = load i32, i32* %v2_53e, align 4
  %v4_53e = sub i32 %v3_53e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_53e, i32* %v2_53e, align 4
  %v0_545 = load i32, i32* %eax.global-to-local, align 4
  %v11_545 = and i32 %v0_545, or (i32 zext (i8 ptrtoint (i32* @global_var_7c.835 to i8) to i32), i32 -256)
  store i32 %v11_545, i32* @eax, align 4
  %v0_547 = load i32, i32* %edx.global-to-local, align 4
  %v3_547 = xor i32 %v0_547, ptrtoint ([2 x i8]* @2 to i32)
  %v4_547 = icmp eq i32 %v3_547, 0
  store i32 %v3_547, i32* %edx.global-to-local, align 4
  %v1_54e = icmp eq i1 %v4_547, false
  br i1 %v1_54e, label %bb, label %dec_label_pc_550

bb:                                               ; preds = %dec_label_pc_53e
  %v4_544 = ptrtoint i32* %stack_var_0 to i32
  %v3_54e = call i32 @function_5c9(i32 %v4_544)
  store i32 %v3_54e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_550

dec_label_pc_550:                                 ; preds = %bb, %dec_label_pc_53e
  %v0_55a = phi i32 [ %v3_54e, %bb ], [ %v11_545, %dec_label_pc_53e ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_55a

; uselistorder directives
  uselistorder i32 %v11_545, { 1, 0 }
}

define i32 @function_55d() local_unnamed_addr {
dec_label_pc_55d:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_568() local_unnamed_addr {
dec_label_pc_568:
  %eax.global-to-local = alloca i32, align 4
  %v0_568 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_568
}

define i32 @function_571() local_unnamed_addr {
dec_label_pc_571:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_586() local_unnamed_addr {
dec_label_pc_586:
  %eax.global-to-local = alloca i32, align 4
  %v0_586 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_586
}

define i32 @function_587() local_unnamed_addr {
dec_label_pc_587:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_593() local_unnamed_addr {
dec_label_pc_593:
  %v0_593 = call i32 @function_571()
  ret i32 %v0_593
}

define i32 @function_5a1() local_unnamed_addr {
dec_label_pc_5a1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5a9() local_unnamed_addr {
dec_label_pc_5a9:
  %v0_5a9 = call i32 @function_587()
  ret i32 %v0_5a9
}

define i32 @function_5ad() local_unnamed_addr {
dec_label_pc_5ad:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5b7() local_unnamed_addr {
dec_label_pc_5b7:
  %v0_5b7 = call i32 @function_5a1()
  ret i32 %v0_5b7
}

define i32 @function_5b9() local_unnamed_addr {
dec_label_pc_5b9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_5c5() local_unnamed_addr {
dec_label_pc_5c5:
  %v0_5c5 = call i32 @function_5ad()
  ret i32 %v0_5c5
}

define i32 @function_5c7() local_unnamed_addr {
dec_label_pc_5c7:
  %v0_5c7 = call i32 @function_5b9()
  ret i32 %v0_5c7
}

define i32 @function_5c9(i32 %arg1) local_unnamed_addr {
dec_label_pc_5c9:
  %v1_5c9 = load i32, i32* @eax, align 4
  ret i32 %v1_5c9
}

define i32 @function_5d5() local_unnamed_addr {
dec_label_pc_5d5:
  %v0_5d7 = call i32 @function_571()
  ret i32 %v0_5d7

; uselistorder directives
  uselistorder i32 ()* @function_571, { 1, 0 }
}

define void @_ZNK14CUnsignedAlert5printEv(i32 %this) local_unnamed_addr {
dec_label_pc_5e0:
  %stack_var_-20 = alloca i32, align 4
  %v2_5f4 = ptrtoint i32* %stack_var_-20 to i32
  call void @_ZNK14CUnsignedAlert8ToStringEv(i32 %v2_5f4)
  ret void
}

define i32 @function_622(i32 %arg1) local_unnamed_addr {
dec_label_pc_622:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_622 = load i32, i32* %ebx.global-to-local, align 4
  %v1_622 = add i32 %v0_622, 1697391684
  %v2_622 = inttoptr i32 %v1_622 to i32*
  %v3_622 = load i32, i32* %v2_622, align 4
  %v4_622 = add i32 %v3_622, -1
  store i32 %v4_622, i32* %v2_622, align 4
  %v0_628 = load i32, i32* %eax.global-to-local, align 4
  %v3_628 = xor i32 %v0_628, ptrtoint ([2 x i8]* @2 to i32)
  %v4_628 = icmp eq i32 %v3_628, 0
  store i32 %v3_628, i32* %eax.global-to-local, align 4
  %v1_62e = icmp eq i1 %v4_628, false
  br i1 %v1_62e, label %dec_label_pc_635, label %dec_label_pc_630

dec_label_pc_630:                                 ; preds = %dec_label_pc_622
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v3_628

dec_label_pc_635:                                 ; preds = %dec_label_pc_622
  ret i32 %v3_628

; uselistorder directives
  uselistorder i32 %v3_628, { 1, 0, 2, 3 }
}

define void @_ZNK6CAlert6IsNullEv(i32 %this) local_unnamed_addr {
dec_label_pc_660:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_68e, label %dec_label_pc_68a

dec_label_pc_68a:                                 ; preds = %dec_label_pc_660
  ret void

dec_label_pc_68e:                                 ; preds = %dec_label_pc_660
  ret void
}

define void @_ZNK6CAlert7GetHashEv(i32 %this) local_unnamed_addr {
dec_label_pc_6a0:
  %stack_var_-48 = alloca i32, align 4
  %v2_6a9 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_6a9, i32* @esi, align 4
  store i32 %this, i32* @ebx, align 4
  store i32 0, i32* %stack_var_-48, align 4
  ret void
}

define i32 @function_721(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_721:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_721 = load i32, i32* %edi.global-to-local, align 4
  %v1_721 = add i32 %v0_721, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_721, i32* %edi.global-to-local, align 4
  %v0_723 = load i32, i32* %eax.global-to-local, align 4
  %v4_723 = mul i32 %v0_723, 2
  %v16_723 = trunc i32 %v4_723 to i8
  %v20_723 = inttoptr i32 %v4_723 to i8*
  store i32 %v4_723, i32* %eax.global-to-local, align 4
  %v3_725 = load i8, i8* %v20_723, align 2
  %v7_725 = add i8 %v3_725, %v16_723
  store i8 %v7_725, i8* %v20_723, align 2
  %v0_727 = load i32, i32* %ebx.global-to-local, align 4
  %v1_727 = lshr i32 %v0_727, ptrtoint (i32* @global_var_8.813 to i32)
  %v6_727 = add i32 %v1_727, %v4_723
  %v21_727 = urem i32 %v6_727, 256
  %v23_727 = shl i32 %v21_727, ptrtoint (i32* @global_var_8.813 to i32)
  %v24_727 = and i32 %v0_727, -65281
  %v25_727 = or i32 %v23_727, %v24_727
  %v1_729 = add i32 %v25_727, 1
  store i32 %v1_729, i32* %ebx.global-to-local, align 4
  %v14_72a = and i32 %v4_723, ptrtoint (i32* @global_var_ff.838 to i32)
  %v18_72a = and i32 %v4_723, or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256)
  %v19_72a = inttoptr i32 %v18_72a to i8*
  store i32 %v18_72a, i32* %eax.global-to-local, align 4
  %v3_72c = load i8, i8* %v19_72a, align 4
  %v6_72c = trunc i32 %v14_72a to i8
  %v7_72c = add i8 %v3_72c, %v6_72c
  store i8 %v7_72c, i8* %v19_72a, align 4
  %v0_72e = load i32, i32* %ebx.global-to-local, align 4
  %v1_72e = lshr i32 %v0_72e, ptrtoint (i32* @global_var_8.813 to i32)
  %v5_72e = trunc i32 %v18_72a to i8
  %v6_72e = add i32 %v1_72e, %v18_72a
  %v21_72e = and i32 %v6_72e, 255
  %v23_72e = shl i32 %v21_72e, ptrtoint (i32* @global_var_8.813 to i32)
  %v24_72e = and i32 %v0_72e, -65281
  %v25_72e = or i32 %v23_72e, %v24_72e
  %v1_730 = add i32 %v25_72e, 1
  store i32 %v1_730, i32* %ebx.global-to-local, align 4
  %v3_731 = load i8, i8* %v19_72a, align 4
  %v7_731 = or i8 %v3_731, %v5_72e
  %v7_733 = add i8 %v7_731, %v5_72e
  store i8 %v7_733, i8* %v19_72a, align 4
  %v0_735 = load i32, i32* %ebx.global-to-local, align 4
  %v1_735 = lshr i32 %v0_735, ptrtoint (i32* @global_var_8.813 to i32)
  %v6_735 = add i32 %v1_735, %v18_72a
  %v21_735 = urem i32 %v6_735, 256
  %v23_735 = shl i32 %v21_735, ptrtoint (i32* @global_var_8.813 to i32)
  %v24_735 = and i32 %v0_735, -65281
  %v25_735 = or i32 %v23_735, %v24_735
  %v1_737 = add i32 %v25_735, 1
  store i32 %v1_737, i32* %ebx.global-to-local, align 4
  %v8_738 = and i32 %v4_723, and (i32 or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256), i32 ptrtoint (i32* @global_var_ff.838 to i32))
  %v12_738 = and i32 %v4_723, or (i32 and (i32 or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256), i32 ptrtoint (i32* @global_var_ff.838 to i32)), i32 -256)
  store i32 %v12_738, i32* %eax.global-to-local, align 4
  %v1_73a = inttoptr i32 %v12_738 to i8*
  %v2_73a = load i8, i8* %v1_73a, align 4
  %v4_73a = trunc i32 %v8_738 to i8
  %v5_73a = add i8 %v2_73a, %v4_73a
  store i8 %v5_73a, i8* %v1_73a, align 4
  %v0_73c = load i32, i32* %ebx.global-to-local, align 4
  %v1_73c = lshr i32 %v0_73c, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_73c = trunc i32 %v1_73c to i8
  %v3_73c = load i32, i32* %eax.global-to-local, align 4
  %v4_73c = trunc i32 %v3_73c to i8
  %v5_73c = add i8 %v2_73c, %v4_73c
  %v10_73c = icmp ult i8 %v5_73c, %v2_73c
  %v20_73c = zext i8 %v5_73c to i32
  %v22_73c = shl i32 %v20_73c, ptrtoint (i32* @global_var_8.813 to i32)
  %v23_73c = and i32 %v0_73c, -65281
  %v24_73c = or i32 %v22_73c, %v23_73c
  %v1_73e = add i32 %v24_73c, 1
  store i32 %v1_73e, i32* %ebx.global-to-local, align 4
  %v1_73f = inttoptr i32 %v3_73c to i8*
  %v2_73f = load i8, i8* %v1_73f, align 1
  %v6_73f = zext i1 %v10_73c to i8
  %v7_73f = add i8 %v2_73f, %v4_73c
  %v8_73f = add i8 %v7_73f, %v6_73f
  store i8 %v8_73f, i8* %v1_73f, align 1
  %v0_741 = load i32, i32* %eax.global-to-local, align 4
  %v1_741 = inttoptr i32 %v0_741 to i8*
  %v2_741 = load i8, i8* %v1_741, align 1
  %v4_741 = trunc i32 %v0_741 to i8
  %v5_741 = add i8 %v2_741, %v4_741
  store i8 %v5_741, i8* %v1_741, align 1
  %v0_743 = load i32, i32* %ebx.global-to-local, align 4
  %v1_743 = lshr i32 %v0_743, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_743 = trunc i32 %v1_743 to i8
  %v3_743 = load i32, i32* %eax.global-to-local, align 4
  %v4_743 = trunc i32 %v3_743 to i8
  %v5_743 = add i8 %v2_743, %v4_743
  %v10_743 = icmp ult i8 %v5_743, %v2_743
  %v20_743 = zext i8 %v5_743 to i32
  %v22_743 = shl i32 %v20_743, ptrtoint (i32* @global_var_8.813 to i32)
  %v23_743 = and i32 %v0_743, -65281
  %v24_743 = or i32 %v22_743, %v23_743
  %v1_745 = add i32 %v24_743, 1
  store i32 %v1_745, i32* %ebx.global-to-local, align 4
  %v3_746 = zext i1 %v10_743 to i8
  %v4_746 = add i8 %v3_746, %v4_743
  %v22_746 = zext i8 %v4_746 to i32
  %v24_746 = and i32 %v3_743, -256
  %v25_746 = or i32 %v22_746, %v24_746
  store i32 %v25_746, i32* %eax.global-to-local, align 4
  %v1_748 = inttoptr i32 %v25_746 to i8*
  %v2_748 = load i8, i8* %v1_748, align 1
  %v5_748 = add i8 %v2_748, %v4_746
  store i8 %v5_748, i8* %v1_748, align 1
  %v0_74a = load i32, i32* %ebx.global-to-local, align 4
  %v1_74a = lshr i32 %v0_74a, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_74a = trunc i32 %v1_74a to i8
  %v3_74a = load i32, i32* %eax.global-to-local, align 4
  %v4_74a = trunc i32 %v3_74a to i8
  %v5_74a = add i8 %v2_74a, %v4_74a
  %v10_74a = icmp ult i8 %v5_74a, %v2_74a
  %v20_74a = zext i8 %v5_74a to i32
  %v22_74a = shl i32 %v20_74a, ptrtoint (i32* @global_var_8.813 to i32)
  %v23_74a = and i32 %v0_74a, -65281
  %v24_74a = or i32 %v22_74a, %v23_74a
  %v1_74c = add i32 %v24_74a, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_74c, i32* %ebx.global-to-local, align 4
  %v1_74d = inttoptr i32 %v3_74a to i8*
  %v2_74d = load i8, i8* %v1_74d, align 1
  %v6_74d = zext i1 %v10_74a to i8
  %v7_74d = sub i8 %v2_74d, %v4_74a
  %v8_74d = add i8 %v7_74d, %v6_74d
  store i8 %v8_74d, i8* %v1_74d, align 1
  %v0_74f = load i32, i32* %eax.global-to-local, align 4
  %v1_74f = inttoptr i32 %v0_74f to i8*
  %v2_74f = load i8, i8* %v1_74f, align 1
  %v4_74f = trunc i32 %v0_74f to i8
  %v5_74f = add i8 %v2_74f, %v4_74f
  store i8 %v5_74f, i8* %v1_74f, align 1
  %v0_751 = load i32, i32* %ebx.global-to-local, align 4
  %v1_751 = lshr i32 %v0_751, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_751 = trunc i32 %v1_751 to i8
  %v3_751 = load i32, i32* %eax.global-to-local, align 4
  %v4_751 = trunc i32 %v3_751 to i8
  %v5_751 = add i8 %v2_751, %v4_751
  %v10_751 = icmp ult i8 %v5_751, %v2_751
  %v20_751 = zext i8 %v5_751 to i32
  %v22_751 = shl i32 %v20_751, ptrtoint (i32* @global_var_8.813 to i32)
  %v23_751 = and i32 %v0_751, -65281
  %v24_751 = or i32 %v22_751, %v23_751
  %v1_753 = add i32 %v24_751, 1
  store i32 %v1_753, i32* %ebx.global-to-local, align 4
  %v3_754 = zext i1 %v10_751 to i8
  %v4_754 = add i8 %v3_754, %v4_751
  %v29_754 = zext i8 %v4_754 to i32
  %v31_754 = and i32 %v3_751, -256
  %v32_754 = or i32 %v29_754, %v31_754
  store i32 %v32_754, i32* %eax.global-to-local, align 4
  %v1_756 = inttoptr i32 %v32_754 to i8*
  %v2_756 = load i8, i8* %v1_756, align 1
  %v5_756 = add i8 %v2_756, %v4_754
  store i8 %v5_756, i8* %v1_756, align 1
  %v0_758 = load i32, i32* %ecx.global-to-local, align 4
  %v1_758 = add i32 %v0_758, -955767716
  %v2_758 = inttoptr i32 %v1_758 to i8*
  %v3_758 = load i8, i8* %v2_758, align 1
  %v5_758 = trunc i32 %v0_758 to i8
  %v6_758 = add i8 %v3_758, %v5_758
  store i8 %v6_758, i8* %v2_758, align 1
  %v0_75f = load i32, i32* %eax.global-to-local, align 4
  %v1_75f = trunc i32 %v0_75f to i8
  %v2_75f = and i8 %v1_75f, ptrtoint (i8** @global_var_4.814 to i8)
  %v8_75f = zext i8 %v2_75f to i32
  %v10_75f = and i32 %v0_75f, -256
  %v11_75f = or i32 %v8_75f, %v10_75f
  store i32 %v11_75f, i32* %eax.global-to-local, align 4
  %v1_761 = inttoptr i32 %v11_75f to i8*
  %v2_761 = load i8, i8* %v1_761, align 4
  %v5_761 = and i8 %v2_761, %v2_75f
  store i8 %v5_761, i8* %v1_761, align 4
  %v0_763 = load i32, i32* %eax.global-to-local, align 4
  %v1_763 = inttoptr i32 %v0_763 to i8*
  %v2_763 = load i8, i8* %v1_763, align 1
  %v4_763 = trunc i32 %v0_763 to i8
  %v5_763 = add i8 %v2_763, %v4_763
  store i8 %v5_763, i8* %v1_763, align 1
  %v0_76d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_76d, i32* %eax.global-to-local, align 4
  %v4_773 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_77a = icmp eq i1 %v4_773, false
  br i1 %v1_77a, label %dec_label_pc_784, label %dec_label_pc_77c

dec_label_pc_77c:                                 ; preds = %dec_label_pc_721
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_76d

dec_label_pc_784:                                 ; preds = %dec_label_pc_721
  ret i32 %v0_76d

; uselistorder directives
  uselistorder i32 %v12_738, { 1, 0 }
  uselistorder i8* %v19_72a, { 1, 2, 0, 3 }
  uselistorder i32 %v18_72a, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v4_723, { 6, 5, 4, 3, 7, 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 15 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 15 }
}

define void @_ZNK6CAlert10IsInEffectEv(i32 %this) local_unnamed_addr {
dec_label_pc_790:
  store i32 %this, i32* @ebx, align 4
  ret void
}

define i32 @function_7a9(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_7a9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_7a9 = load i32, i32* %edx.global-to-local, align 4
  %v1_7a9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_7a9 = add i32 %v1_7a9, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_7a9 = inttoptr i32 %v2_7a9 to i32*
  %v4_7a9 = load i32, i32* %v3_7a9, align 4
  %v0_7ac = load i32, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %eax.global-to-local, align 4
  %v5_7b3 = icmp slt i32 %v0_7a9, %v4_7a9
  br i1 %v5_7b3, label %dec_label_pc_7b9, label %dec_label_pc_7b5

dec_label_pc_7b5:                                 ; preds = %dec_label_pc_7a9
  %v7_7b5 = icmp sgt i32 %v0_7a9, %v4_7a9
  br i1 %v7_7b5, label %dec_label_pc_7b7, label %dec_label_pc_7d0

dec_label_pc_7b7:                                 ; preds = %dec_label_pc_7b5
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7b9

dec_label_pc_7b9:                                 ; preds = %dec_label_pc_7d5, %dec_label_pc_7d0, %dec_label_pc_7b7, %dec_label_pc_7a9
  %v0_7d7 = phi i32 [ 0, %dec_label_pc_7d5 ], [ ptrtoint (i8** @global_var_1.820 to i32), %dec_label_pc_7d0 ], [ 0, %dec_label_pc_7b7 ], [ ptrtoint (i8** @global_var_1.820 to i32), %dec_label_pc_7a9 ]
  %v3_7bd = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_7bd = icmp eq i32 %v3_7bd, 0
  store i32 %v3_7bd, i32* %edx.global-to-local, align 4
  %v1_7c4 = icmp eq i1 %v4_7bd, false
  br i1 %v1_7c4, label %dec_label_pc_7d9, label %dec_label_pc_7c6

dec_label_pc_7c6:                                 ; preds = %dec_label_pc_7b9
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_7d7

dec_label_pc_7d0:                                 ; preds = %dec_label_pc_7b5
  %v2_7d0 = add i32 %v1_7a9, 12
  %v3_7d0 = inttoptr i32 %v2_7d0 to i32*
  %v4_7d0 = load i32, i32* %v3_7d0, align 4
  %v10_7d0 = icmp ult i32 %v0_7ac, %v4_7d0
  br i1 %v10_7d0, label %dec_label_pc_7b9, label %dec_label_pc_7d5

dec_label_pc_7d5:                                 ; preds = %dec_label_pc_7d0
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_7b9

dec_label_pc_7d9:                                 ; preds = %dec_label_pc_7b9
  ret i32 %v0_7d7
}

define i32 @function_7dd() local_unnamed_addr {
dec_label_pc_7dd:
  %eax.global-to-local = alloca i32, align 4
  %v0_7dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_7dd
}

define void @_ZNK6CAlert7CancelsERKS_(i32 %this, i32 %alert) local_unnamed_addr {
dec_label_pc_7e0:
  %v0_7eb = load i32, i32* @esi, align 4
  store i32 %alert, i32* @esi, align 4
  %v0_7f3 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  call void @_ZNK6CAlert10IsInEffectEv(i32 %this)
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %dec_label_pc_7e0.dec_label_pc_853_crit_edge, label %dec_label_pc_811

dec_label_pc_7e0.dec_label_pc_853_crit_edge:      ; preds = %dec_label_pc_7e0
  br label %dec_label_pc_853

dec_label_pc_811:                                 ; preds = %dec_label_pc_7e0
  %v0_811 = load i32, i32* @esi, align 4
  %v1_811 = add i32 %v0_811, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_811 = inttoptr i32 %v1_811 to i32*
  %v3_811 = load i32, i32* %v2_811, align 4
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* @edi, align 4
  %v1_819 = load i32, i32* @ebx, align 4
  %v2_819 = add i32 %v1_819, 24
  %v3_819 = inttoptr i32 %v2_819 to i32*
  %v4_819 = load i32, i32* %v3_819, align 4
  %v7_81c = icmp sgt i32 %v3_811, %v4_819
  br i1 %v7_81c, label %dec_label_pc_81e, label %dec_label_pc_853

dec_label_pc_81e:                                 ; preds = %dec_label_pc_811
  %v1_81e = add i32 %v1_819, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_81e = inttoptr i32 %v1_81e to i32*
  %v3_81e = load i32, i32* %v2_81e, align 4
  store i32 0, i32* @edi, align 4
  %v1_823 = add i32 %v1_819, 32
  store i32 %v1_823, i32* @esi, align 4
  %v1_826 = icmp eq i32 %v3_81e, 0
  br i1 %v1_826, label %dec_label_pc_853, label %dec_label_pc_82a

dec_label_pc_82a:                                 ; preds = %dec_label_pc_81e
  br label %dec_label_pc_839.outer

dec_label_pc_830:                                 ; preds = %dec_label_pc_839
  %v1_832 = add i32 %v1_839, 8
  %v2_832 = inttoptr i32 %v1_832 to i32*
  %v3_832 = load i32, i32* %v2_832, align 4
  %v1_835 = icmp eq i32 %v3_832, 0
  br i1 %v1_835, label %dec_label_pc_845, label %dec_label_pc_839.outer

dec_label_pc_839.outer:                           ; preds = %dec_label_pc_830, %dec_label_pc_82a
  %v0_8478.ph = phi i32 [ %v1_839, %dec_label_pc_830 ], [ %v1_823, %dec_label_pc_82a ]
  %v1_839.ph = phi i32 [ %v3_832, %dec_label_pc_830 ], [ %v3_81e, %dec_label_pc_82a ]
  br label %dec_label_pc_839

dec_label_pc_839:                                 ; preds = %dec_label_pc_839.outer, %dec_label_pc_83e
  %v1_839 = phi i32 [ %v3_83e, %dec_label_pc_83e ], [ %v1_839.ph, %dec_label_pc_839.outer ]
  %v2_839 = add i32 %v1_839, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_839 = inttoptr i32 %v2_839 to i32*
  %v4_839 = load i32, i32* %v3_839, align 4
  %v7_83c = icmp sgt i32 %v3_811, %v4_839
  br i1 %v7_83c, label %dec_label_pc_83e, label %dec_label_pc_830

dec_label_pc_83e:                                 ; preds = %dec_label_pc_839
  %v1_83e = add i32 %v1_839, 12
  %v2_83e = inttoptr i32 %v1_83e to i32*
  %v3_83e = load i32, i32* %v2_83e, align 4
  %v1_841 = icmp eq i32 %v3_83e, 0
  %v1_843 = icmp eq i1 %v1_841, false
  br i1 %v1_843, label %dec_label_pc_839, label %dec_label_pc_845.loopexit

dec_label_pc_845.loopexit:                        ; preds = %dec_label_pc_83e
  %phitmp = and i32 %v3_83e, -256
  br label %dec_label_pc_845

dec_label_pc_845:                                 ; preds = %dec_label_pc_830, %dec_label_pc_845.loopexit
  %v4_84e = phi i32 [ %phitmp, %dec_label_pc_845.loopexit ], [ 0, %dec_label_pc_830 ]
  %v1_84b = phi i32 [ %v0_8478.ph, %dec_label_pc_845.loopexit ], [ %v1_839, %dec_label_pc_830 ]
  store i32 0, i32* @edi, align 4
  %v12_847 = icmp eq i32 %v1_84b, %v1_823
  br i1 %v12_847, label %dec_label_pc_853, label %dec_label_pc_84b

dec_label_pc_84b:                                 ; preds = %dec_label_pc_845
  %v2_84b = add i32 %v1_84b, 16
  %v3_84b = inttoptr i32 %v2_84b to i32*
  %v4_84b = load i32, i32* %v3_84b, align 4
  %v5_84b = sub i32 %v3_811, %v4_84b
  %v11_84b = xor i32 %v4_84b, %v3_811
  %v12_84b = xor i32 %v5_84b, %v3_811
  %v13_84b = and i32 %v12_84b, %v11_84b
  %v14_84b = icmp slt i32 %v13_84b, 0
  %v16_84b = icmp slt i32 %v5_84b, 0
  %v2_84e = icmp eq i1 %v16_84b, %v14_84b
  %v3_84e = zext i1 %v2_84e to i32
  %v6_84e = or i32 %v3_84e, %v4_84e
  store i32 %v6_84e, i32* @edi, align 4
  br label %dec_label_pc_853

dec_label_pc_853:                                 ; preds = %dec_label_pc_7e0.dec_label_pc_853_crit_edge, %dec_label_pc_811, %dec_label_pc_84b, %dec_label_pc_845, %dec_label_pc_81e
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_872, label %dec_label_pc_862

dec_label_pc_862:                                 ; preds = %dec_label_pc_853
  store i32 %v0_7eb, i32* @esi, align 4
  store i32 %v0_7f3, i32* @edi, align 4
  ret void

dec_label_pc_872:                                 ; preds = %dec_label_pc_853
  ret void

; uselistorder directives
  uselistorder i32 %v5_84b, { 1, 0 }
  uselistorder i32 %v1_84b, { 1, 0 }
  uselistorder i32 %v3_83e, { 0, 2, 1 }
  uselistorder i32 %v1_839, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_811, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_853, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_845, { 1, 0 }
  uselistorder label %dec_label_pc_839, { 1, 0 }
}

define void @_ZNK6CAlert9AppliesToEiSs(i32 %this, i32 %nVersion, i32 %strSubVerIn) local_unnamed_addr {
dec_label_pc_880:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_883 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %this, i32* %ebx.global-to-local, align 4
  %v0_88b = load i32, i32* %esi.global-to-local, align 4
  store i32 %strSubVerIn, i32* %esi.global-to-local, align 4
  %v0_893 = load i32, i32* %edi.global-to-local, align 4
  store i32 %nVersion, i32* %edi.global-to-local, align 4
  %v0_8a7 = load i32, i32* %ebp.global-to-local, align 4
  call void @_ZNK6CAlert10IsInEffectEv(i32 %this)
  br i1 icmp eq (i8 ptrtoint (i32* @1 to i8), i8 0), label %dec_label_pc_8be, label %dec_label_pc_8b9

dec_label_pc_8b9:                                 ; preds = %dec_label_pc_880
  %v0_8b9 = load i32, i32* @ebx, align 4
  %v1_8b9 = add i32 %v0_8b9, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_8b9 = inttoptr i32 %v1_8b9 to i32*
  %v3_8b9 = load i32, i32* %v2_8b9, align 4
  %v4_8b9 = load i32, i32* %edi.global-to-local, align 4
  %v7_8bc = icmp sgt i32 %v3_8b9, %v4_8b9
  br i1 %v7_8bc, label %dec_label_pc_8be, label %dec_label_pc_8e8

dec_label_pc_8be:                                 ; preds = %dec_label_pc_8b9, %dec_label_pc_8f9, %dec_label_pc_8ed, %dec_label_pc_8e8, %dec_label_pc_880
  %v0_8be = phi i32 [ 0, %dec_label_pc_8b9 ], [ 0, %dec_label_pc_8f9 ], [ ptrtoint (i8** @global_var_1.820 to i32), %dec_label_pc_8ed ], [ 0, %dec_label_pc_8e8 ], [ 0, %dec_label_pc_880 ]
  store i32 %v0_8be, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_8d1

bb:                                               ; preds = %dec_label_pc_8be
  %v2_8cb = call i32 @function_990()
  br label %dec_label_pc_8d1

dec_label_pc_8d1:                                 ; preds = %bb, %dec_label_pc_8be
  store i32 %v0_883, i32* %ebx.global-to-local, align 4
  store i32 %v0_88b, i32* %esi.global-to-local, align 4
  store i32 %v0_893, i32* %edi.global-to-local, align 4
  store i32 %v0_8a7, i32* %ebp.global-to-local, align 4
  ret void

dec_label_pc_8e8:                                 ; preds = %dec_label_pc_8b9
  %v2_8e8 = add i32 %v0_8b9, ptrtoint (i32* @global_var_38.831 to i32)
  %v3_8e8 = inttoptr i32 %v2_8e8 to i32*
  %v4_8e8 = load i32, i32* %v3_8e8, align 4
  %v8_8eb = icmp sgt i32 %v4_8b9, %v4_8e8
  br i1 %v8_8eb, label %dec_label_pc_8be, label %dec_label_pc_8ed

dec_label_pc_8ed:                                 ; preds = %dec_label_pc_8e8
  %v1_8ed = add i32 %v0_8b9, 80
  %v2_8ed = inttoptr i32 %v1_8ed to i32*
  %v3_8ed = load i32, i32* %v2_8ed, align 4
  store i32 %v3_8ed, i32* %edi.global-to-local, align 4
  %v1_8f5 = icmp eq i32 %v3_8ed, 0
  br i1 %v1_8f5, label %dec_label_pc_8be, label %dec_label_pc_8f9

dec_label_pc_8f9:                                 ; preds = %dec_label_pc_8ed
  %v1_8fc = add i32 %v0_8b9, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_8fc = inttoptr i32 %v1_8fc to i32*
  %v3_8fc = load i32, i32* %v2_8fc, align 4
  store i32 %v3_8fc, i32* %ebx.global-to-local, align 4
  %v1_905 = icmp eq i32 %v3_8fc, 0
  br i1 %v1_905, label %dec_label_pc_8be, label %dec_label_pc_909

dec_label_pc_909:                                 ; preds = %dec_label_pc_8f9
  %v0_909 = load i32, i32* %esi.global-to-local, align 4
  %v1_909 = inttoptr i32 %v0_909 to i32*
  %v2_909 = load i32, i32* %v1_909, align 4
  store i32 %v2_909, i32* %ebp.global-to-local, align 4
  %v1_90f = add i32 %v2_909, -12
  %v2_90f = inttoptr i32 %v1_90f to i32*
  %v3_90f = load i32, i32* %v2_90f, align 4
  store i32 %v3_90f, i32* %edi.global-to-local, align 4
  %v1_923 = add i32 %v3_8fc, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_923 = inttoptr i32 %v1_923 to i32*
  %v3_923 = load i32, i32* %v2_923, align 4
  %v1_926 = add i32 %v3_923, -12
  %v2_926 = inttoptr i32 %v1_926 to i32*
  %v3_926 = load i32, i32* %v2_926, align 4
  %v2_937 = sub i32 %v3_926, %v3_90f
  store i32 %v2_937, i32* %esi.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder label %dec_label_pc_8be, { 1, 2, 3, 0, 4 }
}

define i32 @function_941() local_unnamed_addr {
dec_label_pc_941:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_941 = add i32 %tmp91, -968618048
  %v2_941 = inttoptr i32 %v1_941 to i32*
  %v3_941 = load i32, i32* %v2_941, align 4
  %v4_941 = add i32 %v3_941, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_941, i32* %v2_941, align 4
  %v0_947 = load i32, i32* %eax.global-to-local, align 4
  %v0_94b = load i32, i32* %ebx.global-to-local, align 4
  %v1_94b = add i32 %v0_94b, 12
  %v2_94b = inttoptr i32 %v1_94b to i32*
  %v3_94b = load i32, i32* %v2_94b, align 4
  store i32 %v3_94b, i32* %ebx.global-to-local, align 4
  ret i32 %v0_947
}

define i32 @function_950(i32 %arg1) local_unnamed_addr {
dec_label_pc_950:
  %v1_960 = add i32 %arg1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_960 = inttoptr i32 %v1_960 to i32*
  %v3_960 = load i32, i32* %v2_960, align 4
  ret i32 %v3_960
}

define i32 @function_97e() local_unnamed_addr {
dec_label_pc_97e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_97e = add i32 %tmp91, 264407488
  %v2_97e = inttoptr i32 %v1_97e to i32*
  %v3_97e = load i32, i32* %v2_97e, align 4
  %v4_97e = add i32 %v3_97e, 1
  store i32 %v4_97e, i32* %v2_97e, align 4
  %v0_985 = load i32, i32* %eax.global-to-local, align 4
  %v1_985 = load i32, i32* %ebx.global-to-local, align 4
  %v2_985 = and i32 %v0_985, ptrtoint (i32* @global_var_ff.838 to i32)
  %v3_985 = add i32 %v1_985, %v2_985
  %v4_985 = inttoptr i32 %v3_985 to i8*
  %v5_985 = load i8, i8* %v4_985, align 1
  %v6_985 = zext i8 %v5_985 to i32
  %v8_985 = and i32 %v0_985, -256
  %v9_985 = or i32 %v6_985, %v8_985
  store i32 %v9_985, i32* %eax.global-to-local, align 4
  %v0_986 = load i32, i32* %edx.global-to-local, align 4
  %v1_986 = sub i32 -1, %v0_986
  %v2_988 = lshr i32 %v1_986, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_988, i32* %edx.global-to-local, align 4
  ret i32 %v9_985
}

define i32 @function_990() local_unnamed_addr {
dec_label_pc_990:
  %v1_999 = load i32, i32* @eax, align 4
  ret i32 %v1_999
}

define void @_ZNK6CAlert11AppliesToMeEv(i32 %this) local_unnamed_addr {
dec_label_pc_9a0:
  store i32 %this, i32* @edi, align 4
  ret void
}

define i32 @function_a22() local_unnamed_addr {
dec_label_pc_a22:
  %eax.global-to-local = alloca i32, align 4
  %v0_a22 = load i32, i32* %eax.global-to-local, align 4
  %v11_a22 = and i32 %v0_a22, -125
  store i32 %v11_a22, i32* %eax.global-to-local, align 4
  ret i32 %v11_a22

; uselistorder directives
  uselistorder i32 %v11_a22, { 1, 0 }
}

define i32 @function_a3e(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a3e:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_a3e = load i32, i32* %ebx.global-to-local, align 4
  %v1_a3e = add i32 %v0_a3e, 1697391700
  %v2_a3e = inttoptr i32 %v1_a3e to i32*
  %v3_a3e = load i32, i32* %v2_a3e, align 4
  %v4_a3e = add i32 %v3_a3e, -1
  store i32 %v4_a3e, i32* %v2_a3e, align 4
  %v0_a44 = load i32, i32* %edx.global-to-local, align 4
  %v3_a44 = xor i32 %v0_a44, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a44 = icmp eq i32 %v3_a44, 0
  store i32 %v3_a44, i32* %edx.global-to-local, align 4
  %v0_a4a = load i32, i32* %edi.global-to-local, align 4
  %v1_a4c = icmp eq i1 %v4_a44, false
  br i1 %v1_a4c, label %dec_label_pc_a55, label %dec_label_pc_a4e

dec_label_pc_a4e:                                 ; preds = %dec_label_pc_a3e
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %edi.global-to-local, align 4
  ret i32 %v0_a4a

dec_label_pc_a55:                                 ; preds = %dec_label_pc_a3e
  ret i32 %v0_a4a

; uselistorder directives
  uselistorder i32 %v0_a4a, { 1, 0 }
}

define i32 @function_a66() local_unnamed_addr {
dec_label_pc_a66:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a76() local_unnamed_addr {
dec_label_pc_a76:
  %v0_a78 = call i32 @function_a66()
  ret i32 %v0_a78
}

define void @_ZN14CUnsignedAlert7SetNullEv(i32 %this) local_unnamed_addr {
dec_label_pc_a80:
  %eax.global-to-local = alloca i32, align 4
  store i32 %this, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_a94 = add i32 %this, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_a94 = inttoptr i32 %v1_a94 to i32*
  %v3_a94 = load i32, i32* %v2_a94, align 4
  store i32 %v3_a94, i32* %eax.global-to-local, align 4
  %v1_a97 = inttoptr i32 %this to i32*
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %v1_a97, align 4
  %v0_a9d = load i32, i32* @ebx, align 4
  %v1_a9d = add i32 %v0_a9d, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a9d = inttoptr i32 %v1_a9d to i32*
  store i32 0, i32* %v2_a9d, align 4
  %v0_aa4 = load i32, i32* @ebx, align 4
  %v1_aa4 = add i32 %v0_aa4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_aa4 = inttoptr i32 %v1_aa4 to i32*
  store i32 0, i32* %v2_aa4, align 4
  %v0_aab = load i32, i32* @ebx, align 4
  %v1_aab = add i32 %v0_aab, 12
  %v2_aab = inttoptr i32 %v1_aab to i32*
  store i32 0, i32* %v2_aab, align 4
  %v0_ab2 = load i32, i32* @ebx, align 4
  %v1_ab2 = add i32 %v0_ab2, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_ab2 = inttoptr i32 %v1_ab2 to i32*
  store i32 0, i32* %v2_ab2, align 4
  %v0_ab9 = load i32, i32* @ebx, align 4
  %v1_ab9 = add i32 %v0_ab9, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_ab9 = inttoptr i32 %v1_ab9 to i32*
  store i32 0, i32* %v2_ab9, align 4
  %v0_ac0 = load i32, i32* @ebx, align 4
  %v1_ac0 = add i32 %v0_ac0, 24
  %v2_ac0 = inttoptr i32 %v1_ac0 to i32*
  store i32 0, i32* %v2_ac0, align 4
  %v0_ac7 = load i32, i32* %eax.global-to-local, align 4
  %v0_acb = load i32, i32* @ebx, align 4
  %v1_acb = add i32 %v0_acb, 28
  store i32 %v1_acb, i32* %eax.global-to-local, align 4
  %v2_ad1 = call i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(i32 %v1_acb, i32 %v0_ac7)
  %v0_ad6 = load i32, i32* @ebx, align 4
  %v1_ad6 = add i32 %v0_ad6, 32
  store i32 %v1_ad6, i32* %eax.global-to-local, align 4
  %v2_ad9 = add i32 %v0_ad6, 40
  %v3_ad9 = inttoptr i32 %v2_ad9 to i32*
  store i32 %v1_ad6, i32* %v3_ad9, align 4
  %v0_adc = load i32, i32* %eax.global-to-local, align 4
  %v1_adc = load i32, i32* @ebx, align 4
  %v2_adc = add i32 %v1_adc, 44
  %v3_adc = inttoptr i32 %v2_adc to i32*
  store i32 %v0_adc, i32* %v3_adc, align 4
  %v0_adf = load i32, i32* @ebx, align 4
  %v1_adf = add i32 %v0_adf, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_adf = inttoptr i32 %v1_adf to i32*
  %v3_adf = load i32, i32* %v2_adf, align 4
  store i32 %v3_adf, i32* %eax.global-to-local, align 4
  %v1_ae2 = add i32 %v0_adf, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_ae2 = inttoptr i32 %v1_ae2 to i32*
  store i32 0, i32* %v2_ae2, align 4
  %v0_ae9 = load i32, i32* @ebx, align 4
  %v1_ae9 = add i32 %v0_ae9, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_ae9 = inttoptr i32 %v1_ae9 to i32*
  store i32 0, i32* %v2_ae9, align 4
  %v0_af0 = load i32, i32* @ebx, align 4
  %v1_af0 = add i32 %v0_af0, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_af0 = inttoptr i32 %v1_af0 to i32*
  store i32 0, i32* %v2_af0, align 4
  %v0_af7 = load i32, i32* @ebx, align 4
  %v1_af7 = add i32 %v0_af7, ptrtoint (i32* @global_var_38.831 to i32)
  %v2_af7 = inttoptr i32 %v1_af7 to i32*
  store i32 0, i32* %v2_af7, align 4
  %v0_afe = load i32, i32* %eax.global-to-local, align 4
  %v0_b02 = load i32, i32* @ebx, align 4
  %v1_b02 = add i32 %v0_b02, ptrtoint (i32* @global_var_3c.843 to i32)
  store i32 %v1_b02, i32* %eax.global-to-local, align 4
  %v2_b08 = call i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE(i32 %v1_b02, i32 %v0_afe)
  %v0_b0d = load i32, i32* @ebx, align 4
  %v1_b0d = add i32 %v0_b0d, ptrtoint (i32* @global_var_40.840 to i32)
  store i32 %v1_b0d, i32* %eax.global-to-local, align 4
  %v2_b10 = add i32 %v0_b0d, ptrtoint (i8** @global_var_48.821 to i32)
  %v3_b10 = inttoptr i32 %v2_b10 to i32*
  store i32 %v1_b0d, i32* %v3_b10, align 4
  %v0_b13 = load i32, i32* %eax.global-to-local, align 4
  %v1_b13 = load i32, i32* @ebx, align 4
  %v2_b13 = add i32 %v1_b13, 76
  %v3_b13 = inttoptr i32 %v2_b13 to i32*
  store i32 %v0_b13, i32* %v3_b13, align 4
  %v0_b16 = load i32, i32* @ebx, align 4
  %v1_b16 = add i32 %v0_b16, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_b16 = inttoptr i32 %v1_b16 to i32*
  store i32 0, i32* %v2_b16, align 4
  %v0_b1d = load i32, i32* @ebx, align 4
  %v1_b1d = add i32 %v0_b1d, 80
  %v2_b1d = inttoptr i32 %v1_b1d to i32*
  store i32 0, i32* %v2_b1d, align 4
  %v0_b24 = load i32, i32* @ebx, align 4
  %v1_b24 = add i32 %v0_b24, ptrtoint (i32* @global_var_54.830 to i32)
  %v2_b24 = inttoptr i32 %v1_b24 to i32*
  store i32 0, i32* %v2_b24, align 4
  %v0_b33 = load i32, i32* @ebx, align 4
  %v1_b33 = add i32 %v0_b33, 88
  store i32 %v1_b33, i32* %eax.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32 %this, { 1, 0, 2 }
}

define i32 @function_b81() local_unnamed_addr {
dec_label_pc_b81:
  %eax.global-to-local = alloca i32, align 4
  %v0_b81 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b81
}

define i32 @function_b99(i32 %arg1) local_unnamed_addr {
dec_label_pc_b99:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_b99 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b99 = add i32 %v0_b99, 1696343108
  %v2_b99 = inttoptr i32 %v1_b99 to i32*
  %v3_b99 = load i32, i32* %v2_b99, align 4
  %v4_b99 = add i32 %v3_b99, -1
  store i32 %v4_b99, i32* %v2_b99, align 4
  %v0_b9f = load i32, i32* %eax.global-to-local, align 4
  %v3_b9f = xor i32 %v0_b9f, ptrtoint ([2 x i8]* @2 to i32)
  %v4_b9f = icmp eq i32 %v3_b9f, 0
  store i32 %v3_b9f, i32* %eax.global-to-local, align 4
  %v1_ba5 = icmp eq i1 %v4_b9f, false
  br i1 %v1_ba5, label %dec_label_pc_bac, label %dec_label_pc_ba7

dec_label_pc_ba7:                                 ; preds = %dec_label_pc_b99
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v3_b9f

dec_label_pc_bac:                                 ; preds = %dec_label_pc_b99
  ret i32 %v3_b9f

; uselistorder directives
  uselistorder i32 %v3_b9f, { 1, 0, 2, 3 }
}

define void @_ZN6CAlert7SetNullEv(i32 %this) local_unnamed_addr {
dec_label_pc_bc0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_bc0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %this, i32* %ebx.global-to-local, align 4
  call void @_ZN14CUnsignedAlert7SetNullEv(i32 %this)
  %v0_bdc = load i32, i32* @ebx, align 4
  %v1_bdc = add i32 %v0_bdc, ptrtoint (i32* @global_var_64.837 to i32)
  %v2_bdc = inttoptr i32 %v1_bdc to i32*
  %v3_bdc = load i32, i32* %v2_bdc, align 4
  %v2_bdf = add i32 %v0_bdc, 104
  %v3_bdf = inttoptr i32 %v2_bdf to i32*
  store i32 %v3_bdc, i32* %v3_bdf, align 4
  %v0_be2 = load i32, i32* @ebx, align 4
  %v1_be2 = add i32 %v0_be2, ptrtoint (i32* @global_var_70.844 to i32)
  %v2_be2 = inttoptr i32 %v1_be2 to i32*
  %v3_be2 = load i32, i32* %v2_be2, align 4
  %v2_be5 = add i32 %v0_be2, ptrtoint (i32* @global_var_74.845 to i32)
  %v3_be5 = inttoptr i32 %v2_be5 to i32*
  store i32 %v3_be2, i32* %v3_be5, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_bfa, label %dec_label_pc_bf5

dec_label_pc_bf5:                                 ; preds = %dec_label_pc_bc0
  store i32 %v0_bc0, i32* %ebx.global-to-local, align 4
  ret void

dec_label_pc_bfa:                                 ; preds = %dec_label_pc_bc0
  ret void

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0 }
}

define void @_ZN6CAlert14getAlertByHashERK7uint256(i32 %hash) local_unnamed_addr {
dec_label_pc_c00:
  %eax.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %hash, i32* %esi.global-to-local, align 4
  %v1_c27 = add i32 %hash, 32
  store i32 %v1_c27, i32* %eax.global-to-local, align 4
  %v2_c2a = add i32 %hash, 40
  %v3_c2a = inttoptr i32 %v2_c2a to i32*
  store i32 %v1_c27, i32* %v3_c2a, align 4
  %v0_c2d = load i32, i32* %eax.global-to-local, align 4
  %v1_c2d = load i32, i32* %esi.global-to-local, align 4
  %v2_c2d = add i32 %v1_c2d, 44
  %v3_c2d = inttoptr i32 %v2_c2d to i32*
  store i32 %v0_c2d, i32* %v3_c2d, align 4
  %v0_c30 = load i32, i32* %esi.global-to-local, align 4
  %v1_c30 = add i32 %v0_c30, ptrtoint (i32* @global_var_40.840 to i32)
  store i32 %v1_c30, i32* %eax.global-to-local, align 4
  %v1_c33 = add i32 %v0_c30, 32
  %v2_c33 = inttoptr i32 %v1_c33 to i32*
  store i32 0, i32* %v2_c33, align 4
  %v0_c3a = load i32, i32* %esi.global-to-local, align 4
  %v1_c3a = add i32 %v0_c3a, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_c3a = inttoptr i32 %v1_c3a to i32*
  store i32 0, i32* %v2_c3a, align 4
  %v0_c41 = load i32, i32* %esi.global-to-local, align 4
  %v1_c41 = add i32 %v0_c41, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_c41 = inttoptr i32 %v1_c41 to i32*
  store i32 0, i32* %v2_c41, align 4
  %v0_c48 = load i32, i32* %esi.global-to-local, align 4
  %v1_c48 = add i32 %v0_c48, ptrtoint (i32* @global_var_40.840 to i32)
  %v2_c48 = inttoptr i32 %v1_c48 to i32*
  store i32 0, i32* %v2_c48, align 4
  %v0_c4f = load i32, i32* %esi.global-to-local, align 4
  %v1_c4f = add i32 %v0_c4f, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_c4f = inttoptr i32 %v1_c4f to i32*
  store i32 0, i32* %v2_c4f, align 4
  %v0_c56 = load i32, i32* %esi.global-to-local, align 4
  %v1_c56 = add i32 %v0_c56, 80
  %v2_c56 = inttoptr i32 %v1_c56 to i32*
  store i32 0, i32* %v2_c56, align 4
  %v0_c5d = load i32, i32* %eax.global-to-local, align 4
  %v1_c5d = load i32, i32* %esi.global-to-local, align 4
  %v2_c5d = add i32 %v1_c5d, ptrtoint (i8** @global_var_48.821 to i32)
  %v3_c5d = inttoptr i32 %v2_c5d to i32*
  store i32 %v0_c5d, i32* %v3_c5d, align 4
  %v0_c60 = load i32, i32* %eax.global-to-local, align 4
  %v1_c60 = load i32, i32* %esi.global-to-local, align 4
  %v2_c60 = add i32 %v1_c60, 76
  %v3_c60 = inttoptr i32 %v2_c60 to i32*
  store i32 %v0_c60, i32* %v3_c60, align 4
  ret void

; uselistorder directives
  uselistorder i32 %hash, { 1, 0, 2 }
}

define i32 @function_f6d() local_unnamed_addr {
dec_label_pc_f6d:
  %eax.global-to-local = alloca i32, align 4
  %v0_f6d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f6d
}

define i32 @function_f81(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f81:
  %v10_f81 = icmp eq i8 %arg1, 0
  %v1_f86 = icmp eq i1 %v10_f81, false
  br i1 %v1_f86, label %bb, label %dec_label_pc_f88

bb:                                               ; preds = %dec_label_pc_f81
  %v2_f86 = call i32 @function_fbc()
  br label %dec_label_pc_f88

dec_label_pc_f88:                                 ; preds = %bb, %dec_label_pc_f81
  %v4_f8f = icmp eq i32 %arg2, ptrtoint ([2 x i8]* @2 to i32)
  %v0_f96 = load i32, i32* @esi, align 4
  store i32 %v0_f96, i32* @eax, align 4
  %v1_f98 = icmp eq i1 %v4_f8f, false
  br i1 %v1_f98, label %bb104, label %dec_label_pc_f9e

bb104:                                            ; preds = %dec_label_pc_f88
  %v2_f98 = call i32 @function_1022()
  br label %dec_label_pc_f9e

dec_label_pc_f9e:                                 ; preds = %bb104, %dec_label_pc_f88
  %v0_fa8 = phi i32 [ %v2_f98, %bb104 ], [ %v0_f96, %dec_label_pc_f88 ]
  ret i32 %v0_fa8
}

define i32 @function_fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_fb4 = load i32, i32* %edx.global-to-local, align 4
  %v1_fb4 = add i32 %v0_fb4, 12
  %v2_fb4 = inttoptr i32 %v1_fb4 to i32*
  %v3_fb4 = load i32, i32* %v2_fb4, align 4
  store i32 %v3_fb4, i32* %edx.global-to-local, align 4
  %v0_fb7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fb7

; uselistorder directives
  uselistorder i32* %edx.global-to-local, { 1, 0 }
}

define i32 @function_fbc() local_unnamed_addr {
dec_label_pc_fbc:
  %v3_fc0 = load i32, i32* @eax, align 4
  ret i32 %v3_fc0
}

define i32 @function_ffe() local_unnamed_addr {
dec_label_pc_ffe:
  %eax.global-to-local = alloca i32, align 4
  %v0_ffe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ffe
}

define i32 @function_1008() local_unnamed_addr {
dec_label_pc_1008:
  %v0_1008 = load i32, i32* @esi, align 4
  %v1_100b = call i32 @_ZN6CAlertD1Ev(i32 %v0_1008)
  ret i32 %v1_100b
}

define i32 @function_1022() local_unnamed_addr {
dec_label_pc_1022:
  %v0_1029 = call i32 @function_1008()
  ret i32 %v0_1029
}

define i32 @function_102c() local_unnamed_addr {
dec_label_pc_102c:
  %eax.global-to-local = alloca i32, align 4
  %v0_102f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_102f
}

define void @"Unserialize<CDataStream, char>"(i32 %is, i32 %str, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1060:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1067 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1067, i32* @esi, align 4
  %v0_106d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_106d, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_1082 = call i32 @_Z15ReadCompactSizeI11CDataStreamEyRT_(i32 %v0_1067)
  store i32 %v1_1082, i32* %eax.global-to-local, align 4
  ret void
}

define i32 @function_109c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_109c:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_109c = load i32, i32* %ebp.global-to-local, align 4
  %v1_109c = add i32 %v0_109c, -1960872449
  %v2_109c = inttoptr i32 %v1_109c to i32*
  %v3_109c = load i32, i32* %v2_109c, align 4
  %v4_109c = add i32 %v3_109c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_109c, i32* %v2_109c, align 4
  %v0_10a3 = load i32, i32* %eax.global-to-local, align 4
  %v11_10a3 = and i32 %v0_10a3, -228
  %v3_10a5 = xor i32 %v11_10a3, ptrtoint ([2 x i8]* @2 to i32)
  %v4_10a5 = icmp eq i32 %v3_10a5, 0
  store i32 %v3_10a5, i32* @eax, align 4
  %v1_10ac = icmp eq i1 %v4_10a5, false
  br i1 %v1_10ac, label %bb, label %dec_label_pc_10ae

bb:                                               ; preds = %dec_label_pc_109c
  %v2_10ac = call i32 @function_10e5()
  store i32 %v2_10ac, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10ae

dec_label_pc_10ae:                                ; preds = %bb, %dec_label_pc_109c
  %v0_10bd = phi i32 [ %v2_10ac, %bb ], [ %v3_10a5, %dec_label_pc_109c ]
  ret i32 %v0_10bd
}

define i32 @function_10d0() local_unnamed_addr {
dec_label_pc_10d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_10d0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10d0 = add i32 %v0_10d0, 612141315
  %v2_10d0 = inttoptr i32 %v1_10d0 to i32*
  %v3_10d0 = load i32, i32* %v2_10d0, align 4
  %v4_10d0 = add i32 %v3_10d0, -1
  store i32 %v4_10d0, i32* %v2_10d0, align 4
  %v0_10d6 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10d6 = add i32 %v0_10d6, -1996217276
  %v2_10d6 = inttoptr i32 %v1_10d6 to i8*
  %v3_10d6 = load i8, i8* %v2_10d6, align 1
  %v5_10d6 = trunc i32 %v0_10d6 to i8
  %v6_10d6 = or i8 %v3_10d6, %v5_10d6
  store i8 %v6_10d6, i8* %v2_10d6, align 1
  %v0_10dc = load i32, i32* %eax.global-to-local, align 4
  %v11_10dc = xor i32 %v0_10dc, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  store i32 %v11_10dc, i32* %eax.global-to-local, align 4
  %v0_10de = call i32 @_ZN11CDataStream4readEPci()
  store i32 %v0_10de, i32* %eax.global-to-local, align 4
  ret i32 %v0_10de
}

define i32 @function_10e5() local_unnamed_addr {
dec_label_pc_10e5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define void @"SerReadWrite<CDataStream, std::vector<unsigned char> >"(i32 %s, i32 %obj, i32 %nType, i32 %nVersion, %CSerActionSerialize %ser_action) local_unnamed_addr {
dec_label_pc_10f0:
  %v0_10f0 = load i32, i32* @esi, align 4
  %v0_10f1 = load i32, i32* @edx, align 4
  store i32 %v0_10f1, i32* @esi, align 4
  %v0_10f3 = load i32, i32* @ebx, align 4
  %v0_10f4 = load i32, i32* @eax, align 4
  store i32 %v0_10f4, i32* @ebx, align 4
  %v1_1105 = add i32 %v0_10f1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_1105 = inttoptr i32 %v1_1105 to i32*
  %v3_1105 = load i32, i32* %v2_1105, align 4
  %v4_1108 = sub i32 %v3_1105, %v0_10f1
  %v3_1119 = call i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %v0_10f4, i32 %v4_1108, i32 0)
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_115e, label %dec_label_pc_1158

dec_label_pc_1158:                                ; preds = %dec_label_pc_10f0
  store i32 %v0_10f3, i32* @ebx, align 4
  store i32 %v0_10f0, i32* @esi, align 4
  ret void

dec_label_pc_115e:                                ; preds = %dec_label_pc_10f0
  ret void

; uselistorder directives
  uselistorder i32 %v0_10f1, { 1, 0, 2 }
}

define i32 @function_1163() local_unnamed_addr {
dec_label_pc_1163:
  %v0_1163 = call i32 @_ZN11CDataStream5writeEPKci.part.499()
  ret i32 %v0_1163
}

define void @_ZNK6CAlert7RelayToEP5CNode(i32 %this, i32 %pnode) local_unnamed_addr {
dec_label_pc_1170:
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-88 = alloca i8, align 1
  %stack_var_-64 = alloca i32, align 4
  store i32 0, i32* @edi, align 4
  call void @_ZNK6CAlert10IsInEffectEv(i32 %this)
  br i1 icmp ne (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %dec_label_pc_11d0, label %dec_label_pc_1170.dec_label_pc_11a5_crit_edge

dec_label_pc_1170.dec_label_pc_11a5_crit_edge:    ; preds = %dec_label_pc_1170
  %v0_11a5.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_11a5

dec_label_pc_11a5:                                ; preds = %dec_label_pc_1170.dec_label_pc_11a5_crit_edge, %dec_label_pc_11d0
  %v0_11a5 = phi i32 [ %v0_11a5.pre, %dec_label_pc_1170.dec_label_pc_11a5_crit_edge ], [ %v16_11fd, %dec_label_pc_11d0 ]
  %v1_11a5 = add i32 %v0_11a5, 76
  %v2_11a5 = inttoptr i32 %v1_11a5 to i32*
  %v3_11a5 = load i32, i32* %v2_11a5, align 4
  %v4_11a9 = icmp eq i32 %v3_11a5, ptrtoint ([2 x i8]* @2 to i32)
  %v0_11b0 = load i32, i32* @edi, align 4
  store i32 %v0_11b0, i32* @eax, align 4
  %v1_11b2 = icmp eq i1 %v4_11a9, false
  br i1 %v1_11b2, label %bb, label %dec_label_pc_11b8

bb:                                               ; preds = %dec_label_pc_11a5
  %v2_11b2 = call i32 @function_12a6()
  br label %dec_label_pc_11b8

dec_label_pc_11b8:                                ; preds = %bb, %dec_label_pc_11a5
  ret void

dec_label_pc_11d0:                                ; preds = %dec_label_pc_1170
  %v2_11d0 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11d0, i32* @ebp, align 4
  call void @_ZNK6CAlert7GetHashEv(i32 %v2_11d0)
  %v0_11e0 = load i32, i32* @esi, align 4
  %v1_11e0 = add i32 %v0_11e0, 688
  %v3_11f8 = bitcast i8* %stack_var_-88 to i32*
  %v4_11f8 = call i32 @_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_(i32* %v3_11f8, i32 %v1_11e0, i32 %v2_11d0)
  %v16_11fd = ptrtoint i32* %stack_var_-116 to i32
  %v3_1200 = load i8, i8* %stack_var_-88, align 1
  %v12_1200 = icmp eq i8 %v3_1200, 0
  br i1 %v12_1200, label %dec_label_pc_11a5, label %dec_label_pc_1207

dec_label_pc_1207:                                ; preds = %dec_label_pc_11d0
  ret void

; uselistorder directives
  uselistorder i8* %stack_var_-88, { 1, 0 }
  uselistorder label %dec_label_pc_11a5, { 1, 0 }
}

define i32 @function_123e() local_unnamed_addr {
dec_label_pc_123e:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v1_123e = add i32 %tmp93, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_123e, i32* @edi, align 4
  %v0_1241 = load i32, i32* %eax.global-to-local, align 4
  %v1_1241 = trunc i32 %v0_1241 to i8
  %v2_1241 = and i8 %v1_1241, ptrtoint (i8** @global_var_4.814 to i8)
  %v8_1241 = zext i8 %v2_1241 to i32
  %v10_1241 = and i32 %v0_1241, -256
  %v11_1241 = or i32 %v8_1241, %v10_1241
  store i32 %v11_1241, i32* %eax.global-to-local, align 4
  store i8 %v2_1241, i8* inttoptr (i32 -1996488672 to i8*), align 32
  %v2_1248 = xor i8 %v2_1241, ptrtoint (i32* @global_var_24.839 to i8)
  %v8_1248 = zext i8 %v2_1248 to i32
  %v10_1248 = and i32 %v0_1241, -256
  %v11_1248 = or i32 %v8_1248, %v10_1248
  store i32 %v11_1248, i32* %eax.global-to-local, align 4
  %v0_124a = call i32 @_ZN5CNode12BeginMessageEPKc()
  %v0_124f = load i32, i32* @esi, align 4
  %v1_124f = add i32 %v0_124f, 12
  store i32 %v1_124f, i32* %edi.global-to-local, align 4
  %v0_1252 = load i32, i32* @ebx, align 4
  %v1_1252 = add i32 %v0_1252, ptrtoint (i32* @global_var_64.837 to i32)
  store i32 %v1_1252, i32* @edx, align 4
  store i32 %v1_124f, i32* @eax, align 4
  call void @"SerReadWrite<CDataStream, std::vector<unsigned char> >"(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), %CSerActionSerialize { i32 ptrtoint (i32* @1 to i32) })
  %v0_125c = load i32, i32* @ebx, align 4
  %v1_125c = add i32 %v0_125c, ptrtoint (i32* @global_var_70.844 to i32)
  store i32 %v1_125c, i32* @edx, align 4
  %v0_125f = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_125f, i32* @eax, align 4
  call void @"SerReadWrite<CDataStream, std::vector<unsigned char> >"(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), %CSerActionSerialize { i32 ptrtoint (i32* @1 to i32) })
  store i32 ptrtoint (i32* @1 to i32), i32* %eax.global-to-local, align 4
  %v0_1266 = load i32, i32* @esi, align 4
  %v1_1269 = call i32 @_ZN5CNode10EndMessageEv(i32 %v0_1266)
  store i32 %v1_1269, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %edi.global-to-local, align 4
  ret i32 %v1_1269

; uselistorder directives
  uselistorder void (i32, i32, i32, i32, %CSerActionSerialize)* @"SerReadWrite<CDataStream, std::vector<unsigned char> >", { 1, 0 }
}

define i32 @function_12a1() local_unnamed_addr {
dec_label_pc_12a1:
  %eax.global-to-local = alloca i32, align 4
  %v0_12a1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12a1
}

define i32 @function_12a6() local_unnamed_addr {
dec_label_pc_12a6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12c3() local_unnamed_addr {
dec_label_pc_12c3:
  %eax.global-to-local = alloca i32, align 4
  %v0_12c3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12c3
}

define i32 @function_12d5() local_unnamed_addr {
dec_label_pc_12d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_12d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12d5
}

define void @_ZNK6CAlert14CheckSignatureEv(i32 %this) local_unnamed_addr {
dec_label_pc_12f0:
  ret void
}

define i32 @function_1337() local_unnamed_addr {
dec_label_pc_1337:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1341() local_unnamed_addr {
dec_label_pc_1341:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_134b() local_unnamed_addr {
dec_label_pc_134b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1354() local_unnamed_addr {
dec_label_pc_1354:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1374(i16 %arg1) local_unnamed_addr {
dec_label_pc_1374:
  %eax.global-to-local = alloca i32, align 4
  %v6_1374 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v6_1374
}

define i32 @function_1376() local_unnamed_addr {
dec_label_pc_1376:
  %eax.global-to-local = alloca i32, align 4
  %v0_1376 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1376
}

define i32 @function_149d(i32 %arg1) local_unnamed_addr {
dec_label_pc_149d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14be() local_unnamed_addr {
dec_label_pc_14be:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_14be = load i32, i32* %ecx.global-to-local, align 4
  %v1_14be = trunc i32 %v0_14be to i8
  %v3_14be = add i32 %v0_14be, -2097051416
  %v4_14be = inttoptr i32 %v3_14be to i8*
  %v5_14be = load i8, i8* %v4_14be, align 1
  %v6_14be = sub i8 %v1_14be, %v5_14be
  %v21_14be = zext i8 %v6_14be to i32
  %v23_14be = and i32 %v0_14be, -256
  %v24_14be = or i32 %v21_14be, %v23_14be
  store i32 %v24_14be, i32* %ecx.global-to-local, align 4
  %v0_14c4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14c4
}

define i32 @function_14cc() local_unnamed_addr {
dec_label_pc_14cc:
  %v0_14cc = call i32 @function_14f7()
  ret i32 %v0_14cc
}

define i32 @function_14ce(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ce:
  %edx.global-to-local = alloca i32, align 4
  %v4_14cf = load i32, i32* %edx.global-to-local, align 4
  %v5_14cf = add i32 %v4_14cf, %arg1
  ret i32 %v5_14cf
}

define i32 @function_14f7() local_unnamed_addr {
dec_label_pc_14f7:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1515 = load i32, i32* @ebx, align 4
  %v0_1519 = load i32, i32* @esi, align 4
  %v5_151c = call i32 @_ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii(i32 %v0_1519, i32 %v0_1515, i32 ptrtoint (i8** @global_var_1.820 to i32), i32 80000)
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* @esi, align 4
  %v1_152e = icmp eq i32 %tmp4, 0
  br i1 %v1_152e, label %bb, label %dec_label_pc_1532

bb:                                               ; preds = %dec_label_pc_14f7
  %v1_1530 = call i32 @function_1548()
  br label %dec_label_pc_1532

dec_label_pc_1532:                                ; preds = %bb, %dec_label_pc_14f7
  %v0_1532 = phi i32 [ %v1_1530, %bb ], [ %tmp3, %dec_label_pc_14f7 ]
  %v2_1532 = sub i32 %v0_1532, %tmp4
  ret i32 %v2_1532
}

define i32 @function_1548() local_unnamed_addr {
dec_label_pc_1548:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v4_154f = icmp eq i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v0_1556 = load i32, i32* @esi, align 4
  store i32 %v0_1556, i32* @eax, align 4
  %v1_1558 = icmp eq i1 %v4_154f, false
  br i1 %v1_1558, label %bb, label %dec_label_pc_155a

bb:                                               ; preds = %dec_label_pc_1548
  %v2_1558 = call i32 @function_15d1()
  br label %dec_label_pc_155a

dec_label_pc_155a:                                ; preds = %bb, %dec_label_pc_1548
  %v0_1564 = phi i32 [ %v2_1558, %bb ], [ %v0_1556, %dec_label_pc_1548 ]
  ret i32 %v0_1564
}

define i32 @function_1568() local_unnamed_addr {
dec_label_pc_1568:
  %edx.global-to-local = alloca i32, align 4
  %v0_1568 = load i32, i32* %edx.global-to-local, align 4
  %v1_1568 = trunc i32 %v0_1568 to i8
  %v11_1568 = icmp eq i8 %v1_1568, 4
  br i1 %v11_1568, label %bb, label %dec_label_pc_1571

bb:                                               ; preds = %dec_label_pc_1568
  %v1_156b = call i32 @function_1337()
  store i32 %v1_156b, i32* @eax, align 4
  %v0_1571.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1571

dec_label_pc_1571:                                ; preds = %bb, %dec_label_pc_1568
  %v0_1571 = phi i32 [ %v0_1571.pre, %bb ], [ %v0_1568, %dec_label_pc_1568 ]
  %v1_1571 = trunc i32 %v0_1571 to i8
  %v11_1571 = icmp eq i8 %v1_1571, 7
  %v1_1574 = icmp eq i1 %v11_1571, false
  br i1 %v1_1574, label %bb99, label %dec_label_pc_157a

bb99:                                             ; preds = %dec_label_pc_1571
  %v2_1574 = call i32 @function_134b()
  store i32 %v2_1574, i32* @eax, align 4
  br label %dec_label_pc_157a

dec_label_pc_157a:                                ; preds = %bb99, %dec_label_pc_1571
  %v0_157a = call i32 @function_1337()
  ret i32 %v0_157a

; uselistorder directives
  uselistorder i32 ()* @function_1337, { 1, 0 }
}

define i32 @function_1580() local_unnamed_addr {
dec_label_pc_1580:
  %v0_158a = call i32 @function_1341()
  ret i32 %v0_158a
}

define i32 @function_1598() local_unnamed_addr {
dec_label_pc_1598:
  %v0_1598 = load i32, i32* @eax, align 4
  %v1_159c = call i32 @function_149d(i32 %v0_1598)
  ret i32 %v1_159c
}

define i32 @function_15b4() local_unnamed_addr {
dec_label_pc_15b4:
  %eax.global-to-local = alloca i32, align 4
  %v0_15b4 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_15b4, i32* @esi, align 4
  %v0_15b6 = call i32 @function_1548()
  store i32 %v0_15b6, i32* %eax.global-to-local, align 4
  ret i32 %v0_15b6

; uselistorder directives
  uselistorder i32 ()* @function_1548, { 1, 0 }
}

define i32 @function_15cc() local_unnamed_addr {
dec_label_pc_15cc:
  %v0_15cc = call i32 @function_1354()
  ret i32 %v0_15cc
}

define i32 @function_15d1() local_unnamed_addr {
dec_label_pc_15d1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_15fa() local_unnamed_addr {
dec_label_pc_15fa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1601() local_unnamed_addr {
dec_label_pc_1601:
  %ecx.global-to-local = alloca i32, align 4
  %v0_1601 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1601 = add i32 %v0_1601, 605850054
  %v2_1601 = inttoptr i32 %v1_1601 to i32*
  %v3_1601 = load i32, i32* %v2_1601, align 4
  %v4_1601 = add i32 %v3_1601, -1
  store i32 %v4_1601, i32* %v2_1601, align 4
  %v0_1607 = call i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev()
  store i32 %v0_1607, i32* @eax, align 4
  %v0_160c = call i32 @function_15fa()
  ret i32 %v0_160c
}

define void @_ZN6CAlert12ProcessAlertEb(i32 %this, i1 %fThread) local_unnamed_addr {
dec_label_pc_1610:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-500 = alloca i32, align 4
  %v0_1610 = load i32, i32* %ebp.global-to-local, align 4
  %v0_1611 = load i32, i32* %edi.global-to-local, align 4
  %v0_1612 = load i32, i32* %esi.global-to-local, align 4
  %v0_1613 = load i32, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @ebx, align 4
  store i32 %this, i32* @edi, align 4
  %tmp121 = zext i1 %fThread to i32
  store i32 %tmp121, i32* %ebp.global-to-local, align 4
  call void @_ZNK6CAlert14CheckSignatureEv(i32 %this)
  br i1 icmp ne (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %dec_label_pc_1668, label %dec_label_pc_1646

dec_label_pc_1646:                                ; preds = %dec_label_pc_1668, %dec_label_pc_1610
  store i32 %v0_1613, i32* %ebx.global-to-local, align 4
  store i32 %v0_1612, i32* %esi.global-to-local, align 4
  store i32 %v0_1611, i32* %edi.global-to-local, align 4
  store i32 %v0_1610, i32* %ebp.global-to-local, align 4
  ret void

dec_label_pc_1668:                                ; preds = %dec_label_pc_1610
  %v0_1668 = load i32, i32* @edi, align 4
  call void @_ZNK6CAlert10IsInEffectEv(i32 %v0_1668)
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %dec_label_pc_1646, label %dec_label_pc_1674

dec_label_pc_1674:                                ; preds = %dec_label_pc_1668
  %v0_1674 = load i32, i32* @edi, align 4
  %v1_1674 = add i32 %v0_1674, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_1674 = inttoptr i32 %v1_1674 to i32*
  %v3_1674 = load i32, i32* %v2_1674, align 4
  %v13_1674 = icmp eq i32 %v3_1674, 2147483647
  br i1 %v13_1674, label %bb, label %dec_label_pc_1681

bb:                                               ; preds = %dec_label_pc_1674
  %v1_167b = call i32 @function_1ce8()
  br label %dec_label_pc_1681

dec_label_pc_1681:                                ; preds = %bb, %dec_label_pc_1674
  %v10_16b3 = call i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* nonnull %stack_var_-500, i32 ptrtoint ([18 x i8]* @global_var_1ef0.851 to i32), i32 ptrtoint ([13 x i8]* @global_var_2077.850 to i32), i32 ptrtoint ([10 x i8]* @global_var_206d.849 to i32), i32 ptrtoint (i32* @global_var_c4.848 to i32), i32 0)
  store i32 1919448176, i32* @ebx, align 4
  %v2_16c4 = call i32 @function_17ae()
  %v0_16ca = call i32 @function_1820()
  ret void
}

define i32 @function_16e2() local_unnamed_addr {
dec_label_pc_16e2:
  %eax.global-to-local = alloca i32, align 4
  %v0_16e2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_16e2
}

define i32 @function_1722() local_unnamed_addr {
dec_label_pc_1722:
  %eax.global-to-local = alloca i32, align 4
  %v0_1722 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1722
}

define i32 @function_17ae() local_unnamed_addr {
dec_label_pc_17ae:
  %v0_17ae = load i32, i32* @ebx, align 4
  %v1_17ae = add i32 %v0_17ae, ptrtoint (i32* @global_var_30.842 to i32)
  store i32 %v1_17ae, i32* @esi, align 4
  %v0_17b5 = load i32, i32* @edi, align 4
  call void @_ZNK6CAlert7CancelsERKS_(i32 %v0_17b5, i32 %v1_17ae)
  %v0_17c5 = load i32, i32* @esi, align 4
  call void @_ZNK6CAlert10IsInEffectEv(i32 %v0_17c5)
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %bb, label %dec_label_pc_17d5

bb:                                               ; preds = %dec_label_pc_17ae
  %v1_17cf = call i32 @function_1d58()
  br label %dec_label_pc_17d5

dec_label_pc_17d5:                                ; preds = %bb, %dec_label_pc_17ae
  %v3_17d5 = phi i32 [ %v1_17cf, %bb ], [ ptrtoint (i32* @1 to i32), %dec_label_pc_17ae ]
  ret i32 %v3_17d5

; uselistorder directives
  uselistorder void (i32)* @_ZNK6CAlert10IsInEffectEv, { 4, 3, 2, 1, 0 }
}

define i32 @function_17de() local_unnamed_addr {
dec_label_pc_17de:
  %eax.global-to-local = alloca i32, align 4
  %v0_17de = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_17de
}

define i32 @function_181d() local_unnamed_addr {
dec_label_pc_181d:
  %eax.global-to-local = alloca i32, align 4
  %v0_181d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_181d
}

define i32 @function_1820() local_unnamed_addr {
dec_label_pc_1820:
  %stack_var_36 = alloca i32, align 4
  %stack_var_428 = alloca i32, align 4
  %stack_var_424 = alloca i32, align 4
  %stack_var_396 = alloca i32, align 4
  %stack_var_272 = alloca i32, align 4
  %stack_var_580 = alloca i32, align 4
  %stack_var_556 = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  %v2_1820 = ptrtoint i32* %stack_var_60 to i32
  %v0_1824 = load i32, i32* @edi, align 4
  %v4_182b = call i32 @_ZN6CAlertC1ERKS_(i32* nonnull %stack_var_60, i32 %v0_1824)
  %v2_1830 = ptrtoint i32* %stack_var_556 to i32
  call void @_ZNK6CAlert7GetHashEv(i32 %v2_1830)
  %v2_1915 = ptrtoint i32* %stack_var_272 to i32
  %v4_191f = call i32 @_ZN6CAlertC1ERKS_(i32* nonnull %stack_var_272, i32 %v2_1820)
  %v4_19a2 = call i32 @_ZN6CAlertC1ERKS_(i32* nonnull %stack_var_428, i32 %v2_1915)
  %v2_19ab = ptrtoint i32* %stack_var_396 to i32
  %v5_19c1 = call i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32* nonnull %stack_var_36, i32 ptrtoint ([11 x i8]* @global_var_1f44.853 to i32), i32 %v2_19ab)
  %v2_19c9 = ptrtoint i32* %stack_var_424 to i32
  %v1_19d3 = call i32 @_ZN6CAlertD1Ev(i32 %v2_19c9)
  %v1_19db = call i32 @_ZN6CAlertD1Ev(i32 %v2_1915)
  %v1_19e3 = call i32 @_ZN6CAlertD1Ev(i32 %v2_1820)
  %v0_19e8 = load i32, i32* @edi, align 4
  call void @_ZNK6CAlert11AppliesToMeEv(i32 %v0_19e8)
  br i1 icmp eq (i8 and (i8 ptrtoint (i32* @1 to i8), i8 ptrtoint (i32* @1 to i8)), i8 0), label %bb, label %dec_label_pc_19f8

bb:                                               ; preds = %dec_label_pc_1820
  %v1_19f2 = call i32 @function_1c9f()
  br label %dec_label_pc_19f8

dec_label_pc_19f8:                                ; preds = %bb, %dec_label_pc_1820
  %v2_19f8 = ptrtoint i32* %stack_var_580 to i32
  call void @_ZNK6CAlert7GetHashEv(i32 %v2_19f8)
  ret i32 ptrtoint (i32* @1 to i32)

; uselistorder directives
  uselistorder i32 %v2_1915, { 1, 0 }
  uselistorder i32 %v2_1820, { 1, 0 }
  uselistorder void (i32)* @_ZNK6CAlert7GetHashEv, { 2, 1, 0 }
}

define i32 @function_1b36() local_unnamed_addr {
dec_label_pc_1b36:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_1b3e = load i32, i32* %eax.global-to-local, align 4
  %v1_1b3e = load i32, i32* %ebx.global-to-local, align 4
  %v2_1b3e = mul i32 %v1_1b3e, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_1b3e = add i32 %v2_1b3e, %v0_1b3e
  %v4_1b3e = inttoptr i32 %v3_1b3e to i8*
  %v5_1b3e = load i8, i8* %v4_1b3e, align 1
  %v6_1b3e = sext i8 %v5_1b3e to i32
  store i32 %v6_1b3e, i32* %eax.global-to-local, align 4
  ret i32 %v6_1b3e

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0 }
}

define i32 @function_1b84() local_unnamed_addr {
dec_label_pc_1b84:
  %eax.global-to-local = alloca i32, align 4
  %v0_1b84 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1b84
}

define i32 @function_1b8b(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b8b:
  %stack_var_220 = alloca i32, align 4
  %stack_var_208 = alloca i32, align 4
  %stack_var_224 = alloca i32, align 4
  %stack_var_212 = alloca i32, align 4
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v2_1b8f = ptrtoint i32* %stack_var_212 to i32
  %v2_1b9e = ptrtoint i32* %stack_var_224 to i32
  %v3_1ba8 = call i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %v2_1b9e, i32 %v2_1b8f, i32 %tmp10)
  %v2_1bb7 = ptrtoint i32* %stack_var_208 to i32
  %v2_1bbe = ptrtoint i32* %stack_var_220 to i32
  %v3_1bd0 = call i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %v2_1b9e, i32 %v2_1bbe, i32 %v2_1bb7)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_, { 1, 0 }
}

define i32 @function_1c6d() local_unnamed_addr {
dec_label_pc_1c6d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1c9f() local_unnamed_addr {
dec_label_pc_1c9f:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8 @__decompiler_undefined_function_2()
  %v10_1c9f = icmp eq i8 %tmp6, 0
  br i1 %v10_1c9f, label %dec_label_pc_1cb8, label %dec_label_pc_1ca9

dec_label_pc_1ca9:                                ; preds = %dec_label_pc_1c9f
  %v2_1cb3 = call i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %tmp5)
  br label %dec_label_pc_1cb8

dec_label_pc_1cb8:                                ; preds = %dec_label_pc_1ca9, %dec_label_pc_1c9f
  %v0_1cb8 = load i32, i32* @edi, align 4
  call void @_ZNK6CAlert11AppliesToMeEv(i32 %v0_1cb8)
  %v0_1ccc = load i32, i32* @edi, align 4
  %v1_1ccc = add i32 %v0_1ccc, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_1ccc = inttoptr i32 %v1_1ccc to i32*
  %v3_1ccc = load i32, i32* %v2_1ccc, align 4
  ret i32 %v3_1ccc

; uselistorder directives
  uselistorder void (i32)* @_ZNK6CAlert11AppliesToMeEv, { 1, 0 }
}

define i32 @function_1cdf() local_unnamed_addr {
dec_label_pc_1cdf:
  %eax.global-to-local = alloca i32, align 4
  %v0_1cdf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1cdf
}

define i32 @function_1ce8() local_unnamed_addr {
dec_label_pc_1ce8:
  %v0_1ce8 = load i32, i32* @edi, align 4
  %v1_1d06 = add i32 %v0_1ce8, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_1d06 = inttoptr i32 %v1_1d06 to i32*
  %v3_1d06 = load i32, i32* %v2_1d06, align 4
  ret i32 %v3_1d06
}

define i32 @function_1d49() local_unnamed_addr {
dec_label_pc_1d49:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d49 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d49
}

define i32 @function_1d58() local_unnamed_addr {
dec_label_pc_1d58:
  %v0_1d58 = load i32, i32* @ebx, align 4
  %v1_1d58 = add i32 %v0_1d58, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_1d58 = inttoptr i32 %v1_1d58 to i32*
  %v3_1d58 = load i32, i32* %v2_1d58, align 4
  ret i32 %v3_1d58
}

define i32 @function_1d6b() local_unnamed_addr {
dec_label_pc_1d6b:
  %eax.global-to-local = alloca i32, align 4
  %v0_1d6b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1d6b
}

define i32 @function_1d83(i32 %arg1, i8 %arg2) local_unnamed_addr {
dec_label_pc_1d83:
  %v1_1d9d = call i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1)
  ret i32 %v1_1d9d

; uselistorder directives
  uselistorder i32 (i32)* @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv, { 1, 0 }
}

define i32 @function_1da7() local_unnamed_addr {
dec_label_pc_1da7:
  call void @_ZN5boost8signals27signal2IvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS4_S5_EEENSA_IFvRKNS0_10connectionES4_S5_EEENS0_5mutexEEclES4_S5_(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 ptrtoint (i32* @1 to i32)
}

define i32 @function_1ddf() local_unnamed_addr {
dec_label_pc_1ddf:
  %v0_1ddf = call i32 @function_1c6d()
  ret i32 %v0_1ddf
}

define i32 @function_1de6() local_unnamed_addr {
dec_label_pc_1de6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1df0() local_unnamed_addr {
dec_label_pc_1df0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1dfa() local_unnamed_addr {
dec_label_pc_1dfa:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e0e() local_unnamed_addr {
dec_label_pc_1e0e:
  %v0_1e10 = call i32 @function_1df0()
  ret i32 %v0_1e10
}

define i32 @function_1e12() local_unnamed_addr {
dec_label_pc_1e12:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e1e() local_unnamed_addr {
dec_label_pc_1e1e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e32() local_unnamed_addr {
dec_label_pc_1e32:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e41() local_unnamed_addr {
dec_label_pc_1e41:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e50() local_unnamed_addr {
dec_label_pc_1e50:
  %v0_1e50 = call i32 @function_1dfa()
  ret i32 %v0_1e50
}

define i32 @function_1e52() local_unnamed_addr {
dec_label_pc_1e52:
  %v0_1e54 = call i32 @function_1e41()
  ret i32 %v0_1e54
}

define i32 @function_1e56() local_unnamed_addr {
dec_label_pc_1e56:
  %v0_1e58 = call i32 @function_1dfa()
  ret i32 %v0_1e58

; uselistorder directives
  uselistorder i32 ()* @function_1dfa, { 1, 0 }
}

define i32 @function_1e60() local_unnamed_addr {
dec_label_pc_1e60:
  %v0_1e60 = call i32 @function_1e56()
  ret i32 %v0_1e60
}

define i32 @function_1e62() local_unnamed_addr {
dec_label_pc_1e62:
  %v0_1e64 = call i32 @function_1e1e()
  ret i32 %v0_1e64
}

define i32 @function_1e66() local_unnamed_addr {
dec_label_pc_1e66:
  %stack_var_432 = alloca i32, align 4
  %v2_1e68 = ptrtoint i32* %stack_var_432 to i32
  %v1_1e72 = call i32 @_ZN6CAlertD1Ev(i32 %v2_1e68)
  store i32 %v1_1e72, i32* @eax, align 4
  %v0_1e77 = call i32 @function_1de6()
  ret i32 %v0_1e77

; uselistorder directives
  uselistorder i32 (i32)* @_ZN6CAlertD1Ev, { 4, 3, 2, 1, 0 }
}

define i32 @function_1e7c() local_unnamed_addr {
dec_label_pc_1e7c:
  %v0_1e7c = call i32 @function_1e12()
  ret i32 %v0_1e7c
}

define i32 @function_1e8a() local_unnamed_addr {
dec_label_pc_1e8a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1e99() local_unnamed_addr {
dec_label_pc_1e99:
  %v0_1e99 = call i32 @function_1e1e()
  ret i32 %v0_1e99

; uselistorder directives
  uselistorder i32 ()* @function_1e1e, { 1, 0 }
}

define i32 @function_1e9b() local_unnamed_addr {
dec_label_pc_1e9b:
  %v0_1e9d = call i32 @function_1e8a()
  ret i32 %v0_1e9d
}

define i32 @function_1e9f() local_unnamed_addr {
dec_label_pc_1e9f:
  %stack_var_220 = alloca i32, align 4
  %v2_1e9f = ptrtoint i32* %stack_var_220 to i32
  %v1_1eaa = call i32 @function_1b8b(i32 %v2_1e9f)
  ret i32 %v1_1eaa
}

define i32 @function_1eaf() local_unnamed_addr {
dec_label_pc_1eaf:
  %v0_1eb1 = call i32 @function_1e32()
  ret i32 %v0_1eb1
}

define i32 @function_1ec2() local_unnamed_addr {
dec_label_pc_1ec2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1ec9() local_unnamed_addr {
dec_label_pc_1ec9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_1ec9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_1ec9 = add i32 %v0_1ec9, -1987515432
  %v2_1ec9 = inttoptr i32 %v1_1ec9 to i32*
  %v3_1ec9 = load i32, i32* %v2_1ec9, align 4
  %v4_1ec9 = sub i32 %v3_1ec9, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_1ec9, i32* %v2_1ec9, align 4
  %v0_1ecf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1ecf
}

define i32 @function_1ed0() local_unnamed_addr {
dec_label_pc_1ed0:
  %v0_1ed0 = call i32 @function_1ec2()
  ret i32 %v0_1ed0
}

define i32 @_ZNK5boost10lock_error4whatEv() {
dec_label_pc_21a0:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_21c5, label %dec_label_pc_21c1

dec_label_pc_21c1:                                ; preds = %dec_label_pc_21a0
  ret i32 ptrtoint ([18 x i8]* @global_var_1ef0.851 to i32)

dec_label_pc_21c5:                                ; preds = %dec_label_pc_21a0
  ret i32 ptrtoint ([18 x i8]* @global_var_1ef0.851 to i32)
}

define i32 @_ZNK5boost21thread_resource_error4whatEv() {
dec_label_pc_21d0:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_21f5, label %dec_label_pc_21f1

dec_label_pc_21f1:                                ; preds = %dec_label_pc_21d0
  ret i32 ptrtoint ([29 x i8]* @global_var_1f02.857 to i32)

dec_label_pc_21f5:                                ; preds = %dec_label_pc_21d0
  ret i32 ptrtoint ([29 x i8]* @global_var_1f02.857 to i32)
}

define i32 @_ZN5boost16exception_detail10clone_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2200:
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_222a, label %dec_label_pc_2226

dec_label_pc_2226:                                ; preds = %dec_label_pc_2200
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_222a:                                ; preds = %dec_label_pc_2200
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail15sp_counted_baseD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2230:
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_225a, label %dec_label_pc_2256

dec_label_pc_2256:                                ; preds = %dec_label_pc_2230
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_225a:                                ; preds = %dec_label_pc_2230
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail15sp_counted_base7destroyEv(i32* %arg1) {
dec_label_pc_2260:
  %v1_2274 = icmp eq i32* %arg1, null
  br i1 %v1_2274, label %dec_label_pc_2298, label %dec_label_pc_2278

dec_label_pc_2278:                                ; preds = %dec_label_pc_2260
  %tmp101 = ptrtoint i32* %arg1 to i32
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_22a9, label %dec_label_pc_2285

dec_label_pc_2285:                                ; preds = %dec_label_pc_2278
  %v2_2285 = load i32, i32* %arg1, align 4
  %v1_228b = add i32 %v2_2285, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_228b = inttoptr i32 %v1_228b to i32*
  %v3_228b = load i32, i32* %v2_228b, align 4
  ret i32 %v3_228b

dec_label_pc_2298:                                ; preds = %dec_label_pc_2260
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_22a9, label %dec_label_pc_22a5

dec_label_pc_22a5:                                ; preds = %dec_label_pc_2298
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_22a9:                                ; preds = %dec_label_pc_2298, %dec_label_pc_2278
  %v1_22a9 = phi i32 [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_2298 ], [ %tmp101, %dec_label_pc_2278 ]
  ret i32 %v1_22a9

; uselistorder directives
  uselistorder i32* %arg1, { 0, 2, 1 }
}

define i32 @_ZN5boost6system14error_categoryD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_22c0:
  store i32 ptrtoint (i32* @global_var_146f8.860 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_22ea, label %dec_label_pc_22e6

dec_label_pc_22e6:                                ; preds = %dec_label_pc_22c0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_22ea:                                ; preds = %dec_label_pc_22c0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZNK5boost6system14error_category23default_error_conditionEi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_22f0:
  %eax.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  store i32 %tmp102, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %arg1, align 4
  %v2_230e = add i32 %tmp102, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_230e = inttoptr i32 %v2_230e to i32*
  store i32 %arg2, i32* %v3_230e, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2324, label %dec_label_pc_231e

dec_label_pc_231e:                                ; preds = %dec_label_pc_22f0
  %v0_2321 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2321

dec_label_pc_2324:                                ; preds = %dec_label_pc_22f0
  %v1_2321 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_2321

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @_ZNK5boost6system14error_category10equivalentEiRKNS0_15error_conditionE(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_2330:
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %v1_236b = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_236b = inttoptr i32 %v1_236b to i32*
  %v3_236b = load i32, i32* %v2_236b, align 4
  %v15_236b = icmp eq i32 %v3_236b, %tmp107
  br i1 %v15_236b, label %dec_label_pc_2388, label %dec_label_pc_2374

dec_label_pc_2374:                                ; preds = %dec_label_pc_2388, %dec_label_pc_2330
  %v0_238f = phi i32 [ %v1_238a, %dec_label_pc_2388 ], [ 0, %dec_label_pc_2330 ]
  %v4_2378 = icmp eq i32 %tmp98, ptrtoint ([2 x i8]* @2 to i32)
  %v1_237f = icmp eq i1 %v4_2378, false
  br i1 %v1_237f, label %dec_label_pc_238f, label %dec_label_pc_2381

dec_label_pc_2381:                                ; preds = %dec_label_pc_2374
  ret i32 %v0_238f

dec_label_pc_2388:                                ; preds = %dec_label_pc_2330
  %v1_2388 = inttoptr i32 %arg3 to i32*
  %v2_2388 = load i32, i32* %v1_2388, align 4
  %v14_2388 = icmp eq i32 %v2_2388, %tmp99
  %v1_238a = zext i1 %v14_2388 to i32
  br label %dec_label_pc_2374

dec_label_pc_238f:                                ; preds = %dec_label_pc_2374
  ret i32 %v0_238f
}

define i32 @_ZNK5boost6system14error_category10equivalentERKNS0_10error_codeEi(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_23a0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg2 to i32
  %v0_23a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_23bc = add i32 %tmp103, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_23bc = inttoptr i32 %v1_23bc to i32*
  %v3_23bc = load i32, i32* %v2_23bc, align 4
  %v15_23bc = icmp eq i32 %v3_23bc, %arg1
  br i1 %v15_23bc, label %dec_label_pc_23d8, label %dec_label_pc_23c1

dec_label_pc_23c1:                                ; preds = %dec_label_pc_23d8, %dec_label_pc_23a0
  %v0_23dd = phi i32 [ %v1_23da, %dec_label_pc_23d8 ], [ 0, %dec_label_pc_23a0 ]
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_23df, label %dec_label_pc_23ce

dec_label_pc_23ce:                                ; preds = %dec_label_pc_23c1
  store i32 %v0_23a0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_23dd

dec_label_pc_23d8:                                ; preds = %dec_label_pc_23a0
  %v2_23d8 = load i32, i32* %arg2, align 4
  %v14_23d8 = icmp eq i32 %v2_23d8, %arg3
  %v1_23da = zext i1 %v14_23d8 to i32
  br label %dec_label_pc_23c1

dec_label_pc_23df:                                ; preds = %dec_label_pc_23c1
  ret i32 %v0_23dd
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED1Ev(i32* %arg1) {
dec_label_pc_23f0:
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_241a, label %dec_label_pc_2416

dec_label_pc_2416:                                ; preds = %dec_label_pc_23f0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_241a:                                ; preds = %dec_label_pc_23f0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_2420:
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_244a, label %dec_label_pc_2446

dec_label_pc_2446:                                ; preds = %dec_label_pc_2420
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_244a:                                ; preds = %dec_label_pc_2420
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_2450:
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_247a, label %dec_label_pc_2476

dec_label_pc_2476:                                ; preds = %dec_label_pc_2450
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_247a:                                ; preds = %dec_label_pc_2450
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED1Ev(i32* %arg1) {
dec_label_pc_2480:
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_24aa, label %dec_label_pc_24a6

dec_label_pc_24a6:                                ; preds = %dec_label_pc_2480
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_24aa:                                ; preds = %dec_label_pc_2480
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE11get_deleterERKSt9type_info() {
dec_label_pc_24b0:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_24d0, label %dec_label_pc_24cc

dec_label_pc_24cc:                                ; preds = %dec_label_pc_24b0
  ret i32 0

dec_label_pc_24d0:                                ; preds = %dec_label_pc_24b0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_24e0:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2500, label %dec_label_pc_24fc

dec_label_pc_24fc:                                ; preds = %dec_label_pc_24e0
  ret i32 0

dec_label_pc_2500:                                ; preds = %dec_label_pc_24e0
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_2510:
  %v1_2523 = add i32 %arg1, 12
  %v2_2523 = inttoptr i32 %v1_2523 to i32*
  %v3_2523 = load i32, i32* %v2_2523, align 4
  %v1_2526 = icmp eq i32 %v3_2523, 0
  br i1 %v1_2526, label %dec_label_pc_2548, label %dec_label_pc_252a

dec_label_pc_252a:                                ; preds = %dec_label_pc_2510
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2559, label %dec_label_pc_2537

dec_label_pc_2537:                                ; preds = %dec_label_pc_252a
  %v1_2537 = inttoptr i32 %v3_2523 to i32*
  %v2_2537 = load i32, i32* %v1_2537, align 4
  %v1_253d = add i32 %v2_2537, 4
  %v2_253d = inttoptr i32 %v1_253d to i32*
  %v3_253d = load i32, i32* %v2_253d, align 4
  ret i32 %v3_253d

dec_label_pc_2548:                                ; preds = %dec_label_pc_2510
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2559, label %dec_label_pc_2555

dec_label_pc_2555:                                ; preds = %dec_label_pc_2548
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_2559:                                ; preds = %dec_label_pc_2548, %dec_label_pc_252a
  %v1_2559 = phi i32 [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_2548 ], [ %v3_2523, %dec_label_pc_252a ]
  ret i32 %v1_2559
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEE11get_deleterERKSt9type_info() {
dec_label_pc_2570:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2590, label %dec_label_pc_258c

dec_label_pc_258c:                                ; preds = %dec_label_pc_2570
  ret i32 0

dec_label_pc_2590:                                ; preds = %dec_label_pc_2570
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE7disposeEv(i32 %arg1) {
dec_label_pc_25a0:
  %v1_25b3 = add i32 %arg1, 12
  %v2_25b3 = inttoptr i32 %v1_25b3 to i32*
  %v3_25b3 = load i32, i32* %v2_25b3, align 4
  %v1_25b6 = icmp eq i32 %v3_25b3, 0
  br i1 %v1_25b6, label %dec_label_pc_25d8, label %dec_label_pc_25ba

dec_label_pc_25ba:                                ; preds = %dec_label_pc_25a0
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_25e9, label %dec_label_pc_25c7

dec_label_pc_25c7:                                ; preds = %dec_label_pc_25ba
  %v1_25c7 = inttoptr i32 %v3_25b3 to i32*
  %v2_25c7 = load i32, i32* %v1_25c7, align 4
  %v1_25cd = add i32 %v2_25c7, 4
  %v2_25cd = inttoptr i32 %v1_25cd to i32*
  %v3_25cd = load i32, i32* %v2_25cd, align 4
  ret i32 %v3_25cd

dec_label_pc_25d8:                                ; preds = %dec_label_pc_25a0
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_25e9, label %dec_label_pc_25e5

dec_label_pc_25e5:                                ; preds = %dec_label_pc_25d8
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_25e9:                                ; preds = %dec_label_pc_25d8, %dec_label_pc_25ba
  %v1_25e9 = phi i32 [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_25d8 ], [ %v3_25b3, %dec_label_pc_25ba ]
  ret i32 %v1_25e9
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEE11get_deleterERKSt9type_info() {
dec_label_pc_2600:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_2620, label %dec_label_pc_261c

dec_label_pc_261c:                                ; preds = %dec_label_pc_2600
  ret i32 0

dec_label_pc_2620:                                ; preds = %dec_label_pc_2600
  ret i32 0
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_16exception_detail10clone_implINS2_10bad_alloc_EEEED0Ev(i32* %arg1) {
dec_label_pc_2630:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2630.dec_label_pc_2657_crit_edge

dec_label_pc_2630.dec_label_pc_2657_crit_edge:    ; preds = %dec_label_pc_2630
  %v17_265b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2657

bb:                                               ; preds = %dec_label_pc_2630
  %v4_2655 = call i32 @function_2663(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2657

dec_label_pc_2657:                                ; preds = %dec_label_pc_2630.dec_label_pc_2657_crit_edge, %bb
  %v17_265b = phi i32 [ %v17_265b.pre, %dec_label_pc_2630.dec_label_pc_2657_crit_edge ], [ %v4_2655, %bb ]
  ret i32 %v17_265b

; uselistorder directives
  uselistorder label %dec_label_pc_2657, { 1, 0 }
}

define i32 @function_2663(i32 %arg1) local_unnamed_addr {
dec_label_pc_2663:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_2670:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2670.dec_label_pc_2697_crit_edge

dec_label_pc_2670.dec_label_pc_2697_crit_edge:    ; preds = %dec_label_pc_2670
  %v17_269b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2697

bb:                                               ; preds = %dec_label_pc_2670
  %v4_2695 = call i32 @function_26a3(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2697

dec_label_pc_2697:                                ; preds = %dec_label_pc_2670.dec_label_pc_2697_crit_edge, %bb
  %v17_269b = phi i32 [ %v17_269b.pre, %dec_label_pc_2670.dec_label_pc_2697_crit_edge ], [ %v4_2695, %bb ]
  ret i32 %v17_269b

; uselistorder directives
  uselistorder label %dec_label_pc_2697, { 1, 0 }
}

define i32 @function_26a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_26a3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_26b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_26b0.dec_label_pc_26d7_crit_edge

dec_label_pc_26b0.dec_label_pc_26d7_crit_edge:    ; preds = %dec_label_pc_26b0
  %v17_26db.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_26d7

bb:                                               ; preds = %dec_label_pc_26b0
  %v4_26d5 = call i32 @function_26e3(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_26d7

dec_label_pc_26d7:                                ; preds = %dec_label_pc_26b0.dec_label_pc_26d7_crit_edge, %bb
  %v17_26db = phi i32 [ %v17_26db.pre, %dec_label_pc_26b0.dec_label_pc_26d7_crit_edge ], [ %v4_26d5, %bb ]
  ret i32 %v17_26db

; uselistorder directives
  uselistorder label %dec_label_pc_26d7, { 1, 0 }
}

define i32 @function_26e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_26e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEED0Ev(i32* %arg1) {
dec_label_pc_26f0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_26f0.dec_label_pc_2717_crit_edge

dec_label_pc_26f0.dec_label_pc_2717_crit_edge:    ; preds = %dec_label_pc_26f0
  %v17_271b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2717

bb:                                               ; preds = %dec_label_pc_26f0
  %v4_2715 = call i32 @function_2723(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2717

dec_label_pc_2717:                                ; preds = %dec_label_pc_26f0.dec_label_pc_2717_crit_edge, %bb
  %v17_271b = phi i32 [ %v17_271b.pre, %dec_label_pc_26f0.dec_label_pc_2717_crit_edge ], [ %v4_2715, %bb ]
  ret i32 %v17_271b

; uselistorder directives
  uselistorder label %dec_label_pc_2717, { 1, 0 }
}

define i32 @function_2723(i32 %arg1) local_unnamed_addr {
dec_label_pc_2723:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail15sp_counted_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2730:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_14938.859 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2730.dec_label_pc_2757_crit_edge

dec_label_pc_2730.dec_label_pc_2757_crit_edge:    ; preds = %dec_label_pc_2730
  %v17_275b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2757

bb:                                               ; preds = %dec_label_pc_2730
  %v4_2755 = call i32 @function_2763(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2757

dec_label_pc_2757:                                ; preds = %dec_label_pc_2730.dec_label_pc_2757_crit_edge, %bb
  %v17_275b = phi i32 [ %v17_275b.pre, %dec_label_pc_2730.dec_label_pc_2757_crit_edge ], [ %v4_2755, %bb ]
  ret i32 %v17_275b

; uselistorder directives
  uselistorder label %dec_label_pc_2757, { 1, 0 }
}

define i32 @function_2763(i32 %arg1) local_unnamed_addr {
dec_label_pc_2763:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail10clone_baseD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_2770:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2770.dec_label_pc_2797_crit_edge

dec_label_pc_2770.dec_label_pc_2797_crit_edge:    ; preds = %dec_label_pc_2770
  %v17_279b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2797

bb:                                               ; preds = %dec_label_pc_2770
  %v4_2795 = call i32 @function_27a3(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2797

dec_label_pc_2797:                                ; preds = %dec_label_pc_2770.dec_label_pc_2797_crit_edge, %bb
  %v17_279b = phi i32 [ %v17_279b.pre, %dec_label_pc_2770.dec_label_pc_2797_crit_edge ], [ %v4_2795, %bb ]
  ret i32 %v17_279b

; uselistorder directives
  uselistorder label %dec_label_pc_2797, { 1, 0 }
}

define i32 @function_27a3(i32 %arg1) local_unnamed_addr {
dec_label_pc_27a3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6system14error_categoryD0Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_27b0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (i32* @global_var_146f8.860 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_27b0.dec_label_pc_27d7_crit_edge

dec_label_pc_27b0.dec_label_pc_27d7_crit_edge:    ; preds = %dec_label_pc_27b0
  %v17_27db.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_27d7

bb:                                               ; preds = %dec_label_pc_27b0
  %v4_27d5 = call i32 @function_27e3(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_27d7

dec_label_pc_27d7:                                ; preds = %dec_label_pc_27b0.dec_label_pc_27d7_crit_edge, %bb
  %v17_27db = phi i32 [ %v17_27db.pre, %dec_label_pc_27b0.dec_label_pc_27d7_crit_edge ], [ %v4_27d5, %bb ]
  ret i32 %v17_27db

; uselistorder directives
  uselistorder label %dec_label_pc_27d7, { 1, 0 }
}

define i32 @function_27e3(i32 %arg1) local_unnamed_addr {
dec_label_pc_27e3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE10deallocateEPSA_j(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_27f0:
  store i32 %arg1, i32* @eax, align 4
  %tmp112 = icmp ult i32 %arg2, 11
  br i1 %tmp112, label %dec_label_pc_280b, label %dec_label_pc_2820

dec_label_pc_280b:                                ; preds = %dec_label_pc_27f0
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2818

bb:                                               ; preds = %dec_label_pc_280b
  %v4_2816 = call i32 @function_283e(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2818

dec_label_pc_2818:                                ; preds = %bb, %dec_label_pc_280b
  %v0_281b = phi i32 [ %v4_2816, %bb ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_280b ]
  ret i32 %v0_281b

dec_label_pc_2820:                                ; preds = %dec_label_pc_27f0
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb110, label %dec_label_pc_2832

bb110:                                            ; preds = %dec_label_pc_2820
  %v4_2830 = call i32 @function_283e(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2832

dec_label_pc_2832:                                ; preds = %bb110, %dec_label_pc_2820
  %v17_2836 = phi i32 [ %v4_2830, %bb110 ], [ %arg1, %dec_label_pc_2820 ]
  ret i32 %v17_2836

; uselistorder directives
  uselistorder i32 (i32)* @function_283e, { 1, 0 }
}

define i32 @function_283e(i32 %arg1) local_unnamed_addr {
dec_label_pc_283e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost17bad_function_callD1Ev(i32* %arg1) {
dec_label_pc_2850:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_2850.dec_label_pc_2877_crit_edge

dec_label_pc_2850.dec_label_pc_2877_crit_edge:    ; preds = %dec_label_pc_2850
  %v17_287b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2877

bb:                                               ; preds = %dec_label_pc_2850
  %v4_2875 = call i32 @function_2883(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2877

dec_label_pc_2877:                                ; preds = %dec_label_pc_2850.dec_label_pc_2877_crit_edge, %bb
  %v17_287b = phi i32 [ %v17_287b.pre, %dec_label_pc_2850.dec_label_pc_2877_crit_edge ], [ %v4_2875, %bb ]
  ret i32 %v17_287b

; uselistorder directives
  uselistorder label %dec_label_pc_2877, { 1, 0 }
}

define i32 @function_2883(i32 %arg1) local_unnamed_addr {
dec_label_pc_2883:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6system12system_errorD1Ev(i32* %arg1) {
dec_label_pc_2890:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_14720_type* @global_var_14720.862 to i32), i32* %arg1, align 4
  %v1_28aa = add i32 %tmp99, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  ret i32 %v1_28aa
}

define i32 @_ZN5boost16thread_exceptionD1Ev(i32* %arg1) {
dec_label_pc_28e0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_28e0.dec_label_pc_2907_crit_edge

dec_label_pc_28e0.dec_label_pc_2907_crit_edge:    ; preds = %dec_label_pc_28e0
  %v17_290b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_2907

bb:                                               ; preds = %dec_label_pc_28e0
  %v4_2905 = call i32 @function_2913(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_2907

dec_label_pc_2907:                                ; preds = %dec_label_pc_28e0.dec_label_pc_2907_crit_edge, %bb
  %v17_290b = phi i32 [ %v17_290b.pre, %dec_label_pc_28e0.dec_label_pc_2907_crit_edge ], [ %v4_2905, %bb ]
  ret i32 %v17_290b

; uselistorder directives
  uselistorder label %dec_label_pc_2907, { 1, 0 }
}

define i32 @function_2913(i32 %arg1) local_unnamed_addr {
dec_label_pc_2913:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_2920:
  %v4_2920 = add i32 %arg1, -24
  %v1_2925 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %v4_2920)
  ret i32 %v1_2925
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv(i32 %arg1) {
dec_label_pc_2930:
  ret i32 0
}

define i32 @function_2952() local_unnamed_addr {
dec_label_pc_2952:
  %eax.global-to-local = alloca i32, align 4
  %v0_2952 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_2952
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEE3runEv(i32 %arg1) {
dec_label_pc_31c0:
  %v1_31e6 = add i32 %arg1, ptrtoint (i32* @global_var_108.865 to i32)
  ret i32 %v1_31e6
}

define i32 @function_3203(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_3203:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_3203 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3203 = add i32 %v0_3203, 1696343108
  %v2_3203 = inttoptr i32 %v1_3203 to i32*
  %v3_3203 = load i32, i32* %v2_3203, align 4
  %v4_3203 = add i32 %v3_3203, -1
  store i32 %v4_3203, i32* %v2_3203, align 4
  %v0_3209 = load i32, i32* %eax.global-to-local, align 4
  %v3_3209 = xor i32 %v0_3209, ptrtoint ([2 x i8]* @2 to i32)
  %v4_3209 = icmp eq i32 %v3_3209, 0
  store i32 %v3_3209, i32* %eax.global-to-local, align 4
  %v1_320f = icmp eq i1 %v4_3209, false
  br i1 %v1_320f, label %dec_label_pc_321d, label %dec_label_pc_3211

dec_label_pc_3211:                                ; preds = %dec_label_pc_3203
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v3_3209

dec_label_pc_321d:                                ; preds = %dec_label_pc_3203
  ret i32 %v3_3209

; uselistorder directives
  uselistorder i32 %v3_3209, { 1, 0, 2, 3 }
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED1Ev(i32* %arg1) {
dec_label_pc_3240:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_14998_type* @global_var_14998.866 to i32), i32* %arg1, align 4
  %v1_325a = add i32 %tmp99, ptrtoint (i32* @global_var_108.865 to i32)
  ret i32 %v1_325a
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockC2EP15pthread_mutex_t.part.26() local_unnamed_addr {
dec_label_pc_389a:
  ret i32 0
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD2Ev.part.27() local_unnamed_addr {
dec_label_pc_38ce:
  ret i32 0
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv.part.75() local_unnamed_addr {
dec_label_pc_3902:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEptEv.isra.249.part.250() local_unnamed_addr {
dec_label_pc_3936:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_state17connection_bodiesEv.part.361() local_unnamed_addr {
dec_label_pc_396a:
  ret i32 0
}

define i32 @_ZNK5boost10shared_ptrINS_8signals26detail15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSC_SD_EEEEENS1_5mutexEEEEptEv.isra.481.part.482() local_unnamed_addr {
dec_label_pc_399e:
  ret i32 0
}

define i32 @_ZN11CDataStream5writeEPKci.part.499() local_unnamed_addr {
dec_label_pc_39d2:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EED2Ev.part.669() local_unnamed_addr {
dec_label_pc_3a06:
  ret i32 0
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE19unchecked_push_backERKSA_.part.701() local_unnamed_addr {
dec_label_pc_3a3a:
  ret i32 0
}

define i32 @_ZNK5boost8signals26detail14group_key_lessIiSt4lessIiEEclERKSt4pairINS1_15slot_meta_groupENS_8optionalIiEEESC_.isra.755.part.756() local_unnamed_addr {
dec_label_pc_3a6e:
  ret i32 0
}

define i32 @_ZN5boost17bad_function_callD0Ev(i32* %arg1) {
dec_label_pc_3ab0:
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost6detail11thread_dataINS_3_bi6bind_tIvPFvSsENS2_5list1INS2_5valueISsEEEEEEED0Ev(i32* %arg1) {
dec_label_pc_3b00:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_14998_type* @global_var_14998.866 to i32), i32* %arg1, align 4
  %v1_3b1a = add i32 %tmp99, ptrtoint (i32* @global_var_108.865 to i32)
  ret i32 %v1_3b1a

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_14998_type* @global_var_14998.866 to i32), { 1, 0 }
}

define i32 @_ZN5boost10lock_errorD0Ev(i32* %arg1) {
dec_label_pc_3b50:
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost21thread_resource_errorD1Ev(i32* %arg1) {
dec_label_pc_3ba0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_3ba0.dec_label_pc_3bc7_crit_edge

dec_label_pc_3ba0.dec_label_pc_3bc7_crit_edge:    ; preds = %dec_label_pc_3ba0
  %v17_3bcb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_3bc7

bb:                                               ; preds = %dec_label_pc_3ba0
  %v4_3bc5 = call i32 @function_3bd3(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_3bc7

dec_label_pc_3bc7:                                ; preds = %dec_label_pc_3ba0.dec_label_pc_3bc7_crit_edge, %bb
  %v17_3bcb = phi i32 [ %v17_3bcb.pre, %dec_label_pc_3ba0.dec_label_pc_3bc7_crit_edge ], [ %v4_3bc5, %bb ]
  ret i32 %v17_3bcb

; uselistorder directives
  uselistorder label %dec_label_pc_3bc7, { 1, 0 }
}

define i32 @function_3bd3(i32 %arg1) local_unnamed_addr {
dec_label_pc_3bd3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost10lock_errorD1Ev(i32* %arg1) {
dec_label_pc_3be0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* @eax, align 4
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_3be0.dec_label_pc_3c07_crit_edge

dec_label_pc_3be0.dec_label_pc_3c07_crit_edge:    ; preds = %dec_label_pc_3be0
  %v17_3c0b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_3c07

bb:                                               ; preds = %dec_label_pc_3be0
  %v4_3c05 = call i32 @function_3c13(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_3c07

dec_label_pc_3c07:                                ; preds = %dec_label_pc_3be0.dec_label_pc_3c07_crit_edge, %bb
  %v17_3c0b = phi i32 [ %v17_3c0b.pre, %dec_label_pc_3be0.dec_label_pc_3c07_crit_edge ], [ %v4_3c05, %bb ]
  ret i32 %v17_3c0b

; uselistorder directives
  uselistorder label %dec_label_pc_3c07, { 1, 0 }
}

define i32 @function_3c13(i32 %arg1) local_unnamed_addr {
dec_label_pc_3c13:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16thread_exceptionD0Ev(i32* %arg1) {
dec_label_pc_3c20:
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost21thread_resource_errorD0Ev(i32* %arg1) {
dec_label_pc_3c70:
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %arg1, align 4
  ret i32 0
}

define i32 @_ZN5boost6system12system_errorD0Ev(i32* %arg1) {
dec_label_pc_3cc0:
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (%vtable_14720_type* @global_var_14720.862 to i32), i32* %arg1, align 4
  %v1_3cda = add i32 %tmp99, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  ret i32 %v1_3cda

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_14720_type* @global_var_14720.862 to i32), { 1, 0 }
}

define i32 @_ZThn24_NK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3d10:
  %v4_3d10 = add i32 %arg1, -24
  %v1_3d15 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %v4_3d10)
  ret i32 %v1_3d15
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv(i32 %arg1) {
dec_label_pc_3d20:
  ret i32 0
}

define i32 @function_3d40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3d40:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3d40 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3d40 = add i32 %v0_3d40, 1744881603
  %v2_3d40 = inttoptr i32 %v1_3d40 to i32*
  %v3_3d40 = load i32, i32* %v2_3d40, align 4
  %v4_3d40 = add i32 %v3_3d40, -1
  store i32 %v4_3d40, i32* %v2_3d40, align 4
  %v0_3d46 = load i32, i32* %edi.global-to-local, align 4
  %v1_3d46 = add i32 %v0_3d46, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_3d46, i32* %edi.global-to-local, align 4
  %v2_3d47 = load i32, i32* %eax.global-to-local, align 4
  %v4_3d47 = mul i32 %v2_3d47, 2
  %v21_3d47 = inttoptr i32 %v2_3d47 to i32*
  store i32 %v4_3d47, i32* %v21_3d47, align 4
  %v0_3d49 = load i32, i32* %esi.global-to-local, align 4
  %v1_3d49 = add i32 %v0_3d49, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_3d49 = inttoptr i32 %v1_3d49 to i32*
  %v3_3d49 = load i32, i32* %v2_3d49, align 4
  store i32 %v3_3d49, i32* %eax.global-to-local, align 4
  %v1_3d4c = icmp eq i32 %v3_3d49, 0
  %v1_3d4e = load i32, i32* %ebx.global-to-local, align 4
  %v2_3d4e = add i32 %v1_3d4e, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_3d4e = inttoptr i32 %v2_3d4e to i32*
  store i32 %v3_3d49, i32* %v3_3d4e, align 4
  br i1 %v1_3d4c, label %dec_label_pc_3d5b, label %dec_label_pc_3d53

dec_label_pc_3d53:                                ; preds = %dec_label_pc_3d40
  br label %dec_label_pc_3d5b

dec_label_pc_3d5b:                                ; preds = %dec_label_pc_3d53, %dec_label_pc_3d40
  %v0_3d5b = load i32, i32* %esi.global-to-local, align 4
  %v1_3d5b = add i32 %v0_3d5b, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_3d5b = inttoptr i32 %v1_3d5b to i32*
  %v3_3d5b = load i32, i32* %v2_3d5b, align 4
  store i32 %v3_3d5b, i32* %eax.global-to-local, align 4
  %v4_3d62 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_3d69 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3d69 = inttoptr i32 %v0_3d69 to i32*
  store i32 ptrtoint (%vtable_14af8_type* @global_var_14af8.892 to i32), i32* %v1_3d69, align 4
  %v0_3d6f = load i32, i32* %eax.global-to-local, align 4
  %v1_3d6f = load i32, i32* %ebx.global-to-local, align 4
  %v2_3d6f = add i32 %v1_3d6f, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_3d6f = inttoptr i32 %v2_3d6f to i32*
  store i32 %v0_3d6f, i32* %v3_3d6f, align 4
  %v0_3d72 = load i32, i32* %esi.global-to-local, align 4
  %v1_3d72 = add i32 %v0_3d72, 12
  %v2_3d72 = inttoptr i32 %v1_3d72 to i32*
  %v3_3d72 = load i32, i32* %v2_3d72, align 4
  store i32 %v3_3d72, i32* %eax.global-to-local, align 4
  %v1_3d75 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3d75 = add i32 %v1_3d75, 12
  %v3_3d75 = inttoptr i32 %v2_3d75 to i32*
  store i32 %v3_3d72, i32* %v3_3d75, align 4
  %v0_3d78 = load i32, i32* %esi.global-to-local, align 4
  %v1_3d78 = add i32 %v0_3d78, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_3d78 = inttoptr i32 %v1_3d78 to i32*
  %v3_3d78 = load i32, i32* %v2_3d78, align 4
  store i32 %v3_3d78, i32* %eax.global-to-local, align 4
  %v0_3d7b = load i32, i32* %ebx.global-to-local, align 4
  %v1_3d7b = add i32 %v0_3d7b, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_3d7b = inttoptr i32 %v1_3d7b to i32*
  store i32 ptrtoint (i32* @global_var_14b10.893 to i32), i32* %v2_3d7b, align 4
  %v0_3d82 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3d82 = add i32 %v0_3d82, 24
  %v2_3d82 = inttoptr i32 %v1_3d82 to i32*
  store i32 ptrtoint (i32* @global_var_14b24.894 to i32), i32* %v2_3d82, align 4
  %v0_3d89 = load i32, i32* %eax.global-to-local, align 4
  %v1_3d89 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3d89 = add i32 %v1_3d89, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_3d89 = inttoptr i32 %v2_3d89 to i32*
  store i32 %v0_3d89, i32* %v3_3d89, align 4
  %v0_3d8c = load i32, i32* %ebx.global-to-local, align 4
  %v1_3d8c = add i32 %v0_3d8c, 24
  store i32 %v1_3d8c, i32* %eax.global-to-local, align 4
  %v1_3d8f = icmp eq i1 %v4_3d62, false
  br i1 %v1_3d8f, label %dec_label_pc_3d97, label %dec_label_pc_3d91

dec_label_pc_3d91:                                ; preds = %dec_label_pc_3d5b
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_3d8c

dec_label_pc_3d97:                                ; preds = %dec_label_pc_3d5b
  ret i32 %v1_3d8c

; uselistorder directives
  uselistorder i32 %v1_3d8c, { 1, 0, 2 }
  uselistorder i32 %v2_3d47, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3db0:
  %v4_3db0 = add i32 %arg1, -28
  %v1_3db5 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %v4_3db0)
  ret i32 %v1_3db5
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_3dc0:
  ret i32 0
}

define i32 @function_3de0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3de0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3de0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3de0 = add i32 %v0_3de0, 71732163
  %v2_3de0 = inttoptr i32 %v1_3de0 to i32*
  %v3_3de0 = load i32, i32* %v2_3de0, align 4
  %v4_3de0 = add i32 %v3_3de0, -1
  store i32 %v4_3de0, i32* %v2_3de0, align 4
  %v0_3de6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3de6 = inttoptr i32 %v0_3de6 to i32*
  store i32 ptrtoint (%vtable_14750_type* @global_var_14750.895 to i32), i32* %v1_3de6, align 4
  %v0_3dec = load i32, i32* %ebx.global-to-local, align 4
  %v1_3dec = add i32 %v0_3dec, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_3dec = inttoptr i32 %v1_3dec to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_3dec, align 4
  %v0_3df3 = load i32, i32* %eax.global-to-local, align 4
  %v1_3df3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3df3 = add i32 %v1_3df3, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_3df3 = inttoptr i32 %v2_3df3 to i32*
  store i32 %v0_3df3, i32* %v3_3df3, align 4
  %v0_3df6 = load i32, i32* %esi.global-to-local, align 4
  %v1_3df6 = add i32 %v0_3df6, 12
  %v2_3df6 = inttoptr i32 %v1_3df6 to i32*
  %v3_3df6 = load i32, i32* %v2_3df6, align 4
  store i32 %v3_3df6, i32* %eax.global-to-local, align 4
  %v1_3df9 = icmp eq i32 %v3_3df6, 0
  %v1_3dfb = load i32, i32* %ebx.global-to-local, align 4
  %v2_3dfb = add i32 %v1_3dfb, 12
  %v3_3dfb = inttoptr i32 %v2_3dfb to i32*
  store i32 %v3_3df6, i32* %v3_3dfb, align 4
  br i1 %v1_3df9, label %dec_label_pc_3e08, label %dec_label_pc_3e00

dec_label_pc_3e00:                                ; preds = %dec_label_pc_3de0
  br label %dec_label_pc_3e08

dec_label_pc_3e08:                                ; preds = %dec_label_pc_3e00, %dec_label_pc_3de0
  %v0_3e08 = load i32, i32* %esi.global-to-local, align 4
  %v1_3e08 = add i32 %v0_3e08, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_3e08 = inttoptr i32 %v1_3e08 to i32*
  %v3_3e08 = load i32, i32* %v2_3e08, align 4
  store i32 %v3_3e08, i32* %eax.global-to-local, align 4
  %v4_3e0f = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_3e16 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3e16 = add i32 %v0_3e16, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_3e16 = inttoptr i32 %v1_3e16 to i32*
  store i32 ptrtoint (i32* @global_var_147d4.897 to i32), i32* %v2_3e16, align 4
  %v0_3e1d = load i32, i32* %eax.global-to-local, align 4
  %v1_3e1d = load i32, i32* %ebx.global-to-local, align 4
  %v2_3e1d = add i32 %v1_3e1d, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_3e1d = inttoptr i32 %v2_3e1d to i32*
  store i32 %v0_3e1d, i32* %v3_3e1d, align 4
  %v0_3e20 = load i32, i32* %esi.global-to-local, align 4
  %v1_3e20 = add i32 %v0_3e20, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_3e20 = inttoptr i32 %v1_3e20 to i32*
  %v3_3e20 = load i32, i32* %v2_3e20, align 4
  store i32 %v3_3e20, i32* %eax.global-to-local, align 4
  %v1_3e23 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3e23 = add i32 %v1_3e23, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_3e23 = inttoptr i32 %v2_3e23 to i32*
  store i32 %v3_3e20, i32* %v3_3e23, align 4
  %v0_3e26 = load i32, i32* %esi.global-to-local, align 4
  %v1_3e26 = add i32 %v0_3e26, 24
  %v2_3e26 = inttoptr i32 %v1_3e26 to i32*
  %v3_3e26 = load i32, i32* %v2_3e26, align 4
  store i32 %v3_3e26, i32* %eax.global-to-local, align 4
  %v0_3e29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3e29 = inttoptr i32 %v0_3e29 to i32*
  store i32 ptrtoint (%vtable_147b8_type* @global_var_147b8.898 to i32), i32* %v1_3e29, align 4
  %v0_3e2f = load i32, i32* %ebx.global-to-local, align 4
  %v1_3e2f = add i32 %v0_3e2f, 28
  %v2_3e2f = inttoptr i32 %v1_3e2f to i32*
  store i32 ptrtoint (i32* @global_var_147e4.899 to i32), i32* %v2_3e2f, align 4
  %v0_3e36 = load i32, i32* %eax.global-to-local, align 4
  %v1_3e36 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3e36 = add i32 %v1_3e36, 24
  %v3_3e36 = inttoptr i32 %v2_3e36 to i32*
  store i32 %v0_3e36, i32* %v3_3e36, align 4
  %v0_3e39 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3e39 = add i32 %v0_3e39, 28
  store i32 %v1_3e39, i32* %eax.global-to-local, align 4
  %v1_3e3c = icmp eq i1 %v4_3e0f, false
  br i1 %v1_3e3c, label %dec_label_pc_3e44, label %dec_label_pc_3e3e

dec_label_pc_3e3e:                                ; preds = %dec_label_pc_3e08
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_3e39

dec_label_pc_3e44:                                ; preds = %dec_label_pc_3e08
  ret i32 %v1_3e39

; uselistorder directives
  uselistorder i32 %v1_3e39, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_3e70:
  %v4_3e70 = add i32 %arg1, -28
  %v1_3e75 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %v4_3e70)
  ret i32 %v1_3e75
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv(i32 %arg1) {
dec_label_pc_3e80:
  ret i32 0
}

define i32 @function_3ea0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_3ea0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3ea0 = load i32, i32* %ecx.global-to-local, align 4
  %v1_3ea0 = add i32 %v0_3ea0, 71732163
  %v2_3ea0 = inttoptr i32 %v1_3ea0 to i32*
  %v3_3ea0 = load i32, i32* %v2_3ea0, align 4
  %v4_3ea0 = add i32 %v3_3ea0, -1
  store i32 %v4_3ea0, i32* %v2_3ea0, align 4
  %v0_3ea6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ea6 = inttoptr i32 %v0_3ea6 to i32*
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %v1_3ea6, align 4
  %v0_3eac = load i32, i32* %ebx.global-to-local, align 4
  %v1_3eac = add i32 %v0_3eac, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_3eac = inttoptr i32 %v1_3eac to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_3eac, align 4
  %v0_3eb3 = load i32, i32* %eax.global-to-local, align 4
  %v1_3eb3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3eb3 = add i32 %v1_3eb3, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_3eb3 = inttoptr i32 %v2_3eb3 to i32*
  store i32 %v0_3eb3, i32* %v3_3eb3, align 4
  %v0_3eb6 = load i32, i32* %esi.global-to-local, align 4
  %v1_3eb6 = add i32 %v0_3eb6, 12
  %v2_3eb6 = inttoptr i32 %v1_3eb6 to i32*
  %v3_3eb6 = load i32, i32* %v2_3eb6, align 4
  store i32 %v3_3eb6, i32* %eax.global-to-local, align 4
  %v1_3eb9 = icmp eq i32 %v3_3eb6, 0
  %v1_3ebb = load i32, i32* %ebx.global-to-local, align 4
  %v2_3ebb = add i32 %v1_3ebb, 12
  %v3_3ebb = inttoptr i32 %v2_3ebb to i32*
  store i32 %v3_3eb6, i32* %v3_3ebb, align 4
  br i1 %v1_3eb9, label %dec_label_pc_3ec8, label %dec_label_pc_3ec0

dec_label_pc_3ec0:                                ; preds = %dec_label_pc_3ea0
  br label %dec_label_pc_3ec8

dec_label_pc_3ec8:                                ; preds = %dec_label_pc_3ec0, %dec_label_pc_3ea0
  %v0_3ec8 = load i32, i32* %esi.global-to-local, align 4
  %v1_3ec8 = add i32 %v0_3ec8, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_3ec8 = inttoptr i32 %v1_3ec8 to i32*
  %v3_3ec8 = load i32, i32* %v2_3ec8, align 4
  store i32 %v3_3ec8, i32* %eax.global-to-local, align 4
  %v4_3ecf = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_3ed6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ed6 = add i32 %v0_3ed6, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_3ed6 = inttoptr i32 %v1_3ed6 to i32*
  store i32 ptrtoint (i32* @global_var_14a34.901 to i32), i32* %v2_3ed6, align 4
  %v0_3edd = load i32, i32* %eax.global-to-local, align 4
  %v1_3edd = load i32, i32* %ebx.global-to-local, align 4
  %v2_3edd = add i32 %v1_3edd, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_3edd = inttoptr i32 %v2_3edd to i32*
  store i32 %v0_3edd, i32* %v3_3edd, align 4
  %v0_3ee0 = load i32, i32* %esi.global-to-local, align 4
  %v1_3ee0 = add i32 %v0_3ee0, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_3ee0 = inttoptr i32 %v1_3ee0 to i32*
  %v3_3ee0 = load i32, i32* %v2_3ee0, align 4
  store i32 %v3_3ee0, i32* %eax.global-to-local, align 4
  %v1_3ee3 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3ee3 = add i32 %v1_3ee3, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_3ee3 = inttoptr i32 %v2_3ee3 to i32*
  store i32 %v3_3ee0, i32* %v3_3ee3, align 4
  %v0_3ee6 = load i32, i32* %esi.global-to-local, align 4
  %v1_3ee6 = add i32 %v0_3ee6, 24
  %v2_3ee6 = inttoptr i32 %v1_3ee6 to i32*
  %v3_3ee6 = load i32, i32* %v2_3ee6, align 4
  store i32 %v3_3ee6, i32* %eax.global-to-local, align 4
  %v0_3ee9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ee9 = inttoptr i32 %v0_3ee9 to i32*
  store i32 ptrtoint (%vtable_14a18_type* @global_var_14a18.902 to i32), i32* %v1_3ee9, align 4
  %v0_3eef = load i32, i32* %ebx.global-to-local, align 4
  %v1_3eef = add i32 %v0_3eef, 28
  %v2_3eef = inttoptr i32 %v1_3eef to i32*
  store i32 ptrtoint (i32* @global_var_14a44.903 to i32), i32* %v2_3eef, align 4
  %v0_3ef6 = load i32, i32* %eax.global-to-local, align 4
  %v1_3ef6 = load i32, i32* %ebx.global-to-local, align 4
  %v2_3ef6 = add i32 %v1_3ef6, 24
  %v3_3ef6 = inttoptr i32 %v2_3ef6 to i32*
  store i32 %v0_3ef6, i32* %v3_3ef6, align 4
  %v0_3ef9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_3ef9 = add i32 %v0_3ef9, 28
  store i32 %v1_3ef9, i32* @eax, align 4
  %v1_3efc = icmp eq i1 %v4_3ecf, false
  br i1 %v1_3efc, label %dec_label_pc_3f04, label %dec_label_pc_3efe

dec_label_pc_3efe:                                ; preds = %dec_label_pc_3ec8
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_3ef9

dec_label_pc_3f04:                                ; preds = %dec_label_pc_3ec8
  store i32 %v1_3ef9, i32* %esi.global-to-local, align 4
  %v1_3f0e = call i32 @function_7a10(i32 %v0_3ef9)
  store i32 %v1_3f0e, i32* %eax.global-to-local, align 4
  ret i32 %v1_3f0e

; uselistorder directives
  uselistorder i32 %v1_3ef9, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE5cloneEv, { 1, 0 }
}

define i32 @_ZNK5boost6system12system_error4whatEv(i32 %arg1) {
dec_label_pc_3f30:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_3f33 = load i32, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v0_3f3b = load i32, i32* %ebx.global-to-local, align 4
  %v0_3f4b = load i32, i32* %edi.global-to-local, align 4
  %v1_3f4f = add i32 %arg1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_3f4f = inttoptr i32 %v1_3f4f to i32*
  %v3_3f4f = load i32, i32* %v2_3f4f, align 4
  store i32 %v3_3f4f, i32* %ebx.global-to-local, align 4
  %v1_3f52 = add i32 %v3_3f4f, -12
  %v2_3f52 = inttoptr i32 %v1_3f52 to i32*
  %v3_3f52 = load i32, i32* %v2_3f52, align 4
  %v1_3f55 = icmp eq i32 %v3_3f52, 0
  br i1 %v1_3f55, label %dec_label_pc_3f80, label %dec_label_pc_3f59

dec_label_pc_3f59:                                ; preds = %dec_label_pc_3f30
  store i32 %v3_3f4f, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_3f6c

bb:                                               ; preds = %dec_label_pc_3f59
  %v7_3f66 = call i32 @function_4002(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_3f3b, i32 %v0_3f33, i32 %v0_3f4b)
  br label %dec_label_pc_3f6c

dec_label_pc_3f6c:                                ; preds = %bb, %dec_label_pc_3f59
  %v0_3f7b = phi i32 [ %v7_3f66, %bb ], [ %v3_3f4f, %dec_label_pc_3f59 ]
  store i32 %v0_3f3b, i32* %ebx.global-to-local, align 4
  store i32 %v0_3f33, i32* %esi.global-to-local, align 4
  store i32 %v0_3f4b, i32* %edi.global-to-local, align 4
  ret i32 %v0_3f7b

dec_label_pc_3f80:                                ; preds = %dec_label_pc_3f30
  store i32 %v1_3f4f, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  ret i32 0
}

define i32 @function_3faf() local_unnamed_addr {
dec_label_pc_3faf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_3fe0() local_unnamed_addr {
dec_label_pc_3fe0:
  %eax.global-to-local = alloca i32, align 4
  %v0_3fe3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_3fe3
}

define i32 @function_4000() local_unnamed_addr {
dec_label_pc_4000:
  %v0_4000 = call i32 @function_3faf()
  ret i32 %v0_4000
}

define i32 @function_4002(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_4002:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4013() local_unnamed_addr {
dec_label_pc_4013:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4024() local_unnamed_addr {
dec_label_pc_4024:
  %eax.global-to-local = alloca i32, align 4
  %v0_4024 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4024
}

define i32 @function_402a() local_unnamed_addr {
dec_label_pc_402a:
  %eax.global-to-local = alloca i32, align 4
  %v0_402a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_402a
}

define i32 @function_4030() local_unnamed_addr {
dec_label_pc_4030:
  %v0_4030 = call i32 @function_4013()
  ret i32 %v0_4030
}

define i32 @function_4033() local_unnamed_addr {
dec_label_pc_4033:
  %eax.global-to-local = alloca i32, align 4
  %v0_4033 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4033
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_4050:
  %v4_4050 = add i32 %arg1, -28
  %v1_4055 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.811(i32 %v4_4050)
  ret i32 %v1_4055
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.811(i32 %arg1) {
dec_label_pc_4060:
  ret i32 0
}

define i32 @function_409a(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_409a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_409a = load i32, i32* %ebx.global-to-local, align 4
  %v1_409a = add i32 %v0_409a, 63376454
  %v2_409a = inttoptr i32 %v1_409a to i32*
  %v3_409a = load i32, i32* %v2_409a, align 4
  %v4_409a = add i32 %v3_409a, -1
  store i32 %v4_409a, i32* %v2_409a, align 4
  %v0_40a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_40a0 = sub i32 %v0_40a0, ptrtoint (i8** @global_var_1.820 to i32)
  %v1_40a1 = add i32 %v1_40a0, sub (i32 0, i32 ptrtoint (i8** @global_var_1.820 to i32))
  %v9_40a1 = icmp eq i32 %v1_40a1, 0
  store i32 %v1_40a1, i32* %eax.global-to-local, align 4
  %tmp105 = inttoptr i32 %v1_40a1 to i32*
  %v3_40a2 = load i32, i32* %tmp105, align 4
  %v6_40a2 = add i32 %v3_40a2, %v1_40a1
  store i32 %v6_40a2, i32* %tmp105, align 4
  %v0_40a4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_40a4 = add i32 %v0_40a4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_40a4 = inttoptr i32 %v1_40a4 to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_40a4, align 4
  %v2_40ad = load i32, i32* %ebx.global-to-local, align 4
  %v3_40ad = add i32 %v2_40ad, 12
  %v4_40ad = inttoptr i32 %v3_40ad to i32*
  store i32 %v1_40a1, i32* %v4_40ad, align 4
  br i1 %v9_40a1, label %dec_label_pc_40ba, label %dec_label_pc_40b2

dec_label_pc_40b2:                                ; preds = %dec_label_pc_409a
  br label %dec_label_pc_40ba

dec_label_pc_40ba:                                ; preds = %dec_label_pc_40b2, %dec_label_pc_409a
  %v0_40ba = load i32, i32* %esi.global-to-local, align 4
  %v1_40ba = add i32 %v0_40ba, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_40ba = inttoptr i32 %v1_40ba to i32*
  %v3_40ba = load i32, i32* %v2_40ba, align 4
  store i32 %v3_40ba, i32* %eax.global-to-local, align 4
  %v4_40c1 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_40c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_40c8 = add i32 %v0_40c8, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_40c8 = inttoptr i32 %v1_40c8 to i32*
  store i32 ptrtoint (i32* @global_var_148d4.904 to i32), i32* %v2_40c8, align 4
  %v0_40cf = load i32, i32* %eax.global-to-local, align 4
  %v1_40cf = load i32, i32* %ebx.global-to-local, align 4
  %v2_40cf = add i32 %v1_40cf, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_40cf = inttoptr i32 %v2_40cf to i32*
  store i32 %v0_40cf, i32* %v3_40cf, align 4
  %v0_40d2 = load i32, i32* %esi.global-to-local, align 4
  %v1_40d2 = add i32 %v0_40d2, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_40d2 = inttoptr i32 %v1_40d2 to i32*
  %v3_40d2 = load i32, i32* %v2_40d2, align 4
  store i32 %v3_40d2, i32* %eax.global-to-local, align 4
  %v1_40d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_40d5 = add i32 %v1_40d5, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_40d5 = inttoptr i32 %v2_40d5 to i32*
  store i32 %v3_40d2, i32* %v3_40d5, align 4
  %v0_40d8 = load i32, i32* %esi.global-to-local, align 4
  %v1_40d8 = add i32 %v0_40d8, 24
  %v2_40d8 = inttoptr i32 %v1_40d8 to i32*
  %v3_40d8 = load i32, i32* %v2_40d8, align 4
  store i32 %v3_40d8, i32* %eax.global-to-local, align 4
  %v0_40db = load i32, i32* %ebx.global-to-local, align 4
  %v1_40db = inttoptr i32 %v0_40db to i32*
  store i32 ptrtoint (%vtable_148b8_type* @global_var_148b8.905 to i32), i32* %v1_40db, align 4
  %v0_40e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_40e1 = add i32 %v0_40e1, 28
  %v2_40e1 = inttoptr i32 %v1_40e1 to i32*
  store i32 ptrtoint (i32* @global_var_148e4.906 to i32), i32* %v2_40e1, align 4
  %v0_40e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_40e8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_40e8 = add i32 %v1_40e8, 24
  %v3_40e8 = inttoptr i32 %v2_40e8 to i32*
  store i32 %v0_40e8, i32* %v3_40e8, align 4
  %v0_40eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_40eb = add i32 %v0_40eb, 28
  store i32 %v1_40eb, i32* %eax.global-to-local, align 4
  %v1_40ee = icmp eq i1 %v4_40c1, false
  br i1 %v1_40ee, label %dec_label_pc_40f6, label %dec_label_pc_40f0

dec_label_pc_40f0:                                ; preds = %dec_label_pc_40ba
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v1_40eb

dec_label_pc_40f6:                                ; preds = %dec_label_pc_40ba
  ret i32 %v1_40eb

; uselistorder directives
  uselistorder i32 %v1_40eb, { 1, 0, 2 }
  uselistorder i32 %v1_40a1, { 3, 4, 2, 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE5cloneEv.811, { 1, 0 }
}

define i32 @function_4105() local_unnamed_addr {
dec_label_pc_4105:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_411f() local_unnamed_addr {
dec_label_pc_411f:
  %v0_411f = call i32 @function_4105()
  ret i32 %v0_411f
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_415f:
  %ebx.global-to-local = alloca i32, align 4
  %v0_4130 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4150 = add i32 %arg1, 24
  store i32 %v1_4150, i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4195, label %dec_label_pc_416c

dec_label_pc_416c:                                ; preds = %dec_label_pc_415f
  store i32 %v0_4130, i32* %ebx.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_4195:                                ; preds = %dec_label_pc_415f
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @function_419a(i32 %arg1) local_unnamed_addr {
dec_label_pc_419a:
  %v3_41b2 = load i32, i32* @eax, align 4
  ret i32 %v3_41b2
}

define i32 @_ZN5boost9exceptionD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_41c0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_41c0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* %ebx.global-to-local, align 4
  %v1_41d4 = add i32 %tmp102, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_41d4 = inttoptr i32 %v1_41d4 to i32*
  %v3_41d4 = load i32, i32* %v2_41d4, align 4
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %arg1, align 4
  %v1_41dd = icmp eq i32 %v3_41d4, 0
  br i1 %v1_41dd, label %dec_label_pc_41ed, label %dec_label_pc_41e1

dec_label_pc_41e1:                                ; preds = %dec_label_pc_41c0
  %v3_41dd = trunc i32 %v3_41d4 to i8
  %v5_41e9 = icmp eq i8 %v3_41dd, 0
  %v1_41eb = icmp eq i1 %v5_41e9, false
  br i1 %v1_41eb, label %dec_label_pc_4208, label %dec_label_pc_41ed

dec_label_pc_41ed:                                ; preds = %dec_label_pc_4208, %dec_label_pc_41e1, %dec_label_pc_41c0
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4211, label %dec_label_pc_41fa

dec_label_pc_41fa:                                ; preds = %dec_label_pc_41ed
  store i32 %v0_41c0, i32* %ebx.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_4208:                                ; preds = %dec_label_pc_41e1
  %v0_4208 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4208 = add i32 %v0_4208, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_4208 = inttoptr i32 %v1_4208 to i32*
  store i32 0, i32* %v2_4208, align 4
  br label %dec_label_pc_41ed

dec_label_pc_4211:                                ; preds = %dec_label_pc_41ed
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
}

define i32 @function_4217() local_unnamed_addr {
dec_label_pc_4217:
  %eax.global-to-local = alloca i32, align 4
  %v0_4217 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4217
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4230:
  %v5_4230 = sub i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_4235 = call i32 @function_8470(i32 %v5_4230)
  ret i32 %v2_4235
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D1Ev(i32* %arg1) {
dec_label_pc_4240:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_4240 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), i32* %arg1, align 4
  %v1_425a = add i32 %tmp100, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_425a, i32* %eax.global-to-local, align 4
  %v2_425d = inttoptr i32 %v1_425a to i32*
  store i32 ptrtoint (i32* @global_var_14ac8.912 to i32), i32* %v2_425d, align 4
  %v0_4264 = load i32, i32* %eax.global-to-local, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4286, label %dec_label_pc_4279

dec_label_pc_4279:                                ; preds = %dec_label_pc_4240
  store i32 %v0_4240, i32* %ebx.global-to-local, align 4
  %v2_4281 = call i32 @function_8400(i32 %v0_4264)
  store i32 %v2_4281, i32* %eax.global-to-local, align 4
  ret i32 %v2_4281

dec_label_pc_4286:                                ; preds = %dec_label_pc_4240
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4290:
  %v4_4290 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4295 = call i32 @function_8530(i32 %v4_4290)
  ret i32 %v1_4295
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED1Ev(i32* %arg1) {
dec_label_pc_42a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_42a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), i32* %arg1, align 4
  %v1_42ba = add i32 %tmp100, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_42ba, i32* @eax, align 4
  %v2_42bd = inttoptr i32 %v1_42ba to i32*
  store i32 ptrtoint (i32* @global_var_149ec.914 to i32), i32* %v2_42bd, align 4
  %v0_42c4 = load i32, i32* @eax, align 4
  %v1_42c7 = call i32 @function_8460(i32 %v0_42c4)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  %v0_42d7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_42d7 = inttoptr i32 %v0_42d7 to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_42d7, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_42ec, label %dec_label_pc_42df

dec_label_pc_42df:                                ; preds = %dec_label_pc_42a0
  store i32 %v0_42a0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_42ec

dec_label_pc_42ec:                                ; preds = %dec_label_pc_42df, %dec_label_pc_42a0
  %v0_42e7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_42e7
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4300:
  %v4_4300 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4305 = call i32 @function_8610(i32 %v4_4300)
  ret i32 %v1_4305
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED1Ev(i32* %arg1) {
dec_label_pc_4310:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_4310 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), i32* %arg1, align 4
  %v1_432a = add i32 %tmp100, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_432a, i32* @eax, align 4
  %v2_432d = inttoptr i32 %v1_432a to i32*
  store i32 ptrtoint (i32* @global_var_1478c.916 to i32), i32* %v2_432d, align 4
  %v0_4334 = load i32, i32* @eax, align 4
  %v1_4337 = call i32 @function_84d0(i32 %v0_4334)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  %v0_4347 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4347 = inttoptr i32 %v0_4347 to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_4347, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_435c, label %dec_label_pc_434f

dec_label_pc_434f:                                ; preds = %dec_label_pc_4310
  store i32 %v0_4310, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_435c

dec_label_pc_435c:                                ; preds = %dec_label_pc_434f, %dec_label_pc_4310
  %v0_4357 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4357
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4370:
  %v4_4370 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4375 = call i32 @function_86f0(i32 %v4_4370)
  ret i32 %v1_4375
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED1Ev(i32* %arg1) {
dec_label_pc_4380:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_4380 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp100, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), i32* %arg1, align 4
  %v1_439a = add i32 %tmp100, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_439a, i32* @eax, align 4
  %v2_439d = inttoptr i32 %v1_439a to i32*
  store i32 ptrtoint (i32* @global_var_1488c.918 to i32), i32* %v2_439d, align 4
  %v0_43a4 = load i32, i32* @eax, align 4
  %v1_43a7 = call i32 @function_8540(i32 %v0_43a4)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  %v0_43b7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_43b7 = inttoptr i32 %v0_43b7 to i32*
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %v1_43b7, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_43cc, label %dec_label_pc_43bf

dec_label_pc_43bf:                                ; preds = %dec_label_pc_4380
  store i32 %v0_4380, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_43cc

dec_label_pc_43cc:                                ; preds = %dec_label_pc_43bf, %dec_label_pc_4380
  %v0_43c7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_43c7
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_43e0:
  %v4_43e0 = add i32 %arg1, -24
  %v1_43e5 = call i32 @function_87e0(i32 %v4_43e0)
  ret i32 %v1_43e5
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_43f0:
  %v5_43f0 = sub i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_43f5 = call i32 @function_87e0(i32 %v5_43f0)
  ret i32 %v2_43f5

; uselistorder directives
  uselistorder i32 (i32)* @function_87e0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED1Ev(i32* %arg1) {
dec_label_pc_4400:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  store i32 %tmp99, i32* %ebx.global-to-local, align 4
  %v1_4414 = add i32 %tmp99, 24
  %v2_4414 = inttoptr i32 %v1_4414 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4414, align 4
  %v0_441b = load i32, i32* %ebx.global-to-local, align 4
  %v1_441b = add i32 %v0_441b, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_441b, i32* %eax.global-to-local, align 4
  %v1_441e = inttoptr i32 %v0_441b to i32*
  store i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), i32* %v1_441e, align 4
  %v0_4424 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4424 = add i32 %v0_4424, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_4424 = inttoptr i32 %v1_4424 to i32*
  store i32 ptrtoint (i32* @global_var_14ac8.912 to i32), i32* %v2_4424, align 4
  %v0_442b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_442b
}

define i32 @function_4432(i32 %arg1) local_unnamed_addr {
dec_label_pc_4432:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_4432 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4432 = add i32 %v0_4432, 1696343108
  %v2_4432 = inttoptr i32 %v1_4432 to i32*
  %v3_4432 = load i32, i32* %v2_4432, align 4
  %v4_4432 = add i32 %v3_4432, -1
  store i32 %v4_4432, i32* %v2_4432, align 4
  %v0_4438 = load i32, i32* %eax.global-to-local, align 4
  %v3_4438 = xor i32 %v0_4438, ptrtoint ([2 x i8]* @2 to i32)
  %v4_4438 = icmp eq i32 %v3_4438, 0
  store i32 %v3_4438, i32* @eax, align 4
  %v1_443e = icmp eq i1 %v4_4438, false
  br i1 %v1_443e, label %dec_label_pc_444d, label %dec_label_pc_4440

dec_label_pc_4440:                                ; preds = %dec_label_pc_4432
  %v0_4440 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_4448 = call i32 @function_85c0(i32 %v0_4440)
  store i32 %v1_4448, i32* %eax.global-to-local, align 4
  ret i32 %v1_4448

dec_label_pc_444d:                                ; preds = %dec_label_pc_4432
  ret i32 %v3_4438
}

define i32 @_ZThn20_N5boost16exception_detail10bad_alloc_D0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4460:
  %v5_4460 = sub i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  %tmp100 = inttoptr i32 %v5_4460 to i32*
  %v3_4465 = call i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %tmp100)
  ret i32 %v3_4465
}

define i32 @_ZN5boost16exception_detail10bad_alloc_D0Ev(i32* %arg1) {
dec_label_pc_4470:
  %ebx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg1 to i32
  store i32 %tmp5, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), i32* %arg1, align 4
  %v1_448a = add i32 %tmp5, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_448a, i32* @eax, align 4
  %v2_448d = inttoptr i32 %v1_448a to i32*
  store i32 ptrtoint (i32* @global_var_14ac8.912 to i32), i32* %v2_448d, align 4
  %v0_449c = load i32, i32* %ebx.global-to-local, align 4
  %v2_449f = call i32 @function_8620(i32 %v0_449c)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_44b1

bb:                                               ; preds = %dec_label_pc_4470
  %v2_44af = call i32 @function_44be()
  br label %dec_label_pc_44b1

dec_label_pc_44b1:                                ; preds = %bb, %dec_label_pc_4470
  %v5_44b8 = phi i32 [ %v2_44af, %bb ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_4470 ]
  ret i32 %v5_44b8
}

define i32 @function_44be() local_unnamed_addr {
dec_label_pc_44be:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn24_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_44d0:
  %v4_44d0 = add i32 %arg1, -24
  %v1_44d5 = inttoptr i32 %v4_44d0 to i32*
  %v2_44d5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %v1_44d5)
  ret i32 %v2_44d5
}

define i32 @_ZThn20_N5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_44e0:
  %v5_44e0 = sub i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  %tmp100 = inttoptr i32 %v5_44e0 to i32*
  %v3_44e5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %tmp100)
  ret i32 %v3_44e5
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev(i32* %arg1) {
dec_label_pc_44f0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v1_4504 = add i32 %tmp3, 24
  %v2_4504 = inttoptr i32 %v1_4504 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4504, align 4
  %v0_450b = load i32, i32* %ebx.global-to-local, align 4
  %v1_450b = add i32 %v0_450b, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_450b, i32* %eax.global-to-local, align 4
  %v1_450e = inttoptr i32 %v0_450b to i32*
  store i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), i32* %v1_450e, align 4
  %v0_4514 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4514 = add i32 %v0_4514, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_4514 = inttoptr i32 %v1_4514 to i32*
  store i32 ptrtoint (i32* @global_var_14ac8.912 to i32), i32* %v2_4514, align 4
  %v0_451b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_451b
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4550:
  %v4_4550 = add i32 %arg1, -28
  %v1_4555 = call i32 @function_8ac0(i32 %v4_4550)
  ret i32 %v1_4555
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4560:
  %v4_4560 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4565 = call i32 @function_8ac0(i32 %v4_4560)
  ret i32 %v1_4565

; uselistorder directives
  uselistorder i32 (i32)* @function_8ac0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED1Ev(i32* %arg1) {
dec_label_pc_4570:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_4570 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v1_4584 = add i32 %tmp101, 28
  %v2_4584 = inttoptr i32 %v1_4584 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4584, align 4
  %v0_458b = load i32, i32* %ebx.global-to-local, align 4
  %v1_458b = add i32 %v0_458b, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_458b, i32* @eax, align 4
  %v1_458e = inttoptr i32 %v0_458b to i32*
  store i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), i32* %v1_458e, align 4
  %v0_4594 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4594 = add i32 %v0_4594, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4594 = inttoptr i32 %v1_4594 to i32*
  store i32 ptrtoint (i32* @global_var_1488c.918 to i32), i32* %v2_4594, align 4
  %v0_459b = load i32, i32* @eax, align 4
  %v1_459e = call i32 @function_8730(i32 %v0_459b)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  %v0_45ae = load i32, i32* %ebx.global-to-local, align 4
  %v1_45ae = inttoptr i32 %v0_45ae to i32*
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %v1_45ae, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_4570.dec_label_pc_45b6_crit_edge

dec_label_pc_4570.dec_label_pc_45b6_crit_edge:    ; preds = %dec_label_pc_4570
  %v5_45bd.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_45b6

bb:                                               ; preds = %dec_label_pc_4570
  %v2_45b4 = call i32 @function_45c3()
  br label %dec_label_pc_45b6

dec_label_pc_45b6:                                ; preds = %dec_label_pc_4570.dec_label_pc_45b6_crit_edge, %bb
  %v5_45bd = phi i32 [ %v5_45bd.pre, %dec_label_pc_4570.dec_label_pc_45b6_crit_edge ], [ %v2_45b4, %bb ]
  store i32 %v0_4570, i32* %ebx.global-to-local, align 4
  ret i32 %v5_45bd

; uselistorder directives
  uselistorder label %dec_label_pc_45b6, { 1, 0 }
}

define i32 @function_45c3() local_unnamed_addr {
dec_label_pc_45c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_45d0:
  %v4_45d0 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_45d5 = inttoptr i32 %v4_45d0 to i32*
  %v2_45d5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %v1_45d5)
  ret i32 %v2_45d5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev(i32* %arg1) {
dec_label_pc_45e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), i32* %arg1, align 4
  %v1_45fa = add i32 %tmp3, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_45fa, i32* @eax, align 4
  %v2_45fd = inttoptr i32 %v1_45fa to i32*
  store i32 ptrtoint (i32* @global_var_1488c.918 to i32), i32* %v2_45fd, align 4
  %v0_4604 = load i32, i32* @eax, align 4
  %v1_4607 = call i32 @function_8790(i32 %v0_4604)
  store i32 %v1_4607, i32* %eax.global-to-local, align 4
  %v0_460c = load i32, i32* %ebx.global-to-local, align 4
  %v1_460c = inttoptr i32 %v0_460c to i32*
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %v1_460c, align 4
  %v3_4612 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4612
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4640:
  %v4_4640 = add i32 %arg1, -28
  %v1_4645 = inttoptr i32 %v4_4640 to i32*
  %v2_4645 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %v1_4645)
  ret i32 %v2_4645
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4650:
  %v4_4650 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4655 = inttoptr i32 %v4_4650 to i32*
  %v2_4655 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %v1_4655)
  ret i32 %v2_4655

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEED0Ev(i32* %arg1) {
dec_label_pc_4660:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v1_4674 = add i32 %tmp3, 28
  %v2_4674 = inttoptr i32 %v1_4674 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4674, align 4
  %v0_467b = load i32, i32* %ebx.global-to-local, align 4
  %v1_467b = add i32 %v0_467b, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_467b, i32* @eax, align 4
  %v1_467e = inttoptr i32 %v0_467b to i32*
  store i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), i32* %v1_467e, align 4
  %v0_4684 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4684 = add i32 %v0_4684, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4684 = inttoptr i32 %v1_4684 to i32*
  store i32 ptrtoint (i32* @global_var_1488c.918 to i32), i32* %v2_4684, align 4
  %v0_468b = load i32, i32* @eax, align 4
  %v1_468e = call i32 @function_8800(i32 %v0_468b)
  store i32 %v1_468e, i32* %eax.global-to-local, align 4
  %v0_4693 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4693 = inttoptr i32 %v0_4693 to i32*
  store i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), i32* %v1_4693, align 4
  %v3_4699 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4699

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_14848_type* @global_var_14848.861 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_46c0:
  %v4_46c0 = add i32 %arg1, -28
  %v1_46c5 = inttoptr i32 %v4_46c0 to i32*
  %v2_46c5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %v1_46c5)
  ret i32 %v2_46c5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_46d0:
  %v4_46d0 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_46d5 = inttoptr i32 %v4_46d0 to i32*
  %v2_46d5 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %v1_46d5)
  ret i32 %v2_46d5

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_46e0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v1_46f4 = add i32 %tmp3, 28
  %v2_46f4 = inttoptr i32 %v1_46f4 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_46f4, align 4
  %v0_46fb = load i32, i32* %ebx.global-to-local, align 4
  %v1_46fb = add i32 %v0_46fb, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_46fb, i32* @eax, align 4
  %v1_46fe = inttoptr i32 %v0_46fb to i32*
  store i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), i32* %v1_46fe, align 4
  %v0_4704 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4704 = add i32 %v0_4704, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4704 = inttoptr i32 %v1_4704 to i32*
  store i32 ptrtoint (i32* @global_var_149ec.914 to i32), i32* %v2_4704, align 4
  %v0_470b = load i32, i32* @eax, align 4
  %v1_470e = call i32 @function_8880(i32 %v0_470b)
  store i32 %v1_470e, i32* %eax.global-to-local, align 4
  %v0_4713 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4713 = inttoptr i32 %v0_4713 to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_4713, align 4
  %v3_4719 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4719
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4740:
  %v4_4740 = add i32 %arg1, -28
  %v1_4745 = call i32 @function_8ea0(i32 %v4_4740)
  ret i32 %v1_4745
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4750:
  %v4_4750 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4755 = call i32 @function_8ea0(i32 %v4_4750)
  ret i32 %v1_4755

; uselistorder directives
  uselistorder i32 (i32)* @function_8ea0, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_4760:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_4760 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v1_4774 = add i32 %tmp101, 28
  %v2_4774 = inttoptr i32 %v1_4774 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4774, align 4
  %v0_477b = load i32, i32* %ebx.global-to-local, align 4
  %v1_477b = add i32 %v0_477b, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_477b, i32* @eax, align 4
  %v1_477e = inttoptr i32 %v0_477b to i32*
  store i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), i32* %v1_477e, align 4
  %v0_4784 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4784 = add i32 %v0_4784, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4784 = inttoptr i32 %v1_4784 to i32*
  store i32 ptrtoint (i32* @global_var_149ec.914 to i32), i32* %v2_4784, align 4
  %v0_478b = load i32, i32* @eax, align 4
  %v1_478e = call i32 @function_8920(i32 %v0_478b)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  %v0_479e = load i32, i32* %ebx.global-to-local, align 4
  %v1_479e = inttoptr i32 %v0_479e to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_479e, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_4760.dec_label_pc_47a6_crit_edge

dec_label_pc_4760.dec_label_pc_47a6_crit_edge:    ; preds = %dec_label_pc_4760
  %v5_47ad.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_47a6

bb:                                               ; preds = %dec_label_pc_4760
  %v2_47a4 = call i32 @function_47b3()
  br label %dec_label_pc_47a6

dec_label_pc_47a6:                                ; preds = %dec_label_pc_4760.dec_label_pc_47a6_crit_edge, %bb
  %v5_47ad = phi i32 [ %v5_47ad.pre, %dec_label_pc_4760.dec_label_pc_47a6_crit_edge ], [ %v2_47a4, %bb ]
  store i32 %v0_4760, i32* %ebx.global-to-local, align 4
  ret i32 %v5_47ad

; uselistorder directives
  uselistorder label %dec_label_pc_47a6, { 1, 0 }
}

define i32 @function_47b3() local_unnamed_addr {
dec_label_pc_47b3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_47c0:
  %v4_47c0 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_47c5 = inttoptr i32 %v4_47c0 to i32*
  %v2_47c5 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %v1_47c5)
  ret i32 %v2_47c5
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev(i32* %arg1) {
dec_label_pc_47d0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), i32* %arg1, align 4
  %v1_47ea = add i32 %tmp3, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_47ea, i32* @eax, align 4
  %v2_47ed = inttoptr i32 %v1_47ea to i32*
  store i32 ptrtoint (i32* @global_var_149ec.914 to i32), i32* %v2_47ed, align 4
  %v0_47f4 = load i32, i32* @eax, align 4
  %v1_47f7 = call i32 @function_8980(i32 %v0_47f4)
  store i32 %v1_47f7, i32* %eax.global-to-local, align 4
  %v0_47fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_47fc = inttoptr i32 %v0_47fc to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_47fc, align 4
  %v3_4802 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4802
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4830:
  %v4_4830 = add i32 %arg1, -28
  %v1_4835 = inttoptr i32 %v4_4830 to i32*
  %v2_4835 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %v1_4835)
  ret i32 %v2_4835
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4840:
  %v4_4840 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4845 = inttoptr i32 %v4_4840 to i32*
  %v2_4845 = call i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %v1_4845)
  ret i32 %v2_4845

; uselistorder directives
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev, { 1, 2, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED0Ev(i32* %arg1) {
dec_label_pc_4850:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  %v1_4864 = add i32 %tmp3, 28
  %v2_4864 = inttoptr i32 %v1_4864 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_4864, align 4
  %v0_486b = load i32, i32* %ebx.global-to-local, align 4
  %v1_486b = add i32 %v0_486b, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_486b, i32* @eax, align 4
  %v1_486e = inttoptr i32 %v0_486b to i32*
  store i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), i32* %v1_486e, align 4
  %v0_4874 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4874 = add i32 %v0_4874, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4874 = inttoptr i32 %v1_4874 to i32*
  store i32 ptrtoint (i32* @global_var_1478c.916 to i32), i32* %v2_4874, align 4
  %v0_487b = load i32, i32* @eax, align 4
  %v1_487e = call i32 @function_89f0(i32 %v0_487b)
  store i32 %v1_487e, i32* %eax.global-to-local, align 4
  %v0_4883 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4883 = inttoptr i32 %v0_4883 to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_4883, align 4
  %v3_4889 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4889
}

define i32 @_ZThn28_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_48b0:
  %v4_48b0 = add i32 %arg1, -28
  %v1_48b5 = call i32 @function_9180(i32 %v4_48b0)
  ret i32 %v1_48b5
}

define i32 @_ZThn8_N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_48c0:
  %v4_48c0 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_48c5 = call i32 @function_9180(i32 %v4_48c0)
  ret i32 %v1_48c5

; uselistorder directives
  uselistorder i32 (i32)* @function_9180, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEED1Ev(i32* %arg1) {
dec_label_pc_48d0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_48d0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  %v1_48e4 = add i32 %tmp101, 28
  %v2_48e4 = inttoptr i32 %v1_48e4 to i32*
  store i32 ptrtoint (i32* @global_var_147a0.858 to i32), i32* %v2_48e4, align 4
  %v0_48eb = load i32, i32* %ebx.global-to-local, align 4
  %v1_48eb = add i32 %v0_48eb, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_48eb, i32* @eax, align 4
  %v1_48ee = inttoptr i32 %v0_48eb to i32*
  store i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), i32* %v1_48ee, align 4
  %v0_48f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_48f4 = add i32 %v0_48f4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_48f4 = inttoptr i32 %v1_48f4 to i32*
  store i32 ptrtoint (i32* @global_var_1478c.916 to i32), i32* %v2_48f4, align 4
  %v0_48fb = load i32, i32* @eax, align 4
  %v1_48fe = call i32 @function_8a90(i32 %v0_48fb)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  %v0_490e = load i32, i32* %ebx.global-to-local, align 4
  %v1_490e = inttoptr i32 %v0_490e to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_490e, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_48d0.dec_label_pc_4916_crit_edge

dec_label_pc_48d0.dec_label_pc_4916_crit_edge:    ; preds = %dec_label_pc_48d0
  %v5_491d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_4916

bb:                                               ; preds = %dec_label_pc_48d0
  %v2_4914 = call i32 @function_4923()
  br label %dec_label_pc_4916

dec_label_pc_4916:                                ; preds = %dec_label_pc_48d0.dec_label_pc_4916_crit_edge, %bb
  %v5_491d = phi i32 [ %v5_491d.pre, %dec_label_pc_48d0.dec_label_pc_4916_crit_edge ], [ %v2_4914, %bb ]
  store i32 %v0_48d0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_491d

; uselistorder directives
  uselistorder label %dec_label_pc_4916, { 1, 0 }
}

define i32 @function_4923() local_unnamed_addr {
dec_label_pc_4923:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZThn8_N5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4930:
  %v4_4930 = sub i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_4935 = inttoptr i32 %v4_4930 to i32*
  %v2_4935 = call i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %v1_4935)
  ret i32 %v2_4935
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev(i32* %arg1) {
dec_label_pc_4940:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), i32* %arg1, align 4
  %v1_495a = add i32 %tmp3, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_495a, i32* @eax, align 4
  %v2_495d = inttoptr i32 %v1_495a to i32*
  store i32 ptrtoint (i32* @global_var_1478c.916 to i32), i32* %v2_495d, align 4
  %v0_4964 = load i32, i32* @eax, align 4
  %v1_4967 = call i32 @_ZZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEvE19__PRETTY_FUNCTION__(i32 %v0_4964)
  store i32 %v1_4967, i32* %eax.global-to-local, align 4
  %v0_496c = load i32, i32* %ebx.global-to-local, align 4
  %v1_496c = inttoptr i32 %v0_496c to i32*
  store i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), i32* %v1_496c, align 4
  %v3_4972 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_4972

; uselistorder directives
  uselistorder i32 ptrtoint (%vtable_14738_type* @global_var_14738.863 to i32), { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZN5boost9exceptionD0Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_49a0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_49a0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v1_49b7 = call i32 @function_8b60(i32 %arg1)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_49c9

bb:                                               ; preds = %dec_label_pc_49a0
  %v2_49c7 = call i32 @function_49d6()
  br label %dec_label_pc_49c9

dec_label_pc_49c9:                                ; preds = %bb, %dec_label_pc_49a0
  %v5_49d0 = phi i32 [ %v2_49c7, %bb ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_49a0 ]
  store i32 %v0_49a0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_49d0
}

define i32 @function_49d6() local_unnamed_addr {
dec_label_pc_49d6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost6detail12shared_countD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_49e0:
  %esi.global-to-local = alloca i32, align 4
  %v0_49f7 = load i32, i32* @esi, align 4
  %v2_49fb = load i32, i32* %arg1, align 4
  %v1_49fd = icmp eq i32 %v2_49fb, 0
  br i1 %v1_49fd, label %dec_label_pc_4a12, label %dec_label_pc_4a01

dec_label_pc_4a01:                                ; preds = %dec_label_pc_49e0
  store i32 -1, i32* %esi.global-to-local, align 4
  %v1_4a08 = add i32 %v2_49fb, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_4a08 = inttoptr i32 %v1_4a08 to i32*
  %v3_4a08 = load i32, i32* %v2_4a08, align 4
  %v5_4a08 = add i32 %v3_4a08, -1
  %v15_4a08 = icmp eq i32 %v5_4a08, 0
  store i32 %v5_4a08, i32* %v2_4a08, align 4
  br i1 %v15_4a08, label %dec_label_pc_4a30, label %dec_label_pc_4a12

dec_label_pc_4a12:                                ; preds = %dec_label_pc_4a30, %dec_label_pc_4a01, %dec_label_pc_49e0
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4a65, label %dec_label_pc_4a1f

dec_label_pc_4a1f:                                ; preds = %dec_label_pc_4a12
  store i32 %v0_49f7, i32* %esi.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_4a30:                                ; preds = %dec_label_pc_4a01
  %v1_4a30 = inttoptr i32 %v2_49fb to i32*
  %v1_4a38 = add i32 %v2_49fb, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_4a38 = inttoptr i32 %v1_4a38 to i32*
  %v3_4a38 = load i32, i32* %v2_4a38, align 4
  %v4_4a38 = load i32, i32* %esi.global-to-local, align 4
  %v5_4a38 = add i32 %v4_4a38, %v3_4a38
  store i32 %v5_4a38, i32* %v2_4a38, align 4
  store i32 %v3_4a38, i32* %esi.global-to-local, align 4
  %v10_4a3d = icmp eq i32 %v3_4a38, 1
  %v1_4a40 = icmp eq i1 %v10_4a3d, false
  br i1 %v1_4a40, label %dec_label_pc_4a12, label %dec_label_pc_4a42

dec_label_pc_4a42:                                ; preds = %dec_label_pc_4a30
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4a65, label %dec_label_pc_4a4f

dec_label_pc_4a4f:                                ; preds = %dec_label_pc_4a42
  %v2_4a4f = load i32, i32* %v1_4a30, align 4
  store i32 %v0_49f7, i32* %esi.global-to-local, align 4
  %v1_4a5d = add i32 %v2_4a4f, 12
  %v2_4a5d = inttoptr i32 %v1_4a5d to i32*
  %v3_4a5d = load i32, i32* %v2_4a5d, align 4
  ret i32 %v3_4a5d

dec_label_pc_4a65:                                ; preds = %dec_label_pc_4a42, %dec_label_pc_4a12
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32 %v3_4a38, { 0, 2, 1 }
  uselistorder i32 %v2_49fb, { 1, 0, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4 }
}

define i32 @_ZN5boost10shared_ptrIKNS_16exception_detail10clone_baseEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_4a70:
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_4aa0, label %dec_label_pc_4a91

dec_label_pc_4a91:                                ; preds = %dec_label_pc_4a70
  %v1_4a91 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  ret i32 %v1_4a91

dec_label_pc_4aa0:                                ; preds = %dec_label_pc_4a70
  ret i32 %arg1
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEE7disposeEv(i32 %arg1) {
dec_label_pc_4ab0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_4ab0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_4ac4 = add i32 %arg1, 12
  %v2_4ac4 = inttoptr i32 %v1_4ac4 to i32*
  %v3_4ac4 = load i32, i32* %v2_4ac4, align 4
  store i32 %v3_4ac4, i32* %ebx.global-to-local, align 4
  %v1_4ac7 = icmp eq i32 %v3_4ac4, 0
  br i1 %v1_4ac7, label %bb, label %dec_label_pc_4acb

bb:                                               ; preds = %dec_label_pc_4ab0
  %v3_4ac9 = call i32 @function_4b00(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_4acb

dec_label_pc_4acb:                                ; preds = %bb, %dec_label_pc_4ab0
  %v1_4acb = add i32 %v3_4ac4, 12
  store i32 %v1_4acb, i32* @eax, align 4
  %v1_4ad1 = call i32 @function_9490(i32 %v1_4acb)
  %v1_4ad6 = add i32 %v3_4ac4, 4
  store i32 %v1_4ad6, i32* @eax, align 4
  %v1_4adc = call i32 @function_9490(i32 %v1_4ad6)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb105, label %dec_label_pc_4aee

bb105:                                            ; preds = %dec_label_pc_4acb
  %v2_4aec = call i32 @function_4b12()
  br label %dec_label_pc_4aee

dec_label_pc_4aee:                                ; preds = %bb105, %dec_label_pc_4acb
  %v5_4af5 = phi i32 [ %v2_4aec, %bb105 ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_4acb ]
  store i32 %v0_4ab0, i32* %ebx.global-to-local, align 4
  ret i32 %v5_4af5

; uselistorder directives
  uselistorder i32 %v3_4ac4, { 1, 0, 2, 3 }
  uselistorder i32 (i32)* @function_9490, { 1, 0 }
}

define i32 @function_4b00(i32 %arg1) local_unnamed_addr {
dec_label_pc_4b00:
  %v3_4b04 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_4b04 = icmp eq i32 %v3_4b04, 0
  store i32 %v3_4b04, i32* @eax, align 4
  %v1_4b0b = icmp eq i1 %v4_4b04, false
  br i1 %v1_4b0b, label %bb, label %dec_label_pc_4b0d

bb:                                               ; preds = %dec_label_pc_4b00
  %v2_4b0b = call i32 @function_4b12()
  br label %dec_label_pc_4b0d

dec_label_pc_4b0d:                                ; preds = %bb, %dec_label_pc_4b00
  %v0_4b11 = phi i32 [ %v2_4b0b, %bb ], [ %v3_4b04, %dec_label_pc_4b00 ]
  ret i32 %v0_4b11

; uselistorder directives
  uselistorder i32 ()* @function_4b12, { 1, 0 }
}

define i32 @function_4b12() local_unnamed_addr {
dec_label_pc_4b12:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_4b18() local_unnamed_addr {
dec_label_pc_4b18:
  %eax.global-to-local = alloca i32, align 4
  %v0_4b18 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_4b18
}

define i32 @function_7a10(i32 %arg1) local_unnamed_addr {
dec_label_pc_7a10:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8400(i32 %arg1) local_unnamed_addr {
dec_label_pc_8400:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8460(i32 %arg1) local_unnamed_addr {
dec_label_pc_8460:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8470(i32 %arg1) local_unnamed_addr {
dec_label_pc_8470:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_84d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_84d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8530(i32 %arg1) local_unnamed_addr {
dec_label_pc_8530:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8540(i32 %arg1) local_unnamed_addr {
dec_label_pc_8540:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_85c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_85c0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8610(i32 %arg1) local_unnamed_addr {
dec_label_pc_8610:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8620(i32 %arg1) local_unnamed_addr {
dec_label_pc_8620:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_86f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_86f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8730(i32 %arg1) local_unnamed_addr {
dec_label_pc_8730:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8790(i32 %arg1) local_unnamed_addr {
dec_label_pc_8790:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_87e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_87e0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8800(i32 %arg1) local_unnamed_addr {
dec_label_pc_8800:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8880(i32 %arg1) local_unnamed_addr {
dec_label_pc_8880:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8920(i32 %arg1) local_unnamed_addr {
dec_label_pc_8920:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8980(i32 %arg1) local_unnamed_addr {
dec_label_pc_8980:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_89f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_89f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_8a90:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8ac0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8ac0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEvE19__PRETTY_FUNCTION__(i32 %arg1) local_unnamed_addr {
dec_label_pc_8af0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8b60(i32 %arg1) local_unnamed_addr {
dec_label_pc_8b60:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost7pthread25pthread_mutex_scoped_lockD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_8ba0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_8ba0 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp103, i32* %ebx.global-to-local, align 4
  %v1_8bb4 = add i32 %tmp103, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_8bb4 = inttoptr i32 %v1_8bb4 to i8*
  %v3_8bb4 = load i8, i8* %v2_8bb4, align 1
  %v10_8bb4 = icmp eq i8 %v3_8bb4, 0
  %v1_8bb8 = icmp eq i1 %v10_8bb4, false
  br i1 %v1_8bb8, label %dec_label_pc_8bd0, label %dec_label_pc_8bba

dec_label_pc_8bba:                                ; preds = %dec_label_pc_8ba0
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_8bc7

bb:                                               ; preds = %dec_label_pc_8bba
  %v4_8bc5 = call i32 @function_8be4(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_8bc7

dec_label_pc_8bc7:                                ; preds = %bb, %dec_label_pc_8bba
  %v0_8bcb = phi i32 [ %v4_8bc5, %bb ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_8bba ]
  store i32 %v0_8ba0, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8bcb

dec_label_pc_8bd0:                                ; preds = %dec_label_pc_8ba0
  %v2_8bd0 = load i32, i32* %arg1, align 4
  ret i32 %v2_8bd0
}

define i32 @function_8bd9() local_unnamed_addr {
dec_label_pc_8bd9:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_8bd9 = add i32 %tmp91, -972327488
  %v2_8bd9 = inttoptr i32 %v1_8bd9 to i32*
  %v3_8bd9 = load i32, i32* %v2_8bd9, align 4
  %v4_8bd9 = add i32 %v3_8bd9, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_8bd9, i32* %v2_8bd9, align 4
  %v0_8bdf = load i32, i32* %ebx.global-to-local, align 4
  %v1_8bdf = add i32 %v0_8bdf, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_8bdf, i32* %ebx.global-to-local, align 4
  %v0_8be0 = load i32, i32* %eax.global-to-local, align 4
  %v16_8be0 = and i32 %v0_8be0, or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256)
  store i32 %v16_8be0, i32* %eax.global-to-local, align 4
  ret i32 %v16_8be0

; uselistorder directives
  uselistorder i32 %v16_8be0, { 1, 0 }
}

define i32 @function_8be4(i32 %arg1) local_unnamed_addr {
dec_label_pc_8be4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost5mutexD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8bf0:
  ret i32 %arg1
}

define i32 @function_8c0a() local_unnamed_addr {
dec_label_pc_8c0a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_8c0a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8c0a = add i32 %v0_8c0a, -1961724480
  %v2_8c0a = inttoptr i32 %v1_8c0a to i32*
  %v3_8c0a = load i32, i32* %v2_8c0a, align 4
  %v4_8c0a = add i32 %v3_8c0a, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_8c0a, i32* %v2_8c0a, align 4
  %v0_8c11 = load i32, i32* %eax.global-to-local, align 4
  %v11_8c11 = and i32 %v0_8c11, -228
  %v3_8c13 = xor i32 %v11_8c11, ptrtoint ([2 x i8]* @2 to i32)
  %v4_8c13 = icmp eq i32 %v3_8c13, 0
  store i32 %v3_8c13, i32* @eax, align 4
  %v1_8c1a = icmp eq i1 %v4_8c13, false
  br i1 %v1_8c1a, label %bb, label %dec_label_pc_8c1c

bb:                                               ; preds = %dec_label_pc_8c0a
  %v2_8c1a = call i32 @function_8c45()
  store i32 %v2_8c1a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %bb, %dec_label_pc_8c0a
  %v0_8c20 = phi i32 [ %v2_8c1a, %bb ], [ %v3_8c13, %dec_label_pc_8c0a ]
  ret i32 %v0_8c20
}

define i32 @function_8c45() local_unnamed_addr {
dec_label_pc_8c45:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost18condition_variableD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_8c50:
  ret i32 0
}

define i32 @function_8c6b() local_unnamed_addr {
dec_label_pc_8c6b:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_8c6b = add i32 %tmp91, -2094959168
  %v2_8c6b = inttoptr i32 %v1_8c6b to i32*
  %v3_8c6b = load i32, i32* %v2_8c6b, align 4
  %v4_8c6b = add i32 %v3_8c6b, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_8c6b, i32* %v2_8c6b, align 4
  %v0_8c71 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8c71
}

define i32 @function_8c7a(i32 %arg1) local_unnamed_addr {
dec_label_pc_8c7a:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_8c7a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8c7a = add i32 %v0_8c7a, -1959037504
  %v2_8c7a = inttoptr i32 %v1_8c7a to i32*
  %v3_8c7a = load i32, i32* %v2_8c7a, align 4
  %v4_8c7a = add i32 %v3_8c7a, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_8c7a, i32* %v2_8c7a, align 4
  %v0_8c81 = load i32, i32* %eax.global-to-local, align 4
  %v11_8c81 = and i32 %v0_8c81, -228
  %v3_8c83 = xor i32 %v11_8c81, ptrtoint ([2 x i8]* @2 to i32)
  %v4_8c83 = icmp eq i32 %v3_8c83, 0
  store i32 %v3_8c83, i32* @eax, align 4
  %v1_8c8a = icmp eq i1 %v4_8c83, false
  br i1 %v1_8c8a, label %bb, label %dec_label_pc_8c8c

bb:                                               ; preds = %dec_label_pc_8c7a
  %v2_8c8a = call i32 @function_8cb5()
  store i32 %v2_8c8a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8c8c

dec_label_pc_8c8c:                                ; preds = %bb, %dec_label_pc_8c7a
  %v0_8c90 = phi i32 [ %v2_8c8a, %bb ], [ %v3_8c83, %dec_label_pc_8c7a ]
  ret i32 %v0_8c90
}

define i32 @function_8cb5() local_unnamed_addr {
dec_label_pc_8cb5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN11CDataStream4readEPci() local_unnamed_addr {
dec_label_pc_8ce0:
  %ebx.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 4
  %v2_8d03 = icmp slt i32 %tmp18, 0
  br i1 %v2_8d03, label %bb, label %dec_label_pc_8d13

bb:                                               ; preds = %dec_label_pc_8ce0
  %v3_8d0d = call i32 @function_8dc8(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_8d13.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8d13

dec_label_pc_8d13:                                ; preds = %bb, %dec_label_pc_8ce0
  %v0_8d22 = phi i32 [ %v0_8d13.pre, %bb ], [ %tmp14, %dec_label_pc_8ce0 ]
  %v1_8d13 = add i32 %v0_8d22, 12
  %v2_8d13 = inttoptr i32 %v1_8d13 to i32*
  %v3_8d13 = load i32, i32* %v2_8d13, align 4
  store i32 %v3_8d13, i32* @ecx, align 4
  %v1_8d18 = add i32 %v0_8d22, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_8d18 = inttoptr i32 %v1_8d18 to i32*
  %v3_8d18 = load i32, i32* %v2_8d18, align 4
  %v3_8d1b = add i32 %v3_8d13, %tmp18
  %v1_8d22 = inttoptr i32 %v0_8d22 to i32*
  %v2_8d22 = load i32, i32* %v1_8d22, align 4
  store i32 %v2_8d22, i32* @edi, align 4
  %v2_8d24 = sub i32 %v3_8d18, %v2_8d22
  %v10_8d26 = icmp ult i32 %v3_8d1b, %v2_8d24
  %v15_8d26 = icmp eq i32 %v3_8d1b, %v2_8d24
  br i1 %v10_8d26, label %bb20, label %dec_label_pc_8d2c

bb20:                                             ; preds = %dec_label_pc_8d13
  %v2_8d2a = call i32 @function_8da8(i32 %v3_8d1b)
  store i32 %v2_8d2a, i32* @eax, align 4
  %v0_8d2c.pre = load i1, i1* @cf, align 1
  %v1_8d2c.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_8d2c

dec_label_pc_8d2c:                                ; preds = %bb20, %dec_label_pc_8d13
  %v1_8d2c = phi i1 [ %v1_8d2c.pre, %bb20 ], [ %v15_8d26, %dec_label_pc_8d13 ]
  %v0_8d2c = phi i1 [ %v0_8d2c.pre, %bb20 ], [ false, %dec_label_pc_8d13 ]
  %v2_8d2c = or i1 %v1_8d2c, %v0_8d2c
  br i1 %v2_8d2c, label %bb21, label %dec_label_pc_8d2e

bb21:                                             ; preds = %dec_label_pc_8d2c
  %v3_8d2c = call i32 @function_8d66()
  store i32 %v3_8d2c, i32* @eax, align 4
  br label %dec_label_pc_8d2e

dec_label_pc_8d2e:                                ; preds = %bb21, %dec_label_pc_8d2c
  %v0_8d2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_8d2e = add i32 %v0_8d2e, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_8d2e = inttoptr i32 %v1_8d2e to i16*
  %v3_8d2e = load i16, i16* %v2_8d2e, align 2
  %v4_8d2e = zext i16 %v3_8d2e to i32
  %v1_8d32 = add i32 %v0_8d2e, ptrtoint ([4 x i8]* @global_var_12.919 to i32)
  %v2_8d32 = inttoptr i32 %v1_8d32 to i16*
  %v3_8d32 = load i16, i16* %v2_8d32, align 2
  %v4_8d32 = zext i16 %v3_8d32 to i32
  %v1_8d36 = or i32 %v4_8d2e, ptrtoint (i8** @global_var_4.814 to i32)
  %v4_8d392 = and i32 %v4_8d32, %v1_8d36
  %v5_8d39 = icmp eq i32 %v4_8d392, 0
  %v1_8d3c = trunc i32 %v1_8d36 to i16
  store i16 %v1_8d3c, i16* %v2_8d2e, align 2
  %v1_8d40 = icmp eq i1 %v5_8d39, false
  br i1 %v1_8d40, label %bb22, label %dec_label_pc_8d2e.dec_label_pc_8d46_crit_edge

dec_label_pc_8d2e.dec_label_pc_8d46_crit_edge:    ; preds = %dec_label_pc_8d2e
  %v3_8d52.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8d46

bb22:                                             ; preds = %dec_label_pc_8d2e
  %v2_8d40 = call i32 @function_8dec()
  br label %dec_label_pc_8d46

dec_label_pc_8d46:                                ; preds = %dec_label_pc_8d2e.dec_label_pc_8d46_crit_edge, %bb22
  %v3_8d52 = phi i32 [ %v3_8d52.pre, %dec_label_pc_8d2e.dec_label_pc_8d46_crit_edge ], [ %v2_8d40, %bb22 ]
  ret i32 %v3_8d52

; uselistorder directives
  uselistorder i32 %v1_8d36, { 1, 0 }
  uselistorder i32 %v3_8d1b, { 1, 0, 2 }
  uselistorder i32 %v0_8d22, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder label %dec_label_pc_8d46, { 1, 0 }
}

define i32 @function_8d66() local_unnamed_addr {
dec_label_pc_8d66:
  %v3_8d70 = load i32, i32* @eax, align 4
  ret i32 %v3_8d70
}

define i32 @function_8d77(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8d77:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_8d77 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8d77 = add i32 %v0_8d77, 205768451
  %v2_8d77 = inttoptr i32 %v1_8d77 to i32*
  %v3_8d77 = load i32, i32* %v2_8d77, align 4
  %v4_8d77 = add i32 %v3_8d77, -1
  store i32 %v4_8d77, i32* %v2_8d77, align 4
  %v2_8d7d = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8d7d = load i32, i32* %eax.global-to-local, align 4
  %v4_8d7d = trunc i32 %v3_8d7d to i8
  %v5_8d7d = add i8 %v4_8d7d, %v2_8d7d
  %v21_8d7d = inttoptr i32 %v3_8d7d to i8*
  store i8 %v5_8d7d, i8* %v21_8d7d, align 1
  %v2_8d7f = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8d7f = load i32, i32* %eax.global-to-local, align 4
  %v4_8d7f = trunc i32 %v3_8d7f to i8
  %v5_8d7f = add i8 %v4_8d7f, %v2_8d7f
  %v21_8d7f = inttoptr i32 %v3_8d7f to i8*
  store i8 %v5_8d7f, i8* %v21_8d7f, align 1
  %v0_8d81 = load i32, i32* %eax.global-to-local, align 4
  %v1_8d81 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8d81 = add i32 %v1_8d81, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_8d81 = inttoptr i32 %v2_8d81 to i32*
  store i32 %v0_8d81, i32* %v3_8d81, align 4
  %v4_8d88 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_8d8f = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8d8f, i32* @eax, align 4
  %v1_8d91 = icmp eq i1 %v4_8d88, false
  br i1 %v1_8d91, label %bb, label %dec_label_pc_8d93

bb:                                               ; preds = %dec_label_pc_8d77
  %v2_8d91 = call i32 @function_8dc3()
  store i32 %v2_8d91, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8d93

dec_label_pc_8d93:                                ; preds = %bb, %dec_label_pc_8d77
  %v0_8da6 = phi i32 [ %v2_8d91, %bb ], [ %v0_8d8f, %dec_label_pc_8d77 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8da6
}

define i32 @function_8da8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8da8:
  %v0_8da8 = load i32, i32* @ecx, align 4
  %v1_8da8 = load i32, i32* @edi, align 4
  %v2_8da8 = add i32 %v1_8da8, %v0_8da8
  %v7_8da8 = icmp ult i32 %v2_8da8, %v0_8da8
  store i1 %v7_8da8, i1* @cf, align 1
  %v12_8da8 = icmp eq i32 %v2_8da8, 0
  store i1 %v12_8da8, i1* @zf, align 1
  store i32 %v2_8da8, i32* @ecx, align 4
  %v3_8db2 = load i32, i32* @eax, align 4
  ret i32 %v3_8db2

; uselistorder directives
  uselistorder i32 %v0_8da8, { 1, 0 }
}

define i32 @function_8dba(i32 %arg1) local_unnamed_addr {
dec_label_pc_8dba:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v1_8dbe = load i32, i32* %ebx.global-to-local, align 4
  %v2_8dbe = add i32 %v1_8dbe, 12
  %v3_8dbe = inttoptr i32 %v2_8dbe to i32*
  store i32 %arg1, i32* %v3_8dbe, align 4
  %v0_8dc1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8dc1
}

define i32 @function_8dc3() local_unnamed_addr {
dec_label_pc_8dc3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8dc8(i32 %arg1) local_unnamed_addr {
dec_label_pc_8dc8:
  %v3_8de0 = load i32, i32* @eax, align 4
  ret i32 %v3_8de0
}

define i32 @function_8dec() local_unnamed_addr {
dec_label_pc_8dec:
  %v3_8df3 = load i32, i32* @eax, align 4
  ret i32 %v3_8df3
}

define i32 @function_8e43() local_unnamed_addr {
dec_label_pc_8e43:
  %eax.global-to-local = alloca i32, align 4
  %v0_8e43 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8e43
}

define i32 @_ZN5CNode12AbortMessageEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_8e60:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8e75 = add i32 %arg1, 12
  %v2_8e75 = inttoptr i32 %v1_8e75 to i32*
  %v3_8e75 = load i32, i32* %v2_8e75, align 4
  store i32 %v3_8e75, i32* %eax.global-to-local, align 4
  %v1_8e7b = add i32 %arg1, 24
  %v2_8e7b = inttoptr i32 %v1_8e7b to i32*
  store i32 0, i32* %v2_8e7b, align 4
  %v0_8e82 = load i32, i32* %eax.global-to-local, align 4
  %v1_8e82 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8e82 = add i32 %v1_8e82, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_8e82 = inttoptr i32 %v2_8e82 to i32*
  store i32 %v0_8e82, i32* %v3_8e82, align 4
  %v3_8e85 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_8e85
}

define i32 @function_8ea0(i32 %arg1) local_unnamed_addr {
dec_label_pc_8ea0:
  %zf.global-to-local = alloca i1, align 1
  %v2_8ea0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_8ea0 = load i32, i32* @eax, align 4
  %v4_8ea0 = trunc i32 %v3_8ea0 to i8
  %v5_8ea0 = add i8 %v4_8ea0, %v2_8ea0
  %v15_8ea0 = icmp eq i8 %v5_8ea0, 0
  store i1 %v15_8ea0, i1* %zf.global-to-local, align 1
  %v21_8ea0 = inttoptr i32 %v3_8ea0 to i8*
  store i8 %v5_8ea0, i8* %v21_8ea0, align 1
  %v0_8ea2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8ea2, label %bb, label %dec_label_pc_8ea0.dec_label_pc_8ea4_crit_edge

dec_label_pc_8ea0.dec_label_pc_8ea4_crit_edge:    ; preds = %dec_label_pc_8ea0
  %v3_8ea7.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8ea4

bb:                                               ; preds = %dec_label_pc_8ea0
  %v1_8ea2 = call i32 @function_8ee0()
  br label %dec_label_pc_8ea4

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8ea0.dec_label_pc_8ea4_crit_edge, %bb
  %v3_8ea7 = phi i32 [ %v3_8ea7.pre, %dec_label_pc_8ea0.dec_label_pc_8ea4_crit_edge ], [ %v1_8ea2, %bb ]
  %v0_8ea4 = load i32, i32* @ebx, align 4
  %v10_8ea4 = icmp eq i32 %v0_8ea4, sub (i32 0, i32 ptrtoint (i32* @global_var_78.922 to i32))
  store i1 %v10_8ea4, i1* %zf.global-to-local, align 1
  ret i32 %v3_8ea7

; uselistorder directives
  uselistorder label %dec_label_pc_8ea4, { 1, 0 }
}

define i32 @function_8ee0() local_unnamed_addr {
dec_label_pc_8ee0:
  %v0_8ee0 = load i32, i32* @ebx, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 168
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i8*
  store i8 0, i8* %v2_8ee0, align 1
  %v0_8ee7 = load i32, i32* @eax, align 4
  ret i32 %v0_8ee7
}

define i32 @function_8f14() local_unnamed_addr {
dec_label_pc_8f14:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @_ZN5boost16exception_detail12refcount_ptrINS0_20error_info_containerEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_8f30:
  %ebx.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_8f30 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* %ebx.global-to-local, align 4
  %v2_8f44 = load i32, i32* %arg1, align 4
  %v1_8f46 = icmp eq i32 %v2_8f44, 0
  br i1 %v1_8f46, label %dec_label_pc_8f56, label %dec_label_pc_8f4a

dec_label_pc_8f4a:                                ; preds = %dec_label_pc_8f30
  %v3_8f46 = trunc i32 %v2_8f44 to i8
  %v5_8f52 = icmp eq i8 %v3_8f46, 0
  %v1_8f54 = icmp eq i1 %v5_8f52, false
  br i1 %v1_8f54, label %dec_label_pc_8f68, label %dec_label_pc_8f56

dec_label_pc_8f56:                                ; preds = %dec_label_pc_8f68, %dec_label_pc_8f4a, %dec_label_pc_8f30
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_8f70, label %dec_label_pc_8f63

dec_label_pc_8f63:                                ; preds = %dec_label_pc_8f56
  store i32 %v0_8f30, i32* %ebx.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_8f68:                                ; preds = %dec_label_pc_8f4a
  store i32 0, i32* %arg1, align 4
  br label %dec_label_pc_8f56

dec_label_pc_8f70:                                ; preds = %dec_label_pc_8f56
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))
}

define i32 @_ZN5boost16exception_detail20copy_boost_exceptionEPNS_9exceptionEPKS1_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8f80:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8fa3 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_8fa3 = inttoptr i32 %v1_8fa3 to i32*
  %v3_8fa3 = load i32, i32* %v2_8fa3, align 4
  %v1_8fb2 = icmp eq i32 %v3_8fa3, 0
  br i1 %v1_8fb2, label %dec_label_pc_9009, label %dec_label_pc_8fba

dec_label_pc_8fba:                                ; preds = %dec_label_pc_8f80
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_8fd5 = icmp eq i32 %tmp106, 0
  br i1 %v1_8fd5, label %dec_label_pc_8fe1, label %dec_label_pc_8fd9

dec_label_pc_8fd9:                                ; preds = %dec_label_pc_8fba
  br label %dec_label_pc_8fe1

dec_label_pc_8fe1:                                ; preds = %dec_label_pc_8fd9, %dec_label_pc_8fba
  br label %dec_label_pc_9009

dec_label_pc_9009:                                ; preds = %dec_label_pc_8f80, %dec_label_pc_8fe1
  store i32 0, i32* %edi.global-to-local, align 4
  %v1_9009 = add i32 %arg2, 12
  %v2_9009 = inttoptr i32 %v1_9009 to i32*
  %v3_9009 = load i32, i32* %v2_9009, align 4
  %v2_900c = add i32 %arg1, 12
  %v3_900c = inttoptr i32 %v2_900c to i32*
  store i32 %v3_9009, i32* %v3_900c, align 4
  %v0_900f = load i32, i32* %ebx.global-to-local, align 4
  %v1_900f = add i32 %v0_900f, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_900f = inttoptr i32 %v1_900f to i32*
  %v3_900f = load i32, i32* %v2_900f, align 4
  %v1_9012 = load i32, i32* %esi.global-to-local, align 4
  %v2_9012 = add i32 %v1_9012, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_9012 = inttoptr i32 %v2_9012 to i32*
  store i32 %v3_900f, i32* %v3_9012, align 4
  %v0_9015 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9015 = add i32 %v0_9015, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9015 = inttoptr i32 %v1_9015 to i32*
  %v3_9015 = load i32, i32* %v2_9015, align 4
  %v1_9018 = load i32, i32* %esi.global-to-local, align 4
  %v2_9018 = add i32 %v1_9018, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_9018 = inttoptr i32 %v2_9018 to i32*
  store i32 %v3_9015, i32* %v3_9018, align 4
  %v0_901b = load i32, i32* %esi.global-to-local, align 4
  %v1_901b = add i32 %v0_901b, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_901b = inttoptr i32 %v1_901b to i32*
  %v3_901b = load i32, i32* %v2_901b, align 4
  %v1_901e = icmp eq i32 %v3_901b, 0
  br i1 %v1_901e, label %dec_label_pc_902a, label %dec_label_pc_9022

dec_label_pc_9022:                                ; preds = %dec_label_pc_9009
  %v1_9024 = load i32, i32* @esp, align 4
  %v2_9024 = inttoptr i32 %v1_9024 to i32*
  store i32 %v3_901b, i32* %v2_9024, align 4
  %v1_902c.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_902a

dec_label_pc_902a:                                ; preds = %dec_label_pc_9022, %dec_label_pc_9009
  %v1_902c = phi i32 [ %v1_902c.pre, %dec_label_pc_9022 ], [ %v0_901b, %dec_label_pc_9009 ]
  %v0_902a = load i32, i32* %edi.global-to-local, align 4
  %v1_902a = icmp eq i32 %v0_902a, 0
  %v2_902c = add i32 %v1_902c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_902c = inttoptr i32 %v2_902c to i32*
  store i32 %v0_902a, i32* %v3_902c, align 4
  br i1 %v1_902a, label %dec_label_pc_9039, label %dec_label_pc_9031

dec_label_pc_9031:                                ; preds = %dec_label_pc_902a
  %v0_9031 = load i32, i32* %edi.global-to-local, align 4
  %v1_9033 = load i32, i32* @esp, align 4
  %v2_9033 = inttoptr i32 %v1_9033 to i32*
  store i32 %v0_9031, i32* %v2_9033, align 4
  br label %dec_label_pc_9039

dec_label_pc_9039:                                ; preds = %dec_label_pc_9031, %dec_label_pc_902a
  %v0_9039 = load i32, i32* @esp, align 4
  %v1_9039 = add i32 %v0_9039, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_9039 = inttoptr i32 %v1_9039 to i32*
  %v3_9039 = load i32, i32* %v2_9039, align 4
  %v1_903d = icmp eq i32 %v3_9039, 0
  br i1 %v1_903d, label %dec_label_pc_9049, label %dec_label_pc_9041

dec_label_pc_9041:                                ; preds = %dec_label_pc_9039
  %v2_9043 = inttoptr i32 %v0_9039 to i32*
  store i32 %v3_9039, i32* %v2_9043, align 4
  %v0_9049.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_9049

dec_label_pc_9049:                                ; preds = %dec_label_pc_9041, %dec_label_pc_9039
  %v0_9066 = phi i32 [ %v0_9049.pre, %dec_label_pc_9041 ], [ %v0_9039, %dec_label_pc_9039 ]
  %v1_9049 = add i32 %v0_9066, 28
  %v2_9049 = inttoptr i32 %v1_9049 to i32*
  %v3_9049 = load i32, i32* %v2_9049, align 4
  %v3_904d = xor i32 %v3_9049, ptrtoint ([2 x i8]* @2 to i32)
  %v4_904d = icmp eq i32 %v3_904d, 0
  %v1_9054 = icmp eq i1 %v4_904d, false
  br i1 %v1_9054, label %dec_label_pc_9084, label %dec_label_pc_9056

dec_label_pc_9056:                                ; preds = %dec_label_pc_9049
  %v1_9056 = add i32 %v0_9066, 44
  %v2_9056 = inttoptr i32 %v1_9056 to i32*
  %v3_9056 = load i32, i32* %v2_9056, align 4
  store i32 %v3_9056, i32* %ebx.global-to-local, align 4
  %v1_905a = add i32 %v0_9066, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_905a = inttoptr i32 %v1_905a to i32*
  %v3_905a = load i32, i32* %v2_905a, align 4
  store i32 %v3_905a, i32* %esi.global-to-local, align 4
  %v1_905e = add i32 %v0_9066, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_905e = inttoptr i32 %v1_905e to i32*
  %v3_905e = load i32, i32* %v2_905e, align 4
  store i32 %v3_905e, i32* %edi.global-to-local, align 4
  ret i32 %v3_904d

dec_label_pc_9084:                                ; preds = %dec_label_pc_9049
  ret i32 %v3_904d

; uselistorder directives
  uselistorder i32 %v3_904d, { 1, 0, 2 }
  uselistorder i32 %v0_9066, { 0, 2, 1, 3 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_9009, { 1, 0 }
}

define i32 @function_908a() local_unnamed_addr {
dec_label_pc_908a:
  %eax.global-to-local = alloca i32, align 4
  %v0_908a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_908a
}

define i32 @function_9093() local_unnamed_addr {
dec_label_pc_9093:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_90a7() local_unnamed_addr {
dec_label_pc_90a7:
  %v0_90a9 = call i32 @function_9093()
  ret i32 %v0_90a9
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_90b0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_90b0 = load i32, i32* %esi.global-to-local, align 4
  %v0_90b1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_90c9 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_90c9 = inttoptr i32 %v1_90c9 to i32*
  %v3_90c9 = load i32, i32* %v2_90c9, align 4
  store i32 %v3_90c9, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %arg1, align 4
  %v0_90d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_90d2 = add i32 %v0_90d2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_90d2 = inttoptr i32 %v1_90d2 to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_90d2, align 4
  %v0_90d9 = load i32, i32* %eax.global-to-local, align 4
  %v1_90d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_90d9 = add i32 %v1_90d9, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_90d9 = inttoptr i32 %v2_90d9 to i32*
  store i32 %v0_90d9, i32* %v3_90d9, align 4
  %v0_90dc = load i32, i32* %esi.global-to-local, align 4
  %v1_90dc = add i32 %v0_90dc, 12
  %v2_90dc = inttoptr i32 %v1_90dc to i32*
  %v3_90dc = load i32, i32* %v2_90dc, align 4
  store i32 %v3_90dc, i32* %eax.global-to-local, align 4
  %v1_90df = icmp eq i32 %v3_90dc, 0
  %v1_90e1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_90e1 = add i32 %v1_90e1, 12
  %v3_90e1 = inttoptr i32 %v2_90e1 to i32*
  store i32 %v3_90dc, i32* %v3_90e1, align 4
  br i1 %v1_90df, label %dec_label_pc_90ee, label %dec_label_pc_90e6

dec_label_pc_90e6:                                ; preds = %dec_label_pc_90b0
  br label %dec_label_pc_90ee

dec_label_pc_90ee:                                ; preds = %dec_label_pc_90e6, %dec_label_pc_90b0
  %v0_90ee = load i32, i32* %esi.global-to-local, align 4
  %v1_90ee = add i32 %v0_90ee, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_90ee = inttoptr i32 %v1_90ee to i32*
  %v3_90ee = load i32, i32* %v2_90ee, align 4
  store i32 %v3_90ee, i32* %eax.global-to-local, align 4
  %v0_90f1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_90f1 = add i32 %v0_90f1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_90f1 = inttoptr i32 %v1_90f1 to i32*
  store i32 ptrtoint (i32* @global_var_149ec.914 to i32), i32* %v2_90f1, align 4
  %v0_90f8 = load i32, i32* %eax.global-to-local, align 4
  %v1_90f8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_90f8 = add i32 %v1_90f8, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_90f8 = inttoptr i32 %v2_90f8 to i32*
  store i32 %v0_90f8, i32* %v3_90f8, align 4
  %v0_90fb = load i32, i32* %esi.global-to-local, align 4
  %v1_90fb = add i32 %v0_90fb, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_90fb = inttoptr i32 %v1_90fb to i32*
  %v3_90fb = load i32, i32* %v2_90fb, align 4
  store i32 %v3_90fb, i32* %eax.global-to-local, align 4
  %v1_90fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_90fe = add i32 %v1_90fe, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_90fe = inttoptr i32 %v2_90fe to i32*
  store i32 %v3_90fb, i32* %v3_90fe, align 4
  %v0_9101 = load i32, i32* %esi.global-to-local, align 4
  %v1_9101 = add i32 %v0_9101, 24
  %v2_9101 = inttoptr i32 %v1_9101 to i32*
  %v3_9101 = load i32, i32* %v2_9101, align 4
  store i32 %v3_9101, i32* %eax.global-to-local, align 4
  %v0_9104 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9104 = inttoptr i32 %v0_9104 to i32*
  store i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), i32* %v1_9104, align 4
  %v0_910a = load i32, i32* %eax.global-to-local, align 4
  %v1_910a = load i32, i32* %ebx.global-to-local, align 4
  %v2_910a = add i32 %v1_910a, 24
  %v3_910a = inttoptr i32 %v2_910a to i32*
  store i32 %v0_910a, i32* %v3_910a, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_9120, label %dec_label_pc_911a

dec_label_pc_911a:                                ; preds = %dec_label_pc_90ee
  store i32 %v0_90b1, i32* %ebx.global-to-local, align 4
  store i32 %v0_90b0, i32* %esi.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_9120:                                ; preds = %dec_label_pc_90ee
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_21thread_resource_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_149d8_type* @global_var_149d8.913 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9140:
  %v4_9140 = add i32 %arg1, -28
  %v1_9145 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %v4_9140)
  ret i32 %v1_9145

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_21thread_resource_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_9150:
  ret i32 0
}

define i32 @function_9170() local_unnamed_addr {
dec_label_pc_9170:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_9170 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9170 = add i32 %v0_9170, -1996217228
  %v2_9170 = inttoptr i32 %v1_9170 to i32*
  %v3_9170 = load i32, i32* %v2_9170, align 4
  %v4_9170 = sub i32 %v3_9170, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_9170, i32* %v2_9170, align 4
  %v0_9176 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9176
}

define i32 @function_9180(i32 %arg1) local_unnamed_addr {
dec_label_pc_9180:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9180 = load i32, i32* @ebx, align 4
  %v3_9180 = load i32, i32* @eax, align 4
  %v4_9180 = add i32 %v3_9180, %v0_9180
  store i32 %v4_9180, i32* %ebx.global-to-local, align 4
  %v4_9183 = mul i32 %v3_9180, 2
  %v21_9183 = inttoptr i32 %v3_9180 to i32*
  store i32 %v4_9183, i32* %v21_9183, align 4
  %v0_9185 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9185 = add i32 %v0_9185, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9185 = inttoptr i32 %v1_9185 to i32*
  store i32 ptrtoint (i32* @global_var_14a34.901 to i32), i32* %v2_9185, align 4
  %v0_918c = load i32, i32* %ebx.global-to-local, align 4
  %v1_918c = add i32 %v0_918c, 28
  %v2_918c = inttoptr i32 %v1_918c to i32*
  store i32 ptrtoint (i32* @global_var_14a44.903 to i32), i32* %v2_918c, align 4
  %v3_91a3 = load i32, i32* @eax, align 4
  ret i32 %v3_91a3

; uselistorder directives
  uselistorder i32 %v3_9180, { 2, 0, 1 }
}

define i32 @_ZN5boost15throw_exceptionINS_21thread_resource_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_91c0:
  ret i32 0
}

define i32 @function_920a() local_unnamed_addr {
dec_label_pc_920a:
  %eax.global-to-local = alloca i32, align 4
  %v0_920a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_920a
}

define i32 @function_9271(i32 %arg1) local_unnamed_addr {
dec_label_pc_9271:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9290() local_unnamed_addr {
dec_label_pc_9290:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_9292 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9292 = add i32 %v0_9292, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_9292, i32* %ebx.global-to-local, align 4
  %v0_9293 = load i32, i32* %eax.global-to-local, align 4
  %v2_9293 = load i1, i1* %cf.global-to-local, align 1
  %v3_9293 = zext i1 %v2_9293 to i32
  %v4_9293 = add i32 %v0_9293, 96
  %v5_9293 = add i32 %v4_9293, %v3_9293
  %v30_9293 = urem i32 %v5_9293, 256
  %v32_9293 = and i32 %v0_9293, -256
  %v33_9293 = or i32 %v30_9293, %v32_9293
  store i32 %v33_9293, i32* @eax, align 4
  %v1_9296 = inttoptr i32 %v33_9293 to i32*
  %v2_9296 = load i32, i32* %v1_9296, align 4
  %v4_9296 = add i32 %v33_9293, %v2_9296
  %v9_9296 = icmp ult i32 %v4_9296, %v2_9296
  store i1 %v9_9296, i1* %cf.global-to-local, align 1
  store i32 %v4_9296, i32* %v1_9296, align 4
  %v0_929c = load i32, i32* %ebx.global-to-local, align 4
  %v2_92a8 = call i32 @function_9271(i32 %v0_929c)
  store i32 %v2_92a8, i32* %eax.global-to-local, align 4
  ret i32 %v2_92a8

; uselistorder directives
  uselistorder i32 %v2_9296, { 1, 0 }
  uselistorder i32 %v0_9293, { 1, 0 }
}

define i32 @_ZN5boost15recursive_mutexC1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_92b0:
  ret i32 0
}

define i32 @function_92ee(i32 %arg1) local_unnamed_addr {
dec_label_pc_92ee:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_92ee = load i32, i32* %ebp.global-to-local, align 4
  %v1_92ee = add i32 %v0_92ee, -1960479296
  %v2_92ee = inttoptr i32 %v1_92ee to i32*
  %v3_92ee = load i32, i32* %v2_92ee, align 4
  %v4_92ee = add i32 %v3_92ee, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_92ee, i32* %v2_92ee, align 4
  %v0_92f5 = load i32, i32* %eax.global-to-local, align 4
  %v11_92f5 = and i32 %v0_92f5, or (i32 zext (i8 ptrtoint (i32* @global_var_3c.843 to i8) to i32), i32 -256)
  %v3_92f7 = xor i32 %v11_92f5, ptrtoint ([2 x i8]* @2 to i32)
  %v4_92f7 = icmp eq i32 %v3_92f7, 0
  store i1 %v4_92f7, i1* %zf.global-to-local, align 1
  store i32 %v3_92f7, i32* @eax, align 4
  %v0_92fe = load i32, i32* %ebx.global-to-local, align 4
  %v1_92fe = add i32 %v0_92fe, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_92fe = inttoptr i32 %v1_92fe to i8*
  store i8 0, i8* %v2_92fe, align 1
  %v0_9302 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9302 = add i32 %v0_9302, 80
  %v2_9302 = inttoptr i32 %v1_9302 to i32*
  store i32 0, i32* %v2_9302, align 4
  %v0_9309 = load i1, i1* %zf.global-to-local, align 1
  %v1_9309 = icmp eq i1 %v0_9309, false
  br i1 %v1_9309, label %bb, label %dec_label_pc_92ee.dec_label_pc_930f_crit_edge

dec_label_pc_92ee.dec_label_pc_930f_crit_edge:    ; preds = %dec_label_pc_92ee
  %v0_9313.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_930f

bb:                                               ; preds = %dec_label_pc_92ee
  %v2_9309 = call i32 @function_939a()
  store i32 %v2_9309, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_930f

dec_label_pc_930f:                                ; preds = %dec_label_pc_92ee.dec_label_pc_930f_crit_edge, %bb
  %v0_9313 = phi i32 [ %v0_9313.pre, %dec_label_pc_92ee.dec_label_pc_930f_crit_edge ], [ %v2_9309, %bb ]
  %v0_930f = load i32, i32* @esp, align 4
  %v10_930f = icmp eq i32 %v0_930f, -72
  store i1 %v10_930f, i1* %zf.global-to-local, align 1
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_9313

; uselistorder directives
  uselistorder label %dec_label_pc_930f, { 1, 0 }
}

define i32 @function_9364() local_unnamed_addr {
dec_label_pc_9364:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_937b() local_unnamed_addr {
dec_label_pc_937b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_937b = load i32, i32* %ebp.global-to-local, align 4
  %v1_937b = add i32 %v0_937b, -953408420
  %v2_937b = inttoptr i32 %v1_937b to i32*
  %v3_937b = load i32, i32* %v2_937b, align 4
  %v4_937b = sub i32 %v3_937b, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_937b, i32* %v2_937b, align 4
  %v0_9382 = load i32, i32* %eax.global-to-local, align 4
  %v1_9382 = trunc i32 %v0_9382 to i8
  %v2_9382 = and i8 %v1_9382, ptrtoint (i32* @global_var_30.842 to i8)
  %v8_9382 = zext i8 %v2_9382 to i32
  %v10_9382 = and i32 %v0_9382, -256
  %v11_9382 = or i32 %v8_9382, %v10_9382
  store i32 %v11_9382, i32* @eax, align 4
  %v1_9384 = inttoptr i32 %v11_9382 to i8*
  %v2_9384 = load i8, i8* %v1_9384, align 4
  %v5_9384 = add i8 %v2_9384, %v2_9382
  store i8 %v5_9384, i8* %v1_9384, align 4
  %v0_9386 = load i32, i32* @eax, align 4
  %v1_9386 = inttoptr i32 %v0_9386 to i8*
  %v2_9386 = load i8, i8* %v1_9386, align 1
  %v4_9386 = trunc i32 %v0_9386 to i8
  %v5_9386 = add i8 %v2_9386, %v4_9386
  store i8 %v5_9386, i8* %v1_9386, align 1
  %v0_9390 = load i32, i32* @ebx, align 4
  %v1_9393 = call i32 @function_12470(i32 %v0_9390)
  store i32 %v1_9393, i32* @eax, align 4
  %v0_9398 = call i32 @function_9364()
  store i32 %v0_9398, i32* %eax.global-to-local, align 4
  ret i32 %v0_9398
}

define i32 @function_939a() local_unnamed_addr {
dec_label_pc_939a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEEC1ERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_93a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_93a0 = load i32, i32* %esi.global-to-local, align 4
  %v0_93a1 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %tmp101, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_93b9 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_93b9 = inttoptr i32 %v1_93b9 to i32*
  %v3_93b9 = load i32, i32* %v2_93b9, align 4
  store i32 %v3_93b9, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (%vtable_14750_type* @global_var_14750.895 to i32), i32* %arg1, align 4
  %v0_93c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_93c2 = add i32 %v0_93c2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_93c2 = inttoptr i32 %v1_93c2 to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_93c2, align 4
  %v0_93c9 = load i32, i32* %eax.global-to-local, align 4
  %v1_93c9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_93c9 = add i32 %v1_93c9, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_93c9 = inttoptr i32 %v2_93c9 to i32*
  store i32 %v0_93c9, i32* %v3_93c9, align 4
  %v0_93cc = load i32, i32* %esi.global-to-local, align 4
  %v1_93cc = add i32 %v0_93cc, 12
  %v2_93cc = inttoptr i32 %v1_93cc to i32*
  %v3_93cc = load i32, i32* %v2_93cc, align 4
  store i32 %v3_93cc, i32* %eax.global-to-local, align 4
  %v1_93cf = icmp eq i32 %v3_93cc, 0
  %v1_93d1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_93d1 = add i32 %v1_93d1, 12
  %v3_93d1 = inttoptr i32 %v2_93d1 to i32*
  store i32 %v3_93cc, i32* %v3_93d1, align 4
  br i1 %v1_93cf, label %dec_label_pc_93de, label %dec_label_pc_93d6

dec_label_pc_93d6:                                ; preds = %dec_label_pc_93a0
  br label %dec_label_pc_93de

dec_label_pc_93de:                                ; preds = %dec_label_pc_93d6, %dec_label_pc_93a0
  %v0_93de = load i32, i32* %esi.global-to-local, align 4
  %v1_93de = add i32 %v0_93de, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_93de = inttoptr i32 %v1_93de to i32*
  %v3_93de = load i32, i32* %v2_93de, align 4
  store i32 %v3_93de, i32* %eax.global-to-local, align 4
  %v0_93e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_93e1 = add i32 %v0_93e1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_93e1 = inttoptr i32 %v1_93e1 to i32*
  store i32 ptrtoint (i32* @global_var_1478c.916 to i32), i32* %v2_93e1, align 4
  %v0_93e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_93e8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_93e8 = add i32 %v1_93e8, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_93e8 = inttoptr i32 %v2_93e8 to i32*
  store i32 %v0_93e8, i32* %v3_93e8, align 4
  %v0_93eb = load i32, i32* %esi.global-to-local, align 4
  %v1_93eb = add i32 %v0_93eb, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_93eb = inttoptr i32 %v1_93eb to i32*
  %v3_93eb = load i32, i32* %v2_93eb, align 4
  store i32 %v3_93eb, i32* %eax.global-to-local, align 4
  %v1_93ee = load i32, i32* %ebx.global-to-local, align 4
  %v2_93ee = add i32 %v1_93ee, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_93ee = inttoptr i32 %v2_93ee to i32*
  store i32 %v3_93eb, i32* %v3_93ee, align 4
  %v0_93f1 = load i32, i32* %esi.global-to-local, align 4
  %v1_93f1 = add i32 %v0_93f1, 24
  %v2_93f1 = inttoptr i32 %v1_93f1 to i32*
  %v3_93f1 = load i32, i32* %v2_93f1, align 4
  store i32 %v3_93f1, i32* %eax.global-to-local, align 4
  %v0_93f4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_93f4 = inttoptr i32 %v0_93f4 to i32*
  store i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), i32* %v1_93f4, align 4
  %v0_93fa = load i32, i32* %eax.global-to-local, align 4
  %v1_93fa = load i32, i32* %ebx.global-to-local, align 4
  %v2_93fa = add i32 %v1_93fa, 24
  %v3_93fa = inttoptr i32 %v2_93fa to i32*
  store i32 %v0_93fa, i32* %v3_93fa, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_9410, label %dec_label_pc_940a

dec_label_pc_940a:                                ; preds = %dec_label_pc_93de
  store i32 %v0_93a1, i32* %ebx.global-to-local, align 4
  store i32 %v0_93a0, i32* %esi.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_9410:                                ; preds = %dec_label_pc_93de
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_10lock_errorEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_14778_type* @global_var_14778.915 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_14750_type* @global_var_14750.895 to i32), { 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9430:
  %v4_9430 = add i32 %arg1, -28
  %v1_9435 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %v4_9430)
  ret i32 %v1_9435

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_10lock_errorEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_9440:
  ret i32 ptrtoint ([2 x i8]* @2 to i32)
}

define i32 @function_9460() local_unnamed_addr {
dec_label_pc_9460:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_9460 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9460 = add i32 %v0_9460, -1996217228
  %v2_9460 = inttoptr i32 %v1_9460 to i32*
  %v3_9460 = load i32, i32* %v2_9460, align 4
  %v4_9460 = sub i32 %v3_9460, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_9460, i32* %v2_9460, align 4
  %v0_9466 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9466
}

define i32 @function_9490(i32 %arg1) local_unnamed_addr {
dec_label_pc_9490:
  %eax.global-to-local = alloca i32, align 4
  %v0_9490 = load i32, i32* @eax, align 4
  %v1_9490 = sub i32 %v0_9490, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_9490, i32* %eax.global-to-local, align 4
  %v1_9491 = inttoptr i32 %v1_9490 to i32*
  %v2_9491 = load i32, i32* %v1_9491, align 4
  %v4_9491 = add i32 %v2_9491, %v1_9490
  store i32 %v4_9491, i32* %v1_9491, align 4
  %v3_9493 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_9493
}

define i32 @_ZN5boost15throw_exceptionINS_10lock_errorEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_94b0:
  ret i32 0
}

define i32 @function_94fa() local_unnamed_addr {
dec_label_pc_94fa:
  %eax.global-to-local = alloca i32, align 4
  %v0_94fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_94fa
}

define i32 @function_9561(i32 %arg1) local_unnamed_addr {
dec_label_pc_9561:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9580() local_unnamed_addr {
dec_label_pc_9580:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_9582 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9582 = add i32 %v0_9582, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_9582, i32* %ebx.global-to-local, align 4
  %v0_9583 = load i32, i32* %eax.global-to-local, align 4
  %v2_9583 = load i1, i1* %cf.global-to-local, align 1
  %v3_9583 = zext i1 %v2_9583 to i32
  %v4_9583 = add i32 %v0_9583, 96
  %v5_9583 = add i32 %v4_9583, %v3_9583
  %v30_9583 = urem i32 %v5_9583, 256
  %v32_9583 = and i32 %v0_9583, -256
  %v33_9583 = or i32 %v30_9583, %v32_9583
  store i32 %v33_9583, i32* @eax, align 4
  %v1_9586 = inttoptr i32 %v33_9583 to i32*
  %v2_9586 = load i32, i32* %v1_9586, align 4
  %v4_9586 = add i32 %v33_9583, %v2_9586
  %v9_9586 = icmp ult i32 %v4_9586, %v2_9586
  store i1 %v9_9586, i1* %cf.global-to-local, align 1
  store i32 %v4_9586, i32* %v1_9586, align 4
  %v0_958c = load i32, i32* %ebx.global-to-local, align 4
  %v2_9598 = call i32 @function_9561(i32 %v0_958c)
  store i32 %v2_9598, i32* %eax.global-to-local, align 4
  ret i32 %v2_9598

; uselistorder directives
  uselistorder i32 %v2_9586, { 1, 0 }
  uselistorder i32 %v0_9583, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail13get_bad_allocILi42EEENS_10shared_ptrIKNS0_10clone_baseEEEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_967b:
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v2_95a7 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_95a7, i32* @esi, align 4
  %v2_95af = ptrtoint i32* %stack_var_-56 to i32
  store i1 false, i1* @cf, align 1
  store i32 0, i32* @eax, align 4
  store i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), i32* %stack_var_-56, align 4
  store i32 ptrtoint (%vtable_14af8_type* @global_var_14af8.892 to i32), i32* %stack_var_-84, align 4
  %v2_963a = call i32 @function_12520(i32 %v2_95a7, i32 %v2_95af)
  store i32 %v2_963a, i32* @eax, align 4
  %v6_965e = call i32 @function_96f8(i32 ptrtoint ([169 x i8]* @global_var_8af0.925 to i32), i32 ptrtoint ([54 x i8]* @global_var_3598.926 to i32), i32 81)
  %v1_9669 = load i32, i32* @ebx, align 4
  %v2_9669 = inttoptr i32 %v1_9669 to i32*
  store i32 0, i32* %v2_9669, align 4
  %v1_9672 = load i32, i32* @ebx, align 4
  %v2_9672 = add i32 %v1_9672, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_9672 = inttoptr i32 %v2_9672 to i32*
  store i32 ptrtoint (i32* @global_var_14e30.928 to i32), i32* %v3_9672, align 4
  store i32 ptrtoint (i32* @global_var_14e35.932 to i32), i32* bitcast ([2 x i8*]* @global_var_14e34.931 to i32*), align 4
  %v2_967b = ptrtoint i32* %stack_var_-64 to i32
  ret i32 %v2_967b

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE7rethrowEv, { 1, 0 }
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_10bad_alloc_EE5cloneEv, { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10clone_implINS0_10bad_alloc_EED0Ev, { 1, 2, 0 }
  uselistorder i32 ptrtoint (%vtable_14af8_type* @global_var_14af8.892 to i32), { 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail10bad_alloc_D0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_14ab8_type* @global_var_14ab8.911 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @function_96c2(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_96c2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_96c2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_96c2 = add i32 %v0_96c2, -1779948484
  %v2_96c2 = inttoptr i32 %v1_96c2 to i32*
  %v3_96c2 = load i32, i32* %v2_96c2, align 4
  %v4_96c2 = sub i32 %v3_96c2, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_96c2, i32* %v2_96c2, align 4
  %v0_96c8 = load i32, i32* %eax.global-to-local, align 4
  %v1_96c8 = add i32 %v0_96c8, ptrtoint (i8** @global_var_1.820 to i32)
  %v11_96c8 = trunc i32 %v1_96c8 to i8
  store i32 %v1_96c8, i32* %eax.global-to-local, align 4
  %v1_96c9 = inttoptr i32 %v1_96c8 to i8*
  %v2_96c9 = load i8, i8* %v1_96c9, align 1
  %v5_96c9 = add i8 %v2_96c9, %v11_96c8
  store i8 %v5_96c9, i8* %v1_96c9, align 1
  %v0_96cb = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_96cb, i32* @eax, align 4
  %v4_96d1 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_96d8 = icmp eq i1 %v4_96d1, false
  br i1 %v1_96d8, label %bb, label %dec_label_pc_96de

bb:                                               ; preds = %dec_label_pc_96c2
  %v2_96d8 = call i32 @function_97c4()
  store i32 %v2_96d8, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_96de

dec_label_pc_96de:                                ; preds = %bb, %dec_label_pc_96c2
  %v0_96f1 = phi i32 [ %v2_96d8, %bb ], [ %v0_96cb, %dec_label_pc_96c2 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v0_96f1
}

define i32 @function_96f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_96f8:
  %v3_96f8 = load i32, i32* @eax, align 4
  ret i32 %v3_96f8
}

define i32 @function_97bf() local_unnamed_addr {
dec_label_pc_97bf:
  %eax.global-to-local = alloca i32, align 4
  %v0_97bf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_97bf
}

define i32 @function_97c4() local_unnamed_addr {
dec_label_pc_97c4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_97e4() local_unnamed_addr {
dec_label_pc_97e4:
  %eax.global-to-local = alloca i32, align 4
  %v0_97e4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_97e4
}

define i32 @function_97ed() local_unnamed_addr {
dec_label_pc_97ed:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9801(i32 %arg1) local_unnamed_addr {
dec_label_pc_9801:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9812() local_unnamed_addr {
dec_label_pc_9812:
  %eax.global-to-local = alloca i32, align 4
  %v0_9812 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9812
}

define i32 @function_9818() local_unnamed_addr {
dec_label_pc_9818:
  %v0_9818 = call i32 @function_97ed()
  ret i32 %v0_9818
}

define i32 @function_981a() local_unnamed_addr {
dec_label_pc_981a:
  %v0_9820 = call i32 @function_97ed()
  ret i32 %v0_9820

; uselistorder directives
  uselistorder i32 ()* @function_97ed, { 1, 0 }
}

define i32 @function_9822() local_unnamed_addr {
dec_label_pc_9822:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v1_9834 = call i32 @function_9801(i32 %tmp92)
  ret i32 %v1_9834
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEED1Ev() local_unnamed_addr {
dec_label_pc_9840:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v1_9855 = inttoptr i32 %tmp6 to i32*
  %v2_9855 = load i32, i32* %v1_9855, align 4
  %v1_9857 = add i32 %tmp6, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9857 = inttoptr i32 %v1_9857 to i32*
  %v3_9857 = load i32, i32* %v2_9857, align 4
  store i32 %v3_9857, i32* @eax, align 4
  %v1_985a = icmp eq i32 %v2_9855, 0
  br i1 %v1_985a, label %bb, label %dec_label_pc_985e

bb:                                               ; preds = %dec_label_pc_9840
  %v3_985c = call i32 @function_9888(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_985e

dec_label_pc_985e:                                ; preds = %bb, %dec_label_pc_9840
  %v0_985e = phi i32 [ %v3_985c, %bb ], [ %v3_9857, %dec_label_pc_9840 ]
  %v2_985e = sub i32 %v0_985e, %v2_9855
  ret i32 %v2_985e

; uselistorder directives
  uselistorder i32 %tmp6, { 1, 0 }
}

define i32 @function_9885() local_unnamed_addr {
dec_label_pc_9885:
  %eax.global-to-local = alloca i32, align 4
  %v0_9885 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9885
}

define i32 @function_9888(i32 %arg1) local_unnamed_addr {
dec_label_pc_9888:
  %v4_988c = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_9893 = icmp eq i1 %v4_988c, false
  br i1 %v1_9893, label %dec_label_pc_989a, label %dec_label_pc_9895

dec_label_pc_9895:                                ; preds = %dec_label_pc_9888
  %v0_9899 = load i32, i32* @eax, align 4
  ret i32 %v0_9899

dec_label_pc_989a:                                ; preds = %dec_label_pc_9888
  %v1_989a = load i32, i32* @eax, align 4
  ret i32 %v1_989a
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEC1ERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98b0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v0_98b0 = load i32, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  %v0_98b3 = load i32, i32* %edi.global-to-local, align 4
  %v0_98b4 = load i32, i32* %esi.global-to-local, align 4
  %v0_98b5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  store i32 %tmp109, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_98cd = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_98cd = inttoptr i32 %v1_98cd to i32*
  %v3_98cd = load i32, i32* %v2_98cd, align 4
  store i32 %v3_98cd, i32* %esi.global-to-local, align 4
  %v2_98d0 = inttoptr i32 %arg2 to i32*
  %v3_98d0 = load i32, i32* %v2_98d0, align 4
  %v4_98d0 = sub i32 %v3_98cd, %v3_98d0
  %v14_98d0 = icmp eq i32 %v4_98d0, 0
  store i32 %v4_98d0, i32* %esi.global-to-local, align 4
  store i32 0, i32* %arg1, align 4
  %v0_98d8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_98d8 = add i32 %v0_98d8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_98d8 = inttoptr i32 %v1_98d8 to i32*
  store i32 0, i32* %v2_98d8, align 4
  %v0_98e1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_98e1 = add i32 %v0_98e1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_98e1 = inttoptr i32 %v1_98e1 to i32*
  store i32 0, i32* %v2_98e1, align 4
  %v1_98e8 = icmp eq i1 %v14_98d0, false
  br i1 %v1_98e8, label %dec_label_pc_9938, label %dec_label_pc_98ea

dec_label_pc_98ea:                                ; preds = %dec_label_pc_98b0
  %v1_98ea = load i32, i32* %ebp.global-to-local, align 4
  %v2_98ea = add i32 %v1_98ea, %v4_98d0
  store i32 %v2_98ea, i32* %esi.global-to-local, align 4
  %v1_98ec = load i32, i32* %ebx.global-to-local, align 4
  %v2_98ec = inttoptr i32 %v1_98ec to i32*
  store i32 %v1_98ea, i32* %v2_98ec, align 4
  %v0_98ee = load i32, i32* %ebp.global-to-local, align 4
  %v1_98ee = load i32, i32* %ebx.global-to-local, align 4
  %v2_98ee = add i32 %v1_98ee, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_98ee = inttoptr i32 %v2_98ee to i32*
  store i32 %v0_98ee, i32* %v3_98ee, align 4
  %v0_98f1 = load i32, i32* %esi.global-to-local, align 4
  %v1_98f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_98f1 = add i32 %v1_98f1, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_98f1 = inttoptr i32 %v2_98f1 to i32*
  store i32 %v0_98f1, i32* %v3_98f1, align 4
  %v0_98f4 = load i32, i32* %edi.global-to-local, align 4
  %v1_98f4 = add i32 %v0_98f4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_98f4 = inttoptr i32 %v1_98f4 to i32*
  %v3_98f4 = load i32, i32* %v2_98f4, align 4
  store i32 %v3_98f4, i32* %esi.global-to-local, align 4
  %v1_98f7 = inttoptr i32 %v0_98f4 to i32*
  %v2_98f7 = load i32, i32* %v1_98f7, align 4
  store i32 %v2_98f7, i32* %edi.global-to-local, align 4
  %v12_98f9 = icmp eq i32 %v3_98f4, %v2_98f7
  br i1 %v12_98f9, label %dec_label_pc_98ea.dec_label_pc_991f_crit_edge, label %dec_label_pc_98fd

dec_label_pc_98ea.dec_label_pc_991f_crit_edge:    ; preds = %dec_label_pc_98ea
  %v0_992a.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_991f

dec_label_pc_98fd:                                ; preds = %dec_label_pc_98ea
  store i32 %v2_98f7, i32* %edx.global-to-local, align 4
  %v0_98ff = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_98ff, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_9908

dec_label_pc_9908:                                ; preds = %dec_label_pc_9911, %dec_label_pc_98fd
  %v1_99175 = phi i32 [ %v1_9917, %dec_label_pc_9911 ], [ %v3_98f4, %dec_label_pc_98fd ]
  %v0_990c = phi i32 [ %v1_9911, %dec_label_pc_9911 ], [ %v2_98f7, %dec_label_pc_98fd ]
  %v2_990f = phi i32 [ %v1_9914, %dec_label_pc_9911 ], [ %v0_98ff, %dec_label_pc_98fd ]
  %v1_9908 = icmp eq i32 %v2_990f, 0
  br i1 %v1_9908, label %dec_label_pc_9911, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_9908
  %v1_990c = inttoptr i32 %v0_990c to i8*
  %v2_990c = load i8, i8* %v1_990c, align 1
  %v3_990c = zext i8 %v2_990c to i32
  store i32 %v3_990c, i32* %eax.global-to-local, align 4
  %v3_990f = inttoptr i32 %v2_990f to i8*
  store i8 %v2_990c, i8* %v3_990f, align 1
  %v0_9911.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_9914.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_9917.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_9911

dec_label_pc_9911:                                ; preds = %dec_label_pc_990c, %dec_label_pc_9908
  %v1_9917 = phi i32 [ %v1_9917.pre, %dec_label_pc_990c ], [ %v1_99175, %dec_label_pc_9908 ]
  %v0_9914 = phi i32 [ %v0_9914.pre, %dec_label_pc_990c ], [ 0, %dec_label_pc_9908 ]
  %v0_9911 = phi i32 [ %v0_9911.pre, %dec_label_pc_990c ], [ %v0_990c, %dec_label_pc_9908 ]
  %v1_9911 = add i32 %v0_9911, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_9911, i32* %edx.global-to-local, align 4
  %v1_9914 = add i32 %v0_9914, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_9914, i32* %ecx.global-to-local, align 4
  %v12_9917 = icmp eq i32 %v1_9911, %v1_9917
  %v1_9919 = icmp eq i1 %v12_9917, false
  br i1 %v1_9919, label %dec_label_pc_9908, label %dec_label_pc_991b

dec_label_pc_991b:                                ; preds = %dec_label_pc_9911
  %v1_991b = load i32, i32* %edi.global-to-local, align 4
  %v2_991b = sub i32 %v1_9911, %v1_991b
  store i32 %v2_991b, i32* %edx.global-to-local, align 4
  %v0_991d = load i32, i32* %ebp.global-to-local, align 4
  %v2_991d = add i32 %v0_991d, %v2_991b
  store i32 %v2_991d, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_991f

dec_label_pc_991f:                                ; preds = %dec_label_pc_98ea.dec_label_pc_991f_crit_edge, %dec_label_pc_991b
  %v0_992a = phi i32 [ %v0_992a.pre, %dec_label_pc_98ea.dec_label_pc_991f_crit_edge ], [ %v2_991d, %dec_label_pc_991b ]
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  %v1_992a = load i32, i32* %ebx.global-to-local, align 4
  %v2_992a = add i32 %v1_992a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_992a = inttoptr i32 %v2_992a to i32*
  store i32 %v0_992a, i32* %v3_992a, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_991f.dec_label_pc_992f_crit_edge

dec_label_pc_991f.dec_label_pc_992f_crit_edge:    ; preds = %dec_label_pc_991f
  %v0_9936.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_992f

bb:                                               ; preds = %dec_label_pc_991f
  %v2_992d = call i32 @function_9944()
  store i32 %v2_992d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_992f

dec_label_pc_992f:                                ; preds = %dec_label_pc_991f.dec_label_pc_992f_crit_edge, %bb
  %v0_9936 = phi i32 [ %v0_9936.pre, %dec_label_pc_991f.dec_label_pc_992f_crit_edge ], [ %v2_992d, %bb ]
  store i32 %v0_98b5, i32* %ebx.global-to-local, align 4
  store i32 %v0_98b4, i32* %esi.global-to-local, align 4
  store i32 %v0_98b3, i32* %edi.global-to-local, align 4
  store i32 %v0_98b0, i32* %ebp.global-to-local, align 4
  ret i32 %v0_9936

dec_label_pc_9938:                                ; preds = %dec_label_pc_98b0
  %v3_9938 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_9938

; uselistorder directives
  uselistorder i32 %v1_9914, { 1, 0 }
  uselistorder i32 %v1_9911, { 1, 0, 3, 2 }
  uselistorder i32 %v2_98f7, { 1, 2, 0, 3 }
  uselistorder i32 %v3_98f4, { 1, 0, 2 }
  uselistorder i32 %v1_98ea, { 1, 0 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 5, 4, 6, 7, 8, 2 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_992f, { 1, 0 }
  uselistorder label %dec_label_pc_991f, { 1, 0 }
}

define i32 @function_9940() local_unnamed_addr {
dec_label_pc_9940:
  %eax.global-to-local = alloca i32, align 4
  %v0_9940 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9940
}

define i32 @function_9944() local_unnamed_addr {
dec_label_pc_9944:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost7variantINS_10shared_ptrIvEENS_8signals26detail23foreign_void_shared_ptrENS_6detail7variant5void_ES8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_S8_ED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9950:
  %v2_9964 = load i32, i32* %arg1, align 4
  %v2_9968 = ashr i32 %v2_9964, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_996b = xor i32 %v2_9968, %v2_9964
  store i32 %v2_996b, i32* @eax, align 4
  %tmp110 = icmp ult i32 %v2_996b, 20
  br i1 %tmp110, label %bb, label %dec_label_pc_9972

bb:                                               ; preds = %dec_label_pc_9950
  %v5_9970 = call i32 @function_9998(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_9972

dec_label_pc_9972:                                ; preds = %bb, %dec_label_pc_9950
  %v3_998a = phi i32 [ %v5_9970, %bb ], [ %v2_996b, %dec_label_pc_9950 ]
  ret i32 %v3_998a

; uselistorder directives
  uselistorder i32 %v2_996b, { 1, 0, 2 }
}

define i32 @function_9995() local_unnamed_addr {
dec_label_pc_9995:
  %eax.global-to-local = alloca i32, align 4
  %v0_9995 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9995
}

define i32 @function_9998(i32 %arg1) local_unnamed_addr {
dec_label_pc_9998:
  %v0_9998 = load i32, i32* @eax, align 4
  ret i32 %v0_9998
}

define i32 @function_99a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_99a0:
  %v0_99a0 = call i32 @function_99d0()
  store i32 %v0_99a0, i32* @eax, align 4
  %v0_99a8 = load i32, i32* @edx, align 4
  %v2_99a8 = icmp slt i32 %v0_99a8, 0
  br i1 %v2_99a8, label %bb, label %dec_label_pc_99b6

bb:                                               ; preds = %dec_label_pc_99a0
  %v1_99b0 = call i32 @function_9a48()
  br label %dec_label_pc_99b6

dec_label_pc_99b6:                                ; preds = %bb, %dec_label_pc_99a0
  %v0_99b6 = load i32, i32* @ecx, align 4
  %v1_99b6 = add i32 %v0_99b6, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_99b6 = inttoptr i32 %v1_99b6 to i32*
  %v3_99b6 = load i32, i32* %v2_99b6, align 4
  store i32 %v3_99b6, i32* @eax, align 4
  %v1_99b9 = icmp eq i32 %v3_99b6, 0
  br i1 %v1_99b9, label %bb99, label %dec_label_pc_99bd

bb99:                                             ; preds = %dec_label_pc_99b6
  %v1_99bb = call i32 @function_9a10()
  store i32 %v1_99bb, i32* @eax, align 4
  br label %dec_label_pc_99bd

dec_label_pc_99bd:                                ; preds = %bb99, %dec_label_pc_99b6
  %v0_99ce2 = phi i32 [ %v1_99bb, %bb99 ], [ %v3_99b6, %dec_label_pc_99b6 ]
  %v4_99c1 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_99c8 = icmp eq i1 %v4_99c1, false
  br i1 %v1_99c8, label %bb100, label %dec_label_pc_99ce

bb100:                                            ; preds = %dec_label_pc_99bd
  %v2_99c8 = call i32 @function_9a6a()
  br label %dec_label_pc_99ce

dec_label_pc_99ce:                                ; preds = %bb100, %dec_label_pc_99bd
  %v0_99ce = phi i32 [ %v2_99c8, %bb100 ], [ %v0_99ce2, %dec_label_pc_99bd ]
  ret i32 %v0_99ce
}

define i32 @function_99d0() local_unnamed_addr {
dec_label_pc_99d0:
  %v0_99d4 = load i32, i32* @edx, align 4
  %v1_99d4 = add i32 %v0_99d4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_99d4 = inttoptr i32 %v1_99d4 to i32*
  %v3_99d4 = load i32, i32* %v2_99d4, align 4
  ret i32 %v3_99d4
}

define i32 @function_9a03() local_unnamed_addr {
dec_label_pc_9a03:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_9a10() local_unnamed_addr {
dec_label_pc_9a10:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v4_9a14 = icmp eq i32 %tmp4, ptrtoint ([2 x i8]* @2 to i32)
  %v1_9a1b = icmp eq i1 %v4_9a14, false
  br i1 %v1_9a1b, label %bb, label %dec_label_pc_9a10.dec_label_pc_9a1d_crit_edge

dec_label_pc_9a10.dec_label_pc_9a1d_crit_edge:    ; preds = %dec_label_pc_9a10
  %v0_9a21.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_9a1d

bb:                                               ; preds = %dec_label_pc_9a10
  %v2_9a1b = call i32 @function_9a6a()
  br label %dec_label_pc_9a1d

dec_label_pc_9a1d:                                ; preds = %dec_label_pc_9a10.dec_label_pc_9a1d_crit_edge, %bb
  %v0_9a21 = phi i32 [ %v2_9a1b, %bb ], [ %v0_9a21.pre, %dec_label_pc_9a10.dec_label_pc_9a1d_crit_edge ]
  ret i32 %v0_9a21

; uselistorder directives
  uselistorder label %dec_label_pc_9a1d, { 1, 0 }
}

define i32 @function_9a28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9a28:
  %ecx.global-to-local = alloca i32, align 4
  %v4_9a2c = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_9a33 = icmp eq i1 %v4_9a2c, false
  br i1 %v1_9a33, label %bb, label %dec_label_pc_9a35

bb:                                               ; preds = %dec_label_pc_9a28
  %v2_9a33 = call i32 @function_9a6a()
  store i32 %v2_9a33, i32* @eax, align 4
  br label %dec_label_pc_9a35

dec_label_pc_9a35:                                ; preds = %bb, %dec_label_pc_9a28
  %v0_9a35 = load i32, i32* %ecx.global-to-local, align 4
  %v1_9a35 = add i32 %v0_9a35, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_9a35, i32* %ecx.global-to-local, align 4
  %v0_9a3c = load i32, i32* @esp, align 4
  %v5_9a3c = icmp ugt i32 %v0_9a3c, -41
  store i1 %v5_9a3c, i1* @cf, align 1
  %v1_9a40 = call i32 @function_e330(i32 %v1_9a35)
  ret i32 %v1_9a40

; uselistorder directives
  uselistorder i32 ()* @function_9a6a, { 2, 1, 0 }
}

define i32 @function_9a48() local_unnamed_addr {
dec_label_pc_9a48:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_9a48 = load i32, i32* @ecx, align 4
  %v1_9a48 = add i32 %v0_9a48, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9a48 = inttoptr i32 %v1_9a48 to i32*
  %v3_9a48 = load i32, i32* %v2_9a48, align 4
  %v1_9a4b = icmp eq i32 %v3_9a48, 0
  br i1 %v1_9a4b, label %bb, label %dec_label_pc_9a4f

bb:                                               ; preds = %dec_label_pc_9a48
  %v1_9a4d = call i32 @function_9a10()
  br label %dec_label_pc_9a4f

dec_label_pc_9a4f:                                ; preds = %bb, %dec_label_pc_9a48
  %v1_9a4f = inttoptr i32 %v3_9a48 to i32*
  %v2_9a4f = load i32, i32* %v1_9a4f, align 4
  %v1_9a51 = icmp eq i32 %v2_9a4f, 0
  br i1 %v1_9a51, label %dec_label_pc_9a5d, label %dec_label_pc_9a55

dec_label_pc_9a55:                                ; preds = %dec_label_pc_9a4f
  br label %dec_label_pc_9a5d

dec_label_pc_9a5d:                                ; preds = %dec_label_pc_9a55, %dec_label_pc_9a4f
  %v3_9a61 = xor i32 %tmp2, ptrtoint ([2 x i8]* @2 to i32)
  ret i32 %v3_9a61

; uselistorder directives
  uselistorder i32 ()* @function_9a10, { 1, 0 }
}

define i32 @function_9a6a() local_unnamed_addr {
dec_label_pc_9a6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIhSaIhEEaSERKS1_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9ac0:
  %tmp107 = ptrtoint i32* %arg1 to i32
  store i32 %tmp107, i32* @ebx, align 4
  %v12_9ae7 = icmp eq i32 %tmp107, %arg2
  br i1 %v12_9ae7, label %bb, label %dec_label_pc_9aeb

bb:                                               ; preds = %dec_label_pc_9ac0
  %v3_9ae9 = call i32 @function_9b2a(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_9aeb.pre = load i32, i32* @edi, align 4
  %v0_9af0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_9aeb

dec_label_pc_9aeb:                                ; preds = %bb, %dec_label_pc_9ac0
  %v0_9af0 = phi i32 [ %v0_9af0.pre, %bb ], [ %tmp107, %dec_label_pc_9ac0 ]
  %v0_9aeb = phi i32 [ %v0_9aeb.pre, %bb ], [ %arg2, %dec_label_pc_9ac0 ]
  %v1_9aeb = add i32 %v0_9aeb, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9aeb = inttoptr i32 %v1_9aeb to i32*
  %v3_9aeb = load i32, i32* %v2_9aeb, align 4
  store i32 %v3_9aeb, i32* @edx, align 4
  %v1_9aee = inttoptr i32 %v0_9aeb to i32*
  %v2_9aee = load i32, i32* %v1_9aee, align 4
  store i32 %v2_9aee, i32* @ebp, align 4
  %v1_9af0 = inttoptr i32 %v0_9af0 to i32*
  %v2_9af0 = load i32, i32* %v1_9af0, align 4
  store i32 %v2_9af0, i32* @eax, align 4
  %v1_9af2 = add i32 %v0_9af0, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9af2 = inttoptr i32 %v1_9af2 to i32*
  %v3_9af2 = load i32, i32* %v2_9af2, align 4
  %v2_9af7 = sub i32 %v3_9aeb, %v2_9aee
  store i32 %v2_9af7, i32* @esi, align 4
  %v2_9af9 = sub i32 %v3_9af2, %v2_9af0
  %tmp111 = icmp ugt i32 %v2_9af7, %v2_9af9
  br i1 %tmp111, label %dec_label_pc_9aff, label %bb110

bb110:                                            ; preds = %dec_label_pc_9aeb
  %v3_9afd = call i32 @function_9b58()
  br label %dec_label_pc_9aff

dec_label_pc_9aff:                                ; preds = %dec_label_pc_9aeb, %bb110
  %v3_9aff = phi i32 [ %v3_9afd, %bb110 ], [ %v2_9af0, %dec_label_pc_9aeb ]
  ret i32 %v3_9aff

; uselistorder directives
  uselistorder i32 %v0_9aeb, { 1, 0 }
  uselistorder i32 %v0_9af0, { 1, 0 }
  uselistorder i32 %tmp107, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9aff, { 1, 0 }
}

define i32 @function_9b11() local_unnamed_addr {
dec_label_pc_9b11:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9b27() local_unnamed_addr {
dec_label_pc_9b27:
  %v0_9b27 = load i32, i32* @eax, align 4
  %v1_9b27 = load i32, i32* @ebx, align 4
  %v2_9b27 = add i32 %v1_9b27, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_9b27 = inttoptr i32 %v2_9b27 to i32*
  store i32 %v0_9b27, i32* %v3_9b27, align 4
  %v4_9b27 = load i32, i32* @eax, align 4
  ret i32 %v4_9b27
}

define i32 @function_9b2a(i32 %arg1) local_unnamed_addr {
dec_label_pc_9b2a:
  %v4_9b2e = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_9b35 = load i32, i32* @ebx, align 4
  store i32 %v0_9b35, i32* @eax, align 4
  %v1_9b37 = icmp eq i1 %v4_9b2e, false
  br i1 %v1_9b37, label %bb, label %dec_label_pc_9b3d

bb:                                               ; preds = %dec_label_pc_9b2a
  %v2_9b37 = call i32 @function_9c15()
  br label %dec_label_pc_9b3d

dec_label_pc_9b3d:                                ; preds = %bb, %dec_label_pc_9b2a
  %v0_9b50 = phi i32 [ %v2_9b37, %bb ], [ %v0_9b35, %dec_label_pc_9b2a ]
  ret i32 %v0_9b50
}

define i32 @function_9b58() local_unnamed_addr {
dec_label_pc_9b58:
  %v0_9b58 = load i32, i32* @ebx, align 4
  %v1_9b58 = add i32 %v0_9b58, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9b58 = inttoptr i32 %v1_9b58 to i32*
  %v3_9b58 = load i32, i32* %v2_9b58, align 4
  %v1_9b5f = load i32, i32* @eax, align 4
  %v2_9b5f = sub i32 %v3_9b58, %v1_9b5f
  %v0_9b61 = load i32, i32* @esi, align 4
  %tmp9 = icmp ugt i32 %v0_9b61, %v2_9b5f
  br i1 %tmp9, label %bb, label %dec_label_pc_9b69

bb:                                               ; preds = %dec_label_pc_9b58
  %v6_9b67 = call i32 @function_9b88(i32 %v3_9b58, i32 %v2_9b5f)
  store i32 %v6_9b67, i32* @eax, align 4
  %v0_9b69.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_9b69

dec_label_pc_9b69:                                ; preds = %dec_label_pc_9b58, %bb
  %v3_9b753 = phi i32 [ %v1_9b5f, %dec_label_pc_9b58 ], [ %v6_9b67, %bb ]
  %v0_9b69 = phi i32 [ %v0_9b61, %dec_label_pc_9b58 ], [ %v0_9b69.pre, %bb ]
  %v1_9b69 = icmp eq i32 %v0_9b69, 0
  br i1 %v1_9b69, label %bb8, label %dec_label_pc_9b6d

bb8:                                              ; preds = %dec_label_pc_9b69
  %v1_9b6b = call i32 @function_9b27()
  br label %dec_label_pc_9b6d

dec_label_pc_9b6d:                                ; preds = %bb8, %dec_label_pc_9b69
  %v3_9b75 = phi i32 [ %v1_9b6b, %bb8 ], [ %v3_9b753, %dec_label_pc_9b69 ]
  ret i32 %v3_9b75

; uselistorder directives
  uselistorder i32 %v0_9b61, { 1, 0 }
  uselistorder i32 %v2_9b5f, { 1, 0 }
  uselistorder label %dec_label_pc_9b69, { 1, 0 }
}

define i32 @function_9b7d() local_unnamed_addr {
dec_label_pc_9b7d:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v2_9b7d = load i32, i32* @ebx, align 4
  %v2_9b7f = add i32 %tmp92, %v2_9b7d
  store i32 %v2_9b7f, i32* @eax, align 4
  %v0_9b81 = call i32 @function_9b27()
  ret i32 %v0_9b81
}

define i32 @function_9b88(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9b88:
  %v1_9b8c = load i32, i32* @ebp, align 4
  %v2_9b8c = add i32 %v1_9b8c, %arg2
  %v12_9b92 = icmp eq i32 %arg2, 0
  %v1_9b98 = icmp eq i1 %v12_9b92, false
  br i1 %v1_9b98, label %bb, label %dec_label_pc_9b9a

bb:                                               ; preds = %dec_label_pc_9b88
  %v4_9b98 = call i32 @function_9bd0(i32 %v2_9b8c, i32 %arg2)
  store i32 %v4_9b98, i32* @eax, align 4
  br label %dec_label_pc_9b9a

dec_label_pc_9b9a:                                ; preds = %bb, %dec_label_pc_9b88
  %v0_9b9a = load i32, i32* @edx, align 4
  %v15_9b9a = icmp eq i32 %v0_9b9a, %v2_9b8c
  %v1_9b9e = icmp eq i1 %v15_9b9a, false
  br i1 %v1_9b9e, label %dec_label_pc_9ba8, label %dec_label_pc_9ba0

dec_label_pc_9ba0:                                ; preds = %dec_label_pc_9b9a
  %v0_9ba0 = load i32, i32* @eax, align 4
  %v1_9ba0 = load i32, i32* @esi, align 4
  %v2_9ba0 = add i32 %v1_9ba0, %v0_9ba0
  store i32 %v2_9ba0, i32* @eax, align 4
  %v0_9ba2 = call i32 @function_9b27()
  ret i32 %v0_9ba2

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9b9a
  ret i32 %v2_9b8c

; uselistorder directives
  uselistorder i32 %v2_9b8c, { 1, 0, 2 }
  uselistorder i32 %arg2, { 2, 1, 0 }
}

define i32 @function_9bc0() local_unnamed_addr {
dec_label_pc_9bc0:
  %tmp92 = call i32 @__decompiler_undefined_function_0()
  %v2_9bc0 = load i32, i32* @ebx, align 4
  %v2_9bc2 = add i32 %tmp92, %v2_9bc0
  store i32 %v2_9bc2, i32* @eax, align 4
  %v0_9bc4 = call i32 @function_9b27()
  ret i32 %v0_9bc4

; uselistorder directives
  uselistorder i32 ()* @function_9b27, { 3, 1, 2, 0 }
}

define i32 @function_9bd0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9bd0:
  %v3_9bd8 = load i32, i32* @eax, align 4
  ret i32 %v3_9bd8
}

define i32 @function_9bdf() local_unnamed_addr {
dec_label_pc_9bdf:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9bdf = load i32, i32* %ebx.global-to-local, align 4
  %v1_9bdf = add i32 %v0_9bdf, 260768835
  %v2_9bdf = inttoptr i32 %v1_9bdf to i32*
  %v3_9bdf = load i32, i32* %v2_9bdf, align 4
  %v4_9bdf = add i32 %v3_9bdf, -1
  store i32 %v4_9bdf, i32* %v2_9bdf, align 4
  %v2_9be9 = load i32, i32* %ebx.global-to-local, align 4
  ret i32 %v2_9be9
}

define i32 @function_9c10() local_unnamed_addr {
dec_label_pc_9c10:
  %v0_9c10 = call i32 @function_9b11()
  ret i32 %v0_9c10
}

define i32 @function_9c15() local_unnamed_addr {
dec_label_pc_9c15:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE4lockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9c20:
  ret i32 0
}

define i32 @function_9c5b() local_unnamed_addr {
dec_label_pc_9c5b:
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* @edx, align 4
  %v0_9c60 = load i32, i32* @eax, align 4
  %v1_9c60 = load i32, i32* @ebx, align 4
  %v2_9c60 = add i32 %v1_9c60, 76
  %v3_9c60 = inttoptr i32 %v2_9c60 to i32*
  %v4_9c60 = load i32, i32* %v3_9c60, align 4
  %v15_9c60 = icmp eq i32 %v0_9c60, %v4_9c60
  br i1 %v15_9c60, label %bb, label %dec_label_pc_9c65

bb:                                               ; preds = %dec_label_pc_9c5b
  %v1_9c63 = call i32 @function_9cb2()
  store i32 %v1_9c63, i32* @eax, align 4
  br label %dec_label_pc_9c65

dec_label_pc_9c65:                                ; preds = %bb, %dec_label_pc_9c5b
  %v0_9c68 = call i32 @function_9c84()
  ret i32 %v0_9c68
}

define i32 @function_9c70() local_unnamed_addr {
dec_label_pc_9c70:
  %v3_9c74 = load i32, i32* @eax, align 4
  ret i32 %v3_9c74
}

define i32 @function_9c84() local_unnamed_addr {
dec_label_pc_9c84:
  %v0_9c84 = load i32, i32* @edx, align 4
  %v4_9c84 = trunc i32 %v0_9c84 to i8
  %v5_9c84 = icmp eq i8 %v4_9c84, 0
  %v1_9c86 = icmp eq i1 %v5_9c84, false
  br i1 %v1_9c86, label %bb, label %dec_label_pc_9c88

bb:                                               ; preds = %dec_label_pc_9c84
  %v2_9c86 = call i32 @function_9c70()
  store i32 %v2_9c86, i32* @eax, align 4
  br label %dec_label_pc_9c88

dec_label_pc_9c88:                                ; preds = %bb, %dec_label_pc_9c84
  %v0_9c88 = load i32, i32* @ebx, align 4
  %v1_9c88 = add i32 %v0_9c88, 80
  %v2_9c88 = inttoptr i32 %v1_9c88 to i32*
  %v3_9c88 = load i32, i32* %v2_9c88, align 4
  %v4_9c88 = add i32 %v3_9c88, 1
  store i32 %v4_9c88, i32* %v2_9c88, align 4
  %v0_9c8c = load i32, i32* @ebx, align 4
  %v1_9c8c = add i32 %v0_9c8c, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_9c8c = inttoptr i32 %v1_9c8c to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_9c8c, align 1
  %v3_9c8c = load i32, i32* @eax, align 4
  ret i32 %v3_9c8c
}

define i32 @function_9c9f() local_unnamed_addr {
dec_label_pc_9c9f:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_9ca3 = xor i32 %tmp6, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9ca3 = icmp eq i32 %v3_9ca3, 0
  store i32 %v3_9ca3, i32* @eax, align 4
  %v1_9caa = icmp eq i1 %v4_9ca3, false
  br i1 %v1_9caa, label %bb, label %dec_label_pc_9cac

bb:                                               ; preds = %dec_label_pc_9c9f
  %v2_9caa = call i32 @function_9d01()
  br label %dec_label_pc_9cac

dec_label_pc_9cac:                                ; preds = %bb, %dec_label_pc_9c9f
  %v0_9cb1 = phi i32 [ %v2_9caa, %bb ], [ %v3_9ca3, %dec_label_pc_9c9f ]
  ret i32 %v0_9cb1
}

define i32 @function_9cb2() local_unnamed_addr {
dec_label_pc_9cb2:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8 @__decompiler_undefined_function_2()
  %v0_9cb2 = load i32, i32* @ebx, align 4
  %v1_9cb2 = add i32 %v0_9cb2, 80
  %v2_9cb2 = inttoptr i32 %v1_9cb2 to i32*
  %v3_9cb2 = load i32, i32* %v2_9cb2, align 4
  %v4_9cb2 = add i32 %v3_9cb2, 1
  store i32 %v4_9cb2, i32* %v2_9cb2, align 4
  %v10_9cb6 = icmp eq i8 %tmp2, 0
  br i1 %v10_9cb6, label %bb, label %dec_label_pc_9cbd

bb:                                               ; preds = %dec_label_pc_9cb2
  %v1_9cbb = call i32 @function_9c9f()
  br label %dec_label_pc_9cbd

dec_label_pc_9cbd:                                ; preds = %bb, %dec_label_pc_9cb2
  ret i32 %tmp1
}

define i32 @function_9d01() local_unnamed_addr {
dec_label_pc_9d01:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9d07() local_unnamed_addr {
dec_label_pc_9d07:
  %eax.global-to-local = alloca i32, align 4
  %v0_9d07 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9d07
}

define i32 @_ZN14AnnotatedMixinIN5boost15recursive_mutexEE6unlockEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_9d20:
  ret i32 0
}

define i32 @function_9d4d() local_unnamed_addr {
dec_label_pc_9d4d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_9d63(i32 %arg1) local_unnamed_addr {
dec_label_pc_9d63:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %v0_9d63 = load i32, i32* %ebp.global-to-local, align 4
  %v1_9d63 = add i32 %v0_9d63, -1959955008
  %v2_9d63 = inttoptr i32 %v1_9d63 to i32*
  %v3_9d63 = load i32, i32* %v2_9d63, align 4
  %v4_9d63 = add i32 %v3_9d63, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_9d63, i32* %v2_9d63, align 4
  %v0_9d6a = load i32, i32* %eax.global-to-local, align 4
  %v11_9d6a = and i32 %v0_9d6a, -228
  %v3_9d6c = xor i32 %v11_9d6a, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9d6c = icmp eq i32 %v3_9d6c, 0
  store i32 %v3_9d6c, i32* %eax.global-to-local, align 4
  %v1_9d73 = icmp eq i1 %v4_9d6c, false
  br i1 %v1_9d73, label %dec_label_pc_9d8b, label %dec_label_pc_9d75

dec_label_pc_9d75:                                ; preds = %dec_label_pc_9d63
  ret i32 %v3_9d6c

dec_label_pc_9d8b:                                ; preds = %dec_label_pc_9d63
  ret i32 %v3_9d6c

; uselistorder directives
  uselistorder i32 %v3_9d6c, { 1, 0, 2, 3 }
}

define i32 @function_9d80() local_unnamed_addr {
dec_label_pc_9d80:
  %ebx.global-to-local = alloca i32, align 4
  %v0_9d80 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9d80 = add i32 %v0_9d80, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_9d80 = inttoptr i32 %v1_9d80 to i8*
  store i8 0, i8* %v2_9d80, align 1
  %v0_9d84 = call i32 @function_9d4d()
  ret i32 %v0_9d84
}

define i32 @function_9d86() local_unnamed_addr {
dec_label_pc_9d86:
  %v0_9d86 = call i32 @_ZdlPv.228()
  ret i32 %v0_9d86
}

define i32 @_ZN10CMutexLockI14AnnotatedMixinIN5boost15recursive_mutexEEEC1ERS3_PKcS7_ib(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_9da0:
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i8
  %tmp9 = ptrtoint i32* %arg1 to i32
  store i32 %tmp9, i32* @ebx, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  %v10_9dbf = icmp eq i8 %tmp, 0
  store i1 %v10_9dbf, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* %arg1, align 4
  %v0_9dca = load i32, i32* @ebx, align 4
  %v1_9dca = add i32 %v0_9dca, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9dca = inttoptr i32 %v1_9dca to i8*
  store i8 0, i8* %v2_9dca, align 1
  %v0_9dd1 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_9dd1, label %bb, label %dec_label_pc_9da0.dec_label_pc_9dd3_crit_edge

dec_label_pc_9da0.dec_label_pc_9dd3_crit_edge:    ; preds = %dec_label_pc_9da0
  %v3_9dd1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_9dd3

bb:                                               ; preds = %dec_label_pc_9da0
  %v0_9dce = load i32, i32* %esi.global-to-local, align 4
  %v2_9dd1 = call i32 @function_9df8(i32 %v0_9dce)
  br label %dec_label_pc_9dd3

dec_label_pc_9dd3:                                ; preds = %dec_label_pc_9da0.dec_label_pc_9dd3_crit_edge, %bb
  %v3_9dd1 = phi i32 [ %v3_9dd1.pre, %dec_label_pc_9da0.dec_label_pc_9dd3_crit_edge ], [ %v2_9dd1, %bb ]
  ret i32 %v3_9dd1

; uselistorder directives
  uselistorder label %dec_label_pc_9dd3, { 1, 0 }
}

define i32 @function_9de7() local_unnamed_addr {
dec_label_pc_9de7:
  %v0_9de7 = load i32, i32* @eax, align 4
  %v1_9de7 = load i32, i32* @esi, align 4
  %v2_9de7 = add i32 %v1_9de7, 76
  %v3_9de7 = inttoptr i32 %v2_9de7 to i32*
  %v4_9de7 = load i32, i32* %v3_9de7, align 4
  %v15_9de7 = icmp eq i32 %v0_9de7, %v4_9de7
  br i1 %v15_9de7, label %bb, label %dec_label_pc_9dec

bb:                                               ; preds = %dec_label_pc_9de7
  %v1_9dea = call i32 @function_9e25()
  store i32 %v1_9dea, i32* @eax, align 4
  br label %dec_label_pc_9dec

dec_label_pc_9dec:                                ; preds = %bb, %dec_label_pc_9de7
  %v0_9df0 = call i32 @function_9e35()
  ret i32 %v0_9df0
}

define i32 @function_9df8(i32 %arg1) local_unnamed_addr {
dec_label_pc_9df8:
  %v0_9df8 = call i32 @function_139c0()
  %v0_9dfd = load i32, i32* @ebx, align 4
  %v1_9dfd = add i32 %v0_9dfd, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9dfd = inttoptr i32 %v1_9dfd to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_9dfd, align 1
  %v3_9e05 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9e05 = icmp eq i32 %v3_9e05, 0
  store i32 %v3_9e05, i32* @eax, align 4
  %v1_9e0c = icmp eq i1 %v4_9e05, false
  br i1 %v1_9e0c, label %bb, label %dec_label_pc_9e0e

bb:                                               ; preds = %dec_label_pc_9df8
  %v2_9e0c = call i32 @function_9e4d()
  br label %dec_label_pc_9e0e

dec_label_pc_9e0e:                                ; preds = %bb, %dec_label_pc_9df8
  %v0_9e1d = phi i32 [ %v2_9e0c, %bb ], [ %v3_9e05, %dec_label_pc_9df8 ]
  ret i32 %v0_9e1d
}

define i32 @function_9e25() local_unnamed_addr {
dec_label_pc_9e25:
  %v0_9e25 = load i32, i32* @esi, align 4
  %v1_9e25 = add i32 %v0_9e25, 80
  %v2_9e25 = inttoptr i32 %v1_9e25 to i32*
  %v3_9e25 = load i32, i32* %v2_9e25, align 4
  %v4_9e25 = add i32 %v3_9e25, 1
  store i32 %v4_9e25, i32* %v2_9e25, align 4
  %v0_9e2e = load i32, i32* @esi, align 4
  %v1_9e2e = add i32 %v0_9e2e, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_9e2e = inttoptr i32 %v1_9e2e to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_9e2e, align 1
  %v0_9e32 = load i32, i32* @eax, align 4
  %v1_9e32 = load i32, i32* @esi, align 4
  %v2_9e32 = add i32 %v1_9e32, 76
  %v3_9e32 = inttoptr i32 %v2_9e32 to i32*
  store i32 %v0_9e32, i32* %v3_9e32, align 4
  %v4_9e32 = load i32, i32* @eax, align 4
  ret i32 %v4_9e32
}

define i32 @function_9e35() local_unnamed_addr {
dec_label_pc_9e35:
  %v3_9e35 = load i32, i32* @eax, align 4
  ret i32 %v3_9e35
}

define i32 @function_9e3c() local_unnamed_addr {
dec_label_pc_9e3c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_9e3c = add i32 %tmp91, -1995344448
  %v2_9e3c = inttoptr i32 %v1_9e3c to i32*
  %v3_9e3c = load i32, i32* %v2_9e3c, align 4
  %v4_9e3c = add i32 %v3_9e3c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_9e3c, i32* %v2_9e3c, align 4
  %v0_9e43 = load i32, i32* %eax.global-to-local, align 4
  %v1_9e43 = trunc i32 %v0_9e43 to i8
  %v2_9e43 = load i32, i32* %ebx.global-to-local, align 4
  %v3_9e43 = add i32 %v2_9e43, ptrtoint (i8** @global_var_4.814 to i32)
  %v4_9e43 = inttoptr i32 %v3_9e43 to i8*
  store i8 %v1_9e43, i8* %v4_9e43, align 1
  %v0_9e46 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_9e46
}

define i32 @function_9e4d() local_unnamed_addr {
dec_label_pc_9e4d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt6vectorISsSaISsEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_9e80:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_9e80 = load i32, i32* %edi.global-to-local, align 4
  %v0_9e81 = load i32, i32* %esi.global-to-local, align 4
  %v0_9e82 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %edi.global-to-local, align 4
  %v1_9e96 = add i32 %tmp101, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_9e96 = inttoptr i32 %v1_9e96 to i32*
  %v3_9e96 = load i32, i32* %v2_9e96, align 4
  store i32 %v3_9e96, i32* %esi.global-to-local, align 4
  %v2_9e99 = load i32, i32* %arg1, align 4
  store i32 %v2_9e99, i32* @ebx, align 4
  %v12_9e9b = icmp eq i32 %v3_9e96, %v2_9e99
  br i1 %v12_9e9b, label %bb, label %dec_label_pc_9e9f

bb:                                               ; preds = %dec_label_pc_9e80
  %v6_9e9d = call i32 @function_9eb1(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_9e82, i32 %v0_9e81, i32 %v0_9e80)
  %v0_9ea0.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_9e9f

dec_label_pc_9e9f:                                ; preds = %bb, %dec_label_pc_9e80
  %v16_9ea3 = phi i32 [ %v6_9e9d, %bb ], [ 0, %dec_label_pc_9e80 ]
  %v0_9ea0 = phi i32 [ %v0_9ea0.pre, %bb ], [ %v2_9e99, %dec_label_pc_9e80 ]
  %v1_9ea3 = add i32 %v0_9ea0, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_9ea3, i32* %ebx.global-to-local, align 4
  ret i32 %v16_9ea3

; uselistorder directives
  uselistorder i32 %v2_9e99, { 1, 0, 2 }
}

define i32 @function_9eb1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9eb1:
  %v0_9eb1 = load i32, i32* @ebx, align 4
  %v1_9eb1 = icmp eq i32 %v0_9eb1, 0
  br i1 %v1_9eb1, label %bb, label %dec_label_pc_9eb5

bb:                                               ; preds = %dec_label_pc_9eb1
  %v1_9eb3 = call i32 @function_9ed8()
  br label %dec_label_pc_9eb5

dec_label_pc_9eb5:                                ; preds = %bb, %dec_label_pc_9eb1
  %v3_9eb9 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9eb9 = icmp eq i32 %v3_9eb9, 0
  store i32 %v3_9eb9, i32* @eax, align 4
  %v1_9ec0 = icmp eq i1 %v4_9eb9, false
  br i1 %v1_9ec0, label %bb7, label %dec_label_pc_9ec2

bb7:                                              ; preds = %dec_label_pc_9eb5
  %v2_9ec0 = call i32 @function_9eec()
  br label %dec_label_pc_9ec2

dec_label_pc_9ec2:                                ; preds = %bb7, %dec_label_pc_9eb5
  %v5_9ecb = phi i32 [ %v2_9ec0, %bb7 ], [ %v3_9eb9, %dec_label_pc_9eb5 ]
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v5_9ecb
}

define i32 @function_9ed8() local_unnamed_addr {
dec_label_pc_9ed8:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %v3_9edc = xor i32 %tmp8, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9edc = icmp eq i32 %v3_9edc, 0
  store i32 %v3_9edc, i32* @eax, align 4
  %v1_9ee3 = icmp eq i1 %v4_9edc, false
  br i1 %v1_9ee3, label %bb, label %dec_label_pc_9ee5

bb:                                               ; preds = %dec_label_pc_9ed8
  %v2_9ee3 = call i32 @function_9eec()
  br label %dec_label_pc_9ee5

dec_label_pc_9ee5:                                ; preds = %bb, %dec_label_pc_9ed8
  %v0_9eeb = phi i32 [ %v2_9ee3, %bb ], [ %v3_9edc, %dec_label_pc_9ed8 ]
  ret i32 %v0_9eeb

; uselistorder directives
  uselistorder i32 ()* @function_9eec, { 1, 0 }
}

define i32 @function_9eec() local_unnamed_addr {
dec_label_pc_9eec:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9f00:
  ret i32 %arg2
}

define i32 @function_9f3a(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9f3a:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_9f3a = load i32, i32* %ebx.global-to-local, align 4
  %v1_9f3a = add i32 %v0_9f3a, 1696343124
  %v2_9f3a = inttoptr i32 %v1_9f3a to i32*
  %v3_9f3a = load i32, i32* %v2_9f3a, align 4
  %v4_9f3a = add i32 %v3_9f3a, -1
  store i32 %v4_9f3a, i32* %v2_9f3a, align 4
  %v0_9f40 = load i32, i32* %edx.global-to-local, align 4
  %v3_9f40 = xor i32 %v0_9f40, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9f40 = icmp eq i32 %v3_9f40, 0
  store i32 %v3_9f40, i32* %edx.global-to-local, align 4
  %v0_9f46 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9f48 = icmp eq i1 %v4_9f40, false
  br i1 %v1_9f48, label %dec_label_pc_9f58, label %dec_label_pc_9f4a

dec_label_pc_9f4a:                                ; preds = %dec_label_pc_9f3a
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_9f46

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9f3a
  ret i32 %v0_9f46

; uselistorder directives
  uselistorder i32 %v0_9f46, { 1, 0 }
}

define i32 @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEEC1ERKS3_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9f70:
  %v1_9f89 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  ret i32 %v1_9f89
}

define i32 @function_9fa0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9fa0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_9fa0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9fa0 = add i32 %v0_9fa0, 63376454
  %v2_9fa0 = inttoptr i32 %v1_9fa0 to i32*
  %v3_9fa0 = load i32, i32* %v2_9fa0, align 4
  %v4_9fa0 = add i32 %v3_9fa0, -1
  store i32 %v4_9fa0, i32* %v2_9fa0, align 4
  %v0_9fa6 = load i32, i32* %eax.global-to-local, align 4
  %v1_9fa6 = sub i32 %v0_9fa6, ptrtoint (i8** @global_var_1.820 to i32)
  %v1_9fa7 = add i32 %v1_9fa6, sub (i32 0, i32 ptrtoint (i8** @global_var_1.820 to i32))
  %v9_9fa7 = icmp eq i32 %v1_9fa7, 0
  store i32 %v1_9fa7, i32* %eax.global-to-local, align 4
  %tmp105 = inttoptr i32 %v1_9fa7 to i32*
  %v3_9fa8 = load i32, i32* %tmp105, align 4
  %v6_9fa8 = add i32 %v3_9fa8, %v1_9fa7
  store i32 %v6_9fa8, i32* %tmp105, align 4
  %v0_9faa = load i32, i32* %ebx.global-to-local, align 4
  %v1_9faa = add i32 %v0_9faa, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9faa = inttoptr i32 %v1_9faa to i32*
  store i32 ptrtoint (i32* @global_var_14768.896 to i32), i32* %v2_9faa, align 4
  %v2_9fb3 = load i32, i32* %ebx.global-to-local, align 4
  %v3_9fb3 = add i32 %v2_9fb3, 12
  %v4_9fb3 = inttoptr i32 %v3_9fb3 to i32*
  store i32 %v1_9fa7, i32* %v4_9fb3, align 4
  br i1 %v9_9fa7, label %dec_label_pc_9fc0, label %dec_label_pc_9fb8

dec_label_pc_9fb8:                                ; preds = %dec_label_pc_9fa0
  br label %dec_label_pc_9fc0

dec_label_pc_9fc0:                                ; preds = %dec_label_pc_9fb8, %dec_label_pc_9fa0
  %v0_9fc0 = load i32, i32* %esi.global-to-local, align 4
  %v1_9fc0 = add i32 %v0_9fc0, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_9fc0 = inttoptr i32 %v1_9fc0 to i32*
  %v3_9fc0 = load i32, i32* %v2_9fc0, align 4
  store i32 %v3_9fc0, i32* %eax.global-to-local, align 4
  %v0_9fc3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9fc3 = add i32 %v0_9fc3, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_9fc3 = inttoptr i32 %v1_9fc3 to i32*
  store i32 ptrtoint (i32* @global_var_1488c.918 to i32), i32* %v2_9fc3, align 4
  %v0_9fca = load i32, i32* %eax.global-to-local, align 4
  %v1_9fca = load i32, i32* %ebx.global-to-local, align 4
  %v2_9fca = add i32 %v1_9fca, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_9fca = inttoptr i32 %v2_9fca to i32*
  store i32 %v0_9fca, i32* %v3_9fca, align 4
  %v0_9fcd = load i32, i32* %esi.global-to-local, align 4
  %v1_9fcd = add i32 %v0_9fcd, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_9fcd = inttoptr i32 %v1_9fcd to i32*
  %v3_9fcd = load i32, i32* %v2_9fcd, align 4
  store i32 %v3_9fcd, i32* %eax.global-to-local, align 4
  %v1_9fd0 = load i32, i32* %ebx.global-to-local, align 4
  %v2_9fd0 = add i32 %v1_9fd0, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_9fd0 = inttoptr i32 %v2_9fd0 to i32*
  store i32 %v3_9fcd, i32* %v3_9fd0, align 4
  %v0_9fd3 = load i32, i32* %esi.global-to-local, align 4
  %v1_9fd3 = add i32 %v0_9fd3, 24
  %v2_9fd3 = inttoptr i32 %v1_9fd3 to i32*
  %v3_9fd3 = load i32, i32* %v2_9fd3, align 4
  store i32 %v3_9fd3, i32* %eax.global-to-local, align 4
  %v0_9fd6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_9fd6 = inttoptr i32 %v0_9fd6 to i32*
  store i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), i32* %v1_9fd6, align 4
  %v0_9fdc = load i32, i32* %eax.global-to-local, align 4
  %v1_9fdc = load i32, i32* %ebx.global-to-local, align 4
  %v2_9fdc = add i32 %v1_9fdc, 24
  %v3_9fdc = inttoptr i32 %v2_9fdc to i32*
  store i32 %v0_9fdc, i32* %v3_9fdc, align 4
  %v3_9fe3 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_9fe3 = icmp eq i32 %v3_9fe3, 0
  store i32 %v3_9fe3, i32* %eax.global-to-local, align 4
  %v1_9fea = icmp eq i1 %v4_9fe3, false
  br i1 %v1_9fea, label %dec_label_pc_9ff2, label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fc0
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  ret i32 %v3_9fe3

dec_label_pc_9ff2:                                ; preds = %dec_label_pc_9fc0
  ret i32 %v3_9fe3

; uselistorder directives
  uselistorder i32 %v3_9fe3, { 1, 0, 2, 3 }
  uselistorder i32 %v1_9fa7, { 3, 4, 2, 1, 0 }
  uselistorder i32 (i32*)* @_ZN5boost16exception_detail19error_info_injectorINS_17bad_function_callEED0Ev, { 1, 0 }
  uselistorder i32 ptrtoint (%vtable_14878_type* @global_var_14878.917 to i32), { 4, 3, 2, 1, 0 }
}

define i32 @_ZThn28_NK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_a020:
  %v4_a020 = add i32 %arg1, -28
  %v1_a025 = call i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %v4_a020)
  ret i32 %v1_a025

; uselistorder directives
  uselistorder i32 (i32)* @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv, { 1, 0 }
}

define i32 @_ZNK5boost16exception_detail10clone_implINS0_19error_info_injectorINS_17bad_function_callEEEE7rethrowEv(i32 %arg1) {
dec_label_pc_a030:
  ret i32 0
}

define i32 @function_a050() local_unnamed_addr {
dec_label_pc_a050:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_a050 = load i32, i32* %ecx.global-to-local, align 4
  %v1_a050 = add i32 %v0_a050, -1996217228
  %v2_a050 = inttoptr i32 %v1_a050 to i32*
  %v3_a050 = load i32, i32* %v2_a050, align 4
  %v4_a050 = sub i32 %v3_a050, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_a050, i32* %v2_a050, align 4
  %v0_a056 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a056
}

define i32 @_ZN5boost15throw_exceptionINS_17bad_function_callEEEvRKT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_a0a0:
  ret i32 0
}

define i32 @function_a173() local_unnamed_addr {
dec_label_pc_a173:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a182() local_unnamed_addr {
dec_label_pc_a182:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_a184 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a184 = add i32 %v0_a184, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a184, i32* %ebx.global-to-local, align 4
  %v0_a185 = load i32, i32* %eax.global-to-local, align 4
  %v2_a185 = load i1, i1* %cf.global-to-local, align 1
  %v3_a185 = zext i1 %v2_a185 to i32
  %v4_a185 = add i32 %v0_a185, 96
  %v5_a185 = add i32 %v4_a185, %v3_a185
  %v30_a185 = urem i32 %v5_a185, 256
  %v32_a185 = and i32 %v0_a185, -256
  %v33_a185 = or i32 %v30_a185, %v32_a185
  store i32 %v33_a185, i32* %eax.global-to-local, align 4
  %v1_a188 = inttoptr i32 %v33_a185 to i32*
  %v2_a188 = load i32, i32* %v1_a188, align 4
  %v4_a188 = add i32 %v33_a185, %v2_a188
  %v9_a188 = icmp ult i32 %v4_a188, %v2_a188
  store i1 %v9_a188, i1* %cf.global-to-local, align 1
  store i32 %v4_a188, i32* %v1_a188, align 4
  %v0_a18a = load i32, i32* %eax.global-to-local, align 4
  %v0_a18e = load i32, i32* %ebx.global-to-local, align 4
  %v2_a191 = call i32 @__assert_fail.492(i32 %v0_a18e)
  store i32 %v0_a18a, i32* %eax.global-to-local, align 4
  %v0_a19a = load i32, i32* %esi.global-to-local, align 4
  %v2_a1a1 = call i32 @__assert_fail.492(i32 %v0_a19a)
  store i32 %v0_a18a, i32* @eax, align 4
  store i32 %v0_a18a, i32* %esi.global-to-local, align 4
  %v0_a1ac = call i32 @function_a173()
  store i32 %v0_a1ac, i32* %eax.global-to-local, align 4
  ret i32 %v0_a1ac

; uselistorder directives
  uselistorder i32 %v2_a188, { 1, 0 }
  uselistorder i32 %v0_a185, { 1, 0 }
  uselistorder i32 (i32)* @__assert_fail.492, { 1, 0 }
}

define i32 @function_a1ae() local_unnamed_addr {
dec_label_pc_a1ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_a1ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a1ae
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a1b0:
  %v0_a1b0 = load i32, i32* @edi, align 4
  %v0_a1b1 = load i32, i32* @esi, align 4
  %v0_a1b2 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_a1ca = icmp eq i32 %arg2, 0
  %v1_a1cc = icmp eq i1 %v1_a1ca, false
  br i1 %v1_a1cc, label %dec_label_pc_a1d2, label %dec_label_pc_a1ce

dec_label_pc_a1ce:                                ; preds = %dec_label_pc_a1b0
  %v5_a1ce = call i32 @function_a1f0(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_a1b2, i32 %v0_a1b1, i32 %v0_a1b0)
  ret i32 %v5_a1ce

dec_label_pc_a1d2:                                ; preds = %dec_label_pc_a1b0
  %v1_a1d2 = add i32 %arg2, 12
  %v2_a1d2 = inttoptr i32 %v1_a1d2 to i32*
  %v3_a1d2 = load i32, i32* %v2_a1d2, align 4
  store i32 %v3_a1d2, i32* @eax, align 4
  %v2_a1dc = call i32 @function_14360(i32 %arg1, i32 %v3_a1d2)
  %v1_a1e1 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_a1e1 = inttoptr i32 %v1_a1e1 to i32*
  %v3_a1e1 = load i32, i32* %v2_a1e1, align 4
  store i32 %v3_a1e1, i32* @esi, align 4
  ret i32 %v2_a1dc
}

define i32 @function_a1f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a1f0:
  %v3_a1f4 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a1f4 = icmp eq i32 %v3_a1f4, 0
  %v1_a1fb = icmp eq i1 %v4_a1f4, false
  br i1 %v1_a1fb, label %dec_label_pc_a204, label %dec_label_pc_a1fd

dec_label_pc_a1fd:                                ; preds = %dec_label_pc_a1f0
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v3_a1f4

dec_label_pc_a204:                                ; preds = %dec_label_pc_a1f0
  ret i32 %v3_a1f4

; uselistorder directives
  uselistorder i32 %v3_a1f4, { 1, 0, 2 }
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE8_M_eraseEPSt13_Rb_tree_nodeISsE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a210:
  %v0_a210 = load i32, i32* @edi, align 4
  %v0_a211 = load i32, i32* @esi, align 4
  %v0_a212 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ebx, align 4
  %v1_a22a = icmp eq i32 %arg2, 0
  %v1_a22c = icmp eq i1 %v1_a22a, false
  br i1 %v1_a22c, label %dec_label_pc_a232, label %dec_label_pc_a22e

dec_label_pc_a22e:                                ; preds = %dec_label_pc_a210
  %v5_a22e = call i32 @function_a25b(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_a212, i32 %v0_a211, i32 %v0_a210)
  ret i32 %v5_a22e

dec_label_pc_a232:                                ; preds = %dec_label_pc_a210
  %v1_a232 = add i32 %arg2, 12
  %v2_a232 = inttoptr i32 %v1_a232 to i32*
  %v3_a232 = load i32, i32* %v2_a232, align 4
  store i32 %v3_a232, i32* @eax, align 4
  %v3_a23c = call i32 @function_14420(i32 %arg1, i32 %v3_a232)
  %v1_a244 = add i32 %arg2, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  ret i32 %v1_a244
}

define i32 @function_a25b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a25b:
  %v3_a25f = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a25f = icmp eq i32 %v3_a25f, 0
  %v1_a266 = icmp eq i1 %v4_a25f, false
  br i1 %v1_a266, label %dec_label_pc_a26f, label %dec_label_pc_a268

dec_label_pc_a268:                                ; preds = %dec_label_pc_a25b
  store i32 %arg2, i32* @ebx, align 4
  ret i32 %v3_a25f

dec_label_pc_a26f:                                ; preds = %dec_label_pc_a25b
  ret i32 %v3_a25f

; uselistorder directives
  uselistorder i32 %v3_a25f, { 1, 0, 2 }
}

define i32 @_ZN14CUnsignedAlertD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_a280:
  %v1_a294 = add i32 %arg1, 96
  ret i32 %v1_a294
}

define i32 @function_a2b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a2b4:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_a2b4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a2b4 = add i32 %v0_a2b4, 1149846595
  %v2_a2b4 = inttoptr i32 %v1_a2b4 to i32*
  %v3_a2b4 = load i32, i32* %v2_a2b4, align 4
  %v4_a2b4 = add i32 %v3_a2b4, -1
  store i32 %v4_a2b4, i32* %v2_a2b4, align 4
  %v0_a2ba = load i32, i32* %eax.global-to-local, align 4
  %v1_a2ba = trunc i32 %v0_a2ba to i8
  %v2_a2ba = and i8 %v1_a2ba, ptrtoint (i8** @global_var_4.814 to i8)
  %v3_a2ba = icmp eq i8 %v2_a2ba, 0
  store i1 %v3_a2ba, i1* @zf, align 1
  %v0_a2bc = load i32, i32* %ebx.global-to-local, align 4
  %v1_a2bc = add i32 %v0_a2bc, ptrtoint (i32* @global_var_3c.843 to i32)
  store i32 %v1_a2bc, i32* @eax, align 4
  %v1_a2c2 = call i32 @function_14490(i32 %v1_a2bc)
  store i32 %v1_a2c2, i32* %eax.global-to-local, align 4
  %v0_a2c7 = load i32, i32* @ebx, align 4
  %v1_a2c7 = add i32 %v0_a2c7, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_a2c7 = inttoptr i32 %v1_a2c7 to i32*
  %v3_a2c7 = load i32, i32* %v2_a2c7, align 4
  store i32 %v3_a2c7, i32* @eax, align 4
  %v1_a2ca = add i32 %v0_a2c7, 28
  store i32 %v1_a2ca, i32* %ebx.global-to-local, align 4
  %v2_a2d4 = call i32 @function_14430(i32 %v1_a2ca, i32 %v3_a2c7)
  %v3_a2dd = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a2dd = icmp eq i32 %v3_a2dd, 0
  store i32 %v3_a2dd, i32* %eax.global-to-local, align 4
  %v1_a2e4 = icmp eq i1 %v4_a2dd, false
  br i1 %v1_a2e4, label %dec_label_pc_a2eb, label %dec_label_pc_a2e6

dec_label_pc_a2e6:                                ; preds = %dec_label_pc_a2b4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v3_a2dd

dec_label_pc_a2eb:                                ; preds = %dec_label_pc_a2b4
  ret i32 %v3_a2dd

; uselistorder directives
  uselistorder i32 %v3_a2dd, { 1, 0, 2, 3 }
}

define i32 @_ZN6CAlertD1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_a300:
  store i32 %arg1, i32* @ebx, align 4
  %v1_a314 = add i32 %arg1, ptrtoint (i32* @global_var_70.844 to i32)
  %v2_a314 = inttoptr i32 %v1_a314 to i32*
  %v3_a314 = load i32, i32* %v2_a314, align 4
  %v1_a317 = icmp eq i32 %v3_a314, 0
  br i1 %v1_a317, label %bb, label %dec_label_pc_a31b

bb:                                               ; preds = %dec_label_pc_a300
  %v3_a319 = call i32 @function_a323(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_a31b

dec_label_pc_a31b:                                ; preds = %bb, %dec_label_pc_a300
  %v0_a31b = phi i32 [ %v3_a319, %bb ], [ %v3_a314, %dec_label_pc_a300 ]
  ret i32 %v0_a31b
}

define i32 @function_a323(i32 %arg1) local_unnamed_addr {
dec_label_pc_a323:
  %v0_a323 = load i32, i32* @ebx, align 4
  %v1_a323 = add i32 %v0_a323, ptrtoint (i32* @global_var_64.837 to i32)
  %v2_a323 = inttoptr i32 %v1_a323 to i32*
  %v3_a323 = load i32, i32* %v2_a323, align 4
  %v1_a326 = icmp eq i32 %v3_a323, 0
  br i1 %v1_a326, label %bb, label %dec_label_pc_a32a

bb:                                               ; preds = %dec_label_pc_a323
  %v1_a328 = call i32 @function_a332()
  br label %dec_label_pc_a32a

dec_label_pc_a32a:                                ; preds = %bb, %dec_label_pc_a323
  %v3_a32a = phi i32 [ %v1_a328, %bb ], [ %v3_a323, %dec_label_pc_a323 ]
  ret i32 %v3_a32a
}

define i32 @function_a332() local_unnamed_addr {
dec_label_pc_a332:
  %v0_a332 = load i32, i32* @ebx, align 4
  %v1_a332 = add i32 %v0_a332, 96
  ret i32 %v1_a332
}

define i32 @function_a352(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a352:
  %ebx.global-to-local = alloca i32, align 4
  %v0_a352 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a352 = add i32 %v0_a352, 1149846595
  %v2_a352 = inttoptr i32 %v1_a352 to i32*
  %v3_a352 = load i32, i32* %v2_a352, align 4
  %v4_a352 = add i32 %v3_a352, -1
  store i32 %v4_a352, i32* %v2_a352, align 4
  %v0_a35a = load i32, i32* %ebx.global-to-local, align 4
  %v1_a368 = add i32 %v0_a35a, 28
  store i32 %v1_a368, i32* %ebx.global-to-local, align 4
  %v3_a37b = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a37b = icmp eq i32 %v3_a37b, 0
  %v1_a382 = icmp eq i1 %v4_a37b, false
  br i1 %v1_a382, label %dec_label_pc_a389, label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a352
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  ret i32 %v3_a37b

dec_label_pc_a389:                                ; preds = %dec_label_pc_a352
  ret i32 %v3_a37b

; uselistorder directives
  uselistorder i32 %v3_a37b, { 1, 0, 2 }
}

define i32 @_ZN5boost8signals26detail24slot_call_iterator_cacheINS1_9void_typeENS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS0_10connectionES7_S8_EEENS0_5mutexEE12slot_invokerEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_a390:
  store i32 %arg1, i32* @ebx, align 4
  %v1_a3a4 = add i32 %arg1, ptrtoint (i32* @global_var_80.933 to i32)
  %v2_a3a4 = inttoptr i32 %v1_a3a4 to i32*
  %v3_a3a4 = load i32, i32* %v2_a3a4, align 4
  %v1_a3aa = icmp eq i32 %v3_a3a4, 0
  br i1 %v1_a3aa, label %bb, label %dec_label_pc_a3ae

bb:                                               ; preds = %dec_label_pc_a390
  %v3_a3ac = call i32 @function_a3d8(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_a3ae.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a3ae

dec_label_pc_a3ae:                                ; preds = %bb, %dec_label_pc_a390
  %v0_a3ae = phi i32 [ %v0_a3ae.pre, %bb ], [ %arg1, %dec_label_pc_a390 ]
  %v1_a3ae = add i32 %v0_a3ae, ptrtoint (i32* @global_var_7c.835 to i32)
  %v2_a3ae = inttoptr i32 %v1_a3ae to i32*
  %v3_a3ae = load i32, i32* %v2_a3ae, align 4
  store i32 %v3_a3ae, i32* @eax, align 4
  %tmp119 = icmp ult i32 %v3_a3ae, 10
  br i1 %tmp119, label %bb113, label %dec_label_pc_a3b6

bb113:                                            ; preds = %dec_label_pc_a3ae
  %v3_a3b4 = call i32 @function_a41d()
  store i32 %v3_a3b4, i32* @eax, align 4
  %v0_a3b6.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a3b6

dec_label_pc_a3b6:                                ; preds = %bb113, %dec_label_pc_a3ae
  %v0_a3c36 = phi i32 [ %v3_a3b4, %bb113 ], [ %v3_a3ae, %dec_label_pc_a3ae ]
  %v0_a3b6 = phi i32 [ %v0_a3b6.pre, %bb113 ], [ %v0_a3ae, %dec_label_pc_a3ae ]
  %v1_a3b6 = add i32 %v0_a3b6, ptrtoint (i8** @global_var_4.814 to i32)
  %v12_a3b9 = icmp eq i32 %v3_a3a4, %v1_a3b6
  br i1 %v12_a3b9, label %bb114, label %dec_label_pc_a3bd

bb114:                                            ; preds = %dec_label_pc_a3b6
  %v1_a3bb = call i32 @function_a418()
  %v0_a3bd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a3bd

dec_label_pc_a3bd:                                ; preds = %bb114, %dec_label_pc_a3b6
  %v0_a3c3 = phi i32 [ %v1_a3bb, %bb114 ], [ %v0_a3c36, %dec_label_pc_a3b6 ]
  %v0_a3bd = phi i32 [ %v0_a3bd.pre, %bb114 ], [ %v0_a3b6, %dec_label_pc_a3b6 ]
  %v1_a3bd = add i32 %v0_a3bd, ptrtoint (i32* @global_var_84.934 to i32)
  %v2_a3bd = inttoptr i32 %v1_a3bd to i32*
  %v3_a3bd = load i32, i32* %v2_a3bd, align 4
  %v7_a3c3 = icmp ult i32 %v0_a3c3, %v3_a3bd
  br i1 %v7_a3c3, label %bb115, label %dec_label_pc_a3c7

bb115:                                            ; preds = %dec_label_pc_a3bd
  %v1_a3c5 = call i32 @function_a41d()
  br label %dec_label_pc_a3c7

dec_label_pc_a3c7:                                ; preds = %bb115, %dec_label_pc_a3bd
  %v0_a3cb8 = phi i32 [ %v1_a3c5, %bb115 ], [ %v0_a3c3, %dec_label_pc_a3bd ]
  %v1_a3c7 = icmp eq i32 %v3_a3bd, 0
  %v1_a3c9 = icmp eq i1 %v1_a3c7, false
  br i1 %v1_a3c9, label %bb116, label %dec_label_pc_a3cb

bb116:                                            ; preds = %dec_label_pc_a3c7
  %v2_a3c9 = call i32 @function_a3f8()
  br label %dec_label_pc_a3cb

dec_label_pc_a3cb:                                ; preds = %bb116, %dec_label_pc_a3c7
  %v0_a3cb = phi i32 [ %v2_a3c9, %bb116 ], [ %v0_a3cb8, %dec_label_pc_a3c7 ]
  %tmp120 = icmp ult i32 %v0_a3cb, 11
  br i1 %tmp120, label %bb118, label %dec_label_pc_a3d0

bb118:                                            ; preds = %dec_label_pc_a3cb
  %v5_a3ce = call i32 @function_a3d8(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %bb118, %dec_label_pc_a3cb
  %v3_a3d0 = phi i32 [ %v5_a3ce, %bb118 ], [ %v0_a3cb, %dec_label_pc_a3cb ]
  ret i32 %v3_a3d0

; uselistorder directives
  uselistorder i32 %v0_a3cb, { 1, 0 }
  uselistorder i32 %v3_a3ae, { 1, 0, 2 }
  uselistorder i32 ()* @function_a41d, { 1, 0 }
  uselistorder i32 (i32)* @function_a3d8, { 1, 0 }
}

define i32 @function_a3d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_a3d8:
  %v2_a3d8 = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v9_a3d8 = icmp eq i8 %v2_a3d8, 0
  br i1 %v9_a3d8, label %dec_label_pc_a3e0, label %dec_label_pc_a3dd

dec_label_pc_a3dd:                                ; preds = %dec_label_pc_a3d8
  %v0_a3dd = load i32, i32* @ebx, align 4
  %v1_a3dd = inttoptr i32 %v0_a3dd to i8*
  store i8 0, i8* %v1_a3dd, align 1
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a3dd, %dec_label_pc_a3d8
  %v3_a3e4 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a3e4 = icmp eq i32 %v3_a3e4, 0
  store i32 %v3_a3e4, i32* @eax, align 4
  %v1_a3eb = icmp eq i1 %v4_a3e4, false
  br i1 %v1_a3eb, label %bb, label %dec_label_pc_a3ed

bb:                                               ; preds = %dec_label_pc_a3e0
  %v2_a3eb = call i32 @function_a422()
  br label %dec_label_pc_a3ed

dec_label_pc_a3ed:                                ; preds = %bb, %dec_label_pc_a3e0
  %v0_a3f1 = phi i32 [ %v2_a3eb, %bb ], [ %v3_a3e4, %dec_label_pc_a3e0 ]
  ret i32 %v0_a3f1
}

define i32 @function_a3f8() local_unnamed_addr {
dec_label_pc_a3f8:
  %v0_a3f8 = load i32, i32* @ebx, align 4
  %v1_a409 = add i32 %v0_a3f8, ptrtoint (i32* @global_var_7c.835 to i32)
  %v2_a409 = inttoptr i32 %v1_a409 to i32*
  %v3_a409 = load i32, i32* %v2_a409, align 4
  ret i32 %v3_a409
}

define i32 @function_a418() local_unnamed_addr {
dec_label_pc_a418:
  %v0_a418 = load i32, i32* @eax, align 4
  ret i32 %v0_a418
}

define i32 @function_a41d() local_unnamed_addr {
dec_label_pc_a41d:
  %v0_a41d = call i32 @function_dd96()
  ret i32 %v0_a41d
}

define i32 @function_a422() local_unnamed_addr {
dec_label_pc_a422:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEE15_M_range_insertIPKcEEvN9__gnu_cxx17__normal_iteratorIPcS2_EET_SA_St20forward_iterator_tag(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a440:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp23 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* @ebx, align 4
  store i32 0, i32* @eax, align 4
  store i32 %tmp23, i32* @edi, align 4
  store i32 %arg2, i32* @esi, align 4
  %v12_a467 = icmp eq i32 %arg4, %arg3
  br i1 %v12_a467, label %dec_label_pc_a4d0, label %dec_label_pc_a46b

dec_label_pc_a46b:                                ; preds = %dec_label_pc_a440
  %v1_a46b = add i32 %tmp23, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a46b = inttoptr i32 %v1_a46b to i32*
  %v3_a46b = load i32, i32* %v2_a46b, align 4
  store i32 %v3_a46b, i32* @ecx, align 4
  %v1_a470 = add i32 %tmp23, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_a470 = inttoptr i32 %v1_a470 to i32*
  %v3_a470 = load i32, i32* %v2_a470, align 4
  %v2_a473 = sub i32 %arg4, %arg3
  %v12_a473 = icmp eq i32 %v2_a473, 0
  store i32 %v2_a473, i32* @ebp, align 4
  %v2_a475 = sub i32 %v3_a470, %v3_a46b
  store i32 %v2_a475, i32* %eax.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v2_a473, %v2_a475
  br i1 %tmp39, label %dec_label_pc_a4f0, label %dec_label_pc_a47b

dec_label_pc_a47b:                                ; preds = %dec_label_pc_a46b
  %v2_a47d = sub i32 %v3_a46b, %arg2
  store i32 %v2_a47d, i32* %edx.global-to-local, align 4
  %v7_a47f = icmp ult i32 %v2_a473, %v2_a47d
  %v1_a485 = icmp eq i1 %v7_a47f, false
  br i1 %v1_a485, label %bb, label %dec_label_pc_a48b

bb:                                               ; preds = %dec_label_pc_a47b
  %v4_a485 = call i32 @function_a600(i32 %v2_a47d, i32 %arg3)
  store i32 %v4_a485, i32* %eax.global-to-local, align 4
  %v0_a48b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_a48b

dec_label_pc_a48b:                                ; preds = %bb, %dec_label_pc_a47b
  %v0_a493 = phi i32 [ %v0_a48b.pre, %bb ], [ %v3_a46b, %dec_label_pc_a47b ]
  %v2_a48d = sub i32 %v0_a493, %v2_a473
  store i32 %v0_a493, i32* %eax.global-to-local, align 4
  br i1 %v12_a473, label %dec_label_pc_a48b.dec_label_pc_a4b6_crit_edge, label %dec_label_pc_a49b

dec_label_pc_a48b.dec_label_pc_a4b6_crit_edge:    ; preds = %dec_label_pc_a48b
  %v1_a4b8.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_a4b6

dec_label_pc_a49b:                                ; preds = %dec_label_pc_a48b
  store i32 %v2_a48d, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_a4a0

dec_label_pc_a4a0:                                ; preds = %dec_label_pc_a4a9, %dec_label_pc_a49b
  %v1_a4af9 = phi i32 [ %v1_a4af, %dec_label_pc_a4a9 ], [ %v0_a493, %dec_label_pc_a49b ]
  %v2_a4a7 = phi i32 [ %v1_a4ac, %dec_label_pc_a4a9 ], [ %v0_a493, %dec_label_pc_a49b ]
  %v0_a4a4 = phi i32 [ %v1_a4a9, %dec_label_pc_a4a9 ], [ %v2_a48d, %dec_label_pc_a49b ]
  %v1_a4a0 = icmp eq i32 %v2_a4a7, 0
  br i1 %v1_a4a0, label %dec_label_pc_a4a9, label %dec_label_pc_a4a4

dec_label_pc_a4a4:                                ; preds = %dec_label_pc_a4a0
  %v1_a4a4 = inttoptr i32 %v0_a4a4 to i8*
  %v2_a4a4 = load i8, i8* %v1_a4a4, align 1
  %v3_a4a7 = inttoptr i32 %v2_a4a7 to i8*
  store i8 %v2_a4a4, i8* %v3_a4a7, align 1
  %v0_a4a9.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_a4ac.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_a4af.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_a4a9

dec_label_pc_a4a9:                                ; preds = %dec_label_pc_a4a4, %dec_label_pc_a4a0
  %v1_a4af = phi i32 [ %v1_a4af.pre, %dec_label_pc_a4a4 ], [ %v1_a4af9, %dec_label_pc_a4a0 ]
  %v0_a4ac = phi i32 [ %v0_a4ac.pre, %dec_label_pc_a4a4 ], [ 0, %dec_label_pc_a4a0 ]
  %v0_a4a9 = phi i32 [ %v0_a4a9.pre, %dec_label_pc_a4a4 ], [ %v0_a4a4, %dec_label_pc_a4a0 ]
  %v1_a4a9 = add i32 %v0_a4a9, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a4a9, i32* %edx.global-to-local, align 4
  %v1_a4ac = add i32 %v0_a4ac, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a4ac, i32* %eax.global-to-local, align 4
  %v12_a4af = icmp eq i32 %v1_a4a9, %v1_a4af
  %v1_a4b1 = icmp eq i1 %v12_a4af, false
  br i1 %v1_a4b1, label %dec_label_pc_a4a0, label %dec_label_pc_a4b3

dec_label_pc_a4b3:                                ; preds = %dec_label_pc_a4a9
  %v0_a4b3 = load i32, i32* @edi, align 4
  %v1_a4b3 = add i32 %v0_a4b3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a4b3 = inttoptr i32 %v1_a4b3 to i32*
  %v3_a4b3 = load i32, i32* %v2_a4b3, align 4
  store i32 %v3_a4b3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a4b6

dec_label_pc_a4b6:                                ; preds = %dec_label_pc_a48b.dec_label_pc_a4b6_crit_edge, %dec_label_pc_a4b3
  %v1_a4b8 = phi i32 [ %v0_a4b3, %dec_label_pc_a4b3 ], [ %v1_a4b8.pre, %dec_label_pc_a48b.dec_label_pc_a4b6_crit_edge ]
  %v0_a4b6 = phi i32 [ %v3_a4b3, %dec_label_pc_a4b3 ], [ %v0_a493, %dec_label_pc_a48b.dec_label_pc_a4b6_crit_edge ]
  %v2_a4b6 = add i32 %v0_a4b6, %v2_a473
  %v2_a4b8 = add i32 %v1_a4b8, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_a4b8 = inttoptr i32 %v2_a4b8 to i32*
  store i32 %v2_a4b6, i32* %v3_a4b8, align 4
  %v1_a4bf = load i32, i32* @esi, align 4
  %v2_a4bf = sub i32 %v2_a48d, %v1_a4bf
  %v12_a4bf = icmp eq i32 %v2_a4bf, 0
  store i32 %v2_a4bf, i32* @eax, align 4
  %v1_a4c1 = icmp eq i1 %v12_a4bf, false
  br i1 %v1_a4c1, label %bb33, label %dec_label_pc_a4c7

bb33:                                             ; preds = %dec_label_pc_a4b6
  %v2_a4c1 = call i32 @function_a6b8()
  store i32 %v2_a4c1, i32* @eax, align 4
  br label %dec_label_pc_a4c7

dec_label_pc_a4c7:                                ; preds = %bb33, %dec_label_pc_a4b6
  %v0_a4e815 = phi i32 [ %v2_a4c1, %bb33 ], [ %v2_a4bf, %dec_label_pc_a4b6 ]
  %v1_a4c9 = icmp eq i1 %v12_a473, false
  br i1 %v1_a4c9, label %bb34, label %dec_label_pc_a4d0

bb34:                                             ; preds = %dec_label_pc_a4c7
  %v2_a4c9 = call i32 @function_a6a0()
  store i32 %v2_a4c9, i32* @eax, align 4
  br label %dec_label_pc_a4d0

dec_label_pc_a4d0:                                ; preds = %dec_label_pc_a4c7, %bb34, %dec_label_pc_a440
  %v0_a4e814 = phi i32 [ %v0_a4e815, %dec_label_pc_a4c7 ], [ %v2_a4c9, %bb34 ], [ 0, %dec_label_pc_a440 ]
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %edx.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb35, label %dec_label_pc_a4e1

bb35:                                             ; preds = %dec_label_pc_a4d0
  %v2_a4db = call i32 @function_a6cf()
  store i32 %v2_a4db, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a4e1

dec_label_pc_a4e1:                                ; preds = %bb35, %dec_label_pc_a4d0
  %v0_a4e8 = phi i32 [ %v2_a4db, %bb35 ], [ %v0_a4e814, %dec_label_pc_a4d0 ]
  ret i32 %v0_a4e8

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a46b
  %v2_a4f0 = load i32, i32* %arg1, align 4
  %v2_a4f2 = sub i32 %v3_a46b, %v2_a4f0
  store i32 %v2_a4f2, i32* %ecx.global-to-local, align 4
  %v1_a4fa = sub i32 -1, %v2_a4f2
  store i32 %v1_a4fa, i32* @eax, align 4
  %tmp40 = icmp ugt i32 %v2_a473, %v1_a4fa
  br i1 %tmp40, label %bb37, label %dec_label_pc_a504

bb37:                                             ; preds = %dec_label_pc_a4f0
  %v6_a4fe = call i32 @function_a6d4(i32 %arg3, i32 %v2_a4f0)
  store i32 %v6_a4fe, i32* @eax, align 4
  %v1_a504.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_a504

dec_label_pc_a504:                                ; preds = %dec_label_pc_a4f0, %bb37
  %v3_a51d3 = phi i32 [ %v1_a4fa, %dec_label_pc_a4f0 ], [ %v6_a4fe, %bb37 ]
  %v2_a506 = phi i32 [ %v2_a4f2, %dec_label_pc_a4f0 ], [ %v1_a504.pre, %bb37 ]
  %v7_a504 = icmp ult i32 %v2_a473, %v2_a506
  %v3_a506 = select i1 %v7_a504, i32 %v2_a506, i32 %v2_a473
  %v2_a509 = add i32 %v3_a506, %v2_a506
  %v7_a509 = icmp ult i32 %v2_a509, %v2_a506
  store i32 %v2_a509, i32* @ecx, align 4
  %v1_a513 = icmp eq i1 %v7_a509, false
  br i1 %v1_a513, label %bb38, label %dec_label_pc_a519

bb38:                                             ; preds = %dec_label_pc_a504
  %v3_a513 = call i32 @function_a5e0(i32 -1)
  store i32 %v3_a513, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a519

dec_label_pc_a519:                                ; preds = %bb38, %dec_label_pc_a504
  %v3_a51d = phi i32 [ %v3_a513, %bb38 ], [ %v3_a51d3, %dec_label_pc_a504 ]
  store i32 -1, i32* %edx.global-to-local, align 4
  ret i32 %v3_a51d

; uselistorder directives
  uselistorder i32 %v2_a506, { 2, 0, 1, 3 }
  uselistorder i32 %v1_a4fa, { 2, 0, 1 }
  uselistorder i32 %v2_a4f2, { 1, 0, 2 }
  uselistorder i32 %v1_a4ac, { 1, 0 }
  uselistorder i32 %v1_a4a9, { 0, 2, 1 }
  uselistorder i32 %v2_a48d, { 2, 0, 1 }
  uselistorder i32 %v0_a493, { 0, 2, 1, 3, 4 }
  uselistorder i1 %v12_a473, { 1, 0 }
  uselistorder i32 %v2_a473, { 3, 4, 0, 2, 5, 6, 1, 7, 8 }
  uselistorder i32 %v3_a46b, { 2, 0, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a504, { 1, 0 }
  uselistorder label %dec_label_pc_a4d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a4b6, { 1, 0 }
}

define i32 @function_a52f(i32 %arg1) local_unnamed_addr {
dec_label_pc_a52f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v4_a52f = load i32, i32* @esi, align 4
  %v15_a52f = icmp eq i32 %tmp24, %v4_a52f
  store i32 %arg1, i32* %ebp.global-to-local, align 4
  br i1 %v15_a52f, label %dec_label_pc_a55d, label %dec_label_pc_a539

dec_label_pc_a539:                                ; preds = %dec_label_pc_a52f
  store i32 %arg1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a540

dec_label_pc_a540:                                ; preds = %dec_label_pc_a549, %dec_label_pc_a539
  %v1_a54f5 = phi i32 [ %v0_a553, %dec_label_pc_a549 ], [ %v4_a52f, %dec_label_pc_a539 ]
  %v0_a544 = phi i32 [ %v1_a549, %dec_label_pc_a549 ], [ %tmp24, %dec_label_pc_a539 ]
  %v2_a547 = phi i32 [ %v1_a54c, %dec_label_pc_a549 ], [ %arg1, %dec_label_pc_a539 ]
  %v1_a540 = icmp eq i32 %v2_a547, 0
  br i1 %v1_a540, label %dec_label_pc_a549, label %dec_label_pc_a544

dec_label_pc_a544:                                ; preds = %dec_label_pc_a540
  %v1_a544 = inttoptr i32 %v0_a544 to i8*
  %v2_a544 = load i8, i8* %v1_a544, align 1
  %v3_a544 = zext i8 %v2_a544 to i32
  store i32 %v3_a544, i32* %ecx.global-to-local, align 4
  %v3_a547 = inttoptr i32 %v2_a547 to i8*
  store i8 %v2_a544, i8* %v3_a547, align 1
  %v0_a549.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_a54c.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_a54f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_a549

dec_label_pc_a549:                                ; preds = %dec_label_pc_a544, %dec_label_pc_a540
  %v0_a553 = phi i32 [ %v1_a54f.pre, %dec_label_pc_a544 ], [ %v1_a54f5, %dec_label_pc_a540 ]
  %v0_a54c = phi i32 [ %v0_a54c.pre, %dec_label_pc_a544 ], [ 0, %dec_label_pc_a540 ]
  %v0_a549 = phi i32 [ %v0_a549.pre, %dec_label_pc_a544 ], [ %v0_a544, %dec_label_pc_a540 ]
  %v1_a549 = add i32 %v0_a549, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a549, i32* %edx.global-to-local, align 4
  %v1_a54c = add i32 %v0_a54c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a54c, i32* %eax.global-to-local, align 4
  %v12_a54f = icmp eq i32 %v1_a549, %v0_a553
  %v1_a551 = icmp eq i1 %v12_a54f, false
  br i1 %v1_a551, label %dec_label_pc_a540, label %dec_label_pc_a553

dec_label_pc_a553:                                ; preds = %dec_label_pc_a549
  %v5_a555 = sub i32 %v0_a553, %tmp24
  %v5_a559 = add i32 %v5_a555, %arg1
  store i32 %v5_a559, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_a55d

dec_label_pc_a55d:                                ; preds = %dec_label_pc_a553, %dec_label_pc_a52f
  %v0_a561 = phi i32 [ %v5_a559, %dec_label_pc_a553 ], [ %arg1, %dec_label_pc_a52f ]
  store i32 %v0_a561, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_a568

dec_label_pc_a568:                                ; preds = %dec_label_pc_a571, %dec_label_pc_a55d
  %v0_a56c = phi i32 [ %v1_a571, %dec_label_pc_a571 ], [ %tmp22, %dec_label_pc_a55d ]
  %v2_a56f = phi i32 [ %v1_a574, %dec_label_pc_a571 ], [ %v0_a561, %dec_label_pc_a55d ]
  %v1_a568 = icmp eq i32 %v2_a56f, 0
  br i1 %v1_a568, label %dec_label_pc_a571, label %dec_label_pc_a56c

dec_label_pc_a56c:                                ; preds = %dec_label_pc_a568
  %v1_a56c = inttoptr i32 %v0_a56c to i8*
  %v2_a56c = load i8, i8* %v1_a56c, align 1
  %v3_a56c = zext i8 %v2_a56c to i32
  store i32 %v3_a56c, i32* %ecx.global-to-local, align 4
  %v3_a56f = inttoptr i32 %v2_a56f to i8*
  store i8 %v2_a56c, i8* %v3_a56f, align 1
  %v0_a571.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_a574.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_a571

dec_label_pc_a571:                                ; preds = %dec_label_pc_a56c, %dec_label_pc_a568
  %v0_a574 = phi i32 [ %v0_a574.pre, %dec_label_pc_a56c ], [ 0, %dec_label_pc_a568 ]
  %v0_a571 = phi i32 [ %v0_a571.pre, %dec_label_pc_a56c ], [ %v0_a56c, %dec_label_pc_a568 ]
  %v1_a571 = add i32 %v0_a571, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a571, i32* %eax.global-to-local, align 4
  %v1_a574 = add i32 %v0_a574, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a574, i32* %edx.global-to-local, align 4
  %v1_a577 = load i32, i32* @ebx, align 4
  %v12_a577 = icmp eq i32 %v1_a571, %v1_a577
  %v1_a579 = icmp eq i1 %v12_a577, false
  br i1 %v1_a579, label %dec_label_pc_a568, label %dec_label_pc_a57b

dec_label_pc_a57b:                                ; preds = %dec_label_pc_a571
  %v5_a57b = sub i32 %v1_a571, %tmp22
  store i32 %v5_a57b, i32* %eax.global-to-local, align 4
  %v0_a57f = load i32, i32* %ebp.global-to-local, align 4
  %v2_a57f = add i32 %v0_a57f, %v5_a57b
  store i32 %v2_a57f, i32* @ebp, align 4
  %v0_a581 = load i32, i32* @edi, align 4
  %v1_a581 = add i32 %v0_a581, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a581 = inttoptr i32 %v1_a581 to i32*
  %v3_a581 = load i32, i32* %v2_a581, align 4
  store i32 %v3_a581, i32* %eax.global-to-local, align 4
  %v1_a584 = load i32, i32* @esi, align 4
  %v12_a584 = icmp eq i32 %v3_a581, %v1_a584
  br i1 %v12_a584, label %dec_label_pc_a5a7, label %dec_label_pc_a588

dec_label_pc_a588:                                ; preds = %dec_label_pc_a57b
  store i32 %v1_a584, i32* %edx.global-to-local, align 4
  store i32 %v2_a57f, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_a590

dec_label_pc_a590:                                ; preds = %dec_label_pc_a599, %dec_label_pc_a588
  %v1_a59f16 = phi i32 [ %v1_a59f, %dec_label_pc_a599 ], [ %v3_a581, %dec_label_pc_a588 ]
  %v0_a594 = phi i32 [ %v1_a599, %dec_label_pc_a599 ], [ %v1_a584, %dec_label_pc_a588 ]
  %v2_a597 = phi i32 [ %v1_a59c, %dec_label_pc_a599 ], [ %v2_a57f, %dec_label_pc_a588 ]
  %v1_a590 = icmp eq i32 %v2_a597, 0
  br i1 %v1_a590, label %dec_label_pc_a599, label %dec_label_pc_a594

dec_label_pc_a594:                                ; preds = %dec_label_pc_a590
  %v1_a594 = inttoptr i32 %v0_a594 to i8*
  %v2_a594 = load i8, i8* %v1_a594, align 1
  %v3_a597 = inttoptr i32 %v2_a597 to i8*
  store i8 %v2_a594, i8* %v3_a597, align 1
  %v0_a599.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_a59c.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_a59f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a599

dec_label_pc_a599:                                ; preds = %dec_label_pc_a594, %dec_label_pc_a590
  %v1_a59f = phi i32 [ %v1_a59f.pre, %dec_label_pc_a594 ], [ %v1_a59f16, %dec_label_pc_a590 ]
  %v0_a59c = phi i32 [ %v0_a59c.pre, %dec_label_pc_a594 ], [ 0, %dec_label_pc_a590 ]
  %v0_a599 = phi i32 [ %v0_a599.pre, %dec_label_pc_a594 ], [ %v0_a594, %dec_label_pc_a590 ]
  %v1_a599 = add i32 %v0_a599, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a599, i32* %edx.global-to-local, align 4
  %v1_a59c = add i32 %v0_a59c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a59c, i32* %ecx.global-to-local, align 4
  %v12_a59f = icmp eq i32 %v1_a599, %v1_a59f
  %v1_a5a1 = icmp eq i1 %v12_a59f, false
  br i1 %v1_a5a1, label %dec_label_pc_a590, label %dec_label_pc_a5a3

dec_label_pc_a5a3:                                ; preds = %dec_label_pc_a599
  %v1_a5a3 = load i32, i32* @esi, align 4
  %v2_a5a3 = sub i32 %v1_a599, %v1_a5a3
  store i32 %v2_a5a3, i32* %edx.global-to-local, align 4
  %v0_a5a5 = load i32, i32* @ebp, align 4
  %v2_a5a5 = add i32 %v0_a5a5, %v2_a5a3
  store i32 %v2_a5a5, i32* @ebp, align 4
  %v2_a5a7.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_a5a7

dec_label_pc_a5a7:                                ; preds = %dec_label_pc_a5a3, %dec_label_pc_a57b
  %v2_a5a7 = phi i32 [ %v2_a5a7.pre, %dec_label_pc_a5a3 ], [ %v0_a581, %dec_label_pc_a57b ]
  %v1_a5a9 = add i32 %v2_a5a7, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_a5a9 = inttoptr i32 %v1_a5a9 to i32*
  %v3_a5a9 = load i32, i32* %v2_a5a9, align 4
  store i32 %v3_a5a9, i32* %eax.global-to-local, align 4
  %v1_a5ac = icmp eq i32 %v2_a5a7, 0
  br i1 %v1_a5ac, label %bb, label %dec_label_pc_a5b0

bb:                                               ; preds = %dec_label_pc_a5a7
  %v1_a5ae = call i32 @function_a5c6()
  store i32 %v1_a5ae, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a5b0

dec_label_pc_a5b0:                                ; preds = %bb, %dec_label_pc_a5a7
  %v0_a5b0 = phi i32 [ %v1_a5ae, %bb ], [ %v3_a5a9, %dec_label_pc_a5a7 ]
  %v2_a5b0 = sub i32 %v0_a5b0, %v2_a5a7
  store i32 %v2_a5b0, i32* %eax.global-to-local, align 4
  ret i32 %v2_a5b0

; uselistorder directives
  uselistorder i32 %v2_a5a7, { 2, 1, 0 }
  uselistorder i32 %v1_a59c, { 1, 0 }
  uselistorder i32 %v1_a599, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a584, { 1, 2, 0 }
  uselistorder i32 %v3_a581, { 1, 0, 2 }
  uselistorder i32 %v1_a574, { 1, 0 }
  uselistorder i32 %v1_a571, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a54c, { 1, 0 }
  uselistorder i32 %v1_a549, { 0, 2, 1 }
  uselistorder i32 %v0_a553, { 1, 0, 2 }
  uselistorder i32 %v4_a52f, { 1, 0 }
  uselistorder i32 %tmp24, { 2, 1, 0 }
  uselistorder i32 %tmp22, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4 }
}

define i32 @function_a5c6() local_unnamed_addr {
dec_label_pc_a5c6:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_a5ca = load i32, i32* @ebp, align 4
  %v1_a5ca = load i32, i32* @edi, align 4
  %v2_a5ca = add i32 %v1_a5ca, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_a5ca = inttoptr i32 %v2_a5ca to i32*
  store i32 %v0_a5ca, i32* %v3_a5ca, align 4
  %v0_a5cd = load i32, i32* %eax.global-to-local, align 4
  %v1_a5cd = load i32, i32* @edi, align 4
  %v2_a5cd = inttoptr i32 %v1_a5cd to i32*
  store i32 %v0_a5cd, i32* %v2_a5cd, align 4
  %v0_a5cf = load i32, i32* %eax.global-to-local, align 4
  %v5_a5cf = add i32 %v0_a5cf, %tmp
  store i32 %v5_a5cf, i32* %eax.global-to-local, align 4
  %v1_a5d3 = load i32, i32* @edi, align 4
  %v2_a5d3 = add i32 %v1_a5d3, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_a5d3 = inttoptr i32 %v2_a5d3 to i32*
  store i32 %v5_a5cf, i32* %v3_a5d3, align 4
  %v0_a5d6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a5d6
}

define i32 @function_a5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a5e0:
  %v0_a5e0 = load i32, i32* @ecx, align 4
  %v1_a5e0 = icmp eq i32 %v0_a5e0, 0
  %v1_a5e2 = icmp eq i1 %v1_a5e0, false
  br i1 %v1_a5e2, label %bb, label %dec_label_pc_a5e8

bb:                                               ; preds = %dec_label_pc_a5e0
  %v2_a5e2 = call i32 @function_a6e0()
  br label %dec_label_pc_a5e8

dec_label_pc_a5e8:                                ; preds = %bb, %dec_label_pc_a5e0
  %v1_a5f8 = call i32 @function_a52f(i32 0)
  ret i32 %v1_a5f8
}

define i32 @function_a600(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a600:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v0_a604 = load i32, i32* @ecx, align 4
  store i32 %v0_a604, i32* %eax.global-to-local, align 4
  %v5_a606 = add i32 %arg2, %arg1
  store i32 %v5_a606, i32* %edx.global-to-local, align 4
  %v0_a60a = load i32, i32* @ebx, align 4
  %v12_a60a = icmp eq i32 %v0_a60a, %v5_a606
  br i1 %v12_a60a, label %dec_label_pc_a600.dec_label_pc_a632_crit_edge, label %dec_label_pc_a618

dec_label_pc_a600.dec_label_pc_a632_crit_edge:    ; preds = %dec_label_pc_a600
  %v1_a63a.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_a632

dec_label_pc_a618:                                ; preds = %dec_label_pc_a600, %dec_label_pc_a621
  %v1_a6275 = phi i32 [ %v1_a627, %dec_label_pc_a621 ], [ %v0_a60a, %dec_label_pc_a600 ]
  %v0_a61c = phi i32 [ %v1_a621, %dec_label_pc_a621 ], [ %v5_a606, %dec_label_pc_a600 ]
  %v2_a61f = phi i32 [ %v1_a624, %dec_label_pc_a621 ], [ %v0_a604, %dec_label_pc_a600 ]
  %v1_a618 = icmp eq i32 %v2_a61f, 0
  br i1 %v1_a618, label %dec_label_pc_a621, label %dec_label_pc_a61c

dec_label_pc_a61c:                                ; preds = %dec_label_pc_a618
  %v1_a61c = inttoptr i32 %v0_a61c to i8*
  %v2_a61c = load i8, i8* %v1_a61c, align 1
  %v3_a61f = inttoptr i32 %v2_a61f to i8*
  store i8 %v2_a61c, i8* %v3_a61f, align 1
  %v0_a621.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_a624.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_a627.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a621

dec_label_pc_a621:                                ; preds = %dec_label_pc_a61c, %dec_label_pc_a618
  %v1_a627 = phi i32 [ %v1_a627.pre, %dec_label_pc_a61c ], [ %v1_a6275, %dec_label_pc_a618 ]
  %v0_a624 = phi i32 [ %v0_a624.pre, %dec_label_pc_a61c ], [ 0, %dec_label_pc_a618 ]
  %v0_a621 = phi i32 [ %v0_a621.pre, %dec_label_pc_a61c ], [ %v0_a61c, %dec_label_pc_a618 ]
  %v1_a621 = add i32 %v0_a621, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a621, i32* %edx.global-to-local, align 4
  %v1_a624 = add i32 %v0_a624, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a624, i32* %eax.global-to-local, align 4
  %v12_a627 = icmp eq i32 %v1_a621, %v1_a627
  %v1_a629 = icmp eq i1 %v12_a627, false
  br i1 %v1_a629, label %dec_label_pc_a618, label %dec_label_pc_a62b

dec_label_pc_a62b:                                ; preds = %dec_label_pc_a621
  store i32 %v0_a604, i32* @ecx, align 4
  %v0_a62f = load i32, i32* @edi, align 4
  %v1_a62f = add i32 %v0_a62f, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a62f = inttoptr i32 %v1_a62f to i32*
  %v3_a62f = load i32, i32* %v2_a62f, align 4
  store i32 %v3_a62f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a632

dec_label_pc_a632:                                ; preds = %dec_label_pc_a600.dec_label_pc_a632_crit_edge, %dec_label_pc_a62b
  %v1_a63a = phi i32 [ %v0_a62f, %dec_label_pc_a62b ], [ %v1_a63a.pre, %dec_label_pc_a600.dec_label_pc_a632_crit_edge ]
  %v1_a636 = phi i32 [ %v3_a62f, %dec_label_pc_a62b ], [ %v0_a604, %dec_label_pc_a600.dec_label_pc_a632_crit_edge ]
  %v0_a632 = load i32, i32* @ebp, align 4
  %v5_a632 = sub i32 %v0_a632, %arg1
  %v2_a636 = add i32 %v5_a632, %v1_a636
  store i32 %v2_a636, i32* %ebp.global-to-local, align 4
  %v1_a638 = load i32, i32* @esi, align 4
  %v12_a638 = icmp eq i32 %v0_a604, %v1_a638
  %v2_a63a = add i32 %v1_a63a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_a63a = inttoptr i32 %v2_a63a to i32*
  store i32 %v2_a636, i32* %v3_a63a, align 4
  br i1 %v12_a638, label %dec_label_pc_a632.dec_label_pc_a65f_crit_edge, label %dec_label_pc_a63f

dec_label_pc_a632.dec_label_pc_a65f_crit_edge:    ; preds = %dec_label_pc_a632
  %v0_a663.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_a66b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_a65f

dec_label_pc_a63f:                                ; preds = %dec_label_pc_a632
  %v0_a63f = load i32, i32* @esi, align 4
  store i32 %v0_a63f, i32* %eax.global-to-local, align 4
  %v0_a648.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_a648

dec_label_pc_a648:                                ; preds = %dec_label_pc_a652, %dec_label_pc_a63f
  %v0_a64c = phi i32 [ %v1_a652, %dec_label_pc_a652 ], [ %v0_a63f, %dec_label_pc_a63f ]
  %v2_a64f = phi i32 [ %v1_a655, %dec_label_pc_a652 ], [ %v0_a648.pre, %dec_label_pc_a63f ]
  %v1_a648 = icmp eq i32 %v2_a64f, 0
  br i1 %v1_a648, label %dec_label_pc_a652, label %dec_label_pc_a64c

dec_label_pc_a64c:                                ; preds = %dec_label_pc_a648
  %v1_a64c = inttoptr i32 %v0_a64c to i8*
  %v2_a64c = load i8, i8* %v1_a64c, align 1
  %v3_a64c = zext i8 %v2_a64c to i32
  store i32 %v3_a64c, i32* %edx.global-to-local, align 4
  %v3_a64f = inttoptr i32 %v2_a64f to i8*
  store i8 %v2_a64c, i8* %v3_a64f, align 1
  %v0_a652.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_a655.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_a652

dec_label_pc_a652:                                ; preds = %dec_label_pc_a64c, %dec_label_pc_a648
  %v0_a655 = phi i32 [ %v0_a655.pre, %dec_label_pc_a64c ], [ 0, %dec_label_pc_a648 ]
  %v0_a652 = phi i32 [ %v0_a652.pre, %dec_label_pc_a64c ], [ %v0_a64c, %dec_label_pc_a648 ]
  %v1_a652 = add i32 %v0_a652, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a652, i32* %eax.global-to-local, align 4
  %v1_a655 = add i32 %v0_a655, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a655, i32* %ebp.global-to-local, align 4
  %v1_a658 = load i32, i32* @ecx, align 4
  %v12_a658 = icmp eq i32 %v1_a652, %v1_a658
  %v1_a65a = icmp eq i1 %v12_a658, false
  br i1 %v1_a65a, label %dec_label_pc_a648, label %dec_label_pc_a65c

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a652
  %v0_a65c = load i32, i32* @edi, align 4
  %v1_a65c = add i32 %v0_a65c, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a65c = inttoptr i32 %v1_a65c to i32*
  %v3_a65c = load i32, i32* %v2_a65c, align 4
  store i32 %v3_a65c, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_a65f

dec_label_pc_a65f:                                ; preds = %dec_label_pc_a632.dec_label_pc_a65f_crit_edge, %dec_label_pc_a65c
  %v1_a66b = phi i32 [ %v1_a66b.pre, %dec_label_pc_a632.dec_label_pc_a65f_crit_edge ], [ %v0_a65c, %dec_label_pc_a65c ]
  %v0_a663 = phi i32 [ %v0_a663.pre, %dec_label_pc_a632.dec_label_pc_a65f_crit_edge ], [ %v3_a65c, %dec_label_pc_a65c ]
  %v5_a663 = add i32 %v0_a663, %arg1
  store i32 %v5_a663, i32* %ebp.global-to-local, align 4
  store i32 %arg1, i32* @eax, align 4
  %v2_a66b = add i32 %v1_a66b, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_a66b = inttoptr i32 %v2_a66b to i32*
  store i32 %v5_a663, i32* %v3_a66b, align 4
  %v3_a678 = xor i32 %tmp24, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a678 = icmp eq i32 %v3_a678, 0
  store i32 %v3_a678, i32* %edx.global-to-local, align 4
  %v1_a67f = icmp eq i1 %v4_a678, false
  br i1 %v1_a67f, label %bb, label %dec_label_pc_a65f.dec_label_pc_a681_crit_edge

dec_label_pc_a65f.dec_label_pc_a681_crit_edge:    ; preds = %dec_label_pc_a65f
  %v5_a697.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_a681

bb:                                               ; preds = %dec_label_pc_a65f
  %v2_a67f = call i32 @function_a6cf()
  store i32 %v2_a67f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a681

dec_label_pc_a681:                                ; preds = %dec_label_pc_a65f.dec_label_pc_a681_crit_edge, %bb
  %v5_a697 = phi i32 [ %v5_a697.pre, %dec_label_pc_a65f.dec_label_pc_a681_crit_edge ], [ %v2_a67f, %bb ]
  store i32 %arg2, i32* %edx.global-to-local, align 4
  ret i32 %v5_a697

; uselistorder directives
  uselistorder i32 %v1_a655, { 1, 0 }
  uselistorder i32 %v1_a652, { 0, 2, 1 }
  uselistorder i32 %v1_a624, { 1, 0 }
  uselistorder i32 %v1_a621, { 0, 2, 1 }
  uselistorder i32 %v0_a60a, { 1, 0 }
  uselistorder i32 %v5_a606, { 1, 0, 2 }
  uselistorder i32 %v0_a604, { 0, 2, 3, 1, 4 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 5, 3, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_a681, { 1, 0 }
  uselistorder label %dec_label_pc_a65f, { 1, 0 }
  uselistorder label %dec_label_pc_a632, { 1, 0 }
  uselistorder label %dec_label_pc_a618, { 1, 0 }
}

define i32 @function_a6a0() local_unnamed_addr {
dec_label_pc_a6a0:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v4_a6a4 = icmp eq i32 %tmp2, ptrtoint ([2 x i8]* @2 to i32)
  %v1_a6ab = icmp eq i1 %v4_a6a4, false
  br i1 %v1_a6ab, label %bb, label %dec_label_pc_a6a0.dec_label_pc_a6ad_crit_edge

dec_label_pc_a6a0.dec_label_pc_a6ad_crit_edge:    ; preds = %dec_label_pc_a6a0
  %v0_a6b1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_a6ad

bb:                                               ; preds = %dec_label_pc_a6a0
  %v2_a6ab = call i32 @function_a6cf()
  br label %dec_label_pc_a6ad

dec_label_pc_a6ad:                                ; preds = %dec_label_pc_a6a0.dec_label_pc_a6ad_crit_edge, %bb
  %v0_a6b1 = phi i32 [ %v0_a6b1.pre, %dec_label_pc_a6a0.dec_label_pc_a6ad_crit_edge ], [ %v2_a6ab, %bb ]
  ret i32 %v0_a6b1

; uselistorder directives
  uselistorder i32 ()* @function_a6cf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a6ad, { 1, 0 }
}

define i32 @function_a6b8() local_unnamed_addr {
dec_label_pc_a6b8:
  %v1_a6b8 = load i32, i32* @eax, align 4
  ret i32 %v1_a6b8
}

define i32 @function_a6ca() local_unnamed_addr {
dec_label_pc_a6ca:
  %eax.global-to-local = alloca i32, align 4
  %v0_a6ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_a6ca
}

define i32 @function_a6cf() local_unnamed_addr {
dec_label_pc_a6cf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_a6d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_a6d4:
  %v3_a6d4 = load i32, i32* @eax, align 4
  ret i32 %v3_a6d4
}

define i32 @function_a6e0() local_unnamed_addr {
dec_label_pc_a6e0:
  %v0_a6e4 = load i32, i32* @eax, align 4
  ret i32 %v0_a6e4
}

define i32 @_ZN5CNode12BeginMessageEPKc() local_unnamed_addr {
dec_label_pc_a6f0:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %v1_a717 = add i32 %tmp12, 96
  store i32 %v1_a717, i32* @eax, align 4
  %v1_a721 = call i32 @function_14310(i32 %v1_a717)
  %v0_a726 = load i32, i32* @ebx, align 4
  %v1_a726 = add i32 %v0_a726, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_a726 = inttoptr i32 %v1_a726 to i32*
  %v3_a726 = load i32, i32* %v2_a726, align 4
  %v2_a729 = add i32 %v0_a726, 12
  %v3_a729 = inttoptr i32 %v2_a729 to i32*
  %v4_a729 = load i32, i32* %v3_a729, align 4
  %v5_a729 = sub i32 %v3_a726, %v4_a729
  store i32 %v5_a729, i32* @eax, align 4
  %v2_a72c = add i32 %v0_a726, 24
  %v3_a72c = inttoptr i32 %v2_a72c to i32*
  %v4_a72c = load i32, i32* %v3_a72c, align 4
  %v15_a72c = icmp eq i32 %v5_a729, %v4_a72c
  %v1_a72f = icmp eq i1 %v15_a72c, false
  br i1 %v1_a72f, label %bb, label %dec_label_pc_a735

bb:                                               ; preds = %dec_label_pc_a6f0
  %v2_a72f = call i32 @function_a81e()
  %v0_a745.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a735

dec_label_pc_a735:                                ; preds = %bb, %dec_label_pc_a6f0
  %v0_a745 = phi i32 [ %v0_a745.pre, %bb ], [ %v0_a726, %dec_label_pc_a6f0 ]
  %v1_a745 = add i32 %v0_a745, 12
  store i32 %v1_a745, i32* @esi, align 4
  ret i32 %tmp14
}

define i32 @function_a7fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a7fc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_a7fc = load i32, i32* %ebx.global-to-local, align 4
  %v1_a7fc = add i32 %v0_a7fc, 1699488836
  %v2_a7fc = inttoptr i32 %v1_a7fc to i32*
  %v3_a7fc = load i32, i32* %v2_a7fc, align 4
  %v4_a7fc = add i32 %v3_a7fc, -1
  store i32 %v4_a7fc, i32* %v2_a7fc, align 4
  %v0_a802 = load i32, i32* %eax.global-to-local, align 4
  %v3_a802 = xor i32 %v0_a802, ptrtoint ([2 x i8]* @2 to i32)
  %v4_a802 = icmp eq i32 %v3_a802, 0
  store i32 %v3_a802, i32* @eax, align 4
  %v1_a808 = icmp eq i1 %v4_a802, false
  br i1 %v1_a808, label %bb, label %dec_label_pc_a80a

bb:                                               ; preds = %dec_label_pc_a7fc
  %v2_a808 = call i32 @function_a842()
  store i32 %v2_a808, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a80a

dec_label_pc_a80a:                                ; preds = %bb, %dec_label_pc_a7fc
  %v0_a81d = phi i32 [ %v2_a808, %bb ], [ %v3_a802, %dec_label_pc_a7fc ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_a81d
}

define i32 @function_a81e() local_unnamed_addr {
dec_label_pc_a81e:
  %v3_a836 = load i32, i32* @eax, align 4
  ret i32 %v3_a836
}

define i32 @function_a842() local_unnamed_addr {
dec_label_pc_a842:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a850:
  store i32 %arg5, i32* @edx, align 4
  %v1_a87b = icmp eq i32 %arg3, 0
  store i32 %arg4, i32* @edi, align 4
  br i1 %v1_a87b, label %bb, label %dec_label_pc_a88f

bb:                                               ; preds = %dec_label_pc_a850
  %v3_a88d = call i32 @function_a900(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_a88f

dec_label_pc_a88f:                                ; preds = %bb, %dec_label_pc_a850
  %v3_a897 = phi i32 [ %v3_a88d, %bb ], [ %arg3, %dec_label_pc_a850 ]
  ret i32 %v3_a897
}

define i32 @function_a8cc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a8cc:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_a8cc = load i32, i32* %ebx.global-to-local, align 4
  %v1_a8cc = add i32 %v0_a8cc, -2095307708
  %v2_a8cc = inttoptr i32 %v1_a8cc to i32*
  %v3_a8cc = load i32, i32* %v2_a8cc, align 4
  %v4_a8cc = sub i32 %v3_a8cc, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_a8cc, i32* %v2_a8cc, align 4
  %v0_a8d2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_a8d2 = add i32 %v0_a8d2, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_a8d2, i32* %ebx.global-to-local, align 4
  %v0_a8d3 = load i32, i32* %eax.global-to-local, align 4
  %v2_a8d3 = load i1, i1* %cf.global-to-local, align 1
  %v3_a8d3 = zext i1 %v2_a8d3 to i32
  %v4_a8d3 = add i32 %v0_a8d3, zext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32)
  %v5_a8d3 = add i32 %v4_a8d3, %v3_a8d3
  %v25_a8d3 = urem i32 %v5_a8d3, 256
  %v27_a8d3 = and i32 %v0_a8d3, -256
  %v28_a8d3 = or i32 %v25_a8d3, %v27_a8d3
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_a8d9 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_a8e0 = load i32, i32* %esi.global-to-local, align 4
  %v2_a8e0 = inttoptr i32 %v1_a8e0 to i32*
  store i32 %v28_a8d3, i32* %v2_a8e0, align 4
  %v0_a8e2 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_a8e2, i32* @eax, align 4
  %v1_a8e4 = icmp eq i1 %v4_a8d9, false
  br i1 %v1_a8e4, label %bb, label %dec_label_pc_a8e6

bb:                                               ; preds = %dec_label_pc_a8cc
  %v2_a8e4 = call i32 @function_a916()
  store i32 %v2_a8e4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_a8e6

dec_label_pc_a8e6:                                ; preds = %bb, %dec_label_pc_a8cc
  %v0_a8f9 = phi i32 [ %v2_a8e4, %bb ], [ %v0_a8e2, %dec_label_pc_a8cc ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_a8f6 = load i32, i32* @esp, align 4
  %v5_a8f6 = icmp ugt i32 %v0_a8f6, -77
  store i1 %v5_a8f6, i1* %cf.global-to-local, align 1
  ret i32 %v0_a8f9

; uselistorder directives
  uselistorder i32 %v0_a8d3, { 1, 0 }
}

define i32 @function_a900(i32 %arg1) local_unnamed_addr {
dec_label_pc_a900:
  %v0_a900 = load i32, i32* @edi, align 4
  %v1_a904 = add i32 %v0_a900, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_a904 = inttoptr i32 %v1_a904 to i32*
  %v3_a904 = load i32, i32* %v2_a904, align 4
  %v1_a90c = and i32 %v3_a904, and (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256)
  ret i32 %v1_a90c
}

define i32 @function_a916() local_unnamed_addr {
dec_label_pc_a916:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_a920:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp112 = call i32 @__decompiler_undefined_function_0()
  %tmp115 = ptrtoint i32* %arg1 to i32
  %v0_a920 = load i32, i32* %ebp.global-to-local, align 4
  %v0_a921 = load i32, i32* %edi.global-to-local, align 4
  %v0_a922 = load i32, i32* %esi.global-to-local, align 4
  %v0_a923 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %tmp115, i32* @ebx, align 4
  %v1_a93f = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_a93f = inttoptr i32 %v1_a93f to i32*
  %v3_a93f = load i32, i32* %v2_a93f, align 4
  store i32 %v3_a93f, i32* @esi, align 4
  %v1_a946 = icmp eq i32 %v3_a93f, 0
  br i1 %v1_a946, label %dec_label_pc_a9a7, label %dec_label_pc_a94a

dec_label_pc_a94a:                                ; preds = %dec_label_pc_a920
  %v1_a94e = inttoptr i32 %arg3 to i32*
  %v2_a94e = load i32, i32* %v1_a94e, align 4
  br label %dec_label_pc_a966

dec_label_pc_a958:                                ; preds = %dec_label_pc_a966
  %v1_a958 = add i32 %v0_a97c, 8
  %v2_a958 = inttoptr i32 %v1_a958 to i32*
  %v3_a958 = load i32, i32* %v2_a958, align 4
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %ebp.global-to-local, align 4
  %v1_a960 = icmp eq i32 %v3_a958, 0
  br i1 %v1_a960, label %dec_label_pc_a976, label %dec_label_pc_a964

dec_label_pc_a964:                                ; preds = %dec_label_pc_a958, %dec_label_pc_a96d
  %v0_a964 = phi i32 [ %v3_a958, %dec_label_pc_a958 ], [ %v3_a96d, %dec_label_pc_a96d ]
  store i32 %v0_a964, i32* @esi, align 4
  br label %dec_label_pc_a966

dec_label_pc_a966:                                ; preds = %dec_label_pc_a964, %dec_label_pc_a94a
  %v0_a97c = phi i32 [ %v0_a964, %dec_label_pc_a964 ], [ %v3_a93f, %dec_label_pc_a94a ]
  %v1_a966 = add i32 %v0_a97c, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_a966 = inttoptr i32 %v1_a966 to i32*
  %v3_a966 = load i32, i32* %v2_a966, align 4
  %v8_a96b = icmp sgt i32 %v3_a966, %v2_a94e
  br i1 %v8_a96b, label %dec_label_pc_a958, label %dec_label_pc_a96d

dec_label_pc_a96d:                                ; preds = %dec_label_pc_a966
  %v1_a96d = add i32 %v0_a97c, 12
  %v2_a96d = inttoptr i32 %v1_a96d to i32*
  %v3_a96d = load i32, i32* %v2_a96d, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  %v1_a972 = icmp eq i32 %v3_a96d, 0
  %v1_a974 = icmp eq i1 %v1_a972, false
  br i1 %v1_a974, label %dec_label_pc_a964, label %dec_label_pc_a976

dec_label_pc_a976:                                ; preds = %dec_label_pc_a958, %dec_label_pc_a96d
  %v0_a97a = phi i8 [ ptrtoint (i8** @global_var_1.820 to i8), %dec_label_pc_a958 ], [ 0, %dec_label_pc_a96d ]
  %v5_a97e = icmp eq i8 %v0_a97a, 0
  %v1_a980 = icmp eq i1 %v5_a97e, false
  br i1 %v1_a980, label %dec_label_pc_a9b0, label %dec_label_pc_a982

dec_label_pc_a982:                                ; preds = %dec_label_pc_a976
  %v5_a986 = icmp slt i32 %v3_a966, %v2_a94e
  br i1 %v5_a986, label %bb, label %dec_label_pc_a988

bb:                                               ; preds = %dec_label_pc_a982
  %v7_a986 = call i32 @function_a9d0(i32 %v3_a966)
  %v1_a988.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_a988

dec_label_pc_a988:                                ; preds = %bb, %dec_label_pc_a982
  %v1_a988 = phi i32 [ %v1_a988.pre, %bb ], [ %tmp115, %dec_label_pc_a982 ]
  %v0_a988 = phi i32 [ %v7_a986, %bb ], [ %v0_a97c, %dec_label_pc_a982 ]
  %v2_a988 = inttoptr i32 %v1_a988 to i32*
  store i32 %v0_a988, i32* %v2_a988, align 4
  %v0_a98a = load i32, i32* @ebx, align 4
  %v1_a98a = add i32 %v0_a98a, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a98a = inttoptr i32 %v1_a98a to i8*
  store i8 0, i8* %v2_a98a, align 1
  %v0_a999 = load i32, i32* @ebx, align 4
  store i32 %v0_a999, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb130, label %dec_label_pc_a99d

bb130:                                            ; preds = %dec_label_pc_a988
  %v2_a99b = call i32 @function_aa03()
  br label %dec_label_pc_a99d

dec_label_pc_a99d:                                ; preds = %bb130, %dec_label_pc_a988
  %v0_a9a4 = phi i32 [ %v2_a99b, %bb130 ], [ %v0_a999, %dec_label_pc_a988 ]
  store i32 %v0_a923, i32* %ebx.global-to-local, align 4
  store i32 %v0_a922, i32* %esi.global-to-local, align 4
  store i32 %v0_a921, i32* %edi.global-to-local, align 4
  store i32 %v0_a920, i32* %ebp.global-to-local, align 4
  ret i32 %v0_a9a4

dec_label_pc_a9a7:                                ; preds = %dec_label_pc_a920
  %v1_a9a7 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_a9a7, i32* @esi, align 4
  br label %dec_label_pc_a9b0

dec_label_pc_a9b0:                                ; preds = %dec_label_pc_a9a7, %dec_label_pc_a976
  %v0_a9b0 = phi i32 [ %v1_a9a7, %dec_label_pc_a9a7 ], [ %v0_a97c, %dec_label_pc_a976 ]
  %v4_a9b515 = phi i32 [ 0, %dec_label_pc_a9a7 ], [ %v0_a97c, %dec_label_pc_a976 ]
  %stack_var_-56.0 = phi i32 [ %tmp112, %dec_label_pc_a9a7 ], [ %v3_a966, %dec_label_pc_a976 ]
  %v2_a9b0 = add i32 %arg2, 12
  %v3_a9b0 = inttoptr i32 %v2_a9b0 to i32*
  %v4_a9b0 = load i32, i32* %v3_a9b0, align 4
  %v15_a9b0 = icmp eq i32 %v0_a9b0, %v4_a9b0
  br i1 %v15_a9b0, label %bb132, label %dec_label_pc_a9b5

bb132:                                            ; preds = %dec_label_pc_a9b0
  %v2_a9b3 = call i32 @function_a9d0(i32 %stack_var_-56.0)
  br label %dec_label_pc_a9b5

dec_label_pc_a9b5:                                ; preds = %bb132, %dec_label_pc_a9b0
  %v4_a9b5 = phi i32 [ %v2_a9b3, %bb132 ], [ %v4_a9b515, %dec_label_pc_a9b0 ]
  ret i32 %v4_a9b5

; uselistorder directives
  uselistorder i32 %v3_a96d, { 1, 0 }
  uselistorder i32 %v3_a966, { 0, 2, 1, 3 }
  uselistorder i32 %v0_a97c, { 0, 1, 2, 4, 5, 3 }
  uselistorder i32 %v0_a964, { 1, 0 }
  uselistorder i32 %v2_a94e, { 1, 0 }
  uselistorder i32* %ebp.global-to-local, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_a9d0, { 1, 0 }
  uselistorder label %dec_label_pc_a976, { 1, 0 }
  uselistorder label %dec_label_pc_a964, { 1, 0 }
}

define i32 @function_a9d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_a9d0:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_44 = alloca i32, align 4
  %v2_a9d4 = ptrtoint i32* %stack_var_44 to i32
  store i32 %v2_a9d4, i32* @eax, align 4
  %v0_a9db = load i32, i32* @esi, align 4
  %v0_a9eb = load i32, i32* @edi, align 4
  %v5_a9ef = call i32 @_ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE(i32 %v2_a9d4, i32 %v0_a9eb, i32 0, i32 %v0_a9db, i32 %arg1)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v0_a9fb = load i32, i32* @ebx, align 4
  %v1_a9fb = add i32 %v0_a9fb, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_a9fb = inttoptr i32 %v1_a9fb to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_a9fb, align 1
  %v0_a9ff = load i32, i32* %eax.global-to-local, align 4
  %v1_a9ff = load i32, i32* @ebx, align 4
  %v2_a9ff = inttoptr i32 %v1_a9ff to i32*
  store i32 %v0_a9ff, i32* %v2_a9ff, align 4
  %v0_aa01 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aa01
}

define i32 @function_aa03() local_unnamed_addr {
dec_label_pc_aa03:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt15_Deque_iteratorISt6vectorIc25zero_after_free_allocatorIcEERS3_PS3_EppEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_aa10:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_aa24 = load i32, i32* %arg1, align 4
  %v1_aa26 = add i32 %v2_aa24, 12
  store i32 %v1_aa26, i32* %edx.global-to-local, align 4
  %v2_aa29 = add i32 %tmp100, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_aa29 = inttoptr i32 %v2_aa29 to i32*
  %v4_aa29 = load i32, i32* %v3_aa29, align 4
  %v15_aa29 = icmp eq i32 %v1_aa26, %v4_aa29
  store i32 %v1_aa26, i32* %arg1, align 4
  br i1 %v15_aa29, label %dec_label_pc_aa48, label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_aa48, %dec_label_pc_aa10
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %edx.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_aa64, label %dec_label_pc_aa3d

dec_label_pc_aa3d:                                ; preds = %dec_label_pc_aa30
  %v0_aa40 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aa40

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa10
  %v0_aa48 = load i32, i32* %eax.global-to-local, align 4
  %v1_aa48 = add i32 %v0_aa48, 12
  %v2_aa48 = inttoptr i32 %v1_aa48 to i32*
  %v3_aa48 = load i32, i32* %v2_aa48, align 4
  store i32 %v3_aa48, i32* %edx.global-to-local, align 4
  %v1_aa4b = add i32 %v3_aa48, 4
  store i32 %v1_aa4b, i32* %ecx.global-to-local, align 4
  store i32 %v1_aa4b, i32* %v2_aa48, align 4
  %v0_aa51 = load i32, i32* %edx.global-to-local, align 4
  %v1_aa51 = add i32 %v0_aa51, 4
  %v2_aa51 = inttoptr i32 %v1_aa51 to i32*
  %v3_aa51 = load i32, i32* %v2_aa51, align 4
  store i32 %v3_aa51, i32* %edx.global-to-local, align 4
  %v1_aa54 = add i32 %v3_aa51, 504
  store i32 %v1_aa54, i32* %ecx.global-to-local, align 4
  %v1_aa5a = load i32, i32* %eax.global-to-local, align 4
  %v2_aa5a = add i32 %v1_aa5a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_aa5a = inttoptr i32 %v2_aa5a to i32*
  store i32 %v3_aa51, i32* %v3_aa5a, align 4
  %v0_aa5d = load i32, i32* %ecx.global-to-local, align 4
  %v1_aa5d = load i32, i32* %eax.global-to-local, align 4
  %v2_aa5d = add i32 %v1_aa5d, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_aa5d = inttoptr i32 %v2_aa5d to i32*
  store i32 %v0_aa5d, i32* %v3_aa5d, align 4
  %v0_aa60 = load i32, i32* %edx.global-to-local, align 4
  %v1_aa60 = load i32, i32* %eax.global-to-local, align 4
  %v2_aa60 = inttoptr i32 %v1_aa60 to i32*
  store i32 %v0_aa60, i32* %v2_aa60, align 4
  br label %dec_label_pc_aa30

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa30
  %v0_aa62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aa62

; uselistorder directives
  uselistorder i32 %v1_aa26, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 1, 6 }
}

define i32 @_ZNSt6vectorIc25zero_after_free_allocatorIcEEaSERKS2_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aa70:
  %tmp106 = ptrtoint i32* %arg1 to i32
  store i32 %tmp106, i32* @edi, align 4
  %v12_aa8b = icmp eq i32 %tmp106, %arg2
  br i1 %v12_aa8b, label %bb, label %dec_label_pc_aa8f

bb:                                               ; preds = %dec_label_pc_aa70
  %v3_aa8d = call i32 @function_ab0c(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_aa8f.pre = load i32, i32* @edi, align 4
  %v0_aa91.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_aa8f

dec_label_pc_aa8f:                                ; preds = %bb, %dec_label_pc_aa70
  %v0_aa91 = phi i32 [ %v0_aa91.pre, %bb ], [ %arg2, %dec_label_pc_aa70 ]
  %v0_aa9b = phi i32 [ %v0_aa8f.pre, %bb ], [ %tmp106, %dec_label_pc_aa70 ]
  %v1_aa8f = inttoptr i32 %v0_aa9b to i32*
  %v2_aa8f = load i32, i32* %v1_aa8f, align 4
  %v1_aa91 = add i32 %v0_aa91, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_aa91 = inttoptr i32 %v1_aa91 to i32*
  %v3_aa91 = load i32, i32* %v2_aa91, align 4
  store i32 %v3_aa91, i32* @esi, align 4
  %v1_aa94 = inttoptr i32 %v0_aa91 to i32*
  %v2_aa94 = load i32, i32* %v1_aa94, align 4
  store i32 %v2_aa94, i32* @ebx, align 4
  %v1_aa9b = add i32 %v0_aa9b, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_aa9b = inttoptr i32 %v1_aa9b to i32*
  %v3_aa9b = load i32, i32* %v2_aa9b, align 4
  %v5_aa9e = sub i32 %v3_aa9b, %v2_aa8f
  %v2_aaa4 = sub i32 %v3_aa91, %v2_aa94
  store i32 %v2_aaa4, i32* @edx, align 4
  %tmp113 = icmp ugt i32 %v2_aaa4, %v5_aa9e
  br i1 %tmp113, label %dec_label_pc_aaaa, label %bb112

bb112:                                            ; preds = %dec_label_pc_aa8f
  %v4_aaa8 = call i32 @function_ab28(i32 %v2_aa8f)
  br label %dec_label_pc_aaaa

dec_label_pc_aaaa:                                ; preds = %dec_label_pc_aa8f, %bb112
  %v4_aaad = phi i32 [ %v4_aaa8, %bb112 ], [ %v5_aa9e, %dec_label_pc_aa8f ]
  ret i32 %v4_aaad

; uselistorder directives
  uselistorder i32 %v5_aa9e, { 1, 0 }
  uselistorder i32 %v2_aa8f, { 1, 0 }
  uselistorder i32 %v0_aa91, { 1, 0 }
  uselistorder i32 %tmp106, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_aaaa, { 1, 0 }
}

define i32 @function_aad2() local_unnamed_addr {
dec_label_pc_aad2:
  %eax.global-to-local = alloca i32, align 4
  %v0_aad2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_aad2
}

define i32 @function_ab09() local_unnamed_addr {
dec_label_pc_ab09:
  %v0_ab09 = load i32, i32* @edx, align 4
  %v1_ab09 = load i32, i32* @edi, align 4
  %v2_ab09 = add i32 %v1_ab09, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_ab09 = inttoptr i32 %v2_ab09 to i32*
  store i32 %v0_ab09, i32* %v3_ab09, align 4
  %v4_ab09 = load i32, i32* @eax, align 4
  ret i32 %v4_ab09
}

define i32 @function_ab0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab0c:
  %v4_ab10 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_ab17 = load i32, i32* @edi, align 4
  store i32 %v0_ab17, i32* @eax, align 4
  %v1_ab19 = icmp eq i1 %v4_ab10, false
  br i1 %v1_ab19, label %bb, label %dec_label_pc_ab1f

bb:                                               ; preds = %dec_label_pc_ab0c
  %v2_ab19 = call i32 @function_abdf()
  br label %dec_label_pc_ab1f

dec_label_pc_ab1f:                                ; preds = %bb, %dec_label_pc_ab0c
  %v0_ab26 = phi i32 [ %v2_ab19, %bb ], [ %v0_ab17, %dec_label_pc_ab0c ]
  ret i32 %v0_ab26
}

define i32 @function_ab28(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab28:
  %ecx.global-to-local = alloca i32, align 4
  %v0_ab28 = load i32, i32* @edi, align 4
  %v1_ab28 = add i32 %v0_ab28, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ab28 = inttoptr i32 %v1_ab28 to i32*
  %v3_ab28 = load i32, i32* %v2_ab28, align 4
  store i32 %v3_ab28, i32* %ecx.global-to-local, align 4
  %v5_ab2d = sub i32 %v3_ab28, %arg1
  store i32 %v5_ab2d, i32* @eax, align 4
  %v0_ab31 = load i32, i32* @edx, align 4
  %tmp13 = icmp ugt i32 %v0_ab31, %v5_ab2d
  br i1 %tmp13, label %dec_label_pc_ab40, label %dec_label_pc_ab35

dec_label_pc_ab35:                                ; preds = %dec_label_pc_ab28
  %v1_ab35 = icmp eq i32 %v0_ab31, 0
  %v1_ab37 = icmp eq i1 %v1_ab35, false
  br i1 %v1_ab37, label %dec_label_pc_ab70, label %dec_label_pc_ab39

dec_label_pc_ab39:                                ; preds = %dec_label_pc_ab35
  store i32 %arg1, i32* @edx, align 4
  %v0_ab3d = call i32 @function_ab09()
  ret i32 %v0_ab3d

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab28
  %v15_ab2d = icmp eq i32 %v5_ab2d, 0
  %v1_ab40 = load i32, i32* @ebx, align 4
  %v2_ab40 = add i32 %v1_ab40, %v5_ab2d
  %v1_ab4c = icmp eq i1 %v15_ab2d, false
  br i1 %v1_ab4c, label %bb, label %dec_label_pc_ab4e

bb:                                               ; preds = %dec_label_pc_ab40
  %v3_ab4c = call i32 @function_ab98(i32 %v2_ab40)
  br label %dec_label_pc_ab4e

dec_label_pc_ab4e:                                ; preds = %bb, %dec_label_pc_ab40
  %v0_ab4e = load i32, i32* @esi, align 4
  %v15_ab4e = icmp eq i32 %v0_ab4e, %v2_ab40
  store i32 %v2_ab40, i32* @eax, align 4
  br i1 %v15_ab4e, label %bb12, label %dec_label_pc_ab58.preheader

bb12:                                             ; preds = %dec_label_pc_ab4e
  %v1_ab56 = call i32 @function_abd6()
  store i32 %v1_ab56, i32* @eax, align 4
  br label %dec_label_pc_ab58.preheader

dec_label_pc_ab58.preheader:                      ; preds = %dec_label_pc_ab4e, %bb12
  %v0_ab5c3 = phi i32 [ %v2_ab40, %dec_label_pc_ab4e ], [ %v1_ab56, %bb12 ]
  %v0_ab58.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_ab58

dec_label_pc_ab58:                                ; preds = %dec_label_pc_ab58.preheader, %dec_label_pc_ab61
  %v0_ab5c = phi i32 [ %v0_ab5c3, %dec_label_pc_ab58.preheader ], [ %v1_ab61, %dec_label_pc_ab61 ]
  %v2_ab5f = phi i32 [ %v0_ab58.pre, %dec_label_pc_ab58.preheader ], [ %v1_ab64, %dec_label_pc_ab61 ]
  %v1_ab58 = icmp eq i32 %v2_ab5f, 0
  br i1 %v1_ab58, label %dec_label_pc_ab61, label %dec_label_pc_ab5c

dec_label_pc_ab5c:                                ; preds = %dec_label_pc_ab58
  %v1_ab5c = inttoptr i32 %v0_ab5c to i8*
  %v2_ab5c = load i8, i8* %v1_ab5c, align 1
  %v3_ab5f = inttoptr i32 %v2_ab5f to i8*
  store i8 %v2_ab5c, i8* %v3_ab5f, align 1
  %v0_ab61.pre = load i32, i32* @eax, align 4
  %v0_ab64.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_ab61

dec_label_pc_ab61:                                ; preds = %dec_label_pc_ab5c, %dec_label_pc_ab58
  %v0_ab64 = phi i32 [ %v0_ab64.pre, %dec_label_pc_ab5c ], [ 0, %dec_label_pc_ab58 ]
  %v0_ab61 = phi i32 [ %v0_ab61.pre, %dec_label_pc_ab5c ], [ %v0_ab5c, %dec_label_pc_ab58 ]
  %v1_ab61 = add i32 %v0_ab61, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_ab61, i32* @eax, align 4
  %v1_ab64 = add i32 %v0_ab64, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_ab64, i32* %ecx.global-to-local, align 4
  %v1_ab67 = load i32, i32* @esi, align 4
  %v12_ab67 = icmp eq i32 %v1_ab61, %v1_ab67
  %v1_ab69 = icmp eq i1 %v12_ab67, false
  br i1 %v1_ab69, label %dec_label_pc_ab58, label %dec_label_pc_ab6b

dec_label_pc_ab6b:                                ; preds = %dec_label_pc_ab61
  %v0_ab6b = load i32, i32* @edx, align 4
  %v3_ab6b = load i32, i32* @edi, align 4
  %v4_ab6b = add i32 %v3_ab6b, %v0_ab6b
  store i32 %v4_ab6b, i32* @edx, align 4
  %v0_ab6d = call i32 @function_ab09()
  ret i32 %v0_ab6d

dec_label_pc_ab70:                                ; preds = %dec_label_pc_ab35
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_ab64, { 1, 0 }
  uselistorder i32 %v1_ab61, { 0, 2, 1 }
  uselistorder i32 %v2_ab40, { 1, 2, 0, 3 }
  uselistorder i32 %v0_ab31, { 1, 0 }
  uselistorder i32 %v5_ab2d, { 1, 3, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ab58, { 1, 0 }
  uselistorder label %dec_label_pc_ab58.preheader, { 1, 0 }
}

define i32 @function_ab87(i16 %arg1) local_unnamed_addr {
dec_label_pc_ab87:
  %ebx.global-to-local = alloca i32, align 4
  %v0_ab87 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ab87 = add i32 %v0_ab87, 51651668
  %v2_ab87 = inttoptr i32 %v1_ab87 to i32*
  %v3_ab87 = load i32, i32* %v2_ab87, align 4
  %v4_ab87 = add i32 %v3_ab87, -1
  store i32 %v4_ab87, i32* %v2_ab87, align 4
  %v0_ab8e = call i32 @function_ab09()
  ret i32 %v0_ab8e
}

define i32 @function_ab98(i32 %arg1) local_unnamed_addr {
dec_label_pc_ab98:
  ret i32 %arg1
}

define i32 @function_abaf(i32 %arg1) local_unnamed_addr {
dec_label_pc_abaf:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_abaf = load i32, i32* %ebx.global-to-local, align 4
  %v1_abaf = add i32 %v0_abaf, 72321799
  %v2_abaf = inttoptr i32 %v1_abaf to i32*
  %v3_abaf = load i32, i32* %v2_abaf, align 4
  %v4_abaf = add i32 %v3_abaf, -1
  store i32 %v4_abaf, i32* %v2_abaf, align 4
  %v0_abb5 = load i32, i32* %ebp.global-to-local, align 4
  ret i32 %v0_abb5
}

define i32 @function_abd6() local_unnamed_addr {
dec_label_pc_abd6:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_abd6 = load i32, i32* @edx, align 4
  %v5_abd6 = add i32 %v0_abd6, %tmp
  store i32 %v5_abd6, i32* @edx, align 4
  %v0_abda = call i32 @function_ab09()
  ret i32 %v0_abda

; uselistorder directives
  uselistorder i32 ()* @function_ab09, { 2, 3, 1, 0 }
}

define i32 @function_abdf() local_unnamed_addr {
dec_label_pc_abdf:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_abf0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_abf0 = load i32, i32* %edi.global-to-local, align 4
  %v0_abf1 = load i32, i32* %esi.global-to-local, align 4
  %v0_abf2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_ac0a = icmp eq i32 %arg2, 0
  %v1_ac0c = icmp eq i1 %v1_ac0a, false
  br i1 %v1_ac0c, label %dec_label_pc_ac1a, label %dec_label_pc_ac0e

dec_label_pc_ac0e:                                ; preds = %dec_label_pc_abf0
  %v5_ac0e = call i32 @function_acae(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_abf2, i32 %v0_abf1, i32 %v0_abf0)
  ret i32 %v5_ac0e

dec_label_pc_ac1a:                                ; preds = %dec_label_pc_abf0
  %v1_ac1a = add i32 %arg2, 12
  %v2_ac1a = inttoptr i32 %v1_ac1a to i32*
  %v3_ac1a = load i32, i32* %v2_ac1a, align 4
  %v2_ac24 = call i32 @unknown_157e0(i32 %arg1, i32 %v3_ac1a)
  %v1_ac29 = add i32 %arg2, 160
  %v2_ac29 = inttoptr i32 %v1_ac29 to i32*
  %v3_ac29 = load i32, i32* %v2_ac29, align 4
  %v1_ac2f = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ac2f = inttoptr i32 %v1_ac2f to i32*
  %v3_ac2f = load i32, i32* %v2_ac2f, align 4
  store i32 %v3_ac2f, i32* %esi.global-to-local, align 4
  %v1_ac32 = icmp eq i32 %v3_ac29, 0
  br i1 %v1_ac32, label %bb, label %dec_label_pc_ac36

bb:                                               ; preds = %dec_label_pc_ac1a
  %v1_ac34 = call i32 @function_ac3e()
  br label %dec_label_pc_ac36

dec_label_pc_ac36:                                ; preds = %bb, %dec_label_pc_ac1a
  %v0_ac36 = phi i32 [ %v1_ac34, %bb ], [ %v3_ac29, %dec_label_pc_ac1a ]
  ret i32 %v0_ac36

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_ac3e() local_unnamed_addr {
dec_label_pc_ac3e:
  %v0_ac3e = load i32, i32* @ebx, align 4
  %v1_ac3e = add i32 %v0_ac3e, ptrtoint (i32* @global_var_94.939 to i32)
  %v2_ac3e = inttoptr i32 %v1_ac3e to i32*
  %v3_ac3e = load i32, i32* %v2_ac3e, align 4
  %v1_ac44 = icmp eq i32 %v3_ac3e, 0
  br i1 %v1_ac44, label %bb, label %dec_label_pc_ac48

bb:                                               ; preds = %dec_label_pc_ac3e
  %v1_ac46 = call i32 @function_ac50()
  br label %dec_label_pc_ac48

dec_label_pc_ac48:                                ; preds = %bb, %dec_label_pc_ac3e
  %v3_ac48 = phi i32 [ %v1_ac46, %bb ], [ %v3_ac3e, %dec_label_pc_ac3e ]
  ret i32 %v3_ac48
}

define i32 @function_ac50() local_unnamed_addr {
dec_label_pc_ac50:
  %v0_ac50 = load i32, i32* @ebx, align 4
  %v1_ac50 = add i32 %v0_ac50, ptrtoint ([6 x i8]* @global_var_90.940 to i32)
  ret i32 %v1_ac50
}

define i32 @function_acae(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_acae:
  %v3_acb2 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_acb2 = icmp eq i32 %v3_acb2, 0
  %v1_acb9 = icmp eq i1 %v4_acb2, false
  br i1 %v1_acb9, label %dec_label_pc_acc2, label %dec_label_pc_acbb

dec_label_pc_acbb:                                ; preds = %dec_label_pc_acae
  ret i32 %v3_acb2

dec_label_pc_acc2:                                ; preds = %dec_label_pc_acae
  ret i32 %v3_acb2

; uselistorder directives
  uselistorder i32 %v3_acb2, { 1, 0, 2 }
}

define i32 @_ZNSt3mapI7uint2566CAlertSt4lessIS0_ESaISt4pairIKS0_S1_EEED1Ev(i32 %arg1) local_unnamed_addr {
dec_label_pc_acd0:
  %v1_ace4 = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ace4 = inttoptr i32 %v1_ace4 to i32*
  %v3_ace4 = load i32, i32* %v2_ace4, align 4
  %v2_acee = call i32 @unknown_158c0(i32 %arg1, i32 %v3_ace4)
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_ad04, label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_acd0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_ad04:                                ; preds = %dec_label_pc_acd0
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_ZNKSt4lessI7uint256EclERKS0_S3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ad10:
  %stack_var_-92 = alloca i32, align 4
  %v16_ad10 = ptrtoint i32* %stack_var_-92 to i32
  %v3_ada0 = add i32 %v16_ad10, 44
  %v3_ada4 = add i32 %v16_ad10, 12
  br label %dec_label_pc_ada0

dec_label_pc_ada0:                                ; preds = %dec_label_pc_adac, %dec_label_pc_ad10
  %v0_adac = phi i32 [ %v1_adac, %dec_label_pc_adac ], [ 7, %dec_label_pc_ad10 ]
  %v2_ada0 = mul nuw nsw i32 %v0_adac, 4
  %v4_ada0 = add i32 %v3_ada0, %v2_ada0
  %v5_ada0 = inttoptr i32 %v4_ada0 to i32*
  %v6_ada0 = load i32, i32* %v5_ada0, align 4
  %v4_ada4 = add i32 %v3_ada4, %v2_ada0
  %v5_ada4 = inttoptr i32 %v4_ada4 to i32*
  %v6_ada4 = load i32, i32* %v5_ada4, align 4
  %v13_ada4 = icmp ult i32 %v6_ada4, %v6_ada0
  br i1 %v13_ada4, label %dec_label_pc_adb6, label %dec_label_pc_adaa

dec_label_pc_adaa:                                ; preds = %dec_label_pc_ada0
  %v18_ada4 = icmp eq i32 %v6_ada4, %v6_ada0
  br i1 %v18_ada4, label %dec_label_pc_adac, label %dec_label_pc_adb4

dec_label_pc_adac:                                ; preds = %dec_label_pc_adaa
  %v1_adac = add nsw i32 %v0_adac, -1
  %v5_adac = icmp eq i32 %v0_adac, 0
  %v1_adb2 = icmp eq i1 %v5_adac, false
  br i1 %v1_adb2, label %dec_label_pc_ada0, label %dec_label_pc_adb4

dec_label_pc_adb4:                                ; preds = %dec_label_pc_adaa, %dec_label_pc_adac
  br label %dec_label_pc_adb6

dec_label_pc_adb6:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_adb4
  %v0_adcd = phi i32 [ 0, %dec_label_pc_adb4 ], [ ptrtoint (i8** @global_var_1.820 to i32), %dec_label_pc_ada0 ]
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_adcf, label %dec_label_pc_adc3

dec_label_pc_adc3:                                ; preds = %dec_label_pc_adb6
  ret i32 %v0_adcd

dec_label_pc_adcf:                                ; preds = %dec_label_pc_adb6
  ret i32 %v0_adcd

; uselistorder directives
  uselistorder i32 %v0_adac, { 1, 0, 2 }
  uselistorder i32 %v16_ad10, { 1, 0 }
  uselistorder label %dec_label_pc_adb6, { 1, 0 }
  uselistorder label %dec_label_pc_adb4, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE10_M_insert_EPKSt18_Rb_tree_node_baseS9_RKS0_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ade0:
  store i32 %arg2, i32* @esi, align 4
  store i32 %arg5, i32* @ebx, align 4
  %v1_ae10 = icmp eq i32 %arg3, 0
  %v1_ae12 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_ae12, i32* @ecx, align 4
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_ae10, label %bb, label %dec_label_pc_ae27

bb:                                               ; preds = %dec_label_pc_ade0
  %v3_ae21 = call i32 @function_aec0(i32 %v1_ae12)
  br label %dec_label_pc_ae27

dec_label_pc_ae27:                                ; preds = %bb, %dec_label_pc_ade0
  %v2_ae2b = phi i32 [ %v3_ae21, %bb ], [ %arg3, %dec_label_pc_ade0 ]
  ret i32 %v2_ae2b
}

define i32 @function_ae8a(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ae8a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_ae8a = load i32, i32* %ebx.global-to-local, align 4
  %v1_ae8a = add i32 %v0_ae8a, -2095569852
  %v2_ae8a = inttoptr i32 %v1_ae8a to i32*
  %v3_ae8a = load i32, i32* %v2_ae8a, align 4
  %v4_ae8a = sub i32 %v3_ae8a, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_ae8a, i32* %v2_ae8a, align 4
  %v0_ae90 = load i32, i32* %esi.global-to-local, align 4
  %v1_ae90 = add i32 %v0_ae90, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_ae90, i32* %esi.global-to-local, align 4
  %v0_ae91 = load i32, i32* %eax.global-to-local, align 4
  %v2_ae91 = load i1, i1* %cf.global-to-local, align 1
  %v3_ae91 = zext i1 %v2_ae91 to i32
  %v4_ae91 = add i32 %v0_ae91, zext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32)
  %v5_ae91 = add i32 %v4_ae91, %v3_ae91
  %v25_ae91 = urem i32 %v5_ae91, 256
  %v27_ae91 = and i32 %v0_ae91, -256
  %v28_ae91 = or i32 %v25_ae91, %v27_ae91
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_ae97 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_ae9e = load i32, i32* %edi.global-to-local, align 4
  %v2_ae9e = inttoptr i32 %v1_ae9e to i32*
  store i32 %v28_ae91, i32* %v2_ae9e, align 4
  %v0_aea0 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_aea0, i32* @eax, align 4
  %v1_aea2 = icmp eq i1 %v4_ae97, false
  br i1 %v1_aea2, label %bb, label %dec_label_pc_aea4

bb:                                               ; preds = %dec_label_pc_ae8a
  %v2_aea2 = call i32 @function_aee3()
  store i32 %v2_aea2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_aea4

dec_label_pc_aea4:                                ; preds = %bb, %dec_label_pc_ae8a
  %v0_aeb7 = phi i32 [ %v2_aea2, %bb ], [ %v0_aea0, %dec_label_pc_ae8a ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_aeb4 = load i32, i32* @esp, align 4
  %v5_aeb4 = icmp ugt i32 %v0_aeb4, -77
  store i1 %v5_aeb4, i1* %cf.global-to-local, align 1
  ret i32 %v0_aeb7

; uselistorder directives
  uselistorder i32 %v0_ae91, { 1, 0 }
}

define i32 @function_aec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_aec0:
  %v0_aec0 = load i32, i32* @ebp, align 4
  %v1_aec8 = add i32 %v0_aec0, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v0_aecf = load i32, i32* @ebx, align 4
  %v0_aed3 = load i32, i32* @esi, align 4
  %v4_aed6 = call i32 @unknown_15af0(i32 %v0_aed3, i32 %v0_aecf, i32 %v1_aec8)
  ret i32 %v4_aed6
}

define i32 @function_aee3() local_unnamed_addr {
dec_label_pc_aee3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeI7uint256S0_St9_IdentityIS0_ESt4lessIS0_ESaIS0_EE16_M_insert_uniqueERKS0_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_aef0:
  %tmp74 = ptrtoint i32* %arg1 to i32
  %stack_var_-252 = alloca i8*, align 4
  %v0_aef1 = load i32, i32* @edi, align 4
  %v0_aef2 = load i32, i32* @esi, align 4
  %v16_aef4 = ptrtoint i8** %stack_var_-252 to i32
  %v1_af23 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_af23 = inttoptr i32 %v1_af23 to i32*
  %v3_af23 = load i32, i32* %v2_af23, align 4
  %v1_af2e = icmp eq i32 %v3_af23, 0
  br i1 %v1_af2e, label %dec_label_pc_b12d, label %dec_label_pc_af36

dec_label_pc_af36:                                ; preds = %dec_label_pc_aef0
  %v1_af3d = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_af3d = inttoptr i32 %v1_af3d to i32*
  %v3_af3d = load i32, i32* %v2_af3d, align 4
  store i32 %v3_af3d, i32* @edi, align 4
  %v1_af40 = add i32 %arg3, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_af40 = inttoptr i32 %v1_af40 to i32*
  %v3_af40 = load i32, i32* %v2_af40, align 4
  store i32 %v3_af40, i32* @esi, align 4
  %v3_aff0 = add i32 %v16_aef4, ptrtoint (i32* @global_var_7c.835 to i32)
  %v3_aff4 = add i32 %v16_aef4, 92
  br label %dec_label_pc_af68

dec_label_pc_af68:                                ; preds = %dec_label_pc_b014, %dec_label_pc_af36
  %v0_af86 = phi i32 [ %v0_b014, %dec_label_pc_b014 ], [ %v3_af23, %dec_label_pc_af36 ]
  br label %dec_label_pc_aff0

dec_label_pc_aff0:                                ; preds = %dec_label_pc_affc, %dec_label_pc_af68
  %v0_affc = phi i32 [ %v1_affc, %dec_label_pc_affc ], [ 7, %dec_label_pc_af68 ]
  %v2_aff0 = mul nuw nsw i32 %v0_affc, 4
  %v4_aff0 = add i32 %v3_aff0, %v2_aff0
  %v5_aff0 = inttoptr i32 %v4_aff0 to i32*
  %v6_aff0 = load i32, i32* %v5_aff0, align 4
  %v4_aff4 = add i32 %v3_aff4, %v2_aff0
  %v5_aff4 = inttoptr i32 %v4_aff4 to i32*
  %v6_aff4 = load i32, i32* %v5_aff4, align 4
  %v13_aff4 = icmp ult i32 %v6_aff4, %v6_aff0
  br i1 %v13_aff4, label %dec_label_pc_b020, label %dec_label_pc_affa

dec_label_pc_affa:                                ; preds = %dec_label_pc_aff0
  %v18_aff4 = icmp eq i32 %v6_aff4, %v6_aff0
  br i1 %v18_aff4, label %dec_label_pc_affc, label %dec_label_pc_b004

dec_label_pc_affc:                                ; preds = %dec_label_pc_affa
  %v1_affc = add nsw i32 %v0_affc, -1
  %v5_affc = icmp eq i32 %v0_affc, 0
  %v1_b002 = icmp eq i1 %v5_affc, false
  br i1 %v1_b002, label %dec_label_pc_aff0, label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %dec_label_pc_affa, %dec_label_pc_affc
  %v1_b00d = add i32 %v0_af86, 12
  %v2_b00d = inttoptr i32 %v1_b00d to i32*
  %v3_b00d = load i32, i32* %v2_b00d, align 4
  %v1_b010 = icmp eq i32 %v3_b00d, 0
  br i1 %v1_b010, label %dec_label_pc_b030, label %dec_label_pc_b014

dec_label_pc_b014:                                ; preds = %dec_label_pc_b020, %dec_label_pc_b004
  %v0_b014 = phi i32 [ %v3_b029, %dec_label_pc_b020 ], [ %v3_b00d, %dec_label_pc_b004 ]
  br label %dec_label_pc_af68

dec_label_pc_b020:                                ; preds = %dec_label_pc_aff0
  %v1_b029 = add i32 %v0_af86, 8
  %v2_b029 = inttoptr i32 %v1_b029 to i32*
  %v3_b029 = load i32, i32* %v2_b029, align 4
  %v1_b02c = icmp eq i32 %v3_b029, 0
  %v1_b02e = icmp eq i1 %v1_b02c, false
  br i1 %v1_b02e, label %dec_label_pc_b014, label %dec_label_pc_b030

dec_label_pc_b030:                                ; preds = %dec_label_pc_b020, %dec_label_pc_b004
  %stack_var_-185.0 = phi i8 [ ptrtoint (i8** @global_var_1.820 to i8), %dec_label_pc_b020 ], [ 0, %dec_label_pc_b004 ]
  %v10_b030 = icmp eq i8 %stack_var_-185.0, 0
  %v1_b039 = icmp eq i1 %v10_b030, false
  br i1 %v1_b039, label %dec_label_pc_b138, label %dec_label_pc_b03f

dec_label_pc_b03f:                                ; preds = %dec_label_pc_b030
  store i32 %v0_af86, i32* @edx, align 4
  store i32 7, i32* @ecx, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge, %dec_label_pc_b03f
  %v0_b10222 = phi i32 [ %v0_b102, %dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge ], [ %v0_af86, %dec_label_pc_b03f ]
  %v1_b0e7 = phi i32 [ %v1_b0f6, %dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge ], [ 7, %dec_label_pc_b03f ]
  %v0_b0e7 = phi i32 [ %v0_b0e0.pre, %dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge ], [ %v16_aef4, %dec_label_pc_b03f ]
  %v2_b0e0 = mul i32 %v1_b0e7, 4
  %v3_b0e0 = add i32 %v0_b0e7, ptrtoint (i32* @global_var_bc.941 to i32)
  %v4_b0e0 = add i32 %v3_b0e0, %v2_b0e0
  %v5_b0e0 = inttoptr i32 %v4_b0e0 to i32*
  %v6_b0e0 = load i32, i32* %v5_b0e0, align 4
  %v3_b0e7 = add i32 %v0_b0e7, 156
  %v4_b0e7 = add i32 %v3_b0e7, %v2_b0e0
  %v5_b0e7 = inttoptr i32 %v4_b0e7 to i32*
  %v6_b0e7 = load i32, i32* %v5_b0e7, align 4
  %v13_b0e7 = icmp ult i32 %v6_b0e7, %v6_b0e0
  %v18_b0e7 = icmp eq i32 %v6_b0e7, %v6_b0e0
  br i1 %v13_b0e7, label %bb, label %dec_label_pc_b0f4

bb:                                               ; preds = %dec_label_pc_b0e0
  %v1_b0ee = call i32 @function_b18b()
  %v0_b0f4.pre = load i1, i1* @cf, align 1
  %v1_b0f4.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_b0f4

dec_label_pc_b0f4:                                ; preds = %bb, %dec_label_pc_b0e0
  %v0_b102 = phi i32 [ %v1_b0ee, %bb ], [ %v0_b10222, %dec_label_pc_b0e0 ]
  %v1_b0f4 = phi i1 [ %v1_b0f4.pre, %bb ], [ %v18_b0e7, %dec_label_pc_b0e0 ]
  %v0_b0f4 = phi i1 [ %v0_b0f4.pre, %bb ], [ false, %dec_label_pc_b0e0 ]
  %v2_b0f4 = or i1 %v1_b0f4, %v0_b0f4
  br i1 %v2_b0f4, label %dec_label_pc_b0f6, label %dec_label_pc_b0fe

dec_label_pc_b0f6:                                ; preds = %dec_label_pc_b0f4
  %v0_b0f6 = load i32, i32* @ecx, align 4
  %v1_b0f6 = add i32 %v0_b0f6, -1
  %v5_b0f6 = icmp eq i32 %v0_b0f6, 0
  store i32 %v1_b0f6, i32* @ecx, align 4
  %v1_b0fc = icmp eq i1 %v5_b0f6, false
  br i1 %v1_b0fc, label %dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge, label %dec_label_pc_b0fe

dec_label_pc_b0f6.dec_label_pc_b0e0_crit_edge:    ; preds = %dec_label_pc_b0f6
  %v0_b0e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_b0e0

dec_label_pc_b0fe:                                ; preds = %dec_label_pc_b0f4, %dec_label_pc_b0f6
  store i32 %v0_b102, i32* %arg1, align 4
  %v1_b104 = add i32 %tmp74, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_b104 = inttoptr i32 %v1_b104 to i8*
  store i8 0, i8* %v2_b104, align 1
  store i32 %tmp74, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb82, label %dec_label_pc_b120

bb82:                                             ; preds = %dec_label_pc_b0fe
  %v2_b11a = call i32 @function_b1ef()
  br label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %bb82, %dec_label_pc_b0fe
  %v0_b12a = phi i32 [ %v2_b11a, %bb82 ], [ %tmp74, %dec_label_pc_b0fe ]
  store i32 %v0_aef2, i32* @esi, align 4
  store i32 %v0_aef1, i32* @edi, align 4
  ret i32 %v0_b12a

dec_label_pc_b12d:                                ; preds = %dec_label_pc_aef0
  %v1_b131 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  br label %dec_label_pc_b138

dec_label_pc_b138:                                ; preds = %dec_label_pc_b12d, %dec_label_pc_b030
  %stack_var_-212.0.in = phi i32 [ %v1_b131, %dec_label_pc_b12d ], [ %v0_af86, %dec_label_pc_b030 ]
  %v4_b14d27 = phi i32 [ 0, %dec_label_pc_b12d ], [ %v0_af86, %dec_label_pc_b030 ]
  %v2_b140 = add i32 %arg2, 12
  %v3_b140 = inttoptr i32 %v2_b140 to i32*
  %v4_b140 = load i32, i32* %v3_b140, align 4
  %v15_b140 = icmp eq i32 %stack_var_-212.0.in, %v4_b140
  br i1 %v15_b140, label %bb85, label %dec_label_pc_b149

bb85:                                             ; preds = %dec_label_pc_b138
  %v1_b143 = call i32 @function_b1d1()
  br label %dec_label_pc_b149

dec_label_pc_b149:                                ; preds = %bb85, %dec_label_pc_b138
  %v4_b14d = phi i32 [ %v1_b143, %bb85 ], [ %v4_b14d27, %dec_label_pc_b138 ]
  ret i32 %v4_b14d

; uselistorder directives
  uselistorder i32 %v1_b0f6, { 1, 0 }
  uselistorder i32 %v2_b0e0, { 1, 0 }
  uselistorder i32 %v3_b029, { 1, 0 }
  uselistorder i32 %v0_affc, { 1, 0, 2 }
  uselistorder i32 %v0_af86, { 3, 0, 2, 1, 5, 4 }
  uselistorder i32 %v16_aef4, { 2, 0, 1 }
  uselistorder i32 %tmp74, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b0fe, { 1, 0 }
  uselistorder label %dec_label_pc_b004, { 1, 0 }
}

define x86_fp80 @function_b154(i32 %arg1) local_unnamed_addr {
dec_label_pc_b154:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_b154 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b154 = add i32 %v0_b154, -1992547236
  %v2_b154 = inttoptr i32 %v1_b154 to i32*
  %v3_b154 = load i32, i32* %v2_b154, align 4
  %v4_b154 = sub i32 %v3_b154, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_b154, i32* %v2_b154, align 4
  %v1_b15a = load i32, i32* %ebx.global-to-local, align 4
  %v2_b15a = add i32 %v1_b15a, 273320747
  %v3_b15a = inttoptr i32 %v2_b15a to i32*
  %v4_b15a = load i32, i32* %v3_b15a, align 4
  %v5_b15a = sitofp i32 %v4_b15a to x86_fp80
  %v6_b15a = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_b15a = fmul x86_fp80 %v6_b15a, %v5_b15a
  store x86_fp80 %v7_b15a, x86_fp80* %st0.global-to-local, align 4
  %v0_b160 = load i32, i32* %edx.global-to-local, align 4
  %v1_b160 = add i32 %v0_b160, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b160 = inttoptr i32 %v1_b160 to i32*
  %v3_b160 = load i32, i32* %v2_b160, align 4
  store i32 %v3_b160, i32* %edx.global-to-local, align 4
  %v1_b169 = add i32 %v1_b15a, 12
  %v2_b169 = inttoptr i32 %v1_b169 to i32*
  %v3_b169 = load i32, i32* %v2_b169, align 4
  store i32 %v3_b169, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_b17f = add i32 %arg1, 28
  %v2_b17f = inttoptr i32 %v1_b17f to i32*
  %v3_b17f = load i32, i32* %v2_b17f, align 4
  store i32 %v3_b17f, i32* %edx.global-to-local, align 4
  ret x86_fp80 %v7_b15a

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_b18b() local_unnamed_addr {
dec_label_pc_b18b:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_76 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v0_b18b = load i32, i32* @edx, align 4
  %v2_b193 = ptrtoint i32* %stack_var_76 to i32
  store i32 %v2_b193, i32* %eax.global-to-local, align 4
  store i32 %v0_b18b, i32* @ecx, align 4
  %v5_b1b6 = call i32 @unknown_15cd0(i32 %v2_b193, i32 %tmp9, i32 0, i32 %v0_b18b, i32 %tmp7)
  %v0_b1bb = load i32, i32* @esp, align 4
  %v5_b1bb = icmp ult i32 %v0_b1bb, 4
  store i1 %v5_b1bb, i1* @cf, align 1
  %v10_b1bb = icmp eq i32 %v0_b1bb, 4
  store i1 %v10_b1bb, i1* @zf, align 1
  %v2_b1c6 = inttoptr i32 %tmp to i32*
  %v0_b1c8 = load i32, i32* @edx, align 4
  %v1_b1c8 = add i32 %v0_b1c8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_b1c8 = inttoptr i32 %v1_b1c8 to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_b1c8, align 1
  %v0_b1cc = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b1cc
}

define i32 @function_b1d1() local_unnamed_addr {
dec_label_pc_b1d1:
  %stack_var_76 = alloca i32, align 4
  %v2_b1d5 = ptrtoint i32* %stack_var_76 to i32
  ret i32 %v2_b1d5
}

define i32 @function_b1ef() local_unnamed_addr {
dec_label_pc_b1ef:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_M_copyEPKSt13_Rb_tree_nodeIiEPS7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b200:
  ret i32 0
}

define i32 @function_b22a(i32* %arg1) local_unnamed_addr {
dec_label_pc_b22a:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_b22a = load i32, i32* %ebx.global-to-local, align 4
  %v1_b22a = add i32 %v0_b22a, 1149890808
  %v2_b22a = inttoptr i32 %v1_b22a to i32*
  %v3_b22a = load i32, i32* %v2_b22a, align 4
  %v4_b22a = add i32 %v3_b22a, 1
  store i32 %v4_b22a, i32* %v2_b22a, align 4
  %v0_b230 = load i32, i32* %eax.global-to-local, align 4
  %v1_b230 = trunc i32 %v0_b230 to i8
  %v2_b230 = and i8 %v1_b230, 28
  %v3_b230 = icmp eq i8 %v2_b230, 0
  %v8_b230 = zext i8 %v2_b230 to i32
  %v10_b230 = and i32 %v0_b230, -256
  %v11_b230 = or i32 %v8_b230, %v10_b230
  store i32 %v11_b230, i32* %eax.global-to-local, align 4
  br i1 %v3_b230, label %dec_label_pc_b23e, label %dec_label_pc_b234

dec_label_pc_b234:                                ; preds = %dec_label_pc_b22a
  %v0_b234 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b234 = add i32 %v0_b234, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_b234 = inttoptr i32 %v1_b234 to i32*
  %v3_b234 = load i32, i32* %v2_b234, align 4
  store i32 %v3_b234, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_b23b = add i32 %tmp102, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b23b = inttoptr i32 %v2_b23b to i32*
  store i32 %v3_b234, i32* %v3_b23b, align 4
  br label %dec_label_pc_b23e

dec_label_pc_b23e:                                ; preds = %dec_label_pc_b234, %dec_label_pc_b22a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_b242 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v2_b242, i32* %eax.global-to-local, align 4
  %v1_b244 = add i32 %tmp102, 12
  %v2_b244 = inttoptr i32 %v1_b244 to i32*
  store i32 0, i32* %v2_b244, align 4
  %v0_b24b = load i32, i32* %eax.global-to-local, align 4
  %v1_b24b = load i32, i32* %edx.global-to-local, align 4
  %v2_b24b = inttoptr i32 %v1_b24b to i32*
  store i32 %v0_b24b, i32* %v2_b24b, align 4
  %v0_b24d = load i32, i32* %ebx.global-to-local, align 4
  %v1_b24d = add i32 %v0_b24d, 12
  %v2_b24d = inttoptr i32 %v1_b24d to i32*
  %v3_b24d = load i32, i32* %v2_b24d, align 4
  store i32 %v3_b24d, i32* %eax.global-to-local, align 4
  %v0_b250 = load i32, i32* %edx.global-to-local, align 4
  %v1_b250 = add i32 %v0_b250, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b250 = inttoptr i32 %v1_b250 to i32*
  store i32 0, i32* %v2_b250, align 4
  %v0_b257 = load i32, i32* %esi.global-to-local, align 4
  %v1_b257 = load i32, i32* %edx.global-to-local, align 4
  %v2_b257 = add i32 %v1_b257, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_b257 = inttoptr i32 %v2_b257 to i32*
  store i32 %v0_b257, i32* %v3_b257, align 4
  %v0_b25a = load i32, i32* %eax.global-to-local, align 4
  %v1_b25a = icmp eq i32 %v0_b25a, 0
  br i1 %v1_b25a, label %dec_label_pc_b275, label %dec_label_pc_b25e

dec_label_pc_b25e:                                ; preds = %dec_label_pc_b23e
  %v0_b25e = load i32, i32* %edx.global-to-local, align 4
  %v2_b269 = call i32 @unknown_16400(i32 %v0_b25a, i32 %v0_b25e)
  store i32 %v2_b269, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_b269, i32* %v2_b244, align 4
  br label %dec_label_pc_b275

dec_label_pc_b275:                                ; preds = %dec_label_pc_b25e, %dec_label_pc_b23e
  %v0_b275 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b275 = add i32 %v0_b275, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b275 = inttoptr i32 %v1_b275 to i32*
  %v3_b275 = load i32, i32* %v2_b275, align 4
  store i32 %v3_b275, i32* %esi.global-to-local, align 4
  %v1_b27c = icmp eq i32 %v3_b275, 0
  %v1_b27e = icmp eq i1 %v1_b27c, false
  br i1 %v1_b27e, label %dec_label_pc_b28a, label %dec_label_pc_b280

dec_label_pc_b280:                                ; preds = %dec_label_pc_b275
  %v0_b280 = call i32 @function_b2dc()
  store i32 %v0_b280, i32* %eax.global-to-local, align 4
  ret i32 %v0_b280

dec_label_pc_b28a:                                ; preds = %dec_label_pc_b275
  %v3_b28a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_b28a

; uselistorder directives
  uselistorder i32 %tmp102, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9 }
}

define i32 @function_b29a() local_unnamed_addr {
dec_label_pc_b29a:
  %eax.global-to-local = alloca i32, align 4
  %v0_b29a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b29a
}

define i32 @function_b2dc() local_unnamed_addr {
dec_label_pc_b2dc:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_b2e0 = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_b2eb = icmp eq i1 %v4_b2e0, false
  br i1 %v1_b2eb, label %bb, label %dec_label_pc_b2ed

bb:                                               ; preds = %dec_label_pc_b2dc
  %v2_b2eb = call i32 @function_b312()
  br label %dec_label_pc_b2ed

dec_label_pc_b2ed:                                ; preds = %bb, %dec_label_pc_b2dc
  %v0_b2f4 = phi i32 [ %v2_b2eb, %bb ], [ %tmp10, %dec_label_pc_b2dc ]
  ret i32 %v0_b2f4
}

define i32 @function_b312() local_unnamed_addr {
dec_label_pc_b312:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b318() local_unnamed_addr {
dec_label_pc_b318:
  %eax.global-to-local = alloca i32, align 4
  %v0_b318 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b318
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEaSERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b330:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b330 = load i32, i32* %esi.global-to-local, align 4
  %v0_b331 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v12_b349 = icmp eq i32 %arg1, %arg2
  br i1 %v12_b349, label %dec_label_pc_b3ba, label %dec_label_pc_b34d

dec_label_pc_b34d:                                ; preds = %dec_label_pc_b330
  %v1_b34d = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b34d = inttoptr i32 %v1_b34d to i32*
  %v3_b34d = load i32, i32* %v2_b34d, align 4
  store i32 %v3_b34d, i32* %eax.global-to-local, align 4
  %v2_b357 = call i32 @unknown_154e0(i32 %arg1, i32 %v3_b34d)
  %v0_b35c = load i32, i32* %ebx.global-to-local, align 4
  %v1_b35c = add i32 %v0_b35c, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_b35c, i32* %eax.global-to-local, align 4
  %v2_b35f = add i32 %v0_b35c, 12
  %v3_b35f = inttoptr i32 %v2_b35f to i32*
  store i32 %v1_b35c, i32* %v3_b35f, align 4
  %v0_b362 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b362 = add i32 %v0_b362, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b362 = inttoptr i32 %v1_b362 to i32*
  store i32 0, i32* %v2_b362, align 4
  %v0_b369 = load i32, i32* %eax.global-to-local, align 4
  %v1_b369 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b369 = add i32 %v1_b369, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b369 = inttoptr i32 %v2_b369 to i32*
  store i32 %v0_b369, i32* %v3_b369, align 4
  %v0_b36c = load i32, i32* %ebx.global-to-local, align 4
  %v1_b36c = add i32 %v0_b36c, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b36c = inttoptr i32 %v1_b36c to i32*
  store i32 0, i32* %v2_b36c, align 4
  %v0_b373 = load i32, i32* %esi.global-to-local, align 4
  %v1_b373 = add i32 %v0_b373, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b373 = inttoptr i32 %v1_b373 to i32*
  %v3_b373 = load i32, i32* %v2_b373, align 4
  %v1_b376 = icmp eq i32 %v3_b373, 0
  br i1 %v1_b376, label %dec_label_pc_b3ba, label %dec_label_pc_b37a

dec_label_pc_b37a:                                ; preds = %dec_label_pc_b34d
  %v0_b37a = load i32, i32* %eax.global-to-local, align 4
  %v0_b382 = load i32, i32* %ebx.global-to-local, align 4
  %v4_b385 = call i32 @unknown_16530(i32 %v0_b382, i32 %v3_b373, i32 %v0_b37a)
  store i32 %v4_b385, i32* %eax.global-to-local, align 4
  %v2_b38a = add i32 %v0_b382, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_b38a = inttoptr i32 %v2_b38a to i32*
  store i32 %v4_b385, i32* %v3_b38a, align 4
  %v0_b38d = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b39a

dec_label_pc_b39a:                                ; preds = %dec_label_pc_b39a, %dec_label_pc_b37a
  %v0_b3a1 = phi i32 [ %v0_b38d, %dec_label_pc_b37a ], [ %v3_b39a, %dec_label_pc_b39a ]
  %v1_b39a = add i32 %v0_b3a1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b39a = inttoptr i32 %v1_b39a to i32*
  %v3_b39a = load i32, i32* %v2_b39a, align 4
  %v1_b39d = icmp eq i32 %v3_b39a, 0
  %v1_b39f = icmp eq i1 %v1_b39d, false
  br i1 %v1_b39f, label %dec_label_pc_b39a, label %dec_label_pc_b3a1

dec_label_pc_b3a1:                                ; preds = %dec_label_pc_b39a
  %v1_b3a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b3a1 = add i32 %v1_b3a1, 12
  %v3_b3a1 = inttoptr i32 %v2_b3a1 to i32*
  store i32 %v0_b3a1, i32* %v3_b3a1, align 4
  %v0_b3aa.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_b3aa114 = add i32 %v0_b3aa.pre, 12
  %v2_b3aa115 = inttoptr i32 %v1_b3aa114 to i32*
  %v3_b3aa116 = load i32, i32* %v2_b3aa115, align 4
  %v1_b3ad117 = icmp eq i32 %v3_b3aa116, 0
  %v1_b3af118 = icmp eq i1 %v1_b3ad117, false
  br i1 %v1_b3af118, label %dec_label_pc_b3a8, label %dec_label_pc_b3b1

dec_label_pc_b3a8:                                ; preds = %dec_label_pc_b3a1, %dec_label_pc_b3a8
  %v3_b3aa119 = phi i32 [ %v3_b3aa, %dec_label_pc_b3a8 ], [ %v3_b3aa116, %dec_label_pc_b3a1 ]
  store i32 %v3_b3aa119, i32* %eax.global-to-local, align 4
  %v1_b3aa = add i32 %v3_b3aa119, 12
  %v2_b3aa = inttoptr i32 %v1_b3aa to i32*
  %v3_b3aa = load i32, i32* %v2_b3aa, align 4
  %v1_b3ad = icmp eq i32 %v3_b3aa, 0
  %v1_b3af = icmp eq i1 %v1_b3ad, false
  br i1 %v1_b3af, label %dec_label_pc_b3a8, label %dec_label_pc_b3b1

dec_label_pc_b3b1:                                ; preds = %dec_label_pc_b3a8, %dec_label_pc_b3a1
  %v0_b3b1.lcssa = phi i32 [ %v0_b3aa.pre, %dec_label_pc_b3a1 ], [ %v3_b3aa119, %dec_label_pc_b3a8 ]
  %v1_b3b1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b3b1 = add i32 %v1_b3b1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b3b1 = inttoptr i32 %v2_b3b1 to i32*
  store i32 %v0_b3b1.lcssa, i32* %v3_b3b1, align 4
  %v0_b3b4 = load i32, i32* %esi.global-to-local, align 4
  %v1_b3b4 = add i32 %v0_b3b4, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b3b4 = inttoptr i32 %v1_b3b4 to i32*
  %v3_b3b4 = load i32, i32* %v2_b3b4, align 4
  store i32 %v3_b3b4, i32* %eax.global-to-local, align 4
  %v1_b3b7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b3b7 = add i32 %v1_b3b7, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_b3b7 = inttoptr i32 %v2_b3b7 to i32*
  store i32 %v3_b3b4, i32* %v3_b3b7, align 4
  br label %dec_label_pc_b3ba

dec_label_pc_b3ba:                                ; preds = %dec_label_pc_b3b1, %dec_label_pc_b34d, %dec_label_pc_b330
  %v0_b3c5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_b3c5, i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_b3cf, label %dec_label_pc_b3c9

dec_label_pc_b3c9:                                ; preds = %dec_label_pc_b3ba
  store i32 %v0_b331, i32* %ebx.global-to-local, align 4
  store i32 %v0_b330, i32* %esi.global-to-local, align 4
  ret i32 %v0_b3c5

dec_label_pc_b3cf:                                ; preds = %dec_label_pc_b3ba
  ret i32 %v0_b3c5

; uselistorder directives
  uselistorder i32 %v0_b3c5, { 1, 0, 2 }
  uselistorder i32 %v3_b3aa, { 1, 0 }
  uselistorder i32 %v3_b39a, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_b3a8, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE7_M_copyEPKSt13_Rb_tree_nodeISsEPS7_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b3e0:
  ret i32 0
}

define i32 @function_b422(i32 %arg1) local_unnamed_addr {
dec_label_pc_b422:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b422 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b422 = add i32 %v0_b422, -1961089964
  %v2_b422 = inttoptr i32 %v1_b422 to i32*
  %v3_b422 = load i32, i32* %v2_b422, align 4
  %v4_b422 = sub i32 %v3_b422, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_b422, i32* %v2_b422, align 4
  %v0_b428 = load i32, i32* %eax.global-to-local, align 4
  %v1_b428 = load i32, i32* %edi.global-to-local, align 4
  %v2_b428 = add i32 %v1_b428, %v0_b428
  %v0_b42a = load i32, i32* %edx.global-to-local, align 4
  %v1_b42a = add i32 %v0_b42a, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b42a, i32* %edx.global-to-local, align 4
  %v7_b42b = and i32 %v2_b428, ptrtoint (i32* @global_var_ff.838 to i32)
  %v10_b42b = and i32 %v2_b428, or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256)
  store i32 %v10_b42b, i32* %eax.global-to-local, align 4
  %v1_b42d = inttoptr i32 %v10_b42b to i8*
  %v2_b42d = load i8, i8* %v1_b42d, align 4
  %v4_b42d = trunc i32 %v7_b42b to i8
  %v5_b42d = add i8 %v2_b42d, %v4_b42d
  store i8 %v5_b42d, i8* %v1_b42d, align 4
  %v0_b42f = load i32, i32* %ecx.global-to-local, align 4
  %v1_b42f = add i32 %v0_b42f, 205753090
  %v2_b42f = inttoptr i32 %v1_b42f to i8*
  %v3_b42f = load i8, i8* %v2_b42f, align 1
  %v5_b42f = trunc i32 %v0_b42f to i8
  %v6_b42f = add i8 %v3_b42f, %v5_b42f
  store i8 %v6_b42f, i8* %v2_b42f, align 1
  %v0_b435 = load i32, i32* %edx.global-to-local, align 4
  %v1_b435 = add i32 %v0_b435, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b435 = inttoptr i32 %v1_b435 to i32*
  store i32 0, i32* %v2_b435, align 4
  %v0_b43c = load i32, i32* %esi.global-to-local, align 4
  %v1_b43c = load i32, i32* %edx.global-to-local, align 4
  %v2_b43c = add i32 %v1_b43c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_b43c = inttoptr i32 %v2_b43c to i32*
  store i32 %v0_b43c, i32* %v3_b43c, align 4
  %v0_b43f = load i32, i32* %eax.global-to-local, align 4
  %v1_b43f = icmp eq i32 %v0_b43f, 0
  br i1 %v1_b43f, label %dec_label_pc_b45e, label %dec_label_pc_b443

dec_label_pc_b443:                                ; preds = %dec_label_pc_b422
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_b452 = call i32 @unknown_167c0(i32 %v0_b43f, i32 %arg1)
  store i32 %v2_b452, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_b45b = add i32 %arg1, 12
  %v3_b45b = inttoptr i32 %v2_b45b to i32*
  store i32 %v2_b452, i32* %v3_b45b, align 4
  br label %dec_label_pc_b45e

dec_label_pc_b45e:                                ; preds = %dec_label_pc_b443, %dec_label_pc_b422
  %v0_b45e = load i32, i32* %ebx.global-to-local, align 4
  %v1_b45e = add i32 %v0_b45e, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b45e = inttoptr i32 %v1_b45e to i32*
  %v3_b45e = load i32, i32* %v2_b45e, align 4
  store i32 %v3_b45e, i32* %esi.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_b465 = icmp eq i32 %v3_b45e, 0
  %v1_b467 = icmp eq i1 %v1_b465, false
  br i1 %v1_b467, label %dec_label_pc_b472, label %dec_label_pc_b469

dec_label_pc_b469:                                ; preds = %dec_label_pc_b45e
  %v0_b469 = call i32 @function_b4cd()
  store i32 %v0_b469, i32* %eax.global-to-local, align 4
  ret i32 %v0_b469

dec_label_pc_b472:                                ; preds = %dec_label_pc_b45e
  %v3_b472 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_b472

; uselistorder directives
  uselistorder i32 %v10_b42b, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 or (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 -256), { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0 }
}

define i32 @function_b47f() local_unnamed_addr {
dec_label_pc_b47f:
  %eax.global-to-local = alloca i32, align 4
  %v0_b47f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b47f
}

define i32 @function_b4cd() local_unnamed_addr {
dec_label_pc_b4cd:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_b4d1 = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_b4dc = icmp eq i1 %v4_b4d1, false
  br i1 %v1_b4dc, label %bb, label %dec_label_pc_b4de

bb:                                               ; preds = %dec_label_pc_b4cd
  %v2_b4dc = call i32 @function_b4ff()
  br label %dec_label_pc_b4de

dec_label_pc_b4de:                                ; preds = %bb, %dec_label_pc_b4cd
  %v0_b4e5 = phi i32 [ %v2_b4dc, %bb ], [ %tmp10, %dec_label_pc_b4cd ]
  ret i32 %v0_b4e5
}

define i32 @function_b4ff() local_unnamed_addr {
dec_label_pc_b4ff:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b505() local_unnamed_addr {
dec_label_pc_b505:
  %eax.global-to-local = alloca i32, align 4
  %v0_b505 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b505
}

define i32 @function_b546() local_unnamed_addr {
dec_label_pc_b546:
  %eax.global-to-local = alloca i32, align 4
  %v0_b546 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b546
}

define i32 @function_b54b() local_unnamed_addr {
dec_label_pc_b54b:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_b54b = load i32, i32* %ecx.global-to-local, align 4
  %v1_b54b = add i32 %v0_b54b, -1982272552
  %v2_b54b = inttoptr i32 %v1_b54b to i32*
  %v3_b54b = load i32, i32* %v2_b54b, align 4
  %v4_b54b = sub i32 %v3_b54b, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_b54b, i32* %v2_b54b, align 4
  %v0_b551 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b551
}

define i32 @_ZN6CAlertC1ERKS_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b560:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp18 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @esi, align 4
  store i32 %tmp18, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_b57b = inttoptr i32 %arg2 to i32*
  %v2_b57b = load i32, i32* %v1_b57b, align 4
  store i32 %v2_b57b, i32* %eax.global-to-local, align 4
  %v1_b57d = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b57d = inttoptr i32 %v1_b57d to i32*
  %v3_b57d = load i32, i32* %v2_b57d, align 4
  store i32 %v3_b57d, i32* %edx.global-to-local, align 4
  store i32 %v2_b57b, i32* %arg1, align 4
  %v0_b582 = load i32, i32* @esi, align 4
  %v1_b582 = add i32 %v0_b582, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_b582 = inttoptr i32 %v1_b582 to i32*
  %v3_b582 = load i32, i32* %v2_b582, align 4
  store i32 %v3_b582, i32* %eax.global-to-local, align 4
  %v0_b585 = load i32, i32* %edx.global-to-local, align 4
  %v1_b585 = load i32, i32* @ebx, align 4
  %v2_b585 = add i32 %v1_b585, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_b585 = inttoptr i32 %v2_b585 to i32*
  store i32 %v0_b585, i32* %v3_b585, align 4
  %v0_b588 = load i32, i32* @esi, align 4
  %v1_b588 = add i32 %v0_b588, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_b588 = inttoptr i32 %v1_b588 to i32*
  %v3_b588 = load i32, i32* %v2_b588, align 4
  store i32 %v3_b588, i32* %edx.global-to-local, align 4
  %v0_b58b = load i32, i32* %eax.global-to-local, align 4
  %v1_b58b = load i32, i32* @ebx, align 4
  %v2_b58b = add i32 %v1_b58b, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_b58b = inttoptr i32 %v2_b58b to i32*
  store i32 %v0_b58b, i32* %v3_b58b, align 4
  %v0_b58e = load i32, i32* @esi, align 4
  %v1_b58e = add i32 %v0_b58e, 12
  %v2_b58e = inttoptr i32 %v1_b58e to i32*
  %v3_b58e = load i32, i32* %v2_b58e, align 4
  store i32 %v3_b58e, i32* %eax.global-to-local, align 4
  %v0_b591 = load i32, i32* %edx.global-to-local, align 4
  %v1_b591 = load i32, i32* @ebx, align 4
  %v2_b591 = add i32 %v1_b591, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b591 = inttoptr i32 %v2_b591 to i32*
  store i32 %v0_b591, i32* %v3_b591, align 4
  %v0_b594 = load i32, i32* %eax.global-to-local, align 4
  %v1_b594 = load i32, i32* @ebx, align 4
  %v2_b594 = add i32 %v1_b594, 12
  %v3_b594 = inttoptr i32 %v2_b594 to i32*
  store i32 %v0_b594, i32* %v3_b594, align 4
  %v0_b597 = load i32, i32* @esi, align 4
  %v1_b597 = add i32 %v0_b597, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b597 = inttoptr i32 %v1_b597 to i32*
  %v3_b597 = load i32, i32* %v2_b597, align 4
  store i32 %v3_b597, i32* %eax.global-to-local, align 4
  %v1_b59a = load i32, i32* @ebx, align 4
  %v2_b59a = add i32 %v1_b59a, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_b59a = inttoptr i32 %v2_b59a to i32*
  store i32 %v3_b597, i32* %v3_b59a, align 4
  %v0_b59d = load i32, i32* @esi, align 4
  %v1_b59d = add i32 %v0_b59d, 24
  %v2_b59d = inttoptr i32 %v1_b59d to i32*
  %v3_b59d = load i32, i32* %v2_b59d, align 4
  store i32 %v3_b59d, i32* %eax.global-to-local, align 4
  %v0_b5a0 = load i32, i32* @ebx, align 4
  %v1_b5a0 = add i32 %v0_b5a0, 32
  %v2_b5a0 = inttoptr i32 %v1_b5a0 to i32*
  store i32 0, i32* %v2_b5a0, align 4
  %v0_b5a7 = load i32, i32* @ebx, align 4
  %v1_b5a7 = add i32 %v0_b5a7, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_b5a7 = inttoptr i32 %v1_b5a7 to i32*
  store i32 0, i32* %v2_b5a7, align 4
  %v0_b5ae = load i32, i32* @ebx, align 4
  %v1_b5ae = add i32 %v0_b5ae, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_b5ae = inttoptr i32 %v1_b5ae to i32*
  store i32 0, i32* %v2_b5ae, align 4
  %v0_b5b5 = load i32, i32* %eax.global-to-local, align 4
  %v1_b5b5 = load i32, i32* @ebx, align 4
  %v2_b5b5 = add i32 %v1_b5b5, 24
  %v3_b5b5 = inttoptr i32 %v2_b5b5 to i32*
  store i32 %v0_b5b5, i32* %v3_b5b5, align 4
  %v0_b5b8 = load i32, i32* @ebx, align 4
  %v1_b5b8 = add i32 %v0_b5b8, 28
  %v1_b5bf = add i32 %v0_b5b8, 32
  store i32 %v1_b5bf, i32* %eax.global-to-local, align 4
  %v2_b5c2 = add i32 %v0_b5b8, 40
  %v3_b5c2 = inttoptr i32 %v2_b5c2 to i32*
  store i32 %v1_b5bf, i32* %v3_b5c2, align 4
  %v0_b5c5 = load i32, i32* %eax.global-to-local, align 4
  %v1_b5c5 = load i32, i32* @ebx, align 4
  %v2_b5c5 = add i32 %v1_b5c5, 44
  %v3_b5c5 = inttoptr i32 %v2_b5c5 to i32*
  store i32 %v0_b5c5, i32* %v3_b5c5, align 4
  %v0_b5c8 = load i32, i32* @esi, align 4
  %v1_b5c8 = add i32 %v0_b5c8, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_b5c8 = inttoptr i32 %v1_b5c8 to i32*
  %v3_b5c8 = load i32, i32* %v2_b5c8, align 4
  store i32 %v3_b5c8, i32* %edx.global-to-local, align 4
  %v1_b5cb = icmp eq i32 %v3_b5c8, 0
  br i1 %v1_b5cb, label %dec_label_pc_b612, label %dec_label_pc_b5cf

dec_label_pc_b5cf:                                ; preds = %dec_label_pc_b560
  %v0_b5cf = load i32, i32* %eax.global-to-local, align 4
  store i32 %v1_b5b8, i32* %eax.global-to-local, align 4
  %v3_b5de = call i32 @unknown_16760(i32 %v1_b5b8, i32 %v3_b5c8, i32 %v0_b5cf)
  store i32 %v3_b5de, i32* %eax.global-to-local, align 4
  %v1_b5e3 = load i32, i32* @ebx, align 4
  %v2_b5e3 = add i32 %v1_b5e3, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_b5e3 = inttoptr i32 %v2_b5e3 to i32*
  store i32 %v3_b5de, i32* %v3_b5e3, align 4
  %v0_b5e6 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b5f2

dec_label_pc_b5f2:                                ; preds = %dec_label_pc_b5f2, %dec_label_pc_b5cf
  %v0_b5f9 = phi i32 [ %v0_b5e6, %dec_label_pc_b5cf ], [ %v3_b5f2, %dec_label_pc_b5f2 ]
  %v1_b5f2 = add i32 %v0_b5f9, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b5f2 = inttoptr i32 %v1_b5f2 to i32*
  %v3_b5f2 = load i32, i32* %v2_b5f2, align 4
  store i32 %v3_b5f2, i32* %edx.global-to-local, align 4
  %v1_b5f5 = icmp eq i32 %v3_b5f2, 0
  %v1_b5f7 = icmp eq i1 %v1_b5f5, false
  br i1 %v1_b5f7, label %dec_label_pc_b5f2, label %dec_label_pc_b5f9

dec_label_pc_b5f9:                                ; preds = %dec_label_pc_b5f2
  %v1_b5f9 = load i32, i32* @ebx, align 4
  %v2_b5f9 = add i32 %v1_b5f9, 40
  %v3_b5f9 = inttoptr i32 %v2_b5f9 to i32*
  store i32 %v0_b5f9, i32* %v3_b5f9, align 4
  %v0_b602.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_b60233 = add i32 %v0_b602.pre, 12
  %v2_b60234 = inttoptr i32 %v1_b60233 to i32*
  %v3_b60235 = load i32, i32* %v2_b60234, align 4
  store i32 %v3_b60235, i32* %edx.global-to-local, align 4
  %v1_b60536 = icmp eq i32 %v3_b60235, 0
  %v1_b60737 = icmp eq i1 %v1_b60536, false
  br i1 %v1_b60737, label %dec_label_pc_b600, label %dec_label_pc_b609

dec_label_pc_b600:                                ; preds = %dec_label_pc_b5f9, %dec_label_pc_b600
  %v3_b60238 = phi i32 [ %v3_b602, %dec_label_pc_b600 ], [ %v3_b60235, %dec_label_pc_b5f9 ]
  store i32 %v3_b60238, i32* %eax.global-to-local, align 4
  %v1_b602 = add i32 %v3_b60238, 12
  %v2_b602 = inttoptr i32 %v1_b602 to i32*
  %v3_b602 = load i32, i32* %v2_b602, align 4
  store i32 %v3_b602, i32* %edx.global-to-local, align 4
  %v1_b605 = icmp eq i32 %v3_b602, 0
  %v1_b607 = icmp eq i1 %v1_b605, false
  br i1 %v1_b607, label %dec_label_pc_b600, label %dec_label_pc_b609

dec_label_pc_b609:                                ; preds = %dec_label_pc_b600, %dec_label_pc_b5f9
  %v0_b609.lcssa = phi i32 [ %v0_b602.pre, %dec_label_pc_b5f9 ], [ %v3_b60238, %dec_label_pc_b600 ]
  %v1_b609 = load i32, i32* @ebx, align 4
  %v2_b609 = add i32 %v1_b609, 44
  %v3_b609 = inttoptr i32 %v2_b609 to i32*
  store i32 %v0_b609.lcssa, i32* %v3_b609, align 4
  %v0_b60c = load i32, i32* @esi, align 4
  %v1_b60c = add i32 %v0_b60c, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_b60c = inttoptr i32 %v1_b60c to i32*
  %v3_b60c = load i32, i32* %v2_b60c, align 4
  store i32 %v3_b60c, i32* %eax.global-to-local, align 4
  %v1_b60f = load i32, i32* @ebx, align 4
  %v2_b60f = add i32 %v1_b60f, ptrtoint (i32* @global_var_30.842 to i32)
  %v3_b60f = inttoptr i32 %v2_b60f to i32*
  store i32 %v3_b60c, i32* %v3_b60f, align 4
  %v0_b612.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_b612

dec_label_pc_b612:                                ; preds = %dec_label_pc_b609, %dec_label_pc_b560
  %v0_b612 = phi i32 [ %v0_b612.pre, %dec_label_pc_b609 ], [ %v0_b5c8, %dec_label_pc_b560 ]
  %v1_b612 = add i32 %v0_b612, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_b612 = inttoptr i32 %v1_b612 to i32*
  %v3_b612 = load i32, i32* %v2_b612, align 4
  store i32 %v3_b612, i32* %eax.global-to-local, align 4
  %v1_b615 = load i32, i32* @ebx, align 4
  %v2_b615 = add i32 %v1_b615, ptrtoint (i32* @global_var_34.832 to i32)
  %v3_b615 = inttoptr i32 %v2_b615 to i32*
  store i32 %v3_b612, i32* %v3_b615, align 4
  %v0_b618 = load i32, i32* @esi, align 4
  %v1_b618 = add i32 %v0_b618, ptrtoint (i32* @global_var_38.831 to i32)
  %v2_b618 = inttoptr i32 %v1_b618 to i32*
  %v3_b618 = load i32, i32* %v2_b618, align 4
  store i32 %v3_b618, i32* %eax.global-to-local, align 4
  %v0_b61b = load i32, i32* @ebx, align 4
  %v1_b61b = add i32 %v0_b61b, ptrtoint (i32* @global_var_40.840 to i32)
  %v2_b61b = inttoptr i32 %v1_b61b to i32*
  store i32 0, i32* %v2_b61b, align 4
  %v0_b622 = load i32, i32* @ebx, align 4
  %v1_b622 = add i32 %v0_b622, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_b622 = inttoptr i32 %v1_b622 to i32*
  store i32 0, i32* %v2_b622, align 4
  %v0_b629 = load i32, i32* @ebx, align 4
  %v1_b629 = add i32 %v0_b629, 80
  %v2_b629 = inttoptr i32 %v1_b629 to i32*
  store i32 0, i32* %v2_b629, align 4
  %v0_b630 = load i32, i32* %eax.global-to-local, align 4
  %v1_b630 = load i32, i32* @ebx, align 4
  %v2_b630 = add i32 %v1_b630, ptrtoint (i32* @global_var_38.831 to i32)
  %v3_b630 = inttoptr i32 %v2_b630 to i32*
  store i32 %v0_b630, i32* %v3_b630, align 4
  %v0_b633 = load i32, i32* @ebx, align 4
  %v1_b633 = add i32 %v0_b633, ptrtoint (i32* @global_var_3c.843 to i32)
  %v1_b63a = add i32 %v0_b633, ptrtoint (i32* @global_var_40.840 to i32)
  store i32 %v1_b63a, i32* %eax.global-to-local, align 4
  %v2_b63d = add i32 %v0_b633, ptrtoint (i8** @global_var_48.821 to i32)
  %v3_b63d = inttoptr i32 %v2_b63d to i32*
  store i32 %v1_b63a, i32* %v3_b63d, align 4
  %v0_b640 = load i32, i32* %eax.global-to-local, align 4
  %v1_b640 = load i32, i32* @ebx, align 4
  %v2_b640 = add i32 %v1_b640, 76
  %v3_b640 = inttoptr i32 %v2_b640 to i32*
  store i32 %v0_b640, i32* %v3_b640, align 4
  %v0_b643 = load i32, i32* @esi, align 4
  %v1_b643 = add i32 %v0_b643, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_b643 = inttoptr i32 %v1_b643 to i32*
  %v3_b643 = load i32, i32* %v2_b643, align 4
  store i32 %v3_b643, i32* %edx.global-to-local, align 4
  %v1_b646 = icmp eq i32 %v3_b643, 0
  br i1 %v1_b646, label %dec_label_pc_b68a, label %dec_label_pc_b64a

dec_label_pc_b64a:                                ; preds = %dec_label_pc_b612
  %v0_b64a = load i32, i32* %eax.global-to-local, align 4
  store i32 %v1_b633, i32* %eax.global-to-local, align 4
  %v3_b659 = call i32 @unknown_16940(i32 %v1_b633, i32 %v3_b643, i32 %v0_b64a)
  store i32 %v3_b659, i32* %eax.global-to-local, align 4
  %v1_b65e = load i32, i32* @ebx, align 4
  %v2_b65e = add i32 %v1_b65e, ptrtoint (i32* @global_var_44.841 to i32)
  %v3_b65e = inttoptr i32 %v2_b65e to i32*
  store i32 %v3_b659, i32* %v3_b65e, align 4
  %v0_b661 = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b66a

dec_label_pc_b66a:                                ; preds = %dec_label_pc_b66a, %dec_label_pc_b64a
  %v0_b671 = phi i32 [ %v0_b661, %dec_label_pc_b64a ], [ %v3_b66a, %dec_label_pc_b66a ]
  %v1_b66a = add i32 %v0_b671, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b66a = inttoptr i32 %v1_b66a to i32*
  %v3_b66a = load i32, i32* %v2_b66a, align 4
  store i32 %v3_b66a, i32* %edx.global-to-local, align 4
  %v1_b66d = icmp eq i32 %v3_b66a, 0
  %v1_b66f = icmp eq i1 %v1_b66d, false
  br i1 %v1_b66f, label %dec_label_pc_b66a, label %dec_label_pc_b671

dec_label_pc_b671:                                ; preds = %dec_label_pc_b66a
  %v1_b671 = load i32, i32* @ebx, align 4
  %v2_b671 = add i32 %v1_b671, ptrtoint (i8** @global_var_48.821 to i32)
  %v3_b671 = inttoptr i32 %v2_b671 to i32*
  store i32 %v0_b671, i32* %v3_b671, align 4
  %v0_b67a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_b67a25 = add i32 %v0_b67a.pre, 12
  %v2_b67a26 = inttoptr i32 %v1_b67a25 to i32*
  %v3_b67a27 = load i32, i32* %v2_b67a26, align 4
  store i32 %v3_b67a27, i32* %edx.global-to-local, align 4
  %v1_b67d28 = icmp eq i32 %v3_b67a27, 0
  %v1_b67f29 = icmp eq i1 %v1_b67d28, false
  br i1 %v1_b67f29, label %dec_label_pc_b678, label %dec_label_pc_b681

dec_label_pc_b678:                                ; preds = %dec_label_pc_b671, %dec_label_pc_b678
  %v3_b67a30 = phi i32 [ %v3_b67a, %dec_label_pc_b678 ], [ %v3_b67a27, %dec_label_pc_b671 ]
  store i32 %v3_b67a30, i32* %eax.global-to-local, align 4
  %v1_b67a = add i32 %v3_b67a30, 12
  %v2_b67a = inttoptr i32 %v1_b67a to i32*
  %v3_b67a = load i32, i32* %v2_b67a, align 4
  store i32 %v3_b67a, i32* %edx.global-to-local, align 4
  %v1_b67d = icmp eq i32 %v3_b67a, 0
  %v1_b67f = icmp eq i1 %v1_b67d, false
  br i1 %v1_b67f, label %dec_label_pc_b678, label %dec_label_pc_b681

dec_label_pc_b681:                                ; preds = %dec_label_pc_b678, %dec_label_pc_b671
  %v0_b681.lcssa = phi i32 [ %v0_b67a.pre, %dec_label_pc_b671 ], [ %v3_b67a30, %dec_label_pc_b678 ]
  %v1_b681 = load i32, i32* @ebx, align 4
  %v2_b681 = add i32 %v1_b681, 76
  %v3_b681 = inttoptr i32 %v2_b681 to i32*
  store i32 %v0_b681.lcssa, i32* %v3_b681, align 4
  %v0_b684 = load i32, i32* @esi, align 4
  %v1_b684 = add i32 %v0_b684, 80
  %v2_b684 = inttoptr i32 %v1_b684 to i32*
  %v3_b684 = load i32, i32* %v2_b684, align 4
  store i32 %v3_b684, i32* %eax.global-to-local, align 4
  %v1_b687 = load i32, i32* @ebx, align 4
  %v2_b687 = add i32 %v1_b687, 80
  %v3_b687 = inttoptr i32 %v2_b687 to i32*
  store i32 %v3_b684, i32* %v3_b687, align 4
  %v0_b68a.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_b68a

dec_label_pc_b68a:                                ; preds = %dec_label_pc_b681, %dec_label_pc_b612
  %v0_b68a = phi i32 [ %v0_b68a.pre, %dec_label_pc_b681 ], [ %v0_b643, %dec_label_pc_b612 ]
  %v1_b68a = add i32 %v0_b68a, ptrtoint (i32* @global_var_54.830 to i32)
  %v2_b68a = inttoptr i32 %v1_b68a to i32*
  %v3_b68a = load i32, i32* %v2_b68a, align 4
  %v0_b68d = load i32, i32* @ebx, align 4
  %v1_b68d = add i32 %v0_b68d, 88
  store i32 %v1_b68d, i32* @ebp, align 4
  %v2_b690 = add i32 %v0_b68d, ptrtoint (i32* @global_var_54.830 to i32)
  %v3_b690 = inttoptr i32 %v2_b690 to i32*
  store i32 %v3_b68a, i32* %v3_b690, align 4
  %v0_b693 = load i32, i32* @esi, align 4
  %v1_b693 = add i32 %v0_b693, 88
  store i32 %v1_b693, i32* %eax.global-to-local, align 4
  ret i32 %v1_b693

; uselistorder directives
  uselistorder i32 %v3_b67a, { 1, 2, 0 }
  uselistorder i32 %v3_b66a, { 1, 2, 0 }
  uselistorder i32 %v1_b633, { 1, 0 }
  uselistorder i32 %v3_b602, { 1, 2, 0 }
  uselistorder i32 %v3_b5f2, { 1, 2, 0 }
  uselistorder i32 %v1_b5b8, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 2, 0, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b678, { 1, 0 }
  uselistorder label %dec_label_pc_b600, { 1, 0 }
}

define i32 @function_b6d1() local_unnamed_addr {
dec_label_pc_b6d1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b6d4() local_unnamed_addr {
dec_label_pc_b6d4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b6eb() local_unnamed_addr {
dec_label_pc_b6eb:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b6ff() local_unnamed_addr {
dec_label_pc_b6ff:
  %eax.global-to-local = alloca i32, align 4
  %v0_b6ff = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b6ff
}

define i32 @function_b73a() local_unnamed_addr {
dec_label_pc_b73a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b744() local_unnamed_addr {
dec_label_pc_b744:
  %esi.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %zf.global-to-local = alloca i1, align 1
  %v0_b744 = load i1, i1* %sf.global-to-local, align 1
  br i1 %v0_b744, label %bb, label %dec_label_pc_b746

bb:                                               ; preds = %dec_label_pc_b744
  %v1_b744 = call i32 @function_b6d1()
  store i32 %v1_b744, i32* @eax, align 4
  br label %dec_label_pc_b746

dec_label_pc_b746:                                ; preds = %bb, %dec_label_pc_b744
  %v0_b746 = load i32, i32* %esi.global-to-local, align 4
  %v1_b746 = add i32 %v0_b746, ptrtoint (i8** @global_var_1.820 to i32)
  %tmp105 = xor i32 %v0_b746, -2147483648
  %v7_b746 = and i32 %v1_b746, %tmp105
  %v8_b746 = icmp slt i32 %v7_b746, 0
  %v9_b746 = icmp eq i32 %v1_b746, 0
  store i1 %v9_b746, i1* %zf.global-to-local, align 1
  %v10_b746 = icmp slt i32 %v1_b746, 0
  store i1 %v10_b746, i1* %sf.global-to-local, align 1
  store i32 %v1_b746, i32* %esi.global-to-local, align 4
  br i1 %v8_b746, label %bb106, label %dec_label_pc_b749

bb106:                                            ; preds = %dec_label_pc_b746
  %v1_b747 = call i32 @function_b6d4()
  store i32 %v1_b747, i32* @eax, align 4
  %v0_b749.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_b74a.pre = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_b74a.pre, label %bb107, label %dec_label_pc_b74c

dec_label_pc_b749:                                ; preds = %dec_label_pc_b746
  br i1 %v9_b746, label %bb107, label %dec_label_pc_b749.dec_label_pc_b749.dec_label_pc_b74c_crit_edge_crit_edge

dec_label_pc_b749.dec_label_pc_b749.dec_label_pc_b74c_crit_edge_crit_edge: ; preds = %dec_label_pc_b749
  %v3_b74c.pre.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_b74c

bb107:                                            ; preds = %bb106, %dec_label_pc_b749
  %v0_b7497 = phi i32 [ %v0_b749.pre, %bb106 ], [ 0, %dec_label_pc_b749 ]
  %v3_b74a = call i32 @function_b77d(i32 %v0_b7497)
  br label %dec_label_pc_b74c

dec_label_pc_b74c:                                ; preds = %bb106, %dec_label_pc_b749.dec_label_pc_b749.dec_label_pc_b74c_crit_edge_crit_edge, %bb107
  %v3_b74c = phi i32 [ %v3_b74a, %bb107 ], [ %v3_b74c.pre.pre, %dec_label_pc_b749.dec_label_pc_b749.dec_label_pc_b74c_crit_edge_crit_edge ], [ %v1_b747, %bb106 ]
  %v2_b74c = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v4_b74c = sext i8 %v2_b74c to i32
  %v6_b74c = mul i32 %v4_b74c, %v3_b74c
  %v11_b74c = and i32 %v6_b74c, 65535
  %v13_b74c = and i32 %v3_b74c, -65536
  %v14_b74c = or i32 %v11_b74c, %v13_b74c
  ret i32 %v14_b74c

; uselistorder directives
  uselistorder i32 %v3_b74c, { 1, 0 }
  uselistorder i32 %v1_b746, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_b74c, { 2, 1, 0 }
  uselistorder label %bb107, { 1, 0 }
}

define i32 @function_b762(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b762:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v2_b762 = load i32, i32* %ecx.global-to-local, align 4
  %v3_b762 = add i32 %v2_b762, ptrtoint (i8** @global_var_1.820 to i32)
  %v18_b762 = inttoptr i32 %v2_b762 to i32*
  store i32 %v3_b762, i32* %v18_b762, align 4
  %v3_b769 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_b769 = icmp eq i32 %v3_b769, 0
  store i32 %v3_b769, i32* @eax, align 4
  %v0_b770 = load i32, i32* %ebp.global-to-local, align 4
  %v1_b770 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b770 = add i32 %v1_b770, ptrtoint (i32* @global_var_74.845 to i32)
  %v3_b770 = inttoptr i32 %v2_b770 to i32*
  store i32 %v0_b770, i32* %v3_b770, align 4
  %v1_b773 = icmp eq i1 %v4_b769, false
  br i1 %v1_b773, label %bb, label %dec_label_pc_b762.dec_label_pc_b775_crit_edge

dec_label_pc_b762.dec_label_pc_b775_crit_edge:    ; preds = %dec_label_pc_b762
  %v0_b77c.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_b775

bb:                                               ; preds = %dec_label_pc_b762
  %v2_b773 = call i32 @function_b7c4()
  br label %dec_label_pc_b775

dec_label_pc_b775:                                ; preds = %dec_label_pc_b762.dec_label_pc_b775_crit_edge, %bb
  %v0_b77c = phi i32 [ %v0_b77c.pre, %dec_label_pc_b762.dec_label_pc_b775_crit_edge ], [ %v2_b773, %bb ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_b77c

; uselistorder directives
  uselistorder label %dec_label_pc_b775, { 1, 0 }
}

define i32 @function_b77d(i32 %arg1) local_unnamed_addr {
dec_label_pc_b77d:
  %v3_b780 = load i32, i32* @eax, align 4
  ret i32 %v3_b780
}

define i32 @function_b788() local_unnamed_addr {
dec_label_pc_b788:
  %v0_b78a = call i32 @function_b73a()
  ret i32 %v0_b78a
}

define i32 @function_b798() local_unnamed_addr {
dec_label_pc_b798:
  %v0_b79a = call i32 @function_b6eb()
  ret i32 %v0_b79a
}

define i32 @function_b7b0() local_unnamed_addr {
dec_label_pc_b7b0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b7c0() local_unnamed_addr {
dec_label_pc_b7c0:
  %v0_b7c2 = call i32 @function_b7b0()
  ret i32 %v0_b7c2
}

define i32 @function_b7c4() local_unnamed_addr {
dec_label_pc_b7c4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b7d3() local_unnamed_addr {
dec_label_pc_b7d3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b7db() local_unnamed_addr {
dec_label_pc_b7db:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b7ee() local_unnamed_addr {
dec_label_pc_b7ee:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_b809() local_unnamed_addr {
dec_label_pc_b809:
  %v0_b80b = call i32 @function_b7d3()
  ret i32 %v0_b80b
}

define i32 @function_b80d() local_unnamed_addr {
dec_label_pc_b80d:
  %v0_b80f = call i32 @function_b7db()
  ret i32 %v0_b80f
}

define i32 @function_b811() local_unnamed_addr {
dec_label_pc_b811:
  %v0_b813 = call i32 @function_b7ee()
  ret i32 %v0_b813
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEEaSERKS5_(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_b820:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_b820 = load i32, i32* %esi.global-to-local, align 4
  %v0_b821 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v12_b839 = icmp eq i32 %arg1, %arg2
  br i1 %v12_b839, label %dec_label_pc_b8aa, label %dec_label_pc_b83d

dec_label_pc_b83d:                                ; preds = %dec_label_pc_b820
  %v1_b83d = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b83d = inttoptr i32 %v1_b83d to i32*
  %v3_b83d = load i32, i32* %v2_b83d, align 4
  store i32 %v3_b83d, i32* %eax.global-to-local, align 4
  %v2_b847 = call i32 @unknown_15a30(i32 %arg1, i32 %v3_b83d)
  %v0_b84c = load i32, i32* %ebx.global-to-local, align 4
  %v1_b84c = add i32 %v0_b84c, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_b84c, i32* %eax.global-to-local, align 4
  %v2_b84f = add i32 %v0_b84c, 12
  %v3_b84f = inttoptr i32 %v2_b84f to i32*
  store i32 %v1_b84c, i32* %v3_b84f, align 4
  %v0_b852 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b852 = add i32 %v0_b852, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b852 = inttoptr i32 %v1_b852 to i32*
  store i32 0, i32* %v2_b852, align 4
  %v0_b859 = load i32, i32* %eax.global-to-local, align 4
  %v1_b859 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b859 = add i32 %v1_b859, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b859 = inttoptr i32 %v2_b859 to i32*
  store i32 %v0_b859, i32* %v3_b859, align 4
  %v0_b85c = load i32, i32* %ebx.global-to-local, align 4
  %v1_b85c = add i32 %v0_b85c, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b85c = inttoptr i32 %v1_b85c to i32*
  store i32 0, i32* %v2_b85c, align 4
  %v0_b863 = load i32, i32* %esi.global-to-local, align 4
  %v1_b863 = add i32 %v0_b863, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b863 = inttoptr i32 %v1_b863 to i32*
  %v3_b863 = load i32, i32* %v2_b863, align 4
  %v1_b866 = icmp eq i32 %v3_b863, 0
  br i1 %v1_b866, label %dec_label_pc_b8aa, label %dec_label_pc_b86a

dec_label_pc_b86a:                                ; preds = %dec_label_pc_b83d
  %v0_b86a = load i32, i32* %eax.global-to-local, align 4
  %v0_b872 = load i32, i32* %ebx.global-to-local, align 4
  %v4_b875 = call i32 @unknown_16c00(i32 %v0_b872, i32 %v3_b863, i32 %v0_b86a)
  store i32 %v4_b875, i32* %eax.global-to-local, align 4
  %v2_b87a = add i32 %v0_b872, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_b87a = inttoptr i32 %v2_b87a to i32*
  store i32 %v4_b875, i32* %v3_b87a, align 4
  %v0_b87d = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_b88a

dec_label_pc_b88a:                                ; preds = %dec_label_pc_b88a, %dec_label_pc_b86a
  %v0_b891 = phi i32 [ %v0_b87d, %dec_label_pc_b86a ], [ %v3_b88a, %dec_label_pc_b88a ]
  %v1_b88a = add i32 %v0_b891, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_b88a = inttoptr i32 %v1_b88a to i32*
  %v3_b88a = load i32, i32* %v2_b88a, align 4
  %v1_b88d = icmp eq i32 %v3_b88a, 0
  %v1_b88f = icmp eq i1 %v1_b88d, false
  br i1 %v1_b88f, label %dec_label_pc_b88a, label %dec_label_pc_b891

dec_label_pc_b891:                                ; preds = %dec_label_pc_b88a
  %v1_b891 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b891 = add i32 %v1_b891, 12
  %v3_b891 = inttoptr i32 %v2_b891 to i32*
  store i32 %v0_b891, i32* %v3_b891, align 4
  %v0_b89a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_b89a114 = add i32 %v0_b89a.pre, 12
  %v2_b89a115 = inttoptr i32 %v1_b89a114 to i32*
  %v3_b89a116 = load i32, i32* %v2_b89a115, align 4
  %v1_b89d117 = icmp eq i32 %v3_b89a116, 0
  %v1_b89f118 = icmp eq i1 %v1_b89d117, false
  br i1 %v1_b89f118, label %dec_label_pc_b898, label %dec_label_pc_b8a1

dec_label_pc_b898:                                ; preds = %dec_label_pc_b891, %dec_label_pc_b898
  %v3_b89a119 = phi i32 [ %v3_b89a, %dec_label_pc_b898 ], [ %v3_b89a116, %dec_label_pc_b891 ]
  store i32 %v3_b89a119, i32* %eax.global-to-local, align 4
  %v1_b89a = add i32 %v3_b89a119, 12
  %v2_b89a = inttoptr i32 %v1_b89a to i32*
  %v3_b89a = load i32, i32* %v2_b89a, align 4
  %v1_b89d = icmp eq i32 %v3_b89a, 0
  %v1_b89f = icmp eq i1 %v1_b89d, false
  br i1 %v1_b89f, label %dec_label_pc_b898, label %dec_label_pc_b8a1

dec_label_pc_b8a1:                                ; preds = %dec_label_pc_b898, %dec_label_pc_b891
  %v0_b8a1.lcssa = phi i32 [ %v0_b89a.pre, %dec_label_pc_b891 ], [ %v3_b89a119, %dec_label_pc_b898 ]
  %v1_b8a1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b8a1 = add i32 %v1_b8a1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_b8a1 = inttoptr i32 %v2_b8a1 to i32*
  store i32 %v0_b8a1.lcssa, i32* %v3_b8a1, align 4
  %v0_b8a4 = load i32, i32* %esi.global-to-local, align 4
  %v1_b8a4 = add i32 %v0_b8a4, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_b8a4 = inttoptr i32 %v1_b8a4 to i32*
  %v3_b8a4 = load i32, i32* %v2_b8a4, align 4
  store i32 %v3_b8a4, i32* %eax.global-to-local, align 4
  %v1_b8a7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_b8a7 = add i32 %v1_b8a7, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_b8a7 = inttoptr i32 %v2_b8a7 to i32*
  store i32 %v3_b8a4, i32* %v3_b8a7, align 4
  br label %dec_label_pc_b8aa

dec_label_pc_b8aa:                                ; preds = %dec_label_pc_b8a1, %dec_label_pc_b83d, %dec_label_pc_b820
  %v0_b8b5 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_b8b5, i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_b8bf, label %dec_label_pc_b8b9

dec_label_pc_b8b9:                                ; preds = %dec_label_pc_b8aa
  store i32 %v0_b821, i32* %ebx.global-to-local, align 4
  store i32 %v0_b820, i32* %esi.global-to-local, align 4
  ret i32 %v0_b8b5

dec_label_pc_b8bf:                                ; preds = %dec_label_pc_b8aa
  ret i32 %v0_b8b5

; uselistorder directives
  uselistorder i32 %v0_b8b5, { 1, 0, 2 }
  uselistorder i32 %v3_b89a, { 1, 0 }
  uselistorder i32 %v3_b88a, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_b898, { 1, 0 }
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE10_M_insert_EPKSt18_Rb_tree_node_baseSD_RKS4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_b8d0:
  store i32 %arg5, i32* @edx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_b8fb = icmp eq i32 %arg3, 0
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_b8fb, label %bb, label %dec_label_pc_b910

bb:                                               ; preds = %dec_label_pc_b8d0
  %v3_b90a = call i32 @function_b9b8(i32 sext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32))
  br label %dec_label_pc_b910

dec_label_pc_b910:                                ; preds = %bb, %dec_label_pc_b8d0
  %v2_b914 = phi i32 [ %v3_b90a, %bb ], [ %arg3, %dec_label_pc_b8d0 ]
  ret i32 %v2_b914
}

define i32 @function_b928() local_unnamed_addr {
dec_label_pc_b928:
  %eax.global-to-local = alloca i32, align 4
  %v0_b928 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_b928
}

define i32 @function_b92c() local_unnamed_addr {
dec_label_pc_b92c:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_b92c = load i32, i32* %ecx.global-to-local, align 4
  %v1_b92c = trunc i32 %v0_b92c to i8
  %v3_b92c = add i32 %v0_b92c, 1116409923
  %v4_b92c = inttoptr i32 %v3_b92c to i8*
  %v5_b92c = load i8, i8* %v4_b92c, align 1
  %v6_b92c = add i8 %v1_b92c, %v5_b92c
  %v21_b92c = zext i8 %v6_b92c to i32
  %v23_b92c = and i32 %v0_b92c, -256
  %v24_b92c = or i32 %v21_b92c, %v23_b92c
  store i32 %v24_b92c, i32* %ecx.global-to-local, align 4
  %v0_b932 = load i32, i32* %eax.global-to-local, align 4
  %v1_b932 = trunc i32 %v0_b932 to i8
  %v2_b932 = add i8 %v1_b932, ptrtoint (i8* @global_var_89.942 to i8)
  %v6_b932 = icmp ult i8 %v2_b932, %v1_b932
  %v0_b934 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b934 = add i32 %v0_b934, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b934, i32* %ebx.global-to-local, align 4
  %v3_b935 = zext i1 %v6_b932 to i8
  %v4_b935 = add i8 %v1_b932, add (i8 ptrtoint (i8* @global_var_89.942 to i8), i8 -117)
  %v5_b935 = add i8 %v4_b935, %v3_b935
  %v22_b935 = icmp ule i8 %v5_b935, %v2_b932
  %v23_b935 = icmp ugt i8 %v2_b932, 116
  %v24_b935 = select i1 %v6_b932, i1 %v22_b935, i1 %v23_b935
  store i1 %v24_b935, i1* %cf.global-to-local, align 1
  %v25_b935 = zext i8 %v5_b935 to i32
  %v27_b935 = and i32 %v0_b932, -256
  %v28_b935 = or i32 %v25_b935, %v27_b935
  store i32 %v28_b935, i32* %eax.global-to-local, align 4
  %v0_b937 = load i32, i32* %edx.global-to-local, align 4
  %v1_b937 = add i32 %v0_b937, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b937, i32* %edx.global-to-local, align 4
  %v1_b938 = add i32 %v24_b92c, 1116411971
  %v2_b938 = inttoptr i32 %v1_b938 to i8*
  %v3_b938 = load i8, i8* %v2_b938, align 1
  %v6_b938 = or i8 %v3_b938, %v6_b92c
  store i8 %v6_b938, i8* %v2_b938, align 1
  %v0_b93e = load i32, i32* %eax.global-to-local, align 4
  %v1_b93e = trunc i32 %v0_b93e to i8
  %v2_b93e = or i8 %v1_b93e, -119
  %v0_b940 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b940 = add i32 %v0_b940, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b940, i32* %ebx.global-to-local, align 4
  %v4_b941 = add nsw i8 %v2_b93e, 117
  %v17_b941 = icmp ult i8 %v2_b93e, -117
  store i1 %v17_b941, i1* %cf.global-to-local, align 1
  %v31_b941 = zext i8 %v4_b941 to i32
  %v33_b941 = and i32 %v0_b93e, -256
  %v34_b941 = or i32 %v31_b941, %v33_b941
  store i32 %v34_b941, i32* %eax.global-to-local, align 4
  %v0_b943 = load i32, i32* %edx.global-to-local, align 4
  %v1_b943 = add i32 %v0_b943, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b943, i32* %edx.global-to-local, align 4
  %v0_b944 = load i32, i32* %ecx.global-to-local, align 4
  %v1_b944 = add i32 %v0_b944, 1116414019
  %v2_b944 = inttoptr i32 %v1_b944 to i8*
  %v3_b944 = load i8, i8* %v2_b944, align 1
  %v5_b944 = trunc i32 %v0_b944 to i8
  %v7_b944 = zext i1 %v17_b941 to i8
  %v8_b944 = add i8 %v3_b944, %v5_b944
  %v9_b944 = add i8 %v8_b944, %v7_b944
  %v27_b944 = icmp ule i8 %v9_b944, %v3_b944
  %v28_b944 = icmp ult i8 %v8_b944, %v3_b944
  %v29_b944 = select i1 %v17_b941, i1 %v27_b944, i1 %v28_b944
  store i1 %v29_b944, i1* %cf.global-to-local, align 1
  store i8 %v9_b944, i8* %v2_b944, align 1
  %v0_b94a = load i32, i32* %eax.global-to-local, align 4
  %v2_b94a = load i1, i1* %cf.global-to-local, align 1
  %v3_b94a = zext i1 %v2_b94a to i32
  %v4_b94a = add i32 %v0_b94a, 137
  %v5_b94a = add i32 %v4_b94a, %v3_b94a
  %v0_b94c = load i32, i32* %ebx.global-to-local, align 4
  %v1_b94c = add i32 %v0_b94c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b94c, i32* %ebx.global-to-local, align 4
  %v2_b94d = and i32 %v5_b94a, 139
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_b94d = and i32 %v0_b94a, -256
  %v11_b94d = or i32 %v2_b94d, %v10_b94d
  store i32 %v11_b94d, i32* %eax.global-to-local, align 4
  %v0_b94f = load i32, i32* %edx.global-to-local, align 4
  %v1_b94f = add i32 %v0_b94f, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_b94f, i32* %edx.global-to-local, align 4
  %v0_b950 = load i32, i32* %ecx.global-to-local, align 4
  %v1_b950 = add i32 %v0_b950, 1116416067
  %v2_b950 = inttoptr i32 %v1_b950 to i8*
  %v3_b950 = load i8, i8* %v2_b950, align 1
  %v5_b950 = trunc i32 %v0_b950 to i8
  %v8_b950 = sub i8 %v3_b950, %v5_b950
  %v23_b950 = icmp ult i8 %v3_b950, %v5_b950
  store i1 %v23_b950, i1* %cf.global-to-local, align 1
  store i8 %v8_b950, i8* %v2_b950, align 1
  %v0_b956 = load i32, i32* %eax.global-to-local, align 4
  %v1_b956 = trunc i32 %v0_b956 to i8
  %v2_b956 = load i1, i1* %cf.global-to-local, align 1
  %v3_b956 = zext i1 %v2_b956 to i32
  %v4_b956 = add i32 %v0_b956, 125
  %v5_b956 = add i32 %v4_b956, %v3_b956
  %v17_b956 = icmp ult i8 %v1_b956, -125
  %v18_b956 = or i1 %v2_b956, %v17_b956
  store i1 %v18_b956, i1* %cf.global-to-local, align 1
  %v31_b956 = and i32 %v5_b956, 255
  %v33_b956 = and i32 %v0_b956, -256
  %v34_b956 = or i32 %v31_b956, %v33_b956
  store i32 %v34_b956, i32* %eax.global-to-local, align 4
  ret i32 %v34_b956

; uselistorder directives
  uselistorder i1 %v2_b956, { 1, 0 }
  uselistorder i32 %v0_b956, { 1, 0, 2 }
  uselistorder i32 %v0_b94a, { 1, 0 }
  uselistorder i8 %v9_b944, { 1, 0 }
  uselistorder i8 %v8_b944, { 1, 0 }
  uselistorder i1 %v17_b941, { 1, 0, 2 }
  uselistorder i8 %v2_b93e, { 1, 0 }
  uselistorder i8 %v5_b935, { 1, 0 }
  uselistorder i1 %v6_b932, { 1, 0 }
  uselistorder i8 -117, { 1, 0 }
}

define i32 @function_b987(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_b987:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_b987 = load i32, i32* %ecx.global-to-local, align 4
  %v1_b987 = add i32 %v0_b987, 340165624
  %v2_b987 = inttoptr i32 %v1_b987 to i32*
  %v3_b987 = load i32, i32* %v2_b987, align 4
  %v4_b987 = add i32 %v3_b987, -1
  store i32 %v4_b987, i32* %v2_b987, align 4
  %v0_b98d = load i32, i32* %ebx.global-to-local, align 4
  %v1_b98d = add i32 %v0_b98d, 1697391700
  %v2_b98d = inttoptr i32 %v1_b98d to i32*
  %v3_b98d = load i32, i32* %v2_b98d, align 4
  %v4_b98d = load i32, i32* %ecx.global-to-local, align 4
  %v5_b98d = add i32 %v4_b98d, %v3_b98d
  store i32 %v5_b98d, i32* %v2_b98d, align 4
  %v0_b993 = load i32, i32* %edx.global-to-local, align 4
  %v3_b993 = xor i32 %v0_b993, ptrtoint ([2 x i8]* @2 to i32)
  %v4_b993 = icmp eq i32 %v3_b993, 0
  store i32 %v3_b993, i32* %edx.global-to-local, align 4
  %v0_b999 = load i32, i32* %ebx.global-to-local, align 4
  %v1_b999 = load i32, i32* %edi.global-to-local, align 4
  %v2_b999 = inttoptr i32 %v1_b999 to i32*
  store i32 %v0_b999, i32* %v2_b999, align 4
  %v1_b99b = icmp eq i1 %v4_b993, false
  br i1 %v1_b99b, label %bb, label %dec_label_pc_b987.dec_label_pc_b99d_crit_edge

dec_label_pc_b987.dec_label_pc_b99d_crit_edge:    ; preds = %dec_label_pc_b987
  %v0_b9b0.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_b99d

bb:                                               ; preds = %dec_label_pc_b987
  %v2_b99b = call i32 @function_b9e7()
  br label %dec_label_pc_b99d

dec_label_pc_b99d:                                ; preds = %dec_label_pc_b987.dec_label_pc_b99d_crit_edge, %bb
  %v0_b9b0 = phi i32 [ %v0_b9b0.pre, %dec_label_pc_b987.dec_label_pc_b99d_crit_edge ], [ %v2_b99b, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %edi.global-to-local, align 4
  ret i32 %v0_b9b0

; uselistorder directives
  uselistorder label %dec_label_pc_b99d, { 1, 0 }
}

define i32 @function_b9b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_b9b8:
  %v0_b9b8 = load i32, i32* @esi, align 4
  %v0_b9bb = load i32, i32* @ebp, align 4
  %v1_b9c3 = add i32 %v0_b9bb, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v0_b9c6 = load i32, i32* @edx, align 4
  %v4_b9d5 = call i32 @unknown_165e0(i32 %v0_b9b8, i32 %v0_b9c6, i32 %v1_b9c3)
  ret i32 %v4_b9d5
}

define i32 @function_b9e7() local_unnamed_addr {
dec_label_pc_b9e7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ba02() local_unnamed_addr {
dec_label_pc_ba02:
  %eax.global-to-local = alloca i32, align 4
  %v0_ba02 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ba02
}

define i32 @_ZNSt8_Rb_treeI7uint256St4pairIKS0_6CAlertESt10_Select1stIS4_ESt4lessIS0_ESaIS4_EE16_M_insert_uniqueERKS4_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ba10:
  %tmp74 = ptrtoint i32* %arg1 to i32
  %stack_var_-252 = alloca i8*, align 4
  %v0_ba11 = load i32, i32* @edi, align 4
  %v16_ba14 = ptrtoint i8** %stack_var_-252 to i32
  %v1_ba43 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ba43 = inttoptr i32 %v1_ba43 to i32*
  %v3_ba43 = load i32, i32* %v2_ba43, align 4
  %v1_ba4e = icmp eq i32 %v3_ba43, 0
  br i1 %v1_ba4e, label %dec_label_pc_bc4d, label %dec_label_pc_ba56

dec_label_pc_ba56:                                ; preds = %dec_label_pc_ba10
  %v1_ba5d = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ba5d = inttoptr i32 %v1_ba5d to i32*
  %v3_ba5d = load i32, i32* %v2_ba5d, align 4
  store i32 %v3_ba5d, i32* @edi, align 4
  %v3_bb10 = add i32 %v16_ba14, ptrtoint (i32* @global_var_7c.835 to i32)
  %v3_bb14 = add i32 %v16_ba14, 92
  br label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_bb34, %dec_label_pc_ba56
  %v0_baa6 = phi i32 [ %v0_bb34, %dec_label_pc_bb34 ], [ %v3_ba43, %dec_label_pc_ba56 ]
  br label %dec_label_pc_bb10

dec_label_pc_bb10:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_ba88
  %v0_bb1c = phi i32 [ %v1_bb1c, %dec_label_pc_bb1c ], [ 7, %dec_label_pc_ba88 ]
  %v2_bb10 = mul nuw nsw i32 %v0_bb1c, 4
  %v4_bb10 = add i32 %v3_bb10, %v2_bb10
  %v5_bb10 = inttoptr i32 %v4_bb10 to i32*
  %v6_bb10 = load i32, i32* %v5_bb10, align 4
  %v4_bb14 = add i32 %v3_bb14, %v2_bb10
  %v5_bb14 = inttoptr i32 %v4_bb14 to i32*
  %v6_bb14 = load i32, i32* %v5_bb14, align 4
  %v13_bb14 = icmp ult i32 %v6_bb14, %v6_bb10
  br i1 %v13_bb14, label %dec_label_pc_bb40, label %dec_label_pc_bb1a

dec_label_pc_bb1a:                                ; preds = %dec_label_pc_bb10
  %v18_bb14 = icmp eq i32 %v6_bb14, %v6_bb10
  br i1 %v18_bb14, label %dec_label_pc_bb1c, label %dec_label_pc_bb24

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bb1a
  %v1_bb1c = add nsw i32 %v0_bb1c, -1
  %v5_bb1c = icmp eq i32 %v0_bb1c, 0
  %v1_bb22 = icmp eq i1 %v5_bb1c, false
  br i1 %v1_bb22, label %dec_label_pc_bb10, label %dec_label_pc_bb24

dec_label_pc_bb24:                                ; preds = %dec_label_pc_bb1a, %dec_label_pc_bb1c
  %v1_bb2d = add i32 %v0_baa6, 12
  %v2_bb2d = inttoptr i32 %v1_bb2d to i32*
  %v3_bb2d = load i32, i32* %v2_bb2d, align 4
  %v1_bb30 = icmp eq i32 %v3_bb2d, 0
  br i1 %v1_bb30, label %dec_label_pc_bb50, label %dec_label_pc_bb34

dec_label_pc_bb34:                                ; preds = %dec_label_pc_bb40, %dec_label_pc_bb24
  %v0_bb34 = phi i32 [ %v3_bb49, %dec_label_pc_bb40 ], [ %v3_bb2d, %dec_label_pc_bb24 ]
  br label %dec_label_pc_ba88

dec_label_pc_bb40:                                ; preds = %dec_label_pc_bb10
  %v1_bb49 = add i32 %v0_baa6, 8
  %v2_bb49 = inttoptr i32 %v1_bb49 to i32*
  %v3_bb49 = load i32, i32* %v2_bb49, align 4
  %v1_bb4c = icmp eq i32 %v3_bb49, 0
  %v1_bb4e = icmp eq i1 %v1_bb4c, false
  br i1 %v1_bb4e, label %dec_label_pc_bb34, label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb40, %dec_label_pc_bb24
  %stack_var_-185.0 = phi i8 [ ptrtoint (i8** @global_var_1.820 to i8), %dec_label_pc_bb40 ], [ 0, %dec_label_pc_bb24 ]
  %v10_bb50 = icmp eq i8 %stack_var_-185.0, 0
  %v1_bb59 = icmp eq i1 %v10_bb50, false
  br i1 %v1_bb59, label %dec_label_pc_bc58, label %dec_label_pc_bb5f

dec_label_pc_bb5f:                                ; preds = %dec_label_pc_bb50
  store i32 %v0_baa6, i32* @edx, align 4
  store i32 7, i32* @ecx, align 4
  br label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bc16.dec_label_pc_bc00_crit_edge, %dec_label_pc_bb5f
  %v0_bc2222 = phi i32 [ %v0_bc22, %dec_label_pc_bc16.dec_label_pc_bc00_crit_edge ], [ %v0_baa6, %dec_label_pc_bb5f ]
  %v1_bc07 = phi i32 [ %v1_bc16, %dec_label_pc_bc16.dec_label_pc_bc00_crit_edge ], [ 7, %dec_label_pc_bb5f ]
  %v0_bc07 = phi i32 [ %v0_bc00.pre, %dec_label_pc_bc16.dec_label_pc_bc00_crit_edge ], [ %v16_ba14, %dec_label_pc_bb5f ]
  %v2_bc00 = mul i32 %v1_bc07, 4
  %v3_bc00 = add i32 %v0_bc07, ptrtoint (i32* @global_var_bc.941 to i32)
  %v4_bc00 = add i32 %v3_bc00, %v2_bc00
  %v5_bc00 = inttoptr i32 %v4_bc00 to i32*
  %v6_bc00 = load i32, i32* %v5_bc00, align 4
  %v3_bc07 = add i32 %v0_bc07, 156
  %v4_bc07 = add i32 %v3_bc07, %v2_bc00
  %v5_bc07 = inttoptr i32 %v4_bc07 to i32*
  %v6_bc07 = load i32, i32* %v5_bc07, align 4
  %v13_bc07 = icmp ult i32 %v6_bc07, %v6_bc00
  %v18_bc07 = icmp eq i32 %v6_bc07, %v6_bc00
  br i1 %v13_bc07, label %bb, label %dec_label_pc_bc14

bb:                                               ; preds = %dec_label_pc_bc00
  %v1_bc0e = call i32 @function_bcab()
  %v0_bc14.pre = load i1, i1* @cf, align 1
  %v1_bc14.pre = load i1, i1* @zf, align 1
  br label %dec_label_pc_bc14

dec_label_pc_bc14:                                ; preds = %bb, %dec_label_pc_bc00
  %v0_bc22 = phi i32 [ %v1_bc0e, %bb ], [ %v0_bc2222, %dec_label_pc_bc00 ]
  %v1_bc14 = phi i1 [ %v1_bc14.pre, %bb ], [ %v18_bc07, %dec_label_pc_bc00 ]
  %v0_bc14 = phi i1 [ %v0_bc14.pre, %bb ], [ false, %dec_label_pc_bc00 ]
  %v2_bc14 = or i1 %v1_bc14, %v0_bc14
  br i1 %v2_bc14, label %dec_label_pc_bc16, label %dec_label_pc_bc1e

dec_label_pc_bc16:                                ; preds = %dec_label_pc_bc14
  %v0_bc16 = load i32, i32* @ecx, align 4
  %v1_bc16 = add i32 %v0_bc16, -1
  %v5_bc16 = icmp eq i32 %v0_bc16, 0
  store i32 %v1_bc16, i32* @ecx, align 4
  %v1_bc1c = icmp eq i1 %v5_bc16, false
  br i1 %v1_bc1c, label %dec_label_pc_bc16.dec_label_pc_bc00_crit_edge, label %dec_label_pc_bc1e

dec_label_pc_bc16.dec_label_pc_bc00_crit_edge:    ; preds = %dec_label_pc_bc16
  %v0_bc00.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_bc00

dec_label_pc_bc1e:                                ; preds = %dec_label_pc_bc14, %dec_label_pc_bc16
  store i32 %v0_bc22, i32* %arg1, align 4
  %v1_bc24 = add i32 %tmp74, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_bc24 = inttoptr i32 %v1_bc24 to i8*
  store i8 0, i8* %v2_bc24, align 1
  store i32 %tmp74, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb82, label %dec_label_pc_bc40

bb82:                                             ; preds = %dec_label_pc_bc1e
  %v2_bc3a = call i32 @function_bd0f()
  br label %dec_label_pc_bc40

dec_label_pc_bc40:                                ; preds = %bb82, %dec_label_pc_bc1e
  %v0_bc4a = phi i32 [ %v2_bc3a, %bb82 ], [ %tmp74, %dec_label_pc_bc1e ]
  store i32 %v0_ba11, i32* @edi, align 4
  ret i32 %v0_bc4a

dec_label_pc_bc4d:                                ; preds = %dec_label_pc_ba10
  %v1_bc51 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  br label %dec_label_pc_bc58

dec_label_pc_bc58:                                ; preds = %dec_label_pc_bc4d, %dec_label_pc_bb50
  %stack_var_-212.0.in = phi i32 [ %v1_bc51, %dec_label_pc_bc4d ], [ %v0_baa6, %dec_label_pc_bb50 ]
  %v4_bc6d27 = phi i32 [ 0, %dec_label_pc_bc4d ], [ %v0_baa6, %dec_label_pc_bb50 ]
  %v2_bc60 = add i32 %arg2, 12
  %v3_bc60 = inttoptr i32 %v2_bc60 to i32*
  %v4_bc60 = load i32, i32* %v3_bc60, align 4
  %v15_bc60 = icmp eq i32 %stack_var_-212.0.in, %v4_bc60
  br i1 %v15_bc60, label %bb85, label %dec_label_pc_bc69

bb85:                                             ; preds = %dec_label_pc_bc58
  %v1_bc63 = call i32 @function_bcf1()
  br label %dec_label_pc_bc69

dec_label_pc_bc69:                                ; preds = %bb85, %dec_label_pc_bc58
  %v4_bc6d = phi i32 [ %v1_bc63, %bb85 ], [ %v4_bc6d27, %dec_label_pc_bc58 ]
  ret i32 %v4_bc6d

; uselistorder directives
  uselistorder i32 %v1_bc16, { 1, 0 }
  uselistorder i32 %v2_bc00, { 1, 0 }
  uselistorder i32 %v3_bb49, { 1, 0 }
  uselistorder i32 %v0_bb1c, { 1, 0, 2 }
  uselistorder i32 %v0_baa6, { 3, 0, 2, 1, 5, 4 }
  uselistorder i32 %v16_ba14, { 2, 0, 1 }
  uselistorder i32 %tmp74, { 1, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bc1e, { 1, 0 }
  uselistorder label %dec_label_pc_bb24, { 1, 0 }
}

define x86_fp80 @function_bc74(i32 %arg1) local_unnamed_addr {
dec_label_pc_bc74:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %st0.global-to-local = alloca x86_fp80, align 4
  %v0_bc74 = load i32, i32* %ebx.global-to-local, align 4
  %v1_bc74 = add i32 %v0_bc74, -1992547236
  %v2_bc74 = inttoptr i32 %v1_bc74 to i32*
  %v3_bc74 = load i32, i32* %v2_bc74, align 4
  %v4_bc74 = sub i32 %v3_bc74, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_bc74, i32* %v2_bc74, align 4
  %v1_bc7a = load i32, i32* %ebx.global-to-local, align 4
  %v2_bc7a = add i32 %v1_bc7a, 273320747
  %v3_bc7a = inttoptr i32 %v2_bc7a to i32*
  %v4_bc7a = load i32, i32* %v3_bc7a, align 4
  %v5_bc7a = sitofp i32 %v4_bc7a to x86_fp80
  %v6_bc7a = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v7_bc7a = fmul x86_fp80 %v6_bc7a, %v5_bc7a
  store x86_fp80 %v7_bc7a, x86_fp80* %st0.global-to-local, align 4
  %v0_bc80 = load i32, i32* %edx.global-to-local, align 4
  %v1_bc80 = add i32 %v0_bc80, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_bc80 = inttoptr i32 %v1_bc80 to i32*
  %v3_bc80 = load i32, i32* %v2_bc80, align 4
  store i32 %v3_bc80, i32* %edx.global-to-local, align 4
  %v1_bc89 = add i32 %v1_bc7a, 12
  %v2_bc89 = inttoptr i32 %v1_bc89 to i32*
  %v3_bc89 = load i32, i32* %v2_bc89, align 4
  store i32 %v3_bc89, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_bc9f = add i32 %arg1, 28
  %v2_bc9f = inttoptr i32 %v1_bc9f to i32*
  %v3_bc9f = load i32, i32* %v2_bc9f, align 4
  store i32 %v3_bc9f, i32* %edx.global-to-local, align 4
  ret x86_fp80 %v7_bc7a

; uselistorder directives
  uselistorder x86_fp80* %st0.global-to-local, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_bcab() local_unnamed_addr {
dec_label_pc_bcab:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_76 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v0_bcab = load i32, i32* @edx, align 4
  %v2_bcb3 = ptrtoint i32* %stack_var_76 to i32
  store i32 %v2_bcb3, i32* %eax.global-to-local, align 4
  store i32 %v0_bcab, i32* @ecx, align 4
  %v5_bcd6 = call i32 @unknown_172e0(i32 %v2_bcb3, i32 %tmp9, i32 0, i32 %v0_bcab, i32 %tmp7)
  %v0_bcdb = load i32, i32* @esp, align 4
  %v5_bcdb = icmp ult i32 %v0_bcdb, 4
  store i1 %v5_bcdb, i1* @cf, align 1
  %v10_bcdb = icmp eq i32 %v0_bcdb, 4
  store i1 %v10_bcdb, i1* @zf, align 1
  %v2_bce6 = inttoptr i32 %tmp to i32*
  %v0_bce8 = load i32, i32* @edx, align 4
  %v1_bce8 = add i32 %v0_bce8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_bce8 = inttoptr i32 %v1_bce8 to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_bce8, align 1
  %v0_bcec = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bcec
}

define i32 @function_bcf1() local_unnamed_addr {
dec_label_pc_bcf1:
  %stack_var_76 = alloca i32, align 4
  %v2_bcf5 = ptrtoint i32* %stack_var_76 to i32
  ret i32 %v2_bcf5
}

define i32 @function_bd0f() local_unnamed_addr {
dec_label_pc_bd0f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPKSt18_Rb_tree_node_baseSB_RKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_bd20:
  store i32 %arg5, i32* @edi, align 4
  %v1_bd5d = icmp eq i32 %arg3, 0
  br i1 %v1_bd5d, label %bb, label %dec_label_pc_bd65

bb:                                               ; preds = %dec_label_pc_bd20
  %v3_bd5f = call i32 @function_bde8(i32 sext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32))
  br label %dec_label_pc_bd65

dec_label_pc_bd65:                                ; preds = %bb, %dec_label_pc_bd20
  %v2_bd65 = phi i32 [ %v3_bd5f, %bb ], [ %arg3, %dec_label_pc_bd20 ]
  ret i32 %v2_bd65
}

define i32 @function_bd72() local_unnamed_addr {
dec_label_pc_bd72:
  %eax.global-to-local = alloca i32, align 4
  %v0_bd72 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bd72
}

define i32 @function_bdb9(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_bdb9:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_bdb9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_bdb9 = add i32 %v0_bdb9, 340165608
  %v2_bdb9 = inttoptr i32 %v1_bdb9 to i32*
  %v3_bdb9 = load i32, i32* %v2_bdb9, align 4
  %v4_bdb9 = add i32 %v3_bdb9, -1
  store i32 %v4_bdb9, i32* %v2_bdb9, align 4
  %v0_bdbf = load i32, i32* %ebx.global-to-local, align 4
  %v1_bdbf = add i32 %v0_bdbf, 1698440276
  %v2_bdbf = inttoptr i32 %v1_bdbf to i32*
  %v3_bdbf = load i32, i32* %v2_bdbf, align 4
  %v4_bdbf = load i32, i32* %ecx.global-to-local, align 4
  %v5_bdbf = add i32 %v4_bdbf, %v3_bdbf
  store i32 %v5_bdbf, i32* %v2_bdbf, align 4
  %v0_bdc5 = load i32, i32* %edx.global-to-local, align 4
  %v3_bdc5 = xor i32 %v0_bdc5, ptrtoint ([2 x i8]* @2 to i32)
  %v4_bdc5 = icmp eq i32 %v3_bdc5, 0
  store i32 %v3_bdc5, i32* %edx.global-to-local, align 4
  %v0_bdcb = load i32, i32* %ebx.global-to-local, align 4
  %v1_bdcb = load i32, i32* %ebp.global-to-local, align 4
  %v2_bdcb = inttoptr i32 %v1_bdcb to i32*
  store i32 %v0_bdcb, i32* %v2_bdcb, align 4
  %v1_bdce = icmp eq i1 %v4_bdc5, false
  br i1 %v1_bdce, label %bb, label %dec_label_pc_bdb9.dec_label_pc_bdd0_crit_edge

dec_label_pc_bdb9.dec_label_pc_bdd0_crit_edge:    ; preds = %dec_label_pc_bdb9
  %v0_bde3.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_bdd0

bb:                                               ; preds = %dec_label_pc_bdb9
  %v2_bdce = call i32 @function_be32()
  br label %dec_label_pc_bdd0

dec_label_pc_bdd0:                                ; preds = %dec_label_pc_bdb9.dec_label_pc_bdd0_crit_edge, %bb
  %v0_bde3 = phi i32 [ %v0_bde3.pre, %dec_label_pc_bdb9.dec_label_pc_bdd0_crit_edge ], [ %v2_bdce, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  ret i32 %v0_bde3

; uselistorder directives
  uselistorder label %dec_label_pc_bdd0, { 1, 0 }
}

define i32 @function_bde8(i32 %arg1) local_unnamed_addr {
dec_label_pc_bde8:
  %v2_bdf9 = load i32, i32* @edi, align 4
  ret i32 %v2_bdf9
}

define i32 @function_be1c() local_unnamed_addr {
dec_label_pc_be1c:
  %eax.global-to-local = alloca i32, align 4
  %v4_be1c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_be1c
}

define i32 @function_be1e(i32 %arg1) local_unnamed_addr {
dec_label_pc_be1e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_be1f = load i32, i32* %eax.global-to-local, align 4
  %v11_be1f = and i32 %v0_be1f, or (i32 zext (i8 ptrtoint ([6 x i8]* @global_var_10.833 to i8) to i32), i32 -256)
  %v1_be21 = icmp eq i32 %v11_be1f, 0
  %v2_be23 = load i32, i32* %ebx.global-to-local, align 4
  %v3_be23 = select i1 %v1_be21, i32 %v2_be23, i32 %v11_be1f
  %v2_be26 = lshr i32 %v3_be23, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_be26, i32* %eax.global-to-local, align 4
  ret i32 %v2_be26

; uselistorder directives
  uselistorder i32 %v11_be1f, { 1, 0 }
}

define i32 @function_be32() local_unnamed_addr {
dec_label_pc_be32:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_be47() local_unnamed_addr {
dec_label_pc_be47:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_be5c() local_unnamed_addr {
dec_label_pc_be5c:
  %v0_be5c = call i32 @function_be47()
  ret i32 %v0_be5c
}

define i32 @function_be5f() local_unnamed_addr {
dec_label_pc_be5f:
  %eax.global-to-local = alloca i32, align 4
  %v0_be5f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_be5f
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE16_M_insert_uniqueERKS2_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_be70:
  store i32 0, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_be9f = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_be9f = inttoptr i32 %v1_be9f to i32*
  %v3_be9f = load i32, i32* %v2_be9f, align 4
  store i32 %v3_be9f, i32* @edi, align 4
  %v1_bea2 = icmp eq i32 %v3_be9f, 0
  br i1 %v1_bea2, label %bb, label %dec_label_pc_beaa

bb:                                               ; preds = %dec_label_pc_be70
  %tmp119 = ptrtoint i32* %arg3 to i32
  %v4_bea4 = call i32 @function_bf65(i32 %arg1, i32 %arg2, i32 %tmp119)
  %v0_bece.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_beaa

dec_label_pc_beaa:                                ; preds = %bb, %dec_label_pc_be70
  %v0_bece.pre = phi i32 [ %v0_bece.pre.pre, %bb ], [ %v3_be9f, %dec_label_pc_be70 ]
  %v2_beae = load i32, i32* %arg3, align 4
  %v1_beb4 = add i32 %v2_beae, -12
  %v2_beb4 = inttoptr i32 %v1_beb4 to i32*
  %v3_beb4 = load i32, i32* %v2_beb4, align 4
  store i32 %v3_beb4, i32* @esi, align 4
  %v1_befb = icmp eq i32 %v2_beae, 0
  br label %dec_label_pc_bece

dec_label_pc_bec0:                                ; preds = %dec_label_pc_bece
  %v1_bec0 = add i32 %v0_bf11, 8
  %v2_bec0 = inttoptr i32 %v1_bec0 to i32*
  %v3_bec0 = load i32, i32* %v2_bec0, align 4
  %v1_bec8 = icmp eq i32 %v3_bec0, 0
  br i1 %v1_bec8, label %dec_label_pc_bf0d, label %dec_label_pc_becc

dec_label_pc_becc:                                ; preds = %dec_label_pc_bec0, %dec_label_pc_bf04
  %v0_becc = phi i32 [ %v3_bec0, %dec_label_pc_bec0 ], [ %v3_bf04, %dec_label_pc_bf04 ]
  store i32 %v0_becc, i32* @edi, align 4
  br label %dec_label_pc_bece

dec_label_pc_bece:                                ; preds = %dec_label_pc_becc, %dec_label_pc_beaa
  %v0_bf11 = phi i32 [ %v0_becc, %dec_label_pc_becc ], [ %v0_bece.pre, %dec_label_pc_beaa ]
  %v1_bece = add i32 %v0_bf11, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_bece = inttoptr i32 %v1_bece to i32*
  %v3_bece = load i32, i32* %v2_bece, align 4
  %v1_bed5 = add i32 %v3_bece, -12
  %v2_bed5 = inttoptr i32 %v1_bed5 to i32*
  %v3_bed5 = load i32, i32* %v2_bed5, align 4
  store i32 %v3_bed5, i32* @ebx, align 4
  %tmp128 = icmp ule i32 %v3_beb4, %v3_bed5
  %v5_bee3 = select i1 %tmp128, i32 %v3_beb4, i32 %v3_bed5
  %v2_bef9 = sub i32 %v3_beb4, %v3_bed5
  %v3_befd = select i1 %v1_befb, i32 %v2_bef9, i32 %v2_beae
  %v2_bf00 = icmp slt i32 %v3_befd, 0
  br i1 %v2_bf00, label %dec_label_pc_bec0, label %dec_label_pc_bf04

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bece
  %v1_bf04 = add i32 %v0_bf11, 12
  %v2_bf04 = inttoptr i32 %v1_bf04 to i32*
  %v3_bf04 = load i32, i32* %v2_bf04, align 4
  %v1_bf09 = icmp eq i32 %v3_bf04, 0
  %v1_bf0b = icmp eq i1 %v1_bf09, false
  br i1 %v1_bf0b, label %dec_label_pc_becc, label %dec_label_pc_bf0d

dec_label_pc_bf0d:                                ; preds = %dec_label_pc_bec0, %dec_label_pc_bf04
  %v0_bf0d = phi i8 [ ptrtoint (i8** @global_var_1.820 to i8), %dec_label_pc_bec0 ], [ 0, %dec_label_pc_bf04 ]
  %v5_bf0d = icmp eq i8 %v0_bf0d, 0
  store i32 %v5_bee3, i32* @eax, align 4
  %v1_bf13 = icmp eq i1 %v5_bf0d, false
  br i1 %v1_bf13, label %bb129, label %dec_label_pc_bf15

bb129:                                            ; preds = %dec_label_pc_bf0d
  %v2_bf13 = call i32 @function_bf70()
  br label %dec_label_pc_bf15

dec_label_pc_bf15:                                ; preds = %bb129, %dec_label_pc_bf0d
  ret i32 %v2_beae

; uselistorder directives
  uselistorder i32 %v3_bf04, { 1, 0 }
  uselistorder i32 %v3_bed5, { 0, 2, 1, 3 }
  uselistorder i32 %v0_bf11, { 1, 2, 0 }
  uselistorder i32 %v0_becc, { 1, 0 }
  uselistorder i32 %v3_beb4, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_bf0d, { 1, 0 }
  uselistorder label %dec_label_pc_becc, { 1, 0 }
}

define i32 @function_bf2e() local_unnamed_addr {
dec_label_pc_bf2e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_bf2e = load i32, i32* %ebx.global-to-local, align 4
  %v1_bf2e = add i32 %v0_bf2e, -2060966828
  %v2_bf2e = inttoptr i32 %v1_bf2e to i32*
  %v3_bf2e = load i32, i32* %v2_bf2e, align 4
  %v4_bf2e = sub i32 %v3_bf2e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_bf2e, i32* %v2_bf2e, align 4
  %v2_bf34 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_bf34 = lshr i8 %v2_bf34, ptrtoint (i8** @global_var_4.814 to i8)
  %v4_bf34 = mul i8 %v2_bf34, 16
  %v5_bf34 = or i8 %v3_bf34, %v4_bf34
  %v6_bf34 = load i32, i32* %edi.global-to-local, align 4
  %v7_bf34 = inttoptr i32 %v6_bf34 to i8*
  store i8 %v5_bf34, i8* %v7_bf34, align 1
  %v0_bf37 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_bf37
}

define i32 @function_bf46() local_unnamed_addr {
dec_label_pc_bf46:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_bf4a = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_bf55 = icmp eq i1 %v4_bf4a, false
  br i1 %v1_bf55, label %bb, label %dec_label_pc_bf5b

bb:                                               ; preds = %dec_label_pc_bf46
  %v2_bf55 = call i32 @function_bfe6()
  br label %dec_label_pc_bf5b

dec_label_pc_bf5b:                                ; preds = %bb, %dec_label_pc_bf46
  %v0_bf62 = phi i32 [ %v2_bf55, %bb ], [ %tmp10, %dec_label_pc_bf46 ]
  ret i32 %v0_bf62
}

define i32 @function_bf65(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bf65:
  %v0_bf65 = load i32, i32* @edx, align 4
  %v1_bf67 = add i32 %v0_bf65, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_bf67, i32* @edi, align 4
  %v1_bf6a = load i32, i32* @eax, align 4
  ret i32 %v1_bf6a
}

define i32 @function_bf70() local_unnamed_addr {
dec_label_pc_bf70:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_bf74 = load i32, i32* @edi, align 4
  %v2_bf74 = add i32 %tmp2, 12
  %v3_bf74 = inttoptr i32 %v2_bf74 to i32*
  %v4_bf74 = load i32, i32* %v3_bf74, align 4
  %v15_bf74 = icmp eq i32 %v0_bf74, %v4_bf74
  br i1 %v15_bf74, label %bb, label %dec_label_pc_bf70.dec_label_pc_bf79_crit_edge

dec_label_pc_bf70.dec_label_pc_bf79_crit_edge:    ; preds = %dec_label_pc_bf70
  %v3_bf79.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_bf79

bb:                                               ; preds = %dec_label_pc_bf70
  %v1_bf77 = call i32 @function_bfa8()
  br label %dec_label_pc_bf79

dec_label_pc_bf79:                                ; preds = %dec_label_pc_bf70.dec_label_pc_bf79_crit_edge, %bb
  %v3_bf79 = phi i32 [ %v3_bf79.pre, %dec_label_pc_bf70.dec_label_pc_bf79_crit_edge ], [ %v1_bf77, %bb ]
  ret i32 %v3_bf79

; uselistorder directives
  uselistorder label %dec_label_pc_bf79, { 1, 0 }
}

define i32 @function_bf80() local_unnamed_addr {
dec_label_pc_bf80:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_bf80 = load i32, i32* %ecx.global-to-local, align 4
  %v1_bf80 = add i32 %v0_bf80, 608472002
  %v2_bf80 = inttoptr i32 %v1_bf80 to i32*
  %v3_bf80 = load i32, i32* %v2_bf80, align 4
  %v4_bf80 = add i32 %v3_bf80, -1
  store i32 %v4_bf80, i32* %v2_bf80, align 4
  %v0_bf8c = load i32, i32* %ebp.global-to-local, align 4
  %v1_bf8c = add i32 %v0_bf8c, -12
  %v2_bf8c = inttoptr i32 %v1_bf8c to i32*
  %v3_bf8c = load i32, i32* %v2_bf8c, align 4
  %v0_bf8f = load i32, i32* %eax.global-to-local, align 4
  %v1_bf8f = add i32 %v0_bf8f, -12
  %v2_bf8f = inttoptr i32 %v1_bf8f to i32*
  %v3_bf8f = load i32, i32* %v2_bf8f, align 4
  %tmp98 = icmp ule i32 %v3_bf8f, %v3_bf8c
  %v5_bf9a = select i1 %tmp98, i32 %v3_bf8f, i32 %v3_bf8c
  store i32 %v5_bf9a, i32* %eax.global-to-local, align 4
  ret i32 %v5_bf9a

; uselistorder directives
  uselistorder i32 %v3_bf8f, { 1, 0 }
  uselistorder i32 %v3_bf8c, { 1, 0 }
}

define i32 @function_bfa8() local_unnamed_addr {
dec_label_pc_bfa8:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_60 = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v2_bfac = ptrtoint i32* %stack_var_60 to i32
  %v0_bfb3 = load i32, i32* @edi, align 4
  %v5_bfcb = call i32 @unknown_17b90(i32 %v2_bfac, i32 %tmp3, i32 0, i32 %v0_bfb3, i32 %tmp9)
  %v2_bfdb = inttoptr i32 %tmp to i32*
  %v0_bfdd = load i32, i32* %edx.global-to-local, align 4
  %v1_bfdd = add i32 %v0_bfdd, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_bfdd = inttoptr i32 %v1_bfdd to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_bfdd, align 1
  %v0_bfe1 = call i32 @function_bf46()
  ret i32 %v0_bfe1
}

define i32 @function_bfe6() local_unnamed_addr {
dec_label_pc_bfe6:
  %v0_bfe6 = load i32, i32* @eax, align 4
  ret i32 %v0_bfe6
}

define i32 @_ZNSt8_Rb_treeISsSt4pairIKSsSsESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_bff0:
  store i32 %arg2, i32* @ebp, align 4
  %v1_c01d = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v12_c020 = icmp eq i32 %v1_c01d, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_c020, label %bb, label %dec_label_pc_c03b

bb:                                               ; preds = %dec_label_pc_bff0
  %v3_c035 = call i32 @function_c1f8(i32* %arg4)
  br label %dec_label_pc_c03b

dec_label_pc_c03b:                                ; preds = %dec_label_pc_bff0, %bb
  %v3_c071 = phi i32 [ %v3_c035, %bb ], [ %v1_c01d, %dec_label_pc_bff0 ]
  ret i32 %v3_c071

; uselistorder directives
  uselistorder i32 %v1_c01d, { 1, 0 }
  uselistorder label %dec_label_pc_c03b, { 1, 0 }
}

define i32 @function_c10b() local_unnamed_addr {
dec_label_pc_c10b:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_c10f = xor i32 %tmp6, ptrtoint ([2 x i8]* @2 to i32)
  %v4_c10f = icmp eq i32 %v3_c10f, 0
  store i32 %v3_c10f, i32* @ecx, align 4
  %v0_c116 = load i32, i32* @edi, align 4
  store i32 %v0_c116, i32* @eax, align 4
  %v1_c118 = icmp eq i1 %v4_c10f, false
  br i1 %v1_c118, label %bb, label %dec_label_pc_c11e

bb:                                               ; preds = %dec_label_pc_c10b
  %v2_c118 = call i32 @function_c2e2()
  br label %dec_label_pc_c11e

dec_label_pc_c11e:                                ; preds = %bb, %dec_label_pc_c10b
  %v0_c131 = phi i32 [ %v2_c118, %bb ], [ %v0_c116, %dec_label_pc_c10b ]
  ret i32 %v0_c131
}

define i32 @function_c172() local_unnamed_addr {
dec_label_pc_c172:
  %v0_c172 = call i32 @function_89000000()
  ret i32 %v0_c172
}

define i32 @function_c1a6(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c1a6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_c1a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_c1a6 = add i32 %v0_c1a6, 724837452
  %v2_c1a6 = inttoptr i32 %v1_c1a6 to i32*
  %v3_c1a6 = load i32, i32* %v2_c1a6, align 4
  %v4_c1a6 = add i32 %v3_c1a6, -1
  store i32 %v4_c1a6, i32* %v2_c1a6, align 4
  %v0_c1ad = load i32, i32* %eax.global-to-local, align 4
  %v11_c1ad = and i32 %v0_c1ad, or (i32 zext (i8 ptrtoint (i32* @global_var_38.831 to i8) to i32), i32 -256)
  %v1_c1af = icmp eq i32 %v11_c1ad, 0
  %v2_c1b1 = load i32, i32* %ebx.global-to-local, align 4
  %v3_c1b1 = select i1 %v1_c1af, i32 %v2_c1b1, i32 %v11_c1ad
  store i32 %v3_c1b1, i32* %eax.global-to-local, align 4
  %v2_c1b4 = icmp slt i32 %v3_c1b1, 0
  %v1_c1b6 = icmp eq i1 %v2_c1b4, false
  br i1 %v1_c1b6, label %bb, label %dec_label_pc_c1bc

bb:                                               ; preds = %dec_label_pc_c1a6
  %v2_c1b6 = call i32 @function_c288()
  store i32 %v2_c1b6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %bb, %dec_label_pc_c1a6
  %v0_c1bc = load i32, i32* @esi, align 4
  %v1_c1bc = add i32 %v0_c1bc, 12
  %v2_c1bc = inttoptr i32 %v1_c1bc to i32*
  %v3_c1bc = load i32, i32* %v2_c1bc, align 4
  store i32 %v3_c1bc, i32* %eax.global-to-local, align 4
  %v1_c1bf = icmp eq i32 %v3_c1bc, 0
  br i1 %v1_c1bf, label %bb106, label %dec_label_pc_c1c7

bb106:                                            ; preds = %dec_label_pc_c1bc
  %v1_c1c1 = call i32 @function_c2b0()
  store i32 %v1_c1c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c1c7

dec_label_pc_c1c7:                                ; preds = %bb106, %dec_label_pc_c1bc
  %v0_c1cf = load i32, i32* @ecx, align 4
  %v0_c1db = load i32, i32* @edi, align 4
  %v2_c1de = call i32 @unknown_17d10(i32 %v0_c1db, i32 %v0_c1cf)
  store i32 %v2_c1de, i32* %eax.global-to-local, align 4
  %v0_c1e6 = call i32 @function_c10b()
  store i32 %v0_c1e6, i32* %eax.global-to-local, align 4
  ret i32 %v0_c1e6

; uselistorder directives
  uselistorder i32 %v11_c1ad, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
}

define i32 @function_c1f0() local_unnamed_addr {
dec_label_pc_c1f0:
  %v1_c1f0 = load i32, i32* @edi, align 4
  %v2_c1f0 = inttoptr i32 %v1_c1f0 to i32*
  %v0_c1f2 = call i32 @function_c10b()
  ret i32 %v0_c1f2
}

define i32 @function_c1f8(i32* %arg1) local_unnamed_addr {
dec_label_pc_c1f8:
  %v0_c1f8 = load i32, i32* @ebp, align 4
  %v1_c1f8 = add i32 %v0_c1f8, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_c1f8 = inttoptr i32 %v1_c1f8 to i32*
  %v3_c1f8 = load i32, i32* %v2_c1f8, align 4
  %v1_c1fb = icmp eq i32 %v3_c1f8, 0
  br i1 %v1_c1fb, label %bb, label %dec_label_pc_c1ff

bb:                                               ; preds = %dec_label_pc_c1f8
  %v1_c1fd = call i32 @function_c238()
  %v0_c1ff.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_c1ff

dec_label_pc_c1ff:                                ; preds = %bb, %dec_label_pc_c1f8
  %v0_c1ff = phi i32 [ %v0_c1ff.pre, %bb ], [ %v0_c1f8, %dec_label_pc_c1f8 ]
  %v1_c1ff = add i32 %v0_c1ff, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_c1ff = inttoptr i32 %v1_c1ff to i32*
  %v3_c1ff = load i32, i32* %v2_c1ff, align 4
  %v1_c206 = add i32 %v3_c1ff, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_c206 = inttoptr i32 %v1_c206 to i32*
  %v3_c206 = load i32, i32* %v2_c206, align 4
  %v2_c20d = load i32, i32* %arg1, align 4
  %v1_c212 = add i32 %v2_c20d, -12
  %v2_c212 = inttoptr i32 %v1_c212 to i32*
  %v3_c212 = load i32, i32* %v2_c212, align 4
  store i32 %v3_c212, i32* @esi, align 4
  ret i32 %v3_c206
}

define i32 @function_c22f() local_unnamed_addr {
dec_label_pc_c22f:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_c22f = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_c22f = lshr i8 %v2_c22f, ptrtoint (i8** @global_var_4.814 to i8)
  %v4_c22f = mul i8 %v2_c22f, 16
  %v5_c22f = or i8 %v3_c22f, %v4_c22f
  %v6_c22f = load i32, i32* %edi.global-to-local, align 4
  %v7_c22f = inttoptr i32 %v6_c22f to i8*
  store i8 %v5_c22f, i8* %v7_c22f, align 1
  %v0_c232 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c232
}

define i32 @function_c238() local_unnamed_addr {
dec_label_pc_c238:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_c23c = ptrtoint i32* %stack_var_72 to i32
  %v2_c24b = call i32 @unknown_17e60(i32 %v2_c23c, i32 %tmp6)
  %v1_c257 = load i32, i32* @edi, align 4
  %v2_c257 = inttoptr i32 %v1_c257 to i32*
  %v0_c259 = call i32 @function_c10b()
  ret i32 %v0_c259
}

define i32 @function_c26c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c26c:
  %v0_c278 = load i32, i32* @edi, align 4
  %v2_c27b = call i32 @unknown_17d10(i32 %v0_c278, i32 0)
  %v0_c283 = call i32 @function_c10b()
  ret i32 %v0_c283
}

define i32 @function_c288() local_unnamed_addr {
dec_label_pc_c288:
  %stack_var_72 = alloca i32, align 4
  %v2_c28c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_c28c
}

define i32 @function_c298(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_c298:
  %v2_c2a8 = call i32 @function_c26c(i32 %arg1, i32 %arg2)
  ret i32 %v2_c2a8
}

define i32 @function_c2b0() local_unnamed_addr {
dec_label_pc_c2b0:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_c2b4 = load i32, i32* @esi, align 4
  %v2_c2bc = call i32 @function_c26c(i32 %v0_c2b4, i32 %tmp2)
  ret i32 %v2_c2bc
}

define i32 @function_c2be(i32 %arg1) local_unnamed_addr {
dec_label_pc_c2be:
  %eax.global-to-local = alloca i32, align 4
  %v0_c2c6 = load i32, i32* %eax.global-to-local, align 4
  %v0_c2d2 = load i32, i32* @edi, align 4
  %v2_c2d5 = call i32 @unknown_17d10(i32 %v0_c2d2, i32 %v0_c2c6)
  store i32 %v2_c2d5, i32* %eax.global-to-local, align 4
  %v0_c2dd = call i32 @function_c10b()
  store i32 %v0_c2dd, i32* %eax.global-to-local, align 4
  ret i32 %v0_c2dd

; uselistorder directives
  uselistorder i32 ()* @function_c10b, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @unknown_17d10, { 2, 1, 0 }
}

define i32 @function_c2e2() local_unnamed_addr {
dec_label_pc_c2e2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt3mapISsSsSt4lessISsESaISt4pairIKSsSsEEEixERS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c2f0:
  %v1_c31b = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_c31b = inttoptr i32 %v1_c31b to i32*
  %v3_c31b = load i32, i32* %v2_c31b, align 4
  %v1_c325 = icmp eq i32 %v3_c31b, 0
  br i1 %v1_c325, label %bb, label %dec_label_pc_c32d

bb:                                               ; preds = %dec_label_pc_c2f0
  %v1_c31e = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %tmp111 = ptrtoint i32* %arg2 to i32
  %v5_c327 = call i32 @function_c43b(i32 %arg1, i32 %v1_c31e, i32 %tmp111)
  br label %dec_label_pc_c32d

dec_label_pc_c32d:                                ; preds = %bb, %dec_label_pc_c2f0
  %v1_c353 = add i32 %v3_c31b, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_c353 = inttoptr i32 %v1_c353 to i32*
  %v3_c353 = load i32, i32* %v2_c353, align 4
  ret i32 %v3_c353

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_c382(i32 %arg1) local_unnamed_addr {
dec_label_pc_c382:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* @ebx, align 4
  %v15_c386 = icmp eq i32 %tmp5, %arg1
  br i1 %v15_c386, label %bb, label %dec_label_pc_c38c

bb:                                               ; preds = %dec_label_pc_c382
  %v1_c38a = call i32 @function_c3b8()
  %v0_c38c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %bb, %dec_label_pc_c382
  %v0_c38c = phi i32 [ %v0_c38c.pre, %bb ], [ %arg1, %dec_label_pc_c382 ]
  %v1_c38c = add i32 %v0_c38c, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_c38c = inttoptr i32 %v1_c38c to i32*
  %v3_c38c = load i32, i32* %v2_c38c, align 4
  ret i32 %v3_c38c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_c3b8() local_unnamed_addr {
dec_label_pc_c3b8:
  %stack_var_44 = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_52 = alloca i32, align 4
  %stack_var_48 = alloca i32, align 4
  %v2_c3bc = ptrtoint i32* %stack_var_48 to i32
  %v2_c3d8 = ptrtoint i32* %stack_var_52 to i32
  store i32 %v2_c3d8, i32* @ebp, align 4
  %v2_c3ec = ptrtoint i32* %stack_var_44 to i32
  %v0_c3f4 = load i32, i32* @ebx, align 4
  %v4_c3ff = call i32 @unknown_182e0(i32 %v2_c3ec, i32 %tmp4, i32 %v0_c3f4, i32 %v2_c3bc)
  ret i32 %v4_c3ff
}

define i32 @function_c41b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_c41b:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_c41b = load i32, i32* %edi.global-to-local, align 4
  %v4_c427 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v0_c42e = load i32, i32* %ebx.global-to-local, align 4
  %v1_c42e = add i32 %v0_c42e, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_c42e, i32* @eax, align 4
  %v1_c431 = icmp eq i1 %v4_c427, false
  br i1 %v1_c431, label %bb, label %dec_label_pc_c433

bb:                                               ; preds = %dec_label_pc_c41b
  %v3_c431 = call i32 @function_c444(i32 %v0_c41b)
  br label %dec_label_pc_c433

dec_label_pc_c433:                                ; preds = %bb, %dec_label_pc_c41b
  %v0_c43a = phi i32 [ %v3_c431, %bb ], [ %v1_c42e, %dec_label_pc_c41b ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  ret i32 %v0_c43a
}

define i32 @function_c43b(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_c43b:
  store i32 %arg1, i32* @ebx, align 4
  %v0_c43f = call i32 @function_c3b8()
  ret i32 %v0_c43f
}

define i32 @function_c444(i32 %arg1) local_unnamed_addr {
dec_label_pc_c444:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c44a() local_unnamed_addr {
dec_label_pc_c44a:
  %eax.global-to-local = alloca i32, align 4
  %v0_c44a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c44a
}

define i32 @function_c453() local_unnamed_addr {
dec_label_pc_c453:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_c464() local_unnamed_addr {
dec_label_pc_c464:
  %eax.global-to-local = alloca i32, align 4
  %v0_c464 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_c464
}

define i32 @function_c475() local_unnamed_addr {
dec_label_pc_c475:
  %v0_c475 = call i32 @function_c453()
  ret i32 %v0_c475
}

define i32 @function_c477() local_unnamed_addr {
dec_label_pc_c477:
  %v0_c47d = call i32 @function_c453()
  ret i32 %v0_c47d

; uselistorder directives
  uselistorder i32 ()* @function_c453, { 1, 0 }
}

define i32 @_ZSt4copyISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_c480:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp148 = ptrtoint i32* %arg1 to i32
  %v0_c480 = load i32, i32* %ebp.global-to-local, align 4
  %v0_c481 = load i32, i32* %edi.global-to-local, align 4
  %v0_c482 = load i32, i32* %esi.global-to-local, align 4
  %v0_c483 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v5_c4cd = sub i32 %arg6, %arg7
  store i32 %arg3, i32* %edi.global-to-local, align 4
  %v2_c4e6 = sdiv i32 %v5_c4cd, 4
  store i32 %arg10, i32* %esi.global-to-local, align 4
  %v3_c4f0 = mul i32 %v2_c4e6, -1431655765
  %v2_c511 = sub i32 %arg9, %arg5
  %v2_c513 = sdiv i32 %v2_c511, 4
  %v1_c516 = add nsw i32 %v2_c513, -1
  %v3_c519 = mul i32 %v1_c516, ptrtoint (i64* @global_var_2a.943 to i32)
  %v2_c528 = add i32 %v3_c519, %v3_c4f0
  store i32 %v2_c528, i32* %eax.global-to-local, align 4
  %v2_c52c = sub i32 %arg4, %arg2
  %v2_c52e = sdiv i32 %v2_c52c, 4
  %v3_c531 = mul i32 %v2_c52e, -1431655765
  %v2_c53f = add i32 %v3_c531, %v2_c528
  store i32 %v2_c53f, i32* %edx.global-to-local, align 4
  %tmp160 = icmp slt i32 %v2_c53f, 1
  br i1 %tmp160, label %dec_label_pc_c727, label %dec_label_pc_c54d

dec_label_pc_c54d:                                ; preds = %dec_label_pc_c480
  %v1_c54d = add i32 %arg10, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_c54d = inttoptr i32 %v1_c54d to i32*
  %v3_c54d = load i32, i32* %v2_c54d, align 4
  store i32 %v3_c54d, i32* %eax.global-to-local, align 4
  %v1_c550 = inttoptr i32 %arg10 to i32*
  %v2_c550 = load i32, i32* %v1_c550, align 4
  store i32 %v2_c550, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_c558

dec_label_pc_c558:                                ; preds = %dec_label_pc_c667.dec_label_pc_c558_crit_edge, %dec_label_pc_c54d
  %v0_c5ab = phi i32 [ %v2_c550, %dec_label_pc_c54d ], [ %v1_c55c.pre, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %v0_c55c = phi i32 [ %v3_c54d, %dec_label_pc_c54d ], [ %v0_c55c.pre, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %stack_var_-108.0 = phi i32 [ %arg2, %dec_label_pc_c54d ], [ %stack_var_-108.1, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %stack_var_-100.0 = phi i32 [ %arg3, %dec_label_pc_c54d ], [ %stack_var_-100.1, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %stack_var_-88.0 = phi i32 [ %arg4, %dec_label_pc_c54d ], [ %stack_var_-88.1, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %stack_var_-96.0 = phi i32 [ %arg5, %dec_label_pc_c54d ], [ %stack_var_-96.1, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %stack_var_-112.0.in = phi i32 [ %v2_c53f, %dec_label_pc_c54d ], [ %v6_c667, %dec_label_pc_c667.dec_label_pc_c558_crit_edge ]
  %v2_c55c = sub i32 %v0_c55c, %v0_c5ab
  %v5_c55e = sub i32 %stack_var_-88.0, %stack_var_-108.0
  %v2_c562 = sdiv i32 %v2_c55c, 4
  %v3_c569 = mul i32 %v2_c562, -1431655765
  %v2_c56f = sdiv i32 %v5_c55e, 4
  %v3_c572 = mul i32 %v2_c56f, -1431655765
  %v2_c578 = sub i32 %v3_c569, %v3_c572
  %v8_c578 = xor i32 %v3_c572, %v3_c569
  %v9_c578 = xor i32 %v2_c578, %v3_c569
  %v10_c578 = and i32 %v9_c578, %v8_c578
  %v11_c578 = icmp slt i32 %v10_c578, 0
  %v12_c578 = icmp eq i32 %v2_c578, 0
  %v13_c578 = icmp slt i32 %v2_c578, 0
  %v3_c57a = icmp ne i1 %v13_c578, %v11_c578
  %v4_c57a = or i1 %v12_c578, %v3_c57a
  %v7_c57a = select i1 %v4_c57a, i32 %v3_c569, i32 %v3_c572
  %v6_c57d = sub i32 %v7_c57a, %stack_var_-112.0.in
  %v12_c57d = xor i32 %v7_c57a, %stack_var_-112.0.in
  %v13_c57d = xor i32 %v6_c57d, %v7_c57a
  %v14_c57d = and i32 %v13_c57d, %v12_c57d
  %v15_c57d = icmp slt i32 %v14_c57d, 0
  %v16_c57d = icmp eq i32 %v6_c57d, 0
  %v17_c57d = icmp slt i32 %v6_c57d, 0
  %v3_c581 = icmp ne i1 %v17_c57d, %v15_c57d
  %v4_c581 = or i1 %v16_c57d, %v3_c581
  %v7_c581 = select i1 %v4_c581, i32 %v7_c57a, i32 %stack_var_-112.0.in
  store i32 %v7_c581, i32* %ebx.global-to-local, align 4
  %v2_c58b = mul i32 %v7_c581, 12
  store i32 %v2_c58b, i32* %eax.global-to-local, align 4
  %v2_c590 = sdiv i32 %v2_c58b, 4
  %v2_c593 = add i32 %v2_c58b, %stack_var_-108.0
  store i32 %v2_c593, i32* %edx.global-to-local, align 4
  %v3_c595 = mul i32 %v2_c590, -1431655765
  store i32 %v3_c595, i32* %ebp.global-to-local, align 4
  %tmp161 = icmp slt i32 %v3_c595, 1
  br i1 %tmp161, label %dec_label_pc_c5d7, label %dec_label_pc_c5a7

dec_label_pc_c5a7:                                ; preds = %dec_label_pc_c558
  store i32 %v0_c5ab, i32* %edi.global-to-local, align 4
  %v0_c5ad = load i32, i32* %esi.global-to-local, align 4
  store i32 %v7_c581, i32* %esi.global-to-local, align 4
  %v2_c5b3 = sub i32 %stack_var_-108.0, %v0_c5ab
  store i32 %v2_c5b3, i32* %eax.global-to-local, align 4
  store i32 %v2_c5b3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5b8.dec_label_pc_c5b8_crit_edge, %dec_label_pc_c5a7
  %v1_c5b8 = phi i32 [ %v1_c5b8.pre, %dec_label_pc_c5b8.dec_label_pc_c5b8_crit_edge ], [ %v2_c5b3, %dec_label_pc_c5a7 ]
  %v0_c5b8 = phi i32 [ %v0_c5b8.pre, %dec_label_pc_c5b8.dec_label_pc_c5b8_crit_edge ], [ %v0_c5ab, %dec_label_pc_c5a7 ]
  %v3_c5b8 = add i32 %v0_c5b8, %v1_c5b8
  store i32 %v3_c5b8, i32* %eax.global-to-local, align 4
  %v1_c5be = add i32 %v0_c5b8, 12
  store i32 %v1_c5be, i32* %edi.global-to-local, align 4
  %v2_c5c5 = call i32 @unknown_16ef0(i32 %v0_c5b8, i32 %v3_c5b8)
  store i32 %v2_c5c5, i32* %eax.global-to-local, align 4
  %v0_c5ca = load i32, i32* %ebp.global-to-local, align 4
  %v1_c5ca = add i32 %v0_c5ca, -1
  %v10_c5ca = icmp eq i32 %v1_c5ca, 0
  store i32 %v1_c5ca, i32* %ebp.global-to-local, align 4
  %v1_c5cd = icmp eq i1 %v10_c5ca, false
  br i1 %v1_c5cd, label %dec_label_pc_c5b8.dec_label_pc_c5b8_crit_edge, label %dec_label_pc_c5cf

dec_label_pc_c5b8.dec_label_pc_c5b8_crit_edge:    ; preds = %dec_label_pc_c5b8
  %v0_c5b8.pre = load i32, i32* %edi.global-to-local, align 4
  %v1_c5b8.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_c5b8

dec_label_pc_c5cf:                                ; preds = %dec_label_pc_c5b8
  %v0_c5cf = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_c5cf, i32* %ebx.global-to-local, align 4
  store i32 %v0_c5ad, i32* %esi.global-to-local, align 4
  %v1_c5d5 = inttoptr i32 %v0_c5ad to i32*
  %v2_c5d5 = load i32, i32* %v1_c5d5, align 4
  store i32 %v2_c5d5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_c5d7

dec_label_pc_c5d7:                                ; preds = %dec_label_pc_c5cf, %dec_label_pc_c558
  %v0_c643 = phi i32 [ %v2_c5d5, %dec_label_pc_c5cf ], [ %v0_c5ab, %dec_label_pc_c558 ]
  %v1_c651 = phi i32 [ %v0_c5cf, %dec_label_pc_c5cf ], [ %v7_c581, %dec_label_pc_c558 ]
  %v5_c5db = sub i32 %stack_var_-108.0, %stack_var_-100.0
  %v2_c5df = sdiv i32 %v5_c5db, 4
  %v3_c5e2 = mul i32 %v2_c5df, -1431655765
  %v2_c5e8 = add i32 %v1_c651, %v3_c5e2
  %v13_c5e8 = icmp slt i32 %v2_c5e8, 0
  %v18_c5e8 = sext i32 %v2_c5e8 to i64
  store i32 %v2_c5e8, i32* %edi.global-to-local, align 4
  br i1 %v13_c5e8, label %dec_label_pc_c710, label %dec_label_pc_c5f0

dec_label_pc_c5f0:                                ; preds = %dec_label_pc_c5d7
  store i32 %v2_c593, i32* %edx.global-to-local, align 4
  %v8_c5fb = icmp sgt i32 %v2_c5e8, 41
  br i1 %v8_c5fb, label %dec_label_pc_c5fd, label %dec_label_pc_c643

dec_label_pc_c5fd:                                ; preds = %dec_label_pc_c5f0
  %v5_c60a = mul nsw i64 %v18_c5e8, 818089009
  %v7_c60a = udiv i64 %v5_c60a, 4294967296
  %v8_c60a = trunc i64 %v7_c60a to i32
  %v2_c60e = ashr i32 %v2_c5e8, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_c60e, i32* %eax.global-to-local, align 4
  %v2_c611 = sdiv i32 %v8_c60a, 8
  store i32 %v2_c611, i32* %edx.global-to-local, align 4
  %v2_c614 = sub i32 %v2_c611, %v2_c60e
  br label %dec_label_pc_c616

dec_label_pc_c616:                                ; preds = %dec_label_pc_c710, %dec_label_pc_c5fd
  %storemerge5 = phi i32 [ -1, %dec_label_pc_c710 ], [ %v2_c614, %dec_label_pc_c5fd ]
  %v2_c61a = mul i32 %storemerge5, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c61a = add i32 %v2_c61a, %stack_var_-96.0
  store i32 %v3_c61a, i32* %eax.global-to-local, align 4
  %v3_c621 = mul i32 %storemerge5, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_c621, i32* %edx.global-to-local, align 4
  %v1_c624 = inttoptr i32 %v3_c61a to i32*
  %v2_c624 = load i32, i32* %v1_c624, align 4
  %v3_c626 = sub i32 %v2_c5e8, %v3_c621
  store i32 %v3_c626, i32* %edi.global-to-local, align 4
  store i32 %v2_c624, i32* %edx.global-to-local, align 4
  %v1_c630 = add i32 %v2_c624, 504
  %v2_c63c = mul i32 %v3_c626, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_c63c = add i32 %v2_c624, %v2_c63c
  store i32 %v3_c63c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c643

dec_label_pc_c643:                                ; preds = %dec_label_pc_c5f0, %dec_label_pc_c616
  %stack_var_-108.1 = phi i32 [ %v3_c63c, %dec_label_pc_c616 ], [ %v2_c593, %dec_label_pc_c5f0 ]
  %stack_var_-100.1 = phi i32 [ %v2_c624, %dec_label_pc_c616 ], [ %stack_var_-100.0, %dec_label_pc_c5f0 ]
  %stack_var_-88.1 = phi i32 [ %v1_c630, %dec_label_pc_c616 ], [ %stack_var_-88.0, %dec_label_pc_c5f0 ]
  %stack_var_-96.1 = phi i32 [ %v3_c61a, %dec_label_pc_c616 ], [ %stack_var_-96.0, %dec_label_pc_c5f0 ]
  store i32 %v0_c643, i32* %edi.global-to-local, align 4
  %v1_c645 = load i32, i32* %esi.global-to-local, align 4
  %v2_c645 = add i32 %v1_c645, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c645 = inttoptr i32 %v2_c645 to i32*
  %v4_c645 = load i32, i32* %v3_c645, align 4
  %v5_c645 = sub i32 %v0_c643, %v4_c645
  %v2_c648 = sdiv i32 %v5_c645, 4
  %v3_c64b = mul i32 %v2_c648, -1431655765
  %v2_c651 = add i32 %v3_c64b, %v1_c651
  %v13_c651 = icmp slt i32 %v2_c651, 0
  %v18_c651 = sext i32 %v2_c651 to i64
  store i32 %v2_c651, i32* %edi.global-to-local, align 4
  br i1 %v13_c651, label %dec_label_pc_c6f8, label %dec_label_pc_c659

dec_label_pc_c659:                                ; preds = %dec_label_pc_c643
  %v9_c65c = icmp sgt i32 %v2_c651, 41
  br i1 %v9_c65c, label %dec_label_pc_c6b0, label %dec_label_pc_c65e

dec_label_pc_c65e:                                ; preds = %dec_label_pc_c659
  %v5_c65e = add i32 %v0_c643, %v2_c58b
  store i32 %v5_c65e, i32* %ecx.global-to-local, align 4
  %v1_c662 = add i32 %v1_c645, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_c662 = inttoptr i32 %v1_c662 to i32*
  %v3_c662 = load i32, i32* %v2_c662, align 4
  store i32 %v3_c662, i32* %eax.global-to-local, align 4
  %v2_c665 = inttoptr i32 %v1_c645 to i32*
  store i32 %v5_c65e, i32* %v2_c665, align 4
  br label %dec_label_pc_c667

dec_label_pc_c667:                                ; preds = %dec_label_pc_c6c5, %dec_label_pc_c65e
  %v5_c667 = load i32, i32* %ebx.global-to-local, align 4
  %v6_c667 = sub i32 %stack_var_-112.0.in, %v5_c667
  %v16_c667 = icmp eq i32 %v6_c667, 0
  %v17_c667 = icmp slt i32 %v6_c667, 0
  store i32 %v6_c667, i32* %ebx.global-to-local, align 4
  %v3_c671 = icmp eq i1 %v17_c667, false
  %v4_c671 = icmp eq i1 %v16_c667, false
  %v5_c671 = icmp eq i1 %v3_c671, %v4_c671
  br i1 %v5_c671, label %dec_label_pc_c667.dec_label_pc_c558_crit_edge, label %dec_label_pc_c677.loopexit

dec_label_pc_c667.dec_label_pc_c558_crit_edge:    ; preds = %dec_label_pc_c667
  %v0_c55c.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_c55c.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_c558

dec_label_pc_c677.loopexit:                       ; preds = %dec_label_pc_c667
  %v0_c67b.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_c677

dec_label_pc_c677:                                ; preds = %dec_label_pc_c677.loopexit, %dec_label_pc_c727
  %v0_c67b = phi i32 [ %v0_c67b.pre, %dec_label_pc_c677.loopexit ], [ %v2_c727, %dec_label_pc_c727 ]
  store i32 %tmp148, i32* %edx.global-to-local, align 4
  store i32 %v0_c67b, i32* %arg1, align 4
  store i32 %tmp148, i32* %ecx.global-to-local, align 4
  %v0_c681 = load i32, i32* %esi.global-to-local, align 4
  %v1_c681 = add i32 %v0_c681, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_c681 = inttoptr i32 %v1_c681 to i32*
  %v3_c681 = load i32, i32* %v2_c681, align 4
  store i32 %v3_c681, i32* %edx.global-to-local, align 4
  %v0_c684 = load i32, i32* %eax.global-to-local, align 4
  %v2_c684 = add i32 %tmp148, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_c684 = inttoptr i32 %v2_c684 to i32*
  store i32 %v0_c684, i32* %v3_c684, align 4
  %v0_c687 = load i32, i32* %esi.global-to-local, align 4
  %v1_c687 = add i32 %v0_c687, 12
  %v2_c687 = inttoptr i32 %v1_c687 to i32*
  %v3_c687 = load i32, i32* %v2_c687, align 4
  store i32 %v3_c687, i32* %eax.global-to-local, align 4
  %v0_c68a = load i32, i32* %edx.global-to-local, align 4
  %v1_c68a = load i32, i32* %ecx.global-to-local, align 4
  %v2_c68a = add i32 %v1_c68a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c68a = inttoptr i32 %v2_c68a to i32*
  store i32 %v0_c68a, i32* %v3_c68a, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %edx.global-to-local, align 4
  %v0_c698 = load i32, i32* %eax.global-to-local, align 4
  %v1_c698 = load i32, i32* %ecx.global-to-local, align 4
  %v2_c698 = add i32 %v1_c698, 12
  %v3_c698 = inttoptr i32 %v2_c698 to i32*
  store i32 %v0_c698, i32* %v3_c698, align 4
  %v0_c69b = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_c69b, i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_c731, label %dec_label_pc_c6a3

dec_label_pc_c6a3:                                ; preds = %dec_label_pc_c677
  store i32 %v0_c483, i32* %ebx.global-to-local, align 4
  store i32 %v0_c482, i32* %esi.global-to-local, align 4
  store i32 %v0_c481, i32* %edi.global-to-local, align 4
  store i32 %v0_c480, i32* %ebp.global-to-local, align 4
  ret i32 %v0_c69b

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c659
  %v5_c6b9 = mul nsw i64 %v18_c651, 818089009
  %v7_c6b9 = udiv i64 %v5_c6b9, 4294967296
  %v8_c6b9 = trunc i64 %v7_c6b9 to i32
  %v2_c6bd = ashr i32 %v2_c651, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_c6bd, i32* %eax.global-to-local, align 4
  %v2_c6c0 = sdiv i32 %v8_c6b9, 8
  store i32 %v2_c6c0, i32* %edx.global-to-local, align 4
  %v2_c6c3 = sub i32 %v2_c6c0, %v2_c6bd
  br label %dec_label_pc_c6c5

dec_label_pc_c6c5:                                ; preds = %dec_label_pc_c6f8, %dec_label_pc_c6b0
  %storemerge = phi i32 [ -1, %dec_label_pc_c6f8 ], [ %v2_c6c3, %dec_label_pc_c6b0 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_c6c5 = mul i32 %storemerge, 4
  store i32 %v1_c6c5, i32* %eax.global-to-local, align 4
  %v2_c6cc = add i32 %v1_c645, 12
  %v3_c6cc = inttoptr i32 %v2_c6cc to i32*
  %v4_c6cc = load i32, i32* %v3_c6cc, align 4
  %v5_c6cc = add i32 %v4_c6cc, %v1_c6c5
  store i32 %v5_c6cc, i32* %eax.global-to-local, align 4
  %v3_c6cf = mul i32 %storemerge, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_c6cf, i32* %edx.global-to-local, align 4
  store i32 %v5_c6cc, i32* %v3_c6cc, align 4
  %v0_c6d5 = load i32, i32* %eax.global-to-local, align 4
  %v1_c6d5 = inttoptr i32 %v0_c6d5 to i32*
  %v2_c6d5 = load i32, i32* %v1_c6d5, align 4
  store i32 %v2_c6d5, i32* %ecx.global-to-local, align 4
  %v2_c6d7 = load i32, i32* %edx.global-to-local, align 4
  %v3_c6d7 = sub i32 %v2_c651, %v2_c6d7
  store i32 %v3_c6d7, i32* %edi.global-to-local, align 4
  %v3_c6d9 = mul i32 %v3_c6d7, 3
  store i32 %v3_c6d9, i32* %edx.global-to-local, align 4
  %v1_c6dc = add i32 %v2_c6d5, 504
  store i32 %v1_c6dc, i32* %eax.global-to-local, align 4
  %v1_c6e2 = load i32, i32* %esi.global-to-local, align 4
  %v2_c6e2 = add i32 %v1_c6e2, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c6e2 = inttoptr i32 %v2_c6e2 to i32*
  store i32 %v2_c6d5, i32* %v3_c6e2, align 4
  %v0_c6e5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_c6e5 = load i32, i32* %edx.global-to-local, align 4
  %v2_c6e5 = mul i32 %v1_c6e5, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c6e5 = add i32 %v2_c6e5, %v0_c6e5
  store i32 %v3_c6e5, i32* %ecx.global-to-local, align 4
  %v0_c6e8 = load i32, i32* %eax.global-to-local, align 4
  %v1_c6e8 = load i32, i32* %esi.global-to-local, align 4
  %v2_c6e8 = add i32 %v1_c6e8, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_c6e8 = inttoptr i32 %v2_c6e8 to i32*
  store i32 %v0_c6e8, i32* %v3_c6e8, align 4
  %v0_c6eb = load i32, i32* %ecx.global-to-local, align 4
  %v1_c6eb = load i32, i32* %esi.global-to-local, align 4
  %v2_c6eb = inttoptr i32 %v1_c6eb to i32*
  store i32 %v0_c6eb, i32* %v2_c6eb, align 4
  br label %dec_label_pc_c667

dec_label_pc_c6f8:                                ; preds = %dec_label_pc_c643
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c6c5

dec_label_pc_c710:                                ; preds = %dec_label_pc_c5d7
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c616

dec_label_pc_c727:                                ; preds = %dec_label_pc_c480
  %v1_c727 = inttoptr i32 %arg10 to i32*
  %v2_c727 = load i32, i32* %v1_c727, align 4
  store i32 %v2_c727, i32* %ecx.global-to-local, align 4
  %v1_c729 = add i32 %arg10, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_c729 = inttoptr i32 %v1_c729 to i32*
  %v3_c729 = load i32, i32* %v2_c729, align 4
  store i32 %v3_c729, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c677

dec_label_pc_c731:                                ; preds = %dec_label_pc_c677
  ret i32 %v0_c69b

; uselistorder directives
  uselistorder i32 %v2_c727, { 1, 0 }
  uselistorder i32 %v2_c6d5, { 1, 0, 2 }
  uselistorder i32 %v2_c6c0, { 1, 0 }
  uselistorder i32 %v0_c69b, { 1, 0, 2 }
  uselistorder i32 %v6_c667, { 1, 2, 3, 0 }
  uselistorder i32 %v2_c651, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_c645, { 0, 2, 1, 3 }
  uselistorder i32 %v2_c624, { 3, 0, 2, 1 }
  uselistorder i32 %v2_c611, { 1, 0 }
  uselistorder i32 %v2_c5e8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_c643, { 2, 1, 0 }
  uselistorder i32 %v1_c5ca, { 1, 0 }
  uselistorder i32 %v0_c5b8, { 1, 2, 0 }
  uselistorder i32 %v0_c5ad, { 1, 0 }
  uselistorder i32 %v2_c58b, { 1, 2, 0, 3 }
  uselistorder i32 %v6_c57d, { 1, 2, 0 }
  uselistorder i32 %v7_c57a, { 2, 0, 1, 3 }
  uselistorder i32 %v2_c578, { 1, 2, 0 }
  uselistorder i32 %v3_c572, { 1, 0, 2 }
  uselistorder i32 %v3_c569, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-112.0.in, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-96.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 1, 0 }
  uselistorder i32 %stack_var_-108.0, { 2, 1, 0, 3 }
  uselistorder i32 %v0_c5ab, { 0, 3, 2, 1, 4 }
  uselistorder i32 %tmp148, { 0, 2, 1 }
  uselistorder i32* %esi.global-to-local, { 4, 5, 6, 0, 7, 8, 9, 1, 2, 3, 10, 11, 12 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 2, 3, 4, 6, 7, 8 }
  uselistorder i32 %arg10, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c677, { 1, 0 }
  uselistorder label %dec_label_pc_c643, { 1, 0 }
}

define i32 @_ZSt13copy_backwardISt6vectorIc25zero_after_free_allocatorIcEEESt15_Deque_iteratorIT_RS5_PS5_ES4_IS5_RKS5_PS9_ESC_S8_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_c740:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp150 = ptrtoint i32* %arg1 to i32
  %v0_c740 = load i32, i32* %ebp.global-to-local, align 4
  %v0_c741 = load i32, i32* %edi.global-to-local, align 4
  %v0_c742 = load i32, i32* %esi.global-to-local, align 4
  %v0_c743 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  store i32 %arg7, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg10, i32* %esi.global-to-local, align 4
  %v2_c7b4 = sub i32 %arg9, %arg5
  %v2_c7c3 = sdiv i32 %v2_c7b4, 4
  %v1_c7c6 = add nsw i32 %v2_c7c3, -1
  %v3_c7c9 = mul i32 %v1_c7c6, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_c7c9, i32* %ecx.global-to-local, align 4
  %v2_c7ce = sub i32 %arg6, %arg7
  %v2_c7d0 = sub i32 %arg4, %arg2
  %v2_c7d2 = sdiv i32 %v2_c7ce, 4
  %v3_c7d5 = mul i32 %v2_c7d2, -1431655765
  %v2_c7db = sdiv i32 %v2_c7d0, 4
  %v3_c7de = mul i32 %v2_c7db, -1431655765
  store i32 %v3_c7de, i32* %edx.global-to-local, align 4
  %v2_c7e8 = add i32 %v3_c7c9, %v3_c7d5
  store i32 %v2_c7e8, i32* %eax.global-to-local, align 4
  %v1_c7ea = inttoptr i32 %arg10 to i32*
  %v2_c7ea = load i32, i32* %v1_c7ea, align 4
  store i32 %v2_c7ea, i32* %ecx.global-to-local, align 4
  %v2_c7f0 = add i32 %v2_c7e8, %v3_c7de
  store i32 %v2_c7f0, i32* %edx.global-to-local, align 4
  %tmp162 = icmp slt i32 %v2_c7f0, 1
  %v1_ca3c = add i32 %arg10, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ca3c = inttoptr i32 %v1_ca3c to i32*
  %v3_ca3c = load i32, i32* %v2_ca3c, align 4
  br i1 %tmp162, label %dec_label_pc_ca3c, label %dec_label_pc_c80a

dec_label_pc_c80a:                                ; preds = %dec_label_pc_c740
  store i32 %v3_ca3c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c818

dec_label_pc_c818:                                ; preds = %dec_label_pc_c929, %dec_label_pc_c80a
  %v0_c860 = phi i32 [ %v2_c7ea, %dec_label_pc_c80a ], [ %v0_c81c.pre, %dec_label_pc_c929 ]
  %stack_var_-88.0 = phi i32 [ %arg9, %dec_label_pc_c80a ], [ %stack_var_-88.2, %dec_label_pc_c929 ]
  %stack_var_-96.0 = phi i32 [ %arg6, %dec_label_pc_c80a ], [ %stack_var_-96.2, %dec_label_pc_c929 ]
  %stack_var_-84.0 = phi i32 [ %arg7, %dec_label_pc_c80a ], [ %stack_var_-84.2, %dec_label_pc_c929 ]
  %stack_var_-104.0.in = phi i32 [ %v2_c7f0, %dec_label_pc_c80a ], [ %v6_c929, %dec_label_pc_c929 ]
  %stack_var_-108.0 = phi i32 [ %v3_ca3c, %dec_label_pc_c80a ], [ %stack_var_-108.2, %dec_label_pc_c929 ]
  store i32 %stack_var_-96.0, i32* %ebp.global-to-local, align 4
  %v5_c81e = sub i32 %v0_c860, %stack_var_-108.0
  %v5_c824 = sub i32 %stack_var_-96.0, %stack_var_-84.0
  %v2_c828 = sdiv i32 %v5_c81e, 4
  %v3_c82b = mul i32 %v2_c828, -1431655765
  store i32 %v3_c82b, i32* %ebx.global-to-local, align 4
  %v2_c831 = sdiv i32 %v5_c824, 4
  %v3_c834 = mul i32 %v2_c831, -1431655765
  store i32 %v3_c834, i32* %eax.global-to-local, align 4
  %v1_c840 = icmp eq i32 %v3_c834, 0
  store i32 %stack_var_-96.0, i32* %edi.global-to-local, align 4
  %v1_c848 = icmp eq i1 %v1_c840, false
  br i1 %v1_c848, label %dec_label_pc_c85e, label %dec_label_pc_c84a

dec_label_pc_c84a:                                ; preds = %dec_label_pc_c818
  store i32 %stack_var_-88.0, i32* %eax.global-to-local, align 4
  %v1_c84e = add i32 %stack_var_-88.0, -4
  %v2_c84e = inttoptr i32 %v1_c84e to i32*
  %v3_c84e = load i32, i32* %v2_c84e, align 4
  store i32 ptrtoint (i64* @global_var_2a.943 to i32), i32* %eax.global-to-local, align 4
  %v1_c856 = add i32 %v3_c84e, 504
  store i32 %v1_c856, i32* %edi.global-to-local, align 4
  store i32 %v1_c856, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_c85e

dec_label_pc_c85e:                                ; preds = %dec_label_pc_c84a, %dec_label_pc_c818
  %v0_c890 = phi i32 [ %v1_c856, %dec_label_pc_c84a ], [ %stack_var_-96.0, %dec_label_pc_c818 ]
  %v6_c876 = phi i32 [ ptrtoint (i64* @global_var_2a.943 to i32), %dec_label_pc_c84a ], [ %v3_c834, %dec_label_pc_c818 ]
  %v1_c85e = icmp eq i32 %v3_c82b, 0
  store i32 %v0_c860, i32* %edx.global-to-local, align 4
  %v1_c862 = icmp eq i1 %v1_c85e, false
  br i1 %v1_c862, label %dec_label_pc_c872, label %dec_label_pc_c864

dec_label_pc_c864:                                ; preds = %dec_label_pc_c85e
  %v0_c864 = load i32, i32* %esi.global-to-local, align 4
  %v1_c864 = add i32 %v0_c864, 12
  %v2_c864 = inttoptr i32 %v1_c864 to i32*
  %v3_c864 = load i32, i32* %v2_c864, align 4
  store i32 %v3_c864, i32* %edx.global-to-local, align 4
  %v1_c867 = and i32 %v3_c82b, -256
  %v2_c867 = or i32 %v1_c867, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v2_c867, i32* %ebx.global-to-local, align 4
  %v1_c869 = add i32 %v3_c864, -4
  %v2_c869 = inttoptr i32 %v1_c869 to i32*
  %v3_c869 = load i32, i32* %v2_c869, align 4
  %v1_c86c = add i32 %v3_c869, 504
  store i32 %v1_c86c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c872

dec_label_pc_c872:                                ; preds = %dec_label_pc_c864, %dec_label_pc_c85e
  %v0_c8a7 = phi i32 [ %v1_c86c, %dec_label_pc_c864 ], [ %v0_c860, %dec_label_pc_c85e ]
  %v5_c87d = phi i32 [ %v2_c867, %dec_label_pc_c864 ], [ %v3_c82b, %dec_label_pc_c85e ]
  %v6_c872 = sub i32 %v6_c876, %stack_var_-104.0.in
  %v12_c872 = xor i32 %v6_c876, %stack_var_-104.0.in
  %v13_c872 = xor i32 %v6_c872, %v6_c876
  %v14_c872 = and i32 %v13_c872, %v12_c872
  %v15_c872 = icmp slt i32 %v14_c872, 0
  %v16_c872 = icmp eq i32 %v6_c872, 0
  %v17_c872 = icmp slt i32 %v6_c872, 0
  %v3_c876 = icmp eq i1 %v17_c872, %v15_c872
  %v4_c876 = icmp eq i1 %v16_c872, false
  %v5_c876 = icmp eq i1 %v3_c876, %v4_c876
  %v12_c876 = select i1 %v5_c876, i32 %stack_var_-104.0.in, i32 %v6_c876
  %v2_c87b = sub i32 %v12_c876, %v5_c87d
  %v8_c87b = xor i32 %v5_c87d, %v12_c876
  %v9_c87b = xor i32 %v2_c87b, %v12_c876
  %v10_c87b = and i32 %v9_c87b, %v8_c87b
  %v11_c87b = icmp slt i32 %v10_c87b, 0
  %v12_c87b = icmp eq i32 %v2_c87b, 0
  %v13_c87b = icmp slt i32 %v2_c87b, 0
  %v3_c87d = icmp ne i1 %v13_c87b, %v11_c87b
  %v4_c87d = or i1 %v12_c87b, %v3_c87d
  %v7_c87d = select i1 %v4_c87d, i32 %v12_c876, i32 %v5_c87d
  store i32 %v7_c87d, i32* %ebx.global-to-local, align 4
  %v2_c883 = mul i32 %v7_c87d, 12
  %v5_c88c = sub i32 %v0_c890, %v2_c883
  store i32 %v5_c88c, i32* %eax.global-to-local, align 4
  %v2_c892 = sdiv i32 %v2_c883, 4
  %v3_c895 = mul i32 %v2_c892, -1431655765
  store i32 %v3_c895, i32* %ebp.global-to-local, align 4
  %tmp165 = icmp slt i32 %v3_c895, 1
  br i1 %tmp165, label %dec_label_pc_c8e7, label %dec_label_pc_c89f

dec_label_pc_c89f:                                ; preds = %dec_label_pc_c872
  %v0_c89f = load i32, i32* %esi.global-to-local, align 4
  store i32 %v3_c895, i32* %ebx.global-to-local, align 4
  store i32 %v0_c8a7, i32* %ebp.global-to-local, align 4
  store i32 %v7_c87d, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_c8b0

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c8b0.dec_label_pc_c8b0_crit_edge, %dec_label_pc_c89f
  %v0_c8b0 = phi i32 [ %v0_c8b0.pre, %dec_label_pc_c8b0.dec_label_pc_c8b0_crit_edge ], [ %v0_c890, %dec_label_pc_c89f ]
  %v0_c8b3 = phi i32 [ %v0_c8b3.pre, %dec_label_pc_c8b0.dec_label_pc_c8b0_crit_edge ], [ %v0_c8a7, %dec_label_pc_c89f ]
  %v1_c8b0 = add i32 %v0_c8b0, -12
  store i32 %v1_c8b0, i32* %edi.global-to-local, align 4
  %v1_c8b3 = add i32 %v0_c8b3, -12
  store i32 %v1_c8b3, i32* %ebp.global-to-local, align 4
  %v1_c8bd = call i32 @unknown_171b0(i32 %v1_c8b0)
  store i32 %v1_c8bd, i32* %eax.global-to-local, align 4
  %v0_c8c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_c8c2 = add i32 %v0_c8c2, -1
  %v10_c8c2 = icmp eq i32 %v1_c8c2, 0
  store i32 %v1_c8c2, i32* %ebx.global-to-local, align 4
  %v1_c8c5 = icmp eq i1 %v10_c8c2, false
  br i1 %v1_c8c5, label %dec_label_pc_c8b0.dec_label_pc_c8b0_crit_edge, label %dec_label_pc_c8c7

dec_label_pc_c8b0.dec_label_pc_c8b0_crit_edge:    ; preds = %dec_label_pc_c8b0
  %v0_c8b3.pre = load i32, i32* %ebp.global-to-local, align 4
  %v0_c8b0.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_c8b0

dec_label_pc_c8c7:                                ; preds = %dec_label_pc_c8b0
  %v0_c8c7 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_c8c7, i32* %ebx.global-to-local, align 4
  store i32 %v0_c89f, i32* %esi.global-to-local, align 4
  %v1_c8cd = inttoptr i32 %v0_c89f to i32*
  %v2_c8cd = load i32, i32* %v1_c8cd, align 4
  store i32 %v2_c8cd, i32* %ecx.global-to-local, align 4
  %v1_c8cf = add i32 %v0_c89f, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_c8cf = inttoptr i32 %v1_c8cf to i32*
  %v3_c8cf = load i32, i32* %v2_c8cf, align 4
  store i32 %v3_c8cf, i32* %edx.global-to-local, align 4
  %v2_c8d4 = sub i32 %v2_c8cd, %v3_c8cf
  %v2_c8d6 = sdiv i32 %v2_c8d4, 4
  %v3_c8d9 = mul i32 %v2_c8d6, -1431655765
  store i32 %v3_c8d9, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_c8e7

dec_label_pc_c8e7:                                ; preds = %dec_label_pc_c8c7, %dec_label_pc_c872
  %v0_c924 = phi i32 [ %v0_c860, %dec_label_pc_c872 ], [ %v2_c8cd, %dec_label_pc_c8c7 ]
  %v1_ca01 = phi i32 [ %v7_c87d, %dec_label_pc_c872 ], [ %v0_c8c7, %dec_label_pc_c8c7 ]
  %stack_var_-108.1 = phi i32 [ %stack_var_-108.0, %dec_label_pc_c872 ], [ %v3_c8cf, %dec_label_pc_c8c7 ]
  %stack_var_-92.0.in = phi i32 [ %v3_c82b, %dec_label_pc_c872 ], [ %v3_c8d9, %dec_label_pc_c8c7 ]
  %v1_c8ed = sub i32 0, %v1_ca01
  store i32 %v1_c8ed, i32* %ebp.global-to-local, align 4
  %v2_c8ef = sub i32 %v3_c834, %v1_ca01
  %v13_c8ef = icmp slt i32 %v2_c8ef, 0
  %v18_c8ef = sext i32 %v2_c8ef to i64
  store i32 %v2_c8ef, i32* %edi.global-to-local, align 4
  br i1 %v13_c8ef, label %dec_label_pc_ca28, label %dec_label_pc_c8f7

dec_label_pc_c8f7:                                ; preds = %dec_label_pc_c8e7
  %v9_c8fa = icmp sgt i32 %v2_c8ef, 41
  br i1 %v9_c8fa, label %dec_label_pc_c9c8, label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c8f7
  %v3_c904 = mul i32 %v1_ca01, -3
  store i32 %v3_c904, i32* %eax.global-to-local, align 4
  %v2_c90c = mul i32 %v1_c8ed, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_c90c = add i32 %v2_c90c, %stack_var_-96.0
  store i32 %v3_c90c, i32* %edx.global-to-local, align 4
  %v2_c90f = sub i32 %stack_var_-92.0.in, %v1_ca01
  %v13_c90f = icmp slt i32 %v2_c90f, 0
  store i32 %v2_c90f, i32* %edi.global-to-local, align 4
  br i1 %v13_c90f, label %dec_label_pc_ca0d, label %dec_label_pc_c91b

dec_label_pc_c91b:                                ; preds = %dec_label_pc_c9dd, %dec_label_pc_c900
  %v0_c987 = phi i32 [ %v2_ca01, %dec_label_pc_c9dd ], [ %v2_c90f, %dec_label_pc_c900 ]
  %stack_var_-88.1 = phi i32 [ %v3_c9e1, %dec_label_pc_c9dd ], [ %stack_var_-88.0, %dec_label_pc_c900 ]
  %stack_var_-96.1 = phi i32 [ %v3_c9fe, %dec_label_pc_c9dd ], [ %v3_c90c, %dec_label_pc_c900 ]
  %stack_var_-84.1 = phi i32 [ %v2_c9eb, %dec_label_pc_c9dd ], [ %stack_var_-84.0, %dec_label_pc_c900 ]
  %v9_c91e = icmp sgt i32 %v0_c987, 41
  br i1 %v9_c91e, label %dec_label_pc_c980, label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c91b
  %v3_c920 = mul i32 %v1_ca01, -3
  store i32 %v3_c920, i32* %eax.global-to-local, align 4
  %v2_c924 = mul i32 %v1_c8ed, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_c924 = add i32 %v0_c924, %v2_c924
  store i32 %v3_c924, i32* %ecx.global-to-local, align 4
  %v1_c927 = load i32, i32* %esi.global-to-local, align 4
  %v2_c927 = inttoptr i32 %v1_c927 to i32*
  store i32 %v3_c924, i32* %v2_c927, align 4
  br label %dec_label_pc_c929

dec_label_pc_c929:                                ; preds = %dec_label_pc_c991, %dec_label_pc_c920
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.3, %dec_label_pc_c991 ], [ %stack_var_-88.1, %dec_label_pc_c920 ]
  %stack_var_-96.2 = phi i32 [ %stack_var_-96.3, %dec_label_pc_c991 ], [ %stack_var_-96.1, %dec_label_pc_c920 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.3, %dec_label_pc_c991 ], [ %stack_var_-84.1, %dec_label_pc_c920 ]
  %stack_var_-108.2 = phi i32 [ %v2_c9a1, %dec_label_pc_c991 ], [ %stack_var_-108.1, %dec_label_pc_c920 ]
  %v5_c929 = load i32, i32* %ebx.global-to-local, align 4
  %v6_c929 = sub i32 %stack_var_-104.0.in, %v5_c929
  %v16_c929 = icmp eq i32 %v6_c929, 0
  %v17_c929 = icmp slt i32 %v6_c929, 0
  store i32 %v6_c929, i32* %edi.global-to-local, align 4
  %v3_c933 = icmp eq i1 %v17_c929, false
  %v4_c933 = icmp eq i1 %v16_c929, false
  %v5_c933 = icmp eq i1 %v3_c933, %v4_c933
  %v0_c81c.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v5_c933, label %dec_label_pc_c818, label %dec_label_pc_c939

dec_label_pc_c939:                                ; preds = %dec_label_pc_c929, %dec_label_pc_ca3c
  %v0_c941 = phi i32 [ %v2_c7ea, %dec_label_pc_ca3c ], [ %v0_c81c.pre, %dec_label_pc_c929 ]
  %stack_var_-108.3 = phi i32 [ %v3_ca3c, %dec_label_pc_ca3c ], [ %stack_var_-108.2, %dec_label_pc_c929 ]
  store i32 %tmp150, i32* %eax.global-to-local, align 4
  store i32 %stack_var_-108.3, i32* %edx.global-to-local, align 4
  store i32 %v0_c941, i32* %arg1, align 4
  %v2_c943 = add i32 %tmp150, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c943 = inttoptr i32 %v2_c943 to i32*
  store i32 %stack_var_-108.3, i32* %v3_c943, align 4
  store i32 %tmp150, i32* %edx.global-to-local, align 4
  %v0_c94a = load i32, i32* %esi.global-to-local, align 4
  %v1_c94a = add i32 %v0_c94a, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_c94a = inttoptr i32 %v1_c94a to i32*
  %v3_c94a = load i32, i32* %v2_c94a, align 4
  store i32 %v3_c94a, i32* %eax.global-to-local, align 4
  %v2_c94d = add i32 %tmp150, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_c94d = inttoptr i32 %v2_c94d to i32*
  store i32 %v3_c94a, i32* %v3_c94d, align 4
  %v0_c950 = load i32, i32* %esi.global-to-local, align 4
  %v1_c950 = add i32 %v0_c950, 12
  %v2_c950 = inttoptr i32 %v1_c950 to i32*
  %v3_c950 = load i32, i32* %v2_c950, align 4
  %v1_c953 = load i32, i32* %edx.global-to-local, align 4
  %v2_c953 = add i32 %v1_c953, 12
  %v3_c953 = inttoptr i32 %v2_c953 to i32*
  store i32 %v3_c950, i32* %v3_c953, align 4
  %v0_c956 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_c956, i32* %eax.global-to-local, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %edx.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_ca48, label %dec_label_pc_c969

dec_label_pc_c969:                                ; preds = %dec_label_pc_c939
  store i32 %v0_c743, i32* %ebx.global-to-local, align 4
  store i32 %v0_c742, i32* %esi.global-to-local, align 4
  store i32 %v0_c741, i32* %edi.global-to-local, align 4
  store i32 %v0_c740, i32* %ebp.global-to-local, align 4
  ret i32 %v0_c956

dec_label_pc_c980:                                ; preds = %dec_label_pc_c91b
  %v2_c985 = sext i32 %v0_c987 to i64
  %v4_c985 = mul nsw i64 %v2_c985, 818089009
  %v6_c985 = udiv i64 %v4_c985, 4294967296
  %v7_c985 = trunc i64 %v6_c985 to i32
  %v2_c989 = ashr i32 %v0_c987, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_c989, i32* %eax.global-to-local, align 4
  %v2_c98c = sdiv i32 %v7_c985, 8
  store i32 %v2_c98c, i32* %edx.global-to-local, align 4
  %v2_c98f = sub i32 %v2_c98c, %v2_c989
  br label %dec_label_pc_c991

dec_label_pc_c991:                                ; preds = %dec_label_pc_ca0d, %dec_label_pc_c980
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.4, %dec_label_pc_ca0d ], [ %stack_var_-88.1, %dec_label_pc_c980 ]
  %stack_var_-96.3 = phi i32 [ %stack_var_-96.4, %dec_label_pc_ca0d ], [ %stack_var_-96.1, %dec_label_pc_c980 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.4, %dec_label_pc_ca0d ], [ %stack_var_-84.1, %dec_label_pc_c980 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_ca0d ], [ %v2_c98f, %dec_label_pc_c980 ]
  store i32 %storemerge, i32* %edx.global-to-local, align 4
  %v1_c991 = mul i32 %storemerge, 4
  store i32 %v1_c991, i32* %eax.global-to-local, align 4
  %v1_c998 = load i32, i32* %esi.global-to-local, align 4
  %v2_c998 = add i32 %v1_c998, 12
  %v3_c998 = inttoptr i32 %v2_c998 to i32*
  %v4_c998 = load i32, i32* %v3_c998, align 4
  %v5_c998 = add i32 %v4_c998, %v1_c991
  store i32 %v5_c998, i32* %eax.global-to-local, align 4
  %v3_c99b = mul i32 %storemerge, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_c99b, i32* %edx.global-to-local, align 4
  store i32 %v5_c998, i32* %v3_c998, align 4
  %v0_c9a1 = load i32, i32* %eax.global-to-local, align 4
  %v1_c9a1 = inttoptr i32 %v0_c9a1 to i32*
  %v2_c9a1 = load i32, i32* %v1_c9a1, align 4
  store i32 %v2_c9a1, i32* %eax.global-to-local, align 4
  %v0_c9a3 = load i32, i32* %edi.global-to-local, align 4
  %v1_c9a3 = load i32, i32* %edx.global-to-local, align 4
  %v2_c9a3 = sub i32 %v0_c9a3, %v1_c9a3
  store i32 %v2_c9a3, i32* %edi.global-to-local, align 4
  store i32 %v2_c9a1, i32* %edx.global-to-local, align 4
  %v1_c9ad = load i32, i32* %esi.global-to-local, align 4
  %v2_c9ad = add i32 %v1_c9ad, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c9ad = inttoptr i32 %v2_c9ad to i32*
  store i32 %v2_c9a1, i32* %v3_c9ad, align 4
  %v0_c9b0 = load i32, i32* %eax.global-to-local, align 4
  %v1_c9b0 = add i32 %v0_c9b0, 504
  %v1_c9b5 = load i32, i32* %esi.global-to-local, align 4
  %v2_c9b5 = add i32 %v1_c9b5, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_c9b5 = inttoptr i32 %v2_c9b5 to i32*
  store i32 %v1_c9b0, i32* %v3_c9b5, align 4
  %v0_c9b8 = load i32, i32* %edi.global-to-local, align 4
  %v3_c9b8 = mul i32 %v0_c9b8, 3
  store i32 %v3_c9b8, i32* %eax.global-to-local, align 4
  %v0_c9bb = load i32, i32* %edx.global-to-local, align 4
  %v2_c9bb = mul i32 %v0_c9b8, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_c9bb = add i32 %v0_c9bb, %v2_c9bb
  store i32 %v3_c9bb, i32* %ecx.global-to-local, align 4
  %v1_c9be = load i32, i32* %esi.global-to-local, align 4
  %v2_c9be = inttoptr i32 %v1_c9be to i32*
  store i32 %v3_c9bb, i32* %v2_c9be, align 4
  br label %dec_label_pc_c929

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c8f7
  %v5_c9d1 = mul nsw i64 %v18_c8ef, 818089009
  %v7_c9d1 = udiv i64 %v5_c9d1, 4294967296
  %v8_c9d1 = trunc i64 %v7_c9d1 to i32
  %v2_c9d5 = ashr i32 %v2_c8ef, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_c9d5, i32* %eax.global-to-local, align 4
  %v2_c9d8 = sdiv i32 %v8_c9d1, 8
  store i32 %v2_c9d8, i32* %edx.global-to-local, align 4
  %v2_c9db = sub i32 %v2_c9d8, %v2_c9d5
  br label %dec_label_pc_c9dd

dec_label_pc_c9dd:                                ; preds = %dec_label_pc_ca28, %dec_label_pc_c9c8
  %storemerge6 = phi i32 [ -1, %dec_label_pc_ca28 ], [ %v2_c9db, %dec_label_pc_c9c8 ]
  %v2_c9e1 = mul i32 %storemerge6, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_c9e1 = add i32 %v2_c9e1, %stack_var_-88.0
  store i32 %v3_c9e1, i32* %eax.global-to-local, align 4
  %v3_c9e4 = mul i32 %storemerge6, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_c9e4, i32* %edx.global-to-local, align 4
  %v1_c9eb = inttoptr i32 %v3_c9e1 to i32*
  %v2_c9eb = load i32, i32* %v1_c9eb, align 4
  %v3_c9ed = sub i32 %v2_c8ef, %v3_c9e4
  store i32 %v2_c9eb, i32* %edx.global-to-local, align 4
  %v2_c9fe = mul i32 %v3_c9ed, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_c9fe = add i32 %v2_c9eb, %v2_c9fe
  store i32 %v3_c9fe, i32* %eax.global-to-local, align 4
  %v2_ca01 = sub i32 %stack_var_-92.0.in, %v1_ca01
  %v13_ca01 = icmp slt i32 %v2_ca01, 0
  store i32 %v2_ca01, i32* %edi.global-to-local, align 4
  %v1_ca07 = icmp eq i1 %v13_ca01, false
  br i1 %v1_ca07, label %dec_label_pc_c91b, label %dec_label_pc_ca0d

dec_label_pc_ca0d:                                ; preds = %dec_label_pc_c9dd, %dec_label_pc_c900
  %stack_var_-88.4 = phi i32 [ %v3_c9e1, %dec_label_pc_c9dd ], [ %stack_var_-88.0, %dec_label_pc_c900 ]
  %stack_var_-96.4 = phi i32 [ %v3_c9fe, %dec_label_pc_c9dd ], [ %v3_c90c, %dec_label_pc_c900 ]
  %stack_var_-84.4 = phi i32 [ %v2_c9eb, %dec_label_pc_c9dd ], [ %stack_var_-84.0, %dec_label_pc_c900 ]
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c991

dec_label_pc_ca28:                                ; preds = %dec_label_pc_c8e7
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_c9dd

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_c740
  store i32 %v3_ca3c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_c939

dec_label_pc_ca48:                                ; preds = %dec_label_pc_c939
  ret i32 %v0_c956

; uselistorder directives
  uselistorder i32 %v2_ca01, { 1, 2, 0 }
  uselistorder i32 %v3_c9fe, { 0, 2, 1 }
  uselistorder i32 %v2_c9eb, { 0, 3, 1, 2 }
  uselistorder i32 %v3_c9e1, { 0, 2, 3, 1 }
  uselistorder i32 %v2_c9d8, { 1, 0 }
  uselistorder i32 %v2_c9a1, { 1, 0, 3, 2 }
  uselistorder i32 %v2_c98c, { 1, 0 }
  uselistorder i32 %v6_c929, { 1, 2, 3, 0 }
  uselistorder i32 %stack_var_-84.1, { 1, 0 }
  uselistorder i32 %stack_var_-96.1, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 1, 0 }
  uselistorder i32 %v2_c8ef, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_ca01, { 2, 0, 3, 1, 4, 5 }
  uselistorder i32 %v1_c8c2, { 1, 0 }
  uselistorder i32 %v0_c89f, { 2, 1, 0 }
  uselistorder i32 %v3_c895, { 1, 2, 0 }
  uselistorder i32 %v2_c87b, { 1, 2, 0 }
  uselistorder i32 %v12_c876, { 2, 0, 1, 3 }
  uselistorder i32 %v6_c872, { 1, 2, 0 }
  uselistorder i32 %v5_c87d, { 1, 0, 2 }
  uselistorder i32 %v0_c8a7, { 1, 0 }
  uselistorder i32 %v6_c876, { 2, 0, 1, 3 }
  uselistorder i32 %v3_c834, { 3, 2, 1, 0 }
  uselistorder i32 %v3_c82b, { 3, 0, 1, 2, 4 }
  uselistorder i32 %stack_var_-104.0.in, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-96.0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %stack_var_-88.0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_ca3c, { 3, 1, 0, 2 }
  uselistorder i32 %tmp150, { 2, 3, 0, 1 }
  uselistorder i32* %esi.global-to-local, { 4, 5, 6, 7, 0, 8, 9, 10, 1, 2, 3, 11, 12, 13, 14 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 2, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %edi.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ebx.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg10, { 1, 0, 2 }
  uselistorder i32 %arg9, { 1, 0 }
  uselistorder label %dec_label_pc_c939, { 1, 0 }
}

define i32 @_ZN5boost6detail13heap_new_implINS0_11thread_dataINS_3_bi6bind_tIvPFvSsENS3_5list1INS3_5valueISsEEEEEEEERSB_EEPT_T0_(i32* %arg1) local_unnamed_addr {
dec_label_pc_ca50:
  %eax.global-to-local = alloca i32, align 4
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v1_ca71 = add i32 %tmp103, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_ca71, i32* %eax.global-to-local, align 4
  %v1_ca90 = add i32 %tmp103, add (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 ptrtoint (i8** @global_var_4.814 to i32))
  %v2_ca90 = inttoptr i32 %v1_ca90 to i32*
  store i32 0, i32* %v2_ca90, align 4
  %v0_ca97 = load i32, i32* %eax.global-to-local, align 4
  %v1_ca9c = add i32 %v0_ca97, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ca9c = inttoptr i32 %v1_ca9c to i32*
  store i32 0, i32* %v2_ca9c, align 4
  %v3_ca9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_ca9c

; uselistorder directives
  uselistorder i32 %tmp103, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
}

define i32 @function_cbf4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_cbf4:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_cbf4 = load i32, i32* @ecx, align 4
  %v1_cbf4 = add i32 %v0_cbf4, 609520600
  %v2_cbf4 = inttoptr i32 %v1_cbf4 to i32*
  %v3_cbf4 = load i32, i32* %v2_cbf4, align 4
  %v4_cbf4 = add i32 %v3_cbf4, -1
  store i32 %v4_cbf4, i32* %v2_cbf4, align 4
  %v0_cbfb = load i32, i32* %edx.global-to-local, align 4
  %v3_cbfb = xor i32 %v0_cbfb, ptrtoint ([2 x i8]* @2 to i32)
  %v4_cbfb = icmp eq i32 %v3_cbfb, 0
  store i32 %v3_cbfb, i32* %edx.global-to-local, align 4
  %v1_cc02 = icmp eq i1 %v4_cbfb, false
  br i1 %v1_cc02, label %bb, label %dec_label_pc_cbf4.dec_label_pc_cc08_crit_edge

dec_label_pc_cbf4.dec_label_pc_cc08_crit_edge:    ; preds = %dec_label_pc_cbf4
  %v0_cc0f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_cc08

bb:                                               ; preds = %dec_label_pc_cbf4
  %v2_cc02 = call i32 @function_cd26()
  store i32 %v2_cc02, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_cc08

dec_label_pc_cc08:                                ; preds = %dec_label_pc_cbf4.dec_label_pc_cc08_crit_edge, %bb
  %v0_cc0f = phi i32 [ %v2_cc02, %bb ], [ %v0_cc0f.pre, %dec_label_pc_cbf4.dec_label_pc_cc08_crit_edge ]
  ret i32 %v0_cc0f

; uselistorder directives
  uselistorder label %dec_label_pc_cc08, { 1, 0 }
}

define i32 @function_cc8c() local_unnamed_addr {
dec_label_pc_cc8c:
  %v0_cc8c = load i32, i32* @edi, align 4
  %v2_cc93 = call i32 @function_105f0(i32 %v0_cc8c)
  %v0_cc9e = load i32, i32* @ebp, align 4
  %v2_cca1 = call i32 @unknown_15640(i32 %v0_cc9e)
  %v0_cca6 = load i32, i32* @ebx, align 4
  %v1_cca6 = add i32 %v0_cca6, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  store i32 %v1_cca6, i32* @eax, align 4
  %v2_ccac = call i32 @function_11430(i32 %v1_cca6)
  %v0_ccb1 = load i32, i32* @ebx, align 4
  %v1_ccb1 = add i32 %v0_ccb1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ccb1 = inttoptr i32 %v1_ccb1 to i32*
  %v3_ccb1 = load i32, i32* %v2_ccb1, align 4
  %v1_ccb4 = icmp eq i32 %v3_ccb1, 0
  br i1 %v1_ccb4, label %dec_label_pc_cccd, label %dec_label_pc_ccb8

dec_label_pc_ccb8:                                ; preds = %dec_label_pc_cc8c
  %v1_ccbb = add i32 %v3_ccb1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ccbb = inttoptr i32 %v1_ccbb to i32*
  %v3_ccbb = load i32, i32* %v2_ccbb, align 4
  %v5_ccbb = add i32 %v3_ccbb, -1
  store i32 %v5_ccbb, i32* %v2_ccbb, align 4
  %v10_ccc0 = icmp eq i32 %v3_ccbb, ptrtoint (i8** @global_var_1.820 to i32)
  %v1_ccc3 = icmp eq i1 %v10_ccc0, false
  br i1 %v1_ccc3, label %dec_label_pc_cccd, label %dec_label_pc_ccc5

dec_label_pc_ccc5:                                ; preds = %dec_label_pc_ccb8
  br label %dec_label_pc_cccd

dec_label_pc_cccd:                                ; preds = %dec_label_pc_ccc5, %dec_label_pc_ccb8, %dec_label_pc_cc8c
  ret i32 %v3_ccb1

; uselistorder directives
  uselistorder i32 %v3_ccb1, { 1, 0, 2 }
}

define i32 @function_ccd7() local_unnamed_addr {
dec_label_pc_ccd7:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ccdf(i32 %arg1) local_unnamed_addr {
dec_label_pc_ccdf:
  %stack_var_76 = alloca i32, align 4
  %v2_cce7 = ptrtoint i32* %stack_var_76 to i32
  %v0_cceb = load i32, i32* @eax, align 4
  %v1_ccf2 = call i32 @function_105f0(i32 %v2_cce7)
  %v1_cd06 = call i32 @unknown_15640(i32 %arg1)
  %v0_cd0f = load i32, i32* @edi, align 4
  %v1_cd16 = call i32 @unknown_156a0(i32 %v0_cd0f)
  ret i32 %v0_cceb

; uselistorder directives
  uselistorder i32 (i32)* @unknown_15640, { 1, 0 }
}

define i32 @function_cd26() local_unnamed_addr {
dec_label_pc_cd26:
  %stack_var_60 = alloca i32, align 4
  %v2_cd2b = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_cd2b, i32* @edi, align 4
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %stack_var_60, align 4
  %v1_cd42 = call i32 @unknown_15c10(i32 %v2_cd2b)
  store i32 %v1_cd42, i32* @eax, align 4
  %v0_cd47 = call i32 @function_cc8c()
  ret i32 %v0_cd47
}

define i32 @function_cd4c() local_unnamed_addr {
dec_label_pc_cd4c:
  %stack_var_44 = alloca i32, align 4
  %v2_cd4c = ptrtoint i32* %stack_var_44 to i32
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %stack_var_44, align 4
  %v1_cd63 = call i32 @unknown_15c10(i32 %v2_cd4c)
  store i32 %v1_cd63, i32* @eax, align 4
  %v1_cd6f = call i32 @function_105f0(i32 %v2_cd4c)
  ret i32 %v1_cd6f
}

define i32 @function_cd79() local_unnamed_addr {
dec_label_pc_cd79:
  %stack_var_84 = alloca i32, align 4
  %v2_cd79 = ptrtoint i32* %stack_var_84 to i32
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %stack_var_84, align 4
  %v1_cd90 = call i32 @unknown_15c10(i32 %v2_cd79)
  store i32 %v1_cd90, i32* @eax, align 4
  %v1_cda0 = call i32 @function_105f0(i32 %v2_cd79)
  ret i32 %v1_cd90
}

define i32 @function_cdae() local_unnamed_addr {
dec_label_pc_cdae:
  %stack_var_68 = alloca i32, align 4
  %v2_cdae = ptrtoint i32* %stack_var_68 to i32
  store i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), i32* %stack_var_68, align 4
  %v1_cdc5 = call i32 @unknown_15c10(i32 %v2_cdae)
  store i32 %v1_cdc5, i32* @eax, align 4
  %v1_cdd5 = call i32 @function_105f0(i32 %v2_cdae)
  ret i32 %v1_cdc5

; uselistorder directives
  uselistorder i32 (i32)* @function_105f0, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_15c10, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (%vtable_149b0_type* @global_var_149b0.900 to i32), { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_cde3() local_unnamed_addr {
dec_label_pc_cde3:
  %v0_cde5 = call i32 @function_ccd7()
  ret i32 %v0_cde5
}

define i32 @function_cdea() local_unnamed_addr {
dec_label_pc_cdea:
  %eax.global-to-local = alloca i32, align 4
  %v0_cdea = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cdea
}

define i32 @_ZN5boost6threadC1IPFvSsESsEET_T0_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ce00:
  %stack_var_-60 = alloca i32, align 4
  %v2_ce7b = ptrtoint i32* %stack_var_-60 to i32
  ret i32 %v2_ce7b
}

define i32 @function_cebe() local_unnamed_addr {
dec_label_pc_cebe:
  %eax.global-to-local = alloca i32, align 4
  %v0_cebe = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cebe
}

define i32 @function_cef6() local_unnamed_addr {
dec_label_pc_cef6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_cef6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_cef6 = add i32 %v0_cef6, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_cef6, i32* %ebx.global-to-local, align 4
  %v0_cef7 = load i32, i32* %eax.global-to-local, align 4
  %v2_cef7 = add i32 %v0_cef7, zext (i8 ptrtoint (i8* @global_var_39.944 to i8) to i32)
  %v16_cef7 = and i32 %v2_cef7, 255
  %v18_cef7 = and i32 %v0_cef7, -256
  %v19_cef7 = or i32 %v16_cef7, %v18_cef7
  store i32 %v19_cef7, i32* %eax.global-to-local, align 4
  ret i32 %v19_cef7

; uselistorder directives
  uselistorder i32 %v0_cef7, { 1, 0 }
}

define i32 @function_cf1a(i32 %arg1) local_unnamed_addr {
dec_label_pc_cf1a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cf48(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_cf48:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_cf48 = load i32, i32* %ebx.global-to-local, align 4
  %v1_cf48 = add i32 %v0_cf48, 1699488836
  %v2_cf48 = inttoptr i32 %v1_cf48 to i32*
  %v3_cf48 = load i32, i32* %v2_cf48, align 4
  %v4_cf48 = add i32 %v3_cf48, -1
  store i32 %v4_cf48, i32* %v2_cf48, align 4
  %v0_cf4e = load i32, i32* %eax.global-to-local, align 4
  %v3_cf4e = xor i32 %v0_cf4e, ptrtoint ([2 x i8]* @2 to i32)
  %v4_cf4e = icmp eq i32 %v3_cf4e, 0
  store i32 %v3_cf4e, i32* %eax.global-to-local, align 4
  %v1_cf54 = icmp eq i1 %v4_cf4e, false
  br i1 %v1_cf54, label %dec_label_pc_cf6a, label %dec_label_pc_cf56

dec_label_pc_cf56:                                ; preds = %dec_label_pc_cf48
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v3_cf4e

dec_label_pc_cf6a:                                ; preds = %dec_label_pc_cf48
  ret i32 %v3_cf4e

; uselistorder directives
  uselistorder i32 %v3_cf4e, { 1, 0, 2, 3 }
}

define i32 @function_cf60() local_unnamed_addr {
dec_label_pc_cf60:
  %v2_cf60 = load i32, i32* @eax, align 4
  %v1_cf68 = call i32 @function_cf1a(i32 %v2_cf60)
  ret i32 %v1_cf68
}

define i32 @function_cf70() local_unnamed_addr {
dec_label_pc_cf70:
  %eax.global-to-local = alloca i32, align 4
  %v0_cf70 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cf70
}

define i32 @function_cf7d() local_unnamed_addr {
dec_label_pc_cf7d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cf88() local_unnamed_addr {
dec_label_pc_cf88:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cf94() local_unnamed_addr {
dec_label_pc_cf94:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cfa7() local_unnamed_addr {
dec_label_pc_cfa7:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_cfa7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_cfa7 = add i32 %v0_cfa7, -1982010429
  %v2_cfa7 = inttoptr i32 %v1_cfa7 to i32*
  %v3_cfa7 = load i32, i32* %v2_cfa7, align 4
  %v4_cfa7 = sub i32 %v3_cfa7, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_cfa7, i32* %v2_cfa7, align 4
  %v0_cfad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_cfad
}

define i32 @function_cfb6(i32 %arg1) local_unnamed_addr {
dec_label_pc_cfb6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_cfbe() local_unnamed_addr {
dec_label_pc_cfbe:
  %v0_cfbe = call i32 @function_cf94()
  ret i32 %v0_cfbe
}

define i32 @function_cfc0() local_unnamed_addr {
dec_label_pc_cfc0:
  %ebx.global-to-local = alloca i32, align 4
  %v0_cfc0 = load i32, i32* @eax, align 4
  %v0_cfc2 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_cfc0, i32* %ebx.global-to-local, align 4
  %v1_cfcc = call i32 @function_cfb6(i32 %v0_cfc2)
  ret i32 %v1_cfcc
}

define i32 @function_cfce() local_unnamed_addr {
dec_label_pc_cfce:
  %v1_cfd0 = call i32 @function_cfb6(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_cfd0

; uselistorder directives
  uselistorder i32 (i32)* @function_cfb6, { 1, 0 }
}

define i32 @function_cfd2() local_unnamed_addr {
dec_label_pc_cfd2:
  %ebp.global-to-local = alloca i32, align 4
  %v0_cfd2 = load i32, i32* @eax, align 4
  store i32 %v0_cfd2, i32* @ebx, align 4
  %v0_cfd4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_cfd4 = add i32 %v0_cfd4, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_cfd4, i32* %ebp.global-to-local, align 4
  %v0_cfda = call i32 @function_117e0()
  store i32 %v0_cfda, i32* @eax, align 4
  %v0_cfef = load i32, i32* @esi, align 4
  %v1_cfef = icmp eq i32 %v0_cfef, 0
  br i1 %v1_cfef, label %dec_label_pc_cffb, label %dec_label_pc_cff3

dec_label_pc_cff3:                                ; preds = %dec_label_pc_cfd2
  store i32 %v0_cfef, i32* @eax, align 4
  br label %dec_label_pc_cffb

dec_label_pc_cffb:                                ; preds = %dec_label_pc_cff3, %dec_label_pc_cfd2
  %v0_d007 = call i32 @function_cf88()
  ret i32 %v0_d007
}

define i32 @function_d00c() local_unnamed_addr {
dec_label_pc_d00c:
  %v0_d010 = call i32 @function_cf7d()
  ret i32 %v0_d010
}

define i32 @function_d015() local_unnamed_addr {
dec_label_pc_d015:
  %v0_d017 = call i32 @function_cf94()
  ret i32 %v0_d017

; uselistorder directives
  uselistorder i32 ()* @function_cf94, { 1, 0 }
}

define i32 @_ZNSt5dequeIcSaIcEED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_d020:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_d020 = load i32, i32* %edi.global-to-local, align 4
  %v0_d021 = load i32, i32* %esi.global-to-local, align 4
  %v0_d022 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp102, i32* %edi.global-to-local, align 4
  %v2_d036 = load i32, i32* %arg1, align 4
  store i32 %v2_d036, i32* @eax, align 4
  %v1_d038 = icmp eq i32 %v2_d036, 0
  br i1 %v1_d038, label %bb, label %dec_label_pc_d03c

bb:                                               ; preds = %dec_label_pc_d020
  %v6_d03a = call i32 @function_d080(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_d022, i32 %v0_d021, i32 %v0_d020)
  store i32 %v6_d03a, i32* @eax, align 4
  %v0_d03c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %bb, %dec_label_pc_d020
  %v0_d03c = phi i32 [ %v0_d03c.pre, %bb ], [ %tmp102, %dec_label_pc_d020 ]
  %v1_d03c = add i32 %v0_d03c, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d03c = inttoptr i32 %v1_d03c to i32*
  %v3_d03c = load i32, i32* %v2_d03c, align 4
  store i32 %v3_d03c, i32* %esi.global-to-local, align 4
  %v1_d03f = add i32 %v0_d03c, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_d03f = inttoptr i32 %v1_d03f to i32*
  %v3_d03f = load i32, i32* %v2_d03f, align 4
  store i32 %v3_d03f, i32* %ebx.global-to-local, align 4
  %v1_d042 = add i32 %v3_d03c, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_d042, i32* %esi.global-to-local, align 4
  %tmp109 = icmp ugt i32 %v1_d042, %v3_d03f
  br i1 %tmp109, label %dec_label_pc_d049, label %bb107

bb107:                                            ; preds = %dec_label_pc_d03c
  %v3_d047 = call i32 @function_d063()
  %v0_d050.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_d049

dec_label_pc_d049:                                ; preds = %dec_label_pc_d03c, %bb107
  %v0_d050 = phi i32 [ %v0_d050.pre, %bb107 ], [ %v3_d03f, %dec_label_pc_d03c ]
  %v1_d050 = inttoptr i32 %v0_d050 to i32*
  %v2_d050 = load i32, i32* %v1_d050, align 4
  %v1_d052 = add i32 %v0_d050, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_d052, i32* %ebx.global-to-local, align 4
  ret i32 %v2_d050

; uselistorder directives
  uselistorder i32 %v0_d050, { 1, 0 }
  uselistorder i32 %v3_d03f, { 1, 0, 2 }
  uselistorder i32 %v0_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d049, { 1, 0 }
}

define i32 @function_d063() local_unnamed_addr {
dec_label_pc_d063:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v4_d067 = icmp eq i32 %tmp9, ptrtoint ([2 x i8]* @2 to i32)
  %v1_d06e = icmp eq i1 %v4_d067, false
  br i1 %v1_d06e, label %bb, label %dec_label_pc_d063.dec_label_pc_d070_crit_edge

dec_label_pc_d063.dec_label_pc_d070_crit_edge:    ; preds = %dec_label_pc_d063
  %v0_d07f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d070

bb:                                               ; preds = %dec_label_pc_d063
  %v2_d06e = call i32 @function_d094()
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d063.dec_label_pc_d070_crit_edge, %bb
  %v0_d07f = phi i32 [ %v2_d06e, %bb ], [ %v0_d07f.pre, %dec_label_pc_d063.dec_label_pc_d070_crit_edge ]
  ret i32 %v0_d07f

; uselistorder directives
  uselistorder label %dec_label_pc_d070, { 1, 0 }
}

define i32 @function_d080(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d080:
  %v3_d084 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_d084 = icmp eq i32 %v3_d084, 0
  store i32 %v3_d084, i32* @eax, align 4
  %v1_d08b = icmp eq i1 %v4_d084, false
  br i1 %v1_d08b, label %bb, label %dec_label_pc_d08d

bb:                                               ; preds = %dec_label_pc_d080
  %v2_d08b = call i32 @function_d094()
  br label %dec_label_pc_d08d

dec_label_pc_d08d:                                ; preds = %bb, %dec_label_pc_d080
  %v0_d093 = phi i32 [ %v2_d08b, %bb ], [ %v3_d084, %dec_label_pc_d080 ]
  store i32 %arg4, i32* @edi, align 4
  ret i32 %v0_d093

; uselistorder directives
  uselistorder i32 ()* @function_d094, { 1, 0 }
}

define i32 @function_d094() local_unnamed_addr {
dec_label_pc_d094:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d0a0:
  %edx.global-to-local = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  store i32 %tmp111, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_d0c4 = trunc i32 %arg3 to i8
  %v1_d0c8 = add i32 %tmp111, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d0c8 = inttoptr i32 %v1_d0c8 to i32*
  %v3_d0c8 = load i32, i32* %v2_d0c8, align 4
  %v1_d0cb = add i32 %tmp111, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_d0cb = inttoptr i32 %v1_d0cb to i32*
  %v3_d0cb = load i32, i32* %v2_d0cb, align 4
  store i32 %v3_d0cb, i32* @eax, align 4
  %v1_d0d6 = add i32 %tmp111, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d0d6 = inttoptr i32 %v1_d0d6 to i32*
  %v3_d0d6 = load i32, i32* %v2_d0d6, align 4
  store i32 %v3_d0d6, i32* @ebp, align 4
  %v2_d0db = sub i32 %v3_d0c8, %v3_d0cb
  %v2_d0dd = sdiv i32 %v2_d0db, 4
  %v1_d0e0 = add nsw i32 %v2_d0dd, 1
  store i32 %v1_d0e0, i32* @edi, align 4
  %v3_d0e3 = add i32 %v1_d0e0, %arg2
  store i32 %v3_d0e3, i32* %edx.global-to-local, align 4
  %v3_d0ea = mul i32 %v3_d0e3, 2
  %tmp120 = icmp ugt i32 %v3_d0d6, %v3_d0ea
  br i1 %tmp120, label %dec_label_pc_d0f1, label %bb

bb:                                               ; preds = %dec_label_pc_d0a0
  %v4_d0ef = call i32 @function_d140(i32 %v3_d0c8)
  store i32 %v4_d0ef, i32* @eax, align 4
  %v0_d0f1.pre = load i32, i32* @ebp, align 4
  %v1_d0f1.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d0f9.pre = load i32, i32* @esi, align 4
  %v1_d10e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_d0f1

dec_label_pc_d0f1:                                ; preds = %dec_label_pc_d0a0, %bb
  %v1_d10e = phi i32 [ %v1_d10e.pre, %bb ], [ %tmp111, %dec_label_pc_d0a0 ]
  %v1_d10c = phi i32 [ %v4_d0ef, %bb ], [ %v3_d0cb, %dec_label_pc_d0a0 ]
  %v0_d0f9 = phi i32 [ %v0_d0f9.pre, %bb ], [ %arg2, %dec_label_pc_d0a0 ]
  %v1_d0f1 = phi i32 [ %v1_d0f1.pre, %bb ], [ %v3_d0e3, %dec_label_pc_d0a0 ]
  %v0_d0f1 = phi i32 [ %v0_d0f1.pre, %bb ], [ %v3_d0d6, %dec_label_pc_d0a0 ]
  %v2_d0f1 = sub i32 %v0_d0f1, %v1_d0f1
  %v2_d0f9 = mul i32 %v0_d0f9, 4
  %v2_d0fc = udiv i32 %v2_d0f1, 2
  %v10_d0fe = icmp eq i8 %v1_d0c4, 0
  %v1_d103 = icmp eq i1 %v10_d0fe, false
  %v4_d103 = select i1 %v1_d103, i32 %v2_d0f9, i32 0
  store i32 %v4_d103, i32* %edx.global-to-local, align 4
  %v1_d106 = add i32 %v3_d0c8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d109 = mul i32 %v2_d0fc, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d109 = add i32 %v2_d109, %v4_d103
  %v2_d10c = sub i32 %v1_d106, %v1_d10c
  %v2_d10e = inttoptr i32 %v1_d10e to i32*
  %v3_d10e = load i32, i32* %v2_d10e, align 4
  %v4_d10e = add i32 %v3_d10e, %v3_d109
  store i32 %v4_d10e, i32* @esi, align 4
  %v2_d110 = sdiv i32 %v2_d10c, 4
  %v2_d10c.off = add i32 %v2_d10c, 3
  %tmp121 = icmp ult i32 %v2_d10c.off, 7
  store i32 %v2_d110, i32* @ecx, align 4
  %tmp122 = icmp ugt i32 %v1_d10c, %v4_d10e
  br i1 %tmp122, label %bb115, label %dec_label_pc_d11b

bb115:                                            ; preds = %dec_label_pc_d0f1
  %v4_d115 = call i32 @function_d210()
  br label %dec_label_pc_d11b

dec_label_pc_d11b:                                ; preds = %dec_label_pc_d0f1, %bb115
  br i1 %tmp121, label %bb116, label %dec_label_pc_d123

bb116:                                            ; preds = %dec_label_pc_d11b
  %v4_d11d = call i32 @function_d1c4(i32 %v3_d0c8, i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_d123

dec_label_pc_d123:                                ; preds = %bb116, %dec_label_pc_d11b
  %v0_d12a = load i32, i32* @esi, align 4
  %v1_d12a = load i32, i32* @edi, align 4
  %v2_d12a = mul i32 %v1_d12a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d12a = add i32 %v2_d12a, %v0_d12a
  %tmp123 = mul i32 %v2_d110, -4
  %v2_d12d = add i32 %v3_d12a, %tmp123
  ret i32 %v2_d12d

; uselistorder directives
  uselistorder i32 %v3_d0e3, { 1, 0, 2 }
  uselistorder i32 %v3_d0d6, { 1, 0, 2 }
  uselistorder i32 %v3_d0c8, { 2, 0, 1, 3 }
  uselistorder i32 %tmp111, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_d11b, { 1, 0 }
  uselistorder label %dec_label_pc_d0f1, { 1, 0 }
}

define i32 @function_d13b() local_unnamed_addr {
dec_label_pc_d13b:
  %v3_d13b = call i32 @function_d1c4(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  ret i32 %v3_d13b
}

define i32 @function_d140(i32 %arg1) local_unnamed_addr {
dec_label_pc_d140:
  %of.global-to-local = alloca i1, align 1
  %v0_d140 = load i32, i32* @esi, align 4
  %v1_d140 = load i32, i32* @ebp, align 4
  %v7_d140 = icmp ult i32 %v0_d140, %v1_d140
  %v1_d144 = icmp eq i1 %v7_d140, false
  %v4_d144 = select i1 %v1_d144, i32 %v0_d140, i32 %v1_d140
  store i32 %v4_d144, i32* @eax, align 4
  %v3_d147 = add i32 %v1_d140, 2
  %v4_d147 = add i32 %v3_d147, %v4_d144
  store i32 %v4_d147, i32* @ebp, align 4
  %tmp7 = sub i32 1073741822, %v4_d147
  %v8_d14b = and i32 %tmp7, %v4_d147
  %v9_d14b = icmp slt i32 %v8_d14b, 0
  store i1 %v9_d14b, i1* %of.global-to-local, align 1
  %tmp9 = icmp ult i32 %v4_d147, 1073741824
  br i1 %tmp9, label %dec_label_pc_d157, label %bb

bb:                                               ; preds = %dec_label_pc_d140
  %v4_d151 = call i32 @function_d229()
  %v0_d157.pre = load i32, i32* @ebp, align 4
  %v0_d162.pre = load i32, i32* @esi, align 4
  %v1_d162.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_d157

dec_label_pc_d157:                                ; preds = %dec_label_pc_d140, %bb
  %v1_d162 = phi i1 [ %v9_d14b, %dec_label_pc_d140 ], [ %v1_d162.pre, %bb ]
  %v0_d162 = phi i32 [ %v0_d140, %dec_label_pc_d140 ], [ %v0_d162.pre, %bb ]
  %v0_d157 = phi i32 [ %v4_d147, %dec_label_pc_d140 ], [ %v0_d157.pre, %bb ]
  %v1_d157 = mul i32 %v0_d157, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d162 = mul i32 %v0_d162, 4
  store i32 %v2_d162, i32* @esi, align 4
  store i1 %v1_d162, i1* %of.global-to-local, align 1
  ret i32 %v1_d157

; uselistorder directives
  uselistorder i32 %v4_d147, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_d157, { 1, 0 }
}

define i32 @function_d1c4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d1c4:
  %eax.global-to-local = alloca i32, align 4
  %v0_d1c4 = load i32, i32* @esi, align 4
  %v1_d1c4 = load i32, i32* @ebx, align 4
  %v2_d1c4 = add i32 %v1_d1c4, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_d1c4 = inttoptr i32 %v2_d1c4 to i32*
  store i32 %v0_d1c4, i32* %v3_d1c4, align 4
  %v2_d1c7 = load i32, i32* @esi, align 4
  store i32 %v2_d1c7, i32* %eax.global-to-local, align 4
  %v1_d1c9 = load i32, i32* @ebx, align 4
  %v2_d1c9 = add i32 %v1_d1c9, 12
  %v3_d1c9 = inttoptr i32 %v2_d1c9 to i32*
  store i32 %v2_d1c7, i32* %v3_d1c9, align 4
  %v0_d1cc = load i32, i32* %eax.global-to-local, align 4
  %v1_d1cc = add i32 %v0_d1cc, 504
  %v1_d1d1 = load i32, i32* @ebx, align 4
  %v2_d1d1 = add i32 %v1_d1d1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_d1d1 = inttoptr i32 %v2_d1d1 to i32*
  store i32 %v1_d1cc, i32* %v3_d1d1, align 4
  %v0_d1d4 = load i32, i32* @esi, align 4
  %v1_d1d4 = load i32, i32* @edi, align 4
  %v2_d1d4 = mul i32 %v1_d1d4, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d1d4 = add i32 %v0_d1d4, -4
  %v4_d1d4 = add i32 %v3_d1d4, %v2_d1d4
  store i32 %v4_d1d4, i32* %eax.global-to-local, align 4
  %v1_d1d8 = load i32, i32* @ebx, align 4
  %v2_d1d8 = add i32 %v1_d1d8, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_d1d8 = inttoptr i32 %v2_d1d8 to i32*
  store i32 %v4_d1d4, i32* %v3_d1d8, align 4
  %v0_d1db = load i32, i32* %eax.global-to-local, align 4
  %v1_d1db = inttoptr i32 %v0_d1db to i32*
  %v2_d1db = load i32, i32* %v1_d1db, align 4
  store i32 %v2_d1db, i32* %eax.global-to-local, align 4
  %v1_d1dd = load i32, i32* @ebx, align 4
  %v2_d1dd = add i32 %v1_d1dd, 28
  %v3_d1dd = inttoptr i32 %v2_d1dd to i32*
  store i32 %v2_d1db, i32* %v3_d1dd, align 4
  %v0_d1e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_d1e0 = add i32 %v0_d1e0, 504
  store i32 %v1_d1e0, i32* @eax, align 4
  %v3_d1e9 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_d1e9 = icmp eq i32 %v3_d1e9, 0
  store i32 %v3_d1e9, i32* @ecx, align 4
  %v1_d1f0 = load i32, i32* @ebx, align 4
  %v2_d1f0 = add i32 %v1_d1f0, 32
  %v3_d1f0 = inttoptr i32 %v2_d1f0 to i32*
  store i32 %v1_d1e0, i32* %v3_d1f0, align 4
  %v1_d1f3 = icmp eq i1 %v4_d1e9, false
  br i1 %v1_d1f3, label %bb, label %dec_label_pc_d1c4.dec_label_pc_d1f5_crit_edge

dec_label_pc_d1c4.dec_label_pc_d1f5_crit_edge:    ; preds = %dec_label_pc_d1c4
  %v0_d208.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d1f5

bb:                                               ; preds = %dec_label_pc_d1c4
  %v2_d1f3 = call i32 @function_d22e()
  store i32 %v2_d1f3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d1f5

dec_label_pc_d1f5:                                ; preds = %dec_label_pc_d1c4.dec_label_pc_d1f5_crit_edge, %bb
  %v0_d208 = phi i32 [ %v0_d208.pre, %dec_label_pc_d1c4.dec_label_pc_d1f5_crit_edge ], [ %v2_d1f3, %bb ]
  store i32 %arg2, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v0_d205 = load i32, i32* @esp, align 4
  %v1_d205 = add i32 %v0_d205, 76
  %tmp7 = xor i32 %v0_d205, -2147483648
  %v8_d205 = and i32 %v1_d205, %tmp7
  %v9_d205 = icmp slt i32 %v8_d205, 0
  store i1 %v9_d205, i1* @of, align 1
  ret i32 %v0_d208

; uselistorder directives
  uselistorder label %dec_label_pc_d1f5, { 1, 0 }
}

define i32 @function_d210() local_unnamed_addr {
dec_label_pc_d210:
  %v0_d210 = load i32, i32* @ecx, align 4
  %v1_d210 = icmp eq i32 %v0_d210, 0
  br i1 %v1_d210, label %bb, label %dec_label_pc_d210.dec_label_pc_d214_crit_edge

dec_label_pc_d210.dec_label_pc_d214_crit_edge:    ; preds = %dec_label_pc_d210
  %v0_d21b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d214

bb:                                               ; preds = %dec_label_pc_d210
  %v4_d212 = call i32 @function_d1c4(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  %v0_d214.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d210.dec_label_pc_d214_crit_edge, %bb
  %v0_d21b = phi i32 [ %v4_d212, %bb ], [ %v0_d21b.pre, %dec_label_pc_d210.dec_label_pc_d214_crit_edge ]
  %v0_d214 = phi i32 [ %v0_d214.pre, %bb ], [ %v0_d210, %dec_label_pc_d210.dec_label_pc_d214_crit_edge ]
  %v2_d214 = mul i32 %v0_d214, 4
  %v0_d21f = load i32, i32* @esi, align 4
  %v3_d227 = call i32 @function_d1c4(i32 %v0_d21f, i32 %v0_d21b, i32 %v2_d214)
  ret i32 %v3_d227

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @function_d1c4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_d214, { 1, 0 }
}

define i32 @function_d229() local_unnamed_addr {
dec_label_pc_d229:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d22e() local_unnamed_addr {
dec_label_pc_d22e:
  %v0_d22e = load i32, i32* @eax, align 4
  ret i32 %v0_d22e
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE17_M_push_front_auxERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d240:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @esi, align 4
  %v1_d25b = add i32 %tmp101, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_d25b = inttoptr i32 %v1_d25b to i32*
  %v3_d25b = load i32, i32* %v2_d25b, align 4
  %v3_d260 = load i32, i32* %arg1, align 4
  %v4_d260 = sub i32 %v3_d25b, %v3_d260
  %v2_d262 = sdiv i32 %v4_d260, 4
  %v4_d260.off = add i32 %v4_d260, 3
  %tmp107 = icmp ult i32 %v4_d260.off, 7
  br i1 %tmp107, label %bb, label %dec_label_pc_d26d

bb:                                               ; preds = %dec_label_pc_d240
  %v3_d267 = call i32 @function_d340(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_d26d

dec_label_pc_d26d:                                ; preds = %bb, %dec_label_pc_d240
  %v2_d26d = phi i32 [ %v3_d267, %bb ], [ %v2_d262, %dec_label_pc_d240 ]
  ret i32 %v2_d26d
}

define i32 @function_d278(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_d278:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_d278 = load i32, i32* %ecx.global-to-local, align 4
  %v1_d278 = add i32 %v0_d278, 1183579203
  %v2_d278 = inttoptr i32 %v1_d278 to i32*
  %v3_d278 = load i32, i32* %v2_d278, align 4
  %v4_d278 = add i32 %v3_d278, -1
  store i32 %v4_d278, i32* %v2_d278, align 4
  %v0_d27e = load i32, i32* %eax.global-to-local, align 4
  %v2_d27e = load i1, i1* %cf.global-to-local, align 1
  %v3_d27e = zext i1 %v2_d27e to i32
  %v4_d27e = add i32 %v0_d27e, 141
  %v5_d27e = add i32 %v4_d27e, %v3_d27e
  %v25_d27e = urem i32 %v5_d27e, 256
  %v27_d27e = and i32 %v0_d27e, -256
  %v28_d27e = or i32 %v25_d27e, %v27_d27e
  store i32 %v28_d27e, i32* %eax.global-to-local, align 4
  store i32 %v28_d27e, i32* %stack_var_-4, align 4
  %v0_d282 = load i32, i32* %edx.global-to-local, align 4
  %v1_d282 = load i32, i32* %esi.global-to-local, align 4
  %v2_d282 = add i32 %v1_d282, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_d282 = inttoptr i32 %v2_d282 to i32*
  store i32 %v0_d282, i32* %v3_d282, align 4
  %v0_d285 = load i32, i32* %eax.global-to-local, align 4
  %v1_d285 = add i32 %v0_d285, -4
  %v2_d285 = inttoptr i32 %v1_d285 to i32*
  %v3_d285 = load i32, i32* %v2_d285, align 4
  store i32 %v3_d285, i32* %ebx.global-to-local, align 4
  %v1_d288 = add i32 %v3_d285, 504
  %v1_d28e = load i32, i32* %esi.global-to-local, align 4
  %v2_d28e = add i32 %v1_d28e, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_d28e = inttoptr i32 %v2_d28e to i32*
  store i32 %v1_d288, i32* %v3_d28e, align 4
  %v0_d291 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d291 = add i32 %v0_d291, 492
  store i32 %v1_d291, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_d297 = icmp eq i32 %v1_d291, 0
  %v1_d299 = load i32, i32* %esi.global-to-local, align 4
  %v2_d299 = add i32 %v1_d299, 12
  %v3_d299 = inttoptr i32 %v2_d299 to i32*
  store i32 %v0_d291, i32* %v3_d299, align 4
  %v1_d29c = load i32, i32* %esi.global-to-local, align 4
  %v2_d29c = add i32 %v1_d29c, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_d29c = inttoptr i32 %v2_d29c to i32*
  store i32 %v1_d291, i32* %v3_d29c, align 4
  br i1 %v1_d297, label %dec_label_pc_d325, label %dec_label_pc_d2a5

dec_label_pc_d2a5:                                ; preds = %dec_label_pc_d278
  %v0_d2a5 = load i32, i32* %edi.global-to-local, align 4
  %v1_d2a5 = add i32 %v0_d2a5, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d2a5 = inttoptr i32 %v1_d2a5 to i32*
  %v3_d2a5 = load i32, i32* %v2_d2a5, align 4
  %v4_d2a8 = sub i32 %v3_d2a5, %v0_d2a5
  %v14_d2a8 = icmp eq i32 %v4_d2a8, 0
  store i32 %v4_d2a8, i32* %ebp.global-to-local, align 4
  %v0_d2b2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d2b2 = add i32 %v0_d2b2, 492
  %v2_d2b2 = inttoptr i32 %v1_d2b2 to i32*
  store i32 0, i32* %v2_d2b2, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v0_d2be = load i32, i32* %ebx.global-to-local, align 4
  %v1_d2be = add i32 %v0_d2be, 496
  %v2_d2be = inttoptr i32 %v1_d2be to i32*
  store i32 0, i32* %v2_d2be, align 4
  %v0_d2c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d2c8 = add i32 %v0_d2c8, 500
  %v2_d2c8 = inttoptr i32 %v1_d2c8 to i32*
  store i32 0, i32* %v2_d2c8, align 4
  %v1_d2d2 = icmp eq i1 %v14_d2a8, false
  br i1 %v1_d2d2, label %bb, label %dec_label_pc_d2d8

bb:                                               ; preds = %dec_label_pc_d2a5
  %v2_d2d2 = load i32, i32* %stack_var_-4, align 4
  %v3_d2d2 = call i32 @function_d360(i32 %v2_d2d2)
  store i32 %v3_d2d2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d2d8

dec_label_pc_d2d8:                                ; preds = %bb, %dec_label_pc_d2a5
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v4_d2a8, i32* %ebp.global-to-local, align 4
  %v1_d2de = load i32, i32* %ebx.global-to-local, align 4
  %v2_d2de = add i32 %v1_d2de, 492
  %v3_d2de = inttoptr i32 %v2_d2de to i32*
  store i32 0, i32* %v3_d2de, align 4
  %v0_d2e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_d2e4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d2e4 = add i32 %v1_d2e4, 496
  %v3_d2e4 = inttoptr i32 %v2_d2e4 to i32*
  store i32 %v0_d2e4, i32* %v3_d2e4, align 4
  %v0_d2ea = load i32, i32* %ebp.global-to-local, align 4
  %v1_d2ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_d2ea = add i32 %v1_d2ea, 500
  %v3_d2ea = inttoptr i32 %v2_d2ea to i32*
  store i32 %v0_d2ea, i32* %v3_d2ea, align 4
  %v0_d2f0 = load i32, i32* %edi.global-to-local, align 4
  %v1_d2f0 = add i32 %v0_d2f0, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d2f0 = inttoptr i32 %v1_d2f0 to i32*
  %v3_d2f0 = load i32, i32* %v2_d2f0, align 4
  store i32 %v3_d2f0, i32* %ebp.global-to-local, align 4
  %v7_d2f5 = icmp ult i32 %v3_d2f0, %v0_d2f0
  store i1 %v7_d2f5, i1* %cf.global-to-local, align 1
  %v12_d2f5 = icmp eq i32 %v3_d2f0, %v0_d2f0
  br i1 %v12_d2f5, label %dec_label_pc_d31b, label %dec_label_pc_d2f9

dec_label_pc_d2f9:                                ; preds = %dec_label_pc_d2d8
  store i32 %v0_d2f0, i32* %edx.global-to-local, align 4
  %v0_d2fb = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_d2fb, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_d300

dec_label_pc_d300:                                ; preds = %dec_label_pc_d30b, %dec_label_pc_d2f9
  %v1_d3116 = phi i32 [ %v1_d311, %dec_label_pc_d30b ], [ %v3_d2f0, %dec_label_pc_d2f9 ]
  %v0_d304 = phi i32 [ %v1_d30b, %dec_label_pc_d30b ], [ %v0_d2f0, %dec_label_pc_d2f9 ]
  %v2_d309 = phi i32 [ %v1_d30e, %dec_label_pc_d30b ], [ %v0_d2fb, %dec_label_pc_d2f9 ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_d300 = icmp eq i32 %v2_d309, 0
  br i1 %v1_d300, label %dec_label_pc_d30b, label %dec_label_pc_d304

dec_label_pc_d304:                                ; preds = %dec_label_pc_d300
  %v1_d304 = inttoptr i32 %v0_d304 to i8*
  %v2_d304 = load i8, i8* %v1_d304, align 1
  %v3_d304 = zext i8 %v2_d304 to i32
  store i32 %v3_d304, i32* %esi.global-to-local, align 4
  store i32 %v3_d304, i32* %eax.global-to-local, align 4
  %v3_d309 = inttoptr i32 %v2_d309 to i8*
  store i8 %v2_d304, i8* %v3_d309, align 1
  %v0_d30b.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d30e.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_d311.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d30b

dec_label_pc_d30b:                                ; preds = %dec_label_pc_d304, %dec_label_pc_d300
  %v1_d311 = phi i32 [ %v1_d311.pre, %dec_label_pc_d304 ], [ %v1_d3116, %dec_label_pc_d300 ]
  %v0_d30e = phi i32 [ %v0_d30e.pre, %dec_label_pc_d304 ], [ 0, %dec_label_pc_d300 ]
  %v0_d30b = phi i32 [ %v0_d30b.pre, %dec_label_pc_d304 ], [ %v0_d304, %dec_label_pc_d300 ]
  %v1_d30b = add i32 %v0_d30b, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d30b, i32* %edx.global-to-local, align 4
  %v1_d30e = add i32 %v0_d30e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d30e, i32* %ecx.global-to-local, align 4
  %v7_d311 = icmp ult i32 %v1_d30b, %v1_d311
  store i1 %v7_d311, i1* %cf.global-to-local, align 1
  %v12_d311 = icmp eq i32 %v1_d30b, %v1_d311
  %v1_d313 = icmp eq i1 %v12_d311, false
  br i1 %v1_d313, label %dec_label_pc_d300, label %dec_label_pc_d315

dec_label_pc_d315:                                ; preds = %dec_label_pc_d30b
  %v1_d315 = load i32, i32* %edi.global-to-local, align 4
  %v2_d315 = sub i32 %v1_d30b, %v1_d315
  store i32 %v2_d315, i32* %edx.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %dec_label_pc_d31b

dec_label_pc_d31b:                                ; preds = %dec_label_pc_d315, %dec_label_pc_d2d8
  %stack_var_24.0 = phi i32 [ 0, %dec_label_pc_d2d8 ], [ %v2_d315, %dec_label_pc_d315 ]
  store i32 %stack_var_24.0, i32* %eax.global-to-local, align 4
  %v1_d31f = load i32, i32* %ebx.global-to-local, align 4
  %v2_d31f = add i32 %v1_d31f, 496
  %v3_d31f = inttoptr i32 %v2_d31f to i32*
  store i32 %stack_var_24.0, i32* %v3_d31f, align 4
  br label %dec_label_pc_d325

dec_label_pc_d325:                                ; preds = %dec_label_pc_d31b, %dec_label_pc_d278
  %v3_d329 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_d329 = icmp eq i32 %v3_d329, 0
  store i32 %v3_d329, i32* @eax, align 4
  %v1_d330 = icmp eq i1 %v4_d329, false
  br i1 %v1_d330, label %bb115, label %dec_label_pc_d332

bb115:                                            ; preds = %dec_label_pc_d325
  %v2_d330 = call i32 @function_d397()
  store i32 %v2_d330, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d332

dec_label_pc_d332:                                ; preds = %bb115, %dec_label_pc_d325
  %v0_d339 = phi i32 [ %v2_d330, %bb115 ], [ %v3_d329, %dec_label_pc_d325 ]
  %v0_d332 = load i32, i32* @esp, align 4
  %v5_d332 = icmp ugt i32 %v0_d332, -61
  store i1 %v5_d332, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_d339

; uselistorder directives
  uselistorder i32 %stack_var_24.0, { 1, 0 }
  uselistorder i32 %v1_d30e, { 1, 0 }
  uselistorder i32 %v1_d30b, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_d2f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d2f0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_d27e, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 1, 7, 8, 9 }
}

define i32 @function_d340(i32 %arg1) local_unnamed_addr {
dec_label_pc_d340:
  %v0_d350 = load i32, i32* @esi, align 4
  %v5_d353 = call i32 @unknown_1a2e0(i32 %v0_d350, i32 ptrtoint (i8** @global_var_1.820 to i32), i32 ptrtoint (i8** @global_var_1.820 to i32))
  ret i32 %v5_d353
}

define i32 @function_d360(i32 %arg1) local_unnamed_addr {
dec_label_pc_d360:
  %v3_d360 = load i32, i32* @eax, align 4
  ret i32 %v3_d360
}

define i32 @function_d368() local_unnamed_addr {
dec_label_pc_d368:
  %eax.global-to-local = alloca i32, align 4
  %v0_d36c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d36c
}

define i32 @function_d397() local_unnamed_addr {
dec_label_pc_d397:
  %v0_d39c = load i32, i32* @eax, align 4
  ret i32 %v0_d39c
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE10push_frontERKS3_(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_d3b0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp112 = ptrtoint i32* %arg2 to i32
  %v0_d3b0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_d3b1 = load i32, i32* %edi.global-to-local, align 4
  %v0_d3b2 = load i32, i32* %esi.global-to-local, align 4
  %v0_d3b3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %tmp112, i32* %edx.global-to-local, align 4
  %v1_d3cb = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d3cb = inttoptr i32 %v1_d3cb to i32*
  %v3_d3cb = load i32, i32* %v2_d3cb, align 4
  store i32 %v3_d3cb, i32* %ebx.global-to-local, align 4
  %v2_d3ce = add i32 %arg1, 12
  %v3_d3ce = inttoptr i32 %v2_d3ce to i32*
  %v4_d3ce = load i32, i32* %v3_d3ce, align 4
  %v15_d3ce = icmp eq i32 %v3_d3cb, %v4_d3ce
  br i1 %v15_d3ce, label %dec_label_pc_d46c, label %dec_label_pc_d3d7

dec_label_pc_d3d7:                                ; preds = %dec_label_pc_d3b0
  %v1_d3d7 = add i32 %v3_d3cb, -12
  %v10_d3d7 = icmp eq i32 %v1_d3d7, 0
  br i1 %v10_d3d7, label %dec_label_pc_d43a, label %dec_label_pc_d3dc

dec_label_pc_d3dc:                                ; preds = %dec_label_pc_d3d7
  %v1_d3dc = add i32 %tmp112, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d3dc = inttoptr i32 %v1_d3dc to i32*
  %v3_d3dc = load i32, i32* %v2_d3dc, align 4
  store i32 %v3_d3dc, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  %v3_d3e1 = load i32, i32* %arg2, align 4
  %v4_d3e1 = sub i32 %v3_d3dc, %v3_d3e1
  %v14_d3e1 = icmp eq i32 %v4_d3e1, 0
  store i32 %v4_d3e1, i32* %edi.global-to-local, align 4
  %v2_d3e3 = inttoptr i32 %v1_d3d7 to i32*
  store i32 0, i32* %v2_d3e3, align 4
  %v0_d3ea = load i32, i32* %ebx.global-to-local, align 4
  %v1_d3ea = add i32 %v0_d3ea, -8
  %v2_d3ea = inttoptr i32 %v1_d3ea to i32*
  store i32 0, i32* %v2_d3ea, align 4
  %v0_d3f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d3f3 = add i32 %v0_d3f3, -4
  %v2_d3f3 = inttoptr i32 %v1_d3f3 to i32*
  store i32 0, i32* %v2_d3f3, align 4
  %v1_d3fa = icmp eq i1 %v14_d3e1, false
  br i1 %v1_d3fa, label %dec_label_pc_d458, label %dec_label_pc_d3dc.dec_label_pc_d3fc_crit_edge

dec_label_pc_d3dc.dec_label_pc_d3fc_crit_edge:    ; preds = %dec_label_pc_d3dc
  %v1_d3fc.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d3fc

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d3dc.dec_label_pc_d3fc_crit_edge, %dec_label_pc_d458
  %v0_d3fe = phi i32 [ %v1_d3fc.pre, %dec_label_pc_d3dc.dec_label_pc_d3fc_crit_edge ], [ %v0_d468, %dec_label_pc_d458 ]
  %v2_d3fc = add i32 %v0_d3fe, %v4_d3e1
  store i32 %v2_d3fc, i32* %edi.global-to-local, align 4
  %v1_d3fe = load i32, i32* %ebx.global-to-local, align 4
  %v2_d3fe = add i32 %v1_d3fe, -12
  %v3_d3fe = inttoptr i32 %v2_d3fe to i32*
  store i32 %v0_d3fe, i32* %v3_d3fe, align 4
  %v0_d401 = load i32, i32* %ebp.global-to-local, align 4
  %v1_d401 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d401 = add i32 %v1_d401, -8
  %v3_d401 = inttoptr i32 %v2_d401 to i32*
  store i32 %v0_d401, i32* %v3_d401, align 4
  %v0_d404 = load i32, i32* %edi.global-to-local, align 4
  %v1_d404 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d404 = add i32 %v1_d404, -4
  %v3_d404 = inttoptr i32 %v2_d404 to i32*
  store i32 %v0_d404, i32* %v3_d404, align 4
  %v0_d407 = load i32, i32* %edx.global-to-local, align 4
  %v1_d407 = add i32 %v0_d407, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d407 = inttoptr i32 %v1_d407 to i32*
  %v3_d407 = load i32, i32* %v2_d407, align 4
  store i32 %v3_d407, i32* %edi.global-to-local, align 4
  %v1_d40a = inttoptr i32 %v0_d407 to i32*
  %v2_d40a = load i32, i32* %v1_d40a, align 4
  store i32 %v2_d40a, i32* %edx.global-to-local, align 4
  %v12_d40c = icmp eq i32 %v3_d407, %v2_d40a
  %v0_d434.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v12_d40c, label %dec_label_pc_d431, label %dec_label_pc_d414

dec_label_pc_d414:                                ; preds = %dec_label_pc_d3fc
  store i32 %v0_d434.pre, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d421, %dec_label_pc_d414
  %v1_d4276 = phi i32 [ %v1_d427, %dec_label_pc_d421 ], [ %v3_d407, %dec_label_pc_d414 ]
  %v0_d41c = phi i32 [ %v1_d421, %dec_label_pc_d421 ], [ %v2_d40a, %dec_label_pc_d414 ]
  %v2_d41f = phi i32 [ %v1_d424, %dec_label_pc_d421 ], [ %v0_d434.pre, %dec_label_pc_d414 ]
  %v1_d418 = icmp eq i32 %v2_d41f, 0
  br i1 %v1_d418, label %dec_label_pc_d421, label %dec_label_pc_d41c

dec_label_pc_d41c:                                ; preds = %dec_label_pc_d418
  %v1_d41c = inttoptr i32 %v0_d41c to i8*
  %v2_d41c = load i8, i8* %v1_d41c, align 1
  %v3_d41c = zext i8 %v2_d41c to i32
  store i32 %v3_d41c, i32* %eax.global-to-local, align 4
  %v3_d41f = inttoptr i32 %v2_d41f to i8*
  store i8 %v2_d41c, i8* %v3_d41f, align 1
  %v0_d421.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d424.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_d427.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_d421

dec_label_pc_d421:                                ; preds = %dec_label_pc_d41c, %dec_label_pc_d418
  %v1_d427 = phi i32 [ %v1_d427.pre, %dec_label_pc_d41c ], [ %v1_d4276, %dec_label_pc_d418 ]
  %v0_d424 = phi i32 [ %v0_d424.pre, %dec_label_pc_d41c ], [ 0, %dec_label_pc_d418 ]
  %v0_d421 = phi i32 [ %v0_d421.pre, %dec_label_pc_d41c ], [ %v0_d41c, %dec_label_pc_d418 ]
  %v1_d421 = add i32 %v0_d421, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d421, i32* %edx.global-to-local, align 4
  %v1_d424 = add i32 %v0_d424, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d424, i32* %ecx.global-to-local, align 4
  %v12_d427 = icmp eq i32 %v1_d421, %v1_d427
  %v1_d429 = icmp eq i1 %v12_d427, false
  br i1 %v1_d429, label %dec_label_pc_d418, label %dec_label_pc_d42b

dec_label_pc_d42b:                                ; preds = %dec_label_pc_d421
  %v5_d42b = sub i32 %v1_d421, %v2_d40a
  store i32 %v5_d42b, i32* %edx.global-to-local, align 4
  %v0_d42f = load i32, i32* %ebp.global-to-local, align 4
  %v2_d42f = add i32 %v0_d42f, %v5_d42b
  store i32 %v2_d42f, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d431

dec_label_pc_d431:                                ; preds = %dec_label_pc_d3fc, %dec_label_pc_d42b
  %v0_d434 = phi i32 [ %v2_d42f, %dec_label_pc_d42b ], [ %v0_d434.pre, %dec_label_pc_d3fc ]
  %v0_d431 = load i32, i32* %esi.global-to-local, align 4
  %v1_d431 = add i32 %v0_d431, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d431 = inttoptr i32 %v1_d431 to i32*
  %v3_d431 = load i32, i32* %v2_d431, align 4
  store i32 %v3_d431, i32* %eax.global-to-local, align 4
  %v1_d434 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d434 = add i32 %v1_d434, -8
  %v3_d434 = inttoptr i32 %v2_d434 to i32*
  store i32 %v0_d434, i32* %v3_d434, align 4
  %v0_d437 = load i32, i32* %eax.global-to-local, align 4
  %v1_d437 = add i32 %v0_d437, -12
  store i32 %v1_d437, i32* %eax.global-to-local, align 4
  %v1_d43a.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_d43a

dec_label_pc_d43a:                                ; preds = %dec_label_pc_d431, %dec_label_pc_d3d7
  %v1_d43a = phi i32 [ %v1_d43a.pre, %dec_label_pc_d431 ], [ %arg1, %dec_label_pc_d3d7 ]
  %v0_d43a = phi i32 [ %v1_d437, %dec_label_pc_d431 ], [ 0, %dec_label_pc_d3d7 ]
  %v2_d43a = add i32 %v1_d43a, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_d43a = inttoptr i32 %v2_d43a to i32*
  store i32 %v0_d43a, i32* %v3_d43a, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %eax.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_d48d, label %dec_label_pc_d44a

dec_label_pc_d44a:                                ; preds = %dec_label_pc_d43a
  store i32 %v0_d3b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_d3b2, i32* %esi.global-to-local, align 4
  store i32 %v0_d3b1, i32* %edi.global-to-local, align 4
  store i32 %v0_d3b0, i32* %ebp.global-to-local, align 4
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_d458:                                ; preds = %dec_label_pc_d3dc
  %v0_d468 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_d468, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d3fc

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d3b0
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_d48d, label %dec_label_pc_d479

dec_label_pc_d479:                                ; preds = %dec_label_pc_d46c
  store i32 %v0_d3b3, i32* %ebx.global-to-local, align 4
  store i32 %v0_d3b2, i32* %esi.global-to-local, align 4
  %v2_d488 = call i32 @function_1a5f0(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v2_d488, i32* %eax.global-to-local, align 4
  ret i32 %v2_d488

dec_label_pc_d48d:                                ; preds = %dec_label_pc_d46c, %dec_label_pc_d43a
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32 %v0_d468, { 1, 0 }
  uselistorder i32 %v1_d424, { 1, 0 }
  uselistorder i32 %v1_d421, { 1, 0, 3, 2 }
  uselistorder i32 %v0_d434.pre, { 0, 2, 1 }
  uselistorder i32 %v2_d40a, { 2, 1, 0, 3 }
  uselistorder i32 %v3_d407, { 1, 0, 2 }
  uselistorder i32 %v0_d3fe, { 1, 0 }
  uselistorder i32 %v3_d3cb, { 1, 0, 2 }
  uselistorder i32 %v0_d3b3, { 1, 0 }
  uselistorder i32 %v0_d3b2, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 4, 5, 6, 3, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_d431, { 1, 0 }
  uselistorder label %dec_label_pc_d3fc, { 1, 0 }
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE16_M_push_back_auxERKS3_(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d4a0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  store i32 %tmp101, i32* @ebx, align 4
  %v1_d4bb = add i32 %tmp101, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d4bb = inttoptr i32 %v1_d4bb to i32*
  %v3_d4bb = load i32, i32* %v2_d4bb, align 4
  %v3_d4c0 = load i32, i32* %arg1, align 4
  %v4_d4c0 = sub i32 %v3_d4bb, %v3_d4c0
  %v2_d4c2 = sdiv i32 %v4_d4c0, 4
  %v2_d4c7 = add i32 %tmp101, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d4c7 = inttoptr i32 %v2_d4c7 to i32*
  %v4_d4c7 = load i32, i32* %v3_d4c7, align 4
  %v5_d4c7 = sub i32 %v4_d4c7, %v2_d4c2
  %tmp108 = or i32 %v5_d4c7, 1
  %tmp109 = icmp eq i32 %tmp108, 1
  br i1 %tmp109, label %bb, label %dec_label_pc_d4d3

bb:                                               ; preds = %dec_label_pc_d4a0
  %v5_d4cd = call i32 @function_d588(i32 ptrtoint ([2 x i8]* @2 to i32))
  br label %dec_label_pc_d4d3

dec_label_pc_d4d3:                                ; preds = %bb, %dec_label_pc_d4a0
  %v2_d4d3 = phi i32 [ %v5_d4cd, %bb ], [ %v5_d4c7, %dec_label_pc_d4a0 ]
  ret i32 %v2_d4d3

; uselistorder directives
  uselistorder i32 %v5_d4c7, { 1, 0 }
}

define i32 @function_d4de(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_d4de:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_d4de = load i32, i32* %ecx.global-to-local, align 4
  %v1_d4de = add i32 %v0_d4de, 1938490438
  %v2_d4de = inttoptr i32 %v1_d4de to i32*
  %v3_d4de = load i32, i32* %v2_d4de, align 4
  %v4_d4de = add i32 %v3_d4de, -1
  store i32 %v4_d4de, i32* %v2_d4de, align 4
  %v0_d4e4 = load i32, i32* %ebp.global-to-local, align 4
  %v1_d4e4 = add i32 %v0_d4e4, -1956809482
  %v2_d4e4 = inttoptr i32 %v1_d4e4 to i8*
  %v3_d4e4 = load i8, i8* %v2_d4e4, align 1
  %v4_d4e4 = load i32, i32* %eax.global-to-local, align 4
  %v5_d4e4 = trunc i32 %v4_d4e4 to i8
  %v6_d4e4 = load i1, i1* %cf.global-to-local, align 1
  %v7_d4e4 = zext i1 %v6_d4e4 to i8
  %v8_d4e4 = sub i8 %v3_d4e4, %v5_d4e4
  %v9_d4e4 = add i8 %v8_d4e4, %v7_d4e4
  %v19_d4e4 = sub i8 %v8_d4e4, %v7_d4e4
  %v20_d4e4 = icmp ult i8 %v3_d4e4, %v19_d4e4
  %v21_d4e4 = icmp ne i8 %v5_d4e4, -1
  %v22_d4e4 = or i1 %v21_d4e4, %v20_d4e4
  %v23_d4e4 = icmp ult i8 %v3_d4e4, %v5_d4e4
  %v24_d4e4 = select i1 %v6_d4e4, i1 %v22_d4e4, i1 %v23_d4e4
  store i1 %v24_d4e4, i1* %cf.global-to-local, align 1
  store i8 %v9_d4e4, i8* %v2_d4e4, align 1
  %v0_d4ea = load i32, i32* %edx.global-to-local, align 4
  %v1_d4ea = trunc i32 %v0_d4ea to i16
  %v4_d4ea = load i32, i32* %esi.global-to-local, align 4
  call void @__asm_outsd(i16 %v1_d4ea, i32 %v4_d4ea)
  %v0_d4eb = load i32, i32* %eax.global-to-local, align 4
  %v2_d4eb = add i32 %v0_d4eb, zext (i8 ptrtoint (i8* @global_var_31.945 to i8) to i32)
  %v16_d4eb = urem i32 %v2_d4eb, 256
  %v18_d4eb = and i32 %v0_d4eb, -256
  %v19_d4eb = or i32 %v16_d4eb, %v18_d4eb
  store i32 %v19_d4eb, i32* %eax.global-to-local, align 4
  %v2_d4ed = load i8, i8* bitcast (i32* @ebx to i8*), align 4
  %v4_d4ed = lshr i8 %v2_d4ed, ptrtoint (i8* @global_var_f.946 to i8)
  %v10_d4ed = load i32, i32* %ebx.global-to-local, align 4
  %v11_d4ed = inttoptr i32 %v10_d4ed to i8*
  store i8 %v4_d4ed, i8* %v11_d4ed, align 1
  %v0_d4f0 = load i32, i32* %esi.global-to-local, align 4
  %v1_d4f0 = inttoptr i32 %v0_d4f0 to i32*
  store i32 0, i32* %v1_d4f0, align 4
  %v0_d4f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_d4f6 = add i32 %v0_d4f6, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d4f6 = inttoptr i32 %v1_d4f6 to i32*
  store i32 0, i32* %v2_d4f6, align 4
  %v0_d4fd = load i32, i32* %ebp.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_d4fd = icmp eq i32 %v0_d4fd, 0
  %v0_d4ff = load i32, i32* %esi.global-to-local, align 4
  %v1_d4ff = add i32 %v0_d4ff, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d4ff = inttoptr i32 %v1_d4ff to i32*
  store i32 0, i32* %v2_d4ff, align 4
  %v1_d506 = icmp eq i1 %v1_d4fd, false
  br i1 %v1_d506, label %dec_label_pc_d578, label %dec_label_pc_d508

dec_label_pc_d508:                                ; preds = %dec_label_pc_d4de
  %v0_d508 = load i32, i32* %ebp.global-to-local, align 4
  %v1_d508 = load i32, i32* %eax.global-to-local, align 4
  %v2_d508 = add i32 %v1_d508, %v0_d508
  store i32 %v2_d508, i32* %ebp.global-to-local, align 4
  %v1_d50a = load i32, i32* %esi.global-to-local, align 4
  %v2_d50a = inttoptr i32 %v1_d50a to i32*
  store i32 %v1_d508, i32* %v2_d50a, align 4
  %v0_d50c = load i32, i32* %eax.global-to-local, align 4
  %v1_d50c = load i32, i32* %esi.global-to-local, align 4
  %v2_d50c = add i32 %v1_d50c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d50c = inttoptr i32 %v2_d50c to i32*
  store i32 %v0_d50c, i32* %v3_d50c, align 4
  %v0_d50f = load i32, i32* %ebp.global-to-local, align 4
  %v1_d50f = load i32, i32* %esi.global-to-local, align 4
  %v2_d50f = add i32 %v1_d50f, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_d50f = inttoptr i32 %v2_d50f to i32*
  store i32 %v0_d50f, i32* %v3_d50f, align 4
  %v0_d512 = load i32, i32* %edi.global-to-local, align 4
  %v1_d512 = add i32 %v0_d512, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d512 = inttoptr i32 %v1_d512 to i32*
  %v3_d512 = load i32, i32* %v2_d512, align 4
  store i32 %v3_d512, i32* %ebp.global-to-local, align 4
  %v7_d517 = icmp ult i32 %v3_d512, %v0_d512
  store i1 %v7_d517, i1* %cf.global-to-local, align 1
  %v12_d517 = icmp eq i32 %v3_d512, %v0_d512
  br i1 %v12_d517, label %dec_label_pc_d508.dec_label_pc_d543_crit_edge, label %dec_label_pc_d51f

dec_label_pc_d508.dec_label_pc_d543_crit_edge:    ; preds = %dec_label_pc_d508
  %v0_d543.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d543

dec_label_pc_d51f:                                ; preds = %dec_label_pc_d508
  store i32 %v0_d512, i32* %edx.global-to-local, align 4
  %v0_d521 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_d521, i32* %ecx.global-to-local, align 4
  store i32 %v0_d521, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d531, %dec_label_pc_d51f
  %v1_d5375 = phi i32 [ %v1_d537, %dec_label_pc_d531 ], [ %v3_d512, %dec_label_pc_d51f ]
  %v0_d52c = phi i32 [ %v1_d531, %dec_label_pc_d531 ], [ %v0_d512, %dec_label_pc_d51f ]
  %v2_d52f = phi i32 [ %v1_d534, %dec_label_pc_d531 ], [ %v0_d521, %dec_label_pc_d51f ]
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_d528 = icmp eq i32 %v2_d52f, 0
  br i1 %v1_d528, label %dec_label_pc_d531, label %dec_label_pc_d52c

dec_label_pc_d52c:                                ; preds = %dec_label_pc_d528
  %v1_d52c = inttoptr i32 %v0_d52c to i8*
  %v2_d52c = load i8, i8* %v1_d52c, align 1
  %v3_d52c = zext i8 %v2_d52c to i32
  store i32 %v3_d52c, i32* %eax.global-to-local, align 4
  %v3_d52f = inttoptr i32 %v2_d52f to i8*
  store i8 %v2_d52c, i8* %v3_d52f, align 1
  %v0_d531.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d534.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_d537.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d531

dec_label_pc_d531:                                ; preds = %dec_label_pc_d52c, %dec_label_pc_d528
  %v1_d537 = phi i32 [ %v1_d537.pre, %dec_label_pc_d52c ], [ %v1_d5375, %dec_label_pc_d528 ]
  %v0_d534 = phi i32 [ %v0_d534.pre, %dec_label_pc_d52c ], [ 0, %dec_label_pc_d528 ]
  %v0_d531 = phi i32 [ %v0_d531.pre, %dec_label_pc_d52c ], [ %v0_d52c, %dec_label_pc_d528 ]
  %v1_d531 = add i32 %v0_d531, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d531, i32* %edx.global-to-local, align 4
  %v1_d534 = add i32 %v0_d534, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d534, i32* %ecx.global-to-local, align 4
  %v7_d537 = icmp ult i32 %v1_d531, %v1_d537
  store i1 %v7_d537, i1* %cf.global-to-local, align 1
  %v12_d537 = icmp eq i32 %v1_d531, %v1_d537
  %v1_d539 = icmp eq i1 %v12_d537, false
  br i1 %v1_d539, label %dec_label_pc_d528, label %dec_label_pc_d53b

dec_label_pc_d53b:                                ; preds = %dec_label_pc_d531
  %v5_d53b = sub i32 %v1_d531, %v0_d512
  store i32 %v5_d53b, i32* %edx.global-to-local, align 4
  %v0_d53f = load i32, i32* %edi.global-to-local, align 4
  %v2_d541 = add i32 %v0_d53f, %v5_d53b
  %v7_d541 = icmp ult i32 %v2_d541, %v0_d53f
  store i1 %v7_d541, i1* %cf.global-to-local, align 1
  store i32 %v2_d541, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d543

dec_label_pc_d543:                                ; preds = %dec_label_pc_d508.dec_label_pc_d543_crit_edge, %dec_label_pc_d53b
  %v0_d543 = phi i32 [ %v0_d543.pre, %dec_label_pc_d508.dec_label_pc_d543_crit_edge ], [ %v2_d541, %dec_label_pc_d53b ]
  %v1_d543 = load i32, i32* %esi.global-to-local, align 4
  %v2_d543 = add i32 %v1_d543, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d543 = inttoptr i32 %v2_d543 to i32*
  store i32 %v0_d543, i32* %v3_d543, align 4
  %v0_d546 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d546 = add i32 %v0_d546, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d546 = inttoptr i32 %v1_d546 to i32*
  %v3_d546 = load i32, i32* %v2_d546, align 4
  store i32 %v3_d546, i32* %eax.global-to-local, align 4
  %v1_d549 = add i32 %v3_d546, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_d549, i32* %edx.global-to-local, align 4
  store i32 %v1_d549, i32* %v2_d546, align 4
  %v0_d54f = load i32, i32* %eax.global-to-local, align 4
  %v1_d54f = add i32 %v0_d54f, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d54f = inttoptr i32 %v1_d54f to i32*
  %v3_d54f = load i32, i32* %v2_d54f, align 4
  store i32 %v3_d54f, i32* %eax.global-to-local, align 4
  %v1_d552 = add i32 %v3_d54f, 504
  store i32 %v1_d552, i32* %edx.global-to-local, align 4
  %v1_d558 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d558 = add i32 %v1_d558, 28
  %v3_d558 = inttoptr i32 %v2_d558 to i32*
  store i32 %v3_d54f, i32* %v3_d558, align 4
  %v0_d55b = load i32, i32* %eax.global-to-local, align 4
  %v1_d55b = load i32, i32* %ebx.global-to-local, align 4
  %v2_d55b = add i32 %v1_d55b, 24
  %v3_d55b = inttoptr i32 %v2_d55b to i32*
  store i32 %v0_d55b, i32* %v3_d55b, align 4
  %v3_d562 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_d562 = icmp eq i32 %v3_d562, 0
  store i32 %v3_d562, i32* @eax, align 4
  %v0_d569 = load i32, i32* %edx.global-to-local, align 4
  %v1_d569 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d569 = add i32 %v1_d569, 32
  %v3_d569 = inttoptr i32 %v2_d569 to i32*
  store i32 %v0_d569, i32* %v3_d569, align 4
  %v1_d56c = icmp eq i1 %v4_d562, false
  br i1 %v1_d56c, label %bb, label %dec_label_pc_d543.dec_label_pc_d56e_crit_edge

dec_label_pc_d543.dec_label_pc_d56e_crit_edge:    ; preds = %dec_label_pc_d543
  %v0_d575.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_d56e

bb:                                               ; preds = %dec_label_pc_d543
  %v2_d56c = call i32 @function_d5c3()
  store i32 %v2_d56c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d56e

dec_label_pc_d56e:                                ; preds = %dec_label_pc_d543.dec_label_pc_d56e_crit_edge, %bb
  %v0_d575 = phi i32 [ %v0_d575.pre, %dec_label_pc_d543.dec_label_pc_d56e_crit_edge ], [ %v2_d56c, %bb ]
  %v0_d56e = load i32, i32* @esp, align 4
  %v5_d56e = icmp ugt i32 %v0_d56e, -61
  store i1 %v5_d56e, i1* %cf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_d575

dec_label_pc_d578:                                ; preds = %dec_label_pc_d4de
  %v3_d578 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_d578

; uselistorder directives
  uselistorder i32 %v0_d53f, { 1, 0 }
  uselistorder i32 %v1_d534, { 1, 0 }
  uselistorder i32 %v1_d531, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v3_d512, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d512, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %v1_d508, { 1, 0 }
  uselistorder i32 %v0_d4eb, { 1, 0 }
  uselistorder i8 %v5_d4e4, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_d56e, { 1, 0 }
  uselistorder label %dec_label_pc_d543, { 1, 0 }
}

define i32 @function_d580() local_unnamed_addr {
dec_label_pc_d580:
  %eax.global-to-local = alloca i32, align 4
  %v0_d580 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d580
}

define i32 @function_d588(i32 %arg1) local_unnamed_addr {
dec_label_pc_d588:
  %v0_d598 = load i32, i32* @ebx, align 4
  %v4_d59b = call i32 @unknown_1a540(i32 %v0_d598, i32 ptrtoint (i8** @global_var_1.820 to i32), i32 0)
  ret i32 %v4_d59b
}

declare i32 @_ZdlPv.228() local_unnamed_addr

define i32 @function_d5c3() local_unnamed_addr {
dec_label_pc_d5c3:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_d5c9() local_unnamed_addr {
dec_label_pc_d5c9:
  %eax.global-to-local = alloca i32, align 4
  %v0_d5c9 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_d5c9
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE13_M_insert_auxESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d5e0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %tmp168 = ptrtoint i32* %arg3 to i32
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %tmp168, i32* @esi, align 4
  %v1_d616 = add i32 %arg4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d616 = inttoptr i32 %v1_d616 to i32*
  %v3_d616 = load i32, i32* %v2_d616, align 4
  store i32 %v3_d616, i32* %ebp.global-to-local, align 4
  %v1_d619 = inttoptr i32 %arg4 to i32*
  %v2_d619 = load i32, i32* %v1_d619, align 4
  store i32 %v2_d619, i32* %ecx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d62e = sub i32 %v3_d616, %v2_d619
  %v12_d62e = icmp eq i32 %v2_d62e, 0
  store i32 %v2_d62e, i32* %edx.global-to-local, align 4
  %v1_d64a = icmp eq i1 %v12_d62e, false
  br i1 %v1_d64a, label %bb, label %dec_label_pc_d650

bb:                                               ; preds = %dec_label_pc_d5e0
  %v5_d64a = call i32 @function_d9e8(i32 %v2_d619, i32 %arg1)
  store i32 %v5_d64a, i32* @eax, align 4
  %v0_d650.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d652.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d650

dec_label_pc_d650:                                ; preds = %bb, %dec_label_pc_d5e0
  %v0_d652 = phi i32 [ %v0_d652.pre, %bb ], [ %v3_d616, %dec_label_pc_d5e0 ]
  %v0_d671 = phi i32 [ %v5_d64a, %bb ], [ 0, %dec_label_pc_d5e0 ]
  %v0_d650 = phi i32 [ %v0_d650.pre, %bb ], [ %v2_d62e, %dec_label_pc_d5e0 ]
  %v2_d650 = add i32 %v0_d650, %v0_d671
  store i32 %v2_d650, i32* %edx.global-to-local, align 4
  %v16_d652 = icmp eq i32 %v0_d652, %v2_d619
  store i32 %v0_d671, i32* %stack_var_-44, align 4
  br i1 %v16_d652, label %dec_label_pc_d691, label %dec_label_pc_d66d

dec_label_pc_d66d:                                ; preds = %dec_label_pc_d650
  store i32 %v2_d619, i32* %edx.global-to-local, align 4
  store i32 %v0_d671, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_d678

dec_label_pc_d678:                                ; preds = %dec_label_pc_d681, %dec_label_pc_d66d
  %v1_d6878 = phi i32 [ %v1_d687, %dec_label_pc_d681 ], [ %v0_d652, %dec_label_pc_d66d ]
  %v0_d67c = phi i32 [ %v1_d681, %dec_label_pc_d681 ], [ %v2_d619, %dec_label_pc_d66d ]
  %v2_d67f = phi i32 [ %v1_d684, %dec_label_pc_d681 ], [ %v0_d671, %dec_label_pc_d66d ]
  %v1_d678 = icmp eq i32 %v2_d67f, 0
  br i1 %v1_d678, label %dec_label_pc_d681, label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d678
  %v1_d67c = inttoptr i32 %v0_d67c to i8*
  %v2_d67c = load i8, i8* %v1_d67c, align 1
  %v3_d67c = zext i8 %v2_d67c to i32
  store i32 %v3_d67c, i32* %ebx.global-to-local, align 4
  %v3_d67f = inttoptr i32 %v2_d67f to i8*
  store i8 %v2_d67c, i8* %v3_d67f, align 1
  %v0_d681.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_d684.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_d687.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_d681

dec_label_pc_d681:                                ; preds = %dec_label_pc_d67c, %dec_label_pc_d678
  %v1_d687 = phi i32 [ %v1_d687.pre, %dec_label_pc_d67c ], [ %v1_d6878, %dec_label_pc_d678 ]
  %v0_d684 = phi i32 [ %v0_d684.pre, %dec_label_pc_d67c ], [ 0, %dec_label_pc_d678 ]
  %v0_d681 = phi i32 [ %v0_d681.pre, %dec_label_pc_d67c ], [ %v0_d67c, %dec_label_pc_d678 ]
  %v1_d681 = add i32 %v0_d681, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d681, i32* %edx.global-to-local, align 4
  %v1_d684 = add i32 %v0_d684, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d684, i32* %ecx.global-to-local, align 4
  %v12_d687 = icmp eq i32 %v1_d681, %v1_d687
  %v1_d689 = icmp eq i1 %v12_d687, false
  br i1 %v1_d689, label %dec_label_pc_d678, label %dec_label_pc_d68b

dec_label_pc_d68b:                                ; preds = %dec_label_pc_d681
  %v6_d68b = sub i32 %v1_d681, %v2_d619
  store i32 %v6_d68b, i32* %edx.global-to-local, align 4
  %v0_d68f = load i32, i32* @eax, align 4
  %v2_d68f = add i32 %v0_d68f, %v6_d68b
  store i32 %v2_d68f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d691

dec_label_pc_d691:                                ; preds = %dec_label_pc_d68b, %dec_label_pc_d650
  %v0_d69a = phi i32 [ %v2_d68f, %dec_label_pc_d68b ], [ %v0_d671, %dec_label_pc_d650 ]
  %v0_d691 = load i32, i32* @edi, align 4
  %v1_d691 = add i32 %v0_d691, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_d691 = inttoptr i32 %v1_d691 to i32*
  %v3_d691 = load i32, i32* %v2_d691, align 4
  store i32 %v3_d691, i32* %ebx.global-to-local, align 4
  %v1_d694 = add i32 %v0_d691, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_d694 = inttoptr i32 %v1_d694 to i32*
  %v3_d694 = load i32, i32* %v2_d694, align 4
  store i32 %v3_d694, i32* %ebp.global-to-local, align 4
  %v0_d697 = load i32, i32* @esi, align 4
  %v1_d697 = add i32 %v0_d697, 12
  %v2_d697 = inttoptr i32 %v1_d697 to i32*
  %v3_d697 = load i32, i32* %v2_d697, align 4
  store i32 %v3_d697, i32* %ecx.global-to-local, align 4
  %v1_d6a1 = inttoptr i32 %v0_d697 to i32*
  %v2_d6a1 = load i32, i32* %v1_d6a1, align 4
  store i32 %v2_d6a1, i32* %eax.global-to-local, align 4
  %v2_d6a3 = add i32 %v0_d697, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d6a3 = inttoptr i32 %v2_d6a3 to i32*
  %v4_d6a3 = load i32, i32* %v3_d6a3, align 4
  %v5_d6a3 = sub i32 %v2_d6a1, %v4_d6a3
  store i32 %v5_d6a3, i32* %eax.global-to-local, align 4
  %v1_d6aa = add i32 %v0_d691, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d6aa = inttoptr i32 %v1_d6aa to i32*
  %v3_d6aa = load i32, i32* %v2_d6aa, align 4
  store i32 %v3_d6aa, i32* %ebp.global-to-local, align 4
  %v2_d6ad = sub i32 %v3_d697, %v3_d691
  %v2_d6b3 = sdiv i32 %v2_d6ad, 4
  %v1_d6b6 = add nsw i32 %v2_d6b3, -1
  %v2_d6b9 = sdiv i32 %v5_d6a3, 4
  %v3_d6bc = mul i32 %v1_d6b6, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_d6bc, i32* %ecx.global-to-local, align 4
  %v2_d6bf = sub i32 %v3_d694, %v3_d6aa
  %v3_d6c1 = mul i32 %v2_d6b9, -1431655765
  store i32 %v3_d6c1, i32* %eax.global-to-local, align 4
  %v2_d6c7 = sdiv i32 %v2_d6bf, 4
  %v3_d6ca = mul i32 %v2_d6c7, -1431655765
  store i32 %v3_d6ca, i32* %edx.global-to-local, align 4
  %v1_d6d4 = add i32 %v0_d691, 24
  %v2_d6d4 = inttoptr i32 %v1_d6d4 to i32*
  %v3_d6d4 = load i32, i32* %v2_d6d4, align 4
  store i32 %v3_d6d4, i32* %ebp.global-to-local, align 4
  %v2_d6d7 = add i32 %v3_d6c1, %v3_d6bc
  store i32 %v2_d6d7, i32* %eax.global-to-local, align 4
  %v1_d6d9 = add i32 %v0_d691, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d6d9 = inttoptr i32 %v1_d6d9 to i32*
  %v3_d6d9 = load i32, i32* %v2_d6d9, align 4
  store i32 %v3_d6d9, i32* %ecx.global-to-local, align 4
  %v2_d6dc = add i32 %v3_d6ca, %v2_d6d7
  store i32 %v3_d6d9, i32* %eax.global-to-local, align 4
  %v1_d6ea = add i32 %v0_d691, 28
  %v2_d6ea = inttoptr i32 %v1_d6ea to i32*
  %v3_d6ea = load i32, i32* %v2_d6ea, align 4
  store i32 %v3_d6ea, i32* %ecx.global-to-local, align 4
  %v2_d6ed = sub i32 %v3_d6d9, %v3_d691
  %v2_d6ef = sdiv i32 %v2_d6ed, 4
  %v1_d6f2 = add nsw i32 %v2_d6ef, -1
  %v3_d6f5 = mul i32 %v1_d6f2, ptrtoint (i64* @global_var_2a.943 to i32)
  %v2_d6fe = sub i32 %v3_d6d4, %v3_d6ea
  %v2_d700 = sdiv i32 %v2_d6fe, 4
  %v3_d703 = mul i32 %v2_d700, -1431655765
  %v6_d709 = add i32 %v3_d6f5, %v3_d703
  store i32 %v6_d709, i32* %eax.global-to-local, align 4
  %v2_d70d = add i32 %v6_d709, %v3_d6ca
  %v2_d70f = udiv i32 %v2_d70d, 2
  store i32 %v2_d70f, i32* %edx.global-to-local, align 4
  %v11_d711 = icmp ult i32 %v2_d6dc, %v2_d70f
  br i1 %v11_d711, label %bb184, label %dec_label_pc_d71b

bb184:                                            ; preds = %dec_label_pc_d691
  %v2_d715 = inttoptr i32 %v3_d6d9 to i32*
  %v3_d715 = call i32 @function_da08(i32* %v2_d715)
  store i32 %v3_d715, i32* %eax.global-to-local, align 4
  %v1_d71b.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_d71b

dec_label_pc_d71b:                                ; preds = %bb184, %dec_label_pc_d691
  %v1_d71b = phi i32 [ %v1_d71b.pre, %bb184 ], [ %v3_d6ea, %dec_label_pc_d691 ]
  %v12_d71b = icmp eq i32 %v3_d6d4, %v1_d71b
  br i1 %v12_d71b, label %bb185, label %dec_label_pc_d727

bb185:                                            ; preds = %dec_label_pc_d71b
  %v1_d721 = call i32 @function_dc90()
  store i32 %v1_d721, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d727

dec_label_pc_d727:                                ; preds = %bb185, %dec_label_pc_d71b
  %v0_d727 = load i32, i32* @edi, align 4
  %v1_d727 = add i32 %v0_d727, 32
  %v2_d727 = inttoptr i32 %v1_d727 to i32*
  %v3_d727 = load i32, i32* %v2_d727, align 4
  %v1_d72e = add i32 %v3_d727, -12
  store i32 %v1_d72e, i32* %eax.global-to-local, align 4
  %v12_d731 = icmp eq i32 %v3_d6d4, %v1_d72e
  br i1 %v12_d731, label %bb186, label %dec_label_pc_d739

bb186:                                            ; preds = %dec_label_pc_d727
  %v3_d733 = call i32 @function_dd79(i32 %v3_d727)
  store i32 %v3_d733, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d739

dec_label_pc_d739:                                ; preds = %bb186, %dec_label_pc_d727
  %v1_d739 = icmp eq i32 %v3_d6d4, 0
  br i1 %v1_d739, label %bb187, label %dec_label_pc_d741

bb187:                                            ; preds = %dec_label_pc_d739
  %v1_d73b = call i32 @function_dc70()
  store i32 %v1_d73b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d741

dec_label_pc_d741:                                ; preds = %bb187, %dec_label_pc_d739
  store i32 %v3_d6d4, i32* %ebx.global-to-local, align 4
  store i32 %v3_d6d4, i32* %eax.global-to-local, align 4
  %v1_d751 = add i32 %v3_d6d4, -8
  %v2_d751 = inttoptr i32 %v1_d751 to i32*
  %v3_d751 = load i32, i32* %v2_d751, align 4
  store i32 %v3_d751, i32* %ebx.global-to-local, align 4
  %v1_d754 = add i32 %v3_d6d4, -12
  %v2_d754 = inttoptr i32 %v1_d754 to i32*
  %v3_d754 = load i32, i32* %v2_d754, align 4
  store i32 %v3_d754, i32* @eax, align 4
  %v1_d757 = inttoptr i32 %v3_d6d4 to i32*
  store i32 0, i32* %v1_d757, align 4
  %v1_d75e = add i32 %v3_d6d4, 4
  %v2_d75e = inttoptr i32 %v1_d75e to i32*
  store i32 0, i32* %v2_d75e, align 4
  %v1_d765 = add i32 %v3_d6d4, 8
  %v2_d765 = inttoptr i32 %v1_d765 to i32*
  store i32 0, i32* %v2_d765, align 4
  %v0_d76c = load i32, i32* %ebx.global-to-local, align 4
  %v1_d76c = load i32, i32* @eax, align 4
  %v2_d76c = sub i32 %v0_d76c, %v1_d76c
  %v12_d76c = icmp eq i32 %v2_d76c, 0
  store i32 %v2_d76c, i32* %ebx.global-to-local, align 4
  %v1_d774 = icmp eq i1 %v12_d76c, false
  br i1 %v1_d774, label %bb188, label %dec_label_pc_d77a

bb188:                                            ; preds = %dec_label_pc_d741
  %v5_d774 = call i32 @function_dc20(i32 0, i32 %v2_d76c)
  store i32 %v5_d774, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d77a

dec_label_pc_d77a:                                ; preds = %bb188, %dec_label_pc_d741
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v3_d6d4, i32* %edx.global-to-local, align 4
  store i32 0, i32* %v1_d757, align 4
  %v0_d785 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_d785, i32* %v2_d75e, align 4
  %v0_d788 = load i32, i32* %eax.global-to-local, align 4
  %v5_d788 = add i32 %v0_d788, %v2_d76c
  store i32 %v5_d788, i32* %eax.global-to-local, align 4
  store i32 %v5_d788, i32* %v2_d765, align 4
  %v0_d78f = load i32, i32* %edx.global-to-local, align 4
  %v1_d78f = add i32 %v0_d78f, -12
  %v2_d78f = inttoptr i32 %v1_d78f to i32*
  %v3_d78f = load i32, i32* %v2_d78f, align 4
  store i32 %v3_d78f, i32* %ecx.global-to-local, align 4
  %v1_d792 = add i32 %v0_d78f, -8
  %v2_d792 = inttoptr i32 %v1_d792 to i32*
  %v3_d792 = load i32, i32* %v2_d792, align 4
  store i32 %v3_d792, i32* %ebx.global-to-local, align 4
  %v12_d799 = icmp eq i32 %v3_d792, %v3_d78f
  br i1 %v12_d799, label %dec_label_pc_d7c3, label %dec_label_pc_d79d

dec_label_pc_d79d:                                ; preds = %dec_label_pc_d77a
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %v3_d78f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d7a8

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d7b1, %dec_label_pc_d79d
  %v1_d7b715 = phi i32 [ %v1_d7b7, %dec_label_pc_d7b1 ], [ %v3_d792, %dec_label_pc_d79d ]
  %v0_d7ac = phi i32 [ %v1_d7b1, %dec_label_pc_d7b1 ], [ %v3_d78f, %dec_label_pc_d79d ]
  %v2_d7af = phi i32 [ %v1_d7b4, %dec_label_pc_d7b1 ], [ 0, %dec_label_pc_d79d ]
  %v1_d7a8 = icmp eq i32 %v2_d7af, 0
  br i1 %v1_d7a8, label %dec_label_pc_d7b1, label %dec_label_pc_d7ac

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d7a8
  %v1_d7ac = inttoptr i32 %v0_d7ac to i8*
  %v2_d7ac = load i8, i8* %v1_d7ac, align 1
  %v3_d7ac = zext i8 %v2_d7ac to i32
  store i32 %v3_d7ac, i32* %ecx.global-to-local, align 4
  %v3_d7af = inttoptr i32 %v2_d7af to i8*
  store i8 %v2_d7ac, i8* %v3_d7af, align 1
  %v0_d7b1.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_d7b4.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_d7b7.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_d7b1

dec_label_pc_d7b1:                                ; preds = %dec_label_pc_d7ac, %dec_label_pc_d7a8
  %v1_d7b7 = phi i32 [ %v1_d7b7.pre, %dec_label_pc_d7ac ], [ %v1_d7b715, %dec_label_pc_d7a8 ]
  %v0_d7b4 = phi i32 [ %v0_d7b4.pre, %dec_label_pc_d7ac ], [ 0, %dec_label_pc_d7a8 ]
  %v0_d7b1 = phi i32 [ %v0_d7b1.pre, %dec_label_pc_d7ac ], [ %v0_d7ac, %dec_label_pc_d7a8 ]
  %v1_d7b1 = add i32 %v0_d7b1, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d7b1, i32* %eax.global-to-local, align 4
  %v1_d7b4 = add i32 %v0_d7b4, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_d7b4, i32* %edx.global-to-local, align 4
  %v12_d7b7 = icmp eq i32 %v1_d7b1, %v1_d7b7
  %v1_d7b9 = icmp eq i1 %v12_d7b7, false
  br i1 %v1_d7b9, label %dec_label_pc_d7a8, label %dec_label_pc_d7bb

dec_label_pc_d7bb:                                ; preds = %dec_label_pc_d7b1
  %v5_d7bb = sub i32 %v1_d7b1, %v3_d78f
  store i32 %v5_d7bb, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d7c3

dec_label_pc_d7c3:                                ; preds = %dec_label_pc_d7bb, %dec_label_pc_d77a
  %stack_var_-200.0 = phi i32 [ 0, %dec_label_pc_d77a ], [ %v5_d7bb, %dec_label_pc_d7bb ]
  store i32 %stack_var_-200.0, i32* %eax.global-to-local, align 4
  %v0_d7c7 = load i32, i32* @edi, align 4
  %v1_d7c7 = add i32 %v0_d7c7, 32
  %v2_d7c7 = inttoptr i32 %v1_d7c7 to i32*
  %v3_d7c7 = load i32, i32* %v2_d7c7, align 4
  store i32 %v3_d7c7, i32* %ebx.global-to-local, align 4
  %v1_d7ca = add i32 %v0_d7c7, 28
  %v2_d7ca = inttoptr i32 %v1_d7ca to i32*
  %v3_d7ca = load i32, i32* %v2_d7ca, align 4
  store i32 %v3_d7ca, i32* @ecx, align 4
  store i32 %stack_var_-200.0, i32* %v2_d75e, align 4
  %v0_d7d0 = load i32, i32* @edi, align 4
  %v1_d7d0 = add i32 %v0_d7d0, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_d7d0 = inttoptr i32 %v1_d7d0 to i32*
  %v3_d7d0 = load i32, i32* %v2_d7d0, align 4
  store i32 %v3_d7d0, i32* %ebp.global-to-local, align 4
  %v0_d7d3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d7d7 = add i32 %v0_d7d0, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d7d7 = inttoptr i32 %v1_d7d7 to i32*
  %v3_d7d7 = load i32, i32* %v2_d7d7, align 4
  store i32 %v3_d7d7, i32* %ebx.global-to-local, align 4
  %v1_d7da = add i32 %v0_d7d0, 24
  %v2_d7da = inttoptr i32 %v1_d7da to i32*
  %v3_d7da = load i32, i32* %v2_d7da, align 4
  store i32 %v3_d7da, i32* %eax.global-to-local, align 4
  %v1_d7e1 = add i32 %v0_d7d0, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_d7e1 = inttoptr i32 %v1_d7e1 to i32*
  %v3_d7e1 = load i32, i32* %v2_d7e1, align 4
  store i32 %v3_d7e1, i32* %ebp.global-to-local, align 4
  %v1_d7e8 = add i32 %v0_d7d0, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_d7e8 = inttoptr i32 %v1_d7e8 to i32*
  %v3_d7e8 = load i32, i32* %v2_d7e8, align 4
  store i32 %v3_d7e8, i32* %ebx.global-to-local, align 4
  %v1_d7ef = add i32 %v3_d7da, 12
  store i32 %v1_d7ef, i32* %eax.global-to-local, align 4
  store i32 %v1_d7ef, i32* %v2_d7da, align 4
  %v0_d7f5 = load i32, i32* %eax.global-to-local, align 4
  %v1_d7f5 = load i32, i32* @ecx, align 4
  %v12_d7f5 = icmp eq i32 %v0_d7f5, %v1_d7f5
  br i1 %v12_d7f5, label %bb189, label %dec_label_pc_d7fd

bb189:                                            ; preds = %dec_label_pc_d7c3
  %v3_d7f7 = call i32 @function_dca8(i32 %v3_d7d7)
  store i32 %v3_d7f7, i32* %eax.global-to-local, align 4
  %v1_d804.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_d7fd

dec_label_pc_d7fd:                                ; preds = %bb189, %dec_label_pc_d7c3
  %v1_d804 = phi i32 [ %v1_d804.pre, %bb189 ], [ %v1_d7f5, %dec_label_pc_d7c3 ]
  %v0_d7fd = phi i32 [ %v3_d7f7, %bb189 ], [ %v0_d7f5, %dec_label_pc_d7c3 ]
  %v1_d7fd = add i32 %v0_d7fd, -12
  store i32 %v1_d7fd, i32* %eax.global-to-local, align 4
  store i32 %v3_d7d0, i32* %ebp.global-to-local, align 4
  %v12_d804 = icmp eq i32 %v1_d7fd, %v1_d804
  br i1 %v12_d804, label %bb190, label %dec_label_pc_d810

bb190:                                            ; preds = %dec_label_pc_d7fd
  %v2_d80a = call i32 @function_dcd8(i32 %v1_d7fd)
  store i32 %v2_d80a, i32* %eax.global-to-local, align 4
  %v0_d810.pre = load i32, i32* @ebp, align 4
  %v0_d81c.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_d810

dec_label_pc_d810:                                ; preds = %bb190, %dec_label_pc_d7fd
  %v0_d81c = phi i32 [ %v0_d81c.pre, %bb190 ], [ %v1_d804, %dec_label_pc_d7fd ]
  %v0_d810 = phi i32 [ %v0_d810.pre, %bb190 ], [ %v3_d7d0, %dec_label_pc_d7fd ]
  %v1_d824 = add i32 %v0_d7fd, -24
  store i32 %v1_d824, i32* %eax.global-to-local, align 4
  store i32 %v3_d7d7, i32* %ebp.global-to-local, align 4
  %v0_d82f = load i32, i32* @edi, align 4
  %v1_d82f = add i32 %v0_d82f, 12
  %v2_d82f = inttoptr i32 %v1_d82f to i32*
  %v3_d82f = load i32, i32* %v2_d82f, align 4
  store i32 %v3_d82f, i32* @eax, align 4
  %v2_d832 = sub i32 %v3_d7d7, %v3_d82f
  %v2_d834 = sdiv i32 %v2_d832, 4
  %v3_d837 = mul i32 %v2_d834, -1431655765
  %v6_d83d = add i32 %v3_d837, %v2_d6dc
  %v17_d83d = icmp slt i32 %v6_d83d, 0
  store i32 %v6_d83d, i32* @ebp, align 4
  br i1 %v17_d83d, label %bb191, label %dec_label_pc_d847

bb191:                                            ; preds = %dec_label_pc_d810
  %v3_d841 = call i32 @function_dc78(i32 %v0_d81c, i32 %v1_d824)
  store i32 %v3_d841, i32* @eax, align 4
  br label %dec_label_pc_d847

dec_label_pc_d847:                                ; preds = %bb191, %dec_label_pc_d810
  %v8_d84a = icmp sgt i32 %v6_d83d, 41
  br i1 %v8_d84a, label %dec_label_pc_d850.thread, label %dec_label_pc_d850

dec_label_pc_d850.thread:                         ; preds = %dec_label_pc_d847
  br label %dec_label_pc_d858

dec_label_pc_d850:                                ; preds = %dec_label_pc_d847
  %v9_d84a = call i32 @function_d9d0()
  store i32 %v9_d84a, i32* %eax.global-to-local, align 4
  %tmp194 = icmp slt i32 %v6_d83d, 1
  br i1 %tmp194, label %bb195, label %dec_label_pc_d858

bb195:                                            ; preds = %dec_label_pc_d850
  %v8_d852 = call i32 @function_dc78(i32 %v1_d824, i32 %v0_d7d3)
  store i32 %v8_d852, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d858

dec_label_pc_d858:                                ; preds = %dec_label_pc_d850.thread, %bb195, %dec_label_pc_d850
  %v3_d85f = sext i32 %v6_d83d to i64
  %v4_d85f = mul nsw i64 %v3_d85f, 818089009
  %v6_d85f = udiv i64 %v4_d85f, 4294967296
  %v7_d85f = trunc i64 %v6_d85f to i32
  %v2_d863 = ashr i32 %v6_d83d, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_d863, i32* %eax.global-to-local, align 4
  %v2_d866 = sdiv i32 %v7_d85f, 8
  %v2_d869 = sub i32 %v2_d866, %v2_d863
  %v0_d86b = load i32, i32* %ebx.global-to-local, align 4
  %v2_d86b = mul i32 %v2_d869, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d86b = add i32 %v0_d86b, %v2_d86b
  store i32 %v3_d86b, i32* %ebx.global-to-local, align 4
  %v3_d86e = mul i32 %v2_d869, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_d86e, i32* %edx.global-to-local, align 4
  %v1_d871 = inttoptr i32 %v3_d86b to i32*
  %v2_d871 = load i32, i32* %v1_d871, align 4
  store i32 %v2_d871, i32* %eax.global-to-local, align 4
  %v3_d873 = sub i32 %v6_d83d, %v3_d86e
  %v1_d879 = add i32 %v2_d871, 504
  store i32 %v1_d879, i32* %edi.global-to-local, align 4
  %v2_d87f = mul i32 %v3_d873, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_d87f = add i32 %v2_d871, %v2_d87f
  store i32 %v3_d87f, i32* %edx.global-to-local, align 4
  %v1_d886 = load i32, i32* @esi, align 4
  %v2_d886 = add i32 %v1_d886, 12
  %v3_d886 = inttoptr i32 %v2_d886 to i32*
  store i32 %v3_d86b, i32* %v3_d886, align 4
  %v0_d889 = load i32, i32* %edx.global-to-local, align 4
  %v1_d889 = load i32, i32* @esi, align 4
  %v2_d889 = inttoptr i32 %v1_d889 to i32*
  store i32 %v0_d889, i32* %v2_d889, align 4
  %v0_d88b = load i32, i32* %eax.global-to-local, align 4
  %v1_d88b = load i32, i32* @esi, align 4
  %v2_d88b = add i32 %v1_d88b, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d88b = inttoptr i32 %v2_d88b to i32*
  store i32 %v0_d88b, i32* %v3_d88b, align 4
  store i32 %v3_d7d0, i32* %ebp.global-to-local, align 4
  %v0_d899 = load i32, i32* %edi.global-to-local, align 4
  %v1_d899 = load i32, i32* @esi, align 4
  %v2_d899 = add i32 %v1_d899, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_d899 = inttoptr i32 %v2_d899 to i32*
  store i32 %v0_d899, i32* %v3_d899, align 4
  %v0_d8ae = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_d8ae, i32* %stack_var_-48, align 4
  %v0_d8ef = load i32, i32* %edx.global-to-local, align 4
  %v2_d910 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_d910, i32* %ecx.global-to-local, align 4
  store i32 %v0_d810, i32* %ebp.global-to-local, align 4
  %v0_d930 = load i32, i32* %eax.global-to-local, align 4
  %v0_d934 = load i32, i32* %ebx.global-to-local, align 4
  %v2_d938 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d938, i32* %ebx.global-to-local, align 4
  %v0_d93f = load i32, i32* %edi.global-to-local, align 4
  %v6_d946 = call i32 @unknown_19d20(i32 %v2_d910, i32 %v0_d8ef, i32 %v0_d930, i32 %v0_d93f, i32 %v0_d934)
  store i32 %v6_d946, i32* %eax.global-to-local, align 4
  %v2_d94e = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_d94e, i32* %ebx.global-to-local, align 4
  %v0_d959 = load i32, i32* @esi, align 4
  %v1_d959 = inttoptr i32 %v0_d959 to i32*
  %v2_d959 = load i32, i32* %v1_d959, align 4
  store i32 %v2_d959, i32* %eax.global-to-local, align 4
  %v3_d95e = call i32 @unknown_18050(i32 %v2_d959, i32 %v2_d94e)
  store i32 %v3_d95e, i32* %eax.global-to-local, align 4
  store i32 %v3_d7d0, i32* %edx.global-to-local, align 4
  %v0_d967 = load i32, i32* @esi, align 4
  %v1_d967 = inttoptr i32 %v0_d967 to i32*
  %v2_d967 = load i32, i32* %v1_d967, align 4
  store i32 %v2_d967, i32* %eax.global-to-local, align 4
  %v3_d969 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d969, i32* %ebx.global-to-local, align 4
  %v2_d970 = inttoptr i32 %v3_d7d0 to i32*
  store i32 %v2_d967, i32* %v2_d970, align 4
  %v0_d972 = load i32, i32* @esi, align 4
  %v1_d972 = add i32 %v0_d972, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_d972 = inttoptr i32 %v1_d972 to i32*
  %v3_d972 = load i32, i32* %v2_d972, align 4
  store i32 %v3_d972, i32* %eax.global-to-local, align 4
  %v1_d975 = icmp eq i32 %v3_d969, 0
  %v1_d977 = load i32, i32* %edx.global-to-local, align 4
  %v2_d977 = add i32 %v1_d977, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_d977 = inttoptr i32 %v2_d977 to i32*
  store i32 %v3_d972, i32* %v3_d977, align 4
  %v0_d97a = load i32, i32* @esi, align 4
  %v1_d97a = add i32 %v0_d97a, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_d97a = inttoptr i32 %v1_d97a to i32*
  %v3_d97a = load i32, i32* %v2_d97a, align 4
  store i32 %v3_d97a, i32* %eax.global-to-local, align 4
  %v1_d97d = load i32, i32* %edx.global-to-local, align 4
  %v2_d97d = add i32 %v1_d97d, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_d97d = inttoptr i32 %v2_d97d to i32*
  store i32 %v3_d97a, i32* %v3_d97d, align 4
  %v0_d980 = load i32, i32* @esi, align 4
  %v1_d980 = add i32 %v0_d980, 12
  %v2_d980 = inttoptr i32 %v1_d980 to i32*
  %v3_d980 = load i32, i32* %v2_d980, align 4
  %v1_d983 = load i32, i32* %edx.global-to-local, align 4
  %v2_d983 = add i32 %v1_d983, 12
  %v3_d983 = inttoptr i32 %v2_d983 to i32*
  store i32 %v3_d980, i32* %v3_d983, align 4
  store i32 %v0_d69a, i32* %eax.global-to-local, align 4
  br i1 %v1_d975, label %bb199, label %dec_label_pc_d98f

bb199:                                            ; preds = %dec_label_pc_d858
  %v1_d98d = call i32 @function_d9a5()
  store i32 %v1_d98d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_d98f

dec_label_pc_d98f:                                ; preds = %bb199, %dec_label_pc_d858
  %v0_d98f = phi i32 [ %v1_d98d, %bb199 ], [ %v0_d69a, %dec_label_pc_d858 ]
  %v2_d98f = sub i32 %v0_d98f, %v3_d969
  store i32 %v2_d98f, i32* %eax.global-to-local, align 4
  ret i32 %v2_d98f

; uselistorder directives
  uselistorder i32 %v6_d83d, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_d7fd, { 1, 0, 2 }
  uselistorder i32 %v1_d804, { 1, 0 }
  uselistorder i32 %v1_d7f5, { 1, 0 }
  uselistorder i32 %v0_d7f5, { 1, 0 }
  uselistorder i32 %v3_d7d7, { 1, 0, 2, 3 }
  uselistorder i32 %v3_d7d0, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32 %v0_d7d0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d7b4, { 1, 0 }
  uselistorder i32 %v1_d7b1, { 1, 0, 3, 2 }
  uselistorder i32 %v3_d792, { 1, 0, 2 }
  uselistorder i32 %v3_d78f, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v2_d70f, { 1, 0 }
  uselistorder i32 %v3_d6d9, { 2, 1, 0, 3 }
  uselistorder i32 %v3_d6d4, { 2, 3, 4, 5, 9, 8, 7, 6, 10, 0, 1, 11, 12 }
  uselistorder i32 %v0_d697, { 1, 0, 2 }
  uselistorder i32 %v0_d691, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v1_d684, { 1, 0 }
  uselistorder i32 %v1_d681, { 1, 0, 3, 2 }
  uselistorder i32 %v0_d671, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_d652, { 1, 0 }
  uselistorder i32 %v2_d619, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ecx.global-to-local, { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %ebx.global-to-local, { 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ebp.global-to-local, { 8, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 32, 5, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 7, 6, 44, 8, 45, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 0, 22, 1, 2, 23, 3, 4, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32, i32)* @function_dc78, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d858, { 1, 2, 0 }
}

define i32 @function_d9a5() local_unnamed_addr {
dec_label_pc_d9a5:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_d9ac = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_d9b7 = icmp eq i1 %v4_d9ac, false
  br i1 %v1_d9b7, label %bb, label %dec_label_pc_d9bd

bb:                                               ; preds = %dec_label_pc_d9a5
  %v2_d9b7 = call i32 @function_dde9()
  br label %dec_label_pc_d9bd

dec_label_pc_d9bd:                                ; preds = %bb, %dec_label_pc_d9a5
  %v0_d9c7 = phi i32 [ %v2_d9b7, %bb ], [ %tmp10, %dec_label_pc_d9a5 ]
  ret i32 %v0_d9c7
}

define i32 @function_d9d0() local_unnamed_addr {
dec_label_pc_d9d0:
  %v0_d9e3 = load i32, i32* @eax, align 4
  ret i32 %v0_d9e3
}

define i32 @function_d9e8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d9e8:
  %v4_d9eb = load i32, i32* @eax, align 4
  ret i32 %v4_d9eb
}

define i32 @function_d9f3(i32 %arg1) local_unnamed_addr {
dec_label_pc_d9f3:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_d9f3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_d9f3 = add i32 %v0_d9f3, 462095467
  %v2_d9f3 = inttoptr i32 %v1_d9f3 to i32*
  %v3_d9f3 = load i32, i32* %v2_d9f3, align 4
  %v4_d9f3 = add i32 %v3_d9f3, -1
  store i32 %v4_d9f3, i32* %v2_d9f3, align 4
  %v0_da01 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_da01
}

define i32 @function_da08(i32* %arg1) local_unnamed_addr {
dec_label_pc_da08:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_208 = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %stack_var_144 = alloca i32, align 4
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp45 = ptrtoint i32* %arg1 to i32
  %v0_da08 = load i32, i32* @edi, align 4
  %v1_da08 = add i32 %v0_da08, 12
  %v2_da08 = inttoptr i32 %v1_da08 to i32*
  %v3_da08 = load i32, i32* %v2_da08, align 4
  store i32 %v3_da08, i32* @eax, align 4
  %v15_da0b = icmp eq i32 %tmp45, %v3_da08
  br i1 %v15_da0b, label %bb, label %dec_label_pc_da15

bb:                                               ; preds = %dec_label_pc_da08
  %v1_da0f = call i32 @function_ddbd()
  store i32 %v1_da0f, i32* @eax, align 4
  br label %dec_label_pc_da15

dec_label_pc_da15:                                ; preds = %bb, %dec_label_pc_da08
  %v4_da15 = add i32 %tmp45, -12
  %v13_da15 = icmp eq i32 %v4_da15, 0
  br i1 %v13_da15, label %bb50, label %dec_label_pc_da20

bb50:                                             ; preds = %dec_label_pc_da15
  %v1_da1a = call i32 @function_dd5b()
  store i32 %v1_da1a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_da20

dec_label_pc_da20:                                ; preds = %bb50, %dec_label_pc_da15
  store i32 %tmp45, i32* %ebx.global-to-local, align 4
  store i32 %tmp45, i32* %ebp.global-to-local, align 4
  %v2_da28 = load i32, i32* %arg1, align 4
  store i32 %v2_da28, i32* %ebx.global-to-local, align 4
  %v2_da2a = inttoptr i32 %v4_da15 to i32*
  store i32 0, i32* %v2_da2a, align 4
  %v0_da31 = load i32, i32* %ebp.global-to-local, align 4
  %v1_da31 = add i32 %v0_da31, -8
  %v2_da31 = inttoptr i32 %v1_da31 to i32*
  store i32 0, i32* %v2_da31, align 4
  %v0_da38 = load i32, i32* %ebp.global-to-local, align 4
  %v1_da38 = add i32 %v0_da38, -4
  %v2_da38 = inttoptr i32 %v1_da38 to i32*
  store i32 0, i32* %v2_da38, align 4
  %v0_da3f = load i32, i32* %ebx.global-to-local, align 4
  %v0_da43 = load i32, i32* %ebp.global-to-local, align 4
  %v1_da43 = add i32 %v0_da43, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_da43 = inttoptr i32 %v1_da43 to i32*
  %v3_da43 = load i32, i32* %v2_da43, align 4
  store i32 %v3_da43, i32* @ebx, align 4
  store i32 0, i32* %ebp.global-to-local, align 4
  %v5_da4a = sub i32 %v3_da43, %v0_da3f
  %v15_da4a = icmp eq i32 %v5_da4a, 0
  store i32 %v5_da4a, i32* @eax, align 4
  %v1_da52 = icmp eq i1 %v15_da4a, false
  br i1 %v1_da52, label %bb51, label %dec_label_pc_da58

bb51:                                             ; preds = %dec_label_pc_da20
  %v3_da52 = call i32 @function_dc4b(i32 %v0_da3f)
  store i32 %v3_da52, i32* %eax.global-to-local, align 4
  %v0_da60.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_da58

dec_label_pc_da58:                                ; preds = %bb51, %dec_label_pc_da20
  %v0_da60 = phi i32 [ %v0_da60.pre, %bb51 ], [ 0, %dec_label_pc_da20 ]
  store i32 %tmp45, i32* %eax.global-to-local, align 4
  store i32 %tmp45, i32* %edx.global-to-local, align 4
  store i32 %v0_da60, i32* %v2_da2a, align 4
  %v0_da63 = load i32, i32* %ebp.global-to-local, align 4
  %v1_da63 = load i32, i32* %eax.global-to-local, align 4
  %v2_da63 = add i32 %v1_da63, -8
  %v3_da63 = inttoptr i32 %v2_da63 to i32*
  store i32 %v0_da63, i32* %v3_da63, align 4
  %v1_da6a = load i32, i32* %ebp.global-to-local, align 4
  %v2_da6a = add i32 %v1_da6a, %v5_da4a
  store i32 %v2_da6a, i32* %eax.global-to-local, align 4
  %v0_da6c = load i32, i32* @ebx, align 4
  %v15_da6c = icmp eq i32 %v0_da6c, %v0_da3f
  %v1_da70 = load i32, i32* %edx.global-to-local, align 4
  %v2_da70 = add i32 %v1_da70, -4
  %v3_da70 = inttoptr i32 %v2_da70 to i32*
  store i32 %v2_da6a, i32* %v3_da70, align 4
  br i1 %v15_da6c, label %dec_label_pc_da58.dec_label_pc_da99_crit_edge, label %dec_label_pc_da75

dec_label_pc_da58.dec_label_pc_da99_crit_edge:    ; preds = %dec_label_pc_da58
  %v0_daa3.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_da99

dec_label_pc_da75:                                ; preds = %dec_label_pc_da58
  store i32 %v0_da3f, i32* %eax.global-to-local, align 4
  %v0_da79 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_da79, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_da80

dec_label_pc_da80:                                ; preds = %dec_label_pc_da89, %dec_label_pc_da75
  %v0_da84 = phi i32 [ %v1_da89, %dec_label_pc_da89 ], [ %v0_da3f, %dec_label_pc_da75 ]
  %v2_da87 = phi i32 [ %v1_da8c, %dec_label_pc_da89 ], [ %v0_da79, %dec_label_pc_da75 ]
  %v1_da80 = icmp eq i32 %v2_da87, 0
  br i1 %v1_da80, label %dec_label_pc_da89, label %dec_label_pc_da84

dec_label_pc_da84:                                ; preds = %dec_label_pc_da80
  %v1_da84 = inttoptr i32 %v0_da84 to i8*
  %v2_da84 = load i8, i8* %v1_da84, align 1
  %v3_da87 = inttoptr i32 %v2_da87 to i8*
  store i8 %v2_da84, i8* %v3_da87, align 1
  %v0_da89.pre = load i32, i32* %eax.global-to-local, align 4
  %v0_da8c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_da89

dec_label_pc_da89:                                ; preds = %dec_label_pc_da84, %dec_label_pc_da80
  %v0_da8c = phi i32 [ %v0_da8c.pre, %dec_label_pc_da84 ], [ 0, %dec_label_pc_da80 ]
  %v0_da89 = phi i32 [ %v0_da89.pre, %dec_label_pc_da84 ], [ %v0_da84, %dec_label_pc_da80 ]
  %v1_da89 = add i32 %v0_da89, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_da89, i32* %eax.global-to-local, align 4
  %v1_da8c = add i32 %v0_da8c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_da8c, i32* %edx.global-to-local, align 4
  %v1_da8f = load i32, i32* @ebx, align 4
  %v12_da8f = icmp eq i32 %v1_da89, %v1_da8f
  %v1_da91 = icmp eq i1 %v12_da8f, false
  br i1 %v1_da91, label %dec_label_pc_da80, label %dec_label_pc_da93

dec_label_pc_da93:                                ; preds = %dec_label_pc_da89
  %v5_da93 = sub i32 %v1_da89, %v0_da3f
  store i32 %v5_da93, i32* %eax.global-to-local, align 4
  %v0_da97 = load i32, i32* %ebp.global-to-local, align 4
  %v2_da97 = add i32 %v0_da97, %v5_da93
  store i32 %v2_da97, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_da99

dec_label_pc_da99:                                ; preds = %dec_label_pc_da58.dec_label_pc_da99_crit_edge, %dec_label_pc_da93
  %v0_daa3 = phi i32 [ %v0_daa3.pre, %dec_label_pc_da58.dec_label_pc_da99_crit_edge ], [ %v2_da97, %dec_label_pc_da93 ]
  store i32 %tmp45, i32* %ebx.global-to-local, align 4
  %v0_da9d = load i32, i32* @edi, align 4
  %v1_da9d = add i32 %v0_da9d, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_da9d = inttoptr i32 %v1_da9d to i32*
  %v3_da9d = load i32, i32* %v2_da9d, align 4
  store i32 %v3_da9d, i32* %edx.global-to-local, align 4
  %v1_daa0 = add i32 %v0_da9d, 12
  %v2_daa0 = inttoptr i32 %v1_daa0 to i32*
  %v3_daa0 = load i32, i32* %v2_daa0, align 4
  store i32 %v3_daa0, i32* @eax, align 4
  %v2_daa3 = add i32 %tmp45, -8
  %v3_daa3 = inttoptr i32 %v2_daa3 to i32*
  store i32 %v0_daa3, i32* %v3_daa3, align 4
  %v0_daa6 = load i32, i32* @edi, align 4
  %v1_daa6 = add i32 %v0_daa6, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_daa6 = inttoptr i32 %v1_daa6 to i32*
  %v3_daa6 = load i32, i32* %v2_daa6, align 4
  store i32 %v3_daa6, i32* %ebp.global-to-local, align 4
  %v1_daa9 = add i32 %v0_daa6, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_daa9 = inttoptr i32 %v1_daa9 to i32*
  %v3_daa9 = load i32, i32* %v2_daa9, align 4
  store i32 %v3_daa9, i32* @ebx, align 4
  %v0_daac = load i32, i32* %edx.global-to-local, align 4
  %v1_daac = add i32 %v0_daac, -12
  store i32 %v1_daac, i32* @edx, align 4
  %v2_dab3 = add i32 %v0_daa6, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_dab3 = inttoptr i32 %v2_dab3 to i32*
  store i32 %v1_daac, i32* %v3_dab3, align 4
  %v0_dab6 = load i32, i32* @edx, align 4
  %v1_dab6 = add i32 %v0_dab6, 12
  store i32 %v1_dab6, i32* @ebp, align 4
  %v15_dab9 = icmp eq i32 %v1_dab6, %v3_daa6
  br i1 %v15_dab9, label %bb52, label %dec_label_pc_da99.dec_label_pc_dac3_crit_edge

dec_label_pc_da99.dec_label_pc_dac3_crit_edge:    ; preds = %dec_label_pc_da99
  %v0_dacb.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_dac3

bb52:                                             ; preds = %dec_label_pc_da99
  %v1_dabd = call i32 @function_dd27()
  store i32 %v1_dabd, i32* @eax, align 4
  %v0_dad7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_dac3

dec_label_pc_dac3:                                ; preds = %dec_label_pc_da99.dec_label_pc_dac3_crit_edge, %bb52
  %v0_dad7 = phi i32 [ %v1_dab6, %dec_label_pc_da99.dec_label_pc_dac3_crit_edge ], [ %v0_dad7.pre, %bb52 ]
  %v0_dacb = phi i32 [ %v0_dacb.pre, %dec_label_pc_da99.dec_label_pc_dac3_crit_edge ], [ %v1_dabd, %bb52 ]
  %v0_dac7 = load i32, i32* @ebx, align 4
  %v1_dad7 = add i32 %v0_dad7, 12
  %v12_dade = icmp eq i32 %v1_dad7, %v3_daa6
  br i1 %v12_dade, label %bb53, label %dec_label_pc_dae6

bb53:                                             ; preds = %dec_label_pc_dac3
  %v4_dae0 = call i32 @function_dcfa(i32 %v1_dad7, i32 %v3_daa6, i32 %v0_dac7)
  store i32 %v4_dae0, i32* @eax, align 4
  br label %dec_label_pc_dae6

dec_label_pc_dae6:                                ; preds = %bb53, %dec_label_pc_dac3
  %v1_db00 = phi i32 [ %v4_dae0, %bb53 ], [ %v0_dacb, %dec_label_pc_dac3 ]
  %v0_dafe = load i32, i32* @edx, align 4
  %v2_db00 = sub i32 %v0_dafe, %v1_db00
  %v2_db02 = sdiv i32 %v2_db00, 4
  %v3_db05 = mul i32 %v2_db02, -1431655765
  %v5_db0b = add i32 %v3_db05, %tmp36
  %v16_db0b = icmp slt i32 %v5_db0b, 0
  store i32 %v5_db0b, i32* @ecx, align 4
  br i1 %v16_db0b, label %bb54, label %dec_label_pc_db15

bb54:                                             ; preds = %dec_label_pc_dae6
  %v2_db0f = call i32 @function_dd62(i32 %v0_dacb)
  store i32 %v2_db0f, i32* @eax, align 4
  br label %dec_label_pc_db15

dec_label_pc_db15:                                ; preds = %bb54, %dec_label_pc_dae6
  %v8_db18 = icmp sgt i32 %v5_db0b, 41
  br i1 %v8_db18, label %dec_label_pc_db1e.thread, label %dec_label_pc_db1e

dec_label_pc_db1e.thread:                         ; preds = %dec_label_pc_db15
  br label %dec_label_pc_db26

dec_label_pc_db1e:                                ; preds = %dec_label_pc_db15
  %v9_db18 = call i32 @function_dc38()
  store i32 %v9_db18, i32* %eax.global-to-local, align 4
  %tmp57 = icmp slt i32 %v5_db0b, 1
  br i1 %tmp57, label %bb58, label %dec_label_pc_db26

bb58:                                             ; preds = %dec_label_pc_db1e
  %v6_db20 = call i32 @function_dd62(i32 %v0_dacb)
  store i32 %v6_db20, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_db26

dec_label_pc_db26:                                ; preds = %dec_label_pc_db1e.thread, %bb58, %dec_label_pc_db1e
  %v3_db2d = sext i32 %v5_db0b to i64
  %v4_db2d = mul nsw i64 %v3_db2d, 818089009
  %v6_db2d = udiv i64 %v4_db2d, 4294967296
  %v7_db2d = trunc i64 %v6_db2d to i32
  %v2_db31 = ashr i32 %v5_db0b, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_db31, i32* %eax.global-to-local, align 4
  %v2_db34 = sdiv i32 %v7_db2d, 8
  %v2_db37 = sub i32 %v2_db34, %v2_db31
  %v0_db39 = load i32, i32* @ebx, align 4
  %v2_db39 = mul i32 %v2_db37, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_db39 = add i32 %v0_db39, %v2_db39
  store i32 %v3_db39, i32* @ebx, align 4
  %v3_db3c = mul i32 %v2_db37, ptrtoint (i64* @global_var_2a.943 to i32)
  store i32 %v3_db3c, i32* %edx.global-to-local, align 4
  %v1_db3f = inttoptr i32 %v3_db39 to i32*
  %v2_db3f = load i32, i32* %v1_db3f, align 4
  store i32 %v2_db3f, i32* %eax.global-to-local, align 4
  %v3_db41 = sub i32 %v5_db0b, %v3_db3c
  %v1_db46 = add i32 %v2_db3f, 504
  store i32 %v1_db46, i32* @edi, align 4
  %v2_db4c = mul i32 %v3_db41, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_db4c = add i32 %v2_db3f, %v2_db4c
  store i32 %v3_db4c, i32* %edx.global-to-local, align 4
  %v1_db4f = load i32, i32* @esi, align 4
  %v2_db4f = inttoptr i32 %v1_db4f to i32*
  store i32 %v3_db4c, i32* %v2_db4f, align 4
  %v0_db51 = load i32, i32* %edx.global-to-local, align 4
  %v1_db51 = add i32 %v0_db51, 12
  store i32 %v1_db51, i32* @edx, align 4
  %v0_db54 = load i32, i32* @ebx, align 4
  store i32 %v0_db54, i32* @ecx, align 4
  %v1_db56 = load i32, i32* @edi, align 4
  %v12_db56 = icmp eq i32 %v1_db51, %v1_db56
  %v0_db58 = load i32, i32* %eax.global-to-local, align 4
  %v1_db58 = load i32, i32* @esi, align 4
  %v2_db58 = add i32 %v1_db58, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_db58 = inttoptr i32 %v2_db58 to i32*
  store i32 %v0_db58, i32* %v3_db58, align 4
  %v0_db5b = load i32, i32* @edi, align 4
  %v1_db5b = load i32, i32* @esi, align 4
  %v2_db5b = add i32 %v1_db5b, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_db5b = inttoptr i32 %v2_db5b to i32*
  store i32 %v0_db5b, i32* %v3_db5b, align 4
  %v0_db5e = load i32, i32* @ebx, align 4
  %v1_db5e = load i32, i32* @esi, align 4
  %v2_db5e = add i32 %v1_db5e, 12
  %v3_db5e = inttoptr i32 %v2_db5e to i32*
  store i32 %v0_db5e, i32* %v3_db5e, align 4
  br i1 %v12_db56, label %bb59, label %dec_label_pc_db26.dec_label_pc_db67_crit_edge

dec_label_pc_db26.dec_label_pc_db67_crit_edge:    ; preds = %dec_label_pc_db26
  %v0_dbfa.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_db67

bb59:                                             ; preds = %dec_label_pc_db26
  %v1_db61 = call i32 @function_dd48()
  store i32 %v1_db61, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_db67

dec_label_pc_db67:                                ; preds = %dec_label_pc_db26.dec_label_pc_db67_crit_edge, %bb59
  %v0_dbfa = phi i32 [ %v0_dbfa.pre, %dec_label_pc_db26.dec_label_pc_db67_crit_edge ], [ %v1_db61, %bb59 ]
  %v0_db6b = load i32, i32* @ebp, align 4
  store i32 %v0_db6b, i32* %stack_var_144, align 4
  %v0_db7d = load i32, i32* @edi, align 4
  %v0_dba2 = load i32, i32* @ecx, align 4
  store i32 %v0_dacb, i32* @ecx, align 4
  store i32 %v0_dac7, i32* @edi, align 4
  %v2_dbd8 = ptrtoint i32* %stack_var_96 to i32
  store i32 %v2_dbd8, i32* %ebp.global-to-local, align 4
  %v0_dbe3 = load i32, i32* @edx, align 4
  %v2_dbeb = ptrtoint i32* %stack_var_144 to i32
  %v2_dc0a = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_dc0a, i32* %ebx.global-to-local, align 4
  %v10_dc14 = call i32 @unknown_19a60(i32 %v2_dbd8, i32 %v1_dad7, i32 %v0_dacb, i32 %v3_daa6, i32 %v0_dac7, i32 %v0_dbe3, i32 %v0_dbfa, i32 %v0_db7d, i32 %v0_dba2, i32 %v2_dbeb)
  store i32 %v10_dc14, i32* %eax.global-to-local, align 4
  ret i32 %v10_dc14

; uselistorder directives
  uselistorder i32 %v5_db0b, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_dad7, { 1, 2, 0 }
  uselistorder i32 %v0_dacb, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_dab6, { 1, 0, 2 }
  uselistorder i32 %v3_daa6, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v1_da8c, { 1, 0 }
  uselistorder i32 %v1_da89, { 1, 0, 3, 2 }
  uselistorder i32 %v0_da3f, { 2, 1, 3, 0, 4, 5 }
  uselistorder i32 %tmp45, { 1, 2, 4, 3, 6, 5, 7, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 2, 5, 4, 3, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %eax.global-to-local, { 5, 0, 7, 6, 8, 9, 2, 1, 10, 11, 12, 13, 14, 15, 16, 3, 4 }
  uselistorder i32 ptrtoint (i64* @global_var_2a.943 to i32), { 1, 2, 3, 4, 5, 6, 12, 0, 11, 7, 9, 8, 10 }
  uselistorder i32 (i32)* @function_dd62, { 1, 0 }
  uselistorder i32 -1431655765, { 2, 3, 4, 5, 6, 7, 0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_db67, { 1, 0 }
  uselistorder label %dec_label_pc_db26, { 1, 2, 0 }
  uselistorder label %dec_label_pc_dac3, { 1, 0 }
  uselistorder label %dec_label_pc_da99, { 1, 0 }
}

define i32 @function_dc20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc20:
  %v0_dc33 = load i32, i32* @eax, align 4
  ret i32 %v0_dc33
}

define i32 @function_dc38() local_unnamed_addr {
dec_label_pc_dc38:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v3_dc3c = mul i32 %tmp1, 3
  store i32 %v3_dc3c, i32* @ecx, align 4
  %v0_dc46 = load i32, i32* @eax, align 4
  ret i32 %v0_dc46
}

define i32 @function_dc4b(i32 %arg1) local_unnamed_addr {
dec_label_pc_dc4b:
  %stack_var_208 = alloca i32, align 4
  %v2_dc4e = ptrtoint i32* %stack_var_208 to i32
  store i32 %v2_dc4e, i32* @ebx, align 4
  %v3_dc4e = load i32, i32* @eax, align 4
  ret i32 %v3_dc4e
}

define i32 @function_dc59() local_unnamed_addr {
dec_label_pc_dc59:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_dc59 = load i32, i32* %ebx.global-to-local, align 4
  %v1_dc59 = add i32 %v0_dc59, -1993071532
  %v2_dc59 = inttoptr i32 %v1_dc59 to i32*
  %v3_dc59 = load i32, i32* %v2_dc59, align 4
  %v4_dc59 = sub i32 %v3_dc59, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_dc59, i32* %v2_dc59, align 4
  %v0_dc69 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dc69
}

define i32 @function_dc70() local_unnamed_addr {
dec_label_pc_dc70:
  ret i32 0
}

define i32 @function_dc78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_dc78:
  ret i32 undef
}

define i32 @function_dc90() local_unnamed_addr {
dec_label_pc_dc90:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_dc94 = add i32 %tmp1, -4
  %v2_dc94 = inttoptr i32 %v1_dc94 to i32*
  %v3_dc94 = load i32, i32* %v2_dc94, align 4
  %v1_dc97 = add i32 %v3_dc94, 504
  ret i32 %v1_dc97
}

define i32 @function_dca8(i32 %arg1) local_unnamed_addr {
dec_label_pc_dca8:
  %v1_dcac = add i32 %arg1, -4
  %v2_dcac = inttoptr i32 %v1_dcac to i32*
  %v3_dcac = load i32, i32* %v2_dcac, align 4
  store i32 %v3_dcac, i32* @ecx, align 4
  %v1_dcc4 = add i32 %v3_dcac, 492
  ret i32 %v1_dcc4
}

define i32 @function_dcd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_dcd8:
  %v1_dce3 = add i32 %arg1, -4
  %v2_dce3 = inttoptr i32 %v1_dce3 to i32*
  %v3_dce3 = load i32, i32* %v2_dce3, align 4
  store i32 %v3_dce3, i32* @ebp, align 4
  %v1_dce8 = add i32 %v3_dce3, 504
  ret i32 %v1_dce8
}

define i32 @function_dcfa(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_dcfa:
  %v0_dd22 = load i32, i32* @eax, align 4
  ret i32 %v0_dd22
}

define i32 @function_dd27() local_unnamed_addr {
dec_label_pc_dd27:
  %v0_dd27 = load i32, i32* @ebx, align 4
  %v1_dd27 = add i32 %v0_dd27, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_dd27 = inttoptr i32 %v1_dd27 to i32*
  %v3_dd27 = load i32, i32* %v2_dd27, align 4
  store i32 %v3_dd27, i32* @ebp, align 4
  %v0_dd43 = load i32, i32* @eax, align 4
  ret i32 %v0_dd43
}

define i32 @function_dd48() local_unnamed_addr {
dec_label_pc_dd48:
  %v0_dd48 = load i32, i32* @ebx, align 4
  %v1_dd48 = add i32 %v0_dd48, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_dd48 = inttoptr i32 %v1_dd48 to i32*
  %v3_dd48 = load i32, i32* %v2_dd48, align 4
  store i32 %v1_dd48, i32* @ecx, align 4
  %v1_dd4e = add i32 %v3_dd48, 504
  store i32 %v1_dd4e, i32* @edi, align 4
  store i32 %v3_dd48, i32* @edx, align 4
  ret i32 %v3_dd48
}

define i32 @function_dd5b() local_unnamed_addr {
dec_label_pc_dd5b:
  %v0_dd5d = load i32, i32* @eax, align 4
  ret i32 %v0_dd5d
}

define i32 @function_dd62(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd62:
  store i32 -1, i32* @edx, align 4
  ret i32 undef
}

define i32 @function_dd79(i32 %arg1) local_unnamed_addr {
dec_label_pc_dd79:
  %v0_dd84 = load i32, i32* @edi, align 4
  %v1_dd87 = add i32 %arg1, -12
  %v2_dd8e = call i32 @unknown_1aa80(i32 %v0_dd84, i32 %v1_dd87)
  ret i32 %v2_dd8e
}

define i32 @function_dd96() local_unnamed_addr {
dec_label_pc_dd96:
  %v0_dd96 = load i32, i32* @edi, align 4
  %v1_dd99 = add i32 %v0_dd96, 24
  %v2_dd99 = inttoptr i32 %v1_dd99 to i32*
  %v3_dd99 = load i32, i32* %v2_dd99, align 4
  %v1_ddb1 = add i32 %v0_dd96, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_ddb1 = inttoptr i32 %v1_ddb1 to i32*
  %v3_ddb1 = load i32, i32* %v2_ddb1, align 4
  store i32 %v3_ddb1, i32* @ebx, align 4
  ret i32 %v3_dd99
}

define i32 @function_ddbd() local_unnamed_addr {
dec_label_pc_ddbd:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_ddc1 = load i32, i32* @edi, align 4
  %v2_ddcf = call i32 @unknown_1a820(i32 %v0_ddc1, i32 %tmp4)
  %v0_ddd4 = load i32, i32* @edi, align 4
  %v1_ddda = add i32 %v0_ddd4, 12
  %v2_ddda = inttoptr i32 %v1_ddda to i32*
  %v3_ddda = load i32, i32* %v2_ddda, align 4
  ret i32 %v3_ddda
}

define i32 @function_dde9() local_unnamed_addr {
dec_label_pc_dde9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt5dequeISt6vectorIc25zero_after_free_allocatorIcEESaIS3_EE6insertESt15_Deque_iteratorIS3_RS3_PS3_ERKS3_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de00:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* %ecx.global-to-local, align 4
  store i32 %tmp111, i32* %esi.global-to-local, align 4
  %v1_de28 = inttoptr i32 %arg3 to i32*
  %v2_de28 = load i32, i32* %v1_de28, align 4
  store i32 %v2_de28, i32* %edx.global-to-local, align 4
  %v2_de2a = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_de2a = inttoptr i32 %v2_de2a to i32*
  %v4_de2a = load i32, i32* %v3_de2a, align 4
  %v15_de2a = icmp eq i32 %v2_de28, %v4_de2a
  br i1 %v15_de2a, label %dec_label_pc_ded8, label %dec_label_pc_de37

dec_label_pc_de37:                                ; preds = %dec_label_pc_de00
  %v2_de37 = add i32 %arg2, 24
  %v3_de37 = inttoptr i32 %v2_de37 to i32*
  %v4_de37 = load i32, i32* %v3_de37, align 4
  %v15_de37 = icmp eq i32 %v2_de28, %v4_de37
  br i1 %v15_de37, label %dec_label_pc_de98, label %dec_label_pc_de3c

dec_label_pc_de3c:                                ; preds = %dec_label_pc_de37
  store i32 %v2_de28, i32* %stack_var_-32, align 4
  %v1_de40 = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_de40 = inttoptr i32 %v1_de40 to i32*
  %v3_de40 = load i32, i32* %v2_de40, align 4
  store i32 %v3_de40, i32* %edx.global-to-local, align 4
  %v1_de47 = add i32 %arg3, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_de47 = inttoptr i32 %v1_de47 to i32*
  %v3_de47 = load i32, i32* %v2_de47, align 4
  store i32 %v3_de47, i32* %edx.global-to-local, align 4
  %v2_de5d = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_de5d, i32* %eax.global-to-local, align 4
  %v4_de68 = call i32 @unknown_1b3e0(i32 %tmp111, i32 %arg2, i32 %v2_de5d, i32 %arg4)
  store i32 %v4_de68, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_de70

dec_label_pc_de70:                                ; preds = %dec_label_pc_ded8, %dec_label_pc_dec8, %dec_label_pc_de3c
  %v0_de70 = load i32, i32* @esp, align 4
  %v1_de70 = add i32 %v0_de70, 44
  %v2_de70 = inttoptr i32 %v1_de70 to i32*
  %v3_de70 = load i32, i32* %v2_de70, align 4
  %v3_de74 = xor i32 %v3_de70, ptrtoint ([2 x i8]* @2 to i32)
  %v4_de74 = icmp eq i32 %v3_de74, 0
  store i32 %v3_de74, i32* %edx.global-to-local, align 4
  %v0_de7b = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_de7b, i32* %eax.global-to-local, align 4
  %v1_de7d = icmp eq i1 %v4_de74, false
  br i1 %v1_de7d, label %dec_label_pc_df24, label %dec_label_pc_de83

dec_label_pc_de83:                                ; preds = %dec_label_pc_de70
  %v1_de83 = add i32 %v0_de70, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_de83 = inttoptr i32 %v1_de83 to i32*
  %v3_de83 = load i32, i32* %v2_de83, align 4
  store i32 %v3_de83, i32* %ebx.global-to-local, align 4
  %v1_de87 = add i32 %v0_de70, ptrtoint (i32* @global_var_34.832 to i32)
  %v2_de87 = inttoptr i32 %v1_de87 to i32*
  %v3_de87 = load i32, i32* %v2_de87, align 4
  store i32 %v3_de87, i32* %esi.global-to-local, align 4
  ret i32 %v0_de7b

dec_label_pc_de98:                                ; preds = %dec_label_pc_de37
  %v1_de98 = add i32 %arg2, 32
  %v2_de98 = inttoptr i32 %v1_de98 to i32*
  %v3_de98 = load i32, i32* %v2_de98, align 4
  store i32 %v3_de98, i32* %eax.global-to-local, align 4
  %v1_de9b = add i32 %v3_de98, -12
  %v12_de9e = icmp eq i32 %v2_de28, %v1_de9b
  br i1 %v12_de9e, label %dec_label_pc_df10, label %dec_label_pc_dea2

dec_label_pc_dea2:                                ; preds = %dec_label_pc_de98
  %v1_dea2 = icmp eq i32 %v2_de28, 0
  br i1 %v1_dea2, label %dec_label_pc_deb8, label %dec_label_pc_dea6

dec_label_pc_dea6:                                ; preds = %dec_label_pc_dea2
  %v2_dead = call i32 @unknown_176b0(i32 %v2_de28, i32 %arg4)
  store i32 %v2_dead, i32* %eax.global-to-local, align 4
  %v0_deb2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_deb2 = add i32 %v0_deb2, 24
  %v2_deb2 = inttoptr i32 %v1_deb2 to i32*
  %v3_deb2 = load i32, i32* %v2_deb2, align 4
  store i32 %v3_deb2, i32* %edx.global-to-local, align 4
  %v1_deb5 = add i32 %v0_deb2, 32
  %v2_deb5 = inttoptr i32 %v1_deb5 to i32*
  %v3_deb5 = load i32, i32* %v2_deb5, align 4
  store i32 %v3_deb5, i32* %eax.global-to-local, align 4
  %phitmp = add i32 %v3_deb2, 12
  br label %dec_label_pc_deb8

dec_label_pc_deb8:                                ; preds = %dec_label_pc_dea6, %dec_label_pc_dea2
  %v1_debb = phi i32 [ %v0_deb2, %dec_label_pc_dea6 ], [ %arg2, %dec_label_pc_dea2 ]
  %v0_deb8 = phi i32 [ %phitmp, %dec_label_pc_dea6 ], [ 12, %dec_label_pc_dea2 ]
  store i32 %v0_deb8, i32* %edx.global-to-local, align 4
  %v2_debb = add i32 %v1_debb, 24
  %v3_debb = inttoptr i32 %v2_debb to i32*
  store i32 %v0_deb8, i32* %v3_debb, align 4
  %v0_debe.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_dec4.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_debe

dec_label_pc_debe:                                ; preds = %dec_label_pc_df10, %dec_label_pc_deb8
  %v1_dec4 = phi i32 [ %v3_df1c, %dec_label_pc_df10 ], [ %v1_dec4.pre, %dec_label_pc_deb8 ]
  %v0_debe = phi i32 [ %v0_df1c, %dec_label_pc_df10 ], [ %v0_debe.pre, %dec_label_pc_deb8 ]
  %v1_debe = add i32 %v0_debe, 28
  %v2_debe = inttoptr i32 %v1_debe to i32*
  %v3_debe = load i32, i32* %v2_debe, align 4
  store i32 %v3_debe, i32* %ecx.global-to-local, align 4
  %v1_dec1 = add i32 %v0_debe, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_dec1 = inttoptr i32 %v1_dec1 to i32*
  %v3_dec1 = load i32, i32* %v2_dec1, align 4
  store i32 %v3_dec1, i32* %ebx.global-to-local, align 4
  %v12_dec4 = icmp eq i32 %v3_debe, %v1_dec4
  br i1 %v12_dec4, label %dec_label_pc_df00, label %dec_label_pc_dec8

dec_label_pc_dec8:                                ; preds = %dec_label_pc_df00, %dec_label_pc_debe
  %v0_dec8 = phi i32 [ %v1_df06, %dec_label_pc_df00 ], [ %v1_dec4, %dec_label_pc_debe ]
  %v1_dec8 = add i32 %v0_dec8, -12
  store i32 %v1_dec8, i32* %edx.global-to-local, align 4
  %v1_decb = load i32, i32* %esi.global-to-local, align 4
  %v2_decb = inttoptr i32 %v1_decb to i32*
  store i32 %v1_dec8, i32* %v2_decb, align 4
  %v0_decd = load i32, i32* %ecx.global-to-local, align 4
  %v1_decd = load i32, i32* %esi.global-to-local, align 4
  %v2_decd = add i32 %v1_decd, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_decd = inttoptr i32 %v2_decd to i32*
  store i32 %v0_decd, i32* %v3_decd, align 4
  %v0_ded0 = load i32, i32* %eax.global-to-local, align 4
  %v1_ded0 = load i32, i32* %esi.global-to-local, align 4
  %v2_ded0 = add i32 %v1_ded0, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_ded0 = inttoptr i32 %v2_ded0 to i32*
  store i32 %v0_ded0, i32* %v3_ded0, align 4
  %v0_ded3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ded3 = load i32, i32* %esi.global-to-local, align 4
  %v2_ded3 = add i32 %v1_ded3, 12
  %v3_ded3 = inttoptr i32 %v2_ded3 to i32*
  store i32 %v0_ded3, i32* %v3_ded3, align 4
  br label %dec_label_pc_de70

dec_label_pc_ded8:                                ; preds = %dec_label_pc_de00
  %v2_dedf = call i32 @unknown_1b1b0(i32 %arg2, i32 %arg4)
  store i32 %v2_dedf, i32* %eax.global-to-local, align 4
  %v0_dee4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_dee4 = add i32 %v0_dee4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_dee4 = inttoptr i32 %v1_dee4 to i32*
  %v3_dee4 = load i32, i32* %v2_dee4, align 4
  store i32 %v3_dee4, i32* %eax.global-to-local, align 4
  %v1_dee7 = load i32, i32* %esi.global-to-local, align 4
  %v2_dee7 = inttoptr i32 %v1_dee7 to i32*
  store i32 %v3_dee4, i32* %v2_dee7, align 4
  %v0_dee9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_dee9 = add i32 %v0_dee9, 12
  %v2_dee9 = inttoptr i32 %v1_dee9 to i32*
  %v3_dee9 = load i32, i32* %v2_dee9, align 4
  store i32 %v3_dee9, i32* %eax.global-to-local, align 4
  %v1_deec = load i32, i32* %esi.global-to-local, align 4
  %v2_deec = add i32 %v1_deec, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_deec = inttoptr i32 %v2_deec to i32*
  store i32 %v3_dee9, i32* %v3_deec, align 4
  %v0_deef = load i32, i32* %ebx.global-to-local, align 4
  %v1_deef = add i32 %v0_deef, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_deef = inttoptr i32 %v1_deef to i32*
  %v3_deef = load i32, i32* %v2_deef, align 4
  store i32 %v3_deef, i32* %eax.global-to-local, align 4
  %v1_def2 = load i32, i32* %esi.global-to-local, align 4
  %v2_def2 = add i32 %v1_def2, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_def2 = inttoptr i32 %v2_def2 to i32*
  store i32 %v3_deef, i32* %v3_def2, align 4
  %v0_def5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_def5 = add i32 %v0_def5, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_def5 = inttoptr i32 %v1_def5 to i32*
  %v3_def5 = load i32, i32* %v2_def5, align 4
  store i32 %v3_def5, i32* %eax.global-to-local, align 4
  %v1_def8 = load i32, i32* %esi.global-to-local, align 4
  %v2_def8 = add i32 %v1_def8, 12
  %v3_def8 = inttoptr i32 %v2_def8 to i32*
  store i32 %v3_def5, i32* %v3_def8, align 4
  br label %dec_label_pc_de70

dec_label_pc_df00:                                ; preds = %dec_label_pc_debe
  %v1_df00 = add i32 %v3_dec1, -4
  %v2_df00 = inttoptr i32 %v1_df00 to i32*
  %v3_df00 = load i32, i32* %v2_df00, align 4
  store i32 %v3_df00, i32* %ecx.global-to-local, align 4
  %v1_df03 = sub i32 %v3_dec1, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_df03, i32* %ebx.global-to-local, align 4
  %v1_df06 = add i32 %v3_df00, 504
  store i32 %v1_df06, i32* %edx.global-to-local, align 4
  store i32 %v1_df06, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_dec8

dec_label_pc_df10:                                ; preds = %dec_label_pc_de98
  %v2_df17 = call i32 @unknown_1b2a0(i32 %arg2, i32 %arg4)
  store i32 %v2_df17, i32* %eax.global-to-local, align 4
  %v0_df1c = load i32, i32* %ebx.global-to-local, align 4
  %v1_df1c = add i32 %v0_df1c, 24
  %v2_df1c = inttoptr i32 %v1_df1c to i32*
  %v3_df1c = load i32, i32* %v2_df1c, align 4
  store i32 %v3_df1c, i32* %edx.global-to-local, align 4
  %v1_df1f = add i32 %v0_df1c, 32
  %v2_df1f = inttoptr i32 %v1_df1f to i32*
  %v3_df1f = load i32, i32* %v2_df1f, align 4
  store i32 %v3_df1f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_debe

dec_label_pc_df24:                                ; preds = %dec_label_pc_de70
  ret i32 %v0_de7b

; uselistorder directives
  uselistorder i32 %v3_df1c, { 1, 0 }
  uselistorder i32 %v0_df1c, { 1, 2, 0 }
  uselistorder i32 %v1_df06, { 1, 2, 0 }
  uselistorder i32 %v3_dec1, { 1, 0, 2 }
  uselistorder i32 %v0_debe, { 1, 0 }
  uselistorder i32 %v1_dec4, { 1, 0 }
  uselistorder i32 %v0_deb8, { 1, 0 }
  uselistorder i32 %v0_de7b, { 1, 0, 2 }
  uselistorder i32 %v0_de70, { 1, 0, 2 }
  uselistorder i32 %v2_de28, { 3, 4, 0, 5, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 4, 0, 5, 6, 7, 8, 1, 2, 9, 10, 3, 11 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 14, 15 }
  uselistorder i32 504, { 2, 3, 14, 4, 5, 15, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %arg4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4, 5, 6, 7 }
}

define i32 @_ZN5CNode10EndMessageEv(i32 %arg1) local_unnamed_addr {
dec_label_pc_df30:
  %stack_var_-98 = alloca i32, align 4
  %v2_df54 = ptrtoint i32* %stack_var_-98 to i32
  ret i32 %v2_df54
}

define i32 @function_df98() local_unnamed_addr {
dec_label_pc_df98:
  %eax.global-to-local = alloca i32, align 4
  %v0_dfa1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_dfa1
}

define i32 @function_dfa3() local_unnamed_addr {
dec_label_pc_dfa3:
  %esi.global-to-local = alloca i32, align 4
  %v0_dfa3 = load i32, i32* %esi.global-to-local, align 4
  %v1_dfa3 = add i32 %v0_dfa3, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_dfa3 = inttoptr i32 %v1_dfa3 to i32*
  %v3_dfa3 = load i32, i32* %v2_dfa3, align 4
  ret i32 %v3_dfa3
}

define i32 @function_dfd2() local_unnamed_addr {
dec_label_pc_dfd2:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @function_e05d() local_unnamed_addr {
dec_label_pc_e05d:
  %eax.global-to-local = alloca i32, align 4
  %v0_e05d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e05d
}

define i32 @function_e07c() local_unnamed_addr {
dec_label_pc_e07c:
  %v4_e080 = load i32, i32* @eax, align 4
  ret i32 %v4_e080
}

define i32 @function_e0d5() local_unnamed_addr {
dec_label_pc_e0d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_e0d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e0d5
}

define i32 @function_e0da() local_unnamed_addr {
dec_label_pc_e0da:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_e0da = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_e0da = load i32, i32* %ecx.global-to-local, align 4
  %v4_e0da = trunc i32 %v3_e0da to i8
  %v5_e0da = add i8 %v4_e0da, %v2_e0da
  %v20_e0da = load i32, i32* %edi.global-to-local, align 4
  %v21_e0da = inttoptr i32 %v20_e0da to i8*
  store i8 %v5_e0da, i8* %v21_e0da, align 1
  %v0_e0dd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e0dd
}

define i32 @function_e2a2(i32* %arg1) local_unnamed_addr {
dec_label_pc_e2a2:
  %ebx.global-to-local = alloca i32, align 4
  %tmp100 = ptrtoint i32* %arg1 to i32
  store i32 %tmp100, i32* @eax, align 4
  %v1_e2a6 = add i32 %tmp100, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_e2a6 = inttoptr i32 %v1_e2a6 to i32*
  %v3_e2a6 = load i32, i32* %v2_e2a6, align 4
  %v3_e2a9 = load i32, i32* %arg1, align 4
  %v4_e2a9 = sub i32 %v3_e2a6, %v3_e2a9
  %v0_e2ab = load i32, i32* %ebx.global-to-local, align 4
  %v1_e2ab = add i32 %v0_e2ab, 40
  %v2_e2ab = inttoptr i32 %v1_e2ab to i32*
  %v3_e2ab = load i32, i32* %v2_e2ab, align 4
  %v5_e2ab = add i32 %v3_e2ab, %v4_e2a9
  store i32 %v5_e2ab, i32* %v2_e2ab, align 4
  %v0_e2ae = load i32, i32* @eax, align 4
  %v1_e2ae = load i32, i32* %ebx.global-to-local, align 4
  %v2_e2ae = add i32 %v1_e2ae, ptrtoint (i32* @global_var_40.840 to i32)
  %v3_e2ae = inttoptr i32 %v2_e2ae to i32*
  %v4_e2ae = load i32, i32* %v3_e2ae, align 4
  %v15_e2ae = icmp eq i32 %v0_e2ae, %v4_e2ae
  br i1 %v15_e2ae, label %bb, label %dec_label_pc_e2b7

bb:                                               ; preds = %dec_label_pc_e2a2
  %v1_e2b1 = call i32 @function_e3cd()
  br label %dec_label_pc_e2b7

dec_label_pc_e2b7:                                ; preds = %bb, %dec_label_pc_e2a2
  %v3_e2ba = phi i32 [ %v1_e2b1, %bb ], [ %v0_e2ae, %dec_label_pc_e2a2 ]
  ret i32 %v3_e2ba

; uselistorder directives
  uselistorder i32 %v0_e2ae, { 1, 0 }
}

define i32 @function_e2c1(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_e2c1:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %v0_e2c1 = load i32, i32* %ebp.global-to-local, align 4
  %v1_e2c1 = add i32 %v0_e2c1, 277155776
  %v2_e2c1 = inttoptr i32 %v1_e2c1 to i32*
  %v3_e2c1 = load i32, i32* %v2_e2c1, align 4
  %v4_e2c1 = add i32 %v3_e2c1, 1
  store i32 %v4_e2c1, i32* %v2_e2c1, align 4
  %v2_e2c7 = load i32, i32* @eax, align 4
  %v4_e2c7 = mul i32 %v2_e2c7, 2
  %v14_e2c7 = icmp eq i32 %v4_e2c7, 0
  store i1 %v14_e2c7, i1* %zf.global-to-local, align 1
  %v21_e2c7 = inttoptr i32 %v2_e2c7 to i32*
  store i32 %v4_e2c7, i32* %v21_e2c7, align 4
  %v0_e2c9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_e2c9 = add i32 %v0_e2c9, ptrtoint (i8** @global_var_b083.948 to i32)
  %v2_e2c9 = inttoptr i32 %v1_e2c9 to i8*
  %v3_e2c9 = load i8, i8* %v2_e2c9, align 1
  %v4_e2c9 = load i32, i32* %ecx.global-to-local, align 4
  %v5_e2c9 = trunc i32 %v4_e2c9 to i8
  %v6_e2c9 = add i8 %v5_e2c9, %v3_e2c9
  %v16_e2c9 = icmp eq i8 %v6_e2c9, 0
  store i1 %v16_e2c9, i1* %zf.global-to-local, align 1
  store i8 %v6_e2c9, i8* %v2_e2c9, align 1
  %v0_e2cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_e2cf = add i32 %v0_e2cf, -1065025048
  %v2_e2cf = inttoptr i32 %v1_e2cf to i8*
  %v3_e2cf = load i8, i8* %v2_e2cf, align 1
  %v4_e2cf = load i32, i32* @eax, align 4
  %v5_e2cf = trunc i32 %v4_e2cf to i8
  %v6_e2cf = add i8 %v5_e2cf, %v3_e2cf
  %v16_e2cf = icmp eq i8 %v6_e2cf, 0
  store i1 %v16_e2cf, i1* %zf.global-to-local, align 1
  store i8 %v6_e2cf, i8* %v2_e2cf, align 1
  %v0_e2d5 = load i32, i32* @eax, align 4
  %v1_e2d5 = load i32, i32* %ebx.global-to-local, align 4
  %v2_e2d5 = add i32 %v1_e2d5, ptrtoint (i32* @global_var_b0.949 to i32)
  %v3_e2d5 = inttoptr i32 %v2_e2d5 to i32*
  store i32 %v0_e2d5, i32* %v3_e2d5, align 4
  %v0_e2db = load i1, i1* %zf.global-to-local, align 1
  %v1_e2db = icmp eq i1 %v0_e2db, false
  br i1 %v1_e2db, label %dec_label_pc_e2e4, label %dec_label_pc_e2dd

dec_label_pc_e2dd:                                ; preds = %dec_label_pc_e2c1
  %v0_e2dd = load i32, i32* %ebx.global-to-local, align 4
  %v1_e2dd = add i32 %v0_e2dd, 168
  %v2_e2dd = inttoptr i32 %v1_e2dd to i8*
  store i8 0, i8* %v2_e2dd, align 1
  br label %dec_label_pc_e2e4

dec_label_pc_e2e4:                                ; preds = %dec_label_pc_e2dd, %dec_label_pc_e2c1
  %v0_e2e4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_e2e4 = add i32 %v0_e2e4, ptrtoint (i32* @global_var_78.922 to i32)
  store i32 %v1_e2e4, i32* %ebx.global-to-local, align 4
  %v0_e2ef = load i32, i32* @eax, align 4
  %v1_e2ef = icmp eq i32 %v0_e2ef, 0
  store i1 %v1_e2ef, i1* %zf.global-to-local, align 1
  %v1_e2f1 = icmp eq i1 %v1_e2ef, false
  br i1 %v1_e2f1, label %bb, label %dec_label_pc_e2f7

bb:                                               ; preds = %dec_label_pc_e2e4
  %v3_e2f1 = call i32 @function_e3df(i32 %v1_e2e4)
  store i32 %v3_e2f1, i32* @eax, align 4
  br label %dec_label_pc_e2f7

dec_label_pc_e2f7:                                ; preds = %bb, %dec_label_pc_e2e4
  %.0 = phi i32 [ %v3_e2f1, %bb ], [ %tmp97, %dec_label_pc_e2e4 ]
  %v0_e2f7 = load i32, i32* @esi, align 4
  %v1_e2ff = icmp eq i32 %.0, 0
  store i1 %v1_e2ff, i1* %zf.global-to-local, align 1
  %v1_e301 = icmp eq i1 %v1_e2ff, false
  br i1 %v1_e301, label %bb105, label %dec_label_pc_e307

bb105:                                            ; preds = %dec_label_pc_e2f7
  %v3_e301 = call i32 @function_e3e5(i32 %v0_e2f7)
  br label %dec_label_pc_e307

dec_label_pc_e307:                                ; preds = %bb105, %dec_label_pc_e2f7
  %v3_e30e = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_e30e = icmp eq i32 %v3_e30e, 0
  store i1 %v4_e30e, i1* %zf.global-to-local, align 1
  store i32 %v3_e30e, i32* @eax, align 4
  %v1_e315 = icmp eq i1 %v4_e30e, false
  br i1 %v1_e315, label %bb106, label %dec_label_pc_e31b

bb106:                                            ; preds = %dec_label_pc_e307
  %v2_e315 = call i32 @function_e434()
  br label %dec_label_pc_e31b

dec_label_pc_e31b:                                ; preds = %bb106, %dec_label_pc_e307
  %v0_e325 = phi i32 [ %v2_e315, %bb106 ], [ %v3_e30e, %dec_label_pc_e307 ]
  %v0_e31b = load i32, i32* @esp, align 4
  %v10_e31b = icmp eq i32 %v0_e31b, -188
  store i1 %v10_e31b, i1* %zf.global-to-local, align 1
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* %ebp.global-to-local, align 4
  ret i32 %v0_e325

; uselistorder directives
  uselistorder i32 %v2_e2c7, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 6, 2, 3, 4, 5 }
}

define i32 @function_e330(i32 %arg1) local_unnamed_addr {
dec_label_pc_e330:
  %v0_e330 = load i1, i1* @cf, align 1
  %v1_e330 = icmp eq i1 %v0_e330, false
  br i1 %v1_e330, label %bb, label %dec_label_pc_e330.dec_label_pc_e332_crit_edge

dec_label_pc_e330.dec_label_pc_e332_crit_edge:    ; preds = %dec_label_pc_e330
  %v3_e330.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e332

bb:                                               ; preds = %dec_label_pc_e330
  %v2_e330 = call i32 @function_e392()
  br label %dec_label_pc_e332

dec_label_pc_e332:                                ; preds = %dec_label_pc_e330.dec_label_pc_e332_crit_edge, %bb
  %v3_e330 = phi i32 [ %v3_e330.pre, %dec_label_pc_e330.dec_label_pc_e332_crit_edge ], [ %v2_e330, %bb ]
  ret i32 %v3_e330

; uselistorder directives
  uselistorder label %dec_label_pc_e332, { 1, 0 }
}

define i32 @function_e34f() local_unnamed_addr {
dec_label_pc_e34f:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v4_e34f = load i32, i32* %eax.global-to-local, align 4
  %v1_e355 = add i32 %v4_e34f, -2097152000
  %v2_e355 = inttoptr i32 %v1_e355 to i32*
  %v3_e355 = load i32, i32* %v2_e355, align 4
  %v4_e355 = xor i32 %v3_e355, -24
  store i32 %v4_e355, i32* %v2_e355, align 4
  %v0_e35c = load i32, i32* %ebp.global-to-local, align 4
  %v1_e35c = add i32 %v0_e35c, -1333556800
  %v2_e35c = inttoptr i32 %v1_e35c to i32*
  %v3_e35c = load i32, i32* %v2_e35c, align 4
  %v4_e35c = load i32, i32* %eax.global-to-local, align 4
  %v5_e35c = add i32 %v4_e35c, %v3_e35c
  store i32 %v5_e35c, i32* %v2_e35c, align 4
  %v2_e362 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e362 = load i32, i32* %eax.global-to-local, align 4
  %v4_e362 = trunc i32 %v3_e362 to i8
  %v5_e362 = add i8 %v4_e362, %v2_e362
  %v21_e362 = inttoptr i32 %v3_e362 to i8*
  store i8 %v5_e362, i8* %v21_e362, align 1
  %v0_e364 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e364 = load i32, i32* %edi.global-to-local, align 4
  %v2_e364 = mul i32 %v1_e364, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_e364 = add i32 %v0_e364, -125
  %v4_e364 = add i32 %v3_e364, %v2_e364
  %v5_e364 = inttoptr i32 %v4_e364 to i8*
  %v6_e364 = load i8, i8* %v5_e364, align 1
  %v7_e364 = load i32, i32* %edx.global-to-local, align 4
  %v8_e364 = lshr i32 %v7_e364, ptrtoint (i32* @global_var_8.813 to i32)
  %v9_e364 = trunc i32 %v8_e364 to i8
  %v10_e364 = add i8 %v9_e364, %v6_e364
  store i8 %v10_e364, i8* %v5_e364, align 1
  %v0_e368 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e368

; uselistorder directives
  uselistorder i32 -125, { 1, 0 }
}

define i32 @function_e392() local_unnamed_addr {
dec_label_pc_e392:
  %v2_e394 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_e394 = load i32, i32* @eax, align 4
  %v4_e394 = trunc i32 %v3_e394 to i8
  %v5_e394 = add i8 %v4_e394, %v2_e394
  %v21_e394 = inttoptr i32 %v3_e394 to i8*
  store i8 %v5_e394, i8* %v21_e394, align 1
  %v22_e394 = load i32, i32* @eax, align 4
  ret i32 %v22_e394
}

define i32 @function_e39b() local_unnamed_addr {
dec_label_pc_e39b:
  %eax.global-to-local = alloca i32, align 4
  %v0_e39b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e39b
}

define i32 @function_e3a0() local_unnamed_addr {
dec_label_pc_e3a0:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_e3a0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_e3a0 = add i32 %v0_e3a0, 168
  %v2_e3a0 = inttoptr i32 %v1_e3a0 to i8*
  store i8 0, i8* %v2_e3a0, align 1
  %v0_e3a7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e3a7
}

define i32 @function_e3b0() local_unnamed_addr {
dec_label_pc_e3b0:
  %v0_e3b2 = call i32 @function_e07c()
  ret i32 %v0_e3b2
}

define i32 @function_e3b8() local_unnamed_addr {
dec_label_pc_e3b8:
  %eax.global-to-local = alloca i32, align 4
  %v0_e3c8 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e3c8
}

define i32 @function_e3cd() local_unnamed_addr {
dec_label_pc_e3cd:
  %v3_e3cd = load i32, i32* @eax, align 4
  ret i32 %v3_e3cd
}

define i32 @function_e3d5() local_unnamed_addr {
dec_label_pc_e3d5:
  %eax.global-to-local = alloca i32, align 4
  %v0_e3d5 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e3d5
}

define i32 @function_e3db() local_unnamed_addr {
dec_label_pc_e3db:
  %eax.global-to-local = alloca i32, align 4
  %v0_e3db = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e3db
}

define i32 @function_e3df(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3df:
  %v0_e3e0 = call i32 @function_11832()
  ret i32 %v0_e3e0
}

define i32 @function_e3e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_e3e5:
  %v0_e3ea = load i32, i32* @eax, align 4
  ret i32 %v0_e3ea
}

declare i32 @__assert_fail.492(i32) local_unnamed_addr

define i32 @function_e425() local_unnamed_addr {
dec_label_pc_e425:
  %eax.global-to-local = alloca i32, align 4
  %v0_e425 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e425
}

define i32 @function_e42e() local_unnamed_addr {
dec_label_pc_e42e:
  %eax.global-to-local = alloca i32, align 4
  %v0_e42e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e42e
}

define i32 @function_e430() local_unnamed_addr {
dec_label_pc_e430:
  %eax.global-to-local = alloca i32, align 4
  %v0_e430 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e430
}

define i32 @function_e434() local_unnamed_addr {
dec_label_pc_e434:
  %v0_e43b = load i32, i32* @esi, align 4
  %v1_e43e = call i32 @unknown_17770(i32 %v0_e43b)
  ret i32 %v1_e43e
}

define i32 @_Z15ReadCompactSizeI11CDataStreamEyRT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_e450:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-18 = alloca i32, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_e465 = ptrtoint i32* %stack_var_-18 to i32
  %v3_e478 = call i32 @unknown_17130(i32 %arg1, i32 %v2_e465, i32 ptrtoint (i8** @global_var_1.820 to i32))
  %v3_e47d = load i32, i32* %stack_var_-18, align 4
  %v1_e482 = trunc i32 %v3_e47d to i8
  %tmp20 = icmp ult i8 %v1_e482, -3
  br i1 %tmp20, label %dec_label_pc_e487, label %dec_label_pc_e4a8

dec_label_pc_e487:                                ; preds = %dec_label_pc_e450
  %v1_e487 = and i32 %v3_e47d, and (i32 ptrtoint (i32* @global_var_ff.838 to i32), i32 255)
  store i32 %v1_e487, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb, label %dec_label_pc_e49d

bb:                                               ; preds = %dec_label_pc_e487
  %v2_e497 = call i32 @function_e59f()
  br label %dec_label_pc_e49d

dec_label_pc_e49d:                                ; preds = %bb, %dec_label_pc_e487
  %v0_e4a2 = phi i32 [ %v2_e497, %bb ], [ %v1_e487, %dec_label_pc_e487 ]
  ret i32 %v0_e4a2

dec_label_pc_e4a8:                                ; preds = %dec_label_pc_e450
  %v11_e4b1 = icmp eq i8 %v1_e482, -2
  br i1 %v11_e4b1, label %bb18, label %dec_label_pc_e4ba

bb18:                                             ; preds = %dec_label_pc_e4a8
  %v1_e4b4 = call i32 @function_e568()
  br label %dec_label_pc_e4ba

dec_label_pc_e4ba:                                ; preds = %bb18, %dec_label_pc_e4a8
  %v2_e4ba = ptrtoint i32* %stack_var_-36 to i32
  %v0_e4ca = load i32, i32* @ebx, align 4
  %v3_e4cd = call i32 @unknown_17130(i32 %v0_e4ca, i32 %v2_e4ba, i32 ptrtoint (i32* @global_var_8.813 to i32))
  %v3_e4d6 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_e4d6, i32* @eax, align 4
  %v7_e4da = icmp eq i32 %tmp5, 0
  br i1 %v7_e4da, label %bb19, label %dec_label_pc_e4e3

bb19:                                             ; preds = %dec_label_pc_e4ba
  %v3_e4dd = call i32 @function_e58f()
  br label %dec_label_pc_e4e3

dec_label_pc_e4e3:                                ; preds = %bb19, %dec_label_pc_e4ba
  %v3_e4ea = phi i32 [ %v3_e4dd, %bb19 ], [ %v3_e4d6, %dec_label_pc_e4ba ]
  ret i32 %v3_e4ea
}

define i32 @function_e568() local_unnamed_addr {
dec_label_pc_e568:
  %stack_var_32 = alloca i32, align 4
  %v2_e568 = ptrtoint i32* %stack_var_32 to i32
  %v0_e578 = load i32, i32* @ebx, align 4
  %v4_e57b = call i32 @unknown_17130(i32 %v0_e578, i32 %v2_e568, i32 ptrtoint (i8** @global_var_4.814 to i32))
  %v3_e582 = load i32, i32* %stack_var_32, align 4
  ret i32 %v3_e582

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unknown_17130, { 2, 1, 0 }
}

define i32 @function_e58f() local_unnamed_addr {
dec_label_pc_e58f:
  %v0_e58f = load i32, i32* @eax, align 4
  ret i32 %v0_e58f
}

define i32 @function_e59f() local_unnamed_addr {
dec_label_pc_e59f:
  %v0_e59f = load i32, i32* @eax, align 4
  ret i32 %v0_e59f
}

define i32 @function_e5a6() local_unnamed_addr {
dec_label_pc_e5a6:
  %eax.global-to-local = alloca i32, align 4
  %v0_e5a6 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e5a6
}

define i32 @function_e5ac() local_unnamed_addr {
dec_label_pc_e5ac:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEj(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5c0:
  %eax.global-to-local = alloca i32, align 4
  %v2_e5e8 = lshr i32 %arg2, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_e5ee = add i32 %v2_e5e8, 3
  %v5_e5f1 = icmp ult i32 %v1_e5ee, 8
  %v3_e5f4 = select i1 %v5_e5f1, i32 ptrtoint (i32* @global_var_8.813 to i32), i32 %v1_e5ee
  store i32 %v3_e5f4, i32* %eax.global-to-local, align 4
  %v2_e5f7 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_e5f7 = inttoptr i32 %v2_e5f7 to i32*
  store i32 %v3_e5f4, i32* %v3_e5f7, align 4
  %v0_e5fa = load i32, i32* %eax.global-to-local, align 4
  %v2_e5fa = mul i32 %v0_e5fa, 4
  store i32 %v2_e5fa, i32* %eax.global-to-local, align 4
  ret i32 %v2_e5fa

; uselistorder directives
  uselistorder i32 %v2_e5fa, { 1, 0 }
}

define i32 @function_e606() local_unnamed_addr {
dec_label_pc_e606:
  %eax.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v0_e607 = load i32, i32* %eax.global-to-local, align 4
  %v2_e607 = add i32 %v0_e607, 41
  %v16_e607 = and i32 %v2_e607, 255
  %v18_e607 = and i32 %v0_e607, -256
  %v19_e607 = or i32 %v16_e607, %v18_e607
  store i32 %v19_e607, i32* @eax, align 4
  %v1_e60b = call i32 @function_8d902c8d(i32 %tmp93)
  store i32 %v1_e60b, i32* %eax.global-to-local, align 4
  ret i32 %v1_e60b

; uselistorder directives
  uselistorder i32 %v0_e607, { 1, 0 }
  uselistorder i32 41, { 0, 1, 2, 4, 3, 6, 5 }
}

define i32 @function_e618() local_unnamed_addr {
dec_label_pc_e618:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_e618 = load i32, i32* %eax.global-to-local, align 4
  %v1_e618 = trunc i32 %v0_e618 to i8
  %v2_e618 = load i1, i1* %cf.global-to-local, align 1
  %v3_e618 = zext i1 %v2_e618 to i32
  %v4_e618 = sub i32 %v0_e618, zext (i8 ptrtoint (i8* @global_var_89.942 to i8) to i32)
  %v5_e618 = add i32 %v4_e618, %v3_e618
  %v17_e618 = icmp ult i8 %v1_e618, -119
  %v18_e618 = or i1 %v2_e618, %v17_e618
  store i1 %v18_e618, i1* %cf.global-to-local, align 1
  %v31_e618 = and i32 %v5_e618, 255
  %v33_e618 = and i32 %v0_e618, -256
  %v34_e618 = or i32 %v31_e618, %v33_e618
  store i32 %v34_e618, i32* @eax, align 4
  %v0_e61a = call i32 @function_e5ac()
  store i32 %v0_e61a, i32* %eax.global-to-local, align 4
  ret i32 %v0_e61a

; uselistorder directives
  uselistorder i1 %v2_e618, { 1, 0 }
  uselistorder i32 %v0_e618, { 1, 0, 2 }
}

define i32 @function_e620() local_unnamed_addr {
dec_label_pc_e620:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e62b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_e62b:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_e62b = load i32, i32* %ecx.global-to-local, align 4
  %v1_e62b = add i32 %v0_e62b, 79921923
  %v2_e62b = inttoptr i32 %v1_e62b to i32*
  %v3_e62b = load i32, i32* %v2_e62b, align 4
  %v4_e62b = add i32 %v3_e62b, -1
  store i32 %v4_e62b, i32* %v2_e62b, align 4
  %v0_e631 = load i32, i32* %esi.global-to-local, align 4
  %v1_e631 = load i32, i32* %ebx.global-to-local, align 4
  %tmp106 = icmp ugt i32 %v0_e631, %v1_e631
  br i1 %tmp106, label %bb, label %dec_label_pc_e635

bb:                                               ; preds = %dec_label_pc_e62b
  %v4_e633 = call i32 @function_e620()
  store i32 %v4_e633, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_e635

dec_label_pc_e635:                                ; preds = %dec_label_pc_e62b, %bb
  %v0_e635 = load i32, i32* %ebp.global-to-local, align 4
  %v1_e635 = load i32, i32* %edi.global-to-local, align 4
  %v2_e635 = add i32 %v1_e635, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_e635 = inttoptr i32 %v2_e635 to i32*
  store i32 %v0_e635, i32* %v3_e635, align 4
  %v2_e638 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v2_e638, i32* %edx.global-to-local, align 4
  %v1_e63b = add i32 %v2_e638, 512
  %v1_e641 = load i32, i32* %edi.global-to-local, align 4
  %v2_e641 = add i32 %v1_e641, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_e641 = inttoptr i32 %v2_e641 to i32*
  store i32 %v1_e63b, i32* %v3_e641, align 4
  %v0_e644 = load i32, i32* %esi.global-to-local, align 4
  %v1_e644 = add i32 %v0_e644, -4
  store i32 %v1_e644, i32* %eax.global-to-local, align 4
  %v0_e647 = load i32, i32* %edx.global-to-local, align 4
  %v1_e647 = load i32, i32* %edi.global-to-local, align 4
  %v2_e647 = add i32 %v1_e647, 12
  %v3_e647 = inttoptr i32 %v2_e647 to i32*
  store i32 %v0_e647, i32* %v3_e647, align 4
  %v0_e64a = load i32, i32* %eax.global-to-local, align 4
  %v1_e64a = load i32, i32* %edi.global-to-local, align 4
  %v2_e64a = add i32 %v1_e64a, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_e64a = inttoptr i32 %v2_e64a to i32*
  store i32 %v0_e64a, i32* %v3_e64a, align 4
  %v0_e64d = load i32, i32* %esi.global-to-local, align 4
  %v1_e64d = add i32 %v0_e64d, -4
  %v2_e64d = inttoptr i32 %v1_e64d to i32*
  %v3_e64d = load i32, i32* %v2_e64d, align 4
  store i32 %v3_e64d, i32* %eax.global-to-local, align 4
  %v0_e650 = load i32, i32* %edx.global-to-local, align 4
  %v1_e650 = load i32, i32* %edi.global-to-local, align 4
  %v2_e650 = add i32 %v1_e650, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_e650 = inttoptr i32 %v2_e650 to i32*
  store i32 %v0_e650, i32* %v3_e650, align 4
  %v0_e657 = load i32, i32* %eax.global-to-local, align 4
  %v1_e657 = add i32 %v0_e657, 512
  store i32 %v1_e657, i32* %ecx.global-to-local, align 4
  %v1_e65d = urem i32 %arg1, 512
  store i32 %v1_e65d, i32* %edx.global-to-local, align 4
  %v1_e663 = load i32, i32* %edi.global-to-local, align 4
  %v2_e663 = add i32 %v1_e663, 28
  %v3_e663 = inttoptr i32 %v2_e663 to i32*
  store i32 %v0_e657, i32* %v3_e663, align 4
  %v0_e666 = load i32, i32* %eax.global-to-local, align 4
  %v1_e666 = load i32, i32* %edx.global-to-local, align 4
  %v2_e666 = add i32 %v1_e666, %v0_e666
  %v1_e668 = load i32, i32* %edi.global-to-local, align 4
  %v2_e668 = add i32 %v1_e668, 24
  %v3_e668 = inttoptr i32 %v2_e668 to i32*
  store i32 %v2_e666, i32* %v3_e668, align 4
  %v3_e66f = xor i32 %arg2, ptrtoint ([2 x i8]* @2 to i32)
  %v4_e66f = icmp eq i32 %v3_e66f, 0
  store i32 %v3_e66f, i32* @eax, align 4
  %v0_e676 = load i32, i32* %ecx.global-to-local, align 4
  %v1_e676 = load i32, i32* %edi.global-to-local, align 4
  %v2_e676 = add i32 %v1_e676, 32
  %v3_e676 = inttoptr i32 %v2_e676 to i32*
  store i32 %v0_e676, i32* %v3_e676, align 4
  %v1_e679 = icmp eq i1 %v4_e66f, false
  br i1 %v1_e679, label %bb104, label %dec_label_pc_e635.dec_label_pc_e67b_crit_edge

dec_label_pc_e635.dec_label_pc_e67b_crit_edge:    ; preds = %dec_label_pc_e635
  %v0_e682.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_e67b

bb104:                                            ; preds = %dec_label_pc_e635
  %v2_e679 = call i32 @function_e6a6()
  store i32 %v2_e679, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_e67b

dec_label_pc_e67b:                                ; preds = %dec_label_pc_e635.dec_label_pc_e67b_crit_edge, %bb104
  %v0_e682 = phi i32 [ %v0_e682.pre, %dec_label_pc_e635.dec_label_pc_e67b_crit_edge ], [ %v2_e679, %bb104 ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  store i32 %arg5, i32* %edi.global-to-local, align 4
  store i32 %arg6, i32* %ebp.global-to-local, align 4
  ret i32 %v0_e682

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_e67b, { 1, 0 }
  uselistorder label %dec_label_pc_e635, { 1, 0 }
}

define i32 @function_e69e() local_unnamed_addr {
dec_label_pc_e69e:
  %eax.global-to-local = alloca i32, align 4
  %v0_e69e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e69e
}

define i32 @function_e6a6() local_unnamed_addr {
dec_label_pc_e6a6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_e6ac() local_unnamed_addr {
dec_label_pc_e6ac:
  %eax.global-to-local = alloca i32, align 4
  %v0_e6ac = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e6ac
}

define i32 @function_e6d7() local_unnamed_addr {
dec_label_pc_e6d7:
  %eax.global-to-local = alloca i32, align 4
  %v0_e6d7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e6d7
}

define i32 @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIiERKi(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_e6f0:
  %edx.global-to-local = alloca i32, align 4
  %tmp109 = call i32 @__decompiler_undefined_function_0()
  %tmp117 = ptrtoint i32* %arg4 to i32
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %arg1, i32* @esi, align 4
  %v1_e717 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_e717, i32* @eax, align 4
  %v12_e71a = icmp eq i32 %v1_e717, %arg3
  store i32 %tmp117, i32* @ebp, align 4
  br i1 %v12_e71a, label %bb, label %dec_label_pc_e72a

bb:                                               ; preds = %dec_label_pc_e6f0
  %v3_e724 = call i32 @function_e7f8(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v3_e724, i32* @eax, align 4
  %v0_e72a.pre = load i32, i32* @ebp, align 4
  %v1_e72d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_e72a

dec_label_pc_e72a:                                ; preds = %bb, %dec_label_pc_e6f0
  %v1_e735 = phi i32 [ %v1_e72d.pre, %bb ], [ %arg3, %dec_label_pc_e6f0 ]
  %v0_e72a = phi i32 [ %v0_e72a.pre, %bb ], [ %tmp117, %dec_label_pc_e6f0 ]
  %v1_e72a = inttoptr i32 %v0_e72a to i32*
  %v2_e72a = load i32, i32* %v1_e72a, align 4
  store i32 %v2_e72a, i32* %edx.global-to-local, align 4
  %v2_e72d = add i32 %v1_e735, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_e72d = inttoptr i32 %v2_e72d to i32*
  %v4_e72d = load i32, i32* %v3_e72d, align 4
  %v5_e730 = icmp slt i32 %v2_e72a, %v4_e72d
  br i1 %v5_e730, label %dec_label_pc_e732, label %dec_label_pc_e7a8

dec_label_pc_e732:                                ; preds = %dec_label_pc_e72a
  %v0_e732 = load i32, i32* @edi, align 4
  %v1_e732 = add i32 %v0_e732, 12
  %v2_e732 = inttoptr i32 %v1_e732 to i32*
  %v3_e732 = load i32, i32* %v2_e732, align 4
  store i32 %v3_e732, i32* @eax, align 4
  %v12_e735 = icmp eq i32 %v3_e732, %v1_e735
  br i1 %v12_e735, label %bb134, label %dec_label_pc_e73d

bb134:                                            ; preds = %dec_label_pc_e732
  %v1_e737 = call i32 @function_e86e()
  store i32 %v1_e737, i32* @eax, align 4
  %v0_e73d.pre = load i32, i32* @ebx, align 4
  %v0_e74d.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_e73d

dec_label_pc_e73d:                                ; preds = %bb134, %dec_label_pc_e732
  %v1_e74d = phi i32 [ %v1_e737, %bb134 ], [ %v3_e732, %dec_label_pc_e732 ]
  %v0_e74d = phi i32 [ %v0_e74d.pre, %bb134 ], [ %v2_e72a, %dec_label_pc_e732 ]
  %v8_e750 = phi i32 [ %v0_e73d.pre, %bb134 ], [ %v1_e735, %dec_label_pc_e732 ]
  %v2_e74d = add i32 %v1_e74d, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_e74d = inttoptr i32 %v2_e74d to i32*
  %v4_e74d = load i32, i32* %v3_e74d, align 4
  %v7_e750 = icmp sgt i32 %v0_e74d, %v4_e74d
  br i1 %v7_e750, label %dec_label_pc_e756, label %bb135

bb135:                                            ; preds = %dec_label_pc_e73d
  %v9_e750 = call i32 @function_e810(i32 %v8_e750)
  store i32 %v9_e750, i32* @eax, align 4
  br label %dec_label_pc_e756

dec_label_pc_e756:                                ; preds = %dec_label_pc_e73d, %bb135
  %v0_e756 = phi i32 [ %v1_e74d, %dec_label_pc_e73d ], [ %v9_e750, %bb135 ]
  %v1_e756 = add i32 %v0_e756, 12
  %v2_e756 = inttoptr i32 %v1_e756 to i32*
  %v3_e756 = load i32, i32* %v2_e756, align 4
  store i32 %v3_e756, i32* %edx.global-to-local, align 4
  %v1_e75d = icmp eq i32 %v3_e756, 0
  br i1 %v1_e75d, label %bb136, label %dec_label_pc_e765

bb136:                                            ; preds = %dec_label_pc_e756
  %v1_e75f = call i32 @function_e844()
  br label %dec_label_pc_e765

dec_label_pc_e765:                                ; preds = %bb136, %dec_label_pc_e756
  %v0_e765 = load i32, i32* @ebx, align 4
  %v0_e76d = load i32, i32* @edi, align 4
  %v0_e771 = load i32, i32* @esi, align 4
  %v4_e774 = call i32 @unknown_18f40(i32 %v0_e771, i32 %v0_e76d, i32 %v0_e765, i32 %v0_e765)
  %v3_e780 = xor i32 %tmp109, ptrtoint ([2 x i8]* @2 to i32)
  %v4_e780 = icmp eq i32 %v3_e780, 0
  store i32 %v3_e780, i32* %edx.global-to-local, align 4
  %v0_e787 = load i32, i32* @esi, align 4
  store i32 %v0_e787, i32* @eax, align 4
  %v1_e789 = icmp eq i1 %v4_e780, false
  br i1 %v1_e789, label %bb137, label %dec_label_pc_e78f

bb137:                                            ; preds = %dec_label_pc_e765
  %v2_e789 = call i32 @function_e877()
  br label %dec_label_pc_e78f

dec_label_pc_e78f:                                ; preds = %bb137, %dec_label_pc_e765
  %v0_e7a2 = phi i32 [ %v2_e789, %bb137 ], [ %v0_e787, %dec_label_pc_e765 ]
  ret i32 %v0_e7a2

dec_label_pc_e7a8:                                ; preds = %dec_label_pc_e72a
  %v7_e7a8 = icmp sgt i32 %v2_e72a, %v4_e72d
  br i1 %v7_e7a8, label %dec_label_pc_e7ae, label %bb139

bb139:                                            ; preds = %dec_label_pc_e7a8
  %v8_e7a8 = call i32 @function_e838()
  %v1_e7b1.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_e7ae

dec_label_pc_e7ae:                                ; preds = %dec_label_pc_e7a8, %bb139
  %v1_e7b1 = phi i32 [ %v1_e735, %dec_label_pc_e7a8 ], [ %v1_e7b1.pre, %bb139 ]
  %v0_e7ae = load i32, i32* @edi, align 4
  %v1_e7ae = add i32 %v0_e7ae, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_e7ae = inttoptr i32 %v1_e7ae to i32*
  %v3_e7ae = load i32, i32* %v2_e7ae, align 4
  store i32 %v3_e7ae, i32* @eax, align 4
  %v12_e7b1 = icmp eq i32 %v3_e7ae, %v1_e7b1
  br i1 %v12_e7b1, label %bb140, label %dec_label_pc_e7b9

bb140:                                            ; preds = %dec_label_pc_e7ae
  %v1_e7b3 = call i32 @function_e840()
  br label %dec_label_pc_e7b9

dec_label_pc_e7b9:                                ; preds = %bb140, %dec_label_pc_e7ae
  %v4_e7bc = phi i32 [ %v1_e7b3, %bb140 ], [ %v3_e7ae, %dec_label_pc_e7ae ]
  ret i32 %v4_e7bc

; uselistorder directives
  uselistorder i32 %v3_e7ae, { 1, 0, 2 }
  uselistorder i32 %v3_e732, { 1, 0, 2 }
  uselistorder i32 %v2_e72a, { 1, 0, 2, 3 }
  uselistorder i32 %v1_e735, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e7ae, { 1, 0 }
  uselistorder label %dec_label_pc_e756, { 1, 0 }
}

define i32 @function_e7dd() local_unnamed_addr {
dec_label_pc_e7dd:
  %v0_e7dd = load i32, i32* @eax, align 4
  %v0_e7e5 = load i32, i32* @edi, align 4
  %v0_e7e9 = load i32, i32* @esi, align 4
  %v4_e7ec = call i32 @unknown_18f40(i32 %v0_e7e9, i32 %v0_e7e5, i32 %v0_e7dd, i32 %v0_e7dd)
  ret i32 %v4_e7ec
}

define i32 @function_e7f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e7f8:
  %v0_e7f8 = load i32, i32* @edi, align 4
  %v1_e7f8 = add i32 %v0_e7f8, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_e7f8 = inttoptr i32 %v1_e7f8 to i32*
  %v3_e7f8 = load i32, i32* %v2_e7f8, align 4
  %v1_e7fb = icmp eq i32 %v3_e7f8, 0
  br i1 %v1_e7fb, label %bb, label %dec_label_pc_e7ff

bb:                                               ; preds = %dec_label_pc_e7f8
  %v2_e7fd = call i32 @function_e810(i32 ptrtoint (i32* @1 to i32))
  %v0_e7ff.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_e7ff

dec_label_pc_e7ff:                                ; preds = %bb, %dec_label_pc_e7f8
  %v0_e7ff = phi i32 [ %v0_e7ff.pre, %bb ], [ %v0_e7f8, %dec_label_pc_e7f8 ]
  %v1_e7ff = add i32 %v0_e7ff, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_e7ff = inttoptr i32 %v1_e7ff to i32*
  %v3_e7ff = load i32, i32* %v2_e7ff, align 4
  store i32 %v3_e7ff, i32* @eax, align 4
  %v2_e802 = load i32, i32* @ebp, align 4
  %v1_e805 = add i32 %v3_e7ff, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_e805 = inttoptr i32 %v1_e805 to i32*
  %v3_e805 = load i32, i32* %v2_e805, align 4
  %v5_e808 = icmp slt i32 %v3_e805, %v2_e802
  br i1 %v5_e808, label %bb5, label %dec_label_pc_e80a

bb5:                                              ; preds = %dec_label_pc_e7ff
  %v6_e808 = call i32 @function_e840()
  br label %dec_label_pc_e80a

dec_label_pc_e80a:                                ; preds = %bb5, %dec_label_pc_e7ff
  %v1_e80a = phi i32 [ %v6_e808, %bb5 ], [ %v3_e7ff, %dec_label_pc_e7ff ]
  ret i32 %v1_e80a

; uselistorder directives
  uselistorder i32 ()* @function_e840, { 1, 0 }
  uselistorder i32 (i32)* @function_e810, { 1, 0 }
}

define i32 @function_e810(i32 %arg1) local_unnamed_addr {
dec_label_pc_e810:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_40 = alloca i32, align 4
  %v2_e810 = ptrtoint i32* %stack_var_40 to i32
  store i32 %v2_e810, i32* %eax.global-to-local, align 4
  %v0_e81b = load i32, i32* @edi, align 4
  %v2_e81f = call i32 @unknown_19010(i32 %v2_e810, i32 %v0_e81b)
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_e82b = load i32, i32* @esi, align 4
  %v2_e82b = inttoptr i32 %v1_e82b to i32*
  store i32 %arg1, i32* %v2_e82b, align 4
  %v0_e82d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e82d

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_e838() local_unnamed_addr {
dec_label_pc_e838:
  %v0_e838 = load i32, i32* @ebx, align 4
  %v1_e838 = load i32, i32* @esi, align 4
  %v2_e838 = inttoptr i32 %v1_e838 to i32*
  store i32 %v0_e838, i32* %v2_e838, align 4
  %v0_e83a = load i32, i32* @eax, align 4
  ret i32 %v0_e83a
}

define i32 @function_e840() local_unnamed_addr {
dec_label_pc_e840:
  %v4_e840 = load i32, i32* @eax, align 4
  ret i32 %v4_e840
}

define i32 @function_e844() local_unnamed_addr {
dec_label_pc_e844:
  %v0_e844 = load i32, i32* @eax, align 4
  %v0_e850 = load i32, i32* @edi, align 4
  %v0_e854 = load i32, i32* @esi, align 4
  %v4_e857 = call i32 @unknown_18f40(i32 %v0_e854, i32 %v0_e850, i32 0, i32 %v0_e844)
  ret i32 %v4_e857

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @unknown_18f40, { 1, 2, 0 }
}

define i32 @function_e868() local_unnamed_addr {
dec_label_pc_e868:
  %eax.global-to-local = alloca i32, align 4
  %v0_e86c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_e86c
}

define i32 @function_e86e() local_unnamed_addr {
dec_label_pc_e86e:
  %v0_e872 = call i32 @function_e7dd()
  ret i32 %v0_e872
}

define i32 @function_e877() local_unnamed_addr {
dec_label_pc_e877:
  %v0_e877 = load i32, i32* @eax, align 4
  ret i32 %v0_e877
}

define i32 @_ZNSt10_List_baseIN5boost10shared_ptrINS0_8signals26detail15connection_bodyISt4pairINS3_15slot_meta_groupENS0_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS0_8functionIFvSD_SE_EEEEENS2_5mutexEEEEESaISL_EED1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_e880:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_e880 = load i32, i32* %edi.global-to-local, align 4
  %v0_e881 = load i32, i32* %esi.global-to-local, align 4
  %v0_e882 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp99, i32* @edi, align 4
  %v2_e896 = load i32, i32* %arg1, align 4
  store i32 %v2_e896, i32* @ebx, align 4
  %v12_e898 = icmp eq i32 %v2_e896, %tmp99
  %v1_e89a = icmp eq i1 %v12_e898, false
  br i1 %v1_e89a, label %dec_label_pc_e8a2, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e880
  %v5_e89c = call i32 @function_e8bb(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_e882, i32 %v0_e881, i32 %v0_e880)
  ret i32 %v5_e89c

dec_label_pc_e8a2:                                ; preds = %dec_label_pc_e880
  %v1_e8a2 = inttoptr i32 %v2_e896 to i32*
  %v2_e8a2 = load i32, i32* %v1_e8a2, align 4
  store i32 %v2_e8a2, i32* %esi.global-to-local, align 4
  %v1_e8a4 = add i32 %v2_e896, 12
  store i32 %v1_e8a4, i32* @eax, align 4
  %v1_e8aa = call i32 @function_13260(i32 %v1_e8a4)
  ret i32 %v1_e8aa

; uselistorder directives
  uselistorder i32 %v2_e896, { 2, 1, 0, 3 }
}

define i32 @function_e8bb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e8bb:
  %v3_e8bf = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_e8bf = icmp eq i32 %v3_e8bf, 0
  %v1_e8c6 = icmp eq i1 %v4_e8bf, false
  br i1 %v1_e8c6, label %dec_label_pc_e8cf, label %dec_label_pc_e8c8

dec_label_pc_e8c8:                                ; preds = %dec_label_pc_e8bb
  ret i32 %v3_e8bf

dec_label_pc_e8cf:                                ; preds = %dec_label_pc_e8bb
  ret i32 %v3_e8bf

; uselistorder directives
  uselistorder i32 %v3_e8bf, { 1, 0, 2 }
}

define i32 @_Z16WriteCompactSizeI11CDataStreamEvRT_y(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e8e0:
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i8*, align 4
  %v0_e8e0 = load i32, i32* @ebx, align 4
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8** %stack_var_-16, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v7_e8fd = icmp eq i32 %arg3, 0
  br i1 %v7_e8fd, label %dec_label_pc_e970, label %dec_label_pc_e902

dec_label_pc_e902:                                ; preds = %dec_label_pc_e8e0
  store i32 %arg2, i32* %stack_var_-36, align 4
  %v1_e906 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_e906 = inttoptr i32 %v1_e906 to i32*
  %v3_e906 = load i32, i32* %v2_e906, align 4
  %v2_e909 = ptrtoint i8** %stack_var_-16 to i32
  %v2_e911 = ptrtoint i32* %stack_var_-17 to i32
  store i32 ptrtoint (i32* @global_var_ff.838 to i32), i32* %stack_var_-17, align 4
  %v4_e92e = call i32 @unknown_18d20(i32 %arg1, i32 %v3_e906, i32 %v2_e911, i32 %v2_e909)
  %v0_e933 = load i32, i32* @ebx, align 4
  %v2_e93f = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_e943

dec_label_pc_e943:                                ; preds = %dec_label_pc_e9e0, %dec_label_pc_e9c0, %dec_label_pc_e97e, %dec_label_pc_e902
  %v0_e943.in.in.in = phi i32 [ %v0_ea0e, %dec_label_pc_e9e0 ], [ %arg1, %dec_label_pc_e9c0 ], [ %v0_e9ab, %dec_label_pc_e97e ], [ %v0_e933, %dec_label_pc_e902 ]
  %v0_e94f = phi i32 [ %v0_ea0e, %dec_label_pc_e9e0 ], [ %arg1, %dec_label_pc_e9c0 ], [ %v0_e9ab, %dec_label_pc_e97e ], [ %v0_e933, %dec_label_pc_e902 ]
  %v0_e94b.in = phi i32* [ %stack_var_-20, %dec_label_pc_e9e0 ], [ %stack_var_-17, %dec_label_pc_e9c0 ], [ %stack_var_-24, %dec_label_pc_e97e ], [ %stack_var_-36, %dec_label_pc_e902 ]
  %v0_e947 = phi i32 [ %v2_ea1a, %dec_label_pc_e9e0 ], [ %v2_e9cb, %dec_label_pc_e9c0 ], [ %v2_e9b7, %dec_label_pc_e97e ], [ %v2_e93f, %dec_label_pc_e902 ]
  %v0_e943.in.in = add i32 %v0_e943.in.in.in, ptrtoint (i8** @global_var_4.814 to i32)
  %v0_e943.in = inttoptr i32 %v0_e943.in.in to i32*
  %v0_e943 = load i32, i32* %v0_e943.in, align 4
  %v0_e94b = ptrtoint i32* %v0_e94b.in to i32
  %v4_e952 = call i32 @unknown_18d20(i32 %v0_e94f, i32 %v0_e943, i32 %v0_e94b, i32 %v0_e947)
  %v3_e957 = load i8*, i8** %stack_var_-16, align 4
  %v4_e957 = ptrtoint i8* %v3_e957 to i32
  %v3_e95b = xor i32 %v4_e957, ptrtoint ([2 x i8]* @2 to i32)
  %v4_e95b = icmp eq i32 %v3_e95b, 0
  %v1_e962 = icmp eq i1 %v4_e95b, false
  br i1 %v1_e962, label %dec_label_pc_ea23, label %dec_label_pc_e968

dec_label_pc_e968:                                ; preds = %dec_label_pc_e943
  store i32 %v0_e8e0, i32* @ebx, align 4
  ret i32 %v3_e95b

dec_label_pc_e970:                                ; preds = %dec_label_pc_e8e0
  %tmp28 = icmp ult i32 %arg2, 253
  br i1 %tmp28, label %dec_label_pc_e9c0, label %dec_label_pc_e977

dec_label_pc_e977:                                ; preds = %dec_label_pc_e970
  %tmp29 = icmp ult i32 %arg2, 65536
  br i1 %tmp29, label %dec_label_pc_e9e0, label %dec_label_pc_e97e

dec_label_pc_e97e:                                ; preds = %dec_label_pc_e977
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v1_e982 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_e982 = inttoptr i32 %v1_e982 to i32*
  %v3_e982 = load i32, i32* %v2_e982, align 4
  %v2_e985 = ptrtoint i32* %stack_var_-17 to i32
  %v2_e989 = ptrtoint i8** %stack_var_-16 to i32
  store i32 ptrtoint (i32* @global_var_fe.827 to i32), i32* %stack_var_-17, align 4
  %v4_e9a6 = call i32 @unknown_18d20(i32 %arg1, i32 %v3_e982, i32 %v2_e985, i32 %v2_e989)
  %v0_e9ab = load i32, i32* @ebx, align 4
  %v2_e9b7 = ptrtoint i32* %stack_var_-20 to i32
  br label %dec_label_pc_e943

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e970
  store i32 %arg2, i32* %stack_var_-17, align 4
  %v2_e9cb = ptrtoint i8** %stack_var_-16 to i32
  br label %dec_label_pc_e943

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e977
  store i32 %arg2, i32* %stack_var_-20, align 4
  %v1_e9e5 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_e9e5 = inttoptr i32 %v1_e9e5 to i32*
  %v3_e9e5 = load i32, i32* %v2_e9e5, align 4
  %v2_e9e8 = ptrtoint i32* %stack_var_-17 to i32
  %v2_e9ec = ptrtoint i8** %stack_var_-16 to i32
  store i32 -3, i32* %stack_var_-17, align 4
  %v4_ea09 = call i32 @unknown_18d20(i32 %arg1, i32 %v3_e9e5, i32 %v2_e9e8, i32 %v2_e9ec)
  %v0_ea0e = load i32, i32* @ebx, align 4
  %v2_ea1a = ptrtoint i32* %stack_var_-18 to i32
  br label %dec_label_pc_e943

dec_label_pc_ea23:                                ; preds = %dec_label_pc_e943
  ret i32 %v3_e95b

; uselistorder directives
  uselistorder i32 %v3_e95b, { 1, 0, 2 }
  uselistorder i32 %v0_e933, { 1, 0 }
  uselistorder i8** %stack_var_-16, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-17, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_18d20, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_ff.838 to i32), { 4, 0, 5, 3, 6, 1, 2, 7 }
  uselistorder i32 %arg2, { 2, 4, 3, 0, 1, 5 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKSs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ea30:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* @edx, align 4
  %v1_ea54 = icmp eq i32 %arg3, 0
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_ea54, label %bb, label %dec_label_pc_ea30.dec_label_pc_ea71_crit_edge

dec_label_pc_ea30.dec_label_pc_ea71_crit_edge:    ; preds = %dec_label_pc_ea30
  %v3_ea71.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ea71

bb:                                               ; preds = %dec_label_pc_ea30
  %v3_ea6f = call i32 @function_eae0(i32 sext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32))
  store i32 %v3_ea6f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ea71

dec_label_pc_ea71:                                ; preds = %dec_label_pc_ea30.dec_label_pc_ea71_crit_edge, %bb
  %v3_ea71 = phi i32 [ %v3_ea71.pre, %dec_label_pc_ea30.dec_label_pc_ea71_crit_edge ], [ %v3_ea6f, %bb ]
  ret i32 %v3_ea71

; uselistorder directives
  uselistorder i32 sext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_ea71, { 1, 0 }
}

define i32 @function_ea7c(i8 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_ea7c:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_ea7c = load i32, i32* %ecx.global-to-local, align 4
  %v1_ea7c = add i32 %v0_ea7c, 281052102
  %v2_ea7c = inttoptr i32 %v1_ea7c to i32*
  %v3_ea7c = load i32, i32* %v2_ea7c, align 4
  %v4_ea7c = add i32 %v3_ea7c, -1
  %v12_ea7c = icmp eq i32 %v4_ea7c, 0
  store i32 %v4_ea7c, i32* %v2_ea7c, align 4
  br i1 %v12_ea7c, label %dec_label_pc_ea94, label %dec_label_pc_ea84

dec_label_pc_ea84:                                ; preds = %dec_label_pc_ea7c
  br label %dec_label_pc_ea94

dec_label_pc_ea94:                                ; preds = %dec_label_pc_ea84, %dec_label_pc_ea7c
  %v0_ea94 = load i32, i32* %ebx.global-to-local, align 4
  %v0_eaa4 = load i32, i32* %esi.global-to-local, align 4
  %v0_eab0 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_eab0, i32* @eax, align 4
  %v1_eab2 = add i32 %v0_ea94, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_eab2 = inttoptr i32 %v1_eab2 to i32*
  %v3_eab2 = load i32, i32* %v2_eab2, align 4
  %v4_eab2 = add i32 %v3_eab2, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_eab2, i32* %v2_eab2, align 4
  %v3_eaba = xor i32 %arg3, ptrtoint ([2 x i8]* @2 to i32)
  %v4_eaba = icmp eq i32 %v3_eaba, 0
  store i32 %v3_eaba, i32* %ecx.global-to-local, align 4
  %v0_eac1 = load i32, i32* %esi.global-to-local, align 4
  %v1_eac1 = load i32, i32* %edi.global-to-local, align 4
  %v2_eac1 = inttoptr i32 %v1_eac1 to i32*
  store i32 %v0_eac1, i32* %v2_eac1, align 4
  %v1_eac3 = icmp eq i1 %v4_eaba, false
  br i1 %v1_eac3, label %bb, label %dec_label_pc_ea94.dec_label_pc_eac5_crit_edge

dec_label_pc_ea94.dec_label_pc_eac5_crit_edge:    ; preds = %dec_label_pc_ea94
  %v0_ead8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_eac5

bb:                                               ; preds = %dec_label_pc_ea94
  %v1_ea94 = add i32 %v0_ea94, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_eac3 = sext i8 %arg1 to i32
  %v7_eac3 = call i32 @function_eb20(i32 %v3_eac3, i32 %v0_eaa4, i32 %v1_ea94)
  br label %dec_label_pc_eac5

dec_label_pc_eac5:                                ; preds = %dec_label_pc_ea94.dec_label_pc_eac5_crit_edge, %bb
  %v0_ead8 = phi i32 [ %v0_ead8.pre, %dec_label_pc_ea94.dec_label_pc_eac5_crit_edge ], [ %v7_eac3, %bb ]
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  store i32 %arg5, i32* %esi.global-to-local, align 4
  store i32 %arg6, i32* %edi.global-to-local, align 4
  ret i32 %v0_ead8

; uselistorder directives
  uselistorder i32 %v0_ea94, { 1, 0 }
  uselistorder i32 %v4_ea7c, { 1, 0 }
  uselistorder label %dec_label_pc_eac5, { 1, 0 }
}

define i32 @function_eae0(i32 %arg1) local_unnamed_addr {
dec_label_pc_eae0:
  %v2_eae7 = load i32, i32* @edx, align 4
  ret i32 %v2_eae7
}

define i32 @function_eb0a() local_unnamed_addr {
dec_label_pc_eb0a:
  %eax.global-to-local = alloca i32, align 4
  %v4_eb0a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_eb0a
}

define i32 @function_eb0c() local_unnamed_addr {
dec_label_pc_eb0c:
  %cf.global-to-local = alloca i1, align 1
  %ebp.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %v0_eb0c = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_eb0c, label %bb, label %dec_label_pc_eb0c.dec_label_pc_eb0e_crit_edge

dec_label_pc_eb0c.dec_label_pc_eb0e_crit_edge:    ; preds = %dec_label_pc_eb0c
  %v4_eb0e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_eb0e

bb:                                               ; preds = %dec_label_pc_eb0c
  %v1_eb0c = call i32 @function_eb32()
  store i32 %v1_eb0c, i32* @eax, align 4
  br label %dec_label_pc_eb0e

dec_label_pc_eb0e:                                ; preds = %dec_label_pc_eb0c.dec_label_pc_eb0e_crit_edge, %bb
  %v4_eb0e = phi i32 [ %v4_eb0e.pre, %dec_label_pc_eb0c.dec_label_pc_eb0e_crit_edge ], [ %v1_eb0c, %bb ]
  %v0_eb0e = load i32, i32* %ebp.global-to-local, align 4
  %v1_eb0e = add i32 %v0_eb0e, -968618048
  %v2_eb0e = inttoptr i32 %v1_eb0e to i8*
  %v3_eb0e = load i8, i8* %v2_eb0e, align 1
  %v5_eb0e = trunc i32 %v4_eb0e to i8
  %v6_eb0e = load i1, i1* %cf.global-to-local, align 1
  %v7_eb0e = zext i1 %v6_eb0e to i8
  %v8_eb0e = add i8 %v3_eb0e, %v5_eb0e
  %v9_eb0e = add i8 %v8_eb0e, %v7_eb0e
  store i8 %v9_eb0e, i8* %v2_eb0e, align 1
  %v0_eb14 = load i32, i32* @eax, align 4
  %v2_eb14 = lshr i32 %v0_eb14, ptrtoint (i64* @global_var_1f.822 to i32)
  %v3_eb14 = icmp eq i32 %v2_eb14, 0
  store i1 %v3_eb14, i1* %zf.global-to-local, align 1
  %v9_eb14 = and i32 %v0_eb14, 1073741824
  %v10_eb14 = icmp ne i32 %v9_eb14, 0
  store i1 %v10_eb14, i1* %cf.global-to-local, align 1
  ret i32 %v2_eb14

; uselistorder directives
  uselistorder label %dec_label_pc_eb0e, { 1, 0 }
}

define i32 @function_eb20(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eb20:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_eb32() local_unnamed_addr {
dec_label_pc_eb32:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_eb3b() local_unnamed_addr {
dec_label_pc_eb3b:
  %eax.global-to-local = alloca i32, align 4
  %v0_eb3b = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_eb3b
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE16_M_insert_uniqueERKSs(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_eb50:
  store i32 0, i32* @eax, align 4
  store i32 %arg2, i32* @edx, align 4
  %v1_eb7f = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_eb7f = inttoptr i32 %v1_eb7f to i32*
  %v3_eb7f = load i32, i32* %v2_eb7f, align 4
  %v1_eb82 = icmp eq i32 %v3_eb7f, 0
  br i1 %v1_eb82, label %bb, label %dec_label_pc_eb8a

bb:                                               ; preds = %dec_label_pc_eb50
  %tmp107 = ptrtoint i32* %arg3 to i32
  %v4_eb84 = inttoptr i32 %arg1 to i32*
  %v5_eb84 = call i32 @function_ec45(i32* %v4_eb84, i32 %arg2, i32 %tmp107)
  br label %dec_label_pc_eb8a

dec_label_pc_eb8a:                                ; preds = %bb, %dec_label_pc_eb50
  %v2_eb8e = load i32, i32* %arg3, align 4
  ret i32 %v2_eb8e

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
}

define i32 @function_ebed() local_unnamed_addr {
dec_label_pc_ebed:
  %v0_ebef = load i32, i32* @edx, align 4
  ret i32 %v0_ebef
}

define i32 @function_ebf5(i32 %arg1) local_unnamed_addr {
dec_label_pc_ebf5:
  ret i32 %arg1
}

define i32 @function_ec0e() local_unnamed_addr {
dec_label_pc_ec0e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v0_ec0e = load i32, i32* %ebx.global-to-local, align 4
  %v1_ec0e = add i32 %v0_ec0e, -2060966828
  %v2_ec0e = inttoptr i32 %v1_ec0e to i32*
  %v3_ec0e = load i32, i32* %v2_ec0e, align 4
  %v4_ec0e = sub i32 %v3_ec0e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_ec0e, i32* %v2_ec0e, align 4
  %v2_ec14 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_ec14 = lshr i8 %v2_ec14, ptrtoint (i8** @global_var_4.814 to i8)
  %v4_ec14 = mul i8 %v2_ec14, 16
  %v5_ec14 = or i8 %v3_ec14, %v4_ec14
  %v6_ec14 = load i32, i32* %edi.global-to-local, align 4
  %v7_ec14 = inttoptr i32 %v6_ec14 to i8*
  store i8 %v5_ec14, i8* %v7_ec14, align 1
  %v0_ec17 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ec17
}

define i32 @function_ec26() local_unnamed_addr {
dec_label_pc_ec26:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_ec2a = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_ec35 = icmp eq i1 %v4_ec2a, false
  br i1 %v1_ec35, label %bb, label %dec_label_pc_ec3b

bb:                                               ; preds = %dec_label_pc_ec26
  %v2_ec35 = call i32 @function_ecc6()
  br label %dec_label_pc_ec3b

dec_label_pc_ec3b:                                ; preds = %bb, %dec_label_pc_ec26
  %v0_ec42 = phi i32 [ %v2_ec35, %bb ], [ %tmp10, %dec_label_pc_ec26 ]
  ret i32 %v0_ec42
}

define i32 @function_ec45(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ec45:
  %stack_var_60 = alloca i32, align 4
  %v0_ec45 = load i32, i32* @edx, align 4
  %v1_ec47 = add i32 %v0_ec45, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ec54 = add i32 %arg2, 12
  %v3_ec54 = inttoptr i32 %v2_ec54 to i32*
  %v4_ec54 = load i32, i32* %v3_ec54, align 4
  %v15_ec54 = icmp eq i32 %v1_ec47, %v4_ec54
  br i1 %v15_ec54, label %dec_label_pc_ec88, label %dec_label_pc_ec59

dec_label_pc_ec59:                                ; preds = %dec_label_pc_ec45
  %v0_ec61 = load i32, i32* @eax, align 4
  %v1_ec67 = add i32 %v0_ec61, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_ec67 = inttoptr i32 %v1_ec67 to i32*
  %v3_ec67 = load i32, i32* %v2_ec67, align 4
  %v1_ec6a = inttoptr i32 %arg3 to i32*
  %v2_ec6a = load i32, i32* %v1_ec6a, align 4
  %v1_ec6c = add i32 %v3_ec67, -12
  %v2_ec6c = inttoptr i32 %v1_ec6c to i32*
  %v3_ec6c = load i32, i32* %v2_ec6c, align 4
  store i32 %v3_ec6c, i32* @ebx, align 4
  %v1_ec6f = add i32 %v2_ec6a, -12
  %v2_ec6f = inttoptr i32 %v1_ec6f to i32*
  %v3_ec6f = load i32, i32* %v2_ec6f, align 4
  store i32 %v3_ec6f, i32* @esi, align 4
  %v2_ec7d = call i32 @function_ebf5(i32 %v1_ec47)
  ret i32 %v2_ec7d

dec_label_pc_ec88:                                ; preds = %dec_label_pc_ec45
  %tmp12 = ptrtoint i32* %arg1 to i32
  %v2_ec8c = ptrtoint i32* %stack_var_60 to i32
  %v7_ecab = call i32 @unknown_1d580(i32 %v2_ec8c, i32 %arg2, i32 0, i32 %v1_ec47, i32 %arg3)
  store i32 %arg3, i32* %arg1, align 4
  %v1_ecbd = add i32 %tmp12, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ecbd = inttoptr i32 %v1_ecbd to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_ecbd, align 1
  %v0_ecc1 = call i32 @function_ec26()
  ret i32 %v0_ecc1

; uselistorder directives
  uselistorder i32 %v1_ec47, { 1, 2, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_ecc6() local_unnamed_addr {
dec_label_pc_ecc6:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISsSsSt9_IdentityISsESt4lessISsESaISsEE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISsERKSs(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_ecd0:
  store i32 %arg2, i32* @ebp, align 4
  %v1_ecfd = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v12_ed00 = icmp eq i32 %v1_ecfd, %arg3
  store i32 %arg1, i32* @edi, align 4
  br i1 %v12_ed00, label %bb, label %dec_label_pc_ed1b

bb:                                               ; preds = %dec_label_pc_ecd0
  %v3_ed15 = call i32 @function_eed8(i32* %arg4)
  br label %dec_label_pc_ed1b

dec_label_pc_ed1b:                                ; preds = %dec_label_pc_ecd0, %bb
  %v3_ed51 = phi i32 [ %v3_ed15, %bb ], [ %v1_ecfd, %dec_label_pc_ecd0 ]
  ret i32 %v3_ed51

; uselistorder directives
  uselistorder i32 %v1_ecfd, { 1, 0 }
  uselistorder label %dec_label_pc_ed1b, { 1, 0 }
}

define i32 @function_eddf() local_unnamed_addr {
dec_label_pc_eddf:
  %cf.global-to-local = alloca i1, align 1
  %ecx.global-to-local = alloca i32, align 4
  %v0_eddf = load i32, i32* %ecx.global-to-local, align 4
  %v1_eddf = add i32 %v0_eddf, 417866812
  %v2_eddf = inttoptr i32 %v1_eddf to i8*
  %v3_eddf = load i8, i8* %v2_eddf, align 1
  %v5_eddf = trunc i32 %v0_eddf to i8
  %v6_eddf = load i1, i1* %cf.global-to-local, align 1
  %v7_eddf = zext i1 %v6_eddf to i8
  %v8_eddf = add i8 %v3_eddf, %v5_eddf
  %v9_eddf = add i8 %v7_eddf, %v8_eddf
  %v27_eddf = icmp ule i8 %v9_eddf, %v3_eddf
  %v28_eddf = icmp ult i8 %v8_eddf, %v3_eddf
  %v29_eddf = select i1 %v6_eddf, i1 %v27_eddf, i1 %v28_eddf
  store i1 %v29_eddf, i1* %cf.global-to-local, align 1
  store i8 %v9_eddf, i8* %v2_eddf, align 1
  %v0_ede5 = call i32 @function_ec83edea()
  ret i32 %v0_ede5

; uselistorder directives
  uselistorder i8 %v9_eddf, { 1, 0 }
  uselistorder i8 %v8_eddf, { 1, 0 }
}

define i32 @function_edeb() local_unnamed_addr {
dec_label_pc_edeb:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v3_edef = xor i32 %tmp6, ptrtoint ([2 x i8]* @2 to i32)
  %v4_edef = icmp eq i32 %v3_edef, 0
  store i32 %v3_edef, i32* @ecx, align 4
  %v0_edf6 = load i32, i32* @edi, align 4
  store i32 %v0_edf6, i32* @eax, align 4
  %v1_edf8 = icmp eq i1 %v4_edef, false
  br i1 %v1_edf8, label %bb, label %dec_label_pc_edfe

bb:                                               ; preds = %dec_label_pc_edeb
  %v2_edf8 = call i32 @function_efc2()
  br label %dec_label_pc_edfe

dec_label_pc_edfe:                                ; preds = %bb, %dec_label_pc_edeb
  %v0_ee11 = phi i32 [ %v2_edf8, %bb ], [ %v0_edf6, %dec_label_pc_edeb ]
  ret i32 %v0_ee11
}

define i32 @function_ee52() local_unnamed_addr {
dec_label_pc_ee52:
  %v0_ee52 = call i32 @function_89000000()
  ret i32 %v0_ee52

; uselistorder directives
  uselistorder i32 ()* @function_89000000, { 1, 0 }
}

define i32 @function_ee86(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee86:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_ee86 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ee86 = add i32 %v0_ee86, 724837452
  %v2_ee86 = inttoptr i32 %v1_ee86 to i32*
  %v3_ee86 = load i32, i32* %v2_ee86, align 4
  %v4_ee86 = add i32 %v3_ee86, -1
  store i32 %v4_ee86, i32* %v2_ee86, align 4
  %v0_ee8d = load i32, i32* %eax.global-to-local, align 4
  %v11_ee8d = and i32 %v0_ee8d, or (i32 zext (i8 ptrtoint (i32* @global_var_38.831 to i8) to i32), i32 -256)
  %v1_ee8f = icmp eq i32 %v11_ee8d, 0
  %v2_ee91 = load i32, i32* %ebx.global-to-local, align 4
  %v3_ee91 = select i1 %v1_ee8f, i32 %v2_ee91, i32 %v11_ee8d
  store i32 %v3_ee91, i32* %eax.global-to-local, align 4
  %v2_ee94 = icmp slt i32 %v3_ee91, 0
  %v1_ee96 = icmp eq i1 %v2_ee94, false
  br i1 %v1_ee96, label %bb, label %dec_label_pc_ee9c

bb:                                               ; preds = %dec_label_pc_ee86
  %v2_ee96 = call i32 @function_ef68()
  store i32 %v2_ee96, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_ee9c

dec_label_pc_ee9c:                                ; preds = %bb, %dec_label_pc_ee86
  %v0_ee9c = load i32, i32* @esi, align 4
  %v1_ee9c = add i32 %v0_ee9c, 12
  %v2_ee9c = inttoptr i32 %v1_ee9c to i32*
  %v3_ee9c = load i32, i32* %v2_ee9c, align 4
  store i32 %v3_ee9c, i32* %eax.global-to-local, align 4
  %v1_ee9f = icmp eq i32 %v3_ee9c, 0
  br i1 %v1_ee9f, label %bb106, label %dec_label_pc_eea7

bb106:                                            ; preds = %dec_label_pc_ee9c
  %v1_eea1 = call i32 @function_ef90()
  store i32 %v1_eea1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_eea7

dec_label_pc_eea7:                                ; preds = %bb106, %dec_label_pc_ee9c
  %v0_eeaf = load i32, i32* @ecx, align 4
  %v0_eebb = load i32, i32* @edi, align 4
  %v2_eebe = call i32 @unknown_1d700(i32 %v0_eebb, i32 %v0_eeaf)
  store i32 %v2_eebe, i32* %eax.global-to-local, align 4
  %v0_eec6 = call i32 @function_edeb()
  store i32 %v0_eec6, i32* %eax.global-to-local, align 4
  ret i32 %v0_eec6

; uselistorder directives
  uselistorder i32 %v11_ee8d, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
}

define i32 @function_eed0() local_unnamed_addr {
dec_label_pc_eed0:
  %v1_eed0 = load i32, i32* @edi, align 4
  %v2_eed0 = inttoptr i32 %v1_eed0 to i32*
  %v0_eed2 = call i32 @function_edeb()
  ret i32 %v0_eed2
}

define i32 @function_eed8(i32* %arg1) local_unnamed_addr {
dec_label_pc_eed8:
  %v0_eed8 = load i32, i32* @ebp, align 4
  %v1_eed8 = add i32 %v0_eed8, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_eed8 = inttoptr i32 %v1_eed8 to i32*
  %v3_eed8 = load i32, i32* %v2_eed8, align 4
  %v1_eedb = icmp eq i32 %v3_eed8, 0
  br i1 %v1_eedb, label %bb, label %dec_label_pc_eedf

bb:                                               ; preds = %dec_label_pc_eed8
  %v1_eedd = call i32 @function_ef18()
  %v0_eedf.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_eedf

dec_label_pc_eedf:                                ; preds = %bb, %dec_label_pc_eed8
  %v0_eedf = phi i32 [ %v0_eedf.pre, %bb ], [ %v0_eed8, %dec_label_pc_eed8 ]
  %v1_eedf = add i32 %v0_eedf, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_eedf = inttoptr i32 %v1_eedf to i32*
  %v3_eedf = load i32, i32* %v2_eedf, align 4
  %v1_eee6 = add i32 %v3_eedf, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_eee6 = inttoptr i32 %v1_eee6 to i32*
  %v3_eee6 = load i32, i32* %v2_eee6, align 4
  %v2_eeed = load i32, i32* %arg1, align 4
  %v1_eef2 = add i32 %v2_eeed, -12
  %v2_eef2 = inttoptr i32 %v1_eef2 to i32*
  %v3_eef2 = load i32, i32* %v2_eef2, align 4
  store i32 %v3_eef2, i32* @esi, align 4
  ret i32 %v3_eee6
}

define i32 @function_ef0f() local_unnamed_addr {
dec_label_pc_ef0f:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_ef0f = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_ef0f = lshr i8 %v2_ef0f, ptrtoint (i8** @global_var_4.814 to i8)
  %v4_ef0f = mul i8 %v2_ef0f, 16
  %v5_ef0f = or i8 %v3_ef0f, %v4_ef0f
  %v6_ef0f = load i32, i32* %edi.global-to-local, align 4
  %v7_ef0f = inttoptr i32 %v6_ef0f to i8*
  store i8 %v5_ef0f, i8* %v7_ef0f, align 1
  %v0_ef12 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ef12
}

define i32 @function_ef18() local_unnamed_addr {
dec_label_pc_ef18:
  %stack_var_72 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v2_ef1c = ptrtoint i32* %stack_var_72 to i32
  %v2_ef2b = call i32 @unknown_1d820(i32 %v2_ef1c, i32 %tmp6)
  %v1_ef37 = load i32, i32* @edi, align 4
  %v2_ef37 = inttoptr i32 %v1_ef37 to i32*
  %v0_ef39 = call i32 @function_edeb()
  ret i32 %v0_ef39
}

define i32 @function_ef4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef4c:
  %v0_ef58 = load i32, i32* @edi, align 4
  %v2_ef5b = call i32 @unknown_1d700(i32 %v0_ef58, i32 0)
  %v0_ef63 = call i32 @function_edeb()
  ret i32 %v0_ef63
}

define i32 @function_ef68() local_unnamed_addr {
dec_label_pc_ef68:
  %stack_var_72 = alloca i32, align 4
  %v2_ef6c = ptrtoint i32* %stack_var_72 to i32
  ret i32 %v2_ef6c
}

define i32 @function_ef78(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef78:
  %v2_ef88 = call i32 @function_ef4c(i32 %arg1, i32 %arg2)
  ret i32 %v2_ef88
}

define i32 @function_ef90() local_unnamed_addr {
dec_label_pc_ef90:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_ef94 = load i32, i32* @esi, align 4
  %v2_ef9c = call i32 @function_ef4c(i32 %v0_ef94, i32 %tmp2)
  ret i32 %v2_ef9c
}

define i32 @function_ef9e(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef9e:
  %eax.global-to-local = alloca i32, align 4
  %v0_efa6 = load i32, i32* %eax.global-to-local, align 4
  %v0_efb2 = load i32, i32* @edi, align 4
  %v2_efb5 = call i32 @unknown_1d700(i32 %v0_efb2, i32 %v0_efa6)
  store i32 %v2_efb5, i32* %eax.global-to-local, align 4
  %v0_efbd = call i32 @function_edeb()
  store i32 %v0_efbd, i32* %eax.global-to-local, align 4
  ret i32 %v0_efbd

; uselistorder directives
  uselistorder i32 ()* @function_edeb, { 4, 2, 0, 3, 1 }
  uselistorder i32 (i32, i32)* @unknown_1d700, { 2, 1, 0 }
}

define i32 @function_efc2() local_unnamed_addr {
dec_label_pc_efc2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN14CUnsignedAlert11UnserializeI11CDataStreamEEvRT_ii(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_efd0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp9 = call i8* @__decompiler_undefined_function_1()
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v3_efff = call i32 @unknown_17cb0(i32 %arg1, i32 ptrtoint (i8** @global_var_4.814 to i32))
  %v1_f013 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_f013, i32* %eax.global-to-local, align 4
  %v3_f01a = call i32 @unknown_17cb0(i32 %v1_f013, i32 ptrtoint (i32* @global_var_8.813 to i32))
  %v1_f02e = add i32 %arg1, 12
  store i32 %v1_f02e, i32* %eax.global-to-local, align 4
  %v3_f035 = call i32 @unknown_17cb0(i32 %v1_f02e, i32 ptrtoint (i32* @global_var_8.813 to i32))
  %v1_f049 = add i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  store i32 %v1_f049, i32* %eax.global-to-local, align 4
  %v3_f050 = call i32 @unknown_17cb0(i32 %v1_f049, i32 ptrtoint (i8** @global_var_4.814 to i32))
  %v1_f064 = add i32 %arg1, 24
  store i32 %v1_f064, i32* %eax.global-to-local, align 4
  %v3_f06b = call i32 @unknown_17cb0(i32 %v1_f064, i32 ptrtoint (i8** @global_var_4.814 to i32))
  store i32 %v3_f06b, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_f078 = add i32 %arg1, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f078 = inttoptr i32 %v1_f078 to i32*
  %v3_f078 = load i32, i32* %v2_f078, align 4
  store i32 %v3_f078, i32* %eax.global-to-local, align 4
  %v1_f07b = add i32 %arg1, 28
  %v3_f089 = call i32 @unknown_19180(i32 %v1_f07b, i32 %v3_f078)
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_f096 = add i32 %arg1, 32
  store i32 %v1_f096, i32* %eax.global-to-local, align 4
  %v2_f099 = add i32 %arg1, 40
  %v3_f099 = inttoptr i32 %v2_f099 to i32*
  store i32 %v1_f096, i32* %v3_f099, align 4
  %v0_f09c = load i32, i32* %edx.global-to-local, align 4
  %v1_f09c = add i32 %v0_f09c, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f09c = inttoptr i32 %v1_f09c to i32*
  store i32 0, i32* %v2_f09c, align 4
  %v0_f0a3 = load i32, i32* %eax.global-to-local, align 4
  %v1_f0a3 = load i32, i32* %edx.global-to-local, align 4
  %v2_f0a3 = add i32 %v1_f0a3, 44
  %v3_f0a3 = inttoptr i32 %v2_f0a3 to i32*
  store i32 %v0_f0a3, i32* %v3_f0a3, align 4
  %v0_f0a6 = load i32, i32* %edx.global-to-local, align 4
  %v1_f0a6 = add i32 %v0_f0a6, ptrtoint (i32* @global_var_30.842 to i32)
  %v2_f0a6 = inttoptr i32 %v1_f0a6 to i32*
  store i32 0, i32* %v2_f0a6, align 4
  %v0_f0b0 = call i32 @unknown_1d420()
  store i32 %v0_f0b0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v3_f0bd = load i32, i32* %v3_f099, align 4
  store i32 %v3_f0bd, i32* @esi, align 4
  %v1_f0c0 = icmp eq i32 %v0_f0b0, 0
  br i1 %v1_f0c0, label %dec_label_pc_efd0.dec_label_pc_f124_crit_edge, label %dec_label_pc_f0c4

dec_label_pc_efd0.dec_label_pc_f124_crit_edge:    ; preds = %dec_label_pc_efd0
  %v0_f124.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_f124

dec_label_pc_f0c4:                                ; preds = %dec_label_pc_efd0
  %v1_f0c4 = add i32 %v0_f0b0, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_f0c4, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %ebx.global-to-local, align 4
  %v2_f0d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v1_f07b, i32* %ebp.global-to-local, align 4
  %v0_f0e0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_f0e0

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0e0, %dec_label_pc_f0c4
  %v0_f0e4 = phi i32 [ %v0_f116, %dec_label_pc_f0e0 ], [ ptrtoint (i8** @global_var_1.820 to i32), %dec_label_pc_f0c4 ]
  %v0_f0e7 = phi i32 [ %v1_f113, %dec_label_pc_f0e0 ], [ %v0_f0e0.pre, %dec_label_pc_f0c4 ]
  %v1_f0e0 = add i32 %v0_f0e7, 28
  %v2_f0e0 = inttoptr i32 %v1_f0e0 to i32*
  %v3_f0e0 = load i32, i32* %v2_f0e0, align 4
  store i32 %v3_f0e0, i32* %eax.global-to-local, align 4
  %v1_f0e4 = add i32 %v0_f0e4, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_f0e4, i32* %ebx.global-to-local, align 4
  %v1_f0e7 = add i32 %v0_f0e7, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f0e7 = inttoptr i32 %v1_f0e7 to i32*
  store i32 ptrtoint (i8** @global_var_4.814 to i32), i32* %v2_f0e7, align 4
  %v1_f0ef = load i32, i32* @esp, align 4
  %v2_f0ef = add i32 %v1_f0ef, 4
  %v3_f0ef = inttoptr i32 %v2_f0ef to i32*
  store i32 %v2_f0d0, i32* %v3_f0ef, align 4
  %v0_f0f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_f0f3 = load i32, i32* @esp, align 4
  %v2_f0f3 = inttoptr i32 %v1_f0f3 to i32*
  store i32 %v0_f0f3, i32* %v2_f0f3, align 4
  %v3_f0f6 = call i32 @unknown_17cb0(i32 %v1_f0c4, i32 %arg1)
  store i32 %v3_f0f6, i32* %eax.global-to-local, align 4
  %v0_f0fb = load i32, i32* @esp, align 4
  %v1_f0fb = add i32 %v0_f0fb, 44
  store i32 %v1_f0fb, i32* %edx.global-to-local, align 4
  %v0_f0ff = load i32, i32* @esi, align 4
  %v2_f0ff = add i32 %v0_f0fb, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_f0ff = inttoptr i32 %v2_f0ff to i32*
  store i32 %v0_f0ff, i32* %v3_f0ff, align 4
  %v1_f103 = load i32, i32* @esp, align 4
  %v2_f103 = add i32 %v1_f103, 12
  %v3_f103 = inttoptr i32 %v2_f103 to i32*
  store i32 %v2_f0d0, i32* %v3_f103, align 4
  %v0_f107 = load i32, i32* %ebp.global-to-local, align 4
  %v1_f107 = load i32, i32* @esp, align 4
  %v2_f107 = add i32 %v1_f107, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f107 = inttoptr i32 %v2_f107 to i32*
  store i32 %v0_f107, i32* %v3_f107, align 4
  %v0_f10b = load i32, i32* %edx.global-to-local, align 4
  %v1_f10b = load i32, i32* @esp, align 4
  %v2_f10b = inttoptr i32 %v1_f10b to i32*
  store i32 %v0_f10b, i32* %v2_f10b, align 4
  %v0_f10e = call i32 @unknown_1d6c0()
  store i32 %v0_f10e, i32* %eax.global-to-local, align 4
  %v0_f113 = load i32, i32* @esp, align 4
  %v1_f113 = sub i32 %v0_f113, ptrtoint (i8** @global_var_4.814 to i32)
  %v0_f116 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f116 = add i32 %v1_f113, 32
  %v3_f116 = inttoptr i32 %v2_f116 to i32*
  %v4_f116 = load i32, i32* %v3_f116, align 4
  %v15_f116 = icmp eq i32 %v0_f116, %v4_f116
  %v1_f11a = add i32 %v1_f113, 44
  %v2_f11a = inttoptr i32 %v1_f11a to i32*
  %v3_f11a = load i32, i32* %v2_f11a, align 4
  store i32 %v3_f11a, i32* @esi, align 4
  %v1_f11e = icmp eq i1 %v15_f116, false
  br i1 %v1_f11e, label %dec_label_pc_f0e0, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f0e0
  %v4_f0d6 = inttoptr i32 %v1_f0c4 to i8*
  %v1_f120 = add i32 %v1_f113, 28
  %v2_f120 = inttoptr i32 %v1_f120 to i32*
  %v3_f120 = load i32, i32* %v2_f120, align 4
  store i32 %v3_f120, i32* @ebp, align 4
  br label %dec_label_pc_f124

dec_label_pc_f124:                                ; preds = %dec_label_pc_efd0.dec_label_pc_f124_crit_edge, %dec_label_pc_f120
  %v0_f124 = phi i32 [ %v0_f124.pre, %dec_label_pc_efd0.dec_label_pc_f124_crit_edge ], [ %v1_f113, %dec_label_pc_f120 ]
  %stack_var_-60.0 = phi i8* [ %tmp9, %dec_label_pc_efd0.dec_label_pc_f124_crit_edge ], [ %v4_f0d6, %dec_label_pc_f120 ]
  %v1_f124 = add i32 %v0_f124, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f124 = inttoptr i32 %v1_f124 to i32*
  %v3_f124 = load i32, i32* %v2_f124, align 4
  store i32 %v3_f124, i32* %eax.global-to-local, align 4
  %v1_f128 = add i32 %v0_f124, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f128 = inttoptr i32 %v1_f128 to i32*
  store i32 ptrtoint (i8** @global_var_4.814 to i32), i32* %v2_f128, align 4
  %v0_f130 = load i32, i32* @ebp, align 4
  %v1_f130 = load i32, i32* @esp, align 4
  %v2_f130 = inttoptr i32 %v1_f130 to i32*
  store i32 %v0_f130, i32* %v2_f130, align 4
  %v0_f133 = load i32, i32* %eax.global-to-local, align 4
  %v1_f133 = add i32 %v0_f133, ptrtoint (i32* @global_var_34.832 to i32)
  store i32 %v1_f133, i32* %eax.global-to-local, align 4
  %v1_f136 = load i32, i32* @esp, align 4
  %v2_f136 = add i32 %v1_f136, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f136 = inttoptr i32 %v2_f136 to i32*
  store i32 %v1_f133, i32* %v3_f136, align 4
  %v1_f13a = ptrtoint i8* %stack_var_-60.0 to i32
  %v3_f13a = call i32 @unknown_17cb0(i32 %v1_f13a, i32 %arg1)
  store i32 %v3_f13a, i32* %eax.global-to-local, align 4
  %v0_f13f = load i32, i32* @esp, align 4
  %v1_f13f = add i32 %v0_f13f, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f13f = inttoptr i32 %v1_f13f to i32*
  %v3_f13f = load i32, i32* %v2_f13f, align 4
  store i32 %v3_f13f, i32* %eax.global-to-local, align 4
  %v1_f143 = add i32 %v0_f13f, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f143 = inttoptr i32 %v1_f143 to i32*
  store i32 ptrtoint (i8** @global_var_4.814 to i32), i32* %v2_f143, align 4
  %v0_f14b = load i32, i32* @ebp, align 4
  %v1_f14b = load i32, i32* @esp, align 4
  %v2_f14b = inttoptr i32 %v1_f14b to i32*
  store i32 %v0_f14b, i32* %v2_f14b, align 4
  %v0_f14e = load i32, i32* %eax.global-to-local, align 4
  %v1_f14e = add i32 %v0_f14e, ptrtoint (i32* @global_var_38.831 to i32)
  store i32 %v1_f14e, i32* %eax.global-to-local, align 4
  %v1_f151 = load i32, i32* @esp, align 4
  %v2_f151 = add i32 %v1_f151, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f151 = inttoptr i32 %v2_f151 to i32*
  store i32 %v1_f14e, i32* %v3_f151, align 4
  %v3_f155 = call i32 @unknown_17cb0(i32 %v1_f13a, i32 %arg1)
  store i32 %v3_f155, i32* %eax.global-to-local, align 4
  %v0_f15a = load i32, i32* @esp, align 4
  %v1_f15a = add i32 %v0_f15a, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f15a = inttoptr i32 %v1_f15a to i32*
  %v3_f15a = load i32, i32* %v2_f15a, align 4
  store i32 %v3_f15a, i32* %eax.global-to-local, align 4
  %v3_f15e = load i32, i32* %v2_f15a, align 4
  store i32 %v3_f15e, i32* %edx.global-to-local, align 4
  %v1_f162 = add i32 %v3_f15a, ptrtoint (i32* @global_var_3c.843 to i32)
  store i32 %v1_f162, i32* %eax.global-to-local, align 4
  %v2_f165 = add i32 %v0_f15a, 28
  %v3_f165 = inttoptr i32 %v2_f165 to i32*
  store i32 %v1_f162, i32* %v3_f165, align 4
  %v0_f169 = load i32, i32* %edx.global-to-local, align 4
  %v1_f169 = add i32 %v0_f169, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_f169 = inttoptr i32 %v1_f169 to i32*
  %v3_f169 = load i32, i32* %v2_f169, align 4
  store i32 %v3_f169, i32* %eax.global-to-local, align 4
  %v1_f16c = load i32, i32* @esp, align 4
  %v2_f16c = add i32 %v1_f16c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f16c = inttoptr i32 %v2_f16c to i32*
  store i32 %v3_f169, i32* %v3_f16c, align 4
  %v0_f170 = load i32, i32* @esp, align 4
  %v1_f170 = add i32 %v0_f170, 28
  %v2_f170 = inttoptr i32 %v1_f170 to i32*
  %v3_f170 = load i32, i32* %v2_f170, align 4
  store i32 %v3_f170, i32* %eax.global-to-local, align 4
  %v2_f174 = inttoptr i32 %v0_f170 to i32*
  store i32 %v3_f170, i32* %v2_f174, align 4
  %v0_f177 = call i32 @unknown_191e0()
  store i32 %v0_f177, i32* %eax.global-to-local, align 4
  %v0_f17c = load i32, i32* @esp, align 4
  %v1_f17c = add i32 %v0_f17c, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f17c = inttoptr i32 %v1_f17c to i32*
  %v3_f17c = load i32, i32* %v2_f17c, align 4
  store i32 %v3_f17c, i32* %eax.global-to-local, align 4
  %v3_f180 = load i32, i32* %v2_f17c, align 4
  store i32 %v3_f180, i32* %edx.global-to-local, align 4
  %v1_f184 = add i32 %v3_f17c, ptrtoint (i32* @global_var_40.840 to i32)
  store i32 %v1_f184, i32* %eax.global-to-local, align 4
  %v2_f187 = add i32 %v3_f180, ptrtoint (i8** @global_var_48.821 to i32)
  %v3_f187 = inttoptr i32 %v2_f187 to i32*
  store i32 %v1_f184, i32* %v3_f187, align 4
  %v0_f18a = load i32, i32* %edx.global-to-local, align 4
  %v1_f18a = add i32 %v0_f18a, ptrtoint (i32* @global_var_44.841 to i32)
  %v2_f18a = inttoptr i32 %v1_f18a to i32*
  store i32 0, i32* %v2_f18a, align 4
  %v0_f191 = load i32, i32* %eax.global-to-local, align 4
  %v1_f191 = load i32, i32* %edx.global-to-local, align 4
  %v2_f191 = add i32 %v1_f191, 76
  %v3_f191 = inttoptr i32 %v2_f191 to i32*
  store i32 %v0_f191, i32* %v3_f191, align 4
  %v0_f194 = load i32, i32* %edx.global-to-local, align 4
  %v1_f194 = add i32 %v0_f194, 80
  %v2_f194 = inttoptr i32 %v1_f194 to i32*
  store i32 0, i32* %v2_f194, align 4
  %v0_f19b = load i32, i32* @ebp, align 4
  %v1_f19b = load i32, i32* @esp, align 4
  %v2_f19b = inttoptr i32 %v1_f19b to i32*
  store i32 %v0_f19b, i32* %v2_f19b, align 4
  %v0_f19e = call i32 @unknown_1d420()
  store i32 %v0_f19e, i32* %eax.global-to-local, align 4
  %v0_f1a3 = load i32, i32* @esp, align 4
  %v1_f1a3 = add i32 %v0_f1a3, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_f1a3 = inttoptr i32 %v1_f1a3 to i32*
  %v3_f1a3 = load i32, i32* %v2_f1a3, align 4
  store i32 %v3_f1a3, i32* %edx.global-to-local, align 4
  %v1_f1a7 = add i32 %v3_f1a3, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_f1a7 = inttoptr i32 %v1_f1a7 to i32*
  %v3_f1a7 = load i32, i32* %v2_f1a7, align 4
  store i32 %v3_f1a7, i32* @edi, align 4
  %v1_f1aa = icmp eq i32 %v0_f19e, 0
  br i1 %v1_f1aa, label %bb, label %dec_label_pc_f1ae

bb:                                               ; preds = %dec_label_pc_f124
  %v1_f1ac = call i32 @function_f205()
  store i32 %v1_f1ac, i32* %eax.global-to-local, align 4
  %v1_f1b6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_f1ae

dec_label_pc_f1ae:                                ; preds = %bb, %dec_label_pc_f124
  %v1_f1b6 = phi i32 [ %v1_f1b6.pre, %bb ], [ %v0_f1a3, %dec_label_pc_f124 ]
  %v0_f1ae = phi i32 [ %v1_f1ac, %bb ], [ %v0_f19e, %dec_label_pc_f124 ]
  %v1_f1ae = add i32 %v0_f1ae, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* @esi, align 4
  %v2_f1b6 = add i32 %v1_f1b6, 32
  %v3_f1b6 = inttoptr i32 %v2_f1b6 to i32*
  store i32 %v1_f1ae, i32* %v3_f1b6, align 4
  %v0_f1ba = load i32, i32* @esp, align 4
  %v1_f1ba = add i32 %v0_f1ba, ptrtoint (i32* @global_var_38.831 to i32)
  store i32 %v1_f1ba, i32* %ebx.global-to-local, align 4
  store i32 %v1_f1ba, i32* @edx, align 4
  %v0_f1c2 = load i32, i32* @ebp, align 4
  store i32 %v0_f1c2, i32* @eax, align 4
  %v2_f1c4 = inttoptr i32 %v1_f1ba to i32*
  store i32 12, i32* %v2_f1c4, align 4
  %v0_f1cc = call i32 @function_10030()
  store i32 %v0_f1cc, i32* %eax.global-to-local, align 4
  %v0_f1d1 = load i32, i32* @esp, align 4
  %v1_f1d1 = add i32 %v0_f1d1, 28
  %v2_f1d1 = inttoptr i32 %v1_f1d1 to i32*
  %v3_f1d1 = load i32, i32* %v2_f1d1, align 4
  store i32 %v3_f1d1, i32* %eax.global-to-local, align 4
  %v1_f1d5 = add i32 %v0_f1d1, 40
  store i32 %v1_f1d5, i32* %edx.global-to-local, align 4
  %v0_f1d9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1d9 = add i32 %v0_f1d1, 12
  %v3_f1d9 = inttoptr i32 %v2_f1d9 to i32*
  store i32 %v0_f1d9, i32* %v3_f1d9, align 4
  %v0_f1dd = load i32, i32* @edi, align 4
  %v1_f1dd = load i32, i32* @esp, align 4
  %v2_f1dd = add i32 %v1_f1dd, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_f1dd = inttoptr i32 %v2_f1dd to i32*
  store i32 %v0_f1dd, i32* %v3_f1dd, align 4
  %v0_f1e1 = load i32, i32* %edx.global-to-local, align 4
  %v1_f1e1 = load i32, i32* @esp, align 4
  %v2_f1e1 = inttoptr i32 %v1_f1e1 to i32*
  store i32 %v0_f1e1, i32* %v2_f1e1, align 4
  %v0_f1e4 = load i32, i32* %eax.global-to-local, align 4
  %v1_f1e4 = load i32, i32* @esp, align 4
  %v2_f1e4 = add i32 %v1_f1e4, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f1e4 = inttoptr i32 %v2_f1e4 to i32*
  store i32 %v0_f1e4, i32* %v3_f1e4, align 4
  %v0_f1e8 = call i32 @unknown_1dca0()
  store i32 %v0_f1e8, i32* %eax.global-to-local, align 4
  %v0_f1ed = load i32, i32* @esp, align 4
  %v1_f1ed = sub i32 %v0_f1ed, ptrtoint (i8** @global_var_4.814 to i32)
  %v0_f1f7 = load i32, i32* %ebx.global-to-local, align 4
  %v2_f1f7 = inttoptr i32 %v1_f1ed to i32*
  store i32 %v0_f1f7, i32* %v2_f1f7, align 4
  %v3_f1f7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_f1f7

; uselistorder directives
  uselistorder i32 %v0_f124, { 1, 0 }
  uselistorder i32 %v1_f113, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v1_f0c4, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 ()* @unknown_1d420, { 1, 0 }
  uselistorder i32 40, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32 %arg1, { 13, 12, 14, 11, 0, 9, 10, 6, 7, 8, 5, 4, 3, 2, 1, 15 }
  uselistorder label %dec_label_pc_f124, { 1, 0 }
}

define i32 @function_f205() local_unnamed_addr {
dec_label_pc_f205:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %v1_f214 = add i32 %tmp12, ptrtoint (i32* @global_var_54.830 to i32)
  %v3_f21b = call i32 @unknown_17cb0(i32 %v1_f214, i32 ptrtoint (i8** @global_var_4.814 to i32))
  %v0_f224 = load i32, i32* @ebp, align 4
  store i32 %v0_f224, i32* @eax, align 4
  %v1_f226 = add i32 %tmp12, 88
  store i32 %v1_f226, i32* @edx, align 4
  %v0_f229 = call i32 @function_10030()
  %v0_f232 = load i32, i32* @ebp, align 4
  store i32 %v0_f232, i32* @eax, align 4
  %v1_f234 = add i32 %tmp12, 92
  store i32 %v1_f234, i32* @edx, align 4
  %v0_f237 = call i32 @function_10030()
  %v0_f240 = load i32, i32* @ebp, align 4
  store i32 %v0_f240, i32* @eax, align 4
  %v1_f242 = add i32 %tmp12, 96
  store i32 %v1_f242, i32* @edx, align 4
  %v0_f245 = call i32 @function_10030()
  %v3_f24e = xor i32 %tmp7, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f24e = icmp eq i32 %v3_f24e, 0
  store i32 %v3_f24e, i32* @eax, align 4
  %v1_f255 = icmp eq i1 %v4_f24e, false
  br i1 %v1_f255, label %bb, label %dec_label_pc_f257

bb:                                               ; preds = %dec_label_pc_f205
  %v2_f255 = call i32 @function_f271()
  br label %dec_label_pc_f257

dec_label_pc_f257:                                ; preds = %bb, %dec_label_pc_f205
  %v0_f25e = phi i32 [ %v2_f255, %bb ], [ %v3_f24e, %dec_label_pc_f205 ]
  ret i32 %v0_f25e

; uselistorder directives
  uselistorder i32 %tmp12, { 2, 1, 0, 3 }
  uselistorder i32 96, { 3, 4, 6, 5, 0, 1, 2 }
  uselistorder i32 ()* @function_10030, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @unknown_17cb0, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_f271() local_unnamed_addr {
dec_label_pc_f271:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE8_M_eraseEPSt13_Rb_tree_nodeISP_E(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f280:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f280 = load i32, i32* %edi.global-to-local, align 4
  %v0_f281 = load i32, i32* %esi.global-to-local, align 4
  %v0_f282 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v1_f29a = icmp eq i32 %arg2, 0
  %v1_f29c = icmp eq i1 %v1_f29a, false
  br i1 %v1_f29c, label %dec_label_pc_f2a2, label %dec_label_pc_f29e

dec_label_pc_f29e:                                ; preds = %dec_label_pc_f280
  %v5_f29e = call i32 @function_f2ca(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_f282, i32 %v0_f281, i32 %v0_f280)
  store i32 %v5_f29e, i32* %eax.global-to-local, align 4
  ret i32 %v5_f29e

dec_label_pc_f2a2:                                ; preds = %dec_label_pc_f280
  %v1_f2a2 = add i32 %arg2, 12
  %v2_f2a2 = inttoptr i32 %v1_f2a2 to i32*
  %v3_f2a2 = load i32, i32* %v2_f2a2, align 4
  store i32 %v3_f2a2, i32* %eax.global-to-local, align 4
  %v2_f2ac = call i32 @unknown_1e500(i32 %arg1, i32 %v3_f2a2)
  store i32 %v2_f2ac, i32* %eax.global-to-local, align 4
  %v1_f2b1 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f2b1 = inttoptr i32 %v1_f2b1 to i32*
  %v3_f2b1 = load i32, i32* %v2_f2b1, align 4
  store i32 %v3_f2b1, i32* %esi.global-to-local, align 4
  %v1_f2b4 = add i32 %arg2, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f2b4 = inttoptr i32 %v1_f2b4 to i8*
  %v3_f2b4 = load i8, i8* %v2_f2b4, align 1
  %v10_f2b4 = icmp eq i8 %v3_f2b4, 0
  br i1 %v10_f2b4, label %dec_label_pc_f2be, label %dec_label_pc_f2ba

dec_label_pc_f2ba:                                ; preds = %dec_label_pc_f2a2
  store i8 0, i8* %v2_f2b4, align 1
  %v3_f2be.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f2be

dec_label_pc_f2be:                                ; preds = %dec_label_pc_f2ba, %dec_label_pc_f2a2
  %v3_f2be = phi i32 [ %v3_f2be.pre, %dec_label_pc_f2ba ], [ %v2_f2ac, %dec_label_pc_f2a2 ]
  ret i32 %v3_f2be

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
}

define i32 @function_f2ca(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f2ca:
  %v3_f2ce = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f2ce = icmp eq i32 %v3_f2ce, 0
  %v1_f2d5 = icmp eq i1 %v4_f2ce, false
  br i1 %v1_f2d5, label %dec_label_pc_f2de, label %dec_label_pc_f2d7

dec_label_pc_f2d7:                                ; preds = %dec_label_pc_f2ca
  ret i32 %v3_f2ce

dec_label_pc_f2de:                                ; preds = %dec_label_pc_f2ca
  ret i32 %v3_f2ce

; uselistorder directives
  uselistorder i32 %v3_f2ce, { 1, 0, 2 }
}

define i32 @_ZN5boost6detail17sp_counted_impl_pINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS3_15connection_bodyISt4pairINS3_15slot_meta_groupENS_8optionalIiEEENS2_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSH_SI_EEEEENS2_5mutexEEEEEEEE7disposeEv(i32 %arg1) {
dec_label_pc_f2f0:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f2f0 = load i32, i32* %edi.global-to-local, align 4
  %v0_f2f1 = load i32, i32* %esi.global-to-local, align 4
  %v0_f2f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f306 = add i32 %arg1, 12
  %v2_f306 = inttoptr i32 %v1_f306 to i32*
  %v3_f306 = load i32, i32* %v2_f306, align 4
  store i32 %v3_f306, i32* %edi.global-to-local, align 4
  %v1_f309 = icmp eq i32 %v3_f306, 0
  br i1 %v1_f309, label %bb, label %dec_label_pc_f30d

bb:                                               ; preds = %dec_label_pc_f2f0
  %v6_f30b = call i32 @function_f360(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_f2f2, i32 %v0_f2f1, i32 %v0_f2f0)
  br label %dec_label_pc_f30d

dec_label_pc_f30d:                                ; preds = %bb, %dec_label_pc_f2f0
  %v1_f30d = add i32 %v3_f306, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f30d = inttoptr i32 %v1_f30d to i32*
  %v3_f30d = load i32, i32* %v2_f30d, align 4
  %v1_f314 = add i32 %v3_f306, 8
  %v2_f31a = call i32 @unknown_1e570(i32 %v1_f314, i32 %v3_f30d)
  %v1_f31f = inttoptr i32 %v3_f306 to i32*
  %v2_f31f = load i32, i32* %v1_f31f, align 4
  store i32 %v2_f31f, i32* @ebx, align 4
  %v12_f321 = icmp eq i32 %v2_f31f, %v3_f306
  %v1_f323 = icmp eq i1 %v12_f321, false
  br i1 %v1_f323, label %dec_label_pc_f32a, label %dec_label_pc_f325

dec_label_pc_f325:                                ; preds = %dec_label_pc_f30d
  %v0_f325 = call i32 @function_f343()
  ret i32 %v0_f325

dec_label_pc_f32a:                                ; preds = %dec_label_pc_f30d
  %v1_f32a = inttoptr i32 %v2_f31f to i32*
  %v2_f32a = load i32, i32* %v1_f32a, align 4
  store i32 %v2_f32a, i32* @esi, align 4
  %v1_f32c = add i32 %v2_f31f, 12
  store i32 %v1_f32c, i32* @eax, align 4
  %v1_f332 = call i32 @function_13cd0(i32 %v1_f32c)
  ret i32 %v1_f332

; uselistorder directives
  uselistorder i32 %v2_f31f, { 2, 1, 0, 3 }
  uselistorder i32 %v3_f306, { 0, 1, 3, 2, 4, 5 }
}

define i32 @function_f343() local_unnamed_addr {
dec_label_pc_f343:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v3_f347 = xor i32 %tmp9, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f347 = icmp eq i32 %v3_f347, 0
  store i32 %v3_f347, i32* @eax, align 4
  %v1_f34e = icmp eq i1 %v4_f347, false
  br i1 %v1_f34e, label %bb, label %dec_label_pc_f350

bb:                                               ; preds = %dec_label_pc_f343
  %v2_f34e = call i32 @function_f374()
  br label %dec_label_pc_f350

dec_label_pc_f350:                                ; preds = %bb, %dec_label_pc_f343
  %v5_f359 = phi i32 [ %v2_f34e, %bb ], [ %v3_f347, %dec_label_pc_f343 ]
  ret i32 %v5_f359
}

define i32 @function_f360(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f360:
  %v3_f364 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f364 = icmp eq i32 %v3_f364, 0
  store i32 %v3_f364, i32* @eax, align 4
  %v1_f36b = icmp eq i1 %v4_f364, false
  br i1 %v1_f36b, label %bb, label %dec_label_pc_f36d

bb:                                               ; preds = %dec_label_pc_f360
  %v2_f36b = call i32 @function_f374()
  br label %dec_label_pc_f36d

dec_label_pc_f36d:                                ; preds = %bb, %dec_label_pc_f360
  %v0_f373 = phi i32 [ %v2_f36b, %bb ], [ %v3_f364, %dec_label_pc_f360 ]
  ret i32 %v0_f373

; uselistorder directives
  uselistorder i32 ()* @function_f374, { 1, 0 }
}

define i32 @function_f374() local_unnamed_addr {
dec_label_pc_f374:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12grouped_listIiSt4lessIiENS_10shared_ptrINS2_15connection_bodyISt4pairINS2_15slot_meta_groupENS_8optionalIiEEENS1_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSG_SH_EEEEENS1_5mutexEEEEEEEEEvPT_(i32* %arg1) local_unnamed_addr {
dec_label_pc_f380:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v0_f380 = load i32, i32* %edi.global-to-local, align 4
  %v0_f381 = load i32, i32* %esi.global-to-local, align 4
  %v0_f382 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %tmp101, i32* %edi.global-to-local, align 4
  %v1_f396 = icmp eq i32* %arg1, null
  br i1 %v1_f396, label %bb, label %dec_label_pc_f39a

bb:                                               ; preds = %dec_label_pc_f380
  %v6_f398 = call i32 @function_f3f0(i32 ptrtoint ([2 x i8]* @2 to i32), i32 %v0_f382, i32 %v0_f381, i32 %v0_f380)
  br label %dec_label_pc_f39a

dec_label_pc_f39a:                                ; preds = %bb, %dec_label_pc_f380
  %v1_f39a = add i32 %tmp101, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f39a = inttoptr i32 %v1_f39a to i32*
  %v3_f39a = load i32, i32* %v2_f39a, align 4
  %v1_f3a1 = add i32 %tmp101, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f3a7 = call i32 @unknown_1e600(i32 %v1_f3a1, i32 %v3_f39a)
  %v2_f3ac = load i32, i32* %arg1, align 4
  store i32 %v2_f3ac, i32* @ebx, align 4
  %v12_f3ae = icmp eq i32 %v2_f3ac, %tmp101
  %v1_f3b0 = icmp eq i1 %v12_f3ae, false
  br i1 %v1_f3b0, label %dec_label_pc_f3ba, label %dec_label_pc_f3b2

dec_label_pc_f3b2:                                ; preds = %dec_label_pc_f39a
  %v0_f3b2 = call i32 @function_f3d3()
  ret i32 %v0_f3b2

dec_label_pc_f3ba:                                ; preds = %dec_label_pc_f39a
  %v1_f3ba = inttoptr i32 %v2_f3ac to i32*
  %v2_f3ba = load i32, i32* %v1_f3ba, align 4
  store i32 %v2_f3ba, i32* %esi.global-to-local, align 4
  %v1_f3bc = add i32 %v2_f3ac, 12
  %v1_f3c2 = call i32 @function_13d60(i32 %v1_f3bc)
  ret i32 %v1_f3c2

; uselistorder directives
  uselistorder i32 %v2_f3ac, { 2, 1, 0, 3 }
  uselistorder i32 %tmp101, { 0, 2, 1, 3 }
}

define i32 @function_f3d3() local_unnamed_addr {
dec_label_pc_f3d3:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %v3_f3d7 = xor i32 %tmp9, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f3d7 = icmp eq i32 %v3_f3d7, 0
  store i32 %v3_f3d7, i32* @eax, align 4
  %v1_f3de = icmp eq i1 %v4_f3d7, false
  br i1 %v1_f3de, label %bb, label %dec_label_pc_f3e0

bb:                                               ; preds = %dec_label_pc_f3d3
  %v2_f3de = call i32 @function_f404()
  br label %dec_label_pc_f3e0

dec_label_pc_f3e0:                                ; preds = %bb, %dec_label_pc_f3d3
  %v5_f3e9 = phi i32 [ %v2_f3de, %bb ], [ %v3_f3d7, %dec_label_pc_f3d3 ]
  ret i32 %v5_f3e9
}

define i32 @function_f3f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f3f0:
  %v3_f3f4 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f3f4 = icmp eq i32 %v3_f3f4, 0
  store i32 %v3_f3f4, i32* @eax, align 4
  %v1_f3fb = icmp eq i1 %v4_f3f4, false
  br i1 %v1_f3fb, label %bb, label %dec_label_pc_f3fd

bb:                                               ; preds = %dec_label_pc_f3f0
  %v2_f3fb = call i32 @function_f404()
  br label %dec_label_pc_f3fd

dec_label_pc_f3fd:                                ; preds = %bb, %dec_label_pc_f3f0
  %v0_f403 = phi i32 [ %v2_f3fb, %bb ], [ %v3_f3f4, %dec_label_pc_f3f0 ]
  ret i32 %v0_f403

; uselistorder directives
  uselistorder i32 ()* @function_f404, { 1, 0 }
}

define i32 @function_f404() local_unnamed_addr {
dec_label_pc_f404:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZN5boost14checked_deleteINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS1_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS1_10connectionES6_S7_EEENS1_5mutexEE16invocation_stateEEEvPT_(i32 %arg1) local_unnamed_addr {
dec_label_pc_f410:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-60 = alloca i8*, align 4
  %v0_f410 = load i32, i32* %ebx.global-to-local, align 4
  %v16_f411 = ptrtoint i8** %stack_var_-60 to i32
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_f424 = icmp eq i32 %arg1, 0
  br i1 %v1_f424, label %dec_label_pc_f458, label %dec_label_pc_f428

dec_label_pc_f428:                                ; preds = %dec_label_pc_f410
  %v1_f428 = add i32 %arg1, 12
  store i32 %v1_f428, i32* @eax, align 4
  %v3_f42b = inttoptr i32 %v1_f428 to i8*
  store i8* %v3_f42b, i8** %stack_var_-60, align 4
  %tmp108 = inttoptr i32 %v1_f428 to i32*
  %v3_f42e = call i32 @function_13df0(i32* %tmp108)
  %v1_f433 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_f433, i32* @eax, align 4
  %v3_f436 = inttoptr i32 %v1_f433 to i8*
  store i8* %v3_f436, i8** %stack_var_-60, align 4
  %tmp109 = inttoptr i32 %v1_f433 to i32*
  %v3_f439 = call i32 @function_13df0(i32* %tmp109)
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_f46a, label %dec_label_pc_f44b

dec_label_pc_f44b:                                ; preds = %dec_label_pc_f428
  store i32 %v0_f410, i32* %ebx.global-to-local, align 4
  %v4_f452 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_f458

dec_label_pc_f458:                                ; preds = %dec_label_pc_f44b, %dec_label_pc_f410
  %v0_f465 = phi i32 [ %v4_f452, %dec_label_pc_f44b ], [ %v16_f411, %dec_label_pc_f410 ]
  %v1_f458 = add i32 %v0_f465, 44
  %v2_f458 = inttoptr i32 %v1_f458 to i32*
  %v3_f458 = load i32, i32* %v2_f458, align 4
  %v3_f45c = xor i32 %v3_f458, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f45c = icmp eq i32 %v3_f45c, 0
  %v1_f463 = icmp eq i1 %v4_f45c, false
  br i1 %v1_f463, label %dec_label_pc_f46a, label %dec_label_pc_f465

dec_label_pc_f465:                                ; preds = %dec_label_pc_f458
  %v1_f465 = add i32 %v0_f465, ptrtoint (i32* @global_var_38.831 to i32)
  %v1_f468 = inttoptr i32 %v1_f465 to i32*
  %v2_f468 = load i32, i32* %v1_f468, align 4
  store i32 %v2_f468, i32* %ebx.global-to-local, align 4
  ret i32 %v3_f45c

dec_label_pc_f46a:                                ; preds = %dec_label_pc_f458, %dec_label_pc_f428
  %v1_f46a = phi i32 [ %v3_f45c, %dec_label_pc_f458 ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_f428 ]
  ret i32 %v1_f46a

; uselistorder directives
  uselistorder i8** %stack_var_-60, { 2, 1, 0 }
  uselistorder i32 44, { 0, 1, 2, 3, 4, 7, 8, 5, 6, 9, 10 }
}

define i32 @function_f476() local_unnamed_addr {
dec_label_pc_f476:
  %eax.global-to-local = alloca i32, align 4
  %v0_f476 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f476
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE10_M_insert_EPKSt18_Rb_tree_node_baseS10_RKSP_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f490:
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* @edx, align 4
  store i32 %arg5, i32* @ebx, align 4
  %v1_f4c0 = icmp eq i32 %arg3, 0
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v1_f4c0, label %bb, label %dec_label_pc_f4d7

bb:                                               ; preds = %dec_label_pc_f490
  %v1_f4c2 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_f4d1 = call i32 @function_f560(i32 %v1_f4c2)
  br label %dec_label_pc_f4d7

dec_label_pc_f4d7:                                ; preds = %bb, %dec_label_pc_f490
  %v2_f4db = phi i32 [ %v3_f4d1, %bb ], [ %arg3, %dec_label_pc_f490 ]
  ret i32 %v2_f4db
}

define i32 @function_f4ff() local_unnamed_addr {
dec_label_pc_f4ff:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f520(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f520:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f520 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f520 = add i32 %v0_f520, -2095307708
  %v2_f520 = inttoptr i32 %v1_f520 to i32*
  %v3_f520 = load i32, i32* %v2_f520, align 4
  %v4_f520 = sub i32 %v3_f520, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_f520, i32* %v2_f520, align 4
  %v0_f526 = load i32, i32* %esi.global-to-local, align 4
  %v1_f526 = add i32 %v0_f526, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_f526, i32* %esi.global-to-local, align 4
  %v0_f527 = load i32, i32* %eax.global-to-local, align 4
  %v2_f527 = load i1, i1* %cf.global-to-local, align 1
  %v3_f527 = zext i1 %v2_f527 to i32
  %v4_f527 = add i32 %v0_f527, zext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32)
  %v5_f527 = add i32 %v4_f527, %v3_f527
  %v25_f527 = urem i32 %v5_f527, 256
  %v27_f527 = and i32 %v0_f527, -256
  %v28_f527 = or i32 %v25_f527, %v27_f527
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_f52d = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_f534 = load i32, i32* %edi.global-to-local, align 4
  %v2_f534 = inttoptr i32 %v1_f534 to i32*
  store i32 %v28_f527, i32* %v2_f534, align 4
  %v0_f536 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_f536, i32* @eax, align 4
  %v1_f538 = icmp eq i1 %v4_f52d, false
  br i1 %v1_f538, label %bb, label %dec_label_pc_f53a

bb:                                               ; preds = %dec_label_pc_f520
  %v2_f538 = call i32 @function_f5a2()
  store i32 %v2_f538, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f53a

dec_label_pc_f53a:                                ; preds = %bb, %dec_label_pc_f520
  %v0_f54d = phi i32 [ %v2_f538, %bb ], [ %v0_f536, %dec_label_pc_f520 ]
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  store i32 %arg4, i32* %edi.global-to-local, align 4
  %v0_f54a = load i32, i32* @esp, align 4
  %v5_f54a = icmp ugt i32 %v0_f54a, -77
  store i1 %v5_f54a, i1* %cf.global-to-local, align 1
  ret i32 %v0_f54d

; uselistorder directives
  uselistorder i32 %v0_f527, { 1, 0 }
}

define i32 @function_f550() local_unnamed_addr {
dec_label_pc_f550:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_f550 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f550 = add i32 %v0_f550, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f550 = inttoptr i32 %v1_f550 to i32*
  %v3_f550 = load i32, i32* %v2_f550, align 4
  store i32 %v3_f550, i32* %ecx.global-to-local, align 4
  %v0_f553 = load i32, i32* @eax, align 4
  %v1_f553 = add i32 %v0_f553, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f553 = inttoptr i32 %v1_f553 to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_f553, align 1
  %v0_f557 = load i32, i32* %ecx.global-to-local, align 4
  %v1_f557 = load i32, i32* @eax, align 4
  %v2_f557 = add i32 %v1_f557, 24
  %v3_f557 = inttoptr i32 %v2_f557 to i32*
  store i32 %v0_f557, i32* %v3_f557, align 4
  %v0_f55a = call i32 @function_f4ff()
  ret i32 %v0_f55a
}

define i32 @function_f560(i32 %arg1) local_unnamed_addr {
dec_label_pc_f560:
  %v0_f560 = load i32, i32* @ebp, align 4
  %v2_f568 = load i32, i32* @ebx, align 4
  store i32 %v2_f568, i32* @eax, align 4
  %v2_f56a = add i32 %v0_f560, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_f56a = inttoptr i32 %v2_f56a to i32*
  %v4_f56a = load i32, i32* %v3_f56a, align 4
  %v15_f56a = icmp eq i32 %v2_f568, %v4_f56a
  br i1 %v15_f56a, label %dec_label_pc_f580, label %dec_label_pc_f572

dec_label_pc_f572:                                ; preds = %dec_label_pc_f560, %dec_label_pc_f597
  %v0_f575 = phi i32 [ %v3_f597, %dec_label_pc_f597 ], [ %v2_f568, %dec_label_pc_f560 ]
  ret i32 %v0_f575

dec_label_pc_f580:                                ; preds = %dec_label_pc_f560
  store i32 0, i32* @edx, align 4
  %v1_f58b = add i32 %v0_f560, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f58b = inttoptr i32 %v1_f58b to i8*
  %v3_f58b = load i8, i8* %v2_f58b, align 1
  %v10_f58b = icmp eq i8 %v3_f58b, 0
  br i1 %v10_f58b, label %bb, label %dec_label_pc_f591

bb:                                               ; preds = %dec_label_pc_f580
  %v1_f58f = call i32 @function_f5ac()
  store i32 %v1_f58f, i32* @eax, align 4
  %v0_f591.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_f591

dec_label_pc_f591:                                ; preds = %bb, %dec_label_pc_f580
  %v0_f591 = phi i32 [ %v0_f591.pre, %bb ], [ %v2_f568, %dec_label_pc_f580 ]
  %v1_f591 = add i32 %v0_f591, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f591 = inttoptr i32 %v1_f591 to i8*
  %v3_f591 = load i8, i8* %v2_f591, align 1
  %v10_f591 = icmp eq i8 %v3_f591, 0
  br i1 %v10_f591, label %bb4, label %dec_label_pc_f597

bb4:                                              ; preds = %dec_label_pc_f591
  %v1_f595 = call i32 @function_f5a7()
  br label %dec_label_pc_f597

dec_label_pc_f597:                                ; preds = %bb4, %dec_label_pc_f591
  %v0_f597 = load i32, i32* @ebp, align 4
  %v1_f597 = add i32 %v0_f597, 24
  %v2_f597 = inttoptr i32 %v1_f597 to i32*
  %v3_f597 = load i32, i32* %v2_f597, align 4
  br label %dec_label_pc_f572

; uselistorder directives
  uselistorder i32 %v2_f568, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_f572, { 1, 0 }
}

define i32 @function_f5a2() local_unnamed_addr {
dec_label_pc_f5a2:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f5a7() local_unnamed_addr {
dec_label_pc_f5a7:
  %v0_f5a7 = load i32, i32* @eax, align 4
  ret i32 %v0_f5a7
}

define i32 @function_f5ac() local_unnamed_addr {
dec_label_pc_f5ac:
  %v0_f5cb = load i32, i32* @eax, align 4
  ret i32 %v0_f5cb
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE16_M_insert_uniqueERKSP_(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f5d0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %tmp137 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 0, i32* @eax, align 4
  store i32 %tmp137, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v1_f5ef = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f5ef = inttoptr i32 %v1_f5ef to i32*
  %v3_f5ef = load i32, i32* %v2_f5ef, align 4
  store i32 %v3_f5ef, i32* %edi.global-to-local, align 4
  %v1_f5f6 = icmp eq i32 %v3_f5ef, 0
  br i1 %v1_f5f6, label %dec_label_pc_f70f, label %dec_label_pc_f5fe

dec_label_pc_f5fe:                                ; preds = %dec_label_pc_f5d0
  %v1_f5fe = inttoptr i32 %arg3 to i32*
  %v2_f5fe = load i32, i32* %v1_f5fe, align 4
  store i32 %v2_f5fe, i32* %ecx.global-to-local, align 4
  store i32 %v2_f5fe, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_f615

dec_label_pc_f608:                                ; preds = %dec_label_pc_f69c, %dec_label_pc_f615
  %v0_f60c = phi i32 [ %v0_f69c, %dec_label_pc_f69c ], [ %v0_f688, %dec_label_pc_f615 ]
  %v0_f608 = phi i32 [ %v6_f6a2, %dec_label_pc_f69c ], [ %v6_f61a, %dec_label_pc_f615 ]
  %v0_f69210 = phi i32 [ %v0_f69f, %dec_label_pc_f69c ], [ %v0_f69211, %dec_label_pc_f615 ]
  %v4_f608 = trunc i32 %v0_f608 to i8
  %v5_f608 = icmp eq i8 %v4_f608, 0
  br i1 %v5_f608, label %dec_label_pc_f626, label %dec_label_pc_f60c

dec_label_pc_f60c:                                ; preds = %dec_label_pc_f608
  %v1_f60c = add i32 %v0_f60c, 8
  %v2_f60c = inttoptr i32 %v1_f60c to i32*
  %v3_f60c = load i32, i32* %v2_f60c, align 4
  store i32 %v3_f60c, i32* @eax, align 4
  %v1_f60f = icmp eq i32 %v3_f60c, 0
  br i1 %v1_f60f, label %dec_label_pc_f62f, label %dec_label_pc_f613

dec_label_pc_f613:                                ; preds = %dec_label_pc_f60c, %dec_label_pc_f626
  %v0_f613 = phi i32 [ %v3_f60c, %dec_label_pc_f60c ], [ %v3_f626, %dec_label_pc_f626 ]
  %v0_f6928 = phi i32 [ %v0_f69210, %dec_label_pc_f60c ], [ %v0_f6929, %dec_label_pc_f626 ]
  %v4_f61a6 = phi i32 [ %v0_f608, %dec_label_pc_f60c ], [ 0, %dec_label_pc_f626 ]
  store i32 %v0_f613, i32* %edi.global-to-local, align 4
  %v0_f618.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_f615

dec_label_pc_f615:                                ; preds = %dec_label_pc_f613, %dec_label_pc_f5fe
  %v0_f688 = phi i32 [ %v0_f613, %dec_label_pc_f613 ], [ %v3_f5ef, %dec_label_pc_f5fe ]
  %v0_f72f31 = phi i32 [ %v0_f613, %dec_label_pc_f613 ], [ 0, %dec_label_pc_f5fe ]
  %v0_f69211 = phi i32 [ %v0_f6928, %dec_label_pc_f613 ], [ %arg3, %dec_label_pc_f5fe ]
  %v4_f61a = phi i32 [ %v4_f61a6, %dec_label_pc_f613 ], [ %v2_f5fe, %dec_label_pc_f5fe ]
  %v0_f621 = phi i32 [ %v0_f618.pre, %dec_label_pc_f613 ], [ %v2_f5fe, %dec_label_pc_f5fe ]
  %v1_f615 = add i32 %v0_f688, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f615 = inttoptr i32 %v1_f615 to i32*
  %v3_f615 = load i32, i32* %v2_f615, align 4
  store i32 %v3_f615, i32* %edx.global-to-local, align 4
  %v2_f618 = sub i32 %v0_f621, %v3_f615
  %v8_f618 = xor i32 %v3_f615, %v0_f621
  %v9_f618 = xor i32 %v2_f618, %v0_f621
  %v10_f618 = and i32 %v9_f618, %v8_f618
  %v11_f618 = icmp slt i32 %v10_f618, 0
  %v13_f618 = icmp slt i32 %v2_f618, 0
  %v2_f61a = icmp ne i1 %v13_f618, %v11_f618
  %v3_f61a = zext i1 %v2_f61a to i32
  %v5_f61a = and i32 %v4_f61a, -256
  %v6_f61a = or i32 %v3_f61a, %v5_f61a
  store i32 %v6_f61a, i32* %ecx.global-to-local, align 4
  %v12_f61d = icmp eq i32 %v0_f621, %v3_f615
  %v1_f61f = icmp eq i1 %v12_f61d, false
  br i1 %v1_f61f, label %dec_label_pc_f608, label %dec_label_pc_f621

dec_label_pc_f621:                                ; preds = %dec_label_pc_f615
  %v10_f621 = icmp eq i32 %v0_f621, 1
  br i1 %v10_f621, label %dec_label_pc_f688, label %dec_label_pc_f626

dec_label_pc_f626:                                ; preds = %dec_label_pc_f608, %dec_label_pc_f621
  %v0_f626 = phi i32 [ %v0_f60c, %dec_label_pc_f608 ], [ %v0_f688, %dec_label_pc_f621 ]
  %v0_f6929 = phi i32 [ %v0_f69210, %dec_label_pc_f608 ], [ %v0_f69211, %dec_label_pc_f621 ]
  %v1_f626 = add i32 %v0_f626, 12
  %v2_f626 = inttoptr i32 %v1_f626 to i32*
  %v3_f626 = load i32, i32* %v2_f626, align 4
  store i32 %v3_f626, i32* @eax, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_f62b = icmp eq i32 %v3_f626, 0
  %v1_f62d = icmp eq i1 %v1_f62b, false
  br i1 %v1_f62d, label %dec_label_pc_f613, label %dec_label_pc_f62f

dec_label_pc_f62f:                                ; preds = %dec_label_pc_f60c, %dec_label_pc_f626
  %v0_f65020 = phi i32 [ %v0_f69210, %dec_label_pc_f60c ], [ %v0_f6929, %dec_label_pc_f626 ]
  %v0_f708 = phi i32 [ %v0_f60c, %dec_label_pc_f60c ], [ %v0_f626, %dec_label_pc_f626 ]
  %v0_f62f = phi i32 [ %v0_f608, %dec_label_pc_f60c ], [ 0, %dec_label_pc_f626 ]
  store i32 %v0_f62f, i32* @eax, align 4
  %v0_f631 = load i32, i32* %ebp.global-to-local, align 4
  store i32 %v0_f631, i32* %ecx.global-to-local, align 4
  %v4_f633 = trunc i32 %v0_f62f to i8
  %v5_f633 = icmp eq i8 %v4_f633, 0
  br i1 %v5_f633, label %dec_label_pc_f708, label %dec_label_pc_f63b

dec_label_pc_f63b:                                ; preds = %dec_label_pc_f70f, %dec_label_pc_f62f
  %v0_f652 = phi i32 [ 0, %dec_label_pc_f70f ], [ %v0_f62f, %dec_label_pc_f62f ]
  %v0_f650 = phi i32 [ %arg3, %dec_label_pc_f70f ], [ %v0_f65020, %dec_label_pc_f62f ]
  %v0_f648 = phi i32 [ %v1_f711, %dec_label_pc_f70f ], [ %v0_f708, %dec_label_pc_f62f ]
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_f63f = add i32 %arg2, 12
  %v3_f63f = inttoptr i32 %v2_f63f to i32*
  %v4_f63f = load i32, i32* %v3_f63f, align 4
  %v15_f63f = icmp eq i32 %v0_f648, %v4_f63f
  br i1 %v15_f63f, label %dec_label_pc_f6e8, label %dec_label_pc_f648

dec_label_pc_f648:                                ; preds = %dec_label_pc_f63b
  %v1_f650 = inttoptr i32 %v0_f650 to i32*
  %v2_f650 = load i32, i32* %v1_f650, align 4
  store i32 %v2_f650, i32* %ecx.global-to-local, align 4
  %v1_f652 = add i32 %v0_f652, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f652 = inttoptr i32 %v1_f652 to i32*
  %v3_f652 = load i32, i32* %v2_f652, align 4
  store i32 %v3_f652, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_f655

dec_label_pc_f655:                                ; preds = %dec_label_pc_f708, %dec_label_pc_f648
  %v0_f6bb26 = phi i32 [ %v0_f708, %dec_label_pc_f708 ], [ %v0_f652, %dec_label_pc_f648 ]
  %v0_f6b5 = phi i32 [ %v0_f65020, %dec_label_pc_f708 ], [ %v0_f650, %dec_label_pc_f648 ]
  %v4_f65b = phi i32 [ %v1_f655.pre, %dec_label_pc_f708 ], [ %v3_f652, %dec_label_pc_f648 ]
  %v0_f6b0 = phi i32 [ %v0_f631, %dec_label_pc_f708 ], [ %v2_f650, %dec_label_pc_f648 ]
  %v12_f655 = icmp eq i32 %v4_f65b, %v0_f6b0
  br i1 %v12_f655, label %dec_label_pc_f6b0, label %dec_label_pc_f659

dec_label_pc_f659:                                ; preds = %dec_label_pc_f655
  %v8_f655 = xor i32 %v0_f6b0, %v4_f65b
  %v2_f659 = sub i32 %v4_f65b, %v0_f6b0
  %v9_f659 = xor i32 %v2_f659, %v4_f65b
  %v10_f659 = and i32 %v9_f659, %v8_f655
  %v11_f659 = icmp slt i32 %v10_f659, 0
  %v13_f659 = icmp slt i32 %v2_f659, 0
  %v2_f65b = icmp ne i1 %v13_f659, %v11_f659
  %v3_f65b = zext i1 %v2_f65b to i32
  %v5_f65b = and i32 %v4_f65b, -256
  %v6_f65b = or i32 %v3_f65b, %v5_f65b
  store i32 %v6_f65b, i32* %edx.global-to-local, align 4
  %v5_f65e = icmp eq i1 %v2_f65b, false
  %v1_f660 = icmp eq i1 %v5_f65e, false
  br i1 %v1_f660, label %dec_label_pc_f6d0, label %dec_label_pc_f662

dec_label_pc_f662:                                ; preds = %dec_label_pc_f6c1, %dec_label_pc_f6b0, %dec_label_pc_f659
  %v0_f662 = phi i32 [ %v0_f6c4, %dec_label_pc_f6c1 ], [ %v0_f6bb26, %dec_label_pc_f6b0 ], [ %v0_f6bb26, %dec_label_pc_f659 ]
  %v1_f662 = load i32, i32* %esi.global-to-local, align 4
  %v2_f662 = inttoptr i32 %v1_f662 to i32*
  store i32 %v0_f662, i32* %v2_f662, align 4
  %v0_f664 = load i32, i32* %esi.global-to-local, align 4
  %v1_f664 = add i32 %v0_f664, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f664 = inttoptr i32 %v1_f664 to i8*
  store i8 0, i8* %v2_f664, align 1
  br label %dec_label_pc_f668

dec_label_pc_f668:                                ; preds = %dec_label_pc_f6e8, %dec_label_pc_f662
  %v0_f668 = load i32, i32* @esp, align 4
  %v1_f668 = add i32 %v0_f668, ptrtoint (i32* @global_var_3c.843 to i32)
  %v2_f668 = inttoptr i32 %v1_f668 to i32*
  %v3_f668 = load i32, i32* %v2_f668, align 4
  %v3_f66c = xor i32 %v3_f668, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f66c = icmp eq i32 %v3_f66c, 0
  store i32 %v3_f66c, i32* %edx.global-to-local, align 4
  %v0_f673 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_f673, i32* %eax.global-to-local, align 4
  %v1_f675 = icmp eq i1 %v4_f66c, false
  br i1 %v1_f675, label %dec_label_pc_f734, label %dec_label_pc_f67b

dec_label_pc_f67b:                                ; preds = %dec_label_pc_f668
  %v1_f67b = add i32 %v0_f668, 76
  %v1_f67e = inttoptr i32 %v1_f67b to i32*
  %v2_f67e = load i32, i32* %v1_f67e, align 4
  store i32 %v2_f67e, i32* %ebx.global-to-local, align 4
  %v3_f67e = add i32 %v0_f668, 80
  %v1_f67f = inttoptr i32 %v3_f67e to i32*
  %v2_f67f = load i32, i32* %v1_f67f, align 4
  store i32 %v2_f67f, i32* %esi.global-to-local, align 4
  %v3_f67f = add i32 %v0_f668, 84
  %v1_f680 = inttoptr i32 %v3_f67f to i32*
  %v2_f680 = load i32, i32* %v1_f680, align 4
  store i32 %v2_f680, i32* %edi.global-to-local, align 4
  %v3_f680 = add i32 %v0_f668, 88
  %v1_f681 = inttoptr i32 %v3_f680 to i32*
  %v2_f681 = load i32, i32* %v1_f681, align 4
  store i32 %v2_f681, i32* %ebp.global-to-local, align 4
  ret i32 %v0_f673

dec_label_pc_f688:                                ; preds = %dec_label_pc_f621
  %v1_f688 = add i32 %v0_f688, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f688 = inttoptr i32 %v1_f688 to i8*
  %v3_f688 = load i8, i8* %v2_f688, align 1
  %v10_f688 = icmp eq i8 %v3_f688, 0
  br i1 %v10_f688, label %bb, label %dec_label_pc_f692

bb:                                               ; preds = %dec_label_pc_f688
  %v1_f68c = call i32 @function_f739()
  store i32 %v1_f68c, i32* %eax.global-to-local, align 4
  %v0_f692.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_f692

dec_label_pc_f692:                                ; preds = %bb, %dec_label_pc_f688
  %v0_f72f30 = phi i32 [ %v1_f68c, %bb ], [ %v0_f72f31, %dec_label_pc_f688 ]
  %v0_f69f = phi i32 [ %v0_f692.pre, %bb ], [ %v0_f69211, %dec_label_pc_f688 ]
  %v1_f692 = add i32 %v0_f69f, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f692 = inttoptr i32 %v1_f692 to i8*
  %v3_f692 = load i8, i8* %v2_f692, align 1
  %v10_f692 = icmp eq i8 %v3_f692, 0
  br i1 %v10_f692, label %dec_label_pc_f734, label %dec_label_pc_f69c

dec_label_pc_f69c:                                ; preds = %dec_label_pc_f692
  %v0_f69c = load i32, i32* %edi.global-to-local, align 4
  %v1_f69c = add i32 %v0_f69c, 24
  %v2_f69c = inttoptr i32 %v1_f69c to i32*
  %v3_f69c = load i32, i32* %v2_f69c, align 4
  store i32 %v3_f69c, i32* %eax.global-to-local, align 4
  %v1_f69f = add i32 %v0_f69f, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f69f = inttoptr i32 %v1_f69f to i32*
  %v3_f69f = load i32, i32* %v2_f69f, align 4
  %v5_f69f = sub i32 %v3_f69f, %v3_f69c
  %v11_f69f = xor i32 %v3_f69f, %v3_f69c
  %v12_f69f = xor i32 %v5_f69f, %v3_f69f
  %v13_f69f = and i32 %v12_f69f, %v11_f69f
  %v14_f69f = icmp slt i32 %v13_f69f, 0
  %v16_f69f = icmp slt i32 %v5_f69f, 0
  %v2_f6a2 = icmp ne i1 %v16_f69f, %v14_f69f
  %v3_f6a2 = zext i1 %v2_f6a2 to i32
  %v4_f6a2 = load i32, i32* %ecx.global-to-local, align 4
  %v5_f6a2 = and i32 %v4_f6a2, -256
  %v6_f6a2 = or i32 %v5_f6a2, %v3_f6a2
  store i32 %v6_f6a2, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_f608

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f655
  %v10_f6b0 = icmp eq i32 %v0_f6b0, 1
  %v1_f6b3 = icmp eq i1 %v10_f6b0, false
  br i1 %v1_f6b3, label %dec_label_pc_f662, label %dec_label_pc_f6b5

dec_label_pc_f6b5:                                ; preds = %dec_label_pc_f6b0
  %v1_f6b5 = add i32 %v0_f6b5, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f6b5 = inttoptr i32 %v1_f6b5 to i8*
  %v3_f6b5 = load i8, i8* %v2_f6b5, align 1
  %v10_f6b5 = icmp eq i8 %v3_f6b5, 0
  br i1 %v10_f6b5, label %bb150, label %dec_label_pc_f6bb

bb150:                                            ; preds = %dec_label_pc_f6b5
  %v1_f6b9 = call i32 @function_f739()
  store i32 %v1_f6b9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_f6bb

dec_label_pc_f6bb:                                ; preds = %bb150, %dec_label_pc_f6b5
  %v0_f6c4 = phi i32 [ %v1_f6b9, %bb150 ], [ %v0_f6bb26, %dec_label_pc_f6b5 ]
  %v1_f6bb = add i32 %v0_f6c4, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f6bb = inttoptr i32 %v1_f6bb to i8*
  %v3_f6bb = load i8, i8* %v2_f6bb, align 1
  %v10_f6bb = icmp eq i8 %v3_f6bb, 0
  br i1 %v10_f6bb, label %dec_label_pc_f734, label %dec_label_pc_f6c1

dec_label_pc_f6c1:                                ; preds = %dec_label_pc_f6bb
  %v0_f6c1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f6c1 = add i32 %v0_f6c1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f6c1 = inttoptr i32 %v1_f6c1 to i32*
  %v3_f6c1 = load i32, i32* %v2_f6c1, align 4
  store i32 %v3_f6c1, i32* %edx.global-to-local, align 4
  %v1_f6c4 = add i32 %v0_f6c4, 24
  %v2_f6c4 = inttoptr i32 %v1_f6c4 to i32*
  %v3_f6c4 = load i32, i32* %v2_f6c4, align 4
  %v5_f6c4 = sub i32 %v3_f6c4, %v3_f6c1
  %v11_f6c4 = xor i32 %v3_f6c4, %v3_f6c1
  %v12_f6c4 = xor i32 %v5_f6c4, %v3_f6c4
  %v13_f6c4 = and i32 %v12_f6c4, %v11_f6c4
  %v14_f6c4 = icmp slt i32 %v13_f6c4, 0
  %v16_f6c4 = icmp slt i32 %v5_f6c4, 0
  %v2_f6c7 = icmp ne i1 %v16_f6c4, %v14_f6c4
  %v3_f6c7 = zext i1 %v2_f6c7 to i32
  %v5_f6c7 = and i32 %v3_f6c1, -256
  %v6_f6c7 = or i32 %v3_f6c7, %v5_f6c7
  store i32 %v6_f6c7, i32* %edx.global-to-local, align 4
  %v5_f6ca = icmp eq i1 %v2_f6c7, false
  br i1 %v5_f6ca, label %dec_label_pc_f662, label %dec_label_pc_f6d0

dec_label_pc_f6d0:                                ; preds = %dec_label_pc_f6c1, %dec_label_pc_f659
  store i32 %arg2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_f6e8

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f63b, %dec_label_pc_f6d0
  %storemerge = ptrtoint i32* %stack_var_-48 to i32
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v3_f6ef = call i32 @unknown_1ea60(i32 %storemerge, i32 %arg2)
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v0_f6fb = load i32, i32* %esi.global-to-local, align 4
  %v1_f6fb = add i32 %v0_f6fb, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f6fb = inttoptr i32 %v1_f6fb to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_f6fb, align 1
  %v0_f6ff = load i32, i32* %eax.global-to-local, align 4
  %v1_f6ff = load i32, i32* %esi.global-to-local, align 4
  %v2_f6ff = inttoptr i32 %v1_f6ff to i32*
  store i32 %v0_f6ff, i32* %v2_f6ff, align 4
  br label %dec_label_pc_f668

dec_label_pc_f708:                                ; preds = %dec_label_pc_f62f
  store i32 %v0_f708, i32* @eax, align 4
  %v1_f655.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_f655

dec_label_pc_f70f:                                ; preds = %dec_label_pc_f5d0
  %v1_f711 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_f711, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_f63b

dec_label_pc_f734:                                ; preds = %dec_label_pc_f692, %dec_label_pc_f6bb, %dec_label_pc_f668
  %v0_f72f = phi i32 [ %v0_f6c4, %dec_label_pc_f6bb ], [ %v0_f673, %dec_label_pc_f668 ], [ %v0_f72f30, %dec_label_pc_f692 ]
  ret i32 %v0_f72f

; uselistorder directives
  uselistorder i32 %v1_f711, { 1, 0 }
  uselistorder i32 %v5_f6c4, { 1, 0 }
  uselistorder i32 %v3_f6c1, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f6c4, { 0, 2, 3, 1 }
  uselistorder i32 %v6_f6a2, { 1, 0 }
  uselistorder i32 %v5_f69f, { 1, 0 }
  uselistorder i32 %v0_f69c, { 1, 0 }
  uselistorder i32 %v0_f69f, { 0, 2, 1 }
  uselistorder i32 %v0_f668, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_f659, { 1, 0 }
  uselistorder i32 %v0_f6b0, { 0, 3, 2, 1 }
  uselistorder i32 %v4_f65b, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v0_f6bb26, { 2, 0, 1 }
  uselistorder i32 %v0_f62f, { 0, 2, 1 }
  uselistorder i32 %v0_f708, { 2, 0, 1 }
  uselistorder i32 %v3_f626, { 1, 2, 0 }
  uselistorder i32 %v6_f61a, { 1, 0 }
  uselistorder i32 %v2_f618, { 1, 0 }
  uselistorder i32 %v0_f688, { 2, 0, 3, 1 }
  uselistorder i32 %v0_f613, { 0, 2, 1 }
  uselistorder i32 %v0_f69210, { 0, 2, 1 }
  uselistorder i32 %v0_f608, { 0, 2, 1 }
  uselistorder i32 %v2_f5fe, { 1, 0, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %edi.global-to-local, { 0, 3, 2, 1, 4 }
  uselistorder i32* %ecx.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 1, 4, 0, 6 }
  uselistorder i32 ()* @function_f739, { 1, 0 }
  uselistorder i32 %arg2, { 1, 5, 0, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_f734, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %dec_label_pc_f62f, { 1, 0 }
  uselistorder label %dec_label_pc_f626, { 1, 0 }
  uselistorder label %dec_label_pc_f613, { 1, 0 }
}

define i32 @function_f739() local_unnamed_addr {
dec_label_pc_f739:
  %v3_f751 = load i32, i32* @eax, align 4
  ret i32 %v3_f751
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorISP_ERKSP_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_f760:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %tmp132 = call i32 @__decompiler_undefined_function_0()
  %tmp136 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* @ebx, align 4
  store i32 %tmp136, i32* %esi.global-to-local, align 4
  %v1_f787 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v12_f78a = icmp eq i32 %v1_f787, %arg3
  store i32 %arg4, i32* @ebp, align 4
  br i1 %v12_f78a, label %dec_label_pc_f840, label %dec_label_pc_f79a

dec_label_pc_f79a:                                ; preds = %dec_label_pc_f760
  %v1_f79a = inttoptr i32 %arg4 to i32*
  %v2_f79a = load i32, i32* %v1_f79a, align 4
  store i32 %v2_f79a, i32* @edx, align 4
  %v1_f79d = add i32 %arg3, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f79d = inttoptr i32 %v1_f79d to i32*
  %v3_f79d = load i32, i32* %v2_f79d, align 4
  store i32 %v3_f79d, i32* @eax, align 4
  %v2_f7a0 = sub i32 %v2_f79a, %v3_f79d
  %v12_f7a0 = icmp eq i32 %v2_f7a0, 0
  br i1 %v12_f7a0, label %dec_label_pc_f830, label %dec_label_pc_f7a8

dec_label_pc_f7a8:                                ; preds = %dec_label_pc_f79a
  %v13_f7a0 = icmp slt i32 %v2_f7a0, 0
  %v9_f7a0 = xor i32 %v2_f7a0, %v2_f79a
  %v8_f7a0 = xor i32 %v3_f79d, %v2_f79a
  %v10_f7a0 = and i32 %v9_f7a0, %v8_f7a0
  %v11_f7a0 = icmp slt i32 %v10_f7a0, 0
  %v2_f7a8 = icmp ne i1 %v13_f7a0, %v11_f7a0
  %v3_f7a8 = zext i1 %v2_f7a8 to i32
  %v4_f7a8 = load i32, i32* %ecx.global-to-local, align 4
  %v5_f7a8 = and i32 %v4_f7a8, -256
  %v6_f7a8 = or i32 %v5_f7a8, %v3_f7a8
  br label %dec_label_pc_f7ab

dec_label_pc_f7ab:                                ; preds = %dec_label_pc_f87c, %dec_label_pc_f7a8
  %v0_f8d9 = phi i32 [ %v0_f87f, %dec_label_pc_f87c ], [ %arg4, %dec_label_pc_f7a8 ]
  %v1_f910 = phi i32 [ %v0_f7cc8, %dec_label_pc_f87c ], [ %v3_f79d, %dec_label_pc_f7a8 ]
  %v1_f8dd = phi i32 [ %v0_f87c, %dec_label_pc_f87c ], [ %arg3, %dec_label_pc_f7a8 ]
  %storemerge3 = phi i32 [ %v6_f882, %dec_label_pc_f87c ], [ %v6_f7a8, %dec_label_pc_f7a8 ]
  store i32 %storemerge3, i32* %ecx.global-to-local, align 4
  %v4_f7ab = trunc i32 %storemerge3 to i8
  %v5_f7ab = icmp eq i8 %v4_f7ab, 0
  br i1 %v5_f7ab, label %dec_label_pc_f910, label %dec_label_pc_f7b3

dec_label_pc_f7b3:                                ; preds = %dec_label_pc_f7ab
  %v0_f7b3 = load i32, i32* %edi.global-to-local, align 4
  %v1_f7b3 = add i32 %v0_f7b3, 12
  %v2_f7b3 = inttoptr i32 %v1_f7b3 to i32*
  %v3_f7b3 = load i32, i32* %v2_f7b3, align 4
  %v15_f7b3 = icmp eq i32 %v3_f7b3, %v1_f8dd
  br i1 %v15_f7b3, label %dec_label_pc_f7ef, label %dec_label_pc_f7bc

dec_label_pc_f7bc:                                ; preds = %dec_label_pc_f7b3
  %v0_f7bf = load i32, i32* @edx, align 4
  %v1_f7cc = add i32 %v1_f910, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f7cc = inttoptr i32 %v1_f7cc to i32*
  %v3_f7cc = load i32, i32* %v2_f7cc, align 4
  store i32 %v3_f7cc, i32* %ecx.global-to-local, align 4
  %v12_f7cf = icmp eq i32 %v3_f7cc, %v0_f7bf
  br i1 %v12_f7cf, label %dec_label_pc_f8d0, label %dec_label_pc_f7d7

dec_label_pc_f7d7:                                ; preds = %dec_label_pc_f7bc
  %v8_f7cf = xor i32 %v3_f7cc, %v0_f7bf
  %v2_f7d7 = sub i32 %v3_f7cc, %v0_f7bf
  %v9_f7d7 = xor i32 %v2_f7d7, %v3_f7cc
  %v10_f7d7 = and i32 %v9_f7d7, %v8_f7cf
  %v11_f7d7 = icmp slt i32 %v10_f7d7, 0
  %v13_f7d7 = icmp slt i32 %v2_f7d7, 0
  %v2_f7d9 = icmp ne i1 %v13_f7d7, %v11_f7d7
  %v3_f7d9 = zext i1 %v2_f7d9 to i32
  %v5_f7d9 = and i32 %v0_f7bf, -256
  %v6_f7d9 = or i32 %v3_f7d9, %v5_f7d9
  br label %dec_label_pc_f7dc

dec_label_pc_f7dc:                                ; preds = %dec_label_pc_f8ed, %dec_label_pc_f7d7
  %v0_f7e0 = phi i32 [ %v0_f8f0, %dec_label_pc_f8ed ], [ %v1_f910, %dec_label_pc_f7d7 ]
  %storemerge = phi i32 [ %v6_f8f3, %dec_label_pc_f8ed ], [ %v6_f7d9, %dec_label_pc_f7d7 ]
  %v4_f7dc = trunc i32 %storemerge to i8
  %v5_f7dc = icmp eq i8 %v4_f7dc, 0
  br i1 %v5_f7dc, label %dec_label_pc_f847, label %dec_label_pc_f7e0

dec_label_pc_f7e0:                                ; preds = %dec_label_pc_f7dc
  %v1_f7e0 = add i32 %v0_f7e0, 12
  %v2_f7e0 = inttoptr i32 %v1_f7e0 to i32*
  %v3_f7e0 = load i32, i32* %v2_f7e0, align 4
  store i32 %v3_f7e0, i32* %ecx.global-to-local, align 4
  %v1_f7e7 = icmp eq i32 %v3_f7e0, 0
  br i1 %v1_f7e7, label %dec_label_pc_f8aa, label %dec_label_pc_f7e0.dec_label_pc_f7ef_crit_edge

dec_label_pc_f7e0.dec_label_pc_f7ef_crit_edge:    ; preds = %dec_label_pc_f7e0
  %v0_f7ef.pre = load i32, i32* @ebx, align 4
  %v0_f7f7.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_f7ef

dec_label_pc_f7ef:                                ; preds = %dec_label_pc_f7e0.dec_label_pc_f7ef_crit_edge, %dec_label_pc_f7b3
  %v0_f7f7 = phi i32 [ %v0_f7f7.pre, %dec_label_pc_f7e0.dec_label_pc_f7ef_crit_edge ], [ %v0_f7b3, %dec_label_pc_f7b3 ]
  %v0_f7ef = phi i32 [ %v0_f7ef.pre, %dec_label_pc_f7e0.dec_label_pc_f7ef_crit_edge ], [ %v1_f8dd, %dec_label_pc_f7b3 ]
  %v0_f7fb = load i32, i32* %esi.global-to-local, align 4
  %v4_f7fe = call i32 @unknown_1ebf0(i32 %v0_f7fb, i32 %v0_f7f7, i32 %v0_f7ef, i32 %v0_f7ef)
  br label %dec_label_pc_f806

dec_label_pc_f806:                                ; preds = %dec_label_pc_f8aa, %dec_label_pc_f847, %dec_label_pc_f835, %dec_label_pc_f7ef
  %v0_f806 = load i32, i32* @esp, align 4
  %v1_f806 = add i32 %v0_f806, ptrtoint (i32* @global_var_3c.843 to i32)
  %v2_f806 = inttoptr i32 %v1_f806 to i32*
  %v3_f806 = load i32, i32* %v2_f806, align 4
  %v3_f80a = xor i32 %v3_f806, ptrtoint ([2 x i8]* @2 to i32)
  %v4_f80a = icmp eq i32 %v3_f80a, 0
  store i32 %v3_f80a, i32* %ecx.global-to-local, align 4
  %v0_f811 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_f811, i32* @eax, align 4
  %v1_f813 = icmp eq i1 %v4_f80a, false
  br i1 %v1_f813, label %bb, label %dec_label_pc_f819

bb:                                               ; preds = %dec_label_pc_f806
  %v2_f813 = call i32 @function_f9d1()
  %v0_f819.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_f819

dec_label_pc_f819:                                ; preds = %bb, %dec_label_pc_f806
  %v0_f82c = phi i32 [ %v2_f813, %bb ], [ %v0_f811, %dec_label_pc_f806 ]
  %v0_f829 = phi i32 [ %v0_f819.pre, %bb ], [ %v0_f806, %dec_label_pc_f806 ]
  %v1_f81d = add i32 %v0_f829, 80
  %v2_f81d = inttoptr i32 %v1_f81d to i32*
  %v3_f81d = load i32, i32* %v2_f81d, align 4
  store i32 %v3_f81d, i32* %esi.global-to-local, align 4
  %v1_f821 = add i32 %v0_f829, ptrtoint (i32* @global_var_54.830 to i32)
  %v2_f821 = inttoptr i32 %v1_f821 to i32*
  %v3_f821 = load i32, i32* %v2_f821, align 4
  store i32 %v3_f821, i32* %edi.global-to-local, align 4
  ret i32 %v0_f82c

dec_label_pc_f830:                                ; preds = %dec_label_pc_f79a
  %v10_f830 = icmp eq i32 %v2_f79a, 1
  br i1 %v10_f830, label %dec_label_pc_f868, label %dec_label_pc_f835

dec_label_pc_f835:                                ; preds = %dec_label_pc_f918.dec_label_pc_f835_crit_edge, %dec_label_pc_f830
  %v1_f835 = phi i32 [ %v1_f835.pre, %dec_label_pc_f918.dec_label_pc_f835_crit_edge ], [ %tmp136, %dec_label_pc_f830 ]
  %v0_f835 = phi i32 [ %v0_f835.pre, %dec_label_pc_f918.dec_label_pc_f835_crit_edge ], [ %arg3, %dec_label_pc_f830 ]
  %v2_f835 = inttoptr i32 %v1_f835 to i32*
  store i32 %v0_f835, i32* %v2_f835, align 4
  br label %dec_label_pc_f806

dec_label_pc_f840:                                ; preds = %dec_label_pc_f760
  %v1_f840 = add i32 %arg2, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f840 = inttoptr i32 %v1_f840 to i32*
  %v3_f840 = load i32, i32* %v2_f840, align 4
  %v1_f843 = icmp eq i32 %v3_f840, 0
  %v1_f845 = icmp eq i1 %v1_f843, false
  br i1 %v1_f845, label %dec_label_pc_f890, label %dec_label_pc_f847

dec_label_pc_f847:                                ; preds = %dec_label_pc_f8d0, %dec_label_pc_f89f, %dec_label_pc_f840, %dec_label_pc_f7dc
  %stack_var_-56.0 = phi i32 [ %tmp132, %dec_label_pc_f89f ], [ %tmp132, %dec_label_pc_f840 ], [ %v0_f7bf, %dec_label_pc_f8d0 ], [ %v0_f7bf, %dec_label_pc_f7dc ]
  %v2_f847 = ptrtoint i32* %stack_var_-52 to i32
  %v0_f852 = load i32, i32* %edi.global-to-local, align 4
  %v2_f856 = call i32 @unknown_1ed30(i32 %v2_f847, i32 %v0_f852)
  %v1_f862 = load i32, i32* %esi.global-to-local, align 4
  %v2_f862 = inttoptr i32 %v1_f862 to i32*
  store i32 %stack_var_-56.0, i32* %v2_f862, align 4
  br label %dec_label_pc_f806

dec_label_pc_f868:                                ; preds = %dec_label_pc_f830
  %v1_f868 = add i32 %arg3, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f868 = inttoptr i32 %v1_f868 to i8*
  %v3_f868 = load i8, i8* %v2_f868, align 1
  %v10_f868 = icmp eq i8 %v3_f868, 0
  br i1 %v10_f868, label %bb149, label %dec_label_pc_f872

bb149:                                            ; preds = %dec_label_pc_f868
  %v3_f86c = call i32 @function_f9fe(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v3_f86c, i32* @eax, align 4
  %v0_f872.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_f872

dec_label_pc_f872:                                ; preds = %bb149, %dec_label_pc_f868
  %v0_f7cc9 = phi i32 [ %v3_f86c, %bb149 ], [ %v3_f79d, %dec_label_pc_f868 ]
  %v0_f872 = phi i32 [ %v0_f872.pre, %bb149 ], [ %arg4, %dec_label_pc_f868 ]
  %v1_f872 = add i32 %v0_f872, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f872 = inttoptr i32 %v1_f872 to i8*
  %v3_f872 = load i8, i8* %v2_f872, align 1
  %v10_f872 = icmp eq i8 %v3_f872, 0
  br i1 %v10_f872, label %bb150, label %dec_label_pc_f87c

bb150:                                            ; preds = %dec_label_pc_f872
  %v1_f876 = call i32 @function_f9f9()
  store i32 %v1_f876, i32* @eax, align 4
  %v0_f87f.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_f87c

dec_label_pc_f87c:                                ; preds = %bb150, %dec_label_pc_f872
  %v0_f7cc8 = phi i32 [ %v1_f876, %bb150 ], [ %v0_f7cc9, %dec_label_pc_f872 ]
  %v0_f87f = phi i32 [ %v0_f87f.pre, %bb150 ], [ %v0_f872, %dec_label_pc_f872 ]
  %v0_f87c = load i32, i32* @ebx, align 4
  %v1_f87c = add i32 %v0_f87c, 24
  %v2_f87c = inttoptr i32 %v1_f87c to i32*
  %v3_f87c = load i32, i32* %v2_f87c, align 4
  store i32 %v3_f87c, i32* %ecx.global-to-local, align 4
  %v1_f87f = add i32 %v0_f87f, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f87f = inttoptr i32 %v1_f87f to i32*
  %v3_f87f = load i32, i32* %v2_f87f, align 4
  %v5_f87f = sub i32 %v3_f87f, %v3_f87c
  %v11_f87f = xor i32 %v3_f87f, %v3_f87c
  %v12_f87f = xor i32 %v5_f87f, %v3_f87f
  %v13_f87f = and i32 %v12_f87f, %v11_f87f
  %v14_f87f = icmp slt i32 %v13_f87f, 0
  %v16_f87f = icmp slt i32 %v5_f87f, 0
  %v2_f882 = icmp ne i1 %v16_f87f, %v14_f87f
  %v3_f882 = zext i1 %v2_f882 to i32
  %v5_f882 = and i32 %v3_f87c, -256
  %v6_f882 = or i32 %v3_f882, %v5_f882
  br label %dec_label_pc_f7ab

dec_label_pc_f890:                                ; preds = %dec_label_pc_f840
  %v1_f890 = add i32 %arg2, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f890 = inttoptr i32 %v1_f890 to i32*
  %v3_f890 = load i32, i32* %v2_f890, align 4
  store i32 %v3_f890, i32* @eax, align 4
  %v1_f893 = add i32 %v3_f890, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f893 = inttoptr i32 %v1_f893 to i32*
  %v3_f893 = load i32, i32* %v2_f893, align 4
  store i32 %v3_f893, i32* @edx, align 4
  %v2_f896 = inttoptr i32 %arg4 to i32*
  %v3_f896 = load i32, i32* %v2_f896, align 4
  %v4_f896 = sub i32 %v3_f893, %v3_f896
  %v10_f896 = xor i32 %v3_f896, %v3_f893
  %v11_f896 = xor i32 %v4_f896, %v3_f893
  %v12_f896 = and i32 %v11_f896, %v10_f896
  %v13_f896 = icmp slt i32 %v12_f896, 0
  %v14_f896 = icmp eq i32 %v4_f896, 0
  %v15_f896 = icmp slt i32 %v4_f896, 0
  br i1 %v14_f896, label %bb151, label %dec_label_pc_f89f

bb151:                                            ; preds = %dec_label_pc_f890
  %v3_f899 = call i32 @function_f998(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_f89f.pre = load i1, i1* @sf, align 1
  %v1_f89f.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_f89f

dec_label_pc_f89f:                                ; preds = %bb151, %dec_label_pc_f890
  %v0_f8aa26 = phi i32 [ %v3_f899, %bb151 ], [ %v3_f890, %dec_label_pc_f890 ]
  %v1_f89f = phi i1 [ %v1_f89f.pre, %bb151 ], [ %v13_f896, %dec_label_pc_f890 ]
  %v0_f89f = phi i1 [ %v0_f89f.pre, %bb151 ], [ %v15_f896, %dec_label_pc_f890 ]
  %v2_f89f = icmp ne i1 %v0_f89f, %v1_f89f
  %v5_f8a2 = icmp eq i1 %v2_f89f, false
  br i1 %v5_f8a2, label %dec_label_pc_f847, label %dec_label_pc_f8aa

dec_label_pc_f8aa:                                ; preds = %dec_label_pc_f89f, %dec_label_pc_f7e0
  %v0_f8aa = phi i32 [ %v0_f8aa26, %dec_label_pc_f89f ], [ %v0_f7e0, %dec_label_pc_f7e0 ]
  %v0_f8b6 = load i32, i32* %edi.global-to-local, align 4
  %v0_f8ba = load i32, i32* %esi.global-to-local, align 4
  %v4_f8bd = call i32 @unknown_1ebf0(i32 %v0_f8ba, i32 %v0_f8b6, i32 0, i32 %v0_f8aa)
  br label %dec_label_pc_f806

dec_label_pc_f8d0:                                ; preds = %dec_label_pc_f7bc
  %v10_f8d0 = icmp eq i32 %v0_f7bf, 1
  %v1_f8d3 = icmp eq i1 %v10_f8d0, false
  br i1 %v1_f8d3, label %dec_label_pc_f847, label %dec_label_pc_f8d9

dec_label_pc_f8d9:                                ; preds = %dec_label_pc_f8d0
  %v1_f8d9 = add i32 %v0_f8d9, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f8d9 = inttoptr i32 %v1_f8d9 to i8*
  %v3_f8d9 = load i8, i8* %v2_f8d9, align 1
  %v10_f8d9 = icmp eq i8 %v3_f8d9, 0
  br i1 %v10_f8d9, label %bb154, label %dec_label_pc_f8e3

bb154:                                            ; preds = %dec_label_pc_f8d9
  %v2_f8dd = call i32 @function_f9fe(i32 %v1_f8dd)
  store i32 %v2_f8dd, i32* @eax, align 4
  br label %dec_label_pc_f8e3

dec_label_pc_f8e3:                                ; preds = %bb154, %dec_label_pc_f8d9
  %v0_f8e3 = phi i32 [ %v2_f8dd, %bb154 ], [ %v1_f910, %dec_label_pc_f8d9 ]
  %v1_f8e3 = add i32 %v0_f8e3, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f8e3 = inttoptr i32 %v1_f8e3 to i8*
  %v3_f8e3 = load i8, i8* %v2_f8e3, align 1
  %v10_f8e3 = icmp eq i8 %v3_f8e3, 0
  br i1 %v10_f8e3, label %bb155, label %dec_label_pc_f8ed

bb155:                                            ; preds = %dec_label_pc_f8e3
  %v1_f8e7 = call i32 @function_f9f9()
  br label %dec_label_pc_f8ed

dec_label_pc_f8ed:                                ; preds = %bb155, %dec_label_pc_f8e3
  %v0_f8f0 = phi i32 [ %v1_f8e7, %bb155 ], [ %v0_f8e3, %dec_label_pc_f8e3 ]
  %v0_f8ed = load i32, i32* @ebp, align 4
  %v1_f8ed = add i32 %v0_f8ed, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f8ed = inttoptr i32 %v1_f8ed to i32*
  %v3_f8ed = load i32, i32* %v2_f8ed, align 4
  %v1_f8f0 = add i32 %v0_f8f0, 24
  %v2_f8f0 = inttoptr i32 %v1_f8f0 to i32*
  %v3_f8f0 = load i32, i32* %v2_f8f0, align 4
  %v5_f8f0 = sub i32 %v3_f8f0, %v3_f8ed
  %v11_f8f0 = xor i32 %v3_f8f0, %v3_f8ed
  %v12_f8f0 = xor i32 %v5_f8f0, %v3_f8f0
  %v13_f8f0 = and i32 %v12_f8f0, %v11_f8f0
  %v14_f8f0 = icmp slt i32 %v13_f8f0, 0
  %v16_f8f0 = icmp slt i32 %v5_f8f0, 0
  %v2_f8f3 = icmp ne i1 %v16_f8f0, %v14_f8f0
  %v3_f8f3 = zext i1 %v2_f8f3 to i32
  %v5_f8f3 = and i32 %v3_f8ed, -256
  %v6_f8f3 = or i32 %v3_f8f3, %v5_f8f3
  br label %dec_label_pc_f7dc

dec_label_pc_f910:                                ; preds = %dec_label_pc_f7ab
  %v0_f910 = load i32, i32* @edx, align 4
  %v12_f910 = icmp eq i32 %v0_f910, %v1_f910
  br i1 %v12_f910, label %bb156, label %dec_label_pc_f918

bb156:                                            ; preds = %dec_label_pc_f910
  %v1_f912 = call i32 @function_f9d6()
  %v1_f918.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %bb156, %dec_label_pc_f910
  %v1_f918 = phi i32 [ %v1_f918.pre, %bb156 ], [ %v0_f910, %dec_label_pc_f910 ]
  %v4_f91a = phi i32 [ %v1_f912, %bb156 ], [ %v1_f910, %dec_label_pc_f910 ]
  %v2_f918 = sub i32 %v4_f91a, %v1_f918
  %v8_f918 = xor i32 %v4_f91a, %v1_f918
  %v9_f918 = xor i32 %v2_f918, %v4_f91a
  %v10_f918 = and i32 %v9_f918, %v8_f918
  %v11_f918 = icmp slt i32 %v10_f918, 0
  %v13_f918 = icmp slt i32 %v2_f918, 0
  %v2_f91a = icmp ne i1 %v13_f918, %v11_f918
  %v3_f91a = zext i1 %v2_f91a to i32
  %v5_f91a = and i32 %v4_f91a, -256
  %v6_f91a = or i32 %v3_f91a, %v5_f91a
  store i32 %v6_f91a, i32* @eax, align 4
  %v5_f91d = icmp eq i1 %v2_f91a, false
  br i1 %v5_f91d, label %dec_label_pc_f918.dec_label_pc_f835_crit_edge, label %dec_label_pc_f925

dec_label_pc_f918.dec_label_pc_f835_crit_edge:    ; preds = %dec_label_pc_f918
  %v0_f835.pre = load i32, i32* @ebx, align 4
  %v1_f835.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_f835

dec_label_pc_f925:                                ; preds = %dec_label_pc_f918
  %v0_f925 = load i32, i32* %edi.global-to-local, align 4
  %v1_f925 = add i32 %v0_f925, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_f925 = inttoptr i32 %v1_f925 to i32*
  %v3_f925 = load i32, i32* %v2_f925, align 4
  %v4_f925 = load i32, i32* @ebx, align 4
  %v15_f925 = icmp eq i32 %v3_f925, %v4_f925
  br i1 %v15_f925, label %bb157, label %dec_label_pc_f92e

bb157:                                            ; preds = %dec_label_pc_f925
  %v1_f928 = call i32 @function_f9c4()
  br label %dec_label_pc_f92e

dec_label_pc_f92e:                                ; preds = %bb157, %dec_label_pc_f925
  %v4_f931 = phi i32 [ %v1_f928, %bb157 ], [ %v6_f91a, %dec_label_pc_f925 ]
  ret i32 %v4_f931

; uselistorder directives
  uselistorder i32 %v2_f918, { 1, 0 }
  uselistorder i32 %v4_f91a, { 2, 0, 1, 3 }
  uselistorder i32 %v0_f910, { 1, 0 }
  uselistorder i32 %v5_f8f0, { 1, 0 }
  uselistorder i32 %v3_f8ed, { 1, 0, 2 }
  uselistorder i32 %v0_f8f0, { 1, 0 }
  uselistorder i32 %v4_f896, { 1, 2, 0 }
  uselistorder i32 %v5_f87f, { 1, 0 }
  uselistorder i32 %v3_f87c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_f87c, { 1, 0 }
  uselistorder i32 %v0_f87f, { 1, 0 }
  uselistorder i32 %v0_f7ef, { 1, 0 }
  uselistorder i32 %v2_f7d7, { 1, 0 }
  uselistorder i32 %v3_f7cc, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_f7bf, { 0, 5, 6, 3, 4, 2, 1 }
  uselistorder i32 %v1_f8dd, { 2, 1, 0 }
  uselistorder i32 %v1_f910, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v3_f79d, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_f79a, { 0, 2, 1, 3, 4 }
  uselistorder i32* %esi.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %ecx.global-to-local, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %arg3, { 3, 1, 2, 4, 0, 5 }
}

define i32 @function_f939() local_unnamed_addr {
dec_label_pc_f939:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f939 = load i32, i32* %ebx.global-to-local, align 4
  %v1_f939 = add i32 %v0_f939, 992224340
  %v2_f939 = inttoptr i32 %v1_f939 to i32*
  %v3_f939 = load i32, i32* %v2_f939, align 4
  %v4_f939 = add i32 %v3_f939, -1
  store i32 %v4_f939, i32* %v2_f939, align 4
  %v0_f940 = load i32, i32* %ebp.global-to-local, align 4
  %v1_f940 = load i32, i32* %esi.global-to-local, align 4
  %v3_f940 = add i32 %v0_f940, ptrtoint (i8* @global_var_f.946 to i32)
  %v4_f940 = add i32 %v3_f940, %v1_f940
  %v5_f940 = inttoptr i32 %v4_f940 to i8*
  %v6_f940 = load i8, i8* %v5_f940, align 1
  %v7_f940 = load i32, i32* %edx.global-to-local, align 4
  %v8_f940 = lshr i32 %v7_f940, ptrtoint (i32* @global_var_8.813 to i32)
  %v9_f940 = trunc i32 %v8_f940 to i8
  %v10_f940 = load i1, i1* %cf.global-to-local, align 1
  %v11_f940 = zext i1 %v10_f940 to i8
  %v12_f940 = add i8 %v9_f940, %v6_f940
  %v13_f940 = add i8 %v12_f940, %v11_f940
  %v31_f940 = icmp ule i8 %v13_f940, %v6_f940
  %v32_f940 = icmp ult i8 %v12_f940, %v6_f940
  %v33_f940 = select i1 %v10_f940, i1 %v31_f940, i1 %v32_f940
  store i1 %v33_f940, i1* %cf.global-to-local, align 1
  store i8 %v13_f940, i8* %v5_f940, align 1
  %v0_f945 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_f945

; uselistorder directives
  uselistorder i8 %v13_f940, { 1, 0 }
  uselistorder i8 %v12_f940, { 1, 0 }
  uselistorder i8 %v6_f940, { 1, 2, 0 }
}

define i32 @function_f948() local_unnamed_addr {
dec_label_pc_f948:
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_f94e = load i32, i32* %ebx.global-to-local, align 4
  %v1_f94e = add i32 %v0_f94e, 12
  %v2_f94e = inttoptr i32 %v1_f94e to i32*
  %v3_f94e = load i32, i32* %v2_f94e, align 4
  %v1_f955 = icmp eq i32 %v3_f94e, 0
  br i1 %v1_f955, label %bb, label %dec_label_pc_f948.dec_label_pc_f959_crit_edge

dec_label_pc_f948.dec_label_pc_f959_crit_edge:    ; preds = %dec_label_pc_f948
  %v0_f959.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f959

bb:                                               ; preds = %dec_label_pc_f948
  %v1_f957 = call i32 @function_f9bb()
  br label %dec_label_pc_f959

dec_label_pc_f959:                                ; preds = %dec_label_pc_f948.dec_label_pc_f959_crit_edge, %bb
  %v0_f959 = phi i32 [ %v0_f959.pre, %dec_label_pc_f948.dec_label_pc_f959_crit_edge ], [ %v1_f957, %bb ]
  %v0_f961 = load i32, i32* %edi.global-to-local, align 4
  %v0_f965 = load i32, i32* %esi.global-to-local, align 4
  %v4_f968 = call i32 @unknown_1ebf0(i32 %v0_f965, i32 %v0_f961, i32 %v0_f959, i32 %v0_f959)
  ret i32 %v4_f968

; uselistorder directives
  uselistorder i32 %v0_f959, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_1ebf0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f959, { 1, 0 }
}

define i32 @function_f978() local_unnamed_addr {
dec_label_pc_f978:
  %ebp.global-to-local = alloca i32, align 4
  %v0_f981 = load i32, i32* @eax, align 4
  %v1_f981 = add i32 %v0_f981, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f981 = inttoptr i32 %v1_f981 to i8*
  %v3_f981 = load i8, i8* %v2_f981, align 1
  %v10_f981 = icmp eq i8 %v3_f981, 0
  br i1 %v10_f981, label %bb, label %dec_label_pc_f987

bb:                                               ; preds = %dec_label_pc_f978
  %v2_f985 = call i32 @function_f9fe(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_f985, i32* @eax, align 4
  br label %dec_label_pc_f987

dec_label_pc_f987:                                ; preds = %bb, %dec_label_pc_f978
  %v0_f98d2 = phi i32 [ %v2_f985, %bb ], [ %v0_f981, %dec_label_pc_f978 ]
  %v0_f987 = load i32, i32* %ebp.global-to-local, align 4
  %v1_f987 = add i32 %v0_f987, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f987 = inttoptr i32 %v1_f987 to i8*
  %v3_f987 = load i8, i8* %v2_f987, align 1
  %v10_f987 = icmp eq i8 %v3_f987, 0
  br i1 %v10_f987, label %bb100, label %dec_label_pc_f98d

bb100:                                            ; preds = %dec_label_pc_f987
  %v1_f98b = call i32 @function_f9f9()
  br label %dec_label_pc_f98d

dec_label_pc_f98d:                                ; preds = %bb100, %dec_label_pc_f987
  %v0_f996 = phi i32 [ %v1_f98b, %bb100 ], [ %v0_f98d2, %dec_label_pc_f987 ]
  ret i32 %v0_f996
}

define i32 @function_f998(i32 %arg1) local_unnamed_addr {
dec_label_pc_f998:
  %v0_f9a1 = load i32, i32* @ebp, align 4
  %v1_f9a1 = add i32 %v0_f9a1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f9a1 = inttoptr i32 %v1_f9a1 to i8*
  %v3_f9a1 = load i8, i8* %v2_f9a1, align 1
  %v10_f9a1 = icmp eq i8 %v3_f9a1, 0
  br i1 %v10_f9a1, label %bb, label %dec_label_pc_f998.dec_label_pc_f9a7_crit_edge

dec_label_pc_f998.dec_label_pc_f9a7_crit_edge:    ; preds = %dec_label_pc_f998
  %v0_f9a7.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f9a7

bb:                                               ; preds = %dec_label_pc_f998
  %v2_f9a5 = call i32 @function_f9fe(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_f9a5, i32* @eax, align 4
  br label %dec_label_pc_f9a7

dec_label_pc_f9a7:                                ; preds = %dec_label_pc_f998.dec_label_pc_f9a7_crit_edge, %bb
  %v0_f9a7 = phi i32 [ %v0_f9a7.pre, %dec_label_pc_f998.dec_label_pc_f9a7_crit_edge ], [ %v2_f9a5, %bb ]
  %v1_f9a7 = add i32 %v0_f9a7, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f9a7 = inttoptr i32 %v1_f9a7 to i8*
  %v3_f9a7 = load i8, i8* %v2_f9a7, align 1
  %v10_f9a7 = icmp eq i8 %v3_f9a7, 0
  br i1 %v10_f9a7, label %bb3, label %dec_label_pc_f9ad

bb3:                                              ; preds = %dec_label_pc_f9a7
  %v1_f9ab = call i32 @function_f9f9()
  br label %dec_label_pc_f9ad

dec_label_pc_f9ad:                                ; preds = %bb3, %dec_label_pc_f9a7
  %v0_f9b6 = phi i32 [ %v1_f9ab, %bb3 ], [ %v0_f9a7, %dec_label_pc_f9a7 ]
  %v0_f9ad = load i32, i32* @ebp, align 4
  %v1_f9ad = add i32 %v0_f9ad, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f9ad = inttoptr i32 %v1_f9ad to i32*
  %v3_f9ad = load i32, i32* %v2_f9ad, align 4
  %v1_f9b0 = add i32 %v0_f9b6, 24
  %v2_f9b0 = inttoptr i32 %v1_f9b0 to i32*
  %v3_f9b0 = load i32, i32* %v2_f9b0, align 4
  %v5_f9b0 = sub i32 %v3_f9b0, %v3_f9ad
  %v11_f9b0 = xor i32 %v3_f9b0, %v3_f9ad
  %v12_f9b0 = xor i32 %v5_f9b0, %v3_f9b0
  %v13_f9b0 = and i32 %v12_f9b0, %v11_f9b0
  %v14_f9b0 = icmp slt i32 %v13_f9b0, 0
  store i1 %v14_f9b0, i1* @of, align 1
  %v16_f9b0 = icmp slt i32 %v5_f9b0, 0
  store i1 %v16_f9b0, i1* @sf, align 1
  %v2_f9b3 = icmp ne i1 %v16_f9b0, %v14_f9b0
  %v3_f9b3 = zext i1 %v2_f9b3 to i32
  %v5_f9b3 = and i32 %v3_f9ad, -256
  %v6_f9b3 = or i32 %v3_f9b3, %v5_f9b3
  store i32 %v6_f9b3, i32* @edx, align 4
  ret i32 %v0_f9b6

; uselistorder directives
  uselistorder i32 %v5_f9b0, { 1, 0 }
  uselistorder i32 %v3_f9ad, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9a7, { 1, 0 }
}

define i32 @function_f9bb() local_unnamed_addr {
dec_label_pc_f9bb:
  %v0_f9bf = load i32, i32* @eax, align 4
  ret i32 %v0_f9bf
}

define i32 @function_f9c4() local_unnamed_addr {
dec_label_pc_f9c4:
  %v0_f9cc = load i32, i32* @eax, align 4
  ret i32 %v0_f9cc
}

define i32 @function_f9d1() local_unnamed_addr {
dec_label_pc_f9d1:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_f9d6() local_unnamed_addr {
dec_label_pc_f9d6:
  %v0_f9df = load i32, i32* @ebp, align 4
  %v1_f9df = add i32 %v0_f9df, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_f9df = inttoptr i32 %v1_f9df to i8*
  %v3_f9df = load i8, i8* %v2_f9df, align 1
  %v10_f9df = icmp eq i8 %v3_f9df, 0
  br i1 %v10_f9df, label %bb, label %dec_label_pc_f9e5

bb:                                               ; preds = %dec_label_pc_f9d6
  %v2_f9e3 = call i32 @function_f9fe(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_f9e3, i32* @eax, align 4
  br label %dec_label_pc_f9e5

dec_label_pc_f9e5:                                ; preds = %bb, %dec_label_pc_f9d6
  %v0_f9e5 = load i32, i32* @ebx, align 4
  %v1_f9e5 = add i32 %v0_f9e5, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_f9e5 = inttoptr i32 %v1_f9e5 to i8*
  %v3_f9e5 = load i8, i8* %v2_f9e5, align 1
  %v10_f9e5 = icmp eq i8 %v3_f9e5, 0
  br i1 %v10_f9e5, label %bb3, label %dec_label_pc_f9e5.dec_label_pc_f9eb_crit_edge

dec_label_pc_f9e5.dec_label_pc_f9eb_crit_edge:    ; preds = %dec_label_pc_f9e5
  %v4_f9f1.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_f9eb

bb3:                                              ; preds = %dec_label_pc_f9e5
  %v1_f9e9 = call i32 @function_f9f9()
  %v0_f9ee.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_f9eb

dec_label_pc_f9eb:                                ; preds = %dec_label_pc_f9e5.dec_label_pc_f9eb_crit_edge, %bb3
  %v4_f9f1 = phi i32 [ %v1_f9e9, %bb3 ], [ %v4_f9f1.pre, %dec_label_pc_f9e5.dec_label_pc_f9eb_crit_edge ]
  %v0_f9ee = phi i32 [ %v0_f9ee.pre, %bb3 ], [ %v0_f9e5, %dec_label_pc_f9e5.dec_label_pc_f9eb_crit_edge ]
  %v0_f9eb = load i32, i32* @ebp, align 4
  %v1_f9eb = add i32 %v0_f9eb, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_f9eb = inttoptr i32 %v1_f9eb to i32*
  %v3_f9eb = load i32, i32* %v2_f9eb, align 4
  %v1_f9ee = add i32 %v0_f9ee, 24
  %v2_f9ee = inttoptr i32 %v1_f9ee to i32*
  %v3_f9ee = load i32, i32* %v2_f9ee, align 4
  %v5_f9ee = sub i32 %v3_f9ee, %v3_f9eb
  %v11_f9ee = xor i32 %v3_f9ee, %v3_f9eb
  %v12_f9ee = xor i32 %v5_f9ee, %v3_f9ee
  %v13_f9ee = and i32 %v12_f9ee, %v11_f9ee
  %v14_f9ee = icmp slt i32 %v13_f9ee, 0
  %v16_f9ee = icmp slt i32 %v5_f9ee, 0
  %v2_f9f1 = icmp ne i1 %v16_f9ee, %v14_f9ee
  %v3_f9f1 = zext i1 %v2_f9f1 to i32
  %v5_f9f1 = and i32 %v4_f9f1, -256
  %v6_f9f1 = or i32 %v3_f9f1, %v5_f9f1
  ret i32 %v6_f9f1

; uselistorder directives
  uselistorder i32 %v5_f9ee, { 1, 0 }
  uselistorder i32 ()* @function_f9f9, { 3, 2, 4, 1, 0 }
  uselistorder i32 (i32)* @function_f9fe, { 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_f9eb, { 1, 0 }
}

define i32 @function_f9f9() local_unnamed_addr {
dec_label_pc_f9f9:
  %v0_f9f9 = load i32, i32* @eax, align 4
  ret i32 %v0_f9f9
}

define i32 @function_f9fe(i32 %arg1) local_unnamed_addr {
dec_label_pc_f9fe:
  %v3_fa16 = load i32, i32* @eax, align 4
  ret i32 %v3_fa16
}

define i32 @_ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE31nolock_cleanup_connections_fromEbRKSt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEj(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fa30:
  %tmp126 = ptrtoint i32* %arg1 to i32
  %stack_var_-124 = alloca i8*, align 4
  store i32 %tmp126, i32* @ebp, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_fa59 = add i32 %tmp126, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fa59 = inttoptr i32 %v1_fa59 to i32*
  %v3_fa59 = load i32, i32* %v2_fa59, align 4
  store i32 %v3_fa59, i32* @eax, align 4
  %v1_fa68 = icmp eq i32 %v3_fa59, 0
  %v1_fa6a = trunc i32 %arg2 to i8
  br i1 %v1_fa68, label %bb, label %dec_label_pc_fa74

bb:                                               ; preds = %dec_label_pc_fa30
  %v2_fa6e = call i32 @function_fffc(i32 %arg4)
  br label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %bb, %dec_label_pc_fa30
  %v0_fa74 = phi i32 [ %v2_fa6e, %bb ], [ %v3_fa59, %dec_label_pc_fa30 ]
  %v1_fa74 = add i32 %v0_fa74, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fa74 = inttoptr i32 %v1_fa74 to i32*
  %v3_fa74 = load i32, i32* %v2_fa74, align 4
  store i32 %v3_fa74, i32* @eax, align 4
  %v10_fa77 = icmp eq i32 %v3_fa74, 1
  %v1_fa7a = icmp eq i1 %v10_fa77, false
  br i1 %v1_fa7a, label %bb134, label %dec_label_pc_fa80

bb134:                                            ; preds = %dec_label_pc_fa74
  %sext3 = mul i32 %arg2, 16777216
  %v3_fa7a = sdiv i32 %sext3, 16777216
  %v4_fa7a = call i32 @function_fffc(i32 %v3_fa7a)
  br label %dec_label_pc_fa80

dec_label_pc_fa80:                                ; preds = %bb134, %dec_label_pc_fa74
  %v0_fa80 = load i32, i32* @ebp, align 4
  %v1_fa80 = inttoptr i32 %v0_fa80 to i32*
  %v2_fa80 = load i32, i32* %v1_fa80, align 4
  store i32 %v2_fa80, i32* @eax, align 4
  %v0_fa83 = load i32, i32* @edx, align 4
  %v1_fa83 = inttoptr i32 %v0_fa83 to i32*
  %v2_fa83 = load i32, i32* %v1_fa83, align 4
  store i32 %v2_fa83, i32* @ebx, align 4
  %v1_fa85 = icmp eq i32 %v2_fa80, 0
  br i1 %v1_fa85, label %bb135, label %dec_label_pc_fa8d

bb135:                                            ; preds = %dec_label_pc_fa80
  %sext2 = mul i32 %arg2, 16777216
  %v2_fa87 = sdiv i32 %sext2, 16777216
  %v3_fa87 = call i32 @function_fff2(i32 %v2_fa87)
  br label %dec_label_pc_fa8d

dec_label_pc_fa8d:                                ; preds = %bb135, %dec_label_pc_fa80
  %v0_fa8d = phi i32 [ %v3_fa87, %bb135 ], [ %v2_fa80, %dec_label_pc_fa80 ]
  %v1_fa8d = inttoptr i32 %v0_fa8d to i32*
  %v2_fa8d = load i32, i32* %v1_fa8d, align 4
  store i32 %v2_fa8d, i32* @eax, align 4
  %v1_fa8f = icmp eq i32 %v2_fa8d, 0
  br i1 %v1_fa8f, label %bb136, label %dec_label_pc_fa97

bb136:                                            ; preds = %dec_label_pc_fa8d
  %sext1 = mul i32 %arg2, 16777216
  %v2_fa91 = sdiv i32 %sext1, 16777216
  %v3_fa91 = call i32 @function_fff7(i32 %v2_fa91)
  store i32 %v3_fa91, i32* @eax, align 4
  br label %dec_label_pc_fa97

dec_label_pc_fa97:                                ; preds = %bb136, %dec_label_pc_fa8d
  %v1_fa97 = phi i32 [ %v3_fa91, %bb136 ], [ %v2_fa8d, %dec_label_pc_fa8d ]
  %v0_fa97 = load i32, i32* @ebx, align 4
  %v12_fa97 = icmp eq i32 %v0_fa97, %v1_fa97
  br i1 %v12_fa97, label %bb137, label %dec_label_pc_fa9f

bb137:                                            ; preds = %dec_label_pc_fa97
  %sext = mul i32 %arg2, 16777216
  %v2_fa99 = sdiv i32 %sext, 16777216
  %v3_fa99 = call i32 @function_fb28(i32 %v2_fa99)
  store i32 %v3_fa99, i32* @eax, align 4
  %v0_faa5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_fa9f

dec_label_pc_fa9f:                                ; preds = %bb137, %dec_label_pc_fa97
  %v0_faa5 = phi i32 [ %v0_faa5.pre, %bb137 ], [ %v0_fa97, %dec_label_pc_fa97 ]
  %v1_faa5 = add i32 %v0_faa5, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_faa5 = inttoptr i32 %v1_faa5 to i32*
  %v3_faa5 = load i32, i32* %v2_faa5, align 4
  store i32 %v3_faa5, i32* @esi, align 4
  %v1_faad = icmp eq i32 %v3_faa5, 0
  br i1 %v1_faad, label %bb138, label %dec_label_pc_fab5

bb138:                                            ; preds = %dec_label_pc_fa9f
  %v1_faa3 = icmp eq i32 %arg4, 0
  %v2_faaf = zext i1 %v1_faa3 to i32
  %v3_faaf = call i32 @function_fbde(i32 %v2_faaf)
  %v0_fac5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_fab5

dec_label_pc_fab5:                                ; preds = %bb138, %dec_label_pc_fa9f
  %v0_fac5 = phi i32 [ %v0_fac5.pre, %bb138 ], [ %v0_faa5, %dec_label_pc_fa9f ]
  %v1_fabd = inttoptr i32 %v3_faa5 to i32*
  %v2_fabd = load i32, i32* %v1_fabd, align 4
  store i32 %v2_fabd, i32* @eax, align 4
  %v3_fabf = inttoptr i32 %v3_faa5 to i8*
  store i8* %v3_fabf, i8** %stack_var_-124, align 4
  %v1_fac5 = add i32 %v0_fac5, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_fac5 = inttoptr i32 %v1_fac5 to i32*
  %v3_fac5 = load i32, i32* %v2_fac5, align 4
  store i32 %v3_fac5, i32* @edi, align 4
  %v10_fac8 = icmp eq i8 %v1_fa6a, 0
  br i1 %v10_fac8, label %bb139, label %dec_label_pc_fad3

bb139:                                            ; preds = %dec_label_pc_fab5
  %v3_facd = call i32 @function_fb80(i32 %v3_faa5)
  br label %dec_label_pc_fad3

dec_label_pc_fad3:                                ; preds = %bb139, %dec_label_pc_fab5
  %v1_fad3 = icmp eq i32 %v3_fac5, 0
  br i1 %v1_fad3, label %bb140, label %dec_label_pc_fadb

bb140:                                            ; preds = %dec_label_pc_fad3
  %v1_fad5 = load i8*, i8** %stack_var_-124, align 4
  %v2_fad5 = ptrtoint i8* %v1_fad5 to i32
  %v3_fad5 = call i32 @function_fdd9(i32 %v2_fad5)
  br label %dec_label_pc_fadb

dec_label_pc_fadb:                                ; preds = %bb140, %dec_label_pc_fad3
  %v1_fadb = add i32 %v3_fac5, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_fadb = inttoptr i32 %v1_fadb to i32*
  %v3_fadb = load i32, i32* %v2_fadb, align 4
  %v2_fade = add i32 %v3_fac5, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_fade = inttoptr i32 %v2_fade to i32*
  %v4_fade = load i32, i32* %v3_fade, align 4
  %v15_fade = icmp eq i32 %v3_fadb, %v4_fade
  br i1 %v15_fade, label %bb141, label %dec_label_pc_fae7

bb141:                                            ; preds = %dec_label_pc_fadb
  %v1_fae1 = call i32 @function_fb88()
  br label %dec_label_pc_fae7

dec_label_pc_fae7:                                ; preds = %bb141, %dec_label_pc_fadb
  %v0_fae7 = phi i32 [ %v1_fae1, %bb141 ], [ %v3_fadb, %dec_label_pc_fadb ]
  %v1_faef = inttoptr i32 %v0_fae7 to i32*
  %v2_faef = load i32, i32* %v1_faef, align 4
  %v2_faf3 = ashr i32 %v2_faef, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_faf6 = xor i32 %v2_faf3, %v2_faef
  store i32 %v2_faf6, i32* @eax, align 4
  %tmp144 = icmp ult i32 %v2_faf6, 20
  br i1 %tmp144, label %bb143, label %dec_label_pc_fb01

bb143:                                            ; preds = %dec_label_pc_fae7
  %v4_fafb = call i32 @function_fc08(i32 %v0_fae7)
  br label %dec_label_pc_fb01

dec_label_pc_fb01:                                ; preds = %bb143, %dec_label_pc_fae7
  %v3_fb19 = phi i32 [ %v4_fafb, %bb143 ], [ %v2_faf6, %dec_label_pc_fae7 ]
  ret i32 %v3_fb19

; uselistorder directives
  uselistorder i32 %v2_faf6, { 1, 0, 2 }
  uselistorder i32 %v0_fae7, { 1, 0 }
  uselistorder i32 %v3_fadb, { 1, 0 }
  uselistorder i32 %v3_fac5, { 1, 0, 2, 3 }
  uselistorder i32 %v3_faa5, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_fa97, { 1, 0 }
  uselistorder i8** %stack_var_-124, { 1, 0 }
  uselistorder i32 16777216, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 (i32)* @function_fffc, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_fb28(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb28:
  %v3_fb2c = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_fb2c = icmp eq i32 %v3_fb2c, 0
  store i32 %v3_fb2c, i32* @eax, align 4
  %v0_fb33 = load i32, i32* @ebx, align 4
  %v1_fb33 = load i32, i32* @ebp, align 4
  %v2_fb33 = add i32 %v1_fb33, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_fb33 = inttoptr i32 %v2_fb33 to i32*
  store i32 %v0_fb33, i32* %v3_fb33, align 4
  %v1_fb36 = icmp eq i1 %v4_fb2c, false
  br i1 %v1_fb36, label %bb, label %dec_label_pc_fb28.dec_label_pc_fb3c_crit_edge

dec_label_pc_fb28.dec_label_pc_fb3c_crit_edge:    ; preds = %dec_label_pc_fb28
  %v0_fb43.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_fb3c

bb:                                               ; preds = %dec_label_pc_fb28
  %v2_fb36 = call i32 @function_10020()
  br label %dec_label_pc_fb3c

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb28.dec_label_pc_fb3c_crit_edge, %bb
  %v0_fb43 = phi i32 [ %v0_fb43.pre, %dec_label_pc_fb28.dec_label_pc_fb3c_crit_edge ], [ %v2_fb36, %bb ]
  ret i32 %v0_fb43

; uselistorder directives
  uselistorder label %dec_label_pc_fb3c, { 1, 0 }
}

define i32 @function_fb5b() local_unnamed_addr {
dec_label_pc_fb5b:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fb63(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb63:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fb7d() local_unnamed_addr {
dec_label_pc_fb7d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_fb80(i32 %arg1) local_unnamed_addr {
dec_label_pc_fb80:
  %v0_fb82 = load i32, i32* @eax, align 4
  ret i32 %v0_fb82
}

define i32 @function_fb88() local_unnamed_addr {
dec_label_pc_fb88:
  %tmp6 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i8* @__decompiler_undefined_function_1()
  %v0_fb88 = load i32, i32* @edi, align 4
  %v1_fb88 = add i32 %v0_fb88, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fb88 = inttoptr i32 %v1_fb88 to i8*
  %v3_fb88 = load i8, i8* %v2_fb88, align 1
  %v4_fb88 = zext i8 %v3_fb88 to i32
  store i32 %v4_fb88, i32* @edi, align 4
  %v2_fb8c = load i32, i32* @esi, align 4
  store i32 %v4_fb88, i32* @edx, align 4
  %v5_fb96 = icmp eq i8 %v3_fb88, 0
  br i1 %v5_fb96, label %bb, label %dec_label_pc_fb9a

bb:                                               ; preds = %dec_label_pc_fb88
  %v2_fb98 = call i32 @function_fc18(i32 %v2_fb8c)
  br label %dec_label_pc_fb9a

dec_label_pc_fb9a:                                ; preds = %bb, %dec_label_pc_fb88
  %v2_fb9c = load i32, i32* @ebp, align 4
  store i32 %v2_fb9c, i32* @eax, align 4
  %v1_fb9f = icmp eq i32 %v2_fb9c, 0
  br i1 %v1_fb9f, label %bb11, label %dec_label_pc_fba7

bb11:                                             ; preds = %dec_label_pc_fb9a
  %v2_fba1 = call i32 @function_fff2(i32 %v2_fb8c)
  %v2_fba7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_fba7

dec_label_pc_fba7:                                ; preds = %bb11, %dec_label_pc_fb9a
  %v2_fba7 = phi i32 [ %v2_fba7.pre, %bb11 ], [ %v2_fb9c, %dec_label_pc_fb9a ]
  store i32 %v2_fba7, i32* @eax, align 4
  %v1_fba9 = icmp eq i32 %v2_fba7, 0
  br i1 %v1_fba9, label %bb12, label %dec_label_pc_fbb1

bb12:                                             ; preds = %dec_label_pc_fba7
  %v2_fbab = call i32 @function_fff7(i32 %v2_fb8c)
  br label %dec_label_pc_fbb1

dec_label_pc_fbb1:                                ; preds = %bb12, %dec_label_pc_fba7
  %v0_fbb1 = phi i32 [ %v2_fbab, %bb12 ], [ %v2_fba7, %dec_label_pc_fba7 ]
  %v1_fbb1 = load i32, i32* @ebx, align 4
  %v12_fbb1 = icmp eq i32 %v0_fbb1, %v1_fbb1
  br i1 %v12_fbb1, label %bb13, label %dec_label_pc_fbb9

bb13:                                             ; preds = %dec_label_pc_fbb1
  %v2_fbb3 = call i32 @function_fb28(i32 %v2_fb8c)
  br label %dec_label_pc_fbb9

dec_label_pc_fbb9:                                ; preds = %bb13, %dec_label_pc_fbb1
  %v0_fbd85 = phi i32 [ %v2_fbb3, %bb13 ], [ %v0_fbb1, %dec_label_pc_fbb1 ]
  %v4_fbb9 = ptrtoint i8* %tmp8 to i32
  %v5_fbb9 = add i32 %v4_fbb9, ptrtoint (i8** @global_var_1.820 to i32)
  %tmp15 = icmp ugt i32 %tmp7, %v5_fbb9
  br i1 %tmp15, label %dec_label_pc_fbd3, label %dec_label_pc_fbc8

dec_label_pc_fbc8:                                ; preds = %dec_label_pc_fbb9
  %v10_fbc8 = icmp eq i8 %tmp6, 0
  br i1 %v10_fbc8, label %bb14, label %dec_label_pc_fbd3

bb14:                                             ; preds = %dec_label_pc_fbc8
  %v3_fbcd = call i32 @function_fb28(i32 %v5_fbb9)
  br label %dec_label_pc_fbd3

dec_label_pc_fbd3:                                ; preds = %dec_label_pc_fbb9, %bb14, %dec_label_pc_fbc8
  %v0_fbd8 = phi i32 [ %v0_fbd85, %dec_label_pc_fbb9 ], [ %v3_fbcd, %bb14 ], [ %v0_fbd85, %dec_label_pc_fbc8 ]
  ret i32 %v0_fbd8

; uselistorder directives
  uselistorder i32 %v5_fbb9, { 1, 0 }
  uselistorder i32 %v0_fbb1, { 1, 0 }
  uselistorder i32 %v2_fba7, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_fb28, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fbd3, { 1, 2, 0 }
}

define i32 @function_fbde(i32 %arg1) local_unnamed_addr {
dec_label_pc_fbde:
  %v3_fbf6 = load i32, i32* @eax, align 4
  ret i32 %v3_fbf6
}

define i32 @function_fc08(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc08:
  %v0_fc08 = load i32, i32* @eax, align 4
  ret i32 %v0_fc08
}

define i32 @function_fc18(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc18:
  %ecx.global-to-local = alloca i32, align 4
  %v0_fc18 = load i32, i32* @ebx, align 4
  %v1_fc18 = add i32 %v0_fc18, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_fc18 = inttoptr i32 %v1_fc18 to i32*
  %v3_fc18 = load i32, i32* %v2_fc18, align 4
  store i32 %v3_fc18, i32* @ecx, align 4
  %v1_fc1b = icmp eq i32 %v3_fc18, 0
  br i1 %v1_fc1b, label %bb, label %dec_label_pc_fc27

bb:                                               ; preds = %dec_label_pc_fc18
  %v2_fc21 = call i32 @function_fdd9(i32 0)
  br label %dec_label_pc_fc27

dec_label_pc_fc27:                                ; preds = %bb, %dec_label_pc_fc18
  %v2_fc2b = load i32, i32* @ebp, align 4
  store i32 %v2_fc2b, i32* @eax, align 4
  %v1_fc2e = add i32 %v3_fc18, ptrtoint (i32* @global_var_44.841 to i32)
  %v1_fc31 = icmp eq i32 %v2_fc2b, 0
  br i1 %v1_fc31, label %bb33, label %dec_label_pc_fc3d

bb33:                                             ; preds = %dec_label_pc_fc27
  %v2_fc37 = call i32 @function_fff2(i32 %v1_fc2e)
  %v2_fc3d.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_fc3d

dec_label_pc_fc3d:                                ; preds = %bb33, %dec_label_pc_fc27
  %v0_fc51 = phi i32 [ %v2_fc3d.pre, %bb33 ], [ %v2_fc2b, %dec_label_pc_fc27 ]
  store i32 %v0_fc51, i32* @eax, align 4
  %v1_fc3f = icmp eq i32 %v0_fc51, 0
  br i1 %v1_fc3f, label %bb34, label %dec_label_pc_fc4b

bb34:                                             ; preds = %dec_label_pc_fc3d
  %v2_fc45 = call i32 @function_fff7(i32 0)
  store i32 %v2_fc45, i32* @eax, align 4
  br label %dec_label_pc_fc4b

dec_label_pc_fc4b:                                ; preds = %bb34, %dec_label_pc_fc3d
  %v0_fc4f = load i32, i32* @ebx, align 4
  %v12_fc4f = icmp eq i32 %v0_fc4f, %v0_fc51
  br i1 %v12_fc4f, label %bb35, label %dec_label_pc_fc5b

bb35:                                             ; preds = %dec_label_pc_fc4b
  %v2_fc55 = call i32 @function_10084(i32 %v0_fc51)
  store i32 %v2_fc55, i32* @eax, align 4
  br label %dec_label_pc_fc5b

dec_label_pc_fc5b:                                ; preds = %bb35, %dec_label_pc_fc4b
  store i32 %v0_fc51, i32* %ecx.global-to-local, align 4
  %v1_fc5f = add i32 %v0_fc51, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_fc5f = inttoptr i32 %v1_fc5f to i32*
  %v3_fc5f = load i32, i32* %v2_fc5f, align 4
  store i32 %v3_fc5f, i32* @esi, align 4
  %v1_fc62 = icmp eq i32 %v3_fc5f, 0
  br i1 %v1_fc62, label %bb36, label %dec_label_pc_fc6a

bb36:                                             ; preds = %dec_label_pc_fc5b
  %v1_fc64 = call i32 @function_10060()
  %v0_fc6e.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_fc6a

dec_label_pc_fc6a:                                ; preds = %bb36, %dec_label_pc_fc5b
  %v0_fc6e = phi i32 [ %v0_fc6e.pre, %bb36 ], [ %v0_fc51, %dec_label_pc_fc5b ]
  %v1_fc6e = add i32 %v0_fc6e, 12
  store i32 %v1_fc6e, i32* %ecx.global-to-local, align 4
  store i32 %v1_fc6e, i32* @edi, align 4
  %v2_fc77 = inttoptr i32 %v1_fc2e to i32*
  %v3_fc77 = load i32, i32* %v2_fc77, align 4
  store i32 %v3_fc77, i32* @edx, align 4
  store i32 %v3_fc5f, i32* @eax, align 4
  br label %dec_label_pc_fc90.outer

dec_label_pc_fc90.outer:                          ; preds = %dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge, %dec_label_pc_fc6a
  %v4_fca512.ph = phi i32 [ %v0_fc9c, %dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge ], [ %v1_fc6e, %dec_label_pc_fc6a ]
  %v1_fc80.ph = phi i32 [ %v0_fc93.pre.pre, %dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge ], [ %v3_fc77, %dec_label_pc_fc6a ]
  %v0_fc89.ph = phi i32 [ %v3_fc9e, %dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge ], [ %v3_fc5f, %dec_label_pc_fc6a ]
  br label %dec_label_pc_fc90

dec_label_pc_fc80:                                ; preds = %dec_label_pc_fc90
  %v8_fc93 = xor i32 %v3_fc90, %v1_fc80.ph
  %v2_fc80 = sub i32 %v3_fc90, %v1_fc80.ph
  %v9_fc80 = xor i32 %v2_fc80, %v3_fc90
  %v10_fc80 = and i32 %v9_fc80, %v8_fc93
  %v11_fc80 = icmp slt i32 %v10_fc80, 0
  %v13_fc80 = icmp slt i32 %v2_fc80, 0
  %v2_fc82 = icmp ne i1 %v13_fc80, %v11_fc80
  %v3_fc82 = zext i1 %v2_fc82 to i32
  %v5_fc82 = and i32 %v3_fc90, -256
  %v6_fc82 = or i32 %v3_fc82, %v5_fc82
  store i32 %v6_fc82, i32* @ecx, align 4
  %v5_fc85 = icmp eq i1 %v2_fc82, false
  br i1 %v5_fc85, label %dec_label_pc_fc9c.loopexit, label %dec_label_pc_fc89

dec_label_pc_fc89:                                ; preds = %dec_label_pc_fc80
  %v1_fc89 = add i32 %v0_fc89, 12
  %v2_fc89 = inttoptr i32 %v1_fc89 to i32*
  %v3_fc89 = load i32, i32* %v2_fc89, align 4
  store i32 %v3_fc89, i32* @eax, align 4
  %v1_fc8c = icmp eq i32 %v3_fc89, 0
  br i1 %v1_fc8c, label %dec_label_pc_fca5.loopexit, label %dec_label_pc_fc90

dec_label_pc_fc90:                                ; preds = %dec_label_pc_fc90.outer, %dec_label_pc_fc89
  %v0_fc89 = phi i32 [ %v3_fc89, %dec_label_pc_fc89 ], [ %v0_fc89.ph, %dec_label_pc_fc90.outer ]
  %v1_fc90 = add i32 %v0_fc89, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_fc90 = inttoptr i32 %v1_fc90 to i32*
  %v3_fc90 = load i32, i32* %v2_fc90, align 4
  store i32 %v3_fc90, i32* @ecx, align 4
  %v12_fc93 = icmp eq i32 %v3_fc90, %v1_fc80.ph
  %v1_fc95 = icmp eq i1 %v12_fc93, false
  br i1 %v1_fc95, label %dec_label_pc_fc80, label %dec_label_pc_fc97

dec_label_pc_fc97:                                ; preds = %dec_label_pc_fc90
  %v10_fc97 = icmp eq i32 %v1_fc80.ph, 1
  br i1 %v10_fc97, label %bb39, label %dec_label_pc_fc9c

bb39:                                             ; preds = %dec_label_pc_fc97
  %v1_fc9a = call i32 @function_fce8()
  br label %dec_label_pc_fc9c

dec_label_pc_fc9c.loopexit:                       ; preds = %dec_label_pc_fc80
  br label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %dec_label_pc_fc9c.loopexit, %bb39, %dec_label_pc_fc97
  %v0_fc9c = phi i32 [ %v1_fc9a, %bb39 ], [ %v0_fc89, %dec_label_pc_fc97 ], [ %v0_fc89, %dec_label_pc_fc9c.loopexit ]
  store i32 %v0_fc9c, i32* @edi, align 4
  %v1_fc9e = add i32 %v0_fc9c, 8
  %v2_fc9e = inttoptr i32 %v1_fc9e to i32*
  %v3_fc9e = load i32, i32* %v2_fc9e, align 4
  store i32 %v3_fc9e, i32* @eax, align 4
  %v1_fca1 = icmp eq i32 %v3_fc9e, 0
  %v1_fca3 = icmp eq i1 %v1_fca1, false
  br i1 %v1_fca3, label %dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge, label %dec_label_pc_fca5

dec_label_pc_fc9c.dec_label_pc_fc90.backedge_crit_edge: ; preds = %dec_label_pc_fc9c
  %v0_fc93.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_fc90.outer

dec_label_pc_fca5.loopexit:                       ; preds = %dec_label_pc_fc89
  br label %dec_label_pc_fca5

dec_label_pc_fca5:                                ; preds = %dec_label_pc_fc9c, %dec_label_pc_fca5.loopexit
  %v4_fca5 = phi i32 [ %v4_fca512.ph, %dec_label_pc_fca5.loopexit ], [ %v0_fc9c, %dec_label_pc_fc9c ]
  %v15_fca5 = icmp eq i32 %v1_fc6e, %v4_fca5
  br i1 %v15_fca5, label %bb40, label %dec_label_pc_fcaf

bb40:                                             ; preds = %dec_label_pc_fca5
  %v1_fca9 = call i32 @function_10060()
  %v0_fcaf.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_fcaf

dec_label_pc_fcaf:                                ; preds = %bb40, %dec_label_pc_fca5
  %v0_fcaf = phi i32 [ %v0_fcaf.pre, %bb40 ], [ %v4_fca5, %dec_label_pc_fca5 ]
  %v1_fcaf = add i32 %v0_fcaf, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_fcaf = inttoptr i32 %v1_fcaf to i32*
  %v3_fcaf = load i32, i32* %v2_fcaf, align 4
  store i32 %v3_fcaf, i32* @eax, align 4
  %v1_fcb2 = load i32, i32* @edx, align 4
  %v2_fcb2 = sub i32 %v3_fcaf, %v1_fcb2
  %v8_fcb2 = xor i32 %v1_fcb2, %v3_fcaf
  %v9_fcb2 = xor i32 %v2_fcb2, %v3_fcaf
  %v10_fcb2 = and i32 %v9_fcb2, %v8_fcb2
  %v11_fcb2 = icmp slt i32 %v10_fcb2, 0
  %v13_fcb2 = icmp slt i32 %v2_fcb2, 0
  %v2_fcb4 = icmp ne i1 %v13_fcb2, %v11_fcb2
  %v3_fcb4 = zext i1 %v2_fcb4 to i32
  %v4_fcb4 = load i32, i32* @ecx, align 4
  %v5_fcb4 = and i32 %v4_fcb4, -256
  %v6_fcb4 = or i32 %v3_fcb4, %v5_fcb4
  store i32 %v6_fcb4, i32* @ecx, align 4
  %v12_fcb7 = icmp eq i32 %v3_fcaf, %v1_fcb2
  br i1 %v12_fcb7, label %bb41, label %dec_label_pc_fcbb

bb41:                                             ; preds = %dec_label_pc_fcaf
  %v1_fcb9 = call i32 @function_fd18()
  store i32 %v1_fcb9, i32* @eax, align 4
  %v0_fcbb.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_fcbb

dec_label_pc_fcbb:                                ; preds = %bb41, %dec_label_pc_fcaf
  %v3_fcdb17 = phi i32 [ %v1_fcb9, %bb41 ], [ %v3_fcaf, %dec_label_pc_fcaf ]
  %v0_fcbb = phi i32 [ %v0_fcbb.pre, %bb41 ], [ %v6_fcb4, %dec_label_pc_fcaf ]
  %v4_fcbb = trunc i32 %v0_fcbb to i8
  %v5_fcbb = icmp eq i8 %v4_fcbb, 0
  br i1 %v5_fcbb, label %bb42, label %dec_label_pc_fcc3

bb42:                                             ; preds = %dec_label_pc_fcbb
  %v1_fcbd = call i32 @function_ff31()
  br label %dec_label_pc_fcc3

dec_label_pc_fcc3:                                ; preds = %bb42, %dec_label_pc_fcbb
  %v3_fcdb = phi i32 [ %v1_fcbd, %bb42 ], [ %v3_fcdb17, %dec_label_pc_fcbb ]
  ret i32 %v3_fcdb

; uselistorder directives
  uselistorder i32 %v2_fcb2, { 1, 0 }
  uselistorder i32 %v3_fcaf, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v4_fca5, { 1, 0 }
  uselistorder i32 %v3_fc9e, { 1, 2, 0 }
  uselistorder i32 %v0_fc9c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_fc90, { 0, 5, 1, 4, 2, 3 }
  uselistorder i32 %v0_fc89, { 0, 1, 3, 2 }
  uselistorder i32 %v2_fc80, { 1, 0 }
  uselistorder i32 %v0_fc51, { 1, 5, 6, 2, 0, 4, 3 }
  uselistorder i32 ()* @function_10060, { 1, 0 }
  uselistorder i32 (i32)* @function_fff7, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_fff2, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_fdd9, { 1, 0 }
  uselistorder label %dec_label_pc_fca5, { 1, 0 }
  uselistorder label %dec_label_pc_fc90, { 1, 0 }
}

define i32 @function_fce8() local_unnamed_addr {
dec_label_pc_fce8:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_fcec = add i32 %tmp, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fcec = inttoptr i32 %v1_fcec to i8*
  %v3_fcec = load i8, i8* %v2_fcec, align 1
  %v10_fcec = icmp eq i8 %v3_fcec, 0
  br i1 %v10_fcec, label %bb, label %dec_label_pc_fce8.dec_label_pc_fcf6_crit_edge

dec_label_pc_fce8.dec_label_pc_fcf6_crit_edge:    ; preds = %dec_label_pc_fce8
  %v0_fcf6.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_fcf6

bb:                                               ; preds = %dec_label_pc_fce8
  %v1_fcf0 = call i32 @function_10025()
  store i32 %v1_fcf0, i32* @eax, align 4
  br label %dec_label_pc_fcf6

dec_label_pc_fcf6:                                ; preds = %dec_label_pc_fce8.dec_label_pc_fcf6_crit_edge, %bb
  %v0_fcf6 = phi i32 [ %v0_fcf6.pre, %dec_label_pc_fce8.dec_label_pc_fcf6_crit_edge ], [ %v1_fcf0, %bb ]
  %v1_fcf6 = add i32 %v0_fcf6, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_fcf6 = inttoptr i32 %v1_fcf6 to i8*
  %v3_fcf6 = load i8, i8* %v2_fcf6, align 1
  %v10_fcf6 = icmp eq i8 %v3_fcf6, 0
  br i1 %v10_fcf6, label %bb3, label %dec_label_pc_fd00

bb3:                                              ; preds = %dec_label_pc_fcf6
  %v1_fcfa = call i32 @function_10049()
  br label %dec_label_pc_fd00

dec_label_pc_fd00:                                ; preds = %bb3, %dec_label_pc_fcf6
  %v0_fd0d = phi i32 [ %v1_fcfa, %bb3 ], [ %v0_fcf6, %dec_label_pc_fcf6 ]
  %v1_fd04 = add i32 %tmp, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_fd04 = inttoptr i32 %v1_fd04 to i32*
  %v3_fd04 = load i32, i32* %v2_fd04, align 4
  %v1_fd07 = add i32 %v0_fd0d, 24
  %v2_fd07 = inttoptr i32 %v1_fd07 to i32*
  %v3_fd07 = load i32, i32* %v2_fd07, align 4
  %v5_fd07 = sub i32 %v3_fd07, %v3_fd04
  %v11_fd07 = xor i32 %v3_fd07, %v3_fd04
  %v12_fd07 = xor i32 %v5_fd07, %v3_fd07
  %v13_fd07 = and i32 %v12_fd07, %v11_fd07
  %v14_fd07 = icmp slt i32 %v13_fd07, 0
  %v16_fd07 = icmp slt i32 %v5_fd07, 0
  %v2_fd0a = icmp ne i1 %v16_fd07, %v14_fd07
  %v3_fd0a = zext i1 %v2_fd0a to i32
  %v5_fd0a = and i32 %v3_fd04, -256
  %v6_fd0a = or i32 %v3_fd0a, %v5_fd0a
  store i32 %v6_fd0a, i32* @ecx, align 4
  ret i32 %v0_fd0d

; uselistorder directives
  uselistorder i32 %v5_fd07, { 1, 0 }
  uselistorder i32 %v3_fd04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fcf6, { 1, 0 }
}

define i32 @function_fd18() local_unnamed_addr {
dec_label_pc_fd18:
  %v0_fd18 = load i32, i32* @edx, align 4
  %v10_fd18 = icmp eq i32 %v0_fd18, 1
  br i1 %v10_fd18, label %bb, label %dec_label_pc_fd18.dec_label_pc_fd21_crit_edge

dec_label_pc_fd18.dec_label_pc_fd21_crit_edge:    ; preds = %dec_label_pc_fd18
  %v0_fd21.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_fd21

bb:                                               ; preds = %dec_label_pc_fd18
  %v1_fd1b = call i32 @function_fe08()
  store i32 %v1_fd1b, i32* @eax, align 4
  br label %dec_label_pc_fd21

dec_label_pc_fd21:                                ; preds = %dec_label_pc_fd18.dec_label_pc_fd21_crit_edge, %bb
  %v0_fd21 = phi i32 [ %v0_fd21.pre, %dec_label_pc_fd18.dec_label_pc_fd21_crit_edge ], [ %v1_fd1b, %bb ]
  %v10_fd21 = icmp eq i32 %v0_fd21, 1
  br i1 %v10_fd21, label %bb7, label %dec_label_pc_fd26

bb7:                                              ; preds = %dec_label_pc_fd21
  %v1_fd24 = call i32 @function_fd73()
  br label %dec_label_pc_fd26

dec_label_pc_fd26:                                ; preds = %bb7, %dec_label_pc_fd21
  %v3_fd2d4 = phi i32 [ %v1_fd24, %bb7 ], [ %v0_fd21, %dec_label_pc_fd21 ]
  %v0_fd26 = load i32, i32* @ebx, align 4
  %v1_fd26 = load i32, i32* @edi, align 4
  %v2_fd26 = add i32 %v1_fd26, 28
  %v3_fd26 = inttoptr i32 %v2_fd26 to i32*
  %v4_fd26 = load i32, i32* %v3_fd26, align 4
  %v15_fd26 = icmp eq i32 %v0_fd26, %v4_fd26
  br i1 %v15_fd26, label %bb8, label %dec_label_pc_fd2b

bb8:                                              ; preds = %dec_label_pc_fd26
  %v1_fd29 = call i32 @function_fda2()
  br label %dec_label_pc_fd2b

dec_label_pc_fd2b:                                ; preds = %bb8, %dec_label_pc_fd26
  %v3_fd2d = phi i32 [ %v1_fd29, %bb8 ], [ %v3_fd2d4, %dec_label_pc_fd26 ]
  ret i32 %v3_fd2d

; uselistorder directives
  uselistorder i32 %v0_fd21, { 1, 0 }
  uselistorder label %dec_label_pc_fd21, { 1, 0 }
}

define i32 @function_fd4a() local_unnamed_addr {
dec_label_pc_fd4a:
  %eax.global-to-local = alloca i32, align 4
  %v0_fd4a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_fd4a
}

define i32 @function_fd4f(i32 %arg1) local_unnamed_addr {
dec_label_pc_fd4f:
  %edx.global-to-local = alloca i32, align 4
  %v0_fd4f = load i32, i32* %edx.global-to-local, align 4
  %v2_fd4f = icmp slt i32 %v0_fd4f, 0
  br i1 %v2_fd4f, label %bb, label %dec_label_pc_fd57

bb:                                               ; preds = %dec_label_pc_fd4f
  %v1_fd51 = call i32 @function_ff5c()
  br label %dec_label_pc_fd57

dec_label_pc_fd57:                                ; preds = %bb, %dec_label_pc_fd4f
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_fd5b = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fd5b = inttoptr i32 %v1_fd5b to i32*
  %v3_fd5b = load i32, i32* %v2_fd5b, align 4
  store i32 %v3_fd5b, i32* @eax, align 4
  %v1_fd5e = icmp eq i32 %v3_fd5b, 0
  br i1 %v1_fd5e, label %bb99, label %dec_label_pc_fd66

bb99:                                             ; preds = %dec_label_pc_fd57
  %v1_fd60 = call i32 @function_ff6d()
  store i32 %v1_fd60, i32* @eax, align 4
  br label %dec_label_pc_fd66

dec_label_pc_fd66:                                ; preds = %bb99, %dec_label_pc_fd57
  %v0_fd66 = phi i32 [ %v1_fd60, %bb99 ], [ %v3_fd5b, %dec_label_pc_fd57 ]
  %v1_fd66 = inttoptr i32 %v0_fd66 to i32*
  %v2_fd66 = load i32, i32* %v1_fd66, align 4
  store i32 %v2_fd66, i32* %edx.global-to-local, align 4
  %v1_fd6e = call i32 @function_fb63(i32 %v0_fd66)
  ret i32 %v1_fd6e

; uselistorder directives
  uselistorder i32 %v0_fd66, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_fd73() local_unnamed_addr {
dec_label_pc_fd73:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_fd73 = load i32, i32* @edi, align 4
  %v1_fd73 = add i32 %v0_fd73, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_fd73 = inttoptr i32 %v1_fd73 to i8*
  %v3_fd73 = load i8, i8* %v2_fd73, align 1
  %v10_fd73 = icmp eq i8 %v3_fd73, 0
  br i1 %v10_fd73, label %bb, label %dec_label_pc_fd7d

bb:                                               ; preds = %dec_label_pc_fd73
  %v1_fd77 = call i32 @function_10025()
  br label %dec_label_pc_fd7d

dec_label_pc_fd7d:                                ; preds = %bb, %dec_label_pc_fd73
  %v1_fd81 = add i32 %tmp, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_fd81 = inttoptr i32 %v1_fd81 to i8*
  %v3_fd81 = load i8, i8* %v2_fd81, align 1
  %v10_fd81 = icmp eq i8 %v3_fd81, 0
  br i1 %v10_fd81, label %bb1, label %dec_label_pc_fd8b

bb1:                                              ; preds = %dec_label_pc_fd7d
  %v1_fd85 = call i32 @function_10049()
  br label %dec_label_pc_fd8b

dec_label_pc_fd8b:                                ; preds = %bb1, %dec_label_pc_fd7d
  %v0_fd8f = load i32, i32* @edi, align 4
  %v1_fd8f = add i32 %v0_fd8f, 24
  %v2_fd8f = inttoptr i32 %v1_fd8f to i32*
  %v3_fd8f = load i32, i32* %v2_fd8f, align 4
  %v1_fd92 = add i32 %tmp, 76
  %v2_fd92 = inttoptr i32 %v1_fd92 to i32*
  %v3_fd92 = load i32, i32* %v2_fd92, align 4
  %v5_fd92 = sub i32 %v3_fd92, %v3_fd8f
  %v11_fd92 = xor i32 %v3_fd92, %v3_fd8f
  %v12_fd92 = xor i32 %v5_fd92, %v3_fd92
  %v13_fd92 = and i32 %v12_fd92, %v11_fd92
  %v14_fd92 = icmp slt i32 %v13_fd92, 0
  %v16_fd92 = icmp slt i32 %v5_fd92, 0
  %v2_fd95 = icmp ne i1 %v16_fd92, %v14_fd92
  %v3_fd95 = zext i1 %v2_fd95 to i32
  %v5_fd95 = and i32 %v3_fd8f, -256
  %v6_fd95 = or i32 %v3_fd95, %v5_fd95
  ret i32 %v6_fd95

; uselistorder directives
  uselistorder i32 %v5_fd92, { 1, 0 }
  uselistorder i32 %v3_fd8f, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_fda2() local_unnamed_addr {
dec_label_pc_fda2:
  %v2_fda6 = load i32, i32* @ebx, align 4
  store i32 %v2_fda6, i32* @ecx, align 4
  %v0_fdb0 = load i32, i32* @esi, align 4
  store i32 %v0_fdb0, i32* @eax, align 4
  br label %dec_label_pc_fdca

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fdca
  %v16_fdca = icmp slt i32 %v5_fdca, 0
  %v12_fdca = xor i32 %v5_fdca, %v0_fdca
  %v11_fdca = xor i32 %v4_fdca, %v0_fdca
  %v13_fdca = and i32 %v12_fdca, %v11_fdca
  %v14_fdca = icmp slt i32 %v13_fdca, 0
  %v2_fdb8 = icmp ne i1 %v16_fdca, %v14_fdca
  %v3_fdb8 = zext i1 %v2_fdb8 to i32
  %v4_fdb8 = load i32, i32* @ecx, align 4
  %v5_fdb8 = and i32 %v4_fdb8, -256
  %v6_fdb8 = or i32 %v5_fdb8, %v3_fdb8
  store i32 %v6_fdb8, i32* @ecx, align 4
  %v5_fdbb = icmp eq i1 %v2_fdb8, false
  br i1 %v5_fdbb, label %dec_label_pc_fdd4, label %dec_label_pc_fdbf

dec_label_pc_fdbf:                                ; preds = %dec_label_pc_fdb8
  %v1_fdc3 = add i32 %v0_fdc3, 8
  br label %dec_label_pc_fdc6

dec_label_pc_fdc6:                                ; preds = %dec_label_pc_fdbf, %dec_label_pc_fdd4
  %storemerge.in.in = phi i32 [ %v1_fdc3, %dec_label_pc_fdbf ], [ %v1_fdd4, %dec_label_pc_fdd4 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @eax, align 4
  %v1_fdc6 = icmp eq i32 %storemerge, 0
  br i1 %v1_fdc6, label %bb, label %dec_label_pc_fdca

bb:                                               ; preds = %dec_label_pc_fdc6
  %v1_fdc8 = call i32 @function_fe38()
  store i32 %v1_fdc8, i32* @eax, align 4
  br label %dec_label_pc_fdca

dec_label_pc_fdca:                                ; preds = %bb, %dec_label_pc_fdc6, %dec_label_pc_fda2
  %v0_fdc3 = phi i32 [ %v0_fdb0, %dec_label_pc_fda2 ], [ %storemerge, %dec_label_pc_fdc6 ], [ %v1_fdc8, %bb ]
  %v0_fdca = load i32, i32* @edx, align 4
  %v2_fdca = add i32 %v0_fdc3, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_fdca = inttoptr i32 %v2_fdca to i32*
  %v4_fdca = load i32, i32* %v3_fdca, align 4
  %v5_fdca = sub i32 %v0_fdca, %v4_fdca
  %v15_fdca = icmp eq i32 %v5_fdca, 0
  %v1_fdcd = icmp eq i1 %v15_fdca, false
  br i1 %v1_fdcd, label %dec_label_pc_fdb8, label %dec_label_pc_fdcf

dec_label_pc_fdcf:                                ; preds = %dec_label_pc_fdca
  %v10_fdcf = icmp eq i32 %v0_fdca, 1
  br i1 %v10_fdcf, label %bb8, label %dec_label_pc_fdd4

bb8:                                              ; preds = %dec_label_pc_fdcf
  %v1_fdd2 = call i32 @function_fde0()
  br label %dec_label_pc_fdd4

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fdb8, %bb8, %dec_label_pc_fdcf
  %v0_fdd4 = phi i32 [ %v0_fdc3, %dec_label_pc_fdb8 ], [ %v1_fdd2, %bb8 ], [ %v0_fdc3, %dec_label_pc_fdcf ]
  %v1_fdd4 = add i32 %v0_fdd4, 12
  br label %dec_label_pc_fdc6

; uselistorder directives
  uselistorder i32 %v5_fdca, { 2, 1, 0 }
  uselistorder i32 %v4_fdca, { 1, 0 }
  uselistorder i32 %v0_fdca, { 0, 3, 1, 2 }
  uselistorder i32 %v0_fdc3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_fdd4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fdc6, { 1, 0 }
}

define i32 @function_fdd9(i32 %arg1) local_unnamed_addr {
dec_label_pc_fdd9:
  %v0_fdd9 = call i32 @function_133ce()
  ret i32 %v0_fdd9
}

define i32 @function_fde0() local_unnamed_addr {
dec_label_pc_fde0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_fde0 = load i32, i32* @eax, align 4
  %v1_fde0 = add i32 %v0_fde0, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_fde0 = inttoptr i32 %v1_fde0 to i8*
  %v3_fde0 = load i8, i8* %v2_fde0, align 1
  %v10_fde0 = icmp eq i8 %v3_fde0, 0
  br i1 %v10_fde0, label %bb, label %dec_label_pc_fdea

bb:                                               ; preds = %dec_label_pc_fde0
  %v1_fde4 = call i32 @function_10025()
  store i32 %v1_fde4, i32* @eax, align 4
  br label %dec_label_pc_fdea

dec_label_pc_fdea:                                ; preds = %bb, %dec_label_pc_fde0
  %v0_fdfc2 = phi i32 [ %v1_fde4, %bb ], [ %v0_fde0, %dec_label_pc_fde0 ]
  %v1_fdee = add i32 %tmp, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fdee = inttoptr i32 %v1_fdee to i8*
  %v3_fdee = load i8, i8* %v2_fdee, align 1
  %v10_fdee = icmp eq i8 %v3_fdee, 0
  br i1 %v10_fdee, label %bb3, label %dec_label_pc_fdf8

bb3:                                              ; preds = %dec_label_pc_fdea
  %v1_fdf2 = call i32 @function_10049()
  br label %dec_label_pc_fdf8

dec_label_pc_fdf8:                                ; preds = %bb3, %dec_label_pc_fdea
  %v0_fe05 = phi i32 [ %v1_fdf2, %bb3 ], [ %v0_fdfc2, %dec_label_pc_fdea ]
  %v1_fdfc = add i32 %v0_fe05, 24
  %v2_fdfc = inttoptr i32 %v1_fdfc to i32*
  %v3_fdfc = load i32, i32* %v2_fdfc, align 4
  %v1_fdff = add i32 %tmp, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_fdff = inttoptr i32 %v1_fdff to i32*
  %v3_fdff = load i32, i32* %v2_fdff, align 4
  %v5_fdff = sub i32 %v3_fdff, %v3_fdfc
  %v11_fdff = xor i32 %v3_fdff, %v3_fdfc
  %v12_fdff = xor i32 %v5_fdff, %v3_fdff
  %v13_fdff = and i32 %v12_fdff, %v11_fdff
  %v14_fdff = icmp slt i32 %v13_fdff, 0
  %v16_fdff = icmp slt i32 %v5_fdff, 0
  %v2_fe02 = icmp ne i1 %v16_fdff, %v14_fdff
  %v3_fe02 = zext i1 %v2_fe02 to i32
  %v5_fe02 = and i32 %v3_fdfc, -256
  %v6_fe02 = or i32 %v3_fe02, %v5_fe02
  store i32 %v6_fe02, i32* @ecx, align 4
  ret i32 %v0_fe05

; uselistorder directives
  uselistorder i32 %v5_fdff, { 1, 0 }
  uselistorder i32 %v3_fdfc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @function_fe08() local_unnamed_addr {
dec_label_pc_fe08:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_fe0c = add i32 %tmp, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_fe0c = inttoptr i32 %v1_fe0c to i8*
  %v3_fe0c = load i8, i8* %v2_fe0c, align 1
  %v10_fe0c = icmp eq i8 %v3_fe0c, 0
  br i1 %v10_fe0c, label %bb, label %dec_label_pc_fe16

bb:                                               ; preds = %dec_label_pc_fe08
  %v1_fe10 = call i32 @function_10025()
  store i32 %v1_fe10, i32* @eax, align 4
  br label %dec_label_pc_fe16

dec_label_pc_fe16:                                ; preds = %bb, %dec_label_pc_fe08
  %v0_fe16 = load i32, i32* @edi, align 4
  %v1_fe16 = add i32 %v0_fe16, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_fe16 = inttoptr i32 %v1_fe16 to i8*
  %v3_fe16 = load i8, i8* %v2_fe16, align 1
  %v10_fe16 = icmp eq i8 %v3_fe16, 0
  br i1 %v10_fe16, label %bb3, label %dec_label_pc_fe16.dec_label_pc_fe20_crit_edge

dec_label_pc_fe16.dec_label_pc_fe20_crit_edge:    ; preds = %dec_label_pc_fe16
  %v0_fe2d.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_fe20

bb3:                                              ; preds = %dec_label_pc_fe16
  %v1_fe1a = call i32 @function_10049()
  %v0_fe27.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe16.dec_label_pc_fe20_crit_edge, %bb3
  %v0_fe2d = phi i32 [ %v1_fe1a, %bb3 ], [ %v0_fe2d.pre, %dec_label_pc_fe16.dec_label_pc_fe20_crit_edge ]
  %v0_fe27 = phi i32 [ %v0_fe27.pre, %bb3 ], [ %v0_fe16, %dec_label_pc_fe16.dec_label_pc_fe20_crit_edge ]
  %v1_fe24 = add i32 %tmp, 76
  %v2_fe24 = inttoptr i32 %v1_fe24 to i32*
  %v3_fe24 = load i32, i32* %v2_fe24, align 4
  %v1_fe27 = add i32 %v0_fe27, 24
  %v2_fe27 = inttoptr i32 %v1_fe27 to i32*
  %v3_fe27 = load i32, i32* %v2_fe27, align 4
  %v5_fe27 = sub i32 %v3_fe27, %v3_fe24
  %v11_fe27 = xor i32 %v3_fe27, %v3_fe24
  %v12_fe27 = xor i32 %v5_fe27, %v3_fe27
  %v13_fe27 = and i32 %v12_fe27, %v11_fe27
  %v14_fe27 = icmp slt i32 %v13_fe27, 0
  %v16_fe27 = icmp slt i32 %v5_fe27, 0
  %v2_fe2a = icmp ne i1 %v16_fe27, %v14_fe27
  %v3_fe2a = zext i1 %v2_fe2a to i32
  %v5_fe2a = and i32 %v3_fe24, -256
  %v6_fe2a = or i32 %v3_fe2a, %v5_fe2a
  store i32 %v6_fe2a, i32* @ecx, align 4
  ret i32 %v0_fe2d

; uselistorder directives
  uselistorder i32 %v5_fe27, { 1, 0 }
  uselistorder i32 %v3_fe24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fe20, { 1, 0 }
}

define i32 @function_fe38() local_unnamed_addr {
dec_label_pc_fe38:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_60 = alloca i32, align 4
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %stack_var_76 = alloca i32, align 4
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i32 @__decompiler_undefined_function_0()
  %tmp31 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %v15_fe3c = icmp eq i32 %tmp33, %tmp34
  br i1 %v15_fe3c, label %dec_label_pc_fe51, label %dec_label_pc_fe46

dec_label_pc_fe46:                                ; preds = %dec_label_pc_fe38
  %v1_fe4a = add i32 %tmp33, 28
  %v2_fe4a = inttoptr i32 %v1_fe4a to i32*
  %v3_fe4a = load i32, i32* %v2_fe4a, align 4
  br label %dec_label_pc_fe51

dec_label_pc_fe51:                                ; preds = %dec_label_pc_fe46, %dec_label_pc_fe38
  %stack_var_48.0 = phi i32 [ %tmp31, %dec_label_pc_fe38 ], [ %v3_fe4a, %dec_label_pc_fe46 ]
  store i32 %stack_var_48.0, i32* @eax, align 4
  %v15_fe55 = icmp eq i32 %tmp30, %stack_var_48.0
  br i1 %v15_fe55, label %bb, label %dec_label_pc_fe63

bb:                                               ; preds = %dec_label_pc_fe51
  %v1_fe5d = call i32 @function_ffc7()
  store i32 %v1_fe5d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_fe63

dec_label_pc_fe63:                                ; preds = %bb, %dec_label_pc_fe51
  %v0_fe80.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_fe80

dec_label_pc_fe70:                                ; preds = %dec_label_pc_fe80
  %v8_fe83 = xor i32 %v0_fe83, %v3_fe80
  %v2_fe70 = sub i32 %v3_fe80, %v0_fe83
  %v9_fe70 = xor i32 %v2_fe70, %v3_fe80
  %v10_fe70 = and i32 %v9_fe70, %v8_fe83
  %v11_fe70 = icmp slt i32 %v10_fe70, 0
  %v13_fe70 = icmp slt i32 %v2_fe70, 0
  %v2_fe72 = icmp ne i1 %v13_fe70, %v11_fe70
  %v3_fe72 = zext i1 %v2_fe72 to i32
  %v5_fe72 = and i32 %v3_fe80, -256
  %v6_fe72 = or i32 %v3_fe72, %v5_fe72
  br label %dec_label_pc_fe75

dec_label_pc_fe75:                                ; preds = %dec_label_pc_feac, %dec_label_pc_fe70
  %v0_fe79 = phi i32 [ %v0_fe80, %dec_label_pc_fe70 ], [ %v0_feaf, %dec_label_pc_feac ]
  %v0_fe986 = phi i32 [ %v0_fe98, %dec_label_pc_fe70 ], [ %v0_feac, %dec_label_pc_feac ]
  %storemerge2 = phi i32 [ %v6_fe72, %dec_label_pc_fe70 ], [ %v6_feb2, %dec_label_pc_feac ]
  store i32 %storemerge2, i32* @eax, align 4
  %v4_fe75 = trunc i32 %storemerge2 to i8
  %v5_fe75 = icmp eq i8 %v4_fe75, 0
  br i1 %v5_fe75, label %dec_label_pc_fe8c, label %dec_label_pc_fe79

dec_label_pc_fe79:                                ; preds = %dec_label_pc_fe75
  %v1_fe79 = add i32 %v0_fe79, 12
  br label %dec_label_pc_fe7c

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fe79, %dec_label_pc_fe8c
  %v4_fec715 = phi i32 [ %storemerge2, %dec_label_pc_fe79 ], [ %v4_fec716, %dec_label_pc_fe8c ]
  %v0_fe984 = phi i32 [ %v0_fe986, %dec_label_pc_fe79 ], [ %v0_fe985, %dec_label_pc_fe8c ]
  %storemerge.in.in = phi i32 [ %v1_fe79, %dec_label_pc_fe79 ], [ %v1_fe8e, %dec_label_pc_fe8c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @esi, align 4
  %v1_fe7c = icmp eq i32 %storemerge, 0
  br i1 %v1_fe7c, label %dec_label_pc_feb8, label %dec_label_pc_fe80

dec_label_pc_fe80:                                ; preds = %dec_label_pc_fe7c, %dec_label_pc_fe63
  %v0_fe98 = phi i32 [ %v0_fe984, %dec_label_pc_fe7c ], [ %tmp29, %dec_label_pc_fe63 ]
  %v0_fe80 = phi i32 [ %storemerge, %dec_label_pc_fe7c ], [ %v0_fe80.pre, %dec_label_pc_fe63 ]
  %v1_fe80 = add i32 %v0_fe80, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_fe80 = inttoptr i32 %v1_fe80 to i32*
  %v3_fe80 = load i32, i32* %v2_fe80, align 4
  store i32 %v3_fe80, i32* @eax, align 4
  %v0_fe83 = load i32, i32* @edx, align 4
  %v12_fe83 = icmp eq i32 %v3_fe80, %v0_fe83
  %v1_fe85 = icmp eq i1 %v12_fe83, false
  br i1 %v1_fe85, label %dec_label_pc_fe70, label %dec_label_pc_fe87

dec_label_pc_fe87:                                ; preds = %dec_label_pc_fe80
  %v10_fe87 = icmp eq i32 %v0_fe83, 1
  br i1 %v10_fe87, label %dec_label_pc_fe98, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe75, %dec_label_pc_fe87
  %v4_fec716 = phi i32 [ %storemerge2, %dec_label_pc_fe75 ], [ %v3_fe80, %dec_label_pc_fe87 ]
  %v0_fe8c = phi i32 [ %v0_fe79, %dec_label_pc_fe75 ], [ %v0_fe80, %dec_label_pc_fe87 ]
  %v0_fe985 = phi i32 [ %v0_fe986, %dec_label_pc_fe75 ], [ %v0_fe98, %dec_label_pc_fe87 ]
  store i32 %v0_fe8c, i32* @ecx, align 4
  %v1_fe8e = add i32 %v0_fe8c, 8
  br label %dec_label_pc_fe7c

dec_label_pc_fe98:                                ; preds = %dec_label_pc_fe87
  %v1_fe98 = add i32 %v0_fe98, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_fe98 = inttoptr i32 %v1_fe98 to i8*
  %v3_fe98 = load i8, i8* %v2_fe98, align 1
  %v10_fe98 = icmp eq i8 %v3_fe98, 0
  br i1 %v10_fe98, label %bb36, label %dec_label_pc_fea2

bb36:                                             ; preds = %dec_label_pc_fe98
  %v1_fe9c = call i32 @function_10025()
  store i32 %v1_fe9c, i32* @eax, align 4
  %v0_fea2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_fea2

dec_label_pc_fea2:                                ; preds = %bb36, %dec_label_pc_fe98
  %v0_fea2 = phi i32 [ %v0_fea2.pre, %bb36 ], [ %v0_fe80, %dec_label_pc_fe98 ]
  %v1_fea2 = add i32 %v0_fea2, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_fea2 = inttoptr i32 %v1_fea2 to i8*
  %v3_fea2 = load i8, i8* %v2_fea2, align 1
  %v10_fea2 = icmp eq i8 %v3_fea2, 0
  br i1 %v10_fea2, label %bb37, label %dec_label_pc_feac

bb37:                                             ; preds = %dec_label_pc_fea2
  %v1_fea6 = call i32 @function_10049()
  store i32 %v1_fea6, i32* %eax.global-to-local, align 4
  %v0_feaf.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_feac

dec_label_pc_feac:                                ; preds = %bb37, %dec_label_pc_fea2
  %v0_feaf = phi i32 [ %v0_feaf.pre, %bb37 ], [ %v0_fea2, %dec_label_pc_fea2 ]
  %v0_feac = load i32, i32* @edi, align 4
  %v1_feac = add i32 %v0_feac, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_feac = inttoptr i32 %v1_feac to i32*
  %v3_feac = load i32, i32* %v2_feac, align 4
  store i32 %v3_feac, i32* %eax.global-to-local, align 4
  %v1_feaf = add i32 %v0_feaf, 24
  %v2_feaf = inttoptr i32 %v1_feaf to i32*
  %v3_feaf = load i32, i32* %v2_feaf, align 4
  %v5_feaf = sub i32 %v3_feaf, %v3_feac
  %v11_feaf = xor i32 %v3_feaf, %v3_feac
  %v12_feaf = xor i32 %v5_feaf, %v3_feaf
  %v13_feaf = and i32 %v12_feaf, %v11_feaf
  %v14_feaf = icmp slt i32 %v13_feaf, 0
  %v16_feaf = icmp slt i32 %v5_feaf, 0
  %v2_feb2 = icmp ne i1 %v16_feaf, %v14_feaf
  %v3_feb2 = zext i1 %v2_feb2 to i32
  %v5_feb2 = and i32 %v3_feac, -256
  %v6_feb2 = or i32 %v3_feb2, %v5_feb2
  br label %dec_label_pc_fe75

dec_label_pc_feb8:                                ; preds = %dec_label_pc_fe7c
  %v0_feb8 = load i32, i32* @ecx, align 4
  %v15_feb8 = icmp eq i32 %v0_feb8, %tmp34
  br i1 %v15_feb8, label %dec_label_pc_fed2, label %dec_label_pc_febe

dec_label_pc_febe:                                ; preds = %dec_label_pc_feb8
  %v0_febe = load i32, i32* @edx, align 4
  %v2_febe = add i32 %v0_feb8, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_febe = inttoptr i32 %v2_febe to i32*
  %v4_febe = load i32, i32* %v3_febe, align 4
  %v5_febe = sub i32 %v0_febe, %v4_febe
  %v11_febe = xor i32 %v4_febe, %v0_febe
  %v12_febe = xor i32 %v5_febe, %v0_febe
  %v13_febe = and i32 %v12_febe, %v11_febe
  %v14_febe = icmp slt i32 %v13_febe, 0
  %v15_febe = icmp eq i32 %v5_febe, 0
  %v16_febe = icmp slt i32 %v5_febe, 0
  br i1 %v15_febe, label %bb38, label %dec_label_pc_fec7

bb38:                                             ; preds = %dec_label_pc_febe
  %v1_fec1 = call i32 @function_ff98()
  store i32 %v1_fec1, i32* %eax.global-to-local, align 4
  %v0_fec7.pre = load i1, i1* @sf, align 1
  %v1_fec7.pre = load i1, i1* @of, align 1
  br label %dec_label_pc_fec7

dec_label_pc_fec7:                                ; preds = %bb38, %dec_label_pc_febe
  %v4_fec7 = phi i32 [ %v1_fec1, %bb38 ], [ %v4_fec715, %dec_label_pc_febe ]
  %v1_fec7 = phi i1 [ %v1_fec7.pre, %bb38 ], [ %v14_febe, %dec_label_pc_febe ]
  %v0_fec7 = phi i1 [ %v0_fec7.pre, %bb38 ], [ %v16_febe, %dec_label_pc_febe ]
  %v2_fec7 = icmp ne i1 %v0_fec7, %v1_fec7
  %v3_fec7 = zext i1 %v2_fec7 to i32
  %v5_fec7 = and i32 %v4_fec7, -256
  %v6_fec7 = or i32 %v3_fec7, %v5_fec7
  store i32 %v6_fec7, i32* %eax.global-to-local, align 4
  %v5_feca = icmp eq i1 %v2_fec7, false
  br i1 %v5_feca, label %dec_label_pc_fec7.dec_label_pc_ff25_crit_edge, label %dec_label_pc_fed2

dec_label_pc_fec7.dec_label_pc_ff25_crit_edge:    ; preds = %dec_label_pc_fec7
  %v1_ff29.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_ff25

dec_label_pc_fed2:                                ; preds = %dec_label_pc_fec7, %dec_label_pc_feb8
  %v0_fed6 = load i32, i32* @edx, align 4
  store i32 %v0_fed6, i32* %stack_var_76, align 4
  %v1_fedf = add i32 %tmp28, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_fedf = inttoptr i32 %v1_fedf to i8*
  %v3_fedf = load i8, i8* %v2_fedf, align 1
  %v10_fedf = icmp eq i8 %v3_fedf, 0
  br i1 %v10_fedf, label %dec_label_pc_fef1, label %dec_label_pc_fee5

dec_label_pc_fee5:                                ; preds = %dec_label_pc_fed2
  %v1_fee5 = add i32 %tmp28, 76
  %v2_fee5 = inttoptr i32 %v1_fee5 to i32*
  %v3_fee5 = load i32, i32* %v2_fee5, align 4
  store i32 %v3_fee5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_fef1

dec_label_pc_fef1:                                ; preds = %dec_label_pc_fee5, %dec_label_pc_fed2
  %v2_fef5 = ptrtoint i32* %stack_var_76 to i32
  %v0_fefd = load i32, i32* @ecx, align 4
  %v1_ff09 = add i32 %tmp24, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_ff10 = ptrtoint i32* %stack_var_60 to i32
  store i32 %v2_ff10, i32* %eax.global-to-local, align 4
  %v4_ff17 = call i32 @unknown_1f190(i32 %v2_ff10, i32 %v1_ff09, i32 %v0_fefd, i32 %v2_fef5)
  store i32 %v4_ff17, i32* %eax.global-to-local, align 4
  %v0_ff1c = load i32, i32* @ebx, align 4
  %v1_ff1c = inttoptr i32 %v0_ff1c to i32*
  %v2_ff1c = load i32, i32* %v1_ff1c, align 4
  store i32 %v2_ff1c, i32* @esi, align 4
  br label %dec_label_pc_ff25

dec_label_pc_ff25:                                ; preds = %dec_label_pc_fec7.dec_label_pc_ff25_crit_edge, %dec_label_pc_fef1
  %v1_ff29 = phi i32 [ %v1_ff29.pre, %dec_label_pc_fec7.dec_label_pc_ff25_crit_edge ], [ %tmp30, %dec_label_pc_fef1 ]
  %v2_ff29 = add i32 %v1_ff29, 28
  %v3_ff29 = inttoptr i32 %v2_ff29 to i32*
  %v0_ff2c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_ff2c

; uselistorder directives
  uselistorder i32 %v5_febe, { 1, 2, 0 }
  uselistorder i32 %v0_feb8, { 1, 0 }
  uselistorder i32 %v5_feaf, { 1, 0 }
  uselistorder i32 %v3_feac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_feac, { 1, 0 }
  uselistorder i32 %v0_feaf, { 1, 0 }
  uselistorder i32 %v0_fe8c, { 1, 0 }
  uselistorder i32 %v3_fe80, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder i32 %v0_fe80, { 2, 0, 3, 1 }
  uselistorder i32 %storemerge2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_fe986, { 1, 0 }
  uselistorder i32 %v2_fe70, { 1, 0 }
  uselistorder i32 %tmp33, { 1, 0 }
  uselistorder i32 %tmp30, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 6, 3, 4, 5, 7, 0, 8, 2, 1 }
  uselistorder label %dec_label_pc_ff25, { 1, 0 }
  uselistorder label %dec_label_pc_fe8c, { 1, 0 }
  uselistorder label %dec_label_pc_fe7c, { 1, 0 }
}

define i32 @function_ff31() local_unnamed_addr {
dec_label_pc_ff31:
  %v0_ff31 = load i32, i32* @edx, align 4
  %v1_ff31 = load i32, i32* @eax, align 4
  %v2_ff31 = sub i32 %v0_ff31, %v1_ff31
  %v8_ff31 = xor i32 %v1_ff31, %v0_ff31
  %v9_ff31 = xor i32 %v2_ff31, %v0_ff31
  %v10_ff31 = and i32 %v9_ff31, %v8_ff31
  %v11_ff31 = icmp slt i32 %v10_ff31, 0
  %v13_ff31 = icmp slt i32 %v2_ff31, 0
  %v2_ff39 = icmp ne i1 %v13_ff31, %v11_ff31
  %v3_ff39 = zext i1 %v2_ff39 to i32
  %v5_ff39 = and i32 %v1_ff31, -256
  %v6_ff39 = or i32 %v3_ff39, %v5_ff39
  ret i32 %v6_ff39

; uselistorder directives
  uselistorder i32 %v2_ff31, { 1, 0 }
  uselistorder i32 %v1_ff31, { 1, 0, 2 }
}

define i32 @function_ff41(i32 %arg1) local_unnamed_addr {
dec_label_pc_ff41:
  %edi.global-to-local = alloca i32, align 4
  %v1_ff45 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ff45 = inttoptr i32 %v1_ff45 to i32*
  %v3_ff45 = load i32, i32* %v2_ff45, align 4
  %v1_ff48 = add i32 %v3_ff45, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ff48 = inttoptr i32 %v1_ff48 to i32*
  %v3_ff48 = load i32, i32* %v2_ff48, align 4
  store i32 %v3_ff48, i32* @eax, align 4
  %v1_ff4b = icmp eq i32 %v3_ff48, 0
  %v1_ff4d = icmp eq i1 %v1_ff4b, false
  br i1 %v1_ff4d, label %bb, label %dec_label_pc_ff53

bb:                                               ; preds = %dec_label_pc_ff41
  %v2_ff4d = call i32 @function_fb5b()
  store i32 %v2_ff4d, i32* @eax, align 4
  br label %dec_label_pc_ff53

dec_label_pc_ff53:                                ; preds = %bb, %dec_label_pc_ff41
  %v0_ff53 = load i32, i32* %edi.global-to-local, align 4
  %v1_ff53 = add i32 %v0_ff53, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ff53 = inttoptr i32 %v1_ff53 to i8*
  store i8 0, i8* %v2_ff53, align 1
  %v0_ff57 = call i32 @function_fb7d()
  ret i32 %v0_ff57
}

define i32 @function_ff5c() local_unnamed_addr {
dec_label_pc_ff5c:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_ff60 = add i32 %tmp1, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_ff60 = inttoptr i32 %v1_ff60 to i32*
  %v3_ff60 = load i32, i32* %v2_ff60, align 4
  %v1_ff63 = inttoptr i32 %v3_ff60 to i32*
  %v2_ff63 = load i32, i32* %v1_ff63, align 4
  ret i32 %v2_ff63
}

define i32 @function_ff6d() local_unnamed_addr {
dec_label_pc_ff6d:
  %v3_ff85 = load i32, i32* @eax, align 4
  ret i32 %v3_ff85
}

define i32 @function_ff98() local_unnamed_addr {
dec_label_pc_ff98:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_ffa1 = load i32, i32* @ecx, align 4
  %v1_ffa1 = add i32 %v0_ffa1, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_ffa1 = inttoptr i32 %v1_ffa1 to i8*
  %v3_ffa1 = load i8, i8* %v2_ffa1, align 1
  %v10_ffa1 = icmp eq i8 %v3_ffa1, 0
  br i1 %v10_ffa1, label %bb, label %dec_label_pc_ffa7

bb:                                               ; preds = %dec_label_pc_ff98
  %v1_ffa5 = call i32 @function_10025()
  store i32 %v1_ffa5, i32* @eax, align 4
  br label %dec_label_pc_ffa7

dec_label_pc_ffa7:                                ; preds = %bb, %dec_label_pc_ff98
  %v1_ffab = add i32 %tmp, ptrtoint (i8** @global_var_48.821 to i32)
  %v2_ffab = inttoptr i32 %v1_ffab to i8*
  %v3_ffab = load i8, i8* %v2_ffab, align 1
  %v10_ffab = icmp eq i8 %v3_ffab, 0
  br i1 %v10_ffab, label %bb3, label %dec_label_pc_ffb5

bb3:                                              ; preds = %dec_label_pc_ffa7
  %v1_ffaf = call i32 @function_10049()
  br label %dec_label_pc_ffb5

dec_label_pc_ffb5:                                ; preds = %bb3, %dec_label_pc_ffa7
  %v0_ffb9 = load i32, i32* @ecx, align 4
  %v1_ffb9 = add i32 %v0_ffb9, 24
  %v2_ffb9 = inttoptr i32 %v1_ffb9 to i32*
  %v3_ffb9 = load i32, i32* %v2_ffb9, align 4
  %v1_ffbc = add i32 %tmp, 76
  %v2_ffbc = inttoptr i32 %v1_ffbc to i32*
  %v3_ffbc = load i32, i32* %v2_ffbc, align 4
  %v5_ffbc = sub i32 %v3_ffbc, %v3_ffb9
  %v11_ffbc = xor i32 %v3_ffbc, %v3_ffb9
  %v12_ffbc = xor i32 %v5_ffbc, %v3_ffbc
  %v13_ffbc = and i32 %v12_ffbc, %v11_ffbc
  %v14_ffbc = icmp slt i32 %v13_ffbc, 0
  store i1 %v14_ffbc, i1* @of, align 1
  %v16_ffbc = icmp slt i32 %v5_ffbc, 0
  store i1 %v16_ffbc, i1* @sf, align 1
  %v2_ffbf = icmp ne i1 %v16_ffbc, %v14_ffbc
  %v3_ffbf = zext i1 %v2_ffbf to i32
  %v5_ffbf = and i32 %tmp, -256
  %v6_ffbf = or i32 %v3_ffbf, %v5_ffbf
  ret i32 %v6_ffbf

; uselistorder directives
  uselistorder i32 %v5_ffbc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i1* @sf, { 2, 0, 3, 1 }
  uselistorder i32 ()* @function_10049, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_48.821 to i32), { 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10025, { 5, 4, 3, 2, 1, 0 }
}

define i32 @function_ffc7() local_unnamed_addr {
dec_label_pc_ffc7:
  %v3_ffcb = load i32, i32* @eax, align 4
  ret i32 %v3_ffcb
}

define i32 @function_ffe4() local_unnamed_addr {
dec_label_pc_ffe4:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_ffe4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_ffe4 = add i32 %v0_ffe4, -2095831948
  %v2_ffe4 = inttoptr i32 %v1_ffe4 to i32*
  %v3_ffe4 = load i32, i32* %v2_ffe4, align 4
  %v4_ffe4 = sub i32 %v3_ffe4, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_ffe4, i32* %v2_ffe4, align 4
  %v0_ffea = load i32, i32* %edx.global-to-local, align 4
  %v1_ffea = trunc i32 %v0_ffea to i16
  %v4_ffea = load i8, i8* bitcast (i32* @esi to i8*), align 4
  call void @__asm_outsb(i16 %v1_ffea, i8 %v4_ffea)
  %v0_ffeb = load i32, i32* %eax.global-to-local, align 4
  %v1_ffeb = trunc i32 %v0_ffeb to i8
  %v2_ffeb = load i1, i1* %cf.global-to-local, align 1
  %v3_ffeb = zext i1 %v2_ffeb to i32
  %v4_ffeb = sub i32 %v0_ffeb, zext (i8 ptrtoint (i8** @global_var_1.820 to i8) to i32)
  %v5_ffeb = add i32 %v4_ffeb, %v3_ffeb
  %v17_ffeb = icmp eq i8 %v1_ffeb, 0
  %v18_ffeb = or i1 %v2_ffeb, %v17_ffeb
  store i1 %v18_ffeb, i1* %cf.global-to-local, align 1
  %v31_ffeb = and i32 %v5_ffeb, 255
  %v33_ffeb = and i32 %v0_ffeb, -256
  %v34_ffeb = or i32 %v31_ffeb, %v33_ffeb
  store i32 %v34_ffeb, i32* %eax.global-to-local, align 4
  ret i32 %v34_ffeb

; uselistorder directives
  uselistorder i1 %v2_ffeb, { 1, 0 }
  uselistorder i32 %v0_ffeb, { 1, 0, 2 }
}

define i32 @function_fff2(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff2:
  %v0_fff2 = call i32 @function_13366()
  ret i32 %v0_fff2
}

define i32 @function_fff7(i32 %arg1) local_unnamed_addr {
dec_label_pc_fff7:
  %v0_fff7 = call i32 @function_1339a()
  ret i32 %v0_fff7
}

define i32 @function_fffc(i32 %arg1) local_unnamed_addr {
dec_label_pc_fffc:
  %v0_1001b = load i32, i32* @eax, align 4
  ret i32 %v0_1001b
}

define i32 @function_10020() local_unnamed_addr {
dec_label_pc_10020:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10025() local_unnamed_addr {
dec_label_pc_10025:
  %v4_10025 = load i32, i32* @eax, align 4
  ret i32 %v4_10025
}

define i32 @function_10030() local_unnamed_addr {
dec_label_pc_10030:
  %v0_10030 = load i32, i32* @esi, align 4
  %v1_10030 = add i32 %v0_10030, 2
  %v2_10030 = inttoptr i32 %v1_10030 to i8*
  %v3_10030 = load i8, i8* %v2_10030, align 1
  %v4_10030 = load i32, i32* @edx, align 4
  %v5_10030 = lshr i32 %v4_10030, ptrtoint (i32* @global_var_8.813 to i32)
  %v6_10030 = trunc i32 %v5_10030 to i8
  %v7_10030 = or i8 %v6_10030, %v3_10030
  store i8 %v7_10030, i8* %v2_10030, align 1
  %v2_10033 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_10033 = load i32, i32* @eax, align 4
  %v4_10033 = trunc i32 %v3_10033 to i8
  %v5_10033 = add i8 %v4_10033, %v2_10033
  %v21_10033 = inttoptr i32 %v3_10033 to i8*
  store i8 %v5_10033, i8* %v21_10033, align 1
  %v3_1003d = load i32, i32* @eax, align 4
  ret i32 %v3_1003d
}

define i32 @function_10049() local_unnamed_addr {
dec_label_pc_10049:
  %v0_10049 = call i32 @function_1349e()
  store i32 %v0_10049, i32* @ebx, align 4
  %v2_10050 = load i32, i32* @esi, align 4
  ret i32 %v2_10050
}

define i32 @function_10060() local_unnamed_addr {
dec_label_pc_10060:
  %v0_1007f = load i32, i32* @eax, align 4
  ret i32 %v0_1007f
}

define i32 @function_10084(i32 %arg1) local_unnamed_addr {
dec_label_pc_10084:
  %v0_100a3 = load i32, i32* @eax, align 4
  ret i32 %v0_100a3
}

define i32 @_ZNSt8_Rb_treeISt4pairIN5boost8signals26detail15slot_meta_groupENS1_8optionalIiEEES0_IKS7_St14_List_iteratorINS1_10shared_ptrINS3_15connection_bodyIS7_NS2_5slot2IvRK7uint25610ChangeTypeNS1_8functionIFvSF_SG_EEEEENS2_5mutexEEEEEEESt10_Select1stISP_ENS3_14group_key_lessIiSt4lessIiEEESaISP_EE7_M_copyEPKSt13_Rb_tree_nodeISP_EPSZ_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10100:
  ret i32 0
}

define i32 @function_1012a(i32* %arg1) local_unnamed_addr {
dec_label_pc_1012a:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_1012a = load i32, i32* @ebx, align 4
  %v1_1012a = add i32 %v0_1012a, 1149890808
  %v2_1012a = inttoptr i32 %v1_1012a to i32*
  %v3_1012a = load i32, i32* %v2_1012a, align 4
  %v4_1012a = add i32 %v3_1012a, 1
  store i32 %v4_1012a, i32* %v2_1012a, align 4
  %v0_10130 = load i32, i32* %eax.global-to-local, align 4
  %v1_10130 = trunc i32 %v0_10130 to i8
  %v2_10130 = and i8 %v1_10130, 28
  %v3_10130 = icmp eq i8 %v2_10130, 0
  %v8_10130 = zext i8 %v2_10130 to i32
  %v10_10130 = and i32 %v0_10130, -256
  %v11_10130 = or i32 %v8_10130, %v10_10130
  store i32 %v11_10130, i32* %eax.global-to-local, align 4
  br i1 %v3_10130, label %dec_label_pc_10156, label %dec_label_pc_10134

dec_label_pc_10134:                               ; preds = %dec_label_pc_1012a
  %v0_10134 = load i32, i32* @ebx, align 4
  %v1_10134 = add i32 %v0_10134, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10134 = inttoptr i32 %v1_10134 to i32*
  %v3_10134 = load i32, i32* %v2_10134, align 4
  store i32 %v3_10134, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* @edx, align 4
  %v2_1013b = add i32 %tmp102, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_1013b = inttoptr i32 %v2_1013b to i32*
  store i32 %v3_10134, i32* %v3_1013b, align 4
  %v0_1013e = load i32, i32* @edx, align 4
  %v1_1013e = add i32 %v0_1013e, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_1013e = inttoptr i32 %v1_1013e to i8*
  store i8 0, i8* %v2_1013e, align 1
  %v0_10142 = load i32, i32* @ebx, align 4
  %v1_10142 = add i32 %v0_10142, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_10142 = inttoptr i32 %v1_10142 to i8*
  %v3_10142 = load i8, i8* %v2_10142, align 1
  %v10_10142 = icmp eq i8 %v3_10142, 0
  %v1_10146 = icmp eq i1 %v10_10142, false
  br i1 %v1_10146, label %bb, label %dec_label_pc_1014c

bb:                                               ; preds = %dec_label_pc_10134
  %v2_10146 = call i32 @function_10228()
  store i32 %v2_10146, i32* %eax.global-to-local, align 4
  %v0_1014c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1014c

dec_label_pc_1014c:                               ; preds = %bb, %dec_label_pc_10134
  %v0_1014c = phi i32 [ %v0_1014c.pre, %bb ], [ %v0_10142, %dec_label_pc_10134 ]
  %v1_1014c = add i32 %v0_1014c, 28
  %v2_1014c = inttoptr i32 %v1_1014c to i32*
  %v3_1014c = load i32, i32* %v2_1014c, align 4
  store i32 %v3_1014c, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_10153 = add i32 %tmp102, 28
  %v3_10153 = inttoptr i32 %v2_10153 to i32*
  store i32 %v3_1014c, i32* %v3_10153, align 4
  br label %dec_label_pc_10156

dec_label_pc_10156:                               ; preds = %dec_label_pc_1014c, %dec_label_pc_1012a
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  %v2_1015a = load i32, i32* @ebx, align 4
  store i32 %v2_1015a, i32* %eax.global-to-local, align 4
  %v1_1015c = add i32 %tmp102, 12
  %v2_1015c = inttoptr i32 %v1_1015c to i32*
  store i32 0, i32* %v2_1015c, align 4
  %v0_10163 = load i32, i32* %eax.global-to-local, align 4
  %v1_10163 = load i32, i32* %edx.global-to-local, align 4
  %v2_10163 = inttoptr i32 %v1_10163 to i32*
  store i32 %v0_10163, i32* %v2_10163, align 4
  %v0_10165 = load i32, i32* @ebx, align 4
  %v1_10165 = add i32 %v0_10165, 12
  %v2_10165 = inttoptr i32 %v1_10165 to i32*
  %v3_10165 = load i32, i32* %v2_10165, align 4
  store i32 %v3_10165, i32* %eax.global-to-local, align 4
  %v0_10168 = load i32, i32* %edx.global-to-local, align 4
  %v1_10168 = add i32 %v0_10168, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10168 = inttoptr i32 %v1_10168 to i32*
  store i32 0, i32* %v2_10168, align 4
  %v0_1016f = load i32, i32* %esi.global-to-local, align 4
  %v1_1016f = load i32, i32* %edx.global-to-local, align 4
  %v2_1016f = add i32 %v1_1016f, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1016f = inttoptr i32 %v2_1016f to i32*
  store i32 %v0_1016f, i32* %v3_1016f, align 4
  %v0_10172 = load i32, i32* %eax.global-to-local, align 4
  %v1_10172 = icmp eq i32 %v0_10172, 0
  br i1 %v1_10172, label %dec_label_pc_1018d, label %dec_label_pc_10176

dec_label_pc_10176:                               ; preds = %dec_label_pc_10156
  %v0_10176 = load i32, i32* %edx.global-to-local, align 4
  %v2_10181 = call i32 @unknown_20200(i32 %v0_10172, i32 %v0_10176)
  store i32 %v2_10181, i32* %eax.global-to-local, align 4
  store i32 %tmp102, i32* %edx.global-to-local, align 4
  store i32 %v2_10181, i32* %v2_1015c, align 4
  br label %dec_label_pc_1018d

dec_label_pc_1018d:                               ; preds = %dec_label_pc_10176, %dec_label_pc_10156
  %v0_1018d = load i32, i32* @ebx, align 4
  %v1_1018d = add i32 %v0_1018d, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_1018d = inttoptr i32 %v1_1018d to i32*
  %v3_1018d = load i32, i32* %v2_1018d, align 4
  store i32 %v3_1018d, i32* %esi.global-to-local, align 4
  %v1_10194 = icmp eq i32 %v3_1018d, 0
  %v1_10196 = icmp eq i1 %v1_10194, false
  br i1 %v1_10196, label %dec_label_pc_101a2, label %dec_label_pc_10198

dec_label_pc_10198:                               ; preds = %dec_label_pc_1018d
  %v0_10198 = call i32 @function_1020e()
  store i32 %v0_10198, i32* %eax.global-to-local, align 4
  ret i32 %v0_10198

dec_label_pc_101a2:                               ; preds = %dec_label_pc_1018d
  %v2_101a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v2_101a2

; uselistorder directives
  uselistorder i32 %tmp102, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
}

define i32 @function_101b2() local_unnamed_addr {
dec_label_pc_101b2:
  %eax.global-to-local = alloca i32, align 4
  %v0_101b2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_101b2
}

define i32 @function_1020e() local_unnamed_addr {
dec_label_pc_1020e:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %v4_10212 = icmp eq i32 %tmp11, ptrtoint ([2 x i8]* @2 to i32)
  %v1_1021d = icmp eq i1 %v4_10212, false
  br i1 %v1_1021d, label %bb, label %dec_label_pc_1021f

bb:                                               ; preds = %dec_label_pc_1020e
  %v2_1021d = call i32 @function_10237()
  br label %dec_label_pc_1021f

dec_label_pc_1021f:                               ; preds = %bb, %dec_label_pc_1020e
  %v0_10226 = phi i32 [ %v2_1021d, %bb ], [ %tmp10, %dec_label_pc_1020e ]
  ret i32 %v0_10226
}

define i32 @function_10228() local_unnamed_addr {
dec_label_pc_10228:
  %eax.global-to-local = alloca i32, align 4
  %v0_10228 = load i32, i32* @ebx, align 4
  %v1_10228 = add i32 %v0_10228, 24
  %v2_10228 = inttoptr i32 %v1_10228 to i32*
  %v3_10228 = load i32, i32* %v2_10228, align 4
  store i32 %v3_10228, i32* %eax.global-to-local, align 4
  %v0_1022b = load i32, i32* @edx, align 4
  %v1_1022b = add i32 %v0_1022b, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_1022b = inttoptr i32 %v1_1022b to i8*
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v2_1022b, align 1
  %v0_1022f = load i32, i32* %eax.global-to-local, align 4
  %v1_1022f = load i32, i32* @edx, align 4
  %v2_1022f = add i32 %v1_1022f, 24
  %v3_1022f = inttoptr i32 %v2_1022f to i32*
  store i32 %v0_1022f, i32* %v3_1022f, align 4
  %v0_10232 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10232
}

define i32 @function_10237() local_unnamed_addr {
dec_label_pc_10237:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v1_1024f = call i32 @unknown_1f380(i32 %tmp1)
  ret i32 %v1_1024f
}

define i32 @function_1025a() local_unnamed_addr {
dec_label_pc_1025a:
  %eax.global-to-local = alloca i32, align 4
  %v0_1025a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1025a
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE16invocation_stateC1ERKSL_RKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10270:
  ret i32 0
}

define i32 @function_102f0() local_unnamed_addr {
dec_label_pc_102f0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_102f0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_102f0 = add i32 %v0_102f0, 1977563419
  %v2_102f0 = inttoptr i32 %v1_102f0 to i32*
  %v3_102f0 = load i32, i32* %v2_102f0, align 4
  %v4_102f0 = add i32 %v3_102f0, -1
  store i32 %v4_102f0, i32* %v2_102f0, align 4
  %v0_102f6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_102f7 = add i32 %v0_102f6, add (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 ptrtoint (i32* @global_var_24.839 to i32))
  %v2_102f7 = inttoptr i32 %v1_102f7 to i32*
  %v3_102f7 = load i32, i32* %v2_102f7, align 4
  store i32 %v3_102f7, i32* %eax.global-to-local, align 4
  %v3_102fb = load i32, i32* %v2_102f7, align 4
  store i32 %v3_102fb, i32* %ecx.global-to-local, align 4
  %v1_102ff = add i32 %v3_102f7, 12
  %v2_102ff = inttoptr i32 %v1_102ff to i32*
  store i32 0, i32* %v2_102ff, align 4
  %v0_10306 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_10306, i32* %edx.global-to-local, align 4
  %v1_10308 = add i32 %v0_10306, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10308 = inttoptr i32 %v1_10308 to i32*
  store i32 0, i32* %v2_10308, align 4
  %v0_1030f = load i32, i32* %edx.global-to-local, align 4
  %v1_1030f = add i32 %v0_1030f, ptrtoint (i32* @global_var_8.813 to i32)
  store i32 %v1_1030f, i32* %edx.global-to-local, align 4
  %v0_10312 = load i32, i32* %eax.global-to-local, align 4
  %v1_10312 = add i32 %v0_10312, 28
  %v2_10312 = inttoptr i32 %v1_10312 to i32*
  store i32 0, i32* %v2_10312, align 4
  %v0_10319 = load i32, i32* %eax.global-to-local, align 4
  %v1_10319 = add i32 %v0_10319, 12
  store i32 %v1_10319, i32* %eax.global-to-local, align 4
  %v1_1031c = load i32, i32* %ecx.global-to-local, align 4
  %v2_1031c = add i32 %v1_1031c, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_1031c = inttoptr i32 %v2_1031c to i32*
  store i32 %v1_10319, i32* %v3_1031c, align 4
  %v0_1031f = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_1031f, i32* %ebp.global-to-local, align 4
  %v1_10321 = load i32, i32* %ecx.global-to-local, align 4
  %v2_10321 = add i32 %v1_10321, 24
  %v3_10321 = inttoptr i32 %v2_10321 to i32*
  store i32 %v0_1031f, i32* %v3_10321, align 4
  %v0_10324 = load i32, i32* @esp, align 4
  %v1_10324 = add i32 %v0_10324, 28
  %v2_10324 = inttoptr i32 %v1_10324 to i32*
  %v3_10324 = load i32, i32* %v2_10324, align 4
  store i32 %v3_10324, i32* %ecx.global-to-local, align 4
  %v0_10328 = load i32, i32* %eax.global-to-local, align 4
  %v2_10328 = add i32 %v0_10324, 32
  %v3_10328 = inttoptr i32 %v2_10328 to i32*
  store i32 %v0_10328, i32* %v3_10328, align 4
  %v0_1032c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1032c = add i32 %v0_1032c, 16
  %v2_1032c = inttoptr i32 %v1_1032c to i32*
  %v3_1032c = load i32, i32* %v2_1032c, align 4
  store i32 %v3_1032c, i32* %eax.global-to-local, align 4
  %v1_1032f = icmp eq i32 %v3_1032c, 0
  br i1 %v1_1032f, label %dec_label_pc_10382, label %dec_label_pc_10333

dec_label_pc_10333:                               ; preds = %dec_label_pc_102f0
  %v0_10333 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10333 = load i32, i32* @esp, align 4
  %v2_10333 = add i32 %v1_10333, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10333 = inttoptr i32 %v2_10333 to i32*
  store i32 %v0_10333, i32* %v3_10333, align 4
  %v1_10337 = load i32, i32* @esp, align 4
  %v2_10337 = add i32 %v1_10337, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10337 = inttoptr i32 %v2_10337 to i32*
  store i32 %v3_1032c, i32* %v3_10337, align 4
  %v0_1033b = load i32, i32* %edx.global-to-local, align 4
  %v1_1033b = load i32, i32* @esp, align 4
  %v2_1033b = inttoptr i32 %v1_1033b to i32*
  store i32 %v0_1033b, i32* %v2_1033b, align 4
  %v0_1033e = call i32 @unknown_20370()
  store i32 %v0_1033e, i32* %eax.global-to-local, align 4
  %v0_10343 = load i32, i32* @esp, align 4
  %v1_10343 = add i32 %v0_10343, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10343 = inttoptr i32 %v1_10343 to i32*
  %v3_10343 = load i32, i32* %v2_10343, align 4
  store i32 %v3_10343, i32* %edx.global-to-local, align 4
  store i32 %v0_1033e, i32* %ebp.global-to-local, align 4
  %v2_10349 = add i32 %v3_10343, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_10349 = inttoptr i32 %v2_10349 to i32*
  store i32 %v0_1033e, i32* %v3_10349, align 4
  %v0_10352.pre = load i32, i32* %ebp.global-to-local, align 4
  %v1_10352113 = add i32 %v0_10352.pre, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10352114 = inttoptr i32 %v1_10352113 to i32*
  %v3_10352115 = load i32, i32* %v2_10352114, align 4
  store i32 %v3_10352115, i32* %edx.global-to-local, align 4
  %v1_10355116 = icmp eq i32 %v3_10352115, 0
  %v1_10357117 = icmp eq i1 %v1_10355116, false
  br i1 %v1_10357117, label %dec_label_pc_10350, label %dec_label_pc_10359

dec_label_pc_10350:                               ; preds = %dec_label_pc_10333, %dec_label_pc_10350
  %v3_10352118 = phi i32 [ %v3_10352, %dec_label_pc_10350 ], [ %v3_10352115, %dec_label_pc_10333 ]
  store i32 %v3_10352118, i32* %ebp.global-to-local, align 4
  %v1_10352 = add i32 %v3_10352118, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10352 = inttoptr i32 %v1_10352 to i32*
  %v3_10352 = load i32, i32* %v2_10352, align 4
  store i32 %v3_10352, i32* %edx.global-to-local, align 4
  %v1_10355 = icmp eq i32 %v3_10352, 0
  %v1_10357 = icmp eq i1 %v1_10355, false
  br i1 %v1_10357, label %dec_label_pc_10350, label %dec_label_pc_10359

dec_label_pc_10359:                               ; preds = %dec_label_pc_10350, %dec_label_pc_10333
  %v0_1035d.lcssa = phi i32 [ %v0_10352.pre, %dec_label_pc_10333 ], [ %v3_10352118, %dec_label_pc_10350 ]
  %v0_10359 = load i32, i32* @esp, align 4
  %v1_10359 = add i32 %v0_10359, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10359 = inttoptr i32 %v1_10359 to i32*
  %v3_10359 = load i32, i32* %v2_10359, align 4
  store i32 %v3_10359, i32* %ecx.global-to-local, align 4
  %v2_1035d = add i32 %v3_10359, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_1035d = inttoptr i32 %v2_1035d to i32*
  store i32 %v0_1035d.lcssa, i32* %v3_1035d, align 4
  %v0_1036a.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_1036a105 = add i32 %v0_1036a.pre, 12
  %v2_1036a106 = inttoptr i32 %v1_1036a105 to i32*
  %v3_1036a107 = load i32, i32* %v2_1036a106, align 4
  store i32 %v3_1036a107, i32* %edx.global-to-local, align 4
  %v1_1036d108 = icmp eq i32 %v3_1036a107, 0
  %v1_1036f109 = icmp eq i1 %v1_1036d108, false
  br i1 %v1_1036f109, label %dec_label_pc_10368, label %dec_label_pc_10371

dec_label_pc_10368:                               ; preds = %dec_label_pc_10359, %dec_label_pc_10368
  %v3_1036a110 = phi i32 [ %v3_1036a, %dec_label_pc_10368 ], [ %v3_1036a107, %dec_label_pc_10359 ]
  store i32 %v3_1036a110, i32* %eax.global-to-local, align 4
  %v1_1036a = add i32 %v3_1036a110, 12
  %v2_1036a = inttoptr i32 %v1_1036a to i32*
  %v3_1036a = load i32, i32* %v2_1036a, align 4
  store i32 %v3_1036a, i32* %edx.global-to-local, align 4
  %v1_1036d = icmp eq i32 %v3_1036a, 0
  %v1_1036f = icmp eq i1 %v1_1036d, false
  br i1 %v1_1036f, label %dec_label_pc_10368, label %dec_label_pc_10371

dec_label_pc_10371:                               ; preds = %dec_label_pc_10368, %dec_label_pc_10359
  %v0_10379.lcssa = phi i32 [ %v0_1036a.pre, %dec_label_pc_10359 ], [ %v3_1036a110, %dec_label_pc_10368 ]
  %v0_10371 = load i32, i32* @esp, align 4
  %v1_10371 = add i32 %v0_10371, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10371 = inttoptr i32 %v1_10371 to i32*
  %v3_10371 = load i32, i32* %v2_10371, align 4
  store i32 %v3_10371, i32* %edx.global-to-local, align 4
  %v1_10375 = add i32 %v0_10371, 28
  %v2_10375 = inttoptr i32 %v1_10375 to i32*
  %v3_10375 = load i32, i32* %v2_10375, align 4
  store i32 %v3_10375, i32* %ecx.global-to-local, align 4
  %v2_10379 = add i32 %v3_10371, 24
  %v3_10379 = inttoptr i32 %v2_10379 to i32*
  store i32 %v0_10379.lcssa, i32* %v3_10379, align 4
  %v0_1037c = load i32, i32* %ecx.global-to-local, align 4
  %v1_1037c = add i32 %v0_1037c, 28
  %v2_1037c = inttoptr i32 %v1_1037c to i32*
  %v3_1037c = load i32, i32* %v2_1037c, align 4
  store i32 %v3_1037c, i32* %eax.global-to-local, align 4
  %v1_1037f = load i32, i32* %edx.global-to-local, align 4
  %v2_1037f = add i32 %v1_1037f, 28
  %v3_1037f = inttoptr i32 %v2_1037f to i32*
  store i32 %v3_1037c, i32* %v3_1037f, align 4
  br label %dec_label_pc_10382

dec_label_pc_10382:                               ; preds = %dec_label_pc_10371, %dec_label_pc_102f0
  %v0_10382 = load i32, i32* @esp, align 4
  %v1_10382 = add i32 %v0_10382, 28
  %v2_10382 = inttoptr i32 %v1_10382 to i32*
  %v3_10382 = load i32, i32* %v2_10382, align 4
  store i32 %v3_10382, i32* %edx.global-to-local, align 4
  %v1_10386 = add i32 %v0_10382, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10386 = inttoptr i32 %v1_10386 to i32*
  %v3_10386 = load i32, i32* %v2_10386, align 4
  store i32 %v3_10386, i32* @eax, align 4
  %v1_1038a = add i32 %v3_10382, 20
  %v2_1038a = inttoptr i32 %v1_1038a to i32*
  %v3_1038a = load i32, i32* %v2_1038a, align 4
  store i32 %v3_1038a, i32* %edi.global-to-local, align 4
  %v1_1038d = add i32 %v3_10382, 12
  store i32 %v1_1038d, i32* %edx.global-to-local, align 4
  %v1_10390 = inttoptr i32 %v3_10386 to i32*
  %v2_10390 = load i32, i32* %v1_10390, align 4
  store i32 %v2_10390, i32* %esi.global-to-local, align 4
  %v2_10392 = add i32 %v0_10382, 24
  %v3_10392 = inttoptr i32 %v2_10392 to i32*
  store i32 %v1_1038d, i32* %v3_10392, align 4
  %v0_10396 = load i32, i32* %edi.global-to-local, align 4
  %v1_10396 = load i32, i32* %edx.global-to-local, align 4
  %v12_10396 = icmp eq i32 %v0_10396, %v1_10396
  br i1 %v12_10396, label %bb, label %dec_label_pc_1039a

bb:                                               ; preds = %dec_label_pc_10382
  %v1_10398 = call i32 @function_103f0()
  store i32 %v1_10398, i32* @eax, align 4
  br label %dec_label_pc_1039a

dec_label_pc_1039a:                               ; preds = %bb, %dec_label_pc_10382
  %v0_103a0 = load i32, i32* @esp, align 4
  %v1_103a0 = add i32 %v0_103a0, 32
  %v2_103a0 = inttoptr i32 %v1_103a0 to i32*
  %v3_103a0 = load i32, i32* %v2_103a0, align 4
  %v4_103a0 = load i32, i32* %ebp.global-to-local, align 4
  %v15_103a0 = icmp eq i32 %v3_103a0, %v4_103a0
  br i1 %v15_103a0, label %bb104, label %dec_label_pc_103aa

bb104:                                            ; preds = %dec_label_pc_1039a
  %v1_103a4 = call i32 @function_1049c()
  store i32 %v1_103a4, i32* @eax, align 4
  %v1_103aa.pre = load i32, i32* @esp, align 4
  %v1_103ae.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_103aa

dec_label_pc_103aa:                               ; preds = %bb104, %dec_label_pc_1039a
  %v1_103ae = phi i32 [ %v1_103ae.pre, %bb104 ], [ %v4_103a0, %dec_label_pc_1039a ]
  %v1_103aa = phi i32 [ %v1_103aa.pre, %bb104 ], [ %v0_103a0, %dec_label_pc_1039a ]
  %v0_103aa = load i32, i32* %edi.global-to-local, align 4
  %v2_103aa = add i32 %v1_103aa, 24
  %v3_103aa = inttoptr i32 %v2_103aa to i32*
  %v4_103aa = load i32, i32* %v3_103aa, align 4
  %v15_103aa = icmp eq i32 %v0_103aa, %v4_103aa
  %v0_103ae = load i32, i32* %esi.global-to-local, align 4
  %v2_103ae = add i32 %v1_103ae, 28
  %v3_103ae = inttoptr i32 %v2_103ae to i32*
  store i32 %v0_103ae, i32* %v3_103ae, align 4
  %v0_103b1 = load i32, i32* @esp, align 4
  %v1_103b1 = add i32 %v0_103b1, 28
  %v2_103b1 = inttoptr i32 %v1_103b1 to i32*
  %v3_103b1 = load i32, i32* %v2_103b1, align 4
  store i32 %v3_103b1, i32* %ebx.global-to-local, align 4
  %v0_103ba.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v15_103aa, label %dec_label_pc_103ba, label %dec_label_pc_103b7

dec_label_pc_103b7:                               ; preds = %dec_label_pc_103aa
  %v1_103b7 = add i32 %v0_103ba.pre, 28
  %v2_103b7 = inttoptr i32 %v1_103b7 to i32*
  %v3_103b7 = load i32, i32* %v2_103b7, align 4
  store i32 %v3_103b7, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_103ba

dec_label_pc_103ba:                               ; preds = %dec_label_pc_103aa, %dec_label_pc_103b7
  %v2_103ba = inttoptr i32 %v0_103b1 to i32*
  store i32 %v0_103ba.pre, i32* %v2_103ba, align 4
  %v3_103ba = load i32, i32* @eax, align 4
  ret i32 %v3_103ba

; uselistorder directives
  uselistorder i32 %v4_103a0, { 1, 0 }
  uselistorder i32 %v3_1036a, { 1, 2, 0 }
  uselistorder i32 %v3_10352, { 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 13, 8, 9, 10, 11, 12 }
  uselistorder i32* %ebp.global-to-local, { 3, 4, 0, 1, 2, 5, 6, 7 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_103ba, { 1, 0 }
  uselistorder label %dec_label_pc_10368, { 1, 0 }
  uselistorder label %dec_label_pc_10350, { 1, 0 }
}

define i32 @function_103c2(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_103c2:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_103c2 = load i32, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v15_103c8 = icmp eq i32 %v0_103c2, %arg1
  br i1 %v15_103c8, label %dec_label_pc_103dc.preheader, label %dec_label_pc_103ce

dec_label_pc_103ce:                               ; preds = %dec_label_pc_103c2
  %v1_103ce = add i32 %v0_103c2, 28
  %v2_103ce = inttoptr i32 %v1_103ce to i32*
  %v3_103ce = load i32, i32* %v2_103ce, align 4
  store i32 %v3_103ce, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_103dc.preheader

dec_label_pc_103dc.preheader:                     ; preds = %dec_label_pc_103c2, %dec_label_pc_103ce
  %v0_103ec = phi i32 [ %arg2, %dec_label_pc_103c2 ], [ %v3_103ce, %dec_label_pc_103ce ]
  %v0_103dc.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_103dc102 = icmp eq i32 %v0_103dc.pre, %v0_103ec
  %v1_103de103 = icmp eq i1 %v12_103dc102, false
  br i1 %v1_103de103, label %dec_label_pc_103d8.lr.ph, label %dec_label_pc_103e0

dec_label_pc_103d8.lr.ph:                         ; preds = %dec_label_pc_103dc.preheader
  %v0_103da.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_103d8

dec_label_pc_103d8:                               ; preds = %dec_label_pc_103d8.lr.ph, %dec_label_pc_103d8
  %v0_103da = phi i32 [ %v0_103da.pre, %dec_label_pc_103d8.lr.ph ], [ %v2_103da, %dec_label_pc_103d8 ]
  %v0_103d8104 = phi i32 [ %v0_103dc.pre, %dec_label_pc_103d8.lr.ph ], [ %v2_103d8, %dec_label_pc_103d8 ]
  %v1_103d8 = inttoptr i32 %v0_103d8104 to i32*
  %v2_103d8 = load i32, i32* %v1_103d8, align 4
  store i32 %v2_103d8, i32* %ebx.global-to-local, align 4
  %v1_103da = inttoptr i32 %v0_103da to i32*
  %v2_103da = load i32, i32* %v1_103da, align 4
  store i32 %v2_103da, i32* %esi.global-to-local, align 4
  %v12_103dc = icmp eq i32 %v2_103d8, %v0_103ec
  %v1_103de = icmp eq i1 %v12_103dc, false
  br i1 %v1_103de, label %dec_label_pc_103d8, label %dec_label_pc_103e0

dec_label_pc_103e0:                               ; preds = %dec_label_pc_103d8, %dec_label_pc_103dc.preheader
  ret i32 %v0_103ec

; uselistorder directives
  uselistorder i32 %v2_103da, { 1, 0 }
  uselistorder i32 %v2_103d8, { 0, 2, 1 }
  uselistorder i32 %v0_103ec, { 2, 1, 0 }
  uselistorder i32 %v0_103c2, { 1, 0 }
  uselistorder label %dec_label_pc_103d8, { 1, 0 }
  uselistorder label %dec_label_pc_103dc.preheader, { 1, 0 }
}

define i32 @function_103f0() local_unnamed_addr {
dec_label_pc_103f0:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v1_103f8 = add i32 %tmp4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_103f8 = inttoptr i32 %v1_103f8 to i32*
  store i32 0, i32* %v2_103f8, align 4
  %v0_103ff = load i32, i32* %eax.global-to-local, align 4
  %v1_103ff = load i32, i32* %edx.global-to-local, align 4
  %v2_103ff = inttoptr i32 %v1_103ff to i32*
  store i32 %v0_103ff, i32* %v2_103ff, align 4
  %v3_10401 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v3_10401
}

define i32 @function_1040c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1040c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_1040c = load i32, i32* %ebx.global-to-local, align 4
  %v1_1040c = add i32 %v0_1040c, -1960565676
  %v2_1040c = inttoptr i32 %v1_1040c to i32*
  %v3_1040c = load i32, i32* %v2_1040c, align 4
  %v4_1040c = sub i32 %v3_1040c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_1040c, i32* %v2_1040c, align 4
  %v0_10413 = load i32, i32* %eax.global-to-local, align 4
  %v11_10413 = and i32 %v0_10413, -216
  store i32 %v11_10413, i32* %eax.global-to-local, align 4
  %v1_10415 = or i32 %v11_10413, 4
  %v2_10415 = inttoptr i32 %v1_10415 to i32*
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %v2_10415, align 4
  %v0_1041c = load i32, i32* %eax.global-to-local, align 4
  %v1_1041c = add i32 %v0_1041c, 8
  %v2_1041c = inttoptr i32 %v1_1041c to i32*
  store i32 ptrtoint (i8** @global_var_1.820 to i32), i32* %v2_1041c, align 4
  %v0_10423 = load i32, i32* %edx.global-to-local, align 4
  %v1_10423 = load i32, i32* %eax.global-to-local, align 4
  %v2_10423 = add i32 %v1_10423, 12
  %v3_10423 = inttoptr i32 %v2_10423 to i32*
  store i32 %v0_10423, i32* %v3_10423, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v0_1042a = load i32, i32* %eax.global-to-local, align 4
  %v1_1042a = inttoptr i32 %v0_1042a to i32*
  store i32 ptrtoint (%vtable_14958_type* @global_var_14958.969 to i32), i32* %v1_1042a, align 4
  %v0_10430 = load i32, i32* %eax.global-to-local, align 4
  %v1_10430 = load i32, i32* %ecx.global-to-local, align 4
  %v2_10430 = add i32 %v1_10430, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10430 = inttoptr i32 %v2_10430 to i32*
  store i32 %v0_10430, i32* %v3_10430, align 4
  %v0_10433 = load i32, i32* %edx.global-to-local, align 4
  %v1_10433 = add i32 %v0_10433, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10433 = inttoptr i32 %v1_10433 to i32*
  %v3_10433 = load i32, i32* %v2_10433, align 4
  store i32 %v3_10433, i32* %eax.global-to-local, align 4
  %v1_10436 = load i32, i32* %ecx.global-to-local, align 4
  %v2_10436 = add i32 %v1_10436, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10436 = inttoptr i32 %v2_10436 to i32*
  store i32 %v3_10433, i32* %v3_10436, align 4
  %v0_10439 = load i32, i32* %edx.global-to-local, align 4
  %v1_10439 = add i32 %v0_10439, 12
  %v2_10439 = inttoptr i32 %v1_10439 to i32*
  %v3_10439 = load i32, i32* %v2_10439, align 4
  store i32 %v3_10439, i32* @eax, align 4
  %v1_1043c = icmp eq i32 %v3_10439, 0
  %v1_1043e = load i32, i32* %ecx.global-to-local, align 4
  %v2_1043e = add i32 %v1_1043e, 12
  %v3_1043e = inttoptr i32 %v2_1043e to i32*
  store i32 %v3_10439, i32* %v3_1043e, align 4
  br i1 %v1_1043c, label %dec_label_pc_10447, label %dec_label_pc_10443

dec_label_pc_10443:                               ; preds = %dec_label_pc_1040c
  %v0_10443 = load i32, i32* @eax, align 4
  %v1_10443 = add i32 %v0_10443, 4
  %v2_10443 = inttoptr i32 %v1_10443 to i32*
  %v3_10443 = load i32, i32* %v2_10443, align 4
  %v4_10443 = add i32 %v3_10443, 1
  store i32 %v4_10443, i32* %v2_10443, align 4
  br label %dec_label_pc_10447

dec_label_pc_10447:                               ; preds = %dec_label_pc_10443, %dec_label_pc_1040c
  %v3_1044b = xor i32 %arg2, ptrtoint ([2 x i8]* @2 to i32)
  %v4_1044b = icmp eq i32 %v3_1044b, 0
  store i32 %v3_1044b, i32* %edx.global-to-local, align 4
  %v1_10452 = icmp eq i1 %v4_1044b, false
  br i1 %v1_10452, label %bb, label %dec_label_pc_10447.dec_label_pc_10454_crit_edge

dec_label_pc_10447.dec_label_pc_10454_crit_edge:  ; preds = %dec_label_pc_10447
  %v0_1045b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10454

bb:                                               ; preds = %dec_label_pc_10447
  %v2_10452 = call i32 @function_1047e()
  store i32 %v2_10452, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10454

dec_label_pc_10454:                               ; preds = %dec_label_pc_10447.dec_label_pc_10454_crit_edge, %bb
  %v0_1045b = phi i32 [ %v0_1045b.pre, %dec_label_pc_10447.dec_label_pc_10454_crit_edge ], [ %v2_10452, %bb ]
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  ret i32 %v0_1045b

; uselistorder directives
  uselistorder i32 %v11_10413, { 1, 0 }
  uselistorder label %dec_label_pc_10454, { 1, 0 }
}

define i32 @function_1045d() local_unnamed_addr {
dec_label_pc_1045d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1045d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1045d
}

define i32 @function_1046a() local_unnamed_addr {
dec_label_pc_1046a:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_1047e() local_unnamed_addr {
dec_label_pc_1047e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1049c() local_unnamed_addr {
dec_label_pc_1049c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v7_104c9 = call i32 @unknown_1eaf0(i32 %tmp, i32 ptrtoint ([51 x i8]* @global_var_36f8.958 to i32), i32 80, i32 ptrtoint ([901 x i8]* @global_var_8370.970 to i32))
  %v0_104ce = call i32 @function_1046a()
  ret i32 %v0_104ce

; uselistorder directives
  uselistorder i32 80, { 0, 6, 1, 7, 8, 9, 10, 2, 3, 4, 5, 11, 13, 12 }
}

define i32 @function_104d1() local_unnamed_addr {
dec_label_pc_104d1:
  %eax.global-to-local = alloca i32, align 4
  %v0_104d1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_104d1
}

define i32 @_ZNK5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE25force_cleanup_connectionsEPKNS1_12grouped_listIiSA_NS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS5_S6_SD_EESJ_EEEEEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_104e0:
  ret i32 0
}

define i32 @function_1052a() local_unnamed_addr {
dec_label_pc_1052a:
  %v3_1052a = load i32, i32* @eax, align 4
  ret i32 %v3_1052a
}

define i32 @function_10531(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10531:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_10531 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10531 = add i32 %v0_10531, 1697391700
  %v2_10531 = inttoptr i32 %v1_10531 to i32*
  %v3_10531 = load i32, i32* %v2_10531, align 4
  %v4_10531 = add i32 %v3_10531, -1
  store i32 %v4_10531, i32* %v2_10531, align 4
  %v0_10537 = load i32, i32* %edx.global-to-local, align 4
  %v3_10537 = xor i32 %v0_10537, ptrtoint ([2 x i8]* @2 to i32)
  %v4_10537 = icmp eq i32 %v3_10537, 0
  store i32 %v3_10537, i32* %edx.global-to-local, align 4
  %v1_1053d = icmp eq i1 %v4_10537, false
  br i1 %v1_1053d, label %bb, label %dec_label_pc_10531.dec_label_pc_10543_crit_edge

dec_label_pc_10531.dec_label_pc_10543_crit_edge:  ; preds = %dec_label_pc_10531
  %v0_10556.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10543

bb:                                               ; preds = %dec_label_pc_10531
  %v2_1053d = call i32 @function_10639()
  br label %dec_label_pc_10543

dec_label_pc_10543:                               ; preds = %dec_label_pc_10531.dec_label_pc_10543_crit_edge, %bb
  %v0_10556 = phi i32 [ %v0_10556.pre, %dec_label_pc_10531.dec_label_pc_10543_crit_edge ], [ %v2_1053d, %bb ]
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  ret i32 %v0_10556

; uselistorder directives
  uselistorder label %dec_label_pc_10543, { 1, 0 }
}

define i32 @function_105f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_105f0:
  %stack_var_36 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_105f0 = ptrtoint i32* %stack_var_0 to i32
  %v0_105f1 = load i32, i32* @eax, align 4
  %v11_105f1 = and i32 %v0_105f1, or (i32 zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32), i32 -256)
  store i32 %v11_105f1, i32* @eax, align 4
  %v1_105f3 = call i32 @function_14ec0(i32 %v4_105f0)
  %v2_105f8 = load i32, i32* @ebx, align 4
  %v1_105fa = icmp eq i32 %v2_105f8, 0
  br i1 %v1_105fa, label %dec_label_pc_10634, label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %dec_label_pc_105f0
  store i32 %v2_105f8, i32* @edi, align 4
  store i32 0, i32* %stack_var_0, align 4
  store i32 %v2_105f8, i32* %stack_var_36, align 4
  %v2_1061d = ptrtoint i32* %stack_var_36 to i32
  %v4_10625 = call i32 @unknown_1ff10(i32 %v2_105f8, i32 0, i32 %v2_1061d, i32 0)
  store i32 %v4_10625, i32* @eax, align 4
  %v0_1062a = call i32 @function_1052a()
  ret i32 %v0_1062a

dec_label_pc_10634:                               ; preds = %dec_label_pc_105f0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_105f8, { 1, 0, 2, 3 }
}

define i32 @function_10639() local_unnamed_addr {
dec_label_pc_10639:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1067c() local_unnamed_addr {
dec_label_pc_1067c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1067c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1067c
}

define i32 @function_1067d() local_unnamed_addr {
dec_label_pc_1067d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1068e() local_unnamed_addr {
dec_label_pc_1068e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1068e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1068e
}

define i32 @function_1069b() local_unnamed_addr {
dec_label_pc_1069b:
  %v0_1069b = call i32 @function_1067d()
  ret i32 %v0_1069b
}

define i32 @function_1069d() local_unnamed_addr {
dec_label_pc_1069d:
  %v0_106a4 = call i32 @function_1067d()
  ret i32 %v0_106a4

; uselistorder directives
  uselistorder i32 ()* @function_1067d, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEE18invocation_janitorD1Ev(i32* %arg1) local_unnamed_addr {
dec_label_pc_106b0:
  %tmp101 = ptrtoint i32* %arg1 to i32
  %v2_106c3 = load i32, i32* %arg1, align 4
  %v1_106c5 = add i32 %v2_106c3, ptrtoint ([6 x i8]* @global_var_90.940 to i32)
  %v2_106c5 = inttoptr i32 %v1_106c5 to i32*
  %v3_106c5 = load i32, i32* %v2_106c5, align 4
  %v1_106cb = add i32 %v2_106c3, ptrtoint (i32* @global_var_94.939 to i32)
  %v2_106cb = inttoptr i32 %v1_106cb to i32*
  %v3_106cb = load i32, i32* %v2_106cb, align 4
  %tmp104 = icmp ugt i32 %v3_106cb, %v3_106c5
  br i1 %tmp104, label %dec_label_pc_106d3, label %dec_label_pc_106e5

dec_label_pc_106d3:                               ; preds = %dec_label_pc_106b0
  %v1_106d3 = add i32 %tmp101, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_106d3 = inttoptr i32 %v1_106d3 to i32*
  %v3_106d3 = load i32, i32* %v2_106d3, align 4
  %v1_106da = add i32 %tmp101, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_106da = inttoptr i32 %v1_106da to i32*
  %v3_106da = load i32, i32* %v2_106da, align 4
  %v2_106e0 = call i32 @unknown_20b90(i32 %v3_106da, i32 %v3_106d3)
  br label %dec_label_pc_106e5

dec_label_pc_106e5:                               ; preds = %dec_label_pc_106b0, %dec_label_pc_106d3
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_106f6, label %dec_label_pc_106f2

dec_label_pc_106f2:                               ; preds = %dec_label_pc_106e5
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

dec_label_pc_106f6:                               ; preds = %dec_label_pc_106e5
  ret i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32))

; uselistorder directives
  uselistorder i32 %tmp101, { 1, 0 }
  uselistorder label %dec_label_pc_106e5, { 1, 0 }
}

define i32 @_ZNSt5dequeIcSaIcEE17_M_reallocate_mapEjb(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10700:
  %edx.global-to-local = alloca i32, align 4
  %tmp111 = ptrtoint i32* %arg1 to i32
  store i32 %tmp111, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v1_10724 = trunc i32 %arg3 to i8
  %v1_10728 = add i32 %tmp111, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10728 = inttoptr i32 %v1_10728 to i32*
  %v3_10728 = load i32, i32* %v2_10728, align 4
  %v1_1072b = add i32 %tmp111, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_1072b = inttoptr i32 %v1_1072b to i32*
  %v3_1072b = load i32, i32* %v2_1072b, align 4
  store i32 %v3_1072b, i32* @eax, align 4
  %v1_10736 = add i32 %tmp111, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_10736 = inttoptr i32 %v1_10736 to i32*
  %v3_10736 = load i32, i32* %v2_10736, align 4
  store i32 %v3_10736, i32* @ebp, align 4
  %v2_1073b = sub i32 %v3_10728, %v3_1072b
  %v2_1073d = sdiv i32 %v2_1073b, 4
  %v1_10740 = add nsw i32 %v2_1073d, 1
  store i32 %v1_10740, i32* @edi, align 4
  %v3_10743 = add i32 %v1_10740, %arg2
  store i32 %v3_10743, i32* %edx.global-to-local, align 4
  %v3_1074a = mul i32 %v3_10743, 2
  %tmp120 = icmp ugt i32 %v3_10736, %v3_1074a
  br i1 %tmp120, label %dec_label_pc_10751, label %bb

bb:                                               ; preds = %dec_label_pc_10700
  %v4_1074f = call i32 @function_107a0(i32 %v3_10728)
  store i32 %v4_1074f, i32* @eax, align 4
  %v0_10751.pre = load i32, i32* @ebp, align 4
  %v1_10751.pre = load i32, i32* %edx.global-to-local, align 4
  %v0_10759.pre = load i32, i32* @esi, align 4
  %v1_1076e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_10751

dec_label_pc_10751:                               ; preds = %dec_label_pc_10700, %bb
  %v1_1076e = phi i32 [ %v1_1076e.pre, %bb ], [ %tmp111, %dec_label_pc_10700 ]
  %v1_1076c = phi i32 [ %v4_1074f, %bb ], [ %v3_1072b, %dec_label_pc_10700 ]
  %v0_10759 = phi i32 [ %v0_10759.pre, %bb ], [ %arg2, %dec_label_pc_10700 ]
  %v1_10751 = phi i32 [ %v1_10751.pre, %bb ], [ %v3_10743, %dec_label_pc_10700 ]
  %v0_10751 = phi i32 [ %v0_10751.pre, %bb ], [ %v3_10736, %dec_label_pc_10700 ]
  %v2_10751 = sub i32 %v0_10751, %v1_10751
  %v2_10759 = mul i32 %v0_10759, 4
  %v2_1075c = udiv i32 %v2_10751, 2
  %v10_1075e = icmp eq i8 %v1_10724, 0
  %v1_10763 = icmp eq i1 %v10_1075e, false
  %v4_10763 = select i1 %v1_10763, i32 %v2_10759, i32 0
  store i32 %v4_10763, i32* %edx.global-to-local, align 4
  %v1_10766 = add i32 %v3_10728, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_10769 = mul i32 %v2_1075c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10769 = add i32 %v2_10769, %v4_10763
  %v2_1076c = sub i32 %v1_10766, %v1_1076c
  %v2_1076e = inttoptr i32 %v1_1076e to i32*
  %v3_1076e = load i32, i32* %v2_1076e, align 4
  %v4_1076e = add i32 %v3_1076e, %v3_10769
  store i32 %v4_1076e, i32* @esi, align 4
  %v2_10770 = sdiv i32 %v2_1076c, 4
  %v2_1076c.off = add i32 %v2_1076c, 3
  %tmp121 = icmp ult i32 %v2_1076c.off, 7
  store i32 %v2_10770, i32* @ecx, align 4
  %tmp122 = icmp ugt i32 %v1_1076c, %v4_1076e
  br i1 %tmp122, label %bb115, label %dec_label_pc_1077b

bb115:                                            ; preds = %dec_label_pc_10751
  %v4_10775 = call i32 @function_10870()
  br label %dec_label_pc_1077b

dec_label_pc_1077b:                               ; preds = %dec_label_pc_10751, %bb115
  br i1 %tmp121, label %bb116, label %dec_label_pc_10783

bb116:                                            ; preds = %dec_label_pc_1077b
  %v1_1077d = call i32 @function_10824()
  br label %dec_label_pc_10783

dec_label_pc_10783:                               ; preds = %bb116, %dec_label_pc_1077b
  %v0_1078a = load i32, i32* @esi, align 4
  %v1_1078a = load i32, i32* @edi, align 4
  %v2_1078a = mul i32 %v1_1078a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1078a = add i32 %v2_1078a, %v0_1078a
  %tmp123 = mul i32 %v2_10770, -4
  %v2_1078d = add i32 %v3_1078a, %tmp123
  ret i32 %v2_1078d

; uselistorder directives
  uselistorder i32 %v3_10743, { 1, 0, 2 }
  uselistorder i32 %v3_10736, { 1, 0, 2 }
  uselistorder i32 %tmp111, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1077b, { 1, 0 }
  uselistorder label %dec_label_pc_10751, { 1, 0 }
}

define i32 @function_1079b() local_unnamed_addr {
dec_label_pc_1079b:
  %v0_1079b = call i32 @function_10824()
  ret i32 %v0_1079b
}

define i32 @function_107a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_107a0:
  %of.global-to-local = alloca i1, align 1
  %v0_107a0 = load i32, i32* @esi, align 4
  %v1_107a0 = load i32, i32* @ebp, align 4
  %v7_107a0 = icmp ult i32 %v0_107a0, %v1_107a0
  %v1_107a4 = icmp eq i1 %v7_107a0, false
  %v4_107a4 = select i1 %v1_107a4, i32 %v0_107a0, i32 %v1_107a0
  store i32 %v4_107a4, i32* @eax, align 4
  %v3_107a7 = add i32 %v1_107a0, 2
  %v4_107a7 = add i32 %v3_107a7, %v4_107a4
  store i32 %v4_107a7, i32* @ebp, align 4
  %tmp7 = sub i32 1073741822, %v4_107a7
  %v8_107ab = and i32 %tmp7, %v4_107a7
  %v9_107ab = icmp slt i32 %v8_107ab, 0
  store i1 %v9_107ab, i1* %of.global-to-local, align 1
  %tmp9 = icmp ult i32 %v4_107a7, 1073741824
  br i1 %tmp9, label %dec_label_pc_107b7, label %bb

bb:                                               ; preds = %dec_label_pc_107a0
  %v4_107b1 = call i32 @function_10889()
  %v0_107b7.pre = load i32, i32* @ebp, align 4
  %v0_107c2.pre = load i32, i32* @esi, align 4
  %v1_107c2.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_107b7

dec_label_pc_107b7:                               ; preds = %dec_label_pc_107a0, %bb
  %v1_107c2 = phi i1 [ %v9_107ab, %dec_label_pc_107a0 ], [ %v1_107c2.pre, %bb ]
  %v0_107c2 = phi i32 [ %v0_107a0, %dec_label_pc_107a0 ], [ %v0_107c2.pre, %bb ]
  %v0_107b7 = phi i32 [ %v4_107a7, %dec_label_pc_107a0 ], [ %v0_107b7.pre, %bb ]
  %v1_107b7 = mul i32 %v0_107b7, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_107c2 = mul i32 %v0_107c2, 4
  store i32 %v2_107c2, i32* @esi, align 4
  store i1 %v1_107c2, i1* %of.global-to-local, align 1
  ret i32 %v1_107b7

; uselistorder directives
  uselistorder i32 %v4_107a7, { 2, 0, 1, 3, 4 }
  uselistorder i32 1073741824, { 0, 2, 1 }
  uselistorder label %dec_label_pc_107b7, { 1, 0 }
}

define i32 @function_10824() local_unnamed_addr {
dec_label_pc_10824:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_10824 = load i32, i32* @esi, align 4
  %v1_10824 = load i32, i32* @ebx, align 4
  %v2_10824 = add i32 %v1_10824, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_10824 = inttoptr i32 %v2_10824 to i32*
  store i32 %v0_10824, i32* %v3_10824, align 4
  %v2_10827 = load i32, i32* @esi, align 4
  store i32 %v2_10827, i32* %eax.global-to-local, align 4
  %v1_10829 = load i32, i32* @ebx, align 4
  %v2_10829 = add i32 %v1_10829, 12
  %v3_10829 = inttoptr i32 %v2_10829 to i32*
  store i32 %v2_10827, i32* %v3_10829, align 4
  %v0_1082c = load i32, i32* %eax.global-to-local, align 4
  %v1_1082c = add i32 %v0_1082c, 512
  %v1_10831 = load i32, i32* @ebx, align 4
  %v2_10831 = add i32 %v1_10831, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_10831 = inttoptr i32 %v2_10831 to i32*
  store i32 %v1_1082c, i32* %v3_10831, align 4
  %v0_10834 = load i32, i32* @esi, align 4
  %v1_10834 = load i32, i32* @edi, align 4
  %v2_10834 = mul i32 %v1_10834, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10834 = add i32 %v0_10834, -4
  %v4_10834 = add i32 %v3_10834, %v2_10834
  store i32 %v4_10834, i32* %eax.global-to-local, align 4
  %v1_10838 = load i32, i32* @ebx, align 4
  %v2_10838 = add i32 %v1_10838, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_10838 = inttoptr i32 %v2_10838 to i32*
  store i32 %v4_10834, i32* %v3_10838, align 4
  %v0_1083b = load i32, i32* %eax.global-to-local, align 4
  %v1_1083b = inttoptr i32 %v0_1083b to i32*
  %v2_1083b = load i32, i32* %v1_1083b, align 4
  store i32 %v2_1083b, i32* %eax.global-to-local, align 4
  %v1_1083d = load i32, i32* @ebx, align 4
  %v2_1083d = add i32 %v1_1083d, 28
  %v3_1083d = inttoptr i32 %v2_1083d to i32*
  store i32 %v2_1083b, i32* %v3_1083d, align 4
  %v0_10840 = load i32, i32* %eax.global-to-local, align 4
  %v1_10840 = add i32 %v0_10840, 512
  store i32 %v1_10840, i32* @eax, align 4
  %v3_10849 = xor i32 %tmp6, ptrtoint ([2 x i8]* @2 to i32)
  %v4_10849 = icmp eq i32 %v3_10849, 0
  store i32 %v3_10849, i32* @ecx, align 4
  %v1_10850 = load i32, i32* @ebx, align 4
  %v2_10850 = add i32 %v1_10850, 32
  %v3_10850 = inttoptr i32 %v2_10850 to i32*
  store i32 %v1_10840, i32* %v3_10850, align 4
  %v1_10853 = icmp eq i1 %v4_10849, false
  br i1 %v1_10853, label %bb, label %dec_label_pc_10824.dec_label_pc_10855_crit_edge

dec_label_pc_10824.dec_label_pc_10855_crit_edge:  ; preds = %dec_label_pc_10824
  %v0_10868.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10855

bb:                                               ; preds = %dec_label_pc_10824
  %v2_10853 = call i32 @function_1088e()
  store i32 %v2_10853, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10855

dec_label_pc_10855:                               ; preds = %dec_label_pc_10824.dec_label_pc_10855_crit_edge, %bb
  %v0_10868 = phi i32 [ %v0_10868.pre, %dec_label_pc_10824.dec_label_pc_10855_crit_edge ], [ %v2_10853, %bb ]
  %v0_10865 = load i32, i32* @esp, align 4
  %v1_10865 = add i32 %v0_10865, 76
  %tmp7 = xor i32 %v0_10865, -2147483648
  %v8_10865 = and i32 %v1_10865, %tmp7
  %v9_10865 = icmp slt i32 %v8_10865, 0
  store i1 %v9_10865, i1* @of, align 1
  ret i32 %v0_10868

; uselistorder directives
  uselistorder i1* @of, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 76, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 13, 14, 15 }
  uselistorder label %dec_label_pc_10855, { 1, 0 }
}

define i32 @function_10870() local_unnamed_addr {
dec_label_pc_10870:
  %v0_10870 = load i32, i32* @ecx, align 4
  %v1_10870 = icmp eq i32 %v0_10870, 0
  br i1 %v1_10870, label %bb, label %dec_label_pc_10870.dec_label_pc_10874_crit_edge

dec_label_pc_10870.dec_label_pc_10874_crit_edge:  ; preds = %dec_label_pc_10870
  %v3_1087f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_10874

bb:                                               ; preds = %dec_label_pc_10870
  %v1_10872 = call i32 @function_10824()
  br label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %dec_label_pc_10870.dec_label_pc_10874_crit_edge, %bb
  %v3_1087f = phi i32 [ %v1_10872, %bb ], [ %v3_1087f.pre, %dec_label_pc_10870.dec_label_pc_10874_crit_edge ]
  ret i32 %v3_1087f

; uselistorder directives
  uselistorder label %dec_label_pc_10874, { 1, 0 }
}

define i32 @function_10887() local_unnamed_addr {
dec_label_pc_10887:
  %v0_10887 = call i32 @function_10824()
  ret i32 %v0_10887

; uselistorder directives
  uselistorder i32 ()* @function_10824, { 3, 1, 2, 0 }
}

define i32 @function_10889() local_unnamed_addr {
dec_label_pc_10889:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1088e() local_unnamed_addr {
dec_label_pc_1088e:
  %v0_1088e = load i32, i32* @eax, align 4
  ret i32 %v0_1088e
}

define i32 @_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEESsN9__gnu_cxx17__normal_iteratorIPcSsEEEET1_RT_RT0_SA_SA_SA_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_108a0:
  %edx.global-to-local = alloca i32, align 4
  %tmp115 = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* @ebx, align 4
  store i32 %tmp115, i32* @ebp, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* @edi, align 4
  %v1_108c3 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_108c3 = inttoptr i32 %v1_108c3 to i32*
  %v3_108c3 = load i32, i32* %v2_108c3, align 4
  store i32 %v3_108c3, i32* @eax, align 4
  %v1_108c6 = add i32 %arg2, 24
  %v2_108c6 = inttoptr i32 %v1_108c6 to i32*
  %v3_108c6 = load i32, i32* %v2_108c6, align 4
  %v15_108c6 = icmp eq i32 %v3_108c6, %v3_108c3
  store i32 %arg3, i32* @esi, align 4
  br i1 %v15_108c6, label %dec_label_pc_10906, label %dec_label_pc_108cf

dec_label_pc_108cf:                               ; preds = %dec_label_pc_108a0
  %v12_108cf = icmp eq i32 %arg4, %arg3
  %v1_108d1 = icmp eq i1 %v12_108cf, false
  br i1 %v1_108d1, label %dec_label_pc_108e2, label %dec_label_pc_10928

dec_label_pc_108d8:                               ; preds = %dec_label_pc_108f8
  %v12_108d8 = icmp eq i32 %v1_108fe, %v1_108d8
  br i1 %v12_108d8, label %dec_label_pc_10928.loopexit, label %dec_label_pc_108e2

dec_label_pc_108e2:                               ; preds = %dec_label_pc_108cf, %dec_label_pc_108d8
  %v2_108e5 = phi i32 [ %v1_108fe, %dec_label_pc_108d8 ], [ %arg3, %dec_label_pc_108cf ]
  %v0_108e2 = phi i32 [ %v4_10901, %dec_label_pc_108d8 ], [ %v3_108c3, %dec_label_pc_108cf ]
  %v1_108e2 = inttoptr i32 %v0_108e2 to i8*
  %v2_108e2 = load i8, i8* %v1_108e2, align 1
  %v3_108e5 = inttoptr i32 %v2_108e5 to i8*
  store i8 %v2_108e2, i8* %v3_108e5, align 1
  %v0_108e7 = load i32, i32* @ebx, align 4
  %v1_108e7 = add i32 %v0_108e7, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_108e7 = inttoptr i32 %v1_108e7 to i32*
  %v3_108e7 = load i32, i32* %v2_108e7, align 4
  %v1_108ea = add i32 %v0_108e7, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_108ea = inttoptr i32 %v1_108ea to i32*
  %v3_108ea = load i32, i32* %v2_108ea, align 4
  %v1_108ed136137 = sub i32 %v3_108e7, ptrtoint (i8** @global_var_1.820 to i32)
  %v12_108f0 = icmp eq i32 %v3_108ea, %v1_108ed136137
  br i1 %v12_108f0, label %bb, label %dec_label_pc_108f8

bb:                                               ; preds = %dec_label_pc_108e2
  %v1_108f2 = call i32 @function_109d8()
  %v1_108fb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_108f8

dec_label_pc_108f8:                               ; preds = %bb, %dec_label_pc_108e2
  %v1_108fb = phi i32 [ %v1_108fb.pre, %bb ], [ %v0_108e7, %dec_label_pc_108e2 ]
  %v0_108f8 = phi i32 [ %v1_108f2, %bb ], [ %v3_108ea, %dec_label_pc_108e2 ]
  %v1_108f8 = add i32 %v0_108f8, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_108f8, i32* @eax, align 4
  %v2_108fb = add i32 %v1_108fb, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_108fb = inttoptr i32 %v2_108fb to i32*
  store i32 %v1_108f8, i32* %v3_108fb, align 4
  %v0_108fe = load i32, i32* @esi, align 4
  %v1_108fe = add i32 %v0_108fe, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_108fe, i32* @esi, align 4
  %v0_10901 = load i32, i32* @ebx, align 4
  %v1_10901 = add i32 %v0_10901, 24
  %v2_10901 = inttoptr i32 %v1_10901 to i32*
  %v3_10901 = load i32, i32* %v2_10901, align 4
  %v4_10901 = load i32, i32* @eax, align 4
  %v15_10901 = icmp eq i32 %v3_10901, %v4_10901
  %v1_10904 = icmp eq i1 %v15_10901, false
  %v1_108d8 = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_10904, label %dec_label_pc_108d8, label %dec_label_pc_10906

dec_label_pc_10906:                               ; preds = %dec_label_pc_108f8, %dec_label_pc_108a0
  %v1_10906 = phi i32 [ %arg4, %dec_label_pc_108a0 ], [ %v1_108d8, %dec_label_pc_108f8 ]
  %v0_10906 = phi i32 [ %arg3, %dec_label_pc_108a0 ], [ %v1_108fe, %dec_label_pc_108f8 ]
  %v12_10906 = icmp eq i32 %v0_10906, %v1_10906
  br i1 %v12_10906, label %bb124, label %dec_label_pc_1090e

bb124:                                            ; preds = %dec_label_pc_10906
  %v1_10908 = call i32 @function_10aa0()
  store i32 %v1_10908, i32* @eax, align 4
  %v1_10910.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1090e

dec_label_pc_1090e:                               ; preds = %bb124, %dec_label_pc_10906
  %v1_10910 = phi i32 [ %v1_10910.pre, %bb124 ], [ %v1_10906, %dec_label_pc_10906 ]
  %v0_10910 = load i32, i32* @edi, align 4
  %v2_10910 = sub i32 %v0_10910, %v1_10910
  %v12_10910 = icmp eq i32 %v2_10910, 0
  store i32 %v2_10910, i32* @edi, align 4
  %v1_10912 = icmp eq i1 %v12_10910, false
  br i1 %v1_10912, label %bb125, label %dec_label_pc_10918

bb125:                                            ; preds = %dec_label_pc_1090e
  %v2_10912 = call i32 @function_10a85()
  %v0_10918.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_10918

dec_label_pc_10918:                               ; preds = %bb125, %dec_label_pc_1090e
  %v0_10918 = phi i32 [ %v0_10918.pre, %bb125 ], [ 0, %dec_label_pc_1090e ]
  %v1_10918 = load i32, i32* @esi, align 4
  %v2_10918 = add i32 %v1_10918, %v0_10918
  %v1_1091a = load i32, i32* @ebp, align 4
  %v2_1091a = inttoptr i32 %v1_1091a to i32*
  store i32 %v2_10918, i32* %v2_1091a, align 4
  %v0_1091d = call i32 @function_109b5()
  ret i32 %v0_1091d

dec_label_pc_10928.loopexit:                      ; preds = %dec_label_pc_108d8
  %v0_10928.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %dec_label_pc_10928.loopexit, %dec_label_pc_108cf
  %v0_109458 = phi i32 [ %v0_10901, %dec_label_pc_10928.loopexit ], [ %arg2, %dec_label_pc_108cf ]
  %v1_10928 = phi i32 [ %v1_108fe, %dec_label_pc_10928.loopexit ], [ %arg3, %dec_label_pc_108cf ]
  %v0_10928 = phi i32 [ %v0_10928.pre, %dec_label_pc_10928.loopexit ], [ %arg5, %dec_label_pc_108cf ]
  %v12_10928 = icmp eq i32 %v0_10928, %v1_10928
  %v1_1092a = icmp eq i1 %v12_10928, false
  br i1 %v1_1092a, label %dec_label_pc_10945, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_10928
  %v0_10930 = call i32 @function_109b2()
  ret i32 %v0_10930

dec_label_pc_10938:                               ; preds = %dec_label_pc_10964
  %v0_10938 = load i32, i32* @esi, align 4
  %v1_10938 = add i32 %v0_10938, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_10938, i32* @esi, align 4
  %v1_1093b = add i32 %v3_10975, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_1093b, i32* @eax, align 4
  %v0_1093e = load i32, i32* @edi, align 4
  %v12_1093e = icmp eq i32 %v0_1093e, %v1_10938
  store i32 %v1_1093b, i32* %v2_10975, align 4
  br i1 %v12_1093e, label %bb126, label %dec_label_pc_10945.backedge

dec_label_pc_10945.backedge:                      ; preds = %dec_label_pc_10938, %bb126
  %v0_10945.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_10945

bb126:                                            ; preds = %dec_label_pc_10938
  %v1_10943 = call i32 @function_109b0()
  br label %dec_label_pc_10945.backedge

dec_label_pc_10945:                               ; preds = %dec_label_pc_10928, %dec_label_pc_10945.backedge
  %v0_10945 = phi i32 [ %v0_10945.pre, %dec_label_pc_10945.backedge ], [ %v0_109458, %dec_label_pc_10928 ]
  %v1_10945 = add i32 %v0_10945, 32
  %v2_10945 = inttoptr i32 %v1_10945 to i32*
  %v3_10945 = load i32, i32* %v2_10945, align 4
  store i32 %v3_10945, i32* %edx.global-to-local, align 4
  %v1_10948 = add i32 %v0_10945, 24
  %v2_10948 = inttoptr i32 %v1_10948 to i32*
  %v3_10948 = load i32, i32* %v2_10948, align 4
  %v1_1094b = add i32 %v3_10945, -1
  store i32 %v1_1094b, i32* %edx.global-to-local, align 4
  %v12_1094e = icmp eq i32 %v3_10948, %v1_1094b
  br i1 %v12_1094e, label %bb127, label %dec_label_pc_10956

bb127:                                            ; preds = %dec_label_pc_10945
  %v1_10950 = call i32 @function_10a10()
  br label %dec_label_pc_10956

dec_label_pc_10956:                               ; preds = %bb127, %dec_label_pc_10945
  %v2_1095f = phi i32 [ %v1_10950, %bb127 ], [ %v3_10948, %dec_label_pc_10945 ]
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_10958 = icmp eq i32 %v2_1095f, 0
  br i1 %v1_10958, label %dec_label_pc_10956.dec_label_pc_10964_crit_edge, label %dec_label_pc_1095c

dec_label_pc_10956.dec_label_pc_10964_crit_edge:  ; preds = %dec_label_pc_10956
  %v1_10967.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_10964

dec_label_pc_1095c:                               ; preds = %dec_label_pc_10956
  %v0_1095c = load i32, i32* @esi, align 4
  %v1_1095c = inttoptr i32 %v0_1095c to i8*
  %v2_1095c = load i8, i8* %v1_1095c, align 1
  %v3_1095c = zext i8 %v2_1095c to i32
  store i32 %v3_1095c, i32* %edx.global-to-local, align 4
  %v3_1095f = inttoptr i32 %v2_1095f to i8*
  store i8 %v2_1095c, i8* %v3_1095f, align 1
  %v0_10961 = load i32, i32* @ebx, align 4
  %v1_10961 = add i32 %v0_10961, 24
  %v2_10961 = inttoptr i32 %v1_10961 to i32*
  %v3_10961 = load i32, i32* %v2_10961, align 4
  store i32 %v3_10961, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %dec_label_pc_10956.dec_label_pc_10964_crit_edge, %dec_label_pc_1095c
  %v1_10967 = phi i32 [ %v0_10961, %dec_label_pc_1095c ], [ %v1_10967.pre, %dec_label_pc_10956.dec_label_pc_10964_crit_edge ]
  %v0_10964 = phi i32 [ %v3_10961, %dec_label_pc_1095c ], [ 0, %dec_label_pc_10956.dec_label_pc_10964_crit_edge ]
  %v1_10964 = add i32 %v0_10964, 1
  store i32 %v1_10964, i32* %edx.global-to-local, align 4
  %v2_10967 = add i32 %v1_10967, 24
  %v3_10967 = inttoptr i32 %v2_10967 to i32*
  store i32 %v1_10964, i32* %v3_10967, align 4
  %v0_1096a = load i32, i32* @ebx, align 4
  %v1_1096a = add i32 %v0_1096a, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_1096a = inttoptr i32 %v1_1096a to i32*
  %v3_1096a = load i32, i32* %v2_1096a, align 4
  %v1_1096d = inttoptr i32 %v3_1096a to i8*
  %v2_1096d = load i8, i8* %v1_1096d, align 1
  %v2_10970 = load i32, i32* @esi, align 4
  %v3_10970 = inttoptr i32 %v2_10970 to i8*
  store i8 %v2_1096d, i8* %v3_10970, align 1
  %v0_10972 = load i32, i32* @ebx, align 4
  %v1_10972 = add i32 %v0_10972, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10972 = inttoptr i32 %v1_10972 to i32*
  %v3_10972 = load i32, i32* %v2_10972, align 4
  store i32 %v3_10972, i32* %edx.global-to-local, align 4
  %v1_10975 = add i32 %v0_10972, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10975 = inttoptr i32 %v1_10975 to i32*
  %v3_10975 = load i32, i32* %v2_10975, align 4
  %v1_10978 = sub i32 %v3_10972, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_10978, i32* %edx.global-to-local, align 4
  %v12_1097b = icmp eq i32 %v3_10975, %v1_10978
  %v1_1097d = icmp eq i1 %v12_1097b, false
  br i1 %v1_1097d, label %dec_label_pc_10938, label %dec_label_pc_1097f

dec_label_pc_1097f:                               ; preds = %dec_label_pc_10964
  %v1_1097f = add i32 %v0_10972, 12
  %v2_1097f = inttoptr i32 %v1_1097f to i32*
  %v3_1097f = load i32, i32* %v2_1097f, align 4
  ret i32 %v3_1097f

; uselistorder directives
  uselistorder i32* %v2_10975, { 1, 0 }
  uselistorder i32 %v3_10948, { 1, 0 }
  uselistorder i32 %v0_10945, { 1, 0 }
  uselistorder i32 %v1_10906, { 1, 0 }
  uselistorder i32 %v1_108d8, { 1, 0 }
  uselistorder i32 %v1_108fe, { 2, 1, 4, 0, 3 }
  uselistorder i32 %v3_108ea, { 1, 0 }
  uselistorder i32 %v3_108c3, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10964, { 1, 0 }
  uselistorder label %dec_label_pc_10945, { 1, 0 }
  uselistorder label %dec_label_pc_10945.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_108e2, { 1, 0 }
}

define i32 @function_109b0() local_unnamed_addr {
dec_label_pc_109b0:
  %v0_109b0 = load i32, i32* @edi, align 4
  store i32 %v0_109b0, i32* @esi, align 4
  %v1_109b0 = load i32, i32* @eax, align 4
  ret i32 %v1_109b0
}

define i32 @function_109b2() local_unnamed_addr {
dec_label_pc_109b2:
  %v0_109b2 = load i32, i32* @esi, align 4
  %v1_109b2 = load i32, i32* @ebp, align 4
  %v2_109b2 = inttoptr i32 %v1_109b2 to i32*
  store i32 %v0_109b2, i32* %v2_109b2, align 4
  %v3_109b2 = load i32, i32* @eax, align 4
  ret i32 %v3_109b2
}

define i32 @function_109b5() local_unnamed_addr {
dec_label_pc_109b5:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v3_109b9 = xor i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v4_109b9 = icmp eq i32 %v3_109b9, 0
  store i32 %v3_109b9, i32* @edx, align 4
  %v0_109c0 = load i32, i32* @ebp, align 4
  store i32 %v0_109c0, i32* @eax, align 4
  %v1_109c2 = icmp eq i1 %v4_109b9, false
  br i1 %v1_109c2, label %bb, label %dec_label_pc_109c8

bb:                                               ; preds = %dec_label_pc_109b5
  %v2_109c2 = call i32 @function_10aa8()
  br label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %bb, %dec_label_pc_109b5
  %v0_109cf = phi i32 [ %v2_109c2, %bb ], [ %v0_109c0, %dec_label_pc_109b5 ]
  ret i32 %v0_109cf
}

define i32 @function_109d8() local_unnamed_addr {
dec_label_pc_109d8:
  %v0_109d8 = load i32, i32* @ebx, align 4
  %v1_109d8 = add i32 %v0_109d8, 12
  %v2_109d8 = inttoptr i32 %v1_109d8 to i32*
  %v3_109d8 = load i32, i32* %v2_109d8, align 4
  ret i32 %v3_109d8
}

define i32 @function_109e6() local_unnamed_addr {
dec_label_pc_109e6:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_109e6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_109e6 = add i32 %v0_109e6, 1418400835
  %v2_109e6 = inttoptr i32 %v1_109e6 to i32*
  %v3_109e6 = load i32, i32* %v2_109e6, align 4
  %v4_109e6 = add i32 %v3_109e6, -1
  store i32 %v4_109e6, i32* %v2_109e6, align 4
  %v0_109ec = load i32, i32* %eax.global-to-local, align 4
  %v11_109ec = and i32 %v0_109ec, -228
  store i32 %v11_109ec, i32* %eax.global-to-local, align 4
  %v1_109ee = add nsw i32 %v11_109ec, 4
  store i32 %v1_109ee, i32* %ecx.global-to-local, align 4
  %v1_109f1 = load i32, i32* %ebx.global-to-local, align 4
  %v2_109f1 = add i32 %v1_109f1, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_109f1 = inttoptr i32 %v2_109f1 to i32*
  store i32 %v1_109ee, i32* %v3_109f1, align 4
  %v0_109f4 = load i32, i32* %eax.global-to-local, align 4
  %v1_109f4 = add i32 %v0_109f4, 4
  %v2_109f4 = inttoptr i32 %v1_109f4 to i32*
  %v3_109f4 = load i32, i32* %v2_109f4, align 4
  store i32 %v3_109f4, i32* %eax.global-to-local, align 4
  %v1_109f7 = add i32 %v3_109f4, 512
  store i32 %v1_109f7, i32* %ecx.global-to-local, align 4
  %v1_109fd = load i32, i32* %ebx.global-to-local, align 4
  %v2_109fd = add i32 %v1_109fd, 12
  %v3_109fd = inttoptr i32 %v2_109fd to i32*
  store i32 %v3_109f4, i32* %v3_109fd, align 4
  %v0_10a00 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10a00 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10a00 = add i32 %v1_10a00, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_10a00 = inttoptr i32 %v2_10a00 to i32*
  store i32 %v0_10a00, i32* %v3_10a00, align 4
  %v0_10a03 = load i32, i32* %eax.global-to-local, align 4
  %v1_10a03 = load i32, i32* %ebx.global-to-local, align 4
  %v2_10a03 = add i32 %v1_10a03, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10a03 = inttoptr i32 %v2_10a03 to i32*
  store i32 %v0_10a03, i32* %v3_10a03, align 4
  %v0_10a06 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10a06

; uselistorder directives
  uselistorder i32 %v11_109ec, { 1, 0 }
}

define i32 @function_10a10() local_unnamed_addr {
dec_label_pc_10a10:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_10a10 = load i32, i32* @ebx, align 4
  %v1_10a10 = add i32 %v0_10a10, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10a10 = inttoptr i32 %v1_10a10 to i32*
  %v3_10a10 = load i32, i32* %v2_10a10, align 4
  store i32 %v3_10a10, i32* %edx.global-to-local, align 4
  %v4_10a15 = sub i32 %v3_10a10, %v0_10a10
  %v2_10a17 = sdiv i32 %v4_10a15, 4
  %v1_10a1a = sub nsw i32 0, %v2_10a17
  store i32 %v1_10a1a, i32* %eax.global-to-local, align 4
  %v2_10a1c = add i32 %v0_10a10, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10a1c = inttoptr i32 %v2_10a1c to i32*
  %v4_10a1c = load i32, i32* %v3_10a1c, align 4
  %v5_10a1c = sub i32 %v4_10a1c, %v2_10a17
  store i32 %v5_10a1c, i32* %eax.global-to-local, align 4
  %tmp12 = or i32 %v5_10a1c, 1
  %tmp13 = icmp eq i32 %tmp12, 1
  br i1 %tmp13, label %dec_label_pc_10a68, label %dec_label_pc_10a24

dec_label_pc_10a24:                               ; preds = %dec_label_pc_10a10, %dec_label_pc_10a68
  %v0_10a38 = phi i32 [ %v4_10a7b, %dec_label_pc_10a68 ], [ %v5_10a1c, %dec_label_pc_10a10 ]
  %v0_10a24 = phi i32 [ %v3_10a80, %dec_label_pc_10a68 ], [ %v3_10a10, %dec_label_pc_10a10 ]
  %v2_10a38 = add i32 %v0_10a24, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10a38 = inttoptr i32 %v2_10a38 to i32*
  store i32 %v0_10a38, i32* %v3_10a38, align 4
  %v0_10a3b = load i32, i32* @ebx, align 4
  %v1_10a3b = add i32 %v0_10a3b, 24
  %v2_10a3b = inttoptr i32 %v1_10a3b to i32*
  %v3_10a3b = load i32, i32* %v2_10a3b, align 4
  store i32 %v3_10a3b, i32* %eax.global-to-local, align 4
  %v2_10a3e = icmp eq i32 %v3_10a3b, 0
  br i1 %v2_10a3e, label %dec_label_pc_10a47, label %dec_label_pc_10a42

dec_label_pc_10a42:                               ; preds = %dec_label_pc_10a24
  %v4_10a3b = inttoptr i32 %v3_10a3b to i8*
  %v2_10a42 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_10a42 = zext i8 %v2_10a42 to i32
  store i32 %v3_10a42, i32* %edx.global-to-local, align 4
  store i8 %v2_10a42, i8* %v4_10a3b, align 1
  %v0_10a47.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_10a47

dec_label_pc_10a47:                               ; preds = %dec_label_pc_10a42, %dec_label_pc_10a24
  %v1_10a4d = phi i32 [ %v0_10a47.pre, %dec_label_pc_10a42 ], [ %v0_10a3b, %dec_label_pc_10a24 ]
  %v1_10a47 = add i32 %v1_10a4d, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10a47 = inttoptr i32 %v1_10a47 to i32*
  %v3_10a47 = load i32, i32* %v2_10a47, align 4
  store i32 %v3_10a47, i32* %eax.global-to-local, align 4
  %v1_10a4a = add i32 %v3_10a47, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_10a4a, i32* %edx.global-to-local, align 4
  store i32 %v1_10a4a, i32* %v2_10a47, align 4
  %v0_10a50 = load i32, i32* %eax.global-to-local, align 4
  %v1_10a50 = add i32 %v0_10a50, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_10a50 = inttoptr i32 %v1_10a50 to i32*
  %v3_10a50 = load i32, i32* %v2_10a50, align 4
  store i32 %v3_10a50, i32* %eax.global-to-local, align 4
  %v1_10a53 = add i32 %v3_10a50, 512
  store i32 %v1_10a53, i32* %edx.global-to-local, align 4
  %v1_10a59 = load i32, i32* @ebx, align 4
  %v2_10a59 = add i32 %v1_10a59, 28
  %v3_10a59 = inttoptr i32 %v2_10a59 to i32*
  store i32 %v3_10a50, i32* %v3_10a59, align 4
  %v0_10a5c = load i32, i32* %edx.global-to-local, align 4
  %v1_10a5c = load i32, i32* @ebx, align 4
  %v2_10a5c = add i32 %v1_10a5c, 32
  %v3_10a5c = inttoptr i32 %v2_10a5c to i32*
  store i32 %v0_10a5c, i32* %v3_10a5c, align 4
  %v0_10a5f = load i32, i32* %eax.global-to-local, align 4
  %v1_10a5f = load i32, i32* @ebx, align 4
  %v2_10a5f = add i32 %v1_10a5f, 24
  %v3_10a5f = inttoptr i32 %v2_10a5f to i32*
  store i32 %v0_10a5f, i32* %v3_10a5f, align 4
  %v0_10a62 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10a62

dec_label_pc_10a68:                               ; preds = %dec_label_pc_10a10
  %v4_10a7b = call i32 @unknown_20fa0(i32 %v0_10a10, i32 ptrtoint (i8** @global_var_1.820 to i32), i32 0)
  store i32 %v4_10a7b, i32* %eax.global-to-local, align 4
  %v0_10a80 = load i32, i32* @ebx, align 4
  %v1_10a80 = add i32 %v0_10a80, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10a80 = inttoptr i32 %v1_10a80 to i32*
  %v3_10a80 = load i32, i32* %v2_10a80, align 4
  store i32 %v3_10a80, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_10a24

; uselistorder directives
  uselistorder i32 %v3_10a80, { 1, 0 }
  uselistorder i32 %v4_10a7b, { 1, 0 }
  uselistorder i32 %v3_10a3b, { 1, 0, 2 }
  uselistorder i32 %v5_10a1c, { 1, 0, 2 }
  uselistorder i32 %v2_10a17, { 1, 0 }
  uselistorder label %dec_label_pc_10a24, { 1, 0 }
}

define i32 @function_10a85() local_unnamed_addr {
dec_label_pc_10a85:
  %v0_10a85 = load i32, i32* @edi, align 4
  store i32 %v0_10a85, i32* @ebx, align 4
  %v3_10a8f = load i32, i32* @eax, align 4
  ret i32 %v3_10a8f
}

define i32 @function_10a97() local_unnamed_addr {
dec_label_pc_10a97:
  %eax.global-to-local = alloca i32, align 4
  %v0_10a97 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10a97
}

define i32 @function_10aa0() local_unnamed_addr {
dec_label_pc_10aa0:
  %v0_10aa0 = load i32, i32* @edi, align 4
  %v1_10aa0 = load i32, i32* @ebp, align 4
  %v2_10aa0 = inttoptr i32 %v1_10aa0 to i32*
  store i32 %v0_10aa0, i32* %v2_10aa0, align 4
  %v0_10aa3 = call i32 @function_109b5()
  ret i32 %v0_10aa3

; uselistorder directives
  uselistorder i32 ()* @function_109b5, { 1, 0 }
}

define i32 @function_10aa8() local_unnamed_addr {
dec_label_pc_10aa8:
  %v1_10aa9 = load i32, i32* @eax, align 4
  ret i32 %v1_10aa9
}

define i32 @_ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10ac0:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %tmp104 = ptrtoint i32* %arg1 to i32
  store i32 %tmp104, i32* @ebp, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  %v1_10adb = add i32 %tmp104, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_10adb = inttoptr i32 %v1_10adb to i32*
  %v3_10adb = load i32, i32* %v2_10adb, align 4
  store i32 %v3_10adb, i32* %ecx.global-to-local, align 4
  %v1_10ade = add i32 %tmp104, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10ade = inttoptr i32 %v1_10ade to i32*
  %v3_10ade = load i32, i32* %v2_10ade, align 4
  %v1_10ae1 = add i32 %tmp104, 24
  %v2_10ae1 = inttoptr i32 %v1_10ae1 to i32*
  %v3_10ae1 = load i32, i32* %v2_10ae1, align 4
  %v2_10ae4 = add i32 %tmp104, 28
  %v3_10ae4 = inttoptr i32 %v2_10ae4 to i32*
  %v4_10ae4 = load i32, i32* %v3_10ae4, align 4
  %v5_10ae4 = sub i32 %v3_10ae1, %v4_10ae4
  %v2_10ae7 = sub i32 %v3_10ade, %v3_10adb
  %v2_10ae9 = sdiv i32 %v2_10ae7, 4
  %v1_10aec = add nsw i32 %v2_10ae9, -1
  %v2_10aef = shl i32 %v1_10aec, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_10af2 = add i32 %v5_10ae4, %v2_10aef
  store i32 %v2_10af2, i32* @eax, align 4
  %v1_10af4 = add i32 %tmp104, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10af4 = inttoptr i32 %v1_10af4 to i32*
  %v3_10af4 = load i32, i32* %v2_10af4, align 4
  %v2_10af7 = add i32 %tmp104, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10af7 = inttoptr i32 %v2_10af7 to i32*
  %v4_10af7 = load i32, i32* %v3_10af7, align 4
  %v5_10af7 = add i32 %v3_10af4, %v2_10af2
  %v2_10afa113 = sub i32 %v4_10af7, %v5_10af7
  %v1_10afc = add i32 %v2_10afa113, -1
  %v7_10afe = icmp ult i32 %v1_10afc, %arg2
  br i1 %v7_10afe, label %bb, label %dec_label_pc_10b06

bb:                                               ; preds = %dec_label_pc_10ac0
  %v3_10b00 = call i32 @function_10b8a(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_10b08.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_10b0e.pre = load i32, i32* @ebp, align 4
  %v0_10b06.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_10b06

dec_label_pc_10b06:                               ; preds = %bb, %dec_label_pc_10ac0
  %v0_10b06 = phi i32 [ %v0_10b06.pre, %bb ], [ %v3_10adb, %dec_label_pc_10ac0 ]
  %v1_10b0e = phi i32 [ %v1_10b0e.pre, %bb ], [ %tmp104, %dec_label_pc_10ac0 ]
  %v0_10b08 = phi i32 [ %v0_10b08.pre, %bb ], [ %arg2, %dec_label_pc_10ac0 ]
  %v1_10b08 = add i32 %v0_10b08, 511
  store i32 %v1_10b08, i32* %ebx.global-to-local, align 4
  %v2_10b0e = inttoptr i32 %v1_10b0e to i32*
  %v3_10b0e = load i32, i32* %v2_10b0e, align 4
  %v4_10b0e = sub i32 %v0_10b06, %v3_10b0e
  %v5_10b15 = udiv i32 %v1_10b08, 512
  %tmp114 = icmp ult i32 %v1_10b08, 512
  %v2_10b1a = sdiv i32 %v4_10b0e, 4
  %tmp115 = icmp ugt i32 %v5_10b15, %v2_10b1a
  br i1 %tmp115, label %bb110, label %dec_label_pc_10b23

bb110:                                            ; preds = %dec_label_pc_10b06
  %v5_10b21 = call i32 @function_10b70(i32 %v5_10b15)
  br label %dec_label_pc_10b23

dec_label_pc_10b23:                               ; preds = %dec_label_pc_10b06, %bb110
  br i1 %tmp114, label %bb111, label %dec_label_pc_10b2b

bb111:                                            ; preds = %dec_label_pc_10b23
  %v1_10b29 = call i32 @function_10b56()
  br label %dec_label_pc_10b2b

dec_label_pc_10b2b:                               ; preds = %bb111, %dec_label_pc_10b23
  %v2_10b3b = phi i32 [ %v1_10b29, %bb111 ], [ %v5_10b15, %dec_label_pc_10b23 ]
  %v0_10b38 = load i32, i32* @ebp, align 4
  %v1_10b38 = add i32 %v0_10b38, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_10b38 = inttoptr i32 %v1_10b38 to i32*
  %v3_10b38 = load i32, i32* %v2_10b38, align 4
  store i32 %v3_10b38, i32* %ebx.global-to-local, align 4
  ret i32 %v2_10b3b

; uselistorder directives
  uselistorder i32 %v5_10b15, { 2, 1, 0 }
  uselistorder i32 %tmp104, { 2, 1, 0, 4, 3, 6, 5, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10b23, { 1, 0 }
}

define i32 @function_10b56() local_unnamed_addr {
dec_label_pc_10b56:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v3_10b5a = xor i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v4_10b5a = icmp eq i32 %v3_10b5a, 0
  store i32 %v3_10b5a, i32* @eax, align 4
  %v1_10b61 = icmp eq i1 %v4_10b5a, false
  br i1 %v1_10b61, label %bb, label %dec_label_pc_10b63

bb:                                               ; preds = %dec_label_pc_10b56
  %v2_10b61 = call i32 @function_10b96()
  br label %dec_label_pc_10b63

dec_label_pc_10b63:                               ; preds = %bb, %dec_label_pc_10b56
  %v0_10b6a = phi i32 [ %v2_10b61, %bb ], [ %v3_10b5a, %dec_label_pc_10b56 ]
  ret i32 %v0_10b6a
}

define i32 @function_10b70(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b70:
  %v3_10b83 = call i32 @unknown_211c0(i32 %arg1, i32 ptrtoint (i8** @global_var_1.820 to i32))
  ret i32 %v3_10b83
}

define i32 @function_10b8a(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b8a:
  %v3_10b8a = load i32, i32* @eax, align 4
  ret i32 %v3_10b8a
}

define i32 @function_10b96() local_unnamed_addr {
dec_label_pc_10b96:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10bb3() local_unnamed_addr {
dec_label_pc_10bb3:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %v0_10bb4 = load i32, i32* %eax.global-to-local, align 4
  %v1_10bb4 = trunc i32 %v0_10bb4 to i8
  %v2_10bb4 = load i1, i1* %cf.global-to-local, align 1
  %v3_10bb4 = zext i1 %v2_10bb4 to i8
  %v4_10bb4 = add i8 %v1_10bb4, -125
  %v5_10bb4 = add i8 %v4_10bb4, %v3_10bb4
  %v22_10bb4 = icmp ule i8 %v5_10bb4, %v1_10bb4
  %v23_10bb4 = icmp ugt i8 %v1_10bb4, 124
  %v24_10bb4 = select i1 %v2_10bb4, i1 %v22_10bb4, i1 %v23_10bb4
  store i1 %v24_10bb4, i1* %cf.global-to-local, align 1
  %v25_10bb4 = zext i8 %v5_10bb4 to i32
  %v27_10bb4 = and i32 %v0_10bb4, -256
  %v28_10bb4 = or i32 %v25_10bb4, %v27_10bb4
  store i32 %v28_10bb4, i32* %eax.global-to-local, align 4
  ret i32 %v28_10bb4

; uselistorder directives
  uselistorder i8 %v5_10bb4, { 1, 0 }
}

define i32 @function_10bd0() local_unnamed_addr {
dec_label_pc_10bd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_10bd0 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10bd0
}

define i32 @_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEj(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10be0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp109 = ptrtoint i32* %arg1 to i32
  %v0_10be3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_10bf7 = load i32, i32* %edi.global-to-local, align 4
  store i32 %arg3, i32* %edi.global-to-local, align 4
  %v0_10bff = load i32, i32* %esi.global-to-local, align 4
  store i32 %tmp109, i32* %esi.global-to-local, align 4
  %v1_10c07 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10c07 = inttoptr i32 %v1_10c07 to i32*
  %v3_10c07 = load i32, i32* %v2_10c07, align 4
  store i32 %v3_10c07, i32* %ecx.global-to-local, align 4
  %v1_10c0a = add i32 %arg2, 12
  %v2_10c0a = inttoptr i32 %v1_10c0a to i32*
  %v3_10c0a = load i32, i32* %v2_10c0a, align 4
  store i32 %v3_10c0a, i32* %eax.global-to-local, align 4
  %v0_10c0d = load i32, i32* %ebp.global-to-local, align 4
  %v2_10c13 = sub i32 %v3_10c07, %v3_10c0a
  %v7_10c15 = icmp ult i32 %v2_10c13, %arg3
  %v1_10c17 = icmp eq i1 %v7_10c15, false
  br i1 %v1_10c17, label %dec_label_pc_10c33, label %dec_label_pc_10c19

dec_label_pc_10c19:                               ; preds = %dec_label_pc_10be0
  %v2_10c1b = sub i32 %arg3, %v2_10c13
  store i32 %v2_10c1b, i32* %eax.global-to-local, align 4
  %v2_10c24 = call i32 @unknown_216a0(i32 %arg2, i32 %v2_10c1b)
  store i32 %v2_10c24, i32* %eax.global-to-local, align 4
  %v0_10c29 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c29 = add i32 %v0_10c29, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10c29 = inttoptr i32 %v1_10c29 to i32*
  %v3_10c29 = load i32, i32* %v2_10c29, align 4
  store i32 %v3_10c29, i32* %ecx.global-to-local, align 4
  %v1_10c2c = add i32 %v0_10c29, 12
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  %v3_10c2c = load i32, i32* %v2_10c2c, align 4
  store i32 %v3_10c2c, i32* %eax.global-to-local, align 4
  %v2_10c31 = sub i32 %v3_10c29, %v3_10c2c
  %v1_10c33.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_10c33

dec_label_pc_10c33:                               ; preds = %dec_label_pc_10c19, %dec_label_pc_10be0
  %v0_10c6e8 = phi i32 [ %v3_10c2c, %dec_label_pc_10c19 ], [ %v3_10c0a, %dec_label_pc_10be0 ]
  %v0_10c3d = phi i32 [ %v3_10c29, %dec_label_pc_10c19 ], [ %v3_10c07, %dec_label_pc_10be0 ]
  %v0_10c35 = phi i32 [ %v0_10c29, %dec_label_pc_10c19 ], [ %arg2, %dec_label_pc_10be0 ]
  %v1_10c3d = phi i32 [ %v1_10c33.pre, %dec_label_pc_10c19 ], [ %arg3, %dec_label_pc_10be0 ]
  %v0_10c33 = phi i32 [ %v2_10c31, %dec_label_pc_10c19 ], [ %v2_10c13, %dec_label_pc_10be0 ]
  %v2_10c33 = sub i32 %v0_10c33, %v1_10c3d
  %v13_10c33 = icmp slt i32 %v2_10c33, 0
  %v1_10c35 = add i32 %v0_10c35, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10c35 = inttoptr i32 %v1_10c35 to i32*
  %v3_10c35 = load i32, i32* %v2_10c35, align 4
  store i32 %v3_10c35, i32* %ebp.global-to-local, align 4
  %v1_10c38 = add i32 %v0_10c35, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_10c38 = inttoptr i32 %v1_10c38 to i32*
  %v3_10c38 = load i32, i32* %v2_10c38, align 4
  store i32 %v3_10c38, i32* %ebx.global-to-local, align 4
  br i1 %v13_10c33, label %dec_label_pc_10c98, label %dec_label_pc_10c3d

dec_label_pc_10c3d:                               ; preds = %dec_label_pc_10c33
  %v2_10c3d = sub i32 %v0_10c3d, %v1_10c3d
  store i32 %v2_10c3d, i32* %ecx.global-to-local, align 4
  %v7_10c45 = icmp sgt i32 %v2_10c33, 511
  br i1 %v7_10c45, label %dec_label_pc_10c47, label %dec_label_pc_10c63

dec_label_pc_10c47:                               ; preds = %dec_label_pc_10c3d
  %v2_10c4d = ashr i32 %v2_10c33, ptrtoint (i32* @global_var_9.953 to i32)
  br label %dec_label_pc_10c50

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10c47
  %storemerge = phi i32 [ %v1_10c9d, %dec_label_pc_10c98 ], [ %v2_10c4d, %dec_label_pc_10c47 ]
  %v0_10c55 = phi i32 [ %v1_10c9d, %dec_label_pc_10c98 ], [ %v2_10c4d, %dec_label_pc_10c47 ]
  store i32 %storemerge, i32* %ecx.global-to-local, align 4
  %v2_10c50 = mul i32 %v0_10c55, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10c50 = add i32 %v2_10c50, %v3_10c38
  store i32 %v3_10c50, i32* %ebx.global-to-local, align 4
  %v1_10c53 = inttoptr i32 %v3_10c50 to i32*
  %v2_10c53 = load i32, i32* %v1_10c53, align 4
  store i32 %v2_10c53, i32* %eax.global-to-local, align 4
  %v2_10c55 = shl i32 %v0_10c55, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_10c58 = sub i32 %v2_10c33, %v2_10c55
  %v1_10c5a = add i32 %v2_10c53, 512
  store i32 %v1_10c5a, i32* %ebp.global-to-local, align 4
  %v2_10c60 = mul i32 %v2_10c58, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_10c60 = add i32 %v2_10c60, %v2_10c53
  store i32 %v3_10c60, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_10c63

dec_label_pc_10c63:                               ; preds = %dec_label_pc_10c3d, %dec_label_pc_10c50
  %v0_10c6e = phi i32 [ %v0_10c6e8, %dec_label_pc_10c3d ], [ %v2_10c53, %dec_label_pc_10c50 ]
  %v1_10c6e = load i32, i32* %esi.global-to-local, align 4
  %v2_10c6e = add i32 %v1_10c6e, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10c6e = inttoptr i32 %v2_10c6e to i32*
  store i32 %v0_10c6e, i32* %v3_10c6e, align 4
  %v0_10c71 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_10c71, i32* %eax.global-to-local, align 4
  %v0_10c73 = load i32, i32* %ecx.global-to-local, align 4
  %v2_10c73 = inttoptr i32 %v0_10c71 to i32*
  store i32 %v0_10c73, i32* %v2_10c73, align 4
  %v0_10c75 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10c75 = load i32, i32* %esi.global-to-local, align 4
  %v2_10c75 = add i32 %v1_10c75, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10c75 = inttoptr i32 %v2_10c75 to i32*
  store i32 %v0_10c75, i32* %v3_10c75, align 4
  %v0_10c78 = load i32, i32* %ebx.global-to-local, align 4
  %v1_10c78 = load i32, i32* %esi.global-to-local, align 4
  %v2_10c78 = add i32 %v1_10c78, 12
  %v3_10c78 = inttoptr i32 %v2_10c78 to i32*
  store i32 %v0_10c78, i32* %v3_10c78, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_10ca5, label %dec_label_pc_10c7d

dec_label_pc_10c7d:                               ; preds = %dec_label_pc_10c63
  store i32 %v0_10be3, i32* %ebx.global-to-local, align 4
  store i32 %v0_10bff, i32* %esi.global-to-local, align 4
  store i32 %v0_10bf7, i32* %edi.global-to-local, align 4
  store i32 %v0_10c0d, i32* %ebp.global-to-local, align 4
  %v0_10c90 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10c90

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c33
  %v2_10c9a = lshr i32 %v2_10c33, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_10c9d = or i32 %v2_10c9a, -8388608
  br label %dec_label_pc_10c50

dec_label_pc_10ca5:                               ; preds = %dec_label_pc_10c63
  %v0_10ca3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10ca3

; uselistorder directives
  uselistorder i32 %v2_10c53, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10c4d, { 1, 0 }
  uselistorder i32 %v2_10c33, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10c35, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_10c63, { 1, 0 }
}

define i32 @_ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEj(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10cb0:
  %ebp.global-to-local = alloca i32, align 4
  %tmp108 = ptrtoint i32* %arg1 to i32
  store i32 %tmp108, i32* @edi, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_10ccb = add i32 %tmp108, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_10ccb = inttoptr i32 %v1_10ccb to i32*
  %v3_10ccb = load i32, i32* %v2_10ccb, align 4
  store i32 %v3_10ccb, i32* @eax, align 4
  %v1_10cce = add i32 %tmp108, 24
  %v2_10cce = inttoptr i32 %v1_10cce to i32*
  %v3_10cce = load i32, i32* %v2_10cce, align 4
  %v2_10cd1 = add i32 %tmp108, 28
  %v3_10cd1 = inttoptr i32 %v2_10cd1 to i32*
  %v4_10cd1 = load i32, i32* %v3_10cd1, align 4
  %v5_10cd1 = sub i32 %v3_10cce, %v4_10cd1
  %v2_10cd6 = add i32 %tmp108, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_10cd6 = inttoptr i32 %v2_10cd6 to i32*
  %v4_10cd6 = load i32, i32* %v3_10cd6, align 4
  %v5_10cd6 = sub i32 %v3_10ccb, %v4_10cd6
  %v2_10cd9 = sdiv i32 %v5_10cd6, 4
  %v1_10cdc = add nsw i32 %v2_10cd9, -1
  %v2_10cdf = shl i32 %v1_10cdc, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_10ce2 = add i32 %v2_10cdf, %v5_10cd1
  %v1_10ce4 = add i32 %tmp108, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_10ce4 = inttoptr i32 %v1_10ce4 to i32*
  %v3_10ce4 = load i32, i32* %v2_10ce4, align 4
  %v2_10ce7 = add i32 %tmp108, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10ce7 = inttoptr i32 %v2_10ce7 to i32*
  %v4_10ce7 = load i32, i32* %v3_10ce7, align 4
  %v5_10ce7 = sub i32 %v3_10ce4, %v4_10ce7
  %v2_10cea = add i32 %v5_10ce7, %v2_10ce2
  %v1_10cec = sub i32 -1, %v2_10cea
  %v7_10cee = icmp ult i32 %v1_10cec, %arg2
  br i1 %v7_10cee, label %bb, label %dec_label_pc_10cf2

bb:                                               ; preds = %dec_label_pc_10cb0
  %v3_10cf0 = call i32 @function_10d5e(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v1_10cf2.pre = load i32, i32* @edi, align 4
  %v0_10cf4.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_10cf2

dec_label_pc_10cf2:                               ; preds = %dec_label_pc_10cb0, %bb
  %v0_10cf4 = phi i32 [ %v0_10cf4.pre, %bb ], [ %arg2, %dec_label_pc_10cb0 ]
  %v0_10d18 = phi i32 [ %v1_10cf2.pre, %bb ], [ %tmp108, %dec_label_pc_10cb0 ]
  %v0_10cf2 = phi i32 [ %v3_10cf0, %bb ], [ %v3_10ccb, %dec_label_pc_10cb0 ]
  %v2_10cf2 = inttoptr i32 %v0_10d18 to i32*
  %v3_10cf2 = load i32, i32* %v2_10cf2, align 4
  %v4_10cf2 = sub i32 %v0_10cf2, %v3_10cf2
  %v1_10cf4 = add i32 %v0_10cf4, 511
  %v2_10cfa = udiv i32 %v1_10cf4, 512
  %tmp115 = icmp ult i32 %v1_10cf4, 512
  store i32 %v2_10cfa, i32* %ebp.global-to-local, align 4
  %v1_10cfd = add nuw nsw i32 %v2_10cfa, 1
  %v2_10d00 = sdiv i32 %v4_10cf2, 4
  %v2_10d05 = add i32 %v0_10d18, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10d05 = inttoptr i32 %v2_10d05 to i32*
  %v4_10d05 = load i32, i32* %v3_10d05, align 4
  %v5_10d05 = sub i32 %v4_10d05, %v2_10d00
  %tmp116 = icmp ugt i32 %v1_10cfd, %v5_10d05
  br i1 %tmp116, label %dec_label_pc_10d0c, label %dec_label_pc_10d20

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10cf2
  %v2_10d1b = call i32 @unknown_213b0(i32 %v0_10d18, i32 0)
  br label %dec_label_pc_10d20

dec_label_pc_10d20:                               ; preds = %dec_label_pc_10cf2, %dec_label_pc_10d0c
  %v2_10d335 = phi i32 [ %v2_10d1b, %dec_label_pc_10d0c ], [ %v5_10d05, %dec_label_pc_10cf2 ]
  br i1 %tmp115, label %bb114, label %dec_label_pc_10d24

bb114:                                            ; preds = %dec_label_pc_10d20
  %v1_10d22 = call i32 @function_10d49()
  br label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %bb114, %dec_label_pc_10d20
  %v2_10d33 = phi i32 [ %v1_10d22, %bb114 ], [ %v2_10d335, %dec_label_pc_10d20 ]
  ret i32 %v2_10d33

; uselistorder directives
  uselistorder i32 %v5_10d05, { 1, 0 }
  uselistorder i32 %v2_10cfa, { 1, 0 }
  uselistorder i32 %tmp108, { 0, 2, 1, 3, 4, 6, 5, 7 }
  uselistorder label %dec_label_pc_10d20, { 1, 0 }
  uselistorder label %dec_label_pc_10cf2, { 1, 0 }
}

define i32 @function_10d49() local_unnamed_addr {
dec_label_pc_10d49:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v3_10d4d = xor i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v4_10d4d = icmp eq i32 %v3_10d4d, 0
  store i32 %v3_10d4d, i32* @eax, align 4
  %v1_10d54 = icmp eq i1 %v4_10d4d, false
  br i1 %v1_10d54, label %bb, label %dec_label_pc_10d56

bb:                                               ; preds = %dec_label_pc_10d49
  %v2_10d54 = call i32 @function_10d6a()
  br label %dec_label_pc_10d56

dec_label_pc_10d56:                               ; preds = %bb, %dec_label_pc_10d49
  %v0_10d5d = phi i32 [ %v2_10d54, %bb ], [ %v3_10d4d, %dec_label_pc_10d49 ]
  ret i32 %v0_10d5d
}

define i32 @function_10d5e(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d5e:
  %v3_10d5e = load i32, i32* @eax, align 4
  ret i32 %v3_10d5e
}

define i32 @function_10d6a() local_unnamed_addr {
dec_label_pc_10d6a:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10d7f() local_unnamed_addr {
dec_label_pc_10d7f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_10d88() local_unnamed_addr {
dec_label_pc_10d88:
  %eax.global-to-local = alloca i32, align 4
  %v0_10d88 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10d88
}

define i32 @function_10d95() local_unnamed_addr {
dec_label_pc_10d95:
  %v0_10d95 = call i32 @function_10d7f()
  ret i32 %v0_10d95
}

define i32 @function_10d9c() local_unnamed_addr {
dec_label_pc_10d9c:
  %eax.global-to-local = alloca i32, align 4
  %v0_10d9c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10d9c
}

define i32 @_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10db0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp116 = ptrtoint i32* %arg1 to i32
  %v0_10db0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_10db1 = load i32, i32* %edi.global-to-local, align 4
  %v0_10db2 = load i32, i32* %esi.global-to-local, align 4
  %v0_10db3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 %arg4, i32* %eax.global-to-local, align 4
  %v1_10dd4 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10dd4 = inttoptr i32 %v1_10dd4 to i32*
  %v3_10dd4 = load i32, i32* %v2_10dd4, align 4
  store i32 %v3_10dd4, i32* %edi.global-to-local, align 4
  %v1_10dd7 = add i32 %arg4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_10dd7 = inttoptr i32 %v1_10dd7 to i32*
  %v3_10dd7 = load i32, i32* %v2_10dd7, align 4
  store i32 %v3_10dd7, i32* %ebx.global-to-local, align 4
  %v1_10dda = inttoptr i32 %arg4 to i32*
  %v2_10dda = load i32, i32* %v1_10dda, align 4
  store i32 %v2_10dda, i32* %edx.global-to-local, align 4
  %v1_10ddc = add i32 %arg4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_10ddc = inttoptr i32 %v1_10ddc to i32*
  %v3_10ddc = load i32, i32* %v2_10ddc, align 4
  store i32 %v3_10ddc, i32* %esi.global-to-local, align 4
  %v1_10ddf = add i32 %arg4, 12
  %v2_10ddf = inttoptr i32 %v1_10ddf to i32*
  %v3_10ddf = load i32, i32* %v2_10ddf, align 4
  store i32 %v3_10ddf, i32* %ebp.global-to-local, align 4
  %v1_10de6 = inttoptr i32 %arg2 to i32*
  %v2_10de6 = load i32, i32* %v1_10de6, align 4
  store i32 %v2_10de6, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v1_10dec = add i32 %arg2, 12
  %v2_10dec = inttoptr i32 %v1_10dec to i32*
  %v3_10dec = load i32, i32* %v2_10dec, align 4
  store i32 %v3_10dec, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  %v1_10dfa = add i32 %arg3, 12
  %v2_10dfa = inttoptr i32 %v1_10dfa to i32*
  %v3_10dfa = load i32, i32* %v2_10dfa, align 4
  %v6_10dfd = sub i32 %v3_10dfa, %v3_10dec
  %v2_10e01 = sdiv i32 %v6_10dfd, 4
  store i32 %v2_10e01, i32* %ecx.global-to-local, align 4
  %v1_10e04 = add nsw i32 %v2_10e01, -1
  store i32 %v1_10e04, i32* %ebx.global-to-local, align 4
  %v1_10e07 = inttoptr i32 %arg3 to i32*
  %v2_10e07 = load i32, i32* %v1_10e07, align 4
  store i32 %v2_10e07, i32* %ecx.global-to-local, align 4
  %v2_10e09 = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10e09 = inttoptr i32 %v2_10e09 to i32*
  %v4_10e09 = load i32, i32* %v3_10e09, align 4
  %v2_10e0c = shl i32 %v1_10e04, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_10e13 = sub i32 %v3_10dd4, %v2_10de6
  store i32 %v5_10e13, i32* %ebx.global-to-local, align 4
  %v5_10e09 = add i32 %v2_10e0c, %v2_10e07
  %v2_10e0f = sub i32 %v5_10e09, %v4_10e09
  %v2_10e16 = add i32 %v2_10e0f, %v5_10e13
  %v12_10e16 = icmp eq i32 %v2_10e16, 0
  store i32 %v2_10e16, i32* %ecx.global-to-local, align 4
  store i1 %v12_10e16, i1* %zf.global-to-local, align 1
  %tmp123 = icmp slt i32 %v2_10e16, 1
  br i1 %tmp123, label %dec_label_pc_10e78, label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10db0
  %v4_10df6 = inttoptr i32 %v3_10dec to i8*
  store i32 %v2_10de6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10e34.outer

dec_label_pc_10e34.outer:                         ; preds = %dec_label_pc_10e5b, %dec_label_pc_10e1c
  %stack_var_-52.0.ph = phi i32 [ %v3_10e5b, %dec_label_pc_10e5b ], [ %v3_10dd7, %dec_label_pc_10e1c ]
  %v2_10e3c.pre = phi i32 [ %v3_10e5b, %dec_label_pc_10e5b ], [ %v2_10dda, %dec_label_pc_10e1c ]
  %stack_var_-56.1.ph = phi i8* [ %stack_var_-56.2, %dec_label_pc_10e5b ], [ %v4_10df6, %dec_label_pc_10e1c ]
  br label %dec_label_pc_10e34

dec_label_pc_10e28:                               ; preds = %dec_label_pc_10e34
  %v0_10e28 = load i32, i32* %edx.global-to-local, align 4
  %v1_10e28 = add i32 %v0_10e28, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_10e28, i32* %edx.global-to-local, align 4
  %v1_10e2b = load i32, i32* %esi.global-to-local, align 4
  %v12_10e2b = icmp eq i32 %v1_10e28, %v1_10e2b
  store i1 %v12_10e2b, i1* %zf.global-to-local, align 1
  br i1 %v12_10e2b, label %dec_label_pc_10e5b, label %dec_label_pc_10e2f

dec_label_pc_10e2f:                               ; preds = %dec_label_pc_10e28, %dec_label_pc_10e40
  %v2_10e3c6 = phi i32 [ %v1_10e28, %dec_label_pc_10e28 ], [ %v1_10e44, %dec_label_pc_10e40 ]
  %stack_var_-56.0 = phi i8* [ %stack_var_-56.1, %dec_label_pc_10e28 ], [ %v4_10e4f, %dec_label_pc_10e40 ]
  %v0_10e2f = load i32, i32* %ecx.global-to-local, align 4
  %v1_10e2f = sub i32 %v0_10e2f, ptrtoint (i8** @global_var_1.820 to i32)
  %v10_10e2f = icmp eq i32 %v1_10e2f, 0
  store i1 %v10_10e2f, i1* %zf.global-to-local, align 1
  store i32 %v1_10e2f, i32* %ecx.global-to-local, align 4
  br i1 %v10_10e2f, label %dec_label_pc_10e78, label %dec_label_pc_10e34

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e34.outer, %dec_label_pc_10e2f
  %v2_10e3c = phi i32 [ %v2_10e3c6, %dec_label_pc_10e2f ], [ %v2_10e3c.pre, %dec_label_pc_10e34.outer ]
  %stack_var_-56.1 = phi i8* [ %stack_var_-56.0, %dec_label_pc_10e2f ], [ %stack_var_-56.1.ph, %dec_label_pc_10e34.outer ]
  %v0_10e34 = load i32, i32* %eax.global-to-local, align 4
  %v1_10e34 = inttoptr i32 %v0_10e34 to i8*
  %v2_10e34 = load i8, i8* %v1_10e34, align 1
  %v3_10e34 = zext i8 %v2_10e34 to i32
  store i32 %v3_10e34, i32* %ebx.global-to-local, align 4
  %v1_10e37 = add i32 %v0_10e34, 1
  store i32 %v1_10e37, i32* %eax.global-to-local, align 4
  %v0_10e3a = load i32, i32* %edi.global-to-local, align 4
  %v12_10e3a = icmp eq i32 %v0_10e3a, %v1_10e37
  store i1 %v12_10e3a, i1* %zf.global-to-local, align 1
  %v3_10e3c = inttoptr i32 %v2_10e3c to i8*
  store i8 %v2_10e34, i8* %v3_10e3c, align 1
  %v0_10e3e = load i1, i1* %zf.global-to-local, align 1
  %v1_10e3e = icmp eq i1 %v0_10e3e, false
  br i1 %v1_10e3e, label %dec_label_pc_10e28, label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e34
  %v4_10e40 = ptrtoint i8* %stack_var_-56.1 to i32
  store i32 %v4_10e40, i32* %ebx.global-to-local, align 4
  %v0_10e44 = load i32, i32* %edx.global-to-local, align 4
  %v1_10e44 = add i32 %v0_10e44, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_10e44, i32* %edx.global-to-local, align 4
  %v1_10e47 = add i32 %v4_10e40, 4
  %v2_10e47 = inttoptr i32 %v1_10e47 to i32*
  %v3_10e47 = load i32, i32* %v2_10e47, align 4
  store i32 %v3_10e47, i32* %eax.global-to-local, align 4
  %v1_10e4a = add i32 %v4_10e40, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_10e4a, i32* %ebx.global-to-local, align 4
  %v1_10e4d = load i32, i32* %esi.global-to-local, align 4
  %v12_10e4d = icmp eq i32 %v1_10e44, %v1_10e4d
  store i1 %v12_10e4d, i1* %zf.global-to-local, align 1
  %v4_10e4f = inttoptr i32 %v1_10e4a to i8*
  %v1_10e53 = add i32 %v3_10e47, 512
  store i32 %v1_10e53, i32* %edi.global-to-local, align 4
  %v1_10e59 = icmp eq i1 %v12_10e4d, false
  br i1 %v1_10e59, label %dec_label_pc_10e2f, label %dec_label_pc_10e5b

dec_label_pc_10e5b:                               ; preds = %dec_label_pc_10e28, %dec_label_pc_10e40
  %stack_var_-56.2 = phi i8* [ %stack_var_-56.1, %dec_label_pc_10e28 ], [ %v4_10e4f, %dec_label_pc_10e40 ]
  %v0_10e5b = load i32, i32* %ebp.global-to-local, align 4
  %v1_10e5b = add i32 %v0_10e5b, 4
  %v2_10e5b = inttoptr i32 %v1_10e5b to i32*
  %v3_10e5b = load i32, i32* %v2_10e5b, align 4
  store i32 %v3_10e5b, i32* %edx.global-to-local, align 4
  %v1_10e5e = add i32 %v0_10e5b, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_10e5e, i32* %ebp.global-to-local, align 4
  %v1_10e63 = add i32 %v3_10e5b, 512
  store i32 %v1_10e63, i32* %esi.global-to-local, align 4
  %v0_10e69 = load i32, i32* %ecx.global-to-local, align 4
  %v1_10e69 = sub i32 %v0_10e69, ptrtoint (i8** @global_var_1.820 to i32)
  %v10_10e69 = icmp eq i32 %v1_10e69, 0
  store i1 %v10_10e69, i1* %zf.global-to-local, align 1
  store i32 %v1_10e69, i32* %ecx.global-to-local, align 4
  %v1_10e70 = icmp eq i1 %v10_10e69, false
  br i1 %v1_10e70, label %dec_label_pc_10e34.outer, label %dec_label_pc_10e78

dec_label_pc_10e78:                               ; preds = %dec_label_pc_10e5b, %dec_label_pc_10e2f, %dec_label_pc_10db0
  %v0_10e87 = phi i32 [ %v2_10dda, %dec_label_pc_10db0 ], [ %v2_10e3c6, %dec_label_pc_10e2f ], [ %v3_10e5b, %dec_label_pc_10e5b ]
  %stack_var_-52.1 = phi i32 [ %v3_10dd7, %dec_label_pc_10db0 ], [ %stack_var_-52.0.ph, %dec_label_pc_10e2f ], [ %v3_10e5b, %dec_label_pc_10e5b ]
  store i32 %tmp116, i32* %eax.global-to-local, align 4
  store i1 icmp eq (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), i1* %zf.global-to-local, align 1
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %ebx.global-to-local, align 4
  store i32 %v0_10e87, i32* %arg1, align 4
  store i32 %stack_var_-52.1, i32* %edx.global-to-local, align 4
  %v0_10e8d = load i32, i32* %esi.global-to-local, align 4
  %v2_10e8d = add i32 %tmp116, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_10e8d = inttoptr i32 %v2_10e8d to i32*
  store i32 %v0_10e8d, i32* %v3_10e8d, align 4
  %v0_10e90 = load i32, i32* %ebp.global-to-local, align 4
  %v1_10e90 = load i32, i32* %eax.global-to-local, align 4
  %v2_10e90 = add i32 %v1_10e90, 12
  %v3_10e90 = inttoptr i32 %v2_10e90 to i32*
  store i32 %v0_10e90, i32* %v3_10e90, align 4
  %v0_10e93 = load i32, i32* %edx.global-to-local, align 4
  %v1_10e93 = load i32, i32* %eax.global-to-local, align 4
  %v2_10e93 = add i32 %v1_10e93, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_10e93 = inttoptr i32 %v2_10e93 to i32*
  store i32 %v0_10e93, i32* %v3_10e93, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_10ea2, label %dec_label_pc_10e98

dec_label_pc_10e98:                               ; preds = %dec_label_pc_10e78
  %v0_10e98 = load i32, i32* @esp, align 4
  %v10_10e98 = icmp eq i32 %v0_10e98, -44
  store i1 %v10_10e98, i1* %zf.global-to-local, align 1
  store i32 %v0_10db3, i32* %ebx.global-to-local, align 4
  store i32 %v0_10db2, i32* %esi.global-to-local, align 4
  store i32 %v0_10db1, i32* %edi.global-to-local, align 4
  store i32 %v0_10db0, i32* %ebp.global-to-local, align 4
  %v0_10e9f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_10e9f

dec_label_pc_10ea2:                               ; preds = %dec_label_pc_10e78
  %v1_10e9f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_10e9f

; uselistorder directives
  uselistorder i32 %v3_10e5b, { 0, 1, 4, 5, 3, 2 }
  uselistorder i1 %v12_10e4d, { 1, 0 }
  uselistorder i32 %v1_10e44, { 0, 2, 1 }
  uselistorder i32 %v4_10e40, { 1, 0, 2 }
  uselistorder i8* %stack_var_-56.1, { 2, 0, 1 }
  uselistorder i1 %v12_10e2b, { 1, 0 }
  uselistorder i32 %v1_10e28, { 1, 0, 2 }
  uselistorder i32 %v2_10e01, { 1, 0 }
  uselistorder i32 %v3_10dec, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 4, 5, 6, 7, 2, 3, 8 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 1, 3, 2, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7, 8 }
  uselistorder i32* %ecx.global-to-local, { 1, 3, 0, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* @esp, { 27, 28, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 29, 30, 19, 31, 32, 33, 34, 35, 36, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 4, 3, 20, 55, 21, 22, 56, 60, 5, 61, 6, 23, 24, 25, 26, 7, 57, 58, 59, 8 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 4, 3 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10e5b, { 1, 0 }
  uselistorder label %dec_label_pc_10e34, { 1, 0 }
  uselistorder label %dec_label_pc_10e2f, { 1, 0 }
}

define i32 @_ZN5boost8signals26detail11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ES9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_S9_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaISA_EE18move_to_new_bufferEjRKNS_17integral_constantIbLb0EEE(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10eb0:
  %of.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @ebp, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 0, i32* @eax, align 4
  %tmp110 = sub i32 9, %arg2
  %v8_10ed3 = and i32 %tmp110, %arg2
  %v9_10ed3 = icmp slt i32 %v8_10ed3, 0
  store i1 %v9_10ed3, i1* %of.global-to-local, align 1
  %tmp113 = icmp ult i32 %arg2, 11
  br i1 %tmp113, label %bb, label %dec_label_pc_10ee0

bb:                                               ; preds = %dec_label_pc_10eb0
  %v4_10ede = inttoptr i32 %arg1 to i32*
  %v5_10ede = call i32 @function_10eff(i32* %v4_10ede)
  store i32 %v5_10ede, i32* @eax, align 4
  %v0_10ee0.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_10ee0

dec_label_pc_10ee0:                               ; preds = %bb, %dec_label_pc_10eb0
  %v0_10ee0 = phi i32 [ %v0_10ee0.pre, %bb ], [ %arg2, %dec_label_pc_10eb0 ]
  %tmp111 = sub i32 357913940, %v0_10ee0
  %v8_10ee0 = and i32 %tmp111, %v0_10ee0
  %v9_10ee0 = icmp slt i32 %v8_10ee0, 0
  store i1 %v9_10ee0, i1* %of.global-to-local, align 1
  %tmp114 = icmp ult i32 %v0_10ee0, 357913942
  br i1 %tmp114, label %dec_label_pc_10eec, label %bb112

bb112:                                            ; preds = %dec_label_pc_10ee0
  %v4_10ee6 = call i32 @function_10ff5()
  %v0_10eec.pre = load i32, i32* @ebp, align 4
  %v1_10ef0.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ee0, %bb112
  %v1_10ef0 = phi i1 [ %v9_10ee0, %dec_label_pc_10ee0 ], [ %v1_10ef0.pre, %bb112 ]
  %v0_10eec = phi i32 [ %v0_10ee0, %dec_label_pc_10ee0 ], [ %v0_10eec.pre, %bb112 ]
  %v2_10ef0 = mul i32 %v0_10eec, 12
  store i1 %v1_10ef0, i1* %of.global-to-local, align 1
  ret i32 %v2_10ef0

; uselistorder directives
  uselistorder i32 %v0_10ee0, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10eec, { 1, 0 }
}

define i32 @function_10eff(i32* %arg1) local_unnamed_addr {
dec_label_pc_10eff:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = ptrtoint i32* %arg1 to i32
  %v0_10eff = load i32, i32* @ebx, align 4
  %v1_10eff = add i32 %v0_10eff, ptrtoint (i32* @global_var_80.933 to i32)
  %v2_10eff = inttoptr i32 %v1_10eff to i32*
  %v3_10eff = load i32, i32* %v2_10eff, align 4
  store i32 %v3_10eff, i32* %eax.global-to-local, align 4
  %v1_10f05 = add i32 %v0_10eff, ptrtoint (i32* @global_var_7c.835 to i32)
  %v2_10f05 = inttoptr i32 %v1_10f05 to i32*
  %v3_10f05 = load i32, i32* %v2_10f05, align 4
  store i32 %v3_10f05, i32* %esi.global-to-local, align 4
  %v2_10f0b = mul i32 %v3_10eff, mul (i32 ptrtoint (i8** @global_var_4.814 to i32), i32 3)
  %v3_10f0b = add i32 %v3_10f05, %v2_10f0b
  store i32 %v3_10f0b, i32* %eax.global-to-local, align 4
  %v12_10f0e = icmp eq i32 %v2_10f0b, 0
  br i1 %v12_10f0e, label %dec_label_pc_10f7c, label %dec_label_pc_10f16

dec_label_pc_10f16:                               ; preds = %dec_label_pc_10eff
  store i32 %tmp21, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_10f1a

dec_label_pc_10f1a:                               ; preds = %dec_label_pc_10f70, %dec_label_pc_10f16
  %v0_10f52 = phi i32 [ %v1_10f70, %dec_label_pc_10f70 ], [ %v3_10f05, %dec_label_pc_10f16 ]
  %v1_10f5f = phi i32 [ %v1_10f73, %dec_label_pc_10f70 ], [ %tmp21, %dec_label_pc_10f16 ]
  %v1_10f1a = icmp eq i32 %v1_10f5f, 0
  br i1 %v1_10f1a, label %dec_label_pc_10f70, label %dec_label_pc_10f1e

dec_label_pc_10f1e:                               ; preds = %dec_label_pc_10f1a
  %v1_10f1e = inttoptr i32 %v0_10f52 to i32*
  %v2_10f1e = load i32, i32* %v1_10f1e, align 4
  %v2_10f22 = ashr i32 %v2_10f1e, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_10f25 = xor i32 %v2_10f22, %v2_10f1e
  store i32 %v2_10f25, i32* %eax.global-to-local, align 4
  store i32 %v2_10f25, i32* @0, align 4
  switch i32 %v2_10f25, label %dec_label_pc_10f50 [
    i32 0, label %dec_label_pc_10fb8
    i32 19, label %dec_label_pc_10fb8
    i32 2, label %dec_label_pc_10fb8
    i32 3, label %dec_label_pc_10fb8
    i32 4, label %dec_label_pc_10fb8
    i32 5, label %dec_label_pc_10fb8
    i32 6, label %dec_label_pc_10fb8
    i32 7, label %dec_label_pc_10fb8
    i32 8, label %dec_label_pc_10fb8
    i32 9, label %dec_label_pc_10fb8
    i32 10, label %dec_label_pc_10fb8
    i32 11, label %dec_label_pc_10fb8
    i32 12, label %dec_label_pc_10fb8
    i32 13, label %dec_label_pc_10fb8
    i32 14, label %dec_label_pc_10fb8
    i32 15, label %dec_label_pc_10fb8
    i32 16, label %dec_label_pc_10fb8
    i32 17, label %dec_label_pc_10fb8
    i32 18, label %dec_label_pc_10fb8
  ]

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10f1e
  %v2_10f50 = icmp slt i32 %v2_10f1e, 0
  %v1_10f52 = add i32 %v0_10f52, 4
  %v2_10f52 = inttoptr i32 %v1_10f52 to i32*
  %v3_10f52 = load i32, i32* %v2_10f52, align 4
  store i32 %v3_10f52, i32* %eax.global-to-local, align 4
  br i1 %v2_10f50, label %dec_label_pc_10fd5, label %dec_label_pc_10f57

dec_label_pc_10f57:                               ; preds = %dec_label_pc_10fd5, %dec_label_pc_10f50
  %v0_10f57 = phi i32 [ %v2_10fd5, %dec_label_pc_10fd5 ], [ %v3_10f52, %dec_label_pc_10f50 ]
  %v2_10f5f = add i32 %v1_10f5f, 4
  %v3_10f5f = inttoptr i32 %v2_10f5f to i32*
  store i32 %v0_10f57, i32* %v3_10f5f, align 4
  br label %dec_label_pc_10f62

dec_label_pc_10f62:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_10fcf, %dec_label_pc_10fc2, %dec_label_pc_10f57
  %v0_10f62 = load i32, i32* %esi.global-to-local, align 4
  %v1_10f62 = inttoptr i32 %v0_10f62 to i32*
  %v2_10f62 = load i32, i32* %v1_10f62, align 4
  %v2_10f66 = ashr i32 %v2_10f62, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_10f69 = xor i32 %v2_10f66, %v2_10f62
  store i32 %v2_10f69, i32* %eax.global-to-local, align 4
  %v1_10f6b = load i32, i32* %edi.global-to-local, align 4
  %v2_10f6b = inttoptr i32 %v1_10f6b to i32*
  store i32 %v2_10f69, i32* %v2_10f6b, align 4
  %v0_10f70.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_10f73.pre = load i32, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_10f70

dec_label_pc_10f70:                               ; preds = %dec_label_pc_10f62, %dec_label_pc_10f1a
  %v0_10f73 = phi i32 [ %v0_10f73.pre, %dec_label_pc_10f62 ], [ 0, %dec_label_pc_10f1a ]
  %v0_10f70 = phi i32 [ %v0_10f70.pre, %dec_label_pc_10f62 ], [ %v0_10f52, %dec_label_pc_10f1a ]
  %v1_10f70 = add i32 %v0_10f70, 12
  store i32 %v1_10f70, i32* %esi.global-to-local, align 4
  %v1_10f73 = add i32 %v0_10f73, 12
  store i32 %v1_10f73, i32* %edi.global-to-local, align 4
  %v15_10f76 = icmp eq i32 %v3_10f0b, %v1_10f70
  %v1_10f7a = icmp eq i1 %v15_10f76, false
  br i1 %v1_10f7a, label %dec_label_pc_10f1a, label %dec_label_pc_10f7c.loopexit

dec_label_pc_10f7c.loopexit:                      ; preds = %dec_label_pc_10f70
  br label %dec_label_pc_10f7c

dec_label_pc_10f7c:                               ; preds = %dec_label_pc_10f7c.loopexit, %dec_label_pc_10eff
  %v4_10f80 = icmp eq i32 %tmp12, ptrtoint ([2 x i8]* @2 to i32)
  store i32 %tmp21, i32* %eax.global-to-local, align 4
  %v1_10f8b = icmp eq i1 %v4_10f80, false
  br i1 %v1_10f8b, label %dec_label_pc_10ff0, label %dec_label_pc_10f8d

dec_label_pc_10f8d:                               ; preds = %dec_label_pc_10f7c
  ret i32 %tmp21

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e, %dec_label_pc_10f1e
  %v2_10fb8 = icmp slt i32 %v2_10f1e, 0
  %v1_10fba = add i32 %v0_10f52, 4
  %v2_10fba = inttoptr i32 %v1_10fba to i32*
  %v3_10fba = load i32, i32* %v2_10fba, align 4
  store i32 %v3_10fba, i32* %eax.global-to-local, align 4
  store i32 %v0_10f52, i32* %esi.global-to-local, align 4
  br i1 %v2_10fb8, label %dec_label_pc_10fdc, label %dec_label_pc_10fc2

dec_label_pc_10fc2:                               ; preds = %dec_label_pc_10fb8
  %v2_10fc2 = add i32 %v1_10f5f, 4
  %v3_10fc2 = inttoptr i32 %v2_10fc2 to i32*
  store i32 %v3_10fba, i32* %v3_10fc2, align 4
  %v0_10fc5 = load i32, i32* %esi.global-to-local, align 4
  %v1_10fc5 = add i32 %v0_10fc5, 8
  %v2_10fc5 = inttoptr i32 %v1_10fc5 to i32*
  %v3_10fc5 = load i32, i32* %v2_10fc5, align 4
  store i32 %v3_10fc5, i32* %eax.global-to-local, align 4
  %v1_10fc8 = icmp eq i32 %v3_10fc5, 0
  %v1_10fca = load i32, i32* %edi.global-to-local, align 4
  %v2_10fca = add i32 %v1_10fca, 8
  %v3_10fca = inttoptr i32 %v2_10fca to i32*
  store i32 %v3_10fc5, i32* %v3_10fca, align 4
  br i1 %v1_10fc8, label %dec_label_pc_10f62, label %dec_label_pc_10fcf

dec_label_pc_10fcf:                               ; preds = %dec_label_pc_10fdc, %dec_label_pc_10fc2
  %v0_10fcf = load i32, i32* %eax.global-to-local, align 4
  %v1_10fcf = add i32 %v0_10fcf, 4
  %v2_10fcf = inttoptr i32 %v1_10fcf to i32*
  %v3_10fcf = load i32, i32* %v2_10fcf, align 4
  %v4_10fcf = add i32 %v3_10fcf, 1
  store i32 %v4_10fcf, i32* %v2_10fcf, align 4
  br label %dec_label_pc_10f62

dec_label_pc_10fd5:                               ; preds = %dec_label_pc_10f50
  %v1_10fd5 = inttoptr i32 %v3_10f52 to i32*
  %v2_10fd5 = load i32, i32* %v1_10fd5, align 4
  store i32 %v2_10fd5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_10f57

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10fb8
  %v1_10fdc = inttoptr i32 %v3_10fba to i32*
  %v2_10fdc = load i32, i32* %v1_10fdc, align 4
  %v2_10fde = add i32 %v1_10f5f, 4
  %v3_10fde = inttoptr i32 %v2_10fde to i32*
  store i32 %v2_10fdc, i32* %v3_10fde, align 4
  %v0_10fe1 = load i32, i32* %eax.global-to-local, align 4
  %v1_10fe1 = add i32 %v0_10fe1, 4
  %v2_10fe1 = inttoptr i32 %v1_10fe1 to i32*
  %v3_10fe1 = load i32, i32* %v2_10fe1, align 4
  store i32 %v3_10fe1, i32* %eax.global-to-local, align 4
  %v1_10fe4 = icmp eq i32 %v3_10fe1, 0
  %v1_10fe6 = load i32, i32* %edi.global-to-local, align 4
  %v2_10fe6 = add i32 %v1_10fe6, 8
  %v3_10fe6 = inttoptr i32 %v2_10fe6 to i32*
  store i32 %v3_10fe1, i32* %v3_10fe6, align 4
  %v1_10fe9 = icmp eq i1 %v1_10fe4, false
  br i1 %v1_10fe9, label %dec_label_pc_10fcf, label %dec_label_pc_10f62

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10f7c
  ret i32 %tmp21

; uselistorder directives
  uselistorder i32 %v2_10fd5, { 1, 0 }
  uselistorder i32 %v1_10f73, { 1, 0 }
  uselistorder i32 %v1_10f70, { 0, 2, 1 }
  uselistorder i32 %v3_10f52, { 1, 0, 2 }
  uselistorder i32 %v2_10f25, { 1, 0, 2 }
  uselistorder i32 %v2_10f1e, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10f5f, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10f52, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_10f0b, { 1, 0 }
  uselistorder i32 %v3_10f05, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 4, 0, 3, 1, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 3, 5, 1, 2, 4, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 16, { 1, 0, 2 }
  uselistorder i32 9, { 1, 0 }
  uselistorder i32 8, { 9, 10, 11, 12, 8, 13, 14, 15, 16, 17, 18, 0, 1, 19, 2, 3, 4, 5, 20, 22, 23, 21, 24, 6, 7 }
  uselistorder i32 7, { 8, 0, 1, 2, 3, 9, 4, 5, 10, 6, 7 }
  uselistorder i32 3, { 7, 0, 8, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_10fb8, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 17, 18 }
}

define i32 @function_10ff5() local_unnamed_addr {
dec_label_pc_10ff5:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11001() local_unnamed_addr {
dec_label_pc_11001:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_11001 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11001 = add i32 %v0_11001, 958145652
  %v2_11001 = inttoptr i32 %v1_11001 to i32*
  %v3_11001 = load i32, i32* %v2_11001, align 4
  %v4_11001 = add i32 %v3_11001, -1
  store i32 %v4_11001, i32* %v2_11001, align 4
  %v0_11007 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11007 = load i32, i32* %ecx.global-to-local, align 4
  %v2_11007 = mul i32 %v1_11007, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_11007 = add i32 %v0_11007, -119
  %v4_11007 = add i32 %v3_11007, %v2_11007
  %v5_11007 = inttoptr i32 %v4_11007 to i32*
  %v6_11007 = load i32, i32* %v5_11007, align 4
  %v7_11007 = load i32, i32* %eax.global-to-local, align 4
  %v8_11007 = zext i32 %v7_11007 to i64
  %v9_11007 = load i32, i32* %edx.global-to-local, align 4
  %v10_11007 = zext i32 %v9_11007 to i64
  %v11_11007 = mul nuw i64 %v10_11007, 4294967296
  %v12_11007 = or i64 %v11_11007, %v8_11007
  %v13_11007 = zext i32 %v6_11007 to i64
  %v14_11007 = udiv i64 %v12_11007, %v13_11007
  %v15_11007 = trunc i64 %v14_11007 to i32
  %v16_11007 = urem i64 %v12_11007, %v13_11007
  %v17_11007 = trunc i64 %v16_11007 to i32
  store i32 %v17_11007, i32* %edx.global-to-local, align 4
  %v1_1100b = trunc i64 %v14_11007 to i32
  %v2_1100b = xor i32 %v1_1100b, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  %v8_1100b = and i32 %v2_1100b, 255
  %v10_1100b = and i32 %v15_11007, -256
  %v11_1100b = or i32 %v8_1100b, %v10_1100b
  store i32 %v11_1100b, i32* %eax.global-to-local, align 4
  %v0_1100d = call i32 @unknown_1a800()
  store i32 %v0_1100d, i32* %eax.global-to-local, align 4
  %v0_11012 = load i32, i32* %esi.global-to-local, align 4
  %v1_11012 = add i32 %v0_11012, 12
  store i32 %v1_11012, i32* %esi.global-to-local, align 4
  ret i32 %v0_1100d
}

define i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_() local_unnamed_addr {
dec_label_pc_11090:
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  store i32 0, i32* @eax, align 4
  %v1_110c2 = add i32 %tmp18, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_110c2 = inttoptr i32 %v1_110c2 to i32*
  %v3_110c2 = load i32, i32* %v2_110c2, align 4
  %v2_110c5 = add i32 %tmp18, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_110c5 = inttoptr i32 %v2_110c5 to i32*
  %v4_110c5 = load i32, i32* %v3_110c5, align 4
  %v15_110c5 = icmp eq i32 %v3_110c2, %v4_110c5
  br i1 %v15_110c5, label %bb, label %dec_label_pc_110d1

bb:                                               ; preds = %dec_label_pc_11090
  %v3_110cf = call i32 @function_11128(i32 ptrtoint ([2 x i8]* @2 to i32))
  %v0_110d1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_110d1

dec_label_pc_110d1:                               ; preds = %bb, %dec_label_pc_11090
  %v0_110d1 = phi i32 [ %v0_110d1.pre, %bb ], [ %v3_110c2, %dec_label_pc_11090 ]
  %v1_110d3 = inttoptr i32 %v0_110d1 to i32*
  %v2_110d3 = load i32, i32* %v1_110d3, align 4
  %v2_110d7 = ashr i32 %v2_110d3, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_110da = xor i32 %v2_110d7, %v2_110d3
  store i32 %v2_110da, i32* @eax, align 4
  %tmp24 = icmp ult i32 %v2_110da, 20
  br i1 %tmp24, label %bb23, label %dec_label_pc_110e1

bb23:                                             ; preds = %dec_label_pc_110d1
  %v3_110df = call i32 @function_11160()
  br label %dec_label_pc_110e1

dec_label_pc_110e1:                               ; preds = %bb23, %dec_label_pc_110d1
  %v3_110f9 = phi i32 [ %v3_110df, %bb23 ], [ %v2_110da, %dec_label_pc_110d1 ]
  ret i32 %v3_110f9

; uselistorder directives
  uselistorder i32 %v2_110da, { 1, 0, 2 }
  uselistorder i32 %v3_110c2, { 1, 0 }
  uselistorder i32 %tmp18, { 1, 0 }
}

define i32 @function_11105() local_unnamed_addr {
dec_label_pc_11105:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11110() local_unnamed_addr {
dec_label_pc_11110:
  %v0_11110 = load i32, i32* @eax, align 4
  %v1_11110 = load i32, i32* @ecx, align 4
  %v2_11110 = mul i32 %v1_11110, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_11110 = add i32 %v0_11110, -117
  %v4_11110 = add i32 %v3_11110, %v2_11110
  %v5_11110 = inttoptr i32 %v4_11110 to i8*
  %v6_11110 = load i8, i8* %v5_11110, align 1
  %v8_11110 = shl i8 %v6_11110, ptrtoint ([6 x i8]* @global_var_10.833 to i8)
  store i8 %v8_11110, i8* %v5_11110, align 1
  %v3_1111b = load i32, i32* @eax, align 4
  ret i32 %v3_1111b

; uselistorder directives
  uselistorder i8 ptrtoint ([6 x i8]* @global_var_10.833 to i8), { 1, 0 }
}

define i32 @function_11128(i32 %arg1) local_unnamed_addr {
dec_label_pc_11128:
  %v4_1112c = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_11133 = icmp eq i1 %v4_1112c, false
  br i1 %v1_11133, label %bb, label %dec_label_pc_11128.dec_label_pc_11139_crit_edge

dec_label_pc_11128.dec_label_pc_11139_crit_edge:  ; preds = %dec_label_pc_11128
  %v0_11158.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11139

bb:                                               ; preds = %dec_label_pc_11128
  %v2_11133 = call i32 @function_119a0()
  br label %dec_label_pc_11139

dec_label_pc_11139:                               ; preds = %dec_label_pc_11128.dec_label_pc_11139_crit_edge, %bb
  %v0_11158 = phi i32 [ %v0_11158.pre, %dec_label_pc_11128.dec_label_pc_11139_crit_edge ], [ %v2_11133, %bb ]
  ret i32 %v0_11158

; uselistorder directives
  uselistorder label %dec_label_pc_11139, { 1, 0 }
}

define i32 @function_11150() local_unnamed_addr {
dec_label_pc_11150:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11160() local_unnamed_addr {
dec_label_pc_11160:
  %v0_11160 = load i32, i32* @eax, align 4
  ret i32 %v0_11160
}

define i32 @function_111a7() local_unnamed_addr {
dec_label_pc_111a7:
  %eax.global-to-local = alloca i32, align 4
  %v0_111a7 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_111a7
}

define i32 @function_111d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_111d0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_111e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_111e4:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11219(i32* %arg1) local_unnamed_addr {
dec_label_pc_11219:
  %ebp.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %tmp103 = ptrtoint i32* %arg1 to i32
  %v0_11219 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11219 = add i32 %v0_11219, ptrtoint (i32* @global_var_b6.976 to i32)
  %v2_11219 = inttoptr i32 %v1_11219 to i32*
  %v3_11219 = load i32, i32* %v2_11219, align 4
  %v4_11219 = sub i32 %v3_11219, ptrtoint (i8** @global_var_1.820 to i32)
  %v13_11219 = icmp slt i32 %v4_11219, 0
  store i1 %v13_11219, i1* %sf.global-to-local, align 1
  store i32 %v4_11219, i32* %v2_11219, align 4
  %v0_1121f = load i32, i32* %ebp.global-to-local, align 4
  %v1_1121f = add i32 %v0_1121f, 71797714
  %v2_1121f = inttoptr i32 %v1_1121f to i8*
  %v3_1121f = load i8, i8* %v2_1121f, align 1
  %v4_1121f = load i32, i32* @eax, align 4
  %v5_1121f = trunc i32 %v4_1121f to i8
  %v6_1121f = add i8 %v5_1121f, %v3_1121f
  %v17_1121f = icmp slt i8 %v6_1121f, 0
  store i1 %v17_1121f, i1* %sf.global-to-local, align 1
  store i8 %v6_1121f, i8* %v2_1121f, align 1
  %v0_11225 = load i1, i1* %sf.global-to-local, align 1
  br i1 %v0_11225, label %bb, label %dec_label_pc_11219.dec_label_pc_1122b_crit_edge

dec_label_pc_11219.dec_label_pc_1122b_crit_edge:  ; preds = %dec_label_pc_11219
  %v0_1122b.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1122b

bb:                                               ; preds = %dec_label_pc_11219
  %v1_11225 = call i32 @function_11528()
  store i32 %v1_11225, i32* @eax, align 4
  br label %dec_label_pc_1122b

dec_label_pc_1122b:                               ; preds = %dec_label_pc_11219.dec_label_pc_1122b_crit_edge, %bb
  %v0_1122b = phi i32 [ %v0_1122b.pre, %dec_label_pc_11219.dec_label_pc_1122b_crit_edge ], [ %v1_11225, %bb ]
  %v1_1122b = icmp eq i32 %v0_1122b, 0
  %v2_1122b = icmp slt i32 %v0_1122b, 0
  store i1 %v2_1122b, i1* %sf.global-to-local, align 1
  br i1 %v1_1122b, label %bb109, label %dec_label_pc_11233

bb109:                                            ; preds = %dec_label_pc_1122b
  %v1_1122d = call i32 @function_11acf()
  br label %dec_label_pc_11233

dec_label_pc_11233:                               ; preds = %bb109, %dec_label_pc_1122b
  store i32 %tmp103, i32* @eax, align 4
  %v1_11262 = icmp eq i32* %arg1, null
  %v2_11262 = icmp slt i32* %arg1, null
  store i1 %v2_11262, i1* %sf.global-to-local, align 1
  br i1 %v1_11262, label %bb110, label %dec_label_pc_1126a

bb110:                                            ; preds = %dec_label_pc_11233
  %v2_11264 = call i32 @function_111e4(i32 %tmp103)
  store i32 %v2_11264, i32* @eax, align 4
  br label %dec_label_pc_1126a

dec_label_pc_1126a:                               ; preds = %bb110, %dec_label_pc_11233
  %v0_1126a = phi i32 [ %v2_11264, %bb110 ], [ %tmp103, %dec_label_pc_11233 ]
  %v1_11272 = call i32 @function_111e4(i32 %v0_1126a)
  ret i32 %v1_11272

; uselistorder directives
  uselistorder label %dec_label_pc_1122b, { 1, 0 }
}

define i32 @function_11278() local_unnamed_addr {
dec_label_pc_11278:
  %v0_1127c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1128c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1129c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112ac = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112bc = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112cc = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112dc = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112ec = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_112fc = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1130c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1131c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1132c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1133c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1134c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1135c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1136c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  %v0_1137c = call i32 @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_()
  ret i32 %v0_1137c

; uselistorder directives
  uselistorder i32 ()* @_ZNK5boost8signals26detail15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvRK7uint25610ChangeTypeNS_8functionIFvSB_SC_EEEEENS0_5mutexEE27nolock_grab_tracked_objectsISt20back_insert_iteratorINS1_11auto_bufferINS_7variantINS_10shared_ptrIvEENS1_23foreign_void_shared_ptrENS_6detail7variant5void_ESS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_SS_EENS1_15store_n_objectsILj10EEENS1_19default_grow_policyESaIST_EEEEEEvT_, { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_1139d() local_unnamed_addr {
dec_label_pc_1139d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1139d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1139d
}

define i32 @function_1140d(i32 %arg1) local_unnamed_addr {
dec_label_pc_1140d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11430(i32 %arg1) local_unnamed_addr {
dec_label_pc_11430:
  %stack_var_96 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_96, align 4
  %v0_11430 = load i32, i32* @eax, align 4
  %v1_11430 = trunc i32 %v0_11430 to i8
  %v2_11430 = and i8 %v1_11430, ptrtoint (i8* @global_var_f.946 to i8)
  %v8_11430 = zext i8 %v2_11430 to i32
  %v10_11430 = and i32 %v0_11430, -256
  %v11_11430 = or i32 %v8_11430, %v10_11430
  %v1_11435 = inttoptr i32 %v11_11430 to i8*
  %v2_11435 = load i8, i8* %v1_11435, align 1
  %v5_11435 = add i8 %v2_11435, %v2_11430
  store i8 %v5_11435, i8* %v1_11435, align 1
  %v3_11437 = load i32, i32* %stack_var_96, align 4
  %v2_11445 = ashr i32 %v3_11437, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_11448 = xor i32 %v2_11445, %v3_11437
  store i32 %v2_11448, i32* @eax, align 4
  %tmp14 = icmp ult i32 %v2_11448, 20
  br i1 %tmp14, label %bb, label %dec_label_pc_11453

bb:                                               ; preds = %dec_label_pc_11430
  %v2_1143b = ptrtoint i32* %stack_var_96 to i32
  %v4_1144d = call i32 @function_11588(i32 %v2_1143b)
  br label %dec_label_pc_11453

dec_label_pc_11453:                               ; preds = %bb, %dec_label_pc_11430
  %v3_1146b = phi i32 [ %v4_1144d, %bb ], [ %v2_11448, %dec_label_pc_11430 ]
  ret i32 %v3_1146b

; uselistorder directives
  uselistorder i32 %v2_11448, { 1, 0, 2 }
  uselistorder i32* %stack_var_96, { 1, 2, 0 }
  uselistorder i8* @global_var_f.946, { 1, 0 }
  uselistorder i8 ptrtoint (i8* @global_var_f.946 to i8), { 1, 0 }
}

define i32 @function_11478() local_unnamed_addr {
dec_label_pc_11478:
  %edx.global-to-local = alloca i32, align 4
  %v0_11478 = load i32, i32* %edx.global-to-local, align 4
  %v2_11478 = icmp slt i32 %v0_11478, 0
  br i1 %v2_11478, label %bb, label %dec_label_pc_11480

bb:                                               ; preds = %dec_label_pc_11478
  %v1_1147a = call i32 @function_11870()
  br label %dec_label_pc_11480

dec_label_pc_11480:                               ; preds = %bb, %dec_label_pc_11478
  %v0_11480 = load i32, i32* @edi, align 4
  %v1_11480 = add i32 %v0_11480, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11480 = inttoptr i32 %v1_11480 to i32*
  %v3_11480 = load i32, i32* %v2_11480, align 4
  store i32 %v3_11480, i32* %edx.global-to-local, align 4
  %v1_11485 = icmp eq i32 %v3_11480, 0
  br i1 %v1_11485, label %dec_label_pc_1148c, label %dec_label_pc_11489

dec_label_pc_11489:                               ; preds = %dec_label_pc_11480
  %v1_11489 = add i32 %v3_11480, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11489 = inttoptr i32 %v1_11489 to i32*
  %v3_11489 = load i32, i32* %v2_11489, align 4
  br label %dec_label_pc_1148c

dec_label_pc_1148c:                               ; preds = %dec_label_pc_11489, %dec_label_pc_11480
  %v2_1148e = phi i32 [ %v3_11489, %dec_label_pc_11489 ], [ 0, %dec_label_pc_11480 ]
  %v1_1148c = icmp eq i32 %v2_1148e, 0
  %v1_1148e = zext i1 %v1_1148c to i32
  %v3_1148e = and i32 %v2_1148e, -256
  %v4_1148e = or i32 %v1_1148e, %v3_1148e
  store i32 %v4_1148e, i32* @eax, align 4
  %v1_11491 = call i32 @function_1140d(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_11491
}

define i32 @function_11496(i32 %arg1) local_unnamed_addr {
dec_label_pc_11496:
  %v0_11496 = call i32 @function_11150()
  store i32 %arg1, i32* @eax, align 4
  %v1_114b8 = call i32 @function_111d0(i32 0)
  ret i32 %v1_114b8
}

define i32 @function_114c0() local_unnamed_addr {
dec_label_pc_114c0:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_80 = alloca i32, align 4
  %v0_114c0 = load i32, i32* %edi.global-to-local, align 4
  %v1_114c0 = add i32 %v0_114c0, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_114c0 = inttoptr i32 %v1_114c0 to i32*
  %v3_114c0 = load i32, i32* %v2_114c0, align 4
  %v1_114cf = add i32 %v3_114c0, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_114cf = inttoptr i32 %v1_114cf to i32*
  %v3_114cf = load i32, i32* %v2_114cf, align 4
  %v1_114d2 = icmp eq i32 %v3_114cf, 0
  store i32 %v3_114cf, i32* %stack_var_80, align 4
  br i1 %v1_114d2, label %bb, label %dec_label_pc_114de

bb:                                               ; preds = %dec_label_pc_114c0
  %v2_114d8 = call i32 @function_11576(i32 %v3_114c0)
  br label %dec_label_pc_114de

dec_label_pc_114de:                               ; preds = %bb, %dec_label_pc_114c0
  %v1_114de = add i32 %v3_114cf, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_114de = inttoptr i32 %v1_114de to i32*
  %v3_114de = load i32, i32* %v2_114de, align 4
  store i32 %v3_114de, i32* @eax, align 4
  br label %dec_label_pc_114e1

dec_label_pc_114e1:                               ; preds = %dec_label_pc_114e5, %dec_label_pc_114de
  %v0_114e5 = phi i32 [ %v3_114e8, %dec_label_pc_114e5 ], [ %v3_114de, %dec_label_pc_114de ]
  %v1_114e1 = icmp eq i32 %v0_114e5, 0
  br i1 %v1_114e1, label %bb112, label %dec_label_pc_114e5

dec_label_pc_114e5:                               ; preds = %dec_label_pc_114e1
  %v1_114e7 = add i32 %v0_114e5, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_114e8 = load i32, i32* %v2_114de, align 4
  %v16_114e8 = icmp eq i32 %v0_114e5, %v3_114e8
  %v23_114e8 = select i1 %v16_114e8, i32 %v1_114e7, i32 %v3_114e8
  store i32 %v23_114e8, i32* %v2_114de, align 4
  store i32 %v3_114e8, i32* @eax, align 4
  %v1_114ed = icmp eq i1 %v16_114e8, false
  br i1 %v1_114ed, label %dec_label_pc_114e1, label %dec_label_pc_114ef

dec_label_pc_114ef:                               ; preds = %dec_label_pc_114e5
  br label %dec_label_pc_114f3

bb112:                                            ; preds = %dec_label_pc_114e1
  %v1_114f1 = call i32 @function_1156e()
  br label %dec_label_pc_114f3

dec_label_pc_114f3:                               ; preds = %dec_label_pc_114ef, %bb112
  %v3_11505 = load i32, i32* %v2_114de, align 4
  %v4_11505 = add i32 %v3_11505, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11505, i32* %v2_114de, align 4
  %v2_11509 = ptrtoint i32* %stack_var_80 to i32
  %v1_11518 = call i32 @unknown_15a70(i32 %v2_11509)
  store i32 %v1_11518, i32* @eax, align 4
  %v1_1151d = call i32 @function_111e4(i32 %v2_11509)
  ret i32 %v1_1151d

; uselistorder directives
  uselistorder i32 %v2_11509, { 1, 0 }
  uselistorder i32 %v3_114e8, { 0, 3, 1, 2 }
  uselistorder i32* %v2_114de, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_114f3, { 1, 0 }
}

define i32 @function_11528() local_unnamed_addr {
dec_label_pc_11528:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_1152a = load i32, i32* @eax, align 4
  %v1_1152a = icmp eq i32 %v0_1152a, 0
  br i1 %v1_1152a, label %bb, label %dec_label_pc_11532

bb:                                               ; preds = %dec_label_pc_11528
  %v1_1152c = call i32 @function_11a59()
  br label %dec_label_pc_11532

dec_label_pc_11532:                               ; preds = %bb, %dec_label_pc_11528
  %v1_11569 = call i32 @function_111e4(i32 %tmp6)
  ret i32 %v1_11569

; uselistorder directives
  uselistorder i32 (i32)* @function_111e4, { 2, 3, 1, 0 }
}

define i32 @function_1156e() local_unnamed_addr {
dec_label_pc_1156e:
  %v3_1156e = load i32, i32* @eax, align 4
  ret i32 %v3_1156e
}

define i32 @function_11576(i32 %arg1) local_unnamed_addr {
dec_label_pc_11576:
  ret i32 %arg1
}

define i32 @function_11588(i32 %arg1) local_unnamed_addr {
dec_label_pc_11588:
  %v0_11588 = load i32, i32* @eax, align 4
  ret i32 %v0_11588
}

define i32 @function_1159d() local_unnamed_addr {
dec_label_pc_1159d:
  %eax.global-to-local = alloca i32, align 4
  %v0_1159d = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1159d
}

define i32 @function_115dd() local_unnamed_addr {
dec_label_pc_115dd:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_115e1() local_unnamed_addr {
dec_label_pc_115e1:
  %v0_115e1 = call i32 @function_115dd()
  ret i32 %v0_115e1
}

define i32 @function_11605() local_unnamed_addr {
dec_label_pc_11605:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11610() local_unnamed_addr {
dec_label_pc_11610:
  %eax.global-to-local = alloca i32, align 4
  %v0_11610 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11610
}

define i32 @function_1161e(i32 %arg1) local_unnamed_addr {
dec_label_pc_1161e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11627(i32 %arg1) local_unnamed_addr {
dec_label_pc_11627:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11660(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11660:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11660 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11660 = add i32 %v0_11660, 608472018
  %v2_11660 = inttoptr i32 %v1_11660 to i32*
  %v3_11660 = load i32, i32* %v2_11660, align 4
  %v4_11660 = add i32 %v3_11660, 1
  %v13_11660 = icmp slt i32 %v4_11660, 0
  store i32 %v4_11660, i32* %v2_11660, align 4
  br i1 %v13_11660, label %bb, label %dec_label_pc_11660.dec_label_pc_1166d_crit_edge

dec_label_pc_11660.dec_label_pc_1166d_crit_edge:  ; preds = %dec_label_pc_11660
  %v0_11671.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1166d

bb:                                               ; preds = %dec_label_pc_11660
  %v1_11666 = call i32 @function_119fa()
  br label %dec_label_pc_1166d

dec_label_pc_1166d:                               ; preds = %dec_label_pc_11660.dec_label_pc_1166d_crit_edge, %bb
  %v0_11671 = phi i32 [ %v0_11671.pre, %dec_label_pc_11660.dec_label_pc_1166d_crit_edge ], [ %v1_11666, %bb ]
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v2_11671 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11671 = inttoptr i32 %v2_11671 to i32*
  store i32 %v0_11671, i32* %v3_11671, align 4
  store i32 %arg2, i32* @eax, align 4
  %v1_11678 = icmp eq i32 %arg2, 0
  %v1_1167a = load i32, i32* %edx.global-to-local, align 4
  %v2_1167a = add i32 %v1_1167a, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_1167a = inttoptr i32 %v2_1167a to i32*
  store i32 %arg2, i32* %v3_1167a, align 4
  br i1 %v1_11678, label %bb101, label %dec_label_pc_1166d.dec_label_pc_1167f_crit_edge

dec_label_pc_1166d.dec_label_pc_1167f_crit_edge:  ; preds = %dec_label_pc_1166d
  %v0_1167f.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_1167f

bb101:                                            ; preds = %dec_label_pc_1166d
  %v1_1167d = call i32 @function_11605()
  store i32 %v1_1167d, i32* @eax, align 4
  br label %dec_label_pc_1167f

dec_label_pc_1167f:                               ; preds = %dec_label_pc_1166d.dec_label_pc_1167f_crit_edge, %bb101
  %v18_1167f = phi i32 [ %v0_1167f.pre, %dec_label_pc_1166d.dec_label_pc_1167f_crit_edge ], [ %v1_1167d, %bb101 ]
  %v1_1167f = add i32 %v18_1167f, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_1167f = inttoptr i32 %v1_1167f to i32*
  %v3_1167f = load i32, i32* %v2_1167f, align 4
  %v4_1167f = add i32 %v3_1167f, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_1167f, i32* %v2_1167f, align 4
  %v0_11683 = call i32 @function_11605()
  ret i32 %v0_11683

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1167f, { 1, 0 }
  uselistorder label %dec_label_pc_1166d, { 1, 0 }
}

define i32 @function_11691() local_unnamed_addr {
dec_label_pc_11691:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp93 = call i32 @__decompiler_undefined_function_0()
  %v3_11692 = load i32, i32* %ecx.global-to-local, align 4
  %v4_11692 = or i32 %v3_11692, %tmp93
  %v12_11692 = inttoptr i32 %tmp93 to i32*
  store i32 %v4_11692, i32* %v12_11692, align 4
  %v0_11694 = load i32, i32* %edi.global-to-local, align 4
  %v1_11694 = add i32 %v0_11694, -1929379836
  %v2_11694 = inttoptr i32 %v1_11694 to i8*
  %v3_11694 = load i8, i8* %v2_11694, align 1
  %v4_11694 = load i32, i32* %ebx.global-to-local, align 4
  %v5_11694 = trunc i32 %v4_11694 to i8
  store i8 %v5_11694, i8* %v2_11694, align 1
  %v9_11694 = zext i8 %v3_11694 to i32
  %v10_11694 = load i32, i32* %ebx.global-to-local, align 4
  %v11_11694 = and i32 %v10_11694, -256
  %v12_11694 = or i32 %v11_11694, %v9_11694
  store i32 %v12_11694, i32* %ebx.global-to-local, align 4
  %v2_1169b = load i32, i32* %ecx.global-to-local, align 4
  %v3_1169b = load i32, i32* %edi.global-to-local, align 4
  %v4_1169b = add i32 %v3_1169b, %v2_1169b
  %v21_1169b = inttoptr i32 %v2_1169b to i32*
  store i32 %v4_1169b, i32* %v21_1169b, align 4
  %v0_1169d = load i32, i32* %ecx.global-to-local, align 4
  %v1_1169d = add i32 %v0_1169d, 254026836
  %v2_1169d = inttoptr i32 %v1_1169d to i8*
  %v3_1169d = load i8, i8* %v2_1169d, align 1
  %v4_1169d = udiv i8 %v3_1169d, 2
  %v5_1169d = shl i8 %v3_1169d, 7
  %v6_1169d = or i8 %v4_1169d, %v5_1169d
  store i8 %v6_1169d, i8* %v2_1169d, align 1
  %v0_116a3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_116a3 = add i32 %v0_116a3, -1056964604
  %v2_116a3 = inttoptr i32 %v1_116a3 to i32*
  %v3_116a3 = load i32, i32* %v2_116a3, align 4
  %v4_116a3 = or i32 %v3_116a3, -32
  store i32 %v4_116a3, i32* %v2_116a3, align 4
  %v0_116aa = load i32, i32* %ebx.global-to-local, align 4
  %v1_116aa = lshr i32 %v0_116aa, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_116aa = trunc i32 %v1_116aa to i8
  %v5_116aa = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v6_116aa = add i8 %v2_116aa, %v5_116aa
  %v21_116aa = zext i8 %v6_116aa to i32
  %v23_116aa = mul nuw nsw i32 %v21_116aa, 256
  %v24_116aa = and i32 %v0_116aa, -65281
  %v25_116aa = or i32 %v23_116aa, %v24_116aa
  store i32 %v25_116aa, i32* %ebx.global-to-local, align 4
  %v2_116ac = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_116ac = udiv i8 %v2_116ac, 2
  %v4_116ac = shl i8 %v2_116ac, 7
  %v5_116ac = or i8 %v3_116ac, %v4_116ac
  %v6_116ac = load i32, i32* %edi.global-to-local, align 4
  %v7_116ac = inttoptr i32 %v6_116ac to i8*
  store i8 %v5_116ac, i8* %v7_116ac, align 1
  %v0_116ae = load i32, i32* %edx.global-to-local, align 4
  %v1_116ae = add i32 %v0_116ae, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_116ae, i32* %edx.global-to-local, align 4
  %v0_116af = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_116af

; uselistorder directives
  uselistorder i8 %v2_116ac, { 1, 0 }
  uselistorder i8 %v3_1169d, { 1, 0 }
  uselistorder i32 %v2_1169b, { 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
}

define i32 @function_116e8() local_unnamed_addr {
dec_label_pc_116e8:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_116e8 = load i32, i32* %eax.global-to-local, align 4
  %v4_116e8 = mul i32 %v0_116e8, 2
  store i32 %v4_116e8, i32* @eax, align 4
  %v2_116ea = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v3_116ea = load i32, i32* %ebx.global-to-local, align 4
  %v4_116ea = lshr i32 %v3_116ea, ptrtoint (i32* @global_var_8.813 to i32)
  %v5_116ea = trunc i32 %v4_116ea to i8
  %v6_116ea = add i8 %v5_116ea, %v2_116ea
  %v21_116ea = load i32, i32* %ecx.global-to-local, align 4
  %v22_116ea = inttoptr i32 %v21_116ea to i8*
  store i8 %v6_116ea, i8* %v22_116ea, align 1
  %v0_116ec = call i32 @function_323840f()
  store i32 %v0_116ec, i32* %eax.global-to-local, align 4
  ret i32 %v0_116ec
}

define i32 @function_11709(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11709:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11746() local_unnamed_addr {
dec_label_pc_11746:
  %v0_11746 = call i32 @function_8d01174e()
  ret i32 %v0_11746
}

define i32 @function_1179c() local_unnamed_addr {
dec_label_pc_1179c:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_1179c = add i32 %tmp91, 1418526838
  %v2_1179c = inttoptr i32 %v1_1179c to i32*
  %v3_1179c = load i32, i32* %v2_1179c, align 4
  %v4_1179c = add i32 %v3_1179c, -1
  store i32 %v4_1179c, i32* %v2_1179c, align 4
  %v0_117a2 = load i32, i32* %eax.global-to-local, align 4
  %v11_117a2 = and i32 %v0_117a2, -160
  store i32 %v11_117a2, i32* @eax, align 4
  %v0_117a4 = load i32, i32* %edx.global-to-local, align 4
  %v1_117a8 = call i32 @function_1161e(i32 %v0_117a4)
  store i32 %v1_117a8, i32* %eax.global-to-local, align 4
  ret i32 %v1_117a8
}

define i32 @function_117ad() local_unnamed_addr {
dec_label_pc_117ad:
  %eax.global-to-local = alloca i32, align 4
  %v0_117ad = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_117ad
}

define i32 @function_117e0() local_unnamed_addr {
dec_label_pc_117e0:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_117e0 = call i32 @function_11110()
  store i32 %v0_117e0, i32* @eax, align 4
  %v0_117e5 = call i32 @function_11110()
  store i32 %v0_117e5, i32* @eax, align 4
  %v0_117ea = call i32 @function_11110()
  store i32 %v0_117ea, i32* @eax, align 4
  %v0_117f0 = call i32 @function_11110()
  store i32 %v0_117f0, i32* @eax, align 4
  %v0_117f5 = call i32 @function_11110()
  store i32 %v0_117f5, i32* @eax, align 4
  %v0_117fa = call i32 @function_11110()
  store i32 %v0_117fa, i32* @eax, align 4
  %v0_11800 = call i32 @function_11110()
  store i32 %v0_11800, i32* @eax, align 4
  %v0_11805 = call i32 @function_11110()
  store i32 %v0_11805, i32* @eax, align 4
  %v0_1180a = call i32 @function_11110()
  store i32 %v0_1180a, i32* @eax, align 4
  %v0_11810 = call i32 @function_11110()
  %v0_11815 = load i32, i32* @edx, align 4
  %v2_11815 = icmp slt i32 %v0_11815, 0
  br i1 %v2_11815, label %bb, label %dec_label_pc_11821

bb:                                               ; preds = %dec_label_pc_117e0
  %v1_1181b = call i32 @function_11aa4()
  store i32 %v1_1181b, i32* @eax, align 4
  br label %dec_label_pc_11821

dec_label_pc_11821:                               ; preds = %bb, %dec_label_pc_117e0
  %v0_11825 = phi i32 [ %v1_1181b, %bb ], [ %tmp2, %dec_label_pc_117e0 ]
  %v1_11821 = icmp eq i32 %v0_11825, 0
  br i1 %v1_11821, label %dec_label_pc_1182d, label %dec_label_pc_11825

dec_label_pc_11825:                               ; preds = %dec_label_pc_11821
  br label %dec_label_pc_1182d

dec_label_pc_1182d:                               ; preds = %dec_label_pc_11825, %dec_label_pc_11821
  %stack_var_0.0 = phi i32 [ %tmp, %dec_label_pc_11821 ], [ %v0_11825, %dec_label_pc_11825 ]
  %v1_11839 = call i32 @function_11128(i32 %stack_var_0.0)
  ret i32 %v1_11839
}

define i32 @function_11832() local_unnamed_addr {
dec_label_pc_11832:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11869() local_unnamed_addr {
dec_label_pc_11869:
  %eax.global-to-local = alloca i32, align 4
  %v0_11869 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11869
}

define i32 @function_11870() local_unnamed_addr {
dec_label_pc_11870:
  ret i32 0
}

define i32 @function_11885() local_unnamed_addr {
dec_label_pc_11885:
  %stack_var_96 = alloca i32, align 4
  %v0_11887 = load i32, i32* @eax, align 4
  %v1_11887 = icmp eq i32 %v0_11887, 0
  br i1 %v1_11887, label %bb, label %dec_label_pc_1188f

bb:                                               ; preds = %dec_label_pc_11885
  %v1_11889 = call i32 @function_11b72()
  br label %dec_label_pc_1188f

dec_label_pc_1188f:                               ; preds = %bb, %dec_label_pc_11885
  %v2_1188f = phi i32 [ %v1_11889, %bb ], [ %v0_11887, %dec_label_pc_11885 ]
  %v2_11894 = ptrtoint i32* %stack_var_96 to i32
  store i32 %v2_11894, i32* @eax, align 4
  %v1_1189f = call i32 @function_1140d(i32 %v2_1188f)
  ret i32 %v1_1189f

; uselistorder directives
  uselistorder i32 (i32)* @function_1140d, { 1, 0 }
}

define i32 @function_118a4() local_unnamed_addr {
dec_label_pc_118a4:
  %eax.global-to-local = alloca i32, align 4
  %v0_118a4 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_118a4
}

define i32 @function_118b0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_118b0:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp99 = ptrtoint i32* %arg1 to i32
  %v0_1190a = load i32, i32* %edx.global-to-local, align 4
  %v2_1190a = icmp slt i32 %v0_1190a, 0
  store i32 %arg3, i32* @eax, align 4
  br i1 %v2_1190a, label %bb, label %dec_label_pc_11916

bb:                                               ; preds = %dec_label_pc_118b0
  %v1_11910 = call i32 @function_11b5c()
  br label %dec_label_pc_11916

dec_label_pc_11916:                               ; preds = %bb, %dec_label_pc_118b0
  %v0_11916 = phi i32 [ %v1_11910, %bb ], [ %arg3, %dec_label_pc_118b0 ]
  %v2_11922 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11922 = inttoptr i32 %v2_11922 to i32*
  store i32 %v0_11916, i32* %v3_11922, align 4
  store i32 %tmp99, i32* %edx.global-to-local, align 4
  %v2_1192d = load i32, i32* %arg1, align 4
  %v2_11931 = ashr i32 %v2_1192d, ptrtoint (i64* @global_var_1f.822 to i32)
  store i32 %v2_11931, i32* %edx.global-to-local, align 4
  %v2_11934 = xor i32 %v2_11931, %v2_1192d
  store i32 %v2_11934, i32* @eax, align 4
  %v2_11936 = inttoptr i32 %arg2 to i32*
  store i32 %v2_11934, i32* %v2_11936, align 4
  %v0_11938 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11938 = add i32 %v0_11938, ptrtoint (i32* @global_var_80.933 to i32)
  %v2_11938 = inttoptr i32 %v1_11938 to i32*
  %v3_11938 = load i32, i32* %v2_11938, align 4
  %v4_11938 = add i32 %v3_11938, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11938, i32* %v2_11938, align 4
  %v1_1193f = call i32 @function_11627(i32 %v0_11916)
  ret i32 %v1_1193f
}

define i32 @function_11944(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11944:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_11944 = load i32, i32* %edx.global-to-local, align 4
  %v2_11944 = icmp slt i32 %v0_11944, 0
  store i32 %arg2, i32* @eax, align 4
  br i1 %v2_11944, label %bb, label %dec_label_pc_11950

bb:                                               ; preds = %dec_label_pc_11944
  %v1_1194a = call i32 @function_11b17()
  br label %dec_label_pc_11950

dec_label_pc_11950:                               ; preds = %bb, %dec_label_pc_11944
  %v0_11954 = phi i32 [ %v1_1194a, %bb ], [ %arg2, %dec_label_pc_11944 ]
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v2_11954 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11954 = inttoptr i32 %v2_11954 to i32*
  store i32 %v0_11954, i32* %v3_11954, align 4
  %v1_1195d = load i32, i32* %ecx.global-to-local, align 4
  %v2_1195d = add i32 %v1_1195d, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_1195d = inttoptr i32 %v2_1195d to i32*
  store i32 %arg3, i32* %v3_1195d, align 4
  %v1_11962 = add i32 %arg3, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11962 = inttoptr i32 %v1_11962 to i32*
  %v3_11962 = load i32, i32* %v2_11962, align 4
  %v4_11962 = add i32 %v3_11962, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11962, i32* %v2_11962, align 4
  ret i32 %arg3

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_11962() local_unnamed_addr {
dec_label_pc_11962:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_11968() local_unnamed_addr {
dec_label_pc_11968:
  %stack_var_96 = alloca i32, align 4
  %v2_1196d = ptrtoint i32* %stack_var_96 to i32
  ret i32 %v2_1196d
}

define i32 @function_11977() local_unnamed_addr {
dec_label_pc_11977:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_96 = alloca i32, align 4
  %v0_11977 = load i32, i32* %ebp.global-to-local, align 4
  %v1_11977 = add i32 %v0_11977, ptrtoint (i32* @global_var_7c.835 to i32)
  %v2_1197e = ptrtoint i32* %stack_var_96 to i32
  %v1_11995 = add i32 %v0_11977, ptrtoint (i32* @global_var_78.922 to i32)
  %v2_11995 = inttoptr i32 %v1_11995 to i32*
  %v3_11995 = load i32, i32* %v2_11995, align 4
  store i32 %v3_11995, i32* @eax, align 4
  %v2_1199b = call i32 @function_11709(i32 %v1_11977, i32 %v2_1197e)
  ret i32 %v2_1199b

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_78.922 to i32), { 1, 2, 0 }
}

define i32 @function_119a0() local_unnamed_addr {
dec_label_pc_119a0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_119ae() local_unnamed_addr {
dec_label_pc_119ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_119ae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_119ae
}

define i32 @function_119b3() local_unnamed_addr {
dec_label_pc_119b3:
  %eax.global-to-local = alloca i32, align 4
  %v0_119b3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_119b3
}

define i32 @function_119dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_119dc:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_119dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_119dc = add i32 %v0_119dc, -1995404544
  %v2_119dc = inttoptr i32 %v1_119dc to i32*
  %v3_119dc = load i32, i32* %v2_119dc, align 4
  %v4_119dc = sub i32 %v3_119dc, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_119dc, i32* %v2_119dc, align 4
  %v0_119e2 = load i32, i32* %eax.global-to-local, align 4
  %v2_119e2 = add i32 %v0_119e2, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  %v16_119e2 = and i32 %v2_119e2, 255
  %v18_119e2 = and i32 %v0_119e2, -256
  %v19_119e2 = or i32 %v16_119e2, %v18_119e2
  store i32 %v19_119e2, i32* @eax, align 4
  %v2_119eb = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_119eb = inttoptr i32 %v2_119eb to i32*
  store i32 %v19_119e2, i32* %v3_119eb, align 4
  %v0_119ee = call i32 @function_11605()
  store i32 %v0_119ee, i32* %eax.global-to-local, align 4
  ret i32 %v0_119ee

; uselistorder directives
  uselistorder i32 %v0_119e2, { 1, 0 }
}

define i32 @function_119f3() local_unnamed_addr {
dec_label_pc_119f3:
  %eax.global-to-local = alloca i32, align 4
  %v0_119f3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_119f3
}

define i32 @function_119fa() local_unnamed_addr {
dec_label_pc_119fa:
  %ecx.global-to-local = alloca i32, align 4
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_119fa = load i32, i32* @eax, align 4
  %v1_119fc = add i32 %v2_119fa, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_119fc = inttoptr i32 %v1_119fc to i32*
  %v3_119fc = load i32, i32* %v2_119fc, align 4
  store i32 %v3_119fc, i32* @eax, align 4
  %v2_11a05 = add i32 %tmp1, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11a05 = inttoptr i32 %v2_11a05 to i32*
  store i32 %v2_119fa, i32* %v3_11a05, align 4
  %v1_11a08 = load i32, i32* %ecx.global-to-local, align 4
  %v2_11a08 = add i32 %v1_11a08, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_11a08 = inttoptr i32 %v2_11a08 to i32*
  store i32 %v3_119fc, i32* %v3_11a08, align 4
  %v0_11a11 = call i32 @function_11605()
  ret i32 %v0_11a11

; uselistorder directives
  uselistorder i32 ()* @function_11605, { 2, 3, 1, 0 }
}

define i32 @function_11a1e() local_unnamed_addr {
dec_label_pc_11a1e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %v0_11a24 = load i32, i32* %ebx.global-to-local, align 4
  %v1_11a24 = add i32 %v0_11a24, -1990974380
  %v2_11a24 = inttoptr i32 %v1_11a24 to i8*
  %v3_11a24 = load i8, i8* %v2_11a24, align 1
  %v4_11a24 = load i32, i32* %ecx.global-to-local, align 4
  %v5_11a24 = trunc i32 %v4_11a24 to i8
  %v6_11a24 = add i8 %v5_11a24, %v3_11a24
  store i8 %v6_11a24, i8* %v2_11a24, align 1
  %v0_11a2a = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a2a
}

define i32 @function_11a3e() local_unnamed_addr {
dec_label_pc_11a3e:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11a3e = load i32, i32* %ebx.global-to-local, align 4
  %v1_11a3e = add i32 %v0_11a3e, -1990712236
  %v2_11a3e = inttoptr i32 %v1_11a3e to i32*
  %v3_11a3e = load i32, i32* %v2_11a3e, align 4
  %v4_11a3e = sub i32 %v3_11a3e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11a3e, i32* %v2_11a3e, align 4
  %v0_11a44 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a44
}

define i32 @function_11a59() local_unnamed_addr {
dec_label_pc_11a59:
  %v3_11a71 = load i32, i32* @eax, align 4
  ret i32 %v3_11a71
}

define i32 @function_11a7c() local_unnamed_addr {
dec_label_pc_11a7c:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_11a7c = load i32, i32* %ebx.global-to-local, align 4
  %v1_11a7c = add i32 %v0_11a7c, -1994382252
  %v2_11a7c = inttoptr i32 %v1_11a7c to i32*
  %v3_11a7c = load i32, i32* %v2_11a7c, align 4
  %v4_11a7c = sub i32 %v3_11a7c, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11a7c, i32* %v2_11a7c, align 4
  %v0_11a82 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11a82
}

define i32 @function_11a92() local_unnamed_addr {
dec_label_pc_11a92:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_11a92 = add i32 %tmp91, -1989663676
  %v2_11a92 = inttoptr i32 %v1_11a92 to i32*
  %v3_11a92 = load i32, i32* %v2_11a92, align 4
  %v4_11a92 = sub i32 %v3_11a92, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11a92, i32* %v2_11a92, align 4
  %v0_11a98 = load i32, i32* %eax.global-to-local, align 4
  %v2_11a98 = add i32 %v0_11a98, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  %v16_11a98 = and i32 %v2_11a98, 255
  %v18_11a98 = and i32 %v0_11a98, -256
  %v19_11a98 = or i32 %v16_11a98, %v18_11a98
  store i32 %v19_11a98, i32* %eax.global-to-local, align 4
  %v1_11a9a = call i32 @unknown_15a70(i32 ptrtoint (i32* @1 to i32))
  store i32 %v1_11a9a, i32* %eax.global-to-local, align 4
  ret i32 %v1_11a9a

; uselistorder directives
  uselistorder i32 %v0_11a98, { 1, 0 }
}

define i32 @function_11aa4() local_unnamed_addr {
dec_label_pc_11aa4:
  %v0_11aa4 = load i32, i32* @eax, align 4
  %v1_11aa4 = icmp eq i32 %v0_11aa4, 0
  br i1 %v1_11aa4, label %dec_label_pc_11ac2, label %dec_label_pc_11ab2

dec_label_pc_11ab2:                               ; preds = %dec_label_pc_11aa4
  br label %dec_label_pc_11ac2

dec_label_pc_11ac2:                               ; preds = %dec_label_pc_11ab2, %dec_label_pc_11aa4
  %v3_11ac2 = phi i32 [ %v0_11aa4, %dec_label_pc_11ab2 ], [ 0, %dec_label_pc_11aa4 ]
  ret i32 %v3_11ac2
}

define i32 @function_11aca() local_unnamed_addr {
dec_label_pc_11aca:
  %eax.global-to-local = alloca i32, align 4
  %v0_11aca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11aca
}

define i32 @function_11acf() local_unnamed_addr {
dec_label_pc_11acf:
  %v3_11ae7 = load i32, i32* @eax, align 4
  ret i32 %v3_11ae7
}

define i32 @function_11b17() local_unnamed_addr {
dec_label_pc_11b17:
  %ecx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v2_11b17 = load i32, i32* @eax, align 4
  %v1_11b19 = add i32 %v2_11b17, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11b19 = inttoptr i32 %v1_11b19 to i32*
  %v3_11b19 = load i32, i32* %v2_11b19, align 4
  store i32 %v3_11b19, i32* @eax, align 4
  %v1_11b20 = icmp eq i32 %v3_11b19, 0
  %v2_11b22 = add i32 %tmp, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11b22 = inttoptr i32 %v2_11b22 to i32*
  store i32 %v2_11b17, i32* %v3_11b22, align 4
  %v0_11b25 = load i32, i32* @eax, align 4
  %v1_11b25 = load i32, i32* %ecx.global-to-local, align 4
  %v2_11b25 = add i32 %v1_11b25, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_11b25 = inttoptr i32 %v2_11b25 to i32*
  store i32 %v0_11b25, i32* %v3_11b25, align 4
  %v1_11b28 = icmp eq i1 %v1_11b20, false
  br i1 %v1_11b28, label %bb, label %dec_label_pc_11b17.dec_label_pc_11b2e_crit_edge

dec_label_pc_11b17.dec_label_pc_11b2e_crit_edge:  ; preds = %dec_label_pc_11b17
  %v0_11b2e.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11b2e

bb:                                               ; preds = %dec_label_pc_11b17
  %v2_11b28 = call i32 @function_11962()
  br label %dec_label_pc_11b2e

dec_label_pc_11b2e:                               ; preds = %dec_label_pc_11b17.dec_label_pc_11b2e_crit_edge, %bb
  %v0_11b2e = phi i32 [ %v0_11b2e.pre, %dec_label_pc_11b17.dec_label_pc_11b2e_crit_edge ], [ %v2_11b28, %bb ]
  ret i32 %v0_11b2e

; uselistorder directives
  uselistorder label %dec_label_pc_11b2e, { 1, 0 }
}

define i32 @function_11b5c() local_unnamed_addr {
dec_label_pc_11b5c:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v2_11b5e = load i32, i32* @eax, align 4
  %v2_11b6a = add i32 %tmp, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11b6a = inttoptr i32 %v2_11b6a to i32*
  store i32 %v2_11b5e, i32* %v3_11b6a, align 4
  %v0_11b6d = load i32, i32* @eax, align 4
  ret i32 %v0_11b6d
}

define i32 @function_11b72() local_unnamed_addr {
dec_label_pc_11b72:
  %v3_11b8a = load i32, i32* @eax, align 4
  ret i32 %v3_11b8a
}

define i32 @function_11bde(i32* %arg1) local_unnamed_addr {
dec_label_pc_11bde:
  %tmp100 = ptrtoint i32* %arg1 to i32
  %v0_11bde = call i32 @function_11110()
  store i32 %v0_11bde, i32* @eax, align 4
  %v0_11be3 = call i32 @function_11110()
  store i32 %v0_11be3, i32* @eax, align 4
  %v0_11be8 = call i32 @function_11110()
  store i32 %v0_11be8, i32* @eax, align 4
  %v0_11bf0 = call i32 @function_11110()
  store i32 %v0_11bf0, i32* @eax, align 4
  %v0_11bf5 = call i32 @function_11110()
  store i32 %v0_11bf5, i32* @eax, align 4
  %v0_11bfa = call i32 @function_11110()
  store i32 %v0_11bfa, i32* @eax, align 4
  %v0_11c00 = call i32 @function_11110()
  store i32 %v0_11c00, i32* @eax, align 4
  %v0_11c05 = call i32 @function_11110()
  store i32 %v0_11c05, i32* @eax, align 4
  %v0_11c0a = call i32 @function_11110()
  store i32 %v0_11c0a, i32* @eax, align 4
  %v0_11c10 = call i32 @function_11110()
  store i32 %v0_11c10, i32* @eax, align 4
  %v0_11c15 = call i32 @function_11110()
  store i32 %v0_11c15, i32* @eax, align 4
  %v0_11c1a = call i32 @function_11110()
  store i32 %v0_11c1a, i32* @eax, align 4
  %v0_11c20 = call i32 @function_11110()
  store i32 %v0_11c20, i32* @eax, align 4
  %v0_11c25 = call i32 @function_11110()
  store i32 %v0_11c25, i32* @eax, align 4
  %v0_11c2a = call i32 @function_11110()
  store i32 %v0_11c2a, i32* @eax, align 4
  %v0_11c30 = call i32 @function_11110()
  store i32 %v0_11c30, i32* @eax, align 4
  %v0_11c35 = call i32 @function_11110()
  store i32 %v0_11c35, i32* @eax, align 4
  %v2_11c3a = icmp slt i32 %v0_11c35, 0
  br i1 %v2_11c3a, label %bb, label %dec_label_pc_11c42

bb:                                               ; preds = %dec_label_pc_11bde
  %v1_11c3c = call i32 @function_11105()
  br label %dec_label_pc_11c42

dec_label_pc_11c42:                               ; preds = %bb, %dec_label_pc_11bde
  store i32 %tmp100, i32* @eax, align 4
  %v1_11c46 = icmp eq i32* %arg1, null
  br i1 %v1_11c46, label %bb101, label %dec_label_pc_11c4e

bb101:                                            ; preds = %dec_label_pc_11c42
  %v2_11c48 = call i32 @function_11128(i32 ptrtoint (i32* @1 to i32))
  store i32 %v2_11c48, i32* @eax, align 4
  br label %dec_label_pc_11c4e

dec_label_pc_11c4e:                               ; preds = %bb101, %dec_label_pc_11c42
  %v0_11c4e = phi i32 [ %v2_11c48, %bb101 ], [ %tmp100, %dec_label_pc_11c42 ]
  %v1_11c56 = call i32 @function_11128(i32 %v0_11c4e)
  ret i32 %v1_11c56
}

define i32 @function_11c81() local_unnamed_addr {
dec_label_pc_11c81:
  %v1_11c81 = call i32 @function_11128(i32 ptrtoint (i32* @1 to i32))
  ret i32 %v1_11c81
}

define i32 @function_11c86() local_unnamed_addr {
dec_label_pc_11c86:
  %stack_var_104 = alloca i32, align 4
  %v0_11c86 = call i32 @function_11110()
  %v2_11c8b = ptrtoint i32* %stack_var_104 to i32
  %v1_11c92 = call i32 @unknown_15a70(i32 %v2_11c8b)
  store i32 %v1_11c92, i32* @eax, align 4
  %v1_11c97 = call i32 @function_11128(i32 %v2_11c8b)
  ret i32 %v1_11c97

; uselistorder directives
  uselistorder i32 %v2_11c8b, { 1, 0 }
  uselistorder i32 (i32)* @function_11128, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_15a70, { 2, 1, 0 }
  uselistorder i32 ()* @function_11110, { 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @_ZNK5boost8signals26detail20slot_call_iterator_tINS1_12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS6_S7_EEENSC_IFvRKNS0_10connectionES6_S7_EEENS0_5mutexEE12slot_invokerESt14_List_iteratorINS_10shared_ptrINS1_15connection_bodyISt4pairINS1_15slot_meta_groupENS_8optionalIiEEENS0_5slot2IvS6_S7_SE_EESK_EEEEESX_E18lock_next_callableEv(i32* %arg1) local_unnamed_addr {
dec_label_pc_11e80:
  %tmp117 = ptrtoint i32* %arg1 to i32
  store i32 %tmp117, i32* @esi, align 4
  %v2_11e97 = load i32, i32* %arg1, align 4
  store i32 %v2_11e97, i32* @eax, align 4
  %v2_11e99 = add i32 %tmp117, 12
  %v3_11e99 = inttoptr i32 %v2_11e99 to i32*
  %v4_11e99 = load i32, i32* %v3_11e99, align 4
  %v15_11e99 = icmp eq i32 %v2_11e97, %v4_11e99
  br i1 %v15_11e99, label %bb, label %dec_label_pc_11ea2

bb:                                               ; preds = %dec_label_pc_11e80
  %v3_11e9c = call i32 @function_11fb0(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v3_11e9c, i32* @eax, align 4
  %v1_11ea2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_11ea2

dec_label_pc_11ea2:                               ; preds = %bb, %dec_label_pc_11e80
  %v1_11ea2 = phi i32 [ %v1_11ea2.pre, %bb ], [ %tmp117, %dec_label_pc_11e80 ]
  %v0_11ea2 = phi i32 [ %v3_11e9c, %bb ], [ %v2_11e97, %dec_label_pc_11e80 ]
  %v2_11ea2 = add i32 %v1_11ea2, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11ea2 = inttoptr i32 %v2_11ea2 to i32*
  %v4_11ea2 = load i32, i32* %v3_11ea2, align 4
  %v15_11ea2 = icmp eq i32 %v0_11ea2, %v4_11ea2
  br i1 %v15_11ea2, label %bb124, label %dec_label_pc_11eab

bb124:                                            ; preds = %dec_label_pc_11ea2
  %v3_11ea5 = call i32 @function_11fa8(i32 ptrtoint ([2 x i8]* @2 to i32))
  store i32 %v3_11ea5, i32* @eax, align 4
  br label %dec_label_pc_11eab

dec_label_pc_11eab:                               ; preds = %bb124, %dec_label_pc_11ea2
  %v0_11eab = phi i32 [ %v3_11ea5, %bb124 ], [ %v0_11ea2, %dec_label_pc_11ea2 ]
  %v1_11eab = add i32 %v0_11eab, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11eab = inttoptr i32 %v1_11eab to i32*
  %v3_11eab = load i32, i32* %v2_11eab, align 4
  store i32 %v3_11eab, i32* @edi, align 4
  %v1_11eae = icmp eq i32 %v3_11eab, 0
  br i1 %v1_11eae, label %bb125, label %dec_label_pc_11eb6

bb125:                                            ; preds = %dec_label_pc_11eab
  %v1_11eb0 = call i32 @function_120a5()
  br label %dec_label_pc_11eb6

dec_label_pc_11eb6:                               ; preds = %bb125, %dec_label_pc_11eab
  %v0_11ebe = load i32, i32* @esi, align 4
  %v1_11ebe = add i32 %v0_11ebe, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11ebe = inttoptr i32 %v1_11ebe to i32*
  %v3_11ebe = load i32, i32* %v2_11ebe, align 4
  %v1_11ec1 = add i32 %v3_11ebe, ptrtoint (i32* @global_var_84.934 to i32)
  %v2_11ec1 = inttoptr i32 %v1_11ec1 to i32*
  %v3_11ec1 = load i32, i32* %v2_11ec1, align 4
  %v1_11ecb = icmp eq i32 %v3_11ec1, 0
  br i1 %v1_11ecb, label %bb126, label %dec_label_pc_11ecf

bb126:                                            ; preds = %dec_label_pc_11eb6
  %v3_11ecd = call i32 @function_11f48(i32 %v3_11eab)
  %v0_11ecf.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_11ecf

dec_label_pc_11ecf:                               ; preds = %bb126, %dec_label_pc_11eb6
  %v0_11ecf = phi i32 [ %v0_11ecf.pre, %bb126 ], [ %v3_11ebe, %dec_label_pc_11eb6 ]
  %v1_11ecf = add i32 %v0_11ecf, ptrtoint (i32* @global_var_80.933 to i32)
  %v2_11ecf = inttoptr i32 %v1_11ecf to i32*
  %v3_11ecf = load i32, i32* %v2_11ecf, align 4
  %v2_11ed5 = mul i32 %v3_11ec1, 2
  %v3_11ed5 = add i32 %v3_11ec1, -3
  %v4_11ed5 = add i32 %v3_11ed5, %v2_11ed5
  %v2_11edd = mul i32 %v3_11ec1, 12
  %v3_11edd = icmp eq i32 %v2_11edd, 0
  %v2_11ee0 = mul i32 %v4_11ed5, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_11ee0 = add i32 %v3_11ecf, %v2_11ee0
  %v2_11ee5 = sub i32 %v3_11ee0, %v2_11edd
  %v7_11ee7 = icmp ult i32 %v3_11ee0, %v2_11ee5
  %v2_11eed = or i1 %v3_11edd, %v7_11ee7
  br i1 %v2_11eed, label %bb127, label %dec_label_pc_11eef

bb127:                                            ; preds = %dec_label_pc_11ecf
  %v4_11eed = call i32 @function_11f30(i32 %v2_11ee5)
  br label %dec_label_pc_11eef

dec_label_pc_11eef:                               ; preds = %bb127, %dec_label_pc_11ecf
  %v0_11eef = phi i32 [ %v4_11eed, %bb127 ], [ %v3_11ee0, %dec_label_pc_11ecf ]
  %v1_11ef7 = inttoptr i32 %v0_11eef to i32*
  %v2_11ef7 = load i32, i32* %v1_11ef7, align 4
  %v2_11efb = ashr i32 %v2_11ef7, ptrtoint (i64* @global_var_1f.822 to i32)
  %v2_11efe = xor i32 %v2_11efb, %v2_11ef7
  store i32 %v2_11efe, i32* @eax, align 4
  %tmp130 = icmp ult i32 %v2_11efe, 20
  br i1 %tmp130, label %bb129, label %dec_label_pc_11f09

bb129:                                            ; preds = %dec_label_pc_11eef
  %v4_11f03 = call i32 @function_11ff8(i32 %v0_11eef)
  br label %dec_label_pc_11f09

dec_label_pc_11f09:                               ; preds = %bb129, %dec_label_pc_11eef
  %v3_11f21 = phi i32 [ %v4_11f03, %bb129 ], [ %v2_11efe, %dec_label_pc_11eef ]
  ret i32 %v3_11f21

; uselistorder directives
  uselistorder i32 %v2_11efe, { 1, 0, 2 }
  uselistorder i32 %v0_11eef, { 1, 0 }
  uselistorder i32 %v3_11ec1, { 2, 0, 1, 3 }
  uselistorder i32 %v0_11ea2, { 1, 0 }
  uselistorder i32 %v2_11e97, { 1, 0, 2 }
  uselistorder i32 20, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 ptrtoint (i64* @global_var_1f.822 to i32), { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 7, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 3, 2, 0, 1, 4 }
}

define i32 @function_11f30(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f30:
  %eax.global-to-local = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_11f3e = add i32 %arg1, ptrtoint (i32* @global_var_84.934 to i32)
  %v3_11f3e = inttoptr i32 %v2_11f3e to i32*
  store i32 0, i32* %v3_11f3e, align 4
  %v1_11f44 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_11f44
}

define i32 @function_11f48(i32 %arg1) local_unnamed_addr {
dec_label_pc_11f48:
  %edx.global-to-local = alloca i32, align 4
  %v2_11f48 = load i32, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_11f4e = add i32 %v2_11f48, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11f4e = inttoptr i32 %v1_11f4e to i32*
  %v3_11f4e = load i32, i32* %v2_11f4e, align 4
  %v1_11f51 = add i32 %arg1, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_11f51, i32* %edx.global-to-local, align 4
  %v1_11f54 = icmp eq i32 %v3_11f4e, 0
  br i1 %v1_11f54, label %bb, label %dec_label_pc_11f5c

bb:                                               ; preds = %dec_label_pc_11f48
  %v1_11f56 = call i32 @function_1209d()
  %v0_11f5c.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_11f5c

dec_label_pc_11f5c:                               ; preds = %bb, %dec_label_pc_11f48
  %v0_11f60 = phi i32 [ %v1_11f56, %bb ], [ %v3_11f4e, %dec_label_pc_11f48 ]
  %v0_11f5c = phi i32 [ %v0_11f5c.pre, %bb ], [ %v1_11f51, %dec_label_pc_11f48 ]
  %v3_11f63 = call i32 @unknown_22f10(i32 %v0_11f60, i32 %v0_11f5c)
  %v2_11f68 = load i32, i32* @esi, align 4
  %v1_11f6a = add i32 %v2_11f68, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11f6a = inttoptr i32 %v1_11f6a to i32*
  %v3_11f6a = load i32, i32* %v2_11f6a, align 4
  %v1_11f6d = icmp eq i32 %v3_11f6a, 0
  br i1 %v1_11f6d, label %bb12, label %dec_label_pc_11f75

bb12:                                             ; preds = %dec_label_pc_11f5c
  %v1_11f6f = call i32 @function_1209d()
  br label %dec_label_pc_11f75

dec_label_pc_11f75:                               ; preds = %bb12, %dec_label_pc_11f5c
  %v0_11f75 = phi i32 [ %v1_11f6f, %bb12 ], [ %v3_11f6a, %dec_label_pc_11f5c ]
  %v1_11f75 = add i32 %v0_11f75, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11f75 = inttoptr i32 %v1_11f75 to i8*
  %v3_11f75 = load i8, i8* %v2_11f75, align 1
  %v10_11f75 = icmp eq i8 %v3_11f75, 0
  br i1 %v10_11f75, label %bb13, label %dec_label_pc_11f7b

bb13:                                             ; preds = %dec_label_pc_11f75
  %v1_11f79 = call i32 @function_11fd0()
  br label %dec_label_pc_11f7b

dec_label_pc_11f7b:                               ; preds = %bb13, %dec_label_pc_11f75
  %v0_11f7e = phi i32 [ %v1_11f79, %bb13 ], [ %v0_11f75, %dec_label_pc_11f75 ]
  %v0_11f7b = load i32, i32* @esi, align 4
  %v1_11f7b = add i32 %v0_11f7b, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11f7b = inttoptr i32 %v1_11f7b to i32*
  %v3_11f7b = load i32, i32* %v2_11f7b, align 4
  store i32 %v3_11f7b, i32* @edx, align 4
  %v1_11f7e = add i32 %v0_11f7e, 12
  %v2_11f7e = inttoptr i32 %v1_11f7e to i32*
  %v3_11f7e = load i32, i32* %v2_11f7e, align 4
  %v1_11f81 = add i32 %v3_11f7b, ptrtoint ([6 x i8]* @global_var_90.940 to i32)
  %v2_11f81 = inttoptr i32 %v1_11f81 to i32*
  %v3_11f81 = load i32, i32* %v2_11f81, align 4
  %v4_11f81 = add i32 %v3_11f81, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11f81, i32* %v2_11f81, align 4
  %v1_11f88 = icmp eq i32 %v3_11f7e, 0
  br i1 %v1_11f88, label %dec_label_pc_11f93, label %dec_label_pc_11f8c

dec_label_pc_11f8c:                               ; preds = %dec_label_pc_11f7b
  %v1_11f8c = add i32 %v3_11f7e, 4
  %v2_11f8c = inttoptr i32 %v1_11f8c to i32*
  %v3_11f8c = load i32, i32* %v2_11f8c, align 4
  %v1_11f8f = icmp eq i32 %v3_11f8c, 0
  %v1_11f91 = icmp eq i1 %v1_11f8f, false
  br i1 %v1_11f91, label %bb14, label %dec_label_pc_11f93

bb14:                                             ; preds = %dec_label_pc_11f8c
  %v2_11f91 = call i32 @function_11fda()
  br label %dec_label_pc_11f93

dec_label_pc_11f93:                               ; preds = %bb14, %dec_label_pc_11f8c, %dec_label_pc_11f7b
  %v2_11f93 = load i32, i32* @esi, align 4
  %v2_11f95 = add i32 %v2_11f93, 12
  %v3_11f95 = inttoptr i32 %v2_11f95 to i32*
  store i32 %v2_11f93, i32* %v3_11f95, align 4
  %v2_11f98 = load i32, i32* @edi, align 4
  %v0_11fa0 = load i32, i32* @esi, align 4
  %v1_11fa0 = add i32 %v0_11fa0, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11fa0 = inttoptr i32 %v1_11fa0 to i32*
  %v3_11fa0 = load i32, i32* %v2_11fa0, align 4
  store i32 %v3_11fa0, i32* @eax, align 4
  %v14_11fa3 = icmp eq i32 %v0_11fa0, %v3_11fa0
  %v1_11fa5 = icmp eq i1 %v14_11fa3, false
  br i1 %v1_11fa5, label %bb15, label %dec_label_pc_11fa7

bb15:                                             ; preds = %dec_label_pc_11f93
  %v3_11fa5 = call i32 @function_11fb0(i32 %v2_11f98)
  br label %dec_label_pc_11fa7

dec_label_pc_11fa7:                               ; preds = %bb15, %dec_label_pc_11f93
  %v0_11fa7 = phi i32 [ %v3_11fa5, %bb15 ], [ %v3_11fa0, %dec_label_pc_11f93 ]
  ret i32 %v0_11fa7

; uselistorder directives
  uselistorder i32 %v3_11fa0, { 1, 0, 2 }
  uselistorder i32 %v2_11f93, { 1, 0 }
  uselistorder i32 (i32)* @function_11fb0, { 1, 0 }
  uselistorder i32 ()* @function_1209d, { 1, 0 }
}

define i32 @function_11fa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fa8:
  %eax.global-to-local = alloca i32, align 4
  %v0_11fa8 = load i32, i32* @esi, align 4
  %v1_11fa8 = add i32 %v0_11fa8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_11fa8 = inttoptr i32 %v1_11fa8 to i32*
  %v3_11fa8 = load i32, i32* %v2_11fa8, align 4
  store i32 %v3_11fa8, i32* %eax.global-to-local, align 4
  %v2_11fab = add i32 %v0_11fa8, 12
  %v3_11fab = inttoptr i32 %v2_11fab to i32*
  store i32 %v3_11fa8, i32* %v3_11fab, align 4
  %v0_11fae = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_11fae
}

define i32 @function_11fb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_11fb0:
  %v3_11fb4 = xor i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v4_11fb4 = icmp eq i32 %v3_11fb4, 0
  store i32 %v3_11fb4, i32* @edx, align 4
  %v1_11fbb = icmp eq i1 %v4_11fb4, false
  br i1 %v1_11fbb, label %bb, label %dec_label_pc_11fb0.dec_label_pc_11fc1_crit_edge

dec_label_pc_11fb0.dec_label_pc_11fc1_crit_edge:  ; preds = %dec_label_pc_11fb0
  %v0_11fc8.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_11fc1

bb:                                               ; preds = %dec_label_pc_11fb0
  %v2_11fbb = call i32 @function_120c9()
  br label %dec_label_pc_11fc1

dec_label_pc_11fc1:                               ; preds = %dec_label_pc_11fb0.dec_label_pc_11fc1_crit_edge, %bb
  %v0_11fc8 = phi i32 [ %v2_11fbb, %bb ], [ %v0_11fc8.pre, %dec_label_pc_11fb0.dec_label_pc_11fc1_crit_edge ]
  ret i32 %v0_11fc8

; uselistorder directives
  uselistorder label %dec_label_pc_11fc1, { 1, 0 }
}

define i32 @function_11fd0() local_unnamed_addr {
dec_label_pc_11fd0:
  %eax.global-to-local = alloca i32, align 4
  %v0_11fd0 = load i32, i32* @esi, align 4
  %v1_11fd0 = add i32 %v0_11fd0, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_11fd0 = inttoptr i32 %v1_11fd0 to i32*
  %v3_11fd0 = load i32, i32* %v2_11fd0, align 4
  store i32 %v3_11fd0, i32* %eax.global-to-local, align 4
  %v1_11fd3 = add i32 %v3_11fd0, ptrtoint (i32* @global_var_94.939 to i32)
  %v2_11fd3 = inttoptr i32 %v1_11fd3 to i32*
  %v3_11fd3 = load i32, i32* %v2_11fd3, align 4
  %v4_11fd3 = add i32 %v3_11fd3, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_11fd3, i32* %v2_11fd3, align 4
  %v22_11fd3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v22_11fd3
}

define i32 @function_11fda() local_unnamed_addr {
dec_label_pc_11fda:
  %v2_11fda = load i32, i32* @edi, align 4
  %v2_11fe2 = load i32, i32* @esi, align 4
  %v2_11fe9 = inttoptr i32 %v2_11fe2 to i32*
  store i32 %v2_11fe2, i32* %v2_11fe9, align 4
  %v1_11ff1 = call i32 @function_11fa8(i32 %v2_11fda)
  ret i32 %v1_11ff1

; uselistorder directives
  uselistorder i32 %v2_11fe2, { 1, 0 }
  uselistorder i32 (i32)* @function_11fa8, { 1, 0 }
}

define i32 @function_11ff8(i32 %arg1) local_unnamed_addr {
dec_label_pc_11ff8:
  %v0_11ff8 = load i32, i32* @eax, align 4
  ret i32 %v0_11ff8
}

define i32 @function_12000(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12000:
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_12008 = load i32, i32* %edx.global-to-local, align 4
  %v2_12008 = icmp slt i32 %v0_12008, 0
  %v1_12010 = icmp eq i1 %v2_12008, false
  br i1 %v1_12010, label %dec_label_pc_12071, label %dec_label_pc_12012

dec_label_pc_12012:                               ; preds = %dec_label_pc_12000
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_12016 = add i32 %arg2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12016 = inttoptr i32 %v1_12016 to i32*
  %v3_12016 = load i32, i32* %v2_12016, align 4
  %v1_12019 = icmp eq i32 %v3_12016, 0
  br i1 %v1_12019, label %dec_label_pc_12030, label %dec_label_pc_1201d

dec_label_pc_1201d:                               ; preds = %dec_label_pc_12012
  %v1_1201d = add i32 %v3_12016, ptrtoint (i8** @global_var_4.814 to i32)
  %v1_12023 = call i32 @unknown_16860(i32 %v1_1201d)
  br label %dec_label_pc_12030

dec_label_pc_12030:                               ; preds = %dec_label_pc_12071, %dec_label_pc_1201d, %dec_label_pc_12012
  %v4_12030 = add i32 %arg2, -12
  store i32 %v4_12030, i32* %edx.global-to-local, align 4
  %v0_12047 = load i32, i32* %esi.global-to-local, align 4
  %v1_12047 = add i32 %v0_12047, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12047 = inttoptr i32 %v1_12047 to i32*
  %v3_12047 = load i32, i32* %v2_12047, align 4
  store i32 %v3_12047, i32* %edx.global-to-local, align 4
  %v1_1204a = add i32 %arg1, ptrtoint (i32* @global_var_84.934 to i32)
  %v2_1204a = inttoptr i32 %v1_1204a to i32*
  %v3_1204a = load i32, i32* %v2_1204a, align 4
  %v1_12050 = load i32, i32* %ebp.global-to-local, align 4
  %v2_12050 = sub i32 %v3_1204a, %v1_12050
  ret i32 %v2_12050

dec_label_pc_12071:                               ; preds = %dec_label_pc_12000
  %v1_12075 = add i32 %arg2, ptrtoint (i32* @global_var_8.813 to i32)
  %v1_1207b = call i32 @unknown_16860(i32 %v1_12075)
  br label %dec_label_pc_12030

; uselistorder directives
  uselistorder i32 (i32)* @unknown_16860, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
}

define i32 @function_1209d() local_unnamed_addr {
dec_label_pc_1209d:
  %v0_120a0 = call i32 @unknown_1581e()
  ret i32 %v0_120a0
}

define i32 @function_120a5() local_unnamed_addr {
dec_label_pc_120a5:
  %v3_120bd = load i32, i32* @eax, align 4
  ret i32 %v3_120bd
}

define i32 @function_120c9() local_unnamed_addr {
dec_label_pc_120c9:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_120cf() local_unnamed_addr {
dec_label_pc_120cf:
  %eax.global-to-local = alloca i32, align 4
  %v0_120cf = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_120cf
}

define i32 @_ZN5boost8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS0_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS5_S6_EEENSB_IFvRKNS0_10connectionES5_S6_EEENS0_5mutexEEclES5_S6_(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12130:
  ret i32 0
}

define i32 @function_1219e(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1219e:
  %v0_1219e = load i32, i32* @eax, align 4
  %v1_1219e = add i32 %v0_1219e, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_1219e = inttoptr i32 %v1_1219e to i32*
  %v3_1219e = load i32, i32* %v2_1219e, align 4
  %v4_1219e = add i32 %v3_1219e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_1219e, i32* %v2_1219e, align 4
  ret i32 %arg2
}

define i32 @function_121aa() local_unnamed_addr {
dec_label_pc_121aa:
  %stack_var_108 = alloca i32, align 4
  %v2_121ba = ptrtoint i32* %stack_var_108 to i32
  %v1_121c9 = call i32 @unknown_16b10(i32 %v2_121ba)
  ret i32 %v1_121c9
}

define i32 @function_121dc(i32* %arg1) local_unnamed_addr {
dec_label_pc_121dc:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_68 = alloca i32, align 4
  %stack_var_36 = alloca i32, align 4
  %tmp126 = ptrtoint i32* %arg1 to i32
  %stack_var_52 = alloca i32, align 4
  %v0_121dc = load i32, i32* %ebp.global-to-local, align 4
  %v1_121dc = add i32 %v0_121dc, -1994644412
  %v2_121dc = inttoptr i32 %v1_121dc to i32*
  %v3_121dc = load i32, i32* %v2_121dc, align 4
  %v4_121dc = sub i32 %v3_121dc, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_121dc, i32* %v2_121dc, align 4
  %v0_121e2 = load i32, i32* %eax.global-to-local, align 4
  %v4_121e5 = mul i32 %v0_121e2, 2
  %v21_121e5 = inttoptr i32 %v0_121e2 to i32*
  store i32 %v4_121e5, i32* %v21_121e5, align 4
  %v0_121e7 = load i32, i32* %ebx.global-to-local, align 4
  %v1_121e7 = add i32 %v0_121e7, -1923079100
  %v2_121e7 = inttoptr i32 %v1_121e7 to i8*
  %v3_121e7 = load i8, i8* %v2_121e7, align 1
  %v4_121e7 = load i32, i32* %ecx.global-to-local, align 4
  %v5_121e7 = trunc i32 %v4_121e7 to i8
  %v6_121e7 = add i8 %v5_121e7, %v3_121e7
  store i8 %v6_121e7, i8* %v2_121e7, align 1
  %v0_121ed = load i32, i32* %eax.global-to-local, align 4
  %v1_121ed = and i32 %v0_121ed, -65281
  %v2_121ed = or i32 %v1_121ed, 9216
  store i32 %v2_121ed, i32* %eax.global-to-local, align 4
  %v1_121ef = inttoptr i32 %v2_121ed to i8*
  %v4_121ef = trunc i32 %v0_121ed to i8
  %v2_121f1 = load i8, i8* %v1_121ef, align 1
  %v5_121f1 = add i8 %v2_121f1, %v4_121ef
  store i8 %v5_121f1, i8* %v1_121ef, align 1
  %v0_12206 = load i32, i32* @edi, align 4
  %v0_1220d = load i32, i32* %eax.global-to-local, align 4
  %v1_1220d = icmp eq i32 %v0_1220d, 0
  br i1 %v1_1220d, label %bb, label %dec_label_pc_1223d

bb:                                               ; preds = %dec_label_pc_121dc
  %v3_12237 = call i32 @function_12665(i32 0)
  store i32 %v3_12237, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1223d

dec_label_pc_1223d:                               ; preds = %bb, %dec_label_pc_121dc
  %v0_1223d = phi i32 [ %v3_12237, %bb ], [ %v0_1220d, %dec_label_pc_121dc ]
  %v1_1223d = inttoptr i32 %v0_1223d to i32*
  %v2_1223d = load i32, i32* %v1_1223d, align 4
  store i32 %v2_1223d, i32* %eax.global-to-local, align 4
  %v1_1223f = icmp eq i32 %v2_1223d, 0
  br i1 %v1_1223f, label %bb143, label %dec_label_pc_12247

bb143:                                            ; preds = %dec_label_pc_1223d
  %v1_12241 = call i32 @function_12620()
  store i32 %v1_12241, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12247

dec_label_pc_12247:                               ; preds = %bb143, %dec_label_pc_1223d
  %v0_1224b = phi i32 [ %v1_12241, %bb143 ], [ %v2_1223d, %dec_label_pc_1223d ]
  store i32 %v0_1224b, i32* %stack_var_52, align 4
  %v2_12257 = ptrtoint i32* %stack_var_52 to i32
  store i32 %v2_12257, i32* %eax.global-to-local, align 4
  %v0_1225b = load i32, i32* %esi.global-to-local, align 4
  %v1_1226a = call i32 @unknown_23fb0(i32 %v2_12257)
  store i32 %tmp126, i32* %eax.global-to-local, align 4
  %v1_12273 = icmp eq i32* %arg1, null
  br i1 %v1_12273, label %bb144, label %dec_label_pc_1227b

bb144:                                            ; preds = %dec_label_pc_12247
  %v2_12275 = call i32 @function_12665(i32 %v2_12257)
  store i32 %v2_12275, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1227b

dec_label_pc_1227b:                               ; preds = %bb144, %dec_label_pc_12247
  %v0_1227b = phi i32 [ %v2_12275, %bb144 ], [ %tmp126, %dec_label_pc_12247 ]
  %v1_1227b = inttoptr i32 %v0_1227b to i32*
  %v2_1227b = load i32, i32* %v1_1227b, align 4
  store i32 %v2_1227b, i32* %eax.global-to-local, align 4
  %v1_1227d = icmp eq i32 %v2_1227b, 0
  br i1 %v1_1227d, label %bb145, label %dec_label_pc_12285

bb145:                                            ; preds = %dec_label_pc_1227b
  %v1_1227f = call i32 @function_12620()
  store i32 %v1_1227f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12285

dec_label_pc_12285:                               ; preds = %bb145, %dec_label_pc_1227b
  %v0_12285 = phi i32 [ %v1_1227f, %bb145 ], [ %v2_1227b, %dec_label_pc_1227b ]
  %v1_12285 = inttoptr i32 %v0_12285 to i32*
  %v2_12285 = load i32, i32* %v1_12285, align 4
  %v2_1228f = ptrtoint i32* %stack_var_36 to i32
  store i32 %v2_1228f, i32* %eax.global-to-local, align 4
  %v0_12293 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v2_12285, i32* %stack_var_36, align 4
  %v1_1229e = call i32 @unknown_23fb0(i32 %v2_1228f)
  store i32 %tmp126, i32* @eax, align 4
  br i1 %v1_12273, label %bb146, label %dec_label_pc_122af

bb146:                                            ; preds = %dec_label_pc_12285
  %v2_122a9 = call i32 @function_12665(i32 %v2_1228f)
  store i32 %v2_122a9, i32* @eax, align 4
  br label %dec_label_pc_122af

dec_label_pc_122af:                               ; preds = %bb146, %dec_label_pc_12285
  %v0_122af = phi i32 [ %v2_122a9, %bb146 ], [ %tmp126, %dec_label_pc_12285 ]
  %v1_122af = add i32 %v0_122af, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_122af = inttoptr i32 %v1_122af to i32*
  %v3_122af = load i32, i32* %v2_122af, align 4
  store i32 %v3_122af, i32* %ebx.global-to-local, align 4
  %v1_122b2 = icmp eq i32 %v3_122af, 0
  br i1 %v1_122b2, label %bb147, label %dec_label_pc_122ba

bb147:                                            ; preds = %dec_label_pc_122af
  %v1_122b4 = call i32 @function_125af()
  store i32 %v1_122b4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_122ba

dec_label_pc_122ba:                               ; preds = %bb147, %dec_label_pc_122af
  %v3_122be = load i32, i32* %stack_var_36, align 4
  store i32 %v3_122be, i32* %eax.global-to-local, align 4
  %v3_122c2 = load i32, i32* %stack_var_52, align 4
  store i32 %v3_122c2, i32* %ebx.global-to-local, align 4
  store i32 %v3_122be, i32* %stack_var_68, align 4
  %v2_122e6 = ptrtoint i32* %stack_var_68 to i32
  %v12_122ff161 = icmp eq i32 %v3_122c2, %v3_122be
  br i1 %v12_122ff161, label %dec_label_pc_12360, label %dec_label_pc_12303.lr.ph

dec_label_pc_12303.lr.ph:                         ; preds = %dec_label_pc_122ba
  %v1_12358 = inttoptr i32 %v0_12293 to i8*
  %v1_1230f = add i32 %v0_12293, 140
  %v2_1230f = inttoptr i32 %v1_1230f to i32*
  br label %dec_label_pc_12303

dec_label_pc_122e0:                               ; preds = %dec_label_pc_12350, %dec_label_pc_12303
  %v0_122e0 = phi i32 [ %v3_12350, %dec_label_pc_12350 ], [ %v0_1230c163, %dec_label_pc_12303 ]
  %v1_122e0 = inttoptr i32 %v0_122e0 to i32*
  %v2_122e0 = load i32, i32* %v1_122e0, align 4
  store i32 %v2_122e0, i32* %stack_var_68, align 4
  store i32 %v2_122e6, i32* %eax.global-to-local, align 4
  %v1_122ed = call i32 @unknown_23fb0(i32 %v2_122e6)
  store i32 %v0_12293, i32* %eax.global-to-local, align 4
  %v2_122f6 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_122f6 = icmp eq i8 %v2_122f6, 0
  %v1_122f9 = icmp eq i1 %v9_122f6, false
  br i1 %v1_122f9, label %dec_label_pc_12358, label %dec_label_pc_122fb

dec_label_pc_122fb:                               ; preds = %dec_label_pc_12358, %dec_label_pc_122e0
  %v3_122fb = load i32, i32* %stack_var_68, align 4
  store i32 %v3_122fb, i32* %eax.global-to-local, align 4
  %v0_122ff.pre = load i32, i32* %ebx.global-to-local, align 4
  %v12_122ff = icmp eq i32 %v0_122ff.pre, %v3_122fb
  br i1 %v12_122ff, label %dec_label_pc_12360, label %dec_label_pc_12303

dec_label_pc_12303:                               ; preds = %dec_label_pc_12303.lr.ph, %dec_label_pc_122fb
  %v0_1230c163 = phi i32 [ %v3_122be, %dec_label_pc_12303.lr.ph ], [ %v3_122fb, %dec_label_pc_122fb ]
  %v2_12307 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_12307 = icmp eq i8 %v2_12307, 0
  %v1_1230a = icmp eq i1 %v9_12307, false
  br i1 %v1_1230a, label %dec_label_pc_122e0, label %dec_label_pc_1230c

dec_label_pc_1230c:                               ; preds = %dec_label_pc_12303
  %v1_1230c = add i32 %v0_1230c163, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_1230c = inttoptr i32 %v1_1230c to i32*
  %v3_1230c = load i32, i32* %v2_1230c, align 4
  store i32 %v3_1230c, i32* %eax.global-to-local, align 4
  %v3_1230f = load i32, i32* %v2_1230f, align 4
  store i32 %v3_1230f, i32* %ecx.global-to-local, align 4
  %v1_1231b = icmp eq i32 %v3_1230c, 0
  %v1_1231d = inttoptr i32 %v3_1230f to i32*
  %v2_1231d = load i32, i32* %v1_1231d, align 4
  store i32 %v2_1231d, i32* %ecx.global-to-local, align 4
  br i1 %v1_1231b, label %bb148, label %dec_label_pc_12325

bb148:                                            ; preds = %dec_label_pc_1230c
  %v1_1231f = call i32 @function_124c9()
  store i32 %v1_1231f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12325

dec_label_pc_12325:                               ; preds = %bb148, %dec_label_pc_1230c
  %v0_12325 = phi i32 [ %v1_1231f, %bb148 ], [ %v3_1230c, %dec_label_pc_1230c ]
  %v1_12325 = add i32 %v0_12325, 28
  %v2_12325 = inttoptr i32 %v1_12325 to i32*
  %v3_12325 = load i32, i32* %v2_12325, align 4
  store i32 %v3_12325, i32* %ebp.global-to-local, align 4
  %v1_12328 = icmp eq i32 %v3_12325, 0
  br i1 %v1_12328, label %bb149, label %dec_label_pc_12330

bb149:                                            ; preds = %dec_label_pc_12325
  %v1_1232a = call i32 @function_124ce()
  store i32 %v1_1232a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12330

dec_label_pc_12330:                               ; preds = %bb149, %dec_label_pc_12325
  %v1_12333 = and i32 %v3_12325, -2
  store i32 %v1_12333, i32* %ebp.global-to-local, align 4
  store i32 %v0_12293, i32* %eax.global-to-local, align 4
  %v2_12348 = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v9_12348 = icmp eq i8 %v2_12348, 0
  %v1_1234b = icmp eq i1 %v9_12348, false
  br i1 %v1_1234b, label %dec_label_pc_12350, label %dec_label_pc_1234d

dec_label_pc_1234d:                               ; preds = %dec_label_pc_12330
  store i8 ptrtoint (i8** @global_var_1.820 to i8), i8* %v1_12358, align 1
  br label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_1234d, %dec_label_pc_12330
  %v3_12350 = load i32, i32* %stack_var_68, align 4
  store i32 %v3_12350, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_122e0

dec_label_pc_12358:                               ; preds = %dec_label_pc_122e0
  store i8 0, i8* %v1_12358, align 1
  br label %dec_label_pc_122fb

dec_label_pc_12360:                               ; preds = %dec_label_pc_122fb, %dec_label_pc_122ba
  store i32 %v0_1225b, i32* %eax.global-to-local, align 4
  %v1_12364 = add i32 %v0_1225b, ptrtoint ([6 x i8]* @global_var_90.940 to i32)
  %v2_12364 = inttoptr i32 %v1_12364 to i32*
  %v3_12364 = load i32, i32* %v2_12364, align 4
  %v1_1236a = add i32 %v0_1225b, ptrtoint (i32* @global_var_94.939 to i32)
  %v2_1236a = inttoptr i32 %v1_1236a to i32*
  %v3_1236a = load i32, i32* %v2_1236a, align 4
  %tmp164 = icmp ugt i32 %v3_1236a, %v3_12364
  br i1 %tmp164, label %bb150, label %dec_label_pc_12376

bb150:                                            ; preds = %dec_label_pc_12360
  %v4_12370 = call i32 @function_123f6()
  store i32 %v4_12370, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12376

dec_label_pc_12376:                               ; preds = %dec_label_pc_12360, %bb150
  %v1_1237d = icmp eq i32 %v0_12206, 0
  br i1 %v1_1237d, label %bb151, label %dec_label_pc_12381

bb151:                                            ; preds = %dec_label_pc_12376
  %v1_1237f = call i32 @function_123b9()
  store i32 %v1_1237f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12381

dec_label_pc_12381:                               ; preds = %bb151, %dec_label_pc_12376
  store i32 10, i32* @eax, align 4
  %v1_12391 = load i32, i32* @edi, align 4
  %v12_12391 = icmp eq i32 %v0_12206, %v1_12391
  br i1 %v12_12391, label %bb152, label %dec_label_pc_123a8

bb152:                                            ; preds = %dec_label_pc_12381
  %v1_12393 = call i32 @function_124a8()
  store i32 %v1_12393, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_123a8

dec_label_pc_123a8:                               ; preds = %dec_label_pc_12381, %bb152
  %v0_123a0 = phi i32 [ %v1_12393, %bb152 ], [ 10, %dec_label_pc_12381 ]
  store i32 0, i32* %ecx.global-to-local, align 4
  %tmp165 = icmp ult i32 %v0_123a0, 11
  br i1 %tmp165, label %bb154, label %dec_label_pc_123b1

bb154:                                            ; preds = %dec_label_pc_123a8
  %v3_123af = call i32 @function_123b9()
  store i32 %v3_123af, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_123b1

dec_label_pc_123b1:                               ; preds = %bb154, %dec_label_pc_123a8
  %v3_123b1 = phi i32 [ %v3_123af, %bb154 ], [ %v0_123a0, %dec_label_pc_123a8 ]
  ret i32 %v3_123b1

; uselistorder directives
  uselistorder i32 %v0_123a0, { 1, 0 }
  uselistorder i32 %v3_12350, { 1, 0 }
  uselistorder i32 %v3_122fb, { 1, 0, 2 }
  uselistorder i8* %v1_12358, { 1, 0 }
  uselistorder i32 %v3_122be, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12293, { 3, 2, 1, 0 }
  uselistorder i1 %v1_12273, { 1, 0 }
  uselistorder i32 %v0_1225b, { 2, 1, 0 }
  uselistorder i32 %v0_121e2, { 1, 0 }
  uselistorder i32 %tmp126, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_68, { 0, 1, 3, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 0, 1, 3, 11, 12, 16, 4, 5, 17, 13, 14, 15, 18, 6, 19, 8, 20, 10, 21, 22, 7, 23, 9, 24, 25, 26, 27 }
  uselistorder i32 11, { 0, 4, 1, 2, 3 }
  uselistorder i32 10, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_123b9, { 1, 0 }
  uselistorder i32 (i32)* @unknown_23fb0, { 2, 1, 0 }
  uselistorder i32 ()* @function_12620, { 1, 0 }
  uselistorder i32 (i32)* @function_12665, { 2, 1, 0 }
  uselistorder i32 2, { 0, 11, 1, 12, 13, 2, 3, 14, 4, 5, 15, 6, 7, 8, 9, 10, 16 }
  uselistorder label %dec_label_pc_123a8, { 1, 0 }
  uselistorder label %dec_label_pc_12376, { 1, 0 }
  uselistorder label %dec_label_pc_12303, { 1, 0 }
}

define i32 @function_123b9() local_unnamed_addr {
dec_label_pc_123b9:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_100 = alloca i32, align 4
  %v2_123cb = ptrtoint i32* %stack_var_100 to i32
  %v1_123d2 = call i32 @unknown_16b10(i32 %v2_123cb)
  %v3_123de = xor i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v4_123de = icmp eq i32 %v3_123de, 0
  store i32 %v3_123de, i32* @eax, align 4
  %v1_123e5 = icmp eq i1 %v4_123de, false
  br i1 %v1_123e5, label %bb, label %dec_label_pc_123eb

bb:                                               ; preds = %dec_label_pc_123b9
  %v2_123e5 = call i32 @function_12634()
  br label %dec_label_pc_123eb

dec_label_pc_123eb:                               ; preds = %bb, %dec_label_pc_123b9
  %v0_123f5 = phi i32 [ %v2_123e5, %bb ], [ %v3_123de, %dec_label_pc_123b9 ]
  ret i32 %v0_123f5
}

define i32 @function_123f6() local_unnamed_addr {
dec_label_pc_123f6:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v2_12405 = call i32 @unknown_22610(i32 %tmp1, i32 %tmp3)
  ret i32 %v2_12405
}

define i32 @function_1240f() local_unnamed_addr {
dec_label_pc_1240f:
  %tmp = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp
}

define i32 @function_12456() local_unnamed_addr {
dec_label_pc_12456:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %v2_12456 = load i8, i8* bitcast (i32* @edi to i8*), align 4
  %v3_12456 = lshr i8 %v2_12456, ptrtoint (i8** @global_var_4.814 to i8)
  %v4_12456 = mul i8 %v2_12456, 16
  %v5_12456 = or i8 %v3_12456, %v4_12456
  %v6_12456 = load i32, i32* %edi.global-to-local, align 4
  %v7_12456 = inttoptr i32 %v6_12456 to i8*
  store i8 %v5_12456, i8* %v7_12456, align 1
  %v0_12459 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12459
}

define i32 @function_12469(i32 %arg1) local_unnamed_addr {
dec_label_pc_12469:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12470(i32 %arg1) local_unnamed_addr {
dec_label_pc_12470:
  %eax.global-to-local = alloca i32, align 4
  %v0_12470 = load i32, i32* @eax, align 4
  %v1_12470 = trunc i32 %v0_12470 to i8
  %v2_12470 = or i8 %v1_12470, ptrtoint (i8** @global_var_1.820 to i8)
  %v8_12470 = zext i8 %v2_12470 to i32
  %v10_12470 = and i32 %v0_12470, -256
  %v11_12470 = or i32 %v8_12470, %v10_12470
  store i32 %v11_12470, i32* %eax.global-to-local, align 4
  %v1_12472 = inttoptr i32 %v11_12470 to i8*
  %v2_12472 = load i8, i8* %v1_12472, align 1
  %v5_12472 = add i8 %v2_12472, %v2_12470
  store i8 %v5_12472, i8* %v1_12472, align 1
  %v0_12474 = load i32, i32* @ecx, align 4
  %v1_12474 = add i32 %v0_12474, -955767740
  %v2_12474 = inttoptr i32 %v1_12474 to i8*
  %v3_12474 = load i8, i8* %v2_12474, align 1
  %v5_12474 = trunc i32 %v0_12474 to i8
  %v6_12474 = add i8 %v3_12474, %v5_12474
  store i8 %v6_12474, i8* %v2_12474, align 1
  %v0_1247b = load i32, i32* %eax.global-to-local, align 4
  %v1_1247b = trunc i32 %v0_1247b to i8
  %v2_1247b = and i8 %v1_1247b, ptrtoint (i8** @global_var_4.814 to i8)
  %v8_1247b = zext i8 %v2_1247b to i32
  %v10_1247b = and i32 %v0_1247b, -256
  %v11_1247b = or i32 %v8_1247b, %v10_1247b
  store i32 %v11_1247b, i32* %eax.global-to-local, align 4
  %v1_1247d = inttoptr i32 %v11_1247b to i8*
  %v2_1247d = load i8, i8* %v1_1247d, align 4
  %v5_1247d = add i8 %v2_1247d, %v2_1247b
  store i8 %v5_1247d, i8* %v1_1247d, align 4
  %v0_1247f = load i32, i32* %eax.global-to-local, align 4
  %v1_1247f = inttoptr i32 %v0_1247f to i8*
  %v2_1247f = load i8, i8* %v1_1247f, align 1
  %v4_1247f = trunc i32 %v0_1247f to i8
  %v5_1247f = add i8 %v2_1247f, %v4_1247f
  store i8 %v5_1247f, i8* %v1_1247f, align 1
  %v0_12481 = load i32, i32* @ebx, align 4
  %v1_12484 = call i32 @unknown_21b60(i32 %v0_12481)
  store i32 %v1_12484, i32* %eax.global-to-local, align 4
  %v0_12489 = load i32, i32* @ebx, align 4
  %v1_12489 = add i32 %v0_12489, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12489 = inttoptr i32 %v1_12489 to i32*
  %v3_12489 = load i32, i32* %v2_12489, align 4
  store i32 %v3_12489, i32* @eax, align 4
  %v1_1248e = icmp eq i32 %v3_12489, 0
  %v1_12498 = icmp eq i1 %v1_1248e, false
  br i1 %v1_12498, label %bb, label %dec_label_pc_1249e

bb:                                               ; preds = %dec_label_pc_12470
  %v4_12498 = call i32 @function_1219e(i32 %v0_12489, i32 %v3_12489)
  store i32 %v4_12498, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1249e

dec_label_pc_1249e:                               ; preds = %bb, %dec_label_pc_12470
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_124a0 = call i32 @function_121aa()
  store i32 %v0_124a0, i32* %eax.global-to-local, align 4
  ret i32 %v0_124a0

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i8 ptrtoint (i8** @global_var_4.814 to i8), { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 ptrtoint (i8** @global_var_1.820 to i8), { 18, 17, 16, 15, 14, 13, 12, 2, 11, 3, 5, 10, 4, 9, 0, 1, 8, 7, 6 }
}

define i32 @function_124a8() local_unnamed_addr {
dec_label_pc_124a8:
  %v0_124a8 = load i32, i32* @eax, align 4
  ret i32 %v0_124a8
}

define i32 @function_124b1() local_unnamed_addr {
dec_label_pc_124b1:
  %v0_124b1 = call i32 @unknown_15b36()
  %v0_124bc = call i32 @function_121aa()
  ret i32 %v0_124bc

; uselistorder directives
  uselistorder i32 ()* @function_121aa, { 1, 0 }
}

define i32 @function_124c1() local_unnamed_addr {
dec_label_pc_124c1:
  %v0_124c3 = load i32, i32* @eax, align 4
  %v1_124c7 = call i32 @function_12469(i32 %v0_124c3)
  ret i32 %v1_124c7
}

define i32 @function_124c9() local_unnamed_addr {
dec_label_pc_124c9:
  %v0_124c9 = call i32 @unknown_15ace()
  ret i32 %v0_124c9
}

define i32 @function_124ce() local_unnamed_addr {
dec_label_pc_124ce:
  %stack_var_124 = alloca i32, align 4
  %v2_124d5 = ptrtoint i32* %stack_var_124 to i32
  ret i32 %v2_124d5
}

define i32 @function_12520(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12520:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_100 = alloca i32, align 4
  %stack_var_84 = alloca i32, align 4
  %v0_12520 = load i32, i32* @ecx, align 4
  %v1_12520 = add i32 %v0_12520, -1995168684
  %v2_12520 = inttoptr i32 %v1_12520 to i8*
  %v3_12520 = load i8, i8* %v2_12520, align 1
  %v5_12520 = trunc i32 %v0_12520 to i8
  %v6_12520 = load i1, i1* @cf, align 1
  %v7_12520 = zext i1 %v6_12520 to i8
  %v8_12520 = sub i8 %v3_12520, %v5_12520
  %v9_12520 = add i8 %v8_12520, %v7_12520
  store i8 %v9_12520, i8* %v2_12520, align 1
  %v0_12526 = load i32, i32* @eax, align 4
  %v2_12526 = sub i32 %v0_12526, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  %v16_12526 = and i32 %v2_12526, 255
  %v18_12526 = and i32 %v0_12526, -256
  %v19_12526 = or i32 %v16_12526, %v18_12526
  store i32 %v19_12526, i32* @eax, align 4
  %v0_12528 = call i32 @function_14980()
  store i32 %arg2, i32* @eax, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v10_12535 = icmp eq i32 %arg1, 1
  br i1 %v10_12535, label %bb, label %dec_label_pc_1253e

bb:                                               ; preds = %dec_label_pc_12520
  %v1_12538 = call i32 @function_125ee()
  store i32 %v1_12538, i32* @eax, align 4
  %v0_1253e.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_1253e

dec_label_pc_1253e:                               ; preds = %bb, %dec_label_pc_12520
  %v0_125473 = phi i32 [ %v1_12538, %bb ], [ %arg2, %dec_label_pc_12520 ]
  %v0_1253e = phi i32 [ %v0_1253e.pre, %bb ], [ %arg1, %dec_label_pc_12520 ]
  %v10_1253e = icmp eq i32 %v0_1253e, 1
  br i1 %v10_1253e, label %bb11, label %dec_label_pc_12547

bb11:                                             ; preds = %dec_label_pc_1253e
  %v1_12541 = call i32 @function_125d8()
  br label %dec_label_pc_12547

dec_label_pc_12547:                               ; preds = %bb11, %dec_label_pc_1253e
  %v0_12547 = phi i32 [ %v1_12541, %bb11 ], [ %v0_125473, %dec_label_pc_1253e ]
  store i32 %v0_12547, i32* @ebx, align 4
  %v2_12549 = ptrtoint i32* %stack_var_84 to i32
  %v1_12550 = call i32 @unknown_227e0(i32 %v2_12549)
  %v0_12555 = load i32, i32* @esi, align 4
  %v1_12558 = call i32 @unknown_1c4c0(i32 %v0_12555)
  %v2_1255d = ptrtoint i32* %stack_var_100 to i32
  %v1_12564 = call i32 @unknown_16b10(i32 %v2_1255d)
  ret i32 %v1_12564

; uselistorder directives
  uselistorder i32 %v0_12526, { 1, 0 }
  uselistorder i32 (i32)* @unknown_16b10, { 0, 2, 1 }
  uselistorder i32 255, { 0, 1, 2, 3, 4, 5, 6, 10, 7, 8, 9 }
  uselistorder i1* @cf, { 5, 3, 8, 0, 9, 1, 4, 6, 7, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_12583(i32 %arg1) local_unnamed_addr {
dec_label_pc_12583:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp91
}

define i32 @function_125af() local_unnamed_addr {
dec_label_pc_125af:
  %v3_125c7 = load i32, i32* @eax, align 4
  ret i32 %v3_125c7
}

define i32 @function_125d3() local_unnamed_addr {
dec_label_pc_125d3:
  %eax.global-to-local = alloca i32, align 4
  %v0_125d3 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_125d3
}

define i32 @function_125d8() local_unnamed_addr {
dec_label_pc_125d8:
  %v0_125db = load i32, i32* @eax, align 4
  ret i32 %v0_125db
}

define i32 @function_125e5(i32 %arg1) local_unnamed_addr {
dec_label_pc_125e5:
  ret i32 %arg1
}

define i32 @function_125ee() local_unnamed_addr {
dec_label_pc_125ee:
  %v3_125ee = load i32, i32* @eax, align 4
  ret i32 %v3_125ee
}

define i32 @function_12620() local_unnamed_addr {
dec_label_pc_12620:
  %v0_12620 = call i32 @unknown_15a9a()
  ret i32 %v0_12620
}

define i32 @function_1262f() local_unnamed_addr {
dec_label_pc_1262f:
  %eax.global-to-local = alloca i32, align 4
  %v0_1262f = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1262f
}

define i32 @function_12634() local_unnamed_addr {
dec_label_pc_12634:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12638() local_unnamed_addr {
dec_label_pc_12638:
  %eax.global-to-local = alloca i32, align 4
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  %v1_12638 = add i32 %tmp91, 9908
  %v2_12638 = inttoptr i32 %v1_12638 to i32*
  %v3_12638 = load i32, i32* %v2_12638, align 4
  %v4_12638 = add i32 %v3_12638, -1
  store i32 %v4_12638, i32* %v2_12638, align 4
  %v2_1263e = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_1263e = load i32, i32* %eax.global-to-local, align 4
  %v4_1263e = trunc i32 %v3_1263e to i8
  %v5_1263e = add i8 %v4_1263e, %v2_1263e
  %v21_1263e = inttoptr i32 %v3_1263e to i8*
  store i8 %v5_1263e, i8* %v21_1263e, align 1
  %v0_12640 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12640
}

define i32 @function_12645() local_unnamed_addr {
dec_label_pc_12645:
  %eax.global-to-local = alloca i32, align 4
  %v0_12645 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12645
}

define i32 @function_1264c(i8 %arg1) local_unnamed_addr {
dec_label_pc_1264c:
  %eax.global-to-local = alloca i32, align 4
  %v0_1265e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1265e
}

define i32 @function_12665(i32 %arg1) local_unnamed_addr {
dec_label_pc_12665:
  %v0_12665 = call i32 @unknown_15a66()
  ret i32 %v0_12665
}

define i32 @function_12675(i32 %arg1) local_unnamed_addr {
dec_label_pc_12675:
  %tmp91 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp91
}

define i32 @_ZSt4copyIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_12680:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp133 = ptrtoint i32* %arg1 to i32
  %v0_12680 = load i32, i32* %ebp.global-to-local, align 4
  %v0_12681 = load i32, i32* %edi.global-to-local, align 4
  %v0_12682 = load i32, i32* %esi.global-to-local, align 4
  %v0_12683 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg4, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v5_126df = sub i32 %arg6, %arg7
  store i32 %arg10, i32* @edi, align 4
  %v2_12710 = sub i32 %arg9, %arg5
  %v2_12714 = sdiv i32 %v2_12710, 4
  %v2_12717 = sub i32 %arg4, %arg2
  store i32 %v2_12717, i32* %edx.global-to-local, align 4
  %v1_12719 = sub i32 %v2_12714, ptrtoint (i8** @global_var_1.820 to i32)
  %v2_1271c = shl i32 %v1_12719, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_1271c, i32* %eax.global-to-local, align 4
  %v2_1271f = add i32 %v2_1271c, %v2_12717
  %v2_12721 = add i32 %v2_1271f, %v5_126df
  store i32 %v2_12721, i32* %ebp.global-to-local, align 4
  %tmp143 = icmp slt i32 %v2_12721, 1
  br i1 %tmp143, label %bb, label %dec_label_pc_12733

bb:                                               ; preds = %dec_label_pc_12680
  %v16_1272d = call i32 @function_128a3(i32 %arg3, i32 %arg5, i32 %arg4, i32 %tmp133, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5)
  store i32 %v16_1272d, i32* %eax.global-to-local, align 4
  %v0_12733.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_12733

dec_label_pc_12733:                               ; preds = %bb, %dec_label_pc_12680
  %v0_12733 = phi i32 [ %v0_12733.pre, %bb ], [ %arg10, %dec_label_pc_12680 ]
  %v1_12733 = add i32 %v0_12733, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12733 = inttoptr i32 %v1_12733 to i32*
  %v3_12733 = load i32, i32* %v2_12733, align 4
  store i32 %v3_12733, i32* %ecx.global-to-local, align 4
  %v1_12736 = inttoptr i32 %v0_12733 to i32*
  %v2_12736 = load i32, i32* %v1_12736, align 4
  store i32 %v2_12736, i32* @eax, align 4
  br label %dec_label_pc_12751

dec_label_pc_12740:                               ; preds = %dec_label_pc_127ca
  %v0_12740 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12740 = load i32, i32* %ebx.global-to-local, align 4
  %v2_12740 = sub i32 %v0_12740, %v1_12740
  store i32 %v2_12740, i32* %ebp.global-to-local, align 4
  %v2_12742 = add i32 %v1_12740, %v0_12742
  store i32 %v2_12742, i32* @eax, align 4
  %v0_12744 = load i32, i32* @edi, align 4
  %v1_12744 = add i32 %v0_12744, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12744 = inttoptr i32 %v1_12744 to i32*
  %v3_12744 = load i32, i32* %v2_12744, align 4
  store i32 %v3_12744, i32* %ecx.global-to-local, align 4
  %v2_12749 = inttoptr i32 %v0_12744 to i32*
  store i32 %v2_12742, i32* %v2_12749, align 4
  %tmp144 = icmp slt i32 %v2_12740, 1
  br i1 %tmp144, label %dec_label_pc_12823, label %dec_label_pc_12751.backedge

dec_label_pc_12751:                               ; preds = %dec_label_pc_12751.backedge, %dec_label_pc_12733
  %v0_12864 = phi i32 [ %v2_12736, %dec_label_pc_12733 ], [ %v1_12755.pre, %dec_label_pc_12751.backedge ]
  %v0_12755 = phi i32 [ %v3_12733, %dec_label_pc_12733 ], [ %v0_12755.pre, %dec_label_pc_12751.backedge ]
  %stack_var_-88.0 = phi i32 [ %arg5, %dec_label_pc_12733 ], [ %stack_var_-88.1, %dec_label_pc_12751.backedge ]
  %stack_var_-92.0 = phi i32 [ %arg3, %dec_label_pc_12733 ], [ %stack_var_-92.1, %dec_label_pc_12751.backedge ]
  %stack_var_-84.0 = phi i32 [ %arg4, %dec_label_pc_12733 ], [ %stack_var_-84.1, %dec_label_pc_12751.backedge ]
  %v2_12755 = sub i32 %v0_12755, %v0_12864
  %v0_12757 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12759 = load i32, i32* %esi.global-to-local, align 4
  %v2_12759 = sub i32 %stack_var_-84.0, %v1_12759
  %v2_1275b = sub i32 %v2_12755, %v2_12759
  %v8_1275b = xor i32 %v2_12759, %v2_12755
  %v9_1275b = xor i32 %v2_1275b, %v2_12755
  %v10_1275b = and i32 %v9_1275b, %v8_1275b
  %v11_1275b = icmp slt i32 %v10_1275b, 0
  %v12_1275b = icmp eq i32 %v2_1275b, 0
  %v13_1275b = icmp slt i32 %v2_1275b, 0
  %v3_1275d = icmp eq i1 %v13_1275b, %v11_1275b
  %v4_1275d = icmp eq i1 %v12_1275b, false
  %v5_1275d = icmp eq i1 %v3_1275d, %v4_1275d
  %v8_1275d = select i1 %v5_1275d, i32 %v2_12759, i32 %v2_12755
  %v2_12760 = sub i32 %v8_1275d, %v0_12757
  %v8_12760 = xor i32 %v8_1275d, %v0_12757
  %v9_12760 = xor i32 %v2_12760, %v8_1275d
  %v10_12760 = and i32 %v9_12760, %v8_12760
  %v11_12760 = icmp slt i32 %v10_12760, 0
  %v12_12760 = icmp eq i32 %v2_12760, 0
  %v13_12760 = icmp slt i32 %v2_12760, 0
  %v3_12762 = icmp ne i1 %v13_12760, %v11_12760
  %v4_12762 = or i1 %v12_12760, %v3_12762
  %v7_12762 = select i1 %v4_12762, i32 %v8_1275d, i32 %v0_12757
  store i32 %v7_12762, i32* %ebx.global-to-local, align 4
  %v2_12765 = mul i32 %v7_12762, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_12765 = add i32 %v2_12765, %v1_12759
  store i32 %v3_12765, i32* %edx.global-to-local, align 4
  %v12_1276a = icmp eq i32 %v2_12765, 0
  store i32 %v2_12765, i32* %ecx.global-to-local, align 4
  %v1_1276c = icmp eq i1 %v12_1276a, false
  br i1 %v1_1276c, label %dec_label_pc_12858, label %dec_label_pc_12772

dec_label_pc_12772:                               ; preds = %dec_label_pc_12751
  %v5_12772 = sub i32 %v1_12759, %stack_var_-92.0
  store i32 %v5_12772, i32* %esi.global-to-local, align 4
  %v2_12778 = add i32 %v5_12772, %v7_12762
  %v13_12778 = icmp slt i32 %v2_12778, 0
  store i32 %v2_12778, i32* @ecx, align 4
  br i1 %v13_12778, label %bb145, label %dec_label_pc_12780

bb145:                                            ; preds = %dec_label_pc_12772
  %v1_1277a = call i32 @function_12880()
  store i32 %v1_1277a, i32* %eax.global-to-local, align 4
  %v0_12786.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %bb145, %dec_label_pc_12772
  %v0_127bd = phi i32 [ %v1_1277a, %bb145 ], [ %v0_12864, %dec_label_pc_12772 ]
  %v0_12786 = phi i32 [ %v0_12786.pre, %bb145 ], [ %v3_12765, %dec_label_pc_12772 ]
  store i32 %v0_12786, i32* %esi.global-to-local, align 4
  %v7_12788 = icmp sgt i32 %v2_12778, 511
  br i1 %v7_12788, label %dec_label_pc_1278a, label %dec_label_pc_127bd

dec_label_pc_1278a:                               ; preds = %dec_label_pc_12780
  %v2_12794 = ashr i32 %v2_12778, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_12794, i32* %edx.global-to-local, align 4
  %v2_1279b = mul i32 %v2_12794, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1279b = add i32 %v2_1279b, %stack_var_-88.0
  store i32 %v3_1279b, i32* %esi.global-to-local, align 4
  %v1_127a2 = inttoptr i32 %v3_1279b to i32*
  %v2_127a2 = load i32, i32* %v1_127a2, align 4
  %v2_127a4 = shl i32 %v2_12794, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_127a4, i32* %edx.global-to-local, align 4
  %v2_127a7 = sub i32 %v2_12778, %v2_127a4
  store i32 %v2_127a7, i32* %ecx.global-to-local, align 4
  %v1_127ad = add i32 %v2_127a2, 512
  %v2_127bb = add i32 %v2_127a2, %v2_127a7
  store i32 %v2_127bb, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_127bd

dec_label_pc_127bd:                               ; preds = %dec_label_pc_12780, %dec_label_pc_1278a
  %stack_var_-88.1 = phi i32 [ %v3_1279b, %dec_label_pc_1278a ], [ %stack_var_-88.0, %dec_label_pc_12780 ]
  %stack_var_-92.1 = phi i32 [ %v2_127a2, %dec_label_pc_1278a ], [ %stack_var_-92.0, %dec_label_pc_12780 ]
  %stack_var_-84.1 = phi i32 [ %v1_127ad, %dec_label_pc_1278a ], [ %stack_var_-84.0, %dec_label_pc_12780 ]
  store i32 %v0_127bd, i32* %edx.global-to-local, align 4
  %v1_127bf = load i32, i32* @edi, align 4
  %v2_127bf = add i32 %v1_127bf, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_127bf = inttoptr i32 %v2_127bf to i32*
  %v4_127bf = load i32, i32* %v3_127bf, align 4
  %v5_127bf = sub i32 %v0_127bd, %v4_127bf
  %v1_127c2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_127c2 = add i32 %v1_127c2, %v5_127bf
  %v13_127c2 = icmp slt i32 %v2_127c2, 0
  store i32 %v2_127c2, i32* @edx, align 4
  br i1 %v13_127c2, label %bb147, label %dec_label_pc_127ca

bb147:                                            ; preds = %dec_label_pc_127bd
  %v1_127c4 = call i32 @function_12890()
  store i32 %v1_127c4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_127ca

dec_label_pc_127ca:                               ; preds = %bb147, %dec_label_pc_127bd
  %v0_12742 = phi i32 [ %v1_127c4, %bb147 ], [ %v0_127bd, %dec_label_pc_127bd ]
  %v7_127d0 = icmp sgt i32 %v2_127c2, 511
  br i1 %v7_127d0, label %dec_label_pc_127d6, label %dec_label_pc_12740

dec_label_pc_127d6:                               ; preds = %dec_label_pc_127ca
  %v2_127e0 = ashr i32 %v2_127c2, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_127e0, i32* %eax.global-to-local, align 4
  %v0_127e7 = load i32, i32* @edi, align 4
  %v1_127e7 = add i32 %v0_127e7, 12
  %v2_127e7 = inttoptr i32 %v1_127e7 to i32*
  %v3_127e7 = load i32, i32* %v2_127e7, align 4
  store i32 %v3_127e7, i32* %ecx.global-to-local, align 4
  %v0_127ea = load i32, i32* %ebp.global-to-local, align 4
  %v1_127ea = load i32, i32* %ebx.global-to-local, align 4
  %v2_127ea = sub i32 %v0_127ea, %v1_127ea
  store i32 %v2_127ea, i32* %ebp.global-to-local, align 4
  %v2_127f0 = mul i32 %v2_127e0, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_127f0 = add i32 %v3_127e7, %v2_127f0
  store i32 %v3_127f0, i32* %eax.global-to-local, align 4
  store i32 %v3_127f0, i32* %v2_127e7, align 4
  %v0_127f6 = load i32, i32* %eax.global-to-local, align 4
  %v1_127f6 = inttoptr i32 %v0_127f6 to i32*
  %v2_127f6 = load i32, i32* %v1_127f6, align 4
  store i32 %v2_127f6, i32* %ecx.global-to-local, align 4
  %v1_127fe = load i32, i32* @edi, align 4
  %v2_127fe = add i32 %v1_127fe, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_127fe = inttoptr i32 %v2_127fe to i32*
  store i32 %v2_127f6, i32* %v3_127fe, align 4
  store i32 %v2_127e0, i32* %eax.global-to-local, align 4
  %v0_12805 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12805 = add i32 %v0_12805, 512
  store i32 %v1_12805, i32* %ecx.global-to-local, align 4
  %v1_1280b = load i32, i32* @edi, align 4
  %v2_1280b = add i32 %v1_1280b, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_1280b = inttoptr i32 %v2_1280b to i32*
  store i32 %v1_12805, i32* %v3_1280b, align 4
  %v0_1280e = load i32, i32* %eax.global-to-local, align 4
  %v2_1280e = shl i32 %v0_1280e, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_12811 = sub i32 %v2_127c2, %v2_1280e
  store i32 %v2_12811, i32* %edx.global-to-local, align 4
  %v2_12817 = add i32 %v2_12811, %v2_127f6
  store i32 %v2_12817, i32* @eax, align 4
  %v0_12819 = load i32, i32* %ebp.global-to-local, align 4
  %v1_12819 = icmp eq i32 %v0_12819, 0
  %v2_12819 = icmp slt i32 %v0_12819, 0
  %v1_1281b = load i32, i32* @edi, align 4
  %v2_1281b = inttoptr i32 %v1_1281b to i32*
  store i32 %v2_12817, i32* %v2_1281b, align 4
  %v3_1281d = icmp eq i1 %v2_12819, false
  %v4_1281d = icmp eq i1 %v1_12819, false
  %v5_1281d = icmp eq i1 %v3_1281d, %v4_1281d
  br i1 %v5_1281d, label %dec_label_pc_12751.backedge, label %dec_label_pc_12823

dec_label_pc_12751.backedge:                      ; preds = %dec_label_pc_127d6, %dec_label_pc_12740
  %v0_12755.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_12755.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_12751

dec_label_pc_12823:                               ; preds = %dec_label_pc_12740, %dec_label_pc_127d6
  store i32 %tmp133, i32* %edx.global-to-local, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %esi.global-to-local, align 4
  %v0_12832 = load i32, i32* @eax, align 4
  store i32 %v0_12832, i32* %arg1, align 4
  %v0_12834 = load i32, i32* @edi, align 4
  %v1_12834 = add i32 %v0_12834, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12834 = inttoptr i32 %v1_12834 to i32*
  %v3_12834 = load i32, i32* %v2_12834, align 4
  store i32 %v3_12834, i32* %eax.global-to-local, align 4
  %v0_12837 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12837 = load i32, i32* %edx.global-to-local, align 4
  %v2_12837 = add i32 %v1_12837, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12837 = inttoptr i32 %v2_12837 to i32*
  store i32 %v0_12837, i32* %v3_12837, align 4
  %v0_1283a = load i32, i32* %eax.global-to-local, align 4
  %v1_1283a = load i32, i32* %edx.global-to-local, align 4
  %v2_1283a = add i32 %v1_1283a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1283a = inttoptr i32 %v2_1283a to i32*
  store i32 %v0_1283a, i32* %v3_1283a, align 4
  %v0_1283d = load i32, i32* @edi, align 4
  %v1_1283d = add i32 %v0_1283d, 12
  %v2_1283d = inttoptr i32 %v1_1283d to i32*
  %v3_1283d = load i32, i32* %v2_1283d, align 4
  %v1_12840 = load i32, i32* %edx.global-to-local, align 4
  %v2_12840 = add i32 %v1_12840, 12
  %v3_12840 = inttoptr i32 %v2_12840 to i32*
  store i32 %v3_1283d, i32* %v3_12840, align 4
  %v0_12843 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_12843, i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb149, label %dec_label_pc_12847

bb149:                                            ; preds = %dec_label_pc_12823
  %v2_12845 = call i32 @function_128ad()
  store i32 %v2_12845, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12847

dec_label_pc_12847:                               ; preds = %bb149, %dec_label_pc_12823
  %v0_1284e = phi i32 [ %v2_12845, %bb149 ], [ %v0_12843, %dec_label_pc_12823 ]
  store i32 %v0_12683, i32* %ebx.global-to-local, align 4
  store i32 %v0_12682, i32* %esi.global-to-local, align 4
  store i32 %v0_12681, i32* %edi.global-to-local, align 4
  store i32 %v0_12680, i32* %ebp.global-to-local, align 4
  ret i32 %v0_1284e

dec_label_pc_12858:                               ; preds = %dec_label_pc_12751
  ret i32 %v0_12864

; uselistorder directives
  uselistorder i32 %v0_12819, { 1, 0 }
  uselistorder i32 %v2_127a2, { 2, 0, 1 }
  uselistorder i32 %v0_127bd, { 2, 1, 0 }
  uselistorder i32 %v2_12765, { 2, 1, 0 }
  uselistorder i32 %v2_12760, { 1, 2, 0 }
  uselistorder i32 %v8_1275d, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1275b, { 1, 2, 0 }
  uselistorder i32 %v2_12759, { 1, 0, 2 }
  uselistorder i32 %v0_12757, { 1, 0, 2 }
  uselistorder i32 %v2_12755, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 1, 0 }
  uselistorder i32 %v0_12733, { 1, 0 }
  uselistorder i32 %tmp133, { 1, 0 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 0, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32* %ebp.global-to-local, { 1, 2, 3, 4, 6, 0, 5, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 11 }
  uselistorder i32 %arg9, { 1, 0 }
  uselistorder i32 %arg5, { 3, 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 3, 0, 2, 4 }
  uselistorder i32 %arg3, { 1, 2, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12823, { 1, 0 }
  uselistorder label %dec_label_pc_127bd, { 1, 0 }
}

define i32 @function_12880() local_unnamed_addr {
dec_label_pc_12880:
  %v0_12880 = load i32, i32* @ecx, align 4
  %v2_12882 = lshr i32 %v0_12880, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_12885 = or i32 %v2_12882, -8388608
  store i32 %v1_12885, i32* @edx, align 4
  %v0_1288b = load i32, i32* @eax, align 4
  ret i32 %v0_1288b
}

define i32 @function_12890() local_unnamed_addr {
dec_label_pc_12890:
  %v0_12890 = load i32, i32* @edx, align 4
  %v2_12892 = lshr i32 %v0_12890, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_12895 = or i32 %v2_12892, -8388608
  ret i32 %v1_12895
}

define i32 @function_128a3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_128a3:
  %v2_128a3 = load i32, i32* @edi, align 4
  ret i32 %v2_128a3
}

define i32 @function_128ad() local_unnamed_addr {
dec_label_pc_128ad:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt13copy_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32* %arg9, i32 %arg10) local_unnamed_addr {
dec_label_pc_128c0:
  %tmp118 = ptrtoint i32* %arg9 to i32
  store i32 %arg10, i32* @edi, align 4
  %v2_12931 = sub i32 %arg4, %arg2
  %v2_1293f = sub i32 %tmp118, %arg5
  %v2_12945 = sdiv i32 %v2_1293f, 4
  %v2_12948 = sub i32 %arg6, %arg7
  %v1_1294a = add nsw i32 %v2_12945, -1
  %v2_1294d = shl i32 %v1_1294a, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_12950 = add i32 %v2_1294d, %v2_12948
  %v1_12952 = inttoptr i32 %arg10 to i32*
  %v2_12952 = load i32, i32* %v1_12952, align 4
  store i32 %v2_12952, i32* @edx, align 4
  %v2_12954 = add i32 %v2_12931, %v2_12950
  %v12_12954 = icmp eq i32 %v2_12954, 0
  %v13_12954 = icmp slt i32 %v2_12954, 0
  store i32 %v2_12954, i32* @esi, align 4
  %v1_12960 = add i32 %arg10, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12960 = inttoptr i32 %v1_12960 to i32*
  %v3_12960 = load i32, i32* %v2_12960, align 4
  store i32 %v3_12960, i32* @ecx, align 4
  %v3_1296f = icmp eq i1 %v13_12954, false
  %v4_1296f = icmp eq i1 %v12_12954, false
  %v5_1296f = icmp eq i1 %v3_1296f, %v4_1296f
  br i1 %v5_1296f, label %dec_label_pc_129a7, label %dec_label_pc_12971

dec_label_pc_12971:                               ; preds = %dec_label_pc_128c0
  %v11_12971 = inttoptr i32 %arg6 to i32*
  %v12_12971 = call i32 @function_12af8(i32* %v11_12971, i32 %tmp118, i32 %arg7, i32 %arg1, i32 %arg6, i32 %arg7, i32 %arg8, i32 %tmp118, i32 %arg3, i32 %arg4, i32 %arg5)
  ret i32 %v12_12971

dec_label_pc_129a7:                               ; preds = %dec_label_pc_128c0
  %v15_129b1 = icmp eq i32 %v2_12948, 0
  %v2_129bb = sub i32 %v2_12952, %v3_12960
  %v12_129bb = icmp eq i32 %v2_129bb, 0
  %v1_129c7 = icmp eq i1 %v15_129b1, false
  br i1 %v1_129c7, label %dec_label_pc_129df, label %dec_label_pc_129c9

dec_label_pc_129c9:                               ; preds = %dec_label_pc_129a7
  %v1_129cd = add i32 %tmp118, -4
  %v2_129cd = inttoptr i32 %v1_129cd to i32*
  %v3_129cd = load i32, i32* %v2_129cd, align 4
  %v1_129d5 = add i32 %v3_129cd, 512
  br label %dec_label_pc_129df

dec_label_pc_129df:                               ; preds = %dec_label_pc_129c9, %dec_label_pc_129a7
  %v6_12a02 = phi i32 [ %v2_12948, %dec_label_pc_129a7 ], [ 512, %dec_label_pc_129c9 ]
  %v0_12a0e = phi i32 [ %arg6, %dec_label_pc_129a7 ], [ %v1_129d5, %dec_label_pc_129c9 ]
  %v1_129e9 = icmp eq i1 %v12_129bb, false
  br i1 %v1_129e9, label %dec_label_pc_12a00, label %dec_label_pc_129eb

dec_label_pc_129eb:                               ; preds = %dec_label_pc_129df
  %v1_129eb = add i32 %arg10, 12
  %v2_129eb = inttoptr i32 %v1_129eb to i32*
  %v3_129eb = load i32, i32* %v2_129eb, align 4
  %v1_129ee = add i32 %v3_129eb, -4
  %v2_129ee = inttoptr i32 %v1_129ee to i32*
  %v3_129ee = load i32, i32* %v2_129ee, align 4
  %v1_129f1 = add i32 %v3_129ee, 512
  br label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129eb, %dec_label_pc_129df
  %v7_12a07 = phi i32 [ %v2_129bb, %dec_label_pc_129df ], [ 512, %dec_label_pc_129eb ]
  %stack_var_-84.0 = phi i32 [ %v2_12952, %dec_label_pc_129df ], [ %v1_129f1, %dec_label_pc_129eb ]
  %v2_12a00 = sub i32 %v6_12a02, %v2_12954
  %v8_12a00 = xor i32 %v6_12a02, %v2_12954
  %v9_12a00 = xor i32 %v2_12a00, %v6_12a02
  %v10_12a00 = and i32 %v9_12a00, %v8_12a00
  %v11_12a00 = icmp slt i32 %v10_12a00, 0
  %v12_12a00 = icmp eq i32 %v2_12a00, 0
  %v13_12a00 = icmp slt i32 %v2_12a00, 0
  %v3_12a02 = icmp eq i1 %v13_12a00, %v11_12a00
  %v4_12a02 = icmp eq i1 %v12_12a00, false
  %v5_12a02 = icmp eq i1 %v3_12a02, %v4_12a02
  %v8_12a02 = select i1 %v5_12a02, i32 %v2_12954, i32 %v6_12a02
  %v2_12a05 = sub i32 %v8_12a02, %v7_12a07
  %v8_12a05 = xor i32 %v7_12a07, %v8_12a02
  %v9_12a05 = xor i32 %v2_12a05, %v8_12a02
  %v10_12a05 = and i32 %v9_12a05, %v8_12a05
  %v11_12a05 = icmp slt i32 %v10_12a05, 0
  %v12_12a05 = icmp eq i32 %v2_12a05, 0
  %v13_12a05 = icmp slt i32 %v2_12a05, 0
  %v3_12a07 = icmp eq i1 %v13_12a05, %v11_12a05
  %v4_12a07 = icmp eq i1 %v12_12a05, false
  %v5_12a07 = icmp eq i1 %v3_12a07, %v4_12a07
  %v8_12a07 = select i1 %v5_12a07, i32 %v7_12a07, i32 %v8_12a02
  store i32 %v8_12a07, i32* @ebx, align 4
  %v12_12a14 = icmp eq i32 %v8_12a07, 0
  br i1 %v12_12a14, label %bb, label %dec_label_pc_12a1c

bb:                                               ; preds = %dec_label_pc_12a00
  %v2_12a0e = sub i32 %v0_12a0e, %v8_12a07
  %v2_12a1a = call i32 @function_12a3f(i32 %v2_12a0e)
  %v1_12a28.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %bb, %dec_label_pc_12a00
  %v1_12a28 = phi i32 [ %v1_12a28.pre, %bb ], [ %v8_12a07, %dec_label_pc_12a00 ]
  %v2_12a28 = sub i32 %stack_var_-84.0, %v1_12a28
  ret i32 %v2_12a28

; uselistorder directives
  uselistorder i32 %v8_12a07, { 0, 2, 1, 3 }
  uselistorder i32 %v2_12a05, { 1, 2, 0 }
  uselistorder i32 %v8_12a02, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12a00, { 1, 2, 0 }
  uselistorder i32 %v7_12a07, { 1, 0, 2 }
  uselistorder i32 %v6_12a02, { 2, 0, 1, 3 }
  uselistorder i32 %v2_12954, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v2_12948, { 1, 0, 2 }
  uselistorder i32 %tmp118, { 1, 3, 2, 0 }
  uselistorder i32 %arg10, { 2, 1, 0, 3 }
  uselistorder i32 %arg7, { 1, 0, 2 }
  uselistorder i32 %arg6, { 2, 1, 0, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @function_12a3f(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a3f:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_12a3f = load i32, i32* @ebx, align 4
  %v2_12a4b = sub i32 %tmp7, %v0_12a3f
  %v13_12a4b = icmp slt i32 %v2_12a4b, 0
  br i1 %v13_12a4b, label %dec_label_pc_12a57.thread, label %dec_label_pc_12a57

dec_label_pc_12a57.thread:                        ; preds = %dec_label_pc_12a3f
  %v1_12a51 = call i32 @function_12b30()
  br label %bb10

dec_label_pc_12a57:                               ; preds = %dec_label_pc_12a3f
  %v12_12a4b = icmp eq i32 %v2_12a4b, 0
  br i1 %v12_12a4b, label %bb10, label %dec_label_pc_12a6f

bb10:                                             ; preds = %dec_label_pc_12a57.thread, %dec_label_pc_12a57
  %v5_12a69 = call i32 @function_12b30()
  %v1_12aa4.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_12a6f

dec_label_pc_12a6f:                               ; preds = %bb10, %dec_label_pc_12a57
  %v1_12aa4 = phi i32 [ %v1_12aa4.pre, %bb10 ], [ %v0_12a3f, %dec_label_pc_12a57 ]
  %v2_12a73 = ashr i32 %v2_12a4b, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_12a82 = mul i32 %v2_12a73, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12a82 = add i32 %v2_12a82, %tmp5
  %v2_12aa4 = sub i32 %arg1, %v1_12aa4
  store i32 %v2_12aa4, i32* @eax, align 4
  %v2_12ab2 = lshr i32 %v2_12aa4, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_12ab5 = or i32 %v2_12ab2, -8388608
  store i32 %v1_12ab5, i32* @edx, align 4
  %v1_12abb = call i32 @function_12ac9(i32 %v3_12a82)
  ret i32 %v1_12abb

; uselistorder directives
  uselistorder i32 %v2_12a4b, { 0, 2, 1 }
  uselistorder i32 ()* @function_12b30, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_12ab0(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ab0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_12ac0() local_unnamed_addr {
dec_label_pc_12ac0:
  %of.global-to-local = alloca i1, align 1
  %v0_12ac0 = load i32, i32* @eax, align 4
  store i1 false, i1* %of.global-to-local, align 1
  %tmp = icmp slt i32 %v0_12ac0, 1
  br i1 %tmp, label %bb, label %dec_label_pc_12ac4

bb:                                               ; preds = %dec_label_pc_12ac0
  %v6_12ac2 = call i32 @function_12ab0(i32 ptrtoint (i32* @1 to i32))
  %v1_12ac6.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_12ac4

dec_label_pc_12ac4:                               ; preds = %bb, %dec_label_pc_12ac0
  %v1_12ac6 = phi i1 [ %v1_12ac6.pre, %bb ], [ false, %dec_label_pc_12ac0 ]
  %v12_12ac6 = phi i32 [ %v6_12ac2, %bb ], [ %v0_12ac0, %dec_label_pc_12ac0 ]
  store i1 %v1_12ac6, i1* %of.global-to-local, align 1
  ret i32 %v12_12ac6

; uselistorder directives
  uselistorder i32 %v0_12ac0, { 1, 0 }
}

define i32 @function_12ac9(i32 %arg1) local_unnamed_addr {
dec_label_pc_12ac9:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %v0_12ac9 = load i32, i32* @edx, align 4
  %v1_12ac9 = mul i32 %v0_12ac9, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_12ac9, i32* %ecx.global-to-local, align 4
  %v1_12ad2 = load i32, i32* @edi, align 4
  %v2_12ad2 = add i32 %v1_12ad2, 12
  %v3_12ad2 = inttoptr i32 %v2_12ad2 to i32*
  %v4_12ad2 = load i32, i32* %v3_12ad2, align 4
  %v5_12ad2 = add i32 %v4_12ad2, %v1_12ac9
  store i32 %v5_12ad2, i32* %ecx.global-to-local, align 4
  %v2_12ad5 = shl i32 %v0_12ac9, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_12ad5, i32* %edx.global-to-local, align 4
  %v0_12ad8 = load i32, i32* @eax, align 4
  %v2_12ad8 = sub i32 %v0_12ad8, %v2_12ad5
  store i32 %v2_12ad8, i32* %eax.global-to-local, align 4
  store i32 %v5_12ad2, i32* %v3_12ad2, align 4
  %v0_12adf = load i32, i32* %ecx.global-to-local, align 4
  %v1_12adf = inttoptr i32 %v0_12adf to i32*
  %v2_12adf = load i32, i32* %v1_12adf, align 4
  store i32 %v2_12adf, i32* %ecx.global-to-local, align 4
  %v1_12ae1 = add i32 %v2_12adf, 512
  store i32 %v1_12ae1, i32* @ebp, align 4
  %v1_12ae7 = load i32, i32* %eax.global-to-local, align 4
  %v3_12ae7 = add i32 %v1_12ae7, %v2_12adf
  store i32 %v3_12ae7, i32* %edx.global-to-local, align 4
  %v1_12aea = load i32, i32* @edi, align 4
  %v2_12aea = add i32 %v1_12aea, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12aea = inttoptr i32 %v2_12aea to i32*
  store i32 %v2_12adf, i32* %v3_12aea, align 4
  %v0_12aed = load i32, i32* @ebp, align 4
  %v1_12aed = load i32, i32* @edi, align 4
  %v2_12aed = add i32 %v1_12aed, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12aed = inttoptr i32 %v2_12aed to i32*
  store i32 %v0_12aed, i32* %v3_12aed, align 4
  %v0_12af0 = load i32, i32* %edx.global-to-local, align 4
  %v1_12af0 = load i32, i32* @edi, align 4
  %v2_12af0 = inttoptr i32 %v1_12af0 to i32*
  store i32 %v0_12af0, i32* %v2_12af0, align 4
  %v0_12af2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12af2

; uselistorder directives
  uselistorder i32 %v2_12adf, { 1, 0, 2, 3 }
}

define i32 @function_12af8(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_12af8:
  %edx.global-to-local = alloca i32, align 4
  %tmp8 = ptrtoint i32* %arg1 to i32
  %v4_12b00 = icmp eq i32 %arg2, ptrtoint ([2 x i8]* @2 to i32)
  %v0_12b07 = load i32, i32* @edx, align 4
  store i32 %v0_12b07, i32* %arg1, align 4
  store i32 %tmp8, i32* %edx.global-to-local, align 4
  %v0_12b0d = load i32, i32* @ecx, align 4
  %v2_12b0d = add i32 %tmp8, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12b0d = inttoptr i32 %v2_12b0d to i32*
  store i32 %v0_12b0d, i32* %v3_12b0d, align 4
  %v0_12b10 = load i32, i32* @edi, align 4
  %v1_12b10 = add i32 %v0_12b10, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12b10 = inttoptr i32 %v1_12b10 to i32*
  %v3_12b10 = load i32, i32* %v2_12b10, align 4
  %v1_12b13 = load i32, i32* %edx.global-to-local, align 4
  %v2_12b13 = add i32 %v1_12b13, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12b13 = inttoptr i32 %v2_12b13 to i32*
  store i32 %v3_12b10, i32* %v3_12b13, align 4
  %v0_12b16 = load i32, i32* @edi, align 4
  %v1_12b16 = add i32 %v0_12b16, 12
  %v2_12b16 = inttoptr i32 %v1_12b16 to i32*
  %v3_12b16 = load i32, i32* %v2_12b16, align 4
  %v1_12b19 = load i32, i32* %edx.global-to-local, align 4
  %v2_12b19 = add i32 %v1_12b19, 12
  %v3_12b19 = inttoptr i32 %v2_12b19 to i32*
  store i32 %v3_12b16, i32* %v3_12b19, align 4
  %v0_12b1c = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_12b1c, i32* @eax, align 4
  %v1_12b1e = icmp eq i1 %v4_12b00, false
  br i1 %v1_12b1e, label %bb, label %dec_label_pc_12b20

bb:                                               ; preds = %dec_label_pc_12af8
  %v2_12b1e = call i32 @function_12b45()
  br label %dec_label_pc_12b20

dec_label_pc_12b20:                               ; preds = %bb, %dec_label_pc_12af8
  %v0_12b27 = phi i32 [ %v2_12b1e, %bb ], [ %v0_12b1c, %dec_label_pc_12af8 ]
  ret i32 %v0_12b27
}

define i32 @function_12b30() local_unnamed_addr {
dec_label_pc_12b30:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_12b34 = lshr i32 %tmp1, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_12b37 = or i32 %v2_12b34, -8388608
  ret i32 %v1_12b37
}

define i32 @function_12b45() local_unnamed_addr {
dec_label_pc_12b45:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12b50:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp107 = ptrtoint i32* %arg1 to i32
  %v0_12b50 = load i32, i32* %ebp.global-to-local, align 4
  %v0_12b51 = load i32, i32* %edi.global-to-local, align 4
  %v0_12b52 = load i32, i32* %esi.global-to-local, align 4
  %v0_12b53 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %ebx.global-to-local, align 4
  %v2_12b67 = sub i32 %arg3, %arg2
  %v12_12b67 = icmp eq i32 %v2_12b67, 0
  %v13_12b67 = icmp slt i32 %v2_12b67, 0
  store i32 %v2_12b67, i32* %edx.global-to-local, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_12b7b = inttoptr i32 %arg4 to i32*
  %v2_12b7b = load i32, i32* %v1_12b7b, align 4
  store i32 %v2_12b7b, i32* %eax.global-to-local, align 4
  %v1_12b7d = add i32 %arg4, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12b7d = inttoptr i32 %v1_12b7d to i32*
  %v3_12b7d = load i32, i32* %v2_12b7d, align 4
  store i32 %v3_12b7d, i32* %ebp.global-to-local, align 4
  %v1_12b80 = add i32 %arg4, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12b80 = inttoptr i32 %v1_12b80 to i32*
  %v3_12b80 = load i32, i32* %v2_12b80, align 4
  store i32 %v3_12b80, i32* %esi.global-to-local, align 4
  %v1_12b83 = add i32 %arg4, 12
  %v2_12b83 = inttoptr i32 %v1_12b83 to i32*
  %v3_12b83 = load i32, i32* %v2_12b83, align 4
  store i32 %v3_12b83, i32* %edi.global-to-local, align 4
  %v3_12b86 = icmp eq i1 %v13_12b67, false
  %v4_12b86 = icmp eq i1 %v12_12b67, false
  %v5_12b86 = icmp eq i1 %v3_12b86, %v4_12b86
  br i1 %v5_12b86, label %dec_label_pc_12b95, label %dec_label_pc_12bb8

dec_label_pc_12b90:                               ; preds = %dec_label_pc_12b95
  %v0_12b90 = load i32, i32* %edx.global-to-local, align 4
  %v1_12b90 = sub i32 %v0_12b90, ptrtoint (i8** @global_var_1.820 to i32)
  %v10_12b90 = icmp eq i32 %v1_12b90, 0
  store i32 %v1_12b90, i32* %edx.global-to-local, align 4
  br i1 %v10_12b90, label %dec_label_pc_12bb8, label %dec_label_pc_12b95.backedge

dec_label_pc_12b95:                               ; preds = %dec_label_pc_12b50, %dec_label_pc_12b95.backedge
  %v2_12b9b = phi i32 [ %v2_12b9b2, %dec_label_pc_12b95.backedge ], [ %v2_12b7b, %dec_label_pc_12b50 ]
  %v0_12b95 = phi i32 [ %v0_12b95.pre, %dec_label_pc_12b95.backedge ], [ %arg2, %dec_label_pc_12b50 ]
  %v1_12b95 = inttoptr i32 %v0_12b95 to i8*
  %v2_12b95 = load i8, i8* %v1_12b95, align 1
  %v3_12b95 = zext i8 %v2_12b95 to i32
  store i32 %v3_12b95, i32* %ebx.global-to-local, align 4
  %v1_12b98 = add i32 %v0_12b95, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_12b98, i32* %ecx.global-to-local, align 4
  %v3_12b9b = inttoptr i32 %v2_12b9b to i8*
  store i8 %v2_12b95, i8* %v3_12b9b, align 1
  %v0_12b9d = load i32, i32* %eax.global-to-local, align 4
  %v1_12b9d = add i32 %v0_12b9d, 1
  store i32 %v1_12b9d, i32* %eax.global-to-local, align 4
  %v0_12ba0 = load i32, i32* %esi.global-to-local, align 4
  %v12_12ba0 = icmp eq i32 %v0_12ba0, %v1_12b9d
  %v1_12ba2 = icmp eq i1 %v12_12ba0, false
  br i1 %v1_12ba2, label %dec_label_pc_12b90, label %dec_label_pc_12ba4

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12b95
  %v0_12ba4 = load i32, i32* %edi.global-to-local, align 4
  %v1_12ba4 = add i32 %v0_12ba4, 4
  %v2_12ba4 = inttoptr i32 %v1_12ba4 to i32*
  %v3_12ba4 = load i32, i32* %v2_12ba4, align 4
  store i32 %v3_12ba4, i32* %ebp.global-to-local, align 4
  %v1_12ba7 = add i32 %v0_12ba4, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_12ba7, i32* %edi.global-to-local, align 4
  %v0_12baa = load i32, i32* %edx.global-to-local, align 4
  %v1_12baa = sub i32 %v0_12baa, ptrtoint (i8** @global_var_1.820 to i32)
  %v10_12baa = icmp eq i32 %v1_12baa, 0
  store i32 %v1_12baa, i32* %edx.global-to-local, align 4
  %v1_12bad = add i32 %v3_12ba4, 512
  store i32 %v1_12bad, i32* %esi.global-to-local, align 4
  store i32 %v3_12ba4, i32* %eax.global-to-local, align 4
  %v1_12bb5 = icmp eq i1 %v10_12baa, false
  br i1 %v1_12bb5, label %dec_label_pc_12b95.backedge, label %dec_label_pc_12bb8

dec_label_pc_12b95.backedge:                      ; preds = %dec_label_pc_12ba4, %dec_label_pc_12b90
  %v2_12b9b2 = phi i32 [ %v3_12ba4, %dec_label_pc_12ba4 ], [ %v1_12b9d, %dec_label_pc_12b90 ]
  %v0_12b95.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_12b95

dec_label_pc_12bb8:                               ; preds = %dec_label_pc_12ba4, %dec_label_pc_12b90, %dec_label_pc_12b50
  %v0_12bbc = phi i32 [ %v2_12b7b, %dec_label_pc_12b50 ], [ %v3_12ba4, %dec_label_pc_12ba4 ], [ %v1_12b9d, %dec_label_pc_12b90 ]
  store i32 %tmp107, i32* %edx.global-to-local, align 4
  store i32 %v0_12bbc, i32* %arg1, align 4
  store i32 %tmp107, i32* %eax.global-to-local, align 4
  %v0_12bc0 = load i32, i32* %ebp.global-to-local, align 4
  %v2_12bc0 = add i32 %tmp107, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12bc0 = inttoptr i32 %v2_12bc0 to i32*
  store i32 %v0_12bc0, i32* %v3_12bc0, align 4
  %v0_12bc3 = load i32, i32* %esi.global-to-local, align 4
  %v1_12bc3 = load i32, i32* %edx.global-to-local, align 4
  %v2_12bc3 = add i32 %v1_12bc3, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12bc3 = inttoptr i32 %v2_12bc3 to i32*
  store i32 %v0_12bc3, i32* %v3_12bc3, align 4
  %v0_12bc6 = load i32, i32* %edi.global-to-local, align 4
  %v1_12bc6 = load i32, i32* %edx.global-to-local, align 4
  %v2_12bc6 = add i32 %v1_12bc6, 12
  %v3_12bc6 = inttoptr i32 %v2_12bc6 to i32*
  store i32 %v0_12bc6, i32* %v3_12bc6, align 4
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* %edx.global-to-local, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %dec_label_pc_12be0, label %dec_label_pc_12bd6

dec_label_pc_12bd6:                               ; preds = %dec_label_pc_12bb8
  store i32 %v0_12b53, i32* %ebx.global-to-local, align 4
  store i32 %v0_12b52, i32* %esi.global-to-local, align 4
  store i32 %v0_12b51, i32* %edi.global-to-local, align 4
  store i32 %v0_12b50, i32* %ebp.global-to-local, align 4
  %v0_12bdd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_12bdd

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bb8
  %v1_12bdd = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v1_12bdd

; uselistorder directives
  uselistorder i32 %v3_12ba4, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_12b9d, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12b95, { 1, 0 }
  uselistorder i32 %v2_12b7b, { 1, 0, 2 }
  uselistorder i32 %tmp107, { 1, 0, 2 }
  uselistorder i32* %esi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_12b95, { 1, 0 }
}

define i32 @_ZNSt5dequeIcSaIcEE13_M_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_j(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12bf0:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-260 = alloca i32, align 4
  %stack_var_-244 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %tmp138 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-356 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-476 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  %tmp202 = ptrtoint i32* %arg2 to i32
  %v0_12bf3 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %arg4, i32* %edx.global-to-local, align 4
  store i32 %tmp202, i32* @esi, align 4
  %v1_12c16 = add i32 %arg1, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_12c16 = inttoptr i32 %v1_12c16 to i32*
  %v3_12c16 = load i32, i32* %v2_12c16, align 4
  store i32 %v3_12c16, i32* @ebp, align 4
  %v1_12c1d = add i32 %arg1, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_12c1d = inttoptr i32 %v1_12c1d to i32*
  %v3_12c1d = load i32, i32* %v2_12c1d, align 4
  store i32 %v3_12c1d, i32* %eax.global-to-local, align 4
  %v1_12c24 = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12c24 = inttoptr i32 %v1_12c24 to i32*
  %v3_12c24 = load i32, i32* %v2_12c24, align 4
  store i32 %v3_12c24, i32* %edx.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_12c37 = add i32 %arg1, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_12c37 = inttoptr i32 %v1_12c37 to i32*
  %v3_12c37 = load i32, i32* %v2_12c37, align 4
  store i32 %v3_12c37, i32* @ecx, align 4
  store i32 %arg5, i32* @edi, align 4
  %v2_12c49 = sub i32 %v3_12c1d, %v3_12c24
  store i32 %v2_12c49, i32* %eax.global-to-local, align 4
  %v1_12c4b = add i32 %tmp202, 12
  %v2_12c4b = inttoptr i32 %v1_12c4b to i32*
  %v3_12c4b = load i32, i32* %v2_12c4b, align 4
  store i32 %v3_12c4b, i32* %edx.global-to-local, align 4
  %v2_12c52 = load i32, i32* %arg2, align 4
  store i32 %v2_12c52, i32* %eax.global-to-local, align 4
  %v2_12c54 = add i32 %tmp202, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12c54 = inttoptr i32 %v2_12c54 to i32*
  %v4_12c54 = load i32, i32* %v3_12c54, align 4
  %v5_12c54 = sub i32 %v2_12c52, %v4_12c54
  %v2_12c57 = sub i32 %v3_12c4b, %v3_12c16
  %v2_12c59 = sdiv i32 %v2_12c57, 4
  %v1_12c5c = sub i32 %v2_12c59, ptrtoint (i8** @global_var_1.820 to i32)
  %v2_12c5f = shl i32 %v1_12c5c, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_12c5f, i32* %edx.global-to-local, align 4
  %v2_12c62 = add i32 %v5_12c54, %v2_12c5f
  store i32 %v2_12c62, i32* %eax.global-to-local, align 4
  %v1_12c64 = add i32 %arg1, 24
  %v2_12c64 = inttoptr i32 %v1_12c64 to i32*
  %v3_12c64 = load i32, i32* %v2_12c64, align 4
  store i32 %v3_12c64, i32* @edx, align 4
  %v5_12c67 = add i32 %v2_12c62, %v2_12c49
  store i32 %v5_12c67, i32* %eax.global-to-local, align 4
  %v1_12c6f = add i32 %arg1, 28
  %v2_12c6f = inttoptr i32 %v1_12c6f to i32*
  %v3_12c6f = load i32, i32* %v2_12c6f, align 4
  %v5_12c78 = sub i32 %v3_12c64, %v3_12c6f
  %v2_12c82 = sub i32 %v3_12c37, %v3_12c16
  %v2_12c84 = sdiv i32 %v2_12c82, 4
  %v1_12c87 = sub i32 %v2_12c84, ptrtoint (i8** @global_var_1.820 to i32)
  %v2_12c8a = shl i32 %v1_12c87, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_12c8d = add i32 %v5_12c78, %v2_12c49
  %v5_12c91 = add i32 %v5_12c8d, %v2_12c8a
  %v2_12c99 = lshr i32 %v5_12c91, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v2_12c99, i32* %eax.global-to-local, align 4
  %v10_12c9b = icmp ult i32 %v5_12c67, %v2_12c99
  %v1_12c9f = icmp eq i1 %v10_12c9b, false
  br i1 %v1_12c9f, label %dec_label_pc_12fc8, label %dec_label_pc_12ca5

dec_label_pc_12ca5:                               ; preds = %dec_label_pc_12bf0
  %v1_12ca5 = add i32 %arg1, 12
  %v2_12ca5 = inttoptr i32 %v1_12ca5 to i32*
  %v3_12ca5 = load i32, i32* %v2_12ca5, align 4
  store i32 %v3_12ca5, i32* %edx.global-to-local, align 4
  %v2_12cb0 = sub i32 %v3_12c24, %v3_12ca5
  store i32 %v2_12cb0, i32* @eax, align 4
  %tmp253 = icmp ult i32 %v2_12cb0, %arg5
  br i1 %tmp253, label %bb, label %dec_label_pc_12cba

bb:                                               ; preds = %dec_label_pc_12ca5
  %v13_12cb4 = call i32 @function_13280(i32 %v3_12ca5, i32 %v5_12c67, i32 %v2_12c49, i32 %v3_12c24, i32 %v3_12c1d, i32 %v3_12c6f, i32 %v5_12c91, i32 %arg3, i32 %arg4)
  store i32 %v13_12cb4, i32* @eax, align 4
  %v0_12cba.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_12cba

dec_label_pc_12cba:                               ; preds = %dec_label_pc_12ca5, %bb
  %v0_12cbc = phi i32 [ %v2_12cb0, %dec_label_pc_12ca5 ], [ %v13_12cb4, %bb ]
  %v1_12cc0 = phi i32 [ %arg5, %dec_label_pc_12ca5 ], [ %v0_12cba.pre, %bb ]
  %v1_12cbe = sub i32 0, %v1_12cc0
  store i32 %v1_12cbe, i32* %ecx.global-to-local, align 4
  %v2_12cc0 = sub i32 %v0_12cbc, %v1_12cc0
  store i32 %v2_12cc0, i32* @edx, align 4
  %v8_12cd2 = icmp sgt i32 %v2_12cc0, 511
  br i1 %v8_12cd2, label %bb228, label %dec_label_pc_12cd8

bb228:                                            ; preds = %dec_label_pc_12cba
  %v10_12cd2 = call i32 @function_132c8(i32 %v1_12cbe)
  store i32 %v10_12cd2, i32* %eax.global-to-local, align 4
  %v1_12ce0.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_12cd8

dec_label_pc_12cd8:                               ; preds = %bb228, %dec_label_pc_12cba
  %v0_12cee = phi i32 [ %v10_12cd2, %bb228 ], [ %v0_12cbc, %dec_label_pc_12cba ]
  %v1_12ce0 = phi i32 [ %v1_12ce0.pre, %bb228 ], [ %v1_12cbe, %dec_label_pc_12cba ]
  %v2_12ce0 = add i32 %v1_12ce0, %v3_12c24
  store i32 %v3_12c1d, i32* %ecx.global-to-local, align 4
  store i32 %v3_12ca5, i32* %edx.global-to-local, align 4
  %v5_12cee = add i32 %v0_12cee, %v5_12c67
  %v16_12cee = icmp slt i32 %v5_12cee, 0
  store i32 %v5_12cee, i32* @eax, align 4
  br i1 %v16_12cee, label %bb229, label %dec_label_pc_12d04

bb229:                                            ; preds = %dec_label_pc_12cd8
  %v2_12cfe = call i32 @function_13314(i32 %v3_12ca5)
  store i32 %v2_12cfe, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %bb229, %dec_label_pc_12cd8
  %v0_12d04 = phi i32 [ %v2_12cfe, %bb229 ], [ %v5_12cee, %dec_label_pc_12cd8 ]
  %v8_12d09 = icmp sgt i32 %v0_12d04, 511
  br i1 %v8_12d09, label %bb231, label %dec_label_pc_12d0f

bb231:                                            ; preds = %dec_label_pc_12d04
  %v9_12d09 = call i32 @function_137a0()
  store i32 %v9_12d09, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12d0f

dec_label_pc_12d0f:                               ; preds = %bb231, %dec_label_pc_12d04
  %v0_12d13 = load i32, i32* @ebp, align 4
  store i32 %v0_12d13, i32* %edx.global-to-local, align 4
  %v5_12d15 = add i32 %v2_12c62, %v3_12c1d
  store i32 %v3_12ca5, i32* %eax.global-to-local, align 4
  store i32 %v5_12d15, i32* %ecx.global-to-local, align 4
  %v4_12d2d = load i32, i32* @edi, align 4
  %v1_12d31 = load i32, i32* @esi, align 4
  %v2_12d31 = add i32 %v1_12d31, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_12d31 = inttoptr i32 %v2_12d31 to i32*
  store i32 %v3_12ca5, i32* %v3_12d31, align 4
  %v0_12d34 = load i32, i32* %edx.global-to-local, align 4
  %v1_12d34 = load i32, i32* @esi, align 4
  %v2_12d34 = add i32 %v1_12d34, 12
  %v3_12d34 = inttoptr i32 %v2_12d34 to i32*
  store i32 %v0_12d34, i32* %v3_12d34, align 4
  %v0_12d37 = load i32, i32* %ecx.global-to-local, align 4
  %v1_12d37 = load i32, i32* @esi, align 4
  %v2_12d37 = inttoptr i32 %v1_12d37 to i32*
  store i32 %v0_12d37, i32* %v2_12d37, align 4
  store i32 %v3_12c1d, i32* %ecx.global-to-local, align 4
  %v1_12d3d = load i32, i32* @esi, align 4
  %v2_12d3d = add i32 %v1_12d3d, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12d3d = inttoptr i32 %v2_12d3d to i32*
  store i32 %v3_12c1d, i32* %v3_12d3d, align 4
  %v5_12d40 = icmp slt i32 %v5_12c67, %v4_12d2d
  br i1 %v5_12d40, label %bb232, label %dec_label_pc_12d46

bb232:                                            ; preds = %dec_label_pc_12d0f
  %v8_12d40 = call i32 @function_13380(i32 %v5_12d15, i32 %v3_12c1d)
  store i32 %v8_12d40, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12d46

dec_label_pc_12d46:                               ; preds = %bb232, %dec_label_pc_12d0f
  %v0_12d46 = load i32, i32* @ebx, align 4
  %v1_12d46 = add i32 %v0_12d46, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12d46 = inttoptr i32 %v1_12d46 to i32*
  %v3_12d46 = load i32, i32* %v2_12d46, align 4
  store i32 %v3_12d46, i32* %eax.global-to-local, align 4
  %v1_12d49 = add i32 %v0_12d46, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v2_12d49 = inttoptr i32 %v1_12d49 to i32*
  %v3_12d49 = load i32, i32* %v2_12d49, align 4
  store i32 %v3_12d49, i32* %ecx.global-to-local, align 4
  %v1_12d4c = add i32 %v0_12d46, 12
  %v2_12d4c = inttoptr i32 %v1_12d4c to i32*
  %v3_12d4c = load i32, i32* %v2_12d4c, align 4
  store i32 %v3_12d4c, i32* %edx.global-to-local, align 4
  %v1_12d53 = add i32 %v0_12d46, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_12d53 = inttoptr i32 %v1_12d53 to i32*
  %v3_12d53 = load i32, i32* %v2_12d53, align 4
  store i32 %v3_12d53, i32* @eax, align 4
  %v2_12d66 = sub i32 %v3_12d46, %v3_12d4c
  %v1_12d68 = load i32, i32* @edi, align 4
  %v2_12d68 = add i32 %v1_12d68, %v2_12d66
  %v13_12d68 = icmp slt i32 %v2_12d68, 0
  store i32 %v2_12d68, i32* %ecx.global-to-local, align 4
  br i1 %v13_12d68, label %bb233, label %dec_label_pc_12d74

bb233:                                            ; preds = %dec_label_pc_12d46
  %v3_12d6e = call i32 @function_138e0(i32 %v3_12d46, i32 %v3_12d4c)
  store i32 %v3_12d6e, i32* %eax.global-to-local, align 4
  %v0_12d74.pr = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %bb233, %dec_label_pc_12d46
  %v0_12d8e12 = phi i32 [ %v3_12d6e, %bb233 ], [ %v3_12d53, %dec_label_pc_12d46 ]
  %v0_12d74 = phi i32 [ %v0_12d74.pr, %bb233 ], [ %v2_12d68, %dec_label_pc_12d46 ]
  %v8_12d7a = icmp sgt i32 %v0_12d74, 511
  br i1 %v8_12d7a, label %bb235, label %dec_label_pc_12d80

bb235:                                            ; preds = %dec_label_pc_12d74
  %v9_12d7a = call i32 @function_137f0()
  store i32 %v9_12d7a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %bb235, %dec_label_pc_12d74
  %v0_12d8e = phi i32 [ %v9_12d7a, %bb235 ], [ %v0_12d8e12, %dec_label_pc_12d74 ]
  %v1_12d88 = load i32, i32* @edi, align 4
  %v2_12d88 = add i32 %v1_12d88, %v3_12d46
  store i32 %v0_12d8e, i32* %edx.global-to-local, align 4
  store i32 %v3_12d4c, i32* %eax.global-to-local, align 4
  %v0_12daa = load i32, i32* @ebx, align 4
  store i32 %v2_12ce0, i32* %stack_var_-416, align 4
  store i32 %v2_12d88, i32* %stack_var_-432, align 4
  store i32 %v3_12d46, i32* %stack_var_-448, align 4
  %v2_12e20 = ptrtoint i32* %stack_var_-416 to i32
  %v2_12e2b = ptrtoint i32* %stack_var_-432 to i32
  %v2_12e36 = ptrtoint i32* %stack_var_-448 to i32
  %v2_12e41 = ptrtoint i32* %stack_var_-476 to i32
  store i32 %v2_12e41, i32* %ecx.global-to-local, align 4
  %v5_12e4b = call i32 @unknown_239a0(i32 %v2_12e41, i32 %v2_12e36, i32 %v2_12e2b, i32 %v2_12e20, i32 %v0_12daa)
  %v0_12e57 = load i32, i32* @ebp, align 4
  store i32 %v0_12e57, i32* %stack_var_-184, align 4
  store i32 %v0_12d8e, i32* %eax.global-to-local, align 4
  %v1_12e66 = load i32, i32* @ebx, align 4
  %v2_12e66 = add i32 %v1_12e66, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_12e66 = inttoptr i32 %v2_12e66 to i32*
  store i32 %arg3, i32* %v3_12e66, align 4
  %v1_12e7d = load i32, i32* @ebx, align 4
  %v2_12e7d = add i32 %v1_12e7d, 12
  %v3_12e7d = inttoptr i32 %v2_12e7d to i32*
  store i32 %v3_12d49, i32* %v3_12e7d, align 4
  %v1_12e8b = load i32, i32* @ebx, align 4
  %v2_12e8b = add i32 %v1_12e8b, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_12e8b = inttoptr i32 %v2_12e8b to i32*
  store i32 %v3_12d46, i32* %v3_12e8b, align 4
  %v1_12e95 = load i32, i32* @ebx, align 4
  %v2_12e95 = add i32 %v1_12e95, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_12e95 = inttoptr i32 %v2_12e95 to i32*
  store i32 %v3_12c1d, i32* %v3_12e95, align 4
  %v2_12e9c = ptrtoint i32* %stack_var_-356 to i32
  store i32 %v2_12e9c, i32* %ebx.global-to-local, align 4
  store i32 %v3_12ca5, i32* %stack_var_-196, align 4
  %v2_12ec0 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_12ec0, i32* %ebp.global-to-local, align 4
  store i32 %v3_12c24, i32* %ecx.global-to-local, align 4
  %v0_12ed9 = load i32, i32* @esi, align 4
  %v1_12ed9 = add i32 %v0_12ed9, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12ed9 = inttoptr i32 %v1_12ed9 to i32*
  %v3_12ed9 = load i32, i32* %v2_12ed9, align 4
  store i32 %v3_12ed9, i32* %ecx.global-to-local, align 4
  %v1_12ee3 = add i32 %v0_12ed9, 12
  %v2_12ee3 = inttoptr i32 %v1_12ee3 to i32*
  %v3_12ee3 = load i32, i32* %v2_12ee3, align 4
  store i32 %v3_12ee3, i32* %ecx.global-to-local, align 4
  %v1_12eea = inttoptr i32 %v0_12ed9 to i32*
  %v2_12eea = load i32, i32* %v1_12eea, align 4
  store i32 %v2_12eea, i32* %ebp.global-to-local, align 4
  store i32 %v3_12ca5, i32* %ecx.global-to-local, align 4
  %v3_12f02 = load i32, i32* %v2_12ed9, align 4
  store i32 %v3_12f02, i32* %ecx.global-to-local, align 4
  store i32 %arg4, i32* %ebp.global-to-local, align 4
  %v3_12f14 = load i32, i32* %v2_12ee3, align 4
  store i32 %v3_12f14, i32* %ecx.global-to-local, align 4
  %v0_12f17 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v3_12ca5, i32* %eax.global-to-local, align 4
  %v0_12f1f = load i32, i32* %edx.global-to-local, align 4
  %v7_12f32 = call i32 @unknown_25270(i32 %v2_12e9c, i32 %v0_12f17, i32 %v3_12ca5, i32 %v0_12f1f, i32 %v3_12f02, i32 %v3_12f14, i32 %v2_12ec0)
  store i32 %v7_12f32, i32* %eax.global-to-local, align 4
  %v0_12f37 = load i32, i32* @esi, align 4
  %v1_12f37 = inttoptr i32 %v0_12f37 to i32*
  %v2_12f37 = load i32, i32* %v1_12f37, align 4
  store i32 %v2_12f37, i32* @ebp, align 4
  %v1_12f39 = add i32 %v0_12f37, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_12f39 = inttoptr i32 %v1_12f39 to i32*
  %v3_12f39 = load i32, i32* %v2_12f39, align 4
  store i32 %v3_12f39, i32* @eax, align 4
  %v1_12f3c = add i32 %v0_12f37, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_12f3c = inttoptr i32 %v1_12f3c to i32*
  %v3_12f3c = load i32, i32* %v2_12f3c, align 4
  store i32 %v3_12f3c, i32* %ecx.global-to-local, align 4
  %v1_12f3f = add i32 %v0_12f37, 12
  %v2_12f3f = inttoptr i32 %v1_12f3f to i32*
  %v3_12f3f = load i32, i32* %v2_12f3f, align 4
  store i32 %v3_12f3f, i32* @edx, align 4
  %v2_12f44 = sub i32 %v2_12f37, %v3_12f39
  %v1_12f49 = load i32, i32* @edi, align 4
  %v2_12f49 = sub i32 %v2_12f44, %v1_12f49
  %v13_12f49 = icmp slt i32 %v2_12f49, 0
  store i32 %v2_12f49, i32* @esi, align 4
  br i1 %v13_12f49, label %bb237, label %dec_label_pc_12f51

bb237:                                            ; preds = %dec_label_pc_12d80
  %v1_12f4b = call i32 @function_138d0()
  store i32 %v1_12f4b, i32* @eax, align 4
  %v0_12f51.pr = load i32, i32* @esi, align 4
  br label %dec_label_pc_12f51

dec_label_pc_12f51:                               ; preds = %bb237, %dec_label_pc_12d80
  %v0_12f51 = phi i32 [ %v0_12f51.pr, %bb237 ], [ %v2_12f49, %dec_label_pc_12d80 ]
  %v8_12f57 = icmp sgt i32 %v0_12f51, 511
  br i1 %v8_12f57, label %bb239, label %dec_label_pc_12f5d

bb239:                                            ; preds = %dec_label_pc_12f51
  %v9_12f57 = call i32 @function_13840()
  store i32 %v9_12f57, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12f5d

dec_label_pc_12f5d:                               ; preds = %bb239, %dec_label_pc_12f51
  %v0_12f5d = load i32, i32* @ebp, align 4
  %v5_12f5d = add i32 %v0_12f5d, %arg4
  store i32 %v5_12f5d, i32* %ebp.global-to-local, align 4
  store i32 %v3_12c1d, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %edx.global-to-local, align 4
  %v2_12f7e = ptrtoint i32* %stack_var_-184 to i32
  store i32 %v2_12f7e, i32* %eax.global-to-local, align 4
  store i32 %v5_12f5d, i32* %stack_var_-184, align 4
  %v4_12f9b = call i32 @unknown_25740(i32 %v2_12e9c, i32 %v3_12c1d, i32 %arg3, i32 %v2_12f7e)
  br label %dec_label_pc_12fa3

dec_label_pc_12fa3:                               ; preds = %dec_label_pc_12f5d, %dec_label_pc_13093
  %storemerge17 = phi i32 [ %v4_12f9b, %dec_label_pc_12f5d ], [ %v4_13224, %dec_label_pc_13093 ]
  %stack_var_-44.0 = phi i32 [ %tmp138, %dec_label_pc_12f5d ], [ %v0_131e8, %dec_label_pc_13093 ]
  store i32 %storemerge17, i32* @eax, align 4
  %v3_12faa = xor i32 %stack_var_-44.0, ptrtoint ([2 x i8]* @2 to i32)
  %v4_12faa = icmp eq i32 %v3_12faa, 0
  store i32 %v3_12faa, i32* %ecx.global-to-local, align 4
  %v1_12fb1 = icmp eq i1 %v4_12faa, false
  br i1 %v1_12fb1, label %bb240, label %dec_label_pc_12fb7

bb240:                                            ; preds = %dec_label_pc_12fa3
  %v2_12fb1 = call i32 @function_1390b()
  store i32 %v2_12fb1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12fb7

dec_label_pc_12fb7:                               ; preds = %bb240, %dec_label_pc_12fa3
  %v0_12fc1 = phi i32 [ %v2_12fb1, %bb240 ], [ %storemerge17, %dec_label_pc_12fa3 ]
  store i32 %v0_12bf3, i32* %ebp.global-to-local, align 4
  ret i32 %v0_12fc1

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12bf0
  %v1_12fc8 = add i32 %arg1, 32
  %v2_12fc8 = inttoptr i32 %v1_12fc8 to i32*
  %v3_12fc8 = load i32, i32* %v2_12fc8, align 4
  %v2_12fcf = sub i32 %v3_12fc8, %v3_12c64
  %v1_12fd1 = add i32 %v2_12fcf, -1
  store i32 %v1_12fd1, i32* %ebp.global-to-local, align 4
  %v2_12fd4 = sub i32 %arg5, %v1_12fd1
  %v7_12fd4 = icmp ugt i32 %v1_12fd1, %arg5
  %v12_12fd4 = icmp eq i32 %v2_12fd4, 0
  %v2_12fd6 = or i1 %v7_12fd4, %v12_12fd4
  br i1 %v2_12fd6, label %dec_label_pc_12fdc, label %dec_label_pc_13238

dec_label_pc_12fdc:                               ; preds = %dec_label_pc_12fc8
  %v2_12fe0 = add i32 %v5_12c78, %arg5
  %v13_12fe0 = icmp slt i32 %v2_12fe0, 0
  store i32 %v2_12fe0, i32* @eax, align 4
  br i1 %v13_12fe0, label %bb242, label %dec_label_pc_12fec

bb242:                                            ; preds = %dec_label_pc_12fdc
  %v3_12fe6 = call i32 @function_13350(i32 %v5_12c78, i32 %v5_12c67)
  store i32 %v3_12fe6, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %bb242, %dec_label_pc_12fdc
  %v0_12fec = phi i32 [ %v3_12fe6, %bb242 ], [ %v2_12fe0, %dec_label_pc_12fdc ]
  %v7_12ff1 = icmp sgt i32 %v0_12fec, 511
  br i1 %v7_12ff1, label %dec_label_pc_12ff7, label %bb244

bb244:                                            ; preds = %dec_label_pc_12fec
  %v8_12ff1 = call i32 @function_13330()
  store i32 %v8_12ff1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_12ff7

dec_label_pc_12ff7:                               ; preds = %dec_label_pc_12fec, %bb244
  store i32 %v2_12fe0, i32* @eax, align 4
  %tmp245 = icmp slt i32 %v2_12fe0, 1
  br i1 %tmp245, label %bb246, label %dec_label_pc_13003

bb246:                                            ; preds = %dec_label_pc_12ff7
  %v7_12ffd = call i32 @function_13350(i32 %v2_12fe0, i32 %v3_12c6f)
  store i32 %v7_12ffd, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13003

dec_label_pc_13003:                               ; preds = %bb246, %dec_label_pc_12ff7
  %v2_13007 = ashr i32 %v2_12fe0, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_13007, i32* %ebp.global-to-local, align 4
  %v0_1300a = load i32, i32* @ecx, align 4
  %v2_1300a = mul i32 %v2_13007, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1300a = add i32 %v0_1300a, %v2_1300a
  store i32 %v3_1300a, i32* %eax.global-to-local, align 4
  %v1_13011 = inttoptr i32 %v3_1300a to i32*
  %v2_13011 = load i32, i32* %v1_13011, align 4
  %v2_13013 = shl i32 %v2_13007, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_13027 = sub i32 %v2_12fe0, %v2_13013
  %v2_1302d = add i32 %v2_13027, %v2_13011
  %v5_1303b = sub i32 %v5_12c91, %v5_12c67
  store i32 %v5_1303b, i32* @ebp, align 4
  %v2_1303f = sub i32 %v5_12c78, %v5_1303b
  %v13_1303f = icmp slt i32 %v2_1303f, 0
  store i32 %v2_1303f, i32* @eax, align 4
  br i1 %v13_1303f, label %bb247, label %dec_label_pc_1304f

bb247:                                            ; preds = %dec_label_pc_13003
  %v3_13049 = call i32 @function_13868(i32 %v2_1303f, i32 %v2_13011)
  store i32 %v3_13049, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1304f

dec_label_pc_1304f:                               ; preds = %bb247, %dec_label_pc_13003
  %v0_1304f = phi i32 [ %v3_13049, %bb247 ], [ %v2_1303f, %dec_label_pc_13003 ]
  %v8_13054 = icmp sgt i32 %v0_1304f, 511
  br i1 %v8_13054, label %bb249, label %dec_label_pc_1305a

bb249:                                            ; preds = %dec_label_pc_1304f
  %v9_13054 = call i32 @function_13750()
  store i32 %v9_13054, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_1305a

dec_label_pc_1305a:                               ; preds = %bb249, %dec_label_pc_1304f
  %v0_1305a = load i32, i32* @edx, align 4
  %v1_1305c = load i32, i32* @ebp, align 4
  %v2_1305c = sub i32 %v0_1305a, %v1_1305c
  %v0_13066 = load i32, i32* @ecx, align 4
  store i32 %v3_12c6f, i32* %ebp.global-to-local, align 4
  store i32 %v2_1305c, i32* %eax.global-to-local, align 4
  %v4_13076 = load i32, i32* @edi, align 4
  %v1_1307a = load i32, i32* @esi, align 4
  %v2_1307a = add i32 %v1_1307a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1307a = inttoptr i32 %v2_1307a to i32*
  store i32 %v3_12c6f, i32* %v3_1307a, align 4
  %v0_1307d = load i32, i32* %eax.global-to-local, align 4
  %v1_1307d = load i32, i32* @esi, align 4
  %v2_1307d = inttoptr i32 %v1_1307d to i32*
  store i32 %v0_1307d, i32* %v2_1307d, align 4
  %v1_13083 = load i32, i32* @esi, align 4
  %v2_13083 = add i32 %v1_13083, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_13083 = inttoptr i32 %v2_13083 to i32*
  store i32 %v3_12fc8, i32* %v3_13083, align 4
  store i32 %v0_13066, i32* %eax.global-to-local, align 4
  %v1_1308a = load i32, i32* @esi, align 4
  %v2_1308a = add i32 %v1_1308a, 12
  %v3_1308a = inttoptr i32 %v2_1308a to i32*
  store i32 %v0_13066, i32* %v3_1308a, align 4
  %v8_1308d = icmp sgt i32 %v5_1303b, %v4_13076
  br i1 %v8_1308d, label %bb250, label %dec_label_pc_13093

bb250:                                            ; preds = %dec_label_pc_1305a
  %v10_1308d = call i32 @function_13508(i32 %v2_1305c)
  store i32 %v10_1308d, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13093

dec_label_pc_13093:                               ; preds = %bb250, %dec_label_pc_1305a
  %v0_13093 = load i32, i32* @ebx, align 4
  %v1_13093 = add i32 %v0_13093, 32
  %v2_13093 = inttoptr i32 %v1_13093 to i32*
  %v3_13093 = load i32, i32* %v2_13093, align 4
  %v5_1309a = add i32 %v5_1303b, %arg3
  store i32 %v5_1309a, i32* %eax.global-to-local, align 4
  %v1_1309e = add i32 %v0_13093, 24
  %v2_1309e = inttoptr i32 %v1_1309e to i32*
  %v3_1309e = load i32, i32* %v2_1309e, align 4
  store i32 %v3_1309e, i32* %ecx.global-to-local, align 4
  %v1_130a5 = add i32 %v0_13093, 28
  %v2_130a5 = inttoptr i32 %v1_130a5 to i32*
  %v3_130a5 = load i32, i32* %v2_130a5, align 4
  store i32 %v3_130a5, i32* %edx.global-to-local, align 4
  store i32 %v3_13093, i32* %eax.global-to-local, align 4
  store i32 %v3_1309e, i32* %stack_var_-64, align 4
  store i32 %v3_13093, i32* %stack_var_-56, align 4
  %v2_130c8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_130f2 = ptrtoint i32* %stack_var_-336 to i32
  store i32 %v2_130f2, i32* %eax.global-to-local, align 4
  %v4_130fc = call i32 @unknown_25740(i32 %v2_130f2, i32 %v5_1309a, i32 %arg4, i32 %v2_130c8)
  store i32 %v3_130a5, i32* %stack_var_-260, align 4
  store i32 %v3_1309e, i32* %ecx.global-to-local, align 4
  store i32 %v2_13011, i32* %edx.global-to-local, align 4
  store i32 %v3_13093, i32* %ebp.global-to-local, align 4
  %v2_13162 = ptrtoint i32* %stack_var_-356 to i32
  store i32 %v3_1309e, i32* %stack_var_-276, align 4
  %v0_1318c = load i32, i32* @ebx, align 4
  %v2_1319a = ptrtoint i32* %stack_var_-244 to i32
  %v2_131a5 = ptrtoint i32* %stack_var_-260 to i32
  %v2_131b0 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_131b0, i32* %eax.global-to-local, align 4
  %v5_131bb = call i32 @unknown_239a0(i32 %v2_13162, i32 %v2_131b0, i32 %v2_131a5, i32 %v2_1319a, i32 %v0_1318c)
  store i32 %v3_1300a, i32* %eax.global-to-local, align 4
  store i32 %v0_13066, i32* %ebp.global-to-local, align 4
  store i32 %v2_1305c, i32* %edx.global-to-local, align 4
  store i32 %v2_1302d, i32* %ecx.global-to-local, align 4
  %v1_131d3 = load i32, i32* @ebx, align 4
  %v2_131d3 = add i32 %v1_131d3, 24
  %v3_131d3 = inttoptr i32 %v2_131d3 to i32*
  store i32 %v3_1300a, i32* %v3_131d3, align 4
  %v0_131d6 = load i32, i32* %ebp.global-to-local, align 4
  %v1_131d6 = load i32, i32* @ebx, align 4
  %v2_131d6 = add i32 %v1_131d6, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_131d6 = inttoptr i32 %v2_131d6 to i32*
  store i32 %v0_131d6, i32* %v3_131d6, align 4
  %v0_131d9 = load i32, i32* @esi, align 4
  %v1_131d9 = add i32 %v0_131d9, 12
  %v2_131d9 = inttoptr i32 %v1_131d9 to i32*
  %v3_131d9 = load i32, i32* %v2_131d9, align 4
  store i32 %v3_131d9, i32* %eax.global-to-local, align 4
  %v0_131dc = load i32, i32* %edx.global-to-local, align 4
  %v1_131dc = load i32, i32* @ebx, align 4
  %v2_131dc = add i32 %v1_131dc, 28
  %v3_131dc = inttoptr i32 %v2_131dc to i32*
  store i32 %v0_131dc, i32* %v3_131dc, align 4
  %v0_131df = load i32, i32* %ecx.global-to-local, align 4
  %v1_131df = load i32, i32* @ebx, align 4
  %v2_131df = add i32 %v1_131df, 32
  %v3_131df = inttoptr i32 %v2_131df to i32*
  store i32 %v0_131df, i32* %v3_131df, align 4
  %v0_131e2 = load i32, i32* @esi, align 4
  %v1_131e2 = add i32 %v0_131e2, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_131e2 = inttoptr i32 %v1_131e2 to i32*
  %v3_131e2 = load i32, i32* %v2_131e2, align 4
  store i32 %v3_131e2, i32* %edx.global-to-local, align 4
  %v1_131e5 = add i32 %v0_131e2, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_131e5 = inttoptr i32 %v1_131e5 to i32*
  %v3_131e5 = load i32, i32* %v2_131e5, align 4
  store i32 %v3_131e5, i32* %ecx.global-to-local, align 4
  %v0_131e8 = load i32, i32* %eax.global-to-local, align 4
  %v2_131ef = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_131ef, i32* %eax.global-to-local, align 4
  %v1_131f6 = inttoptr i32 %v0_131e2 to i32*
  %v2_131f6 = load i32, i32* %v1_131f6, align 4
  store i32 %v2_131f6, i32* %ebx.global-to-local, align 4
  store i32 %v3_1309e, i32* %eax.global-to-local, align 4
  store i32 %v3_12fc8, i32* %edx.global-to-local, align 4
  store i32 %v2_131f6, i32* %stack_var_-56, align 4
  %v4_13224 = call i32 @unknown_25740(i32 %v2_13162, i32 %v3_12fc8, i32 %v3_1309e, i32 %v2_131ef)
  br label %dec_label_pc_12fa3

dec_label_pc_13238:                               ; preds = %dec_label_pc_12fc8
  store i32 %v2_12fd4, i32* %edx.global-to-local, align 4
  %v2_13243 = call i32 @unknown_238a0(i32 %arg1, i32 %v2_12fd4)
  store i32 %v2_13243, i32* %eax.global-to-local, align 4
  %v0_13248 = load i32, i32* @ebx, align 4
  %v1_13248 = add i32 %v0_13248, 24
  %v2_13248 = inttoptr i32 %v1_13248 to i32*
  %v3_13248 = load i32, i32* %v2_13248, align 4
  store i32 %v3_13248, i32* %edx.global-to-local, align 4
  %v1_1324b = add i32 %v0_13248, 28
  %v2_1324b = inttoptr i32 %v1_1324b to i32*
  %v3_1324b = load i32, i32* %v2_1324b, align 4
  store i32 %v3_1324b, i32* %eax.global-to-local, align 4
  %v1_1324e = add i32 %v0_13248, 32
  %v2_1324e = inttoptr i32 %v1_1324e to i32*
  %v3_1324e = load i32, i32* %v2_1324e, align 4
  store i32 %v3_1324e, i32* %ecx.global-to-local, align 4
  %v2_13253 = sub i32 %v3_13248, %v3_1324b
  store i32 %v2_13253, i32* %ebp.global-to-local, align 4
  ret i32 %v3_1324b

; uselistorder directives
  uselistorder i32 %v2_13162, { 1, 0 }
  uselistorder i32 %v3_1309e, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v3_13093, { 2, 0, 1 }
  uselistorder i32 %v0_13093, { 1, 0, 2 }
  uselistorder i32 %v0_13066, { 0, 2, 1 }
  uselistorder i32 %v2_13011, { 1, 0, 2 }
  uselistorder i32 %v2_12fe0, { 0, 3, 4, 1, 5, 2, 6, 7 }
  uselistorder i32 %v2_12fd4, { 1, 0, 2 }
  uselistorder i32 %v3_12fc8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12f37, { 1, 0, 2, 3 }
  uselistorder i32 %v3_12d4c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12d46, { 4, 3, 0, 2, 1, 5 }
  uselistorder i32 %v0_12d46, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12cb0, { 1, 0, 2 }
  uselistorder i32 %v3_12ca5, { 3, 5, 6, 2, 0, 7, 1, 8, 4, 9, 10 }
  uselistorder i32 %v5_12c91, { 1, 0, 2 }
  uselistorder i32 %v5_12c78, { 2, 3, 0, 1 }
  uselistorder i32 %v3_12c6f, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v5_12c67, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %v2_12c49, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12c24, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v3_12c1d, { 2, 1, 8, 7, 5, 6, 0, 4, 9, 3, 10 }
  uselistorder i32* %edx.global-to-local, { 1, 2, 14, 15, 16, 17, 18, 19, 0, 11, 12, 13, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %ecx.global-to-local, { 4, 20, 21, 22, 23, 24, 19, 0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 6, 7 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 2, 8, 9, 10, 11, 3, 4, 7, 0, 1, 5, 6 }
  uselistorder i32* %eax.global-to-local, { 17, 18, 31, 32, 33, 34, 35, 36, 37, 38, 43, 11, 39, 40, 41, 12, 13, 42, 9, 1, 8, 10, 14, 0, 15, 16, 27, 28, 29, 5, 6, 30, 7, 19, 2, 3, 4, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 -1, { 11, 12, 13, 14, 15, 68, 0, 16, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 30, 31, 32, 33, 3, 4, 34, 35, 6, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 9, 10, 7, 50, 51, 52, 53, 54, 55, 56, 69, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 8, 67 }
  uselistorder i32 %arg5, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32 %arg1, { 2, 0, 1, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder label %dec_label_pc_12ff7, { 1, 0 }
  uselistorder label %dec_label_pc_12fa3, { 1, 0 }
  uselistorder label %dec_label_pc_12cba, { 1, 0 }
}

define i32 @function_13260(i32 %arg1) local_unnamed_addr {
dec_label_pc_13260:
  %v0_13260 = load i32, i32* @eax, align 4
  %v1_13260 = add i32 %v0_13260, ptrtoint (i8** @global_var_1.820 to i32)
  %v0_13261 = load i32, i32* @ecx, align 4
  %v1_13268 = load i32, i32* @edi, align 4
  %v2_13268 = add i32 %v1_13268, %v1_13260
  store i32 %v2_13268, i32* @eax, align 4
  %v3_13274 = call i32 @function_13350(i32 %v0_13261, i32 %v2_13268)
  ret i32 %v3_13274

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_13350, { 0, 2, 1 }
}

define i32 @function_13280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_13280:
  %v0_13280 = load i32, i32* @edi, align 4
  %v1_13282 = load i32, i32* @eax, align 4
  %v2_13282 = sub i32 %v0_13280, %v1_13282
  %v0_13288 = load i32, i32* @ebx, align 4
  %v2_1328b = call i32 @unknown_236b0(i32 %v0_13288, i32 %v2_13282)
  %v0_13290 = load i32, i32* @ebx, align 4
  %v1_13290 = add i32 %v0_13290, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_13290 = inttoptr i32 %v1_13290 to i32*
  %v3_13290 = load i32, i32* %v2_13290, align 4
  %v1_13295 = add i32 %v0_13290, 12
  %v2_13295 = inttoptr i32 %v1_13295 to i32*
  %v3_13295 = load i32, i32* %v2_13295, align 4
  %v1_132a5 = add i32 %v0_13290, ptrtoint (i8** @global_var_14.812 to i32)
  %v2_132a5 = inttoptr i32 %v1_132a5 to i32*
  %v3_132a5 = load i32, i32* %v2_132a5, align 4
  store i32 %v3_132a5, i32* @ebp, align 4
  %v5_132b0 = sub i32 %v3_13290, %v3_13295
  ret i32 %v5_132b0
}

define i32 @function_132c8(i32 %arg1) local_unnamed_addr {
dec_label_pc_132c8:
  %v0_132c8 = load i32, i32* @edx, align 4
  %v2_132d2 = ashr i32 %v0_132c8, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v2_132d2, i32* @ecx, align 4
  %v4_132d5 = load i32, i32* @eax, align 4
  ret i32 %v4_132d5
}

define i32 @function_132d9(i32 %arg1) local_unnamed_addr {
dec_label_pc_132d9:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %v0_132dd = load i32, i32* @ebp, align 4
  %v2_132dd = mul i32 %tmp6, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_132dd = add i32 %v0_132dd, %v2_132dd
  %v1_132e5 = inttoptr i32 %v3_132dd to i32*
  %v2_132e5 = load i32, i32* %v1_132e5, align 4
  %v1_13325 = call i32 @function_137b7(i32 %v2_132e5)
  ret i32 %v1_13325
}

define i32 @function_13314(i32 %arg1) local_unnamed_addr {
dec_label_pc_13314:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_13330() local_unnamed_addr {
dec_label_pc_13330:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp5
}

define i32 @function_13350(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13350:
  %v0_1335d = load i32, i32* @eax, align 4
  ret i32 %v0_1335d
}

define i32 @function_13366() local_unnamed_addr {
dec_label_pc_13366:
  %v2_13366 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_13366 = load i32, i32* @eax, align 4
  %v4_13366 = trunc i32 %v3_13366 to i8
  %v5_13366 = add i8 %v4_13366, %v2_13366
  %v21_13366 = inttoptr i32 %v3_13366 to i8*
  store i8 %v5_13366, i8* %v21_13366, align 1
  %v0_13368 = load i32, i32* @edx, align 4
  %v2_1336a = lshr i32 %v0_13368, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_1336d = or i32 %v2_1336a, -8388608
  %v1_13377 = call i32 @function_132d9(i32 %v1_1336d)
  ret i32 %v1_13377
}

define i32 @function_13380(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13380:
  %v0_1338f = load i32, i32* @ebx, align 4
  %v1_1338f = add i32 %v0_1338f, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_1338f = inttoptr i32 %v1_1338f to i32*
  %v3_1338f = load i32, i32* %v2_1338f, align 4
  store i32 %v3_1338f, i32* @esi, align 4
  ret i32 %arg1
}

define i32 @function_1339a() local_unnamed_addr {
dec_label_pc_1339a:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_1339a = load i32, i32* @ebx, align 4
  store i32 %v0_1339a, i32* %stack_var_-4, align 4
  %v4_1339a = ptrtoint i32* %stack_var_-4 to i32
  %v0_1339b = load i32, i32* @eax, align 4
  %v2_1339b = or i32 %v0_1339b, zext (i8 ptrtoint (i8* @global_var_89.942 to i8) to i32)
  store i32 %v2_1339b, i32* %eax.global-to-local, align 4
  %v0_1339d = load i16, i16* @fs, align 2
  %v2_1339d = load i32, i32* @edi, align 4
  %v3_1339d = mul i32 %v2_1339d, ptrtoint (i8** @global_var_1.820 to i32)
  %v4_1339d = add i32 %v3_1339d, %v4_1339a
  %v5_1339d = inttoptr i32 %v4_1339d to i16*
  store i16 %v0_1339d, i16* %v5_1339d, align 4
  %v0_133a0 = load i32, i32* %eax.global-to-local, align 4
  %v1_133a0 = inttoptr i32 %v0_133a0 to i32*
  %v2_133a0 = load i32, i32* %v1_133a0, align 4
  %v4_133a0 = add i32 %v2_133a0, %v0_133a0
  store i32 %v4_133a0, i32* %v1_133a0, align 4
  %v0_133a2 = load i32, i32* @ebx, align 4
  %v1_133a2 = add i32 %v0_133a2, -1991760820
  %v2_133a2 = inttoptr i32 %v1_133a2 to i8*
  %v3_133a2 = load i8, i8* %v2_133a2, align 1
  %v4_133a2 = load i32, i32* @ecx, align 4
  %v5_133a2 = trunc i32 %v4_133a2 to i8
  %v6_133a2 = add i8 %v5_133a2, %v3_133a2
  store i8 %v6_133a2, i8* %v2_133a2, align 1
  %v6_133a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_133ab = inttoptr i32 %v6_133a8 to i32*
  %v2_133ab = load i32, i32* %v1_133ab, align 4
  %v4_133ab = add i32 %v2_133ab, %v6_133a8
  store i32 %v4_133ab, i32* %v1_133ab, align 4
  %v0_133ad = load i32, i32* @ebx, align 4
  %v1_133ad = add i32 %v0_133ad, -1266084797
  %v2_133ad = inttoptr i32 %v1_133ad to i8*
  %v3_133ad = load i8, i8* %v2_133ad, align 1
  %v4_133ad = load i32, i32* @ecx, align 4
  %v5_133ad = trunc i32 %v4_133ad to i8
  %v6_133ad = add i8 %v5_133ad, %v3_133ad
  store i8 %v6_133ad, i8* %v2_133ad, align 1
  %v0_133b3 = load i32, i32* %eax.global-to-local, align 4
  %v11_133b3 = and i32 %v0_133b3, -228
  store i32 %v11_133b3, i32* %eax.global-to-local, align 4
  %v1_133b5 = inttoptr i32 %v11_133b3 to i32*
  %v2_133b5 = load i32, i32* %v1_133b5, align 4
  %v4_133b5 = add i32 %v2_133b5, %v11_133b3
  store i32 %v4_133b5, i32* %v1_133b5, align 4
  %v0_133b7 = load i32, i32* @ebp, align 4
  %v1_133b7 = add i32 %v0_133b7, 16524468
  %v2_133b7 = inttoptr i32 %v1_133b7 to i8*
  %v3_133b7 = load i8, i8* %v2_133b7, align 1
  %v4_133b7 = load i32, i32* @ecx, align 4
  %v5_133b7 = trunc i32 %v4_133b7 to i8
  %v6_133b7 = add i8 %v5_133b7, %v3_133b7
  store i8 %v6_133b7, i8* %v2_133b7, align 1
  %v0_133bd = load i32, i32* %eax.global-to-local, align 4
  %v1_133bd = inttoptr i32 %v0_133bd to i8*
  %v2_133bd = load i8, i8* %v1_133bd, align 1
  %v4_133bd = trunc i32 %v0_133bd to i8
  %v5_133bd = add i8 %v2_133bd, %v4_133bd
  store i8 %v5_133bd, i8* %v1_133bd, align 1
  %v4_133ca = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v4_133ca

; uselistorder directives
  uselistorder i32 %v11_133b3, { 0, 2, 1 }
  uselistorder i32 -228, { 1, 0, 2, 3, 4, 5 }
}

define i32 @function_133ce() local_unnamed_addr {
dec_label_pc_133ce:
  %stack_var_440 = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_264 = alloca i32, align 4
  %stack_var_284 = alloca i32, align 4
  %stack_var_300 = alloca i32, align 4
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %stack_var_316 = alloca i32, align 4
  %v2_133d5 = ptrtoint i32* %stack_var_316 to i32
  %v0_133dc = load i32, i32* @edi, align 4
  %v5_133dc = add i32 %v0_133dc, %tmp25
  store i32 %v5_133dc, i32* @edi, align 4
  %v0_13404 = load i32, i32* @ebx, align 4
  %v2_1340b = ptrtoint i32* %stack_var_300 to i32
  %v2_13416 = ptrtoint i32* %stack_var_284 to i32
  %v0_1342c = load i32, i32* @esi, align 4
  %v5_1342f = call i32 @unknown_239a0(i32 %v0_1342c, i32 %v2_13416, i32 %v2_1340b, i32 %v2_133d5, i32 %v0_13404)
  %v2_1343e = ptrtoint i32* %stack_var_264 to i32
  store i32 %v2_1343e, i32* @edx, align 4
  %v0_1344c = load i32, i32* @edi, align 4
  %v2_13485 = ptrtoint i32* %stack_var_440 to i32
  %v4_13490 = call i32 @unknown_25740(i32 %v2_1343e, i32 %tmp8, i32 %v0_1344c, i32 %v2_13485)
  ret i32 %tmp8

; uselistorder directives
  uselistorder i32 %tmp8, { 1, 0 }
}

define i32 @function_1349e() local_unnamed_addr {
dec_label_pc_1349e:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_460 = alloca i32, align 4
  %v0_1349e = load i32, i32* @eax, align 4
  %v11_1349e = and i32 %v0_1349e, or (i32 zext (i8 ptrtoint (i8** @global_var_48.821 to i8) to i32), i32 -256)
  %v1_134ab = load i32, i32* @ebx, align 4
  %v2_134ab = add i32 %v1_134ab, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_134ab = inttoptr i32 %v2_134ab to i32*
  store i32 %v11_1349e, i32* %v3_134ab, align 4
  %v0_134b2 = load i32, i32* @edx, align 4
  %v1_134b2 = load i32, i32* @ebx, align 4
  %v2_134b2 = add i32 %v1_134b2, 12
  %v3_134b2 = inttoptr i32 %v2_134b2 to i32*
  store i32 %v0_134b2, i32* %v3_134b2, align 4
  %v0_134b9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_134b9 = load i32, i32* @ebx, align 4
  %v2_134b9 = add i32 %v1_134b9, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_134b9 = inttoptr i32 %v2_134b9 to i32*
  store i32 %v0_134b9, i32* %v3_134b9, align 4
  %v0_134c0 = load i32, i32* %eax.global-to-local, align 4
  %v1_134c0 = load i32, i32* @ebx, align 4
  %v2_134c0 = add i32 %v1_134c0, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_134c0 = inttoptr i32 %v2_134c0 to i32*
  store i32 %v0_134c0, i32* %v3_134c0, align 4
  %v0_134c7 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_134c7, i32* %stack_var_460, align 4
  %v0_134d9 = load i32, i32* @edi, align 4
  %v2_134e4 = ptrtoint i32* %stack_var_460 to i32
  store i32 %v2_134e4, i32* %eax.global-to-local, align 4
  %v0_134f3 = load i32, i32* @esi, align 4
  %v4_134f6 = call i32 @unknown_25740(i32 %v0_134f3, i32 %v0_134d9, i32 %tmp7, i32 %v2_134e4)
  store i32 %v4_134f6, i32* %eax.global-to-local, align 4
  ret i32 %v4_134f6

; uselistorder directives
  uselistorder i8** @global_var_48.821, { 1, 0 }
}

define i32 @function_13508(i32 %arg1) local_unnamed_addr {
dec_label_pc_13508:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_516 = alloca i32, align 4
  %stack_var_504 = alloca i32, align 4
  %stack_var_128 = alloca i32, align 4
  %stack_var_204 = alloca i32, align 4
  %stack_var_220 = alloca i32, align 4
  %stack_var_248 = alloca i32, align 4
  %stack_var_236 = alloca i32, align 4
  %v0_13508 = load i32, i32* @ebx, align 4
  %v1_13508 = add i32 %v0_13508, 28
  %v2_13508 = inttoptr i32 %v1_13508 to i32*
  %v3_13508 = load i32, i32* %v2_13508, align 4
  %v1_1350b = add i32 %v0_13508, 24
  %v2_1350b = inttoptr i32 %v1_1350b to i32*
  %v3_1350b = load i32, i32* %v2_1350b, align 4
  %v1_13512 = add i32 %v0_13508, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_13512 = inttoptr i32 %v1_13512 to i32*
  %v3_13512 = load i32, i32* %v2_13512, align 4
  %v1_13519 = add i32 %v0_13508, 32
  %v2_13519 = inttoptr i32 %v1_13519 to i32*
  %v3_13519 = load i32, i32* %v2_13519, align 4
  %v5_13524 = sub i32 %v3_1350b, %v3_13508
  %v1_1352c = load i32, i32* @edi, align 4
  %v2_1352c = sub i32 %v5_13524, %v1_1352c
  %v13_1352c = icmp slt i32 %v2_1352c, 0
  store i32 %v2_1352c, i32* @eax, align 4
  br i1 %v13_1352c, label %bb, label %dec_label_pc_13538

bb:                                               ; preds = %dec_label_pc_13508
  %v2_13532 = call i32 @function_138f8(i32 %v3_13508)
  br label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %bb, %dec_label_pc_13508
  %v0_13538 = phi i32 [ %v2_13532, %bb ], [ %v2_1352c, %dec_label_pc_13508 ]
  %v8_1353d = icmp sgt i32 %v0_13538, 511
  br i1 %v8_1353d, label %bb56, label %dec_label_pc_13543

bb56:                                             ; preds = %dec_label_pc_13538
  %v9_1353d = call i32 @function_13880()
  br label %dec_label_pc_13543

dec_label_pc_13543:                               ; preds = %bb56, %dec_label_pc_13538
  %v1_1354b = load i32, i32* @edi, align 4
  %v2_1354b = sub i32 %v3_1350b, %v1_1354b
  store i32 %v3_13508, i32* %edi.global-to-local, align 4
  %v0_1356f = load i32, i32* @ebx, align 4
  store i32 %v3_1350b, i32* %stack_var_236, align 4
  %v0_1357e = load i32, i32* @edx, align 4
  store i32 %v3_13512, i32* %stack_var_248, align 4
  store i32 %v3_1350b, i32* %stack_var_220, align 4
  store i32 %v2_1354b, i32* %stack_var_204, align 4
  %v2_135e5 = ptrtoint i32* %stack_var_236 to i32
  %v2_135f0 = ptrtoint i32* %stack_var_220 to i32
  %v2_135fb = ptrtoint i32* %stack_var_204 to i32
  %v2_13606 = ptrtoint i32* %stack_var_128 to i32
  %v5_13610 = call i32 @unknown_239a0(i32 %v2_13606, i32 %v2_135fb, i32 %v2_135f0, i32 %v2_135e5, i32 %v0_1356f)
  store i32 %arg1, i32* %edx.global-to-local, align 4
  store i32 %v0_1357e, i32* %ecx.global-to-local, align 4
  %v1_1362b = load i32, i32* @ebx, align 4
  %v2_1362b = add i32 %v1_1362b, 24
  %v3_1362b = inttoptr i32 %v2_1362b to i32*
  store i32 %v3_13519, i32* %v3_1362b, align 4
  %v0_13632 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_13632, i32* %stack_var_504, align 4
  %v0_1363d = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_1363d, i32* %stack_var_516, align 4
  %v1_1364f = load i32, i32* @ebx, align 4
  %v2_1364f = add i32 %v1_1364f, 28
  %v3_1364f = inttoptr i32 %v2_1364f to i32*
  store i32 %v3_13508, i32* %v3_1364f, align 4
  store i32 %v3_13519, i32* %edx.global-to-local, align 4
  %v1_13668 = load i32, i32* @ebx, align 4
  %v2_13668 = add i32 %v1_13668, 32
  %v3_13668 = inttoptr i32 %v2_13668 to i32*
  %v0_13676 = load i32, i32* @esi, align 4
  %v1_13676 = add i32 %v0_13676, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_13676 = inttoptr i32 %v1_13676 to i32*
  %v3_13676 = load i32, i32* %v2_13676, align 4
  store i32 %v3_13676, i32* %edx.global-to-local, align 4
  %v1_13679 = add i32 %v0_13676, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_13679 = inttoptr i32 %v1_13679 to i32*
  %v3_13679 = load i32, i32* %v2_13679, align 4
  store i32 %v3_13679, i32* %ecx.global-to-local, align 4
  %v1_1367c = load i32, i32* @ebx, align 4
  %v2_1367c = add i32 %v1_1367c, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_1367c = inttoptr i32 %v2_1367c to i32*
  %v2_13683 = ptrtoint i32* %stack_var_248 to i32
  store i32 %v2_13683, i32* @ebx, align 4
  %v2_13691 = ptrtoint i32* %stack_var_504 to i32
  store i32 %v2_13691, i32* %edx.global-to-local, align 4
  %v2_136a6 = load i32, i32* @esi, align 4
  %v1_136af = add i32 %v2_136a6, 12
  %v2_136af = inttoptr i32 %v1_136af to i32*
  store i32 %v3_13519, i32* %edx.global-to-local, align 4
  %v0_136c5 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v2_136a6, i32* %edi.global-to-local, align 4
  %v1_136e2 = add i32 %v2_136a6, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_136e2 = inttoptr i32 %v1_136e2 to i32*
  %v3_136e2 = load i32, i32* %v2_136e2, align 4
  %v3_136e9 = load i32, i32* %v2_136af, align 4
  store i32 %v3_136e9, i32* %edx.global-to-local, align 4
  %v8_136f3 = call i32 @unknown_254b0(i32 %v2_13683, i32 %v2_136a6, i32 %v3_136e2, i32 %v3_136e9, i32 %v3_13519, i32 %v0_136c5, i32 %tmp21, i32 %v2_13691)
  %v0_136f8 = load i32, i32* @esi, align 4
  %v1_136f8 = add i32 %v0_136f8, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_136f8 = inttoptr i32 %v1_136f8 to i32*
  %v3_136f8 = load i32, i32* %v2_136f8, align 4
  store i32 %v3_136f8, i32* %ecx.global-to-local, align 4
  %v1_136fe = add i32 %v0_136f8, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_136fe = inttoptr i32 %v1_136fe to i32*
  %v3_136fe = load i32, i32* %v2_136fe, align 4
  store i32 %v3_136fe, i32* %edx.global-to-local, align 4
  store i32 %v3_13519, i32* %edi.global-to-local, align 4
  %v2_1371c = ptrtoint i32* %stack_var_516 to i32
  store i32 %v0_136f8, i32* %stack_var_516, align 4
  %v4_13740 = call i32 @unknown_25740(i32 %v2_13683, i32 %v3_13519, i32 %tmp19, i32 %v2_1371c)
  ret i32 %v4_13740

; uselistorder directives
  uselistorder i32 %v2_136a6, { 1, 2, 0, 3 }
  uselistorder i32 %v3_13519, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32 %v3_1350b, { 3, 2, 1, 0 }
  uselistorder i32 %v0_13508, { 1, 0, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @unknown_25740, { 2, 4, 3, 1, 0, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @unknown_239a0, { 1, 3, 0, 2 }
}

define i32 @function_13750() local_unnamed_addr {
dec_label_pc_13750:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = icmp slt i32 %tmp5, 1
  br i1 %tmp6, label %bb, label %dec_label_pc_1375c

bb:                                               ; preds = %dec_label_pc_13750
  %v7_13756 = call i32 @function_13868(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %bb, %dec_label_pc_13750
  %v2_13760 = ashr i32 %tmp5, ptrtoint (i32* @global_var_9.953 to i32)
  %v0_1376b = load i32, i32* @ecx, align 4
  %v2_1376b = mul i32 %v2_13760, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1376b = add i32 %v0_1376b, %v2_1376b
  %v1_1376e = inttoptr i32 %v3_1376b to i32*
  %v2_1376e = load i32, i32* %v1_1376e, align 4
  store i32 %v2_1376e, i32* @ebp, align 4
  %v2_13782 = shl i32 %v2_13760, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_1378d = sub i32 %tmp5, %v2_13782
  %v2_13791 = add i32 %v2_1376e, %v5_1378d
  ret i32 %v2_13791

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 2, 0 }
  uselistorder i32 (i32, i32)* @function_13868, { 1, 0 }
}

define i32 @function_137a0() local_unnamed_addr {
dec_label_pc_137a0:
  %of.global-to-local = alloca i1, align 1
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  store i1 false, i1* %of.global-to-local, align 1
  %tmp4 = icmp slt i32 %tmp3, 1
  br i1 %tmp4, label %bb, label %dec_label_pc_137ac

bb:                                               ; preds = %dec_label_pc_137a0
  %v6_137a6 = call i32 @function_13314(i32 ptrtoint (i32* @1 to i32))
  %v1_137b0.pre = load i1, i1* %of.global-to-local, align 1
  br label %dec_label_pc_137ac

dec_label_pc_137ac:                               ; preds = %bb, %dec_label_pc_137a0
  %v1_137b0 = phi i1 [ %v1_137b0.pre, %bb ], [ false, %dec_label_pc_137a0 ]
  %v2_137b0 = ashr i32 %tmp3, ptrtoint (i32* @global_var_9.953 to i32)
  store i1 %v1_137b0, i1* %of.global-to-local, align 1
  ret i32 %v2_137b0

; uselistorder directives
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i32 (i32)* @function_13314, { 1, 0 }
}

define i32 @function_137b7(i32 %arg1) local_unnamed_addr {
dec_label_pc_137b7:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %v0_137bb = load i32, i32* @ebp, align 4
  %v2_137bb = mul i32 %tmp2, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_137bb = add i32 %v0_137bb, %v2_137bb
  %v1_137bf = inttoptr i32 %v3_137bb to i32*
  %v2_137bf = load i32, i32* %v1_137bf, align 4
  %v2_137cf = shl i32 %tmp2, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_137da = sub i32 %arg1, %v2_137cf
  %v2_137de = add i32 %v2_137bf, %v5_137da
  store i32 %v2_137de, i32* @ecx, align 4
  ret i32 %v2_137bf

; uselistorder directives
  uselistorder i32 %v2_137bf, { 1, 0 }
}

define i32 @function_137f0() local_unnamed_addr {
dec_label_pc_137f0:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = icmp slt i32 %tmp5, 1
  br i1 %tmp6, label %bb, label %dec_label_pc_137fc

bb:                                               ; preds = %dec_label_pc_137f0
  %v7_137f6 = call i32 @function_138e0(i32 ptrtoint (i32* @1 to i32), i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %bb, %dec_label_pc_137f0
  %v2_13800 = ashr i32 %tmp5, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_1380f = mul i32 %v2_13800, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1380f = add i32 %v2_1380f, %tmp3
  %v1_13812 = inttoptr i32 %v3_1380f to i32*
  %v2_13812 = load i32, i32* %v1_13812, align 4
  ret i32 %v2_13812

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_138e0, { 1, 0 }
}

define i32 @function_13840() local_unnamed_addr {
dec_label_pc_13840:
  %v0_13840 = load i32, i32* @esi, align 4
  %tmp = icmp slt i32 %v0_13840, 1
  br i1 %tmp, label %bb, label %dec_label_pc_13848

bb:                                               ; preds = %dec_label_pc_13840
  %v5_13842 = call i32 @function_138d0()
  %v0_13848.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %bb, %dec_label_pc_13840
  %v0_13855 = phi i32 [ %v0_13848.pre, %bb ], [ %v0_13840, %dec_label_pc_13840 ]
  %v2_1384a = ashr i32 %v0_13855, ptrtoint (i32* @global_var_9.953 to i32)
  %v0_1384d = load i32, i32* @edx, align 4
  %v2_1384d = mul i32 %v2_1384a, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1384d = add i32 %v0_1384d, %v2_1384d
  %v1_13850 = inttoptr i32 %v3_1384d to i32*
  %v2_13850 = load i32, i32* %v1_13850, align 4
  %v2_13852 = shl i32 %v2_1384a, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_13855 = sub i32 %v0_13855, %v2_13852
  %v2_1385d = mul i32 %v2_13855, ptrtoint (i8** @global_var_1.820 to i32)
  %v3_1385d = add i32 %v2_13850, %v2_1385d
  store i32 %v3_1385d, i32* @ebp, align 4
  ret i32 %v2_13850

; uselistorder directives
  uselistorder i32 %v0_13840, { 1, 0 }
  uselistorder i32 ()* @function_138d0, { 1, 0 }
}

define i32 @function_13868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13868:
  %v2_1386c = lshr i32 %arg1, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_1386f = or i32 %v2_1386c, -8388608
  store i32 %v1_1386f, i32* @ebp, align 4
  %v0_13879 = load i32, i32* @eax, align 4
  ret i32 %v0_13879
}

define i32 @function_13880() local_unnamed_addr {
dec_label_pc_13880:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = icmp slt i32 %tmp5, 1
  br i1 %tmp6, label %bb, label %dec_label_pc_13888

bb:                                               ; preds = %dec_label_pc_13880
  %v6_13886 = call i32 @function_138f8(i32 ptrtoint (i32* @1 to i32))
  br label %dec_label_pc_13888

dec_label_pc_13888:                               ; preds = %bb, %dec_label_pc_13880
  %v2_1388c = ashr i32 %tmp5, ptrtoint (i32* @global_var_9.953 to i32)
  %v2_1389b = mul i32 %v2_1388c, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_1389b = add i32 %v2_1389b, %tmp3
  %v1_1389e = inttoptr i32 %v3_1389b to i32*
  %v2_1389e = load i32, i32* %v1_1389e, align 4
  store i32 %v2_1389e, i32* @edi, align 4
  %v2_138af = shl i32 %v2_1388c, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_138ba = sub i32 %tmp5, %v2_138af
  %v2_138be = add i32 %v2_1389e, %v5_138ba
  ret i32 %v2_138be

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 2, 0 }
  uselistorder i32 (i32)* @function_138f8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @1 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 31, 32, 33, 34, 36, 37, 38, 39, 35, 40, 42, 43, 44, 41 }
}

define i32 @function_138d0() local_unnamed_addr {
dec_label_pc_138d0:
  %v0_138db = load i32, i32* @eax, align 4
  ret i32 %v0_138db
}

define i32 @function_138e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138e0:
  %v0_138f1 = load i32, i32* @eax, align 4
  ret i32 %v0_138f1
}

define i32 @function_138f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_138f8:
  %v0_13909 = load i32, i32* @eax, align 4
  ret i32 %v0_13909
}

define i32 @function_1390b() local_unnamed_addr {
dec_label_pc_1390b:
  %v0_1390b = load i32, i32* @eax, align 4
  ret i32 %v0_1390b
}

define i32 @_ZNSt5dequeIcSaIcEE19_M_range_insert_auxIN9__gnu_cxx17__normal_iteratorIPKcSsEEEEvSt15_Deque_iteratorIcRcPcET_SC_St20forward_iterator_tag(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13910:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  store i32 %arg4, i32* @edi, align 4
  %v0_1392b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v2_13953 = load i32, i32* %arg2, align 4
  store i32 %v2_13953, i32* @eax, align 4
  %v2_1395e = sub i32 %arg4, %arg3
  store i32 %v2_1395e, i32* @ebp, align 4
  %v2_13960 = add i32 %arg1, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_13960 = inttoptr i32 %v2_13960 to i32*
  %v4_13960 = load i32, i32* %v3_13960, align 4
  %v15_13960 = icmp eq i32 %v2_13953, %v4_13960
  br i1 %v15_13960, label %bb, label %dec_label_pc_13969

bb:                                               ; preds = %dec_label_pc_13910
  %v4_13963 = call i32 @function_13ae8(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0))
  store i32 %v4_13963, i32* @eax, align 4
  %v1_13969.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_13969

dec_label_pc_13969:                               ; preds = %bb, %dec_label_pc_13910
  %v1_13969 = phi i32 [ %v1_13969.pre, %bb ], [ %arg1, %dec_label_pc_13910 ]
  %v0_13969 = phi i32 [ %v4_13963, %bb ], [ %v2_13953, %dec_label_pc_13910 ]
  %v2_13969 = add i32 %v1_13969, 24
  %v3_13969 = inttoptr i32 %v2_13969 to i32*
  %v4_13969 = load i32, i32* %v3_13969, align 4
  %v15_13969 = icmp eq i32 %v0_13969, %v4_13969
  br i1 %v15_13969, label %bb121, label %dec_label_pc_1396e

bb121:                                            ; preds = %dec_label_pc_13969
  %v1_1396c = call i32 @function_139d8()
  %v0_1399b.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_1396e

dec_label_pc_1396e:                               ; preds = %bb121, %dec_label_pc_13969
  %v0_1399b = phi i32 [ %v0_1399b.pre, %bb121 ], [ %v1_13969, %dec_label_pc_13969 ]
  %v0_1396e = phi i32 [ %v1_1396c, %bb121 ], [ %v0_13969, %dec_label_pc_13969 ]
  store i32 %v0_1396e, i32* %stack_var_-64, align 4
  %v0_13987 = load i32, i32* @edi, align 4
  %v0_1398b = load i32, i32* @esi, align 4
  %v2_13993 = ptrtoint i32* %stack_var_-64 to i32
  %v4_1399e = call i32 @unknown_26500(i32 %v0_1399b, i32 %v2_13993, i32 %v0_1398b, i32 %v0_13987)
  store i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32* @eax, align 4
  br i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), label %bb122, label %dec_label_pc_139b4

bb122:                                            ; preds = %dec_label_pc_1396e
  %v2_139ae = call i32 @function_13b7e()
  br label %dec_label_pc_139b4

dec_label_pc_139b4:                               ; preds = %bb122, %dec_label_pc_1396e
  %v4_139b4 = phi i32 [ %v2_139ae, %bb122 ], [ xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), %dec_label_pc_1396e ]
  store i32 %v0_1392b, i32* %ebx.global-to-local, align 4
  ret i32 %v4_139b4

; uselistorder directives
  uselistorder i32 %v0_13969, { 1, 0 }
  uselistorder i32 %v2_13953, { 1, 0, 2 }
  uselistorder i1 icmp ne (i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), i32 0), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 }
  uselistorder i32 xor (i32 ptrtoint ([2 x i8]* @2 to i32), i32 ptrtoint ([2 x i8]* @2 to i32)), { 0, 32, 33, 34, 35, 72, 36, 1, 2, 3, 37, 4, 38, 39, 40, 41, 5, 42, 43, 44, 46, 6, 45, 48, 7, 47, 49, 8, 9, 50, 10, 51, 11, 12, 13, 52, 53, 54, 55, 14, 56, 57, 58, 59, 61, 60, 62, 15, 63, 16, 17, 64, 18, 19, 20, 21, 65, 22, 66, 23, 67, 24, 68, 25, 69, 26, 27, 28, 70, 29, 71, 30, 31 }
}

define i32 @function_139c0() local_unnamed_addr {
dec_label_pc_139c0:
  %v2_139c0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_139c0 = load i32, i32* @eax, align 4
  %v4_139c0 = trunc i32 %v3_139c0 to i8
  %v5_139c0 = add i8 %v4_139c0, %v2_139c0
  %v21_139c0 = inttoptr i32 %v3_139c0 to i8*
  store i8 %v5_139c0, i8* %v21_139c0, align 1
  %v0_139d6 = load i32, i32* @eax, align 4
  ret i32 %v0_139d6
}

define i32 @function_139d8() local_unnamed_addr {
dec_label_pc_139d8:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %stack_var_108 = alloca i32, align 4
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v0_139d8 = load i32, i32* @ebx, align 4
  %v1_139d8 = add i32 %v0_139d8, 32
  %v2_139d8 = inttoptr i32 %v1_139d8 to i32*
  %v3_139d8 = load i32, i32* %v2_139d8, align 4
  %v1_139dd = load i32, i32* @eax, align 4
  %v2_139dd = sub i32 %v3_139d8, %v1_139dd
  %v1_139df = add i32 %v2_139dd, sub (i32 0, i32 ptrtoint (i8** @global_var_1.820 to i32))
  store i32 %v1_139df, i32* %ecx.global-to-local, align 4
  %v0_139e2 = load i32, i32* @ebp, align 4
  %v2_139e2 = sub i32 %v0_139e2, %v1_139df
  %v7_139e2 = icmp ult i32 %v0_139e2, %v1_139df
  %v12_139e2 = icmp eq i32 %v2_139e2, 0
  %v2_139e4 = or i1 %v7_139e2, %v12_139e2
  br i1 %v2_139e4, label %dec_label_pc_139fc, label %dec_label_pc_139e6

dec_label_pc_139e6:                               ; preds = %dec_label_pc_139d8
  store i32 %v2_139e2, i32* %eax.global-to-local, align 4
  %v3_139f1 = call i32 @unknown_245c0(i32 %v0_139d8, i32 %v2_139e2)
  store i32 %v3_139f1, i32* %eax.global-to-local, align 4
  %v0_139f6 = load i32, i32* @ebx, align 4
  %v1_139f6 = add i32 %v0_139f6, 24
  %v2_139f6 = inttoptr i32 %v1_139f6 to i32*
  %v3_139f6 = load i32, i32* %v2_139f6, align 4
  store i32 %v3_139f6, i32* @eax, align 4
  %v1_13a10.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139e6, %dec_label_pc_139d8
  %v1_13a10 = phi i32 [ %v1_13a10.pre, %dec_label_pc_139e6 ], [ %v0_139e2, %dec_label_pc_139d8 ]
  %v0_13a0a = phi i32 [ %v3_139f6, %dec_label_pc_139e6 ], [ %v1_139dd, %dec_label_pc_139d8 ]
  %v0_139fc = phi i32 [ %v0_139f6, %dec_label_pc_139e6 ], [ %v0_139d8, %dec_label_pc_139d8 ]
  %v1_139fc = add i32 %v0_139fc, 28
  %v2_139fc = inttoptr i32 %v1_139fc to i32*
  %v3_139fc = load i32, i32* %v2_139fc, align 4
  store i32 %v3_139fc, i32* %ecx.global-to-local, align 4
  %v1_13a03 = add i32 %v0_139fc, ptrtoint (i32* @global_var_24.839 to i32)
  %v2_13a03 = inttoptr i32 %v1_13a03 to i32*
  %v3_13a03 = load i32, i32* %v2_13a03, align 4
  %v5_13a0c = sub i32 %v0_13a0a, %v3_139fc
  %v2_13a10 = add i32 %v5_13a0c, %v1_13a10
  %v13_13a10 = icmp slt i32 %v2_13a10, 0
  store i32 %v2_13a10, i32* %ecx.global-to-local, align 4
  br i1 %v13_13a10, label %bb, label %dec_label_pc_13a1c

bb:                                               ; preds = %dec_label_pc_139fc
  %v4_13a16 = call i32 @function_13b68(i32 %v2_13a10, i32 %v3_139fc, i32 %v3_13a03)
  store i32 %v4_13a16, i32* @eax, align 4
  %v0_13a1c.pr = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_13a1c

dec_label_pc_13a1c:                               ; preds = %bb, %dec_label_pc_139fc
  %v1_13a78 = phi i32 [ %v4_13a16, %bb ], [ %v0_13a0a, %dec_label_pc_139fc ]
  %v0_13a1c = phi i32 [ %v0_13a1c.pr, %bb ], [ %v2_13a10, %dec_label_pc_139fc ]
  %v7_13a22 = icmp sgt i32 %v0_13a1c, 511
  br i1 %v7_13a22, label %dec_label_pc_13a24, label %dec_label_pc_13a78

dec_label_pc_13a24:                               ; preds = %dec_label_pc_13a1c
  store i32 %v2_13a10, i32* %ecx.global-to-local, align 4
  %tmp29 = icmp slt i32 %v2_13a10, 1
  br i1 %tmp29, label %bb30, label %dec_label_pc_13a30

bb30:                                             ; preds = %dec_label_pc_13a24
  %v8_13a2a = call i32 @function_13b68(i32 %v2_13a10, i32 %v3_139fc, i32 %v3_13a03)
  store i32 %v8_13a2a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %bb30, %dec_label_pc_13a24
  %v0_13a8e8 = phi i32 [ %v8_13a2a, %bb30 ], [ %v1_13a78, %dec_label_pc_13a24 ]
  %v2_13a34 = ashr i32 %v2_13a10, ptrtoint (i32* @global_var_9.953 to i32)
  store i32 %v3_13a03, i32* %ebp.global-to-local, align 4
  %v2_13a43 = mul i32 %v2_13a34, ptrtoint (i8** @global_var_4.814 to i32)
  %v3_13a43 = add i32 %v2_13a43, %v3_13a03
  store i32 %v3_13a43, i32* %ecx.global-to-local, align 4
  %v1_13a47 = inttoptr i32 %v3_13a43 to i32*
  %v2_13a47 = load i32, i32* %v1_13a47, align 4
  store i32 %v2_13a47, i32* %ebp.global-to-local, align 4
  %v2_13a5b = shl i32 %v2_13a34, ptrtoint (i32* @global_var_9.953 to i32)
  %v5_13a66 = sub i32 %v2_13a10, %v2_13a5b
  %v2_13a6a = add i32 %v2_13a47, %v5_13a66
  store i32 %v2_13a6a, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_13a8e

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a1c
  store i32 %v3_139fc, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_13a8e

dec_label_pc_13a8e:                               ; preds = %dec_label_pc_13a78, %dec_label_pc_13a30
  %v0_13a8e = phi i32 [ %v0_13a8e8, %dec_label_pc_13a30 ], [ %v1_13a78, %dec_label_pc_13a78 ]
  %stack_var_40.0 = phi i32 [ %v2_13a5b, %dec_label_pc_13a30 ], [ %tmp19, %dec_label_pc_13a78 ]
  %stack_var_56.0 = phi i32 [ %v3_13a43, %dec_label_pc_13a30 ], [ %v3_13a03, %dec_label_pc_13a78 ]
  store i32 %v0_13a8e, i32* %stack_var_108, align 4
  store i32 %v3_13a03, i32* %ecx.global-to-local, align 4
  %v2_13a9e = ptrtoint i32* %stack_var_108 to i32
  %v2_13aaa = ptrtoint i32* %stack_var_76 to i32
  store i32 %v2_13aaa, i32* %eax.global-to-local, align 4
  %v0_13ab5 = load i32, i32* @edi, align 4
  %v0_13ab9 = load i32, i32* @esi, align 4
  %v5_13abd = call i32 @unknown_26460(i32 %v2_13aaa, i32 %v0_13ab9, i32 %v0_13ab5, i32 %v2_13a9e)
  %v0_13ac2 = load i32, i32* %ebp.global-to-local, align 4
  %v1_13ac2 = load i32, i32* @ebx, align 4
  %v2_13ac2 = add i32 %v1_13ac2, 28
  %v3_13ac2 = inttoptr i32 %v2_13ac2 to i32*
  store i32 %v0_13ac2, i32* %v3_13ac2, align 4
  store i32 %stack_var_40.0, i32* %eax.global-to-local, align 4
  store i32 %stack_var_56.0, i32* %ecx.global-to-local, align 4
  store i32 %v3_13a03, i32* %ebp.global-to-local, align 4
  %v1_13ad4 = load i32, i32* @ebx, align 4
  %v2_13ad4 = add i32 %v1_13ad4, 24
  %v3_13ad4 = inttoptr i32 %v2_13ad4 to i32*
  store i32 %stack_var_40.0, i32* %v3_13ad4, align 4
  %v0_13ad7 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13ad7 = load i32, i32* @ebx, align 4
  %v2_13ad7 = add i32 %v1_13ad7, 32
  %v3_13ad7 = inttoptr i32 %v2_13ad7 to i32*
  store i32 %v0_13ad7, i32* %v3_13ad7, align 4
  %v0_13ada = load i32, i32* %ebp.global-to-local, align 4
  %v1_13ada = load i32, i32* @ebx, align 4
  %v2_13ada = add i32 %v1_13ada, ptrtoint (i32* @global_var_24.839 to i32)
  %v3_13ada = inttoptr i32 %v2_13ada to i32*
  store i32 %v0_13ada, i32* %v3_13ada, align 4
  %v0_13add = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13add

; uselistorder directives
  uselistorder i32 %stack_var_40.0, { 1, 0 }
  uselistorder i32 %v2_13a10, { 2, 3, 4, 0, 5, 1, 6, 7, 8 }
  uselistorder i32 %v3_13a03, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_139fc, { 1, 0 }
  uselistorder i32 %v2_139e2, { 1, 0, 2 }
  uselistorder i32 %v1_139df, { 1, 2, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 511, { 0, 1, 6, 7, 2, 3, 4, 5, 8, 9, 11, 10, 12 }
  uselistorder i32 (i32, i32, i32)* @function_13b68, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24.839 to i32), { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 28, { 25, 26, 42, 43, 27, 44, 45, 28, 0, 29, 30, 31, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 33, 34, 35, 36, 37, 38, 39, 40, 41, 13, 46, 47, 48, 14, 49, 15, 58, 16, 17, 18, 52, 50, 51, 53, 54, 55, 56, 57, 19, 20, 21, 22, 23, 24, 59 }
  uselistorder i32 24, { 19, 20, 21, 47, 48, 22, 49, 50, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 6, 46, 7, 51, 52, 53, 54, 58, 55, 56, 8, 67, 68, 57, 9, 10, 59, 60, 61, 62, 63, 64, 65, 66, 11, 12, 13, 14, 15, 16, 17, 18, 70, 69 }
  uselistorder i32 32, { 4, 5, 14, 15, 6, 16, 17, 7, 8, 9, 10, 0, 1, 11, 12, 13, 2, 18, 19, 20, 21, 22, 3, 23, 24, 25, 26, 27, 29, 28 }
}

define i32 @function_13ae8(i8* %arg1) local_unnamed_addr {
dec_label_pc_13ae8:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %v2_13ae8 = ptrtoint i32* %stack_var_76 to i32
  store i32 %v2_13ae8, i32* %eax.global-to-local, align 4
  %v0_13af3 = load i32, i32* @ebx, align 4
  %v2_13af7 = call i32 @unknown_244f0(i32 %v2_13ae8, i32 %v0_13af3)
  %v0_13aff = load i32, i32* @ebp, align 4
  %v4_13b01 = ptrtoint i8* %arg1 to i32
  store i32 %v4_13b01, i32* %eax.global-to-local, align 4
  %tmp12 = icmp slt i32 %v0_13aff, 1
  br i1 %tmp12, label %dec_label_pc_13b40, label %dec_label_pc_13b0f

dec_label_pc_13b0f:                               ; preds = %dec_label_pc_13ae8
  %v0_13b20.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13b18:                               ; preds = %dec_label_pc_13b2c, %dec_label_pc_13b20
  %v2_13b232 = phi i32 [ %v3_13b2c, %dec_label_pc_13b2c ], [ %v1_13b25, %dec_label_pc_13b20 ]
  %v0_13b18 = load i32, i32* @esi, align 4
  %v1_13b18 = add i32 %v0_13b18, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_13b18, i32* @esi, align 4
  %v0_13b1b = load i32, i32* @ebp, align 4
  %v1_13b1b = sub i32 %v0_13b1b, ptrtoint (i8** @global_var_1.820 to i32)
  %v10_13b1b = icmp eq i32 %v1_13b1b, 0
  store i32 %v1_13b1b, i32* @ebp, align 4
  br i1 %v10_13b1b, label %dec_label_pc_13b40, label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13b18, %dec_label_pc_13b0f
  %v2_13b23 = phi i32 [ %v2_13b232, %dec_label_pc_13b18 ], [ %v4_13b01, %dec_label_pc_13b0f ]
  %v0_13b20 = phi i32 [ %v1_13b18, %dec_label_pc_13b18 ], [ %v0_13b20.pre, %dec_label_pc_13b0f ]
  %v1_13b20 = inttoptr i32 %v0_13b20 to i8*
  %v2_13b20 = load i8, i8* %v1_13b20, align 1
  %v3_13b23 = inttoptr i32 %v2_13b23 to i8*
  store i8 %v2_13b20, i8* %v3_13b23, align 1
  %v0_13b25 = load i32, i32* %eax.global-to-local, align 4
  %v1_13b25 = add i32 %v0_13b25, 1
  store i32 %v1_13b25, i32* %eax.global-to-local, align 4
  %v1_13b28 = load i32, i32* @edi, align 4
  %v12_13b28 = icmp eq i32 %v1_13b25, %v1_13b28
  %v1_13b2a = icmp eq i1 %v12_13b28, false
  br i1 %v1_13b2a, label %dec_label_pc_13b18, label %dec_label_pc_13b2c

dec_label_pc_13b2c:                               ; preds = %dec_label_pc_13b20
  %v0_13b2c = load i32, i32* %ecx.global-to-local, align 4
  %v1_13b2c = add i32 %v0_13b2c, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_13b2c = inttoptr i32 %v1_13b2c to i32*
  %v3_13b2c = load i32, i32* %v2_13b2c, align 4
  store i32 %v3_13b2c, i32* %eax.global-to-local, align 4
  store i32 %v1_13b2c, i32* %ecx.global-to-local, align 4
  %v1_13b32 = add i32 %v3_13b2c, 512
  store i32 %v1_13b32, i32* @edi, align 4
  br label %dec_label_pc_13b18

dec_label_pc_13b40:                               ; preds = %dec_label_pc_13b18, %dec_label_pc_13ae8
  %v1_13b44 = load i32, i32* @ebx, align 4
  %v2_13b44 = add i32 %v1_13b44, ptrtoint (i32* @global_var_8.813 to i32)
  %v3_13b44 = inttoptr i32 %v2_13b44 to i32*
  store i32 %v4_13b01, i32* %v3_13b44, align 4
  %v3_13b47 = load i32, i32* %stack_var_76, align 4
  %v1_13b4b = load i32, i32* @ebx, align 4
  %v2_13b4b = add i32 %v1_13b4b, 12
  %v3_13b4b = inttoptr i32 %v2_13b4b to i32*
  store i32 %v3_13b47, i32* %v3_13b4b, align 4
  %v1_13b52 = load i32, i32* @ebx, align 4
  %v2_13b52 = add i32 %v1_13b52, ptrtoint ([6 x i8]* @global_var_10.833 to i32)
  %v3_13b52 = inttoptr i32 %v2_13b52 to i32*
  %v1_13b59 = load i32, i32* @ebx, align 4
  %v2_13b59 = add i32 %v1_13b59, ptrtoint (i8** @global_var_14.812 to i32)
  %v3_13b59 = inttoptr i32 %v2_13b59 to i32*
  %v0_13b5c = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13b5c

; uselistorder directives
  uselistorder i32 %v3_13b2c, { 0, 2, 1 }
  uselistorder i32 %v1_13b25, { 0, 2, 1 }
  uselistorder i32 %v4_13b01, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i8** @global_var_14.812 to i32), { 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_13b68(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b68:
  %v2_13b6c = lshr i32 %arg1, ptrtoint (i32* @global_var_9.953 to i32)
  %v1_13b6f = or i32 %v2_13b6c, -8388608
  store i32 %v1_13b6f, i32* @ebp, align 4
  %v0_13b79 = load i32, i32* @eax, align 4
  ret i32 %v0_13b79

; uselistorder directives
  uselistorder i32 -8388608, { 0, 7, 6, 1, 2, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_9.953 to i32), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 26, 27, 28, 30, 31, 32, 35, 33, 34, 36, 37 }
}

define i32 @function_13b7e() local_unnamed_addr {
dec_label_pc_13b7e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZNSs12_S_constructISt15_Deque_iteratorIcRcPcEEES2_T_S4_RKSaIcESt20forward_iterator_tag(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b90:
  ret i32 0
}

define i32 @function_13c0a(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c0a:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %tmp102 = ptrtoint i32* %arg1 to i32
  %v0_13c0a = load i32, i32* %ebx.global-to-local, align 4
  %v1_13c0a = add i32 %v0_13c0a, -1961653442
  %v2_13c0a = inttoptr i32 %v1_13c0a to i32*
  %v3_13c0a = load i32, i32* %v2_13c0a, align 4
  %v4_13c0a = sub i32 %v3_13c0a, ptrtoint (i8** @global_var_1.820 to i32)
  %v12_13c0a = icmp eq i32 %v4_13c0a, 0
  store i1 %v12_13c0a, i1* %zf.global-to-local, align 1
  store i32 %v4_13c0a, i32* %v2_13c0a, align 4
  %v0_13c10 = load i1, i1* %cf.global-to-local, align 1
  %v1_13c10 = icmp eq i1 %v0_13c10, false
  br i1 %v1_13c10, label %dec_label_pc_13c1a, label %dec_label_pc_13c12

dec_label_pc_13c12:                               ; preds = %dec_label_pc_13c0a
  %v0_13c12 = load i32, i32* %ebx.global-to-local, align 4
  %v1_13c12 = add i32 %v0_13c12, 12
  %v2_13c12 = inttoptr i32 %v1_13c12 to i32*
  %v3_13c12 = load i32, i32* %v2_13c12, align 4
  store i32 %v3_13c12, i32* %ebp.global-to-local, align 4
  %v0_13c15 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13c15

dec_label_pc_13c1a:                               ; preds = %dec_label_pc_13c0a
  %v9_13c1a = load i32, i32* %ecx.global-to-local, align 4
  %v10_13c1a = load i32, i32* %edi.global-to-local, align 4
  %v11_13c1a = mul i32 %v10_13c1a, ptrtoint (i8** @global_var_1.820 to i32)
  %v12_13c1a = add i32 %v11_13c1a, %v9_13c1a
  %v13_13c1a = inttoptr i32 %v12_13c1a to i8*
  store i8 -1, i8* %v13_13c1a, align 1
  store i1 true, i1* %cf.global-to-local, align 1
  %v0_13c1e = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_13c1e, label %dec_label_pc_13c50, label %dec_label_pc_13c20

dec_label_pc_13c20:                               ; preds = %dec_label_pc_13c1a
  %v0_13c20 = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_13c20, i32* %ecx.global-to-local, align 4
  %v0_13c2f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_13c2f

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c2f
  %v0_13c28 = load i32, i32* %ecx.global-to-local, align 4
  %v1_13c28 = add i32 %v0_13c28, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_13c28, i32* %ecx.global-to-local, align 4
  %v0_13c2b = load i32, i32* %edi.global-to-local, align 4
  %v1_13c2b = load i32, i32* %edx.global-to-local, align 4
  %v7_13c2b = icmp ult i32 %v0_13c2b, %v1_13c2b
  store i1 %v7_13c2b, i1* %cf.global-to-local, align 1
  %v12_13c2b = icmp eq i32 %v0_13c2b, %v1_13c2b
  store i1 %v12_13c2b, i1* %zf.global-to-local, align 1
  br i1 %v12_13c2b, label %dec_label_pc_13c50, label %dec_label_pc_13c2f

dec_label_pc_13c2f:                               ; preds = %dec_label_pc_13c28, %dec_label_pc_13c3b, %dec_label_pc_13c20
  %v2_13c37 = phi i32 [ %v0_13c20, %dec_label_pc_13c20 ], [ %v1_13c3e, %dec_label_pc_13c3b ], [ %v1_13c28, %dec_label_pc_13c28 ]
  %v0_13c2f = phi i32 [ %v0_13c2f.pre, %dec_label_pc_13c20 ], [ %v3_13c3b, %dec_label_pc_13c3b ], [ %v1_13c2b, %dec_label_pc_13c28 ]
  %v1_13c2f = inttoptr i32 %v0_13c2f to i8*
  %v2_13c2f = load i8, i8* %v1_13c2f, align 1
  %v3_13c2f = zext i8 %v2_13c2f to i32
  store i32 %v3_13c2f, i32* %ebx.global-to-local, align 4
  %v1_13c32 = add i32 %v0_13c2f, 1
  store i32 %v1_13c32, i32* %edx.global-to-local, align 4
  %v1_13c35 = load i32, i32* %esi.global-to-local, align 4
  %v7_13c35 = icmp ult i32 %v1_13c32, %v1_13c35
  store i1 %v7_13c35, i1* %cf.global-to-local, align 1
  %v12_13c35 = icmp eq i32 %v1_13c32, %v1_13c35
  store i1 %v12_13c35, i1* %zf.global-to-local, align 1
  %v3_13c37 = inttoptr i32 %v2_13c37 to i8*
  store i8 %v2_13c2f, i8* %v3_13c37, align 1
  %v0_13c39 = load i1, i1* %zf.global-to-local, align 1
  %v1_13c39 = icmp eq i1 %v0_13c39, false
  br i1 %v1_13c39, label %dec_label_pc_13c28, label %dec_label_pc_13c3b

dec_label_pc_13c3b:                               ; preds = %dec_label_pc_13c2f
  %v0_13c3b = load i32, i32* %ebp.global-to-local, align 4
  %v1_13c3b = add i32 %v0_13c3b, 4
  %v2_13c3b = inttoptr i32 %v1_13c3b to i32*
  %v3_13c3b = load i32, i32* %v2_13c3b, align 4
  store i32 %v3_13c3b, i32* %edx.global-to-local, align 4
  %v0_13c3e = load i32, i32* %ecx.global-to-local, align 4
  %v1_13c3e = add i32 %v0_13c3e, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_13c3e, i32* %ecx.global-to-local, align 4
  %v1_13c41 = add i32 %v0_13c3b, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_13c41, i32* %ebp.global-to-local, align 4
  %v0_13c44 = load i32, i32* %edi.global-to-local, align 4
  %v7_13c44 = icmp ult i32 %v0_13c44, %v3_13c3b
  store i1 %v7_13c44, i1* %cf.global-to-local, align 1
  %v12_13c44 = icmp eq i32 %v0_13c44, %v3_13c3b
  store i1 %v12_13c44, i1* %zf.global-to-local, align 1
  %v1_13c46 = add i32 %v3_13c3b, 512
  store i32 %v1_13c46, i32* %esi.global-to-local, align 4
  %v1_13c4c = icmp eq i1 %v12_13c44, false
  br i1 %v1_13c4c, label %dec_label_pc_13c2f, label %dec_label_pc_13c50

dec_label_pc_13c50:                               ; preds = %dec_label_pc_13c3b, %dec_label_pc_13c28, %dec_label_pc_13c1a
  store i1 false, i1* %cf.global-to-local, align 1
  %v10_13c50 = icmp eq i32* %arg1, null
  store i1 %v10_13c50, i1* %zf.global-to-local, align 1
  store i32 %tmp102, i32* %ecx.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v1_13c66 = add i32 %tmp102, ptrtoint (i32* @global_var_8.813 to i32)
  %v2_13c66 = inttoptr i32 %v1_13c66 to i32*
  store i32 0, i32* %v2_13c66, align 4
  %v0_13c6d = load i32, i32* %edx.global-to-local, align 4
  %v1_13c6d = load i32, i32* %ecx.global-to-local, align 4
  %v2_13c6d = inttoptr i32 %v1_13c6d to i32*
  store i32 %v0_13c6d, i32* %v2_13c6d, align 4
  %v0_13c6f = load i32, i32* %ecx.global-to-local, align 4
  %v1_13c6f = load i32, i32* %edx.global-to-local, align 4
  %v3_13c6f = add i32 %v0_13c6f, 12
  %v4_13c6f = add i32 %v3_13c6f, %v1_13c6f
  %v5_13c6f = inttoptr i32 %v4_13c6f to i8*
  store i8 0, i8* %v5_13c6f, align 1
  %v0_13c74 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13c74

; uselistorder directives
  uselistorder i1 %v12_13c44, { 1, 0 }
  uselistorder i32 %v1_13c3e, { 1, 0 }
  uselistorder i32 %v3_13c3b, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v0_13c2f, { 1, 0 }
  uselistorder i1 %v12_13c2b, { 1, 0 }
  uselistorder i32 %v1_13c2b, { 1, 0, 2 }
  uselistorder i32 %tmp102, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 2, 4, 5, 3, 6, 7, 8 }
  uselistorder i32* %ebp.global-to-local, { 0, 2, 1 }
  uselistorder i1* %cf.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i8 0, { 8, 9, 11, 12, 10, 31, 13, 32, 14, 15, 16, 5, 33, 34, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 18, 19, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 65, 68, 69, 70, 71, 20, 21, 22, 23, 72, 73, 1, 83, 84, 3, 24, 86, 87, 4, 74, 75, 0, 76, 77, 25, 89, 90, 26, 27, 28, 29, 78, 80, 81, 79, 82, 85, 88, 6, 91, 2, 7, 30 }
  uselistorder i32 ptrtoint (i32* @global_var_8.813 to i32), { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 1, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 3, 2, 94, 95, 0, 4, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228 }
  uselistorder i32* null, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 7, 11, 12, 13, 5, 14, 6, 15, 16, 17, 18, 19, 0, 2, 20, 1, 3, 21, 8, 22, 23, 4, 9, 10 }
  uselistorder i32 12, { 12, 13, 48, 101, 78, 49, 102, 103, 14, 79, 80, 81, 82, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 7, 64, 15, 66, 67, 65, 8, 68, 69, 70, 71, 72, 73, 74, 16, 75, 76, 77, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 83, 84, 85, 86, 26, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 27, 100, 104, 105, 106, 28, 107, 108, 109, 0, 1, 110, 111, 112, 113, 114, 115, 116, 139, 140, 141, 142, 117, 118, 119, 29, 120, 121, 122, 123, 9, 124, 125, 126, 127, 128, 10, 30, 129, 130, 31, 156, 157, 165, 3, 166, 167, 158, 5, 159, 4, 160, 161, 32, 168, 6, 169, 170, 33, 34, 35, 162, 163, 131, 132, 133, 134, 135, 136, 137, 138, 171, 172, 36, 143, 144, 145, 146, 147, 148, 149, 37, 150, 151, 152, 153, 38, 39, 40, 41, 42, 43, 44, 154, 155, 45, 174, 173, 46, 164, 47, 11 }
  uselistorder label %dec_label_pc_13c2f, { 1, 0, 2 }
}

define i32 @function_13c80() local_unnamed_addr {
dec_label_pc_13c80:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96
}

define i32 @_ZNSs19_M_replace_dispatchISt15_Deque_iteratorIcRcPcEEERSsN9__gnu_cxx17__normal_iteratorIS2_SsEES7_T_S8_St12__false_type(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13c90:
  ret i32 %arg5
}

define i32 @function_13cd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cd0:
  %stack_var_37 = alloca i32, align 4
  %stack_var_53 = alloca i32, align 4
  %stack_var_76 = alloca i32, align 4
  %v0_13cd5 = load i32, i32* @ecx, align 4
  %v1_13cd5 = add i32 %v0_13cd5, 690496620
  %v2_13cd5 = inttoptr i32 %v1_13cd5 to i8*
  %v3_13cd5 = load i8, i8* %v2_13cd5, align 1
  %v5_13cd5 = trunc i32 %v0_13cd5 to i8
  %v6_13cd5 = add i8 %v3_13cd5, %v5_13cd5
  store i8 %v6_13cd5, i8* %v2_13cd5, align 1
  %v0_13cdb = load i32, i32* @ecx, align 4
  %v2_13ce8 = ptrtoint i32* %stack_var_76 to i32
  store i32 %v0_13cdb, i32* %stack_var_53, align 4
  %v4_13d05 = ptrtoint i32* %stack_var_37 to i32
  %v2_13d09 = ptrtoint i32* %stack_var_53 to i32
  %v5_13d1d = call i32 @unknown_27820(i32 %v2_13d09, i32 %v4_13d05, i32 %v2_13ce8, i32 0)
  store i32 %v5_13d1d, i32* @eax, align 4
  %v2_13d22 = load i32, i32* @ebx, align 4
  %v0_13d24 = load i32, i32* @ebp, align 4
  %v2_13d24 = add i32 %v2_13d22, -12
  %v3_13d24 = inttoptr i32 %v2_13d24 to i32*
  %v4_13d24 = load i32, i32* %v3_13d24, align 4
  %v5_13d24 = sub i32 %v0_13d24, %v4_13d24
  %v1_13d27 = add i32 %v5_13d1d, -12
  %v2_13d27 = inttoptr i32 %v1_13d27 to i32*
  %v3_13d27 = load i32, i32* %v2_13d27, align 4
  %v1_13d2a = add i32 %v5_13d24, 1073741820
  %tmp15 = icmp ugt i32 %v3_13d27, %v1_13d2a
  br i1 %tmp15, label %bb, label %dec_label_pc_13d38

bb:                                               ; preds = %dec_label_pc_13cd0
  %v5_13d36 = call i32 @function_13d88(i32 %v5_13d1d)
  br label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %dec_label_pc_13cd0, %bb
  %v3_13d4a = phi i32 [ %v5_13d1d, %dec_label_pc_13cd0 ], [ %v5_13d36, %bb ]
  ret i32 %v3_13d4a

; uselistorder directives
  uselistorder label %dec_label_pc_13d38, { 1, 0 }
}

define i32 @function_13d53() local_unnamed_addr {
dec_label_pc_13d53:
  %eax.global-to-local = alloca i32, align 4
  %v0_13d53 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13d53
}

define i32 @function_13d60(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d60:
  %v0_13d60 = load i32, i32* @ebx, align 4
  %v4_13d66 = icmp eq i32 %arg1, ptrtoint ([2 x i8]* @2 to i32)
  %v1_13d6d = icmp eq i1 %v4_13d66, false
  br i1 %v1_13d6d, label %dec_label_pc_13d83, label %dec_label_pc_13d6f

dec_label_pc_13d6f:                               ; preds = %dec_label_pc_13d60
  ret i32 %v0_13d60

dec_label_pc_13d83:                               ; preds = %dec_label_pc_13d60
  ret i32 %v0_13d60
}

define i32 @function_13d88(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d88:
  %v3_13d88 = load i32, i32* @eax, align 4
  ret i32 %v3_13d88
}

define i32 @function_13d95() local_unnamed_addr {
dec_label_pc_13d95:
  %eax.global-to-local = alloca i32, align 4
  %v0_13d95 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_13d95
}

define i32 @_ZN5boost9algorithm6detail21find_format_all_impl2ISsNS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIS5_SsEEEEEENS9_INSB_IPcSsEEEESD_EEvRT_T0_T1_T2_T3_(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13db0:
  ret i32 ptrtoint ([2 x i8]* @2 to i32)
}

define i32 @function_13df0(i32* %arg1) local_unnamed_addr {
dec_label_pc_13df0:
  %stack_var_100 = alloca i32, align 4
  %v2_13df0 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_13df0 = load i32, i32* @eax, align 4
  %v4_13df0 = trunc i32 %v3_13df0 to i8
  %v5_13df0 = add i8 %v4_13df0, %v2_13df0
  %v21_13df0 = inttoptr i32 %v3_13df0 to i8*
  store i8 %v5_13df0, i8* %v21_13df0, align 1
  %v2_13df4 = ptrtoint i32* %stack_var_100 to i32
  store i32 0, i32* %stack_var_100, align 4
  %v2_13e9f = call i32 @unknown_22370(i32 %v2_13df4, i32 0)
  %v2_13ea8 = load i32, i32* %arg1, align 4
  store i32 %v2_13ea8, i32* @esi, align 4
  %v1_13eaa = add i32 %v2_13ea8, -4
  %v2_13eaa = inttoptr i32 %v1_13eaa to i32*
  %v3_13eaa = load i32, i32* %v2_13eaa, align 4
  %v2_13eaf = icmp slt i32 %v3_13eaa, 0
  br i1 %v2_13eaf, label %bb, label %dec_label_pc_13eb7

bb:                                               ; preds = %dec_label_pc_13df0
  %v1_13eb1 = call i32 @function_14354()
  br label %dec_label_pc_13eb7

dec_label_pc_13eb7:                               ; preds = %bb, %dec_label_pc_13df0
  %v3_13ebb = phi i32 [ %v1_13eb1, %bb ], [ %v3_13eaa, %dec_label_pc_13df0 ]
  ret i32 %v3_13ebb
}

define i32 @function_13ee2(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ee2:
  ret i32 %arg1
}

define i32 @function_13ef0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ef0:
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i8* @__decompiler_undefined_function_1()
  %v4_13ef0 = ptrtoint i8* %tmp17 to i32
  %v15_13ef4 = icmp eq i32 %tmp16, %v4_13ef0
  store i32 %arg2, i32* @esi, align 4
  br i1 %v15_13ef4, label %dec_label_pc_13f30, label %dec_label_pc_13f00.preheader

dec_label_pc_13f00.preheader:                     ; preds = %dec_label_pc_13ef0
  br label %dec_label_pc_13f00

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13f00.preheader, %dec_label_pc_13f20
  %v0_13f08 = phi i32 [ %v1_13f20, %dec_label_pc_13f20 ], [ %v4_13ef0, %dec_label_pc_13f00.preheader ]
  %v2_13f0b = phi i32 [ %v1_13f27, %dec_label_pc_13f20 ], [ %arg2, %dec_label_pc_13f00.preheader ]
  %stack_var_108.0 = phi i8* [ %v4_13f23, %dec_label_pc_13f20 ], [ %tmp17, %dec_label_pc_13f00.preheader ]
  %v1_13f08 = inttoptr i32 %v0_13f08 to i8*
  %v2_13f08 = load i8, i8* %v1_13f08, align 1
  %v3_13f0b = inttoptr i32 %v2_13f0b to i8*
  store i8 %v2_13f08, i8* %v3_13f0b, align 1
  %v4_13f11 = ptrtoint i8* %stack_var_108.0 to i32
  %v1_13f152122 = sub i32 %tmp14, ptrtoint (i8** @global_var_1.820 to i32)
  %v12_13f18 = icmp eq i32 %v4_13f11, %v1_13f152122
  br i1 %v12_13f18, label %bb, label %dec_label_pc_13f20

bb:                                               ; preds = %dec_label_pc_13f00
  %v1_13f1a = call i32 @function_14265()
  br label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %bb, %dec_label_pc_13f00
  %v0_13f20 = phi i32 [ %v1_13f1a, %bb ], [ %v4_13f11, %dec_label_pc_13f00 ]
  %v1_13f20 = add i32 %v0_13f20, ptrtoint (i8** @global_var_1.820 to i32)
  %v4_13f23 = inttoptr i32 %v1_13f20 to i8*
  %v0_13f27 = load i32, i32* @esi, align 4
  %v1_13f27 = add i32 %v0_13f27, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_13f27, i32* @esi, align 4
  %v15_13f2a = icmp eq i32 %tmp16, %v1_13f20
  %v1_13f2e = icmp eq i1 %v15_13f2a, false
  br i1 %v1_13f2e, label %dec_label_pc_13f00, label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f20, %dec_label_pc_13ef0
  %v0_13f30 = phi i32 [ %arg2, %dec_label_pc_13ef0 ], [ %v1_13f27, %dec_label_pc_13f20 ]
  %stack_var_108.1 = phi i8* [ %tmp17, %dec_label_pc_13ef0 ], [ %v4_13f23, %dec_label_pc_13f20 ]
  %v1_13f30 = load i32, i32* @ebx, align 4
  %v12_13f30 = icmp eq i32 %v0_13f30, %v1_13f30
  br i1 %v12_13f30, label %bb19, label %dec_label_pc_13f34

bb19:                                             ; preds = %dec_label_pc_13f30
  %v2_13f32 = ptrtoint i8* %stack_var_108.1 to i32
  %v3_13f32 = call i32 @function_13f60(i32 %v2_13f32)
  %v1_13f3a.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %bb19, %dec_label_pc_13f30
  %v1_13f3a = phi i32 [ %v1_13f3a.pre, %bb19 ], [ %v1_13f30, %dec_label_pc_13f30 ]
  store i32 0, i32* @edx, align 4
  %v2_13f3a = sub i32 %arg1, %v1_13f3a
  %v12_13f3a = icmp eq i32 %v2_13f3a, 0
  store i32 %v2_13f3a, i32* @eax, align 4
  br i1 %v12_13f3a, label %bb20, label %dec_label_pc_13f3e

bb20:                                             ; preds = %dec_label_pc_13f34
  %v1_13f3c = call i32 @function_13f56()
  br label %dec_label_pc_13f3e

dec_label_pc_13f3e:                               ; preds = %bb20, %dec_label_pc_13f34
  %v4_13f49 = phi i32 [ %v1_13f3c, %bb20 ], [ %v2_13f3a, %dec_label_pc_13f34 ]
  ret i32 %v4_13f49

; uselistorder directives
  uselistorder i32 %v1_13f30, { 1, 0 }
  uselistorder i32 %v1_13f27, { 0, 2, 1 }
  uselistorder i32 %v1_13f20, { 0, 2, 1 }
  uselistorder i32 %v4_13f11, { 1, 0 }
  uselistorder i32 %v4_13ef0, { 1, 0 }
  uselistorder i8* %tmp17, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13f00, { 1, 0 }
}

define i32 @function_13f56() local_unnamed_addr {
dec_label_pc_13f56:
  %v1_13f5c = load i32, i32* @eax, align 4
  ret i32 %v1_13f5c
}

define i32 @function_13f60(i32 %arg1) local_unnamed_addr {
dec_label_pc_13f60:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_140 = alloca i32, align 4
  %stack_var_100 = alloca i32, align 4
  %v2_13f64 = ptrtoint i32* %stack_var_100 to i32
  %v2_13fb9 = ptrtoint i32* %stack_var_140 to i32
  %v6_13fc4 = call i32 @unknown_276c0(i32 %v2_13f64, i32 %v2_13fb9, i32 %tmp7, i32 %tmp11, i32 0)
  %v1_13fcd = inttoptr i32 %tmp to i32*
  %v2_13fcd = load i32, i32* %v1_13fcd, align 4
  store i32 %v2_13fcd, i32* @esi, align 4
  %v1_13fcf = add i32 %v2_13fcd, -4
  %v2_13fcf = inttoptr i32 %v1_13fcf to i32*
  %v3_13fcf = load i32, i32* %v2_13fcf, align 4
  %v2_13fd2 = icmp slt i32 %v3_13fcf, 0
  br i1 %v2_13fd2, label %bb, label %dec_label_pc_13fd6

bb:                                               ; preds = %dec_label_pc_13f60
  %v1_13fd4 = call i32 @function_13fe0()
  br label %dec_label_pc_13fd6

dec_label_pc_13fd6:                               ; preds = %bb, %dec_label_pc_13f60
  %v3_13fd6 = phi i32 [ %v1_13fd4, %bb ], [ %v3_13fcf, %dec_label_pc_13f60 ]
  ret i32 %v3_13fd6
}

define i32 @function_13fe0() local_unnamed_addr {
dec_label_pc_13fe0:
  %ecx.global-to-local = alloca i32, align 4
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %v0_13fe0 = load i32, i32* @esi, align 4
  %v1_13fe0 = add i32 %v0_13fe0, -12
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i32*
  %v3_13fe0 = load i32, i32* %v2_13fe0, align 4
  %v2_13fe7 = add i32 %v3_13fe0, %v0_13fe0
  store i32 %v2_13fe7, i32* %ecx.global-to-local, align 4
  %v12_13fe9 = icmp eq i32 %tmp21, %v2_13fe7
  br i1 %v12_13fe9, label %dec_label_pc_1405a, label %dec_label_pc_13fef

dec_label_pc_13fef:                               ; preds = %dec_label_pc_13fe0
  %v0_13fef = load i32, i32* @edi, align 4
  %v1_13fef = load i32, i32* @ebp, align 4
  %v12_13fef = icmp eq i32 %v0_13fef, %v1_13fef
  br i1 %v12_13fef, label %dec_label_pc_1405a, label %dec_label_pc_13ff7

dec_label_pc_13ff7:                               ; preds = %dec_label_pc_13fef
  br label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_14035, %dec_label_pc_13ff7
  %v0_14035 = phi i32 [ %v1_14035, %dec_label_pc_14035 ], [ %tmp21, %dec_label_pc_13ff7 ]
  %v0_14000 = phi i32 [ %v0_1403c, %dec_label_pc_14035 ], [ %v2_13fe7, %dec_label_pc_13ff7 ]
  %v12_14000 = icmp eq i32 %v0_14000, %v0_14035
  br i1 %v12_14000, label %dec_label_pc_14035, label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_14000
  %v2_14004 = load i8, i8* bitcast (i32* @ebp to i8*), align 4
  %v1_14008 = inttoptr i32 %v0_14035 to i8*
  %v2_14008 = load i8, i8* %v1_14008, align 1
  %v15_14008 = icmp eq i8 %v2_14008, %v2_14004
  %v1_1400a = icmp eq i1 %v15_14008, false
  br i1 %v1_1400a, label %dec_label_pc_14035, label %dec_label_pc_1400c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_14004
  %v0_1400c = load i32, i32* @ebp, align 4
  br label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_1402a.dec_label_pc_14014_crit_edge, %dec_label_pc_1400c
  %v0_1401a = phi i32 [ %v0_1401a.pre, %dec_label_pc_1402a.dec_label_pc_14014_crit_edge ], [ %v0_14000, %dec_label_pc_1400c ]
  %v0_14017 = phi i32 [ %v0_1402a, %dec_label_pc_1402a.dec_label_pc_14014_crit_edge ], [ %v0_1400c, %dec_label_pc_1400c ]
  %v0_14014 = phi i32 [ %v0_1402d, %dec_label_pc_1402a.dec_label_pc_14014_crit_edge ], [ %v0_14035, %dec_label_pc_1400c ]
  %v1_14014 = add i32 %v0_14014, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_14014, i32* @eax, align 4
  %v1_14017 = add i32 %v0_14017, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_14017, i32* @edx, align 4
  %v12_1401a = icmp eq i32 %v0_1401a, %v1_14014
  br i1 %v12_1401a, label %bb, label %dec_label_pc_14022

bb:                                               ; preds = %dec_label_pc_14014
  %v1_1401c = call i32 @function_143b8()
  store i32 %v1_1401c, i32* @eax, align 4
  %v0_14022.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_14022

dec_label_pc_14022:                               ; preds = %bb, %dec_label_pc_14014
  %v0_1402d10 = phi i32 [ %v1_1401c, %bb ], [ %v1_14014, %dec_label_pc_14014 ]
  %v0_14022 = phi i32 [ %v0_14022.pre, %bb ], [ %v1_14017, %dec_label_pc_14014 ]
  %v1_14022 = load i32, i32* @edi, align 4
  %v12_14022 = icmp eq i32 %v0_14022, %v1_14022
  br i1 %v12_14022, label %bb22, label %dec_label_pc_1402a

bb22:                                             ; preds = %dec_label_pc_14022
  %v1_14024 = call i32 @function_14240()
  %v0_1402a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_1402a

dec_label_pc_1402a:                               ; preds = %bb22, %dec_label_pc_14022
  %v0_1402d = phi i32 [ %v1_14024, %bb22 ], [ %v0_1402d10, %dec_label_pc_14022 ]
  %v0_1402a = phi i32 [ %v0_1402a.pre, %bb22 ], [ %v0_14022, %dec_label_pc_14022 ]
  %v1_1402a = inttoptr i32 %v0_1402a to i8*
  %v2_1402a = load i8, i8* %v1_1402a, align 1
  %v1_1402d = inttoptr i32 %v0_1402d to i8*
  %v2_1402d = load i8, i8* %v1_1402d, align 1
  %v15_1402d = icmp eq i8 %v2_1402d, %v2_1402a
  br i1 %v15_1402d, label %dec_label_pc_1402a.dec_label_pc_14014_crit_edge, label %dec_label_pc_14031

dec_label_pc_1402a.dec_label_pc_14014_crit_edge:  ; preds = %dec_label_pc_1402a
  %v0_1401a.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_14014

dec_label_pc_14031:                               ; preds = %dec_label_pc_1402a
  %v0_14038.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_14035

dec_label_pc_14035:                               ; preds = %dec_label_pc_14031, %dec_label_pc_14004, %dec_label_pc_14000
  %v0_1403c = phi i32 [ %v0_14038.pre, %dec_label_pc_14031 ], [ %v0_14000, %dec_label_pc_14004 ], [ %v0_14000, %dec_label_pc_14000 ]
  %v1_14035 = add i32 %v0_14035, ptrtoint (i8** @global_var_1.820 to i32)
  %v12_14038 = icmp eq i32 %v0_1403c, %v1_14035
  %v1_1403a = icmp eq i1 %v12_14038, false
  br i1 %v1_1403a, label %dec_label_pc_14000, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_14035
  %v0_1405a.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_1405a

dec_label_pc_1405a:                               ; preds = %dec_label_pc_1403c, %dec_label_pc_13fef, %dec_label_pc_13fe0
  %v0_1405a.pre = phi i32 [ %v0_1405a.pre.pre, %dec_label_pc_1403c ], [ %v0_13fe0, %dec_label_pc_13fef ], [ %v0_13fe0, %dec_label_pc_13fe0 ]
  %v0_14048 = phi i32 [ %v0_1403c, %dec_label_pc_1403c ], [ %v2_13fe7, %dec_label_pc_13fef ], [ %tmp21, %dec_label_pc_13fe0 ]
  %phitmp = add i32 %v0_1405a.pre, -4
  %phitmp16 = inttoptr i32 %phitmp to i32*
  %v3_1405a = load i32, i32* %phitmp16, align 4
  %v2_1405d = icmp slt i32 %v3_1405a, 0
  br i1 %v2_1405d, label %bb23, label %dec_label_pc_14061

bb23:                                             ; preds = %dec_label_pc_1405a
  %v1_1405f = call i32 @function_14073()
  br label %dec_label_pc_14061

dec_label_pc_14061:                               ; preds = %bb23, %dec_label_pc_1405a
  %v3_14065 = phi i32 [ %v1_1405f, %bb23 ], [ %v0_14048, %dec_label_pc_1405a ]
  ret i32 %v3_14065

; uselistorder directives
  uselistorder i32 %v0_1403c, { 1, 0, 2 }
  uselistorder i32 %v0_14022, { 1, 0 }
  uselistorder i32 %v1_14014, { 1, 0, 2 }
  uselistorder i32 %v0_14000, { 1, 2, 3, 0 }
  uselistorder i32 %v0_14035, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13fe7, { 1, 2, 0, 3 }
  uselistorder i32 %tmp21, { 1, 2, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 0, 2 }
}

define i32 @function_14073() local_unnamed_addr {
dec_label_pc_14073:
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_100 = alloca i32, align 4
  %stack_var_80 = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %v0_14073 = load i32, i32* @esi, align 4
  %v1_14073 = add i32 %v0_14073, -12
  %v2_14073 = inttoptr i32 %v1_14073 to i32*
  %v3_14073 = load i32, i32* %v2_14073, align 4
  %v0_14076 = load i32, i32* @ebx, align 4
  %v2_1407e = add i32 %v3_14073, %v0_14073
  %v2_14088 = ptrtoint i32* %stack_var_80 to i32
  %v2_14090 = ptrtoint i32* %stack_var_100 to i32
  %v6_1409f = call i32 @unknown_24650(i32 %v2_14088, i32 %v2_14090, i32 %tmp22, i32 %tmp24, i32 %v0_14076, i32 %v2_1407e)
  %v12_140b7 = icmp eq i32 %tmp12, %tmp13
  br i1 %v12_140b7, label %bb, label %dec_label_pc_140bf

bb:                                               ; preds = %dec_label_pc_14073
  %v2_140b9 = inttoptr i32 %tmp14 to i32*
  %v3_140b9 = call i32 @function_14378(i32* %v2_140b9)
  br label %dec_label_pc_140bf

dec_label_pc_140bf:                               ; preds = %bb, %dec_label_pc_14073
  %v1_140f4 = inttoptr i32 %tmp3 to i32*
  %v2_140f4 = load i32, i32* %v1_140f4, align 4
  store i32 %v2_140f4, i32* @eax, align 4
  %v1_140f6 = add i32 %v2_140f4, -4
  %v2_140f6 = inttoptr i32 %v1_140f6 to i32*
  %v3_140f6 = load i32, i32* %v2_140f6, align 4
  %v2_140f9 = icmp slt i32 %v3_140f6, 0
  br i1 %v2_140f9, label %bb26, label %dec_label_pc_140fd

bb26:                                             ; preds = %dec_label_pc_140bf
  %v5_140fb = call i32 @function_1410b(i32 %tmp10, i32 %tmp11, i32 %tmp4, i32 %tmp6)
  br label %dec_label_pc_140fd

dec_label_pc_140fd:                               ; preds = %bb26, %dec_label_pc_140bf
  %v3_140fd = phi i32 [ %v5_140fb, %bb26 ], [ %v2_140f4, %dec_label_pc_140bf ]
  ret i32 %v3_140fd
}

define i32 @function_1410b(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1410b:
  %ebx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_156 = alloca i32, align 4
  %stack_var_172 = alloca i32, align 4
  %v0_1410b = load i32, i32* @eax, align 4
  %v2_1410b = add i32 %v0_1410b, -12
  %v3_1410b = inttoptr i32 %v2_1410b to i32*
  %v4_1410b = load i32, i32* %v3_1410b, align 4
  %v5_1410b = add i32 %v4_1410b, %v0_1410b
  %v0_1410e = load i32, i32* @ebx, align 4
  store i32 %v0_1410e, i32* %stack_var_172, align 4
  %v2_14119 = ptrtoint i32* %stack_var_172 to i32
  %v2_14124 = ptrtoint i32* %stack_var_156 to i32
  %v0_14144 = load i32, i32* @edi, align 4
  store i32 %v0_14144, i32* %stack_var_156, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v7_14180 = call i32 @unknown_27a40(i32 %arg3, i32 %v5_1410b, i32 %v5_1410b, i32 %v2_14124, i32 %v2_14119, i32 0)
  %v1_14189 = icmp eq i32 %tmp4, 0
  br i1 %v1_14189, label %bb, label %dec_label_pc_1418d

bb:                                               ; preds = %dec_label_pc_1410b
  %v1_1418b = call i32 @function_141bc()
  store i32 %v1_1418b, i32* @eax, align 4
  br label %dec_label_pc_1418d

dec_label_pc_1418d:                               ; preds = %bb, %dec_label_pc_1410b
  %v1_14198 = add i32 %tmp3, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_14198, i32* @esi, align 4
  %tmp26 = icmp ugt i32 %v1_14198, %tmp2
  br i1 %tmp26, label %dec_label_pc_1419f, label %bb24

bb24:                                             ; preds = %dec_label_pc_1418d
  %v3_1419d = call i32 @function_141b4()
  %v0_1419f.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_1419f

dec_label_pc_1419f:                               ; preds = %dec_label_pc_1418d, %bb24
  %v0_1419f = phi i32 [ %v0_1419f.pre, %bb24 ], [ %tmp2, %dec_label_pc_1418d ]
  %v1_1419f = inttoptr i32 %v0_1419f to i32*
  %v2_1419f = load i32, i32* %v1_1419f, align 4
  %v1_141a1 = add i32 %v0_1419f, ptrtoint (i8** @global_var_4.814 to i32)
  store i32 %v1_141a1, i32* @ebx, align 4
  ret i32 %v2_1419f

; uselistorder directives
  uselistorder i32 %v0_1419f, { 1, 0 }
  uselistorder i32 %v5_1410b, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_1419f, { 1, 0 }
}

define i32 @function_141b4() local_unnamed_addr {
dec_label_pc_141b4:
  %v3_141b4 = load i32, i32* @eax, align 4
  ret i32 %v3_141b4
}

define i32 @function_141bc() local_unnamed_addr {
dec_label_pc_141bc:
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %v4_141c3 = icmp eq i32 %tmp10, ptrtoint ([2 x i8]* @2 to i32)
  %v1_141ca = icmp eq i1 %v4_141c3, false
  br i1 %v1_141ca, label %bb, label %dec_label_pc_141bc.dec_label_pc_141d0_crit_edge

dec_label_pc_141bc.dec_label_pc_141d0_crit_edge:  ; preds = %dec_label_pc_141bc
  %v0_141da.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_141d0

bb:                                               ; preds = %dec_label_pc_141bc
  %v2_141ca = call i32 @function_14373()
  br label %dec_label_pc_141d0

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141bc.dec_label_pc_141d0_crit_edge, %bb
  %v0_141da = phi i32 [ %v2_141ca, %bb ], [ %v0_141da.pre, %dec_label_pc_141bc.dec_label_pc_141d0_crit_edge ]
  ret i32 %v0_141da

; uselistorder directives
  uselistorder label %dec_label_pc_141d0, { 1, 0 }
}

define i32 @function_141e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_141e0:
  %eax.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v1_141eb8 = sub i32 ptrtoint (i8** @global_var_1.820 to i32), %tmp6
  %v2_141ee = sub i32 0, %arg1
  %v12_141ee = icmp eq i32 %v1_141eb8, %v2_141ee
  br i1 %v12_141ee, label %bb, label %dec_label_pc_141f6

bb:                                               ; preds = %dec_label_pc_141e0
  %v1_141f0 = call i32 @function_142c7()
  store i32 %v1_141f0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_141f6

dec_label_pc_141f6:                               ; preds = %bb, %dec_label_pc_141e0
  %v2_141ff = phi i32 [ %v1_141f0, %bb ], [ %arg1, %dec_label_pc_141e0 ]
  %v1_141f8 = icmp eq i32 %v2_141ff, 0
  br i1 %v1_141f8, label %dec_label_pc_14205, label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141f6
  %v2_141fc = load i8, i8* bitcast (i32* @esi to i8*), align 4
  %v3_141ff = inttoptr i32 %v2_141ff to i8*
  store i8 %v2_141fc, i8* %v3_141ff, align 1
  %v5_14208.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_14205

dec_label_pc_14205:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_141f6
  %v5_14208 = phi i32 [ %v5_14208.pre, %dec_label_pc_141fc ], [ 0, %dec_label_pc_141f6 ]
  ret i32 %v5_14208

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1420c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1420c:
  %esi.global-to-local = alloca i32, align 4
  %tmp9 = inttoptr i32 %arg2 to i8*
  %v2_14210 = load i8, i8* %tmp9, align 1
  %v2_14213 = load i32, i32* @esi, align 4
  %v3_14213 = inttoptr i32 %v2_14213 to i8*
  store i8 %v2_14210, i8* %v3_14213, align 1
  %v1_1421d11 = sub i32 ptrtoint (i8** @global_var_1.820 to i32), %arg3
  %v2_14220 = sub i32 0, %arg2
  %v12_14220 = icmp eq i32 %v1_1421d11, %v2_14220
  br i1 %v12_14220, label %bb, label %dec_label_pc_14224

bb:                                               ; preds = %dec_label_pc_1420c
  %v1_14222 = call i32 @function_14296()
  br label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %bb, %dec_label_pc_1420c
  %v0_14224 = phi i32 [ %v1_14222, %bb ], [ %arg2, %dec_label_pc_1420c ]
  %v0_1422b = load i32, i32* @esi, align 4
  %v1_1422b = add i32 %v0_1422b, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_1422b, i32* %esi.global-to-local, align 4
  %v16_1422e = icmp eq i32 %v1_1422b, %arg1
  %v1_14232 = icmp eq i1 %v16_1422e, false
  br i1 %v1_14232, label %bb10, label %dec_label_pc_14234

bb10:                                             ; preds = %dec_label_pc_14224
  %v1_14224 = add i32 %v0_14224, ptrtoint (i8** @global_var_1.820 to i32)
  %v4_14232 = call i32 @function_141e0(i32 %v1_14224)
  %v0_14234.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_14234

dec_label_pc_14234:                               ; preds = %bb10, %dec_label_pc_14224
  %v0_14234 = phi i32 [ %v0_14234.pre, %bb10 ], [ %v1_1422b, %dec_label_pc_14224 ]
  %v2_14238 = call i32 @function_13f60(i32 %v0_14234)
  ret i32 %v2_14238

; uselistorder directives
  uselistorder i32 %v1_1422b, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @function_14240() local_unnamed_addr {
dec_label_pc_14240:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_14248 = load i32, i32* @eax, align 4
  %v12_14248 = icmp eq i32 %v0_14248, %tmp4
  %v6_14257 = select i1 %v12_14248, i32 %tmp, i32 %tmp1
  store i32 %v6_14257, i32* @edx, align 4
  ret i32 %v0_14248

; uselistorder directives
  uselistorder i32 %v0_14248, { 1, 0 }
}

define i32 @function_14265() local_unnamed_addr {
dec_label_pc_14265:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_14270() local_unnamed_addr {
dec_label_pc_14270:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_14270 = load i32, i32* %ebx.global-to-local, align 4
  %v1_14270 = add i32 %v0_14270, -1921506236
  %v2_14270 = inttoptr i32 %v1_14270 to i32*
  %v3_14270 = load i32, i32* %v2_14270, align 4
  %v4_14270 = sub i32 %v3_14270, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_14270, i32* %v2_14270, align 4
  %v0_14276 = load i32, i32* %eax.global-to-local, align 4
  %v2_14277 = add i32 %v0_14276, zext (i8 ptrtoint (i8* @global_var_89.942 to i8) to i32)
  %v2_1427a = and i32 %v2_14277, zext (i8 ptrtoint (i32* @global_var_78.922 to i8) to i32)
  %v10_1427a = and i32 %v0_14276, -256
  %v11_1427a = or i32 %v2_1427a, %v10_1427a
  store i32 %v11_1427a, i32* %eax.global-to-local, align 4
  %v1_1427c = add i32 %v11_1427a, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_1427c = inttoptr i32 %v1_1427c to i32*
  %v3_1427c = load i32, i32* %v2_1427c, align 4
  store i32 %v3_1427c, i32* %eax.global-to-local, align 4
  ret i32 %v3_1427c

; uselistorder directives
  uselistorder i32 %v0_14276, { 1, 0 }
}

define i32 @function_14296() local_unnamed_addr {
dec_label_pc_14296:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  ret i32 %tmp1
}

define i32 @function_142a1() local_unnamed_addr {
dec_label_pc_142a1:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %v0_142a1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_142a1 = add i32 %v0_142a1, -1921506236
  %v2_142a1 = inttoptr i32 %v1_142a1 to i32*
  %v3_142a1 = load i32, i32* %v2_142a1, align 4
  %v4_142a1 = sub i32 %v3_142a1, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v4_142a1, i32* %v2_142a1, align 4
  %v0_142a7 = load i32, i32* %eax.global-to-local, align 4
  %v2_142a8 = add i32 %v0_142a7, zext (i8 ptrtoint (i8* @global_var_89.942 to i8) to i32)
  %v2_142ab = and i32 %v2_142a8, zext (i8 ptrtoint (i32* @global_var_78.922 to i8) to i32)
  %v10_142ab = and i32 %v0_142a7, -256
  %v11_142ab = or i32 %v2_142ab, %v10_142ab
  store i32 %v11_142ab, i32* %eax.global-to-local, align 4
  %v1_142ad = add i32 %v11_142ab, ptrtoint (i8** @global_var_4.814 to i32)
  %v2_142ad = inttoptr i32 %v1_142ad to i32*
  %v3_142ad = load i32, i32* %v2_142ad, align 4
  store i32 %v3_142ad, i32* %eax.global-to-local, align 4
  ret i32 %v3_142ad

; uselistorder directives
  uselistorder i32 %v0_142a7, { 1, 0 }
  uselistorder i8** @global_var_4.814, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_4.814 to i32), { 267, 266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 233, 234, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 4, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 1, 158, 157, 156, 155, 154, 153, 152, 150, 151, 149, 3, 2, 148, 5, 147, 146, 145, 144, 143, 142, 0, 141, 140, 139, 6, 138, 136, 137, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 7, 8, 102, 98, 100, 99, 97, 101, 91, 96, 95, 94, 93, 9, 92, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10 }
  uselistorder i8 -119, { 1, 2, 0 }
  uselistorder i32 zext (i8 ptrtoint (i8* @global_var_89.942 to i8) to i32), { 0, 1, 3, 2 }
}

define i32 @function_142c7() local_unnamed_addr {
dec_label_pc_142c7:
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v5_142d0 = sub i32 %tmp4, %tmp3
  %v2_142d4 = sdiv i32 %v5_142d0, 4
  %v5_142d9 = sub i32 %tmp2, %v2_142d4
  %tmp6 = or i32 %v5_142d9, 1
  %tmp7 = icmp eq i32 %tmp6, 1
  br i1 %tmp7, label %bb, label %dec_label_pc_142e2

bb:                                               ; preds = %dec_label_pc_142c7
  %v3_142e0 = call i32 @function_1432f()
  br label %dec_label_pc_142e2

dec_label_pc_142e2:                               ; preds = %bb, %dec_label_pc_142c7
  %v2_142e2 = phi i32 [ %v3_142e0, %bb ], [ %v5_142d9, %dec_label_pc_142c7 ]
  ret i32 %v2_142e2

; uselistorder directives
  uselistorder i32 %v5_142d9, { 1, 0 }
  uselistorder i32 4, { 2, 48, 3, 4, 52, 5, 6, 53, 54, 55, 56, 57, 58, 60, 61, 59, 62, 63, 7, 8, 9, 10, 11, 12, 49, 50, 13, 15, 14, 16, 51, 47, 64, 17, 18, 19, 65, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 66, 32, 33, 34, 35, 36, 37, 38, 67, 39, 40, 41, 42, 43, 44, 45, 46, 0, 74, 75, 76, 1, 77, 78, 79, 68, 69, 70, 71, 72, 73 }
}

define i32 @function_14310(i32 %arg1) local_unnamed_addr {
dec_label_pc_14310:
  %eax.global-to-local = alloca i32, align 4
  %v0_14310 = load i32, i32* @eax, align 4
  %v1_14310 = add i32 %v0_14310, ptrtoint (i8** @global_var_1.820 to i32)
  %v11_14310 = trunc i32 %v1_14310 to i8
  %v2_14311 = add i8 %v11_14310, -115
  %v16_14311 = zext i8 %v2_14311 to i32
  %v18_14311 = and i32 %v1_14310, -256
  %v19_14311 = or i32 %v16_14311, %v18_14311
  store i32 %v19_14311, i32* %eax.global-to-local, align 4
  %v2_14314 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v5_14314 = add i8 %v2_14311, %v2_14314
  %v20_14314 = load i32, i32* @edx, align 4
  %v21_14314 = inttoptr i32 %v20_14314 to i8*
  store i8 %v5_14314, i8* %v21_14314, align 1
  %v0_14316 = load i32, i32* %eax.global-to-local, align 4
  %v1_14316 = inttoptr i32 %v0_14316 to i8*
  %v2_14316 = load i8, i8* %v1_14316, align 1
  %v4_14316 = trunc i32 %v0_14316 to i8
  %v5_14316 = add i8 %v2_14316, %v4_14316
  store i8 %v5_14316, i8* %v1_14316, align 1
  %v0_14318 = load i32, i32* %eax.global-to-local, align 4
  %v0_1431f = load i32, i32* @edx, align 4
  %v3_1432a = call i32 @function_1420c(i32 %v0_14318, i32 %v0_14318, i32 %v0_1431f)
  store i32 %v3_1432a, i32* %eax.global-to-local, align 4
  ret i32 %v3_1432a

; uselistorder directives
  uselistorder i8 -115, { 2, 0, 1 }
}

define i32 @function_1432f() local_unnamed_addr {
dec_label_pc_1432f:
  %stack_var_100 = alloca i32, align 4
  %v2_1432f = ptrtoint i32* %stack_var_100 to i32
  %v4_14346 = call i32 @unknown_244b0(i32 %v2_1432f, i32 ptrtoint (i8** @global_var_1.820 to i32), i32 0)
  ret i32 %v4_14346
}

define i32 @function_14354() local_unnamed_addr {
dec_label_pc_14354:
  %v0_14354 = load i32, i32* @esi, align 4
  %v1_14358 = call i32 @function_13ee2(i32 %v0_14354)
  ret i32 %v1_14358
}

define i32 @function_1435e() local_unnamed_addr {
dec_label_pc_1435e:
  %eax.global-to-local = alloca i32, align 4
  %v0_1435e = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_1435e
}

define i32 @function_14360(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14360:
  %v0_14361 = load i32, i32* @eax, align 4
  %v11_14361 = and i32 %v0_14361, or (i32 zext (i8 ptrtoint (i32* @global_var_64.837 to i8) to i32), i32 -256)
  %v1_14366 = call i32 @unknown_20dd0(i32 %v11_14361)
  ret i32 %v1_14366

; uselistorder directives
  uselistorder i32 -256, { 0, 74, 9, 10, 1, 75, 40, 41, 18, 19, 20, 21, 32, 22, 23, 2, 24, 25, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 26, 27, 28, 29, 30, 31, 73, 5, 6, 33, 11, 12, 13, 34, 35, 36, 17, 37, 38, 39, 42, 7, 43, 44, 3, 45, 46, 4, 47, 48, 49, 15, 16, 8, 76, 14 }
}

define i32 @function_14373() local_unnamed_addr {
dec_label_pc_14373:
  %v0_14373 = load i32, i32* @eax, align 4
  ret i32 %v0_14373
}

define i32 @function_14378(i32* %arg1) local_unnamed_addr {
dec_label_pc_14378:
  %tmp4 = ptrtoint i32* %arg1 to i32
  store i32 %tmp4, i32* @ebx, align 4
  %v2_1437c = load i32, i32* %arg1, align 4
  store i32 %v2_1437c, i32* @eax, align 4
  %v1_1437e = add i32 %v2_1437c, -4
  %v2_1437e = inttoptr i32 %v1_1437e to i32*
  %v3_1437e = load i32, i32* %v2_1437e, align 4
  store i32 %v3_1437e, i32* @edi, align 4
  %v2_14381 = icmp slt i32 %v3_1437e, 0
  br i1 %v2_14381, label %bb, label %dec_label_pc_14385

bb:                                               ; preds = %dec_label_pc_14378
  %v1_14383 = call i32 @function_1438f()
  br label %dec_label_pc_14385

dec_label_pc_14385:                               ; preds = %bb, %dec_label_pc_14378
  %v3_14385 = phi i32 [ %v1_14383, %bb ], [ %v2_1437c, %dec_label_pc_14378 ]
  ret i32 %v3_14385

; uselistorder directives
  uselistorder i32 -4, { 19, 20, 2, 21, 9, 6, 7, 8, 0, 3, 4, 10, 22, 23, 11, 12, 13, 14, 15, 5, 16, 1, 17, 18 }
}

define i32 @function_1438f() local_unnamed_addr {
dec_label_pc_1438f:
  %v0_14393 = load i32, i32* @eax, align 4
  %v2_14393 = add i32 %v0_14393, -12
  %v3_14393 = inttoptr i32 %v2_14393 to i32*
  %v4_14393 = load i32, i32* %v3_14393, align 4
  %v5_14393 = add i32 %v4_14393, %v0_14393
  ret i32 %v5_14393

; uselistorder directives
  uselistorder i32 -12, { 25, 26, 27, 28, 13, 14, 0, 15, 16, 17, 1, 18, 2, 3, 4, 5, 19, 20, 6, 7, 21, 8, 9, 10, 22, 11, 12, 23, 24, 29, 30, 31 }
}

define i32 @function_143ae() local_unnamed_addr {
dec_label_pc_143ae:
  %eax.global-to-local = alloca i32, align 4
  %v0_143b1 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_143b1
}

define i32 @function_143b8() local_unnamed_addr {
dec_label_pc_143b8:
  %v0_143c4 = load i32, i32* @eax, align 4
  ret i32 %v0_143c4
}

define i32 @_ZN5boost9algorithm11replace_allISsA3_cSsEEvRT_RKT0_RKT1_(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
dec_label_pc_143d0:
  ret i32 0
}

define i32 @function_14420(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14420:
  %v0_14420 = load i32, i32* @eax, align 4
  %v11_14420 = and i32 %v0_14420, -24
  ret i32 %v11_14420

; uselistorder directives
  uselistorder i32 -24, { 0, 6, 1, 2, 3, 4, 5 }
}

define i32 @function_14430(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14430:
  %v2_14430 = load i8, i8* bitcast (i32* @eax to i8*), align 4
  %v3_14430 = load i32, i32* @eax, align 4
  %v4_14430 = trunc i32 %v3_14430 to i8
  %v5_14430 = add i8 %v4_14430, %v2_14430
  %v21_14430 = inttoptr i32 %v3_14430 to i8*
  store i8 %v5_14430, i8* %v21_14430, align 1
  %v0_14432 = load i32, i32* @ecx, align 4
  %v1_14432 = add i32 %v0_14432, -1993071548
  %v2_14432 = inttoptr i32 %v1_14432 to i8*
  %v3_14432 = load i8, i8* %v2_14432, align 1
  %v5_14432 = trunc i32 %v0_14432 to i8
  %v6_14432 = add i8 %v3_14432, %v5_14432
  store i8 %v6_14432, i8* %v2_14432, align 1
  %v0_14438 = load i32, i32* @eax, align 4
  %v11_14438 = xor i32 %v0_14438, zext (i8 ptrtoint (i32* @global_var_24.839 to i8) to i32)
  ret i32 %v11_14438

; uselistorder directives
  uselistorder i8 ptrtoint (i32* @global_var_24.839 to i8), { 1, 0 }
}

define i32 @function_1445f() local_unnamed_addr {
dec_label_pc_1445f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define x86_fp80 @function_14464() local_unnamed_addr {
dec_label_pc_14464:
  %st0.global-to-local = alloca x86_fp80, align 4
  %v3_14464 = load float, float* bitcast (i32* @ecx to float*), align 4
  %v4_14464 = fpext float %v3_14464 to x86_fp80
  %v5_14464 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v6_14464 = fdiv x86_fp80 %v5_14464, %v4_14464
  store x86_fp80 %v6_14464, x86_fp80* %st0.global-to-local, align 4
  ret x86_fp80 %v6_14464
}

define i32 @function_14470() local_unnamed_addr {
dec_label_pc_14470:
  %v0_1447c = load i32, i32* @ebx, align 4
  store i32 %v0_1447c, i32* @ecx, align 4
  %v4_14480 = load i32, i32* @eax, align 4
  ret i32 %v4_14480
}

define i32 @function_14484() local_unnamed_addr {
dec_label_pc_14484:
  %v0_14487 = load i32, i32* @ecx, align 4
  %v1_14487 = add i32 %v0_14487, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_14487, i32* @ecx, align 4
  %v0_1448e = load i32, i32* @eax, align 4
  ret i32 %v0_1448e
}

define i32 @function_14490(i32 %arg1) local_unnamed_addr {
dec_label_pc_14490:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %v0_14490 = load i1, i1* @zf, align 1
  br i1 %v0_14490, label %dec_label_pc_144f0, label %dec_label_pc_14492

dec_label_pc_14492:                               ; preds = %dec_label_pc_14490
  %v2_14492 = load i8, i8* bitcast (i32* @ecx to i8*), align 4
  %v2_14495 = load i8, i8* bitcast (i32* @edx to i8*), align 4
  %v15_14495 = icmp eq i8 %v2_14495, %v2_14492
  br i1 %v15_14495, label %bb, label %dec_label_pc_14499

bb:                                               ; preds = %dec_label_pc_14492
  %v1_14497 = call i32 @function_14484()
  store i32 %v1_14497, i32* @eax, align 4
  br label %dec_label_pc_14499

dec_label_pc_14499:                               ; preds = %bb, %dec_label_pc_14492
  store i32 %arg1, i32* @ebx, align 4
  %v0_144a0 = load i32, i32* @ebp, align 4
  %v1_144a0 = add i32 %v0_144a0, ptrtoint (i8** @global_var_1.820 to i32)
  store i32 %v1_144a0, i32* @ebp, align 4
  %v0_144a3 = load i32, i32* @edi, align 4
  %v12_144a3 = icmp eq i32 %v0_144a3, %v1_144a0
  %v1_144a5 = icmp eq i1 %v12_144a3, false
  br i1 %v1_144a5, label %bb22, label %dec_label_pc_144a7

bb22:                                             ; preds = %dec_label_pc_14499
  %v2_144a5 = call i32 @function_14470()
  store i32 %v2_144a5, i32* @eax, align 4
  br label %dec_label_pc_144a7

dec_label_pc_144a7:                               ; preds = %dec_label_pc_14508, %dec_label_pc_144f0, %bb22, %dec_label_pc_14499
  %v3_144ab = xor i32 %tmp20, ptrtoint ([2 x i8]* @2 to i32)
  %v4_144ab = icmp eq i32 %v3_144ab, 0
  store i32 %v3_144ab, i32* @ebx, align 4
  %v1_144b2 = icmp eq i1 %v4_144ab, false
  br i1 %v1_144b2, label %dec_label_pc_14549, label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144a7
  %v0_144bf = load i32, i32* @eax, align 4
  ret i32 %v0_144bf

dec_label_pc_144f0:                               ; preds = %dec_label_pc_14490
  %v0_144f4 = load i32, i32* @eax, align 4
  %v5_144fc = add i32 %tmp13, %tmp11
  store i32 %v5_144fc, i32* @eax, align 4
  %v0_14500 = load i32, i32* @ebp, align 4
  %v1_14500 = load i32, i32* @edx, align 4
  %v12_14500 = icmp eq i32 %v0_14500, %v1_14500
  br i1 %v12_14500, label %dec_label_pc_144a7, label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_144f0
  %v0_14530 = load i32, i32* @esi, align 4
  %v9_1453f = call i32 @unknown_28180(i32 %v0_14530, i32 %arg1, i32 %v0_144f4, i32 %tmp1, i32 %tmp13, i32 %v5_144fc, i32 %v1_14500, i32 %tmp13, i32 %v5_144fc)
  store i32 %v9_1453f, i32* @eax, align 4
  br label %dec_label_pc_144a7

dec_label_pc_14549:                               ; preds = %dec_label_pc_144a7
  %v0_14544 = load i32, i32* @eax, align 4
  ret i32 %v0_14544

; uselistorder directives
  uselistorder i32 %v1_14500, { 1, 0 }
  uselistorder i32 %v5_144fc, { 1, 0, 2 }
  uselistorder i32 %tmp13, { 2, 1, 0 }
  uselistorder i32* @esi, { 38, 91, 153, 154, 146, 147, 0, 151, 152, 148, 149, 150, 92, 49, 50, 3, 51, 52, 53, 4, 28, 101, 18, 102, 79, 80, 81, 103, 104, 105, 106, 107, 108, 16, 29, 30, 82, 83, 84, 85, 86, 54, 55, 168, 19, 56, 57, 58, 20, 59, 21, 22, 60, 5, 61, 6, 62, 63, 66, 67, 64, 65, 68, 69, 70, 71, 72, 23, 73, 74, 7, 75, 76, 77, 1, 78, 24, 94, 25, 87, 8, 9, 17, 10, 88, 89, 26, 90, 93, 95, 96, 97, 98, 31, 99, 32, 100, 110, 111, 112, 109, 113, 114, 115, 33, 34, 116, 117, 118, 119, 156, 157, 158, 159, 160, 161, 162, 163, 164, 120, 121, 122, 123, 124, 125, 126, 27, 127, 128, 11, 129, 130, 131, 2, 132, 35, 36, 133, 37, 134, 135, 136, 171, 12, 172, 173, 174, 13, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 189, 190, 191, 192, 14, 193, 194, 195, 206, 207, 208, 209, 39, 40, 41, 42, 165, 15, 166, 167, 169, 170, 183, 184, 43, 44, 45, 46, 47, 48, 188, 196, 197, 198, 199, 210, 211, 200, 201, 202, 203, 204, 205 }
  uselistorder i32 ptrtoint ([2 x i8]* @2 to i32), { 82, 0, 83, 1, 84, 2, 85, 86, 35, 34, 3, 36, 4, 87, 37, 88, 38, 89, 90, 91, 92, 5, 93, 39, 40, 94, 95, 6, 96, 97, 98, 41, 99, 100, 42, 101, 43, 102, 103, 7, 104, 105, 106, 44, 107, 45, 108, 109, 110, 8, 111, 46, 47, 112, 48, 113, 114, 9, 49, 115, 116, 10, 117, 11, 118, 119, 120, 12, 13, 14, 121, 50, 15, 51, 16, 52, 122, 17, 123, 124, 54, 53, 125, 55, 126, 127, 56, 128, 57, 129, 130, 131, 132, 58, 133, 134, 135, 18, 59, 136, 19, 20, 21, 60, 22, 61, 23, 137, 138, 139, 24, 62, 140, 141, 63, 142, 64, 143, 25, 65, 26, 27, 28, 66, 67, 144, 68, 69, 71, 70, 72, 73, 74, 75, 76, 77, 78, 29, 30, 31, 145, 32, 146, 147, 148, 33, 80, 81, 149, 150, 151, 79 }
  uselistorder i32* @edi, { 37, 149, 150, 151, 152, 39, 40, 41, 42, 43, 97, 98, 99, 74, 75, 76, 77, 78, 44, 101, 100, 21, 79, 80, 81, 1, 45, 46, 47, 48, 49, 50, 51, 52, 15, 54, 55, 56, 57, 58, 59, 60, 53, 0, 61, 22, 23, 16, 17, 62, 24, 2, 63, 64, 65, 66, 67, 3, 68, 69, 70, 71, 72, 73, 30, 82, 4, 83, 84, 85, 86, 5, 87, 88, 89, 90, 91, 92, 93, 25, 27, 95, 26, 28, 94, 96, 102, 104, 105, 6, 106, 103, 107, 108, 109, 110, 111, 112, 154, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 153, 123, 124, 125, 126, 127, 128, 129, 130, 131, 7, 32, 29, 31, 33, 35, 133, 34, 36, 132, 134, 135, 136, 137, 18, 138, 8, 139, 19, 140, 157, 158, 159, 169, 170, 171, 20, 142, 143, 141, 9, 144, 145, 146, 147, 148, 174, 10, 175, 11, 176, 177, 178, 12, 179, 180, 13, 181, 190, 191, 192, 193, 14, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 38, 172, 173, 182, 183, 184, 185, 186, 187, 188, 189 }
  uselistorder i8** @global_var_1.820, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_1.820 to i32), { 177, 176, 11, 175, 174, 173, 171, 172, 0, 1, 168, 170, 169, 167, 166, 2, 164, 165, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 151, 152, 153, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 129, 130, 131, 128, 127, 12, 13, 126, 125, 124, 122, 123, 3, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 7, 110, 109, 108, 107, 14, 106, 105, 104, 103, 102, 101, 100, 99, 15, 98, 97, 96, 95, 16, 17, 94, 93, 92, 91, 4, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 5, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 6, 35, 34, 33, 32, 31, 18, 30, 29, 28, 27, 26, 8, 25, 9, 10, 24, 23, 22, 21, 20, 19 }
  uselistorder i32* @ebp, { 27, 28, 29, 99, 19, 100, 68, 30, 31, 32, 33, 0, 34, 35, 81, 23, 54, 82, 52, 55, 36, 83, 84, 24, 25, 53, 37, 38, 39, 40, 1, 2, 3, 41, 42, 4, 43, 44, 45, 46, 47, 48, 5, 49, 50, 6, 51, 7, 20, 8, 21, 56, 57, 58, 59, 60, 61, 62, 63, 9, 10, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 11, 78, 79, 80, 22, 12, 85, 86, 101, 87, 13, 88, 102, 14, 15, 89, 90, 16, 91, 26, 92, 17, 93, 94, 95, 96, 105, 97, 98, 18, 107, 108, 109, 110, 111, 112, 103, 104, 106 }
  uselistorder i32* @ebx, { 50, 51, 49, 191, 192, 193, 194, 3, 195, 133, 31, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 4, 5, 74, 137, 138, 139, 140, 141, 142, 143, 104, 105, 106, 107, 108, 109, 110, 111, 112, 75, 76, 77, 144, 145, 146, 147, 148, 149, 113, 114, 115, 116, 117, 118, 78, 0, 79, 80, 208, 57, 58, 81, 82, 83, 84, 85, 86, 87, 6, 88, 89, 90, 91, 92, 93, 8, 9, 7, 94, 10, 95, 96, 97, 98, 99, 100, 101, 102, 1, 103, 32, 39, 40, 41, 33, 11, 42, 43, 44, 119, 120, 34, 121, 122, 123, 124, 125, 12, 13, 126, 127, 14, 128, 129, 15, 130, 16, 131, 17, 35, 132, 134, 135, 136, 246, 247, 248, 249, 250, 251, 150, 151, 19, 152, 18, 20, 153, 258, 259, 260, 197, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 2, 175, 21, 45, 46, 47, 177, 176, 22, 48, 178, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 23, 190, 24, 196, 25, 252, 253, 254, 198, 199, 36, 26, 27, 28, 200, 266, 267, 268, 52, 269, 270, 271, 272, 273, 274, 201, 202, 29, 203, 275, 276, 277, 53, 54, 55, 56, 37, 38, 205, 206, 204, 30, 207, 209, 210, 59, 211, 212, 213, 242, 243, 244, 245, 60, 61, 62, 255, 256, 257, 261, 299, 300, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 262, 263, 264, 265 }
  uselistorder i32* @edx, { 17, 91, 92, 7, 88, 0, 1, 90, 89, 9, 66, 37, 38, 39, 24, 67, 10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 2, 34, 35, 3, 16, 36, 4, 11, 12, 13, 14, 58, 40, 41, 42, 43, 44, 45, 46, 5, 47, 48, 49, 50, 51, 6, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 15, 64, 8, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 95, 96, 97, 77, 78, 98, 99, 100, 79, 80, 81, 82, 84, 85, 83, 86, 87, 18, 19, 93, 94, 20, 21, 22, 23, 101 }
  uselistorder i32* @ecx, { 15, 16, 17, 9, 18, 51, 52, 34, 54, 31, 32, 33, 22, 57, 55, 56, 1, 23, 24, 25, 26, 27, 72, 21, 12, 28, 29, 30, 35, 36, 37, 2, 38, 39, 40, 41, 42, 43, 44, 45, 3, 47, 48, 49, 46, 50, 11, 53, 58, 70, 59, 60, 61, 62, 63, 4, 5, 71, 64, 0, 6, 65, 66, 67, 13, 14, 68, 76, 77, 78, 79, 10, 80, 81, 82, 83, 69, 84, 85, 86, 87, 88, 7, 8, 89, 19, 20, 73, 74, 75 }
  uselistorder i1 false, { 87, 88, 228, 224, 226, 227, 225, 172, 18, 26, 27, 28, 120, 7, 121, 185, 122, 123, 124, 125, 8, 126, 9, 29, 127, 128, 129, 130, 131, 10, 132, 11, 133, 134, 100, 30, 32, 33, 31, 34, 135, 136, 137, 35, 36, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 37, 38, 39, 0, 40, 2, 41, 1, 42, 43, 44, 45, 19, 157, 158, 20, 159, 160, 21, 161, 162, 23, 163, 22, 164, 165, 24, 166, 167, 168, 25, 169, 170, 46, 47, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 48, 183, 184, 49, 263, 186, 187, 188, 50, 95, 51, 52, 53, 54, 189, 190, 191, 230, 192, 193, 194, 195, 55, 56, 57, 58, 59, 60, 196, 197, 61, 62, 15, 63, 64, 65, 66, 67, 198, 199, 200, 201, 202, 68, 69, 70, 203, 204, 16, 205, 206, 207, 208, 209, 17, 210, 71, 72, 211, 212, 213, 214, 73, 250, 12, 251, 252, 253, 74, 75, 279, 3, 280, 76, 254, 5, 255, 256, 4, 257, 77, 78, 281, 6, 282, 79, 80, 258, 13, 259, 260, 261, 81, 82, 215, 216, 217, 218, 219, 220, 221, 222, 223, 83, 84, 85, 229, 264, 265, 266, 267, 271, 268, 269, 270, 272, 273, 274, 275, 276, 231, 232, 86, 89, 283, 284, 285, 286, 90, 91, 233, 234, 287, 92, 93, 94, 235, 236, 237, 96, 97, 98, 238, 239, 240, 99, 241, 101, 242, 243, 102, 244, 14, 103, 104, 245, 246, 247, 105, 248, 106, 107, 108, 109, 110, 249, 111, 112, 262, 113, 288, 289, 114, 115, 277, 116, 117, 118, 119, 278, 290, 291, 292, 293 }
  uselistorder i1* @zf, { 3, 6, 0, 7, 1, 4, 5, 2 }
  uselistorder i32 ()* @__decompiler_undefined_function_0, { 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0, 1, 2, 68, 69, 70, 71, 72, 73, 3, 74, 75, 76, 4, 5, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 6, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 7, 155, 156, 8, 9, 157, 158, 159, 10, 160, 161, 162, 11, 12, 163, 164, 165, 166, 167, 168, 169, 170, 13, 14, 15, 171 }
}

define i32 @_GLOBAL__sub_I_mapAlerts() local_unnamed_addr {
dec_label_pc_14550:
  ret i32 0
}

define i32 @function_14594() local_unnamed_addr {
dec_label_pc_14594:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14598() local_unnamed_addr {
dec_label_pc_14598:
  %eax.global-to-local = alloca i32, align 4
  %v0_14598 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_14598
}

define i32 @function_145a2() local_unnamed_addr {
dec_label_pc_145a2:
  %eax.global-to-local = alloca i32, align 4
  %v0_145a2 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_145a2
}

define i32 @function_14669() local_unnamed_addr {
dec_label_pc_14669:
  %v0_14669 = call i32 @function_14594()
  ret i32 %v0_14669
}

define i32 @function_1466e() local_unnamed_addr {
dec_label_pc_1466e:
  %eax.global-to-local = alloca i32, align 4
  %tmp96 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %tmp96

; uselistorder directives
  uselistorder i32 1, { 778, 471, 472, 217, 473, 474, 813, 405, 0, 1, 475, 476, 477, 478, 404, 403, 815, 814, 402, 817, 816, 773, 819, 818, 820, 479, 480, 823, 822, 821, 779, 941, 26, 20, 23, 19, 24, 22, 21, 25, 27, 957, 789, 824, 28, 29, 799, 826, 825, 754, 752, 753, 827, 30, 790, 791, 792, 793, 755, 794, 834, 833, 832, 831, 830, 829, 828, 390, 391, 389, 835, 760, 762, 761, 840, 839, 838, 837, 836, 841, 763, 800, 854, 853, 852, 851, 850, 849, 848, 847, 846, 845, 844, 843, 842, 33, 34, 31, 32, 35, 958, 37, 40, 36, 41, 39, 38, 42, 410, 219, 220, 218, 795, 481, 796, 803, 44, 47, 43, 48, 46, 45, 49, 50, 482, 483, 484, 485, 2, 3, 856, 855, 411, 857, 339, 486, 487, 858, 861, 860, 859, 51, 54, 53, 52, 55, 862, 488, 221, 223, 222, 756, 386, 385, 384, 863, 502, 489, 490, 491, 492, 493, 494, 496, 495, 497, 516, 498, 224, 225, 499, 500, 864, 501, 865, 226, 227, 57, 56, 503, 866, 504, 505, 506, 507, 509, 508, 510, 513, 511, 514, 512, 515, 942, 229, 228, 517, 518, 867, 519, 520, 868, 521, 59, 58, 522, 523, 526, 527, 525, 524, 528, 959, 61, 60, 62, 428, 960, 804, 70, 64, 67, 63, 68, 66, 65, 69, 531, 532, 961, 71, 73, 72, 76, 75, 74, 77, 533, 534, 535, 79, 78, 536, 4, 5, 758, 757, 538, 537, 539, 962, 80, 759, 387, 963, 81, 540, 541, 870, 869, 231, 230, 542, 543, 943, 233, 234, 232, 235, 545, 544, 236, 237, 238, 547, 550, 546, 551, 549, 548, 552, 553, 555, 554, 944, 82, 83, 84, 557, 556, 558, 559, 239, 6, 872, 871, 764, 7, 240, 560, 8, 9, 10, 388, 11, 808, 561, 564, 563, 562, 565, 568, 567, 566, 569, 570, 13, 12, 873, 86, 85, 87, 14, 15, 874, 89, 92, 88, 93, 91, 90, 94, 572, 571, 242, 241, 243, 244, 245, 573, 809, 875, 425, 96, 95, 97, 408, 407, 409, 434, 433, 435, 436, 876, 431, 430, 429, 432, 246, 877, 878, 574, 575, 247, 248, 576, 577, 879, 578, 579, 580, 581, 583, 582, 584, 585, 99, 98, 101, 100, 424, 812, 885, 884, 883, 882, 881, 880, 103, 102, 104, 586, 886, 392, 105, 587, 588, 589, 251, 254, 250, 255, 253, 252, 249, 590, 591, 592, 440, 593, 887, 889, 888, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 603, 606, 604, 607, 945, 259, 258, 257, 256, 106, 608, 609, 610, 611, 612, 613, 615, 614, 890, 891, 107, 109, 110, 108, 111, 616, 617, 892, 801, 895, 894, 893, 112, 115, 114, 113, 260, 261, 802, 898, 897, 896, 118, 117, 116, 119, 120, 121, 618, 619, 263, 266, 262, 267, 265, 264, 268, 269, 16, 17, 123, 126, 122, 127, 125, 124, 128, 620, 899, 271, 274, 270, 275, 273, 272, 276, 277, 393, 394, 964, 129, 131, 130, 132, 621, 622, 623, 624, 625, 278, 279, 626, 627, 628, 900, 629, 901, 902, 903, 904, 905, 280, 281, 133, 797, 805, 135, 138, 134, 139, 137, 136, 140, 798, 806, 142, 145, 141, 146, 144, 143, 147, 634, 635, 282, 283, 908, 907, 906, 284, 909, 910, 636, 637, 285, 286, 911, 765, 639, 638, 640, 641, 642, 643, 644, 287, 288, 645, 291, 292, 290, 289, 646, 912, 913, 775, 295, 294, 293, 810, 647, 298, 296, 299, 297, 649, 650, 648, 651, 652, 653, 459, 460, 458, 302, 301, 300, 656, 655, 654, 657, 148, 149, 658, 659, 660, 661, 662, 304, 306, 303, 307, 305, 308, 438, 439, 437, 663, 664, 946, 150, 152, 151, 153, 914, 915, 776, 311, 310, 309, 811, 313, 312, 314, 315, 316, 916, 442, 441, 443, 318, 317, 154, 395, 665, 155, 156, 157, 917, 420, 159, 158, 160, 161, 319, 320, 321, 322, 323, 324, 666, 422, 421, 423, 777, 416, 414, 417, 415, 164, 162, 163, 325, 326, 327, 667, 668, 669, 670, 671, 672, 673, 328, 329, 330, 332, 331, 166, 165, 167, 674, 675, 947, 168, 169, 676, 333, 334, 677, 948, 949, 678, 335, 679, 680, 681, 170, 172, 175, 173, 171, 176, 174, 682, 683, 684, 685, 337, 336, 338, 920, 919, 918, 686, 687, 688, 689, 427, 690, 691, 177, 178, 179, 692, 693, 343, 341, 340, 342, 694, 695, 696, 697, 452, 698, 699, 180, 181, 182, 700, 466, 465, 467, 183, 780, 412, 444, 445, 701, 344, 345, 346, 347, 787, 348, 349, 702, 703, 704, 705, 706, 184, 707, 446, 18, 185, 470, 187, 186, 188, 190, 189, 192, 191, 193, 195, 194, 197, 196, 199, 198, 200, 202, 201, 203, 350, 351, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 708, 214, 447, 352, 353, 354, 709, 710, 711, 712, 449, 448, 450, 355, 357, 356, 358, 359, 361, 360, 362, 364, 363, 366, 365, 367, 368, 369, 713, 215, 216, 714, 715, 921, 922, 716, 717, 718, 926, 925, 924, 923, 719, 781, 782, 934, 933, 932, 931, 930, 929, 928, 927, 720, 721, 722, 723, 935, 631, 630, 633, 632, 724, 725, 726, 426, 727, 728, 729, 406, 730, 731, 732, 733, 734, 937, 807, 936, 736, 735, 737, 370, 371, 456, 457, 738, 739, 419, 418, 740, 453, 454, 469, 372, 373, 741, 468, 398, 396, 397, 766, 950, 768, 767, 769, 770, 771, 462, 461, 464, 463, 772, 400, 399, 401, 951, 952, 953, 954, 955, 956, 374, 376, 375, 377, 938, 378, 379, 939, 742, 743, 786, 940, 381, 380, 382, 413, 744, 383, 745, 746, 747, 783, 784, 785, 749, 748, 751, 750, 451, 774, 530, 529, 455, 788 }
}

define i32 @function_14980() local_unnamed_addr {
dec_label_pc_14980:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_14ec0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ec0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @_ZTSN5boost6detail17sp_counted_impl_pINS_8signals26detail12signal2_implIvRK7uint25610ChangeTypeNS2_19optional_last_valueIvEEiSt4lessIiENS_8functionIFvS7_S8_EEENSD_IFvRKNS2_10connectionES7_S8_EEENS2_5mutexEE16invocation_stateEEE(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15170:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_1a5f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a5f0:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

declare i32 @unknown_1a800() local_unnamed_addr

declare i32 @unknown_1a820(i32, i32) local_unnamed_addr

declare i32 @unknown_1aa80(i32, i32) local_unnamed_addr

declare i32 @unknown_1b1b0(i32, i32) local_unnamed_addr

declare i32 @unknown_1b2a0(i32, i32) local_unnamed_addr

declare i32 @unknown_1b3e0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_154e0(i32, i32) local_unnamed_addr

declare i32 @unknown_15640(i32) local_unnamed_addr

declare i32 @unknown_156a0(i32) local_unnamed_addr

declare i32 @unknown_157e0(i32, i32) local_unnamed_addr

declare i32 @unknown_1581e() local_unnamed_addr

declare i32 @unknown_158c0(i32, i32) local_unnamed_addr

declare i32 @unknown_15a30(i32, i32) local_unnamed_addr

declare i32 @unknown_15a66() local_unnamed_addr

declare i32 @unknown_15a70(i32) local_unnamed_addr

declare i32 @unknown_15a9a() local_unnamed_addr

declare i32 @unknown_15ace() local_unnamed_addr

declare i32 @unknown_15af0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_15b36() local_unnamed_addr

declare i32 @unknown_15c10(i32) local_unnamed_addr

declare i32 @unknown_15cd0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16400(i32, i32) local_unnamed_addr

declare i32 @unknown_16530(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_165e0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16760(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_167c0(i32, i32) local_unnamed_addr

declare i32 @unknown_16860(i32) local_unnamed_addr

declare i32 @unknown_16940(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16b10(i32) local_unnamed_addr

declare i32 @unknown_16c00(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_16ef0(i32, i32) local_unnamed_addr

declare i32 @unknown_17130(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_171b0(i32) local_unnamed_addr

declare i32 @unknown_172e0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_176b0(i32, i32) local_unnamed_addr

declare i32 @unknown_17770(i32) local_unnamed_addr

declare i32 @unknown_17b90(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_17cb0(i32, i32) local_unnamed_addr

declare i32 @unknown_17d10(i32, i32) local_unnamed_addr

declare i32 @unknown_17e60(i32, i32) local_unnamed_addr

declare i32 @unknown_18050(i32, i32) local_unnamed_addr

declare i32 @unknown_182e0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18d20(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_18f40(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_19010(i32, i32) local_unnamed_addr

declare i32 @unknown_19180(i32, i32) local_unnamed_addr

declare i32 @unknown_191e0() local_unnamed_addr

declare i32 @unknown_19a60(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_19d20(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a2e0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1a540(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1c4c0(i32) local_unnamed_addr

declare i32 @unknown_1d420() local_unnamed_addr

declare i32 @unknown_1d580(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1d6c0() local_unnamed_addr

declare i32 @unknown_1d700(i32, i32) local_unnamed_addr

declare i32 @unknown_1d820(i32, i32) local_unnamed_addr

declare i32 @unknown_1dca0() local_unnamed_addr

declare i32 @unknown_1e500(i32, i32) local_unnamed_addr

declare i32 @unknown_1e570(i32, i32) local_unnamed_addr

declare i32 @unknown_1e600(i32, i32) local_unnamed_addr

declare i32 @unknown_1ea60(i32, i32) local_unnamed_addr

declare i32 @unknown_1eaf0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ebf0(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1ed30(i32, i32) local_unnamed_addr

declare i32 @unknown_1f190(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_1f380(i32) local_unnamed_addr

declare i32 @unknown_1ff10(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_20200(i32, i32) local_unnamed_addr

declare i32 @unknown_20370() local_unnamed_addr

declare i32 @unknown_20b90(i32, i32) local_unnamed_addr

declare i32 @unknown_20dd0(i32) local_unnamed_addr

declare i32 @unknown_20fa0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_211c0(i32, i32) local_unnamed_addr

declare i32 @unknown_213b0(i32, i32) local_unnamed_addr

declare i32 @unknown_216a0(i32, i32) local_unnamed_addr

declare i32 @unknown_21b60(i32) local_unnamed_addr

declare i32 @unknown_22370(i32, i32) local_unnamed_addr

declare i32 @unknown_22610(i32, i32) local_unnamed_addr

declare i32 @unknown_227e0(i32) local_unnamed_addr

declare i32 @unknown_22f10(i32, i32) local_unnamed_addr

declare i32 @unknown_236b0(i32, i32) local_unnamed_addr

declare i32 @unknown_238a0(i32, i32) local_unnamed_addr

declare i32 @unknown_239a0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_23fb0(i32) local_unnamed_addr

declare i32 @unknown_244b0(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_244f0(i32, i32) local_unnamed_addr

declare i32 @unknown_245c0(i32, i32) local_unnamed_addr

declare i32 @unknown_24650(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25270(i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_254b0(i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_25740(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26460(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_26500(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_276c0(i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_27820(i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_27a40(i32, i32, i32, i32, i32, i32) local_unnamed_addr

declare i32 @unknown_28180(i32, i32, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr

define i32 @function_323840f() local_unnamed_addr {
dec_label_pc_323840f:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_72d3390c() local_unnamed_addr {
dec_label_pc_72d3390c:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_89000000() local_unnamed_addr {
dec_label_pc_89000000:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8d01174e() local_unnamed_addr {
dec_label_pc_8d01174e:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_8d902c8d(i32 %arg1) local_unnamed_addr {
dec_label_pc_8d902c8d:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp
}

define i32 @function_ec83edea() local_unnamed_addr {
dec_label_pc_ec83edea:
  %tmp = load i32, i32* @eax, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 0, { 0, 323, 1, 605, 131, 2, 67, 606, 3, 607, 115, 608, 610, 611, 116, 609, 177, 498, 132, 173, 133, 224, 225, 4, 354, 355, 356, 519, 521, 357, 358, 520, 226, 420, 359, 360, 178, 362, 361, 179, 363, 364, 366, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 180, 334, 227, 127, 228, 229, 230, 231, 232, 233, 117, 234, 5, 235, 236, 389, 390, 391, 392, 393, 134, 181, 394, 395, 396, 237, 238, 68, 296, 239, 240, 241, 6, 297, 298, 242, 243, 249, 244, 245, 135, 246, 69, 247, 248, 250, 251, 252, 182, 397, 398, 399, 70, 401, 400, 402, 136, 403, 404, 183, 126, 406, 405, 407, 184, 408, 137, 409, 185, 410, 138, 411, 412, 413, 72, 414, 186, 71, 415, 416, 417, 418, 419, 73, 7, 128, 139, 174, 301, 253, 8, 254, 255, 256, 257, 59, 258, 58, 259, 260, 261, 262, 9, 263, 264, 265, 266, 10, 421, 422, 267, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 437, 440, 438, 441, 442, 268, 269, 443, 444, 448, 449, 450, 445, 446, 447, 451, 74, 452, 453, 75, 454, 455, 456, 457, 458, 460, 459, 461, 462, 463, 464, 465, 466, 467, 270, 468, 469, 470, 471, 140, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 482, 483, 485, 486, 487, 488, 490, 491, 492, 77, 78, 493, 187, 494, 495, 76, 79, 489, 496, 188, 189, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 190, 508, 509, 510, 511, 512, 513, 514, 191, 141, 516, 271, 272, 273, 515, 129, 517, 192, 274, 275, 276, 277, 518, 668, 669, 522, 142, 523, 524, 525, 278, 681, 279, 280, 281, 282, 526, 527, 193, 11, 528, 80, 529, 81, 530, 194, 531, 532, 533, 534, 612, 613, 118, 82, 535, 84, 120, 122, 121, 119, 536, 537, 538, 539, 540, 83, 541, 85, 542, 175, 195, 196, 143, 283, 86, 284, 285, 286, 287, 288, 88, 87, 543, 544, 545, 546, 547, 197, 548, 198, 289, 123, 89, 290, 90, 124, 291, 292, 293, 294, 295, 549, 550, 551, 552, 91, 553, 554, 299, 300, 302, 303, 555, 556, 12, 13, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 14, 15, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 144, 585, 304, 305, 306, 584, 145, 587, 588, 586, 589, 590, 199, 307, 308, 591, 146, 92, 147, 650, 651, 148, 652, 309, 592, 698, 60, 699, 700, 701, 702, 200, 310, 65, 311, 312, 313, 653, 62, 654, 655, 656, 657, 658, 659, 61, 660, 661, 662, 663, 664, 201, 314, 315, 316, 16, 703, 63, 704, 705, 706, 707, 202, 317, 318, 319, 320, 17, 149, 93, 150, 665, 666, 151, 667, 593, 66, 152, 594, 595, 596, 597, 94, 598, 600, 599, 203, 153, 95, 602, 204, 601, 603, 604, 321, 670, 96, 671, 97, 672, 154, 677, 673, 98, 674, 99, 675, 100, 676, 102, 678, 101, 679, 680, 205, 614, 615, 616, 322, 708, 709, 324, 710, 711, 712, 713, 18, 19, 325, 326, 327, 617, 618, 619, 103, 714, 206, 328, 20, 329, 21, 620, 621, 330, 331, 332, 333, 104, 622, 623, 624, 625, 626, 207, 208, 627, 155, 209, 22, 628, 210, 335, 336, 23, 24, 25, 629, 211, 630, 631, 632, 633, 125, 634, 130, 635, 636, 637, 26, 638, 212, 639, 27, 640, 213, 337, 28, 338, 641, 642, 643, 644, 214, 339, 645, 646, 340, 64, 29, 30, 105, 647, 341, 31, 342, 32, 343, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 344, 48, 49, 50, 648, 51, 52, 649, 53, 54, 55, 56, 106, 107, 156, 215, 345, 216, 157, 346, 217, 682, 683, 684, 685, 686, 687, 347, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 218, 348, 688, 689, 108, 109, 110, 111, 691, 692, 219, 57, 693, 690, 694, 220, 221, 222, 349, 112, 113, 223, 176, 114, 350, 351, 352, 353, 695, 696, 697, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 728, 729, 730, 731, 732, 733, 734, 735 }
  uselistorder i32* @eax, { 105, 112, 75, 130, 214, 76, 313, 325, 127, 350, 59, 154, 531, 532, 533, 155, 151, 153, 534, 152, 60, 535, 536, 797, 332, 694, 695, 327, 798, 701, 696, 2, 328, 329, 697, 698, 331, 700, 330, 699, 642, 286, 647, 218, 217, 216, 573, 574, 419, 799, 575, 219, 576, 293, 292, 248, 62, 294, 660, 608, 609, 611, 249, 220, 221, 577, 662, 663, 661, 578, 579, 1, 61, 430, 610, 580, 222, 581, 223, 582, 583, 431, 63, 584, 224, 225, 586, 587, 3, 588, 585, 589, 65, 349, 347, 66, 348, 719, 720, 721, 432, 433, 552, 553, 64, 434, 435, 67, 436, 551, 226, 228, 227, 4, 590, 591, 229, 230, 592, 437, 233, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 73, 72, 423, 5, 458, 459, 424, 87, 501, 84, 467, 425, 456, 231, 457, 70, 460, 461, 462, 463, 464, 113, 118, 502, 503, 504, 505, 506, 507, 508, 509, 510, 465, 69, 466, 77, 6, 468, 7, 71, 74, 78, 79, 125, 80, 474, 469, 470, 471, 472, 473, 519, 520, 83, 85, 475, 88, 8, 476, 86, 81, 232, 82, 9, 119, 500, 68, 593, 594, 234, 235, 595, 89, 236, 237, 596, 597, 238, 239, 598, 599, 240, 243, 600, 242, 241, 601, 244, 602, 603, 604, 245, 246, 10, 11, 605, 606, 247, 607, 90, 91, 521, 522, 523, 12, 126, 92, 13, 477, 478, 95, 93, 94, 479, 262, 260, 289, 651, 258, 263, 270, 250, 257, 101, 97, 480, 612, 256, 613, 57, 614, 14, 255, 254, 615, 251, 58, 616, 100, 481, 252, 15, 253, 16, 259, 618, 619, 617, 620, 261, 269, 621, 622, 264, 266, 623, 624, 265, 96, 99, 98, 17, 625, 626, 627, 267, 268, 628, 629, 630, 631, 279, 273, 18, 277, 280, 271, 102, 276, 19, 278, 482, 20, 632, 275, 633, 272, 274, 634, 635, 281, 636, 638, 639, 637, 640, 284, 282, 104, 283, 641, 483, 484, 485, 103, 643, 644, 285, 645, 646, 287, 648, 649, 650, 288, 652, 653, 654, 655, 656, 290, 657, 291, 658, 659, 107, 108, 486, 106, 21, 22, 487, 664, 297, 666, 295, 296, 667, 665, 668, 669, 298, 299, 670, 300, 671, 109, 23, 488, 110, 489, 490, 111, 415, 787, 788, 789, 491, 416, 167, 546, 24, 492, 114, 493, 494, 495, 426, 795, 796, 417, 334, 308, 306, 304, 307, 301, 310, 302, 303, 305, 25, 672, 673, 309, 674, 312, 335, 336, 704, 675, 676, 677, 311, 678, 115, 26, 496, 679, 497, 116, 498, 499, 314, 315, 27, 28, 680, 681, 316, 682, 317, 683, 29, 318, 684, 511, 512, 513, 514, 121, 122, 120, 117, 427, 123, 515, 516, 517, 525, 518, 124, 524, 128, 129, 526, 319, 685, 320, 30, 321, 686, 687, 131, 132, 31, 402, 778, 133, 32, 134, 135, 136, 140, 137, 141, 33, 527, 0, 142, 144, 139, 138, 143, 145, 146, 147, 403, 779, 148, 528, 324, 688, 34, 322, 689, 690, 691, 323, 326, 692, 693, 149, 529, 150, 333, 530, 702, 703, 405, 407, 408, 781, 35, 36, 782, 406, 783, 409, 410, 784, 785, 337, 705, 706, 338, 707, 537, 538, 800, 801, 539, 156, 339, 708, 709, 418, 157, 159, 540, 802, 158, 541, 37, 803, 160, 161, 542, 164, 162, 163, 165, 543, 344, 341, 544, 710, 711, 340, 545, 343, 713, 714, 342, 712, 166, 715, 169, 168, 38, 170, 547, 548, 345, 716, 346, 39, 717, 421, 422, 718, 171, 172, 173, 351, 549, 722, 723, 550, 174, 726, 176, 554, 555, 556, 175, 40, 557, 558, 177, 365, 428, 178, 370, 41, 745, 352, 357, 179, 356, 559, 354, 42, 353, 355, 724, 180, 560, 181, 561, 358, 725, 361, 362, 376, 364, 366, 367, 369, 371, 372, 379, 373, 375, 381, 378, 383, 182, 380, 385, 382, 387, 384, 386, 186, 359, 727, 728, 729, 730, 360, 731, 732, 733, 734, 363, 43, 735, 736, 737, 738, 739, 740, 741, 368, 44, 742, 743, 744, 746, 747, 748, 749, 750, 751, 374, 45, 752, 753, 754, 377, 755, 756, 562, 757, 758, 759, 760, 761, 762, 763, 388, 183, 184, 389, 185, 764, 563, 390, 46, 765, 391, 47, 766, 392, 48, 767, 393, 49, 768, 394, 769, 770, 395, 50, 771, 396, 51, 772, 397, 52, 773, 398, 53, 774, 399, 54, 775, 400, 55, 776, 401, 56, 777, 187, 189, 564, 193, 188, 192, 190, 194, 195, 191, 196, 565, 197, 205, 566, 201, 203, 567, 199, 198, 202, 200, 204, 404, 568, 569, 780, 786, 206, 570, 420, 804, 207, 411, 790, 213, 208, 209, 210, 211, 212, 571, 412, 414, 413, 791, 792, 793, 572, 215, 794, 429 }
}

declare void @__asm_outsd(i16, i32) local_unnamed_addr

declare void @__asm_outsb(i16, i8) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr
